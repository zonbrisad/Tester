   1              		.file	"pngread.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.png_image_format,"ax",@progbits
   5              		.p2align 4
   7              	png_image_format:
   8              	.LVL0:
   9              	.LFB56:
  10              		.file 1 "fltk-1.3.4-1/png/pngread.c"
   1:fltk-1.3.4-1/png/pngread.c **** 
   2:fltk-1.3.4-1/png/pngread.c **** /* pngread.c - read a PNG file
   3:fltk-1.3.4-1/png/pngread.c ****  *
   4:fltk-1.3.4-1/png/pngread.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngread.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngread.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngread.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngread.c ****  *
   9:fltk-1.3.4-1/png/pngread.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngread.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngread.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngread.c ****  *
  13:fltk-1.3.4-1/png/pngread.c ****  * This file contains routines that an application calls directly to
  14:fltk-1.3.4-1/png/pngread.c ****  * read a PNG file or stream.
  15:fltk-1.3.4-1/png/pngread.c ****  */
  16:fltk-1.3.4-1/png/pngread.c **** 
  17:fltk-1.3.4-1/png/pngread.c **** #include "pngpriv.h"
  18:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_SIMPLIFIED_READ_SUPPORTED) && defined(PNG_STDIO_SUPPORTED)
  19:fltk-1.3.4-1/png/pngread.c **** #  include <errno.h>
  20:fltk-1.3.4-1/png/pngread.c **** #endif
  21:fltk-1.3.4-1/png/pngread.c **** 
  22:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SUPPORTED
  23:fltk-1.3.4-1/png/pngread.c **** 
  24:fltk-1.3.4-1/png/pngread.c **** /* Create a PNG structure for reading, and allocate any memory needed. */
  25:fltk-1.3.4-1/png/pngread.c **** PNG_FUNCTION(png_structp,PNGAPI
  26:fltk-1.3.4-1/png/pngread.c **** png_create_read_struct,(png_const_charp user_png_ver, png_voidp error_ptr,
  27:fltk-1.3.4-1/png/pngread.c ****     png_error_ptr error_fn, png_error_ptr warn_fn),PNG_ALLOCATED)
  28:fltk-1.3.4-1/png/pngread.c **** {
  29:fltk-1.3.4-1/png/pngread.c **** #ifndef PNG_USER_MEM_SUPPORTED
  30:fltk-1.3.4-1/png/pngread.c ****    png_structp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
  31:fltk-1.3.4-1/png/pngread.c ****       error_fn, warn_fn, NULL, NULL, NULL);
  32:fltk-1.3.4-1/png/pngread.c **** #else
  33:fltk-1.3.4-1/png/pngread.c ****    return png_create_read_struct_2(user_png_ver, error_ptr, error_fn,
  34:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
  35:fltk-1.3.4-1/png/pngread.c **** }
  36:fltk-1.3.4-1/png/pngread.c **** 
  37:fltk-1.3.4-1/png/pngread.c **** /* Alternate create PNG structure for reading, and allocate any memory
  38:fltk-1.3.4-1/png/pngread.c ****  * needed.
  39:fltk-1.3.4-1/png/pngread.c ****  */
  40:fltk-1.3.4-1/png/pngread.c **** PNG_FUNCTION(png_structp,PNGAPI
  41:fltk-1.3.4-1/png/pngread.c **** png_create_read_struct_2,(png_const_charp user_png_ver, png_voidp error_ptr,
  42:fltk-1.3.4-1/png/pngread.c ****     png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr,
  43:fltk-1.3.4-1/png/pngread.c ****     png_malloc_ptr malloc_fn, png_free_ptr free_fn),PNG_ALLOCATED)
  44:fltk-1.3.4-1/png/pngread.c **** {
  45:fltk-1.3.4-1/png/pngread.c ****    png_structp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
  46:fltk-1.3.4-1/png/pngread.c ****       error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
  47:fltk-1.3.4-1/png/pngread.c **** #endif /* USER_MEM */
  48:fltk-1.3.4-1/png/pngread.c **** 
  49:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr != NULL)
  50:fltk-1.3.4-1/png/pngread.c ****    {
  51:fltk-1.3.4-1/png/pngread.c ****       png_ptr->mode = PNG_IS_READ_STRUCT;
  52:fltk-1.3.4-1/png/pngread.c **** 
  53:fltk-1.3.4-1/png/pngread.c ****       /* Added in libpng-1.6.0; this can be used to detect a read structure if
  54:fltk-1.3.4-1/png/pngread.c ****        * required (it will be zero in a write structure.)
  55:fltk-1.3.4-1/png/pngread.c ****        */
  56:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_SEQUENTIAL_READ_SUPPORTED
  57:fltk-1.3.4-1/png/pngread.c ****          png_ptr->IDAT_read_size = PNG_IDAT_READ_SIZE;
  58:fltk-1.3.4-1/png/pngread.c **** #     endif
  59:fltk-1.3.4-1/png/pngread.c **** 
  60:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_BENIGN_READ_ERRORS_SUPPORTED
  61:fltk-1.3.4-1/png/pngread.c ****          png_ptr->flags |= PNG_FLAG_BENIGN_ERRORS_WARN;
  62:fltk-1.3.4-1/png/pngread.c **** 
  63:fltk-1.3.4-1/png/pngread.c ****          /* In stable builds only warn if an application error can be completely
  64:fltk-1.3.4-1/png/pngread.c ****           * handled.
  65:fltk-1.3.4-1/png/pngread.c ****           */
  66:fltk-1.3.4-1/png/pngread.c **** #        if PNG_LIBPNG_BUILD_BASE_TYPE >= PNG_LIBPNG_BUILD_RC
  67:fltk-1.3.4-1/png/pngread.c ****             png_ptr->flags |= PNG_FLAG_APP_WARNINGS_WARN;
  68:fltk-1.3.4-1/png/pngread.c **** #        endif
  69:fltk-1.3.4-1/png/pngread.c **** #     endif
  70:fltk-1.3.4-1/png/pngread.c **** 
  71:fltk-1.3.4-1/png/pngread.c ****       /* TODO: delay this, it can be done in png_init_io (if the app doesn't
  72:fltk-1.3.4-1/png/pngread.c ****        * do it itself) avoiding setting the default function if it is not
  73:fltk-1.3.4-1/png/pngread.c ****        * required.
  74:fltk-1.3.4-1/png/pngread.c ****        */
  75:fltk-1.3.4-1/png/pngread.c ****       png_set_read_fn(png_ptr, NULL, NULL);
  76:fltk-1.3.4-1/png/pngread.c ****    }
  77:fltk-1.3.4-1/png/pngread.c **** 
  78:fltk-1.3.4-1/png/pngread.c ****    return png_ptr;
  79:fltk-1.3.4-1/png/pngread.c **** }
  80:fltk-1.3.4-1/png/pngread.c **** 
  81:fltk-1.3.4-1/png/pngread.c **** 
  82:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
  83:fltk-1.3.4-1/png/pngread.c **** /* Read the information before the actual image data.  This has been
  84:fltk-1.3.4-1/png/pngread.c ****  * changed in v0.90 to allow reading a file that already has the magic
  85:fltk-1.3.4-1/png/pngread.c ****  * bytes read from the stream.  You can tell libpng how many bytes have
  86:fltk-1.3.4-1/png/pngread.c ****  * been read from the beginning of the stream (up to the maximum of 8)
  87:fltk-1.3.4-1/png/pngread.c ****  * via png_set_sig_bytes(), and we will only check the remaining bytes
  88:fltk-1.3.4-1/png/pngread.c ****  * here.  The application can then have access to the signature bytes we
  89:fltk-1.3.4-1/png/pngread.c ****  * read if it is determined that this isn't a valid PNG file.
  90:fltk-1.3.4-1/png/pngread.c ****  */
  91:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
  92:fltk-1.3.4-1/png/pngread.c **** png_read_info(png_structrp png_ptr, png_inforp info_ptr)
  93:fltk-1.3.4-1/png/pngread.c **** {
  94:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
  95:fltk-1.3.4-1/png/pngread.c ****    int keep;
  96:fltk-1.3.4-1/png/pngread.c **** #endif
  97:fltk-1.3.4-1/png/pngread.c **** 
  98:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_info");
  99:fltk-1.3.4-1/png/pngread.c **** 
 100:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL || info_ptr == NULL)
 101:fltk-1.3.4-1/png/pngread.c ****       return;
 102:fltk-1.3.4-1/png/pngread.c **** 
 103:fltk-1.3.4-1/png/pngread.c ****    /* Read and check the PNG file signature. */
 104:fltk-1.3.4-1/png/pngread.c ****    png_read_sig(png_ptr, info_ptr);
 105:fltk-1.3.4-1/png/pngread.c **** 
 106:fltk-1.3.4-1/png/pngread.c ****    for (;;)
 107:fltk-1.3.4-1/png/pngread.c ****    {
 108:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 length = png_read_chunk_header(png_ptr);
 109:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 110:fltk-1.3.4-1/png/pngread.c **** 
 111:fltk-1.3.4-1/png/pngread.c ****       /* IDAT logic needs to happen here to simplify getting the two flags
 112:fltk-1.3.4-1/png/pngread.c ****        * right.
 113:fltk-1.3.4-1/png/pngread.c ****        */
 114:fltk-1.3.4-1/png/pngread.c ****       if (chunk_name == png_IDAT)
 115:fltk-1.3.4-1/png/pngread.c ****       {
 116:fltk-1.3.4-1/png/pngread.c ****          if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
 117:fltk-1.3.4-1/png/pngread.c ****             png_chunk_error(png_ptr, "Missing IHDR before IDAT");
 118:fltk-1.3.4-1/png/pngread.c **** 
 119:fltk-1.3.4-1/png/pngread.c ****          else if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE &&
 120:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_PLTE) == 0)
 121:fltk-1.3.4-1/png/pngread.c ****             png_chunk_error(png_ptr, "Missing PLTE before IDAT");
 122:fltk-1.3.4-1/png/pngread.c **** 
 123:fltk-1.3.4-1/png/pngread.c ****          else if ((png_ptr->mode & PNG_AFTER_IDAT) != 0)
 124:fltk-1.3.4-1/png/pngread.c ****             png_chunk_benign_error(png_ptr, "Too many IDATs found");
 125:fltk-1.3.4-1/png/pngread.c **** 
 126:fltk-1.3.4-1/png/pngread.c ****          png_ptr->mode |= PNG_HAVE_IDAT;
 127:fltk-1.3.4-1/png/pngread.c ****       }
 128:fltk-1.3.4-1/png/pngread.c **** 
 129:fltk-1.3.4-1/png/pngread.c ****       else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
 130:fltk-1.3.4-1/png/pngread.c ****          png_ptr->mode |= PNG_AFTER_IDAT;
 131:fltk-1.3.4-1/png/pngread.c **** 
 132:fltk-1.3.4-1/png/pngread.c ****       /* This should be a binary subdivision search or a hash for
 133:fltk-1.3.4-1/png/pngread.c ****        * matching the chunk name rather than a linear search.
 134:fltk-1.3.4-1/png/pngread.c ****        */
 135:fltk-1.3.4-1/png/pngread.c ****       if (chunk_name == png_IHDR)
 136:fltk-1.3.4-1/png/pngread.c ****          png_handle_IHDR(png_ptr, info_ptr, length);
 137:fltk-1.3.4-1/png/pngread.c **** 
 138:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_IEND)
 139:fltk-1.3.4-1/png/pngread.c ****          png_handle_IEND(png_ptr, info_ptr, length);
 140:fltk-1.3.4-1/png/pngread.c **** 
 141:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 142:fltk-1.3.4-1/png/pngread.c ****       else if ((keep = png_chunk_unknown_handling(png_ptr, chunk_name)) != 0)
 143:fltk-1.3.4-1/png/pngread.c ****       {
 144:fltk-1.3.4-1/png/pngread.c ****          png_handle_unknown(png_ptr, info_ptr, length, keep);
 145:fltk-1.3.4-1/png/pngread.c **** 
 146:fltk-1.3.4-1/png/pngread.c ****          if (chunk_name == png_PLTE)
 147:fltk-1.3.4-1/png/pngread.c ****             png_ptr->mode |= PNG_HAVE_PLTE;
 148:fltk-1.3.4-1/png/pngread.c **** 
 149:fltk-1.3.4-1/png/pngread.c ****          else if (chunk_name == png_IDAT)
 150:fltk-1.3.4-1/png/pngread.c ****          {
 151:fltk-1.3.4-1/png/pngread.c ****             png_ptr->idat_size = 0; /* It has been consumed */
 152:fltk-1.3.4-1/png/pngread.c ****             break;
 153:fltk-1.3.4-1/png/pngread.c ****          }
 154:fltk-1.3.4-1/png/pngread.c ****       }
 155:fltk-1.3.4-1/png/pngread.c **** #endif
 156:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_PLTE)
 157:fltk-1.3.4-1/png/pngread.c ****          png_handle_PLTE(png_ptr, info_ptr, length);
 158:fltk-1.3.4-1/png/pngread.c **** 
 159:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_IDAT)
 160:fltk-1.3.4-1/png/pngread.c ****       {
 161:fltk-1.3.4-1/png/pngread.c ****          png_ptr->idat_size = length;
 162:fltk-1.3.4-1/png/pngread.c ****          break;
 163:fltk-1.3.4-1/png/pngread.c ****       }
 164:fltk-1.3.4-1/png/pngread.c **** 
 165:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_bKGD_SUPPORTED
 166:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_bKGD)
 167:fltk-1.3.4-1/png/pngread.c ****          png_handle_bKGD(png_ptr, info_ptr, length);
 168:fltk-1.3.4-1/png/pngread.c **** #endif
 169:fltk-1.3.4-1/png/pngread.c **** 
 170:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_cHRM_SUPPORTED
 171:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_cHRM)
 172:fltk-1.3.4-1/png/pngread.c ****          png_handle_cHRM(png_ptr, info_ptr, length);
 173:fltk-1.3.4-1/png/pngread.c **** #endif
 174:fltk-1.3.4-1/png/pngread.c **** 
 175:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_gAMA_SUPPORTED
 176:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_gAMA)
 177:fltk-1.3.4-1/png/pngread.c ****          png_handle_gAMA(png_ptr, info_ptr, length);
 178:fltk-1.3.4-1/png/pngread.c **** #endif
 179:fltk-1.3.4-1/png/pngread.c **** 
 180:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_hIST_SUPPORTED
 181:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_hIST)
 182:fltk-1.3.4-1/png/pngread.c ****          png_handle_hIST(png_ptr, info_ptr, length);
 183:fltk-1.3.4-1/png/pngread.c **** #endif
 184:fltk-1.3.4-1/png/pngread.c **** 
 185:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_oFFs_SUPPORTED
 186:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_oFFs)
 187:fltk-1.3.4-1/png/pngread.c ****          png_handle_oFFs(png_ptr, info_ptr, length);
 188:fltk-1.3.4-1/png/pngread.c **** #endif
 189:fltk-1.3.4-1/png/pngread.c **** 
 190:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_pCAL_SUPPORTED
 191:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_pCAL)
 192:fltk-1.3.4-1/png/pngread.c ****          png_handle_pCAL(png_ptr, info_ptr, length);
 193:fltk-1.3.4-1/png/pngread.c **** #endif
 194:fltk-1.3.4-1/png/pngread.c **** 
 195:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sCAL_SUPPORTED
 196:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sCAL)
 197:fltk-1.3.4-1/png/pngread.c ****          png_handle_sCAL(png_ptr, info_ptr, length);
 198:fltk-1.3.4-1/png/pngread.c **** #endif
 199:fltk-1.3.4-1/png/pngread.c **** 
 200:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_pHYs_SUPPORTED
 201:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_pHYs)
 202:fltk-1.3.4-1/png/pngread.c ****          png_handle_pHYs(png_ptr, info_ptr, length);
 203:fltk-1.3.4-1/png/pngread.c **** #endif
 204:fltk-1.3.4-1/png/pngread.c **** 
 205:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sBIT_SUPPORTED
 206:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sBIT)
 207:fltk-1.3.4-1/png/pngread.c ****          png_handle_sBIT(png_ptr, info_ptr, length);
 208:fltk-1.3.4-1/png/pngread.c **** #endif
 209:fltk-1.3.4-1/png/pngread.c **** 
 210:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sRGB_SUPPORTED
 211:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sRGB)
 212:fltk-1.3.4-1/png/pngread.c ****          png_handle_sRGB(png_ptr, info_ptr, length);
 213:fltk-1.3.4-1/png/pngread.c **** #endif
 214:fltk-1.3.4-1/png/pngread.c **** 
 215:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_iCCP_SUPPORTED
 216:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_iCCP)
 217:fltk-1.3.4-1/png/pngread.c ****          png_handle_iCCP(png_ptr, info_ptr, length);
 218:fltk-1.3.4-1/png/pngread.c **** #endif
 219:fltk-1.3.4-1/png/pngread.c **** 
 220:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sPLT_SUPPORTED
 221:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sPLT)
 222:fltk-1.3.4-1/png/pngread.c ****          png_handle_sPLT(png_ptr, info_ptr, length);
 223:fltk-1.3.4-1/png/pngread.c **** #endif
 224:fltk-1.3.4-1/png/pngread.c **** 
 225:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_tEXt_SUPPORTED
 226:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_tEXt)
 227:fltk-1.3.4-1/png/pngread.c ****          png_handle_tEXt(png_ptr, info_ptr, length);
 228:fltk-1.3.4-1/png/pngread.c **** #endif
 229:fltk-1.3.4-1/png/pngread.c **** 
 230:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_tIME_SUPPORTED
 231:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_tIME)
 232:fltk-1.3.4-1/png/pngread.c ****          png_handle_tIME(png_ptr, info_ptr, length);
 233:fltk-1.3.4-1/png/pngread.c **** #endif
 234:fltk-1.3.4-1/png/pngread.c **** 
 235:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_tRNS_SUPPORTED
 236:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_tRNS)
 237:fltk-1.3.4-1/png/pngread.c ****          png_handle_tRNS(png_ptr, info_ptr, length);
 238:fltk-1.3.4-1/png/pngread.c **** #endif
 239:fltk-1.3.4-1/png/pngread.c **** 
 240:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_zTXt_SUPPORTED
 241:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_zTXt)
 242:fltk-1.3.4-1/png/pngread.c ****          png_handle_zTXt(png_ptr, info_ptr, length);
 243:fltk-1.3.4-1/png/pngread.c **** #endif
 244:fltk-1.3.4-1/png/pngread.c **** 
 245:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_iTXt_SUPPORTED
 246:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_iTXt)
 247:fltk-1.3.4-1/png/pngread.c ****          png_handle_iTXt(png_ptr, info_ptr, length);
 248:fltk-1.3.4-1/png/pngread.c **** #endif
 249:fltk-1.3.4-1/png/pngread.c **** 
 250:fltk-1.3.4-1/png/pngread.c ****       else
 251:fltk-1.3.4-1/png/pngread.c ****          png_handle_unknown(png_ptr, info_ptr, length,
 252:fltk-1.3.4-1/png/pngread.c ****             PNG_HANDLE_CHUNK_AS_DEFAULT);
 253:fltk-1.3.4-1/png/pngread.c ****    }
 254:fltk-1.3.4-1/png/pngread.c **** }
 255:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 256:fltk-1.3.4-1/png/pngread.c **** 
 257:fltk-1.3.4-1/png/pngread.c **** /* Optional call to update the users info_ptr structure */
 258:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
 259:fltk-1.3.4-1/png/pngread.c **** png_read_update_info(png_structrp png_ptr, png_inforp info_ptr)
 260:fltk-1.3.4-1/png/pngread.c **** {
 261:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_update_info");
 262:fltk-1.3.4-1/png/pngread.c **** 
 263:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr != NULL)
 264:fltk-1.3.4-1/png/pngread.c ****    {
 265:fltk-1.3.4-1/png/pngread.c ****       if ((png_ptr->flags & PNG_FLAG_ROW_INIT) == 0)
 266:fltk-1.3.4-1/png/pngread.c ****       {
 267:fltk-1.3.4-1/png/pngread.c ****          png_read_start_row(png_ptr);
 268:fltk-1.3.4-1/png/pngread.c **** 
 269:fltk-1.3.4-1/png/pngread.c **** #        ifdef PNG_READ_TRANSFORMS_SUPPORTED
 270:fltk-1.3.4-1/png/pngread.c ****             png_read_transform_info(png_ptr, info_ptr);
 271:fltk-1.3.4-1/png/pngread.c **** #        else
 272:fltk-1.3.4-1/png/pngread.c ****             PNG_UNUSED(info_ptr)
 273:fltk-1.3.4-1/png/pngread.c **** #        endif
 274:fltk-1.3.4-1/png/pngread.c ****       }
 275:fltk-1.3.4-1/png/pngread.c **** 
 276:fltk-1.3.4-1/png/pngread.c ****       /* New in 1.6.0 this avoids the bug of doing the initializations twice */
 277:fltk-1.3.4-1/png/pngread.c ****       else
 278:fltk-1.3.4-1/png/pngread.c ****          png_app_error(png_ptr,
 279:fltk-1.3.4-1/png/pngread.c ****             "png_read_update_info/png_start_read_image: duplicate call");
 280:fltk-1.3.4-1/png/pngread.c ****    }
 281:fltk-1.3.4-1/png/pngread.c **** }
 282:fltk-1.3.4-1/png/pngread.c **** 
 283:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
 284:fltk-1.3.4-1/png/pngread.c **** /* Initialize palette, background, etc, after transformations
 285:fltk-1.3.4-1/png/pngread.c ****  * are set, but before any reading takes place.  This allows
 286:fltk-1.3.4-1/png/pngread.c ****  * the user to obtain a gamma-corrected palette, for example.
 287:fltk-1.3.4-1/png/pngread.c ****  * If the user doesn't call this, we will do it ourselves.
 288:fltk-1.3.4-1/png/pngread.c ****  */
 289:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
 290:fltk-1.3.4-1/png/pngread.c **** png_start_read_image(png_structrp png_ptr)
 291:fltk-1.3.4-1/png/pngread.c **** {
 292:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_start_read_image");
 293:fltk-1.3.4-1/png/pngread.c **** 
 294:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr != NULL)
 295:fltk-1.3.4-1/png/pngread.c ****    {
 296:fltk-1.3.4-1/png/pngread.c ****       if ((png_ptr->flags & PNG_FLAG_ROW_INIT) == 0)
 297:fltk-1.3.4-1/png/pngread.c ****          png_read_start_row(png_ptr);
 298:fltk-1.3.4-1/png/pngread.c **** 
 299:fltk-1.3.4-1/png/pngread.c ****       /* New in 1.6.0 this avoids the bug of doing the initializations twice */
 300:fltk-1.3.4-1/png/pngread.c ****       else
 301:fltk-1.3.4-1/png/pngread.c ****          png_app_error(png_ptr,
 302:fltk-1.3.4-1/png/pngread.c ****             "png_start_read_image/png_read_update_info: duplicate call");
 303:fltk-1.3.4-1/png/pngread.c ****    }
 304:fltk-1.3.4-1/png/pngread.c **** }
 305:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 306:fltk-1.3.4-1/png/pngread.c **** 
 307:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
 308:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
 309:fltk-1.3.4-1/png/pngread.c **** /* Undoes intrapixel differencing,
 310:fltk-1.3.4-1/png/pngread.c ****  * NOTE: this is apparently only supported in the 'sequential' reader.
 311:fltk-1.3.4-1/png/pngread.c ****  */
 312:fltk-1.3.4-1/png/pngread.c **** static void
 313:fltk-1.3.4-1/png/pngread.c **** png_do_read_intrapixel(png_row_infop row_info, png_bytep row)
 314:fltk-1.3.4-1/png/pngread.c **** {
 315:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_do_read_intrapixel");
 316:fltk-1.3.4-1/png/pngread.c **** 
 317:fltk-1.3.4-1/png/pngread.c ****    if (
 318:fltk-1.3.4-1/png/pngread.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) != 0)
 319:fltk-1.3.4-1/png/pngread.c ****    {
 320:fltk-1.3.4-1/png/pngread.c ****       int bytes_per_pixel;
 321:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 row_width = row_info->width;
 322:fltk-1.3.4-1/png/pngread.c **** 
 323:fltk-1.3.4-1/png/pngread.c ****       if (row_info->bit_depth == 8)
 324:fltk-1.3.4-1/png/pngread.c ****       {
 325:fltk-1.3.4-1/png/pngread.c ****          png_bytep rp;
 326:fltk-1.3.4-1/png/pngread.c ****          png_uint_32 i;
 327:fltk-1.3.4-1/png/pngread.c **** 
 328:fltk-1.3.4-1/png/pngread.c ****          if (row_info->color_type == PNG_COLOR_TYPE_RGB)
 329:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 3;
 330:fltk-1.3.4-1/png/pngread.c **** 
 331:fltk-1.3.4-1/png/pngread.c ****          else if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
 332:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 4;
 333:fltk-1.3.4-1/png/pngread.c **** 
 334:fltk-1.3.4-1/png/pngread.c ****          else
 335:fltk-1.3.4-1/png/pngread.c ****             return;
 336:fltk-1.3.4-1/png/pngread.c **** 
 337:fltk-1.3.4-1/png/pngread.c ****          for (i = 0, rp = row; i < row_width; i++, rp += bytes_per_pixel)
 338:fltk-1.3.4-1/png/pngread.c ****          {
 339:fltk-1.3.4-1/png/pngread.c ****             *(rp) = (png_byte)((256 + *rp + *(rp + 1)) & 0xff);
 340:fltk-1.3.4-1/png/pngread.c ****             *(rp+2) = (png_byte)((256 + *(rp + 2) + *(rp + 1)) & 0xff);
 341:fltk-1.3.4-1/png/pngread.c ****          }
 342:fltk-1.3.4-1/png/pngread.c ****       }
 343:fltk-1.3.4-1/png/pngread.c ****       else if (row_info->bit_depth == 16)
 344:fltk-1.3.4-1/png/pngread.c ****       {
 345:fltk-1.3.4-1/png/pngread.c ****          png_bytep rp;
 346:fltk-1.3.4-1/png/pngread.c ****          png_uint_32 i;
 347:fltk-1.3.4-1/png/pngread.c **** 
 348:fltk-1.3.4-1/png/pngread.c ****          if (row_info->color_type == PNG_COLOR_TYPE_RGB)
 349:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 6;
 350:fltk-1.3.4-1/png/pngread.c **** 
 351:fltk-1.3.4-1/png/pngread.c ****          else if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
 352:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 8;
 353:fltk-1.3.4-1/png/pngread.c **** 
 354:fltk-1.3.4-1/png/pngread.c ****          else
 355:fltk-1.3.4-1/png/pngread.c ****             return;
 356:fltk-1.3.4-1/png/pngread.c **** 
 357:fltk-1.3.4-1/png/pngread.c ****          for (i = 0, rp = row; i < row_width; i++, rp += bytes_per_pixel)
 358:fltk-1.3.4-1/png/pngread.c ****          {
 359:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 s0   = (*(rp    ) << 8) | *(rp + 1);
 360:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 s1   = (*(rp + 2) << 8) | *(rp + 3);
 361:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 s2   = (*(rp + 4) << 8) | *(rp + 5);
 362:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 red  = (s0 + s1 + 65536) & 0xffff;
 363:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 blue = (s2 + s1 + 65536) & 0xffff;
 364:fltk-1.3.4-1/png/pngread.c ****             *(rp    ) = (png_byte)((red >> 8) & 0xff);
 365:fltk-1.3.4-1/png/pngread.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 366:fltk-1.3.4-1/png/pngread.c ****             *(rp + 4) = (png_byte)((blue >> 8) & 0xff);
 367:fltk-1.3.4-1/png/pngread.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 368:fltk-1.3.4-1/png/pngread.c ****          }
 369:fltk-1.3.4-1/png/pngread.c ****       }
 370:fltk-1.3.4-1/png/pngread.c ****    }
 371:fltk-1.3.4-1/png/pngread.c **** }
 372:fltk-1.3.4-1/png/pngread.c **** #endif /* MNG_FEATURES */
 373:fltk-1.3.4-1/png/pngread.c **** 
 374:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
 375:fltk-1.3.4-1/png/pngread.c **** png_read_row(png_structrp png_ptr, png_bytep row, png_bytep dsp_row)
 376:fltk-1.3.4-1/png/pngread.c **** {
 377:fltk-1.3.4-1/png/pngread.c ****    png_row_info row_info;
 378:fltk-1.3.4-1/png/pngread.c **** 
 379:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
 380:fltk-1.3.4-1/png/pngread.c ****       return;
 381:fltk-1.3.4-1/png/pngread.c **** 
 382:fltk-1.3.4-1/png/pngread.c ****    png_debug2(1, "in png_read_row (row %lu, pass %d)",
 383:fltk-1.3.4-1/png/pngread.c ****        (unsigned long)png_ptr->row_number, png_ptr->pass);
 384:fltk-1.3.4-1/png/pngread.c **** 
 385:fltk-1.3.4-1/png/pngread.c ****    /* png_read_start_row sets the information (in particular iwidth) for this
 386:fltk-1.3.4-1/png/pngread.c ****     * interlace pass.
 387:fltk-1.3.4-1/png/pngread.c ****     */
 388:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->flags & PNG_FLAG_ROW_INIT) == 0)
 389:fltk-1.3.4-1/png/pngread.c ****       png_read_start_row(png_ptr);
 390:fltk-1.3.4-1/png/pngread.c **** 
 391:fltk-1.3.4-1/png/pngread.c ****    /* 1.5.6: row_info moved out of png_struct to a local here. */
 392:fltk-1.3.4-1/png/pngread.c ****    row_info.width = png_ptr->iwidth; /* NOTE: width of current interlaced row */
 393:fltk-1.3.4-1/png/pngread.c ****    row_info.color_type = png_ptr->color_type;
 394:fltk-1.3.4-1/png/pngread.c ****    row_info.bit_depth = png_ptr->bit_depth;
 395:fltk-1.3.4-1/png/pngread.c ****    row_info.channels = png_ptr->channels;
 396:fltk-1.3.4-1/png/pngread.c ****    row_info.pixel_depth = png_ptr->pixel_depth;
 397:fltk-1.3.4-1/png/pngread.c ****    row_info.rowbytes = PNG_ROWBYTES(row_info.pixel_depth, row_info.width);
 398:fltk-1.3.4-1/png/pngread.c **** 
 399:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_WARNINGS_SUPPORTED
 400:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->row_number == 0 && png_ptr->pass == 0)
 401:fltk-1.3.4-1/png/pngread.c ****    {
 402:fltk-1.3.4-1/png/pngread.c ****    /* Check for transforms that have been set but were defined out */
 403:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_WRITE_INVERT_SUPPORTED) && !defined(PNG_READ_INVERT_SUPPORTED)
 404:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_INVERT_MONO) != 0)
 405:fltk-1.3.4-1/png/pngread.c ****       png_warning(png_ptr, "PNG_READ_INVERT_SUPPORTED is not defined");
 406:fltk-1.3.4-1/png/pngread.c **** #endif
 407:fltk-1.3.4-1/png/pngread.c **** 
 408:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_WRITE_FILLER_SUPPORTED) && !defined(PNG_READ_FILLER_SUPPORTED)
 409:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_FILLER) != 0)
 410:fltk-1.3.4-1/png/pngread.c ****       png_warning(png_ptr, "PNG_READ_FILLER_SUPPORTED is not defined");
 411:fltk-1.3.4-1/png/pngread.c **** #endif
 412:fltk-1.3.4-1/png/pngread.c **** 
 413:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_WRITE_PACKSWAP_SUPPORTED) && \
 414:fltk-1.3.4-1/png/pngread.c ****     !defined(PNG_READ_PACKSWAP_SUPPORTED)
 415:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_PACKSWAP) != 0)
 416:fltk-1.3.4-1/png/pngread.c ****       png_warning(png_ptr, "PNG_READ_PACKSWAP_SUPPORTED is not defined");
 417:fltk-1.3.4-1/png/pngread.c **** #endif
 418:fltk-1.3.4-1/png/pngread.c **** 
 419:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_WRITE_PACK_SUPPORTED) && !defined(PNG_READ_PACK_SUPPORTED)
 420:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_PACK) != 0)
 421:fltk-1.3.4-1/png/pngread.c ****       png_warning(png_ptr, "PNG_READ_PACK_SUPPORTED is not defined");
 422:fltk-1.3.4-1/png/pngread.c **** #endif
 423:fltk-1.3.4-1/png/pngread.c **** 
 424:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_WRITE_SHIFT_SUPPORTED) && !defined(PNG_READ_SHIFT_SUPPORTED)
 425:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_SHIFT) != 0)
 426:fltk-1.3.4-1/png/pngread.c ****       png_warning(png_ptr, "PNG_READ_SHIFT_SUPPORTED is not defined");
 427:fltk-1.3.4-1/png/pngread.c **** #endif
 428:fltk-1.3.4-1/png/pngread.c **** 
 429:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_WRITE_BGR_SUPPORTED) && !defined(PNG_READ_BGR_SUPPORTED)
 430:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_BGR) != 0)
 431:fltk-1.3.4-1/png/pngread.c ****       png_warning(png_ptr, "PNG_READ_BGR_SUPPORTED is not defined");
 432:fltk-1.3.4-1/png/pngread.c **** #endif
 433:fltk-1.3.4-1/png/pngread.c **** 
 434:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_WRITE_SWAP_SUPPORTED) && !defined(PNG_READ_SWAP_SUPPORTED)
 435:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_SWAP_BYTES) != 0)
 436:fltk-1.3.4-1/png/pngread.c ****       png_warning(png_ptr, "PNG_READ_SWAP_SUPPORTED is not defined");
 437:fltk-1.3.4-1/png/pngread.c **** #endif
 438:fltk-1.3.4-1/png/pngread.c ****    }
 439:fltk-1.3.4-1/png/pngread.c **** #endif /* WARNINGS */
 440:fltk-1.3.4-1/png/pngread.c **** 
 441:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INTERLACING_SUPPORTED
 442:fltk-1.3.4-1/png/pngread.c ****    /* If interlaced and we do not need a new row, combine row and return.
 443:fltk-1.3.4-1/png/pngread.c ****     * Notice that the pixels we have from previous rows have been transformed
 444:fltk-1.3.4-1/png/pngread.c ****     * already; we can only combine like with like (transformed or
 445:fltk-1.3.4-1/png/pngread.c ****     * untransformed) and, because of the libpng API for interlaced images, this
 446:fltk-1.3.4-1/png/pngread.c ****     * means we must transform before de-interlacing.
 447:fltk-1.3.4-1/png/pngread.c ****     */
 448:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->interlaced != 0 &&
 449:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 450:fltk-1.3.4-1/png/pngread.c ****    {
 451:fltk-1.3.4-1/png/pngread.c ****       switch (png_ptr->pass)
 452:fltk-1.3.4-1/png/pngread.c ****       {
 453:fltk-1.3.4-1/png/pngread.c ****          case 0:
 454:fltk-1.3.4-1/png/pngread.c ****             if (png_ptr->row_number & 0x07)
 455:fltk-1.3.4-1/png/pngread.c ****             {
 456:fltk-1.3.4-1/png/pngread.c ****                if (dsp_row != NULL)
 457:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 458:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 459:fltk-1.3.4-1/png/pngread.c ****                return;
 460:fltk-1.3.4-1/png/pngread.c ****             }
 461:fltk-1.3.4-1/png/pngread.c ****             break;
 462:fltk-1.3.4-1/png/pngread.c **** 
 463:fltk-1.3.4-1/png/pngread.c ****          case 1:
 464:fltk-1.3.4-1/png/pngread.c ****             if ((png_ptr->row_number & 0x07) || png_ptr->width < 5)
 465:fltk-1.3.4-1/png/pngread.c ****             {
 466:fltk-1.3.4-1/png/pngread.c ****                if (dsp_row != NULL)
 467:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 468:fltk-1.3.4-1/png/pngread.c **** 
 469:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 470:fltk-1.3.4-1/png/pngread.c ****                return;
 471:fltk-1.3.4-1/png/pngread.c ****             }
 472:fltk-1.3.4-1/png/pngread.c ****             break;
 473:fltk-1.3.4-1/png/pngread.c **** 
 474:fltk-1.3.4-1/png/pngread.c ****          case 2:
 475:fltk-1.3.4-1/png/pngread.c ****             if ((png_ptr->row_number & 0x07) != 4)
 476:fltk-1.3.4-1/png/pngread.c ****             {
 477:fltk-1.3.4-1/png/pngread.c ****                if (dsp_row != NULL && (png_ptr->row_number & 4))
 478:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 479:fltk-1.3.4-1/png/pngread.c **** 
 480:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 481:fltk-1.3.4-1/png/pngread.c ****                return;
 482:fltk-1.3.4-1/png/pngread.c ****             }
 483:fltk-1.3.4-1/png/pngread.c ****             break;
 484:fltk-1.3.4-1/png/pngread.c **** 
 485:fltk-1.3.4-1/png/pngread.c ****          case 3:
 486:fltk-1.3.4-1/png/pngread.c ****             if ((png_ptr->row_number & 3) || png_ptr->width < 3)
 487:fltk-1.3.4-1/png/pngread.c ****             {
 488:fltk-1.3.4-1/png/pngread.c ****                if (dsp_row != NULL)
 489:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 490:fltk-1.3.4-1/png/pngread.c **** 
 491:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 492:fltk-1.3.4-1/png/pngread.c ****                return;
 493:fltk-1.3.4-1/png/pngread.c ****             }
 494:fltk-1.3.4-1/png/pngread.c ****             break;
 495:fltk-1.3.4-1/png/pngread.c **** 
 496:fltk-1.3.4-1/png/pngread.c ****          case 4:
 497:fltk-1.3.4-1/png/pngread.c ****             if ((png_ptr->row_number & 3) != 2)
 498:fltk-1.3.4-1/png/pngread.c ****             {
 499:fltk-1.3.4-1/png/pngread.c ****                if (dsp_row != NULL && (png_ptr->row_number & 2))
 500:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 501:fltk-1.3.4-1/png/pngread.c **** 
 502:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 503:fltk-1.3.4-1/png/pngread.c ****                return;
 504:fltk-1.3.4-1/png/pngread.c ****             }
 505:fltk-1.3.4-1/png/pngread.c ****             break;
 506:fltk-1.3.4-1/png/pngread.c **** 
 507:fltk-1.3.4-1/png/pngread.c ****          case 5:
 508:fltk-1.3.4-1/png/pngread.c ****             if ((png_ptr->row_number & 1) || png_ptr->width < 2)
 509:fltk-1.3.4-1/png/pngread.c ****             {
 510:fltk-1.3.4-1/png/pngread.c ****                if (dsp_row != NULL)
 511:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 512:fltk-1.3.4-1/png/pngread.c **** 
 513:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 514:fltk-1.3.4-1/png/pngread.c ****                return;
 515:fltk-1.3.4-1/png/pngread.c ****             }
 516:fltk-1.3.4-1/png/pngread.c ****             break;
 517:fltk-1.3.4-1/png/pngread.c **** 
 518:fltk-1.3.4-1/png/pngread.c ****          default:
 519:fltk-1.3.4-1/png/pngread.c ****          case 6:
 520:fltk-1.3.4-1/png/pngread.c ****             if ((png_ptr->row_number & 1) == 0)
 521:fltk-1.3.4-1/png/pngread.c ****             {
 522:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 523:fltk-1.3.4-1/png/pngread.c ****                return;
 524:fltk-1.3.4-1/png/pngread.c ****             }
 525:fltk-1.3.4-1/png/pngread.c ****             break;
 526:fltk-1.3.4-1/png/pngread.c ****       }
 527:fltk-1.3.4-1/png/pngread.c ****    }
 528:fltk-1.3.4-1/png/pngread.c **** #endif
 529:fltk-1.3.4-1/png/pngread.c **** 
 530:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->mode & PNG_HAVE_IDAT) == 0)
 531:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "Invalid attempt to read row data");
 532:fltk-1.3.4-1/png/pngread.c **** 
 533:fltk-1.3.4-1/png/pngread.c ****    /* Fill the row with IDAT data: */
 534:fltk-1.3.4-1/png/pngread.c ****    png_read_IDAT_data(png_ptr, png_ptr->row_buf, row_info.rowbytes + 1);
 535:fltk-1.3.4-1/png/pngread.c **** 
 536:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->row_buf[0] > PNG_FILTER_VALUE_NONE)
 537:fltk-1.3.4-1/png/pngread.c ****    {
 538:fltk-1.3.4-1/png/pngread.c ****       if (png_ptr->row_buf[0] < PNG_FILTER_VALUE_LAST)
 539:fltk-1.3.4-1/png/pngread.c ****          png_read_filter_row(png_ptr, &row_info, png_ptr->row_buf + 1,
 540:fltk-1.3.4-1/png/pngread.c ****             png_ptr->prev_row + 1, png_ptr->row_buf[0]);
 541:fltk-1.3.4-1/png/pngread.c ****       else
 542:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "bad adaptive filter value");
 543:fltk-1.3.4-1/png/pngread.c ****    }
 544:fltk-1.3.4-1/png/pngread.c **** 
 545:fltk-1.3.4-1/png/pngread.c ****    /* libpng 1.5.6: the following line was copying png_ptr->rowbytes before
 546:fltk-1.3.4-1/png/pngread.c ****     * 1.5.6, while the buffer really is this big in current versions of libpng
 547:fltk-1.3.4-1/png/pngread.c ****     * it may not be in the future, so this was changed just to copy the
 548:fltk-1.3.4-1/png/pngread.c ****     * interlaced count:
 549:fltk-1.3.4-1/png/pngread.c ****     */
 550:fltk-1.3.4-1/png/pngread.c ****    memcpy(png_ptr->prev_row, png_ptr->row_buf, row_info.rowbytes + 1);
 551:fltk-1.3.4-1/png/pngread.c **** 
 552:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
 553:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->mng_features_permitted & PNG_FLAG_MNG_FILTER_64) != 0 &&
 554:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 555:fltk-1.3.4-1/png/pngread.c ****    {
 556:fltk-1.3.4-1/png/pngread.c ****       /* Intrapixel differencing */
 557:fltk-1.3.4-1/png/pngread.c ****       png_do_read_intrapixel(&row_info, png_ptr->row_buf + 1);
 558:fltk-1.3.4-1/png/pngread.c ****    }
 559:fltk-1.3.4-1/png/pngread.c **** #endif
 560:fltk-1.3.4-1/png/pngread.c **** 
 561:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_TRANSFORMS_SUPPORTED
 562:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->transformations)
 563:fltk-1.3.4-1/png/pngread.c ****       png_do_read_transformations(png_ptr, &row_info);
 564:fltk-1.3.4-1/png/pngread.c **** #endif
 565:fltk-1.3.4-1/png/pngread.c **** 
 566:fltk-1.3.4-1/png/pngread.c ****    /* The transformed pixel depth should match the depth now in row_info. */
 567:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->transformed_pixel_depth == 0)
 568:fltk-1.3.4-1/png/pngread.c ****    {
 569:fltk-1.3.4-1/png/pngread.c ****       png_ptr->transformed_pixel_depth = row_info.pixel_depth;
 570:fltk-1.3.4-1/png/pngread.c ****       if (row_info.pixel_depth > png_ptr->maximum_pixel_depth)
 571:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "sequential row overflow");
 572:fltk-1.3.4-1/png/pngread.c ****    }
 573:fltk-1.3.4-1/png/pngread.c **** 
 574:fltk-1.3.4-1/png/pngread.c ****    else if (png_ptr->transformed_pixel_depth != row_info.pixel_depth)
 575:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "internal sequential row size calculation error");
 576:fltk-1.3.4-1/png/pngread.c **** 
 577:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INTERLACING_SUPPORTED
 578:fltk-1.3.4-1/png/pngread.c ****    /* Expand interlaced rows to full size */
 579:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->interlaced != 0 &&
 580:fltk-1.3.4-1/png/pngread.c ****       (png_ptr->transformations & PNG_INTERLACE) != 0)
 581:fltk-1.3.4-1/png/pngread.c ****    {
 582:fltk-1.3.4-1/png/pngread.c ****       if (png_ptr->pass < 6)
 583:fltk-1.3.4-1/png/pngread.c ****          png_do_read_interlace(&row_info, png_ptr->row_buf + 1, png_ptr->pass,
 584:fltk-1.3.4-1/png/pngread.c ****             png_ptr->transformations);
 585:fltk-1.3.4-1/png/pngread.c **** 
 586:fltk-1.3.4-1/png/pngread.c ****       if (dsp_row != NULL)
 587:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, dsp_row, 1/*display*/);
 588:fltk-1.3.4-1/png/pngread.c **** 
 589:fltk-1.3.4-1/png/pngread.c ****       if (row != NULL)
 590:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, row, 0/*row*/);
 591:fltk-1.3.4-1/png/pngread.c ****    }
 592:fltk-1.3.4-1/png/pngread.c **** 
 593:fltk-1.3.4-1/png/pngread.c ****    else
 594:fltk-1.3.4-1/png/pngread.c **** #endif
 595:fltk-1.3.4-1/png/pngread.c ****    {
 596:fltk-1.3.4-1/png/pngread.c ****       if (row != NULL)
 597:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, row, -1/*ignored*/);
 598:fltk-1.3.4-1/png/pngread.c **** 
 599:fltk-1.3.4-1/png/pngread.c ****       if (dsp_row != NULL)
 600:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, dsp_row, -1/*ignored*/);
 601:fltk-1.3.4-1/png/pngread.c ****    }
 602:fltk-1.3.4-1/png/pngread.c ****    png_read_finish_row(png_ptr);
 603:fltk-1.3.4-1/png/pngread.c **** 
 604:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->read_row_fn != NULL)
 605:fltk-1.3.4-1/png/pngread.c ****       (*(png_ptr->read_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 606:fltk-1.3.4-1/png/pngread.c **** 
 607:fltk-1.3.4-1/png/pngread.c **** }
 608:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 609:fltk-1.3.4-1/png/pngread.c **** 
 610:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
 611:fltk-1.3.4-1/png/pngread.c **** /* Read one or more rows of image data.  If the image is interlaced,
 612:fltk-1.3.4-1/png/pngread.c ****  * and png_set_interlace_handling() has been called, the rows need to
 613:fltk-1.3.4-1/png/pngread.c ****  * contain the contents of the rows from the previous pass.  If the
 614:fltk-1.3.4-1/png/pngread.c ****  * image has alpha or transparency, and png_handle_alpha()[*] has been
 615:fltk-1.3.4-1/png/pngread.c ****  * called, the rows contents must be initialized to the contents of the
 616:fltk-1.3.4-1/png/pngread.c ****  * screen.
 617:fltk-1.3.4-1/png/pngread.c ****  *
 618:fltk-1.3.4-1/png/pngread.c ****  * "row" holds the actual image, and pixels are placed in it
 619:fltk-1.3.4-1/png/pngread.c ****  * as they arrive.  If the image is displayed after each pass, it will
 620:fltk-1.3.4-1/png/pngread.c ****  * appear to "sparkle" in.  "display_row" can be used to display a
 621:fltk-1.3.4-1/png/pngread.c ****  * "chunky" progressive image, with finer detail added as it becomes
 622:fltk-1.3.4-1/png/pngread.c ****  * available.  If you do not want this "chunky" display, you may pass
 623:fltk-1.3.4-1/png/pngread.c ****  * NULL for display_row.  If you do not want the sparkle display, and
 624:fltk-1.3.4-1/png/pngread.c ****  * you have not called png_handle_alpha(), you may pass NULL for rows.
 625:fltk-1.3.4-1/png/pngread.c ****  * If you have called png_handle_alpha(), and the image has either an
 626:fltk-1.3.4-1/png/pngread.c ****  * alpha channel or a transparency chunk, you must provide a buffer for
 627:fltk-1.3.4-1/png/pngread.c ****  * rows.  In this case, you do not have to provide a display_row buffer
 628:fltk-1.3.4-1/png/pngread.c ****  * also, but you may.  If the image is not interlaced, or if you have
 629:fltk-1.3.4-1/png/pngread.c ****  * not called png_set_interlace_handling(), the display_row buffer will
 630:fltk-1.3.4-1/png/pngread.c ****  * be ignored, so pass NULL to it.
 631:fltk-1.3.4-1/png/pngread.c ****  *
 632:fltk-1.3.4-1/png/pngread.c ****  * [*] png_handle_alpha() does not exist yet, as of this version of libpng
 633:fltk-1.3.4-1/png/pngread.c ****  */
 634:fltk-1.3.4-1/png/pngread.c **** 
 635:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
 636:fltk-1.3.4-1/png/pngread.c **** png_read_rows(png_structrp png_ptr, png_bytepp row,
 637:fltk-1.3.4-1/png/pngread.c ****     png_bytepp display_row, png_uint_32 num_rows)
 638:fltk-1.3.4-1/png/pngread.c **** {
 639:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i;
 640:fltk-1.3.4-1/png/pngread.c ****    png_bytepp rp;
 641:fltk-1.3.4-1/png/pngread.c ****    png_bytepp dp;
 642:fltk-1.3.4-1/png/pngread.c **** 
 643:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_rows");
 644:fltk-1.3.4-1/png/pngread.c **** 
 645:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
 646:fltk-1.3.4-1/png/pngread.c ****       return;
 647:fltk-1.3.4-1/png/pngread.c **** 
 648:fltk-1.3.4-1/png/pngread.c ****    rp = row;
 649:fltk-1.3.4-1/png/pngread.c ****    dp = display_row;
 650:fltk-1.3.4-1/png/pngread.c ****    if (rp != NULL && dp != NULL)
 651:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 652:fltk-1.3.4-1/png/pngread.c ****       {
 653:fltk-1.3.4-1/png/pngread.c ****          png_bytep rptr = *rp++;
 654:fltk-1.3.4-1/png/pngread.c ****          png_bytep dptr = *dp++;
 655:fltk-1.3.4-1/png/pngread.c **** 
 656:fltk-1.3.4-1/png/pngread.c ****          png_read_row(png_ptr, rptr, dptr);
 657:fltk-1.3.4-1/png/pngread.c ****       }
 658:fltk-1.3.4-1/png/pngread.c **** 
 659:fltk-1.3.4-1/png/pngread.c ****    else if (rp != NULL)
 660:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 661:fltk-1.3.4-1/png/pngread.c ****       {
 662:fltk-1.3.4-1/png/pngread.c ****          png_bytep rptr = *rp;
 663:fltk-1.3.4-1/png/pngread.c ****          png_read_row(png_ptr, rptr, NULL);
 664:fltk-1.3.4-1/png/pngread.c ****          rp++;
 665:fltk-1.3.4-1/png/pngread.c ****       }
 666:fltk-1.3.4-1/png/pngread.c **** 
 667:fltk-1.3.4-1/png/pngread.c ****    else if (dp != NULL)
 668:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 669:fltk-1.3.4-1/png/pngread.c ****       {
 670:fltk-1.3.4-1/png/pngread.c ****          png_bytep dptr = *dp;
 671:fltk-1.3.4-1/png/pngread.c ****          png_read_row(png_ptr, NULL, dptr);
 672:fltk-1.3.4-1/png/pngread.c ****          dp++;
 673:fltk-1.3.4-1/png/pngread.c ****       }
 674:fltk-1.3.4-1/png/pngread.c **** }
 675:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 676:fltk-1.3.4-1/png/pngread.c **** 
 677:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
 678:fltk-1.3.4-1/png/pngread.c **** /* Read the entire image.  If the image has an alpha channel or a tRNS
 679:fltk-1.3.4-1/png/pngread.c ****  * chunk, and you have called png_handle_alpha()[*], you will need to
 680:fltk-1.3.4-1/png/pngread.c ****  * initialize the image to the current image that PNG will be overlaying.
 681:fltk-1.3.4-1/png/pngread.c ****  * We set the num_rows again here, in case it was incorrectly set in
 682:fltk-1.3.4-1/png/pngread.c ****  * png_read_start_row() by a call to png_read_update_info() or
 683:fltk-1.3.4-1/png/pngread.c ****  * png_start_read_image() if png_set_interlace_handling() wasn't called
 684:fltk-1.3.4-1/png/pngread.c ****  * prior to either of these functions like it should have been.  You can
 685:fltk-1.3.4-1/png/pngread.c ****  * only call this function once.  If you desire to have an image for
 686:fltk-1.3.4-1/png/pngread.c ****  * each pass of a interlaced image, use png_read_rows() instead.
 687:fltk-1.3.4-1/png/pngread.c ****  *
 688:fltk-1.3.4-1/png/pngread.c ****  * [*] png_handle_alpha() does not exist yet, as of this version of libpng
 689:fltk-1.3.4-1/png/pngread.c ****  */
 690:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
 691:fltk-1.3.4-1/png/pngread.c **** png_read_image(png_structrp png_ptr, png_bytepp image)
 692:fltk-1.3.4-1/png/pngread.c **** {
 693:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i, image_height;
 694:fltk-1.3.4-1/png/pngread.c ****    int pass, j;
 695:fltk-1.3.4-1/png/pngread.c ****    png_bytepp rp;
 696:fltk-1.3.4-1/png/pngread.c **** 
 697:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_image");
 698:fltk-1.3.4-1/png/pngread.c **** 
 699:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
 700:fltk-1.3.4-1/png/pngread.c ****       return;
 701:fltk-1.3.4-1/png/pngread.c **** 
 702:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INTERLACING_SUPPORTED
 703:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->flags & PNG_FLAG_ROW_INIT) == 0)
 704:fltk-1.3.4-1/png/pngread.c ****    {
 705:fltk-1.3.4-1/png/pngread.c ****       pass = png_set_interlace_handling(png_ptr);
 706:fltk-1.3.4-1/png/pngread.c ****       /* And make sure transforms are initialized. */
 707:fltk-1.3.4-1/png/pngread.c ****       png_start_read_image(png_ptr);
 708:fltk-1.3.4-1/png/pngread.c ****    }
 709:fltk-1.3.4-1/png/pngread.c ****    else
 710:fltk-1.3.4-1/png/pngread.c ****    {
 711:fltk-1.3.4-1/png/pngread.c ****       if (png_ptr->interlaced != 0 &&
 712:fltk-1.3.4-1/png/pngread.c ****           (png_ptr->transformations & PNG_INTERLACE) == 0)
 713:fltk-1.3.4-1/png/pngread.c ****       {
 714:fltk-1.3.4-1/png/pngread.c ****          /* Caller called png_start_read_image or png_read_update_info without
 715:fltk-1.3.4-1/png/pngread.c ****           * first turning on the PNG_INTERLACE transform.  We can fix this here,
 716:fltk-1.3.4-1/png/pngread.c ****           * but the caller should do it!
 717:fltk-1.3.4-1/png/pngread.c ****           */
 718:fltk-1.3.4-1/png/pngread.c ****          png_warning(png_ptr, "Interlace handling should be turned on when "
 719:fltk-1.3.4-1/png/pngread.c ****             "using png_read_image");
 720:fltk-1.3.4-1/png/pngread.c ****          /* Make sure this is set correctly */
 721:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_rows = png_ptr->height;
 722:fltk-1.3.4-1/png/pngread.c ****       }
 723:fltk-1.3.4-1/png/pngread.c **** 
 724:fltk-1.3.4-1/png/pngread.c ****       /* Obtain the pass number, which also turns on the PNG_INTERLACE flag in
 725:fltk-1.3.4-1/png/pngread.c ****        * the above error case.
 726:fltk-1.3.4-1/png/pngread.c ****        */
 727:fltk-1.3.4-1/png/pngread.c ****       pass = png_set_interlace_handling(png_ptr);
 728:fltk-1.3.4-1/png/pngread.c ****    }
 729:fltk-1.3.4-1/png/pngread.c **** #else
 730:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->interlaced)
 731:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr,
 732:fltk-1.3.4-1/png/pngread.c ****           "Cannot read interlaced image -- interlace handler disabled");
 733:fltk-1.3.4-1/png/pngread.c **** 
 734:fltk-1.3.4-1/png/pngread.c ****    pass = 1;
 735:fltk-1.3.4-1/png/pngread.c **** #endif
 736:fltk-1.3.4-1/png/pngread.c **** 
 737:fltk-1.3.4-1/png/pngread.c ****    image_height=png_ptr->height;
 738:fltk-1.3.4-1/png/pngread.c **** 
 739:fltk-1.3.4-1/png/pngread.c ****    for (j = 0; j < pass; j++)
 740:fltk-1.3.4-1/png/pngread.c ****    {
 741:fltk-1.3.4-1/png/pngread.c ****       rp = image;
 742:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < image_height; i++)
 743:fltk-1.3.4-1/png/pngread.c ****       {
 744:fltk-1.3.4-1/png/pngread.c ****          png_read_row(png_ptr, *rp, NULL);
 745:fltk-1.3.4-1/png/pngread.c ****          rp++;
 746:fltk-1.3.4-1/png/pngread.c ****       }
 747:fltk-1.3.4-1/png/pngread.c ****    }
 748:fltk-1.3.4-1/png/pngread.c **** }
 749:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 750:fltk-1.3.4-1/png/pngread.c **** 
 751:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
 752:fltk-1.3.4-1/png/pngread.c **** /* Read the end of the PNG file.  Will not read past the end of the
 753:fltk-1.3.4-1/png/pngread.c ****  * file, will verify the end is accurate, and will read any comments
 754:fltk-1.3.4-1/png/pngread.c ****  * or time information at the end of the file, if info is not NULL.
 755:fltk-1.3.4-1/png/pngread.c ****  */
 756:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
 757:fltk-1.3.4-1/png/pngread.c **** png_read_end(png_structrp png_ptr, png_inforp info_ptr)
 758:fltk-1.3.4-1/png/pngread.c **** {
 759:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 760:fltk-1.3.4-1/png/pngread.c ****    int keep;
 761:fltk-1.3.4-1/png/pngread.c **** #endif
 762:fltk-1.3.4-1/png/pngread.c **** 
 763:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_end");
 764:fltk-1.3.4-1/png/pngread.c **** 
 765:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
 766:fltk-1.3.4-1/png/pngread.c ****       return;
 767:fltk-1.3.4-1/png/pngread.c **** 
 768:fltk-1.3.4-1/png/pngread.c ****    /* If png_read_end is called in the middle of reading the rows there may
 769:fltk-1.3.4-1/png/pngread.c ****     * still be pending IDAT data and an owned zstream.  Deal with this here.
 770:fltk-1.3.4-1/png/pngread.c ****     */
 771:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 772:fltk-1.3.4-1/png/pngread.c ****    if (png_chunk_unknown_handling(png_ptr, png_IDAT) == 0)
 773:fltk-1.3.4-1/png/pngread.c **** #endif
 774:fltk-1.3.4-1/png/pngread.c ****       png_read_finish_IDAT(png_ptr);
 775:fltk-1.3.4-1/png/pngread.c **** 
 776:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_CHECK_FOR_INVALID_INDEX_SUPPORTED
 777:fltk-1.3.4-1/png/pngread.c ****    /* Report invalid palette index; added at libng-1.5.10 */
 778:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE &&
 779:fltk-1.3.4-1/png/pngread.c ****       png_ptr->num_palette_max > png_ptr->num_palette)
 780:fltk-1.3.4-1/png/pngread.c ****      png_benign_error(png_ptr, "Read palette index exceeding num_palette");
 781:fltk-1.3.4-1/png/pngread.c **** #endif
 782:fltk-1.3.4-1/png/pngread.c **** 
 783:fltk-1.3.4-1/png/pngread.c ****    do
 784:fltk-1.3.4-1/png/pngread.c ****    {
 785:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 length = png_read_chunk_header(png_ptr);
 786:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 787:fltk-1.3.4-1/png/pngread.c **** 
 788:fltk-1.3.4-1/png/pngread.c ****       if (chunk_name == png_IEND)
 789:fltk-1.3.4-1/png/pngread.c ****          png_handle_IEND(png_ptr, info_ptr, length);
 790:fltk-1.3.4-1/png/pngread.c **** 
 791:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_IHDR)
 792:fltk-1.3.4-1/png/pngread.c ****          png_handle_IHDR(png_ptr, info_ptr, length);
 793:fltk-1.3.4-1/png/pngread.c **** 
 794:fltk-1.3.4-1/png/pngread.c ****       else if (info_ptr == NULL)
 795:fltk-1.3.4-1/png/pngread.c ****          png_crc_finish(png_ptr, length);
 796:fltk-1.3.4-1/png/pngread.c **** 
 797:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 798:fltk-1.3.4-1/png/pngread.c ****       else if ((keep = png_chunk_unknown_handling(png_ptr, chunk_name)) != 0)
 799:fltk-1.3.4-1/png/pngread.c ****       {
 800:fltk-1.3.4-1/png/pngread.c ****          if (chunk_name == png_IDAT)
 801:fltk-1.3.4-1/png/pngread.c ****          {
 802:fltk-1.3.4-1/png/pngread.c ****             if ((length > 0) ||
 803:fltk-1.3.4-1/png/pngread.c ****                 (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 804:fltk-1.3.4-1/png/pngread.c ****                png_benign_error(png_ptr, "Too many IDATs found");
 805:fltk-1.3.4-1/png/pngread.c ****          }
 806:fltk-1.3.4-1/png/pngread.c ****          png_handle_unknown(png_ptr, info_ptr, length, keep);
 807:fltk-1.3.4-1/png/pngread.c ****          if (chunk_name == png_PLTE)
 808:fltk-1.3.4-1/png/pngread.c ****             png_ptr->mode |= PNG_HAVE_PLTE;
 809:fltk-1.3.4-1/png/pngread.c ****       }
 810:fltk-1.3.4-1/png/pngread.c **** #endif
 811:fltk-1.3.4-1/png/pngread.c **** 
 812:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_IDAT)
 813:fltk-1.3.4-1/png/pngread.c ****       {
 814:fltk-1.3.4-1/png/pngread.c ****          /* Zero length IDATs are legal after the last IDAT has been
 815:fltk-1.3.4-1/png/pngread.c ****           * read, but not after other chunks have been read.
 816:fltk-1.3.4-1/png/pngread.c ****           */
 817:fltk-1.3.4-1/png/pngread.c ****          if ((length > 0) ||
 818:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 819:fltk-1.3.4-1/png/pngread.c ****             png_benign_error(png_ptr, "Too many IDATs found");
 820:fltk-1.3.4-1/png/pngread.c **** 
 821:fltk-1.3.4-1/png/pngread.c ****          png_crc_finish(png_ptr, length);
 822:fltk-1.3.4-1/png/pngread.c ****       }
 823:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_PLTE)
 824:fltk-1.3.4-1/png/pngread.c ****          png_handle_PLTE(png_ptr, info_ptr, length);
 825:fltk-1.3.4-1/png/pngread.c **** 
 826:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_bKGD_SUPPORTED
 827:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_bKGD)
 828:fltk-1.3.4-1/png/pngread.c ****          png_handle_bKGD(png_ptr, info_ptr, length);
 829:fltk-1.3.4-1/png/pngread.c **** #endif
 830:fltk-1.3.4-1/png/pngread.c **** 
 831:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_cHRM_SUPPORTED
 832:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_cHRM)
 833:fltk-1.3.4-1/png/pngread.c ****          png_handle_cHRM(png_ptr, info_ptr, length);
 834:fltk-1.3.4-1/png/pngread.c **** #endif
 835:fltk-1.3.4-1/png/pngread.c **** 
 836:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_gAMA_SUPPORTED
 837:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_gAMA)
 838:fltk-1.3.4-1/png/pngread.c ****          png_handle_gAMA(png_ptr, info_ptr, length);
 839:fltk-1.3.4-1/png/pngread.c **** #endif
 840:fltk-1.3.4-1/png/pngread.c **** 
 841:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_hIST_SUPPORTED
 842:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_hIST)
 843:fltk-1.3.4-1/png/pngread.c ****          png_handle_hIST(png_ptr, info_ptr, length);
 844:fltk-1.3.4-1/png/pngread.c **** #endif
 845:fltk-1.3.4-1/png/pngread.c **** 
 846:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_oFFs_SUPPORTED
 847:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_oFFs)
 848:fltk-1.3.4-1/png/pngread.c ****          png_handle_oFFs(png_ptr, info_ptr, length);
 849:fltk-1.3.4-1/png/pngread.c **** #endif
 850:fltk-1.3.4-1/png/pngread.c **** 
 851:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_pCAL_SUPPORTED
 852:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_pCAL)
 853:fltk-1.3.4-1/png/pngread.c ****          png_handle_pCAL(png_ptr, info_ptr, length);
 854:fltk-1.3.4-1/png/pngread.c **** #endif
 855:fltk-1.3.4-1/png/pngread.c **** 
 856:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sCAL_SUPPORTED
 857:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sCAL)
 858:fltk-1.3.4-1/png/pngread.c ****          png_handle_sCAL(png_ptr, info_ptr, length);
 859:fltk-1.3.4-1/png/pngread.c **** #endif
 860:fltk-1.3.4-1/png/pngread.c **** 
 861:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_pHYs_SUPPORTED
 862:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_pHYs)
 863:fltk-1.3.4-1/png/pngread.c ****          png_handle_pHYs(png_ptr, info_ptr, length);
 864:fltk-1.3.4-1/png/pngread.c **** #endif
 865:fltk-1.3.4-1/png/pngread.c **** 
 866:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sBIT_SUPPORTED
 867:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sBIT)
 868:fltk-1.3.4-1/png/pngread.c ****          png_handle_sBIT(png_ptr, info_ptr, length);
 869:fltk-1.3.4-1/png/pngread.c **** #endif
 870:fltk-1.3.4-1/png/pngread.c **** 
 871:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sRGB_SUPPORTED
 872:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sRGB)
 873:fltk-1.3.4-1/png/pngread.c ****          png_handle_sRGB(png_ptr, info_ptr, length);
 874:fltk-1.3.4-1/png/pngread.c **** #endif
 875:fltk-1.3.4-1/png/pngread.c **** 
 876:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_iCCP_SUPPORTED
 877:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_iCCP)
 878:fltk-1.3.4-1/png/pngread.c ****          png_handle_iCCP(png_ptr, info_ptr, length);
 879:fltk-1.3.4-1/png/pngread.c **** #endif
 880:fltk-1.3.4-1/png/pngread.c **** 
 881:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_sPLT_SUPPORTED
 882:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_sPLT)
 883:fltk-1.3.4-1/png/pngread.c ****          png_handle_sPLT(png_ptr, info_ptr, length);
 884:fltk-1.3.4-1/png/pngread.c **** #endif
 885:fltk-1.3.4-1/png/pngread.c **** 
 886:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_tEXt_SUPPORTED
 887:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_tEXt)
 888:fltk-1.3.4-1/png/pngread.c ****          png_handle_tEXt(png_ptr, info_ptr, length);
 889:fltk-1.3.4-1/png/pngread.c **** #endif
 890:fltk-1.3.4-1/png/pngread.c **** 
 891:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_tIME_SUPPORTED
 892:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_tIME)
 893:fltk-1.3.4-1/png/pngread.c ****          png_handle_tIME(png_ptr, info_ptr, length);
 894:fltk-1.3.4-1/png/pngread.c **** #endif
 895:fltk-1.3.4-1/png/pngread.c **** 
 896:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_tRNS_SUPPORTED
 897:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_tRNS)
 898:fltk-1.3.4-1/png/pngread.c ****          png_handle_tRNS(png_ptr, info_ptr, length);
 899:fltk-1.3.4-1/png/pngread.c **** #endif
 900:fltk-1.3.4-1/png/pngread.c **** 
 901:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_zTXt_SUPPORTED
 902:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_zTXt)
 903:fltk-1.3.4-1/png/pngread.c ****          png_handle_zTXt(png_ptr, info_ptr, length);
 904:fltk-1.3.4-1/png/pngread.c **** #endif
 905:fltk-1.3.4-1/png/pngread.c **** 
 906:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_iTXt_SUPPORTED
 907:fltk-1.3.4-1/png/pngread.c ****       else if (chunk_name == png_iTXt)
 908:fltk-1.3.4-1/png/pngread.c ****          png_handle_iTXt(png_ptr, info_ptr, length);
 909:fltk-1.3.4-1/png/pngread.c **** #endif
 910:fltk-1.3.4-1/png/pngread.c **** 
 911:fltk-1.3.4-1/png/pngread.c ****       else
 912:fltk-1.3.4-1/png/pngread.c ****          png_handle_unknown(png_ptr, info_ptr, length,
 913:fltk-1.3.4-1/png/pngread.c ****             PNG_HANDLE_CHUNK_AS_DEFAULT);
 914:fltk-1.3.4-1/png/pngread.c ****    } while ((png_ptr->mode & PNG_HAVE_IEND) == 0);
 915:fltk-1.3.4-1/png/pngread.c **** }
 916:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 917:fltk-1.3.4-1/png/pngread.c **** 
 918:fltk-1.3.4-1/png/pngread.c **** /* Free all memory used in the read struct */
 919:fltk-1.3.4-1/png/pngread.c **** static void
 920:fltk-1.3.4-1/png/pngread.c **** png_read_destroy(png_structrp png_ptr)
 921:fltk-1.3.4-1/png/pngread.c **** {
 922:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_destroy");
 923:fltk-1.3.4-1/png/pngread.c **** 
 924:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
 925:fltk-1.3.4-1/png/pngread.c ****    png_destroy_gamma_table(png_ptr);
 926:fltk-1.3.4-1/png/pngread.c **** #endif
 927:fltk-1.3.4-1/png/pngread.c **** 
 928:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->big_row_buf);
 929:fltk-1.3.4-1/png/pngread.c ****    png_ptr->big_row_buf = NULL;
 930:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->big_prev_row);
 931:fltk-1.3.4-1/png/pngread.c ****    png_ptr->big_prev_row = NULL;
 932:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->read_buffer);
 933:fltk-1.3.4-1/png/pngread.c ****    png_ptr->read_buffer = NULL;
 934:fltk-1.3.4-1/png/pngread.c **** 
 935:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_QUANTIZE_SUPPORTED
 936:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->palette_lookup);
 937:fltk-1.3.4-1/png/pngread.c ****    png_ptr->palette_lookup = NULL;
 938:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->quantize_index);
 939:fltk-1.3.4-1/png/pngread.c ****    png_ptr->quantize_index = NULL;
 940:fltk-1.3.4-1/png/pngread.c **** #endif
 941:fltk-1.3.4-1/png/pngread.c **** 
 942:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->free_me & PNG_FREE_PLTE) != 0)
 943:fltk-1.3.4-1/png/pngread.c ****    {
 944:fltk-1.3.4-1/png/pngread.c ****       png_zfree(png_ptr, png_ptr->palette);
 945:fltk-1.3.4-1/png/pngread.c ****       png_ptr->palette = NULL;
 946:fltk-1.3.4-1/png/pngread.c ****    }
 947:fltk-1.3.4-1/png/pngread.c ****    png_ptr->free_me &= ~PNG_FREE_PLTE;
 948:fltk-1.3.4-1/png/pngread.c **** 
 949:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_tRNS_SUPPORTED) || \
 950:fltk-1.3.4-1/png/pngread.c ****     defined(PNG_READ_EXPAND_SUPPORTED) || defined(PNG_READ_BACKGROUND_SUPPORTED)
 951:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->free_me & PNG_FREE_TRNS) != 0)
 952:fltk-1.3.4-1/png/pngread.c ****    {
 953:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, png_ptr->trans_alpha);
 954:fltk-1.3.4-1/png/pngread.c ****       png_ptr->trans_alpha = NULL;
 955:fltk-1.3.4-1/png/pngread.c ****    }
 956:fltk-1.3.4-1/png/pngread.c ****    png_ptr->free_me &= ~PNG_FREE_TRNS;
 957:fltk-1.3.4-1/png/pngread.c **** #endif
 958:fltk-1.3.4-1/png/pngread.c **** 
 959:fltk-1.3.4-1/png/pngread.c ****    inflateEnd(&png_ptr->zstream);
 960:fltk-1.3.4-1/png/pngread.c **** 
 961:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_PROGRESSIVE_READ_SUPPORTED
 962:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->save_buffer);
 963:fltk-1.3.4-1/png/pngread.c ****    png_ptr->save_buffer = NULL;
 964:fltk-1.3.4-1/png/pngread.c **** #endif
 965:fltk-1.3.4-1/png/pngread.c **** 
 966:fltk-1.3.4-1/png/pngread.c **** #if defined(PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED) && \
 967:fltk-1.3.4-1/png/pngread.c ****    defined(PNG_READ_UNKNOWN_CHUNKS_SUPPORTED)
 968:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->unknown_chunk.data);
 969:fltk-1.3.4-1/png/pngread.c ****    png_ptr->unknown_chunk.data = NULL;
 970:fltk-1.3.4-1/png/pngread.c **** #endif
 971:fltk-1.3.4-1/png/pngread.c **** 
 972:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SET_UNKNOWN_CHUNKS_SUPPORTED
 973:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->chunk_list);
 974:fltk-1.3.4-1/png/pngread.c ****    png_ptr->chunk_list = NULL;
 975:fltk-1.3.4-1/png/pngread.c **** #endif
 976:fltk-1.3.4-1/png/pngread.c **** 
 977:fltk-1.3.4-1/png/pngread.c ****    /* NOTE: the 'setjmp' buffer may still be allocated and the memory and error
 978:fltk-1.3.4-1/png/pngread.c ****     * callbacks are still set at this point.  They are required to complete the
 979:fltk-1.3.4-1/png/pngread.c ****     * destruction of the png_struct itself.
 980:fltk-1.3.4-1/png/pngread.c ****     */
 981:fltk-1.3.4-1/png/pngread.c **** }
 982:fltk-1.3.4-1/png/pngread.c **** 
 983:fltk-1.3.4-1/png/pngread.c **** /* Free all memory used by the read */
 984:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
 985:fltk-1.3.4-1/png/pngread.c **** png_destroy_read_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr,
 986:fltk-1.3.4-1/png/pngread.c ****     png_infopp end_info_ptr_ptr)
 987:fltk-1.3.4-1/png/pngread.c **** {
 988:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = NULL;
 989:fltk-1.3.4-1/png/pngread.c **** 
 990:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_destroy_read_struct");
 991:fltk-1.3.4-1/png/pngread.c **** 
 992:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr_ptr != NULL)
 993:fltk-1.3.4-1/png/pngread.c ****       png_ptr = *png_ptr_ptr;
 994:fltk-1.3.4-1/png/pngread.c **** 
 995:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
 996:fltk-1.3.4-1/png/pngread.c ****       return;
 997:fltk-1.3.4-1/png/pngread.c **** 
 998:fltk-1.3.4-1/png/pngread.c ****    /* libpng 1.6.0: use the API to destroy info structs to ensure consistent
 999:fltk-1.3.4-1/png/pngread.c ****     * behavior.  Prior to 1.6.0 libpng did extra 'info' destruction in this API.
1000:fltk-1.3.4-1/png/pngread.c ****     * The extra was, apparently, unnecessary yet this hides memory leak bugs.
1001:fltk-1.3.4-1/png/pngread.c ****     */
1002:fltk-1.3.4-1/png/pngread.c ****    png_destroy_info_struct(png_ptr, end_info_ptr_ptr);
1003:fltk-1.3.4-1/png/pngread.c ****    png_destroy_info_struct(png_ptr, info_ptr_ptr);
1004:fltk-1.3.4-1/png/pngread.c **** 
1005:fltk-1.3.4-1/png/pngread.c ****    *png_ptr_ptr = NULL;
1006:fltk-1.3.4-1/png/pngread.c ****    png_read_destroy(png_ptr);
1007:fltk-1.3.4-1/png/pngread.c ****    png_destroy_png_struct(png_ptr);
1008:fltk-1.3.4-1/png/pngread.c **** }
1009:fltk-1.3.4-1/png/pngread.c **** 
1010:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
1011:fltk-1.3.4-1/png/pngread.c **** png_set_read_status_fn(png_structrp png_ptr, png_read_status_ptr read_row_fn)
1012:fltk-1.3.4-1/png/pngread.c **** {
1013:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
1014:fltk-1.3.4-1/png/pngread.c ****       return;
1015:fltk-1.3.4-1/png/pngread.c **** 
1016:fltk-1.3.4-1/png/pngread.c ****    png_ptr->read_row_fn = read_row_fn;
1017:fltk-1.3.4-1/png/pngread.c **** }
1018:fltk-1.3.4-1/png/pngread.c **** 
1019:fltk-1.3.4-1/png/pngread.c **** 
1020:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
1021:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_INFO_IMAGE_SUPPORTED
1022:fltk-1.3.4-1/png/pngread.c **** void PNGAPI
1023:fltk-1.3.4-1/png/pngread.c **** png_read_png(png_structrp png_ptr, png_inforp info_ptr,
1024:fltk-1.3.4-1/png/pngread.c ****                            int transforms,
1025:fltk-1.3.4-1/png/pngread.c ****                            voidp params)
1026:fltk-1.3.4-1/png/pngread.c **** {
1027:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL || info_ptr == NULL)
1028:fltk-1.3.4-1/png/pngread.c ****       return;
1029:fltk-1.3.4-1/png/pngread.c **** 
1030:fltk-1.3.4-1/png/pngread.c ****    /* png_read_info() gives us all of the information from the
1031:fltk-1.3.4-1/png/pngread.c ****     * PNG file before the first IDAT (image data chunk).
1032:fltk-1.3.4-1/png/pngread.c ****     */
1033:fltk-1.3.4-1/png/pngread.c ****    png_read_info(png_ptr, info_ptr);
1034:fltk-1.3.4-1/png/pngread.c ****    if (info_ptr->height > PNG_UINT_32_MAX/(sizeof (png_bytep)))
1035:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "Image is too high to process with png_read_png()");
1036:fltk-1.3.4-1/png/pngread.c **** 
1037:fltk-1.3.4-1/png/pngread.c ****    /* -------------- image transformations start here ------------------- */
1038:fltk-1.3.4-1/png/pngread.c ****    /* libpng 1.6.10: add code to cause a png_app_error if a selected TRANSFORM
1039:fltk-1.3.4-1/png/pngread.c ****     * is not implemented.  This will only happen in de-configured (non-default)
1040:fltk-1.3.4-1/png/pngread.c ****     * libpng builds.  The results can be unexpected - png_read_png may return
1041:fltk-1.3.4-1/png/pngread.c ****     * short or mal-formed rows because the transform is skipped.
1042:fltk-1.3.4-1/png/pngread.c ****     */
1043:fltk-1.3.4-1/png/pngread.c **** 
1044:fltk-1.3.4-1/png/pngread.c ****    /* Tell libpng to strip 16-bit/color files down to 8 bits per color.
1045:fltk-1.3.4-1/png/pngread.c ****     */
1046:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_SCALE_16) != 0)
1047:fltk-1.3.4-1/png/pngread.c ****      /* Added at libpng-1.5.4. "strip_16" produces the same result that it
1048:fltk-1.3.4-1/png/pngread.c ****       * did in earlier versions, while "scale_16" is now more accurate.
1049:fltk-1.3.4-1/png/pngread.c ****       */
1050:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED
1051:fltk-1.3.4-1/png/pngread.c ****       png_set_scale_16(png_ptr);
1052:fltk-1.3.4-1/png/pngread.c **** #else
1053:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_SCALE_16 not supported");
1054:fltk-1.3.4-1/png/pngread.c **** #endif
1055:fltk-1.3.4-1/png/pngread.c **** 
1056:fltk-1.3.4-1/png/pngread.c ****    /* If both SCALE and STRIP are required pngrtran will effectively cancel the
1057:fltk-1.3.4-1/png/pngread.c ****     * latter by doing SCALE first.  This is ok and allows apps not to check for
1058:fltk-1.3.4-1/png/pngread.c ****     * which is supported to get the right answer.
1059:fltk-1.3.4-1/png/pngread.c ****     */
1060:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_STRIP_16) != 0)
1061:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
1062:fltk-1.3.4-1/png/pngread.c ****       png_set_strip_16(png_ptr);
1063:fltk-1.3.4-1/png/pngread.c **** #else
1064:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_STRIP_16 not supported");
1065:fltk-1.3.4-1/png/pngread.c **** #endif
1066:fltk-1.3.4-1/png/pngread.c **** 
1067:fltk-1.3.4-1/png/pngread.c ****    /* Strip alpha bytes from the input data without combining with
1068:fltk-1.3.4-1/png/pngread.c ****     * the background (not recommended).
1069:fltk-1.3.4-1/png/pngread.c ****     */
1070:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_STRIP_ALPHA) != 0)
1071:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
1072:fltk-1.3.4-1/png/pngread.c ****       png_set_strip_alpha(png_ptr);
1073:fltk-1.3.4-1/png/pngread.c **** #else
1074:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_STRIP_ALPHA not supported");
1075:fltk-1.3.4-1/png/pngread.c **** #endif
1076:fltk-1.3.4-1/png/pngread.c **** 
1077:fltk-1.3.4-1/png/pngread.c ****    /* Extract multiple pixels with bit depths of 1, 2, or 4 from a single
1078:fltk-1.3.4-1/png/pngread.c ****     * byte into separate bytes (useful for paletted and grayscale images).
1079:fltk-1.3.4-1/png/pngread.c ****     */
1080:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_PACKING) != 0)
1081:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_PACK_SUPPORTED
1082:fltk-1.3.4-1/png/pngread.c ****       png_set_packing(png_ptr);
1083:fltk-1.3.4-1/png/pngread.c **** #else
1084:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_PACKING not supported");
1085:fltk-1.3.4-1/png/pngread.c **** #endif
1086:fltk-1.3.4-1/png/pngread.c **** 
1087:fltk-1.3.4-1/png/pngread.c ****    /* Change the order of packed pixels to least significant bit first
1088:fltk-1.3.4-1/png/pngread.c ****     * (not useful if you are using png_set_packing).
1089:fltk-1.3.4-1/png/pngread.c ****     */
1090:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_PACKSWAP) != 0)
1091:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_PACKSWAP_SUPPORTED
1092:fltk-1.3.4-1/png/pngread.c ****       png_set_packswap(png_ptr);
1093:fltk-1.3.4-1/png/pngread.c **** #else
1094:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_PACKSWAP not supported");
1095:fltk-1.3.4-1/png/pngread.c **** #endif
1096:fltk-1.3.4-1/png/pngread.c **** 
1097:fltk-1.3.4-1/png/pngread.c ****    /* Expand paletted colors into true RGB triplets
1098:fltk-1.3.4-1/png/pngread.c ****     * Expand grayscale images to full 8 bits from 1, 2, or 4 bits/pixel
1099:fltk-1.3.4-1/png/pngread.c ****     * Expand paletted or RGB images with transparency to full alpha
1100:fltk-1.3.4-1/png/pngread.c ****     * channels so the data will be available as RGBA quartets.
1101:fltk-1.3.4-1/png/pngread.c ****     */
1102:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_EXPAND) != 0)
1103:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
1104:fltk-1.3.4-1/png/pngread.c ****       png_set_expand(png_ptr);
1105:fltk-1.3.4-1/png/pngread.c **** #else
1106:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_EXPAND not supported");
1107:fltk-1.3.4-1/png/pngread.c **** #endif
1108:fltk-1.3.4-1/png/pngread.c **** 
1109:fltk-1.3.4-1/png/pngread.c ****    /* We don't handle background color or gamma transformation or quantizing.
1110:fltk-1.3.4-1/png/pngread.c ****     */
1111:fltk-1.3.4-1/png/pngread.c **** 
1112:fltk-1.3.4-1/png/pngread.c ****    /* Invert monochrome files to have 0 as white and 1 as black
1113:fltk-1.3.4-1/png/pngread.c ****     */
1114:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_INVERT_MONO) != 0)
1115:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INVERT_SUPPORTED
1116:fltk-1.3.4-1/png/pngread.c ****       png_set_invert_mono(png_ptr);
1117:fltk-1.3.4-1/png/pngread.c **** #else
1118:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_INVERT_MONO not supported");
1119:fltk-1.3.4-1/png/pngread.c **** #endif
1120:fltk-1.3.4-1/png/pngread.c **** 
1121:fltk-1.3.4-1/png/pngread.c ****    /* If you want to shift the pixel values from the range [0,255] or
1122:fltk-1.3.4-1/png/pngread.c ****     * [0,65535] to the original [0,7] or [0,31], or whatever range the
1123:fltk-1.3.4-1/png/pngread.c ****     * colors were originally in:
1124:fltk-1.3.4-1/png/pngread.c ****     */
1125:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_SHIFT) != 0)
1126:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SHIFT_SUPPORTED
1127:fltk-1.3.4-1/png/pngread.c ****       if ((info_ptr->valid & PNG_INFO_sBIT) != 0)
1128:fltk-1.3.4-1/png/pngread.c ****          png_set_shift(png_ptr, &info_ptr->sig_bit);
1129:fltk-1.3.4-1/png/pngread.c **** #else
1130:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_SHIFT not supported");
1131:fltk-1.3.4-1/png/pngread.c **** #endif
1132:fltk-1.3.4-1/png/pngread.c **** 
1133:fltk-1.3.4-1/png/pngread.c ****    /* Flip the RGB pixels to BGR (or RGBA to BGRA) */
1134:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_BGR) != 0)
1135:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_BGR_SUPPORTED
1136:fltk-1.3.4-1/png/pngread.c ****       png_set_bgr(png_ptr);
1137:fltk-1.3.4-1/png/pngread.c **** #else
1138:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_BGR not supported");
1139:fltk-1.3.4-1/png/pngread.c **** #endif
1140:fltk-1.3.4-1/png/pngread.c **** 
1141:fltk-1.3.4-1/png/pngread.c ****    /* Swap the RGBA or GA data to ARGB or AG (or BGRA to ABGR) */
1142:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_SWAP_ALPHA) != 0)
1143:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SWAP_ALPHA_SUPPORTED
1144:fltk-1.3.4-1/png/pngread.c ****       png_set_swap_alpha(png_ptr);
1145:fltk-1.3.4-1/png/pngread.c **** #else
1146:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_SWAP_ALPHA not supported");
1147:fltk-1.3.4-1/png/pngread.c **** #endif
1148:fltk-1.3.4-1/png/pngread.c **** 
1149:fltk-1.3.4-1/png/pngread.c ****    /* Swap bytes of 16-bit files to least significant byte first */
1150:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_SWAP_ENDIAN) != 0)
1151:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SWAP_SUPPORTED
1152:fltk-1.3.4-1/png/pngread.c ****       png_set_swap(png_ptr);
1153:fltk-1.3.4-1/png/pngread.c **** #else
1154:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_SWAP_ENDIAN not supported");
1155:fltk-1.3.4-1/png/pngread.c **** #endif
1156:fltk-1.3.4-1/png/pngread.c **** 
1157:fltk-1.3.4-1/png/pngread.c **** /* Added at libpng-1.2.41 */
1158:fltk-1.3.4-1/png/pngread.c ****    /* Invert the alpha channel from opacity to transparency */
1159:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_INVERT_ALPHA) != 0)
1160:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INVERT_ALPHA_SUPPORTED
1161:fltk-1.3.4-1/png/pngread.c ****       png_set_invert_alpha(png_ptr);
1162:fltk-1.3.4-1/png/pngread.c **** #else
1163:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_INVERT_ALPHA not supported");
1164:fltk-1.3.4-1/png/pngread.c **** #endif
1165:fltk-1.3.4-1/png/pngread.c **** 
1166:fltk-1.3.4-1/png/pngread.c **** /* Added at libpng-1.2.41 */
1167:fltk-1.3.4-1/png/pngread.c ****    /* Expand grayscale image to RGB */
1168:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_GRAY_TO_RGB) != 0)
1169:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
1170:fltk-1.3.4-1/png/pngread.c ****       png_set_gray_to_rgb(png_ptr);
1171:fltk-1.3.4-1/png/pngread.c **** #else
1172:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_GRAY_TO_RGB not supported");
1173:fltk-1.3.4-1/png/pngread.c **** #endif
1174:fltk-1.3.4-1/png/pngread.c **** 
1175:fltk-1.3.4-1/png/pngread.c **** /* Added at libpng-1.5.4 */
1176:fltk-1.3.4-1/png/pngread.c ****    if ((transforms & PNG_TRANSFORM_EXPAND_16) != 0)
1177:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
1178:fltk-1.3.4-1/png/pngread.c ****       png_set_expand_16(png_ptr);
1179:fltk-1.3.4-1/png/pngread.c **** #else
1180:fltk-1.3.4-1/png/pngread.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_EXPAND_16 not supported");
1181:fltk-1.3.4-1/png/pngread.c **** #endif
1182:fltk-1.3.4-1/png/pngread.c **** 
1183:fltk-1.3.4-1/png/pngread.c ****    /* We don't handle adding filler bytes */
1184:fltk-1.3.4-1/png/pngread.c **** 
1185:fltk-1.3.4-1/png/pngread.c ****    /* We use png_read_image and rely on that for interlace handling, but we also
1186:fltk-1.3.4-1/png/pngread.c ****     * call png_read_update_info therefore must turn on interlace handling now:
1187:fltk-1.3.4-1/png/pngread.c ****     */
1188:fltk-1.3.4-1/png/pngread.c ****    (void)png_set_interlace_handling(png_ptr);
1189:fltk-1.3.4-1/png/pngread.c **** 
1190:fltk-1.3.4-1/png/pngread.c ****    /* Optional call to gamma correct and add the background to the palette
1191:fltk-1.3.4-1/png/pngread.c ****     * and update info structure.  REQUIRED if you are expecting libpng to
1192:fltk-1.3.4-1/png/pngread.c ****     * update the palette for you (i.e., you selected such a transform above).
1193:fltk-1.3.4-1/png/pngread.c ****     */
1194:fltk-1.3.4-1/png/pngread.c ****    png_read_update_info(png_ptr, info_ptr);
1195:fltk-1.3.4-1/png/pngread.c **** 
1196:fltk-1.3.4-1/png/pngread.c ****    /* -------------- image transformations end here ------------------- */
1197:fltk-1.3.4-1/png/pngread.c **** 
1198:fltk-1.3.4-1/png/pngread.c ****    png_free_data(png_ptr, info_ptr, PNG_FREE_ROWS, 0);
1199:fltk-1.3.4-1/png/pngread.c ****    if (info_ptr->row_pointers == NULL)
1200:fltk-1.3.4-1/png/pngread.c ****    {
1201:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 iptr;
1202:fltk-1.3.4-1/png/pngread.c **** 
1203:fltk-1.3.4-1/png/pngread.c ****       info_ptr->row_pointers = png_voidcast(png_bytepp, png_malloc(png_ptr,
1204:fltk-1.3.4-1/png/pngread.c ****           info_ptr->height * (sizeof (png_bytep))));
1205:fltk-1.3.4-1/png/pngread.c **** 
1206:fltk-1.3.4-1/png/pngread.c ****       for (iptr=0; iptr<info_ptr->height; iptr++)
1207:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
1208:fltk-1.3.4-1/png/pngread.c **** 
1209:fltk-1.3.4-1/png/pngread.c ****       info_ptr->free_me |= PNG_FREE_ROWS;
1210:fltk-1.3.4-1/png/pngread.c **** 
1211:fltk-1.3.4-1/png/pngread.c ****       for (iptr = 0; iptr < info_ptr->height; iptr++)
1212:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
1213:fltk-1.3.4-1/png/pngread.c ****             png_malloc(png_ptr, info_ptr->rowbytes));
1214:fltk-1.3.4-1/png/pngread.c ****    }
1215:fltk-1.3.4-1/png/pngread.c **** 
1216:fltk-1.3.4-1/png/pngread.c ****    png_read_image(png_ptr, info_ptr->row_pointers);
1217:fltk-1.3.4-1/png/pngread.c ****    info_ptr->valid |= PNG_INFO_IDAT;
1218:fltk-1.3.4-1/png/pngread.c **** 
1219:fltk-1.3.4-1/png/pngread.c ****    /* Read rest of file, and get additional chunks in info_ptr - REQUIRED */
1220:fltk-1.3.4-1/png/pngread.c ****    png_read_end(png_ptr, info_ptr);
1221:fltk-1.3.4-1/png/pngread.c **** 
1222:fltk-1.3.4-1/png/pngread.c ****    PNG_UNUSED(params)
1223:fltk-1.3.4-1/png/pngread.c **** }
1224:fltk-1.3.4-1/png/pngread.c **** #endif /* INFO_IMAGE */
1225:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
1226:fltk-1.3.4-1/png/pngread.c **** 
1227:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_SIMPLIFIED_READ_SUPPORTED
1228:fltk-1.3.4-1/png/pngread.c **** /* SIMPLIFIED READ
1229:fltk-1.3.4-1/png/pngread.c ****  *
1230:fltk-1.3.4-1/png/pngread.c ****  * This code currently relies on the sequential reader, though it could easily
1231:fltk-1.3.4-1/png/pngread.c ****  * be made to work with the progressive one.
1232:fltk-1.3.4-1/png/pngread.c ****  */
1233:fltk-1.3.4-1/png/pngread.c **** /* Arguments to png_image_finish_read: */
1234:fltk-1.3.4-1/png/pngread.c **** 
1235:fltk-1.3.4-1/png/pngread.c **** /* Encoding of PNG data (used by the color-map code) */
1236:fltk-1.3.4-1/png/pngread.c **** #  define P_NOTSET  0 /* File encoding not yet known */
1237:fltk-1.3.4-1/png/pngread.c **** #  define P_sRGB    1 /* 8-bit encoded to sRGB gamma */
1238:fltk-1.3.4-1/png/pngread.c **** #  define P_LINEAR  2 /* 16-bit linear: not encoded, NOT pre-multiplied! */
1239:fltk-1.3.4-1/png/pngread.c **** #  define P_FILE    3 /* 8-bit encoded to file gamma, not sRGB or linear */
1240:fltk-1.3.4-1/png/pngread.c **** #  define P_LINEAR8 4 /* 8-bit linear: only from a file value */
1241:fltk-1.3.4-1/png/pngread.c **** 
1242:fltk-1.3.4-1/png/pngread.c **** /* Color-map processing: after libpng has run on the PNG image further
1243:fltk-1.3.4-1/png/pngread.c ****  * processing may be needed to convert the data to color-map indices.
1244:fltk-1.3.4-1/png/pngread.c ****  */
1245:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_NONE      0
1246:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_GA        1 /* Process GA data to a color-map with alpha */
1247:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_TRANS     2 /* Process GA data to a background index */
1248:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_RGB       3 /* Process RGB data */
1249:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_RGB_ALPHA 4 /* Process RGBA data */
1250:fltk-1.3.4-1/png/pngread.c **** 
1251:fltk-1.3.4-1/png/pngread.c **** /* The following document where the background is for each processing case. */
1252:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_NONE_BACKGROUND      256
1253:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_GA_BACKGROUND        231
1254:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_TRANS_BACKGROUND     254
1255:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_RGB_BACKGROUND       256
1256:fltk-1.3.4-1/png/pngread.c **** #define PNG_CMAP_RGB_ALPHA_BACKGROUND 216
1257:fltk-1.3.4-1/png/pngread.c **** 
1258:fltk-1.3.4-1/png/pngread.c **** typedef struct
1259:fltk-1.3.4-1/png/pngread.c **** {
1260:fltk-1.3.4-1/png/pngread.c ****    /* Arguments: */
1261:fltk-1.3.4-1/png/pngread.c ****    png_imagep image;
1262:fltk-1.3.4-1/png/pngread.c ****    png_voidp  buffer;
1263:fltk-1.3.4-1/png/pngread.c ****    png_int_32 row_stride;
1264:fltk-1.3.4-1/png/pngread.c ****    png_voidp  colormap;
1265:fltk-1.3.4-1/png/pngread.c ****    png_const_colorp background;
1266:fltk-1.3.4-1/png/pngread.c ****    /* Local variables: */
1267:fltk-1.3.4-1/png/pngread.c ****    png_voidp       local_row;
1268:fltk-1.3.4-1/png/pngread.c ****    png_voidp       first_row;
1269:fltk-1.3.4-1/png/pngread.c ****    ptrdiff_t       row_bytes;           /* step between rows */
1270:fltk-1.3.4-1/png/pngread.c ****    int             file_encoding;       /* E_ values above */
1271:fltk-1.3.4-1/png/pngread.c ****    png_fixed_point gamma_to_linear;     /* For P_FILE, reciprocal of gamma */
1272:fltk-1.3.4-1/png/pngread.c ****    int             colormap_processing; /* PNG_CMAP_ values above */
1273:fltk-1.3.4-1/png/pngread.c **** } png_image_read_control;
1274:fltk-1.3.4-1/png/pngread.c **** 
1275:fltk-1.3.4-1/png/pngread.c **** /* Do all the *safe* initialization - 'safe' means that png_error won't be
1276:fltk-1.3.4-1/png/pngread.c ****  * called, so setting up the jmp_buf is not required.  This means that anything
1277:fltk-1.3.4-1/png/pngread.c ****  * called from here must *not* call png_malloc - it has to call png_malloc_warn
1278:fltk-1.3.4-1/png/pngread.c ****  * instead so that control is returned safely back to this routine.
1279:fltk-1.3.4-1/png/pngread.c ****  */
1280:fltk-1.3.4-1/png/pngread.c **** static int
1281:fltk-1.3.4-1/png/pngread.c **** png_image_read_init(png_imagep image)
1282:fltk-1.3.4-1/png/pngread.c **** {
1283:fltk-1.3.4-1/png/pngread.c ****    if (image->opaque == NULL)
1284:fltk-1.3.4-1/png/pngread.c ****    {
1285:fltk-1.3.4-1/png/pngread.c ****       png_structp png_ptr = png_create_read_struct(PNG_LIBPNG_VER_STRING, image,
1286:fltk-1.3.4-1/png/pngread.c ****           png_safe_error, png_safe_warning);
1287:fltk-1.3.4-1/png/pngread.c **** 
1288:fltk-1.3.4-1/png/pngread.c ****       /* And set the rest of the structure to NULL to ensure that the various
1289:fltk-1.3.4-1/png/pngread.c ****        * fields are consistent.
1290:fltk-1.3.4-1/png/pngread.c ****        */
1291:fltk-1.3.4-1/png/pngread.c ****       memset(image, 0, (sizeof *image));
1292:fltk-1.3.4-1/png/pngread.c ****       image->version = PNG_IMAGE_VERSION;
1293:fltk-1.3.4-1/png/pngread.c **** 
1294:fltk-1.3.4-1/png/pngread.c ****       if (png_ptr != NULL)
1295:fltk-1.3.4-1/png/pngread.c ****       {
1296:fltk-1.3.4-1/png/pngread.c ****          png_infop info_ptr = png_create_info_struct(png_ptr);
1297:fltk-1.3.4-1/png/pngread.c **** 
1298:fltk-1.3.4-1/png/pngread.c ****          if (info_ptr != NULL)
1299:fltk-1.3.4-1/png/pngread.c ****          {
1300:fltk-1.3.4-1/png/pngread.c ****             png_controlp control = png_voidcast(png_controlp,
1301:fltk-1.3.4-1/png/pngread.c ****                png_malloc_warn(png_ptr, (sizeof *control)));
1302:fltk-1.3.4-1/png/pngread.c **** 
1303:fltk-1.3.4-1/png/pngread.c ****             if (control != NULL)
1304:fltk-1.3.4-1/png/pngread.c ****             {
1305:fltk-1.3.4-1/png/pngread.c ****                memset(control, 0, (sizeof *control));
1306:fltk-1.3.4-1/png/pngread.c **** 
1307:fltk-1.3.4-1/png/pngread.c ****                control->png_ptr = png_ptr;
1308:fltk-1.3.4-1/png/pngread.c ****                control->info_ptr = info_ptr;
1309:fltk-1.3.4-1/png/pngread.c ****                control->for_write = 0;
1310:fltk-1.3.4-1/png/pngread.c **** 
1311:fltk-1.3.4-1/png/pngread.c ****                image->opaque = control;
1312:fltk-1.3.4-1/png/pngread.c ****                return 1;
1313:fltk-1.3.4-1/png/pngread.c ****             }
1314:fltk-1.3.4-1/png/pngread.c **** 
1315:fltk-1.3.4-1/png/pngread.c ****             /* Error clean up */
1316:fltk-1.3.4-1/png/pngread.c ****             png_destroy_info_struct(png_ptr, &info_ptr);
1317:fltk-1.3.4-1/png/pngread.c ****          }
1318:fltk-1.3.4-1/png/pngread.c **** 
1319:fltk-1.3.4-1/png/pngread.c ****          png_destroy_read_struct(&png_ptr, NULL, NULL);
1320:fltk-1.3.4-1/png/pngread.c ****       }
1321:fltk-1.3.4-1/png/pngread.c **** 
1322:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image, "png_image_read: out of memory");
1323:fltk-1.3.4-1/png/pngread.c ****    }
1324:fltk-1.3.4-1/png/pngread.c **** 
1325:fltk-1.3.4-1/png/pngread.c ****    return png_image_error(image, "png_image_read: opaque pointer not NULL");
1326:fltk-1.3.4-1/png/pngread.c **** }
1327:fltk-1.3.4-1/png/pngread.c **** 
1328:fltk-1.3.4-1/png/pngread.c **** /* Utility to find the base format of a PNG file from a png_struct. */
1329:fltk-1.3.4-1/png/pngread.c **** static png_uint_32
1330:fltk-1.3.4-1/png/pngread.c **** png_image_format(png_structrp png_ptr)
1331:fltk-1.3.4-1/png/pngread.c **** {
  11              		.loc 1 1331 1 view -0
  12              		.cfi_startproc
1332:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 format = 0;
  13              		.loc 1 1332 4 view .LVU1
1333:fltk-1.3.4-1/png/pngread.c **** 
1334:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->color_type & PNG_COLOR_MASK_COLOR) != 0)
  14              		.loc 1 1334 4 view .LVU2
  15              		.loc 1 1334 16 is_stmt 0 view .LVU3
  16 0000 0FB69777 		movzbl	631(%rdi), %edx
  16      020000
1335:fltk-1.3.4-1/png/pngread.c ****       format |= PNG_FORMAT_FLAG_COLOR;
  17              		.loc 1 1335 14 view .LVU4
  18 0007 31C0     		xorl	%eax, %eax
  19 0009 F6C202   		testb	$2, %dl
  20 000c 0F95C0   		setne	%al
  21 000f 01C0     		addl	%eax, %eax
  22              	.LVL1:
1336:fltk-1.3.4-1/png/pngread.c **** 
1337:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0)
  23              		.loc 1 1337 4 is_stmt 1 view .LVU5
  24              		.loc 1 1337 7 is_stmt 0 view .LVU6
  25 0011 F6C204   		testb	$4, %dl
  26 0014 752A     		jne	.L10
1338:fltk-1.3.4-1/png/pngread.c ****       format |= PNG_FORMAT_FLAG_ALPHA;
1339:fltk-1.3.4-1/png/pngread.c **** 
1340:fltk-1.3.4-1/png/pngread.c ****    /* Use png_ptr here, not info_ptr, because by examination png_handle_tRNS
1341:fltk-1.3.4-1/png/pngread.c ****     * sets the png_struct fields; that's all we are interested in here.  The
1342:fltk-1.3.4-1/png/pngread.c ****     * precise interaction with an app call to png_set_tRNS and PNG file reading
1343:fltk-1.3.4-1/png/pngread.c ****     * is unclear.
1344:fltk-1.3.4-1/png/pngread.c ****     */
1345:fltk-1.3.4-1/png/pngread.c ****    else if (png_ptr->num_trans > 0)
  27              		.loc 1 1345 9 is_stmt 1 view .LVU7
  28              		.loc 1 1345 12 is_stmt 0 view .LVU8
  29 0016 6683BF70 		cmpw	$0, 624(%rdi)
  29      02000000 
  30 001e 7520     		jne	.L10
  31              	.L4:
1346:fltk-1.3.4-1/png/pngread.c ****       format |= PNG_FORMAT_FLAG_ALPHA;
1347:fltk-1.3.4-1/png/pngread.c **** 
1348:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr->bit_depth == 16)
  32              		.loc 1 1348 4 is_stmt 1 view .LVU9
  33              		.loc 1 1348 7 is_stmt 0 view .LVU10
  34 0020 80BF7802 		cmpb	$16, 632(%rdi)
  34      000010
  35 0027 7503     		jne	.L5
1349:fltk-1.3.4-1/png/pngread.c ****       format |= PNG_FORMAT_FLAG_LINEAR;
  36              		.loc 1 1349 7 is_stmt 1 view .LVU11
  37              		.loc 1 1349 14 is_stmt 0 view .LVU12
  38 0029 83C804   		orl	$4, %eax
  39              	.LVL2:
  40              	.L5:
1350:fltk-1.3.4-1/png/pngread.c **** 
1351:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->color_type & PNG_COLOR_MASK_PALETTE) != 0)
  41              		.loc 1 1351 4 is_stmt 1 view .LVU13
1352:fltk-1.3.4-1/png/pngread.c ****       format |= PNG_FORMAT_FLAG_COLORMAP;
  42              		.loc 1 1352 14 is_stmt 0 view .LVU14
  43 002c 89C1     		movl	%eax, %ecx
  44 002e 83C908   		orl	$8, %ecx
  45 0031 83E201   		andl	$1, %edx
  46 0034 0F45C1   		cmovne	%ecx, %eax
  47              	.LVL3:
1353:fltk-1.3.4-1/png/pngread.c **** 
1354:fltk-1.3.4-1/png/pngread.c ****    return format;
1355:fltk-1.3.4-1/png/pngread.c **** }
  48              		.loc 1 1355 1 view .LVU15
  49 0037 C3       		ret
  50              	.LVL4:
  51 0038 0F1F8400 		.p2align 4,,10
  51      00000000 
  52              		.p2align 3
  53              	.L10:
1346:fltk-1.3.4-1/png/pngread.c **** 
  54              		.loc 1 1346 7 is_stmt 1 view .LVU16
1346:fltk-1.3.4-1/png/pngread.c **** 
  55              		.loc 1 1346 14 is_stmt 0 view .LVU17
  56 0040 83C801   		orl	$1, %eax
  57              	.LVL5:
1346:fltk-1.3.4-1/png/pngread.c **** 
  58              		.loc 1 1346 14 view .LVU18
  59 0043 EBDB     		jmp	.L4
  60              		.cfi_endproc
  61              	.LFE56:
  63              		.section	.rodata.png_image_memory_read.str1.1,"aMS",@progbits,1
  64              	.LC0:
  65 0000 72656164 		.string	"read beyond end of data"
  65      20626579 
  65      6F6E6420 
  65      656E6420 
  65      6F662064 
  66              	.LC1:
  67 0018 696E7661 		.string	"invalid memory read"
  67      6C696420 
  67      6D656D6F 
  67      72792072 
  67      65616400 
  68              		.section	.text.png_image_memory_read,"ax",@progbits
  69              		.p2align 4
  71              	png_image_memory_read:
  72              	.LVL6:
  73              	.LFB61:
1356:fltk-1.3.4-1/png/pngread.c **** 
1357:fltk-1.3.4-1/png/pngread.c **** /* Is the given gamma significantly different from sRGB?  The test is the same
1358:fltk-1.3.4-1/png/pngread.c ****  * one used in pngrtran.c when deciding whether to do gamma correction.  The
1359:fltk-1.3.4-1/png/pngread.c ****  * arithmetic optimizes the division by using the fact that the inverse of the
1360:fltk-1.3.4-1/png/pngread.c ****  * file sRGB gamma is 2.2
1361:fltk-1.3.4-1/png/pngread.c ****  */
1362:fltk-1.3.4-1/png/pngread.c **** static int
1363:fltk-1.3.4-1/png/pngread.c **** png_gamma_not_sRGB(png_fixed_point g)
1364:fltk-1.3.4-1/png/pngread.c **** {
1365:fltk-1.3.4-1/png/pngread.c ****    if (g < PNG_FP_1)
1366:fltk-1.3.4-1/png/pngread.c ****    {
1367:fltk-1.3.4-1/png/pngread.c ****       /* An uninitialized gamma is assumed to be sRGB for the simplified API. */
1368:fltk-1.3.4-1/png/pngread.c ****       if (g == 0)
1369:fltk-1.3.4-1/png/pngread.c ****          return 0;
1370:fltk-1.3.4-1/png/pngread.c **** 
1371:fltk-1.3.4-1/png/pngread.c ****       return png_gamma_significant((g * 11 + 2)/5 /* i.e. *2.2, rounded */);
1372:fltk-1.3.4-1/png/pngread.c ****    }
1373:fltk-1.3.4-1/png/pngread.c **** 
1374:fltk-1.3.4-1/png/pngread.c ****    return 1;
1375:fltk-1.3.4-1/png/pngread.c **** }
1376:fltk-1.3.4-1/png/pngread.c **** 
1377:fltk-1.3.4-1/png/pngread.c **** /* Do the main body of a 'png_image_begin_read' function; read the PNG file
1378:fltk-1.3.4-1/png/pngread.c ****  * header and fill in all the information.  This is executed in a safe context,
1379:fltk-1.3.4-1/png/pngread.c ****  * unlike the init routine above.
1380:fltk-1.3.4-1/png/pngread.c ****  */
1381:fltk-1.3.4-1/png/pngread.c **** static int
1382:fltk-1.3.4-1/png/pngread.c **** png_image_read_header(png_voidp argument)
1383:fltk-1.3.4-1/png/pngread.c **** {
1384:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = png_voidcast(png_imagep, argument);
1385:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
1386:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
1387:fltk-1.3.4-1/png/pngread.c **** 
1388:fltk-1.3.4-1/png/pngread.c ****    png_set_benign_errors(png_ptr, 1/*warn*/);
1389:fltk-1.3.4-1/png/pngread.c ****    png_read_info(png_ptr, info_ptr);
1390:fltk-1.3.4-1/png/pngread.c **** 
1391:fltk-1.3.4-1/png/pngread.c ****    /* Do this the fast way; just read directly out of png_struct. */
1392:fltk-1.3.4-1/png/pngread.c ****    image->width = png_ptr->width;
1393:fltk-1.3.4-1/png/pngread.c ****    image->height = png_ptr->height;
1394:fltk-1.3.4-1/png/pngread.c **** 
1395:fltk-1.3.4-1/png/pngread.c ****    {
1396:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 format = png_image_format(png_ptr);
1397:fltk-1.3.4-1/png/pngread.c **** 
1398:fltk-1.3.4-1/png/pngread.c ****       image->format = format;
1399:fltk-1.3.4-1/png/pngread.c **** 
1400:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_COLORSPACE_SUPPORTED
1401:fltk-1.3.4-1/png/pngread.c ****       /* Does the colorspace match sRGB?  If there is no color endpoint
1402:fltk-1.3.4-1/png/pngread.c ****        * (colorant) information assume yes, otherwise require the
1403:fltk-1.3.4-1/png/pngread.c ****        * 'ENDPOINTS_MATCHP_sRGB' colorspace flag to have been set.  If the
1404:fltk-1.3.4-1/png/pngread.c ****        * colorspace has been determined to be invalid ignore it.
1405:fltk-1.3.4-1/png/pngread.c ****        */
1406:fltk-1.3.4-1/png/pngread.c ****       if ((format & PNG_FORMAT_FLAG_COLOR) != 0 && ((png_ptr->colorspace.flags
1407:fltk-1.3.4-1/png/pngread.c ****          & (PNG_COLORSPACE_HAVE_ENDPOINTS|PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB|
1408:fltk-1.3.4-1/png/pngread.c ****             PNG_COLORSPACE_INVALID)) == PNG_COLORSPACE_HAVE_ENDPOINTS))
1409:fltk-1.3.4-1/png/pngread.c ****          image->flags |= PNG_IMAGE_FLAG_COLORSPACE_NOT_sRGB;
1410:fltk-1.3.4-1/png/pngread.c **** #endif
1411:fltk-1.3.4-1/png/pngread.c ****    }
1412:fltk-1.3.4-1/png/pngread.c **** 
1413:fltk-1.3.4-1/png/pngread.c ****    /* We need the maximum number of entries regardless of the format the
1414:fltk-1.3.4-1/png/pngread.c ****     * application sets here.
1415:fltk-1.3.4-1/png/pngread.c ****     */
1416:fltk-1.3.4-1/png/pngread.c ****    {
1417:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 cmap_entries;
1418:fltk-1.3.4-1/png/pngread.c **** 
1419:fltk-1.3.4-1/png/pngread.c ****       switch (png_ptr->color_type)
1420:fltk-1.3.4-1/png/pngread.c ****       {
1421:fltk-1.3.4-1/png/pngread.c ****          case PNG_COLOR_TYPE_GRAY:
1422:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = 1U << png_ptr->bit_depth;
1423:fltk-1.3.4-1/png/pngread.c ****             break;
1424:fltk-1.3.4-1/png/pngread.c **** 
1425:fltk-1.3.4-1/png/pngread.c ****          case PNG_COLOR_TYPE_PALETTE:
1426:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = png_ptr->num_palette;
1427:fltk-1.3.4-1/png/pngread.c ****             break;
1428:fltk-1.3.4-1/png/pngread.c **** 
1429:fltk-1.3.4-1/png/pngread.c ****          default:
1430:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = 256;
1431:fltk-1.3.4-1/png/pngread.c ****             break;
1432:fltk-1.3.4-1/png/pngread.c ****       }
1433:fltk-1.3.4-1/png/pngread.c **** 
1434:fltk-1.3.4-1/png/pngread.c ****       if (cmap_entries > 256)
1435:fltk-1.3.4-1/png/pngread.c ****          cmap_entries = 256;
1436:fltk-1.3.4-1/png/pngread.c **** 
1437:fltk-1.3.4-1/png/pngread.c ****       image->colormap_entries = cmap_entries;
1438:fltk-1.3.4-1/png/pngread.c ****    }
1439:fltk-1.3.4-1/png/pngread.c **** 
1440:fltk-1.3.4-1/png/pngread.c ****    return 1;
1441:fltk-1.3.4-1/png/pngread.c **** }
1442:fltk-1.3.4-1/png/pngread.c **** 
1443:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_STDIO_SUPPORTED
1444:fltk-1.3.4-1/png/pngread.c **** int PNGAPI
1445:fltk-1.3.4-1/png/pngread.c **** png_image_begin_read_from_stdio(png_imagep image, FILE* file)
1446:fltk-1.3.4-1/png/pngread.c **** {
1447:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
1448:fltk-1.3.4-1/png/pngread.c ****    {
1449:fltk-1.3.4-1/png/pngread.c ****       if (file != NULL)
1450:fltk-1.3.4-1/png/pngread.c ****       {
1451:fltk-1.3.4-1/png/pngread.c ****          if (png_image_read_init(image) != 0)
1452:fltk-1.3.4-1/png/pngread.c ****          {
1453:fltk-1.3.4-1/png/pngread.c ****             /* This is slightly evil, but png_init_io doesn't do anything other
1454:fltk-1.3.4-1/png/pngread.c ****              * than this and we haven't changed the standard IO functions so
1455:fltk-1.3.4-1/png/pngread.c ****              * this saves a 'safe' function.
1456:fltk-1.3.4-1/png/pngread.c ****              */
1457:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->io_ptr = file;
1458:fltk-1.3.4-1/png/pngread.c ****             return png_safe_execute(image, png_image_read_header, image);
1459:fltk-1.3.4-1/png/pngread.c ****          }
1460:fltk-1.3.4-1/png/pngread.c ****       }
1461:fltk-1.3.4-1/png/pngread.c **** 
1462:fltk-1.3.4-1/png/pngread.c ****       else
1463:fltk-1.3.4-1/png/pngread.c ****          return png_image_error(image,
1464:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_stdio: invalid argument");
1465:fltk-1.3.4-1/png/pngread.c ****    }
1466:fltk-1.3.4-1/png/pngread.c **** 
1467:fltk-1.3.4-1/png/pngread.c ****    else if (image != NULL)
1468:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image,
1469:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION");
1470:fltk-1.3.4-1/png/pngread.c **** 
1471:fltk-1.3.4-1/png/pngread.c ****    return 0;
1472:fltk-1.3.4-1/png/pngread.c **** }
1473:fltk-1.3.4-1/png/pngread.c **** 
1474:fltk-1.3.4-1/png/pngread.c **** int PNGAPI
1475:fltk-1.3.4-1/png/pngread.c **** png_image_begin_read_from_file(png_imagep image, const char *file_name)
1476:fltk-1.3.4-1/png/pngread.c **** {
1477:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
1478:fltk-1.3.4-1/png/pngread.c ****    {
1479:fltk-1.3.4-1/png/pngread.c ****       if (file_name != NULL)
1480:fltk-1.3.4-1/png/pngread.c ****       {
1481:fltk-1.3.4-1/png/pngread.c ****          FILE *fp = fopen(file_name, "rb");
1482:fltk-1.3.4-1/png/pngread.c **** 
1483:fltk-1.3.4-1/png/pngread.c ****          if (fp != NULL)
1484:fltk-1.3.4-1/png/pngread.c ****          {
1485:fltk-1.3.4-1/png/pngread.c ****             if (png_image_read_init(image) != 0)
1486:fltk-1.3.4-1/png/pngread.c ****             {
1487:fltk-1.3.4-1/png/pngread.c ****                image->opaque->png_ptr->io_ptr = fp;
1488:fltk-1.3.4-1/png/pngread.c ****                image->opaque->owned_file = 1;
1489:fltk-1.3.4-1/png/pngread.c ****                return png_safe_execute(image, png_image_read_header, image);
1490:fltk-1.3.4-1/png/pngread.c ****             }
1491:fltk-1.3.4-1/png/pngread.c **** 
1492:fltk-1.3.4-1/png/pngread.c ****             /* Clean up: just the opened file. */
1493:fltk-1.3.4-1/png/pngread.c ****             (void)fclose(fp);
1494:fltk-1.3.4-1/png/pngread.c ****          }
1495:fltk-1.3.4-1/png/pngread.c **** 
1496:fltk-1.3.4-1/png/pngread.c ****          else
1497:fltk-1.3.4-1/png/pngread.c ****             return png_image_error(image, strerror(errno));
1498:fltk-1.3.4-1/png/pngread.c ****       }
1499:fltk-1.3.4-1/png/pngread.c **** 
1500:fltk-1.3.4-1/png/pngread.c ****       else
1501:fltk-1.3.4-1/png/pngread.c ****          return png_image_error(image,
1502:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_file: invalid argument");
1503:fltk-1.3.4-1/png/pngread.c ****    }
1504:fltk-1.3.4-1/png/pngread.c **** 
1505:fltk-1.3.4-1/png/pngread.c ****    else if (image != NULL)
1506:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image,
1507:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION");
1508:fltk-1.3.4-1/png/pngread.c **** 
1509:fltk-1.3.4-1/png/pngread.c ****    return 0;
1510:fltk-1.3.4-1/png/pngread.c **** }
1511:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
1512:fltk-1.3.4-1/png/pngread.c **** 
1513:fltk-1.3.4-1/png/pngread.c **** static void PNGCBAPI
1514:fltk-1.3.4-1/png/pngread.c **** png_image_memory_read(png_structp png_ptr, png_bytep out, png_size_t need)
1515:fltk-1.3.4-1/png/pngread.c **** {
  74              		.loc 1 1515 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		.loc 1 1515 1 is_stmt 0 view .LVU20
  77 0000 F30F1EFA 		endbr64
1516:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr != NULL)
  78              		.loc 1 1516 4 is_stmt 1 view .LVU21
  79              		.loc 1 1516 7 is_stmt 0 view .LVU22
  80 0004 4885FF   		testq	%rdi, %rdi
  81 0007 745F     		je	.L32
  82              	.LBB68:
1517:fltk-1.3.4-1/png/pngread.c ****    {
1518:fltk-1.3.4-1/png/pngread.c ****       png_imagep image = png_voidcast(png_imagep, png_ptr->io_ptr);
  83              		.loc 1 1518 7 is_stmt 1 view .LVU23
  84              	.LBE68:
1515:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr != NULL)
  85              		.loc 1 1515 1 is_stmt 0 view .LVU24
  86 0009 4155     		pushq	%r13
  87              		.cfi_def_cfa_offset 16
  88              		.cfi_offset 13, -16
  89 000b 4154     		pushq	%r12
  90              		.cfi_def_cfa_offset 24
  91              		.cfi_offset 12, -24
  92 000d 55       		pushq	%rbp
  93              		.cfi_def_cfa_offset 32
  94              		.cfi_offset 6, -32
  95 000e 53       		pushq	%rbx
  96              		.cfi_def_cfa_offset 40
  97              		.cfi_offset 3, -40
  98 000f 4883EC08 		subq	$8, %rsp
  99              		.cfi_def_cfa_offset 48
 100              	.LBB79:
 101              		.loc 1 1518 18 view .LVU25
 102 0013 488B8708 		movq	264(%rdi), %rax
 102      010000
 103              	.LVL7:
1519:fltk-1.3.4-1/png/pngread.c ****       if (image != NULL)
 104              		.loc 1 1519 7 is_stmt 1 view .LVU26
 105              		.loc 1 1519 10 is_stmt 0 view .LVU27
 106 001a 4885C0   		testq	%rax, %rax
 107 001d 744A     		je	.L14
 108              	.LBB69:
1520:fltk-1.3.4-1/png/pngread.c ****       {
1521:fltk-1.3.4-1/png/pngread.c ****          png_controlp cp = image->opaque;
 109              		.loc 1 1521 10 is_stmt 1 view .LVU28
 110              		.loc 1 1521 23 is_stmt 0 view .LVU29
 111 001f 488B28   		movq	(%rax), %rbp
 112              	.LVL8:
1522:fltk-1.3.4-1/png/pngread.c ****          if (cp != NULL)
 113              		.loc 1 1522 10 is_stmt 1 view .LVU30
 114              		.loc 1 1522 13 is_stmt 0 view .LVU31
 115 0022 4885ED   		testq	%rbp, %rbp
 116 0025 7442     		je	.L14
 117              	.LBB70:
1523:fltk-1.3.4-1/png/pngread.c ****          {
1524:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep memory = cp->memory;
 118              		.loc 1 1524 13 is_stmt 1 view .LVU32
 119              		.loc 1 1524 29 is_stmt 0 view .LVU33
 120 0027 4C8B6518 		movq	24(%rbp), %r12
 121              	.LVL9:
1525:fltk-1.3.4-1/png/pngread.c ****             png_size_t size = cp->size;
 122              		.loc 1 1525 13 is_stmt 1 view .LVU34
 123              		.loc 1 1525 24 is_stmt 0 view .LVU35
 124 002b 4C8B6D20 		movq	32(%rbp), %r13
 125              	.LVL10:
1526:fltk-1.3.4-1/png/pngread.c **** 
1527:fltk-1.3.4-1/png/pngread.c ****             if (memory != NULL && size >= need)
 126              		.loc 1 1527 13 is_stmt 1 view .LVU36
 127              		.loc 1 1527 16 is_stmt 0 view .LVU37
 128 002f 4D85E4   		testq	%r12, %r12
 129 0032 7441     		je	.L15
 130 0034 4889D3   		movq	%rdx, %rbx
 131 0037 4939D5   		cmpq	%rdx, %r13
 132 003a 7239     		jb	.L15
 133 003c 4989F0   		movq	%rsi, %r8
1528:fltk-1.3.4-1/png/pngread.c ****             {
1529:fltk-1.3.4-1/png/pngread.c ****                memcpy(out, memory, need);
 134              		.loc 1 1529 16 is_stmt 1 view .LVU38
 135              	.LVL11:
 136              	.LBB71:
 137              	.LBI71:
 138              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 139              		.loc 2 31 1 view .LVU39
 140              	.LBB72:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 141              		.loc 2 34 3 view .LVU40
 142              	.LBE72:
 143              	.LBE71:
1530:fltk-1.3.4-1/png/pngread.c ****                cp->memory = memory + need;
1531:fltk-1.3.4-1/png/pngread.c ****                cp->size = size - need;
 144              		.loc 1 1531 32 is_stmt 0 view .LVU41
 145 003f 4929DD   		subq	%rbx, %r13
 146              	.LVL12:
 147              	.LBB75:
 148              	.LBB73:
 149              		.loc 2 34 10 view .LVU42
 150 0042 4C89E6   		movq	%r12, %rsi
 151              	.LVL13:
 152              		.loc 2 34 10 view .LVU43
 153              	.LBE73:
 154              	.LBE75:
1530:fltk-1.3.4-1/png/pngread.c ****                cp->memory = memory + need;
 155              		.loc 1 1530 36 view .LVU44
 156 0045 4901DC   		addq	%rbx, %r12
 157              	.LVL14:
 158              	.LBB76:
 159              	.LBB74:
 160              		.loc 2 34 10 view .LVU45
 161 0048 4C89C7   		movq	%r8, %rdi
 162              	.LVL15:
 163              		.loc 2 34 10 view .LVU46
 164 004b E8000000 		call	memcpy@PLT
 164      00
 165              	.LVL16:
 166              		.loc 2 34 10 view .LVU47
 167              	.LBE74:
 168              	.LBE76:
1530:fltk-1.3.4-1/png/pngread.c ****                cp->memory = memory + need;
 169              		.loc 1 1530 16 is_stmt 1 view .LVU48
1530:fltk-1.3.4-1/png/pngread.c ****                cp->memory = memory + need;
 170              		.loc 1 1530 36 is_stmt 0 view .LVU49
 171 0050 4C896518 		movq	%r12, 24(%rbp)
 172              		.loc 1 1531 16 is_stmt 1 view .LVU50
 173              		.loc 1 1531 32 is_stmt 0 view .LVU51
 174 0054 4C896D20 		movq	%r13, 32(%rbp)
1532:fltk-1.3.4-1/png/pngread.c ****                return;
 175              		.loc 1 1532 16 is_stmt 1 view .LVU52
 176              	.LBE70:
 177              	.LBE69:
 178              	.LBE79:
1533:fltk-1.3.4-1/png/pngread.c ****             }
1534:fltk-1.3.4-1/png/pngread.c **** 
1535:fltk-1.3.4-1/png/pngread.c ****             png_error(png_ptr, "read beyond end of data");
1536:fltk-1.3.4-1/png/pngread.c ****          }
1537:fltk-1.3.4-1/png/pngread.c ****       }
1538:fltk-1.3.4-1/png/pngread.c **** 
1539:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "invalid memory read");
1540:fltk-1.3.4-1/png/pngread.c ****    }
1541:fltk-1.3.4-1/png/pngread.c **** }
 179              		.loc 1 1541 1 is_stmt 0 view .LVU53
 180 0058 4883C408 		addq	$8, %rsp
 181              		.cfi_def_cfa_offset 40
 182 005c 5B       		popq	%rbx
 183              		.cfi_def_cfa_offset 32
 184              	.LVL17:
 185              		.loc 1 1541 1 view .LVU54
 186 005d 5D       		popq	%rbp
 187              		.cfi_def_cfa_offset 24
 188              	.LVL18:
 189              		.loc 1 1541 1 view .LVU55
 190 005e 415C     		popq	%r12
 191              		.cfi_def_cfa_offset 16
 192 0060 415D     		popq	%r13
 193              		.cfi_def_cfa_offset 8
 194 0062 C3       		ret
 195              	.LVL19:
 196              		.p2align 4,,10
 197 0063 0F1F4400 		.p2align 3
 197      00
 198              	.L32:
 199              		.cfi_restore 3
 200              		.cfi_restore 6
 201              		.cfi_restore 12
 202              		.cfi_restore 13
 203              		.loc 1 1541 1 view .LVU56
 204 0068 C3       		ret
 205              	.LVL20:
 206              	.L14:
 207              		.cfi_def_cfa_offset 48
 208              		.cfi_offset 3, -40
 209              		.cfi_offset 6, -32
 210              		.cfi_offset 12, -24
 211              		.cfi_offset 13, -16
 212              	.LBB80:
1539:fltk-1.3.4-1/png/pngread.c ****    }
 213              		.loc 1 1539 7 is_stmt 1 view .LVU57
 214 0069 488D3500 		leaq	.LC1(%rip), %rsi
 214      000000
 215              	.LVL21:
1539:fltk-1.3.4-1/png/pngread.c ****    }
 216              		.loc 1 1539 7 is_stmt 0 view .LVU58
 217 0070 E8000000 		call	png_error@PLT
 217      00
 218              	.LVL22:
 219              	.L15:
 220              	.LBB78:
 221              	.LBB77:
1535:fltk-1.3.4-1/png/pngread.c ****          }
 222              		.loc 1 1535 13 is_stmt 1 view .LVU59
 223 0075 488D3500 		leaq	.LC0(%rip), %rsi
 223      000000
 224              	.LVL23:
1535:fltk-1.3.4-1/png/pngread.c ****          }
 225              		.loc 1 1535 13 is_stmt 0 view .LVU60
 226 007c E8000000 		call	png_error@PLT
 226      00
 227              	.LVL24:
1535:fltk-1.3.4-1/png/pngread.c ****          }
 228              		.loc 1 1535 13 view .LVU61
 229              	.LBE77:
 230              	.LBE78:
 231              	.LBE80:
 232              		.cfi_endproc
 233              	.LFE61:
 235              		.section	.text.png_image_skip_unused_chunks,"ax",@progbits
 236              		.p2align 4
 238              	png_image_skip_unused_chunks:
 239              	.LVL25:
 240              	.LFB63:
1542:fltk-1.3.4-1/png/pngread.c **** 
1543:fltk-1.3.4-1/png/pngread.c **** int PNGAPI png_image_begin_read_from_memory(png_imagep image,
1544:fltk-1.3.4-1/png/pngread.c ****    png_const_voidp memory, png_size_t size)
1545:fltk-1.3.4-1/png/pngread.c **** {
1546:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
1547:fltk-1.3.4-1/png/pngread.c ****    {
1548:fltk-1.3.4-1/png/pngread.c ****       if (memory != NULL && size > 0)
1549:fltk-1.3.4-1/png/pngread.c ****       {
1550:fltk-1.3.4-1/png/pngread.c ****          if (png_image_read_init(image) != 0)
1551:fltk-1.3.4-1/png/pngread.c ****          {
1552:fltk-1.3.4-1/png/pngread.c ****             /* Now set the IO functions to read from the memory buffer and
1553:fltk-1.3.4-1/png/pngread.c ****              * store it into io_ptr.  Again do this in-place to avoid calling a
1554:fltk-1.3.4-1/png/pngread.c ****              * libpng function that requires error handling.
1555:fltk-1.3.4-1/png/pngread.c ****              */
1556:fltk-1.3.4-1/png/pngread.c ****             image->opaque->memory = png_voidcast(png_const_bytep, memory);
1557:fltk-1.3.4-1/png/pngread.c ****             image->opaque->size = size;
1558:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->io_ptr = image;
1559:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->read_data_fn = png_image_memory_read;
1560:fltk-1.3.4-1/png/pngread.c **** 
1561:fltk-1.3.4-1/png/pngread.c ****             return png_safe_execute(image, png_image_read_header, image);
1562:fltk-1.3.4-1/png/pngread.c ****          }
1563:fltk-1.3.4-1/png/pngread.c ****       }
1564:fltk-1.3.4-1/png/pngread.c **** 
1565:fltk-1.3.4-1/png/pngread.c ****       else
1566:fltk-1.3.4-1/png/pngread.c ****          return png_image_error(image,
1567:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_memory: invalid argument");
1568:fltk-1.3.4-1/png/pngread.c ****    }
1569:fltk-1.3.4-1/png/pngread.c **** 
1570:fltk-1.3.4-1/png/pngread.c ****    else if (image != NULL)
1571:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image,
1572:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION");
1573:fltk-1.3.4-1/png/pngread.c **** 
1574:fltk-1.3.4-1/png/pngread.c ****    return 0;
1575:fltk-1.3.4-1/png/pngread.c **** }
1576:fltk-1.3.4-1/png/pngread.c **** 
1577:fltk-1.3.4-1/png/pngread.c **** /* Utility function to skip chunks that are not used by the simplified image
1578:fltk-1.3.4-1/png/pngread.c ****  * read functions and an appropriate macro to call it.
1579:fltk-1.3.4-1/png/pngread.c ****  */
1580:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
1581:fltk-1.3.4-1/png/pngread.c **** static void
1582:fltk-1.3.4-1/png/pngread.c **** png_image_skip_unused_chunks(png_structrp png_ptr)
1583:fltk-1.3.4-1/png/pngread.c **** {
 241              		.loc 1 1583 1 is_stmt 1 view -0
 242              		.cfi_startproc
 243              	.LBB81:
1584:fltk-1.3.4-1/png/pngread.c ****    /* Prepare the reader to ignore all recognized chunks whose data will not
1585:fltk-1.3.4-1/png/pngread.c ****     * be used, i.e., all chunks recognized by libpng except for those
1586:fltk-1.3.4-1/png/pngread.c ****     * involved in basic image reading:
1587:fltk-1.3.4-1/png/pngread.c ****     *
1588:fltk-1.3.4-1/png/pngread.c ****     *    IHDR, PLTE, IDAT, IEND
1589:fltk-1.3.4-1/png/pngread.c ****     *
1590:fltk-1.3.4-1/png/pngread.c ****     * Or image data handling:
1591:fltk-1.3.4-1/png/pngread.c ****     *
1592:fltk-1.3.4-1/png/pngread.c ****     *    tRNS, bKGD, gAMA, cHRM, sRGB, [iCCP] and sBIT.
1593:fltk-1.3.4-1/png/pngread.c ****     *
1594:fltk-1.3.4-1/png/pngread.c ****     * This provides a small performance improvement and eliminates any
1595:fltk-1.3.4-1/png/pngread.c ****     * potential vulnerability to security problems in the unused chunks.
1596:fltk-1.3.4-1/png/pngread.c ****     *
1597:fltk-1.3.4-1/png/pngread.c ****     * At present the iCCP chunk data isn't used, so iCCP chunk can be ignored
1598:fltk-1.3.4-1/png/pngread.c ****     * too.  This allows the simplified API to be compiled without iCCP support,
1599:fltk-1.3.4-1/png/pngread.c ****     * however if the support is there the chunk is still checked to detect
1600:fltk-1.3.4-1/png/pngread.c ****     * errors (which are unfortunately quite common.)
1601:fltk-1.3.4-1/png/pngread.c ****     */
1602:fltk-1.3.4-1/png/pngread.c ****    {
1603:fltk-1.3.4-1/png/pngread.c ****          static PNG_CONST png_byte chunks_to_process[] = {
 244              		.loc 1 1603 10 view .LVU63
1604:fltk-1.3.4-1/png/pngread.c ****             98,  75,  71,  68, '\0',  /* bKGD */
1605:fltk-1.3.4-1/png/pngread.c ****             99,  72,  82,  77, '\0',  /* cHRM */
1606:fltk-1.3.4-1/png/pngread.c ****            103,  65,  77,  65, '\0',  /* gAMA */
1607:fltk-1.3.4-1/png/pngread.c **** #        ifdef PNG_READ_iCCP_SUPPORTED
1608:fltk-1.3.4-1/png/pngread.c ****            105,  67,  67,  80, '\0',  /* iCCP */
1609:fltk-1.3.4-1/png/pngread.c **** #        endif
1610:fltk-1.3.4-1/png/pngread.c ****            115,  66,  73,  84, '\0',  /* sBIT */
1611:fltk-1.3.4-1/png/pngread.c ****            115,  82,  71,  66, '\0',  /* sRGB */
1612:fltk-1.3.4-1/png/pngread.c ****            };
1613:fltk-1.3.4-1/png/pngread.c **** 
1614:fltk-1.3.4-1/png/pngread.c ****        /* Ignore unknown chunks and all other chunks except for the
1615:fltk-1.3.4-1/png/pngread.c ****         * IHDR, PLTE, tRNS, IDAT, and IEND chunks.
1616:fltk-1.3.4-1/png/pngread.c ****         */
1617:fltk-1.3.4-1/png/pngread.c ****        png_set_keep_unknown_chunks(png_ptr, PNG_HANDLE_CHUNK_NEVER,
 245              		.loc 1 1617 8 view .LVU64
 246              	.LBE81:
1583:fltk-1.3.4-1/png/pngread.c ****    /* Prepare the reader to ignore all recognized chunks whose data will not
 247              		.loc 1 1583 1 is_stmt 0 view .LVU65
 248 0000 55       		pushq	%rbp
 249              		.cfi_def_cfa_offset 16
 250              		.cfi_offset 6, -16
 251              	.LBB82:
 252              		.loc 1 1617 8 view .LVU66
 253 0001 B9FFFFFF 		movl	$-1, %ecx
 253      FF
 254              	.LBE82:
1583:fltk-1.3.4-1/png/pngread.c ****    /* Prepare the reader to ignore all recognized chunks whose data will not
 255              		.loc 1 1583 1 view .LVU67
 256 0006 4889FD   		movq	%rdi, %rbp
 257              	.LBB83:
 258              		.loc 1 1617 8 view .LVU68
 259 0009 31D2     		xorl	%edx, %edx
 260 000b BE010000 		movl	$1, %esi
 260      00
 261 0010 E8000000 		call	png_set_keep_unknown_chunks@PLT
 261      00
 262              	.LVL26:
1618:fltk-1.3.4-1/png/pngread.c ****          NULL, -1);
1619:fltk-1.3.4-1/png/pngread.c **** 
1620:fltk-1.3.4-1/png/pngread.c ****        /* But do not ignore image data handling chunks */
1621:fltk-1.3.4-1/png/pngread.c ****        png_set_keep_unknown_chunks(png_ptr, PNG_HANDLE_CHUNK_AS_DEFAULT,
 263              		.loc 1 1621 8 is_stmt 1 view .LVU69
 264 0015 4889EF   		movq	%rbp, %rdi
 265 0018 B9060000 		movl	$6, %ecx
 265      00
 266 001d 31F6     		xorl	%esi, %esi
 267 001f 488D1500 		leaq	chunks_to_process.7006(%rip), %rdx
 267      000000
 268              	.LBE83:
1622:fltk-1.3.4-1/png/pngread.c ****          chunks_to_process, (int)/*SAFE*/(sizeof chunks_to_process)/5);
1623:fltk-1.3.4-1/png/pngread.c ****     }
1624:fltk-1.3.4-1/png/pngread.c **** }
 269              		.loc 1 1624 1 is_stmt 0 view .LVU70
 270 0026 5D       		popq	%rbp
 271              		.cfi_def_cfa_offset 8
 272              	.LVL27:
 273              	.LBB84:
1621:fltk-1.3.4-1/png/pngread.c ****          chunks_to_process, (int)/*SAFE*/(sizeof chunks_to_process)/5);
 274              		.loc 1 1621 8 view .LVU71
 275 0027 E9000000 		jmp	png_set_keep_unknown_chunks@PLT
 275      00
 276              	.LVL28:
1621:fltk-1.3.4-1/png/pngread.c ****          chunks_to_process, (int)/*SAFE*/(sizeof chunks_to_process)/5);
 277              		.loc 1 1621 8 view .LVU72
 278              	.LBE84:
 279              		.cfi_endproc
 280              	.LFE63:
 282              		.section	.rodata.png_read_info.part.0.str1.1,"aMS",@progbits,1
 283              	.LC2:
 284 0000 4D697373 		.string	"Missing IHDR before IDAT"
 284      696E6720 
 284      49484452 
 284      20626566 
 284      6F726520 
 285              	.LC3:
 286 0019 4D697373 		.string	"Missing PLTE before IDAT"
 286      696E6720 
 286      504C5445 
 286      20626566 
 286      6F726520 
 287              	.LC4:
 288 0032 546F6F20 		.string	"Too many IDATs found"
 288      6D616E79 
 288      20494441 
 288      54732066 
 288      6F756E64 
 289              		.section	.text.png_read_info.part.0,"ax",@progbits
 290              		.p2align 4
 292              	png_read_info.part.0:
 293              	.LVL29:
 294              	.LFB81:
  92:fltk-1.3.4-1/png/pngread.c **** {
 295              		.loc 1 92 1 is_stmt 1 view -0
 296              		.cfi_startproc
 104:fltk-1.3.4-1/png/pngread.c **** 
 297              		.loc 1 104 4 view .LVU74
  92:fltk-1.3.4-1/png/pngread.c **** {
 298              		.loc 1 92 1 is_stmt 0 view .LVU75
 299 0000 4155     		pushq	%r13
 300              		.cfi_def_cfa_offset 16
 301              		.cfi_offset 13, -16
 302 0002 4989F5   		movq	%rsi, %r13
 303 0005 4154     		pushq	%r12
 304              		.cfi_def_cfa_offset 24
 305              		.cfi_offset 12, -24
 306 0007 55       		pushq	%rbp
 307              		.cfi_def_cfa_offset 32
 308              		.cfi_offset 6, -32
 309 0008 4889FD   		movq	%rdi, %rbp
 310 000b 53       		pushq	%rbx
 311              		.cfi_def_cfa_offset 40
 312              		.cfi_offset 3, -40
 313 000c 4883EC08 		subq	$8, %rsp
 314              		.cfi_def_cfa_offset 48
 104:fltk-1.3.4-1/png/pngread.c **** 
 315              		.loc 1 104 4 view .LVU76
 316 0010 E8000000 		call	png_read_sig@PLT
 316      00
 317              	.LVL30:
 318              		.p2align 4,,10
 319 0015 0F1F00   		.p2align 3
 320              	.L38:
 106:fltk-1.3.4-1/png/pngread.c ****    {
 321              		.loc 1 106 4 is_stmt 1 view .LVU77
 322              	.LBB85:
 108:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 323              		.loc 1 108 7 view .LVU78
 108:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 324              		.loc 1 108 28 is_stmt 0 view .LVU79
 325 0018 4889EF   		movq	%rbp, %rdi
 326 001b E8000000 		call	png_read_chunk_header@PLT
 326      00
 327              	.LVL31:
 109:fltk-1.3.4-1/png/pngread.c **** 
 328              		.loc 1 109 19 view .LVU80
 329 0020 8B9D1802 		movl	536(%rbp), %ebx
 329      0000
 108:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 330              		.loc 1 108 28 view .LVU81
 331 0026 4189C4   		movl	%eax, %r12d
 332              	.LVL32:
 109:fltk-1.3.4-1/png/pngread.c **** 
 333              		.loc 1 109 7 is_stmt 1 view .LVU82
 114:fltk-1.3.4-1/png/pngread.c ****       {
 334              		.loc 1 114 7 view .LVU83
 116:fltk-1.3.4-1/png/pngread.c ****             png_chunk_error(png_ptr, "Missing IHDR before IDAT");
 335              		.loc 1 116 22 is_stmt 0 view .LVU84
 336 0029 8B852C01 		movl	300(%rbp), %eax
 336      0000
 337              	.LVL33:
 114:fltk-1.3.4-1/png/pngread.c ****       {
 338              		.loc 1 114 10 view .LVU85
 339 002f 81FB5441 		cmpl	$1229209940, %ebx
 339      4449
 340 0035 7431     		je	.L80
 129:fltk-1.3.4-1/png/pngread.c ****          png_ptr->mode |= PNG_AFTER_IDAT;
 341              		.loc 1 129 12 is_stmt 1 view .LVU86
 129:fltk-1.3.4-1/png/pngread.c ****          png_ptr->mode |= PNG_AFTER_IDAT;
 342              		.loc 1 129 15 is_stmt 0 view .LVU87
 343 0037 A804     		testb	$4, %al
 344 0039 7409     		je	.L45
 130:fltk-1.3.4-1/png/pngread.c **** 
 345              		.loc 1 130 10 is_stmt 1 view .LVU88
 130:fltk-1.3.4-1/png/pngread.c **** 
 346              		.loc 1 130 24 is_stmt 0 view .LVU89
 347 003b 83C808   		orl	$8, %eax
 348 003e 89852C01 		movl	%eax, 300(%rbp)
 348      0000
 349              	.L45:
 135:fltk-1.3.4-1/png/pngread.c ****          png_handle_IHDR(png_ptr, info_ptr, length);
 350              		.loc 1 135 7 is_stmt 1 view .LVU90
 135:fltk-1.3.4-1/png/pngread.c ****          png_handle_IHDR(png_ptr, info_ptr, length);
 351              		.loc 1 135 10 is_stmt 0 view .LVU91
 352 0044 81FB5244 		cmpl	$1229472850, %ebx
 352      4849
 353 004a 746C     		je	.L81
 138:fltk-1.3.4-1/png/pngread.c ****          png_handle_IEND(png_ptr, info_ptr, length);
 354              		.loc 1 138 12 is_stmt 1 view .LVU92
 138:fltk-1.3.4-1/png/pngread.c ****          png_handle_IEND(png_ptr, info_ptr, length);
 355              		.loc 1 138 15 is_stmt 0 view .LVU93
 356 004c 81FB444E 		cmpl	$1229278788, %ebx
 356      4549
 357 0052 757C     		jne	.L48
 139:fltk-1.3.4-1/png/pngread.c **** 
 358              		.loc 1 139 10 is_stmt 1 view .LVU94
 359 0054 4489E2   		movl	%r12d, %edx
 360 0057 4C89EE   		movq	%r13, %rsi
 361 005a 4889EF   		movq	%rbp, %rdi
 362 005d E8000000 		call	png_handle_IEND@PLT
 362      00
 363              	.LVL34:
 364 0062 EBB4     		jmp	.L38
 365              		.p2align 4,,10
 366 0064 0F1F4000 		.p2align 3
 367              	.L80:
 116:fltk-1.3.4-1/png/pngread.c ****             png_chunk_error(png_ptr, "Missing IHDR before IDAT");
 368              		.loc 1 116 10 view .LVU95
 116:fltk-1.3.4-1/png/pngread.c ****             png_chunk_error(png_ptr, "Missing IHDR before IDAT");
 369              		.loc 1 116 13 is_stmt 0 view .LVU96
 370 0068 A801     		testb	$1, %al
 371 006a 0F846B03 		je	.L82
 371      0000
 119:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_PLTE) == 0)
 372              		.loc 1 119 15 is_stmt 1 view .LVU97
 119:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_PLTE) == 0)
 373              		.loc 1 119 18 is_stmt 0 view .LVU98
 374 0070 80BD7702 		cmpb	$3, 631(%rbp)
 374      000003
 375 0077 0F849300 		je	.L83
 375      0000
 376              	.L41:
 123:fltk-1.3.4-1/png/pngread.c ****             png_chunk_benign_error(png_ptr, "Too many IDATs found");
 377              		.loc 1 123 15 is_stmt 1 view .LVU99
 123:fltk-1.3.4-1/png/pngread.c ****             png_chunk_benign_error(png_ptr, "Too many IDATs found");
 378              		.loc 1 123 18 is_stmt 0 view .LVU100
 379 007d A808     		testb	$8, %al
 380 007f 0F85AB00 		jne	.L84
 380      0000
 381              	.L42:
 126:fltk-1.3.4-1/png/pngread.c ****       }
 382              		.loc 1 126 10 is_stmt 1 view .LVU101
 126:fltk-1.3.4-1/png/pngread.c ****       }
 383              		.loc 1 126 24 is_stmt 0 view .LVU102
 384 0085 83C804   		orl	$4, %eax
 142:fltk-1.3.4-1/png/pngread.c ****       {
 385              		.loc 1 142 24 view .LVU103
 386 0088 BE544144 		movl	$1229209940, %esi
 386      49
 387 008d 4889EF   		movq	%rbp, %rdi
 126:fltk-1.3.4-1/png/pngread.c ****       }
 388              		.loc 1 126 24 view .LVU104
 389 0090 89852C01 		movl	%eax, 300(%rbp)
 389      0000
 135:fltk-1.3.4-1/png/pngread.c ****          png_handle_IHDR(png_ptr, info_ptr, length);
 390              		.loc 1 135 7 is_stmt 1 view .LVU105
 138:fltk-1.3.4-1/png/pngread.c ****          png_handle_IEND(png_ptr, info_ptr, length);
 391              		.loc 1 138 12 view .LVU106
 142:fltk-1.3.4-1/png/pngread.c ****       {
 392              		.loc 1 142 12 view .LVU107
 142:fltk-1.3.4-1/png/pngread.c ****       {
 393              		.loc 1 142 24 is_stmt 0 view .LVU108
 394 0096 E8000000 		call	png_chunk_unknown_handling@PLT
 394      00
 395              	.LVL35:
 142:fltk-1.3.4-1/png/pngread.c ****       {
 396              		.loc 1 142 15 view .LVU109
 397 009b 85C0     		testl	%eax, %eax
 398 009d 0F85DA02 		jne	.L85
 398      0000
 156:fltk-1.3.4-1/png/pngread.c ****          png_handle_PLTE(png_ptr, info_ptr, length);
 399              		.loc 1 156 12 is_stmt 1 view .LVU110
 159:fltk-1.3.4-1/png/pngread.c ****       {
 400              		.loc 1 159 12 view .LVU111
 161:fltk-1.3.4-1/png/pngread.c ****          break;
 401              		.loc 1 161 10 view .LVU112
 161:fltk-1.3.4-1/png/pngread.c ****          break;
 402              		.loc 1 161 29 is_stmt 0 view .LVU113
 403 00a3 4489A558 		movl	%r12d, 600(%rbp)
 403      020000
 162:fltk-1.3.4-1/png/pngread.c ****       }
 404              		.loc 1 162 10 is_stmt 1 view .LVU114
 405              	.LBE85:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 406              		.loc 1 254 1 is_stmt 0 view .LVU115
 407 00aa 4883C408 		addq	$8, %rsp
 408              		.cfi_remember_state
 409              		.cfi_def_cfa_offset 40
 410 00ae 5B       		popq	%rbx
 411              		.cfi_def_cfa_offset 32
 412              	.LVL36:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 413              		.loc 1 254 1 view .LVU116
 414 00af 5D       		popq	%rbp
 415              		.cfi_def_cfa_offset 24
 416              	.LVL37:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 417              		.loc 1 254 1 view .LVU117
 418 00b0 415C     		popq	%r12
 419              		.cfi_def_cfa_offset 16
 420              	.LVL38:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 421              		.loc 1 254 1 view .LVU118
 422 00b2 415D     		popq	%r13
 423              		.cfi_def_cfa_offset 8
 424              	.LVL39:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 425              		.loc 1 254 1 view .LVU119
 426 00b4 C3       		ret
 427              	.LVL40:
 428              		.p2align 4,,10
 429 00b5 0F1F00   		.p2align 3
 430              	.L81:
 431              		.cfi_restore_state
 432              	.LBB86:
 136:fltk-1.3.4-1/png/pngread.c **** 
 433              		.loc 1 136 10 is_stmt 1 view .LVU120
 434 00b8 4489E2   		movl	%r12d, %edx
 435 00bb 4C89EE   		movq	%r13, %rsi
 436 00be 4889EF   		movq	%rbp, %rdi
 437 00c1 E8000000 		call	png_handle_IHDR@PLT
 437      00
 438              	.LVL41:
 439 00c6 E94DFFFF 		jmp	.L38
 439      FF
 440 00cb 0F1F4400 		.p2align 4,,10
 440      00
 441              		.p2align 3
 442              	.L48:
 142:fltk-1.3.4-1/png/pngread.c ****       {
 443              		.loc 1 142 12 view .LVU121
 142:fltk-1.3.4-1/png/pngread.c ****       {
 444              		.loc 1 142 24 is_stmt 0 view .LVU122
 445 00d0 89DE     		movl	%ebx, %esi
 446 00d2 4889EF   		movq	%rbp, %rdi
 447 00d5 E8000000 		call	png_chunk_unknown_handling@PLT
 447      00
 448              	.LVL42:
 449 00da 89C1     		movl	%eax, %ecx
 450              	.LVL43:
 142:fltk-1.3.4-1/png/pngread.c ****       {
 451              		.loc 1 142 15 view .LVU123
 452 00dc 85C0     		testl	%eax, %eax
 453 00de 7470     		je	.L49
 144:fltk-1.3.4-1/png/pngread.c **** 
 454              		.loc 1 144 10 is_stmt 1 view .LVU124
 455 00e0 4489E2   		movl	%r12d, %edx
 456 00e3 4C89EE   		movq	%r13, %rsi
 457 00e6 4889EF   		movq	%rbp, %rdi
 458 00e9 E8000000 		call	png_handle_unknown@PLT
 458      00
 459              	.LVL44:
 146:fltk-1.3.4-1/png/pngread.c ****             png_ptr->mode |= PNG_HAVE_PLTE;
 460              		.loc 1 146 10 view .LVU125
 146:fltk-1.3.4-1/png/pngread.c ****             png_ptr->mode |= PNG_HAVE_PLTE;
 461              		.loc 1 146 13 is_stmt 0 view .LVU126
 462 00ee 81FB4554 		cmpl	$1347179589, %ebx
 462      4C50
 463 00f4 0F851EFF 		jne	.L38
 463      FFFF
 147:fltk-1.3.4-1/png/pngread.c **** 
 464              		.loc 1 147 13 is_stmt 1 view .LVU127
 147:fltk-1.3.4-1/png/pngread.c **** 
 465              		.loc 1 147 27 is_stmt 0 view .LVU128
 466 00fa 838D2C01 		orl	$2, 300(%rbp)
 466      000002
 467 0101 E912FFFF 		jmp	.L38
 467      FF
 468 0106 662E0F1F 		.p2align 4,,10
 468      84000000 
 468      0000
 469              		.p2align 3
 470              	.L83:
 119:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_PLTE) == 0)
 471              		.loc 1 119 65 view .LVU129
 472 0110 A802     		testb	$2, %al
 473 0112 0F8565FF 		jne	.L41
 473      FFFF
 121:fltk-1.3.4-1/png/pngread.c **** 
 474              		.loc 1 121 13 is_stmt 1 view .LVU130
 475 0118 488D3500 		leaq	.LC3(%rip), %rsi
 475      000000
 476 011f 4889EF   		movq	%rbp, %rdi
 477 0122 E8000000 		call	png_chunk_error@PLT
 477      00
 478              	.LVL45:
 479 0127 660F1F84 		.p2align 4,,10
 479      00000000 
 479      00
 480              		.p2align 3
 481              	.L84:
 124:fltk-1.3.4-1/png/pngread.c **** 
 482              		.loc 1 124 13 view .LVU131
 483 0130 488D3500 		leaq	.LC4(%rip), %rsi
 483      000000
 484 0137 4889EF   		movq	%rbp, %rdi
 485 013a E8000000 		call	png_chunk_benign_error@PLT
 485      00
 486              	.LVL46:
 487 013f 8B852C01 		movl	300(%rbp), %eax
 487      0000
 488 0145 E93BFFFF 		jmp	.L42
 488      FF
 489              	.LVL47:
 490 014a 660F1F44 		.p2align 4,,10
 490      0000
 491              		.p2align 3
 492              	.L49:
 156:fltk-1.3.4-1/png/pngread.c ****          png_handle_PLTE(png_ptr, info_ptr, length);
 493              		.loc 1 156 12 view .LVU132
 156:fltk-1.3.4-1/png/pngread.c ****          png_handle_PLTE(png_ptr, info_ptr, length);
 494              		.loc 1 156 15 is_stmt 0 view .LVU133
 495 0150 81FB4554 		cmpl	$1347179589, %ebx
 495      4C50
 496 0156 7513     		jne	.L86
 157:fltk-1.3.4-1/png/pngread.c **** 
 497              		.loc 1 157 10 is_stmt 1 view .LVU134
 498 0158 4489E2   		movl	%r12d, %edx
 499 015b 4C89EE   		movq	%r13, %rsi
 500 015e 4889EF   		movq	%rbp, %rdi
 501 0161 E8000000 		call	png_handle_PLTE@PLT
 501      00
 502              	.LVL48:
 157:fltk-1.3.4-1/png/pngread.c **** 
 503              		.loc 1 157 10 is_stmt 0 view .LVU135
 504 0166 E9ADFEFF 		jmp	.L38
 504      FF
 505              	.LVL49:
 506              	.L86:
 166:fltk-1.3.4-1/png/pngread.c ****          png_handle_bKGD(png_ptr, info_ptr, length);
 507              		.loc 1 166 12 is_stmt 1 view .LVU136
 166:fltk-1.3.4-1/png/pngread.c ****          png_handle_bKGD(png_ptr, info_ptr, length);
 508              		.loc 1 166 15 is_stmt 0 view .LVU137
 509 016b 81FB4447 		cmpl	$1649100612, %ebx
 509      4B62
 510 0171 0F84D900 		je	.L87
 510      0000
 171:fltk-1.3.4-1/png/pngread.c ****          png_handle_cHRM(png_ptr, info_ptr, length);
 511              		.loc 1 171 12 is_stmt 1 view .LVU138
 171:fltk-1.3.4-1/png/pngread.c ****          png_handle_cHRM(png_ptr, info_ptr, length);
 512              		.loc 1 171 15 is_stmt 0 view .LVU139
 513 0177 81FB4D52 		cmpl	$1665684045, %ebx
 513      4863
 514 017d 0F84E500 		je	.L88
 514      0000
 176:fltk-1.3.4-1/png/pngread.c ****          png_handle_gAMA(png_ptr, info_ptr, length);
 515              		.loc 1 176 12 is_stmt 1 view .LVU140
 176:fltk-1.3.4-1/png/pngread.c ****          png_handle_gAMA(png_ptr, info_ptr, length);
 516              		.loc 1 176 15 is_stmt 0 view .LVU141
 517 0183 81FB414D 		cmpl	$1732332865, %ebx
 517      4167
 518 0189 0F84F100 		je	.L89
 518      0000
 181:fltk-1.3.4-1/png/pngread.c ****          png_handle_hIST(png_ptr, info_ptr, length);
 519              		.loc 1 181 12 is_stmt 1 view .LVU142
 181:fltk-1.3.4-1/png/pngread.c ****          png_handle_hIST(png_ptr, info_ptr, length);
 520              		.loc 1 181 15 is_stmt 0 view .LVU143
 521 018f 81FB5453 		cmpl	$1749635924, %ebx
 521      4968
 522 0195 0F84FD00 		je	.L90
 522      0000
 186:fltk-1.3.4-1/png/pngread.c ****          png_handle_oFFs(png_ptr, info_ptr, length);
 523              		.loc 1 186 12 is_stmt 1 view .LVU144
 186:fltk-1.3.4-1/png/pngread.c ****          png_handle_oFFs(png_ptr, info_ptr, length);
 524              		.loc 1 186 15 is_stmt 0 view .LVU145
 525 019b 81FB7346 		cmpl	$1866876531, %ebx
 525      466F
 526 01a1 0F840901 		je	.L91
 526      0000
 191:fltk-1.3.4-1/png/pngread.c ****          png_handle_pCAL(png_ptr, info_ptr, length);
 527              		.loc 1 191 12 is_stmt 1 view .LVU146
 191:fltk-1.3.4-1/png/pngread.c ****          png_handle_pCAL(png_ptr, info_ptr, length);
 528              		.loc 1 191 15 is_stmt 0 view .LVU147
 529 01a7 81FB4C41 		cmpl	$1883455820, %ebx
 529      4370
 530 01ad 0F841501 		je	.L92
 530      0000
 196:fltk-1.3.4-1/png/pngread.c ****          png_handle_sCAL(png_ptr, info_ptr, length);
 531              		.loc 1 196 12 is_stmt 1 view .LVU148
 196:fltk-1.3.4-1/png/pngread.c ****          png_handle_sCAL(png_ptr, info_ptr, length);
 532              		.loc 1 196 15 is_stmt 0 view .LVU149
 533 01b3 81FB4C41 		cmpl	$1933787468, %ebx
 533      4373
 534 01b9 0F842101 		je	.L93
 534      0000
 201:fltk-1.3.4-1/png/pngread.c ****          png_handle_pHYs(png_ptr, info_ptr, length);
 535              		.loc 1 201 12 is_stmt 1 view .LVU150
 201:fltk-1.3.4-1/png/pngread.c ****          png_handle_pHYs(png_ptr, info_ptr, length);
 536              		.loc 1 201 15 is_stmt 0 view .LVU151
 537 01bf 81FB7359 		cmpl	$1883789683, %ebx
 537      4870
 538 01c5 0F842D01 		je	.L94
 538      0000
 206:fltk-1.3.4-1/png/pngread.c ****          png_handle_sBIT(png_ptr, info_ptr, length);
 539              		.loc 1 206 12 is_stmt 1 view .LVU152
 206:fltk-1.3.4-1/png/pngread.c ****          png_handle_sBIT(png_ptr, info_ptr, length);
 540              		.loc 1 206 15 is_stmt 0 view .LVU153
 541 01cb 81FB5449 		cmpl	$1933723988, %ebx
 541      4273
 542 01d1 0F843401 		je	.L95
 542      0000
 211:fltk-1.3.4-1/png/pngread.c ****          png_handle_sRGB(png_ptr, info_ptr, length);
 543              		.loc 1 211 12 is_stmt 1 view .LVU154
 211:fltk-1.3.4-1/png/pngread.c ****          png_handle_sRGB(png_ptr, info_ptr, length);
 544              		.loc 1 211 15 is_stmt 0 view .LVU155
 545 01d7 81FB4247 		cmpl	$1934772034, %ebx
 545      5273
 546 01dd 0F843B01 		je	.L96
 546      0000
 216:fltk-1.3.4-1/png/pngread.c ****          png_handle_iCCP(png_ptr, info_ptr, length);
 547              		.loc 1 216 12 is_stmt 1 view .LVU156
 216:fltk-1.3.4-1/png/pngread.c ****          png_handle_iCCP(png_ptr, info_ptr, length);
 548              		.loc 1 216 15 is_stmt 0 view .LVU157
 549 01e3 81FB5043 		cmpl	$1766015824, %ebx
 549      4369
 550 01e9 0F844201 		je	.L97
 550      0000
 221:fltk-1.3.4-1/png/pngread.c ****          png_handle_sPLT(png_ptr, info_ptr, length);
 551              		.loc 1 221 12 is_stmt 1 view .LVU158
 221:fltk-1.3.4-1/png/pngread.c ****          png_handle_sPLT(png_ptr, info_ptr, length);
 552              		.loc 1 221 15 is_stmt 0 view .LVU159
 553 01ef 81FB544C 		cmpl	$1934642260, %ebx
 553      5073
 554 01f5 0F845C01 		je	.L98
 554      0000
 226:fltk-1.3.4-1/png/pngread.c ****          png_handle_tEXt(png_ptr, info_ptr, length);
 555              		.loc 1 226 12 is_stmt 1 view .LVU160
 226:fltk-1.3.4-1/png/pngread.c ****          png_handle_tEXt(png_ptr, info_ptr, length);
 556              		.loc 1 226 15 is_stmt 0 view .LVU161
 557 01fb 81FB7458 		cmpl	$1950701684, %ebx
 557      4574
 558 0201 0F846301 		je	.L99
 558      0000
 231:fltk-1.3.4-1/png/pngread.c ****          png_handle_tIME(png_ptr, info_ptr, length);
 559              		.loc 1 231 12 is_stmt 1 view .LVU162
 231:fltk-1.3.4-1/png/pngread.c ****          png_handle_tIME(png_ptr, info_ptr, length);
 560              		.loc 1 231 15 is_stmt 0 view .LVU163
 561 0207 81FB454D 		cmpl	$1950960965, %ebx
 561      4974
 562 020d 0F848F01 		je	.L100
 562      0000
 236:fltk-1.3.4-1/png/pngread.c ****          png_handle_tRNS(png_ptr, info_ptr, length);
 563              		.loc 1 236 12 is_stmt 1 view .LVU164
 236:fltk-1.3.4-1/png/pngread.c ****          png_handle_tRNS(png_ptr, info_ptr, length);
 564              		.loc 1 236 15 is_stmt 0 view .LVU165
 565 0213 81FB534E 		cmpl	$1951551059, %ebx
 565      5274
 566 0219 0F849601 		je	.L101
 566      0000
 241:fltk-1.3.4-1/png/pngread.c ****          png_handle_zTXt(png_ptr, info_ptr, length);
 567              		.loc 1 241 12 is_stmt 1 view .LVU166
 241:fltk-1.3.4-1/png/pngread.c ****          png_handle_zTXt(png_ptr, info_ptr, length);
 568              		.loc 1 241 15 is_stmt 0 view .LVU167
 569 021f 81FB7458 		cmpl	$2052348020, %ebx
 569      547A
 570 0225 0F849D01 		je	.L102
 570      0000
 246:fltk-1.3.4-1/png/pngread.c ****          png_handle_iTXt(png_ptr, info_ptr, length);
 571              		.loc 1 246 12 is_stmt 1 view .LVU168
 246:fltk-1.3.4-1/png/pngread.c ****          png_handle_iTXt(png_ptr, info_ptr, length);
 572              		.loc 1 246 15 is_stmt 0 view .LVU169
 573 022b 81FB7458 		cmpl	$1767135348, %ebx
 573      5469
 574 0231 0F840D01 		je	.L103
 574      0000
 251:fltk-1.3.4-1/png/pngread.c ****             PNG_HANDLE_CHUNK_AS_DEFAULT);
 575              		.loc 1 251 10 is_stmt 1 view .LVU170
 576 0237 31C9     		xorl	%ecx, %ecx
 577 0239 4489E2   		movl	%r12d, %edx
 578 023c 4C89EE   		movq	%r13, %rsi
 579 023f 4889EF   		movq	%rbp, %rdi
 580 0242 E8000000 		call	png_handle_unknown@PLT
 580      00
 581              	.LVL50:
 251:fltk-1.3.4-1/png/pngread.c ****             PNG_HANDLE_CHUNK_AS_DEFAULT);
 582              		.loc 1 251 10 is_stmt 0 view .LVU171
 583 0247 E9CCFDFF 		jmp	.L38
 583      FF
 584              	.LVL51:
 585 024c 0F1F4000 		.p2align 4,,10
 586              		.p2align 3
 587              	.L87:
 167:fltk-1.3.4-1/png/pngread.c **** #endif
 588              		.loc 1 167 10 is_stmt 1 view .LVU172
 589 0250 4489E2   		movl	%r12d, %edx
 590 0253 4C89EE   		movq	%r13, %rsi
 591 0256 4889EF   		movq	%rbp, %rdi
 592 0259 E8000000 		call	png_handle_bKGD@PLT
 592      00
 593              	.LVL52:
 167:fltk-1.3.4-1/png/pngread.c **** #endif
 594              		.loc 1 167 10 is_stmt 0 view .LVU173
 595 025e E9B5FDFF 		jmp	.L38
 595      FF
 596              	.LVL53:
 597              		.p2align 4,,10
 598 0263 0F1F4400 		.p2align 3
 598      00
 599              	.L88:
 172:fltk-1.3.4-1/png/pngread.c **** #endif
 600              		.loc 1 172 10 is_stmt 1 view .LVU174
 601 0268 4489E2   		movl	%r12d, %edx
 602 026b 4C89EE   		movq	%r13, %rsi
 603 026e 4889EF   		movq	%rbp, %rdi
 604 0271 E8000000 		call	png_handle_cHRM@PLT
 604      00
 605              	.LVL54:
 172:fltk-1.3.4-1/png/pngread.c **** #endif
 606              		.loc 1 172 10 is_stmt 0 view .LVU175
 607 0276 E99DFDFF 		jmp	.L38
 607      FF
 608              	.LVL55:
 609 027b 0F1F4400 		.p2align 4,,10
 609      00
 610              		.p2align 3
 611              	.L89:
 177:fltk-1.3.4-1/png/pngread.c **** #endif
 612              		.loc 1 177 10 is_stmt 1 view .LVU176
 613 0280 4489E2   		movl	%r12d, %edx
 614 0283 4C89EE   		movq	%r13, %rsi
 615 0286 4889EF   		movq	%rbp, %rdi
 616 0289 E8000000 		call	png_handle_gAMA@PLT
 616      00
 617              	.LVL56:
 177:fltk-1.3.4-1/png/pngread.c **** #endif
 618              		.loc 1 177 10 is_stmt 0 view .LVU177
 619 028e E985FDFF 		jmp	.L38
 619      FF
 620              	.LVL57:
 621              		.p2align 4,,10
 622 0293 0F1F4400 		.p2align 3
 622      00
 623              	.L90:
 182:fltk-1.3.4-1/png/pngread.c **** #endif
 624              		.loc 1 182 10 is_stmt 1 view .LVU178
 625 0298 4489E2   		movl	%r12d, %edx
 626 029b 4C89EE   		movq	%r13, %rsi
 627 029e 4889EF   		movq	%rbp, %rdi
 628 02a1 E8000000 		call	png_handle_hIST@PLT
 628      00
 629              	.LVL58:
 182:fltk-1.3.4-1/png/pngread.c **** #endif
 630              		.loc 1 182 10 is_stmt 0 view .LVU179
 631 02a6 E96DFDFF 		jmp	.L38
 631      FF
 632              	.LVL59:
 633 02ab 0F1F4400 		.p2align 4,,10
 633      00
 634              		.p2align 3
 635              	.L91:
 187:fltk-1.3.4-1/png/pngread.c **** #endif
 636              		.loc 1 187 10 is_stmt 1 view .LVU180
 637 02b0 4489E2   		movl	%r12d, %edx
 638 02b3 4C89EE   		movq	%r13, %rsi
 639 02b6 4889EF   		movq	%rbp, %rdi
 640 02b9 E8000000 		call	png_handle_oFFs@PLT
 640      00
 641              	.LVL60:
 187:fltk-1.3.4-1/png/pngread.c **** #endif
 642              		.loc 1 187 10 is_stmt 0 view .LVU181
 643 02be E955FDFF 		jmp	.L38
 643      FF
 644              	.LVL61:
 645              		.p2align 4,,10
 646 02c3 0F1F4400 		.p2align 3
 646      00
 647              	.L92:
 192:fltk-1.3.4-1/png/pngread.c **** #endif
 648              		.loc 1 192 10 is_stmt 1 view .LVU182
 649 02c8 4489E2   		movl	%r12d, %edx
 650 02cb 4C89EE   		movq	%r13, %rsi
 651 02ce 4889EF   		movq	%rbp, %rdi
 652 02d1 E8000000 		call	png_handle_pCAL@PLT
 652      00
 653              	.LVL62:
 192:fltk-1.3.4-1/png/pngread.c **** #endif
 654              		.loc 1 192 10 is_stmt 0 view .LVU183
 655 02d6 E93DFDFF 		jmp	.L38
 655      FF
 656              	.LVL63:
 657 02db 0F1F4400 		.p2align 4,,10
 657      00
 658              		.p2align 3
 659              	.L93:
 197:fltk-1.3.4-1/png/pngread.c **** #endif
 660              		.loc 1 197 10 is_stmt 1 view .LVU184
 661 02e0 4489E2   		movl	%r12d, %edx
 662 02e3 4C89EE   		movq	%r13, %rsi
 663 02e6 4889EF   		movq	%rbp, %rdi
 664 02e9 E8000000 		call	png_handle_sCAL@PLT
 664      00
 665              	.LVL64:
 197:fltk-1.3.4-1/png/pngread.c **** #endif
 666              		.loc 1 197 10 is_stmt 0 view .LVU185
 667 02ee E925FDFF 		jmp	.L38
 667      FF
 668              	.LVL65:
 669              		.p2align 4,,10
 670 02f3 0F1F4400 		.p2align 3
 670      00
 671              	.L94:
 202:fltk-1.3.4-1/png/pngread.c **** #endif
 672              		.loc 1 202 10 is_stmt 1 view .LVU186
 673 02f8 4489E2   		movl	%r12d, %edx
 674 02fb 4C89EE   		movq	%r13, %rsi
 675 02fe 4889EF   		movq	%rbp, %rdi
 676 0301 E8000000 		call	png_handle_pHYs@PLT
 676      00
 677              	.LVL66:
 202:fltk-1.3.4-1/png/pngread.c **** #endif
 678              		.loc 1 202 10 is_stmt 0 view .LVU187
 679 0306 E90DFDFF 		jmp	.L38
 679      FF
 680              	.LVL67:
 681              	.L95:
 207:fltk-1.3.4-1/png/pngread.c **** #endif
 682              		.loc 1 207 10 is_stmt 1 view .LVU188
 683 030b 4489E2   		movl	%r12d, %edx
 684 030e 4C89EE   		movq	%r13, %rsi
 685 0311 4889EF   		movq	%rbp, %rdi
 686 0314 E8000000 		call	png_handle_sBIT@PLT
 686      00
 687              	.LVL68:
 207:fltk-1.3.4-1/png/pngread.c **** #endif
 688              		.loc 1 207 10 is_stmt 0 view .LVU189
 689 0319 E9FAFCFF 		jmp	.L38
 689      FF
 690              	.LVL69:
 691              	.L96:
 212:fltk-1.3.4-1/png/pngread.c **** #endif
 692              		.loc 1 212 10 is_stmt 1 view .LVU190
 693 031e 4489E2   		movl	%r12d, %edx
 694 0321 4C89EE   		movq	%r13, %rsi
 695 0324 4889EF   		movq	%rbp, %rdi
 696 0327 E8000000 		call	png_handle_sRGB@PLT
 696      00
 697              	.LVL70:
 212:fltk-1.3.4-1/png/pngread.c **** #endif
 698              		.loc 1 212 10 is_stmt 0 view .LVU191
 699 032c E9E7FCFF 		jmp	.L38
 699      FF
 700              	.LVL71:
 701              	.L97:
 217:fltk-1.3.4-1/png/pngread.c **** #endif
 702              		.loc 1 217 10 is_stmt 1 view .LVU192
 703 0331 4489E2   		movl	%r12d, %edx
 704 0334 4C89EE   		movq	%r13, %rsi
 705 0337 4889EF   		movq	%rbp, %rdi
 706 033a E8000000 		call	png_handle_iCCP@PLT
 706      00
 707              	.LVL72:
 217:fltk-1.3.4-1/png/pngread.c **** #endif
 708              		.loc 1 217 10 is_stmt 0 view .LVU193
 709 033f E9D4FCFF 		jmp	.L38
 709      FF
 710              	.LVL73:
 711              	.L103:
 247:fltk-1.3.4-1/png/pngread.c **** #endif
 712              		.loc 1 247 10 is_stmt 1 view .LVU194
 713 0344 4489E2   		movl	%r12d, %edx
 714 0347 4C89EE   		movq	%r13, %rsi
 715 034a 4889EF   		movq	%rbp, %rdi
 716 034d E8000000 		call	png_handle_iTXt@PLT
 716      00
 717              	.LVL74:
 247:fltk-1.3.4-1/png/pngread.c **** #endif
 718              		.loc 1 247 10 is_stmt 0 view .LVU195
 719 0352 E9C1FCFF 		jmp	.L38
 719      FF
 720              	.LVL75:
 721              	.L98:
 222:fltk-1.3.4-1/png/pngread.c **** #endif
 722              		.loc 1 222 10 is_stmt 1 view .LVU196
 723 0357 4489E2   		movl	%r12d, %edx
 724 035a 4C89EE   		movq	%r13, %rsi
 725 035d 4889EF   		movq	%rbp, %rdi
 726 0360 E8000000 		call	png_handle_sPLT@PLT
 726      00
 727              	.LVL76:
 222:fltk-1.3.4-1/png/pngread.c **** #endif
 728              		.loc 1 222 10 is_stmt 0 view .LVU197
 729 0365 E9AEFCFF 		jmp	.L38
 729      FF
 730              	.LVL77:
 731              	.L99:
 227:fltk-1.3.4-1/png/pngread.c **** #endif
 732              		.loc 1 227 10 is_stmt 1 view .LVU198
 733 036a 4489E2   		movl	%r12d, %edx
 734 036d 4C89EE   		movq	%r13, %rsi
 735 0370 4889EF   		movq	%rbp, %rdi
 736 0373 E8000000 		call	png_handle_tEXt@PLT
 736      00
 737              	.LVL78:
 227:fltk-1.3.4-1/png/pngread.c **** #endif
 738              		.loc 1 227 10 is_stmt 0 view .LVU199
 739 0378 E99BFCFF 		jmp	.L38
 739      FF
 740              	.LVL79:
 741              	.L85:
 144:fltk-1.3.4-1/png/pngread.c **** 
 742              		.loc 1 144 10 is_stmt 1 view .LVU200
 743 037d 4489E2   		movl	%r12d, %edx
 744 0380 4C89EE   		movq	%r13, %rsi
 745 0383 4889EF   		movq	%rbp, %rdi
 746 0386 89C1     		movl	%eax, %ecx
 747 0388 E8000000 		call	png_handle_unknown@PLT
 747      00
 748              	.LVL80:
 146:fltk-1.3.4-1/png/pngread.c ****             png_ptr->mode |= PNG_HAVE_PLTE;
 749              		.loc 1 146 10 view .LVU201
 151:fltk-1.3.4-1/png/pngread.c ****             break;
 750              		.loc 1 151 13 view .LVU202
 151:fltk-1.3.4-1/png/pngread.c ****             break;
 751              		.loc 1 151 32 is_stmt 0 view .LVU203
 752 038d C7855802 		movl	$0, 600(%rbp)
 752      00000000 
 752      0000
 152:fltk-1.3.4-1/png/pngread.c ****          }
 753              		.loc 1 152 13 is_stmt 1 view .LVU204
 754              	.LBE86:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 755              		.loc 1 254 1 is_stmt 0 view .LVU205
 756 0397 4883C408 		addq	$8, %rsp
 757              		.cfi_remember_state
 758              		.cfi_def_cfa_offset 40
 759 039b 5B       		popq	%rbx
 760              		.cfi_def_cfa_offset 32
 761              	.LVL81:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 762              		.loc 1 254 1 view .LVU206
 763 039c 5D       		popq	%rbp
 764              		.cfi_def_cfa_offset 24
 765              	.LVL82:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 766              		.loc 1 254 1 view .LVU207
 767 039d 415C     		popq	%r12
 768              		.cfi_def_cfa_offset 16
 769              	.LVL83:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 770              		.loc 1 254 1 view .LVU208
 771 039f 415D     		popq	%r13
 772              		.cfi_def_cfa_offset 8
 773              	.LVL84:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 774              		.loc 1 254 1 view .LVU209
 775 03a1 C3       		ret
 776              	.LVL85:
 777              	.L100:
 778              		.cfi_restore_state
 779              	.LBB87:
 232:fltk-1.3.4-1/png/pngread.c **** #endif
 780              		.loc 1 232 10 is_stmt 1 view .LVU210
 781 03a2 4489E2   		movl	%r12d, %edx
 782 03a5 4C89EE   		movq	%r13, %rsi
 783 03a8 4889EF   		movq	%rbp, %rdi
 784 03ab E8000000 		call	png_handle_tIME@PLT
 784      00
 785              	.LVL86:
 232:fltk-1.3.4-1/png/pngread.c **** #endif
 786              		.loc 1 232 10 is_stmt 0 view .LVU211
 787 03b0 E963FCFF 		jmp	.L38
 787      FF
 788              	.LVL87:
 789              	.L101:
 237:fltk-1.3.4-1/png/pngread.c **** #endif
 790              		.loc 1 237 10 is_stmt 1 view .LVU212
 791 03b5 4489E2   		movl	%r12d, %edx
 792 03b8 4C89EE   		movq	%r13, %rsi
 793 03bb 4889EF   		movq	%rbp, %rdi
 794 03be E8000000 		call	png_handle_tRNS@PLT
 794      00
 795              	.LVL88:
 237:fltk-1.3.4-1/png/pngread.c **** #endif
 796              		.loc 1 237 10 is_stmt 0 view .LVU213
 797 03c3 E950FCFF 		jmp	.L38
 797      FF
 798              	.LVL89:
 799              	.L102:
 242:fltk-1.3.4-1/png/pngread.c **** #endif
 800              		.loc 1 242 10 is_stmt 1 view .LVU214
 801 03c8 4489E2   		movl	%r12d, %edx
 802 03cb 4C89EE   		movq	%r13, %rsi
 803 03ce 4889EF   		movq	%rbp, %rdi
 804 03d1 E8000000 		call	png_handle_zTXt@PLT
 804      00
 805              	.LVL90:
 242:fltk-1.3.4-1/png/pngread.c **** #endif
 806              		.loc 1 242 10 is_stmt 0 view .LVU215
 807 03d6 E93DFCFF 		jmp	.L38
 807      FF
 808              	.L82:
 117:fltk-1.3.4-1/png/pngread.c **** 
 809              		.loc 1 117 13 is_stmt 1 view .LVU216
 810 03db 488D3500 		leaq	.LC2(%rip), %rsi
 810      000000
 811 03e2 4889EF   		movq	%rbp, %rdi
 812 03e5 E8000000 		call	png_chunk_error@PLT
 812      00
 813              	.LVL91:
 814              	.LBE87:
 815              		.cfi_endproc
 816              	.LFE81:
 818              		.section	.text.png_image_read_header,"ax",@progbits
 819              		.p2align 4
 821              	png_image_read_header:
 822              	.LVL92:
 823              	.LFB58:
1383:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = png_voidcast(png_imagep, argument);
 824              		.loc 1 1383 1 view -0
 825              		.cfi_startproc
1383:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = png_voidcast(png_imagep, argument);
 826              		.loc 1 1383 1 is_stmt 0 view .LVU218
 827 0000 F30F1EFA 		endbr64
1384:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 828              		.loc 1 1384 4 is_stmt 1 view .LVU219
 829              	.LVL93:
1385:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 830              		.loc 1 1385 4 view .LVU220
1383:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = png_voidcast(png_imagep, argument);
 831              		.loc 1 1383 1 is_stmt 0 view .LVU221
 832 0004 4154     		pushq	%r12
 833              		.cfi_def_cfa_offset 16
 834              		.cfi_offset 12, -16
1388:fltk-1.3.4-1/png/pngread.c ****    png_read_info(png_ptr, info_ptr);
 835              		.loc 1 1388 4 view .LVU222
 836 0006 BE010000 		movl	$1, %esi
 836      00
1383:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = png_voidcast(png_imagep, argument);
 837              		.loc 1 1383 1 view .LVU223
 838 000b 55       		pushq	%rbp
 839              		.cfi_def_cfa_offset 24
 840              		.cfi_offset 6, -24
 841 000c 4889FD   		movq	%rdi, %rbp
 842 000f 53       		pushq	%rbx
 843              		.cfi_def_cfa_offset 32
 844              		.cfi_offset 3, -32
1385:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 845              		.loc 1 1385 32 view .LVU224
 846 0010 488B07   		movq	(%rdi), %rax
1385:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 847              		.loc 1 1385 17 view .LVU225
 848 0013 488B18   		movq	(%rax), %rbx
 849              	.LVL94:
1386:fltk-1.3.4-1/png/pngread.c **** 
 850              		.loc 1 1386 4 is_stmt 1 view .LVU226
1386:fltk-1.3.4-1/png/pngread.c **** 
 851              		.loc 1 1386 15 is_stmt 0 view .LVU227
 852 0016 4C8B6008 		movq	8(%rax), %r12
 853              	.LVL95:
1388:fltk-1.3.4-1/png/pngread.c ****    png_read_info(png_ptr, info_ptr);
 854              		.loc 1 1388 4 is_stmt 1 view .LVU228
 855 001a 4889DF   		movq	%rbx, %rdi
 856              	.LVL96:
1388:fltk-1.3.4-1/png/pngread.c ****    png_read_info(png_ptr, info_ptr);
 857              		.loc 1 1388 4 is_stmt 0 view .LVU229
 858 001d E8000000 		call	png_set_benign_errors@PLT
 858      00
 859              	.LVL97:
1389:fltk-1.3.4-1/png/pngread.c **** 
 860              		.loc 1 1389 4 is_stmt 1 view .LVU230
 861              	.LBB88:
 862              	.LBI88:
  92:fltk-1.3.4-1/png/pngread.c **** {
 863              		.loc 1 92 1 view .LVU231
 864              	.LBB89:
  95:fltk-1.3.4-1/png/pngread.c **** #endif
 865              		.loc 1 95 4 view .LVU232
  98:fltk-1.3.4-1/png/pngread.c **** 
 866              		.loc 1 98 4 view .LVU233
 100:fltk-1.3.4-1/png/pngread.c ****       return;
 867              		.loc 1 100 4 view .LVU234
 100:fltk-1.3.4-1/png/pngread.c ****       return;
 868              		.loc 1 100 7 is_stmt 0 view .LVU235
 869 0022 4885DB   		testq	%rbx, %rbx
 870 0025 7410     		je	.L105
 871 0027 4D85E4   		testq	%r12, %r12
 872 002a 740B     		je	.L105
 873 002c 4C89E6   		movq	%r12, %rsi
 874 002f 4889DF   		movq	%rbx, %rdi
 875 0032 E8000000 		call	png_read_info.part.0
 875      00
 876              	.LVL98:
 877              	.L105:
 100:fltk-1.3.4-1/png/pngread.c ****       return;
 878              		.loc 1 100 7 view .LVU236
 879              	.LBE89:
 880              	.LBE88:
1392:fltk-1.3.4-1/png/pngread.c ****    image->height = png_ptr->height;
 881              		.loc 1 1392 4 is_stmt 1 view .LVU237
1392:fltk-1.3.4-1/png/pngread.c ****    image->height = png_ptr->height;
 882              		.loc 1 1392 26 is_stmt 0 view .LVU238
 883 0037 8B83F801 		movl	504(%rbx), %eax
 883      0000
 884              	.LBB90:
1396:fltk-1.3.4-1/png/pngread.c **** 
 885              		.loc 1 1396 28 view .LVU239
 886 003d 4889DF   		movq	%rbx, %rdi
 887              	.LBE90:
1392:fltk-1.3.4-1/png/pngread.c ****    image->height = png_ptr->height;
 888              		.loc 1 1392 17 view .LVU240
 889 0040 89450C   		movl	%eax, 12(%rbp)
1393:fltk-1.3.4-1/png/pngread.c **** 
 890              		.loc 1 1393 4 is_stmt 1 view .LVU241
1393:fltk-1.3.4-1/png/pngread.c **** 
 891              		.loc 1 1393 27 is_stmt 0 view .LVU242
 892 0043 8B83FC01 		movl	508(%rbx), %eax
 892      0000
1393:fltk-1.3.4-1/png/pngread.c **** 
 893              		.loc 1 1393 18 view .LVU243
 894 0049 894510   		movl	%eax, 16(%rbp)
 895              	.LBB91:
1396:fltk-1.3.4-1/png/pngread.c **** 
 896              		.loc 1 1396 7 is_stmt 1 view .LVU244
1396:fltk-1.3.4-1/png/pngread.c **** 
 897              		.loc 1 1396 28 is_stmt 0 view .LVU245
 898 004c E8000000 		call	png_image_format
 898      00
 899              	.LVL99:
1398:fltk-1.3.4-1/png/pngread.c **** 
 900              		.loc 1 1398 7 is_stmt 1 view .LVU246
1398:fltk-1.3.4-1/png/pngread.c **** 
 901              		.loc 1 1398 21 is_stmt 0 view .LVU247
 902 0051 894514   		movl	%eax, 20(%rbp)
1406:fltk-1.3.4-1/png/pngread.c ****          & (PNG_COLORSPACE_HAVE_ENDPOINTS|PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB|
 903              		.loc 1 1406 7 is_stmt 1 view .LVU248
1406:fltk-1.3.4-1/png/pngread.c ****          & (PNG_COLORSPACE_HAVE_ENDPOINTS|PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB|
 904              		.loc 1 1406 10 is_stmt 0 view .LVU249
 905 0054 A802     		testb	$2, %al
 906 0056 7411     		je	.L106
1406:fltk-1.3.4-1/png/pngread.c ****          & (PNG_COLORSPACE_HAVE_ENDPOINTS|PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB|
 907              		.loc 1 1406 49 discriminator 1 view .LVU250
 908 0058 0FB78322 		movzwl	1314(%rbx), %eax
 908      050000
 909              	.LVL100:
1406:fltk-1.3.4-1/png/pngread.c ****          & (PNG_COLORSPACE_HAVE_ENDPOINTS|PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB|
 910              		.loc 1 1406 49 discriminator 1 view .LVU251
 911 005f 66254280 		andw	$-32702, %ax
 912 0063 6683F802 		cmpw	$2, %ax
 913 0067 7467     		je	.L115
 914              	.L106:
 915              	.LBE91:
 916              	.LBB92:
1417:fltk-1.3.4-1/png/pngread.c **** 
 917              		.loc 1 1417 7 is_stmt 1 view .LVU252
1419:fltk-1.3.4-1/png/pngread.c ****       {
 918              		.loc 1 1419 7 view .LVU253
1419:fltk-1.3.4-1/png/pngread.c ****       {
 919              		.loc 1 1419 22 is_stmt 0 view .LVU254
 920 0069 0FB68377 		movzbl	631(%rbx), %eax
 920      020000
1419:fltk-1.3.4-1/png/pngread.c ****       {
 921              		.loc 1 1419 7 view .LVU255
 922 0070 84C0     		testb	%al, %al
 923 0072 7444     		je	.L107
 924 0074 3C03     		cmpb	$3, %al
 925 0076 7528     		jne	.L116
1426:fltk-1.3.4-1/png/pngread.c ****             break;
 926              		.loc 1 1426 13 is_stmt 1 view .LVU256
1426:fltk-1.3.4-1/png/pngread.c ****             break;
 927              		.loc 1 1426 26 is_stmt 0 view .LVU257
 928 0078 0FB78368 		movzwl	616(%rbx), %eax
 928      020000
 929              	.LVL101:
1427:fltk-1.3.4-1/png/pngread.c **** 
 930              		.loc 1 1427 13 is_stmt 1 view .LVU258
 931              	.L110:
1434:fltk-1.3.4-1/png/pngread.c ****          cmap_entries = 256;
 932              		.loc 1 1434 7 view .LVU259
 933 007f 3D000100 		cmpl	$256, %eax
 933      00
 934 0084 BA000100 		movl	$256, %edx
 934      00
 935              	.LBE92:
1441:fltk-1.3.4-1/png/pngread.c **** 
 936              		.loc 1 1441 1 is_stmt 0 view .LVU260
 937 0089 5B       		popq	%rbx
 938              		.cfi_remember_state
 939              		.cfi_def_cfa_offset 24
 940              	.LVL102:
1441:fltk-1.3.4-1/png/pngread.c **** 
 941              		.loc 1 1441 1 view .LVU261
 942 008a 0F47C2   		cmova	%edx, %eax
 943              	.LVL103:
 944              	.LBB93:
1437:fltk-1.3.4-1/png/pngread.c ****    }
 945              		.loc 1 1437 7 is_stmt 1 view .LVU262
1437:fltk-1.3.4-1/png/pngread.c ****    }
 946              		.loc 1 1437 31 is_stmt 0 view .LVU263
 947 008d 89451C   		movl	%eax, 28(%rbp)
 948              	.LBE93:
1440:fltk-1.3.4-1/png/pngread.c **** }
 949              		.loc 1 1440 4 is_stmt 1 view .LVU264
1441:fltk-1.3.4-1/png/pngread.c **** 
 950              		.loc 1 1441 1 is_stmt 0 view .LVU265
 951 0090 B8010000 		movl	$1, %eax
 951      00
 952              	.LVL104:
1441:fltk-1.3.4-1/png/pngread.c **** 
 953              		.loc 1 1441 1 view .LVU266
 954 0095 5D       		popq	%rbp
 955              		.cfi_def_cfa_offset 16
 956              	.LVL105:
1441:fltk-1.3.4-1/png/pngread.c **** 
 957              		.loc 1 1441 1 view .LVU267
 958 0096 415C     		popq	%r12
 959              		.cfi_def_cfa_offset 8
 960              	.LVL106:
1441:fltk-1.3.4-1/png/pngread.c **** 
 961              		.loc 1 1441 1 view .LVU268
 962 0098 C3       		ret
 963              	.LVL107:
 964 0099 0F1F8000 		.p2align 4,,10
 964      000000
 965              		.p2align 3
 966              	.L116:
 967              		.cfi_restore_state
 968              	.LBB94:
1419:fltk-1.3.4-1/png/pngread.c ****       {
 969              		.loc 1 1419 7 view .LVU269
 970 00a0 B8000100 		movl	$256, %eax
 970      00
 971              	.LVL108:
1437:fltk-1.3.4-1/png/pngread.c ****    }
 972              		.loc 1 1437 7 is_stmt 1 view .LVU270
 973              	.LBE94:
1441:fltk-1.3.4-1/png/pngread.c **** 
 974              		.loc 1 1441 1 is_stmt 0 view .LVU271
 975 00a5 5B       		popq	%rbx
 976              		.cfi_remember_state
 977              		.cfi_def_cfa_offset 24
 978              	.LVL109:
 979              	.LBB95:
1437:fltk-1.3.4-1/png/pngread.c ****    }
 980              		.loc 1 1437 31 view .LVU272
 981 00a6 89451C   		movl	%eax, 28(%rbp)
 982              	.LBE95:
1440:fltk-1.3.4-1/png/pngread.c **** }
 983              		.loc 1 1440 4 is_stmt 1 view .LVU273
1441:fltk-1.3.4-1/png/pngread.c **** 
 984              		.loc 1 1441 1 is_stmt 0 view .LVU274
 985 00a9 B8010000 		movl	$1, %eax
 985      00
 986              	.LVL110:
1441:fltk-1.3.4-1/png/pngread.c **** 
 987              		.loc 1 1441 1 view .LVU275
 988 00ae 5D       		popq	%rbp
 989              		.cfi_def_cfa_offset 16
 990              	.LVL111:
1441:fltk-1.3.4-1/png/pngread.c **** 
 991              		.loc 1 1441 1 view .LVU276
 992 00af 415C     		popq	%r12
 993              		.cfi_def_cfa_offset 8
 994              	.LVL112:
1441:fltk-1.3.4-1/png/pngread.c **** 
 995              		.loc 1 1441 1 view .LVU277
 996 00b1 C3       		ret
 997              	.LVL113:
 998              		.p2align 4,,10
 999 00b2 660F1F44 		.p2align 3
 999      0000
 1000              	.L107:
 1001              		.cfi_restore_state
 1002              	.LBB96:
1422:fltk-1.3.4-1/png/pngread.c ****             break;
 1003              		.loc 1 1422 13 is_stmt 1 view .LVU278
1422:fltk-1.3.4-1/png/pngread.c ****             break;
 1004              		.loc 1 1422 41 is_stmt 0 view .LVU279
 1005 00b8 0FB68B78 		movzbl	632(%rbx), %ecx
 1005      020000
1422:fltk-1.3.4-1/png/pngread.c ****             break;
 1006              		.loc 1 1422 26 view .LVU280
 1007 00bf B8010000 		movl	$1, %eax
 1007      00
 1008 00c4 D3E0     		sall	%cl, %eax
 1009              	.LVL114:
1423:fltk-1.3.4-1/png/pngread.c **** 
 1010              		.loc 1 1423 13 is_stmt 1 view .LVU281
 1011 00c6 EBB7     		jmp	.L110
 1012              	.LVL115:
 1013 00c8 0F1F8400 		.p2align 4,,10
 1013      00000000 
 1014              		.p2align 3
 1015              	.L115:
1423:fltk-1.3.4-1/png/pngread.c **** 
 1016              		.loc 1 1423 13 is_stmt 0 view .LVU282
 1017              	.LBE96:
 1018              	.LBB97:
1409:fltk-1.3.4-1/png/pngread.c **** #endif
 1019              		.loc 1 1409 10 is_stmt 1 view .LVU283
1409:fltk-1.3.4-1/png/pngread.c **** #endif
 1020              		.loc 1 1409 23 is_stmt 0 view .LVU284
 1021 00d0 834D1801 		orl	$1, 24(%rbp)
 1022 00d4 EB93     		jmp	.L106
 1023              	.LBE97:
 1024              		.cfi_endproc
 1025              	.LFE58:
 1027              		.section	.rodata.png_read_end.part.0.str1.8,"aMS",@progbits,1
 1028              		.align 8
 1029              	.LC5:
 1030 0000 52656164 		.string	"Read palette index exceeding num_palette"
 1030      2070616C 
 1030      65747465 
 1030      20696E64 
 1030      65782065 
 1031              		.section	.text.png_read_end.part.0,"ax",@progbits
 1032              		.p2align 4
 1034              	png_read_end.part.0:
 1035              	.LVL116:
 1036              	.LFB83:
 757:fltk-1.3.4-1/png/pngread.c **** {
 1037              		.loc 1 757 1 is_stmt 1 view -0
 1038              		.cfi_startproc
 772:fltk-1.3.4-1/png/pngread.c **** #endif
 1039              		.loc 1 772 4 view .LVU286
 757:fltk-1.3.4-1/png/pngread.c **** {
 1040              		.loc 1 757 1 is_stmt 0 view .LVU287
 1041 0000 4156     		pushq	%r14
 1042              		.cfi_def_cfa_offset 16
 1043              		.cfi_offset 14, -16
 1044 0002 4155     		pushq	%r13
 1045              		.cfi_def_cfa_offset 24
 1046              		.cfi_offset 13, -24
 1047 0004 4989F5   		movq	%rsi, %r13
 772:fltk-1.3.4-1/png/pngread.c **** #endif
 1048              		.loc 1 772 8 view .LVU288
 1049 0007 BE544144 		movl	$1229209940, %esi
 1049      49
 1050              	.LVL117:
 757:fltk-1.3.4-1/png/pngread.c **** {
 1051              		.loc 1 757 1 view .LVU289
 1052 000c 4154     		pushq	%r12
 1053              		.cfi_def_cfa_offset 32
 1054              		.cfi_offset 12, -32
 1055 000e 55       		pushq	%rbp
 1056              		.cfi_def_cfa_offset 40
 1057              		.cfi_offset 6, -40
 1058 000f 53       		pushq	%rbx
 1059              		.cfi_def_cfa_offset 48
 1060              		.cfi_offset 3, -48
 1061 0010 4889FB   		movq	%rdi, %rbx
 1062 0013 4883EC10 		subq	$16, %rsp
 1063              		.cfi_def_cfa_offset 64
 772:fltk-1.3.4-1/png/pngread.c **** #endif
 1064              		.loc 1 772 8 view .LVU290
 1065 0017 E8000000 		call	png_chunk_unknown_handling@PLT
 1065      00
 1066              	.LVL118:
 772:fltk-1.3.4-1/png/pngread.c **** #endif
 1067              		.loc 1 772 7 view .LVU291
 1068 001c 85C0     		testl	%eax, %eax
 1069 001e 0F849C02 		je	.L162
 1069      0000
 1070              	.L118:
 778:fltk-1.3.4-1/png/pngread.c ****       png_ptr->num_palette_max > png_ptr->num_palette)
 1071              		.loc 1 778 4 is_stmt 1 view .LVU292
 778:fltk-1.3.4-1/png/pngread.c ****       png_ptr->num_palette_max > png_ptr->num_palette)
 1072              		.loc 1 778 7 is_stmt 0 view .LVU293
 1073 0024 80BB7702 		cmpb	$3, 631(%rbx)
 1073      000003
 1074 002b 0F845F02 		je	.L163
 1074      0000
 1075              	.L119:
 1076              	.LBB98:
 819:fltk-1.3.4-1/png/pngread.c **** 
 1077              		.loc 1 819 13 view .LVU294
 1078 0031 4C8D3500 		leaq	.LC4(%rip), %r14
 1078      000000
 1079 0038 EB46     		jmp	.L150
 1080              	.LVL119:
 1081 003a 660F1F44 		.p2align 4,,10
 1081      0000
 1082              		.p2align 3
 1083              	.L168:
 800:fltk-1.3.4-1/png/pngread.c ****          {
 1084              		.loc 1 800 10 is_stmt 1 view .LVU295
 800:fltk-1.3.4-1/png/pngread.c ****          {
 1085              		.loc 1 800 13 is_stmt 0 view .LVU296
 1086 0040 81FD5441 		cmpl	$1229209940, %ebp
 1086      4449
 1087 0046 0F840402 		je	.L164
 1087      0000
 806:fltk-1.3.4-1/png/pngread.c ****          if (chunk_name == png_PLTE)
 1088              		.loc 1 806 10 is_stmt 1 view .LVU297
 1089 004c 4489E2   		movl	%r12d, %edx
 1090 004f 4C89EE   		movq	%r13, %rsi
 1091 0052 4889DF   		movq	%rbx, %rdi
 1092 0055 E8000000 		call	png_handle_unknown@PLT
 1092      00
 1093              	.LVL120:
 807:fltk-1.3.4-1/png/pngread.c ****             png_ptr->mode |= PNG_HAVE_PLTE;
 1094              		.loc 1 807 10 view .LVU298
 808:fltk-1.3.4-1/png/pngread.c ****       }
 1095              		.loc 1 808 27 is_stmt 0 view .LVU299
 1096 005a 8B832C01 		movl	300(%rbx), %eax
 1096      0000
 807:fltk-1.3.4-1/png/pngread.c ****             png_ptr->mode |= PNG_HAVE_PLTE;
 1097              		.loc 1 807 13 view .LVU300
 1098 0060 81FD4554 		cmpl	$1347179589, %ebp
 1098      4C50
 1099 0066 7510     		jne	.L121
 808:fltk-1.3.4-1/png/pngread.c ****       }
 1100              		.loc 1 808 13 is_stmt 1 view .LVU301
 808:fltk-1.3.4-1/png/pngread.c ****       }
 1101              		.loc 1 808 27 is_stmt 0 view .LVU302
 1102 0068 83C802   		orl	$2, %eax
 1103 006b 89832C01 		movl	%eax, 300(%rbx)
 1103      0000
 1104              		.p2align 4,,10
 1105 0071 0F1F8000 		.p2align 3
 1105      000000
 1106              	.L121:
 808:fltk-1.3.4-1/png/pngread.c ****       }
 1107              		.loc 1 808 27 view .LVU303
 1108              	.LBE98:
 914:fltk-1.3.4-1/png/pngread.c **** }
 1109              		.loc 1 914 12 is_stmt 1 view .LVU304
 914:fltk-1.3.4-1/png/pngread.c **** }
 1110              		.loc 1 914 4 is_stmt 0 view .LVU305
 1111 0078 A810     		testb	$16, %al
 1112 007a 0F858101 		jne	.L165
 1112      0000
 1113              	.LVL121:
 1114              	.L150:
 783:fltk-1.3.4-1/png/pngread.c ****    {
 1115              		.loc 1 783 4 is_stmt 1 view .LVU306
 1116              	.LBB99:
 785:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 1117              		.loc 1 785 7 view .LVU307
 785:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 1118              		.loc 1 785 28 is_stmt 0 view .LVU308
 1119 0080 4889DF   		movq	%rbx, %rdi
 1120 0083 E8000000 		call	png_read_chunk_header@PLT
 1120      00
 1121              	.LVL122:
 786:fltk-1.3.4-1/png/pngread.c **** 
 1122              		.loc 1 786 19 view .LVU309
 1123 0088 8BAB1802 		movl	536(%rbx), %ebp
 1123      0000
 785:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 chunk_name = png_ptr->chunk_name;
 1124              		.loc 1 785 28 view .LVU310
 1125 008e 4189C4   		movl	%eax, %r12d
 1126              	.LVL123:
 786:fltk-1.3.4-1/png/pngread.c **** 
 1127              		.loc 1 786 7 is_stmt 1 view .LVU311
 788:fltk-1.3.4-1/png/pngread.c ****          png_handle_IEND(png_ptr, info_ptr, length);
 1128              		.loc 1 788 7 view .LVU312
 788:fltk-1.3.4-1/png/pngread.c ****          png_handle_IEND(png_ptr, info_ptr, length);
 1129              		.loc 1 788 10 is_stmt 0 view .LVU313
 1130 0091 81FD444E 		cmpl	$1229278788, %ebp
 1130      4549
 1131 0097 0F847301 		je	.L166
 1131      0000
 791:fltk-1.3.4-1/png/pngread.c ****          png_handle_IHDR(png_ptr, info_ptr, length);
 1132              		.loc 1 791 12 is_stmt 1 view .LVU314
 791:fltk-1.3.4-1/png/pngread.c ****          png_handle_IHDR(png_ptr, info_ptr, length);
 1133              		.loc 1 791 15 is_stmt 0 view .LVU315
 1134 009d 81FD5244 		cmpl	$1229472850, %ebp
 1134      4849
 1135 00a3 0F848701 		je	.L167
 1135      0000
 794:fltk-1.3.4-1/png/pngread.c ****          png_crc_finish(png_ptr, length);
 1136              		.loc 1 794 12 is_stmt 1 view .LVU316
 794:fltk-1.3.4-1/png/pngread.c ****          png_crc_finish(png_ptr, length);
 1137              		.loc 1 794 15 is_stmt 0 view .LVU317
 1138 00a9 4D85ED   		testq	%r13, %r13
 1139 00ac 0F843601 		je	.L131
 1139      0000
 798:fltk-1.3.4-1/png/pngread.c ****       {
 1140              		.loc 1 798 12 is_stmt 1 view .LVU318
 798:fltk-1.3.4-1/png/pngread.c ****       {
 1141              		.loc 1 798 24 is_stmt 0 view .LVU319
 1142 00b2 89EE     		movl	%ebp, %esi
 1143 00b4 4889DF   		movq	%rbx, %rdi
 1144 00b7 E8000000 		call	png_chunk_unknown_handling@PLT
 1144      00
 1145              	.LVL124:
 798:fltk-1.3.4-1/png/pngread.c ****       {
 1146              		.loc 1 798 24 view .LVU320
 1147 00bc 89C1     		movl	%eax, %ecx
 1148              	.LVL125:
 798:fltk-1.3.4-1/png/pngread.c ****       {
 1149              		.loc 1 798 15 view .LVU321
 1150 00be 85C0     		testl	%eax, %eax
 1151 00c0 0F857AFF 		jne	.L168
 1151      FFFF
 812:fltk-1.3.4-1/png/pngread.c ****       {
 1152              		.loc 1 812 12 is_stmt 1 view .LVU322
 812:fltk-1.3.4-1/png/pngread.c ****       {
 1153              		.loc 1 812 15 is_stmt 0 view .LVU323
 1154 00c6 81FD5441 		cmpl	$1229209940, %ebp
 1154      4449
 1155 00cc 0F84F600 		je	.L169
 1155      0000
 823:fltk-1.3.4-1/png/pngread.c ****          png_handle_PLTE(png_ptr, info_ptr, length);
 1156              		.loc 1 823 12 is_stmt 1 view .LVU324
 823:fltk-1.3.4-1/png/pngread.c ****          png_handle_PLTE(png_ptr, info_ptr, length);
 1157              		.loc 1 823 15 is_stmt 0 view .LVU325
 1158 00d2 81FD4554 		cmpl	$1347179589, %ebp
 1158      4C50
 1159 00d8 0F84F201 		je	.L170
 1159      0000
 827:fltk-1.3.4-1/png/pngread.c ****          png_handle_bKGD(png_ptr, info_ptr, length);
 1160              		.loc 1 827 12 is_stmt 1 view .LVU326
 827:fltk-1.3.4-1/png/pngread.c ****          png_handle_bKGD(png_ptr, info_ptr, length);
 1161              		.loc 1 827 15 is_stmt 0 view .LVU327
 1162 00de 81FD4447 		cmpl	$1649100612, %ebp
 1162      4B62
 1163 00e4 0F840602 		je	.L171
 1163      0000
 832:fltk-1.3.4-1/png/pngread.c ****          png_handle_cHRM(png_ptr, info_ptr, length);
 1164              		.loc 1 832 12 is_stmt 1 view .LVU328
 832:fltk-1.3.4-1/png/pngread.c ****          png_handle_cHRM(png_ptr, info_ptr, length);
 1165              		.loc 1 832 15 is_stmt 0 view .LVU329
 1166 00ea 81FD4D52 		cmpl	$1665684045, %ebp
 1166      4863
 1167 00f0 0F843A02 		je	.L172
 1167      0000
 837:fltk-1.3.4-1/png/pngread.c ****          png_handle_gAMA(png_ptr, info_ptr, length);
 1168              		.loc 1 837 12 is_stmt 1 view .LVU330
 837:fltk-1.3.4-1/png/pngread.c ****          png_handle_gAMA(png_ptr, info_ptr, length);
 1169              		.loc 1 837 15 is_stmt 0 view .LVU331
 1170 00f6 81FD414D 		cmpl	$1732332865, %ebp
 1170      4167
 1171 00fc 0F844E02 		je	.L173
 1171      0000
 842:fltk-1.3.4-1/png/pngread.c ****          png_handle_hIST(png_ptr, info_ptr, length);
 1172              		.loc 1 842 12 is_stmt 1 view .LVU332
 842:fltk-1.3.4-1/png/pngread.c ****          png_handle_hIST(png_ptr, info_ptr, length);
 1173              		.loc 1 842 15 is_stmt 0 view .LVU333
 1174 0102 81FD5453 		cmpl	$1749635924, %ebp
 1174      4968
 1175 0108 0F840202 		je	.L174
 1175      0000
 847:fltk-1.3.4-1/png/pngread.c ****          png_handle_oFFs(png_ptr, info_ptr, length);
 1176              		.loc 1 847 12 is_stmt 1 view .LVU334
 847:fltk-1.3.4-1/png/pngread.c ****          png_handle_oFFs(png_ptr, info_ptr, length);
 1177              		.loc 1 847 15 is_stmt 0 view .LVU335
 1178 010e 81FD7346 		cmpl	$1866876531, %ebp
 1178      466F
 1179 0114 0F844F02 		je	.L175
 1179      0000
 852:fltk-1.3.4-1/png/pngread.c ****          png_handle_pCAL(png_ptr, info_ptr, length);
 1180              		.loc 1 852 12 is_stmt 1 view .LVU336
 852:fltk-1.3.4-1/png/pngread.c ****          png_handle_pCAL(png_ptr, info_ptr, length);
 1181              		.loc 1 852 15 is_stmt 0 view .LVU337
 1182 011a 81FD4C41 		cmpl	$1883455820, %ebp
 1182      4370
 1183 0120 0F845C02 		je	.L176
 1183      0000
 857:fltk-1.3.4-1/png/pngread.c ****          png_handle_sCAL(png_ptr, info_ptr, length);
 1184              		.loc 1 857 12 is_stmt 1 view .LVU338
 857:fltk-1.3.4-1/png/pngread.c ****          png_handle_sCAL(png_ptr, info_ptr, length);
 1185              		.loc 1 857 15 is_stmt 0 view .LVU339
 1186 0126 81FD4C41 		cmpl	$1933787468, %ebp
 1186      4373
 1187 012c 0F846902 		je	.L177
 1187      0000
 862:fltk-1.3.4-1/png/pngread.c ****          png_handle_pHYs(png_ptr, info_ptr, length);
 1188              		.loc 1 862 12 is_stmt 1 view .LVU340
 862:fltk-1.3.4-1/png/pngread.c ****          png_handle_pHYs(png_ptr, info_ptr, length);
 1189              		.loc 1 862 15 is_stmt 0 view .LVU341
 1190 0132 81FD7359 		cmpl	$1883789683, %ebp
 1190      4870
 1191 0138 0F847602 		je	.L178
 1191      0000
 867:fltk-1.3.4-1/png/pngread.c ****          png_handle_sBIT(png_ptr, info_ptr, length);
 1192              		.loc 1 867 12 is_stmt 1 view .LVU342
 867:fltk-1.3.4-1/png/pngread.c ****          png_handle_sBIT(png_ptr, info_ptr, length);
 1193              		.loc 1 867 15 is_stmt 0 view .LVU343
 1194 013e 81FD5449 		cmpl	$1933723988, %ebp
 1194      4273
 1195 0144 0F849C02 		je	.L179
 1195      0000
 872:fltk-1.3.4-1/png/pngread.c ****          png_handle_sRGB(png_ptr, info_ptr, length);
 1196              		.loc 1 872 12 is_stmt 1 view .LVU344
 872:fltk-1.3.4-1/png/pngread.c ****          png_handle_sRGB(png_ptr, info_ptr, length);
 1197              		.loc 1 872 15 is_stmt 0 view .LVU345
 1198 014a 81FD4247 		cmpl	$1934772034, %ebp
 1198      5273
 1199 0150 0F84A902 		je	.L180
 1199      0000
 877:fltk-1.3.4-1/png/pngread.c ****          png_handle_iCCP(png_ptr, info_ptr, length);
 1200              		.loc 1 877 12 is_stmt 1 view .LVU346
 877:fltk-1.3.4-1/png/pngread.c ****          png_handle_iCCP(png_ptr, info_ptr, length);
 1201              		.loc 1 877 15 is_stmt 0 view .LVU347
 1202 0156 81FD5043 		cmpl	$1766015824, %ebp
 1202      4369
 1203 015c 0F84B602 		je	.L181
 1203      0000
 882:fltk-1.3.4-1/png/pngread.c ****          png_handle_sPLT(png_ptr, info_ptr, length);
 1204              		.loc 1 882 12 is_stmt 1 view .LVU348
 882:fltk-1.3.4-1/png/pngread.c ****          png_handle_sPLT(png_ptr, info_ptr, length);
 1205              		.loc 1 882 15 is_stmt 0 view .LVU349
 1206 0162 81FD544C 		cmpl	$1934642260, %ebp
 1206      5073
 1207 0168 0F84C302 		je	.L182
 1207      0000
 887:fltk-1.3.4-1/png/pngread.c ****          png_handle_tEXt(png_ptr, info_ptr, length);
 1208              		.loc 1 887 12 is_stmt 1 view .LVU350
 887:fltk-1.3.4-1/png/pngread.c ****          png_handle_tEXt(png_ptr, info_ptr, length);
 1209              		.loc 1 887 15 is_stmt 0 view .LVU351
 1210 016e 81FD7458 		cmpl	$1950701684, %ebp
 1210      4574
 1211 0174 0F84D002 		je	.L183
 1211      0000
 892:fltk-1.3.4-1/png/pngread.c ****          png_handle_tIME(png_ptr, info_ptr, length);
 1212              		.loc 1 892 12 is_stmt 1 view .LVU352
 892:fltk-1.3.4-1/png/pngread.c ****          png_handle_tIME(png_ptr, info_ptr, length);
 1213              		.loc 1 892 15 is_stmt 0 view .LVU353
 1214 017a 81FD454D 		cmpl	$1950960965, %ebp
 1214      4974
 1215 0180 0F844702 		je	.L184
 1215      0000
 897:fltk-1.3.4-1/png/pngread.c ****          png_handle_tRNS(png_ptr, info_ptr, length);
 1216              		.loc 1 897 12 is_stmt 1 view .LVU354
 897:fltk-1.3.4-1/png/pngread.c ****          png_handle_tRNS(png_ptr, info_ptr, length);
 1217              		.loc 1 897 15 is_stmt 0 view .LVU355
 1218 0186 81FD534E 		cmpl	$1951551059, %ebp
 1218      5274
 1219 018c 0F84D102 		je	.L185
 1219      0000
 902:fltk-1.3.4-1/png/pngread.c ****          png_handle_zTXt(png_ptr, info_ptr, length);
 1220              		.loc 1 902 12 is_stmt 1 view .LVU356
 902:fltk-1.3.4-1/png/pngread.c ****          png_handle_zTXt(png_ptr, info_ptr, length);
 1221              		.loc 1 902 15 is_stmt 0 view .LVU357
 1222 0192 81FD7458 		cmpl	$2052348020, %ebp
 1222      547A
 1223 0198 0F84DE02 		je	.L186
 1223      0000
 907:fltk-1.3.4-1/png/pngread.c ****          png_handle_iTXt(png_ptr, info_ptr, length);
 1224              		.loc 1 907 12 is_stmt 1 view .LVU358
 912:fltk-1.3.4-1/png/pngread.c ****             PNG_HANDLE_CHUNK_AS_DEFAULT);
 1225              		.loc 1 912 10 is_stmt 0 view .LVU359
 1226 019e 31C9     		xorl	%ecx, %ecx
 907:fltk-1.3.4-1/png/pngread.c ****          png_handle_iTXt(png_ptr, info_ptr, length);
 1227              		.loc 1 907 15 view .LVU360
 1228 01a0 81FD7458 		cmpl	$1767135348, %ebp
 1228      5469
 1229 01a6 0F85C500 		jne	.L161
 1229      0000
 908:fltk-1.3.4-1/png/pngread.c **** #endif
 1230              		.loc 1 908 10 is_stmt 1 view .LVU361
 1231 01ac 4489E2   		movl	%r12d, %edx
 1232 01af 4C89EE   		movq	%r13, %rsi
 1233 01b2 4889DF   		movq	%rbx, %rdi
 1234 01b5 E8000000 		call	png_handle_iTXt@PLT
 1234      00
 1235              	.LVL126:
 908:fltk-1.3.4-1/png/pngread.c **** #endif
 1236              		.loc 1 908 10 is_stmt 0 view .LVU362
 1237 01ba 8B832C01 		movl	300(%rbx), %eax
 1237      0000
 1238 01c0 E9B3FEFF 		jmp	.L121
 1238      FF
 1239              	.LVL127:
 1240              		.p2align 4,,10
 1241 01c5 0F1F00   		.p2align 3
 1242              	.L169:
 817:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 1243              		.loc 1 817 10 is_stmt 1 view .LVU363
 817:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 1244              		.loc 1 817 13 is_stmt 0 view .LVU364
 1245 01c8 4585E4   		testl	%r12d, %r12d
 1246 01cb 7509     		jne	.L130
 817:fltk-1.3.4-1/png/pngread.c ****              (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 1247              		.loc 1 817 27 view .LVU365
 1248 01cd F6832D01 		testb	$32, 301(%rbx)
 1248      000020
 1249 01d4 7412     		je	.L131
 1250              	.L130:
 819:fltk-1.3.4-1/png/pngread.c **** 
 1251              		.loc 1 819 13 is_stmt 1 view .LVU366
 1252 01d6 4C89F6   		movq	%r14, %rsi
 1253 01d9 4889DF   		movq	%rbx, %rdi
 1254 01dc E8000000 		call	png_benign_error@PLT
 1254      00
 1255              	.LVL128:
 1256              		.p2align 4,,10
 1257 01e1 0F1F8000 		.p2align 3
 1257      000000
 1258              	.L131:
 821:fltk-1.3.4-1/png/pngread.c ****       }
 1259              		.loc 1 821 10 view .LVU367
 1260 01e8 4489E6   		movl	%r12d, %esi
 1261 01eb 4889DF   		movq	%rbx, %rdi
 1262 01ee E8000000 		call	png_crc_finish@PLT
 1262      00
 1263              	.LVL129:
 1264 01f3 8B832C01 		movl	300(%rbx), %eax
 1264      0000
 1265              	.LBE99:
 914:fltk-1.3.4-1/png/pngread.c **** }
 1266              		.loc 1 914 12 view .LVU368
 914:fltk-1.3.4-1/png/pngread.c **** }
 1267              		.loc 1 914 4 is_stmt 0 view .LVU369
 1268 01f9 A810     		testb	$16, %al
 1269 01fb 0F847FFE 		je	.L150
 1269      FFFF
 1270              	.L165:
 915:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 1271              		.loc 1 915 1 view .LVU370
 1272 0201 4883C410 		addq	$16, %rsp
 1273              		.cfi_remember_state
 1274              		.cfi_def_cfa_offset 48
 1275 0205 5B       		popq	%rbx
 1276              		.cfi_def_cfa_offset 40
 1277              	.LVL130:
 915:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 1278              		.loc 1 915 1 view .LVU371
 1279 0206 5D       		popq	%rbp
 1280              		.cfi_def_cfa_offset 32
 1281              	.LVL131:
 915:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 1282              		.loc 1 915 1 view .LVU372
 1283 0207 415C     		popq	%r12
 1284              		.cfi_def_cfa_offset 24
 1285              	.LVL132:
 915:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 1286              		.loc 1 915 1 view .LVU373
 1287 0209 415D     		popq	%r13
 1288              		.cfi_def_cfa_offset 16
 1289              	.LVL133:
 915:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 1290              		.loc 1 915 1 view .LVU374
 1291 020b 415E     		popq	%r14
 1292              		.cfi_def_cfa_offset 8
 1293 020d C3       		ret
 1294              	.LVL134:
 1295 020e 6690     		.p2align 4,,10
 1296              		.p2align 3
 1297              	.L166:
 1298              		.cfi_restore_state
 1299              	.LBB100:
 789:fltk-1.3.4-1/png/pngread.c **** 
 1300              		.loc 1 789 10 is_stmt 1 view .LVU375
 1301 0210 89C2     		movl	%eax, %edx
 1302 0212 4C89EE   		movq	%r13, %rsi
 1303 0215 4889DF   		movq	%rbx, %rdi
 1304 0218 E8000000 		call	png_handle_IEND@PLT
 1304      00
 1305              	.LVL135:
 789:fltk-1.3.4-1/png/pngread.c **** 
 1306              		.loc 1 789 10 is_stmt 0 view .LVU376
 1307 021d 8B832C01 		movl	300(%rbx), %eax
 1307      0000
 1308 0223 E950FEFF 		jmp	.L121
 1308      FF
 1309              	.LVL136:
 1310 0228 0F1F8400 		.p2align 4,,10
 1310      00000000 
 1311              		.p2align 3
 1312              	.L167:
 792:fltk-1.3.4-1/png/pngread.c **** 
 1313              		.loc 1 792 10 is_stmt 1 view .LVU377
 1314 0230 89C2     		movl	%eax, %edx
 1315 0232 4C89EE   		movq	%r13, %rsi
 1316 0235 4889DF   		movq	%rbx, %rdi
 1317 0238 E8000000 		call	png_handle_IHDR@PLT
 1317      00
 1318              	.LVL137:
 792:fltk-1.3.4-1/png/pngread.c **** 
 1319              		.loc 1 792 10 is_stmt 0 view .LVU378
 1320 023d 8B832C01 		movl	300(%rbx), %eax
 1320      0000
 1321 0243 E930FEFF 		jmp	.L121
 1321      FF
 1322              	.LVL138:
 1323 0248 0F1F8400 		.p2align 4,,10
 1323      00000000 
 1324              		.p2align 3
 1325              	.L164:
 802:fltk-1.3.4-1/png/pngread.c ****                 (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 1326              		.loc 1 802 13 is_stmt 1 view .LVU379
 802:fltk-1.3.4-1/png/pngread.c ****                 (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 1327              		.loc 1 802 16 is_stmt 0 view .LVU380
 1328 0250 4585E4   		testl	%r12d, %r12d
 1329 0253 7509     		jne	.L126
 802:fltk-1.3.4-1/png/pngread.c ****                 (png_ptr->mode & PNG_HAVE_CHUNK_AFTER_IDAT) != 0)
 1330              		.loc 1 802 30 view .LVU381
 1331 0255 F6832D01 		testb	$32, 301(%rbx)
 1331      000020
 1332 025c 7413     		je	.L161
 1333              	.L126:
 804:fltk-1.3.4-1/png/pngread.c ****          }
 1334              		.loc 1 804 16 view .LVU382
 1335 025e 4C89F6   		movq	%r14, %rsi
 1336 0261 4889DF   		movq	%rbx, %rdi
 1337 0264 894C240C 		movl	%ecx, 12(%rsp)
 804:fltk-1.3.4-1/png/pngread.c ****          }
 1338              		.loc 1 804 16 is_stmt 1 view .LVU383
 1339 0268 E8000000 		call	png_benign_error@PLT
 1339      00
 1340              	.LVL139:
 804:fltk-1.3.4-1/png/pngread.c ****          }
 1341              		.loc 1 804 16 is_stmt 0 view .LVU384
 1342 026d 8B4C240C 		movl	12(%rsp), %ecx
 1343              	.LVL140:
 1344              	.L161:
 912:fltk-1.3.4-1/png/pngread.c ****             PNG_HANDLE_CHUNK_AS_DEFAULT);
 1345              		.loc 1 912 10 view .LVU385
 1346 0271 4489E2   		movl	%r12d, %edx
 1347 0274 4C89EE   		movq	%r13, %rsi
 1348 0277 4889DF   		movq	%rbx, %rdi
 1349 027a E8000000 		call	png_handle_unknown@PLT
 1349      00
 1350              	.LVL141:
 1351 027f 8B832C01 		movl	300(%rbx), %eax
 1351      0000
 1352 0285 E9EEFDFF 		jmp	.L121
 1352      FF
 1353              	.LVL142:
 1354 028a 660F1F44 		.p2align 4,,10
 1354      0000
 1355              		.p2align 3
 1356              	.L163:
 912:fltk-1.3.4-1/png/pngread.c ****             PNG_HANDLE_CHUNK_AS_DEFAULT);
 1357              		.loc 1 912 10 view .LVU386
 1358              	.LBE100:
 779:fltk-1.3.4-1/png/pngread.c ****      png_benign_error(png_ptr, "Read palette index exceeding num_palette");
 1359              		.loc 1 779 41 view .LVU387
 1360 0290 0FB78368 		movzwl	616(%rbx), %eax
 1360      020000
 778:fltk-1.3.4-1/png/pngread.c ****       png_ptr->num_palette_max > png_ptr->num_palette)
 1361              		.loc 1 778 54 view .LVU388
 1362 0297 39836C02 		cmpl	%eax, 620(%rbx)
 1362      0000
 1363 029d 0F8E8EFD 		jle	.L119
 1363      FFFF
 780:fltk-1.3.4-1/png/pngread.c **** #endif
 1364              		.loc 1 780 6 is_stmt 1 view .LVU389
 1365 02a3 488D3500 		leaq	.LC5(%rip), %rsi
 1365      000000
 1366 02aa 4889DF   		movq	%rbx, %rdi
 1367 02ad E8000000 		call	png_benign_error@PLT
 1367      00
 1368              	.LVL143:
 1369 02b2 E97AFDFF 		jmp	.L119
 1369      FF
 1370 02b7 660F1F84 		.p2align 4,,10
 1370      00000000 
 1370      00
 1371              		.p2align 3
 1372              	.L162:
 774:fltk-1.3.4-1/png/pngread.c **** 
 1373              		.loc 1 774 7 view .LVU390
 1374 02c0 4889DF   		movq	%rbx, %rdi
 1375 02c3 E8000000 		call	png_read_finish_IDAT@PLT
 1375      00
 1376              	.LVL144:
 1377 02c8 E957FDFF 		jmp	.L118
 1377      FF
 1378              	.LVL145:
 1379 02cd 0F1F00   		.p2align 4,,10
 1380              		.p2align 3
 1381              	.L170:
 1382              	.LBB101:
 824:fltk-1.3.4-1/png/pngread.c **** 
 1383              		.loc 1 824 10 view .LVU391
 1384 02d0 4489E2   		movl	%r12d, %edx
 1385 02d3 4C89EE   		movq	%r13, %rsi
 1386 02d6 4889DF   		movq	%rbx, %rdi
 1387 02d9 E8000000 		call	png_handle_PLTE@PLT
 1387      00
 1388              	.LVL146:
 824:fltk-1.3.4-1/png/pngread.c **** 
 1389              		.loc 1 824 10 is_stmt 0 view .LVU392
 1390 02de 8B832C01 		movl	300(%rbx), %eax
 1390      0000
 1391 02e4 E98FFDFF 		jmp	.L121
 1391      FF
 1392              	.LVL147:
 1393 02e9 0F1F8000 		.p2align 4,,10
 1393      000000
 1394              		.p2align 3
 1395              	.L171:
 828:fltk-1.3.4-1/png/pngread.c **** #endif
 1396              		.loc 1 828 10 is_stmt 1 view .LVU393
 1397 02f0 4489E2   		movl	%r12d, %edx
 1398 02f3 4C89EE   		movq	%r13, %rsi
 1399 02f6 4889DF   		movq	%rbx, %rdi
 1400 02f9 E8000000 		call	png_handle_bKGD@PLT
 1400      00
 1401              	.LVL148:
 828:fltk-1.3.4-1/png/pngread.c **** #endif
 1402              		.loc 1 828 10 is_stmt 0 view .LVU394
 1403 02fe 8B832C01 		movl	300(%rbx), %eax
 1403      0000
 1404 0304 E96FFDFF 		jmp	.L121
 1404      FF
 1405              	.LVL149:
 1406 0309 0F1F8000 		.p2align 4,,10
 1406      000000
 1407              		.p2align 3
 1408              	.L174:
 843:fltk-1.3.4-1/png/pngread.c **** #endif
 1409              		.loc 1 843 10 is_stmt 1 view .LVU395
 1410 0310 4489E2   		movl	%r12d, %edx
 1411 0313 4C89EE   		movq	%r13, %rsi
 1412 0316 4889DF   		movq	%rbx, %rdi
 1413 0319 E8000000 		call	png_handle_hIST@PLT
 1413      00
 1414              	.LVL150:
 843:fltk-1.3.4-1/png/pngread.c **** #endif
 1415              		.loc 1 843 10 is_stmt 0 view .LVU396
 1416 031e 8B832C01 		movl	300(%rbx), %eax
 1416      0000
 1417 0324 E94FFDFF 		jmp	.L121
 1417      FF
 1418              	.LVL151:
 1419 0329 0F1F8000 		.p2align 4,,10
 1419      000000
 1420              		.p2align 3
 1421              	.L172:
 833:fltk-1.3.4-1/png/pngread.c **** #endif
 1422              		.loc 1 833 10 is_stmt 1 view .LVU397
 1423 0330 4489E2   		movl	%r12d, %edx
 1424 0333 4C89EE   		movq	%r13, %rsi
 1425 0336 4889DF   		movq	%rbx, %rdi
 1426 0339 E8000000 		call	png_handle_cHRM@PLT
 1426      00
 1427              	.LVL152:
 833:fltk-1.3.4-1/png/pngread.c **** #endif
 1428              		.loc 1 833 10 is_stmt 0 view .LVU398
 1429 033e 8B832C01 		movl	300(%rbx), %eax
 1429      0000
 1430 0344 E92FFDFF 		jmp	.L121
 1430      FF
 1431              	.LVL153:
 1432 0349 0F1F8000 		.p2align 4,,10
 1432      000000
 1433              		.p2align 3
 1434              	.L173:
 838:fltk-1.3.4-1/png/pngread.c **** #endif
 1435              		.loc 1 838 10 is_stmt 1 view .LVU399
 1436 0350 4489E2   		movl	%r12d, %edx
 1437 0353 4C89EE   		movq	%r13, %rsi
 1438 0356 4889DF   		movq	%rbx, %rdi
 1439 0359 E8000000 		call	png_handle_gAMA@PLT
 1439      00
 1440              	.LVL154:
 838:fltk-1.3.4-1/png/pngread.c **** #endif
 1441              		.loc 1 838 10 is_stmt 0 view .LVU400
 1442 035e 8B832C01 		movl	300(%rbx), %eax
 1442      0000
 1443 0364 E90FFDFF 		jmp	.L121
 1443      FF
 1444              	.LVL155:
 1445              	.L175:
 848:fltk-1.3.4-1/png/pngread.c **** #endif
 1446              		.loc 1 848 10 is_stmt 1 view .LVU401
 1447 0369 4489E2   		movl	%r12d, %edx
 1448 036c 4C89EE   		movq	%r13, %rsi
 1449 036f 4889DF   		movq	%rbx, %rdi
 1450 0372 E8000000 		call	png_handle_oFFs@PLT
 1450      00
 1451              	.LVL156:
 848:fltk-1.3.4-1/png/pngread.c **** #endif
 1452              		.loc 1 848 10 is_stmt 0 view .LVU402
 1453 0377 8B832C01 		movl	300(%rbx), %eax
 1453      0000
 1454 037d E9F6FCFF 		jmp	.L121
 1454      FF
 1455              	.LVL157:
 1456              	.L176:
 853:fltk-1.3.4-1/png/pngread.c **** #endif
 1457              		.loc 1 853 10 is_stmt 1 view .LVU403
 1458 0382 4489E2   		movl	%r12d, %edx
 1459 0385 4C89EE   		movq	%r13, %rsi
 1460 0388 4889DF   		movq	%rbx, %rdi
 1461 038b E8000000 		call	png_handle_pCAL@PLT
 1461      00
 1462              	.LVL158:
 853:fltk-1.3.4-1/png/pngread.c **** #endif
 1463              		.loc 1 853 10 is_stmt 0 view .LVU404
 1464 0390 8B832C01 		movl	300(%rbx), %eax
 1464      0000
 1465 0396 E9DDFCFF 		jmp	.L121
 1465      FF
 1466              	.LVL159:
 1467              	.L177:
 858:fltk-1.3.4-1/png/pngread.c **** #endif
 1468              		.loc 1 858 10 is_stmt 1 view .LVU405
 1469 039b 4489E2   		movl	%r12d, %edx
 1470 039e 4C89EE   		movq	%r13, %rsi
 1471 03a1 4889DF   		movq	%rbx, %rdi
 1472 03a4 E8000000 		call	png_handle_sCAL@PLT
 1472      00
 1473              	.LVL160:
 858:fltk-1.3.4-1/png/pngread.c **** #endif
 1474              		.loc 1 858 10 is_stmt 0 view .LVU406
 1475 03a9 8B832C01 		movl	300(%rbx), %eax
 1475      0000
 1476 03af E9C4FCFF 		jmp	.L121
 1476      FF
 1477              	.LVL161:
 1478              	.L178:
 863:fltk-1.3.4-1/png/pngread.c **** #endif
 1479              		.loc 1 863 10 is_stmt 1 view .LVU407
 1480 03b4 4489E2   		movl	%r12d, %edx
 1481 03b7 4C89EE   		movq	%r13, %rsi
 1482 03ba 4889DF   		movq	%rbx, %rdi
 1483 03bd E8000000 		call	png_handle_pHYs@PLT
 1483      00
 1484              	.LVL162:
 863:fltk-1.3.4-1/png/pngread.c **** #endif
 1485              		.loc 1 863 10 is_stmt 0 view .LVU408
 1486 03c2 8B832C01 		movl	300(%rbx), %eax
 1486      0000
 1487 03c8 E9ABFCFF 		jmp	.L121
 1487      FF
 1488              	.LVL163:
 1489              	.L184:
 893:fltk-1.3.4-1/png/pngread.c **** #endif
 1490              		.loc 1 893 10 is_stmt 1 view .LVU409
 1491 03cd 4489E2   		movl	%r12d, %edx
 1492 03d0 4C89EE   		movq	%r13, %rsi
 1493 03d3 4889DF   		movq	%rbx, %rdi
 1494 03d6 E8000000 		call	png_handle_tIME@PLT
 1494      00
 1495              	.LVL164:
 893:fltk-1.3.4-1/png/pngread.c **** #endif
 1496              		.loc 1 893 10 is_stmt 0 view .LVU410
 1497 03db 8B832C01 		movl	300(%rbx), %eax
 1497      0000
 1498 03e1 E992FCFF 		jmp	.L121
 1498      FF
 1499              	.LVL165:
 1500              	.L179:
 868:fltk-1.3.4-1/png/pngread.c **** #endif
 1501              		.loc 1 868 10 is_stmt 1 view .LVU411
 1502 03e6 4489E2   		movl	%r12d, %edx
 1503 03e9 4C89EE   		movq	%r13, %rsi
 1504 03ec 4889DF   		movq	%rbx, %rdi
 1505 03ef E8000000 		call	png_handle_sBIT@PLT
 1505      00
 1506              	.LVL166:
 868:fltk-1.3.4-1/png/pngread.c **** #endif
 1507              		.loc 1 868 10 is_stmt 0 view .LVU412
 1508 03f4 8B832C01 		movl	300(%rbx), %eax
 1508      0000
 1509 03fa E979FCFF 		jmp	.L121
 1509      FF
 1510              	.LVL167:
 1511              	.L180:
 873:fltk-1.3.4-1/png/pngread.c **** #endif
 1512              		.loc 1 873 10 is_stmt 1 view .LVU413
 1513 03ff 4489E2   		movl	%r12d, %edx
 1514 0402 4C89EE   		movq	%r13, %rsi
 1515 0405 4889DF   		movq	%rbx, %rdi
 1516 0408 E8000000 		call	png_handle_sRGB@PLT
 1516      00
 1517              	.LVL168:
 873:fltk-1.3.4-1/png/pngread.c **** #endif
 1518              		.loc 1 873 10 is_stmt 0 view .LVU414
 1519 040d 8B832C01 		movl	300(%rbx), %eax
 1519      0000
 1520 0413 E960FCFF 		jmp	.L121
 1520      FF
 1521              	.LVL169:
 1522              	.L181:
 878:fltk-1.3.4-1/png/pngread.c **** #endif
 1523              		.loc 1 878 10 is_stmt 1 view .LVU415
 1524 0418 4489E2   		movl	%r12d, %edx
 1525 041b 4C89EE   		movq	%r13, %rsi
 1526 041e 4889DF   		movq	%rbx, %rdi
 1527 0421 E8000000 		call	png_handle_iCCP@PLT
 1527      00
 1528              	.LVL170:
 878:fltk-1.3.4-1/png/pngread.c **** #endif
 1529              		.loc 1 878 10 is_stmt 0 view .LVU416
 1530 0426 8B832C01 		movl	300(%rbx), %eax
 1530      0000
 1531 042c E947FCFF 		jmp	.L121
 1531      FF
 1532              	.LVL171:
 1533              	.L182:
 883:fltk-1.3.4-1/png/pngread.c **** #endif
 1534              		.loc 1 883 10 is_stmt 1 view .LVU417
 1535 0431 4489E2   		movl	%r12d, %edx
 1536 0434 4C89EE   		movq	%r13, %rsi
 1537 0437 4889DF   		movq	%rbx, %rdi
 1538 043a E8000000 		call	png_handle_sPLT@PLT
 1538      00
 1539              	.LVL172:
 883:fltk-1.3.4-1/png/pngread.c **** #endif
 1540              		.loc 1 883 10 is_stmt 0 view .LVU418
 1541 043f 8B832C01 		movl	300(%rbx), %eax
 1541      0000
 1542 0445 E92EFCFF 		jmp	.L121
 1542      FF
 1543              	.LVL173:
 1544              	.L183:
 888:fltk-1.3.4-1/png/pngread.c **** #endif
 1545              		.loc 1 888 10 is_stmt 1 view .LVU419
 1546 044a 4489E2   		movl	%r12d, %edx
 1547 044d 4C89EE   		movq	%r13, %rsi
 1548 0450 4889DF   		movq	%rbx, %rdi
 1549 0453 E8000000 		call	png_handle_tEXt@PLT
 1549      00
 1550              	.LVL174:
 888:fltk-1.3.4-1/png/pngread.c **** #endif
 1551              		.loc 1 888 10 is_stmt 0 view .LVU420
 1552 0458 8B832C01 		movl	300(%rbx), %eax
 1552      0000
 1553 045e E915FCFF 		jmp	.L121
 1553      FF
 1554              	.LVL175:
 1555              	.L185:
 898:fltk-1.3.4-1/png/pngread.c **** #endif
 1556              		.loc 1 898 10 is_stmt 1 view .LVU421
 1557 0463 4489E2   		movl	%r12d, %edx
 1558 0466 4C89EE   		movq	%r13, %rsi
 1559 0469 4889DF   		movq	%rbx, %rdi
 1560 046c E8000000 		call	png_handle_tRNS@PLT
 1560      00
 1561              	.LVL176:
 898:fltk-1.3.4-1/png/pngread.c **** #endif
 1562              		.loc 1 898 10 is_stmt 0 view .LVU422
 1563 0471 8B832C01 		movl	300(%rbx), %eax
 1563      0000
 1564 0477 E9FCFBFF 		jmp	.L121
 1564      FF
 1565              	.LVL177:
 1566              	.L186:
 903:fltk-1.3.4-1/png/pngread.c **** #endif
 1567              		.loc 1 903 10 is_stmt 1 view .LVU423
 1568 047c 4489E2   		movl	%r12d, %edx
 1569 047f 4C89EE   		movq	%r13, %rsi
 1570 0482 4889DF   		movq	%rbx, %rdi
 1571 0485 E8000000 		call	png_handle_zTXt@PLT
 1571      00
 1572              	.LVL178:
 903:fltk-1.3.4-1/png/pngread.c **** #endif
 1573              		.loc 1 903 10 is_stmt 0 view .LVU424
 1574 048a 8B832C01 		movl	300(%rbx), %eax
 1574      0000
 1575 0490 E9E3FBFF 		jmp	.L121
 1575      FF
 1576              	.LBE101:
 1577              		.cfi_endproc
 1578              	.LFE83:
 1580              		.section	.text.set_file_encoding,"ax",@progbits
 1581              		.p2align 4
 1583              	set_file_encoding:
 1584              	.LVL179:
 1585              	.LFB64:
1625:fltk-1.3.4-1/png/pngread.c **** 
1626:fltk-1.3.4-1/png/pngread.c **** #  define PNG_SKIP_CHUNKS(p) png_image_skip_unused_chunks(p)
1627:fltk-1.3.4-1/png/pngread.c **** #else
1628:fltk-1.3.4-1/png/pngread.c **** #  define PNG_SKIP_CHUNKS(p) ((void)0)
1629:fltk-1.3.4-1/png/pngread.c **** #endif /* HANDLE_AS_UNKNOWN */
1630:fltk-1.3.4-1/png/pngread.c **** 
1631:fltk-1.3.4-1/png/pngread.c **** /* The following macro gives the exact rounded answer for all values in the
1632:fltk-1.3.4-1/png/pngread.c ****  * range 0..255 (it actually divides by 51.2, but the rounding still generates
1633:fltk-1.3.4-1/png/pngread.c ****  * the correct numbers 0..5
1634:fltk-1.3.4-1/png/pngread.c ****  */
1635:fltk-1.3.4-1/png/pngread.c **** #define PNG_DIV51(v8) (((v8) * 5 + 130) >> 8)
1636:fltk-1.3.4-1/png/pngread.c **** 
1637:fltk-1.3.4-1/png/pngread.c **** /* Utility functions to make particular color-maps */
1638:fltk-1.3.4-1/png/pngread.c **** static void
1639:fltk-1.3.4-1/png/pngread.c **** set_file_encoding(png_image_read_control *display)
1640:fltk-1.3.4-1/png/pngread.c **** {
 1586              		.loc 1 1640 1 is_stmt 1 view -0
 1587              		.cfi_startproc
1641:fltk-1.3.4-1/png/pngread.c ****    png_fixed_point g = display->image->opaque->png_ptr->colorspace.gamma;
 1588              		.loc 1 1641 4 view .LVU426
1640:fltk-1.3.4-1/png/pngread.c ****    png_fixed_point g = display->image->opaque->png_ptr->colorspace.gamma;
 1589              		.loc 1 1640 1 is_stmt 0 view .LVU427
 1590 0000 55       		pushq	%rbp
 1591              		.cfi_def_cfa_offset 16
 1592              		.cfi_offset 6, -16
 1593 0001 53       		pushq	%rbx
 1594              		.cfi_def_cfa_offset 24
 1595              		.cfi_offset 3, -24
 1596 0002 4889FB   		movq	%rdi, %rbx
 1597 0005 4883EC08 		subq	$8, %rsp
 1598              		.cfi_def_cfa_offset 32
 1599              		.loc 1 1641 38 view .LVU428
 1600 0009 488B07   		movq	(%rdi), %rax
 1601              		.loc 1 1641 46 view .LVU429
 1602 000c 488B00   		movq	(%rax), %rax
 1603              		.loc 1 1641 20 view .LVU430
 1604 000f 488B00   		movq	(%rax), %rax
 1605 0012 8BA8D804 		movl	1240(%rax), %ebp
 1605      0000
 1606              	.LVL180:
1642:fltk-1.3.4-1/png/pngread.c ****    if (png_gamma_significant(g) != 0)
 1607              		.loc 1 1642 4 is_stmt 1 view .LVU431
 1608              		.loc 1 1642 8 is_stmt 0 view .LVU432
 1609 0018 89EF     		movl	%ebp, %edi
 1610              	.LVL181:
 1611              		.loc 1 1642 8 view .LVU433
 1612 001a E8000000 		call	png_gamma_significant@PLT
 1612      00
 1613              	.LVL182:
 1614              		.loc 1 1642 7 view .LVU434
 1615 001f 85C0     		testl	%eax, %eax
 1616 0021 743D     		je	.L188
1643:fltk-1.3.4-1/png/pngread.c ****    {
1644:fltk-1.3.4-1/png/pngread.c ****       if (png_gamma_not_sRGB(g) != 0)
 1617              		.loc 1 1644 7 is_stmt 1 view .LVU435
 1618              	.LVL183:
 1619              	.LBB106:
 1620              	.LBI106:
1363:fltk-1.3.4-1/png/pngread.c **** {
 1621              		.loc 1 1363 1 view .LVU436
 1622              	.LBB107:
1365:fltk-1.3.4-1/png/pngread.c ****    {
 1623              		.loc 1 1365 4 view .LVU437
1365:fltk-1.3.4-1/png/pngread.c ****    {
 1624              		.loc 1 1365 7 is_stmt 0 view .LVU438
 1625 0023 81FD9F86 		cmpl	$99999, %ebp
 1625      0100
 1626 0029 7E1D     		jle	.L189
 1627              	.LVL184:
 1628              	.L192:
1365:fltk-1.3.4-1/png/pngread.c ****    {
 1629              		.loc 1 1365 7 view .LVU439
 1630              	.LBE107:
 1631              	.LBE106:
1645:fltk-1.3.4-1/png/pngread.c ****       {
1646:fltk-1.3.4-1/png/pngread.c ****          display->file_encoding = P_FILE;
 1632              		.loc 1 1646 10 is_stmt 1 view .LVU440
 1633              		.loc 1 1646 33 is_stmt 0 view .LVU441
 1634 002b C7434003 		movl	$3, 64(%rbx)
 1634      000000
1647:fltk-1.3.4-1/png/pngread.c ****          display->gamma_to_linear = png_reciprocal(g);
 1635              		.loc 1 1647 10 is_stmt 1 view .LVU442
 1636              		.loc 1 1647 37 is_stmt 0 view .LVU443
 1637 0032 89EF     		movl	%ebp, %edi
 1638 0034 E8000000 		call	png_reciprocal@PLT
 1638      00
 1639              	.LVL185:
 1640              		.loc 1 1647 35 view .LVU444
 1641 0039 894344   		movl	%eax, 68(%rbx)
1648:fltk-1.3.4-1/png/pngread.c ****       }
1649:fltk-1.3.4-1/png/pngread.c **** 
1650:fltk-1.3.4-1/png/pngread.c ****       else
1651:fltk-1.3.4-1/png/pngread.c ****          display->file_encoding = P_sRGB;
1652:fltk-1.3.4-1/png/pngread.c ****    }
1653:fltk-1.3.4-1/png/pngread.c **** 
1654:fltk-1.3.4-1/png/pngread.c ****    else
1655:fltk-1.3.4-1/png/pngread.c ****       display->file_encoding = P_LINEAR8;
1656:fltk-1.3.4-1/png/pngread.c **** }
 1642              		.loc 1 1656 1 view .LVU445
 1643 003c 4883C408 		addq	$8, %rsp
 1644              		.cfi_remember_state
 1645              		.cfi_def_cfa_offset 24
 1646 0040 5B       		popq	%rbx
 1647              		.cfi_def_cfa_offset 16
 1648              	.LVL186:
 1649              		.loc 1 1656 1 view .LVU446
 1650 0041 5D       		popq	%rbp
 1651              		.cfi_def_cfa_offset 8
 1652              	.LVL187:
 1653              		.loc 1 1656 1 view .LVU447
 1654 0042 C3       		ret
 1655              	.LVL188:
 1656              		.p2align 4,,10
 1657 0043 0F1F4400 		.p2align 3
 1657      00
 1658              	.L189:
 1659              		.cfi_restore_state
 1660              	.LBB112:
 1661              	.LBB110:
1368:fltk-1.3.4-1/png/pngread.c ****          return 0;
 1662              		.loc 1 1368 7 is_stmt 1 view .LVU448
1368:fltk-1.3.4-1/png/pngread.c ****          return 0;
 1663              		.loc 1 1368 10 is_stmt 0 view .LVU449
 1664 0048 85ED     		testl	%ebp, %ebp
 1665 004a 7524     		jne	.L197
 1666              	.LVL189:
 1667              	.L191:
1368:fltk-1.3.4-1/png/pngread.c ****          return 0;
 1668              		.loc 1 1368 10 view .LVU450
 1669              	.LBE110:
 1670              	.LBE112:
1651:fltk-1.3.4-1/png/pngread.c ****    }
 1671              		.loc 1 1651 10 is_stmt 1 view .LVU451
1651:fltk-1.3.4-1/png/pngread.c ****    }
 1672              		.loc 1 1651 33 is_stmt 0 view .LVU452
 1673 004c C7434001 		movl	$1, 64(%rbx)
 1673      000000
 1674              		.loc 1 1656 1 view .LVU453
 1675 0053 4883C408 		addq	$8, %rsp
 1676              		.cfi_remember_state
 1677              		.cfi_def_cfa_offset 24
 1678 0057 5B       		popq	%rbx
 1679              		.cfi_def_cfa_offset 16
 1680              	.LVL190:
 1681              		.loc 1 1656 1 view .LVU454
 1682 0058 5D       		popq	%rbp
 1683              		.cfi_def_cfa_offset 8
 1684              	.LVL191:
 1685              		.loc 1 1656 1 view .LVU455
 1686 0059 C3       		ret
 1687              	.LVL192:
 1688 005a 660F1F44 		.p2align 4,,10
 1688      0000
 1689              		.p2align 3
 1690              	.L188:
 1691              		.cfi_restore_state
1655:fltk-1.3.4-1/png/pngread.c **** }
 1692              		.loc 1 1655 7 is_stmt 1 view .LVU456
1655:fltk-1.3.4-1/png/pngread.c **** }
 1693              		.loc 1 1655 30 is_stmt 0 view .LVU457
 1694 0060 C7434004 		movl	$4, 64(%rbx)
 1694      000000
 1695              		.loc 1 1656 1 view .LVU458
 1696 0067 4883C408 		addq	$8, %rsp
 1697              		.cfi_remember_state
 1698              		.cfi_def_cfa_offset 24
 1699 006b 5B       		popq	%rbx
 1700              		.cfi_def_cfa_offset 16
 1701              	.LVL193:
 1702              		.loc 1 1656 1 view .LVU459
 1703 006c 5D       		popq	%rbp
 1704              		.cfi_def_cfa_offset 8
 1705              	.LVL194:
 1706              		.loc 1 1656 1 view .LVU460
 1707 006d C3       		ret
 1708              	.LVL195:
 1709 006e 6690     		.p2align 4,,10
 1710              		.p2align 3
 1711              	.L197:
 1712              		.cfi_restore_state
 1713              	.LBB113:
 1714              	.LBB111:
 1715              	.LBB108:
 1716              	.LBI108:
1363:fltk-1.3.4-1/png/pngread.c **** {
 1717              		.loc 1 1363 1 is_stmt 1 view .LVU461
 1718              	.LBB109:
1371:fltk-1.3.4-1/png/pngread.c ****    }
 1719              		.loc 1 1371 7 view .LVU462
1371:fltk-1.3.4-1/png/pngread.c ****    }
 1720              		.loc 1 1371 39 is_stmt 0 view .LVU463
 1721 0070 8D44AD00 		leal	0(%rbp,%rbp,4), %eax
1371:fltk-1.3.4-1/png/pngread.c ****    }
 1722              		.loc 1 1371 44 view .LVU464
 1723 0074 8D444502 		leal	2(%rbp,%rax,2), %eax
1371:fltk-1.3.4-1/png/pngread.c ****    }
 1724              		.loc 1 1371 14 view .LVU465
 1725 0078 4863F8   		movslq	%eax, %rdi
 1726 007b C1F81F   		sarl	$31, %eax
 1727 007e 4869FF67 		imulq	$1717986919, %rdi, %rdi
 1727      666666
 1728 0085 48C1FF21 		sarq	$33, %rdi
 1729 0089 29C7     		subl	%eax, %edi
 1730 008b E8000000 		call	png_gamma_significant@PLT
 1730      00
 1731              	.LVL196:
1371:fltk-1.3.4-1/png/pngread.c ****    }
 1732              		.loc 1 1371 14 view .LVU466
 1733              	.LBE109:
 1734              	.LBE108:
 1735              	.LBE111:
 1736              	.LBE113:
1644:fltk-1.3.4-1/png/pngread.c ****       {
 1737              		.loc 1 1644 10 view .LVU467
 1738 0090 85C0     		testl	%eax, %eax
 1739 0092 7597     		jne	.L192
 1740 0094 EBB6     		jmp	.L191
 1741              		.cfi_endproc
 1742              	.LFE64:
 1744              		.section	.rodata.decode_gamma.str1.8,"aMS",@progbits,1
 1745              		.align 8
 1746              	.LC6:
 1747 0000 756E6578 		.string	"unexpected encoding (internal error)"
 1747      70656374 
 1747      65642065 
 1747      6E636F64 
 1747      696E6720 
 1748              		.section	.text.decode_gamma,"ax",@progbits
 1749              		.p2align 4
 1751              	decode_gamma:
 1752              	.LVL197:
 1753              	.LFB65:
1657:fltk-1.3.4-1/png/pngread.c **** 
1658:fltk-1.3.4-1/png/pngread.c **** static unsigned int
1659:fltk-1.3.4-1/png/pngread.c **** decode_gamma(png_image_read_control *display, png_uint_32 value, int encoding)
1660:fltk-1.3.4-1/png/pngread.c **** {
 1754              		.loc 1 1660 1 is_stmt 1 view -0
 1755              		.cfi_startproc
 1756              		.loc 1 1660 1 is_stmt 0 view .LVU469
 1757 0000 4154     		pushq	%r12
 1758              		.cfi_def_cfa_offset 16
 1759              		.cfi_offset 12, -16
 1760 0002 4189F4   		movl	%esi, %r12d
 1761 0005 53       		pushq	%rbx
 1762              		.cfi_def_cfa_offset 24
 1763              		.cfi_offset 3, -24
 1764 0006 4889FB   		movq	%rdi, %rbx
1661:fltk-1.3.4-1/png/pngread.c ****    if (encoding == P_FILE) /* double check */
 1765              		.loc 1 1661 4 is_stmt 1 view .LVU470
1660:fltk-1.3.4-1/png/pngread.c ****    if (encoding == P_FILE) /* double check */
 1766              		.loc 1 1660 1 is_stmt 0 view .LVU471
 1767 0009 4883EC08 		subq	$8, %rsp
 1768              		.cfi_def_cfa_offset 32
 1769              		.loc 1 1661 7 view .LVU472
 1770 000d 83FA03   		cmpl	$3, %edx
 1771 0010 741E     		je	.L211
 1772              	.LVL198:
 1773              	.L199:
1662:fltk-1.3.4-1/png/pngread.c ****       encoding = display->file_encoding;
1663:fltk-1.3.4-1/png/pngread.c **** 
1664:fltk-1.3.4-1/png/pngread.c ****    if (encoding == P_NOTSET) /* must be the file encoding */
1665:fltk-1.3.4-1/png/pngread.c ****    {
1666:fltk-1.3.4-1/png/pngread.c ****       set_file_encoding(display);
1667:fltk-1.3.4-1/png/pngread.c ****       encoding = display->file_encoding;
1668:fltk-1.3.4-1/png/pngread.c ****    }
1669:fltk-1.3.4-1/png/pngread.c **** 
1670:fltk-1.3.4-1/png/pngread.c ****    switch (encoding)
 1774              		.loc 1 1670 4 view .LVU473
 1775 0012 83FA01   		cmpl	$1, %edx
 1776 0015 7471     		je	.L203
 1777              		.loc 1 1670 4 view .LVU474
 1778 0017 83FA02   		cmpl	$2, %edx
 1779 001a 0F857F00 		jne	.L205
 1779      0000
1671:fltk-1.3.4-1/png/pngread.c ****    {
1672:fltk-1.3.4-1/png/pngread.c ****       case P_FILE:
1673:fltk-1.3.4-1/png/pngread.c ****          value = png_gamma_16bit_correct(value*257, display->gamma_to_linear);
1674:fltk-1.3.4-1/png/pngread.c ****          break;
1675:fltk-1.3.4-1/png/pngread.c **** 
1676:fltk-1.3.4-1/png/pngread.c ****       case P_sRGB:
1677:fltk-1.3.4-1/png/pngread.c ****          value = png_sRGB_table[value];
1678:fltk-1.3.4-1/png/pngread.c ****          break;
1679:fltk-1.3.4-1/png/pngread.c **** 
1680:fltk-1.3.4-1/png/pngread.c ****       case P_LINEAR:
1681:fltk-1.3.4-1/png/pngread.c ****          break;
1682:fltk-1.3.4-1/png/pngread.c **** 
1683:fltk-1.3.4-1/png/pngread.c ****       case P_LINEAR8:
1684:fltk-1.3.4-1/png/pngread.c ****          value *= 257;
1685:fltk-1.3.4-1/png/pngread.c ****          break;
1686:fltk-1.3.4-1/png/pngread.c **** 
1687:fltk-1.3.4-1/png/pngread.c ****       default:
1688:fltk-1.3.4-1/png/pngread.c ****          png_error(display->image->opaque->png_ptr,
1689:fltk-1.3.4-1/png/pngread.c ****             "unexpected encoding (internal error)");
1690:fltk-1.3.4-1/png/pngread.c ****          break;
 1780              		.loc 1 1690 10 is_stmt 1 view .LVU475
1691:fltk-1.3.4-1/png/pngread.c ****    }
1692:fltk-1.3.4-1/png/pngread.c **** 
1693:fltk-1.3.4-1/png/pngread.c ****    return value;
 1781              		.loc 1 1693 4 view .LVU476
1694:fltk-1.3.4-1/png/pngread.c **** }
 1782              		.loc 1 1694 1 is_stmt 0 view .LVU477
 1783 0020 4883C408 		addq	$8, %rsp
 1784              		.cfi_remember_state
 1785              		.cfi_def_cfa_offset 24
 1786 0024 4489E0   		movl	%r12d, %eax
 1787 0027 5B       		popq	%rbx
 1788              		.cfi_def_cfa_offset 16
 1789              	.LVL199:
 1790              		.loc 1 1694 1 view .LVU478
 1791 0028 415C     		popq	%r12
 1792              		.cfi_def_cfa_offset 8
 1793              	.LVL200:
 1794              		.loc 1 1694 1 view .LVU479
 1795 002a C3       		ret
 1796              	.LVL201:
 1797 002b 0F1F4400 		.p2align 4,,10
 1797      00
 1798              		.p2align 3
 1799              	.L211:
 1800              		.cfi_restore_state
1662:fltk-1.3.4-1/png/pngread.c **** 
 1801              		.loc 1 1662 7 is_stmt 1 view .LVU480
1662:fltk-1.3.4-1/png/pngread.c **** 
 1802              		.loc 1 1662 16 is_stmt 0 view .LVU481
 1803 0030 8B5740   		movl	64(%rdi), %edx
 1804              	.LVL202:
1664:fltk-1.3.4-1/png/pngread.c ****    {
 1805              		.loc 1 1664 4 is_stmt 1 view .LVU482
1664:fltk-1.3.4-1/png/pngread.c ****    {
 1806              		.loc 1 1664 7 is_stmt 0 view .LVU483
 1807 0033 85D2     		testl	%edx, %edx
 1808 0035 7508     		jne	.L200
1666:fltk-1.3.4-1/png/pngread.c ****       encoding = display->file_encoding;
 1809              		.loc 1 1666 7 is_stmt 1 view .LVU484
 1810 0037 E8000000 		call	set_file_encoding
 1810      00
 1811              	.LVL203:
1667:fltk-1.3.4-1/png/pngread.c ****    }
 1812              		.loc 1 1667 7 view .LVU485
1667:fltk-1.3.4-1/png/pngread.c ****    }
 1813              		.loc 1 1667 16 is_stmt 0 view .LVU486
 1814 003c 8B5340   		movl	64(%rbx), %edx
 1815              	.LVL204:
 1816              	.L200:
1670:fltk-1.3.4-1/png/pngread.c ****    {
 1817              		.loc 1 1670 4 is_stmt 1 view .LVU487
 1818 003f 83FA03   		cmpl	$3, %edx
 1819 0042 7524     		jne	.L212
1673:fltk-1.3.4-1/png/pngread.c ****          break;
 1820              		.loc 1 1673 10 view .LVU488
1673:fltk-1.3.4-1/png/pngread.c ****          break;
 1821              		.loc 1 1673 18 is_stmt 0 view .LVU489
 1822 0044 4489E7   		movl	%r12d, %edi
 1823 0047 8B7344   		movl	68(%rbx), %esi
 1824 004a C1E708   		sall	$8, %edi
 1825 004d 4401E7   		addl	%r12d, %edi
 1826 0050 E8000000 		call	png_gamma_16bit_correct@PLT
 1826      00
 1827              	.LVL205:
 1828              		.loc 1 1694 1 view .LVU490
 1829 0055 4883C408 		addq	$8, %rsp
 1830              		.cfi_remember_state
 1831              		.cfi_def_cfa_offset 24
1673:fltk-1.3.4-1/png/pngread.c ****          break;
 1832              		.loc 1 1673 16 view .LVU491
 1833 0059 440FB7E0 		movzwl	%ax, %r12d
 1834              	.LVL206:
1674:fltk-1.3.4-1/png/pngread.c **** 
 1835              		.loc 1 1674 10 is_stmt 1 view .LVU492
1690:fltk-1.3.4-1/png/pngread.c ****    }
 1836              		.loc 1 1690 10 view .LVU493
1693:fltk-1.3.4-1/png/pngread.c **** }
 1837              		.loc 1 1693 4 view .LVU494
 1838              		.loc 1 1694 1 is_stmt 0 view .LVU495
 1839 005d 5B       		popq	%rbx
 1840              		.cfi_def_cfa_offset 16
 1841              	.LVL207:
 1842              		.loc 1 1694 1 view .LVU496
 1843 005e 4489E0   		movl	%r12d, %eax
 1844 0061 415C     		popq	%r12
 1845              		.cfi_def_cfa_offset 8
 1846              	.LVL208:
 1847              		.loc 1 1694 1 view .LVU497
 1848 0063 C3       		ret
 1849              	.LVL209:
 1850              		.p2align 4,,10
 1851 0064 0F1F4000 		.p2align 3
 1852              	.L212:
 1853              		.cfi_restore_state
1670:fltk-1.3.4-1/png/pngread.c ****    {
 1854              		.loc 1 1670 4 view .LVU498
 1855 0068 7EA8     		jle	.L199
 1856 006a 83FA04   		cmpl	$4, %edx
 1857 006d 7530     		jne	.L205
1684:fltk-1.3.4-1/png/pngread.c ****          break;
 1858              		.loc 1 1684 10 is_stmt 1 view .LVU499
1684:fltk-1.3.4-1/png/pngread.c ****          break;
 1859              		.loc 1 1684 16 is_stmt 0 view .LVU500
 1860 006f 4489E0   		movl	%r12d, %eax
 1861              		.loc 1 1694 1 view .LVU501
 1862 0072 4883C408 		addq	$8, %rsp
 1863              		.cfi_remember_state
 1864              		.cfi_def_cfa_offset 24
1684:fltk-1.3.4-1/png/pngread.c ****          break;
 1865              		.loc 1 1684 16 view .LVU502
 1866 0076 C1E008   		sall	$8, %eax
 1867              		.loc 1 1694 1 view .LVU503
 1868 0079 5B       		popq	%rbx
 1869              		.cfi_def_cfa_offset 16
 1870              	.LVL210:
1684:fltk-1.3.4-1/png/pngread.c ****          break;
 1871              		.loc 1 1684 16 view .LVU504
 1872 007a 4101C4   		addl	%eax, %r12d
 1873              	.LVL211:
1685:fltk-1.3.4-1/png/pngread.c **** 
 1874              		.loc 1 1685 10 is_stmt 1 view .LVU505
1690:fltk-1.3.4-1/png/pngread.c ****    }
 1875              		.loc 1 1690 10 view .LVU506
1693:fltk-1.3.4-1/png/pngread.c **** }
 1876              		.loc 1 1693 4 view .LVU507
 1877              		.loc 1 1694 1 is_stmt 0 view .LVU508
 1878 007d 4489E0   		movl	%r12d, %eax
 1879 0080 415C     		popq	%r12
 1880              		.cfi_def_cfa_offset 8
 1881              	.LVL212:
 1882              		.loc 1 1694 1 view .LVU509
 1883 0082 C3       		ret
 1884              	.LVL213:
 1885              		.p2align 4,,10
 1886 0083 0F1F4400 		.p2align 3
 1886      00
 1887              	.L203:
 1888              		.cfi_restore_state
1677:fltk-1.3.4-1/png/pngread.c ****          break;
 1889              		.loc 1 1677 10 is_stmt 1 view .LVU510
1677:fltk-1.3.4-1/png/pngread.c ****          break;
 1890              		.loc 1 1677 16 is_stmt 0 view .LVU511
 1891 0088 488D0500 		leaq	png_sRGB_table(%rip), %rax
 1891      000000
 1892 008f 460FB724 		movzwl	(%rax,%r12,2), %r12d
 1892      60
 1893              	.LVL214:
1678:fltk-1.3.4-1/png/pngread.c **** 
 1894              		.loc 1 1678 10 is_stmt 1 view .LVU512
1690:fltk-1.3.4-1/png/pngread.c ****    }
 1895              		.loc 1 1690 10 view .LVU513
1693:fltk-1.3.4-1/png/pngread.c **** }
 1896              		.loc 1 1693 4 view .LVU514
 1897              		.loc 1 1694 1 is_stmt 0 view .LVU515
 1898 0094 4883C408 		addq	$8, %rsp
 1899              		.cfi_remember_state
 1900              		.cfi_def_cfa_offset 24
 1901 0098 5B       		popq	%rbx
 1902              		.cfi_def_cfa_offset 16
 1903              	.LVL215:
 1904              		.loc 1 1694 1 view .LVU516
 1905 0099 4489E0   		movl	%r12d, %eax
 1906 009c 415C     		popq	%r12
 1907              		.cfi_def_cfa_offset 8
 1908              	.LVL216:
 1909              		.loc 1 1694 1 view .LVU517
 1910 009e C3       		ret
 1911              	.LVL217:
 1912              	.L205:
 1913              		.cfi_restore_state
 1914              	.LBB116:
 1915              	.LBI116:
1659:fltk-1.3.4-1/png/pngread.c **** {
 1916              		.loc 1 1659 1 is_stmt 1 view .LVU518
 1917              	.LBB117:
1688:fltk-1.3.4-1/png/pngread.c ****             "unexpected encoding (internal error)");
 1918              		.loc 1 1688 10 view .LVU519
1688:fltk-1.3.4-1/png/pngread.c ****             "unexpected encoding (internal error)");
 1919              		.loc 1 1688 34 is_stmt 0 view .LVU520
 1920 009f 488B03   		movq	(%rbx), %rax
1688:fltk-1.3.4-1/png/pngread.c ****             "unexpected encoding (internal error)");
 1921              		.loc 1 1688 10 view .LVU521
 1922 00a2 488D3500 		leaq	.LC6(%rip), %rsi
 1922      000000
1688:fltk-1.3.4-1/png/pngread.c ****             "unexpected encoding (internal error)");
 1923              		.loc 1 1688 42 view .LVU522
 1924 00a9 488B00   		movq	(%rax), %rax
1688:fltk-1.3.4-1/png/pngread.c ****             "unexpected encoding (internal error)");
 1925              		.loc 1 1688 10 view .LVU523
 1926 00ac 488B38   		movq	(%rax), %rdi
 1927 00af E8000000 		call	png_error@PLT
 1927      00
 1928              	.LVL218:
1688:fltk-1.3.4-1/png/pngread.c ****             "unexpected encoding (internal error)");
 1929              		.loc 1 1688 10 view .LVU524
 1930              	.LBE117:
 1931              	.LBE116:
 1932              		.cfi_endproc
 1933              	.LFE65:
 1935              		.section	.text.png_colormap_compose,"ax",@progbits
 1936              		.p2align 4
 1938              	png_colormap_compose:
 1939              	.LVL219:
 1940              	.LFB66:
1695:fltk-1.3.4-1/png/pngread.c **** 
1696:fltk-1.3.4-1/png/pngread.c **** static png_uint_32
1697:fltk-1.3.4-1/png/pngread.c **** png_colormap_compose(png_image_read_control *display,
1698:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 foreground, int foreground_encoding, png_uint_32 alpha,
1699:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 background, int encoding)
1700:fltk-1.3.4-1/png/pngread.c **** {
 1941              		.loc 1 1700 1 is_stmt 1 view -0
 1942              		.cfi_startproc
1701:fltk-1.3.4-1/png/pngread.c ****    /* The file value is composed on the background, the background has the given
1702:fltk-1.3.4-1/png/pngread.c ****     * encoding and so does the result, the file is encoded with P_FILE and the
1703:fltk-1.3.4-1/png/pngread.c ****     * file and alpha are 8-bit values.  The (output) encoding will always be
1704:fltk-1.3.4-1/png/pngread.c ****     * P_LINEAR or P_sRGB.
1705:fltk-1.3.4-1/png/pngread.c ****     */
1706:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 f = decode_gamma(display, foreground, foreground_encoding);
 1943              		.loc 1 1706 4 view .LVU526
1700:fltk-1.3.4-1/png/pngread.c ****    /* The file value is composed on the background, the background has the given
 1944              		.loc 1 1700 1 is_stmt 0 view .LVU527
 1945 0000 4156     		pushq	%r14
 1946              		.cfi_def_cfa_offset 16
 1947              		.cfi_offset 14, -16
 1948 0002 4589C6   		movl	%r8d, %r14d
 1949 0005 4155     		pushq	%r13
 1950              		.cfi_def_cfa_offset 24
 1951              		.cfi_offset 13, -24
 1952 0007 4989FD   		movq	%rdi, %r13
 1953 000a 4154     		pushq	%r12
 1954              		.cfi_def_cfa_offset 32
 1955              		.cfi_offset 12, -32
 1956 000c 4189CC   		movl	%ecx, %r12d
 1957 000f 55       		pushq	%rbp
 1958              		.cfi_def_cfa_offset 40
 1959              		.cfi_offset 6, -40
 1960 0010 4489CD   		movl	%r9d, %ebp
 1961 0013 53       		pushq	%rbx
 1962              		.cfi_def_cfa_offset 48
 1963              		.cfi_offset 3, -48
 1964              		.loc 1 1706 20 view .LVU528
 1965 0014 E8000000 		call	decode_gamma
 1965      00
 1966              	.LVL220:
1707:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 b = decode_gamma(display, background, encoding);
 1967              		.loc 1 1707 20 view .LVU529
 1968 0019 89EA     		movl	%ebp, %edx
 1969 001b 4489F6   		movl	%r14d, %esi
 1970 001e 4C89EF   		movq	%r13, %rdi
1706:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 b = decode_gamma(display, background, encoding);
 1971              		.loc 1 1706 20 view .LVU530
 1972 0021 89C3     		movl	%eax, %ebx
 1973              	.LVL221:
 1974              		.loc 1 1707 4 is_stmt 1 view .LVU531
 1975              		.loc 1 1707 20 is_stmt 0 view .LVU532
 1976 0023 E8000000 		call	decode_gamma
 1976      00
 1977              	.LVL222:
1708:fltk-1.3.4-1/png/pngread.c **** 
1709:fltk-1.3.4-1/png/pngread.c ****    /* The alpha is always an 8-bit value (it comes from the palette), the value
1710:fltk-1.3.4-1/png/pngread.c ****     * scaled by 255 is what PNG_sRGB_FROM_LINEAR requires.
1711:fltk-1.3.4-1/png/pngread.c ****     */
1712:fltk-1.3.4-1/png/pngread.c ****    f = f * alpha + b * (255-alpha);
 1978              		.loc 1 1712 10 view .LVU533
 1979 0028 410FAFDC 		imull	%r12d, %ebx
 1980              	.LVL223:
1707:fltk-1.3.4-1/png/pngread.c **** 
 1981              		.loc 1 1707 20 view .LVU534
 1982 002c 4189C0   		movl	%eax, %r8d
 1983              	.LVL224:
 1984              		.loc 1 1712 4 is_stmt 1 view .LVU535
 1985              		.loc 1 1712 28 is_stmt 0 view .LVU536
 1986 002f B8FF0000 		movl	$255, %eax
 1986      00
 1987              	.LVL225:
 1988              		.loc 1 1712 28 view .LVU537
 1989 0034 4429E0   		subl	%r12d, %eax
 1990              		.loc 1 1712 22 view .LVU538
 1991 0037 410FAFC0 		imull	%r8d, %eax
 1992              		.loc 1 1712 6 view .LVU539
 1993 003b 01D8     		addl	%ebx, %eax
 1994              	.LVL226:
1713:fltk-1.3.4-1/png/pngread.c **** 
1714:fltk-1.3.4-1/png/pngread.c ****    if (encoding == P_LINEAR)
 1995              		.loc 1 1714 4 is_stmt 1 view .LVU540
1715:fltk-1.3.4-1/png/pngread.c ****    {
1716:fltk-1.3.4-1/png/pngread.c ****       /* Scale to 65535; divide by 255, approximately (in fact this is extremely
1717:fltk-1.3.4-1/png/pngread.c ****        * accurate, it divides by 255.00000005937181414556, with no overflow.)
1718:fltk-1.3.4-1/png/pngread.c ****        */
1719:fltk-1.3.4-1/png/pngread.c ****       f *= 257; /* Now scaled by 65535 */
 1996              		.loc 1 1719 9 is_stmt 0 view .LVU541
 1997 003d 89C2     		movl	%eax, %edx
1714:fltk-1.3.4-1/png/pngread.c ****    {
 1998              		.loc 1 1714 7 view .LVU542
 1999 003f 83FD02   		cmpl	$2, %ebp
 2000 0042 743C     		je	.L217
1720:fltk-1.3.4-1/png/pngread.c ****       f += f >> 16;
1721:fltk-1.3.4-1/png/pngread.c ****       f = (f+32768) >> 16;
1722:fltk-1.3.4-1/png/pngread.c ****    }
1723:fltk-1.3.4-1/png/pngread.c **** 
1724:fltk-1.3.4-1/png/pngread.c ****    else /* P_sRGB */
1725:fltk-1.3.4-1/png/pngread.c ****       f = PNG_sRGB_FROM_LINEAR(f);
 2001              		.loc 1 1725 7 is_stmt 1 view .LVU543
 2002              		.loc 1 1725 11 is_stmt 0 view .LVU544
 2003 0044 C1EA0F   		shrl	$15, %edx
 2004 0047 488D0D00 		leaq	png_sRGB_delta(%rip), %rcx
 2004      000000
 2005 004e 25FF7F00 		andl	$32767, %eax
 2005      00
 2006              	.LVL227:
1726:fltk-1.3.4-1/png/pngread.c **** 
1727:fltk-1.3.4-1/png/pngread.c ****    return f;
1728:fltk-1.3.4-1/png/pngread.c **** }
 2007              		.loc 1 1728 1 view .LVU545
 2008 0053 5B       		popq	%rbx
 2009              		.cfi_remember_state
 2010              		.cfi_def_cfa_offset 40
 2011              	.LVL228:
1725:fltk-1.3.4-1/png/pngread.c **** 
 2012              		.loc 1 1725 11 view .LVU546
 2013 0054 0FB60C11 		movzbl	(%rcx,%rdx), %ecx
 2014              		.loc 1 1728 1 view .LVU547
 2015 0058 5D       		popq	%rbp
 2016              		.cfi_def_cfa_offset 32
 2017              	.LVL229:
 2018              		.loc 1 1728 1 view .LVU548
 2019 0059 415C     		popq	%r12
 2020              		.cfi_def_cfa_offset 24
 2021              	.LVL230:
 2022              		.loc 1 1728 1 view .LVU549
 2023 005b 415D     		popq	%r13
 2024              		.cfi_def_cfa_offset 16
 2025              	.LVL231:
1725:fltk-1.3.4-1/png/pngread.c **** 
 2026              		.loc 1 1725 11 view .LVU550
 2027 005d 0FAFC1   		imull	%ecx, %eax
 2028 0060 488D0D00 		leaq	png_sRGB_base(%rip), %rcx
 2028      000000
 2029              		.loc 1 1728 1 view .LVU551
 2030 0067 415E     		popq	%r14
 2031              		.cfi_def_cfa_offset 8
 2032              	.LVL232:
1725:fltk-1.3.4-1/png/pngread.c **** 
 2033              		.loc 1 1725 11 view .LVU552
 2034 0069 0FB71451 		movzwl	(%rcx,%rdx,2), %edx
 2035 006d C1E80C   		shrl	$12, %eax
 2036 0070 01D0     		addl	%edx, %eax
 2037 0072 0FB6C4   		movzbl	%ah, %eax
 2038              	.LVL233:
1727:fltk-1.3.4-1/png/pngread.c **** }
 2039              		.loc 1 1727 4 is_stmt 1 view .LVU553
 2040              		.loc 1 1728 1 is_stmt 0 view .LVU554
 2041 0075 C3       		ret
 2042              	.LVL234:
 2043 0076 662E0F1F 		.p2align 4,,10
 2043      84000000 
 2043      0000
 2044              		.p2align 3
 2045              	.L217:
 2046              		.cfi_restore_state
1719:fltk-1.3.4-1/png/pngread.c ****       f += f >> 16;
 2047              		.loc 1 1719 7 is_stmt 1 view .LVU555
1719:fltk-1.3.4-1/png/pngread.c ****       f += f >> 16;
 2048              		.loc 1 1719 9 is_stmt 0 view .LVU556
 2049 0080 C1E208   		sall	$8, %edx
 2050              		.loc 1 1728 1 view .LVU557
 2051 0083 5B       		popq	%rbx
 2052              		.cfi_def_cfa_offset 40
 2053 0084 5D       		popq	%rbp
 2054              		.cfi_def_cfa_offset 32
 2055              	.LVL235:
1719:fltk-1.3.4-1/png/pngread.c ****       f += f >> 16;
 2056              		.loc 1 1719 9 view .LVU558
 2057 0085 01D0     		addl	%edx, %eax
 2058              	.LVL236:
1720:fltk-1.3.4-1/png/pngread.c ****       f = (f+32768) >> 16;
 2059              		.loc 1 1720 7 is_stmt 1 view .LVU559
1721:fltk-1.3.4-1/png/pngread.c ****    }
 2060              		.loc 1 1721 7 view .LVU560
 2061              		.loc 1 1728 1 is_stmt 0 view .LVU561
 2062 0087 415C     		popq	%r12
 2063              		.cfi_def_cfa_offset 24
 2064              	.LVL237:
 2065              		.loc 1 1728 1 view .LVU562
 2066 0089 415D     		popq	%r13
 2067              		.cfi_def_cfa_offset 16
 2068              	.LVL238:
1720:fltk-1.3.4-1/png/pngread.c ****       f = (f+32768) >> 16;
 2069              		.loc 1 1720 14 view .LVU563
 2070 008b 89C2     		movl	%eax, %edx
 2071              		.loc 1 1728 1 view .LVU564
 2072 008d 415E     		popq	%r14
 2073              		.cfi_def_cfa_offset 8
 2074              	.LVL239:
1720:fltk-1.3.4-1/png/pngread.c ****       f = (f+32768) >> 16;
 2075              		.loc 1 1720 14 view .LVU565
 2076 008f C1EA10   		shrl	$16, %edx
1721:fltk-1.3.4-1/png/pngread.c ****    }
 2077              		.loc 1 1721 13 view .LVU566
 2078 0092 8D841000 		leal	32768(%rax,%rdx), %eax
 2078      800000
 2079              	.LVL240:
1721:fltk-1.3.4-1/png/pngread.c ****    }
 2080              		.loc 1 1721 9 view .LVU567
 2081 0099 C1E810   		shrl	$16, %eax
 2082              	.LVL241:
 2083              		.loc 1 1728 1 view .LVU568
 2084 009c C3       		ret
 2085              		.cfi_endproc
 2086              	.LFE66:
 2088              		.section	.rodata.png_create_colormap_entry.str1.1,"aMS",@progbits,1
 2089              	.LC7:
 2090 0000 636F6C6F 		.string	"color-map index out of range"
 2090      722D6D61 
 2090      7020696E 
 2090      64657820 
 2090      6F757420 
 2091              	.LC8:
 2092 001d 62616420 		.string	"bad encoding (internal error)"
 2092      656E636F 
 2092      64696E67 
 2092      2028696E 
 2092      7465726E 
 2093              		.section	.text.png_create_colormap_entry,"ax",@progbits
 2094              		.p2align 4
 2096              	png_create_colormap_entry:
 2097              	.LVL242:
 2098              	.LFB67:
1729:fltk-1.3.4-1/png/pngread.c **** 
1730:fltk-1.3.4-1/png/pngread.c **** /* NOTE: P_LINEAR values to this routine must be 16-bit, but P_FILE values must
1731:fltk-1.3.4-1/png/pngread.c ****  * be 8-bit.
1732:fltk-1.3.4-1/png/pngread.c ****  */
1733:fltk-1.3.4-1/png/pngread.c **** static void
1734:fltk-1.3.4-1/png/pngread.c **** png_create_colormap_entry(png_image_read_control *display,
1735:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 ip, png_uint_32 red, png_uint_32 green, png_uint_32 blue,
1736:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 alpha, int encoding)
1737:fltk-1.3.4-1/png/pngread.c **** {
 2099              		.loc 1 1737 1 is_stmt 1 view -0
 2100              		.cfi_startproc
 2101              		.loc 1 1737 1 is_stmt 0 view .LVU570
 2102 0000 4157     		pushq	%r15
 2103              		.cfi_def_cfa_offset 16
 2104              		.cfi_offset 15, -16
 2105 0002 4589CF   		movl	%r9d, %r15d
 2106 0005 4156     		pushq	%r14
 2107              		.cfi_def_cfa_offset 24
 2108              		.cfi_offset 14, -24
 2109 0007 4989FE   		movq	%rdi, %r14
 2110 000a 4155     		pushq	%r13
 2111              		.cfi_def_cfa_offset 32
 2112              		.cfi_offset 13, -32
 2113 000c 4589C5   		movl	%r8d, %r13d
 2114 000f 4154     		pushq	%r12
 2115              		.cfi_def_cfa_offset 40
 2116              		.cfi_offset 12, -40
 2117 0011 4189CC   		movl	%ecx, %r12d
1738:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
1739:fltk-1.3.4-1/png/pngread.c ****    const int output_encoding = (image->format & PNG_FORMAT_FLAG_LINEAR) != 0 ?
1740:fltk-1.3.4-1/png/pngread.c ****       P_LINEAR : P_sRGB;
 2118              		.loc 1 1740 16 view .LVU571
 2119 0014 31C9     		xorl	%ecx, %ecx
 2120              	.LVL243:
1737:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
 2121              		.loc 1 1737 1 view .LVU572
 2122 0016 55       		pushq	%rbp
 2123              		.cfi_def_cfa_offset 48
 2124              		.cfi_offset 6, -48
 2125 0017 89F5     		movl	%esi, %ebp
 2126 0019 53       		pushq	%rbx
 2127              		.cfi_def_cfa_offset 56
 2128              		.cfi_offset 3, -56
 2129 001a 89D3     		movl	%edx, %ebx
 2130 001c 4883EC28 		subq	$40, %rsp
 2131              		.cfi_def_cfa_offset 96
1738:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
 2132              		.loc 1 1738 4 is_stmt 1 view .LVU573
1738:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
 2133              		.loc 1 1738 15 is_stmt 0 view .LVU574
 2134 0020 4C8B0F   		movq	(%rdi), %r9
 2135              	.LVL244:
1739:fltk-1.3.4-1/png/pngread.c ****       P_LINEAR : P_sRGB;
 2136              		.loc 1 1739 4 is_stmt 1 view .LVU575
1737:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
 2137              		.loc 1 1737 1 is_stmt 0 view .LVU576
 2138 0023 8B442460 		movl	96(%rsp), %eax
1739:fltk-1.3.4-1/png/pngread.c ****       P_LINEAR : P_sRGB;
 2139              		.loc 1 1739 38 view .LVU577
 2140 0027 418B7114 		movl	20(%r9), %esi
 2141              	.LVL245:
 2142              		.loc 1 1740 16 view .LVU578
 2143 002b 40F6C604 		testb	$4, %sil
 2144 002f 0F95C1   		setne	%cl
 2145 0032 83C101   		addl	$1, %ecx
 2146              	.LVL246:
1741:fltk-1.3.4-1/png/pngread.c ****    const int convert_to_Y = (image->format & PNG_FORMAT_FLAG_COLOR) == 0 &&
 2147              		.loc 1 1741 4 is_stmt 1 view .LVU579
 2148              		.loc 1 1741 74 is_stmt 0 view .LVU580
 2149 0035 83E602   		andl	$2, %esi
 2150 0038 754E     		jne	.L270
1742:fltk-1.3.4-1/png/pngread.c ****       (red != green || green != blue);
 2151              		.loc 1 1742 12 discriminator 1 view .LVU581
 2152 003a 4439E3   		cmpl	%r12d, %ebx
 2153 003d 0F95C2   		setne	%dl
 2154              	.LVL247:
 2155              		.loc 1 1742 30 discriminator 1 view .LVU582
 2156 0040 4539EC   		cmpl	%r13d, %r12d
 2157 0043 400F95C6 		setne	%sil
 2158              		.loc 1 1742 21 discriminator 1 view .LVU583
 2159 0047 09F2     		orl	%esi, %edx
1741:fltk-1.3.4-1/png/pngread.c ****    const int convert_to_Y = (image->format & PNG_FORMAT_FLAG_COLOR) == 0 &&
 2160              		.loc 1 1741 74 discriminator 1 view .LVU584
 2161 0049 0FB6D2   		movzbl	%dl, %edx
 2162              	.L220:
 2163              	.LVL248:
1743:fltk-1.3.4-1/png/pngread.c **** 
1744:fltk-1.3.4-1/png/pngread.c ****    if (ip > 255)
 2164              		.loc 1 1744 4 is_stmt 1 discriminator 6 view .LVU585
 2165              		.loc 1 1744 7 is_stmt 0 discriminator 6 view .LVU586
 2166 004c 81FDFF00 		cmpl	$255, %ebp
 2166      0000
 2167 0052 0F87C505 		ja	.L274
 2167      0000
1745:fltk-1.3.4-1/png/pngread.c ****       png_error(image->opaque->png_ptr, "color-map index out of range");
1746:fltk-1.3.4-1/png/pngread.c **** 
1747:fltk-1.3.4-1/png/pngread.c ****    /* Update the cache with whether the file gamma is significantly different
1748:fltk-1.3.4-1/png/pngread.c ****     * from sRGB.
1749:fltk-1.3.4-1/png/pngread.c ****     */
1750:fltk-1.3.4-1/png/pngread.c ****    if (encoding == P_FILE)
 2168              		.loc 1 1750 4 is_stmt 1 view .LVU587
 2169              		.loc 1 1750 7 is_stmt 0 view .LVU588
 2170 0058 83F803   		cmpl	$3, %eax
 2171 005b 0F840F01 		je	.L275
 2171      0000
 2172              	.LVL249:
 2173              	.L222:
1751:fltk-1.3.4-1/png/pngread.c ****    {
1752:fltk-1.3.4-1/png/pngread.c ****       if (display->file_encoding == P_NOTSET)
1753:fltk-1.3.4-1/png/pngread.c ****          set_file_encoding(display);
1754:fltk-1.3.4-1/png/pngread.c **** 
1755:fltk-1.3.4-1/png/pngread.c ****       /* Note that the cached value may be P_FILE too, but if it is then the
1756:fltk-1.3.4-1/png/pngread.c ****        * gamma_to_linear member has been set.
1757:fltk-1.3.4-1/png/pngread.c ****        */
1758:fltk-1.3.4-1/png/pngread.c ****       encoding = display->file_encoding;
1759:fltk-1.3.4-1/png/pngread.c ****    }
1760:fltk-1.3.4-1/png/pngread.c **** 
1761:fltk-1.3.4-1/png/pngread.c ****    if (encoding == P_FILE)
1762:fltk-1.3.4-1/png/pngread.c ****    {
1763:fltk-1.3.4-1/png/pngread.c ****       png_fixed_point g = display->gamma_to_linear;
1764:fltk-1.3.4-1/png/pngread.c **** 
1765:fltk-1.3.4-1/png/pngread.c ****       red = png_gamma_16bit_correct(red*257, g);
1766:fltk-1.3.4-1/png/pngread.c ****       green = png_gamma_16bit_correct(green*257, g);
1767:fltk-1.3.4-1/png/pngread.c ****       blue = png_gamma_16bit_correct(blue*257, g);
1768:fltk-1.3.4-1/png/pngread.c **** 
1769:fltk-1.3.4-1/png/pngread.c ****       if (convert_to_Y != 0 || output_encoding == P_LINEAR)
1770:fltk-1.3.4-1/png/pngread.c ****       {
1771:fltk-1.3.4-1/png/pngread.c ****          alpha *= 257;
1772:fltk-1.3.4-1/png/pngread.c ****          encoding = P_LINEAR;
1773:fltk-1.3.4-1/png/pngread.c ****       }
1774:fltk-1.3.4-1/png/pngread.c **** 
1775:fltk-1.3.4-1/png/pngread.c ****       else
1776:fltk-1.3.4-1/png/pngread.c ****       {
1777:fltk-1.3.4-1/png/pngread.c ****          red = PNG_sRGB_FROM_LINEAR(red * 255);
1778:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
1779:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
1780:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
1781:fltk-1.3.4-1/png/pngread.c ****       }
1782:fltk-1.3.4-1/png/pngread.c ****    }
1783:fltk-1.3.4-1/png/pngread.c **** 
1784:fltk-1.3.4-1/png/pngread.c ****    else if (encoding == P_LINEAR8)
1785:fltk-1.3.4-1/png/pngread.c ****    {
1786:fltk-1.3.4-1/png/pngread.c ****       /* This encoding occurs quite frequently in test cases because PngSuite
1787:fltk-1.3.4-1/png/pngread.c ****        * includes a gAMA 1.0 chunk with most images.
1788:fltk-1.3.4-1/png/pngread.c ****        */
1789:fltk-1.3.4-1/png/pngread.c ****       red *= 257;
1790:fltk-1.3.4-1/png/pngread.c ****       green *= 257;
1791:fltk-1.3.4-1/png/pngread.c ****       blue *= 257;
1792:fltk-1.3.4-1/png/pngread.c ****       alpha *= 257;
1793:fltk-1.3.4-1/png/pngread.c ****       encoding = P_LINEAR;
1794:fltk-1.3.4-1/png/pngread.c ****    }
1795:fltk-1.3.4-1/png/pngread.c **** 
1796:fltk-1.3.4-1/png/pngread.c ****    else if (encoding == P_sRGB &&
 2174              		.loc 1 1796 9 is_stmt 1 view .LVU589
 2175              		.loc 1 1796 12 is_stmt 0 view .LVU590
 2176 0061 83F801   		cmpl	$1, %eax
 2177 0064 0F844602 		je	.L276
 2177      0000
 2178              	.LVL250:
1797:fltk-1.3.4-1/png/pngread.c ****        (convert_to_Y  != 0 || output_encoding == P_LINEAR))
1798:fltk-1.3.4-1/png/pngread.c ****    {
1799:fltk-1.3.4-1/png/pngread.c ****       /* The values are 8-bit sRGB values, but must be converted to 16-bit
1800:fltk-1.3.4-1/png/pngread.c ****        * linear.
1801:fltk-1.3.4-1/png/pngread.c ****        */
1802:fltk-1.3.4-1/png/pngread.c ****       red = png_sRGB_table[red];
1803:fltk-1.3.4-1/png/pngread.c ****       green = png_sRGB_table[green];
1804:fltk-1.3.4-1/png/pngread.c ****       blue = png_sRGB_table[blue];
1805:fltk-1.3.4-1/png/pngread.c ****       alpha *= 257;
1806:fltk-1.3.4-1/png/pngread.c ****       encoding = P_LINEAR;
1807:fltk-1.3.4-1/png/pngread.c ****    }
1808:fltk-1.3.4-1/png/pngread.c **** 
1809:fltk-1.3.4-1/png/pngread.c ****    /* This is set if the color isn't gray but the output is. */
1810:fltk-1.3.4-1/png/pngread.c ****    if (encoding == P_LINEAR)
 2179              		.loc 1 1810 4 is_stmt 1 view .LVU591
 2180              		.loc 1 1810 7 is_stmt 0 view .LVU592
 2181 006a 83F802   		cmpl	$2, %eax
 2182 006d 7448     		je	.L272
1811:fltk-1.3.4-1/png/pngread.c ****    {
1812:fltk-1.3.4-1/png/pngread.c ****       if (convert_to_Y != 0)
1813:fltk-1.3.4-1/png/pngread.c ****       {
1814:fltk-1.3.4-1/png/pngread.c ****          /* NOTE: these values are copied from png_do_rgb_to_gray */
1815:fltk-1.3.4-1/png/pngread.c ****          png_uint_32 y = (png_uint_32)6968 * red  + (png_uint_32)23434 * green +
1816:fltk-1.3.4-1/png/pngread.c ****             (png_uint_32)2366 * blue;
1817:fltk-1.3.4-1/png/pngread.c **** 
1818:fltk-1.3.4-1/png/pngread.c ****          if (output_encoding == P_LINEAR)
1819:fltk-1.3.4-1/png/pngread.c ****             y = (y + 16384) >> 15;
1820:fltk-1.3.4-1/png/pngread.c **** 
1821:fltk-1.3.4-1/png/pngread.c ****          else
1822:fltk-1.3.4-1/png/pngread.c ****          {
1823:fltk-1.3.4-1/png/pngread.c ****             /* y is scaled by 32768, we need it scaled by 255: */
1824:fltk-1.3.4-1/png/pngread.c ****             y = (y + 128) >> 8;
1825:fltk-1.3.4-1/png/pngread.c ****             y *= 255;
1826:fltk-1.3.4-1/png/pngread.c ****             y = PNG_sRGB_FROM_LINEAR((y + 64) >> 7);
1827:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
1828:fltk-1.3.4-1/png/pngread.c ****          }
1829:fltk-1.3.4-1/png/pngread.c **** 
1830:fltk-1.3.4-1/png/pngread.c ****          blue = red = green = y;
1831:fltk-1.3.4-1/png/pngread.c ****       }
1832:fltk-1.3.4-1/png/pngread.c **** 
1833:fltk-1.3.4-1/png/pngread.c ****       else if (output_encoding == P_sRGB)
1834:fltk-1.3.4-1/png/pngread.c ****       {
1835:fltk-1.3.4-1/png/pngread.c ****          red = PNG_sRGB_FROM_LINEAR(red * 255);
1836:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
1837:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
1838:fltk-1.3.4-1/png/pngread.c ****          alpha = PNG_DIV257(alpha);
1839:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
1840:fltk-1.3.4-1/png/pngread.c ****       }
1841:fltk-1.3.4-1/png/pngread.c ****    }
1842:fltk-1.3.4-1/png/pngread.c **** 
1843:fltk-1.3.4-1/png/pngread.c ****    if (encoding != output_encoding)
 2183              		.loc 1 1843 4 is_stmt 1 view .LVU593
1844:fltk-1.3.4-1/png/pngread.c ****       png_error(image->opaque->png_ptr, "bad encoding (internal error)");
 2184              		.loc 1 1844 7 view .LVU594
 2185              		.loc 1 1844 30 is_stmt 0 view .LVU595
 2186 006f 498B01   		movq	(%r9), %rax
 2187              	.LVL251:
 2188              		.loc 1 1844 7 view .LVU596
 2189 0072 488D3500 		leaq	.LC8(%rip), %rsi
 2189      000000
 2190 0079 488B38   		movq	(%rax), %rdi
 2191 007c E8000000 		call	png_error@PLT
 2191      00
 2192              	.LVL252:
 2193              		.p2align 4,,10
 2194 0081 0F1F8000 		.p2align 3
 2194      000000
 2195              	.L270:
 2196              		.loc 1 1844 7 view .LVU597
 2197 0088 31D2     		xorl	%edx, %edx
 2198              	.LVL253:
 2199              		.loc 1 1844 7 view .LVU598
 2200 008a EBC0     		jmp	.L220
 2201              	.LVL254:
 2202 008c 0F1F4000 		.p2align 4,,10
 2203              		.p2align 3
 2204              	.L224:
1784:fltk-1.3.4-1/png/pngread.c ****    {
 2205              		.loc 1 1784 9 is_stmt 1 view .LVU599
1784:fltk-1.3.4-1/png/pngread.c ****    {
 2206              		.loc 1 1784 12 is_stmt 0 view .LVU600
 2207 0090 83F804   		cmpl	$4, %eax
 2208 0093 75CC     		jne	.L222
1789:fltk-1.3.4-1/png/pngread.c ****       green *= 257;
 2209              		.loc 1 1789 7 is_stmt 1 view .LVU601
1789:fltk-1.3.4-1/png/pngread.c ****       green *= 257;
 2210              		.loc 1 1789 11 is_stmt 0 view .LVU602
 2211 0095 89D8     		movl	%ebx, %eax
 2212 0097 C1E008   		sall	$8, %eax
 2213 009a 01C3     		addl	%eax, %ebx
 2214              	.LVL255:
1790:fltk-1.3.4-1/png/pngread.c ****       blue *= 257;
 2215              		.loc 1 1790 7 is_stmt 1 view .LVU603
1790:fltk-1.3.4-1/png/pngread.c ****       blue *= 257;
 2216              		.loc 1 1790 13 is_stmt 0 view .LVU604
 2217 009c 4489E0   		movl	%r12d, %eax
 2218 009f C1E008   		sall	$8, %eax
 2219 00a2 4101C4   		addl	%eax, %r12d
 2220              	.LVL256:
1791:fltk-1.3.4-1/png/pngread.c ****       alpha *= 257;
 2221              		.loc 1 1791 7 is_stmt 1 view .LVU605
1791:fltk-1.3.4-1/png/pngread.c ****       alpha *= 257;
 2222              		.loc 1 1791 12 is_stmt 0 view .LVU606
 2223 00a5 4489E8   		movl	%r13d, %eax
 2224 00a8 C1E008   		sall	$8, %eax
 2225 00ab 4101C5   		addl	%eax, %r13d
 2226              	.LVL257:
 2227              	.L273:
1792:fltk-1.3.4-1/png/pngread.c ****       encoding = P_LINEAR;
 2228              		.loc 1 1792 7 is_stmt 1 view .LVU607
1792:fltk-1.3.4-1/png/pngread.c ****       encoding = P_LINEAR;
 2229              		.loc 1 1792 13 is_stmt 0 view .LVU608
 2230 00ae 4489F8   		movl	%r15d, %eax
 2231 00b1 C1E008   		sall	$8, %eax
 2232 00b4 4101C7   		addl	%eax, %r15d
 2233              	.LVL258:
1793:fltk-1.3.4-1/png/pngread.c ****    }
 2234              		.loc 1 1793 7 is_stmt 1 view .LVU609
1810:fltk-1.3.4-1/png/pngread.c ****    {
 2235              		.loc 1 1810 4 view .LVU610
 2236              	.L272:
1810:fltk-1.3.4-1/png/pngread.c ****    {
 2237              		.loc 1 1810 4 is_stmt 0 view .LVU611
 2238 00b7 458B5114 		movl	20(%r9), %r10d
 2239 00bb 4489D0   		movl	%r10d, %eax
 2240 00be 4589D3   		movl	%r10d, %r11d
 2241 00c1 83E021   		andl	$33, %eax
 2242 00c4 83F821   		cmpl	$33, %eax
 2243 00c7 410F94C0 		sete	%r8b
 2244 00cb 410F94C1 		sete	%r9b
 2245 00cf 41C1EB03 		shrl	$3, %r11d
 2246 00d3 450FB6C0 		movzbl	%r8b, %r8d
 2247 00d7 4183E302 		andl	$2, %r11d
 2248              	.L227:
1812:fltk-1.3.4-1/png/pngread.c ****       {
 2249              		.loc 1 1812 7 is_stmt 1 view .LVU612
1812:fltk-1.3.4-1/png/pngread.c ****       {
 2250              		.loc 1 1812 10 is_stmt 0 view .LVU613
 2251 00db 85D2     		testl	%edx, %edx
 2252 00dd 0F854D02 		jne	.L277
 2252      0000
1833:fltk-1.3.4-1/png/pngread.c ****       {
 2253              		.loc 1 1833 12 is_stmt 1 view .LVU614
1833:fltk-1.3.4-1/png/pngread.c ****       {
 2254              		.loc 1 1833 15 is_stmt 0 view .LVU615
 2255 00e3 83F901   		cmpl	$1, %ecx
 2256 00e6 0F844C04 		je	.L278
 2256      0000
 2257              	.L234:
 2258              	.LVL259:
 2259              	.LBB118:
 2260              	.LBB119:
1845:fltk-1.3.4-1/png/pngread.c **** 
1846:fltk-1.3.4-1/png/pngread.c ****    /* Store the value. */
1847:fltk-1.3.4-1/png/pngread.c ****    {
1848:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_FORMAT_AFIRST_SUPPORTED
1849:fltk-1.3.4-1/png/pngread.c ****          const int afirst = (image->format & PNG_FORMAT_FLAG_AFIRST) != 0 &&
1850:fltk-1.3.4-1/png/pngread.c ****             (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
1851:fltk-1.3.4-1/png/pngread.c **** #     else
1852:fltk-1.3.4-1/png/pngread.c **** #        define afirst 0
1853:fltk-1.3.4-1/png/pngread.c **** #     endif
1854:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_FORMAT_BGR_SUPPORTED
1855:fltk-1.3.4-1/png/pngread.c ****          const int bgr = (image->format & PNG_FORMAT_FLAG_BGR) != 0 ? 2 : 0;
1856:fltk-1.3.4-1/png/pngread.c **** #     else
1857:fltk-1.3.4-1/png/pngread.c **** #        define bgr 0
1858:fltk-1.3.4-1/png/pngread.c **** #     endif
1859:fltk-1.3.4-1/png/pngread.c **** 
1860:fltk-1.3.4-1/png/pngread.c ****       if (output_encoding == P_LINEAR)
1861:fltk-1.3.4-1/png/pngread.c ****       {
1862:fltk-1.3.4-1/png/pngread.c ****          png_uint_16p entry = png_voidcast(png_uint_16p, display->colormap);
 2261              		.loc 1 1862 10 is_stmt 1 view .LVU616
1863:fltk-1.3.4-1/png/pngread.c **** 
1864:fltk-1.3.4-1/png/pngread.c ****          entry += ip * PNG_IMAGE_SAMPLE_CHANNELS(image->format);
 2262              		.loc 1 1864 10 view .LVU617
 2263              		.loc 1 1864 24 is_stmt 0 view .LVU618
 2264 00ec 4183E203 		andl	$3, %r10d
 2265              		.loc 1 1864 16 view .LVU619
 2266 00f0 498B5618 		movq	24(%r14), %rdx
 2267              		.loc 1 1864 24 view .LVU620
 2268 00f4 4183C201 		addl	$1, %r10d
 2269              		.loc 1 1864 22 view .LVU621
 2270 00f8 410FAFEA 		imull	%r10d, %ebp
 2271              	.LVL260:
 2272              		.loc 1 1864 16 view .LVU622
 2273 00fc 488D2C6A 		leaq	(%rdx,%rbp,2), %rbp
 2274              	.LVL261:
1865:fltk-1.3.4-1/png/pngread.c **** 
1866:fltk-1.3.4-1/png/pngread.c ****          /* The linear 16-bit values must be pre-multiplied by the alpha channel
1867:fltk-1.3.4-1/png/pngread.c ****           * value, if less than 65535 (this is, effectively, composite on black
1868:fltk-1.3.4-1/png/pngread.c ****           * if the alpha channel is removed.)
1869:fltk-1.3.4-1/png/pngread.c ****           */
1870:fltk-1.3.4-1/png/pngread.c ****          switch (PNG_IMAGE_SAMPLE_CHANNELS(image->format))
 2275              		.loc 1 1870 10 is_stmt 1 view .LVU623
 2276 0100 4183FA03 		cmpl	$3, %r10d
 2277 0104 0F84F502 		je	.L235
 2277      0000
 2278 010a 4183FA04 		cmpl	$4, %r10d
 2279 010e 0F84DC02 		je	.L236
 2279      0000
 2280 0114 4183FA02 		cmpl	$2, %r10d
 2281 0118 0F840204 		je	.L279
 2281      0000
 2282              	.L238:
1871:fltk-1.3.4-1/png/pngread.c ****          {
1872:fltk-1.3.4-1/png/pngread.c ****             case 4:
1873:fltk-1.3.4-1/png/pngread.c ****                entry[afirst ? 0 : 3] = (png_uint_16)alpha;
1874:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
1875:fltk-1.3.4-1/png/pngread.c **** 
1876:fltk-1.3.4-1/png/pngread.c ****             case 3:
1877:fltk-1.3.4-1/png/pngread.c ****                if (alpha < 65535)
1878:fltk-1.3.4-1/png/pngread.c ****                {
1879:fltk-1.3.4-1/png/pngread.c ****                   if (alpha > 0)
1880:fltk-1.3.4-1/png/pngread.c ****                   {
1881:fltk-1.3.4-1/png/pngread.c ****                      blue = (blue * alpha + 32767U)/65535U;
1882:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
1883:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
1884:fltk-1.3.4-1/png/pngread.c ****                   }
1885:fltk-1.3.4-1/png/pngread.c **** 
1886:fltk-1.3.4-1/png/pngread.c ****                   else
1887:fltk-1.3.4-1/png/pngread.c ****                      red = green = blue = 0;
1888:fltk-1.3.4-1/png/pngread.c ****                }
1889:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + (2 ^ bgr)] = (png_uint_16)blue;
1890:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_uint_16)green;
1891:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_uint_16)red;
1892:fltk-1.3.4-1/png/pngread.c ****                break;
1893:fltk-1.3.4-1/png/pngread.c **** 
1894:fltk-1.3.4-1/png/pngread.c ****             case 2:
1895:fltk-1.3.4-1/png/pngread.c ****                entry[1 ^ afirst] = (png_uint_16)alpha;
1896:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
1897:fltk-1.3.4-1/png/pngread.c **** 
1898:fltk-1.3.4-1/png/pngread.c ****             case 1:
1899:fltk-1.3.4-1/png/pngread.c ****                if (alpha < 65535)
 2283              		.loc 1 1899 16 view .LVU624
 2284 011e 4489E0   		movl	%r12d, %eax
 2285              		.loc 1 1899 19 is_stmt 0 view .LVU625
 2286 0121 4181FFFE 		cmpl	$65534, %r15d
 2286      FF0000
 2287 0128 7728     		ja	.L244
1900:fltk-1.3.4-1/png/pngread.c ****                {
1901:fltk-1.3.4-1/png/pngread.c ****                   if (alpha > 0)
 2288              		.loc 1 1901 19 is_stmt 1 view .LVU626
 2289 012a 31C0     		xorl	%eax, %eax
 2290              		.loc 1 1901 22 is_stmt 0 view .LVU627
 2291 012c 4585FF   		testl	%r15d, %r15d
 2292 012f 7421     		je	.L244
1902:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2293              		.loc 1 1902 22 is_stmt 1 view .LVU628
 2294              		.loc 1 1902 37 is_stmt 0 view .LVU629
 2295 0131 450FAFE7 		imull	%r15d, %r12d
 2296              	.LVL262:
 2297              		.loc 1 1902 28 view .LVU630
 2298 0135 418D9424 		leal	32767(%r12), %edx
 2298      FF7F0000 
 2299 013d 4889D0   		movq	%rdx, %rax
 2300 0140 48C1E010 		salq	$16, %rax
 2301 0144 4801D0   		addq	%rdx, %rax
 2302 0147 48C1E00F 		salq	$15, %rax
 2303 014b 4801D0   		addq	%rdx, %rax
 2304 014e 48C1E82F 		shrq	$47, %rax
 2305              	.LVL263:
 2306              	.L244:
1903:fltk-1.3.4-1/png/pngread.c **** 
1904:fltk-1.3.4-1/png/pngread.c ****                   else
1905:fltk-1.3.4-1/png/pngread.c ****                      green = 0;
1906:fltk-1.3.4-1/png/pngread.c ****                }
1907:fltk-1.3.4-1/png/pngread.c ****                entry[afirst] = (png_uint_16)green;
 2307              		.loc 1 1907 16 is_stmt 1 view .LVU631
 2308              		.loc 1 1907 21 is_stmt 0 view .LVU632
 2309 0152 450FB6C9 		movzbl	%r9b, %r9d
 2310              		.loc 1 1907 30 view .LVU633
 2311 0156 66428944 		movw	%ax, 0(%rbp,%r9,2)
 2311      4D00
1908:fltk-1.3.4-1/png/pngread.c ****                break;
 2312              		.loc 1 1908 16 is_stmt 1 view .LVU634
 2313              	.LBE119:
 2314              	.LBE118:
1909:fltk-1.3.4-1/png/pngread.c **** 
1910:fltk-1.3.4-1/png/pngread.c ****             default:
1911:fltk-1.3.4-1/png/pngread.c ****                break;
1912:fltk-1.3.4-1/png/pngread.c ****          }
1913:fltk-1.3.4-1/png/pngread.c ****       }
1914:fltk-1.3.4-1/png/pngread.c **** 
1915:fltk-1.3.4-1/png/pngread.c ****       else /* output encoding is P_sRGB */
1916:fltk-1.3.4-1/png/pngread.c ****       {
1917:fltk-1.3.4-1/png/pngread.c ****          png_bytep entry = png_voidcast(png_bytep, display->colormap);
1918:fltk-1.3.4-1/png/pngread.c **** 
1919:fltk-1.3.4-1/png/pngread.c ****          entry += ip * PNG_IMAGE_SAMPLE_CHANNELS(image->format);
1920:fltk-1.3.4-1/png/pngread.c **** 
1921:fltk-1.3.4-1/png/pngread.c ****          switch (PNG_IMAGE_SAMPLE_CHANNELS(image->format))
1922:fltk-1.3.4-1/png/pngread.c ****          {
1923:fltk-1.3.4-1/png/pngread.c ****             case 4:
1924:fltk-1.3.4-1/png/pngread.c ****                entry[afirst ? 0 : 3] = (png_byte)alpha;
1925:fltk-1.3.4-1/png/pngread.c ****             case 3:
1926:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + (2 ^ bgr)] = (png_byte)blue;
1927:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_byte)green;
1928:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_byte)red;
1929:fltk-1.3.4-1/png/pngread.c ****                break;
1930:fltk-1.3.4-1/png/pngread.c **** 
1931:fltk-1.3.4-1/png/pngread.c ****             case 2:
1932:fltk-1.3.4-1/png/pngread.c ****                entry[1 ^ afirst] = (png_byte)alpha;
1933:fltk-1.3.4-1/png/pngread.c ****             case 1:
1934:fltk-1.3.4-1/png/pngread.c ****                entry[afirst] = (png_byte)green;
1935:fltk-1.3.4-1/png/pngread.c ****                break;
1936:fltk-1.3.4-1/png/pngread.c **** 
1937:fltk-1.3.4-1/png/pngread.c ****             default:
1938:fltk-1.3.4-1/png/pngread.c ****                break;
1939:fltk-1.3.4-1/png/pngread.c ****          }
1940:fltk-1.3.4-1/png/pngread.c ****       }
1941:fltk-1.3.4-1/png/pngread.c **** 
1942:fltk-1.3.4-1/png/pngread.c **** #     ifdef afirst
1943:fltk-1.3.4-1/png/pngread.c **** #        undef afirst
1944:fltk-1.3.4-1/png/pngread.c **** #     endif
1945:fltk-1.3.4-1/png/pngread.c **** #     ifdef bgr
1946:fltk-1.3.4-1/png/pngread.c **** #        undef bgr
1947:fltk-1.3.4-1/png/pngread.c **** #     endif
1948:fltk-1.3.4-1/png/pngread.c ****    }
1949:fltk-1.3.4-1/png/pngread.c **** }
 2315              		.loc 1 1949 1 is_stmt 0 view .LVU635
 2316 015c 4883C428 		addq	$40, %rsp
 2317              		.cfi_remember_state
 2318              		.cfi_def_cfa_offset 56
 2319 0160 5B       		popq	%rbx
 2320              		.cfi_def_cfa_offset 48
 2321 0161 5D       		popq	%rbp
 2322              		.cfi_def_cfa_offset 40
 2323              	.LVL264:
 2324              		.loc 1 1949 1 view .LVU636
 2325 0162 415C     		popq	%r12
 2326              		.cfi_def_cfa_offset 32
 2327 0164 415D     		popq	%r13
 2328              		.cfi_def_cfa_offset 24
 2329 0166 415E     		popq	%r14
 2330              		.cfi_def_cfa_offset 16
 2331              	.LVL265:
 2332              		.loc 1 1949 1 view .LVU637
 2333 0168 415F     		popq	%r15
 2334              		.cfi_def_cfa_offset 8
 2335 016a C3       		ret
 2336              	.LVL266:
 2337 016b 0F1F4400 		.p2align 4,,10
 2337      00
 2338              		.p2align 3
 2339              	.L275:
 2340              		.cfi_restore_state
1752:fltk-1.3.4-1/png/pngread.c ****          set_file_encoding(display);
 2341              		.loc 1 1752 7 is_stmt 1 view .LVU638
1752:fltk-1.3.4-1/png/pngread.c ****          set_file_encoding(display);
 2342              		.loc 1 1752 18 is_stmt 0 view .LVU639
 2343 0170 418B4640 		movl	64(%r14), %eax
1752:fltk-1.3.4-1/png/pngread.c ****          set_file_encoding(display);
 2344              		.loc 1 1752 10 view .LVU640
 2345 0174 85C0     		testl	%eax, %eax
 2346 0176 0F844C03 		je	.L280
 2346      0000
 2347              	.LVL267:
 2348              	.L223:
1758:fltk-1.3.4-1/png/pngread.c ****    }
 2349              		.loc 1 1758 7 is_stmt 1 view .LVU641
1761:fltk-1.3.4-1/png/pngread.c ****    {
 2350              		.loc 1 1761 4 view .LVU642
1761:fltk-1.3.4-1/png/pngread.c ****    {
 2351              		.loc 1 1761 7 is_stmt 0 view .LVU643
 2352 017c 83F803   		cmpl	$3, %eax
 2353 017f 0F850BFF 		jne	.L224
 2353      FFFF
 2354              	.LBB126:
1765:fltk-1.3.4-1/png/pngread.c ****       green = png_gamma_16bit_correct(green*257, g);
 2355              		.loc 1 1765 13 view .LVU644
 2356 0185 89DF     		movl	%ebx, %edi
1763:fltk-1.3.4-1/png/pngread.c **** 
 2357              		.loc 1 1763 23 view .LVU645
 2358 0187 418B7644 		movl	68(%r14), %esi
 2359 018b 4C894C24 		movq	%r9, 24(%rsp)
 2359      18
1765:fltk-1.3.4-1/png/pngread.c ****       green = png_gamma_16bit_correct(green*257, g);
 2360              		.loc 1 1765 13 view .LVU646
 2361 0190 C1E708   		sall	$8, %edi
 2362 0193 89542410 		movl	%edx, 16(%rsp)
 2363 0197 01DF     		addl	%ebx, %edi
 2364 0199 894C240C 		movl	%ecx, 12(%rsp)
1763:fltk-1.3.4-1/png/pngread.c **** 
 2365              		.loc 1 1763 7 is_stmt 1 view .LVU647
 2366              	.LVL268:
1765:fltk-1.3.4-1/png/pngread.c ****       green = png_gamma_16bit_correct(green*257, g);
 2367              		.loc 1 1765 7 view .LVU648
1765:fltk-1.3.4-1/png/pngread.c ****       green = png_gamma_16bit_correct(green*257, g);
 2368              		.loc 1 1765 13 is_stmt 0 view .LVU649
 2369 019d 89742408 		movl	%esi, 8(%rsp)
 2370 01a1 E8000000 		call	png_gamma_16bit_correct@PLT
 2370      00
 2371              	.LVL269:
1766:fltk-1.3.4-1/png/pngread.c ****       blue = png_gamma_16bit_correct(blue*257, g);
 2372              		.loc 1 1766 15 view .LVU650
 2373 01a6 4489E7   		movl	%r12d, %edi
 2374 01a9 8B742408 		movl	8(%rsp), %esi
 2375 01ad C1E708   		sall	$8, %edi
1765:fltk-1.3.4-1/png/pngread.c ****       green = png_gamma_16bit_correct(green*257, g);
 2376              		.loc 1 1765 11 view .LVU651
 2377 01b0 0FB7D8   		movzwl	%ax, %ebx
 2378              	.LVL270:
1766:fltk-1.3.4-1/png/pngread.c ****       blue = png_gamma_16bit_correct(blue*257, g);
 2379              		.loc 1 1766 7 is_stmt 1 view .LVU652
1766:fltk-1.3.4-1/png/pngread.c ****       blue = png_gamma_16bit_correct(blue*257, g);
 2380              		.loc 1 1766 15 is_stmt 0 view .LVU653
 2381 01b3 4401E7   		addl	%r12d, %edi
 2382 01b6 E8000000 		call	png_gamma_16bit_correct@PLT
 2382      00
 2383              	.LVL271:
1767:fltk-1.3.4-1/png/pngread.c **** 
 2384              		.loc 1 1767 14 view .LVU654
 2385 01bb 4489EF   		movl	%r13d, %edi
 2386 01be 8B742408 		movl	8(%rsp), %esi
 2387 01c2 C1E708   		sall	$8, %edi
1766:fltk-1.3.4-1/png/pngread.c ****       blue = png_gamma_16bit_correct(blue*257, g);
 2388              		.loc 1 1766 13 view .LVU655
 2389 01c5 440FB7E0 		movzwl	%ax, %r12d
 2390              	.LVL272:
1767:fltk-1.3.4-1/png/pngread.c **** 
 2391              		.loc 1 1767 7 is_stmt 1 view .LVU656
1767:fltk-1.3.4-1/png/pngread.c **** 
 2392              		.loc 1 1767 14 is_stmt 0 view .LVU657
 2393 01c9 4401EF   		addl	%r13d, %edi
 2394 01cc E8000000 		call	png_gamma_16bit_correct@PLT
 2394      00
 2395              	.LVL273:
1769:fltk-1.3.4-1/png/pngread.c ****       {
 2396              		.loc 1 1769 10 view .LVU658
 2397 01d1 8B4C240C 		movl	12(%rsp), %ecx
 2398 01d5 8B542410 		movl	16(%rsp), %edx
 2399 01d9 4C8B4C24 		movq	24(%rsp), %r9
 2399      18
1767:fltk-1.3.4-1/png/pngread.c **** 
 2400              		.loc 1 1767 12 view .LVU659
 2401 01de 440FB7E8 		movzwl	%ax, %r13d
 2402              	.LVL274:
1769:fltk-1.3.4-1/png/pngread.c ****       {
 2403              		.loc 1 1769 7 is_stmt 1 view .LVU660
1769:fltk-1.3.4-1/png/pngread.c ****       {
 2404              		.loc 1 1769 10 is_stmt 0 view .LVU661
 2405 01e2 83F902   		cmpl	$2, %ecx
 2406 01e5 0F84C3FE 		je	.L273
 2406      FFFF
 2407 01eb 85D2     		testl	%edx, %edx
 2408 01ed 0F85BBFE 		jne	.L273
 2408      FFFF
1777:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
 2409              		.loc 1 1777 10 is_stmt 1 view .LVU662
1777:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
 2410              		.loc 1 1777 16 is_stmt 0 view .LVU663
 2411 01f3 89D8     		movl	%ebx, %eax
 2412 01f5 4C8D0500 		leaq	png_sRGB_delta(%rip), %r8
 2412      000000
 2413 01fc 488D3500 		leaq	png_sRGB_base(%rip), %rsi
 2413      000000
 2414 0203 458B5114 		movl	20(%r9), %r10d
 2415 0207 C1E008   		sall	$8, %eax
 2416 020a 29D8     		subl	%ebx, %eax
 2417 020c 4589D3   		movl	%r10d, %r11d
 2418 020f 89C2     		movl	%eax, %edx
 2419 0211 25FF7F00 		andl	$32767, %eax
 2419      00
 2420 0216 C1EA0F   		shrl	$15, %edx
 2421 0219 89C3     		movl	%eax, %ebx
 2422              	.LVL275:
1777:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
 2423              		.loc 1 1777 16 view .LVU664
 2424 021b 410FB604 		movzbl	(%r8,%rdx), %eax
 2424      10
 2425 0220 0FB71456 		movzwl	(%rsi,%rdx,2), %edx
 2426 0224 0FAFD8   		imull	%eax, %ebx
1778:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2427              		.loc 1 1778 18 view .LVU665
 2428 0227 4489E0   		movl	%r12d, %eax
 2429 022a C1E008   		sall	$8, %eax
 2430 022d 4429E0   		subl	%r12d, %eax
1777:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
 2431              		.loc 1 1777 16 view .LVU666
 2432 0230 C1EB0C   		shrl	$12, %ebx
 2433 0233 01D3     		addl	%edx, %ebx
 2434              	.LVL276:
1778:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2435              		.loc 1 1778 18 view .LVU667
 2436 0235 89C2     		movl	%eax, %edx
 2437 0237 25FF7F00 		andl	$32767, %eax
 2437      00
 2438 023c C1EA0F   		shrl	$15, %edx
 2439 023f 0FB6DF   		movzbl	%bh, %ebx
 2440              	.LVL277:
1778:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2441              		.loc 1 1778 10 is_stmt 1 view .LVU668
1778:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2442              		.loc 1 1778 18 is_stmt 0 view .LVU669
 2443 0242 450FB624 		movzbl	(%r8,%rdx), %r12d
 2443      10
 2444              	.LVL278:
1778:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2445              		.loc 1 1778 18 view .LVU670
 2446 0247 410FAFC4 		imull	%r12d, %eax
 2447 024b 440FB724 		movzwl	(%rsi,%rdx,2), %r12d
 2447      56
 2448 0250 C1E80C   		shrl	$12, %eax
 2449 0253 4401E0   		addl	%r12d, %eax
 2450              	.LVL279:
1778:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2451              		.loc 1 1778 18 view .LVU671
 2452 0256 0FB6C4   		movzbl	%ah, %eax
 2453              	.LVL280:
1778:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2454              		.loc 1 1778 18 view .LVU672
 2455 0259 4189C4   		movl	%eax, %r12d
1779:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2456              		.loc 1 1779 10 is_stmt 1 view .LVU673
1779:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2457              		.loc 1 1779 17 is_stmt 0 view .LVU674
 2458 025c 4489E8   		movl	%r13d, %eax
 2459 025f C1E008   		sall	$8, %eax
 2460 0262 4429E8   		subl	%r13d, %eax
 2461 0265 89C2     		movl	%eax, %edx
 2462 0267 25FF7F00 		andl	$32767, %eax
 2462      00
 2463 026c C1EA0F   		shrl	$15, %edx
 2464 026f 450FB62C 		movzbl	(%r8,%rdx), %r13d
 2464      10
 2465              	.LVL281:
1779:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2466              		.loc 1 1779 17 view .LVU675
 2467 0274 410FAFC5 		imull	%r13d, %eax
 2468 0278 440FB72C 		movzwl	(%rsi,%rdx,2), %r13d
 2468      56
 2469 027d C1E80C   		shrl	$12, %eax
 2470 0280 4401E8   		addl	%r13d, %eax
 2471              	.LVL282:
1779:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2472              		.loc 1 1779 17 view .LVU676
 2473 0283 0FB6C4   		movzbl	%ah, %eax
 2474              	.LVL283:
1779:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2475              		.loc 1 1779 17 view .LVU677
 2476 0286 4189C5   		movl	%eax, %r13d
1780:fltk-1.3.4-1/png/pngread.c ****       }
 2477              		.loc 1 1780 10 is_stmt 1 view .LVU678
 2478              	.LVL284:
1780:fltk-1.3.4-1/png/pngread.c ****       }
 2479              		.loc 1 1780 10 is_stmt 0 view .LVU679
 2480              	.LBE126:
1810:fltk-1.3.4-1/png/pngread.c ****    {
 2481              		.loc 1 1810 4 is_stmt 1 view .LVU680
 2482 0289 4489D0   		movl	%r10d, %eax
 2483 028c 83E021   		andl	$33, %eax
 2484 028f 83F821   		cmpl	$33, %eax
 2485 0292 410F94C0 		sete	%r8b
 2486 0296 410F94C1 		sete	%r9b
 2487 029a 41C1EB03 		shrl	$3, %r11d
 2488 029e 450FB6C0 		movzbl	%r8b, %r8d
 2489 02a2 4183E302 		andl	$2, %r11d
 2490 02a6 EB3D     		jmp	.L228
 2491              	.LVL285:
 2492 02a8 0F1F8400 		.p2align 4,,10
 2492      00000000 
 2493              		.p2align 3
 2494              	.L276:
1810:fltk-1.3.4-1/png/pngread.c ****    {
 2495              		.loc 1 1810 4 is_stmt 0 view .LVU681
 2496 02b0 458B5114 		movl	20(%r9), %r10d
 2497 02b4 4489D0   		movl	%r10d, %eax
 2498              	.LVL286:
1810:fltk-1.3.4-1/png/pngread.c ****    {
 2499              		.loc 1 1810 4 view .LVU682
 2500 02b7 4589D3   		movl	%r10d, %r11d
 2501 02ba 83E021   		andl	$33, %eax
 2502 02bd 83F821   		cmpl	$33, %eax
 2503 02c0 410F94C0 		sete	%r8b
 2504 02c4 410F94C1 		sete	%r9b
 2505 02c8 41C1EB03 		shrl	$3, %r11d
 2506 02cc 450FB6C0 		movzbl	%r8b, %r8d
 2507 02d0 4183E302 		andl	$2, %r11d
1796:fltk-1.3.4-1/png/pngread.c ****        (convert_to_Y  != 0 || output_encoding == P_LINEAR))
 2508              		.loc 1 1796 32 discriminator 1 view .LVU683
 2509 02d4 83F902   		cmpl	$2, %ecx
 2510 02d7 0F841B02 		je	.L258
 2510      0000
 2511 02dd 85D2     		testl	%edx, %edx
 2512 02df 0F851302 		jne	.L258
 2512      0000
 2513              	.LVL287:
 2514              	.L228:
1843:fltk-1.3.4-1/png/pngread.c ****       png_error(image->opaque->png_ptr, "bad encoding (internal error)");
 2515              		.loc 1 1843 4 is_stmt 1 view .LVU684
 2516              	.LBB127:
1849:fltk-1.3.4-1/png/pngread.c ****             (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
 2517              		.loc 1 1849 10 view .LVU685
1855:fltk-1.3.4-1/png/pngread.c **** #     else
 2518              		.loc 1 1855 10 view .LVU686
1860:fltk-1.3.4-1/png/pngread.c ****       {
 2519              		.loc 1 1860 7 view .LVU687
 2520              	.LBB120:
1917:fltk-1.3.4-1/png/pngread.c **** 
 2521              		.loc 1 1917 10 view .LVU688
1919:fltk-1.3.4-1/png/pngread.c **** 
 2522              		.loc 1 1919 10 view .LVU689
1919:fltk-1.3.4-1/png/pngread.c **** 
 2523              		.loc 1 1919 24 is_stmt 0 view .LVU690
 2524 02e5 4183E203 		andl	$3, %r10d
 2525 02e9 4183C201 		addl	$1, %r10d
1919:fltk-1.3.4-1/png/pngread.c **** 
 2526              		.loc 1 1919 22 view .LVU691
 2527 02ed 410FAFEA 		imull	%r10d, %ebp
 2528              	.LVL288:
1919:fltk-1.3.4-1/png/pngread.c **** 
 2529              		.loc 1 1919 16 view .LVU692
 2530 02f1 49036E18 		addq	24(%r14), %rbp
 2531              	.LVL289:
1921:fltk-1.3.4-1/png/pngread.c ****          {
 2532              		.loc 1 1921 10 is_stmt 1 view .LVU693
 2533 02f5 4183FA03 		cmpl	$3, %r10d
 2534 02f9 0F84B700 		je	.L249
 2534      0000
 2535 02ff 4183FA04 		cmpl	$4, %r10d
 2536 0303 0F849F00 		je	.L245
 2536      0000
 2537 0309 4183FA02 		cmpl	$2, %r10d
 2538 030d 0F849D01 		je	.L281
 2538      0000
 2539              	.L247:
1934:fltk-1.3.4-1/png/pngread.c ****                break;
 2540              		.loc 1 1934 16 view .LVU694
1934:fltk-1.3.4-1/png/pngread.c ****                break;
 2541              		.loc 1 1934 21 is_stmt 0 view .LVU695
 2542 0313 450FB6C9 		movzbl	%r9b, %r9d
1934:fltk-1.3.4-1/png/pngread.c ****                break;
 2543              		.loc 1 1934 32 view .LVU696
 2544 0317 4688640D 		movb	%r12b, 0(%rbp,%r9)
 2544      00
1935:fltk-1.3.4-1/png/pngread.c **** 
 2545              		.loc 1 1935 16 is_stmt 1 view .LVU697
 2546              	.LBE120:
 2547              	.LBE127:
 2548              		.loc 1 1949 1 is_stmt 0 view .LVU698
 2549 031c 4883C428 		addq	$40, %rsp
 2550              		.cfi_remember_state
 2551              		.cfi_def_cfa_offset 56
 2552 0320 5B       		popq	%rbx
 2553              		.cfi_def_cfa_offset 48
 2554 0321 5D       		popq	%rbp
 2555              		.cfi_def_cfa_offset 40
 2556              	.LVL290:
 2557              		.loc 1 1949 1 view .LVU699
 2558 0322 415C     		popq	%r12
 2559              		.cfi_def_cfa_offset 32
 2560 0324 415D     		popq	%r13
 2561              		.cfi_def_cfa_offset 24
 2562 0326 415E     		popq	%r14
 2563              		.cfi_def_cfa_offset 16
 2564              	.LVL291:
 2565              		.loc 1 1949 1 view .LVU700
 2566 0328 415F     		popq	%r15
 2567              		.cfi_def_cfa_offset 8
 2568 032a C3       		ret
 2569              	.LVL292:
 2570 032b 0F1F4400 		.p2align 4,,10
 2570      00
 2571              		.p2align 3
 2572              	.L277:
 2573              		.cfi_restore_state
 2574              	.LBB128:
1815:fltk-1.3.4-1/png/pngread.c ****             (png_uint_32)2366 * blue;
 2575              		.loc 1 1815 10 is_stmt 1 view .LVU701
1815:fltk-1.3.4-1/png/pngread.c ****             (png_uint_32)2366 * blue;
 2576              		.loc 1 1815 44 is_stmt 0 view .LVU702
 2577 0330 69DB381B 		imull	$6968, %ebx, %ebx
 2577      0000
1815:fltk-1.3.4-1/png/pngread.c ****             (png_uint_32)2366 * blue;
 2578              		.loc 1 1815 72 view .LVU703
 2579 0336 4569E48A 		imull	$23434, %r12d, %r12d
 2579      5B0000
1816:fltk-1.3.4-1/png/pngread.c **** 
 2580              		.loc 1 1816 31 view .LVU704
 2581 033d 4569ED3E 		imull	$2366, %r13d, %r13d
 2581      090000
1815:fltk-1.3.4-1/png/pngread.c ****             (png_uint_32)2366 * blue;
 2582              		.loc 1 1815 51 view .LVU705
 2583 0344 4401E3   		addl	%r12d, %ebx
1815:fltk-1.3.4-1/png/pngread.c ****             (png_uint_32)2366 * blue;
 2584              		.loc 1 1815 22 view .LVU706
 2585 0347 4101DD   		addl	%ebx, %r13d
 2586              	.LVL293:
1818:fltk-1.3.4-1/png/pngread.c ****             y = (y + 16384) >> 15;
 2587              		.loc 1 1818 10 is_stmt 1 view .LVU707
1818:fltk-1.3.4-1/png/pngread.c ****             y = (y + 16384) >> 15;
 2588              		.loc 1 1818 13 is_stmt 0 view .LVU708
 2589 034a 83F902   		cmpl	$2, %ecx
 2590 034d 0F84A502 		je	.L282
 2590      0000
1824:fltk-1.3.4-1/png/pngread.c ****             y *= 255;
 2591              		.loc 1 1824 13 is_stmt 1 view .LVU709
1824:fltk-1.3.4-1/png/pngread.c ****             y *= 255;
 2592              		.loc 1 1824 20 is_stmt 0 view .LVU710
 2593 0353 4183ED80 		subl	$-128, %r13d
 2594              	.LVL294:
1824:fltk-1.3.4-1/png/pngread.c ****             y *= 255;
 2595              		.loc 1 1824 15 view .LVU711
 2596 0357 4489EA   		movl	%r13d, %edx
1825:fltk-1.3.4-1/png/pngread.c ****             y = PNG_sRGB_FROM_LINEAR((y + 64) >> 7);
 2597              		.loc 1 1825 15 view .LVU712
 2598 035a 4530ED   		xorb	%r13b, %r13b
 2599              	.LVL295:
1824:fltk-1.3.4-1/png/pngread.c ****             y *= 255;
 2600              		.loc 1 1824 15 view .LVU713
 2601 035d C1EA08   		shrl	$8, %edx
 2602              	.LVL296:
1825:fltk-1.3.4-1/png/pngread.c ****             y = PNG_sRGB_FROM_LINEAR((y + 64) >> 7);
 2603              		.loc 1 1825 13 is_stmt 1 view .LVU714
1826:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
 2604              		.loc 1 1826 13 view .LVU715
1825:fltk-1.3.4-1/png/pngread.c ****             y = PNG_sRGB_FROM_LINEAR((y + 64) >> 7);
 2605              		.loc 1 1825 15 is_stmt 0 view .LVU716
 2606 0360 4129D5   		subl	%edx, %r13d
1826:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
 2607              		.loc 1 1826 17 view .LVU717
 2608 0363 418D5540 		leal	64(%r13), %edx
 2609              	.LVL297:
1826:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
 2610              		.loc 1 1826 17 view .LVU718
 2611 0367 89D1     		movl	%edx, %ecx
 2612 0369 89D3     		movl	%edx, %ebx
 2613 036b 488D1500 		leaq	png_sRGB_delta(%rip), %rdx
 2613      000000
 2614 0372 C1E916   		shrl	$22, %ecx
 2615 0375 C1EB07   		shrl	$7, %ebx
 2616 0378 0FB6140A 		movzbl	(%rdx,%rcx), %edx
 2617 037c 81E3FF7F 		andl	$32767, %ebx
 2617      0000
 2618 0382 0FAFDA   		imull	%edx, %ebx
 2619 0385 488D1500 		leaq	png_sRGB_base(%rip), %rdx
 2619      000000
 2620 038c 0FB7144A 		movzwl	(%rdx,%rcx,2), %edx
 2621 0390 C1EB0C   		shrl	$12, %ebx
 2622 0393 01D3     		addl	%edx, %ebx
 2623              	.LVL298:
1826:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
 2624              		.loc 1 1826 17 view .LVU719
 2625 0395 0FB6DF   		movzbl	%bh, %ebx
 2626              	.LVL299:
1827:fltk-1.3.4-1/png/pngread.c ****          }
 2627              		.loc 1 1827 13 is_stmt 1 view .LVU720
1826:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
 2628              		.loc 1 1826 15 is_stmt 0 view .LVU721
 2629 0398 4189DD   		movl	%ebx, %r13d
 2630              	.LVL300:
1826:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
 2631              		.loc 1 1826 15 view .LVU722
 2632 039b 4189DC   		movl	%ebx, %r12d
 2633 039e E942FFFF 		jmp	.L228
 2633      FF
 2634              	.LVL301:
 2635              		.p2align 4,,10
 2636 03a3 0F1F4400 		.p2align 3
 2636      00
 2637              	.L245:
1826:fltk-1.3.4-1/png/pngread.c ****             encoding = P_sRGB;
 2638              		.loc 1 1826 15 view .LVU723
 2639              	.LBE128:
 2640              	.LBB129:
 2641              	.LBB121:
1924:fltk-1.3.4-1/png/pngread.c ****             case 3:
 2642              		.loc 1 1924 16 is_stmt 1 view .LVU724
 2643 03a8 488D4503 		leaq	3(%rbp), %rax
 2644 03ac 4584C9   		testb	%r9b, %r9b
 2645 03af 480F45C5 		cmovne	%rbp, %rax
1924:fltk-1.3.4-1/png/pngread.c ****             case 3:
 2646              		.loc 1 1924 40 is_stmt 0 view .LVU725
 2647 03b3 448838   		movb	%r15b, (%rax)
 2648              	.L249:
1926:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_byte)green;
 2649              		.loc 1 1926 16 is_stmt 1 view .LVU726
1926:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_byte)green;
 2650              		.loc 1 1926 34 is_stmt 0 view .LVU727
 2651 03b6 4489D8   		movl	%r11d, %eax
1928:fltk-1.3.4-1/png/pngread.c ****                break;
 2652              		.loc 1 1928 29 view .LVU728
 2653 03b9 4501C3   		addl	%r8d, %r11d
 2654              	.LVL302:
1927:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_byte)red;
 2655              		.loc 1 1927 21 view .LVU729
 2656 03bc 450FB6C9 		movzbl	%r9b, %r9d
1926:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_byte)green;
 2657              		.loc 1 1926 34 view .LVU730
 2658 03c0 83F002   		xorl	$2, %eax
 2659              	.LVL303:
1928:fltk-1.3.4-1/png/pngread.c ****                break;
 2660              		.loc 1 1928 29 view .LVU731
 2661 03c3 4D63DB   		movslq	%r11d, %r11
1926:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_byte)green;
 2662              		.loc 1 1926 29 view .LVU732
 2663 03c6 4401C0   		addl	%r8d, %eax
 2664              	.LVL304:
1926:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_byte)green;
 2665              		.loc 1 1926 29 view .LVU733
 2666 03c9 4898     		cltq
1926:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_byte)green;
 2667              		.loc 1 1926 44 view .LVU734
 2668 03cb 44886C05 		movb	%r13b, 0(%rbp,%rax)
 2668      00
1927:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_byte)red;
 2669              		.loc 1 1927 16 is_stmt 1 view .LVU735
1927:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_byte)red;
 2670              		.loc 1 1927 36 is_stmt 0 view .LVU736
 2671 03d0 4688640D 		movb	%r12b, 1(%rbp,%r9)
 2671      01
1928:fltk-1.3.4-1/png/pngread.c ****                break;
 2672              		.loc 1 1928 16 is_stmt 1 view .LVU737
1928:fltk-1.3.4-1/png/pngread.c ****                break;
 2673              		.loc 1 1928 38 is_stmt 0 view .LVU738
 2674 03d5 42885C1D 		movb	%bl, 0(%rbp,%r11)
 2674      00
1929:fltk-1.3.4-1/png/pngread.c **** 
 2675              		.loc 1 1929 16 is_stmt 1 view .LVU739
 2676              	.LBE121:
 2677              	.LBE129:
 2678              		.loc 1 1949 1 is_stmt 0 view .LVU740
 2679 03da 4883C428 		addq	$40, %rsp
 2680              		.cfi_remember_state
 2681              		.cfi_def_cfa_offset 56
 2682 03de 5B       		popq	%rbx
 2683              		.cfi_def_cfa_offset 48
 2684 03df 5D       		popq	%rbp
 2685              		.cfi_def_cfa_offset 40
 2686              	.LVL305:
 2687              		.loc 1 1949 1 view .LVU741
 2688 03e0 415C     		popq	%r12
 2689              		.cfi_def_cfa_offset 32
 2690 03e2 415D     		popq	%r13
 2691              		.cfi_def_cfa_offset 24
 2692 03e4 415E     		popq	%r14
 2693              		.cfi_def_cfa_offset 16
 2694              	.LVL306:
 2695              		.loc 1 1949 1 view .LVU742
 2696 03e6 415F     		popq	%r15
 2697              		.cfi_def_cfa_offset 8
 2698 03e8 C3       		ret
 2699              	.LVL307:
 2700 03e9 0F1F8000 		.p2align 4,,10
 2700      000000
 2701              		.p2align 3
 2702              	.L236:
 2703              		.cfi_restore_state
 2704              	.LBB130:
 2705              	.LBB122:
1873:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
 2706              		.loc 1 1873 16 is_stmt 1 view .LVU743
 2707 03f0 488D4506 		leaq	6(%rbp), %rax
 2708 03f4 4584C9   		testb	%r9b, %r9b
 2709 03f7 480F45C5 		cmovne	%rbp, %rax
1873:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
 2710              		.loc 1 1873 40 is_stmt 0 view .LVU744
 2711 03fb 66448938 		movw	%r15w, (%rax)
 2712              	.L235:
1877:fltk-1.3.4-1/png/pngread.c ****                {
 2713              		.loc 1 1877 16 is_stmt 1 view .LVU745
1877:fltk-1.3.4-1/png/pngread.c ****                {
 2714              		.loc 1 1877 19 is_stmt 0 view .LVU746
 2715 03ff 4181FFFE 		cmpl	$65534, %r15d
 2715      FF0000
 2716 0406 776A     		ja	.L241
1879:fltk-1.3.4-1/png/pngread.c ****                   {
 2717              		.loc 1 1879 19 is_stmt 1 view .LVU747
1879:fltk-1.3.4-1/png/pngread.c ****                   {
 2718              		.loc 1 1879 22 is_stmt 0 view .LVU748
 2719 0408 4585FF   		testl	%r15d, %r15d
 2720 040b 0F84FF01 		je	.L254
 2720      0000
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2721              		.loc 1 1881 22 is_stmt 1 view .LVU749
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2722              		.loc 1 1882 37 is_stmt 0 view .LVU750
 2723 0411 450FAFE7 		imull	%r15d, %r12d
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2724              		.loc 1 1881 35 view .LVU751
 2725 0415 450FAFEF 		imull	%r15d, %r13d
 2726              	.LVL308:
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2727              		.loc 1 1882 22 is_stmt 1 view .LVU752
1883:fltk-1.3.4-1/png/pngread.c ****                   }
 2728              		.loc 1 1883 22 view .LVU753
1883:fltk-1.3.4-1/png/pngread.c ****                   }
 2729              		.loc 1 1883 33 is_stmt 0 view .LVU754
 2730 0419 410FAFDF 		imull	%r15d, %ebx
 2731              	.LVL309:
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2732              		.loc 1 1882 28 view .LVU755
 2733 041d 418D8424 		leal	32767(%r12), %eax
 2733      FF7F0000 
 2734 0425 4889C6   		movq	%rax, %rsi
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2735              		.loc 1 1881 27 view .LVU756
 2736 0428 418D95FF 		leal	32767(%r13), %edx
 2736      7F0000
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2737              		.loc 1 1882 28 view .LVU757
 2738 042f 48C1E610 		salq	$16, %rsi
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2739              		.loc 1 1881 27 view .LVU758
 2740 0433 4989D5   		movq	%rdx, %r13
 2741              	.LVL310:
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2742              		.loc 1 1882 28 view .LVU759
 2743 0436 4C8D2406 		leaq	(%rsi,%rax), %r12
 2744              	.LVL311:
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2745              		.loc 1 1881 27 view .LVU760
 2746 043a 49C1E510 		salq	$16, %r13
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2747              		.loc 1 1882 28 view .LVU761
 2748 043e 49C1E40F 		salq	$15, %r12
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2749              		.loc 1 1881 27 view .LVU762
 2750 0442 4901D5   		addq	%rdx, %r13
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2751              		.loc 1 1882 28 view .LVU763
 2752 0445 4901C4   		addq	%rax, %r12
1883:fltk-1.3.4-1/png/pngread.c ****                   }
 2753              		.loc 1 1883 26 view .LVU764
 2754 0448 8D83FF7F 		leal	32767(%rbx), %eax
 2754      0000
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2755              		.loc 1 1881 27 view .LVU765
 2756 044e 49C1E50F 		salq	$15, %r13
1883:fltk-1.3.4-1/png/pngread.c ****                   }
 2757              		.loc 1 1883 26 view .LVU766
 2758 0452 4889C3   		movq	%rax, %rbx
 2759              	.LVL312:
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2760              		.loc 1 1881 27 view .LVU767
 2761 0455 4901D5   		addq	%rdx, %r13
1882:fltk-1.3.4-1/png/pngread.c ****                      red = (red * alpha + 32767U)/65535U;
 2762              		.loc 1 1882 28 view .LVU768
 2763 0458 49C1EC2F 		shrq	$47, %r12
1883:fltk-1.3.4-1/png/pngread.c ****                   }
 2764              		.loc 1 1883 26 view .LVU769
 2765 045c 48C1E310 		salq	$16, %rbx
1881:fltk-1.3.4-1/png/pngread.c ****                      green = (green * alpha + 32767U)/65535U;
 2766              		.loc 1 1881 27 view .LVU770
 2767 0460 49C1ED2F 		shrq	$47, %r13
1883:fltk-1.3.4-1/png/pngread.c ****                   }
 2768              		.loc 1 1883 26 view .LVU771
 2769 0464 4801C3   		addq	%rax, %rbx
 2770 0467 48C1E30F 		salq	$15, %rbx
 2771 046b 4801C3   		addq	%rax, %rbx
 2772 046e 48C1EB2F 		shrq	$47, %rbx
 2773              	.L241:
1889:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_uint_16)green;
 2774              		.loc 1 1889 16 is_stmt 1 view .LVU772
1889:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_uint_16)green;
 2775              		.loc 1 1889 34 is_stmt 0 view .LVU773
 2776 0472 4489DE   		movl	%r11d, %esi
1890:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_uint_16)red;
 2777              		.loc 1 1890 21 view .LVU774
 2778 0475 450FB6C9 		movzbl	%r9b, %r9d
1891:fltk-1.3.4-1/png/pngread.c ****                break;
 2779              		.loc 1 1891 29 view .LVU775
 2780 0479 4501C3   		addl	%r8d, %r11d
 2781              	.LVL313:
1889:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_uint_16)green;
 2782              		.loc 1 1889 34 view .LVU776
 2783 047c 83F602   		xorl	$2, %esi
 2784              	.LVL314:
1890:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_uint_16)red;
 2785              		.loc 1 1890 21 view .LVU777
 2786 047f 4983C101 		addq	$1, %r9
1891:fltk-1.3.4-1/png/pngread.c ****                break;
 2787              		.loc 1 1891 29 view .LVU778
 2788 0483 4D63DB   		movslq	%r11d, %r11
1889:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_uint_16)green;
 2789              		.loc 1 1889 29 view .LVU779
 2790 0486 4401C6   		addl	%r8d, %esi
 2791              	.LVL315:
1889:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_uint_16)green;
 2792              		.loc 1 1889 29 view .LVU780
 2793 0489 4863F6   		movslq	%esi, %rsi
1889:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + 1] = (png_uint_16)green;
 2794              		.loc 1 1889 42 view .LVU781
 2795 048c 6644896C 		movw	%r13w, 0(%rbp,%rsi,2)
 2795      7500
1890:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_uint_16)red;
 2796              		.loc 1 1890 16 is_stmt 1 view .LVU782
1890:fltk-1.3.4-1/png/pngread.c ****                entry[afirst + bgr] = (png_uint_16)red;
 2797              		.loc 1 1890 34 is_stmt 0 view .LVU783
 2798 0492 66468964 		movw	%r12w, 0(%rbp,%r9,2)
 2798      4D00
1891:fltk-1.3.4-1/png/pngread.c ****                break;
 2799              		.loc 1 1891 16 is_stmt 1 view .LVU784
1891:fltk-1.3.4-1/png/pngread.c ****                break;
 2800              		.loc 1 1891 36 is_stmt 0 view .LVU785
 2801 0498 6642895C 		movw	%bx, 0(%rbp,%r11,2)
 2801      5D00
1892:fltk-1.3.4-1/png/pngread.c **** 
 2802              		.loc 1 1892 16 is_stmt 1 view .LVU786
 2803              	.LBE122:
 2804              	.LBE130:
 2805              		.loc 1 1949 1 is_stmt 0 view .LVU787
 2806 049e 4883C428 		addq	$40, %rsp
 2807              		.cfi_remember_state
 2808              		.cfi_def_cfa_offset 56
 2809 04a2 5B       		popq	%rbx
 2810              		.cfi_def_cfa_offset 48
 2811 04a3 5D       		popq	%rbp
 2812              		.cfi_def_cfa_offset 40
 2813              	.LVL316:
 2814              		.loc 1 1949 1 view .LVU788
 2815 04a4 415C     		popq	%r12
 2816              		.cfi_def_cfa_offset 32
 2817 04a6 415D     		popq	%r13
 2818              		.cfi_def_cfa_offset 24
 2819 04a8 415E     		popq	%r14
 2820              		.cfi_def_cfa_offset 16
 2821              	.LVL317:
 2822              		.loc 1 1949 1 view .LVU789
 2823 04aa 415F     		popq	%r15
 2824              		.cfi_def_cfa_offset 8
 2825 04ac C3       		ret
 2826              	.LVL318:
 2827 04ad 0F1F00   		.p2align 4,,10
 2828              		.p2align 3
 2829              	.L281:
 2830              		.cfi_restore_state
 2831              	.LBB131:
 2832              	.LBB123:
1932:fltk-1.3.4-1/png/pngread.c ****             case 1:
 2833              		.loc 1 1932 16 is_stmt 1 view .LVU790
1932:fltk-1.3.4-1/png/pngread.c ****             case 1:
 2834              		.loc 1 1932 24 is_stmt 0 view .LVU791
 2835 04b0 83F821   		cmpl	$33, %eax
 2836 04b3 0F95C0   		setne	%al
 2837 04b6 0FB6C0   		movzbl	%al, %eax
1932:fltk-1.3.4-1/png/pngread.c ****             case 1:
 2838              		.loc 1 1932 36 view .LVU792
 2839 04b9 44887C05 		movb	%r15b, 0(%rbp,%rax)
 2839      00
 2840 04be E950FEFF 		jmp	.L247
 2840      FF
 2841              	.LVL319:
 2842              		.p2align 4,,10
 2843 04c3 0F1F4400 		.p2align 3
 2843      00
 2844              	.L280:
1932:fltk-1.3.4-1/png/pngread.c ****             case 1:
 2845              		.loc 1 1932 36 view .LVU793
 2846              	.LBE123:
 2847              	.LBE131:
1753:fltk-1.3.4-1/png/pngread.c **** 
 2848              		.loc 1 1753 10 view .LVU794
 2849 04c8 4C89F7   		movq	%r14, %rdi
 2850              	.LVL320:
1753:fltk-1.3.4-1/png/pngread.c **** 
 2851              		.loc 1 1753 10 view .LVU795
 2852 04cb 4C894C24 		movq	%r9, 16(%rsp)
 2852      10
 2853 04d0 8954240C 		movl	%edx, 12(%rsp)
 2854 04d4 894C2408 		movl	%ecx, 8(%rsp)
1753:fltk-1.3.4-1/png/pngread.c **** 
 2855              		.loc 1 1753 10 is_stmt 1 view .LVU796
 2856 04d8 E8000000 		call	set_file_encoding
 2856      00
 2857              	.LVL321:
1753:fltk-1.3.4-1/png/pngread.c **** 
 2858              		.loc 1 1753 10 is_stmt 0 view .LVU797
 2859 04dd 418B4640 		movl	64(%r14), %eax
 2860 04e1 4C8B4C24 		movq	16(%rsp), %r9
 2860      10
 2861 04e6 8B54240C 		movl	12(%rsp), %edx
 2862 04ea 8B4C2408 		movl	8(%rsp), %ecx
 2863 04ee E989FCFF 		jmp	.L223
 2863      FF
 2864              	.LVL322:
 2865              		.p2align 4,,10
 2866 04f3 0F1F4400 		.p2align 3
 2866      00
 2867              	.L258:
1802:fltk-1.3.4-1/png/pngread.c ****       green = png_sRGB_table[green];
 2868              		.loc 1 1802 7 is_stmt 1 view .LVU798
1802:fltk-1.3.4-1/png/pngread.c ****       green = png_sRGB_table[green];
 2869              		.loc 1 1802 27 is_stmt 0 view .LVU799
 2870 04f8 488D3500 		leaq	png_sRGB_table(%rip), %rsi
 2870      000000
1802:fltk-1.3.4-1/png/pngread.c ****       green = png_sRGB_table[green];
 2871              		.loc 1 1802 11 view .LVU800
 2872 04ff 0FB71C5E 		movzwl	(%rsi,%rbx,2), %ebx
 2873              	.LVL323:
1803:fltk-1.3.4-1/png/pngread.c ****       blue = png_sRGB_table[blue];
 2874              		.loc 1 1803 7 is_stmt 1 view .LVU801
1803:fltk-1.3.4-1/png/pngread.c ****       blue = png_sRGB_table[blue];
 2875              		.loc 1 1803 13 is_stmt 0 view .LVU802
 2876 0503 460FB724 		movzwl	(%rsi,%r12,2), %r12d
 2876      66
 2877              	.LVL324:
1804:fltk-1.3.4-1/png/pngread.c ****       alpha *= 257;
 2878              		.loc 1 1804 7 is_stmt 1 view .LVU803
1804:fltk-1.3.4-1/png/pngread.c ****       alpha *= 257;
 2879              		.loc 1 1804 12 is_stmt 0 view .LVU804
 2880 0508 460FB72C 		movzwl	(%rsi,%r13,2), %r13d
 2880      6E
 2881              	.LVL325:
1805:fltk-1.3.4-1/png/pngread.c ****       encoding = P_LINEAR;
 2882              		.loc 1 1805 7 is_stmt 1 view .LVU805
1805:fltk-1.3.4-1/png/pngread.c ****       encoding = P_LINEAR;
 2883              		.loc 1 1805 13 is_stmt 0 view .LVU806
 2884 050d 4489FE   		movl	%r15d, %esi
 2885 0510 C1E608   		sall	$8, %esi
 2886 0513 4101F7   		addl	%esi, %r15d
 2887              	.LVL326:
1806:fltk-1.3.4-1/png/pngread.c ****    }
 2888              		.loc 1 1806 7 is_stmt 1 view .LVU807
1810:fltk-1.3.4-1/png/pngread.c ****    {
 2889              		.loc 1 1810 4 view .LVU808
 2890 0516 E9C0FBFF 		jmp	.L227
 2890      FF
 2891              	.LVL327:
 2892 051b 0F1F4400 		.p2align 4,,10
 2892      00
 2893              		.p2align 3
 2894              	.L279:
 2895              	.LBB132:
 2896              	.LBB124:
1895:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
 2897              		.loc 1 1895 16 view .LVU809
1895:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
 2898              		.loc 1 1895 24 is_stmt 0 view .LVU810
 2899 0520 83F821   		cmpl	$33, %eax
 2900 0523 0F95C0   		setne	%al
 2901 0526 0FB6C0   		movzbl	%al, %eax
1895:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
 2902              		.loc 1 1895 36 view .LVU811
 2903 0529 6644897C 		movw	%r15w, 0(%rbp,%rax,2)
 2903      4500
 2904 052f E9EAFBFF 		jmp	.L238
 2904      FF
 2905              	.LVL328:
 2906              		.p2align 4,,10
 2907 0534 0F1F4000 		.p2align 3
 2908              	.L278:
1895:fltk-1.3.4-1/png/pngread.c ****                /* FALL THROUGH */
 2909              		.loc 1 1895 36 view .LVU812
 2910              	.LBE124:
 2911              	.LBE132:
1835:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
 2912              		.loc 1 1835 10 is_stmt 1 view .LVU813
1835:fltk-1.3.4-1/png/pngread.c ****          green = PNG_sRGB_FROM_LINEAR(green * 255);
 2913              		.loc 1 1835 16 is_stmt 0 view .LVU814
 2914 0538 89DA     		movl	%ebx, %edx
 2915 053a 488D0D00 		leaq	png_sRGB_delta(%rip), %rcx
 2915      000000
 2916 0541 C1E208   		sall	$8, %edx
 2917 0544 29DA     		subl	%ebx, %edx
 2918 0546 89D6     		movl	%edx, %esi
 2919 0548 89D3     		movl	%edx, %ebx
 2920 054a C1EE0F   		shrl	$15, %esi
 2921 054d 81E3FF7F 		andl	$32767, %ebx
 2921      0000
 2922 0553 0FB61431 		movzbl	(%rcx,%rsi), %edx
 2923 0557 0FAFDA   		imull	%edx, %ebx
 2924 055a 488D1500 		leaq	png_sRGB_base(%rip), %rdx
 2924      000000
 2925 0561 0FB73472 		movzwl	(%rdx,%rsi,2), %esi
 2926 0565 C1EB0C   		shrl	$12, %ebx
 2927 0568 01F3     		addl	%esi, %ebx
 2928              	.LVL329:
1836:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2929              		.loc 1 1836 18 view .LVU815
 2930 056a 4489E6   		movl	%r12d, %esi
 2931 056d C1E608   		sall	$8, %esi
 2932 0570 0FB6DF   		movzbl	%bh, %ebx
 2933              	.LVL330:
1836:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2934              		.loc 1 1836 10 is_stmt 1 view .LVU816
1836:fltk-1.3.4-1/png/pngread.c ****          blue = PNG_sRGB_FROM_LINEAR(blue * 255);
 2935              		.loc 1 1836 18 is_stmt 0 view .LVU817
 2936 0573 4429E6   		subl	%r12d, %esi
 2937 0576 4189F4   		movl	%esi, %r12d
 2938 0579 C1EE0F   		shrl	$15, %esi
 2939 057c 0FB63C31 		movzbl	(%rcx,%rsi), %edi
 2940 0580 4181E4FF 		andl	$32767, %r12d
 2940      7F0000
 2941 0587 0FB73472 		movzwl	(%rdx,%rsi,2), %esi
 2942 058b 440FAFE7 		imull	%edi, %r12d
 2943 058f 41C1EC0C 		shrl	$12, %r12d
 2944 0593 4101F4   		addl	%esi, %r12d
 2945              	.LVL331:
1837:fltk-1.3.4-1/png/pngread.c ****          alpha = PNG_DIV257(alpha);
 2946              		.loc 1 1837 17 view .LVU818
 2947 0596 4489EE   		movl	%r13d, %esi
 2948 0599 C1E608   		sall	$8, %esi
 2949 059c 4489E2   		movl	%r12d, %edx
 2950 059f 4429EE   		subl	%r13d, %esi
 2951 05a2 0FB6FE   		movzbl	%dh, %edi
 2952 05a5 488D1500 		leaq	png_sRGB_base(%rip), %rdx
 2952      000000
 2953 05ac 4189F5   		movl	%esi, %r13d
 2954 05af C1EE0F   		shrl	$15, %esi
 2955 05b2 4189FC   		movl	%edi, %r12d
 2956              	.LVL332:
1837:fltk-1.3.4-1/png/pngread.c ****          alpha = PNG_DIV257(alpha);
 2957              		.loc 1 1837 10 is_stmt 1 view .LVU819
1837:fltk-1.3.4-1/png/pngread.c ****          alpha = PNG_DIV257(alpha);
 2958              		.loc 1 1837 17 is_stmt 0 view .LVU820
 2959 05b5 0FB60C31 		movzbl	(%rcx,%rsi), %ecx
 2960 05b9 4181E5FF 		andl	$32767, %r13d
 2960      7F0000
 2961 05c0 0FB71472 		movzwl	(%rdx,%rsi,2), %edx
 2962 05c4 440FAFE9 		imull	%ecx, %r13d
 2963 05c8 41C1ED0C 		shrl	$12, %r13d
 2964 05cc 4401EA   		addl	%r13d, %edx
 2965              	.LVL333:
1837:fltk-1.3.4-1/png/pngread.c ****          alpha = PNG_DIV257(alpha);
 2966              		.loc 1 1837 17 view .LVU821
 2967 05cf 0FB6FE   		movzbl	%dh, %edi
1838:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2968              		.loc 1 1838 18 view .LVU822
 2969 05d2 4489FA   		movl	%r15d, %edx
 2970              	.LVL334:
1838:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2971              		.loc 1 1838 18 view .LVU823
 2972 05d5 C1E208   		sall	$8, %edx
 2973 05d8 4189FD   		movl	%edi, %r13d
 2974              	.LVL335:
1838:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2975              		.loc 1 1838 10 is_stmt 1 view .LVU824
1838:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2976              		.loc 1 1838 18 is_stmt 0 view .LVU825
 2977 05db 4429FA   		subl	%r15d, %edx
 2978 05de 4189D7   		movl	%edx, %r15d
 2979 05e1 4181C77F 		addl	$32895, %r15d
 2979      800000
 2980              	.LVL336:
1838:fltk-1.3.4-1/png/pngread.c ****          encoding = P_sRGB;
 2981              		.loc 1 1838 16 view .LVU826
 2982 05e8 41C1EF10 		shrl	$16, %r15d
 2983              	.LVL337:
1839:fltk-1.3.4-1/png/pngread.c ****       }
 2984              		.loc 1 1839 10 is_stmt 1 view .LVU827
1839:fltk-1.3.4-1/png/pngread.c ****       }
 2985              		.loc 1 1839 10 is_stmt 0 view .LVU828
 2986 05ec E9F4FCFF 		jmp	.L228
 2986      FF
 2987              	.LVL338:
 2988              		.p2align 4,,10
 2989 05f1 0F1F8000 		.p2align 3
 2989      000000
 2990              	.L282:
 2991              	.LBB133:
1819:fltk-1.3.4-1/png/pngread.c **** 
 2992              		.loc 1 1819 13 is_stmt 1 view .LVU829
1819:fltk-1.3.4-1/png/pngread.c **** 
 2993              		.loc 1 1819 20 is_stmt 0 view .LVU830
 2994 05f8 418D9D00 		leal	16384(%r13), %ebx
 2994      400000
 2995              	.LVL339:
1819:fltk-1.3.4-1/png/pngread.c **** 
 2996              		.loc 1 1819 15 view .LVU831
 2997 05ff C1EB0F   		shrl	$15, %ebx
 2998              	.LVL340:
1819:fltk-1.3.4-1/png/pngread.c **** 
 2999              		.loc 1 1819 15 view .LVU832
 3000              	.LBE133:
1843:fltk-1.3.4-1/png/pngread.c ****       png_error(image->opaque->png_ptr, "bad encoding (internal error)");
 3001              		.loc 1 1843 4 is_stmt 1 view .LVU833
 3002              	.LBB134:
1849:fltk-1.3.4-1/png/pngread.c ****             (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
 3003              		.loc 1 1849 10 view .LVU834
1855:fltk-1.3.4-1/png/pngread.c **** #     else
 3004              		.loc 1 1855 10 view .LVU835
1860:fltk-1.3.4-1/png/pngread.c ****       {
 3005              		.loc 1 1860 7 view .LVU836
 3006              	.LBE134:
 3007              	.LBB135:
1819:fltk-1.3.4-1/png/pngread.c **** 
 3008              		.loc 1 1819 15 is_stmt 0 view .LVU837
 3009 0602 4189DD   		movl	%ebx, %r13d
 3010 0605 4189DC   		movl	%ebx, %r12d
 3011 0608 E9DFFAFF 		jmp	.L234
 3011      FF
 3012              	.LVL341:
 3013 060d 0F1F00   		.p2align 4,,10
 3014              		.p2align 3
 3015              	.L254:
1819:fltk-1.3.4-1/png/pngread.c **** 
 3016              		.loc 1 1819 15 view .LVU838
 3017              	.LBE135:
 3018              	.LBB136:
 3019              	.LBB125:
 3020 0610 31DB     		xorl	%ebx, %ebx
 3021 0612 4531E4   		xorl	%r12d, %r12d
 3022 0615 4531ED   		xorl	%r13d, %r13d
 3023 0618 E955FEFF 		jmp	.L241
 3023      FF
 3024              	.LVL342:
 3025              	.L274:
1819:fltk-1.3.4-1/png/pngread.c **** 
 3026              		.loc 1 1819 15 view .LVU839
 3027              	.LBE125:
 3028              	.LBE136:
1745:fltk-1.3.4-1/png/pngread.c **** 
 3029              		.loc 1 1745 7 is_stmt 1 view .LVU840
1745:fltk-1.3.4-1/png/pngread.c **** 
 3030              		.loc 1 1745 30 is_stmt 0 view .LVU841
 3031 061d 498B01   		movq	(%r9), %rax
1745:fltk-1.3.4-1/png/pngread.c **** 
 3032              		.loc 1 1745 7 view .LVU842
 3033 0620 488D3500 		leaq	.LC7(%rip), %rsi
 3033      000000
 3034 0627 488B38   		movq	(%rax), %rdi
 3035              	.LVL343:
1745:fltk-1.3.4-1/png/pngread.c **** 
 3036              		.loc 1 1745 7 view .LVU843
 3037 062a E8000000 		call	png_error@PLT
 3037      00
 3038              	.LVL344:
1745:fltk-1.3.4-1/png/pngread.c **** 
 3039              		.loc 1 1745 7 view .LVU844
 3040              		.cfi_endproc
 3041              	.LFE67:
 3043              		.section	.text.make_ga_colormap,"ax",@progbits
 3044              		.p2align 4
 3046              	make_ga_colormap:
 3047              	.LVL345:
 3048              	.LFB70:
1950:fltk-1.3.4-1/png/pngread.c **** 
1951:fltk-1.3.4-1/png/pngread.c **** static int
1952:fltk-1.3.4-1/png/pngread.c **** make_gray_file_colormap(png_image_read_control *display)
1953:fltk-1.3.4-1/png/pngread.c **** {
1954:fltk-1.3.4-1/png/pngread.c ****    unsigned int i;
1955:fltk-1.3.4-1/png/pngread.c **** 
1956:fltk-1.3.4-1/png/pngread.c ****    for (i=0; i<256; ++i)
1957:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_FILE);
1958:fltk-1.3.4-1/png/pngread.c **** 
1959:fltk-1.3.4-1/png/pngread.c ****    return i;
1960:fltk-1.3.4-1/png/pngread.c **** }
1961:fltk-1.3.4-1/png/pngread.c **** 
1962:fltk-1.3.4-1/png/pngread.c **** static int
1963:fltk-1.3.4-1/png/pngread.c **** make_gray_colormap(png_image_read_control *display)
1964:fltk-1.3.4-1/png/pngread.c **** {
1965:fltk-1.3.4-1/png/pngread.c ****    unsigned int i;
1966:fltk-1.3.4-1/png/pngread.c **** 
1967:fltk-1.3.4-1/png/pngread.c ****    for (i=0; i<256; ++i)
1968:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
1969:fltk-1.3.4-1/png/pngread.c **** 
1970:fltk-1.3.4-1/png/pngread.c ****    return i;
1971:fltk-1.3.4-1/png/pngread.c **** }
1972:fltk-1.3.4-1/png/pngread.c **** #define PNG_GRAY_COLORMAP_ENTRIES 256
1973:fltk-1.3.4-1/png/pngread.c **** 
1974:fltk-1.3.4-1/png/pngread.c **** static int
1975:fltk-1.3.4-1/png/pngread.c **** make_ga_colormap(png_image_read_control *display)
1976:fltk-1.3.4-1/png/pngread.c **** {
 3049              		.loc 1 1976 1 is_stmt 1 view -0
 3050              		.cfi_startproc
1977:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, a;
 3051              		.loc 1 1977 4 view .LVU846
1978:fltk-1.3.4-1/png/pngread.c **** 
1979:fltk-1.3.4-1/png/pngread.c ****    /* Alpha is retained, the output will be a color-map with entries
1980:fltk-1.3.4-1/png/pngread.c ****     * selected by six levels of alpha.  One transparent entry, 6 gray
1981:fltk-1.3.4-1/png/pngread.c ****     * levels for all the intermediate alpha values, leaving 230 entries
1982:fltk-1.3.4-1/png/pngread.c ****     * for the opaque grays.  The color-map entries are the six values
1983:fltk-1.3.4-1/png/pngread.c ****     * [0..5]*51, the GA processing uses PNG_DIV51(value) to find the
1984:fltk-1.3.4-1/png/pngread.c ****     * relevant entry.
1985:fltk-1.3.4-1/png/pngread.c ****     *
1986:fltk-1.3.4-1/png/pngread.c ****     * if (alpha > 229) // opaque
1987:fltk-1.3.4-1/png/pngread.c ****     * {
1988:fltk-1.3.4-1/png/pngread.c ****     *    // The 231 entries are selected to make the math below work:
1989:fltk-1.3.4-1/png/pngread.c ****     *    base = 0;
1990:fltk-1.3.4-1/png/pngread.c ****     *    entry = (231 * gray + 128) >> 8;
1991:fltk-1.3.4-1/png/pngread.c ****     * }
1992:fltk-1.3.4-1/png/pngread.c ****     * else if (alpha < 26) // transparent
1993:fltk-1.3.4-1/png/pngread.c ****     * {
1994:fltk-1.3.4-1/png/pngread.c ****     *    base = 231;
1995:fltk-1.3.4-1/png/pngread.c ****     *    entry = 0;
1996:fltk-1.3.4-1/png/pngread.c ****     * }
1997:fltk-1.3.4-1/png/pngread.c ****     * else // partially opaque
1998:fltk-1.3.4-1/png/pngread.c ****     * {
1999:fltk-1.3.4-1/png/pngread.c ****     *    base = 226 + 6 * PNG_DIV51(alpha);
2000:fltk-1.3.4-1/png/pngread.c ****     *    entry = PNG_DIV51(gray);
2001:fltk-1.3.4-1/png/pngread.c ****     * }
2002:fltk-1.3.4-1/png/pngread.c ****     */
2003:fltk-1.3.4-1/png/pngread.c ****    i = 0;
 3052              		.loc 1 2003 4 view .LVU847
2004:fltk-1.3.4-1/png/pngread.c ****    while (i < 231)
 3053              		.loc 1 2004 4 view .LVU848
 3054              		.loc 1 2004 10 view .LVU849
1976:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, a;
 3055              		.loc 1 1976 1 is_stmt 0 view .LVU850
 3056 0000 4156     		pushq	%r14
 3057              		.cfi_def_cfa_offset 16
 3058              		.cfi_offset 14, -16
 3059 0002 4155     		pushq	%r13
 3060              		.cfi_def_cfa_offset 24
 3061              		.cfi_offset 13, -24
 3062 0004 4154     		pushq	%r12
 3063              		.cfi_def_cfa_offset 32
 3064              		.cfi_offset 12, -32
 3065 0006 55       		pushq	%rbp
 3066              		.cfi_def_cfa_offset 40
 3067              		.cfi_offset 6, -40
2003:fltk-1.3.4-1/png/pngread.c ****    while (i < 231)
 3068              		.loc 1 2003 6 view .LVU851
 3069 0007 31ED     		xorl	%ebp, %ebp
1976:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, a;
 3070              		.loc 1 1976 1 view .LVU852
 3071 0009 53       		pushq	%rbx
 3072              		.cfi_def_cfa_offset 48
 3073              		.cfi_offset 3, -48
1976:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, a;
 3074              		.loc 1 1976 1 view .LVU853
 3075 000a 4889FB   		movq	%rdi, %rbx
 3076              	.LVL346:
 3077 000d 0F1F00   		.p2align 4,,10
 3078              		.p2align 3
 3079              	.L284:
 3080              	.LBB137:
2005:fltk-1.3.4-1/png/pngread.c ****    {
2006:fltk-1.3.4-1/png/pngread.c ****       unsigned int gray = (i * 256 + 115) / 231;
 3081              		.loc 1 2006 7 is_stmt 1 view .LVU854
 3082              		.loc 1 2006 36 is_stmt 0 view .LVU855
 3083 0010 89E8     		movl	%ebp, %eax
2007:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i++, gray, gray, gray, 255, P_sRGB);
 3084              		.loc 1 2007 7 view .LVU856
 3085 0012 4883EC08 		subq	$8, %rsp
 3086              		.cfi_def_cfa_offset 56
 3087 0016 89EE     		movl	%ebp, %esi
 3088 0018 4889DF   		movq	%rbx, %rdi
2006:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i++, gray, gray, gray, 255, P_sRGB);
 3089              		.loc 1 2006 36 view .LVU857
 3090 001b C1E008   		sall	$8, %eax
 3091              		.loc 1 2007 7 view .LVU858
 3092 001e 6A01     		pushq	$1
 3093              		.cfi_def_cfa_offset 64
 3094 0020 41B9FF00 		movl	$255, %r9d
 3094      0000
 3095 0026 83C501   		addl	$1, %ebp
 3096              	.LVL347:
2006:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i++, gray, gray, gray, 255, P_sRGB);
 3097              		.loc 1 2006 36 view .LVU859
 3098 0029 8D5073   		leal	115(%rax), %edx
 3099 002c 4889D0   		movq	%rdx, %rax
2006:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i++, gray, gray, gray, 255, P_sRGB);
 3100              		.loc 1 2006 20 view .LVU860
 3101 002f 4869D205 		imulq	$464823301, %rdx, %rdx
 3101      A4B41B
 3102 0036 48C1EA20 		shrq	$32, %rdx
 3103 003a 29D0     		subl	%edx, %eax
 3104 003c D1E8     		shrl	%eax
 3105 003e 01C2     		addl	%eax, %edx
 3106 0040 C1EA07   		shrl	$7, %edx
 3107              	.LVL348:
 3108              		.loc 1 2007 7 is_stmt 1 view .LVU861
 3109              		.loc 1 2007 7 is_stmt 0 view .LVU862
 3110 0043 4189D0   		movl	%edx, %r8d
 3111 0046 89D1     		movl	%edx, %ecx
 3112 0048 E8000000 		call	png_create_colormap_entry
 3112      00
 3113              	.LVL349:
 3114              		.loc 1 2007 7 view .LVU863
 3115              	.LBE137:
2004:fltk-1.3.4-1/png/pngread.c ****    {
 3116              		.loc 1 2004 10 is_stmt 1 view .LVU864
 3117 004d 5F       		popq	%rdi
 3118              		.cfi_def_cfa_offset 56
 3119 004e 4158     		popq	%r8
 3120              		.cfi_def_cfa_offset 48
 3121 0050 81FDE700 		cmpl	$231, %ebp
 3121      0000
 3122 0056 75B8     		jne	.L284
2008:fltk-1.3.4-1/png/pngread.c ****    }
2009:fltk-1.3.4-1/png/pngread.c **** 
2010:fltk-1.3.4-1/png/pngread.c ****    /* 255 is used here for the component values for consistency with the code
2011:fltk-1.3.4-1/png/pngread.c ****     * that undoes premultiplication in pngwrite.c.
2012:fltk-1.3.4-1/png/pngread.c ****     */
2013:fltk-1.3.4-1/png/pngread.c ****    png_create_colormap_entry(display, i++, 255, 255, 255, 0, P_sRGB);
 3123              		.loc 1 2013 4 view .LVU865
 3124              	.LVL350:
 3125              		.loc 1 2013 4 is_stmt 0 view .LVU866
 3126 0058 4883EC08 		subq	$8, %rsp
 3127              		.cfi_def_cfa_offset 56
 3128 005c B9FF0000 		movl	$255, %ecx
 3128      00
 3129 0061 4531C9   		xorl	%r9d, %r9d
 3130 0064 4889DF   		movq	%rbx, %rdi
 3131 0067 6A01     		pushq	$1
 3132              		.cfi_def_cfa_offset 64
 3133 0069 BEE70000 		movl	$231, %esi
 3133      00
 3134 006e BAFF0000 		movl	$255, %edx
 3134      00
 3135 0073 41B8FF00 		movl	$255, %r8d
 3135      0000
 3136 0079 41BD3300 		movl	$51, %r13d
 3136      0000
 3137 007f 41BEE800 		movl	$232, %r14d
 3137      0000
 3138 0085 E8000000 		call	png_create_colormap_entry
 3138      00
 3139              	.LVL351:
2014:fltk-1.3.4-1/png/pngread.c **** 
2015:fltk-1.3.4-1/png/pngread.c ****    for (a=1; a<5; ++a)
 3140              		.loc 1 2015 4 is_stmt 1 view .LVU867
 3141              		.loc 1 2015 14 view .LVU868
2013:fltk-1.3.4-1/png/pngread.c **** 
 3142              		.loc 1 2013 4 is_stmt 0 view .LVU869
 3143 008a 59       		popq	%rcx
 3144              		.cfi_def_cfa_offset 56
 3145 008b 5E       		popq	%rsi
 3146              		.cfi_def_cfa_offset 48
 3147              	.LVL352:
 3148              	.L285:
 3149              	.LBB138:
2016:fltk-1.3.4-1/png/pngread.c ****    {
2017:fltk-1.3.4-1/png/pngread.c ****       unsigned int g;
2018:fltk-1.3.4-1/png/pngread.c **** 
2019:fltk-1.3.4-1/png/pngread.c ****       for (g=0; g<6; ++g)
 3150              		.loc 1 2019 17 is_stmt 1 view .LVU870
 3151              	.LBE138:
2003:fltk-1.3.4-1/png/pngread.c ****    while (i < 231)
 3152              		.loc 1 2003 6 is_stmt 0 view .LVU871
 3153 008c 4589F4   		movl	%r14d, %r12d
 3154 008f 31ED     		xorl	%ebp, %ebp
 3155              	.LVL353:
 3156              		.p2align 4,,10
 3157 0091 0F1F8000 		.p2align 3
 3157      000000
 3158              	.L286:
 3159              	.LBB139:
2020:fltk-1.3.4-1/png/pngread.c ****          png_create_colormap_entry(display, i++, g*51, g*51, g*51, a*51,
 3160              		.loc 1 2020 10 is_stmt 1 discriminator 3 view .LVU872
 3161 0098 4883EC08 		subq	$8, %rsp
 3162              		.cfi_def_cfa_offset 56
 3163 009c 89EA     		movl	%ebp, %edx
 3164 009e 4489E6   		movl	%r12d, %esi
 3165 00a1 4189E8   		movl	%ebp, %r8d
 3166 00a4 6A01     		pushq	$1
 3167              		.cfi_def_cfa_offset 64
 3168 00a6 89E9     		movl	%ebp, %ecx
 3169 00a8 4589E9   		movl	%r13d, %r9d
 3170 00ab 4889DF   		movq	%rbx, %rdi
 3171 00ae 83C533   		addl	$51, %ebp
 3172 00b1 4183C401 		addl	$1, %r12d
 3173              	.LVL354:
 3174              		.loc 1 2020 10 is_stmt 0 discriminator 3 view .LVU873
 3175 00b5 E8000000 		call	png_create_colormap_entry
 3175      00
 3176              	.LVL355:
2019:fltk-1.3.4-1/png/pngread.c ****          png_create_colormap_entry(display, i++, g*51, g*51, g*51, a*51,
 3177              		.loc 1 2019 22 is_stmt 1 discriminator 3 view .LVU874
2019:fltk-1.3.4-1/png/pngread.c ****          png_create_colormap_entry(display, i++, g*51, g*51, g*51, a*51,
 3178              		.loc 1 2019 17 discriminator 3 view .LVU875
2019:fltk-1.3.4-1/png/pngread.c ****          png_create_colormap_entry(display, i++, g*51, g*51, g*51, a*51,
 3179              		.loc 1 2019 7 is_stmt 0 discriminator 3 view .LVU876
 3180 00ba 58       		popq	%rax
 3181              		.cfi_def_cfa_offset 56
 3182 00bb 5A       		popq	%rdx
 3183              		.cfi_def_cfa_offset 48
 3184 00bc 81FD3201 		cmpl	$306, %ebp
 3184      0000
 3185 00c2 75D4     		jne	.L286
 3186 00c4 4183C606 		addl	$6, %r14d
 3187              	.LVL356:
2019:fltk-1.3.4-1/png/pngread.c ****          png_create_colormap_entry(display, i++, g*51, g*51, g*51, a*51,
 3188              		.loc 1 2019 7 discriminator 3 view .LVU877
 3189              	.LBE139:
2015:fltk-1.3.4-1/png/pngread.c ****    {
 3190              		.loc 1 2015 19 is_stmt 1 discriminator 2 view .LVU878
2015:fltk-1.3.4-1/png/pngread.c ****    {
 3191              		.loc 1 2015 14 discriminator 2 view .LVU879
 3192 00c8 4183C533 		addl	$51, %r13d
2015:fltk-1.3.4-1/png/pngread.c ****    {
 3193              		.loc 1 2015 4 is_stmt 0 discriminator 2 view .LVU880
 3194 00cc 4181FE00 		cmpl	$256, %r14d
 3194      010000
 3195 00d3 75B7     		jne	.L285
2021:fltk-1.3.4-1/png/pngread.c ****             P_sRGB);
2022:fltk-1.3.4-1/png/pngread.c ****    }
2023:fltk-1.3.4-1/png/pngread.c **** 
2024:fltk-1.3.4-1/png/pngread.c ****    return i;
 3196              		.loc 1 2024 4 is_stmt 1 view .LVU881
2025:fltk-1.3.4-1/png/pngread.c **** }
 3197              		.loc 1 2025 1 is_stmt 0 view .LVU882
 3198 00d5 5B       		popq	%rbx
 3199              		.cfi_def_cfa_offset 40
 3200              	.LVL357:
 3201              		.loc 1 2025 1 view .LVU883
 3202 00d6 B8000100 		movl	$256, %eax
 3202      00
 3203 00db 5D       		popq	%rbp
 3204              		.cfi_def_cfa_offset 32
 3205 00dc 415C     		popq	%r12
 3206              		.cfi_def_cfa_offset 24
 3207              	.LVL358:
 3208              		.loc 1 2025 1 view .LVU884
 3209 00de 415D     		popq	%r13
 3210              		.cfi_def_cfa_offset 16
 3211 00e0 415E     		popq	%r14
 3212              		.cfi_def_cfa_offset 8
 3213              	.LVL359:
 3214              		.loc 1 2025 1 view .LVU885
 3215 00e2 C3       		ret
 3216              		.cfi_endproc
 3217              	.LFE70:
 3219              		.section	.text.make_gray_colormap,"ax",@progbits
 3220              		.p2align 4
 3222              	make_gray_colormap:
 3223              	.LVL360:
 3224              	.LFB69:
1964:fltk-1.3.4-1/png/pngread.c ****    unsigned int i;
 3225              		.loc 1 1964 1 is_stmt 1 view -0
 3226              		.cfi_startproc
1965:fltk-1.3.4-1/png/pngread.c **** 
 3227              		.loc 1 1965 4 view .LVU887
1967:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
 3228              		.loc 1 1967 4 view .LVU888
1967:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
 3229              		.loc 1 1967 14 view .LVU889
1964:fltk-1.3.4-1/png/pngread.c ****    unsigned int i;
 3230              		.loc 1 1964 1 is_stmt 0 view .LVU890
 3231 0000 55       		pushq	%rbp
 3232              		.cfi_def_cfa_offset 16
 3233              		.cfi_offset 6, -16
 3234 0001 4889FD   		movq	%rdi, %rbp
 3235 0004 53       		pushq	%rbx
 3236              		.cfi_def_cfa_offset 24
 3237              		.cfi_offset 3, -24
1967:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
 3238              		.loc 1 1967 10 view .LVU891
 3239 0005 31DB     		xorl	%ebx, %ebx
1964:fltk-1.3.4-1/png/pngread.c ****    unsigned int i;
 3240              		.loc 1 1964 1 view .LVU892
 3241 0007 4883EC08 		subq	$8, %rsp
 3242              		.cfi_def_cfa_offset 32
 3243              	.LVL361:
 3244 000b 0F1F4400 		.p2align 4,,10
 3244      00
 3245              		.p2align 3
 3246              	.L292:
1968:fltk-1.3.4-1/png/pngread.c **** 
 3247              		.loc 1 1968 7 is_stmt 1 discriminator 3 view .LVU893
 3248 0010 4883EC08 		subq	$8, %rsp
 3249              		.cfi_def_cfa_offset 40
 3250 0014 89DA     		movl	%ebx, %edx
 3251 0016 4189D8   		movl	%ebx, %r8d
 3252 0019 89D9     		movl	%ebx, %ecx
 3253 001b 6A01     		pushq	$1
 3254              		.cfi_def_cfa_offset 48
 3255 001d 89DE     		movl	%ebx, %esi
 3256 001f 41B9FF00 		movl	$255, %r9d
 3256      0000
 3257 0025 4889EF   		movq	%rbp, %rdi
1967:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
 3258              		.loc 1 1967 21 is_stmt 0 discriminator 3 view .LVU894
 3259 0028 83C301   		addl	$1, %ebx
 3260              	.LVL362:
1968:fltk-1.3.4-1/png/pngread.c **** 
 3261              		.loc 1 1968 7 discriminator 3 view .LVU895
 3262 002b E8000000 		call	png_create_colormap_entry
 3262      00
 3263              	.LVL363:
1967:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
 3264              		.loc 1 1967 21 is_stmt 1 discriminator 3 view .LVU896
1967:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
 3265              		.loc 1 1967 14 discriminator 3 view .LVU897
1967:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_sRGB);
 3266              		.loc 1 1967 4 is_stmt 0 discriminator 3 view .LVU898
 3267 0030 58       		popq	%rax
 3268              		.cfi_def_cfa_offset 40
 3269 0031 5A       		popq	%rdx
 3270              		.cfi_def_cfa_offset 32
 3271 0032 81FB0001 		cmpl	$256, %ebx
 3271      0000
 3272 0038 75D6     		jne	.L292
1970:fltk-1.3.4-1/png/pngread.c **** }
 3273              		.loc 1 1970 4 is_stmt 1 view .LVU899
1971:fltk-1.3.4-1/png/pngread.c **** #define PNG_GRAY_COLORMAP_ENTRIES 256
 3274              		.loc 1 1971 1 is_stmt 0 view .LVU900
 3275 003a 4883C408 		addq	$8, %rsp
 3276              		.cfi_def_cfa_offset 24
 3277 003e B8000100 		movl	$256, %eax
 3277      00
 3278 0043 5B       		popq	%rbx
 3279              		.cfi_def_cfa_offset 16
 3280              	.LVL364:
1971:fltk-1.3.4-1/png/pngread.c **** #define PNG_GRAY_COLORMAP_ENTRIES 256
 3281              		.loc 1 1971 1 view .LVU901
 3282 0044 5D       		popq	%rbp
 3283              		.cfi_def_cfa_offset 8
 3284              	.LVL365:
1971:fltk-1.3.4-1/png/pngread.c **** #define PNG_GRAY_COLORMAP_ENTRIES 256
 3285              		.loc 1 1971 1 view .LVU902
 3286 0045 C3       		ret
 3287              		.cfi_endproc
 3288              	.LFE69:
 3290              		.section	.text.make_rgb_colormap,"ax",@progbits
 3291              		.p2align 4
 3293              	make_rgb_colormap:
 3294              	.LVL366:
 3295              	.LFB71:
2026:fltk-1.3.4-1/png/pngread.c **** 
2027:fltk-1.3.4-1/png/pngread.c **** #define PNG_GA_COLORMAP_ENTRIES 256
2028:fltk-1.3.4-1/png/pngread.c **** 
2029:fltk-1.3.4-1/png/pngread.c **** static int
2030:fltk-1.3.4-1/png/pngread.c **** make_rgb_colormap(png_image_read_control *display)
2031:fltk-1.3.4-1/png/pngread.c **** {
 3296              		.loc 1 2031 1 is_stmt 1 view -0
 3297              		.cfi_startproc
2032:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, r;
 3298              		.loc 1 2032 4 view .LVU904
2033:fltk-1.3.4-1/png/pngread.c **** 
2034:fltk-1.3.4-1/png/pngread.c ****    /* Build a 6x6x6 opaque RGB cube */
2035:fltk-1.3.4-1/png/pngread.c ****    for (i=r=0; r<6; ++r)
 3299              		.loc 1 2035 4 view .LVU905
 3300              		.loc 1 2035 16 view .LVU906
2031:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, r;
 3301              		.loc 1 2031 1 is_stmt 0 view .LVU907
 3302 0000 4157     		pushq	%r15
 3303              		.cfi_def_cfa_offset 16
 3304              		.cfi_offset 15, -16
 3305 0002 4156     		pushq	%r14
 3306              		.cfi_def_cfa_offset 24
 3307              		.cfi_offset 14, -24
 3308 0004 4155     		pushq	%r13
 3309              		.cfi_def_cfa_offset 32
 3310              		.cfi_offset 13, -32
 3311 0006 4989FD   		movq	%rdi, %r13
 3312 0009 4154     		pushq	%r12
 3313              		.cfi_def_cfa_offset 40
 3314              		.cfi_offset 12, -40
 3315 000b 4531E4   		xorl	%r12d, %r12d
 3316 000e 55       		pushq	%rbp
 3317              		.cfi_def_cfa_offset 48
 3318              		.cfi_offset 6, -48
 3319 000f 53       		pushq	%rbx
 3320              		.cfi_def_cfa_offset 56
 3321              		.cfi_offset 3, -56
 3322 0010 4883EC18 		subq	$24, %rsp
 3323              		.cfi_def_cfa_offset 80
 3324              		.loc 1 2035 10 view .LVU908
 3325 0014 C744240C 		movl	$0, 12(%rsp)
 3325      00000000 
 3326              	.LVL367:
 3327 001c 0F1F4000 		.p2align 4,,10
 3328              		.p2align 3
 3329              	.L296:
 3330              	.LBB140:
2036:fltk-1.3.4-1/png/pngread.c ****    {
2037:fltk-1.3.4-1/png/pngread.c ****       unsigned int g;
2038:fltk-1.3.4-1/png/pngread.c **** 
2039:fltk-1.3.4-1/png/pngread.c ****       for (g=0; g<6; ++g)
 3331              		.loc 1 2039 17 is_stmt 1 view .LVU909
 3332              	.LBE140:
2031:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, r;
 3333              		.loc 1 2031 1 is_stmt 0 view .LVU910
 3334 0020 448B7424 		movl	12(%rsp), %r14d
 3334      0C
 3335 0025 4531FF   		xorl	%r15d, %r15d
 3336              	.LVL368:
 3337 0028 0F1F8400 		.p2align 4,,10
 3337      00000000 
 3338              		.p2align 3
 3339              	.L300:
 3340              	.LBB143:
 3341              	.LBB141:
2040:fltk-1.3.4-1/png/pngread.c ****       {
2041:fltk-1.3.4-1/png/pngread.c ****          unsigned int b;
2042:fltk-1.3.4-1/png/pngread.c **** 
2043:fltk-1.3.4-1/png/pngread.c ****          for (b=0; b<6; ++b)
 3342              		.loc 1 2043 20 is_stmt 1 view .LVU911
 3343              	.LBE141:
 3344              	.LBE143:
2031:fltk-1.3.4-1/png/pngread.c ****    unsigned int i, r;
 3345              		.loc 1 2031 1 is_stmt 0 view .LVU912
 3346 0030 4489F5   		movl	%r14d, %ebp
 3347 0033 31DB     		xorl	%ebx, %ebx
 3348              	.LVL369:
 3349              		.p2align 4,,10
 3350 0035 0F1F00   		.p2align 3
 3351              	.L297:
 3352              	.LBB144:
 3353              	.LBB142:
2044:fltk-1.3.4-1/png/pngread.c ****             png_create_colormap_entry(display, i++, r*51, g*51, b*51, 255,
 3354              		.loc 1 2044 13 is_stmt 1 discriminator 3 view .LVU913
 3355 0038 4883EC08 		subq	$8, %rsp
 3356              		.cfi_def_cfa_offset 88
 3357 003c 89EE     		movl	%ebp, %esi
 3358 003e 4189D8   		movl	%ebx, %r8d
 3359 0041 4489E2   		movl	%r12d, %edx
 3360 0044 6A01     		pushq	$1
 3361              		.cfi_def_cfa_offset 96
 3362 0046 41B9FF00 		movl	$255, %r9d
 3362      0000
 3363 004c 4489F9   		movl	%r15d, %ecx
 3364 004f 4C89EF   		movq	%r13, %rdi
 3365 0052 83C333   		addl	$51, %ebx
 3366 0055 83C501   		addl	$1, %ebp
 3367              	.LVL370:
 3368              		.loc 1 2044 13 is_stmt 0 discriminator 3 view .LVU914
 3369 0058 E8000000 		call	png_create_colormap_entry
 3369      00
 3370              	.LVL371:
2043:fltk-1.3.4-1/png/pngread.c ****             png_create_colormap_entry(display, i++, r*51, g*51, b*51, 255,
 3371              		.loc 1 2043 25 is_stmt 1 discriminator 3 view .LVU915
2043:fltk-1.3.4-1/png/pngread.c ****             png_create_colormap_entry(display, i++, r*51, g*51, b*51, 255,
 3372              		.loc 1 2043 20 discriminator 3 view .LVU916
2043:fltk-1.3.4-1/png/pngread.c ****             png_create_colormap_entry(display, i++, r*51, g*51, b*51, 255,
 3373              		.loc 1 2043 10 is_stmt 0 discriminator 3 view .LVU917
 3374 005d 58       		popq	%rax
 3375              		.cfi_def_cfa_offset 88
 3376 005e 5A       		popq	%rdx
 3377              		.cfi_def_cfa_offset 80
 3378 005f 81FB3201 		cmpl	$306, %ebx
 3378      0000
 3379 0065 75D1     		jne	.L297
 3380 0067 4183C733 		addl	$51, %r15d
 3381 006b 4183C606 		addl	$6, %r14d
 3382              	.LVL372:
2043:fltk-1.3.4-1/png/pngread.c ****             png_create_colormap_entry(display, i++, r*51, g*51, b*51, 255,
 3383              		.loc 1 2043 10 discriminator 3 view .LVU918
 3384              	.LBE142:
2039:fltk-1.3.4-1/png/pngread.c ****       {
 3385              		.loc 1 2039 22 is_stmt 1 discriminator 2 view .LVU919
2039:fltk-1.3.4-1/png/pngread.c ****       {
 3386              		.loc 1 2039 17 discriminator 2 view .LVU920
2039:fltk-1.3.4-1/png/pngread.c ****       {
 3387              		.loc 1 2039 7 is_stmt 0 discriminator 2 view .LVU921
 3388 006f 4181FF32 		cmpl	$306, %r15d
 3388      010000
 3389 0076 75B8     		jne	.L300
 3390              	.LBE144:
2035:fltk-1.3.4-1/png/pngread.c ****    {
 3391              		.loc 1 2035 21 is_stmt 1 discriminator 2 view .LVU922
 3392 0078 8344240C 		addl	$36, 12(%rsp)
 3392      24
 3393 007d 8B44240C 		movl	12(%rsp), %eax
 3394              	.LVL373:
2035:fltk-1.3.4-1/png/pngread.c ****    {
 3395              		.loc 1 2035 16 discriminator 2 view .LVU923
 3396 0081 4183C433 		addl	$51, %r12d
2035:fltk-1.3.4-1/png/pngread.c ****    {
 3397              		.loc 1 2035 4 is_stmt 0 discriminator 2 view .LVU924
 3398 0085 3DD80000 		cmpl	$216, %eax
 3398      00
 3399 008a 7594     		jne	.L296
2045:fltk-1.3.4-1/png/pngread.c ****                P_sRGB);
2046:fltk-1.3.4-1/png/pngread.c ****       }
2047:fltk-1.3.4-1/png/pngread.c ****    }
2048:fltk-1.3.4-1/png/pngread.c **** 
2049:fltk-1.3.4-1/png/pngread.c ****    return i;
 3400              		.loc 1 2049 4 is_stmt 1 view .LVU925
2050:fltk-1.3.4-1/png/pngread.c **** }
 3401              		.loc 1 2050 1 is_stmt 0 view .LVU926
 3402 008c 4883C418 		addq	$24, %rsp
 3403              		.cfi_def_cfa_offset 56
 3404 0090 B8D80000 		movl	$216, %eax
 3404      00
 3405              	.LVL374:
 3406              		.loc 1 2050 1 view .LVU927
 3407 0095 5B       		popq	%rbx
 3408              		.cfi_def_cfa_offset 48
 3409 0096 5D       		popq	%rbp
 3410              		.cfi_def_cfa_offset 40
 3411              	.LVL375:
 3412              		.loc 1 2050 1 view .LVU928
 3413 0097 415C     		popq	%r12
 3414              		.cfi_def_cfa_offset 32
 3415 0099 415D     		popq	%r13
 3416              		.cfi_def_cfa_offset 24
 3417              	.LVL376:
 3418              		.loc 1 2050 1 view .LVU929
 3419 009b 415E     		popq	%r14
 3420              		.cfi_def_cfa_offset 16
 3421 009d 415F     		popq	%r15
 3422              		.cfi_def_cfa_offset 8
 3423 009f C3       		ret
 3424              		.cfi_endproc
 3425              	.LFE71:
 3427              		.section	.rodata.png_image_read_colormap.str1.8,"aMS",@progbits,1
 3428              		.align 8
 3429              	.LC9:
 3430 0000 61206261 		.string	"a background color must be supplied to remove alpha/transparency"
 3430      636B6772 
 3430      6F756E64 
 3430      20636F6C 
 3430      6F72206D 
 3431 0041 00000000 		.align 8
 3431      000000
 3432              	.LC10:
 3433 0048 67726179 		.string	"gray[8] color-map: too few entries"
 3433      5B385D20 
 3433      636F6C6F 
 3433      722D6D61 
 3433      703A2074 
 3434 006b 00000000 		.align 8
 3434      00
 3435              	.LC11:
 3436 0070 67726179 		.string	"gray[16] color-map: too few entries"
 3436      5B31365D 
 3436      20636F6C 
 3436      6F722D6D 
 3436      61703A20 
 3437 0094 00000000 		.align 8
 3438              	.LC12:
 3439 0098 67726179 		.string	"gray+alpha color-map: too few entries"
 3439      2B616C70 
 3439      68612063 
 3439      6F6C6F72 
 3439      2D6D6170 
 3440 00be 0000     		.align 8
 3441              	.LC13:
 3442 00c0 67726179 		.string	"gray-alpha color-map: too few entries"
 3442      2D616C70 
 3442      68612063 
 3442      6F6C6F72 
 3442      2D6D6170 
 3443 00e6 0000     		.align 8
 3444              	.LC14:
 3445 00e8 67612D61 		.string	"ga-alpha color-map: too few entries"
 3445      6C706861 
 3445      20636F6C 
 3445      6F722D6D 
 3445      61703A20 
 3446 010c 00000000 		.align 8
 3447              	.LC15:
 3448 0110 7267625B 		.string	"rgb[ga] color-map: too few entries"
 3448      67615D20 
 3448      636F6C6F 
 3448      722D6D61 
 3448      703A2074 
 3449 0133 00000000 		.align 8
 3449      00
 3450              	.LC16:
 3451 0138 7267625B 		.string	"rgb[gray] color-map: too few entries"
 3451      67726179 
 3451      5D20636F 
 3451      6C6F722D 
 3451      6D61703A 
 3452 015d 000000   		.align 8
 3453              	.LC17:
 3454 0160 7267622B 		.string	"rgb+alpha color-map: too few entries"
 3454      616C7068 
 3454      6120636F 
 3454      6C6F722D 
 3454      6D61703A 
 3455 0185 000000   		.align 8
 3456              	.LC18:
 3457 0188 7267622D 		.string	"rgb-alpha color-map: too few entries"
 3457      616C7068 
 3457      6120636F 
 3457      6C6F722D 
 3457      6D61703A 
 3458 01ad 000000   		.align 8
 3459              	.LC19:
 3460 01b0 72676220 		.string	"rgb color-map: too few entries"
 3460      636F6C6F 
 3460      722D6D61 
 3460      703A2074 
 3460      6F6F2066 
 3461 01cf 00       		.align 8
 3462              	.LC20:
 3463 01d0 70616C65 		.string	"palette color-map: too few entries"
 3463      74746520 
 3463      636F6C6F 
 3463      722D6D61 
 3463      703A2074 
 3464              		.section	.rodata.png_image_read_colormap.str1.1,"aMS",@progbits,1
 3465              	.LC21:
 3466 0000 696E7661 		.string	"invalid PNG color type"
 3466      6C696420 
 3466      504E4720 
 3466      636F6C6F 
 3466      72207479 
 3467              		.section	.rodata.png_image_read_colormap.str1.8
 3468 01f3 00000000 		.align 8
 3468      00
 3469              	.LC22:
 3470 01f8 62616420 		.string	"bad data option (internal error)"
 3470      64617461 
 3470      206F7074 
 3470      696F6E20 
 3470      28696E74 
 3471 0219 00000000 		.align 8
 3471      000000
 3472              	.LC23:
 3473 0220 636F6C6F 		.string	"color map overflow (BAD internal error)"
 3473      72206D61 
 3473      70206F76 
 3473      6572666C 
 3473      6F772028 
 3474              		.align 8
 3475              	.LC24:
 3476 0248 62616420 		.string	"bad background index (internal error)"
 3476      6261636B 
 3476      67726F75 
 3476      6E642069 
 3476      6E646578 
 3477              		.section	.text.png_image_read_colormap,"ax",@progbits
 3478              		.p2align 4
 3480              	png_image_read_colormap:
 3481              	.LVL377:
 3482              	.LFB72:
2051:fltk-1.3.4-1/png/pngread.c **** 
2052:fltk-1.3.4-1/png/pngread.c **** #define PNG_RGB_COLORMAP_ENTRIES 216
2053:fltk-1.3.4-1/png/pngread.c **** 
2054:fltk-1.3.4-1/png/pngread.c **** /* Return a palette index to the above palette given three 8-bit sRGB values. */
2055:fltk-1.3.4-1/png/pngread.c **** #define PNG_RGB_INDEX(r,g,b) \
2056:fltk-1.3.4-1/png/pngread.c ****    ((png_byte)(6 * (6 * PNG_DIV51(r) + PNG_DIV51(g)) + PNG_DIV51(b)))
2057:fltk-1.3.4-1/png/pngread.c **** 
2058:fltk-1.3.4-1/png/pngread.c **** static int
2059:fltk-1.3.4-1/png/pngread.c **** png_image_read_colormap(png_voidp argument)
2060:fltk-1.3.4-1/png/pngread.c **** {
 3483              		.loc 1 2060 1 is_stmt 1 view -0
 3484              		.cfi_startproc
 3485              		.loc 1 2060 1 is_stmt 0 view .LVU931
 3486 0000 F30F1EFA 		endbr64
 3487 0004 4157     		pushq	%r15
 3488              		.cfi_def_cfa_offset 16
 3489              		.cfi_offset 15, -16
 3490 0006 4156     		pushq	%r14
 3491              		.cfi_def_cfa_offset 24
 3492              		.cfi_offset 14, -24
 3493 0008 4155     		pushq	%r13
 3494              		.cfi_def_cfa_offset 32
 3495              		.cfi_offset 13, -32
 3496 000a 4154     		pushq	%r12
 3497              		.cfi_def_cfa_offset 40
 3498              		.cfi_offset 12, -40
 3499 000c 55       		pushq	%rbp
 3500              		.cfi_def_cfa_offset 48
 3501              		.cfi_offset 6, -48
 3502 000d 4889FD   		movq	%rdi, %rbp
 3503 0010 53       		pushq	%rbx
 3504              		.cfi_def_cfa_offset 56
 3505              		.cfi_offset 3, -56
 3506 0011 4883EC68 		subq	$104, %rsp
 3507              		.cfi_def_cfa_offset 160
2061:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display =
2062:fltk-1.3.4-1/png/pngread.c ****       png_voidcast(png_image_read_control*, argument);
2063:fltk-1.3.4-1/png/pngread.c ****    const png_imagep image = display->image;
 3508              		.loc 1 2063 21 view .LVU932
 3509 0015 488B3F   		movq	(%rdi), %rdi
 3510              	.LVL378:
2060:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display =
 3511              		.loc 1 2060 1 view .LVU933
 3512 0018 64488B04 		movq	%fs:40, %rax
 3512      25280000 
 3512      00
 3513 0021 48894424 		movq	%rax, 88(%rsp)
 3513      58
 3514 0026 31C0     		xorl	%eax, %eax
2061:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display =
 3515              		.loc 1 2061 4 is_stmt 1 view .LVU934
 3516              		.loc 1 2063 4 view .LVU935
2064:fltk-1.3.4-1/png/pngread.c **** 
2065:fltk-1.3.4-1/png/pngread.c ****    const png_structrp png_ptr = image->opaque->png_ptr;
 3517              		.loc 1 2065 23 is_stmt 0 view .LVU936
 3518 0028 488B07   		movq	(%rdi), %rax
2066:fltk-1.3.4-1/png/pngread.c ****    const png_uint_32 output_format = image->format;
 3519              		.loc 1 2066 22 view .LVU937
 3520 002b 448B4714 		movl	20(%rdi), %r8d
2063:fltk-1.3.4-1/png/pngread.c **** 
 3521              		.loc 1 2063 21 view .LVU938
 3522 002f 48897C24 		movq	%rdi, 24(%rsp)
 3522      18
 3523              	.LVL379:
2065:fltk-1.3.4-1/png/pngread.c ****    const png_uint_32 output_format = image->format;
 3524              		.loc 1 2065 4 is_stmt 1 view .LVU939
2065:fltk-1.3.4-1/png/pngread.c ****    const png_uint_32 output_format = image->format;
 3525              		.loc 1 2065 23 is_stmt 0 view .LVU940
 3526 0034 488B00   		movq	(%rax), %rax
 3527 0037 0FB68877 		movzbl	631(%rax), %ecx
 3527      020000
 3528 003e 48890424 		movq	%rax, (%rsp)
 3529              	.LVL380:
 3530              		.loc 1 2066 4 is_stmt 1 view .LVU941
2067:fltk-1.3.4-1/png/pngread.c ****    const int output_encoding = (output_format & PNG_FORMAT_FLAG_LINEAR) != 0 ?
 3531              		.loc 1 2067 4 view .LVU942
 3532 0042 89C8     		movl	%ecx, %eax
 3533              	.LVL381:
 3534              		.loc 1 2067 4 is_stmt 0 view .LVU943
 3535 0044 83E004   		andl	$4, %eax
2068:fltk-1.3.4-1/png/pngread.c ****       P_LINEAR : P_sRGB;
 3536              		.loc 1 2068 16 view .LVU944
 3537 0047 41F6C004 		testb	$4, %r8b
 3538 004b 0F849F00 		je	.L304
 3538      0000
 3539              	.LVL382:
2069:fltk-1.3.4-1/png/pngread.c **** 
2070:fltk-1.3.4-1/png/pngread.c ****    unsigned int cmap_entries;
 3540              		.loc 1 2070 4 is_stmt 1 view .LVU945
2071:fltk-1.3.4-1/png/pngread.c ****    unsigned int output_processing;        /* Output processing option */
 3541              		.loc 1 2071 4 view .LVU946
2072:fltk-1.3.4-1/png/pngread.c ****    unsigned int data_encoding = P_NOTSET; /* Encoding libpng must produce */
 3542              		.loc 1 2072 4 view .LVU947
2073:fltk-1.3.4-1/png/pngread.c **** 
2074:fltk-1.3.4-1/png/pngread.c ****    /* Background information; the background color and the index of this color
2075:fltk-1.3.4-1/png/pngread.c ****     * in the color-map if it exists (else 256).
2076:fltk-1.3.4-1/png/pngread.c ****     */
2077:fltk-1.3.4-1/png/pngread.c ****    unsigned int background_index = 256;
 3543              		.loc 1 2077 4 view .LVU948
2078:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 back_r, back_g, back_b;
 3544              		.loc 1 2078 4 view .LVU949
2079:fltk-1.3.4-1/png/pngread.c **** 
2080:fltk-1.3.4-1/png/pngread.c ****    /* Flags to accumulate things that need to be done to the input. */
2081:fltk-1.3.4-1/png/pngread.c ****    int expand_tRNS = 0;
 3545              		.loc 1 2081 4 view .LVU950
2082:fltk-1.3.4-1/png/pngread.c **** 
2083:fltk-1.3.4-1/png/pngread.c ****    /* Exclude the NYI feature of compositing onto a color-mapped buffer; it is
2084:fltk-1.3.4-1/png/pngread.c ****     * very difficult to do, the results look awful, and it is difficult to see
2085:fltk-1.3.4-1/png/pngread.c ****     * what possible use it is because the application can't control the
2086:fltk-1.3.4-1/png/pngread.c ****     * color-map.
2087:fltk-1.3.4-1/png/pngread.c ****     */
2088:fltk-1.3.4-1/png/pngread.c ****    if (((png_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0 ||
 3546              		.loc 1 2088 4 view .LVU951
 3547              		.loc 1 2088 7 is_stmt 0 view .LVU952
 3548 0051 84C0     		testb	%al, %al
 3549 0053 0F840701 		je	.L305
 3549      0000
 3550              	.L406:
2089:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_trans > 0) /* alpha in input */ &&
 3551              		.loc 1 2089 55 view .LVU953
 3552 0059 4489C0   		movl	%r8d, %eax
 3553 005c 83E001   		andl	$1, %eax
 3554 005f 89442408 		movl	%eax, 8(%rsp)
 3555 0063 0F850901 		jne	.L494
 3555      0000
2090:fltk-1.3.4-1/png/pngread.c ****       ((output_format & PNG_FORMAT_FLAG_ALPHA) == 0) /* no alpha in output */)
2091:fltk-1.3.4-1/png/pngread.c ****    {
2092:fltk-1.3.4-1/png/pngread.c ****       if (output_encoding == P_LINEAR) /* compose on black */
2093:fltk-1.3.4-1/png/pngread.c ****          back_b = back_g = back_r = 0;
 3556              		.loc 1 2093 17 view .LVU954
 3557 0069 C7442414 		movl	$0, 20(%rsp)
 3557      00000000 
 3558              		.loc 1 2093 26 view .LVU955
 3559 0071 4531FF   		xorl	%r15d, %r15d
2068:fltk-1.3.4-1/png/pngread.c **** 
 3560              		.loc 1 2068 16 view .LVU956
 3561 0074 41BE0200 		movl	$2, %r14d
 3561      0000
 3562              	.LVL383:
 3563 007a 660F1F44 		.p2align 4,,10
 3563      0000
 3564              		.p2align 3
 3565              	.L306:
2094:fltk-1.3.4-1/png/pngread.c **** 
2095:fltk-1.3.4-1/png/pngread.c ****       else if (display->background == NULL /* no way to remove it */)
2096:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr,
2097:fltk-1.3.4-1/png/pngread.c ****             "a background color must be supplied to remove alpha/transparency");
2098:fltk-1.3.4-1/png/pngread.c **** 
2099:fltk-1.3.4-1/png/pngread.c ****       /* Get a copy of the background color (this avoids repeating the checks
2100:fltk-1.3.4-1/png/pngread.c ****        * below.)  The encoding is 8-bit sRGB or 16-bit linear, depending on the
2101:fltk-1.3.4-1/png/pngread.c ****        * output format.
2102:fltk-1.3.4-1/png/pngread.c ****        */
2103:fltk-1.3.4-1/png/pngread.c ****       else
2104:fltk-1.3.4-1/png/pngread.c ****       {
2105:fltk-1.3.4-1/png/pngread.c ****          back_g = display->background->green;
2106:fltk-1.3.4-1/png/pngread.c ****          if ((output_format & PNG_FORMAT_FLAG_COLOR) != 0)
2107:fltk-1.3.4-1/png/pngread.c ****          {
2108:fltk-1.3.4-1/png/pngread.c ****             back_r = display->background->red;
2109:fltk-1.3.4-1/png/pngread.c ****             back_b = display->background->blue;
2110:fltk-1.3.4-1/png/pngread.c ****          }
2111:fltk-1.3.4-1/png/pngread.c ****          else
2112:fltk-1.3.4-1/png/pngread.c ****             back_b = back_r = back_g;
2113:fltk-1.3.4-1/png/pngread.c ****       }
2114:fltk-1.3.4-1/png/pngread.c ****    }
2115:fltk-1.3.4-1/png/pngread.c **** 
2116:fltk-1.3.4-1/png/pngread.c ****    else if (output_encoding == P_LINEAR)
2117:fltk-1.3.4-1/png/pngread.c ****       back_b = back_r = back_g = 65535;
2118:fltk-1.3.4-1/png/pngread.c **** 
2119:fltk-1.3.4-1/png/pngread.c ****    else
2120:fltk-1.3.4-1/png/pngread.c ****       back_b = back_r = back_g = 255;
2121:fltk-1.3.4-1/png/pngread.c **** 
2122:fltk-1.3.4-1/png/pngread.c ****    /* Default the input file gamma if required - this is necessary because
2123:fltk-1.3.4-1/png/pngread.c ****     * libpng assumes that if no gamma information is present the data is in the
2124:fltk-1.3.4-1/png/pngread.c ****     * output format, but the simplified API deduces the gamma from the input
2125:fltk-1.3.4-1/png/pngread.c ****     * format.
2126:fltk-1.3.4-1/png/pngread.c ****     */
2127:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_GAMMA) == 0)
 3566              		.loc 1 2127 4 is_stmt 1 view .LVU957
 3567              		.loc 1 2127 28 is_stmt 0 view .LVU958
 3568 0080 488B3C24 		movq	(%rsp), %rdi
 3569              	.LVL384:
 3570              		.loc 1 2127 28 view .LVU959
 3571 0084 0FB78722 		movzwl	1314(%rdi), %eax
 3571      050000
 3572              		.loc 1 2127 7 view .LVU960
 3573 008b A801     		testb	$1, %al
 3574 008d 7544     		jne	.L310
2128:fltk-1.3.4-1/png/pngread.c ****    {
2129:fltk-1.3.4-1/png/pngread.c ****       /* Do this directly, not using the png_colorspace functions, to ensure
2130:fltk-1.3.4-1/png/pngread.c ****        * that it happens even if the colorspace is invalid (though probably if
2131:fltk-1.3.4-1/png/pngread.c ****        * it is the setting will be ignored)  Note that the same thing can be
2132:fltk-1.3.4-1/png/pngread.c ****        * achieved at the application interface with png_set_gAMA.
2133:fltk-1.3.4-1/png/pngread.c ****        */
2134:fltk-1.3.4-1/png/pngread.c ****       if (png_ptr->bit_depth == 16 &&
 3575              		.loc 1 2134 7 is_stmt 1 view .LVU961
 3576              		.loc 1 2134 10 is_stmt 0 view .LVU962
 3577 008f 80BF7802 		cmpb	$16, 632(%rdi)
 3577      000010
2135:fltk-1.3.4-1/png/pngread.c ****          (image->flags & PNG_IMAGE_FLAG_16BIT_sRGB) == 0)
2136:fltk-1.3.4-1/png/pngread.c ****          png_ptr->colorspace.gamma = PNG_GAMMA_LINEAR;
2137:fltk-1.3.4-1/png/pngread.c **** 
2138:fltk-1.3.4-1/png/pngread.c ****       else
2139:fltk-1.3.4-1/png/pngread.c ****          png_ptr->colorspace.gamma = PNG_GAMMA_sRGB_INVERSE;
 3578              		.loc 1 2139 36 view .LVU963
 3579 0096 BA8FB100 		movl	$45455, %edx
 3579      00
2134:fltk-1.3.4-1/png/pngread.c ****          (image->flags & PNG_IMAGE_FLAG_16BIT_sRGB) == 0)
 3580              		.loc 1 2134 10 view .LVU964
 3581 009b 7522     		jne	.L311
2135:fltk-1.3.4-1/png/pngread.c ****          (image->flags & PNG_IMAGE_FLAG_16BIT_sRGB) == 0)
 3582              		.loc 1 2135 24 discriminator 1 view .LVU965
 3583 009d 488B7424 		movq	24(%rsp), %rsi
 3583      18
 3584 00a2 8B7E18   		movl	24(%rsi), %edi
 3585 00a5 89FA     		movl	%edi, %edx
 3586 00a7 897C2420 		movl	%edi, 32(%rsp)
 3587 00ab 83E204   		andl	$4, %edx
2136:fltk-1.3.4-1/png/pngread.c **** 
 3588              		.loc 1 2136 36 discriminator 1 view .LVU966
 3589 00ae 83FA01   		cmpl	$1, %edx
 3590 00b1 19D2     		sbbl	%edx, %edx
 3591 00b3 81E211D5 		andl	$54545, %edx
 3591      0000
 3592 00b9 81C28FB1 		addl	$45455, %edx
 3592      0000
 3593              	.L311:
 3594 00bf 488B1C24 		movq	(%rsp), %rbx
2140:fltk-1.3.4-1/png/pngread.c **** 
2141:fltk-1.3.4-1/png/pngread.c ****       png_ptr->colorspace.flags |= PNG_COLORSPACE_HAVE_GAMMA;
 3595              		.loc 1 2141 33 view .LVU967
 3596 00c3 83C801   		orl	$1, %eax
 3597 00c6 8993D804 		movl	%edx, 1240(%rbx)
 3597      0000
 3598              	.LVL385:
 3599              		.loc 1 2141 7 is_stmt 1 view .LVU968
 3600              		.loc 1 2141 33 is_stmt 0 view .LVU969
 3601 00cc 66898322 		movw	%ax, 1314(%rbx)
 3601      050000
 3602              	.L310:
2142:fltk-1.3.4-1/png/pngread.c ****    }
2143:fltk-1.3.4-1/png/pngread.c **** 
2144:fltk-1.3.4-1/png/pngread.c ****    /* Decide what to do based on the PNG color type of the input data.  The
2145:fltk-1.3.4-1/png/pngread.c ****     * utility function png_create_colormap_entry deals with most aspects of the
2146:fltk-1.3.4-1/png/pngread.c ****     * output transformations; this code works out how to produce bytes of
2147:fltk-1.3.4-1/png/pngread.c ****     * color-map entries from the original format.
2148:fltk-1.3.4-1/png/pngread.c ****     */
2149:fltk-1.3.4-1/png/pngread.c ****    switch (png_ptr->color_type)
 3603              		.loc 1 2149 4 is_stmt 1 view .LVU970
 3604 00d3 80F906   		cmpb	$6, %cl
 3605 00d6 0F87150D 		ja	.L312
 3605      0000
 3606 00dc 488D3500 		leaq	.L314(%rip), %rsi
 3606      000000
 3607 00e3 0FB6D1   		movzbl	%cl, %edx
 3608 00e6 48630496 		movslq	(%rsi,%rdx,4), %rax
 3609 00ea 4801F0   		addq	%rsi, %rax
 3610 00ed 3EFFE0   		notrack jmp	*%rax
 3611              		.section	.rodata.png_image_read_colormap,"a",@progbits
 3612              		.align 4
 3613              		.align 4
 3614              	.L314:
 3615 0000 00000000 		.long	.L317-.L314
 3616 0004 00000000 		.long	.L312-.L314
 3617 0008 00000000 		.long	.L313-.L314
 3618 000c 00000000 		.long	.L316-.L314
 3619 0010 00000000 		.long	.L315-.L314
 3620 0014 00000000 		.long	.L312-.L314
 3621 0018 00000000 		.long	.L313-.L314
 3622              		.section	.text.png_image_read_colormap
 3623              	.LVL386:
 3624              		.p2align 4,,10
 3625              		.p2align 3
 3626              	.L304:
2070:fltk-1.3.4-1/png/pngread.c ****    unsigned int output_processing;        /* Output processing option */
 3627              		.loc 1 2070 4 view .LVU971
2071:fltk-1.3.4-1/png/pngread.c ****    unsigned int data_encoding = P_NOTSET; /* Encoding libpng must produce */
 3628              		.loc 1 2071 4 view .LVU972
2072:fltk-1.3.4-1/png/pngread.c **** 
 3629              		.loc 1 2072 4 view .LVU973
2077:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 back_r, back_g, back_b;
 3630              		.loc 1 2077 4 view .LVU974
2078:fltk-1.3.4-1/png/pngread.c **** 
 3631              		.loc 1 2078 4 view .LVU975
2081:fltk-1.3.4-1/png/pngread.c **** 
 3632              		.loc 1 2081 4 view .LVU976
2088:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_trans > 0) /* alpha in input */ &&
 3633              		.loc 1 2088 4 view .LVU977
2088:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_trans > 0) /* alpha in input */ &&
 3634              		.loc 1 2088 7 is_stmt 0 view .LVU978
 3635 00f0 84C0     		testb	%al, %al
 3636 00f2 743C     		je	.L307
 3637              	.L405:
2089:fltk-1.3.4-1/png/pngread.c ****       ((output_format & PNG_FORMAT_FLAG_ALPHA) == 0) /* no alpha in output */)
 3638              		.loc 1 2089 55 view .LVU979
 3639 00f4 41F6C001 		testb	$1, %r8b
 3640 00f8 7544     		jne	.L495
2095:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr,
 3641              		.loc 1 2095 12 is_stmt 1 view .LVU980
2095:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr,
 3642              		.loc 1 2095 23 is_stmt 0 view .LVU981
 3643 00fa 488B4520 		movq	32(%rbp), %rax
2095:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr,
 3644              		.loc 1 2095 15 view .LVU982
 3645 00fe 4885C0   		testq	%rax, %rax
 3646 0101 0F847411 		je	.L502
 3646      0000
2105:fltk-1.3.4-1/png/pngread.c ****          if ((output_format & PNG_FORMAT_FLAG_COLOR) != 0)
 3647              		.loc 1 2105 10 is_stmt 1 view .LVU983
2105:fltk-1.3.4-1/png/pngread.c ****          if ((output_format & PNG_FORMAT_FLAG_COLOR) != 0)
 3648              		.loc 1 2105 17 is_stmt 0 view .LVU984
 3649 0107 440FB678 		movzbl	1(%rax), %r15d
 3649      01
 3650              	.LVL387:
2106:fltk-1.3.4-1/png/pngread.c ****          {
 3651              		.loc 1 2106 10 is_stmt 1 view .LVU985
2106:fltk-1.3.4-1/png/pngread.c ****          {
 3652              		.loc 1 2106 13 is_stmt 0 view .LVU986
 3653 010c 41F6C002 		testb	$2, %r8b
 3654 0110 0F840A08 		je	.L415
 3654      0000
2108:fltk-1.3.4-1/png/pngread.c ****             back_b = display->background->blue;
 3655              		.loc 1 2108 13 is_stmt 1 view .LVU987
2108:fltk-1.3.4-1/png/pngread.c ****             back_b = display->background->blue;
 3656              		.loc 1 2108 20 is_stmt 0 view .LVU988
 3657 0116 0FB618   		movzbl	(%rax), %ebx
2109:fltk-1.3.4-1/png/pngread.c ****          }
 3658              		.loc 1 2109 20 view .LVU989
 3659 0119 0FB64002 		movzbl	2(%rax), %eax
 3660 011d 41BE0100 		movl	$1, %r14d
 3660      0000
2108:fltk-1.3.4-1/png/pngread.c ****             back_b = display->background->blue;
 3661              		.loc 1 2108 20 view .LVU990
 3662 0123 895C2408 		movl	%ebx, 8(%rsp)
 3663              	.LVL388:
2109:fltk-1.3.4-1/png/pngread.c ****          }
 3664              		.loc 1 2109 13 is_stmt 1 view .LVU991
2109:fltk-1.3.4-1/png/pngread.c ****          }
 3665              		.loc 1 2109 20 is_stmt 0 view .LVU992
 3666 0127 89442414 		movl	%eax, 20(%rsp)
 3667              	.LVL389:
2109:fltk-1.3.4-1/png/pngread.c ****          }
 3668              		.loc 1 2109 20 view .LVU993
 3669 012b E950FFFF 		jmp	.L306
 3669      FF
 3670              	.LVL390:
 3671              		.p2align 4,,10
 3672              		.p2align 3
 3673              	.L307:
2088:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_trans > 0) /* alpha in input */ &&
 3674              		.loc 1 2088 59 view .LVU994
 3675 0130 488B0424 		movq	(%rsp), %rax
 3676 0134 6683B870 		cmpw	$0, 624(%rax)
 3676      02000000 
 3677 013c 75B6     		jne	.L405
 3678              	.L495:
2120:fltk-1.3.4-1/png/pngread.c **** 
 3679              		.loc 1 2120 14 view .LVU995
 3680 013e C7442414 		movl	$255, 20(%rsp)
 3680      FF000000 
2088:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_trans > 0) /* alpha in input */ &&
 3681              		.loc 1 2088 59 view .LVU996
 3682 0146 41BE0100 		movl	$1, %r14d
 3682      0000
2120:fltk-1.3.4-1/png/pngread.c **** 
 3683              		.loc 1 2120 32 view .LVU997
 3684 014c 41BFFF00 		movl	$255, %r15d
 3684      0000
2120:fltk-1.3.4-1/png/pngread.c **** 
 3685              		.loc 1 2120 23 view .LVU998
 3686 0152 C7442408 		movl	$255, 8(%rsp)
 3686      FF000000 
 3687 015a E921FFFF 		jmp	.L306
 3687      FF
 3688              	.LVL391:
 3689 015f 90       		.p2align 4,,10
 3690              		.p2align 3
 3691              	.L305:
2088:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_trans > 0) /* alpha in input */ &&
 3692              		.loc 1 2088 59 view .LVU999
 3693 0160 488B0424 		movq	(%rsp), %rax
 3694 0164 6683B870 		cmpw	$0, 624(%rax)
 3694      02000000 
 3695 016c 0F85E7FE 		jne	.L406
 3695      FFFF
 3696              	.L494:
2117:fltk-1.3.4-1/png/pngread.c **** 
 3697              		.loc 1 2117 14 view .LVU1000
 3698 0172 C7442414 		movl	$65535, 20(%rsp)
 3698      FFFF0000 
2088:fltk-1.3.4-1/png/pngread.c ****          png_ptr->num_trans > 0) /* alpha in input */ &&
 3699              		.loc 1 2088 59 view .LVU1001
 3700 017a 41BE0200 		movl	$2, %r14d
 3700      0000
2117:fltk-1.3.4-1/png/pngread.c **** 
 3701              		.loc 1 2117 32 view .LVU1002
 3702 0180 41BFFFFF 		movl	$65535, %r15d
 3702      0000
2117:fltk-1.3.4-1/png/pngread.c **** 
 3703              		.loc 1 2117 23 view .LVU1003
 3704 0186 C7442408 		movl	$65535, 8(%rsp)
 3704      FFFF0000 
 3705 018e E9EDFEFF 		jmp	.L306
 3705      FF
 3706              	.LVL392:
 3707              		.p2align 4,,10
 3708 0193 0F1F4400 		.p2align 3
 3708      00
 3709              	.L313:
2150:fltk-1.3.4-1/png/pngread.c ****    {
2151:fltk-1.3.4-1/png/pngread.c ****       case PNG_COLOR_TYPE_GRAY:
2152:fltk-1.3.4-1/png/pngread.c ****          if (png_ptr->bit_depth <= 8)
2153:fltk-1.3.4-1/png/pngread.c ****          {
2154:fltk-1.3.4-1/png/pngread.c ****             /* There at most 256 colors in the output, regardless of
2155:fltk-1.3.4-1/png/pngread.c ****              * transparency.
2156:fltk-1.3.4-1/png/pngread.c ****              */
2157:fltk-1.3.4-1/png/pngread.c ****             unsigned int step, i, val, trans = 256/*ignore*/, back_alpha = 0;
2158:fltk-1.3.4-1/png/pngread.c **** 
2159:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = 1U << png_ptr->bit_depth;
2160:fltk-1.3.4-1/png/pngread.c ****             if (cmap_entries > image->colormap_entries)
2161:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray[8] color-map: too few entries");
2162:fltk-1.3.4-1/png/pngread.c **** 
2163:fltk-1.3.4-1/png/pngread.c ****             step = 255 / (cmap_entries - 1);
2164:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_NONE;
2165:fltk-1.3.4-1/png/pngread.c **** 
2166:fltk-1.3.4-1/png/pngread.c ****             /* If there is a tRNS chunk then this either selects a transparent
2167:fltk-1.3.4-1/png/pngread.c ****              * value or, if the output has no alpha, the background color.
2168:fltk-1.3.4-1/png/pngread.c ****              */
2169:fltk-1.3.4-1/png/pngread.c ****             if (png_ptr->num_trans > 0)
2170:fltk-1.3.4-1/png/pngread.c ****             {
2171:fltk-1.3.4-1/png/pngread.c ****                trans = png_ptr->trans_color.gray;
2172:fltk-1.3.4-1/png/pngread.c **** 
2173:fltk-1.3.4-1/png/pngread.c ****                if ((output_format & PNG_FORMAT_FLAG_ALPHA) == 0)
2174:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = output_encoding == P_LINEAR ? 65535 : 255;
2175:fltk-1.3.4-1/png/pngread.c ****             }
2176:fltk-1.3.4-1/png/pngread.c **** 
2177:fltk-1.3.4-1/png/pngread.c ****             /* png_create_colormap_entry just takes an RGBA and writes the
2178:fltk-1.3.4-1/png/pngread.c ****              * corresponding color-map entry using the format from 'image',
2179:fltk-1.3.4-1/png/pngread.c ****              * including the required conversion to sRGB or linear as
2180:fltk-1.3.4-1/png/pngread.c ****              * appropriate.  The input values are always either sRGB (if the
2181:fltk-1.3.4-1/png/pngread.c ****              * gamma correction flag is 0) or 0..255 scaled file encoded values
2182:fltk-1.3.4-1/png/pngread.c ****              * (if the function must gamma correct them).
2183:fltk-1.3.4-1/png/pngread.c ****              */
2184:fltk-1.3.4-1/png/pngread.c ****             for (i=val=0; i<cmap_entries; ++i, val += step)
2185:fltk-1.3.4-1/png/pngread.c ****             {
2186:fltk-1.3.4-1/png/pngread.c ****                /* 'i' is a file value.  While this will result in duplicated
2187:fltk-1.3.4-1/png/pngread.c ****                 * entries for 8-bit non-sRGB encoded files it is necessary to
2188:fltk-1.3.4-1/png/pngread.c ****                 * have non-gamma corrected values to do tRNS handling.
2189:fltk-1.3.4-1/png/pngread.c ****                 */
2190:fltk-1.3.4-1/png/pngread.c ****                if (i != trans)
2191:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i, val, val, val, 255,
2192:fltk-1.3.4-1/png/pngread.c ****                      P_FILE/*8-bit with file gamma*/);
2193:fltk-1.3.4-1/png/pngread.c **** 
2194:fltk-1.3.4-1/png/pngread.c ****                /* Else this entry is transparent.  The colors don't matter if
2195:fltk-1.3.4-1/png/pngread.c ****                 * there is an alpha channel (back_alpha == 0), but it does no
2196:fltk-1.3.4-1/png/pngread.c ****                 * harm to pass them in; the values are not set above so this
2197:fltk-1.3.4-1/png/pngread.c ****                 * passes in white.
2198:fltk-1.3.4-1/png/pngread.c ****                 *
2199:fltk-1.3.4-1/png/pngread.c ****                 * NOTE: this preserves the full precision of the application
2200:fltk-1.3.4-1/png/pngread.c ****                 * supplied background color when it is used.
2201:fltk-1.3.4-1/png/pngread.c ****                 */
2202:fltk-1.3.4-1/png/pngread.c ****                else
2203:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i, back_r, back_g, back_b,
2204:fltk-1.3.4-1/png/pngread.c ****                      back_alpha, output_encoding);
2205:fltk-1.3.4-1/png/pngread.c ****             }
2206:fltk-1.3.4-1/png/pngread.c **** 
2207:fltk-1.3.4-1/png/pngread.c ****             /* We need libpng to preserve the original encoding. */
2208:fltk-1.3.4-1/png/pngread.c ****             data_encoding = P_FILE;
2209:fltk-1.3.4-1/png/pngread.c **** 
2210:fltk-1.3.4-1/png/pngread.c ****             /* The rows from libpng, while technically gray values, are now also
2211:fltk-1.3.4-1/png/pngread.c ****              * color-map indices; however, they may need to be expanded to 1
2212:fltk-1.3.4-1/png/pngread.c ****              * byte per pixel.  This is what png_set_packing does (i.e., it
2213:fltk-1.3.4-1/png/pngread.c ****              * unpacks the bit values into bytes.)
2214:fltk-1.3.4-1/png/pngread.c ****              */
2215:fltk-1.3.4-1/png/pngread.c ****             if (png_ptr->bit_depth < 8)
2216:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
2217:fltk-1.3.4-1/png/pngread.c ****          }
2218:fltk-1.3.4-1/png/pngread.c **** 
2219:fltk-1.3.4-1/png/pngread.c ****          else /* bit depth is 16 */
2220:fltk-1.3.4-1/png/pngread.c ****          {
2221:fltk-1.3.4-1/png/pngread.c ****             /* The 16-bit input values can be converted directly to 8-bit gamma
2222:fltk-1.3.4-1/png/pngread.c ****              * encoded values; however, if a tRNS chunk is present 257 color-map
2223:fltk-1.3.4-1/png/pngread.c ****              * entries are required.  This means that the extra entry requires
2224:fltk-1.3.4-1/png/pngread.c ****              * special processing; add an alpha channel, sacrifice gray level
2225:fltk-1.3.4-1/png/pngread.c ****              * 254 and convert transparent (alpha==0) entries to that.
2226:fltk-1.3.4-1/png/pngread.c ****              *
2227:fltk-1.3.4-1/png/pngread.c ****              * Use libpng to chop the data to 8 bits.  Convert it to sRGB at the
2228:fltk-1.3.4-1/png/pngread.c ****              * same time to minimize quality loss.  If a tRNS chunk is present
2229:fltk-1.3.4-1/png/pngread.c ****              * this means libpng must handle it too; otherwise it is impossible
2230:fltk-1.3.4-1/png/pngread.c ****              * to do the exact match on the 16-bit value.
2231:fltk-1.3.4-1/png/pngread.c ****              *
2232:fltk-1.3.4-1/png/pngread.c ****              * If the output has no alpha channel *and* the background color is
2233:fltk-1.3.4-1/png/pngread.c ****              * gray then it is possible to let libpng handle the substitution by
2234:fltk-1.3.4-1/png/pngread.c ****              * ensuring that the corresponding gray level matches the background
2235:fltk-1.3.4-1/png/pngread.c ****              * color exactly.
2236:fltk-1.3.4-1/png/pngread.c ****              */
2237:fltk-1.3.4-1/png/pngread.c ****             data_encoding = P_sRGB;
2238:fltk-1.3.4-1/png/pngread.c **** 
2239:fltk-1.3.4-1/png/pngread.c ****             if (PNG_GRAY_COLORMAP_ENTRIES > image->colormap_entries)
2240:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray[16] color-map: too few entries");
2241:fltk-1.3.4-1/png/pngread.c **** 
2242:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = make_gray_colormap(display);
2243:fltk-1.3.4-1/png/pngread.c **** 
2244:fltk-1.3.4-1/png/pngread.c ****             if (png_ptr->num_trans > 0)
2245:fltk-1.3.4-1/png/pngread.c ****             {
2246:fltk-1.3.4-1/png/pngread.c ****                unsigned int back_alpha;
2247:fltk-1.3.4-1/png/pngread.c **** 
2248:fltk-1.3.4-1/png/pngread.c ****                if ((output_format & PNG_FORMAT_FLAG_ALPHA) != 0)
2249:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = 0;
2250:fltk-1.3.4-1/png/pngread.c **** 
2251:fltk-1.3.4-1/png/pngread.c ****                else
2252:fltk-1.3.4-1/png/pngread.c ****                {
2253:fltk-1.3.4-1/png/pngread.c ****                   if (back_r == back_g && back_g == back_b)
2254:fltk-1.3.4-1/png/pngread.c ****                   {
2255:fltk-1.3.4-1/png/pngread.c ****                      /* Background is gray; no special processing will be
2256:fltk-1.3.4-1/png/pngread.c ****                       * required.
2257:fltk-1.3.4-1/png/pngread.c ****                       */
2258:fltk-1.3.4-1/png/pngread.c ****                      png_color_16 c;
2259:fltk-1.3.4-1/png/pngread.c ****                      png_uint_32 gray = back_g;
2260:fltk-1.3.4-1/png/pngread.c **** 
2261:fltk-1.3.4-1/png/pngread.c ****                      if (output_encoding == P_LINEAR)
2262:fltk-1.3.4-1/png/pngread.c ****                      {
2263:fltk-1.3.4-1/png/pngread.c ****                         gray = PNG_sRGB_FROM_LINEAR(gray * 255);
2264:fltk-1.3.4-1/png/pngread.c **** 
2265:fltk-1.3.4-1/png/pngread.c ****                         /* And make sure the corresponding palette entry
2266:fltk-1.3.4-1/png/pngread.c ****                          * matches.
2267:fltk-1.3.4-1/png/pngread.c ****                          */
2268:fltk-1.3.4-1/png/pngread.c ****                         png_create_colormap_entry(display, gray, back_g, back_g,
2269:fltk-1.3.4-1/png/pngread.c ****                            back_g, 65535, P_LINEAR);
2270:fltk-1.3.4-1/png/pngread.c ****                      }
2271:fltk-1.3.4-1/png/pngread.c **** 
2272:fltk-1.3.4-1/png/pngread.c ****                      /* The background passed to libpng, however, must be the
2273:fltk-1.3.4-1/png/pngread.c ****                       * sRGB value.
2274:fltk-1.3.4-1/png/pngread.c ****                       */
2275:fltk-1.3.4-1/png/pngread.c ****                      c.index = 0; /*unused*/
2276:fltk-1.3.4-1/png/pngread.c ****                      c.gray = c.red = c.green = c.blue = (png_uint_16)gray;
2277:fltk-1.3.4-1/png/pngread.c **** 
2278:fltk-1.3.4-1/png/pngread.c ****                      /* NOTE: does this work without expanding tRNS to alpha?
2279:fltk-1.3.4-1/png/pngread.c ****                       * It should be the color->gray case below apparently
2280:fltk-1.3.4-1/png/pngread.c ****                       * doesn't.
2281:fltk-1.3.4-1/png/pngread.c ****                       */
2282:fltk-1.3.4-1/png/pngread.c ****                      png_set_background_fixed(png_ptr, &c,
2283:fltk-1.3.4-1/png/pngread.c ****                         PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
2284:fltk-1.3.4-1/png/pngread.c ****                         0/*gamma: not used*/);
2285:fltk-1.3.4-1/png/pngread.c **** 
2286:fltk-1.3.4-1/png/pngread.c ****                      output_processing = PNG_CMAP_NONE;
2287:fltk-1.3.4-1/png/pngread.c ****                      break;
2288:fltk-1.3.4-1/png/pngread.c ****                   }
2289:fltk-1.3.4-1/png/pngread.c **** 
2290:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = output_encoding == P_LINEAR ? 65535 : 255;
2291:fltk-1.3.4-1/png/pngread.c ****                }
2292:fltk-1.3.4-1/png/pngread.c **** 
2293:fltk-1.3.4-1/png/pngread.c ****                /* output_processing means that the libpng-processed row will be
2294:fltk-1.3.4-1/png/pngread.c ****                 * 8-bit GA and it has to be processing to single byte color-map
2295:fltk-1.3.4-1/png/pngread.c ****                 * values.  Entry 254 is replaced by either a completely
2296:fltk-1.3.4-1/png/pngread.c ****                 * transparent entry or by the background color at full
2297:fltk-1.3.4-1/png/pngread.c ****                 * precision (and the background color is not a simple gray
2298:fltk-1.3.4-1/png/pngread.c ****                 * level in this case.)
2299:fltk-1.3.4-1/png/pngread.c ****                 */
2300:fltk-1.3.4-1/png/pngread.c ****                expand_tRNS = 1;
2301:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_TRANS;
2302:fltk-1.3.4-1/png/pngread.c ****                background_index = 254;
2303:fltk-1.3.4-1/png/pngread.c **** 
2304:fltk-1.3.4-1/png/pngread.c ****                /* And set (overwrite) color-map entry 254 to the actual
2305:fltk-1.3.4-1/png/pngread.c ****                 * background color at full precision.
2306:fltk-1.3.4-1/png/pngread.c ****                 */
2307:fltk-1.3.4-1/png/pngread.c ****                png_create_colormap_entry(display, 254, back_r, back_g, back_b,
2308:fltk-1.3.4-1/png/pngread.c ****                   back_alpha, output_encoding);
2309:fltk-1.3.4-1/png/pngread.c ****             }
2310:fltk-1.3.4-1/png/pngread.c **** 
2311:fltk-1.3.4-1/png/pngread.c ****             else
2312:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_NONE;
2313:fltk-1.3.4-1/png/pngread.c ****          }
2314:fltk-1.3.4-1/png/pngread.c ****          break;
2315:fltk-1.3.4-1/png/pngread.c **** 
2316:fltk-1.3.4-1/png/pngread.c ****       case PNG_COLOR_TYPE_GRAY_ALPHA:
2317:fltk-1.3.4-1/png/pngread.c ****          /* 8-bit or 16-bit PNG with two channels - gray and alpha.  A minimum
2318:fltk-1.3.4-1/png/pngread.c ****           * of 65536 combinations.  If, however, the alpha channel is to be
2319:fltk-1.3.4-1/png/pngread.c ****           * removed there are only 256 possibilities if the background is gray.
2320:fltk-1.3.4-1/png/pngread.c ****           * (Otherwise there is a subset of the 65536 possibilities defined by
2321:fltk-1.3.4-1/png/pngread.c ****           * the triangle between black, white and the background color.)
2322:fltk-1.3.4-1/png/pngread.c ****           *
2323:fltk-1.3.4-1/png/pngread.c ****           * Reduce 16-bit files to 8-bit and sRGB encode the result.  No need to
2324:fltk-1.3.4-1/png/pngread.c ****           * worry about tRNS matching - tRNS is ignored if there is an alpha
2325:fltk-1.3.4-1/png/pngread.c ****           * channel.
2326:fltk-1.3.4-1/png/pngread.c ****           */
2327:fltk-1.3.4-1/png/pngread.c ****          data_encoding = P_sRGB;
2328:fltk-1.3.4-1/png/pngread.c **** 
2329:fltk-1.3.4-1/png/pngread.c ****          if ((output_format & PNG_FORMAT_FLAG_ALPHA) != 0)
2330:fltk-1.3.4-1/png/pngread.c ****          {
2331:fltk-1.3.4-1/png/pngread.c ****             if (PNG_GA_COLORMAP_ENTRIES > image->colormap_entries)
2332:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray+alpha color-map: too few entries");
2333:fltk-1.3.4-1/png/pngread.c **** 
2334:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = make_ga_colormap(display);
2335:fltk-1.3.4-1/png/pngread.c **** 
2336:fltk-1.3.4-1/png/pngread.c ****             background_index = PNG_CMAP_GA_BACKGROUND;
2337:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_GA;
2338:fltk-1.3.4-1/png/pngread.c ****          }
2339:fltk-1.3.4-1/png/pngread.c **** 
2340:fltk-1.3.4-1/png/pngread.c ****          else /* alpha is removed */
2341:fltk-1.3.4-1/png/pngread.c ****          {
2342:fltk-1.3.4-1/png/pngread.c ****             /* Alpha must be removed as the PNG data is processed when the
2343:fltk-1.3.4-1/png/pngread.c ****              * background is a color because the G and A channels are
2344:fltk-1.3.4-1/png/pngread.c ****              * independent and the vector addition (non-parallel vectors) is a
2345:fltk-1.3.4-1/png/pngread.c ****              * 2-D problem.
2346:fltk-1.3.4-1/png/pngread.c ****              *
2347:fltk-1.3.4-1/png/pngread.c ****              * This can be reduced to the same algorithm as above by making a
2348:fltk-1.3.4-1/png/pngread.c ****              * colormap containing gray levels (for the opaque grays), a
2349:fltk-1.3.4-1/png/pngread.c ****              * background entry (for a transparent pixel) and a set of four six
2350:fltk-1.3.4-1/png/pngread.c ****              * level color values, one set for each intermediate alpha value.
2351:fltk-1.3.4-1/png/pngread.c ****              * See the comments in make_ga_colormap for how this works in the
2352:fltk-1.3.4-1/png/pngread.c ****              * per-pixel processing.
2353:fltk-1.3.4-1/png/pngread.c ****              *
2354:fltk-1.3.4-1/png/pngread.c ****              * If the background is gray, however, we only need a 256 entry gray
2355:fltk-1.3.4-1/png/pngread.c ****              * level color map.  It is sufficient to make the entry generated
2356:fltk-1.3.4-1/png/pngread.c ****              * for the background color be exactly the color specified.
2357:fltk-1.3.4-1/png/pngread.c ****              */
2358:fltk-1.3.4-1/png/pngread.c ****             if ((output_format & PNG_FORMAT_FLAG_COLOR) == 0 ||
2359:fltk-1.3.4-1/png/pngread.c ****                (back_r == back_g && back_g == back_b))
2360:fltk-1.3.4-1/png/pngread.c ****             {
2361:fltk-1.3.4-1/png/pngread.c ****                /* Background is gray; no special processing will be required. */
2362:fltk-1.3.4-1/png/pngread.c ****                png_color_16 c;
2363:fltk-1.3.4-1/png/pngread.c ****                png_uint_32 gray = back_g;
2364:fltk-1.3.4-1/png/pngread.c **** 
2365:fltk-1.3.4-1/png/pngread.c ****                if (PNG_GRAY_COLORMAP_ENTRIES > image->colormap_entries)
2366:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "gray-alpha color-map: too few entries");
2367:fltk-1.3.4-1/png/pngread.c **** 
2368:fltk-1.3.4-1/png/pngread.c ****                cmap_entries = make_gray_colormap(display);
2369:fltk-1.3.4-1/png/pngread.c **** 
2370:fltk-1.3.4-1/png/pngread.c ****                if (output_encoding == P_LINEAR)
2371:fltk-1.3.4-1/png/pngread.c ****                {
2372:fltk-1.3.4-1/png/pngread.c ****                   gray = PNG_sRGB_FROM_LINEAR(gray * 255);
2373:fltk-1.3.4-1/png/pngread.c **** 
2374:fltk-1.3.4-1/png/pngread.c ****                   /* And make sure the corresponding palette entry matches. */
2375:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, gray, back_g, back_g,
2376:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
2377:fltk-1.3.4-1/png/pngread.c ****                }
2378:fltk-1.3.4-1/png/pngread.c **** 
2379:fltk-1.3.4-1/png/pngread.c ****                /* The background passed to libpng, however, must be the sRGB
2380:fltk-1.3.4-1/png/pngread.c ****                 * value.
2381:fltk-1.3.4-1/png/pngread.c ****                 */
2382:fltk-1.3.4-1/png/pngread.c ****                c.index = 0; /*unused*/
2383:fltk-1.3.4-1/png/pngread.c ****                c.gray = c.red = c.green = c.blue = (png_uint_16)gray;
2384:fltk-1.3.4-1/png/pngread.c **** 
2385:fltk-1.3.4-1/png/pngread.c ****                png_set_background_fixed(png_ptr, &c,
2386:fltk-1.3.4-1/png/pngread.c ****                   PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
2387:fltk-1.3.4-1/png/pngread.c ****                   0/*gamma: not used*/);
2388:fltk-1.3.4-1/png/pngread.c **** 
2389:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_NONE;
2390:fltk-1.3.4-1/png/pngread.c ****             }
2391:fltk-1.3.4-1/png/pngread.c **** 
2392:fltk-1.3.4-1/png/pngread.c ****             else
2393:fltk-1.3.4-1/png/pngread.c ****             {
2394:fltk-1.3.4-1/png/pngread.c ****                png_uint_32 i, a;
2395:fltk-1.3.4-1/png/pngread.c **** 
2396:fltk-1.3.4-1/png/pngread.c ****                /* This is the same as png_make_ga_colormap, above, except that
2397:fltk-1.3.4-1/png/pngread.c ****                 * the entries are all opaque.
2398:fltk-1.3.4-1/png/pngread.c ****                 */
2399:fltk-1.3.4-1/png/pngread.c ****                if (PNG_GA_COLORMAP_ENTRIES > image->colormap_entries)
2400:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "ga-alpha color-map: too few entries");
2401:fltk-1.3.4-1/png/pngread.c **** 
2402:fltk-1.3.4-1/png/pngread.c ****                i = 0;
2403:fltk-1.3.4-1/png/pngread.c ****                while (i < 231)
2404:fltk-1.3.4-1/png/pngread.c ****                {
2405:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 gray = (i * 256 + 115) / 231;
2406:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i++, gray, gray, gray,
2407:fltk-1.3.4-1/png/pngread.c ****                      255, P_sRGB);
2408:fltk-1.3.4-1/png/pngread.c ****                }
2409:fltk-1.3.4-1/png/pngread.c **** 
2410:fltk-1.3.4-1/png/pngread.c ****                /* NOTE: this preserves the full precision of the application
2411:fltk-1.3.4-1/png/pngread.c ****                 * background color.
2412:fltk-1.3.4-1/png/pngread.c ****                 */
2413:fltk-1.3.4-1/png/pngread.c ****                background_index = i;
2414:fltk-1.3.4-1/png/pngread.c ****                png_create_colormap_entry(display, i++, back_r, back_g, back_b,
2415:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
2416:fltk-1.3.4-1/png/pngread.c **** 
2417:fltk-1.3.4-1/png/pngread.c ****                /* For non-opaque input composite on the sRGB background - this
2418:fltk-1.3.4-1/png/pngread.c ****                 * requires inverting the encoding for each component.  The input
2419:fltk-1.3.4-1/png/pngread.c ****                 * is still converted to the sRGB encoding because this is a
2420:fltk-1.3.4-1/png/pngread.c ****                 * reasonable approximate to the logarithmic curve of human
2421:fltk-1.3.4-1/png/pngread.c ****                 * visual sensitivity, at least over the narrow range which PNG
2422:fltk-1.3.4-1/png/pngread.c ****                 * represents.  Consequently 'G' is always sRGB encoded, while
2423:fltk-1.3.4-1/png/pngread.c ****                 * 'A' is linear.  We need the linear background colors.
2424:fltk-1.3.4-1/png/pngread.c ****                 */
2425:fltk-1.3.4-1/png/pngread.c ****                if (output_encoding == P_sRGB) /* else already linear */
2426:fltk-1.3.4-1/png/pngread.c ****                {
2427:fltk-1.3.4-1/png/pngread.c ****                   /* This may produce a value not exactly matching the
2428:fltk-1.3.4-1/png/pngread.c ****                    * background, but that's ok because these numbers are only
2429:fltk-1.3.4-1/png/pngread.c ****                    * used when alpha != 0
2430:fltk-1.3.4-1/png/pngread.c ****                    */
2431:fltk-1.3.4-1/png/pngread.c ****                   back_r = png_sRGB_table[back_r];
2432:fltk-1.3.4-1/png/pngread.c ****                   back_g = png_sRGB_table[back_g];
2433:fltk-1.3.4-1/png/pngread.c ****                   back_b = png_sRGB_table[back_b];
2434:fltk-1.3.4-1/png/pngread.c ****                }
2435:fltk-1.3.4-1/png/pngread.c **** 
2436:fltk-1.3.4-1/png/pngread.c ****                for (a=1; a<5; ++a)
2437:fltk-1.3.4-1/png/pngread.c ****                {
2438:fltk-1.3.4-1/png/pngread.c ****                   unsigned int g;
2439:fltk-1.3.4-1/png/pngread.c **** 
2440:fltk-1.3.4-1/png/pngread.c ****                   /* PNG_sRGB_FROM_LINEAR expects a 16-bit linear value scaled
2441:fltk-1.3.4-1/png/pngread.c ****                    * by an 8-bit alpha value (0..255).
2442:fltk-1.3.4-1/png/pngread.c ****                    */
2443:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 alpha = 51 * a;
2444:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 back_rx = (255-alpha) * back_r;
2445:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 back_gx = (255-alpha) * back_g;
2446:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 back_bx = (255-alpha) * back_b;
2447:fltk-1.3.4-1/png/pngread.c **** 
2448:fltk-1.3.4-1/png/pngread.c ****                   for (g=0; g<6; ++g)
2449:fltk-1.3.4-1/png/pngread.c ****                   {
2450:fltk-1.3.4-1/png/pngread.c ****                      png_uint_32 gray = png_sRGB_table[g*51] * alpha;
2451:fltk-1.3.4-1/png/pngread.c **** 
2452:fltk-1.3.4-1/png/pngread.c ****                      png_create_colormap_entry(display, i++,
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
2455:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
2456:fltk-1.3.4-1/png/pngread.c ****                   }
2457:fltk-1.3.4-1/png/pngread.c ****                }
2458:fltk-1.3.4-1/png/pngread.c **** 
2459:fltk-1.3.4-1/png/pngread.c ****                cmap_entries = i;
2460:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_GA;
2461:fltk-1.3.4-1/png/pngread.c ****             }
2462:fltk-1.3.4-1/png/pngread.c ****          }
2463:fltk-1.3.4-1/png/pngread.c ****          break;
2464:fltk-1.3.4-1/png/pngread.c **** 
2465:fltk-1.3.4-1/png/pngread.c ****       case PNG_COLOR_TYPE_RGB:
2466:fltk-1.3.4-1/png/pngread.c ****       case PNG_COLOR_TYPE_RGB_ALPHA:
2467:fltk-1.3.4-1/png/pngread.c ****          /* Exclude the case where the output is gray; we can always handle this
2468:fltk-1.3.4-1/png/pngread.c ****           * with the cases above.
2469:fltk-1.3.4-1/png/pngread.c ****           */
2470:fltk-1.3.4-1/png/pngread.c ****          if ((output_format & PNG_FORMAT_FLAG_COLOR) == 0)
 3710              		.loc 1 2470 10 is_stmt 1 view .LVU1004
 3711              		.loc 1 2470 13 is_stmt 0 view .LVU1005
 3712 0198 4589C5   		movl	%r8d, %r13d
 3713 019b 4183E502 		andl	$2, %r13d
 3714 019f 0F849307 		je	.L503
 3714      0000
2471:fltk-1.3.4-1/png/pngread.c ****          {
2472:fltk-1.3.4-1/png/pngread.c ****             /* The color-map will be grayscale, so we may as well convert the
2473:fltk-1.3.4-1/png/pngread.c ****              * input RGB values to a simple grayscale and use the grayscale
2474:fltk-1.3.4-1/png/pngread.c ****              * code above.
2475:fltk-1.3.4-1/png/pngread.c ****              *
2476:fltk-1.3.4-1/png/pngread.c ****              * NOTE: calling this apparently damages the recognition of the
2477:fltk-1.3.4-1/png/pngread.c ****              * transparent color in background color handling; call
2478:fltk-1.3.4-1/png/pngread.c ****              * png_set_tRNS_to_alpha before png_set_background_fixed.
2479:fltk-1.3.4-1/png/pngread.c ****              */
2480:fltk-1.3.4-1/png/pngread.c ****             png_set_rgb_to_gray_fixed(png_ptr, PNG_ERROR_ACTION_NONE, -1,
2481:fltk-1.3.4-1/png/pngread.c ****                -1);
2482:fltk-1.3.4-1/png/pngread.c ****             data_encoding = P_sRGB;
2483:fltk-1.3.4-1/png/pngread.c **** 
2484:fltk-1.3.4-1/png/pngread.c ****             /* The output will now be one or two 8-bit gray or gray+alpha
2485:fltk-1.3.4-1/png/pngread.c ****              * channels.  The more complex case arises when the input has alpha.
2486:fltk-1.3.4-1/png/pngread.c ****              */
2487:fltk-1.3.4-1/png/pngread.c ****             if ((png_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
2488:fltk-1.3.4-1/png/pngread.c ****                png_ptr->num_trans > 0) &&
2489:fltk-1.3.4-1/png/pngread.c ****                (output_format & PNG_FORMAT_FLAG_ALPHA) != 0)
2490:fltk-1.3.4-1/png/pngread.c ****             {
2491:fltk-1.3.4-1/png/pngread.c ****                /* Both input and output have an alpha channel, so no background
2492:fltk-1.3.4-1/png/pngread.c ****                 * processing is required; just map the GA bytes to the right
2493:fltk-1.3.4-1/png/pngread.c ****                 * color-map entry.
2494:fltk-1.3.4-1/png/pngread.c ****                 */
2495:fltk-1.3.4-1/png/pngread.c ****                expand_tRNS = 1;
2496:fltk-1.3.4-1/png/pngread.c **** 
2497:fltk-1.3.4-1/png/pngread.c ****                if (PNG_GA_COLORMAP_ENTRIES > image->colormap_entries)
2498:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[ga] color-map: too few entries");
2499:fltk-1.3.4-1/png/pngread.c **** 
2500:fltk-1.3.4-1/png/pngread.c ****                cmap_entries = make_ga_colormap(display);
2501:fltk-1.3.4-1/png/pngread.c ****                background_index = PNG_CMAP_GA_BACKGROUND;
2502:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_GA;
2503:fltk-1.3.4-1/png/pngread.c ****             }
2504:fltk-1.3.4-1/png/pngread.c **** 
2505:fltk-1.3.4-1/png/pngread.c ****             else
2506:fltk-1.3.4-1/png/pngread.c ****             {
2507:fltk-1.3.4-1/png/pngread.c ****                /* Either the input or the output has no alpha channel, so there
2508:fltk-1.3.4-1/png/pngread.c ****                 * will be no non-opaque pixels in the color-map; it will just be
2509:fltk-1.3.4-1/png/pngread.c ****                 * grayscale.
2510:fltk-1.3.4-1/png/pngread.c ****                 */
2511:fltk-1.3.4-1/png/pngread.c ****                if (PNG_GRAY_COLORMAP_ENTRIES > image->colormap_entries)
2512:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[gray] color-map: too few entries");
2513:fltk-1.3.4-1/png/pngread.c **** 
2514:fltk-1.3.4-1/png/pngread.c ****                /* Ideally this code would use libpng to do the gamma correction,
2515:fltk-1.3.4-1/png/pngread.c ****                 * but if an input alpha channel is to be removed we will hit the
2516:fltk-1.3.4-1/png/pngread.c ****                 * libpng bug in gamma+compose+rgb-to-gray (the double gamma
2517:fltk-1.3.4-1/png/pngread.c ****                 * correction bug).  Fix this by dropping the gamma correction in
2518:fltk-1.3.4-1/png/pngread.c ****                 * this case and doing it in the palette; this will result in
2519:fltk-1.3.4-1/png/pngread.c ****                 * duplicate palette entries, but that's better than the
2520:fltk-1.3.4-1/png/pngread.c ****                 * alternative of double gamma correction.
2521:fltk-1.3.4-1/png/pngread.c ****                 */
2522:fltk-1.3.4-1/png/pngread.c ****                if ((png_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
2523:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0) &&
2524:fltk-1.3.4-1/png/pngread.c ****                   png_gamma_not_sRGB(png_ptr->colorspace.gamma) != 0)
2525:fltk-1.3.4-1/png/pngread.c ****                {
2526:fltk-1.3.4-1/png/pngread.c ****                   cmap_entries = make_gray_file_colormap(display);
2527:fltk-1.3.4-1/png/pngread.c ****                   data_encoding = P_FILE;
2528:fltk-1.3.4-1/png/pngread.c ****                }
2529:fltk-1.3.4-1/png/pngread.c **** 
2530:fltk-1.3.4-1/png/pngread.c ****                else
2531:fltk-1.3.4-1/png/pngread.c ****                   cmap_entries = make_gray_colormap(display);
2532:fltk-1.3.4-1/png/pngread.c **** 
2533:fltk-1.3.4-1/png/pngread.c ****                /* But if the input has alpha or transparency it must be removed
2534:fltk-1.3.4-1/png/pngread.c ****                 */
2535:fltk-1.3.4-1/png/pngread.c ****                if (png_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
2536:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
2537:fltk-1.3.4-1/png/pngread.c ****                {
2538:fltk-1.3.4-1/png/pngread.c ****                   png_color_16 c;
2539:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 gray = back_g;
2540:fltk-1.3.4-1/png/pngread.c **** 
2541:fltk-1.3.4-1/png/pngread.c ****                   /* We need to ensure that the application background exists in
2542:fltk-1.3.4-1/png/pngread.c ****                    * the colormap and that completely transparent pixels map to
2543:fltk-1.3.4-1/png/pngread.c ****                    * it.  Achieve this simply by ensuring that the entry
2544:fltk-1.3.4-1/png/pngread.c ****                    * selected for the background really is the background color.
2545:fltk-1.3.4-1/png/pngread.c ****                    */
2546:fltk-1.3.4-1/png/pngread.c ****                   if (data_encoding == P_FILE) /* from the fixup above */
2547:fltk-1.3.4-1/png/pngread.c ****                   {
2548:fltk-1.3.4-1/png/pngread.c ****                      /* The app supplied a gray which is in output_encoding, we
2549:fltk-1.3.4-1/png/pngread.c ****                       * need to convert it to a value of the input (P_FILE)
2550:fltk-1.3.4-1/png/pngread.c ****                       * encoding then set this palette entry to the required
2551:fltk-1.3.4-1/png/pngread.c ****                       * output encoding.
2552:fltk-1.3.4-1/png/pngread.c ****                       */
2553:fltk-1.3.4-1/png/pngread.c ****                      if (output_encoding == P_sRGB)
2554:fltk-1.3.4-1/png/pngread.c ****                         gray = png_sRGB_table[gray]; /* now P_LINEAR */
2555:fltk-1.3.4-1/png/pngread.c **** 
2556:fltk-1.3.4-1/png/pngread.c ****                      gray = PNG_DIV257(png_gamma_16bit_correct(gray,
2557:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
2558:fltk-1.3.4-1/png/pngread.c **** 
2559:fltk-1.3.4-1/png/pngread.c ****                      /* And make sure the corresponding palette entry contains
2560:fltk-1.3.4-1/png/pngread.c ****                       * exactly the required sRGB value.
2561:fltk-1.3.4-1/png/pngread.c ****                       */
2562:fltk-1.3.4-1/png/pngread.c ****                      png_create_colormap_entry(display, gray, back_g, back_g,
2563:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
2564:fltk-1.3.4-1/png/pngread.c ****                   }
2565:fltk-1.3.4-1/png/pngread.c **** 
2566:fltk-1.3.4-1/png/pngread.c ****                   else if (output_encoding == P_LINEAR)
2567:fltk-1.3.4-1/png/pngread.c ****                   {
2568:fltk-1.3.4-1/png/pngread.c ****                      gray = PNG_sRGB_FROM_LINEAR(gray * 255);
2569:fltk-1.3.4-1/png/pngread.c **** 
2570:fltk-1.3.4-1/png/pngread.c ****                      /* And make sure the corresponding palette entry matches.
2571:fltk-1.3.4-1/png/pngread.c ****                       */
2572:fltk-1.3.4-1/png/pngread.c ****                      png_create_colormap_entry(display, gray, back_g, back_g,
2573:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
2574:fltk-1.3.4-1/png/pngread.c ****                   }
2575:fltk-1.3.4-1/png/pngread.c **** 
2576:fltk-1.3.4-1/png/pngread.c ****                   /* The background passed to libpng, however, must be the
2577:fltk-1.3.4-1/png/pngread.c ****                    * output (normally sRGB) value.
2578:fltk-1.3.4-1/png/pngread.c ****                    */
2579:fltk-1.3.4-1/png/pngread.c ****                   c.index = 0; /*unused*/
2580:fltk-1.3.4-1/png/pngread.c ****                   c.gray = c.red = c.green = c.blue = (png_uint_16)gray;
2581:fltk-1.3.4-1/png/pngread.c **** 
2582:fltk-1.3.4-1/png/pngread.c ****                   /* NOTE: the following is apparently a bug in libpng. Without
2583:fltk-1.3.4-1/png/pngread.c ****                    * it the transparent color recognition in
2584:fltk-1.3.4-1/png/pngread.c ****                    * png_set_background_fixed seems to go wrong.
2585:fltk-1.3.4-1/png/pngread.c ****                    */
2586:fltk-1.3.4-1/png/pngread.c ****                   expand_tRNS = 1;
2587:fltk-1.3.4-1/png/pngread.c ****                   png_set_background_fixed(png_ptr, &c,
2588:fltk-1.3.4-1/png/pngread.c ****                      PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
2589:fltk-1.3.4-1/png/pngread.c ****                      0/*gamma: not used*/);
2590:fltk-1.3.4-1/png/pngread.c ****                }
2591:fltk-1.3.4-1/png/pngread.c **** 
2592:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_NONE;
2593:fltk-1.3.4-1/png/pngread.c ****             }
2594:fltk-1.3.4-1/png/pngread.c ****          }
2595:fltk-1.3.4-1/png/pngread.c **** 
2596:fltk-1.3.4-1/png/pngread.c ****          else /* output is color */
2597:fltk-1.3.4-1/png/pngread.c ****          {
2598:fltk-1.3.4-1/png/pngread.c ****             /* We could use png_quantize here so long as there is no transparent
2599:fltk-1.3.4-1/png/pngread.c ****              * color or alpha; png_quantize ignores alpha.  Easier overall just
2600:fltk-1.3.4-1/png/pngread.c ****              * to do it once and using PNG_DIV51 on the 6x6x6 reduced RGB cube.
2601:fltk-1.3.4-1/png/pngread.c ****              * Consequently we always want libpng to produce sRGB data.
2602:fltk-1.3.4-1/png/pngread.c ****              */
2603:fltk-1.3.4-1/png/pngread.c ****             data_encoding = P_sRGB;
 3715              		.loc 1 2603 13 is_stmt 1 view .LVU1006
 3716              	.LVL393:
2604:fltk-1.3.4-1/png/pngread.c **** 
2605:fltk-1.3.4-1/png/pngread.c ****             /* Is there any transparency or alpha? */
2606:fltk-1.3.4-1/png/pngread.c ****             if (png_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
 3717              		.loc 1 2606 13 view .LVU1007
 3718 01a5 488B4424 		movq	24(%rsp), %rax
 3718      18
 3719 01aa 8B401C   		movl	28(%rax), %eax
 3720              		.loc 1 2606 16 is_stmt 0 view .LVU1008
 3721 01ad 80F906   		cmpb	$6, %cl
 3722 01b0 0F84EA08 		je	.L363
 3722      0000
 3723              		.loc 1 2606 65 discriminator 1 view .LVU1009
 3724 01b6 488B0C24 		movq	(%rsp), %rcx
 3725 01ba 6683B970 		cmpw	$0, 624(%rcx)
 3725      02000000 
 3726 01c2 0F85D808 		jne	.L363
 3726      0000
2607:fltk-1.3.4-1/png/pngread.c ****                png_ptr->num_trans > 0)
2608:fltk-1.3.4-1/png/pngread.c ****             {
2609:fltk-1.3.4-1/png/pngread.c ****                /* Is there alpha in the output too?  If so all four channels are
2610:fltk-1.3.4-1/png/pngread.c ****                 * processed into a special RGB cube with alpha support.
2611:fltk-1.3.4-1/png/pngread.c ****                 */
2612:fltk-1.3.4-1/png/pngread.c ****                if ((output_format & PNG_FORMAT_FLAG_ALPHA) != 0)
2613:fltk-1.3.4-1/png/pngread.c ****                {
2614:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 r;
2615:fltk-1.3.4-1/png/pngread.c **** 
2616:fltk-1.3.4-1/png/pngread.c ****                   if (PNG_RGB_COLORMAP_ENTRIES+1+27 > image->colormap_entries)
2617:fltk-1.3.4-1/png/pngread.c ****                      png_error(png_ptr, "rgb+alpha color-map: too few entries");
2618:fltk-1.3.4-1/png/pngread.c **** 
2619:fltk-1.3.4-1/png/pngread.c ****                   cmap_entries = make_rgb_colormap(display);
2620:fltk-1.3.4-1/png/pngread.c **** 
2621:fltk-1.3.4-1/png/pngread.c ****                   /* Add a transparent entry. */
2622:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, cmap_entries, 255, 255,
2623:fltk-1.3.4-1/png/pngread.c ****                      255, 0, P_sRGB);
2624:fltk-1.3.4-1/png/pngread.c **** 
2625:fltk-1.3.4-1/png/pngread.c ****                   /* This is stored as the background index for the processing
2626:fltk-1.3.4-1/png/pngread.c ****                    * algorithm.
2627:fltk-1.3.4-1/png/pngread.c ****                    */
2628:fltk-1.3.4-1/png/pngread.c ****                   background_index = cmap_entries++;
2629:fltk-1.3.4-1/png/pngread.c **** 
2630:fltk-1.3.4-1/png/pngread.c ****                   /* Add 27 r,g,b entries each with alpha 0.5. */
2631:fltk-1.3.4-1/png/pngread.c ****                   for (r=0; r<256; r = (r << 1) | 0x7f)
2632:fltk-1.3.4-1/png/pngread.c ****                   {
2633:fltk-1.3.4-1/png/pngread.c ****                      png_uint_32 g;
2634:fltk-1.3.4-1/png/pngread.c **** 
2635:fltk-1.3.4-1/png/pngread.c ****                      for (g=0; g<256; g = (g << 1) | 0x7f)
2636:fltk-1.3.4-1/png/pngread.c ****                      {
2637:fltk-1.3.4-1/png/pngread.c ****                         png_uint_32 b;
2638:fltk-1.3.4-1/png/pngread.c **** 
2639:fltk-1.3.4-1/png/pngread.c ****                         /* This generates components with the values 0, 127 and
2640:fltk-1.3.4-1/png/pngread.c ****                          * 255
2641:fltk-1.3.4-1/png/pngread.c ****                          */
2642:fltk-1.3.4-1/png/pngread.c ****                         for (b=0; b<256; b = (b << 1) | 0x7f)
2643:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
2644:fltk-1.3.4-1/png/pngread.c ****                               r, g, b, 128, P_sRGB);
2645:fltk-1.3.4-1/png/pngread.c ****                      }
2646:fltk-1.3.4-1/png/pngread.c ****                   }
2647:fltk-1.3.4-1/png/pngread.c **** 
2648:fltk-1.3.4-1/png/pngread.c ****                   expand_tRNS = 1;
2649:fltk-1.3.4-1/png/pngread.c ****                   output_processing = PNG_CMAP_RGB_ALPHA;
2650:fltk-1.3.4-1/png/pngread.c ****                }
2651:fltk-1.3.4-1/png/pngread.c **** 
2652:fltk-1.3.4-1/png/pngread.c ****                else
2653:fltk-1.3.4-1/png/pngread.c ****                {
2654:fltk-1.3.4-1/png/pngread.c ****                   /* Alpha/transparency must be removed.  The background must
2655:fltk-1.3.4-1/png/pngread.c ****                    * exist in the color map (achieved by setting adding it after
2656:fltk-1.3.4-1/png/pngread.c ****                    * the 666 color-map).  If the standard processing code will
2657:fltk-1.3.4-1/png/pngread.c ****                    * pick up this entry automatically that's all that is
2658:fltk-1.3.4-1/png/pngread.c ****                    * required; libpng can be called to do the background
2659:fltk-1.3.4-1/png/pngread.c ****                    * processing.
2660:fltk-1.3.4-1/png/pngread.c ****                    */
2661:fltk-1.3.4-1/png/pngread.c ****                   unsigned int sample_size =
2662:fltk-1.3.4-1/png/pngread.c ****                      PNG_IMAGE_SAMPLE_SIZE(output_format);
2663:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 r, g, b; /* sRGB background */
2664:fltk-1.3.4-1/png/pngread.c **** 
2665:fltk-1.3.4-1/png/pngread.c ****                   if (PNG_RGB_COLORMAP_ENTRIES+1+27 > image->colormap_entries)
2666:fltk-1.3.4-1/png/pngread.c ****                      png_error(png_ptr, "rgb-alpha color-map: too few entries");
2667:fltk-1.3.4-1/png/pngread.c **** 
2668:fltk-1.3.4-1/png/pngread.c ****                   cmap_entries = make_rgb_colormap(display);
2669:fltk-1.3.4-1/png/pngread.c **** 
2670:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, cmap_entries, back_r,
2671:fltk-1.3.4-1/png/pngread.c ****                         back_g, back_b, 0/*unused*/, output_encoding);
2672:fltk-1.3.4-1/png/pngread.c **** 
2673:fltk-1.3.4-1/png/pngread.c ****                   if (output_encoding == P_LINEAR)
2674:fltk-1.3.4-1/png/pngread.c ****                   {
2675:fltk-1.3.4-1/png/pngread.c ****                      r = PNG_sRGB_FROM_LINEAR(back_r * 255);
2676:fltk-1.3.4-1/png/pngread.c ****                      g = PNG_sRGB_FROM_LINEAR(back_g * 255);
2677:fltk-1.3.4-1/png/pngread.c ****                      b = PNG_sRGB_FROM_LINEAR(back_b * 255);
2678:fltk-1.3.4-1/png/pngread.c ****                   }
2679:fltk-1.3.4-1/png/pngread.c **** 
2680:fltk-1.3.4-1/png/pngread.c ****                   else
2681:fltk-1.3.4-1/png/pngread.c ****                   {
2682:fltk-1.3.4-1/png/pngread.c ****                      r = back_r;
2683:fltk-1.3.4-1/png/pngread.c ****                      g = back_g;
2684:fltk-1.3.4-1/png/pngread.c ****                      b = back_g;
2685:fltk-1.3.4-1/png/pngread.c ****                   }
2686:fltk-1.3.4-1/png/pngread.c **** 
2687:fltk-1.3.4-1/png/pngread.c ****                   /* Compare the newly-created color-map entry with the one the
2688:fltk-1.3.4-1/png/pngread.c ****                    * PNG_CMAP_RGB algorithm will use.  If the two entries don't
2689:fltk-1.3.4-1/png/pngread.c ****                    * match, add the new one and set this as the background
2690:fltk-1.3.4-1/png/pngread.c ****                    * index.
2691:fltk-1.3.4-1/png/pngread.c ****                    */
2692:fltk-1.3.4-1/png/pngread.c ****                   if (memcmp((png_const_bytep)display->colormap +
2693:fltk-1.3.4-1/png/pngread.c ****                         sample_size * cmap_entries,
2694:fltk-1.3.4-1/png/pngread.c ****                      (png_const_bytep)display->colormap +
2695:fltk-1.3.4-1/png/pngread.c ****                         sample_size * PNG_RGB_INDEX(r,g,b),
2696:fltk-1.3.4-1/png/pngread.c ****                      sample_size) != 0)
2697:fltk-1.3.4-1/png/pngread.c ****                   {
2698:fltk-1.3.4-1/png/pngread.c ****                      /* The background color must be added. */
2699:fltk-1.3.4-1/png/pngread.c ****                      background_index = cmap_entries++;
2700:fltk-1.3.4-1/png/pngread.c **** 
2701:fltk-1.3.4-1/png/pngread.c ****                      /* Add 27 r,g,b entries each with created by composing with
2702:fltk-1.3.4-1/png/pngread.c ****                       * the background at alpha 0.5.
2703:fltk-1.3.4-1/png/pngread.c ****                       */
2704:fltk-1.3.4-1/png/pngread.c ****                      for (r=0; r<256; r = (r << 1) | 0x7f)
2705:fltk-1.3.4-1/png/pngread.c ****                      {
2706:fltk-1.3.4-1/png/pngread.c ****                         for (g=0; g<256; g = (g << 1) | 0x7f)
2707:fltk-1.3.4-1/png/pngread.c ****                         {
2708:fltk-1.3.4-1/png/pngread.c ****                            /* This generates components with the values 0, 127
2709:fltk-1.3.4-1/png/pngread.c ****                             * and 255
2710:fltk-1.3.4-1/png/pngread.c ****                             */
2711:fltk-1.3.4-1/png/pngread.c ****                            for (b=0; b<256; b = (b << 1) | 0x7f)
2712:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
2713:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, r, P_sRGB, 128,
2714:fltk-1.3.4-1/png/pngread.c ****                                     back_r, output_encoding),
2715:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, g, P_sRGB, 128,
2716:fltk-1.3.4-1/png/pngread.c ****                                     back_g, output_encoding),
2717:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, b, P_sRGB, 128,
2718:fltk-1.3.4-1/png/pngread.c ****                                     back_b, output_encoding),
2719:fltk-1.3.4-1/png/pngread.c ****                                  0/*unused*/, output_encoding);
2720:fltk-1.3.4-1/png/pngread.c ****                         }
2721:fltk-1.3.4-1/png/pngread.c ****                      }
2722:fltk-1.3.4-1/png/pngread.c **** 
2723:fltk-1.3.4-1/png/pngread.c ****                      expand_tRNS = 1;
2724:fltk-1.3.4-1/png/pngread.c ****                      output_processing = PNG_CMAP_RGB_ALPHA;
2725:fltk-1.3.4-1/png/pngread.c ****                   }
2726:fltk-1.3.4-1/png/pngread.c **** 
2727:fltk-1.3.4-1/png/pngread.c ****                   else /* background color is in the standard color-map */
2728:fltk-1.3.4-1/png/pngread.c ****                   {
2729:fltk-1.3.4-1/png/pngread.c ****                      png_color_16 c;
2730:fltk-1.3.4-1/png/pngread.c **** 
2731:fltk-1.3.4-1/png/pngread.c ****                      c.index = 0; /*unused*/
2732:fltk-1.3.4-1/png/pngread.c ****                      c.red = (png_uint_16)back_r;
2733:fltk-1.3.4-1/png/pngread.c ****                      c.gray = c.green = (png_uint_16)back_g;
2734:fltk-1.3.4-1/png/pngread.c ****                      c.blue = (png_uint_16)back_b;
2735:fltk-1.3.4-1/png/pngread.c **** 
2736:fltk-1.3.4-1/png/pngread.c ****                      png_set_background_fixed(png_ptr, &c,
2737:fltk-1.3.4-1/png/pngread.c ****                         PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
2738:fltk-1.3.4-1/png/pngread.c ****                         0/*gamma: not used*/);
2739:fltk-1.3.4-1/png/pngread.c **** 
2740:fltk-1.3.4-1/png/pngread.c ****                      output_processing = PNG_CMAP_RGB;
2741:fltk-1.3.4-1/png/pngread.c ****                   }
2742:fltk-1.3.4-1/png/pngread.c ****                }
2743:fltk-1.3.4-1/png/pngread.c ****             }
2744:fltk-1.3.4-1/png/pngread.c **** 
2745:fltk-1.3.4-1/png/pngread.c ****             else /* no alpha or transparency in the input */
2746:fltk-1.3.4-1/png/pngread.c ****             {
2747:fltk-1.3.4-1/png/pngread.c ****                /* Alpha in the output is irrelevant, simply map the opaque input
2748:fltk-1.3.4-1/png/pngread.c ****                 * pixels to the 6x6x6 color-map.
2749:fltk-1.3.4-1/png/pngread.c ****                 */
2750:fltk-1.3.4-1/png/pngread.c ****                if (PNG_RGB_COLORMAP_ENTRIES > image->colormap_entries)
 3727              		.loc 1 2750 16 is_stmt 1 view .LVU1010
 3728              		.loc 1 2750 19 is_stmt 0 view .LVU1011
 3729 01c8 3DD70000 		cmpl	$215, %eax
 3729      00
 3730 01cd 0F869810 		jbe	.L504
 3730      0000
2751:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb color-map: too few entries");
2752:fltk-1.3.4-1/png/pngread.c **** 
2753:fltk-1.3.4-1/png/pngread.c ****                cmap_entries = make_rgb_colormap(display);
 3731              		.loc 1 2753 16 is_stmt 1 view .LVU1012
 3732              		.loc 1 2753 31 is_stmt 0 view .LVU1013
 3733 01d3 4889EF   		movq	%rbp, %rdi
2754:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_RGB;
 3734              		.loc 1 2754 34 view .LVU1014
 3735 01d6 41BD0300 		movl	$3, %r13d
 3735      0000
2753:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_RGB;
 3736              		.loc 1 2753 31 view .LVU1015
 3737 01dc E8000000 		call	make_rgb_colormap
 3737      00
 3738              	.LVL394:
2077:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 back_r, back_g, back_b;
 3739              		.loc 1 2077 17 view .LVU1016
 3740 01e1 C744242C 		movl	$256, 44(%rsp)
 3740      00010000 
2753:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_RGB;
 3741              		.loc 1 2753 31 view .LVU1017
 3742 01e9 89C3     		movl	%eax, %ebx
 3743              	.LVL395:
 3744              		.loc 1 2754 16 is_stmt 1 view .LVU1018
2755:fltk-1.3.4-1/png/pngread.c ****             }
2756:fltk-1.3.4-1/png/pngread.c ****          }
2757:fltk-1.3.4-1/png/pngread.c ****          break;
2758:fltk-1.3.4-1/png/pngread.c **** 
2759:fltk-1.3.4-1/png/pngread.c ****       case PNG_COLOR_TYPE_PALETTE:
2760:fltk-1.3.4-1/png/pngread.c ****          /* It's already got a color-map.  It may be necessary to eliminate the
2761:fltk-1.3.4-1/png/pngread.c ****           * tRNS entries though.
2762:fltk-1.3.4-1/png/pngread.c ****           */
2763:fltk-1.3.4-1/png/pngread.c ****          {
2764:fltk-1.3.4-1/png/pngread.c ****             unsigned int num_trans = png_ptr->num_trans;
2765:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep trans = num_trans > 0 ? png_ptr->trans_alpha : NULL;
2766:fltk-1.3.4-1/png/pngread.c ****             png_const_colorp colormap = png_ptr->palette;
2767:fltk-1.3.4-1/png/pngread.c ****             const int do_background = trans != NULL &&
2768:fltk-1.3.4-1/png/pngread.c ****                (output_format & PNG_FORMAT_FLAG_ALPHA) == 0;
2769:fltk-1.3.4-1/png/pngread.c ****             unsigned int i;
2770:fltk-1.3.4-1/png/pngread.c **** 
2771:fltk-1.3.4-1/png/pngread.c ****             /* Just in case: */
2772:fltk-1.3.4-1/png/pngread.c ****             if (trans == NULL)
2773:fltk-1.3.4-1/png/pngread.c ****                num_trans = 0;
2774:fltk-1.3.4-1/png/pngread.c **** 
2775:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_NONE;
2776:fltk-1.3.4-1/png/pngread.c ****             data_encoding = P_FILE; /* Don't change from color-map indices */
2777:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = png_ptr->num_palette;
2778:fltk-1.3.4-1/png/pngread.c ****             if (cmap_entries > 256)
2779:fltk-1.3.4-1/png/pngread.c ****                cmap_entries = 256;
2780:fltk-1.3.4-1/png/pngread.c **** 
2781:fltk-1.3.4-1/png/pngread.c ****             if (cmap_entries > image->colormap_entries)
2782:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "palette color-map: too few entries");
2783:fltk-1.3.4-1/png/pngread.c **** 
2784:fltk-1.3.4-1/png/pngread.c ****             for (i=0; i < cmap_entries; ++i)
2785:fltk-1.3.4-1/png/pngread.c ****             {
2786:fltk-1.3.4-1/png/pngread.c ****                if (do_background != 0 && i < num_trans && trans[i] < 255)
2787:fltk-1.3.4-1/png/pngread.c ****                {
2788:fltk-1.3.4-1/png/pngread.c ****                   if (trans[i] == 0)
2789:fltk-1.3.4-1/png/pngread.c ****                      png_create_colormap_entry(display, i, back_r, back_g,
2790:fltk-1.3.4-1/png/pngread.c ****                         back_b, 0, output_encoding);
2791:fltk-1.3.4-1/png/pngread.c **** 
2792:fltk-1.3.4-1/png/pngread.c ****                   else
2793:fltk-1.3.4-1/png/pngread.c ****                   {
2794:fltk-1.3.4-1/png/pngread.c ****                      /* Must compose the PNG file color in the color-map entry
2795:fltk-1.3.4-1/png/pngread.c ****                       * on the sRGB color in 'back'.
2796:fltk-1.3.4-1/png/pngread.c ****                       */
2797:fltk-1.3.4-1/png/pngread.c ****                      png_create_colormap_entry(display, i,
2798:fltk-1.3.4-1/png/pngread.c ****                         png_colormap_compose(display, colormap[i].red, P_FILE,
2799:fltk-1.3.4-1/png/pngread.c ****                            trans[i], back_r, output_encoding),
2800:fltk-1.3.4-1/png/pngread.c ****                         png_colormap_compose(display, colormap[i].green, P_FILE,
2801:fltk-1.3.4-1/png/pngread.c ****                            trans[i], back_g, output_encoding),
2802:fltk-1.3.4-1/png/pngread.c ****                         png_colormap_compose(display, colormap[i].blue, P_FILE,
2803:fltk-1.3.4-1/png/pngread.c ****                            trans[i], back_b, output_encoding),
2804:fltk-1.3.4-1/png/pngread.c ****                         output_encoding == P_LINEAR ? trans[i] * 257U :
2805:fltk-1.3.4-1/png/pngread.c ****                            trans[i],
2806:fltk-1.3.4-1/png/pngread.c ****                         output_encoding);
2807:fltk-1.3.4-1/png/pngread.c ****                   }
2808:fltk-1.3.4-1/png/pngread.c ****                }
2809:fltk-1.3.4-1/png/pngread.c **** 
2810:fltk-1.3.4-1/png/pngread.c ****                else
2811:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i, colormap[i].red,
2812:fltk-1.3.4-1/png/pngread.c ****                      colormap[i].green, colormap[i].blue,
2813:fltk-1.3.4-1/png/pngread.c ****                      i < num_trans ? trans[i] : 255U, P_FILE/*8-bit*/);
2814:fltk-1.3.4-1/png/pngread.c ****             }
2815:fltk-1.3.4-1/png/pngread.c **** 
2816:fltk-1.3.4-1/png/pngread.c ****             /* The PNG data may have indices packed in fewer than 8 bits, it
2817:fltk-1.3.4-1/png/pngread.c ****              * must be expanded if so.
2818:fltk-1.3.4-1/png/pngread.c ****              */
2819:fltk-1.3.4-1/png/pngread.c ****             if (png_ptr->bit_depth < 8)
2820:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
2821:fltk-1.3.4-1/png/pngread.c ****          }
2822:fltk-1.3.4-1/png/pngread.c ****          break;
2823:fltk-1.3.4-1/png/pngread.c **** 
2824:fltk-1.3.4-1/png/pngread.c ****       default:
2825:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "invalid PNG color type");
2826:fltk-1.3.4-1/png/pngread.c ****          /*NOT REACHED*/
2827:fltk-1.3.4-1/png/pngread.c ****          break;
 3745              		.loc 1 2827 10 view .LVU1019
2828:fltk-1.3.4-1/png/pngread.c ****    }
2829:fltk-1.3.4-1/png/pngread.c **** 
2830:fltk-1.3.4-1/png/pngread.c ****    /* Now deal with the output processing */
2831:fltk-1.3.4-1/png/pngread.c ****    if (expand_tRNS != 0 && png_ptr->num_trans > 0 &&
 3746              		.loc 1 2831 4 view .LVU1020
 3747 01eb 0F1F4400 		.p2align 4,,10
 3747      00
 3748              		.p2align 3
 3749              	.L326:
2832:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
2833:fltk-1.3.4-1/png/pngread.c ****       png_set_tRNS_to_alpha(png_ptr);
2834:fltk-1.3.4-1/png/pngread.c **** 
2835:fltk-1.3.4-1/png/pngread.c ****    switch (data_encoding)
2836:fltk-1.3.4-1/png/pngread.c ****    {
2837:fltk-1.3.4-1/png/pngread.c ****       default:
2838:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "bad data option (internal error)");
2839:fltk-1.3.4-1/png/pngread.c ****          break;
 3750              		.loc 1 2839 10 view .LVU1021
2840:fltk-1.3.4-1/png/pngread.c **** 
2841:fltk-1.3.4-1/png/pngread.c ****       case P_sRGB:
2842:fltk-1.3.4-1/png/pngread.c ****          /* Change to 8-bit sRGB */
2843:fltk-1.3.4-1/png/pngread.c ****          png_set_alpha_mode_fixed(png_ptr, PNG_ALPHA_PNG, PNG_GAMMA_sRGB);
 3751              		.loc 1 2843 10 view .LVU1022
 3752 01f0 488B3C24 		movq	(%rsp), %rdi
 3753 01f4 BA605B03 		movl	$220000, %edx
 3753      00
 3754 01f9 31F6     		xorl	%esi, %esi
 3755 01fb E8000000 		call	png_set_alpha_mode_fixed@PLT
 3755      00
 3756              	.LVL396:
 3757              	.L391:
2844:fltk-1.3.4-1/png/pngread.c ****          /* FALL THROUGH */
2845:fltk-1.3.4-1/png/pngread.c **** 
2846:fltk-1.3.4-1/png/pngread.c ****       case P_FILE:
2847:fltk-1.3.4-1/png/pngread.c ****          if (png_ptr->bit_depth > 8)
 3758              		.loc 1 2847 10 view .LVU1023
 3759              		.loc 1 2847 13 is_stmt 0 view .LVU1024
 3760 0200 488B0424 		movq	(%rsp), %rax
 3761 0204 80B87802 		cmpb	$8, 632(%rax)
 3761      000008
 3762 020b 0F87E303 		ja	.L407
 3762      0000
 3763              	.L392:
2848:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
2849:fltk-1.3.4-1/png/pngread.c ****          break;
 3764              		.loc 1 2849 10 is_stmt 1 view .LVU1025
2850:fltk-1.3.4-1/png/pngread.c ****    }
2851:fltk-1.3.4-1/png/pngread.c **** 
2852:fltk-1.3.4-1/png/pngread.c ****    if (cmap_entries > 256 || cmap_entries > image->colormap_entries)
 3765              		.loc 1 2852 4 view .LVU1026
 3766              		.loc 1 2852 7 is_stmt 0 view .LVU1027
 3767 0211 81FB0001 		cmpl	$256, %ebx
 3767      0000
 3768 0217 0F871910 		ja	.L394
 3768      0000
 3769              		.loc 1 2852 27 discriminator 1 view .LVU1028
 3770 021d 488B4424 		movq	24(%rsp), %rax
 3770      18
 3771 0222 39581C   		cmpl	%ebx, 28(%rax)
 3772 0225 0F820B10 		jb	.L394
 3772      0000
2853:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "color map overflow (BAD internal error)");
2854:fltk-1.3.4-1/png/pngread.c **** 
2855:fltk-1.3.4-1/png/pngread.c ****    image->colormap_entries = cmap_entries;
 3773              		.loc 1 2855 4 is_stmt 1 view .LVU1029
 3774              		.loc 1 2855 28 is_stmt 0 view .LVU1030
 3775 022b 89581C   		movl	%ebx, 28(%rax)
2856:fltk-1.3.4-1/png/pngread.c **** 
2857:fltk-1.3.4-1/png/pngread.c ****    /* Double check using the recorded background index */
2858:fltk-1.3.4-1/png/pngread.c ****    switch (output_processing)
 3776              		.loc 1 2858 4 is_stmt 1 view .LVU1031
 3777 022e 4183FD03 		cmpl	$3, %r13d
 3778 0232 0F844808 		je	.L396
 3778      0000
 3779 0238 4183FD04 		cmpl	$4, %r13d
 3780 023c 0F841E08 		je	.L397
 3780      0000
 3781 0242 4183FD01 		cmpl	$1, %r13d
 3782 0246 0F844408 		je	.L398
 3782      0000
 3783 024c 4183FD02 		cmpl	$2, %r13d
 3784 0250 0F852A08 		jne	.L396
 3784      0000
2859:fltk-1.3.4-1/png/pngread.c ****    {
2860:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_NONE:
2861:fltk-1.3.4-1/png/pngread.c ****          if (background_index != PNG_CMAP_NONE_BACKGROUND)
2862:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
2863:fltk-1.3.4-1/png/pngread.c ****          break;
2864:fltk-1.3.4-1/png/pngread.c **** 
2865:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_GA:
2866:fltk-1.3.4-1/png/pngread.c ****          if (background_index != PNG_CMAP_GA_BACKGROUND)
2867:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
2868:fltk-1.3.4-1/png/pngread.c ****          break;
2869:fltk-1.3.4-1/png/pngread.c **** 
2870:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_TRANS:
2871:fltk-1.3.4-1/png/pngread.c ****          if (background_index >= cmap_entries ||
 3785              		.loc 1 2871 10 view .LVU1032
 3786              		.loc 1 2871 13 is_stmt 0 view .LVU1033
 3787 0256 8B44242C 		movl	44(%rsp), %eax
 3788 025a 39C3     		cmpl	%eax, %ebx
 3789 025c 0F860C08 		jbe	.L400
 3789      0000
 3790 0262 3DFE0000 		cmpl	$254, %eax
 3790      00
 3791 0267 0F850108 		jne	.L400
 3791      0000
 3792 026d 0F1F00   		.p2align 4,,10
 3793              		.p2align 3
 3794              	.L395:
2872:fltk-1.3.4-1/png/pngread.c ****             background_index != PNG_CMAP_TRANS_BACKGROUND)
2873:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
2874:fltk-1.3.4-1/png/pngread.c ****          break;
2875:fltk-1.3.4-1/png/pngread.c **** 
2876:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_RGB:
2877:fltk-1.3.4-1/png/pngread.c ****          if (background_index != PNG_CMAP_RGB_BACKGROUND)
2878:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
2879:fltk-1.3.4-1/png/pngread.c ****          break;
2880:fltk-1.3.4-1/png/pngread.c **** 
2881:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_RGB_ALPHA:
2882:fltk-1.3.4-1/png/pngread.c ****          if (background_index != PNG_CMAP_RGB_ALPHA_BACKGROUND)
2883:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
2884:fltk-1.3.4-1/png/pngread.c ****          break;
2885:fltk-1.3.4-1/png/pngread.c **** 
2886:fltk-1.3.4-1/png/pngread.c ****       default:
2887:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "bad processing option (internal error)");
2888:fltk-1.3.4-1/png/pngread.c **** 
2889:fltk-1.3.4-1/png/pngread.c ****       bad_background:
2890:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "bad background index (internal error)");
2891:fltk-1.3.4-1/png/pngread.c ****    }
2892:fltk-1.3.4-1/png/pngread.c **** 
2893:fltk-1.3.4-1/png/pngread.c ****    display->colormap_processing = output_processing;
 3795              		.loc 1 2893 4 is_stmt 1 view .LVU1034
 3796              		.loc 1 2893 33 is_stmt 0 view .LVU1035
 3797 0270 44896D48 		movl	%r13d, 72(%rbp)
2894:fltk-1.3.4-1/png/pngread.c **** 
2895:fltk-1.3.4-1/png/pngread.c ****    return 1/*ok*/;
 3798              		.loc 1 2895 4 is_stmt 1 view .LVU1036
2896:fltk-1.3.4-1/png/pngread.c **** }
 3799              		.loc 1 2896 1 is_stmt 0 view .LVU1037
 3800 0274 488B4424 		movq	88(%rsp), %rax
 3800      58
 3801 0279 64483304 		xorq	%fs:40, %rax
 3801      25280000 
 3801      00
 3802 0282 0F85CE0F 		jne	.L505
 3802      0000
 3803 0288 4883C468 		addq	$104, %rsp
 3804              		.cfi_remember_state
 3805              		.cfi_def_cfa_offset 56
 3806              	.LVL397:
 3807              		.loc 1 2896 1 view .LVU1038
 3808 028c B8010000 		movl	$1, %eax
 3808      00
 3809 0291 5B       		popq	%rbx
 3810              		.cfi_def_cfa_offset 48
 3811 0292 5D       		popq	%rbp
 3812              		.cfi_def_cfa_offset 40
 3813 0293 415C     		popq	%r12
 3814              		.cfi_def_cfa_offset 32
 3815 0295 415D     		popq	%r13
 3816              		.cfi_def_cfa_offset 24
 3817 0297 415E     		popq	%r14
 3818              		.cfi_def_cfa_offset 16
 3819 0299 415F     		popq	%r15
 3820              		.cfi_def_cfa_offset 8
 3821 029b C3       		ret
 3822              	.LVL398:
 3823 029c 0F1F4000 		.p2align 4,,10
 3824              		.p2align 3
 3825              	.L317:
 3826              		.cfi_restore_state
2152:fltk-1.3.4-1/png/pngread.c ****          {
 3827              		.loc 1 2152 10 is_stmt 1 view .LVU1039
2152:fltk-1.3.4-1/png/pngread.c ****          {
 3828              		.loc 1 2152 21 is_stmt 0 view .LVU1040
 3829 02a0 488B0424 		movq	(%rsp), %rax
 3830 02a4 0FB68878 		movzbl	632(%rax), %ecx
 3830      020000
 3831 02ab 488B4424 		movq	24(%rsp), %rax
 3831      18
 3832 02b0 8B501C   		movl	28(%rax), %edx
2152:fltk-1.3.4-1/png/pngread.c ****          {
 3833              		.loc 1 2152 13 view .LVU1041
 3834 02b3 80F908   		cmpb	$8, %cl
 3835 02b6 0F87C405 		ja	.L318
 3835      0000
 3836              	.LBB166:
2157:fltk-1.3.4-1/png/pngread.c **** 
 3837              		.loc 1 2157 13 is_stmt 1 view .LVU1042
 3838              	.LVL399:
2159:fltk-1.3.4-1/png/pngread.c ****             if (cmap_entries > image->colormap_entries)
 3839              		.loc 1 2159 13 view .LVU1043
2159:fltk-1.3.4-1/png/pngread.c ****             if (cmap_entries > image->colormap_entries)
 3840              		.loc 1 2159 26 is_stmt 0 view .LVU1044
 3841 02bc B8010000 		movl	$1, %eax
 3841      00
 3842 02c1 D3E0     		sall	%cl, %eax
 3843 02c3 89C3     		movl	%eax, %ebx
 3844              	.LVL400:
2160:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray[8] color-map: too few entries");
 3845              		.loc 1 2160 13 is_stmt 1 view .LVU1045
2160:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray[8] color-map: too few entries");
 3846              		.loc 1 2160 16 is_stmt 0 view .LVU1046
 3847 02c5 39D0     		cmpl	%edx, %eax
 3848 02c7 0F878E0F 		ja	.L506
 3848      0000
2163:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_NONE;
 3849              		.loc 1 2163 13 is_stmt 1 view .LVU1047
2163:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_NONE;
 3850              		.loc 1 2163 18 is_stmt 0 view .LVU1048
 3851 02cd B9FF0000 		movl	$255, %ecx
 3851      00
2163:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_NONE;
 3852              		.loc 1 2163 40 view .LVU1049
 3853 02d2 8D70FF   		leal	-1(%rax), %esi
2163:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_NONE;
 3854              		.loc 1 2163 18 view .LVU1050
 3855 02d5 31D2     		xorl	%edx, %edx
 3856 02d7 89C8     		movl	%ecx, %eax
 3857              	.LVL401:
2163:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_NONE;
 3858              		.loc 1 2163 18 view .LVU1051
 3859 02d9 F7F6     		divl	%esi
 3860 02db 89C7     		movl	%eax, %edi
 3861              	.LVL402:
2164:fltk-1.3.4-1/png/pngread.c **** 
 3862              		.loc 1 2164 13 is_stmt 1 view .LVU1052
2169:fltk-1.3.4-1/png/pngread.c ****             {
 3863              		.loc 1 2169 13 view .LVU1053
2169:fltk-1.3.4-1/png/pngread.c ****             {
 3864              		.loc 1 2169 16 is_stmt 0 view .LVU1054
 3865 02dd 488B0424 		movq	(%rsp), %rax
 3866              	.LVL403:
2169:fltk-1.3.4-1/png/pngread.c ****             {
 3867              		.loc 1 2169 16 view .LVU1055
 3868 02e1 6683B870 		cmpw	$0, 624(%rax)
 3868      02000000 
 3869 02e9 0F844109 		je	.L418
 3869      0000
2171:fltk-1.3.4-1/png/pngread.c **** 
 3870              		.loc 1 2171 16 is_stmt 1 view .LVU1056
2171:fltk-1.3.4-1/png/pngread.c **** 
 3871              		.loc 1 2171 22 is_stmt 0 view .LVU1057
 3872 02ef 0FB78008 		movzwl	776(%rax), %eax
 3872      030000
2173:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = output_encoding == P_LINEAR ? 65535 : 255;
 3873              		.loc 1 2173 19 view .LVU1058
 3874 02f6 4183E001 		andl	$1, %r8d
 3875              	.LVL404:
2157:fltk-1.3.4-1/png/pngread.c **** 
 3876              		.loc 1 2157 63 view .LVU1059
 3877 02fa C7442420 		movl	$0, 32(%rsp)
 3877      00000000 
2171:fltk-1.3.4-1/png/pngread.c **** 
 3878              		.loc 1 2171 22 view .LVU1060
 3879 0302 89C6     		movl	%eax, %esi
 3880              	.LVL405:
2173:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = output_encoding == P_LINEAR ? 65535 : 255;
 3881              		.loc 1 2173 16 is_stmt 1 view .LVU1061
2173:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = output_encoding == P_LINEAR ? 65535 : 255;
 3882              		.loc 1 2173 19 is_stmt 0 view .LVU1062
 3883 0304 0F84FE0A 		je	.L507
 3883      0000
 3884              	.LVL406:
 3885              	.L320:
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3886              		.loc 1 2184 13 is_stmt 1 view .LVU1063
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3887              		.loc 1 2184 27 view .LVU1064
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3888              		.loc 1 2184 23 is_stmt 0 view .LVU1065
 3889 030a 4531E4   		xorl	%r12d, %r12d
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3890              		.loc 1 2184 19 view .LVU1066
 3891 030d 4531ED   		xorl	%r13d, %r13d
 3892 0310 44897C24 		movl	%r15d, 40(%rsp)
 3892      28
 3893 0315 44897424 		movl	%r14d, 44(%rsp)
 3893      2C
 3894 031a 4589E7   		movl	%r12d, %r15d
 3895              	.LVL407:
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3896              		.loc 1 2184 19 view .LVU1067
 3897 031d 4589EE   		movl	%r13d, %r14d
 3898 0320 4189F4   		movl	%esi, %r12d
 3899 0323 4189FD   		movl	%edi, %r13d
 3900 0326 EB36     		jmp	.L323
 3901              	.LVL408:
 3902 0328 0F1F8400 		.p2align 4,,10
 3902      00000000 
 3903              		.p2align 3
 3904              	.L508:
2191:fltk-1.3.4-1/png/pngread.c ****                      P_FILE/*8-bit with file gamma*/);
 3905              		.loc 1 2191 19 is_stmt 1 view .LVU1068
 3906 0330 4883EC08 		subq	$8, %rsp
 3907              		.cfi_def_cfa_offset 168
 3908              	.LVL409:
2191:fltk-1.3.4-1/png/pngread.c ****                      P_FILE/*8-bit with file gamma*/);
 3909              		.loc 1 2191 19 is_stmt 0 view .LVU1069
 3910 0334 4489F9   		movl	%r15d, %ecx
 3911 0337 4489F6   		movl	%r14d, %esi
 3912 033a 4589F8   		movl	%r15d, %r8d
 3913 033d 6A03     		pushq	$3
 3914              		.cfi_def_cfa_offset 176
 3915 033f 4489FA   		movl	%r15d, %edx
 3916 0342 41B9FF00 		movl	$255, %r9d
 3916      0000
 3917 0348 4889EF   		movq	%rbp, %rdi
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3918              		.loc 1 2184 43 view .LVU1070
 3919 034b 4183C601 		addl	$1, %r14d
 3920              	.LVL410:
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3921              		.loc 1 2184 52 view .LVU1071
 3922 034f 4501EF   		addl	%r13d, %r15d
 3923              	.LVL411:
2191:fltk-1.3.4-1/png/pngread.c ****                      P_FILE/*8-bit with file gamma*/);
 3924              		.loc 1 2191 19 view .LVU1072
 3925 0352 E8000000 		call	png_create_colormap_entry
 3925      00
 3926              	.LVL412:
2191:fltk-1.3.4-1/png/pngread.c ****                      P_FILE/*8-bit with file gamma*/);
 3927              		.loc 1 2191 19 view .LVU1073
 3928 0357 59       		popq	%rcx
 3929              		.cfi_def_cfa_offset 168
 3930 0358 5E       		popq	%rsi
 3931              		.cfi_def_cfa_offset 160
 3932              	.LVL413:
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3933              		.loc 1 2184 43 is_stmt 1 view .LVU1074
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3934              		.loc 1 2184 27 view .LVU1075
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3935              		.loc 1 2184 13 is_stmt 0 view .LVU1076
 3936 0359 4439F3   		cmpl	%r14d, %ebx
 3937 035c 7442     		je	.L390
 3938              	.LVL414:
 3939              	.L323:
2190:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i, val, val, val, 255,
 3940              		.loc 1 2190 16 is_stmt 1 view .LVU1077
2190:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i, val, val, val, 255,
 3941              		.loc 1 2190 19 is_stmt 0 view .LVU1078
 3942 035e 4539F4   		cmpl	%r14d, %r12d
 3943 0361 75CD     		jne	.L508
2203:fltk-1.3.4-1/png/pngread.c ****                      back_alpha, output_encoding);
 3944              		.loc 1 2203 19 is_stmt 1 view .LVU1079
 3945 0363 4883EC08 		subq	$8, %rsp
 3946              		.cfi_def_cfa_offset 168
 3947              	.LVL415:
2203:fltk-1.3.4-1/png/pngread.c ****                      back_alpha, output_encoding);
 3948              		.loc 1 2203 19 is_stmt 0 view .LVU1080
 3949 0367 4489E6   		movl	%r12d, %esi
 3950 036a 4889EF   		movq	%rbp, %rdi
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3951              		.loc 1 2184 43 view .LVU1081
 3952 036d 4183C601 		addl	$1, %r14d
 3953              	.LVL416:
2203:fltk-1.3.4-1/png/pngread.c ****                      back_alpha, output_encoding);
 3954              		.loc 1 2203 19 view .LVU1082
 3955 0371 8B442434 		movl	52(%rsp), %eax
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3956              		.loc 1 2184 52 view .LVU1083
 3957 0375 4501EF   		addl	%r13d, %r15d
 3958              	.LVL417:
2203:fltk-1.3.4-1/png/pngread.c ****                      back_alpha, output_encoding);
 3959              		.loc 1 2203 19 view .LVU1084
 3960 0378 50       		pushq	%rax
 3961              		.cfi_def_cfa_offset 176
 3962 0379 448B4C24 		movl	48(%rsp), %r9d
 3962      30
 3963 037e 448B4424 		movl	36(%rsp), %r8d
 3963      24
 3964 0383 8B4C2438 		movl	56(%rsp), %ecx
 3965 0387 8B542418 		movl	24(%rsp), %edx
 3966 038b E8000000 		call	png_create_colormap_entry
 3966      00
 3967              	.LVL418:
 3968 0390 58       		popq	%rax
 3969              		.cfi_def_cfa_offset 168
 3970 0391 5A       		popq	%rdx
 3971              		.cfi_def_cfa_offset 160
 3972              	.LVL419:
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3973              		.loc 1 2184 43 is_stmt 1 view .LVU1085
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3974              		.loc 1 2184 27 view .LVU1086
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3975              		.loc 1 2184 13 is_stmt 0 view .LVU1087
 3976 0392 4439F3   		cmpl	%r14d, %ebx
 3977 0395 75C7     		jne	.L323
 3978              	.LVL420:
 3979 0397 660F1F84 		.p2align 4,,10
 3979      00000000 
 3979      00
 3980              		.p2align 3
 3981              	.L390:
2184:fltk-1.3.4-1/png/pngread.c ****             {
 3982              		.loc 1 2184 13 view .LVU1088
 3983              	.LBE166:
 3984              	.LBB167:
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 3985              		.loc 1 2819 13 is_stmt 1 view .LVU1089
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 3986              		.loc 1 2819 24 is_stmt 0 view .LVU1090
 3987 03a0 488B0424 		movq	(%rsp), %rax
 3988 03a4 0FB68078 		movzbl	632(%rax), %eax
 3988      020000
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 3989              		.loc 1 2819 16 view .LVU1091
 3990 03ab 3C07     		cmpb	$7, %al
 3991 03ad 0F861A02 		jbe	.L509
 3991      0000
 3992              	.LVL421:
 3993              	.L324:
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 3994              		.loc 1 2819 16 view .LVU1092
 3995              	.LBE167:
2847:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
 3996              		.loc 1 2847 10 is_stmt 1 view .LVU1093
2847:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
 3997              		.loc 1 2847 13 is_stmt 0 view .LVU1094
 3998 03b3 3C08     		cmpb	$8, %al
 3999 03b5 0F872E02 		ja	.L510
 3999      0000
 4000              	.L489:
2852:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "color map overflow (BAD internal error)");
 4001              		.loc 1 2852 27 view .LVU1095
 4002 03bb 488B4424 		movq	24(%rsp), %rax
 4002      18
 4003 03c0 39581C   		cmpl	%ebx, 28(%rax)
 4004 03c3 0F826D0E 		jb	.L394
 4004      0000
2855:fltk-1.3.4-1/png/pngread.c **** 
 4005              		.loc 1 2855 4 is_stmt 1 view .LVU1096
2855:fltk-1.3.4-1/png/pngread.c **** 
 4006              		.loc 1 2855 28 is_stmt 0 view .LVU1097
 4007 03c9 89581C   		movl	%ebx, 28(%rax)
2858:fltk-1.3.4-1/png/pngread.c ****    {
 4008              		.loc 1 2858 4 is_stmt 1 view .LVU1098
2861:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
 4009              		.loc 1 2861 10 view .LVU1099
2855:fltk-1.3.4-1/png/pngread.c **** 
 4010              		.loc 1 2855 28 is_stmt 0 view .LVU1100
 4011 03cc 4531ED   		xorl	%r13d, %r13d
 4012 03cf E99CFEFF 		jmp	.L395
 4012      FF
 4013              	.LVL422:
 4014              		.p2align 4,,10
 4015 03d4 0F1F4000 		.p2align 3
 4016              	.L315:
2327:fltk-1.3.4-1/png/pngread.c **** 
 4017              		.loc 1 2327 10 is_stmt 1 view .LVU1101
2329:fltk-1.3.4-1/png/pngread.c ****          {
 4018              		.loc 1 2329 10 view .LVU1102
 4019 03d8 488B4424 		movq	24(%rsp), %rax
 4019      18
2329:fltk-1.3.4-1/png/pngread.c ****          {
 4020              		.loc 1 2329 13 is_stmt 0 view .LVU1103
 4021 03dd 4589C5   		movl	%r8d, %r13d
 4022 03e0 8B401C   		movl	28(%rax), %eax
 4023 03e3 4183E501 		andl	$1, %r13d
 4024 03e7 0F844302 		je	.L331
 4024      0000
2331:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray+alpha color-map: too few entries");
 4025              		.loc 1 2331 13 is_stmt 1 view .LVU1104
2331:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray+alpha color-map: too few entries");
 4026              		.loc 1 2331 16 is_stmt 0 view .LVU1105
 4027 03ed 3DFF0000 		cmpl	$255, %eax
 4027      00
 4028 03f2 0F86C30E 		jbe	.L511
 4028      0000
2334:fltk-1.3.4-1/png/pngread.c **** 
 4029              		.loc 1 2334 13 is_stmt 1 view .LVU1106
2334:fltk-1.3.4-1/png/pngread.c **** 
 4030              		.loc 1 2334 28 is_stmt 0 view .LVU1107
 4031 03f8 4889EF   		movq	%rbp, %rdi
 4032 03fb E8000000 		call	make_ga_colormap
 4032      00
 4033              	.LVL423:
2336:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_GA;
 4034              		.loc 1 2336 30 view .LVU1108
 4035 0400 C744242C 		movl	$231, 44(%rsp)
 4035      E7000000 
2334:fltk-1.3.4-1/png/pngread.c **** 
 4036              		.loc 1 2334 28 view .LVU1109
 4037 0408 89C3     		movl	%eax, %ebx
 4038              	.LVL424:
2336:fltk-1.3.4-1/png/pngread.c ****             output_processing = PNG_CMAP_GA;
 4039              		.loc 1 2336 13 is_stmt 1 view .LVU1110
2337:fltk-1.3.4-1/png/pngread.c ****          }
 4040              		.loc 1 2337 13 view .LVU1111
2827:fltk-1.3.4-1/png/pngread.c ****    }
 4041              		.loc 1 2827 10 view .LVU1112
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 4042              		.loc 1 2831 4 view .LVU1113
 4043 040a E9E1FDFF 		jmp	.L326
 4043      FF
 4044              	.LVL425:
 4045 040f 90       		.p2align 4,,10
 4046              		.p2align 3
 4047              	.L316:
 4048              	.LBB168:
2764:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep trans = num_trans > 0 ? png_ptr->trans_alpha : NULL;
 4049              		.loc 1 2764 13 view .LVU1114
2764:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep trans = num_trans > 0 ? png_ptr->trans_alpha : NULL;
 4050              		.loc 1 2764 26 is_stmt 0 view .LVU1115
 4051 0410 488B0424 		movq	(%rsp), %rax
 4052 0414 0FB79870 		movzwl	624(%rax), %ebx
 4052      020000
 4053 041b 4C8BA860 		movq	608(%rax), %r13
 4053      020000
 4054 0422 89DF     		movl	%ebx, %edi
 4055              	.LVL426:
2765:fltk-1.3.4-1/png/pngread.c ****             png_const_colorp colormap = png_ptr->palette;
 4056              		.loc 1 2765 13 is_stmt 1 view .LVU1116
2765:fltk-1.3.4-1/png/pngread.c ****             png_const_colorp colormap = png_ptr->palette;
 4057              		.loc 1 2765 74 is_stmt 0 view .LVU1117
 4058 0424 85DB     		testl	%ebx, %ebx
 4059 0426 0F85DC01 		jne	.L512
 4059      0000
 4060 042c 48C74424 		movq	$0, 32(%rsp)
 4060      20000000 
 4060      00
 4061 0435 4531C0   		xorl	%r8d, %r8d
 4062              	.LVL427:
 4063              	.L379:
2775:fltk-1.3.4-1/png/pngread.c ****             data_encoding = P_FILE; /* Don't change from color-map indices */
 4064              		.loc 1 2775 13 is_stmt 1 view .LVU1118
2776:fltk-1.3.4-1/png/pngread.c ****             cmap_entries = png_ptr->num_palette;
 4065              		.loc 1 2776 13 view .LVU1119
2777:fltk-1.3.4-1/png/pngread.c ****             if (cmap_entries > 256)
 4066              		.loc 1 2777 13 view .LVU1120
2777:fltk-1.3.4-1/png/pngread.c ****             if (cmap_entries > 256)
 4067              		.loc 1 2777 35 is_stmt 0 view .LVU1121
 4068 0438 488B0424 		movq	(%rsp), %rax
 4069 043c 0FB79868 		movzwl	616(%rax), %ebx
 4069      020000
 4070 0443 B8000100 		movl	$256, %eax
 4070      00
 4071 0448 6681FB00 		cmpw	$256, %bx
 4071      01
 4072 044d 89DA     		movl	%ebx, %edx
 4073              	.LVL428:
2778:fltk-1.3.4-1/png/pngread.c ****                cmap_entries = 256;
 4074              		.loc 1 2778 13 is_stmt 1 view .LVU1122
 4075 044f 0F47D8   		cmova	%eax, %ebx
 4076              	.LVL429:
2781:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "palette color-map: too few entries");
 4077              		.loc 1 2781 13 view .LVU1123
2781:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "palette color-map: too few entries");
 4078              		.loc 1 2781 16 is_stmt 0 view .LVU1124
 4079 0452 488B4424 		movq	24(%rsp), %rax
 4079      18
 4080 0457 3B581C   		cmpl	28(%rax), %ebx
 4081 045a 0F878B0E 		ja	.L380
 4081      0000
 4082              	.LVL430:
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4083              		.loc 1 2784 23 is_stmt 1 view .LVU1125
 4084 0460 4489C0   		movl	%r8d, %eax
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4085              		.loc 1 2784 13 is_stmt 0 view .LVU1126
 4086 0463 4531E4   		xorl	%r12d, %r12d
 4087 0466 83E001   		andl	$1, %eax
 4088 0469 8844242C 		movb	%al, 44(%rsp)
 4089 046d 6685D2   		testw	%dx, %dx
 4090 0470 0F842AFF 		je	.L390
 4090      FFFF
 4091 0476 895C2428 		movl	%ebx, 40(%rsp)
 4092 047a 89FB     		movl	%edi, %ebx
 4093              	.LVL431:
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4094              		.loc 1 2784 13 view .LVU1127
 4095 047c 44897C24 		movl	%r15d, 56(%rsp)
 4095      38
 4096 0481 E9E00000 		jmp	.L389
 4096      00
 4097              	.LVL432:
 4098 0486 662E0F1F 		.p2align 4,,10
 4098      84000000 
 4098      0000
 4099              		.p2align 3
 4100              	.L515:
2786:fltk-1.3.4-1/png/pngread.c ****                {
 4101              		.loc 1 2786 64 discriminator 1 view .LVU1128
 4102 0490 488B4424 		movq	32(%rsp), %rax
 4102      20
 4103 0495 460FB60C 		movzbl	(%rax,%r12), %r9d
 4103      20
2786:fltk-1.3.4-1/png/pngread.c ****                {
 4104              		.loc 1 2786 56 discriminator 1 view .LVU1129
 4105 049a 4180F9FF 		cmpb	$-1, %r9b
 4106 049e 0F84E300 		je	.L388
 4106      0000
2788:fltk-1.3.4-1/png/pngread.c ****                      png_create_colormap_entry(display, i, back_r, back_g,
 4107              		.loc 1 2788 19 is_stmt 1 view .LVU1130
2788:fltk-1.3.4-1/png/pngread.c ****                      png_create_colormap_entry(display, i, back_r, back_g,
 4108              		.loc 1 2788 22 is_stmt 0 view .LVU1131
 4109 04a4 4584C9   		testb	%r9b, %r9b
 4110 04a7 0F848305 		je	.L513
 4110      0000
2797:fltk-1.3.4-1/png/pngread.c ****                         png_colormap_compose(display, colormap[i].red, P_FILE,
 4111              		.loc 1 2797 22 is_stmt 1 view .LVU1132
 4112 04ad 410FB6C9 		movzbl	%r9b, %ecx
 4113 04b1 448B4424 		movl	20(%rsp), %r8d
 4113      14
 4114 04b6 4589F1   		movl	%r14d, %r9d
 4115 04b9 4889EF   		movq	%rbp, %rdi
 4116 04bc 4189CF   		movl	%ecx, %r15d
 4117 04bf 410FB675 		movzbl	2(%r13), %esi
 4117      02
 4118              	.LVL433:
2797:fltk-1.3.4-1/png/pngread.c ****                         png_colormap_compose(display, colormap[i].red, P_FILE,
 4119              		.loc 1 2797 22 is_stmt 0 view .LVU1133
 4120 04c4 BA030000 		movl	$3, %edx
 4120      00
 4121 04c9 41C1E708 		sall	$8, %r15d
 4122 04cd 4101CF   		addl	%ecx, %r15d
 4123 04d0 4183FE02 		cmpl	$2, %r14d
 4124 04d4 440F45F9 		cmovne	%ecx, %r15d
 4125 04d8 E8000000 		call	png_colormap_compose
 4125      00
 4126              	.LVL434:
 4127 04dd 448B4424 		movl	56(%rsp), %r8d
 4127      38
 4128 04e2 4589F1   		movl	%r14d, %r9d
 4129 04e5 4889EF   		movq	%rbp, %rdi
 4130 04e8 89442434 		movl	%eax, 52(%rsp)
 4131 04ec 488B4424 		movq	32(%rsp), %rax
 4131      20
 4132 04f1 BA030000 		movl	$3, %edx
 4132      00
 4133 04f6 410FB675 		movzbl	1(%r13), %esi
 4133      01
 4134 04fb 420FB60C 		movzbl	(%rax,%r12), %ecx
 4134      20
 4135 0500 E8000000 		call	png_colormap_compose
 4135      00
 4136              	.LVL435:
 4137 0505 448B4424 		movl	8(%rsp), %r8d
 4137      08
 4138 050a 4589F1   		movl	%r14d, %r9d
 4139 050d 4889EF   		movq	%rbp, %rdi
 4140 0510 89442430 		movl	%eax, 48(%rsp)
 4141 0514 488B4424 		movq	32(%rsp), %rax
 4141      20
 4142 0519 BA030000 		movl	$3, %edx
 4142      00
 4143 051e 410FB675 		movzbl	0(%r13), %esi
 4143      00
 4144 0523 420FB60C 		movzbl	(%rax,%r12), %ecx
 4144      20
 4145 0528 E8000000 		call	png_colormap_compose
 4145      00
 4146              	.LVL436:
 4147 052d 4883EC08 		subq	$8, %rsp
 4148              		.cfi_def_cfa_offset 168
 4149              	.LVL437:
2797:fltk-1.3.4-1/png/pngread.c ****                         png_colormap_compose(display, colormap[i].red, P_FILE,
 4150              		.loc 1 2797 22 view .LVU1134
 4151 0531 4589F9   		movl	%r15d, %r9d
 4152 0534 4489E6   		movl	%r12d, %esi
 4153 0537 4156     		pushq	%r14
 4154              		.cfi_def_cfa_offset 176
 4155 0539 448B5C24 		movl	68(%rsp), %r11d
 4155      44
 4156 053e 89C2     		movl	%eax, %edx
 4157 0540 4889EF   		movq	%rbp, %rdi
 4158 0543 448B5424 		movl	64(%rsp), %r10d
 4158      40
 4159 0548 4589D8   		movl	%r11d, %r8d
 4160 054b 4489D1   		movl	%r10d, %ecx
 4161 054e E8000000 		call	png_create_colormap_entry
 4161      00
 4162              	.LVL438:
 4163 0553 4159     		popq	%r9
 4164              		.cfi_def_cfa_offset 168
 4165 0555 415A     		popq	%r10
 4166              		.cfi_def_cfa_offset 160
 4167              	.LVL439:
 4168              	.L386:
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4169              		.loc 1 2784 41 is_stmt 1 discriminator 2 view .LVU1135
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4170              		.loc 1 2784 23 discriminator 2 view .LVU1136
 4171 0557 4983C401 		addq	$1, %r12
 4172              	.LVL440:
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4173              		.loc 1 2784 23 is_stmt 0 discriminator 2 view .LVU1137
 4174 055b 4983C503 		addq	$3, %r13
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4175              		.loc 1 2784 13 discriminator 2 view .LVU1138
 4176 055f 44396424 		cmpl	%r12d, 40(%rsp)
 4176      28
 4177 0564 7650     		jbe	.L514
 4178              	.L389:
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4179              		.loc 1 2784 13 discriminator 2 view .LVU1139
 4180 0566 4489E6   		movl	%r12d, %esi
 4181              	.LVL441:
2786:fltk-1.3.4-1/png/pngread.c ****                {
 4182              		.loc 1 2786 16 is_stmt 1 view .LVU1140
2786:fltk-1.3.4-1/png/pngread.c ****                {
 4183              		.loc 1 2786 19 is_stmt 0 view .LVU1141
 4184 0569 4439E3   		cmpl	%r12d, %ebx
 4185 056c 760B     		jbe	.L383
 4186 056e 807C242C 		cmpb	$0, 44(%rsp)
 4186      00
 4187 0573 0F8517FF 		jne	.L515
 4187      FFFF
 4188              	.L383:
2811:fltk-1.3.4-1/png/pngread.c ****                      colormap[i].green, colormap[i].blue,
 4189              		.loc 1 2811 19 is_stmt 1 view .LVU1142
 4190 0579 41B9FF00 		movl	$255, %r9d
 4190      0000
 4191 057f 39F3     		cmpl	%esi, %ebx
 4192 0581 0F879904 		ja	.L516
 4192      0000
 4193              	.L388:
2811:fltk-1.3.4-1/png/pngread.c ****                      colormap[i].green, colormap[i].blue,
 4194              		.loc 1 2811 19 is_stmt 0 discriminator 4 view .LVU1143
 4195 0587 4883EC08 		subq	$8, %rsp
 4196              		.cfi_def_cfa_offset 168
 4197              	.LVL442:
2811:fltk-1.3.4-1/png/pngread.c ****                      colormap[i].green, colormap[i].blue,
 4198              		.loc 1 2811 19 discriminator 4 view .LVU1144
 4199 058b 450FB645 		movzbl	2(%r13), %r8d
 4199      02
 4200 0590 4889EF   		movq	%rbp, %rdi
 4201 0593 4983C401 		addq	$1, %r12
 4202 0597 410FB64D 		movzbl	1(%r13), %ecx
 4202      01
 4203 059c 410FB655 		movzbl	0(%r13), %edx
 4203      00
 4204 05a1 6A03     		pushq	$3
 4205              		.cfi_def_cfa_offset 176
 4206 05a3 4983C503 		addq	$3, %r13
 4207 05a7 E8000000 		call	png_create_colormap_entry
 4207      00
 4208              	.LVL443:
2811:fltk-1.3.4-1/png/pngread.c ****                      colormap[i].green, colormap[i].blue,
 4209              		.loc 1 2811 19 discriminator 4 view .LVU1145
 4210 05ac 5F       		popq	%rdi
 4211              		.cfi_def_cfa_offset 168
 4212 05ad 4158     		popq	%r8
 4213              		.cfi_def_cfa_offset 160
 4214              	.LVL444:
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4215              		.loc 1 2784 41 is_stmt 1 discriminator 4 view .LVU1146
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4216              		.loc 1 2784 23 discriminator 4 view .LVU1147
2784:fltk-1.3.4-1/png/pngread.c ****             {
 4217              		.loc 1 2784 13 is_stmt 0 discriminator 4 view .LVU1148
 4218 05af 44396424 		cmpl	%r12d, 40(%rsp)
 4218      28
 4219 05b4 77B0     		ja	.L389
 4220              	.L514:
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 4221              		.loc 1 2819 24 view .LVU1149
 4222 05b6 488B0424 		movq	(%rsp), %rax
 4223 05ba 8B5C2428 		movl	40(%rsp), %ebx
 4224              	.LVL445:
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 4225              		.loc 1 2819 13 is_stmt 1 view .LVU1150
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 4226              		.loc 1 2819 24 is_stmt 0 view .LVU1151
 4227 05be 0FB68078 		movzbl	632(%rax), %eax
 4227      020000
2819:fltk-1.3.4-1/png/pngread.c ****                png_set_packing(png_ptr);
 4228              		.loc 1 2819 16 view .LVU1152
 4229 05c5 3C07     		cmpb	$7, %al
 4230 05c7 0F87E6FD 		ja	.L324
 4230      FFFF
 4231              	.LVL446:
 4232              	.L509:
2820:fltk-1.3.4-1/png/pngread.c ****          }
 4233              		.loc 1 2820 16 is_stmt 1 view .LVU1153
 4234 05cd 4C8B3424 		movq	(%rsp), %r14
 4235 05d1 4C89F7   		movq	%r14, %rdi
 4236 05d4 E8000000 		call	png_set_packing@PLT
 4236      00
 4237              	.LVL447:
2820:fltk-1.3.4-1/png/pngread.c ****          }
 4238              		.loc 1 2820 16 is_stmt 0 view .LVU1154
 4239              	.LBE168:
2827:fltk-1.3.4-1/png/pngread.c ****    }
 4240              		.loc 1 2827 10 is_stmt 1 view .LVU1155
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 4241              		.loc 1 2831 4 view .LVU1156
 4242 05d9 410FB686 		movzbl	632(%r14), %eax
 4242      78020000 
 4243              	.LVL448:
2847:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
 4244              		.loc 1 2847 10 view .LVU1157
2847:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
 4245              		.loc 1 2847 13 is_stmt 0 view .LVU1158
 4246 05e1 3C08     		cmpb	$8, %al
 4247 05e3 0F86D2FD 		jbe	.L489
 4247      FFFF
 4248              	.L510:
 4249 05e9 C744242C 		movl	$256, 44(%rsp)
 4249      00010000 
 4250 05f1 4531ED   		xorl	%r13d, %r13d
 4251              	.LVL449:
 4252              	.L407:
2848:fltk-1.3.4-1/png/pngread.c ****          break;
 4253              		.loc 1 2848 13 is_stmt 1 view .LVU1159
 4254 05f4 488B3C24 		movq	(%rsp), %rdi
 4255 05f8 E8000000 		call	png_set_scale_16@PLT
 4255      00
 4256              	.LVL450:
 4257 05fd E90FFCFF 		jmp	.L392
 4257      FF
 4258              	.LVL451:
 4259              		.p2align 4,,10
 4260 0602 660F1F44 		.p2align 3
 4260      0000
 4261              	.L512:
 4262              	.LBB169:
2765:fltk-1.3.4-1/png/pngread.c ****             png_const_colorp colormap = png_ptr->palette;
 4263              		.loc 1 2765 74 is_stmt 0 discriminator 1 view .LVU1160
 4264 0608 488B80F8 		movq	760(%rax), %rax
 4264      020000
 4265 060f 48894424 		movq	%rax, 32(%rsp)
 4265      20
 4266              	.LVL452:
2766:fltk-1.3.4-1/png/pngread.c ****             const int do_background = trans != NULL &&
 4267              		.loc 1 2766 13 is_stmt 1 discriminator 1 view .LVU1161
2767:fltk-1.3.4-1/png/pngread.c ****                (output_format & PNG_FORMAT_FLAG_ALPHA) == 0;
 4268              		.loc 1 2767 13 discriminator 1 view .LVU1162
2767:fltk-1.3.4-1/png/pngread.c ****                (output_format & PNG_FORMAT_FLAG_ALPHA) == 0;
 4269              		.loc 1 2767 53 is_stmt 0 discriminator 1 view .LVU1163
 4270 0614 4885C0   		testq	%rax, %rax
 4271 0617 0F84F308 		je	.L430
 4271      0000
 4272 061d 41F7D0   		notl	%r8d
 4273              	.LVL453:
2767:fltk-1.3.4-1/png/pngread.c ****                (output_format & PNG_FORMAT_FLAG_ALPHA) == 0;
 4274              		.loc 1 2767 53 discriminator 1 view .LVU1164
 4275 0620 4183E001 		andl	$1, %r8d
 4276              	.LVL454:
2769:fltk-1.3.4-1/png/pngread.c **** 
 4277              		.loc 1 2769 13 is_stmt 1 discriminator 1 view .LVU1165
2772:fltk-1.3.4-1/png/pngread.c ****                num_trans = 0;
 4278              		.loc 1 2772 13 discriminator 1 view .LVU1166
 4279 0624 E90FFEFF 		jmp	.L379
 4279      FF
 4280              	.LVL455:
 4281 0629 0F1F8000 		.p2align 4,,10
 4281      000000
 4282              		.p2align 3
 4283              	.L331:
2772:fltk-1.3.4-1/png/pngread.c ****                num_trans = 0;
 4284              		.loc 1 2772 13 is_stmt 0 discriminator 1 view .LVU1167
 4285              	.LBE169:
2358:fltk-1.3.4-1/png/pngread.c ****                (back_r == back_g && back_g == back_b))
 4286              		.loc 1 2358 13 is_stmt 1 view .LVU1168
2358:fltk-1.3.4-1/png/pngread.c ****                (back_r == back_g && back_g == back_b))
 4287              		.loc 1 2358 16 is_stmt 0 view .LVU1169
 4288 0630 4183E002 		andl	$2, %r8d
 4289              	.LVL456:
2358:fltk-1.3.4-1/png/pngread.c ****                (back_r == back_g && back_g == back_b))
 4290              		.loc 1 2358 16 view .LVU1170
 4291 0634 0F847605 		je	.L333
 4291      0000
2358:fltk-1.3.4-1/png/pngread.c ****                (back_r == back_g && back_g == back_b))
 4292              		.loc 1 2358 62 discriminator 1 view .LVU1171
 4293 063a 44397C24 		cmpl	%r15d, 8(%rsp)
 4293      08
 4294 063f 750B     		jne	.L334
 4295 0641 443B7C24 		cmpl	20(%rsp), %r15d
 4295      14
 4296 0646 0F846405 		je	.L333
 4296      0000
 4297              	.L334:
 4298              	.LBB170:
2394:fltk-1.3.4-1/png/pngread.c **** 
 4299              		.loc 1 2394 16 is_stmt 1 view .LVU1172
2399:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "ga-alpha color-map: too few entries");
 4300              		.loc 1 2399 16 view .LVU1173
2399:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "ga-alpha color-map: too few entries");
 4301              		.loc 1 2399 19 is_stmt 0 view .LVU1174
 4302 064c 3DFF0000 		cmpl	$255, %eax
 4302      00
 4303 0651 0F86340C 		jbe	.L517
 4303      0000
 4304 0657 660F1F84 		.p2align 4,,10
 4304      00000000 
 4304      00
 4305              		.p2align 3
 4306              	.L337:
 4307              	.LVL457:
 4308              	.LBB171:
2405:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i++, gray, gray, gray,
 4309              		.loc 1 2405 19 is_stmt 1 view .LVU1175
2405:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i++, gray, gray, gray,
 4310              		.loc 1 2405 31 is_stmt 0 view .LVU1176
 4311 0660 4489E8   		movl	%r13d, %eax
2406:fltk-1.3.4-1/png/pngread.c ****                      255, P_sRGB);
 4312              		.loc 1 2406 19 view .LVU1177
 4313 0663 4883EC08 		subq	$8, %rsp
 4314              		.cfi_def_cfa_offset 168
 4315              	.LVL458:
2406:fltk-1.3.4-1/png/pngread.c ****                      255, P_sRGB);
 4316              		.loc 1 2406 19 view .LVU1178
 4317 0667 4489EE   		movl	%r13d, %esi
 4318 066a 41B9FF00 		movl	$255, %r9d
 4318      0000
2405:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i++, gray, gray, gray,
 4319              		.loc 1 2405 31 view .LVU1179
 4320 0670 C1E008   		sall	$8, %eax
2406:fltk-1.3.4-1/png/pngread.c ****                      255, P_sRGB);
 4321              		.loc 1 2406 19 view .LVU1180
 4322 0673 6A01     		pushq	$1
 4323              		.cfi_def_cfa_offset 176
 4324 0675 4889EF   		movq	%rbp, %rdi
 4325 0678 4183C501 		addl	$1, %r13d
 4326              	.LVL459:
2405:fltk-1.3.4-1/png/pngread.c ****                   png_create_colormap_entry(display, i++, gray, gray, gray,
 4327              		.loc 1 2405 31 view .LVU1181
 4328 067c 8D5073   		leal	115(%rax), %edx
 4329 067f 4889D0   		movq	%rdx, %rax
 4330 0682 4869D205 		imulq	$464823301, %rdx, %rdx
 4330      A4B41B
 4331 0689 48C1EA20 		shrq	$32, %rdx
 4332 068d 29D0     		subl	%edx, %eax
 4333 068f D1E8     		shrl	%eax
 4334 0691 01C2     		addl	%eax, %edx
 4335 0693 C1EA07   		shrl	$7, %edx
 4336              	.LVL460:
2406:fltk-1.3.4-1/png/pngread.c ****                      255, P_sRGB);
 4337              		.loc 1 2406 19 is_stmt 1 view .LVU1182
2406:fltk-1.3.4-1/png/pngread.c ****                      255, P_sRGB);
 4338              		.loc 1 2406 19 is_stmt 0 view .LVU1183
 4339 0696 4189D0   		movl	%edx, %r8d
 4340 0699 89D1     		movl	%edx, %ecx
 4341 069b E8000000 		call	png_create_colormap_entry
 4341      00
 4342              	.LVL461:
2406:fltk-1.3.4-1/png/pngread.c ****                      255, P_sRGB);
 4343              		.loc 1 2406 19 view .LVU1184
 4344              	.LBE171:
2403:fltk-1.3.4-1/png/pngread.c ****                {
 4345              		.loc 1 2403 22 is_stmt 1 view .LVU1185
 4346 06a0 4159     		popq	%r9
 4347              		.cfi_def_cfa_offset 168
 4348 06a2 415A     		popq	%r10
 4349              		.cfi_def_cfa_offset 160
 4350              	.LVL462:
2403:fltk-1.3.4-1/png/pngread.c ****                {
 4351              		.loc 1 2403 22 is_stmt 0 view .LVU1186
 4352 06a4 4181FDE7 		cmpl	$231, %r13d
 4352      000000
 4353 06ab 75B3     		jne	.L337
2413:fltk-1.3.4-1/png/pngread.c ****                png_create_colormap_entry(display, i++, back_r, back_g, back_b,
 4354              		.loc 1 2413 16 is_stmt 1 view .LVU1187
 4355              	.LVL463:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 4356              		.loc 1 2414 16 view .LVU1188
 4357 06ad 4183FE02 		cmpl	$2, %r14d
 4358 06b1 0F84E40A 		je	.L518
 4358      0000
 4359              	.LVL464:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 4360              		.loc 1 2414 16 is_stmt 0 view .LVU1189
 4361 06b7 4883EC08 		subq	$8, %rsp
 4362              		.cfi_def_cfa_offset 168
 4363              	.LVL465:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 4364              		.loc 1 2414 16 view .LVU1190
 4365 06bb 4489F9   		movl	%r15d, %ecx
 4366 06be BEE70000 		movl	$231, %esi
 4366      00
 4367 06c3 4889EF   		movq	%rbp, %rdi
 4368 06c6 6A01     		pushq	$1
 4369              		.cfi_def_cfa_offset 176
 4370 06c8 448B7424 		movl	36(%rsp), %r14d
 4370      24
 4371 06cd 41B9FF00 		movl	$255, %r9d
 4371      0000
 4372 06d3 8B5C2418 		movl	24(%rsp), %ebx
 4373 06d7 4589F0   		movl	%r14d, %r8d
 4374 06da 89DA     		movl	%ebx, %edx
 4375 06dc E8000000 		call	png_create_colormap_entry
 4375      00
 4376              	.LVL466:
2425:fltk-1.3.4-1/png/pngread.c ****                {
 4377              		.loc 1 2425 16 is_stmt 1 view .LVU1191
2431:fltk-1.3.4-1/png/pngread.c ****                   back_g = png_sRGB_table[back_g];
 4378              		.loc 1 2431 19 view .LVU1192
2431:fltk-1.3.4-1/png/pngread.c ****                   back_g = png_sRGB_table[back_g];
 4379              		.loc 1 2431 42 is_stmt 0 view .LVU1193
 4380 06e1 488D0500 		leaq	png_sRGB_table(%rip), %rax
 4380      000000
 4381 06e8 89DA     		movl	%ebx, %edx
2431:fltk-1.3.4-1/png/pngread.c ****                   back_g = png_sRGB_table[back_g];
 4382              		.loc 1 2431 26 view .LVU1194
 4383 06ea 0FB73450 		movzwl	(%rax,%rdx,2), %esi
2432:fltk-1.3.4-1/png/pngread.c ****                   back_b = png_sRGB_table[back_b];
 4384              		.loc 1 2432 42 view .LVU1195
 4385 06ee 4489FA   		movl	%r15d, %edx
2432:fltk-1.3.4-1/png/pngread.c ****                   back_b = png_sRGB_table[back_b];
 4386              		.loc 1 2432 26 view .LVU1196
 4387 06f1 440FB73C 		movzwl	(%rax,%rdx,2), %r15d
 4387      50
 4388              	.LVL467:
2433:fltk-1.3.4-1/png/pngread.c ****                }
 4389              		.loc 1 2433 42 view .LVU1197
 4390 06f6 4489F2   		movl	%r14d, %edx
 4391              	.LVL468:
2433:fltk-1.3.4-1/png/pngread.c ****                }
 4392              		.loc 1 2433 26 view .LVU1198
 4393 06f9 0FB70450 		movzwl	(%rax,%rdx,2), %eax
2431:fltk-1.3.4-1/png/pngread.c ****                   back_g = png_sRGB_table[back_g];
 4394              		.loc 1 2431 26 view .LVU1199
 4395 06fd 89742418 		movl	%esi, 24(%rsp)
 4396              	.LVL469:
2432:fltk-1.3.4-1/png/pngread.c ****                   back_b = png_sRGB_table[back_b];
 4397              		.loc 1 2432 19 is_stmt 1 view .LVU1200
2433:fltk-1.3.4-1/png/pngread.c ****                }
 4398              		.loc 1 2433 19 view .LVU1201
2433:fltk-1.3.4-1/png/pngread.c ****                }
 4399              		.loc 1 2433 26 is_stmt 0 view .LVU1202
 4400 0701 89442424 		movl	%eax, 36(%rsp)
 4401              	.LVL470:
2433:fltk-1.3.4-1/png/pngread.c ****                }
 4402              		.loc 1 2433 26 view .LVU1203
 4403 0705 59       		popq	%rcx
 4404              		.cfi_def_cfa_offset 168
 4405 0706 5E       		popq	%rsi
 4406              		.cfi_def_cfa_offset 160
 4407              	.LVL471:
 4408              	.L404:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4409              		.loc 1 2436 16 is_stmt 1 view .LVU1204
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4410              		.loc 1 2436 26 view .LVU1205
 4411 0707 8B442414 		movl	20(%rsp), %eax
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 4412              		.loc 1 2414 16 is_stmt 0 view .LVU1206
 4413 070b BBE80000 		movl	$232, %ebx
 4413      00
 4414              	.LBE170:
 4415              	.LBB175:
2372:fltk-1.3.4-1/png/pngread.c **** 
 4416              		.loc 1 2372 24 view .LVU1207
 4417 0710 C7442428 		movl	$51, 40(%rsp)
 4417      33000000 
 4418 0718 4C8D3500 		leaq	png_sRGB_delta(%rip), %r14
 4418      000000
 4419 071f 895C242C 		movl	%ebx, 44(%rsp)
 4420 0723 6BF8CD   		imull	$-51, %eax, %edi
 4421 0726 4469E0CC 		imull	$204, %eax, %r12d
 4421      000000
 4422 072d 416BC7CD 		imull	$-51, %r15d, %eax
 4423 0731 897C2438 		movl	%edi, 56(%rsp)
 4424 0735 89442434 		movl	%eax, 52(%rsp)
 4425 0739 4169C7CC 		imull	$204, %r15d, %eax
 4425      000000
 4426 0740 4C8D3D00 		leaq	png_sRGB_base(%rip), %r15
 4426      000000
 4427              	.LVL472:
2372:fltk-1.3.4-1/png/pngread.c **** 
 4428              		.loc 1 2372 24 view .LVU1208
 4429 0747 89442420 		movl	%eax, 32(%rsp)
 4430 074b 8B442408 		movl	8(%rsp), %eax
 4431 074f 6BF8CD   		imull	$-51, %eax, %edi
 4432 0752 69C0CC00 		imull	$204, %eax, %eax
 4432      0000
 4433 0758 897C2430 		movl	%edi, 48(%rsp)
 4434 075c 89442414 		movl	%eax, 20(%rsp)
 4435              	.LVL473:
 4436              	.L341:
2372:fltk-1.3.4-1/png/pngread.c **** 
 4437              		.loc 1 2372 24 view .LVU1209
 4438              	.LBE175:
 4439              	.LBB176:
 4440              	.LBB172:
2438:fltk-1.3.4-1/png/pngread.c **** 
 4441              		.loc 1 2438 19 is_stmt 1 view .LVU1210
2443:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 back_rx = (255-alpha) * back_r;
 4442              		.loc 1 2443 19 view .LVU1211
2444:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 back_gx = (255-alpha) * back_g;
 4443              		.loc 1 2444 19 view .LVU1212
2445:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 back_bx = (255-alpha) * back_b;
 4444              		.loc 1 2445 19 view .LVU1213
2446:fltk-1.3.4-1/png/pngread.c **** 
 4445              		.loc 1 2446 19 view .LVU1214
2448:fltk-1.3.4-1/png/pngread.c ****                   {
 4446              		.loc 1 2448 19 view .LVU1215
2448:fltk-1.3.4-1/png/pngread.c ****                   {
 4447              		.loc 1 2448 29 view .LVU1216
 4448              	.LBE172:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 4449              		.loc 1 2414 16 is_stmt 0 view .LVU1217
 4450 0760 4889E8   		movq	%rbp, %rax
 4451 0763 8B5C242C 		movl	44(%rsp), %ebx
 4452 0767 4C8D2D00 		leaq	png_sRGB_table(%rip), %r13
 4452      000000
 4453 076e 48894424 		movq	%rax, 8(%rsp)
 4453      08
 4454 0773 89DD     		movl	%ebx, %ebp
 4455              	.LVL474:
 4456              		.p2align 4,,10
 4457 0775 0F1F00   		.p2align 3
 4458              	.L340:
 4459              	.LBB174:
 4460              	.LBB173:
2450:fltk-1.3.4-1/png/pngread.c **** 
 4461              		.loc 1 2450 22 is_stmt 1 discriminator 3 view .LVU1218
2450:fltk-1.3.4-1/png/pngread.c **** 
 4462              		.loc 1 2450 55 is_stmt 0 discriminator 3 view .LVU1219
 4463 0778 410FB745 		movzwl	0(%r13), %eax
 4463      00
2450:fltk-1.3.4-1/png/pngread.c **** 
 4464              		.loc 1 2450 34 discriminator 3 view .LVU1220
 4465 077d 0FAF4424 		imull	40(%rsp), %eax
 4465      28
 4466              	.LVL475:
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4467              		.loc 1 2452 22 is_stmt 1 discriminator 3 view .LVU1221
 4468 0782 4883EC08 		subq	$8, %rsp
 4469              		.cfi_def_cfa_offset 168
 4470              	.LVL476:
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4471              		.loc 1 2452 22 is_stmt 0 discriminator 3 view .LVU1222
 4472 0786 89EE     		movl	%ebp, %esi
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
 4473              		.loc 1 2454 25 discriminator 3 view .LVU1223
 4474 0788 8B4C2428 		movl	40(%rsp), %ecx
 4475 078c 4983C566 		addq	$102, %r13
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4476              		.loc 1 2452 22 discriminator 3 view .LVU1224
 4477 0790 83C501   		addl	$1, %ebp
 4478              	.LVL477:
2455:fltk-1.3.4-1/png/pngread.c ****                   }
 4479              		.loc 1 2455 25 discriminator 3 view .LVU1225
 4480 0793 468D0420 		leal	(%rax,%r12), %r8d
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
 4481              		.loc 1 2454 25 discriminator 3 view .LVU1226
 4482 0797 8D1408   		leal	(%rax,%rcx), %edx
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
 4483              		.loc 1 2453 25 discriminator 3 view .LVU1227
 4484 079a 0344241C 		addl	28(%rsp), %eax
 4485              	.LVL478:
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4486              		.loc 1 2452 22 discriminator 3 view .LVU1228
 4487 079e 6A01     		pushq	$1
 4488              		.cfi_def_cfa_offset 176
 4489              	.LVL479:
2455:fltk-1.3.4-1/png/pngread.c ****                   }
 4490              		.loc 1 2455 25 discriminator 3 view .LVU1229
 4491 07a0 4589C2   		movl	%r8d, %r10d
 4492 07a3 4181E0FF 		andl	$32767, %r8d
 4492      7F0000
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
 4493              		.loc 1 2454 25 discriminator 3 view .LVU1230
 4494 07aa 89D1     		movl	%edx, %ecx
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
 4495              		.loc 1 2453 25 discriminator 3 view .LVU1231
 4496 07ac 4189C1   		movl	%eax, %r9d
2455:fltk-1.3.4-1/png/pngread.c ****                   }
 4497              		.loc 1 2455 25 discriminator 3 view .LVU1232
 4498 07af 41C1EA0F 		shrl	$15, %r10d
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
 4499              		.loc 1 2454 25 discriminator 3 view .LVU1233
 4500 07b3 C1E90F   		shrl	$15, %ecx
 4501 07b6 81E2FF7F 		andl	$32767, %edx
 4501      0000
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
 4502              		.loc 1 2453 25 discriminator 3 view .LVU1234
 4503 07bc 25FF7F00 		andl	$32767, %eax
 4503      00
2455:fltk-1.3.4-1/png/pngread.c ****                   }
 4504              		.loc 1 2455 25 discriminator 3 view .LVU1235
 4505 07c1 470FB61C 		movzbl	(%r14,%r10), %r11d
 4505      16
 4506 07c6 470FB714 		movzwl	(%r15,%r10,2), %r10d
 4506      57
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
 4507              		.loc 1 2453 25 discriminator 3 view .LVU1236
 4508 07cb 41C1E90F 		shrl	$15, %r9d
2455:fltk-1.3.4-1/png/pngread.c ****                   }
 4509              		.loc 1 2455 25 discriminator 3 view .LVU1237
 4510 07cf 450FAFC3 		imull	%r11d, %r8d
 4511 07d3 41C1E80C 		shrl	$12, %r8d
 4512 07d7 4501D0   		addl	%r10d, %r8d
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
 4513              		.loc 1 2454 25 discriminator 3 view .LVU1238
 4514 07da 4189CA   		movl	%ecx, %r10d
 4515 07dd 430FB60C 		movzbl	(%r14,%r10), %ecx
 4515      16
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4516              		.loc 1 2452 22 discriminator 3 view .LVU1239
 4517 07e2 4489C3   		movl	%r8d, %ebx
 4518 07e5 0FB6FF   		movzbl	%bh, %edi
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
 4519              		.loc 1 2454 25 discriminator 3 view .LVU1240
 4520 07e8 0FAFD1   		imull	%ecx, %edx
 4521 07eb 430FB70C 		movzwl	(%r15,%r10,2), %ecx
 4521      57
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4522              		.loc 1 2452 22 discriminator 3 view .LVU1241
 4523 07f0 4189F8   		movl	%edi, %r8d
 4524 07f3 488B7C24 		movq	24(%rsp), %rdi
 4524      18
2454:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_bx), 255, P_sRGB);
 4525              		.loc 1 2454 25 discriminator 3 view .LVU1242
 4526 07f8 C1EA0C   		shrl	$12, %edx
 4527 07fb 01D1     		addl	%edx, %ecx
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
 4528              		.loc 1 2453 25 discriminator 3 view .LVU1243
 4529 07fd 89C2     		movl	%eax, %edx
 4530 07ff 430FB604 		movzbl	(%r14,%r9), %eax
 4530      0E
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4531              		.loc 1 2452 22 discriminator 3 view .LVU1244
 4532 0804 0FB6CD   		movzbl	%ch, %ecx
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
 4533              		.loc 1 2453 25 discriminator 3 view .LVU1245
 4534 0807 0FAFD0   		imull	%eax, %edx
 4535 080a 430FB704 		movzwl	(%r15,%r9,2), %eax
 4535      4F
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4536              		.loc 1 2452 22 discriminator 3 view .LVU1246
 4537 080f 41B9FF00 		movl	$255, %r9d
 4537      0000
2453:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_gx),
 4538              		.loc 1 2453 25 discriminator 3 view .LVU1247
 4539 0815 C1EA0C   		shrl	$12, %edx
 4540 0818 01C2     		addl	%eax, %edx
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4541              		.loc 1 2452 22 discriminator 3 view .LVU1248
 4542 081a 0FB6D6   		movzbl	%dh, %edx
 4543 081d E8000000 		call	png_create_colormap_entry
 4543      00
 4544              	.LVL480:
2452:fltk-1.3.4-1/png/pngread.c ****                         PNG_sRGB_FROM_LINEAR(gray + back_rx),
 4545              		.loc 1 2452 22 discriminator 3 view .LVU1249
 4546              	.LBE173:
2448:fltk-1.3.4-1/png/pngread.c ****                   {
 4547              		.loc 1 2448 34 is_stmt 1 discriminator 3 view .LVU1250
2448:fltk-1.3.4-1/png/pngread.c ****                   {
 4548              		.loc 1 2448 29 discriminator 3 view .LVU1251
2448:fltk-1.3.4-1/png/pngread.c ****                   {
 4549              		.loc 1 2448 19 is_stmt 0 discriminator 3 view .LVU1252
 4550 0822 488D0500 		leaq	612+png_sRGB_table(%rip), %rax
 4550      000000
 4551 0829 5F       		popq	%rdi
 4552              		.cfi_def_cfa_offset 168
 4553 082a 4158     		popq	%r8
 4554              		.cfi_def_cfa_offset 160
 4555              	.LVL481:
2448:fltk-1.3.4-1/png/pngread.c ****                   {
 4556              		.loc 1 2448 19 discriminator 3 view .LVU1253
 4557 082c 4C39E8   		cmpq	%r13, %rax
 4558 082f 0F8543FF 		jne	.L340
 4558      FFFF
 4559              	.LBE174:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4560              		.loc 1 2436 31 is_stmt 1 discriminator 2 view .LVU1254
 4561 0835 8344242C 		addl	$6, 44(%rsp)
 4561      06
 4562              	.LVL482:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4563              		.loc 1 2436 31 is_stmt 0 discriminator 2 view .LVU1255
 4564 083a 8B44242C 		movl	44(%rsp), %eax
 4565              	.LVL483:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4566              		.loc 1 2436 26 is_stmt 1 discriminator 2 view .LVU1256
 4567 083e 8B5C2434 		movl	52(%rsp), %ebx
 4568 0842 8B742430 		movl	48(%rsp), %esi
 4569 0846 83442428 		addl	$51, 40(%rsp)
 4569      33
 4570              	.LVL484:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4571              		.loc 1 2436 26 is_stmt 0 discriminator 2 view .LVU1257
 4572 084b 488B6C24 		movq	8(%rsp), %rbp
 4572      08
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4573              		.loc 1 2436 26 discriminator 2 view .LVU1258
 4574 0850 015C2420 		addl	%ebx, 32(%rsp)
 4575              	.LVL485:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4576              		.loc 1 2436 26 discriminator 2 view .LVU1259
 4577 0854 44036424 		addl	56(%rsp), %r12d
 4577      38
 4578              	.LVL486:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4579              		.loc 1 2436 26 discriminator 2 view .LVU1260
 4580 0859 01742414 		addl	%esi, 20(%rsp)
 4581              	.LVL487:
2436:fltk-1.3.4-1/png/pngread.c ****                {
 4582              		.loc 1 2436 16 discriminator 2 view .LVU1261
 4583 085d 3D000100 		cmpl	$256, %eax
 4583      00
 4584 0862 0F85F8FE 		jne	.L341
 4584      FFFF
 4585 0868 C744242C 		movl	$231, 44(%rsp)
 4585      E7000000 
 4586 0870 89C3     		movl	%eax, %ebx
2460:fltk-1.3.4-1/png/pngread.c ****             }
 4587              		.loc 1 2460 34 view .LVU1262
 4588 0872 41BD0100 		movl	$1, %r13d
 4588      0000
 4589 0878 E973F9FF 		jmp	.L326
 4589      FF
 4590              	.LVL488:
 4591 087d 0F1F00   		.p2align 4,,10
 4592              		.p2align 3
 4593              	.L318:
2460:fltk-1.3.4-1/png/pngread.c ****             }
 4594              		.loc 1 2460 34 view .LVU1263
 4595              	.LBE176:
2237:fltk-1.3.4-1/png/pngread.c **** 
 4596              		.loc 1 2237 13 is_stmt 1 view .LVU1264
2239:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray[16] color-map: too few entries");
 4597              		.loc 1 2239 13 view .LVU1265
2239:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "gray[16] color-map: too few entries");
 4598              		.loc 1 2239 16 is_stmt 0 view .LVU1266
 4599 0880 81FAFF00 		cmpl	$255, %edx
 4599      0000
 4600 0886 0F861F0A 		jbe	.L519
 4600      0000
2242:fltk-1.3.4-1/png/pngread.c **** 
 4601              		.loc 1 2242 28 view .LVU1267
 4602 088c 4889EF   		movq	%rbp, %rdi
 4603 088f 44894424 		movl	%r8d, 32(%rsp)
 4603      20
2242:fltk-1.3.4-1/png/pngread.c **** 
 4604              		.loc 1 2242 13 is_stmt 1 view .LVU1268
2242:fltk-1.3.4-1/png/pngread.c **** 
 4605              		.loc 1 2242 28 is_stmt 0 view .LVU1269
 4606 0894 E8000000 		call	make_gray_colormap
 4606      00
 4607              	.LVL489:
2242:fltk-1.3.4-1/png/pngread.c **** 
 4608              		.loc 1 2242 28 view .LVU1270
 4609 0899 89C3     		movl	%eax, %ebx
 4610              	.LVL490:
2244:fltk-1.3.4-1/png/pngread.c ****             {
 4611              		.loc 1 2244 13 is_stmt 1 view .LVU1271
2244:fltk-1.3.4-1/png/pngread.c ****             {
 4612              		.loc 1 2244 16 is_stmt 0 view .LVU1272
 4613 089b 488B0424 		movq	(%rsp), %rax
 4614              	.LVL491:
2244:fltk-1.3.4-1/png/pngread.c ****             {
 4615              		.loc 1 2244 16 view .LVU1273
 4616 089f 6683B870 		cmpw	$0, 624(%rax)
 4616      02000000 
 4617 08a7 0F846B03 		je	.L421
 4617      0000
 4618              	.LBB177:
2246:fltk-1.3.4-1/png/pngread.c **** 
 4619              		.loc 1 2246 16 is_stmt 1 view .LVU1274
2248:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = 0;
 4620              		.loc 1 2248 16 view .LVU1275
2248:fltk-1.3.4-1/png/pngread.c ****                   back_alpha = 0;
 4621              		.loc 1 2248 19 is_stmt 0 view .LVU1276
 4622 08ad 448B4424 		movl	32(%rsp), %r8d
 4622      20
 4623 08b2 4183E001 		andl	$1, %r8d
 4624 08b6 4589C5   		movl	%r8d, %r13d
 4625 08b9 0F858405 		jne	.L422
 4625      0000
2253:fltk-1.3.4-1/png/pngread.c ****                   {
 4626              		.loc 1 2253 19 is_stmt 1 view .LVU1277
2253:fltk-1.3.4-1/png/pngread.c ****                   {
 4627              		.loc 1 2253 22 is_stmt 0 view .LVU1278
 4628 08bf 44397C24 		cmpl	%r15d, 8(%rsp)
 4628      08
 4629 08c4 750B     		jne	.L328
 4630 08c6 443B7C24 		cmpl	20(%rsp), %r15d
 4630      14
 4631 08cb 0F84F402 		je	.L501
 4631      0000
 4632              	.L328:
2290:fltk-1.3.4-1/png/pngread.c ****                }
 4633              		.loc 1 2290 19 is_stmt 1 view .LVU1279
2290:fltk-1.3.4-1/png/pngread.c ****                }
 4634              		.loc 1 2290 68 is_stmt 0 view .LVU1280
 4635 08d1 4183FE02 		cmpl	$2, %r14d
 4636 08d5 41B9FFFF 		movl	$65535, %r9d
 4636      0000
 4637 08db B8FF0000 		movl	$255, %eax
 4637      00
 4638 08e0 440F45C8 		cmovne	%eax, %r9d
 4639              	.L327:
 4640              	.LVL492:
2300:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_TRANS;
 4641              		.loc 1 2300 16 is_stmt 1 view .LVU1281
2301:fltk-1.3.4-1/png/pngread.c ****                background_index = 254;
 4642              		.loc 1 2301 16 view .LVU1282
2302:fltk-1.3.4-1/png/pngread.c **** 
 4643              		.loc 1 2302 16 view .LVU1283
2307:fltk-1.3.4-1/png/pngread.c ****                   back_alpha, output_encoding);
 4644              		.loc 1 2307 16 view .LVU1284
 4645 08e4 4883EC08 		subq	$8, %rsp
 4646              		.cfi_def_cfa_offset 168
 4647              	.LVL493:
2307:fltk-1.3.4-1/png/pngread.c ****                   back_alpha, output_encoding);
 4648              		.loc 1 2307 16 is_stmt 0 view .LVU1285
 4649 08e8 4489F9   		movl	%r15d, %ecx
 4650 08eb BEFE0000 		movl	$254, %esi
 4650      00
 4651 08f0 4156     		pushq	%r14
 4652              		.cfi_def_cfa_offset 176
 4653 08f2 448B4424 		movl	36(%rsp), %r8d
 4653      24
 4654 08f7 4889EF   		movq	%rbp, %rdi
2301:fltk-1.3.4-1/png/pngread.c ****                background_index = 254;
 4655              		.loc 1 2301 34 view .LVU1286
 4656 08fa 41BD0200 		movl	$2, %r13d
 4656      0000
2307:fltk-1.3.4-1/png/pngread.c ****                   back_alpha, output_encoding);
 4657              		.loc 1 2307 16 view .LVU1287
 4658 0900 8B542418 		movl	24(%rsp), %edx
 4659 0904 E8000000 		call	png_create_colormap_entry
 4659      00
 4660              	.LVL494:
2307:fltk-1.3.4-1/png/pngread.c ****                   back_alpha, output_encoding);
 4661              		.loc 1 2307 16 view .LVU1288
 4662              	.LBE177:
2827:fltk-1.3.4-1/png/pngread.c ****    }
 4663              		.loc 1 2827 10 is_stmt 1 view .LVU1289
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 4664              		.loc 1 2831 4 view .LVU1290
 4665              	.LBB178:
2307:fltk-1.3.4-1/png/pngread.c ****                   back_alpha, output_encoding);
 4666              		.loc 1 2307 16 is_stmt 0 view .LVU1291
 4667 0909 415F     		popq	%r15
 4668              		.cfi_def_cfa_offset 168
 4669              	.LVL495:
2307:fltk-1.3.4-1/png/pngread.c ****                   back_alpha, output_encoding);
 4670              		.loc 1 2307 16 view .LVU1292
 4671 090b 58       		popq	%rax
 4672              		.cfi_def_cfa_offset 160
 4673              	.LVL496:
2302:fltk-1.3.4-1/png/pngread.c **** 
 4674              		.loc 1 2302 33 view .LVU1293
 4675 090c C744242C 		movl	$254, 44(%rsp)
 4675      FE000000 
 4676 0914 E9610200 		jmp	.L330
 4676      00
 4677              	.LVL497:
 4678 0919 0F1F8000 		.p2align 4,,10
 4678      000000
 4679              		.p2align 3
 4680              	.L415:
2302:fltk-1.3.4-1/png/pngread.c **** 
 4681              		.loc 1 2302 33 view .LVU1294
 4682              	.LBE178:
2112:fltk-1.3.4-1/png/pngread.c ****       }
 4683              		.loc 1 2112 20 view .LVU1295
 4684 0920 44897C24 		movl	%r15d, 20(%rsp)
 4684      14
 4685 0925 41BE0100 		movl	$1, %r14d
 4685      0000
2112:fltk-1.3.4-1/png/pngread.c ****       }
 4686              		.loc 1 2112 29 view .LVU1296
 4687 092b 44897C24 		movl	%r15d, 8(%rsp)
 4687      08
 4688 0930 E94BF7FF 		jmp	.L306
 4688      FF
 4689              	.LVL498:
 4690              		.p2align 4,,10
 4691 0935 0F1F00   		.p2align 3
 4692              	.L503:
2480:fltk-1.3.4-1/png/pngread.c ****                -1);
 4693              		.loc 1 2480 13 view .LVU1297
 4694 0938 488B1C24 		movq	(%rsp), %rbx
 4695 093c B9FFFFFF 		movl	$-1, %ecx
 4695      FF
 4696 0941 BAFFFFFF 		movl	$-1, %edx
 4696      FF
 4697 0946 BE010000 		movl	$1, %esi
 4697      00
 4698 094b 44894424 		movl	%r8d, 8(%rsp)
 4698      08
 4699              	.LVL499:
2480:fltk-1.3.4-1/png/pngread.c ****                -1);
 4700              		.loc 1 2480 13 is_stmt 1 view .LVU1298
 4701 0950 4889DF   		movq	%rbx, %rdi
 4702 0953 E8000000 		call	png_set_rgb_to_gray_fixed@PLT
 4702      00
 4703              	.LVL500:
2482:fltk-1.3.4-1/png/pngread.c **** 
 4704              		.loc 1 2482 13 view .LVU1299
2487:fltk-1.3.4-1/png/pngread.c ****                png_ptr->num_trans > 0) &&
 4705              		.loc 1 2487 13 view .LVU1300
2487:fltk-1.3.4-1/png/pngread.c ****                png_ptr->num_trans > 0) &&
 4706              		.loc 1 2487 25 is_stmt 0 view .LVU1301
 4707 0958 0FB68377 		movzbl	631(%rbx), %eax
 4707      020000
2487:fltk-1.3.4-1/png/pngread.c ****                png_ptr->num_trans > 0) &&
 4708              		.loc 1 2487 16 view .LVU1302
 4709 095f 448B4424 		movl	8(%rsp), %r8d
 4709      08
 4710 0964 3C06     		cmpb	$6, %al
 4711 0966 7438     		je	.L520
2487:fltk-1.3.4-1/png/pngread.c ****                png_ptr->num_trans > 0) &&
 4712              		.loc 1 2487 66 discriminator 1 view .LVU1303
 4713 0968 488B3424 		movq	(%rsp), %rsi
 4714 096c 488B4C24 		movq	24(%rsp), %rcx
 4714      18
 4715 0971 6683BE70 		cmpw	$0, 624(%rsi)
 4715      02000000 
 4716 0979 8B511C   		movl	28(%rcx), %edx
 4717 097c 752A     		jne	.L344
2511:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[gray] color-map: too few entries");
 4718              		.loc 1 2511 16 is_stmt 1 view .LVU1304
2511:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[gray] color-map: too few entries");
 4719              		.loc 1 2511 19 is_stmt 0 view .LVU1305
 4720 097e 81FAFF00 		cmpl	$255, %edx
 4720      0000
 4721 0984 775C     		ja	.L350
 4722              	.L403:
2512:fltk-1.3.4-1/png/pngread.c **** 
 4723              		.loc 1 2512 19 is_stmt 1 view .LVU1306
 4724 0986 488B3C24 		movq	(%rsp), %rdi
 4725 098a 488D3500 		leaq	.LC16(%rip), %rsi
 4725      000000
 4726 0991 E8000000 		call	png_error@PLT
 4726      00
 4727              	.LVL501:
 4728 0996 662E0F1F 		.p2align 4,,10
 4728      84000000 
 4728      0000
 4729              		.p2align 3
 4730              	.L520:
 4731 09a0 488B7424 		movq	24(%rsp), %rsi
 4731      18
 4732 09a5 8B561C   		movl	28(%rsi), %edx
 4733              	.L344:
2488:fltk-1.3.4-1/png/pngread.c ****                (output_format & PNG_FORMAT_FLAG_ALPHA) != 0)
 4734              		.loc 1 2488 40 is_stmt 0 view .LVU1307
 4735 09a8 4183E001 		andl	$1, %r8d
 4736 09ac 4589C4   		movl	%r8d, %r12d
 4737 09af 0F856804 		jne	.L521
 4737      0000
2511:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[gray] color-map: too few entries");
 4738              		.loc 1 2511 16 is_stmt 1 view .LVU1308
2511:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[gray] color-map: too few entries");
 4739              		.loc 1 2511 19 is_stmt 0 view .LVU1309
 4740 09b5 81FAFF00 		cmpl	$255, %edx
 4740      0000
 4741 09bb 76C9     		jbe	.L403
2522:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0) &&
 4742              		.loc 1 2522 16 is_stmt 1 view .LVU1310
2522:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0) &&
 4743              		.loc 1 2522 19 is_stmt 0 view .LVU1311
 4744 09bd 3C06     		cmpb	$6, %al
 4745 09bf 0F854F07 		jne	.L522
 4745      0000
 4746              	.L349:
2524:fltk-1.3.4-1/png/pngread.c ****                {
 4747              		.loc 1 2524 19 view .LVU1312
 4748 09c5 488B0424 		movq	(%rsp), %rax
 4749 09c9 8B80D804 		movl	1240(%rax), %eax
 4749      0000
 4750              	.LVL502:
 4751              	.LBB179:
 4752              	.LBI179:
1363:fltk-1.3.4-1/png/pngread.c **** {
 4753              		.loc 1 1363 1 is_stmt 1 view .LVU1313
 4754              	.LBB180:
1365:fltk-1.3.4-1/png/pngread.c ****    {
 4755              		.loc 1 1365 4 view .LVU1314
1365:fltk-1.3.4-1/png/pngread.c ****    {
 4756              		.loc 1 1365 7 is_stmt 0 view .LVU1315
 4757 09cf 3D9F8601 		cmpl	$99999, %eax
 4757      00
 4758 09d4 0F8F6106 		jg	.L353
 4758      0000
1368:fltk-1.3.4-1/png/pngread.c ****          return 0;
 4759              		.loc 1 1368 7 is_stmt 1 view .LVU1316
1368:fltk-1.3.4-1/png/pngread.c ****          return 0;
 4760              		.loc 1 1368 10 is_stmt 0 view .LVU1317
 4761 09da 85C0     		testl	%eax, %eax
 4762 09dc 0F853206 		jne	.L523
 4762      0000
 4763              	.LVL503:
 4764              	.L350:
1368:fltk-1.3.4-1/png/pngread.c ****          return 0;
 4765              		.loc 1 1368 10 view .LVU1318
 4766              	.LBE180:
 4767              	.LBE179:
2531:fltk-1.3.4-1/png/pngread.c **** 
 4768              		.loc 1 2531 19 is_stmt 1 view .LVU1319
2531:fltk-1.3.4-1/png/pngread.c **** 
 4769              		.loc 1 2531 34 is_stmt 0 view .LVU1320
 4770 09e2 4889EF   		movq	%rbp, %rdi
 4771 09e5 E8000000 		call	make_gray_colormap
 4771      00
 4772              	.LVL504:
 4773 09ea 89C3     		movl	%eax, %ebx
 4774              	.LVL505:
2535:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
 4775              		.loc 1 2535 16 is_stmt 1 view .LVU1321
2535:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
 4776              		.loc 1 2535 19 is_stmt 0 view .LVU1322
 4777 09ec 488B0424 		movq	(%rsp), %rax
 4778              	.LVL506:
2535:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
 4779              		.loc 1 2535 19 view .LVU1323
 4780 09f0 80B87702 		cmpb	$6, 631(%rax)
 4780      000006
 4781 09f7 0F841D05 		je	.L355
 4781      0000
2535:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
 4782              		.loc 1 2535 68 view .LVU1324
 4783 09fd 6683B870 		cmpw	$0, 624(%rax)
 4783      02000000 
 4784 0a05 0F850F05 		jne	.L355
 4784      0000
 4785              	.LVL507:
 4786              	.L433:
2835:fltk-1.3.4-1/png/pngread.c ****    {
 4787              		.loc 1 2835 4 view .LVU1325
 4788 0a0b C744242C 		movl	$256, 44(%rsp)
 4788      00010000 
 4789 0a13 E9D8F7FF 		jmp	.L326
 4789      FF
 4790              	.LVL508:
 4791 0a18 0F1F8400 		.p2align 4,,10
 4791      00000000 
 4792              		.p2align 3
 4793              	.L516:
2835:fltk-1.3.4-1/png/pngread.c ****    {
 4794              		.loc 1 2835 4 view .LVU1326
 4795 0a20 488B4424 		movq	32(%rsp), %rax
 4795      20
 4796 0a25 460FB60C 		movzbl	(%rax,%r12), %r9d
 4796      20
 4797 0a2a E958FBFF 		jmp	.L388
 4797      FF
 4798 0a2f 90       		.p2align 4,,10
 4799              		.p2align 3
 4800              	.L513:
 4801              	.LBB184:
2789:fltk-1.3.4-1/png/pngread.c ****                         back_b, 0, output_encoding);
 4802              		.loc 1 2789 22 is_stmt 1 view .LVU1327
 4803 0a30 4883EC08 		subq	$8, %rsp
 4804              		.cfi_def_cfa_offset 168
 4805              	.LVL509:
2789:fltk-1.3.4-1/png/pngread.c ****                         back_b, 0, output_encoding);
 4806              		.loc 1 2789 22 is_stmt 0 view .LVU1328
 4807 0a34 4531C9   		xorl	%r9d, %r9d
 4808 0a37 4889EF   		movq	%rbp, %rdi
 4809 0a3a 4156     		pushq	%r14
 4810              		.cfi_def_cfa_offset 176
 4811 0a3c 448B4424 		movl	36(%rsp), %r8d
 4811      24
 4812 0a41 8B4C2448 		movl	72(%rsp), %ecx
 4813 0a45 8B542418 		movl	24(%rsp), %edx
 4814 0a49 E8000000 		call	png_create_colormap_entry
 4814      00
 4815              	.LVL510:
2789:fltk-1.3.4-1/png/pngread.c ****                         back_b, 0, output_encoding);
 4816              		.loc 1 2789 22 view .LVU1329
 4817 0a4e 415B     		popq	%r11
 4818              		.cfi_def_cfa_offset 168
 4819 0a50 415F     		popq	%r15
 4820              		.cfi_def_cfa_offset 160
 4821              	.LVL511:
2789:fltk-1.3.4-1/png/pngread.c ****                         back_b, 0, output_encoding);
 4822              		.loc 1 2789 22 view .LVU1330
 4823 0a52 E900FBFF 		jmp	.L386
 4823      FF
 4824              	.LVL512:
 4825 0a57 660F1F84 		.p2align 4,,10
 4825      00000000 
 4825      00
 4826              		.p2align 3
 4827              	.L397:
2789:fltk-1.3.4-1/png/pngread.c ****                         back_b, 0, output_encoding);
 4828              		.loc 1 2789 22 view .LVU1331
 4829              	.LBE184:
2882:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
 4830              		.loc 1 2882 10 is_stmt 1 view .LVU1332
2882:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
 4831              		.loc 1 2882 13 is_stmt 0 view .LVU1333
 4832 0a60 817C242C 		cmpl	$216, 44(%rsp)
 4832      D8000000 
 4833 0a68 0F8402F8 		je	.L395
 4833      FFFF
 4834              	.L400:
2890:fltk-1.3.4-1/png/pngread.c ****    }
 4835              		.loc 1 2890 10 is_stmt 1 view .LVU1334
 4836 0a6e 488B3C24 		movq	(%rsp), %rdi
 4837 0a72 488D3500 		leaq	.LC24(%rip), %rsi
 4837      000000
 4838 0a79 E8000000 		call	png_error@PLT
 4838      00
 4839              	.LVL513:
 4840 0a7e 6690     		.p2align 4,,10
 4841              		.p2align 3
 4842              	.L396:
2877:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
 4843              		.loc 1 2877 10 view .LVU1335
2877:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
 4844              		.loc 1 2877 13 is_stmt 0 view .LVU1336
 4845 0a80 817C242C 		cmpl	$256, 44(%rsp)
 4845      00010000 
 4846 0a88 0F84E2F7 		je	.L395
 4846      FFFF
 4847 0a8e EBDE     		jmp	.L400
 4848              		.p2align 4,,10
 4849              		.p2align 3
 4850              	.L398:
2866:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
 4851              		.loc 1 2866 10 is_stmt 1 view .LVU1337
2866:fltk-1.3.4-1/png/pngread.c ****             goto bad_background;
 4852              		.loc 1 2866 13 is_stmt 0 view .LVU1338
 4853 0a90 817C242C 		cmpl	$231, 44(%rsp)
 4853      E7000000 
 4854 0a98 0F84D2F7 		je	.L395
 4854      FFFF
 4855 0a9e EBCE     		jmp	.L400
 4856              	.LVL514:
 4857              		.p2align 4,,10
 4858              		.p2align 3
 4859              	.L363:
2612:fltk-1.3.4-1/png/pngread.c ****                {
 4860              		.loc 1 2612 16 is_stmt 1 view .LVU1339
2612:fltk-1.3.4-1/png/pngread.c ****                {
 4861              		.loc 1 2612 19 is_stmt 0 view .LVU1340
 4862 0aa0 41F6C001 		testb	$1, %r8b
 4863 0aa4 0F849E01 		je	.L365
 4863      0000
 4864              	.LBB185:
2614:fltk-1.3.4-1/png/pngread.c **** 
 4865              		.loc 1 2614 19 is_stmt 1 view .LVU1341
2616:fltk-1.3.4-1/png/pngread.c ****                      png_error(png_ptr, "rgb+alpha color-map: too few entries");
 4866              		.loc 1 2616 19 view .LVU1342
2616:fltk-1.3.4-1/png/pngread.c ****                      png_error(png_ptr, "rgb+alpha color-map: too few entries");
 4867              		.loc 1 2616 22 is_stmt 0 view .LVU1343
 4868 0aaa 3DF30000 		cmpl	$243, %eax
 4868      00
 4869 0aaf 0F862608 		jbe	.L524
 4869      0000
2619:fltk-1.3.4-1/png/pngread.c **** 
 4870              		.loc 1 2619 19 is_stmt 1 view .LVU1344
2619:fltk-1.3.4-1/png/pngread.c **** 
 4871              		.loc 1 2619 34 is_stmt 0 view .LVU1345
 4872 0ab5 4889EF   		movq	%rbp, %rdi
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4873              		.loc 1 2631 25 view .LVU1346
 4874 0ab8 4531E4   		xorl	%r12d, %r12d
2619:fltk-1.3.4-1/png/pngread.c **** 
 4875              		.loc 1 2619 34 view .LVU1347
 4876 0abb E8000000 		call	make_rgb_colormap
 4876      00
 4877              	.LVL515:
2622:fltk-1.3.4-1/png/pngread.c ****                      255, 0, P_sRGB);
 4878              		.loc 1 2622 19 view .LVU1348
 4879 0ac0 4883EC08 		subq	$8, %rsp
 4880              		.cfi_def_cfa_offset 168
 4881              	.LVL516:
2622:fltk-1.3.4-1/png/pngread.c ****                      255, 0, P_sRGB);
 4882              		.loc 1 2622 19 view .LVU1349
 4883 0ac4 4531C9   		xorl	%r9d, %r9d
 4884 0ac7 4889EF   		movq	%rbp, %rdi
2619:fltk-1.3.4-1/png/pngread.c **** 
 4885              		.loc 1 2619 34 view .LVU1350
 4886 0aca 89442434 		movl	%eax, 52(%rsp)
 4887              	.LVL517:
2622:fltk-1.3.4-1/png/pngread.c ****                      255, 0, P_sRGB);
 4888              		.loc 1 2622 19 is_stmt 1 view .LVU1351
2619:fltk-1.3.4-1/png/pngread.c **** 
 4889              		.loc 1 2619 34 is_stmt 0 view .LVU1352
 4890 0ace 89C3     		movl	%eax, %ebx
2622:fltk-1.3.4-1/png/pngread.c ****                      255, 0, P_sRGB);
 4891              		.loc 1 2622 19 view .LVU1353
 4892 0ad0 89C6     		movl	%eax, %esi
 4893 0ad2 41B8FF00 		movl	$255, %r8d
 4893      0000
 4894 0ad8 6A01     		pushq	$1
 4895              		.cfi_def_cfa_offset 176
 4896 0ada B9FF0000 		movl	$255, %ecx
 4896      00
 4897 0adf BAFF0000 		movl	$255, %edx
 4897      00
 4898 0ae4 E8000000 		call	png_create_colormap_entry
 4898      00
 4899              	.LVL518:
2628:fltk-1.3.4-1/png/pngread.c **** 
 4900              		.loc 1 2628 19 is_stmt 1 view .LVU1354
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4901              		.loc 1 2631 19 view .LVU1355
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4902              		.loc 1 2631 29 view .LVU1356
 4903 0ae9 89D8     		movl	%ebx, %eax
 4904 0aeb 8D7B0D   		leal	13(%rbx), %edi
 4905 0aee 83C028   		addl	$40, %eax
 4906 0af1 897C2418 		movl	%edi, 24(%rsp)
 4907              	.LVL519:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4908              		.loc 1 2631 29 is_stmt 0 view .LVU1357
 4909 0af5 89442424 		movl	%eax, 36(%rsp)
 4910              	.LVL520:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4911              		.loc 1 2631 29 view .LVU1358
 4912 0af9 4159     		popq	%r9
 4913              		.cfi_def_cfa_offset 168
 4914 0afb 415A     		popq	%r10
 4915              		.cfi_def_cfa_offset 160
 4916              	.LVL521:
 4917              	.L367:
 4918              	.LBB186:
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4919              		.loc 1 2635 32 is_stmt 1 view .LVU1359
 4920 0afd 8B442408 		movl	8(%rsp), %eax
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4921              		.loc 1 2635 28 is_stmt 0 view .LVU1360
 4922 0b01 4531FF   		xorl	%r15d, %r15d
 4923 0b04 4589FE   		movl	%r15d, %r14d
 4924 0b07 8D58F7   		leal	-9(%rax), %ebx
 4925              	.LVL522:
 4926              	.L370:
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4927              		.loc 1 2635 28 view .LVU1361
 4928 0b0a 448D7BFD 		leal	-3(%rbx), %r15d
 4929              	.LVL523:
 4930              	.LBB187:
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4931              		.loc 1 2642 35 is_stmt 1 view .LVU1362
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4932              		.loc 1 2642 31 is_stmt 0 view .LVU1363
 4933 0b0e 4531ED   		xorl	%r13d, %r13d
 4934              	.LVL524:
 4935              	.L368:
2643:fltk-1.3.4-1/png/pngread.c ****                               r, g, b, 128, P_sRGB);
 4936              		.loc 1 2643 28 is_stmt 1 discriminator 3 view .LVU1364
 4937 0b11 4883EC08 		subq	$8, %rsp
 4938              		.cfi_def_cfa_offset 168
 4939              	.LVL525:
2643:fltk-1.3.4-1/png/pngread.c ****                               r, g, b, 128, P_sRGB);
 4940              		.loc 1 2643 28 is_stmt 0 discriminator 3 view .LVU1365
 4941 0b15 4589E8   		movl	%r13d, %r8d
 4942 0b18 4489FE   		movl	%r15d, %esi
 4943 0b1b 4889EF   		movq	%rbp, %rdi
 4944 0b1e 6A01     		pushq	$1
 4945              		.cfi_def_cfa_offset 176
 4946 0b20 41B98000 		movl	$128, %r9d
 4946      0000
 4947 0b26 4489F1   		movl	%r14d, %ecx
 4948 0b29 4489E2   		movl	%r12d, %edx
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4949              		.loc 1 2642 49 discriminator 3 view .LVU1366
 4950 0b2c 4501ED   		addl	%r13d, %r13d
 4951              	.LVL526:
2643:fltk-1.3.4-1/png/pngread.c ****                               r, g, b, 128, P_sRGB);
 4952              		.loc 1 2643 28 discriminator 3 view .LVU1367
 4953 0b2f 4183C701 		addl	$1, %r15d
 4954              	.LVL527:
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4955              		.loc 1 2642 44 discriminator 3 view .LVU1368
 4956 0b33 4183CD7F 		orl	$127, %r13d
2643:fltk-1.3.4-1/png/pngread.c ****                               r, g, b, 128, P_sRGB);
 4957              		.loc 1 2643 28 discriminator 3 view .LVU1369
 4958 0b37 E8000000 		call	png_create_colormap_entry
 4958      00
 4959              	.LVL528:
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4960              		.loc 1 2642 42 is_stmt 1 discriminator 3 view .LVU1370
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4961              		.loc 1 2642 35 discriminator 3 view .LVU1371
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4962              		.loc 1 2642 25 is_stmt 0 discriminator 3 view .LVU1372
 4963 0b3c 5F       		popq	%rdi
 4964              		.cfi_def_cfa_offset 168
 4965 0b3d 4158     		popq	%r8
 4966              		.cfi_def_cfa_offset 160
 4967              	.LVL529:
2642:fltk-1.3.4-1/png/pngread.c ****                            png_create_colormap_entry(display, cmap_entries++,
 4968              		.loc 1 2642 25 discriminator 3 view .LVU1373
 4969 0b3f 4139DF   		cmpl	%ebx, %r15d
 4970 0b42 75CD     		jne	.L368
 4971              	.LBE187:
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4972              		.loc 1 2635 39 is_stmt 1 discriminator 2 view .LVU1374
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4973              		.loc 1 2635 46 is_stmt 0 discriminator 2 view .LVU1375
 4974 0b44 438D0436 		leal	(%r14,%r14), %eax
 4975 0b48 8D5303   		leal	3(%rbx), %edx
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4976              		.loc 1 2635 41 discriminator 2 view .LVU1376
 4977 0b4b 83C87F   		orl	$127, %eax
 4978 0b4e 4189C6   		movl	%eax, %r14d
 4979              	.LVL530:
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4980              		.loc 1 2635 32 is_stmt 1 discriminator 2 view .LVU1377
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4981              		.loc 1 2635 22 is_stmt 0 discriminator 2 view .LVU1378
 4982 0b51 39542408 		cmpl	%edx, 8(%rsp)
 4983 0b55 7409     		je	.L369
 4984 0b57 89D3     		movl	%edx, %ebx
 4985              	.LVL531:
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4986              		.loc 1 2635 22 discriminator 2 view .LVU1379
 4987 0b59 EBAF     		jmp	.L370
 4988              	.LVL532:
 4989 0b5b 0F1F4400 		.p2align 4,,10
 4989      00
 4990              		.p2align 3
 4991              	.L369:
2635:fltk-1.3.4-1/png/pngread.c ****                      {
 4992              		.loc 1 2635 22 discriminator 2 view .LVU1380
 4993              	.LBE186:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4994              		.loc 1 2631 36 is_stmt 1 discriminator 2 view .LVU1381
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4995              		.loc 1 2631 43 is_stmt 0 discriminator 2 view .LVU1382
 4996 0b60 4501E4   		addl	%r12d, %r12d
 4997              	.LVL533:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 4998              		.loc 1 2631 43 discriminator 2 view .LVU1383
 4999 0b63 8D430C   		leal	12(%rbx), %eax
 5000              	.LVL534:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 5001              		.loc 1 2631 43 discriminator 2 view .LVU1384
 5002 0b66 89442408 		movl	%eax, 8(%rsp)
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 5003              		.loc 1 2631 38 discriminator 2 view .LVU1385
 5004 0b6a 4183CC7F 		orl	$127, %r12d
 5005              	.LVL535:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 5006              		.loc 1 2631 29 is_stmt 1 discriminator 2 view .LVU1386
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 5007              		.loc 1 2631 19 is_stmt 0 discriminator 2 view .LVU1387
 5008 0b6e 39442414 		cmpl	%eax, 20(%rsp)
 5009 0b72 7589     		jne	.L367
 5010              	.LVL536:
 5011              	.L497:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 5012              		.loc 1 2631 19 discriminator 2 view .LVU1388
 5013              	.LBE185:
 5014              	.LBB188:
 5015 0b74 41BD0400 		movl	$4, %r13d
 5015      0000
 5016              	.LVL537:
 5017              	.L330:
2631:fltk-1.3.4-1/png/pngread.c ****                   {
 5018              		.loc 1 2631 19 discriminator 2 view .LVU1389
 5019              	.LBE188:
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5020              		.loc 1 2831 25 view .LVU1390
 5021 0b7a 488B0424 		movq	(%rsp), %rax
 5022 0b7e 6683B870 		cmpw	$0, 624(%rax)
 5022      02000000 
 5023 0b86 0F8464F6 		je	.L326
 5023      FFFF
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5024              		.loc 1 2831 51 view .LVU1391
 5025 0b8c 488B3C24 		movq	(%rsp), %rdi
 5026 0b90 F6877702 		testb	$4, 631(%rdi)
 5026      000004
 5027 0b97 0F8553F6 		jne	.L326
 5027      FFFF
2833:fltk-1.3.4-1/png/pngread.c **** 
 5028              		.loc 1 2833 7 is_stmt 1 view .LVU1392
 5029 0b9d E8000000 		call	png_set_tRNS_to_alpha@PLT
 5029      00
 5030              	.LVL538:
2835:fltk-1.3.4-1/png/pngread.c ****    {
 5031              		.loc 1 2835 4 view .LVU1393
 5032 0ba2 E949F6FF 		jmp	.L326
 5032      FF
 5033              	.LVL539:
 5034 0ba7 660F1F84 		.p2align 4,,10
 5034      00000000 
 5034      00
 5035              		.p2align 3
 5036              	.L333:
 5037              	.LBB190:
2362:fltk-1.3.4-1/png/pngread.c ****                png_uint_32 gray = back_g;
 5038              		.loc 1 2362 16 view .LVU1394
2363:fltk-1.3.4-1/png/pngread.c **** 
 5039              		.loc 1 2363 16 view .LVU1395
2365:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "gray-alpha color-map: too few entries");
 5040              		.loc 1 2365 16 view .LVU1396
2365:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "gray-alpha color-map: too few entries");
 5041              		.loc 1 2365 19 is_stmt 0 view .LVU1397
 5042 0bb0 3DFF0000 		cmpl	$255, %eax
 5042      00
 5043 0bb5 0F861007 		jbe	.L525
 5043      0000
2368:fltk-1.3.4-1/png/pngread.c **** 
 5044              		.loc 1 2368 16 is_stmt 1 view .LVU1398
2368:fltk-1.3.4-1/png/pngread.c **** 
 5045              		.loc 1 2368 31 is_stmt 0 view .LVU1399
 5046 0bbb 4889EF   		movq	%rbp, %rdi
 5047 0bbe E8000000 		call	make_gray_colormap
 5047      00
 5048              	.LVL540:
 5049 0bc3 89C3     		movl	%eax, %ebx
 5050              	.LVL541:
 5051              	.L501:
2370:fltk-1.3.4-1/png/pngread.c ****                {
 5052              		.loc 1 2370 16 is_stmt 1 view .LVU1400
2370:fltk-1.3.4-1/png/pngread.c ****                {
 5053              		.loc 1 2370 19 is_stmt 0 view .LVU1401
 5054 0bc5 4183FE02 		cmpl	$2, %r14d
 5055 0bc9 0F84E103 		je	.L526
 5055      0000
 5056              	.LVL542:
 5057              	.L336:
2382:fltk-1.3.4-1/png/pngread.c ****                c.gray = c.red = c.green = c.blue = (png_uint_16)gray;
 5058              		.loc 1 2382 16 is_stmt 1 view .LVU1402
2385:fltk-1.3.4-1/png/pngread.c ****                   PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5059              		.loc 1 2385 16 is_stmt 0 view .LVU1403
 5060 0bcf 488B3C24 		movq	(%rsp), %rdi
 5061 0bd3 488D7424 		leaq	78(%rsp), %rsi
 5061      4E
 5062 0bd8 4531C0   		xorl	%r8d, %r8d
 5063 0bdb 31C9     		xorl	%ecx, %ecx
 5064 0bdd BA010000 		movl	$1, %edx
 5064      00
2382:fltk-1.3.4-1/png/pngread.c ****                c.gray = c.red = c.green = c.blue = (png_uint_16)gray;
 5065              		.loc 1 2382 24 view .LVU1404
 5066 0be2 C644244E 		movb	$0, 78(%rsp)
 5066      00
2383:fltk-1.3.4-1/png/pngread.c **** 
 5067              		.loc 1 2383 16 is_stmt 1 view .LVU1405
2383:fltk-1.3.4-1/png/pngread.c **** 
 5068              		.loc 1 2383 50 is_stmt 0 view .LVU1406
 5069 0be7 6644897C 		movw	%r15w, 84(%rsp)
 5069      2454
2383:fltk-1.3.4-1/png/pngread.c **** 
 5070              		.loc 1 2383 41 view .LVU1407
 5071 0bed 6644897C 		movw	%r15w, 82(%rsp)
 5071      2452
2383:fltk-1.3.4-1/png/pngread.c **** 
 5072              		.loc 1 2383 31 view .LVU1408
 5073 0bf3 6644897C 		movw	%r15w, 80(%rsp)
 5073      2450
2383:fltk-1.3.4-1/png/pngread.c **** 
 5074              		.loc 1 2383 23 view .LVU1409
 5075 0bf9 6644897C 		movw	%r15w, 86(%rsp)
 5075      2456
2385:fltk-1.3.4-1/png/pngread.c ****                   PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5076              		.loc 1 2385 16 is_stmt 1 view .LVU1410
 5077 0bff E8000000 		call	png_set_background_fixed@PLT
 5077      00
 5078              	.LVL543:
2389:fltk-1.3.4-1/png/pngread.c ****             }
 5079              		.loc 1 2389 16 view .LVU1411
2389:fltk-1.3.4-1/png/pngread.c ****             }
 5080              		.loc 1 2389 16 is_stmt 0 view .LVU1412
 5081              	.LBE190:
2827:fltk-1.3.4-1/png/pngread.c ****    }
 5082              		.loc 1 2827 10 is_stmt 1 view .LVU1413
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5083              		.loc 1 2831 4 view .LVU1414
2077:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 back_r, back_g, back_b;
 5084              		.loc 1 2077 17 is_stmt 0 view .LVU1415
 5085 0c04 C744242C 		movl	$256, 44(%rsp)
 5085      00010000 
 5086 0c0c E9DFF5FF 		jmp	.L326
 5086      FF
 5087              	.LVL544:
 5088              		.p2align 4,,10
 5089 0c11 0F1F8000 		.p2align 3
 5089      000000
 5090              	.L421:
2077:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 back_r, back_g, back_b;
 5091              		.loc 1 2077 17 view .LVU1416
 5092 0c18 C744242C 		movl	$256, 44(%rsp)
 5092      00010000 
2312:fltk-1.3.4-1/png/pngread.c ****          }
 5093              		.loc 1 2312 34 view .LVU1417
 5094 0c20 4531ED   		xorl	%r13d, %r13d
 5095 0c23 E9C8F5FF 		jmp	.L326
 5095      FF
 5096              	.LVL545:
 5097 0c28 0F1F8400 		.p2align 4,,10
 5097      00000000 
 5098              		.p2align 3
 5099              	.L418:
 5100              	.LBB191:
2157:fltk-1.3.4-1/png/pngread.c **** 
 5101              		.loc 1 2157 63 view .LVU1418
 5102 0c30 C7442420 		movl	$0, 32(%rsp)
 5102      00000000 
2157:fltk-1.3.4-1/png/pngread.c **** 
 5103              		.loc 1 2157 40 view .LVU1419
 5104 0c38 BE000100 		movl	$256, %esi
 5104      00
 5105 0c3d E9C8F6FF 		jmp	.L320
 5105      FF
 5106              	.LVL546:
 5107              		.p2align 4,,10
 5108 0c42 660F1F44 		.p2align 3
 5108      0000
 5109              	.L365:
2157:fltk-1.3.4-1/png/pngread.c **** 
 5110              		.loc 1 2157 40 view .LVU1420
 5111              	.LBE191:
 5112              	.LBB192:
2661:fltk-1.3.4-1/png/pngread.c ****                      PNG_IMAGE_SAMPLE_SIZE(output_format);
 5113              		.loc 1 2661 19 is_stmt 1 view .LVU1421
2662:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 r, g, b; /* sRGB background */
 5114              		.loc 1 2662 22 is_stmt 0 view .LVU1422
 5115 0c48 4489C3   		movl	%r8d, %ebx
 5116 0c4b 4183E003 		andl	$3, %r8d
 5117              	.LVL547:
2662:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 r, g, b; /* sRGB background */
 5118              		.loc 1 2662 22 view .LVU1423
 5119 0c4f C1EB02   		shrl	$2, %ebx
 5120              	.LVL548:
2662:fltk-1.3.4-1/png/pngread.c ****                   png_uint_32 r, g, b; /* sRGB background */
 5121              		.loc 1 2662 22 view .LVU1424
 5122 0c52 4183C001 		addl	$1, %r8d
 5123 0c56 83E301   		andl	$1, %ebx
 5124 0c59 83C301   		addl	$1, %ebx
2661:fltk-1.3.4-1/png/pngread.c ****                      PNG_IMAGE_SAMPLE_SIZE(output_format);
 5125              		.loc 1 2661 32 view .LVU1425
 5126 0c5c 410FAFD8 		imull	%r8d, %ebx
 5127              	.LVL549:
2663:fltk-1.3.4-1/png/pngread.c **** 
 5128              		.loc 1 2663 19 is_stmt 1 view .LVU1426
2665:fltk-1.3.4-1/png/pngread.c ****                      png_error(png_ptr, "rgb-alpha color-map: too few entries");
 5129              		.loc 1 2665 19 view .LVU1427
2665:fltk-1.3.4-1/png/pngread.c ****                      png_error(png_ptr, "rgb-alpha color-map: too few entries");
 5130              		.loc 1 2665 22 is_stmt 0 view .LVU1428
 5131 0c60 3DF30000 		cmpl	$243, %eax
 5131      00
 5132 0c65 0F863006 		jbe	.L527
 5132      0000
2668:fltk-1.3.4-1/png/pngread.c **** 
 5133              		.loc 1 2668 19 is_stmt 1 view .LVU1429
2668:fltk-1.3.4-1/png/pngread.c **** 
 5134              		.loc 1 2668 34 is_stmt 0 view .LVU1430
 5135 0c6b 4889EF   		movq	%rbp, %rdi
 5136 0c6e E8000000 		call	make_rgb_colormap
 5136      00
 5137              	.LVL550:
2670:fltk-1.3.4-1/png/pngread.c ****                         back_g, back_b, 0/*unused*/, output_encoding);
 5138              		.loc 1 2670 19 view .LVU1431
 5139 0c73 4883EC08 		subq	$8, %rsp
 5140              		.cfi_def_cfa_offset 168
 5141              	.LVL551:
2670:fltk-1.3.4-1/png/pngread.c ****                         back_g, back_b, 0/*unused*/, output_encoding);
 5142              		.loc 1 2670 19 view .LVU1432
 5143 0c77 4489F9   		movl	%r15d, %ecx
 5144 0c7a 4531C9   		xorl	%r9d, %r9d
2668:fltk-1.3.4-1/png/pngread.c **** 
 5145              		.loc 1 2668 34 view .LVU1433
 5146 0c7d 89442434 		movl	%eax, 52(%rsp)
 5147              	.LVL552:
2670:fltk-1.3.4-1/png/pngread.c ****                         back_g, back_b, 0/*unused*/, output_encoding);
 5148              		.loc 1 2670 19 is_stmt 1 view .LVU1434
 5149 0c81 89C6     		movl	%eax, %esi
 5150 0c83 4889EF   		movq	%rbp, %rdi
 5151 0c86 4156     		pushq	%r14
 5152              		.cfi_def_cfa_offset 176
 5153 0c88 448B4424 		movl	36(%rsp), %r8d
 5153      24
 5154 0c8d 8B542418 		movl	24(%rsp), %edx
 5155 0c91 E8000000 		call	png_create_colormap_entry
 5155      00
 5156              	.LVL553:
2673:fltk-1.3.4-1/png/pngread.c ****                   {
 5157              		.loc 1 2673 19 view .LVU1435
2673:fltk-1.3.4-1/png/pngread.c ****                   {
 5158              		.loc 1 2673 22 is_stmt 0 view .LVU1436
 5159 0c96 59       		popq	%rcx
 5160              		.cfi_def_cfa_offset 168
 5161 0c97 5E       		popq	%rsi
 5162              		.cfi_def_cfa_offset 160
 5163              	.LVL554:
2673:fltk-1.3.4-1/png/pngread.c ****                   {
 5164              		.loc 1 2673 22 view .LVU1437
 5165 0c98 4183FE02 		cmpl	$2, %r14d
 5166 0c9c 0F84A901 		je	.L528
 5166      0000
2682:fltk-1.3.4-1/png/pngread.c ****                      g = back_g;
 5167              		.loc 1 2682 24 view .LVU1438
 5168 0ca2 8B742408 		movl	8(%rsp), %esi
 5169 0ca6 4489F9   		movl	%r15d, %ecx
 5170 0ca9 4489F8   		movl	%r15d, %eax
 5171              	.L372:
 5172              	.LVL555:
2692:fltk-1.3.4-1/png/pngread.c ****                         sample_size * cmap_entries,
 5173              		.loc 1 2692 19 is_stmt 1 view .LVU1439
2695:fltk-1.3.4-1/png/pngread.c ****                      sample_size) != 0)
 5174              		.loc 1 2695 39 is_stmt 0 view .LVU1440
 5175 0cac 8DB4B682 		leal	130(%rsi,%rsi,4), %esi
 5175      000000
 5176              	.LVL556:
2693:fltk-1.3.4-1/png/pngread.c ****                      (png_const_bytep)display->colormap +
 5177              		.loc 1 2693 37 view .LVU1441
 5178 0cb3 448B6424 		movl	44(%rsp), %r12d
 5178      2C
2692:fltk-1.3.4-1/png/pngread.c ****                         sample_size * cmap_entries,
 5179              		.loc 1 2692 23 view .LVU1442
 5180 0cb8 4189D9   		movl	%ebx, %r9d
2694:fltk-1.3.4-1/png/pngread.c ****                         sample_size * PNG_RGB_INDEX(r,g,b),
 5181              		.loc 1 2694 46 view .LVU1443
 5182 0cbb 488B5518 		movq	24(%rbp), %rdx
2695:fltk-1.3.4-1/png/pngread.c ****                      sample_size) != 0)
 5183              		.loc 1 2695 39 view .LVU1444
 5184 0cbf C1EE08   		shrl	$8, %esi
 5185 0cc2 8D848082 		leal	130(%rax,%rax,4), %eax
 5185      000000
 5186              	.LVL557:
2695:fltk-1.3.4-1/png/pngread.c ****                      sample_size) != 0)
 5187              		.loc 1 2695 39 view .LVU1445
 5188 0cc9 8D3476   		leal	(%rsi,%rsi,2), %esi
 5189 0ccc C1E808   		shrl	$8, %eax
 5190 0ccf 8D0470   		leal	(%rax,%rsi,2), %eax
 5191 0cd2 8DB48982 		leal	130(%rcx,%rcx,4), %esi
 5191      000000
 5192 0cd9 C1EE08   		shrl	$8, %esi
 5193 0cdc 8D0440   		leal	(%rax,%rax,2), %eax
 5194 0cdf 8D3446   		leal	(%rsi,%rax,2), %esi
 5195 0ce2 400FB6F6 		movzbl	%sil, %esi
2695:fltk-1.3.4-1/png/pngread.c ****                      sample_size) != 0)
 5196              		.loc 1 2695 37 view .LVU1446
 5197 0ce6 0FAFF3   		imull	%ebx, %esi
2693:fltk-1.3.4-1/png/pngread.c ****                      (png_const_bytep)display->colormap +
 5198              		.loc 1 2693 37 view .LVU1447
 5199 0ce9 410FAFDC 		imull	%r12d, %ebx
 5200              	.LVL558:
2692:fltk-1.3.4-1/png/pngread.c ****                         sample_size * cmap_entries,
 5201              		.loc 1 2692 23 view .LVU1448
 5202 0ced 4801D6   		addq	%rdx, %rsi
 5203 0cf0 488D3C1A 		leaq	(%rdx,%rbx), %rdi
 5204 0cf4 4C89CA   		movq	%r9, %rdx
 5205 0cf7 E8000000 		call	memcmp@PLT
 5205      00
 5206              	.LVL559:
2692:fltk-1.3.4-1/png/pngread.c ****                         sample_size * cmap_entries,
 5207              		.loc 1 2692 22 view .LVU1449
 5208 0cfc 85C0     		testl	%eax, %eax
 5209 0cfe 0F84BC03 		je	.L373
 5209      0000
2699:fltk-1.3.4-1/png/pngread.c **** 
 5210              		.loc 1 2699 22 is_stmt 1 view .LVU1450
 5211              	.LVL560:
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5212              		.loc 1 2704 22 view .LVU1451
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5213              		.loc 1 2704 32 view .LVU1452
 5214 0d04 418D4424 		leal	13(%r12), %eax
 5214      0D
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5215              		.loc 1 2704 28 is_stmt 0 view .LVU1453
 5216 0d09 C7442430 		movl	$0, 48(%rsp)
 5216      00000000 
 5217 0d11 89442438 		movl	%eax, 56(%rsp)
 5218 0d15 418D4424 		leal	40(%r12), %eax
 5218      28
 5219 0d1a 8944243C 		movl	%eax, 60(%rsp)
 5220 0d1e 44897C24 		movl	%r15d, 52(%rsp)
 5220      34
 5221              	.LVL561:
 5222              	.L374:
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5223              		.loc 1 2706 35 is_stmt 1 view .LVU1454
 5224 0d23 8B442438 		movl	56(%rsp), %eax
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5225              		.loc 1 2706 31 is_stmt 0 view .LVU1455
 5226 0d27 4531FF   		xorl	%r15d, %r15d
 5227 0d2a 83E809   		subl	$9, %eax
 5228 0d2d 89442420 		movl	%eax, 32(%rsp)
 5229              	.LVL562:
 5230              	.L377:
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5231              		.loc 1 2706 31 view .LVU1456
 5232 0d31 8B442420 		movl	32(%rsp), %eax
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5233              		.loc 1 2711 34 view .LVU1457
 5234 0d35 31DB     		xorl	%ebx, %ebx
 5235 0d37 448D60FD 		leal	-3(%rax), %r12d
 5236              	.LVL563:
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5237              		.loc 1 2711 38 is_stmt 1 view .LVU1458
 5238              	.L375:
2712:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, r, P_sRGB, 128,
 5239              		.loc 1 2712 31 discriminator 3 view .LVU1459
 5240 0d3b 448B4424 		movl	20(%rsp), %r8d
 5240      14
 5241 0d40 89DE     		movl	%ebx, %esi
 5242 0d42 4589F1   		movl	%r14d, %r9d
 5243 0d45 B9800000 		movl	$128, %ecx
 5243      00
 5244 0d4a BA010000 		movl	$1, %edx
 5244      00
 5245 0d4f 4889EF   		movq	%rbp, %rdi
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5246              		.loc 1 2711 52 is_stmt 0 discriminator 3 view .LVU1460
 5247 0d52 01DB     		addl	%ebx, %ebx
 5248              	.LVL564:
2712:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, r, P_sRGB, 128,
 5249              		.loc 1 2712 31 discriminator 3 view .LVU1461
 5250 0d54 E8000000 		call	png_colormap_compose
 5250      00
 5251              	.LVL565:
2712:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, r, P_sRGB, 128,
 5252              		.loc 1 2712 31 discriminator 3 view .LVU1462
 5253 0d59 448B4424 		movl	52(%rsp), %r8d
 5253      34
 5254 0d5e 4589F1   		movl	%r14d, %r9d
 5255 0d61 4489FE   		movl	%r15d, %esi
 5256 0d64 B9800000 		movl	$128, %ecx
 5256      00
 5257 0d69 BA010000 		movl	$1, %edx
 5257      00
 5258 0d6e 4889EF   		movq	%rbp, %rdi
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5259              		.loc 1 2711 47 discriminator 3 view .LVU1463
 5260 0d71 83CB7F   		orl	$127, %ebx
2712:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, r, P_sRGB, 128,
 5261              		.loc 1 2712 31 discriminator 3 view .LVU1464
 5262 0d74 89442428 		movl	%eax, 40(%rsp)
 5263 0d78 E8000000 		call	png_colormap_compose
 5263      00
 5264              	.LVL566:
 5265 0d7d 448B4424 		movl	8(%rsp), %r8d
 5265      08
 5266 0d82 4589F1   		movl	%r14d, %r9d
 5267 0d85 4889EF   		movq	%rbp, %rdi
 5268 0d88 8B742430 		movl	48(%rsp), %esi
 5269 0d8c B9800000 		movl	$128, %ecx
 5269      00
 5270 0d91 BA010000 		movl	$1, %edx
 5270      00
 5271 0d96 4189C5   		movl	%eax, %r13d
 5272 0d99 E8000000 		call	png_colormap_compose
 5272      00
 5273              	.LVL567:
 5274 0d9e 4883EC08 		subq	$8, %rsp
 5275              		.cfi_def_cfa_offset 168
 5276              	.LVL568:
2712:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, r, P_sRGB, 128,
 5277              		.loc 1 2712 31 discriminator 3 view .LVU1465
 5278 0da2 4489E6   		movl	%r12d, %esi
 5279 0da5 4531C9   		xorl	%r9d, %r9d
 5280 0da8 4156     		pushq	%r14
 5281              		.cfi_def_cfa_offset 176
 5282 0daa 448B5C24 		movl	56(%rsp), %r11d
 5282      38
 5283 0daf 89C2     		movl	%eax, %edx
 5284 0db1 4489E9   		movl	%r13d, %ecx
 5285 0db4 4889EF   		movq	%rbp, %rdi
 5286 0db7 4183C401 		addl	$1, %r12d
 5287              	.LVL569:
2712:fltk-1.3.4-1/png/pngread.c ****                                  png_colormap_compose(display, r, P_sRGB, 128,
 5288              		.loc 1 2712 31 discriminator 3 view .LVU1466
 5289 0dbb 4589D8   		movl	%r11d, %r8d
 5290 0dbe E8000000 		call	png_create_colormap_entry
 5290      00
 5291              	.LVL570:
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5292              		.loc 1 2711 45 is_stmt 1 discriminator 3 view .LVU1467
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5293              		.loc 1 2711 38 discriminator 3 view .LVU1468
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5294              		.loc 1 2711 28 is_stmt 0 discriminator 3 view .LVU1469
 5295 0dc3 58       		popq	%rax
 5296              		.cfi_def_cfa_offset 168
 5297 0dc4 5A       		popq	%rdx
 5298              		.cfi_def_cfa_offset 160
 5299              	.LVL571:
2711:fltk-1.3.4-1/png/pngread.c ****                               png_create_colormap_entry(display, cmap_entries++,
 5300              		.loc 1 2711 28 discriminator 3 view .LVU1470
 5301 0dc5 443B6424 		cmpl	32(%rsp), %r12d
 5301      20
 5302 0dca 0F856BFF 		jne	.L375
 5302      FFFF
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5303              		.loc 1 2706 42 is_stmt 1 discriminator 2 view .LVU1471
 5304 0dd0 8B442420 		movl	32(%rsp), %eax
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5305              		.loc 1 2706 49 is_stmt 0 discriminator 2 view .LVU1472
 5306 0dd4 4501FF   		addl	%r15d, %r15d
 5307              	.LVL572:
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5308              		.loc 1 2706 44 discriminator 2 view .LVU1473
 5309 0dd7 4183CF7F 		orl	$127, %r15d
 5310              	.LVL573:
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5311              		.loc 1 2706 35 is_stmt 1 discriminator 2 view .LVU1474
 5312 0ddb 83C003   		addl	$3, %eax
 5313              	.LVL574:
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5314              		.loc 1 2706 25 is_stmt 0 discriminator 2 view .LVU1475
 5315 0dde 39442438 		cmpl	%eax, 56(%rsp)
 5316 0de2 0F84F800 		je	.L376
 5316      0000
 5317 0de8 89442420 		movl	%eax, 32(%rsp)
 5318              	.LVL575:
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5319              		.loc 1 2706 25 discriminator 2 view .LVU1476
 5320 0dec E940FFFF 		jmp	.L377
 5320      FF
 5321              	.LVL576:
 5322              	.L312:
2706:fltk-1.3.4-1/png/pngread.c ****                         {
 5323              		.loc 1 2706 25 discriminator 2 view .LVU1477
 5324              	.LBE192:
2825:fltk-1.3.4-1/png/pngread.c ****          /*NOT REACHED*/
 5325              		.loc 1 2825 10 is_stmt 1 view .LVU1478
 5326 0df1 488B3C24 		movq	(%rsp), %rdi
 5327 0df5 488D3500 		leaq	.LC21(%rip), %rsi
 5327      000000
 5328 0dfc E8000000 		call	png_error@PLT
 5328      00
 5329              	.LVL577:
 5330              		.p2align 4,,10
 5331 0e01 0F1F8000 		.p2align 3
 5331      000000
 5332              	.L507:
 5333              	.LBB193:
2174:fltk-1.3.4-1/png/pngread.c ****             }
 5334              		.loc 1 2174 19 view .LVU1479
2174:fltk-1.3.4-1/png/pngread.c ****             }
 5335              		.loc 1 2174 68 is_stmt 0 view .LVU1480
 5336 0e08 4183FE02 		cmpl	$2, %r14d
 5337 0e0c B8FFFF00 		movl	$65535, %eax
 5337      00
 5338              	.LVL578:
2174:fltk-1.3.4-1/png/pngread.c ****             }
 5339              		.loc 1 2174 68 view .LVU1481
 5340 0e11 0F44C8   		cmove	%eax, %ecx
 5341 0e14 894C2420 		movl	%ecx, 32(%rsp)
 5342 0e18 E9EDF4FF 		jmp	.L320
 5342      FF
 5343              	.LVL579:
 5344              	.L521:
2174:fltk-1.3.4-1/png/pngread.c ****             }
 5345              		.loc 1 2174 68 view .LVU1482
 5346              	.LBE193:
2495:fltk-1.3.4-1/png/pngread.c **** 
 5347              		.loc 1 2495 16 is_stmt 1 view .LVU1483
2497:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[ga] color-map: too few entries");
 5348              		.loc 1 2497 16 view .LVU1484
2497:fltk-1.3.4-1/png/pngread.c ****                   png_error(png_ptr, "rgb[ga] color-map: too few entries");
 5349              		.loc 1 2497 19 is_stmt 0 view .LVU1485
 5350 0e1d 81FAFF00 		cmpl	$255, %edx
 5350      0000
 5351 0e23 0F86D204 		jbe	.L529
 5351      0000
2500:fltk-1.3.4-1/png/pngread.c ****                background_index = PNG_CMAP_GA_BACKGROUND;
 5352              		.loc 1 2500 16 is_stmt 1 view .LVU1486
2500:fltk-1.3.4-1/png/pngread.c ****                background_index = PNG_CMAP_GA_BACKGROUND;
 5353              		.loc 1 2500 31 is_stmt 0 view .LVU1487
 5354 0e29 4889EF   		movq	%rbp, %rdi
2502:fltk-1.3.4-1/png/pngread.c ****             }
 5355              		.loc 1 2502 34 view .LVU1488
 5356 0e2c 4589E5   		movl	%r12d, %r13d
2500:fltk-1.3.4-1/png/pngread.c ****                background_index = PNG_CMAP_GA_BACKGROUND;
 5357              		.loc 1 2500 31 view .LVU1489
 5358 0e2f E8000000 		call	make_ga_colormap
 5358      00
 5359              	.LVL580:
2501:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_GA;
 5360              		.loc 1 2501 33 view .LVU1490
 5361 0e34 C744242C 		movl	$231, 44(%rsp)
 5361      E7000000 
2500:fltk-1.3.4-1/png/pngread.c ****                background_index = PNG_CMAP_GA_BACKGROUND;
 5362              		.loc 1 2500 31 view .LVU1491
 5363 0e3c 89C3     		movl	%eax, %ebx
 5364              	.LVL581:
2501:fltk-1.3.4-1/png/pngread.c ****                output_processing = PNG_CMAP_GA;
 5365              		.loc 1 2501 16 is_stmt 1 view .LVU1492
2502:fltk-1.3.4-1/png/pngread.c ****             }
 5366              		.loc 1 2502 16 view .LVU1493
2827:fltk-1.3.4-1/png/pngread.c ****    }
 5367              		.loc 1 2827 10 view .LVU1494
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5368              		.loc 1 2831 4 view .LVU1495
 5369 0e3e E937FDFF 		jmp	.L330
 5369      FF
 5370              	.LVL582:
 5371              	.L422:
 5372              	.LBB194:
2249:fltk-1.3.4-1/png/pngread.c **** 
 5373              		.loc 1 2249 30 is_stmt 0 view .LVU1496
 5374 0e43 4531C9   		xorl	%r9d, %r9d
 5375 0e46 E999FAFF 		jmp	.L327
 5375      FF
 5376              	.LVL583:
 5377              	.L528:
2249:fltk-1.3.4-1/png/pngread.c **** 
 5378              		.loc 1 2249 30 view .LVU1497
 5379              	.LBE194:
 5380              	.LBB195:
2675:fltk-1.3.4-1/png/pngread.c ****                      g = PNG_sRGB_FROM_LINEAR(back_g * 255);
 5381              		.loc 1 2675 22 is_stmt 1 view .LVU1498
2675:fltk-1.3.4-1/png/pngread.c ****                      g = PNG_sRGB_FROM_LINEAR(back_g * 255);
 5382              		.loc 1 2675 26 is_stmt 0 view .LVU1499
 5383 0e4b 8B742408 		movl	8(%rsp), %esi
 5384 0e4f 4C8D0500 		leaq	png_sRGB_delta(%rip), %r8
 5384      000000
 5385 0e56 488D3D00 		leaq	png_sRGB_base(%rip), %rdi
 5385      000000
 5386 0e5d 89F0     		movl	%esi, %eax
 5387 0e5f C1E008   		sall	$8, %eax
 5388 0e62 29F0     		subl	%esi, %eax
 5389 0e64 89C2     		movl	%eax, %edx
 5390 0e66 25FF7F00 		andl	$32767, %eax
 5390      00
 5391 0e6b C1EA0F   		shrl	$15, %edx
 5392 0e6e 410FB60C 		movzbl	(%r8,%rdx), %ecx
 5392      10
 5393 0e73 0FB73457 		movzwl	(%rdi,%rdx,2), %esi
 5394 0e77 0FAFC1   		imull	%ecx, %eax
 5395 0e7a C1E80C   		shrl	$12, %eax
 5396 0e7d 01F0     		addl	%esi, %eax
 5397 0e7f 0FB6F4   		movzbl	%ah, %esi
 5398              	.LVL584:
2676:fltk-1.3.4-1/png/pngread.c ****                      b = PNG_sRGB_FROM_LINEAR(back_b * 255);
 5399              		.loc 1 2676 22 is_stmt 1 view .LVU1500
2676:fltk-1.3.4-1/png/pngread.c ****                      b = PNG_sRGB_FROM_LINEAR(back_b * 255);
 5400              		.loc 1 2676 26 is_stmt 0 view .LVU1501
 5401 0e82 4489F8   		movl	%r15d, %eax
 5402 0e85 C1E008   		sall	$8, %eax
 5403 0e88 4429F8   		subl	%r15d, %eax
 5404 0e8b 89C2     		movl	%eax, %edx
 5405 0e8d 25FF7F00 		andl	$32767, %eax
 5405      00
 5406 0e92 C1EA0F   		shrl	$15, %edx
 5407 0e95 410FB60C 		movzbl	(%r8,%rdx), %ecx
 5407      10
 5408 0e9a 0FB71457 		movzwl	(%rdi,%rdx,2), %edx
 5409 0e9e 0FAFC1   		imull	%ecx, %eax
2677:fltk-1.3.4-1/png/pngread.c ****                   }
 5410              		.loc 1 2677 26 view .LVU1502
 5411 0ea1 8B4C2414 		movl	20(%rsp), %ecx
2676:fltk-1.3.4-1/png/pngread.c ****                      b = PNG_sRGB_FROM_LINEAR(back_b * 255);
 5412              		.loc 1 2676 26 view .LVU1503
 5413 0ea5 C1E80C   		shrl	$12, %eax
 5414 0ea8 01D0     		addl	%edx, %eax
2677:fltk-1.3.4-1/png/pngread.c ****                   }
 5415              		.loc 1 2677 26 view .LVU1504
 5416 0eaa 89CA     		movl	%ecx, %edx
 5417 0eac C1E208   		sall	$8, %edx
 5418 0eaf 0FB6C4   		movzbl	%ah, %eax
 5419              	.LVL585:
2677:fltk-1.3.4-1/png/pngread.c ****                   }
 5420              		.loc 1 2677 22 is_stmt 1 view .LVU1505
2677:fltk-1.3.4-1/png/pngread.c ****                   }
 5421              		.loc 1 2677 26 is_stmt 0 view .LVU1506
 5422 0eb2 29CA     		subl	%ecx, %edx
 5423 0eb4 4189D1   		movl	%edx, %r9d
 5424 0eb7 89D1     		movl	%edx, %ecx
 5425 0eb9 41C1E90F 		shrl	$15, %r9d
 5426 0ebd 81E1FF7F 		andl	$32767, %ecx
 5426      0000
 5427 0ec3 4489CA   		movl	%r9d, %edx
 5428 0ec6 450FB604 		movzbl	(%r8,%rdx), %r8d
 5428      10
 5429 0ecb 0FB71457 		movzwl	(%rdi,%rdx,2), %edx
 5430 0ecf 410FAFC8 		imull	%r8d, %ecx
 5431 0ed3 C1E90C   		shrl	$12, %ecx
 5432 0ed6 01D1     		addl	%edx, %ecx
 5433 0ed8 0FB6CD   		movzbl	%ch, %ecx
 5434              	.LVL586:
2677:fltk-1.3.4-1/png/pngread.c ****                   }
 5435              		.loc 1 2677 26 view .LVU1507
 5436 0edb E9CCFDFF 		jmp	.L372
 5436      FF
 5437              	.LVL587:
 5438              		.p2align 4,,10
 5439              		.p2align 3
 5440              	.L376:
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5441              		.loc 1 2704 39 is_stmt 1 discriminator 2 view .LVU1508
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5442              		.loc 1 2704 46 is_stmt 0 discriminator 2 view .LVU1509
 5443 0ee0 8B442430 		movl	48(%rsp), %eax
 5444 0ee4 01C0     		addl	%eax, %eax
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5445              		.loc 1 2704 41 discriminator 2 view .LVU1510
 5446 0ee6 83C87F   		orl	$127, %eax
 5447 0ee9 89442430 		movl	%eax, 48(%rsp)
 5448              	.LVL588:
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5449              		.loc 1 2704 32 is_stmt 1 discriminator 2 view .LVU1511
 5450 0eed 8B442420 		movl	32(%rsp), %eax
 5451              	.LVL589:
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5452              		.loc 1 2704 32 is_stmt 0 discriminator 2 view .LVU1512
 5453 0ef1 83C00C   		addl	$12, %eax
 5454 0ef4 89442438 		movl	%eax, 56(%rsp)
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5455              		.loc 1 2704 22 discriminator 2 view .LVU1513
 5456 0ef8 3944243C 		cmpl	%eax, 60(%rsp)
 5457 0efc 0F8521FE 		jne	.L374
 5457      FFFF
 5458 0f02 8B5C2420 		movl	32(%rsp), %ebx
 5459              	.LVL590:
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5460              		.loc 1 2704 22 discriminator 2 view .LVU1514
 5461 0f06 E969FCFF 		jmp	.L497
 5461      FF
 5462              	.LVL591:
 5463 0f0b 0F1F4400 		.p2align 4,,10
 5463      00
 5464              		.p2align 3
 5465              	.L430:
2704:fltk-1.3.4-1/png/pngread.c ****                      {
 5466              		.loc 1 2704 22 discriminator 2 view .LVU1515
 5467              	.LBE195:
 5468              	.LBB196:
 5469 0f10 4531C0   		xorl	%r8d, %r8d
 5470              	.LVL592:
2773:fltk-1.3.4-1/png/pngread.c **** 
 5471              		.loc 1 2773 26 view .LVU1516
 5472 0f13 31FF     		xorl	%edi, %edi
 5473 0f15 E91EF5FF 		jmp	.L379
 5473      FF
 5474              	.LVL593:
 5475              	.L355:
2773:fltk-1.3.4-1/png/pngread.c **** 
 5476              		.loc 1 2773 26 view .LVU1517
 5477              	.LBE196:
 5478              	.LBB197:
2566:fltk-1.3.4-1/png/pngread.c ****                   {
 5479              		.loc 1 2566 24 is_stmt 1 view .LVU1518
 5480 0f1a 41BC0100 		movl	$1, %r12d
 5480      0000
2566:fltk-1.3.4-1/png/pngread.c ****                   {
 5481              		.loc 1 2566 27 is_stmt 0 view .LVU1519
 5482 0f20 4183FE02 		cmpl	$2, %r14d
 5483 0f24 0F849D02 		je	.L530
 5483      0000
 5484              	.LVL594:
 5485              	.L360:
2579:fltk-1.3.4-1/png/pngread.c ****                   c.gray = c.red = c.green = c.blue = (png_uint_16)gray;
 5486              		.loc 1 2579 19 is_stmt 1 view .LVU1520
2587:fltk-1.3.4-1/png/pngread.c ****                      PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5487              		.loc 1 2587 19 is_stmt 0 view .LVU1521
 5488 0f2a 4C8B3424 		movq	(%rsp), %r14
 5489 0f2e 4531C0   		xorl	%r8d, %r8d
 5490 0f31 31C9     		xorl	%ecx, %ecx
 5491 0f33 488D7424 		leaq	78(%rsp), %rsi
 5491      4E
 5492 0f38 BA010000 		movl	$1, %edx
 5492      00
2579:fltk-1.3.4-1/png/pngread.c ****                   c.gray = c.red = c.green = c.blue = (png_uint_16)gray;
 5493              		.loc 1 2579 27 view .LVU1522
 5494 0f3d C644244E 		movb	$0, 78(%rsp)
 5494      00
2580:fltk-1.3.4-1/png/pngread.c **** 
 5495              		.loc 1 2580 19 is_stmt 1 view .LVU1523
2587:fltk-1.3.4-1/png/pngread.c ****                      PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5496              		.loc 1 2587 19 is_stmt 0 view .LVU1524
 5497 0f42 4C89F7   		movq	%r14, %rdi
2580:fltk-1.3.4-1/png/pngread.c **** 
 5498              		.loc 1 2580 53 view .LVU1525
 5499 0f45 6644897C 		movw	%r15w, 84(%rsp)
 5499      2454
2580:fltk-1.3.4-1/png/pngread.c **** 
 5500              		.loc 1 2580 44 view .LVU1526
 5501 0f4b 6644897C 		movw	%r15w, 82(%rsp)
 5501      2452
2580:fltk-1.3.4-1/png/pngread.c **** 
 5502              		.loc 1 2580 34 view .LVU1527
 5503 0f51 6644897C 		movw	%r15w, 80(%rsp)
 5503      2450
2580:fltk-1.3.4-1/png/pngread.c **** 
 5504              		.loc 1 2580 26 view .LVU1528
 5505 0f57 6644897C 		movw	%r15w, 86(%rsp)
 5505      2456
2586:fltk-1.3.4-1/png/pngread.c ****                   png_set_background_fixed(png_ptr, &c,
 5506              		.loc 1 2586 19 is_stmt 1 view .LVU1529
 5507              	.LVL595:
2587:fltk-1.3.4-1/png/pngread.c ****                      PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5508              		.loc 1 2587 19 view .LVU1530
 5509 0f5d E8000000 		call	png_set_background_fixed@PLT
 5509      00
 5510              	.LVL596:
2587:fltk-1.3.4-1/png/pngread.c ****                      PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5511              		.loc 1 2587 19 is_stmt 0 view .LVU1531
 5512              	.LBE197:
2827:fltk-1.3.4-1/png/pngread.c ****    }
 5513              		.loc 1 2827 10 is_stmt 1 view .LVU1532
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5514              		.loc 1 2831 4 view .LVU1533
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5515              		.loc 1 2831 25 is_stmt 0 view .LVU1534
 5516 0f62 664183BE 		cmpw	$0, 624(%r14)
 5516      70020000 
 5516      00
 5517 0f6b 7523     		jne	.L361
 5518              	.L362:
 5519              	.LVL597:
2835:fltk-1.3.4-1/png/pngread.c ****    {
 5520              		.loc 1 2835 4 is_stmt 1 view .LVU1535
 5521 0f6d 4183FC01 		cmpl	$1, %r12d
 5522 0f71 0F8494FA 		je	.L433
 5522      FFFF
 5523 0f77 4183FC03 		cmpl	$3, %r12d
 5524 0f7b 0F85C502 		jne	.L531
 5524      0000
 5525 0f81 C744242C 		movl	$256, 44(%rsp)
 5525      00010000 
 5526 0f89 E972F2FF 		jmp	.L391
 5526      FF
 5527              	.LVL598:
 5528 0f8e 6690     		.p2align 4,,10
 5529              		.p2align 3
 5530              	.L361:
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5531              		.loc 1 2831 51 is_stmt 0 discriminator 2 view .LVU1536
 5532 0f90 488B0424 		movq	(%rsp), %rax
 5533 0f94 F6807702 		testb	$4, 631(%rax)
 5533      000004
 5534 0f9b 75D0     		jne	.L362
2833:fltk-1.3.4-1/png/pngread.c **** 
 5535              		.loc 1 2833 7 is_stmt 1 view .LVU1537
 5536 0f9d 4889C7   		movq	%rax, %rdi
 5537 0fa0 E8000000 		call	png_set_tRNS_to_alpha@PLT
 5537      00
 5538              	.LVL599:
 5539 0fa5 EBC6     		jmp	.L362
 5540              	.LVL600:
 5541 0fa7 660F1F84 		.p2align 4,,10
 5541      00000000 
 5541      00
 5542              		.p2align 3
 5543              	.L526:
 5544              	.LBB198:
2372:fltk-1.3.4-1/png/pngread.c **** 
 5545              		.loc 1 2372 19 view .LVU1538
2372:fltk-1.3.4-1/png/pngread.c **** 
 5546              		.loc 1 2372 26 is_stmt 0 view .LVU1539
 5547 0fb0 4489F8   		movl	%r15d, %eax
 5548 0fb3 488D0D00 		leaq	png_sRGB_delta(%rip), %rcx
 5548      000000
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5549              		.loc 1 2375 19 view .LVU1540
 5550 0fba 4589F8   		movl	%r15d, %r8d
 5551 0fbd 4889EF   		movq	%rbp, %rdi
2372:fltk-1.3.4-1/png/pngread.c **** 
 5552              		.loc 1 2372 26 view .LVU1541
 5553 0fc0 C1E008   		sall	$8, %eax
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5554              		.loc 1 2375 19 view .LVU1542
 5555 0fc3 4883EC08 		subq	$8, %rsp
 5556              		.cfi_def_cfa_offset 168
 5557              	.LVL601:
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5558              		.loc 1 2375 19 view .LVU1543
 5559 0fc7 41B9FFFF 		movl	$65535, %r9d
 5559      0000
2372:fltk-1.3.4-1/png/pngread.c **** 
 5560              		.loc 1 2372 26 view .LVU1544
 5561 0fcd 4429F8   		subl	%r15d, %eax
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5562              		.loc 1 2375 19 view .LVU1545
 5563 0fd0 6A02     		pushq	$2
 5564              		.cfi_def_cfa_offset 176
2372:fltk-1.3.4-1/png/pngread.c **** 
 5565              		.loc 1 2372 26 view .LVU1546
 5566 0fd2 89C2     		movl	%eax, %edx
 5567 0fd4 25FF7F00 		andl	$32767, %eax
 5567      00
 5568 0fd9 C1EA0F   		shrl	$15, %edx
 5569 0fdc 0FB60C11 		movzbl	(%rcx,%rdx), %ecx
 5570 0fe0 0FAFC1   		imull	%ecx, %eax
 5571 0fe3 488D0D00 		leaq	png_sRGB_base(%rip), %rcx
 5571      000000
 5572 0fea 440FB724 		movzwl	(%rcx,%rdx,2), %r12d
 5572      51
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5573              		.loc 1 2375 19 view .LVU1547
 5574 0fef 4489F9   		movl	%r15d, %ecx
 5575 0ff2 4489FA   		movl	%r15d, %edx
2372:fltk-1.3.4-1/png/pngread.c **** 
 5576              		.loc 1 2372 26 view .LVU1548
 5577 0ff5 C1E80C   		shrl	$12, %eax
 5578 0ff8 4401E0   		addl	%r12d, %eax
 5579 0ffb 0FB6C4   		movzbl	%ah, %eax
 5580 0ffe 4189C4   		movl	%eax, %r12d
 5581              	.LVL602:
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5582              		.loc 1 2375 19 is_stmt 1 view .LVU1549
 5583 1001 89C6     		movl	%eax, %esi
 5584 1003 E8000000 		call	png_create_colormap_entry
 5584      00
 5585              	.LVL603:
2372:fltk-1.3.4-1/png/pngread.c **** 
 5586              		.loc 1 2372 24 is_stmt 0 view .LVU1550
 5587 1008 4589E7   		movl	%r12d, %r15d
 5588              	.LVL604:
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5589              		.loc 1 2375 19 view .LVU1551
 5590 100b 415B     		popq	%r11
 5591              		.cfi_def_cfa_offset 168
 5592 100d 415E     		popq	%r14
 5593              		.cfi_def_cfa_offset 160
 5594              	.LVL605:
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5595              		.loc 1 2375 19 view .LVU1552
 5596 100f E9BBFBFF 		jmp	.L336
 5596      FF
 5597              	.LVL606:
 5598              	.L523:
2375:fltk-1.3.4-1/png/pngread.c ****                      back_g, 65535, P_LINEAR);
 5599              		.loc 1 2375 19 view .LVU1553
 5600              	.LBE198:
 5601              	.LBB199:
 5602              	.LBB183:
 5603              	.LBB181:
 5604              	.LBI181:
1363:fltk-1.3.4-1/png/pngread.c **** {
 5605              		.loc 1 1363 1 is_stmt 1 view .LVU1554
 5606              	.LBB182:
1371:fltk-1.3.4-1/png/pngread.c ****    }
 5607              		.loc 1 1371 7 view .LVU1555
1371:fltk-1.3.4-1/png/pngread.c ****    }
 5608              		.loc 1 1371 39 is_stmt 0 view .LVU1556
 5609 1014 8D1480   		leal	(%rax,%rax,4), %edx
1371:fltk-1.3.4-1/png/pngread.c ****    }
 5610              		.loc 1 1371 44 view .LVU1557
 5611 1017 8D445002 		leal	2(%rax,%rdx,2), %eax
 5612              	.LVL607:
1371:fltk-1.3.4-1/png/pngread.c ****    }
 5613              		.loc 1 1371 14 view .LVU1558
 5614 101b 4863F8   		movslq	%eax, %rdi
 5615 101e C1F81F   		sarl	$31, %eax
 5616 1021 4869FF67 		imulq	$1717986919, %rdi, %rdi
 5616      666666
 5617 1028 48C1FF21 		sarq	$33, %rdi
 5618 102c 29C7     		subl	%eax, %edi
 5619 102e E8000000 		call	png_gamma_significant@PLT
 5619      00
 5620              	.LVL608:
1371:fltk-1.3.4-1/png/pngread.c ****    }
 5621              		.loc 1 1371 14 view .LVU1559
 5622              	.LBE182:
 5623              	.LBE181:
 5624              	.LBE183:
 5625              	.LBE199:
2523:fltk-1.3.4-1/png/pngread.c ****                   png_gamma_not_sRGB(png_ptr->colorspace.gamma) != 0)
 5626              		.loc 1 2523 43 view .LVU1560
 5627 1033 85C0     		testl	%eax, %eax
 5628 1035 0F84A7F9 		je	.L350
 5628      FFFF
 5629              	.L353:
 5630              	.LBB200:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 5631              		.loc 1 2414 16 view .LVU1561
 5632 103b 31DB     		xorl	%ebx, %ebx
 5633 103d 0F1F00   		.p2align 4,,10
 5634              		.p2align 3
 5635              	.L352:
 5636              	.LVL609:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 5637              		.loc 1 2414 16 view .LVU1562
 5638              	.LBE200:
 5639              	.LBB201:
 5640              	.LBB202:
1957:fltk-1.3.4-1/png/pngread.c **** 
 5641              		.loc 1 1957 7 is_stmt 1 view .LVU1563
 5642 1040 4883EC08 		subq	$8, %rsp
 5643              		.cfi_def_cfa_offset 168
 5644              	.LVL610:
1957:fltk-1.3.4-1/png/pngread.c **** 
 5645              		.loc 1 1957 7 is_stmt 0 view .LVU1564
 5646 1044 89D9     		movl	%ebx, %ecx
 5647 1046 89DE     		movl	%ebx, %esi
 5648 1048 4189D8   		movl	%ebx, %r8d
 5649 104b 6A03     		pushq	$3
 5650              		.cfi_def_cfa_offset 176
 5651 104d 89DA     		movl	%ebx, %edx
 5652 104f 41B9FF00 		movl	$255, %r9d
 5652      0000
 5653 1055 4889EF   		movq	%rbp, %rdi
1956:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_FILE);
 5654              		.loc 1 1956 21 view .LVU1565
 5655 1058 83C301   		addl	$1, %ebx
 5656              	.LVL611:
1957:fltk-1.3.4-1/png/pngread.c **** 
 5657              		.loc 1 1957 7 view .LVU1566
 5658 105b E8000000 		call	png_create_colormap_entry
 5658      00
 5659              	.LVL612:
1956:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_FILE);
 5660              		.loc 1 1956 21 is_stmt 1 view .LVU1567
1956:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_FILE);
 5661              		.loc 1 1956 14 view .LVU1568
1956:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_FILE);
 5662              		.loc 1 1956 4 is_stmt 0 view .LVU1569
 5663 1060 59       		popq	%rcx
 5664              		.cfi_def_cfa_offset 168
 5665 1061 5E       		popq	%rsi
 5666              		.cfi_def_cfa_offset 160
 5667              	.LVL613:
1956:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_FILE);
 5668              		.loc 1 1956 4 view .LVU1570
 5669 1062 81FB0001 		cmpl	$256, %ebx
 5669      0000
 5670 1068 75D6     		jne	.L352
 5671              	.LVL614:
1956:fltk-1.3.4-1/png/pngread.c ****       png_create_colormap_entry(display, i, i, i, i, 255, P_FILE);
 5672              		.loc 1 1956 4 view .LVU1571
 5673              	.LBE202:
 5674              	.LBE201:
2535:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
 5675              		.loc 1 2535 16 is_stmt 1 view .LVU1572
2535:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
 5676              		.loc 1 2535 19 is_stmt 0 view .LVU1573
 5677 106a 488B0424 		movq	(%rsp), %rax
 5678 106e 80B87702 		cmpb	$6, 631(%rax)
 5678      000006
 5679 1075 0F84B500 		je	.L356
 5679      0000
2535:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0)
 5680              		.loc 1 2535 68 view .LVU1574
 5681 107b 488B0424 		movq	(%rsp), %rax
 5682 107f 6683B870 		cmpw	$0, 624(%rax)
 5682      02000000 
 5683 1087 0F85A300 		jne	.L356
 5683      0000
 5684              	.LVL615:
2847:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
 5685              		.loc 1 2847 10 is_stmt 1 view .LVU1575
2847:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
 5686              		.loc 1 2847 13 is_stmt 0 view .LVU1576
 5687 108d 80B87802 		cmpb	$8, 632(%rax)
 5687      000008
 5688 1094 0F878E01 		ja	.L532
 5688      0000
 5689              	.L358:
2852:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "color map overflow (BAD internal error)");
 5690              		.loc 1 2852 27 view .LVU1577
 5691 109a 488B4424 		movq	24(%rsp), %rax
 5691      18
 5692 109f 81781CFF 		cmpl	$255, 28(%rax)
 5692      000000
 5693 10a6 0F868A01 		jbe	.L394
 5693      0000
2855:fltk-1.3.4-1/png/pngread.c **** 
 5694              		.loc 1 2855 4 is_stmt 1 view .LVU1578
2855:fltk-1.3.4-1/png/pngread.c **** 
 5695              		.loc 1 2855 28 is_stmt 0 view .LVU1579
 5696 10ac 488B4424 		movq	24(%rsp), %rax
 5696      18
 5697 10b1 4531ED   		xorl	%r13d, %r13d
 5698 10b4 C7401C00 		movl	$256, 28(%rax)
 5698      010000
2858:fltk-1.3.4-1/png/pngread.c ****    {
 5699              		.loc 1 2858 4 is_stmt 1 view .LVU1580
 5700 10bb E9B0F1FF 		jmp	.L395
 5700      FF
 5701              	.LVL616:
 5702              	.L373:
 5703              	.LBB203:
 5704              	.LBB189:
2729:fltk-1.3.4-1/png/pngread.c **** 
 5705              		.loc 1 2729 22 view .LVU1581
2731:fltk-1.3.4-1/png/pngread.c ****                      c.red = (png_uint_16)back_r;
 5706              		.loc 1 2731 22 view .LVU1582
2732:fltk-1.3.4-1/png/pngread.c ****                      c.gray = c.green = (png_uint_16)back_g;
 5707              		.loc 1 2732 30 is_stmt 0 view .LVU1583
 5708 10c0 0FB74424 		movzwl	8(%rsp), %eax
 5708      08
2736:fltk-1.3.4-1/png/pngread.c ****                         PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5709              		.loc 1 2736 22 view .LVU1584
 5710 10c5 488B3C24 		movq	(%rsp), %rdi
 5711 10c9 488D7424 		leaq	78(%rsp), %rsi
 5711      4E
 5712 10ce 31C9     		xorl	%ecx, %ecx
 5713 10d0 4531C0   		xorl	%r8d, %r8d
 5714 10d3 BA010000 		movl	$1, %edx
 5714      00
2731:fltk-1.3.4-1/png/pngread.c ****                      c.red = (png_uint_16)back_r;
 5715              		.loc 1 2731 30 view .LVU1585
 5716 10d8 C644244E 		movb	$0, 78(%rsp)
 5716      00
2732:fltk-1.3.4-1/png/pngread.c ****                      c.gray = c.green = (png_uint_16)back_g;
 5717              		.loc 1 2732 22 is_stmt 1 view .LVU1586
2740:fltk-1.3.4-1/png/pngread.c ****                   }
 5718              		.loc 1 2740 40 is_stmt 0 view .LVU1587
 5719 10dd 41BD0300 		movl	$3, %r13d
 5719      0000
2732:fltk-1.3.4-1/png/pngread.c ****                      c.gray = c.green = (png_uint_16)back_g;
 5720              		.loc 1 2732 30 view .LVU1588
 5721 10e3 66894424 		movw	%ax, 80(%rsp)
 5721      50
2733:fltk-1.3.4-1/png/pngread.c ****                      c.blue = (png_uint_16)back_b;
 5722              		.loc 1 2733 22 is_stmt 1 view .LVU1589
2734:fltk-1.3.4-1/png/pngread.c **** 
 5723              		.loc 1 2734 31 is_stmt 0 view .LVU1590
 5724 10e8 0FB74424 		movzwl	20(%rsp), %eax
 5724      14
2733:fltk-1.3.4-1/png/pngread.c ****                      c.blue = (png_uint_16)back_b;
 5725              		.loc 1 2733 39 view .LVU1591
 5726 10ed 6644897C 		movw	%r15w, 82(%rsp)
 5726      2452
2733:fltk-1.3.4-1/png/pngread.c ****                      c.blue = (png_uint_16)back_b;
 5727              		.loc 1 2733 29 view .LVU1592
 5728 10f3 6644897C 		movw	%r15w, 86(%rsp)
 5728      2456
2734:fltk-1.3.4-1/png/pngread.c **** 
 5729              		.loc 1 2734 22 is_stmt 1 view .LVU1593
2734:fltk-1.3.4-1/png/pngread.c **** 
 5730              		.loc 1 2734 31 is_stmt 0 view .LVU1594
 5731 10f9 66894424 		movw	%ax, 84(%rsp)
 5731      54
2736:fltk-1.3.4-1/png/pngread.c ****                         PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
 5732              		.loc 1 2736 22 is_stmt 1 view .LVU1595
 5733 10fe E8000000 		call	png_set_background_fixed@PLT
 5733      00
 5734              	.LVL617:
2740:fltk-1.3.4-1/png/pngread.c ****                   }
 5735              		.loc 1 2740 22 view .LVU1596
2740:fltk-1.3.4-1/png/pngread.c ****                   }
 5736              		.loc 1 2740 22 is_stmt 0 view .LVU1597
 5737              	.LBE189:
 5738              	.LBE203:
2827:fltk-1.3.4-1/png/pngread.c ****    }
 5739              		.loc 1 2827 10 is_stmt 1 view .LVU1598
2831:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) == 0)
 5740              		.loc 1 2831 4 view .LVU1599
 5741              	.LBB204:
2668:fltk-1.3.4-1/png/pngread.c **** 
 5742              		.loc 1 2668 32 is_stmt 0 view .LVU1600
 5743 1103 8B5C242C 		movl	44(%rsp), %ebx
 5744              	.LBE204:
2077:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 back_r, back_g, back_b;
 5745              		.loc 1 2077 17 view .LVU1601
 5746 1107 C744242C 		movl	$256, 44(%rsp)
 5746      00010000 
 5747              	.LVL618:
2077:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 back_r, back_g, back_b;
 5748              		.loc 1 2077 17 view .LVU1602
 5749 110f E9DCF0FF 		jmp	.L326
 5749      FF
 5750              	.LVL619:
 5751              	.L522:
2522:fltk-1.3.4-1/png/pngread.c ****                   png_ptr->num_trans > 0) &&
 5752              		.loc 1 2522 69 discriminator 1 view .LVU1603
 5753 1114 488B0424 		movq	(%rsp), %rax
 5754 1118 6683B870 		cmpw	$0, 624(%rax)
 5754      02000000 
 5755 1120 0F859FF8 		jne	.L349
 5755      FFFF
 5756 1126 E9B7F8FF 		jmp	.L350
 5756      FF
 5757              	.LVL620:
 5758 112b 0F1F4400 		.p2align 4,,10
 5758      00
 5759              		.p2align 3
 5760              	.L356:
 5761              	.LBB205:
2553:fltk-1.3.4-1/png/pngread.c ****                         gray = png_sRGB_table[gray]; /* now P_LINEAR */
 5762              		.loc 1 2553 22 is_stmt 1 view .LVU1604
 5763 1130 4489FF   		movl	%r15d, %edi
2553:fltk-1.3.4-1/png/pngread.c ****                         gray = png_sRGB_table[gray]; /* now P_LINEAR */
 5764              		.loc 1 2553 25 is_stmt 0 view .LVU1605
 5765 1133 4183FE01 		cmpl	$1, %r14d
 5766 1137 750E     		jne	.L359
 5767              	.LVL621:
2554:fltk-1.3.4-1/png/pngread.c **** 
 5768              		.loc 1 2554 25 is_stmt 1 view .LVU1606
2554:fltk-1.3.4-1/png/pngread.c **** 
 5769              		.loc 1 2554 46 is_stmt 0 view .LVU1607
 5770 1139 4489F8   		movl	%r15d, %eax
2554:fltk-1.3.4-1/png/pngread.c **** 
 5771              		.loc 1 2554 30 view .LVU1608
 5772 113c 488D1500 		leaq	png_sRGB_table(%rip), %rdx
 5772      000000
 5773 1143 0FB73C42 		movzwl	(%rdx,%rax,2), %edi
 5774              	.LVL622:
 5775              	.L359:
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5776              		.loc 1 2556 22 is_stmt 1 view .LVU1609
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5777              		.loc 1 2556 29 is_stmt 0 view .LVU1610
 5778 1147 488B0424 		movq	(%rsp), %rax
 5779 114b 8BB0D804 		movl	1240(%rax), %esi
 5779      0000
 5780 1151 E8000000 		call	png_gamma_16bit_correct@PLT
 5780      00
 5781              	.LVL623:
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5782              		.loc 1 2562 22 view .LVU1611
 5783 1156 4883EC08 		subq	$8, %rsp
 5784              		.cfi_def_cfa_offset 168
 5785              	.LVL624:
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5786              		.loc 1 2562 22 view .LVU1612
 5787 115a 4489FA   		movl	%r15d, %edx
 5788 115d 4589F8   		movl	%r15d, %r8d
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5789              		.loc 1 2556 29 view .LVU1613
 5790 1160 0FB7C0   		movzwl	%ax, %eax
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5791              		.loc 1 2562 22 view .LVU1614
 5792 1163 4156     		pushq	%r14
 5793              		.cfi_def_cfa_offset 176
 5794 1165 4489F9   		movl	%r15d, %ecx
 5795 1168 4531C9   		xorl	%r9d, %r9d
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5796              		.loc 1 2556 29 view .LVU1615
 5797 116b 4189C4   		movl	%eax, %r12d
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5798              		.loc 1 2562 22 view .LVU1616
 5799 116e 4889EF   		movq	%rbp, %rdi
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5800              		.loc 1 2556 29 view .LVU1617
 5801 1171 41C1E408 		sall	$8, %r12d
 5802 1175 4129C4   		subl	%eax, %r12d
 5803 1178 4181C47F 		addl	$32895, %r12d
 5803      800000
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5804              		.loc 1 2556 27 view .LVU1618
 5805 117f 41C1EC10 		shrl	$16, %r12d
 5806              	.LVL625:
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5807              		.loc 1 2562 22 is_stmt 1 view .LVU1619
 5808 1183 4489E6   		movl	%r12d, %esi
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5809              		.loc 1 2556 27 is_stmt 0 view .LVU1620
 5810 1186 4589E7   		movl	%r12d, %r15d
 5811              	.LVL626:
2556:fltk-1.3.4-1/png/pngread.c ****                         png_ptr->colorspace.gamma)); /* now P_FILE */
 5812              		.loc 1 2556 27 view .LVU1621
 5813 1189 41BC0300 		movl	$3, %r12d
 5813      0000
 5814              	.LVL627:
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5815              		.loc 1 2562 22 view .LVU1622
 5816 118f E8000000 		call	png_create_colormap_entry
 5816      00
 5817              	.LVL628:
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5818              		.loc 1 2562 22 view .LVU1623
 5819 1194 58       		popq	%rax
 5820              		.cfi_def_cfa_offset 168
 5821 1195 5A       		popq	%rdx
 5822              		.cfi_def_cfa_offset 160
 5823              	.LVL629:
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5824              		.loc 1 2562 22 view .LVU1624
 5825 1196 E98FFDFF 		jmp	.L360
 5825      FF
 5826              	.LVL630:
 5827              	.L518:
2562:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, output_encoding);
 5828              		.loc 1 2562 22 view .LVU1625
 5829              	.LBE205:
 5830              	.LBB206:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 5831              		.loc 1 2414 16 view .LVU1626
 5832 119b 4883EC08 		subq	$8, %rsp
 5833              		.cfi_def_cfa_offset 168
 5834              	.LVL631:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 5835              		.loc 1 2414 16 view .LVU1627
 5836 119f 41B9FFFF 		movl	$65535, %r9d
 5836      0000
 5837 11a5 4489F9   		movl	%r15d, %ecx
 5838 11a8 4889EF   		movq	%rbp, %rdi
 5839 11ab 6A02     		pushq	$2
 5840              		.cfi_def_cfa_offset 176
 5841 11ad 448B4424 		movl	36(%rsp), %r8d
 5841      24
 5842 11b2 BEE70000 		movl	$231, %esi
 5842      00
 5843 11b7 8B542418 		movl	24(%rsp), %edx
 5844 11bb E8000000 		call	png_create_colormap_entry
 5844      00
 5845              	.LVL632:
2425:fltk-1.3.4-1/png/pngread.c ****                {
 5846              		.loc 1 2425 16 is_stmt 1 view .LVU1628
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 5847              		.loc 1 2414 16 is_stmt 0 view .LVU1629
 5848 11c0 58       		popq	%rax
 5849              		.cfi_def_cfa_offset 168
 5850 11c1 5A       		popq	%rdx
 5851              		.cfi_def_cfa_offset 160
 5852              	.LVL633:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 5853              		.loc 1 2414 16 view .LVU1630
 5854 11c2 E940F5FF 		jmp	.L404
 5854      FF
 5855              	.LVL634:
 5856              	.L530:
2414:fltk-1.3.4-1/png/pngread.c ****                   output_encoding == P_LINEAR ? 65535U : 255U, output_encoding);
 5857              		.loc 1 2414 16 view .LVU1631
 5858              	.LBE206:
 5859              	.LBB207:
2568:fltk-1.3.4-1/png/pngread.c **** 
 5860              		.loc 1 2568 22 is_stmt 1 view .LVU1632
2568:fltk-1.3.4-1/png/pngread.c **** 
 5861              		.loc 1 2568 29 is_stmt 0 view .LVU1633
 5862 11c7 4489F8   		movl	%r15d, %eax
 5863 11ca 488D0D00 		leaq	png_sRGB_delta(%rip), %rcx
 5863      000000
2572:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
 5864              		.loc 1 2572 22 view .LVU1634
 5865 11d1 4589F8   		movl	%r15d, %r8d
 5866 11d4 4531C9   		xorl	%r9d, %r9d
2568:fltk-1.3.4-1/png/pngread.c **** 
 5867              		.loc 1 2568 29 view .LVU1635
 5868 11d7 C1E008   		sall	$8, %eax
2572:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
 5869              		.loc 1 2572 22 view .LVU1636
 5870 11da 4883EC08 		subq	$8, %rsp
 5871              		.cfi_def_cfa_offset 168
 5872              	.LVL635:
2572:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
 5873              		.loc 1 2572 22 view .LVU1637
 5874 11de 4889EF   		movq	%rbp, %rdi
2568:fltk-1.3.4-1/png/pngread.c **** 
 5875              		.loc 1 2568 29 view .LVU1638
 5876 11e1 4429F8   		subl	%r15d, %eax
2572:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
 5877              		.loc 1 2572 22 view .LVU1639
 5878 11e4 6A02     		pushq	$2
 5879              		.cfi_def_cfa_offset 176
2568:fltk-1.3.4-1/png/pngread.c **** 
 5880              		.loc 1 2568 29 view .LVU1640
 5881 11e6 89C2     		movl	%eax, %edx
 5882 11e8 25FF7F00 		andl	$32767, %eax
 5882      00
 5883 11ed C1EA0F   		shrl	$15, %edx
 5884 11f0 0FB60C11 		movzbl	(%rcx,%rdx), %ecx
 5885 11f4 0FAFC1   		imull	%ecx, %eax
 5886 11f7 488D0D00 		leaq	png_sRGB_base(%rip), %rcx
 5886      000000
 5887 11fe 440FB734 		movzwl	(%rcx,%rdx,2), %r14d
 5887      51
2572:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
 5888              		.loc 1 2572 22 view .LVU1641
 5889 1203 4489F9   		movl	%r15d, %ecx
 5890 1206 4489FA   		movl	%r15d, %edx
2568:fltk-1.3.4-1/png/pngread.c **** 
 5891              		.loc 1 2568 29 view .LVU1642
 5892 1209 C1E80C   		shrl	$12, %eax
 5893 120c 4401F0   		addl	%r14d, %eax
 5894 120f 0FB6C4   		movzbl	%ah, %eax
 5895 1212 4189C6   		movl	%eax, %r14d
 5896              	.LVL636:
2572:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
 5897              		.loc 1 2572 22 is_stmt 1 view .LVU1643
 5898 1215 89C6     		movl	%eax, %esi
 5899 1217 E8000000 		call	png_create_colormap_entry
 5899      00
 5900              	.LVL637:
2572:fltk-1.3.4-1/png/pngread.c ****                         back_g, 0/*unused*/, P_LINEAR);
 5901              		.loc 1 2572 22 is_stmt 0 view .LVU1644
 5902 121c 415B     		popq	%r11
 5903              		.cfi_def_cfa_offset 168
 5904 121e 415F     		popq	%r15
 5905              		.cfi_def_cfa_offset 160
 5906              	.LVL638:
2568:fltk-1.3.4-1/png/pngread.c **** 
 5907              		.loc 1 2568 27 view .LVU1645
 5908 1220 4589F7   		movl	%r14d, %r15d
 5909 1223 E902FDFF 		jmp	.L360
 5909      FF
 5910              	.LVL639:
 5911              	.L532:
2568:fltk-1.3.4-1/png/pngread.c **** 
 5912              		.loc 1 2568 27 view .LVU1646
 5913              	.LBE207:
2848:fltk-1.3.4-1/png/pngread.c ****          break;
 5914              		.loc 1 2848 13 is_stmt 1 view .LVU1647
 5915 1228 488B3C24 		movq	(%rsp), %rdi
 5916 122c E8000000 		call	png_set_scale_16@PLT
 5916      00
 5917              	.LVL640:
2849:fltk-1.3.4-1/png/pngread.c ****    }
 5918              		.loc 1 2849 10 view .LVU1648
2852:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "color map overflow (BAD internal error)");
 5919              		.loc 1 2852 4 view .LVU1649
 5920 1231 E964FEFF 		jmp	.L358
 5920      FF
 5921              	.LVL641:
 5922              	.L394:
2853:fltk-1.3.4-1/png/pngread.c **** 
 5923              		.loc 1 2853 7 view .LVU1650
 5924 1236 488B3C24 		movq	(%rsp), %rdi
 5925 123a 488D3500 		leaq	.LC23(%rip), %rsi
 5925      000000
 5926 1241 E8000000 		call	png_error@PLT
 5926      00
 5927              	.LVL642:
 5928              	.L531:
2838:fltk-1.3.4-1/png/pngread.c ****          break;
 5929              		.loc 1 2838 10 view .LVU1651
 5930 1246 488B3C24 		movq	(%rsp), %rdi
 5931 124a 488D3500 		leaq	.LC22(%rip), %rsi
 5931      000000
 5932 1251 E8000000 		call	png_error@PLT
 5932      00
 5933              	.LVL643:
 5934              	.L505:
 5935              		.loc 1 2896 1 is_stmt 0 view .LVU1652
 5936 1256 E8000000 		call	__stack_chk_fail@PLT
 5936      00
 5937              	.LVL644:
 5938              	.L506:
 5939              	.LBB208:
2161:fltk-1.3.4-1/png/pngread.c **** 
 5940              		.loc 1 2161 16 is_stmt 1 view .LVU1653
 5941 125b 488B3C24 		movq	(%rsp), %rdi
 5942 125f 488D3500 		leaq	.LC10(%rip), %rsi
 5942      000000
 5943 1266 E8000000 		call	png_error@PLT
 5943      00
 5944              	.LVL645:
 5945              	.L504:
2161:fltk-1.3.4-1/png/pngread.c **** 
 5946              		.loc 1 2161 16 is_stmt 0 view .LVU1654
 5947              	.LBE208:
2751:fltk-1.3.4-1/png/pngread.c **** 
 5948              		.loc 1 2751 19 is_stmt 1 view .LVU1655
 5949 126b 488B3C24 		movq	(%rsp), %rdi
 5950 126f 488D3500 		leaq	.LC19(%rip), %rsi
 5950      000000
 5951 1276 E8000000 		call	png_error@PLT
 5951      00
 5952              	.LVL646:
 5953              	.L502:
2096:fltk-1.3.4-1/png/pngread.c ****             "a background color must be supplied to remove alpha/transparency");
 5954              		.loc 1 2096 10 view .LVU1656
 5955 127b 488B3C24 		movq	(%rsp), %rdi
 5956              	.LVL647:
2096:fltk-1.3.4-1/png/pngread.c ****             "a background color must be supplied to remove alpha/transparency");
 5957              		.loc 1 2096 10 is_stmt 0 view .LVU1657
 5958 127f 488D3500 		leaq	.LC9(%rip), %rsi
 5958      000000
 5959 1286 E8000000 		call	png_error@PLT
 5959      00
 5960              	.LVL648:
 5961              	.L517:
 5962              	.LBB209:
2400:fltk-1.3.4-1/png/pngread.c **** 
 5963              		.loc 1 2400 19 is_stmt 1 view .LVU1658
 5964 128b 488B3C24 		movq	(%rsp), %rdi
 5965 128f 488D3500 		leaq	.LC14(%rip), %rsi
 5965      000000
 5966 1296 E8000000 		call	png_error@PLT
 5966      00
 5967              	.LVL649:
 5968              	.L527:
2400:fltk-1.3.4-1/png/pngread.c **** 
 5969              		.loc 1 2400 19 is_stmt 0 view .LVU1659
 5970              	.LBE209:
 5971              	.LBB210:
2666:fltk-1.3.4-1/png/pngread.c **** 
 5972              		.loc 1 2666 22 is_stmt 1 view .LVU1660
 5973 129b 488B3C24 		movq	(%rsp), %rdi
 5974 129f 488D3500 		leaq	.LC18(%rip), %rsi
 5974      000000
 5975 12a6 E8000000 		call	png_error@PLT
 5975      00
 5976              	.LVL650:
 5977              	.L519:
2666:fltk-1.3.4-1/png/pngread.c **** 
 5978              		.loc 1 2666 22 is_stmt 0 view .LVU1661
 5979              	.LBE210:
2240:fltk-1.3.4-1/png/pngread.c **** 
 5980              		.loc 1 2240 16 is_stmt 1 view .LVU1662
 5981 12ab 488B3C24 		movq	(%rsp), %rdi
 5982 12af 488D3500 		leaq	.LC11(%rip), %rsi
 5982      000000
 5983 12b6 E8000000 		call	png_error@PLT
 5983      00
 5984              	.LVL651:
 5985              	.L511:
2332:fltk-1.3.4-1/png/pngread.c **** 
 5986              		.loc 1 2332 16 view .LVU1663
 5987 12bb 488B3C24 		movq	(%rsp), %rdi
 5988 12bf 488D3500 		leaq	.LC12(%rip), %rsi
 5988      000000
 5989 12c6 E8000000 		call	png_error@PLT
 5989      00
 5990              	.LVL652:
 5991              	.L525:
 5992              	.LBB211:
2366:fltk-1.3.4-1/png/pngread.c **** 
 5993              		.loc 1 2366 19 view .LVU1664
 5994 12cb 488B3C24 		movq	(%rsp), %rdi
 5995 12cf 488D3500 		leaq	.LC13(%rip), %rsi
 5995      000000
 5996 12d6 E8000000 		call	png_error@PLT
 5996      00
 5997              	.LVL653:
 5998              	.L524:
2366:fltk-1.3.4-1/png/pngread.c **** 
 5999              		.loc 1 2366 19 is_stmt 0 view .LVU1665
 6000              	.LBE211:
 6001              	.LBB212:
2617:fltk-1.3.4-1/png/pngread.c **** 
 6002              		.loc 1 2617 22 is_stmt 1 view .LVU1666
 6003 12db 488B3C24 		movq	(%rsp), %rdi
 6004 12df 488D3500 		leaq	.LC17(%rip), %rsi
 6004      000000
 6005 12e6 E8000000 		call	png_error@PLT
 6005      00
 6006              	.LVL654:
 6007              	.L380:
2617:fltk-1.3.4-1/png/pngread.c **** 
 6008              		.loc 1 2617 22 is_stmt 0 view .LVU1667
 6009              	.LBE212:
 6010              	.LBB213:
2782:fltk-1.3.4-1/png/pngread.c **** 
 6011              		.loc 1 2782 16 is_stmt 1 view .LVU1668
 6012 12eb 488B3C24 		movq	(%rsp), %rdi
 6013              	.LVL655:
2782:fltk-1.3.4-1/png/pngread.c **** 
 6014              		.loc 1 2782 16 is_stmt 0 view .LVU1669
 6015 12ef 488D3500 		leaq	.LC20(%rip), %rsi
 6015      000000
 6016 12f6 E8000000 		call	png_error@PLT
 6016      00
 6017              	.LVL656:
 6018              	.L529:
2782:fltk-1.3.4-1/png/pngread.c **** 
 6019              		.loc 1 2782 16 view .LVU1670
 6020              	.LBE213:
2498:fltk-1.3.4-1/png/pngread.c **** 
 6021              		.loc 1 2498 19 is_stmt 1 view .LVU1671
 6022 12fb 488B3C24 		movq	(%rsp), %rdi
 6023 12ff 488D3500 		leaq	.LC15(%rip), %rsi
 6023      000000
 6024 1306 E8000000 		call	png_error@PLT
 6024      00
 6025              	.LVL657:
 6026              		.cfi_endproc
 6027              	.LFE72:
 6029              		.section	.text.png_create_read_struct_2,"ax",@progbits
 6030              		.p2align 4
 6031              		.globl	png_create_read_struct_2
 6033              	png_create_read_struct_2:
 6034              	.LVL658:
 6035              	.LFB42:
  44:fltk-1.3.4-1/png/pngread.c ****    png_structp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 6036              		.loc 1 44 1 view -0
 6037              		.cfi_startproc
  44:fltk-1.3.4-1/png/pngread.c ****    png_structp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 6038              		.loc 1 44 1 is_stmt 0 view .LVU1673
 6039 0000 F30F1EFA 		endbr64
  45:fltk-1.3.4-1/png/pngread.c ****       error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
 6040              		.loc 1 45 4 is_stmt 1 view .LVU1674
  44:fltk-1.3.4-1/png/pngread.c ****    png_structp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 6041              		.loc 1 44 1 is_stmt 0 view .LVU1675
 6042 0004 4154     		pushq	%r12
 6043              		.cfi_def_cfa_offset 16
 6044              		.cfi_offset 12, -16
  45:fltk-1.3.4-1/png/pngread.c ****       error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
 6045              		.loc 1 45 26 view .LVU1676
 6046 0006 4883EC08 		subq	$8, %rsp
 6047              		.cfi_def_cfa_offset 24
 6048 000a FF742418 		pushq	24(%rsp)
 6049              		.cfi_def_cfa_offset 32
 6050 000e E8000000 		call	png_create_png_struct@PLT
 6050      00
 6051              	.LVL659:
  49:fltk-1.3.4-1/png/pngread.c ****    {
 6052              		.loc 1 49 7 view .LVU1677
 6053 0013 5A       		popq	%rdx
 6054              		.cfi_def_cfa_offset 24
 6055 0014 59       		popq	%rcx
 6056              		.cfi_def_cfa_offset 16
  45:fltk-1.3.4-1/png/pngread.c ****       error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
 6057              		.loc 1 45 26 view .LVU1678
 6058 0015 4989C4   		movq	%rax, %r12
 6059              	.LVL660:
  49:fltk-1.3.4-1/png/pngread.c ****    {
 6060              		.loc 1 49 4 is_stmt 1 view .LVU1679
  49:fltk-1.3.4-1/png/pngread.c ****    {
 6061              		.loc 1 49 7 is_stmt 0 view .LVU1680
 6062 0018 4885C0   		testq	%rax, %rax
 6063 001b 742A     		je	.L533
  51:fltk-1.3.4-1/png/pngread.c **** 
 6064              		.loc 1 51 7 is_stmt 1 view .LVU1681
  67:fltk-1.3.4-1/png/pngread.c **** #        endif
 6065              		.loc 1 67 28 is_stmt 0 view .LVU1682
 6066 001d 81883001 		orl	$3145728, 304(%rax)
 6066      00000000 
 6066      3000
  75:fltk-1.3.4-1/png/pngread.c ****    }
 6067              		.loc 1 75 7 view .LVU1683
 6068 0027 31D2     		xorl	%edx, %edx
 6069 0029 31F6     		xorl	%esi, %esi
 6070 002b 4889C7   		movq	%rax, %rdi
  51:fltk-1.3.4-1/png/pngread.c **** 
 6071              		.loc 1 51 21 view .LVU1684
 6072 002e C7802C01 		movl	$32768, 300(%rax)
 6072      00000080 
 6072      0000
  57:fltk-1.3.4-1/png/pngread.c **** #     endif
 6073              		.loc 1 57 10 is_stmt 1 view .LVU1685
  57:fltk-1.3.4-1/png/pngread.c **** #     endif
 6074              		.loc 1 57 34 is_stmt 0 view .LVU1686
 6075 0038 C780A804 		movl	$8192, 1192(%rax)
 6075      00000020 
 6075      0000
  61:fltk-1.3.4-1/png/pngread.c **** 
 6076              		.loc 1 61 10 is_stmt 1 view .LVU1687
  67:fltk-1.3.4-1/png/pngread.c **** #        endif
 6077              		.loc 1 67 13 view .LVU1688
  75:fltk-1.3.4-1/png/pngread.c ****    }
 6078              		.loc 1 75 7 view .LVU1689
 6079 0042 E8000000 		call	png_set_read_fn@PLT
 6079      00
 6080              	.LVL661:
  78:fltk-1.3.4-1/png/pngread.c **** }
 6081              		.loc 1 78 4 view .LVU1690
 6082              	.L533:
  79:fltk-1.3.4-1/png/pngread.c **** 
 6083              		.loc 1 79 1 is_stmt 0 view .LVU1691
 6084 0047 4C89E0   		movq	%r12, %rax
 6085 004a 415C     		popq	%r12
 6086              		.cfi_def_cfa_offset 8
 6087              	.LVL662:
  79:fltk-1.3.4-1/png/pngread.c **** 
 6088              		.loc 1 79 1 view .LVU1692
 6089 004c C3       		ret
 6090              		.cfi_endproc
 6091              	.LFE42:
 6093              		.section	.text.png_create_read_struct,"ax",@progbits
 6094              		.p2align 4
 6095              		.globl	png_create_read_struct
 6097              	png_create_read_struct:
 6098              	.LVL663:
 6099              	.LFB41:
  28:fltk-1.3.4-1/png/pngread.c **** #ifndef PNG_USER_MEM_SUPPORTED
 6100              		.loc 1 28 1 is_stmt 1 view -0
 6101              		.cfi_startproc
  28:fltk-1.3.4-1/png/pngread.c **** #ifndef PNG_USER_MEM_SUPPORTED
 6102              		.loc 1 28 1 is_stmt 0 view .LVU1694
 6103 0000 F30F1EFA 		endbr64
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 6104              		.loc 1 33 4 is_stmt 1 view .LVU1695
  28:fltk-1.3.4-1/png/pngread.c **** #ifndef PNG_USER_MEM_SUPPORTED
 6105              		.loc 1 28 1 is_stmt 0 view .LVU1696
 6106 0004 4883EC10 		subq	$16, %rsp
 6107              		.cfi_def_cfa_offset 24
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 6108              		.loc 1 33 11 view .LVU1697
 6109 0008 4531C9   		xorl	%r9d, %r9d
 6110 000b 4531C0   		xorl	%r8d, %r8d
 6111 000e 6A00     		pushq	$0
 6112              		.cfi_def_cfa_offset 32
 6113 0010 E8000000 		call	png_create_read_struct_2
 6113      00
 6114              	.LVL664:
  35:fltk-1.3.4-1/png/pngread.c **** 
 6115              		.loc 1 35 1 view .LVU1698
 6116 0015 4883C418 		addq	$24, %rsp
 6117              		.cfi_def_cfa_offset 8
 6118 0019 C3       		ret
 6119              		.cfi_endproc
 6120              	.LFE41:
 6122              		.section	.text.png_read_info,"ax",@progbits
 6123              		.p2align 4
 6124              		.globl	png_read_info
 6126              	png_read_info:
 6127              	.LVL665:
 6128              	.LFB43:
  93:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 6129              		.loc 1 93 1 is_stmt 1 view -0
 6130              		.cfi_startproc
  93:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 6131              		.loc 1 93 1 is_stmt 0 view .LVU1700
 6132 0000 F30F1EFA 		endbr64
  95:fltk-1.3.4-1/png/pngread.c **** #endif
 6133              		.loc 1 95 4 is_stmt 1 view .LVU1701
  98:fltk-1.3.4-1/png/pngread.c **** 
 6134              		.loc 1 98 4 view .LVU1702
 100:fltk-1.3.4-1/png/pngread.c ****       return;
 6135              		.loc 1 100 4 view .LVU1703
 100:fltk-1.3.4-1/png/pngread.c ****       return;
 6136              		.loc 1 100 7 is_stmt 0 view .LVU1704
 6137 0004 4885FF   		testq	%rdi, %rdi
 6138 0007 740F     		je	.L541
 6139 0009 4885F6   		testq	%rsi, %rsi
 6140 000c 740A     		je	.L541
 6141 000e E9000000 		jmp	png_read_info.part.0
 6141      00
 6142              	.LVL666:
 6143              		.p2align 4,,10
 6144 0013 0F1F4400 		.p2align 3
 6144      00
 6145              	.L541:
 254:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 6146              		.loc 1 254 1 view .LVU1705
 6147 0018 C3       		ret
 6148              		.cfi_endproc
 6149              	.LFE43:
 6151              		.section	.rodata.png_read_update_info.str1.8,"aMS",@progbits,1
 6152              		.align 8
 6153              	.LC25:
 6154 0000 706E675F 		.string	"png_read_update_info/png_start_read_image: duplicate call"
 6154      72656164 
 6154      5F757064 
 6154      6174655F 
 6154      696E666F 
 6155              		.section	.text.png_read_update_info,"ax",@progbits
 6156              		.p2align 4
 6157              		.globl	png_read_update_info
 6159              	png_read_update_info:
 6160              	.LVL667:
 6161              	.LFB44:
 260:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_update_info");
 6162              		.loc 1 260 1 is_stmt 1 view -0
 6163              		.cfi_startproc
 260:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_update_info");
 6164              		.loc 1 260 1 is_stmt 0 view .LVU1707
 6165 0000 F30F1EFA 		endbr64
 261:fltk-1.3.4-1/png/pngread.c **** 
 6166              		.loc 1 261 4 is_stmt 1 view .LVU1708
 263:fltk-1.3.4-1/png/pngread.c ****    {
 6167              		.loc 1 263 4 view .LVU1709
 263:fltk-1.3.4-1/png/pngread.c ****    {
 6168              		.loc 1 263 7 is_stmt 0 view .LVU1710
 6169 0004 4885FF   		testq	%rdi, %rdi
 6170 0007 744F     		je	.L543
 260:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_update_info");
 6171              		.loc 1 260 1 view .LVU1711
 6172 0009 4154     		pushq	%r12
 6173              		.cfi_def_cfa_offset 16
 6174              		.cfi_offset 12, -16
 6175 000b 55       		pushq	%rbp
 6176              		.cfi_def_cfa_offset 24
 6177              		.cfi_offset 6, -24
 6178 000c 4889FD   		movq	%rdi, %rbp
 265:fltk-1.3.4-1/png/pngread.c ****       {
 6179              		.loc 1 265 7 is_stmt 1 view .LVU1712
 260:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_read_update_info");
 6180              		.loc 1 260 1 is_stmt 0 view .LVU1713
 6181 000f 4883EC08 		subq	$8, %rsp
 6182              		.cfi_def_cfa_offset 32
 265:fltk-1.3.4-1/png/pngread.c ****       {
 6183              		.loc 1 265 10 view .LVU1714
 6184 0013 F6873001 		testb	$64, 304(%rdi)
 6184      000040
 6185 001a 7524     		jne	.L545
 6186 001c 4989F4   		movq	%rsi, %r12
 6187              	.LVL668:
 6188              	.LBB216:
 6189              	.LBI216:
 259:fltk-1.3.4-1/png/pngread.c **** {
 6190              		.loc 1 259 1 is_stmt 1 view .LVU1715
 6191              	.LBB217:
 267:fltk-1.3.4-1/png/pngread.c **** 
 6192              		.loc 1 267 10 view .LVU1716
 6193 001f E8000000 		call	png_read_start_row@PLT
 6193      00
 6194              	.LVL669:
 270:fltk-1.3.4-1/png/pngread.c **** #        else
 6195              		.loc 1 270 13 view .LVU1717
 6196              	.LBE217:
 6197              	.LBE216:
 281:fltk-1.3.4-1/png/pngread.c **** 
 6198              		.loc 1 281 1 is_stmt 0 view .LVU1718
 6199 0024 4883C408 		addq	$8, %rsp
 6200              		.cfi_remember_state
 6201              		.cfi_def_cfa_offset 24
 6202              	.LBB220:
 6203              	.LBB218:
 270:fltk-1.3.4-1/png/pngread.c **** #        else
 6204              		.loc 1 270 13 view .LVU1719
 6205 0028 4C89E6   		movq	%r12, %rsi
 6206 002b 4889EF   		movq	%rbp, %rdi
 6207              	.LBE218:
 6208              	.LBE220:
 281:fltk-1.3.4-1/png/pngread.c **** 
 6209              		.loc 1 281 1 view .LVU1720
 6210 002e 5D       		popq	%rbp
 6211              		.cfi_restore 6
 6212              		.cfi_def_cfa_offset 16
 6213              	.LVL670:
 281:fltk-1.3.4-1/png/pngread.c **** 
 6214              		.loc 1 281 1 view .LVU1721
 6215 002f 415C     		popq	%r12
 6216              		.cfi_restore 12
 6217              		.cfi_def_cfa_offset 8
 6218              	.LVL671:
 6219              	.LBB221:
 6220              	.LBB219:
 270:fltk-1.3.4-1/png/pngread.c **** #        else
 6221              		.loc 1 270 13 view .LVU1722
 6222 0031 E9000000 		jmp	png_read_transform_info@PLT
 6222      00
 6223              	.LVL672:
 6224 0036 662E0F1F 		.p2align 4,,10
 6224      84000000 
 6224      0000
 6225              		.p2align 3
 6226              	.L545:
 6227              		.cfi_restore_state
 270:fltk-1.3.4-1/png/pngread.c **** #        else
 6228              		.loc 1 270 13 view .LVU1723
 6229              	.LBE219:
 6230              	.LBE221:
 278:fltk-1.3.4-1/png/pngread.c ****             "png_read_update_info/png_start_read_image: duplicate call");
 6231              		.loc 1 278 10 is_stmt 1 view .LVU1724
 281:fltk-1.3.4-1/png/pngread.c **** 
 6232              		.loc 1 281 1 is_stmt 0 view .LVU1725
 6233 0040 4883C408 		addq	$8, %rsp
 6234              		.cfi_def_cfa_offset 24
 278:fltk-1.3.4-1/png/pngread.c ****             "png_read_update_info/png_start_read_image: duplicate call");
 6235              		.loc 1 278 10 view .LVU1726
 6236 0044 488D3500 		leaq	.LC25(%rip), %rsi
 6236      000000
 6237              	.LVL673:
 281:fltk-1.3.4-1/png/pngread.c **** 
 6238              		.loc 1 281 1 view .LVU1727
 6239 004b 5D       		popq	%rbp
 6240              		.cfi_restore 6
 6241              		.cfi_def_cfa_offset 16
 6242 004c 415C     		popq	%r12
 6243              		.cfi_restore 12
 6244              		.cfi_def_cfa_offset 8
 278:fltk-1.3.4-1/png/pngread.c ****             "png_read_update_info/png_start_read_image: duplicate call");
 6245              		.loc 1 278 10 view .LVU1728
 6246 004e E9000000 		jmp	png_app_error@PLT
 6246      00
 6247              	.LVL674:
 6248              		.p2align 4,,10
 6249 0053 0F1F4400 		.p2align 3
 6249      00
 6250              	.L543:
 278:fltk-1.3.4-1/png/pngread.c ****             "png_read_update_info/png_start_read_image: duplicate call");
 6251              		.loc 1 278 10 view .LVU1729
 6252 0058 C3       		ret
 6253              		.cfi_endproc
 6254              	.LFE44:
 6256              		.section	.rodata.png_start_read_image.str1.8,"aMS",@progbits,1
 6257              		.align 8
 6258              	.LC26:
 6259 0000 706E675F 		.string	"png_start_read_image/png_read_update_info: duplicate call"
 6259      73746172 
 6259      745F7265 
 6259      61645F69 
 6259      6D616765 
 6260              		.section	.text.png_start_read_image,"ax",@progbits
 6261              		.p2align 4
 6262              		.globl	png_start_read_image
 6264              	png_start_read_image:
 6265              	.LVL675:
 6266              	.LFB45:
 291:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_start_read_image");
 6267              		.loc 1 291 1 is_stmt 1 view -0
 6268              		.cfi_startproc
 291:fltk-1.3.4-1/png/pngread.c ****    png_debug(1, "in png_start_read_image");
 6269              		.loc 1 291 1 is_stmt 0 view .LVU1731
 6270 0000 F30F1EFA 		endbr64
 292:fltk-1.3.4-1/png/pngread.c **** 
 6271              		.loc 1 292 4 is_stmt 1 view .LVU1732
 294:fltk-1.3.4-1/png/pngread.c ****    {
 6272              		.loc 1 294 4 view .LVU1733
 294:fltk-1.3.4-1/png/pngread.c ****    {
 6273              		.loc 1 294 7 is_stmt 0 view .LVU1734
 6274 0004 4885FF   		testq	%rdi, %rdi
 6275 0007 7427     		je	.L549
 296:fltk-1.3.4-1/png/pngread.c ****          png_read_start_row(png_ptr);
 6276              		.loc 1 296 7 is_stmt 1 view .LVU1735
 296:fltk-1.3.4-1/png/pngread.c ****          png_read_start_row(png_ptr);
 6277              		.loc 1 296 10 is_stmt 0 view .LVU1736
 6278 0009 F6873001 		testb	$64, 304(%rdi)
 6278      000040
 6279 0010 750E     		jne	.L551
 297:fltk-1.3.4-1/png/pngread.c **** 
 6280              		.loc 1 297 10 is_stmt 1 view .LVU1737
 6281 0012 E9000000 		jmp	png_read_start_row@PLT
 6281      00
 6282              	.LVL676:
 6283 0017 660F1F84 		.p2align 4,,10
 6283      00000000 
 6283      00
 6284              		.p2align 3
 6285              	.L551:
 301:fltk-1.3.4-1/png/pngread.c ****             "png_start_read_image/png_read_update_info: duplicate call");
 6286              		.loc 1 301 10 view .LVU1738
 6287 0020 488D3500 		leaq	.LC26(%rip), %rsi
 6287      000000
 6288 0027 E9000000 		jmp	png_app_error@PLT
 6288      00
 6289              	.LVL677:
 6290 002c 0F1F4000 		.p2align 4,,10
 6291              		.p2align 3
 6292              	.L549:
 304:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 6293              		.loc 1 304 1 is_stmt 0 view .LVU1739
 6294 0030 C3       		ret
 6295              		.cfi_endproc
 6296              	.LFE45:
 6298              		.section	.rodata.png_read_row.str1.8,"aMS",@progbits,1
 6299              		.align 8
 6300              	.LC27:
 6301 0000 496E7661 		.string	"Invalid attempt to read row data"
 6301      6C696420 
 6301      61747465 
 6301      6D707420 
 6301      746F2072 
 6302              		.section	.rodata.png_read_row.str1.1,"aMS",@progbits,1
 6303              	.LC28:
 6304 0000 62616420 		.string	"bad adaptive filter value"
 6304      61646170 
 6304      74697665 
 6304      2066696C 
 6304      74657220 
 6305              	.LC29:
 6306 001a 73657175 		.string	"sequential row overflow"
 6306      656E7469 
 6306      616C2072 
 6306      6F77206F 
 6306      76657266 
 6307              		.section	.rodata.png_read_row.str1.8
 6308 0021 00000000 		.align 8
 6308      000000
 6309              	.LC30:
 6310 0028 696E7465 		.string	"internal sequential row size calculation error"
 6310      726E616C 
 6310      20736571 
 6310      75656E74 
 6310      69616C20 
 6311              		.section	.text.png_read_row,"ax",@progbits
 6312              		.p2align 4
 6313              		.globl	png_read_row
 6315              	png_read_row:
 6316              	.LVL678:
 6317              	.LFB47:
 376:fltk-1.3.4-1/png/pngread.c ****    png_row_info row_info;
 6318              		.loc 1 376 1 is_stmt 1 view -0
 6319              		.cfi_startproc
 376:fltk-1.3.4-1/png/pngread.c ****    png_row_info row_info;
 6320              		.loc 1 376 1 is_stmt 0 view .LVU1741
 6321 0000 F30F1EFA 		endbr64
 6322 0004 4155     		pushq	%r13
 6323              		.cfi_def_cfa_offset 16
 6324              		.cfi_offset 13, -16
 6325 0006 4154     		pushq	%r12
 6326              		.cfi_def_cfa_offset 24
 6327              		.cfi_offset 12, -24
 6328 0008 55       		pushq	%rbp
 6329              		.cfi_def_cfa_offset 32
 6330              		.cfi_offset 6, -32
 6331 0009 4883EC20 		subq	$32, %rsp
 6332              		.cfi_def_cfa_offset 64
 376:fltk-1.3.4-1/png/pngread.c ****    png_row_info row_info;
 6333              		.loc 1 376 1 view .LVU1742
 6334 000d 64488B04 		movq	%fs:40, %rax
 6334      25280000 
 6334      00
 6335 0016 48894424 		movq	%rax, 24(%rsp)
 6335      18
 6336 001b 31C0     		xorl	%eax, %eax
 377:fltk-1.3.4-1/png/pngread.c **** 
 6337              		.loc 1 377 4 is_stmt 1 view .LVU1743
 379:fltk-1.3.4-1/png/pngread.c ****       return;
 6338              		.loc 1 379 4 view .LVU1744
 379:fltk-1.3.4-1/png/pngread.c ****       return;
 6339              		.loc 1 379 7 is_stmt 0 view .LVU1745
 6340 001d 4885FF   		testq	%rdi, %rdi
 6341 0020 0F84D201 		je	.L552
 6341      0000
 6342 0026 4889FD   		movq	%rdi, %rbp
 6343 0029 4989F5   		movq	%rsi, %r13
 6344 002c 4989D4   		movq	%rdx, %r12
 382:fltk-1.3.4-1/png/pngread.c ****        (unsigned long)png_ptr->row_number, png_ptr->pass);
 6345              		.loc 1 382 4 is_stmt 1 view .LVU1746
 388:fltk-1.3.4-1/png/pngread.c ****       png_read_start_row(png_ptr);
 6346              		.loc 1 388 4 view .LVU1747
 388:fltk-1.3.4-1/png/pngread.c ****       png_read_start_row(png_ptr);
 6347              		.loc 1 388 7 is_stmt 0 view .LVU1748
 6348 002f F6873001 		testb	$64, 304(%rdi)
 6348      000040
 6349 0036 0F841402 		je	.L654
 6349      0000
 6350              	.LVL679:
 6351              	.L554:
 392:fltk-1.3.4-1/png/pngread.c ****    row_info.color_type = png_ptr->color_type;
 6352              		.loc 1 392 4 is_stmt 1 view .LVU1749
 393:fltk-1.3.4-1/png/pngread.c ****    row_info.bit_depth = png_ptr->bit_depth;
 6353              		.loc 1 393 24 is_stmt 0 view .LVU1750
 6354 003c 0FB78577 		movzwl	631(%rbp), %eax
 6354      020000
 395:fltk-1.3.4-1/png/pngread.c ****    row_info.pixel_depth = png_ptr->pixel_depth;
 6355              		.loc 1 395 22 view .LVU1751
 6356 0043 0FB78D7A 		movzwl	634(%rbp), %ecx
 6356      020000
 392:fltk-1.3.4-1/png/pngread.c ****    row_info.color_type = png_ptr->color_type;
 6357              		.loc 1 392 28 view .LVU1752
 6358 004a 8B951002 		movl	528(%rbp), %edx
 6358      0000
 393:fltk-1.3.4-1/png/pngread.c ****    row_info.bit_depth = png_ptr->bit_depth;
 6359              		.loc 1 393 24 view .LVU1753
 6360 0050 66894424 		movw	%ax, 16(%rsp)
 6360      10
 396:fltk-1.3.4-1/png/pngread.c ****    row_info.rowbytes = PNG_ROWBYTES(row_info.pixel_depth, row_info.width);
 6361              		.loc 1 396 34 view .LVU1754
 6362 0055 0FB6857A 		movzbl	634(%rbp), %eax
 6362      020000
 395:fltk-1.3.4-1/png/pngread.c ****    row_info.pixel_depth = png_ptr->pixel_depth;
 6363              		.loc 1 395 22 view .LVU1755
 6364 005c 66C1C108 		rolw	$8, %cx
 6365 0060 66894C24 		movw	%cx, 18(%rsp)
 6365      12
 6366 0065 89D1     		movl	%edx, %ecx
 392:fltk-1.3.4-1/png/pngread.c ****    row_info.color_type = png_ptr->color_type;
 6367              		.loc 1 392 19 view .LVU1756
 6368 0067 891424   		movl	%edx, (%rsp)
 393:fltk-1.3.4-1/png/pngread.c ****    row_info.bit_depth = png_ptr->bit_depth;
 6369              		.loc 1 393 4 is_stmt 1 view .LVU1757
 394:fltk-1.3.4-1/png/pngread.c ****    row_info.channels = png_ptr->channels;
 6370              		.loc 1 394 4 view .LVU1758
 395:fltk-1.3.4-1/png/pngread.c ****    row_info.pixel_depth = png_ptr->pixel_depth;
 6371              		.loc 1 395 4 view .LVU1759
 396:fltk-1.3.4-1/png/pngread.c ****    row_info.rowbytes = PNG_ROWBYTES(row_info.pixel_depth, row_info.width);
 6372              		.loc 1 396 4 view .LVU1760
 397:fltk-1.3.4-1/png/pngread.c **** 
 6373              		.loc 1 397 4 view .LVU1761
 397:fltk-1.3.4-1/png/pngread.c **** 
 6374              		.loc 1 397 24 is_stmt 0 view .LVU1762
 6375 006a 3C07     		cmpb	$7, %al
 6376 006c 0F87AE01 		ja	.L655
 6376      0000
 397:fltk-1.3.4-1/png/pngread.c **** 
 6377              		.loc 1 397 24 discriminator 2 view .LVU1763
 6378 0072 480FAFC1 		imulq	%rcx, %rax
 6379 0076 4883C007 		addq	$7, %rax
 6380 007a 48C1E803 		shrq	$3, %rax
 6381              	.L556:
 448:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 6382              		.loc 1 448 7 discriminator 4 view .LVU1764
 6383 007e 80BD7402 		cmpb	$0, 628(%rbp)
 6383      000000
 397:fltk-1.3.4-1/png/pngread.c **** 
 6384              		.loc 1 397 22 discriminator 4 view .LVU1765
 6385 0085 48894424 		movq	%rax, 8(%rsp)
 6385      08
 400:fltk-1.3.4-1/png/pngread.c ****    {
 6386              		.loc 1 400 4 is_stmt 1 discriminator 4 view .LVU1766
 438:fltk-1.3.4-1/png/pngread.c **** #endif /* WARNINGS */
 6387              		.loc 1 438 4 discriminator 4 view .LVU1767
 448:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 6388              		.loc 1 448 4 discriminator 4 view .LVU1768
 448:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 6389              		.loc 1 448 7 is_stmt 0 discriminator 4 view .LVU1769
 6390 008a 743C     		je	.L557
 448:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 6391              		.loc 1 448 33 discriminator 1 view .LVU1770
 6392 008c F6853401 		testb	$2, 308(%rbp)
 6392      000002
 6393 0093 7433     		je	.L557
 6394 0095 80BD7502 		cmpb	$5, 629(%rbp)
 6394      000005
 400:fltk-1.3.4-1/png/pngread.c ****    {
 6395              		.loc 1 400 15 view .LVU1771
 6396 009c 8BB51402 		movl	532(%rbp), %esi
 6396      0000
 451:fltk-1.3.4-1/png/pngread.c ****       {
 6397              		.loc 1 451 7 is_stmt 1 view .LVU1772
 6398 00a2 7718     		ja	.L558
 6399 00a4 0FB69575 		movzbl	629(%rbp), %edx
 6399      020000
 6400 00ab 488D0D00 		leaq	.L560(%rip), %rcx
 6400      000000
 6401 00b2 48631491 		movslq	(%rcx,%rdx,4), %rdx
 6402 00b6 4801CA   		addq	%rcx, %rdx
 6403 00b9 3EFFE2   		notrack jmp	*%rdx
 6404              		.section	.rodata.png_read_row,"a",@progbits
 6405              		.align 4
 6406              		.align 4
 6407              	.L560:
 6408 0000 00000000 		.long	.L565-.L560
 6409 0004 00000000 		.long	.L564-.L560
 6410 0008 00000000 		.long	.L563-.L560
 6411 000c 00000000 		.long	.L562-.L560
 6412 0010 00000000 		.long	.L561-.L560
 6413 0014 00000000 		.long	.L559-.L560
 6414              		.section	.text.png_read_row
 6415              	.L558:
 520:fltk-1.3.4-1/png/pngread.c ****             {
 6416              		.loc 1 520 13 view .LVU1773
 520:fltk-1.3.4-1/png/pngread.c ****             {
 6417              		.loc 1 520 16 is_stmt 0 view .LVU1774
 6418 00bc 83E601   		andl	$1, %esi
 6419 00bf 0F84D802 		je	.L566
 6419      0000
 6420              		.p2align 4,,10
 6421 00c5 0F1F00   		.p2align 3
 6422              	.L557:
 530:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "Invalid attempt to read row data");
 6423              		.loc 1 530 4 is_stmt 1 view .LVU1775
 530:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "Invalid attempt to read row data");
 6424              		.loc 1 530 7 is_stmt 0 view .LVU1776
 6425 00c8 F6852C01 		testb	$4, 300(%rbp)
 6425      000004
 6426 00cf 0F84B203 		je	.L656
 6426      0000
 534:fltk-1.3.4-1/png/pngread.c **** 
 6427              		.loc 1 534 4 is_stmt 1 view .LVU1777
 6428 00d5 488BB528 		movq	552(%rbp), %rsi
 6428      020000
 6429 00dc 488D5001 		leaq	1(%rax), %rdx
 6430 00e0 4889EF   		movq	%rbp, %rdi
 6431 00e3 E8000000 		call	png_read_IDAT_data@PLT
 6431      00
 6432              	.LVL680:
 536:fltk-1.3.4-1/png/pngread.c ****    {
 6433              		.loc 1 536 4 view .LVU1778
 536:fltk-1.3.4-1/png/pngread.c ****    {
 6434              		.loc 1 536 15 is_stmt 0 view .LVU1779
 6435 00e8 488BB528 		movq	552(%rbp), %rsi
 6435      020000
 536:fltk-1.3.4-1/png/pngread.c ****    {
 6436              		.loc 1 536 24 view .LVU1780
 6437 00ef 440FB606 		movzbl	(%rsi), %r8d
 536:fltk-1.3.4-1/png/pngread.c ****    {
 6438              		.loc 1 536 7 view .LVU1781
 6439 00f3 4584C0   		testb	%r8b, %r8b
 6440 00f6 742B     		je	.L573
 538:fltk-1.3.4-1/png/pngread.c ****          png_read_filter_row(png_ptr, &row_info, png_ptr->row_buf + 1,
 6441              		.loc 1 538 7 is_stmt 1 view .LVU1782
 538:fltk-1.3.4-1/png/pngread.c ****          png_read_filter_row(png_ptr, &row_info, png_ptr->row_buf + 1,
 6442              		.loc 1 538 10 is_stmt 0 view .LVU1783
 6443 00f8 4180F804 		cmpb	$4, %r8b
 6444 00fc 0F879403 		ja	.L574
 6444      0000
 539:fltk-1.3.4-1/png/pngread.c ****             png_ptr->prev_row + 1, png_ptr->row_buf[0]);
 6445              		.loc 1 539 10 is_stmt 1 view .LVU1784
 540:fltk-1.3.4-1/png/pngread.c ****       else
 6446              		.loc 1 540 31 is_stmt 0 view .LVU1785
 6447 0102 488B8520 		movq	544(%rbp), %rax
 6447      020000
 539:fltk-1.3.4-1/png/pngread.c ****             png_ptr->prev_row + 1, png_ptr->row_buf[0]);
 6448              		.loc 1 539 10 view .LVU1786
 6449 0109 488D5601 		leaq	1(%rsi), %rdx
 6450 010d 4889EF   		movq	%rbp, %rdi
 6451 0110 4889E6   		movq	%rsp, %rsi
 540:fltk-1.3.4-1/png/pngread.c ****       else
 6452              		.loc 1 540 31 view .LVU1787
 6453 0113 488D4801 		leaq	1(%rax), %rcx
 539:fltk-1.3.4-1/png/pngread.c ****             png_ptr->prev_row + 1, png_ptr->row_buf[0]);
 6454              		.loc 1 539 10 view .LVU1788
 6455 0117 E8000000 		call	png_read_filter_row@PLT
 6455      00
 6456              	.LVL681:
 6457 011c 488BB528 		movq	552(%rbp), %rsi
 6457      020000
 6458              	.L573:
 550:fltk-1.3.4-1/png/pngread.c **** 
 6459              		.loc 1 550 4 is_stmt 1 view .LVU1789
 6460              	.LVL682:
 6461              	.LBB230:
 6462              	.LBI230:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 6463              		.loc 2 31 1 view .LVU1790
 6464              	.LBB231:
 6465              		.loc 2 34 3 view .LVU1791
 6466              	.LBE231:
 6467              	.LBE230:
 550:fltk-1.3.4-1/png/pngread.c **** 
 6468              		.loc 1 550 4 is_stmt 0 view .LVU1792
 6469 0123 488B4424 		movq	8(%rsp), %rax
 6469      08
 6470              	.LBB234:
 6471              	.LBB232:
 6472              		.loc 2 34 10 view .LVU1793
 6473 0128 488BBD20 		movq	544(%rbp), %rdi
 6473      020000
 6474              	.LBE232:
 6475              	.LBE234:
 550:fltk-1.3.4-1/png/pngread.c **** 
 6476              		.loc 1 550 4 view .LVU1794
 6477 012f 488D5001 		leaq	1(%rax), %rdx
 6478              	.LVL683:
 6479              	.LBB235:
 6480              	.LBB233:
 6481              		.loc 2 34 10 view .LVU1795
 6482 0133 E8000000 		call	memcpy@PLT
 6482      00
 6483              	.LVL684:
 6484              		.loc 2 34 10 view .LVU1796
 6485              	.LBE233:
 6486              	.LBE235:
 553:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 6487              		.loc 1 553 4 is_stmt 1 view .LVU1797
 553:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 6488              		.loc 1 553 72 is_stmt 0 view .LVU1798
 6489 0138 48B80400 		movabsq	$1095216660484, %rax
 6489      0000FF00 
 6489      0000
 6490 0142 48238518 		andq	1048(%rbp), %rax
 6490      040000
 553:fltk-1.3.4-1/png/pngread.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 6491              		.loc 1 553 7 view .LVU1799
 6492 0149 48BA0400 		movabsq	$274877906948, %rdx
 6492      00004000 
 6492      0000
 6493 0153 4839D0   		cmpq	%rdx, %rax
 6494 0156 0F845401 		je	.L575
 6494      0000
 6495              	.L578:
 562:fltk-1.3.4-1/png/pngread.c ****       png_do_read_transformations(png_ptr, &row_info);
 6496              		.loc 1 562 4 is_stmt 1 view .LVU1800
 562:fltk-1.3.4-1/png/pngread.c ****       png_do_read_transformations(png_ptr, &row_info);
 6497              		.loc 1 562 7 is_stmt 0 view .LVU1801
 6498 015c 8B853401 		movl	308(%rbp), %eax
 6498      0000
 6499 0162 85C0     		testl	%eax, %eax
 6500 0164 0F85F600 		jne	.L657
 6500      0000
 6501              	.L577:
 567:fltk-1.3.4-1/png/pngread.c ****    {
 6502              		.loc 1 567 4 is_stmt 1 view .LVU1802
 567:fltk-1.3.4-1/png/pngread.c ****    {
 6503              		.loc 1 567 15 is_stmt 0 view .LVU1803
 6504 016a 0FB6857F 		movzbl	639(%rbp), %eax
 6504      020000
 6505 0171 0FB65424 		movzbl	19(%rsp), %edx
 6505      13
 567:fltk-1.3.4-1/png/pngread.c ****    {
 6506              		.loc 1 567 7 view .LVU1804
 6507 0176 84C0     		testb	%al, %al
 6508 0178 0F85BA00 		jne	.L584
 6508      0000
 569:fltk-1.3.4-1/png/pngread.c ****       if (row_info.pixel_depth > png_ptr->maximum_pixel_depth)
 6509              		.loc 1 569 7 is_stmt 1 view .LVU1805
 569:fltk-1.3.4-1/png/pngread.c ****       if (row_info.pixel_depth > png_ptr->maximum_pixel_depth)
 6510              		.loc 1 569 40 is_stmt 0 view .LVU1806
 6511 017e 88957F02 		movb	%dl, 639(%rbp)
 6511      0000
 570:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "sequential row overflow");
 6512              		.loc 1 570 7 is_stmt 1 view .LVU1807
 570:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "sequential row overflow");
 6513              		.loc 1 570 10 is_stmt 0 view .LVU1808
 6514 0184 38957E02 		cmpb	%dl, 638(%rbp)
 6514      0000
 6515 018a 0F821503 		jb	.L658
 6515      0000
 6516              	.L585:
 579:fltk-1.3.4-1/png/pngread.c ****       (png_ptr->transformations & PNG_INTERLACE) != 0)
 6517              		.loc 1 579 4 is_stmt 1 view .LVU1809
 579:fltk-1.3.4-1/png/pngread.c ****       (png_ptr->transformations & PNG_INTERLACE) != 0)
 6518              		.loc 1 579 7 is_stmt 0 view .LVU1810
 6519 0190 80BD7402 		cmpb	$0, 628(%rbp)
 6519      000000
 6520 0197 740F     		je	.L586
 580:fltk-1.3.4-1/png/pngread.c ****    {
 6521              		.loc 1 580 15 discriminator 1 view .LVU1811
 6522 0199 8B8D3401 		movl	308(%rbp), %ecx
 6522      0000
 579:fltk-1.3.4-1/png/pngread.c ****       (png_ptr->transformations & PNG_INTERLACE) != 0)
 6523              		.loc 1 579 33 discriminator 1 view .LVU1812
 6524 019f F6C102   		testb	$2, %cl
 6525 01a2 0F85C800 		jne	.L659
 6525      0000
 6526              	.L586:
 596:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, row, -1/*ignored*/);
 6527              		.loc 1 596 7 is_stmt 1 view .LVU1813
 596:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, row, -1/*ignored*/);
 6528              		.loc 1 596 10 is_stmt 0 view .LVU1814
 6529 01a8 4D85ED   		testq	%r13, %r13
 6530 01ab 7410     		je	.L591
 597:fltk-1.3.4-1/png/pngread.c **** 
 6531              		.loc 1 597 10 is_stmt 1 view .LVU1815
 6532 01ad BAFFFFFF 		movl	$-1, %edx
 6532      FF
 6533 01b2 4C89EE   		movq	%r13, %rsi
 6534 01b5 4889EF   		movq	%rbp, %rdi
 6535 01b8 E8000000 		call	png_combine_row@PLT
 6535      00
 6536              	.LVL685:
 6537              	.L591:
 599:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, dsp_row, -1/*ignored*/);
 6538              		.loc 1 599 7 view .LVU1816
 599:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, dsp_row, -1/*ignored*/);
 6539              		.loc 1 599 10 is_stmt 0 view .LVU1817
 6540 01bd 4D85E4   		testq	%r12, %r12
 6541 01c0 7410     		je	.L590
 600:fltk-1.3.4-1/png/pngread.c ****    }
 6542              		.loc 1 600 10 is_stmt 1 view .LVU1818
 6543 01c2 BAFFFFFF 		movl	$-1, %edx
 6543      FF
 6544 01c7 4C89E6   		movq	%r12, %rsi
 6545 01ca 4889EF   		movq	%rbp, %rdi
 6546 01cd E8000000 		call	png_combine_row@PLT
 6546      00
 6547              	.LVL686:
 6548              	.L590:
 602:fltk-1.3.4-1/png/pngread.c **** 
 6549              		.loc 1 602 4 view .LVU1819
 6550 01d2 4889EF   		movq	%rbp, %rdi
 6551 01d5 E8000000 		call	png_read_finish_row@PLT
 6551      00
 6552              	.LVL687:
 604:fltk-1.3.4-1/png/pngread.c ****       (*(png_ptr->read_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 6553              		.loc 1 604 4 view .LVU1820
 604:fltk-1.3.4-1/png/pngread.c ****       (*(png_ptr->read_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 6554              		.loc 1 604 15 is_stmt 0 view .LVU1821
 6555 01da 488B8510 		movq	784(%rbp), %rax
 6555      030000
 604:fltk-1.3.4-1/png/pngread.c ****       (*(png_ptr->read_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 6556              		.loc 1 604 7 view .LVU1822
 6557 01e1 4885C0   		testq	%rax, %rax
 6558 01e4 7412     		je	.L552
 605:fltk-1.3.4-1/png/pngread.c **** 
 6559              		.loc 1 605 7 is_stmt 1 view .LVU1823
 605:fltk-1.3.4-1/png/pngread.c **** 
 6560              		.loc 1 605 8 is_stmt 0 view .LVU1824
 6561 01e6 0FB69575 		movzbl	629(%rbp), %edx
 6561      020000
 6562 01ed 8BB51402 		movl	532(%rbp), %esi
 6562      0000
 6563 01f3 4889EF   		movq	%rbp, %rdi
 6564 01f6 FFD0     		call	*%rax
 6565              	.LVL688:
 6566              	.L552:
 607:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 6567              		.loc 1 607 1 view .LVU1825
 6568 01f8 488B4424 		movq	24(%rsp), %rax
 6568      18
 6569 01fd 64483304 		xorq	%fs:40, %rax
 6569      25280000 
 6569      00
 6570 0206 0F857602 		jne	.L660
 6570      0000
 6571 020c 4883C420 		addq	$32, %rsp
 6572              		.cfi_remember_state
 6573              		.cfi_def_cfa_offset 32
 6574 0210 5D       		popq	%rbp
 6575              		.cfi_def_cfa_offset 24
 6576 0211 415C     		popq	%r12
 6577              		.cfi_def_cfa_offset 16
 6578 0213 415D     		popq	%r13
 6579              		.cfi_def_cfa_offset 8
 6580 0215 C3       		ret
 6581              	.LVL689:
 6582 0216 662E0F1F 		.p2align 4,,10
 6582      84000000 
 6582      0000
 6583              		.p2align 3
 6584              	.L655:
 6585              		.cfi_restore_state
 397:fltk-1.3.4-1/png/pngread.c **** 
 6586              		.loc 1 397 24 discriminator 1 view .LVU1826
 6587 0220 C0E803   		shrb	$3, %al
 6588 0223 0FB6D0   		movzbl	%al, %edx
 6589 0226 4889D0   		movq	%rdx, %rax
 6590 0229 480FAFC1 		imulq	%rcx, %rax
 6591 022d E94CFEFF 		jmp	.L556
 6591      FF
 6592              		.p2align 4,,10
 6593 0232 660F1F44 		.p2align 3
 6593      0000
 6594              	.L584:
 574:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "internal sequential row size calculation error");
 6595              		.loc 1 574 9 is_stmt 1 view .LVU1827
 574:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "internal sequential row size calculation error");
 6596              		.loc 1 574 12 is_stmt 0 view .LVU1828
 6597 0238 38D0     		cmpb	%dl, %al
 6598 023a 0F8450FF 		je	.L585
 6598      FFFF
 575:fltk-1.3.4-1/png/pngread.c **** 
 6599              		.loc 1 575 7 is_stmt 1 view .LVU1829
 6600 0240 488D3500 		leaq	.LC30(%rip), %rsi
 6600      000000
 6601 0247 4889EF   		movq	%rbp, %rdi
 6602 024a E8000000 		call	png_error@PLT
 6602      00
 6603              	.LVL690:
 6604 024f 90       		.p2align 4,,10
 6605              		.p2align 3
 6606              	.L654:
 389:fltk-1.3.4-1/png/pngread.c **** 
 6607              		.loc 1 389 7 view .LVU1830
 6608 0250 E8000000 		call	png_read_start_row@PLT
 6608      00
 6609              	.LVL691:
 389:fltk-1.3.4-1/png/pngread.c **** 
 6610              		.loc 1 389 7 is_stmt 0 view .LVU1831
 6611 0255 E9E2FDFF 		jmp	.L554
 6611      FF
 6612 025a 660F1F44 		.p2align 4,,10
 6612      0000
 6613              		.p2align 3
 6614              	.L657:
 563:fltk-1.3.4-1/png/pngread.c **** #endif
 6615              		.loc 1 563 7 is_stmt 1 view .LVU1832
 6616 0260 4889E6   		movq	%rsp, %rsi
 6617 0263 4889EF   		movq	%rbp, %rdi
 6618 0266 E8000000 		call	png_do_read_transformations@PLT
 6618      00
 6619              	.LVL692:
 6620 026b E9FAFEFF 		jmp	.L577
 6620      FF
 6621              		.p2align 4,,10
 6622              		.p2align 3
 6623              	.L659:
 582:fltk-1.3.4-1/png/pngread.c ****          png_do_read_interlace(&row_info, png_ptr->row_buf + 1, png_ptr->pass,
 6624              		.loc 1 582 7 view .LVU1833
 582:fltk-1.3.4-1/png/pngread.c ****          png_do_read_interlace(&row_info, png_ptr->row_buf + 1, png_ptr->pass,
 6625              		.loc 1 582 18 is_stmt 0 view .LVU1834
 6626 0270 0FB69575 		movzbl	629(%rbp), %edx
 6626      020000
 582:fltk-1.3.4-1/png/pngread.c ****          png_do_read_interlace(&row_info, png_ptr->row_buf + 1, png_ptr->pass,
 6627              		.loc 1 582 10 view .LVU1835
 6628 0277 80FA05   		cmpb	$5, %dl
 6629 027a 0F86D000 		jbe	.L661
 6629      0000
 6630              	.L587:
 586:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6631              		.loc 1 586 7 is_stmt 1 view .LVU1836
 586:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6632              		.loc 1 586 10 is_stmt 0 view .LVU1837
 6633 0280 4D85E4   		testq	%r12, %r12
 6634 0283 7410     		je	.L588
 587:fltk-1.3.4-1/png/pngread.c **** 
 6635              		.loc 1 587 10 is_stmt 1 view .LVU1838
 6636 0285 BA010000 		movl	$1, %edx
 6636      00
 6637 028a 4C89E6   		movq	%r12, %rsi
 6638 028d 4889EF   		movq	%rbp, %rdi
 6639 0290 E8000000 		call	png_combine_row@PLT
 6639      00
 6640              	.LVL693:
 6641              	.L588:
 589:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, row, 0/*row*/);
 6642              		.loc 1 589 7 view .LVU1839
 589:fltk-1.3.4-1/png/pngread.c ****          png_combine_row(png_ptr, row, 0/*row*/);
 6643              		.loc 1 589 10 is_stmt 0 view .LVU1840
 6644 0295 4D85ED   		testq	%r13, %r13
 6645 0298 0F8434FF 		je	.L590
 6645      FFFF
 590:fltk-1.3.4-1/png/pngread.c ****    }
 6646              		.loc 1 590 10 is_stmt 1 view .LVU1841
 6647 029e 31D2     		xorl	%edx, %edx
 6648 02a0 4C89EE   		movq	%r13, %rsi
 6649 02a3 4889EF   		movq	%rbp, %rdi
 6650 02a6 E8000000 		call	png_combine_row@PLT
 6650      00
 6651              	.LVL694:
 6652 02ab E922FFFF 		jmp	.L590
 6652      FF
 6653              		.p2align 4,,10
 6654              		.p2align 3
 6655              	.L575:
 557:fltk-1.3.4-1/png/pngread.c ****    }
 6656              		.loc 1 557 7 view .LVU1842
 6657              	.LVL695:
 6658              	.LBB236:
 6659              	.LBI236:
 313:fltk-1.3.4-1/png/pngread.c **** {
 6660              		.loc 1 313 1 view .LVU1843
 6661              	.LBB237:
 315:fltk-1.3.4-1/png/pngread.c **** 
 6662              		.loc 1 315 4 view .LVU1844
 317:fltk-1.3.4-1/png/pngread.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) != 0)
 6663              		.loc 1 317 4 view .LVU1845
 318:fltk-1.3.4-1/png/pngread.c ****    {
 6664              		.loc 1 318 17 is_stmt 0 view .LVU1846
 6665 02b0 0FB65424 		movzbl	16(%rsp), %edx
 6665      10
 317:fltk-1.3.4-1/png/pngread.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) != 0)
 6666              		.loc 1 317 7 view .LVU1847
 6667 02b5 F6C202   		testb	$2, %dl
 6668 02b8 0F849EFE 		je	.L578
 6668      FFFF
 6669              	.LBE237:
 6670              	.LBE236:
 557:fltk-1.3.4-1/png/pngread.c ****    }
 6671              		.loc 1 557 7 view .LVU1848
 6672 02be 488B8528 		movq	552(%rbp), %rax
 6672      020000
 6673              	.LBB249:
 6674              	.LBB246:
 6675              	.LBB238:
 323:fltk-1.3.4-1/png/pngread.c ****       {
 6676              		.loc 1 323 19 view .LVU1849
 6677 02c5 0FB64C24 		movzbl	17(%rsp), %ecx
 6677      11
 321:fltk-1.3.4-1/png/pngread.c **** 
 6678              		.loc 1 321 19 view .LVU1850
 6679 02ca 8B3C24   		movl	(%rsp), %edi
 6680              	.LBE238:
 6681              	.LBE246:
 6682              	.LBE249:
 557:fltk-1.3.4-1/png/pngread.c ****    }
 6683              		.loc 1 557 7 view .LVU1851
 6684 02cd 4883C001 		addq	$1, %rax
 6685              	.LBB250:
 6686              	.LBB247:
 6687              	.LBB244:
 320:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 row_width = row_info->width;
 6688              		.loc 1 320 7 is_stmt 1 view .LVU1852
 321:fltk-1.3.4-1/png/pngread.c **** 
 6689              		.loc 1 321 7 view .LVU1853
 6690              	.LVL696:
 323:fltk-1.3.4-1/png/pngread.c ****       {
 6691              		.loc 1 323 7 view .LVU1854
 323:fltk-1.3.4-1/png/pngread.c ****       {
 6692              		.loc 1 323 10 is_stmt 0 view .LVU1855
 6693 02d1 80F908   		cmpb	$8, %cl
 6694 02d4 0F845E01 		je	.L662
 6694      0000
 343:fltk-1.3.4-1/png/pngread.c ****       {
 6695              		.loc 1 343 12 is_stmt 1 view .LVU1856
 343:fltk-1.3.4-1/png/pngread.c ****       {
 6696              		.loc 1 343 15 is_stmt 0 view .LVU1857
 6697 02da 80F910   		cmpb	$16, %cl
 6698 02dd 0F8579FE 		jne	.L578
 6698      FFFF
 6699              	.LBB239:
 345:fltk-1.3.4-1/png/pngread.c ****          png_uint_32 i;
 6700              		.loc 1 345 10 is_stmt 1 view .LVU1858
 346:fltk-1.3.4-1/png/pngread.c **** 
 6701              		.loc 1 346 10 view .LVU1859
 348:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 6;
 6702              		.loc 1 348 10 view .LVU1860
 348:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 6;
 6703              		.loc 1 348 13 is_stmt 0 view .LVU1861
 6704 02e3 80FA02   		cmpb	$2, %dl
 6705 02e6 0F848B01 		je	.L595
 6705      0000
 351:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 8;
 6706              		.loc 1 351 15 is_stmt 1 view .LVU1862
 352:fltk-1.3.4-1/png/pngread.c **** 
 6707              		.loc 1 352 29 is_stmt 0 view .LVU1863
 6708 02ec 41B90800 		movl	$8, %r9d
 6708      0000
 351:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 8;
 6709              		.loc 1 351 18 view .LVU1864
 6710 02f2 80FA06   		cmpb	$6, %dl
 6711 02f5 0F8561FE 		jne	.L578
 6711      FFFF
 6712              	.L582:
 6713              	.LVL697:
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6714              		.loc 1 357 10 is_stmt 1 view .LVU1865
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6715              		.loc 1 357 32 view .LVU1866
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6716              		.loc 1 357 10 is_stmt 0 view .LVU1867
 6717 02fb 85FF     		testl	%edi, %edi
 6718 02fd 0F8459FE 		je	.L578
 6718      FFFF
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6719              		.loc 1 357 17 view .LVU1868
 6720 0303 4531C0   		xorl	%r8d, %r8d
 6721              	.LVL698:
 6722 0306 662E0F1F 		.p2align 4,,10
 6722      84000000 
 6722      0000
 6723              		.p2align 3
 6724              	.L583:
 6725              	.LBB240:
 359:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 s1   = (*(rp + 2) << 8) | *(rp + 3);
 6726              		.loc 1 359 13 is_stmt 1 view .LVU1869
 360:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 s2   = (*(rp + 4) << 8) | *(rp + 5);
 6727              		.loc 1 360 13 view .LVU1870
 6728 0310 0FB708   		movzwl	(%rax), %ecx
 6729 0313 0FB75004 		movzwl	4(%rax), %edx
 6730              	.LBE240:
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6731              		.loc 1 357 48 is_stmt 0 view .LVU1871
 6732 0317 4183C001 		addl	$1, %r8d
 6733              	.LVL699:
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6734              		.loc 1 357 48 view .LVU1872
 6735 031b 0FB77002 		movzwl	2(%rax), %esi
 6736 031f 66C1C108 		rolw	$8, %cx
 6737 0323 66C1C208 		rolw	$8, %dx
 6738 0327 66C1C608 		rolw	$8, %si
 6739              	.LVL700:
 6740              	.LBB241:
 361:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 red  = (s0 + s1 + 65536) & 0xffff;
 6741              		.loc 1 361 13 is_stmt 1 view .LVU1873
 362:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 blue = (s2 + s1 + 65536) & 0xffff;
 6742              		.loc 1 362 13 view .LVU1874
 6743 032b 01F1     		addl	%esi, %ecx
 6744              	.LVL701:
 363:fltk-1.3.4-1/png/pngread.c ****             *(rp    ) = (png_byte)((red >> 8) & 0xff);
 6745              		.loc 1 363 13 view .LVU1875
 6746 032d 01F2     		addl	%esi, %edx
 6747              	.LVL702:
 364:fltk-1.3.4-1/png/pngread.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 6748              		.loc 1 364 13 view .LVU1876
 365:fltk-1.3.4-1/png/pngread.c ****             *(rp + 4) = (png_byte)((blue >> 8) & 0xff);
 6749              		.loc 1 365 25 is_stmt 0 view .LVU1877
 6750 032f 884801   		movb	%cl, 1(%rax)
 6751              	.LVL703:
 364:fltk-1.3.4-1/png/pngread.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 6752              		.loc 1 364 41 view .LVU1878
 6753 0332 0FB6F5   		movzbl	%ch, %esi
 6754              	.LVL704:
 366:fltk-1.3.4-1/png/pngread.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 6755              		.loc 1 366 42 view .LVU1879
 6756 0335 0FB6CE   		movzbl	%dh, %ecx
 6757              	.LVL705:
 364:fltk-1.3.4-1/png/pngread.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 6758              		.loc 1 364 25 view .LVU1880
 6759 0338 408830   		movb	%sil, (%rax)
 365:fltk-1.3.4-1/png/pngread.c ****             *(rp + 4) = (png_byte)((blue >> 8) & 0xff);
 6760              		.loc 1 365 13 is_stmt 1 view .LVU1881
 366:fltk-1.3.4-1/png/pngread.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 6761              		.loc 1 366 13 view .LVU1882
 366:fltk-1.3.4-1/png/pngread.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 6762              		.loc 1 366 25 is_stmt 0 view .LVU1883
 6763 033b 884804   		movb	%cl, 4(%rax)
 6764              	.LVL706:
 367:fltk-1.3.4-1/png/pngread.c ****          }
 6765              		.loc 1 367 13 is_stmt 1 view .LVU1884
 367:fltk-1.3.4-1/png/pngread.c ****          }
 6766              		.loc 1 367 25 is_stmt 0 view .LVU1885
 6767 033e 885005   		movb	%dl, 5(%rax)
 6768              	.LBE241:
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6769              		.loc 1 357 47 is_stmt 1 view .LVU1886
 6770              	.LVL707:
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6771              		.loc 1 357 55 is_stmt 0 view .LVU1887
 6772 0341 4C01C8   		addq	%r9, %rax
 6773              	.LVL708:
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6774              		.loc 1 357 32 is_stmt 1 view .LVU1888
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6775              		.loc 1 357 10 is_stmt 0 view .LVU1889
 6776 0344 4439C7   		cmpl	%r8d, %edi
 6777 0347 75C7     		jne	.L583
 6778 0349 E90EFEFF 		jmp	.L578
 6778      FF
 6779              	.LVL709:
 6780 034e 6690     		.p2align 4,,10
 6781              		.p2align 3
 6782              	.L661:
 357:fltk-1.3.4-1/png/pngread.c ****          {
 6783              		.loc 1 357 10 view .LVU1890
 6784              	.LBE239:
 6785              	.LBE244:
 6786              	.LBE247:
 6787              	.LBE250:
 583:fltk-1.3.4-1/png/pngread.c ****             png_ptr->transformations);
 6788              		.loc 1 583 10 is_stmt 1 view .LVU1891
 6789 0350 488B8528 		movq	552(%rbp), %rax
 6789      020000
 6790 0357 4889E7   		movq	%rsp, %rdi
 6791 035a 488D7001 		leaq	1(%rax), %rsi
 6792 035e E8000000 		call	png_do_read_interlace@PLT
 6792      00
 6793              	.LVL710:
 6794 0363 E918FFFF 		jmp	.L587
 6794      FF
 6795 0368 0F1F8400 		.p2align 4,,10
 6795      00000000 
 6796              		.p2align 3
 6797              	.L559:
 508:fltk-1.3.4-1/png/pngread.c ****             {
 6798              		.loc 1 508 13 view .LVU1892
 508:fltk-1.3.4-1/png/pngread.c ****             {
 6799              		.loc 1 508 16 is_stmt 0 view .LVU1893
 6800 0370 83E601   		andl	$1, %esi
 6801 0373 7513     		jne	.L653
 508:fltk-1.3.4-1/png/pngread.c ****             {
 6802              		.loc 1 508 43 discriminator 1 view .LVU1894
 6803 0375 83BDF801 		cmpl	$1, 504(%rbp)
 6803      000001
 6804 037c 0F8746FD 		ja	.L557
 6804      FFFF
 6805              		.p2align 4,,10
 6806 0382 660F1F44 		.p2align 3
 6806      0000
 6807              	.L653:
 456:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6808              		.loc 1 456 16 is_stmt 1 view .LVU1895
 456:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6809              		.loc 1 456 19 is_stmt 0 view .LVU1896
 6810 0388 4D85E4   		testq	%r12, %r12
 6811 038b 7410     		je	.L566
 6812              	.L569:
 457:fltk-1.3.4-1/png/pngread.c ****                png_read_finish_row(png_ptr);
 6813              		.loc 1 457 19 is_stmt 1 view .LVU1897
 6814 038d BA010000 		movl	$1, %edx
 6814      00
 6815 0392 4C89E6   		movq	%r12, %rsi
 6816 0395 4889EF   		movq	%rbp, %rdi
 6817 0398 E8000000 		call	png_combine_row@PLT
 6817      00
 6818              	.LVL711:
 6819              	.L566:
 458:fltk-1.3.4-1/png/pngread.c ****                return;
 6820              		.loc 1 458 16 view .LVU1898
 6821 039d 4889EF   		movq	%rbp, %rdi
 6822 03a0 E8000000 		call	png_read_finish_row@PLT
 6822      00
 6823              	.LVL712:
 459:fltk-1.3.4-1/png/pngread.c ****             }
 6824              		.loc 1 459 16 view .LVU1899
 6825 03a5 E94EFEFF 		jmp	.L552
 6825      FF
 6826 03aa 660F1F44 		.p2align 4,,10
 6826      0000
 6827              		.p2align 3
 6828              	.L565:
 454:fltk-1.3.4-1/png/pngread.c ****             {
 6829              		.loc 1 454 13 view .LVU1900
 454:fltk-1.3.4-1/png/pngread.c ****             {
 6830              		.loc 1 454 16 is_stmt 0 view .LVU1901
 6831 03b0 83E607   		andl	$7, %esi
 6832 03b3 0F840FFD 		je	.L557
 6832      FFFF
 6833 03b9 EBCD     		jmp	.L653
 6834 03bb 0F1F4400 		.p2align 4,,10
 6834      00
 6835              		.p2align 3
 6836              	.L564:
 464:fltk-1.3.4-1/png/pngread.c ****             {
 6837              		.loc 1 464 13 is_stmt 1 view .LVU1902
 464:fltk-1.3.4-1/png/pngread.c ****             {
 6838              		.loc 1 464 16 is_stmt 0 view .LVU1903
 6839 03c0 83E607   		andl	$7, %esi
 6840 03c3 75C3     		jne	.L653
 464:fltk-1.3.4-1/png/pngread.c ****             {
 6841              		.loc 1 464 46 discriminator 1 view .LVU1904
 6842 03c5 83BDF801 		cmpl	$4, 504(%rbp)
 6842      000004
 6843 03cc 0F87F6FC 		ja	.L557
 6843      FFFF
 6844 03d2 EBB4     		jmp	.L653
 6845              		.p2align 4,,10
 6846 03d4 0F1F4000 		.p2align 3
 6847              	.L563:
 475:fltk-1.3.4-1/png/pngread.c ****             {
 6848              		.loc 1 475 13 is_stmt 1 view .LVU1905
 475:fltk-1.3.4-1/png/pngread.c ****             {
 6849              		.loc 1 475 38 is_stmt 0 view .LVU1906
 6850 03d8 89F2     		movl	%esi, %edx
 6851 03da 83E207   		andl	$7, %edx
 475:fltk-1.3.4-1/png/pngread.c ****             {
 6852              		.loc 1 475 16 view .LVU1907
 6853 03dd 83FA04   		cmpl	$4, %edx
 6854 03e0 0F84E2FC 		je	.L557
 6854      FFFF
 477:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6855              		.loc 1 477 16 is_stmt 1 view .LVU1908
 477:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6856              		.loc 1 477 19 is_stmt 0 view .LVU1909
 6857 03e6 4D85E4   		testq	%r12, %r12
 6858 03e9 74B2     		je	.L566
 477:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6859              		.loc 1 477 36 discriminator 1 view .LVU1910
 6860 03eb 83E604   		andl	$4, %esi
 6861 03ee 74AD     		je	.L566
 6862 03f0 EB9B     		jmp	.L569
 6863              		.p2align 4,,10
 6864 03f2 660F1F44 		.p2align 3
 6864      0000
 6865              	.L562:
 486:fltk-1.3.4-1/png/pngread.c ****             {
 6866              		.loc 1 486 13 is_stmt 1 view .LVU1911
 486:fltk-1.3.4-1/png/pngread.c ****             {
 6867              		.loc 1 486 16 is_stmt 0 view .LVU1912
 6868 03f8 83E603   		andl	$3, %esi
 6869 03fb 758B     		jne	.L653
 486:fltk-1.3.4-1/png/pngread.c ****             {
 6870              		.loc 1 486 43 discriminator 1 view .LVU1913
 6871 03fd 83BDF801 		cmpl	$2, 504(%rbp)
 6871      000002
 6872 0404 0F87BEFC 		ja	.L557
 6872      FFFF
 6873 040a E979FFFF 		jmp	.L653
 6873      FF
 6874 040f 90       		.p2align 4,,10
 6875              		.p2align 3
 6876              	.L561:
 497:fltk-1.3.4-1/png/pngread.c ****             {
 6877              		.loc 1 497 13 is_stmt 1 view .LVU1914
 497:fltk-1.3.4-1/png/pngread.c ****             {
 6878              		.loc 1 497 38 is_stmt 0 view .LVU1915
 6879 0410 89F2     		movl	%esi, %edx
 6880 0412 83E203   		andl	$3, %edx
 497:fltk-1.3.4-1/png/pngread.c ****             {
 6881              		.loc 1 497 16 view .LVU1916
 6882 0415 83FA02   		cmpl	$2, %edx
 6883 0418 0F84AAFC 		je	.L557
 6883      FFFF
 499:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6884              		.loc 1 499 16 is_stmt 1 view .LVU1917
 499:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6885              		.loc 1 499 19 is_stmt 0 view .LVU1918
 6886 041e 4D85E4   		testq	%r12, %r12
 6887 0421 0F8476FF 		je	.L566
 6887      FFFF
 499:fltk-1.3.4-1/png/pngread.c ****                   png_combine_row(png_ptr, dsp_row, 1/*display*/);
 6888              		.loc 1 499 36 discriminator 1 view .LVU1919
 6889 0427 83E602   		andl	$2, %esi
 6890 042a 0F846DFF 		je	.L566
 6890      FFFF
 6891 0430 E958FFFF 		jmp	.L569
 6891      FF
 6892              	.LVL713:
 6893              		.p2align 4,,10
 6894 0435 0F1F00   		.p2align 3
 6895              	.L662:
 6896              	.LBB251:
 6897              	.LBB248:
 6898              	.LBB245:
 6899              	.LBB242:
 325:fltk-1.3.4-1/png/pngread.c ****          png_uint_32 i;
 6900              		.loc 1 325 10 is_stmt 1 view .LVU1920
 326:fltk-1.3.4-1/png/pngread.c **** 
 6901              		.loc 1 326 10 view .LVU1921
 328:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 3;
 6902              		.loc 1 328 10 view .LVU1922
 328:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 3;
 6903              		.loc 1 328 13 is_stmt 0 view .LVU1923
 6904 0438 80FA02   		cmpb	$2, %dl
 6905 043b 7433     		je	.L594
 331:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 4;
 6906              		.loc 1 331 15 is_stmt 1 view .LVU1924
 332:fltk-1.3.4-1/png/pngread.c **** 
 6907              		.loc 1 332 29 is_stmt 0 view .LVU1925
 6908 043d BE040000 		movl	$4, %esi
 6908      00
 331:fltk-1.3.4-1/png/pngread.c ****             bytes_per_pixel = 4;
 6909              		.loc 1 331 18 view .LVU1926
 6910 0442 80FA06   		cmpb	$6, %dl
 6911 0445 0F8511FD 		jne	.L578
 6911      FFFF
 6912              	.L580:
 6913              	.LVL714:
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6914              		.loc 1 337 10 is_stmt 1 view .LVU1927
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6915              		.loc 1 337 32 view .LVU1928
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6916              		.loc 1 337 10 is_stmt 0 view .LVU1929
 6917 044b 85FF     		testl	%edi, %edi
 6918 044d 0F8409FD 		je	.L578
 6918      FFFF
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6919              		.loc 1 337 17 view .LVU1930
 6920 0453 31D2     		xorl	%edx, %edx
 6921              	.LVL715:
 6922              		.p2align 4,,10
 6923 0455 0F1F00   		.p2align 3
 6924              	.L581:
 339:fltk-1.3.4-1/png/pngread.c ****             *(rp+2) = (png_byte)((256 + *(rp + 2) + *(rp + 1)) & 0xff);
 6925              		.loc 1 339 13 is_stmt 1 view .LVU1931
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6926              		.loc 1 337 48 is_stmt 0 view .LVU1932
 6927 0458 83C201   		addl	$1, %edx
 6928              	.LVL716:
 339:fltk-1.3.4-1/png/pngread.c ****             *(rp+2) = (png_byte)((256 + *(rp + 2) + *(rp + 1)) & 0xff);
 6929              		.loc 1 339 45 view .LVU1933
 6930 045b 0FB64801 		movzbl	1(%rax), %ecx
 339:fltk-1.3.4-1/png/pngread.c ****             *(rp+2) = (png_byte)((256 + *(rp + 2) + *(rp + 1)) & 0xff);
 6931              		.loc 1 339 43 view .LVU1934
 6932 045f 0008     		addb	%cl, (%rax)
 340:fltk-1.3.4-1/png/pngread.c ****          }
 6933              		.loc 1 340 13 is_stmt 1 view .LVU1935
 340:fltk-1.3.4-1/png/pngread.c ****          }
 6934              		.loc 1 340 51 is_stmt 0 view .LVU1936
 6935 0461 004802   		addb	%cl, 2(%rax)
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6936              		.loc 1 337 47 is_stmt 1 view .LVU1937
 6937              	.LVL717:
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6938              		.loc 1 337 55 is_stmt 0 view .LVU1938
 6939 0464 4801F0   		addq	%rsi, %rax
 6940              	.LVL718:
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6941              		.loc 1 337 32 is_stmt 1 view .LVU1939
 337:fltk-1.3.4-1/png/pngread.c ****          {
 6942              		.loc 1 337 10 is_stmt 0 view .LVU1940
 6943 0467 39D7     		cmpl	%edx, %edi
 6944 0469 75ED     		jne	.L581
 6945 046b E9ECFCFF 		jmp	.L578
 6945      FF
 6946              	.LVL719:
 6947              	.L594:
 329:fltk-1.3.4-1/png/pngread.c **** 
 6948              		.loc 1 329 29 view .LVU1941
 6949 0470 BE030000 		movl	$3, %esi
 6949      00
 6950 0475 EBD4     		jmp	.L580
 6951              	.L595:
 6952              	.LBE242:
 6953              	.LBB243:
 349:fltk-1.3.4-1/png/pngread.c **** 
 6954              		.loc 1 349 29 view .LVU1942
 6955 0477 41B90600 		movl	$6, %r9d
 6955      0000
 6956 047d E979FEFF 		jmp	.L582
 6956      FF
 6957              	.LVL720:
 6958              	.L660:
 349:fltk-1.3.4-1/png/pngread.c **** 
 6959              		.loc 1 349 29 view .LVU1943
 6960              	.LBE243:
 6961              	.LBE245:
 6962              	.LBE248:
 6963              	.LBE251:
 607:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 6964              		.loc 1 607 1 view .LVU1944
 6965 0482 E8000000 		call	__stack_chk_fail@PLT
 6965      00
 6966              	.LVL721:
 6967              	.L656:
 531:fltk-1.3.4-1/png/pngread.c **** 
 6968              		.loc 1 531 7 is_stmt 1 view .LVU1945
 6969 0487 488D3500 		leaq	.LC27(%rip), %rsi
 6969      000000
 6970 048e 4889EF   		movq	%rbp, %rdi
 6971 0491 E8000000 		call	png_error@PLT
 6971      00
 6972              	.LVL722:
 6973              	.L574:
 542:fltk-1.3.4-1/png/pngread.c ****    }
 6974              		.loc 1 542 10 view .LVU1946
 6975 0496 488D3500 		leaq	.LC28(%rip), %rsi
 6975      000000
 6976 049d 4889EF   		movq	%rbp, %rdi
 6977 04a0 E8000000 		call	png_error@PLT
 6977      00
 6978              	.LVL723:
 6979              	.L658:
 571:fltk-1.3.4-1/png/pngread.c ****    }
 6980              		.loc 1 571 10 view .LVU1947
 6981 04a5 488D3500 		leaq	.LC29(%rip), %rsi
 6981      000000
 6982 04ac 4889EF   		movq	%rbp, %rdi
 6983 04af E8000000 		call	png_error@PLT
 6983      00
 6984              	.LVL724:
 6985              		.cfi_endproc
 6986              	.LFE47:
 6988              		.section	.rodata.png_image_read_direct.str1.8,"aMS",@progbits,1
 6989              		.align 8
 6990              	.LC31:
 6991 0000 706E675F 		.string	"png_read_image: unsupported transformation"
 6991      72656164 
 6991      5F696D61 
 6991      67653A20 
 6991      756E7375 
 6992 002b 00000000 		.align 8
 6992      00
 6993              	.LC32:
 6994 0030 706E675F 		.string	"png_image_read: alpha channel lost"
 6994      696D6167 
 6994      655F7265 
 6994      61643A20 
 6994      616C7068 
 6995 0053 00000000 		.align 8
 6995      00
 6996              	.LC33:
 6997 0058 756E6578 		.string	"unexpected alpha swap transformation"
 6997      70656374 
 6997      65642061 
 6997      6C706861 
 6997      20737761 
 6998 007d 000000   		.align 8
 6999              	.LC34:
 7000 0080 706E675F 		.string	"png_read_image: invalid transformations"
 7000      72656164 
 7000      5F696D61 
 7000      67653A20 
 7000      696E7661 
 7001              		.section	.text.png_image_read_direct,"ax",@progbits
 7002              		.p2align 4
 7004              	png_image_read_direct:
 7005              	.LVL725:
 7006              	.LFB77:
2897:fltk-1.3.4-1/png/pngread.c **** 
2898:fltk-1.3.4-1/png/pngread.c **** /* The final part of the color-map read called from png_image_finish_read. */
2899:fltk-1.3.4-1/png/pngread.c **** static int
2900:fltk-1.3.4-1/png/pngread.c **** png_image_read_and_map(png_voidp argument)
2901:fltk-1.3.4-1/png/pngread.c **** {
2902:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
2903:fltk-1.3.4-1/png/pngread.c ****       argument);
2904:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
2905:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
2906:fltk-1.3.4-1/png/pngread.c ****    int passes;
2907:fltk-1.3.4-1/png/pngread.c **** 
2908:fltk-1.3.4-1/png/pngread.c ****    /* Called when the libpng data must be transformed into the color-mapped
2909:fltk-1.3.4-1/png/pngread.c ****     * form.  There is a local row buffer in display->local and this routine must
2910:fltk-1.3.4-1/png/pngread.c ****     * do the interlace handling.
2911:fltk-1.3.4-1/png/pngread.c ****     */
2912:fltk-1.3.4-1/png/pngread.c ****    switch (png_ptr->interlaced)
2913:fltk-1.3.4-1/png/pngread.c ****    {
2914:fltk-1.3.4-1/png/pngread.c ****       case PNG_INTERLACE_NONE:
2915:fltk-1.3.4-1/png/pngread.c ****          passes = 1;
2916:fltk-1.3.4-1/png/pngread.c ****          break;
2917:fltk-1.3.4-1/png/pngread.c **** 
2918:fltk-1.3.4-1/png/pngread.c ****       case PNG_INTERLACE_ADAM7:
2919:fltk-1.3.4-1/png/pngread.c ****          passes = PNG_INTERLACE_ADAM7_PASSES;
2920:fltk-1.3.4-1/png/pngread.c ****          break;
2921:fltk-1.3.4-1/png/pngread.c **** 
2922:fltk-1.3.4-1/png/pngread.c ****       default:
2923:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "unknown interlace type");
2924:fltk-1.3.4-1/png/pngread.c ****    }
2925:fltk-1.3.4-1/png/pngread.c **** 
2926:fltk-1.3.4-1/png/pngread.c ****    {
2927:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  height = image->height;
2928:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  width = image->width;
2929:fltk-1.3.4-1/png/pngread.c ****       int          proc = display->colormap_processing;
2930:fltk-1.3.4-1/png/pngread.c ****       png_bytep    first_row = png_voidcast(png_bytep, display->first_row);
2931:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
2932:fltk-1.3.4-1/png/pngread.c ****       int pass;
2933:fltk-1.3.4-1/png/pngread.c **** 
2934:fltk-1.3.4-1/png/pngread.c ****       for (pass = 0; pass < passes; ++pass)
2935:fltk-1.3.4-1/png/pngread.c ****       {
2936:fltk-1.3.4-1/png/pngread.c ****          unsigned int     startx, stepx, stepy;
2937:fltk-1.3.4-1/png/pngread.c ****          png_uint_32      y;
2938:fltk-1.3.4-1/png/pngread.c **** 
2939:fltk-1.3.4-1/png/pngread.c ****          if (png_ptr->interlaced == PNG_INTERLACE_ADAM7)
2940:fltk-1.3.4-1/png/pngread.c ****          {
2941:fltk-1.3.4-1/png/pngread.c ****             /* The row may be empty for a short image: */
2942:fltk-1.3.4-1/png/pngread.c ****             if (PNG_PASS_COLS(width, pass) == 0)
2943:fltk-1.3.4-1/png/pngread.c ****                continue;
2944:fltk-1.3.4-1/png/pngread.c **** 
2945:fltk-1.3.4-1/png/pngread.c ****             startx = PNG_PASS_START_COL(pass);
2946:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass);
2947:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
2948:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
2949:fltk-1.3.4-1/png/pngread.c ****          }
2950:fltk-1.3.4-1/png/pngread.c **** 
2951:fltk-1.3.4-1/png/pngread.c ****          else
2952:fltk-1.3.4-1/png/pngread.c ****          {
2953:fltk-1.3.4-1/png/pngread.c ****             y = 0;
2954:fltk-1.3.4-1/png/pngread.c ****             startx = 0;
2955:fltk-1.3.4-1/png/pngread.c ****             stepx = stepy = 1;
2956:fltk-1.3.4-1/png/pngread.c ****          }
2957:fltk-1.3.4-1/png/pngread.c **** 
2958:fltk-1.3.4-1/png/pngread.c ****          for (; y<height; y += stepy)
2959:fltk-1.3.4-1/png/pngread.c ****          {
2960:fltk-1.3.4-1/png/pngread.c ****             png_bytep inrow = png_voidcast(png_bytep, display->local_row);
2961:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow = first_row + y * step_row;
2962:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep end_row = outrow + width;
2963:fltk-1.3.4-1/png/pngread.c **** 
2964:fltk-1.3.4-1/png/pngread.c ****             /* Read read the libpng data into the temporary buffer. */
2965:fltk-1.3.4-1/png/pngread.c ****             png_read_row(png_ptr, inrow, NULL);
2966:fltk-1.3.4-1/png/pngread.c **** 
2967:fltk-1.3.4-1/png/pngread.c ****             /* Now process the row according to the processing option, note
2968:fltk-1.3.4-1/png/pngread.c ****              * that the caller verifies that the format of the libpng output
2969:fltk-1.3.4-1/png/pngread.c ****              * data is as required.
2970:fltk-1.3.4-1/png/pngread.c ****              */
2971:fltk-1.3.4-1/png/pngread.c ****             outrow += startx;
2972:fltk-1.3.4-1/png/pngread.c ****             switch (proc)
2973:fltk-1.3.4-1/png/pngread.c ****             {
2974:fltk-1.3.4-1/png/pngread.c ****                case PNG_CMAP_GA:
2975:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
2976:fltk-1.3.4-1/png/pngread.c ****                   {
2977:fltk-1.3.4-1/png/pngread.c ****                      /* The data is always in the PNG order */
2978:fltk-1.3.4-1/png/pngread.c ****                      unsigned int gray = *inrow++;
2979:fltk-1.3.4-1/png/pngread.c ****                      unsigned int alpha = *inrow++;
2980:fltk-1.3.4-1/png/pngread.c ****                      unsigned int entry;
2981:fltk-1.3.4-1/png/pngread.c **** 
2982:fltk-1.3.4-1/png/pngread.c ****                      /* NOTE: this code is copied as a comment in
2983:fltk-1.3.4-1/png/pngread.c ****                       * make_ga_colormap above.  Please update the
2984:fltk-1.3.4-1/png/pngread.c ****                       * comment if you change this code!
2985:fltk-1.3.4-1/png/pngread.c ****                       */
2986:fltk-1.3.4-1/png/pngread.c ****                      if (alpha > 229) /* opaque */
2987:fltk-1.3.4-1/png/pngread.c ****                      {
2988:fltk-1.3.4-1/png/pngread.c ****                         entry = (231 * gray + 128) >> 8;
2989:fltk-1.3.4-1/png/pngread.c ****                      }
2990:fltk-1.3.4-1/png/pngread.c ****                      else if (alpha < 26) /* transparent */
2991:fltk-1.3.4-1/png/pngread.c ****                      {
2992:fltk-1.3.4-1/png/pngread.c ****                         entry = 231;
2993:fltk-1.3.4-1/png/pngread.c ****                      }
2994:fltk-1.3.4-1/png/pngread.c ****                      else /* partially opaque */
2995:fltk-1.3.4-1/png/pngread.c ****                      {
2996:fltk-1.3.4-1/png/pngread.c ****                         entry = 226 + 6 * PNG_DIV51(alpha) + PNG_DIV51(gray);
2997:fltk-1.3.4-1/png/pngread.c ****                      }
2998:fltk-1.3.4-1/png/pngread.c **** 
2999:fltk-1.3.4-1/png/pngread.c ****                      *outrow = (png_byte)entry;
3000:fltk-1.3.4-1/png/pngread.c ****                   }
3001:fltk-1.3.4-1/png/pngread.c ****                   break;
3002:fltk-1.3.4-1/png/pngread.c **** 
3003:fltk-1.3.4-1/png/pngread.c ****                case PNG_CMAP_TRANS:
3004:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
3005:fltk-1.3.4-1/png/pngread.c ****                   {
3006:fltk-1.3.4-1/png/pngread.c ****                      png_byte gray = *inrow++;
3007:fltk-1.3.4-1/png/pngread.c ****                      png_byte alpha = *inrow++;
3008:fltk-1.3.4-1/png/pngread.c **** 
3009:fltk-1.3.4-1/png/pngread.c ****                      if (alpha == 0)
3010:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_CMAP_TRANS_BACKGROUND;
3011:fltk-1.3.4-1/png/pngread.c **** 
3012:fltk-1.3.4-1/png/pngread.c ****                      else if (gray != PNG_CMAP_TRANS_BACKGROUND)
3013:fltk-1.3.4-1/png/pngread.c ****                         *outrow = gray;
3014:fltk-1.3.4-1/png/pngread.c **** 
3015:fltk-1.3.4-1/png/pngread.c ****                      else
3016:fltk-1.3.4-1/png/pngread.c ****                         *outrow = (png_byte)(PNG_CMAP_TRANS_BACKGROUND+1);
3017:fltk-1.3.4-1/png/pngread.c ****                   }
3018:fltk-1.3.4-1/png/pngread.c ****                   break;
3019:fltk-1.3.4-1/png/pngread.c **** 
3020:fltk-1.3.4-1/png/pngread.c ****                case PNG_CMAP_RGB:
3021:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
3022:fltk-1.3.4-1/png/pngread.c ****                   {
3023:fltk-1.3.4-1/png/pngread.c ****                      *outrow = PNG_RGB_INDEX(inrow[0], inrow[1], inrow[2]);
3024:fltk-1.3.4-1/png/pngread.c ****                      inrow += 3;
3025:fltk-1.3.4-1/png/pngread.c ****                   }
3026:fltk-1.3.4-1/png/pngread.c ****                   break;
3027:fltk-1.3.4-1/png/pngread.c **** 
3028:fltk-1.3.4-1/png/pngread.c ****                case PNG_CMAP_RGB_ALPHA:
3029:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
3030:fltk-1.3.4-1/png/pngread.c ****                   {
3031:fltk-1.3.4-1/png/pngread.c ****                      unsigned int alpha = inrow[3];
3032:fltk-1.3.4-1/png/pngread.c **** 
3033:fltk-1.3.4-1/png/pngread.c ****                      /* Because the alpha entries only hold alpha==0.5 values
3034:fltk-1.3.4-1/png/pngread.c ****                       * split the processing at alpha==0.25 (64) and 0.75
3035:fltk-1.3.4-1/png/pngread.c ****                       * (196).
3036:fltk-1.3.4-1/png/pngread.c ****                       */
3037:fltk-1.3.4-1/png/pngread.c **** 
3038:fltk-1.3.4-1/png/pngread.c ****                      if (alpha >= 196)
3039:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_RGB_INDEX(inrow[0], inrow[1],
3040:fltk-1.3.4-1/png/pngread.c ****                            inrow[2]);
3041:fltk-1.3.4-1/png/pngread.c **** 
3042:fltk-1.3.4-1/png/pngread.c ****                      else if (alpha < 64)
3043:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_CMAP_RGB_ALPHA_BACKGROUND;
3044:fltk-1.3.4-1/png/pngread.c **** 
3045:fltk-1.3.4-1/png/pngread.c ****                      else
3046:fltk-1.3.4-1/png/pngread.c ****                      {
3047:fltk-1.3.4-1/png/pngread.c ****                         /* Likewise there are three entries for each of r, g
3048:fltk-1.3.4-1/png/pngread.c ****                          * and b.  We could select the entry by popcount on
3049:fltk-1.3.4-1/png/pngread.c ****                          * the top two bits on those architectures that
3050:fltk-1.3.4-1/png/pngread.c ****                          * support it, this is what the code below does,
3051:fltk-1.3.4-1/png/pngread.c ****                          * crudely.
3052:fltk-1.3.4-1/png/pngread.c ****                          */
3053:fltk-1.3.4-1/png/pngread.c ****                         unsigned int back_i = PNG_CMAP_RGB_ALPHA_BACKGROUND+1;
3054:fltk-1.3.4-1/png/pngread.c **** 
3055:fltk-1.3.4-1/png/pngread.c ****                         /* Here are how the values map:
3056:fltk-1.3.4-1/png/pngread.c ****                          *
3057:fltk-1.3.4-1/png/pngread.c ****                          * 0x00 .. 0x3f -> 0
3058:fltk-1.3.4-1/png/pngread.c ****                          * 0x40 .. 0xbf -> 1
3059:fltk-1.3.4-1/png/pngread.c ****                          * 0xc0 .. 0xff -> 2
3060:fltk-1.3.4-1/png/pngread.c ****                          *
3061:fltk-1.3.4-1/png/pngread.c ****                          * So, as above with the explicit alpha checks, the
3062:fltk-1.3.4-1/png/pngread.c ****                          * breakpoints are at 64 and 196.
3063:fltk-1.3.4-1/png/pngread.c ****                          */
3064:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 9; /* red */
3065:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 9;
3066:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 3; /* green */
3067:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 3;
3068:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 1; /* blue */
3069:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 1;
3070:fltk-1.3.4-1/png/pngread.c **** 
3071:fltk-1.3.4-1/png/pngread.c ****                         *outrow = (png_byte)back_i;
3072:fltk-1.3.4-1/png/pngread.c ****                      }
3073:fltk-1.3.4-1/png/pngread.c **** 
3074:fltk-1.3.4-1/png/pngread.c ****                      inrow += 4;
3075:fltk-1.3.4-1/png/pngread.c ****                   }
3076:fltk-1.3.4-1/png/pngread.c ****                   break;
3077:fltk-1.3.4-1/png/pngread.c **** 
3078:fltk-1.3.4-1/png/pngread.c ****                default:
3079:fltk-1.3.4-1/png/pngread.c ****                   break;
3080:fltk-1.3.4-1/png/pngread.c ****             }
3081:fltk-1.3.4-1/png/pngread.c ****          }
3082:fltk-1.3.4-1/png/pngread.c ****       }
3083:fltk-1.3.4-1/png/pngread.c ****    }
3084:fltk-1.3.4-1/png/pngread.c **** 
3085:fltk-1.3.4-1/png/pngread.c ****    return 1;
3086:fltk-1.3.4-1/png/pngread.c **** }
3087:fltk-1.3.4-1/png/pngread.c **** 
3088:fltk-1.3.4-1/png/pngread.c **** static int
3089:fltk-1.3.4-1/png/pngread.c **** png_image_read_colormapped(png_voidp argument)
3090:fltk-1.3.4-1/png/pngread.c **** {
3091:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
3092:fltk-1.3.4-1/png/pngread.c ****       argument);
3093:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
3094:fltk-1.3.4-1/png/pngread.c ****    png_controlp control = image->opaque;
3095:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = control->png_ptr;
3096:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = control->info_ptr;
3097:fltk-1.3.4-1/png/pngread.c **** 
3098:fltk-1.3.4-1/png/pngread.c ****    int passes = 0; /* As a flag */
3099:fltk-1.3.4-1/png/pngread.c **** 
3100:fltk-1.3.4-1/png/pngread.c ****    PNG_SKIP_CHUNKS(png_ptr);
3101:fltk-1.3.4-1/png/pngread.c **** 
3102:fltk-1.3.4-1/png/pngread.c ****    /* Update the 'info' structure and make sure the result is as required; first
3103:fltk-1.3.4-1/png/pngread.c ****     * make sure to turn on the interlace handling if it will be required
3104:fltk-1.3.4-1/png/pngread.c ****     * (because it can't be turned on *after* the call to png_read_update_info!)
3105:fltk-1.3.4-1/png/pngread.c ****     */
3106:fltk-1.3.4-1/png/pngread.c ****    if (display->colormap_processing == PNG_CMAP_NONE)
3107:fltk-1.3.4-1/png/pngread.c ****       passes = png_set_interlace_handling(png_ptr);
3108:fltk-1.3.4-1/png/pngread.c **** 
3109:fltk-1.3.4-1/png/pngread.c ****    png_read_update_info(png_ptr, info_ptr);
3110:fltk-1.3.4-1/png/pngread.c **** 
3111:fltk-1.3.4-1/png/pngread.c ****    /* The expected output can be deduced from the colormap_processing option. */
3112:fltk-1.3.4-1/png/pngread.c ****    switch (display->colormap_processing)
3113:fltk-1.3.4-1/png/pngread.c ****    {
3114:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_NONE:
3115:fltk-1.3.4-1/png/pngread.c ****          /* Output must be one channel and one byte per pixel, the output
3116:fltk-1.3.4-1/png/pngread.c ****           * encoding can be anything.
3117:fltk-1.3.4-1/png/pngread.c ****           */
3118:fltk-1.3.4-1/png/pngread.c ****          if ((info_ptr->color_type == PNG_COLOR_TYPE_PALETTE ||
3119:fltk-1.3.4-1/png/pngread.c ****             info_ptr->color_type == PNG_COLOR_TYPE_GRAY) &&
3120:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8)
3121:fltk-1.3.4-1/png/pngread.c ****             break;
3122:fltk-1.3.4-1/png/pngread.c **** 
3123:fltk-1.3.4-1/png/pngread.c ****          goto bad_output;
3124:fltk-1.3.4-1/png/pngread.c **** 
3125:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_TRANS:
3126:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_GA:
3127:fltk-1.3.4-1/png/pngread.c ****          /* Output must be two channels and the 'G' one must be sRGB, the latter
3128:fltk-1.3.4-1/png/pngread.c ****           * can be checked with an exact number because it should have been set
3129:fltk-1.3.4-1/png/pngread.c ****           * to this number above!
3130:fltk-1.3.4-1/png/pngread.c ****           */
3131:fltk-1.3.4-1/png/pngread.c ****          if (info_ptr->color_type == PNG_COLOR_TYPE_GRAY_ALPHA &&
3132:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
3133:fltk-1.3.4-1/png/pngread.c ****             png_ptr->screen_gamma == PNG_GAMMA_sRGB &&
3134:fltk-1.3.4-1/png/pngread.c ****             image->colormap_entries == 256)
3135:fltk-1.3.4-1/png/pngread.c ****             break;
3136:fltk-1.3.4-1/png/pngread.c **** 
3137:fltk-1.3.4-1/png/pngread.c ****          goto bad_output;
3138:fltk-1.3.4-1/png/pngread.c **** 
3139:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_RGB:
3140:fltk-1.3.4-1/png/pngread.c ****          /* Output must be 8-bit sRGB encoded RGB */
3141:fltk-1.3.4-1/png/pngread.c ****          if (info_ptr->color_type == PNG_COLOR_TYPE_RGB &&
3142:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
3143:fltk-1.3.4-1/png/pngread.c ****             png_ptr->screen_gamma == PNG_GAMMA_sRGB &&
3144:fltk-1.3.4-1/png/pngread.c ****             image->colormap_entries == 216)
3145:fltk-1.3.4-1/png/pngread.c ****             break;
3146:fltk-1.3.4-1/png/pngread.c **** 
3147:fltk-1.3.4-1/png/pngread.c ****          goto bad_output;
3148:fltk-1.3.4-1/png/pngread.c **** 
3149:fltk-1.3.4-1/png/pngread.c ****       case PNG_CMAP_RGB_ALPHA:
3150:fltk-1.3.4-1/png/pngread.c ****          /* Output must be 8-bit sRGB encoded RGBA */
3151:fltk-1.3.4-1/png/pngread.c ****          if (info_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA &&
3152:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
3153:fltk-1.3.4-1/png/pngread.c ****             png_ptr->screen_gamma == PNG_GAMMA_sRGB &&
3154:fltk-1.3.4-1/png/pngread.c ****             image->colormap_entries == 244 /* 216 + 1 + 27 */)
3155:fltk-1.3.4-1/png/pngread.c ****             break;
3156:fltk-1.3.4-1/png/pngread.c **** 
3157:fltk-1.3.4-1/png/pngread.c ****          /* goto bad_output; */
3158:fltk-1.3.4-1/png/pngread.c ****          /* FALL THROUGH */
3159:fltk-1.3.4-1/png/pngread.c **** 
3160:fltk-1.3.4-1/png/pngread.c ****       default:
3161:fltk-1.3.4-1/png/pngread.c ****       bad_output:
3162:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "bad color-map processing (internal error)");
3163:fltk-1.3.4-1/png/pngread.c ****    }
3164:fltk-1.3.4-1/png/pngread.c **** 
3165:fltk-1.3.4-1/png/pngread.c ****    /* Now read the rows.  Do this here if it is possible to read directly into
3166:fltk-1.3.4-1/png/pngread.c ****     * the output buffer, otherwise allocate a local row buffer of the maximum
3167:fltk-1.3.4-1/png/pngread.c ****     * size libpng requires and call the relevant processing routine safely.
3168:fltk-1.3.4-1/png/pngread.c ****     */
3169:fltk-1.3.4-1/png/pngread.c ****    {
3170:fltk-1.3.4-1/png/pngread.c ****       png_voidp first_row = display->buffer;
3171:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
3172:fltk-1.3.4-1/png/pngread.c **** 
3173:fltk-1.3.4-1/png/pngread.c ****       /* The following expression is designed to work correctly whether it gives
3174:fltk-1.3.4-1/png/pngread.c ****        * a signed or an unsigned result.
3175:fltk-1.3.4-1/png/pngread.c ****        */
3176:fltk-1.3.4-1/png/pngread.c ****       if (row_bytes < 0)
3177:fltk-1.3.4-1/png/pngread.c ****       {
3178:fltk-1.3.4-1/png/pngread.c ****          char *ptr = png_voidcast(char*, first_row);
3179:fltk-1.3.4-1/png/pngread.c ****          ptr += (image->height-1) * (-row_bytes);
3180:fltk-1.3.4-1/png/pngread.c ****          first_row = png_voidcast(png_voidp, ptr);
3181:fltk-1.3.4-1/png/pngread.c ****       }
3182:fltk-1.3.4-1/png/pngread.c **** 
3183:fltk-1.3.4-1/png/pngread.c ****       display->first_row = first_row;
3184:fltk-1.3.4-1/png/pngread.c ****       display->row_bytes = row_bytes;
3185:fltk-1.3.4-1/png/pngread.c ****    }
3186:fltk-1.3.4-1/png/pngread.c **** 
3187:fltk-1.3.4-1/png/pngread.c ****    if (passes == 0)
3188:fltk-1.3.4-1/png/pngread.c ****    {
3189:fltk-1.3.4-1/png/pngread.c ****       int result;
3190:fltk-1.3.4-1/png/pngread.c ****       png_voidp row = png_malloc(png_ptr, png_get_rowbytes(png_ptr, info_ptr));
3191:fltk-1.3.4-1/png/pngread.c **** 
3192:fltk-1.3.4-1/png/pngread.c ****       display->local_row = row;
3193:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_and_map, display);
3194:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
3195:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, row);
3196:fltk-1.3.4-1/png/pngread.c **** 
3197:fltk-1.3.4-1/png/pngread.c ****       return result;
3198:fltk-1.3.4-1/png/pngread.c ****    }
3199:fltk-1.3.4-1/png/pngread.c **** 
3200:fltk-1.3.4-1/png/pngread.c ****    else
3201:fltk-1.3.4-1/png/pngread.c ****    {
3202:fltk-1.3.4-1/png/pngread.c ****       png_alloc_size_t row_bytes = display->row_bytes;
3203:fltk-1.3.4-1/png/pngread.c **** 
3204:fltk-1.3.4-1/png/pngread.c ****       while (--passes >= 0)
3205:fltk-1.3.4-1/png/pngread.c ****       {
3206:fltk-1.3.4-1/png/pngread.c ****          png_uint_32      y = image->height;
3207:fltk-1.3.4-1/png/pngread.c ****          png_bytep        row = png_voidcast(png_bytep, display->first_row);
3208:fltk-1.3.4-1/png/pngread.c **** 
3209:fltk-1.3.4-1/png/pngread.c ****          while (y-- > 0)
3210:fltk-1.3.4-1/png/pngread.c ****          {
3211:fltk-1.3.4-1/png/pngread.c ****             png_read_row(png_ptr, row, NULL);
3212:fltk-1.3.4-1/png/pngread.c ****             row += row_bytes;
3213:fltk-1.3.4-1/png/pngread.c ****          }
3214:fltk-1.3.4-1/png/pngread.c ****       }
3215:fltk-1.3.4-1/png/pngread.c **** 
3216:fltk-1.3.4-1/png/pngread.c ****       return 1;
3217:fltk-1.3.4-1/png/pngread.c ****    }
3218:fltk-1.3.4-1/png/pngread.c **** }
3219:fltk-1.3.4-1/png/pngread.c **** 
3220:fltk-1.3.4-1/png/pngread.c **** /* Just the row reading part of png_image_read. */
3221:fltk-1.3.4-1/png/pngread.c **** static int
3222:fltk-1.3.4-1/png/pngread.c **** png_image_read_composite(png_voidp argument)
3223:fltk-1.3.4-1/png/pngread.c **** {
3224:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
3225:fltk-1.3.4-1/png/pngread.c ****       argument);
3226:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
3227:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
3228:fltk-1.3.4-1/png/pngread.c ****    int passes;
3229:fltk-1.3.4-1/png/pngread.c **** 
3230:fltk-1.3.4-1/png/pngread.c ****    switch (png_ptr->interlaced)
3231:fltk-1.3.4-1/png/pngread.c ****    {
3232:fltk-1.3.4-1/png/pngread.c ****       case PNG_INTERLACE_NONE:
3233:fltk-1.3.4-1/png/pngread.c ****          passes = 1;
3234:fltk-1.3.4-1/png/pngread.c ****          break;
3235:fltk-1.3.4-1/png/pngread.c **** 
3236:fltk-1.3.4-1/png/pngread.c ****       case PNG_INTERLACE_ADAM7:
3237:fltk-1.3.4-1/png/pngread.c ****          passes = PNG_INTERLACE_ADAM7_PASSES;
3238:fltk-1.3.4-1/png/pngread.c ****          break;
3239:fltk-1.3.4-1/png/pngread.c **** 
3240:fltk-1.3.4-1/png/pngread.c ****       default:
3241:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "unknown interlace type");
3242:fltk-1.3.4-1/png/pngread.c ****    }
3243:fltk-1.3.4-1/png/pngread.c **** 
3244:fltk-1.3.4-1/png/pngread.c ****    {
3245:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  height = image->height;
3246:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  width = image->width;
3247:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
3248:fltk-1.3.4-1/png/pngread.c ****       unsigned int channels =
3249:fltk-1.3.4-1/png/pngread.c ****          (image->format & PNG_FORMAT_FLAG_COLOR) != 0 ? 3 : 1;
3250:fltk-1.3.4-1/png/pngread.c ****       int pass;
3251:fltk-1.3.4-1/png/pngread.c **** 
3252:fltk-1.3.4-1/png/pngread.c ****       for (pass = 0; pass < passes; ++pass)
3253:fltk-1.3.4-1/png/pngread.c ****       {
3254:fltk-1.3.4-1/png/pngread.c ****          unsigned int     startx, stepx, stepy;
3255:fltk-1.3.4-1/png/pngread.c ****          png_uint_32      y;
3256:fltk-1.3.4-1/png/pngread.c **** 
3257:fltk-1.3.4-1/png/pngread.c ****          if (png_ptr->interlaced == PNG_INTERLACE_ADAM7)
3258:fltk-1.3.4-1/png/pngread.c ****          {
3259:fltk-1.3.4-1/png/pngread.c ****             /* The row may be empty for a short image: */
3260:fltk-1.3.4-1/png/pngread.c ****             if (PNG_PASS_COLS(width, pass) == 0)
3261:fltk-1.3.4-1/png/pngread.c ****                continue;
3262:fltk-1.3.4-1/png/pngread.c **** 
3263:fltk-1.3.4-1/png/pngread.c ****             startx = PNG_PASS_START_COL(pass) * channels;
3264:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass) * channels;
3265:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
3266:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
3267:fltk-1.3.4-1/png/pngread.c ****          }
3268:fltk-1.3.4-1/png/pngread.c **** 
3269:fltk-1.3.4-1/png/pngread.c ****          else
3270:fltk-1.3.4-1/png/pngread.c ****          {
3271:fltk-1.3.4-1/png/pngread.c ****             y = 0;
3272:fltk-1.3.4-1/png/pngread.c ****             startx = 0;
3273:fltk-1.3.4-1/png/pngread.c ****             stepx = channels;
3274:fltk-1.3.4-1/png/pngread.c ****             stepy = 1;
3275:fltk-1.3.4-1/png/pngread.c ****          }
3276:fltk-1.3.4-1/png/pngread.c **** 
3277:fltk-1.3.4-1/png/pngread.c ****          for (; y<height; y += stepy)
3278:fltk-1.3.4-1/png/pngread.c ****          {
3279:fltk-1.3.4-1/png/pngread.c ****             png_bytep inrow = png_voidcast(png_bytep, display->local_row);
3280:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow;
3281:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep end_row;
3282:fltk-1.3.4-1/png/pngread.c **** 
3283:fltk-1.3.4-1/png/pngread.c ****             /* Read the row, which is packed: */
3284:fltk-1.3.4-1/png/pngread.c ****             png_read_row(png_ptr, inrow, NULL);
3285:fltk-1.3.4-1/png/pngread.c **** 
3286:fltk-1.3.4-1/png/pngread.c ****             outrow = png_voidcast(png_bytep, display->first_row);
3287:fltk-1.3.4-1/png/pngread.c ****             outrow += y * step_row;
3288:fltk-1.3.4-1/png/pngread.c ****             end_row = outrow + width * channels;
3289:fltk-1.3.4-1/png/pngread.c **** 
3290:fltk-1.3.4-1/png/pngread.c ****             /* Now do the composition on each pixel in this row. */
3291:fltk-1.3.4-1/png/pngread.c ****             outrow += startx;
3292:fltk-1.3.4-1/png/pngread.c ****             for (; outrow < end_row; outrow += stepx)
3293:fltk-1.3.4-1/png/pngread.c ****             {
3294:fltk-1.3.4-1/png/pngread.c ****                png_byte alpha = inrow[channels];
3295:fltk-1.3.4-1/png/pngread.c **** 
3296:fltk-1.3.4-1/png/pngread.c ****                if (alpha > 0) /* else no change to the output */
3297:fltk-1.3.4-1/png/pngread.c ****                {
3298:fltk-1.3.4-1/png/pngread.c ****                   unsigned int c;
3299:fltk-1.3.4-1/png/pngread.c **** 
3300:fltk-1.3.4-1/png/pngread.c ****                   for (c=0; c<channels; ++c)
3301:fltk-1.3.4-1/png/pngread.c ****                   {
3302:fltk-1.3.4-1/png/pngread.c ****                      png_uint_32 component = inrow[c];
3303:fltk-1.3.4-1/png/pngread.c **** 
3304:fltk-1.3.4-1/png/pngread.c ****                      if (alpha < 255) /* else just use component */
3305:fltk-1.3.4-1/png/pngread.c ****                      {
3306:fltk-1.3.4-1/png/pngread.c ****                         /* This is PNG_OPTIMIZED_ALPHA, the component value
3307:fltk-1.3.4-1/png/pngread.c ****                          * is a linear 8-bit value.  Combine this with the
3308:fltk-1.3.4-1/png/pngread.c ****                          * current outrow[c] value which is sRGB encoded.
3309:fltk-1.3.4-1/png/pngread.c ****                          * Arithmetic here is 16-bits to preserve the output
3310:fltk-1.3.4-1/png/pngread.c ****                          * values correctly.
3311:fltk-1.3.4-1/png/pngread.c ****                          */
3312:fltk-1.3.4-1/png/pngread.c ****                         component *= 257*255; /* =65535 */
3313:fltk-1.3.4-1/png/pngread.c ****                         component += (255-alpha)*png_sRGB_table[outrow[c]];
3314:fltk-1.3.4-1/png/pngread.c **** 
3315:fltk-1.3.4-1/png/pngread.c ****                         /* So 'component' is scaled by 255*65535 and is
3316:fltk-1.3.4-1/png/pngread.c ****                          * therefore appropriate for the sRGB to linear
3317:fltk-1.3.4-1/png/pngread.c ****                          * conversion table.
3318:fltk-1.3.4-1/png/pngread.c ****                          */
3319:fltk-1.3.4-1/png/pngread.c ****                         component = PNG_sRGB_FROM_LINEAR(component);
3320:fltk-1.3.4-1/png/pngread.c ****                      }
3321:fltk-1.3.4-1/png/pngread.c **** 
3322:fltk-1.3.4-1/png/pngread.c ****                      outrow[c] = (png_byte)component;
3323:fltk-1.3.4-1/png/pngread.c ****                   }
3324:fltk-1.3.4-1/png/pngread.c ****                }
3325:fltk-1.3.4-1/png/pngread.c **** 
3326:fltk-1.3.4-1/png/pngread.c ****                inrow += channels+1; /* components and alpha channel */
3327:fltk-1.3.4-1/png/pngread.c ****             }
3328:fltk-1.3.4-1/png/pngread.c ****          }
3329:fltk-1.3.4-1/png/pngread.c ****       }
3330:fltk-1.3.4-1/png/pngread.c ****    }
3331:fltk-1.3.4-1/png/pngread.c **** 
3332:fltk-1.3.4-1/png/pngread.c ****    return 1;
3333:fltk-1.3.4-1/png/pngread.c **** }
3334:fltk-1.3.4-1/png/pngread.c **** 
3335:fltk-1.3.4-1/png/pngread.c **** /* The do_local_background case; called when all the following transforms are to
3336:fltk-1.3.4-1/png/pngread.c ****  * be done:
3337:fltk-1.3.4-1/png/pngread.c ****  *
3338:fltk-1.3.4-1/png/pngread.c ****  * PNG_RGB_TO_GRAY
3339:fltk-1.3.4-1/png/pngread.c ****  * PNG_COMPOSITE
3340:fltk-1.3.4-1/png/pngread.c ****  * PNG_GAMMA
3341:fltk-1.3.4-1/png/pngread.c ****  *
3342:fltk-1.3.4-1/png/pngread.c ****  * This is a work-around for the fact that both the PNG_RGB_TO_GRAY and
3343:fltk-1.3.4-1/png/pngread.c ****  * PNG_COMPOSITE code performs gamma correction, so we get double gamma
3344:fltk-1.3.4-1/png/pngread.c ****  * correction.  The fix-up is to prevent the PNG_COMPOSITE operation from
3345:fltk-1.3.4-1/png/pngread.c ****  * happening inside libpng, so this routine sees an 8 or 16-bit gray+alpha
3346:fltk-1.3.4-1/png/pngread.c ****  * row and handles the removal or pre-multiplication of the alpha channel.
3347:fltk-1.3.4-1/png/pngread.c ****  */
3348:fltk-1.3.4-1/png/pngread.c **** static int
3349:fltk-1.3.4-1/png/pngread.c **** png_image_read_background(png_voidp argument)
3350:fltk-1.3.4-1/png/pngread.c **** {
3351:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
3352:fltk-1.3.4-1/png/pngread.c ****       argument);
3353:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
3354:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
3355:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
3356:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 height = image->height;
3357:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 width = image->width;
3358:fltk-1.3.4-1/png/pngread.c ****    int pass, passes;
3359:fltk-1.3.4-1/png/pngread.c **** 
3360:fltk-1.3.4-1/png/pngread.c ****    /* Double check the convoluted logic below.  We expect to get here with
3361:fltk-1.3.4-1/png/pngread.c ****     * libpng doing rgb to gray and gamma correction but background processing
3362:fltk-1.3.4-1/png/pngread.c ****     * left to the png_image_read_background function.  The rows libpng produce
3363:fltk-1.3.4-1/png/pngread.c ****     * might be 8 or 16-bit but should always have two channels; gray plus alpha.
3364:fltk-1.3.4-1/png/pngread.c ****     */
3365:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_RGB_TO_GRAY) == 0)
3366:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost rgb to gray");
3367:fltk-1.3.4-1/png/pngread.c **** 
3368:fltk-1.3.4-1/png/pngread.c ****    if ((png_ptr->transformations & PNG_COMPOSE) != 0)
3369:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "unexpected compose");
3370:fltk-1.3.4-1/png/pngread.c **** 
3371:fltk-1.3.4-1/png/pngread.c ****    if (png_get_channels(png_ptr, info_ptr) != 2)
3372:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost/gained channels");
3373:fltk-1.3.4-1/png/pngread.c **** 
3374:fltk-1.3.4-1/png/pngread.c ****    /* Expect the 8-bit case to always remove the alpha channel */
3375:fltk-1.3.4-1/png/pngread.c ****    if ((image->format & PNG_FORMAT_FLAG_LINEAR) == 0 &&
3376:fltk-1.3.4-1/png/pngread.c ****       (image->format & PNG_FORMAT_FLAG_ALPHA) != 0)
3377:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "unexpected 8-bit transformation");
3378:fltk-1.3.4-1/png/pngread.c **** 
3379:fltk-1.3.4-1/png/pngread.c ****    switch (png_ptr->interlaced)
3380:fltk-1.3.4-1/png/pngread.c ****    {
3381:fltk-1.3.4-1/png/pngread.c ****       case PNG_INTERLACE_NONE:
3382:fltk-1.3.4-1/png/pngread.c ****          passes = 1;
3383:fltk-1.3.4-1/png/pngread.c ****          break;
3384:fltk-1.3.4-1/png/pngread.c **** 
3385:fltk-1.3.4-1/png/pngread.c ****       case PNG_INTERLACE_ADAM7:
3386:fltk-1.3.4-1/png/pngread.c ****          passes = PNG_INTERLACE_ADAM7_PASSES;
3387:fltk-1.3.4-1/png/pngread.c ****          break;
3388:fltk-1.3.4-1/png/pngread.c **** 
3389:fltk-1.3.4-1/png/pngread.c ****       default:
3390:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "unknown interlace type");
3391:fltk-1.3.4-1/png/pngread.c ****    }
3392:fltk-1.3.4-1/png/pngread.c **** 
3393:fltk-1.3.4-1/png/pngread.c ****    /* Use direct access to info_ptr here because otherwise the simplified API
3394:fltk-1.3.4-1/png/pngread.c ****     * would require PNG_EASY_ACCESS_SUPPORTED (just for this.)  Note this is
3395:fltk-1.3.4-1/png/pngread.c ****     * checking the value after libpng expansions, not the original value in the
3396:fltk-1.3.4-1/png/pngread.c ****     * PNG.
3397:fltk-1.3.4-1/png/pngread.c ****     */
3398:fltk-1.3.4-1/png/pngread.c ****    switch (info_ptr->bit_depth)
3399:fltk-1.3.4-1/png/pngread.c ****    {
3400:fltk-1.3.4-1/png/pngread.c ****       default:
3401:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "unexpected bit depth");
3402:fltk-1.3.4-1/png/pngread.c ****          break;
3403:fltk-1.3.4-1/png/pngread.c **** 
3404:fltk-1.3.4-1/png/pngread.c ****       case 8:
3405:fltk-1.3.4-1/png/pngread.c ****          /* 8-bit sRGB gray values with an alpha channel; the alpha channel is
3406:fltk-1.3.4-1/png/pngread.c ****           * to be removed by composing on a background: either the row if
3407:fltk-1.3.4-1/png/pngread.c ****           * display->background is NULL or display->background->green if not.
3408:fltk-1.3.4-1/png/pngread.c ****           * Unlike the code above ALPHA_OPTIMIZED has *not* been done.
3409:fltk-1.3.4-1/png/pngread.c ****           */
3410:fltk-1.3.4-1/png/pngread.c ****          {
3411:fltk-1.3.4-1/png/pngread.c ****             png_bytep first_row = png_voidcast(png_bytep, display->first_row);
3412:fltk-1.3.4-1/png/pngread.c ****             ptrdiff_t step_row = display->row_bytes;
3413:fltk-1.3.4-1/png/pngread.c **** 
3414:fltk-1.3.4-1/png/pngread.c ****             for (pass = 0; pass < passes; ++pass)
3415:fltk-1.3.4-1/png/pngread.c ****             {
3416:fltk-1.3.4-1/png/pngread.c ****                png_bytep        row = png_voidcast(png_bytep,
3417:fltk-1.3.4-1/png/pngread.c ****                                                    display->first_row);
3418:fltk-1.3.4-1/png/pngread.c ****                unsigned int     startx, stepx, stepy;
3419:fltk-1.3.4-1/png/pngread.c ****                png_uint_32      y;
3420:fltk-1.3.4-1/png/pngread.c **** 
3421:fltk-1.3.4-1/png/pngread.c ****                if (png_ptr->interlaced == PNG_INTERLACE_ADAM7)
3422:fltk-1.3.4-1/png/pngread.c ****                {
3423:fltk-1.3.4-1/png/pngread.c ****                   /* The row may be empty for a short image: */
3424:fltk-1.3.4-1/png/pngread.c ****                   if (PNG_PASS_COLS(width, pass) == 0)
3425:fltk-1.3.4-1/png/pngread.c ****                      continue;
3426:fltk-1.3.4-1/png/pngread.c **** 
3427:fltk-1.3.4-1/png/pngread.c ****                   startx = PNG_PASS_START_COL(pass);
3428:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass);
3429:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
3430:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
3431:fltk-1.3.4-1/png/pngread.c ****                }
3432:fltk-1.3.4-1/png/pngread.c **** 
3433:fltk-1.3.4-1/png/pngread.c ****                else
3434:fltk-1.3.4-1/png/pngread.c ****                {
3435:fltk-1.3.4-1/png/pngread.c ****                   y = 0;
3436:fltk-1.3.4-1/png/pngread.c ****                   startx = 0;
3437:fltk-1.3.4-1/png/pngread.c ****                   stepx = stepy = 1;
3438:fltk-1.3.4-1/png/pngread.c ****                }
3439:fltk-1.3.4-1/png/pngread.c **** 
3440:fltk-1.3.4-1/png/pngread.c ****                if (display->background == NULL)
3441:fltk-1.3.4-1/png/pngread.c ****                {
3442:fltk-1.3.4-1/png/pngread.c ****                   for (; y<height; y += stepy)
3443:fltk-1.3.4-1/png/pngread.c ****                   {
3444:fltk-1.3.4-1/png/pngread.c ****                      png_bytep inrow = png_voidcast(png_bytep,
3445:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
3446:fltk-1.3.4-1/png/pngread.c ****                      png_bytep outrow = first_row + y * step_row;
3447:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
3448:fltk-1.3.4-1/png/pngread.c **** 
3449:fltk-1.3.4-1/png/pngread.c ****                      /* Read the row, which is packed: */
3450:fltk-1.3.4-1/png/pngread.c ****                      png_read_row(png_ptr, inrow, NULL);
3451:fltk-1.3.4-1/png/pngread.c **** 
3452:fltk-1.3.4-1/png/pngread.c ****                      /* Now do the composition on each pixel in this row. */
3453:fltk-1.3.4-1/png/pngread.c ****                      outrow += startx;
3454:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
3455:fltk-1.3.4-1/png/pngread.c ****                      {
3456:fltk-1.3.4-1/png/pngread.c ****                         png_byte alpha = inrow[1];
3457:fltk-1.3.4-1/png/pngread.c **** 
3458:fltk-1.3.4-1/png/pngread.c ****                         if (alpha > 0) /* else no change to the output */
3459:fltk-1.3.4-1/png/pngread.c ****                         {
3460:fltk-1.3.4-1/png/pngread.c ****                            png_uint_32 component = inrow[0];
3461:fltk-1.3.4-1/png/pngread.c **** 
3462:fltk-1.3.4-1/png/pngread.c ****                            if (alpha < 255) /* else just use component */
3463:fltk-1.3.4-1/png/pngread.c ****                            {
3464:fltk-1.3.4-1/png/pngread.c ****                               /* Since PNG_OPTIMIZED_ALPHA was not set it is
3465:fltk-1.3.4-1/png/pngread.c ****                                * necessary to invert the sRGB transfer
3466:fltk-1.3.4-1/png/pngread.c ****                                * function and multiply the alpha out.
3467:fltk-1.3.4-1/png/pngread.c ****                                */
3468:fltk-1.3.4-1/png/pngread.c ****                               component = png_sRGB_table[component] * alpha;
3469:fltk-1.3.4-1/png/pngread.c ****                               component += png_sRGB_table[outrow[0]] *
3470:fltk-1.3.4-1/png/pngread.c ****                                  (255-alpha);
3471:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
3472:fltk-1.3.4-1/png/pngread.c ****                            }
3473:fltk-1.3.4-1/png/pngread.c **** 
3474:fltk-1.3.4-1/png/pngread.c ****                            outrow[0] = (png_byte)component;
3475:fltk-1.3.4-1/png/pngread.c ****                         }
3476:fltk-1.3.4-1/png/pngread.c **** 
3477:fltk-1.3.4-1/png/pngread.c ****                         inrow += 2; /* gray and alpha channel */
3478:fltk-1.3.4-1/png/pngread.c ****                      }
3479:fltk-1.3.4-1/png/pngread.c ****                   }
3480:fltk-1.3.4-1/png/pngread.c ****                }
3481:fltk-1.3.4-1/png/pngread.c **** 
3482:fltk-1.3.4-1/png/pngread.c ****                else /* constant background value */
3483:fltk-1.3.4-1/png/pngread.c ****                {
3484:fltk-1.3.4-1/png/pngread.c ****                   png_byte background8 = display->background->green;
3485:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16 background = png_sRGB_table[background8];
3486:fltk-1.3.4-1/png/pngread.c **** 
3487:fltk-1.3.4-1/png/pngread.c ****                   for (; y<height; y += stepy)
3488:fltk-1.3.4-1/png/pngread.c ****                   {
3489:fltk-1.3.4-1/png/pngread.c ****                      png_bytep inrow = png_voidcast(png_bytep,
3490:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
3491:fltk-1.3.4-1/png/pngread.c ****                      png_bytep outrow = first_row + y * step_row;
3492:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
3493:fltk-1.3.4-1/png/pngread.c **** 
3494:fltk-1.3.4-1/png/pngread.c ****                      /* Read the row, which is packed: */
3495:fltk-1.3.4-1/png/pngread.c ****                      png_read_row(png_ptr, inrow, NULL);
3496:fltk-1.3.4-1/png/pngread.c **** 
3497:fltk-1.3.4-1/png/pngread.c ****                      /* Now do the composition on each pixel in this row. */
3498:fltk-1.3.4-1/png/pngread.c ****                      outrow += startx;
3499:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
3500:fltk-1.3.4-1/png/pngread.c ****                      {
3501:fltk-1.3.4-1/png/pngread.c ****                         png_byte alpha = inrow[1];
3502:fltk-1.3.4-1/png/pngread.c **** 
3503:fltk-1.3.4-1/png/pngread.c ****                         if (alpha > 0) /* else use background */
3504:fltk-1.3.4-1/png/pngread.c ****                         {
3505:fltk-1.3.4-1/png/pngread.c ****                            png_uint_32 component = inrow[0];
3506:fltk-1.3.4-1/png/pngread.c **** 
3507:fltk-1.3.4-1/png/pngread.c ****                            if (alpha < 255) /* else just use component */
3508:fltk-1.3.4-1/png/pngread.c ****                            {
3509:fltk-1.3.4-1/png/pngread.c ****                               component = png_sRGB_table[component] * alpha;
3510:fltk-1.3.4-1/png/pngread.c ****                               component += background * (255-alpha);
3511:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
3512:fltk-1.3.4-1/png/pngread.c ****                            }
3513:fltk-1.3.4-1/png/pngread.c **** 
3514:fltk-1.3.4-1/png/pngread.c ****                            outrow[0] = (png_byte)component;
3515:fltk-1.3.4-1/png/pngread.c ****                         }
3516:fltk-1.3.4-1/png/pngread.c **** 
3517:fltk-1.3.4-1/png/pngread.c ****                         else
3518:fltk-1.3.4-1/png/pngread.c ****                            outrow[0] = background8;
3519:fltk-1.3.4-1/png/pngread.c **** 
3520:fltk-1.3.4-1/png/pngread.c ****                         inrow += 2; /* gray and alpha channel */
3521:fltk-1.3.4-1/png/pngread.c ****                      }
3522:fltk-1.3.4-1/png/pngread.c **** 
3523:fltk-1.3.4-1/png/pngread.c ****                      row += display->row_bytes;
3524:fltk-1.3.4-1/png/pngread.c ****                   }
3525:fltk-1.3.4-1/png/pngread.c ****                }
3526:fltk-1.3.4-1/png/pngread.c ****             }
3527:fltk-1.3.4-1/png/pngread.c ****          }
3528:fltk-1.3.4-1/png/pngread.c ****          break;
3529:fltk-1.3.4-1/png/pngread.c **** 
3530:fltk-1.3.4-1/png/pngread.c ****       case 16:
3531:fltk-1.3.4-1/png/pngread.c ****          /* 16-bit linear with pre-multiplied alpha; the pre-multiplication must
3532:fltk-1.3.4-1/png/pngread.c ****           * still be done and, maybe, the alpha channel removed.  This code also
3533:fltk-1.3.4-1/png/pngread.c ****           * handles the alpha-first option.
3534:fltk-1.3.4-1/png/pngread.c ****           */
3535:fltk-1.3.4-1/png/pngread.c ****          {
3536:fltk-1.3.4-1/png/pngread.c ****             png_uint_16p first_row = png_voidcast(png_uint_16p,
3537:fltk-1.3.4-1/png/pngread.c ****                display->first_row);
3538:fltk-1.3.4-1/png/pngread.c ****             /* The division by two is safe because the caller passed in a
3539:fltk-1.3.4-1/png/pngread.c ****              * stride which was multiplied by 2 (below) to get row_bytes.
3540:fltk-1.3.4-1/png/pngread.c ****              */
3541:fltk-1.3.4-1/png/pngread.c ****             ptrdiff_t    step_row = display->row_bytes / 2;
3542:fltk-1.3.4-1/png/pngread.c ****             int preserve_alpha = (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
3543:fltk-1.3.4-1/png/pngread.c ****             unsigned int outchannels = 1+preserve_alpha;
3544:fltk-1.3.4-1/png/pngread.c ****             int swap_alpha = 0;
3545:fltk-1.3.4-1/png/pngread.c **** 
3546:fltk-1.3.4-1/png/pngread.c **** #           ifdef PNG_SIMPLIFIED_READ_AFIRST_SUPPORTED
3547:fltk-1.3.4-1/png/pngread.c ****                if (preserve_alpha != 0 &&
3548:fltk-1.3.4-1/png/pngread.c ****                    (image->format & PNG_FORMAT_FLAG_AFIRST) != 0)
3549:fltk-1.3.4-1/png/pngread.c ****                   swap_alpha = 1;
3550:fltk-1.3.4-1/png/pngread.c **** #           endif
3551:fltk-1.3.4-1/png/pngread.c **** 
3552:fltk-1.3.4-1/png/pngread.c ****             for (pass = 0; pass < passes; ++pass)
3553:fltk-1.3.4-1/png/pngread.c ****             {
3554:fltk-1.3.4-1/png/pngread.c ****                unsigned int     startx, stepx, stepy;
3555:fltk-1.3.4-1/png/pngread.c ****                png_uint_32      y;
3556:fltk-1.3.4-1/png/pngread.c **** 
3557:fltk-1.3.4-1/png/pngread.c ****                /* The 'x' start and step are adjusted to output components here.
3558:fltk-1.3.4-1/png/pngread.c ****                 */
3559:fltk-1.3.4-1/png/pngread.c ****                if (png_ptr->interlaced == PNG_INTERLACE_ADAM7)
3560:fltk-1.3.4-1/png/pngread.c ****                {
3561:fltk-1.3.4-1/png/pngread.c ****                   /* The row may be empty for a short image: */
3562:fltk-1.3.4-1/png/pngread.c ****                   if (PNG_PASS_COLS(width, pass) == 0)
3563:fltk-1.3.4-1/png/pngread.c ****                      continue;
3564:fltk-1.3.4-1/png/pngread.c **** 
3565:fltk-1.3.4-1/png/pngread.c ****                   startx = PNG_PASS_START_COL(pass) * outchannels;
3566:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass) * outchannels;
3567:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
3568:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
3569:fltk-1.3.4-1/png/pngread.c ****                }
3570:fltk-1.3.4-1/png/pngread.c **** 
3571:fltk-1.3.4-1/png/pngread.c ****                else
3572:fltk-1.3.4-1/png/pngread.c ****                {
3573:fltk-1.3.4-1/png/pngread.c ****                   y = 0;
3574:fltk-1.3.4-1/png/pngread.c ****                   startx = 0;
3575:fltk-1.3.4-1/png/pngread.c ****                   stepx = outchannels;
3576:fltk-1.3.4-1/png/pngread.c ****                   stepy = 1;
3577:fltk-1.3.4-1/png/pngread.c ****                }
3578:fltk-1.3.4-1/png/pngread.c **** 
3579:fltk-1.3.4-1/png/pngread.c ****                for (; y<height; y += stepy)
3580:fltk-1.3.4-1/png/pngread.c ****                {
3581:fltk-1.3.4-1/png/pngread.c ****                   png_const_uint_16p inrow;
3582:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16p outrow = first_row + y*step_row;
3583:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16p end_row = outrow + width * outchannels;
3584:fltk-1.3.4-1/png/pngread.c **** 
3585:fltk-1.3.4-1/png/pngread.c ****                   /* Read the row, which is packed: */
3586:fltk-1.3.4-1/png/pngread.c ****                   png_read_row(png_ptr, png_voidcast(png_bytep,
3587:fltk-1.3.4-1/png/pngread.c ****                      display->local_row), NULL);
3588:fltk-1.3.4-1/png/pngread.c ****                   inrow = png_voidcast(png_const_uint_16p, display->local_row);
3589:fltk-1.3.4-1/png/pngread.c **** 
3590:fltk-1.3.4-1/png/pngread.c ****                   /* Now do the pre-multiplication on each pixel in this row.
3591:fltk-1.3.4-1/png/pngread.c ****                    */
3592:fltk-1.3.4-1/png/pngread.c ****                   outrow += startx;
3593:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
3594:fltk-1.3.4-1/png/pngread.c ****                   {
3595:fltk-1.3.4-1/png/pngread.c ****                      png_uint_32 component = inrow[0];
3596:fltk-1.3.4-1/png/pngread.c ****                      png_uint_16 alpha = inrow[1];
3597:fltk-1.3.4-1/png/pngread.c **** 
3598:fltk-1.3.4-1/png/pngread.c ****                      if (alpha > 0) /* else 0 */
3599:fltk-1.3.4-1/png/pngread.c ****                      {
3600:fltk-1.3.4-1/png/pngread.c ****                         if (alpha < 65535) /* else just use component */
3601:fltk-1.3.4-1/png/pngread.c ****                         {
3602:fltk-1.3.4-1/png/pngread.c ****                            component *= alpha;
3603:fltk-1.3.4-1/png/pngread.c ****                            component += 32767;
3604:fltk-1.3.4-1/png/pngread.c ****                            component /= 65535;
3605:fltk-1.3.4-1/png/pngread.c ****                         }
3606:fltk-1.3.4-1/png/pngread.c ****                      }
3607:fltk-1.3.4-1/png/pngread.c **** 
3608:fltk-1.3.4-1/png/pngread.c ****                      else
3609:fltk-1.3.4-1/png/pngread.c ****                         component = 0;
3610:fltk-1.3.4-1/png/pngread.c **** 
3611:fltk-1.3.4-1/png/pngread.c ****                      outrow[swap_alpha] = (png_uint_16)component;
3612:fltk-1.3.4-1/png/pngread.c ****                      if (preserve_alpha != 0)
3613:fltk-1.3.4-1/png/pngread.c ****                         outrow[1 ^ swap_alpha] = alpha;
3614:fltk-1.3.4-1/png/pngread.c **** 
3615:fltk-1.3.4-1/png/pngread.c ****                      inrow += 2; /* components and alpha channel */
3616:fltk-1.3.4-1/png/pngread.c ****                   }
3617:fltk-1.3.4-1/png/pngread.c ****                }
3618:fltk-1.3.4-1/png/pngread.c ****             }
3619:fltk-1.3.4-1/png/pngread.c ****          }
3620:fltk-1.3.4-1/png/pngread.c ****          break;
3621:fltk-1.3.4-1/png/pngread.c ****    }
3622:fltk-1.3.4-1/png/pngread.c **** 
3623:fltk-1.3.4-1/png/pngread.c ****    return 1;
3624:fltk-1.3.4-1/png/pngread.c **** }
3625:fltk-1.3.4-1/png/pngread.c **** 
3626:fltk-1.3.4-1/png/pngread.c **** /* The guts of png_image_finish_read as a png_safe_execute callback. */
3627:fltk-1.3.4-1/png/pngread.c **** static int
3628:fltk-1.3.4-1/png/pngread.c **** png_image_read_direct(png_voidp argument)
3629:fltk-1.3.4-1/png/pngread.c **** {
 7007              		.loc 1 3629 1 view -0
 7008              		.cfi_startproc
 7009              		.loc 1 3629 1 is_stmt 0 view .LVU1949
 7010 0000 F30F1EFA 		endbr64
 7011 0004 4157     		pushq	%r15
 7012              		.cfi_def_cfa_offset 16
 7013              		.cfi_offset 15, -16
 7014 0006 4156     		pushq	%r14
 7015              		.cfi_def_cfa_offset 24
 7016              		.cfi_offset 14, -24
 7017 0008 4155     		pushq	%r13
 7018              		.cfi_def_cfa_offset 32
 7019              		.cfi_offset 13, -32
 7020 000a 4154     		pushq	%r12
 7021              		.cfi_def_cfa_offset 40
 7022              		.cfi_offset 12, -40
 7023 000c 55       		pushq	%rbp
 7024              		.cfi_def_cfa_offset 48
 7025              		.cfi_offset 6, -48
 7026 000d 53       		pushq	%rbx
 7027              		.cfi_def_cfa_offset 56
 7028              		.cfi_offset 3, -56
 7029 000e 4883EC48 		subq	$72, %rsp
 7030              		.cfi_def_cfa_offset 128
3630:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
3631:fltk-1.3.4-1/png/pngread.c ****       argument);
3632:fltk-1.3.4-1/png/pngread.c ****    png_imagep image = display->image;
 7031              		.loc 1 3632 15 view .LVU1950
 7032 0012 4C8B27   		movq	(%rdi), %r12
3629:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 7033              		.loc 1 3629 1 view .LVU1951
 7034 0015 48893C24 		movq	%rdi, (%rsp)
3633:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 7035              		.loc 1 3633 32 view .LVU1952
 7036 0019 498B0424 		movq	(%r12), %rax
3634:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
3635:fltk-1.3.4-1/png/pngread.c **** 
3636:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 format = image->format;
 7037              		.loc 1 3636 16 view .LVU1953
 7038 001d 418B5C24 		movl	20(%r12), %ebx
 7038      14
3629:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 7039              		.loc 1 3629 1 view .LVU1954
 7040 0022 64488B0C 		movq	%fs:40, %rcx
 7040      25280000 
 7040      00
 7041 002b 48894C24 		movq	%rcx, 56(%rsp)
 7041      38
 7042 0030 31C9     		xorl	%ecx, %ecx
3630:fltk-1.3.4-1/png/pngread.c ****       argument);
 7043              		.loc 1 3630 4 is_stmt 1 view .LVU1955
 7044              	.LVL726:
3632:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 7045              		.loc 1 3632 4 view .LVU1956
3633:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 7046              		.loc 1 3633 4 view .LVU1957
3633:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 7047              		.loc 1 3633 17 is_stmt 0 view .LVU1958
 7048 0032 4C8B38   		movq	(%rax), %r15
 7049              	.LVL727:
3634:fltk-1.3.4-1/png/pngread.c **** 
 7050              		.loc 1 3634 4 is_stmt 1 view .LVU1959
3634:fltk-1.3.4-1/png/pngread.c **** 
 7051              		.loc 1 3634 15 is_stmt 0 view .LVU1960
 7052 0035 4C8B6808 		movq	8(%rax), %r13
 7053              	.LVL728:
 7054              		.loc 1 3636 4 is_stmt 1 view .LVU1961
3637:fltk-1.3.4-1/png/pngread.c ****    int linear = (format & PNG_FORMAT_FLAG_LINEAR) != 0;
 7055              		.loc 1 3637 4 view .LVU1962
 7056              		.loc 1 3637 25 is_stmt 0 view .LVU1963
 7057 0039 89D8     		movl	%ebx, %eax
 7058 003b 83E004   		andl	$4, %eax
3638:fltk-1.3.4-1/png/pngread.c ****    int do_local_compose = 0;
3639:fltk-1.3.4-1/png/pngread.c ****    int do_local_background = 0; /* to avoid double gamma correction bug */
3640:fltk-1.3.4-1/png/pngread.c ****    int passes = 0;
3641:fltk-1.3.4-1/png/pngread.c **** 
3642:fltk-1.3.4-1/png/pngread.c ****    /* Add transforms to ensure the correct output format is produced then check
3643:fltk-1.3.4-1/png/pngread.c ****     * that the required implementation support is there.  Always expand; always
3644:fltk-1.3.4-1/png/pngread.c ****     * need 8 bits minimum, no palette and expanded tRNS.
3645:fltk-1.3.4-1/png/pngread.c ****     */
3646:fltk-1.3.4-1/png/pngread.c ****    png_set_expand(png_ptr);
 7059              		.loc 1 3646 4 view .LVU1964
 7060 003e 4C89FF   		movq	%r15, %rdi
 7061              	.LVL729:
3637:fltk-1.3.4-1/png/pngread.c ****    int linear = (format & PNG_FORMAT_FLAG_LINEAR) != 0;
 7062              		.loc 1 3637 25 view .LVU1965
 7063 0041 89442410 		movl	%eax, 16(%rsp)
 7064              	.LVL730:
3638:fltk-1.3.4-1/png/pngread.c ****    int do_local_compose = 0;
 7065              		.loc 1 3638 4 is_stmt 1 view .LVU1966
3639:fltk-1.3.4-1/png/pngread.c ****    int passes = 0;
 7066              		.loc 1 3639 4 view .LVU1967
3640:fltk-1.3.4-1/png/pngread.c **** 
 7067              		.loc 1 3640 4 view .LVU1968
 7068              		.loc 1 3646 4 view .LVU1969
 7069 0045 E8000000 		call	png_set_expand@PLT
 7069      00
 7070              	.LVL731:
 7071              	.LBB252:
3647:fltk-1.3.4-1/png/pngread.c **** 
3648:fltk-1.3.4-1/png/pngread.c ****    /* Now check the format to see if it was modified. */
3649:fltk-1.3.4-1/png/pngread.c ****    {
3650:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 base_format = png_image_format(png_ptr) &
 7072              		.loc 1 3650 7 view .LVU1970
 7073              		.loc 1 3650 33 is_stmt 0 view .LVU1971
 7074 004a 4C89FF   		movq	%r15, %rdi
 7075 004d E8000000 		call	png_image_format
 7075      00
 7076              	.LVL732:
 7077              	.LBE252:
3639:fltk-1.3.4-1/png/pngread.c ****    int passes = 0;
 7078              		.loc 1 3639 8 view .LVU1972
 7079 0052 C744240C 		movl	$0, 12(%rsp)
 7079      00000000 
 7080              	.LBB259:
 7081              		.loc 1 3650 19 view .LVU1973
 7082 005a 4189C2   		movl	%eax, %r10d
 7083              		.loc 1 3650 33 view .LVU1974
 7084 005d 89C5     		movl	%eax, %ebp
 7085              	.LVL733:
3651:fltk-1.3.4-1/png/pngread.c ****          ~PNG_FORMAT_FLAG_COLORMAP /* removed by png_set_expand */;
3652:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 change = format ^ base_format;
 7086              		.loc 1 3652 7 is_stmt 1 view .LVU1975
3650:fltk-1.3.4-1/png/pngread.c ****          ~PNG_FORMAT_FLAG_COLORMAP /* removed by png_set_expand */;
 7087              		.loc 1 3650 19 is_stmt 0 view .LVU1976
 7088 005f 4183E2F7 		andl	$-9, %r10d
 7089              	.LVL734:
 7090              		.loc 1 3652 19 view .LVU1977
 7091 0063 4131DA   		xorl	%ebx, %r10d
 7092              	.LVL735:
 7093              		.loc 1 3652 19 view .LVU1978
 7094 0066 4589D6   		movl	%r10d, %r14d
 7095              	.LVL736:
3653:fltk-1.3.4-1/png/pngread.c ****       png_fixed_point output_gamma;
 7096              		.loc 1 3653 7 is_stmt 1 view .LVU1979
3654:fltk-1.3.4-1/png/pngread.c ****       int mode; /* alpha mode */
 7097              		.loc 1 3654 7 view .LVU1980
3655:fltk-1.3.4-1/png/pngread.c **** 
3656:fltk-1.3.4-1/png/pngread.c ****       /* Do this first so that we have a record if rgb to gray is happening. */
3657:fltk-1.3.4-1/png/pngread.c ****       if ((change & PNG_FORMAT_FLAG_COLOR) != 0)
 7098              		.loc 1 3657 7 view .LVU1981
 7099              		.loc 1 3657 10 is_stmt 0 view .LVU1982
 7100 0069 4183E202 		andl	$2, %r10d
 7101              	.LVL737:
 7102              		.loc 1 3657 10 view .LVU1983
 7103 006d 7428     		je	.L664
3658:fltk-1.3.4-1/png/pngread.c ****       {
3659:fltk-1.3.4-1/png/pngread.c ****          /* gray<->color transformation required. */
3660:fltk-1.3.4-1/png/pngread.c ****          if ((format & PNG_FORMAT_FLAG_COLOR) != 0)
 7104              		.loc 1 3660 10 is_stmt 1 view .LVU1984
 7105              		.loc 1 3660 13 is_stmt 0 view .LVU1985
 7106 006f F6C302   		testb	$2, %bl
 7107 0072 0F85C903 		jne	.L774
 7107      0000
3661:fltk-1.3.4-1/png/pngread.c ****             png_set_gray_to_rgb(png_ptr);
3662:fltk-1.3.4-1/png/pngread.c **** 
3663:fltk-1.3.4-1/png/pngread.c ****          else
3664:fltk-1.3.4-1/png/pngread.c ****          {
3665:fltk-1.3.4-1/png/pngread.c ****             /* libpng can't do both rgb to gray and
3666:fltk-1.3.4-1/png/pngread.c ****              * background/pre-multiplication if there is also significant gamma
3667:fltk-1.3.4-1/png/pngread.c ****              * correction, because both operations require linear colors and
3668:fltk-1.3.4-1/png/pngread.c ****              * the code only supports one transform doing the gamma correction.
3669:fltk-1.3.4-1/png/pngread.c ****              * Handle this by doing the pre-multiplication or background
3670:fltk-1.3.4-1/png/pngread.c ****              * operation in this code, if necessary.
3671:fltk-1.3.4-1/png/pngread.c ****              *
3672:fltk-1.3.4-1/png/pngread.c ****              * TODO: fix this by rewriting pngrtran.c (!)
3673:fltk-1.3.4-1/png/pngread.c ****              *
3674:fltk-1.3.4-1/png/pngread.c ****              * For the moment (given that fixing this in pngrtran.c is an
3675:fltk-1.3.4-1/png/pngread.c ****              * enormous change) 'do_local_background' is used to indicate that
3676:fltk-1.3.4-1/png/pngread.c ****              * the problem exists.
3677:fltk-1.3.4-1/png/pngread.c ****              */
3678:fltk-1.3.4-1/png/pngread.c ****             if ((base_format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7108              		.loc 1 3678 13 is_stmt 1 view .LVU1986
 7109              		.loc 1 3678 30 is_stmt 0 view .LVU1987
 7110 0078 83E001   		andl	$1, %eax
 7111              	.LVL738:
3679:fltk-1.3.4-1/png/pngread.c ****                do_local_background = 1/*maybe*/;
3680:fltk-1.3.4-1/png/pngread.c **** 
3681:fltk-1.3.4-1/png/pngread.c ****             png_set_rgb_to_gray_fixed(png_ptr, PNG_ERROR_ACTION_NONE,
 7112              		.loc 1 3681 13 view .LVU1988
 7113 007b B9FFFFFF 		movl	$-1, %ecx
 7113      FF
 7114 0080 BAFFFFFF 		movl	$-1, %edx
 7114      FF
 7115 0085 BE010000 		movl	$1, %esi
 7115      00
3678:fltk-1.3.4-1/png/pngread.c ****                do_local_background = 1/*maybe*/;
 7116              		.loc 1 3678 30 view .LVU1989
 7117 008a 8944240C 		movl	%eax, 12(%rsp)
 7118              	.LVL739:
 7119              		.loc 1 3681 13 is_stmt 1 view .LVU1990
 7120 008e E8000000 		call	png_set_rgb_to_gray_fixed@PLT
 7120      00
 7121              	.LVL740:
 7122              	.L666:
3682:fltk-1.3.4-1/png/pngread.c ****                PNG_RGB_TO_GRAY_DEFAULT, PNG_RGB_TO_GRAY_DEFAULT);
3683:fltk-1.3.4-1/png/pngread.c ****          }
3684:fltk-1.3.4-1/png/pngread.c **** 
3685:fltk-1.3.4-1/png/pngread.c ****          change &= ~PNG_FORMAT_FLAG_COLOR;
 7123              		.loc 1 3685 10 view .LVU1991
 7124              		.loc 1 3685 17 is_stmt 0 view .LVU1992
 7125 0093 4183E6FD 		andl	$-3, %r14d
 7126              	.LVL741:
 7127              	.L664:
 7128              	.LBB253:
3686:fltk-1.3.4-1/png/pngread.c ****       }
3687:fltk-1.3.4-1/png/pngread.c **** 
3688:fltk-1.3.4-1/png/pngread.c ****       /* Set the gamma appropriately, linear for 16-bit input, sRGB otherwise.
3689:fltk-1.3.4-1/png/pngread.c ****        */
3690:fltk-1.3.4-1/png/pngread.c ****       {
3691:fltk-1.3.4-1/png/pngread.c ****          png_fixed_point input_gamma_default;
 7129              		.loc 1 3691 10 is_stmt 1 view .LVU1993
3692:fltk-1.3.4-1/png/pngread.c **** 
3693:fltk-1.3.4-1/png/pngread.c ****          if ((base_format & PNG_FORMAT_FLAG_LINEAR) != 0 &&
 7130              		.loc 1 3693 10 view .LVU1994
3694:fltk-1.3.4-1/png/pngread.c ****              (image->flags & PNG_IMAGE_FLAG_16BIT_sRGB) == 0)
3695:fltk-1.3.4-1/png/pngread.c ****             input_gamma_default = PNG_GAMMA_LINEAR;
3696:fltk-1.3.4-1/png/pngread.c ****          else
3697:fltk-1.3.4-1/png/pngread.c ****             input_gamma_default = PNG_DEFAULT_sRGB;
 7131              		.loc 1 3697 33 is_stmt 0 view .LVU1995
 7132 0097 BAFFFFFF 		movl	$-1, %edx
 7132      FF
3693:fltk-1.3.4-1/png/pngread.c ****              (image->flags & PNG_IMAGE_FLAG_16BIT_sRGB) == 0)
 7133              		.loc 1 3693 13 view .LVU1996
 7134 009c 40F6C504 		testb	$4, %bpl
 7135 00a0 7416     		je	.L667
3694:fltk-1.3.4-1/png/pngread.c ****              (image->flags & PNG_IMAGE_FLAG_16BIT_sRGB) == 0)
 7136              		.loc 1 3694 28 discriminator 1 view .LVU1997
 7137 00a2 418B4424 		movl	24(%r12), %eax
 7137      18
 7138 00a7 83E004   		andl	$4, %eax
3695:fltk-1.3.4-1/png/pngread.c ****          else
 7139              		.loc 1 3695 33 discriminator 1 view .LVU1998
 7140 00aa 83F801   		cmpl	$1, %eax
 7141 00ad 19D2     		sbbl	%edx, %edx
 7142 00af 81E2A186 		andl	$100001, %edx
 7142      0100
 7143 00b5 83EA01   		subl	$1, %edx
 7144              	.L667:
 7145              	.LVL742:
3698:fltk-1.3.4-1/png/pngread.c **** 
3699:fltk-1.3.4-1/png/pngread.c ****          /* Call png_set_alpha_mode to set the default for the input gamma; the
3700:fltk-1.3.4-1/png/pngread.c ****           * output gamma is set by a second call below.
3701:fltk-1.3.4-1/png/pngread.c ****           */
3702:fltk-1.3.4-1/png/pngread.c ****          png_set_alpha_mode_fixed(png_ptr, PNG_ALPHA_PNG, input_gamma_default);
 7146              		.loc 1 3702 10 is_stmt 1 view .LVU1999
 7147 00b8 31F6     		xorl	%esi, %esi
 7148 00ba 4C89FF   		movq	%r15, %rdi
 7149 00bd E8000000 		call	png_set_alpha_mode_fixed@PLT
 7149      00
 7150              	.LVL743:
 7151              		.loc 1 3702 10 is_stmt 0 view .LVU2000
 7152              	.LBE253:
3703:fltk-1.3.4-1/png/pngread.c ****       }
3704:fltk-1.3.4-1/png/pngread.c **** 
3705:fltk-1.3.4-1/png/pngread.c ****       if (linear != 0)
 7153              		.loc 1 3705 7 is_stmt 1 view .LVU2001
 7154              		.loc 1 3705 10 is_stmt 0 view .LVU2002
 7155 00c2 8B442410 		movl	16(%rsp), %eax
 7156 00c6 85C0     		testl	%eax, %eax
 7157 00c8 0F84CA02 		je	.L719
 7157      0000
3706:fltk-1.3.4-1/png/pngread.c ****       {
3707:fltk-1.3.4-1/png/pngread.c ****          /* If there *is* an alpha channel in the input it must be multiplied
3708:fltk-1.3.4-1/png/pngread.c ****           * out; use PNG_ALPHA_STANDARD, otherwise just use PNG_ALPHA_PNG.
3709:fltk-1.3.4-1/png/pngread.c ****           */
3710:fltk-1.3.4-1/png/pngread.c ****          if ((base_format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7158              		.loc 1 3710 10 is_stmt 1 view .LVU2003
3711:fltk-1.3.4-1/png/pngread.c ****             mode = PNG_ALPHA_STANDARD; /* associated alpha */
3712:fltk-1.3.4-1/png/pngread.c **** 
3713:fltk-1.3.4-1/png/pngread.c ****          else
3714:fltk-1.3.4-1/png/pngread.c ****             mode = PNG_ALPHA_PNG;
3715:fltk-1.3.4-1/png/pngread.c **** 
3716:fltk-1.3.4-1/png/pngread.c ****          output_gamma = PNG_GAMMA_LINEAR;
3717:fltk-1.3.4-1/png/pngread.c ****       }
3718:fltk-1.3.4-1/png/pngread.c **** 
3719:fltk-1.3.4-1/png/pngread.c ****       else
3720:fltk-1.3.4-1/png/pngread.c ****       {
3721:fltk-1.3.4-1/png/pngread.c ****          mode = PNG_ALPHA_PNG;
3722:fltk-1.3.4-1/png/pngread.c ****          output_gamma = PNG_DEFAULT_sRGB;
3723:fltk-1.3.4-1/png/pngread.c ****       }
3724:fltk-1.3.4-1/png/pngread.c **** 
3725:fltk-1.3.4-1/png/pngread.c ****       /* If 'do_local_background' is set check for the presence of gamma
3726:fltk-1.3.4-1/png/pngread.c ****        * correction; this is part of the work-round for the libpng bug
3727:fltk-1.3.4-1/png/pngread.c ****        * described above.
3728:fltk-1.3.4-1/png/pngread.c ****        *
3729:fltk-1.3.4-1/png/pngread.c ****        * TODO: fix libpng and remove this.
3730:fltk-1.3.4-1/png/pngread.c ****        */
3731:fltk-1.3.4-1/png/pngread.c ****       if (do_local_background != 0)
 7159              		.loc 1 3731 10 is_stmt 0 view .LVU2004
 7160 00ce 8B44240C 		movl	12(%rsp), %eax
3710:fltk-1.3.4-1/png/pngread.c ****             mode = PNG_ALPHA_STANDARD; /* associated alpha */
 7161              		.loc 1 3710 27 view .LVU2005
 7162 00d2 4189E9   		movl	%ebp, %r9d
3716:fltk-1.3.4-1/png/pngread.c ****       }
 7163              		.loc 1 3716 23 view .LVU2006
 7164 00d5 41BBA086 		movl	$100000, %r11d
 7164      0100
3710:fltk-1.3.4-1/png/pngread.c ****             mode = PNG_ALPHA_STANDARD; /* associated alpha */
 7165              		.loc 1 3710 27 view .LVU2007
 7166 00db 4183E101 		andl	$1, %r9d
 7167              	.LVL744:
 7168              		.loc 1 3731 7 is_stmt 1 view .LVU2008
 7169              		.loc 1 3731 10 is_stmt 0 view .LVU2009
 7170 00df 85C0     		testl	%eax, %eax
 7171 00e1 0F85C602 		jne	.L775
 7171      0000
 7172              	.LVL745:
 7173              	.L669:
3732:fltk-1.3.4-1/png/pngread.c ****       {
3733:fltk-1.3.4-1/png/pngread.c ****          png_fixed_point gtest;
3734:fltk-1.3.4-1/png/pngread.c **** 
3735:fltk-1.3.4-1/png/pngread.c ****          /* This is 'png_gamma_threshold' from pngrtran.c; the test used for
3736:fltk-1.3.4-1/png/pngread.c ****           * gamma correction, the screen gamma hasn't been set on png_struct
3737:fltk-1.3.4-1/png/pngread.c ****           * yet; it's set below.  png_struct::gamma, however, is set to the
3738:fltk-1.3.4-1/png/pngread.c ****           * final value.
3739:fltk-1.3.4-1/png/pngread.c ****           */
3740:fltk-1.3.4-1/png/pngread.c ****          if (png_muldiv(&gtest, output_gamma, png_ptr->colorspace.gamma,
3741:fltk-1.3.4-1/png/pngread.c ****                PNG_FP_1) != 0 && png_gamma_significant(gtest) == 0)
3742:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 0;
3743:fltk-1.3.4-1/png/pngread.c **** 
3744:fltk-1.3.4-1/png/pngread.c ****          else if (mode == PNG_ALPHA_STANDARD)
3745:fltk-1.3.4-1/png/pngread.c ****          {
3746:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 2/*required*/;
3747:fltk-1.3.4-1/png/pngread.c ****             mode = PNG_ALPHA_PNG; /* prevent libpng doing it */
3748:fltk-1.3.4-1/png/pngread.c ****          }
3749:fltk-1.3.4-1/png/pngread.c **** 
3750:fltk-1.3.4-1/png/pngread.c ****          /* else leave as 1 for the checks below */
3751:fltk-1.3.4-1/png/pngread.c ****       }
3752:fltk-1.3.4-1/png/pngread.c **** 
3753:fltk-1.3.4-1/png/pngread.c ****       /* If the bit-depth changes then handle that here. */
3754:fltk-1.3.4-1/png/pngread.c ****       if ((change & PNG_FORMAT_FLAG_LINEAR) != 0)
 7174              		.loc 1 3754 7 is_stmt 1 view .LVU2010
 7175              		.loc 1 3754 10 is_stmt 0 view .LVU2011
 7176 00e7 41F6C604 		testb	$4, %r14b
 7177 00eb 742C     		je	.L673
3755:fltk-1.3.4-1/png/pngread.c ****       {
3756:fltk-1.3.4-1/png/pngread.c ****          if (linear != 0 /*16-bit output*/)
 7178              		.loc 1 3756 10 is_stmt 1 view .LVU2012
 7179              		.loc 1 3756 13 is_stmt 0 view .LVU2013
 7180 00ed 8B442410 		movl	16(%rsp), %eax
 7181 00f1 44894C24 		movl	%r9d, 24(%rsp)
 7181      18
3757:fltk-1.3.4-1/png/pngread.c ****             png_set_expand_16(png_ptr);
 7182              		.loc 1 3757 13 view .LVU2014
 7183 00f6 4C89FF   		movq	%r15, %rdi
 7184 00f9 44895C24 		movl	%r11d, 20(%rsp)
 7184      14
 7185              		.loc 1 3757 13 is_stmt 1 view .LVU2015
3756:fltk-1.3.4-1/png/pngread.c ****             png_set_expand_16(png_ptr);
 7186              		.loc 1 3756 13 is_stmt 0 view .LVU2016
 7187 00fe 85C0     		testl	%eax, %eax
 7188 0100 0F844503 		je	.L674
 7188      0000
 7189              	.LVL746:
 7190              		.loc 1 3757 13 view .LVU2017
 7191 0106 E8000000 		call	png_set_expand_16@PLT
 7191      00
 7192              	.LVL747:
 7193              		.loc 1 3757 13 view .LVU2018
 7194 010b 448B5C24 		movl	20(%rsp), %r11d
 7194      14
 7195 0110 448B4C24 		movl	24(%rsp), %r9d
 7195      18
 7196              	.L675:
3758:fltk-1.3.4-1/png/pngread.c **** 
3759:fltk-1.3.4-1/png/pngread.c ****          else /* 8-bit output */
3760:fltk-1.3.4-1/png/pngread.c ****             png_set_scale_16(png_ptr);
3761:fltk-1.3.4-1/png/pngread.c **** 
3762:fltk-1.3.4-1/png/pngread.c ****          change &= ~PNG_FORMAT_FLAG_LINEAR;
 7197              		.loc 1 3762 10 is_stmt 1 view .LVU2019
 7198              		.loc 1 3762 17 is_stmt 0 view .LVU2020
 7199 0115 4183E6FB 		andl	$-5, %r14d
 7200              	.LVL748:
 7201              	.L673:
3763:fltk-1.3.4-1/png/pngread.c ****       }
3764:fltk-1.3.4-1/png/pngread.c **** 
3765:fltk-1.3.4-1/png/pngread.c ****       /* Now the background/alpha channel changes. */
3766:fltk-1.3.4-1/png/pngread.c ****       if ((change & PNG_FORMAT_FLAG_ALPHA) != 0)
 7202              		.loc 1 3766 7 is_stmt 1 view .LVU2021
 7203              	.LBE259:
3638:fltk-1.3.4-1/png/pngread.c ****    int do_local_background = 0; /* to avoid double gamma correction bug */
 7204              		.loc 1 3638 8 is_stmt 0 view .LVU2022
 7205 0119 C7442414 		movl	$0, 20(%rsp)
 7205      00000000 
 7206              	.LBB260:
 7207              		.loc 1 3766 10 view .LVU2023
 7208 0121 41F6C601 		testb	$1, %r14b
 7209 0125 0F84DC00 		je	.L676
 7209      0000
3767:fltk-1.3.4-1/png/pngread.c ****       {
3768:fltk-1.3.4-1/png/pngread.c ****          /* Removing an alpha channel requires composition for the 8-bit
3769:fltk-1.3.4-1/png/pngread.c ****           * formats; for the 16-bit it is already done, above, by the
3770:fltk-1.3.4-1/png/pngread.c ****           * pre-multiplication and the channel just needs to be stripped.
3771:fltk-1.3.4-1/png/pngread.c ****           */
3772:fltk-1.3.4-1/png/pngread.c ****          if ((base_format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7210              		.loc 1 3772 10 is_stmt 1 view .LVU2024
 7211              		.loc 1 3772 13 is_stmt 0 view .LVU2025
 7212 012b 83E501   		andl	$1, %ebp
 7213              	.LVL749:
 7214              		.loc 1 3772 13 view .LVU2026
 7215 012e 0F848800 		je	.L677
 7215      0000
3773:fltk-1.3.4-1/png/pngread.c ****          {
3774:fltk-1.3.4-1/png/pngread.c ****             /* If RGB->gray is happening the alpha channel must be left and the
3775:fltk-1.3.4-1/png/pngread.c ****              * operation completed locally.
3776:fltk-1.3.4-1/png/pngread.c ****              *
3777:fltk-1.3.4-1/png/pngread.c ****              * TODO: fix libpng and remove this.
3778:fltk-1.3.4-1/png/pngread.c ****              */
3779:fltk-1.3.4-1/png/pngread.c ****             if (do_local_background != 0)
 7216              		.loc 1 3779 13 is_stmt 1 view .LVU2027
 7217              		.loc 1 3779 16 is_stmt 0 view .LVU2028
 7218 0134 8B6C240C 		movl	12(%rsp), %ebp
 7219 0138 85ED     		testl	%ebp, %ebp
 7220 013a 0F85F803 		jne	.L721
 7220      0000
3780:fltk-1.3.4-1/png/pngread.c ****                do_local_background = 2/*required*/;
3781:fltk-1.3.4-1/png/pngread.c **** 
3782:fltk-1.3.4-1/png/pngread.c ****             /* 16-bit output: just remove the channel */
3783:fltk-1.3.4-1/png/pngread.c ****             else if (linear != 0) /* compose on black (well, pre-multiply) */
 7221              		.loc 1 3783 18 is_stmt 1 view .LVU2029
 7222              		.loc 1 3783 21 is_stmt 0 view .LVU2030
 7223 0140 448B5424 		movl	16(%rsp), %r10d
 7223      10
 7224 0145 44894C24 		movl	%r9d, 28(%rsp)
 7224      1C
 7225 014a 4585D2   		testl	%r10d, %r10d
 7226 014d 0F859E04 		jne	.L776
 7226      0000
3784:fltk-1.3.4-1/png/pngread.c ****                png_set_strip_alpha(png_ptr);
3785:fltk-1.3.4-1/png/pngread.c **** 
3786:fltk-1.3.4-1/png/pngread.c ****             /* 8-bit output: do an appropriate compose */
3787:fltk-1.3.4-1/png/pngread.c ****             else if (display->background != NULL)
 7227              		.loc 1 3787 18 is_stmt 1 view .LVU2031
 7228              		.loc 1 3787 29 is_stmt 0 view .LVU2032
 7229 0153 488B0424 		movq	(%rsp), %rax
 7230 0157 488B4020 		movq	32(%rax), %rax
 7231              		.loc 1 3787 21 view .LVU2033
 7232 015b 4885C0   		testq	%rax, %rax
 7233 015e 0F847A04 		je	.L722
 7233      0000
 7234              	.LBB254:
3788:fltk-1.3.4-1/png/pngread.c ****             {
3789:fltk-1.3.4-1/png/pngread.c ****                png_color_16 c;
3790:fltk-1.3.4-1/png/pngread.c **** 
3791:fltk-1.3.4-1/png/pngread.c ****                c.index = 0; /*unused*/
 7235              		.loc 1 3791 24 view .LVU2034
 7236 0164 C644242C 		movb	$0, 44(%rsp)
 7236      00
3792:fltk-1.3.4-1/png/pngread.c ****                c.red = display->background->red;
 7237              		.loc 1 3792 43 view .LVU2035
 7238 0169 0FB610   		movzbl	(%rax), %edx
3793:fltk-1.3.4-1/png/pngread.c ****                c.green = display->background->green;
3794:fltk-1.3.4-1/png/pngread.c ****                c.blue = display->background->blue;
3795:fltk-1.3.4-1/png/pngread.c ****                c.gray = display->background->green;
3796:fltk-1.3.4-1/png/pngread.c **** 
3797:fltk-1.3.4-1/png/pngread.c ****                /* This is always an 8-bit sRGB value, using the 'green' channel
3798:fltk-1.3.4-1/png/pngread.c ****                 * for gray is much better than calculating the luminance here;
3799:fltk-1.3.4-1/png/pngread.c ****                 * we can get off-by-one errors in that calculation relative to
3800:fltk-1.3.4-1/png/pngread.c ****                 * the app expectations and that will show up in transparent
3801:fltk-1.3.4-1/png/pngread.c ****                 * pixels.
3802:fltk-1.3.4-1/png/pngread.c ****                 */
3803:fltk-1.3.4-1/png/pngread.c ****                png_set_background_fixed(png_ptr, &c,
 7239              		.loc 1 3803 16 view .LVU2036
 7240 016c 488D7424 		leaq	44(%rsp), %rsi
 7240      2C
 7241 0171 4531C0   		xorl	%r8d, %r8d
 7242 0174 31C9     		xorl	%ecx, %ecx
 7243 0176 4C89FF   		movq	%r15, %rdi
 7244 0179 44895C24 		movl	%r11d, 24(%rsp)
 7244      18
3789:fltk-1.3.4-1/png/pngread.c **** 
 7245              		.loc 1 3789 16 is_stmt 1 view .LVU2037
3791:fltk-1.3.4-1/png/pngread.c ****                c.red = display->background->red;
 7246              		.loc 1 3791 16 view .LVU2038
3792:fltk-1.3.4-1/png/pngread.c ****                c.green = display->background->green;
 7247              		.loc 1 3792 16 view .LVU2039
3792:fltk-1.3.4-1/png/pngread.c ****                c.green = display->background->green;
 7248              		.loc 1 3792 43 is_stmt 0 view .LVU2040
 7249 017e 66895424 		movw	%dx, 46(%rsp)
 7249      2E
3793:fltk-1.3.4-1/png/pngread.c ****                c.blue = display->background->blue;
 7250              		.loc 1 3793 16 is_stmt 1 view .LVU2041
3793:fltk-1.3.4-1/png/pngread.c ****                c.blue = display->background->blue;
 7251              		.loc 1 3793 45 is_stmt 0 view .LVU2042
 7252 0183 0FB65001 		movzbl	1(%rax), %edx
 7253 0187 66895424 		movw	%dx, 48(%rsp)
 7253      30
3794:fltk-1.3.4-1/png/pngread.c ****                c.gray = display->background->green;
 7254              		.loc 1 3794 16 is_stmt 1 view .LVU2043
3794:fltk-1.3.4-1/png/pngread.c ****                c.gray = display->background->green;
 7255              		.loc 1 3794 44 is_stmt 0 view .LVU2044
 7256 018c 0FB65002 		movzbl	2(%rax), %edx
 7257 0190 66895424 		movw	%dx, 50(%rsp)
 7257      32
3795:fltk-1.3.4-1/png/pngread.c **** 
 7258              		.loc 1 3795 16 is_stmt 1 view .LVU2045
3795:fltk-1.3.4-1/png/pngread.c **** 
 7259              		.loc 1 3795 44 is_stmt 0 view .LVU2046
 7260 0195 0FB64001 		movzbl	1(%rax), %eax
 7261              		.loc 1 3803 16 view .LVU2047
 7262 0199 BA010000 		movl	$1, %edx
 7262      00
3795:fltk-1.3.4-1/png/pngread.c **** 
 7263              		.loc 1 3795 44 view .LVU2048
 7264 019e 66894424 		movw	%ax, 52(%rsp)
 7264      34
 7265              		.loc 1 3803 16 is_stmt 1 view .LVU2049
 7266 01a3 E8000000 		call	png_set_background_fixed@PLT
 7266      00
 7267              	.LVL750:
 7268              	.LBE254:
 7269              	.LBE260:
3638:fltk-1.3.4-1/png/pngread.c ****    int do_local_background = 0; /* to avoid double gamma correction bug */
 7270              		.loc 1 3638 8 is_stmt 0 view .LVU2050
 7271 01a8 8B442410 		movl	16(%rsp), %eax
 7272              	.LBB261:
 7273 01ac 448B5C24 		movl	24(%rsp), %r11d
 7273      18
 7274 01b1 448B4C24 		movl	28(%rsp), %r9d
 7274      1C
 7275              	.LBE261:
 7276 01b6 89442414 		movl	%eax, 20(%rsp)
 7277              	.LBB262:
 7278 01ba EB47     		jmp	.L678
 7279              	.L677:
 7280              	.LBB255:
3804:fltk-1.3.4-1/png/pngread.c ****                   PNG_BACKGROUND_GAMMA_SCREEN, 0/*need_expand*/,
3805:fltk-1.3.4-1/png/pngread.c ****                   0/*gamma: not used*/);
3806:fltk-1.3.4-1/png/pngread.c ****             }
3807:fltk-1.3.4-1/png/pngread.c **** 
3808:fltk-1.3.4-1/png/pngread.c ****             else /* compose on row: implemented below. */
3809:fltk-1.3.4-1/png/pngread.c ****             {
3810:fltk-1.3.4-1/png/pngread.c ****                do_local_compose = 1;
3811:fltk-1.3.4-1/png/pngread.c ****                /* This leaves the alpha channel in the output, so it has to be
3812:fltk-1.3.4-1/png/pngread.c ****                 * removed by the code below.  Set the encoding to the 'OPTIMIZE'
3813:fltk-1.3.4-1/png/pngread.c ****                 * one so the code only has to hack on the pixels that require
3814:fltk-1.3.4-1/png/pngread.c ****                 * composition.
3815:fltk-1.3.4-1/png/pngread.c ****                 */
3816:fltk-1.3.4-1/png/pngread.c ****                mode = PNG_ALPHA_OPTIMIZED;
3817:fltk-1.3.4-1/png/pngread.c ****             }
3818:fltk-1.3.4-1/png/pngread.c ****          }
3819:fltk-1.3.4-1/png/pngread.c **** 
3820:fltk-1.3.4-1/png/pngread.c ****          else /* output needs an alpha channel */
3821:fltk-1.3.4-1/png/pngread.c ****          {
3822:fltk-1.3.4-1/png/pngread.c ****             /* This is tricky because it happens before the swap operation has
3823:fltk-1.3.4-1/png/pngread.c ****              * been accomplished; however, the swap does *not* swap the added
3824:fltk-1.3.4-1/png/pngread.c ****              * alpha channel (weird API), so it must be added in the correct
3825:fltk-1.3.4-1/png/pngread.c ****              * place.
3826:fltk-1.3.4-1/png/pngread.c ****              */
3827:fltk-1.3.4-1/png/pngread.c ****             png_uint_32 filler; /* opaque filler */
 7281              		.loc 1 3827 13 is_stmt 1 view .LVU2051
3828:fltk-1.3.4-1/png/pngread.c ****             int where;
 7282              		.loc 1 3828 13 view .LVU2052
3829:fltk-1.3.4-1/png/pngread.c **** 
3830:fltk-1.3.4-1/png/pngread.c ****             if (linear != 0)
 7283              		.loc 1 3830 13 view .LVU2053
3831:fltk-1.3.4-1/png/pngread.c ****                filler = 65535;
3832:fltk-1.3.4-1/png/pngread.c **** 
3833:fltk-1.3.4-1/png/pngread.c ****             else
3834:fltk-1.3.4-1/png/pngread.c ****                filler = 255;
 7284              		.loc 1 3834 23 is_stmt 0 view .LVU2054
 7285 01bc 837C2410 		cmpl	$1, 16(%rsp)
 7285      01
3835:fltk-1.3.4-1/png/pngread.c **** 
3836:fltk-1.3.4-1/png/pngread.c **** #           ifdef PNG_FORMAT_AFIRST_SUPPORTED
3837:fltk-1.3.4-1/png/pngread.c ****                if ((format & PNG_FORMAT_FLAG_AFIRST) != 0)
3838:fltk-1.3.4-1/png/pngread.c ****                {
3839:fltk-1.3.4-1/png/pngread.c ****                   where = PNG_FILLER_BEFORE;
3840:fltk-1.3.4-1/png/pngread.c ****                   change &= ~PNG_FORMAT_FLAG_AFIRST;
3841:fltk-1.3.4-1/png/pngread.c ****                }
3842:fltk-1.3.4-1/png/pngread.c **** 
3843:fltk-1.3.4-1/png/pngread.c ****                else
3844:fltk-1.3.4-1/png/pngread.c **** #           endif
3845:fltk-1.3.4-1/png/pngread.c ****                where = PNG_FILLER_AFTER;
 7286              		.loc 1 3845 22 view .LVU2055
 7287 01c1 BA010000 		movl	$1, %edx
 7287      00
3834:fltk-1.3.4-1/png/pngread.c **** 
 7288              		.loc 1 3834 23 view .LVU2056
 7289 01c6 19F6     		sbbl	%esi, %esi
 7290 01c8 81E60001 		andl	$-65280, %esi
 7290      FFFF
 7291 01ce 81C6FFFF 		addl	$65535, %esi
 7291      0000
 7292              	.LVL751:
3837:fltk-1.3.4-1/png/pngread.c ****                {
 7293              		.loc 1 3837 16 is_stmt 1 view .LVU2057
3837:fltk-1.3.4-1/png/pngread.c ****                {
 7294              		.loc 1 3837 19 is_stmt 0 view .LVU2058
 7295 01d4 F6C320   		testb	$32, %bl
 7296 01d7 7406     		je	.L681
3839:fltk-1.3.4-1/png/pngread.c ****                   change &= ~PNG_FORMAT_FLAG_AFIRST;
 7297              		.loc 1 3839 19 is_stmt 1 view .LVU2059
 7298              	.LVL752:
3840:fltk-1.3.4-1/png/pngread.c ****                }
 7299              		.loc 1 3840 19 view .LVU2060
3840:fltk-1.3.4-1/png/pngread.c ****                }
 7300              		.loc 1 3840 26 is_stmt 0 view .LVU2061
 7301 01d9 4183E6DF 		andl	$-33, %r14d
 7302              	.LVL753:
3839:fltk-1.3.4-1/png/pngread.c ****                   change &= ~PNG_FORMAT_FLAG_AFIRST;
 7303              		.loc 1 3839 25 view .LVU2062
 7304 01dd 31D2     		xorl	%edx, %edx
 7305              	.LVL754:
 7306              	.L681:
3846:fltk-1.3.4-1/png/pngread.c **** 
3847:fltk-1.3.4-1/png/pngread.c ****             png_set_add_alpha(png_ptr, filler, where);
 7307              		.loc 1 3847 13 view .LVU2063
 7308 01df 4C89FF   		movq	%r15, %rdi
 7309 01e2 44894C24 		movl	%r9d, 28(%rsp)
 7309      1C
 7310 01e7 44895C24 		movl	%r11d, 24(%rsp)
 7310      18
 7311              	.LVL755:
 7312              		.loc 1 3847 13 is_stmt 1 view .LVU2064
 7313 01ec E8000000 		call	png_set_add_alpha@PLT
 7313      00
 7314              	.LVL756:
 7315              		.loc 1 3847 13 is_stmt 0 view .LVU2065
 7316 01f1 448B5C24 		movl	24(%rsp), %r11d
 7316      18
 7317 01f6 448B4C24 		movl	28(%rsp), %r9d
 7317      1C
 7318              	.LBE255:
 7319              	.LBE262:
3638:fltk-1.3.4-1/png/pngread.c ****    int do_local_background = 0; /* to avoid double gamma correction bug */
 7320              		.loc 1 3638 8 view .LVU2066
 7321 01fb C7442414 		movl	$0, 20(%rsp)
 7321      00000000 
 7322              	.LVL757:
 7323              	.L678:
 7324              	.LBB263:
3848:fltk-1.3.4-1/png/pngread.c ****          }
3849:fltk-1.3.4-1/png/pngread.c **** 
3850:fltk-1.3.4-1/png/pngread.c ****          /* This stops the (irrelevant) call to swap_alpha below. */
3851:fltk-1.3.4-1/png/pngread.c ****          change &= ~PNG_FORMAT_FLAG_ALPHA;
 7325              		.loc 1 3851 10 is_stmt 1 view .LVU2067
 7326              		.loc 1 3851 17 is_stmt 0 view .LVU2068
 7327 0203 4183E6FE 		andl	$-2, %r14d
 7328              	.LVL758:
 7329              	.L676:
3852:fltk-1.3.4-1/png/pngread.c ****       }
3853:fltk-1.3.4-1/png/pngread.c **** 
3854:fltk-1.3.4-1/png/pngread.c ****       /* Now set the alpha mode correctly; this is always done, even if there is
3855:fltk-1.3.4-1/png/pngread.c ****        * no alpha channel in either the input or the output because it correctly
3856:fltk-1.3.4-1/png/pngread.c ****        * sets the output gamma.
3857:fltk-1.3.4-1/png/pngread.c ****        */
3858:fltk-1.3.4-1/png/pngread.c ****       png_set_alpha_mode_fixed(png_ptr, mode, output_gamma);
 7330              		.loc 1 3858 7 is_stmt 1 view .LVU2069
 7331 0207 4489DA   		movl	%r11d, %edx
 7332 020a 4489CE   		movl	%r9d, %esi
 7333 020d 4C89FF   		movq	%r15, %rdi
 7334 0210 E8000000 		call	png_set_alpha_mode_fixed@PLT
 7334      00
 7335              	.LVL759:
3859:fltk-1.3.4-1/png/pngread.c **** 
3860:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_FORMAT_BGR_SUPPORTED
3861:fltk-1.3.4-1/png/pngread.c ****          if ((change & PNG_FORMAT_FLAG_BGR) != 0)
 7336              		.loc 1 3861 10 view .LVU2070
 7337              		.loc 1 3861 13 is_stmt 0 view .LVU2071
 7338 0215 41F6C610 		testb	$16, %r14b
 7339 0219 7410     		je	.L682
3862:fltk-1.3.4-1/png/pngread.c ****          {
3863:fltk-1.3.4-1/png/pngread.c ****             /* Check only the output format; PNG is never BGR; don't do this if
3864:fltk-1.3.4-1/png/pngread.c ****              * the output is gray, but fix up the 'format' value in that case.
3865:fltk-1.3.4-1/png/pngread.c ****              */
3866:fltk-1.3.4-1/png/pngread.c ****             if ((format & PNG_FORMAT_FLAG_COLOR) != 0)
 7340              		.loc 1 3866 13 is_stmt 1 view .LVU2072
 7341              		.loc 1 3866 16 is_stmt 0 view .LVU2073
 7342 021b F6C302   		testb	$2, %bl
 7343 021e 0F850703 		jne	.L777
 7343      0000
3867:fltk-1.3.4-1/png/pngread.c ****                png_set_bgr(png_ptr);
3868:fltk-1.3.4-1/png/pngread.c **** 
3869:fltk-1.3.4-1/png/pngread.c ****             else
3870:fltk-1.3.4-1/png/pngread.c ****                format &= ~PNG_FORMAT_FLAG_BGR;
 7344              		.loc 1 3870 16 is_stmt 1 view .LVU2074
 7345              		.loc 1 3870 23 is_stmt 0 view .LVU2075
 7346 0224 83E3EF   		andl	$-17, %ebx
 7347              	.LVL760:
 7348              	.L684:
3871:fltk-1.3.4-1/png/pngread.c **** 
3872:fltk-1.3.4-1/png/pngread.c ****             change &= ~PNG_FORMAT_FLAG_BGR;
 7349              		.loc 1 3872 13 is_stmt 1 view .LVU2076
 7350              		.loc 1 3872 20 is_stmt 0 view .LVU2077
 7351 0227 4183E6EF 		andl	$-17, %r14d
 7352              	.LVL761:
 7353              	.L682:
3873:fltk-1.3.4-1/png/pngread.c ****          }
3874:fltk-1.3.4-1/png/pngread.c **** #     endif
3875:fltk-1.3.4-1/png/pngread.c **** 
3876:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_FORMAT_AFIRST_SUPPORTED
3877:fltk-1.3.4-1/png/pngread.c ****          if ((change & PNG_FORMAT_FLAG_AFIRST) != 0)
 7354              		.loc 1 3877 10 is_stmt 1 view .LVU2078
 7355              		.loc 1 3877 13 is_stmt 0 view .LVU2079
 7356 022b 41F6C620 		testb	$32, %r14b
 7357 022f 7410     		je	.L685
3878:fltk-1.3.4-1/png/pngread.c ****          {
3879:fltk-1.3.4-1/png/pngread.c ****             /* Only relevant if there is an alpha channel - it's particularly
3880:fltk-1.3.4-1/png/pngread.c ****              * important to handle this correctly because do_local_compose may
3881:fltk-1.3.4-1/png/pngread.c ****              * be set above and then libpng will keep the alpha channel for this
3882:fltk-1.3.4-1/png/pngread.c ****              * code to remove.
3883:fltk-1.3.4-1/png/pngread.c ****              */
3884:fltk-1.3.4-1/png/pngread.c ****             if ((format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7358              		.loc 1 3884 13 is_stmt 1 view .LVU2080
 7359              		.loc 1 3884 16 is_stmt 0 view .LVU2081
 7360 0231 F6C301   		testb	$1, %bl
 7361 0234 0F85EF01 		jne	.L778
 7361      0000
3885:fltk-1.3.4-1/png/pngread.c ****             {
3886:fltk-1.3.4-1/png/pngread.c ****                /* Disable this if doing a local background,
3887:fltk-1.3.4-1/png/pngread.c ****                 * TODO: remove this when local background is no longer required.
3888:fltk-1.3.4-1/png/pngread.c ****                 */
3889:fltk-1.3.4-1/png/pngread.c ****                if (do_local_background != 2)
3890:fltk-1.3.4-1/png/pngread.c ****                   png_set_swap_alpha(png_ptr);
3891:fltk-1.3.4-1/png/pngread.c ****             }
3892:fltk-1.3.4-1/png/pngread.c **** 
3893:fltk-1.3.4-1/png/pngread.c ****             else
3894:fltk-1.3.4-1/png/pngread.c ****                format &= ~PNG_FORMAT_FLAG_AFIRST;
 7362              		.loc 1 3894 16 is_stmt 1 view .LVU2082
 7363              		.loc 1 3894 23 is_stmt 0 view .LVU2083
 7364 023a 83E3DF   		andl	$-33, %ebx
 7365              	.LVL762:
 7366              	.L687:
3895:fltk-1.3.4-1/png/pngread.c **** 
3896:fltk-1.3.4-1/png/pngread.c ****             change &= ~PNG_FORMAT_FLAG_AFIRST;
 7367              		.loc 1 3896 13 is_stmt 1 view .LVU2084
 7368              		.loc 1 3896 20 is_stmt 0 view .LVU2085
 7369 023d 4183E6DF 		andl	$-33, %r14d
 7370              	.LVL763:
 7371              	.L685:
3897:fltk-1.3.4-1/png/pngread.c ****          }
3898:fltk-1.3.4-1/png/pngread.c **** #     endif
3899:fltk-1.3.4-1/png/pngread.c **** 
3900:fltk-1.3.4-1/png/pngread.c ****       /* If the *output* is 16-bit then we need to check for a byte-swap on this
3901:fltk-1.3.4-1/png/pngread.c ****        * architecture.
3902:fltk-1.3.4-1/png/pngread.c ****        */
3903:fltk-1.3.4-1/png/pngread.c ****       if (linear != 0)
 7372              		.loc 1 3903 7 is_stmt 1 view .LVU2086
 7373              		.loc 1 3903 10 is_stmt 0 view .LVU2087
 7374 0241 448B4C24 		movl	16(%rsp), %r9d
 7374      10
 7375 0246 4585C9   		testl	%r9d, %r9d
 7376 0249 0F858102 		jne	.L779
 7376      0000
 7377              	.L688:
3904:fltk-1.3.4-1/png/pngread.c ****       {
3905:fltk-1.3.4-1/png/pngread.c ****          PNG_CONST png_uint_16 le = 0x0001;
3906:fltk-1.3.4-1/png/pngread.c **** 
3907:fltk-1.3.4-1/png/pngread.c ****          if ((*(png_const_bytep) & le) != 0)
3908:fltk-1.3.4-1/png/pngread.c ****             png_set_swap(png_ptr);
3909:fltk-1.3.4-1/png/pngread.c ****       }
3910:fltk-1.3.4-1/png/pngread.c **** 
3911:fltk-1.3.4-1/png/pngread.c ****       /* If change is not now 0 some transformation is missing - error out. */
3912:fltk-1.3.4-1/png/pngread.c ****       if (change != 0)
 7378              		.loc 1 3912 7 is_stmt 1 view .LVU2088
 7379              		.loc 1 3912 10 is_stmt 0 view .LVU2089
 7380 024f 4585F6   		testl	%r14d, %r14d
 7381 0252 0F85BD03 		jne	.L780
 7381      0000
 7382              	.LBE263:
3913:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "png_read_image: unsupported transformation");
3914:fltk-1.3.4-1/png/pngread.c ****    }
3915:fltk-1.3.4-1/png/pngread.c **** 
3916:fltk-1.3.4-1/png/pngread.c ****    PNG_SKIP_CHUNKS(png_ptr);
 7383              		.loc 1 3916 4 is_stmt 1 view .LVU2090
 7384 0258 4C89FF   		movq	%r15, %rdi
 7385 025b E8000000 		call	png_image_skip_unused_chunks
 7385      00
 7386              	.LVL764:
3917:fltk-1.3.4-1/png/pngread.c **** 
3918:fltk-1.3.4-1/png/pngread.c ****    /* Update the 'info' structure and make sure the result is as required; first
3919:fltk-1.3.4-1/png/pngread.c ****     * make sure to turn on the interlace handling if it will be required
3920:fltk-1.3.4-1/png/pngread.c ****     * (because it can't be turned on *after* the call to png_read_update_info!)
3921:fltk-1.3.4-1/png/pngread.c ****     *
3922:fltk-1.3.4-1/png/pngread.c ****     * TODO: remove the do_local_background fixup below.
3923:fltk-1.3.4-1/png/pngread.c ****     */
3924:fltk-1.3.4-1/png/pngread.c ****    if (do_local_compose == 0 && do_local_background != 2)
 7387              		.loc 1 3924 4 view .LVU2091
 7388              		.loc 1 3924 7 is_stmt 0 view .LVU2092
 7389 0260 448B4424 		movl	20(%rsp), %r8d
 7389      14
 7390 0265 4585C0   		testl	%r8d, %r8d
 7391 0268 750B     		jne	.L725
 7392 026a 837C240C 		cmpl	$2, 12(%rsp)
 7392      02
 7393 026f 0F85A301 		jne	.L781
 7393      0000
 7394              	.L725:
3640:fltk-1.3.4-1/png/pngread.c **** 
 7395              		.loc 1 3640 8 view .LVU2093
 7396 0275 C7442418 		movl	$0, 24(%rsp)
 7396      00000000 
 7397              	.LVL765:
 7398              	.L690:
3925:fltk-1.3.4-1/png/pngread.c ****       passes = png_set_interlace_handling(png_ptr);
3926:fltk-1.3.4-1/png/pngread.c **** 
3927:fltk-1.3.4-1/png/pngread.c ****    png_read_update_info(png_ptr, info_ptr);
 7399              		.loc 1 3927 4 is_stmt 1 view .LVU2094
 7400 027d 4C89EE   		movq	%r13, %rsi
 7401 0280 4C89FF   		movq	%r15, %rdi
 7402 0283 E8000000 		call	png_read_update_info
 7402      00
 7403              	.LVL766:
 7404              	.LBB264:
3928:fltk-1.3.4-1/png/pngread.c **** 
3929:fltk-1.3.4-1/png/pngread.c ****    {
3930:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 info_format = 0;
 7405              		.loc 1 3930 7 view .LVU2095
3931:fltk-1.3.4-1/png/pngread.c **** 
3932:fltk-1.3.4-1/png/pngread.c ****       if ((info_ptr->color_type & PNG_COLOR_MASK_COLOR) != 0)
 7406              		.loc 1 3932 7 view .LVU2096
 7407              		.loc 1 3932 20 is_stmt 0 view .LVU2097
 7408 0288 410FB645 		movzbl	37(%r13), %eax
 7408      25
3933:fltk-1.3.4-1/png/pngread.c ****          info_format |= PNG_FORMAT_FLAG_COLOR;
 7409              		.loc 1 3933 22 view .LVU2098
 7410 028d BA020000 		movl	$2, %edx
 7410      00
 7411 0292 A802     		testb	$2, %al
 7412 0294 440F45F2 		cmovne	%edx, %r14d
 7413              	.LVL767:
3934:fltk-1.3.4-1/png/pngread.c **** 
3935:fltk-1.3.4-1/png/pngread.c ****       if ((info_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0)
 7414              		.loc 1 3935 7 is_stmt 1 view .LVU2099
 7415              		.loc 1 3935 10 is_stmt 0 view .LVU2100
 7416 0298 A804     		testb	$4, %al
 7417 029a 0F855801 		jne	.L782
 7417      0000
3936:fltk-1.3.4-1/png/pngread.c ****       {
3937:fltk-1.3.4-1/png/pngread.c ****          /* do_local_compose removes this channel below. */
3938:fltk-1.3.4-1/png/pngread.c ****          if (do_local_compose == 0)
3939:fltk-1.3.4-1/png/pngread.c ****          {
3940:fltk-1.3.4-1/png/pngread.c ****             /* do_local_background does the same if required. */
3941:fltk-1.3.4-1/png/pngread.c ****             if (do_local_background != 2 ||
3942:fltk-1.3.4-1/png/pngread.c ****                (format & PNG_FORMAT_FLAG_ALPHA) != 0)
3943:fltk-1.3.4-1/png/pngread.c ****                info_format |= PNG_FORMAT_FLAG_ALPHA;
3944:fltk-1.3.4-1/png/pngread.c ****          }
3945:fltk-1.3.4-1/png/pngread.c ****       }
3946:fltk-1.3.4-1/png/pngread.c **** 
3947:fltk-1.3.4-1/png/pngread.c ****       else if (do_local_compose != 0) /* internal error */
 7418              		.loc 1 3947 12 is_stmt 1 view .LVU2101
 7419              		.loc 1 3947 15 is_stmt 0 view .LVU2102
 7420 02a0 8B742414 		movl	20(%rsp), %esi
 7421 02a4 85F6     		testl	%esi, %esi
 7422 02a6 0F857D03 		jne	.L783
 7422      0000
 7423              	.L693:
3948:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "png_image_read: alpha channel lost");
3949:fltk-1.3.4-1/png/pngread.c **** 
3950:fltk-1.3.4-1/png/pngread.c ****       if (info_ptr->bit_depth == 16)
 7424              		.loc 1 3950 7 is_stmt 1 view .LVU2103
 7425              		.loc 1 3950 10 is_stmt 0 view .LVU2104
 7426 02ac 41807D24 		cmpb	$16, 36(%r13)
 7426      10
 7427 02b1 7504     		jne	.L695
3951:fltk-1.3.4-1/png/pngread.c ****          info_format |= PNG_FORMAT_FLAG_LINEAR;
 7428              		.loc 1 3951 10 is_stmt 1 view .LVU2105
 7429              		.loc 1 3951 22 is_stmt 0 view .LVU2106
 7430 02b3 4183CE04 		orl	$4, %r14d
 7431              	.LVL768:
 7432              	.L695:
3952:fltk-1.3.4-1/png/pngread.c **** 
3953:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_FORMAT_BGR_SUPPORTED
3954:fltk-1.3.4-1/png/pngread.c ****          if ((png_ptr->transformations & PNG_BGR) != 0)
 7433              		.loc 1 3954 10 is_stmt 1 view .LVU2107
 7434              		.loc 1 3954 22 is_stmt 0 view .LVU2108
 7435 02b7 418B8734 		movl	308(%r15), %eax
 7435      010000
3955:fltk-1.3.4-1/png/pngread.c ****             info_format |= PNG_FORMAT_FLAG_BGR;
 7436              		.loc 1 3955 25 view .LVU2109
 7437 02be 4489F2   		movl	%r14d, %edx
 7438 02c1 83CA10   		orl	$16, %edx
 7439 02c4 A801     		testb	$1, %al
 7440 02c6 440F45F2 		cmovne	%edx, %r14d
 7441              	.LVL769:
3956:fltk-1.3.4-1/png/pngread.c **** #     endif
3957:fltk-1.3.4-1/png/pngread.c **** 
3958:fltk-1.3.4-1/png/pngread.c **** #     ifdef PNG_FORMAT_AFIRST_SUPPORTED
3959:fltk-1.3.4-1/png/pngread.c ****          if (do_local_background == 2)
 7442              		.loc 1 3959 10 is_stmt 1 view .LVU2110
 7443 02ca 25000002 		andl	$131072, %eax
 7443      00
 7444              		.loc 1 3959 13 is_stmt 0 view .LVU2111
 7445 02cf 837C240C 		cmpl	$2, 12(%rsp)
 7445      02
 7446 02d4 0F84B201 		je	.L784
 7446      0000
3960:fltk-1.3.4-1/png/pngread.c ****          {
3961:fltk-1.3.4-1/png/pngread.c ****             if ((format & PNG_FORMAT_FLAG_AFIRST) != 0)
3962:fltk-1.3.4-1/png/pngread.c ****                info_format |= PNG_FORMAT_FLAG_AFIRST;
3963:fltk-1.3.4-1/png/pngread.c ****          }
3964:fltk-1.3.4-1/png/pngread.c **** 
3965:fltk-1.3.4-1/png/pngread.c ****          if ((png_ptr->transformations & PNG_SWAP_ALPHA) != 0 ||
 7447              		.loc 1 3965 10 is_stmt 1 view .LVU2112
 7448              		.loc 1 3965 13 is_stmt 0 view .LVU2113
 7449 02da 85C0     		testl	%eax, %eax
 7450 02dc 0F849E02 		je	.L785
 7450      0000
 7451              	.L712:
3966:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
3967:fltk-1.3.4-1/png/pngread.c ****             (png_ptr->flags & PNG_FLAG_FILLER_AFTER) == 0))
3968:fltk-1.3.4-1/png/pngread.c ****          {
3969:fltk-1.3.4-1/png/pngread.c ****             if (do_local_background == 2)
3970:fltk-1.3.4-1/png/pngread.c ****                png_error(png_ptr, "unexpected alpha swap transformation");
3971:fltk-1.3.4-1/png/pngread.c **** 
3972:fltk-1.3.4-1/png/pngread.c ****             info_format |= PNG_FORMAT_FLAG_AFIRST;
 7452              		.loc 1 3972 13 is_stmt 1 view .LVU2114
 7453              		.loc 1 3972 25 is_stmt 0 view .LVU2115
 7454 02e2 4183CE20 		orl	$32, %r14d
 7455              	.LVL770:
 7456              	.L714:
3973:fltk-1.3.4-1/png/pngread.c ****          }
3974:fltk-1.3.4-1/png/pngread.c **** #     endif
3975:fltk-1.3.4-1/png/pngread.c **** 
3976:fltk-1.3.4-1/png/pngread.c ****       /* This is actually an internal error. */
3977:fltk-1.3.4-1/png/pngread.c ****       if (info_format != format)
 7457              		.loc 1 3977 7 is_stmt 1 view .LVU2116
 7458              		.loc 1 3977 10 is_stmt 0 view .LVU2117
 7459 02e6 4439F3   		cmpl	%r14d, %ebx
 7460 02e9 0F854903 		jne	.L786
 7460      0000
 7461              		.loc 1 3977 10 view .LVU2118
 7462              	.LBE264:
 7463              	.LBB265:
3978:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "png_read_image: invalid transformations");
3979:fltk-1.3.4-1/png/pngread.c ****    }
3980:fltk-1.3.4-1/png/pngread.c **** 
3981:fltk-1.3.4-1/png/pngread.c ****    /* Now read the rows.  If do_local_compose is set then it is necessary to use
3982:fltk-1.3.4-1/png/pngread.c ****     * a local row buffer.  The output will be GA, RGBA or BGRA and must be
3983:fltk-1.3.4-1/png/pngread.c ****     * converted to G, RGB or BGR as appropriate.  The 'local_row' member of the
3984:fltk-1.3.4-1/png/pngread.c ****     * display acts as a flag.
3985:fltk-1.3.4-1/png/pngread.c ****     */
3986:fltk-1.3.4-1/png/pngread.c ****    {
3987:fltk-1.3.4-1/png/pngread.c ****       png_voidp first_row = display->buffer;
 7464              		.loc 1 3987 7 is_stmt 1 view .LVU2119
 7465              		.loc 1 3987 17 is_stmt 0 view .LVU2120
 7466 02ef 488B0424 		movq	(%rsp), %rax
3988:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
3989:fltk-1.3.4-1/png/pngread.c **** 
3990:fltk-1.3.4-1/png/pngread.c ****       if (linear != 0)
3991:fltk-1.3.4-1/png/pngread.c ****          row_bytes *= 2;
 7467              		.loc 1 3991 20 view .LVU2121
 7468 02f3 8B4C2410 		movl	16(%rsp), %ecx
3988:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
 7469              		.loc 1 3988 17 view .LVU2122
 7470 02f7 48635810 		movslq	16(%rax), %rbx
 7471              	.LVL771:
 7472              		.loc 1 3991 20 view .LVU2123
 7473 02fb 85C9     		testl	%ecx, %ecx
3987:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
 7474              		.loc 1 3987 17 view .LVU2124
 7475 02fd 488B6808 		movq	8(%rax), %rbp
 7476              	.LVL772:
3988:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
 7477              		.loc 1 3988 7 is_stmt 1 view .LVU2125
3990:fltk-1.3.4-1/png/pngread.c ****          row_bytes *= 2;
 7478              		.loc 1 3990 7 view .LVU2126
 7479              		.loc 1 3991 20 is_stmt 0 view .LVU2127
 7480 0301 488D141B 		leaq	(%rbx,%rbx), %rdx
 7481 0305 480F45DA 		cmovne	%rdx, %rbx
 7482              	.LVL773:
3992:fltk-1.3.4-1/png/pngread.c **** 
3993:fltk-1.3.4-1/png/pngread.c ****       /* The following expression is designed to work correctly whether it gives
3994:fltk-1.3.4-1/png/pngread.c ****        * a signed or an unsigned result.
3995:fltk-1.3.4-1/png/pngread.c ****        */
3996:fltk-1.3.4-1/png/pngread.c ****       if (row_bytes < 0)
 7483              		.loc 1 3996 7 is_stmt 1 view .LVU2128
 7484              		.loc 1 3996 10 is_stmt 0 view .LVU2129
 7485 0309 4885DB   		testq	%rbx, %rbx
 7486 030c 790F     		jns	.L701
 7487              	.LBB266:
3997:fltk-1.3.4-1/png/pngread.c ****       {
3998:fltk-1.3.4-1/png/pngread.c ****          char *ptr = png_voidcast(char*, first_row);
 7488              		.loc 1 3998 10 is_stmt 1 view .LVU2130
 7489              	.LVL774:
3999:fltk-1.3.4-1/png/pngread.c ****          ptr += (image->height-1) * (-row_bytes);
 7490              		.loc 1 3999 10 view .LVU2131
 7491              		.loc 1 3999 31 is_stmt 0 view .LVU2132
 7492 030e 418B5424 		movl	16(%r12), %edx
 7492      10
 7493 0313 83EA01   		subl	$1, %edx
 7494              		.loc 1 3999 35 view .LVU2133
 7495 0316 480FAFD3 		imulq	%rbx, %rdx
 7496              		.loc 1 3999 14 view .LVU2134
 7497 031a 4829D5   		subq	%rdx, %rbp
 7498              	.LVL775:
4000:fltk-1.3.4-1/png/pngread.c ****          first_row = png_voidcast(png_voidp, ptr);
 7499              		.loc 1 4000 10 is_stmt 1 view .LVU2135
 7500              	.L701:
 7501              		.loc 1 4000 10 is_stmt 0 view .LVU2136
 7502              	.LBE266:
4001:fltk-1.3.4-1/png/pngread.c ****       }
4002:fltk-1.3.4-1/png/pngread.c **** 
4003:fltk-1.3.4-1/png/pngread.c ****       display->first_row = first_row;
 7503              		.loc 1 4003 7 is_stmt 1 view .LVU2137
 7504              		.loc 1 4003 26 is_stmt 0 view .LVU2138
 7505 031d 488B0424 		movq	(%rsp), %rax
 7506              	.LVL776:
 7507              		.loc 1 4003 26 view .LVU2139
 7508 0321 48896830 		movq	%rbp, 48(%rax)
 7509              	.LVL777:
4004:fltk-1.3.4-1/png/pngread.c ****       display->row_bytes = row_bytes;
 7510              		.loc 1 4004 7 is_stmt 1 view .LVU2140
 7511              		.loc 1 4004 26 is_stmt 0 view .LVU2141
 7512 0325 48895838 		movq	%rbx, 56(%rax)
 7513              	.LBE265:
4005:fltk-1.3.4-1/png/pngread.c ****    }
4006:fltk-1.3.4-1/png/pngread.c **** 
4007:fltk-1.3.4-1/png/pngread.c ****    if (do_local_compose != 0)
 7514              		.loc 1 4007 4 is_stmt 1 view .LVU2142
 7515              		.loc 1 4007 7 is_stmt 0 view .LVU2143
 7516 0329 8B442414 		movl	20(%rsp), %eax
 7517 032d 85C0     		testl	%eax, %eax
 7518 032f 0F85A801 		jne	.L787
 7518      0000
4008:fltk-1.3.4-1/png/pngread.c ****    {
4009:fltk-1.3.4-1/png/pngread.c ****       int result;
4010:fltk-1.3.4-1/png/pngread.c ****       png_voidp row = png_malloc(png_ptr, png_get_rowbytes(png_ptr, info_ptr));
4011:fltk-1.3.4-1/png/pngread.c **** 
4012:fltk-1.3.4-1/png/pngread.c ****       display->local_row = row;
4013:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_composite, display);
4014:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
4015:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, row);
4016:fltk-1.3.4-1/png/pngread.c **** 
4017:fltk-1.3.4-1/png/pngread.c ****       return result;
4018:fltk-1.3.4-1/png/pngread.c ****    }
4019:fltk-1.3.4-1/png/pngread.c **** 
4020:fltk-1.3.4-1/png/pngread.c ****    else if (do_local_background == 2)
 7519              		.loc 1 4020 9 is_stmt 1 view .LVU2144
 7520              		.loc 1 4020 12 is_stmt 0 view .LVU2145
 7521 0335 837C240C 		cmpl	$2, 12(%rsp)
 7521      02
 7522 033a 0F841302 		je	.L788
 7522      0000
 7523              	.LBB267:
4021:fltk-1.3.4-1/png/pngread.c ****    {
4022:fltk-1.3.4-1/png/pngread.c ****       int result;
4023:fltk-1.3.4-1/png/pngread.c ****       png_voidp row = png_malloc(png_ptr, png_get_rowbytes(png_ptr, info_ptr));
4024:fltk-1.3.4-1/png/pngread.c **** 
4025:fltk-1.3.4-1/png/pngread.c ****       display->local_row = row;
4026:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_background, display);
4027:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
4028:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, row);
4029:fltk-1.3.4-1/png/pngread.c **** 
4030:fltk-1.3.4-1/png/pngread.c ****       return result;
4031:fltk-1.3.4-1/png/pngread.c ****    }
4032:fltk-1.3.4-1/png/pngread.c **** 
4033:fltk-1.3.4-1/png/pngread.c ****    else
4034:fltk-1.3.4-1/png/pngread.c ****    {
4035:fltk-1.3.4-1/png/pngread.c ****       png_alloc_size_t row_bytes = display->row_bytes;
 7524              		.loc 1 4035 7 is_stmt 1 view .LVU2146
 7525              	.LVL778:
4036:fltk-1.3.4-1/png/pngread.c **** 
4037:fltk-1.3.4-1/png/pngread.c ****       while (--passes >= 0)
 7526              		.loc 1 4037 7 view .LVU2147
 7527              		.loc 1 4037 13 view .LVU2148
 7528              		.loc 1 4037 13 is_stmt 0 view .LVU2149
 7529 0340 448B6C24 		movl	24(%rsp), %r13d
 7529      18
 7530              	.LVL779:
 7531              		.loc 1 4037 13 view .LVU2150
 7532 0345 4183ED01 		subl	$1, %r13d
 7533              	.LVL780:
 7534              		.loc 1 4037 13 view .LVU2151
 7535 0349 0F881101 		js	.L705
 7535      0000
 7536              	.LVL781:
 7537 034f 90       		.p2align 4,,10
 7538              		.p2align 3
 7539              	.L709:
 7540              	.LBB268:
4038:fltk-1.3.4-1/png/pngread.c ****       {
4039:fltk-1.3.4-1/png/pngread.c ****          png_uint_32      y = image->height;
 7541              		.loc 1 4039 10 is_stmt 1 view .LVU2152
 7542              		.loc 1 4039 27 is_stmt 0 view .LVU2153
 7543 0350 418B5424 		movl	16(%r12), %edx
 7543      10
 7544              	.LVL782:
4040:fltk-1.3.4-1/png/pngread.c ****          png_bytep        row = png_voidcast(png_bytep, display->first_row);
 7545              		.loc 1 4040 10 is_stmt 1 view .LVU2154
4041:fltk-1.3.4-1/png/pngread.c **** 
4042:fltk-1.3.4-1/png/pngread.c ****          while (y-- > 0)
 7546              		.loc 1 4042 10 view .LVU2155
 7547              		.loc 1 4042 16 view .LVU2156
 7548              		.loc 1 4042 18 is_stmt 0 view .LVU2157
 7549 0355 448D72FF 		leal	-1(%rdx), %r14d
 7550              	.LVL783:
 7551              		.loc 1 4042 16 view .LVU2158
 7552 0359 85D2     		testl	%edx, %edx
 7553 035b 741D     		je	.L708
 7554              	.LVL784:
 7555 035d 0F1F00   		.p2align 4,,10
 7556              		.p2align 3
 7557              	.L706:
4043:fltk-1.3.4-1/png/pngread.c ****          {
4044:fltk-1.3.4-1/png/pngread.c ****             png_read_row(png_ptr, row, NULL);
 7558              		.loc 1 4044 13 is_stmt 1 view .LVU2159
 7559 0360 4889EE   		movq	%rbp, %rsi
 7560 0363 31D2     		xorl	%edx, %edx
 7561 0365 4C89FF   		movq	%r15, %rdi
4042:fltk-1.3.4-1/png/pngread.c ****          {
 7562              		.loc 1 4042 18 is_stmt 0 view .LVU2160
 7563 0368 4183EE01 		subl	$1, %r14d
 7564              	.LVL785:
 7565              		.loc 1 4044 13 view .LVU2161
 7566 036c E8000000 		call	png_read_row
 7566      00
 7567              	.LVL786:
4045:fltk-1.3.4-1/png/pngread.c ****             row += row_bytes;
 7568              		.loc 1 4045 13 is_stmt 1 view .LVU2162
 7569              		.loc 1 4045 17 is_stmt 0 view .LVU2163
 7570 0371 4801DD   		addq	%rbx, %rbp
 7571              	.LVL787:
4042:fltk-1.3.4-1/png/pngread.c ****          {
 7572              		.loc 1 4042 16 is_stmt 1 view .LVU2164
4042:fltk-1.3.4-1/png/pngread.c ****          {
 7573              		.loc 1 4042 16 is_stmt 0 view .LVU2165
 7574 0374 4183FEFF 		cmpl	$-1, %r14d
 7575 0378 75E6     		jne	.L706
 7576              	.LVL788:
 7577              	.L708:
4042:fltk-1.3.4-1/png/pngread.c ****          {
 7578              		.loc 1 4042 16 view .LVU2166
 7579              	.LBE268:
4037:fltk-1.3.4-1/png/pngread.c ****       {
 7580              		.loc 1 4037 13 is_stmt 1 view .LVU2167
 7581 037a 4183ED01 		subl	$1, %r13d
 7582              	.LVL789:
4037:fltk-1.3.4-1/png/pngread.c ****       {
 7583              		.loc 1 4037 13 is_stmt 0 view .LVU2168
 7584 037e 4183FDFF 		cmpl	$-1, %r13d
 7585 0382 0F84D800 		je	.L705
 7585      0000
 7586 0388 488B0424 		movq	(%rsp), %rax
 7587 038c 488B6830 		movq	48(%rax), %rbp
 7588 0390 EBBE     		jmp	.L709
 7589              	.LVL790:
 7590              		.p2align 4,,10
 7591 0392 660F1F44 		.p2align 3
 7591      0000
 7592              	.L719:
4037:fltk-1.3.4-1/png/pngread.c ****       {
 7593              		.loc 1 4037 13 view .LVU2169
 7594              	.LBE267:
 7595              	.LBB269:
3731:fltk-1.3.4-1/png/pngread.c ****       {
 7596              		.loc 1 3731 10 view .LVU2170
 7597 0398 8B44240C 		movl	12(%rsp), %eax
3721:fltk-1.3.4-1/png/pngread.c ****          output_gamma = PNG_DEFAULT_sRGB;
 7598              		.loc 1 3721 15 view .LVU2171
 7599 039c 4531C9   		xorl	%r9d, %r9d
3722:fltk-1.3.4-1/png/pngread.c ****       }
 7600              		.loc 1 3722 23 view .LVU2172
 7601 039f 41BBFFFF 		movl	$-1, %r11d
 7601      FFFF
 7602              	.LVL791:
3731:fltk-1.3.4-1/png/pngread.c ****       {
 7603              		.loc 1 3731 7 is_stmt 1 view .LVU2173
3731:fltk-1.3.4-1/png/pngread.c ****       {
 7604              		.loc 1 3731 10 is_stmt 0 view .LVU2174
 7605 03a5 85C0     		testl	%eax, %eax
 7606 03a7 0F843AFD 		je	.L669
 7606      FFFF
 7607              	.L775:
 7608              	.LBB256:
3740:fltk-1.3.4-1/png/pngread.c ****                PNG_FP_1) != 0 && png_gamma_significant(gtest) == 0)
 7609              		.loc 1 3740 14 view .LVU2175
 7610 03ad 418B97D8 		movl	1240(%r15), %edx
 7610      040000
 7611 03b4 4489DE   		movl	%r11d, %esi
 7612 03b7 488D7C24 		leaq	44(%rsp), %rdi
 7612      2C
 7613 03bc B9A08601 		movl	$100000, %ecx
 7613      00
 7614 03c1 44894C24 		movl	%r9d, 20(%rsp)
 7614      14
3733:fltk-1.3.4-1/png/pngread.c **** 
 7615              		.loc 1 3733 10 is_stmt 1 view .LVU2176
3740:fltk-1.3.4-1/png/pngread.c ****                PNG_FP_1) != 0 && png_gamma_significant(gtest) == 0)
 7616              		.loc 1 3740 10 view .LVU2177
3740:fltk-1.3.4-1/png/pngread.c ****                PNG_FP_1) != 0 && png_gamma_significant(gtest) == 0)
 7617              		.loc 1 3740 14 is_stmt 0 view .LVU2178
 7618 03c6 44895C24 		movl	%r11d, 12(%rsp)
 7618      0C
 7619              	.LVL792:
3740:fltk-1.3.4-1/png/pngread.c ****                PNG_FP_1) != 0 && png_gamma_significant(gtest) == 0)
 7620              		.loc 1 3740 14 view .LVU2179
 7621 03cb E8000000 		call	png_muldiv@PLT
 7621      00
 7622              	.LVL793:
3740:fltk-1.3.4-1/png/pngread.c ****                PNG_FP_1) != 0 && png_gamma_significant(gtest) == 0)
 7623              		.loc 1 3740 13 view .LVU2180
 7624 03d0 448B5C24 		movl	12(%rsp), %r11d
 7624      0C
 7625 03d5 448B4C24 		movl	20(%rsp), %r9d
 7625      14
 7626 03da 85C0     		testl	%eax, %eax
 7627 03dc 0F85CE01 		jne	.L670
 7627      0000
 7628              	.LVL794:
 7629              	.L672:
3744:fltk-1.3.4-1/png/pngread.c ****          {
 7630              		.loc 1 3744 15 is_stmt 1 view .LVU2181
3744:fltk-1.3.4-1/png/pngread.c ****          {
 7631              		.loc 1 3744 18 is_stmt 0 view .LVU2182
 7632 03e2 418D4101 		leal	1(%r9), %eax
3747:fltk-1.3.4-1/png/pngread.c ****          }
 7633              		.loc 1 3747 18 view .LVU2183
 7634 03e6 4531C9   		xorl	%r9d, %r9d
3744:fltk-1.3.4-1/png/pngread.c ****          {
 7635              		.loc 1 3744 18 view .LVU2184
 7636 03e9 8944240C 		movl	%eax, 12(%rsp)
 7637 03ed E9F5FCFF 		jmp	.L669
 7637      FF
 7638              	.LVL795:
 7639              		.p2align 4,,10
 7640 03f2 660F1F44 		.p2align 3
 7640      0000
 7641              	.L782:
3744:fltk-1.3.4-1/png/pngread.c ****          {
 7642              		.loc 1 3744 18 view .LVU2185
 7643              	.LBE256:
 7644              	.LBE269:
 7645              	.LBB270:
3938:fltk-1.3.4-1/png/pngread.c ****          {
 7646              		.loc 1 3938 10 is_stmt 1 view .LVU2186
3938:fltk-1.3.4-1/png/pngread.c ****          {
 7647              		.loc 1 3938 13 is_stmt 0 view .LVU2187
 7648 03f8 8B7C2414 		movl	20(%rsp), %edi
 7649 03fc 85FF     		testl	%edi, %edi
 7650 03fe 0F85A8FE 		jne	.L693
 7650      FFFF
3941:fltk-1.3.4-1/png/pngread.c ****                (format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7651              		.loc 1 3941 13 is_stmt 1 view .LVU2188
3941:fltk-1.3.4-1/png/pngread.c ****                (format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7652              		.loc 1 3941 16 is_stmt 0 view .LVU2189
 7653 0404 837C240C 		cmpl	$2, 12(%rsp)
 7653      02
 7654 0409 0F843601 		je	.L789
 7654      0000
 7655              	.L694:
3943:fltk-1.3.4-1/png/pngread.c ****          }
 7656              		.loc 1 3943 16 is_stmt 1 view .LVU2190
3943:fltk-1.3.4-1/png/pngread.c ****          }
 7657              		.loc 1 3943 28 is_stmt 0 view .LVU2191
 7658 040f 4183CE01 		orl	$1, %r14d
 7659              	.LVL796:
3943:fltk-1.3.4-1/png/pngread.c ****          }
 7660              		.loc 1 3943 28 view .LVU2192
 7661 0413 E994FEFF 		jmp	.L693
 7661      FF
 7662              	.LVL797:
 7663              	.L781:
3943:fltk-1.3.4-1/png/pngread.c ****          }
 7664              		.loc 1 3943 28 view .LVU2193
 7665              	.LBE270:
3925:fltk-1.3.4-1/png/pngread.c **** 
 7666              		.loc 1 3925 7 is_stmt 1 view .LVU2194
3925:fltk-1.3.4-1/png/pngread.c **** 
 7667              		.loc 1 3925 16 is_stmt 0 view .LVU2195
 7668 0418 4C89FF   		movq	%r15, %rdi
 7669 041b E8000000 		call	png_set_interlace_handling@PLT
 7669      00
 7670              	.LVL798:
 7671 0420 89442418 		movl	%eax, 24(%rsp)
 7672              	.LVL799:
3925:fltk-1.3.4-1/png/pngread.c **** 
 7673              		.loc 1 3925 16 view .LVU2196
 7674 0424 E954FEFF 		jmp	.L690
 7674      FF
 7675              	.LVL800:
 7676              	.L778:
 7677              	.LBB271:
3889:fltk-1.3.4-1/png/pngread.c ****                   png_set_swap_alpha(png_ptr);
 7678              		.loc 1 3889 16 is_stmt 1 view .LVU2197
3889:fltk-1.3.4-1/png/pngread.c ****                   png_set_swap_alpha(png_ptr);
 7679              		.loc 1 3889 19 is_stmt 0 view .LVU2198
 7680 0429 837C240C 		cmpl	$2, 12(%rsp)
 7680      02
 7681 042e 0F8409FE 		je	.L687
 7681      FFFF
3890:fltk-1.3.4-1/png/pngread.c ****             }
 7682              		.loc 1 3890 19 is_stmt 1 view .LVU2199
 7683 0434 4C89FF   		movq	%r15, %rdi
 7684 0437 E8000000 		call	png_set_swap_alpha@PLT
 7684      00
 7685              	.LVL801:
 7686 043c E9FCFDFF 		jmp	.L687
 7686      FF
 7687              	.LVL802:
 7688              	.L774:
3661:fltk-1.3.4-1/png/pngread.c **** 
 7689              		.loc 1 3661 13 view .LVU2200
 7690 0441 E8000000 		call	png_set_gray_to_rgb@PLT
 7690      00
 7691              	.LVL803:
3661:fltk-1.3.4-1/png/pngread.c **** 
 7692              		.loc 1 3661 13 is_stmt 0 view .LVU2201
 7693 0446 E948FCFF 		jmp	.L666
 7693      FF
 7694              	.LVL804:
 7695              	.L674:
3760:fltk-1.3.4-1/png/pngread.c **** 
 7696              		.loc 1 3760 13 view .LVU2202
 7697 044b E8000000 		call	png_set_scale_16@PLT
 7697      00
 7698              	.LVL805:
3760:fltk-1.3.4-1/png/pngread.c **** 
 7699              		.loc 1 3760 13 view .LVU2203
 7700 0450 448B4C24 		movl	24(%rsp), %r9d
 7700      18
 7701 0455 448B5C24 		movl	20(%rsp), %r11d
 7701      14
 7702 045a E9B6FCFF 		jmp	.L675
 7702      FF
 7703              	.LVL806:
 7704 045f 90       		.p2align 4,,10
 7705              		.p2align 3
 7706              	.L705:
3760:fltk-1.3.4-1/png/pngread.c **** 
 7707              		.loc 1 3760 13 view .LVU2204
 7708              	.LBE271:
 7709              	.LBB272:
4046:fltk-1.3.4-1/png/pngread.c ****          }
4047:fltk-1.3.4-1/png/pngread.c ****       }
4048:fltk-1.3.4-1/png/pngread.c **** 
4049:fltk-1.3.4-1/png/pngread.c ****       return 1;
 7710              		.loc 1 4049 14 view .LVU2205
 7711 0460 41BC0100 		movl	$1, %r12d
 7711      0000
 7712              	.LVL807:
 7713              	.L663:
 7714              		.loc 1 4049 14 view .LVU2206
 7715              	.LBE272:
4050:fltk-1.3.4-1/png/pngread.c ****    }
4051:fltk-1.3.4-1/png/pngread.c **** }
 7716              		.loc 1 4051 1 view .LVU2207
 7717 0466 488B4424 		movq	56(%rsp), %rax
 7717      38
 7718 046b 64483304 		xorq	%fs:40, %rax
 7718      25280000 
 7718      00
 7719 0474 0F85AA01 		jne	.L790
 7719      0000
 7720 047a 4883C448 		addq	$72, %rsp
 7721              		.cfi_remember_state
 7722              		.cfi_def_cfa_offset 56
 7723              	.LVL808:
 7724              		.loc 1 4051 1 view .LVU2208
 7725 047e 4489E0   		movl	%r12d, %eax
 7726 0481 5B       		popq	%rbx
 7727              		.cfi_def_cfa_offset 48
 7728 0482 5D       		popq	%rbp
 7729              		.cfi_def_cfa_offset 40
 7730 0483 415C     		popq	%r12
 7731              		.cfi_def_cfa_offset 32
 7732 0485 415D     		popq	%r13
 7733              		.cfi_def_cfa_offset 24
 7734 0487 415E     		popq	%r14
 7735              		.cfi_def_cfa_offset 16
 7736 0489 415F     		popq	%r15
 7737              		.cfi_def_cfa_offset 8
 7738              	.LVL809:
 7739              		.loc 1 4051 1 view .LVU2209
 7740 048b C3       		ret
 7741              	.LVL810:
 7742              	.L784:
 7743              		.cfi_restore_state
 7744              	.LBB273:
3961:fltk-1.3.4-1/png/pngread.c ****                info_format |= PNG_FORMAT_FLAG_AFIRST;
 7745              		.loc 1 3961 13 is_stmt 1 view .LVU2210
3962:fltk-1.3.4-1/png/pngread.c ****          }
 7746              		.loc 1 3962 28 is_stmt 0 view .LVU2211
 7747 048c 4489F2   		movl	%r14d, %edx
 7748 048f 83CA20   		orl	$32, %edx
 7749 0492 F6C320   		testb	$32, %bl
 7750 0495 440F45F2 		cmovne	%edx, %r14d
 7751              	.LVL811:
3965:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
 7752              		.loc 1 3965 10 is_stmt 1 view .LVU2212
3965:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
 7753              		.loc 1 3965 13 is_stmt 0 view .LVU2213
 7754 0499 85C0     		testl	%eax, %eax
 7755 049b 7524     		jne	.L710
3966:fltk-1.3.4-1/png/pngread.c ****             (png_ptr->flags & PNG_FLAG_FILLER_AFTER) == 0))
 7756              		.loc 1 3966 62 view .LVU2214
 7757 049d 48B88000 		movabsq	$72057594037928064, %rax
 7757      00000000 
 7757      0001
3965:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
 7758              		.loc 1 3965 63 view .LVU2215
 7759 04a7 48BA0000 		movabsq	$72057594037927936, %rdx
 7759      00000000 
 7759      0001
3966:fltk-1.3.4-1/png/pngread.c ****             (png_ptr->flags & PNG_FLAG_FILLER_AFTER) == 0))
 7760              		.loc 1 3966 62 view .LVU2216
 7761 04b1 49238730 		andq	304(%r15), %rax
 7761      010000
3965:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
 7762              		.loc 1 3965 63 view .LVU2217
 7763 04b8 4839D0   		cmpq	%rdx, %rax
 7764 04bb 0F8525FE 		jne	.L714
 7764      FFFF
 7765              	.L710:
3970:fltk-1.3.4-1/png/pngread.c **** 
 7766              		.loc 1 3970 16 is_stmt 1 view .LVU2218
 7767 04c1 488D3500 		leaq	.LC33(%rip), %rsi
 7767      000000
 7768 04c8 4C89FF   		movq	%r15, %rdi
 7769 04cb E8000000 		call	png_error@PLT
 7769      00
 7770              	.LVL812:
 7771              		.p2align 4,,10
 7772              		.p2align 3
 7773              	.L779:
3970:fltk-1.3.4-1/png/pngread.c **** 
 7774              		.loc 1 3970 16 is_stmt 0 view .LVU2219
 7775              	.LBE273:
 7776              	.LBB274:
 7777              	.LBB257:
3905:fltk-1.3.4-1/png/pngread.c **** 
 7778              		.loc 1 3905 10 is_stmt 1 view .LVU2220
3907:fltk-1.3.4-1/png/pngread.c ****             png_set_swap(png_ptr);
 7779              		.loc 1 3907 10 view .LVU2221
3908:fltk-1.3.4-1/png/pngread.c ****       }
 7780              		.loc 1 3908 13 view .LVU2222
 7781 04d0 4C89FF   		movq	%r15, %rdi
 7782 04d3 E8000000 		call	png_set_swap@PLT
 7782      00
 7783              	.LVL813:
3908:fltk-1.3.4-1/png/pngread.c ****       }
 7784              		.loc 1 3908 13 is_stmt 0 view .LVU2223
 7785 04d8 E972FDFF 		jmp	.L688
 7785      FF
 7786              	.LVL814:
 7787              	.L787:
3908:fltk-1.3.4-1/png/pngread.c ****       }
 7788              		.loc 1 3908 13 view .LVU2224
 7789              	.LBE257:
 7790              	.LBE274:
 7791              	.LBB275:
4009:fltk-1.3.4-1/png/pngread.c ****       png_voidp row = png_malloc(png_ptr, png_get_rowbytes(png_ptr, info_ptr));
 7792              		.loc 1 4009 7 is_stmt 1 view .LVU2225
4010:fltk-1.3.4-1/png/pngread.c **** 
 7793              		.loc 1 4010 7 view .LVU2226
4010:fltk-1.3.4-1/png/pngread.c **** 
 7794              		.loc 1 4010 23 is_stmt 0 view .LVU2227
 7795 04dd 4C89EE   		movq	%r13, %rsi
 7796 04e0 4C89FF   		movq	%r15, %rdi
 7797 04e3 E8000000 		call	png_get_rowbytes@PLT
 7797      00
 7798              	.LVL815:
 7799 04e8 4C89FF   		movq	%r15, %rdi
 7800 04eb 4889C6   		movq	%rax, %rsi
 7801 04ee E8000000 		call	png_malloc@PLT
 7801      00
 7802              	.LVL816:
4012:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_composite, display);
 7803              		.loc 1 4012 26 view .LVU2228
 7804 04f3 488B1C24 		movq	(%rsp), %rbx
4013:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7805              		.loc 1 4013 16 view .LVU2229
 7806 04f7 488D3500 		leaq	png_image_read_composite(%rip), %rsi
 7806      000000
4010:fltk-1.3.4-1/png/pngread.c **** 
 7807              		.loc 1 4010 23 view .LVU2230
 7808 04fe 4989C5   		movq	%rax, %r13
 7809              	.LVL817:
4012:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_composite, display);
 7810              		.loc 1 4012 7 is_stmt 1 view .LVU2231
4012:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_composite, display);
 7811              		.loc 1 4012 26 is_stmt 0 view .LVU2232
 7812 0501 48894328 		movq	%rax, 40(%rbx)
4013:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7813              		.loc 1 4013 7 is_stmt 1 view .LVU2233
4013:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7814              		.loc 1 4013 16 is_stmt 0 view .LVU2234
 7815 0505 4889DA   		movq	%rbx, %rdx
 7816              	.LVL818:
 7817              	.L773:
4013:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7818              		.loc 1 4013 16 view .LVU2235
 7819              	.LBE275:
 7820              	.LBB276:
4026:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7821              		.loc 1 4026 16 view .LVU2236
 7822 0508 4C89E7   		movq	%r12, %rdi
 7823 050b E8000000 		call	png_safe_execute@PLT
 7823      00
 7824              	.LVL819:
4027:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, row);
 7825              		.loc 1 4027 26 view .LVU2237
 7826 0510 48C74328 		movq	$0, 40(%rbx)
 7826      00000000 
4028:fltk-1.3.4-1/png/pngread.c **** 
 7827              		.loc 1 4028 7 view .LVU2238
 7828 0518 4C89EE   		movq	%r13, %rsi
 7829 051b 4C89FF   		movq	%r15, %rdi
4026:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7830              		.loc 1 4026 16 view .LVU2239
 7831 051e 4189C4   		movl	%eax, %r12d
 7832              	.LVL820:
4027:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, row);
 7833              		.loc 1 4027 7 is_stmt 1 view .LVU2240
4028:fltk-1.3.4-1/png/pngread.c **** 
 7834              		.loc 1 4028 7 view .LVU2241
 7835 0521 E8000000 		call	png_free@PLT
 7835      00
 7836              	.LVL821:
4030:fltk-1.3.4-1/png/pngread.c ****    }
 7837              		.loc 1 4030 7 view .LVU2242
4030:fltk-1.3.4-1/png/pngread.c ****    }
 7838              		.loc 1 4030 14 is_stmt 0 view .LVU2243
 7839 0526 E93BFFFF 		jmp	.L663
 7839      FF
 7840              	.LVL822:
 7841              	.L777:
4030:fltk-1.3.4-1/png/pngread.c ****    }
 7842              		.loc 1 4030 14 view .LVU2244
 7843              	.LBE276:
 7844              	.LBB277:
3867:fltk-1.3.4-1/png/pngread.c **** 
 7845              		.loc 1 3867 16 is_stmt 1 view .LVU2245
 7846 052b 4C89FF   		movq	%r15, %rdi
 7847 052e E8000000 		call	png_set_bgr@PLT
 7847      00
 7848              	.LVL823:
 7849 0533 E9EFFCFF 		jmp	.L684
 7849      FF
 7850              	.LVL824:
 7851              	.L721:
3780:fltk-1.3.4-1/png/pngread.c **** 
 7852              		.loc 1 3780 36 is_stmt 0 view .LVU2246
 7853 0538 C744240C 		movl	$2, 12(%rsp)
 7853      02000000 
 7854              	.LVL825:
3780:fltk-1.3.4-1/png/pngread.c **** 
 7855              		.loc 1 3780 36 view .LVU2247
 7856 0540 E9BEFCFF 		jmp	.L678
 7856      FF
 7857              	.LVL826:
 7858              	.L789:
3780:fltk-1.3.4-1/png/pngread.c **** 
 7859              		.loc 1 3780 36 view .LVU2248
 7860              	.LBE277:
 7861              	.LBB278:
3941:fltk-1.3.4-1/png/pngread.c ****                (format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7862              		.loc 1 3941 42 discriminator 1 view .LVU2249
 7863 0545 F6C301   		testb	$1, %bl
 7864 0548 0F845EFD 		je	.L693
 7864      FFFF
 7865 054e E9BCFEFF 		jmp	.L694
 7865      FF
 7866              	.LVL827:
 7867              	.L788:
3941:fltk-1.3.4-1/png/pngread.c ****                (format & PNG_FORMAT_FLAG_ALPHA) != 0)
 7868              		.loc 1 3941 42 discriminator 1 view .LVU2250
 7869              	.LBE278:
 7870              	.LBB279:
4022:fltk-1.3.4-1/png/pngread.c ****       png_voidp row = png_malloc(png_ptr, png_get_rowbytes(png_ptr, info_ptr));
 7871              		.loc 1 4022 7 is_stmt 1 view .LVU2251
4023:fltk-1.3.4-1/png/pngread.c **** 
 7872              		.loc 1 4023 7 view .LVU2252
4023:fltk-1.3.4-1/png/pngread.c **** 
 7873              		.loc 1 4023 23 is_stmt 0 view .LVU2253
 7874 0553 4C89EE   		movq	%r13, %rsi
 7875 0556 4C89FF   		movq	%r15, %rdi
 7876 0559 E8000000 		call	png_get_rowbytes@PLT
 7876      00
 7877              	.LVL828:
 7878 055e 4C89FF   		movq	%r15, %rdi
 7879 0561 4889C6   		movq	%rax, %rsi
 7880 0564 E8000000 		call	png_malloc@PLT
 7880      00
 7881              	.LVL829:
4025:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_background, display);
 7882              		.loc 1 4025 26 view .LVU2254
 7883 0569 488B1C24 		movq	(%rsp), %rbx
4026:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7884              		.loc 1 4026 16 view .LVU2255
 7885 056d 488D3500 		leaq	png_image_read_background(%rip), %rsi
 7885      000000
4023:fltk-1.3.4-1/png/pngread.c **** 
 7886              		.loc 1 4023 23 view .LVU2256
 7887 0574 4989C5   		movq	%rax, %r13
 7888              	.LVL830:
4025:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_background, display);
 7889              		.loc 1 4025 7 is_stmt 1 view .LVU2257
4025:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_background, display);
 7890              		.loc 1 4025 26 is_stmt 0 view .LVU2258
 7891 0577 48894328 		movq	%rax, 40(%rbx)
4026:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7892              		.loc 1 4026 7 is_stmt 1 view .LVU2259
4026:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7893              		.loc 1 4026 16 is_stmt 0 view .LVU2260
 7894 057b 4889DA   		movq	%rbx, %rdx
 7895 057e EB88     		jmp	.L773
 7896              	.LVL831:
 7897              	.L785:
4026:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 7898              		.loc 1 4026 16 view .LVU2261
 7899              	.LBE279:
 7900              	.LBB280:
3966:fltk-1.3.4-1/png/pngread.c ****             (png_ptr->flags & PNG_FLAG_FILLER_AFTER) == 0))
 7901              		.loc 1 3966 62 view .LVU2262
 7902 0580 48B88000 		movabsq	$72057594037928064, %rax
 7902      00000000 
 7902      0001
3965:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
 7903              		.loc 1 3965 63 view .LVU2263
 7904 058a 48BA0000 		movabsq	$72057594037927936, %rdx
 7904      00000000 
 7904      0001
3966:fltk-1.3.4-1/png/pngread.c ****             (png_ptr->flags & PNG_FLAG_FILLER_AFTER) == 0))
 7905              		.loc 1 3966 62 view .LVU2264
 7906 0594 49238730 		andq	304(%r15), %rax
 7906      010000
3965:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
 7907              		.loc 1 3965 63 view .LVU2265
 7908 059b 4839D0   		cmpq	%rdx, %rax
 7909 059e 0F843EFD 		je	.L712
 7909      FFFF
 7910 05a4 E93DFDFF 		jmp	.L714
 7910      FF
 7911              	.LVL832:
 7912 05a9 0F1F8000 		.p2align 4,,10
 7912      000000
 7913              		.p2align 3
 7914              	.L670:
3965:fltk-1.3.4-1/png/pngread.c ****             ((png_ptr->transformations & PNG_ADD_ALPHA) != 0 &&
 7915              		.loc 1 3965 63 view .LVU2266
 7916              	.LBE280:
 7917              	.LBB281:
 7918              	.LBB258:
3741:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 0;
 7919              		.loc 1 3741 34 view .LVU2267
 7920 05b0 8B7C242C 		movl	44(%rsp), %edi
 7921 05b4 44894C24 		movl	%r9d, 24(%rsp)
 7921      18
 7922 05b9 44895C24 		movl	%r11d, 20(%rsp)
 7922      14
 7923              	.LVL833:
3741:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 0;
 7924              		.loc 1 3741 34 view .LVU2268
 7925 05be E8000000 		call	png_gamma_significant@PLT
 7925      00
 7926              	.LVL834:
3741:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 0;
 7927              		.loc 1 3741 31 view .LVU2269
 7928 05c3 448B5C24 		movl	20(%rsp), %r11d
 7928      14
 7929 05c8 448B4C24 		movl	24(%rsp), %r9d
 7929      18
 7930 05cd 85C0     		testl	%eax, %eax
3741:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 0;
 7931              		.loc 1 3741 34 view .LVU2270
 7932 05cf 8944240C 		movl	%eax, 12(%rsp)
 7933              	.LVL835:
3741:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 0;
 7934              		.loc 1 3741 31 view .LVU2271
 7935 05d3 0F8509FE 		jne	.L672
 7935      FFFF
 7936 05d9 E909FBFF 		jmp	.L669
 7936      FF
 7937              	.LVL836:
 7938              	.L722:
3741:fltk-1.3.4-1/png/pngread.c ****             do_local_background = 0;
 7939              		.loc 1 3741 31 view .LVU2272
 7940              	.LBE258:
3810:fltk-1.3.4-1/png/pngread.c ****                /* This leaves the alpha channel in the output, so it has to be
 7941              		.loc 1 3810 33 view .LVU2273
 7942 05de C7442414 		movl	$1, 20(%rsp)
 7942      01000000 
3816:fltk-1.3.4-1/png/pngread.c ****             }
 7943              		.loc 1 3816 21 view .LVU2274
 7944 05e6 41B90200 		movl	$2, %r9d
 7944      0000
 7945 05ec E912FCFF 		jmp	.L678
 7945      FF
 7946              	.L776:
3784:fltk-1.3.4-1/png/pngread.c **** 
 7947              		.loc 1 3784 16 view .LVU2275
 7948 05f1 4C89FF   		movq	%r15, %rdi
 7949 05f4 44895C24 		movl	%r11d, 24(%rsp)
 7949      18
3784:fltk-1.3.4-1/png/pngread.c **** 
 7950              		.loc 1 3784 16 is_stmt 1 view .LVU2276
 7951 05f9 E8000000 		call	png_set_strip_alpha@PLT
 7951      00
 7952              	.LVL837:
 7953              	.LBE281:
3638:fltk-1.3.4-1/png/pngread.c ****    int do_local_background = 0; /* to avoid double gamma correction bug */
 7954              		.loc 1 3638 8 is_stmt 0 view .LVU2277
 7955 05fe 8B44240C 		movl	12(%rsp), %eax
 7956              	.LBB282:
 7957 0602 448B5C24 		movl	24(%rsp), %r11d
 7957      18
 7958 0607 448B4C24 		movl	28(%rsp), %r9d
 7958      1C
 7959              	.LBE282:
 7960 060c 89442414 		movl	%eax, 20(%rsp)
 7961              	.LBB283:
 7962 0610 E9EEFBFF 		jmp	.L678
 7962      FF
 7963              	.LVL838:
 7964              	.L780:
3913:fltk-1.3.4-1/png/pngread.c ****    }
 7965              		.loc 1 3913 10 is_stmt 1 view .LVU2278
 7966 0615 488D3500 		leaq	.LC31(%rip), %rsi
 7966      000000
 7967 061c 4C89FF   		movq	%r15, %rdi
 7968 061f E8000000 		call	png_error@PLT
 7968      00
 7969              	.LVL839:
 7970              	.L790:
3913:fltk-1.3.4-1/png/pngread.c ****    }
 7971              		.loc 1 3913 10 is_stmt 0 view .LVU2279
 7972              	.LBE283:
 7973              		.loc 1 4051 1 view .LVU2280
 7974 0624 E8000000 		call	__stack_chk_fail@PLT
 7974      00
 7975              	.LVL840:
 7976              	.L783:
 7977              	.LBB284:
3948:fltk-1.3.4-1/png/pngread.c **** 
 7978              		.loc 1 3948 10 is_stmt 1 view .LVU2281
 7979 0629 488D3500 		leaq	.LC32(%rip), %rsi
 7979      000000
 7980 0630 4C89FF   		movq	%r15, %rdi
 7981 0633 E8000000 		call	png_error@PLT
 7981      00
 7982              	.LVL841:
 7983              	.L786:
3978:fltk-1.3.4-1/png/pngread.c ****    }
 7984              		.loc 1 3978 10 view .LVU2282
 7985 0638 488D3500 		leaq	.LC34(%rip), %rsi
 7985      000000
 7986 063f 4C89FF   		movq	%r15, %rdi
 7987 0642 E8000000 		call	png_error@PLT
 7987      00
 7988              	.LVL842:
 7989              	.LBE284:
 7990              		.cfi_endproc
 7991              	.LFE77:
 7993              		.section	.rodata.png_image_read_background.str1.1,"aMS",@progbits,1
 7994              	.LC35:
 7995 0000 6C6F7374 		.string	"lost rgb to gray"
 7995      20726762 
 7995      20746F20 
 7995      67726179 
 7995      00
 7996              	.LC36:
 7997 0011 756E6578 		.string	"unexpected compose"
 7997      70656374 
 7997      65642063 
 7997      6F6D706F 
 7997      736500
 7998              	.LC37:
 7999 0024 6C6F7374 		.string	"lost/gained channels"
 7999      2F676169 
 7999      6E656420 
 7999      6368616E 
 7999      6E656C73 
 8000              		.section	.rodata.png_image_read_background.str1.8,"aMS",@progbits,1
 8001              		.align 8
 8002              	.LC38:
 8003 0000 756E6578 		.string	"unexpected 8-bit transformation"
 8003      70656374 
 8003      65642038 
 8003      2D626974 
 8003      20747261 
 8004              		.section	.rodata.png_image_read_background.str1.1
 8005              	.LC39:
 8006 0039 756E6B6E 		.string	"unknown interlace type"
 8006      6F776E20 
 8006      696E7465 
 8006      726C6163 
 8006      65207479 
 8007              	.LC40:
 8008 0050 756E6578 		.string	"unexpected bit depth"
 8008      70656374 
 8008      65642062 
 8008      69742064 
 8008      65707468 
 8009              		.section	.text.png_image_read_background,"ax",@progbits
 8010              		.p2align 4
 8012              	png_image_read_background:
 8013              	.LVL843:
 8014              	.LFB76:
3350:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 8015              		.loc 1 3350 1 view -0
 8016              		.cfi_startproc
3350:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 8017              		.loc 1 3350 1 is_stmt 0 view .LVU2284
 8018 0000 F30F1EFA 		endbr64
3351:fltk-1.3.4-1/png/pngread.c ****       argument);
 8019              		.loc 1 3351 4 is_stmt 1 view .LVU2285
 8020              	.LVL844:
3353:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 8021              		.loc 1 3353 4 view .LVU2286
3350:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 8022              		.loc 1 3350 1 is_stmt 0 view .LVU2287
 8023 0004 4157     		pushq	%r15
 8024              		.cfi_def_cfa_offset 16
 8025              		.cfi_offset 15, -16
 8026 0006 4156     		pushq	%r14
 8027              		.cfi_def_cfa_offset 24
 8028              		.cfi_offset 14, -24
 8029 0008 4155     		pushq	%r13
 8030              		.cfi_def_cfa_offset 32
 8031              		.cfi_offset 13, -32
 8032 000a 4154     		pushq	%r12
 8033              		.cfi_def_cfa_offset 40
 8034              		.cfi_offset 12, -40
 8035 000c 55       		pushq	%rbp
 8036              		.cfi_def_cfa_offset 48
 8037              		.cfi_offset 6, -48
 8038 000d 53       		pushq	%rbx
 8039              		.cfi_def_cfa_offset 56
 8040              		.cfi_offset 3, -56
 8041 000e 4883EC68 		subq	$104, %rsp
 8042              		.cfi_def_cfa_offset 160
3353:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 8043              		.loc 1 3353 15 view .LVU2288
 8044 0012 4C8B2F   		movq	(%rdi), %r13
 8045              	.LVL845:
3354:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 8046              		.loc 1 3354 4 is_stmt 1 view .LVU2289
3354:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 8047              		.loc 1 3354 32 is_stmt 0 view .LVU2290
 8048 0015 498B4500 		movq	0(%r13), %rax
3354:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 8049              		.loc 1 3354 17 view .LVU2291
 8050 0019 488B18   		movq	(%rax), %rbx
 8051              	.LVL846:
3355:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 height = image->height;
 8052              		.loc 1 3355 4 is_stmt 1 view .LVU2292
3355:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 height = image->height;
 8053              		.loc 1 3355 15 is_stmt 0 view .LVU2293
 8054 001c 4C8B6008 		movq	8(%rax), %r12
 8055              	.LVL847:
3356:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 width = image->width;
 8056              		.loc 1 3356 4 is_stmt 1 view .LVU2294
3356:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 width = image->width;
 8057              		.loc 1 3356 16 is_stmt 0 view .LVU2295
 8058 0020 418B4510 		movl	16(%r13), %eax
 8059 0024 89442450 		movl	%eax, 80(%rsp)
 8060              	.LVL848:
3357:fltk-1.3.4-1/png/pngread.c ****    int pass, passes;
 8061              		.loc 1 3357 4 is_stmt 1 view .LVU2296
3357:fltk-1.3.4-1/png/pngread.c ****    int pass, passes;
 8062              		.loc 1 3357 16 is_stmt 0 view .LVU2297
 8063 0028 418B450C 		movl	12(%r13), %eax
 8064              	.LVL849:
3357:fltk-1.3.4-1/png/pngread.c ****    int pass, passes;
 8065              		.loc 1 3357 16 view .LVU2298
 8066 002c 8944245C 		movl	%eax, 92(%rsp)
 8067              	.LVL850:
3358:fltk-1.3.4-1/png/pngread.c **** 
 8068              		.loc 1 3358 4 is_stmt 1 view .LVU2299
3365:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost rgb to gray");
 8069              		.loc 1 3365 4 view .LVU2300
3365:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost rgb to gray");
 8070              		.loc 1 3365 16 is_stmt 0 view .LVU2301
 8071 0030 8B833401 		movl	308(%rbx), %eax
 8071      0000
 8072              	.LVL851:
3365:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost rgb to gray");
 8073              		.loc 1 3365 7 view .LVU2302
 8074 0036 A9000060 		testl	$6291456, %eax
 8074      00
 8075 003b 0F847806 		je	.L872
 8075      0000
3368:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "unexpected compose");
 8076              		.loc 1 3368 4 is_stmt 1 view .LVU2303
3368:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "unexpected compose");
 8077              		.loc 1 3368 7 is_stmt 0 view .LVU2304
 8078 0041 A880     		testb	$-128, %al
 8079 0043 0F856106 		jne	.L873
 8079      0000
 8080 0049 4889FD   		movq	%rdi, %rbp
3371:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost/gained channels");
 8081              		.loc 1 3371 4 is_stmt 1 view .LVU2305
3371:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost/gained channels");
 8082              		.loc 1 3371 8 is_stmt 0 view .LVU2306
 8083 004c 4C89E6   		movq	%r12, %rsi
 8084 004f 4889DF   		movq	%rbx, %rdi
 8085              	.LVL852:
3371:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost/gained channels");
 8086              		.loc 1 3371 8 view .LVU2307
 8087 0052 E8000000 		call	png_get_channels@PLT
 8087      00
 8088              	.LVL853:
3371:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "lost/gained channels");
 8089              		.loc 1 3371 7 view .LVU2308
 8090 0057 3C02     		cmpb	$2, %al
 8091 0059 0F853C06 		jne	.L874
 8091      0000
3375:fltk-1.3.4-1/png/pngread.c ****       (image->format & PNG_FORMAT_FLAG_ALPHA) != 0)
 8092              		.loc 1 3375 4 is_stmt 1 view .LVU2309
3375:fltk-1.3.4-1/png/pngread.c ****       (image->format & PNG_FORMAT_FLAG_ALPHA) != 0)
 8093              		.loc 1 3375 54 is_stmt 0 view .LVU2310
 8094 005f 418B5514 		movl	20(%r13), %edx
 8095 0063 89D0     		movl	%edx, %eax
 8096 0065 83E005   		andl	$5, %eax
3375:fltk-1.3.4-1/png/pngread.c ****       (image->format & PNG_FORMAT_FLAG_ALPHA) != 0)
 8097              		.loc 1 3375 7 view .LVU2311
 8098 0068 83F801   		cmpl	$1, %eax
 8099 006b 0F841B06 		je	.L875
 8099      0000
3379:fltk-1.3.4-1/png/pngread.c ****    {
 8100              		.loc 1 3379 4 is_stmt 1 view .LVU2312
3379:fltk-1.3.4-1/png/pngread.c ****    {
 8101              		.loc 1 3379 19 is_stmt 0 view .LVU2313
 8102 0071 0FB68374 		movzbl	628(%rbx), %eax
 8102      020000
3379:fltk-1.3.4-1/png/pngread.c ****    {
 8103              		.loc 1 3379 4 view .LVU2314
 8104 0078 84C0     		testb	%al, %al
 8105 007a 0F84CB05 		je	.L834
 8105      0000
 8106 0080 3C01     		cmpb	$1, %al
 8107 0082 0F85F505 		jne	.L876
 8107      0000
 8108 0088 C7442458 		movl	$7, 88(%rsp)
 8108      07000000 
 8109              	.L796:
 8110              	.LVL854:
3398:fltk-1.3.4-1/png/pngread.c ****    {
 8111              		.loc 1 3398 4 is_stmt 1 view .LVU2315
3398:fltk-1.3.4-1/png/pngread.c ****    {
 8112              		.loc 1 3398 20 is_stmt 0 view .LVU2316
 8113 0090 410FB64C 		movzbl	36(%r12), %ecx
 8113      2424
3398:fltk-1.3.4-1/png/pngread.c ****    {
 8114              		.loc 1 3398 4 view .LVU2317
 8115 0096 80F908   		cmpb	$8, %cl
 8116 0099 0F847802 		je	.L797
 8116      0000
 8117 009f 80F910   		cmpb	$16, %cl
 8118 00a2 0F852006 		jne	.L877
 8118      0000
 8119              	.LBB285:
3536:fltk-1.3.4-1/png/pngread.c ****                display->first_row);
 8120              		.loc 1 3536 13 is_stmt 1 view .LVU2318
3541:fltk-1.3.4-1/png/pngread.c ****             int preserve_alpha = (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
 8121              		.loc 1 3541 26 is_stmt 0 view .LVU2319
 8122 00a8 488B7538 		movq	56(%rbp), %rsi
3536:fltk-1.3.4-1/png/pngread.c ****                display->first_row);
 8123              		.loc 1 3536 26 view .LVU2320
 8124 00ac 488B7D30 		movq	48(%rbp), %rdi
3542:fltk-1.3.4-1/png/pngread.c ****             unsigned int outchannels = 1+preserve_alpha;
 8125              		.loc 1 3542 49 view .LVU2321
 8126 00b0 4189D7   		movl	%edx, %r15d
 8127 00b3 83E221   		andl	$33, %edx
 8128 00b6 4183E701 		andl	$1, %r15d
3547:fltk-1.3.4-1/png/pngread.c ****                    (image->format & PNG_FORMAT_FLAG_AFIRST) != 0)
 8129              		.loc 1 3547 40 view .LVU2322
 8130 00ba 4531F6   		xorl	%r14d, %r14d
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8131              		.loc 1 3552 23 view .LVU2323
 8132 00bd 48895C24 		movq	%rbx, 16(%rsp)
 8132      10
3541:fltk-1.3.4-1/png/pngread.c ****             int preserve_alpha = (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
 8133              		.loc 1 3541 26 view .LVU2324
 8134 00c2 4889F1   		movq	%rsi, %rcx
3536:fltk-1.3.4-1/png/pngread.c ****                display->first_row);
 8135              		.loc 1 3536 26 view .LVU2325
 8136 00c5 48897C24 		movq	%rdi, 48(%rsp)
 8136      30
 8137              	.LVL855:
3541:fltk-1.3.4-1/png/pngread.c ****             int preserve_alpha = (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
 8138              		.loc 1 3541 13 is_stmt 1 view .LVU2326
3543:fltk-1.3.4-1/png/pngread.c ****             int swap_alpha = 0;
 8139              		.loc 1 3543 41 is_stmt 0 view .LVU2327
 8140 00ca 418D7F01 		leal	1(%r15), %edi
 8141              	.LVL856:
3541:fltk-1.3.4-1/png/pngread.c ****             int preserve_alpha = (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
 8142              		.loc 1 3541 26 view .LVU2328
 8143 00ce 48C1E93F 		shrq	$63, %rcx
3543:fltk-1.3.4-1/png/pngread.c ****             int swap_alpha = 0;
 8144              		.loc 1 3543 41 view .LVU2329
 8145 00d2 897C2448 		movl	%edi, 72(%rsp)
3541:fltk-1.3.4-1/png/pngread.c ****             int preserve_alpha = (image->format & PNG_FORMAT_FLAG_ALPHA) != 0;
 8146              		.loc 1 3541 26 view .LVU2330
 8147 00d6 4801F1   		addq	%rsi, %rcx
 8148 00d9 48D1F9   		sarq	%rcx
 8149 00dc 48894C24 		movq	%rcx, 56(%rsp)
 8149      38
 8150              	.LVL857:
3542:fltk-1.3.4-1/png/pngread.c ****             unsigned int outchannels = 1+preserve_alpha;
 8151              		.loc 1 3542 13 is_stmt 1 view .LVU2331
3543:fltk-1.3.4-1/png/pngread.c ****             int swap_alpha = 0;
 8152              		.loc 1 3543 13 view .LVU2332
3544:fltk-1.3.4-1/png/pngread.c **** 
 8153              		.loc 1 3544 13 view .LVU2333
3547:fltk-1.3.4-1/png/pngread.c ****                    (image->format & PNG_FORMAT_FLAG_AFIRST) != 0)
 8154              		.loc 1 3547 16 view .LVU2334
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8155              		.loc 1 3552 13 view .LVU2335
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8156              		.loc 1 3552 28 view .LVU2336
 8157              	.LBB286:
 8158              	.LBB287:
3583:fltk-1.3.4-1/png/pngread.c **** 
 8159              		.loc 1 3583 57 is_stmt 0 view .LVU2337
 8160 00e1 8B4C245C 		movl	92(%rsp), %ecx
 8161              	.LVL858:
3583:fltk-1.3.4-1/png/pngread.c **** 
 8162              		.loc 1 3583 57 view .LVU2338
 8163 00e5 0FAFCF   		imull	%edi, %ecx
 8164              	.LBE287:
 8165              	.LBE286:
3547:fltk-1.3.4-1/png/pngread.c ****                    (image->format & PNG_FORMAT_FLAG_AFIRST) != 0)
 8166              		.loc 1 3547 40 view .LVU2339
 8167 00e8 83FA21   		cmpl	$33, %edx
 8168 00eb 410F94C6 		sete	%r14b
 8169              	.LBB298:
 8170              	.LBB294:
 8171              	.LBB288:
3613:fltk-1.3.4-1/png/pngread.c **** 
 8172              		.loc 1 3613 34 view .LVU2340
 8173 00ef 4531C9   		xorl	%r9d, %r9d
3611:fltk-1.3.4-1/png/pngread.c ****                      if (preserve_alpha != 0)
 8174              		.loc 1 3611 28 view .LVU2341
 8175 00f2 4D01F6   		addq	%r14, %r14
3613:fltk-1.3.4-1/png/pngread.c **** 
 8176              		.loc 1 3613 34 view .LVU2342
 8177 00f5 83FA21   		cmpl	$33, %edx
 8178              	.LBE288:
3583:fltk-1.3.4-1/png/pngread.c **** 
 8179              		.loc 1 3583 49 view .LVU2343
 8180 00f8 488D3C09 		leaq	(%rcx,%rcx), %rdi
 8181              	.LVL859:
 8182              	.LBB289:
3613:fltk-1.3.4-1/png/pngread.c **** 
 8183              		.loc 1 3613 34 view .LVU2344
 8184 00fc 410F95C1 		setne	%r9b
 8185              	.LBE289:
 8186              	.LBE294:
 8187              	.LBE298:
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8188              		.loc 1 3552 23 view .LVU2345
 8189 0100 31D2     		xorl	%edx, %edx
 8190              	.LVL860:
 8191              	.LBB299:
 8192              	.LBB295:
3583:fltk-1.3.4-1/png/pngread.c **** 
 8193              		.loc 1 3583 49 view .LVU2346
 8194 0102 48897C24 		movq	%rdi, 40(%rsp)
 8194      28
 8195              	.LBB290:
3613:fltk-1.3.4-1/png/pngread.c **** 
 8196              		.loc 1 3613 31 view .LVU2347
 8197 0107 4F8D2409 		leaq	(%r9,%r9), %r12
 8198              	.LVL861:
3613:fltk-1.3.4-1/png/pngread.c **** 
 8199              		.loc 1 3613 31 view .LVU2348
 8200 010b 8D7A01   		leal	1(%rdx), %edi
 8201 010e 897C2440 		movl	%edi, 64(%rsp)
 8202              	.LBE290:
 8203              	.LBE295:
 8204              	.LBE299:
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8205              		.loc 1 3552 23 view .LVU2349
 8206 0112 4C89E3   		movq	%r12, %rbx
 8207              	.LVL862:
 8208              	.LBB300:
3554:fltk-1.3.4-1/png/pngread.c ****                png_uint_32      y;
 8209              		.loc 1 3554 16 is_stmt 1 view .LVU2350
3555:fltk-1.3.4-1/png/pngread.c **** 
 8210              		.loc 1 3555 16 view .LVU2351
3559:fltk-1.3.4-1/png/pngread.c ****                {
 8211              		.loc 1 3559 16 view .LVU2352
3559:fltk-1.3.4-1/png/pngread.c ****                {
 8212              		.loc 1 3559 19 is_stmt 0 view .LVU2353
 8213 0115 3C01     		cmpb	$1, %al
 8214 0117 7578     		jne	.L838
 8215              	.LVL863:
 8216 0119 0F1F8000 		.p2align 4,,10
 8216      000000
 8217              		.p2align 3
 8218              	.L878:
3562:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8219              		.loc 1 3562 19 is_stmt 1 view .LVU2354
 8220 0120 4189D0   		movl	%edx, %r8d
 8221 0123 89F8     		movl	%edi, %eax
 8222 0125 B9030000 		movl	$3, %ecx
 8222      00
 8223 012a D1F8     		sarl	%eax
 8224 012c 4183E001 		andl	$1, %r8d
 8225 0130 29C1     		subl	%eax, %ecx
 8226 0132 4489C0   		movl	%r8d, %eax
 8227 0135 D3E0     		sall	%cl, %eax
3562:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8228              		.loc 1 3562 23 is_stmt 0 view .LVU2355
 8229 0137 83FA01   		cmpl	$1, %edx
 8230 013a 0F86C201 		jbe	.L821
 8230      0000
3562:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8231              		.loc 1 3562 23 discriminator 1 view .LVU2356
 8232 0140 B9080000 		movl	$8, %ecx
 8232      00
 8233 0145 BE010000 		movl	$1, %esi
 8233      00
 8234 014a 29F9     		subl	%edi, %ecx
 8235 014c 89C7     		movl	%eax, %edi
 8236 014e D1F9     		sarl	%ecx
 8237 0150 83E707   		andl	$7, %edi
 8238 0153 D3E6     		sall	%cl, %esi
 8239 0155 83EE01   		subl	$1, %esi
 8240 0158 29FE     		subl	%edi, %esi
 8241 015a 0374245C 		addl	92(%rsp), %esi
 8242              	.L833:
3562:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8243              		.loc 1 3562 23 discriminator 8 view .LVU2357
 8244 015e D3EE     		shrl	%cl, %esi
3562:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8245              		.loc 1 3562 22 discriminator 8 view .LVU2358
 8246 0160 85F6     		testl	%esi, %esi
 8247 0162 0F854601 		jne	.L822
 8247      0000
 8248              	.L826:
 8249              	.LBE300:
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8250              		.loc 1 3552 43 is_stmt 1 view .LVU2359
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8251              		.loc 1 3552 28 view .LVU2360
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8252              		.loc 1 3552 13 is_stmt 0 view .LVU2361
 8253 0168 8B7C2440 		movl	64(%rsp), %edi
 8254 016c 397C2458 		cmpl	%edi, 88(%rsp)
 8255 0170 0F842401 		je	.L866
 8255      0000
 8256              	.L823:
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8257              		.loc 1 3552 13 view .LVU2362
 8258 0176 488B4424 		movq	16(%rsp), %rax
 8258      10
 8259 017b 8B542440 		movl	64(%rsp), %edx
 8260 017f 0FB68074 		movzbl	628(%rax), %eax
 8260      020000
 8261              	.LVL864:
 8262              	.LBB301:
3554:fltk-1.3.4-1/png/pngread.c ****                png_uint_32      y;
 8263              		.loc 1 3554 16 is_stmt 1 view .LVU2363
3555:fltk-1.3.4-1/png/pngread.c **** 
 8264              		.loc 1 3555 16 view .LVU2364
3559:fltk-1.3.4-1/png/pngread.c ****                {
 8265              		.loc 1 3559 16 view .LVU2365
 8266 0186 8D7A01   		leal	1(%rdx), %edi
 8267 0189 897C2440 		movl	%edi, 64(%rsp)
3559:fltk-1.3.4-1/png/pngread.c ****                {
 8268              		.loc 1 3559 19 is_stmt 0 view .LVU2366
 8269 018d 3C01     		cmpb	$1, %al
 8270 018f 748F     		je	.L878
 8271              	.LVL865:
 8272              	.L838:
3576:fltk-1.3.4-1/png/pngread.c ****                }
 8273              		.loc 1 3576 25 view .LVU2367
 8274 0191 C7442418 		movl	$1, 24(%rsp)
 8274      01000000 
3575:fltk-1.3.4-1/png/pngread.c ****                   stepy = 1;
 8275              		.loc 1 3575 25 view .LVU2368
 8276 0199 8B742448 		movl	72(%rsp), %esi
3573:fltk-1.3.4-1/png/pngread.c ****                   startx = 0;
 8277              		.loc 1 3573 21 view .LVU2369
 8278 019d 4531E4   		xorl	%r12d, %r12d
3574:fltk-1.3.4-1/png/pngread.c ****                   stepx = outchannels;
 8279              		.loc 1 3574 26 view .LVU2370
 8280 01a0 31C0     		xorl	%eax, %eax
 8281              	.L820:
 8282              	.LVL866:
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8283              		.loc 1 3579 23 is_stmt 1 discriminator 1 view .LVU2371
 8284              	.LBB296:
3592:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
 8285              		.loc 1 3592 26 is_stmt 0 discriminator 1 view .LVU2372
 8286 01a2 4801C0   		addq	%rax, %rax
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8287              		.loc 1 3593 51 discriminator 1 view .LVU2373
 8288 01a5 89F1     		movl	%esi, %ecx
3592:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
 8289              		.loc 1 3592 26 discriminator 1 view .LVU2374
 8290 01a7 48894424 		movq	%rax, 32(%rsp)
 8290      20
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8291              		.loc 1 3593 51 discriminator 1 view .LVU2375
 8292 01ac 4801C9   		addq	%rcx, %rcx
 8293              	.LBE296:
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8294              		.loc 1 3579 16 discriminator 1 view .LVU2376
 8295 01af 44396424 		cmpl	%r12d, 80(%rsp)
 8295      50
 8296 01b4 76B2     		jbe	.L826
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8297              		.loc 1 3579 16 discriminator 1 view .LVU2377
 8298 01b6 4489E0   		movl	%r12d, %eax
 8299 01b9 4989EA   		movq	%rbp, %r10
 8300 01bc 4989DC   		movq	%rbx, %r12
 8301              	.LVL867:
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8302              		.loc 1 3579 16 discriminator 1 view .LVU2378
 8303 01bf 4889CD   		movq	%rcx, %rbp
 8304 01c2 89C3     		movl	%eax, %ebx
 8305              	.LVL868:
 8306              		.p2align 4,,10
 8307 01c4 0F1F4000 		.p2align 3
 8308              	.L825:
 8309              	.LBB297:
3581:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16p outrow = first_row + y*step_row;
 8310              		.loc 1 3581 19 is_stmt 1 view .LVU2379
3582:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16p end_row = outrow + width * outchannels;
 8311              		.loc 1 3582 19 view .LVU2380
3582:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16p end_row = outrow + width * outchannels;
 8312              		.loc 1 3582 54 is_stmt 0 view .LVU2381
 8313 01c8 89D8     		movl	%ebx, %eax
 8314 01ca 480FAF44 		imulq	56(%rsp), %rax
 8314      2438
3582:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16p end_row = outrow + width * outchannels;
 8315              		.loc 1 3582 32 view .LVU2382
 8316 01d0 488B7C24 		movq	48(%rsp), %rdi
 8316      30
3586:fltk-1.3.4-1/png/pngread.c ****                      display->local_row), NULL);
 8317              		.loc 1 3586 19 view .LVU2383
 8318 01d5 31D2     		xorl	%edx, %edx
 8319 01d7 498B7228 		movq	40(%r10), %rsi
 8320 01db 4C891424 		movq	%r10, (%rsp)
3582:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16p end_row = outrow + width * outchannels;
 8321              		.loc 1 3582 32 view .LVU2384
 8322 01df 488D0447 		leaq	(%rdi,%rax,2), %rax
 8323              	.LVL869:
3583:fltk-1.3.4-1/png/pngread.c **** 
 8324              		.loc 1 3583 19 is_stmt 1 view .LVU2385
3583:fltk-1.3.4-1/png/pngread.c **** 
 8325              		.loc 1 3583 32 is_stmt 0 view .LVU2386
 8326 01e3 488B7C24 		movq	40(%rsp), %rdi
 8326      28
 8327 01e8 48894424 		movq	%rax, 8(%rsp)
 8327      08
 8328 01ed 4C8D2C38 		leaq	(%rax,%rdi), %r13
 8329              	.LVL870:
3586:fltk-1.3.4-1/png/pngread.c ****                      display->local_row), NULL);
 8330              		.loc 1 3586 19 is_stmt 1 view .LVU2387
 8331 01f1 488B7C24 		movq	16(%rsp), %rdi
 8331      10
 8332 01f6 E8000000 		call	png_read_row
 8332      00
 8333              	.LVL871:
3588:fltk-1.3.4-1/png/pngread.c **** 
 8334              		.loc 1 3588 19 view .LVU2388
3592:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
 8335              		.loc 1 3592 26 is_stmt 0 view .LVU2389
 8336 01fb 488B7C24 		movq	32(%rsp), %rdi
 8336      20
 8337 0200 488B4424 		movq	8(%rsp), %rax
 8337      08
3588:fltk-1.3.4-1/png/pngread.c **** 
 8338              		.loc 1 3588 25 view .LVU2390
 8339 0205 4C8B1424 		movq	(%rsp), %r10
3592:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
 8340              		.loc 1 3592 26 view .LVU2391
 8341 0209 488D1438 		leaq	(%rax,%rdi), %rdx
3588:fltk-1.3.4-1/png/pngread.c **** 
 8342              		.loc 1 3588 25 view .LVU2392
 8343 020d 498B7228 		movq	40(%r10), %rsi
 8344              	.LVL872:
3592:fltk-1.3.4-1/png/pngread.c ****                   for (; outrow < end_row; outrow += stepx)
 8345              		.loc 1 3592 19 is_stmt 1 view .LVU2393
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8346              		.loc 1 3593 19 view .LVU2394
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8347              		.loc 1 3593 26 view .LVU2395
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8348              		.loc 1 3593 19 is_stmt 0 view .LVU2396
 8349 0211 4939D5   		cmpq	%rdx, %r13
 8350 0214 774F     		ja	.L824
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8351              		.loc 1 3593 19 view .LVU2397
 8352 0216 EB60     		jmp	.L829
 8353              	.LVL873:
 8354 0218 0F1F8400 		.p2align 4,,10
 8354      00000000 
 8355              		.p2align 3
 8356              	.L879:
 8357              	.LBB291:
3595:fltk-1.3.4-1/png/pngread.c ****                      png_uint_16 alpha = inrow[1];
 8358              		.loc 1 3595 34 view .LVU2398
 8359 0220 0FB7F8   		movzwl	%ax, %edi
3600:fltk-1.3.4-1/png/pngread.c ****                         {
 8360              		.loc 1 3600 25 is_stmt 1 view .LVU2399
3600:fltk-1.3.4-1/png/pngread.c ****                         {
 8361              		.loc 1 3600 28 is_stmt 0 view .LVU2400
 8362 0223 6683F9FF 		cmpw	$-1, %cx
 8363 0227 7421     		je	.L827
3602:fltk-1.3.4-1/png/pngread.c ****                            component += 32767;
 8364              		.loc 1 3602 28 is_stmt 1 view .LVU2401
3602:fltk-1.3.4-1/png/pngread.c ****                            component += 32767;
 8365              		.loc 1 3602 38 is_stmt 0 view .LVU2402
 8366 0229 0FB7C1   		movzwl	%cx, %eax
 8367              	.LVL874:
3602:fltk-1.3.4-1/png/pngread.c ****                            component += 32767;
 8368              		.loc 1 3602 38 view .LVU2403
 8369 022c 0FAFC7   		imull	%edi, %eax
 8370              	.LVL875:
3603:fltk-1.3.4-1/png/pngread.c ****                            component /= 65535;
 8371              		.loc 1 3603 28 is_stmt 1 view .LVU2404
3604:fltk-1.3.4-1/png/pngread.c ****                         }
 8372              		.loc 1 3604 28 view .LVU2405
3604:fltk-1.3.4-1/png/pngread.c ****                         }
 8373              		.loc 1 3604 38 is_stmt 0 view .LVU2406
 8374 022f 8DB8FF7F 		leal	32767(%rax), %edi
 8374      0000
 8375 0235 4889F8   		movq	%rdi, %rax
 8376              	.LVL876:
3604:fltk-1.3.4-1/png/pngread.c ****                         }
 8377              		.loc 1 3604 38 view .LVU2407
 8378 0238 48C1E010 		salq	$16, %rax
 8379 023c 4801F8   		addq	%rdi, %rax
 8380 023f 48C1E00F 		salq	$15, %rax
 8381 0243 4801F8   		addq	%rdi, %rax
 8382 0246 48C1E82F 		shrq	$47, %rax
 8383              	.LVL877:
 8384              	.L827:
3611:fltk-1.3.4-1/png/pngread.c ****                      if (preserve_alpha != 0)
 8385              		.loc 1 3611 22 is_stmt 1 view .LVU2408
3611:fltk-1.3.4-1/png/pngread.c ****                      if (preserve_alpha != 0)
 8386              		.loc 1 3611 41 is_stmt 0 view .LVU2409
 8387 024a 66428904 		movw	%ax, (%rdx,%r14)
 8387      32
3612:fltk-1.3.4-1/png/pngread.c ****                         outrow[1 ^ swap_alpha] = alpha;
 8388              		.loc 1 3612 22 is_stmt 1 view .LVU2410
3612:fltk-1.3.4-1/png/pngread.c ****                         outrow[1 ^ swap_alpha] = alpha;
 8389              		.loc 1 3612 25 is_stmt 0 view .LVU2411
 8390 024f 4585FF   		testl	%r15d, %r15d
 8391 0252 7405     		je	.L828
3613:fltk-1.3.4-1/png/pngread.c **** 
 8392              		.loc 1 3613 25 is_stmt 1 view .LVU2412
3613:fltk-1.3.4-1/png/pngread.c **** 
 8393              		.loc 1 3613 48 is_stmt 0 view .LVU2413
 8394 0254 6642890C 		movw	%cx, (%rdx,%r12)
 8394      22
 8395              	.L828:
3615:fltk-1.3.4-1/png/pngread.c ****                   }
 8396              		.loc 1 3615 22 is_stmt 1 view .LVU2414
 8397              	.LBE291:
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8398              		.loc 1 3593 51 is_stmt 0 view .LVU2415
 8399 0259 4801EA   		addq	%rbp, %rdx
 8400              	.LVL878:
 8401              	.LBB292:
3615:fltk-1.3.4-1/png/pngread.c ****                   }
 8402              		.loc 1 3615 28 view .LVU2416
 8403 025c 4883C604 		addq	$4, %rsi
 8404              	.LVL879:
3615:fltk-1.3.4-1/png/pngread.c ****                   }
 8405              		.loc 1 3615 28 view .LVU2417
 8406              	.LBE292:
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8407              		.loc 1 3593 44 is_stmt 1 view .LVU2418
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8408              		.loc 1 3593 26 view .LVU2419
3593:fltk-1.3.4-1/png/pngread.c ****                   {
 8409              		.loc 1 3593 19 is_stmt 0 view .LVU2420
 8410 0260 4939D5   		cmpq	%rdx, %r13
 8411 0263 7613     		jbe	.L829
 8412              	.LVL880:
 8413              	.L824:
 8414              	.LBB293:
3595:fltk-1.3.4-1/png/pngread.c ****                      png_uint_16 alpha = inrow[1];
 8415              		.loc 1 3595 22 is_stmt 1 view .LVU2421
3596:fltk-1.3.4-1/png/pngread.c **** 
 8416              		.loc 1 3596 34 is_stmt 0 view .LVU2422
 8417 0265 0FB74E02 		movzwl	2(%rsi), %ecx
3595:fltk-1.3.4-1/png/pngread.c ****                      png_uint_16 alpha = inrow[1];
 8418              		.loc 1 3595 51 view .LVU2423
 8419 0269 0FB706   		movzwl	(%rsi), %eax
 8420              	.LVL881:
3596:fltk-1.3.4-1/png/pngread.c **** 
 8421              		.loc 1 3596 22 is_stmt 1 view .LVU2424
3598:fltk-1.3.4-1/png/pngread.c ****                      {
 8422              		.loc 1 3598 22 view .LVU2425
3598:fltk-1.3.4-1/png/pngread.c ****                      {
 8423              		.loc 1 3598 25 is_stmt 0 view .LVU2426
 8424 026c 6685C9   		testw	%cx, %cx
 8425 026f 75AF     		jne	.L879
3598:fltk-1.3.4-1/png/pngread.c ****                      {
 8426              		.loc 1 3598 25 view .LVU2427
 8427 0271 31C0     		xorl	%eax, %eax
 8428              	.LVL882:
3598:fltk-1.3.4-1/png/pngread.c ****                      {
 8429              		.loc 1 3598 25 view .LVU2428
 8430 0273 EBD5     		jmp	.L827
 8431              	.LVL883:
 8432              		.p2align 4,,10
 8433 0275 0F1F00   		.p2align 3
 8434              	.L829:
3598:fltk-1.3.4-1/png/pngread.c ****                      {
 8435              		.loc 1 3598 25 view .LVU2429
 8436              	.LBE293:
 8437              	.LBE297:
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8438              		.loc 1 3579 33 is_stmt 1 view .LVU2430
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8439              		.loc 1 3579 35 is_stmt 0 view .LVU2431
 8440 0278 035C2418 		addl	24(%rsp), %ebx
 8441              	.LVL884:
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8442              		.loc 1 3579 23 is_stmt 1 view .LVU2432
3579:fltk-1.3.4-1/png/pngread.c ****                {
 8443              		.loc 1 3579 16 is_stmt 0 view .LVU2433
 8444 027c 395C2450 		cmpl	%ebx, 80(%rsp)
 8445 0280 0F8742FF 		ja	.L825
 8445      FFFF
 8446              	.LBE301:
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8447              		.loc 1 3552 13 view .LVU2434
 8448 0286 8B7C2440 		movl	64(%rsp), %edi
 8449 028a 4C89E3   		movq	%r12, %rbx
 8450              	.LVL885:
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8451              		.loc 1 3552 13 view .LVU2435
 8452 028d 4C89D5   		movq	%r10, %rbp
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8453              		.loc 1 3552 43 is_stmt 1 view .LVU2436
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8454              		.loc 1 3552 28 view .LVU2437
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8455              		.loc 1 3552 13 is_stmt 0 view .LVU2438
 8456 0290 397C2458 		cmpl	%edi, 88(%rsp)
 8457 0294 0F85DCFE 		jne	.L823
 8457      FFFF
 8458              	.LVL886:
 8459              	.L866:
3552:fltk-1.3.4-1/png/pngread.c ****             {
 8460              		.loc 1 3552 13 view .LVU2439
 8461              	.LBE285:
3624:fltk-1.3.4-1/png/pngread.c **** 
 8462              		.loc 1 3624 1 view .LVU2440
 8463 029a 4883C468 		addq	$104, %rsp
 8464              		.cfi_remember_state
 8465              		.cfi_def_cfa_offset 56
 8466 029e B8010000 		movl	$1, %eax
 8466      00
 8467 02a3 5B       		popq	%rbx
 8468              		.cfi_def_cfa_offset 48
 8469 02a4 5D       		popq	%rbp
 8470              		.cfi_def_cfa_offset 40
 8471 02a5 415C     		popq	%r12
 8472              		.cfi_def_cfa_offset 32
 8473 02a7 415D     		popq	%r13
 8474              		.cfi_def_cfa_offset 24
 8475 02a9 415E     		popq	%r14
 8476              		.cfi_def_cfa_offset 16
 8477 02ab 415F     		popq	%r15
 8478              		.cfi_def_cfa_offset 8
 8479 02ad C3       		ret
 8480              	.LVL887:
 8481              	.L822:
 8482              		.cfi_restore_state
 8483              	.LBB303:
 8484              	.LBB302:
3565:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass) * outchannels;
 8485              		.loc 1 3565 19 is_stmt 1 view .LVU2441
3565:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass) * outchannels;
 8486              		.loc 1 3565 26 is_stmt 0 view .LVU2442
 8487 02ae 8B7C2448 		movl	72(%rsp), %edi
3566:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8488              		.loc 1 3566 27 view .LVU2443
 8489 02b2 B9080000 		movl	$8, %ecx
 8489      00
 8490 02b7 2B4C2440 		subl	64(%rsp), %ecx
3565:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass) * outchannels;
 8491              		.loc 1 3565 28 view .LVU2444
 8492 02bb 83E007   		andl	$7, %eax
3566:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8493              		.loc 1 3566 27 view .LVU2445
 8494 02be D1F9     		sarl	%ecx
3567:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8495              		.loc 1 3567 23 view .LVU2446
 8496 02c0 4183F001 		xorl	$1, %r8d
3565:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass) * outchannels;
 8497              		.loc 1 3565 26 view .LVU2447
 8498 02c4 0FAFC7   		imull	%edi, %eax
3566:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8499              		.loc 1 3566 19 is_stmt 1 view .LVU2448
3566:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8500              		.loc 1 3566 25 is_stmt 0 view .LVU2449
 8501 02c7 D3E7     		sall	%cl, %edi
3567:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8502              		.loc 1 3567 23 view .LVU2450
 8503 02c9 B9030000 		movl	$3, %ecx
 8503      00
3566:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8504              		.loc 1 3566 25 view .LVU2451
 8505 02ce 89FE     		movl	%edi, %esi
 8506              	.LVL888:
3567:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8507              		.loc 1 3567 19 is_stmt 1 view .LVU2452
3567:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8508              		.loc 1 3567 23 is_stmt 0 view .LVU2453
 8509 02d0 89D7     		movl	%edx, %edi
 8510 02d2 D1FF     		sarl	%edi
 8511 02d4 29F9     		subl	%edi, %ecx
3568:fltk-1.3.4-1/png/pngread.c ****                }
 8512              		.loc 1 3568 27 view .LVU2454
 8513 02d6 BF080000 		movl	$8, %edi
 8513      00
3567:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8514              		.loc 1 3567 23 view .LVU2455
 8515 02db 41D3E0   		sall	%cl, %r8d
3568:fltk-1.3.4-1/png/pngread.c ****                }
 8516              		.loc 1 3568 27 view .LVU2456
 8517 02de 897C2418 		movl	%edi, 24(%rsp)
3567:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8518              		.loc 1 3567 21 view .LVU2457
 8519 02e2 4183E007 		andl	$7, %r8d
 8520 02e6 4589C4   		movl	%r8d, %r12d
 8521              	.LVL889:
3568:fltk-1.3.4-1/png/pngread.c ****                }
 8522              		.loc 1 3568 19 is_stmt 1 view .LVU2458
3568:fltk-1.3.4-1/png/pngread.c ****                }
 8523              		.loc 1 3568 27 is_stmt 0 view .LVU2459
 8524 02e9 83FA02   		cmpl	$2, %edx
 8525 02ec 0F86B0FE 		jbe	.L820
 8525      FFFF
3568:fltk-1.3.4-1/png/pngread.c ****                }
 8526              		.loc 1 3568 27 discriminator 1 view .LVU2460
 8527 02f2 8D4AFF   		leal	-1(%rdx), %ecx
 8528 02f5 D1F9     		sarl	%ecx
 8529 02f7 D3FF     		sarl	%cl, %edi
 8530 02f9 897C2418 		movl	%edi, 24(%rsp)
 8531 02fd E9A0FEFF 		jmp	.L820
 8531      FF
 8532              	.LVL890:
 8533              	.L821:
3562:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8534              		.loc 1 3562 23 view .LVU2461
 8535 0302 89C6     		movl	%eax, %esi
 8536 0304 B9030000 		movl	$3, %ecx
 8536      00
 8537 0309 F7D6     		notl	%esi
 8538 030b 83E607   		andl	$7, %esi
 8539 030e 0374245C 		addl	92(%rsp), %esi
 8540 0312 E947FEFF 		jmp	.L833
 8540      FF
 8541              	.LVL891:
 8542              	.L797:
3562:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8543              		.loc 1 3562 23 view .LVU2462
 8544              	.LBE302:
 8545              	.LBE303:
3402:fltk-1.3.4-1/png/pngread.c **** 
 8546              		.loc 1 3402 10 is_stmt 1 view .LVU2463
 8547              	.LBB304:
3411:fltk-1.3.4-1/png/pngread.c ****             ptrdiff_t step_row = display->row_bytes;
 8548              		.loc 1 3411 13 view .LVU2464
3411:fltk-1.3.4-1/png/pngread.c ****             ptrdiff_t step_row = display->row_bytes;
 8549              		.loc 1 3411 23 is_stmt 0 view .LVU2465
 8550 0317 488B7D30 		movq	48(%rbp), %rdi
3414:fltk-1.3.4-1/png/pngread.c ****             {
 8551              		.loc 1 3414 23 view .LVU2466
 8552 031b 31D2     		xorl	%edx, %edx
 8553              	.LBB305:
 8554              	.LBB306:
 8555              	.LBB307:
 8556              	.LBB308:
 8557              	.LBB309:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8558              		.loc 1 3511 43 view .LVU2467
 8559 031d 48895C24 		movq	%rbx, 24(%rsp)
 8559      18
 8560              	.LBE309:
 8561              	.LBE308:
 8562              	.LBE307:
3485:fltk-1.3.4-1/png/pngread.c **** 
 8563              		.loc 1 3485 31 view .LVU2468
 8564 0322 4C8D2500 		leaq	png_sRGB_table(%rip), %r12
 8564      000000
 8565              	.LVL892:
3485:fltk-1.3.4-1/png/pngread.c **** 
 8566              		.loc 1 3485 31 view .LVU2469
 8567 0329 8D5A01   		leal	1(%rdx), %ebx
 8568              	.LVL893:
 8569              	.LBB320:
 8570              	.LBB314:
 8571              	.LBB310:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8572              		.loc 1 3511 43 view .LVU2470
 8573 032c 48896C24 		movq	%rbp, 16(%rsp)
 8573      10
 8574              	.LBE310:
 8575              	.LBE314:
 8576              	.LBE320:
 8577              	.LBE306:
 8578              	.LBE305:
3411:fltk-1.3.4-1/png/pngread.c ****             ptrdiff_t step_row = display->row_bytes;
 8579              		.loc 1 3411 23 view .LVU2471
 8580 0331 48897C24 		movq	%rdi, 40(%rsp)
 8580      28
 8581              	.LVL894:
3412:fltk-1.3.4-1/png/pngread.c **** 
 8582              		.loc 1 3412 13 is_stmt 1 view .LVU2472
3412:fltk-1.3.4-1/png/pngread.c **** 
 8583              		.loc 1 3412 23 is_stmt 0 view .LVU2473
 8584 0336 488B7D38 		movq	56(%rbp), %rdi
 8585              	.LVL895:
3412:fltk-1.3.4-1/png/pngread.c **** 
 8586              		.loc 1 3412 23 view .LVU2474
 8587 033a 895C2454 		movl	%ebx, 84(%rsp)
 8588 033e 48897C24 		movq	%rdi, 48(%rsp)
 8588      30
 8589              	.LVL896:
3414:fltk-1.3.4-1/png/pngread.c ****             {
 8590              		.loc 1 3414 13 is_stmt 1 view .LVU2475
3414:fltk-1.3.4-1/png/pngread.c ****             {
 8591              		.loc 1 3414 28 view .LVU2476
 8592              	.LBB333:
3416:fltk-1.3.4-1/png/pngread.c ****                                                    display->first_row);
 8593              		.loc 1 3416 16 view .LVU2477
3418:fltk-1.3.4-1/png/pngread.c ****                png_uint_32      y;
 8594              		.loc 1 3418 16 view .LVU2478
3419:fltk-1.3.4-1/png/pngread.c **** 
 8595              		.loc 1 3419 16 view .LVU2479
3421:fltk-1.3.4-1/png/pngread.c ****                {
 8596              		.loc 1 3421 16 view .LVU2480
3421:fltk-1.3.4-1/png/pngread.c ****                {
 8597              		.loc 1 3421 19 is_stmt 0 view .LVU2481
 8598 0343 3C01     		cmpb	$1, %al
 8599 0345 0F846901 		je	.L880
 8599      0000
 8600              	.LVL897:
 8601 034b 0F1F4400 		.p2align 4,,10
 8601      00
 8602              		.p2align 3
 8603              	.L836:
3437:fltk-1.3.4-1/png/pngread.c ****                }
 8604              		.loc 1 3437 33 view .LVU2482
 8605 0350 C7442408 		movl	$1, 8(%rsp)
 8605      01000000 
3435:fltk-1.3.4-1/png/pngread.c ****                   startx = 0;
 8606              		.loc 1 3435 21 view .LVU2483
 8607 0358 4531F6   		xorl	%r14d, %r14d
3436:fltk-1.3.4-1/png/pngread.c ****                   stepx = stepy = 1;
 8608              		.loc 1 3436 26 view .LVU2484
 8609 035b 31F6     		xorl	%esi, %esi
3437:fltk-1.3.4-1/png/pngread.c ****                }
 8610              		.loc 1 3437 25 view .LVU2485
 8611 035d C7442420 		movl	$1, 32(%rsp)
 8611      01000000 
 8612              	.L799:
 8613              	.LVL898:
3440:fltk-1.3.4-1/png/pngread.c ****                {
 8614              		.loc 1 3440 16 is_stmt 1 view .LVU2486
3440:fltk-1.3.4-1/png/pngread.c ****                {
 8615              		.loc 1 3440 27 is_stmt 0 view .LVU2487
 8616 0365 488B4424 		movq	16(%rsp), %rax
 8616      10
 8617 036a 488B4020 		movq	32(%rax), %rax
3440:fltk-1.3.4-1/png/pngread.c ****                {
 8618              		.loc 1 3440 19 view .LVU2488
 8619 036e 4885C0   		testq	%rax, %rax
 8620 0371 0F84DF01 		je	.L881
 8620      0000
 8621              	.L804:
 8622              	.LBB323:
3484:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16 background = png_sRGB_table[background8];
 8623              		.loc 1 3484 19 is_stmt 1 view .LVU2489
3484:fltk-1.3.4-1/png/pngread.c ****                   png_uint_16 background = png_sRGB_table[background8];
 8624              		.loc 1 3484 28 is_stmt 0 view .LVU2490
 8625 0377 0FB64001 		movzbl	1(%rax), %eax
 8626 037b 4989C7   		movq	%rax, %r15
 8627              	.LVL899:
3485:fltk-1.3.4-1/png/pngread.c **** 
 8628              		.loc 1 3485 19 is_stmt 1 view .LVU2491
3485:fltk-1.3.4-1/png/pngread.c **** 
 8629              		.loc 1 3485 31 is_stmt 0 view .LVU2492
 8630 037e 410FB704 		movzwl	(%r12,%rax,2), %eax
 8630      44
 8631              	.LVL900:
3485:fltk-1.3.4-1/png/pngread.c **** 
 8632              		.loc 1 3485 31 view .LVU2493
 8633 0383 66894424 		movw	%ax, 56(%rsp)
 8633      38
 8634              	.LVL901:
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8635              		.loc 1 3487 19 is_stmt 1 view .LVU2494
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8636              		.loc 1 3487 26 view .LVU2495
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8637              		.loc 1 3487 19 is_stmt 0 view .LVU2496
 8638 0388 443B7424 		cmpl	80(%rsp), %r14d
 8638      50
 8639 038d 0F83F400 		jnb	.L805
 8639      0000
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8640              		.loc 1 3487 19 view .LVU2497
 8641 0393 8B44245C 		movl	92(%rsp), %eax
 8642              	.LVL902:
 8643              	.LBB321:
 8644              	.LBB315:
 8645              	.LBB311:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8646              		.loc 1 3511 43 view .LVU2498
 8647 0397 488D2D00 		leaq	png_sRGB_delta(%rip), %rbp
 8647      000000
 8648 039e 4589F5   		movl	%r14d, %r13d
 8649 03a1 48894424 		movq	%rax, 64(%rsp)
 8649      40
 8650 03a6 89F0     		movl	%esi, %eax
 8651 03a8 48894424 		movq	%rax, 72(%rsp)
 8651      48
 8652              	.LVL903:
 8653 03ad 0F1F00   		.p2align 4,,10
 8654              		.p2align 3
 8655              	.L813:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8656              		.loc 1 3511 43 view .LVU2499
 8657              	.LBE311:
 8658              	.LBE315:
3489:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
 8659              		.loc 1 3489 22 is_stmt 1 view .LVU2500
3489:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
 8660              		.loc 1 3489 32 is_stmt 0 view .LVU2501
 8661 03b0 488B4424 		movq	16(%rsp), %rax
 8661      10
3491:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
 8662              		.loc 1 3491 55 view .LVU2502
 8663 03b5 4489EA   		movl	%r13d, %edx
 8664 03b8 480FAF54 		imulq	48(%rsp), %rdx
 8664      2430
3495:fltk-1.3.4-1/png/pngread.c **** 
 8665              		.loc 1 3495 22 view .LVU2503
 8666 03be 488B7C24 		movq	24(%rsp), %rdi
 8666      18
3489:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
 8667              		.loc 1 3489 32 view .LVU2504
 8668 03c3 488B7028 		movq	40(%rax), %rsi
 8669              	.LVL904:
3491:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
 8670              		.loc 1 3491 22 is_stmt 1 view .LVU2505
3491:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
 8671              		.loc 1 3491 32 is_stmt 0 view .LVU2506
 8672 03c7 488B4424 		movq	40(%rsp), %rax
 8672      28
 8673 03cc 488D1C10 		leaq	(%rax,%rdx), %rbx
 8674              	.LVL905:
3492:fltk-1.3.4-1/png/pngread.c **** 
 8675              		.loc 1 3492 22 is_stmt 1 view .LVU2507
3492:fltk-1.3.4-1/png/pngread.c **** 
 8676              		.loc 1 3492 38 is_stmt 0 view .LVU2508
 8677 03d0 488B4424 		movq	64(%rsp), %rax
 8677      40
3495:fltk-1.3.4-1/png/pngread.c **** 
 8678              		.loc 1 3495 22 view .LVU2509
 8679 03d5 31D2     		xorl	%edx, %edx
 8680 03d7 48893424 		movq	%rsi, (%rsp)
3492:fltk-1.3.4-1/png/pngread.c **** 
 8681              		.loc 1 3492 38 view .LVU2510
 8682 03db 4C8D3403 		leaq	(%rbx,%rax), %r14
 8683              	.LVL906:
3495:fltk-1.3.4-1/png/pngread.c **** 
 8684              		.loc 1 3495 22 is_stmt 1 view .LVU2511
 8685 03df E8000000 		call	png_read_row
 8685      00
 8686              	.LVL907:
3498:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
 8687              		.loc 1 3498 22 view .LVU2512
3498:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
 8688              		.loc 1 3498 29 is_stmt 0 view .LVU2513
 8689 03e4 488B4424 		movq	72(%rsp), %rax
 8689      48
 8690 03e9 8B7C2420 		movl	32(%rsp), %edi
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8691              		.loc 1 3499 22 view .LVU2514
 8692 03ed 41B9FF00 		movl	$255, %r9d
 8692      0000
 8693              	.LBB316:
 8694              	.LBB312:
3510:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 8695              		.loc 1 3510 55 view .LVU2515
 8696 03f3 440FB754 		movzwl	56(%rsp), %r10d
 8696      2438
 8697              	.LBE312:
 8698              	.LBE316:
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8699              		.loc 1 3499 22 view .LVU2516
 8700 03f9 488B3424 		movq	(%rsp), %rsi
3498:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
 8701              		.loc 1 3498 29 view .LVU2517
 8702 03fd 488D1403 		leaq	(%rbx,%rax), %rdx
 8703              	.LVL908:
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8704              		.loc 1 3499 22 is_stmt 1 view .LVU2518
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8705              		.loc 1 3499 29 view .LVU2519
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8706              		.loc 1 3499 22 is_stmt 0 view .LVU2520
 8707 0401 4939D6   		cmpq	%rdx, %r14
 8708 0404 7671     		jbe	.L818
 8709 0406 662E0F1F 		.p2align 4,,10
 8709      84000000 
 8709      0000
 8710              		.p2align 3
 8711              	.L817:
 8712              	.LBB317:
3501:fltk-1.3.4-1/png/pngread.c **** 
 8713              		.loc 1 3501 25 is_stmt 1 view .LVU2521
3501:fltk-1.3.4-1/png/pngread.c **** 
 8714              		.loc 1 3501 34 is_stmt 0 view .LVU2522
 8715 0410 0FB64E01 		movzbl	1(%rsi), %ecx
 8716              	.LVL909:
3503:fltk-1.3.4-1/png/pngread.c ****                         {
 8717              		.loc 1 3503 25 is_stmt 1 view .LVU2523
3503:fltk-1.3.4-1/png/pngread.c ****                         {
 8718              		.loc 1 3503 28 is_stmt 0 view .LVU2524
 8719 0414 84C9     		testb	%cl, %cl
 8720 0416 0F844402 		je	.L814
 8720      0000
 8721              	.LBB313:
3505:fltk-1.3.4-1/png/pngread.c **** 
 8722              		.loc 1 3505 28 is_stmt 1 view .LVU2525
3505:fltk-1.3.4-1/png/pngread.c **** 
 8723              		.loc 1 3505 57 is_stmt 0 view .LVU2526
 8724 041c 440FB606 		movzbl	(%rsi), %r8d
 8725 0420 4489C0   		movl	%r8d, %eax
 8726              	.LVL910:
3507:fltk-1.3.4-1/png/pngread.c ****                            {
 8727              		.loc 1 3507 28 is_stmt 1 view .LVU2527
3507:fltk-1.3.4-1/png/pngread.c ****                            {
 8728              		.loc 1 3507 31 is_stmt 0 view .LVU2528
 8729 0423 80F9FF   		cmpb	$-1, %cl
 8730 0426 7441     		je	.L815
3509:fltk-1.3.4-1/png/pngread.c ****                               component += background * (255-alpha);
 8731              		.loc 1 3509 31 is_stmt 1 view .LVU2529
3509:fltk-1.3.4-1/png/pngread.c ****                               component += background * (255-alpha);
 8732              		.loc 1 3509 57 is_stmt 0 view .LVU2530
 8733 0428 4589C0   		movl	%r8d, %r8d
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8734              		.loc 1 3511 43 view .LVU2531
 8735 042b 488D1D00 		leaq	png_sRGB_base(%rip), %rbx
 8735      000000
3509:fltk-1.3.4-1/png/pngread.c ****                               component += background * (255-alpha);
 8736              		.loc 1 3509 57 view .LVU2532
 8737 0432 430FB704 		movzwl	(%r12,%r8,2), %eax
 8737      44
 8738              	.LVL911:
3509:fltk-1.3.4-1/png/pngread.c ****                               component += background * (255-alpha);
 8739              		.loc 1 3509 69 view .LVU2533
 8740 0437 0FAFC1   		imull	%ecx, %eax
 8741 043a 4189C0   		movl	%eax, %r8d
 8742              	.LVL912:
3510:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 8743              		.loc 1 3510 31 is_stmt 1 view .LVU2534
3510:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 8744              		.loc 1 3510 61 is_stmt 0 view .LVU2535
 8745 043d 4489C8   		movl	%r9d, %eax
 8746              	.LVL913:
3510:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 8747              		.loc 1 3510 61 view .LVU2536
 8748 0440 29C8     		subl	%ecx, %eax
3510:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 8749              		.loc 1 3510 55 view .LVU2537
 8750 0442 410FAFC2 		imull	%r10d, %eax
3510:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 8751              		.loc 1 3510 41 view .LVU2538
 8752 0446 4401C0   		addl	%r8d, %eax
 8753              	.LVL914:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8754              		.loc 1 3511 31 is_stmt 1 view .LVU2539
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8755              		.loc 1 3511 43 is_stmt 0 view .LVU2540
 8756 0449 89C1     		movl	%eax, %ecx
 8757              	.LVL915:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8758              		.loc 1 3511 43 view .LVU2541
 8759 044b 25FF7F00 		andl	$32767, %eax
 8759      00
 8760              	.LVL916:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8761              		.loc 1 3511 43 view .LVU2542
 8762 0450 C1E90F   		shrl	$15, %ecx
 8763              	.LVL917:
3511:fltk-1.3.4-1/png/pngread.c ****                            }
 8764              		.loc 1 3511 43 view .LVU2543
 8765 0453 440FB644 		movzbl	0(%rbp,%rcx), %r8d
 8765      0D00
 8766 0459 0FB70C4B 		movzwl	(%rbx,%rcx,2), %ecx
 8767 045d 410FAFC0 		imull	%r8d, %eax
 8768 0461 C1E80C   		shrl	$12, %eax
 8769 0464 01C8     		addl	%ecx, %eax
 8770 0466 0FB6C4   		movzbl	%ah, %eax
 8771              	.L815:
3514:fltk-1.3.4-1/png/pngread.c ****                         }
 8772              		.loc 1 3514 28 is_stmt 1 view .LVU2544
3514:fltk-1.3.4-1/png/pngread.c ****                         }
 8773              		.loc 1 3514 38 is_stmt 0 view .LVU2545
 8774 0469 8802     		movb	%al, (%rdx)
 8775              	.LVL918:
 8776              	.L816:
3514:fltk-1.3.4-1/png/pngread.c ****                         }
 8777              		.loc 1 3514 38 view .LVU2546
 8778              	.LBE313:
3520:fltk-1.3.4-1/png/pngread.c ****                      }
 8779              		.loc 1 3520 25 is_stmt 1 view .LVU2547
 8780              	.LBE317:
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8781              		.loc 1 3499 54 is_stmt 0 view .LVU2548
 8782 046b 4801FA   		addq	%rdi, %rdx
 8783              	.LVL919:
 8784              	.LBB318:
3520:fltk-1.3.4-1/png/pngread.c ****                      }
 8785              		.loc 1 3520 31 view .LVU2549
 8786 046e 4883C602 		addq	$2, %rsi
 8787              	.LVL920:
3520:fltk-1.3.4-1/png/pngread.c ****                      }
 8788              		.loc 1 3520 31 view .LVU2550
 8789              	.LBE318:
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8790              		.loc 1 3499 47 is_stmt 1 view .LVU2551
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8791              		.loc 1 3499 29 view .LVU2552
3499:fltk-1.3.4-1/png/pngread.c ****                      {
 8792              		.loc 1 3499 22 is_stmt 0 view .LVU2553
 8793 0472 4939D6   		cmpq	%rdx, %r14
 8794 0475 7799     		ja	.L817
 8795              	.L818:
3523:fltk-1.3.4-1/png/pngread.c ****                   }
 8796              		.loc 1 3523 22 is_stmt 1 view .LVU2554
 8797              	.LBE321:
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8798              		.loc 1 3487 36 view .LVU2555
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8799              		.loc 1 3487 38 is_stmt 0 view .LVU2556
 8800 0477 44036C24 		addl	8(%rsp), %r13d
 8800      08
 8801              	.LVL921:
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8802              		.loc 1 3487 26 is_stmt 1 view .LVU2557
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8803              		.loc 1 3487 19 is_stmt 0 view .LVU2558
 8804 047c 44396C24 		cmpl	%r13d, 80(%rsp)
 8804      50
 8805 0481 0F8729FF 		ja	.L813
 8805      FFFF
 8806              	.LVL922:
 8807              	.L805:
3487:fltk-1.3.4-1/png/pngread.c ****                   {
 8808              		.loc 1 3487 19 view .LVU2559
 8809              	.LBE323:
 8810              	.LBE333:
3414:fltk-1.3.4-1/png/pngread.c ****             {
 8811              		.loc 1 3414 43 is_stmt 1 view .LVU2560
3414:fltk-1.3.4-1/png/pngread.c ****             {
 8812              		.loc 1 3414 28 view .LVU2561
3414:fltk-1.3.4-1/png/pngread.c ****             {
 8813              		.loc 1 3414 13 is_stmt 0 view .LVU2562
 8814 0487 8B5C2454 		movl	84(%rsp), %ebx
 8815 048b 395C2458 		cmpl	%ebx, 88(%rsp)
 8816 048f 0F8405FE 		je	.L866
 8816      FFFF
 8817 0495 488B4424 		movq	24(%rsp), %rax
 8817      18
 8818 049a 8B542454 		movl	84(%rsp), %edx
 8819 049e 0FB68074 		movzbl	628(%rax), %eax
 8819      020000
 8820              	.LVL923:
 8821              	.LBB334:
3416:fltk-1.3.4-1/png/pngread.c ****                                                    display->first_row);
 8822              		.loc 1 3416 16 is_stmt 1 view .LVU2563
3418:fltk-1.3.4-1/png/pngread.c ****                png_uint_32      y;
 8823              		.loc 1 3418 16 view .LVU2564
3419:fltk-1.3.4-1/png/pngread.c **** 
 8824              		.loc 1 3419 16 view .LVU2565
3421:fltk-1.3.4-1/png/pngread.c ****                {
 8825              		.loc 1 3421 16 view .LVU2566
 8826 04a5 8D5A01   		leal	1(%rdx), %ebx
 8827 04a8 895C2454 		movl	%ebx, 84(%rsp)
3421:fltk-1.3.4-1/png/pngread.c ****                {
 8828              		.loc 1 3421 19 is_stmt 0 view .LVU2567
 8829 04ac 3C01     		cmpb	$1, %al
 8830 04ae 0F859CFE 		jne	.L836
 8830      FFFF
 8831              	.LVL924:
 8832              	.L880:
3424:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8833              		.loc 1 3424 19 is_stmt 1 view .LVU2568
 8834 04b4 89D7     		movl	%edx, %edi
 8835 04b6 89D8     		movl	%ebx, %eax
 8836 04b8 B9030000 		movl	$3, %ecx
 8836      00
 8837 04bd 83E701   		andl	$1, %edi
 8838 04c0 D1F8     		sarl	%eax
 8839 04c2 29C1     		subl	%eax, %ecx
 8840 04c4 89FE     		movl	%edi, %esi
 8841 04c6 D3E6     		sall	%cl, %esi
3424:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8842              		.loc 1 3424 23 is_stmt 0 view .LVU2569
 8843 04c8 83FA01   		cmpl	$1, %edx
 8844 04cb 0F869701 		jbe	.L800
 8844      0000
3424:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8845              		.loc 1 3424 23 discriminator 1 view .LVU2570
 8846 04d1 B9080000 		movl	$8, %ecx
 8846      00
 8847 04d6 B8010000 		movl	$1, %eax
 8847      00
 8848 04db 4189F0   		movl	%esi, %r8d
 8849 04de 29D9     		subl	%ebx, %ecx
 8850 04e0 4183E007 		andl	$7, %r8d
 8851 04e4 D1F9     		sarl	%ecx
 8852 04e6 D3E0     		sall	%cl, %eax
 8853 04e8 83E801   		subl	$1, %eax
 8854 04eb 4429C0   		subl	%r8d, %eax
 8855 04ee 0344245C 		addl	92(%rsp), %eax
 8856              	.L832:
3424:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8857              		.loc 1 3424 23 discriminator 8 view .LVU2571
 8858 04f2 D3E8     		shrl	%cl, %eax
3424:fltk-1.3.4-1/png/pngread.c ****                      continue;
 8859              		.loc 1 3424 22 discriminator 8 view .LVU2572
 8860 04f4 85C0     		testl	%eax, %eax
 8861 04f6 748F     		je	.L805
3427:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass);
 8862              		.loc 1 3427 19 is_stmt 1 view .LVU2573
3428:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8863              		.loc 1 3428 27 is_stmt 0 view .LVU2574
 8864 04f8 B9080000 		movl	$8, %ecx
 8864      00
 8865 04fd 2B4C2454 		subl	84(%rsp), %ecx
3429:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8866              		.loc 1 3429 23 view .LVU2575
 8867 0501 83F701   		xorl	$1, %edi
3427:fltk-1.3.4-1/png/pngread.c ****                   stepx = PNG_PASS_COL_OFFSET(pass);
 8868              		.loc 1 3427 26 view .LVU2576
 8869 0504 83E607   		andl	$7, %esi
 8870              	.LVL925:
3428:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8871              		.loc 1 3428 19 is_stmt 1 view .LVU2577
3428:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8872              		.loc 1 3428 27 is_stmt 0 view .LVU2578
 8873 0507 D1F9     		sarl	%ecx
 8874 0509 B8010000 		movl	$1, %eax
 8874      00
 8875 050e D3E0     		sall	%cl, %eax
3429:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8876              		.loc 1 3429 23 view .LVU2579
 8877 0510 B9030000 		movl	$3, %ecx
 8877      00
3428:fltk-1.3.4-1/png/pngread.c ****                   y = PNG_PASS_START_ROW(pass);
 8878              		.loc 1 3428 27 view .LVU2580
 8879 0515 89442420 		movl	%eax, 32(%rsp)
 8880              	.LVL926:
3429:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8881              		.loc 1 3429 19 is_stmt 1 view .LVU2581
3429:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8882              		.loc 1 3429 23 is_stmt 0 view .LVU2582
 8883 0519 89D0     		movl	%edx, %eax
 8884              	.LVL927:
3429:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8885              		.loc 1 3429 23 view .LVU2583
 8886 051b D1F8     		sarl	%eax
 8887 051d 29C1     		subl	%eax, %ecx
3430:fltk-1.3.4-1/png/pngread.c ****                }
 8888              		.loc 1 3430 27 view .LVU2584
 8889 051f B8080000 		movl	$8, %eax
 8889      00
3429:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8890              		.loc 1 3429 23 view .LVU2585
 8891 0524 D3E7     		sall	%cl, %edi
3430:fltk-1.3.4-1/png/pngread.c ****                }
 8892              		.loc 1 3430 27 view .LVU2586
 8893 0526 89442408 		movl	%eax, 8(%rsp)
3429:fltk-1.3.4-1/png/pngread.c ****                   stepy = PNG_PASS_ROW_OFFSET(pass);
 8894              		.loc 1 3429 21 view .LVU2587
 8895 052a 83E707   		andl	$7, %edi
 8896 052d 4189FE   		movl	%edi, %r14d
 8897              	.LVL928:
3430:fltk-1.3.4-1/png/pngread.c ****                }
 8898              		.loc 1 3430 19 is_stmt 1 view .LVU2588
3430:fltk-1.3.4-1/png/pngread.c ****                }
 8899              		.loc 1 3430 27 is_stmt 0 view .LVU2589
 8900 0530 83FA02   		cmpl	$2, %edx
 8901 0533 0F862CFE 		jbe	.L799
 8901      FFFF
3430:fltk-1.3.4-1/png/pngread.c ****                }
 8902              		.loc 1 3430 27 discriminator 1 view .LVU2590
 8903 0539 8D4AFF   		leal	-1(%rdx), %ecx
 8904 053c D1F9     		sarl	%ecx
 8905 053e D3F8     		sarl	%cl, %eax
 8906 0540 89442408 		movl	%eax, 8(%rsp)
 8907              	.LVL929:
3440:fltk-1.3.4-1/png/pngread.c ****                {
 8908              		.loc 1 3440 16 is_stmt 1 discriminator 1 view .LVU2591
3440:fltk-1.3.4-1/png/pngread.c ****                {
 8909              		.loc 1 3440 27 is_stmt 0 discriminator 1 view .LVU2592
 8910 0544 488B4424 		movq	16(%rsp), %rax
 8910      10
 8911              	.LVL930:
3440:fltk-1.3.4-1/png/pngread.c ****                {
 8912              		.loc 1 3440 27 discriminator 1 view .LVU2593
 8913 0549 488B4020 		movq	32(%rax), %rax
3440:fltk-1.3.4-1/png/pngread.c ****                {
 8914              		.loc 1 3440 19 discriminator 1 view .LVU2594
 8915 054d 4885C0   		testq	%rax, %rax
 8916 0550 0F8521FE 		jne	.L804
 8916      FFFF
 8917              	.LVL931:
 8918              	.L881:
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 8919              		.loc 1 3442 26 is_stmt 1 view .LVU2595
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 8920              		.loc 1 3442 19 is_stmt 0 view .LVU2596
 8921 0556 443B7424 		cmpl	80(%rsp), %r14d
 8921      50
 8922 055b 0F8326FF 		jnb	.L805
 8922      FFFF
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 8923              		.loc 1 3442 19 view .LVU2597
 8924 0561 8B44245C 		movl	92(%rsp), %eax
 8925              	.LBB324:
 8926              	.LBB325:
 8927              	.LBB326:
3471:fltk-1.3.4-1/png/pngread.c ****                            }
 8928              		.loc 1 3471 43 view .LVU2598
 8929 0565 4C8D2D00 		leaq	png_sRGB_delta(%rip), %r13
 8929      000000
 8930 056c 4589F7   		movl	%r14d, %r15d
 8931 056f 48890424 		movq	%rax, (%rsp)
 8932 0573 89F0     		movl	%esi, %eax
 8933 0575 48894424 		movq	%rax, 56(%rsp)
 8933      38
 8934              	.LVL932:
 8935 057a 660F1F44 		.p2align 4,,10
 8935      0000
 8936              		.p2align 3
 8937              	.L807:
3471:fltk-1.3.4-1/png/pngread.c ****                            }
 8938              		.loc 1 3471 43 view .LVU2599
 8939              	.LBE326:
 8940              	.LBE325:
3444:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
 8941              		.loc 1 3444 22 is_stmt 1 view .LVU2600
3444:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
 8942              		.loc 1 3444 32 is_stmt 0 view .LVU2601
 8943 0580 488B4424 		movq	16(%rsp), %rax
 8943      10
3446:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
 8944              		.loc 1 3446 55 view .LVU2602
 8945 0585 4489FA   		movl	%r15d, %edx
 8946 0588 480FAF54 		imulq	48(%rsp), %rdx
 8946      2430
3450:fltk-1.3.4-1/png/pngread.c **** 
 8947              		.loc 1 3450 22 view .LVU2603
 8948 058e 488B7C24 		movq	24(%rsp), %rdi
 8948      18
3444:fltk-1.3.4-1/png/pngread.c ****                         display->local_row);
 8949              		.loc 1 3444 32 view .LVU2604
 8950 0593 488B5828 		movq	40(%rax), %rbx
 8951              	.LVL933:
3446:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
 8952              		.loc 1 3446 22 is_stmt 1 view .LVU2605
3446:fltk-1.3.4-1/png/pngread.c ****                      png_const_bytep end_row = outrow + width;
 8953              		.loc 1 3446 32 is_stmt 0 view .LVU2606
 8954 0597 488B4424 		movq	40(%rsp), %rax
 8954      28
 8955 059c 488D2C10 		leaq	(%rax,%rdx), %rbp
 8956              	.LVL934:
3447:fltk-1.3.4-1/png/pngread.c **** 
 8957              		.loc 1 3447 22 is_stmt 1 view .LVU2607
3447:fltk-1.3.4-1/png/pngread.c **** 
 8958              		.loc 1 3447 38 is_stmt 0 view .LVU2608
 8959 05a0 488B0424 		movq	(%rsp), %rax
3450:fltk-1.3.4-1/png/pngread.c **** 
 8960              		.loc 1 3450 22 view .LVU2609
 8961 05a4 31D2     		xorl	%edx, %edx
 8962 05a6 4889DE   		movq	%rbx, %rsi
3447:fltk-1.3.4-1/png/pngread.c **** 
 8963              		.loc 1 3447 38 view .LVU2610
 8964 05a9 4C8D7405 		leaq	0(%rbp,%rax), %r14
 8964      00
 8965              	.LVL935:
3450:fltk-1.3.4-1/png/pngread.c **** 
 8966              		.loc 1 3450 22 is_stmt 1 view .LVU2611
 8967 05ae E8000000 		call	png_read_row
 8967      00
 8968              	.LVL936:
3453:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
 8969              		.loc 1 3453 22 view .LVU2612
3453:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
 8970              		.loc 1 3453 29 is_stmt 0 view .LVU2613
 8971 05b3 488B4424 		movq	56(%rsp), %rax
 8971      38
 8972 05b8 8B7C2420 		movl	32(%rsp), %edi
 8973              	.LBB329:
 8974              	.LBB327:
3470:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 8975              		.loc 1 3470 38 view .LVU2614
 8976 05bc 41B9FF00 		movl	$255, %r9d
 8976      0000
 8977              	.LBE327:
 8978              	.LBE329:
3453:fltk-1.3.4-1/png/pngread.c ****                      for (; outrow < end_row; outrow += stepx)
 8979              		.loc 1 3453 29 view .LVU2615
 8980 05c2 488D5405 		leaq	0(%rbp,%rax), %rdx
 8980      00
 8981              	.LVL937:
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 8982              		.loc 1 3454 22 is_stmt 1 view .LVU2616
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 8983              		.loc 1 3454 29 view .LVU2617
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 8984              		.loc 1 3454 22 is_stmt 0 view .LVU2618
 8985 05c7 4939D6   		cmpq	%rdx, %r14
 8986 05ca 766A     		jbe	.L811
 8987 05cc 0F1F4000 		.p2align 4,,10
 8988              		.p2align 3
 8989              	.L810:
 8990              	.LBB330:
3456:fltk-1.3.4-1/png/pngread.c **** 
 8991              		.loc 1 3456 25 is_stmt 1 view .LVU2619
3456:fltk-1.3.4-1/png/pngread.c **** 
 8992              		.loc 1 3456 34 is_stmt 0 view .LVU2620
 8993 05d0 0FB64B01 		movzbl	1(%rbx), %ecx
 8994              	.LVL938:
3458:fltk-1.3.4-1/png/pngread.c ****                         {
 8995              		.loc 1 3458 25 is_stmt 1 view .LVU2621
3458:fltk-1.3.4-1/png/pngread.c ****                         {
 8996              		.loc 1 3458 28 is_stmt 0 view .LVU2622
 8997 05d4 84C9     		testb	%cl, %cl
 8998 05d6 7452     		je	.L808
 8999              	.LBB328:
3460:fltk-1.3.4-1/png/pngread.c **** 
 9000              		.loc 1 3460 28 is_stmt 1 view .LVU2623
3460:fltk-1.3.4-1/png/pngread.c **** 
 9001              		.loc 1 3460 57 is_stmt 0 view .LVU2624
 9002 05d8 0FB633   		movzbl	(%rbx), %esi
 9003 05db 89F0     		movl	%esi, %eax
 9004              	.LVL939:
3462:fltk-1.3.4-1/png/pngread.c ****                            {
 9005              		.loc 1 3462 28 is_stmt 1 view .LVU2625
3462:fltk-1.3.4-1/png/pngread.c ****                            {
 9006              		.loc 1 3462 31 is_stmt 0 view .LVU2626
 9007 05dd 80F9FF   		cmpb	$-1, %cl
 9008 05e0 7446     		je	.L809
3468:fltk-1.3.4-1/png/pngread.c ****                               component += png_sRGB_table[outrow[0]] *
 9009              		.loc 1 3468 31 is_stmt 1 view .LVU2627
3468:fltk-1.3.4-1/png/pngread.c ****                               component += png_sRGB_table[outrow[0]] *
 9010              		.loc 1 3468 57 is_stmt 0 view .LVU2628
 9011 05e2 89F6     		movl	%esi, %esi
3470:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 9012              		.loc 1 3470 38 view .LVU2629
 9013 05e4 4589CB   		movl	%r9d, %r11d
3468:fltk-1.3.4-1/png/pngread.c ****                               component += png_sRGB_table[outrow[0]] *
 9014              		.loc 1 3468 57 view .LVU2630
 9015 05e7 410FB704 		movzwl	(%r12,%rsi,2), %eax
 9015      74
 9016              	.LVL940:
3470:fltk-1.3.4-1/png/pngread.c ****                               component = PNG_sRGB_FROM_LINEAR(component);
 9017              		.loc 1 3470 38 view .LVU2631
 9018 05ec 4129CB   		subl	%ecx, %r11d
3468:fltk-1.3.4-1/png/pngread.c ****                               component += png_sRGB_table[outrow[0]] *
 9019              		.loc 1 3468 69 view .LVU2632
 9020 05ef 0FAFC1   		imull	%ecx, %eax
 9021 05f2 89C6     		movl	%eax, %esi
 9022              	.LVL941:
3469:fltk-1.3.4-1/png/pngread.c ****                                  (255-alpha);
 9023              		.loc 1 3469 31 is_stmt 1 view .LVU2633
3469:fltk-1.3.4-1/png/pngread.c ****                                  (255-alpha);
 9024              		.loc 1 3469 58 is_stmt 0 view .LVU2634
 9025 05f4 0FB602   		movzbl	(%rdx), %eax
 9026              	.LVL942:
3469:fltk-1.3.4-1/png/pngread.c ****                                  (255-alpha);
 9027              		.loc 1 3469 58 view .LVU2635
 9028 05f7 410FB704 		movzwl	(%r12,%rax,2), %eax
 9028      44
3469:fltk-1.3.4-1/png/pngread.c ****                                  (255-alpha);
 9029              		.loc 1 3469 70 view .LVU2636
 9030 05fc 410FAFC3 		imull	%r11d, %eax
3469:fltk-1.3.4-1/png/pngread.c ****                                  (255-alpha);
 9031              		.loc 1 3469 41 view .LVU2637
 9032 0600 01F0     		addl	%esi, %eax
 9033              	.LVL943:
3471:fltk-1.3.4-1/png/pngread.c ****                            }
 9034              		.loc 1 3471 31 is_stmt 1 view .LVU2638
3471:fltk-1.3.4-1/png/pngread.c ****                            }
 9035              		.loc 1 3471 43 is_stmt 0 view .LVU2639
 9036 0602 89C1     		movl	%eax, %ecx
 9037              	.LVL944:
3471:fltk-1.3.4-1/png/pngread.c ****                            }
 9038              		.loc 1 3471 43 view .LVU2640
 9039 0604 25FF7F00 		andl	$32767, %eax
 9039      00
 9040              	.LVL945:
3471:fltk-1.3.4-1/png/pngread.c ****                            }
 9041              		.loc 1 3471 43 view .LVU2641
 9042 0609 C1E90F   		shrl	$15, %ecx
 9043              	.LVL946:
3471:fltk-1.3.4-1/png/pngread.c ****                            }
 9044              		.loc 1 3471 43 view .LVU2642
 9045 060c 410FB674 		movzbl	0(%r13,%rcx), %esi
 9045      0D00
 9046 0612 0FAFC6   		imull	%esi, %eax
 9047 0615 488D3500 		leaq	png_sRGB_base(%rip), %rsi
 9047      000000
 9048 061c 0FB70C4E 		movzwl	(%rsi,%rcx,2), %ecx
 9049 0620 C1E80C   		shrl	$12, %eax
 9050 0623 01C8     		addl	%ecx, %eax
 9051 0625 0FB6C4   		movzbl	%ah, %eax
 9052              	.L809:
3474:fltk-1.3.4-1/png/pngread.c ****                         }
 9053              		.loc 1 3474 28 is_stmt 1 view .LVU2643
3474:fltk-1.3.4-1/png/pngread.c ****                         }
 9054              		.loc 1 3474 38 is_stmt 0 view .LVU2644
 9055 0628 8802     		movb	%al, (%rdx)
 9056              	.LVL947:
 9057              	.L808:
3474:fltk-1.3.4-1/png/pngread.c ****                         }
 9058              		.loc 1 3474 38 view .LVU2645
 9059              	.LBE328:
3477:fltk-1.3.4-1/png/pngread.c ****                      }
 9060              		.loc 1 3477 25 is_stmt 1 view .LVU2646
 9061              	.LBE330:
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 9062              		.loc 1 3454 54 is_stmt 0 view .LVU2647
 9063 062a 4801FA   		addq	%rdi, %rdx
 9064              	.LVL948:
 9065              	.LBB331:
3477:fltk-1.3.4-1/png/pngread.c ****                      }
 9066              		.loc 1 3477 31 view .LVU2648
 9067 062d 4883C302 		addq	$2, %rbx
 9068              	.LVL949:
3477:fltk-1.3.4-1/png/pngread.c ****                      }
 9069              		.loc 1 3477 31 view .LVU2649
 9070              	.LBE331:
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 9071              		.loc 1 3454 47 is_stmt 1 view .LVU2650
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 9072              		.loc 1 3454 29 view .LVU2651
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 9073              		.loc 1 3454 22 is_stmt 0 view .LVU2652
 9074 0631 4939D6   		cmpq	%rdx, %r14
 9075 0634 779A     		ja	.L810
 9076              	.L811:
3454:fltk-1.3.4-1/png/pngread.c ****                      {
 9077              		.loc 1 3454 22 view .LVU2653
 9078              	.LBE324:
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 9079              		.loc 1 3442 36 is_stmt 1 view .LVU2654
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 9080              		.loc 1 3442 38 is_stmt 0 view .LVU2655
 9081 0636 44037C24 		addl	8(%rsp), %r15d
 9081      08
 9082              	.LVL950:
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 9083              		.loc 1 3442 26 is_stmt 1 view .LVU2656
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 9084              		.loc 1 3442 19 is_stmt 0 view .LVU2657
 9085 063b 44397C24 		cmpl	%r15d, 80(%rsp)
 9085      50
 9086 0640 0F873AFF 		ja	.L807
 9086      FFFF
 9087 0646 E93CFEFF 		jmp	.L805
 9087      FF
 9088              	.LVL951:
 9089              	.L834:
3442:fltk-1.3.4-1/png/pngread.c ****                   {
 9090              		.loc 1 3442 19 view .LVU2658
 9091              	.LBE334:
 9092              	.LBE304:
3382:fltk-1.3.4-1/png/pngread.c ****          break;
 9093              		.loc 1 3382 17 view .LVU2659
 9094 064b C7442458 		movl	$1, 88(%rsp)
 9094      01000000 
 9095 0653 E938FAFF 		jmp	.L796
 9095      FF
 9096              	.LVL952:
 9097 0658 0F1F8400 		.p2align 4,,10
 9097      00000000 
 9098              		.p2align 3
 9099              	.L814:
 9100              	.LBB336:
 9101              	.LBB335:
 9102              	.LBB332:
 9103              	.LBB322:
 9104              	.LBB319:
3518:fltk-1.3.4-1/png/pngread.c **** 
 9105              		.loc 1 3518 28 is_stmt 1 view .LVU2660
3518:fltk-1.3.4-1/png/pngread.c **** 
 9106              		.loc 1 3518 38 is_stmt 0 view .LVU2661
 9107 0660 44883A   		movb	%r15b, (%rdx)
 9108 0663 E903FEFF 		jmp	.L816
 9108      FF
 9109              	.LVL953:
 9110              	.L800:
3518:fltk-1.3.4-1/png/pngread.c **** 
 9111              		.loc 1 3518 38 view .LVU2662
 9112              	.LBE319:
 9113              	.LBE322:
 9114              	.LBE332:
3424:fltk-1.3.4-1/png/pngread.c ****                      continue;
 9115              		.loc 1 3424 23 view .LVU2663
 9116 0668 89F0     		movl	%esi, %eax
 9117 066a B9030000 		movl	$3, %ecx
 9117      00
 9118 066f F7D0     		notl	%eax
 9119 0671 83E007   		andl	$7, %eax
 9120 0674 0344245C 		addl	92(%rsp), %eax
 9121 0678 E975FEFF 		jmp	.L832
 9121      FF
 9122              	.LVL954:
 9123              	.L876:
3424:fltk-1.3.4-1/png/pngread.c ****                      continue;
 9124              		.loc 1 3424 23 view .LVU2664
 9125              	.LBE335:
 9126              	.LBE336:
3390:fltk-1.3.4-1/png/pngread.c ****    }
 9127              		.loc 1 3390 10 is_stmt 1 view .LVU2665
 9128 067d 488D3500 		leaq	.LC39(%rip), %rsi
 9128      000000
 9129 0684 4889DF   		movq	%rbx, %rdi
 9130 0687 E8000000 		call	png_error@PLT
 9130      00
 9131              	.LVL955:
 9132              	.L875:
3377:fltk-1.3.4-1/png/pngread.c **** 
 9133              		.loc 1 3377 7 view .LVU2666
 9134 068c 488D3500 		leaq	.LC38(%rip), %rsi
 9134      000000
 9135 0693 4889DF   		movq	%rbx, %rdi
 9136 0696 E8000000 		call	png_error@PLT
 9136      00
 9137              	.LVL956:
 9138              	.L874:
3372:fltk-1.3.4-1/png/pngread.c **** 
 9139              		.loc 1 3372 7 view .LVU2667
 9140 069b 488D3500 		leaq	.LC37(%rip), %rsi
 9140      000000
 9141 06a2 4889DF   		movq	%rbx, %rdi
 9142 06a5 E8000000 		call	png_error@PLT
 9142      00
 9143              	.LVL957:
 9144              	.L873:
3369:fltk-1.3.4-1/png/pngread.c **** 
 9145              		.loc 1 3369 7 view .LVU2668
 9146 06aa 488D3500 		leaq	.LC36(%rip), %rsi
 9146      000000
 9147 06b1 4889DF   		movq	%rbx, %rdi
 9148              	.LVL958:
3369:fltk-1.3.4-1/png/pngread.c **** 
 9149              		.loc 1 3369 7 is_stmt 0 view .LVU2669
 9150 06b4 E8000000 		call	png_error@PLT
 9150      00
 9151              	.LVL959:
 9152              	.L872:
3366:fltk-1.3.4-1/png/pngread.c **** 
 9153              		.loc 1 3366 7 is_stmt 1 view .LVU2670
 9154 06b9 488D3500 		leaq	.LC35(%rip), %rsi
 9154      000000
 9155 06c0 4889DF   		movq	%rbx, %rdi
 9156              	.LVL960:
3366:fltk-1.3.4-1/png/pngread.c **** 
 9157              		.loc 1 3366 7 is_stmt 0 view .LVU2671
 9158 06c3 E8000000 		call	png_error@PLT
 9158      00
 9159              	.LVL961:
 9160              	.L877:
3401:fltk-1.3.4-1/png/pngread.c ****          break;
 9161              		.loc 1 3401 10 is_stmt 1 view .LVU2672
 9162 06c8 488D3500 		leaq	.LC40(%rip), %rsi
 9162      000000
 9163 06cf 4889DF   		movq	%rbx, %rdi
 9164 06d2 E8000000 		call	png_error@PLT
 9164      00
 9165              	.LVL962:
 9166              		.cfi_endproc
 9167              	.LFE76:
 9169              		.section	.text.png_image_read_composite,"ax",@progbits
 9170              		.p2align 4
 9172              	png_image_read_composite:
 9173              	.LVL963:
 9174              	.LFB75:
3223:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9175              		.loc 1 3223 1 view -0
 9176              		.cfi_startproc
3223:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9177              		.loc 1 3223 1 is_stmt 0 view .LVU2674
 9178 0000 F30F1EFA 		endbr64
3224:fltk-1.3.4-1/png/pngread.c ****       argument);
 9179              		.loc 1 3224 4 is_stmt 1 view .LVU2675
 9180              	.LVL964:
3226:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 9181              		.loc 1 3226 4 view .LVU2676
3223:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9182              		.loc 1 3223 1 is_stmt 0 view .LVU2677
 9183 0004 4157     		pushq	%r15
 9184              		.cfi_def_cfa_offset 16
 9185              		.cfi_offset 15, -16
 9186 0006 4156     		pushq	%r14
 9187              		.cfi_def_cfa_offset 24
 9188              		.cfi_offset 14, -24
 9189 0008 4155     		pushq	%r13
 9190              		.cfi_def_cfa_offset 32
 9191              		.cfi_offset 13, -32
 9192 000a 4154     		pushq	%r12
 9193              		.cfi_def_cfa_offset 40
 9194              		.cfi_offset 12, -40
 9195 000c 55       		pushq	%rbp
 9196              		.cfi_def_cfa_offset 48
 9197              		.cfi_offset 6, -48
 9198 000d 53       		pushq	%rbx
 9199              		.cfi_def_cfa_offset 56
 9200              		.cfi_offset 3, -56
 9201 000e 4883EC58 		subq	$88, %rsp
 9202              		.cfi_def_cfa_offset 144
3226:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 9203              		.loc 1 3226 15 view .LVU2678
 9204 0012 488B17   		movq	(%rdi), %rdx
 9205              	.LVL965:
3227:fltk-1.3.4-1/png/pngread.c ****    int passes;
 9206              		.loc 1 3227 4 is_stmt 1 view .LVU2679
3223:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9207              		.loc 1 3223 1 is_stmt 0 view .LVU2680
 9208 0015 48897C24 		movq	%rdi, 40(%rsp)
 9208      28
3227:fltk-1.3.4-1/png/pngread.c ****    int passes;
 9209              		.loc 1 3227 17 view .LVU2681
 9210 001a 488B02   		movq	(%rdx), %rax
 9211 001d 488B00   		movq	(%rax), %rax
 9212 0020 48894424 		movq	%rax, 16(%rsp)
 9212      10
 9213              	.LVL966:
3228:fltk-1.3.4-1/png/pngread.c **** 
 9214              		.loc 1 3228 4 is_stmt 1 view .LVU2682
3230:fltk-1.3.4-1/png/pngread.c ****    {
 9215              		.loc 1 3230 4 view .LVU2683
3230:fltk-1.3.4-1/png/pngread.c ****    {
 9216              		.loc 1 3230 19 is_stmt 0 view .LVU2684
 9217 0025 0FB68074 		movzbl	628(%rax), %eax
 9217      020000
 9218              	.LVL967:
3230:fltk-1.3.4-1/png/pngread.c ****    {
 9219              		.loc 1 3230 4 view .LVU2685
 9220 002c 84C0     		testb	%al, %al
 9221 002e 0F849002 		je	.L901
 9221      0000
 9222 0034 3C01     		cmpb	$1, %al
 9223 0036 0F859502 		jne	.L919
 9223      0000
 9224 003c C7442448 		movl	$7, 72(%rsp)
 9224      07000000 
 9225              	.L883:
 9226              	.LVL968:
 9227              	.LBB337:
3245:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  width = image->width;
 9228              		.loc 1 3245 7 is_stmt 1 view .LVU2686
3245:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  width = image->width;
 9229              		.loc 1 3245 20 is_stmt 0 view .LVU2687
 9230 0044 8B7A10   		movl	16(%rdx), %edi
 9231              	.LVL969:
3247:fltk-1.3.4-1/png/pngread.c ****       unsigned int channels =
 9232              		.loc 1 3247 20 view .LVU2688
 9233 0047 488B7424 		movq	40(%rsp), %rsi
 9233      28
3245:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  width = image->width;
 9234              		.loc 1 3245 20 view .LVU2689
 9235 004c 897C241C 		movl	%edi, 28(%rsp)
 9236              	.LVL970:
3246:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
 9237              		.loc 1 3246 7 is_stmt 1 view .LVU2690
3247:fltk-1.3.4-1/png/pngread.c ****       unsigned int channels =
 9238              		.loc 1 3247 20 is_stmt 0 view .LVU2691
 9239 0050 488B7638 		movq	56(%rsi), %rsi
3246:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
 9240              		.loc 1 3246 20 view .LVU2692
 9241 0054 8B7A0C   		movl	12(%rdx), %edi
 9242              	.LVL971:
3247:fltk-1.3.4-1/png/pngread.c ****       unsigned int channels =
 9243              		.loc 1 3247 20 view .LVU2693
 9244 0057 48897424 		movq	%rsi, 56(%rsp)
 9244      38
3246:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
 9245              		.loc 1 3246 20 view .LVU2694
 9246 005c 897C244C 		movl	%edi, 76(%rsp)
 9247              	.LVL972:
3247:fltk-1.3.4-1/png/pngread.c ****       unsigned int channels =
 9248              		.loc 1 3247 7 is_stmt 1 view .LVU2695
3248:fltk-1.3.4-1/png/pngread.c ****          (image->format & PNG_FORMAT_FLAG_COLOR) != 0 ? 3 : 1;
 9249              		.loc 1 3248 7 view .LVU2696
3249:fltk-1.3.4-1/png/pngread.c ****       int pass;
 9250              		.loc 1 3249 59 is_stmt 0 view .LVU2697
 9251 0060 F6421402 		testb	$2, 20(%rdx)
 9252 0064 0F85E101 		jne	.L920
 9252      0000
 9253 006a C744240C 		movl	$1, 12(%rsp)
 9253      01000000 
 9254 0072 8B54244C 		movl	76(%rsp), %edx
 9255              	.LVL973:
 9256              	.L884:
3250:fltk-1.3.4-1/png/pngread.c **** 
 9257              		.loc 1 3250 7 is_stmt 1 view .LVU2698
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9258              		.loc 1 3252 7 view .LVU2699
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9259              		.loc 1 3252 22 view .LVU2700
 9260              	.LBB338:
 9261              	.LBB339:
3288:fltk-1.3.4-1/png/pngread.c **** 
 9262              		.loc 1 3288 38 is_stmt 0 view .LVU2701
 9263 0076 89D7     		movl	%edx, %edi
 9264              	.LVL974:
 9265              	.LBB340:
 9266              	.LBB341:
 9267              	.LBB342:
3313:fltk-1.3.4-1/png/pngread.c **** 
 9268              		.loc 1 3313 64 view .LVU2702
 9269 0078 488D2D00 		leaq	png_sRGB_table(%rip), %rbp
 9269      000000
 9270              	.LBE342:
 9271              	.LBE341:
 9272              	.LBE340:
 9273              	.LBE339:
 9274              	.LBE338:
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9275              		.loc 1 3252 17 view .LVU2703
 9276 007f 31D2     		xorl	%edx, %edx
 9277              	.LBB359:
 9278              	.LBB357:
3288:fltk-1.3.4-1/png/pngread.c **** 
 9279              		.loc 1 3288 38 view .LVU2704
 9280 0081 48897C24 		movq	%rdi, 48(%rsp)
 9280      30
 9281 0086 EB6E     		jmp	.L899
 9282              	.LVL975:
 9283 0088 0F1F8400 		.p2align 4,,10
 9283      00000000 
 9284              		.p2align 3
 9285              	.L922:
3288:fltk-1.3.4-1/png/pngread.c **** 
 9286              		.loc 1 3288 38 view .LVU2705
 9287              	.LBE357:
3260:fltk-1.3.4-1/png/pngread.c ****                continue;
 9288              		.loc 1 3260 13 is_stmt 1 view .LVU2706
 9289 0090 89D7     		movl	%edx, %edi
 9290 0092 89D8     		movl	%ebx, %eax
 9291 0094 B9030000 		movl	$3, %ecx
 9291      00
 9292 0099 83E701   		andl	$1, %edi
 9293 009c D1F8     		sarl	%eax
 9294 009e 29C1     		subl	%eax, %ecx
 9295 00a0 89FE     		movl	%edi, %esi
 9296 00a2 D3E6     		sall	%cl, %esi
3260:fltk-1.3.4-1/png/pngread.c ****                continue;
 9297              		.loc 1 3260 17 is_stmt 0 view .LVU2707
 9298 00a4 83FA01   		cmpl	$1, %edx
 9299 00a7 0F860202 		jbe	.L886
 9299      0000
3260:fltk-1.3.4-1/png/pngread.c ****                continue;
 9300              		.loc 1 3260 17 discriminator 1 view .LVU2708
 9301 00ad B9080000 		movl	$8, %ecx
 9301      00
 9302 00b2 B8010000 		movl	$1, %eax
 9302      00
 9303 00b7 4189F0   		movl	%esi, %r8d
 9304 00ba 29D9     		subl	%ebx, %ecx
 9305 00bc 4183E007 		andl	$7, %r8d
 9306 00c0 D1F9     		sarl	%ecx
 9307 00c2 D3E0     		sall	%cl, %eax
 9308 00c4 83E801   		subl	$1, %eax
 9309 00c7 4429C0   		subl	%r8d, %eax
 9310 00ca 0344244C 		addl	76(%rsp), %eax
 9311              	.L900:
3260:fltk-1.3.4-1/png/pngread.c ****                continue;
 9312              		.loc 1 3260 17 discriminator 8 view .LVU2709
 9313 00ce D3E8     		shrl	%cl, %eax
3260:fltk-1.3.4-1/png/pngread.c ****                continue;
 9314              		.loc 1 3260 16 discriminator 8 view .LVU2710
 9315 00d0 85C0     		testl	%eax, %eax
 9316 00d2 0F858301 		jne	.L887
 9316      0000
 9317              	.L892:
 9318              	.LBE359:
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9319              		.loc 1 3252 37 is_stmt 1 view .LVU2711
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9320              		.loc 1 3252 22 view .LVU2712
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9321              		.loc 1 3252 7 is_stmt 0 view .LVU2713
 9322 00d8 8B7C2444 		movl	68(%rsp), %edi
 9323 00dc 397C2448 		cmpl	%edi, 72(%rsp)
 9324 00e0 0F845101 		je	.L921
 9324      0000
 9325              	.L888:
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9326              		.loc 1 3252 7 view .LVU2714
 9327 00e6 488B4424 		movq	16(%rsp), %rax
 9327      10
 9328 00eb 8B542444 		movl	68(%rsp), %edx
 9329 00ef 0FB68074 		movzbl	628(%rax), %eax
 9329      020000
 9330              	.L899:
 9331              	.LBB360:
3254:fltk-1.3.4-1/png/pngread.c ****          png_uint_32      y;
 9332              		.loc 1 3254 10 is_stmt 1 view .LVU2715
3255:fltk-1.3.4-1/png/pngread.c **** 
 9333              		.loc 1 3255 10 view .LVU2716
3257:fltk-1.3.4-1/png/pngread.c ****          {
 9334              		.loc 1 3257 10 view .LVU2717
 9335 00f6 8D5A01   		leal	1(%rdx), %ebx
 9336 00f9 895C2444 		movl	%ebx, 68(%rsp)
3257:fltk-1.3.4-1/png/pngread.c ****          {
 9337              		.loc 1 3257 13 is_stmt 0 view .LVU2718
 9338 00fd 3C01     		cmpb	$1, %al
 9339 00ff 748F     		je	.L922
 9340 0101 8B44240C 		movl	12(%rsp), %eax
3271:fltk-1.3.4-1/png/pngread.c ****             startx = 0;
 9341              		.loc 1 3271 15 view .LVU2719
 9342 0105 C7442408 		movl	$0, 8(%rsp)
 9342      00000000 
3272:fltk-1.3.4-1/png/pngread.c ****             stepx = channels;
 9343              		.loc 1 3272 20 view .LVU2720
 9344 010d 31F6     		xorl	%esi, %esi
3274:fltk-1.3.4-1/png/pngread.c ****          }
 9345              		.loc 1 3274 19 view .LVU2721
 9346 010f C7442418 		movl	$1, 24(%rsp)
 9346      01000000 
 9347 0117 89442440 		movl	%eax, 64(%rsp)
 9348              	.L885:
 9349              	.LVL976:
3277:fltk-1.3.4-1/png/pngread.c ****          {
 9350              		.loc 1 3277 17 is_stmt 1 discriminator 1 view .LVU2722
 9351 011b 89F0     		movl	%esi, %eax
3277:fltk-1.3.4-1/png/pngread.c ****          {
 9352              		.loc 1 3277 10 is_stmt 0 discriminator 1 view .LVU2723
 9353 011d 8B7C2408 		movl	8(%rsp), %edi
 9354 0121 48894424 		movq	%rax, 32(%rsp)
 9354      20
 9355 0126 8B44240C 		movl	12(%rsp), %eax
 9356 012a 448D7801 		leal	1(%rax), %r15d
 9357 012e 397C241C 		cmpl	%edi, 28(%rsp)
 9358 0132 76A4     		jbe	.L892
 9359              		.p2align 4,,10
 9360 0134 0F1F4000 		.p2align 3
 9361              	.L891:
 9362              	.LBB358:
3279:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow;
 9363              		.loc 1 3279 13 is_stmt 1 view .LVU2724
3279:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow;
 9364              		.loc 1 3279 23 is_stmt 0 view .LVU2725
 9365 0138 4C8B7424 		movq	40(%rsp), %r14
 9365      28
3284:fltk-1.3.4-1/png/pngread.c **** 
 9366              		.loc 1 3284 13 view .LVU2726
 9367 013d 488B7C24 		movq	16(%rsp), %rdi
 9367      10
 9368 0142 31D2     		xorl	%edx, %edx
 9369              	.LBB351:
 9370              	.LBB347:
 9371              	.LBB343:
3319:fltk-1.3.4-1/png/pngread.c ****                      }
 9372              		.loc 1 3319 37 view .LVU2727
 9373 0144 4C8D2D00 		leaq	png_sRGB_base(%rip), %r13
 9373      000000
 9374              	.LBE343:
 9375              	.LBE347:
 9376              	.LBE351:
3279:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow;
 9377              		.loc 1 3279 23 view .LVU2728
 9378 014b 498B5E28 		movq	40(%r14), %rbx
 9379              	.LVL977:
3280:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep end_row;
 9380              		.loc 1 3280 13 is_stmt 1 view .LVU2729
3281:fltk-1.3.4-1/png/pngread.c **** 
 9381              		.loc 1 3281 13 view .LVU2730
3284:fltk-1.3.4-1/png/pngread.c **** 
 9382              		.loc 1 3284 13 view .LVU2731
 9383 014f 4889DE   		movq	%rbx, %rsi
 9384 0152 E8000000 		call	png_read_row
 9384      00
 9385              	.LVL978:
3286:fltk-1.3.4-1/png/pngread.c ****             outrow += y * step_row;
 9386              		.loc 1 3286 13 view .LVU2732
3287:fltk-1.3.4-1/png/pngread.c ****             end_row = outrow + width * channels;
 9387              		.loc 1 3287 13 view .LVU2733
3288:fltk-1.3.4-1/png/pngread.c **** 
 9388              		.loc 1 3288 21 is_stmt 0 view .LVU2734
 9389 0157 488B4424 		movq	48(%rsp), %rax
 9389      30
3287:fltk-1.3.4-1/png/pngread.c ****             end_row = outrow + width * channels;
 9390              		.loc 1 3287 25 view .LVU2735
 9391 015c 8B542408 		movl	8(%rsp), %edx
 9392 0160 480FAF54 		imulq	56(%rsp), %rdx
 9392      2438
3287:fltk-1.3.4-1/png/pngread.c ****             end_row = outrow + width * channels;
 9393              		.loc 1 3287 20 view .LVU2736
 9394 0166 49035630 		addq	48(%r14), %rdx
 9395              	.LVL979:
3288:fltk-1.3.4-1/png/pngread.c **** 
 9396              		.loc 1 3288 13 is_stmt 1 view .LVU2737
 9397              	.LBB352:
 9398              	.LBB348:
 9399              	.LBB344:
3319:fltk-1.3.4-1/png/pngread.c ****                      }
 9400              		.loc 1 3319 37 is_stmt 0 view .LVU2738
 9401 016a 4C8D3500 		leaq	png_sRGB_delta(%rip), %r14
 9401      000000
 9402              	.LBE344:
 9403              	.LBE348:
 9404              	.LBE352:
3288:fltk-1.3.4-1/png/pngread.c **** 
 9405              		.loc 1 3288 21 view .LVU2739
 9406 0171 4C8D0C02 		leaq	(%rdx,%rax), %r9
 9407              	.LVL980:
3291:fltk-1.3.4-1/png/pngread.c ****             for (; outrow < end_row; outrow += stepx)
 9408              		.loc 1 3291 13 is_stmt 1 view .LVU2740
3291:fltk-1.3.4-1/png/pngread.c ****             for (; outrow < end_row; outrow += stepx)
 9409              		.loc 1 3291 20 is_stmt 0 view .LVU2741
 9410 0175 48035424 		addq	32(%rsp), %rdx
 9410      20
 9411              	.LVL981:
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9412              		.loc 1 3292 13 is_stmt 1 view .LVU2742
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9413              		.loc 1 3292 20 view .LVU2743
 9414 017a 448B4424 		movl	12(%rsp), %r8d
 9414      0C
 9415 017f 448B5424 		movl	64(%rsp), %r10d
 9415      40
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9416              		.loc 1 3292 13 is_stmt 0 view .LVU2744
 9417 0184 4939D1   		cmpq	%rdx, %r9
 9418 0187 7712     		ja	.L894
 9419 0189 E9850000 		jmp	.L895
 9419      00
 9420              	.LVL982:
 9421 018e 6690     		.p2align 4,,10
 9422              		.p2align 3
 9423              	.L923:
 9424              	.LBB353:
3326:fltk-1.3.4-1/png/pngread.c ****             }
 9425              		.loc 1 3326 16 is_stmt 1 view .LVU2745
 9426              	.LBE353:
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9427              		.loc 1 3292 45 is_stmt 0 view .LVU2746
 9428 0190 4C01D2   		addq	%r10, %rdx
 9429              	.LVL983:
 9430              	.LBB354:
3326:fltk-1.3.4-1/png/pngread.c ****             }
 9431              		.loc 1 3326 22 view .LVU2747
 9432 0193 4C01FB   		addq	%r15, %rbx
 9433              	.LVL984:
3326:fltk-1.3.4-1/png/pngread.c ****             }
 9434              		.loc 1 3326 22 view .LVU2748
 9435              	.LBE354:
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9436              		.loc 1 3292 38 is_stmt 1 view .LVU2749
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9437              		.loc 1 3292 20 view .LVU2750
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9438              		.loc 1 3292 13 is_stmt 0 view .LVU2751
 9439 0196 4939D1   		cmpq	%rdx, %r9
 9440 0199 7678     		jbe	.L895
 9441              	.LVL985:
 9442              	.L894:
 9443              	.LBB355:
3294:fltk-1.3.4-1/png/pngread.c **** 
 9444              		.loc 1 3294 16 is_stmt 1 view .LVU2752
3294:fltk-1.3.4-1/png/pngread.c **** 
 9445              		.loc 1 3294 25 is_stmt 0 view .LVU2753
 9446 019b 420FB634 		movzbl	(%rbx,%r8), %esi
 9446      03
 9447              	.LVL986:
3296:fltk-1.3.4-1/png/pngread.c ****                {
 9448              		.loc 1 3296 16 is_stmt 1 view .LVU2754
3296:fltk-1.3.4-1/png/pngread.c ****                {
 9449              		.loc 1 3296 19 is_stmt 0 view .LVU2755
 9450 01a0 4084F6   		testb	%sil, %sil
 9451 01a3 74EB     		je	.L923
 9452              	.LBB349:
 9453              	.LBB345:
3313:fltk-1.3.4-1/png/pngread.c **** 
 9454              		.loc 1 3313 42 view .LVU2756
 9455 01a5 400FB6C6 		movzbl	%sil, %eax
 9456 01a9 BFFF0000 		movl	$255, %edi
 9456      00
 9457              	.LBE345:
 9458              	.LBE349:
 9459 01ae 31C9     		xorl	%ecx, %ecx
 9460              	.LBB350:
 9461              	.LBB346:
 9462 01b0 29C7     		subl	%eax, %edi
 9463              	.L893:
 9464              	.LVL987:
3302:fltk-1.3.4-1/png/pngread.c **** 
 9465              		.loc 1 3302 22 is_stmt 1 view .LVU2757
3302:fltk-1.3.4-1/png/pngread.c **** 
 9466              		.loc 1 3302 51 is_stmt 0 view .LVU2758
 9467 01b2 440FB624 		movzbl	(%rbx,%rcx), %r12d
 9467      0B
 9468 01b7 4489E0   		movl	%r12d, %eax
 9469              	.LVL988:
3304:fltk-1.3.4-1/png/pngread.c ****                      {
 9470              		.loc 1 3304 22 is_stmt 1 view .LVU2759
3304:fltk-1.3.4-1/png/pngread.c ****                      {
 9471              		.loc 1 3304 25 is_stmt 0 view .LVU2760
 9472 01ba 4080FEFF 		cmpb	$-1, %sil
 9473 01be 743C     		je	.L896
3312:fltk-1.3.4-1/png/pngread.c ****                         component += (255-alpha)*png_sRGB_table[outrow[c]];
 9474              		.loc 1 3312 25 is_stmt 1 view .LVU2761
3312:fltk-1.3.4-1/png/pngread.c ****                         component += (255-alpha)*png_sRGB_table[outrow[c]];
 9475              		.loc 1 3312 35 is_stmt 0 view .LVU2762
 9476 01c0 C1E010   		sall	$16, %eax
 9477              	.LVL989:
3312:fltk-1.3.4-1/png/pngread.c ****                         component += (255-alpha)*png_sRGB_table[outrow[c]];
 9478              		.loc 1 3312 35 view .LVU2763
 9479 01c3 4429E0   		subl	%r12d, %eax
 9480 01c6 4189C3   		movl	%eax, %r11d
 9481              	.LVL990:
3313:fltk-1.3.4-1/png/pngread.c **** 
 9482              		.loc 1 3313 25 is_stmt 1 view .LVU2764
3313:fltk-1.3.4-1/png/pngread.c **** 
 9483              		.loc 1 3313 64 is_stmt 0 view .LVU2765
 9484 01c9 0FB6040A 		movzbl	(%rdx,%rcx), %eax
 9485              	.LVL991:
3313:fltk-1.3.4-1/png/pngread.c **** 
 9486              		.loc 1 3313 64 view .LVU2766
 9487 01cd 0FB74445 		movzwl	0(%rbp,%rax,2), %eax
 9487      00
3313:fltk-1.3.4-1/png/pngread.c **** 
 9488              		.loc 1 3313 49 view .LVU2767
 9489 01d2 0FAFC7   		imull	%edi, %eax
3313:fltk-1.3.4-1/png/pngread.c **** 
 9490              		.loc 1 3313 35 view .LVU2768
 9491 01d5 4401D8   		addl	%r11d, %eax
 9492              	.LVL992:
3319:fltk-1.3.4-1/png/pngread.c ****                      }
 9493              		.loc 1 3319 25 is_stmt 1 view .LVU2769
3319:fltk-1.3.4-1/png/pngread.c ****                      }
 9494              		.loc 1 3319 37 is_stmt 0 view .LVU2770
 9495 01d8 4189C3   		movl	%eax, %r11d
 9496 01db 25FF7F00 		andl	$32767, %eax
 9496      00
 9497              	.LVL993:
3319:fltk-1.3.4-1/png/pngread.c ****                      }
 9498              		.loc 1 3319 37 view .LVU2771
 9499 01e0 41C1EB0F 		shrl	$15, %r11d
 9500              	.LVL994:
3319:fltk-1.3.4-1/png/pngread.c ****                      }
 9501              		.loc 1 3319 37 view .LVU2772
 9502 01e4 470FB624 		movzbl	(%r14,%r11), %r12d
 9502      1E
 9503 01e9 470FB75C 		movzwl	0(%r13,%r11,2), %r11d
 9503      5D00
 9504 01ef 410FAFC4 		imull	%r12d, %eax
 9505 01f3 C1E80C   		shrl	$12, %eax
 9506 01f6 4401D8   		addl	%r11d, %eax
 9507 01f9 0FB6C4   		movzbl	%ah, %eax
 9508              	.L896:
3322:fltk-1.3.4-1/png/pngread.c ****                   }
 9509              		.loc 1 3322 22 is_stmt 1 discriminator 2 view .LVU2773
3322:fltk-1.3.4-1/png/pngread.c ****                   }
 9510              		.loc 1 3322 32 is_stmt 0 discriminator 2 view .LVU2774
 9511 01fc 88040A   		movb	%al, (%rdx,%rcx)
 9512              	.LBE346:
3300:fltk-1.3.4-1/png/pngread.c ****                   {
 9513              		.loc 1 3300 41 is_stmt 1 discriminator 2 view .LVU2775
 9514              	.LVL995:
3300:fltk-1.3.4-1/png/pngread.c ****                   {
 9515              		.loc 1 3300 29 discriminator 2 view .LVU2776
 9516 01ff 4883C101 		addq	$1, %rcx
 9517              	.LVL996:
3300:fltk-1.3.4-1/png/pngread.c ****                   {
 9518              		.loc 1 3300 19 is_stmt 0 discriminator 2 view .LVU2777
 9519 0203 4C39C1   		cmpq	%r8, %rcx
 9520 0206 75AA     		jne	.L893
 9521              	.LBE350:
3326:fltk-1.3.4-1/png/pngread.c ****             }
 9522              		.loc 1 3326 16 is_stmt 1 view .LVU2778
 9523              	.LBE355:
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9524              		.loc 1 3292 45 is_stmt 0 view .LVU2779
 9525 0208 4C01D2   		addq	%r10, %rdx
 9526              	.LVL997:
 9527              	.LBB356:
3326:fltk-1.3.4-1/png/pngread.c ****             }
 9528              		.loc 1 3326 22 view .LVU2780
 9529 020b 4C01FB   		addq	%r15, %rbx
 9530              	.LVL998:
3326:fltk-1.3.4-1/png/pngread.c ****             }
 9531              		.loc 1 3326 22 view .LVU2781
 9532              	.LBE356:
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9533              		.loc 1 3292 38 is_stmt 1 view .LVU2782
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9534              		.loc 1 3292 20 view .LVU2783
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9535              		.loc 1 3292 13 is_stmt 0 view .LVU2784
 9536 020e 4939D1   		cmpq	%rdx, %r9
 9537 0211 7788     		ja	.L894
 9538              	.LVL999:
 9539              	.L895:
3292:fltk-1.3.4-1/png/pngread.c ****             {
 9540              		.loc 1 3292 13 view .LVU2785
 9541              	.LBE358:
3277:fltk-1.3.4-1/png/pngread.c ****          {
 9542              		.loc 1 3277 27 is_stmt 1 view .LVU2786
3277:fltk-1.3.4-1/png/pngread.c ****          {
 9543              		.loc 1 3277 29 is_stmt 0 view .LVU2787
 9544 0213 8B7C2418 		movl	24(%rsp), %edi
 9545 0217 017C2408 		addl	%edi, 8(%rsp)
 9546              	.LVL1000:
3277:fltk-1.3.4-1/png/pngread.c ****          {
 9547              		.loc 1 3277 29 view .LVU2788
 9548 021b 8B442408 		movl	8(%rsp), %eax
 9549              	.LVL1001:
3277:fltk-1.3.4-1/png/pngread.c ****          {
 9550              		.loc 1 3277 17 is_stmt 1 view .LVU2789
3277:fltk-1.3.4-1/png/pngread.c ****          {
 9551              		.loc 1 3277 10 is_stmt 0 view .LVU2790
 9552 021f 3944241C 		cmpl	%eax, 28(%rsp)
 9553 0223 0F870FFF 		ja	.L891
 9553      FFFF
 9554              	.LBE360:
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9555              		.loc 1 3252 37 is_stmt 1 view .LVU2791
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9556              		.loc 1 3252 22 view .LVU2792
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9557              		.loc 1 3252 7 is_stmt 0 view .LVU2793
 9558 0229 8B7C2444 		movl	68(%rsp), %edi
 9559              	.LVL1002:
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9560              		.loc 1 3252 7 view .LVU2794
 9561 022d 397C2448 		cmpl	%edi, 72(%rsp)
 9562 0231 0F85AFFE 		jne	.L888
 9562      FFFF
 9563              	.LVL1003:
 9564              	.L921:
3252:fltk-1.3.4-1/png/pngread.c ****       {
 9565              		.loc 1 3252 7 view .LVU2795
 9566              	.LBE337:
3333:fltk-1.3.4-1/png/pngread.c **** 
 9567              		.loc 1 3333 1 view .LVU2796
 9568 0237 4883C458 		addq	$88, %rsp
 9569              		.cfi_remember_state
 9570              		.cfi_def_cfa_offset 56
 9571 023b B8010000 		movl	$1, %eax
 9571      00
 9572 0240 5B       		popq	%rbx
 9573              		.cfi_def_cfa_offset 48
 9574 0241 5D       		popq	%rbp
 9575              		.cfi_def_cfa_offset 40
 9576 0242 415C     		popq	%r12
 9577              		.cfi_def_cfa_offset 32
 9578 0244 415D     		popq	%r13
 9579              		.cfi_def_cfa_offset 24
 9580 0246 415E     		popq	%r14
 9581              		.cfi_def_cfa_offset 16
 9582 0248 415F     		popq	%r15
 9583              		.cfi_def_cfa_offset 8
 9584 024a C3       		ret
 9585              	.LVL1004:
 9586              	.L920:
 9587              		.cfi_restore_state
 9588              	.LBB362:
3249:fltk-1.3.4-1/png/pngread.c ****       int pass;
 9589              		.loc 1 3249 59 view .LVU2797
 9590 024b C744240C 		movl	$3, 12(%rsp)
 9590      03000000 
 9591 0253 8D147F   		leal	(%rdi,%rdi,2), %edx
 9592              	.LVL1005:
3249:fltk-1.3.4-1/png/pngread.c ****       int pass;
 9593              		.loc 1 3249 59 view .LVU2798
 9594 0256 E91BFEFF 		jmp	.L884
 9594      FF
 9595              	.LVL1006:
 9596              	.L887:
 9597              	.LBB361:
3263:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass) * channels;
 9598              		.loc 1 3263 13 is_stmt 1 view .LVU2799
3263:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass) * channels;
 9599              		.loc 1 3263 20 is_stmt 0 view .LVU2800
 9600 025b 8B44240C 		movl	12(%rsp), %eax
3264:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 9601              		.loc 1 3264 21 view .LVU2801
 9602 025f B9080000 		movl	$8, %ecx
 9602      00
 9603 0264 2B4C2444 		subl	68(%rsp), %ecx
3263:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass) * channels;
 9604              		.loc 1 3263 22 view .LVU2802
 9605 0268 83E607   		andl	$7, %esi
3264:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 9606              		.loc 1 3264 21 view .LVU2803
 9607 026b D1F9     		sarl	%ecx
3265:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 9608              		.loc 1 3265 17 view .LVU2804
 9609 026d 83F701   		xorl	$1, %edi
3263:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass) * channels;
 9610              		.loc 1 3263 20 view .LVU2805
 9611 0270 0FAFF0   		imull	%eax, %esi
 9612              	.LVL1007:
3264:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 9613              		.loc 1 3264 13 is_stmt 1 view .LVU2806
3264:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 9614              		.loc 1 3264 19 is_stmt 0 view .LVU2807
 9615 0273 D3E0     		sall	%cl, %eax
3265:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 9616              		.loc 1 3265 17 view .LVU2808
 9617 0275 B9030000 		movl	$3, %ecx
 9617      00
3264:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 9618              		.loc 1 3264 19 view .LVU2809
 9619 027a 89442440 		movl	%eax, 64(%rsp)
 9620              	.LVL1008:
3265:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 9621              		.loc 1 3265 13 is_stmt 1 view .LVU2810
3265:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 9622              		.loc 1 3265 17 is_stmt 0 view .LVU2811
 9623 027e 89D0     		movl	%edx, %eax
 9624              	.LVL1009:
3265:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 9625              		.loc 1 3265 17 view .LVU2812
 9626 0280 D1F8     		sarl	%eax
 9627 0282 29C1     		subl	%eax, %ecx
3266:fltk-1.3.4-1/png/pngread.c ****          }
 9628              		.loc 1 3266 21 view .LVU2813
 9629 0284 B8080000 		movl	$8, %eax
 9629      00
3265:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 9630              		.loc 1 3265 17 view .LVU2814
 9631 0289 D3E7     		sall	%cl, %edi
3266:fltk-1.3.4-1/png/pngread.c ****          }
 9632              		.loc 1 3266 21 view .LVU2815
 9633 028b 89442418 		movl	%eax, 24(%rsp)
3265:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 9634              		.loc 1 3265 15 view .LVU2816
 9635 028f 83E707   		andl	$7, %edi
 9636 0292 897C2408 		movl	%edi, 8(%rsp)
 9637              	.LVL1010:
3266:fltk-1.3.4-1/png/pngread.c ****          }
 9638              		.loc 1 3266 13 is_stmt 1 view .LVU2817
3266:fltk-1.3.4-1/png/pngread.c ****          }
 9639              		.loc 1 3266 21 is_stmt 0 view .LVU2818
 9640 0296 83FA02   		cmpl	$2, %edx
 9641 0299 0F867CFE 		jbe	.L885
 9641      FFFF
3266:fltk-1.3.4-1/png/pngread.c ****          }
 9642              		.loc 1 3266 21 discriminator 1 view .LVU2819
 9643 029f 8D4AFF   		leal	-1(%rdx), %ecx
 9644 02a2 D1F9     		sarl	%ecx
 9645 02a4 D3F8     		sarl	%cl, %eax
 9646 02a6 89442418 		movl	%eax, 24(%rsp)
 9647 02aa E96CFEFF 		jmp	.L885
 9647      FF
 9648              	.LVL1011:
 9649              	.L886:
3260:fltk-1.3.4-1/png/pngread.c ****                continue;
 9650              		.loc 1 3260 17 view .LVU2820
 9651 02af 89F0     		movl	%esi, %eax
 9652 02b1 B9030000 		movl	$3, %ecx
 9652      00
 9653 02b6 F7D0     		notl	%eax
 9654 02b8 83E007   		andl	$7, %eax
 9655 02bb 0344244C 		addl	76(%rsp), %eax
 9656 02bf E90AFEFF 		jmp	.L900
 9656      FF
 9657              	.LVL1012:
 9658              	.L901:
3260:fltk-1.3.4-1/png/pngread.c ****                continue;
 9659              		.loc 1 3260 17 view .LVU2821
 9660              	.LBE361:
 9661              	.LBE362:
3233:fltk-1.3.4-1/png/pngread.c ****          break;
 9662              		.loc 1 3233 17 view .LVU2822
 9663 02c4 C7442448 		movl	$1, 72(%rsp)
 9663      01000000 
 9664 02cc E973FDFF 		jmp	.L883
 9664      FF
 9665              	.L919:
3241:fltk-1.3.4-1/png/pngread.c ****    }
 9666              		.loc 1 3241 10 is_stmt 1 view .LVU2823
 9667 02d1 488B7C24 		movq	16(%rsp), %rdi
 9667      10
 9668              	.LVL1013:
3241:fltk-1.3.4-1/png/pngread.c ****    }
 9669              		.loc 1 3241 10 is_stmt 0 view .LVU2824
 9670 02d6 488D3500 		leaq	.LC39(%rip), %rsi
 9670      000000
 9671 02dd E8000000 		call	png_error@PLT
 9671      00
 9672              	.LVL1014:
3241:fltk-1.3.4-1/png/pngread.c ****    }
 9673              		.loc 1 3241 10 view .LVU2825
 9674              		.cfi_endproc
 9675              	.LFE75:
 9677              		.section	.rodata.png_image_read_colormapped.str1.8,"aMS",@progbits,1
 9678              		.align 8
 9679              	.LC41:
 9680 0000 62616420 		.string	"bad color-map processing (internal error)"
 9680      636F6C6F 
 9680      722D6D61 
 9680      70207072 
 9680      6F636573 
 9681              		.section	.text.png_image_read_colormapped,"ax",@progbits
 9682              		.p2align 4
 9684              	png_image_read_colormapped:
 9685              	.LVL1015:
 9686              	.LFB74:
3090:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9687              		.loc 1 3090 1 is_stmt 1 view -0
 9688              		.cfi_startproc
3090:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9689              		.loc 1 3090 1 is_stmt 0 view .LVU2827
 9690 0000 F30F1EFA 		endbr64
3091:fltk-1.3.4-1/png/pngread.c ****       argument);
 9691              		.loc 1 3091 4 is_stmt 1 view .LVU2828
 9692              	.LVL1016:
3093:fltk-1.3.4-1/png/pngread.c ****    png_controlp control = image->opaque;
 9693              		.loc 1 3093 4 view .LVU2829
3090:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9694              		.loc 1 3090 1 is_stmt 0 view .LVU2830
 9695 0004 4157     		pushq	%r15
 9696              		.cfi_def_cfa_offset 16
 9697              		.cfi_offset 15, -16
 9698 0006 4156     		pushq	%r14
 9699              		.cfi_def_cfa_offset 24
 9700              		.cfi_offset 14, -24
 9701 0008 4155     		pushq	%r13
 9702              		.cfi_def_cfa_offset 32
 9703              		.cfi_offset 13, -32
 9704 000a 4531ED   		xorl	%r13d, %r13d
 9705 000d 4154     		pushq	%r12
 9706              		.cfi_def_cfa_offset 40
 9707              		.cfi_offset 12, -40
 9708 000f 55       		pushq	%rbp
 9709              		.cfi_def_cfa_offset 48
 9710              		.cfi_offset 6, -48
 9711 0010 53       		pushq	%rbx
 9712              		.cfi_def_cfa_offset 56
 9713              		.cfi_offset 3, -56
 9714 0011 4889FB   		movq	%rdi, %rbx
 9715 0014 4883EC18 		subq	$24, %rsp
 9716              		.cfi_def_cfa_offset 80
3093:fltk-1.3.4-1/png/pngread.c ****    png_controlp control = image->opaque;
 9717              		.loc 1 3093 15 view .LVU2831
 9718 0018 4C8B3F   		movq	(%rdi), %r15
 9719              	.LVL1017:
3094:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = control->png_ptr;
 9720              		.loc 1 3094 4 is_stmt 1 view .LVU2832
3090:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 9721              		.loc 1 3090 1 is_stmt 0 view .LVU2833
 9722 001b 48897C24 		movq	%rdi, 8(%rsp)
 9722      08
3094:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = control->png_ptr;
 9723              		.loc 1 3094 17 view .LVU2834
 9724 0020 498B07   		movq	(%r15), %rax
 9725              	.LVL1018:
3095:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = control->info_ptr;
 9726              		.loc 1 3095 4 is_stmt 1 view .LVU2835
3095:fltk-1.3.4-1/png/pngread.c ****    png_inforp info_ptr = control->info_ptr;
 9727              		.loc 1 3095 17 is_stmt 0 view .LVU2836
 9728 0023 4C8B30   		movq	(%rax), %r14
 9729              	.LVL1019:
3096:fltk-1.3.4-1/png/pngread.c **** 
 9730              		.loc 1 3096 4 is_stmt 1 view .LVU2837
3096:fltk-1.3.4-1/png/pngread.c **** 
 9731              		.loc 1 3096 15 is_stmt 0 view .LVU2838
 9732 0026 488B6808 		movq	8(%rax), %rbp
 9733              	.LVL1020:
3098:fltk-1.3.4-1/png/pngread.c **** 
 9734              		.loc 1 3098 4 is_stmt 1 view .LVU2839
3100:fltk-1.3.4-1/png/pngread.c **** 
 9735              		.loc 1 3100 4 view .LVU2840
 9736 002a 4C89F7   		movq	%r14, %rdi
 9737              	.LVL1021:
3100:fltk-1.3.4-1/png/pngread.c **** 
 9738              		.loc 1 3100 4 is_stmt 0 view .LVU2841
 9739 002d E8000000 		call	png_image_skip_unused_chunks
 9739      00
 9740              	.LVL1022:
3106:fltk-1.3.4-1/png/pngread.c ****       passes = png_set_interlace_handling(png_ptr);
 9741              		.loc 1 3106 4 is_stmt 1 view .LVU2842
3106:fltk-1.3.4-1/png/pngread.c ****       passes = png_set_interlace_handling(png_ptr);
 9742              		.loc 1 3106 7 is_stmt 0 view .LVU2843
 9743 0032 8B4348   		movl	72(%rbx), %eax
 9744 0035 85C0     		testl	%eax, %eax
 9745 0037 0F847701 		je	.L951
 9745      0000
 9746              	.LVL1023:
 9747              	.L925:
3109:fltk-1.3.4-1/png/pngread.c **** 
 9748              		.loc 1 3109 4 is_stmt 1 view .LVU2844
 9749 003d 4889EE   		movq	%rbp, %rsi
 9750 0040 4C89F7   		movq	%r14, %rdi
 9751 0043 E8000000 		call	png_read_update_info
 9751      00
 9752              	.LVL1024:
3112:fltk-1.3.4-1/png/pngread.c ****    {
 9753              		.loc 1 3112 4 view .LVU2845
3112:fltk-1.3.4-1/png/pngread.c ****    {
 9754              		.loc 1 3112 19 is_stmt 0 view .LVU2846
 9755 0048 488B4424 		movq	8(%rsp), %rax
 9755      08
 9756 004d 8B4048   		movl	72(%rax), %eax
3112:fltk-1.3.4-1/png/pngread.c ****    {
 9757              		.loc 1 3112 4 view .LVU2847
 9758 0050 83F803   		cmpl	$3, %eax
 9759 0053 0F849701 		je	.L926
 9759      0000
 9760 0059 7F25     		jg	.L927
 9761 005b 85C0     		testl	%eax, %eax
 9762 005d 0F846501 		je	.L928
 9762      0000
 9763 0063 83E801   		subl	$1, %eax
 9764 0066 83F801   		cmpl	$1, %eax
 9765 0069 7645     		jbe	.L952
 9766              	.L929:
3162:fltk-1.3.4-1/png/pngread.c ****    }
 9767              		.loc 1 3162 10 is_stmt 1 view .LVU2848
 9768 006b 488D3500 		leaq	.LC41(%rip), %rsi
 9768      000000
 9769 0072 4C89F7   		movq	%r14, %rdi
 9770 0075 E8000000 		call	png_error@PLT
 9770      00
 9771              	.LVL1025:
 9772 007a 660F1F44 		.p2align 4,,10
 9772      0000
 9773              		.p2align 3
 9774              	.L927:
3112:fltk-1.3.4-1/png/pngread.c ****    {
 9775              		.loc 1 3112 4 is_stmt 0 view .LVU2849
 9776 0080 83F804   		cmpl	$4, %eax
 9777 0083 75E6     		jne	.L929
3151:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
 9778              		.loc 1 3151 10 is_stmt 1 view .LVU2850
3151:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
 9779              		.loc 1 3151 13 is_stmt 0 view .LVU2851
 9780 0085 66817D24 		cmpw	$1544, 36(%rbp)
 9780      0806
 9781 008b 75DE     		jne	.L929
3152:fltk-1.3.4-1/png/pngread.c ****             png_ptr->screen_gamma == PNG_GAMMA_sRGB &&
 9782              		.loc 1 3152 38 view .LVU2852
 9783 008d 4181BEB4 		cmpl	$220000, 692(%r14)
 9783      02000060 
 9783      5B0300
 9784 0098 75D1     		jne	.L929
3153:fltk-1.3.4-1/png/pngread.c ****             image->colormap_entries == 244 /* 216 + 1 + 27 */)
 9785              		.loc 1 3153 53 view .LVU2853
 9786 009a 41817F1C 		cmpl	$244, 28(%r15)
 9786      F4000000 
 9787 00a2 742B     		je	.L933
3161:fltk-1.3.4-1/png/pngread.c ****          png_error(png_ptr, "bad color-map processing (internal error)");
 9788              		.loc 1 3161 7 view .LVU2854
 9789 00a4 EBC5     		jmp	.L929
 9790 00a6 662E0F1F 		.p2align 4,,10
 9790      84000000 
 9790      0000
 9791              		.p2align 3
 9792              	.L952:
3131:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
 9793              		.loc 1 3131 10 is_stmt 1 view .LVU2855
3131:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
 9794              		.loc 1 3131 13 is_stmt 0 view .LVU2856
 9795 00b0 66817D24 		cmpw	$1032, 36(%rbp)
 9795      0804
 9796 00b6 75B3     		jne	.L929
3132:fltk-1.3.4-1/png/pngread.c ****             png_ptr->screen_gamma == PNG_GAMMA_sRGB &&
 9797              		.loc 1 3132 38 view .LVU2857
 9798 00b8 4181BEB4 		cmpl	$220000, 692(%r14)
 9798      02000060 
 9798      5B0300
 9799 00c3 75A6     		jne	.L929
3133:fltk-1.3.4-1/png/pngread.c ****             image->colormap_entries == 256)
 9800              		.loc 1 3133 53 view .LVU2858
 9801 00c5 41817F1C 		cmpl	$256, 28(%r15)
 9801      00010000 
 9802 00cd 759C     		jne	.L929
 9803              	.L933:
 9804              	.LBB363:
3170:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
 9805              		.loc 1 3170 7 is_stmt 1 view .LVU2859
3170:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
 9806              		.loc 1 3170 17 is_stmt 0 view .LVU2860
 9807 00cf 488B4424 		movq	8(%rsp), %rax
 9807      08
3171:fltk-1.3.4-1/png/pngread.c **** 
 9808              		.loc 1 3171 17 view .LVU2861
 9809 00d4 4C636010 		movslq	16(%rax), %r12
3170:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t row_bytes = display->row_stride;
 9810              		.loc 1 3170 17 view .LVU2862
 9811 00d8 488B5808 		movq	8(%rax), %rbx
 9812              	.LVL1026:
3171:fltk-1.3.4-1/png/pngread.c **** 
 9813              		.loc 1 3171 7 is_stmt 1 view .LVU2863
3176:fltk-1.3.4-1/png/pngread.c ****       {
 9814              		.loc 1 3176 7 view .LVU2864
3176:fltk-1.3.4-1/png/pngread.c ****       {
 9815              		.loc 1 3176 10 is_stmt 0 view .LVU2865
 9816 00dc 4D85E4   		testq	%r12, %r12
 9817 00df 790E     		jns	.L934
 9818              	.LBB364:
3178:fltk-1.3.4-1/png/pngread.c ****          ptr += (image->height-1) * (-row_bytes);
 9819              		.loc 1 3178 10 is_stmt 1 view .LVU2866
 9820              	.LVL1027:
3179:fltk-1.3.4-1/png/pngread.c ****          first_row = png_voidcast(png_voidp, ptr);
 9821              		.loc 1 3179 10 view .LVU2867
3179:fltk-1.3.4-1/png/pngread.c ****          first_row = png_voidcast(png_voidp, ptr);
 9822              		.loc 1 3179 31 is_stmt 0 view .LVU2868
 9823 00e1 418B4710 		movl	16(%r15), %eax
 9824 00e5 83E801   		subl	$1, %eax
3179:fltk-1.3.4-1/png/pngread.c ****          first_row = png_voidcast(png_voidp, ptr);
 9825              		.loc 1 3179 35 view .LVU2869
 9826 00e8 490FAFC4 		imulq	%r12, %rax
3179:fltk-1.3.4-1/png/pngread.c ****          first_row = png_voidcast(png_voidp, ptr);
 9827              		.loc 1 3179 14 view .LVU2870
 9828 00ec 4829C3   		subq	%rax, %rbx
 9829              	.LVL1028:
3180:fltk-1.3.4-1/png/pngread.c ****       }
 9830              		.loc 1 3180 10 is_stmt 1 view .LVU2871
 9831              	.L934:
3180:fltk-1.3.4-1/png/pngread.c ****       }
 9832              		.loc 1 3180 10 is_stmt 0 view .LVU2872
 9833              	.LBE364:
3183:fltk-1.3.4-1/png/pngread.c ****       display->row_bytes = row_bytes;
 9834              		.loc 1 3183 7 is_stmt 1 view .LVU2873
3183:fltk-1.3.4-1/png/pngread.c ****       display->row_bytes = row_bytes;
 9835              		.loc 1 3183 26 is_stmt 0 view .LVU2874
 9836 00ef 488B4424 		movq	8(%rsp), %rax
 9836      08
 9837 00f4 48895830 		movq	%rbx, 48(%rax)
3184:fltk-1.3.4-1/png/pngread.c ****    }
 9838              		.loc 1 3184 7 is_stmt 1 view .LVU2875
3184:fltk-1.3.4-1/png/pngread.c ****    }
 9839              		.loc 1 3184 26 is_stmt 0 view .LVU2876
 9840 00f8 4C896038 		movq	%r12, 56(%rax)
 9841              	.LBE363:
3187:fltk-1.3.4-1/png/pngread.c ****    {
 9842              		.loc 1 3187 4 is_stmt 1 view .LVU2877
3187:fltk-1.3.4-1/png/pngread.c ****    {
 9843              		.loc 1 3187 7 is_stmt 0 view .LVU2878
 9844 00fc 4585ED   		testl	%r13d, %r13d
 9845 00ff 7467     		je	.L953
 9846              	.LBB365:
3202:fltk-1.3.4-1/png/pngread.c **** 
 9847              		.loc 1 3202 7 is_stmt 1 view .LVU2879
 9848              	.LVL1029:
3204:fltk-1.3.4-1/png/pngread.c ****       {
 9849              		.loc 1 3204 7 view .LVU2880
3204:fltk-1.3.4-1/png/pngread.c ****       {
 9850              		.loc 1 3204 13 view .LVU2881
3204:fltk-1.3.4-1/png/pngread.c ****       {
 9851              		.loc 1 3204 13 is_stmt 0 view .LVU2882
 9852 0101 4183ED01 		subl	$1, %r13d
 9853              	.LVL1030:
3204:fltk-1.3.4-1/png/pngread.c ****       {
 9854              		.loc 1 3204 13 view .LVU2883
 9855 0105 7849     		js	.L937
 9856              	.LVL1031:
 9857 0107 660F1F84 		.p2align 4,,10
 9857      00000000 
 9857      00
 9858              		.p2align 3
 9859              	.L941:
 9860              	.LBB366:
3206:fltk-1.3.4-1/png/pngread.c ****          png_bytep        row = png_voidcast(png_bytep, display->first_row);
 9861              		.loc 1 3206 10 is_stmt 1 view .LVU2884
3206:fltk-1.3.4-1/png/pngread.c ****          png_bytep        row = png_voidcast(png_bytep, display->first_row);
 9862              		.loc 1 3206 27 is_stmt 0 view .LVU2885
 9863 0110 418B4710 		movl	16(%r15), %eax
 9864              	.LVL1032:
3207:fltk-1.3.4-1/png/pngread.c **** 
 9865              		.loc 1 3207 10 is_stmt 1 view .LVU2886
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9866              		.loc 1 3209 10 view .LVU2887
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9867              		.loc 1 3209 16 view .LVU2888
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9868              		.loc 1 3209 18 is_stmt 0 view .LVU2889
 9869 0114 8D68FF   		leal	-1(%rax), %ebp
 9870              	.LVL1033:
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9871              		.loc 1 3209 16 view .LVU2890
 9872 0117 85C0     		testl	%eax, %eax
 9873 0119 741D     		je	.L940
 9874              	.LVL1034:
 9875 011b 0F1F4400 		.p2align 4,,10
 9875      00
 9876              		.p2align 3
 9877              	.L938:
3211:fltk-1.3.4-1/png/pngread.c ****             row += row_bytes;
 9878              		.loc 1 3211 13 is_stmt 1 view .LVU2891
 9879 0120 4889DE   		movq	%rbx, %rsi
 9880 0123 31D2     		xorl	%edx, %edx
 9881 0125 4C89F7   		movq	%r14, %rdi
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9882              		.loc 1 3209 18 is_stmt 0 view .LVU2892
 9883 0128 83ED01   		subl	$1, %ebp
 9884              	.LVL1035:
3211:fltk-1.3.4-1/png/pngread.c ****             row += row_bytes;
 9885              		.loc 1 3211 13 view .LVU2893
 9886 012b E8000000 		call	png_read_row
 9886      00
 9887              	.LVL1036:
3212:fltk-1.3.4-1/png/pngread.c ****          }
 9888              		.loc 1 3212 13 is_stmt 1 view .LVU2894
3212:fltk-1.3.4-1/png/pngread.c ****          }
 9889              		.loc 1 3212 17 is_stmt 0 view .LVU2895
 9890 0130 4C01E3   		addq	%r12, %rbx
 9891              	.LVL1037:
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9892              		.loc 1 3209 16 is_stmt 1 view .LVU2896
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9893              		.loc 1 3209 16 is_stmt 0 view .LVU2897
 9894 0133 83FDFF   		cmpl	$-1, %ebp
 9895 0136 75E8     		jne	.L938
 9896              	.LVL1038:
 9897              	.L940:
3209:fltk-1.3.4-1/png/pngread.c ****          {
 9898              		.loc 1 3209 16 view .LVU2898
 9899              	.LBE366:
3204:fltk-1.3.4-1/png/pngread.c ****       {
 9900              		.loc 1 3204 13 is_stmt 1 view .LVU2899
 9901 0138 4183ED01 		subl	$1, %r13d
 9902              	.LVL1039:
3204:fltk-1.3.4-1/png/pngread.c ****       {
 9903              		.loc 1 3204 13 is_stmt 0 view .LVU2900
 9904 013c 4183FDFF 		cmpl	$-1, %r13d
 9905 0140 740E     		je	.L937
 9906 0142 488B4424 		movq	8(%rsp), %rax
 9906      08
 9907 0147 488B5830 		movq	48(%rax), %rbx
 9908 014b EBC3     		jmp	.L941
 9909              	.LVL1040:
 9910 014d 0F1F00   		.p2align 4,,10
 9911              		.p2align 3
 9912              	.L937:
3216:fltk-1.3.4-1/png/pngread.c ****    }
 9913              		.loc 1 3216 14 view .LVU2901
 9914 0150 41BC0100 		movl	$1, %r12d
 9914      0000
 9915              	.LVL1041:
 9916              	.L924:
3216:fltk-1.3.4-1/png/pngread.c ****    }
 9917              		.loc 1 3216 14 view .LVU2902
 9918              	.LBE365:
3218:fltk-1.3.4-1/png/pngread.c **** 
 9919              		.loc 1 3218 1 view .LVU2903
 9920 0156 4883C418 		addq	$24, %rsp
 9921              		.cfi_remember_state
 9922              		.cfi_def_cfa_offset 56
 9923 015a 4489E0   		movl	%r12d, %eax
 9924 015d 5B       		popq	%rbx
 9925              		.cfi_def_cfa_offset 48
 9926 015e 5D       		popq	%rbp
 9927              		.cfi_def_cfa_offset 40
 9928 015f 415C     		popq	%r12
 9929              		.cfi_def_cfa_offset 32
 9930 0161 415D     		popq	%r13
 9931              		.cfi_def_cfa_offset 24
 9932              	.LVL1042:
3218:fltk-1.3.4-1/png/pngread.c **** 
 9933              		.loc 1 3218 1 view .LVU2904
 9934 0163 415E     		popq	%r14
 9935              		.cfi_def_cfa_offset 16
 9936              	.LVL1043:
3218:fltk-1.3.4-1/png/pngread.c **** 
 9937              		.loc 1 3218 1 view .LVU2905
 9938 0165 415F     		popq	%r15
 9939              		.cfi_def_cfa_offset 8
 9940              	.LVL1044:
3218:fltk-1.3.4-1/png/pngread.c **** 
 9941              		.loc 1 3218 1 view .LVU2906
 9942 0167 C3       		ret
 9943              	.LVL1045:
 9944              	.L953:
 9945              		.cfi_restore_state
 9946              	.LBB367:
3189:fltk-1.3.4-1/png/pngread.c ****       png_voidp row = png_malloc(png_ptr, png_get_rowbytes(png_ptr, info_ptr));
 9947              		.loc 1 3189 7 is_stmt 1 view .LVU2907
3190:fltk-1.3.4-1/png/pngread.c **** 
 9948              		.loc 1 3190 7 view .LVU2908
3190:fltk-1.3.4-1/png/pngread.c **** 
 9949              		.loc 1 3190 23 is_stmt 0 view .LVU2909
 9950 0168 4889EE   		movq	%rbp, %rsi
 9951 016b 4C89F7   		movq	%r14, %rdi
 9952 016e E8000000 		call	png_get_rowbytes@PLT
 9952      00
 9953              	.LVL1046:
 9954 0173 4C89F7   		movq	%r14, %rdi
 9955 0176 4889C6   		movq	%rax, %rsi
 9956 0179 E8000000 		call	png_malloc@PLT
 9956      00
 9957              	.LVL1047:
3192:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_and_map, display);
 9958              		.loc 1 3192 26 view .LVU2910
 9959 017e 488B5C24 		movq	8(%rsp), %rbx
 9959      08
 9960              	.LVL1048:
3193:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 9961              		.loc 1 3193 16 view .LVU2911
 9962 0183 4C89FF   		movq	%r15, %rdi
 9963 0186 488D3500 		leaq	png_image_read_and_map(%rip), %rsi
 9963      000000
3190:fltk-1.3.4-1/png/pngread.c **** 
 9964              		.loc 1 3190 23 view .LVU2912
 9965 018d 4889C5   		movq	%rax, %rbp
 9966              	.LVL1049:
3192:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_and_map, display);
 9967              		.loc 1 3192 7 is_stmt 1 view .LVU2913
3192:fltk-1.3.4-1/png/pngread.c ****       result = png_safe_execute(image, png_image_read_and_map, display);
 9968              		.loc 1 3192 26 is_stmt 0 view .LVU2914
 9969 0190 48894328 		movq	%rax, 40(%rbx)
3193:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 9970              		.loc 1 3193 7 is_stmt 1 view .LVU2915
3193:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 9971              		.loc 1 3193 16 is_stmt 0 view .LVU2916
 9972 0194 4889DA   		movq	%rbx, %rdx
 9973 0197 E8000000 		call	png_safe_execute@PLT
 9973      00
 9974              	.LVL1050:
3194:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, row);
 9975              		.loc 1 3194 26 view .LVU2917
 9976 019c 48C74328 		movq	$0, 40(%rbx)
 9976      00000000 
3195:fltk-1.3.4-1/png/pngread.c **** 
 9977              		.loc 1 3195 7 view .LVU2918
 9978 01a4 4889EE   		movq	%rbp, %rsi
 9979 01a7 4C89F7   		movq	%r14, %rdi
3193:fltk-1.3.4-1/png/pngread.c ****       display->local_row = NULL;
 9980              		.loc 1 3193 16 view .LVU2919
 9981 01aa 4189C4   		movl	%eax, %r12d
 9982              	.LVL1051:
3194:fltk-1.3.4-1/png/pngread.c ****       png_free(png_ptr, row);
 9983              		.loc 1 3194 7 is_stmt 1 view .LVU2920
3195:fltk-1.3.4-1/png/pngread.c **** 
 9984              		.loc 1 3195 7 view .LVU2921
 9985 01ad E8000000 		call	png_free@PLT
 9985      00
 9986              	.LVL1052:
3197:fltk-1.3.4-1/png/pngread.c ****    }
 9987              		.loc 1 3197 7 view .LVU2922
3197:fltk-1.3.4-1/png/pngread.c ****    }
 9988              		.loc 1 3197 14 is_stmt 0 view .LVU2923
 9989 01b2 EBA2     		jmp	.L924
 9990              	.LVL1053:
 9991              	.L951:
3197:fltk-1.3.4-1/png/pngread.c ****    }
 9992              		.loc 1 3197 14 view .LVU2924
 9993              	.LBE367:
3107:fltk-1.3.4-1/png/pngread.c **** 
 9994              		.loc 1 3107 7 is_stmt 1 view .LVU2925
3107:fltk-1.3.4-1/png/pngread.c **** 
 9995              		.loc 1 3107 16 is_stmt 0 view .LVU2926
 9996 01b4 4C89F7   		movq	%r14, %rdi
 9997 01b7 E8000000 		call	png_set_interlace_handling@PLT
 9997      00
 9998              	.LVL1054:
 9999 01bc 4189C5   		movl	%eax, %r13d
 10000              	.LVL1055:
3107:fltk-1.3.4-1/png/pngread.c **** 
 10001              		.loc 1 3107 16 view .LVU2927
 10002 01bf E979FEFF 		jmp	.L925
 10002      FF
 10003              	.LVL1056:
 10004              		.p2align 4,,10
 10005 01c4 0F1F4000 		.p2align 3
 10006              	.L928:
3118:fltk-1.3.4-1/png/pngread.c ****             info_ptr->color_type == PNG_COLOR_TYPE_GRAY) &&
 10007              		.loc 1 3118 10 is_stmt 1 view .LVU2928
3118:fltk-1.3.4-1/png/pngread.c ****             info_ptr->color_type == PNG_COLOR_TYPE_GRAY) &&
 10008              		.loc 1 3118 23 is_stmt 0 view .LVU2929
 10009 01c8 0FB64525 		movzbl	37(%rbp), %eax
3118:fltk-1.3.4-1/png/pngread.c ****             info_ptr->color_type == PNG_COLOR_TYPE_GRAY) &&
 10010              		.loc 1 3118 13 view .LVU2930
 10011 01cc 3C03     		cmpb	$3, %al
 10012 01ce 7408     		je	.L943
 10013 01d0 84C0     		testb	%al, %al
 10014 01d2 0F8593FE 		jne	.L929
 10014      FFFF
 10015              	.L943:
3119:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8)
 10016              		.loc 1 3119 58 view .LVU2931
 10017 01d8 807D2408 		cmpb	$8, 36(%rbp)
 10018 01dc 0F84EDFE 		je	.L933
 10018      FFFF
 10019 01e2 E984FEFF 		jmp	.L929
 10019      FF
 10020 01e7 660F1F84 		.p2align 4,,10
 10020      00000000 
 10020      00
 10021              		.p2align 3
 10022              	.L926:
3141:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
 10023              		.loc 1 3141 10 is_stmt 1 view .LVU2932
3141:fltk-1.3.4-1/png/pngread.c ****             info_ptr->bit_depth == 8 &&
 10024              		.loc 1 3141 13 is_stmt 0 view .LVU2933
 10025 01f0 66817D24 		cmpw	$520, 36(%rbp)
 10025      0802
 10026 01f6 0F856FFE 		jne	.L929
 10026      FFFF
3142:fltk-1.3.4-1/png/pngread.c ****             png_ptr->screen_gamma == PNG_GAMMA_sRGB &&
 10027              		.loc 1 3142 38 view .LVU2934
 10028 01fc 4181BEB4 		cmpl	$220000, 692(%r14)
 10028      02000060 
 10028      5B0300
 10029 0207 0F855EFE 		jne	.L929
 10029      FFFF
3143:fltk-1.3.4-1/png/pngread.c ****             image->colormap_entries == 216)
 10030              		.loc 1 3143 53 view .LVU2935
 10031 020d 41817F1C 		cmpl	$216, 28(%r15)
 10031      D8000000 
 10032 0215 0F84B4FE 		je	.L933
 10032      FFFF
 10033 021b E94BFEFF 		jmp	.L929
 10033      FF
 10034              		.cfi_endproc
 10035              	.LFE74:
 10037              		.section	.text.png_image_read_and_map,"ax",@progbits
 10038              		.p2align 4
 10040              	png_image_read_and_map:
 10041              	.LVL1057:
 10042              	.LFB73:
2901:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 10043              		.loc 1 2901 1 is_stmt 1 view -0
 10044              		.cfi_startproc
2901:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 10045              		.loc 1 2901 1 is_stmt 0 view .LVU2937
 10046 0000 F30F1EFA 		endbr64
2902:fltk-1.3.4-1/png/pngread.c ****       argument);
 10047              		.loc 1 2902 4 is_stmt 1 view .LVU2938
 10048              	.LVL1058:
2904:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 10049              		.loc 1 2904 4 view .LVU2939
2901:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 10050              		.loc 1 2901 1 is_stmt 0 view .LVU2940
 10051 0004 4157     		pushq	%r15
 10052              		.cfi_def_cfa_offset 16
 10053              		.cfi_offset 15, -16
 10054 0006 4156     		pushq	%r14
 10055              		.cfi_def_cfa_offset 24
 10056              		.cfi_offset 14, -24
 10057 0008 4155     		pushq	%r13
 10058              		.cfi_def_cfa_offset 32
 10059              		.cfi_offset 13, -32
 10060 000a 4154     		pushq	%r12
 10061              		.cfi_def_cfa_offset 40
 10062              		.cfi_offset 12, -40
 10063 000c 55       		pushq	%rbp
 10064              		.cfi_def_cfa_offset 48
 10065              		.cfi_offset 6, -48
 10066 000d 53       		pushq	%rbx
 10067              		.cfi_def_cfa_offset 56
 10068              		.cfi_offset 3, -56
 10069 000e 4883EC48 		subq	$72, %rsp
 10070              		.cfi_def_cfa_offset 128
2904:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 10071              		.loc 1 2904 15 view .LVU2941
 10072 0012 488B17   		movq	(%rdi), %rdx
 10073              	.LVL1059:
2905:fltk-1.3.4-1/png/pngread.c ****    int passes;
 10074              		.loc 1 2905 4 is_stmt 1 view .LVU2942
2901:fltk-1.3.4-1/png/pngread.c ****    png_image_read_control *display = png_voidcast(png_image_read_control*,
 10075              		.loc 1 2901 1 is_stmt 0 view .LVU2943
 10076 0015 48897C24 		movq	%rdi, 24(%rsp)
 10076      18
2905:fltk-1.3.4-1/png/pngread.c ****    int passes;
 10077              		.loc 1 2905 17 view .LVU2944
 10078 001a 488B02   		movq	(%rdx), %rax
 10079 001d 488B28   		movq	(%rax), %rbp
 10080              	.LVL1060:
2906:fltk-1.3.4-1/png/pngread.c **** 
 10081              		.loc 1 2906 4 is_stmt 1 view .LVU2945
2912:fltk-1.3.4-1/png/pngread.c ****    {
 10082              		.loc 1 2912 4 view .LVU2946
2912:fltk-1.3.4-1/png/pngread.c ****    {
 10083              		.loc 1 2912 19 is_stmt 0 view .LVU2947
 10084 0020 0FB68574 		movzbl	628(%rbp), %eax
 10084      020000
2912:fltk-1.3.4-1/png/pngread.c ****    {
 10085              		.loc 1 2912 4 view .LVU2948
 10086 0027 84C0     		testb	%al, %al
 10087 0029 0F84B503 		je	.L990
 10087      0000
 10088 002f 3C01     		cmpb	$1, %al
 10089 0031 0F85BA03 		jne	.L1013
 10089      0000
 10090 0037 C744243C 		movl	$7, 60(%rsp)
 10090      07000000 
 10091              	.L955:
 10092              	.LVL1061:
 10093              	.LBB368:
2927:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  width = image->width;
 10094              		.loc 1 2927 7 is_stmt 1 view .LVU2949
2927:fltk-1.3.4-1/png/pngread.c ****       png_uint_32  width = image->width;
 10095              		.loc 1 2927 20 is_stmt 0 view .LVU2950
 10096 003f 8B5A10   		movl	16(%rdx), %ebx
 10097 0042 895C2404 		movl	%ebx, 4(%rsp)
 10098              	.LVL1062:
2928:fltk-1.3.4-1/png/pngread.c ****       int          proc = display->colormap_processing;
 10099              		.loc 1 2928 7 is_stmt 1 view .LVU2951
2928:fltk-1.3.4-1/png/pngread.c ****       int          proc = display->colormap_processing;
 10100              		.loc 1 2928 20 is_stmt 0 view .LVU2952
 10101 0046 8B5A0C   		movl	12(%rdx), %ebx
 10102              	.LVL1063:
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10103              		.loc 1 2934 17 view .LVU2953
 10104 0049 31D2     		xorl	%edx, %edx
 10105              	.LVL1064:
2928:fltk-1.3.4-1/png/pngread.c ****       int          proc = display->colormap_processing;
 10106              		.loc 1 2928 20 view .LVU2954
 10107 004b 895C2438 		movl	%ebx, 56(%rsp)
 10108              	.LVL1065:
2929:fltk-1.3.4-1/png/pngread.c ****       png_bytep    first_row = png_voidcast(png_bytep, display->first_row);
 10109              		.loc 1 2929 7 is_stmt 1 view .LVU2955
2929:fltk-1.3.4-1/png/pngread.c ****       png_bytep    first_row = png_voidcast(png_bytep, display->first_row);
 10110              		.loc 1 2929 20 is_stmt 0 view .LVU2956
 10111 004f 488B5C24 		movq	24(%rsp), %rbx
 10111      18
 10112              	.LVL1066:
2929:fltk-1.3.4-1/png/pngread.c ****       png_bytep    first_row = png_voidcast(png_bytep, display->first_row);
 10113              		.loc 1 2929 20 view .LVU2957
 10114 0054 448B6B48 		movl	72(%rbx), %r13d
 10115              	.LVL1067:
2930:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
 10116              		.loc 1 2930 7 is_stmt 1 view .LVU2958
2930:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
 10117              		.loc 1 2930 20 is_stmt 0 view .LVU2959
 10118 0058 488B7330 		movq	48(%rbx), %rsi
2931:fltk-1.3.4-1/png/pngread.c ****       int pass;
 10119              		.loc 1 2931 20 view .LVU2960
 10120 005c 488B5B38 		movq	56(%rbx), %rbx
2930:fltk-1.3.4-1/png/pngread.c ****       ptrdiff_t    step_row = display->row_bytes;
 10121              		.loc 1 2930 20 view .LVU2961
 10122 0060 48897424 		movq	%rsi, 32(%rsp)
 10122      20
 10123              	.LVL1068:
2931:fltk-1.3.4-1/png/pngread.c ****       int pass;
 10124              		.loc 1 2931 7 is_stmt 1 view .LVU2962
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10125              		.loc 1 2934 17 is_stmt 0 view .LVU2963
 10126 0065 4589EE   		movl	%r13d, %r14d
2931:fltk-1.3.4-1/png/pngread.c ****       int pass;
 10127              		.loc 1 2931 20 view .LVU2964
 10128 0068 48895C24 		movq	%rbx, 40(%rsp)
 10128      28
 10129              	.LVL1069:
2932:fltk-1.3.4-1/png/pngread.c **** 
 10130              		.loc 1 2932 7 is_stmt 1 view .LVU2965
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10131              		.loc 1 2934 7 view .LVU2966
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10132              		.loc 1 2934 22 view .LVU2967
 10133 006d EB62     		jmp	.L987
 10134              	.LVL1070:
 10135 006f 90       		.p2align 4,,10
 10136              		.p2align 3
 10137              	.L1015:
 10138              	.LBB369:
2942:fltk-1.3.4-1/png/pngread.c ****                continue;
 10139              		.loc 1 2942 13 view .LVU2968
 10140 0070 4189D1   		movl	%edx, %r9d
 10141 0073 89F8     		movl	%edi, %eax
 10142 0075 B9030000 		movl	$3, %ecx
 10142      00
 10143 007a 4183E101 		andl	$1, %r9d
 10144 007e D1F8     		sarl	%eax
 10145 0080 29C1     		subl	%eax, %ecx
 10146 0082 4489CB   		movl	%r9d, %ebx
 10147 0085 D3E3     		sall	%cl, %ebx
2942:fltk-1.3.4-1/png/pngread.c ****                continue;
 10148              		.loc 1 2942 17 is_stmt 0 view .LVU2969
 10149 0087 83FA01   		cmpl	$1, %edx
 10150 008a 0F862803 		jbe	.L957
 10150      0000
2942:fltk-1.3.4-1/png/pngread.c ****                continue;
 10151              		.loc 1 2942 17 discriminator 1 view .LVU2970
 10152 0090 B9080000 		movl	$8, %ecx
 10152      00
 10153 0095 B8010000 		movl	$1, %eax
 10153      00
 10154 009a 89DE     		movl	%ebx, %esi
 10155 009c 29F9     		subl	%edi, %ecx
 10156 009e 83E607   		andl	$7, %esi
 10157 00a1 D1F9     		sarl	%ecx
 10158 00a3 D3E0     		sall	%cl, %eax
 10159 00a5 83E801   		subl	$1, %eax
 10160 00a8 29F0     		subl	%esi, %eax
 10161 00aa 03442438 		addl	56(%rsp), %eax
 10162              	.L989:
2942:fltk-1.3.4-1/png/pngread.c ****                continue;
 10163              		.loc 1 2942 17 discriminator 8 view .LVU2971
 10164 00ae D3E8     		shrl	%cl, %eax
2942:fltk-1.3.4-1/png/pngread.c ****                continue;
 10165              		.loc 1 2942 16 discriminator 8 view .LVU2972
 10166 00b0 85C0     		testl	%eax, %eax
 10167 00b2 0F85A802 		jne	.L958
 10167      0000
 10168              	.L985:
 10169              	.LBE369:
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10170              		.loc 1 2934 37 is_stmt 1 view .LVU2973
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10171              		.loc 1 2934 22 view .LVU2974
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10172              		.loc 1 2934 7 is_stmt 0 view .LVU2975
 10173 00b8 8B5C2434 		movl	52(%rsp), %ebx
 10174 00bc 395C243C 		cmpl	%ebx, 60(%rsp)
 10175 00c0 0F840A03 		je	.L1014
 10175      0000
 10176 00c6 0FB68574 		movzbl	628(%rbp), %eax
 10176      020000
 10177              	.LVL1071:
2934:fltk-1.3.4-1/png/pngread.c ****       {
 10178              		.loc 1 2934 7 view .LVU2976
 10179 00cd 8B542434 		movl	52(%rsp), %edx
 10180              	.LVL1072:
 10181              	.L987:
 10182              	.LBB384:
2936:fltk-1.3.4-1/png/pngread.c ****          png_uint_32      y;
 10183              		.loc 1 2936 10 is_stmt 1 view .LVU2977
2937:fltk-1.3.4-1/png/pngread.c **** 
 10184              		.loc 1 2937 10 view .LVU2978
2939:fltk-1.3.4-1/png/pngread.c ****          {
 10185              		.loc 1 2939 10 view .LVU2979
 10186 00d1 8D7A01   		leal	1(%rdx), %edi
 10187 00d4 897C2434 		movl	%edi, 52(%rsp)
2939:fltk-1.3.4-1/png/pngread.c ****          {
 10188              		.loc 1 2939 13 is_stmt 0 view .LVU2980
 10189 00d8 3C01     		cmpb	$1, %al
 10190 00da 7494     		je	.L1015
2955:fltk-1.3.4-1/png/pngread.c ****          }
 10191              		.loc 1 2955 27 view .LVU2981
 10192 00dc C7042401 		movl	$1, (%rsp)
 10192      000000
2953:fltk-1.3.4-1/png/pngread.c ****             startx = 0;
 10193              		.loc 1 2953 15 view .LVU2982
 10194 00e3 4531ED   		xorl	%r13d, %r13d
2954:fltk-1.3.4-1/png/pngread.c ****             stepx = stepy = 1;
 10195              		.loc 1 2954 20 view .LVU2983
 10196 00e6 31DB     		xorl	%ebx, %ebx
2955:fltk-1.3.4-1/png/pngread.c ****          }
 10197              		.loc 1 2955 19 view .LVU2984
 10198 00e8 C7442430 		movl	$1, 48(%rsp)
 10198      01000000 
 10199              	.L956:
 10200              	.LVL1073:
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10201              		.loc 1 2958 17 is_stmt 1 discriminator 1 view .LVU2985
 10202 00f0 8B442438 		movl	56(%rsp), %eax
 10203 00f4 48894424 		movq	%rax, 8(%rsp)
 10203      08
 10204 00f9 89D8     		movl	%ebx, %eax
 10205 00fb 4489EB   		movl	%r13d, %ebx
 10206 00fe 48894424 		movq	%rax, 16(%rsp)
 10206      10
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10207              		.loc 1 2958 10 is_stmt 0 discriminator 1 view .LVU2986
 10208 0103 44396C24 		cmpl	%r13d, 4(%rsp)
 10208      04
 10209 0108 76AE     		jbe	.L985
 10210              	.LVL1074:
 10211 010a 660F1F44 		.p2align 4,,10
 10211      0000
 10212              		.p2align 3
 10213              	.L984:
 10214              	.LBB370:
2960:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow = first_row + y * step_row;
 10215              		.loc 1 2960 13 is_stmt 1 view .LVU2987
2960:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow = first_row + y * step_row;
 10216              		.loc 1 2960 23 is_stmt 0 view .LVU2988
 10217 0110 488B4424 		movq	24(%rsp), %rax
 10217      18
2961:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep end_row = outrow + width;
 10218              		.loc 1 2961 23 view .LVU2989
 10219 0115 488B7C24 		movq	32(%rsp), %rdi
 10219      20
2965:fltk-1.3.4-1/png/pngread.c **** 
 10220              		.loc 1 2965 13 view .LVU2990
 10221 011a 31D2     		xorl	%edx, %edx
2960:fltk-1.3.4-1/png/pngread.c ****             png_bytep outrow = first_row + y * step_row;
 10222              		.loc 1 2960 23 view .LVU2991
 10223 011c 4C8B7828 		movq	40(%rax), %r15
 10224              	.LVL1075:
2961:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep end_row = outrow + width;
 10225              		.loc 1 2961 13 is_stmt 1 view .LVU2992
2961:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep end_row = outrow + width;
 10226              		.loc 1 2961 46 is_stmt 0 view .LVU2993
 10227 0120 89D8     		movl	%ebx, %eax
 10228 0122 480FAF44 		imulq	40(%rsp), %rax
 10228      2428
2965:fltk-1.3.4-1/png/pngread.c **** 
 10229              		.loc 1 2965 13 view .LVU2994
 10230 0128 4C89FE   		movq	%r15, %rsi
2961:fltk-1.3.4-1/png/pngread.c ****             png_const_bytep end_row = outrow + width;
 10231              		.loc 1 2961 23 view .LVU2995
 10232 012b 4C8D2407 		leaq	(%rdi,%rax), %r12
 10233              	.LVL1076:
2962:fltk-1.3.4-1/png/pngread.c **** 
 10234              		.loc 1 2962 13 is_stmt 1 view .LVU2996
2962:fltk-1.3.4-1/png/pngread.c **** 
 10235              		.loc 1 2962 29 is_stmt 0 view .LVU2997
 10236 012f 488B4424 		movq	8(%rsp), %rax
 10236      08
2965:fltk-1.3.4-1/png/pngread.c **** 
 10237              		.loc 1 2965 13 view .LVU2998
 10238 0134 4889EF   		movq	%rbp, %rdi
2962:fltk-1.3.4-1/png/pngread.c **** 
 10239              		.loc 1 2962 29 view .LVU2999
 10240 0137 4D8D2C04 		leaq	(%r12,%rax), %r13
 10241              	.LVL1077:
2965:fltk-1.3.4-1/png/pngread.c **** 
 10242              		.loc 1 2965 13 is_stmt 1 view .LVU3000
 10243 013b E8000000 		call	png_read_row
 10243      00
 10244              	.LVL1078:
2971:fltk-1.3.4-1/png/pngread.c ****             switch (proc)
 10245              		.loc 1 2971 13 view .LVU3001
2971:fltk-1.3.4-1/png/pngread.c ****             switch (proc)
 10246              		.loc 1 2971 20 is_stmt 0 view .LVU3002
 10247 0140 488B4424 		movq	16(%rsp), %rax
 10247      10
 10248 0145 4C01E0   		addq	%r12, %rax
 10249              	.LVL1079:
2972:fltk-1.3.4-1/png/pngread.c ****             {
 10250              		.loc 1 2972 13 is_stmt 1 view .LVU3003
 10251 0148 4183FE03 		cmpl	$3, %r14d
 10252 014c 0F847E01 		je	.L961
 10252      0000
2972:fltk-1.3.4-1/png/pngread.c ****             {
 10253              		.loc 1 2972 13 is_stmt 0 view .LVU3004
 10254 0152 7F6C     		jg	.L962
 10255 0154 4183FE01 		cmpl	$1, %r14d
 10256 0158 0F840201 		je	.L963
 10256      0000
 10257 015e 4183FE02 		cmpl	$2, %r14d
 10258 0162 7544     		jne	.L965
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10259              		.loc 1 3004 26 is_stmt 1 view .LVU3005
 10260 0164 8B742430 		movl	48(%rsp), %esi
 10261              	.LBB371:
3013:fltk-1.3.4-1/png/pngread.c **** 
 10262              		.loc 1 3013 33 is_stmt 0 view .LVU3006
 10263 0168 BFFFFFFF 		movl	$-1, %edi
 10263      FF
 10264              	.LBE371:
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10265              		.loc 1 3004 19 view .LVU3007
 10266 016d 4939C5   		cmpq	%rax, %r13
 10267 0170 7711     		ja	.L976
 10268 0172 EB34     		jmp	.L965
 10269              	.LVL1080:
 10270              		.p2align 4,,10
 10271 0174 0F1F4000 		.p2align 3
 10272              	.L1016:
 10273              	.LBB372:
3010:fltk-1.3.4-1/png/pngread.c **** 
 10274              		.loc 1 3010 25 is_stmt 1 view .LVU3008
3010:fltk-1.3.4-1/png/pngread.c **** 
 10275              		.loc 1 3010 33 is_stmt 0 view .LVU3009
 10276 0178 C600FE   		movb	$-2, (%rax)
 10277              	.LVL1081:
3010:fltk-1.3.4-1/png/pngread.c **** 
 10278              		.loc 1 3010 33 view .LVU3010
 10279              	.LBE372:
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10280              		.loc 1 3004 44 is_stmt 1 view .LVU3011
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10281              		.loc 1 3004 51 is_stmt 0 view .LVU3012
 10282 017b 4801F0   		addq	%rsi, %rax
 10283              	.LVL1082:
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10284              		.loc 1 3004 26 is_stmt 1 view .LVU3013
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10285              		.loc 1 3004 19 is_stmt 0 view .LVU3014
 10286 017e 4939C5   		cmpq	%rax, %r13
 10287 0181 7625     		jbe	.L965
 10288              	.L976:
 10289              	.LBB373:
3006:fltk-1.3.4-1/png/pngread.c ****                      png_byte alpha = *inrow++;
 10290              		.loc 1 3006 22 is_stmt 1 view .LVU3015
 10291              	.LVL1083:
3007:fltk-1.3.4-1/png/pngread.c **** 
 10292              		.loc 1 3007 22 view .LVU3016
 10293 0183 4983C702 		addq	$2, %r15
 10294              	.LVL1084:
3009:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_CMAP_TRANS_BACKGROUND;
 10295              		.loc 1 3009 22 view .LVU3017
3009:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_CMAP_TRANS_BACKGROUND;
 10296              		.loc 1 3009 25 is_stmt 0 view .LVU3018
 10297 0187 41807FFF 		cmpb	$0, -1(%r15)
 10297      00
 10298 018c 74EA     		je	.L1016
3006:fltk-1.3.4-1/png/pngread.c ****                      png_byte alpha = *inrow++;
 10299              		.loc 1 3006 31 view .LVU3019
 10300 018e 410FB657 		movzbl	-2(%r15), %edx
 10300      FE
3012:fltk-1.3.4-1/png/pngread.c ****                         *outrow = gray;
 10301              		.loc 1 3012 27 is_stmt 1 view .LVU3020
3013:fltk-1.3.4-1/png/pngread.c **** 
 10302              		.loc 1 3013 33 is_stmt 0 view .LVU3021
 10303 0193 80FAFE   		cmpb	$-2, %dl
 10304 0196 0F44D7   		cmove	%edi, %edx
 10305 0199 8810     		movb	%dl, (%rax)
 10306              	.LVL1085:
3013:fltk-1.3.4-1/png/pngread.c **** 
 10307              		.loc 1 3013 33 view .LVU3022
 10308              	.LBE373:
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10309              		.loc 1 3004 44 is_stmt 1 view .LVU3023
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10310              		.loc 1 3004 51 is_stmt 0 view .LVU3024
 10311 019b 4801F0   		addq	%rsi, %rax
 10312              	.LVL1086:
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10313              		.loc 1 3004 26 is_stmt 1 view .LVU3025
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10314              		.loc 1 3004 19 is_stmt 0 view .LVU3026
 10315 019e 4939C5   		cmpq	%rax, %r13
 10316 01a1 77E0     		ja	.L976
 10317              		.p2align 4,,10
 10318 01a3 0F1F4400 		.p2align 3
 10318      00
 10319              	.L965:
3004:fltk-1.3.4-1/png/pngread.c ****                   {
 10320              		.loc 1 3004 19 view .LVU3027
 10321              	.LBE370:
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10322              		.loc 1 2958 27 is_stmt 1 view .LVU3028
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10323              		.loc 1 2958 29 is_stmt 0 view .LVU3029
 10324 01a8 031C24   		addl	(%rsp), %ebx
 10325              	.LVL1087:
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10326              		.loc 1 2958 17 is_stmt 1 view .LVU3030
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10327              		.loc 1 2958 10 is_stmt 0 view .LVU3031
 10328 01ab 395C2404 		cmpl	%ebx, 4(%rsp)
 10329 01af 0F875BFF 		ja	.L984
 10329      FFFF
 10330 01b5 E9FEFEFF 		jmp	.L985
 10330      FF
 10331 01ba 660F1F44 		.p2align 4,,10
 10331      0000
 10332              		.p2align 3
 10333              	.L962:
 10334              	.LBB382:
2972:fltk-1.3.4-1/png/pngread.c ****             {
 10335              		.loc 1 2972 13 view .LVU3032
 10336 01c0 4183FE04 		cmpl	$4, %r14d
 10337 01c4 75E2     		jne	.L965
3029:fltk-1.3.4-1/png/pngread.c ****                   {
 10338              		.loc 1 3029 26 is_stmt 1 view .LVU3033
 10339 01c6 8B742430 		movl	48(%rsp), %esi
3029:fltk-1.3.4-1/png/pngread.c ****                   {
 10340              		.loc 1 3029 19 is_stmt 0 view .LVU3034
 10341 01ca 4939C5   		cmpq	%rax, %r13
 10342 01cd 774F     		ja	.L983
 10343 01cf EBD7     		jmp	.L965
 10344              	.LVL1088:
 10345              		.p2align 4,,10
 10346 01d1 0F1F8000 		.p2align 3
 10346      000000
 10347              	.L1017:
 10348              	.LBB374:
3039:fltk-1.3.4-1/png/pngread.c ****                            inrow[2]);
 10349              		.loc 1 3039 25 is_stmt 1 view .LVU3035
3039:fltk-1.3.4-1/png/pngread.c ****                            inrow[2]);
 10350              		.loc 1 3039 35 is_stmt 0 view .LVU3036
 10351 01d8 410FB617 		movzbl	(%r15), %edx
 10352              	.LVL1089:
3039:fltk-1.3.4-1/png/pngread.c ****                            inrow[2]);
 10353              		.loc 1 3039 35 view .LVU3037
 10354 01dc 8D949282 		leal	130(%rdx,%rdx,4), %edx
 10354      000000
 10355 01e3 C1FA08   		sarl	$8, %edx
 10356 01e6 8D0C52   		leal	(%rdx,%rdx,2), %ecx
 10357 01e9 410FB657 		movzbl	1(%r15), %edx
 10357      01
 10358 01ee 8D949282 		leal	130(%rdx,%rdx,4), %edx
 10358      000000
 10359 01f5 C1FA08   		sarl	$8, %edx
 10360 01f8 8D144A   		leal	(%rdx,%rcx,2), %edx
 10361 01fb 8D0C52   		leal	(%rdx,%rdx,2), %ecx
 10362 01fe 410FB657 		movzbl	2(%r15), %edx
 10362      02
 10363 0203 8D949282 		leal	130(%rdx,%rdx,4), %edx
 10363      000000
 10364 020a C1FA08   		sarl	$8, %edx
 10365 020d 8D144A   		leal	(%rdx,%rcx,2), %edx
 10366 0210 8810     		movb	%dl, (%rax)
 10367              	.LVL1090:
 10368              	.L979:
3074:fltk-1.3.4-1/png/pngread.c ****                   }
 10369              		.loc 1 3074 22 is_stmt 1 view .LVU3038
 10370              	.LBE374:
3029:fltk-1.3.4-1/png/pngread.c ****                   {
 10371              		.loc 1 3029 51 is_stmt 0 view .LVU3039
 10372 0212 4801F0   		addq	%rsi, %rax
 10373              	.LVL1091:
 10374              	.LBB377:
3074:fltk-1.3.4-1/png/pngread.c ****                   }
 10375              		.loc 1 3074 28 view .LVU3040
 10376 0215 4983C704 		addq	$4, %r15
 10377              	.LVL1092:
3074:fltk-1.3.4-1/png/pngread.c ****                   }
 10378              		.loc 1 3074 28 view .LVU3041
 10379              	.LBE377:
3029:fltk-1.3.4-1/png/pngread.c ****                   {
 10380              		.loc 1 3029 44 is_stmt 1 view .LVU3042
3029:fltk-1.3.4-1/png/pngread.c ****                   {
 10381              		.loc 1 3029 26 view .LVU3043
3029:fltk-1.3.4-1/png/pngread.c ****                   {
 10382              		.loc 1 3029 19 is_stmt 0 view .LVU3044
 10383 0219 4939C5   		cmpq	%rax, %r13
 10384 021c 768A     		jbe	.L965
 10385              	.L983:
 10386              	.LBB378:
3031:fltk-1.3.4-1/png/pngread.c **** 
 10387              		.loc 1 3031 22 is_stmt 1 view .LVU3045
3031:fltk-1.3.4-1/png/pngread.c **** 
 10388              		.loc 1 3031 35 is_stmt 0 view .LVU3046
 10389 021e 410FB657 		movzbl	3(%r15), %edx
 10389      03
 10390              	.LVL1093:
3038:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_RGB_INDEX(inrow[0], inrow[1],
 10391              		.loc 1 3038 22 is_stmt 1 view .LVU3047
3038:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_RGB_INDEX(inrow[0], inrow[1],
 10392              		.loc 1 3038 25 is_stmt 0 view .LVU3048
 10393 0223 81FAC300 		cmpl	$195, %edx
 10393      0000
 10394 0229 77AD     		ja	.L1017
3042:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_CMAP_RGB_ALPHA_BACKGROUND;
 10395              		.loc 1 3042 27 is_stmt 1 view .LVU3049
3042:fltk-1.3.4-1/png/pngread.c ****                         *outrow = PNG_CMAP_RGB_ALPHA_BACKGROUND;
 10396              		.loc 1 3042 30 is_stmt 0 view .LVU3050
 10397 022b 83FA3F   		cmpl	$63, %edx
 10398 022e 7708     		ja	.L980
3043:fltk-1.3.4-1/png/pngread.c **** 
 10399              		.loc 1 3043 25 is_stmt 1 view .LVU3051
3043:fltk-1.3.4-1/png/pngread.c **** 
 10400              		.loc 1 3043 33 is_stmt 0 view .LVU3052
 10401 0230 C600D8   		movb	$-40, (%rax)
 10402 0233 EBDD     		jmp	.L979
 10403              		.p2align 4,,10
 10404 0235 0F1F00   		.p2align 3
 10405              	.L980:
 10406              	.LBB375:
3053:fltk-1.3.4-1/png/pngread.c **** 
 10407              		.loc 1 3053 25 is_stmt 1 view .LVU3053
 10408              	.LVL1094:
3064:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 9;
 10409              		.loc 1 3064 25 view .LVU3054
3064:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 9;
 10410              		.loc 1 3064 34 is_stmt 0 view .LVU3055
 10411 0238 410FB617 		movzbl	(%r15), %edx
 10412              	.LVL1095:
3064:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 9;
 10413              		.loc 1 3064 34 view .LVU3056
 10414 023c 89D1     		movl	%edx, %ecx
 10415 023e 83E140   		andl	$64, %ecx
3064:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 9;
 10416              		.loc 1 3064 28 view .LVU3057
 10417 0241 84D2     		testb	%dl, %dl
 10418 0243 0F88F700 		js	.L981
 10418      0000
3065:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 3; /* green */
 10419              		.loc 1 3065 25 is_stmt 1 view .LVU3058
3053:fltk-1.3.4-1/png/pngread.c **** 
 10420              		.loc 1 3053 38 is_stmt 0 view .LVU3059
 10421 0249 BAD90000 		movl	$217, %edx
 10421      00
3065:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 3; /* green */
 10422              		.loc 1 3065 28 view .LVU3060
 10423 024e 84C9     		testb	%cl, %cl
 10424 0250 7408     		je	.L982
3067:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 1; /* blue */
 10425              		.loc 1 3067 53 view .LVU3061
 10426 0252 BAE50000 		movl	$229, %edx
 10426      00
 10427              	.LVL1096:
 10428              	.L988:
3069:fltk-1.3.4-1/png/pngread.c **** 
 10429              		.loc 1 3069 46 is_stmt 1 discriminator 1 view .LVU3062
3069:fltk-1.3.4-1/png/pngread.c **** 
 10430              		.loc 1 3069 53 is_stmt 0 discriminator 1 view .LVU3063
 10431 0257 83C201   		addl	$1, %edx
 10432              	.LVL1097:
 10433              	.L982:
3071:fltk-1.3.4-1/png/pngread.c ****                      }
 10434              		.loc 1 3071 25 is_stmt 1 view .LVU3064
3071:fltk-1.3.4-1/png/pngread.c ****                      }
 10435              		.loc 1 3071 35 is_stmt 0 view .LVU3065
 10436 025a 8810     		movb	%dl, (%rax)
 10437              	.LVL1098:
3071:fltk-1.3.4-1/png/pngread.c ****                      }
 10438              		.loc 1 3071 35 view .LVU3066
 10439 025c EBB4     		jmp	.L979
 10440              	.LVL1099:
 10441 025e 6690     		.p2align 4,,10
 10442              		.p2align 3
 10443              	.L963:
3071:fltk-1.3.4-1/png/pngread.c ****                      }
 10444              		.loc 1 3071 35 view .LVU3067
 10445              	.LBE375:
 10446              	.LBE378:
2975:fltk-1.3.4-1/png/pngread.c ****                   {
 10447              		.loc 1 2975 26 is_stmt 1 view .LVU3068
2975:fltk-1.3.4-1/png/pngread.c ****                   {
 10448              		.loc 1 2975 19 is_stmt 0 view .LVU3069
 10449 0260 4939C5   		cmpq	%rax, %r13
 10450 0263 0F863FFF 		jbe	.L965
 10450      FFFF
 10451 0269 8B742430 		movl	48(%rsp), %esi
 10452 026d EB1C     		jmp	.L972
 10453              	.LVL1100:
 10454 026f 90       		.p2align 4,,10
 10455              		.p2align 3
 10456              	.L1018:
 10457              	.LBB379:
2988:fltk-1.3.4-1/png/pngread.c ****                      }
 10458              		.loc 1 2988 25 is_stmt 1 view .LVU3070
2988:fltk-1.3.4-1/png/pngread.c ****                      }
 10459              		.loc 1 2988 38 is_stmt 0 view .LVU3071
 10460 0270 69D2E700 		imull	$231, %edx, %edx
 10460      0000
 10461              	.LVL1101:
2988:fltk-1.3.4-1/png/pngread.c ****                      }
 10462              		.loc 1 2988 45 view .LVU3072
 10463 0276 83EA80   		subl	$-128, %edx
 10464 0279 0FB6FE   		movzbl	%dh, %edi
 10465              	.LVL1102:
 10466              	.L971:
2999:fltk-1.3.4-1/png/pngread.c ****                   }
 10467              		.loc 1 2999 22 is_stmt 1 view .LVU3073
2999:fltk-1.3.4-1/png/pngread.c ****                   }
 10468              		.loc 1 2999 30 is_stmt 0 view .LVU3074
 10469 027c 408838   		movb	%dil, (%rax)
 10470              	.LVL1103:
2999:fltk-1.3.4-1/png/pngread.c ****                   }
 10471              		.loc 1 2999 30 view .LVU3075
 10472              	.LBE379:
2975:fltk-1.3.4-1/png/pngread.c ****                   {
 10473              		.loc 1 2975 44 is_stmt 1 view .LVU3076
2975:fltk-1.3.4-1/png/pngread.c ****                   {
 10474              		.loc 1 2975 51 is_stmt 0 view .LVU3077
 10475 027f 4801F0   		addq	%rsi, %rax
 10476              	.LVL1104:
2975:fltk-1.3.4-1/png/pngread.c ****                   {
 10477              		.loc 1 2975 26 is_stmt 1 view .LVU3078
2975:fltk-1.3.4-1/png/pngread.c ****                   {
 10478              		.loc 1 2975 19 is_stmt 0 view .LVU3079
 10479 0282 4939C5   		cmpq	%rax, %r13
 10480 0285 0F861DFF 		jbe	.L965
 10480      FFFF
 10481              	.L972:
 10482              	.LBB380:
2978:fltk-1.3.4-1/png/pngread.c ****                      unsigned int alpha = *inrow++;
 10483              		.loc 1 2978 22 is_stmt 1 view .LVU3080
 10484              	.LVL1105:
2978:fltk-1.3.4-1/png/pngread.c ****                      unsigned int alpha = *inrow++;
 10485              		.loc 1 2978 35 is_stmt 0 view .LVU3081
 10486 028b 410FB617 		movzbl	(%r15), %edx
 10487              	.LVL1106:
2979:fltk-1.3.4-1/png/pngread.c ****                      unsigned int entry;
 10488              		.loc 1 2979 22 is_stmt 1 view .LVU3082
2979:fltk-1.3.4-1/png/pngread.c ****                      unsigned int entry;
 10489              		.loc 1 2979 35 is_stmt 0 view .LVU3083
 10490 028f 410FB64F 		movzbl	1(%r15), %ecx
 10490      01
 10491 0294 4983C702 		addq	$2, %r15
 10492              	.LVL1107:
2980:fltk-1.3.4-1/png/pngread.c **** 
 10493              		.loc 1 2980 22 is_stmt 1 view .LVU3084
2986:fltk-1.3.4-1/png/pngread.c ****                      {
 10494              		.loc 1 2986 22 view .LVU3085
2986:fltk-1.3.4-1/png/pngread.c ****                      {
 10495              		.loc 1 2986 25 is_stmt 0 view .LVU3086
 10496 0298 81F9E500 		cmpl	$229, %ecx
 10496      0000
 10497 029e 77D0     		ja	.L1018
2990:fltk-1.3.4-1/png/pngread.c ****                      {
 10498              		.loc 1 2990 27 is_stmt 1 view .LVU3087
 10499 02a0 BFE7FFFF 		movl	$-25, %edi
 10499      FF
2990:fltk-1.3.4-1/png/pngread.c ****                      {
 10500              		.loc 1 2990 30 is_stmt 0 view .LVU3088
 10501 02a5 83F919   		cmpl	$25, %ecx
 10502 02a8 76D2     		jbe	.L971
2996:fltk-1.3.4-1/png/pngread.c ****                      }
 10503              		.loc 1 2996 25 is_stmt 1 view .LVU3089
 10504              	.LVL1108:
2996:fltk-1.3.4-1/png/pngread.c ****                      }
 10505              		.loc 1 2996 43 is_stmt 0 view .LVU3090
 10506 02aa 8D8C8982 		leal	130(%rcx,%rcx,4), %ecx
 10506      000000
 10507              	.LVL1109:
2996:fltk-1.3.4-1/png/pngread.c ****                      }
 10508              		.loc 1 2996 62 view .LVU3091
 10509 02b1 8D949282 		leal	130(%rdx,%rdx,4), %edx
 10509      000000
 10510              	.LVL1110:
2996:fltk-1.3.4-1/png/pngread.c ****                      }
 10511              		.loc 1 2996 43 view .LVU3092
 10512 02b8 C1E908   		shrl	$8, %ecx
2996:fltk-1.3.4-1/png/pngread.c ****                      }
 10513              		.loc 1 2996 62 view .LVU3093
 10514 02bb C1EA08   		shrl	$8, %edx
2996:fltk-1.3.4-1/png/pngread.c ****                      }
 10515              		.loc 1 2996 41 view .LVU3094
 10516 02be 8D0C49   		leal	(%rcx,%rcx,2), %ecx
 10517 02c1 8D7C4AE2 		leal	-30(%rdx,%rcx,2), %edi
 10518 02c5 EBB5     		jmp	.L971
 10519              	.LVL1111:
 10520 02c7 660F1F84 		.p2align 4,,10
 10520      00000000 
 10520      00
 10521              		.p2align 3
 10522              	.L961:
2996:fltk-1.3.4-1/png/pngread.c ****                      }
 10523              		.loc 1 2996 41 view .LVU3095
 10524              	.LBE380:
3021:fltk-1.3.4-1/png/pngread.c ****                   {
 10525              		.loc 1 3021 26 is_stmt 1 view .LVU3096
 10526 02d0 8B742430 		movl	48(%rsp), %esi
3021:fltk-1.3.4-1/png/pngread.c ****                   {
 10527              		.loc 1 3021 19 is_stmt 0 view .LVU3097
 10528 02d4 4939C5   		cmpq	%rax, %r13
 10529 02d7 0F86CBFE 		jbe	.L965
 10529      FFFF
 10530 02dd 0F1F00   		.p2align 4,,10
 10531              		.p2align 3
 10532              	.L977:
3023:fltk-1.3.4-1/png/pngread.c ****                      inrow += 3;
 10533              		.loc 1 3023 22 is_stmt 1 discriminator 2 view .LVU3098
3023:fltk-1.3.4-1/png/pngread.c ****                      inrow += 3;
 10534              		.loc 1 3023 32 is_stmt 0 discriminator 2 view .LVU3099
 10535 02e0 410FB617 		movzbl	(%r15), %edx
3024:fltk-1.3.4-1/png/pngread.c ****                   }
 10536              		.loc 1 3024 28 discriminator 2 view .LVU3100
 10537 02e4 4983C703 		addq	$3, %r15
 10538              	.LVL1112:
3023:fltk-1.3.4-1/png/pngread.c ****                      inrow += 3;
 10539              		.loc 1 3023 32 discriminator 2 view .LVU3101
 10540 02e8 8D949282 		leal	130(%rdx,%rdx,4), %edx
 10540      000000
 10541 02ef C1FA08   		sarl	$8, %edx
 10542 02f2 8D0C52   		leal	(%rdx,%rdx,2), %ecx
 10543 02f5 410FB657 		movzbl	-2(%r15), %edx
 10543      FE
 10544 02fa 8D949282 		leal	130(%rdx,%rdx,4), %edx
 10544      000000
 10545 0301 C1FA08   		sarl	$8, %edx
 10546 0304 8D144A   		leal	(%rdx,%rcx,2), %edx
 10547 0307 8D0C52   		leal	(%rdx,%rdx,2), %ecx
 10548 030a 410FB657 		movzbl	-1(%r15), %edx
 10548      FF
 10549 030f 8D949282 		leal	130(%rdx,%rdx,4), %edx
 10549      000000
 10550 0316 C1FA08   		sarl	$8, %edx
 10551 0319 8D144A   		leal	(%rdx,%rcx,2), %edx
 10552 031c 8810     		movb	%dl, (%rax)
3024:fltk-1.3.4-1/png/pngread.c ****                   }
 10553              		.loc 1 3024 22 is_stmt 1 discriminator 2 view .LVU3102
 10554              	.LVL1113:
3021:fltk-1.3.4-1/png/pngread.c ****                   {
 10555              		.loc 1 3021 44 discriminator 2 view .LVU3103
3021:fltk-1.3.4-1/png/pngread.c ****                   {
 10556              		.loc 1 3021 51 is_stmt 0 discriminator 2 view .LVU3104
 10557 031e 4801F0   		addq	%rsi, %rax
 10558              	.LVL1114:
3021:fltk-1.3.4-1/png/pngread.c ****                   {
 10559              		.loc 1 3021 26 is_stmt 1 discriminator 2 view .LVU3105
3021:fltk-1.3.4-1/png/pngread.c ****                   {
 10560              		.loc 1 3021 19 is_stmt 0 discriminator 2 view .LVU3106
 10561 0321 4939C5   		cmpq	%rax, %r13
 10562 0324 77BA     		ja	.L977
 10563              	.LBE382:
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10564              		.loc 1 2958 27 is_stmt 1 view .LVU3107
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10565              		.loc 1 2958 29 is_stmt 0 view .LVU3108
 10566 0326 031C24   		addl	(%rsp), %ebx
 10567              	.LVL1115:
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10568              		.loc 1 2958 17 is_stmt 1 view .LVU3109
2958:fltk-1.3.4-1/png/pngread.c ****          {
 10569              		.loc 1 2958 10 is_stmt 0 view .LVU3110
 10570 0329 395C2404 		cmpl	%ebx, 4(%rsp)
 10571 032d 0F87DDFD 		ja	.L984
 10571      FFFF
 10572 0333 E980FDFF 		jmp	.L985
 10572      FF
 10573              	.LVL1116:
 10574 0338 0F1F8400 		.p2align 4,,10
 10574      00000000 
 10575              		.p2align 3
 10576              	.L981:
 10577              	.LBB383:
 10578              	.LBB381:
 10579              	.LBB376:
3065:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 3; /* green */
 10580              		.loc 1 3065 25 is_stmt 1 view .LVU3111
3068:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 1;
 10581              		.loc 1 3068 53 is_stmt 0 view .LVU3112
 10582 0340 BAE60000 		movl	$230, %edx
 10582      00
3065:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x80) back_i += 3; /* green */
 10583              		.loc 1 3065 28 view .LVU3113
 10584 0345 84C9     		testb	%cl, %cl
 10585 0347 0F840DFF 		je	.L982
 10585      FFFF
3068:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 1;
 10586              		.loc 1 3068 53 view .LVU3114
 10587 034d BAF20000 		movl	$242, %edx
 10587      00
 10588 0352 E900FFFF 		jmp	.L988
 10588      FF
 10589              	.LVL1117:
 10590 0357 660F1F84 		.p2align 4,,10
 10590      00000000 
 10590      00
 10591              		.p2align 3
 10592              	.L958:
3068:fltk-1.3.4-1/png/pngread.c ****                         if (inrow[0] & 0x40) back_i += 1;
 10593              		.loc 1 3068 53 view .LVU3115
 10594              	.LBE376:
 10595              	.LBE381:
 10596              	.LBE383:
2945:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass);
 10597              		.loc 1 2945 13 is_stmt 1 view .LVU3116
2946:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 10598              		.loc 1 2946 21 is_stmt 0 view .LVU3117
 10599 0360 B9080000 		movl	$8, %ecx
 10599      00
 10600 0365 2B4C2434 		subl	52(%rsp), %ecx
 10601 0369 B8010000 		movl	$1, %eax
 10601      00
2947:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 10602              		.loc 1 2947 17 view .LVU3118
 10603 036e 4183F101 		xorl	$1, %r9d
2946:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 10604              		.loc 1 2946 21 view .LVU3119
 10605 0372 D1F9     		sarl	%ecx
2945:fltk-1.3.4-1/png/pngread.c ****             stepx = PNG_PASS_COL_OFFSET(pass);
 10606              		.loc 1 2945 20 view .LVU3120
 10607 0374 83E307   		andl	$7, %ebx
 10608              	.LVL1118:
2946:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 10609              		.loc 1 2946 13 is_stmt 1 view .LVU3121
2946:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 10610              		.loc 1 2946 21 is_stmt 0 view .LVU3122
 10611 0377 D3E0     		sall	%cl, %eax
2947:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 10612              		.loc 1 2947 17 view .LVU3123
 10613 0379 B9030000 		movl	$3, %ecx
 10613      00
2946:fltk-1.3.4-1/png/pngread.c ****             y = PNG_PASS_START_ROW(pass);
 10614              		.loc 1 2946 21 view .LVU3124
 10615 037e 89442430 		movl	%eax, 48(%rsp)
 10616              	.LVL1119:
2947:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 10617              		.loc 1 2947 13 is_stmt 1 view .LVU3125
2947:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 10618              		.loc 1 2947 17 is_stmt 0 view .LVU3126
 10619 0382 89D0     		movl	%edx, %eax
 10620              	.LVL1120:
2947:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 10621              		.loc 1 2947 17 view .LVU3127
 10622 0384 D1F8     		sarl	%eax
 10623 0386 29C1     		subl	%eax, %ecx
2948:fltk-1.3.4-1/png/pngread.c ****          }
 10624              		.loc 1 2948 21 view .LVU3128
 10625 0388 B8080000 		movl	$8, %eax
 10625      00
2947:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 10626              		.loc 1 2947 17 view .LVU3129
 10627 038d 41D3E1   		sall	%cl, %r9d
2948:fltk-1.3.4-1/png/pngread.c ****          }
 10628              		.loc 1 2948 21 view .LVU3130
 10629 0390 890424   		movl	%eax, (%rsp)
2947:fltk-1.3.4-1/png/pngread.c ****             stepy = PNG_PASS_ROW_OFFSET(pass);
 10630              		.loc 1 2947 15 view .LVU3131
 10631 0393 4183E107 		andl	$7, %r9d
 10632 0397 4589CD   		movl	%r9d, %r13d
 10633              	.LVL1121:
2948:fltk-1.3.4-1/png/pngread.c ****          }
 10634              		.loc 1 2948 13 is_stmt 1 view .LVU3132
2948:fltk-1.3.4-1/png/pngread.c ****          }
 10635              		.loc 1 2948 21 is_stmt 0 view .LVU3133
 10636 039a 83FA02   		cmpl	$2, %edx
 10637 039d 0F864DFD 		jbe	.L956
 10637      FFFF
2948:fltk-1.3.4-1/png/pngread.c ****          }
 10638              		.loc 1 2948 21 discriminator 1 view .LVU3134
 10639 03a3 8D4AFF   		leal	-1(%rdx), %ecx
 10640 03a6 D1F9     		sarl	%ecx
 10641 03a8 D3F8     		sarl	%cl, %eax
 10642 03aa 890424   		movl	%eax, (%rsp)
 10643 03ad E93EFDFF 		jmp	.L956
 10643      FF
 10644              	.LVL1122:
 10645              		.p2align 4,,10
 10646 03b2 660F1F44 		.p2align 3
 10646      0000
 10647              	.L957:
2942:fltk-1.3.4-1/png/pngread.c ****                continue;
 10648              		.loc 1 2942 17 view .LVU3135
 10649 03b8 89D8     		movl	%ebx, %eax
 10650 03ba B9030000 		movl	$3, %ecx
 10650      00
 10651 03bf F7D0     		notl	%eax
 10652 03c1 83E007   		andl	$7, %eax
 10653 03c4 03442438 		addl	56(%rsp), %eax
 10654 03c8 E9E1FCFF 		jmp	.L989
 10654      FF
 10655 03cd 0F1F00   		.p2align 4,,10
 10656              		.p2align 3
 10657              	.L1014:
2942:fltk-1.3.4-1/png/pngread.c ****                continue;
 10658              		.loc 1 2942 17 view .LVU3136
 10659              	.LBE384:
 10660              	.LBE368:
3086:fltk-1.3.4-1/png/pngread.c **** 
 10661              		.loc 1 3086 1 view .LVU3137
 10662 03d0 4883C448 		addq	$72, %rsp
 10663              		.cfi_remember_state
 10664              		.cfi_def_cfa_offset 56
 10665 03d4 B8010000 		movl	$1, %eax
 10665      00
 10666 03d9 5B       		popq	%rbx
 10667              		.cfi_def_cfa_offset 48
 10668 03da 5D       		popq	%rbp
 10669              		.cfi_def_cfa_offset 40
 10670              	.LVL1123:
3086:fltk-1.3.4-1/png/pngread.c **** 
 10671              		.loc 1 3086 1 view .LVU3138
 10672 03db 415C     		popq	%r12
 10673              		.cfi_def_cfa_offset 32
 10674 03dd 415D     		popq	%r13
 10675              		.cfi_def_cfa_offset 24
 10676 03df 415E     		popq	%r14
 10677              		.cfi_def_cfa_offset 16
 10678              	.LVL1124:
3086:fltk-1.3.4-1/png/pngread.c **** 
 10679              		.loc 1 3086 1 view .LVU3139
 10680 03e1 415F     		popq	%r15
 10681              		.cfi_def_cfa_offset 8
 10682 03e3 C3       		ret
 10683              	.LVL1125:
 10684              	.L990:
 10685              		.cfi_restore_state
2915:fltk-1.3.4-1/png/pngread.c ****          break;
 10686              		.loc 1 2915 17 view .LVU3140
 10687 03e4 C744243C 		movl	$1, 60(%rsp)
 10687      01000000 
 10688 03ec E94EFCFF 		jmp	.L955
 10688      FF
 10689              	.L1013:
2923:fltk-1.3.4-1/png/pngread.c ****    }
 10690              		.loc 1 2923 10 is_stmt 1 view .LVU3141
 10691 03f1 488D3500 		leaq	.LC39(%rip), %rsi
 10691      000000
 10692 03f8 4889EF   		movq	%rbp, %rdi
 10693              	.LVL1126:
2923:fltk-1.3.4-1/png/pngread.c ****    }
 10694              		.loc 1 2923 10 is_stmt 0 view .LVU3142
 10695 03fb E8000000 		call	png_error@PLT
 10695      00
 10696              	.LVL1127:
2923:fltk-1.3.4-1/png/pngread.c ****    }
 10697              		.loc 1 2923 10 view .LVU3143
 10698              		.cfi_endproc
 10699              	.LFE73:
 10701              		.section	.text.png_read_rows,"ax",@progbits
 10702              		.p2align 4
 10703              		.globl	png_read_rows
 10705              	png_read_rows:
 10706              	.LVL1128:
 10707              	.LFB48:
 638:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i;
 10708              		.loc 1 638 1 is_stmt 1 view -0
 10709              		.cfi_startproc
 638:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i;
 10710              		.loc 1 638 1 is_stmt 0 view .LVU3145
 10711 0000 F30F1EFA 		endbr64
 639:fltk-1.3.4-1/png/pngread.c ****    png_bytepp rp;
 10712              		.loc 1 639 4 is_stmt 1 view .LVU3146
 640:fltk-1.3.4-1/png/pngread.c ****    png_bytepp dp;
 10713              		.loc 1 640 4 view .LVU3147
 641:fltk-1.3.4-1/png/pngread.c **** 
 10714              		.loc 1 641 4 view .LVU3148
 643:fltk-1.3.4-1/png/pngread.c **** 
 10715              		.loc 1 643 4 view .LVU3149
 645:fltk-1.3.4-1/png/pngread.c ****       return;
 10716              		.loc 1 645 4 view .LVU3150
 645:fltk-1.3.4-1/png/pngread.c ****       return;
 10717              		.loc 1 645 7 is_stmt 0 view .LVU3151
 10718 0004 4885FF   		testq	%rdi, %rdi
 10719 0007 0F84DB00 		je	.L1051
 10719      0000
 638:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i;
 10720              		.loc 1 638 1 view .LVU3152
 10721 000d 4155     		pushq	%r13
 10722              		.cfi_def_cfa_offset 16
 10723              		.cfi_offset 13, -16
 10724 000f 4154     		pushq	%r12
 10725              		.cfi_def_cfa_offset 24
 10726              		.cfi_offset 12, -24
 10727 0011 4989FC   		movq	%rdi, %r12
 10728 0014 55       		pushq	%rbp
 10729              		.cfi_def_cfa_offset 32
 10730              		.cfi_offset 6, -32
 10731 0015 4889D5   		movq	%rdx, %rbp
 648:fltk-1.3.4-1/png/pngread.c ****    dp = display_row;
 10732              		.loc 1 648 4 is_stmt 1 view .LVU3153
 10733              	.LVL1129:
 649:fltk-1.3.4-1/png/pngread.c ****    if (rp != NULL && dp != NULL)
 10734              		.loc 1 649 4 view .LVU3154
 650:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 10735              		.loc 1 650 4 view .LVU3155
 638:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i;
 10736              		.loc 1 638 1 is_stmt 0 view .LVU3156
 10737 0018 53       		pushq	%rbx
 10738              		.cfi_def_cfa_offset 40
 10739              		.cfi_offset 3, -40
 10740 0019 4889F3   		movq	%rsi, %rbx
 10741 001c 4883EC08 		subq	$8, %rsp
 10742              		.cfi_def_cfa_offset 48
 650:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 10743              		.loc 1 650 7 view .LVU3157
 10744 0020 4885F6   		testq	%rsi, %rsi
 10745 0023 0F848700 		je	.L1023
 10745      0000
 10746 0029 4885D2   		testq	%rdx, %rdx
 10747 002c 7442     		je	.L1021
 10748              	.LVL1130:
 651:fltk-1.3.4-1/png/pngread.c ****       {
 10749              		.loc 1 651 19 is_stmt 1 view .LVU3158
 651:fltk-1.3.4-1/png/pngread.c ****       {
 10750              		.loc 1 651 7 is_stmt 0 view .LVU3159
 10751 002e 85C9     		testl	%ecx, %ecx
 10752 0030 742A     		je	.L1019
 10753 0032 8D41FF   		leal	-1(%rcx), %eax
 10754 0035 4C8D6CC6 		leaq	8(%rsi,%rax,8), %r13
 10754      08
 10755              	.LVL1131:
 10756 003a 660F1F44 		.p2align 4,,10
 10756      0000
 10757              		.p2align 3
 10758              	.L1022:
 10759              	.LBB385:
 653:fltk-1.3.4-1/png/pngread.c ****          png_bytep dptr = *dp++;
 10760              		.loc 1 653 10 is_stmt 1 discriminator 3 view .LVU3160
 656:fltk-1.3.4-1/png/pngread.c ****       }
 10761              		.loc 1 656 10 is_stmt 0 discriminator 3 view .LVU3161
 10762 0040 488B5500 		movq	0(%rbp), %rdx
 10763 0044 488B33   		movq	(%rbx), %rsi
 653:fltk-1.3.4-1/png/pngread.c ****          png_bytep dptr = *dp++;
 10764              		.loc 1 653 30 discriminator 3 view .LVU3162
 10765 0047 4883C308 		addq	$8, %rbx
 10766              	.LVL1132:
 654:fltk-1.3.4-1/png/pngread.c **** 
 10767              		.loc 1 654 10 is_stmt 1 discriminator 3 view .LVU3163
 656:fltk-1.3.4-1/png/pngread.c ****       }
 10768              		.loc 1 656 10 is_stmt 0 discriminator 3 view .LVU3164
 10769 004b 4C89E7   		movq	%r12, %rdi
 654:fltk-1.3.4-1/png/pngread.c **** 
 10770              		.loc 1 654 30 discriminator 3 view .LVU3165
 10771 004e 4883C508 		addq	$8, %rbp
 10772              	.LVL1133:
 656:fltk-1.3.4-1/png/pngread.c ****       }
 10773              		.loc 1 656 10 is_stmt 1 discriminator 3 view .LVU3166
 10774 0052 E8000000 		call	png_read_row
 10774      00
 10775              	.LVL1134:
 656:fltk-1.3.4-1/png/pngread.c ****       }
 10776              		.loc 1 656 10 is_stmt 0 discriminator 3 view .LVU3167
 10777              	.LBE385:
 651:fltk-1.3.4-1/png/pngread.c ****       {
 10778              		.loc 1 651 33 is_stmt 1 discriminator 3 view .LVU3168
 651:fltk-1.3.4-1/png/pngread.c ****       {
 10779              		.loc 1 651 19 discriminator 3 view .LVU3169
 651:fltk-1.3.4-1/png/pngread.c ****       {
 10780              		.loc 1 651 7 is_stmt 0 discriminator 3 view .LVU3170
 10781 0057 4939DD   		cmpq	%rbx, %r13
 10782 005a 75E4     		jne	.L1022
 10783              	.LVL1135:
 10784              	.L1019:
 674:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 10785              		.loc 1 674 1 view .LVU3171
 10786 005c 4883C408 		addq	$8, %rsp
 10787              		.cfi_remember_state
 10788              		.cfi_def_cfa_offset 40
 10789 0060 5B       		popq	%rbx
 10790              		.cfi_def_cfa_offset 32
 10791 0061 5D       		popq	%rbp
 10792              		.cfi_def_cfa_offset 24
 10793              	.LVL1136:
 674:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 10794              		.loc 1 674 1 view .LVU3172
 10795 0062 415C     		popq	%r12
 10796              		.cfi_def_cfa_offset 16
 10797              	.LVL1137:
 674:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 10798              		.loc 1 674 1 view .LVU3173
 10799 0064 415D     		popq	%r13
 10800              		.cfi_def_cfa_offset 8
 10801 0066 C3       		ret
 10802              	.LVL1138:
 10803 0067 660F1F84 		.p2align 4,,10
 10803      00000000 
 10803      00
 10804              		.p2align 3
 10805              	.L1021:
 10806              		.cfi_restore_state
 659:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 10807              		.loc 1 659 9 is_stmt 1 view .LVU3174
 659:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 10808              		.loc 1 659 12 is_stmt 0 view .LVU3175
 10809 0070 4885F6   		testq	%rsi, %rsi
 10810 0073 743B     		je	.L1023
 10811              	.LVL1139:
 660:fltk-1.3.4-1/png/pngread.c ****       {
 10812              		.loc 1 660 19 is_stmt 1 view .LVU3176
 660:fltk-1.3.4-1/png/pngread.c ****       {
 10813              		.loc 1 660 7 is_stmt 0 view .LVU3177
 10814 0075 85C9     		testl	%ecx, %ecx
 10815 0077 74E3     		je	.L1019
 10816 0079 8D41FF   		leal	-1(%rcx), %eax
 10817 007c 488D6CC6 		leaq	8(%rsi,%rax,8), %rbp
 10817      08
 10818              	.LVL1140:
 10819              		.p2align 4,,10
 10820 0081 0F1F8000 		.p2align 3
 10820      000000
 10821              	.L1024:
 10822              	.LBB386:
 662:fltk-1.3.4-1/png/pngread.c ****          png_read_row(png_ptr, rptr, NULL);
 10823              		.loc 1 662 10 is_stmt 1 discriminator 3 view .LVU3178
 663:fltk-1.3.4-1/png/pngread.c ****          rp++;
 10824              		.loc 1 663 10 discriminator 3 view .LVU3179
 10825 0088 488B33   		movq	(%rbx), %rsi
 10826 008b 31D2     		xorl	%edx, %edx
 10827 008d 4C89E7   		movq	%r12, %rdi
 664:fltk-1.3.4-1/png/pngread.c ****       }
 10828              		.loc 1 664 12 is_stmt 0 discriminator 3 view .LVU3180
 10829 0090 4883C308 		addq	$8, %rbx
 10830              	.LVL1141:
 663:fltk-1.3.4-1/png/pngread.c ****          rp++;
 10831              		.loc 1 663 10 discriminator 3 view .LVU3181
 10832 0094 E8000000 		call	png_read_row
 10832      00
 10833              	.LVL1142:
 664:fltk-1.3.4-1/png/pngread.c ****       }
 10834              		.loc 1 664 10 is_stmt 1 discriminator 3 view .LVU3182
 664:fltk-1.3.4-1/png/pngread.c ****       }
 10835              		.loc 1 664 10 is_stmt 0 discriminator 3 view .LVU3183
 10836              	.LBE386:
 660:fltk-1.3.4-1/png/pngread.c ****       {
 10837              		.loc 1 660 33 is_stmt 1 discriminator 3 view .LVU3184
 660:fltk-1.3.4-1/png/pngread.c ****       {
 10838              		.loc 1 660 19 discriminator 3 view .LVU3185
 660:fltk-1.3.4-1/png/pngread.c ****       {
 10839              		.loc 1 660 7 is_stmt 0 discriminator 3 view .LVU3186
 10840 0099 4839DD   		cmpq	%rbx, %rbp
 10841 009c 75EA     		jne	.L1024
 674:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 10842              		.loc 1 674 1 view .LVU3187
 10843 009e 4883C408 		addq	$8, %rsp
 10844              		.cfi_remember_state
 10845              		.cfi_def_cfa_offset 40
 10846 00a2 5B       		popq	%rbx
 10847              		.cfi_def_cfa_offset 32
 10848              	.LVL1143:
 674:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 10849              		.loc 1 674 1 view .LVU3188
 10850 00a3 5D       		popq	%rbp
 10851              		.cfi_def_cfa_offset 24
 10852 00a4 415C     		popq	%r12
 10853              		.cfi_def_cfa_offset 16
 10854              	.LVL1144:
 674:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 10855              		.loc 1 674 1 view .LVU3189
 10856 00a6 415D     		popq	%r13
 10857              		.cfi_def_cfa_offset 8
 10858 00a8 C3       		ret
 10859              	.LVL1145:
 10860 00a9 0F1F8000 		.p2align 4,,10
 10860      000000
 10861              		.p2align 3
 10862              	.L1023:
 10863              		.cfi_restore_state
 667:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 10864              		.loc 1 667 9 is_stmt 1 view .LVU3190
 667:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < num_rows; i++)
 10865              		.loc 1 667 12 is_stmt 0 view .LVU3191
 10866 00b0 4885ED   		testq	%rbp, %rbp
 10867 00b3 74A7     		je	.L1019
 10868              	.LVL1146:
 668:fltk-1.3.4-1/png/pngread.c ****       {
 10869              		.loc 1 668 19 is_stmt 1 view .LVU3192
 668:fltk-1.3.4-1/png/pngread.c ****       {
 10870              		.loc 1 668 7 is_stmt 0 view .LVU3193
 10871 00b5 85C9     		testl	%ecx, %ecx
 10872 00b7 74A3     		je	.L1019
 10873 00b9 8D41FF   		leal	-1(%rcx), %eax
 10874 00bc 488D5CC5 		leaq	8(%rbp,%rax,8), %rbx
 10874      08
 10875              	.LVL1147:
 10876              		.p2align 4,,10
 10877 00c1 0F1F8000 		.p2align 3
 10877      000000
 10878              	.L1025:
 10879              	.LBB387:
 670:fltk-1.3.4-1/png/pngread.c ****          png_read_row(png_ptr, NULL, dptr);
 10880              		.loc 1 670 10 is_stmt 1 discriminator 3 view .LVU3194
 671:fltk-1.3.4-1/png/pngread.c ****          dp++;
 10881              		.loc 1 671 10 discriminator 3 view .LVU3195
 10882 00c8 488B5500 		movq	0(%rbp), %rdx
 10883 00cc 31F6     		xorl	%esi, %esi
 10884 00ce 4C89E7   		movq	%r12, %rdi
 672:fltk-1.3.4-1/png/pngread.c ****       }
 10885              		.loc 1 672 12 is_stmt 0 discriminator 3 view .LVU3196
 10886 00d1 4883C508 		addq	$8, %rbp
 10887              	.LVL1148:
 671:fltk-1.3.4-1/png/pngread.c ****          dp++;
 10888              		.loc 1 671 10 discriminator 3 view .LVU3197
 10889 00d5 E8000000 		call	png_read_row
 10889      00
 10890              	.LVL1149:
 672:fltk-1.3.4-1/png/pngread.c ****       }
 10891              		.loc 1 672 10 is_stmt 1 discriminator 3 view .LVU3198
 672:fltk-1.3.4-1/png/pngread.c ****       }
 10892              		.loc 1 672 10 is_stmt 0 discriminator 3 view .LVU3199
 10893              	.LBE387:
 668:fltk-1.3.4-1/png/pngread.c ****       {
 10894              		.loc 1 668 33 is_stmt 1 discriminator 3 view .LVU3200
 668:fltk-1.3.4-1/png/pngread.c ****       {
 10895              		.loc 1 668 19 discriminator 3 view .LVU3201
 668:fltk-1.3.4-1/png/pngread.c ****       {
 10896              		.loc 1 668 7 is_stmt 0 discriminator 3 view .LVU3202
 10897 00da 4839DD   		cmpq	%rbx, %rbp
 10898 00dd 75E9     		jne	.L1025
 10899 00df E978FFFF 		jmp	.L1019
 10899      FF
 10900              	.LVL1150:
 10901              		.p2align 4,,10
 10902 00e4 0F1F4000 		.p2align 3
 10903              	.L1051:
 10904              		.cfi_def_cfa_offset 8
 10905              		.cfi_restore 3
 10906              		.cfi_restore 6
 10907              		.cfi_restore 12
 10908              		.cfi_restore 13
 668:fltk-1.3.4-1/png/pngread.c ****       {
 10909              		.loc 1 668 7 discriminator 3 view .LVU3203
 10910 00e8 C3       		ret
 10911              		.cfi_endproc
 10912              	.LFE48:
 10914              		.section	.rodata.png_read_image.str1.8,"aMS",@progbits,1
 10915              		.align 8
 10916              	.LC42:
 10917 0000 496E7465 		.string	"Interlace handling should be turned on when using png_read_image"
 10917      726C6163 
 10917      65206861 
 10917      6E646C69 
 10917      6E672073 
 10918              		.section	.text.png_read_image,"ax",@progbits
 10919              		.p2align 4
 10920              		.globl	png_read_image
 10922              	png_read_image:
 10923              	.LVL1151:
 10924              	.LFB49:
 692:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i, image_height;
 10925              		.loc 1 692 1 is_stmt 1 view -0
 10926              		.cfi_startproc
 692:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i, image_height;
 10927              		.loc 1 692 1 is_stmt 0 view .LVU3205
 10928 0000 F30F1EFA 		endbr64
 693:fltk-1.3.4-1/png/pngread.c ****    int pass, j;
 10929              		.loc 1 693 4 is_stmt 1 view .LVU3206
 694:fltk-1.3.4-1/png/pngread.c ****    png_bytepp rp;
 10930              		.loc 1 694 4 view .LVU3207
 695:fltk-1.3.4-1/png/pngread.c **** 
 10931              		.loc 1 695 4 view .LVU3208
 697:fltk-1.3.4-1/png/pngread.c **** 
 10932              		.loc 1 697 4 view .LVU3209
 699:fltk-1.3.4-1/png/pngread.c ****       return;
 10933              		.loc 1 699 4 view .LVU3210
 699:fltk-1.3.4-1/png/pngread.c ****       return;
 10934              		.loc 1 699 7 is_stmt 0 view .LVU3211
 10935 0004 4885FF   		testq	%rdi, %rdi
 10936 0007 0F84CF00 		je	.L1069
 10936      0000
 692:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i, image_height;
 10937              		.loc 1 692 1 view .LVU3212
 10938 000d 4157     		pushq	%r15
 10939              		.cfi_def_cfa_offset 16
 10940              		.cfi_offset 15, -16
 10941 000f 4156     		pushq	%r14
 10942              		.cfi_def_cfa_offset 24
 10943              		.cfi_offset 14, -24
 10944 0011 4155     		pushq	%r13
 10945              		.cfi_def_cfa_offset 32
 10946              		.cfi_offset 13, -32
 10947 0013 4989F5   		movq	%rsi, %r13
 703:fltk-1.3.4-1/png/pngread.c ****    {
 10948              		.loc 1 703 4 is_stmt 1 view .LVU3213
 692:fltk-1.3.4-1/png/pngread.c ****    png_uint_32 i, image_height;
 10949              		.loc 1 692 1 is_stmt 0 view .LVU3214
 10950 0016 4154     		pushq	%r12
 10951              		.cfi_def_cfa_offset 40
 10952              		.cfi_offset 12, -40
 10953 0018 55       		pushq	%rbp
 10954              		.cfi_def_cfa_offset 48
 10955              		.cfi_offset 6, -48
 10956 0019 53       		pushq	%rbx
 10957              		.cfi_def_cfa_offset 56
 10958              		.cfi_offset 3, -56
 10959 001a 4889FB   		movq	%rdi, %rbx
 10960 001d 4883EC18 		subq	$24, %rsp
 10961              		.cfi_def_cfa_offset 80
 703:fltk-1.3.4-1/png/pngread.c ****    {
 10962              		.loc 1 703 7 view .LVU3215
 10963 0021 F6873001 		testb	$64, 304(%rdi)
 10963      000040
 10964 0028 0F849800 		je	.L1072
 10964      0000
 711:fltk-1.3.4-1/png/pngread.c ****           (png_ptr->transformations & PNG_INTERLACE) == 0)
 10965              		.loc 1 711 7 is_stmt 1 view .LVU3216
 711:fltk-1.3.4-1/png/pngread.c ****           (png_ptr->transformations & PNG_INTERLACE) == 0)
 10966              		.loc 1 711 10 is_stmt 0 view .LVU3217
 10967 002e 80BF7402 		cmpb	$0, 628(%rdi)
 10967      000000
 10968 0035 7569     		jne	.L1073
 10969              	.LVL1152:
 10970              	.L1058:
 727:fltk-1.3.4-1/png/pngread.c ****    }
 10971              		.loc 1 727 7 is_stmt 1 view .LVU3218
 727:fltk-1.3.4-1/png/pngread.c ****    }
 10972              		.loc 1 727 14 is_stmt 0 view .LVU3219
 10973 0037 4889DF   		movq	%rbx, %rdi
 10974 003a E8000000 		call	png_set_interlace_handling@PLT
 10974      00
 10975              	.LVL1153:
 10976 003f 8944240C 		movl	%eax, 12(%rsp)
 10977              	.LVL1154:
 10978              	.L1057:
 737:fltk-1.3.4-1/png/pngread.c **** 
 10979              		.loc 1 737 4 is_stmt 1 view .LVU3220
 739:fltk-1.3.4-1/png/pngread.c ****    {
 10980              		.loc 1 739 4 is_stmt 0 view .LVU3221
 10981 0043 8B44240C 		movl	12(%rsp), %eax
 737:fltk-1.3.4-1/png/pngread.c **** 
 10982              		.loc 1 737 16 view .LVU3222
 10983 0047 448BBBFC 		movl	508(%rbx), %r15d
 10983      010000
 10984              	.LVL1155:
 739:fltk-1.3.4-1/png/pngread.c ****    {
 10985              		.loc 1 739 4 is_stmt 1 view .LVU3223
 739:fltk-1.3.4-1/png/pngread.c ****    {
 10986              		.loc 1 739 16 view .LVU3224
 739:fltk-1.3.4-1/png/pngread.c ****    {
 10987              		.loc 1 739 4 is_stmt 0 view .LVU3225
 10988 004e 85C0     		testl	%eax, %eax
 10989 0050 7E3F     		jle	.L1054
 10990 0052 418D47FF 		leal	-1(%r15), %eax
 739:fltk-1.3.4-1/png/pngread.c ****    {
 10991              		.loc 1 739 11 view .LVU3226
 10992 0056 4531E4   		xorl	%r12d, %r12d
 10993 0059 498D6CC5 		leaq	8(%r13,%rax,8), %rbp
 10993      08
 10994              	.LVL1156:
 10995 005e 6690     		.p2align 4,,10
 10996              		.p2align 3
 10997              	.L1059:
 742:fltk-1.3.4-1/png/pngread.c ****       {
 10998              		.loc 1 742 19 is_stmt 1 view .LVU3227
 741:fltk-1.3.4-1/png/pngread.c ****       for (i = 0; i < image_height; i++)
 10999              		.loc 1 741 10 is_stmt 0 view .LVU3228
 11000 0060 4D89EE   		movq	%r13, %r14
 742:fltk-1.3.4-1/png/pngread.c ****       {
 11001              		.loc 1 742 7 view .LVU3229
 11002 0063 4585FF   		testl	%r15d, %r15d
 11003 0066 741E     		je	.L1061
 11004              	.LVL1157:
 11005 0068 0F1F8400 		.p2align 4,,10
 11005      00000000 
 11006              		.p2align 3
 11007              	.L1060:
 744:fltk-1.3.4-1/png/pngread.c ****          rp++;
 11008              		.loc 1 744 10 is_stmt 1 discriminator 3 view .LVU3230
 11009 0070 498B36   		movq	(%r14), %rsi
 11010 0073 31D2     		xorl	%edx, %edx
 11011 0075 4889DF   		movq	%rbx, %rdi
 745:fltk-1.3.4-1/png/pngread.c ****       }
 11012              		.loc 1 745 12 is_stmt 0 discriminator 3 view .LVU3231
 11013 0078 4983C608 		addq	$8, %r14
 11014              	.LVL1158:
 744:fltk-1.3.4-1/png/pngread.c ****          rp++;
 11015              		.loc 1 744 10 discriminator 3 view .LVU3232
 11016 007c E8000000 		call	png_read_row
 11016      00
 11017              	.LVL1159:
 745:fltk-1.3.4-1/png/pngread.c ****       }
 11018              		.loc 1 745 10 is_stmt 1 discriminator 3 view .LVU3233
 742:fltk-1.3.4-1/png/pngread.c ****       {
 11019              		.loc 1 742 37 discriminator 3 view .LVU3234
 742:fltk-1.3.4-1/png/pngread.c ****       {
 11020              		.loc 1 742 19 discriminator 3 view .LVU3235
 742:fltk-1.3.4-1/png/pngread.c ****       {
 11021              		.loc 1 742 7 is_stmt 0 discriminator 3 view .LVU3236
 11022 0081 4C39F5   		cmpq	%r14, %rbp
 11023 0084 75EA     		jne	.L1060
 11024              	.L1061:
 739:fltk-1.3.4-1/png/pngread.c ****    {
 11025              		.loc 1 739 26 is_stmt 1 view .LVU3237
 739:fltk-1.3.4-1/png/pngread.c ****    {
 11026              		.loc 1 739 27 is_stmt 0 view .LVU3238
 11027 0086 4183C401 		addl	$1, %r12d
 11028              	.LVL1160:
 739:fltk-1.3.4-1/png/pngread.c ****    {
 11029              		.loc 1 739 16 is_stmt 1 view .LVU3239
 739:fltk-1.3.4-1/png/pngread.c ****    {
 11030              		.loc 1 739 4 is_stmt 0 view .LVU3240
 11031 008a 44396424 		cmpl	%r12d, 12(%rsp)
 11031      0C
 11032 008f 75CF     		jne	.L1059
 11033              	.LVL1161:
 11034              	.L1054:
 748:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 11035              		.loc 1 748 1 view .LVU3241
 11036 0091 4883C418 		addq	$24, %rsp
 11037              		.cfi_remember_state
 11038              		.cfi_def_cfa_offset 56
 11039 0095 5B       		popq	%rbx
 11040              		.cfi_def_cfa_offset 48
 11041              	.LVL1162:
 748:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 11042              		.loc 1 748 1 view .LVU3242
 11043 0096 5D       		popq	%rbp
 11044              		.cfi_def_cfa_offset 40
 11045 0097 415C     		popq	%r12
 11046              		.cfi_def_cfa_offset 32
 11047 0099 415D     		popq	%r13
 11048              		.cfi_def_cfa_offset 24
 11049              	.LVL1163:
 748:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 11050              		.loc 1 748 1 view .LVU3243
 11051 009b 415E     		popq	%r14
 11052              		.cfi_def_cfa_offset 16
 11053 009d 415F     		popq	%r15
 11054              		.cfi_def_cfa_offset 8
 11055              	.LVL1164:
 748:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 11056              		.loc 1 748 1 view .LVU3244
 11057 009f C3       		ret
 11058              	.LVL1165:
 11059              	.L1073:
 11060              		.cfi_restore_state
 711:fltk-1.3.4-1/png/pngread.c ****           (png_ptr->transformations & PNG_INTERLACE) == 0)
 11061              		.loc 1 711 36 discriminator 1 view .LVU3245
 11062 00a0 F6873401 		testb	$2, 308(%rdi)
 11062      000002
 11063 00a7 758E     		jne	.L1058
 718:fltk-1.3.4-1/png/pngread.c ****             "using png_read_image");
 11064              		.loc 1 718 10 is_stmt 1 view .LVU3246
 11065 00a9 488D3500 		leaq	.LC42(%rip), %rsi
 11065      000000
 11066              	.LVL1166:
 718:fltk-1.3.4-1/png/pngread.c ****             "using png_read_image");
 11067              		.loc 1 718 10 is_stmt 0 view .LVU3247
 11068 00b0 E8000000 		call	png_warning@PLT
 11068      00
 11069              	.LVL1167:
 721:fltk-1.3.4-1/png/pngread.c ****       }
 11070              		.loc 1 721 10 is_stmt 1 view .LVU3248
 721:fltk-1.3.4-1/png/pngread.c ****       }
 11071              		.loc 1 721 28 is_stmt 0 view .LVU3249
 11072 00b5 8B83FC01 		movl	508(%rbx), %eax
 11072      0000
 11073 00bb 89830002 		movl	%eax, 512(%rbx)
 11073      0000
 11074 00c1 E971FFFF 		jmp	.L1058
 11074      FF
 11075              	.LVL1168:
 11076              	.L1072:
 705:fltk-1.3.4-1/png/pngread.c ****       /* And make sure transforms are initialized. */
 11077              		.loc 1 705 7 is_stmt 1 view .LVU3250
 705:fltk-1.3.4-1/png/pngread.c ****       /* And make sure transforms are initialized. */
 11078              		.loc 1 705 14 is_stmt 0 view .LVU3251
 11079 00c6 E8000000 		call	png_set_interlace_handling@PLT
 11079      00
 11080              	.LVL1169:
 707:fltk-1.3.4-1/png/pngread.c ****    }
 11081              		.loc 1 707 7 view .LVU3252
 11082 00cb 4889DF   		movq	%rbx, %rdi
 705:fltk-1.3.4-1/png/pngread.c ****       /* And make sure transforms are initialized. */
 11083              		.loc 1 705 14 view .LVU3253
 11084 00ce 8944240C 		movl	%eax, 12(%rsp)
 11085              	.LVL1170:
 707:fltk-1.3.4-1/png/pngread.c ****    }
 11086              		.loc 1 707 7 is_stmt 1 view .LVU3254
 11087 00d2 E8000000 		call	png_start_read_image
 11087      00
 11088              	.LVL1171:
 707:fltk-1.3.4-1/png/pngread.c ****    }
 11089              		.loc 1 707 7 is_stmt 0 view .LVU3255
 11090 00d7 E967FFFF 		jmp	.L1057
 11090      FF
 11091              	.LVL1172:
 11092              	.L1069:
 11093              		.cfi_def_cfa_offset 8
 11094              		.cfi_restore 3
 11095              		.cfi_restore 6
 11096              		.cfi_restore 12
 11097              		.cfi_restore 13
 11098              		.cfi_restore 14
 11099              		.cfi_restore 15
 707:fltk-1.3.4-1/png/pngread.c ****    }
 11100              		.loc 1 707 7 view .LVU3256
 11101 00dc C3       		ret
 11102              		.cfi_endproc
 11103              	.LFE49:
 11105              		.section	.text.png_read_end,"ax",@progbits
 11106              		.p2align 4
 11107              		.globl	png_read_end
 11109              	png_read_end:
 11110              	.LVL1173:
 11111              	.LFB50:
 758:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 11112              		.loc 1 758 1 is_stmt 1 view -0
 11113              		.cfi_startproc
 758:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
 11114              		.loc 1 758 1 is_stmt 0 view .LVU3258
 11115 0000 F30F1EFA 		endbr64
 760:fltk-1.3.4-1/png/pngread.c **** #endif
 11116              		.loc 1 760 4 is_stmt 1 view .LVU3259
 763:fltk-1.3.4-1/png/pngread.c **** 
 11117              		.loc 1 763 4 view .LVU3260
 765:fltk-1.3.4-1/png/pngread.c ****       return;
 11118              		.loc 1 765 4 view .LVU3261
 765:fltk-1.3.4-1/png/pngread.c ****       return;
 11119              		.loc 1 765 7 is_stmt 0 view .LVU3262
 11120 0004 4885FF   		testq	%rdi, %rdi
 11121 0007 7407     		je	.L1074
 11122 0009 E9000000 		jmp	png_read_end.part.0
 11122      00
 11123              	.LVL1174:
 11124 000e 6690     		.p2align 4,,10
 11125              		.p2align 3
 11126              	.L1074:
 915:fltk-1.3.4-1/png/pngread.c **** #endif /* SEQUENTIAL_READ */
 11127              		.loc 1 915 1 view .LVU3263
 11128 0010 C3       		ret
 11129              		.cfi_endproc
 11130              	.LFE50:
 11132              		.section	.text.png_destroy_read_struct,"ax",@progbits
 11133              		.p2align 4
 11134              		.globl	png_destroy_read_struct
 11136              	png_destroy_read_struct:
 11137              	.LVL1175:
 11138              	.LFB52:
 987:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = NULL;
 11139              		.loc 1 987 1 is_stmt 1 view -0
 11140              		.cfi_startproc
 987:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = NULL;
 11141              		.loc 1 987 1 is_stmt 0 view .LVU3265
 11142 0000 F30F1EFA 		endbr64
 988:fltk-1.3.4-1/png/pngread.c **** 
 11143              		.loc 1 988 4 is_stmt 1 view .LVU3266
 11144              	.LVL1176:
 990:fltk-1.3.4-1/png/pngread.c **** 
 11145              		.loc 1 990 4 view .LVU3267
 992:fltk-1.3.4-1/png/pngread.c ****       png_ptr = *png_ptr_ptr;
 11146              		.loc 1 992 4 view .LVU3268
 992:fltk-1.3.4-1/png/pngread.c ****       png_ptr = *png_ptr_ptr;
 11147              		.loc 1 992 7 is_stmt 0 view .LVU3269
 11148 0004 4885FF   		testq	%rdi, %rdi
 11149 0007 0F84C301 		je	.L1093
 11149      0000
 987:fltk-1.3.4-1/png/pngread.c ****    png_structrp png_ptr = NULL;
 11150              		.loc 1 987 1 view .LVU3270
 11151 000d 4154     		pushq	%r12
 11152              		.cfi_def_cfa_offset 16
 11153              		.cfi_offset 12, -16
 11154 000f 55       		pushq	%rbp
 11155              		.cfi_def_cfa_offset 24
 11156              		.cfi_offset 6, -24
 11157 0010 53       		pushq	%rbx
 11158              		.cfi_def_cfa_offset 32
 11159              		.cfi_offset 3, -32
 993:fltk-1.3.4-1/png/pngread.c **** 
 11160              		.loc 1 993 15 view .LVU3271
 11161 0011 488B2F   		movq	(%rdi), %rbp
 11162 0014 4889FB   		movq	%rdi, %rbx
 993:fltk-1.3.4-1/png/pngread.c **** 
 11163              		.loc 1 993 7 is_stmt 1 view .LVU3272
 11164              	.LVL1177:
 995:fltk-1.3.4-1/png/pngread.c ****       return;
 11165              		.loc 1 995 4 view .LVU3273
 995:fltk-1.3.4-1/png/pngread.c ****       return;
 11166              		.loc 1 995 7 is_stmt 0 view .LVU3274
 11167 0017 4885ED   		testq	%rbp, %rbp
 11168 001a 0F844001 		je	.L1076
 11168      0000
 11169 0020 4989F4   		movq	%rsi, %r12
1002:fltk-1.3.4-1/png/pngread.c ****    png_destroy_info_struct(png_ptr, info_ptr_ptr);
 11170              		.loc 1 1002 4 view .LVU3275
 11171 0023 4889EF   		movq	%rbp, %rdi
 11172              	.LVL1178:
1002:fltk-1.3.4-1/png/pngread.c ****    png_destroy_info_struct(png_ptr, info_ptr_ptr);
 11173              		.loc 1 1002 4 view .LVU3276
 11174 0026 4889D6   		movq	%rdx, %rsi
 11175              	.LVL1179:
1002:fltk-1.3.4-1/png/pngread.c ****    png_destroy_info_struct(png_ptr, info_ptr_ptr);
 11176              		.loc 1 1002 4 is_stmt 1 view .LVU3277
 11177 0029 E8000000 		call	png_destroy_info_struct@PLT
 11177      00
 11178              	.LVL1180:
1003:fltk-1.3.4-1/png/pngread.c **** 
 11179              		.loc 1 1003 4 view .LVU3278
 11180 002e 4C89E6   		movq	%r12, %rsi
 11181 0031 4889EF   		movq	%rbp, %rdi
 11182 0034 E8000000 		call	png_destroy_info_struct@PLT
 11182      00
 11183              	.LVL1181:
1005:fltk-1.3.4-1/png/pngread.c ****    png_read_destroy(png_ptr);
 11184              		.loc 1 1005 4 view .LVU3279
1005:fltk-1.3.4-1/png/pngread.c ****    png_read_destroy(png_ptr);
 11185              		.loc 1 1005 17 is_stmt 0 view .LVU3280
 11186 0039 48C70300 		movq	$0, (%rbx)
 11186      000000
1006:fltk-1.3.4-1/png/pngread.c ****    png_destroy_png_struct(png_ptr);
 11187              		.loc 1 1006 4 is_stmt 1 view .LVU3281
 11188              	.LVL1182:
 11189              	.LBB390:
 11190              	.LBI390:
 920:fltk-1.3.4-1/png/pngread.c **** {
 11191              		.loc 1 920 1 view .LVU3282
 11192              	.LBB391:
 922:fltk-1.3.4-1/png/pngread.c **** 
 11193              		.loc 1 922 4 view .LVU3283
 925:fltk-1.3.4-1/png/pngread.c **** #endif
 11194              		.loc 1 925 4 view .LVU3284
 11195 0040 4889EF   		movq	%rbp, %rdi
 11196 0043 E8000000 		call	png_destroy_gamma_table@PLT
 11196      00
 11197              	.LVL1183:
 928:fltk-1.3.4-1/png/pngread.c ****    png_ptr->big_row_buf = NULL;
 11198              		.loc 1 928 4 view .LVU3285
 11199 0048 488BB538 		movq	1080(%rbp), %rsi
 11199      040000
 11200 004f 4889EF   		movq	%rbp, %rdi
 11201 0052 E8000000 		call	png_free@PLT
 11201      00
 11202              	.LVL1184:
 929:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->big_prev_row);
 11203              		.loc 1 929 4 view .LVU3286
 930:fltk-1.3.4-1/png/pngread.c ****    png_ptr->big_prev_row = NULL;
 11204              		.loc 1 930 4 is_stmt 0 view .LVU3287
 11205 0057 488BB5B0 		movq	1200(%rbp), %rsi
 11205      040000
 11206 005e 4889EF   		movq	%rbp, %rdi
 929:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->big_prev_row);
 11207              		.loc 1 929 25 view .LVU3288
 11208 0061 48C78538 		movq	$0, 1080(%rbp)
 11208      04000000 
 11208      000000
 930:fltk-1.3.4-1/png/pngread.c ****    png_ptr->big_prev_row = NULL;
 11209              		.loc 1 930 4 is_stmt 1 view .LVU3289
 11210 006c E8000000 		call	png_free@PLT
 11210      00
 11211              	.LVL1185:
 931:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->read_buffer);
 11212              		.loc 1 931 4 view .LVU3290
 932:fltk-1.3.4-1/png/pngread.c ****    png_ptr->read_buffer = NULL;
 11213              		.loc 1 932 4 is_stmt 0 view .LVU3291
 11214 0071 488BB598 		movq	1176(%rbp), %rsi
 11214      040000
 11215 0078 4889EF   		movq	%rbp, %rdi
 931:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->read_buffer);
 11216              		.loc 1 931 26 view .LVU3292
 11217 007b 48C785B0 		movq	$0, 1200(%rbp)
 11217      04000000 
 11217      000000
 932:fltk-1.3.4-1/png/pngread.c ****    png_ptr->read_buffer = NULL;
 11218              		.loc 1 932 4 is_stmt 1 view .LVU3293
 11219 0086 E8000000 		call	png_free@PLT
 11219      00
 11220              	.LVL1186:
 933:fltk-1.3.4-1/png/pngread.c **** 
 11221              		.loc 1 933 4 view .LVU3294
 936:fltk-1.3.4-1/png/pngread.c ****    png_ptr->palette_lookup = NULL;
 11222              		.loc 1 936 4 is_stmt 0 view .LVU3295
 11223 008b 488BB588 		movq	904(%rbp), %rsi
 11223      030000
 11224 0092 4889EF   		movq	%rbp, %rdi
 933:fltk-1.3.4-1/png/pngread.c **** 
 11225              		.loc 1 933 25 view .LVU3296
 11226 0095 48C78598 		movq	$0, 1176(%rbp)
 11226      04000000 
 11226      000000
 936:fltk-1.3.4-1/png/pngread.c ****    png_ptr->palette_lookup = NULL;
 11227              		.loc 1 936 4 is_stmt 1 view .LVU3297
 11228 00a0 E8000000 		call	png_free@PLT
 11228      00
 11229              	.LVL1187:
 937:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->quantize_index);
 11230              		.loc 1 937 4 view .LVU3298
 938:fltk-1.3.4-1/png/pngread.c ****    png_ptr->quantize_index = NULL;
 11231              		.loc 1 938 4 is_stmt 0 view .LVU3299
 11232 00a5 488BB590 		movq	912(%rbp), %rsi
 11232      030000
 11233 00ac 4889EF   		movq	%rbp, %rdi
 937:fltk-1.3.4-1/png/pngread.c ****    png_free(png_ptr, png_ptr->quantize_index);
 11234              		.loc 1 937 28 view .LVU3300
 11235 00af 48C78588 		movq	$0, 904(%rbp)
 11235      03000000 
 11235      000000
 938:fltk-1.3.4-1/png/pngread.c ****    png_ptr->quantize_index = NULL;
 11236              		.loc 1 938 4 is_stmt 1 view .LVU3301
 11237 00ba E8000000 		call	png_free@PLT
 11237      00
 11238              	.LVL1188:
 939:fltk-1.3.4-1/png/pngread.c **** #endif
 11239              		.loc 1 939 4 view .LVU3302
 942:fltk-1.3.4-1/png/pngread.c ****    {
 11240              		.loc 1 942 16 is_stmt 0 view .LVU3303
 11241 00bf 8B95E803 		movl	1000(%rbp), %edx
 11241      0000
 939:fltk-1.3.4-1/png/pngread.c **** #endif
 11242              		.loc 1 939 28 view .LVU3304
 11243 00c5 48C78590 		movq	$0, 912(%rbp)
 11243      03000000 
 11243      000000
 942:fltk-1.3.4-1/png/pngread.c ****    {
 11244              		.loc 1 942 4 is_stmt 1 view .LVU3305
 942:fltk-1.3.4-1/png/pngread.c ****    {
 11245              		.loc 1 942 7 is_stmt 0 view .LVU3306
 11246 00d0 F6C610   		testb	$16, %dh
 11247 00d3 0F85B700 		jne	.L1096
 11247      0000
 947:fltk-1.3.4-1/png/pngread.c **** 
 11248              		.loc 1 947 4 is_stmt 1 view .LVU3307
 947:fltk-1.3.4-1/png/pngread.c **** 
 11249              		.loc 1 947 21 is_stmt 0 view .LVU3308
 11250 00d9 89D0     		movl	%edx, %eax
 11251 00db 80E4EF   		andb	$-17, %ah
 11252 00de 8985E803 		movl	%eax, 1000(%rbp)
 11252      0000
 951:fltk-1.3.4-1/png/pngread.c ****    {
 11253              		.loc 1 951 4 is_stmt 1 view .LVU3309
 951:fltk-1.3.4-1/png/pngread.c ****    {
 11254              		.loc 1 951 7 is_stmt 0 view .LVU3310
 11255 00e4 80E620   		andb	$32, %dh
 11256 00e7 757F     		jne	.L1097
 11257              	.L1079:
 956:fltk-1.3.4-1/png/pngread.c **** #endif
 11258              		.loc 1 956 4 is_stmt 1 view .LVU3311
 956:fltk-1.3.4-1/png/pngread.c **** #endif
 11259              		.loc 1 956 21 is_stmt 0 view .LVU3312
 11260 00e9 80E4DF   		andb	$-33, %ah
 959:fltk-1.3.4-1/png/pngread.c **** 
 11261              		.loc 1 959 4 view .LVU3313
 11262 00ec 488DBD40 		leaq	320(%rbp), %rdi
 11262      010000
 956:fltk-1.3.4-1/png/pngread.c **** #endif
 11263              		.loc 1 956 21 view .LVU3314
 11264 00f3 8985E803 		movl	%eax, 1000(%rbp)
 11264      0000
 959:fltk-1.3.4-1/png/pngread.c **** 
 11265              		.loc 1 959 4 is_stmt 1 view .LVU3315
 11266 00f9 E8000000 		call	inflateEnd@PLT
 11266      00
 11267              	.LVL1189:
 962:fltk-1.3.4-1/png/pngread.c ****    png_ptr->save_buffer = NULL;
 11268              		.loc 1 962 4 view .LVU3316
 11269 00fe 488BB540 		movq	832(%rbp), %rsi
 11269      030000
 11270 0105 4889EF   		movq	%rbp, %rdi
 11271 0108 E8000000 		call	png_free@PLT
 11271      00
 11272              	.LVL1190:
 963:fltk-1.3.4-1/png/pngread.c **** #endif
 11273              		.loc 1 963 4 view .LVU3317
 968:fltk-1.3.4-1/png/pngread.c ****    png_ptr->unknown_chunk.data = NULL;
 11274              		.loc 1 968 4 is_stmt 0 view .LVU3318
 11275 010d 488BB578 		movq	1144(%rbp), %rsi
 11275      040000
 11276 0114 4889EF   		movq	%rbp, %rdi
 963:fltk-1.3.4-1/png/pngread.c **** #endif
 11277              		.loc 1 963 25 view .LVU3319
 11278 0117 48C78540 		movq	$0, 832(%rbp)
 11278      03000000 
 11278      000000
 968:fltk-1.3.4-1/png/pngread.c ****    png_ptr->unknown_chunk.data = NULL;
 11279              		.loc 1 968 4 is_stmt 1 view .LVU3320
 11280 0122 E8000000 		call	png_free@PLT
 11280      00
 11281              	.LVL1191:
 969:fltk-1.3.4-1/png/pngread.c **** #endif
 11282              		.loc 1 969 4 view .LVU3321
 973:fltk-1.3.4-1/png/pngread.c ****    png_ptr->chunk_list = NULL;
 11283              		.loc 1 973 4 is_stmt 0 view .LVU3322
 11284 0127 488BB508 		movq	1032(%rbp), %rsi
 11284      040000
 11285 012e 4889EF   		movq	%rbp, %rdi
 969:fltk-1.3.4-1/png/pngread.c **** #endif
 11286              		.loc 1 969 32 view .LVU3323
 11287 0131 48C78578 		movq	$0, 1144(%rbp)
 11287      04000000 
 11287      000000
 973:fltk-1.3.4-1/png/pngread.c ****    png_ptr->chunk_list = NULL;
 11288              		.loc 1 973 4 is_stmt 1 view .LVU3324
 11289 013c E8000000 		call	png_free@PLT
 11289      00
 11290              	.LVL1192:
 974:fltk-1.3.4-1/png/pngread.c **** #endif
 11291              		.loc 1 974 4 view .LVU3325
 11292              	.LBE391:
 11293              	.LBE390:
1007:fltk-1.3.4-1/png/pngread.c **** }
 11294              		.loc 1 1007 4 is_stmt 0 view .LVU3326
 11295 0141 4889EF   		movq	%rbp, %rdi
 11296              	.LBB394:
 11297              	.LBB392:
 974:fltk-1.3.4-1/png/pngread.c **** #endif
 11298              		.loc 1 974 24 view .LVU3327
 11299 0144 48C78508 		movq	$0, 1032(%rbp)
 11299      04000000 
 11299      000000
 11300              	.LVL1193:
 974:fltk-1.3.4-1/png/pngread.c **** #endif
 11301              		.loc 1 974 24 view .LVU3328
 11302              	.LBE392:
 11303              	.LBE394:
1007:fltk-1.3.4-1/png/pngread.c **** }
 11304              		.loc 1 1007 4 is_stmt 1 view .LVU3329
1008:fltk-1.3.4-1/png/pngread.c **** 
 11305              		.loc 1 1008 1 is_stmt 0 view .LVU3330
 11306 014f 5B       		popq	%rbx
 11307              		.cfi_remember_state
 11308              		.cfi_restore 3
 11309              		.cfi_def_cfa_offset 24
 11310              	.LVL1194:
1008:fltk-1.3.4-1/png/pngread.c **** 
 11311              		.loc 1 1008 1 view .LVU3331
 11312 0150 5D       		popq	%rbp
 11313              		.cfi_restore 6
 11314              		.cfi_def_cfa_offset 16
 11315              	.LVL1195:
1008:fltk-1.3.4-1/png/pngread.c **** 
 11316              		.loc 1 1008 1 view .LVU3332
 11317 0151 415C     		popq	%r12
 11318              		.cfi_restore 12
 11319              		.cfi_def_cfa_offset 8
 11320              	.LVL1196:
1007:fltk-1.3.4-1/png/pngread.c **** }
 11321              		.loc 1 1007 4 view .LVU3333
 11322 0153 E9000000 		jmp	png_destroy_png_struct@PLT
 11322      00
 11323              	.LVL1197:
 11324 0158 0F1F8400 		.p2align 4,,10
 11324      00000000 
 11325              		.p2align 3
 11326              	.L1076:
 11327              		.cfi_restore_state
1008:fltk-1.3.4-1/png/pngread.c **** 
 11328              		.loc 1 1008 1 view .LVU3334
 11329 0160 5B       		popq	%rbx
 11330              		.cfi_remember_state
 11331              		.cfi_def_cfa_offset 24
 11332              	.LVL1198:
1008:fltk-1.3.4-1/png/pngread.c **** 
 11333              		.loc 1 1008 1 view .LVU3335
 11334 0161 5D       		popq	%rbp
 11335              		.cfi_def_cfa_offset 16
 11336              	.LVL1199:
1008:fltk-1.3.4-1/png/pngread.c **** 
 11337              		.loc 1 1008 1 view .LVU3336
 11338 0162 415C     		popq	%r12
 11339              		.cfi_def_cfa_offset 8
 11340 0164 C3       		ret
 11341              	.LVL1200:
 11342              		.p2align 4,,10
 11343 0165 0F1F00   		.p2align 3
 11344              	.L1097:
 11345              		.cfi_restore_state
 11346              	.LBB395:
 11347              	.LBB393:
 953:fltk-1.3.4-1/png/pngread.c ****       png_ptr->trans_alpha = NULL;
 11348              		.loc 1 953 7 is_stmt 1 view .LVU3337
 11349 0168 488BB5F8 		movq	760(%rbp), %rsi
 11349      020000
 11350 016f 4889EF   		movq	%rbp, %rdi
 11351 0172 E8000000 		call	png_free@PLT
 11351      00
 11352              	.LVL1201:
 954:fltk-1.3.4-1/png/pngread.c ****    }
 11353              		.loc 1 954 7 view .LVU3338
 11354 0177 8B85E803 		movl	1000(%rbp), %eax
 11354      0000
 954:fltk-1.3.4-1/png/pngread.c ****    }
 11355              		.loc 1 954 28 is_stmt 0 view .LVU3339
 11356 017d 48C785F8 		movq	$0, 760(%rbp)
 11356      02000000 
 11356      000000
 11357 0188 E95CFFFF 		jmp	.L1079
 11357      FF
 11358 018d 0F1F00   		.p2align 4,,10
 11359              		.p2align 3
 11360              	.L1096:
 944:fltk-1.3.4-1/png/pngread.c ****       png_ptr->palette = NULL;
 11361              		.loc 1 944 7 is_stmt 1 view .LVU3340
 11362 0190 488BB560 		movq	608(%rbp), %rsi
 11362      020000
 11363 0197 4889EF   		movq	%rbp, %rdi
 11364 019a E8000000 		call	png_zfree@PLT
 11364      00
 11365              	.LVL1202:
 945:fltk-1.3.4-1/png/pngread.c ****    }
 11366              		.loc 1 945 7 view .LVU3341
 11367 019f 8B95E803 		movl	1000(%rbp), %edx
 11367      0000
 947:fltk-1.3.4-1/png/pngread.c **** 
 11368              		.loc 1 947 4 view .LVU3342
 945:fltk-1.3.4-1/png/pngread.c ****    }
 11369              		.loc 1 945 24 is_stmt 0 view .LVU3343
 11370 01a5 48C78560 		movq	$0, 608(%rbp)
 11370      02000000 
 11370      000000
 947:fltk-1.3.4-1/png/pngread.c **** 
 11371              		.loc 1 947 21 view .LVU3344
 11372 01b0 89D0     		movl	%edx, %eax
 11373 01b2 80E4EF   		andb	$-17, %ah
 11374 01b5 8985E803 		movl	%eax, 1000(%rbp)
 11374      0000
 951:fltk-1.3.4-1/png/pngread.c ****    {
 11375              		.loc 1 951 4 is_stmt 1 view .LVU3345
 951:fltk-1.3.4-1/png/pngread.c ****    {
 11376              		.loc 1 951 7 is_stmt 0 view .LVU3346
 11377 01bb 80E620   		andb	$32, %dh
 11378 01be 0F8425FF 		je	.L1079
 11378      FFFF
 11379 01c4 EBA2     		jmp	.L1097
 11380              	.LVL1203:
 11381 01c6 662E0F1F 		.p2align 4,,10
 11381      84000000 
 11381      0000
 11382              		.p2align 3
 11383              	.L1093:
 11384              		.cfi_def_cfa_offset 8
 11385              		.cfi_restore 3
 11386              		.cfi_restore 6
 11387              		.cfi_restore 12
 951:fltk-1.3.4-1/png/pngread.c ****    {
 11388              		.loc 1 951 7 view .LVU3347
 11389 01d0 C3       		ret
 11390              	.LBE393:
 11391              	.LBE395:
 11392              		.cfi_endproc
 11393              	.LFE52:
 11395              		.section	.rodata.png_image_read_init.str1.1,"aMS",@progbits,1
 11396              	.LC43:
 11397 0000 312E362E 		.string	"1.6.16"
 11397      313600
 11398              	.LC44:
 11399 0007 706E675F 		.string	"png_image_read: out of memory"
 11399      696D6167 
 11399      655F7265 
 11399      61643A20 
 11399      6F757420 
 11400              		.section	.rodata.png_image_read_init.str1.8,"aMS",@progbits,1
 11401              		.align 8
 11402              	.LC45:
 11403 0000 706E675F 		.string	"png_image_read: opaque pointer not NULL"
 11403      696D6167 
 11403      655F7265 
 11403      61643A20 
 11403      6F706171 
 11404              		.section	.text.png_image_read_init,"ax",@progbits
 11405              		.p2align 4
 11407              	png_image_read_init:
 11408              	.LVL1204:
 11409              	.LFB55:
1282:fltk-1.3.4-1/png/pngread.c ****    if (image->opaque == NULL)
 11410              		.loc 1 1282 1 is_stmt 1 view -0
 11411              		.cfi_startproc
1282:fltk-1.3.4-1/png/pngread.c ****    if (image->opaque == NULL)
 11412              		.loc 1 1282 1 is_stmt 0 view .LVU3349
 11413 0000 55       		pushq	%rbp
 11414              		.cfi_def_cfa_offset 16
 11415              		.cfi_offset 6, -16
 11416 0001 4889FD   		movq	%rdi, %rbp
 11417 0004 4883EC20 		subq	$32, %rsp
 11418              		.cfi_def_cfa_offset 48
1282:fltk-1.3.4-1/png/pngread.c ****    if (image->opaque == NULL)
 11419              		.loc 1 1282 1 view .LVU3350
 11420 0008 64488B04 		movq	%fs:40, %rax
 11420      25280000 
 11420      00
 11421 0011 48894424 		movq	%rax, 24(%rsp)
 11421      18
 11422 0016 31C0     		xorl	%eax, %eax
1283:fltk-1.3.4-1/png/pngread.c ****    {
 11423              		.loc 1 1283 4 is_stmt 1 view .LVU3351
1283:fltk-1.3.4-1/png/pngread.c ****    {
 11424              		.loc 1 1283 7 is_stmt 0 view .LVU3352
 11425 0018 48833F00 		cmpq	$0, (%rdi)
 11426 001c 742A     		je	.L1113
1325:fltk-1.3.4-1/png/pngread.c **** }
 11427              		.loc 1 1325 4 is_stmt 1 view .LVU3353
1325:fltk-1.3.4-1/png/pngread.c **** }
 11428              		.loc 1 1325 11 is_stmt 0 view .LVU3354
 11429 001e 488D3500 		leaq	.LC45(%rip), %rsi
 11429      000000
 11430 0025 E8000000 		call	png_image_error@PLT
 11430      00
 11431              	.LVL1205:
 11432              	.L1098:
1326:fltk-1.3.4-1/png/pngread.c **** 
 11433              		.loc 1 1326 1 view .LVU3355
 11434 002a 488B7424 		movq	24(%rsp), %rsi
 11434      18
 11435 002f 64483334 		xorq	%fs:40, %rsi
 11435      25280000 
 11435      00
 11436 0038 0F85F800 		jne	.L1114
 11436      0000
 11437 003e 4883C420 		addq	$32, %rsp
 11438              		.cfi_remember_state
 11439              		.cfi_def_cfa_offset 16
 11440 0042 5D       		popq	%rbp
 11441              		.cfi_def_cfa_offset 8
 11442              	.LVL1206:
1326:fltk-1.3.4-1/png/pngread.c **** 
 11443              		.loc 1 1326 1 view .LVU3356
 11444 0043 C3       		ret
 11445              	.LVL1207:
 11446              		.p2align 4,,10
 11447 0044 0F1F4000 		.p2align 3
 11448              	.L1113:
 11449              		.cfi_restore_state
 11450              	.LBB407:
 11451              	.LBI407:
1281:fltk-1.3.4-1/png/pngread.c **** {
 11452              		.loc 1 1281 1 is_stmt 1 view .LVU3357
 11453              	.LBB408:
1285:fltk-1.3.4-1/png/pngread.c ****           png_safe_error, png_safe_warning);
 11454              		.loc 1 1285 7 view .LVU3358
 11455              	.LBB409:
 11456              	.LBI409:
  25:fltk-1.3.4-1/png/pngread.c **** png_create_read_struct,(png_const_charp user_png_ver, png_voidp error_ptr,
 11457              		.loc 1 25 1 view .LVU3359
 11458              	.LBB410:
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 11459              		.loc 1 33 4 view .LVU3360
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 11460              		.loc 1 33 11 is_stmt 0 view .LVU3361
 11461 0048 4883EC08 		subq	$8, %rsp
 11462              		.cfi_def_cfa_offset 56
 11463 004c 4531C0   		xorl	%r8d, %r8d
 11464 004f 4889FE   		movq	%rdi, %rsi
 11465 0052 4531C9   		xorl	%r9d, %r9d
 11466 0055 6A00     		pushq	$0
 11467              		.cfi_def_cfa_offset 64
 11468 0057 488B0D00 		movq	png_safe_warning@GOTPCREL(%rip), %rcx
 11468      000000
 11469 005e 488D3D00 		leaq	.LC43(%rip), %rdi
 11469      000000
 11470              	.LVL1208:
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 11471              		.loc 1 33 11 view .LVU3362
 11472 0065 488B1500 		movq	png_safe_error@GOTPCREL(%rip), %rdx
 11472      000000
 11473 006c E8000000 		call	png_create_read_struct_2
 11473      00
 11474              	.LVL1209:
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 11475              		.loc 1 33 11 view .LVU3363
 11476              	.LBE410:
 11477              	.LBE409:
 11478              	.LBB412:
 11479              	.LBB413:
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 11480              		.loc 2 71 10 view .LVU3364
 11481 0071 488D7D08 		leaq	8(%rbp), %rdi
 11482 0075 4889E9   		movq	%rbp, %rcx
 11483 0078 48C74500 		movq	$0, 0(%rbp)
 11483      00000000 
 11484 0080 4883E7F8 		andq	$-8, %rdi
 11485              	.LBE413:
 11486              	.LBE412:
1285:fltk-1.3.4-1/png/pngread.c ****           png_safe_error, png_safe_warning);
 11487              		.loc 1 1285 19 view .LVU3365
 11488 0084 48894424 		movq	%rax, 24(%rsp)
 11488      18
 11489              	.LBB415:
 11490              	.LBB411:
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 11491              		.loc 1 33 11 view .LVU3366
 11492 0089 4989C0   		movq	%rax, %r8
 11493              	.LVL1210:
  33:fltk-1.3.4-1/png/pngread.c ****        warn_fn, NULL, NULL, NULL);
 11494              		.loc 1 33 11 view .LVU3367
 11495              	.LBE411:
 11496              	.LBE415:
1291:fltk-1.3.4-1/png/pngread.c ****       image->version = PNG_IMAGE_VERSION;
 11497              		.loc 1 1291 7 is_stmt 1 view .LVU3368
 11498              	.LBB416:
 11499              	.LBI412:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 11500              		.loc 2 59 1 view .LVU3369
 11501              	.LBB414:
 11502              		.loc 2 71 3 view .LVU3370
 11503              		.loc 2 71 10 is_stmt 0 view .LVU3371
 11504 008c 31C0     		xorl	%eax, %eax
 11505 008e 4829F9   		subq	%rdi, %rcx
 11506              	.LVL1211:
 11507              		.loc 2 71 10 view .LVU3372
 11508 0091 48C74560 		movq	$0, 96(%rbp)
 11508      00000000 
 11509 0099 83C168   		addl	$104, %ecx
 11510 009c C1E903   		shrl	$3, %ecx
 11511 009f F348AB   		rep stosq
 11512              	.LVL1212:
 11513              		.loc 2 71 10 view .LVU3373
 11514              	.LBE414:
 11515              	.LBE416:
1292:fltk-1.3.4-1/png/pngread.c **** 
 11516              		.loc 1 1292 7 is_stmt 1 view .LVU3374
1292:fltk-1.3.4-1/png/pngread.c **** 
 11517              		.loc 1 1292 22 is_stmt 0 view .LVU3375
 11518 00a2 C7450801 		movl	$1, 8(%rbp)
 11518      000000
1294:fltk-1.3.4-1/png/pngread.c ****       {
 11519              		.loc 1 1294 7 is_stmt 1 view .LVU3376
1294:fltk-1.3.4-1/png/pngread.c ****       {
 11520              		.loc 1 1294 10 is_stmt 0 view .LVU3377
 11521 00a9 58       		popq	%rax
 11522              		.cfi_def_cfa_offset 56
 11523 00aa 5A       		popq	%rdx
 11524              		.cfi_def_cfa_offset 48
 11525 00ab 4D85C0   		testq	%r8, %r8
 11526 00ae 7472     		je	.L1100
 11527              	.LBB417:
1296:fltk-1.3.4-1/png/pngread.c **** 
 11528              		.loc 1 1296 10 is_stmt 1 view .LVU3378
1296:fltk-1.3.4-1/png/pngread.c **** 
 11529              		.loc 1 1296 31 is_stmt 0 view .LVU3379
 11530 00b0 4C89C7   		movq	%r8, %rdi
 11531 00b3 E8000000 		call	png_create_info_struct@PLT
 11531      00
 11532              	.LVL1213:
1296:fltk-1.3.4-1/png/pngread.c **** 
 11533              		.loc 1 1296 20 view .LVU3380
 11534 00b8 48894424 		movq	%rax, 16(%rsp)
 11534      10
1298:fltk-1.3.4-1/png/pngread.c ****          {
 11535              		.loc 1 1298 10 is_stmt 1 view .LVU3381
1298:fltk-1.3.4-1/png/pngread.c ****          {
 11536              		.loc 1 1298 13 is_stmt 0 view .LVU3382
 11537 00bd 4885C0   		testq	%rax, %rax
 11538 00c0 7452     		je	.L1101
 11539              	.LBB418:
1300:fltk-1.3.4-1/png/pngread.c ****                png_malloc_warn(png_ptr, (sizeof *control)));
 11540              		.loc 1 1300 13 is_stmt 1 view .LVU3383
1300:fltk-1.3.4-1/png/pngread.c ****                png_malloc_warn(png_ptr, (sizeof *control)));
 11541              		.loc 1 1300 36 is_stmt 0 view .LVU3384
 11542 00c2 488B7C24 		movq	8(%rsp), %rdi
 11542      08
 11543 00c7 BE300000 		movl	$48, %esi
 11543      00
 11544 00cc E8000000 		call	png_malloc_warn@PLT
 11544      00
 11545              	.LVL1214:
1303:fltk-1.3.4-1/png/pngread.c ****             {
 11546              		.loc 1 1303 13 is_stmt 1 view .LVU3385
1303:fltk-1.3.4-1/png/pngread.c ****             {
 11547              		.loc 1 1303 16 is_stmt 0 view .LVU3386
 11548 00d1 4885C0   		testq	%rax, %rax
 11549 00d4 742F     		je	.L1102
1305:fltk-1.3.4-1/png/pngread.c **** 
 11550              		.loc 1 1305 16 is_stmt 1 view .LVU3387
 11551              	.LVL1215:
 11552              	.LBB419:
 11553              	.LBI419:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 11554              		.loc 2 59 1 view .LVU3388
 11555              	.LBB420:
 11556              		.loc 2 71 3 view .LVU3389
 11557              	.LBE420:
 11558              	.LBE419:
1307:fltk-1.3.4-1/png/pngread.c ****                control->info_ptr = info_ptr;
 11559              		.loc 1 1307 33 is_stmt 0 view .LVU3390
 11560 00d6 488B5424 		movq	8(%rsp), %rdx
 11560      08
 11561              	.LBB424:
 11562              	.LBB421:
 11563              		.loc 2 71 10 view .LVU3391
 11564 00db 660FEFC0 		pxor	%xmm0, %xmm0
 11565              	.LBE421:
 11566              	.LBE424:
1311:fltk-1.3.4-1/png/pngread.c ****                return 1;
 11567              		.loc 1 1311 30 view .LVU3392
 11568 00df 48894500 		movq	%rax, 0(%rbp)
 11569              	.LBB425:
 11570              	.LBB422:
 11571              		.loc 2 71 10 view .LVU3393
 11572 00e3 0F114020 		movups	%xmm0, 32(%rax)
 11573              	.LVL1216:
 11574              		.loc 2 71 10 view .LVU3394
 11575              	.LBE422:
 11576              	.LBE425:
1307:fltk-1.3.4-1/png/pngread.c ****                control->info_ptr = info_ptr;
 11577              		.loc 1 1307 16 is_stmt 1 view .LVU3395
1307:fltk-1.3.4-1/png/pngread.c ****                control->info_ptr = info_ptr;
 11578              		.loc 1 1307 33 is_stmt 0 view .LVU3396
 11579 00e7 488910   		movq	%rdx, (%rax)
1308:fltk-1.3.4-1/png/pngread.c ****                control->for_write = 0;
 11580              		.loc 1 1308 16 is_stmt 1 view .LVU3397
1308:fltk-1.3.4-1/png/pngread.c ****                control->for_write = 0;
 11581              		.loc 1 1308 34 is_stmt 0 view .LVU3398
 11582 00ea 488B5424 		movq	16(%rsp), %rdx
 11582      10
1309:fltk-1.3.4-1/png/pngread.c **** 
 11583              		.loc 1 1309 35 view .LVU3399
 11584 00ef 806028FE 		andb	$-2, 40(%rax)
1308:fltk-1.3.4-1/png/pngread.c ****                control->for_write = 0;
 11585              		.loc 1 1308 34 view .LVU3400
 11586 00f3 48895008 		movq	%rdx, 8(%rax)
1309:fltk-1.3.4-1/png/pngread.c **** 
 11587              		.loc 1 1309 16 is_stmt 1 view .LVU3401
1311:fltk-1.3.4-1/png/pngread.c ****                return 1;
 11588              		.loc 1 1311 16 view .LVU3402
1312:fltk-1.3.4-1/png/pngread.c ****             }
 11589              		.loc 1 1312 16 view .LVU3403
 11590              	.LBB426:
 11591              	.LBB423:
 11592              		.loc 2 71 10 is_stmt 0 view .LVU3404
 11593 00f7 0F114010 		movups	%xmm0, 16(%rax)
 11594              	.LBE423:
 11595              	.LBE426:
1312:fltk-1.3.4-1/png/pngread.c ****             }
 11596              		.loc 1 1312 23 view .LVU3405
 11597 00fb B8010000 		movl	$1, %eax
 11597      00
 11598              	.LVL1217:
1312:fltk-1.3.4-1/png/pngread.c ****             }
 11599              		.loc 1 1312 23 view .LVU3406
 11600 0100 E925FFFF 		jmp	.L1098
 11600      FF
 11601              	.LVL1218:
 11602              	.L1102:
1316:fltk-1.3.4-1/png/pngread.c ****          }
 11603              		.loc 1 1316 13 is_stmt 1 view .LVU3407
 11604 0105 488B7C24 		movq	8(%rsp), %rdi
 11604      08
 11605 010a 488D7424 		leaq	16(%rsp), %rsi
 11605      10
 11606 010f E8000000 		call	png_destroy_info_struct@PLT
 11606      00
 11607              	.LVL1219:
 11608              	.L1101:
1316:fltk-1.3.4-1/png/pngread.c ****          }
 11609              		.loc 1 1316 13 is_stmt 0 view .LVU3408
 11610              	.LBE418:
1319:fltk-1.3.4-1/png/pngread.c ****       }
 11611              		.loc 1 1319 10 is_stmt 1 view .LVU3409
 11612 0114 488D7C24 		leaq	8(%rsp), %rdi
 11612      08
 11613 0119 31D2     		xorl	%edx, %edx
 11614 011b 31F6     		xorl	%esi, %esi
 11615 011d E8000000 		call	png_destroy_read_struct
 11615      00
 11616              	.LVL1220:
 11617              	.L1100:
 11618              	.LBE417:
1322:fltk-1.3.4-1/png/pngread.c ****    }
 11619              		.loc 1 1322 7 view .LVU3410
1322:fltk-1.3.4-1/png/pngread.c ****    }
 11620              		.loc 1 1322 14 is_stmt 0 view .LVU3411
 11621 0122 488D3500 		leaq	.LC44(%rip), %rsi
 11621      000000
 11622 0129 4889EF   		movq	%rbp, %rdi
 11623 012c E8000000 		call	png_image_error@PLT
 11623      00
 11624              	.LVL1221:
1322:fltk-1.3.4-1/png/pngread.c ****    }
 11625              		.loc 1 1322 14 view .LVU3412
 11626 0131 E9F4FEFF 		jmp	.L1098
 11626      FF
 11627              	.L1114:
1322:fltk-1.3.4-1/png/pngread.c ****    }
 11628              		.loc 1 1322 14 view .LVU3413
 11629              	.LBE408:
 11630              	.LBE407:
1326:fltk-1.3.4-1/png/pngread.c **** 
 11631              		.loc 1 1326 1 view .LVU3414
 11632 0136 E8000000 		call	__stack_chk_fail@PLT
 11632      00
 11633              	.LVL1222:
 11634              		.cfi_endproc
 11635              	.LFE55:
 11637              		.section	.text.png_set_read_status_fn,"ax",@progbits
 11638              		.p2align 4
 11639              		.globl	png_set_read_status_fn
 11641              	png_set_read_status_fn:
 11642              	.LVL1223:
 11643              	.LFB53:
1012:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
 11644              		.loc 1 1012 1 is_stmt 1 view -0
 11645              		.cfi_startproc
1012:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL)
 11646              		.loc 1 1012 1 is_stmt 0 view .LVU3416
 11647 0000 F30F1EFA 		endbr64
1013:fltk-1.3.4-1/png/pngread.c ****       return;
 11648              		.loc 1 1013 4 is_stmt 1 view .LVU3417
1013:fltk-1.3.4-1/png/pngread.c ****       return;
 11649              		.loc 1 1013 7 is_stmt 0 view .LVU3418
 11650 0004 4885FF   		testq	%rdi, %rdi
 11651 0007 7407     		je	.L1115
1016:fltk-1.3.4-1/png/pngread.c **** }
 11652              		.loc 1 1016 4 is_stmt 1 view .LVU3419
1016:fltk-1.3.4-1/png/pngread.c **** }
 11653              		.loc 1 1016 25 is_stmt 0 view .LVU3420
 11654 0009 4889B710 		movq	%rsi, 784(%rdi)
 11654      030000
 11655              	.L1115:
1017:fltk-1.3.4-1/png/pngread.c **** 
 11656              		.loc 1 1017 1 view .LVU3421
 11657 0010 C3       		ret
 11658              		.cfi_endproc
 11659              	.LFE53:
 11661              		.section	.rodata.png_read_png.str1.8,"aMS",@progbits,1
 11662              		.align 8
 11663              	.LC46:
 11664 0000 496D6167 		.string	"Image is too high to process with png_read_png()"
 11664      65206973 
 11664      20746F6F 
 11664      20686967 
 11664      6820746F 
 11665              		.section	.text.png_read_png,"ax",@progbits
 11666              		.p2align 4
 11667              		.globl	png_read_png
 11669              	png_read_png:
 11670              	.LVL1224:
 11671              	.LFB54:
1026:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL || info_ptr == NULL)
 11672              		.loc 1 1026 1 is_stmt 1 view -0
 11673              		.cfi_startproc
1026:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL || info_ptr == NULL)
 11674              		.loc 1 1026 1 is_stmt 0 view .LVU3423
 11675 0000 F30F1EFA 		endbr64
1027:fltk-1.3.4-1/png/pngread.c ****       return;
 11676              		.loc 1 1027 4 is_stmt 1 view .LVU3424
1027:fltk-1.3.4-1/png/pngread.c ****       return;
 11677              		.loc 1 1027 7 is_stmt 0 view .LVU3425
 11678 0004 4885FF   		testq	%rdi, %rdi
 11679 0007 0F840B02 		je	.L1190
 11679      0000
1026:fltk-1.3.4-1/png/pngread.c ****    if (png_ptr == NULL || info_ptr == NULL)
 11680              		.loc 1 1026 1 view .LVU3426
 11681 000d 4155     		pushq	%r13
 11682              		.cfi_def_cfa_offset 16
 11683              		.cfi_offset 13, -16
 11684 000f 4154     		pushq	%r12
 11685              		.cfi_def_cfa_offset 24
 11686              		.cfi_offset 12, -24
 11687 0011 55       		pushq	%rbp
 11688              		.cfi_def_cfa_offset 32
 11689              		.cfi_offset 6, -32
 11690 0012 4889F5   		movq	%rsi, %rbp
 11691 0015 53       		pushq	%rbx
 11692              		.cfi_def_cfa_offset 40
 11693              		.cfi_offset 3, -40
 11694 0016 4883EC08 		subq	$8, %rsp
 11695              		.cfi_def_cfa_offset 48
1027:fltk-1.3.4-1/png/pngread.c ****       return;
 11696              		.loc 1 1027 7 view .LVU3427
 11697 001a 4885F6   		testq	%rsi, %rsi
 11698 001d 0F84FD00 		je	.L1120
 11698      0000
 11699 0023 4989FC   		movq	%rdi, %r12
 11700 0026 89D3     		movl	%edx, %ebx
1033:fltk-1.3.4-1/png/pngread.c ****    if (info_ptr->height > PNG_UINT_32_MAX/(sizeof (png_bytep)))
 11701              		.loc 1 1033 4 is_stmt 1 view .LVU3428
 11702              	.LVL1225:
 11703              	.LBB427:
 11704              	.LBI427:
  92:fltk-1.3.4-1/png/pngread.c **** {
 11705              		.loc 1 92 1 view .LVU3429
 11706              	.LBB428:
  95:fltk-1.3.4-1/png/pngread.c **** #endif
 11707              		.loc 1 95 4 view .LVU3430
  98:fltk-1.3.4-1/png/pngread.c **** 
 11708              		.loc 1 98 4 view .LVU3431
 100:fltk-1.3.4-1/png/pngread.c ****       return;
 11709              		.loc 1 100 4 view .LVU3432
 11710 0028 E8000000 		call	png_read_info.part.0
 11710      00
 11711              	.LVL1226:
 100:fltk-1.3.4-1/png/pngread.c ****       return;
 11712              		.loc 1 100 4 is_stmt 0 view .LVU3433
 11713              	.LBE428:
 11714              	.LBE427:
1034:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "Image is too high to process with png_read_png()");
 11715              		.loc 1 1034 4 is_stmt 1 view .LVU3434
1034:fltk-1.3.4-1/png/pngread.c ****       png_error(png_ptr, "Image is too high to process with png_read_png()");
 11716              		.loc 1 1034 7 is_stmt 0 view .LVU3435
 11717 002d 817D04FF 		cmpl	$536870911, 4(%rbp)
 11717      FFFF1F
 11718 0034 0F877402 		ja	.L1193
 11718      0000
1046:fltk-1.3.4-1/png/pngread.c ****      /* Added at libpng-1.5.4. "strip_16" produces the same result that it
 11719              		.loc 1 1046 4 is_stmt 1 view .LVU3436
1046:fltk-1.3.4-1/png/pngread.c ****      /* Added at libpng-1.5.4. "strip_16" produces the same result that it
 11720              		.loc 1 1046 7 is_stmt 0 view .LVU3437
 11721 003a F6C780   		testb	$-128, %bh
 11722 003d 0F856501 		jne	.L1194
 11722      0000
 11723              	.L1123:
1060:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
 11724              		.loc 1 1060 4 is_stmt 1 view .LVU3438
1060:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
 11725              		.loc 1 1060 7 is_stmt 0 view .LVU3439
 11726 0043 F6C301   		testb	$1, %bl
 11727 0046 0F854C01 		jne	.L1195
 11727      0000
 11728              	.L1124:
1070:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
 11729              		.loc 1 1070 4 is_stmt 1 view .LVU3440
1070:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
 11730              		.loc 1 1070 7 is_stmt 0 view .LVU3441
 11731 004c F6C302   		testb	$2, %bl
 11732 004f 0F853301 		jne	.L1196
 11732      0000
 11733              	.L1125:
1080:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_PACK_SUPPORTED
 11734              		.loc 1 1080 4 is_stmt 1 view .LVU3442
1080:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_PACK_SUPPORTED
 11735              		.loc 1 1080 7 is_stmt 0 view .LVU3443
 11736 0055 F6C304   		testb	$4, %bl
 11737 0058 0F851A01 		jne	.L1197
 11737      0000
 11738              	.L1126:
1090:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_PACKSWAP_SUPPORTED
 11739              		.loc 1 1090 4 is_stmt 1 view .LVU3444
1090:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_PACKSWAP_SUPPORTED
 11740              		.loc 1 1090 7 is_stmt 0 view .LVU3445
 11741 005e F6C308   		testb	$8, %bl
 11742 0061 0F850101 		jne	.L1198
 11742      0000
 11743              	.L1127:
1102:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
 11744              		.loc 1 1102 4 is_stmt 1 view .LVU3446
1102:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
 11745              		.loc 1 1102 7 is_stmt 0 view .LVU3447
 11746 0067 F6C310   		testb	$16, %bl
 11747 006a 0F85E800 		jne	.L1199
 11747      0000
 11748              	.L1128:
1114:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INVERT_SUPPORTED
 11749              		.loc 1 1114 4 is_stmt 1 view .LVU3448
1114:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INVERT_SUPPORTED
 11750              		.loc 1 1114 7 is_stmt 0 view .LVU3449
 11751 0070 F6C320   		testb	$32, %bl
 11752 0073 0F85CF00 		jne	.L1200
 11752      0000
 11753              	.L1129:
1125:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SHIFT_SUPPORTED
 11754              		.loc 1 1125 4 is_stmt 1 view .LVU3450
1125:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SHIFT_SUPPORTED
 11755              		.loc 1 1125 7 is_stmt 0 view .LVU3451
 11756 0079 F6C340   		testb	$64, %bl
 11757 007c 740A     		je	.L1130
1127:fltk-1.3.4-1/png/pngread.c ****          png_set_shift(png_ptr, &info_ptr->sig_bit);
 11758              		.loc 1 1127 7 is_stmt 1 view .LVU3452
1127:fltk-1.3.4-1/png/pngread.c ****          png_set_shift(png_ptr, &info_ptr->sig_bit);
 11759              		.loc 1 1127 10 is_stmt 0 view .LVU3453
 11760 007e F6450802 		testb	$2, 8(%rbp)
 11761 0082 0F85A800 		jne	.L1201
 11761      0000
 11762              	.L1130:
1134:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_BGR_SUPPORTED
 11763              		.loc 1 1134 4 is_stmt 1 view .LVU3454
1134:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_BGR_SUPPORTED
 11764              		.loc 1 1134 7 is_stmt 0 view .LVU3455
 11765 0088 F6C380   		testb	$-128, %bl
 11766 008b 0F857701 		jne	.L1202
 11766      0000
 11767              	.L1131:
1142:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SWAP_ALPHA_SUPPORTED
 11768              		.loc 1 1142 4 is_stmt 1 view .LVU3456
1142:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SWAP_ALPHA_SUPPORTED
 11769              		.loc 1 1142 7 is_stmt 0 view .LVU3457
 11770 0091 F6C701   		testb	$1, %bh
 11771 0094 0F855E01 		jne	.L1203
 11771      0000
 11772              	.L1132:
1150:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SWAP_SUPPORTED
 11773              		.loc 1 1150 4 is_stmt 1 view .LVU3458
1150:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_SWAP_SUPPORTED
 11774              		.loc 1 1150 7 is_stmt 0 view .LVU3459
 11775 009a F6C702   		testb	$2, %bh
 11776 009d 0F854501 		jne	.L1204
 11776      0000
 11777              	.L1133:
1159:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INVERT_ALPHA_SUPPORTED
 11778              		.loc 1 1159 4 is_stmt 1 view .LVU3460
1159:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_INVERT_ALPHA_SUPPORTED
 11779              		.loc 1 1159 7 is_stmt 0 view .LVU3461
 11780 00a3 F6C704   		testb	$4, %bh
 11781 00a6 0F852C01 		jne	.L1205
 11781      0000
 11782              	.L1134:
1168:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
 11783              		.loc 1 1168 4 is_stmt 1 view .LVU3462
1168:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
 11784              		.loc 1 1168 7 is_stmt 0 view .LVU3463
 11785 00ac F6C720   		testb	$32, %bh
 11786 00af 0F851301 		jne	.L1206
 11786      0000
 11787              	.L1135:
1176:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
 11788              		.loc 1 1176 4 is_stmt 1 view .LVU3464
1176:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
 11789              		.loc 1 1176 7 is_stmt 0 view .LVU3465
 11790 00b5 80E740   		andb	$64, %bh
 11791              	.LVL1227:
1176:fltk-1.3.4-1/png/pngread.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
 11792              		.loc 1 1176 7 view .LVU3466
 11793 00b8 0F85FA00 		jne	.L1207
 11793      0000
 11794              	.L1136:
1188:fltk-1.3.4-1/png/pngread.c **** 
 11795              		.loc 1 1188 4 is_stmt 1 view .LVU3467
1188:fltk-1.3.4-1/png/pngread.c **** 
 11796              		.loc 1 1188 10 is_stmt 0 view .LVU3468
 11797 00be 4C89E7   		movq	%r12, %rdi
 11798 00c1 E8000000 		call	png_set_interlace_handling@PLT
 11798      00
 11799              	.LVL1228:
1194:fltk-1.3.4-1/png/pngread.c **** 
 11800              		.loc 1 1194 4 is_stmt 1 view .LVU3469
 11801 00c6 4889EE   		movq	%rbp, %rsi
 11802 00c9 4C89E7   		movq	%r12, %rdi
 11803 00cc E8000000 		call	png_read_update_info
 11803      00
 11804              	.LVL1229:
1198:fltk-1.3.4-1/png/pngread.c ****    if (info_ptr->row_pointers == NULL)
 11805              		.loc 1 1198 4 view .LVU3470
 11806 00d1 4889EE   		movq	%rbp, %rsi
 11807 00d4 31C9     		xorl	%ecx, %ecx
 11808 00d6 BA400000 		movl	$64, %edx
 11808      00
 11809 00db 4C89E7   		movq	%r12, %rdi
 11810 00de E8000000 		call	png_free_data@PLT
 11810      00
 11811              	.LVL1230:
1199:fltk-1.3.4-1/png/pngread.c ****    {
 11812              		.loc 1 1199 4 view .LVU3471
1199:fltk-1.3.4-1/png/pngread.c ****    {
 11813              		.loc 1 1199 16 is_stmt 0 view .LVU3472
 11814 00e3 488BB550 		movq	336(%rbp), %rsi
 11814      010000
1199:fltk-1.3.4-1/png/pngread.c ****    {
 11815              		.loc 1 1199 7 view .LVU3473
 11816 00ea 4885F6   		testq	%rsi, %rsi
 11817 00ed 0F842D01 		je	.L1208
 11817      0000
 11818              	.L1137:
1216:fltk-1.3.4-1/png/pngread.c ****    info_ptr->valid |= PNG_INFO_IDAT;
 11819              		.loc 1 1216 4 is_stmt 1 view .LVU3474
 11820 00f3 4C89E7   		movq	%r12, %rdi
 11821 00f6 E8000000 		call	png_read_image
 11821      00
 11822              	.LVL1231:
1217:fltk-1.3.4-1/png/pngread.c **** 
 11823              		.loc 1 1217 4 view .LVU3475
1217:fltk-1.3.4-1/png/pngread.c **** 
 11824              		.loc 1 1217 20 is_stmt 0 view .LVU3476
 11825 00fb 814D0800 		orl	$32768, 8(%rbp)
 11825      800000
1220:fltk-1.3.4-1/png/pngread.c **** 
 11826              		.loc 1 1220 4 is_stmt 1 view .LVU3477
 11827              	.LVL1232:
 11828              	.LBB429:
 11829              	.LBI429:
 757:fltk-1.3.4-1/png/pngread.c **** {
 11830              		.loc 1 757 1 view .LVU3478
 11831              	.LBB430:
 760:fltk-1.3.4-1/png/pngread.c **** #endif
 11832              		.loc 1 760 4 view .LVU3479
 763:fltk-1.3.4-1/png/pngread.c **** 
 11833              		.loc 1 763 4 view .LVU3480
 765:fltk-1.3.4-1/png/pngread.c ****       return;
 11834              		.loc 1 765 4 view .LVU3481
 11835              	.LBE430:
 11836              	.LBE429:
1223:fltk-1.3.4-1/png/pngread.c **** #endif /* INFO_IMAGE */
 11837              		.loc 1 1223 1 is_stmt 0 view .LVU3482
 11838 0102 4883C408 		addq	$8, %rsp
 11839              		.cfi_remember_state
 11840              		.cfi_def_cfa_offset 40
 11841              	.LBB434:
 11842              	.LBB431:
 11843 0106 4889EE   		movq	%rbp, %rsi
 11844              	.LBE431:
 11845              	.LBE434:
 11846 0109 5B       		popq	%rbx
 11847              		.cfi_restore 3
 11848              		.cfi_def_cfa_offset 32
 11849              	.LBB435:
 11850              	.LBB432:
 11851 010a 4C89E7   		movq	%r12, %rdi
 11852              	.LBE432:
 11853              	.LBE435:
 11854 010d 5D       		popq	%rbp
 11855              		.cfi_restore 6
 11856              		.cfi_def_cfa_offset 24
 11857              	.LVL1233:
1223:fltk-1.3.4-1/png/pngread.c **** #endif /* INFO_IMAGE */
 11858              		.loc 1 1223 1 view .LVU3483
 11859 010e 415C     		popq	%r12
 11860              		.cfi_restore 12
 11861              		.cfi_def_cfa_offset 16
 11862              	.LVL1234:
1223:fltk-1.3.4-1/png/pngread.c **** #endif /* INFO_IMAGE */
 11863              		.loc 1 1223 1 view .LVU3484
 11864 0110 415D     		popq	%r13
 11865              		.cfi_restore 13
 11866              		.cfi_def_cfa_offset 8
 11867              	.LBB436:
 11868              	.LBB433:
 11869 0112 E9000000 		jmp	png_read_end.part.0
 11869      00
 11870              	.LVL1235:
 11871 0117 660F1F84 		.p2align 4,,10
 11871      00000000 
 11871      00
 11872              		.p2align 3
 11873              	.L1120:
 11874              		.cfi_restore_state
1223:fltk-1.3.4-1/png/pngread.c **** #endif /* INFO_IMAGE */
 11875              		.loc 1 1223 1 view .LVU3485
 11876              	.LBE433:
 11877              	.LBE436:
 11878 0120 4883C408 		addq	$8, %rsp
 11879              		.cfi_remember_state
 11880              		.cfi_def_cfa_offset 40
 11881 0124 5B       		popq	%rbx
 11882              		.cfi_def_cfa_offset 32
 11883 0125 5D       		popq	%rbp
 11884              		.cfi_def_cfa_offset 24
 11885 0126 415C     		popq	%r12
 11886              		.cfi_def_cfa_offset 16
 11887 0128 415D     		popq	%r13
 11888              		.cfi_def_cfa_offset 8
 11889 012a C3       		ret
 11890              	.LVL1236:
 11891 012b 0F1F4400 		.p2align 4,,10
 11891      00
 11892              		.p2align 3
 11893              	.L1201:
 11894              		.cfi_restore_state
1128:fltk-1.3.4-1/png/pngread.c **** #else
 11895              		.loc 1 1128 10 is_stmt 1 view .LVU3486
1128:fltk-1.3.4-1/png/pngread.c **** #else
 11896              		.loc 1 1128 33 is_stmt 0 view .LVU3487
 11897 0130 488DB5B0 		leaq	176(%rbp), %rsi
 11897      000000
1128:fltk-1.3.4-1/png/pngread.c **** #else
 11898              		.loc 1 1128 10 view .LVU3488
 11899 0137 4C89E7   		movq	%r12, %rdi
 11900 013a E8000000 		call	png_set_shift@PLT
 11900      00
 11901              	.LVL1237:
 11902 013f E944FFFF 		jmp	.L1130
 11902      FF
 11903              		.p2align 4,,10
 11904 0144 0F1F4000 		.p2align 3
 11905              	.L1200:
1116:fltk-1.3.4-1/png/pngread.c **** #else
 11906              		.loc 1 1116 7 is_stmt 1 view .LVU3489
 11907 0148 4C89E7   		movq	%r12, %rdi
 11908 014b E8000000 		call	png_set_invert_mono@PLT
 11908      00
 11909              	.LVL1238:
 11910 0150 E924FFFF 		jmp	.L1129
 11910      FF
 11911              		.p2align 4,,10
 11912 0155 0F1F00   		.p2align 3
 11913              	.L1199:
1104:fltk-1.3.4-1/png/pngread.c **** #else
 11914              		.loc 1 1104 7 view .LVU3490
 11915 0158 4C89E7   		movq	%r12, %rdi
 11916 015b E8000000 		call	png_set_expand@PLT
 11916      00
 11917              	.LVL1239:
 11918 0160 E90BFFFF 		jmp	.L1128
 11918      FF
 11919              		.p2align 4,,10
 11920 0165 0F1F00   		.p2align 3
 11921              	.L1198:
1092:fltk-1.3.4-1/png/pngread.c **** #else
 11922              		.loc 1 1092 7 view .LVU3491
 11923 0168 4C89E7   		movq	%r12, %rdi
 11924 016b E8000000 		call	png_set_packswap@PLT
 11924      00
 11925              	.LVL1240:
 11926 0170 E9F2FEFF 		jmp	.L1127
 11926      FF
 11927              		.p2align 4,,10
 11928 0175 0F1F00   		.p2align 3
 11929              	.L1197:
1082:fltk-1.3.4-1/png/pngread.c **** #else
 11930              		.loc 1 1082 7 view .LVU3492
 11931 0178 4C89E7   		movq	%r12, %rdi
 11932 017b E8000000 		call	png_set_packing@PLT
 11932      00
 11933              	.LVL1241:
 11934 0180 E9D9FEFF 		jmp	.L1126
 11934      FF
 11935              		.p2align 4,,10
 11936 0185 0F1F00   		.p2align 3
 11937              	.L1196:
1072:fltk-1.3.4-1/png/pngread.c **** #else
 11938              		.loc 1 1072 7 view .LVU3493
 11939 0188 4C89E7   		movq	%r12, %rdi
 11940 018b E8000000 		call	png_set_strip_alpha@PLT
 11940      00
 11941              	.LVL1242:
 11942 0190 E9C0FEFF 		jmp	.L1125
 11942      FF
 11943              		.p2align 4,,10
 11944 0195 0F1F00   		.p2align 3
 11945              	.L1195:
1062:fltk-1.3.4-1/png/pngread.c **** #else
 11946              		.loc 1 1062 7 view .LVU3494
 11947 0198 4C89E7   		movq	%r12, %rdi
 11948 019b E8000000 		call	png_set_strip_16@PLT
 11948      00
 11949              	.LVL1243:
 11950 01a0 E9A7FEFF 		jmp	.L1124
 11950      FF
 11951              		.p2align 4,,10
 11952 01a5 0F1F00   		.p2align 3
 11953              	.L1194:
1051:fltk-1.3.4-1/png/pngread.c **** #else
 11954              		.loc 1 1051 7 view .LVU3495
 11955 01a8 4C89E7   		movq	%r12, %rdi
 11956 01ab E8000000 		call	png_set_scale_16@PLT
 11956      00
 11957              	.LVL1244:
 11958 01b0 E98EFEFF 		jmp	.L1123
 11958      FF
 11959              	.LVL1245:
 11960              		.p2align 4,,10
 11961 01b5 0F1F00   		.p2align 3
 11962              	.L1207:
1178:fltk-1.3.4-1/png/pngread.c **** #else
 11963              		.loc 1 1178 7 view .LVU3496
 11964 01b8 4C89E7   		movq	%r12, %rdi
 11965 01bb E8000000 		call	png_set_expand_16@PLT
 11965      00
 11966              	.LVL1246:
 11967 01c0 E9F9FEFF 		jmp	.L1136
 11967      FF
 11968              	.LVL1247:
 11969              		.p2align 4,,10
 11970 01c5 0F1F00   		.p2align 3
 11971              	.L1206:
1170:fltk-1.3.4-1/png/pngread.c **** #else
 11972              		.loc 1 1170 7 view .LVU3497
 11973 01c8 4C89E7   		movq	%r12, %rdi
 11974 01cb E8000000 		call	png_set_gray_to_rgb@PLT
 11974      00
 11975              	.LVL1248:
 11976 01d0 E9E0FEFF 		jmp	.L1135
 11976      FF
 11977              		.p2align 4,,10
 11978 01d5 0F1F00   		.p2align 3
 11979              	.L1205:
1161:fltk-1.3.4-1/png/pngread.c **** #else
 11980              		.loc 1 1161 7 view .LVU3498
 11981 01d8 4C89E7   		movq	%r12, %rdi
 11982 01db E8000000 		call	png_set_invert_alpha@PLT
 11982      00
 11983              	.LVL1249:
 11984 01e0 E9C7FEFF 		jmp	.L1134
 11984      FF
 11985              		.p2align 4,,10
 11986 01e5 0F1F00   		.p2align 3
 11987              	.L1204:
1152:fltk-1.3.4-1/png/pngread.c **** #else
 11988              		.loc 1 1152 7 view .LVU3499
 11989 01e8 4C89E7   		movq	%r12, %rdi
 11990 01eb E8000000 		call	png_set_swap@PLT
 11990      00
 11991              	.LVL1250:
 11992 01f0 E9AEFEFF 		jmp	.L1133
 11992      FF
 11993              		.p2align 4,,10
 11994 01f5 0F1F00   		.p2align 3
 11995              	.L1203:
1144:fltk-1.3.4-1/png/pngread.c **** #else
 11996              		.loc 1 1144 7 view .LVU3500
 11997 01f8 4C89E7   		movq	%r12, %rdi
 11998 01fb E8000000 		call	png_set_swap_alpha@PLT
 11998      00
 11999              	.LVL1251:
 12000 0200 E995FEFF 		jmp	.L1132
 12000      FF
 12001              		.p2align 4,,10
 12002 0205 0F1F00   		.p2align 3
 12003              	.L1202:
1136:fltk-1.3.4-1/png/pngread.c **** #else
 12004              		.loc 1 1136 7 view .LVU3501
 12005 0208 4C89E7   		movq	%r12, %rdi
 12006 020b E8000000 		call	png_set_bgr@PLT
 12006      00
 12007              	.LVL1252:
 12008 0210 E97CFEFF 		jmp	.L1131
 12008      FF
 12009              	.LVL1253:
 12010              		.p2align 4,,10
 12011 0215 0F1F00   		.p2align 3
 12012              	.L1190:
 12013              		.cfi_def_cfa_offset 8
 12014              		.cfi_restore 3
 12015              		.cfi_restore 6
 12016              		.cfi_restore 12
 12017              		.cfi_restore 13
1136:fltk-1.3.4-1/png/pngread.c **** #else
 12018              		.loc 1 1136 7 is_stmt 0 view .LVU3502
 12019 0218 C3       		ret
 12020              	.LVL1254:
 12021 0219 0F1F8000 		.p2align 4,,10
 12021      000000
 12022              		.p2align 3
 12023              	.L1208:
 12024              		.cfi_def_cfa_offset 48
 12025              		.cfi_offset 3, -40
 12026              		.cfi_offset 6, -32
 12027              		.cfi_offset 12, -24
 12028              		.cfi_offset 13, -16
 12029              	.LBB437:
1201:fltk-1.3.4-1/png/pngread.c **** 
 12030              		.loc 1 1201 7 is_stmt 1 view .LVU3503
1203:fltk-1.3.4-1/png/pngread.c ****           info_ptr->height * (sizeof (png_bytep))));
 12031              		.loc 1 1203 7 view .LVU3504
1203:fltk-1.3.4-1/png/pngread.c ****           info_ptr->height * (sizeof (png_bytep))));
 12032              		.loc 1 1203 32 is_stmt 0 view .LVU3505
 12033 0220 8B7504   		movl	4(%rbp), %esi
 12034 0223 4C89E7   		movq	%r12, %rdi
 12035 0226 48C1E603 		salq	$3, %rsi
 12036 022a E8000000 		call	png_malloc@PLT
 12036      00
 12037              	.LVL1255:
1203:fltk-1.3.4-1/png/pngread.c ****           info_ptr->height * (sizeof (png_bytep))));
 12038              		.loc 1 1203 30 view .LVU3506
 12039 022f 48898550 		movq	%rax, 336(%rbp)
 12039      010000
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12040              		.loc 1 1206 7 is_stmt 1 view .LVU3507
 12041              	.LVL1256:
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12042              		.loc 1 1206 20 view .LVU3508
1203:fltk-1.3.4-1/png/pngread.c ****           info_ptr->height * (sizeof (png_bytep))));
 12043              		.loc 1 1203 32 is_stmt 0 view .LVU3509
 12044 0236 4889C6   		movq	%rax, %rsi
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12045              		.loc 1 1206 7 view .LVU3510
 12046 0239 8B4504   		movl	4(%rbp), %eax
 12047 023c 85C0     		testl	%eax, %eax
 12048 023e 7462     		je	.L1138
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12049              		.loc 1 1206 16 view .LVU3511
 12050 0240 31C0     		xorl	%eax, %eax
 12051              	.LVL1257:
 12052              		.p2align 4,,10
 12053 0242 660F1F44 		.p2align 3
 12053      0000
 12054              	.L1141:
1207:fltk-1.3.4-1/png/pngread.c **** 
 12055              		.loc 1 1207 10 is_stmt 1 discriminator 3 view .LVU3512
1207:fltk-1.3.4-1/png/pngread.c **** 
 12056              		.loc 1 1207 32 is_stmt 0 discriminator 3 view .LVU3513
 12057 0248 89C2     		movl	%eax, %edx
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12058              		.loc 1 1206 47 discriminator 3 view .LVU3514
 12059 024a 83C001   		addl	$1, %eax
 12060              	.LVL1258:
1207:fltk-1.3.4-1/png/pngread.c **** 
 12061              		.loc 1 1207 39 discriminator 3 view .LVU3515
 12062 024d 48C704D6 		movq	$0, (%rsi,%rdx,8)
 12062      00000000 
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12063              		.loc 1 1206 43 is_stmt 1 discriminator 3 view .LVU3516
 12064              	.LVL1259:
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12065              		.loc 1 1206 20 discriminator 3 view .LVU3517
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12066              		.loc 1 1206 33 is_stmt 0 discriminator 3 view .LVU3518
 12067 0255 8B5504   		movl	4(%rbp), %edx
 12068 0258 488BB550 		movq	336(%rbp), %rsi
 12068      010000
1206:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = NULL;
 12069              		.loc 1 1206 7 discriminator 3 view .LVU3519
 12070 025f 39C2     		cmpl	%eax, %edx
 12071 0261 77E5     		ja	.L1141
1209:fltk-1.3.4-1/png/pngread.c **** 
 12072              		.loc 1 1209 7 is_stmt 1 view .LVU3520
1209:fltk-1.3.4-1/png/pngread.c **** 
 12073              		.loc 1 1209 25 is_stmt 0 view .LVU3521
 12074 0263 838D1C01 		orl	$64, 284(%rbp)
 12074      000040
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12075              		.loc 1 1211 7 is_stmt 1 view .LVU3522
 12076              	.LVL1260:
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12077              		.loc 1 1211 22 view .LVU3523
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12078              		.loc 1 1211 7 is_stmt 0 view .LVU3524
 12079 026a 85D2     		testl	%edx, %edx
 12080 026c 0F8481FE 		je	.L1137
 12080      FFFF
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12081              		.loc 1 1211 17 view .LVU3525
 12082 0272 31DB     		xorl	%ebx, %ebx
 12083              	.LVL1261:
 12084              		.p2align 4,,10
 12085 0274 0F1F4000 		.p2align 3
 12086              	.L1140:
1212:fltk-1.3.4-1/png/pngread.c ****             png_malloc(png_ptr, info_ptr->rowbytes));
 12087              		.loc 1 1212 10 is_stmt 1 discriminator 3 view .LVU3526
1212:fltk-1.3.4-1/png/pngread.c ****             png_malloc(png_ptr, info_ptr->rowbytes));
 12088              		.loc 1 1212 32 is_stmt 0 discriminator 3 view .LVU3527
 12089 0278 89D8     		movl	%ebx, %eax
1212:fltk-1.3.4-1/png/pngread.c ****             png_malloc(png_ptr, info_ptr->rowbytes));
 12090              		.loc 1 1212 41 discriminator 3 view .LVU3528
 12091 027a 4C89E7   		movq	%r12, %rdi
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12092              		.loc 1 1211 51 discriminator 3 view .LVU3529
 12093 027d 83C301   		addl	$1, %ebx
 12094              	.LVL1262:
1212:fltk-1.3.4-1/png/pngread.c ****             png_malloc(png_ptr, info_ptr->rowbytes));
 12095              		.loc 1 1212 32 discriminator 3 view .LVU3530
 12096 0280 4C8D2CC6 		leaq	(%rsi,%rax,8), %r13
1212:fltk-1.3.4-1/png/pngread.c ****             png_malloc(png_ptr, info_ptr->rowbytes));
 12097              		.loc 1 1212 41 discriminator 3 view .LVU3531
 12098 0284 488B7510 		movq	16(%rbp), %rsi
 12099 0288 E8000000 		call	png_malloc@PLT
 12099      00
 12100              	.LVL1263:
1212:fltk-1.3.4-1/png/pngread.c ****             png_malloc(png_ptr, info_ptr->rowbytes));
 12101              		.loc 1 1212 39 discriminator 3 view .LVU3532
 12102 028d 49894500 		movq	%rax, 0(%r13)
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12103              		.loc 1 1211 47 is_stmt 1 discriminator 3 view .LVU3533
 12104              	.LVL1264:
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12105              		.loc 1 1211 22 discriminator 3 view .LVU3534
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12106              		.loc 1 1211 7 is_stmt 0 discriminator 3 view .LVU3535
 12107 0291 395D04   		cmpl	%ebx, 4(%rbp)
 12108 0294 488BB550 		movq	336(%rbp), %rsi
 12108      010000
 12109 029b 77DB     		ja	.L1140
 12110 029d E951FEFF 		jmp	.L1137
 12110      FF
 12111              	.LVL1265:
 12112              	.L1138:
1209:fltk-1.3.4-1/png/pngread.c **** 
 12113              		.loc 1 1209 7 is_stmt 1 view .LVU3536
1209:fltk-1.3.4-1/png/pngread.c **** 
 12114              		.loc 1 1209 25 is_stmt 0 view .LVU3537
 12115 02a2 838D1C01 		orl	$64, 284(%rbp)
 12115      000040
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12116              		.loc 1 1211 7 is_stmt 1 view .LVU3538
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12117              		.loc 1 1211 22 view .LVU3539
 12118 02a9 E945FEFF 		jmp	.L1137
 12118      FF
 12119              	.LVL1266:
 12120              	.L1193:
1211:fltk-1.3.4-1/png/pngread.c ****          info_ptr->row_pointers[iptr] = png_voidcast(png_bytep,
 12121              		.loc 1 1211 22 is_stmt 0 view .LVU3540
 12122              	.LBE437:
1035:fltk-1.3.4-1/png/pngread.c **** 
 12123              		.loc 1 1035 7 is_stmt 1 view .LVU3541
 12124 02ae 488D3500 		leaq	.LC46(%rip), %rsi
 12124      000000
 12125 02b5 4C89E7   		movq	%r12, %rdi
 12126 02b8 E8000000 		call	png_error@PLT
 12126      00
 12127              	.LVL1267:
 12128              		.cfi_endproc
 12129              	.LFE54:
 12131              		.section	.rodata.png_image_begin_read_from_stdio.str1.8,"aMS",@progbits,1
 12132              		.align 8
 12133              	.LC47:
 12134 0000 706E675F 		.string	"png_image_begin_read_from_stdio: invalid argument"
 12134      696D6167 
 12134      655F6265 
 12134      67696E5F 
 12134      72656164 
 12135 0032 00000000 		.align 8
 12135      0000
 12136              	.LC48:
 12137 0038 706E675F 		.string	"png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION"
 12137      696D6167 
 12137      655F6265 
 12137      67696E5F 
 12137      72656164 
 12138              		.section	.text.png_image_begin_read_from_stdio,"ax",@progbits
 12139              		.p2align 4
 12140              		.globl	png_image_begin_read_from_stdio
 12142              	png_image_begin_read_from_stdio:
 12143              	.LVL1268:
 12144              	.LFB59:
1446:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12145              		.loc 1 1446 1 view -0
 12146              		.cfi_startproc
1446:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12147              		.loc 1 1446 1 is_stmt 0 view .LVU3543
 12148 0000 F30F1EFA 		endbr64
1447:fltk-1.3.4-1/png/pngread.c ****    {
 12149              		.loc 1 1447 4 is_stmt 1 view .LVU3544
1447:fltk-1.3.4-1/png/pngread.c ****    {
 12150              		.loc 1 1447 7 is_stmt 0 view .LVU3545
 12151 0004 4885FF   		testq	%rdi, %rdi
 12152 0007 7447     		je	.L1219
1447:fltk-1.3.4-1/png/pngread.c ****    {
 12153              		.loc 1 1447 22 discriminator 1 view .LVU3546
 12154 0009 837F0801 		cmpl	$1, 8(%rdi)
 12155 000d 7411     		je	.L1222
1467:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image,
 12156              		.loc 1 1467 9 is_stmt 1 view .LVU3547
1468:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION");
 12157              		.loc 1 1468 7 view .LVU3548
1468:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION");
 12158              		.loc 1 1468 14 is_stmt 0 view .LVU3549
 12159 000f 488D3500 		leaq	.LC48(%rip), %rsi
 12159      000000
 12160              	.LVL1269:
1468:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION");
 12161              		.loc 1 1468 14 view .LVU3550
 12162 0016 E9000000 		jmp	png_image_error@PLT
 12162      00
 12163              	.LVL1270:
 12164 001b 0F1F4400 		.p2align 4,,10
 12164      00
 12165              		.p2align 3
 12166              	.L1222:
1446:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12167              		.loc 1 1446 1 view .LVU3551
 12168 0020 53       		pushq	%rbx
 12169              		.cfi_def_cfa_offset 16
 12170              		.cfi_offset 3, -16
 12171 0021 4889F3   		movq	%rsi, %rbx
1449:fltk-1.3.4-1/png/pngread.c ****       {
 12172              		.loc 1 1449 7 is_stmt 1 view .LVU3552
1446:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12173              		.loc 1 1446 1 is_stmt 0 view .LVU3553
 12174 0024 4883EC10 		subq	$16, %rsp
 12175              		.cfi_def_cfa_offset 32
1449:fltk-1.3.4-1/png/pngread.c ****       {
 12176              		.loc 1 1449 10 view .LVU3554
 12177 0028 4885F6   		testq	%rsi, %rsi
 12178 002b 742B     		je	.L1213
 12179              	.LVL1271:
1451:fltk-1.3.4-1/png/pngread.c ****          {
 12180              		.loc 1 1451 10 is_stmt 1 view .LVU3555
1451:fltk-1.3.4-1/png/pngread.c ****          {
 12181              		.loc 1 1451 14 is_stmt 0 view .LVU3556
 12182 002d 48897C24 		movq	%rdi, 8(%rsp)
 12182      08
 12183 0032 E8000000 		call	png_image_read_init
 12183      00
 12184              	.LVL1272:
1451:fltk-1.3.4-1/png/pngread.c ****          {
 12185              		.loc 1 1451 13 view .LVU3557
 12186 0037 488B7C24 		movq	8(%rsp), %rdi
 12186      08
 12187 003c 85C0     		testl	%eax, %eax
 12188 003e 7530     		jne	.L1223
1472:fltk-1.3.4-1/png/pngread.c **** 
 12189              		.loc 1 1472 1 view .LVU3558
 12190 0040 4883C410 		addq	$16, %rsp
 12191              		.cfi_def_cfa_offset 16
 12192 0044 31C0     		xorl	%eax, %eax
 12193 0046 5B       		popq	%rbx
 12194              		.cfi_def_cfa_offset 8
 12195              	.LVL1273:
1472:fltk-1.3.4-1/png/pngread.c **** 
 12196              		.loc 1 1472 1 view .LVU3559
 12197 0047 C3       		ret
 12198              	.LVL1274:
 12199 0048 0F1F8400 		.p2align 4,,10
 12199      00000000 
 12200              		.p2align 3
 12201              	.L1219:
 12202              		.cfi_restore 3
1472:fltk-1.3.4-1/png/pngread.c **** 
 12203              		.loc 1 1472 1 view .LVU3560
 12204 0050 31C0     		xorl	%eax, %eax
 12205 0052 C3       		ret
 12206              	.LVL1275:
 12207              		.p2align 4,,10
 12208 0053 0F1F4400 		.p2align 3
 12208      00
 12209              	.L1213:
 12210              		.cfi_def_cfa_offset 32
 12211              		.cfi_offset 3, -16
1463:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_stdio: invalid argument");
 12212              		.loc 1 1463 10 is_stmt 1 view .LVU3561
1472:fltk-1.3.4-1/png/pngread.c **** 
 12213              		.loc 1 1472 1 is_stmt 0 view .LVU3562
 12214 0058 4883C410 		addq	$16, %rsp
 12215              		.cfi_remember_state
 12216              		.cfi_def_cfa_offset 16
1463:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_stdio: invalid argument");
 12217              		.loc 1 1463 17 view .LVU3563
 12218 005c 488D3500 		leaq	.LC47(%rip), %rsi
 12218      000000
1472:fltk-1.3.4-1/png/pngread.c **** 
 12219              		.loc 1 1472 1 view .LVU3564
 12220 0063 5B       		popq	%rbx
 12221              		.cfi_restore 3
 12222              		.cfi_def_cfa_offset 8
 12223              	.LVL1276:
1463:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_stdio: invalid argument");
 12224              		.loc 1 1463 17 view .LVU3565
 12225 0064 E9000000 		jmp	png_image_error@PLT
 12225      00
 12226              	.LVL1277:
 12227 0069 0F1F8000 		.p2align 4,,10
 12227      000000
 12228              		.p2align 3
 12229              	.L1223:
 12230              		.cfi_restore_state
1457:fltk-1.3.4-1/png/pngread.c ****             return png_safe_execute(image, png_image_read_header, image);
 12231              		.loc 1 1457 13 is_stmt 1 view .LVU3566
1457:fltk-1.3.4-1/png/pngread.c ****             return png_safe_execute(image, png_image_read_header, image);
 12232              		.loc 1 1457 26 is_stmt 0 view .LVU3567
 12233 0070 488B07   		movq	(%rdi), %rax
1458:fltk-1.3.4-1/png/pngread.c ****          }
 12234              		.loc 1 1458 20 view .LVU3568
 12235 0073 4889FA   		movq	%rdi, %rdx
 12236 0076 488D3500 		leaq	png_image_read_header(%rip), %rsi
 12236      000000
1457:fltk-1.3.4-1/png/pngread.c ****             return png_safe_execute(image, png_image_read_header, image);
 12237              		.loc 1 1457 26 view .LVU3569
 12238 007d 488B00   		movq	(%rax), %rax
1457:fltk-1.3.4-1/png/pngread.c ****             return png_safe_execute(image, png_image_read_header, image);
 12239              		.loc 1 1457 44 view .LVU3570
 12240 0080 48899808 		movq	%rbx, 264(%rax)
 12240      010000
1458:fltk-1.3.4-1/png/pngread.c ****          }
 12241              		.loc 1 1458 13 is_stmt 1 view .LVU3571
1472:fltk-1.3.4-1/png/pngread.c **** 
 12242              		.loc 1 1472 1 is_stmt 0 view .LVU3572
 12243 0087 4883C410 		addq	$16, %rsp
 12244              		.cfi_def_cfa_offset 16
 12245 008b 5B       		popq	%rbx
 12246              		.cfi_restore 3
 12247              		.cfi_def_cfa_offset 8
 12248              	.LVL1278:
1458:fltk-1.3.4-1/png/pngread.c ****          }
 12249              		.loc 1 1458 20 view .LVU3573
 12250 008c E9000000 		jmp	png_safe_execute@PLT
 12250      00
 12251              	.LVL1279:
1458:fltk-1.3.4-1/png/pngread.c ****          }
 12252              		.loc 1 1458 20 view .LVU3574
 12253              		.cfi_endproc
 12254              	.LFE59:
 12256              		.section	.rodata.png_image_begin_read_from_file.str1.1,"aMS",@progbits,1
 12257              	.LC49:
 12258 0000 726200   		.string	"rb"
 12259              		.section	.rodata.png_image_begin_read_from_file.str1.8,"aMS",@progbits,1
 12260              		.align 8
 12261              	.LC50:
 12262 0000 706E675F 		.string	"png_image_begin_read_from_file: invalid argument"
 12262      696D6167 
 12262      655F6265 
 12262      67696E5F 
 12262      72656164 
 12263 0031 00000000 		.align 8
 12263      000000
 12264              	.LC51:
 12265 0038 706E675F 		.string	"png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION"
 12265      696D6167 
 12265      655F6265 
 12265      67696E5F 
 12265      72656164 
 12266              		.section	.text.png_image_begin_read_from_file,"ax",@progbits
 12267              		.p2align 4
 12268              		.globl	png_image_begin_read_from_file
 12270              	png_image_begin_read_from_file:
 12271              	.LVL1280:
 12272              	.LFB60:
1476:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12273              		.loc 1 1476 1 is_stmt 1 view -0
 12274              		.cfi_startproc
1476:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12275              		.loc 1 1476 1 is_stmt 0 view .LVU3576
 12276 0000 F30F1EFA 		endbr64
1477:fltk-1.3.4-1/png/pngread.c ****    {
 12277              		.loc 1 1477 4 is_stmt 1 view .LVU3577
1476:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12278              		.loc 1 1476 1 is_stmt 0 view .LVU3578
 12279 0004 4154     		pushq	%r12
 12280              		.cfi_def_cfa_offset 16
 12281              		.cfi_offset 12, -16
 12282 0006 55       		pushq	%rbp
 12283              		.cfi_def_cfa_offset 24
 12284              		.cfi_offset 6, -24
 12285 0007 4889FD   		movq	%rdi, %rbp
 12286 000a 4883EC08 		subq	$8, %rsp
 12287              		.cfi_def_cfa_offset 32
1477:fltk-1.3.4-1/png/pngread.c ****    {
 12288              		.loc 1 1477 7 view .LVU3579
 12289 000e 4885FF   		testq	%rdi, %rdi
 12290 0011 744D     		je	.L1224
1477:fltk-1.3.4-1/png/pngread.c ****    {
 12291              		.loc 1 1477 22 discriminator 1 view .LVU3580
 12292 0013 837F0801 		cmpl	$1, 8(%rdi)
 12293 0017 7417     		je	.L1233
1505:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image,
 12294              		.loc 1 1505 9 is_stmt 1 view .LVU3581
1506:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION");
 12295              		.loc 1 1506 7 view .LVU3582
1506:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION");
 12296              		.loc 1 1506 14 is_stmt 0 view .LVU3583
 12297 0019 488D3500 		leaq	.LC51(%rip), %rsi
 12297      000000
 12298              	.LVL1281:
 12299              	.L1232:
1510:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
 12300              		.loc 1 1510 1 view .LVU3584
 12301 0020 4883C408 		addq	$8, %rsp
 12302              		.cfi_remember_state
 12303              		.cfi_def_cfa_offset 24
1506:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION");
 12304              		.loc 1 1506 14 view .LVU3585
 12305 0024 4889EF   		movq	%rbp, %rdi
1510:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
 12306              		.loc 1 1510 1 view .LVU3586
 12307 0027 5D       		popq	%rbp
 12308              		.cfi_def_cfa_offset 16
 12309              	.LVL1282:
1510:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
 12310              		.loc 1 1510 1 view .LVU3587
 12311 0028 415C     		popq	%r12
 12312              		.cfi_def_cfa_offset 8
1506:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION");
 12313              		.loc 1 1506 14 view .LVU3588
 12314 002a E9000000 		jmp	png_image_error@PLT
 12314      00
 12315              	.LVL1283:
 12316 002f 90       		.p2align 4,,10
 12317              		.p2align 3
 12318              	.L1233:
 12319              		.cfi_restore_state
1506:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION");
 12320              		.loc 1 1506 14 view .LVU3589
 12321 0030 4889F7   		movq	%rsi, %rdi
 12322              	.LVL1284:
1479:fltk-1.3.4-1/png/pngread.c ****       {
 12323              		.loc 1 1479 7 is_stmt 1 view .LVU3590
1479:fltk-1.3.4-1/png/pngread.c ****       {
 12324              		.loc 1 1479 10 is_stmt 0 view .LVU3591
 12325 0033 4885F6   		testq	%rsi, %rsi
 12326 0036 7468     		je	.L1227
 12327              	.LBB438:
1481:fltk-1.3.4-1/png/pngread.c **** 
 12328              		.loc 1 1481 10 is_stmt 1 view .LVU3592
1481:fltk-1.3.4-1/png/pngread.c **** 
 12329              		.loc 1 1481 21 is_stmt 0 view .LVU3593
 12330 0038 488D3500 		leaq	.LC49(%rip), %rsi
 12330      000000
 12331              	.LVL1285:
1481:fltk-1.3.4-1/png/pngread.c **** 
 12332              		.loc 1 1481 21 view .LVU3594
 12333 003f E8000000 		call	fopen@PLT
 12333      00
 12334              	.LVL1286:
1481:fltk-1.3.4-1/png/pngread.c **** 
 12335              		.loc 1 1481 21 view .LVU3595
 12336 0044 4989C4   		movq	%rax, %r12
 12337              	.LVL1287:
1483:fltk-1.3.4-1/png/pngread.c ****          {
 12338              		.loc 1 1483 10 is_stmt 1 view .LVU3596
1483:fltk-1.3.4-1/png/pngread.c ****          {
 12339              		.loc 1 1483 13 is_stmt 0 view .LVU3597
 12340 0047 4885C0   		testq	%rax, %rax
 12341 004a 7464     		je	.L1228
1485:fltk-1.3.4-1/png/pngread.c ****             {
 12342              		.loc 1 1485 13 is_stmt 1 view .LVU3598
1485:fltk-1.3.4-1/png/pngread.c ****             {
 12343              		.loc 1 1485 17 is_stmt 0 view .LVU3599
 12344 004c 4889EF   		movq	%rbp, %rdi
 12345 004f E8000000 		call	png_image_read_init
 12345      00
 12346              	.LVL1288:
1485:fltk-1.3.4-1/png/pngread.c ****             {
 12347              		.loc 1 1485 16 view .LVU3600
 12348 0054 85C0     		testl	%eax, %eax
 12349 0056 7518     		jne	.L1234
1493:fltk-1.3.4-1/png/pngread.c ****          }
 12350              		.loc 1 1493 13 is_stmt 1 view .LVU3601
1493:fltk-1.3.4-1/png/pngread.c ****          }
 12351              		.loc 1 1493 19 is_stmt 0 view .LVU3602
 12352 0058 4C89E7   		movq	%r12, %rdi
 12353 005b E8000000 		call	fclose@PLT
 12353      00
 12354              	.LVL1289:
 12355              	.L1224:
1493:fltk-1.3.4-1/png/pngread.c ****          }
 12356              		.loc 1 1493 19 view .LVU3603
 12357              	.LBE438:
1510:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
 12358              		.loc 1 1510 1 view .LVU3604
 12359 0060 4883C408 		addq	$8, %rsp
 12360              		.cfi_remember_state
 12361              		.cfi_def_cfa_offset 24
 12362 0064 31C0     		xorl	%eax, %eax
 12363 0066 5D       		popq	%rbp
 12364              		.cfi_def_cfa_offset 16
 12365              	.LVL1290:
1510:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
 12366              		.loc 1 1510 1 view .LVU3605
 12367 0067 415C     		popq	%r12
 12368              		.cfi_def_cfa_offset 8
 12369 0069 C3       		ret
 12370              	.LVL1291:
 12371 006a 660F1F44 		.p2align 4,,10
 12371      0000
 12372              		.p2align 3
 12373              	.L1234:
 12374              		.cfi_restore_state
 12375              	.LBB439:
1487:fltk-1.3.4-1/png/pngread.c ****                image->opaque->owned_file = 1;
 12376              		.loc 1 1487 16 is_stmt 1 view .LVU3606
1487:fltk-1.3.4-1/png/pngread.c ****                image->opaque->owned_file = 1;
 12377              		.loc 1 1487 29 is_stmt 0 view .LVU3607
 12378 0070 488B4500 		movq	0(%rbp), %rax
1489:fltk-1.3.4-1/png/pngread.c ****             }
 12379              		.loc 1 1489 23 view .LVU3608
 12380 0074 4889EA   		movq	%rbp, %rdx
 12381 0077 4889EF   		movq	%rbp, %rdi
 12382 007a 488D3500 		leaq	png_image_read_header(%rip), %rsi
 12382      000000
1487:fltk-1.3.4-1/png/pngread.c ****                image->opaque->owned_file = 1;
 12383              		.loc 1 1487 29 view .LVU3609
 12384 0081 488B00   		movq	(%rax), %rax
1487:fltk-1.3.4-1/png/pngread.c ****                image->opaque->owned_file = 1;
 12385              		.loc 1 1487 47 view .LVU3610
 12386 0084 4C89A008 		movq	%r12, 264(%rax)
 12386      010000
1488:fltk-1.3.4-1/png/pngread.c ****                return png_safe_execute(image, png_image_read_header, image);
 12387              		.loc 1 1488 16 is_stmt 1 view .LVU3611
1488:fltk-1.3.4-1/png/pngread.c ****                return png_safe_execute(image, png_image_read_header, image);
 12388              		.loc 1 1488 21 is_stmt 0 view .LVU3612
 12389 008b 488B4500 		movq	0(%rbp), %rax
1488:fltk-1.3.4-1/png/pngread.c ****                return png_safe_execute(image, png_image_read_header, image);
 12390              		.loc 1 1488 42 view .LVU3613
 12391 008f 80482802 		orb	$2, 40(%rax)
1489:fltk-1.3.4-1/png/pngread.c ****             }
 12392              		.loc 1 1489 16 is_stmt 1 view .LVU3614
 12393              	.LBE439:
1510:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
 12394              		.loc 1 1510 1 is_stmt 0 view .LVU3615
 12395 0093 4883C408 		addq	$8, %rsp
 12396              		.cfi_remember_state
 12397              		.cfi_def_cfa_offset 24
 12398 0097 5D       		popq	%rbp
 12399              		.cfi_def_cfa_offset 16
 12400              	.LVL1292:
1510:fltk-1.3.4-1/png/pngread.c **** #endif /* STDIO */
 12401              		.loc 1 1510 1 view .LVU3616
 12402 0098 415C     		popq	%r12
 12403              		.cfi_def_cfa_offset 8
 12404              	.LVL1293:
 12405              	.LBB440:
1489:fltk-1.3.4-1/png/pngread.c ****             }
 12406              		.loc 1 1489 23 view .LVU3617
 12407 009a E9000000 		jmp	png_safe_execute@PLT
 12407      00
 12408              	.LVL1294:
 12409 009f 90       		.p2align 4,,10
 12410              		.p2align 3
 12411              	.L1227:
 12412              		.cfi_restore_state
1489:fltk-1.3.4-1/png/pngread.c ****             }
 12413              		.loc 1 1489 23 view .LVU3618
 12414              	.LBE440:
1501:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_file: invalid argument");
 12415              		.loc 1 1501 10 is_stmt 1 view .LVU3619
1501:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_file: invalid argument");
 12416              		.loc 1 1501 17 is_stmt 0 view .LVU3620
 12417 00a0 488D3500 		leaq	.LC50(%rip), %rsi
 12417      000000
 12418              	.LVL1295:
1501:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_file: invalid argument");
 12419              		.loc 1 1501 17 view .LVU3621
 12420 00a7 E974FFFF 		jmp	.L1232
 12420      FF
 12421              	.LVL1296:
 12422 00ac 0F1F4000 		.p2align 4,,10
 12423              		.p2align 3
 12424              	.L1228:
 12425              	.LBB441:
1497:fltk-1.3.4-1/png/pngread.c ****       }
 12426              		.loc 1 1497 13 is_stmt 1 view .LVU3622
1497:fltk-1.3.4-1/png/pngread.c ****       }
 12427              		.loc 1 1497 52 is_stmt 0 view .LVU3623
 12428 00b0 E8000000 		call	__errno_location@PLT
 12428      00
 12429              	.LVL1297:
1497:fltk-1.3.4-1/png/pngread.c ****       }
 12430              		.loc 1 1497 43 view .LVU3624
 12431 00b5 8B38     		movl	(%rax), %edi
 12432 00b7 E8000000 		call	strerror@PLT
 12432      00
 12433              	.LVL1298:
 12434 00bc 4889C6   		movq	%rax, %rsi
 12435 00bf E95CFFFF 		jmp	.L1232
 12435      FF
 12436              	.LBE441:
 12437              		.cfi_endproc
 12438              	.LFE60:
 12440              		.section	.rodata.png_image_begin_read_from_memory.str1.8,"aMS",@progbits,1
 12441              		.align 8
 12442              	.LC52:
 12443 0000 706E675F 		.string	"png_image_begin_read_from_memory: invalid argument"
 12443      696D6167 
 12443      655F6265 
 12443      67696E5F 
 12443      72656164 
 12444 0033 00000000 		.align 8
 12444      00
 12445              	.LC53:
 12446 0038 706E675F 		.string	"png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION"
 12446      696D6167 
 12446      655F6265 
 12446      67696E5F 
 12446      72656164 
 12447              		.section	.text.png_image_begin_read_from_memory,"ax",@progbits
 12448              		.p2align 4
 12449              		.globl	png_image_begin_read_from_memory
 12451              	png_image_begin_read_from_memory:
 12452              	.LVL1299:
 12453              	.LFB62:
1545:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12454              		.loc 1 1545 1 is_stmt 1 view -0
 12455              		.cfi_startproc
1545:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12456              		.loc 1 1545 1 is_stmt 0 view .LVU3626
 12457 0000 F30F1EFA 		endbr64
1546:fltk-1.3.4-1/png/pngread.c ****    {
 12458              		.loc 1 1546 4 is_stmt 1 view .LVU3627
1546:fltk-1.3.4-1/png/pngread.c ****    {
 12459              		.loc 1 1546 7 is_stmt 0 view .LVU3628
 12460 0004 4885FF   		testq	%rdi, %rdi
 12461 0007 7457     		je	.L1251
1546:fltk-1.3.4-1/png/pngread.c ****    {
 12462              		.loc 1 1546 22 discriminator 1 view .LVU3629
 12463 0009 837F0801 		cmpl	$1, 8(%rdi)
 12464 000d 7411     		je	.L1254
1570:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image,
 12465              		.loc 1 1570 9 is_stmt 1 view .LVU3630
1571:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION");
 12466              		.loc 1 1571 7 view .LVU3631
1571:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION");
 12467              		.loc 1 1571 14 is_stmt 0 view .LVU3632
 12468 000f 488D3500 		leaq	.LC53(%rip), %rsi
 12468      000000
 12469              	.LVL1300:
1571:fltk-1.3.4-1/png/pngread.c ****          "png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION");
 12470              		.loc 1 1571 14 view .LVU3633
 12471 0016 E9000000 		jmp	png_image_error@PLT
 12471      00
 12472              	.LVL1301:
 12473 001b 0F1F4400 		.p2align 4,,10
 12473      00
 12474              		.p2align 3
 12475              	.L1254:
1548:fltk-1.3.4-1/png/pngread.c ****       {
 12476              		.loc 1 1548 7 is_stmt 1 view .LVU3634
1545:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12477              		.loc 1 1545 1 is_stmt 0 view .LVU3635
 12478 0020 4883EC28 		subq	$40, %rsp
 12479              		.cfi_def_cfa_offset 48
1548:fltk-1.3.4-1/png/pngread.c ****       {
 12480              		.loc 1 1548 10 view .LVU3636
 12481 0024 4885F6   		testq	%rsi, %rsi
 12482 0027 48897424 		movq	%rsi, 8(%rsp)
 12482      08
 12483 002c 743A     		je	.L1239
1548:fltk-1.3.4-1/png/pngread.c ****       {
 12484              		.loc 1 1548 10 view .LVU3637
 12485 002e 4885D2   		testq	%rdx, %rdx
 12486 0031 48895424 		movq	%rdx, 16(%rsp)
 12486      10
 12487 0036 7430     		je	.L1239
1550:fltk-1.3.4-1/png/pngread.c ****          {
 12488              		.loc 1 1550 10 is_stmt 1 view .LVU3638
1550:fltk-1.3.4-1/png/pngread.c ****          {
 12489              		.loc 1 1550 14 is_stmt 0 view .LVU3639
 12490 0038 48897C24 		movq	%rdi, 24(%rsp)
 12490      18
 12491 003d E8000000 		call	png_image_read_init
 12491      00
 12492              	.LVL1302:
1550:fltk-1.3.4-1/png/pngread.c ****          {
 12493              		.loc 1 1550 13 view .LVU3640
 12494 0042 488B7C24 		movq	24(%rsp), %rdi
 12494      18
 12495 0047 488B5424 		movq	16(%rsp), %rdx
 12495      10
 12496 004c 85C0     		testl	%eax, %eax
 12497 004e 488B7424 		movq	8(%rsp), %rsi
 12497      08
 12498 0053 752B     		jne	.L1255
1575:fltk-1.3.4-1/png/pngread.c **** 
 12499              		.loc 1 1575 1 view .LVU3641
 12500 0055 31C0     		xorl	%eax, %eax
 12501 0057 4883C428 		addq	$40, %rsp
 12502              		.cfi_def_cfa_offset 8
 12503 005b C3       		ret
 12504              	.LVL1303:
 12505 005c 0F1F4000 		.p2align 4,,10
 12506              		.p2align 3
 12507              	.L1251:
1575:fltk-1.3.4-1/png/pngread.c **** 
 12508              		.loc 1 1575 1 view .LVU3642
 12509 0060 31C0     		xorl	%eax, %eax
 12510 0062 C3       		ret
 12511              		.p2align 4,,10
 12512 0063 0F1F4400 		.p2align 3
 12512      00
 12513              	.L1239:
 12514              		.cfi_def_cfa_offset 48
1566:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_memory: invalid argument");
 12515              		.loc 1 1566 10 is_stmt 1 view .LVU3643
1566:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_memory: invalid argument");
 12516              		.loc 1 1566 17 is_stmt 0 view .LVU3644
 12517 0068 488D3500 		leaq	.LC52(%rip), %rsi
 12517      000000
 12518              	.LVL1304:
1575:fltk-1.3.4-1/png/pngread.c **** 
 12519              		.loc 1 1575 1 view .LVU3645
 12520 006f 4883C428 		addq	$40, %rsp
 12521              		.cfi_remember_state
 12522              		.cfi_def_cfa_offset 8
1566:fltk-1.3.4-1/png/pngread.c ****             "png_image_begin_read_from_memory: invalid argument");
 12523              		.loc 1 1566 17 view .LVU3646
 12524 0073 E9000000 		jmp	png_image_error@PLT
 12524      00
 12525              	.LVL1305:
 12526 0078 0F1F8400 		.p2align 4,,10
 12526      00000000 
 12527              		.p2align 3
 12528              	.L1255:
 12529              		.cfi_restore_state
1556:fltk-1.3.4-1/png/pngread.c ****             image->opaque->size = size;
 12530              		.loc 1 1556 13 is_stmt 1 view .LVU3647
1556:fltk-1.3.4-1/png/pngread.c ****             image->opaque->size = size;
 12531              		.loc 1 1556 18 is_stmt 0 view .LVU3648
 12532 0080 488B07   		movq	(%rdi), %rax
1559:fltk-1.3.4-1/png/pngread.c **** 
 12533              		.loc 1 1559 50 view .LVU3649
 12534 0083 488D0D00 		leaq	png_image_memory_read(%rip), %rcx
 12534      000000
1556:fltk-1.3.4-1/png/pngread.c ****             image->opaque->size = size;
 12535              		.loc 1 1556 35 view .LVU3650
 12536 008a 48897018 		movq	%rsi, 24(%rax)
1557:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->io_ptr = image;
 12537              		.loc 1 1557 13 is_stmt 1 view .LVU3651
1557:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->io_ptr = image;
 12538              		.loc 1 1557 18 is_stmt 0 view .LVU3652
 12539 008e 488B07   		movq	(%rdi), %rax
1561:fltk-1.3.4-1/png/pngread.c ****          }
 12540              		.loc 1 1561 20 view .LVU3653
 12541 0091 488D3500 		leaq	png_image_read_header(%rip), %rsi
 12541      000000
1557:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->io_ptr = image;
 12542              		.loc 1 1557 33 view .LVU3654
 12543 0098 48895020 		movq	%rdx, 32(%rax)
1558:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->read_data_fn = png_image_memory_read;
 12544              		.loc 1 1558 13 is_stmt 1 view .LVU3655
1558:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->read_data_fn = png_image_memory_read;
 12545              		.loc 1 1558 26 is_stmt 0 view .LVU3656
 12546 009c 488B07   		movq	(%rdi), %rax
1561:fltk-1.3.4-1/png/pngread.c ****          }
 12547              		.loc 1 1561 20 view .LVU3657
 12548 009f 4889FA   		movq	%rdi, %rdx
1558:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->read_data_fn = png_image_memory_read;
 12549              		.loc 1 1558 26 view .LVU3658
 12550 00a2 488B00   		movq	(%rax), %rax
1558:fltk-1.3.4-1/png/pngread.c ****             image->opaque->png_ptr->read_data_fn = png_image_memory_read;
 12551              		.loc 1 1558 44 view .LVU3659
 12552 00a5 4889B808 		movq	%rdi, 264(%rax)
 12552      010000
1559:fltk-1.3.4-1/png/pngread.c **** 
 12553              		.loc 1 1559 13 is_stmt 1 view .LVU3660
1559:fltk-1.3.4-1/png/pngread.c **** 
 12554              		.loc 1 1559 26 is_stmt 0 view .LVU3661
 12555 00ac 488B07   		movq	(%rdi), %rax
 12556 00af 488B00   		movq	(%rax), %rax
1559:fltk-1.3.4-1/png/pngread.c **** 
 12557              		.loc 1 1559 50 view .LVU3662
 12558 00b2 48898800 		movq	%rcx, 256(%rax)
 12558      010000
1561:fltk-1.3.4-1/png/pngread.c ****          }
 12559              		.loc 1 1561 13 is_stmt 1 view .LVU3663
1575:fltk-1.3.4-1/png/pngread.c **** 
 12560              		.loc 1 1575 1 is_stmt 0 view .LVU3664
 12561 00b9 4883C428 		addq	$40, %rsp
 12562              		.cfi_def_cfa_offset 8
1561:fltk-1.3.4-1/png/pngread.c ****          }
 12563              		.loc 1 1561 20 view .LVU3665
 12564 00bd E9000000 		jmp	png_safe_execute@PLT
 12564      00
 12565              	.LVL1306:
 12566              		.cfi_endproc
 12567              	.LFE62:
 12569              		.section	.rodata.png_image_finish_read.str1.8,"aMS",@progbits,1
 12570              		.align 8
 12571              	.LC54:
 12572 0000 706E675F 		.string	"png_image_finish_read[color-map]: no color-map"
 12572      696D6167 
 12572      655F6669 
 12572      6E697368 
 12572      5F726561 
 12573 002f 00       		.align 8
 12574              	.LC55:
 12575 0030 706E675F 		.string	"png_image_finish_read: invalid argument"
 12575      696D6167 
 12575      655F6669 
 12575      6E697368 
 12575      5F726561 
 12576              		.align 8
 12577              	.LC56:
 12578 0058 706E675F 		.string	"png_image_finish_read: damaged PNG_IMAGE_VERSION"
 12578      696D6167 
 12578      655F6669 
 12578      6E697368 
 12578      5F726561 
 12579              		.section	.text.png_image_finish_read,"ax",@progbits
 12580              		.p2align 4
 12581              		.globl	png_image_finish_read
 12583              	png_image_finish_read:
 12584              	.LVL1307:
 12585              	.LFB78:
4052:fltk-1.3.4-1/png/pngread.c **** 
4053:fltk-1.3.4-1/png/pngread.c **** int PNGAPI
4054:fltk-1.3.4-1/png/pngread.c **** png_image_finish_read(png_imagep image, png_const_colorp background,
4055:fltk-1.3.4-1/png/pngread.c ****    void *buffer, png_int_32 row_stride, void *colormap)
4056:fltk-1.3.4-1/png/pngread.c **** {
 12586              		.loc 1 4056 1 is_stmt 1 view -0
 12587              		.cfi_startproc
 12588              		.loc 1 4056 1 is_stmt 0 view .LVU3667
 12589 0000 F30F1EFA 		endbr64
 12590 0004 4154     		pushq	%r12
 12591              		.cfi_def_cfa_offset 16
 12592              		.cfi_offset 12, -16
 12593 0006 4883EC70 		subq	$112, %rsp
 12594              		.cfi_def_cfa_offset 128
 12595              		.loc 1 4056 1 view .LVU3668
 12596 000a 64488B04 		movq	%fs:40, %rax
 12596      25280000 
 12596      00
 12597 0013 48894424 		movq	%rax, 104(%rsp)
 12597      68
 12598 0018 31C0     		xorl	%eax, %eax
4057:fltk-1.3.4-1/png/pngread.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 12599              		.loc 1 4057 4 is_stmt 1 view .LVU3669
 12600              		.loc 1 4057 7 is_stmt 0 view .LVU3670
 12601 001a 4885FF   		testq	%rdi, %rdi
 12602 001d 7414     		je	.L1256
 12603              		.loc 1 4057 30 discriminator 1 view .LVU3671
 12604 001f 8B4708   		movl	8(%rdi), %eax
 12605              		.loc 1 4057 22 discriminator 1 view .LVU3672
 12606 0022 83F801   		cmpl	$1, %eax
 12607 0025 7429     		je	.L1285
4058:fltk-1.3.4-1/png/pngread.c ****    {
4059:fltk-1.3.4-1/png/pngread.c ****       png_uint_32 check;
4060:fltk-1.3.4-1/png/pngread.c **** 
4061:fltk-1.3.4-1/png/pngread.c ****       if (row_stride == 0)
4062:fltk-1.3.4-1/png/pngread.c ****          row_stride = PNG_IMAGE_ROW_STRIDE(*image);
4063:fltk-1.3.4-1/png/pngread.c **** 
4064:fltk-1.3.4-1/png/pngread.c ****       if (row_stride < 0)
4065:fltk-1.3.4-1/png/pngread.c ****          check = -row_stride;
4066:fltk-1.3.4-1/png/pngread.c **** 
4067:fltk-1.3.4-1/png/pngread.c ****       else
4068:fltk-1.3.4-1/png/pngread.c ****          check = row_stride;
4069:fltk-1.3.4-1/png/pngread.c **** 
4070:fltk-1.3.4-1/png/pngread.c ****       if (image->opaque != NULL && buffer != NULL &&
4071:fltk-1.3.4-1/png/pngread.c ****          check >= PNG_IMAGE_ROW_STRIDE(*image))
4072:fltk-1.3.4-1/png/pngread.c ****       {
4073:fltk-1.3.4-1/png/pngread.c ****          if ((image->format & PNG_FORMAT_FLAG_COLORMAP) == 0 ||
4074:fltk-1.3.4-1/png/pngread.c ****             (image->colormap_entries > 0 && colormap != NULL))
4075:fltk-1.3.4-1/png/pngread.c ****          {
4076:fltk-1.3.4-1/png/pngread.c ****             int result;
4077:fltk-1.3.4-1/png/pngread.c ****             png_image_read_control display;
4078:fltk-1.3.4-1/png/pngread.c **** 
4079:fltk-1.3.4-1/png/pngread.c ****             memset(&display, 0, (sizeof display));
4080:fltk-1.3.4-1/png/pngread.c ****             display.image = image;
4081:fltk-1.3.4-1/png/pngread.c ****             display.buffer = buffer;
4082:fltk-1.3.4-1/png/pngread.c ****             display.row_stride = row_stride;
4083:fltk-1.3.4-1/png/pngread.c ****             display.colormap = colormap;
4084:fltk-1.3.4-1/png/pngread.c ****             display.background = background;
4085:fltk-1.3.4-1/png/pngread.c ****             display.local_row = NULL;
4086:fltk-1.3.4-1/png/pngread.c **** 
4087:fltk-1.3.4-1/png/pngread.c ****             /* Choose the correct 'end' routine; for the color-map case all the
4088:fltk-1.3.4-1/png/pngread.c ****              * setup has already been done.
4089:fltk-1.3.4-1/png/pngread.c ****              */
4090:fltk-1.3.4-1/png/pngread.c ****             if ((image->format & PNG_FORMAT_FLAG_COLORMAP) != 0)
4091:fltk-1.3.4-1/png/pngread.c ****                result =
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormap, &display) &&
4093:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
4094:fltk-1.3.4-1/png/pngread.c **** 
4095:fltk-1.3.4-1/png/pngread.c ****             else
4096:fltk-1.3.4-1/png/pngread.c ****                result =
4097:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_direct, &display);
4098:fltk-1.3.4-1/png/pngread.c **** 
4099:fltk-1.3.4-1/png/pngread.c ****             png_image_free(image);
4100:fltk-1.3.4-1/png/pngread.c ****             return result;
4101:fltk-1.3.4-1/png/pngread.c ****          }
4102:fltk-1.3.4-1/png/pngread.c **** 
4103:fltk-1.3.4-1/png/pngread.c ****          else
4104:fltk-1.3.4-1/png/pngread.c ****             return png_image_error(image,
4105:fltk-1.3.4-1/png/pngread.c ****                "png_image_finish_read[color-map]: no color-map");
4106:fltk-1.3.4-1/png/pngread.c ****       }
4107:fltk-1.3.4-1/png/pngread.c **** 
4108:fltk-1.3.4-1/png/pngread.c ****       else
4109:fltk-1.3.4-1/png/pngread.c ****          return png_image_error(image,
4110:fltk-1.3.4-1/png/pngread.c ****             "png_image_finish_read: invalid argument");
4111:fltk-1.3.4-1/png/pngread.c ****    }
4112:fltk-1.3.4-1/png/pngread.c **** 
4113:fltk-1.3.4-1/png/pngread.c ****    else if (image != NULL)
 12608              		.loc 1 4113 9 is_stmt 1 view .LVU3673
4114:fltk-1.3.4-1/png/pngread.c ****       return png_image_error(image,
 12609              		.loc 1 4114 7 view .LVU3674
 12610              		.loc 1 4114 14 is_stmt 0 view .LVU3675
 12611 0027 488D3500 		leaq	.LC56(%rip), %rsi
 12611      000000
 12612              	.LVL1308:
 12613              		.loc 1 4114 14 view .LVU3676
 12614 002e E8000000 		call	png_image_error@PLT
 12614      00
 12615              	.LVL1309:
 12616              	.L1256:
4115:fltk-1.3.4-1/png/pngread.c ****          "png_image_finish_read: damaged PNG_IMAGE_VERSION");
4116:fltk-1.3.4-1/png/pngread.c **** 
4117:fltk-1.3.4-1/png/pngread.c ****    return 0;
4118:fltk-1.3.4-1/png/pngread.c **** }
 12617              		.loc 1 4118 1 view .LVU3677
 12618 0033 488B5424 		movq	104(%rsp), %rdx
 12618      68
 12619 0038 64483314 		xorq	%fs:40, %rdx
 12619      25280000 
 12619      00
 12620 0041 0F859801 		jne	.L1286
 12620      0000
 12621 0047 4883C470 		addq	$112, %rsp
 12622              		.cfi_remember_state
 12623              		.cfi_def_cfa_offset 16
 12624 004b 415C     		popq	%r12
 12625              		.cfi_def_cfa_offset 8
 12626 004d C3       		ret
 12627              	.LVL1310:
 12628 004e 6690     		.p2align 4,,10
 12629              		.p2align 3
 12630              	.L1285:
 12631              		.cfi_restore_state
 12632              	.LBB442:
4059:fltk-1.3.4-1/png/pngread.c **** 
 12633              		.loc 1 4059 7 is_stmt 1 view .LVU3678
4061:fltk-1.3.4-1/png/pngread.c ****          row_stride = PNG_IMAGE_ROW_STRIDE(*image);
 12634              		.loc 1 4061 7 view .LVU3679
4061:fltk-1.3.4-1/png/pngread.c ****          row_stride = PNG_IMAGE_ROW_STRIDE(*image);
 12635              		.loc 1 4061 10 is_stmt 0 view .LVU3680
 12636 0050 85C9     		testl	%ecx, %ecx
 12637 0052 744C     		je	.L1287
 12638              	.L1259:
4064:fltk-1.3.4-1/png/pngread.c ****          check = -row_stride;
 12639              		.loc 1 4064 7 is_stmt 1 view .LVU3681
4065:fltk-1.3.4-1/png/pngread.c **** 
 12640              		.loc 1 4065 18 is_stmt 0 view .LVU3682
 12641 0054 89C8     		movl	%ecx, %eax
 12642 0056 C1F81F   		sarl	$31, %eax
 12643 0059 4189C1   		movl	%eax, %r9d
 12644 005c 4131C9   		xorl	%ecx, %r9d
 12645 005f 4129C1   		subl	%eax, %r9d
 12646              	.LVL1311:
4070:fltk-1.3.4-1/png/pngread.c ****          check >= PNG_IMAGE_ROW_STRIDE(*image))
 12647              		.loc 1 4070 7 is_stmt 1 view .LVU3683
4070:fltk-1.3.4-1/png/pngread.c ****          check >= PNG_IMAGE_ROW_STRIDE(*image))
 12648              		.loc 1 4070 33 is_stmt 0 view .LVU3684
 12649 0062 48833F00 		cmpq	$0, (%rdi)
 12650 0066 7423     		je	.L1263
4070:fltk-1.3.4-1/png/pngread.c ****          check >= PNG_IMAGE_ROW_STRIDE(*image))
 12651              		.loc 1 4070 33 view .LVU3685
 12652 0068 4885D2   		testq	%rdx, %rdx
 12653 006b 741E     		je	.L1263
4071:fltk-1.3.4-1/png/pngread.c ****       {
 12654              		.loc 1 4071 19 view .LVU3686
 12655 006d 8B4714   		movl	20(%rdi), %eax
 12656 0070 448B570C 		movl	12(%rdi), %r10d
 12657 0074 A808     		testb	$8, %al
 12658 0076 7548     		jne	.L1264
4071:fltk-1.3.4-1/png/pngread.c ****       {
 12659              		.loc 1 4071 19 discriminator 1 view .LVU3687
 12660 0078 83E003   		andl	$3, %eax
 12661 007b 83C001   		addl	$1, %eax
 12662 007e 410FAFC2 		imull	%r10d, %eax
4070:fltk-1.3.4-1/png/pngread.c ****          check >= PNG_IMAGE_ROW_STRIDE(*image))
 12663              		.loc 1 4070 51 discriminator 1 view .LVU3688
 12664 0082 4139C1   		cmpl	%eax, %r9d
 12665 0085 0F83FD00 		jnb	.L1288
 12665      0000
 12666              	.L1263:
4109:fltk-1.3.4-1/png/pngread.c ****             "png_image_finish_read: invalid argument");
 12667              		.loc 1 4109 10 is_stmt 1 view .LVU3689
4109:fltk-1.3.4-1/png/pngread.c ****             "png_image_finish_read: invalid argument");
 12668              		.loc 1 4109 17 is_stmt 0 view .LVU3690
 12669 008b 488D3500 		leaq	.LC55(%rip), %rsi
 12669      000000
 12670              	.LVL1312:
4109:fltk-1.3.4-1/png/pngread.c ****             "png_image_finish_read: invalid argument");
 12671              		.loc 1 4109 17 view .LVU3691
 12672 0092 E8000000 		call	png_image_error@PLT
 12672      00
 12673              	.LVL1313:
4109:fltk-1.3.4-1/png/pngread.c ****             "png_image_finish_read: invalid argument");
 12674              		.loc 1 4109 17 view .LVU3692
 12675 0097 EB9A     		jmp	.L1256
 12676              	.LVL1314:
 12677 0099 0F1F8000 		.p2align 4,,10
 12677      000000
 12678              		.p2align 3
 12679              	.L1287:
4062:fltk-1.3.4-1/png/pngread.c **** 
 12680              		.loc 1 4062 10 is_stmt 1 view .LVU3693
4062:fltk-1.3.4-1/png/pngread.c **** 
 12681              		.loc 1 4062 23 is_stmt 0 view .LVU3694
 12682 00a0 448B4F14 		movl	20(%rdi), %r9d
 12683 00a4 4489C9   		movl	%r9d, %ecx
 12684              	.LVL1315:
4062:fltk-1.3.4-1/png/pngread.c **** 
 12685              		.loc 1 4062 23 view .LVU3695
 12686 00a7 83E103   		andl	$3, %ecx
 12687 00aa 83C101   		addl	$1, %ecx
 12688 00ad 4183E108 		andl	$8, %r9d
 12689 00b1 0F44C1   		cmove	%ecx, %eax
 12690 00b4 0FAF470C 		imull	12(%rdi), %eax
 12691 00b8 89C1     		movl	%eax, %ecx
 12692              	.LVL1316:
4062:fltk-1.3.4-1/png/pngread.c **** 
 12693              		.loc 1 4062 23 view .LVU3696
 12694 00ba EB98     		jmp	.L1259
 12695              	.LVL1317:
 12696 00bc 0F1F4000 		.p2align 4,,10
 12697              		.p2align 3
 12698              	.L1264:
4070:fltk-1.3.4-1/png/pngread.c ****          check >= PNG_IMAGE_ROW_STRIDE(*image))
 12699              		.loc 1 4070 51 view .LVU3697
 12700 00c0 4539D1   		cmpl	%r10d, %r9d
 12701 00c3 72C6     		jb	.L1263
4074:fltk-1.3.4-1/png/pngread.c ****          {
 12702              		.loc 1 4074 42 discriminator 1 view .LVU3698
 12703 00c5 8B471C   		movl	28(%rdi), %eax
 12704 00c8 85C0     		testl	%eax, %eax
 12705 00ca 0F84A000 		je	.L1268
 12705      0000
 12706 00d0 4D85C0   		testq	%r8, %r8
 12707 00d3 0F849700 		je	.L1268
 12707      0000
 12708              	.LBB443:
4076:fltk-1.3.4-1/png/pngread.c ****             png_image_read_control display;
 12709              		.loc 1 4076 13 is_stmt 1 view .LVU3699
4077:fltk-1.3.4-1/png/pngread.c **** 
 12710              		.loc 1 4077 13 view .LVU3700
4079:fltk-1.3.4-1/png/pngread.c ****             display.image = image;
 12711              		.loc 1 4079 13 view .LVU3701
 12712              	.LVL1318:
 12713              	.LBB444:
 12714              	.LBI444:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 12715              		.loc 2 59 1 view .LVU3702
 12716              	.LBB445:
 12717              		.loc 2 71 3 view .LVU3703
 12718              		.loc 2 71 10 is_stmt 0 view .LVU3704
 12719 00d9 4C8D6424 		leaq	16(%rsp), %r12
 12719      10
 12720              	.LVL1319:
 12721              		.loc 2 71 10 view .LVU3705
 12722 00de 660FEFC0 		pxor	%xmm0, %xmm0
 12723              	.LBE445:
 12724              	.LBE444:
4081:fltk-1.3.4-1/png/pngread.c ****             display.row_stride = row_stride;
 12725              		.loc 1 4081 28 view .LVU3706
 12726 00e2 48895424 		movq	%rdx, 24(%rsp)
 12726      18
4084:fltk-1.3.4-1/png/pngread.c ****             display.local_row = NULL;
 12727              		.loc 1 4084 32 view .LVU3707
 12728 00e7 48897424 		movq	%rsi, 48(%rsp)
 12728      30
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12729              		.loc 1 4092 19 view .LVU3708
 12730 00ec 4C89E2   		movq	%r12, %rdx
 12731              	.LVL1320:
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12732              		.loc 1 4092 19 view .LVU3709
 12733 00ef 488D3500 		leaq	png_image_read_colormap(%rip), %rsi
 12733      000000
 12734              	.LVL1321:
 12735              	.LBB451:
 12736              	.LBB446:
 12737              		.loc 2 71 10 view .LVU3710
 12738 00f6 0F294424 		movaps	%xmm0, 32(%rsp)
 12738      20
 12739              	.LBE446:
 12740              	.LBE451:
4080:fltk-1.3.4-1/png/pngread.c ****             display.buffer = buffer;
 12741              		.loc 1 4080 27 view .LVU3711
 12742 00fb 48897C24 		movq	%rdi, 16(%rsp)
 12742      10
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12743              		.loc 1 4092 19 view .LVU3712
 12744 0100 48897C24 		movq	%rdi, 8(%rsp)
 12744      08
4082:fltk-1.3.4-1/png/pngread.c ****             display.colormap = colormap;
 12745              		.loc 1 4082 32 view .LVU3713
 12746 0105 894C2420 		movl	%ecx, 32(%rsp)
4083:fltk-1.3.4-1/png/pngread.c ****             display.background = background;
 12747              		.loc 1 4083 30 view .LVU3714
 12748 0109 4C894424 		movq	%r8, 40(%rsp)
 12748      28
4085:fltk-1.3.4-1/png/pngread.c **** 
 12749              		.loc 1 4085 31 view .LVU3715
 12750 010e 48C74424 		movq	$0, 56(%rsp)
 12750      38000000 
 12750      00
 12751              	.LBB452:
 12752              	.LBB447:
 12753              		.loc 2 71 10 view .LVU3716
 12754 0117 0F294424 		movaps	%xmm0, 64(%rsp)
 12754      40
 12755 011c 0F294424 		movaps	%xmm0, 80(%rsp)
 12755      50
 12756              	.LVL1322:
 12757              		.loc 2 71 10 view .LVU3717
 12758              	.LBE447:
 12759              	.LBE452:
4080:fltk-1.3.4-1/png/pngread.c ****             display.buffer = buffer;
 12760              		.loc 1 4080 13 is_stmt 1 view .LVU3718
4081:fltk-1.3.4-1/png/pngread.c ****             display.row_stride = row_stride;
 12761              		.loc 1 4081 13 view .LVU3719
4082:fltk-1.3.4-1/png/pngread.c ****             display.colormap = colormap;
 12762              		.loc 1 4082 13 view .LVU3720
4083:fltk-1.3.4-1/png/pngread.c ****             display.background = background;
 12763              		.loc 1 4083 13 view .LVU3721
4084:fltk-1.3.4-1/png/pngread.c ****             display.local_row = NULL;
 12764              		.loc 1 4084 13 view .LVU3722
4085:fltk-1.3.4-1/png/pngread.c **** 
 12765              		.loc 1 4085 13 view .LVU3723
4090:fltk-1.3.4-1/png/pngread.c ****                result =
 12766              		.loc 1 4090 13 view .LVU3724
4091:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormap, &display) &&
 12767              		.loc 1 4091 16 view .LVU3725
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12768              		.loc 1 4092 19 is_stmt 0 view .LVU3726
 12769 0121 E8000000 		call	png_safe_execute@PLT
 12769      00
 12770              	.LVL1323:
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12771              		.loc 1 4092 78 view .LVU3727
 12772 0126 488B7C24 		movq	8(%rsp), %rdi
 12772      08
 12773 012b 85C0     		testl	%eax, %eax
 12774 012d 7519     		jne	.L1289
 12775              	.LVL1324:
 12776              	.L1269:
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12777              		.loc 1 4092 78 view .LVU3728
 12778 012f 89442408 		movl	%eax, 8(%rsp)
 12779              	.LVL1325:
4099:fltk-1.3.4-1/png/pngread.c ****             return result;
 12780              		.loc 1 4099 13 is_stmt 1 view .LVU3729
 12781 0133 E8000000 		call	png_image_free@PLT
 12781      00
 12782              	.LVL1326:
4100:fltk-1.3.4-1/png/pngread.c ****          }
 12783              		.loc 1 4100 13 view .LVU3730
 12784 0138 8B442408 		movl	8(%rsp), %eax
 12785 013c E9F2FEFF 		jmp	.L1256
 12785      FF
 12786              	.LVL1327:
 12787              		.p2align 4,,10
 12788 0141 0F1F8000 		.p2align 3
 12788      000000
 12789              	.L1289:
4093:fltk-1.3.4-1/png/pngread.c **** 
 12790              		.loc 1 4093 19 is_stmt 0 discriminator 1 view .LVU3731
 12791 0148 4C89E2   		movq	%r12, %rdx
 12792 014b 488D3500 		leaq	png_image_read_colormapped(%rip), %rsi
 12792      000000
 12793 0152 48897C24 		movq	%rdi, 8(%rsp)
 12793      08
 12794              	.LVL1328:
4093:fltk-1.3.4-1/png/pngread.c **** 
 12795              		.loc 1 4093 19 discriminator 1 view .LVU3732
 12796 0157 E8000000 		call	png_safe_execute@PLT
 12796      00
 12797              	.LVL1329:
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12798              		.loc 1 4092 78 discriminator 1 view .LVU3733
 12799 015c 488B7C24 		movq	8(%rsp), %rdi
 12799      08
 12800 0161 85C0     		testl	%eax, %eax
 12801 0163 0F95C0   		setne	%al
 12802 0166 0FB6C0   		movzbl	%al, %eax
 12803 0169 EBC4     		jmp	.L1269
 12804              	.LVL1330:
 12805 016b 0F1F4400 		.p2align 4,,10
 12805      00
 12806              		.p2align 3
 12807              	.L1268:
4092:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_colormapped, &display);
 12808              		.loc 1 4092 78 discriminator 1 view .LVU3734
 12809              	.LBE443:
4104:fltk-1.3.4-1/png/pngread.c ****                "png_image_finish_read[color-map]: no color-map");
 12810              		.loc 1 4104 13 is_stmt 1 view .LVU3735
4104:fltk-1.3.4-1/png/pngread.c ****                "png_image_finish_read[color-map]: no color-map");
 12811              		.loc 1 4104 20 is_stmt 0 view .LVU3736
 12812 0170 488D3500 		leaq	.LC54(%rip), %rsi
 12812      000000
 12813              	.LVL1331:
4104:fltk-1.3.4-1/png/pngread.c ****                "png_image_finish_read[color-map]: no color-map");
 12814              		.loc 1 4104 20 view .LVU3737
 12815 0177 E8000000 		call	png_image_error@PLT
 12815      00
 12816              	.LVL1332:
4104:fltk-1.3.4-1/png/pngread.c ****                "png_image_finish_read[color-map]: no color-map");
 12817              		.loc 1 4104 20 view .LVU3738
 12818 017c E9B2FEFF 		jmp	.L1256
 12818      FF
 12819              	.LVL1333:
 12820              		.p2align 4,,10
 12821 0181 0F1F8000 		.p2align 3
 12821      000000
 12822              	.L1288:
 12823              	.LBB456:
4076:fltk-1.3.4-1/png/pngread.c ****             png_image_read_control display;
 12824              		.loc 1 4076 13 is_stmt 1 view .LVU3739
4077:fltk-1.3.4-1/png/pngread.c **** 
 12825              		.loc 1 4077 13 view .LVU3740
4079:fltk-1.3.4-1/png/pngread.c ****             display.image = image;
 12826              		.loc 1 4079 13 view .LVU3741
 12827              	.LBB453:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 12828              		.loc 2 59 1 view .LVU3742
 12829              	.LBB448:
 12830              		.loc 2 71 3 view .LVU3743
 12831              		.loc 2 71 10 is_stmt 0 view .LVU3744
 12832 0188 4C8D4C24 		leaq	16(%rsp), %r9
 12832      10
 12833              	.LVL1334:
 12834              		.loc 2 71 10 view .LVU3745
 12835 018d 660FEFC0 		pxor	%xmm0, %xmm0
 12836              	.LBE448:
 12837              	.LBE453:
4081:fltk-1.3.4-1/png/pngread.c ****             display.row_stride = row_stride;
 12838              		.loc 1 4081 28 view .LVU3746
 12839 0191 48895424 		movq	%rdx, 24(%rsp)
 12839      18
4084:fltk-1.3.4-1/png/pngread.c ****             display.local_row = NULL;
 12840              		.loc 1 4084 32 view .LVU3747
 12841 0196 48897424 		movq	%rsi, 48(%rsp)
 12841      30
4097:fltk-1.3.4-1/png/pngread.c **** 
 12842              		.loc 1 4097 19 view .LVU3748
 12843 019b 4C89CA   		movq	%r9, %rdx
 12844              	.LVL1335:
4097:fltk-1.3.4-1/png/pngread.c **** 
 12845              		.loc 1 4097 19 view .LVU3749
 12846 019e 488D3500 		leaq	png_image_read_direct(%rip), %rsi
 12846      000000
 12847              	.LVL1336:
 12848              	.LBB454:
 12849              	.LBB449:
 12850              		.loc 2 71 10 view .LVU3750
 12851 01a5 0F294424 		movaps	%xmm0, 32(%rsp)
 12851      20
 12852              	.LBE449:
 12853              	.LBE454:
4080:fltk-1.3.4-1/png/pngread.c ****             display.buffer = buffer;
 12854              		.loc 1 4080 27 view .LVU3751
 12855 01aa 48897C24 		movq	%rdi, 16(%rsp)
 12855      10
4097:fltk-1.3.4-1/png/pngread.c **** 
 12856              		.loc 1 4097 19 view .LVU3752
 12857 01af 48897C24 		movq	%rdi, 8(%rsp)
 12857      08
4082:fltk-1.3.4-1/png/pngread.c ****             display.colormap = colormap;
 12858              		.loc 1 4082 32 view .LVU3753
 12859 01b4 894C2420 		movl	%ecx, 32(%rsp)
4083:fltk-1.3.4-1/png/pngread.c ****             display.background = background;
 12860              		.loc 1 4083 30 view .LVU3754
 12861 01b8 4C894424 		movq	%r8, 40(%rsp)
 12861      28
4085:fltk-1.3.4-1/png/pngread.c **** 
 12862              		.loc 1 4085 31 view .LVU3755
 12863 01bd 48C74424 		movq	$0, 56(%rsp)
 12863      38000000 
 12863      00
 12864              	.LBB455:
 12865              	.LBB450:
 12866              		.loc 2 71 10 view .LVU3756
 12867 01c6 0F294424 		movaps	%xmm0, 64(%rsp)
 12867      40
 12868 01cb 0F294424 		movaps	%xmm0, 80(%rsp)
 12868      50
 12869              	.LVL1337:
 12870              		.loc 2 71 10 view .LVU3757
 12871              	.LBE450:
 12872              	.LBE455:
4080:fltk-1.3.4-1/png/pngread.c ****             display.buffer = buffer;
 12873              		.loc 1 4080 13 is_stmt 1 view .LVU3758
4081:fltk-1.3.4-1/png/pngread.c ****             display.row_stride = row_stride;
 12874              		.loc 1 4081 13 view .LVU3759
4082:fltk-1.3.4-1/png/pngread.c ****             display.colormap = colormap;
 12875              		.loc 1 4082 13 view .LVU3760
4083:fltk-1.3.4-1/png/pngread.c ****             display.background = background;
 12876              		.loc 1 4083 13 view .LVU3761
4084:fltk-1.3.4-1/png/pngread.c ****             display.local_row = NULL;
 12877              		.loc 1 4084 13 view .LVU3762
4085:fltk-1.3.4-1/png/pngread.c **** 
 12878              		.loc 1 4085 13 view .LVU3763
4090:fltk-1.3.4-1/png/pngread.c ****                result =
 12879              		.loc 1 4090 13 view .LVU3764
4096:fltk-1.3.4-1/png/pngread.c ****                   png_safe_execute(image, png_image_read_direct, &display);
 12880              		.loc 1 4096 16 view .LVU3765
4097:fltk-1.3.4-1/png/pngread.c **** 
 12881              		.loc 1 4097 19 is_stmt 0 view .LVU3766
 12882 01d0 E8000000 		call	png_safe_execute@PLT
 12882      00
 12883              	.LVL1338:
4097:fltk-1.3.4-1/png/pngread.c **** 
 12884              		.loc 1 4097 19 view .LVU3767
 12885 01d5 488B7C24 		movq	8(%rsp), %rdi
 12885      08
 12886 01da E950FFFF 		jmp	.L1269
 12886      FF
 12887              	.LVL1339:
 12888              	.L1286:
4097:fltk-1.3.4-1/png/pngread.c **** 
 12889              		.loc 1 4097 19 view .LVU3768
 12890              	.LBE456:
 12891              	.LBE442:
 12892              		.loc 1 4118 1 view .LVU3769
 12893 01df E8000000 		call	__stack_chk_fail@PLT
 12893      00
 12894              	.LVL1340:
 12895              		.cfi_endproc
 12896              	.LFE78:
 12898              		.section	.rodata.chunks_to_process.7006,"a"
 12899              		.align 16
 12902              	chunks_to_process.7006:
 12903 0000 624B4744 		.string	"bKGD"
 12903      00
 12904 0005 6348524D 		.string	"cHRM"
 12904      00
 12905 000a 67414D41 		.string	"gAMA"
 12905      00
 12906 000f 69434350 		.string	"iCCP"
 12906      00
 12907 0014 73424954 		.string	"sBIT"
 12907      00
 12908 0019 73524742 		.string	"sRGB"
 12908      00
 12909              		.text
 12910              	.Letext0:
 12911              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 12912              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 12913              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 12914              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 12915              		.file 7 "/usr/include/stdio.h"
 12916              		.file 8 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 12917              		.file 9 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 12918              		.file 10 "/usr/include/setjmp.h"
 12919              		.file 11 "/usr/include/time.h"
 12920              		.file 12 "fltk-1.3.4-1/png/pngconf.h"
 12921              		.file 13 "fltk-1.3.4-1/png/png.h"
 12922              		.file 14 "fltk-1.3.4-1/png/pngstruct.h"
 12923              		.file 15 "fltk-1.3.4-1/png/pnginfo.h"
 12924              		.file 16 "fltk-1.3.4-1/png/pngpriv.h"
 12925              		.file 17 "/usr/include/zconf.h"
 12926              		.file 18 "/usr/include/unistd.h"
 12927              		.file 19 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 12928              		.file 20 "/usr/include/zlib.h"
 12929              		.file 21 "<built-in>"
 12930              		.file 22 "/usr/include/errno.h"
 12931              		.file 23 "/usr/include/string.h"
 58210              		.section	.note.gnu.property,"a"
 58211              		.align 8
 58212 0000 04000000 		.long	 1f - 0f
 58213 0004 10000000 		.long	 4f - 1f
 58214 0008 05000000 		.long	 5
 58215              	0:
 58216 000c 474E5500 		.string	 "GNU"
 58217              	1:
 58218              		.align 8
 58219 0010 020000C0 		.long	 0xc0000002
 58220 0014 04000000 		.long	 3f - 2f
 58221              	2:
 58222 0018 03000000 		.long	 0x3
 58223              	3:
 58224 001c 00000000 		.align 8
 58225              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngread.c
     /tmp/cc7jAZzj.s:7      .text.png_image_format:0000000000000000 png_image_format
     /tmp/cc7jAZzj.s:71     .text.png_image_memory_read:0000000000000000 png_image_memory_read
     /tmp/cc7jAZzj.s:238    .text.png_image_skip_unused_chunks:0000000000000000 png_image_skip_unused_chunks
     /tmp/cc7jAZzj.s:12902  .rodata.chunks_to_process.7006:0000000000000000 chunks_to_process.7006
     /tmp/cc7jAZzj.s:292    .text.png_read_info.part.0:0000000000000000 png_read_info.part.0
     /tmp/cc7jAZzj.s:821    .text.png_image_read_header:0000000000000000 png_image_read_header
     /tmp/cc7jAZzj.s:1034   .text.png_read_end.part.0:0000000000000000 png_read_end.part.0
     /tmp/cc7jAZzj.s:1583   .text.set_file_encoding:0000000000000000 set_file_encoding
     /tmp/cc7jAZzj.s:1751   .text.decode_gamma:0000000000000000 decode_gamma
     /tmp/cc7jAZzj.s:1938   .text.png_colormap_compose:0000000000000000 png_colormap_compose
     /tmp/cc7jAZzj.s:2096   .text.png_create_colormap_entry:0000000000000000 png_create_colormap_entry
     /tmp/cc7jAZzj.s:3046   .text.make_ga_colormap:0000000000000000 make_ga_colormap
     /tmp/cc7jAZzj.s:3222   .text.make_gray_colormap:0000000000000000 make_gray_colormap
     /tmp/cc7jAZzj.s:3293   .text.make_rgb_colormap:0000000000000000 make_rgb_colormap
     /tmp/cc7jAZzj.s:3480   .text.png_image_read_colormap:0000000000000000 png_image_read_colormap
     /tmp/cc7jAZzj.s:6033   .text.png_create_read_struct_2:0000000000000000 png_create_read_struct_2
     /tmp/cc7jAZzj.s:6097   .text.png_create_read_struct:0000000000000000 png_create_read_struct
     /tmp/cc7jAZzj.s:6126   .text.png_read_info:0000000000000000 png_read_info
     /tmp/cc7jAZzj.s:6159   .text.png_read_update_info:0000000000000000 png_read_update_info
     /tmp/cc7jAZzj.s:6264   .text.png_start_read_image:0000000000000000 png_start_read_image
     /tmp/cc7jAZzj.s:6315   .text.png_read_row:0000000000000000 png_read_row
     /tmp/cc7jAZzj.s:7004   .text.png_image_read_direct:0000000000000000 png_image_read_direct
     /tmp/cc7jAZzj.s:9172   .text.png_image_read_composite:0000000000000000 png_image_read_composite
     /tmp/cc7jAZzj.s:8012   .text.png_image_read_background:0000000000000000 png_image_read_background
     /tmp/cc7jAZzj.s:9684   .text.png_image_read_colormapped:0000000000000000 png_image_read_colormapped
     /tmp/cc7jAZzj.s:10040  .text.png_image_read_and_map:0000000000000000 png_image_read_and_map
     /tmp/cc7jAZzj.s:10705  .text.png_read_rows:0000000000000000 png_read_rows
     /tmp/cc7jAZzj.s:10922  .text.png_read_image:0000000000000000 png_read_image
     /tmp/cc7jAZzj.s:11109  .text.png_read_end:0000000000000000 png_read_end
     /tmp/cc7jAZzj.s:11136  .text.png_destroy_read_struct:0000000000000000 png_destroy_read_struct
     /tmp/cc7jAZzj.s:11407  .text.png_image_read_init:0000000000000000 png_image_read_init
     /tmp/cc7jAZzj.s:11641  .text.png_set_read_status_fn:0000000000000000 png_set_read_status_fn
     /tmp/cc7jAZzj.s:11669  .text.png_read_png:0000000000000000 png_read_png
     /tmp/cc7jAZzj.s:12142  .text.png_image_begin_read_from_stdio:0000000000000000 png_image_begin_read_from_stdio
     /tmp/cc7jAZzj.s:12270  .text.png_image_begin_read_from_file:0000000000000000 png_image_begin_read_from_file
     /tmp/cc7jAZzj.s:12451  .text.png_image_begin_read_from_memory:0000000000000000 png_image_begin_read_from_memory
     /tmp/cc7jAZzj.s:12583  .text.png_image_finish_read:0000000000000000 png_image_finish_read
     /tmp/cc7jAZzj.s:66     .rodata.png_image_memory_read.str1.1:0000000000000018 .LC1
     /tmp/cc7jAZzj.s:64     .rodata.png_image_memory_read.str1.1:0000000000000000 .LC0
     /tmp/cc7jAZzj.s:285    .rodata.png_read_info.part.0.str1.1:0000000000000019 .LC3
     /tmp/cc7jAZzj.s:287    .rodata.png_read_info.part.0.str1.1:0000000000000032 .LC4
     /tmp/cc7jAZzj.s:283    .rodata.png_read_info.part.0.str1.1:0000000000000000 .LC2
     /tmp/cc7jAZzj.s:1029   .rodata.png_read_end.part.0.str1.8:0000000000000000 .LC5
     /tmp/cc7jAZzj.s:1746   .rodata.decode_gamma.str1.8:0000000000000000 .LC6
     /tmp/cc7jAZzj.s:2091   .rodata.png_create_colormap_entry.str1.1:000000000000001d .LC8
     /tmp/cc7jAZzj.s:2089   .rodata.png_create_colormap_entry.str1.1:0000000000000000 .LC7
     /tmp/cc7jAZzj.s:3450   .rodata.png_image_read_colormap.str1.8:0000000000000138 .LC16
     /tmp/cc7jAZzj.s:3475   .rodata.png_image_read_colormap.str1.8:0000000000000248 .LC24
     /tmp/cc7jAZzj.s:3465   .rodata.png_image_read_colormap.str1.1:0000000000000000 .LC21
     /tmp/cc7jAZzj.s:3472   .rodata.png_image_read_colormap.str1.8:0000000000000220 .LC23
     /tmp/cc7jAZzj.s:3469   .rodata.png_image_read_colormap.str1.8:00000000000001f8 .LC22
     /tmp/cc7jAZzj.s:3432   .rodata.png_image_read_colormap.str1.8:0000000000000048 .LC10
     /tmp/cc7jAZzj.s:3459   .rodata.png_image_read_colormap.str1.8:00000000000001b0 .LC19
     /tmp/cc7jAZzj.s:3429   .rodata.png_image_read_colormap.str1.8:0000000000000000 .LC9
     /tmp/cc7jAZzj.s:3444   .rodata.png_image_read_colormap.str1.8:00000000000000e8 .LC14
     /tmp/cc7jAZzj.s:3456   .rodata.png_image_read_colormap.str1.8:0000000000000188 .LC18
     /tmp/cc7jAZzj.s:3435   .rodata.png_image_read_colormap.str1.8:0000000000000070 .LC11
     /tmp/cc7jAZzj.s:3438   .rodata.png_image_read_colormap.str1.8:0000000000000098 .LC12
     /tmp/cc7jAZzj.s:3441   .rodata.png_image_read_colormap.str1.8:00000000000000c0 .LC13
     /tmp/cc7jAZzj.s:3453   .rodata.png_image_read_colormap.str1.8:0000000000000160 .LC17
     /tmp/cc7jAZzj.s:3462   .rodata.png_image_read_colormap.str1.8:00000000000001d0 .LC20
     /tmp/cc7jAZzj.s:3447   .rodata.png_image_read_colormap.str1.8:0000000000000110 .LC15
     /tmp/cc7jAZzj.s:6153   .rodata.png_read_update_info.str1.8:0000000000000000 .LC25
     /tmp/cc7jAZzj.s:6258   .rodata.png_start_read_image.str1.8:0000000000000000 .LC26
     /tmp/cc7jAZzj.s:6309   .rodata.png_read_row.str1.8:0000000000000028 .LC30
     /tmp/cc7jAZzj.s:6300   .rodata.png_read_row.str1.8:0000000000000000 .LC27
     /tmp/cc7jAZzj.s:6303   .rodata.png_read_row.str1.1:0000000000000000 .LC28
     /tmp/cc7jAZzj.s:6305   .rodata.png_read_row.str1.1:000000000000001a .LC29
     /tmp/cc7jAZzj.s:6996   .rodata.png_image_read_direct.str1.8:0000000000000058 .LC33
     /tmp/cc7jAZzj.s:6990   .rodata.png_image_read_direct.str1.8:0000000000000000 .LC31
     /tmp/cc7jAZzj.s:6993   .rodata.png_image_read_direct.str1.8:0000000000000030 .LC32
     /tmp/cc7jAZzj.s:6999   .rodata.png_image_read_direct.str1.8:0000000000000080 .LC34
     /tmp/cc7jAZzj.s:8005   .rodata.png_image_read_background.str1.1:0000000000000039 .LC39
     /tmp/cc7jAZzj.s:8002   .rodata.png_image_read_background.str1.8:0000000000000000 .LC38
     /tmp/cc7jAZzj.s:7998   .rodata.png_image_read_background.str1.1:0000000000000024 .LC37
     /tmp/cc7jAZzj.s:7996   .rodata.png_image_read_background.str1.1:0000000000000011 .LC36
     /tmp/cc7jAZzj.s:7994   .rodata.png_image_read_background.str1.1:0000000000000000 .LC35
     /tmp/cc7jAZzj.s:8007   .rodata.png_image_read_background.str1.1:0000000000000050 .LC40
     /tmp/cc7jAZzj.s:9679   .rodata.png_image_read_colormapped.str1.8:0000000000000000 .LC41
     /tmp/cc7jAZzj.s:10916  .rodata.png_read_image.str1.8:0000000000000000 .LC42
     /tmp/cc7jAZzj.s:11402  .rodata.png_image_read_init.str1.8:0000000000000000 .LC45
     /tmp/cc7jAZzj.s:11396  .rodata.png_image_read_init.str1.1:0000000000000000 .LC43
     /tmp/cc7jAZzj.s:11398  .rodata.png_image_read_init.str1.1:0000000000000007 .LC44
     /tmp/cc7jAZzj.s:11663  .rodata.png_read_png.str1.8:0000000000000000 .LC46
     /tmp/cc7jAZzj.s:12136  .rodata.png_image_begin_read_from_stdio.str1.8:0000000000000038 .LC48
     /tmp/cc7jAZzj.s:12133  .rodata.png_image_begin_read_from_stdio.str1.8:0000000000000000 .LC47
     /tmp/cc7jAZzj.s:12264  .rodata.png_image_begin_read_from_file.str1.8:0000000000000038 .LC51
     /tmp/cc7jAZzj.s:12257  .rodata.png_image_begin_read_from_file.str1.1:0000000000000000 .LC49
     /tmp/cc7jAZzj.s:12261  .rodata.png_image_begin_read_from_file.str1.8:0000000000000000 .LC50
     /tmp/cc7jAZzj.s:12445  .rodata.png_image_begin_read_from_memory.str1.8:0000000000000038 .LC53
     /tmp/cc7jAZzj.s:12442  .rodata.png_image_begin_read_from_memory.str1.8:0000000000000000 .LC52
     /tmp/cc7jAZzj.s:12577  .rodata.png_image_finish_read.str1.8:0000000000000058 .LC56
     /tmp/cc7jAZzj.s:12574  .rodata.png_image_finish_read.str1.8:0000000000000030 .LC55
     /tmp/cc7jAZzj.s:12571  .rodata.png_image_finish_read.str1.8:0000000000000000 .LC54
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8
                           .group:0000000000000000 wm4.errnobase.h.3.496c97749cc421db8c7f3a88bb19be3e
                           .group:0000000000000000 wm4.errno.h.7.abb72fb4c24e8d4d14afee66cc0be915

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
memcpy
png_error
png_set_keep_unknown_chunks
png_read_sig
png_read_chunk_header
png_handle_IEND
png_chunk_unknown_handling
png_handle_IHDR
png_handle_unknown
png_chunk_error
png_chunk_benign_error
png_handle_PLTE
png_handle_bKGD
png_handle_cHRM
png_handle_gAMA
png_handle_hIST
png_handle_oFFs
png_handle_pCAL
png_handle_sCAL
png_handle_pHYs
png_handle_sBIT
png_handle_sRGB
png_handle_iCCP
png_handle_iTXt
png_handle_sPLT
png_handle_tEXt
png_handle_tIME
png_handle_tRNS
png_handle_zTXt
png_set_benign_errors
png_benign_error
png_crc_finish
png_read_finish_IDAT
png_gamma_significant
png_reciprocal
png_gamma_16bit_correct
png_sRGB_table
png_sRGB_delta
png_sRGB_base
png_set_alpha_mode_fixed
png_set_packing
png_set_scale_16
png_set_rgb_to_gray_fixed
png_set_tRNS_to_alpha
png_set_background_fixed
memcmp
__stack_chk_fail
png_create_png_struct
png_set_read_fn
png_read_start_row
png_read_transform_info
png_app_error
png_read_IDAT_data
png_read_filter_row
png_combine_row
png_read_finish_row
png_do_read_transformations
png_do_read_interlace
png_set_expand
png_set_expand_16
png_set_add_alpha
png_muldiv
png_set_interlace_handling
png_set_swap_alpha
png_set_gray_to_rgb
png_set_swap
png_get_rowbytes
png_malloc
png_safe_execute
png_free
png_set_bgr
png_set_strip_alpha
png_get_channels
png_warning
png_destroy_info_struct
png_destroy_gamma_table
inflateEnd
png_destroy_png_struct
png_zfree
png_image_error
png_safe_warning
png_safe_error
png_create_info_struct
png_malloc_warn
png_free_data
png_set_shift
png_set_invert_mono
png_set_packswap
png_set_strip_16
png_set_invert_alpha
fopen
fclose
__errno_location
strerror
png_image_free
