   1              		.file	"png.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.png_colorspace_endpoints_match,"ax",@progbits
   5              		.p2align 4
   7              	png_colorspace_endpoints_match:
   8              	.LVL0:
   9              	.LFB76:
  10              		.file 1 "fltk-1.3.4-1/png/png.c"
   1:fltk-1.3.4-1/png/png.c **** 
   2:fltk-1.3.4-1/png/png.c **** /* png.c - location for general purpose libpng functions
   3:fltk-1.3.4-1/png/png.c ****  *
   4:fltk-1.3.4-1/png/png.c ****  * Last changed in libpng 1.6.16 [December 22, 2014]
   5:fltk-1.3.4-1/png/png.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/png.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/png.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/png.c ****  *
   9:fltk-1.3.4-1/png/png.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/png.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/png.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/png.c ****  */
  13:fltk-1.3.4-1/png/png.c **** 
  14:fltk-1.3.4-1/png/png.c **** #include "pngpriv.h"
  15:fltk-1.3.4-1/png/png.c **** 
  16:fltk-1.3.4-1/png/png.c **** /* Generate a compiler error if there is an old png.h in the search path. */
  17:fltk-1.3.4-1/png/png.c **** typedef png_libpng_version_1_6_16 Your_png_h_is_not_version_1_6_16;
  18:fltk-1.3.4-1/png/png.c **** 
  19:fltk-1.3.4-1/png/png.c **** /* Tells libpng that we have already handled the first "num_bytes" bytes
  20:fltk-1.3.4-1/png/png.c ****  * of the PNG file signature.  If the PNG data is embedded into another
  21:fltk-1.3.4-1/png/png.c ****  * stream we can set num_bytes = 8 so that libpng will not attempt to read
  22:fltk-1.3.4-1/png/png.c ****  * or write any of the magic bytes before it starts on the IHDR.
  23:fltk-1.3.4-1/png/png.c ****  */
  24:fltk-1.3.4-1/png/png.c **** 
  25:fltk-1.3.4-1/png/png.c **** #ifdef PNG_READ_SUPPORTED
  26:fltk-1.3.4-1/png/png.c **** void PNGAPI
  27:fltk-1.3.4-1/png/png.c **** png_set_sig_bytes(png_structrp png_ptr, int num_bytes)
  28:fltk-1.3.4-1/png/png.c **** {
  29:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_set_sig_bytes");
  30:fltk-1.3.4-1/png/png.c **** 
  31:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
  32:fltk-1.3.4-1/png/png.c ****       return;
  33:fltk-1.3.4-1/png/png.c **** 
  34:fltk-1.3.4-1/png/png.c ****    if (num_bytes > 8)
  35:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Too many bytes for PNG signature");
  36:fltk-1.3.4-1/png/png.c **** 
  37:fltk-1.3.4-1/png/png.c ****    png_ptr->sig_bytes = (png_byte)(num_bytes < 0 ? 0 : num_bytes);
  38:fltk-1.3.4-1/png/png.c **** }
  39:fltk-1.3.4-1/png/png.c **** 
  40:fltk-1.3.4-1/png/png.c **** /* Checks whether the supplied bytes match the PNG signature.  We allow
  41:fltk-1.3.4-1/png/png.c ****  * checking less than the full 8-byte signature so that those apps that
  42:fltk-1.3.4-1/png/png.c ****  * already read the first few bytes of a file to determine the file type
  43:fltk-1.3.4-1/png/png.c ****  * can simply check the remaining bytes for extra assurance.  Returns
  44:fltk-1.3.4-1/png/png.c ****  * an integer less than, equal to, or greater than zero if sig is found,
  45:fltk-1.3.4-1/png/png.c ****  * respectively, to be less than, to match, or be greater than the correct
  46:fltk-1.3.4-1/png/png.c ****  * PNG signature (this is the same behavior as strcmp, memcmp, etc).
  47:fltk-1.3.4-1/png/png.c ****  */
  48:fltk-1.3.4-1/png/png.c **** int PNGAPI
  49:fltk-1.3.4-1/png/png.c **** png_sig_cmp(png_const_bytep sig, png_size_t start, png_size_t num_to_check)
  50:fltk-1.3.4-1/png/png.c **** {
  51:fltk-1.3.4-1/png/png.c ****    png_byte png_signature[8] = {137, 80, 78, 71, 13, 10, 26, 10};
  52:fltk-1.3.4-1/png/png.c **** 
  53:fltk-1.3.4-1/png/png.c ****    if (num_to_check > 8)
  54:fltk-1.3.4-1/png/png.c ****       num_to_check = 8;
  55:fltk-1.3.4-1/png/png.c **** 
  56:fltk-1.3.4-1/png/png.c ****    else if (num_to_check < 1)
  57:fltk-1.3.4-1/png/png.c ****       return (-1);
  58:fltk-1.3.4-1/png/png.c **** 
  59:fltk-1.3.4-1/png/png.c ****    if (start > 7)
  60:fltk-1.3.4-1/png/png.c ****       return (-1);
  61:fltk-1.3.4-1/png/png.c **** 
  62:fltk-1.3.4-1/png/png.c ****    if (start + num_to_check > 8)
  63:fltk-1.3.4-1/png/png.c ****       num_to_check = 8 - start;
  64:fltk-1.3.4-1/png/png.c **** 
  65:fltk-1.3.4-1/png/png.c ****    return ((int)(memcmp(&sig[start], &png_signature[start], num_to_check)));
  66:fltk-1.3.4-1/png/png.c **** }
  67:fltk-1.3.4-1/png/png.c **** 
  68:fltk-1.3.4-1/png/png.c **** #endif /* READ */
  69:fltk-1.3.4-1/png/png.c **** 
  70:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_SUPPORTED) || defined(PNG_WRITE_SUPPORTED)
  71:fltk-1.3.4-1/png/png.c **** /* Function to allocate memory for zlib */
  72:fltk-1.3.4-1/png/png.c **** PNG_FUNCTION(voidpf /* PRIVATE */,
  73:fltk-1.3.4-1/png/png.c **** png_zalloc,(voidpf png_ptr, uInt items, uInt size),PNG_ALLOCATED)
  74:fltk-1.3.4-1/png/png.c **** {
  75:fltk-1.3.4-1/png/png.c ****    png_alloc_size_t num_bytes = size;
  76:fltk-1.3.4-1/png/png.c **** 
  77:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
  78:fltk-1.3.4-1/png/png.c ****       return NULL;
  79:fltk-1.3.4-1/png/png.c **** 
  80:fltk-1.3.4-1/png/png.c ****    if (items >= (~(png_alloc_size_t)0)/size)
  81:fltk-1.3.4-1/png/png.c ****    {
  82:fltk-1.3.4-1/png/png.c ****       png_warning (png_voidcast(png_structrp, png_ptr),
  83:fltk-1.3.4-1/png/png.c ****          "Potential overflow in png_zalloc()");
  84:fltk-1.3.4-1/png/png.c ****       return NULL;
  85:fltk-1.3.4-1/png/png.c ****    }
  86:fltk-1.3.4-1/png/png.c **** 
  87:fltk-1.3.4-1/png/png.c ****    num_bytes *= items;
  88:fltk-1.3.4-1/png/png.c ****    return png_malloc_warn(png_voidcast(png_structrp, png_ptr), num_bytes);
  89:fltk-1.3.4-1/png/png.c **** }
  90:fltk-1.3.4-1/png/png.c **** 
  91:fltk-1.3.4-1/png/png.c **** /* Function to free memory for zlib */
  92:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
  93:fltk-1.3.4-1/png/png.c **** png_zfree(voidpf png_ptr, voidpf ptr)
  94:fltk-1.3.4-1/png/png.c **** {
  95:fltk-1.3.4-1/png/png.c ****    png_free(png_voidcast(png_const_structrp,png_ptr), ptr);
  96:fltk-1.3.4-1/png/png.c **** }
  97:fltk-1.3.4-1/png/png.c **** 
  98:fltk-1.3.4-1/png/png.c **** /* Reset the CRC variable to 32 bits of 1's.  Care must be taken
  99:fltk-1.3.4-1/png/png.c ****  * in case CRC is > 32 bits to leave the top bits 0.
 100:fltk-1.3.4-1/png/png.c ****  */
 101:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
 102:fltk-1.3.4-1/png/png.c **** png_reset_crc(png_structrp png_ptr)
 103:fltk-1.3.4-1/png/png.c **** {
 104:fltk-1.3.4-1/png/png.c ****    /* The cast is safe because the crc is a 32 bit value. */
 105:fltk-1.3.4-1/png/png.c ****    png_ptr->crc = (png_uint_32)crc32(0, Z_NULL, 0);
 106:fltk-1.3.4-1/png/png.c **** }
 107:fltk-1.3.4-1/png/png.c **** 
 108:fltk-1.3.4-1/png/png.c **** /* Calculate the CRC over a section of data.  We can only pass as
 109:fltk-1.3.4-1/png/png.c ****  * much data to this routine as the largest single buffer size.  We
 110:fltk-1.3.4-1/png/png.c ****  * also check that this data will actually be used before going to the
 111:fltk-1.3.4-1/png/png.c ****  * trouble of calculating it.
 112:fltk-1.3.4-1/png/png.c ****  */
 113:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
 114:fltk-1.3.4-1/png/png.c **** png_calculate_crc(png_structrp png_ptr, png_const_bytep ptr, png_size_t length)
 115:fltk-1.3.4-1/png/png.c **** {
 116:fltk-1.3.4-1/png/png.c ****    int need_crc = 1;
 117:fltk-1.3.4-1/png/png.c **** 
 118:fltk-1.3.4-1/png/png.c ****    if (PNG_CHUNK_ANCILLARY(png_ptr->chunk_name) != 0)
 119:fltk-1.3.4-1/png/png.c ****    {
 120:fltk-1.3.4-1/png/png.c ****       if ((png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_MASK) ==
 121:fltk-1.3.4-1/png/png.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 122:fltk-1.3.4-1/png/png.c ****          need_crc = 0;
 123:fltk-1.3.4-1/png/png.c ****    }
 124:fltk-1.3.4-1/png/png.c **** 
 125:fltk-1.3.4-1/png/png.c ****    else /* critical */
 126:fltk-1.3.4-1/png/png.c ****    {
 127:fltk-1.3.4-1/png/png.c ****       if ((png_ptr->flags & PNG_FLAG_CRC_CRITICAL_IGNORE) != 0)
 128:fltk-1.3.4-1/png/png.c ****          need_crc = 0;
 129:fltk-1.3.4-1/png/png.c ****    }
 130:fltk-1.3.4-1/png/png.c **** 
 131:fltk-1.3.4-1/png/png.c ****    /* 'uLong' is defined in zlib.h as unsigned long; this means that on some
 132:fltk-1.3.4-1/png/png.c ****     * systems it is a 64 bit value.  crc32, however, returns 32 bits so the
 133:fltk-1.3.4-1/png/png.c ****     * following cast is safe.  'uInt' may be no more than 16 bits, so it is
 134:fltk-1.3.4-1/png/png.c ****     * necessary to perform a loop here.
 135:fltk-1.3.4-1/png/png.c ****     */
 136:fltk-1.3.4-1/png/png.c ****    if (need_crc != 0 && length > 0)
 137:fltk-1.3.4-1/png/png.c ****    {
 138:fltk-1.3.4-1/png/png.c ****       uLong crc = png_ptr->crc; /* Should never issue a warning */
 139:fltk-1.3.4-1/png/png.c **** 
 140:fltk-1.3.4-1/png/png.c ****       do
 141:fltk-1.3.4-1/png/png.c ****       {
 142:fltk-1.3.4-1/png/png.c ****          uInt safe_length = (uInt)length;
 143:fltk-1.3.4-1/png/png.c ****          if (safe_length == 0)
 144:fltk-1.3.4-1/png/png.c ****             safe_length = (uInt)-1; /* evil, but safe */
 145:fltk-1.3.4-1/png/png.c **** 
 146:fltk-1.3.4-1/png/png.c ****          crc = crc32(crc, ptr, safe_length);
 147:fltk-1.3.4-1/png/png.c **** 
 148:fltk-1.3.4-1/png/png.c ****          /* The following should never issue compiler warnings; if they do the
 149:fltk-1.3.4-1/png/png.c ****           * target system has characteristics that will probably violate other
 150:fltk-1.3.4-1/png/png.c ****           * assumptions within the libpng code.
 151:fltk-1.3.4-1/png/png.c ****           */
 152:fltk-1.3.4-1/png/png.c ****          ptr += safe_length;
 153:fltk-1.3.4-1/png/png.c ****          length -= safe_length;
 154:fltk-1.3.4-1/png/png.c ****       }
 155:fltk-1.3.4-1/png/png.c ****       while (length > 0);
 156:fltk-1.3.4-1/png/png.c **** 
 157:fltk-1.3.4-1/png/png.c ****       /* And the following is always safe because the crc is only 32 bits. */
 158:fltk-1.3.4-1/png/png.c ****       png_ptr->crc = (png_uint_32)crc;
 159:fltk-1.3.4-1/png/png.c ****    }
 160:fltk-1.3.4-1/png/png.c **** }
 161:fltk-1.3.4-1/png/png.c **** 
 162:fltk-1.3.4-1/png/png.c **** /* Check a user supplied version number, called from both read and write
 163:fltk-1.3.4-1/png/png.c ****  * functions that create a png_struct.
 164:fltk-1.3.4-1/png/png.c ****  */
 165:fltk-1.3.4-1/png/png.c **** int
 166:fltk-1.3.4-1/png/png.c **** png_user_version_check(png_structrp png_ptr, png_const_charp user_png_ver)
 167:fltk-1.3.4-1/png/png.c **** {
 168:fltk-1.3.4-1/png/png.c ****      /* Libpng versions 1.0.0 and later are binary compatible if the version
 169:fltk-1.3.4-1/png/png.c ****       * string matches through the second '.'; we must recompile any
 170:fltk-1.3.4-1/png/png.c ****       * applications that use any older library version.
 171:fltk-1.3.4-1/png/png.c ****       */
 172:fltk-1.3.4-1/png/png.c **** 
 173:fltk-1.3.4-1/png/png.c ****    if (user_png_ver != NULL)
 174:fltk-1.3.4-1/png/png.c ****    {
 175:fltk-1.3.4-1/png/png.c ****       int i = -1;
 176:fltk-1.3.4-1/png/png.c ****       int found_dots = 0;
 177:fltk-1.3.4-1/png/png.c **** 
 178:fltk-1.3.4-1/png/png.c ****       do
 179:fltk-1.3.4-1/png/png.c ****       {
 180:fltk-1.3.4-1/png/png.c ****          i++;
 181:fltk-1.3.4-1/png/png.c ****          if (user_png_ver[i] != PNG_LIBPNG_VER_STRING[i])
 182:fltk-1.3.4-1/png/png.c ****             png_ptr->flags |= PNG_FLAG_LIBRARY_MISMATCH;
 183:fltk-1.3.4-1/png/png.c ****          if (user_png_ver[i] == '.')
 184:fltk-1.3.4-1/png/png.c ****             found_dots++;
 185:fltk-1.3.4-1/png/png.c ****       } while (found_dots < 2 && user_png_ver[i] != 0 &&
 186:fltk-1.3.4-1/png/png.c ****             PNG_LIBPNG_VER_STRING[i] != 0);
 187:fltk-1.3.4-1/png/png.c ****    }
 188:fltk-1.3.4-1/png/png.c **** 
 189:fltk-1.3.4-1/png/png.c ****    else
 190:fltk-1.3.4-1/png/png.c ****       png_ptr->flags |= PNG_FLAG_LIBRARY_MISMATCH;
 191:fltk-1.3.4-1/png/png.c **** 
 192:fltk-1.3.4-1/png/png.c ****    if ((png_ptr->flags & PNG_FLAG_LIBRARY_MISMATCH) != 0)
 193:fltk-1.3.4-1/png/png.c ****    {
 194:fltk-1.3.4-1/png/png.c **** #ifdef PNG_WARNINGS_SUPPORTED
 195:fltk-1.3.4-1/png/png.c ****       size_t pos = 0;
 196:fltk-1.3.4-1/png/png.c ****       char m[128];
 197:fltk-1.3.4-1/png/png.c **** 
 198:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos,
 199:fltk-1.3.4-1/png/png.c ****           "Application built with libpng-");
 200:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, user_png_ver);
 201:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, " but running with ");
 202:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, PNG_LIBPNG_VER_STRING);
 203:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(pos)
 204:fltk-1.3.4-1/png/png.c **** 
 205:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, m);
 206:fltk-1.3.4-1/png/png.c **** #endif
 207:fltk-1.3.4-1/png/png.c **** 
 208:fltk-1.3.4-1/png/png.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
 209:fltk-1.3.4-1/png/png.c ****       png_ptr->flags = 0;
 210:fltk-1.3.4-1/png/png.c **** #endif
 211:fltk-1.3.4-1/png/png.c **** 
 212:fltk-1.3.4-1/png/png.c ****       return 0;
 213:fltk-1.3.4-1/png/png.c ****    }
 214:fltk-1.3.4-1/png/png.c **** 
 215:fltk-1.3.4-1/png/png.c ****    /* Success return. */
 216:fltk-1.3.4-1/png/png.c ****    return 1;
 217:fltk-1.3.4-1/png/png.c **** }
 218:fltk-1.3.4-1/png/png.c **** 
 219:fltk-1.3.4-1/png/png.c **** /* Generic function to create a png_struct for either read or write - this
 220:fltk-1.3.4-1/png/png.c ****  * contains the common initialization.
 221:fltk-1.3.4-1/png/png.c ****  */
 222:fltk-1.3.4-1/png/png.c **** PNG_FUNCTION(png_structp /* PRIVATE */,
 223:fltk-1.3.4-1/png/png.c **** png_create_png_struct,(png_const_charp user_png_ver, png_voidp error_ptr,
 224:fltk-1.3.4-1/png/png.c ****     png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr,
 225:fltk-1.3.4-1/png/png.c ****     png_malloc_ptr malloc_fn, png_free_ptr free_fn),PNG_ALLOCATED)
 226:fltk-1.3.4-1/png/png.c **** {
 227:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 228:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_SETJMP_SUPPORTED
 229:fltk-1.3.4-1/png/png.c ****       jmp_buf create_jmp_buf;
 230:fltk-1.3.4-1/png/png.c **** #  endif
 231:fltk-1.3.4-1/png/png.c **** 
 232:fltk-1.3.4-1/png/png.c ****    /* This temporary stack-allocated structure is used to provide a place to
 233:fltk-1.3.4-1/png/png.c ****     * build enough context to allow the user provided memory allocator (if any)
 234:fltk-1.3.4-1/png/png.c ****     * to be called.
 235:fltk-1.3.4-1/png/png.c ****     */
 236:fltk-1.3.4-1/png/png.c ****    memset(&create_struct, 0, (sizeof create_struct));
 237:fltk-1.3.4-1/png/png.c **** 
 238:fltk-1.3.4-1/png/png.c ****    /* Added at libpng-1.2.6 */
 239:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_USER_LIMITS_SUPPORTED
 240:fltk-1.3.4-1/png/png.c ****       create_struct.user_width_max = PNG_USER_WIDTH_MAX;
 241:fltk-1.3.4-1/png/png.c ****       create_struct.user_height_max = PNG_USER_HEIGHT_MAX;
 242:fltk-1.3.4-1/png/png.c **** 
 243:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_USER_CHUNK_CACHE_MAX
 244:fltk-1.3.4-1/png/png.c ****          /* Added at libpng-1.2.43 and 1.4.0 */
 245:fltk-1.3.4-1/png/png.c ****          create_struct.user_chunk_cache_max = PNG_USER_CHUNK_CACHE_MAX;
 246:fltk-1.3.4-1/png/png.c **** #     endif
 247:fltk-1.3.4-1/png/png.c **** 
 248:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_USER_CHUNK_MALLOC_MAX
 249:fltk-1.3.4-1/png/png.c ****          /* Added at libpng-1.2.43 and 1.4.1, required only for read but exists
 250:fltk-1.3.4-1/png/png.c ****           * in png_struct regardless.
 251:fltk-1.3.4-1/png/png.c ****           */
 252:fltk-1.3.4-1/png/png.c ****          create_struct.user_chunk_malloc_max = PNG_USER_CHUNK_MALLOC_MAX;
 253:fltk-1.3.4-1/png/png.c **** #     endif
 254:fltk-1.3.4-1/png/png.c **** #  endif
 255:fltk-1.3.4-1/png/png.c **** 
 256:fltk-1.3.4-1/png/png.c ****    /* The following two API calls simply set fields in png_struct, so it is safe
 257:fltk-1.3.4-1/png/png.c ****     * to do them now even though error handling is not yet set up.
 258:fltk-1.3.4-1/png/png.c ****     */
 259:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_USER_MEM_SUPPORTED
 260:fltk-1.3.4-1/png/png.c ****       png_set_mem_fn(&create_struct, mem_ptr, malloc_fn, free_fn);
 261:fltk-1.3.4-1/png/png.c **** #  else
 262:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(mem_ptr)
 263:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(malloc_fn)
 264:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(free_fn)
 265:fltk-1.3.4-1/png/png.c **** #  endif
 266:fltk-1.3.4-1/png/png.c **** 
 267:fltk-1.3.4-1/png/png.c ****    /* (*error_fn) can return control to the caller after the error_ptr is set,
 268:fltk-1.3.4-1/png/png.c ****     * this will result in a memory leak unless the error_fn does something
 269:fltk-1.3.4-1/png/png.c ****     * extremely sophisticated.  The design lacks merit but is implicit in the
 270:fltk-1.3.4-1/png/png.c ****     * API.
 271:fltk-1.3.4-1/png/png.c ****     */
 272:fltk-1.3.4-1/png/png.c ****    png_set_error_fn(&create_struct, error_ptr, error_fn, warn_fn);
 273:fltk-1.3.4-1/png/png.c **** 
 274:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_SETJMP_SUPPORTED
 275:fltk-1.3.4-1/png/png.c ****       if (!setjmp(create_jmp_buf))
 276:fltk-1.3.4-1/png/png.c ****       {
 277:fltk-1.3.4-1/png/png.c ****          /* Temporarily fake out the longjmp information until we have
 278:fltk-1.3.4-1/png/png.c ****           * successfully completed this function.  This only works if we have
 279:fltk-1.3.4-1/png/png.c ****           * setjmp() support compiled in, but it is safe - this stuff should
 280:fltk-1.3.4-1/png/png.c ****           * never happen.
 281:fltk-1.3.4-1/png/png.c ****           */
 282:fltk-1.3.4-1/png/png.c ****          create_struct.jmp_buf_ptr = &create_jmp_buf;
 283:fltk-1.3.4-1/png/png.c ****          create_struct.jmp_buf_size = 0; /*stack allocation*/
 284:fltk-1.3.4-1/png/png.c ****          create_struct.longjmp_fn = longjmp;
 285:fltk-1.3.4-1/png/png.c **** #  else
 286:fltk-1.3.4-1/png/png.c ****       {
 287:fltk-1.3.4-1/png/png.c **** #  endif
 288:fltk-1.3.4-1/png/png.c ****          /* Call the general version checker (shared with read and write code):
 289:fltk-1.3.4-1/png/png.c ****           */
 290:fltk-1.3.4-1/png/png.c ****          if (png_user_version_check(&create_struct, user_png_ver) != 0)
 291:fltk-1.3.4-1/png/png.c ****          {
 292:fltk-1.3.4-1/png/png.c ****             png_structrp png_ptr = png_voidcast(png_structrp,
 293:fltk-1.3.4-1/png/png.c ****                png_malloc_warn(&create_struct, (sizeof *png_ptr)));
 294:fltk-1.3.4-1/png/png.c **** 
 295:fltk-1.3.4-1/png/png.c ****             if (png_ptr != NULL)
 296:fltk-1.3.4-1/png/png.c ****             {
 297:fltk-1.3.4-1/png/png.c ****                /* png_ptr->zstream holds a back-pointer to the png_struct, so
 298:fltk-1.3.4-1/png/png.c ****                 * this can only be done now:
 299:fltk-1.3.4-1/png/png.c ****                 */
 300:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.zalloc = png_zalloc;
 301:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.zfree = png_zfree;
 302:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.opaque = png_ptr;
 303:fltk-1.3.4-1/png/png.c **** 
 304:fltk-1.3.4-1/png/png.c **** #              ifdef PNG_SETJMP_SUPPORTED
 305:fltk-1.3.4-1/png/png.c ****                   /* Eliminate the local error handling: */
 306:fltk-1.3.4-1/png/png.c ****                   create_struct.jmp_buf_ptr = NULL;
 307:fltk-1.3.4-1/png/png.c ****                   create_struct.jmp_buf_size = 0;
 308:fltk-1.3.4-1/png/png.c ****                   create_struct.longjmp_fn = 0;
 309:fltk-1.3.4-1/png/png.c **** #              endif
 310:fltk-1.3.4-1/png/png.c **** 
 311:fltk-1.3.4-1/png/png.c ****                *png_ptr = create_struct;
 312:fltk-1.3.4-1/png/png.c **** 
 313:fltk-1.3.4-1/png/png.c ****                /* This is the successful return point */
 314:fltk-1.3.4-1/png/png.c ****                return png_ptr;
 315:fltk-1.3.4-1/png/png.c ****             }
 316:fltk-1.3.4-1/png/png.c ****          }
 317:fltk-1.3.4-1/png/png.c ****       }
 318:fltk-1.3.4-1/png/png.c **** 
 319:fltk-1.3.4-1/png/png.c ****    /* A longjmp because of a bug in the application storage allocator or a
 320:fltk-1.3.4-1/png/png.c ****     * simple failure to allocate the png_struct.
 321:fltk-1.3.4-1/png/png.c ****     */
 322:fltk-1.3.4-1/png/png.c ****    return NULL;
 323:fltk-1.3.4-1/png/png.c **** }
 324:fltk-1.3.4-1/png/png.c **** 
 325:fltk-1.3.4-1/png/png.c **** /* Allocate the memory for an info_struct for the application. */
 326:fltk-1.3.4-1/png/png.c **** PNG_FUNCTION(png_infop,PNGAPI
 327:fltk-1.3.4-1/png/png.c **** png_create_info_struct,(png_const_structrp png_ptr),PNG_ALLOCATED)
 328:fltk-1.3.4-1/png/png.c **** {
 329:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr;
 330:fltk-1.3.4-1/png/png.c **** 
 331:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_create_info_struct");
 332:fltk-1.3.4-1/png/png.c **** 
 333:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 334:fltk-1.3.4-1/png/png.c ****       return NULL;
 335:fltk-1.3.4-1/png/png.c **** 
 336:fltk-1.3.4-1/png/png.c ****    /* Use the internal API that does not (or at least should not) error out, so
 337:fltk-1.3.4-1/png/png.c ****     * that this call always returns ok.  The application typically sets up the
 338:fltk-1.3.4-1/png/png.c ****     * error handling *after* creating the info_struct because this is the way it
 339:fltk-1.3.4-1/png/png.c ****     * has always been done in 'example.c'.
 340:fltk-1.3.4-1/png/png.c ****     */
 341:fltk-1.3.4-1/png/png.c ****    info_ptr = png_voidcast(png_inforp, png_malloc_base(png_ptr,
 342:fltk-1.3.4-1/png/png.c ****       (sizeof *info_ptr)));
 343:fltk-1.3.4-1/png/png.c **** 
 344:fltk-1.3.4-1/png/png.c ****    if (info_ptr != NULL)
 345:fltk-1.3.4-1/png/png.c ****       memset(info_ptr, 0, (sizeof *info_ptr));
 346:fltk-1.3.4-1/png/png.c **** 
 347:fltk-1.3.4-1/png/png.c ****    return info_ptr;
 348:fltk-1.3.4-1/png/png.c **** }
 349:fltk-1.3.4-1/png/png.c **** 
 350:fltk-1.3.4-1/png/png.c **** /* This function frees the memory associated with a single info struct.
 351:fltk-1.3.4-1/png/png.c ****  * Normally, one would use either png_destroy_read_struct() or
 352:fltk-1.3.4-1/png/png.c ****  * png_destroy_write_struct() to free an info struct, but this may be
 353:fltk-1.3.4-1/png/png.c ****  * useful for some applications.  From libpng 1.6.0 this function is also used
 354:fltk-1.3.4-1/png/png.c ****  * internally to implement the png_info release part of the 'struct' destroy
 355:fltk-1.3.4-1/png/png.c ****  * APIs.  This ensures that all possible approaches free the same data (all of
 356:fltk-1.3.4-1/png/png.c ****  * it).
 357:fltk-1.3.4-1/png/png.c ****  */
 358:fltk-1.3.4-1/png/png.c **** void PNGAPI
 359:fltk-1.3.4-1/png/png.c **** png_destroy_info_struct(png_const_structrp png_ptr, png_infopp info_ptr_ptr)
 360:fltk-1.3.4-1/png/png.c **** {
 361:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = NULL;
 362:fltk-1.3.4-1/png/png.c **** 
 363:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_destroy_info_struct");
 364:fltk-1.3.4-1/png/png.c **** 
 365:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 366:fltk-1.3.4-1/png/png.c ****       return;
 367:fltk-1.3.4-1/png/png.c **** 
 368:fltk-1.3.4-1/png/png.c ****    if (info_ptr_ptr != NULL)
 369:fltk-1.3.4-1/png/png.c ****       info_ptr = *info_ptr_ptr;
 370:fltk-1.3.4-1/png/png.c **** 
 371:fltk-1.3.4-1/png/png.c ****    if (info_ptr != NULL)
 372:fltk-1.3.4-1/png/png.c ****    {
 373:fltk-1.3.4-1/png/png.c ****       /* Do this first in case of an error below; if the app implements its own
 374:fltk-1.3.4-1/png/png.c ****        * memory management this can lead to png_free calling png_error, which
 375:fltk-1.3.4-1/png/png.c ****        * will abort this routine and return control to the app error handler.
 376:fltk-1.3.4-1/png/png.c ****        * An infinite loop may result if it then tries to free the same info
 377:fltk-1.3.4-1/png/png.c ****        * ptr.
 378:fltk-1.3.4-1/png/png.c ****        */
 379:fltk-1.3.4-1/png/png.c ****       *info_ptr_ptr = NULL;
 380:fltk-1.3.4-1/png/png.c **** 
 381:fltk-1.3.4-1/png/png.c ****       png_free_data(png_ptr, info_ptr, PNG_FREE_ALL, -1);
 382:fltk-1.3.4-1/png/png.c ****       memset(info_ptr, 0, (sizeof *info_ptr));
 383:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr);
 384:fltk-1.3.4-1/png/png.c ****    }
 385:fltk-1.3.4-1/png/png.c **** }
 386:fltk-1.3.4-1/png/png.c **** 
 387:fltk-1.3.4-1/png/png.c **** /* Initialize the info structure.  This is now an internal function (0.89)
 388:fltk-1.3.4-1/png/png.c ****  * and applications using it are urged to use png_create_info_struct()
 389:fltk-1.3.4-1/png/png.c ****  * instead.  Use deprecated in 1.6.0, internal use removed (used internally it
 390:fltk-1.3.4-1/png/png.c ****  * is just a memset).
 391:fltk-1.3.4-1/png/png.c ****  *
 392:fltk-1.3.4-1/png/png.c ****  * NOTE: it is almost inconceivable that this API is used because it bypasses
 393:fltk-1.3.4-1/png/png.c ****  * the user-memory mechanism and the user error handling/warning mechanisms in
 394:fltk-1.3.4-1/png/png.c ****  * those cases where it does anything other than a memset.
 395:fltk-1.3.4-1/png/png.c ****  */
 396:fltk-1.3.4-1/png/png.c **** PNG_FUNCTION(void,PNGAPI
 397:fltk-1.3.4-1/png/png.c **** png_info_init_3,(png_infopp ptr_ptr, png_size_t png_info_struct_size),
 398:fltk-1.3.4-1/png/png.c ****    PNG_DEPRECATED)
 399:fltk-1.3.4-1/png/png.c **** {
 400:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = *ptr_ptr;
 401:fltk-1.3.4-1/png/png.c **** 
 402:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_info_init_3");
 403:fltk-1.3.4-1/png/png.c **** 
 404:fltk-1.3.4-1/png/png.c ****    if (info_ptr == NULL)
 405:fltk-1.3.4-1/png/png.c ****       return;
 406:fltk-1.3.4-1/png/png.c **** 
 407:fltk-1.3.4-1/png/png.c ****    if ((sizeof (png_info)) > png_info_struct_size)
 408:fltk-1.3.4-1/png/png.c ****    {
 409:fltk-1.3.4-1/png/png.c ****       *ptr_ptr = NULL;
 410:fltk-1.3.4-1/png/png.c ****       /* The following line is why this API should not be used: */
 411:fltk-1.3.4-1/png/png.c ****       free(info_ptr);
 412:fltk-1.3.4-1/png/png.c ****       info_ptr = png_voidcast(png_inforp, png_malloc_base(NULL,
 413:fltk-1.3.4-1/png/png.c ****          (sizeof *info_ptr)));
 414:fltk-1.3.4-1/png/png.c ****       *ptr_ptr = info_ptr;
 415:fltk-1.3.4-1/png/png.c ****    }
 416:fltk-1.3.4-1/png/png.c **** 
 417:fltk-1.3.4-1/png/png.c ****    /* Set everything to 0 */
 418:fltk-1.3.4-1/png/png.c ****    memset(info_ptr, 0, (sizeof *info_ptr));
 419:fltk-1.3.4-1/png/png.c **** }
 420:fltk-1.3.4-1/png/png.c **** 
 421:fltk-1.3.4-1/png/png.c **** /* The following API is not called internally */
 422:fltk-1.3.4-1/png/png.c **** void PNGAPI
 423:fltk-1.3.4-1/png/png.c **** png_data_freer(png_const_structrp png_ptr, png_inforp info_ptr,
 424:fltk-1.3.4-1/png/png.c ****    int freer, png_uint_32 mask)
 425:fltk-1.3.4-1/png/png.c **** {
 426:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_data_freer");
 427:fltk-1.3.4-1/png/png.c **** 
 428:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL || info_ptr == NULL)
 429:fltk-1.3.4-1/png/png.c ****       return;
 430:fltk-1.3.4-1/png/png.c **** 
 431:fltk-1.3.4-1/png/png.c ****    if (freer == PNG_DESTROY_WILL_FREE_DATA)
 432:fltk-1.3.4-1/png/png.c ****       info_ptr->free_me |= mask;
 433:fltk-1.3.4-1/png/png.c **** 
 434:fltk-1.3.4-1/png/png.c ****    else if (freer == PNG_USER_WILL_FREE_DATA)
 435:fltk-1.3.4-1/png/png.c ****       info_ptr->free_me &= ~mask;
 436:fltk-1.3.4-1/png/png.c **** 
 437:fltk-1.3.4-1/png/png.c ****    else
 438:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Unknown freer parameter in png_data_freer");
 439:fltk-1.3.4-1/png/png.c **** }
 440:fltk-1.3.4-1/png/png.c **** 
 441:fltk-1.3.4-1/png/png.c **** void PNGAPI
 442:fltk-1.3.4-1/png/png.c **** png_free_data(png_const_structrp png_ptr, png_inforp info_ptr, png_uint_32 mask,
 443:fltk-1.3.4-1/png/png.c ****    int num)
 444:fltk-1.3.4-1/png/png.c **** {
 445:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_free_data");
 446:fltk-1.3.4-1/png/png.c **** 
 447:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL || info_ptr == NULL)
 448:fltk-1.3.4-1/png/png.c ****       return;
 449:fltk-1.3.4-1/png/png.c **** 
 450:fltk-1.3.4-1/png/png.c **** #ifdef PNG_TEXT_SUPPORTED
 451:fltk-1.3.4-1/png/png.c ****    /* Free text item num or (if num == -1) all text items */
 452:fltk-1.3.4-1/png/png.c ****    if (info_ptr->text != 0 &&
 453:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_TEXT) & info_ptr->free_me) != 0)
 454:fltk-1.3.4-1/png/png.c ****    {
 455:fltk-1.3.4-1/png/png.c ****       if (num != -1)
 456:fltk-1.3.4-1/png/png.c ****       {
 457:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->text[num].key);
 458:fltk-1.3.4-1/png/png.c ****          info_ptr->text[num].key = NULL;
 459:fltk-1.3.4-1/png/png.c ****       }
 460:fltk-1.3.4-1/png/png.c **** 
 461:fltk-1.3.4-1/png/png.c ****       else
 462:fltk-1.3.4-1/png/png.c ****       {
 463:fltk-1.3.4-1/png/png.c ****          int i;
 464:fltk-1.3.4-1/png/png.c **** 
 465:fltk-1.3.4-1/png/png.c ****          for (i = 0; i < info_ptr->num_text; i++)
 466:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 467:fltk-1.3.4-1/png/png.c **** 
 468:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->text);
 469:fltk-1.3.4-1/png/png.c ****          info_ptr->text = NULL;
 470:fltk-1.3.4-1/png/png.c ****          info_ptr->num_text = 0;
 471:fltk-1.3.4-1/png/png.c ****       }
 472:fltk-1.3.4-1/png/png.c ****    }
 473:fltk-1.3.4-1/png/png.c **** #endif
 474:fltk-1.3.4-1/png/png.c **** 
 475:fltk-1.3.4-1/png/png.c **** #ifdef PNG_tRNS_SUPPORTED
 476:fltk-1.3.4-1/png/png.c ****    /* Free any tRNS entry */
 477:fltk-1.3.4-1/png/png.c ****    if (((mask & PNG_FREE_TRNS) & info_ptr->free_me) != 0)
 478:fltk-1.3.4-1/png/png.c ****    {
 479:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->trans_alpha);
 480:fltk-1.3.4-1/png/png.c ****       info_ptr->trans_alpha = NULL;
 481:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_tRNS;
 482:fltk-1.3.4-1/png/png.c ****    }
 483:fltk-1.3.4-1/png/png.c **** #endif
 484:fltk-1.3.4-1/png/png.c **** 
 485:fltk-1.3.4-1/png/png.c **** #ifdef PNG_sCAL_SUPPORTED
 486:fltk-1.3.4-1/png/png.c ****    /* Free any sCAL entry */
 487:fltk-1.3.4-1/png/png.c ****    if (((mask & PNG_FREE_SCAL) & info_ptr->free_me) != 0)
 488:fltk-1.3.4-1/png/png.c ****    {
 489:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->scal_s_width);
 490:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->scal_s_height);
 491:fltk-1.3.4-1/png/png.c ****       info_ptr->scal_s_width = NULL;
 492:fltk-1.3.4-1/png/png.c ****       info_ptr->scal_s_height = NULL;
 493:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_sCAL;
 494:fltk-1.3.4-1/png/png.c ****    }
 495:fltk-1.3.4-1/png/png.c **** #endif
 496:fltk-1.3.4-1/png/png.c **** 
 497:fltk-1.3.4-1/png/png.c **** #ifdef PNG_pCAL_SUPPORTED
 498:fltk-1.3.4-1/png/png.c ****    /* Free any pCAL entry */
 499:fltk-1.3.4-1/png/png.c ****    if (((mask & PNG_FREE_PCAL) & info_ptr->free_me) != 0)
 500:fltk-1.3.4-1/png/png.c ****    {
 501:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->pcal_purpose);
 502:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->pcal_units);
 503:fltk-1.3.4-1/png/png.c ****       info_ptr->pcal_purpose = NULL;
 504:fltk-1.3.4-1/png/png.c ****       info_ptr->pcal_units = NULL;
 505:fltk-1.3.4-1/png/png.c **** 
 506:fltk-1.3.4-1/png/png.c ****       if (info_ptr->pcal_params != NULL)
 507:fltk-1.3.4-1/png/png.c ****          {
 508:fltk-1.3.4-1/png/png.c ****             int i;
 509:fltk-1.3.4-1/png/png.c **** 
 510:fltk-1.3.4-1/png/png.c ****             for (i = 0; i < info_ptr->pcal_nparams; i++)
 511:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->pcal_params[i]);
 512:fltk-1.3.4-1/png/png.c **** 
 513:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->pcal_params);
 514:fltk-1.3.4-1/png/png.c ****             info_ptr->pcal_params = NULL;
 515:fltk-1.3.4-1/png/png.c ****          }
 516:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_pCAL;
 517:fltk-1.3.4-1/png/png.c ****    }
 518:fltk-1.3.4-1/png/png.c **** #endif
 519:fltk-1.3.4-1/png/png.c **** 
 520:fltk-1.3.4-1/png/png.c **** #ifdef PNG_iCCP_SUPPORTED
 521:fltk-1.3.4-1/png/png.c ****    /* Free any profile entry */
 522:fltk-1.3.4-1/png/png.c ****    if (((mask & PNG_FREE_ICCP) & info_ptr->free_me) != 0)
 523:fltk-1.3.4-1/png/png.c ****    {
 524:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->iccp_name);
 525:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->iccp_profile);
 526:fltk-1.3.4-1/png/png.c ****       info_ptr->iccp_name = NULL;
 527:fltk-1.3.4-1/png/png.c ****       info_ptr->iccp_profile = NULL;
 528:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_iCCP;
 529:fltk-1.3.4-1/png/png.c ****    }
 530:fltk-1.3.4-1/png/png.c **** #endif
 531:fltk-1.3.4-1/png/png.c **** 
 532:fltk-1.3.4-1/png/png.c **** #ifdef PNG_sPLT_SUPPORTED
 533:fltk-1.3.4-1/png/png.c ****    /* Free a given sPLT entry, or (if num == -1) all sPLT entries */
 534:fltk-1.3.4-1/png/png.c ****    if (info_ptr->splt_palettes != 0 &&
 535:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_SPLT) & info_ptr->free_me) != 0)
 536:fltk-1.3.4-1/png/png.c ****    {
 537:fltk-1.3.4-1/png/png.c ****       if (num != -1)
 538:fltk-1.3.4-1/png/png.c ****       {
 539:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->splt_palettes[num].name);
 540:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->splt_palettes[num].entries);
 541:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].name = NULL;
 542:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].entries = NULL;
 543:fltk-1.3.4-1/png/png.c ****       }
 544:fltk-1.3.4-1/png/png.c **** 
 545:fltk-1.3.4-1/png/png.c ****       else
 546:fltk-1.3.4-1/png/png.c ****       {
 547:fltk-1.3.4-1/png/png.c ****          if (info_ptr->splt_palettes_num != 0)
 548:fltk-1.3.4-1/png/png.c ****          {
 549:fltk-1.3.4-1/png/png.c ****             int i;
 550:fltk-1.3.4-1/png/png.c **** 
 551:fltk-1.3.4-1/png/png.c ****             for (i = 0; i < info_ptr->splt_palettes_num; i++)
 552:fltk-1.3.4-1/png/png.c ****             {
 553:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->splt_palettes[i].name);
 554:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->splt_palettes[i].entries);
 555:fltk-1.3.4-1/png/png.c ****             }
 556:fltk-1.3.4-1/png/png.c **** 
 557:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->splt_palettes);
 558:fltk-1.3.4-1/png/png.c ****             info_ptr->splt_palettes = NULL;
 559:fltk-1.3.4-1/png/png.c ****             info_ptr->splt_palettes_num = 0;
 560:fltk-1.3.4-1/png/png.c ****          }
 561:fltk-1.3.4-1/png/png.c ****          info_ptr->valid &= ~PNG_INFO_sPLT;
 562:fltk-1.3.4-1/png/png.c ****       }
 563:fltk-1.3.4-1/png/png.c ****    }
 564:fltk-1.3.4-1/png/png.c **** #endif
 565:fltk-1.3.4-1/png/png.c **** 
 566:fltk-1.3.4-1/png/png.c **** #ifdef PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED
 567:fltk-1.3.4-1/png/png.c ****    if (info_ptr->unknown_chunks != 0 &&
 568:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_UNKN) & info_ptr->free_me) != 0)
 569:fltk-1.3.4-1/png/png.c ****    {
 570:fltk-1.3.4-1/png/png.c ****       if (num != -1)
 571:fltk-1.3.4-1/png/png.c ****       {
 572:fltk-1.3.4-1/png/png.c ****           png_free(png_ptr, info_ptr->unknown_chunks[num].data);
 573:fltk-1.3.4-1/png/png.c ****           info_ptr->unknown_chunks[num].data = NULL;
 574:fltk-1.3.4-1/png/png.c ****       }
 575:fltk-1.3.4-1/png/png.c **** 
 576:fltk-1.3.4-1/png/png.c ****       else
 577:fltk-1.3.4-1/png/png.c ****       {
 578:fltk-1.3.4-1/png/png.c ****          int i;
 579:fltk-1.3.4-1/png/png.c **** 
 580:fltk-1.3.4-1/png/png.c ****          if (info_ptr->unknown_chunks_num != 0)
 581:fltk-1.3.4-1/png/png.c ****          {
 582:fltk-1.3.4-1/png/png.c ****             for (i = 0; i < info_ptr->unknown_chunks_num; i++)
 583:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->unknown_chunks[i].data);
 584:fltk-1.3.4-1/png/png.c **** 
 585:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->unknown_chunks);
 586:fltk-1.3.4-1/png/png.c ****             info_ptr->unknown_chunks = NULL;
 587:fltk-1.3.4-1/png/png.c ****             info_ptr->unknown_chunks_num = 0;
 588:fltk-1.3.4-1/png/png.c ****          }
 589:fltk-1.3.4-1/png/png.c ****       }
 590:fltk-1.3.4-1/png/png.c ****    }
 591:fltk-1.3.4-1/png/png.c **** #endif
 592:fltk-1.3.4-1/png/png.c **** 
 593:fltk-1.3.4-1/png/png.c **** #ifdef PNG_hIST_SUPPORTED
 594:fltk-1.3.4-1/png/png.c ****    /* Free any hIST entry */
 595:fltk-1.3.4-1/png/png.c ****    if (((mask & PNG_FREE_HIST) & info_ptr->free_me) != 0)
 596:fltk-1.3.4-1/png/png.c ****    {
 597:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->hist);
 598:fltk-1.3.4-1/png/png.c ****       info_ptr->hist = NULL;
 599:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_hIST;
 600:fltk-1.3.4-1/png/png.c ****    }
 601:fltk-1.3.4-1/png/png.c **** #endif
 602:fltk-1.3.4-1/png/png.c **** 
 603:fltk-1.3.4-1/png/png.c ****    /* Free any PLTE entry that was internally allocated */
 604:fltk-1.3.4-1/png/png.c ****    if (((mask & PNG_FREE_PLTE) & info_ptr->free_me) != 0)
 605:fltk-1.3.4-1/png/png.c ****    {
 606:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->palette);
 607:fltk-1.3.4-1/png/png.c ****       info_ptr->palette = NULL;
 608:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_PLTE;
 609:fltk-1.3.4-1/png/png.c ****       info_ptr->num_palette = 0;
 610:fltk-1.3.4-1/png/png.c ****    }
 611:fltk-1.3.4-1/png/png.c **** 
 612:fltk-1.3.4-1/png/png.c **** #ifdef PNG_INFO_IMAGE_SUPPORTED
 613:fltk-1.3.4-1/png/png.c ****    /* Free any image bits attached to the info structure */
 614:fltk-1.3.4-1/png/png.c ****    if (((mask & PNG_FREE_ROWS) & info_ptr->free_me) != 0)
 615:fltk-1.3.4-1/png/png.c ****    {
 616:fltk-1.3.4-1/png/png.c ****       if (info_ptr->row_pointers != 0)
 617:fltk-1.3.4-1/png/png.c ****       {
 618:fltk-1.3.4-1/png/png.c ****          png_uint_32 row;
 619:fltk-1.3.4-1/png/png.c ****          for (row = 0; row < info_ptr->height; row++)
 620:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 621:fltk-1.3.4-1/png/png.c **** 
 622:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->row_pointers);
 623:fltk-1.3.4-1/png/png.c ****          info_ptr->row_pointers = NULL;
 624:fltk-1.3.4-1/png/png.c ****       }
 625:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_IDAT;
 626:fltk-1.3.4-1/png/png.c ****    }
 627:fltk-1.3.4-1/png/png.c **** #endif
 628:fltk-1.3.4-1/png/png.c **** 
 629:fltk-1.3.4-1/png/png.c ****    if (num != -1)
 630:fltk-1.3.4-1/png/png.c ****       mask &= ~PNG_FREE_MUL;
 631:fltk-1.3.4-1/png/png.c **** 
 632:fltk-1.3.4-1/png/png.c ****    info_ptr->free_me &= ~mask;
 633:fltk-1.3.4-1/png/png.c **** }
 634:fltk-1.3.4-1/png/png.c **** #endif /* READ || WRITE */
 635:fltk-1.3.4-1/png/png.c **** 
 636:fltk-1.3.4-1/png/png.c **** /* This function returns a pointer to the io_ptr associated with the user
 637:fltk-1.3.4-1/png/png.c ****  * functions.  The application should free any memory associated with this
 638:fltk-1.3.4-1/png/png.c ****  * pointer before png_write_destroy() or png_read_destroy() are called.
 639:fltk-1.3.4-1/png/png.c ****  */
 640:fltk-1.3.4-1/png/png.c **** png_voidp PNGAPI
 641:fltk-1.3.4-1/png/png.c **** png_get_io_ptr(png_const_structrp png_ptr)
 642:fltk-1.3.4-1/png/png.c **** {
 643:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 644:fltk-1.3.4-1/png/png.c ****       return (NULL);
 645:fltk-1.3.4-1/png/png.c **** 
 646:fltk-1.3.4-1/png/png.c ****    return (png_ptr->io_ptr);
 647:fltk-1.3.4-1/png/png.c **** }
 648:fltk-1.3.4-1/png/png.c **** 
 649:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_SUPPORTED) || defined(PNG_WRITE_SUPPORTED)
 650:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_STDIO_SUPPORTED
 651:fltk-1.3.4-1/png/png.c **** /* Initialize the default input/output functions for the PNG file.  If you
 652:fltk-1.3.4-1/png/png.c ****  * use your own read or write routines, you can call either png_set_read_fn()
 653:fltk-1.3.4-1/png/png.c ****  * or png_set_write_fn() instead of png_init_io().  If you have defined
 654:fltk-1.3.4-1/png/png.c ****  * PNG_NO_STDIO or otherwise disabled PNG_STDIO_SUPPORTED, you must use a
 655:fltk-1.3.4-1/png/png.c ****  * function of your own because "FILE *" isn't necessarily available.
 656:fltk-1.3.4-1/png/png.c ****  */
 657:fltk-1.3.4-1/png/png.c **** void PNGAPI
 658:fltk-1.3.4-1/png/png.c **** png_init_io(png_structrp png_ptr, png_FILE_p fp)
 659:fltk-1.3.4-1/png/png.c **** {
 660:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_init_io");
 661:fltk-1.3.4-1/png/png.c **** 
 662:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 663:fltk-1.3.4-1/png/png.c ****       return;
 664:fltk-1.3.4-1/png/png.c **** 
 665:fltk-1.3.4-1/png/png.c ****    png_ptr->io_ptr = (png_voidp)fp;
 666:fltk-1.3.4-1/png/png.c **** }
 667:fltk-1.3.4-1/png/png.c **** #  endif
 668:fltk-1.3.4-1/png/png.c **** 
 669:fltk-1.3.4-1/png/png.c **** #ifdef PNG_SAVE_INT_32_SUPPORTED
 670:fltk-1.3.4-1/png/png.c **** /* The png_save_int_32 function assumes integers are stored in two's
 671:fltk-1.3.4-1/png/png.c ****  * complement format.  If this isn't the case, then this routine needs to
 672:fltk-1.3.4-1/png/png.c ****  * be modified to write data in two's complement format.  Note that,
 673:fltk-1.3.4-1/png/png.c ****  * the following works correctly even if png_int_32 has more than 32 bits
 674:fltk-1.3.4-1/png/png.c ****  * (compare the more complex code required on read for sign extension.)
 675:fltk-1.3.4-1/png/png.c ****  */
 676:fltk-1.3.4-1/png/png.c **** void PNGAPI
 677:fltk-1.3.4-1/png/png.c **** png_save_int_32(png_bytep buf, png_int_32 i)
 678:fltk-1.3.4-1/png/png.c **** {
 679:fltk-1.3.4-1/png/png.c ****    buf[0] = (png_byte)((i >> 24) & 0xff);
 680:fltk-1.3.4-1/png/png.c ****    buf[1] = (png_byte)((i >> 16) & 0xff);
 681:fltk-1.3.4-1/png/png.c ****    buf[2] = (png_byte)((i >> 8) & 0xff);
 682:fltk-1.3.4-1/png/png.c ****    buf[3] = (png_byte)(i & 0xff);
 683:fltk-1.3.4-1/png/png.c **** }
 684:fltk-1.3.4-1/png/png.c **** #endif
 685:fltk-1.3.4-1/png/png.c **** 
 686:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_TIME_RFC1123_SUPPORTED
 687:fltk-1.3.4-1/png/png.c **** /* Convert the supplied time into an RFC 1123 string suitable for use in
 688:fltk-1.3.4-1/png/png.c ****  * a "Creation Time" or other text-based time string.
 689:fltk-1.3.4-1/png/png.c ****  */
 690:fltk-1.3.4-1/png/png.c **** int PNGAPI
 691:fltk-1.3.4-1/png/png.c **** png_convert_to_rfc1123_buffer(char out[29], png_const_timep ptime)
 692:fltk-1.3.4-1/png/png.c **** {
 693:fltk-1.3.4-1/png/png.c ****    static PNG_CONST char short_months[12][4] =
 694:fltk-1.3.4-1/png/png.c ****         {"Jan", "Feb", "Mar", "Apr", "May", "Jun",
 695:fltk-1.3.4-1/png/png.c ****          "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"};
 696:fltk-1.3.4-1/png/png.c **** 
 697:fltk-1.3.4-1/png/png.c ****    if (out == NULL)
 698:fltk-1.3.4-1/png/png.c ****       return 0;
 699:fltk-1.3.4-1/png/png.c **** 
 700:fltk-1.3.4-1/png/png.c ****    if (ptime->year > 9999 /* RFC1123 limitation */ ||
 701:fltk-1.3.4-1/png/png.c ****        ptime->month == 0    ||  ptime->month > 12  ||
 702:fltk-1.3.4-1/png/png.c ****        ptime->day   == 0    ||  ptime->day   > 31  ||
 703:fltk-1.3.4-1/png/png.c ****        ptime->hour  > 23    ||  ptime->minute > 59 ||
 704:fltk-1.3.4-1/png/png.c ****        ptime->second > 60)
 705:fltk-1.3.4-1/png/png.c ****       return 0;
 706:fltk-1.3.4-1/png/png.c **** 
 707:fltk-1.3.4-1/png/png.c ****    {
 708:fltk-1.3.4-1/png/png.c ****       size_t pos = 0;
 709:fltk-1.3.4-1/png/png.c ****       char number_buf[5]; /* enough for a four-digit year */
 710:fltk-1.3.4-1/png/png.c **** 
 711:fltk-1.3.4-1/png/png.c **** #     define APPEND_STRING(string) pos = png_safecat(out, 29, pos, (string))
 712:fltk-1.3.4-1/png/png.c **** #     define APPEND_NUMBER(format, value)\
 713:fltk-1.3.4-1/png/png.c ****          APPEND_STRING(PNG_FORMAT_NUMBER(number_buf, format, (value)))
 714:fltk-1.3.4-1/png/png.c **** #     define APPEND(ch) if (pos < 28) out[pos++] = (ch)
 715:fltk-1.3.4-1/png/png.c **** 
 716:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_u, (unsigned)ptime->day);
 717:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 718:fltk-1.3.4-1/png/png.c ****       APPEND_STRING(short_months[(ptime->month - 1)]);
 719:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 720:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_u, ptime->year);
 721:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 722:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->hour);
 723:fltk-1.3.4-1/png/png.c ****       APPEND(':');
 724:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->minute);
 725:fltk-1.3.4-1/png/png.c ****       APPEND(':');
 726:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->second);
 727:fltk-1.3.4-1/png/png.c ****       APPEND_STRING(" +0000"); /* This reliably terminates the buffer */
 728:fltk-1.3.4-1/png/png.c **** 
 729:fltk-1.3.4-1/png/png.c **** #     undef APPEND
 730:fltk-1.3.4-1/png/png.c **** #     undef APPEND_NUMBER
 731:fltk-1.3.4-1/png/png.c **** #     undef APPEND_STRING
 732:fltk-1.3.4-1/png/png.c ****    }
 733:fltk-1.3.4-1/png/png.c **** 
 734:fltk-1.3.4-1/png/png.c ****    return 1;
 735:fltk-1.3.4-1/png/png.c **** }
 736:fltk-1.3.4-1/png/png.c **** 
 737:fltk-1.3.4-1/png/png.c **** #     if PNG_LIBPNG_VER < 10700
 738:fltk-1.3.4-1/png/png.c **** /* To do: remove the following from libpng-1.7 */
 739:fltk-1.3.4-1/png/png.c **** /* Original API that uses a private buffer in png_struct.
 740:fltk-1.3.4-1/png/png.c ****  * Deprecated because it causes png_struct to carry a spurious temporary
 741:fltk-1.3.4-1/png/png.c ****  * buffer (png_struct::time_buffer), better to have the caller pass this in.
 742:fltk-1.3.4-1/png/png.c ****  */
 743:fltk-1.3.4-1/png/png.c **** png_const_charp PNGAPI
 744:fltk-1.3.4-1/png/png.c **** png_convert_to_rfc1123(png_structrp png_ptr, png_const_timep ptime)
 745:fltk-1.3.4-1/png/png.c **** {
 746:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL)
 747:fltk-1.3.4-1/png/png.c ****    {
 748:fltk-1.3.4-1/png/png.c ****       /* The only failure above if png_ptr != NULL is from an invalid ptime */
 749:fltk-1.3.4-1/png/png.c ****       if (png_convert_to_rfc1123_buffer(png_ptr->time_buffer, ptime) == 0)
 750:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Ignoring invalid time value");
 751:fltk-1.3.4-1/png/png.c **** 
 752:fltk-1.3.4-1/png/png.c ****       else
 753:fltk-1.3.4-1/png/png.c ****          return png_ptr->time_buffer;
 754:fltk-1.3.4-1/png/png.c ****    }
 755:fltk-1.3.4-1/png/png.c **** 
 756:fltk-1.3.4-1/png/png.c ****    return NULL;
 757:fltk-1.3.4-1/png/png.c **** }
 758:fltk-1.3.4-1/png/png.c **** #     endif
 759:fltk-1.3.4-1/png/png.c **** #  endif /* TIME_RFC1123 */
 760:fltk-1.3.4-1/png/png.c **** 
 761:fltk-1.3.4-1/png/png.c **** #endif /* READ || WRITE */
 762:fltk-1.3.4-1/png/png.c **** 
 763:fltk-1.3.4-1/png/png.c **** png_const_charp PNGAPI
 764:fltk-1.3.4-1/png/png.c **** png_get_copyright(png_const_structrp png_ptr)
 765:fltk-1.3.4-1/png/png.c **** {
 766:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
 767:fltk-1.3.4-1/png/png.c **** #ifdef PNG_STRING_COPYRIGHT
 768:fltk-1.3.4-1/png/png.c ****    return PNG_STRING_COPYRIGHT
 769:fltk-1.3.4-1/png/png.c **** #else
 770:fltk-1.3.4-1/png/png.c **** #  ifdef __STDC__
 771:fltk-1.3.4-1/png/png.c ****    return PNG_STRING_NEWLINE \
 772:fltk-1.3.4-1/png/png.c ****      "libpng version 1.6.16 - December 22, 2014" PNG_STRING_NEWLINE \
 773:fltk-1.3.4-1/png/png.c ****      "Copyright (c) 1998-2014 Glenn Randers-Pehrson" PNG_STRING_NEWLINE \
 774:fltk-1.3.4-1/png/png.c ****      "Copyright (c) 1996-1997 Andreas Dilger" PNG_STRING_NEWLINE \
 775:fltk-1.3.4-1/png/png.c ****      "Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc." \
 776:fltk-1.3.4-1/png/png.c ****      PNG_STRING_NEWLINE;
 777:fltk-1.3.4-1/png/png.c **** #  else
 778:fltk-1.3.4-1/png/png.c ****       return "libpng version 1.6.16 - December 22, 2014\
 779:fltk-1.3.4-1/png/png.c ****       Copyright (c) 1998-2014 Glenn Randers-Pehrson\
 780:fltk-1.3.4-1/png/png.c ****       Copyright (c) 1996-1997 Andreas Dilger\
 781:fltk-1.3.4-1/png/png.c ****       Copyright (c) 1995-1996 Guy Eric Schalnat, Group 42, Inc.";
 782:fltk-1.3.4-1/png/png.c **** #  endif
 783:fltk-1.3.4-1/png/png.c **** #endif
 784:fltk-1.3.4-1/png/png.c **** }
 785:fltk-1.3.4-1/png/png.c **** 
 786:fltk-1.3.4-1/png/png.c **** /* The following return the library version as a short string in the
 787:fltk-1.3.4-1/png/png.c ****  * format 1.0.0 through 99.99.99zz.  To get the version of *.h files
 788:fltk-1.3.4-1/png/png.c ****  * used with your application, print out PNG_LIBPNG_VER_STRING, which
 789:fltk-1.3.4-1/png/png.c ****  * is defined in png.h.
 790:fltk-1.3.4-1/png/png.c ****  * Note: now there is no difference between png_get_libpng_ver() and
 791:fltk-1.3.4-1/png/png.c ****  * png_get_header_ver().  Due to the version_nn_nn_nn typedef guard,
 792:fltk-1.3.4-1/png/png.c ****  * it is guaranteed that png.c uses the correct version of png.h.
 793:fltk-1.3.4-1/png/png.c ****  */
 794:fltk-1.3.4-1/png/png.c **** png_const_charp PNGAPI
 795:fltk-1.3.4-1/png/png.c **** png_get_libpng_ver(png_const_structrp png_ptr)
 796:fltk-1.3.4-1/png/png.c **** {
 797:fltk-1.3.4-1/png/png.c ****    /* Version of *.c files used when building libpng */
 798:fltk-1.3.4-1/png/png.c ****    return png_get_header_ver(png_ptr);
 799:fltk-1.3.4-1/png/png.c **** }
 800:fltk-1.3.4-1/png/png.c **** 
 801:fltk-1.3.4-1/png/png.c **** png_const_charp PNGAPI
 802:fltk-1.3.4-1/png/png.c **** png_get_header_ver(png_const_structrp png_ptr)
 803:fltk-1.3.4-1/png/png.c **** {
 804:fltk-1.3.4-1/png/png.c ****    /* Version of *.h files used when building libpng */
 805:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
 806:fltk-1.3.4-1/png/png.c ****    return PNG_LIBPNG_VER_STRING;
 807:fltk-1.3.4-1/png/png.c **** }
 808:fltk-1.3.4-1/png/png.c **** 
 809:fltk-1.3.4-1/png/png.c **** png_const_charp PNGAPI
 810:fltk-1.3.4-1/png/png.c **** png_get_header_version(png_const_structrp png_ptr)
 811:fltk-1.3.4-1/png/png.c **** {
 812:fltk-1.3.4-1/png/png.c ****    /* Returns longer string containing both version and date */
 813:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
 814:fltk-1.3.4-1/png/png.c **** #ifdef __STDC__
 815:fltk-1.3.4-1/png/png.c ****    return PNG_HEADER_VERSION_STRING
 816:fltk-1.3.4-1/png/png.c **** #  ifndef PNG_READ_SUPPORTED
 817:fltk-1.3.4-1/png/png.c ****    "     (NO READ SUPPORT)"
 818:fltk-1.3.4-1/png/png.c **** #  endif
 819:fltk-1.3.4-1/png/png.c ****    PNG_STRING_NEWLINE;
 820:fltk-1.3.4-1/png/png.c **** #else
 821:fltk-1.3.4-1/png/png.c ****    return PNG_HEADER_VERSION_STRING;
 822:fltk-1.3.4-1/png/png.c **** #endif
 823:fltk-1.3.4-1/png/png.c **** }
 824:fltk-1.3.4-1/png/png.c **** 
 825:fltk-1.3.4-1/png/png.c **** #ifdef PNG_BUILD_GRAYSCALE_PALETTE_SUPPORTED
 826:fltk-1.3.4-1/png/png.c **** /* NOTE: this routine is not used internally! */
 827:fltk-1.3.4-1/png/png.c **** /* Build a grayscale palette.  Palette is assumed to be 1 << bit_depth
 828:fltk-1.3.4-1/png/png.c ****  * large of png_color.  This lets grayscale images be treated as
 829:fltk-1.3.4-1/png/png.c ****  * paletted.  Most useful for gamma correction and simplification
 830:fltk-1.3.4-1/png/png.c ****  * of code.  This API is not used internally.
 831:fltk-1.3.4-1/png/png.c ****  */
 832:fltk-1.3.4-1/png/png.c **** void PNGAPI
 833:fltk-1.3.4-1/png/png.c **** png_build_grayscale_palette(int bit_depth, png_colorp palette)
 834:fltk-1.3.4-1/png/png.c **** {
 835:fltk-1.3.4-1/png/png.c ****    int num_palette;
 836:fltk-1.3.4-1/png/png.c ****    int color_inc;
 837:fltk-1.3.4-1/png/png.c ****    int i;
 838:fltk-1.3.4-1/png/png.c ****    int v;
 839:fltk-1.3.4-1/png/png.c **** 
 840:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_do_build_grayscale_palette");
 841:fltk-1.3.4-1/png/png.c **** 
 842:fltk-1.3.4-1/png/png.c ****    if (palette == NULL)
 843:fltk-1.3.4-1/png/png.c ****       return;
 844:fltk-1.3.4-1/png/png.c **** 
 845:fltk-1.3.4-1/png/png.c ****    switch (bit_depth)
 846:fltk-1.3.4-1/png/png.c ****    {
 847:fltk-1.3.4-1/png/png.c ****       case 1:
 848:fltk-1.3.4-1/png/png.c ****          num_palette = 2;
 849:fltk-1.3.4-1/png/png.c ****          color_inc = 0xff;
 850:fltk-1.3.4-1/png/png.c ****          break;
 851:fltk-1.3.4-1/png/png.c **** 
 852:fltk-1.3.4-1/png/png.c ****       case 2:
 853:fltk-1.3.4-1/png/png.c ****          num_palette = 4;
 854:fltk-1.3.4-1/png/png.c ****          color_inc = 0x55;
 855:fltk-1.3.4-1/png/png.c ****          break;
 856:fltk-1.3.4-1/png/png.c **** 
 857:fltk-1.3.4-1/png/png.c ****       case 4:
 858:fltk-1.3.4-1/png/png.c ****          num_palette = 16;
 859:fltk-1.3.4-1/png/png.c ****          color_inc = 0x11;
 860:fltk-1.3.4-1/png/png.c ****          break;
 861:fltk-1.3.4-1/png/png.c **** 
 862:fltk-1.3.4-1/png/png.c ****       case 8:
 863:fltk-1.3.4-1/png/png.c ****          num_palette = 256;
 864:fltk-1.3.4-1/png/png.c ****          color_inc = 1;
 865:fltk-1.3.4-1/png/png.c ****          break;
 866:fltk-1.3.4-1/png/png.c **** 
 867:fltk-1.3.4-1/png/png.c ****       default:
 868:fltk-1.3.4-1/png/png.c ****          num_palette = 0;
 869:fltk-1.3.4-1/png/png.c ****          color_inc = 0;
 870:fltk-1.3.4-1/png/png.c ****          break;
 871:fltk-1.3.4-1/png/png.c ****    }
 872:fltk-1.3.4-1/png/png.c **** 
 873:fltk-1.3.4-1/png/png.c ****    for (i = 0, v = 0; i < num_palette; i++, v += color_inc)
 874:fltk-1.3.4-1/png/png.c ****    {
 875:fltk-1.3.4-1/png/png.c ****       palette[i].red = (png_byte)v;
 876:fltk-1.3.4-1/png/png.c ****       palette[i].green = (png_byte)v;
 877:fltk-1.3.4-1/png/png.c ****       palette[i].blue = (png_byte)v;
 878:fltk-1.3.4-1/png/png.c ****    }
 879:fltk-1.3.4-1/png/png.c **** }
 880:fltk-1.3.4-1/png/png.c **** #endif
 881:fltk-1.3.4-1/png/png.c **** 
 882:fltk-1.3.4-1/png/png.c **** #ifdef PNG_SET_UNKNOWN_CHUNKS_SUPPORTED
 883:fltk-1.3.4-1/png/png.c **** int PNGAPI
 884:fltk-1.3.4-1/png/png.c **** png_handle_as_unknown(png_const_structrp png_ptr, png_const_bytep chunk_name)
 885:fltk-1.3.4-1/png/png.c **** {
 886:fltk-1.3.4-1/png/png.c ****    /* Check chunk_name and return "keep" value if it's on the list, else 0 */
 887:fltk-1.3.4-1/png/png.c ****    png_const_bytep p, p_end;
 888:fltk-1.3.4-1/png/png.c **** 
 889:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL || chunk_name == NULL || png_ptr->num_chunk_list == 0)
 890:fltk-1.3.4-1/png/png.c ****       return PNG_HANDLE_CHUNK_AS_DEFAULT;
 891:fltk-1.3.4-1/png/png.c **** 
 892:fltk-1.3.4-1/png/png.c ****    p_end = png_ptr->chunk_list;
 893:fltk-1.3.4-1/png/png.c ****    p = p_end + png_ptr->num_chunk_list*5; /* beyond end */
 894:fltk-1.3.4-1/png/png.c **** 
 895:fltk-1.3.4-1/png/png.c ****    /* The code is the fifth byte after each four byte string.  Historically this
 896:fltk-1.3.4-1/png/png.c ****     * code was always searched from the end of the list, this is no longer
 897:fltk-1.3.4-1/png/png.c ****     * necessary because the 'set' routine handles duplicate entries correcty.
 898:fltk-1.3.4-1/png/png.c ****     */
 899:fltk-1.3.4-1/png/png.c ****    do /* num_chunk_list > 0, so at least one */
 900:fltk-1.3.4-1/png/png.c ****    {
 901:fltk-1.3.4-1/png/png.c ****       p -= 5;
 902:fltk-1.3.4-1/png/png.c **** 
 903:fltk-1.3.4-1/png/png.c ****       if (memcmp(chunk_name, p, 4) == 0)
 904:fltk-1.3.4-1/png/png.c ****          return p[4];
 905:fltk-1.3.4-1/png/png.c ****    }
 906:fltk-1.3.4-1/png/png.c ****    while (p > p_end);
 907:fltk-1.3.4-1/png/png.c **** 
 908:fltk-1.3.4-1/png/png.c ****    /* This means that known chunks should be processed and unknown chunks should
 909:fltk-1.3.4-1/png/png.c ****     * be handled according to the value of png_ptr->unknown_default; this can be
 910:fltk-1.3.4-1/png/png.c ****     * confusing because, as a result, there are two levels of defaulting for
 911:fltk-1.3.4-1/png/png.c ****     * unknown chunks.
 912:fltk-1.3.4-1/png/png.c ****     */
 913:fltk-1.3.4-1/png/png.c ****    return PNG_HANDLE_CHUNK_AS_DEFAULT;
 914:fltk-1.3.4-1/png/png.c **** }
 915:fltk-1.3.4-1/png/png.c **** 
 916:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_UNKNOWN_CHUNKS_SUPPORTED) ||\
 917:fltk-1.3.4-1/png/png.c ****    defined(PNG_HANDLE_AS_UNKNOWN_SUPPORTED)
 918:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
 919:fltk-1.3.4-1/png/png.c **** png_chunk_unknown_handling(png_const_structrp png_ptr, png_uint_32 chunk_name)
 920:fltk-1.3.4-1/png/png.c **** {
 921:fltk-1.3.4-1/png/png.c ****    png_byte chunk_string[5];
 922:fltk-1.3.4-1/png/png.c **** 
 923:fltk-1.3.4-1/png/png.c ****    PNG_CSTRING_FROM_CHUNK(chunk_string, chunk_name);
 924:fltk-1.3.4-1/png/png.c ****    return png_handle_as_unknown(png_ptr, chunk_string);
 925:fltk-1.3.4-1/png/png.c **** }
 926:fltk-1.3.4-1/png/png.c **** #endif /* READ_UNKNOWN_CHUNKS || HANDLE_AS_UNKNOWN */
 927:fltk-1.3.4-1/png/png.c **** #endif /* SET_UNKNOWN_CHUNKS */
 928:fltk-1.3.4-1/png/png.c **** 
 929:fltk-1.3.4-1/png/png.c **** #ifdef PNG_READ_SUPPORTED
 930:fltk-1.3.4-1/png/png.c **** /* This function, added to libpng-1.0.6g, is untested. */
 931:fltk-1.3.4-1/png/png.c **** int PNGAPI
 932:fltk-1.3.4-1/png/png.c **** png_reset_zstream(png_structrp png_ptr)
 933:fltk-1.3.4-1/png/png.c **** {
 934:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 935:fltk-1.3.4-1/png/png.c ****       return Z_STREAM_ERROR;
 936:fltk-1.3.4-1/png/png.c **** 
 937:fltk-1.3.4-1/png/png.c ****    /* WARNING: this resets the window bits to the maximum! */
 938:fltk-1.3.4-1/png/png.c ****    return (inflateReset(&png_ptr->zstream));
 939:fltk-1.3.4-1/png/png.c **** }
 940:fltk-1.3.4-1/png/png.c **** #endif /* READ */
 941:fltk-1.3.4-1/png/png.c **** 
 942:fltk-1.3.4-1/png/png.c **** /* This function was added to libpng-1.0.7 */
 943:fltk-1.3.4-1/png/png.c **** png_uint_32 PNGAPI
 944:fltk-1.3.4-1/png/png.c **** png_access_version_number(void)
 945:fltk-1.3.4-1/png/png.c **** {
 946:fltk-1.3.4-1/png/png.c ****    /* Version of *.c files used when building libpng */
 947:fltk-1.3.4-1/png/png.c ****    return((png_uint_32)PNG_LIBPNG_VER);
 948:fltk-1.3.4-1/png/png.c **** }
 949:fltk-1.3.4-1/png/png.c **** 
 950:fltk-1.3.4-1/png/png.c **** 
 951:fltk-1.3.4-1/png/png.c **** 
 952:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_SUPPORTED) || defined(PNG_WRITE_SUPPORTED)
 953:fltk-1.3.4-1/png/png.c **** /* Ensure that png_ptr->zstream.msg holds some appropriate error message string.
 954:fltk-1.3.4-1/png/png.c ****  * If it doesn't 'ret' is used to set it to something appropriate, even in cases
 955:fltk-1.3.4-1/png/png.c ****  * like Z_OK or Z_STREAM_END where the error code is apparently a success code.
 956:fltk-1.3.4-1/png/png.c ****  */
 957:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
 958:fltk-1.3.4-1/png/png.c **** png_zstream_error(png_structrp png_ptr, int ret)
 959:fltk-1.3.4-1/png/png.c **** {
 960:fltk-1.3.4-1/png/png.c ****    /* Translate 'ret' into an appropriate error string, priority is given to the
 961:fltk-1.3.4-1/png/png.c ****     * one in zstream if set.  This always returns a string, even in cases like
 962:fltk-1.3.4-1/png/png.c ****     * Z_OK or Z_STREAM_END where the error code is a success code.
 963:fltk-1.3.4-1/png/png.c ****     */
 964:fltk-1.3.4-1/png/png.c ****    if (png_ptr->zstream.msg == NULL) switch (ret)
 965:fltk-1.3.4-1/png/png.c ****    {
 966:fltk-1.3.4-1/png/png.c ****       default:
 967:fltk-1.3.4-1/png/png.c ****       case Z_OK:
 968:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("unexpected zlib return code");
 969:fltk-1.3.4-1/png/png.c ****          break;
 970:fltk-1.3.4-1/png/png.c **** 
 971:fltk-1.3.4-1/png/png.c ****       case Z_STREAM_END:
 972:fltk-1.3.4-1/png/png.c ****          /* Normal exit */
 973:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("unexpected end of LZ stream");
 974:fltk-1.3.4-1/png/png.c ****          break;
 975:fltk-1.3.4-1/png/png.c **** 
 976:fltk-1.3.4-1/png/png.c ****       case Z_NEED_DICT:
 977:fltk-1.3.4-1/png/png.c ****          /* This means the deflate stream did not have a dictionary; this
 978:fltk-1.3.4-1/png/png.c ****           * indicates a bogus PNG.
 979:fltk-1.3.4-1/png/png.c ****           */
 980:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("missing LZ dictionary");
 981:fltk-1.3.4-1/png/png.c ****          break;
 982:fltk-1.3.4-1/png/png.c **** 
 983:fltk-1.3.4-1/png/png.c ****       case Z_ERRNO:
 984:fltk-1.3.4-1/png/png.c ****          /* gz APIs only: should not happen */
 985:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("zlib IO error");
 986:fltk-1.3.4-1/png/png.c ****          break;
 987:fltk-1.3.4-1/png/png.c **** 
 988:fltk-1.3.4-1/png/png.c ****       case Z_STREAM_ERROR:
 989:fltk-1.3.4-1/png/png.c ****          /* internal libpng error */
 990:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("bad parameters to zlib");
 991:fltk-1.3.4-1/png/png.c ****          break;
 992:fltk-1.3.4-1/png/png.c **** 
 993:fltk-1.3.4-1/png/png.c ****       case Z_DATA_ERROR:
 994:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("damaged LZ stream");
 995:fltk-1.3.4-1/png/png.c ****          break;
 996:fltk-1.3.4-1/png/png.c **** 
 997:fltk-1.3.4-1/png/png.c ****       case Z_MEM_ERROR:
 998:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("insufficient memory");
 999:fltk-1.3.4-1/png/png.c ****          break;
1000:fltk-1.3.4-1/png/png.c **** 
1001:fltk-1.3.4-1/png/png.c ****       case Z_BUF_ERROR:
1002:fltk-1.3.4-1/png/png.c ****          /* End of input or output; not a problem if the caller is doing
1003:fltk-1.3.4-1/png/png.c ****           * incremental read or write.
1004:fltk-1.3.4-1/png/png.c ****           */
1005:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("truncated");
1006:fltk-1.3.4-1/png/png.c ****          break;
1007:fltk-1.3.4-1/png/png.c **** 
1008:fltk-1.3.4-1/png/png.c ****       case Z_VERSION_ERROR:
1009:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("unsupported zlib version");
1010:fltk-1.3.4-1/png/png.c ****          break;
1011:fltk-1.3.4-1/png/png.c **** 
1012:fltk-1.3.4-1/png/png.c ****       case PNG_UNEXPECTED_ZLIB_RETURN:
1013:fltk-1.3.4-1/png/png.c ****          /* Compile errors here mean that zlib now uses the value co-opted in
1014:fltk-1.3.4-1/png/png.c ****           * pngpriv.h for PNG_UNEXPECTED_ZLIB_RETURN; update the switch above
1015:fltk-1.3.4-1/png/png.c ****           * and change pngpriv.h.  Note that this message is "... return",
1016:fltk-1.3.4-1/png/png.c ****           * whereas the default/Z_OK one is "... return code".
1017:fltk-1.3.4-1/png/png.c ****           */
1018:fltk-1.3.4-1/png/png.c ****          png_ptr->zstream.msg = PNGZ_MSG_CAST("unexpected zlib return");
1019:fltk-1.3.4-1/png/png.c ****          break;
1020:fltk-1.3.4-1/png/png.c ****    }
1021:fltk-1.3.4-1/png/png.c **** }
1022:fltk-1.3.4-1/png/png.c **** 
1023:fltk-1.3.4-1/png/png.c **** /* png_convert_size: a PNGAPI but no longer in png.h, so deleted
1024:fltk-1.3.4-1/png/png.c ****  * at libpng 1.5.5!
1025:fltk-1.3.4-1/png/png.c ****  */
1026:fltk-1.3.4-1/png/png.c **** 
1027:fltk-1.3.4-1/png/png.c **** /* Added at libpng version 1.2.34 and 1.4.0 (moved from pngset.c) */
1028:fltk-1.3.4-1/png/png.c **** #ifdef PNG_GAMMA_SUPPORTED /* always set if COLORSPACE */
1029:fltk-1.3.4-1/png/png.c **** static int
1030:fltk-1.3.4-1/png/png.c **** png_colorspace_check_gamma(png_const_structrp png_ptr,
1031:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_fixed_point gAMA, int from)
1032:fltk-1.3.4-1/png/png.c ****    /* This is called to check a new gamma value against an existing one.  The
1033:fltk-1.3.4-1/png/png.c ****     * routine returns false if the new gamma value should not be written.
1034:fltk-1.3.4-1/png/png.c ****     *
1035:fltk-1.3.4-1/png/png.c ****     * 'from' says where the new gamma value comes from:
1036:fltk-1.3.4-1/png/png.c ****     *
1037:fltk-1.3.4-1/png/png.c ****     *    0: the new gamma value is the libpng estimate for an ICC profile
1038:fltk-1.3.4-1/png/png.c ****     *    1: the new gamma value comes from a gAMA chunk
1039:fltk-1.3.4-1/png/png.c ****     *    2: the new gamma value comes from an sRGB chunk
1040:fltk-1.3.4-1/png/png.c ****     */
1041:fltk-1.3.4-1/png/png.c **** {
1042:fltk-1.3.4-1/png/png.c ****    png_fixed_point gtest;
1043:fltk-1.3.4-1/png/png.c **** 
1044:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_HAVE_GAMMA) != 0 &&
1045:fltk-1.3.4-1/png/png.c ****       (png_muldiv(&gtest, colorspace->gamma, PNG_FP_1, gAMA) == 0  ||
1046:fltk-1.3.4-1/png/png.c ****       png_gamma_significant(gtest) != 0))
1047:fltk-1.3.4-1/png/png.c ****    {
1048:fltk-1.3.4-1/png/png.c ****       /* Either this is an sRGB image, in which case the calculated gamma
1049:fltk-1.3.4-1/png/png.c ****        * approximation should match, or this is an image with a profile and the
1050:fltk-1.3.4-1/png/png.c ****        * value libpng calculates for the gamma of the profile does not match the
1051:fltk-1.3.4-1/png/png.c ****        * value recorded in the file.  The former, sRGB, case is an error, the
1052:fltk-1.3.4-1/png/png.c ****        * latter is just a warning.
1053:fltk-1.3.4-1/png/png.c ****        */
1054:fltk-1.3.4-1/png/png.c ****       if ((colorspace->flags & PNG_COLORSPACE_FROM_sRGB) != 0 || from == 2)
1055:fltk-1.3.4-1/png/png.c ****       {
1056:fltk-1.3.4-1/png/png.c ****          png_chunk_report(png_ptr, "gamma value does not match sRGB",
1057:fltk-1.3.4-1/png/png.c ****             PNG_CHUNK_ERROR);
1058:fltk-1.3.4-1/png/png.c ****          /* Do not overwrite an sRGB value */
1059:fltk-1.3.4-1/png/png.c ****          return from == 2;
1060:fltk-1.3.4-1/png/png.c ****       }
1061:fltk-1.3.4-1/png/png.c **** 
1062:fltk-1.3.4-1/png/png.c ****       else /* sRGB tag not involved */
1063:fltk-1.3.4-1/png/png.c ****       {
1064:fltk-1.3.4-1/png/png.c ****          png_chunk_report(png_ptr, "gamma value does not match libpng estimate",
1065:fltk-1.3.4-1/png/png.c ****             PNG_CHUNK_WARNING);
1066:fltk-1.3.4-1/png/png.c ****          return from == 1;
1067:fltk-1.3.4-1/png/png.c ****       }
1068:fltk-1.3.4-1/png/png.c ****    }
1069:fltk-1.3.4-1/png/png.c **** 
1070:fltk-1.3.4-1/png/png.c ****    return 1;
1071:fltk-1.3.4-1/png/png.c **** }
1072:fltk-1.3.4-1/png/png.c **** 
1073:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
1074:fltk-1.3.4-1/png/png.c **** png_colorspace_set_gamma(png_const_structrp png_ptr,
1075:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_fixed_point gAMA)
1076:fltk-1.3.4-1/png/png.c **** {
1077:fltk-1.3.4-1/png/png.c ****    /* Changed in libpng-1.5.4 to limit the values to ensure overflow can't
1078:fltk-1.3.4-1/png/png.c ****     * occur.  Since the fixed point representation is asymetrical it is
1079:fltk-1.3.4-1/png/png.c ****     * possible for 1/gamma to overflow the limit of 21474 and this means the
1080:fltk-1.3.4-1/png/png.c ****     * gamma value must be at least 5/100000 and hence at most 20000.0.  For
1081:fltk-1.3.4-1/png/png.c ****     * safety the limits here are a little narrower.  The values are 0.00016 to
1082:fltk-1.3.4-1/png/png.c ****     * 6250.0, which are truly ridiculous gamma values (and will produce
1083:fltk-1.3.4-1/png/png.c ****     * displays that are all black or all white.)
1084:fltk-1.3.4-1/png/png.c ****     *
1085:fltk-1.3.4-1/png/png.c ****     * In 1.6.0 this test replaces the ones in pngrutil.c, in the gAMA chunk
1086:fltk-1.3.4-1/png/png.c ****     * handling code, which only required the value to be >0.
1087:fltk-1.3.4-1/png/png.c ****     */
1088:fltk-1.3.4-1/png/png.c ****    png_const_charp errmsg;
1089:fltk-1.3.4-1/png/png.c **** 
1090:fltk-1.3.4-1/png/png.c ****    if (gAMA < 16 || gAMA > 625000000)
1091:fltk-1.3.4-1/png/png.c ****       errmsg = "gamma value out of range";
1092:fltk-1.3.4-1/png/png.c **** 
1093:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_READ_gAMA_SUPPORTED
1094:fltk-1.3.4-1/png/png.c ****       /* Allow the application to set the gamma value more than once */
1095:fltk-1.3.4-1/png/png.c ****       else if ((png_ptr->mode & PNG_IS_READ_STRUCT) != 0 &&
1096:fltk-1.3.4-1/png/png.c ****          (colorspace->flags & PNG_COLORSPACE_FROM_gAMA) != 0)
1097:fltk-1.3.4-1/png/png.c ****          errmsg = "duplicate";
1098:fltk-1.3.4-1/png/png.c **** #  endif
1099:fltk-1.3.4-1/png/png.c **** 
1100:fltk-1.3.4-1/png/png.c ****    /* Do nothing if the colorspace is already invalid */
1101:fltk-1.3.4-1/png/png.c ****    else if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
1102:fltk-1.3.4-1/png/png.c ****       return;
1103:fltk-1.3.4-1/png/png.c **** 
1104:fltk-1.3.4-1/png/png.c ****    else
1105:fltk-1.3.4-1/png/png.c ****    {
1106:fltk-1.3.4-1/png/png.c ****       if (png_colorspace_check_gamma(png_ptr, colorspace, gAMA,
1107:fltk-1.3.4-1/png/png.c ****           1/*from gAMA*/) != 0)
1108:fltk-1.3.4-1/png/png.c ****       {
1109:fltk-1.3.4-1/png/png.c ****          /* Store this gamma value. */
1110:fltk-1.3.4-1/png/png.c ****          colorspace->gamma = gAMA;
1111:fltk-1.3.4-1/png/png.c ****          colorspace->flags |=
1112:fltk-1.3.4-1/png/png.c ****             (PNG_COLORSPACE_HAVE_GAMMA | PNG_COLORSPACE_FROM_gAMA);
1113:fltk-1.3.4-1/png/png.c ****       }
1114:fltk-1.3.4-1/png/png.c **** 
1115:fltk-1.3.4-1/png/png.c ****       /* At present if the check_gamma test fails the gamma of the colorspace is
1116:fltk-1.3.4-1/png/png.c ****        * not updated however the colorspace is not invalidated.  This
1117:fltk-1.3.4-1/png/png.c ****        * corresponds to the case where the existing gamma comes from an sRGB
1118:fltk-1.3.4-1/png/png.c ****        * chunk or profile.  An error message has already been output.
1119:fltk-1.3.4-1/png/png.c ****        */
1120:fltk-1.3.4-1/png/png.c ****       return;
1121:fltk-1.3.4-1/png/png.c ****    }
1122:fltk-1.3.4-1/png/png.c **** 
1123:fltk-1.3.4-1/png/png.c ****    /* Error exit - errmsg has been set. */
1124:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_INVALID;
1125:fltk-1.3.4-1/png/png.c ****    png_chunk_report(png_ptr, errmsg, PNG_CHUNK_WRITE_ERROR);
1126:fltk-1.3.4-1/png/png.c **** }
1127:fltk-1.3.4-1/png/png.c **** 
1128:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
1129:fltk-1.3.4-1/png/png.c **** png_colorspace_sync_info(png_const_structrp png_ptr, png_inforp info_ptr)
1130:fltk-1.3.4-1/png/png.c **** {
1131:fltk-1.3.4-1/png/png.c ****    if ((info_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) != 0)
1132:fltk-1.3.4-1/png/png.c ****    {
1133:fltk-1.3.4-1/png/png.c ****       /* Everything is invalid */
1134:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~(PNG_INFO_gAMA|PNG_INFO_cHRM|PNG_INFO_sRGB|
1135:fltk-1.3.4-1/png/png.c ****          PNG_INFO_iCCP);
1136:fltk-1.3.4-1/png/png.c **** 
1137:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_COLORSPACE_SUPPORTED
1138:fltk-1.3.4-1/png/png.c ****          /* Clean up the iCCP profile now if it won't be used. */
1139:fltk-1.3.4-1/png/png.c ****          png_free_data(png_ptr, info_ptr, PNG_FREE_ICCP, -1/*not used*/);
1140:fltk-1.3.4-1/png/png.c **** #     else
1141:fltk-1.3.4-1/png/png.c ****          PNG_UNUSED(png_ptr)
1142:fltk-1.3.4-1/png/png.c **** #     endif
1143:fltk-1.3.4-1/png/png.c ****    }
1144:fltk-1.3.4-1/png/png.c **** 
1145:fltk-1.3.4-1/png/png.c ****    else
1146:fltk-1.3.4-1/png/png.c ****    {
1147:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_COLORSPACE_SUPPORTED
1148:fltk-1.3.4-1/png/png.c ****          /* Leave the INFO_iCCP flag set if the pngset.c code has already set
1149:fltk-1.3.4-1/png/png.c ****           * it; this allows a PNG to contain a profile which matches sRGB and
1150:fltk-1.3.4-1/png/png.c ****           * yet still have that profile retrievable by the application.
1151:fltk-1.3.4-1/png/png.c ****           */
1152:fltk-1.3.4-1/png/png.c ****          if ((info_ptr->colorspace.flags & PNG_COLORSPACE_MATCHES_sRGB) != 0)
1153:fltk-1.3.4-1/png/png.c ****             info_ptr->valid |= PNG_INFO_sRGB;
1154:fltk-1.3.4-1/png/png.c **** 
1155:fltk-1.3.4-1/png/png.c ****          else
1156:fltk-1.3.4-1/png/png.c ****             info_ptr->valid &= ~PNG_INFO_sRGB;
1157:fltk-1.3.4-1/png/png.c **** 
1158:fltk-1.3.4-1/png/png.c ****          if ((info_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
1159:fltk-1.3.4-1/png/png.c ****             info_ptr->valid |= PNG_INFO_cHRM;
1160:fltk-1.3.4-1/png/png.c **** 
1161:fltk-1.3.4-1/png/png.c ****          else
1162:fltk-1.3.4-1/png/png.c ****             info_ptr->valid &= ~PNG_INFO_cHRM;
1163:fltk-1.3.4-1/png/png.c **** #     endif
1164:fltk-1.3.4-1/png/png.c **** 
1165:fltk-1.3.4-1/png/png.c ****       if ((info_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_GAMMA) != 0)
1166:fltk-1.3.4-1/png/png.c ****          info_ptr->valid |= PNG_INFO_gAMA;
1167:fltk-1.3.4-1/png/png.c **** 
1168:fltk-1.3.4-1/png/png.c ****       else
1169:fltk-1.3.4-1/png/png.c ****          info_ptr->valid &= ~PNG_INFO_gAMA;
1170:fltk-1.3.4-1/png/png.c ****    }
1171:fltk-1.3.4-1/png/png.c **** }
1172:fltk-1.3.4-1/png/png.c **** 
1173:fltk-1.3.4-1/png/png.c **** #ifdef PNG_READ_SUPPORTED
1174:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
1175:fltk-1.3.4-1/png/png.c **** png_colorspace_sync(png_const_structrp png_ptr, png_inforp info_ptr)
1176:fltk-1.3.4-1/png/png.c **** {
1177:fltk-1.3.4-1/png/png.c ****    if (info_ptr == NULL) /* reduce code size; check here not in the caller */
1178:fltk-1.3.4-1/png/png.c ****       return;
1179:fltk-1.3.4-1/png/png.c **** 
1180:fltk-1.3.4-1/png/png.c ****    info_ptr->colorspace = png_ptr->colorspace;
1181:fltk-1.3.4-1/png/png.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
1182:fltk-1.3.4-1/png/png.c **** }
1183:fltk-1.3.4-1/png/png.c **** #endif
1184:fltk-1.3.4-1/png/png.c **** #endif
1185:fltk-1.3.4-1/png/png.c **** 
1186:fltk-1.3.4-1/png/png.c **** #ifdef PNG_COLORSPACE_SUPPORTED
1187:fltk-1.3.4-1/png/png.c **** /* Added at libpng-1.5.5 to support read and write of true CIEXYZ values for
1188:fltk-1.3.4-1/png/png.c ****  * cHRM, as opposed to using chromaticities.  These internal APIs return
1189:fltk-1.3.4-1/png/png.c ****  * non-zero on a parameter error.  The X, Y and Z values are required to be
1190:fltk-1.3.4-1/png/png.c ****  * positive and less than 1.0.
1191:fltk-1.3.4-1/png/png.c ****  */
1192:fltk-1.3.4-1/png/png.c **** static int
1193:fltk-1.3.4-1/png/png.c **** png_xy_from_XYZ(png_xy *xy, const png_XYZ *XYZ)
1194:fltk-1.3.4-1/png/png.c **** {
1195:fltk-1.3.4-1/png/png.c ****    png_int_32 d, dwhite, whiteX, whiteY;
1196:fltk-1.3.4-1/png/png.c **** 
1197:fltk-1.3.4-1/png/png.c ****    d = XYZ->red_X + XYZ->red_Y + XYZ->red_Z;
1198:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->redx, XYZ->red_X, PNG_FP_1, d) == 0)
1199:fltk-1.3.4-1/png/png.c ****       return 1;
1200:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->redy, XYZ->red_Y, PNG_FP_1, d) == 0)
1201:fltk-1.3.4-1/png/png.c ****       return 1;
1202:fltk-1.3.4-1/png/png.c ****    dwhite = d;
1203:fltk-1.3.4-1/png/png.c ****    whiteX = XYZ->red_X;
1204:fltk-1.3.4-1/png/png.c ****    whiteY = XYZ->red_Y;
1205:fltk-1.3.4-1/png/png.c **** 
1206:fltk-1.3.4-1/png/png.c ****    d = XYZ->green_X + XYZ->green_Y + XYZ->green_Z;
1207:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->greenx, XYZ->green_X, PNG_FP_1, d) == 0)
1208:fltk-1.3.4-1/png/png.c ****       return 1;
1209:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->greeny, XYZ->green_Y, PNG_FP_1, d) == 0)
1210:fltk-1.3.4-1/png/png.c ****       return 1;
1211:fltk-1.3.4-1/png/png.c ****    dwhite += d;
1212:fltk-1.3.4-1/png/png.c ****    whiteX += XYZ->green_X;
1213:fltk-1.3.4-1/png/png.c ****    whiteY += XYZ->green_Y;
1214:fltk-1.3.4-1/png/png.c **** 
1215:fltk-1.3.4-1/png/png.c ****    d = XYZ->blue_X + XYZ->blue_Y + XYZ->blue_Z;
1216:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->bluex, XYZ->blue_X, PNG_FP_1, d) == 0)
1217:fltk-1.3.4-1/png/png.c ****       return 1;
1218:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->bluey, XYZ->blue_Y, PNG_FP_1, d) == 0)
1219:fltk-1.3.4-1/png/png.c ****       return 1;
1220:fltk-1.3.4-1/png/png.c ****    dwhite += d;
1221:fltk-1.3.4-1/png/png.c ****    whiteX += XYZ->blue_X;
1222:fltk-1.3.4-1/png/png.c ****    whiteY += XYZ->blue_Y;
1223:fltk-1.3.4-1/png/png.c **** 
1224:fltk-1.3.4-1/png/png.c ****    /* The reference white is simply the sum of the end-point (X,Y,Z) vectors,
1225:fltk-1.3.4-1/png/png.c ****     * thus:
1226:fltk-1.3.4-1/png/png.c ****     */
1227:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->whitex, whiteX, PNG_FP_1, dwhite) == 0)
1228:fltk-1.3.4-1/png/png.c ****       return 1;
1229:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->whitey, whiteY, PNG_FP_1, dwhite) == 0)
1230:fltk-1.3.4-1/png/png.c ****       return 1;
1231:fltk-1.3.4-1/png/png.c **** 
1232:fltk-1.3.4-1/png/png.c ****    return 0;
1233:fltk-1.3.4-1/png/png.c **** }
1234:fltk-1.3.4-1/png/png.c **** 
1235:fltk-1.3.4-1/png/png.c **** static int
1236:fltk-1.3.4-1/png/png.c **** png_XYZ_from_xy(png_XYZ *XYZ, const png_xy *xy)
1237:fltk-1.3.4-1/png/png.c **** {
1238:fltk-1.3.4-1/png/png.c ****    png_fixed_point red_inverse, green_inverse, blue_scale;
1239:fltk-1.3.4-1/png/png.c ****    png_fixed_point left, right, denominator;
1240:fltk-1.3.4-1/png/png.c **** 
1241:fltk-1.3.4-1/png/png.c ****    /* Check xy and, implicitly, z.  Note that wide gamut color spaces typically
1242:fltk-1.3.4-1/png/png.c ****     * have end points with 0 tristimulus values (these are impossible end
1243:fltk-1.3.4-1/png/png.c ****     * points, but they are used to cover the possible colors.)
1244:fltk-1.3.4-1/png/png.c ****     */
1245:fltk-1.3.4-1/png/png.c ****    if (xy->redx < 0 || xy->redx > PNG_FP_1) return 1;
1246:fltk-1.3.4-1/png/png.c ****    if (xy->redy < 0 || xy->redy > PNG_FP_1-xy->redx) return 1;
1247:fltk-1.3.4-1/png/png.c ****    if (xy->greenx < 0 || xy->greenx > PNG_FP_1) return 1;
1248:fltk-1.3.4-1/png/png.c ****    if (xy->greeny < 0 || xy->greeny > PNG_FP_1-xy->greenx) return 1;
1249:fltk-1.3.4-1/png/png.c ****    if (xy->bluex < 0 || xy->bluex > PNG_FP_1) return 1;
1250:fltk-1.3.4-1/png/png.c ****    if (xy->bluey < 0 || xy->bluey > PNG_FP_1-xy->bluex) return 1;
1251:fltk-1.3.4-1/png/png.c ****    if (xy->whitex < 0 || xy->whitex > PNG_FP_1) return 1;
1252:fltk-1.3.4-1/png/png.c ****    if (xy->whitey < 0 || xy->whitey > PNG_FP_1-xy->whitex) return 1;
1253:fltk-1.3.4-1/png/png.c **** 
1254:fltk-1.3.4-1/png/png.c ****    /* The reverse calculation is more difficult because the original tristimulus
1255:fltk-1.3.4-1/png/png.c ****     * value had 9 independent values (red,green,blue)x(X,Y,Z) however only 8
1256:fltk-1.3.4-1/png/png.c ****     * derived values were recorded in the cHRM chunk;
1257:fltk-1.3.4-1/png/png.c ****     * (red,green,blue,white)x(x,y).  This loses one degree of freedom and
1258:fltk-1.3.4-1/png/png.c ****     * therefore an arbitrary ninth value has to be introduced to undo the
1259:fltk-1.3.4-1/png/png.c ****     * original transformations.
1260:fltk-1.3.4-1/png/png.c ****     *
1261:fltk-1.3.4-1/png/png.c ****     * Think of the original end-points as points in (X,Y,Z) space.  The
1262:fltk-1.3.4-1/png/png.c ****     * chromaticity values (c) have the property:
1263:fltk-1.3.4-1/png/png.c ****     *
1264:fltk-1.3.4-1/png/png.c ****     *           C
1265:fltk-1.3.4-1/png/png.c ****     *   c = ---------
1266:fltk-1.3.4-1/png/png.c ****     *       X + Y + Z
1267:fltk-1.3.4-1/png/png.c ****     *
1268:fltk-1.3.4-1/png/png.c ****     * For each c (x,y,z) from the corresponding original C (X,Y,Z).  Thus the
1269:fltk-1.3.4-1/png/png.c ****     * three chromaticity values (x,y,z) for each end-point obey the
1270:fltk-1.3.4-1/png/png.c ****     * relationship:
1271:fltk-1.3.4-1/png/png.c ****     *
1272:fltk-1.3.4-1/png/png.c ****     *   x + y + z = 1
1273:fltk-1.3.4-1/png/png.c ****     *
1274:fltk-1.3.4-1/png/png.c ****     * This describes the plane in (X,Y,Z) space that intersects each axis at the
1275:fltk-1.3.4-1/png/png.c ****     * value 1.0; call this the chromaticity plane.  Thus the chromaticity
1276:fltk-1.3.4-1/png/png.c ****     * calculation has scaled each end-point so that it is on the x+y+z=1 plane
1277:fltk-1.3.4-1/png/png.c ****     * and chromaticity is the intersection of the vector from the origin to the
1278:fltk-1.3.4-1/png/png.c ****     * (X,Y,Z) value with the chromaticity plane.
1279:fltk-1.3.4-1/png/png.c ****     *
1280:fltk-1.3.4-1/png/png.c ****     * To fully invert the chromaticity calculation we would need the three
1281:fltk-1.3.4-1/png/png.c ****     * end-point scale factors, (red-scale, green-scale, blue-scale), but these
1282:fltk-1.3.4-1/png/png.c ****     * were not recorded.  Instead we calculated the reference white (X,Y,Z) and
1283:fltk-1.3.4-1/png/png.c ****     * recorded the chromaticity of this.  The reference white (X,Y,Z) would have
1284:fltk-1.3.4-1/png/png.c ****     * given all three of the scale factors since:
1285:fltk-1.3.4-1/png/png.c ****     *
1286:fltk-1.3.4-1/png/png.c ****     *    color-C = color-c * color-scale
1287:fltk-1.3.4-1/png/png.c ****     *    white-C = red-C + green-C + blue-C
1288:fltk-1.3.4-1/png/png.c ****     *            = red-c*red-scale + green-c*green-scale + blue-c*blue-scale
1289:fltk-1.3.4-1/png/png.c ****     *
1290:fltk-1.3.4-1/png/png.c ****     * But cHRM records only white-x and white-y, so we have lost the white scale
1291:fltk-1.3.4-1/png/png.c ****     * factor:
1292:fltk-1.3.4-1/png/png.c ****     *
1293:fltk-1.3.4-1/png/png.c ****     *    white-C = white-c*white-scale
1294:fltk-1.3.4-1/png/png.c ****     *
1295:fltk-1.3.4-1/png/png.c ****     * To handle this the inverse transformation makes an arbitrary assumption
1296:fltk-1.3.4-1/png/png.c ****     * about white-scale:
1297:fltk-1.3.4-1/png/png.c ****     *
1298:fltk-1.3.4-1/png/png.c ****     *    Assume: white-Y = 1.0
1299:fltk-1.3.4-1/png/png.c ****     *    Hence:  white-scale = 1/white-y
1300:fltk-1.3.4-1/png/png.c ****     *    Or:     red-Y + green-Y + blue-Y = 1.0
1301:fltk-1.3.4-1/png/png.c ****     *
1302:fltk-1.3.4-1/png/png.c ****     * Notice the last statement of the assumption gives an equation in three of
1303:fltk-1.3.4-1/png/png.c ****     * the nine values we want to calculate.  8 more equations come from the
1304:fltk-1.3.4-1/png/png.c ****     * above routine as summarised at the top above (the chromaticity
1305:fltk-1.3.4-1/png/png.c ****     * calculation):
1306:fltk-1.3.4-1/png/png.c ****     *
1307:fltk-1.3.4-1/png/png.c ****     *    Given: color-x = color-X / (color-X + color-Y + color-Z)
1308:fltk-1.3.4-1/png/png.c ****     *    Hence: (color-x - 1)*color-X + color.x*color-Y + color.x*color-Z = 0
1309:fltk-1.3.4-1/png/png.c ****     *
1310:fltk-1.3.4-1/png/png.c ****     * This is 9 simultaneous equations in the 9 variables "color-C" and can be
1311:fltk-1.3.4-1/png/png.c ****     * solved by Cramer's rule.  Cramer's rule requires calculating 10 9x9 matrix
1312:fltk-1.3.4-1/png/png.c ****     * determinants, however this is not as bad as it seems because only 28 of
1313:fltk-1.3.4-1/png/png.c ****     * the total of 90 terms in the various matrices are non-zero.  Nevertheless
1314:fltk-1.3.4-1/png/png.c ****     * Cramer's rule is notoriously numerically unstable because the determinant
1315:fltk-1.3.4-1/png/png.c ****     * calculation involves the difference of large, but similar, numbers.  It is
1316:fltk-1.3.4-1/png/png.c ****     * difficult to be sure that the calculation is stable for real world values
1317:fltk-1.3.4-1/png/png.c ****     * and it is certain that it becomes unstable where the end points are close
1318:fltk-1.3.4-1/png/png.c ****     * together.
1319:fltk-1.3.4-1/png/png.c ****     *
1320:fltk-1.3.4-1/png/png.c ****     * So this code uses the perhaps slightly less optimal but more
1321:fltk-1.3.4-1/png/png.c ****     * understandable and totally obvious approach of calculating color-scale.
1322:fltk-1.3.4-1/png/png.c ****     *
1323:fltk-1.3.4-1/png/png.c ****     * This algorithm depends on the precision in white-scale and that is
1324:fltk-1.3.4-1/png/png.c ****     * (1/white-y), so we can immediately see that as white-y approaches 0 the
1325:fltk-1.3.4-1/png/png.c ****     * accuracy inherent in the cHRM chunk drops off substantially.
1326:fltk-1.3.4-1/png/png.c ****     *
1327:fltk-1.3.4-1/png/png.c ****     * libpng arithmetic: a simple inversion of the above equations
1328:fltk-1.3.4-1/png/png.c ****     * ------------------------------------------------------------
1329:fltk-1.3.4-1/png/png.c ****     *
1330:fltk-1.3.4-1/png/png.c ****     *    white_scale = 1/white-y
1331:fltk-1.3.4-1/png/png.c ****     *    white-X = white-x * white-scale
1332:fltk-1.3.4-1/png/png.c ****     *    white-Y = 1.0
1333:fltk-1.3.4-1/png/png.c ****     *    white-Z = (1 - white-x - white-y) * white_scale
1334:fltk-1.3.4-1/png/png.c ****     *
1335:fltk-1.3.4-1/png/png.c ****     *    white-C = red-C + green-C + blue-C
1336:fltk-1.3.4-1/png/png.c ****     *            = red-c*red-scale + green-c*green-scale + blue-c*blue-scale
1337:fltk-1.3.4-1/png/png.c ****     *
1338:fltk-1.3.4-1/png/png.c ****     * This gives us three equations in (red-scale,green-scale,blue-scale) where
1339:fltk-1.3.4-1/png/png.c ****     * all the coefficients are now known:
1340:fltk-1.3.4-1/png/png.c ****     *
1341:fltk-1.3.4-1/png/png.c ****     *    red-x*red-scale + green-x*green-scale + blue-x*blue-scale
1342:fltk-1.3.4-1/png/png.c ****     *       = white-x/white-y
1343:fltk-1.3.4-1/png/png.c ****     *    red-y*red-scale + green-y*green-scale + blue-y*blue-scale = 1
1344:fltk-1.3.4-1/png/png.c ****     *    red-z*red-scale + green-z*green-scale + blue-z*blue-scale
1345:fltk-1.3.4-1/png/png.c ****     *       = (1 - white-x - white-y)/white-y
1346:fltk-1.3.4-1/png/png.c ****     *
1347:fltk-1.3.4-1/png/png.c ****     * In the last equation color-z is (1 - color-x - color-y) so we can add all
1348:fltk-1.3.4-1/png/png.c ****     * three equations together to get an alternative third:
1349:fltk-1.3.4-1/png/png.c ****     *
1350:fltk-1.3.4-1/png/png.c ****     *    red-scale + green-scale + blue-scale = 1/white-y = white-scale
1351:fltk-1.3.4-1/png/png.c ****     *
1352:fltk-1.3.4-1/png/png.c ****     * So now we have a Cramer's rule solution where the determinants are just
1353:fltk-1.3.4-1/png/png.c ****     * 3x3 - far more tractible.  Unfortunately 3x3 determinants still involve
1354:fltk-1.3.4-1/png/png.c ****     * multiplication of three coefficients so we can't guarantee to avoid
1355:fltk-1.3.4-1/png/png.c ****     * overflow in the libpng fixed point representation.  Using Cramer's rule in
1356:fltk-1.3.4-1/png/png.c ****     * floating point is probably a good choice here, but it's not an option for
1357:fltk-1.3.4-1/png/png.c ****     * fixed point.  Instead proceed to simplify the first two equations by
1358:fltk-1.3.4-1/png/png.c ****     * eliminating what is likely to be the largest value, blue-scale:
1359:fltk-1.3.4-1/png/png.c ****     *
1360:fltk-1.3.4-1/png/png.c ****     *    blue-scale = white-scale - red-scale - green-scale
1361:fltk-1.3.4-1/png/png.c ****     *
1362:fltk-1.3.4-1/png/png.c ****     * Hence:
1363:fltk-1.3.4-1/png/png.c ****     *
1364:fltk-1.3.4-1/png/png.c ****     *    (red-x - blue-x)*red-scale + (green-x - blue-x)*green-scale =
1365:fltk-1.3.4-1/png/png.c ****     *                (white-x - blue-x)*white-scale
1366:fltk-1.3.4-1/png/png.c ****     *
1367:fltk-1.3.4-1/png/png.c ****     *    (red-y - blue-y)*red-scale + (green-y - blue-y)*green-scale =
1368:fltk-1.3.4-1/png/png.c ****     *                1 - blue-y*white-scale
1369:fltk-1.3.4-1/png/png.c ****     *
1370:fltk-1.3.4-1/png/png.c ****     * And now we can trivially solve for (red-scale,green-scale):
1371:fltk-1.3.4-1/png/png.c ****     *
1372:fltk-1.3.4-1/png/png.c ****     *    green-scale =
1373:fltk-1.3.4-1/png/png.c ****     *                (white-x - blue-x)*white-scale - (red-x - blue-x)*red-scale
1374:fltk-1.3.4-1/png/png.c ****     *                -----------------------------------------------------------
1375:fltk-1.3.4-1/png/png.c ****     *                                  green-x - blue-x
1376:fltk-1.3.4-1/png/png.c ****     *
1377:fltk-1.3.4-1/png/png.c ****     *    red-scale =
1378:fltk-1.3.4-1/png/png.c ****     *                1 - blue-y*white-scale - (green-y - blue-y) * green-scale
1379:fltk-1.3.4-1/png/png.c ****     *                ---------------------------------------------------------
1380:fltk-1.3.4-1/png/png.c ****     *                                  red-y - blue-y
1381:fltk-1.3.4-1/png/png.c ****     *
1382:fltk-1.3.4-1/png/png.c ****     * Hence:
1383:fltk-1.3.4-1/png/png.c ****     *
1384:fltk-1.3.4-1/png/png.c ****     *    red-scale =
1385:fltk-1.3.4-1/png/png.c ****     *          ( (green-x - blue-x) * (white-y - blue-y) -
1386:fltk-1.3.4-1/png/png.c ****     *            (green-y - blue-y) * (white-x - blue-x) ) / white-y
1387:fltk-1.3.4-1/png/png.c ****     * -------------------------------------------------------------------------
1388:fltk-1.3.4-1/png/png.c ****     *  (green-x - blue-x)*(red-y - blue-y)-(green-y - blue-y)*(red-x - blue-x)
1389:fltk-1.3.4-1/png/png.c ****     *
1390:fltk-1.3.4-1/png/png.c ****     *    green-scale =
1391:fltk-1.3.4-1/png/png.c ****     *          ( (red-y - blue-y) * (white-x - blue-x) -
1392:fltk-1.3.4-1/png/png.c ****     *            (red-x - blue-x) * (white-y - blue-y) ) / white-y
1393:fltk-1.3.4-1/png/png.c ****     * -------------------------------------------------------------------------
1394:fltk-1.3.4-1/png/png.c ****     *  (green-x - blue-x)*(red-y - blue-y)-(green-y - blue-y)*(red-x - blue-x)
1395:fltk-1.3.4-1/png/png.c ****     *
1396:fltk-1.3.4-1/png/png.c ****     * Accuracy:
1397:fltk-1.3.4-1/png/png.c ****     * The input values have 5 decimal digits of accuracy.  The values are all in
1398:fltk-1.3.4-1/png/png.c ****     * the range 0 < value < 1, so simple products are in the same range but may
1399:fltk-1.3.4-1/png/png.c ****     * need up to 10 decimal digits to preserve the original precision and avoid
1400:fltk-1.3.4-1/png/png.c ****     * underflow.  Because we are using a 32-bit signed representation we cannot
1401:fltk-1.3.4-1/png/png.c ****     * match this; the best is a little over 9 decimal digits, less than 10.
1402:fltk-1.3.4-1/png/png.c ****     *
1403:fltk-1.3.4-1/png/png.c ****     * The approach used here is to preserve the maximum precision within the
1404:fltk-1.3.4-1/png/png.c ****     * signed representation.  Because the red-scale calculation above uses the
1405:fltk-1.3.4-1/png/png.c ****     * difference between two products of values that must be in the range -1..+1
1406:fltk-1.3.4-1/png/png.c ****     * it is sufficient to divide the product by 7; ceil(100,000/32767*2).  The
1407:fltk-1.3.4-1/png/png.c ****     * factor is irrelevant in the calculation because it is applied to both
1408:fltk-1.3.4-1/png/png.c ****     * numerator and denominator.
1409:fltk-1.3.4-1/png/png.c ****     *
1410:fltk-1.3.4-1/png/png.c ****     * Note that the values of the differences of the products of the
1411:fltk-1.3.4-1/png/png.c ****     * chromaticities in the above equations tend to be small, for example for
1412:fltk-1.3.4-1/png/png.c ****     * the sRGB chromaticities they are:
1413:fltk-1.3.4-1/png/png.c ****     *
1414:fltk-1.3.4-1/png/png.c ****     * red numerator:    -0.04751
1415:fltk-1.3.4-1/png/png.c ****     * green numerator:  -0.08788
1416:fltk-1.3.4-1/png/png.c ****     * denominator:      -0.2241 (without white-y multiplication)
1417:fltk-1.3.4-1/png/png.c ****     *
1418:fltk-1.3.4-1/png/png.c ****     *  The resultant Y coefficients from the chromaticities of some widely used
1419:fltk-1.3.4-1/png/png.c ****     *  color space definitions are (to 15 decimal places):
1420:fltk-1.3.4-1/png/png.c ****     *
1421:fltk-1.3.4-1/png/png.c ****     *  sRGB
1422:fltk-1.3.4-1/png/png.c ****     *    0.212639005871510 0.715168678767756 0.072192315360734
1423:fltk-1.3.4-1/png/png.c ****     *  Kodak ProPhoto
1424:fltk-1.3.4-1/png/png.c ****     *    0.288071128229293 0.711843217810102 0.000085653960605
1425:fltk-1.3.4-1/png/png.c ****     *  Adobe RGB
1426:fltk-1.3.4-1/png/png.c ****     *    0.297344975250536 0.627363566255466 0.075291458493998
1427:fltk-1.3.4-1/png/png.c ****     *  Adobe Wide Gamut RGB
1428:fltk-1.3.4-1/png/png.c ****     *    0.258728243040113 0.724682314948566 0.016589442011321
1429:fltk-1.3.4-1/png/png.c ****     */
1430:fltk-1.3.4-1/png/png.c ****    /* By the argument, above overflow should be impossible here. The return
1431:fltk-1.3.4-1/png/png.c ****     * value of 2 indicates an internal error to the caller.
1432:fltk-1.3.4-1/png/png.c ****     */
1433:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&left, xy->greenx-xy->bluex, xy->redy - xy->bluey, 7) == 0)
1434:fltk-1.3.4-1/png/png.c ****       return 2;
1435:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&right, xy->greeny-xy->bluey, xy->redx - xy->bluex, 7) == 0)
1436:fltk-1.3.4-1/png/png.c ****       return 2;
1437:fltk-1.3.4-1/png/png.c ****    denominator = left - right;
1438:fltk-1.3.4-1/png/png.c **** 
1439:fltk-1.3.4-1/png/png.c ****    /* Now find the red numerator. */
1440:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&left, xy->greenx-xy->bluex, xy->whitey-xy->bluey, 7) == 0)
1441:fltk-1.3.4-1/png/png.c ****       return 2;
1442:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&right, xy->greeny-xy->bluey, xy->whitex-xy->bluex, 7) == 0)
1443:fltk-1.3.4-1/png/png.c ****       return 2;
1444:fltk-1.3.4-1/png/png.c **** 
1445:fltk-1.3.4-1/png/png.c ****    /* Overflow is possible here and it indicates an extreme set of PNG cHRM
1446:fltk-1.3.4-1/png/png.c ****     * chunk values.  This calculation actually returns the reciprocal of the
1447:fltk-1.3.4-1/png/png.c ****     * scale value because this allows us to delay the multiplication of white-y
1448:fltk-1.3.4-1/png/png.c ****     * into the denominator, which tends to produce a small number.
1449:fltk-1.3.4-1/png/png.c ****     */
1450:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&red_inverse, xy->whitey, denominator, left-right) == 0 ||
1451:fltk-1.3.4-1/png/png.c ****        red_inverse <= xy->whitey /* r+g+b scales = white scale */)
1452:fltk-1.3.4-1/png/png.c ****       return 1;
1453:fltk-1.3.4-1/png/png.c **** 
1454:fltk-1.3.4-1/png/png.c ****    /* Similarly for green_inverse: */
1455:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&left, xy->redy-xy->bluey, xy->whitex-xy->bluex, 7) == 0)
1456:fltk-1.3.4-1/png/png.c ****       return 2;
1457:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&right, xy->redx-xy->bluex, xy->whitey-xy->bluey, 7) == 0)
1458:fltk-1.3.4-1/png/png.c ****       return 2;
1459:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&green_inverse, xy->whitey, denominator, left-right) == 0 ||
1460:fltk-1.3.4-1/png/png.c ****        green_inverse <= xy->whitey)
1461:fltk-1.3.4-1/png/png.c ****       return 1;
1462:fltk-1.3.4-1/png/png.c **** 
1463:fltk-1.3.4-1/png/png.c ****    /* And the blue scale, the checks above guarantee this can't overflow but it
1464:fltk-1.3.4-1/png/png.c ****     * can still produce 0 for extreme cHRM values.
1465:fltk-1.3.4-1/png/png.c ****     */
1466:fltk-1.3.4-1/png/png.c ****    blue_scale = png_reciprocal(xy->whitey) - png_reciprocal(red_inverse) -
1467:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
1468:fltk-1.3.4-1/png/png.c ****    if (blue_scale <= 0)
1469:fltk-1.3.4-1/png/png.c ****       return 1;
1470:fltk-1.3.4-1/png/png.c **** 
1471:fltk-1.3.4-1/png/png.c **** 
1472:fltk-1.3.4-1/png/png.c ****    /* And fill in the png_XYZ: */
1473:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->red_X, xy->redx, PNG_FP_1, red_inverse) == 0)
1474:fltk-1.3.4-1/png/png.c ****       return 1;
1475:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->red_Y, xy->redy, PNG_FP_1, red_inverse) == 0)
1476:fltk-1.3.4-1/png/png.c ****       return 1;
1477:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->red_Z, PNG_FP_1 - xy->redx - xy->redy, PNG_FP_1,
1478:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
1479:fltk-1.3.4-1/png/png.c ****       return 1;
1480:fltk-1.3.4-1/png/png.c **** 
1481:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->green_X, xy->greenx, PNG_FP_1, green_inverse) == 0)
1482:fltk-1.3.4-1/png/png.c ****       return 1;
1483:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->green_Y, xy->greeny, PNG_FP_1, green_inverse) == 0)
1484:fltk-1.3.4-1/png/png.c ****       return 1;
1485:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->green_Z, PNG_FP_1 - xy->greenx - xy->greeny, PNG_FP_1,
1486:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
1487:fltk-1.3.4-1/png/png.c ****       return 1;
1488:fltk-1.3.4-1/png/png.c **** 
1489:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->blue_X, xy->bluex, blue_scale, PNG_FP_1) == 0)
1490:fltk-1.3.4-1/png/png.c ****       return 1;
1491:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->blue_Y, xy->bluey, blue_scale, PNG_FP_1) == 0)
1492:fltk-1.3.4-1/png/png.c ****       return 1;
1493:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&XYZ->blue_Z, PNG_FP_1 - xy->bluex - xy->bluey, blue_scale,
1494:fltk-1.3.4-1/png/png.c ****        PNG_FP_1) == 0)
1495:fltk-1.3.4-1/png/png.c ****       return 1;
1496:fltk-1.3.4-1/png/png.c **** 
1497:fltk-1.3.4-1/png/png.c ****    return 0; /*success*/
1498:fltk-1.3.4-1/png/png.c **** }
1499:fltk-1.3.4-1/png/png.c **** 
1500:fltk-1.3.4-1/png/png.c **** static int
1501:fltk-1.3.4-1/png/png.c **** png_XYZ_normalize(png_XYZ *XYZ)
1502:fltk-1.3.4-1/png/png.c **** {
1503:fltk-1.3.4-1/png/png.c ****    png_int_32 Y;
1504:fltk-1.3.4-1/png/png.c **** 
1505:fltk-1.3.4-1/png/png.c ****    if (XYZ->red_Y < 0 || XYZ->green_Y < 0 || XYZ->blue_Y < 0 ||
1506:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
1507:fltk-1.3.4-1/png/png.c ****       XYZ->red_Z < 0 || XYZ->green_Z < 0 || XYZ->blue_Z < 0)
1508:fltk-1.3.4-1/png/png.c ****       return 1;
1509:fltk-1.3.4-1/png/png.c **** 
1510:fltk-1.3.4-1/png/png.c ****    /* Normalize by scaling so the sum of the end-point Y values is PNG_FP_1.
1511:fltk-1.3.4-1/png/png.c ****     * IMPLEMENTATION NOTE: ANSI requires signed overflow not to occur, therefore
1512:fltk-1.3.4-1/png/png.c ****     * relying on addition of two positive values producing a negative one is not
1513:fltk-1.3.4-1/png/png.c ****     * safe.
1514:fltk-1.3.4-1/png/png.c ****     */
1515:fltk-1.3.4-1/png/png.c ****    Y = XYZ->red_Y;
1516:fltk-1.3.4-1/png/png.c ****    if (0x7fffffff - Y < XYZ->green_X)
1517:fltk-1.3.4-1/png/png.c ****       return 1;
1518:fltk-1.3.4-1/png/png.c ****    Y += XYZ->green_Y;
1519:fltk-1.3.4-1/png/png.c ****    if (0x7fffffff - Y < XYZ->blue_X)
1520:fltk-1.3.4-1/png/png.c ****       return 1;
1521:fltk-1.3.4-1/png/png.c ****    Y += XYZ->blue_Y;
1522:fltk-1.3.4-1/png/png.c **** 
1523:fltk-1.3.4-1/png/png.c ****    if (Y != PNG_FP_1)
1524:fltk-1.3.4-1/png/png.c ****    {
1525:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->red_X, XYZ->red_X, PNG_FP_1, Y) == 0)
1526:fltk-1.3.4-1/png/png.c ****          return 1;
1527:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->red_Y, XYZ->red_Y, PNG_FP_1, Y) == 0)
1528:fltk-1.3.4-1/png/png.c ****          return 1;
1529:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->red_Z, XYZ->red_Z, PNG_FP_1, Y) == 0)
1530:fltk-1.3.4-1/png/png.c ****          return 1;
1531:fltk-1.3.4-1/png/png.c **** 
1532:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->green_X, XYZ->green_X, PNG_FP_1, Y) == 0)
1533:fltk-1.3.4-1/png/png.c ****          return 1;
1534:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->green_Y, XYZ->green_Y, PNG_FP_1, Y) == 0)
1535:fltk-1.3.4-1/png/png.c ****          return 1;
1536:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->green_Z, XYZ->green_Z, PNG_FP_1, Y) == 0)
1537:fltk-1.3.4-1/png/png.c ****          return 1;
1538:fltk-1.3.4-1/png/png.c **** 
1539:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->blue_X, XYZ->blue_X, PNG_FP_1, Y) == 0)
1540:fltk-1.3.4-1/png/png.c ****          return 1;
1541:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->blue_Y, XYZ->blue_Y, PNG_FP_1, Y) == 0)
1542:fltk-1.3.4-1/png/png.c ****          return 1;
1543:fltk-1.3.4-1/png/png.c ****       if (png_muldiv(&XYZ->blue_Z, XYZ->blue_Z, PNG_FP_1, Y) == 0)
1544:fltk-1.3.4-1/png/png.c ****          return 1;
1545:fltk-1.3.4-1/png/png.c ****    }
1546:fltk-1.3.4-1/png/png.c **** 
1547:fltk-1.3.4-1/png/png.c ****    return 0;
1548:fltk-1.3.4-1/png/png.c **** }
1549:fltk-1.3.4-1/png/png.c **** 
1550:fltk-1.3.4-1/png/png.c **** static int
1551:fltk-1.3.4-1/png/png.c **** png_colorspace_endpoints_match(const png_xy *xy1, const png_xy *xy2, int delta)
1552:fltk-1.3.4-1/png/png.c **** {
  11              		.loc 1 1552 1 view -0
  12              		.cfi_startproc
1553:fltk-1.3.4-1/png/png.c ****    /* Allow an error of +/-0.01 (absolute value) on each chromaticity */
1554:fltk-1.3.4-1/png/png.c ****    if (PNG_OUT_OF_RANGE(xy1->whitex, xy2->whitex,delta) ||
  13              		.loc 1 1554 4 view .LVU1
  14              		.loc 1 1554 8 is_stmt 0 view .LVU2
  15 0000 8B4618   		movl	24(%rsi), %eax
  16 0003 8B4F18   		movl	24(%rdi), %ecx
1555:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
1556:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->redx,   xy2->redx,  delta) ||
1557:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->redy,   xy2->redy,  delta) ||
1558:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greenx, xy2->greenx,delta) ||
1559:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greeny, xy2->greeny,delta) ||
1560:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluex,  xy2->bluex, delta) ||
1561:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluey,  xy2->bluey, delta))
1562:fltk-1.3.4-1/png/png.c ****       return 0;
  17              		.loc 1 1562 14 view .LVU3
  18 0006 4531C0   		xorl	%r8d, %r8d
1554:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
  19              		.loc 1 1554 8 view .LVU4
  20 0009 4189C1   		movl	%eax, %r9d
  21 000c 4129D1   		subl	%edx, %r9d
1554:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
  22              		.loc 1 1554 7 view .LVU5
  23 000f 4439C9   		cmpl	%r9d, %ecx
  24 0012 0F8CB300 		jl	.L1
  24      0000
1554:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
  25              		.loc 1 1554 8 discriminator 1 view .LVU6
  26 0018 01D0     		addl	%edx, %eax
  27 001a 39C1     		cmpl	%eax, %ecx
  28 001c 0F8FA900 		jg	.L1
  28      0000
1555:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
  29              		.loc 1 1555 8 discriminator 2 view .LVU7
  30 0022 8B461C   		movl	28(%rsi), %eax
  31 0025 8B4F1C   		movl	28(%rdi), %ecx
  32 0028 4189C1   		movl	%eax, %r9d
  33 002b 4129D1   		subl	%edx, %r9d
1554:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
  34              		.loc 1 1554 57 discriminator 2 view .LVU8
  35 002e 4439C9   		cmpl	%r9d, %ecx
  36 0031 0F8C9400 		jl	.L1
  36      0000
1555:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
  37              		.loc 1 1555 8 view .LVU9
  38 0037 01D0     		addl	%edx, %eax
  39 0039 39C1     		cmpl	%eax, %ecx
  40 003b 0F8F8A00 		jg	.L1
  40      0000
1556:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->redy,   xy2->redy,  delta) ||
  41              		.loc 1 1556 8 discriminator 1 view .LVU10
  42 0041 8B06     		movl	(%rsi), %eax
  43 0043 8B0F     		movl	(%rdi), %ecx
  44 0045 4189C1   		movl	%eax, %r9d
  45 0048 4129D1   		subl	%edx, %r9d
1555:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->whitey, xy2->whitey,delta) ||
  46              		.loc 1 1555 57 discriminator 1 view .LVU11
  47 004b 4439C9   		cmpl	%r9d, %ecx
  48 004e 7C7B     		jl	.L1
1556:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->redy,   xy2->redy,  delta) ||
  49              		.loc 1 1556 8 view .LVU12
  50 0050 01D0     		addl	%edx, %eax
  51 0052 39C1     		cmpl	%eax, %ecx
  52 0054 7F75     		jg	.L1
1557:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greenx, xy2->greenx,delta) ||
  53              		.loc 1 1557 8 discriminator 1 view .LVU13
  54 0056 8B4604   		movl	4(%rsi), %eax
  55 0059 8B4F04   		movl	4(%rdi), %ecx
  56 005c 4189C1   		movl	%eax, %r9d
  57 005f 4129D1   		subl	%edx, %r9d
1556:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->redy,   xy2->redy,  delta) ||
  58              		.loc 1 1556 57 discriminator 1 view .LVU14
  59 0062 4439C9   		cmpl	%r9d, %ecx
  60 0065 7C64     		jl	.L1
1557:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greenx, xy2->greenx,delta) ||
  61              		.loc 1 1557 8 view .LVU15
  62 0067 01D0     		addl	%edx, %eax
  63 0069 39C1     		cmpl	%eax, %ecx
  64 006b 7F5E     		jg	.L1
1558:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greeny, xy2->greeny,delta) ||
  65              		.loc 1 1558 8 discriminator 1 view .LVU16
  66 006d 8B4608   		movl	8(%rsi), %eax
  67 0070 8B4F08   		movl	8(%rdi), %ecx
  68 0073 4189C1   		movl	%eax, %r9d
  69 0076 4129D1   		subl	%edx, %r9d
1557:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greenx, xy2->greenx,delta) ||
  70              		.loc 1 1557 57 discriminator 1 view .LVU17
  71 0079 4439C9   		cmpl	%r9d, %ecx
  72 007c 7C4D     		jl	.L1
1558:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greeny, xy2->greeny,delta) ||
  73              		.loc 1 1558 8 view .LVU18
  74 007e 01D0     		addl	%edx, %eax
  75 0080 39C1     		cmpl	%eax, %ecx
  76 0082 7F47     		jg	.L1
1559:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluex,  xy2->bluex, delta) ||
  77              		.loc 1 1559 8 discriminator 1 view .LVU19
  78 0084 8B460C   		movl	12(%rsi), %eax
  79 0087 8B4F0C   		movl	12(%rdi), %ecx
  80 008a 4189C1   		movl	%eax, %r9d
  81 008d 4129D1   		subl	%edx, %r9d
1558:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->greeny, xy2->greeny,delta) ||
  82              		.loc 1 1558 57 discriminator 1 view .LVU20
  83 0090 4439C9   		cmpl	%r9d, %ecx
  84 0093 7C36     		jl	.L1
1559:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluex,  xy2->bluex, delta) ||
  85              		.loc 1 1559 8 view .LVU21
  86 0095 01D0     		addl	%edx, %eax
  87 0097 39C1     		cmpl	%eax, %ecx
  88 0099 7F30     		jg	.L1
1560:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluey,  xy2->bluey, delta))
  89              		.loc 1 1560 8 discriminator 1 view .LVU22
  90 009b 8B4610   		movl	16(%rsi), %eax
  91 009e 8B4F10   		movl	16(%rdi), %ecx
  92 00a1 4189C1   		movl	%eax, %r9d
  93 00a4 4129D1   		subl	%edx, %r9d
1559:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluex,  xy2->bluex, delta) ||
  94              		.loc 1 1559 57 discriminator 1 view .LVU23
  95 00a7 4439C9   		cmpl	%r9d, %ecx
  96 00aa 7C1F     		jl	.L1
1560:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluey,  xy2->bluey, delta))
  97              		.loc 1 1560 8 view .LVU24
  98 00ac 01D0     		addl	%edx, %eax
  99 00ae 39C1     		cmpl	%eax, %ecx
 100 00b0 7F19     		jg	.L1
1561:fltk-1.3.4-1/png/png.c ****       return 0;
 101              		.loc 1 1561 8 discriminator 1 view .LVU25
 102 00b2 8B4614   		movl	20(%rsi), %eax
 103 00b5 8B4F14   		movl	20(%rdi), %ecx
 104 00b8 89C6     		movl	%eax, %esi
 105              	.LVL1:
1561:fltk-1.3.4-1/png/png.c ****       return 0;
 106              		.loc 1 1561 8 discriminator 1 view .LVU26
 107 00ba 29D6     		subl	%edx, %esi
1560:fltk-1.3.4-1/png/png.c ****        PNG_OUT_OF_RANGE(xy1->bluey,  xy2->bluey, delta))
 108              		.loc 1 1560 57 discriminator 1 view .LVU27
 109 00bc 39F1     		cmpl	%esi, %ecx
 110 00be 7C0B     		jl	.L1
1561:fltk-1.3.4-1/png/png.c ****       return 0;
 111              		.loc 1 1561 8 view .LVU28
 112 00c0 01D0     		addl	%edx, %eax
 113 00c2 4531C0   		xorl	%r8d, %r8d
 114 00c5 39C1     		cmpl	%eax, %ecx
 115 00c7 410F9EC0 		setle	%r8b
 116              	.L1:
1563:fltk-1.3.4-1/png/png.c ****    return 1;
1564:fltk-1.3.4-1/png/png.c **** }
 117              		.loc 1 1564 1 view .LVU29
 118 00cb 4489C0   		movl	%r8d, %eax
 119 00ce C3       		ret
 120              		.cfi_endproc
 121              	.LFE76:
 123              		.section	.text.png_pow10,"ax",@progbits
 124              		.p2align 4
 126              	png_pow10:
 127              	.LVL2:
 128              	.LFB99:
1565:fltk-1.3.4-1/png/png.c **** 
1566:fltk-1.3.4-1/png/png.c **** /* Added in libpng-1.6.0, a different check for the validity of a set of cHRM
1567:fltk-1.3.4-1/png/png.c ****  * chunk chromaticities.  Earlier checks used to simply look for the overflow
1568:fltk-1.3.4-1/png/png.c ****  * condition (where the determinant of the matrix to solve for XYZ ends up zero
1569:fltk-1.3.4-1/png/png.c ****  * because the chromaticity values are not all distinct.)  Despite this it is
1570:fltk-1.3.4-1/png/png.c ****  * theoretically possible to produce chromaticities that are apparently valid
1571:fltk-1.3.4-1/png/png.c ****  * but that rapidly degrade to invalid, potentially crashing, sets because of
1572:fltk-1.3.4-1/png/png.c ****  * arithmetic inaccuracies when calculations are performed on them.  The new
1573:fltk-1.3.4-1/png/png.c ****  * check is to round-trip xy -> XYZ -> xy and then check that the result is
1574:fltk-1.3.4-1/png/png.c ****  * within a small percentage of the original.
1575:fltk-1.3.4-1/png/png.c ****  */
1576:fltk-1.3.4-1/png/png.c **** static int
1577:fltk-1.3.4-1/png/png.c **** png_colorspace_check_xy(png_XYZ *XYZ, const png_xy *xy)
1578:fltk-1.3.4-1/png/png.c **** {
1579:fltk-1.3.4-1/png/png.c ****    int result;
1580:fltk-1.3.4-1/png/png.c ****    png_xy xy_test;
1581:fltk-1.3.4-1/png/png.c **** 
1582:fltk-1.3.4-1/png/png.c ****    /* As a side-effect this routine also returns the XYZ endpoints. */
1583:fltk-1.3.4-1/png/png.c ****    result = png_XYZ_from_xy(XYZ, xy);
1584:fltk-1.3.4-1/png/png.c ****    if (result != 0)
1585:fltk-1.3.4-1/png/png.c ****       return result;
1586:fltk-1.3.4-1/png/png.c **** 
1587:fltk-1.3.4-1/png/png.c ****    result = png_xy_from_XYZ(&xy_test, XYZ);
1588:fltk-1.3.4-1/png/png.c ****    if (result != 0)
1589:fltk-1.3.4-1/png/png.c ****       return result;
1590:fltk-1.3.4-1/png/png.c **** 
1591:fltk-1.3.4-1/png/png.c ****    if (png_colorspace_endpoints_match(xy, &xy_test,
1592:fltk-1.3.4-1/png/png.c ****        5/*actually, the math is pretty accurate*/) != 0)
1593:fltk-1.3.4-1/png/png.c ****       return 0;
1594:fltk-1.3.4-1/png/png.c **** 
1595:fltk-1.3.4-1/png/png.c ****    /* Too much slip */
1596:fltk-1.3.4-1/png/png.c ****    return 1;
1597:fltk-1.3.4-1/png/png.c **** }
1598:fltk-1.3.4-1/png/png.c **** 
1599:fltk-1.3.4-1/png/png.c **** /* This is the check going the other way.  The XYZ is modified to normalize it
1600:fltk-1.3.4-1/png/png.c ****  * (another side-effect) and the xy chromaticities are returned.
1601:fltk-1.3.4-1/png/png.c ****  */
1602:fltk-1.3.4-1/png/png.c **** static int
1603:fltk-1.3.4-1/png/png.c **** png_colorspace_check_XYZ(png_xy *xy, png_XYZ *XYZ)
1604:fltk-1.3.4-1/png/png.c **** {
1605:fltk-1.3.4-1/png/png.c ****    int result;
1606:fltk-1.3.4-1/png/png.c ****    png_XYZ XYZtemp;
1607:fltk-1.3.4-1/png/png.c **** 
1608:fltk-1.3.4-1/png/png.c ****    result = png_XYZ_normalize(XYZ);
1609:fltk-1.3.4-1/png/png.c ****    if (result != 0)
1610:fltk-1.3.4-1/png/png.c ****       return result;
1611:fltk-1.3.4-1/png/png.c **** 
1612:fltk-1.3.4-1/png/png.c ****    result = png_xy_from_XYZ(xy, XYZ);
1613:fltk-1.3.4-1/png/png.c ****    if (result != 0)
1614:fltk-1.3.4-1/png/png.c ****       return result;
1615:fltk-1.3.4-1/png/png.c **** 
1616:fltk-1.3.4-1/png/png.c ****    XYZtemp = *XYZ;
1617:fltk-1.3.4-1/png/png.c ****    return png_colorspace_check_xy(&XYZtemp, xy);
1618:fltk-1.3.4-1/png/png.c **** }
1619:fltk-1.3.4-1/png/png.c **** 
1620:fltk-1.3.4-1/png/png.c **** /* Used to check for an endpoint match against sRGB */
1621:fltk-1.3.4-1/png/png.c **** static const png_xy sRGB_xy = /* From ITU-R BT.709-3 */
1622:fltk-1.3.4-1/png/png.c **** {
1623:fltk-1.3.4-1/png/png.c ****    /* color      x       y */
1624:fltk-1.3.4-1/png/png.c ****    /* red   */ 64000, 33000,
1625:fltk-1.3.4-1/png/png.c ****    /* green */ 30000, 60000,
1626:fltk-1.3.4-1/png/png.c ****    /* blue  */ 15000,  6000,
1627:fltk-1.3.4-1/png/png.c ****    /* white */ 31270, 32900
1628:fltk-1.3.4-1/png/png.c **** };
1629:fltk-1.3.4-1/png/png.c **** 
1630:fltk-1.3.4-1/png/png.c **** static int
1631:fltk-1.3.4-1/png/png.c **** png_colorspace_set_xy_and_XYZ(png_const_structrp png_ptr,
1632:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, const png_xy *xy, const png_XYZ *XYZ,
1633:fltk-1.3.4-1/png/png.c ****    int preferred)
1634:fltk-1.3.4-1/png/png.c **** {
1635:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
1636:fltk-1.3.4-1/png/png.c ****       return 0;
1637:fltk-1.3.4-1/png/png.c **** 
1638:fltk-1.3.4-1/png/png.c ****    /* The consistency check is performed on the chromaticities; this factors out
1639:fltk-1.3.4-1/png/png.c ****     * variations because of the normalization (or not) of the end point Y
1640:fltk-1.3.4-1/png/png.c ****     * values.
1641:fltk-1.3.4-1/png/png.c ****     */
1642:fltk-1.3.4-1/png/png.c ****    if (preferred < 2 &&
1643:fltk-1.3.4-1/png/png.c ****        (colorspace->flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
1644:fltk-1.3.4-1/png/png.c ****    {
1645:fltk-1.3.4-1/png/png.c ****       /* The end points must be reasonably close to any we already have.  The
1646:fltk-1.3.4-1/png/png.c ****        * following allows an error of up to +/-.001
1647:fltk-1.3.4-1/png/png.c ****        */
1648:fltk-1.3.4-1/png/png.c ****       if (png_colorspace_endpoints_match(xy, &colorspace->end_points_xy,
1649:fltk-1.3.4-1/png/png.c ****           100) == 0)
1650:fltk-1.3.4-1/png/png.c ****       {
1651:fltk-1.3.4-1/png/png.c ****          colorspace->flags |= PNG_COLORSPACE_INVALID;
1652:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "inconsistent chromaticities");
1653:fltk-1.3.4-1/png/png.c ****          return 0; /* failed */
1654:fltk-1.3.4-1/png/png.c ****       }
1655:fltk-1.3.4-1/png/png.c **** 
1656:fltk-1.3.4-1/png/png.c ****       /* Only overwrite with preferred values */
1657:fltk-1.3.4-1/png/png.c ****       if (preferred == 0)
1658:fltk-1.3.4-1/png/png.c ****          return 1; /* ok, but no change */
1659:fltk-1.3.4-1/png/png.c ****    }
1660:fltk-1.3.4-1/png/png.c **** 
1661:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_xy = *xy;
1662:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = *XYZ;
1663:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_ENDPOINTS;
1664:fltk-1.3.4-1/png/png.c **** 
1665:fltk-1.3.4-1/png/png.c ****    /* The end points are normally quoted to two decimal digits, so allow +/-0.01
1666:fltk-1.3.4-1/png/png.c ****     * on this test.
1667:fltk-1.3.4-1/png/png.c ****     */
1668:fltk-1.3.4-1/png/png.c ****    if (png_colorspace_endpoints_match(xy, &sRGB_xy, 1000) != 0)
1669:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB;
1670:fltk-1.3.4-1/png/png.c **** 
1671:fltk-1.3.4-1/png/png.c ****    else
1672:fltk-1.3.4-1/png/png.c ****       colorspace->flags &= PNG_COLORSPACE_CANCEL(
1673:fltk-1.3.4-1/png/png.c ****          PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB);
1674:fltk-1.3.4-1/png/png.c **** 
1675:fltk-1.3.4-1/png/png.c ****    return 2; /* ok and changed */
1676:fltk-1.3.4-1/png/png.c **** }
1677:fltk-1.3.4-1/png/png.c **** 
1678:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
1679:fltk-1.3.4-1/png/png.c **** png_colorspace_set_chromaticities(png_const_structrp png_ptr,
1680:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, const png_xy *xy, int preferred)
1681:fltk-1.3.4-1/png/png.c **** {
1682:fltk-1.3.4-1/png/png.c ****    /* We must check the end points to ensure they are reasonable - in the past
1683:fltk-1.3.4-1/png/png.c ****     * color management systems have crashed as a result of getting bogus
1684:fltk-1.3.4-1/png/png.c ****     * colorant values, while this isn't the fault of libpng it is the
1685:fltk-1.3.4-1/png/png.c ****     * responsibility of libpng because PNG carries the bomb and libpng is in a
1686:fltk-1.3.4-1/png/png.c ****     * position to protect against it.
1687:fltk-1.3.4-1/png/png.c ****     */
1688:fltk-1.3.4-1/png/png.c ****    png_XYZ XYZ;
1689:fltk-1.3.4-1/png/png.c **** 
1690:fltk-1.3.4-1/png/png.c ****    switch (png_colorspace_check_xy(&XYZ, xy))
1691:fltk-1.3.4-1/png/png.c ****    {
1692:fltk-1.3.4-1/png/png.c ****       case 0: /* success */
1693:fltk-1.3.4-1/png/png.c ****          return png_colorspace_set_xy_and_XYZ(png_ptr, colorspace, xy, &XYZ,
1694:fltk-1.3.4-1/png/png.c ****             preferred);
1695:fltk-1.3.4-1/png/png.c **** 
1696:fltk-1.3.4-1/png/png.c ****       case 1:
1697:fltk-1.3.4-1/png/png.c ****          /* We can't invert the chromaticities so we can't produce value XYZ
1698:fltk-1.3.4-1/png/png.c ****           * values.  Likely as not a color management system will fail too.
1699:fltk-1.3.4-1/png/png.c ****           */
1700:fltk-1.3.4-1/png/png.c ****          colorspace->flags |= PNG_COLORSPACE_INVALID;
1701:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "invalid chromaticities");
1702:fltk-1.3.4-1/png/png.c ****          break;
1703:fltk-1.3.4-1/png/png.c **** 
1704:fltk-1.3.4-1/png/png.c ****       default:
1705:fltk-1.3.4-1/png/png.c ****          /* libpng is broken; this should be a warning but if it happens we
1706:fltk-1.3.4-1/png/png.c ****           * want error reports so for the moment it is an error.
1707:fltk-1.3.4-1/png/png.c ****           */
1708:fltk-1.3.4-1/png/png.c ****          colorspace->flags |= PNG_COLORSPACE_INVALID;
1709:fltk-1.3.4-1/png/png.c ****          png_error(png_ptr, "internal error checking chromaticities");
1710:fltk-1.3.4-1/png/png.c ****          break;
1711:fltk-1.3.4-1/png/png.c ****    }
1712:fltk-1.3.4-1/png/png.c **** 
1713:fltk-1.3.4-1/png/png.c ****    return 0; /* failed */
1714:fltk-1.3.4-1/png/png.c **** }
1715:fltk-1.3.4-1/png/png.c **** 
1716:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
1717:fltk-1.3.4-1/png/png.c **** png_colorspace_set_endpoints(png_const_structrp png_ptr,
1718:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, const png_XYZ *XYZ_in, int preferred)
1719:fltk-1.3.4-1/png/png.c **** {
1720:fltk-1.3.4-1/png/png.c ****    png_XYZ XYZ = *XYZ_in;
1721:fltk-1.3.4-1/png/png.c ****    png_xy xy;
1722:fltk-1.3.4-1/png/png.c **** 
1723:fltk-1.3.4-1/png/png.c ****    switch (png_colorspace_check_XYZ(&xy, &XYZ))
1724:fltk-1.3.4-1/png/png.c ****    {
1725:fltk-1.3.4-1/png/png.c ****       case 0:
1726:fltk-1.3.4-1/png/png.c ****          return png_colorspace_set_xy_and_XYZ(png_ptr, colorspace, &xy, &XYZ,
1727:fltk-1.3.4-1/png/png.c ****             preferred);
1728:fltk-1.3.4-1/png/png.c **** 
1729:fltk-1.3.4-1/png/png.c ****       case 1:
1730:fltk-1.3.4-1/png/png.c ****          /* End points are invalid. */
1731:fltk-1.3.4-1/png/png.c ****          colorspace->flags |= PNG_COLORSPACE_INVALID;
1732:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "invalid end points");
1733:fltk-1.3.4-1/png/png.c ****          break;
1734:fltk-1.3.4-1/png/png.c **** 
1735:fltk-1.3.4-1/png/png.c ****       default:
1736:fltk-1.3.4-1/png/png.c ****          colorspace->flags |= PNG_COLORSPACE_INVALID;
1737:fltk-1.3.4-1/png/png.c ****          png_error(png_ptr, "internal error checking chromaticities");
1738:fltk-1.3.4-1/png/png.c ****          break;
1739:fltk-1.3.4-1/png/png.c ****    }
1740:fltk-1.3.4-1/png/png.c **** 
1741:fltk-1.3.4-1/png/png.c ****    return 0; /* failed */
1742:fltk-1.3.4-1/png/png.c **** }
1743:fltk-1.3.4-1/png/png.c **** 
1744:fltk-1.3.4-1/png/png.c **** #if defined(PNG_sRGB_SUPPORTED) || defined(PNG_iCCP_SUPPORTED)
1745:fltk-1.3.4-1/png/png.c **** /* Error message generation */
1746:fltk-1.3.4-1/png/png.c **** static char
1747:fltk-1.3.4-1/png/png.c **** png_icc_tag_char(png_uint_32 byte)
1748:fltk-1.3.4-1/png/png.c **** {
1749:fltk-1.3.4-1/png/png.c ****    byte &= 0xff;
1750:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
1751:fltk-1.3.4-1/png/png.c ****       return (char)byte;
1752:fltk-1.3.4-1/png/png.c ****    else
1753:fltk-1.3.4-1/png/png.c ****       return '?';
1754:fltk-1.3.4-1/png/png.c **** }
1755:fltk-1.3.4-1/png/png.c **** 
1756:fltk-1.3.4-1/png/png.c **** static void
1757:fltk-1.3.4-1/png/png.c **** png_icc_tag_name(char *name, png_uint_32 tag)
1758:fltk-1.3.4-1/png/png.c **** {
1759:fltk-1.3.4-1/png/png.c ****    name[0] = '\'';
1760:fltk-1.3.4-1/png/png.c ****    name[1] = png_icc_tag_char(tag >> 24);
1761:fltk-1.3.4-1/png/png.c ****    name[2] = png_icc_tag_char(tag >> 16);
1762:fltk-1.3.4-1/png/png.c ****    name[3] = png_icc_tag_char(tag >>  8);
1763:fltk-1.3.4-1/png/png.c ****    name[4] = png_icc_tag_char(tag      );
1764:fltk-1.3.4-1/png/png.c ****    name[5] = '\'';
1765:fltk-1.3.4-1/png/png.c **** }
1766:fltk-1.3.4-1/png/png.c **** 
1767:fltk-1.3.4-1/png/png.c **** static int
1768:fltk-1.3.4-1/png/png.c **** is_ICC_signature_char(png_alloc_size_t it)
1769:fltk-1.3.4-1/png/png.c **** {
1770:fltk-1.3.4-1/png/png.c ****    return it == 32 || (it >= 48 && it <= 57) || (it >= 65 && it <= 90) ||
1771:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
1772:fltk-1.3.4-1/png/png.c **** }
1773:fltk-1.3.4-1/png/png.c **** 
1774:fltk-1.3.4-1/png/png.c **** static int
1775:fltk-1.3.4-1/png/png.c **** is_ICC_signature(png_alloc_size_t it)
1776:fltk-1.3.4-1/png/png.c **** {
1777:fltk-1.3.4-1/png/png.c ****    return is_ICC_signature_char(it >> 24) /* checks all the top bits */ &&
1778:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 16) & 0xff) &&
1779:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 8) & 0xff) &&
1780:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char(it & 0xff);
1781:fltk-1.3.4-1/png/png.c **** }
1782:fltk-1.3.4-1/png/png.c **** 
1783:fltk-1.3.4-1/png/png.c **** static int
1784:fltk-1.3.4-1/png/png.c **** png_icc_profile_error(png_const_structrp png_ptr, png_colorspacerp colorspace,
1785:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_alloc_size_t value, png_const_charp reason)
1786:fltk-1.3.4-1/png/png.c **** {
1787:fltk-1.3.4-1/png/png.c ****    size_t pos;
1788:fltk-1.3.4-1/png/png.c ****    char message[196]; /* see below for calculation */
1789:fltk-1.3.4-1/png/png.c **** 
1790:fltk-1.3.4-1/png/png.c ****    if (colorspace != NULL)
1791:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_INVALID;
1792:fltk-1.3.4-1/png/png.c **** 
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, (sizeof message), 0, "profile '"); /* 9 chars */
1794:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
1795:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, (sizeof message), pos, "': "); /* +2 = 90 */
1796:fltk-1.3.4-1/png/png.c ****    if (is_ICC_signature(value) != 0)
1797:fltk-1.3.4-1/png/png.c ****    {
1798:fltk-1.3.4-1/png/png.c ****       /* So 'value' is at most 4 bytes and the following cast is safe */
1799:fltk-1.3.4-1/png/png.c ****       png_icc_tag_name(message+pos, (png_uint_32)value);
1800:fltk-1.3.4-1/png/png.c ****       pos += 6; /* total +8; less than the else clause */
1801:fltk-1.3.4-1/png/png.c ****       message[pos++] = ':';
1802:fltk-1.3.4-1/png/png.c ****       message[pos++] = ' ';
1803:fltk-1.3.4-1/png/png.c ****    }
1804:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_WARNINGS_SUPPORTED
1805:fltk-1.3.4-1/png/png.c ****    else
1806:fltk-1.3.4-1/png/png.c ****       {
1807:fltk-1.3.4-1/png/png.c ****          char number[PNG_NUMBER_BUFFER_SIZE]; /* +24 = 114*/
1808:fltk-1.3.4-1/png/png.c **** 
1809:fltk-1.3.4-1/png/png.c ****          pos = png_safecat(message, (sizeof message), pos,
1810:fltk-1.3.4-1/png/png.c ****             png_format_number(number, number+(sizeof number),
1811:fltk-1.3.4-1/png/png.c ****                PNG_NUMBER_FORMAT_x, value));
1812:fltk-1.3.4-1/png/png.c ****          pos = png_safecat(message, (sizeof message), pos, "h: "); /*+2 = 116*/
1813:fltk-1.3.4-1/png/png.c ****       }
1814:fltk-1.3.4-1/png/png.c **** #  endif
1815:fltk-1.3.4-1/png/png.c ****    /* The 'reason' is an arbitrary message, allow +79 maximum 195 */
1816:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, (sizeof message), pos, reason);
1817:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(pos)
1818:fltk-1.3.4-1/png/png.c **** 
1819:fltk-1.3.4-1/png/png.c ****    /* This is recoverable, but make it unconditionally an app_error on write to
1820:fltk-1.3.4-1/png/png.c ****     * avoid writing invalid ICC profiles into PNG files (i.e., we handle them
1821:fltk-1.3.4-1/png/png.c ****     * on read, with a warning, but on write unless the app turns off
1822:fltk-1.3.4-1/png/png.c ****     * application errors the PNG won't be written.)
1823:fltk-1.3.4-1/png/png.c ****     */
1824:fltk-1.3.4-1/png/png.c ****    png_chunk_report(png_ptr, message,
1825:fltk-1.3.4-1/png/png.c ****       (colorspace != NULL) ? PNG_CHUNK_ERROR : PNG_CHUNK_WRITE_ERROR);
1826:fltk-1.3.4-1/png/png.c **** 
1827:fltk-1.3.4-1/png/png.c ****    return 0;
1828:fltk-1.3.4-1/png/png.c **** }
1829:fltk-1.3.4-1/png/png.c **** #endif /* sRGB || iCCP */
1830:fltk-1.3.4-1/png/png.c **** 
1831:fltk-1.3.4-1/png/png.c **** #ifdef PNG_sRGB_SUPPORTED
1832:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
1833:fltk-1.3.4-1/png/png.c **** png_colorspace_set_sRGB(png_const_structrp png_ptr, png_colorspacerp colorspace,
1834:fltk-1.3.4-1/png/png.c ****    int intent)
1835:fltk-1.3.4-1/png/png.c **** {
1836:fltk-1.3.4-1/png/png.c ****    /* sRGB sets known gamma, end points and (from the chunk) intent. */
1837:fltk-1.3.4-1/png/png.c ****    /* IMPORTANT: these are not necessarily the values found in an ICC profile
1838:fltk-1.3.4-1/png/png.c ****     * because ICC profiles store values adapted to a D50 environment; it is
1839:fltk-1.3.4-1/png/png.c ****     * expected that the ICC profile mediaWhitePointTag will be D50; see the
1840:fltk-1.3.4-1/png/png.c ****     * checks and code elsewhere to understand this better.
1841:fltk-1.3.4-1/png/png.c ****     *
1842:fltk-1.3.4-1/png/png.c ****     * These XYZ values, which are accurate to 5dp, produce rgb to gray
1843:fltk-1.3.4-1/png/png.c ****     * coefficients of (6968,23435,2366), which are reduced (because they add up
1844:fltk-1.3.4-1/png/png.c ****     * to 32769 not 32768) to (6968,23434,2366).  These are the values that
1845:fltk-1.3.4-1/png/png.c ****     * libpng has traditionally used (and are the best values given the 15bit
1846:fltk-1.3.4-1/png/png.c ****     * algorithm used by the rgb to gray code.)
1847:fltk-1.3.4-1/png/png.c ****     */
1848:fltk-1.3.4-1/png/png.c ****    static const png_XYZ sRGB_XYZ = /* D65 XYZ (*not* the D50 adapted values!) */
1849:fltk-1.3.4-1/png/png.c ****    {
1850:fltk-1.3.4-1/png/png.c ****       /* color      X      Y      Z */
1851:fltk-1.3.4-1/png/png.c ****       /* red   */ 41239, 21264,  1933,
1852:fltk-1.3.4-1/png/png.c ****       /* green */ 35758, 71517, 11919,
1853:fltk-1.3.4-1/png/png.c ****       /* blue  */ 18048,  7219, 95053
1854:fltk-1.3.4-1/png/png.c ****    };
1855:fltk-1.3.4-1/png/png.c **** 
1856:fltk-1.3.4-1/png/png.c ****    /* Do nothing if the colorspace is already invalidated. */
1857:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
1858:fltk-1.3.4-1/png/png.c ****       return 0;
1859:fltk-1.3.4-1/png/png.c **** 
1860:fltk-1.3.4-1/png/png.c ****    /* Check the intent, then check for existing settings.  It is valid for the
1861:fltk-1.3.4-1/png/png.c ****     * PNG file to have cHRM or gAMA chunks along with sRGB, but the values must
1862:fltk-1.3.4-1/png/png.c ****     * be consistent with the correct values.  If, however, this function is
1863:fltk-1.3.4-1/png/png.c ****     * called below because an iCCP chunk matches sRGB then it is quite
1864:fltk-1.3.4-1/png/png.c ****     * conceivable that an older app recorded incorrect gAMA and cHRM because of
1865:fltk-1.3.4-1/png/png.c ****     * an incorrect calculation based on the values in the profile - this does
1866:fltk-1.3.4-1/png/png.c ****     * *not* invalidate the profile (though it still produces an error, which can
1867:fltk-1.3.4-1/png/png.c ****     * be ignored.)
1868:fltk-1.3.4-1/png/png.c ****     */
1869:fltk-1.3.4-1/png/png.c ****    if (intent < 0 || intent >= PNG_sRGB_INTENT_LAST)
1870:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, "sRGB",
1871:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "invalid sRGB rendering intent");
1872:fltk-1.3.4-1/png/png.c **** 
1873:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_HAVE_INTENT) != 0 &&
1874:fltk-1.3.4-1/png/png.c ****       colorspace->rendering_intent != intent)
1875:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, "sRGB",
1876:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "inconsistent rendering intents");
1877:fltk-1.3.4-1/png/png.c **** 
1878:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_FROM_sRGB) != 0)
1879:fltk-1.3.4-1/png/png.c ****    {
1880:fltk-1.3.4-1/png/png.c ****       png_benign_error(png_ptr, "duplicate sRGB information ignored");
1881:fltk-1.3.4-1/png/png.c ****       return 0;
1882:fltk-1.3.4-1/png/png.c ****    }
1883:fltk-1.3.4-1/png/png.c **** 
1884:fltk-1.3.4-1/png/png.c ****    /* If the standard sRGB cHRM chunk does not match the one from the PNG file
1885:fltk-1.3.4-1/png/png.c ****     * warn but overwrite the value with the correct one.
1886:fltk-1.3.4-1/png/png.c ****     */
1887:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0 &&
1888:fltk-1.3.4-1/png/png.c ****       !png_colorspace_endpoints_match(&sRGB_xy, &colorspace->end_points_xy,
1889:fltk-1.3.4-1/png/png.c ****          100))
1890:fltk-1.3.4-1/png/png.c ****       png_chunk_report(png_ptr, "cHRM chunk does not match sRGB",
1891:fltk-1.3.4-1/png/png.c ****          PNG_CHUNK_ERROR);
1892:fltk-1.3.4-1/png/png.c **** 
1893:fltk-1.3.4-1/png/png.c ****    /* This check is just done for the error reporting - the routine always
1894:fltk-1.3.4-1/png/png.c ****     * returns true when the 'from' argument corresponds to sRGB (2).
1895:fltk-1.3.4-1/png/png.c ****     */
1896:fltk-1.3.4-1/png/png.c ****    (void)png_colorspace_check_gamma(png_ptr, colorspace, PNG_GAMMA_sRGB_INVERSE,
1897:fltk-1.3.4-1/png/png.c ****       2/*from sRGB*/);
1898:fltk-1.3.4-1/png/png.c **** 
1899:fltk-1.3.4-1/png/png.c ****    /* intent: bugs in GCC force 'int' to be used as the parameter type. */
1900:fltk-1.3.4-1/png/png.c ****    colorspace->rendering_intent = (png_uint_16)intent;
1901:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_INTENT;
1902:fltk-1.3.4-1/png/png.c **** 
1903:fltk-1.3.4-1/png/png.c ****    /* endpoints */
1904:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_xy = sRGB_xy;
1905:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = sRGB_XYZ;
1906:fltk-1.3.4-1/png/png.c ****    colorspace->flags |=
1907:fltk-1.3.4-1/png/png.c ****       (PNG_COLORSPACE_HAVE_ENDPOINTS|PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB);
1908:fltk-1.3.4-1/png/png.c **** 
1909:fltk-1.3.4-1/png/png.c ****    /* gamma */
1910:fltk-1.3.4-1/png/png.c ****    colorspace->gamma = PNG_GAMMA_sRGB_INVERSE;
1911:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_GAMMA;
1912:fltk-1.3.4-1/png/png.c **** 
1913:fltk-1.3.4-1/png/png.c ****    /* Finally record that we have an sRGB profile */
1914:fltk-1.3.4-1/png/png.c ****    colorspace->flags |=
1915:fltk-1.3.4-1/png/png.c ****       (PNG_COLORSPACE_MATCHES_sRGB|PNG_COLORSPACE_FROM_sRGB);
1916:fltk-1.3.4-1/png/png.c **** 
1917:fltk-1.3.4-1/png/png.c ****    return 1; /* set */
1918:fltk-1.3.4-1/png/png.c **** }
1919:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
1920:fltk-1.3.4-1/png/png.c **** 
1921:fltk-1.3.4-1/png/png.c **** #ifdef PNG_iCCP_SUPPORTED
1922:fltk-1.3.4-1/png/png.c **** /* Encoded value of D50 as an ICC XYZNumber.  From the ICC 2010 spec the value
1923:fltk-1.3.4-1/png/png.c ****  * is XYZ(0.9642,1.0,0.8249), which scales to:
1924:fltk-1.3.4-1/png/png.c ****  *
1925:fltk-1.3.4-1/png/png.c ****  *    (63189.8112, 65536, 54060.6464)
1926:fltk-1.3.4-1/png/png.c ****  */
1927:fltk-1.3.4-1/png/png.c **** static const png_byte D50_nCIEXYZ[12] =
1928:fltk-1.3.4-1/png/png.c ****    { 0x00, 0x00, 0xf6, 0xd6, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xd3, 0x2d };
1929:fltk-1.3.4-1/png/png.c **** 
1930:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
1931:fltk-1.3.4-1/png/png.c **** png_icc_check_length(png_const_structrp png_ptr, png_colorspacerp colorspace,
1932:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length)
1933:fltk-1.3.4-1/png/png.c **** {
1934:fltk-1.3.4-1/png/png.c ****    if (profile_length < 132)
1935:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
1936:fltk-1.3.4-1/png/png.c ****          "too short");
1937:fltk-1.3.4-1/png/png.c **** 
1938:fltk-1.3.4-1/png/png.c ****    return 1;
1939:fltk-1.3.4-1/png/png.c **** }
1940:fltk-1.3.4-1/png/png.c **** 
1941:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
1942:fltk-1.3.4-1/png/png.c **** png_icc_check_header(png_const_structrp png_ptr, png_colorspacerp colorspace,
1943:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length,
1944:fltk-1.3.4-1/png/png.c ****    png_const_bytep profile/* first 132 bytes only */, int color_type)
1945:fltk-1.3.4-1/png/png.c **** {
1946:fltk-1.3.4-1/png/png.c ****    png_uint_32 temp;
1947:fltk-1.3.4-1/png/png.c **** 
1948:fltk-1.3.4-1/png/png.c ****    /* Length check; this cannot be ignored in this code because profile_length
1949:fltk-1.3.4-1/png/png.c ****     * is used later to check the tag table, so even if the profile seems over
1950:fltk-1.3.4-1/png/png.c ****     * long profile_length from the caller must be correct.  The caller can fix
1951:fltk-1.3.4-1/png/png.c ****     * this up on read or write by just passing in the profile header length.
1952:fltk-1.3.4-1/png/png.c ****     */
1953:fltk-1.3.4-1/png/png.c ****    temp = png_get_uint_32(profile);
1954:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
1955:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
1956:fltk-1.3.4-1/png/png.c ****          "length does not match profile");
1957:fltk-1.3.4-1/png/png.c **** 
1958:fltk-1.3.4-1/png/png.c ****    temp = (png_uint_32) (*(profile+8));
1959:fltk-1.3.4-1/png/png.c ****    if (temp > 3 && (profile_length & 3))
1960:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
1961:fltk-1.3.4-1/png/png.c ****          "invalid length");
1962:fltk-1.3.4-1/png/png.c **** 
1963:fltk-1.3.4-1/png/png.c ****    temp = png_get_uint_32(profile+128); /* tag count: 12 bytes/tag */
1964:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
1965:fltk-1.3.4-1/png/png.c ****       profile_length < 132+12*temp) /* truncated tag table */
1966:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
1967:fltk-1.3.4-1/png/png.c ****          "tag count too large");
1968:fltk-1.3.4-1/png/png.c **** 
1969:fltk-1.3.4-1/png/png.c ****    /* The 'intent' must be valid or we can't store it, ICC limits the intent to
1970:fltk-1.3.4-1/png/png.c ****     * 16 bits.
1971:fltk-1.3.4-1/png/png.c ****     */
1972:fltk-1.3.4-1/png/png.c ****    temp = png_get_uint_32(profile+64);
1973:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
1974:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
1975:fltk-1.3.4-1/png/png.c ****          "invalid rendering intent");
1976:fltk-1.3.4-1/png/png.c **** 
1977:fltk-1.3.4-1/png/png.c ****    /* This is just a warning because the profile may be valid in future
1978:fltk-1.3.4-1/png/png.c ****     * versions.
1979:fltk-1.3.4-1/png/png.c ****     */
1980:fltk-1.3.4-1/png/png.c ****    if (temp >= PNG_sRGB_INTENT_LAST)
1981:fltk-1.3.4-1/png/png.c ****       (void)png_icc_profile_error(png_ptr, NULL, name, temp,
1982:fltk-1.3.4-1/png/png.c ****          "intent outside defined range");
1983:fltk-1.3.4-1/png/png.c **** 
1984:fltk-1.3.4-1/png/png.c ****    /* At this point the tag table can't be checked because it hasn't necessarily
1985:fltk-1.3.4-1/png/png.c ****     * been loaded; however, various header fields can be checked.  These checks
1986:fltk-1.3.4-1/png/png.c ****     * are for values permitted by the PNG spec in an ICC profile; the PNG spec
1987:fltk-1.3.4-1/png/png.c ****     * restricts the profiles that can be passed in an iCCP chunk (they must be
1988:fltk-1.3.4-1/png/png.c ****     * appropriate to processing PNG data!)
1989:fltk-1.3.4-1/png/png.c ****     */
1990:fltk-1.3.4-1/png/png.c **** 
1991:fltk-1.3.4-1/png/png.c ****    /* Data checks (could be skipped).  These checks must be independent of the
1992:fltk-1.3.4-1/png/png.c ****     * version number; however, the version number doesn't accomodate changes in
1993:fltk-1.3.4-1/png/png.c ****     * the header fields (just the known tags and the interpretation of the
1994:fltk-1.3.4-1/png/png.c ****     * data.)
1995:fltk-1.3.4-1/png/png.c ****     */
1996:fltk-1.3.4-1/png/png.c ****    temp = png_get_uint_32(profile+36); /* signature 'ascp' */
1997:fltk-1.3.4-1/png/png.c ****    if (temp != 0x61637370)
1998:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
1999:fltk-1.3.4-1/png/png.c ****          "invalid signature");
2000:fltk-1.3.4-1/png/png.c **** 
2001:fltk-1.3.4-1/png/png.c ****    /* Currently the PCS illuminant/adopted white point (the computational
2002:fltk-1.3.4-1/png/png.c ****     * white point) are required to be D50,
2003:fltk-1.3.4-1/png/png.c ****     * however the profile contains a record of the illuminant so perhaps ICC
2004:fltk-1.3.4-1/png/png.c ****     * expects to be able to change this in the future (despite the rationale in
2005:fltk-1.3.4-1/png/png.c ****     * the introduction for using a fixed PCS adopted white.)  Consequently the
2006:fltk-1.3.4-1/png/png.c ****     * following is just a warning.
2007:fltk-1.3.4-1/png/png.c ****     */
2008:fltk-1.3.4-1/png/png.c ****    if (memcmp(profile+68, D50_nCIEXYZ, 12) != 0)
2009:fltk-1.3.4-1/png/png.c ****       (void)png_icc_profile_error(png_ptr, NULL, name, 0/*no tag value*/,
2010:fltk-1.3.4-1/png/png.c ****          "PCS illuminant is not D50");
2011:fltk-1.3.4-1/png/png.c **** 
2012:fltk-1.3.4-1/png/png.c ****    /* The PNG spec requires this:
2013:fltk-1.3.4-1/png/png.c ****     * "If the iCCP chunk is present, the image samples conform to the colour
2014:fltk-1.3.4-1/png/png.c ****     * space represented by the embedded ICC profile as defined by the
2015:fltk-1.3.4-1/png/png.c ****     * International Color Consortium [ICC]. The colour space of the ICC profile
2016:fltk-1.3.4-1/png/png.c ****     * shall be an RGB colour space for colour images (PNG colour types 2, 3, and
2017:fltk-1.3.4-1/png/png.c ****     * 6), or a greyscale colour space for greyscale images (PNG colour types 0
2018:fltk-1.3.4-1/png/png.c ****     * and 4)."
2019:fltk-1.3.4-1/png/png.c ****     *
2020:fltk-1.3.4-1/png/png.c ****     * This checking code ensures the embedded profile (on either read or write)
2021:fltk-1.3.4-1/png/png.c ****     * conforms to the specification requirements.  Notice that an ICC 'gray'
2022:fltk-1.3.4-1/png/png.c ****     * color-space profile contains the information to transform the monochrome
2023:fltk-1.3.4-1/png/png.c ****     * data to XYZ or L*a*b (according to which PCS the profile uses) and this
2024:fltk-1.3.4-1/png/png.c ****     * should be used in preference to the standard libpng K channel replication
2025:fltk-1.3.4-1/png/png.c ****     * into R, G and B channels.
2026:fltk-1.3.4-1/png/png.c ****     *
2027:fltk-1.3.4-1/png/png.c ****     * Previously it was suggested that an RGB profile on grayscale data could be
2028:fltk-1.3.4-1/png/png.c ****     * handled.  However it it is clear that using an RGB profile in this context
2029:fltk-1.3.4-1/png/png.c ****     * must be an error - there is no specification of what it means.  Thus it is
2030:fltk-1.3.4-1/png/png.c ****     * almost certainly more correct to ignore the profile.
2031:fltk-1.3.4-1/png/png.c ****     */
2032:fltk-1.3.4-1/png/png.c ****    temp = png_get_uint_32(profile+16); /* data colour space field */
2033:fltk-1.3.4-1/png/png.c ****    switch (temp)
2034:fltk-1.3.4-1/png/png.c ****    {
2035:fltk-1.3.4-1/png/png.c ****       case 0x52474220: /* 'RGB ' */
2036:fltk-1.3.4-1/png/png.c ****          if ((color_type & PNG_COLOR_MASK_COLOR) == 0)
2037:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
2038:fltk-1.3.4-1/png/png.c ****                "RGB color space not permitted on grayscale PNG");
2039:fltk-1.3.4-1/png/png.c ****          break;
2040:fltk-1.3.4-1/png/png.c **** 
2041:fltk-1.3.4-1/png/png.c ****       case 0x47524159: /* 'GRAY' */
2042:fltk-1.3.4-1/png/png.c ****          if ((color_type & PNG_COLOR_MASK_COLOR) != 0)
2043:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
2044:fltk-1.3.4-1/png/png.c ****                "Gray color space not permitted on RGB PNG");
2045:fltk-1.3.4-1/png/png.c ****          break;
2046:fltk-1.3.4-1/png/png.c **** 
2047:fltk-1.3.4-1/png/png.c ****       default:
2048:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, temp,
2049:fltk-1.3.4-1/png/png.c ****             "invalid ICC profile color space");
2050:fltk-1.3.4-1/png/png.c ****    }
2051:fltk-1.3.4-1/png/png.c **** 
2052:fltk-1.3.4-1/png/png.c ****    /* It is up to the application to check that the profile class matches the
2053:fltk-1.3.4-1/png/png.c ****     * application requirements; the spec provides no guidance, but it's pretty
2054:fltk-1.3.4-1/png/png.c ****     * weird if the profile is not scanner ('scnr'), monitor ('mntr'), printer
2055:fltk-1.3.4-1/png/png.c ****     * ('prtr') or 'spac' (for generic color spaces).  Issue a warning in these
2056:fltk-1.3.4-1/png/png.c ****     * cases.  Issue an error for device link or abstract profiles - these don't
2057:fltk-1.3.4-1/png/png.c ****     * contain the records necessary to transform the color-space to anything
2058:fltk-1.3.4-1/png/png.c ****     * other than the target device (and not even that for an abstract profile).
2059:fltk-1.3.4-1/png/png.c ****     * Profiles of these classes may not be embedded in images.
2060:fltk-1.3.4-1/png/png.c ****     */
2061:fltk-1.3.4-1/png/png.c ****    temp = png_get_uint_32(profile+12); /* profile/device class */
2062:fltk-1.3.4-1/png/png.c ****    switch (temp)
2063:fltk-1.3.4-1/png/png.c ****    {
2064:fltk-1.3.4-1/png/png.c ****       case 0x73636E72: /* 'scnr' */
2065:fltk-1.3.4-1/png/png.c ****       case 0x6D6E7472: /* 'mntr' */
2066:fltk-1.3.4-1/png/png.c ****       case 0x70727472: /* 'prtr' */
2067:fltk-1.3.4-1/png/png.c ****       case 0x73706163: /* 'spac' */
2068:fltk-1.3.4-1/png/png.c ****          /* All supported */
2069:fltk-1.3.4-1/png/png.c ****          break;
2070:fltk-1.3.4-1/png/png.c **** 
2071:fltk-1.3.4-1/png/png.c ****       case 0x61627374: /* 'abst' */
2072:fltk-1.3.4-1/png/png.c ****          /* May not be embedded in an image */
2073:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, temp,
2074:fltk-1.3.4-1/png/png.c ****             "invalid embedded Abstract ICC profile");
2075:fltk-1.3.4-1/png/png.c **** 
2076:fltk-1.3.4-1/png/png.c ****       case 0x6C696E6B: /* 'link' */
2077:fltk-1.3.4-1/png/png.c ****          /* DeviceLink profiles cannot be interpreted in a non-device specific
2078:fltk-1.3.4-1/png/png.c ****           * fashion, if an app uses the AToB0Tag in the profile the results are
2079:fltk-1.3.4-1/png/png.c ****           * undefined unless the result is sent to the intended device,
2080:fltk-1.3.4-1/png/png.c ****           * therefore a DeviceLink profile should not be found embedded in a
2081:fltk-1.3.4-1/png/png.c ****           * PNG.
2082:fltk-1.3.4-1/png/png.c ****           */
2083:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, temp,
2084:fltk-1.3.4-1/png/png.c ****             "unexpected DeviceLink ICC profile class");
2085:fltk-1.3.4-1/png/png.c **** 
2086:fltk-1.3.4-1/png/png.c ****       case 0x6E6D636C: /* 'nmcl' */
2087:fltk-1.3.4-1/png/png.c ****          /* A NamedColor profile is also device specific, however it doesn't
2088:fltk-1.3.4-1/png/png.c ****           * contain an AToB0 tag that is open to misinterpretation.  Almost
2089:fltk-1.3.4-1/png/png.c ****           * certainly it will fail the tests below.
2090:fltk-1.3.4-1/png/png.c ****           */
2091:fltk-1.3.4-1/png/png.c ****          (void)png_icc_profile_error(png_ptr, NULL, name, temp,
2092:fltk-1.3.4-1/png/png.c ****             "unexpected NamedColor ICC profile class");
2093:fltk-1.3.4-1/png/png.c ****          break;
2094:fltk-1.3.4-1/png/png.c **** 
2095:fltk-1.3.4-1/png/png.c ****       default:
2096:fltk-1.3.4-1/png/png.c ****          /* To allow for future enhancements to the profile accept unrecognized
2097:fltk-1.3.4-1/png/png.c ****           * profile classes with a warning, these then hit the test below on the
2098:fltk-1.3.4-1/png/png.c ****           * tag content to ensure they are backward compatible with one of the
2099:fltk-1.3.4-1/png/png.c ****           * understood profiles.
2100:fltk-1.3.4-1/png/png.c ****           */
2101:fltk-1.3.4-1/png/png.c ****          (void)png_icc_profile_error(png_ptr, NULL, name, temp,
2102:fltk-1.3.4-1/png/png.c ****             "unrecognized ICC profile class");
2103:fltk-1.3.4-1/png/png.c ****          break;
2104:fltk-1.3.4-1/png/png.c ****    }
2105:fltk-1.3.4-1/png/png.c **** 
2106:fltk-1.3.4-1/png/png.c ****    /* For any profile other than a device link one the PCS must be encoded
2107:fltk-1.3.4-1/png/png.c ****     * either in XYZ or Lab.
2108:fltk-1.3.4-1/png/png.c ****     */
2109:fltk-1.3.4-1/png/png.c ****    temp = png_get_uint_32(profile+20);
2110:fltk-1.3.4-1/png/png.c ****    switch (temp)
2111:fltk-1.3.4-1/png/png.c ****    {
2112:fltk-1.3.4-1/png/png.c ****       case 0x58595A20: /* 'XYZ ' */
2113:fltk-1.3.4-1/png/png.c ****       case 0x4C616220: /* 'Lab ' */
2114:fltk-1.3.4-1/png/png.c ****          break;
2115:fltk-1.3.4-1/png/png.c **** 
2116:fltk-1.3.4-1/png/png.c ****       default:
2117:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, temp,
2118:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
2119:fltk-1.3.4-1/png/png.c ****    }
2120:fltk-1.3.4-1/png/png.c **** 
2121:fltk-1.3.4-1/png/png.c ****    return 1;
2122:fltk-1.3.4-1/png/png.c **** }
2123:fltk-1.3.4-1/png/png.c **** 
2124:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
2125:fltk-1.3.4-1/png/png.c **** png_icc_check_tag_table(png_const_structrp png_ptr, png_colorspacerp colorspace,
2126:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length,
2127:fltk-1.3.4-1/png/png.c ****    png_const_bytep profile /* header plus whole tag table */)
2128:fltk-1.3.4-1/png/png.c **** {
2129:fltk-1.3.4-1/png/png.c ****    png_uint_32 tag_count = png_get_uint_32(profile+128);
2130:fltk-1.3.4-1/png/png.c ****    png_uint_32 itag;
2131:fltk-1.3.4-1/png/png.c ****    png_const_bytep tag = profile+132; /* The first tag */
2132:fltk-1.3.4-1/png/png.c **** 
2133:fltk-1.3.4-1/png/png.c ****    /* First scan all the tags in the table and add bits to the icc_info value
2134:fltk-1.3.4-1/png/png.c ****     * (temporarily in 'tags').
2135:fltk-1.3.4-1/png/png.c ****     */
2136:fltk-1.3.4-1/png/png.c ****    for (itag=0; itag < tag_count; ++itag, tag += 12)
2137:fltk-1.3.4-1/png/png.c ****    {
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_id = png_get_uint_32(tag+0);
2139:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
2140:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_length = png_get_uint_32(tag+8);/* not padded */
2141:fltk-1.3.4-1/png/png.c **** 
2142:fltk-1.3.4-1/png/png.c ****       /* The ICC specification does not exclude zero length tags, therefore the
2143:fltk-1.3.4-1/png/png.c ****        * start might actually be anywhere if there is no data, but this would be
2144:fltk-1.3.4-1/png/png.c ****        * a clear abuse of the intent of the standard so the start is checked for
2145:fltk-1.3.4-1/png/png.c ****        * being in range.  All defined tag types have an 8 byte header - a 4 byte
2146:fltk-1.3.4-1/png/png.c ****        * type signature then 0.
2147:fltk-1.3.4-1/png/png.c ****        */
2148:fltk-1.3.4-1/png/png.c ****       if ((tag_start & 3) != 0)
2149:fltk-1.3.4-1/png/png.c ****       {
2150:fltk-1.3.4-1/png/png.c ****          /* CNHP730S.icc shipped with Microsoft Windows 64 violates this, it is
2151:fltk-1.3.4-1/png/png.c ****           * only a warning here because libpng does not care about the
2152:fltk-1.3.4-1/png/png.c ****           * alignment.
2153:fltk-1.3.4-1/png/png.c ****           */
2154:fltk-1.3.4-1/png/png.c ****          (void)png_icc_profile_error(png_ptr, NULL, name, tag_id,
2155:fltk-1.3.4-1/png/png.c ****             "ICC profile tag start not a multiple of 4");
2156:fltk-1.3.4-1/png/png.c ****       }
2157:fltk-1.3.4-1/png/png.c **** 
2158:fltk-1.3.4-1/png/png.c ****       /* This is a hard error; potentially it can cause read outside the
2159:fltk-1.3.4-1/png/png.c ****        * profile.
2160:fltk-1.3.4-1/png/png.c ****        */
2161:fltk-1.3.4-1/png/png.c ****       if (tag_start > profile_length || tag_length > profile_length - tag_start)
2162:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
2163:fltk-1.3.4-1/png/png.c ****             "ICC profile tag outside profile");
2164:fltk-1.3.4-1/png/png.c ****    }
2165:fltk-1.3.4-1/png/png.c **** 
2166:fltk-1.3.4-1/png/png.c ****    return 1; /* success, maybe with warnings */
2167:fltk-1.3.4-1/png/png.c **** }
2168:fltk-1.3.4-1/png/png.c **** 
2169:fltk-1.3.4-1/png/png.c **** #if defined(PNG_sRGB_SUPPORTED) && PNG_sRGB_PROFILE_CHECKS >= 0
2170:fltk-1.3.4-1/png/png.c **** /* Information about the known ICC sRGB profiles */
2171:fltk-1.3.4-1/png/png.c **** static const struct
2172:fltk-1.3.4-1/png/png.c **** {
2173:fltk-1.3.4-1/png/png.c ****    png_uint_32 adler, crc, length;
2174:fltk-1.3.4-1/png/png.c ****    png_uint_32 md5[4];
2175:fltk-1.3.4-1/png/png.c ****    png_byte    have_md5;
2176:fltk-1.3.4-1/png/png.c ****    png_byte    is_broken;
2177:fltk-1.3.4-1/png/png.c ****    png_uint_16 intent;
2178:fltk-1.3.4-1/png/png.c **** 
2179:fltk-1.3.4-1/png/png.c **** #  define PNG_MD5(a,b,c,d) { a, b, c, d }, (a!=0)||(b!=0)||(c!=0)||(d!=0)
2180:fltk-1.3.4-1/png/png.c **** #  define PNG_ICC_CHECKSUM(adler, crc, md5, intent, broke, date, length, fname)\
2181:fltk-1.3.4-1/png/png.c ****       { adler, crc, length, md5, broke, intent },
2182:fltk-1.3.4-1/png/png.c **** 
2183:fltk-1.3.4-1/png/png.c **** } png_sRGB_checks[] =
2184:fltk-1.3.4-1/png/png.c **** {
2185:fltk-1.3.4-1/png/png.c ****    /* This data comes from contrib/tools/checksum-icc run on downloads of
2186:fltk-1.3.4-1/png/png.c ****     * all four ICC sRGB profiles from www.color.org.
2187:fltk-1.3.4-1/png/png.c ****     */
2188:fltk-1.3.4-1/png/png.c ****    /* adler32, crc32, MD5[4], intent, date, length, file-name */
2189:fltk-1.3.4-1/png/png.c ****    PNG_ICC_CHECKSUM(0x0a3fd9f6, 0x3b8772b9,
2190:fltk-1.3.4-1/png/png.c ****       PNG_MD5(0x29f83dde, 0xaff255ae, 0x7842fae4, 0xca83390d), 0, 0,
2191:fltk-1.3.4-1/png/png.c ****       "2009/03/27 21:36:31", 3048, "sRGB_IEC61966-2-1_black_scaled.icc")
2192:fltk-1.3.4-1/png/png.c **** 
2193:fltk-1.3.4-1/png/png.c ****    /* ICC sRGB v2 perceptual no black-compensation: */
2194:fltk-1.3.4-1/png/png.c ****    PNG_ICC_CHECKSUM(0x4909e5e1, 0x427ebb21,
2195:fltk-1.3.4-1/png/png.c ****       PNG_MD5(0xc95bd637, 0xe95d8a3b, 0x0df38f99, 0xc1320389), 1, 0,
2196:fltk-1.3.4-1/png/png.c ****       "2009/03/27 21:37:45", 3052, "sRGB_IEC61966-2-1_no_black_scaling.icc")
2197:fltk-1.3.4-1/png/png.c **** 
2198:fltk-1.3.4-1/png/png.c ****    PNG_ICC_CHECKSUM(0xfd2144a1, 0x306fd8ae,
2199:fltk-1.3.4-1/png/png.c ****       PNG_MD5(0xfc663378, 0x37e2886b, 0xfd72e983, 0x8228f1b8), 0, 0,
2200:fltk-1.3.4-1/png/png.c ****       "2009/08/10 17:28:01", 60988, "sRGB_v4_ICC_preference_displayclass.icc")
2201:fltk-1.3.4-1/png/png.c **** 
2202:fltk-1.3.4-1/png/png.c ****    /* ICC sRGB v4 perceptual */
2203:fltk-1.3.4-1/png/png.c ****    PNG_ICC_CHECKSUM(0x209c35d2, 0xbbef7812,
2204:fltk-1.3.4-1/png/png.c ****       PNG_MD5(0x34562abf, 0x994ccd06, 0x6d2c5721, 0xd0d68c5d), 0, 0,
2205:fltk-1.3.4-1/png/png.c ****       "2007/07/25 00:05:37", 60960, "sRGB_v4_ICC_preference.icc")
2206:fltk-1.3.4-1/png/png.c **** 
2207:fltk-1.3.4-1/png/png.c ****    /* The following profiles have no known MD5 checksum. If there is a match
2208:fltk-1.3.4-1/png/png.c ****     * on the (empty) MD5 the other fields are used to attempt a match and
2209:fltk-1.3.4-1/png/png.c ****     * a warning is produced.  The first two of these profiles have a 'cprt' tag
2210:fltk-1.3.4-1/png/png.c ****     * which suggests that they were also made by Hewlett Packard.
2211:fltk-1.3.4-1/png/png.c ****     */
2212:fltk-1.3.4-1/png/png.c ****    PNG_ICC_CHECKSUM(0xa054d762, 0x5d5129ce,
2213:fltk-1.3.4-1/png/png.c ****       PNG_MD5(0x00000000, 0x00000000, 0x00000000, 0x00000000), 1, 0,
2214:fltk-1.3.4-1/png/png.c ****       "2004/07/21 18:57:42", 3024, "sRGB_IEC61966-2-1_noBPC.icc")
2215:fltk-1.3.4-1/png/png.c **** 
2216:fltk-1.3.4-1/png/png.c ****    /* This is a 'mntr' (display) profile with a mediaWhitePointTag that does not
2217:fltk-1.3.4-1/png/png.c ****     * match the D50 PCS illuminant in the header (it is in fact the D65 values,
2218:fltk-1.3.4-1/png/png.c ****     * so the white point is recorded as the un-adapted value.)  The profiles
2219:fltk-1.3.4-1/png/png.c ****     * below only differ in one byte - the intent - and are basically the same as
2220:fltk-1.3.4-1/png/png.c ****     * the previous profile except for the mediaWhitePointTag error and a missing
2221:fltk-1.3.4-1/png/png.c ****     * chromaticAdaptationTag.
2222:fltk-1.3.4-1/png/png.c ****     */
2223:fltk-1.3.4-1/png/png.c ****    PNG_ICC_CHECKSUM(0xf784f3fb, 0x182ea552,
2224:fltk-1.3.4-1/png/png.c ****       PNG_MD5(0x00000000, 0x00000000, 0x00000000, 0x00000000), 0, 1/*broken*/,
2225:fltk-1.3.4-1/png/png.c ****       "1998/02/09 06:49:00", 3144, "HP-Microsoft sRGB v2 perceptual")
2226:fltk-1.3.4-1/png/png.c **** 
2227:fltk-1.3.4-1/png/png.c ****    PNG_ICC_CHECKSUM(0x0398f3fc, 0xf29e526d,
2228:fltk-1.3.4-1/png/png.c ****       PNG_MD5(0x00000000, 0x00000000, 0x00000000, 0x00000000), 1, 1/*broken*/,
2229:fltk-1.3.4-1/png/png.c ****       "1998/02/09 06:49:00", 3144, "HP-Microsoft sRGB v2 media-relative")
2230:fltk-1.3.4-1/png/png.c **** };
2231:fltk-1.3.4-1/png/png.c **** 
2232:fltk-1.3.4-1/png/png.c **** static int
2233:fltk-1.3.4-1/png/png.c **** png_compare_ICC_profile_with_sRGB(png_const_structrp png_ptr,
2234:fltk-1.3.4-1/png/png.c ****    png_const_bytep profile, uLong adler)
2235:fltk-1.3.4-1/png/png.c **** {
2236:fltk-1.3.4-1/png/png.c ****    /* The quick check is to verify just the MD5 signature and trust the
2237:fltk-1.3.4-1/png/png.c ****     * rest of the data.  Because the profile has already been verified for
2238:fltk-1.3.4-1/png/png.c ****     * correctness this is safe.  png_colorspace_set_sRGB will check the 'intent'
2239:fltk-1.3.4-1/png/png.c ****     * field too, so if the profile has been edited with an intent not defined
2240:fltk-1.3.4-1/png/png.c ****     * by sRGB (but maybe defined by a later ICC specification) the read of
2241:fltk-1.3.4-1/png/png.c ****     * the profile will fail at that point.
2242:fltk-1.3.4-1/png/png.c ****     */
2243:fltk-1.3.4-1/png/png.c **** 
2244:fltk-1.3.4-1/png/png.c ****    png_uint_32 length = 0;
2245:fltk-1.3.4-1/png/png.c ****    png_uint_32 intent = 0x10000; /* invalid */
2246:fltk-1.3.4-1/png/png.c **** #if PNG_sRGB_PROFILE_CHECKS > 1
2247:fltk-1.3.4-1/png/png.c ****    uLong crc = 0; /* the value for 0 length data */
2248:fltk-1.3.4-1/png/png.c **** #endif
2249:fltk-1.3.4-1/png/png.c ****    unsigned int i;
2250:fltk-1.3.4-1/png/png.c **** 
2251:fltk-1.3.4-1/png/png.c **** #ifdef PNG_SET_OPTION_SUPPORTED
2252:fltk-1.3.4-1/png/png.c ****    /* First see if PNG_SKIP_sRGB_CHECK_PROFILE has been set to "on" */
2253:fltk-1.3.4-1/png/png.c ****    if (((png_ptr->options >> PNG_SKIP_sRGB_CHECK_PROFILE) & 3) ==
2254:fltk-1.3.4-1/png/png.c ****                PNG_OPTION_ON)
2255:fltk-1.3.4-1/png/png.c ****       return 0;
2256:fltk-1.3.4-1/png/png.c **** #endif
2257:fltk-1.3.4-1/png/png.c **** 
2258:fltk-1.3.4-1/png/png.c ****    for (i=0; i < (sizeof png_sRGB_checks) / (sizeof png_sRGB_checks[0]); ++i)
2259:fltk-1.3.4-1/png/png.c ****    {
2260:fltk-1.3.4-1/png/png.c ****       if (png_get_uint_32(profile+84) == png_sRGB_checks[i].md5[0] &&
2261:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+88) == png_sRGB_checks[i].md5[1] &&
2262:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+92) == png_sRGB_checks[i].md5[2] &&
2263:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+96) == png_sRGB_checks[i].md5[3])
2264:fltk-1.3.4-1/png/png.c ****       {
2265:fltk-1.3.4-1/png/png.c ****          /* This may be one of the old HP profiles without an MD5, in that
2266:fltk-1.3.4-1/png/png.c ****           * case we can only use the length and Adler32 (note that these
2267:fltk-1.3.4-1/png/png.c ****           * are not used by default if there is an MD5!)
2268:fltk-1.3.4-1/png/png.c ****           */
2269:fltk-1.3.4-1/png/png.c **** #        if PNG_sRGB_PROFILE_CHECKS == 0
2270:fltk-1.3.4-1/png/png.c ****             if (png_sRGB_checks[i].have_md5 != 0)
2271:fltk-1.3.4-1/png/png.c ****                return 1+png_sRGB_checks[i].is_broken;
2272:fltk-1.3.4-1/png/png.c **** #        endif
2273:fltk-1.3.4-1/png/png.c **** 
2274:fltk-1.3.4-1/png/png.c ****          /* Profile is unsigned or more checks have been configured in. */
2275:fltk-1.3.4-1/png/png.c ****          if (length == 0)
2276:fltk-1.3.4-1/png/png.c ****          {
2277:fltk-1.3.4-1/png/png.c ****             length = png_get_uint_32(profile);
2278:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
2279:fltk-1.3.4-1/png/png.c ****          }
2280:fltk-1.3.4-1/png/png.c **** 
2281:fltk-1.3.4-1/png/png.c ****          /* Length *and* intent must match */
2282:fltk-1.3.4-1/png/png.c ****          if (length == png_sRGB_checks[i].length &&
2283:fltk-1.3.4-1/png/png.c ****             intent == png_sRGB_checks[i].intent)
2284:fltk-1.3.4-1/png/png.c ****          {
2285:fltk-1.3.4-1/png/png.c ****             /* Now calculate the adler32 if not done already. */
2286:fltk-1.3.4-1/png/png.c ****             if (adler == 0)
2287:fltk-1.3.4-1/png/png.c ****             {
2288:fltk-1.3.4-1/png/png.c ****                adler = adler32(0, NULL, 0);
2289:fltk-1.3.4-1/png/png.c ****                adler = adler32(adler, profile, length);
2290:fltk-1.3.4-1/png/png.c ****             }
2291:fltk-1.3.4-1/png/png.c **** 
2292:fltk-1.3.4-1/png/png.c ****             if (adler == png_sRGB_checks[i].adler)
2293:fltk-1.3.4-1/png/png.c ****             {
2294:fltk-1.3.4-1/png/png.c ****                /* These basic checks suggest that the data has not been
2295:fltk-1.3.4-1/png/png.c ****                 * modified, but if the check level is more than 1 perform
2296:fltk-1.3.4-1/png/png.c ****                 * our own crc32 checksum on the data.
2297:fltk-1.3.4-1/png/png.c ****                 */
2298:fltk-1.3.4-1/png/png.c **** #              if PNG_sRGB_PROFILE_CHECKS > 1
2299:fltk-1.3.4-1/png/png.c ****                   if (crc == 0)
2300:fltk-1.3.4-1/png/png.c ****                   {
2301:fltk-1.3.4-1/png/png.c ****                      crc = crc32(0, NULL, 0);
2302:fltk-1.3.4-1/png/png.c ****                      crc = crc32(crc, profile, length);
2303:fltk-1.3.4-1/png/png.c ****                   }
2304:fltk-1.3.4-1/png/png.c **** 
2305:fltk-1.3.4-1/png/png.c ****                   /* So this check must pass for the 'return' below to happen.
2306:fltk-1.3.4-1/png/png.c ****                    */
2307:fltk-1.3.4-1/png/png.c ****                   if (crc == png_sRGB_checks[i].crc)
2308:fltk-1.3.4-1/png/png.c **** #              endif
2309:fltk-1.3.4-1/png/png.c ****                {
2310:fltk-1.3.4-1/png/png.c ****                   if (png_sRGB_checks[i].is_broken != 0)
2311:fltk-1.3.4-1/png/png.c ****                   {
2312:fltk-1.3.4-1/png/png.c ****                      /* These profiles are known to have bad data that may cause
2313:fltk-1.3.4-1/png/png.c ****                       * problems if they are used, therefore attempt to
2314:fltk-1.3.4-1/png/png.c ****                       * discourage their use, skip the 'have_md5' warning below,
2315:fltk-1.3.4-1/png/png.c ****                       * which is made irrelevant by this error.
2316:fltk-1.3.4-1/png/png.c ****                       */
2317:fltk-1.3.4-1/png/png.c ****                      png_chunk_report(png_ptr, "known incorrect sRGB profile",
2318:fltk-1.3.4-1/png/png.c ****                         PNG_CHUNK_ERROR);
2319:fltk-1.3.4-1/png/png.c ****                   }
2320:fltk-1.3.4-1/png/png.c **** 
2321:fltk-1.3.4-1/png/png.c ****                   /* Warn that this being done; this isn't even an error since
2322:fltk-1.3.4-1/png/png.c ****                    * the profile is perfectly valid, but it would be nice if
2323:fltk-1.3.4-1/png/png.c ****                    * people used the up-to-date ones.
2324:fltk-1.3.4-1/png/png.c ****                    */
2325:fltk-1.3.4-1/png/png.c ****                   else if (png_sRGB_checks[i].have_md5 == 0)
2326:fltk-1.3.4-1/png/png.c ****                   {
2327:fltk-1.3.4-1/png/png.c ****                      png_chunk_report(png_ptr, "out-of-date sRGB profile with"
2328:fltk-1.3.4-1/png/png.c ****                         " no signature",
2329:fltk-1.3.4-1/png/png.c ****                         PNG_CHUNK_WARNING);
2330:fltk-1.3.4-1/png/png.c ****                   }
2331:fltk-1.3.4-1/png/png.c **** 
2332:fltk-1.3.4-1/png/png.c ****                   return 1+png_sRGB_checks[i].is_broken;
2333:fltk-1.3.4-1/png/png.c ****                }
2334:fltk-1.3.4-1/png/png.c ****             }
2335:fltk-1.3.4-1/png/png.c **** 
2336:fltk-1.3.4-1/png/png.c **** # if PNG_sRGB_PROFILE_CHECKS > 0
2337:fltk-1.3.4-1/png/png.c ****          /* The signature matched, but the profile had been changed in some
2338:fltk-1.3.4-1/png/png.c ****           * way.  This probably indicates a data error or uninformed hacking.
2339:fltk-1.3.4-1/png/png.c ****           * Fall through to "no match".
2340:fltk-1.3.4-1/png/png.c ****           */
2341:fltk-1.3.4-1/png/png.c ****          png_chunk_report(png_ptr, "Not recognizing known sRGB profile that"
2342:fltk-1.3.4-1/png/png.c ****              " has been edited", 
2343:fltk-1.3.4-1/png/png.c ****              PNG_CHUNK_WARNING);
2344:fltk-1.3.4-1/png/png.c ****          break;
2345:fltk-1.3.4-1/png/png.c **** # endif
2346:fltk-1.3.4-1/png/png.c ****          }
2347:fltk-1.3.4-1/png/png.c ****       }
2348:fltk-1.3.4-1/png/png.c ****    }
2349:fltk-1.3.4-1/png/png.c **** 
2350:fltk-1.3.4-1/png/png.c ****    return 0; /* no match */
2351:fltk-1.3.4-1/png/png.c **** }
2352:fltk-1.3.4-1/png/png.c **** #endif
2353:fltk-1.3.4-1/png/png.c **** 
2354:fltk-1.3.4-1/png/png.c **** #ifdef PNG_sRGB_SUPPORTED
2355:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
2356:fltk-1.3.4-1/png/png.c **** png_icc_set_sRGB(png_const_structrp png_ptr,
2357:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_const_bytep profile, uLong adler)
2358:fltk-1.3.4-1/png/png.c **** {
2359:fltk-1.3.4-1/png/png.c ****    /* Is this profile one of the known ICC sRGB profiles?  If it is, just set
2360:fltk-1.3.4-1/png/png.c ****     * the sRGB information.
2361:fltk-1.3.4-1/png/png.c ****     */
2362:fltk-1.3.4-1/png/png.c **** #if PNG_sRGB_PROFILE_CHECKS >= 0
2363:fltk-1.3.4-1/png/png.c ****    if (png_compare_ICC_profile_with_sRGB(png_ptr, profile, adler) != 0)
2364:fltk-1.3.4-1/png/png.c **** #endif
2365:fltk-1.3.4-1/png/png.c ****       (void)png_colorspace_set_sRGB(png_ptr, colorspace,
2366:fltk-1.3.4-1/png/png.c ****          (int)/*already checked*/png_get_uint_32(profile+64));
2367:fltk-1.3.4-1/png/png.c **** }
2368:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
2369:fltk-1.3.4-1/png/png.c **** 
2370:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
2371:fltk-1.3.4-1/png/png.c **** png_colorspace_set_ICC(png_const_structrp png_ptr, png_colorspacerp colorspace,
2372:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length, png_const_bytep profile,
2373:fltk-1.3.4-1/png/png.c ****    int color_type)
2374:fltk-1.3.4-1/png/png.c **** {
2375:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
2376:fltk-1.3.4-1/png/png.c ****       return 0;
2377:fltk-1.3.4-1/png/png.c **** 
2378:fltk-1.3.4-1/png/png.c ****    if (png_icc_check_length(png_ptr, colorspace, name, profile_length) != 0 &&
2379:fltk-1.3.4-1/png/png.c ****        png_icc_check_header(png_ptr, colorspace, name, profile_length, profile,
2380:fltk-1.3.4-1/png/png.c ****           color_type) != 0 &&
2381:fltk-1.3.4-1/png/png.c ****        png_icc_check_tag_table(png_ptr, colorspace, name, profile_length,
2382:fltk-1.3.4-1/png/png.c ****           profile) != 0)
2383:fltk-1.3.4-1/png/png.c ****    {
2384:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_sRGB_SUPPORTED
2385:fltk-1.3.4-1/png/png.c ****          /* If no sRGB support, don't try storing sRGB information */
2386:fltk-1.3.4-1/png/png.c ****          png_icc_set_sRGB(png_ptr, colorspace, profile, 0);
2387:fltk-1.3.4-1/png/png.c **** #     endif
2388:fltk-1.3.4-1/png/png.c ****       return 1;
2389:fltk-1.3.4-1/png/png.c ****    }
2390:fltk-1.3.4-1/png/png.c **** 
2391:fltk-1.3.4-1/png/png.c ****    /* Failure case */
2392:fltk-1.3.4-1/png/png.c ****    return 0;
2393:fltk-1.3.4-1/png/png.c **** }
2394:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
2395:fltk-1.3.4-1/png/png.c **** 
2396:fltk-1.3.4-1/png/png.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
2397:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
2398:fltk-1.3.4-1/png/png.c **** png_colorspace_set_rgb_coefficients(png_structrp png_ptr)
2399:fltk-1.3.4-1/png/png.c **** {
2400:fltk-1.3.4-1/png/png.c ****    /* Set the rgb_to_gray coefficients from the colorspace. */
2401:fltk-1.3.4-1/png/png.c ****    if (png_ptr->rgb_to_gray_coefficients_set == 0 &&
2402:fltk-1.3.4-1/png/png.c ****       (png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
2403:fltk-1.3.4-1/png/png.c ****    {
2404:fltk-1.3.4-1/png/png.c ****       /* png_set_background has not been called, get the coefficients from the Y
2405:fltk-1.3.4-1/png/png.c ****        * values of the colorspace colorants.
2406:fltk-1.3.4-1/png/png.c ****        */
2407:fltk-1.3.4-1/png/png.c ****       png_fixed_point r = png_ptr->colorspace.end_points_XYZ.red_Y;
2408:fltk-1.3.4-1/png/png.c ****       png_fixed_point g = png_ptr->colorspace.end_points_XYZ.green_Y;
2409:fltk-1.3.4-1/png/png.c ****       png_fixed_point b = png_ptr->colorspace.end_points_XYZ.blue_Y;
2410:fltk-1.3.4-1/png/png.c ****       png_fixed_point total = r+g+b;
2411:fltk-1.3.4-1/png/png.c **** 
2412:fltk-1.3.4-1/png/png.c ****       if (total > 0 &&
2413:fltk-1.3.4-1/png/png.c ****          r >= 0 && png_muldiv(&r, r, 32768, total) && r >= 0 && r <= 32768 &&
2414:fltk-1.3.4-1/png/png.c ****          g >= 0 && png_muldiv(&g, g, 32768, total) && g >= 0 && g <= 32768 &&
2415:fltk-1.3.4-1/png/png.c ****          b >= 0 && png_muldiv(&b, b, 32768, total) && b >= 0 && b <= 32768 &&
2416:fltk-1.3.4-1/png/png.c ****          r+g+b <= 32769)
2417:fltk-1.3.4-1/png/png.c ****       {
2418:fltk-1.3.4-1/png/png.c ****          /* We allow 0 coefficients here.  r+g+b may be 32769 if two or
2419:fltk-1.3.4-1/png/png.c ****           * all of the coefficients were rounded up.  Handle this by
2420:fltk-1.3.4-1/png/png.c ****           * reducing the *largest* coefficient by 1; this matches the
2421:fltk-1.3.4-1/png/png.c ****           * approach used for the default coefficients in pngrtran.c
2422:fltk-1.3.4-1/png/png.c ****           */
2423:fltk-1.3.4-1/png/png.c ****          int add = 0;
2424:fltk-1.3.4-1/png/png.c **** 
2425:fltk-1.3.4-1/png/png.c ****          if (r+g+b > 32768)
2426:fltk-1.3.4-1/png/png.c ****             add = -1;
2427:fltk-1.3.4-1/png/png.c ****          else if (r+g+b < 32768)
2428:fltk-1.3.4-1/png/png.c ****             add = 1;
2429:fltk-1.3.4-1/png/png.c **** 
2430:fltk-1.3.4-1/png/png.c ****          if (add != 0)
2431:fltk-1.3.4-1/png/png.c ****          {
2432:fltk-1.3.4-1/png/png.c ****             if (g >= r && g >= b)
2433:fltk-1.3.4-1/png/png.c ****                g += add;
2434:fltk-1.3.4-1/png/png.c ****             else if (r >= g && r >= b)
2435:fltk-1.3.4-1/png/png.c ****                r += add;
2436:fltk-1.3.4-1/png/png.c ****             else
2437:fltk-1.3.4-1/png/png.c ****                b += add;
2438:fltk-1.3.4-1/png/png.c ****          }
2439:fltk-1.3.4-1/png/png.c **** 
2440:fltk-1.3.4-1/png/png.c ****          /* Check for an internal error. */
2441:fltk-1.3.4-1/png/png.c ****          if (r+g+b != 32768)
2442:fltk-1.3.4-1/png/png.c ****             png_error(png_ptr,
2443:fltk-1.3.4-1/png/png.c ****                "internal error handling cHRM coefficients");
2444:fltk-1.3.4-1/png/png.c **** 
2445:fltk-1.3.4-1/png/png.c ****          else
2446:fltk-1.3.4-1/png/png.c ****          {
2447:fltk-1.3.4-1/png/png.c ****             png_ptr->rgb_to_gray_red_coeff   = (png_uint_16)r;
2448:fltk-1.3.4-1/png/png.c ****             png_ptr->rgb_to_gray_green_coeff = (png_uint_16)g;
2449:fltk-1.3.4-1/png/png.c ****          }
2450:fltk-1.3.4-1/png/png.c ****       }
2451:fltk-1.3.4-1/png/png.c **** 
2452:fltk-1.3.4-1/png/png.c ****       /* This is a png_error at present even though it could be ignored -
2453:fltk-1.3.4-1/png/png.c ****        * it should never happen, but it is important that if it does, the
2454:fltk-1.3.4-1/png/png.c ****        * bug is fixed.
2455:fltk-1.3.4-1/png/png.c ****        */
2456:fltk-1.3.4-1/png/png.c ****       else
2457:fltk-1.3.4-1/png/png.c ****          png_error(png_ptr, "internal error handling cHRM->XYZ");
2458:fltk-1.3.4-1/png/png.c ****    }
2459:fltk-1.3.4-1/png/png.c **** }
2460:fltk-1.3.4-1/png/png.c **** #endif
2461:fltk-1.3.4-1/png/png.c **** 
2462:fltk-1.3.4-1/png/png.c **** #endif /* COLORSPACE */
2463:fltk-1.3.4-1/png/png.c **** 
2464:fltk-1.3.4-1/png/png.c **** #ifdef __GNUC__
2465:fltk-1.3.4-1/png/png.c **** /* This exists solely to work round a warning from GNU C. */
2466:fltk-1.3.4-1/png/png.c **** static int /* PRIVATE */
2467:fltk-1.3.4-1/png/png.c **** png_gt(size_t a, size_t b)
2468:fltk-1.3.4-1/png/png.c **** {
2469:fltk-1.3.4-1/png/png.c ****     return a > b;
2470:fltk-1.3.4-1/png/png.c **** }
2471:fltk-1.3.4-1/png/png.c **** #else
2472:fltk-1.3.4-1/png/png.c **** #   define png_gt(a,b) ((a) > (b))
2473:fltk-1.3.4-1/png/png.c **** #endif
2474:fltk-1.3.4-1/png/png.c **** 
2475:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
2476:fltk-1.3.4-1/png/png.c **** png_check_IHDR(png_const_structrp png_ptr,
2477:fltk-1.3.4-1/png/png.c ****    png_uint_32 width, png_uint_32 height, int bit_depth,
2478:fltk-1.3.4-1/png/png.c ****    int color_type, int interlace_type, int compression_type,
2479:fltk-1.3.4-1/png/png.c ****    int filter_type)
2480:fltk-1.3.4-1/png/png.c **** {
2481:fltk-1.3.4-1/png/png.c ****    int error = 0;
2482:fltk-1.3.4-1/png/png.c **** 
2483:fltk-1.3.4-1/png/png.c ****    /* Check for width and height valid values */
2484:fltk-1.3.4-1/png/png.c ****    if (width == 0)
2485:fltk-1.3.4-1/png/png.c ****    {
2486:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Image width is zero in IHDR");
2487:fltk-1.3.4-1/png/png.c ****       error = 1;
2488:fltk-1.3.4-1/png/png.c ****    }
2489:fltk-1.3.4-1/png/png.c ****    else if (width > PNG_UINT_31_MAX)
2490:fltk-1.3.4-1/png/png.c ****    {
2491:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Invalid image width in IHDR");
2492:fltk-1.3.4-1/png/png.c ****       error = 1;
2493:fltk-1.3.4-1/png/png.c ****    }
2494:fltk-1.3.4-1/png/png.c **** 
2495:fltk-1.3.4-1/png/png.c ****    else if (png_gt(width,
2496:fltk-1.3.4-1/png/png.c ****                    (PNG_SIZE_MAX >> 3) /* 8-byte RGBA pixels */
2497:fltk-1.3.4-1/png/png.c ****                    - 48                /* big_row_buf hack */
2498:fltk-1.3.4-1/png/png.c ****                    - 1                 /* filter byte */
2499:fltk-1.3.4-1/png/png.c ****                    - 7*8               /* rounding width to multiple of 8 pix */
2500:fltk-1.3.4-1/png/png.c ****                    - 8))               /* extra max_pixel_depth pad */
2501:fltk-1.3.4-1/png/png.c ****    {
2502:fltk-1.3.4-1/png/png.c ****       /* The size of the row must be within the limits of this architecture.
2503:fltk-1.3.4-1/png/png.c ****        * Because the read code can perform arbitrary transformations the
2504:fltk-1.3.4-1/png/png.c ****        * maximum size is checked here.  Because the code in png_read_start_row
2505:fltk-1.3.4-1/png/png.c ****        * adds extra space "for safety's sake" in several places a conservative
2506:fltk-1.3.4-1/png/png.c ****        * limit is used here.
2507:fltk-1.3.4-1/png/png.c ****        *
2508:fltk-1.3.4-1/png/png.c ****        * NOTE: it would be far better to check the size that is actually used,
2509:fltk-1.3.4-1/png/png.c ****        * but the effect in the real world is minor and the changes are more
2510:fltk-1.3.4-1/png/png.c ****        * extensive, therefore much more dangerous and much more difficult to
2511:fltk-1.3.4-1/png/png.c ****        * write in a way that avoids compiler warnings.
2512:fltk-1.3.4-1/png/png.c ****        */
2513:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Image width is too large for this architecture");
2514:fltk-1.3.4-1/png/png.c ****       error = 1;
2515:fltk-1.3.4-1/png/png.c ****    }
2516:fltk-1.3.4-1/png/png.c ****    else
2517:fltk-1.3.4-1/png/png.c ****    {
2518:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_SET_USER_LIMITS_SUPPORTED
2519:fltk-1.3.4-1/png/png.c ****       if (width > png_ptr->user_width_max)
2520:fltk-1.3.4-1/png/png.c **** #     else
2521:fltk-1.3.4-1/png/png.c ****       if (width > PNG_USER_WIDTH_MAX)
2522:fltk-1.3.4-1/png/png.c **** #     endif
2523:fltk-1.3.4-1/png/png.c ****       {
2524:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Image width exceeds user limit in IHDR");
2525:fltk-1.3.4-1/png/png.c ****          error = 1;
2526:fltk-1.3.4-1/png/png.c ****       }
2527:fltk-1.3.4-1/png/png.c ****    }
2528:fltk-1.3.4-1/png/png.c **** 
2529:fltk-1.3.4-1/png/png.c ****    if (height == 0)
2530:fltk-1.3.4-1/png/png.c ****    {
2531:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Image height is zero in IHDR");
2532:fltk-1.3.4-1/png/png.c ****       error = 1;
2533:fltk-1.3.4-1/png/png.c ****    }
2534:fltk-1.3.4-1/png/png.c ****    else if (height > PNG_UINT_31_MAX)
2535:fltk-1.3.4-1/png/png.c ****    {
2536:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Invalid image height in IHDR");
2537:fltk-1.3.4-1/png/png.c ****       error = 1;
2538:fltk-1.3.4-1/png/png.c ****    }
2539:fltk-1.3.4-1/png/png.c ****    else
2540:fltk-1.3.4-1/png/png.c ****    {
2541:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_SET_USER_LIMITS_SUPPORTED
2542:fltk-1.3.4-1/png/png.c ****       if (height > png_ptr->user_height_max)
2543:fltk-1.3.4-1/png/png.c **** #     else
2544:fltk-1.3.4-1/png/png.c ****       if (height > PNG_USER_HEIGHT_MAX)
2545:fltk-1.3.4-1/png/png.c **** #     endif
2546:fltk-1.3.4-1/png/png.c ****       {
2547:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Image height exceeds user limit in IHDR");
2548:fltk-1.3.4-1/png/png.c ****          error = 1;
2549:fltk-1.3.4-1/png/png.c ****       }
2550:fltk-1.3.4-1/png/png.c ****    }
2551:fltk-1.3.4-1/png/png.c **** 
2552:fltk-1.3.4-1/png/png.c ****    /* Check other values */
2553:fltk-1.3.4-1/png/png.c ****    if (bit_depth != 1 && bit_depth != 2 && bit_depth != 4 &&
2554:fltk-1.3.4-1/png/png.c ****        bit_depth != 8 && bit_depth != 16)
2555:fltk-1.3.4-1/png/png.c ****    {
2556:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Invalid bit depth in IHDR");
2557:fltk-1.3.4-1/png/png.c ****       error = 1;
2558:fltk-1.3.4-1/png/png.c ****    }
2559:fltk-1.3.4-1/png/png.c **** 
2560:fltk-1.3.4-1/png/png.c ****    if (color_type < 0 || color_type == 1 ||
2561:fltk-1.3.4-1/png/png.c ****        color_type == 5 || color_type > 6)
2562:fltk-1.3.4-1/png/png.c ****    {
2563:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Invalid color type in IHDR");
2564:fltk-1.3.4-1/png/png.c ****       error = 1;
2565:fltk-1.3.4-1/png/png.c ****    }
2566:fltk-1.3.4-1/png/png.c **** 
2567:fltk-1.3.4-1/png/png.c ****    if (((color_type == PNG_COLOR_TYPE_PALETTE) && bit_depth > 8) ||
2568:fltk-1.3.4-1/png/png.c ****        ((color_type == PNG_COLOR_TYPE_RGB ||
2569:fltk-1.3.4-1/png/png.c ****          color_type == PNG_COLOR_TYPE_GRAY_ALPHA ||
2570:fltk-1.3.4-1/png/png.c ****          color_type == PNG_COLOR_TYPE_RGB_ALPHA) && bit_depth < 8))
2571:fltk-1.3.4-1/png/png.c ****    {
2572:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Invalid color type/bit depth combination in IHDR");
2573:fltk-1.3.4-1/png/png.c ****       error = 1;
2574:fltk-1.3.4-1/png/png.c ****    }
2575:fltk-1.3.4-1/png/png.c **** 
2576:fltk-1.3.4-1/png/png.c ****    if (interlace_type >= PNG_INTERLACE_LAST)
2577:fltk-1.3.4-1/png/png.c ****    {
2578:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Unknown interlace method in IHDR");
2579:fltk-1.3.4-1/png/png.c ****       error = 1;
2580:fltk-1.3.4-1/png/png.c ****    }
2581:fltk-1.3.4-1/png/png.c **** 
2582:fltk-1.3.4-1/png/png.c ****    if (compression_type != PNG_COMPRESSION_TYPE_BASE)
2583:fltk-1.3.4-1/png/png.c ****    {
2584:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Unknown compression method in IHDR");
2585:fltk-1.3.4-1/png/png.c ****       error = 1;
2586:fltk-1.3.4-1/png/png.c ****    }
2587:fltk-1.3.4-1/png/png.c **** 
2588:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_MNG_FEATURES_SUPPORTED
2589:fltk-1.3.4-1/png/png.c ****    /* Accept filter_method 64 (intrapixel differencing) only if
2590:fltk-1.3.4-1/png/png.c ****     * 1. Libpng was compiled with PNG_MNG_FEATURES_SUPPORTED and
2591:fltk-1.3.4-1/png/png.c ****     * 2. Libpng did not read a PNG signature (this filter_method is only
2592:fltk-1.3.4-1/png/png.c ****     *    used in PNG datastreams that are embedded in MNG datastreams) and
2593:fltk-1.3.4-1/png/png.c ****     * 3. The application called png_permit_mng_features with a mask that
2594:fltk-1.3.4-1/png/png.c ****     *    included PNG_FLAG_MNG_FILTER_64 and
2595:fltk-1.3.4-1/png/png.c ****     * 4. The filter_method is 64 and
2596:fltk-1.3.4-1/png/png.c ****     * 5. The color_type is RGB or RGBA
2597:fltk-1.3.4-1/png/png.c ****     */
2598:fltk-1.3.4-1/png/png.c ****    if ((png_ptr->mode & PNG_HAVE_PNG_SIGNATURE) != 0 &&
2599:fltk-1.3.4-1/png/png.c ****        png_ptr->mng_features_permitted != 0)
2600:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "MNG features are not allowed in a PNG datastream");
2601:fltk-1.3.4-1/png/png.c **** 
2602:fltk-1.3.4-1/png/png.c ****    if (filter_type != PNG_FILTER_TYPE_BASE)
2603:fltk-1.3.4-1/png/png.c ****    {
2604:fltk-1.3.4-1/png/png.c ****       if (!((png_ptr->mng_features_permitted & PNG_FLAG_MNG_FILTER_64) != 0 &&
2605:fltk-1.3.4-1/png/png.c ****           (filter_type == PNG_INTRAPIXEL_DIFFERENCING) &&
2606:fltk-1.3.4-1/png/png.c ****           ((png_ptr->mode & PNG_HAVE_PNG_SIGNATURE) == 0) &&
2607:fltk-1.3.4-1/png/png.c ****           (color_type == PNG_COLOR_TYPE_RGB ||
2608:fltk-1.3.4-1/png/png.c ****           color_type == PNG_COLOR_TYPE_RGB_ALPHA)))
2609:fltk-1.3.4-1/png/png.c ****       {
2610:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Unknown filter method in IHDR");
2611:fltk-1.3.4-1/png/png.c ****          error = 1;
2612:fltk-1.3.4-1/png/png.c ****       }
2613:fltk-1.3.4-1/png/png.c **** 
2614:fltk-1.3.4-1/png/png.c ****       if ((png_ptr->mode & PNG_HAVE_PNG_SIGNATURE) != 0)
2615:fltk-1.3.4-1/png/png.c ****       {
2616:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Invalid filter method in IHDR");
2617:fltk-1.3.4-1/png/png.c ****          error = 1;
2618:fltk-1.3.4-1/png/png.c ****       }
2619:fltk-1.3.4-1/png/png.c ****    }
2620:fltk-1.3.4-1/png/png.c **** 
2621:fltk-1.3.4-1/png/png.c **** #  else
2622:fltk-1.3.4-1/png/png.c ****    if (filter_type != PNG_FILTER_TYPE_BASE)
2623:fltk-1.3.4-1/png/png.c ****    {
2624:fltk-1.3.4-1/png/png.c ****       png_warning(png_ptr, "Unknown filter method in IHDR");
2625:fltk-1.3.4-1/png/png.c ****       error = 1;
2626:fltk-1.3.4-1/png/png.c ****    }
2627:fltk-1.3.4-1/png/png.c **** #  endif
2628:fltk-1.3.4-1/png/png.c **** 
2629:fltk-1.3.4-1/png/png.c ****    if (error == 1)
2630:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Invalid IHDR data");
2631:fltk-1.3.4-1/png/png.c **** }
2632:fltk-1.3.4-1/png/png.c **** 
2633:fltk-1.3.4-1/png/png.c **** #if defined(PNG_sCAL_SUPPORTED) || defined(PNG_pCAL_SUPPORTED)
2634:fltk-1.3.4-1/png/png.c **** /* ASCII to fp functions */
2635:fltk-1.3.4-1/png/png.c **** /* Check an ASCII formated floating point value, see the more detailed
2636:fltk-1.3.4-1/png/png.c ****  * comments in pngpriv.h
2637:fltk-1.3.4-1/png/png.c ****  */
2638:fltk-1.3.4-1/png/png.c **** /* The following is used internally to preserve the sticky flags */
2639:fltk-1.3.4-1/png/png.c **** #define png_fp_add(state, flags) ((state) |= (flags))
2640:fltk-1.3.4-1/png/png.c **** #define png_fp_set(state, value) ((state) = (value) | ((state) & PNG_FP_STICKY))
2641:fltk-1.3.4-1/png/png.c **** 
2642:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
2643:fltk-1.3.4-1/png/png.c **** png_check_fp_number(png_const_charp string, png_size_t size, int *statep,
2644:fltk-1.3.4-1/png/png.c ****    png_size_tp whereami)
2645:fltk-1.3.4-1/png/png.c **** {
2646:fltk-1.3.4-1/png/png.c ****    int state = *statep;
2647:fltk-1.3.4-1/png/png.c ****    png_size_t i = *whereami;
2648:fltk-1.3.4-1/png/png.c **** 
2649:fltk-1.3.4-1/png/png.c ****    while (i < size)
2650:fltk-1.3.4-1/png/png.c ****    {
2651:fltk-1.3.4-1/png/png.c ****       int type;
2652:fltk-1.3.4-1/png/png.c ****       /* First find the type of the next character */
2653:fltk-1.3.4-1/png/png.c ****       switch (string[i])
2654:fltk-1.3.4-1/png/png.c ****       {
2655:fltk-1.3.4-1/png/png.c ****       case 43:  type = PNG_FP_SAW_SIGN;                   break;
2656:fltk-1.3.4-1/png/png.c ****       case 45:  type = PNG_FP_SAW_SIGN + PNG_FP_NEGATIVE; break;
2657:fltk-1.3.4-1/png/png.c ****       case 46:  type = PNG_FP_SAW_DOT;                    break;
2658:fltk-1.3.4-1/png/png.c ****       case 48:  type = PNG_FP_SAW_DIGIT;                  break;
2659:fltk-1.3.4-1/png/png.c ****       case 49: case 50: case 51: case 52:
2660:fltk-1.3.4-1/png/png.c ****       case 53: case 54: case 55: case 56:
2661:fltk-1.3.4-1/png/png.c ****       case 57:  type = PNG_FP_SAW_DIGIT + PNG_FP_NONZERO; break;
2662:fltk-1.3.4-1/png/png.c ****       case 69:
2663:fltk-1.3.4-1/png/png.c ****       case 101: type = PNG_FP_SAW_E;                      break;
2664:fltk-1.3.4-1/png/png.c ****       default:  goto PNG_FP_End;
2665:fltk-1.3.4-1/png/png.c ****       }
2666:fltk-1.3.4-1/png/png.c **** 
2667:fltk-1.3.4-1/png/png.c ****       /* Now deal with this type according to the current
2668:fltk-1.3.4-1/png/png.c ****        * state, the type is arranged to not overlap the
2669:fltk-1.3.4-1/png/png.c ****        * bits of the PNG_FP_STATE.
2670:fltk-1.3.4-1/png/png.c ****        */
2671:fltk-1.3.4-1/png/png.c ****       switch ((state & PNG_FP_STATE) + (type & PNG_FP_SAW_ANY))
2672:fltk-1.3.4-1/png/png.c ****       {
2673:fltk-1.3.4-1/png/png.c ****       case PNG_FP_INTEGER + PNG_FP_SAW_SIGN:
2674:fltk-1.3.4-1/png/png.c ****          if ((state & PNG_FP_SAW_ANY) != 0)
2675:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End; /* not a part of the number */
2676:fltk-1.3.4-1/png/png.c **** 
2677:fltk-1.3.4-1/png/png.c ****          png_fp_add(state, type);
2678:fltk-1.3.4-1/png/png.c ****          break;
2679:fltk-1.3.4-1/png/png.c **** 
2680:fltk-1.3.4-1/png/png.c ****       case PNG_FP_INTEGER + PNG_FP_SAW_DOT:
2681:fltk-1.3.4-1/png/png.c ****          /* Ok as trailer, ok as lead of fraction. */
2682:fltk-1.3.4-1/png/png.c ****          if ((state & PNG_FP_SAW_DOT) != 0) /* two dots */
2683:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End;
2684:fltk-1.3.4-1/png/png.c **** 
2685:fltk-1.3.4-1/png/png.c ****          else if ((state & PNG_FP_SAW_DIGIT) != 0) /* trailing dot? */
2686:fltk-1.3.4-1/png/png.c ****             png_fp_add(state, type);
2687:fltk-1.3.4-1/png/png.c **** 
2688:fltk-1.3.4-1/png/png.c ****          else
2689:fltk-1.3.4-1/png/png.c ****             png_fp_set(state, PNG_FP_FRACTION | type);
2690:fltk-1.3.4-1/png/png.c **** 
2691:fltk-1.3.4-1/png/png.c ****          break;
2692:fltk-1.3.4-1/png/png.c **** 
2693:fltk-1.3.4-1/png/png.c ****       case PNG_FP_INTEGER + PNG_FP_SAW_DIGIT:
2694:fltk-1.3.4-1/png/png.c ****          if ((state & PNG_FP_SAW_DOT) != 0) /* delayed fraction */
2695:fltk-1.3.4-1/png/png.c ****             png_fp_set(state, PNG_FP_FRACTION | PNG_FP_SAW_DOT);
2696:fltk-1.3.4-1/png/png.c **** 
2697:fltk-1.3.4-1/png/png.c ****          png_fp_add(state, type | PNG_FP_WAS_VALID);
2698:fltk-1.3.4-1/png/png.c **** 
2699:fltk-1.3.4-1/png/png.c ****          break;
2700:fltk-1.3.4-1/png/png.c **** 
2701:fltk-1.3.4-1/png/png.c ****       case PNG_FP_INTEGER + PNG_FP_SAW_E:
2702:fltk-1.3.4-1/png/png.c ****          if ((state & PNG_FP_SAW_DIGIT) == 0)
2703:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End;
2704:fltk-1.3.4-1/png/png.c **** 
2705:fltk-1.3.4-1/png/png.c ****          png_fp_set(state, PNG_FP_EXPONENT);
2706:fltk-1.3.4-1/png/png.c **** 
2707:fltk-1.3.4-1/png/png.c ****          break;
2708:fltk-1.3.4-1/png/png.c **** 
2709:fltk-1.3.4-1/png/png.c ****    /* case PNG_FP_FRACTION + PNG_FP_SAW_SIGN:
2710:fltk-1.3.4-1/png/png.c ****          goto PNG_FP_End; ** no sign in fraction */
2711:fltk-1.3.4-1/png/png.c **** 
2712:fltk-1.3.4-1/png/png.c ****    /* case PNG_FP_FRACTION + PNG_FP_SAW_DOT:
2713:fltk-1.3.4-1/png/png.c ****          goto PNG_FP_End; ** Because SAW_DOT is always set */
2714:fltk-1.3.4-1/png/png.c **** 
2715:fltk-1.3.4-1/png/png.c ****       case PNG_FP_FRACTION + PNG_FP_SAW_DIGIT:
2716:fltk-1.3.4-1/png/png.c ****          png_fp_add(state, type | PNG_FP_WAS_VALID);
2717:fltk-1.3.4-1/png/png.c ****          break;
2718:fltk-1.3.4-1/png/png.c **** 
2719:fltk-1.3.4-1/png/png.c ****       case PNG_FP_FRACTION + PNG_FP_SAW_E:
2720:fltk-1.3.4-1/png/png.c ****          /* This is correct because the trailing '.' on an
2721:fltk-1.3.4-1/png/png.c ****           * integer is handled above - so we can only get here
2722:fltk-1.3.4-1/png/png.c ****           * with the sequence ".E" (with no preceding digits).
2723:fltk-1.3.4-1/png/png.c ****           */
2724:fltk-1.3.4-1/png/png.c ****          if ((state & PNG_FP_SAW_DIGIT) == 0)
2725:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End;
2726:fltk-1.3.4-1/png/png.c **** 
2727:fltk-1.3.4-1/png/png.c ****          png_fp_set(state, PNG_FP_EXPONENT);
2728:fltk-1.3.4-1/png/png.c **** 
2729:fltk-1.3.4-1/png/png.c ****          break;
2730:fltk-1.3.4-1/png/png.c **** 
2731:fltk-1.3.4-1/png/png.c ****       case PNG_FP_EXPONENT + PNG_FP_SAW_SIGN:
2732:fltk-1.3.4-1/png/png.c ****          if ((state & PNG_FP_SAW_ANY) != 0)
2733:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End; /* not a part of the number */
2734:fltk-1.3.4-1/png/png.c **** 
2735:fltk-1.3.4-1/png/png.c ****          png_fp_add(state, PNG_FP_SAW_SIGN);
2736:fltk-1.3.4-1/png/png.c **** 
2737:fltk-1.3.4-1/png/png.c ****          break;
2738:fltk-1.3.4-1/png/png.c **** 
2739:fltk-1.3.4-1/png/png.c ****    /* case PNG_FP_EXPONENT + PNG_FP_SAW_DOT:
2740:fltk-1.3.4-1/png/png.c ****          goto PNG_FP_End; */
2741:fltk-1.3.4-1/png/png.c **** 
2742:fltk-1.3.4-1/png/png.c ****       case PNG_FP_EXPONENT + PNG_FP_SAW_DIGIT:
2743:fltk-1.3.4-1/png/png.c ****          png_fp_add(state, PNG_FP_SAW_DIGIT | PNG_FP_WAS_VALID);
2744:fltk-1.3.4-1/png/png.c **** 
2745:fltk-1.3.4-1/png/png.c ****          break;
2746:fltk-1.3.4-1/png/png.c **** 
2747:fltk-1.3.4-1/png/png.c ****    /* case PNG_FP_EXPONEXT + PNG_FP_SAW_E:
2748:fltk-1.3.4-1/png/png.c ****          goto PNG_FP_End; */
2749:fltk-1.3.4-1/png/png.c **** 
2750:fltk-1.3.4-1/png/png.c ****       default: goto PNG_FP_End; /* I.e. break 2 */
2751:fltk-1.3.4-1/png/png.c ****       }
2752:fltk-1.3.4-1/png/png.c **** 
2753:fltk-1.3.4-1/png/png.c ****       /* The character seems ok, continue. */
2754:fltk-1.3.4-1/png/png.c ****       ++i;
2755:fltk-1.3.4-1/png/png.c ****    }
2756:fltk-1.3.4-1/png/png.c **** 
2757:fltk-1.3.4-1/png/png.c **** PNG_FP_End:
2758:fltk-1.3.4-1/png/png.c ****    /* Here at the end, update the state and return the correct
2759:fltk-1.3.4-1/png/png.c ****     * return code.
2760:fltk-1.3.4-1/png/png.c ****     */
2761:fltk-1.3.4-1/png/png.c ****    *statep = state;
2762:fltk-1.3.4-1/png/png.c ****    *whereami = i;
2763:fltk-1.3.4-1/png/png.c **** 
2764:fltk-1.3.4-1/png/png.c ****    return (state & PNG_FP_SAW_DIGIT) != 0;
2765:fltk-1.3.4-1/png/png.c **** }
2766:fltk-1.3.4-1/png/png.c **** 
2767:fltk-1.3.4-1/png/png.c **** 
2768:fltk-1.3.4-1/png/png.c **** /* The same but for a complete string. */
2769:fltk-1.3.4-1/png/png.c **** int
2770:fltk-1.3.4-1/png/png.c **** png_check_fp_string(png_const_charp string, png_size_t size)
2771:fltk-1.3.4-1/png/png.c **** {
2772:fltk-1.3.4-1/png/png.c ****    int        state=0;
2773:fltk-1.3.4-1/png/png.c ****    png_size_t char_index=0;
2774:fltk-1.3.4-1/png/png.c **** 
2775:fltk-1.3.4-1/png/png.c ****    if (png_check_fp_number(string, size, &state, &char_index) != 0 &&
2776:fltk-1.3.4-1/png/png.c ****       (char_index == size || string[char_index] == 0))
2777:fltk-1.3.4-1/png/png.c ****       return state /* must be non-zero - see above */;
2778:fltk-1.3.4-1/png/png.c **** 
2779:fltk-1.3.4-1/png/png.c ****    return 0; /* i.e. fail */
2780:fltk-1.3.4-1/png/png.c **** }
2781:fltk-1.3.4-1/png/png.c **** #endif /* pCAL || sCAL */
2782:fltk-1.3.4-1/png/png.c **** 
2783:fltk-1.3.4-1/png/png.c **** #ifdef PNG_sCAL_SUPPORTED
2784:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
2785:fltk-1.3.4-1/png/png.c **** /* Utility used below - a simple accurate power of ten from an integral
2786:fltk-1.3.4-1/png/png.c ****  * exponent.
2787:fltk-1.3.4-1/png/png.c ****  */
2788:fltk-1.3.4-1/png/png.c **** static double
2789:fltk-1.3.4-1/png/png.c **** png_pow10(int power)
2790:fltk-1.3.4-1/png/png.c **** {
 129              		.loc 1 2790 1 is_stmt 1 view -0
 130              		.cfi_startproc
2791:fltk-1.3.4-1/png/png.c ****    int recip = 0;
 131              		.loc 1 2791 4 view .LVU31
2792:fltk-1.3.4-1/png/png.c ****    double d = 1;
 132              		.loc 1 2792 4 view .LVU32
2793:fltk-1.3.4-1/png/png.c **** 
2794:fltk-1.3.4-1/png/png.c ****    /* Handle negative exponent with a reciprocal at the end because
2795:fltk-1.3.4-1/png/png.c ****     * 10 is exact whereas .1 is inexact in base 2
2796:fltk-1.3.4-1/png/png.c ****     */
2797:fltk-1.3.4-1/png/png.c ****    if (power < 0)
 133              		.loc 1 2797 4 view .LVU33
 134              		.loc 1 2797 7 is_stmt 0 view .LVU34
 135 0000 85FF     		testl	%edi, %edi
 136 0002 785C     		js	.L35
2798:fltk-1.3.4-1/png/png.c ****    {
2799:fltk-1.3.4-1/png/png.c ****       if (power < DBL_MIN_10_EXP) return 0;
2800:fltk-1.3.4-1/png/png.c ****       recip = 1, power = -power;
2801:fltk-1.3.4-1/png/png.c ****    }
2802:fltk-1.3.4-1/png/png.c **** 
2803:fltk-1.3.4-1/png/png.c ****    if (power > 0)
 137              		.loc 1 2803 4 is_stmt 1 view .LVU35
2792:fltk-1.3.4-1/png/png.c **** 
 138              		.loc 1 2792 11 is_stmt 0 view .LVU36
 139 0004 F20F100D 		movsd	.LC1(%rip), %xmm1
 139      00000000 
 140              		.loc 1 2803 7 view .LVU37
 141 000c 750A     		jne	.L36
 142              	.LVL3:
 143              	.L19:
2804:fltk-1.3.4-1/png/png.c ****    {
2805:fltk-1.3.4-1/png/png.c ****       /* Decompose power bitwise. */
2806:fltk-1.3.4-1/png/png.c ****       double mult = 10;
2807:fltk-1.3.4-1/png/png.c ****       do
2808:fltk-1.3.4-1/png/png.c ****       {
2809:fltk-1.3.4-1/png/png.c ****          if (power & 1) d *= mult;
2810:fltk-1.3.4-1/png/png.c ****          mult *= mult;
2811:fltk-1.3.4-1/png/png.c ****          power >>= 1;
2812:fltk-1.3.4-1/png/png.c ****       }
2813:fltk-1.3.4-1/png/png.c ****       while (power > 0);
2814:fltk-1.3.4-1/png/png.c **** 
2815:fltk-1.3.4-1/png/png.c ****       if (recip != 0) d = 1/d;
2816:fltk-1.3.4-1/png/png.c ****    }
2817:fltk-1.3.4-1/png/png.c ****    /* else power is 0 and d is 1 */
2818:fltk-1.3.4-1/png/png.c **** 
2819:fltk-1.3.4-1/png/png.c ****    return d;
2820:fltk-1.3.4-1/png/png.c **** }
 144              		.loc 1 2820 1 view .LVU38
 145 000e 660F28C1 		movapd	%xmm1, %xmm0
 146 0012 C3       		ret
 147              	.LVL4:
 148              		.p2align 4,,10
 149 0013 0F1F4400 		.p2align 3
 149      00
 150              	.L36:
2791:fltk-1.3.4-1/png/png.c ****    double d = 1;
 151              		.loc 1 2791 8 view .LVU39
 152 0018 31C0     		xorl	%eax, %eax
 153              	.LVL5:
 154              	.L22:
2792:fltk-1.3.4-1/png/png.c **** 
 155              		.loc 1 2792 11 view .LVU40
 156 001a 488B1500 		movq	.LC1(%rip), %rdx
 156      000000
 157              	.LBB191:
2806:fltk-1.3.4-1/png/png.c ****       do
 158              		.loc 1 2806 14 view .LVU41
 159 0021 F20F1005 		movsd	.LC0(%rip), %xmm0
 159      00000000 
 160              	.LBE191:
2792:fltk-1.3.4-1/png/png.c **** 
 161              		.loc 1 2792 11 view .LVU42
 162 0029 66480F6E 		movq	%rdx, %xmm1
 162      CA
 163              	.LVL6:
 164 002e 6690     		.p2align 4,,10
 165              		.p2align 3
 166              	.L24:
 167              	.LBB192:
2807:fltk-1.3.4-1/png/png.c ****       {
 168              		.loc 1 2807 7 is_stmt 1 view .LVU43
2809:fltk-1.3.4-1/png/png.c ****          mult *= mult;
 169              		.loc 1 2809 10 view .LVU44
2809:fltk-1.3.4-1/png/png.c ****          mult *= mult;
 170              		.loc 1 2809 13 is_stmt 0 view .LVU45
 171 0030 40F6C701 		testb	$1, %dil
 172 0034 7404     		je	.L23
2809:fltk-1.3.4-1/png/png.c ****          mult *= mult;
 173              		.loc 1 2809 25 is_stmt 1 discriminator 1 view .LVU46
2809:fltk-1.3.4-1/png/png.c ****          mult *= mult;
 174              		.loc 1 2809 27 is_stmt 0 discriminator 1 view .LVU47
 175 0036 F20F59C8 		mulsd	%xmm0, %xmm1
 176              	.LVL7:
 177              	.L23:
2810:fltk-1.3.4-1/png/png.c ****          power >>= 1;
 178              		.loc 1 2810 10 is_stmt 1 view .LVU48
2810:fltk-1.3.4-1/png/png.c ****          power >>= 1;
 179              		.loc 1 2810 15 is_stmt 0 view .LVU49
 180 003a F20F59C0 		mulsd	%xmm0, %xmm0
 181              	.LVL8:
2811:fltk-1.3.4-1/png/png.c ****       }
 182              		.loc 1 2811 10 is_stmt 1 view .LVU50
2813:fltk-1.3.4-1/png/png.c **** 
 183              		.loc 1 2813 13 view .LVU51
2813:fltk-1.3.4-1/png/png.c **** 
 184              		.loc 1 2813 7 is_stmt 0 view .LVU52
 185 003e D1FF     		sarl	%edi
 186              	.LVL9:
2813:fltk-1.3.4-1/png/png.c **** 
 187              		.loc 1 2813 7 view .LVU53
 188 0040 75EE     		jne	.L24
2815:fltk-1.3.4-1/png/png.c ****    }
 189              		.loc 1 2815 7 is_stmt 1 view .LVU54
2815:fltk-1.3.4-1/png/png.c ****    }
 190              		.loc 1 2815 10 is_stmt 0 view .LVU55
 191 0042 85C0     		testl	%eax, %eax
 192 0044 74C8     		je	.L19
2815:fltk-1.3.4-1/png/png.c ****    }
 193              		.loc 1 2815 23 is_stmt 1 discriminator 1 view .LVU56
2815:fltk-1.3.4-1/png/png.c ****    }
 194              		.loc 1 2815 25 is_stmt 0 discriminator 1 view .LVU57
 195 0046 F20F1015 		movsd	.LC1(%rip), %xmm2
 195      00000000 
 196 004e F20F5ED1 		divsd	%xmm1, %xmm2
 197 0052 660F28CA 		movapd	%xmm2, %xmm1
 198              	.LVL10:
2815:fltk-1.3.4-1/png/png.c ****    }
 199              		.loc 1 2815 25 discriminator 1 view .LVU58
 200              	.LBE192:
 201              		.loc 1 2820 1 discriminator 1 view .LVU59
 202 0056 660F28C1 		movapd	%xmm1, %xmm0
 203              	.LVL11:
 204              		.loc 1 2820 1 discriminator 1 view .LVU60
 205 005a C3       		ret
 206              	.LVL12:
 207 005b 0F1F4400 		.p2align 4,,10
 207      00
 208              		.p2align 3
 209              	.L35:
2799:fltk-1.3.4-1/png/png.c ****       recip = 1, power = -power;
 210              		.loc 1 2799 7 is_stmt 1 view .LVU61
2799:fltk-1.3.4-1/png/png.c ****       recip = 1, power = -power;
 211              		.loc 1 2799 42 is_stmt 0 view .LVU62
 212 0060 660FEFC9 		pxor	%xmm1, %xmm1
2799:fltk-1.3.4-1/png/png.c ****       recip = 1, power = -power;
 213              		.loc 1 2799 10 view .LVU63
 214 0064 81FFCDFE 		cmpl	$-307, %edi
 214      FFFF
 215 006a 7CA2     		jl	.L19
2800:fltk-1.3.4-1/png/png.c ****    }
 216              		.loc 1 2800 7 is_stmt 1 view .LVU64
 217              	.LVL13:
2800:fltk-1.3.4-1/png/png.c ****    }
 218              		.loc 1 2800 24 is_stmt 0 view .LVU65
 219 006c F7DF     		negl	%edi
 220              	.LVL14:
2803:fltk-1.3.4-1/png/png.c ****    {
 221              		.loc 1 2803 4 is_stmt 1 view .LVU66
2800:fltk-1.3.4-1/png/png.c ****    }
 222              		.loc 1 2800 13 is_stmt 0 view .LVU67
 223 006e B8010000 		movl	$1, %eax
 223      00
 224 0073 EBA5     		jmp	.L22
 225              		.cfi_endproc
 226              	.LFE99:
 228              		.section	.text.png_zalloc,"ax",@progbits
 229              		.p2align 4
 230              		.globl	png_zalloc
 232              	png_zalloc:
 233              	.LVL15:
 234              	.LFB43:
  74:fltk-1.3.4-1/png/png.c ****    png_alloc_size_t num_bytes = size;
 235              		.loc 1 74 1 is_stmt 1 view -0
 236              		.cfi_startproc
  74:fltk-1.3.4-1/png/png.c ****    png_alloc_size_t num_bytes = size;
 237              		.loc 1 74 1 is_stmt 0 view .LVU69
 238 0000 F30F1EFA 		endbr64
  75:fltk-1.3.4-1/png/png.c **** 
 239              		.loc 1 75 4 is_stmt 1 view .LVU70
  75:fltk-1.3.4-1/png/png.c **** 
 240              		.loc 1 75 21 is_stmt 0 view .LVU71
 241 0004 89D2     		movl	%edx, %edx
 242              	.LVL16:
  77:fltk-1.3.4-1/png/png.c ****       return NULL;
 243              		.loc 1 77 4 is_stmt 1 view .LVU72
  77:fltk-1.3.4-1/png/png.c ****       return NULL;
 244              		.loc 1 77 7 is_stmt 0 view .LVU73
 245 0006 4885FF   		testq	%rdi, %rdi
 246 0009 7415     		je	.L38
  80:fltk-1.3.4-1/png/png.c ****    {
 247              		.loc 1 80 4 is_stmt 1 view .LVU74
  87:fltk-1.3.4-1/png/png.c ****    return png_malloc_warn(png_voidcast(png_structrp, png_ptr), num_bytes);
 248              		.loc 1 87 4 view .LVU75
 249              	.LVL17:
  88:fltk-1.3.4-1/png/png.c **** }
 250              		.loc 1 88 4 view .LVU76
  80:fltk-1.3.4-1/png/png.c ****    {
 251              		.loc 1 80 14 is_stmt 0 view .LVU77
 252 000b 89F6     		movl	%esi, %esi
  87:fltk-1.3.4-1/png/png.c ****    return png_malloc_warn(png_voidcast(png_structrp, png_ptr), num_bytes);
 253              		.loc 1 87 14 view .LVU78
 254 000d 480FAFF2 		imulq	%rdx, %rsi
 255              	.LVL18:
  88:fltk-1.3.4-1/png/png.c **** }
 256              		.loc 1 88 11 view .LVU79
 257 0011 E9000000 		jmp	png_malloc_warn@PLT
 257      00
 258              	.LVL19:
 259 0016 662E0F1F 		.p2align 4,,10
 259      84000000 
 259      0000
 260              		.p2align 3
 261              	.L38:
  89:fltk-1.3.4-1/png/png.c **** 
 262              		.loc 1 89 1 view .LVU80
 263 0020 31C0     		xorl	%eax, %eax
 264 0022 C3       		ret
 265              		.cfi_endproc
 266              	.LFE43:
 268              		.section	.text.png_zfree,"ax",@progbits
 269              		.p2align 4
 270              		.globl	png_zfree
 272              	png_zfree:
 273              	.LVL20:
 274              	.LFB44:
  94:fltk-1.3.4-1/png/png.c ****    png_free(png_voidcast(png_const_structrp,png_ptr), ptr);
 275              		.loc 1 94 1 is_stmt 1 view -0
 276              		.cfi_startproc
  94:fltk-1.3.4-1/png/png.c ****    png_free(png_voidcast(png_const_structrp,png_ptr), ptr);
 277              		.loc 1 94 1 is_stmt 0 view .LVU82
 278 0000 F30F1EFA 		endbr64
  95:fltk-1.3.4-1/png/png.c **** }
 279              		.loc 1 95 4 is_stmt 1 view .LVU83
 280 0004 E9000000 		jmp	png_free@PLT
 280      00
 281              	.LVL21:
  95:fltk-1.3.4-1/png/png.c **** }
 282              		.loc 1 95 4 is_stmt 0 view .LVU84
 283              		.cfi_endproc
 284              	.LFE44:
 286              		.section	.rodata.png_colorspace_set_xy_and_XYZ.str1.1,"aMS",@progbits,1
 287              	.LC3:
 288 0000 696E636F 		.string	"inconsistent chromaticities"
 288      6E736973 
 288      74656E74 
 288      20636872 
 288      6F6D6174 
 289              		.section	.text.png_colorspace_set_xy_and_XYZ,"ax",@progbits
 290              		.p2align 4
 292              	png_colorspace_set_xy_and_XYZ:
 293              	.LVL22:
 294              	.LFB79:
1634:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
 295              		.loc 1 1634 1 is_stmt 1 view -0
 296              		.cfi_startproc
1635:fltk-1.3.4-1/png/png.c ****       return 0;
 297              		.loc 1 1635 4 view .LVU86
1635:fltk-1.3.4-1/png/png.c ****       return 0;
 298              		.loc 1 1635 19 is_stmt 0 view .LVU87
 299 0000 440FB75E 		movzwl	74(%rsi), %r11d
 299      4A
1636:fltk-1.3.4-1/png/png.c **** 
 300              		.loc 1 1636 14 view .LVU88
 301 0005 31C0     		xorl	%eax, %eax
1635:fltk-1.3.4-1/png/png.c ****       return 0;
 302              		.loc 1 1635 7 view .LVU89
 303 0007 664585DB 		testw	%r11w, %r11w
 304 000b 0F88D700 		js	.L52
 304      0000
1634:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
 305              		.loc 1 1634 1 view .LVU90
 306 0011 55       		pushq	%rbp
 307              		.cfi_def_cfa_offset 16
 308              		.cfi_offset 6, -16
 309 0012 4989F2   		movq	%rsi, %r10
 310 0015 4889FD   		movq	%rdi, %rbp
 311 0018 4889D7   		movq	%rdx, %rdi
 312              	.LVL23:
1642:fltk-1.3.4-1/png/png.c ****        (colorspace->flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
 313              		.loc 1 1642 4 is_stmt 1 view .LVU91
1634:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
 314              		.loc 1 1634 1 is_stmt 0 view .LVU92
 315 001b 4883EC10 		subq	$16, %rsp
 316              		.cfi_def_cfa_offset 32
1642:fltk-1.3.4-1/png/png.c ****        (colorspace->flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
 317              		.loc 1 1642 7 view .LVU93
 318 001f 4183F801 		cmpl	$1, %r8d
 319 0023 44894424 		movl	%r8d, 4(%rsp)
 319      04
 320 0028 7E7E     		jle	.L55
 321              	.LVL24:
 322              	.L42:
1661:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = *XYZ;
 323              		.loc 1 1661 4 is_stmt 1 view .LVU94
1662:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_ENDPOINTS;
 324              		.loc 1 1662 31 is_stmt 0 view .LVU95
 325 002a 8B4120   		movl	32(%rcx), %eax
1661:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = *XYZ;
 326              		.loc 1 1661 30 view .LVU96
 327 002d F30F6F07 		movdqu	(%rdi), %xmm0
1668:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB;
 328              		.loc 1 1668 8 view .LVU97
 329 0031 BAE80300 		movl	$1000, %edx
 329      00
 330 0036 488D3500 		leaq	sRGB_xy(%rip), %rsi
 330      000000
1661:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = *XYZ;
 331              		.loc 1 1661 30 view .LVU98
 332 003d F30F6F4F 		movdqu	16(%rdi), %xmm1
 332      10
1662:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_ENDPOINTS;
 333              		.loc 1 1662 31 view .LVU99
 334 0042 660F6F11 		movdqa	(%rcx), %xmm2
 335 0046 41894244 		movl	%eax, 68(%r10)
1663:fltk-1.3.4-1/png/png.c **** 
 336              		.loc 1 1663 22 view .LVU100
 337 004a 4489D8   		movl	%r11d, %eax
1662:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_ENDPOINTS;
 338              		.loc 1 1662 31 view .LVU101
 339 004d 660F6F59 		movdqa	16(%rcx), %xmm3
 339      10
1663:fltk-1.3.4-1/png/png.c **** 
 340              		.loc 1 1663 22 view .LVU102
 341 0052 83C802   		orl	$2, %eax
1661:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = *XYZ;
 342              		.loc 1 1661 30 view .LVU103
 343 0055 410F1142 		movups	%xmm0, 4(%r10)
 343      04
1663:fltk-1.3.4-1/png/png.c **** 
 344              		.loc 1 1663 22 view .LVU104
 345 005a 66418942 		movw	%ax, 74(%r10)
 345      4A
1661:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = *XYZ;
 346              		.loc 1 1661 30 view .LVU105
 347 005f 410F114A 		movups	%xmm1, 20(%r10)
 347      14
1662:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_ENDPOINTS;
 348              		.loc 1 1662 4 is_stmt 1 view .LVU106
1663:fltk-1.3.4-1/png/png.c **** 
 349              		.loc 1 1663 4 view .LVU107
1668:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB;
 350              		.loc 1 1668 4 view .LVU108
1662:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_ENDPOINTS;
 351              		.loc 1 1662 31 is_stmt 0 view .LVU109
 352 0064 410F1152 		movups	%xmm2, 36(%r10)
 352      24
 353 0069 410F115A 		movups	%xmm3, 52(%r10)
 353      34
1668:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB;
 354              		.loc 1 1668 8 view .LVU110
 355 006e E8000000 		call	png_colorspace_endpoints_match
 355      00
 356              	.LVL25:
1668:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB;
 357              		.loc 1 1668 7 view .LVU111
 358 0073 85C0     		testl	%eax, %eax
 359 0075 7519     		jne	.L56
1672:fltk-1.3.4-1/png/png.c ****          PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB);
 360              		.loc 1 1672 7 is_stmt 1 view .LVU112
1672:fltk-1.3.4-1/png/png.c ****          PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB);
 361              		.loc 1 1672 25 is_stmt 0 view .LVU113
 362 0077 4183E3BF 		andl	$-65, %r11d
1675:fltk-1.3.4-1/png/png.c **** }
 363              		.loc 1 1675 11 view .LVU114
 364 007b B8020000 		movl	$2, %eax
 364      00
1672:fltk-1.3.4-1/png/png.c ****          PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB);
 365              		.loc 1 1672 25 view .LVU115
 366 0080 4183CB02 		orl	$2, %r11d
 367 0084 6645895A 		movw	%r11w, 74(%r10)
 367      4A
 368              	.LVL26:
 369              	.L40:
1676:fltk-1.3.4-1/png/png.c **** 
 370              		.loc 1 1676 1 view .LVU116
 371 0089 4883C410 		addq	$16, %rsp
 372              		.cfi_remember_state
 373              		.cfi_def_cfa_offset 16
 374 008d 5D       		popq	%rbp
 375              		.cfi_def_cfa_offset 8
 376              	.LVL27:
1676:fltk-1.3.4-1/png/png.c **** 
 377              		.loc 1 1676 1 view .LVU117
 378 008e C3       		ret
 379              	.LVL28:
 380 008f 90       		.p2align 4,,10
 381              		.p2align 3
 382              	.L56:
 383              		.cfi_restore_state
1669:fltk-1.3.4-1/png/png.c **** 
 384              		.loc 1 1669 7 is_stmt 1 view .LVU118
1669:fltk-1.3.4-1/png/png.c **** 
 385              		.loc 1 1669 25 is_stmt 0 view .LVU119
 386 0090 4183CB42 		orl	$66, %r11d
1675:fltk-1.3.4-1/png/png.c **** }
 387              		.loc 1 1675 11 view .LVU120
 388 0094 B8020000 		movl	$2, %eax
 388      00
1669:fltk-1.3.4-1/png/png.c **** 
 389              		.loc 1 1669 25 view .LVU121
 390 0099 6645895A 		movw	%r11w, 74(%r10)
 390      4A
1676:fltk-1.3.4-1/png/png.c **** 
 391              		.loc 1 1676 1 view .LVU122
 392 009e 4883C410 		addq	$16, %rsp
 393              		.cfi_remember_state
 394              		.cfi_def_cfa_offset 16
 395 00a2 5D       		popq	%rbp
 396              		.cfi_def_cfa_offset 8
 397              	.LVL29:
1676:fltk-1.3.4-1/png/png.c **** 
 398              		.loc 1 1676 1 view .LVU123
 399 00a3 C3       		ret
 400              	.LVL30:
 401              		.p2align 4,,10
 402 00a4 0F1F4000 		.p2align 3
 403              	.L55:
 404              		.cfi_restore_state
1642:fltk-1.3.4-1/png/png.c ****        (colorspace->flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
 405              		.loc 1 1642 22 discriminator 1 view .LVU124
 406 00a8 41F6C302 		testb	$2, %r11b
 407 00ac 0F8478FF 		je	.L42
 407      FFFF
1648:fltk-1.3.4-1/png/png.c ****           100) == 0)
 408              		.loc 1 1648 46 view .LVU125
 409 00b2 488D7604 		leaq	4(%rsi), %rsi
 410              	.LVL31:
1648:fltk-1.3.4-1/png/png.c ****           100) == 0)
 411              		.loc 1 1648 11 view .LVU126
 412 00b6 BA640000 		movl	$100, %edx
 412      00
 413              	.LVL32:
1648:fltk-1.3.4-1/png/png.c ****           100) == 0)
 414              		.loc 1 1648 11 view .LVU127
 415 00bb 48894C24 		movq	%rcx, 8(%rsp)
 415      08
1648:fltk-1.3.4-1/png/png.c ****           100) == 0)
 416              		.loc 1 1648 7 is_stmt 1 view .LVU128
1648:fltk-1.3.4-1/png/png.c ****           100) == 0)
 417              		.loc 1 1648 11 is_stmt 0 view .LVU129
 418 00c0 E8000000 		call	png_colorspace_endpoints_match
 418      00
 419              	.LVL33:
1648:fltk-1.3.4-1/png/png.c ****           100) == 0)
 420              		.loc 1 1648 10 view .LVU130
 421 00c5 488B4C24 		movq	8(%rsp), %rcx
 421      08
 422 00ca 448B4424 		movl	4(%rsp), %r8d
 422      04
 423 00cf 85C0     		testl	%eax, %eax
 424 00d1 741D     		je	.L57
 425              	.LVL34:
1657:fltk-1.3.4-1/png/png.c ****          return 1; /* ok, but no change */
 426              		.loc 1 1657 7 is_stmt 1 view .LVU131
1658:fltk-1.3.4-1/png/png.c ****    }
 427              		.loc 1 1658 17 is_stmt 0 view .LVU132
 428 00d3 B8010000 		movl	$1, %eax
 428      00
1657:fltk-1.3.4-1/png/png.c ****          return 1; /* ok, but no change */
 429              		.loc 1 1657 10 view .LVU133
 430 00d8 4585C0   		testl	%r8d, %r8d
 431 00db 0F8549FF 		jne	.L42
 431      FFFF
 432 00e1 EBA6     		jmp	.L40
 433              	.LVL35:
 434              		.p2align 4,,10
 435 00e3 0F1F4400 		.p2align 3
 435      00
 436              	.L52:
 437              		.cfi_def_cfa_offset 8
 438              		.cfi_restore 6
1676:fltk-1.3.4-1/png/png.c **** 
 439              		.loc 1 1676 1 view .LVU134
 440 00e8 C3       		ret
 441              	.LVL36:
 442 00e9 0F1F8000 		.p2align 4,,10
 442      000000
 443              		.p2align 3
 444              	.L57:
 445              		.cfi_def_cfa_offset 32
 446              		.cfi_offset 6, -16
1651:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "inconsistent chromaticities");
 447              		.loc 1 1651 28 view .LVU135
 448 00f0 664181CB 		orw	$-32768, %r11w
 448      0080
1652:fltk-1.3.4-1/png/png.c ****          return 0; /* failed */
 449              		.loc 1 1652 10 view .LVU136
 450 00f6 488D3500 		leaq	.LC3(%rip), %rsi
 450      000000
 451 00fd 4889EF   		movq	%rbp, %rdi
 452              	.LVL37:
1652:fltk-1.3.4-1/png/png.c ****          return 0; /* failed */
 453              		.loc 1 1652 10 view .LVU137
 454 0100 89442404 		movl	%eax, 4(%rsp)
 455              	.LVL38:
1651:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "inconsistent chromaticities");
 456              		.loc 1 1651 10 is_stmt 1 view .LVU138
1651:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "inconsistent chromaticities");
 457              		.loc 1 1651 28 is_stmt 0 view .LVU139
 458 0104 6645895A 		movw	%r11w, 74(%r10)
 458      4A
1652:fltk-1.3.4-1/png/png.c ****          return 0; /* failed */
 459              		.loc 1 1652 10 is_stmt 1 view .LVU140
 460 0109 E8000000 		call	png_benign_error@PLT
 460      00
 461              	.LVL39:
1653:fltk-1.3.4-1/png/png.c ****       }
 462              		.loc 1 1653 10 view .LVU141
1653:fltk-1.3.4-1/png/png.c ****       }
 463              		.loc 1 1653 17 is_stmt 0 view .LVU142
 464 010e 8B442404 		movl	4(%rsp), %eax
 465 0112 E972FFFF 		jmp	.L40
 465      FF
 466              		.cfi_endproc
 467              	.LFE79:
 469              		.section	.text.png_build_16bit_table,"ax",@progbits
 470              		.p2align 4
 472              	png_build_16bit_table:
 473              	.LVL40:
 474              	.LFB112:
2821:fltk-1.3.4-1/png/png.c **** 
2822:fltk-1.3.4-1/png/png.c **** /* Function to format a floating point value in ASCII with a given
2823:fltk-1.3.4-1/png/png.c ****  * precision.
2824:fltk-1.3.4-1/png/png.c ****  */
2825:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
2826:fltk-1.3.4-1/png/png.c **** png_ascii_from_fp(png_const_structrp png_ptr, png_charp ascii, png_size_t size,
2827:fltk-1.3.4-1/png/png.c ****     double fp, unsigned int precision)
2828:fltk-1.3.4-1/png/png.c **** {
2829:fltk-1.3.4-1/png/png.c ****    /* We use standard functions from math.h, but not printf because
2830:fltk-1.3.4-1/png/png.c ****     * that would require stdio.  The caller must supply a buffer of
2831:fltk-1.3.4-1/png/png.c ****     * sufficient size or we will png_error.  The tests on size and
2832:fltk-1.3.4-1/png/png.c ****     * the space in ascii[] consumed are indicated below.
2833:fltk-1.3.4-1/png/png.c ****     */
2834:fltk-1.3.4-1/png/png.c ****    if (precision < 1)
2835:fltk-1.3.4-1/png/png.c ****       precision = DBL_DIG;
2836:fltk-1.3.4-1/png/png.c **** 
2837:fltk-1.3.4-1/png/png.c ****    /* Enforce the limit of the implementation precision too. */
2838:fltk-1.3.4-1/png/png.c ****    if (precision > DBL_DIG+1)
2839:fltk-1.3.4-1/png/png.c ****       precision = DBL_DIG+1;
2840:fltk-1.3.4-1/png/png.c **** 
2841:fltk-1.3.4-1/png/png.c ****    /* Basic sanity checks */
2842:fltk-1.3.4-1/png/png.c ****    if (size >= precision+5) /* See the requirements below. */
2843:fltk-1.3.4-1/png/png.c ****    {
2844:fltk-1.3.4-1/png/png.c ****       if (fp < 0)
2845:fltk-1.3.4-1/png/png.c ****       {
2846:fltk-1.3.4-1/png/png.c ****          fp = -fp;
2847:fltk-1.3.4-1/png/png.c ****          *ascii++ = 45; /* '-'  PLUS 1 TOTAL 1 */
2848:fltk-1.3.4-1/png/png.c ****          --size;
2849:fltk-1.3.4-1/png/png.c ****       }
2850:fltk-1.3.4-1/png/png.c **** 
2851:fltk-1.3.4-1/png/png.c ****       if (fp >= DBL_MIN && fp <= DBL_MAX)
2852:fltk-1.3.4-1/png/png.c ****       {
2853:fltk-1.3.4-1/png/png.c ****          int exp_b10;       /* A base 10 exponent */
2854:fltk-1.3.4-1/png/png.c ****          double base;   /* 10^exp_b10 */
2855:fltk-1.3.4-1/png/png.c **** 
2856:fltk-1.3.4-1/png/png.c ****          /* First extract a base 10 exponent of the number,
2857:fltk-1.3.4-1/png/png.c ****           * the calculation below rounds down when converting
2858:fltk-1.3.4-1/png/png.c ****           * from base 2 to base 10 (multiply by log10(2) -
2859:fltk-1.3.4-1/png/png.c ****           * 0.3010, but 77/256 is 0.3008, so exp_b10 needs to
2860:fltk-1.3.4-1/png/png.c ****           * be increased.  Note that the arithmetic shift
2861:fltk-1.3.4-1/png/png.c ****           * performs a floor() unlike C arithmetic - using a
2862:fltk-1.3.4-1/png/png.c ****           * C multiply would break the following for negative
2863:fltk-1.3.4-1/png/png.c ****           * exponents.
2864:fltk-1.3.4-1/png/png.c ****           */
2865:fltk-1.3.4-1/png/png.c ****          (void)frexp(fp, &exp_b10); /* exponent to base 2 */
2866:fltk-1.3.4-1/png/png.c **** 
2867:fltk-1.3.4-1/png/png.c ****          exp_b10 = (exp_b10 * 77) >> 8; /* <= exponent to base 10 */
2868:fltk-1.3.4-1/png/png.c **** 
2869:fltk-1.3.4-1/png/png.c ****          /* Avoid underflow here. */
2870:fltk-1.3.4-1/png/png.c ****          base = png_pow10(exp_b10); /* May underflow */
2871:fltk-1.3.4-1/png/png.c **** 
2872:fltk-1.3.4-1/png/png.c ****          while (base < DBL_MIN || base < fp)
2873:fltk-1.3.4-1/png/png.c ****          {
2874:fltk-1.3.4-1/png/png.c ****             /* And this may overflow. */
2875:fltk-1.3.4-1/png/png.c ****             double test = png_pow10(exp_b10+1);
2876:fltk-1.3.4-1/png/png.c **** 
2877:fltk-1.3.4-1/png/png.c ****             if (test <= DBL_MAX)
2878:fltk-1.3.4-1/png/png.c ****                ++exp_b10, base = test;
2879:fltk-1.3.4-1/png/png.c **** 
2880:fltk-1.3.4-1/png/png.c ****             else
2881:fltk-1.3.4-1/png/png.c ****                break;
2882:fltk-1.3.4-1/png/png.c ****          }
2883:fltk-1.3.4-1/png/png.c **** 
2884:fltk-1.3.4-1/png/png.c ****          /* Normalize fp and correct exp_b10, after this fp is in the
2885:fltk-1.3.4-1/png/png.c ****           * range [.1,1) and exp_b10 is both the exponent and the digit
2886:fltk-1.3.4-1/png/png.c ****           * *before* which the decimal point should be inserted
2887:fltk-1.3.4-1/png/png.c ****           * (starting with 0 for the first digit).  Note that this
2888:fltk-1.3.4-1/png/png.c ****           * works even if 10^exp_b10 is out of range because of the
2889:fltk-1.3.4-1/png/png.c ****           * test on DBL_MAX above.
2890:fltk-1.3.4-1/png/png.c ****           */
2891:fltk-1.3.4-1/png/png.c ****          fp /= base;
2892:fltk-1.3.4-1/png/png.c ****          while (fp >= 1) fp /= 10, ++exp_b10;
2893:fltk-1.3.4-1/png/png.c **** 
2894:fltk-1.3.4-1/png/png.c ****          /* Because of the code above fp may, at this point, be
2895:fltk-1.3.4-1/png/png.c ****           * less than .1, this is ok because the code below can
2896:fltk-1.3.4-1/png/png.c ****           * handle the leading zeros this generates, so no attempt
2897:fltk-1.3.4-1/png/png.c ****           * is made to correct that here.
2898:fltk-1.3.4-1/png/png.c ****           */
2899:fltk-1.3.4-1/png/png.c **** 
2900:fltk-1.3.4-1/png/png.c ****          {
2901:fltk-1.3.4-1/png/png.c ****             int czero, clead, cdigits;
2902:fltk-1.3.4-1/png/png.c ****             char exponent[10];
2903:fltk-1.3.4-1/png/png.c **** 
2904:fltk-1.3.4-1/png/png.c ****             /* Allow up to two leading zeros - this will not lengthen
2905:fltk-1.3.4-1/png/png.c ****              * the number compared to using E-n.
2906:fltk-1.3.4-1/png/png.c ****              */
2907:fltk-1.3.4-1/png/png.c ****             if (exp_b10 < 0 && exp_b10 > -3) /* PLUS 3 TOTAL 4 */
2908:fltk-1.3.4-1/png/png.c ****             {
2909:fltk-1.3.4-1/png/png.c ****                czero = -exp_b10; /* PLUS 2 digits: TOTAL 3 */
2910:fltk-1.3.4-1/png/png.c ****                exp_b10 = 0;      /* Dot added below before first output. */
2911:fltk-1.3.4-1/png/png.c ****             }
2912:fltk-1.3.4-1/png/png.c ****             else
2913:fltk-1.3.4-1/png/png.c ****                czero = 0;    /* No zeros to add */
2914:fltk-1.3.4-1/png/png.c **** 
2915:fltk-1.3.4-1/png/png.c ****             /* Generate the digit list, stripping trailing zeros and
2916:fltk-1.3.4-1/png/png.c ****              * inserting a '.' before a digit if the exponent is 0.
2917:fltk-1.3.4-1/png/png.c ****              */
2918:fltk-1.3.4-1/png/png.c ****             clead = czero; /* Count of leading zeros */
2919:fltk-1.3.4-1/png/png.c ****             cdigits = 0;   /* Count of digits in list. */
2920:fltk-1.3.4-1/png/png.c **** 
2921:fltk-1.3.4-1/png/png.c ****             do
2922:fltk-1.3.4-1/png/png.c ****             {
2923:fltk-1.3.4-1/png/png.c ****                double d;
2924:fltk-1.3.4-1/png/png.c **** 
2925:fltk-1.3.4-1/png/png.c ****                fp *= 10;
2926:fltk-1.3.4-1/png/png.c ****                /* Use modf here, not floor and subtract, so that
2927:fltk-1.3.4-1/png/png.c ****                 * the separation is done in one step.  At the end
2928:fltk-1.3.4-1/png/png.c ****                 * of the loop don't break the number into parts so
2929:fltk-1.3.4-1/png/png.c ****                 * that the final digit is rounded.
2930:fltk-1.3.4-1/png/png.c ****                 */
2931:fltk-1.3.4-1/png/png.c ****                if (cdigits+czero-clead+1 < (int)precision)
2932:fltk-1.3.4-1/png/png.c ****                   fp = modf(fp, &d);
2933:fltk-1.3.4-1/png/png.c **** 
2934:fltk-1.3.4-1/png/png.c ****                else
2935:fltk-1.3.4-1/png/png.c ****                {
2936:fltk-1.3.4-1/png/png.c ****                   d = floor(fp + .5);
2937:fltk-1.3.4-1/png/png.c **** 
2938:fltk-1.3.4-1/png/png.c ****                   if (d > 9)
2939:fltk-1.3.4-1/png/png.c ****                   {
2940:fltk-1.3.4-1/png/png.c ****                      /* Rounding up to 10, handle that here. */
2941:fltk-1.3.4-1/png/png.c ****                      if (czero > 0)
2942:fltk-1.3.4-1/png/png.c ****                      {
2943:fltk-1.3.4-1/png/png.c ****                         --czero, d = 1;
2944:fltk-1.3.4-1/png/png.c ****                         if (cdigits == 0) --clead;
2945:fltk-1.3.4-1/png/png.c ****                      }
2946:fltk-1.3.4-1/png/png.c ****                      else
2947:fltk-1.3.4-1/png/png.c ****                      {
2948:fltk-1.3.4-1/png/png.c ****                         while (cdigits > 0 && d > 9)
2949:fltk-1.3.4-1/png/png.c ****                         {
2950:fltk-1.3.4-1/png/png.c ****                            int ch = *--ascii;
2951:fltk-1.3.4-1/png/png.c **** 
2952:fltk-1.3.4-1/png/png.c ****                            if (exp_b10 != (-1))
2953:fltk-1.3.4-1/png/png.c ****                               ++exp_b10;
2954:fltk-1.3.4-1/png/png.c **** 
2955:fltk-1.3.4-1/png/png.c ****                            else if (ch == 46)
2956:fltk-1.3.4-1/png/png.c ****                            {
2957:fltk-1.3.4-1/png/png.c ****                               ch = *--ascii, ++size;
2958:fltk-1.3.4-1/png/png.c ****                               /* Advance exp_b10 to '1', so that the
2959:fltk-1.3.4-1/png/png.c ****                                * decimal point happens after the
2960:fltk-1.3.4-1/png/png.c ****                                * previous digit.
2961:fltk-1.3.4-1/png/png.c ****                                */
2962:fltk-1.3.4-1/png/png.c ****                               exp_b10 = 1;
2963:fltk-1.3.4-1/png/png.c ****                            }
2964:fltk-1.3.4-1/png/png.c **** 
2965:fltk-1.3.4-1/png/png.c ****                            --cdigits;
2966:fltk-1.3.4-1/png/png.c ****                            d = ch - 47;  /* I.e. 1+(ch-48) */
2967:fltk-1.3.4-1/png/png.c ****                         }
2968:fltk-1.3.4-1/png/png.c **** 
2969:fltk-1.3.4-1/png/png.c ****                         /* Did we reach the beginning? If so adjust the
2970:fltk-1.3.4-1/png/png.c ****                          * exponent but take into account the leading
2971:fltk-1.3.4-1/png/png.c ****                          * decimal point.
2972:fltk-1.3.4-1/png/png.c ****                          */
2973:fltk-1.3.4-1/png/png.c ****                         if (d > 9)  /* cdigits == 0 */
2974:fltk-1.3.4-1/png/png.c ****                         {
2975:fltk-1.3.4-1/png/png.c ****                            if (exp_b10 == (-1))
2976:fltk-1.3.4-1/png/png.c ****                            {
2977:fltk-1.3.4-1/png/png.c ****                               /* Leading decimal point (plus zeros?), if
2978:fltk-1.3.4-1/png/png.c ****                                * we lose the decimal point here it must
2979:fltk-1.3.4-1/png/png.c ****                                * be reentered below.
2980:fltk-1.3.4-1/png/png.c ****                                */
2981:fltk-1.3.4-1/png/png.c ****                               int ch = *--ascii;
2982:fltk-1.3.4-1/png/png.c **** 
2983:fltk-1.3.4-1/png/png.c ****                               if (ch == 46)
2984:fltk-1.3.4-1/png/png.c ****                                  ++size, exp_b10 = 1;
2985:fltk-1.3.4-1/png/png.c **** 
2986:fltk-1.3.4-1/png/png.c ****                               /* Else lost a leading zero, so 'exp_b10' is
2987:fltk-1.3.4-1/png/png.c ****                                * still ok at (-1)
2988:fltk-1.3.4-1/png/png.c ****                                */
2989:fltk-1.3.4-1/png/png.c ****                            }
2990:fltk-1.3.4-1/png/png.c ****                            else
2991:fltk-1.3.4-1/png/png.c ****                               ++exp_b10;
2992:fltk-1.3.4-1/png/png.c **** 
2993:fltk-1.3.4-1/png/png.c ****                            /* In all cases we output a '1' */
2994:fltk-1.3.4-1/png/png.c ****                            d = 1;
2995:fltk-1.3.4-1/png/png.c ****                         }
2996:fltk-1.3.4-1/png/png.c ****                      }
2997:fltk-1.3.4-1/png/png.c ****                   }
2998:fltk-1.3.4-1/png/png.c ****                   fp = 0; /* Guarantees termination below. */
2999:fltk-1.3.4-1/png/png.c ****                }
3000:fltk-1.3.4-1/png/png.c **** 
3001:fltk-1.3.4-1/png/png.c ****                if (d == 0)
3002:fltk-1.3.4-1/png/png.c ****                {
3003:fltk-1.3.4-1/png/png.c ****                   ++czero;
3004:fltk-1.3.4-1/png/png.c ****                   if (cdigits == 0) ++clead;
3005:fltk-1.3.4-1/png/png.c ****                }
3006:fltk-1.3.4-1/png/png.c ****                else
3007:fltk-1.3.4-1/png/png.c ****                {
3008:fltk-1.3.4-1/png/png.c ****                   /* Included embedded zeros in the digit count. */
3009:fltk-1.3.4-1/png/png.c ****                   cdigits += czero - clead;
3010:fltk-1.3.4-1/png/png.c ****                   clead = 0;
3011:fltk-1.3.4-1/png/png.c **** 
3012:fltk-1.3.4-1/png/png.c ****                   while (czero > 0)
3013:fltk-1.3.4-1/png/png.c ****                   {
3014:fltk-1.3.4-1/png/png.c ****                      /* exp_b10 == (-1) means we just output the decimal
3015:fltk-1.3.4-1/png/png.c ****                       * place - after the DP don't adjust 'exp_b10' any
3016:fltk-1.3.4-1/png/png.c ****                       * more!
3017:fltk-1.3.4-1/png/png.c ****                       */
3018:fltk-1.3.4-1/png/png.c ****                      if (exp_b10 != (-1))
3019:fltk-1.3.4-1/png/png.c ****                      {
3020:fltk-1.3.4-1/png/png.c ****                         if (exp_b10 == 0) *ascii++ = 46, --size;
3021:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
3022:fltk-1.3.4-1/png/png.c ****                         --exp_b10;
3023:fltk-1.3.4-1/png/png.c ****                      }
3024:fltk-1.3.4-1/png/png.c ****                      *ascii++ = 48, --czero;
3025:fltk-1.3.4-1/png/png.c ****                   }
3026:fltk-1.3.4-1/png/png.c **** 
3027:fltk-1.3.4-1/png/png.c ****                   if (exp_b10 != (-1))
3028:fltk-1.3.4-1/png/png.c ****                   {
3029:fltk-1.3.4-1/png/png.c ****                      if (exp_b10 == 0)
3030:fltk-1.3.4-1/png/png.c ****                         *ascii++ = 46, --size; /* counted above */
3031:fltk-1.3.4-1/png/png.c **** 
3032:fltk-1.3.4-1/png/png.c ****                      --exp_b10;
3033:fltk-1.3.4-1/png/png.c ****                   }
3034:fltk-1.3.4-1/png/png.c ****                   *ascii++ = (char)(48 + (int)d), ++cdigits;
3035:fltk-1.3.4-1/png/png.c ****                }
3036:fltk-1.3.4-1/png/png.c ****             }
3037:fltk-1.3.4-1/png/png.c ****             while (cdigits+czero-clead < (int)precision && fp > DBL_MIN);
3038:fltk-1.3.4-1/png/png.c **** 
3039:fltk-1.3.4-1/png/png.c ****             /* The total output count (max) is now 4+precision */
3040:fltk-1.3.4-1/png/png.c **** 
3041:fltk-1.3.4-1/png/png.c ****             /* Check for an exponent, if we don't need one we are
3042:fltk-1.3.4-1/png/png.c ****              * done and just need to terminate the string.  At
3043:fltk-1.3.4-1/png/png.c ****              * this point exp_b10==(-1) is effectively if flag - it got
3044:fltk-1.3.4-1/png/png.c ****              * to '-1' because of the decrement after outputing
3045:fltk-1.3.4-1/png/png.c ****              * the decimal point above (the exponent required is
3046:fltk-1.3.4-1/png/png.c ****              * *not* -1!)
3047:fltk-1.3.4-1/png/png.c ****              */
3048:fltk-1.3.4-1/png/png.c ****             if (exp_b10 >= (-1) && exp_b10 <= 2)
3049:fltk-1.3.4-1/png/png.c ****             {
3050:fltk-1.3.4-1/png/png.c ****                /* The following only happens if we didn't output the
3051:fltk-1.3.4-1/png/png.c ****                 * leading zeros above for negative exponent, so this
3052:fltk-1.3.4-1/png/png.c ****                 * doest add to the digit requirement.  Note that the
3053:fltk-1.3.4-1/png/png.c ****                 * two zeros here can only be output if the two leading
3054:fltk-1.3.4-1/png/png.c ****                 * zeros were *not* output, so this doesn't increase
3055:fltk-1.3.4-1/png/png.c ****                 * the output count.
3056:fltk-1.3.4-1/png/png.c ****                 */
3057:fltk-1.3.4-1/png/png.c ****                while (--exp_b10 >= 0) *ascii++ = 48;
3058:fltk-1.3.4-1/png/png.c **** 
3059:fltk-1.3.4-1/png/png.c ****                *ascii = 0;
3060:fltk-1.3.4-1/png/png.c **** 
3061:fltk-1.3.4-1/png/png.c ****                /* Total buffer requirement (including the '\0') is
3062:fltk-1.3.4-1/png/png.c ****                 * 5+precision - see check at the start.
3063:fltk-1.3.4-1/png/png.c ****                 */
3064:fltk-1.3.4-1/png/png.c ****                return;
3065:fltk-1.3.4-1/png/png.c ****             }
3066:fltk-1.3.4-1/png/png.c **** 
3067:fltk-1.3.4-1/png/png.c ****             /* Here if an exponent is required, adjust size for
3068:fltk-1.3.4-1/png/png.c ****              * the digits we output but did not count.  The total
3069:fltk-1.3.4-1/png/png.c ****              * digit output here so far is at most 1+precision - no
3070:fltk-1.3.4-1/png/png.c ****              * decimal point and no leading or trailing zeros have
3071:fltk-1.3.4-1/png/png.c ****              * been output.
3072:fltk-1.3.4-1/png/png.c ****              */
3073:fltk-1.3.4-1/png/png.c ****             size -= cdigits;
3074:fltk-1.3.4-1/png/png.c **** 
3075:fltk-1.3.4-1/png/png.c ****             *ascii++ = 69, --size;    /* 'E': PLUS 1 TOTAL 2+precision */
3076:fltk-1.3.4-1/png/png.c **** 
3077:fltk-1.3.4-1/png/png.c ****             /* The following use of an unsigned temporary avoids ambiguities in
3078:fltk-1.3.4-1/png/png.c ****              * the signed arithmetic on exp_b10 and permits GCC at least to do
3079:fltk-1.3.4-1/png/png.c ****              * better optimization.
3080:fltk-1.3.4-1/png/png.c ****              */
3081:fltk-1.3.4-1/png/png.c ****             {
3082:fltk-1.3.4-1/png/png.c ****                unsigned int uexp_b10;
3083:fltk-1.3.4-1/png/png.c **** 
3084:fltk-1.3.4-1/png/png.c ****                if (exp_b10 < 0)
3085:fltk-1.3.4-1/png/png.c ****                {
3086:fltk-1.3.4-1/png/png.c ****                   *ascii++ = 45, --size; /* '-': PLUS 1 TOTAL 3+precision */
3087:fltk-1.3.4-1/png/png.c ****                   uexp_b10 = -exp_b10;
3088:fltk-1.3.4-1/png/png.c ****                }
3089:fltk-1.3.4-1/png/png.c **** 
3090:fltk-1.3.4-1/png/png.c ****                else
3091:fltk-1.3.4-1/png/png.c ****                   uexp_b10 = exp_b10;
3092:fltk-1.3.4-1/png/png.c **** 
3093:fltk-1.3.4-1/png/png.c ****                cdigits = 0;
3094:fltk-1.3.4-1/png/png.c **** 
3095:fltk-1.3.4-1/png/png.c ****                while (uexp_b10 > 0)
3096:fltk-1.3.4-1/png/png.c ****                {
3097:fltk-1.3.4-1/png/png.c ****                   exponent[cdigits++] = (char)(48 + uexp_b10 % 10);
3098:fltk-1.3.4-1/png/png.c ****                   uexp_b10 /= 10;
3099:fltk-1.3.4-1/png/png.c ****                }
3100:fltk-1.3.4-1/png/png.c ****             }
3101:fltk-1.3.4-1/png/png.c **** 
3102:fltk-1.3.4-1/png/png.c ****             /* Need another size check here for the exponent digits, so
3103:fltk-1.3.4-1/png/png.c ****              * this need not be considered above.
3104:fltk-1.3.4-1/png/png.c ****              */
3105:fltk-1.3.4-1/png/png.c ****             if ((int)size > cdigits)
3106:fltk-1.3.4-1/png/png.c ****             {
3107:fltk-1.3.4-1/png/png.c ****                while (cdigits > 0) *ascii++ = exponent[--cdigits];
3108:fltk-1.3.4-1/png/png.c **** 
3109:fltk-1.3.4-1/png/png.c ****                *ascii = 0;
3110:fltk-1.3.4-1/png/png.c **** 
3111:fltk-1.3.4-1/png/png.c ****                return;
3112:fltk-1.3.4-1/png/png.c ****             }
3113:fltk-1.3.4-1/png/png.c ****          }
3114:fltk-1.3.4-1/png/png.c ****       }
3115:fltk-1.3.4-1/png/png.c ****       else if (!(fp >= DBL_MIN))
3116:fltk-1.3.4-1/png/png.c ****       {
3117:fltk-1.3.4-1/png/png.c ****          *ascii++ = 48; /* '0' */
3118:fltk-1.3.4-1/png/png.c ****          *ascii = 0;
3119:fltk-1.3.4-1/png/png.c ****          return;
3120:fltk-1.3.4-1/png/png.c ****       }
3121:fltk-1.3.4-1/png/png.c ****       else
3122:fltk-1.3.4-1/png/png.c ****       {
3123:fltk-1.3.4-1/png/png.c ****          *ascii++ = 105; /* 'i' */
3124:fltk-1.3.4-1/png/png.c ****          *ascii++ = 110; /* 'n' */
3125:fltk-1.3.4-1/png/png.c ****          *ascii++ = 102; /* 'f' */
3126:fltk-1.3.4-1/png/png.c ****          *ascii = 0;
3127:fltk-1.3.4-1/png/png.c ****          return;
3128:fltk-1.3.4-1/png/png.c ****       }
3129:fltk-1.3.4-1/png/png.c ****    }
3130:fltk-1.3.4-1/png/png.c **** 
3131:fltk-1.3.4-1/png/png.c ****    /* Here on buffer too small. */
3132:fltk-1.3.4-1/png/png.c ****    png_error(png_ptr, "ASCII conversion buffer too small");
3133:fltk-1.3.4-1/png/png.c **** }
3134:fltk-1.3.4-1/png/png.c **** 
3135:fltk-1.3.4-1/png/png.c **** #  endif /* FLOATING_POINT */
3136:fltk-1.3.4-1/png/png.c **** 
3137:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_FIXED_POINT_SUPPORTED
3138:fltk-1.3.4-1/png/png.c **** /* Function to format a fixed point value in ASCII.
3139:fltk-1.3.4-1/png/png.c ****  */
3140:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
3141:fltk-1.3.4-1/png/png.c **** png_ascii_from_fixed(png_const_structrp png_ptr, png_charp ascii,
3142:fltk-1.3.4-1/png/png.c ****     png_size_t size, png_fixed_point fp)
3143:fltk-1.3.4-1/png/png.c **** {
3144:fltk-1.3.4-1/png/png.c ****    /* Require space for 10 decimal digits, a decimal point, a minus sign and a
3145:fltk-1.3.4-1/png/png.c ****     * trailing \0, 13 characters:
3146:fltk-1.3.4-1/png/png.c ****     */
3147:fltk-1.3.4-1/png/png.c ****    if (size > 12)
3148:fltk-1.3.4-1/png/png.c ****    {
3149:fltk-1.3.4-1/png/png.c ****       png_uint_32 num;
3150:fltk-1.3.4-1/png/png.c **** 
3151:fltk-1.3.4-1/png/png.c ****       /* Avoid overflow here on the minimum integer. */
3152:fltk-1.3.4-1/png/png.c ****       if (fp < 0)
3153:fltk-1.3.4-1/png/png.c ****          *ascii++ = 45, --size, num = -fp;
3154:fltk-1.3.4-1/png/png.c ****       else
3155:fltk-1.3.4-1/png/png.c ****          num = fp;
3156:fltk-1.3.4-1/png/png.c **** 
3157:fltk-1.3.4-1/png/png.c ****       if (num <= 0x80000000) /* else overflowed */
3158:fltk-1.3.4-1/png/png.c ****       {
3159:fltk-1.3.4-1/png/png.c ****          unsigned int ndigits = 0, first = 16 /* flag value */;
3160:fltk-1.3.4-1/png/png.c ****          char digits[10];
3161:fltk-1.3.4-1/png/png.c **** 
3162:fltk-1.3.4-1/png/png.c ****          while (num)
3163:fltk-1.3.4-1/png/png.c ****          {
3164:fltk-1.3.4-1/png/png.c ****             /* Split the low digit off num: */
3165:fltk-1.3.4-1/png/png.c ****             unsigned int tmp = num/10;
3166:fltk-1.3.4-1/png/png.c ****             num -= tmp*10;
3167:fltk-1.3.4-1/png/png.c ****             digits[ndigits++] = (char)(48 + num);
3168:fltk-1.3.4-1/png/png.c ****             /* Record the first non-zero digit, note that this is a number
3169:fltk-1.3.4-1/png/png.c ****              * starting at 1, it's not actually the array index.
3170:fltk-1.3.4-1/png/png.c ****              */
3171:fltk-1.3.4-1/png/png.c ****             if (first == 16 && num > 0)
3172:fltk-1.3.4-1/png/png.c ****                first = ndigits;
3173:fltk-1.3.4-1/png/png.c ****             num = tmp;
3174:fltk-1.3.4-1/png/png.c ****          }
3175:fltk-1.3.4-1/png/png.c **** 
3176:fltk-1.3.4-1/png/png.c ****          if (ndigits > 0)
3177:fltk-1.3.4-1/png/png.c ****          {
3178:fltk-1.3.4-1/png/png.c ****             while (ndigits > 5) *ascii++ = digits[--ndigits];
3179:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
3180:fltk-1.3.4-1/png/png.c ****              * smaller at this point.  It is certainly not zero.  Check for a
3181:fltk-1.3.4-1/png/png.c ****              * non-zero fractional digit:
3182:fltk-1.3.4-1/png/png.c ****              */
3183:fltk-1.3.4-1/png/png.c ****             if (first <= 5)
3184:fltk-1.3.4-1/png/png.c ****             {
3185:fltk-1.3.4-1/png/png.c ****                unsigned int i;
3186:fltk-1.3.4-1/png/png.c ****                *ascii++ = 46; /* decimal point */
3187:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
3188:fltk-1.3.4-1/png/png.c ****                 * then ndigits digits to first:
3189:fltk-1.3.4-1/png/png.c ****                 */
3190:fltk-1.3.4-1/png/png.c ****                i = 5;
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits < i) *ascii++ = 48, --i;
3192:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
3193:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
3194:fltk-1.3.4-1/png/png.c ****             }
3195:fltk-1.3.4-1/png/png.c ****          }
3196:fltk-1.3.4-1/png/png.c ****          else
3197:fltk-1.3.4-1/png/png.c ****             *ascii++ = 48;
3198:fltk-1.3.4-1/png/png.c **** 
3199:fltk-1.3.4-1/png/png.c ****          /* And null terminate the string: */
3200:fltk-1.3.4-1/png/png.c ****          *ascii = 0;
3201:fltk-1.3.4-1/png/png.c ****          return;
3202:fltk-1.3.4-1/png/png.c ****       }
3203:fltk-1.3.4-1/png/png.c ****    }
3204:fltk-1.3.4-1/png/png.c **** 
3205:fltk-1.3.4-1/png/png.c ****    /* Here on buffer too small. */
3206:fltk-1.3.4-1/png/png.c ****    png_error(png_ptr, "ASCII conversion buffer too small");
3207:fltk-1.3.4-1/png/png.c **** }
3208:fltk-1.3.4-1/png/png.c **** #   endif /* FIXED_POINT */
3209:fltk-1.3.4-1/png/png.c **** #endif /* READ_SCAL */
3210:fltk-1.3.4-1/png/png.c **** 
3211:fltk-1.3.4-1/png/png.c **** #if defined(PNG_FLOATING_POINT_SUPPORTED) && \
3212:fltk-1.3.4-1/png/png.c ****    !defined(PNG_FIXED_POINT_MACRO_SUPPORTED) && \
3213:fltk-1.3.4-1/png/png.c ****    (defined(PNG_gAMA_SUPPORTED) || defined(PNG_cHRM_SUPPORTED) || \
3214:fltk-1.3.4-1/png/png.c ****    defined(PNG_sCAL_SUPPORTED) || defined(PNG_READ_BACKGROUND_SUPPORTED) || \
3215:fltk-1.3.4-1/png/png.c ****    defined(PNG_READ_RGB_TO_GRAY_SUPPORTED)) || \
3216:fltk-1.3.4-1/png/png.c ****    (defined(PNG_sCAL_SUPPORTED) && \
3217:fltk-1.3.4-1/png/png.c ****    defined(PNG_FLOATING_ARITHMETIC_SUPPORTED))
3218:fltk-1.3.4-1/png/png.c **** png_fixed_point
3219:fltk-1.3.4-1/png/png.c **** png_fixed(png_const_structrp png_ptr, double fp, png_const_charp text)
3220:fltk-1.3.4-1/png/png.c **** {
3221:fltk-1.3.4-1/png/png.c ****    double r = floor(100000 * fp + .5);
3222:fltk-1.3.4-1/png/png.c **** 
3223:fltk-1.3.4-1/png/png.c ****    if (r > 2147483647. || r < -2147483648.)
3224:fltk-1.3.4-1/png/png.c ****       png_fixed_error(png_ptr, text);
3225:fltk-1.3.4-1/png/png.c **** 
3226:fltk-1.3.4-1/png/png.c **** #  ifndef PNG_ERROR_TEXT_SUPPORTED
3227:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(text)
3228:fltk-1.3.4-1/png/png.c **** #  endif
3229:fltk-1.3.4-1/png/png.c **** 
3230:fltk-1.3.4-1/png/png.c ****    return (png_fixed_point)r;
3231:fltk-1.3.4-1/png/png.c **** }
3232:fltk-1.3.4-1/png/png.c **** #endif
3233:fltk-1.3.4-1/png/png.c **** 
3234:fltk-1.3.4-1/png/png.c **** #if defined(PNG_GAMMA_SUPPORTED) || defined(PNG_COLORSPACE_SUPPORTED) ||\
3235:fltk-1.3.4-1/png/png.c ****     defined(PNG_INCH_CONVERSIONS_SUPPORTED) || defined(PNG_READ_pHYs_SUPPORTED)
3236:fltk-1.3.4-1/png/png.c **** /* muldiv functions */
3237:fltk-1.3.4-1/png/png.c **** /* This API takes signed arguments and rounds the result to the nearest
3238:fltk-1.3.4-1/png/png.c ****  * integer (or, for a fixed point number - the standard argument - to
3239:fltk-1.3.4-1/png/png.c ****  * the nearest .00001).  Overflow and divide by zero are signalled in
3240:fltk-1.3.4-1/png/png.c ****  * the result, a boolean - true on success, false on overflow.
3241:fltk-1.3.4-1/png/png.c ****  */
3242:fltk-1.3.4-1/png/png.c **** int
3243:fltk-1.3.4-1/png/png.c **** png_muldiv(png_fixed_point_p res, png_fixed_point a, png_int_32 times,
3244:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
3245:fltk-1.3.4-1/png/png.c **** {
3246:fltk-1.3.4-1/png/png.c ****    /* Return a * times / divisor, rounded. */
3247:fltk-1.3.4-1/png/png.c ****    if (divisor != 0)
3248:fltk-1.3.4-1/png/png.c ****    {
3249:fltk-1.3.4-1/png/png.c ****       if (a == 0 || times == 0)
3250:fltk-1.3.4-1/png/png.c ****       {
3251:fltk-1.3.4-1/png/png.c ****          *res = 0;
3252:fltk-1.3.4-1/png/png.c ****          return 1;
3253:fltk-1.3.4-1/png/png.c ****       }
3254:fltk-1.3.4-1/png/png.c ****       else
3255:fltk-1.3.4-1/png/png.c ****       {
3256:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3257:fltk-1.3.4-1/png/png.c ****          double r = a;
3258:fltk-1.3.4-1/png/png.c ****          r *= times;
3259:fltk-1.3.4-1/png/png.c ****          r /= divisor;
3260:fltk-1.3.4-1/png/png.c ****          r = floor(r+.5);
3261:fltk-1.3.4-1/png/png.c **** 
3262:fltk-1.3.4-1/png/png.c ****          /* A png_fixed_point is a 32-bit integer. */
3263:fltk-1.3.4-1/png/png.c ****          if (r <= 2147483647. && r >= -2147483648.)
3264:fltk-1.3.4-1/png/png.c ****          {
3265:fltk-1.3.4-1/png/png.c ****             *res = (png_fixed_point)r;
3266:fltk-1.3.4-1/png/png.c ****             return 1;
3267:fltk-1.3.4-1/png/png.c ****          }
3268:fltk-1.3.4-1/png/png.c **** #else
3269:fltk-1.3.4-1/png/png.c ****          int negative = 0;
3270:fltk-1.3.4-1/png/png.c ****          png_uint_32 A, T, D;
3271:fltk-1.3.4-1/png/png.c ****          png_uint_32 s16, s32, s00;
3272:fltk-1.3.4-1/png/png.c **** 
3273:fltk-1.3.4-1/png/png.c ****          if (a < 0)
3274:fltk-1.3.4-1/png/png.c ****             negative = 1, A = -a;
3275:fltk-1.3.4-1/png/png.c ****          else
3276:fltk-1.3.4-1/png/png.c ****             A = a;
3277:fltk-1.3.4-1/png/png.c **** 
3278:fltk-1.3.4-1/png/png.c ****          if (times < 0)
3279:fltk-1.3.4-1/png/png.c ****             negative = !negative, T = -times;
3280:fltk-1.3.4-1/png/png.c ****          else
3281:fltk-1.3.4-1/png/png.c ****             T = times;
3282:fltk-1.3.4-1/png/png.c **** 
3283:fltk-1.3.4-1/png/png.c ****          if (divisor < 0)
3284:fltk-1.3.4-1/png/png.c ****             negative = !negative, D = -divisor;
3285:fltk-1.3.4-1/png/png.c ****          else
3286:fltk-1.3.4-1/png/png.c ****             D = divisor;
3287:fltk-1.3.4-1/png/png.c **** 
3288:fltk-1.3.4-1/png/png.c ****          /* Following can't overflow because the arguments only
3289:fltk-1.3.4-1/png/png.c ****           * have 31 bits each, however the result may be 32 bits.
3290:fltk-1.3.4-1/png/png.c ****           */
3291:fltk-1.3.4-1/png/png.c ****          s16 = (A >> 16) * (T & 0xffff) +
3292:fltk-1.3.4-1/png/png.c ****                            (A & 0xffff) * (T >> 16);
3293:fltk-1.3.4-1/png/png.c ****          /* Can't overflow because the a*times bit is only 30
3294:fltk-1.3.4-1/png/png.c ****           * bits at most.
3295:fltk-1.3.4-1/png/png.c ****           */
3296:fltk-1.3.4-1/png/png.c ****          s32 = (A >> 16) * (T >> 16) + (s16 >> 16);
3297:fltk-1.3.4-1/png/png.c ****          s00 = (A & 0xffff) * (T & 0xffff);
3298:fltk-1.3.4-1/png/png.c **** 
3299:fltk-1.3.4-1/png/png.c ****          s16 = (s16 & 0xffff) << 16;
3300:fltk-1.3.4-1/png/png.c ****          s00 += s16;
3301:fltk-1.3.4-1/png/png.c **** 
3302:fltk-1.3.4-1/png/png.c ****          if (s00 < s16)
3303:fltk-1.3.4-1/png/png.c ****             ++s32; /* carry */
3304:fltk-1.3.4-1/png/png.c **** 
3305:fltk-1.3.4-1/png/png.c ****          if (s32 < D) /* else overflow */
3306:fltk-1.3.4-1/png/png.c ****          {
3307:fltk-1.3.4-1/png/png.c ****             /* s32.s00 is now the 64-bit product, do a standard
3308:fltk-1.3.4-1/png/png.c ****              * division, we know that s32 < D, so the maximum
3309:fltk-1.3.4-1/png/png.c ****              * required shift is 31.
3310:fltk-1.3.4-1/png/png.c ****              */
3311:fltk-1.3.4-1/png/png.c ****             int bitshift = 32;
3312:fltk-1.3.4-1/png/png.c ****             png_fixed_point result = 0; /* NOTE: signed */
3313:fltk-1.3.4-1/png/png.c **** 
3314:fltk-1.3.4-1/png/png.c ****             while (--bitshift >= 0)
3315:fltk-1.3.4-1/png/png.c ****             {
3316:fltk-1.3.4-1/png/png.c ****                png_uint_32 d32, d00;
3317:fltk-1.3.4-1/png/png.c **** 
3318:fltk-1.3.4-1/png/png.c ****                if (bitshift > 0)
3319:fltk-1.3.4-1/png/png.c ****                   d32 = D >> (32-bitshift), d00 = D << bitshift;
3320:fltk-1.3.4-1/png/png.c **** 
3321:fltk-1.3.4-1/png/png.c ****                else
3322:fltk-1.3.4-1/png/png.c ****                   d32 = 0, d00 = D;
3323:fltk-1.3.4-1/png/png.c **** 
3324:fltk-1.3.4-1/png/png.c ****                if (s32 > d32)
3325:fltk-1.3.4-1/png/png.c ****                {
3326:fltk-1.3.4-1/png/png.c ****                   if (s00 < d00) --s32; /* carry */
3327:fltk-1.3.4-1/png/png.c ****                   s32 -= d32, s00 -= d00, result += 1<<bitshift;
3328:fltk-1.3.4-1/png/png.c ****                }
3329:fltk-1.3.4-1/png/png.c **** 
3330:fltk-1.3.4-1/png/png.c ****                else
3331:fltk-1.3.4-1/png/png.c ****                   if (s32 == d32 && s00 >= d00)
3332:fltk-1.3.4-1/png/png.c ****                      s32 = 0, s00 -= d00, result += 1<<bitshift;
3333:fltk-1.3.4-1/png/png.c ****             }
3334:fltk-1.3.4-1/png/png.c **** 
3335:fltk-1.3.4-1/png/png.c ****             /* Handle the rounding. */
3336:fltk-1.3.4-1/png/png.c ****             if (s00 >= (D >> 1))
3337:fltk-1.3.4-1/png/png.c ****                ++result;
3338:fltk-1.3.4-1/png/png.c **** 
3339:fltk-1.3.4-1/png/png.c ****             if (negative != 0)
3340:fltk-1.3.4-1/png/png.c ****                result = -result;
3341:fltk-1.3.4-1/png/png.c **** 
3342:fltk-1.3.4-1/png/png.c ****             /* Check for overflow. */
3343:fltk-1.3.4-1/png/png.c ****             if ((negative != 0 && result <= 0) ||
3344:fltk-1.3.4-1/png/png.c ****                 (negative == 0 && result >= 0))
3345:fltk-1.3.4-1/png/png.c ****             {
3346:fltk-1.3.4-1/png/png.c ****                *res = result;
3347:fltk-1.3.4-1/png/png.c ****                return 1;
3348:fltk-1.3.4-1/png/png.c ****             }
3349:fltk-1.3.4-1/png/png.c ****          }
3350:fltk-1.3.4-1/png/png.c **** #endif
3351:fltk-1.3.4-1/png/png.c ****       }
3352:fltk-1.3.4-1/png/png.c ****    }
3353:fltk-1.3.4-1/png/png.c **** 
3354:fltk-1.3.4-1/png/png.c ****    return 0;
3355:fltk-1.3.4-1/png/png.c **** }
3356:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA || INCH_CONVERSIONS */
3357:fltk-1.3.4-1/png/png.c **** 
3358:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_GAMMA_SUPPORTED) || defined(PNG_INCH_CONVERSIONS_SUPPORTED)
3359:fltk-1.3.4-1/png/png.c **** /* The following is for when the caller doesn't much care about the
3360:fltk-1.3.4-1/png/png.c ****  * result.
3361:fltk-1.3.4-1/png/png.c ****  */
3362:fltk-1.3.4-1/png/png.c **** png_fixed_point
3363:fltk-1.3.4-1/png/png.c **** png_muldiv_warn(png_const_structrp png_ptr, png_fixed_point a, png_int_32 times,
3364:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
3365:fltk-1.3.4-1/png/png.c **** {
3366:fltk-1.3.4-1/png/png.c ****    png_fixed_point result;
3367:fltk-1.3.4-1/png/png.c **** 
3368:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&result, a, times, divisor) != 0)
3369:fltk-1.3.4-1/png/png.c ****       return result;
3370:fltk-1.3.4-1/png/png.c **** 
3371:fltk-1.3.4-1/png/png.c ****    png_warning(png_ptr, "fixed point overflow ignored");
3372:fltk-1.3.4-1/png/png.c ****    return 0;
3373:fltk-1.3.4-1/png/png.c **** }
3374:fltk-1.3.4-1/png/png.c **** #endif
3375:fltk-1.3.4-1/png/png.c **** 
3376:fltk-1.3.4-1/png/png.c **** #ifdef PNG_GAMMA_SUPPORTED /* more fixed point functions for gamma */
3377:fltk-1.3.4-1/png/png.c **** /* Calculate a reciprocal, return 0 on div-by-zero or overflow. */
3378:fltk-1.3.4-1/png/png.c **** png_fixed_point
3379:fltk-1.3.4-1/png/png.c **** png_reciprocal(png_fixed_point a)
3380:fltk-1.3.4-1/png/png.c **** {
3381:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3382:fltk-1.3.4-1/png/png.c ****    double r = floor(1E10/a+.5);
3383:fltk-1.3.4-1/png/png.c **** 
3384:fltk-1.3.4-1/png/png.c ****    if (r <= 2147483647. && r >= -2147483648.)
3385:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
3386:fltk-1.3.4-1/png/png.c **** #else
3387:fltk-1.3.4-1/png/png.c ****    png_fixed_point res;
3388:fltk-1.3.4-1/png/png.c **** 
3389:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&res, 100000, 100000, a) != 0)
3390:fltk-1.3.4-1/png/png.c ****       return res;
3391:fltk-1.3.4-1/png/png.c **** #endif
3392:fltk-1.3.4-1/png/png.c **** 
3393:fltk-1.3.4-1/png/png.c ****    return 0; /* error/overflow */
3394:fltk-1.3.4-1/png/png.c **** }
3395:fltk-1.3.4-1/png/png.c **** 
3396:fltk-1.3.4-1/png/png.c **** /* This is the shared test on whether a gamma value is 'significant' - whether
3397:fltk-1.3.4-1/png/png.c ****  * it is worth doing gamma correction.
3398:fltk-1.3.4-1/png/png.c ****  */
3399:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
3400:fltk-1.3.4-1/png/png.c **** png_gamma_significant(png_fixed_point gamma_val)
3401:fltk-1.3.4-1/png/png.c **** {
3402:fltk-1.3.4-1/png/png.c ****    return gamma_val < PNG_FP_1 - PNG_GAMMA_THRESHOLD_FIXED ||
3403:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
3404:fltk-1.3.4-1/png/png.c **** }
3405:fltk-1.3.4-1/png/png.c **** #endif
3406:fltk-1.3.4-1/png/png.c **** 
3407:fltk-1.3.4-1/png/png.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3408:fltk-1.3.4-1/png/png.c **** #if defined(PNG_16BIT_SUPPORTED) || !defined(PNG_FLOATING_ARITHMETIC_SUPPORTED)
3409:fltk-1.3.4-1/png/png.c **** /* A local convenience routine. */
3410:fltk-1.3.4-1/png/png.c **** static png_fixed_point
3411:fltk-1.3.4-1/png/png.c **** png_product2(png_fixed_point a, png_fixed_point b)
3412:fltk-1.3.4-1/png/png.c **** {
3413:fltk-1.3.4-1/png/png.c ****    /* The required result is 1/a * 1/b; the following preserves accuracy. */
3414:fltk-1.3.4-1/png/png.c **** #    ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3415:fltk-1.3.4-1/png/png.c ****    double r = a * 1E-5;
3416:fltk-1.3.4-1/png/png.c ****    r *= b;
3417:fltk-1.3.4-1/png/png.c ****    r = floor(r+.5);
3418:fltk-1.3.4-1/png/png.c **** 
3419:fltk-1.3.4-1/png/png.c ****    if (r <= 2147483647. && r >= -2147483648.)
3420:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
3421:fltk-1.3.4-1/png/png.c **** #    else
3422:fltk-1.3.4-1/png/png.c ****    png_fixed_point res;
3423:fltk-1.3.4-1/png/png.c **** 
3424:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&res, a, b, 100000) != 0)
3425:fltk-1.3.4-1/png/png.c ****       return res;
3426:fltk-1.3.4-1/png/png.c **** #    endif
3427:fltk-1.3.4-1/png/png.c **** 
3428:fltk-1.3.4-1/png/png.c ****    return 0; /* overflow */
3429:fltk-1.3.4-1/png/png.c **** }
3430:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT || !FLOATING_ARITHMETIC */
3431:fltk-1.3.4-1/png/png.c **** 
3432:fltk-1.3.4-1/png/png.c **** /* The inverse of the above. */
3433:fltk-1.3.4-1/png/png.c **** png_fixed_point
3434:fltk-1.3.4-1/png/png.c **** png_reciprocal2(png_fixed_point a, png_fixed_point b)
3435:fltk-1.3.4-1/png/png.c **** {
3436:fltk-1.3.4-1/png/png.c ****    /* The required result is 1/a * 1/b; the following preserves accuracy. */
3437:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3438:fltk-1.3.4-1/png/png.c ****    double r = 1E15/a;
3439:fltk-1.3.4-1/png/png.c ****    r /= b;
3440:fltk-1.3.4-1/png/png.c ****    r = floor(r+.5);
3441:fltk-1.3.4-1/png/png.c **** 
3442:fltk-1.3.4-1/png/png.c ****    if (r <= 2147483647. && r >= -2147483648.)
3443:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
3444:fltk-1.3.4-1/png/png.c **** #else
3445:fltk-1.3.4-1/png/png.c ****    /* This may overflow because the range of png_fixed_point isn't symmetric,
3446:fltk-1.3.4-1/png/png.c ****     * but this API is only used for the product of file and screen gamma so it
3447:fltk-1.3.4-1/png/png.c ****     * doesn't matter that the smallest number it can produce is 1/21474, not
3448:fltk-1.3.4-1/png/png.c ****     * 1/100000
3449:fltk-1.3.4-1/png/png.c ****     */
3450:fltk-1.3.4-1/png/png.c ****    png_fixed_point res = png_product2(a, b);
3451:fltk-1.3.4-1/png/png.c **** 
3452:fltk-1.3.4-1/png/png.c ****    if (res != 0)
3453:fltk-1.3.4-1/png/png.c ****       return png_reciprocal(res);
3454:fltk-1.3.4-1/png/png.c **** #endif
3455:fltk-1.3.4-1/png/png.c **** 
3456:fltk-1.3.4-1/png/png.c ****    return 0; /* overflow */
3457:fltk-1.3.4-1/png/png.c **** }
3458:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
3459:fltk-1.3.4-1/png/png.c **** 
3460:fltk-1.3.4-1/png/png.c **** #ifdef PNG_READ_GAMMA_SUPPORTED /* gamma table code */
3461:fltk-1.3.4-1/png/png.c **** #ifndef PNG_FLOATING_ARITHMETIC_SUPPORTED
3462:fltk-1.3.4-1/png/png.c **** /* Fixed point gamma.
3463:fltk-1.3.4-1/png/png.c ****  *
3464:fltk-1.3.4-1/png/png.c ****  * The code to calculate the tables used below can be found in the shell script
3465:fltk-1.3.4-1/png/png.c ****  * contrib/tools/intgamma.sh
3466:fltk-1.3.4-1/png/png.c ****  *
3467:fltk-1.3.4-1/png/png.c ****  * To calculate gamma this code implements fast log() and exp() calls using only
3468:fltk-1.3.4-1/png/png.c ****  * fixed point arithmetic.  This code has sufficient precision for either 8-bit
3469:fltk-1.3.4-1/png/png.c ****  * or 16-bit sample values.
3470:fltk-1.3.4-1/png/png.c ****  *
3471:fltk-1.3.4-1/png/png.c ****  * The tables used here were calculated using simple 'bc' programs, but C double
3472:fltk-1.3.4-1/png/png.c ****  * precision floating point arithmetic would work fine.
3473:fltk-1.3.4-1/png/png.c ****  *
3474:fltk-1.3.4-1/png/png.c ****  * 8-bit log table
3475:fltk-1.3.4-1/png/png.c ****  *   This is a table of -log(value/255)/log(2) for 'value' in the range 128 to
3476:fltk-1.3.4-1/png/png.c ****  *   255, so it's the base 2 logarithm of a normalized 8-bit floating point
3477:fltk-1.3.4-1/png/png.c ****  *   mantissa.  The numbers are 32-bit fractions.
3478:fltk-1.3.4-1/png/png.c ****  */
3479:fltk-1.3.4-1/png/png.c **** static const png_uint_32
3480:fltk-1.3.4-1/png/png.c **** png_8bit_l2[128] =
3481:fltk-1.3.4-1/png/png.c **** {
3482:fltk-1.3.4-1/png/png.c ****    4270715492U, 4222494797U, 4174646467U, 4127164793U, 4080044201U, 4033279239U,
3483:fltk-1.3.4-1/png/png.c ****    3986864580U, 3940795015U, 3895065449U, 3849670902U, 3804606499U, 3759867474U,
3484:fltk-1.3.4-1/png/png.c ****    3715449162U, 3671346997U, 3627556511U, 3584073329U, 3540893168U, 3498011834U,
3485:fltk-1.3.4-1/png/png.c ****    3455425220U, 3413129301U, 3371120137U, 3329393864U, 3287946700U, 3246774933U,
3486:fltk-1.3.4-1/png/png.c ****    3205874930U, 3165243125U, 3124876025U, 3084770202U, 3044922296U, 3005329011U,
3487:fltk-1.3.4-1/png/png.c ****    2965987113U, 2926893432U, 2888044853U, 2849438323U, 2811070844U, 2772939474U,
3488:fltk-1.3.4-1/png/png.c ****    2735041326U, 2697373562U, 2659933400U, 2622718104U, 2585724991U, 2548951424U,
3489:fltk-1.3.4-1/png/png.c ****    2512394810U, 2476052606U, 2439922311U, 2404001468U, 2368287663U, 2332778523U,
3490:fltk-1.3.4-1/png/png.c ****    2297471715U, 2262364947U, 2227455964U, 2192742551U, 2158222529U, 2123893754U,
3491:fltk-1.3.4-1/png/png.c ****    2089754119U, 2055801552U, 2022034013U, 1988449497U, 1955046031U, 1921821672U,
3492:fltk-1.3.4-1/png/png.c ****    1888774511U, 1855902668U, 1823204291U, 1790677560U, 1758320682U, 1726131893U,
3493:fltk-1.3.4-1/png/png.c ****    1694109454U, 1662251657U, 1630556815U, 1599023271U, 1567649391U, 1536433567U,
3494:fltk-1.3.4-1/png/png.c ****    1505374214U, 1474469770U, 1443718700U, 1413119487U, 1382670639U, 1352370686U,
3495:fltk-1.3.4-1/png/png.c ****    1322218179U, 1292211689U, 1262349810U, 1232631153U, 1203054352U, 1173618059U,
3496:fltk-1.3.4-1/png/png.c ****    1144320946U, 1115161701U, 1086139034U, 1057251672U, 1028498358U, 999877854U,
3497:fltk-1.3.4-1/png/png.c ****    971388940U, 943030410U, 914801076U, 886699767U, 858725327U, 830876614U,
3498:fltk-1.3.4-1/png/png.c ****    803152505U, 775551890U, 748073672U, 720716771U, 693480120U, 666362667U,
3499:fltk-1.3.4-1/png/png.c ****    639363374U, 612481215U, 585715177U, 559064263U, 532527486U, 506103872U,
3500:fltk-1.3.4-1/png/png.c ****    479792461U, 453592303U, 427502463U, 401522014U, 375650043U, 349885648U,
3501:fltk-1.3.4-1/png/png.c ****    324227938U, 298676034U, 273229066U, 247886176U, 222646516U, 197509248U,
3502:fltk-1.3.4-1/png/png.c ****    172473545U, 147538590U, 122703574U, 97967701U, 73330182U, 48790236U,
3503:fltk-1.3.4-1/png/png.c ****    24347096U, 0U
3504:fltk-1.3.4-1/png/png.c **** 
3505:fltk-1.3.4-1/png/png.c **** #if 0
3506:fltk-1.3.4-1/png/png.c ****    /* The following are the values for 16-bit tables - these work fine for the
3507:fltk-1.3.4-1/png/png.c ****     * 8-bit conversions but produce very slightly larger errors in the 16-bit
3508:fltk-1.3.4-1/png/png.c ****     * log (about 1.2 as opposed to 0.7 absolute error in the final value).  To
3509:fltk-1.3.4-1/png/png.c ****     * use these all the shifts below must be adjusted appropriately.
3510:fltk-1.3.4-1/png/png.c ****     */
3511:fltk-1.3.4-1/png/png.c ****    65166, 64430, 63700, 62976, 62257, 61543, 60835, 60132, 59434, 58741, 58054,
3512:fltk-1.3.4-1/png/png.c ****    57371, 56693, 56020, 55352, 54689, 54030, 53375, 52726, 52080, 51439, 50803,
3513:fltk-1.3.4-1/png/png.c ****    50170, 49542, 48918, 48298, 47682, 47070, 46462, 45858, 45257, 44661, 44068,
3514:fltk-1.3.4-1/png/png.c ****    43479, 42894, 42312, 41733, 41159, 40587, 40020, 39455, 38894, 38336, 37782,
3515:fltk-1.3.4-1/png/png.c ****    37230, 36682, 36137, 35595, 35057, 34521, 33988, 33459, 32932, 32408, 31887,
3516:fltk-1.3.4-1/png/png.c ****    31369, 30854, 30341, 29832, 29325, 28820, 28319, 27820, 27324, 26830, 26339,
3517:fltk-1.3.4-1/png/png.c ****    25850, 25364, 24880, 24399, 23920, 23444, 22970, 22499, 22029, 21562, 21098,
3518:fltk-1.3.4-1/png/png.c ****    20636, 20175, 19718, 19262, 18808, 18357, 17908, 17461, 17016, 16573, 16132,
3519:fltk-1.3.4-1/png/png.c ****    15694, 15257, 14822, 14390, 13959, 13530, 13103, 12678, 12255, 11834, 11415,
3520:fltk-1.3.4-1/png/png.c ****    10997, 10582, 10168, 9756, 9346, 8937, 8531, 8126, 7723, 7321, 6921, 6523,
3521:fltk-1.3.4-1/png/png.c ****    6127, 5732, 5339, 4947, 4557, 4169, 3782, 3397, 3014, 2632, 2251, 1872, 1495,
3522:fltk-1.3.4-1/png/png.c ****    1119, 744, 372
3523:fltk-1.3.4-1/png/png.c **** #endif
3524:fltk-1.3.4-1/png/png.c **** };
3525:fltk-1.3.4-1/png/png.c **** 
3526:fltk-1.3.4-1/png/png.c **** static png_int_32
3527:fltk-1.3.4-1/png/png.c **** png_log8bit(unsigned int x)
3528:fltk-1.3.4-1/png/png.c **** {
3529:fltk-1.3.4-1/png/png.c ****    unsigned int lg2 = 0;
3530:fltk-1.3.4-1/png/png.c ****    /* Each time 'x' is multiplied by 2, 1 must be subtracted off the final log,
3531:fltk-1.3.4-1/png/png.c ****     * because the log is actually negate that means adding 1.  The final
3532:fltk-1.3.4-1/png/png.c ****     * returned value thus has the range 0 (for 255 input) to 7.994 (for 1
3533:fltk-1.3.4-1/png/png.c ****     * input), return -1 for the overflow (log 0) case, - so the result is
3534:fltk-1.3.4-1/png/png.c ****     * always at most 19 bits.
3535:fltk-1.3.4-1/png/png.c ****     */
3536:fltk-1.3.4-1/png/png.c ****    if ((x &= 0xff) == 0)
3537:fltk-1.3.4-1/png/png.c ****       return -1;
3538:fltk-1.3.4-1/png/png.c **** 
3539:fltk-1.3.4-1/png/png.c ****    if ((x & 0xf0) == 0)
3540:fltk-1.3.4-1/png/png.c ****       lg2  = 4, x <<= 4;
3541:fltk-1.3.4-1/png/png.c **** 
3542:fltk-1.3.4-1/png/png.c ****    if ((x & 0xc0) == 0)
3543:fltk-1.3.4-1/png/png.c ****       lg2 += 2, x <<= 2;
3544:fltk-1.3.4-1/png/png.c **** 
3545:fltk-1.3.4-1/png/png.c ****    if ((x & 0x80) == 0)
3546:fltk-1.3.4-1/png/png.c ****       lg2 += 1, x <<= 1;
3547:fltk-1.3.4-1/png/png.c **** 
3548:fltk-1.3.4-1/png/png.c ****    /* result is at most 19 bits, so this cast is safe: */
3549:fltk-1.3.4-1/png/png.c ****    return (png_int_32)((lg2 << 16) + ((png_8bit_l2[x-128]+32768)>>16));
3550:fltk-1.3.4-1/png/png.c **** }
3551:fltk-1.3.4-1/png/png.c **** 
3552:fltk-1.3.4-1/png/png.c **** /* The above gives exact (to 16 binary places) log2 values for 8-bit images,
3553:fltk-1.3.4-1/png/png.c ****  * for 16-bit images we use the most significant 8 bits of the 16-bit value to
3554:fltk-1.3.4-1/png/png.c ****  * get an approximation then multiply the approximation by a correction factor
3555:fltk-1.3.4-1/png/png.c ****  * determined by the remaining up to 8 bits.  This requires an additional step
3556:fltk-1.3.4-1/png/png.c ****  * in the 16-bit case.
3557:fltk-1.3.4-1/png/png.c ****  *
3558:fltk-1.3.4-1/png/png.c ****  * We want log2(value/65535), we have log2(v'/255), where:
3559:fltk-1.3.4-1/png/png.c ****  *
3560:fltk-1.3.4-1/png/png.c ****  *    value = v' * 256 + v''
3561:fltk-1.3.4-1/png/png.c ****  *          = v' * f
3562:fltk-1.3.4-1/png/png.c ****  *
3563:fltk-1.3.4-1/png/png.c ****  * So f is value/v', which is equal to (256+v''/v') since v' is in the range 128
3564:fltk-1.3.4-1/png/png.c ****  * to 255 and v'' is in the range 0 to 255 f will be in the range 256 to less
3565:fltk-1.3.4-1/png/png.c ****  * than 258.  The final factor also needs to correct for the fact that our 8-bit
3566:fltk-1.3.4-1/png/png.c ****  * value is scaled by 255, whereas the 16-bit values must be scaled by 65535.
3567:fltk-1.3.4-1/png/png.c ****  *
3568:fltk-1.3.4-1/png/png.c ****  * This gives a final formula using a calculated value 'x' which is value/v' and
3569:fltk-1.3.4-1/png/png.c ****  * scaling by 65536 to match the above table:
3570:fltk-1.3.4-1/png/png.c ****  *
3571:fltk-1.3.4-1/png/png.c ****  *   log2(x/257) * 65536
3572:fltk-1.3.4-1/png/png.c ****  *
3573:fltk-1.3.4-1/png/png.c ****  * Since these numbers are so close to '1' we can use simple linear
3574:fltk-1.3.4-1/png/png.c ****  * interpolation between the two end values 256/257 (result -368.61) and 258/257
3575:fltk-1.3.4-1/png/png.c ****  * (result 367.179).  The values used below are scaled by a further 64 to give
3576:fltk-1.3.4-1/png/png.c ****  * 16-bit precision in the interpolation:
3577:fltk-1.3.4-1/png/png.c ****  *
3578:fltk-1.3.4-1/png/png.c ****  * Start (256): -23591
3579:fltk-1.3.4-1/png/png.c ****  * Zero  (257):      0
3580:fltk-1.3.4-1/png/png.c ****  * End   (258):  23499
3581:fltk-1.3.4-1/png/png.c ****  */
3582:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
3583:fltk-1.3.4-1/png/png.c **** static png_int_32
3584:fltk-1.3.4-1/png/png.c **** png_log16bit(png_uint_32 x)
3585:fltk-1.3.4-1/png/png.c **** {
3586:fltk-1.3.4-1/png/png.c ****    unsigned int lg2 = 0;
3587:fltk-1.3.4-1/png/png.c **** 
3588:fltk-1.3.4-1/png/png.c ****    /* As above, but now the input has 16 bits. */
3589:fltk-1.3.4-1/png/png.c ****    if ((x &= 0xffff) == 0)
3590:fltk-1.3.4-1/png/png.c ****       return -1;
3591:fltk-1.3.4-1/png/png.c **** 
3592:fltk-1.3.4-1/png/png.c ****    if ((x & 0xff00) == 0)
3593:fltk-1.3.4-1/png/png.c ****       lg2  = 8, x <<= 8;
3594:fltk-1.3.4-1/png/png.c **** 
3595:fltk-1.3.4-1/png/png.c ****    if ((x & 0xf000) == 0)
3596:fltk-1.3.4-1/png/png.c ****       lg2 += 4, x <<= 4;
3597:fltk-1.3.4-1/png/png.c **** 
3598:fltk-1.3.4-1/png/png.c ****    if ((x & 0xc000) == 0)
3599:fltk-1.3.4-1/png/png.c ****       lg2 += 2, x <<= 2;
3600:fltk-1.3.4-1/png/png.c **** 
3601:fltk-1.3.4-1/png/png.c ****    if ((x & 0x8000) == 0)
3602:fltk-1.3.4-1/png/png.c ****       lg2 += 1, x <<= 1;
3603:fltk-1.3.4-1/png/png.c **** 
3604:fltk-1.3.4-1/png/png.c ****    /* Calculate the base logarithm from the top 8 bits as a 28-bit fractional
3605:fltk-1.3.4-1/png/png.c ****     * value.
3606:fltk-1.3.4-1/png/png.c ****     */
3607:fltk-1.3.4-1/png/png.c ****    lg2 <<= 28;
3608:fltk-1.3.4-1/png/png.c ****    lg2 += (png_8bit_l2[(x>>8)-128]+8) >> 4;
3609:fltk-1.3.4-1/png/png.c **** 
3610:fltk-1.3.4-1/png/png.c ****    /* Now we need to interpolate the factor, this requires a division by the top
3611:fltk-1.3.4-1/png/png.c ****     * 8 bits.  Do this with maximum precision.
3612:fltk-1.3.4-1/png/png.c ****     */
3613:fltk-1.3.4-1/png/png.c ****    x = ((x << 16) + (x >> 9)) / (x >> 8);
3614:fltk-1.3.4-1/png/png.c **** 
3615:fltk-1.3.4-1/png/png.c ****    /* Since we divided by the top 8 bits of 'x' there will be a '1' at 1<<24,
3616:fltk-1.3.4-1/png/png.c ****     * the value at 1<<16 (ignoring this) will be 0 or 1; this gives us exactly
3617:fltk-1.3.4-1/png/png.c ****     * 16 bits to interpolate to get the low bits of the result.  Round the
3618:fltk-1.3.4-1/png/png.c ****     * answer.  Note that the end point values are scaled by 64 to retain overall
3619:fltk-1.3.4-1/png/png.c ****     * precision and that 'lg2' is current scaled by an extra 12 bits, so adjust
3620:fltk-1.3.4-1/png/png.c ****     * the overall scaling by 6-12.  Round at every step.
3621:fltk-1.3.4-1/png/png.c ****     */
3622:fltk-1.3.4-1/png/png.c ****    x -= 1U << 24;
3623:fltk-1.3.4-1/png/png.c **** 
3624:fltk-1.3.4-1/png/png.c ****    if (x <= 65536U) /* <= '257' */
3625:fltk-1.3.4-1/png/png.c ****       lg2 += ((23591U * (65536U-x)) + (1U << (16+6-12-1))) >> (16+6-12);
3626:fltk-1.3.4-1/png/png.c **** 
3627:fltk-1.3.4-1/png/png.c ****    else
3628:fltk-1.3.4-1/png/png.c ****       lg2 -= ((23499U * (x-65536U)) + (1U << (16+6-12-1))) >> (16+6-12);
3629:fltk-1.3.4-1/png/png.c **** 
3630:fltk-1.3.4-1/png/png.c ****    /* Safe, because the result can't have more than 20 bits: */
3631:fltk-1.3.4-1/png/png.c ****    return (png_int_32)((lg2 + 2048) >> 12);
3632:fltk-1.3.4-1/png/png.c **** }
3633:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
3634:fltk-1.3.4-1/png/png.c **** 
3635:fltk-1.3.4-1/png/png.c **** /* The 'exp()' case must invert the above, taking a 20-bit fixed point
3636:fltk-1.3.4-1/png/png.c ****  * logarithmic value and returning a 16 or 8-bit number as appropriate.  In
3637:fltk-1.3.4-1/png/png.c ****  * each case only the low 16 bits are relevant - the fraction - since the
3638:fltk-1.3.4-1/png/png.c ****  * integer bits (the top 4) simply determine a shift.
3639:fltk-1.3.4-1/png/png.c ****  *
3640:fltk-1.3.4-1/png/png.c ****  * The worst case is the 16-bit distinction between 65535 and 65534. This
3641:fltk-1.3.4-1/png/png.c ****  * requires perhaps spurious accuracy in the decoding of the logarithm to
3642:fltk-1.3.4-1/png/png.c ****  * distinguish log2(65535/65534.5) - 10^-5 or 17 bits.  There is little chance
3643:fltk-1.3.4-1/png/png.c ****  * of getting this accuracy in practice.
3644:fltk-1.3.4-1/png/png.c ****  *
3645:fltk-1.3.4-1/png/png.c ****  * To deal with this the following exp() function works out the exponent of the
3646:fltk-1.3.4-1/png/png.c ****  * frational part of the logarithm by using an accurate 32-bit value from the
3647:fltk-1.3.4-1/png/png.c ****  * top four fractional bits then multiplying in the remaining bits.
3648:fltk-1.3.4-1/png/png.c ****  */
3649:fltk-1.3.4-1/png/png.c **** static const png_uint_32
3650:fltk-1.3.4-1/png/png.c **** png_32bit_exp[16] =
3651:fltk-1.3.4-1/png/png.c **** {
3652:fltk-1.3.4-1/png/png.c ****    /* NOTE: the first entry is deliberately set to the maximum 32-bit value. */
3653:fltk-1.3.4-1/png/png.c ****    4294967295U, 4112874773U, 3938502376U, 3771522796U, 3611622603U, 3458501653U,
3654:fltk-1.3.4-1/png/png.c ****    3311872529U, 3171459999U, 3037000500U, 2908241642U, 2784941738U, 2666869345U,
3655:fltk-1.3.4-1/png/png.c ****    2553802834U, 2445529972U, 2341847524U, 2242560872U
3656:fltk-1.3.4-1/png/png.c **** };
3657:fltk-1.3.4-1/png/png.c **** 
3658:fltk-1.3.4-1/png/png.c **** /* Adjustment table; provided to explain the numbers in the code below. */
3659:fltk-1.3.4-1/png/png.c **** #if 0
3660:fltk-1.3.4-1/png/png.c **** for (i=11;i>=0;--i){ print i, " ", (1 - e(-(2^i)/65536*l(2))) * 2^(32-i), "\n"}
3661:fltk-1.3.4-1/png/png.c ****    11 44937.64284865548751208448
3662:fltk-1.3.4-1/png/png.c ****    10 45180.98734845585101160448
3663:fltk-1.3.4-1/png/png.c ****     9 45303.31936980687359311872
3664:fltk-1.3.4-1/png/png.c ****     8 45364.65110595323018870784
3665:fltk-1.3.4-1/png/png.c ****     7 45395.35850361789624614912
3666:fltk-1.3.4-1/png/png.c ****     6 45410.72259715102037508096
3667:fltk-1.3.4-1/png/png.c ****     5 45418.40724413220722311168
3668:fltk-1.3.4-1/png/png.c ****     4 45422.25021786898173001728
3669:fltk-1.3.4-1/png/png.c ****     3 45424.17186732298419044352
3670:fltk-1.3.4-1/png/png.c ****     2 45425.13273269940811464704
3671:fltk-1.3.4-1/png/png.c ****     1 45425.61317555035558641664
3672:fltk-1.3.4-1/png/png.c ****     0 45425.85339951654943850496
3673:fltk-1.3.4-1/png/png.c **** #endif
3674:fltk-1.3.4-1/png/png.c **** 
3675:fltk-1.3.4-1/png/png.c **** static png_uint_32
3676:fltk-1.3.4-1/png/png.c **** png_exp(png_fixed_point x)
3677:fltk-1.3.4-1/png/png.c **** {
3678:fltk-1.3.4-1/png/png.c ****    if (x > 0 && x <= 0xfffff) /* Else overflow or zero (underflow) */
3679:fltk-1.3.4-1/png/png.c ****    {
3680:fltk-1.3.4-1/png/png.c ****       /* Obtain a 4-bit approximation */
3681:fltk-1.3.4-1/png/png.c ****       png_uint_32 e = png_32bit_exp[(x >> 12) & 0xf];
3682:fltk-1.3.4-1/png/png.c **** 
3683:fltk-1.3.4-1/png/png.c ****       /* Incorporate the low 12 bits - these decrease the returned value by
3684:fltk-1.3.4-1/png/png.c ****        * multiplying by a number less than 1 if the bit is set.  The multiplier
3685:fltk-1.3.4-1/png/png.c ****        * is determined by the above table and the shift. Notice that the values
3686:fltk-1.3.4-1/png/png.c ****        * converge on 45426 and this is used to allow linear interpolation of the
3687:fltk-1.3.4-1/png/png.c ****        * low bits.
3688:fltk-1.3.4-1/png/png.c ****        */
3689:fltk-1.3.4-1/png/png.c ****       if (x & 0x800)
3690:fltk-1.3.4-1/png/png.c ****          e -= (((e >> 16) * 44938U) +  16U) >> 5;
3691:fltk-1.3.4-1/png/png.c **** 
3692:fltk-1.3.4-1/png/png.c ****       if (x & 0x400)
3693:fltk-1.3.4-1/png/png.c ****          e -= (((e >> 16) * 45181U) +  32U) >> 6;
3694:fltk-1.3.4-1/png/png.c **** 
3695:fltk-1.3.4-1/png/png.c ****       if (x & 0x200)
3696:fltk-1.3.4-1/png/png.c ****          e -= (((e >> 16) * 45303U) +  64U) >> 7;
3697:fltk-1.3.4-1/png/png.c **** 
3698:fltk-1.3.4-1/png/png.c ****       if (x & 0x100)
3699:fltk-1.3.4-1/png/png.c ****          e -= (((e >> 16) * 45365U) + 128U) >> 8;
3700:fltk-1.3.4-1/png/png.c **** 
3701:fltk-1.3.4-1/png/png.c ****       if (x & 0x080)
3702:fltk-1.3.4-1/png/png.c ****          e -= (((e >> 16) * 45395U) + 256U) >> 9;
3703:fltk-1.3.4-1/png/png.c **** 
3704:fltk-1.3.4-1/png/png.c ****       if (x & 0x040)
3705:fltk-1.3.4-1/png/png.c ****          e -= (((e >> 16) * 45410U) + 512U) >> 10;
3706:fltk-1.3.4-1/png/png.c **** 
3707:fltk-1.3.4-1/png/png.c ****       /* And handle the low 6 bits in a single block. */
3708:fltk-1.3.4-1/png/png.c ****       e -= (((e >> 16) * 355U * (x & 0x3fU)) + 256U) >> 9;
3709:fltk-1.3.4-1/png/png.c **** 
3710:fltk-1.3.4-1/png/png.c ****       /* Handle the upper bits of x. */
3711:fltk-1.3.4-1/png/png.c ****       e >>= x >> 16;
3712:fltk-1.3.4-1/png/png.c ****       return e;
3713:fltk-1.3.4-1/png/png.c ****    }
3714:fltk-1.3.4-1/png/png.c **** 
3715:fltk-1.3.4-1/png/png.c ****    /* Check for overflow */
3716:fltk-1.3.4-1/png/png.c ****    if (x <= 0)
3717:fltk-1.3.4-1/png/png.c ****       return png_32bit_exp[0];
3718:fltk-1.3.4-1/png/png.c **** 
3719:fltk-1.3.4-1/png/png.c ****    /* Else underflow */
3720:fltk-1.3.4-1/png/png.c ****    return 0;
3721:fltk-1.3.4-1/png/png.c **** }
3722:fltk-1.3.4-1/png/png.c **** 
3723:fltk-1.3.4-1/png/png.c **** static png_byte
3724:fltk-1.3.4-1/png/png.c **** png_exp8bit(png_fixed_point lg2)
3725:fltk-1.3.4-1/png/png.c **** {
3726:fltk-1.3.4-1/png/png.c ****    /* Get a 32-bit value: */
3727:fltk-1.3.4-1/png/png.c ****    png_uint_32 x = png_exp(lg2);
3728:fltk-1.3.4-1/png/png.c **** 
3729:fltk-1.3.4-1/png/png.c ****    /* Convert the 32-bit value to 0..255 by multiplying by 256-1. Note that the
3730:fltk-1.3.4-1/png/png.c ****     * second, rounding, step can't overflow because of the first, subtraction,
3731:fltk-1.3.4-1/png/png.c ****     * step.
3732:fltk-1.3.4-1/png/png.c ****     */
3733:fltk-1.3.4-1/png/png.c ****    x -= x >> 8;
3734:fltk-1.3.4-1/png/png.c ****    return (png_byte)((x + 0x7fffffU) >> 24);
3735:fltk-1.3.4-1/png/png.c **** }
3736:fltk-1.3.4-1/png/png.c **** 
3737:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
3738:fltk-1.3.4-1/png/png.c **** static png_uint_16
3739:fltk-1.3.4-1/png/png.c **** png_exp16bit(png_fixed_point lg2)
3740:fltk-1.3.4-1/png/png.c **** {
3741:fltk-1.3.4-1/png/png.c ****    /* Get a 32-bit value: */
3742:fltk-1.3.4-1/png/png.c ****    png_uint_32 x = png_exp(lg2);
3743:fltk-1.3.4-1/png/png.c **** 
3744:fltk-1.3.4-1/png/png.c ****    /* Convert the 32-bit value to 0..65535 by multiplying by 65536-1: */
3745:fltk-1.3.4-1/png/png.c ****    x -= x >> 16;
3746:fltk-1.3.4-1/png/png.c ****    return (png_uint_16)((x + 32767U) >> 16);
3747:fltk-1.3.4-1/png/png.c **** }
3748:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
3749:fltk-1.3.4-1/png/png.c **** #endif /* FLOATING_ARITHMETIC */
3750:fltk-1.3.4-1/png/png.c **** 
3751:fltk-1.3.4-1/png/png.c **** png_byte
3752:fltk-1.3.4-1/png/png.c **** png_gamma_8bit_correct(unsigned int value, png_fixed_point gamma_val)
3753:fltk-1.3.4-1/png/png.c **** {
3754:fltk-1.3.4-1/png/png.c ****    if (value > 0 && value < 255)
3755:fltk-1.3.4-1/png/png.c ****    {
3756:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3757:fltk-1.3.4-1/png/png.c ****          /* 'value' is unsigned, ANSI-C90 requires the compiler to correctly
3758:fltk-1.3.4-1/png/png.c ****           * convert this to a floating point value.  This includes values that
3759:fltk-1.3.4-1/png/png.c ****           * would overflow if 'value' were to be converted to 'int'.
3760:fltk-1.3.4-1/png/png.c ****           *
3761:fltk-1.3.4-1/png/png.c ****           * Apparently GCC, however, does an intermediate conversion to (int)
3762:fltk-1.3.4-1/png/png.c ****           * on some (ARM) but not all (x86) platforms, possibly because of
3763:fltk-1.3.4-1/png/png.c ****           * hardware FP limitations.  (E.g. if the hardware conversion always
3764:fltk-1.3.4-1/png/png.c ****           * assumes the integer register contains a signed value.)  This results
3765:fltk-1.3.4-1/png/png.c ****           * in ANSI-C undefined behavior for large values.
3766:fltk-1.3.4-1/png/png.c ****           *
3767:fltk-1.3.4-1/png/png.c ****           * Other implementations on the same machine might actually be ANSI-C90
3768:fltk-1.3.4-1/png/png.c ****           * conformant and therefore compile spurious extra code for the large
3769:fltk-1.3.4-1/png/png.c ****           * values.
3770:fltk-1.3.4-1/png/png.c ****           *
3771:fltk-1.3.4-1/png/png.c ****           * We can be reasonably sure that an unsigned to float conversion
3772:fltk-1.3.4-1/png/png.c ****           * won't be faster than an int to float one.  Therefore this code
3773:fltk-1.3.4-1/png/png.c ****           * assumes responsibility for the undefined behavior, which it knows
3774:fltk-1.3.4-1/png/png.c ****           * can't happen because of the check above.
3775:fltk-1.3.4-1/png/png.c ****           *
3776:fltk-1.3.4-1/png/png.c ****           * Note the argument to this routine is an (unsigned int) because, on
3777:fltk-1.3.4-1/png/png.c ****           * 16-bit platforms, it is assigned a value which might be out of
3778:fltk-1.3.4-1/png/png.c ****           * range for an (int); that would result in undefined behavior in the
3779:fltk-1.3.4-1/png/png.c ****           * caller if the *argument* ('value') were to be declared (int).
3780:fltk-1.3.4-1/png/png.c ****           */
3781:fltk-1.3.4-1/png/png.c ****          double r = floor(255*pow((int)/*SAFE*/value/255.,gamma_val*.00001)+.5);
3782:fltk-1.3.4-1/png/png.c ****          return (png_byte)r;
3783:fltk-1.3.4-1/png/png.c **** #     else
3784:fltk-1.3.4-1/png/png.c ****          png_int_32 lg2 = png_log8bit(value);
3785:fltk-1.3.4-1/png/png.c ****          png_fixed_point res;
3786:fltk-1.3.4-1/png/png.c **** 
3787:fltk-1.3.4-1/png/png.c ****          if (png_muldiv(&res, gamma_val, lg2, PNG_FP_1) != 0)
3788:fltk-1.3.4-1/png/png.c ****             return png_exp8bit(res);
3789:fltk-1.3.4-1/png/png.c **** 
3790:fltk-1.3.4-1/png/png.c ****          /* Overflow. */
3791:fltk-1.3.4-1/png/png.c ****          value = 0;
3792:fltk-1.3.4-1/png/png.c **** #     endif
3793:fltk-1.3.4-1/png/png.c ****    }
3794:fltk-1.3.4-1/png/png.c **** 
3795:fltk-1.3.4-1/png/png.c ****    return (png_byte)value;
3796:fltk-1.3.4-1/png/png.c **** }
3797:fltk-1.3.4-1/png/png.c **** 
3798:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
3799:fltk-1.3.4-1/png/png.c **** png_uint_16
3800:fltk-1.3.4-1/png/png.c **** png_gamma_16bit_correct(unsigned int value, png_fixed_point gamma_val)
3801:fltk-1.3.4-1/png/png.c **** {
3802:fltk-1.3.4-1/png/png.c ****    if (value > 0 && value < 65535)
3803:fltk-1.3.4-1/png/png.c ****    {
3804:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3805:fltk-1.3.4-1/png/png.c ****          /* The same (unsigned int)->(double) constraints apply here as above,
3806:fltk-1.3.4-1/png/png.c ****           * however in this case the (unsigned int) to (int) conversion can
3807:fltk-1.3.4-1/png/png.c ****           * overflow on an ANSI-C90 compliant system so the cast needs to ensure
3808:fltk-1.3.4-1/png/png.c ****           * that this is not possible.
3809:fltk-1.3.4-1/png/png.c ****           */
3810:fltk-1.3.4-1/png/png.c ****          double r = floor(65535*pow((png_int_32)value/65535.,
3811:fltk-1.3.4-1/png/png.c ****                      gamma_val*.00001)+.5);
3812:fltk-1.3.4-1/png/png.c ****          return (png_uint_16)r;
3813:fltk-1.3.4-1/png/png.c **** #     else
3814:fltk-1.3.4-1/png/png.c ****          png_int_32 lg2 = png_log16bit(value);
3815:fltk-1.3.4-1/png/png.c ****          png_fixed_point res;
3816:fltk-1.3.4-1/png/png.c **** 
3817:fltk-1.3.4-1/png/png.c ****          if (png_muldiv(&res, gamma_val, lg2, PNG_FP_1) != 0)
3818:fltk-1.3.4-1/png/png.c ****             return png_exp16bit(res);
3819:fltk-1.3.4-1/png/png.c **** 
3820:fltk-1.3.4-1/png/png.c ****          /* Overflow. */
3821:fltk-1.3.4-1/png/png.c ****          value = 0;
3822:fltk-1.3.4-1/png/png.c **** #     endif
3823:fltk-1.3.4-1/png/png.c ****    }
3824:fltk-1.3.4-1/png/png.c **** 
3825:fltk-1.3.4-1/png/png.c ****    return (png_uint_16)value;
3826:fltk-1.3.4-1/png/png.c **** }
3827:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
3828:fltk-1.3.4-1/png/png.c **** 
3829:fltk-1.3.4-1/png/png.c **** /* This does the right thing based on the bit_depth field of the
3830:fltk-1.3.4-1/png/png.c ****  * png_struct, interpreting values as 8-bit or 16-bit.  While the result
3831:fltk-1.3.4-1/png/png.c ****  * is nominally a 16-bit value if bit depth is 8 then the result is
3832:fltk-1.3.4-1/png/png.c ****  * 8-bit (as are the arguments.)
3833:fltk-1.3.4-1/png/png.c ****  */
3834:fltk-1.3.4-1/png/png.c **** png_uint_16 /* PRIVATE */
3835:fltk-1.3.4-1/png/png.c **** png_gamma_correct(png_structrp png_ptr, unsigned int value,
3836:fltk-1.3.4-1/png/png.c ****     png_fixed_point gamma_val)
3837:fltk-1.3.4-1/png/png.c **** {
3838:fltk-1.3.4-1/png/png.c ****    if (png_ptr->bit_depth == 8)
3839:fltk-1.3.4-1/png/png.c ****       return png_gamma_8bit_correct(value, gamma_val);
3840:fltk-1.3.4-1/png/png.c **** 
3841:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
3842:fltk-1.3.4-1/png/png.c ****    else
3843:fltk-1.3.4-1/png/png.c ****       return png_gamma_16bit_correct(value, gamma_val);
3844:fltk-1.3.4-1/png/png.c **** #else
3845:fltk-1.3.4-1/png/png.c ****       /* should not reach this */
3846:fltk-1.3.4-1/png/png.c ****       return 0;
3847:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
3848:fltk-1.3.4-1/png/png.c **** }
3849:fltk-1.3.4-1/png/png.c **** 
3850:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
3851:fltk-1.3.4-1/png/png.c **** /* Internal function to build a single 16-bit table - the table consists of
3852:fltk-1.3.4-1/png/png.c ****  * 'num' 256 entry subtables, where 'num' is determined by 'shift' - the amount
3853:fltk-1.3.4-1/png/png.c ****  * to shift the input values right (or 16-number_of_signifiant_bits).
3854:fltk-1.3.4-1/png/png.c ****  *
3855:fltk-1.3.4-1/png/png.c ****  * The caller is responsible for ensuring that the table gets cleaned up on
3856:fltk-1.3.4-1/png/png.c ****  * png_error (i.e. if one of the mallocs below fails) - i.e. the *table argument
3857:fltk-1.3.4-1/png/png.c ****  * should be somewhere that will be cleaned.
3858:fltk-1.3.4-1/png/png.c ****  */
3859:fltk-1.3.4-1/png/png.c **** static void
3860:fltk-1.3.4-1/png/png.c **** png_build_16bit_table(png_structrp png_ptr, png_uint_16pp *ptable,
3861:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int shift, PNG_CONST png_fixed_point gamma_val)
3862:fltk-1.3.4-1/png/png.c **** {
 475              		.loc 1 3862 1 is_stmt 1 view -0
 476              		.cfi_startproc
3863:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
3864:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int num = 1U << (8U - shift);
 477              		.loc 1 3864 4 view .LVU144
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 478              		.loc 1 3862 1 is_stmt 0 view .LVU145
 479 0000 4157     		pushq	%r15
 480              		.cfi_def_cfa_offset 16
 481              		.cfi_offset 15, -16
3865:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3866:fltk-1.3.4-1/png/png.c ****    /* CSE the division and work round wacky GCC warnings (see the comments
3867:fltk-1.3.4-1/png/png.c ****     * in png_gamma_8bit_correct for where these come from.)
3868:fltk-1.3.4-1/png/png.c ****     */
3869:fltk-1.3.4-1/png/png.c ****    PNG_CONST double fmax = 1./(((png_int_32)1 << (16U - shift))-1);
 482              		.loc 1 3869 30 view .LVU146
 483 0002 660FEFC0 		pxor	%xmm0, %xmm0
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 484              		.loc 1 3862 1 view .LVU147
 485 0006 4989F7   		movq	%rsi, %r15
 486 0009 4156     		pushq	%r14
 487              		.cfi_def_cfa_offset 24
 488              		.cfi_offset 14, -24
3864:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 489              		.loc 1 3864 27 view .LVU148
 490 000b 41BE0100 		movl	$1, %r14d
 490      0000
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 491              		.loc 1 3862 1 view .LVU149
 492 0011 4155     		pushq	%r13
 493              		.cfi_def_cfa_offset 32
 494              		.cfi_offset 13, -32
 495              		.loc 1 3869 47 view .LVU150
 496 0013 4589F5   		movl	%r14d, %r13d
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 497              		.loc 1 3862 1 view .LVU151
 498 0016 4154     		pushq	%r12
 499              		.cfi_def_cfa_offset 40
 500              		.cfi_offset 12, -40
 501 0018 4189D4   		movl	%edx, %r12d
 502 001b 55       		pushq	%rbp
 503              		.cfi_def_cfa_offset 48
 504              		.cfi_offset 6, -48
3864:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 505              		.loc 1 3864 43 view .LVU152
 506 001c BD080000 		movl	$8, %ebp
 506      00
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 507              		.loc 1 3862 1 view .LVU153
 508 0021 53       		pushq	%rbx
 509              		.cfi_def_cfa_offset 56
 510              		.cfi_offset 3, -56
3864:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 511              		.loc 1 3864 43 view .LVU154
 512 0022 29D5     		subl	%edx, %ebp
3864:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 513              		.loc 1 3864 27 view .LVU155
 514 0024 4489F3   		movl	%r14d, %ebx
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 515              		.loc 1 3862 1 view .LVU156
 516 0027 4883EC48 		subq	$72, %rsp
 517              		.cfi_def_cfa_offset 128
 518              		.loc 1 3869 21 view .LVU157
 519 002b F20F103D 		movsd	.LC1(%rip), %xmm7
 519      00000000 
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 520              		.loc 1 3862 1 view .LVU158
 521 0033 894C243C 		movl	%ecx, 60(%rsp)
3864:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 522              		.loc 1 3864 27 view .LVU159
 523 0037 89E9     		movl	%ebp, %ecx
 524              	.LVL41:
3864:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 525              		.loc 1 3864 27 view .LVU160
 526 0039 D3E3     		sall	%cl, %ebx
 527              	.LVL42:
 528              		.loc 1 3869 4 is_stmt 1 view .LVU161
 529              		.loc 1 3869 55 is_stmt 0 view .LVU162
 530 003b B9100000 		movl	$16, %ecx
 530      00
3862:fltk-1.3.4-1/png/png.c ****    /* Various values derived from 'shift': */
 531              		.loc 1 3862 1 view .LVU163
 532 0040 48897C24 		movq	%rdi, 48(%rsp)
 532      30
 533              		.loc 1 3869 55 view .LVU164
 534 0045 29D1     		subl	%edx, %ecx
3870:fltk-1.3.4-1/png/png.c **** #endif
3871:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int max = (1U << (16U - shift))-1U;
3872:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int max_by_2 = 1U << (15U-shift);
3873:fltk-1.3.4-1/png/png.c ****    unsigned int i;
3874:fltk-1.3.4-1/png/png.c **** 
3875:fltk-1.3.4-1/png/png.c ****    png_uint_16pp table = *ptable =
3876:fltk-1.3.4-1/png/png.c ****        (png_uint_16pp)png_calloc(png_ptr, num * (sizeof (png_uint_16p)));
 535              		.loc 1 3876 23 view .LVU165
 536 0047 89DE     		movl	%ebx, %esi
 537              	.LVL43:
3869:fltk-1.3.4-1/png/png.c **** #endif
 538              		.loc 1 3869 47 view .LVU166
 539 0049 41D3E5   		sall	%cl, %r13d
3872:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 540              		.loc 1 3872 48 view .LVU167
 541 004c B90F0000 		movl	$15, %ecx
 541      00
 542              		.loc 1 3876 23 view .LVU168
 543 0051 48C1E603 		salq	$3, %rsi
3869:fltk-1.3.4-1/png/png.c **** #endif
 544              		.loc 1 3869 64 view .LVU169
 545 0055 4183ED01 		subl	$1, %r13d
3872:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 546              		.loc 1 3872 48 view .LVU170
 547 0059 29D1     		subl	%edx, %ecx
3869:fltk-1.3.4-1/png/png.c **** #endif
 548              		.loc 1 3869 30 view .LVU171
 549 005b F2410F2A 		cvtsi2sdl	%r13d, %xmm0
 549      C5
3872:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 550              		.loc 1 3872 27 view .LVU172
 551 0060 41D3E6   		sall	%cl, %r14d
 552 0063 44897424 		movl	%r14d, 20(%rsp)
 552      14
3869:fltk-1.3.4-1/png/png.c **** #endif
 553              		.loc 1 3869 21 view .LVU173
 554 0068 F20F5EF8 		divsd	%xmm0, %xmm7
 555 006c F20F117C 		movsd	%xmm7, 8(%rsp)
 555      2408
 556              	.LVL44:
3871:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int max_by_2 = 1U << (15U-shift);
 557              		.loc 1 3871 4 is_stmt 1 view .LVU174
3872:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 558              		.loc 1 3872 4 view .LVU175
3873:fltk-1.3.4-1/png/png.c **** 
 559              		.loc 1 3873 4 view .LVU176
3875:fltk-1.3.4-1/png/png.c ****        (png_uint_16pp)png_calloc(png_ptr, num * (sizeof (png_uint_16p)));
 560              		.loc 1 3875 4 view .LVU177
 561              		.loc 1 3876 23 is_stmt 0 view .LVU178
 562 0072 E8000000 		call	png_calloc@PLT
 562      00
 563              	.LVL45:
 564              		.loc 1 3876 23 view .LVU179
 565 0077 48894424 		movq	%rax, 32(%rsp)
 565      20
3875:fltk-1.3.4-1/png/png.c ****        (png_uint_16pp)png_calloc(png_ptr, num * (sizeof (png_uint_16p)));
 566              		.loc 1 3875 34 view .LVU180
 567 007c 498907   		movq	%rax, (%r15)
 568              	.LVL46:
3877:fltk-1.3.4-1/png/png.c **** 
3878:fltk-1.3.4-1/png/png.c ****    for (i = 0; i < num; i++)
 569              		.loc 1 3878 4 is_stmt 1 view .LVU181
 570              		.loc 1 3878 16 view .LVU182
 571              		.loc 1 3878 4 is_stmt 0 view .LVU183
 572 007f 85DB     		testl	%ebx, %ebx
 573 0081 0F847201 		je	.L58
 573      0000
 574 0087 48C74424 		movq	$0, 24(%rsp)
 574      18000000 
 574      00
 575 0090 8B44243C 		movl	60(%rsp), %eax
 576              	.LVL47:
 577              		.loc 1 3878 4 view .LVU184
 578 0094 2D187301 		subl	$95000, %eax
 578      00
 579 0099 89442438 		movl	%eax, 56(%rsp)
 580 009d 8D43FF   		leal	-1(%rbx), %eax
 581 00a0 48894424 		movq	%rax, 40(%rsp)
 581      28
 582              	.LVL48:
 583              		.p2align 4,,10
 584 00a5 0F1F00   		.p2align 3
 585              	.L65:
 586              	.LBB193:
3879:fltk-1.3.4-1/png/png.c ****    {
3880:fltk-1.3.4-1/png/png.c ****       png_uint_16p sub_table = table[i] =
3881:fltk-1.3.4-1/png/png.c ****           (png_uint_16p)png_malloc(png_ptr, 256 * (sizeof (png_uint_16)));
 587              		.loc 1 3881 25 view .LVU185
 588 00a8 488B7C24 		movq	48(%rsp), %rdi
 588      30
 589 00ad BE000200 		movl	$512, %esi
 589      00
 590 00b2 4C8B7424 		movq	24(%rsp), %r14
 590      18
 591 00b7 E8000000 		call	png_malloc@PLT
 591      00
 592              	.LVL49:
3882:fltk-1.3.4-1/png/png.c **** 
3883:fltk-1.3.4-1/png/png.c ****       /* The 'threshold' test is repeated here because it can arise for one of
3884:fltk-1.3.4-1/png/png.c ****        * the 16-bit tables even if the others don't hit it.
3885:fltk-1.3.4-1/png/png.c ****        */
3886:fltk-1.3.4-1/png/png.c ****       if (png_gamma_significant(gamma_val) != 0)
 593              		.loc 1 3886 10 view .LVU186
 594 00bc 817C2438 		cmpl	$10000, 56(%rsp)
 594      10270000 
 595 00c4 4489F3   		movl	%r14d, %ebx
 596              	.LVL50:
3880:fltk-1.3.4-1/png/png.c ****           (png_uint_16p)png_malloc(png_ptr, 256 * (sizeof (png_uint_16)));
 597              		.loc 1 3880 7 is_stmt 1 view .LVU187
3881:fltk-1.3.4-1/png/png.c **** 
 598              		.loc 1 3881 25 is_stmt 0 view .LVU188
 599 00c7 4989C7   		movq	%rax, %r15
3880:fltk-1.3.4-1/png/png.c ****           (png_uint_16p)png_malloc(png_ptr, 256 * (sizeof (png_uint_16)));
 600              		.loc 1 3880 41 view .LVU189
 601 00ca 488B4424 		movq	32(%rsp), %rax
 601      20
 602 00cf 4E893CF0 		movq	%r15, (%rax,%r14,8)
 603              	.LVL51:
 604              		.loc 1 3886 7 is_stmt 1 view .LVU190
 605              		.loc 1 3886 7 is_stmt 0 view .LVU191
 606              	.LBE193:
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 607              		.loc 1 3402 4 is_stmt 1 view .LVU192
 608              	.LBB198:
 609              		.loc 1 3886 10 is_stmt 0 view .LVU193
 610 00d3 0F86D700 		jbe	.L69
 610      0000
 611              	.LBB194:
 612              	.LBB195:
3887:fltk-1.3.4-1/png/png.c ****       {
3888:fltk-1.3.4-1/png/png.c ****          /* The old code would overflow at the end and this would cause the
3889:fltk-1.3.4-1/png/png.c ****           * 'pow' function to return a result >1, resulting in an
3890:fltk-1.3.4-1/png/png.c ****           * arithmetic error.  This code follows the spec exactly; ig is
3891:fltk-1.3.4-1/png/png.c ****           * the recovered input sample, it always has 8-16 bits.
3892:fltk-1.3.4-1/png/png.c ****           *
3893:fltk-1.3.4-1/png/png.c ****           * We want input * 65535/max, rounded, the arithmetic fits in 32
3894:fltk-1.3.4-1/png/png.c ****           * bits (unsigned) so long as max <= 32767.
3895:fltk-1.3.4-1/png/png.c ****           */
3896:fltk-1.3.4-1/png/png.c ****          unsigned int j;
3897:fltk-1.3.4-1/png/png.c ****          for (j = 0; j < 256; j++)
3898:fltk-1.3.4-1/png/png.c ****          {
3899:fltk-1.3.4-1/png/png.c ****             png_uint_32 ig = (j << (8-shift)) + i;
3900:fltk-1.3.4-1/png/png.c **** #           ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
3901:fltk-1.3.4-1/png/png.c ****                /* Inline the 'max' scaling operation: */
3902:fltk-1.3.4-1/png/png.c ****                /* See png_gamma_8bit_correct for why the cast to (int) is
3903:fltk-1.3.4-1/png/png.c ****                 * required here.
3904:fltk-1.3.4-1/png/png.c ****                 */
3905:fltk-1.3.4-1/png/png.c ****                double d = floor(65535.*pow(ig*fmax, gamma_val*.00001)+.5);
 613              		.loc 1 3905 40 view .LVU194
 614 00d9 660FEFC9 		pxor	%xmm1, %xmm1
 615 00dd 4531F6   		xorl	%r14d, %r14d
 616 00e0 F20F2A4C 		cvtsi2sdl	60(%rsp), %xmm1
 616      243C
 617 00e6 F20F590D 		mulsd	.LC4(%rip), %xmm1
 617      00000000 
 618 00ee 6690     		.p2align 4,,10
 619              		.p2align 3
 620              	.L64:
 621              	.LVL52:
3899:fltk-1.3.4-1/png/png.c **** #           ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 622              		.loc 1 3899 13 is_stmt 1 discriminator 3 view .LVU195
 623              		.loc 1 3905 16 discriminator 3 view .LVU196
3899:fltk-1.3.4-1/png/png.c **** #           ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 624              		.loc 1 3899 33 is_stmt 0 discriminator 3 view .LVU197
 625 00f0 89E9     		movl	%ebp, %ecx
 626 00f2 4489F0   		movl	%r14d, %eax
 627              		.loc 1 3905 40 discriminator 3 view .LVU198
 628 00f5 660FEFC0 		pxor	%xmm0, %xmm0
 629 00f9 F20F110C 		movsd	%xmm1, (%rsp)
 629      24
3899:fltk-1.3.4-1/png/png.c **** #           ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 630              		.loc 1 3899 33 discriminator 3 view .LVU199
 631 00fe D3E0     		sall	%cl, %eax
 632              		.loc 1 3905 40 discriminator 3 view .LVU200
 633 0100 01D8     		addl	%ebx, %eax
 634 0102 F2480F2A 		cvtsi2sdq	%rax, %xmm0
 634      C0
 635 0107 F20F5944 		mulsd	8(%rsp), %xmm0
 635      2408
 636 010d E8000000 		call	pow@PLT
 636      00
 637              	.LVL53:
 638              		.loc 1 3905 39 discriminator 3 view .LVU201
 639 0112 F20F5905 		mulsd	.LC5(%rip), %xmm0
 639      00000000 
 640              		.loc 1 3905 27 discriminator 3 view .LVU202
 641 011a F20F100C 		movsd	(%rsp), %xmm1
 641      24
 642 011f F20F5805 		addsd	.LC6(%rip), %xmm0
 642      00000000 
 643 0127 F20F1015 		movsd	.LC9(%rip), %xmm2
 643      00000000 
 644 012f F20F102D 		movsd	.LC7(%rip), %xmm5
 644      00000000 
 645 0137 660F54D0 		andpd	%xmm0, %xmm2
 646 013b 660F2EEA 		ucomisd	%xmm2, %xmm5
 647 013f 763B     		jbe	.L63
 648 0141 F2480F2C 		cvttsd2siq	%xmm0, %rax
 648      C0
 649 0146 660FEFD2 		pxor	%xmm2, %xmm2
 650 014a F20F103D 		movsd	.LC1(%rip), %xmm7
 650      00000000 
 651 0152 F20F1035 		movsd	.LC9(%rip), %xmm6
 651      00000000 
 652 015a 660F55F0 		andnpd	%xmm0, %xmm6
 653 015e F2480F2A 		cvtsi2sdq	%rax, %xmm2
 653      D0
 654 0163 660F28DA 		movapd	%xmm2, %xmm3
 655 0167 F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 655      06
 656 016c 660F28C6 		movapd	%xmm6, %xmm0
 657 0170 660F54DF 		andpd	%xmm7, %xmm3
 658 0174 F20F5CD3 		subsd	%xmm3, %xmm2
 659 0178 660F56C2 		orpd	%xmm2, %xmm0
 660              	.L63:
 661              	.LVL54:
3906:fltk-1.3.4-1/png/png.c ****                sub_table[j] = (png_uint_16)d;
 662              		.loc 1 3906 16 is_stmt 1 discriminator 3 view .LVU203
 663              		.loc 1 3906 31 is_stmt 0 discriminator 3 view .LVU204
 664 017c F20F2CC0 		cvttsd2sil	%xmm0, %eax
 665 0180 66438904 		movw	%ax, (%r15,%r14,2)
 665      77
 666              	.LBE195:
3897:fltk-1.3.4-1/png/png.c ****          {
 667              		.loc 1 3897 31 is_stmt 1 discriminator 3 view .LVU205
 668              	.LVL55:
3897:fltk-1.3.4-1/png/png.c ****          {
 669              		.loc 1 3897 22 discriminator 3 view .LVU206
 670 0185 4983C601 		addq	$1, %r14
 671              	.LVL56:
3897:fltk-1.3.4-1/png/png.c ****          {
 672              		.loc 1 3897 10 is_stmt 0 discriminator 3 view .LVU207
 673 0189 4981FE00 		cmpq	$256, %r14
 673      010000
 674 0190 0F855AFF 		jne	.L64
 674      FFFF
 675              	.LBE194:
 676              	.LBE198:
3878:fltk-1.3.4-1/png/png.c ****    {
 677              		.loc 1 3878 25 is_stmt 1 view .LVU208
 678              	.LVL57:
3878:fltk-1.3.4-1/png/png.c ****    {
 679              		.loc 1 3878 16 view .LVU209
 680 0196 488B7424 		movq	24(%rsp), %rsi
 680      18
 681 019b 488D4601 		leaq	1(%rsi), %rax
3878:fltk-1.3.4-1/png/png.c ****    {
 682              		.loc 1 3878 4 is_stmt 0 view .LVU210
 683 019f 483B7424 		cmpq	40(%rsp), %rsi
 683      28
 684 01a4 7453     		je	.L58
 685              	.LVL58:
 686              	.L70:
3878:fltk-1.3.4-1/png/png.c ****    {
 687              		.loc 1 3878 4 view .LVU211
 688 01a6 48894424 		movq	%rax, 24(%rsp)
 688      18
 689 01ab E9F8FEFF 		jmp	.L65
 689      FF
 690              	.LVL59:
 691              	.L69:
 692              	.LBB199:
3878:fltk-1.3.4-1/png/png.c ****    {
 693              		.loc 1 3878 4 view .LVU212
 694 01b0 31FF     		xorl	%edi, %edi
 695              		.p2align 4,,10
 696 01b2 660F1F44 		.p2align 3
 696      0000
 697              	.L60:
 698              	.LVL60:
 699              	.LBB196:
 700              	.LBB197:
3907:fltk-1.3.4-1/png/png.c **** #           else
3908:fltk-1.3.4-1/png/png.c ****                if (shift != 0)
3909:fltk-1.3.4-1/png/png.c ****                   ig = (ig * 65535U + max_by_2)/max;
3910:fltk-1.3.4-1/png/png.c **** 
3911:fltk-1.3.4-1/png/png.c ****                sub_table[j] = png_gamma_16bit_correct(ig, gamma_val);
3912:fltk-1.3.4-1/png/png.c **** #           endif
3913:fltk-1.3.4-1/png/png.c ****          }
3914:fltk-1.3.4-1/png/png.c ****       }
3915:fltk-1.3.4-1/png/png.c ****       else
3916:fltk-1.3.4-1/png/png.c ****       {
3917:fltk-1.3.4-1/png/png.c ****          /* We must still build a table, but do it the fast way. */
3918:fltk-1.3.4-1/png/png.c ****          unsigned int j;
3919:fltk-1.3.4-1/png/png.c **** 
3920:fltk-1.3.4-1/png/png.c ****          for (j = 0; j < 256; j++)
3921:fltk-1.3.4-1/png/png.c ****          {
3922:fltk-1.3.4-1/png/png.c ****             png_uint_32 ig = (j << (8-shift)) + i;
 701              		.loc 1 3922 13 is_stmt 1 view .LVU213
 702              		.loc 1 3922 33 is_stmt 0 view .LVU214
 703 01b8 89F8     		movl	%edi, %eax
 704 01ba 89E9     		movl	%ebp, %ecx
 705 01bc D3E0     		sall	%cl, %eax
 706              		.loc 1 3922 25 view .LVU215
 707 01be 01D8     		addl	%ebx, %eax
 708              	.LVL61:
3923:fltk-1.3.4-1/png/png.c **** 
3924:fltk-1.3.4-1/png/png.c ****             if (shift != 0)
 709              		.loc 1 3924 13 is_stmt 1 view .LVU216
 710              		.loc 1 3924 16 is_stmt 0 view .LVU217
 711 01c0 4585E4   		testl	%r12d, %r12d
 712 01c3 7412     		je	.L67
 713              	.LVL62:
3925:fltk-1.3.4-1/png/png.c ****                ig = (ig * 65535U + max_by_2)/max;
 714              		.loc 1 3925 16 is_stmt 1 view .LVU218
 715              		.loc 1 3925 25 is_stmt 0 view .LVU219
 716 01c5 89C2     		movl	%eax, %edx
 717 01c7 C1E210   		sall	$16, %edx
 718 01ca 29C2     		subl	%eax, %edx
 719              		.loc 1 3925 34 view .LVU220
 720 01cc 8B442414 		movl	20(%rsp), %eax
 721              	.LVL63:
 722              		.loc 1 3925 34 view .LVU221
 723 01d0 01D0     		addl	%edx, %eax
 724              		.loc 1 3925 19 view .LVU222
 725 01d2 31D2     		xorl	%edx, %edx
 726 01d4 41F7F5   		divl	%r13d
 727              	.LVL64:
 728              	.L67:
3926:fltk-1.3.4-1/png/png.c **** 
3927:fltk-1.3.4-1/png/png.c ****             sub_table[j] = (png_uint_16)ig;
 729              		.loc 1 3927 13 is_stmt 1 discriminator 2 view .LVU223
 730              		.loc 1 3927 28 is_stmt 0 discriminator 2 view .LVU224
 731 01d7 66418904 		movw	%ax, (%r15,%rdi,2)
 731      7F
 732              	.LBE197:
3920:fltk-1.3.4-1/png/png.c ****          {
 733              		.loc 1 3920 31 is_stmt 1 discriminator 2 view .LVU225
 734              	.LVL65:
3920:fltk-1.3.4-1/png/png.c ****          {
 735              		.loc 1 3920 22 discriminator 2 view .LVU226
 736 01dc 4883C701 		addq	$1, %rdi
 737              	.LVL66:
3920:fltk-1.3.4-1/png/png.c ****          {
 738              		.loc 1 3920 10 is_stmt 0 discriminator 2 view .LVU227
 739 01e0 4881FF00 		cmpq	$256, %rdi
 739      010000
 740 01e7 75CF     		jne	.L60
 741              	.LBE196:
 742              	.LBE199:
3878:fltk-1.3.4-1/png/png.c ****    {
 743              		.loc 1 3878 25 is_stmt 1 view .LVU228
 744              	.LVL67:
3878:fltk-1.3.4-1/png/png.c ****    {
 745              		.loc 1 3878 16 view .LVU229
 746 01e9 488B7424 		movq	24(%rsp), %rsi
 746      18
 747 01ee 488D4601 		leaq	1(%rsi), %rax
 748              	.LVL68:
3878:fltk-1.3.4-1/png/png.c ****    {
 749              		.loc 1 3878 4 is_stmt 0 view .LVU230
 750 01f2 483B7424 		cmpq	40(%rsp), %rsi
 750      28
 751 01f7 75AD     		jne	.L70
 752              	.LVL69:
 753              	.L58:
3928:fltk-1.3.4-1/png/png.c ****          }
3929:fltk-1.3.4-1/png/png.c ****       }
3930:fltk-1.3.4-1/png/png.c ****    }
3931:fltk-1.3.4-1/png/png.c **** }
 754              		.loc 1 3931 1 view .LVU231
 755 01f9 4883C448 		addq	$72, %rsp
 756              		.cfi_def_cfa_offset 56
 757 01fd 5B       		popq	%rbx
 758              		.cfi_def_cfa_offset 48
 759 01fe 5D       		popq	%rbp
 760              		.cfi_def_cfa_offset 40
 761              	.LVL70:
 762              		.loc 1 3931 1 view .LVU232
 763 01ff 415C     		popq	%r12
 764              		.cfi_def_cfa_offset 32
 765              	.LVL71:
 766              		.loc 1 3931 1 view .LVU233
 767 0201 415D     		popq	%r13
 768              		.cfi_def_cfa_offset 24
 769              	.LVL72:
 770              		.loc 1 3931 1 view .LVU234
 771 0203 415E     		popq	%r14
 772              		.cfi_def_cfa_offset 16
 773 0205 415F     		popq	%r15
 774              		.cfi_def_cfa_offset 8
 775 0207 C3       		ret
 776              		.cfi_endproc
 777              	.LFE112:
 779              		.section	.text.png_image_free_function,"ax",@progbits
 780              		.p2align 4
 782              	png_image_free_function:
 783              	.LVL73:
 784              	.LFB118:
3932:fltk-1.3.4-1/png/png.c **** 
3933:fltk-1.3.4-1/png/png.c **** /* NOTE: this function expects the *inverse* of the overall gamma transformation
3934:fltk-1.3.4-1/png/png.c ****  * required.
3935:fltk-1.3.4-1/png/png.c ****  */
3936:fltk-1.3.4-1/png/png.c **** static void
3937:fltk-1.3.4-1/png/png.c **** png_build_16to8_table(png_structrp png_ptr, png_uint_16pp *ptable,
3938:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int shift, PNG_CONST png_fixed_point gamma_val)
3939:fltk-1.3.4-1/png/png.c **** {
3940:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int num = 1U << (8U - shift);
3941:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int max = (1U << (16U - shift))-1U;
3942:fltk-1.3.4-1/png/png.c ****    unsigned int i;
3943:fltk-1.3.4-1/png/png.c ****    png_uint_32 last;
3944:fltk-1.3.4-1/png/png.c **** 
3945:fltk-1.3.4-1/png/png.c ****    png_uint_16pp table = *ptable =
3946:fltk-1.3.4-1/png/png.c ****        (png_uint_16pp)png_calloc(png_ptr, num * (sizeof (png_uint_16p)));
3947:fltk-1.3.4-1/png/png.c **** 
3948:fltk-1.3.4-1/png/png.c ****    /* 'num' is the number of tables and also the number of low bits of low
3949:fltk-1.3.4-1/png/png.c ****     * bits of the input 16-bit value used to select a table.  Each table is
3950:fltk-1.3.4-1/png/png.c ****     * itself indexed by the high 8 bits of the value.
3951:fltk-1.3.4-1/png/png.c ****     */
3952:fltk-1.3.4-1/png/png.c ****    for (i = 0; i < num; i++)
3953:fltk-1.3.4-1/png/png.c ****       table[i] = (png_uint_16p)png_malloc(png_ptr,
3954:fltk-1.3.4-1/png/png.c ****           256 * (sizeof (png_uint_16)));
3955:fltk-1.3.4-1/png/png.c **** 
3956:fltk-1.3.4-1/png/png.c ****    /* 'gamma_val' is set to the reciprocal of the value calculated above, so
3957:fltk-1.3.4-1/png/png.c ****     * pow(out,g) is an *input* value.  'last' is the last input value set.
3958:fltk-1.3.4-1/png/png.c ****     *
3959:fltk-1.3.4-1/png/png.c ****     * In the loop 'i' is used to find output values.  Since the output is
3960:fltk-1.3.4-1/png/png.c ****     * 8-bit there are only 256 possible values.  The tables are set up to
3961:fltk-1.3.4-1/png/png.c ****     * select the closest possible output value for each input by finding
3962:fltk-1.3.4-1/png/png.c ****     * the input value at the boundary between each pair of output values
3963:fltk-1.3.4-1/png/png.c ****     * and filling the table up to that boundary with the lower output
3964:fltk-1.3.4-1/png/png.c ****     * value.
3965:fltk-1.3.4-1/png/png.c ****     *
3966:fltk-1.3.4-1/png/png.c ****     * The boundary values are 0.5,1.5..253.5,254.5.  Since these are 9-bit
3967:fltk-1.3.4-1/png/png.c ****     * values the code below uses a 16-bit value in i; the values start at
3968:fltk-1.3.4-1/png/png.c ****     * 128.5 (for 0.5) and step by 257, for a total of 254 values (the last
3969:fltk-1.3.4-1/png/png.c ****     * entries are filled with 255).  Start i at 128 and fill all 'last'
3970:fltk-1.3.4-1/png/png.c ****     * table entries <= 'max'
3971:fltk-1.3.4-1/png/png.c ****     */
3972:fltk-1.3.4-1/png/png.c ****    last = 0;
3973:fltk-1.3.4-1/png/png.c ****    for (i = 0; i < 255; ++i) /* 8-bit output value */
3974:fltk-1.3.4-1/png/png.c ****    {
3975:fltk-1.3.4-1/png/png.c ****       /* Find the corresponding maximum input value */
3976:fltk-1.3.4-1/png/png.c ****       png_uint_16 out = (png_uint_16)(i * 257U); /* 16-bit output value */
3977:fltk-1.3.4-1/png/png.c **** 
3978:fltk-1.3.4-1/png/png.c ****       /* Find the boundary value in 16 bits: */
3979:fltk-1.3.4-1/png/png.c ****       png_uint_32 bound = png_gamma_16bit_correct(out+128U, gamma_val);
3980:fltk-1.3.4-1/png/png.c **** 
3981:fltk-1.3.4-1/png/png.c ****       /* Adjust (round) to (16-shift) bits: */
3982:fltk-1.3.4-1/png/png.c ****       bound = (bound * max + 32768U)/65535U + 1U;
3983:fltk-1.3.4-1/png/png.c **** 
3984:fltk-1.3.4-1/png/png.c ****       while (last < bound)
3985:fltk-1.3.4-1/png/png.c ****       {
3986:fltk-1.3.4-1/png/png.c ****          table[last & (0xffU >> shift)][last >> (8U - shift)] = out;
3987:fltk-1.3.4-1/png/png.c ****          last++;
3988:fltk-1.3.4-1/png/png.c ****       }
3989:fltk-1.3.4-1/png/png.c ****    }
3990:fltk-1.3.4-1/png/png.c **** 
3991:fltk-1.3.4-1/png/png.c ****    /* And fill in the final entries. */
3992:fltk-1.3.4-1/png/png.c ****    while (last < (num << 8))
3993:fltk-1.3.4-1/png/png.c ****    {
3994:fltk-1.3.4-1/png/png.c ****       table[last & (0xff >> shift)][last >> (8U - shift)] = 65535U;
3995:fltk-1.3.4-1/png/png.c ****       last++;
3996:fltk-1.3.4-1/png/png.c ****    }
3997:fltk-1.3.4-1/png/png.c **** }
3998:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
3999:fltk-1.3.4-1/png/png.c **** 
4000:fltk-1.3.4-1/png/png.c **** /* Build a single 8-bit table: same as the 16-bit case but much simpler (and
4001:fltk-1.3.4-1/png/png.c ****  * typically much faster).  Note that libpng currently does no sBIT processing
4002:fltk-1.3.4-1/png/png.c ****  * (apparently contrary to the spec) so a 256-entry table is always generated.
4003:fltk-1.3.4-1/png/png.c ****  */
4004:fltk-1.3.4-1/png/png.c **** static void
4005:fltk-1.3.4-1/png/png.c **** png_build_8bit_table(png_structrp png_ptr, png_bytepp ptable,
4006:fltk-1.3.4-1/png/png.c ****    PNG_CONST png_fixed_point gamma_val)
4007:fltk-1.3.4-1/png/png.c **** {
4008:fltk-1.3.4-1/png/png.c ****    unsigned int i;
4009:fltk-1.3.4-1/png/png.c ****    png_bytep table = *ptable = (png_bytep)png_malloc(png_ptr, 256);
4010:fltk-1.3.4-1/png/png.c **** 
4011:fltk-1.3.4-1/png/png.c ****    if (png_gamma_significant(gamma_val) != 0)
4012:fltk-1.3.4-1/png/png.c ****       for (i=0; i<256; i++)
4013:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
4014:fltk-1.3.4-1/png/png.c **** 
4015:fltk-1.3.4-1/png/png.c ****    else
4016:fltk-1.3.4-1/png/png.c ****       for (i=0; i<256; ++i)
4017:fltk-1.3.4-1/png/png.c ****          table[i] = (png_byte)i;
4018:fltk-1.3.4-1/png/png.c **** }
4019:fltk-1.3.4-1/png/png.c **** 
4020:fltk-1.3.4-1/png/png.c **** /* Used from png_read_destroy and below to release the memory used by the gamma
4021:fltk-1.3.4-1/png/png.c ****  * tables.
4022:fltk-1.3.4-1/png/png.c ****  */
4023:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
4024:fltk-1.3.4-1/png/png.c **** png_destroy_gamma_table(png_structrp png_ptr)
4025:fltk-1.3.4-1/png/png.c **** {
4026:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_table);
4027:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_table = NULL;
4028:fltk-1.3.4-1/png/png.c **** 
4029:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
4030:fltk-1.3.4-1/png/png.c ****    if (png_ptr->gamma_16_table != NULL)
4031:fltk-1.3.4-1/png/png.c ****    {
4032:fltk-1.3.4-1/png/png.c ****       int i;
4033:fltk-1.3.4-1/png/png.c ****       int istop = (1 << (8 - png_ptr->gamma_shift));
4034:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
4035:fltk-1.3.4-1/png/png.c ****       {
4036:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, png_ptr->gamma_16_table[i]);
4037:fltk-1.3.4-1/png/png.c ****       }
4038:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_16_table);
4039:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_16_table = NULL;
4040:fltk-1.3.4-1/png/png.c ****    }
4041:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
4042:fltk-1.3.4-1/png/png.c **** 
4043:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) || \
4044:fltk-1.3.4-1/png/png.c ****    defined(PNG_READ_ALPHA_MODE_SUPPORTED) || \
4045:fltk-1.3.4-1/png/png.c ****    defined(PNG_READ_RGB_TO_GRAY_SUPPORTED)
4046:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_from_1);
4047:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_from_1 = NULL;
4048:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_to_1);
4049:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_to_1 = NULL;
4050:fltk-1.3.4-1/png/png.c **** 
4051:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
4052:fltk-1.3.4-1/png/png.c ****    if (png_ptr->gamma_16_from_1 != NULL)
4053:fltk-1.3.4-1/png/png.c ****    {
4054:fltk-1.3.4-1/png/png.c ****       int i;
4055:fltk-1.3.4-1/png/png.c ****       int istop = (1 << (8 - png_ptr->gamma_shift));
4056:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
4057:fltk-1.3.4-1/png/png.c ****       {
4058:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, png_ptr->gamma_16_from_1[i]);
4059:fltk-1.3.4-1/png/png.c ****       }
4060:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_16_from_1);
4061:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_16_from_1 = NULL;
4062:fltk-1.3.4-1/png/png.c ****    }
4063:fltk-1.3.4-1/png/png.c ****    if (png_ptr->gamma_16_to_1 != NULL)
4064:fltk-1.3.4-1/png/png.c ****    {
4065:fltk-1.3.4-1/png/png.c ****       int i;
4066:fltk-1.3.4-1/png/png.c ****       int istop = (1 << (8 - png_ptr->gamma_shift));
4067:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
4068:fltk-1.3.4-1/png/png.c ****       {
4069:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, png_ptr->gamma_16_to_1[i]);
4070:fltk-1.3.4-1/png/png.c ****       }
4071:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_16_to_1);
4072:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_16_to_1 = NULL;
4073:fltk-1.3.4-1/png/png.c ****    }
4074:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
4075:fltk-1.3.4-1/png/png.c **** #endif /* READ_BACKGROUND || READ_ALPHA_MODE || RGB_TO_GRAY */
4076:fltk-1.3.4-1/png/png.c **** }
4077:fltk-1.3.4-1/png/png.c **** 
4078:fltk-1.3.4-1/png/png.c **** /* We build the 8- or 16-bit gamma tables here.  Note that for 16-bit
4079:fltk-1.3.4-1/png/png.c ****  * tables, we don't make a full table if we are reducing to 8-bit in
4080:fltk-1.3.4-1/png/png.c ****  * the future.  Note also how the gamma_16 tables are segmented so that
4081:fltk-1.3.4-1/png/png.c ****  * we don't need to allocate > 64K chunks for a full 16-bit table.
4082:fltk-1.3.4-1/png/png.c ****  */
4083:fltk-1.3.4-1/png/png.c **** void /* PRIVATE */
4084:fltk-1.3.4-1/png/png.c **** png_build_gamma_table(png_structrp png_ptr, int bit_depth)
4085:fltk-1.3.4-1/png/png.c **** {
4086:fltk-1.3.4-1/png/png.c ****   png_debug(1, "in png_build_gamma_table");
4087:fltk-1.3.4-1/png/png.c **** 
4088:fltk-1.3.4-1/png/png.c ****   /* Remove any existing table; this copes with multiple calls to
4089:fltk-1.3.4-1/png/png.c ****    * png_read_update_info.  The warning is because building the gamma tables
4090:fltk-1.3.4-1/png/png.c ****    * multiple times is a performance hit - it's harmless but the ability to call
4091:fltk-1.3.4-1/png/png.c ****    * png_read_update_info() multiple times is new in 1.5.6 so it seems sensible
4092:fltk-1.3.4-1/png/png.c ****    * to warn if the app introduces such a hit.
4093:fltk-1.3.4-1/png/png.c ****    */
4094:fltk-1.3.4-1/png/png.c ****   if (png_ptr->gamma_table != NULL || png_ptr->gamma_16_table != NULL)
4095:fltk-1.3.4-1/png/png.c ****   {
4096:fltk-1.3.4-1/png/png.c ****     png_warning(png_ptr, "gamma table being rebuilt");
4097:fltk-1.3.4-1/png/png.c ****     png_destroy_gamma_table(png_ptr);
4098:fltk-1.3.4-1/png/png.c ****   }
4099:fltk-1.3.4-1/png/png.c **** 
4100:fltk-1.3.4-1/png/png.c ****   if (bit_depth <= 8)
4101:fltk-1.3.4-1/png/png.c ****   {
4102:fltk-1.3.4-1/png/png.c ****      png_build_8bit_table(png_ptr, &png_ptr->gamma_table,
4103:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ?  png_reciprocal2(png_ptr->colorspace.gamma,
4104:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma) : PNG_FP_1);
4105:fltk-1.3.4-1/png/png.c **** 
4106:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) || \
4107:fltk-1.3.4-1/png/png.c ****    defined(PNG_READ_ALPHA_MODE_SUPPORTED) || \
4108:fltk-1.3.4-1/png/png.c ****    defined(PNG_READ_RGB_TO_GRAY_SUPPORTED)
4109:fltk-1.3.4-1/png/png.c ****      if ((png_ptr->transformations & (PNG_COMPOSE | PNG_RGB_TO_GRAY)) != 0)
4110:fltk-1.3.4-1/png/png.c ****      {
4111:fltk-1.3.4-1/png/png.c ****         png_build_8bit_table(png_ptr, &png_ptr->gamma_to_1,
4112:fltk-1.3.4-1/png/png.c ****             png_reciprocal(png_ptr->colorspace.gamma));
4113:fltk-1.3.4-1/png/png.c **** 
4114:fltk-1.3.4-1/png/png.c ****         png_build_8bit_table(png_ptr, &png_ptr->gamma_from_1,
4115:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ?  png_reciprocal(png_ptr->screen_gamma) :
4116:fltk-1.3.4-1/png/png.c ****             png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
4117:fltk-1.3.4-1/png/png.c ****      }
4118:fltk-1.3.4-1/png/png.c **** #endif /* READ_BACKGROUND || READ_ALPHA_MODE || RGB_TO_GRAY */
4119:fltk-1.3.4-1/png/png.c ****   }
4120:fltk-1.3.4-1/png/png.c **** #ifdef PNG_16BIT_SUPPORTED
4121:fltk-1.3.4-1/png/png.c ****   else
4122:fltk-1.3.4-1/png/png.c ****   {
4123:fltk-1.3.4-1/png/png.c ****      png_byte shift, sig_bit;
4124:fltk-1.3.4-1/png/png.c **** 
4125:fltk-1.3.4-1/png/png.c ****      if ((png_ptr->color_type & PNG_COLOR_MASK_COLOR) != 0)
4126:fltk-1.3.4-1/png/png.c ****      {
4127:fltk-1.3.4-1/png/png.c ****         sig_bit = png_ptr->sig_bit.red;
4128:fltk-1.3.4-1/png/png.c **** 
4129:fltk-1.3.4-1/png/png.c ****         if (png_ptr->sig_bit.green > sig_bit)
4130:fltk-1.3.4-1/png/png.c ****            sig_bit = png_ptr->sig_bit.green;
4131:fltk-1.3.4-1/png/png.c **** 
4132:fltk-1.3.4-1/png/png.c ****         if (png_ptr->sig_bit.blue > sig_bit)
4133:fltk-1.3.4-1/png/png.c ****            sig_bit = png_ptr->sig_bit.blue;
4134:fltk-1.3.4-1/png/png.c ****      }
4135:fltk-1.3.4-1/png/png.c ****      else
4136:fltk-1.3.4-1/png/png.c ****         sig_bit = png_ptr->sig_bit.gray;
4137:fltk-1.3.4-1/png/png.c **** 
4138:fltk-1.3.4-1/png/png.c ****      /* 16-bit gamma code uses this equation:
4139:fltk-1.3.4-1/png/png.c ****       *
4140:fltk-1.3.4-1/png/png.c ****       *   ov = table[(iv & 0xff) >> gamma_shift][iv >> 8]
4141:fltk-1.3.4-1/png/png.c ****       *
4142:fltk-1.3.4-1/png/png.c ****       * Where 'iv' is the input color value and 'ov' is the output value -
4143:fltk-1.3.4-1/png/png.c ****       * pow(iv, gamma).
4144:fltk-1.3.4-1/png/png.c ****       *
4145:fltk-1.3.4-1/png/png.c ****       * Thus the gamma table consists of up to 256 256-entry tables.  The table
4146:fltk-1.3.4-1/png/png.c ****       * is selected by the (8-gamma_shift) most significant of the low 8 bits of
4147:fltk-1.3.4-1/png/png.c ****       * the color value then indexed by the upper 8 bits:
4148:fltk-1.3.4-1/png/png.c ****       *
4149:fltk-1.3.4-1/png/png.c ****       *   table[low bits][high 8 bits]
4150:fltk-1.3.4-1/png/png.c ****       *
4151:fltk-1.3.4-1/png/png.c ****       * So the table 'n' corresponds to all those 'iv' of:
4152:fltk-1.3.4-1/png/png.c ****       *
4153:fltk-1.3.4-1/png/png.c ****       *   <all high 8-bit values><n << gamma_shift>..<(n+1 << gamma_shift)-1>
4154:fltk-1.3.4-1/png/png.c ****       *
4155:fltk-1.3.4-1/png/png.c ****       */
4156:fltk-1.3.4-1/png/png.c ****      if (sig_bit > 0 && sig_bit < 16U)
4157:fltk-1.3.4-1/png/png.c ****         shift = (png_byte)(16U - sig_bit); /* shift == insignificant bits */
4158:fltk-1.3.4-1/png/png.c **** 
4159:fltk-1.3.4-1/png/png.c ****      else
4160:fltk-1.3.4-1/png/png.c ****         shift = 0; /* keep all 16 bits */
4161:fltk-1.3.4-1/png/png.c **** 
4162:fltk-1.3.4-1/png/png.c ****      if ((png_ptr->transformations & (PNG_16_TO_8 | PNG_SCALE_16_TO_8)) != 0)
4163:fltk-1.3.4-1/png/png.c ****      {
4164:fltk-1.3.4-1/png/png.c ****         /* PNG_MAX_GAMMA_8 is the number of bits to keep - effectively
4165:fltk-1.3.4-1/png/png.c ****          * the significant bits in the *input* when the output will
4166:fltk-1.3.4-1/png/png.c ****          * eventually be 8 bits.  By default it is 11.
4167:fltk-1.3.4-1/png/png.c ****          */
4168:fltk-1.3.4-1/png/png.c ****         if (shift < (16U - PNG_MAX_GAMMA_8))
4169:fltk-1.3.4-1/png/png.c ****            shift = (16U - PNG_MAX_GAMMA_8);
4170:fltk-1.3.4-1/png/png.c ****      }
4171:fltk-1.3.4-1/png/png.c **** 
4172:fltk-1.3.4-1/png/png.c ****      if (shift > 8U)
4173:fltk-1.3.4-1/png/png.c ****         shift = 8U; /* Guarantees at least one table! */
4174:fltk-1.3.4-1/png/png.c **** 
4175:fltk-1.3.4-1/png/png.c ****      png_ptr->gamma_shift = shift;
4176:fltk-1.3.4-1/png/png.c **** 
4177:fltk-1.3.4-1/png/png.c ****      /* NOTE: prior to 1.5.4 this test used to include PNG_BACKGROUND (now
4178:fltk-1.3.4-1/png/png.c ****       * PNG_COMPOSE).  This effectively smashed the background calculation for
4179:fltk-1.3.4-1/png/png.c ****       * 16-bit output because the 8-bit table assumes the result will be reduced
4180:fltk-1.3.4-1/png/png.c ****       * to 8 bits.
4181:fltk-1.3.4-1/png/png.c ****       */
4182:fltk-1.3.4-1/png/png.c ****      if ((png_ptr->transformations & (PNG_16_TO_8 | PNG_SCALE_16_TO_8)) != 0)
4183:fltk-1.3.4-1/png/png.c ****          png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
4184:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ? png_product2(png_ptr->colorspace.gamma,
4185:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma) : PNG_FP_1);
4186:fltk-1.3.4-1/png/png.c **** 
4187:fltk-1.3.4-1/png/png.c ****      else
4188:fltk-1.3.4-1/png/png.c ****          png_build_16bit_table(png_ptr, &png_ptr->gamma_16_table, shift,
4189:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ? png_reciprocal2(png_ptr->colorspace.gamma,
4190:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma) : PNG_FP_1);
4191:fltk-1.3.4-1/png/png.c **** 
4192:fltk-1.3.4-1/png/png.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) || \
4193:fltk-1.3.4-1/png/png.c ****    defined(PNG_READ_ALPHA_MODE_SUPPORTED) || \
4194:fltk-1.3.4-1/png/png.c ****    defined(PNG_READ_RGB_TO_GRAY_SUPPORTED)
4195:fltk-1.3.4-1/png/png.c ****      if ((png_ptr->transformations & (PNG_COMPOSE | PNG_RGB_TO_GRAY)) != 0)
4196:fltk-1.3.4-1/png/png.c ****      {
4197:fltk-1.3.4-1/png/png.c ****         png_build_16bit_table(png_ptr, &png_ptr->gamma_16_to_1, shift,
4198:fltk-1.3.4-1/png/png.c ****             png_reciprocal(png_ptr->colorspace.gamma));
4199:fltk-1.3.4-1/png/png.c **** 
4200:fltk-1.3.4-1/png/png.c ****         /* Notice that the '16 from 1' table should be full precision, however
4201:fltk-1.3.4-1/png/png.c ****          * the lookup on this table still uses gamma_shift, so it can't be.
4202:fltk-1.3.4-1/png/png.c ****          * TODO: fix this.
4203:fltk-1.3.4-1/png/png.c ****          */
4204:fltk-1.3.4-1/png/png.c ****         png_build_16bit_table(png_ptr, &png_ptr->gamma_16_from_1, shift,
4205:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ? png_reciprocal(png_ptr->screen_gamma) :
4206:fltk-1.3.4-1/png/png.c ****             png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
4207:fltk-1.3.4-1/png/png.c ****      }
4208:fltk-1.3.4-1/png/png.c **** #endif /* READ_BACKGROUND || READ_ALPHA_MODE || RGB_TO_GRAY */
4209:fltk-1.3.4-1/png/png.c ****   }
4210:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
4211:fltk-1.3.4-1/png/png.c **** }
4212:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
4213:fltk-1.3.4-1/png/png.c **** 
4214:fltk-1.3.4-1/png/png.c **** /* HARDWARE OR SOFTWARE OPTION SUPPORT */
4215:fltk-1.3.4-1/png/png.c **** #ifdef PNG_SET_OPTION_SUPPORTED
4216:fltk-1.3.4-1/png/png.c **** int PNGAPI
4217:fltk-1.3.4-1/png/png.c **** png_set_option(png_structrp png_ptr, int option, int onoff)
4218:fltk-1.3.4-1/png/png.c **** {
4219:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL && option >= 0 && option < PNG_OPTION_NEXT &&
4220:fltk-1.3.4-1/png/png.c ****       (option & 1) == 0)
4221:fltk-1.3.4-1/png/png.c ****    {
4222:fltk-1.3.4-1/png/png.c ****       int mask = 3 << option;
4223:fltk-1.3.4-1/png/png.c ****       int setting = (2 + (onoff != 0)) << option;
4224:fltk-1.3.4-1/png/png.c ****       int current = png_ptr->options;
4225:fltk-1.3.4-1/png/png.c **** 
4226:fltk-1.3.4-1/png/png.c ****       png_ptr->options = (png_byte)((current & ~mask) | setting);
4227:fltk-1.3.4-1/png/png.c **** 
4228:fltk-1.3.4-1/png/png.c ****       return (current & mask) >> option;
4229:fltk-1.3.4-1/png/png.c ****    }
4230:fltk-1.3.4-1/png/png.c **** 
4231:fltk-1.3.4-1/png/png.c ****    return PNG_OPTION_INVALID;
4232:fltk-1.3.4-1/png/png.c **** }
4233:fltk-1.3.4-1/png/png.c **** #endif
4234:fltk-1.3.4-1/png/png.c **** 
4235:fltk-1.3.4-1/png/png.c **** /* sRGB support */
4236:fltk-1.3.4-1/png/png.c **** #if defined(PNG_SIMPLIFIED_READ_SUPPORTED) ||\
4237:fltk-1.3.4-1/png/png.c ****    defined(PNG_SIMPLIFIED_WRITE_SUPPORTED)
4238:fltk-1.3.4-1/png/png.c **** /* sRGB conversion tables; these are machine generated with the code in
4239:fltk-1.3.4-1/png/png.c ****  * contrib/tools/makesRGB.c.  The actual sRGB transfer curve defined in the
4240:fltk-1.3.4-1/png/png.c ****  * specification (see the article at http://en.wikipedia.org/wiki/SRGB)
4241:fltk-1.3.4-1/png/png.c ****  * is used, not the gamma=1/2.2 approximation use elsewhere in libpng.
4242:fltk-1.3.4-1/png/png.c ****  * The sRGB to linear table is exact (to the nearest 16 bit linear fraction).
4243:fltk-1.3.4-1/png/png.c ****  * The inverse (linear to sRGB) table has accuracies as follows:
4244:fltk-1.3.4-1/png/png.c ****  *
4245:fltk-1.3.4-1/png/png.c ****  * For all possible (255*65535+1) input values:
4246:fltk-1.3.4-1/png/png.c ****  *
4247:fltk-1.3.4-1/png/png.c ****  *    error: -0.515566 - 0.625971, 79441 (0.475369%) of readings inexact
4248:fltk-1.3.4-1/png/png.c ****  *
4249:fltk-1.3.4-1/png/png.c ****  * For the input values corresponding to the 65536 16-bit values:
4250:fltk-1.3.4-1/png/png.c ****  *
4251:fltk-1.3.4-1/png/png.c ****  *    error: -0.513727 - 0.607759, 308 (0.469978%) of readings inexact
4252:fltk-1.3.4-1/png/png.c ****  *
4253:fltk-1.3.4-1/png/png.c ****  * In all cases the inexact readings are only off by one.
4254:fltk-1.3.4-1/png/png.c ****  */
4255:fltk-1.3.4-1/png/png.c **** 
4256:fltk-1.3.4-1/png/png.c **** #ifdef PNG_SIMPLIFIED_READ_SUPPORTED
4257:fltk-1.3.4-1/png/png.c **** /* The convert-to-sRGB table is only currently required for read. */
4258:fltk-1.3.4-1/png/png.c **** const png_uint_16 png_sRGB_table[256] =
4259:fltk-1.3.4-1/png/png.c **** {
4260:fltk-1.3.4-1/png/png.c ****    0,20,40,60,80,99,119,139,
4261:fltk-1.3.4-1/png/png.c ****    159,179,199,219,241,264,288,313,
4262:fltk-1.3.4-1/png/png.c ****    340,367,396,427,458,491,526,562,
4263:fltk-1.3.4-1/png/png.c ****    599,637,677,718,761,805,851,898,
4264:fltk-1.3.4-1/png/png.c ****    947,997,1048,1101,1156,1212,1270,1330,
4265:fltk-1.3.4-1/png/png.c ****    1391,1453,1517,1583,1651,1720,1790,1863,
4266:fltk-1.3.4-1/png/png.c ****    1937,2013,2090,2170,2250,2333,2418,2504,
4267:fltk-1.3.4-1/png/png.c ****    2592,2681,2773,2866,2961,3058,3157,3258,
4268:fltk-1.3.4-1/png/png.c ****    3360,3464,3570,3678,3788,3900,4014,4129,
4269:fltk-1.3.4-1/png/png.c ****    4247,4366,4488,4611,4736,4864,4993,5124,
4270:fltk-1.3.4-1/png/png.c ****    5257,5392,5530,5669,5810,5953,6099,6246,
4271:fltk-1.3.4-1/png/png.c ****    6395,6547,6700,6856,7014,7174,7335,7500,
4272:fltk-1.3.4-1/png/png.c ****    7666,7834,8004,8177,8352,8528,8708,8889,
4273:fltk-1.3.4-1/png/png.c ****    9072,9258,9445,9635,9828,10022,10219,10417,
4274:fltk-1.3.4-1/png/png.c ****    10619,10822,11028,11235,11446,11658,11873,12090,
4275:fltk-1.3.4-1/png/png.c ****    12309,12530,12754,12980,13209,13440,13673,13909,
4276:fltk-1.3.4-1/png/png.c ****    14146,14387,14629,14874,15122,15371,15623,15878,
4277:fltk-1.3.4-1/png/png.c ****    16135,16394,16656,16920,17187,17456,17727,18001,
4278:fltk-1.3.4-1/png/png.c ****    18277,18556,18837,19121,19407,19696,19987,20281,
4279:fltk-1.3.4-1/png/png.c ****    20577,20876,21177,21481,21787,22096,22407,22721,
4280:fltk-1.3.4-1/png/png.c ****    23038,23357,23678,24002,24329,24658,24990,25325,
4281:fltk-1.3.4-1/png/png.c ****    25662,26001,26344,26688,27036,27386,27739,28094,
4282:fltk-1.3.4-1/png/png.c ****    28452,28813,29176,29542,29911,30282,30656,31033,
4283:fltk-1.3.4-1/png/png.c ****    31412,31794,32179,32567,32957,33350,33745,34143,
4284:fltk-1.3.4-1/png/png.c ****    34544,34948,35355,35764,36176,36591,37008,37429,
4285:fltk-1.3.4-1/png/png.c ****    37852,38278,38706,39138,39572,40009,40449,40891,
4286:fltk-1.3.4-1/png/png.c ****    41337,41785,42236,42690,43147,43606,44069,44534,
4287:fltk-1.3.4-1/png/png.c ****    45002,45473,45947,46423,46903,47385,47871,48359,
4288:fltk-1.3.4-1/png/png.c ****    48850,49344,49841,50341,50844,51349,51858,52369,
4289:fltk-1.3.4-1/png/png.c ****    52884,53401,53921,54445,54971,55500,56032,56567,
4290:fltk-1.3.4-1/png/png.c ****    57105,57646,58190,58737,59287,59840,60396,60955,
4291:fltk-1.3.4-1/png/png.c ****    61517,62082,62650,63221,63795,64372,64952,65535
4292:fltk-1.3.4-1/png/png.c **** };
4293:fltk-1.3.4-1/png/png.c **** #endif /* SIMPLIFIED_READ */
4294:fltk-1.3.4-1/png/png.c **** 
4295:fltk-1.3.4-1/png/png.c **** /* The base/delta tables are required for both read and write (but currently
4296:fltk-1.3.4-1/png/png.c ****  * only the simplified versions.)
4297:fltk-1.3.4-1/png/png.c ****  */
4298:fltk-1.3.4-1/png/png.c **** const png_uint_16 png_sRGB_base[512] =
4299:fltk-1.3.4-1/png/png.c **** {
4300:fltk-1.3.4-1/png/png.c ****    128,1782,3383,4644,5675,6564,7357,8074,
4301:fltk-1.3.4-1/png/png.c ****    8732,9346,9921,10463,10977,11466,11935,12384,
4302:fltk-1.3.4-1/png/png.c ****    12816,13233,13634,14024,14402,14769,15125,15473,
4303:fltk-1.3.4-1/png/png.c ****    15812,16142,16466,16781,17090,17393,17690,17981,
4304:fltk-1.3.4-1/png/png.c ****    18266,18546,18822,19093,19359,19621,19879,20133,
4305:fltk-1.3.4-1/png/png.c ****    20383,20630,20873,21113,21349,21583,21813,22041,
4306:fltk-1.3.4-1/png/png.c ****    22265,22487,22707,22923,23138,23350,23559,23767,
4307:fltk-1.3.4-1/png/png.c ****    23972,24175,24376,24575,24772,24967,25160,25352,
4308:fltk-1.3.4-1/png/png.c ****    25542,25730,25916,26101,26284,26465,26645,26823,
4309:fltk-1.3.4-1/png/png.c ****    27000,27176,27350,27523,27695,27865,28034,28201,
4310:fltk-1.3.4-1/png/png.c ****    28368,28533,28697,28860,29021,29182,29341,29500,
4311:fltk-1.3.4-1/png/png.c ****    29657,29813,29969,30123,30276,30429,30580,30730,
4312:fltk-1.3.4-1/png/png.c ****    30880,31028,31176,31323,31469,31614,31758,31902,
4313:fltk-1.3.4-1/png/png.c ****    32045,32186,32327,32468,32607,32746,32884,33021,
4314:fltk-1.3.4-1/png/png.c ****    33158,33294,33429,33564,33697,33831,33963,34095,
4315:fltk-1.3.4-1/png/png.c ****    34226,34357,34486,34616,34744,34873,35000,35127,
4316:fltk-1.3.4-1/png/png.c ****    35253,35379,35504,35629,35753,35876,35999,36122,
4317:fltk-1.3.4-1/png/png.c ****    36244,36365,36486,36606,36726,36845,36964,37083,
4318:fltk-1.3.4-1/png/png.c ****    37201,37318,37435,37551,37668,37783,37898,38013,
4319:fltk-1.3.4-1/png/png.c ****    38127,38241,38354,38467,38580,38692,38803,38915,
4320:fltk-1.3.4-1/png/png.c ****    39026,39136,39246,39356,39465,39574,39682,39790,
4321:fltk-1.3.4-1/png/png.c ****    39898,40005,40112,40219,40325,40431,40537,40642,
4322:fltk-1.3.4-1/png/png.c ****    40747,40851,40955,41059,41163,41266,41369,41471,
4323:fltk-1.3.4-1/png/png.c ****    41573,41675,41777,41878,41979,42079,42179,42279,
4324:fltk-1.3.4-1/png/png.c ****    42379,42478,42577,42676,42775,42873,42971,43068,
4325:fltk-1.3.4-1/png/png.c ****    43165,43262,43359,43456,43552,43648,43743,43839,
4326:fltk-1.3.4-1/png/png.c ****    43934,44028,44123,44217,44311,44405,44499,44592,
4327:fltk-1.3.4-1/png/png.c ****    44685,44778,44870,44962,45054,45146,45238,45329,
4328:fltk-1.3.4-1/png/png.c ****    45420,45511,45601,45692,45782,45872,45961,46051,
4329:fltk-1.3.4-1/png/png.c ****    46140,46229,46318,46406,46494,46583,46670,46758,
4330:fltk-1.3.4-1/png/png.c ****    46846,46933,47020,47107,47193,47280,47366,47452,
4331:fltk-1.3.4-1/png/png.c ****    47538,47623,47709,47794,47879,47964,48048,48133,
4332:fltk-1.3.4-1/png/png.c ****    48217,48301,48385,48468,48552,48635,48718,48801,
4333:fltk-1.3.4-1/png/png.c ****    48884,48966,49048,49131,49213,49294,49376,49458,
4334:fltk-1.3.4-1/png/png.c ****    49539,49620,49701,49782,49862,49943,50023,50103,
4335:fltk-1.3.4-1/png/png.c ****    50183,50263,50342,50422,50501,50580,50659,50738,
4336:fltk-1.3.4-1/png/png.c ****    50816,50895,50973,51051,51129,51207,51285,51362,
4337:fltk-1.3.4-1/png/png.c ****    51439,51517,51594,51671,51747,51824,51900,51977,
4338:fltk-1.3.4-1/png/png.c ****    52053,52129,52205,52280,52356,52432,52507,52582,
4339:fltk-1.3.4-1/png/png.c ****    52657,52732,52807,52881,52956,53030,53104,53178,
4340:fltk-1.3.4-1/png/png.c ****    53252,53326,53400,53473,53546,53620,53693,53766,
4341:fltk-1.3.4-1/png/png.c ****    53839,53911,53984,54056,54129,54201,54273,54345,
4342:fltk-1.3.4-1/png/png.c ****    54417,54489,54560,54632,54703,54774,54845,54916,
4343:fltk-1.3.4-1/png/png.c ****    54987,55058,55129,55199,55269,55340,55410,55480,
4344:fltk-1.3.4-1/png/png.c ****    55550,55620,55689,55759,55828,55898,55967,56036,
4345:fltk-1.3.4-1/png/png.c ****    56105,56174,56243,56311,56380,56448,56517,56585,
4346:fltk-1.3.4-1/png/png.c ****    56653,56721,56789,56857,56924,56992,57059,57127,
4347:fltk-1.3.4-1/png/png.c ****    57194,57261,57328,57395,57462,57529,57595,57662,
4348:fltk-1.3.4-1/png/png.c ****    57728,57795,57861,57927,57993,58059,58125,58191,
4349:fltk-1.3.4-1/png/png.c ****    58256,58322,58387,58453,58518,58583,58648,58713,
4350:fltk-1.3.4-1/png/png.c ****    58778,58843,58908,58972,59037,59101,59165,59230,
4351:fltk-1.3.4-1/png/png.c ****    59294,59358,59422,59486,59549,59613,59677,59740,
4352:fltk-1.3.4-1/png/png.c ****    59804,59867,59930,59993,60056,60119,60182,60245,
4353:fltk-1.3.4-1/png/png.c ****    60308,60370,60433,60495,60558,60620,60682,60744,
4354:fltk-1.3.4-1/png/png.c ****    60806,60868,60930,60992,61054,61115,61177,61238,
4355:fltk-1.3.4-1/png/png.c ****    61300,61361,61422,61483,61544,61605,61666,61727,
4356:fltk-1.3.4-1/png/png.c ****    61788,61848,61909,61969,62030,62090,62150,62211,
4357:fltk-1.3.4-1/png/png.c ****    62271,62331,62391,62450,62510,62570,62630,62689,
4358:fltk-1.3.4-1/png/png.c ****    62749,62808,62867,62927,62986,63045,63104,63163,
4359:fltk-1.3.4-1/png/png.c ****    63222,63281,63340,63398,63457,63515,63574,63632,
4360:fltk-1.3.4-1/png/png.c ****    63691,63749,63807,63865,63923,63981,64039,64097,
4361:fltk-1.3.4-1/png/png.c ****    64155,64212,64270,64328,64385,64443,64500,64557,
4362:fltk-1.3.4-1/png/png.c ****    64614,64672,64729,64786,64843,64900,64956,65013,
4363:fltk-1.3.4-1/png/png.c ****    65070,65126,65183,65239,65296,65352,65409,65465
4364:fltk-1.3.4-1/png/png.c **** };
4365:fltk-1.3.4-1/png/png.c **** 
4366:fltk-1.3.4-1/png/png.c **** const png_byte png_sRGB_delta[512] =
4367:fltk-1.3.4-1/png/png.c **** {
4368:fltk-1.3.4-1/png/png.c ****    207,201,158,129,113,100,90,82,77,72,68,64,61,59,56,54,
4369:fltk-1.3.4-1/png/png.c ****    52,50,49,47,46,45,43,42,41,40,39,39,38,37,36,36,
4370:fltk-1.3.4-1/png/png.c ****    35,34,34,33,33,32,32,31,31,30,30,30,29,29,28,28,
4371:fltk-1.3.4-1/png/png.c ****    28,27,27,27,27,26,26,26,25,25,25,25,24,24,24,24,
4372:fltk-1.3.4-1/png/png.c ****    23,23,23,23,23,22,22,22,22,22,22,21,21,21,21,21,
4373:fltk-1.3.4-1/png/png.c ****    21,20,20,20,20,20,20,20,20,19,19,19,19,19,19,19,
4374:fltk-1.3.4-1/png/png.c ****    19,18,18,18,18,18,18,18,18,18,18,17,17,17,17,17,
4375:fltk-1.3.4-1/png/png.c ****    17,17,17,17,17,17,16,16,16,16,16,16,16,16,16,16,
4376:fltk-1.3.4-1/png/png.c ****    16,16,16,16,15,15,15,15,15,15,15,15,15,15,15,15,
4377:fltk-1.3.4-1/png/png.c ****    15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,14,
4378:fltk-1.3.4-1/png/png.c ****    14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,
4379:fltk-1.3.4-1/png/png.c ****    13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,
4380:fltk-1.3.4-1/png/png.c ****    12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,
4381:fltk-1.3.4-1/png/png.c ****    12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,
4382:fltk-1.3.4-1/png/png.c ****    11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
4383:fltk-1.3.4-1/png/png.c ****    11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,
4384:fltk-1.3.4-1/png/png.c ****    11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
4385:fltk-1.3.4-1/png/png.c ****    10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
4386:fltk-1.3.4-1/png/png.c ****    10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,
4387:fltk-1.3.4-1/png/png.c ****    10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4388:fltk-1.3.4-1/png/png.c ****    9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4389:fltk-1.3.4-1/png/png.c ****    9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4390:fltk-1.3.4-1/png/png.c ****    9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,
4391:fltk-1.3.4-1/png/png.c ****    9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4392:fltk-1.3.4-1/png/png.c ****    8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4393:fltk-1.3.4-1/png/png.c ****    8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4394:fltk-1.3.4-1/png/png.c ****    8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4395:fltk-1.3.4-1/png/png.c ****    8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,
4396:fltk-1.3.4-1/png/png.c ****    8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,
4397:fltk-1.3.4-1/png/png.c ****    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
4398:fltk-1.3.4-1/png/png.c ****    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
4399:fltk-1.3.4-1/png/png.c ****    7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7
4400:fltk-1.3.4-1/png/png.c **** };
4401:fltk-1.3.4-1/png/png.c **** #endif /* SIMPLIFIED READ/WRITE sRGB support */
4402:fltk-1.3.4-1/png/png.c **** 
4403:fltk-1.3.4-1/png/png.c **** /* SIMPLIFIED READ/WRITE SUPPORT */
4404:fltk-1.3.4-1/png/png.c **** #if defined(PNG_SIMPLIFIED_READ_SUPPORTED) ||\
4405:fltk-1.3.4-1/png/png.c ****    defined(PNG_SIMPLIFIED_WRITE_SUPPORTED)
4406:fltk-1.3.4-1/png/png.c **** static int
4407:fltk-1.3.4-1/png/png.c **** png_image_free_function(png_voidp argument)
4408:fltk-1.3.4-1/png/png.c **** {
 785              		.loc 1 4408 1 is_stmt 1 view -0
 786              		.cfi_startproc
 787              		.loc 1 4408 1 is_stmt 0 view .LVU236
 788 0000 F30F1EFA 		endbr64
 789 0004 4154     		pushq	%r12
 790              		.cfi_def_cfa_offset 16
 791              		.cfi_offset 12, -16
 792 0006 55       		pushq	%rbp
 793              		.cfi_def_cfa_offset 24
 794              		.cfi_offset 6, -24
 795 0007 53       		pushq	%rbx
 796              		.cfi_def_cfa_offset 32
 797              		.cfi_offset 3, -32
 798 0008 4883EC40 		subq	$64, %rsp
 799              		.cfi_def_cfa_offset 96
4409:fltk-1.3.4-1/png/png.c ****    png_imagep image = png_voidcast(png_imagep, argument);
4410:fltk-1.3.4-1/png/png.c ****    png_controlp cp = image->opaque;
 800              		.loc 1 4410 17 view .LVU237
 801 000c 488B2F   		movq	(%rdi), %rbp
4408:fltk-1.3.4-1/png/png.c ****    png_imagep image = png_voidcast(png_imagep, argument);
 802              		.loc 1 4408 1 view .LVU238
 803 000f 64488B04 		movq	%fs:40, %rax
 803      25280000 
 803      00
 804 0018 48894424 		movq	%rax, 56(%rsp)
 804      38
 805 001d 31C0     		xorl	%eax, %eax
4409:fltk-1.3.4-1/png/png.c ****    png_imagep image = png_voidcast(png_imagep, argument);
 806              		.loc 1 4409 4 is_stmt 1 view .LVU239
 807              	.LVL74:
 808              		.loc 1 4410 4 view .LVU240
4411:fltk-1.3.4-1/png/png.c ****    png_control c;
 809              		.loc 1 4411 4 view .LVU241
4412:fltk-1.3.4-1/png/png.c **** 
4413:fltk-1.3.4-1/png/png.c ****    /* Double check that we have a png_ptr - it should be impossible to get here
4414:fltk-1.3.4-1/png/png.c ****     * without one.
4415:fltk-1.3.4-1/png/png.c ****     */
4416:fltk-1.3.4-1/png/png.c ****    if (cp->png_ptr == NULL)
 810              		.loc 1 4416 4 view .LVU242
 811              		.loc 1 4416 10 is_stmt 0 view .LVU243
 812 001f 488B5500 		movq	0(%rbp), %rdx
 813              		.loc 1 4416 7 view .LVU244
 814 0023 4885D2   		testq	%rdx, %rdx
 815 0026 0F84A400 		je	.L84
 815      0000
4417:fltk-1.3.4-1/png/png.c ****       return 0;
4418:fltk-1.3.4-1/png/png.c **** 
4419:fltk-1.3.4-1/png/png.c ****    /* First free any data held in the control structure. */
4420:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_STDIO_SUPPORTED
4421:fltk-1.3.4-1/png/png.c ****       if (cp->owned_file != 0)
 816              		.loc 1 4421 26 view .LVU245
 817 002c 0FB64528 		movzbl	40(%rbp), %eax
 818 0030 4889FB   		movq	%rdi, %rbx
 819              		.loc 1 4421 7 is_stmt 1 view .LVU246
 820              		.loc 1 4421 10 is_stmt 0 view .LVU247
 821 0033 A802     		testb	$2, %al
 822 0035 7422     		je	.L80
 823              	.LBB200:
4422:fltk-1.3.4-1/png/png.c ****       {
4423:fltk-1.3.4-1/png/png.c ****          FILE *fp = png_voidcast(FILE*, cp->png_ptr->io_ptr);
 824              		.loc 1 4423 10 is_stmt 1 view .LVU248
 825              		.loc 1 4423 16 is_stmt 0 view .LVU249
 826 0037 488BBA08 		movq	264(%rdx), %rdi
 826      010000
 827              	.LVL75:
4424:fltk-1.3.4-1/png/png.c ****          cp->owned_file = 0;
 828              		.loc 1 4424 10 is_stmt 1 view .LVU250
 829              		.loc 1 4424 25 is_stmt 0 view .LVU251
 830 003e 83E0FD   		andl	$-3, %eax
 831 0041 884528   		movb	%al, 40(%rbp)
4425:fltk-1.3.4-1/png/png.c **** 
4426:fltk-1.3.4-1/png/png.c ****          /* Ignore errors here. */
4427:fltk-1.3.4-1/png/png.c ****          if (fp != NULL)
 832              		.loc 1 4427 10 is_stmt 1 view .LVU252
 833              		.loc 1 4427 13 is_stmt 0 view .LVU253
 834 0044 4885FF   		testq	%rdi, %rdi
 835 0047 7410     		je	.L80
4428:fltk-1.3.4-1/png/png.c ****          {
4429:fltk-1.3.4-1/png/png.c ****             cp->png_ptr->io_ptr = NULL;
 836              		.loc 1 4429 13 is_stmt 1 view .LVU254
 837              		.loc 1 4429 33 is_stmt 0 view .LVU255
 838 0049 48C78208 		movq	$0, 264(%rdx)
 838      01000000 
 838      000000
4430:fltk-1.3.4-1/png/png.c ****             (void)fclose(fp);
 839              		.loc 1 4430 13 is_stmt 1 view .LVU256
 840              		.loc 1 4430 19 is_stmt 0 view .LVU257
 841 0054 E8000000 		call	fclose@PLT
 841      00
 842              	.LVL76:
 843              	.L80:
 844              		.loc 1 4430 19 view .LVU258
 845              	.LBE200:
4431:fltk-1.3.4-1/png/png.c ****          }
4432:fltk-1.3.4-1/png/png.c ****       }
4433:fltk-1.3.4-1/png/png.c **** #  endif
4434:fltk-1.3.4-1/png/png.c **** 
4435:fltk-1.3.4-1/png/png.c ****    /* Copy the control structure so that the original, allocated, version can be
4436:fltk-1.3.4-1/png/png.c ****     * safely freed.  Notice that a png_error here stops the remainder of the
4437:fltk-1.3.4-1/png/png.c ****     * cleanup, but this is probably fine because that would indicate bad memory
4438:fltk-1.3.4-1/png/png.c ****     * problems anyway.
4439:fltk-1.3.4-1/png/png.c ****     */
4440:fltk-1.3.4-1/png/png.c ****    c = *cp;
 846              		.loc 1 4440 4 is_stmt 1 view .LVU259
 847              		.loc 1 4440 6 is_stmt 0 view .LVU260
 848 0059 F30F6F45 		movdqu	0(%rbp), %xmm0
 848      00
4441:fltk-1.3.4-1/png/png.c ****    image->opaque = &c;
 849              		.loc 1 4441 18 view .LVU261
 850 005e 4989E4   		movq	%rsp, %r12
4442:fltk-1.3.4-1/png/png.c ****    png_free(c.png_ptr, cp);
 851              		.loc 1 4442 4 view .LVU262
 852 0061 4889EE   		movq	%rbp, %rsi
4440:fltk-1.3.4-1/png/png.c ****    image->opaque = &c;
 853              		.loc 1 4440 6 view .LVU263
 854 0064 0F290424 		movaps	%xmm0, (%rsp)
 855 0068 F30F6F4D 		movdqu	16(%rbp), %xmm1
 855      10
 856              		.loc 1 4442 4 view .LVU264
 857 006d 488B3C24 		movq	(%rsp), %rdi
4440:fltk-1.3.4-1/png/png.c ****    image->opaque = &c;
 858              		.loc 1 4440 6 view .LVU265
 859 0071 0F294C24 		movaps	%xmm1, 16(%rsp)
 859      10
 860 0076 F30F6F55 		movdqu	32(%rbp), %xmm2
 860      20
4441:fltk-1.3.4-1/png/png.c ****    image->opaque = &c;
 861              		.loc 1 4441 18 view .LVU266
 862 007b 4C8923   		movq	%r12, (%rbx)
4440:fltk-1.3.4-1/png/png.c ****    image->opaque = &c;
 863              		.loc 1 4440 6 view .LVU267
 864 007e 0F295424 		movaps	%xmm2, 32(%rsp)
 864      20
4441:fltk-1.3.4-1/png/png.c ****    image->opaque = &c;
 865              		.loc 1 4441 4 is_stmt 1 view .LVU268
 866              		.loc 1 4442 4 view .LVU269
 867 0083 E8000000 		call	png_free@PLT
 867      00
 868              	.LVL77:
4443:fltk-1.3.4-1/png/png.c **** 
4444:fltk-1.3.4-1/png/png.c ****    /* Then the structures, calling the correct API. */
4445:fltk-1.3.4-1/png/png.c ****    if (c.for_write != 0)
 869              		.loc 1 4445 4 view .LVU270
4446:fltk-1.3.4-1/png/png.c ****    {
4447:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_SIMPLIFIED_WRITE_SUPPORTED
4448:fltk-1.3.4-1/png/png.c ****          png_destroy_write_struct(&c.png_ptr, &c.info_ptr);
 870              		.loc 1 4448 10 is_stmt 0 view .LVU271
 871 0088 488D7424 		leaq	8(%rsp), %rsi
 871      08
4445:fltk-1.3.4-1/png/png.c ****    {
 872              		.loc 1 4445 7 view .LVU272
 873 008d F6442428 		testb	$1, 40(%rsp)
 873      01
 874 0092 752C     		jne	.L89
4449:fltk-1.3.4-1/png/png.c **** #     else
4450:fltk-1.3.4-1/png/png.c ****          png_error(c.png_ptr, "simplified write not supported");
4451:fltk-1.3.4-1/png/png.c **** #     endif
4452:fltk-1.3.4-1/png/png.c ****    }
4453:fltk-1.3.4-1/png/png.c ****    else
4454:fltk-1.3.4-1/png/png.c ****    {
4455:fltk-1.3.4-1/png/png.c **** #     ifdef PNG_SIMPLIFIED_READ_SUPPORTED
4456:fltk-1.3.4-1/png/png.c ****          png_destroy_read_struct(&c.png_ptr, &c.info_ptr, NULL);
 875              		.loc 1 4456 10 is_stmt 1 view .LVU273
 876 0094 31D2     		xorl	%edx, %edx
 877 0096 4C89E7   		movq	%r12, %rdi
 878 0099 E8000000 		call	png_destroy_read_struct@PLT
 878      00
 879              	.LVL78:
4457:fltk-1.3.4-1/png/png.c **** #     else
4458:fltk-1.3.4-1/png/png.c ****          png_error(c.png_ptr, "simplified read not supported");
4459:fltk-1.3.4-1/png/png.c **** #     endif
4460:fltk-1.3.4-1/png/png.c ****    }
4461:fltk-1.3.4-1/png/png.c **** 
4462:fltk-1.3.4-1/png/png.c ****    /* Success. */
4463:fltk-1.3.4-1/png/png.c ****    return 1;
 880              		.loc 1 4463 11 is_stmt 0 view .LVU274
 881 009e B8010000 		movl	$1, %eax
 881      00
 882              	.LVL79:
 883              	.L77:
4464:fltk-1.3.4-1/png/png.c **** }
 884              		.loc 1 4464 1 view .LVU275
 885 00a3 488B4C24 		movq	56(%rsp), %rcx
 885      38
 886 00a8 6448330C 		xorq	%fs:40, %rcx
 886      25280000 
 886      00
 887 00b1 7521     		jne	.L90
 888 00b3 4883C440 		addq	$64, %rsp
 889              		.cfi_remember_state
 890              		.cfi_def_cfa_offset 32
 891 00b7 5B       		popq	%rbx
 892              		.cfi_def_cfa_offset 24
 893 00b8 5D       		popq	%rbp
 894              		.cfi_def_cfa_offset 16
 895              	.LVL80:
 896              		.loc 1 4464 1 view .LVU276
 897 00b9 415C     		popq	%r12
 898              		.cfi_def_cfa_offset 8
 899 00bb C3       		ret
 900              	.LVL81:
 901 00bc 0F1F4000 		.p2align 4,,10
 902              		.p2align 3
 903              	.L89:
 904              		.cfi_restore_state
4448:fltk-1.3.4-1/png/png.c **** #     else
 905              		.loc 1 4448 10 is_stmt 1 view .LVU277
 906 00c0 4C89E7   		movq	%r12, %rdi
 907 00c3 E8000000 		call	png_destroy_write_struct@PLT
 907      00
 908              	.LVL82:
4463:fltk-1.3.4-1/png/png.c **** }
 909              		.loc 1 4463 11 is_stmt 0 view .LVU278
 910 00c8 B8010000 		movl	$1, %eax
 910      00
 911 00cd EBD4     		jmp	.L77
 912              	.LVL83:
 913 00cf 90       		.p2align 4,,10
 914              		.p2align 3
 915              	.L84:
4417:fltk-1.3.4-1/png/png.c **** 
 916              		.loc 1 4417 14 view .LVU279
 917 00d0 31C0     		xorl	%eax, %eax
 918 00d2 EBCF     		jmp	.L77
 919              	.LVL84:
 920              	.L90:
 921              		.loc 1 4464 1 view .LVU280
 922 00d4 E8000000 		call	__stack_chk_fail@PLT
 922      00
 923              	.LVL85:
 924              		.cfi_endproc
 925              	.LFE118:
 927              		.section	.text.is_ICC_signature_char.part.0,"ax",@progbits
 928              		.p2align 4
 930              	is_ICC_signature_char.part.0:
 931              	.LVL86:
 932              	.LFB121:
1768:fltk-1.3.4-1/png/png.c **** {
 933              		.loc 1 1768 1 is_stmt 1 view -0
 934              		.cfi_startproc
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 935              		.loc 1 1770 46 is_stmt 0 view .LVU282
 936 0000 4883E7DF 		andq	$-33, %rdi
 937              	.LVL87:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 938              		.loc 1 1770 46 view .LVU283
 939 0004 31C0     		xorl	%eax, %eax
 940 0006 4883EF41 		subq	$65, %rdi
 941 000a 4883FF19 		cmpq	$25, %rdi
 942 000e 0F96C0   		setbe	%al
1772:fltk-1.3.4-1/png/png.c **** 
 943              		.loc 1 1772 1 view .LVU284
 944 0011 C3       		ret
 945              		.cfi_endproc
 946              	.LFE121:
 948              		.section	.rodata.png_icc_profile_error.str1.1,"aMS",@progbits,1
 949              	.LC10:
 950 0000 70726F66 		.string	"profile '"
 950      696C6520 
 950      2700
 951              	.LC11:
 952 000a 273A2000 		.string	"': "
 953              	.LC12:
 954 000e 683A2000 		.string	"h: "
 955              		.section	.text.png_icc_profile_error,"ax",@progbits
 956              		.p2align 4
 958              	png_icc_profile_error:
 959              	.LVL88:
 960              	.LFB86:
1786:fltk-1.3.4-1/png/png.c ****    size_t pos;
 961              		.loc 1 1786 1 is_stmt 1 view -0
 962              		.cfi_startproc
1786:fltk-1.3.4-1/png/png.c ****    size_t pos;
 963              		.loc 1 1786 1 is_stmt 0 view .LVU286
 964 0000 4157     		pushq	%r15
 965              		.cfi_def_cfa_offset 16
 966              		.cfi_offset 15, -16
 967 0002 4D89C7   		movq	%r8, %r15
 968 0005 4156     		pushq	%r14
 969              		.cfi_def_cfa_offset 24
 970              		.cfi_offset 14, -24
 971 0007 4989FE   		movq	%rdi, %r14
 972 000a 4155     		pushq	%r13
 973              		.cfi_def_cfa_offset 32
 974              		.cfi_offset 13, -32
 975 000c 4989D5   		movq	%rdx, %r13
 976 000f 4154     		pushq	%r12
 977              		.cfi_def_cfa_offset 40
 978              		.cfi_offset 12, -40
 979 0011 4989F4   		movq	%rsi, %r12
 980 0014 55       		pushq	%rbp
 981              		.cfi_def_cfa_offset 48
 982              		.cfi_offset 6, -48
 983 0015 53       		pushq	%rbx
 984              		.cfi_def_cfa_offset 56
 985              		.cfi_offset 3, -56
 986 0016 4889CB   		movq	%rcx, %rbx
 987 0019 4881ECF8 		subq	$248, %rsp
 987      000000
 988              		.cfi_def_cfa_offset 304
1786:fltk-1.3.4-1/png/png.c ****    size_t pos;
 989              		.loc 1 1786 1 view .LVU287
 990 0020 64488B04 		movq	%fs:40, %rax
 990      25280000 
 990      00
 991 0029 48898424 		movq	%rax, 232(%rsp)
 991      E8000000 
 992 0031 31C0     		xorl	%eax, %eax
1787:fltk-1.3.4-1/png/png.c ****    char message[196]; /* see below for calculation */
 993              		.loc 1 1787 4 is_stmt 1 view .LVU288
1788:fltk-1.3.4-1/png/png.c **** 
 994              		.loc 1 1788 4 view .LVU289
1790:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_INVALID;
 995              		.loc 1 1790 4 view .LVU290
1790:fltk-1.3.4-1/png/png.c ****       colorspace->flags |= PNG_COLORSPACE_INVALID;
 996              		.loc 1 1790 7 is_stmt 0 view .LVU291
 997 0033 4885F6   		testq	%rsi, %rsi
 998 0036 7406     		je	.L93
1791:fltk-1.3.4-1/png/png.c **** 
 999              		.loc 1 1791 7 is_stmt 1 view .LVU292
1791:fltk-1.3.4-1/png/png.c **** 
 1000              		.loc 1 1791 25 is_stmt 0 view .LVU293
 1001 0038 66814E4A 		orw	$-32768, 74(%rsi)
 1001      0080
 1002              	.L93:
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
 1003              		.loc 1 1793 4 is_stmt 1 view .LVU294
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
 1004              		.loc 1 1793 10 is_stmt 0 view .LVU295
 1005 003e 488D6C24 		leaq	32(%rsp), %rbp
 1005      20
 1006 0043 488D0D00 		leaq	.LC10(%rip), %rcx
 1006      000000
 1007              	.LVL89:
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
 1008              		.loc 1 1793 10 view .LVU296
 1009 004a 31D2     		xorl	%edx, %edx
 1010              	.LVL90:
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
 1011              		.loc 1 1793 10 view .LVU297
 1012 004c BEC40000 		movl	$196, %esi
 1012      00
 1013              	.LVL91:
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
 1014              		.loc 1 1793 10 view .LVU298
 1015 0051 4889EF   		movq	%rbp, %rdi
 1016              	.LVL92:
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
 1017              		.loc 1 1793 10 view .LVU299
 1018 0054 E8000000 		call	png_safecat@PLT
 1018      00
 1019              	.LVL93:
1794:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, (sizeof message), pos, "': "); /* +2 = 90 */
 1020              		.loc 1 1794 10 view .LVU300
 1021 0059 4C89E9   		movq	%r13, %rcx
 1022 005c 4889EF   		movq	%rbp, %rdi
1793:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, pos+79, pos, name); /* Truncate to 79 chars */
 1023              		.loc 1 1793 10 view .LVU301
 1024 005f 4889C2   		movq	%rax, %rdx
 1025              	.LVL94:
1794:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, (sizeof message), pos, "': "); /* +2 = 90 */
 1026              		.loc 1 1794 4 is_stmt 1 view .LVU302
1794:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, (sizeof message), pos, "': "); /* +2 = 90 */
 1027              		.loc 1 1794 10 is_stmt 0 view .LVU303
 1028 0062 488D704F 		leaq	79(%rax), %rsi
 1029 0066 E8000000 		call	png_safecat@PLT
 1029      00
 1030              	.LVL95:
1795:fltk-1.3.4-1/png/png.c ****    if (is_ICC_signature(value) != 0)
 1031              		.loc 1 1795 10 view .LVU304
 1032 006b 4889EF   		movq	%rbp, %rdi
 1033 006e BEC40000 		movl	$196, %esi
 1033      00
 1034 0073 488D0D00 		leaq	.LC11(%rip), %rcx
 1034      000000
1794:fltk-1.3.4-1/png/png.c ****    pos = png_safecat(message, (sizeof message), pos, "': "); /* +2 = 90 */
 1035              		.loc 1 1794 10 view .LVU305
 1036 007a 4889C2   		movq	%rax, %rdx
 1037              	.LVL96:
1795:fltk-1.3.4-1/png/png.c ****    if (is_ICC_signature(value) != 0)
 1038              		.loc 1 1795 4 is_stmt 1 view .LVU306
1795:fltk-1.3.4-1/png/png.c ****    if (is_ICC_signature(value) != 0)
 1039              		.loc 1 1795 10 is_stmt 0 view .LVU307
 1040 007d E8000000 		call	png_safecat@PLT
 1040      00
 1041              	.LVL97:
 1042              	.LBB222:
 1043              	.LBB223:
1777:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 16) & 0xff) &&
 1044              		.loc 1 1777 11 view .LVU308
 1045 0082 4889DF   		movq	%rbx, %rdi
 1046 0085 48C1EF18 		shrq	$24, %rdi
 1047              	.LBE223:
 1048              	.LBE222:
1795:fltk-1.3.4-1/png/png.c ****    if (is_ICC_signature(value) != 0)
 1049              		.loc 1 1795 10 view .LVU309
 1050 0089 4989C5   		movq	%rax, %r13
 1051              	.LVL98:
1796:fltk-1.3.4-1/png/png.c ****    {
 1052              		.loc 1 1796 4 is_stmt 1 view .LVU310
 1053              	.LBB234:
 1054              	.LBI222:
1775:fltk-1.3.4-1/png/png.c **** {
 1055              		.loc 1 1775 1 view .LVU311
 1056              	.LBB232:
1777:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 16) & 0xff) &&
 1057              		.loc 1 1777 4 view .LVU312
 1058              	.LBB224:
 1059              	.LBI224:
1768:fltk-1.3.4-1/png/png.c **** {
 1060              		.loc 1 1768 1 view .LVU313
 1061              	.LBB225:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1062              		.loc 1 1770 4 view .LVU314
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1063              		.loc 1 1770 33 is_stmt 0 view .LVU315
 1064 008c 488D47D0 		leaq	-48(%rdi), %rax
 1065              	.LVL99:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1066              		.loc 1 1770 72 view .LVU316
 1067 0090 4883F809 		cmpq	$9, %rax
 1068 0094 0F86AE00 		jbe	.L94
 1068      0000
 1069 009a 4883FF20 		cmpq	$32, %rdi
 1070 009e 0F84A400 		je	.L94
 1070      0000
 1071 00a4 E8000000 		call	is_ICC_signature_char.part.0
 1071      00
 1072              	.LVL100:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1073              		.loc 1 1770 72 view .LVU317
 1074              	.LBE225:
 1075              	.LBE224:
1779:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char(it & 0xff);
 1076              		.loc 1 1779 47 view .LVU318
 1077 00a9 85C0     		testl	%eax, %eax
 1078 00ab 0F859700 		jne	.L94
 1078      0000
 1079              	.L95:
 1080              	.LVL101:
1779:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char(it & 0xff);
 1081              		.loc 1 1779 47 view .LVU319
 1082              	.LBE232:
 1083              	.LBE234:
 1084              	.LBB235:
1807:fltk-1.3.4-1/png/png.c **** 
 1085              		.loc 1 1807 10 is_stmt 1 view .LVU320
1809:fltk-1.3.4-1/png/png.c ****             png_format_number(number, number+(sizeof number),
 1086              		.loc 1 1809 10 view .LVU321
1810:fltk-1.3.4-1/png/png.c ****                PNG_NUMBER_FORMAT_x, value));
 1087              		.loc 1 1810 13 is_stmt 0 view .LVU322
 1088 00b1 4889E7   		movq	%rsp, %rdi
 1089 00b4 488D7424 		leaq	24(%rsp), %rsi
 1089      18
 1090 00b9 4889D9   		movq	%rbx, %rcx
 1091 00bc BA030000 		movl	$3, %edx
 1091      00
 1092 00c1 E8000000 		call	png_format_number@PLT
 1092      00
 1093              	.LVL102:
1809:fltk-1.3.4-1/png/png.c ****             png_format_number(number, number+(sizeof number),
 1094              		.loc 1 1809 16 view .LVU323
 1095 00c6 4C89EA   		movq	%r13, %rdx
 1096 00c9 BEC40000 		movl	$196, %esi
 1096      00
 1097 00ce 4889EF   		movq	%rbp, %rdi
1810:fltk-1.3.4-1/png/png.c ****                PNG_NUMBER_FORMAT_x, value));
 1098              		.loc 1 1810 13 view .LVU324
 1099 00d1 4889C1   		movq	%rax, %rcx
1809:fltk-1.3.4-1/png/png.c ****             png_format_number(number, number+(sizeof number),
 1100              		.loc 1 1809 16 view .LVU325
 1101 00d4 E8000000 		call	png_safecat@PLT
 1101      00
 1102              	.LVL103:
1812:fltk-1.3.4-1/png/png.c ****       }
 1103              		.loc 1 1812 16 view .LVU326
 1104 00d9 488D0D00 		leaq	.LC12(%rip), %rcx
 1104      000000
 1105 00e0 BEC40000 		movl	$196, %esi
 1105      00
 1106 00e5 4889EF   		movq	%rbp, %rdi
1809:fltk-1.3.4-1/png/png.c ****             png_format_number(number, number+(sizeof number),
 1107              		.loc 1 1809 16 view .LVU327
 1108 00e8 4889C2   		movq	%rax, %rdx
 1109              	.LVL104:
1812:fltk-1.3.4-1/png/png.c ****       }
 1110              		.loc 1 1812 10 is_stmt 1 view .LVU328
1812:fltk-1.3.4-1/png/png.c ****       }
 1111              		.loc 1 1812 16 is_stmt 0 view .LVU329
 1112 00eb E8000000 		call	png_safecat@PLT
 1112      00
 1113              	.LVL105:
1812:fltk-1.3.4-1/png/png.c ****       }
 1114              		.loc 1 1812 16 view .LVU330
 1115 00f0 4889C2   		movq	%rax, %rdx
 1116              	.LVL106:
 1117              	.L103:
1812:fltk-1.3.4-1/png/png.c ****       }
 1118              		.loc 1 1812 16 view .LVU331
 1119              	.LBE235:
1816:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(pos)
 1120              		.loc 1 1816 4 is_stmt 1 view .LVU332
1816:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(pos)
 1121              		.loc 1 1816 10 is_stmt 0 view .LVU333
 1122 00f3 4C89F9   		movq	%r15, %rcx
 1123 00f6 BEC40000 		movl	$196, %esi
 1123      00
 1124 00fb 4889EF   		movq	%rbp, %rdi
 1125 00fe E8000000 		call	png_safecat@PLT
 1125      00
 1126              	.LVL107:
1817:fltk-1.3.4-1/png/png.c **** 
 1127              		.loc 1 1817 4 is_stmt 1 view .LVU334
1824:fltk-1.3.4-1/png/png.c ****       (colorspace != NULL) ? PNG_CHUNK_ERROR : PNG_CHUNK_WRITE_ERROR);
 1128              		.loc 1 1824 4 view .LVU335
 1129 0103 31D2     		xorl	%edx, %edx
 1130 0105 4D85E4   		testq	%r12, %r12
 1131 0108 4889EE   		movq	%rbp, %rsi
 1132 010b 0F95C2   		setne	%dl
 1133 010e 4C89F7   		movq	%r14, %rdi
 1134 0111 83C201   		addl	$1, %edx
 1135 0114 E8000000 		call	png_chunk_report@PLT
 1135      00
 1136              	.LVL108:
1827:fltk-1.3.4-1/png/png.c **** }
 1137              		.loc 1 1827 4 view .LVU336
1828:fltk-1.3.4-1/png/png.c **** #endif /* sRGB || iCCP */
 1138              		.loc 1 1828 1 is_stmt 0 view .LVU337
 1139 0119 488B8424 		movq	232(%rsp), %rax
 1139      E8000000 
 1140 0121 64483304 		xorq	%fs:40, %rax
 1140      25280000 
 1140      00
 1141 012a 0F85F400 		jne	.L123
 1141      0000
 1142 0130 4881C4F8 		addq	$248, %rsp
 1142      000000
 1143              		.cfi_remember_state
 1144              		.cfi_def_cfa_offset 56
 1145 0137 31C0     		xorl	%eax, %eax
 1146 0139 5B       		popq	%rbx
 1147              		.cfi_def_cfa_offset 48
 1148 013a 5D       		popq	%rbp
 1149              		.cfi_def_cfa_offset 40
 1150 013b 415C     		popq	%r12
 1151              		.cfi_def_cfa_offset 32
 1152              	.LVL109:
1828:fltk-1.3.4-1/png/png.c **** #endif /* sRGB || iCCP */
 1153              		.loc 1 1828 1 view .LVU338
 1154 013d 415D     		popq	%r13
 1155              		.cfi_def_cfa_offset 24
 1156 013f 415E     		popq	%r14
 1157              		.cfi_def_cfa_offset 16
 1158              	.LVL110:
1828:fltk-1.3.4-1/png/png.c **** #endif /* sRGB || iCCP */
 1159              		.loc 1 1828 1 view .LVU339
 1160 0141 415F     		popq	%r15
 1161              		.cfi_def_cfa_offset 8
 1162              	.LVL111:
1828:fltk-1.3.4-1/png/png.c **** #endif /* sRGB || iCCP */
 1163              		.loc 1 1828 1 view .LVU340
 1164 0143 C3       		ret
 1165              	.LVL112:
 1166              		.p2align 4,,10
 1167 0144 0F1F4000 		.p2align 3
 1168              	.L94:
 1169              		.cfi_restore_state
 1170              	.LBB236:
 1171              	.LBB233:
1778:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 8) & 0xff) &&
 1172              		.loc 1 1778 33 view .LVU341
 1173 0148 4889DF   		movq	%rbx, %rdi
 1174 014b 48C1EF10 		shrq	$16, %rdi
1778:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 8) & 0xff) &&
 1175              		.loc 1 1778 7 view .LVU342
 1176 014f 400FB6FF 		movzbl	%dil, %edi
 1177              	.LVL113:
 1178              	.LBB226:
 1179              	.LBI226:
1768:fltk-1.3.4-1/png/png.c **** {
 1180              		.loc 1 1768 1 is_stmt 1 view .LVU343
 1181              	.LBB227:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1182              		.loc 1 1770 4 view .LVU344
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1183              		.loc 1 1770 33 is_stmt 0 view .LVU345
 1184 0153 488D47D0 		leaq	-48(%rdi), %rax
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1185              		.loc 1 1770 72 view .LVU346
 1186 0157 4883F809 		cmpq	$9, %rax
 1187 015b 7613     		jbe	.L96
 1188 015d 4883FF20 		cmpq	$32, %rdi
 1189 0161 740D     		je	.L96
 1190 0163 E8000000 		call	is_ICC_signature_char.part.0
 1190      00
 1191              	.LVL114:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1192              		.loc 1 1770 72 view .LVU347
 1193              	.LBE227:
 1194              	.LBE226:
1777:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 16) & 0xff) &&
 1195              		.loc 1 1777 73 view .LVU348
 1196 0168 85C0     		testl	%eax, %eax
 1197 016a 0F8441FF 		je	.L95
 1197      FFFF
 1198              	.L96:
1779:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char(it & 0xff);
 1199              		.loc 1 1779 7 view .LVU349
 1200 0170 0FB6FF   		movzbl	%bh, %edi
 1201              	.LVL115:
 1202              	.LBB228:
 1203              	.LBI228:
1768:fltk-1.3.4-1/png/png.c **** {
 1204              		.loc 1 1768 1 is_stmt 1 view .LVU350
 1205              	.LBB229:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1206              		.loc 1 1770 4 view .LVU351
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1207              		.loc 1 1770 33 is_stmt 0 view .LVU352
 1208 0173 488D47D0 		leaq	-48(%rdi), %rax
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1209              		.loc 1 1770 72 view .LVU353
 1210 0177 4883F809 		cmpq	$9, %rax
 1211 017b 7613     		jbe	.L97
 1212 017d 4883FF20 		cmpq	$32, %rdi
 1213 0181 740D     		je	.L97
 1214 0183 E8000000 		call	is_ICC_signature_char.part.0
 1214      00
 1215              	.LVL116:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1216              		.loc 1 1770 72 view .LVU354
 1217              	.LBE229:
 1218              	.LBE228:
1778:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char((it >> 8) & 0xff) &&
 1219              		.loc 1 1778 48 view .LVU355
 1220 0188 85C0     		testl	%eax, %eax
 1221 018a 0F8421FF 		je	.L95
 1221      FFFF
 1222              	.L97:
1780:fltk-1.3.4-1/png/png.c **** }
 1223              		.loc 1 1780 7 view .LVU356
 1224 0190 0FB6FB   		movzbl	%bl, %edi
 1225              	.LVL117:
 1226              	.LBB230:
 1227              	.LBI230:
1768:fltk-1.3.4-1/png/png.c **** {
 1228              		.loc 1 1768 1 is_stmt 1 view .LVU357
 1229              	.LBB231:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1230              		.loc 1 1770 4 view .LVU358
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1231              		.loc 1 1770 33 is_stmt 0 view .LVU359
 1232 0193 488D47D0 		leaq	-48(%rdi), %rax
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1233              		.loc 1 1770 72 view .LVU360
 1234 0197 4883F809 		cmpq	$9, %rax
 1235 019b 7613     		jbe	.L98
 1236 019d 4883FF20 		cmpq	$32, %rdi
 1237 01a1 740D     		je	.L98
 1238 01a3 E8000000 		call	is_ICC_signature_char.part.0
 1238      00
 1239              	.LVL118:
1770:fltk-1.3.4-1/png/png.c ****       (it >= 97 && it <= 122);
 1240              		.loc 1 1770 72 view .LVU361
 1241              	.LBE231:
 1242              	.LBE230:
1779:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char(it & 0xff);
 1243              		.loc 1 1779 47 view .LVU362
 1244 01a8 85C0     		testl	%eax, %eax
 1245 01aa 0F8401FF 		je	.L95
 1245      FFFF
 1246              	.L98:
 1247              	.LVL119:
1779:fltk-1.3.4-1/png/png.c ****       is_ICC_signature_char(it & 0xff);
 1248              		.loc 1 1779 47 view .LVU363
 1249              	.LBE233:
 1250              	.LBE236:
1799:fltk-1.3.4-1/png/png.c ****       pos += 6; /* total +8; less than the else clause */
 1251              		.loc 1 1799 7 is_stmt 1 view .LVU364
 1252              	.LBB237:
 1253              	.LBB238:
1760:fltk-1.3.4-1/png/png.c ****    name[2] = png_icc_tag_char(tag >> 16);
 1254              		.loc 1 1760 14 is_stmt 0 view .LVU365
 1255 01b0 89D9     		movl	%ebx, %ecx
 1256              	.LBB239:
 1257              	.LBB240:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1258              		.loc 1 1750 7 view .LVU366
 1259 01b2 BE3F0000 		movl	$63, %esi
 1259      00
 1260              	.LBE240:
 1261              	.LBE239:
 1262              	.LBE238:
 1263              	.LBE237:
1799:fltk-1.3.4-1/png/png.c ****       pos += 6; /* total +8; less than the else clause */
 1264              		.loc 1 1799 7 view .LVU367
 1265 01b7 4A8D542D 		leaq	0(%rbp,%r13), %rdx
 1265      00
 1266              	.LVL120:
 1267              	.LBB262:
 1268              	.LBI237:
1757:fltk-1.3.4-1/png/png.c **** {
 1269              		.loc 1 1757 1 is_stmt 1 view .LVU368
 1270              	.LBB261:
1759:fltk-1.3.4-1/png/png.c ****    name[1] = png_icc_tag_char(tag >> 24);
 1271              		.loc 1 1759 4 view .LVU369
 1272              	.LBB243:
 1273              	.LBB244:
1749:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
 1274              		.loc 1 1749 9 is_stmt 0 view .LVU370
 1275 01bc 0FB6C3   		movzbl	%bl, %eax
 1276              	.LBE244:
 1277              	.LBE243:
1760:fltk-1.3.4-1/png/png.c ****    name[2] = png_icc_tag_char(tag >> 16);
 1278              		.loc 1 1760 14 view .LVU371
 1279 01bf C1E918   		shrl	$24, %ecx
 1280              	.LVL121:
1759:fltk-1.3.4-1/png/png.c ****    name[1] = png_icc_tag_char(tag >> 24);
 1281              		.loc 1 1759 12 view .LVU372
 1282 01c2 C60227   		movb	$39, (%rdx)
1760:fltk-1.3.4-1/png/png.c ****    name[2] = png_icc_tag_char(tag >> 16);
 1283              		.loc 1 1760 4 is_stmt 1 view .LVU373
 1284              	.LVL122:
 1285              	.LBB247:
 1286              	.LBI239:
1747:fltk-1.3.4-1/png/png.c **** {
 1287              		.loc 1 1747 1 view .LVU374
 1288              	.LBB241:
1749:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
 1289              		.loc 1 1749 4 view .LVU375
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1290              		.loc 1 1750 4 view .LVU376
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1291              		.loc 1 1750 19 is_stmt 0 view .LVU377
 1292 01c5 8D79E0   		leal	-32(%rcx), %edi
 1293              	.LBE241:
 1294              	.LBE247:
1764:fltk-1.3.4-1/png/png.c **** }
 1295              		.loc 1 1764 12 view .LVU378
 1296 01c8 C6420527 		movb	$39, 5(%rdx)
 1297              	.LBB248:
 1298              	.LBB242:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1299              		.loc 1 1750 7 view .LVU379
 1300 01cc 83FF5F   		cmpl	$95, %edi
 1301 01cf 0F43CE   		cmovnb	%esi, %ecx
 1302              	.LVL123:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1303              		.loc 1 1750 7 view .LVU380
 1304              	.LBE242:
 1305              	.LBE248:
1760:fltk-1.3.4-1/png/png.c ****    name[2] = png_icc_tag_char(tag >> 16);
 1306              		.loc 1 1760 12 view .LVU381
 1307 01d2 884A01   		movb	%cl, 1(%rdx)
1761:fltk-1.3.4-1/png/png.c ****    name[3] = png_icc_tag_char(tag >>  8);
 1308              		.loc 1 1761 4 is_stmt 1 view .LVU382
1761:fltk-1.3.4-1/png/png.c ****    name[3] = png_icc_tag_char(tag >>  8);
 1309              		.loc 1 1761 14 is_stmt 0 view .LVU383
 1310 01d5 89D9     		movl	%ebx, %ecx
 1311 01d7 C1E910   		shrl	$16, %ecx
 1312              	.LVL124:
 1313              	.LBB249:
 1314              	.LBI249:
1747:fltk-1.3.4-1/png/png.c **** {
 1315              		.loc 1 1747 1 is_stmt 1 view .LVU384
 1316              	.LBB250:
1749:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
 1317              		.loc 1 1749 4 view .LVU385
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1318              		.loc 1 1750 4 view .LVU386
1749:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
 1319              		.loc 1 1749 9 is_stmt 0 view .LVU387
 1320 01da 0FB6F9   		movzbl	%cl, %edi
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1321              		.loc 1 1750 19 view .LVU388
 1322 01dd 83EF20   		subl	$32, %edi
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1323              		.loc 1 1750 7 view .LVU389
 1324 01e0 83FF5F   		cmpl	$95, %edi
 1325              	.LBE250:
 1326              	.LBE249:
 1327              	.LBB252:
 1328              	.LBB253:
1749:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
 1329              		.loc 1 1749 9 view .LVU390
 1330 01e3 0FB6FF   		movzbl	%bh, %edi
 1331              	.LBE253:
 1332              	.LBE252:
 1333              	.LBB256:
 1334              	.LBB251:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1335              		.loc 1 1750 7 view .LVU391
 1336 01e6 0F43CE   		cmovnb	%esi, %ecx
 1337              	.LVL125:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1338              		.loc 1 1750 7 view .LVU392
 1339              	.LBE251:
 1340              	.LBE256:
 1341              	.LBB257:
 1342              	.LBB254:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1343              		.loc 1 1750 19 view .LVU393
 1344 01e9 83EF20   		subl	$32, %edi
 1345              	.LBE254:
 1346              	.LBE257:
1761:fltk-1.3.4-1/png/png.c ****    name[3] = png_icc_tag_char(tag >>  8);
 1347              		.loc 1 1761 12 view .LVU394
 1348 01ec 884A02   		movb	%cl, 2(%rdx)
1762:fltk-1.3.4-1/png/png.c ****    name[4] = png_icc_tag_char(tag      );
 1349              		.loc 1 1762 4 is_stmt 1 view .LVU395
1762:fltk-1.3.4-1/png/png.c ****    name[4] = png_icc_tag_char(tag      );
 1350              		.loc 1 1762 14 is_stmt 0 view .LVU396
 1351 01ef 89D9     		movl	%ebx, %ecx
 1352 01f1 C1E908   		shrl	$8, %ecx
 1353              	.LVL126:
 1354              	.LBB258:
 1355              	.LBI252:
1747:fltk-1.3.4-1/png/png.c **** {
 1356              		.loc 1 1747 1 is_stmt 1 view .LVU397
 1357              	.LBB255:
1749:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
 1358              		.loc 1 1749 4 view .LVU398
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1359              		.loc 1 1750 4 view .LVU399
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1360              		.loc 1 1750 7 is_stmt 0 view .LVU400
 1361 01f4 83FF5F   		cmpl	$95, %edi
 1362 01f7 0F43CE   		cmovnb	%esi, %ecx
 1363              	.LVL127:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1364              		.loc 1 1750 7 view .LVU401
 1365              	.LBE255:
 1366              	.LBE258:
 1367              	.LBB259:
 1368              	.LBB245:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1369              		.loc 1 1750 19 view .LVU402
 1370 01fa 83E820   		subl	$32, %eax
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1371              		.loc 1 1750 7 view .LVU403
 1372 01fd 83F85F   		cmpl	$95, %eax
 1373 0200 B83F0000 		movl	$63, %eax
 1373      00
 1374 0205 480F43D8 		cmovnb	%rax, %rbx
 1375              	.LVL128:
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1376              		.loc 1 1750 7 view .LVU404
 1377              	.LBE245:
 1378              	.LBE259:
1762:fltk-1.3.4-1/png/png.c ****    name[4] = png_icc_tag_char(tag      );
 1379              		.loc 1 1762 12 view .LVU405
 1380 0209 884A03   		movb	%cl, 3(%rdx)
1763:fltk-1.3.4-1/png/png.c ****    name[5] = '\'';
 1381              		.loc 1 1763 4 is_stmt 1 view .LVU406
 1382              	.LBB260:
 1383              	.LBI243:
1747:fltk-1.3.4-1/png/png.c **** {
 1384              		.loc 1 1747 1 view .LVU407
 1385              	.LBB246:
1749:fltk-1.3.4-1/png/png.c ****    if (byte >= 32 && byte <= 126)
 1386              		.loc 1 1749 4 view .LVU408
1750:fltk-1.3.4-1/png/png.c ****       return (char)byte;
 1387              		.loc 1 1750 4 view .LVU409
 1388              	.LBE246:
 1389              	.LBE260:
1763:fltk-1.3.4-1/png/png.c ****    name[5] = '\'';
 1390              		.loc 1 1763 12 is_stmt 0 view .LVU410
 1391 020c 885A04   		movb	%bl, 4(%rdx)
1764:fltk-1.3.4-1/png/png.c **** }
 1392              		.loc 1 1764 4 is_stmt 1 view .LVU411
 1393              	.LVL129:
1764:fltk-1.3.4-1/png/png.c **** }
 1394              		.loc 1 1764 4 is_stmt 0 view .LVU412
 1395              	.LBE261:
 1396              	.LBE262:
1800:fltk-1.3.4-1/png/png.c ****       message[pos++] = ':';
 1397              		.loc 1 1800 7 is_stmt 1 view .LVU413
1801:fltk-1.3.4-1/png/png.c ****       message[pos++] = ' ';
 1398              		.loc 1 1801 7 view .LVU414
1802:fltk-1.3.4-1/png/png.c ****    }
 1399              		.loc 1 1802 18 is_stmt 0 view .LVU415
 1400 020f 498D5508 		leaq	8(%r13), %rdx
1801:fltk-1.3.4-1/png/png.c ****       message[pos++] = ' ';
 1401              		.loc 1 1801 22 view .LVU416
 1402 0213 42C6442C 		movb	$58, 38(%rsp,%r13)
 1402      263A
1802:fltk-1.3.4-1/png/png.c ****    }
 1403              		.loc 1 1802 7 is_stmt 1 view .LVU417
 1404              	.LVL130:
1802:fltk-1.3.4-1/png/png.c ****    }
 1405              		.loc 1 1802 22 is_stmt 0 view .LVU418
 1406 0219 42C6442C 		movb	$32, 39(%rsp,%r13)
 1406      2720
 1407 021f E9CFFEFF 		jmp	.L103
 1407      FF
 1408              	.LVL131:
 1409              	.L123:
1828:fltk-1.3.4-1/png/png.c **** #endif /* sRGB || iCCP */
 1410              		.loc 1 1828 1 view .LVU419
 1411 0224 E8000000 		call	__stack_chk_fail@PLT
 1411      00
 1412              	.LVL132:
 1413              		.cfi_endproc
 1414              	.LFE86:
 1416              		.section	.text.png_free_data.part.0,"ax",@progbits
 1417              		.p2align 4
 1419              	png_free_data.part.0:
 1420              	.LVL133:
 1421              	.LFB123:
 442:fltk-1.3.4-1/png/png.c ****    int num)
 1422              		.loc 1 442 1 is_stmt 1 view -0
 1423              		.cfi_startproc
 452:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_TEXT) & info_ptr->free_me) != 0)
 1424              		.loc 1 452 4 view .LVU421
 442:fltk-1.3.4-1/png/png.c ****    int num)
 1425              		.loc 1 442 1 is_stmt 0 view .LVU422
 1426 0000 4157     		pushq	%r15
 1427              		.cfi_def_cfa_offset 16
 1428              		.cfi_offset 15, -16
 1429 0002 4156     		pushq	%r14
 1430              		.cfi_def_cfa_offset 24
 1431              		.cfi_offset 14, -24
 1432 0004 4189CE   		movl	%ecx, %r14d
 1433 0007 4155     		pushq	%r13
 1434              		.cfi_def_cfa_offset 32
 1435              		.cfi_offset 13, -32
 1436 0009 4154     		pushq	%r12
 1437              		.cfi_def_cfa_offset 40
 1438              		.cfi_offset 12, -40
 1439 000b 4189D4   		movl	%edx, %r12d
 1440 000e 55       		pushq	%rbp
 1441              		.cfi_def_cfa_offset 48
 1442              		.cfi_offset 6, -48
 1443 000f 4489E0   		movl	%r12d, %eax
 1444 0012 4889FD   		movq	%rdi, %rbp
 1445 0015 53       		pushq	%rbx
 1446              		.cfi_def_cfa_offset 56
 1447              		.cfi_offset 3, -56
 1448 0016 4889F3   		movq	%rsi, %rbx
 1449 0019 4883EC08 		subq	$8, %rsp
 1450              		.cfi_def_cfa_offset 64
 1451 001d 8B931C01 		movl	284(%rbx), %edx
 1451      0000
 1452              	.LVL134:
 452:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_TEXT) & info_ptr->free_me) != 0)
 1453              		.loc 1 452 16 view .LVU423
 1454 0023 488BB6A0 		movq	160(%rsi), %rsi
 1454      000000
 1455              	.LVL135:
 452:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_TEXT) & info_ptr->free_me) != 0)
 1456              		.loc 1 452 16 view .LVU424
 1457 002a 21D0     		andl	%edx, %eax
 1458              	.LVL136:
 452:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_TEXT) & info_ptr->free_me) != 0)
 1459              		.loc 1 452 7 view .LVU425
 1460 002c 4885F6   		testq	%rsi, %rsi
 1461 002f 7409     		je	.L125
 452:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_TEXT) & info_ptr->free_me) != 0)
 1462              		.loc 1 452 28 view .LVU426
 1463 0031 F6C440   		testb	$64, %ah
 1464 0034 0F855E01 		jne	.L213
 1464      0000
 1465              	.LVL137:
 1466              	.L125:
 477:fltk-1.3.4-1/png/png.c ****    {
 1467              		.loc 1 477 4 is_stmt 1 view .LVU427
 477:fltk-1.3.4-1/png/png.c ****    {
 1468              		.loc 1 477 7 is_stmt 0 view .LVU428
 1469 003a F6C420   		testb	$32, %ah
 1470 003d 0F85CD01 		jne	.L214
 1470      0000
 1471              	.L130:
 487:fltk-1.3.4-1/png/png.c ****    {
 1472              		.loc 1 487 4 is_stmt 1 view .LVU429
 487:fltk-1.3.4-1/png/png.c ****    {
 1473              		.loc 1 487 7 is_stmt 0 view .LVU430
 1474 0043 F6C401   		testb	$1, %ah
 1475 0046 0F85F601 		jne	.L215
 1475      0000
 1476              	.L131:
 499:fltk-1.3.4-1/png/png.c ****    {
 1477              		.loc 1 499 4 is_stmt 1 view .LVU431
 499:fltk-1.3.4-1/png/png.c ****    {
 1478              		.loc 1 499 7 is_stmt 0 view .LVU432
 1479 004c A880     		testb	$-128, %al
 1480 004e 0F853C02 		jne	.L216
 1480      0000
 1481              	.L132:
 522:fltk-1.3.4-1/png/png.c ****    {
 1482              		.loc 1 522 4 is_stmt 1 view .LVU433
 522:fltk-1.3.4-1/png/png.c ****    {
 1483              		.loc 1 522 7 is_stmt 0 view .LVU434
 1484 0054 A810     		testb	$16, %al
 1485 0056 0F85D402 		jne	.L217
 1485      0000
 1486              	.L137:
 534:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_SPLT) & info_ptr->free_me) != 0)
 1487              		.loc 1 534 4 is_stmt 1 view .LVU435
 534:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_SPLT) & info_ptr->free_me) != 0)
 1488              		.loc 1 534 16 is_stmt 0 view .LVU436
 1489 005c 488BB330 		movq	304(%rbx), %rsi
 1489      010000
 534:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_SPLT) & info_ptr->free_me) != 0)
 1490              		.loc 1 534 7 view .LVU437
 1491 0063 4885F6   		testq	%rsi, %rsi
 1492 0066 7408     		je	.L138
 534:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_SPLT) & info_ptr->free_me) != 0)
 1493              		.loc 1 534 37 view .LVU438
 1494 0068 A820     		testb	$32, %al
 1495 006a 0F851003 		jne	.L218
 1495      0000
 1496              	.L138:
 567:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_UNKN) & info_ptr->free_me) != 0)
 1497              		.loc 1 567 4 is_stmt 1 view .LVU439
 567:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_UNKN) & info_ptr->free_me) != 0)
 1498              		.loc 1 567 16 is_stmt 0 view .LVU440
 1499 0070 488BB320 		movq	288(%rbx), %rsi
 1499      010000
 567:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_UNKN) & info_ptr->free_me) != 0)
 1500              		.loc 1 567 7 view .LVU441
 1501 0077 4885F6   		testq	%rsi, %rsi
 1502 007a 7409     		je	.L144
 567:fltk-1.3.4-1/png/png.c ****        ((mask & PNG_FREE_UNKN) & info_ptr->free_me) != 0)
 1503              		.loc 1 567 38 view .LVU442
 1504 007c F6C402   		testb	$2, %ah
 1505 007f 0F859B00 		jne	.L219
 1505      0000
 1506              	.L144:
 595:fltk-1.3.4-1/png/png.c ****    {
 1507              		.loc 1 595 4 is_stmt 1 view .LVU443
 595:fltk-1.3.4-1/png/png.c ****    {
 1508              		.loc 1 595 7 is_stmt 0 view .LVU444
 1509 0085 A808     		testb	$8, %al
 1510 0087 0F858303 		jne	.L220
 1510      0000
 604:fltk-1.3.4-1/png/png.c ****    {
 1511              		.loc 1 604 4 is_stmt 1 view .LVU445
 604:fltk-1.3.4-1/png/png.c ****    {
 1512              		.loc 1 604 7 is_stmt 0 view .LVU446
 1513 008d F6C410   		testb	$16, %ah
 1514 0090 0F85AC03 		jne	.L221
 1514      0000
 1515              	.L150:
 614:fltk-1.3.4-1/png/png.c ****    {
 1516              		.loc 1 614 4 is_stmt 1 view .LVU447
 614:fltk-1.3.4-1/png/png.c ****    {
 1517              		.loc 1 614 7 is_stmt 0 view .LVU448
 1518 0096 A840     		testb	$64, %al
 1519 0098 7456     		je	.L151
 616:fltk-1.3.4-1/png/png.c ****       {
 1520              		.loc 1 616 7 is_stmt 1 view .LVU449
 616:fltk-1.3.4-1/png/png.c ****       {
 1521              		.loc 1 616 19 is_stmt 0 view .LVU450
 1522 009a 488BB350 		movq	336(%rbx), %rsi
 1522      010000
 616:fltk-1.3.4-1/png/png.c ****       {
 1523              		.loc 1 616 10 view .LVU451
 1524 00a1 4885F6   		testq	%rsi, %rsi
 1525 00a4 7443     		je	.L152
 1526              	.LVL138:
 1527              	.LBB263:
 619:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 1528              		.loc 1 619 24 is_stmt 1 view .LVU452
 619:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 1529              		.loc 1 619 10 is_stmt 0 view .LVU453
 1530 00a6 8B4304   		movl	4(%rbx), %eax
 1531 00a9 85C0     		testl	%eax, %eax
 1532 00ab 7423     		je	.L153
 619:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 1533              		.loc 1 619 19 view .LVU454
 1534 00ad 4531ED   		xorl	%r13d, %r13d
 1535              	.LVL139:
 1536              		.p2align 4,,10
 1537              		.p2align 3
 1538              	.L155:
 620:fltk-1.3.4-1/png/png.c **** 
 1539              		.loc 1 620 13 is_stmt 1 view .LVU455
 620:fltk-1.3.4-1/png/png.c **** 
 1540              		.loc 1 620 53 is_stmt 0 view .LVU456
 1541 00b0 4489E8   		movl	%r13d, %eax
 620:fltk-1.3.4-1/png/png.c **** 
 1542              		.loc 1 620 13 view .LVU457
 1543 00b3 4889EF   		movq	%rbp, %rdi
 619:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 1544              		.loc 1 619 51 view .LVU458
 1545 00b6 4183C501 		addl	$1, %r13d
 1546              	.LVL140:
 620:fltk-1.3.4-1/png/png.c **** 
 1547              		.loc 1 620 13 view .LVU459
 1548 00ba 488B34C6 		movq	(%rsi,%rax,8), %rsi
 1549 00be E8000000 		call	png_free@PLT
 1549      00
 1550              	.LVL141:
 619:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 1551              		.loc 1 619 48 is_stmt 1 view .LVU460
 619:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 1552              		.loc 1 619 24 view .LVU461
 619:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->row_pointers[row]);
 1553              		.loc 1 619 10 is_stmt 0 view .LVU462
 1554 00c3 443B6B04 		cmpl	4(%rbx), %r13d
 1555 00c7 488BB350 		movq	336(%rbx), %rsi
 1555      010000
 1556 00ce 72E0     		jb	.L155
 1557              	.LVL142:
 1558              	.L153:
 622:fltk-1.3.4-1/png/png.c ****          info_ptr->row_pointers = NULL;
 1559              		.loc 1 622 10 is_stmt 1 view .LVU463
 1560 00d0 4889EF   		movq	%rbp, %rdi
 1561 00d3 E8000000 		call	png_free@PLT
 1561      00
 1562              	.LVL143:
 623:fltk-1.3.4-1/png/png.c ****       }
 1563              		.loc 1 623 10 view .LVU464
 1564 00d8 8B931C01 		movl	284(%rbx), %edx
 1564      0000
 623:fltk-1.3.4-1/png/png.c ****       }
 1565              		.loc 1 623 33 is_stmt 0 view .LVU465
 1566 00de 48C78350 		movq	$0, 336(%rbx)
 1566      01000000 
 1566      000000
 1567              	.L152:
 623:fltk-1.3.4-1/png/png.c ****       }
 1568              		.loc 1 623 33 view .LVU466
 1569              	.LBE263:
 625:fltk-1.3.4-1/png/png.c ****    }
 1570              		.loc 1 625 7 is_stmt 1 view .LVU467
 625:fltk-1.3.4-1/png/png.c ****    }
 1571              		.loc 1 625 23 is_stmt 0 view .LVU468
 1572 00e9 816308FF 		andl	$-32769, 8(%rbx)
 1572      7FFFFF
 1573              	.L151:
 629:fltk-1.3.4-1/png/png.c ****       mask &= ~PNG_FREE_MUL;
 1574              		.loc 1 629 4 is_stmt 1 view .LVU469
 630:fltk-1.3.4-1/png/png.c **** 
 1575              		.loc 1 630 12 is_stmt 0 view .LVU470
 1576 00f0 4489E0   		movl	%r12d, %eax
 1577 00f3 25DFBDFF 		andl	$-16929, %eax
 1577      FF
 1578 00f8 4183FEFF 		cmpl	$-1, %r14d
 1579 00fc 440F45E0 		cmovne	%eax, %r12d
 1580              	.LVL144:
 632:fltk-1.3.4-1/png/png.c **** }
 1581              		.loc 1 632 4 is_stmt 1 view .LVU471
 632:fltk-1.3.4-1/png/png.c **** }
 1582              		.loc 1 632 25 is_stmt 0 view .LVU472
 1583 0100 41F7D4   		notl	%r12d
 1584              	.LVL145:
 632:fltk-1.3.4-1/png/png.c **** }
 1585              		.loc 1 632 22 view .LVU473
 1586 0103 4121D4   		andl	%edx, %r12d
 1587              	.LVL146:
 632:fltk-1.3.4-1/png/png.c **** }
 1588              		.loc 1 632 22 view .LVU474
 1589 0106 4489A31C 		movl	%r12d, 284(%rbx)
 1589      010000
 633:fltk-1.3.4-1/png/png.c **** #endif /* READ || WRITE */
 1590              		.loc 1 633 1 view .LVU475
 1591 010d 4883C408 		addq	$8, %rsp
 1592              		.cfi_remember_state
 1593              		.cfi_def_cfa_offset 56
 1594 0111 5B       		popq	%rbx
 1595              		.cfi_def_cfa_offset 48
 1596              	.LVL147:
 633:fltk-1.3.4-1/png/png.c **** #endif /* READ || WRITE */
 1597              		.loc 1 633 1 view .LVU476
 1598 0112 5D       		popq	%rbp
 1599              		.cfi_def_cfa_offset 40
 1600              	.LVL148:
 633:fltk-1.3.4-1/png/png.c **** #endif /* READ || WRITE */
 1601              		.loc 1 633 1 view .LVU477
 1602 0113 415C     		popq	%r12
 1603              		.cfi_def_cfa_offset 32
 1604 0115 415D     		popq	%r13
 1605              		.cfi_def_cfa_offset 24
 1606 0117 415E     		popq	%r14
 1607              		.cfi_def_cfa_offset 16
 1608              	.LVL149:
 633:fltk-1.3.4-1/png/png.c **** #endif /* READ || WRITE */
 1609              		.loc 1 633 1 view .LVU478
 1610 0119 415F     		popq	%r15
 1611              		.cfi_def_cfa_offset 8
 1612 011b C3       		ret
 1613              	.LVL150:
 1614 011c 0F1F4000 		.p2align 4,,10
 1615              		.p2align 3
 1616              	.L219:
 1617              		.cfi_restore_state
 570:fltk-1.3.4-1/png/png.c ****       {
 1618              		.loc 1 570 7 is_stmt 1 view .LVU479
 570:fltk-1.3.4-1/png/png.c ****       {
 1619              		.loc 1 570 10 is_stmt 0 view .LVU480
 1620 0120 4183FEFF 		cmpl	$-1, %r14d
 1621 0124 0F85D603 		jne	.L222
 1621      0000
 1622              	.LBB264:
 578:fltk-1.3.4-1/png/png.c **** 
 1623              		.loc 1 578 10 is_stmt 1 view .LVU481
 580:fltk-1.3.4-1/png/png.c ****          {
 1624              		.loc 1 580 10 view .LVU482
 580:fltk-1.3.4-1/png/png.c ****          {
 1625              		.loc 1 580 13 is_stmt 0 view .LVU483
 1626 012a 8B8B2801 		movl	296(%rbx), %ecx
 1626      0000
 1627 0130 85C9     		testl	%ecx, %ecx
 1628 0132 0F844DFF 		je	.L144
 1628      FFFF
 1629              	.LVL151:
 582:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->unknown_chunks[i].data);
 1630              		.loc 1 582 25 is_stmt 1 view .LVU484
 582:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->unknown_chunks[i].data);
 1631              		.loc 1 582 13 is_stmt 0 view .LVU485
 1632 0138 7E2E     		jle	.L146
 1633 013a 4531ED   		xorl	%r13d, %r13d
 1634              	.LVL152:
 1635 013d 0F1F00   		.p2align 4,,10
 1636              		.p2align 3
 1637              	.L148:
 583:fltk-1.3.4-1/png/png.c **** 
 1638              		.loc 1 583 16 is_stmt 1 view .LVU486
 583:fltk-1.3.4-1/png/png.c **** 
 1639              		.loc 1 583 61 is_stmt 0 view .LVU487
 1640 0140 4C89E8   		movq	%r13, %rax
 583:fltk-1.3.4-1/png/png.c **** 
 1641              		.loc 1 583 16 view .LVU488
 1642 0143 4889EF   		movq	%rbp, %rdi
 1643 0146 4983C501 		addq	$1, %r13
 1644              	.LVL153:
 583:fltk-1.3.4-1/png/png.c **** 
 1645              		.loc 1 583 61 view .LVU489
 1646 014a 48C1E005 		salq	$5, %rax
 583:fltk-1.3.4-1/png/png.c **** 
 1647              		.loc 1 583 16 view .LVU490
 1648 014e 488B7406 		movq	8(%rsi,%rax), %rsi
 1648      08
 1649 0153 E8000000 		call	png_free@PLT
 1649      00
 1650              	.LVL154:
 582:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->unknown_chunks[i].data);
 1651              		.loc 1 582 59 is_stmt 1 view .LVU491
 582:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->unknown_chunks[i].data);
 1652              		.loc 1 582 25 view .LVU492
 582:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->unknown_chunks[i].data);
 1653              		.loc 1 582 13 is_stmt 0 view .LVU493
 1654 0158 4439AB28 		cmpl	%r13d, 296(%rbx)
 1654      010000
 1655 015f 488BB320 		movq	288(%rbx), %rsi
 1655      010000
 1656 0166 7FD8     		jg	.L148
 1657              	.L146:
 585:fltk-1.3.4-1/png/png.c ****             info_ptr->unknown_chunks = NULL;
 1658              		.loc 1 585 13 is_stmt 1 view .LVU494
 1659 0168 4889EF   		movq	%rbp, %rdi
 1660 016b E8000000 		call	png_free@PLT
 1660      00
 1661              	.LVL155:
 586:fltk-1.3.4-1/png/png.c ****             info_ptr->unknown_chunks_num = 0;
 1662              		.loc 1 586 13 view .LVU495
 1663 0170 8B931C01 		movl	284(%rbx), %edx
 1663      0000
 1664 0176 4489E0   		movl	%r12d, %eax
 586:fltk-1.3.4-1/png/png.c ****             info_ptr->unknown_chunks_num = 0;
 1665              		.loc 1 586 38 is_stmt 0 view .LVU496
 1666 0179 48C78320 		movq	$0, 288(%rbx)
 1666      01000000 
 1666      000000
 587:fltk-1.3.4-1/png/png.c ****          }
 1667              		.loc 1 587 13 is_stmt 1 view .LVU497
 587:fltk-1.3.4-1/png/png.c ****          }
 1668              		.loc 1 587 42 is_stmt 0 view .LVU498
 1669 0184 C7832801 		movl	$0, 296(%rbx)
 1669      00000000 
 1669      0000
 1670 018e 21D0     		andl	%edx, %eax
 1671 0190 E9F0FEFF 		jmp	.L144
 1671      FF
 1672              	.LVL156:
 1673              		.p2align 4,,10
 1674 0195 0F1F00   		.p2align 3
 1675              	.L213:
 587:fltk-1.3.4-1/png/png.c ****          }
 1676              		.loc 1 587 42 view .LVU499
 1677              	.LBE264:
 455:fltk-1.3.4-1/png/png.c ****       {
 1678              		.loc 1 455 7 is_stmt 1 view .LVU500
 455:fltk-1.3.4-1/png/png.c ****       {
 1679              		.loc 1 455 10 is_stmt 0 view .LVU501
 1680 0198 83F9FF   		cmpl	$-1, %ecx
 1681 019b 0F851F03 		jne	.L126
 1681      0000
 1682              	.LVL157:
 1683              	.LBB265:
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1684              		.loc 1 465 22 is_stmt 1 view .LVU502
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1685              		.loc 1 465 10 is_stmt 0 view .LVU503
 1686 01a1 448B8394 		movl	148(%rbx), %r8d
 1686      000000
 1687 01a8 4531FF   		xorl	%r15d, %r15d
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1688              		.loc 1 465 17 view .LVU504
 1689 01ab 4531ED   		xorl	%r13d, %r13d
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1690              		.loc 1 465 10 view .LVU505
 1691 01ae 4585C0   		testl	%r8d, %r8d
 1692 01b1 7E2A     		jle	.L128
 1693              	.LVL158:
 1694              		.p2align 4,,10
 1695 01b3 0F1F4400 		.p2align 3
 1695      00
 1696              	.L127:
 466:fltk-1.3.4-1/png/png.c **** 
 1697              		.loc 1 466 13 is_stmt 1 view .LVU506
 1698 01b8 4A8B743E 		movq	8(%rsi,%r15), %rsi
 1698      08
 1699 01bd 4889EF   		movq	%rbp, %rdi
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1700              		.loc 1 465 47 is_stmt 0 view .LVU507
 1701 01c0 4183C501 		addl	$1, %r13d
 1702              	.LVL159:
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1703              		.loc 1 465 47 view .LVU508
 1704 01c4 4983C738 		addq	$56, %r15
 466:fltk-1.3.4-1/png/png.c **** 
 1705              		.loc 1 466 13 view .LVU509
 1706 01c8 E8000000 		call	png_free@PLT
 1706      00
 1707              	.LVL160:
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1708              		.loc 1 465 46 is_stmt 1 view .LVU510
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1709              		.loc 1 465 22 view .LVU511
 465:fltk-1.3.4-1/png/png.c ****             png_free(png_ptr, info_ptr->text[i].key);
 1710              		.loc 1 465 10 is_stmt 0 view .LVU512
 1711 01cd 443BAB94 		cmpl	148(%rbx), %r13d
 1711      000000
 1712 01d4 488BB3A0 		movq	160(%rbx), %rsi
 1712      000000
 1713 01db 7CDB     		jl	.L127
 1714              	.LVL161:
 1715              	.L128:
 468:fltk-1.3.4-1/png/png.c ****          info_ptr->text = NULL;
 1716              		.loc 1 468 10 is_stmt 1 view .LVU513
 1717 01dd 4889EF   		movq	%rbp, %rdi
 1718 01e0 E8000000 		call	png_free@PLT
 1718      00
 1719              	.LVL162:
 469:fltk-1.3.4-1/png/png.c ****          info_ptr->num_text = 0;
 1720              		.loc 1 469 10 view .LVU514
 1721 01e5 8B931C01 		movl	284(%rbx), %edx
 1721      0000
 1722 01eb 4489E0   		movl	%r12d, %eax
 469:fltk-1.3.4-1/png/png.c ****          info_ptr->num_text = 0;
 1723              		.loc 1 469 25 is_stmt 0 view .LVU515
 1724 01ee 48C783A0 		movq	$0, 160(%rbx)
 1724      00000000 
 1724      000000
 470:fltk-1.3.4-1/png/png.c ****       }
 1725              		.loc 1 470 10 is_stmt 1 view .LVU516
 470:fltk-1.3.4-1/png/png.c ****       }
 1726              		.loc 1 470 29 is_stmt 0 view .LVU517
 1727 01f9 C7839400 		movl	$0, 148(%rbx)
 1727      00000000 
 1727      0000
 1728 0203 21D0     		andl	%edx, %eax
 1729              	.LBE265:
 477:fltk-1.3.4-1/png/png.c ****    {
 1730              		.loc 1 477 4 is_stmt 1 view .LVU518
 477:fltk-1.3.4-1/png/png.c ****    {
 1731              		.loc 1 477 7 is_stmt 0 view .LVU519
 1732 0205 F6C420   		testb	$32, %ah
 1733 0208 0F8435FE 		je	.L130
 1733      FFFF
 1734 020e 6690     		.p2align 4,,10
 1735              		.p2align 3
 1736              	.L214:
 479:fltk-1.3.4-1/png/png.c ****       info_ptr->trans_alpha = NULL;
 1737              		.loc 1 479 7 is_stmt 1 view .LVU520
 1738 0210 488BB3B8 		movq	184(%rbx), %rsi
 1738      000000
 1739 0217 4889EF   		movq	%rbp, %rdi
 1740 021a E8000000 		call	png_free@PLT
 1740      00
 1741              	.LVL163:
 480:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_tRNS;
 1742              		.loc 1 480 7 view .LVU521
 1743 021f 8B931C01 		movl	284(%rbx), %edx
 1743      0000
 1744 0225 4489E0   		movl	%r12d, %eax
 481:fltk-1.3.4-1/png/png.c ****    }
 1745              		.loc 1 481 23 is_stmt 0 view .LVU522
 1746 0228 836308EF 		andl	$-17, 8(%rbx)
 480:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_tRNS;
 1747              		.loc 1 480 29 view .LVU523
 1748 022c 48C783B8 		movq	$0, 184(%rbx)
 1748      00000000 
 1748      000000
 481:fltk-1.3.4-1/png/png.c ****    }
 1749              		.loc 1 481 7 is_stmt 1 view .LVU524
 1750 0237 21D0     		andl	%edx, %eax
 487:fltk-1.3.4-1/png/png.c ****    {
 1751              		.loc 1 487 4 view .LVU525
 487:fltk-1.3.4-1/png/png.c ****    {
 1752              		.loc 1 487 7 is_stmt 0 view .LVU526
 1753 0239 F6C401   		testb	$1, %ah
 1754 023c 0F840AFE 		je	.L131
 1754      FFFF
 1755              	.L215:
 489:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->scal_s_height);
 1756              		.loc 1 489 7 is_stmt 1 view .LVU527
 1757 0242 488BB340 		movq	320(%rbx), %rsi
 1757      010000
 1758 0249 4889EF   		movq	%rbp, %rdi
 1759 024c E8000000 		call	png_free@PLT
 1759      00
 1760              	.LVL164:
 490:fltk-1.3.4-1/png/png.c ****       info_ptr->scal_s_width = NULL;
 1761              		.loc 1 490 7 view .LVU528
 1762 0251 488BB348 		movq	328(%rbx), %rsi
 1762      010000
 1763 0258 4889EF   		movq	%rbp, %rdi
 1764 025b E8000000 		call	png_free@PLT
 1764      00
 1765              	.LVL165:
 491:fltk-1.3.4-1/png/png.c ****       info_ptr->scal_s_height = NULL;
 1766              		.loc 1 491 7 view .LVU529
 1767 0260 8B931C01 		movl	284(%rbx), %edx
 1767      0000
 1768 0266 4489E0   		movl	%r12d, %eax
 493:fltk-1.3.4-1/png/png.c ****    }
 1769              		.loc 1 493 23 is_stmt 0 view .LVU530
 1770 0269 816308FF 		andl	$-16385, 8(%rbx)
 1770      BFFFFF
 491:fltk-1.3.4-1/png/png.c ****       info_ptr->scal_s_height = NULL;
 1771              		.loc 1 491 30 view .LVU531
 1772 0270 48C78340 		movq	$0, 320(%rbx)
 1772      01000000 
 1772      000000
 492:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_sCAL;
 1773              		.loc 1 492 7 is_stmt 1 view .LVU532
 492:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_sCAL;
 1774              		.loc 1 492 31 is_stmt 0 view .LVU533
 1775 027b 48C78348 		movq	$0, 328(%rbx)
 1775      01000000 
 1775      000000
 493:fltk-1.3.4-1/png/png.c ****    }
 1776              		.loc 1 493 7 is_stmt 1 view .LVU534
 1777 0286 21D0     		andl	%edx, %eax
 499:fltk-1.3.4-1/png/png.c ****    {
 1778              		.loc 1 499 4 view .LVU535
 499:fltk-1.3.4-1/png/png.c ****    {
 1779              		.loc 1 499 7 is_stmt 0 view .LVU536
 1780 0288 A880     		testb	$-128, %al
 1781 028a 0F84C4FD 		je	.L132
 1781      FFFF
 1782              	.L216:
 501:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->pcal_units);
 1783              		.loc 1 501 7 is_stmt 1 view .LVU537
 1784 0290 488BB3F8 		movq	248(%rbx), %rsi
 1784      000000
 1785 0297 4889EF   		movq	%rbp, %rdi
 1786 029a E8000000 		call	png_free@PLT
 1786      00
 1787              	.LVL166:
 502:fltk-1.3.4-1/png/png.c ****       info_ptr->pcal_purpose = NULL;
 1788              		.loc 1 502 7 view .LVU538
 1789 029f 488BB308 		movq	264(%rbx), %rsi
 1789      010000
 1790 02a6 4889EF   		movq	%rbp, %rdi
 1791 02a9 E8000000 		call	png_free@PLT
 1791      00
 1792              	.LVL167:
 503:fltk-1.3.4-1/png/png.c ****       info_ptr->pcal_units = NULL;
 1793              		.loc 1 503 7 view .LVU539
 506:fltk-1.3.4-1/png/png.c ****          {
 1794              		.loc 1 506 19 is_stmt 0 view .LVU540
 1795 02ae 488BB310 		movq	272(%rbx), %rsi
 1795      010000
 503:fltk-1.3.4-1/png/png.c ****       info_ptr->pcal_units = NULL;
 1796              		.loc 1 503 30 view .LVU541
 1797 02b5 48C783F8 		movq	$0, 248(%rbx)
 1797      00000000 
 1797      000000
 504:fltk-1.3.4-1/png/png.c **** 
 1798              		.loc 1 504 7 is_stmt 1 view .LVU542
 504:fltk-1.3.4-1/png/png.c **** 
 1799              		.loc 1 504 28 is_stmt 0 view .LVU543
 1800 02c0 48C78308 		movq	$0, 264(%rbx)
 1800      01000000 
 1800      000000
 506:fltk-1.3.4-1/png/png.c ****          {
 1801              		.loc 1 506 7 is_stmt 1 view .LVU544
 506:fltk-1.3.4-1/png/png.c ****          {
 1802              		.loc 1 506 10 is_stmt 0 view .LVU545
 1803 02cb 4885F6   		testq	%rsi, %rsi
 1804 02ce 7446     		je	.L133
 1805              	.LVL168:
 1806              	.LBB266:
 510:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->pcal_params[i]);
 1807              		.loc 1 510 25 is_stmt 1 view .LVU546
 510:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->pcal_params[i]);
 1808              		.loc 1 510 13 is_stmt 0 view .LVU547
 1809 02d0 80BB1901 		cmpb	$0, 281(%rbx)
 1809      000000
 1810 02d7 742A     		je	.L134
 1811 02d9 4531ED   		xorl	%r13d, %r13d
 1812              	.LVL169:
 1813 02dc 0F1F4000 		.p2align 4,,10
 1814              		.p2align 3
 1815              	.L136:
 511:fltk-1.3.4-1/png/png.c **** 
 1816              		.loc 1 511 16 is_stmt 1 view .LVU548
 1817 02e0 4A8B34EE 		movq	(%rsi,%r13,8), %rsi
 1818 02e4 4889EF   		movq	%rbp, %rdi
 1819 02e7 4983C501 		addq	$1, %r13
 1820              	.LVL170:
 511:fltk-1.3.4-1/png/png.c **** 
 1821              		.loc 1 511 16 is_stmt 0 view .LVU549
 1822 02eb E8000000 		call	png_free@PLT
 1822      00
 1823              	.LVL171:
 510:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->pcal_params[i]);
 1824              		.loc 1 510 53 is_stmt 1 view .LVU550
 510:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->pcal_params[i]);
 1825              		.loc 1 510 25 view .LVU551
 510:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->pcal_params[i]);
 1826              		.loc 1 510 37 is_stmt 0 view .LVU552
 1827 02f0 0FB68319 		movzbl	281(%rbx), %eax
 1827      010000
 1828 02f7 488BB310 		movq	272(%rbx), %rsi
 1828      010000
 510:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->pcal_params[i]);
 1829              		.loc 1 510 13 view .LVU553
 1830 02fe 4439E8   		cmpl	%r13d, %eax
 1831 0301 7FDD     		jg	.L136
 1832              	.L134:
 513:fltk-1.3.4-1/png/png.c ****             info_ptr->pcal_params = NULL;
 1833              		.loc 1 513 13 is_stmt 1 view .LVU554
 1834 0303 4889EF   		movq	%rbp, %rdi
 1835 0306 E8000000 		call	png_free@PLT
 1835      00
 1836              	.LVL172:
 514:fltk-1.3.4-1/png/png.c ****          }
 1837              		.loc 1 514 13 view .LVU555
 514:fltk-1.3.4-1/png/png.c ****          }
 1838              		.loc 1 514 35 is_stmt 0 view .LVU556
 1839 030b 48C78310 		movq	$0, 272(%rbx)
 1839      01000000 
 1839      000000
 1840              	.L133:
 514:fltk-1.3.4-1/png/png.c ****          }
 1841              		.loc 1 514 35 view .LVU557
 1842              	.LBE266:
 516:fltk-1.3.4-1/png/png.c ****    }
 1843              		.loc 1 516 7 is_stmt 1 view .LVU558
 1844 0316 8B931C01 		movl	284(%rbx), %edx
 1844      0000
 1845 031c 4489E0   		movl	%r12d, %eax
 516:fltk-1.3.4-1/png/png.c ****    }
 1846              		.loc 1 516 23 is_stmt 0 view .LVU559
 1847 031f 816308FF 		andl	$-1025, 8(%rbx)
 1847      FBFFFF
 1848 0326 21D0     		andl	%edx, %eax
 522:fltk-1.3.4-1/png/png.c ****    {
 1849              		.loc 1 522 4 is_stmt 1 view .LVU560
 522:fltk-1.3.4-1/png/png.c ****    {
 1850              		.loc 1 522 7 is_stmt 0 view .LVU561
 1851 0328 A810     		testb	$16, %al
 1852 032a 0F842CFD 		je	.L137
 1852      FFFF
 1853              	.L217:
 524:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr->iccp_profile);
 1854              		.loc 1 524 7 is_stmt 1 view .LVU562
 1855 0330 488BB380 		movq	128(%rbx), %rsi
 1855      000000
 1856 0337 4889EF   		movq	%rbp, %rdi
 1857 033a E8000000 		call	png_free@PLT
 1857      00
 1858              	.LVL173:
 525:fltk-1.3.4-1/png/png.c ****       info_ptr->iccp_name = NULL;
 1859              		.loc 1 525 7 view .LVU563
 1860 033f 488BB388 		movq	136(%rbx), %rsi
 1860      000000
 1861 0346 4889EF   		movq	%rbp, %rdi
 1862 0349 E8000000 		call	png_free@PLT
 1862      00
 1863              	.LVL174:
 526:fltk-1.3.4-1/png/png.c ****       info_ptr->iccp_profile = NULL;
 1864              		.loc 1 526 7 view .LVU564
 1865 034e 8B931C01 		movl	284(%rbx), %edx
 1865      0000
 1866 0354 4489E0   		movl	%r12d, %eax
 528:fltk-1.3.4-1/png/png.c ****    }
 1867              		.loc 1 528 23 is_stmt 0 view .LVU565
 1868 0357 816308FF 		andl	$-4097, 8(%rbx)
 1868      EFFFFF
 526:fltk-1.3.4-1/png/png.c ****       info_ptr->iccp_profile = NULL;
 1869              		.loc 1 526 27 view .LVU566
 1870 035e 48C78380 		movq	$0, 128(%rbx)
 1870      00000000 
 1870      000000
 527:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_iCCP;
 1871              		.loc 1 527 7 is_stmt 1 view .LVU567
 527:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_iCCP;
 1872              		.loc 1 527 30 is_stmt 0 view .LVU568
 1873 0369 48C78388 		movq	$0, 136(%rbx)
 1873      00000000 
 1873      000000
 528:fltk-1.3.4-1/png/png.c ****    }
 1874              		.loc 1 528 7 is_stmt 1 view .LVU569
 1875 0374 21D0     		andl	%edx, %eax
 1876 0376 E9E1FCFF 		jmp	.L137
 1876      FF
 1877 037b 0F1F4400 		.p2align 4,,10
 1877      00
 1878              		.p2align 3
 1879              	.L218:
 537:fltk-1.3.4-1/png/png.c ****       {
 1880              		.loc 1 537 7 view .LVU570
 537:fltk-1.3.4-1/png/png.c ****       {
 1881              		.loc 1 537 10 is_stmt 0 view .LVU571
 1882 0380 4183FEFF 		cmpl	$-1, %r14d
 1883 0384 0F85E600 		jne	.L223
 1883      0000
 547:fltk-1.3.4-1/png/png.c ****          {
 1884              		.loc 1 547 10 is_stmt 1 view .LVU572
 547:fltk-1.3.4-1/png/png.c ****          {
 1885              		.loc 1 547 13 is_stmt 0 view .LVU573
 1886 038a 8BBB3801 		movl	312(%rbx), %edi
 1886      0000
 1887 0390 85FF     		testl	%edi, %edi
 1888 0392 746F     		je	.L140
 1889              	.LVL175:
 1890              	.LBB267:
 551:fltk-1.3.4-1/png/png.c ****             {
 1891              		.loc 1 551 25 is_stmt 1 view .LVU574
 551:fltk-1.3.4-1/png/png.c ****             {
 1892              		.loc 1 551 13 is_stmt 0 view .LVU575
 1893 0394 7E45     		jle	.L141
 1894 0396 4531ED   		xorl	%r13d, %r13d
 1895              	.LVL176:
 1896 0399 0F1F8000 		.p2align 4,,10
 1896      000000
 1897              		.p2align 3
 1898              	.L143:
 553:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->splt_palettes[i].entries);
 1899              		.loc 1 553 16 is_stmt 1 view .LVU576
 1900 03a0 4D89EF   		movq	%r13, %r15
 1901 03a3 4889EF   		movq	%rbp, %rdi
 1902 03a6 4983C501 		addq	$1, %r13
 1903              	.LVL177:
 553:fltk-1.3.4-1/png/png.c ****                png_free(png_ptr, info_ptr->splt_palettes[i].entries);
 1904              		.loc 1 553 16 is_stmt 0 view .LVU577
 1905 03aa 49C1E705 		salq	$5, %r15
 1906 03ae 4A8B343E 		movq	(%rsi,%r15), %rsi
 1907 03b2 E8000000 		call	png_free@PLT
 1907      00
 1908              	.LVL178:
 554:fltk-1.3.4-1/png/png.c ****             }
 1909              		.loc 1 554 16 is_stmt 1 view .LVU578
 554:fltk-1.3.4-1/png/png.c ****             }
 1910              		.loc 1 554 60 is_stmt 0 view .LVU579
 1911 03b7 488B8330 		movq	304(%rbx), %rax
 1911      010000
 554:fltk-1.3.4-1/png/png.c ****             }
 1912              		.loc 1 554 16 view .LVU580
 1913 03be 4889EF   		movq	%rbp, %rdi
 1914 03c1 4A8B7438 		movq	16(%rax,%r15), %rsi
 1914      10
 1915 03c6 E8000000 		call	png_free@PLT
 1915      00
 1916              	.LVL179:
 551:fltk-1.3.4-1/png/png.c ****             {
 1917              		.loc 1 551 58 is_stmt 1 view .LVU581
 551:fltk-1.3.4-1/png/png.c ****             {
 1918              		.loc 1 551 25 view .LVU582
 551:fltk-1.3.4-1/png/png.c ****             {
 1919              		.loc 1 551 13 is_stmt 0 view .LVU583
 1920 03cb 4439AB38 		cmpl	%r13d, 312(%rbx)
 1920      010000
 1921 03d2 488BB330 		movq	304(%rbx), %rsi
 1921      010000
 1922 03d9 7FC5     		jg	.L143
 1923              	.L141:
 557:fltk-1.3.4-1/png/png.c ****             info_ptr->splt_palettes = NULL;
 1924              		.loc 1 557 13 is_stmt 1 view .LVU584
 1925 03db 4889EF   		movq	%rbp, %rdi
 1926 03de E8000000 		call	png_free@PLT
 1926      00
 1927              	.LVL180:
 558:fltk-1.3.4-1/png/png.c ****             info_ptr->splt_palettes_num = 0;
 1928              		.loc 1 558 13 view .LVU585
 1929 03e3 8B931C01 		movl	284(%rbx), %edx
 1929      0000
 1930 03e9 4489E0   		movl	%r12d, %eax
 558:fltk-1.3.4-1/png/png.c ****             info_ptr->splt_palettes_num = 0;
 1931              		.loc 1 558 37 is_stmt 0 view .LVU586
 1932 03ec 48C78330 		movq	$0, 304(%rbx)
 1932      01000000 
 1932      000000
 559:fltk-1.3.4-1/png/png.c ****          }
 1933              		.loc 1 559 13 is_stmt 1 view .LVU587
 559:fltk-1.3.4-1/png/png.c ****          }
 1934              		.loc 1 559 41 is_stmt 0 view .LVU588
 1935 03f7 C7833801 		movl	$0, 312(%rbx)
 1935      00000000 
 1935      0000
 1936 0401 21D0     		andl	%edx, %eax
 1937              	.L140:
 559:fltk-1.3.4-1/png/png.c ****          }
 1938              		.loc 1 559 41 view .LVU589
 1939              	.LBE267:
 561:fltk-1.3.4-1/png/png.c ****       }
 1940              		.loc 1 561 10 is_stmt 1 view .LVU590
 561:fltk-1.3.4-1/png/png.c ****       }
 1941              		.loc 1 561 26 is_stmt 0 view .LVU591
 1942 0403 816308FF 		andl	$-8193, 8(%rbx)
 1942      DFFFFF
 1943 040a E961FCFF 		jmp	.L138
 1943      FF
 1944 040f 90       		.p2align 4,,10
 1945              		.p2align 3
 1946              	.L220:
 597:fltk-1.3.4-1/png/png.c ****       info_ptr->hist = NULL;
 1947              		.loc 1 597 7 is_stmt 1 view .LVU592
 1948 0410 488BB3F0 		movq	240(%rbx), %rsi
 1948      000000
 1949 0417 4889EF   		movq	%rbp, %rdi
 1950 041a E8000000 		call	png_free@PLT
 1950      00
 1951              	.LVL181:
 598:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_hIST;
 1952              		.loc 1 598 7 view .LVU593
 1953 041f 8B931C01 		movl	284(%rbx), %edx
 1953      0000
 1954 0425 4489E0   		movl	%r12d, %eax
 599:fltk-1.3.4-1/png/png.c ****    }
 1955              		.loc 1 599 23 is_stmt 0 view .LVU594
 1956 0428 836308BF 		andl	$-65, 8(%rbx)
 598:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_hIST;
 1957              		.loc 1 598 22 view .LVU595
 1958 042c 48C783F0 		movq	$0, 240(%rbx)
 1958      00000000 
 1958      000000
 599:fltk-1.3.4-1/png/png.c ****    }
 1959              		.loc 1 599 7 is_stmt 1 view .LVU596
 1960 0437 21D0     		andl	%edx, %eax
 604:fltk-1.3.4-1/png/png.c ****    {
 1961              		.loc 1 604 4 view .LVU597
 604:fltk-1.3.4-1/png/png.c ****    {
 1962              		.loc 1 604 7 is_stmt 0 view .LVU598
 1963 0439 F6C410   		testb	$16, %ah
 1964 043c 0F8454FC 		je	.L150
 1964      FFFF
 1965              	.L221:
 606:fltk-1.3.4-1/png/png.c ****       info_ptr->palette = NULL;
 1966              		.loc 1 606 7 is_stmt 1 view .LVU599
 1967 0442 488B7318 		movq	24(%rbx), %rsi
 1968 0446 4889EF   		movq	%rbp, %rdi
 1969 0449 E8000000 		call	png_free@PLT
 1969      00
 1970              	.LVL182:
 607:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_PLTE;
 1971              		.loc 1 607 7 view .LVU600
 609:fltk-1.3.4-1/png/png.c ****    }
 1972              		.loc 1 609 29 is_stmt 0 view .LVU601
 1973 044e 31D2     		xorl	%edx, %edx
 1974 0450 4489E0   		movl	%r12d, %eax
 608:fltk-1.3.4-1/png/png.c ****       info_ptr->num_palette = 0;
 1975              		.loc 1 608 23 view .LVU602
 1976 0453 836308F7 		andl	$-9, 8(%rbx)
 609:fltk-1.3.4-1/png/png.c ****    }
 1977              		.loc 1 609 29 view .LVU603
 1978 0457 66895320 		movw	%dx, 32(%rbx)
 1979 045b 8B931C01 		movl	284(%rbx), %edx
 1979      0000
 607:fltk-1.3.4-1/png/png.c ****       info_ptr->valid &= ~PNG_INFO_PLTE;
 1980              		.loc 1 607 25 view .LVU604
 1981 0461 48C74318 		movq	$0, 24(%rbx)
 1981      00000000 
 608:fltk-1.3.4-1/png/png.c ****       info_ptr->num_palette = 0;
 1982              		.loc 1 608 7 is_stmt 1 view .LVU605
 609:fltk-1.3.4-1/png/png.c ****    }
 1983              		.loc 1 609 7 view .LVU606
 1984 0469 21D0     		andl	%edx, %eax
 1985 046b E926FCFF 		jmp	.L150
 1985      FF
 1986              		.p2align 4,,10
 1987              		.p2align 3
 1988              	.L223:
 539:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->splt_palettes[num].entries);
 1989              		.loc 1 539 10 view .LVU607
 539:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->splt_palettes[num].entries);
 1990              		.loc 1 539 51 is_stmt 0 view .LVU608
 1991 0470 4D63EE   		movslq	%r14d, %r13
 539:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->splt_palettes[num].entries);
 1992              		.loc 1 539 10 view .LVU609
 1993 0473 4889EF   		movq	%rbp, %rdi
 539:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->splt_palettes[num].entries);
 1994              		.loc 1 539 51 view .LVU610
 1995 0476 49C1E505 		salq	$5, %r13
 539:fltk-1.3.4-1/png/png.c ****          png_free(png_ptr, info_ptr->splt_palettes[num].entries);
 1996              		.loc 1 539 10 view .LVU611
 1997 047a 4A8B342E 		movq	(%rsi,%r13), %rsi
 1998 047e E8000000 		call	png_free@PLT
 1998      00
 1999              	.LVL183:
 540:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].name = NULL;
 2000              		.loc 1 540 10 is_stmt 1 view .LVU612
 540:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].name = NULL;
 2001              		.loc 1 540 56 is_stmt 0 view .LVU613
 2002 0483 488B8330 		movq	304(%rbx), %rax
 2002      010000
 540:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].name = NULL;
 2003              		.loc 1 540 10 view .LVU614
 2004 048a 4889EF   		movq	%rbp, %rdi
 2005 048d 4A8B7428 		movq	16(%rax,%r13), %rsi
 2005      10
 2006 0492 E8000000 		call	png_free@PLT
 2006      00
 2007              	.LVL184:
 541:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].entries = NULL;
 2008              		.loc 1 541 10 is_stmt 1 view .LVU615
 2009 0497 8B931C01 		movl	284(%rbx), %edx
 2009      0000
 541:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].entries = NULL;
 2010              		.loc 1 541 33 is_stmt 0 view .LVU616
 2011 049d 4C03AB30 		addq	304(%rbx), %r13
 2011      010000
 2012 04a4 4489E0   		movl	%r12d, %eax
 541:fltk-1.3.4-1/png/png.c ****          info_ptr->splt_palettes[num].entries = NULL;
 2013              		.loc 1 541 44 view .LVU617
 2014 04a7 49C74500 		movq	$0, 0(%r13)
 2014      00000000 
 542:fltk-1.3.4-1/png/png.c ****       }
 2015              		.loc 1 542 10 is_stmt 1 view .LVU618
 542:fltk-1.3.4-1/png/png.c ****       }
 2016              		.loc 1 542 47 is_stmt 0 view .LVU619
 2017 04af 49C74510 		movq	$0, 16(%r13)
 2017      00000000 
 2018 04b7 21D0     		andl	%edx, %eax
 2019 04b9 E9B2FBFF 		jmp	.L138
 2019      FF
 2020              	.LVL185:
 2021 04be 6690     		.p2align 4,,10
 2022              		.p2align 3
 2023              	.L126:
 457:fltk-1.3.4-1/png/png.c ****          info_ptr->text[num].key = NULL;
 2024              		.loc 1 457 10 is_stmt 1 view .LVU620
 457:fltk-1.3.4-1/png/png.c ****          info_ptr->text[num].key = NULL;
 2025              		.loc 1 457 42 is_stmt 0 view .LVU621
 2026 04c0 4863C1   		movslq	%ecx, %rax
 2027 04c3 4C8D2CC5 		leaq	0(,%rax,8), %r13
 2027      00000000 
 2028 04cb 4929C5   		subq	%rax, %r13
 2029 04ce 49C1E503 		salq	$3, %r13
 457:fltk-1.3.4-1/png/png.c ****          info_ptr->text[num].key = NULL;
 2030              		.loc 1 457 10 view .LVU622
 2031 04d2 4A8B742E 		movq	8(%rsi,%r13), %rsi
 2031      08
 2032 04d7 E8000000 		call	png_free@PLT
 2032      00
 2033              	.LVL186:
 458:fltk-1.3.4-1/png/png.c ****       }
 2034              		.loc 1 458 10 is_stmt 1 view .LVU623
 458:fltk-1.3.4-1/png/png.c ****       }
 2035              		.loc 1 458 34 is_stmt 0 view .LVU624
 2036 04dc 488B83A0 		movq	160(%rbx), %rax
 2036      000000
 2037 04e3 8B931C01 		movl	284(%rbx), %edx
 2037      0000
 2038 04e9 4AC74428 		movq	$0, 8(%rax,%r13)
 2038      08000000 
 2038      00
 2039 04f2 4489E0   		movl	%r12d, %eax
 2040 04f5 21D0     		andl	%edx, %eax
 2041 04f7 E93EFBFF 		jmp	.L125
 2041      FF
 2042 04fc 0F1F4000 		.p2align 4,,10
 2043              		.p2align 3
 2044              	.L222:
 572:fltk-1.3.4-1/png/png.c ****           info_ptr->unknown_chunks[num].data = NULL;
 2045              		.loc 1 572 11 is_stmt 1 view .LVU625
 572:fltk-1.3.4-1/png/png.c ****           info_ptr->unknown_chunks[num].data = NULL;
 2046              		.loc 1 572 53 is_stmt 0 view .LVU626
 2047 0500 4D63EE   		movslq	%r14d, %r13
 572:fltk-1.3.4-1/png/png.c ****           info_ptr->unknown_chunks[num].data = NULL;
 2048              		.loc 1 572 11 view .LVU627
 2049 0503 4889EF   		movq	%rbp, %rdi
 572:fltk-1.3.4-1/png/png.c ****           info_ptr->unknown_chunks[num].data = NULL;
 2050              		.loc 1 572 53 view .LVU628
 2051 0506 49C1E505 		salq	$5, %r13
 572:fltk-1.3.4-1/png/png.c ****           info_ptr->unknown_chunks[num].data = NULL;
 2052              		.loc 1 572 11 view .LVU629
 2053 050a 4A8B742E 		movq	8(%rsi,%r13), %rsi
 2053      08
 2054 050f E8000000 		call	png_free@PLT
 2054      00
 2055              	.LVL187:
 573:fltk-1.3.4-1/png/png.c ****       }
 2056              		.loc 1 573 11 is_stmt 1 view .LVU630
 573:fltk-1.3.4-1/png/png.c ****       }
 2057              		.loc 1 573 46 is_stmt 0 view .LVU631
 2058 0514 488B8320 		movq	288(%rbx), %rax
 2058      010000
 2059 051b 8B931C01 		movl	284(%rbx), %edx
 2059      0000
 2060 0521 4AC74428 		movq	$0, 8(%rax,%r13)
 2060      08000000 
 2060      00
 2061 052a 4489E0   		movl	%r12d, %eax
 2062 052d 21D0     		andl	%edx, %eax
 2063 052f E951FBFF 		jmp	.L144
 2063      FF
 2064              		.cfi_endproc
 2065              	.LFE123:
 2067              		.section	.text.png_muldiv.part.0,"ax",@progbits
 2068              		.p2align 4
 2070              	png_muldiv.part.0:
 2071              	.LVL188:
 2072              	.LFB127:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2073              		.loc 1 3243 1 is_stmt 1 view -0
 2074              		.cfi_startproc
 2075              	.LBB268:
3257:fltk-1.3.4-1/png/png.c ****          r *= times;
 2076              		.loc 1 3257 10 view .LVU633
3257:fltk-1.3.4-1/png/png.c ****          r *= times;
 2077              		.loc 1 3257 17 is_stmt 0 view .LVU634
 2078 0000 660FEFC9 		pxor	%xmm1, %xmm1
3258:fltk-1.3.4-1/png/png.c ****          r /= divisor;
 2079              		.loc 1 3258 12 view .LVU635
 2080 0004 660FEFC0 		pxor	%xmm0, %xmm0
3260:fltk-1.3.4-1/png/png.c **** 
 2081              		.loc 1 3260 14 view .LVU636
 2082 0008 F20F1015 		movsd	.LC8(%rip), %xmm2
 2082      00000000 
 2083 0010 F20F101D 		movsd	.LC7(%rip), %xmm3
 2083      00000000 
3257:fltk-1.3.4-1/png/png.c ****          r *= times;
 2084              		.loc 1 3257 17 view .LVU637
 2085 0018 F20F2ACE 		cvtsi2sdl	%esi, %xmm1
 2086              	.LVL189:
3258:fltk-1.3.4-1/png/png.c ****          r /= divisor;
 2087              		.loc 1 3258 10 is_stmt 1 view .LVU638
3258:fltk-1.3.4-1/png/png.c ****          r /= divisor;
 2088              		.loc 1 3258 12 is_stmt 0 view .LVU639
 2089 001c F20F2AC2 		cvtsi2sdl	%edx, %xmm0
 2090 0020 F20F59C1 		mulsd	%xmm1, %xmm0
 2091              	.LVL190:
3259:fltk-1.3.4-1/png/png.c ****          r = floor(r+.5);
 2092              		.loc 1 3259 10 is_stmt 1 view .LVU640
3260:fltk-1.3.4-1/png/png.c **** 
 2093              		.loc 1 3260 10 view .LVU641
3259:fltk-1.3.4-1/png/png.c ****          r = floor(r+.5);
 2094              		.loc 1 3259 12 is_stmt 0 view .LVU642
 2095 0024 660FEFC9 		pxor	%xmm1, %xmm1
 2096 0028 F20F2AC9 		cvtsi2sdl	%ecx, %xmm1
 2097 002c F20F5EC1 		divsd	%xmm1, %xmm0
 2098              	.LVL191:
3260:fltk-1.3.4-1/png/png.c **** 
 2099              		.loc 1 3260 14 view .LVU643
 2100 0030 F20F5805 		addsd	.LC6(%rip), %xmm0
 2100      00000000 
 2101 0038 660F28C8 		movapd	%xmm0, %xmm1
 2102 003c 660F54CA 		andpd	%xmm2, %xmm1
 2103 0040 660F2ED9 		ucomisd	%xmm1, %xmm3
 2104 0044 7633     		jbe	.L225
 2105 0046 F2480F2C 		cvttsd2siq	%xmm0, %rax
 2105      C0
 2106 004b 660FEFC9 		pxor	%xmm1, %xmm1
 2107 004f F20F1025 		movsd	.LC1(%rip), %xmm4
 2107      00000000 
 2108 0057 660F55D0 		andnpd	%xmm0, %xmm2
 2109 005b F2480F2A 		cvtsi2sdq	%rax, %xmm1
 2109      C8
 2110 0060 660F28D9 		movapd	%xmm1, %xmm3
 2111 0064 F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 2111      06
 2112 0069 660F28C2 		movapd	%xmm2, %xmm0
 2113 006d 660F54DC 		andpd	%xmm4, %xmm3
 2114 0071 F20F5CCB 		subsd	%xmm3, %xmm1
 2115 0075 660F56C1 		orpd	%xmm1, %xmm0
 2116              	.L225:
 2117              	.LVL192:
3263:fltk-1.3.4-1/png/png.c ****          {
 2118              		.loc 1 3263 10 is_stmt 1 view .LVU644
3263:fltk-1.3.4-1/png/png.c ****          {
 2119              		.loc 1 3263 13 is_stmt 0 view .LVU645
 2120 0079 F20F100D 		movsd	.LC13(%rip), %xmm1
 2120      00000000 
 2121 0081 660F2FC8 		comisd	%xmm0, %xmm1
 2122 0085 720A     		jb	.L234
3263:fltk-1.3.4-1/png/png.c ****          {
 2123              		.loc 1 3263 31 view .LVU646
 2124 0087 660F2F05 		comisd	.LC14(%rip), %xmm0
 2124      00000000 
 2125 008f 7307     		jnb	.L235
 2126              	.L234:
 2127              	.LBE268:
3354:fltk-1.3.4-1/png/png.c **** }
 2128              		.loc 1 3354 11 view .LVU647
 2129 0091 31C0     		xorl	%eax, %eax
3355:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA || INCH_CONVERSIONS */
 2130              		.loc 1 3355 1 view .LVU648
 2131 0093 C3       		ret
 2132              		.p2align 4,,10
 2133 0094 0F1F4000 		.p2align 3
 2134              	.L235:
 2135              	.LBB269:
3265:fltk-1.3.4-1/png/png.c ****             return 1;
 2136              		.loc 1 3265 13 is_stmt 1 view .LVU649
3265:fltk-1.3.4-1/png/png.c ****             return 1;
 2137              		.loc 1 3265 20 is_stmt 0 view .LVU650
 2138 0098 F20F2CC0 		cvttsd2sil	%xmm0, %eax
 2139 009c 8907     		movl	%eax, (%rdi)
3266:fltk-1.3.4-1/png/png.c ****          }
 2140              		.loc 1 3266 13 is_stmt 1 view .LVU651
3266:fltk-1.3.4-1/png/png.c ****          }
 2141              		.loc 1 3266 20 is_stmt 0 view .LVU652
 2142 009e B8010000 		movl	$1, %eax
 2142      00
 2143 00a3 C3       		ret
 2144              	.LBE269:
 2145              		.cfi_endproc
 2146              	.LFE127:
 2148              		.section	.text.png_xy_from_XYZ,"ax",@progbits
 2149              		.p2align 4
 2151              	png_xy_from_XYZ:
 2152              	.LVL193:
 2153              	.LFB73:
1194:fltk-1.3.4-1/png/png.c ****    png_int_32 d, dwhite, whiteX, whiteY;
 2154              		.loc 1 1194 1 is_stmt 1 view -0
 2155              		.cfi_startproc
1195:fltk-1.3.4-1/png/png.c **** 
 2156              		.loc 1 1195 4 view .LVU654
1197:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->redx, XYZ->red_X, PNG_FP_1, d) == 0)
 2157              		.loc 1 1197 4 view .LVU655
1194:fltk-1.3.4-1/png/png.c ****    png_int_32 d, dwhite, whiteX, whiteY;
 2158              		.loc 1 1194 1 is_stmt 0 view .LVU656
 2159 0000 4989F0   		movq	%rsi, %r8
1197:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->redx, XYZ->red_X, PNG_FP_1, d) == 0)
 2160              		.loc 1 1197 11 view .LVU657
 2161 0003 8B36     		movl	(%rsi), %esi
 2162              	.LVL194:
1197:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->redx, XYZ->red_X, PNG_FP_1, d) == 0)
 2163              		.loc 1 1197 19 view .LVU658
 2164 0005 418B4004 		movl	4(%r8), %eax
 2165 0009 01F0     		addl	%esi, %eax
 2166              	.LVL195:
1198:fltk-1.3.4-1/png/png.c ****       return 1;
 2167              		.loc 1 1198 4 is_stmt 1 view .LVU659
 2168              	.LBB270:
 2169              	.LBI270:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2170              		.loc 1 3243 1 view .LVU660
 2171              	.LBB271:
3247:fltk-1.3.4-1/png/png.c ****    {
 2172              		.loc 1 3247 4 view .LVU661
3247:fltk-1.3.4-1/png/png.c ****    {
 2173              		.loc 1 3247 7 is_stmt 0 view .LVU662
 2174 000b 41034008 		addl	8(%r8), %eax
 2175              	.LVL196:
3247:fltk-1.3.4-1/png/png.c ****    {
 2176              		.loc 1 3247 7 view .LVU663
 2177 000f 0F846B01 		je	.L288
 2177      0000
 2178              	.LBE271:
 2179              	.LBE270:
1194:fltk-1.3.4-1/png/png.c ****    png_int_32 d, dwhite, whiteX, whiteY;
 2180              		.loc 1 1194 1 view .LVU664
 2181 0015 4155     		pushq	%r13
 2182              		.cfi_def_cfa_offset 16
 2183              		.cfi_offset 13, -16
 2184 0017 4989FB   		movq	%rdi, %r11
 2185 001a 4189C1   		movl	%eax, %r9d
 2186              	.LBB275:
 2187              	.LBB272:
3249:fltk-1.3.4-1/png/png.c ****       {
 2188              		.loc 1 3249 7 is_stmt 1 view .LVU665
 2189              	.LBE272:
 2190              	.LBE275:
1194:fltk-1.3.4-1/png/png.c ****    png_int_32 d, dwhite, whiteX, whiteY;
 2191              		.loc 1 1194 1 is_stmt 0 view .LVU666
 2192 001d 4154     		pushq	%r12
 2193              		.cfi_def_cfa_offset 24
 2194              		.cfi_offset 12, -24
 2195 001f 55       		pushq	%rbp
 2196              		.cfi_def_cfa_offset 32
 2197              		.cfi_offset 6, -32
 2198 0020 53       		pushq	%rbx
 2199              		.cfi_def_cfa_offset 40
 2200              		.cfi_offset 3, -40
 2201              	.LBB276:
 2202              	.LBB273:
3249:fltk-1.3.4-1/png/png.c ****       {
 2203              		.loc 1 3249 10 view .LVU667
 2204 0021 85F6     		testl	%esi, %esi
 2205 0023 0F846701 		je	.L289
 2205      0000
 2206 0029 89C1     		movl	%eax, %ecx
 2207 002b BAA08601 		movl	$100000, %edx
 2207      00
 2208 0030 E8000000 		call	png_muldiv.part.0
 2208      00
 2209              	.LVL197:
3249:fltk-1.3.4-1/png/png.c ****       {
 2210              		.loc 1 3249 10 view .LVU668
 2211              	.LBE273:
 2212              	.LBE276:
1198:fltk-1.3.4-1/png/png.c ****       return 1;
 2213              		.loc 1 1198 7 view .LVU669
 2214 0035 85C0     		testl	%eax, %eax
 2215 0037 0F843301 		je	.L241
 2215      0000
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2216              		.loc 1 1200 4 is_stmt 1 view .LVU670
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2217              		.loc 1 1200 8 is_stmt 0 view .LVU671
 2218 003d 418B7004 		movl	4(%r8), %esi
 2219              	.LVL198:
 2220              	.LBB277:
 2221              	.LBI277:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2222              		.loc 1 3243 1 is_stmt 1 view .LVU672
 2223              	.LBB278:
3247:fltk-1.3.4-1/png/png.c ****    {
 2224              		.loc 1 3247 4 view .LVU673
3249:fltk-1.3.4-1/png/png.c ****       {
 2225              		.loc 1 3249 7 view .LVU674
3249:fltk-1.3.4-1/png/png.c ****       {
 2226              		.loc 1 3249 10 is_stmt 0 view .LVU675
 2227 0041 85F6     		testl	%esi, %esi
 2228 0043 0F845901 		je	.L290
 2228      0000
 2229              	.LVL199:
 2230              	.L242:
3249:fltk-1.3.4-1/png/png.c ****       {
 2231              		.loc 1 3249 10 view .LVU676
 2232              	.LBE278:
 2233              	.LBE277:
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2234              		.loc 1 1200 8 view .LVU677
 2235 0049 498D7B04 		leaq	4(%r11), %rdi
 2236              	.LVL200:
 2237              	.LBB281:
 2238              	.LBB279:
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2239              		.loc 1 1200 8 view .LVU678
 2240 004d 4489C9   		movl	%r9d, %ecx
 2241 0050 BAA08601 		movl	$100000, %edx
 2241      00
 2242 0055 E8000000 		call	png_muldiv.part.0
 2242      00
 2243              	.LVL201:
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2244              		.loc 1 1200 8 view .LVU679
 2245              	.LBE279:
 2246              	.LBE281:
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2247              		.loc 1 1200 7 view .LVU680
 2248 005a 85C0     		testl	%eax, %eax
 2249 005c 0F840E01 		je	.L241
 2249      0000
 2250              	.L243:
1202:fltk-1.3.4-1/png/png.c ****    whiteX = XYZ->red_X;
 2251              		.loc 1 1202 4 is_stmt 1 view .LVU681
 2252              	.LVL202:
1203:fltk-1.3.4-1/png/png.c ****    whiteY = XYZ->red_Y;
 2253              		.loc 1 1203 4 view .LVU682
1204:fltk-1.3.4-1/png/png.c **** 
 2254              		.loc 1 1204 4 view .LVU683
1206:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->greenx, XYZ->green_X, PNG_FP_1, d) == 0)
 2255              		.loc 1 1206 4 view .LVU684
1206:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->greenx, XYZ->green_X, PNG_FP_1, d) == 0)
 2256              		.loc 1 1206 11 is_stmt 0 view .LVU685
 2257 0062 418B700C 		movl	12(%r8), %esi
1206:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->greenx, XYZ->green_X, PNG_FP_1, d) == 0)
 2258              		.loc 1 1206 21 view .LVU686
 2259 0066 418B4010 		movl	16(%r8), %eax
 2260 006a 01F0     		addl	%esi, %eax
 2261              	.LVL203:
1207:fltk-1.3.4-1/png/png.c ****       return 1;
 2262              		.loc 1 1207 4 is_stmt 1 view .LVU687
 2263              	.LBB282:
 2264              	.LBI282:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2265              		.loc 1 3243 1 view .LVU688
 2266              	.LBB283:
3247:fltk-1.3.4-1/png/png.c ****    {
 2267              		.loc 1 3247 4 view .LVU689
3247:fltk-1.3.4-1/png/png.c ****    {
 2268              		.loc 1 3247 7 is_stmt 0 view .LVU690
 2269 006c 41034014 		addl	20(%r8), %eax
 2270              	.LVL204:
3247:fltk-1.3.4-1/png/png.c ****    {
 2271              		.loc 1 3247 7 view .LVU691
 2272 0070 4189C2   		movl	%eax, %r10d
 2273 0073 0F84F700 		je	.L241
 2273      0000
 2274              	.LBE283:
 2275              	.LBE282:
1203:fltk-1.3.4-1/png/png.c ****    whiteY = XYZ->red_Y;
 2276              		.loc 1 1203 11 view .LVU692
 2277 0079 418B28   		movl	(%r8), %ebp
1204:fltk-1.3.4-1/png/png.c **** 
 2278              		.loc 1 1204 11 view .LVU693
 2279 007c 418B5804 		movl	4(%r8), %ebx
 2280              	.LBB287:
 2281              	.LBB284:
3249:fltk-1.3.4-1/png/png.c ****       {
 2282              		.loc 1 3249 7 is_stmt 1 view .LVU694
3249:fltk-1.3.4-1/png/png.c ****       {
 2283              		.loc 1 3249 10 is_stmt 0 view .LVU695
 2284 0080 85F6     		testl	%esi, %esi
 2285 0082 0F842801 		je	.L291
 2285      0000
 2286              	.LBE284:
 2287              	.LBE287:
1207:fltk-1.3.4-1/png/png.c ****       return 1;
 2288              		.loc 1 1207 8 view .LVU696
 2289 0088 498D7B08 		leaq	8(%r11), %rdi
 2290              	.LVL205:
 2291              	.LBB288:
 2292              	.LBB285:
1207:fltk-1.3.4-1/png/png.c ****       return 1;
 2293              		.loc 1 1207 8 view .LVU697
 2294 008c 89C1     		movl	%eax, %ecx
 2295 008e BAA08601 		movl	$100000, %edx
 2295      00
 2296 0093 E8000000 		call	png_muldiv.part.0
 2296      00
 2297              	.LVL206:
1207:fltk-1.3.4-1/png/png.c ****       return 1;
 2298              		.loc 1 1207 8 view .LVU698
 2299              	.LBE285:
 2300              	.LBE288:
1207:fltk-1.3.4-1/png/png.c ****       return 1;
 2301              		.loc 1 1207 7 view .LVU699
 2302 0098 85C0     		testl	%eax, %eax
 2303 009a 0F84D000 		je	.L241
 2303      0000
 2304              	.LVL207:
 2305              	.L245:
1209:fltk-1.3.4-1/png/png.c ****       return 1;
 2306              		.loc 1 1209 4 is_stmt 1 view .LVU700
1209:fltk-1.3.4-1/png/png.c ****       return 1;
 2307              		.loc 1 1209 8 is_stmt 0 view .LVU701
 2308 00a0 418B7010 		movl	16(%r8), %esi
 2309              	.LVL208:
 2310              	.LBB289:
 2311              	.LBI289:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2312              		.loc 1 3243 1 is_stmt 1 view .LVU702
 2313              	.LBB290:
3247:fltk-1.3.4-1/png/png.c ****    {
 2314              		.loc 1 3247 4 view .LVU703
3249:fltk-1.3.4-1/png/png.c ****       {
 2315              		.loc 1 3249 7 view .LVU704
3249:fltk-1.3.4-1/png/png.c ****       {
 2316              		.loc 1 3249 10 is_stmt 0 view .LVU705
 2317 00a4 85F6     		testl	%esi, %esi
 2318 00a6 0F841401 		je	.L292
 2318      0000
 2319              	.LBE290:
 2320              	.LBE289:
1209:fltk-1.3.4-1/png/png.c ****       return 1;
 2321              		.loc 1 1209 8 view .LVU706
 2322 00ac 498D7B0C 		leaq	12(%r11), %rdi
 2323              	.LVL209:
 2324              	.LBB293:
 2325              	.LBB291:
1209:fltk-1.3.4-1/png/png.c ****       return 1;
 2326              		.loc 1 1209 8 view .LVU707
 2327 00b0 4489D1   		movl	%r10d, %ecx
 2328 00b3 BAA08601 		movl	$100000, %edx
 2328      00
 2329 00b8 E8000000 		call	png_muldiv.part.0
 2329      00
 2330              	.LVL210:
1209:fltk-1.3.4-1/png/png.c ****       return 1;
 2331              		.loc 1 1209 8 view .LVU708
 2332              	.LBE291:
 2333              	.LBE293:
1209:fltk-1.3.4-1/png/png.c ****       return 1;
 2334              		.loc 1 1209 7 view .LVU709
 2335 00bd 85C0     		testl	%eax, %eax
 2336 00bf 0F84AB00 		je	.L241
 2336      0000
 2337              	.L247:
1211:fltk-1.3.4-1/png/png.c ****    whiteX += XYZ->green_X;
 2338              		.loc 1 1211 4 is_stmt 1 view .LVU710
 2339              	.LVL211:
1212:fltk-1.3.4-1/png/png.c ****    whiteY += XYZ->green_Y;
 2340              		.loc 1 1212 4 view .LVU711
1213:fltk-1.3.4-1/png/png.c **** 
 2341              		.loc 1 1213 4 view .LVU712
1215:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->bluex, XYZ->blue_X, PNG_FP_1, d) == 0)
 2342              		.loc 1 1215 4 view .LVU713
1215:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->bluex, XYZ->blue_X, PNG_FP_1, d) == 0)
 2343              		.loc 1 1215 11 is_stmt 0 view .LVU714
 2344 00c5 418B7018 		movl	24(%r8), %esi
1215:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->bluex, XYZ->blue_X, PNG_FP_1, d) == 0)
 2345              		.loc 1 1215 20 view .LVU715
 2346 00c9 418B401C 		movl	28(%r8), %eax
 2347 00cd 01F0     		addl	%esi, %eax
 2348              	.LVL212:
1216:fltk-1.3.4-1/png/png.c ****       return 1;
 2349              		.loc 1 1216 4 is_stmt 1 view .LVU716
 2350              	.LBB294:
 2351              	.LBI294:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2352              		.loc 1 3243 1 view .LVU717
 2353              	.LBB295:
3247:fltk-1.3.4-1/png/png.c ****    {
 2354              		.loc 1 3247 4 view .LVU718
3247:fltk-1.3.4-1/png/png.c ****    {
 2355              		.loc 1 3247 7 is_stmt 0 view .LVU719
 2356 00cf 41034020 		addl	32(%r8), %eax
 2357              	.LVL213:
3247:fltk-1.3.4-1/png/png.c ****    {
 2358              		.loc 1 3247 7 view .LVU720
 2359 00d3 89C1     		movl	%eax, %ecx
 2360 00d5 0F849500 		je	.L241
 2360      0000
 2361              	.LBE295:
 2362              	.LBE294:
1212:fltk-1.3.4-1/png/png.c ****    whiteY += XYZ->green_Y;
 2363              		.loc 1 1212 17 view .LVU721
 2364 00db 458B680C 		movl	12(%r8), %r13d
1213:fltk-1.3.4-1/png/png.c **** 
 2365              		.loc 1 1213 17 view .LVU722
 2366 00df 458B6010 		movl	16(%r8), %r12d
 2367              	.LBB299:
 2368              	.LBB296:
3249:fltk-1.3.4-1/png/png.c ****       {
 2369              		.loc 1 3249 7 is_stmt 1 view .LVU723
3249:fltk-1.3.4-1/png/png.c ****       {
 2370              		.loc 1 3249 10 is_stmt 0 view .LVU724
 2371 00e3 85F6     		testl	%esi, %esi
 2372 00e5 0F84E500 		je	.L293
 2372      0000
 2373              	.LBE296:
 2374              	.LBE299:
1216:fltk-1.3.4-1/png/png.c ****       return 1;
 2375              		.loc 1 1216 8 view .LVU725
 2376 00eb 498D7B10 		leaq	16(%r11), %rdi
 2377              	.LVL214:
 2378              	.LBB300:
 2379              	.LBB297:
1216:fltk-1.3.4-1/png/png.c ****       return 1;
 2380              		.loc 1 1216 8 view .LVU726
 2381 00ef BAA08601 		movl	$100000, %edx
 2381      00
 2382 00f4 E8000000 		call	png_muldiv.part.0
 2382      00
 2383              	.LVL215:
1216:fltk-1.3.4-1/png/png.c ****       return 1;
 2384              		.loc 1 1216 8 view .LVU727
 2385              	.LBE297:
 2386              	.LBE300:
1216:fltk-1.3.4-1/png/png.c ****       return 1;
 2387              		.loc 1 1216 7 view .LVU728
 2388 00f9 85C0     		testl	%eax, %eax
 2389 00fb 7473     		je	.L241
 2390              	.L249:
1218:fltk-1.3.4-1/png/png.c ****       return 1;
 2391              		.loc 1 1218 4 is_stmt 1 view .LVU729
1218:fltk-1.3.4-1/png/png.c ****       return 1;
 2392              		.loc 1 1218 8 is_stmt 0 view .LVU730
 2393 00fd 418B701C 		movl	28(%r8), %esi
 2394              	.LVL216:
 2395              	.LBB301:
 2396              	.LBI301:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2397              		.loc 1 3243 1 is_stmt 1 view .LVU731
 2398              	.LBB302:
3247:fltk-1.3.4-1/png/png.c ****    {
 2399              		.loc 1 3247 4 view .LVU732
3249:fltk-1.3.4-1/png/png.c ****       {
 2400              		.loc 1 3249 7 view .LVU733
3249:fltk-1.3.4-1/png/png.c ****       {
 2401              		.loc 1 3249 10 is_stmt 0 view .LVU734
 2402 0101 85F6     		testl	%esi, %esi
 2403 0103 0F84D700 		je	.L294
 2403      0000
 2404              	.LBE302:
 2405              	.LBE301:
1218:fltk-1.3.4-1/png/png.c ****       return 1;
 2406              		.loc 1 1218 8 view .LVU735
 2407 0109 498D7B14 		leaq	20(%r11), %rdi
 2408              	.LVL217:
 2409              	.LBB305:
 2410              	.LBB303:
1218:fltk-1.3.4-1/png/png.c ****       return 1;
 2411              		.loc 1 1218 8 view .LVU736
 2412 010d BAA08601 		movl	$100000, %edx
 2412      00
 2413 0112 E8000000 		call	png_muldiv.part.0
 2413      00
 2414              	.LVL218:
1218:fltk-1.3.4-1/png/png.c ****       return 1;
 2415              		.loc 1 1218 8 view .LVU737
 2416              	.LBE303:
 2417              	.LBE305:
1218:fltk-1.3.4-1/png/png.c ****       return 1;
 2418              		.loc 1 1218 7 view .LVU738
 2419 0117 85C0     		testl	%eax, %eax
 2420 0119 7455     		je	.L241
 2421              	.L251:
1220:fltk-1.3.4-1/png/png.c ****    whiteX += XYZ->blue_X;
 2422              		.loc 1 1220 4 is_stmt 1 view .LVU739
1211:fltk-1.3.4-1/png/png.c ****    whiteX += XYZ->green_X;
 2423              		.loc 1 1211 11 is_stmt 0 view .LVU740
 2424 011b 438D0411 		leal	(%r9,%r10), %eax
 2425              	.LVL219:
1221:fltk-1.3.4-1/png/png.c ****    whiteY += XYZ->blue_Y;
 2426              		.loc 1 1221 4 is_stmt 1 view .LVU741
1222:fltk-1.3.4-1/png/png.c **** 
 2427              		.loc 1 1222 4 view .LVU742
1227:fltk-1.3.4-1/png/png.c ****       return 1;
 2428              		.loc 1 1227 4 view .LVU743
 2429              	.LBB306:
 2430              	.LBI306:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2431              		.loc 1 3243 1 view .LVU744
 2432              	.LBB307:
3247:fltk-1.3.4-1/png/png.c ****    {
 2433              		.loc 1 3247 4 view .LVU745
3247:fltk-1.3.4-1/png/png.c ****    {
 2434              		.loc 1 3247 7 is_stmt 0 view .LVU746
 2435 011f 01C1     		addl	%eax, %ecx
 2436              	.LVL220:
3247:fltk-1.3.4-1/png/png.c ****    {
 2437              		.loc 1 3247 7 view .LVU747
 2438 0121 744D     		je	.L241
 2439              	.LBE307:
 2440              	.LBE306:
1212:fltk-1.3.4-1/png/png.c ****    whiteY += XYZ->green_Y;
 2441              		.loc 1 1212 11 view .LVU748
 2442 0123 4401ED   		addl	%r13d, %ebp
 2443              	.LVL221:
1222:fltk-1.3.4-1/png/png.c **** 
 2444              		.loc 1 1222 17 view .LVU749
 2445 0126 458B501C 		movl	28(%r8), %r10d
 2446              	.LBB311:
 2447              	.LBB308:
3249:fltk-1.3.4-1/png/png.c ****       {
 2448              		.loc 1 3249 7 is_stmt 1 view .LVU750
3249:fltk-1.3.4-1/png/png.c ****       {
 2449              		.loc 1 3249 10 is_stmt 0 view .LVU751
 2450 012a 89EE     		movl	%ebp, %esi
 2451 012c 41037018 		addl	24(%r8), %esi
 2452 0130 0F84B700 		je	.L295
 2452      0000
 2453              	.LBE308:
 2454              	.LBE311:
1227:fltk-1.3.4-1/png/png.c ****       return 1;
 2455              		.loc 1 1227 8 view .LVU752
 2456 0136 498D7B18 		leaq	24(%r11), %rdi
 2457              	.LVL222:
 2458              	.LBB312:
 2459              	.LBB309:
1227:fltk-1.3.4-1/png/png.c ****       return 1;
 2460              		.loc 1 1227 8 view .LVU753
 2461 013a BAA08601 		movl	$100000, %edx
 2461      00
 2462 013f E8000000 		call	png_muldiv.part.0
 2462      00
 2463              	.LVL223:
1227:fltk-1.3.4-1/png/png.c ****       return 1;
 2464              		.loc 1 1227 8 view .LVU754
 2465              	.LBE309:
 2466              	.LBE312:
1227:fltk-1.3.4-1/png/png.c ****       return 1;
 2467              		.loc 1 1227 7 view .LVU755
 2468 0144 85C0     		testl	%eax, %eax
 2469 0146 7428     		je	.L241
 2470              	.L253:
1229:fltk-1.3.4-1/png/png.c ****       return 1;
 2471              		.loc 1 1229 4 is_stmt 1 view .LVU756
 2472              	.LVL224:
 2473              	.LBB313:
 2474              	.LBI313:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2475              		.loc 1 3243 1 view .LVU757
 2476              	.LBB314:
3247:fltk-1.3.4-1/png/png.c ****    {
 2477              		.loc 1 3247 4 view .LVU758
3249:fltk-1.3.4-1/png/png.c ****       {
 2478              		.loc 1 3249 7 view .LVU759
 2479              	.LBE314:
 2480              	.LBE313:
1213:fltk-1.3.4-1/png/png.c **** 
 2481              		.loc 1 1213 11 is_stmt 0 view .LVU760
 2482 0148 418D041C 		leal	(%r12,%rbx), %eax
 2483              	.LBB318:
 2484              	.LBB315:
3249:fltk-1.3.4-1/png/png.c ****       {
 2485              		.loc 1 3249 10 view .LVU761
 2486 014c 4401D0   		addl	%r10d, %eax
 2487 014f 0F84A500 		je	.L296
 2487      0000
 2488              	.LBE315:
 2489              	.LBE318:
1229:fltk-1.3.4-1/png/png.c ****       return 1;
 2490              		.loc 1 1229 8 view .LVU762
 2491 0155 498D7B1C 		leaq	28(%r11), %rdi
 2492              	.LVL225:
 2493              	.LBB319:
 2494              	.LBB316:
1229:fltk-1.3.4-1/png/png.c ****       return 1;
 2495              		.loc 1 1229 8 view .LVU763
 2496 0159 BAA08601 		movl	$100000, %edx
 2496      00
 2497 015e 89C6     		movl	%eax, %esi
 2498 0160 E8000000 		call	png_muldiv.part.0
 2498      00
 2499              	.LVL226:
1229:fltk-1.3.4-1/png/png.c ****       return 1;
 2500              		.loc 1 1229 8 view .LVU764
 2501              	.LBE316:
 2502              	.LBE319:
1229:fltk-1.3.4-1/png/png.c ****       return 1;
 2503              		.loc 1 1229 7 view .LVU765
 2504 0165 85C0     		testl	%eax, %eax
 2505 0167 0F94C0   		sete	%al
 2506 016a 0FB6C0   		movzbl	%al, %eax
 2507 016d EB06     		jmp	.L236
 2508              	.LVL227:
 2509 016f 90       		.p2align 4,,10
 2510              		.p2align 3
 2511              	.L241:
1199:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->redy, XYZ->red_Y, PNG_FP_1, d) == 0)
 2512              		.loc 1 1199 14 view .LVU766
 2513 0170 B8010000 		movl	$1, %eax
 2513      00
 2514              	.L236:
1233:fltk-1.3.4-1/png/png.c **** 
 2515              		.loc 1 1233 1 view .LVU767
 2516 0175 5B       		popq	%rbx
 2517              		.cfi_def_cfa_offset 32
 2518 0176 5D       		popq	%rbp
 2519              		.cfi_def_cfa_offset 24
 2520 0177 415C     		popq	%r12
 2521              		.cfi_def_cfa_offset 16
 2522 0179 415D     		popq	%r13
 2523              		.cfi_def_cfa_offset 8
 2524 017b C3       		ret
 2525              	.LVL228:
 2526 017c 0F1F4000 		.p2align 4,,10
 2527              		.p2align 3
 2528              	.L288:
 2529              		.cfi_restore 3
 2530              		.cfi_restore 6
 2531              		.cfi_restore 12
 2532              		.cfi_restore 13
1199:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&xy->redy, XYZ->red_Y, PNG_FP_1, d) == 0)
 2533              		.loc 1 1199 14 view .LVU768
 2534 0180 B8010000 		movl	$1, %eax
 2534      00
 2535              	.LVL229:
1233:fltk-1.3.4-1/png/png.c **** 
 2536              		.loc 1 1233 1 view .LVU769
 2537 0185 C3       		ret
 2538              	.LVL230:
 2539 0186 662E0F1F 		.p2align 4,,10
 2539      84000000 
 2539      0000
 2540              		.p2align 3
 2541              	.L289:
 2542              		.cfi_def_cfa_offset 40
 2543              		.cfi_offset 3, -40
 2544              		.cfi_offset 6, -32
 2545              		.cfi_offset 12, -24
 2546              		.cfi_offset 13, -16
 2547              	.LBB320:
 2548              	.LBB274:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2549              		.loc 1 3251 10 is_stmt 1 view .LVU770
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2550              		.loc 1 3251 15 is_stmt 0 view .LVU771
 2551 0190 C7070000 		movl	$0, (%rdi)
 2551      0000
3252:fltk-1.3.4-1/png/png.c ****       }
 2552              		.loc 1 3252 10 is_stmt 1 view .LVU772
 2553              	.LVL231:
3252:fltk-1.3.4-1/png/png.c ****       }
 2554              		.loc 1 3252 10 is_stmt 0 view .LVU773
 2555              	.LBE274:
 2556              	.LBE320:
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2557              		.loc 1 1200 4 is_stmt 1 view .LVU774
1200:fltk-1.3.4-1/png/png.c ****       return 1;
 2558              		.loc 1 1200 8 is_stmt 0 view .LVU775
 2559 0196 418B7004 		movl	4(%r8), %esi
 2560              	.LVL232:
 2561              	.LBB321:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2562              		.loc 1 3243 1 is_stmt 1 view .LVU776
 2563              	.LBB280:
3247:fltk-1.3.4-1/png/png.c ****    {
 2564              		.loc 1 3247 4 view .LVU777
3249:fltk-1.3.4-1/png/png.c ****       {
 2565              		.loc 1 3249 7 view .LVU778
3249:fltk-1.3.4-1/png/png.c ****       {
 2566              		.loc 1 3249 10 is_stmt 0 view .LVU779
 2567 019a 85F6     		testl	%esi, %esi
 2568 019c 0F85A7FE 		jne	.L242
 2568      FFFF
 2569              	.LVL233:
 2570              	.L290:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2571              		.loc 1 3251 10 is_stmt 1 view .LVU780
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2572              		.loc 1 3251 15 is_stmt 0 view .LVU781
 2573 01a2 41C74304 		movl	$0, 4(%r11)
 2573      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2574              		.loc 1 3252 10 is_stmt 1 view .LVU782
 2575              	.LVL234:
3252:fltk-1.3.4-1/png/png.c ****       }
 2576              		.loc 1 3252 10 is_stmt 0 view .LVU783
 2577 01aa E9B3FEFF 		jmp	.L243
 2577      FF
 2578              	.LVL235:
 2579 01af 90       		.p2align 4,,10
 2580              		.p2align 3
 2581              	.L291:
3252:fltk-1.3.4-1/png/png.c ****       }
 2582              		.loc 1 3252 10 view .LVU784
 2583              	.LBE280:
 2584              	.LBE321:
 2585              	.LBB322:
 2586              	.LBB286:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2587              		.loc 1 3251 10 is_stmt 1 view .LVU785
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2588              		.loc 1 3251 15 is_stmt 0 view .LVU786
 2589 01b0 41C74308 		movl	$0, 8(%r11)
 2589      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2590              		.loc 1 3252 10 is_stmt 1 view .LVU787
 2591              	.LVL236:
3252:fltk-1.3.4-1/png/png.c ****       }
 2592              		.loc 1 3252 10 is_stmt 0 view .LVU788
 2593 01b8 E9E3FEFF 		jmp	.L245
 2593      FF
 2594              	.LVL237:
 2595 01bd 0F1F00   		.p2align 4,,10
 2596              		.p2align 3
 2597              	.L292:
3252:fltk-1.3.4-1/png/png.c ****       }
 2598              		.loc 1 3252 10 view .LVU789
 2599              	.LBE286:
 2600              	.LBE322:
 2601              	.LBB323:
 2602              	.LBB292:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2603              		.loc 1 3251 10 is_stmt 1 view .LVU790
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2604              		.loc 1 3251 15 is_stmt 0 view .LVU791
 2605 01c0 41C7430C 		movl	$0, 12(%r11)
 2605      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2606              		.loc 1 3252 10 is_stmt 1 view .LVU792
 2607              	.LVL238:
3252:fltk-1.3.4-1/png/png.c ****       }
 2608              		.loc 1 3252 10 is_stmt 0 view .LVU793
 2609 01c8 E9F8FEFF 		jmp	.L247
 2609      FF
 2610              	.LVL239:
 2611 01cd 0F1F00   		.p2align 4,,10
 2612              		.p2align 3
 2613              	.L293:
3252:fltk-1.3.4-1/png/png.c ****       }
 2614              		.loc 1 3252 10 view .LVU794
 2615              	.LBE292:
 2616              	.LBE323:
 2617              	.LBB324:
 2618              	.LBB298:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2619              		.loc 1 3251 10 is_stmt 1 view .LVU795
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2620              		.loc 1 3251 15 is_stmt 0 view .LVU796
 2621 01d0 41C74310 		movl	$0, 16(%r11)
 2621      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2622              		.loc 1 3252 10 is_stmt 1 view .LVU797
 2623              	.LVL240:
3252:fltk-1.3.4-1/png/png.c ****       }
 2624              		.loc 1 3252 10 is_stmt 0 view .LVU798
 2625 01d8 E920FFFF 		jmp	.L249
 2625      FF
 2626              	.LVL241:
 2627 01dd 0F1F00   		.p2align 4,,10
 2628              		.p2align 3
 2629              	.L294:
3252:fltk-1.3.4-1/png/png.c ****       }
 2630              		.loc 1 3252 10 view .LVU799
 2631              	.LBE298:
 2632              	.LBE324:
 2633              	.LBB325:
 2634              	.LBB304:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2635              		.loc 1 3251 10 is_stmt 1 view .LVU800
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2636              		.loc 1 3251 15 is_stmt 0 view .LVU801
 2637 01e0 41C74314 		movl	$0, 20(%r11)
 2637      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2638              		.loc 1 3252 10 is_stmt 1 view .LVU802
 2639              	.LVL242:
3252:fltk-1.3.4-1/png/png.c ****       }
 2640              		.loc 1 3252 10 is_stmt 0 view .LVU803
 2641 01e8 E92EFFFF 		jmp	.L251
 2641      FF
 2642              	.LVL243:
 2643              	.L295:
3252:fltk-1.3.4-1/png/png.c ****       }
 2644              		.loc 1 3252 10 view .LVU804
 2645              	.LBE304:
 2646              	.LBE325:
 2647              	.LBB326:
 2648              	.LBB310:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2649              		.loc 1 3251 10 is_stmt 1 view .LVU805
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2650              		.loc 1 3251 15 is_stmt 0 view .LVU806
 2651 01ed 41C74318 		movl	$0, 24(%r11)
 2651      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2652              		.loc 1 3252 10 is_stmt 1 view .LVU807
 2653              	.LVL244:
3252:fltk-1.3.4-1/png/png.c ****       }
 2654              		.loc 1 3252 10 is_stmt 0 view .LVU808
 2655 01f5 E94EFFFF 		jmp	.L253
 2655      FF
 2656              	.LVL245:
 2657              	.L296:
3252:fltk-1.3.4-1/png/png.c ****       }
 2658              		.loc 1 3252 10 view .LVU809
 2659              	.LBE310:
 2660              	.LBE326:
 2661              	.LBB327:
 2662              	.LBB317:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2663              		.loc 1 3251 10 is_stmt 1 view .LVU810
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2664              		.loc 1 3251 15 is_stmt 0 view .LVU811
 2665 01fa 41C7431C 		movl	$0, 28(%r11)
 2665      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2666              		.loc 1 3252 10 is_stmt 1 view .LVU812
 2667              	.LVL246:
3252:fltk-1.3.4-1/png/png.c ****       }
 2668              		.loc 1 3252 10 is_stmt 0 view .LVU813
 2669 0202 E96EFFFF 		jmp	.L236
 2669      FF
 2670              	.LBE317:
 2671              	.LBE327:
 2672              		.cfi_endproc
 2673              	.LFE73:
 2675              		.section	.text.png_colorspace_check_xy.part.0,"ax",@progbits
 2676              		.p2align 4
 2678              	png_colorspace_check_xy.part.0:
 2679              	.LVL247:
 2680              	.LFB128:
1577:fltk-1.3.4-1/png/png.c **** {
 2681              		.loc 1 1577 1 is_stmt 1 view -0
 2682              		.cfi_startproc
1577:fltk-1.3.4-1/png/png.c **** {
 2683              		.loc 1 1577 1 is_stmt 0 view .LVU815
 2684 0000 4154     		pushq	%r12
 2685              		.cfi_def_cfa_offset 16
 2686              		.cfi_offset 12, -16
 2687 0002 55       		pushq	%rbp
 2688              		.cfi_def_cfa_offset 24
 2689              		.cfi_offset 6, -24
 2690 0003 4889F5   		movq	%rsi, %rbp
1587:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 2691              		.loc 1 1587 13 view .LVU816
 2692 0006 4889FE   		movq	%rdi, %rsi
 2693              	.LVL248:
1577:fltk-1.3.4-1/png/png.c **** {
 2694              		.loc 1 1577 1 view .LVU817
 2695 0009 4883EC38 		subq	$56, %rsp
 2696              		.cfi_def_cfa_offset 80
1577:fltk-1.3.4-1/png/png.c **** {
 2697              		.loc 1 1577 1 view .LVU818
 2698 000d 64488B04 		movq	%fs:40, %rax
 2698      25280000 
 2698      00
 2699 0016 48894424 		movq	%rax, 40(%rsp)
 2699      28
 2700 001b 31C0     		xorl	%eax, %eax
1587:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 2701              		.loc 1 1587 4 is_stmt 1 view .LVU819
1587:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 2702              		.loc 1 1587 13 is_stmt 0 view .LVU820
 2703 001d 4989E4   		movq	%rsp, %r12
 2704 0020 4C89E7   		movq	%r12, %rdi
 2705              	.LVL249:
1587:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 2706              		.loc 1 1587 13 view .LVU821
 2707 0023 E8000000 		call	png_xy_from_XYZ
 2707      00
 2708              	.LVL250:
1588:fltk-1.3.4-1/png/png.c ****       return result;
 2709              		.loc 1 1588 4 is_stmt 1 view .LVU822
1588:fltk-1.3.4-1/png/png.c ****       return result;
 2710              		.loc 1 1588 7 is_stmt 0 view .LVU823
 2711 0028 85C0     		testl	%eax, %eax
 2712 002a 7518     		jne	.L297
1591:fltk-1.3.4-1/png/png.c ****        5/*actually, the math is pretty accurate*/) != 0)
 2713              		.loc 1 1591 4 is_stmt 1 view .LVU824
1591:fltk-1.3.4-1/png/png.c ****        5/*actually, the math is pretty accurate*/) != 0)
 2714              		.loc 1 1591 8 is_stmt 0 view .LVU825
 2715 002c BA050000 		movl	$5, %edx
 2715      00
 2716 0031 4C89E6   		movq	%r12, %rsi
 2717 0034 4889EF   		movq	%rbp, %rdi
 2718 0037 E8000000 		call	png_colorspace_endpoints_match
 2718      00
 2719              	.LVL251:
1591:fltk-1.3.4-1/png/png.c ****        5/*actually, the math is pretty accurate*/) != 0)
 2720              		.loc 1 1591 7 view .LVU826
 2721 003c 85C0     		testl	%eax, %eax
 2722 003e 0F94C0   		sete	%al
 2723 0041 0FB6C0   		movzbl	%al, %eax
 2724              	.L297:
1597:fltk-1.3.4-1/png/png.c **** 
 2725              		.loc 1 1597 1 view .LVU827
 2726 0044 488B4C24 		movq	40(%rsp), %rcx
 2726      28
 2727 0049 6448330C 		xorq	%fs:40, %rcx
 2727      25280000 
 2727      00
 2728 0052 7508     		jne	.L301
 2729 0054 4883C438 		addq	$56, %rsp
 2730              		.cfi_remember_state
 2731              		.cfi_def_cfa_offset 24
 2732 0058 5D       		popq	%rbp
 2733              		.cfi_def_cfa_offset 16
 2734              	.LVL252:
1597:fltk-1.3.4-1/png/png.c **** 
 2735              		.loc 1 1597 1 view .LVU828
 2736 0059 415C     		popq	%r12
 2737              		.cfi_def_cfa_offset 8
 2738 005b C3       		ret
 2739              	.LVL253:
 2740              	.L301:
 2741              		.cfi_restore_state
1597:fltk-1.3.4-1/png/png.c **** 
 2742              		.loc 1 1597 1 view .LVU829
 2743 005c E8000000 		call	__stack_chk_fail@PLT
 2743      00
 2744              	.LVL254:
 2745              		.cfi_endproc
 2746              	.LFE128:
 2748              		.section	.rodata.png_colorspace_check_gamma.isra.0.str1.8,"aMS",@progbits,1
 2749              		.align 8
 2750              	.LC15:
 2751 0000 67616D6D 		.string	"gamma value does not match sRGB"
 2751      61207661 
 2751      6C756520 
 2751      646F6573 
 2751      206E6F74 
 2752              		.align 8
 2753              	.LC16:
 2754 0020 67616D6D 		.string	"gamma value does not match libpng estimate"
 2754      61207661 
 2754      6C756520 
 2754      646F6573 
 2754      206E6F74 
 2755              		.section	.text.png_colorspace_check_gamma.isra.0,"ax",@progbits
 2756              		.p2align 4
 2758              	png_colorspace_check_gamma.isra.0:
 2759              	.LVL255:
 2760              	.LFB129:
1030:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_fixed_point gAMA, int from)
 2761              		.loc 1 1030 1 is_stmt 1 view -0
 2762              		.cfi_startproc
1030:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_fixed_point gAMA, int from)
 2763              		.loc 1 1030 1 is_stmt 0 view .LVU831
 2764 0000 53       		pushq	%rbx
 2765              		.cfi_def_cfa_offset 16
 2766              		.cfi_offset 3, -16
 2767 0001 4883EC10 		subq	$16, %rsp
 2768              		.cfi_def_cfa_offset 32
1030:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_fixed_point gAMA, int from)
 2769              		.loc 1 1030 1 view .LVU832
 2770 0005 64488B04 		movq	%fs:40, %rax
 2770      25280000 
 2770      00
 2771 000e 48894424 		movq	%rax, 8(%rsp)
 2771      08
 2772 0013 31C0     		xorl	%eax, %eax
1042:fltk-1.3.4-1/png/png.c **** 
 2773              		.loc 1 1042 4 is_stmt 1 view .LVU833
1044:fltk-1.3.4-1/png/png.c ****       (png_muldiv(&gtest, colorspace->gamma, PNG_FP_1, gAMA) == 0  ||
 2774              		.loc 1 1044 4 view .LVU834
1044:fltk-1.3.4-1/png/png.c ****       (png_muldiv(&gtest, colorspace->gamma, PNG_FP_1, gAMA) == 0  ||
 2775              		.loc 1 1044 19 is_stmt 0 view .LVU835
 2776 0015 0FB702   		movzwl	(%rdx), %eax
1044:fltk-1.3.4-1/png/png.c ****       (png_muldiv(&gtest, colorspace->gamma, PNG_FP_1, gAMA) == 0  ||
 2777              		.loc 1 1044 7 view .LVU836
 2778 0018 A801     		testb	$1, %al
 2779 001a 7427     		je	.L318
 2780 001c 4989FA   		movq	%rdi, %r10
 2781              	.LVL256:
 2782              	.LBB340:
 2783              	.LBI340:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 2784              		.loc 1 3243 1 is_stmt 1 view .LVU837
 2785              	.LBB341:
3247:fltk-1.3.4-1/png/png.c ****    {
 2786              		.loc 1 3247 4 view .LVU838
3247:fltk-1.3.4-1/png/png.c ****    {
 2787              		.loc 1 3247 7 is_stmt 0 view .LVU839
 2788 001f 85C9     		testl	%ecx, %ecx
 2789 0021 753D     		jne	.L319
 2790              	.LVL257:
 2791              	.L305:
3247:fltk-1.3.4-1/png/png.c ****    {
 2792              		.loc 1 3247 7 view .LVU840
 2793              	.LBE341:
 2794              	.LBE340:
1054:fltk-1.3.4-1/png/png.c ****       {
 2795              		.loc 1 1054 7 is_stmt 1 view .LVU841
1054:fltk-1.3.4-1/png/png.c ****       {
 2796              		.loc 1 1054 63 is_stmt 0 view .LVU842
 2797 0023 4183F802 		cmpl	$2, %r8d
 2798 0027 0F94C3   		sete	%bl
 2799 002a A820     		testb	$32, %al
 2800 002c 7552     		jne	.L313
 2801 002e 84DB     		testb	%bl, %bl
 2802 0030 754E     		jne	.L313
 2803              	.LVL258:
 2804              	.LBB344:
 2805              	.LBI344:
1030:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_fixed_point gAMA, int from)
 2806              		.loc 1 1030 1 is_stmt 1 view .LVU843
 2807              	.LBB345:
1064:fltk-1.3.4-1/png/png.c ****             PNG_CHUNK_WARNING);
 2808              		.loc 1 1064 10 view .LVU844
 2809 0032 31D2     		xorl	%edx, %edx
 2810 0034 488D3500 		leaq	.LC16(%rip), %rsi
 2810      000000
 2811 003b 4C89D7   		movq	%r10, %rdi
 2812 003e E8000000 		call	png_chunk_report@PLT
 2812      00
 2813              	.LVL259:
 2814              	.L318:
1066:fltk-1.3.4-1/png/png.c ****       }
 2815              		.loc 1 1066 10 view .LVU845
1064:fltk-1.3.4-1/png/png.c ****             PNG_CHUNK_WARNING);
 2816              		.loc 1 1064 10 is_stmt 0 view .LVU846
 2817 0043 B8010000 		movl	$1, %eax
 2817      00
 2818              	.L302:
 2819              	.LBE345:
 2820              	.LBE344:
1071:fltk-1.3.4-1/png/png.c **** 
 2821              		.loc 1 1071 1 view .LVU847
 2822 0048 488B5C24 		movq	8(%rsp), %rbx
 2822      08
 2823 004d 6448331C 		xorq	%fs:40, %rbx
 2823      25280000 
 2823      00
 2824 0056 756A     		jne	.L320
 2825 0058 4883C410 		addq	$16, %rsp
 2826              		.cfi_remember_state
 2827              		.cfi_def_cfa_offset 16
 2828 005c 5B       		popq	%rbx
 2829              		.cfi_def_cfa_offset 8
 2830 005d C3       		ret
 2831              	.LVL260:
 2832 005e 6690     		.p2align 4,,10
 2833              		.p2align 3
 2834              	.L319:
 2835              		.cfi_restore_state
 2836              	.LBB346:
 2837              	.LBB342:
3249:fltk-1.3.4-1/png/png.c ****       {
 2838              		.loc 1 3249 7 is_stmt 1 view .LVU848
3249:fltk-1.3.4-1/png/png.c ****       {
 2839              		.loc 1 3249 10 is_stmt 0 view .LVU849
 2840 0060 85F6     		testl	%esi, %esi
 2841 0062 743C     		je	.L321
 2842 0064 4989D1   		movq	%rdx, %r9
 2843 0067 488D7C24 		leaq	4(%rsp), %rdi
 2843      04
 2844              	.LVL261:
3249:fltk-1.3.4-1/png/png.c ****       {
 2845              		.loc 1 3249 10 view .LVU850
 2846 006c BAA08601 		movl	$100000, %edx
 2846      00
 2847 0071 E8000000 		call	png_muldiv.part.0
 2847      00
 2848              	.LVL262:
3249:fltk-1.3.4-1/png/png.c ****       {
 2849              		.loc 1 3249 10 view .LVU851
 2850              	.LBE342:
 2851              	.LBE346:
1044:fltk-1.3.4-1/png/png.c ****       (png_muldiv(&gtest, colorspace->gamma, PNG_FP_1, gAMA) == 0  ||
 2852              		.loc 1 1044 61 view .LVU852
 2853 0076 85C0     		testl	%eax, %eax
 2854 0078 7536     		jne	.L307
 2855              	.L308:
 2856 007a 410FB701 		movzwl	(%r9), %eax
 2857 007e EBA3     		jmp	.L305
 2858              		.p2align 4,,10
 2859              		.p2align 3
 2860              	.L313:
1056:fltk-1.3.4-1/png/png.c ****             PNG_CHUNK_ERROR);
 2861              		.loc 1 1056 10 is_stmt 1 view .LVU853
 2862 0080 BA020000 		movl	$2, %edx
 2862      00
 2863 0085 488D3500 		leaq	.LC15(%rip), %rsi
 2863      000000
 2864 008c 4C89D7   		movq	%r10, %rdi
 2865 008f E8000000 		call	png_chunk_report@PLT
 2865      00
 2866              	.LVL263:
1059:fltk-1.3.4-1/png/png.c ****       }
 2867              		.loc 1 1059 10 view .LVU854
1059:fltk-1.3.4-1/png/png.c ****       }
 2868              		.loc 1 1059 22 is_stmt 0 view .LVU855
 2869 0094 0FB6C3   		movzbl	%bl, %eax
 2870 0097 EBAF     		jmp	.L302
 2871              	.LVL264:
 2872 0099 0F1F8000 		.p2align 4,,10
 2872      000000
 2873              		.p2align 3
 2874              	.L321:
 2875              	.LBB347:
 2876              	.LBB343:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2877              		.loc 1 3251 10 is_stmt 1 view .LVU856
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 2878              		.loc 1 3251 15 is_stmt 0 view .LVU857
 2879 00a0 C7442404 		movl	$0, 4(%rsp)
 2879      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 2880              		.loc 1 3252 10 is_stmt 1 view .LVU858
 2881              	.LVL265:
3252:fltk-1.3.4-1/png/png.c ****       }
 2882              		.loc 1 3252 10 is_stmt 0 view .LVU859
 2883              	.LBE343:
 2884              	.LBE347:
 2885              	.LBB348:
 2886              	.LBI348:
3400:fltk-1.3.4-1/png/png.c **** {
 2887              		.loc 1 3400 1 is_stmt 1 view .LVU860
 2888              	.LBB349:
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 2889              		.loc 1 3402 4 view .LVU861
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 2890              		.loc 1 3402 4 is_stmt 0 view .LVU862
 2891 00a8 E976FFFF 		jmp	.L305
 2891      FF
 2892              	.LVL266:
 2893 00ad 0F1F00   		.p2align 4,,10
 2894              		.p2align 3
 2895              	.L307:
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 2896              		.loc 1 3402 4 view .LVU863
 2897              	.LBE349:
3400:fltk-1.3.4-1/png/png.c **** {
 2898              		.loc 1 3400 1 is_stmt 1 view .LVU864
 2899              	.LBB350:
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 2900              		.loc 1 3402 4 view .LVU865
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 2901              		.loc 1 3402 60 is_stmt 0 view .LVU866
 2902 00b0 8B442404 		movl	4(%rsp), %eax
 2903 00b4 2D187301 		subl	$95000, %eax
 2903      00
 2904              	.LBE350:
 2905              	.LBE348:
1045:fltk-1.3.4-1/png/png.c ****       png_gamma_significant(gtest) != 0))
 2906              		.loc 1 1045 68 view .LVU867
 2907 00b9 3D102700 		cmpl	$10000, %eax
 2907      00
 2908 00be 7683     		jbe	.L318
 2909 00c0 EBB8     		jmp	.L308
 2910              	.LVL267:
 2911              	.L320:
1071:fltk-1.3.4-1/png/png.c **** 
 2912              		.loc 1 1071 1 view .LVU868
 2913 00c2 E8000000 		call	__stack_chk_fail@PLT
 2913      00
 2914              	.LVL268:
 2915              		.cfi_endproc
 2916              	.LFE129:
 2918              		.section	.text.png_gamma_8bit_correct.part.0,"ax",@progbits
 2919              		.p2align 4
 2921              	png_gamma_8bit_correct.part.0:
 2922              	.LVL269:
 2923              	.LFB132:
3752:fltk-1.3.4-1/png/png.c **** {
 2924              		.loc 1 3752 1 is_stmt 1 view -0
 2925              		.cfi_startproc
 2926              	.LBB351:
3781:fltk-1.3.4-1/png/png.c ****          return (png_byte)r;
 2927              		.loc 1 3781 10 view .LVU870
3781:fltk-1.3.4-1/png/png.c ****          return (png_byte)r;
 2928              		.loc 1 3781 31 is_stmt 0 view .LVU871
 2929 0000 660FEFC9 		pxor	%xmm1, %xmm1
 2930              	.LBE351:
3752:fltk-1.3.4-1/png/png.c **** {
 2931              		.loc 1 3752 1 view .LVU872
 2932 0004 4883EC08 		subq	$8, %rsp
 2933              		.cfi_def_cfa_offset 16
 2934              	.LBB352:
3781:fltk-1.3.4-1/png/png.c ****          return (png_byte)r;
 2935              		.loc 1 3781 31 view .LVU873
 2936 0008 660FEFC0 		pxor	%xmm0, %xmm0
 2937 000c F20F2ACE 		cvtsi2sdl	%esi, %xmm1
 2938 0010 F20F590D 		mulsd	.LC4(%rip), %xmm1
 2938      00000000 
 2939 0018 F20F2AC7 		cvtsi2sdl	%edi, %xmm0
 2940 001c F20F5E05 		divsd	.LC17(%rip), %xmm0
 2940      00000000 
 2941 0024 E8000000 		call	pow@PLT
 2941      00
 2942              	.LVL270:
3781:fltk-1.3.4-1/png/png.c ****          return (png_byte)r;
 2943              		.loc 1 3781 30 view .LVU874
 2944 0029 F20F5905 		mulsd	.LC17(%rip), %xmm0
 2944      00000000 
3781:fltk-1.3.4-1/png/png.c ****          return (png_byte)r;
 2945              		.loc 1 3781 21 view .LVU875
 2946 0031 F20F1015 		movsd	.LC8(%rip), %xmm2
 2946      00000000 
 2947 0039 F20F5805 		addsd	.LC6(%rip), %xmm0
 2947      00000000 
 2948 0041 F20F101D 		movsd	.LC7(%rip), %xmm3
 2948      00000000 
 2949 0049 660F28C8 		movapd	%xmm0, %xmm1
 2950 004d 660F54CA 		andpd	%xmm2, %xmm1
 2951 0051 660F2ED9 		ucomisd	%xmm1, %xmm3
 2952 0055 7633     		jbe	.L323
 2953 0057 F2480F2C 		cvttsd2siq	%xmm0, %rax
 2953      C0
 2954 005c 660FEFC9 		pxor	%xmm1, %xmm1
 2955 0060 F20F1025 		movsd	.LC1(%rip), %xmm4
 2955      00000000 
 2956 0068 660F55D0 		andnpd	%xmm0, %xmm2
 2957 006c F2480F2A 		cvtsi2sdq	%rax, %xmm1
 2957      C8
 2958 0071 660F28D9 		movapd	%xmm1, %xmm3
 2959 0075 F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 2959      06
 2960 007a 660F28C2 		movapd	%xmm2, %xmm0
 2961 007e 660F54DC 		andpd	%xmm4, %xmm3
 2962 0082 F20F5CCB 		subsd	%xmm3, %xmm1
 2963 0086 660F56C1 		orpd	%xmm1, %xmm0
 2964              	.L323:
 2965              	.LVL271:
3782:fltk-1.3.4-1/png/png.c **** #     else
 2966              		.loc 1 3782 10 is_stmt 1 view .LVU876
3782:fltk-1.3.4-1/png/png.c **** #     else
 2967              		.loc 1 3782 17 is_stmt 0 view .LVU877
 2968 008a F20F2CC0 		cvttsd2sil	%xmm0, %eax
 2969              	.LBE352:
3796:fltk-1.3.4-1/png/png.c **** 
 2970              		.loc 1 3796 1 view .LVU878
 2971 008e 4883C408 		addq	$8, %rsp
 2972              		.cfi_def_cfa_offset 8
 2973 0092 C3       		ret
 2974              		.cfi_endproc
 2975              	.LFE132:
 2977              		.section	.text.png_build_8bit_table,"ax",@progbits
 2978              		.p2align 4
 2980              	png_build_8bit_table:
 2981              	.LVL272:
 2982              	.LFB114:
4007:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 2983              		.loc 1 4007 1 is_stmt 1 view -0
 2984              		.cfi_startproc
4008:fltk-1.3.4-1/png/png.c ****    png_bytep table = *ptable = (png_bytep)png_malloc(png_ptr, 256);
 2985              		.loc 1 4008 4 view .LVU880
4009:fltk-1.3.4-1/png/png.c **** 
 2986              		.loc 1 4009 4 view .LVU881
4007:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 2987              		.loc 1 4007 1 is_stmt 0 view .LVU882
 2988 0000 4154     		pushq	%r12
 2989              		.cfi_def_cfa_offset 16
 2990              		.cfi_offset 12, -16
 2991 0002 4189D4   		movl	%edx, %r12d
 2992 0005 55       		pushq	%rbp
 2993              		.cfi_def_cfa_offset 24
 2994              		.cfi_offset 6, -24
 2995 0006 53       		pushq	%rbx
 2996              		.cfi_def_cfa_offset 32
 2997              		.cfi_offset 3, -32
4007:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 2998              		.loc 1 4007 1 view .LVU883
 2999 0007 4889F3   		movq	%rsi, %rbx
4009:fltk-1.3.4-1/png/png.c **** 
 3000              		.loc 1 4009 43 view .LVU884
 3001 000a BE000100 		movl	$256, %esi
 3001      00
 3002              	.LVL273:
4009:fltk-1.3.4-1/png/png.c **** 
 3003              		.loc 1 4009 43 view .LVU885
 3004 000f E8000000 		call	png_malloc@PLT
 3004      00
 3005              	.LVL274:
4009:fltk-1.3.4-1/png/png.c **** 
 3006              		.loc 1 4009 30 view .LVU886
 3007 0014 488903   		movq	%rax, (%rbx)
4009:fltk-1.3.4-1/png/png.c **** 
 3008              		.loc 1 4009 43 view .LVU887
 3009 0017 4889C5   		movq	%rax, %rbp
 3010              	.LVL275:
4011:fltk-1.3.4-1/png/png.c ****       for (i=0; i<256; i++)
 3011              		.loc 1 4011 4 is_stmt 1 view .LVU888
 3012              	.LBB353:
 3013              	.LBI353:
3400:fltk-1.3.4-1/png/png.c **** {
 3014              		.loc 1 3400 1 view .LVU889
 3015              	.LBB354:
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 3016              		.loc 1 3402 4 view .LVU890
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 3017              		.loc 1 3402 60 is_stmt 0 view .LVU891
 3018 001a 418D8424 		leal	-95000(%r12), %eax
 3018      E88CFEFF 
 3019              	.LVL276:
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 3020              		.loc 1 3402 60 view .LVU892
 3021              	.LBE354:
 3022              	.LBE353:
4011:fltk-1.3.4-1/png/png.c ****       for (i=0; i<256; i++)
 3023              		.loc 1 4011 7 view .LVU893
 3024 0022 3D102700 		cmpl	$10000, %eax
 3024      00
 3025 0027 7631     		jbe	.L331
 3026 0029 31DB     		xorl	%ebx, %ebx
 3027              	.LVL277:
4011:fltk-1.3.4-1/png/png.c ****       for (i=0; i<256; i++)
 3028              		.loc 1 4011 7 view .LVU894
 3029 002b EB13     		jmp	.L329
 3030              	.LVL278:
 3031 002d 0F1F00   		.p2align 4,,10
 3032              		.p2align 3
 3033              	.L327:
 3034              	.LBB355:
 3035              	.LBB356:
3795:fltk-1.3.4-1/png/png.c **** }
 3036              		.loc 1 3795 4 is_stmt 1 view .LVU895
3795:fltk-1.3.4-1/png/png.c **** }
 3037              		.loc 1 3795 4 is_stmt 0 view .LVU896
 3038              	.LBE356:
 3039              	.LBE355:
4013:fltk-1.3.4-1/png/png.c **** 
 3040              		.loc 1 4013 19 view .LVU897
 3041 0030 885C1D00 		movb	%bl, 0(%rbp,%rbx)
4012:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
 3042              		.loc 1 4012 24 is_stmt 1 view .LVU898
 3043              	.LVL279:
4012:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
 3044              		.loc 1 4012 17 view .LVU899
4012:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
 3045              		.loc 1 4012 7 is_stmt 0 view .LVU900
 3046 0034 81FBFF00 		cmpl	$255, %ebx
 3046      0000
 3047 003a 7434     		je	.L325
 3048              	.LVL280:
 3049              	.L328:
4012:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
 3050              		.loc 1 4012 7 view .LVU901
 3051 003c 4883C301 		addq	$1, %rbx
 3052              	.LVL281:
 3053              	.L329:
4013:fltk-1.3.4-1/png/png.c **** 
 3054              		.loc 1 4013 10 is_stmt 1 discriminator 3 view .LVU902
 3055              	.LBB358:
 3056              	.LBI355:
3752:fltk-1.3.4-1/png/png.c **** {
 3057              		.loc 1 3752 1 discriminator 3 view .LVU903
 3058              	.LBB357:
3754:fltk-1.3.4-1/png/png.c ****    {
 3059              		.loc 1 3754 4 discriminator 3 view .LVU904
3754:fltk-1.3.4-1/png/png.c ****    {
 3060              		.loc 1 3754 7 is_stmt 0 discriminator 3 view .LVU905
 3061 0040 8D43FF   		leal	-1(%rbx), %eax
 3062 0043 3DFD0000 		cmpl	$253, %eax
 3062      00
 3063 0048 77E6     		ja	.L327
 3064 004a 4489E6   		movl	%r12d, %esi
 3065 004d 89DF     		movl	%ebx, %edi
 3066 004f E8000000 		call	png_gamma_8bit_correct.part.0
 3066      00
 3067              	.LVL282:
3754:fltk-1.3.4-1/png/png.c ****    {
 3068              		.loc 1 3754 7 discriminator 3 view .LVU906
 3069              	.LBE357:
 3070              	.LBE358:
4013:fltk-1.3.4-1/png/png.c **** 
 3071              		.loc 1 4013 19 view .LVU907
 3072 0054 88441D00 		movb	%al, 0(%rbp,%rbx)
4012:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
 3073              		.loc 1 4012 24 is_stmt 1 view .LVU908
 3074              	.LVL283:
4012:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
 3075              		.loc 1 4012 17 view .LVU909
 3076 0058 EBE2     		jmp	.L328
 3077              	.LVL284:
 3078              	.L331:
4012:fltk-1.3.4-1/png/png.c ****          table[i] = png_gamma_8bit_correct(i, gamma_val);
 3079              		.loc 1 4012 17 is_stmt 0 view .LVU910
 3080 005a 31C0     		xorl	%eax, %eax
 3081 005c 0F1F4000 		.p2align 4,,10
 3082              		.p2align 3
 3083              	.L326:
 3084              	.LVL285:
4017:fltk-1.3.4-1/png/png.c **** }
 3085              		.loc 1 4017 10 is_stmt 1 discriminator 3 view .LVU911
4017:fltk-1.3.4-1/png/png.c **** }
 3086              		.loc 1 4017 19 is_stmt 0 discriminator 3 view .LVU912
 3087 0060 88440500 		movb	%al, 0(%rbp,%rax)
4016:fltk-1.3.4-1/png/png.c ****          table[i] = (png_byte)i;
 3088              		.loc 1 4016 24 is_stmt 1 discriminator 3 view .LVU913
 3089              	.LVL286:
4016:fltk-1.3.4-1/png/png.c ****          table[i] = (png_byte)i;
 3090              		.loc 1 4016 17 discriminator 3 view .LVU914
 3091 0064 4883C001 		addq	$1, %rax
 3092              	.LVL287:
4016:fltk-1.3.4-1/png/png.c ****          table[i] = (png_byte)i;
 3093              		.loc 1 4016 7 is_stmt 0 discriminator 3 view .LVU915
 3094 0068 483D0001 		cmpq	$256, %rax
 3094      0000
 3095 006e 75F0     		jne	.L326
 3096              	.LVL288:
 3097              	.L325:
4018:fltk-1.3.4-1/png/png.c **** 
 3098              		.loc 1 4018 1 view .LVU916
 3099 0070 5B       		popq	%rbx
 3100              		.cfi_def_cfa_offset 24
 3101 0071 5D       		popq	%rbp
 3102              		.cfi_def_cfa_offset 16
 3103              	.LVL289:
4018:fltk-1.3.4-1/png/png.c **** 
 3104              		.loc 1 4018 1 view .LVU917
 3105 0072 415C     		popq	%r12
 3106              		.cfi_def_cfa_offset 8
 3107              	.LVL290:
4018:fltk-1.3.4-1/png/png.c **** 
 3108              		.loc 1 4018 1 view .LVU918
 3109 0074 C3       		ret
 3110              		.cfi_endproc
 3111              	.LFE114:
 3113              		.section	.text.png_gamma_16bit_correct.part.0,"ax",@progbits
 3114              		.p2align 4
 3116              	png_gamma_16bit_correct.part.0:
 3117              	.LVL291:
 3118              	.LFB133:
3800:fltk-1.3.4-1/png/png.c **** {
 3119              		.loc 1 3800 1 is_stmt 1 view -0
 3120              		.cfi_startproc
 3121              	.LBB359:
3810:fltk-1.3.4-1/png/png.c ****                      gamma_val*.00001)+.5);
 3122              		.loc 1 3810 10 view .LVU920
3810:fltk-1.3.4-1/png/png.c ****                      gamma_val*.00001)+.5);
 3123              		.loc 1 3810 33 is_stmt 0 view .LVU921
 3124 0000 660FEFC9 		pxor	%xmm1, %xmm1
 3125              	.LBE359:
3800:fltk-1.3.4-1/png/png.c **** {
 3126              		.loc 1 3800 1 view .LVU922
 3127 0004 4883EC08 		subq	$8, %rsp
 3128              		.cfi_def_cfa_offset 16
 3129              	.LBB360:
3810:fltk-1.3.4-1/png/png.c ****                      gamma_val*.00001)+.5);
 3130              		.loc 1 3810 33 view .LVU923
 3131 0008 660FEFC0 		pxor	%xmm0, %xmm0
 3132 000c F20F2ACE 		cvtsi2sdl	%esi, %xmm1
 3133 0010 F20F590D 		mulsd	.LC4(%rip), %xmm1
 3133      00000000 
 3134 0018 F20F2AC7 		cvtsi2sdl	%edi, %xmm0
 3135 001c F20F5E05 		divsd	.LC5(%rip), %xmm0
 3135      00000000 
 3136 0024 E8000000 		call	pow@PLT
 3136      00
 3137              	.LVL292:
3810:fltk-1.3.4-1/png/png.c ****                      gamma_val*.00001)+.5);
 3138              		.loc 1 3810 32 view .LVU924
 3139 0029 F20F5905 		mulsd	.LC5(%rip), %xmm0
 3139      00000000 
3810:fltk-1.3.4-1/png/png.c ****                      gamma_val*.00001)+.5);
 3140              		.loc 1 3810 21 view .LVU925
 3141 0031 F20F1015 		movsd	.LC8(%rip), %xmm2
 3141      00000000 
 3142 0039 F20F5805 		addsd	.LC6(%rip), %xmm0
 3142      00000000 
 3143 0041 F20F101D 		movsd	.LC7(%rip), %xmm3
 3143      00000000 
 3144 0049 660F28C8 		movapd	%xmm0, %xmm1
 3145 004d 660F54CA 		andpd	%xmm2, %xmm1
 3146 0051 660F2ED9 		ucomisd	%xmm1, %xmm3
 3147 0055 7633     		jbe	.L335
 3148 0057 F2480F2C 		cvttsd2siq	%xmm0, %rax
 3148      C0
 3149 005c 660FEFC9 		pxor	%xmm1, %xmm1
 3150 0060 F20F1025 		movsd	.LC1(%rip), %xmm4
 3150      00000000 
 3151 0068 660F55D0 		andnpd	%xmm0, %xmm2
 3152 006c F2480F2A 		cvtsi2sdq	%rax, %xmm1
 3152      C8
 3153 0071 660F28D9 		movapd	%xmm1, %xmm3
 3154 0075 F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 3154      06
 3155 007a 660F28C2 		movapd	%xmm2, %xmm0
 3156 007e 660F54DC 		andpd	%xmm4, %xmm3
 3157 0082 F20F5CCB 		subsd	%xmm3, %xmm1
 3158 0086 660F56C1 		orpd	%xmm1, %xmm0
 3159              	.L335:
 3160              	.LVL293:
3812:fltk-1.3.4-1/png/png.c **** #     else
 3161              		.loc 1 3812 10 is_stmt 1 view .LVU926
3812:fltk-1.3.4-1/png/png.c **** #     else
 3162              		.loc 1 3812 17 is_stmt 0 view .LVU927
 3163 008a F20F2CC0 		cvttsd2sil	%xmm0, %eax
 3164              	.LBE360:
3826:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
 3165              		.loc 1 3826 1 view .LVU928
 3166 008e 4883C408 		addq	$8, %rsp
 3167              		.cfi_def_cfa_offset 8
 3168 0092 C3       		ret
 3169              		.cfi_endproc
 3170              	.LFE133:
 3172              		.section	.rodata.png_set_sig_bytes.str1.8,"aMS",@progbits,1
 3173              		.align 8
 3174              	.LC18:
 3175 0000 546F6F20 		.string	"Too many bytes for PNG signature"
 3175      6D616E79 
 3175      20627974 
 3175      65732066 
 3175      6F722050 
 3176              		.section	.text.png_set_sig_bytes,"ax",@progbits
 3177              		.p2align 4
 3178              		.globl	png_set_sig_bytes
 3180              	png_set_sig_bytes:
 3181              	.LVL294:
 3182              	.LFB41:
  28:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_set_sig_bytes");
 3183              		.loc 1 28 1 is_stmt 1 view -0
 3184              		.cfi_startproc
  28:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_set_sig_bytes");
 3185              		.loc 1 28 1 is_stmt 0 view .LVU930
 3186 0000 F30F1EFA 		endbr64
  29:fltk-1.3.4-1/png/png.c **** 
 3187              		.loc 1 29 4 is_stmt 1 view .LVU931
  31:fltk-1.3.4-1/png/png.c ****       return;
 3188              		.loc 1 31 4 view .LVU932
  31:fltk-1.3.4-1/png/png.c ****       return;
 3189              		.loc 1 31 7 is_stmt 0 view .LVU933
 3190 0004 4885FF   		testq	%rdi, %rdi
 3191 0007 7416     		je	.L337
  34:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Too many bytes for PNG signature");
 3192              		.loc 1 34 4 is_stmt 1 view .LVU934
  34:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Too many bytes for PNG signature");
 3193              		.loc 1 34 7 is_stmt 0 view .LVU935
 3194 0009 83FE08   		cmpl	$8, %esi
 3195 000c 7F12     		jg	.L346
  37:fltk-1.3.4-1/png/png.c **** }
 3196              		.loc 1 37 4 is_stmt 1 view .LVU936
  37:fltk-1.3.4-1/png/png.c **** }
 3197              		.loc 1 37 23 is_stmt 0 view .LVU937
 3198 000e 85F6     		testl	%esi, %esi
 3199 0010 B8000000 		movl	$0, %eax
 3199      00
 3200 0015 0F48F0   		cmovs	%eax, %esi
 3201              	.LVL295:
  37:fltk-1.3.4-1/png/png.c **** }
 3202              		.loc 1 37 23 view .LVU938
 3203 0018 4088B77D 		movb	%sil, 637(%rdi)
 3203      020000
 3204              	.L337:
 3205 001f C3       		ret
 3206              	.LVL296:
 3207              	.L346:
  35:fltk-1.3.4-1/png/png.c **** 
 3208              		.loc 1 35 7 is_stmt 1 view .LVU939
  28:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_set_sig_bytes");
 3209              		.loc 1 28 1 is_stmt 0 view .LVU940
 3210 0020 50       		pushq	%rax
 3211              		.cfi_def_cfa_offset 16
  35:fltk-1.3.4-1/png/png.c **** 
 3212              		.loc 1 35 7 view .LVU941
 3213 0021 488D3500 		leaq	.LC18(%rip), %rsi
 3213      000000
 3214              	.LVL297:
  35:fltk-1.3.4-1/png/png.c **** 
 3215              		.loc 1 35 7 view .LVU942
 3216 0028 E8000000 		call	png_error@PLT
 3216      00
 3217              	.LVL298:
  35:fltk-1.3.4-1/png/png.c **** 
 3218              		.loc 1 35 7 view .LVU943
 3219              		.cfi_endproc
 3220              	.LFE41:
 3222              		.section	.text.png_sig_cmp,"ax",@progbits
 3223              		.p2align 4
 3224              		.globl	png_sig_cmp
 3226              	png_sig_cmp:
 3227              	.LVL299:
 3228              	.LFB42:
  50:fltk-1.3.4-1/png/png.c ****    png_byte png_signature[8] = {137, 80, 78, 71, 13, 10, 26, 10};
 3229              		.loc 1 50 1 is_stmt 1 view -0
 3230              		.cfi_startproc
  50:fltk-1.3.4-1/png/png.c ****    png_byte png_signature[8] = {137, 80, 78, 71, 13, 10, 26, 10};
 3231              		.loc 1 50 1 is_stmt 0 view .LVU945
 3232 0000 F30F1EFA 		endbr64
 3233 0004 4883EC18 		subq	$24, %rsp
 3234              		.cfi_def_cfa_offset 32
  50:fltk-1.3.4-1/png/png.c ****    png_byte png_signature[8] = {137, 80, 78, 71, 13, 10, 26, 10};
 3235              		.loc 1 50 1 view .LVU946
 3236 0008 64488B04 		movq	%fs:40, %rax
 3236      25280000 
 3236      00
 3237 0011 48894424 		movq	%rax, 8(%rsp)
 3237      08
 3238 0016 31C0     		xorl	%eax, %eax
  51:fltk-1.3.4-1/png/png.c **** 
 3239              		.loc 1 51 4 is_stmt 1 view .LVU947
  51:fltk-1.3.4-1/png/png.c **** 
 3240              		.loc 1 51 13 is_stmt 0 view .LVU948
 3241 0018 48B88950 		movabsq	$727905341920923785, %rax
 3241      4E470D0A 
 3241      1A0A
 3242 0022 48890424 		movq	%rax, (%rsp)
  53:fltk-1.3.4-1/png/png.c ****       num_to_check = 8;
 3243              		.loc 1 53 4 is_stmt 1 view .LVU949
  53:fltk-1.3.4-1/png/png.c ****       num_to_check = 8;
 3244              		.loc 1 53 7 is_stmt 0 view .LVU950
 3245 0026 4883FA08 		cmpq	$8, %rdx
 3246 002a 7744     		ja	.L352
  56:fltk-1.3.4-1/png/png.c ****       return (-1);
 3247              		.loc 1 56 9 is_stmt 1 view .LVU951
  56:fltk-1.3.4-1/png/png.c ****       return (-1);
 3248              		.loc 1 56 12 is_stmt 0 view .LVU952
 3249 002c 4885D2   		testq	%rdx, %rdx
 3250 002f 744F     		je	.L354
 3251              	.LVL300:
 3252              	.L348:
  59:fltk-1.3.4-1/png/png.c ****       return (-1);
 3253              		.loc 1 59 4 is_stmt 1 view .LVU953
  59:fltk-1.3.4-1/png/png.c ****       return (-1);
 3254              		.loc 1 59 7 is_stmt 0 view .LVU954
 3255 0031 4883FE07 		cmpq	$7, %rsi
 3256 0035 7749     		ja	.L354
  62:fltk-1.3.4-1/png/png.c ****       num_to_check = 8 - start;
 3257              		.loc 1 62 4 is_stmt 1 view .LVU955
  62:fltk-1.3.4-1/png/png.c ****       num_to_check = 8 - start;
 3258              		.loc 1 62 14 is_stmt 0 view .LVU956
 3259 0037 488D0C32 		leaq	(%rdx,%rsi), %rcx
  63:fltk-1.3.4-1/png/png.c **** 
 3260              		.loc 1 63 20 view .LVU957
 3261 003b B8080000 		movl	$8, %eax
 3261      00
  65:fltk-1.3.4-1/png/png.c **** }
 3262              		.loc 1 65 38 view .LVU958
 3263 0040 4C8D0434 		leaq	(%rsp,%rsi), %r8
  63:fltk-1.3.4-1/png/png.c **** 
 3264              		.loc 1 63 20 view .LVU959
 3265 0044 4829F0   		subq	%rsi, %rax
 3266 0047 4883F908 		cmpq	$8, %rcx
 3267 004b 480F47D0 		cmova	%rax, %rdx
 3268              	.LVL301:
  65:fltk-1.3.4-1/png/png.c **** }
 3269              		.loc 1 65 4 is_stmt 1 view .LVU960
  65:fltk-1.3.4-1/png/png.c **** }
 3270              		.loc 1 65 25 is_stmt 0 view .LVU961
 3271 004f 4801F7   		addq	%rsi, %rdi
 3272              	.LVL302:
  65:fltk-1.3.4-1/png/png.c **** }
 3273              		.loc 1 65 12 view .LVU962
 3274 0052 4C89C6   		movq	%r8, %rsi
 3275              	.LVL303:
  65:fltk-1.3.4-1/png/png.c **** }
 3276              		.loc 1 65 12 view .LVU963
 3277 0055 E8000000 		call	memcmp@PLT
 3277      00
 3278              	.LVL304:
 3279              	.L347:
  66:fltk-1.3.4-1/png/png.c **** 
 3280              		.loc 1 66 1 view .LVU964
 3281 005a 488B4C24 		movq	8(%rsp), %rcx
 3281      08
 3282 005f 6448330C 		xorq	%fs:40, %rcx
 3282      25280000 
 3282      00
 3283 0068 751D     		jne	.L356
 3284 006a 4883C418 		addq	$24, %rsp
 3285              		.cfi_remember_state
 3286              		.cfi_def_cfa_offset 8
 3287 006e C3       		ret
 3288              	.LVL305:
 3289 006f 90       		.p2align 4,,10
 3290              		.p2align 3
 3291              	.L352:
 3292              		.cfi_restore_state
  54:fltk-1.3.4-1/png/png.c **** 
 3293              		.loc 1 54 20 view .LVU965
 3294 0070 BA080000 		movl	$8, %edx
 3294      00
 3295              	.LVL306:
  54:fltk-1.3.4-1/png/png.c **** 
 3296              		.loc 1 54 20 view .LVU966
 3297 0075 EBBA     		jmp	.L348
 3298              	.LVL307:
 3299 0077 660F1F84 		.p2align 4,,10
 3299      00000000 
 3299      00
 3300              		.p2align 3
 3301              	.L354:
  57:fltk-1.3.4-1/png/png.c **** 
 3302              		.loc 1 57 14 view .LVU967
 3303 0080 B8FFFFFF 		movl	$-1, %eax
 3303      FF
 3304 0085 EBD3     		jmp	.L347
 3305              	.LVL308:
 3306              	.L356:
  66:fltk-1.3.4-1/png/png.c **** 
 3307              		.loc 1 66 1 view .LVU968
 3308 0087 E8000000 		call	__stack_chk_fail@PLT
 3308      00
 3309              	.LVL309:
 3310              		.cfi_endproc
 3311              	.LFE42:
 3313              		.section	.text.png_reset_crc,"ax",@progbits
 3314              		.p2align 4
 3315              		.globl	png_reset_crc
 3317              	png_reset_crc:
 3318              	.LVL310:
 3319              	.LFB45:
 103:fltk-1.3.4-1/png/png.c ****    /* The cast is safe because the crc is a 32 bit value. */
 3320              		.loc 1 103 1 is_stmt 1 view -0
 3321              		.cfi_startproc
 103:fltk-1.3.4-1/png/png.c ****    /* The cast is safe because the crc is a 32 bit value. */
 3322              		.loc 1 103 1 is_stmt 0 view .LVU970
 3323 0000 F30F1EFA 		endbr64
 105:fltk-1.3.4-1/png/png.c **** }
 3324              		.loc 1 105 4 is_stmt 1 view .LVU971
 103:fltk-1.3.4-1/png/png.c ****    /* The cast is safe because the crc is a 32 bit value. */
 3325              		.loc 1 103 1 is_stmt 0 view .LVU972
 3326 0004 53       		pushq	%rbx
 3327              		.cfi_def_cfa_offset 16
 3328              		.cfi_offset 3, -16
 105:fltk-1.3.4-1/png/png.c **** }
 3329              		.loc 1 105 32 view .LVU973
 3330 0005 31D2     		xorl	%edx, %edx
 103:fltk-1.3.4-1/png/png.c ****    /* The cast is safe because the crc is a 32 bit value. */
 3331              		.loc 1 103 1 view .LVU974
 3332 0007 4889FB   		movq	%rdi, %rbx
 105:fltk-1.3.4-1/png/png.c **** }
 3333              		.loc 1 105 32 view .LVU975
 3334 000a 31F6     		xorl	%esi, %esi
 3335 000c 31FF     		xorl	%edi, %edi
 3336              	.LVL311:
 105:fltk-1.3.4-1/png/png.c **** }
 3337              		.loc 1 105 32 view .LVU976
 3338 000e E8000000 		call	crc32@PLT
 3338      00
 3339              	.LVL312:
 105:fltk-1.3.4-1/png/png.c **** }
 3340              		.loc 1 105 19 view .LVU977
 3341 0013 89835C02 		movl	%eax, 604(%rbx)
 3341      0000
 106:fltk-1.3.4-1/png/png.c **** 
 3342              		.loc 1 106 1 view .LVU978
 3343 0019 5B       		popq	%rbx
 3344              		.cfi_def_cfa_offset 8
 3345              	.LVL313:
 106:fltk-1.3.4-1/png/png.c **** 
 3346              		.loc 1 106 1 view .LVU979
 3347 001a C3       		ret
 3348              		.cfi_endproc
 3349              	.LFE45:
 3351              		.section	.text.png_calculate_crc,"ax",@progbits
 3352              		.p2align 4
 3353              		.globl	png_calculate_crc
 3355              	png_calculate_crc:
 3356              	.LVL314:
 3357              	.LFB46:
 115:fltk-1.3.4-1/png/png.c ****    int need_crc = 1;
 3358              		.loc 1 115 1 is_stmt 1 view -0
 3359              		.cfi_startproc
 115:fltk-1.3.4-1/png/png.c ****    int need_crc = 1;
 3360              		.loc 1 115 1 is_stmt 0 view .LVU981
 3361 0000 F30F1EFA 		endbr64
 116:fltk-1.3.4-1/png/png.c **** 
 3362              		.loc 1 116 4 is_stmt 1 view .LVU982
 3363              	.LVL315:
 118:fltk-1.3.4-1/png/png.c ****    {
 3364              		.loc 1 118 4 view .LVU983
 115:fltk-1.3.4-1/png/png.c ****    int need_crc = 1;
 3365              		.loc 1 115 1 is_stmt 0 view .LVU984
 3366 0004 4156     		pushq	%r14
 3367              		.cfi_def_cfa_offset 16
 3368              		.cfi_offset 14, -16
 3369 0006 4989F6   		movq	%rsi, %r14
 3370 0009 4155     		pushq	%r13
 3371              		.cfi_def_cfa_offset 24
 3372              		.cfi_offset 13, -24
 3373 000b 4154     		pushq	%r12
 3374              		.cfi_def_cfa_offset 32
 3375              		.cfi_offset 12, -32
 3376 000d 4989FC   		movq	%rdi, %r12
 3377 0010 55       		pushq	%rbp
 3378              		.cfi_def_cfa_offset 40
 3379              		.cfi_offset 6, -40
 3380 0011 53       		pushq	%rbx
 3381              		.cfi_def_cfa_offset 48
 3382              		.cfi_offset 3, -48
 115:fltk-1.3.4-1/png/png.c ****    int need_crc = 1;
 3383              		.loc 1 115 1 view .LVU985
 3384 0012 4889D3   		movq	%rdx, %rbx
 3385 0015 8B873001 		movl	304(%rdi), %eax
 3385      0000
 118:fltk-1.3.4-1/png/png.c ****    {
 3386              		.loc 1 118 7 view .LVU986
 3387 001b F6871B02 		testb	$32, 539(%rdi)
 3387      000020
 3388 0022 745C     		je	.L360
 120:fltk-1.3.4-1/png/png.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 3389              		.loc 1 120 7 is_stmt 1 view .LVU987
 120:fltk-1.3.4-1/png/png.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 3390              		.loc 1 120 27 is_stmt 0 view .LVU988
 3391 0024 25000300 		andl	$768, %eax
 3391      00
 120:fltk-1.3.4-1/png/png.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 3392              		.loc 1 120 10 view .LVU989
 3393 0029 3D000300 		cmpl	$768, %eax
 3393      00
 3394 002e 7443     		je	.L359
 3395              	.L362:
 136:fltk-1.3.4-1/png/png.c ****    {
 3396              		.loc 1 136 4 is_stmt 1 view .LVU990
 136:fltk-1.3.4-1/png/png.c ****    {
 3397              		.loc 1 136 7 is_stmt 0 view .LVU991
 3398 0030 4885DB   		testq	%rbx, %rbx
 3399 0033 743E     		je	.L359
 3400              	.LBB361:
 138:fltk-1.3.4-1/png/png.c **** 
 3401              		.loc 1 138 7 is_stmt 1 view .LVU992
 138:fltk-1.3.4-1/png/png.c **** 
 3402              		.loc 1 138 13 is_stmt 0 view .LVU993
 3403 0035 418BBC24 		movl	604(%r12), %edi
 3403      5C020000 
 3404              	.LVL316:
 3405              	.LBB362:
 138:fltk-1.3.4-1/png/png.c **** 
 3406              		.loc 1 138 13 view .LVU994
 3407 003d 41BDFFFF 		movl	$4294967295, %r13d
 3407      FFFF
 3408              	.LVL317:
 3409              		.p2align 4,,10
 3410 0043 0F1F4400 		.p2align 3
 3410      00
 3411              	.L364:
 138:fltk-1.3.4-1/png/png.c **** 
 3412              		.loc 1 138 13 view .LVU995
 3413              	.LBE362:
 140:fltk-1.3.4-1/png/png.c ****       {
 3414              		.loc 1 140 7 is_stmt 1 view .LVU996
 3415              	.LBB363:
 142:fltk-1.3.4-1/png/png.c ****          if (safe_length == 0)
 3416              		.loc 1 142 10 view .LVU997
 142:fltk-1.3.4-1/png/png.c ****          if (safe_length == 0)
 3417              		.loc 1 142 15 is_stmt 0 view .LVU998
 3418 0048 89DA     		movl	%ebx, %edx
 3419              	.LVL318:
 143:fltk-1.3.4-1/png/png.c ****             safe_length = (uInt)-1; /* evil, but safe */
 3420              		.loc 1 143 10 is_stmt 1 view .LVU999
 3421 004a 89DD     		movl	%ebx, %ebp
 143:fltk-1.3.4-1/png/png.c ****             safe_length = (uInt)-1; /* evil, but safe */
 3422              		.loc 1 143 13 is_stmt 0 view .LVU1000
 3423 004c 85DB     		testl	%ebx, %ebx
 3424 004e 7508     		jne	.L363
 143:fltk-1.3.4-1/png/png.c ****             safe_length = (uInt)-1; /* evil, but safe */
 3425              		.loc 1 143 13 view .LVU1001
 3426 0050 4C89ED   		movq	%r13, %rbp
 144:fltk-1.3.4-1/png/png.c **** 
 3427              		.loc 1 144 25 view .LVU1002
 3428 0053 BAFFFFFF 		movl	$-1, %edx
 3428      FF
 3429              	.LVL319:
 3430              	.L363:
 146:fltk-1.3.4-1/png/png.c **** 
 3431              		.loc 1 146 10 is_stmt 1 view .LVU1003
 146:fltk-1.3.4-1/png/png.c **** 
 3432              		.loc 1 146 16 is_stmt 0 view .LVU1004
 3433 0058 4C89F6   		movq	%r14, %rsi
 152:fltk-1.3.4-1/png/png.c ****          length -= safe_length;
 3434              		.loc 1 152 14 view .LVU1005
 3435 005b 4901EE   		addq	%rbp, %r14
 3436              	.LVL320:
 146:fltk-1.3.4-1/png/png.c **** 
 3437              		.loc 1 146 16 view .LVU1006
 3438 005e E8000000 		call	crc32@PLT
 3438      00
 3439              	.LVL321:
 146:fltk-1.3.4-1/png/png.c **** 
 3440              		.loc 1 146 16 view .LVU1007
 3441 0063 4889C7   		movq	%rax, %rdi
 3442              	.LVL322:
 152:fltk-1.3.4-1/png/png.c ****          length -= safe_length;
 3443              		.loc 1 152 10 is_stmt 1 view .LVU1008
 153:fltk-1.3.4-1/png/png.c ****       }
 3444              		.loc 1 153 10 view .LVU1009
 153:fltk-1.3.4-1/png/png.c ****       }
 3445              		.loc 1 153 10 is_stmt 0 view .LVU1010
 3446              	.LBE363:
 155:fltk-1.3.4-1/png/png.c **** 
 3447              		.loc 1 155 13 is_stmt 1 view .LVU1011
 155:fltk-1.3.4-1/png/png.c **** 
 3448              		.loc 1 155 7 is_stmt 0 view .LVU1012
 3449 0066 4829EB   		subq	%rbp, %rbx
 3450              	.LVL323:
 155:fltk-1.3.4-1/png/png.c **** 
 3451              		.loc 1 155 7 view .LVU1013
 3452 0069 75DD     		jne	.L364
 158:fltk-1.3.4-1/png/png.c ****    }
 3453              		.loc 1 158 7 is_stmt 1 view .LVU1014
 158:fltk-1.3.4-1/png/png.c ****    }
 3454              		.loc 1 158 22 is_stmt 0 view .LVU1015
 3455 006b 41898424 		movl	%eax, 604(%r12)
 3455      5C020000 
 3456              	.LVL324:
 3457              	.L359:
 158:fltk-1.3.4-1/png/png.c ****    }
 3458              		.loc 1 158 22 view .LVU1016
 3459              	.LBE361:
 160:fltk-1.3.4-1/png/png.c **** 
 3460              		.loc 1 160 1 view .LVU1017
 3461 0073 5B       		popq	%rbx
 3462              		.cfi_remember_state
 3463              		.cfi_def_cfa_offset 40
 3464 0074 5D       		popq	%rbp
 3465              		.cfi_def_cfa_offset 32
 3466 0075 415C     		popq	%r12
 3467              		.cfi_def_cfa_offset 24
 3468              	.LVL325:
 160:fltk-1.3.4-1/png/png.c **** 
 3469              		.loc 1 160 1 view .LVU1018
 3470 0077 415D     		popq	%r13
 3471              		.cfi_def_cfa_offset 16
 3472 0079 415E     		popq	%r14
 3473              		.cfi_def_cfa_offset 8
 3474              	.LVL326:
 160:fltk-1.3.4-1/png/png.c **** 
 3475              		.loc 1 160 1 view .LVU1019
 3476 007b C3       		ret
 3477              	.LVL327:
 3478 007c 0F1F4000 		.p2align 4,,10
 3479              		.p2align 3
 3480              	.L360:
 3481              		.cfi_restore_state
 127:fltk-1.3.4-1/png/png.c ****          need_crc = 0;
 3482              		.loc 1 127 7 is_stmt 1 view .LVU1020
 127:fltk-1.3.4-1/png/png.c ****          need_crc = 0;
 3483              		.loc 1 127 10 is_stmt 0 view .LVU1021
 3484 0080 F6C408   		testb	$8, %ah
 3485 0083 74AB     		je	.L362
 160:fltk-1.3.4-1/png/png.c **** 
 3486              		.loc 1 160 1 view .LVU1022
 3487 0085 5B       		popq	%rbx
 3488              		.cfi_def_cfa_offset 40
 3489 0086 5D       		popq	%rbp
 3490              		.cfi_def_cfa_offset 32
 3491 0087 415C     		popq	%r12
 3492              		.cfi_def_cfa_offset 24
 3493 0089 415D     		popq	%r13
 3494              		.cfi_def_cfa_offset 16
 3495 008b 415E     		popq	%r14
 3496              		.cfi_def_cfa_offset 8
 3497 008d C3       		ret
 3498              		.cfi_endproc
 3499              	.LFE46:
 3501              		.section	.rodata.png_user_version_check.str1.1,"aMS",@progbits,1
 3502              	.LC19:
 3503 0000 312E362E 		.string	"1.6.16"
 3503      313600
 3504              		.section	.rodata.png_user_version_check.str1.8,"aMS",@progbits,1
 3505              		.align 8
 3506              	.LC20:
 3507 0000 4170706C 		.string	"Application built with libpng-"
 3507      69636174 
 3507      696F6E20 
 3507      6275696C 
 3507      74207769 
 3508              		.section	.rodata.png_user_version_check.str1.1
 3509              	.LC21:
 3510 0007 20627574 		.string	" but running with "
 3510      2072756E 
 3510      6E696E67 
 3510      20776974 
 3510      682000
 3511              		.section	.text.png_user_version_check,"ax",@progbits
 3512              		.p2align 4
 3513              		.globl	png_user_version_check
 3515              	png_user_version_check:
 3516              	.LVL328:
 3517              	.LFB47:
 167:fltk-1.3.4-1/png/png.c ****      /* Libpng versions 1.0.0 and later are binary compatible if the version
 3518              		.loc 1 167 1 is_stmt 1 view -0
 3519              		.cfi_startproc
 167:fltk-1.3.4-1/png/png.c ****      /* Libpng versions 1.0.0 and later are binary compatible if the version
 3520              		.loc 1 167 1 is_stmt 0 view .LVU1024
 3521 0000 F30F1EFA 		endbr64
 3522 0004 4155     		pushq	%r13
 3523              		.cfi_def_cfa_offset 16
 3524              		.cfi_offset 13, -16
 3525 0006 4154     		pushq	%r12
 3526              		.cfi_def_cfa_offset 24
 3527              		.cfi_offset 12, -24
 3528 0008 4989F4   		movq	%rsi, %r12
 3529 000b 55       		pushq	%rbp
 3530              		.cfi_def_cfa_offset 32
 3531              		.cfi_offset 6, -32
 3532 000c 4889FD   		movq	%rdi, %rbp
 3533 000f 4881EC90 		subq	$144, %rsp
 3533      000000
 3534              		.cfi_def_cfa_offset 176
 3535 0016 8BB73001 		movl	304(%rdi), %esi
 3535      0000
 3536              	.LVL329:
 167:fltk-1.3.4-1/png/png.c ****      /* Libpng versions 1.0.0 and later are binary compatible if the version
 3537              		.loc 1 167 1 view .LVU1025
 3538 001c 64488B04 		movq	%fs:40, %rax
 3538      25280000 
 3538      00
 3539 0025 48898424 		movq	%rax, 136(%rsp)
 3539      88000000 
 3540 002d 31C0     		xorl	%eax, %eax
 173:fltk-1.3.4-1/png/png.c ****    {
 3541              		.loc 1 173 4 is_stmt 1 view .LVU1026
 173:fltk-1.3.4-1/png/png.c ****    {
 3542              		.loc 1 173 7 is_stmt 0 view .LVU1027
 3543 002f 4D85E4   		testq	%r12, %r12
 3544 0032 0F849000 		je	.L376
 3544      0000
 3545              	.LBB369:
 176:fltk-1.3.4-1/png/png.c **** 
 3546              		.loc 1 176 11 view .LVU1028
 3547 0038 4531C0   		xorl	%r8d, %r8d
 3548 003b 488D3D00 		leaq	.LC19(%rip), %rdi
 3548      000000
 3549              	.LVL330:
 176:fltk-1.3.4-1/png/png.c **** 
 3550              		.loc 1 176 11 view .LVU1029
 3551 0042 EB10     		jmp	.L380
 3552              	.LVL331:
 3553              		.p2align 4,,10
 3554 0044 0F1F4000 		.p2align 3
 3555              	.L378:
 176:fltk-1.3.4-1/png/png.c **** 
 3556              		.loc 1 176 11 view .LVU1030
 3557 0048 4883C001 		addq	$1, %rax
 3558              	.LVL332:
 185:fltk-1.3.4-1/png/png.c ****             PNG_LIBPNG_VER_STRING[i] != 0);
 3559              		.loc 1 185 55 view .LVU1031
 3560 004c 84D2     		testb	%dl, %dl
 3561 004e 7440     		je	.L387
 3562              	.L394:
 185:fltk-1.3.4-1/png/png.c ****             PNG_LIBPNG_VER_STRING[i] != 0);
 3563              		.loc 1 185 55 view .LVU1032
 3564 0050 84C9     		testb	%cl, %cl
 3565 0052 743C     		je	.L387
 3566              	.LVL333:
 3567              	.L380:
 178:fltk-1.3.4-1/png/png.c ****       {
 3568              		.loc 1 178 7 is_stmt 1 view .LVU1033
 180:fltk-1.3.4-1/png/png.c ****          if (user_png_ver[i] != PNG_LIBPNG_VER_STRING[i])
 3569              		.loc 1 180 10 view .LVU1034
 181:fltk-1.3.4-1/png/png.c ****             png_ptr->flags |= PNG_FLAG_LIBRARY_MISMATCH;
 3570              		.loc 1 181 10 view .LVU1035
 181:fltk-1.3.4-1/png/png.c ****             png_ptr->flags |= PNG_FLAG_LIBRARY_MISMATCH;
 3571              		.loc 1 181 26 is_stmt 0 view .LVU1036
 3572 0054 410FB614 		movzbl	(%r12,%rax), %edx
 3572      04
 181:fltk-1.3.4-1/png/png.c ****             png_ptr->flags |= PNG_FLAG_LIBRARY_MISMATCH;
 3573              		.loc 1 181 54 view .LVU1037
 3574 0059 0FB60C07 		movzbl	(%rdi,%rax), %ecx
 181:fltk-1.3.4-1/png/png.c ****             png_ptr->flags |= PNG_FLAG_LIBRARY_MISMATCH;
 3575              		.loc 1 181 13 view .LVU1038
 3576 005d 38CA     		cmpb	%cl, %dl
 3577 005f 740C     		je	.L377
 182:fltk-1.3.4-1/png/png.c ****          if (user_png_ver[i] == '.')
 3578              		.loc 1 182 13 is_stmt 1 view .LVU1039
 182:fltk-1.3.4-1/png/png.c ****          if (user_png_ver[i] == '.')
 3579              		.loc 1 182 28 is_stmt 0 view .LVU1040
 3580 0061 81CE0000 		orl	$131072, %esi
 3580      0200
 3581 0067 89B53001 		movl	%esi, 304(%rbp)
 3581      0000
 3582              	.L377:
 183:fltk-1.3.4-1/png/png.c ****             found_dots++;
 3583              		.loc 1 183 10 is_stmt 1 view .LVU1041
 183:fltk-1.3.4-1/png/png.c ****             found_dots++;
 3584              		.loc 1 183 13 is_stmt 0 view .LVU1042
 3585 006d 80FA2E   		cmpb	$46, %dl
 3586 0070 75D6     		jne	.L378
 184:fltk-1.3.4-1/png/png.c ****       } while (found_dots < 2 && user_png_ver[i] != 0 &&
 3587              		.loc 1 184 13 is_stmt 1 view .LVU1043
 3588              	.LVL334:
 185:fltk-1.3.4-1/png/png.c ****             PNG_LIBPNG_VER_STRING[i] != 0);
 3589              		.loc 1 185 15 view .LVU1044
 186:fltk-1.3.4-1/png/png.c ****    }
 3590              		.loc 1 186 13 is_stmt 0 view .LVU1045
 3591 0072 4183F801 		cmpl	$1, %r8d
 3592 0076 7418     		je	.L387
 3593 0078 41B80100 		movl	$1, %r8d
 3593      0000
 3594              	.LVL335:
 186:fltk-1.3.4-1/png/png.c ****    }
 3595              		.loc 1 186 13 view .LVU1046
 3596 007e 4883C001 		addq	$1, %rax
 3597              	.LVL336:
 185:fltk-1.3.4-1/png/png.c ****             PNG_LIBPNG_VER_STRING[i] != 0);
 3598              		.loc 1 185 55 view .LVU1047
 3599 0082 84D2     		testb	%dl, %dl
 3600 0084 75CA     		jne	.L394
 3601              	.LVL337:
 3602 0086 662E0F1F 		.p2align 4,,10
 3602      84000000 
 3602      0000
 3603              		.p2align 3
 3604              	.L387:
 185:fltk-1.3.4-1/png/png.c ****             PNG_LIBPNG_VER_STRING[i] != 0);
 3605              		.loc 1 185 55 view .LVU1048
 3606 0090 81E60000 		andl	$131072, %esi
 3606      0200
 3607              	.LBE369:
 192:fltk-1.3.4-1/png/png.c ****    {
 3608              		.loc 1 192 4 is_stmt 1 view .LVU1049
 216:fltk-1.3.4-1/png/png.c **** }
 3609              		.loc 1 216 11 is_stmt 0 view .LVU1050
 3610 0096 B8010000 		movl	$1, %eax
 3610      00
 192:fltk-1.3.4-1/png/png.c ****    {
 3611              		.loc 1 192 7 view .LVU1051
 3612 009b 85F6     		testl	%esi, %esi
 3613 009d 7535     		jne	.L382
 3614              	.L375:
 217:fltk-1.3.4-1/png/png.c **** 
 3615              		.loc 1 217 1 view .LVU1052
 3616 009f 488BBC24 		movq	136(%rsp), %rdi
 3616      88000000 
 3617 00a7 6448333C 		xorq	%fs:40, %rdi
 3617      25280000 
 3617      00
 3618 00b0 0F858A00 		jne	.L395
 3618      0000
 3619 00b6 4881C490 		addq	$144, %rsp
 3619      000000
 3620              		.cfi_remember_state
 3621              		.cfi_def_cfa_offset 32
 3622 00bd 5D       		popq	%rbp
 3623              		.cfi_def_cfa_offset 24
 3624              	.LVL338:
 217:fltk-1.3.4-1/png/png.c **** 
 3625              		.loc 1 217 1 view .LVU1053
 3626 00be 415C     		popq	%r12
 3627              		.cfi_def_cfa_offset 16
 3628              	.LVL339:
 217:fltk-1.3.4-1/png/png.c **** 
 3629              		.loc 1 217 1 view .LVU1054
 3630 00c0 415D     		popq	%r13
 3631              		.cfi_def_cfa_offset 8
 3632 00c2 C3       		ret
 3633              	.LVL340:
 3634              		.p2align 4,,10
 3635 00c3 0F1F4400 		.p2align 3
 3635      00
 3636              	.L376:
 3637              		.cfi_restore_state
 190:fltk-1.3.4-1/png/png.c **** 
 3638              		.loc 1 190 7 is_stmt 1 view .LVU1055
 190:fltk-1.3.4-1/png/png.c **** 
 3639              		.loc 1 190 22 is_stmt 0 view .LVU1056
 3640 00c8 81CE0000 		orl	$131072, %esi
 3640      0200
 3641 00ce 89B73001 		movl	%esi, 304(%rdi)
 3641      0000
 192:fltk-1.3.4-1/png/png.c ****    {
 3642              		.loc 1 192 4 is_stmt 1 view .LVU1057
 3643              	.LVL341:
 3644              	.L382:
 3645              	.LBB370:
 3646              	.LBI370:
 166:fltk-1.3.4-1/png/png.c **** {
 3647              		.loc 1 166 1 view .LVU1058
 3648              	.LBB371:
 195:fltk-1.3.4-1/png/png.c ****       char m[128];
 3649              		.loc 1 195 7 view .LVU1059
 196:fltk-1.3.4-1/png/png.c **** 
 3650              		.loc 1 196 7 view .LVU1060
 198:fltk-1.3.4-1/png/png.c ****           "Application built with libpng-");
 3651              		.loc 1 198 7 view .LVU1061
 198:fltk-1.3.4-1/png/png.c ****           "Application built with libpng-");
 3652              		.loc 1 198 13 is_stmt 0 view .LVU1062
 3653 00d4 4989E5   		movq	%rsp, %r13
 3654 00d7 488D0D00 		leaq	.LC20(%rip), %rcx
 3654      000000
 3655 00de 31D2     		xorl	%edx, %edx
 3656 00e0 BE800000 		movl	$128, %esi
 3656      00
 3657 00e5 4C89EF   		movq	%r13, %rdi
 3658 00e8 E8000000 		call	png_safecat@PLT
 3658      00
 3659              	.LVL342:
 200:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, " but running with ");
 3660              		.loc 1 200 13 view .LVU1063
 3661 00ed 4C89E1   		movq	%r12, %rcx
 3662 00f0 BE800000 		movl	$128, %esi
 3662      00
 3663 00f5 4C89EF   		movq	%r13, %rdi
 198:fltk-1.3.4-1/png/png.c ****           "Application built with libpng-");
 3664              		.loc 1 198 13 view .LVU1064
 3665 00f8 4889C2   		movq	%rax, %rdx
 3666              	.LVL343:
 200:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, " but running with ");
 3667              		.loc 1 200 7 is_stmt 1 view .LVU1065
 200:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, " but running with ");
 3668              		.loc 1 200 13 is_stmt 0 view .LVU1066
 3669 00fb E8000000 		call	png_safecat@PLT
 3669      00
 3670              	.LVL344:
 201:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, PNG_LIBPNG_VER_STRING);
 3671              		.loc 1 201 13 view .LVU1067
 3672 0100 488D0D00 		leaq	.LC21(%rip), %rcx
 3672      000000
 3673 0107 BE800000 		movl	$128, %esi
 3673      00
 3674 010c 4C89EF   		movq	%r13, %rdi
 200:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, " but running with ");
 3675              		.loc 1 200 13 view .LVU1068
 3676 010f 4889C2   		movq	%rax, %rdx
 3677              	.LVL345:
 201:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, PNG_LIBPNG_VER_STRING);
 3678              		.loc 1 201 7 is_stmt 1 view .LVU1069
 201:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, PNG_LIBPNG_VER_STRING);
 3679              		.loc 1 201 13 is_stmt 0 view .LVU1070
 3680 0112 E8000000 		call	png_safecat@PLT
 3680      00
 3681              	.LVL346:
 202:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(pos)
 3682              		.loc 1 202 13 view .LVU1071
 3683 0117 488D0D00 		leaq	.LC19(%rip), %rcx
 3683      000000
 3684 011e BE800000 		movl	$128, %esi
 3684      00
 3685 0123 4C89EF   		movq	%r13, %rdi
 201:fltk-1.3.4-1/png/png.c ****       pos = png_safecat(m, (sizeof m), pos, PNG_LIBPNG_VER_STRING);
 3686              		.loc 1 201 13 view .LVU1072
 3687 0126 4889C2   		movq	%rax, %rdx
 3688              	.LVL347:
 202:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(pos)
 3689              		.loc 1 202 7 is_stmt 1 view .LVU1073
 202:fltk-1.3.4-1/png/png.c ****       PNG_UNUSED(pos)
 3690              		.loc 1 202 13 is_stmt 0 view .LVU1074
 3691 0129 E8000000 		call	png_safecat@PLT
 3691      00
 3692              	.LVL348:
 203:fltk-1.3.4-1/png/png.c **** 
 3693              		.loc 1 203 7 is_stmt 1 view .LVU1075
 205:fltk-1.3.4-1/png/png.c **** #endif
 3694              		.loc 1 205 7 view .LVU1076
 3695 012e 4C89EE   		movq	%r13, %rsi
 3696 0131 4889EF   		movq	%rbp, %rdi
 3697 0134 E8000000 		call	png_warning@PLT
 3697      00
 3698              	.LVL349:
 212:fltk-1.3.4-1/png/png.c ****    }
 3699              		.loc 1 212 7 view .LVU1077
 212:fltk-1.3.4-1/png/png.c ****    }
 3700              		.loc 1 212 7 is_stmt 0 view .LVU1078
 3701 0139 31C0     		xorl	%eax, %eax
 3702 013b E95FFFFF 		jmp	.L375
 3702      FF
 3703              	.L395:
 212:fltk-1.3.4-1/png/png.c ****    }
 3704              		.loc 1 212 7 view .LVU1079
 3705              	.LBE371:
 3706              	.LBE370:
 217:fltk-1.3.4-1/png/png.c **** 
 3707              		.loc 1 217 1 view .LVU1080
 3708 0140 E8000000 		call	__stack_chk_fail@PLT
 3708      00
 3709              	.LVL350:
 3710              		.cfi_endproc
 3711              	.LFE47:
 3713              		.section	.text.png_create_png_struct,"ax",@progbits
 3714              		.p2align 4
 3715              		.globl	png_create_png_struct
 3717              	png_create_png_struct:
 3718              	.LVL351:
 3719              	.LFB48:
 226:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 3720              		.loc 1 226 1 is_stmt 1 view -0
 3721              		.cfi_startproc
 226:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 3722              		.loc 1 226 1 is_stmt 0 view .LVU1082
 3723 0000 F30F1EFA 		endbr64
 3724 0004 4156     		pushq	%r14
 3725              		.cfi_def_cfa_offset 16
 3726              		.cfi_offset 14, -16
 3727 0006 4989CE   		movq	%rcx, %r14
 3728              	.LBB372:
 3729              	.LBB373:
 3730              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 3731              		.loc 2 71 10 view .LVU1083
 3732 0009 B9A50000 		movl	$165, %ecx
 3732      00
 3733              	.LVL352:
 3734              		.loc 2 71 10 view .LVU1084
 3735              	.LBE373:
 3736              	.LBE372:
 226:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 3737              		.loc 1 226 1 view .LVU1085
 3738 000e 4155     		pushq	%r13
 3739              		.cfi_def_cfa_offset 24
 3740              		.cfi_offset 13, -24
 3741 0010 4989D5   		movq	%rdx, %r13
 3742 0013 4C89CA   		movq	%r9, %rdx
 3743              	.LVL353:
 226:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 3744              		.loc 1 226 1 view .LVU1086
 3745 0016 4154     		pushq	%r12
 3746              		.cfi_def_cfa_offset 32
 3747              		.cfi_offset 12, -32
 3748 0018 4989F4   		movq	%rsi, %r12
 3749 001b 4C89C6   		movq	%r8, %rsi
 3750              	.LVL354:
 226:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 3751              		.loc 1 226 1 view .LVU1087
 3752 001e 55       		pushq	%rbp
 3753              		.cfi_def_cfa_offset 40
 3754              		.cfi_offset 6, -40
 3755 001f 4881EC18 		subq	$1560, %rsp
 3755      060000
 3756              		.cfi_def_cfa_offset 1600
 226:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 3757              		.loc 1 226 1 view .LVU1088
 3758 0026 48897C24 		movq	%rdi, 8(%rsp)
 3758      08
 3759              	.LBB376:
 3760              	.LBB374:
 3761              		.loc 2 71 10 view .LVU1089
 3762 002b 488DAC24 		leaq	224(%rsp), %rbp
 3762      E0000000 
 3763 0033 4889EF   		movq	%rbp, %rdi
 3764              	.LVL355:
 3765              		.loc 2 71 10 view .LVU1090
 3766              	.LBE374:
 3767              	.LBE376:
 226:fltk-1.3.4-1/png/png.c ****    png_struct create_struct;
 3768              		.loc 1 226 1 view .LVU1091
 3769 0036 64488B04 		movq	%fs:40, %rax
 3769      25280000 
 3769      00
 3770 003f 48898424 		movq	%rax, 1544(%rsp)
 3770      08060000 
 3771 0047 31C0     		xorl	%eax, %eax
 227:fltk-1.3.4-1/png/png.c **** #  ifdef PNG_SETJMP_SUPPORTED
 3772              		.loc 1 227 4 is_stmt 1 view .LVU1092
 229:fltk-1.3.4-1/png/png.c **** #  endif
 3773              		.loc 1 229 7 view .LVU1093
 236:fltk-1.3.4-1/png/png.c **** 
 3774              		.loc 1 236 4 view .LVU1094
 3775              	.LVL356:
 3776              	.LBB377:
 3777              	.LBI372:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 3778              		.loc 2 59 1 view .LVU1095
 3779              	.LBB375:
 3780              		.loc 2 71 3 view .LVU1096
 3781              		.loc 2 71 10 is_stmt 0 view .LVU1097
 3782 0049 F348AB   		rep stosq
 3783              	.LVL357:
 3784              		.loc 2 71 10 view .LVU1098
 3785              	.LBE375:
 3786              	.LBE377:
 240:fltk-1.3.4-1/png/png.c ****       create_struct.user_height_max = PNG_USER_HEIGHT_MAX;
 3787              		.loc 1 240 7 is_stmt 1 view .LVU1099
 241:fltk-1.3.4-1/png/png.c **** 
 3788              		.loc 1 241 7 view .LVU1100
 245:fltk-1.3.4-1/png/png.c **** #     endif
 3789              		.loc 1 245 10 view .LVU1101
 252:fltk-1.3.4-1/png/png.c **** #     endif
 3790              		.loc 1 252 10 view .LVU1102
 260:fltk-1.3.4-1/png/png.c **** #  else
 3791              		.loc 1 260 7 is_stmt 0 view .LVU1103
 3792 004c 488B8C24 		movq	1600(%rsp), %rcx
 3792      40060000 
 3793 0054 4889EF   		movq	%rbp, %rdi
 240:fltk-1.3.4-1/png/png.c ****       create_struct.user_height_max = PNG_USER_HEIGHT_MAX;
 3794              		.loc 1 240 36 view .LVU1104
 3795 0057 C784243C 		movl	$2147483647, 1340(%rsp)
 3795      050000FF 
 3795      FFFF7F
 241:fltk-1.3.4-1/png/png.c **** 
 3796              		.loc 1 241 37 view .LVU1105
 3797 0062 48C78424 		movq	$2147483647, 1344(%rsp)
 3797      40050000 
 3797      FFFFFF7F 
 260:fltk-1.3.4-1/png/png.c **** #  else
 3798              		.loc 1 260 7 is_stmt 1 view .LVU1106
 3799 006e E8000000 		call	png_set_mem_fn@PLT
 3799      00
 3800              	.LVL358:
 272:fltk-1.3.4-1/png/png.c **** 
 3801              		.loc 1 272 4 view .LVU1107
 3802 0073 4889EF   		movq	%rbp, %rdi
 3803 0076 4C89F1   		movq	%r14, %rcx
 3804 0079 4C89EA   		movq	%r13, %rdx
 3805 007c 4C89E6   		movq	%r12, %rsi
 3806 007f E8000000 		call	png_set_error_fn@PLT
 3806      00
 3807              	.LVL359:
 275:fltk-1.3.4-1/png/png.c ****       {
 3808              		.loc 1 275 7 view .LVU1108
 275:fltk-1.3.4-1/png/png.c ****       {
 3809              		.loc 1 275 12 is_stmt 0 view .LVU1109
 3810 0084 488D7C24 		leaq	16(%rsp), %rdi
 3810      10
 3811 0089 E8000000 		call	_setjmp@PLT
 3811      00
 3812              	.LVL360:
 3813 008e F30F1EFA 		endbr64
 275:fltk-1.3.4-1/png/png.c ****       {
 3814              		.loc 1 275 10 view .LVU1110
 3815 0092 85C0     		testl	%eax, %eax
 3816 0094 0F85B600 		jne	.L400
 3816      0000
 282:fltk-1.3.4-1/png/png.c ****          create_struct.jmp_buf_size = 0; /*stack allocation*/
 3817              		.loc 1 282 10 is_stmt 1 view .LVU1111
 282:fltk-1.3.4-1/png/png.c ****          create_struct.jmp_buf_size = 0; /*stack allocation*/
 3818              		.loc 1 282 36 is_stmt 0 view .LVU1112
 3819 009a 488D4424 		leaq	16(%rsp), %rax
 3819      10
 290:fltk-1.3.4-1/png/png.c ****          {
 3820              		.loc 1 290 14 view .LVU1113
 3821 009f 488DAC24 		leaq	224(%rsp), %rbp
 3821      E0000000 
 3822 00a7 488B7424 		movq	8(%rsp), %rsi
 3822      08
 283:fltk-1.3.4-1/png/png.c ****          create_struct.longjmp_fn = longjmp;
 3823              		.loc 1 283 37 view .LVU1114
 3824 00ac 48C78424 		movq	$0, 440(%rsp)
 3824      B8010000 
 3824      00000000 
 282:fltk-1.3.4-1/png/png.c ****          create_struct.jmp_buf_size = 0; /*stack allocation*/
 3825              		.loc 1 282 36 view .LVU1115
 3826 00b8 48898424 		movq	%rax, 432(%rsp)
 3826      B0010000 
 283:fltk-1.3.4-1/png/png.c ****          create_struct.longjmp_fn = longjmp;
 3827              		.loc 1 283 10 is_stmt 1 view .LVU1116
 284:fltk-1.3.4-1/png/png.c **** #  else
 3828              		.loc 1 284 10 view .LVU1117
 284:fltk-1.3.4-1/png/png.c **** #  else
 3829              		.loc 1 284 35 is_stmt 0 view .LVU1118
 3830 00c0 488B0500 		movq	__longjmp_chk@GOTPCREL(%rip), %rax
 3830      000000
 290:fltk-1.3.4-1/png/png.c ****          {
 3831              		.loc 1 290 14 view .LVU1119
 3832 00c7 4889EF   		movq	%rbp, %rdi
 284:fltk-1.3.4-1/png/png.c **** #  else
 3833              		.loc 1 284 35 view .LVU1120
 3834 00ca 48898424 		movq	%rax, 424(%rsp)
 3834      A8010000 
 290:fltk-1.3.4-1/png/png.c ****          {
 3835              		.loc 1 290 10 is_stmt 1 view .LVU1121
 290:fltk-1.3.4-1/png/png.c ****          {
 3836              		.loc 1 290 14 is_stmt 0 view .LVU1122
 3837 00d2 E8000000 		call	png_user_version_check
 3837      00
 3838              	.LVL361:
 290:fltk-1.3.4-1/png/png.c ****          {
 3839              		.loc 1 290 13 view .LVU1123
 3840 00d7 85C0     		testl	%eax, %eax
 3841 00d9 7475     		je	.L400
 3842              	.LBB378:
 292:fltk-1.3.4-1/png/png.c ****                png_malloc_warn(&create_struct, (sizeof *png_ptr)));
 3843              		.loc 1 292 13 is_stmt 1 view .LVU1124
 292:fltk-1.3.4-1/png/png.c ****                png_malloc_warn(&create_struct, (sizeof *png_ptr)));
 3844              		.loc 1 292 36 is_stmt 0 view .LVU1125
 3845 00db BE280500 		movl	$1320, %esi
 3845      00
 3846 00e0 4889EF   		movq	%rbp, %rdi
 3847 00e3 E8000000 		call	png_malloc_warn@PLT
 3847      00
 3848              	.LVL362:
 295:fltk-1.3.4-1/png/png.c ****             {
 3849              		.loc 1 295 13 is_stmt 1 view .LVU1126
 295:fltk-1.3.4-1/png/png.c ****             {
 3850              		.loc 1 295 16 is_stmt 0 view .LVU1127
 3851 00e8 4885C0   		testq	%rax, %rax
 3852 00eb 7465     		je	.L396
 300:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.zfree = png_zfree;
 3853              		.loc 1 300 16 is_stmt 1 view .LVU1128
 300:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.zfree = png_zfree;
 3854              		.loc 1 300 45 is_stmt 0 view .LVU1129
 3855 00ed 488D0D00 		leaq	png_zalloc(%rip), %rcx
 3855      000000
 311:fltk-1.3.4-1/png/png.c **** 
 3856              		.loc 1 311 25 view .LVU1130
 3857 00f4 4889C7   		movq	%rax, %rdi
 301:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.opaque = png_ptr;
 3858              		.loc 1 301 44 view .LVU1131
 3859 00f7 488D1500 		leaq	png_zfree(%rip), %rdx
 3859      000000
 302:fltk-1.3.4-1/png/png.c **** 
 3860              		.loc 1 302 45 view .LVU1132
 3861 00fe 48898424 		movq	%rax, 624(%rsp)
 3861      70020000 
 300:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.zfree = png_zfree;
 3862              		.loc 1 300 45 view .LVU1133
 3863 0106 48898C24 		movq	%rcx, 608(%rsp)
 3863      60020000 
 301:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.opaque = png_ptr;
 3864              		.loc 1 301 16 is_stmt 1 view .LVU1134
 311:fltk-1.3.4-1/png/png.c **** 
 3865              		.loc 1 311 25 is_stmt 0 view .LVU1135
 3866 010e 4889EE   		movq	%rbp, %rsi
 3867 0111 B9A50000 		movl	$165, %ecx
 3867      00
 301:fltk-1.3.4-1/png/png.c ****                create_struct.zstream.opaque = png_ptr;
 3868              		.loc 1 301 44 view .LVU1136
 3869 0116 48899424 		movq	%rdx, 616(%rsp)
 3869      68020000 
 302:fltk-1.3.4-1/png/png.c **** 
 3870              		.loc 1 302 16 is_stmt 1 view .LVU1137
 306:fltk-1.3.4-1/png/png.c ****                   create_struct.jmp_buf_size = 0;
 3871              		.loc 1 306 19 view .LVU1138
 306:fltk-1.3.4-1/png/png.c ****                   create_struct.jmp_buf_size = 0;
 3872              		.loc 1 306 45 is_stmt 0 view .LVU1139
 3873 011e 48C78424 		movq	$0, 432(%rsp)
 3873      B0010000 
 3873      00000000 
 307:fltk-1.3.4-1/png/png.c ****                   create_struct.longjmp_fn = 0;
 3874              		.loc 1 307 19 is_stmt 1 view .LVU1140
 307:fltk-1.3.4-1/png/png.c ****                   create_struct.longjmp_fn = 0;
 3875              		.loc 1 307 46 is_stmt 0 view .LVU1141
 3876 012a 48C78424 		movq	$0, 440(%rsp)
 3876      B8010000 
 3876      00000000 
 308:fltk-1.3.4-1/png/png.c **** #              endif
 3877              		.loc 1 308 19 is_stmt 1 view .LVU1142
 308:fltk-1.3.4-1/png/png.c **** #              endif
 3878              		.loc 1 308 44 is_stmt 0 view .LVU1143
 3879 0136 48C78424 		movq	$0, 424(%rsp)
 3879      A8010000 
 3879      00000000 
 311:fltk-1.3.4-1/png/png.c **** 
 3880              		.loc 1 311 16 is_stmt 1 view .LVU1144
 311:fltk-1.3.4-1/png/png.c **** 
 3881              		.loc 1 311 25 is_stmt 0 view .LVU1145
 3882 0142 F348A5   		rep movsq
 314:fltk-1.3.4-1/png/png.c ****             }
 3883              		.loc 1 314 16 is_stmt 1 view .LVU1146
 314:fltk-1.3.4-1/png/png.c ****             }
 3884              		.loc 1 314 23 is_stmt 0 view .LVU1147
 3885 0145 EB0B     		jmp	.L396
 3886              	.LVL363:
 3887 0147 660F1F84 		.p2align 4,,10
 3887      00000000 
 3887      00
 3888              		.p2align 3
 3889              	.L400:
 314:fltk-1.3.4-1/png/png.c ****             }
 3890              		.loc 1 314 23 view .LVU1148
 3891              	.LBE378:
 322:fltk-1.3.4-1/png/png.c **** }
 3892              		.loc 1 322 11 view .LVU1149
 3893 0150 31C0     		xorl	%eax, %eax
 3894              	.L396:
 323:fltk-1.3.4-1/png/png.c **** 
 3895              		.loc 1 323 1 view .LVU1150
 3896 0152 488B9424 		movq	1544(%rsp), %rdx
 3896      08060000 
 3897 015a 64483314 		xorq	%fs:40, %rdx
 3897      25280000 
 3897      00
 3898 0163 750F     		jne	.L403
 3899 0165 4881C418 		addq	$1560, %rsp
 3899      060000
 3900              		.cfi_remember_state
 3901              		.cfi_def_cfa_offset 40
 3902 016c 5D       		popq	%rbp
 3903              		.cfi_def_cfa_offset 32
 3904 016d 415C     		popq	%r12
 3905              		.cfi_def_cfa_offset 24
 3906              	.LVL364:
 323:fltk-1.3.4-1/png/png.c **** 
 3907              		.loc 1 323 1 view .LVU1151
 3908 016f 415D     		popq	%r13
 3909              		.cfi_def_cfa_offset 16
 3910              	.LVL365:
 323:fltk-1.3.4-1/png/png.c **** 
 3911              		.loc 1 323 1 view .LVU1152
 3912 0171 415E     		popq	%r14
 3913              		.cfi_def_cfa_offset 8
 3914              	.LVL366:
 323:fltk-1.3.4-1/png/png.c **** 
 3915              		.loc 1 323 1 view .LVU1153
 3916 0173 C3       		ret
 3917              	.LVL367:
 3918              	.L403:
 3919              		.cfi_restore_state
 323:fltk-1.3.4-1/png/png.c **** 
 3920              		.loc 1 323 1 view .LVU1154
 3921 0174 E8000000 		call	__stack_chk_fail@PLT
 3921      00
 3922              	.LVL368:
 3923              		.cfi_endproc
 3924              	.LFE48:
 3926              		.section	.text.png_create_info_struct,"ax",@progbits
 3927              		.p2align 4
 3928              		.globl	png_create_info_struct
 3930              	png_create_info_struct:
 3931              	.LVL369:
 3932              	.LFB49:
 328:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr;
 3933              		.loc 1 328 1 is_stmt 1 view -0
 3934              		.cfi_startproc
 328:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr;
 3935              		.loc 1 328 1 is_stmt 0 view .LVU1156
 3936 0000 F30F1EFA 		endbr64
 329:fltk-1.3.4-1/png/png.c **** 
 3937              		.loc 1 329 4 is_stmt 1 view .LVU1157
 331:fltk-1.3.4-1/png/png.c **** 
 3938              		.loc 1 331 4 view .LVU1158
 333:fltk-1.3.4-1/png/png.c ****       return NULL;
 3939              		.loc 1 333 4 view .LVU1159
 333:fltk-1.3.4-1/png/png.c ****       return NULL;
 3940              		.loc 1 333 7 is_stmt 0 view .LVU1160
 3941 0004 4885FF   		testq	%rdi, %rdi
 3942 0007 744F     		je	.L406
 341:fltk-1.3.4-1/png/png.c ****       (sizeof *info_ptr)));
 3943              		.loc 1 341 4 is_stmt 1 view .LVU1161
 328:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr;
 3944              		.loc 1 328 1 is_stmt 0 view .LVU1162
 3945 0009 4883EC08 		subq	$8, %rsp
 3946              		.cfi_def_cfa_offset 16
 341:fltk-1.3.4-1/png/png.c ****       (sizeof *info_ptr)));
 3947              		.loc 1 341 15 view .LVU1163
 3948 000d BE580100 		movl	$344, %esi
 3948      00
 3949 0012 E8000000 		call	png_malloc_base@PLT
 3949      00
 3950              	.LVL370:
 341:fltk-1.3.4-1/png/png.c ****       (sizeof *info_ptr)));
 3951              		.loc 1 341 15 view .LVU1164
 3952 0017 4989C0   		movq	%rax, %r8
 3953              	.LVL371:
 344:fltk-1.3.4-1/png/png.c ****       memset(info_ptr, 0, (sizeof *info_ptr));
 3954              		.loc 1 344 4 is_stmt 1 view .LVU1165
 344:fltk-1.3.4-1/png/png.c ****       memset(info_ptr, 0, (sizeof *info_ptr));
 3955              		.loc 1 344 7 is_stmt 0 view .LVU1166
 3956 001a 4885C0   		testq	%rax, %rax
 3957 001d 742E     		je	.L404
 345:fltk-1.3.4-1/png/png.c **** 
 3958              		.loc 1 345 7 is_stmt 1 view .LVU1167
 3959              	.LVL372:
 3960              	.LBB379:
 3961              	.LBI379:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 3962              		.loc 2 59 1 view .LVU1168
 3963              	.LBB380:
 3964              		.loc 2 71 3 view .LVU1169
 3965              		.loc 2 71 10 is_stmt 0 view .LVU1170
 3966 001f 488D7808 		leaq	8(%rax), %rdi
 3967 0023 4889C1   		movq	%rax, %rcx
 3968 0026 48C70000 		movq	$0, (%rax)
 3968      000000
 3969 002d 48C78050 		movq	$0, 336(%rax)
 3969      01000000 
 3969      000000
 3970 0038 4883E7F8 		andq	$-8, %rdi
 3971 003c 31C0     		xorl	%eax, %eax
 3972              	.LVL373:
 3973              		.loc 2 71 10 view .LVU1171
 3974 003e 4829F9   		subq	%rdi, %rcx
 3975              	.LVL374:
 3976              		.loc 2 71 10 view .LVU1172
 3977 0041 81C15801 		addl	$344, %ecx
 3977      0000
 3978 0047 C1E903   		shrl	$3, %ecx
 3979 004a F348AB   		rep stosq
 3980              	.LVL375:
 3981              	.L404:
 3982              		.loc 2 71 10 view .LVU1173
 3983              	.LBE380:
 3984              	.LBE379:
 348:fltk-1.3.4-1/png/png.c **** 
 3985              		.loc 1 348 1 view .LVU1174
 3986 004d 4C89C0   		movq	%r8, %rax
 3987 0050 4883C408 		addq	$8, %rsp
 3988              		.cfi_def_cfa_offset 8
 3989 0054 C3       		ret
 3990              	.LVL376:
 3991              		.p2align 4,,10
 3992 0055 0F1F00   		.p2align 3
 3993              	.L406:
 334:fltk-1.3.4-1/png/png.c **** 
 3994              		.loc 1 334 14 view .LVU1175
 3995 0058 4531C0   		xorl	%r8d, %r8d
 348:fltk-1.3.4-1/png/png.c **** 
 3996              		.loc 1 348 1 view .LVU1176
 3997 005b 4C89C0   		movq	%r8, %rax
 3998 005e C3       		ret
 3999              		.cfi_endproc
 4000              	.LFE49:
 4002              		.section	.text.png_destroy_info_struct,"ax",@progbits
 4003              		.p2align 4
 4004              		.globl	png_destroy_info_struct
 4006              	png_destroy_info_struct:
 4007              	.LVL377:
 4008              	.LFB50:
 360:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = NULL;
 4009              		.loc 1 360 1 is_stmt 1 view -0
 4010              		.cfi_startproc
 360:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = NULL;
 4011              		.loc 1 360 1 is_stmt 0 view .LVU1178
 4012 0000 F30F1EFA 		endbr64
 361:fltk-1.3.4-1/png/png.c **** 
 4013              		.loc 1 361 4 is_stmt 1 view .LVU1179
 4014              	.LVL378:
 363:fltk-1.3.4-1/png/png.c **** 
 4015              		.loc 1 363 4 view .LVU1180
 365:fltk-1.3.4-1/png/png.c ****       return;
 4016              		.loc 1 365 4 view .LVU1181
 368:fltk-1.3.4-1/png/png.c ****       info_ptr = *info_ptr_ptr;
 4017              		.loc 1 368 4 view .LVU1182
 368:fltk-1.3.4-1/png/png.c ****       info_ptr = *info_ptr_ptr;
 4018              		.loc 1 368 7 is_stmt 0 view .LVU1183
 4019 0004 4885F6   		testq	%rsi, %rsi
 4020 0007 0F848300 		je	.L426
 4020      0000
 360:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = NULL;
 4021              		.loc 1 360 1 view .LVU1184
 4022 000d 4154     		pushq	%r12
 4023              		.cfi_def_cfa_offset 16
 4024              		.cfi_offset 12, -16
 4025 000f 55       		pushq	%rbp
 4026              		.cfi_def_cfa_offset 24
 4027              		.cfi_offset 6, -24
 4028 0010 4889FD   		movq	%rdi, %rbp
 4029 0013 4883EC08 		subq	$8, %rsp
 4030              		.cfi_def_cfa_offset 32
 368:fltk-1.3.4-1/png/png.c ****       info_ptr = *info_ptr_ptr;
 4031              		.loc 1 368 7 view .LVU1185
 4032 0017 4885FF   		testq	%rdi, %rdi
 4033 001a 7464     		je	.L414
 369:fltk-1.3.4-1/png/png.c **** 
 4034              		.loc 1 369 7 is_stmt 1 view .LVU1186
 369:fltk-1.3.4-1/png/png.c **** 
 4035              		.loc 1 369 16 is_stmt 0 view .LVU1187
 4036 001c 4C8B26   		movq	(%rsi), %r12
 4037              	.LVL379:
 371:fltk-1.3.4-1/png/png.c ****    {
 4038              		.loc 1 371 4 is_stmt 1 view .LVU1188
 371:fltk-1.3.4-1/png/png.c ****    {
 4039              		.loc 1 371 7 is_stmt 0 view .LVU1189
 4040 001f 4D85E4   		testq	%r12, %r12
 4041 0022 745C     		je	.L414
 379:fltk-1.3.4-1/png/png.c **** 
 4042              		.loc 1 379 7 is_stmt 1 view .LVU1190
 379:fltk-1.3.4-1/png/png.c **** 
 4043              		.loc 1 379 21 is_stmt 0 view .LVU1191
 4044 0024 48C70600 		movq	$0, (%rsi)
 4044      000000
 381:fltk-1.3.4-1/png/png.c ****       memset(info_ptr, 0, (sizeof *info_ptr));
 4045              		.loc 1 381 7 is_stmt 1 view .LVU1192
 4046              	.LVL380:
 4047              	.LBB381:
 4048              	.LBI381:
 442:fltk-1.3.4-1/png/png.c ****    int num)
 4049              		.loc 1 442 1 view .LVU1193
 4050              	.LBB382:
 445:fltk-1.3.4-1/png/png.c **** 
 4051              		.loc 1 445 4 view .LVU1194
 447:fltk-1.3.4-1/png/png.c ****       return;
 4052              		.loc 1 447 4 view .LVU1195
 4053 002b B9FFFFFF 		movl	$-1, %ecx
 4053      FF
 4054 0030 4C89E6   		movq	%r12, %rsi
 4055              	.LVL381:
 447:fltk-1.3.4-1/png/png.c ****       return;
 4056              		.loc 1 447 4 is_stmt 0 view .LVU1196
 4057 0033 BAFF7F00 		movl	$32767, %edx
 4057      00
 4058 0038 E8000000 		call	png_free_data.part.0
 4058      00
 4059              	.LVL382:
 447:fltk-1.3.4-1/png/png.c ****       return;
 4060              		.loc 1 447 4 view .LVU1197
 4061              	.LBE382:
 4062              	.LBE381:
 382:fltk-1.3.4-1/png/png.c ****       png_free(png_ptr, info_ptr);
 4063              		.loc 1 382 7 is_stmt 1 view .LVU1198
 4064              	.LBB383:
 4065              	.LBI383:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 4066              		.loc 2 59 1 view .LVU1199
 4067              	.LBB384:
 4068              		.loc 2 71 3 view .LVU1200
 4069              		.loc 2 71 10 is_stmt 0 view .LVU1201
 4070 003d 498D7C24 		leaq	8(%r12), %rdi
 4070      08
 4071 0042 4C89E1   		movq	%r12, %rcx
 4072 0045 31C0     		xorl	%eax, %eax
 4073 0047 4883E7F8 		andq	$-8, %rdi
 4074 004b 49C70424 		movq	$0, (%r12)
 4074      00000000 
 4075              	.LBE384:
 4076              	.LBE383:
 383:fltk-1.3.4-1/png/png.c ****    }
 4077              		.loc 1 383 7 view .LVU1202
 4078 0053 4C89E6   		movq	%r12, %rsi
 4079              	.LBB386:
 4080              	.LBB385:
 4081              		.loc 2 71 10 view .LVU1203
 4082 0056 49C78424 		movq	$0, 336(%r12)
 4082      50010000 
 4082      00000000 
 4083 0062 4829F9   		subq	%rdi, %rcx
 4084 0065 81C15801 		addl	$344, %ecx
 4084      0000
 4085 006b C1E903   		shrl	$3, %ecx
 4086 006e F348AB   		rep stosq
 4087              	.LVL383:
 4088              		.loc 2 71 10 view .LVU1204
 4089              	.LBE385:
 4090              	.LBE386:
 383:fltk-1.3.4-1/png/png.c ****    }
 4091              		.loc 1 383 7 is_stmt 1 view .LVU1205
 385:fltk-1.3.4-1/png/png.c **** 
 4092              		.loc 1 385 1 is_stmt 0 view .LVU1206
 4093 0071 4883C408 		addq	$8, %rsp
 4094              		.cfi_remember_state
 4095              		.cfi_def_cfa_offset 24
 383:fltk-1.3.4-1/png/png.c ****    }
 4096              		.loc 1 383 7 view .LVU1207
 4097 0075 4889EF   		movq	%rbp, %rdi
 385:fltk-1.3.4-1/png/png.c **** 
 4098              		.loc 1 385 1 view .LVU1208
 4099 0078 5D       		popq	%rbp
 4100              		.cfi_restore 6
 4101              		.cfi_def_cfa_offset 16
 4102              	.LVL384:
 385:fltk-1.3.4-1/png/png.c **** 
 4103              		.loc 1 385 1 view .LVU1209
 4104 0079 415C     		popq	%r12
 4105              		.cfi_restore 12
 4106              		.cfi_def_cfa_offset 8
 4107              	.LVL385:
 383:fltk-1.3.4-1/png/png.c ****    }
 4108              		.loc 1 383 7 view .LVU1210
 4109 007b E9000000 		jmp	png_free@PLT
 4109      00
 4110              	.LVL386:
 4111              		.p2align 4,,10
 4112              		.p2align 3
 4113              	.L414:
 4114              		.cfi_restore_state
 385:fltk-1.3.4-1/png/png.c **** 
 4115              		.loc 1 385 1 view .LVU1211
 4116 0080 4883C408 		addq	$8, %rsp
 4117              		.cfi_def_cfa_offset 24
 4118 0084 5D       		popq	%rbp
 4119              		.cfi_def_cfa_offset 16
 4120 0085 415C     		popq	%r12
 4121              		.cfi_def_cfa_offset 8
 4122 0087 C3       		ret
 4123              	.LVL387:
 4124 0088 0F1F8400 		.p2align 4,,10
 4124      00000000 
 4125              		.p2align 3
 4126              	.L426:
 4127              		.cfi_restore 6
 4128              		.cfi_restore 12
 385:fltk-1.3.4-1/png/png.c **** 
 4129              		.loc 1 385 1 view .LVU1212
 4130 0090 C3       		ret
 4131              		.cfi_endproc
 4132              	.LFE50:
 4134              		.section	.text.png_info_init_3,"ax",@progbits
 4135              		.p2align 4
 4136              		.globl	png_info_init_3
 4138              	png_info_init_3:
 4139              	.LVL388:
 4140              	.LFB51:
 399:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = *ptr_ptr;
 4141              		.loc 1 399 1 is_stmt 1 view -0
 4142              		.cfi_startproc
 399:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = *ptr_ptr;
 4143              		.loc 1 399 1 is_stmt 0 view .LVU1214
 4144 0000 F30F1EFA 		endbr64
 400:fltk-1.3.4-1/png/png.c **** 
 4145              		.loc 1 400 4 is_stmt 1 view .LVU1215
 400:fltk-1.3.4-1/png/png.c **** 
 4146              		.loc 1 400 15 is_stmt 0 view .LVU1216
 4147 0004 4C8B07   		movq	(%rdi), %r8
 4148              	.LVL389:
 402:fltk-1.3.4-1/png/png.c **** 
 4149              		.loc 1 402 4 is_stmt 1 view .LVU1217
 404:fltk-1.3.4-1/png/png.c ****       return;
 4150              		.loc 1 404 4 view .LVU1218
 404:fltk-1.3.4-1/png/png.c ****       return;
 4151              		.loc 1 404 7 is_stmt 0 view .LVU1219
 4152 0007 4D85C0   		testq	%r8, %r8
 4153 000a 7464     		je	.L436
 407:fltk-1.3.4-1/png/png.c ****    {
 4154              		.loc 1 407 4 is_stmt 1 view .LVU1220
 399:fltk-1.3.4-1/png/png.c ****    png_inforp info_ptr = *ptr_ptr;
 4155              		.loc 1 399 1 is_stmt 0 view .LVU1221
 4156 000c 53       		pushq	%rbx
 4157              		.cfi_def_cfa_offset 16
 4158              		.cfi_offset 3, -16
 407:fltk-1.3.4-1/png/png.c ****    {
 4159              		.loc 1 407 7 view .LVU1222
 4160 000d 4881FE57 		cmpq	$343, %rsi
 4160      010000
 4161 0014 7632     		jbe	.L439
 4162              	.LVL390:
 4163              	.L431:
 418:fltk-1.3.4-1/png/png.c **** }
 4164              		.loc 1 418 4 is_stmt 1 view .LVU1223
 4165              	.LBB387:
 4166              	.LBI387:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 4167              		.loc 2 59 1 view .LVU1224
 4168              	.LBB388:
 4169              		.loc 2 71 3 view .LVU1225
 4170              		.loc 2 71 10 is_stmt 0 view .LVU1226
 4171 0016 498D7808 		leaq	8(%r8), %rdi
 4172 001a 49C70000 		movq	$0, (%r8)
 4172      000000
 4173 0021 31C0     		xorl	%eax, %eax
 4174 0023 49C78050 		movq	$0, 336(%r8)
 4174      01000000 
 4174      000000
 4175 002e 4883E7F8 		andq	$-8, %rdi
 4176 0032 4929F8   		subq	%rdi, %r8
 4177              	.LVL391:
 4178              		.loc 2 71 10 view .LVU1227
 4179 0035 418D8858 		leal	344(%r8), %ecx
 4179      010000
 4180 003c C1E903   		shrl	$3, %ecx
 4181 003f F348AB   		rep stosq
 4182              	.LVL392:
 4183              		.loc 2 71 10 view .LVU1228
 4184              	.LBE388:
 4185              	.LBE387:
 419:fltk-1.3.4-1/png/png.c **** 
 4186              		.loc 1 419 1 view .LVU1229
 4187 0042 5B       		popq	%rbx
 4188              		.cfi_remember_state
 4189              		.cfi_def_cfa_offset 8
 4190 0043 C3       		ret
 4191              	.LVL393:
 4192              		.p2align 4,,10
 4193 0044 0F1F4000 		.p2align 3
 4194              	.L439:
 4195              		.cfi_restore_state
 409:fltk-1.3.4-1/png/png.c ****       /* The following line is why this API should not be used: */
 4196              		.loc 1 409 16 view .LVU1230
 4197 0048 48C70700 		movq	$0, (%rdi)
 4197      000000
 4198 004f 4889FB   		movq	%rdi, %rbx
 409:fltk-1.3.4-1/png/png.c ****       /* The following line is why this API should not be used: */
 4199              		.loc 1 409 7 is_stmt 1 view .LVU1231
 411:fltk-1.3.4-1/png/png.c ****       info_ptr = png_voidcast(png_inforp, png_malloc_base(NULL,
 4200              		.loc 1 411 7 view .LVU1232
 4201 0052 4C89C7   		movq	%r8, %rdi
 4202              	.LVL394:
 411:fltk-1.3.4-1/png/png.c ****       info_ptr = png_voidcast(png_inforp, png_malloc_base(NULL,
 4203              		.loc 1 411 7 is_stmt 0 view .LVU1233
 4204 0055 E8000000 		call	free@PLT
 4204      00
 4205              	.LVL395:
 412:fltk-1.3.4-1/png/png.c ****          (sizeof *info_ptr)));
 4206              		.loc 1 412 7 is_stmt 1 view .LVU1234
 412:fltk-1.3.4-1/png/png.c ****          (sizeof *info_ptr)));
 4207              		.loc 1 412 18 is_stmt 0 view .LVU1235
 4208 005a BE580100 		movl	$344, %esi
 4208      00
 4209 005f 31FF     		xorl	%edi, %edi
 4210 0061 E8000000 		call	png_malloc_base@PLT
 4210      00
 4211              	.LVL396:
 414:fltk-1.3.4-1/png/png.c ****    }
 4212              		.loc 1 414 16 view .LVU1236
 4213 0066 488903   		movq	%rax, (%rbx)
 412:fltk-1.3.4-1/png/png.c ****          (sizeof *info_ptr)));
 4214              		.loc 1 412 18 view .LVU1237
 4215 0069 4989C0   		movq	%rax, %r8
 4216              	.LVL397:
 414:fltk-1.3.4-1/png/png.c ****    }
 4217              		.loc 1 414 7 is_stmt 1 view .LVU1238
 4218 006c EBA8     		jmp	.L431
 4219              	.LVL398:
 4220 006e 6690     		.p2align 4,,10
 4221              		.p2align 3
 4222              	.L436:
 4223              		.cfi_def_cfa_offset 8
 4224              		.cfi_restore 3
 414:fltk-1.3.4-1/png/png.c ****    }
 4225              		.loc 1 414 7 is_stmt 0 view .LVU1239
 4226 0070 C3       		ret
 4227              		.cfi_endproc
 4228              	.LFE51:
 4230              		.section	.rodata.png_data_freer.str1.8,"aMS",@progbits,1
 4231              		.align 8
 4232              	.LC22:
 4233 0000 556E6B6E 		.string	"Unknown freer parameter in png_data_freer"
 4233      6F776E20 
 4233      66726565 
 4233      72207061 
 4233      72616D65 
 4234              		.section	.text.png_data_freer,"ax",@progbits
 4235              		.p2align 4
 4236              		.globl	png_data_freer
 4238              	png_data_freer:
 4239              	.LVL399:
 4240              	.LFB52:
 425:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_data_freer");
 4241              		.loc 1 425 1 is_stmt 1 view -0
 4242              		.cfi_startproc
 425:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_data_freer");
 4243              		.loc 1 425 1 is_stmt 0 view .LVU1241
 4244 0000 F30F1EFA 		endbr64
 426:fltk-1.3.4-1/png/png.c **** 
 4245              		.loc 1 426 4 is_stmt 1 view .LVU1242
 428:fltk-1.3.4-1/png/png.c ****       return;
 4246              		.loc 1 428 4 view .LVU1243
 428:fltk-1.3.4-1/png/png.c ****       return;
 4247              		.loc 1 428 7 is_stmt 0 view .LVU1244
 4248 0004 4885FF   		testq	%rdi, %rdi
 4249 0007 741F     		je	.L440
 4250 0009 4885F6   		testq	%rsi, %rsi
 4251 000c 741A     		je	.L440
 431:fltk-1.3.4-1/png/png.c ****       info_ptr->free_me |= mask;
 4252              		.loc 1 431 4 is_stmt 1 view .LVU1245
 431:fltk-1.3.4-1/png/png.c ****       info_ptr->free_me |= mask;
 4253              		.loc 1 431 7 is_stmt 0 view .LVU1246
 4254 000e 83FA01   		cmpl	$1, %edx
 4255 0011 741D     		je	.L446
 434:fltk-1.3.4-1/png/png.c ****       info_ptr->free_me &= ~mask;
 4256              		.loc 1 434 9 is_stmt 1 view .LVU1247
 434:fltk-1.3.4-1/png/png.c ****       info_ptr->free_me &= ~mask;
 4257              		.loc 1 434 12 is_stmt 0 view .LVU1248
 4258 0013 83FA02   		cmpl	$2, %edx
 4259 0016 751F     		jne	.L443
 435:fltk-1.3.4-1/png/png.c **** 
 4260              		.loc 1 435 7 is_stmt 1 view .LVU1249
 435:fltk-1.3.4-1/png/png.c **** 
 4261              		.loc 1 435 28 is_stmt 0 view .LVU1250
 4262 0018 F7D1     		notl	%ecx
 4263              	.LVL400:
 435:fltk-1.3.4-1/png/png.c **** 
 4264              		.loc 1 435 25 view .LVU1251
 4265 001a 218E1C01 		andl	%ecx, 284(%rsi)
 4265      0000
 4266 0020 C3       		ret
 4267              	.LVL401:
 4268              		.p2align 4,,10
 4269 0021 0F1F8000 		.p2align 3
 4269      000000
 4270              	.L440:
 435:fltk-1.3.4-1/png/png.c **** 
 4271              		.loc 1 435 25 view .LVU1252
 4272 0028 C3       		ret
 4273 0029 0F1F8000 		.p2align 4,,10
 4273      000000
 4274              		.p2align 3
 4275              	.L446:
 432:fltk-1.3.4-1/png/png.c **** 
 4276              		.loc 1 432 7 is_stmt 1 view .LVU1253
 432:fltk-1.3.4-1/png/png.c **** 
 4277              		.loc 1 432 25 is_stmt 0 view .LVU1254
 4278 0030 098E1C01 		orl	%ecx, 284(%rsi)
 4278      0000
 4279 0036 C3       		ret
 4280              	.L443:
 438:fltk-1.3.4-1/png/png.c **** }
 4281              		.loc 1 438 7 is_stmt 1 view .LVU1255
 425:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_data_freer");
 4282              		.loc 1 425 1 is_stmt 0 view .LVU1256
 4283 0037 50       		pushq	%rax
 4284              		.cfi_def_cfa_offset 16
 438:fltk-1.3.4-1/png/png.c **** }
 4285              		.loc 1 438 7 view .LVU1257
 4286 0038 488D3500 		leaq	.LC22(%rip), %rsi
 4286      000000
 4287              	.LVL402:
 438:fltk-1.3.4-1/png/png.c **** }
 4288              		.loc 1 438 7 view .LVU1258
 4289 003f E8000000 		call	png_error@PLT
 4289      00
 4290              	.LVL403:
 438:fltk-1.3.4-1/png/png.c **** }
 4291              		.loc 1 438 7 view .LVU1259
 4292              		.cfi_endproc
 4293              	.LFE52:
 4295              		.section	.text.png_free_data,"ax",@progbits
 4296              		.p2align 4
 4297              		.globl	png_free_data
 4299              	png_free_data:
 4300              	.LVL404:
 4301              	.LFB53:
 444:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_free_data");
 4302              		.loc 1 444 1 is_stmt 1 view -0
 4303              		.cfi_startproc
 444:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_free_data");
 4304              		.loc 1 444 1 is_stmt 0 view .LVU1261
 4305 0000 F30F1EFA 		endbr64
 445:fltk-1.3.4-1/png/png.c **** 
 4306              		.loc 1 445 4 is_stmt 1 view .LVU1262
 447:fltk-1.3.4-1/png/png.c ****       return;
 4307              		.loc 1 447 4 view .LVU1263
 447:fltk-1.3.4-1/png/png.c ****       return;
 4308              		.loc 1 447 7 is_stmt 0 view .LVU1264
 4309 0004 4885FF   		testq	%rdi, %rdi
 4310 0007 740F     		je	.L447
 4311 0009 4885F6   		testq	%rsi, %rsi
 4312 000c 740A     		je	.L447
 4313 000e E9000000 		jmp	png_free_data.part.0
 4313      00
 4314              	.LVL405:
 4315              		.p2align 4,,10
 4316 0013 0F1F4400 		.p2align 3
 4316      00
 4317              	.L447:
 633:fltk-1.3.4-1/png/png.c **** #endif /* READ || WRITE */
 4318              		.loc 1 633 1 view .LVU1265
 4319 0018 C3       		ret
 4320              		.cfi_endproc
 4321              	.LFE53:
 4323              		.section	.text.png_get_io_ptr,"ax",@progbits
 4324              		.p2align 4
 4325              		.globl	png_get_io_ptr
 4327              	png_get_io_ptr:
 4328              	.LVL406:
 4329              	.LFB54:
 642:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 4330              		.loc 1 642 1 is_stmt 1 view -0
 4331              		.cfi_startproc
 642:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 4332              		.loc 1 642 1 is_stmt 0 view .LVU1267
 4333 0000 F30F1EFA 		endbr64
 643:fltk-1.3.4-1/png/png.c ****       return (NULL);
 4334              		.loc 1 643 4 is_stmt 1 view .LVU1268
 643:fltk-1.3.4-1/png/png.c ****       return (NULL);
 4335              		.loc 1 643 7 is_stmt 0 view .LVU1269
 4336 0004 4885FF   		testq	%rdi, %rdi
 4337 0007 740F     		je	.L451
 646:fltk-1.3.4-1/png/png.c **** }
 4338              		.loc 1 646 4 is_stmt 1 view .LVU1270
 646:fltk-1.3.4-1/png/png.c **** }
 4339              		.loc 1 646 19 is_stmt 0 view .LVU1271
 4340 0009 488B8708 		movq	264(%rdi), %rax
 4340      010000
 4341 0010 C3       		ret
 4342              		.p2align 4,,10
 4343 0011 0F1F8000 		.p2align 3
 4343      000000
 4344              	.L451:
 644:fltk-1.3.4-1/png/png.c **** 
 4345              		.loc 1 644 14 view .LVU1272
 4346 0018 31C0     		xorl	%eax, %eax
 647:fltk-1.3.4-1/png/png.c **** 
 4347              		.loc 1 647 1 view .LVU1273
 4348 001a C3       		ret
 4349              		.cfi_endproc
 4350              	.LFE54:
 4352              		.section	.text.png_init_io,"ax",@progbits
 4353              		.p2align 4
 4354              		.globl	png_init_io
 4356              	png_init_io:
 4357              	.LVL407:
 4358              	.LFB55:
 659:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_init_io");
 4359              		.loc 1 659 1 is_stmt 1 view -0
 4360              		.cfi_startproc
 659:fltk-1.3.4-1/png/png.c ****    png_debug(1, "in png_init_io");
 4361              		.loc 1 659 1 is_stmt 0 view .LVU1275
 4362 0000 F30F1EFA 		endbr64
 660:fltk-1.3.4-1/png/png.c **** 
 4363              		.loc 1 660 4 is_stmt 1 view .LVU1276
 662:fltk-1.3.4-1/png/png.c ****       return;
 4364              		.loc 1 662 4 view .LVU1277
 662:fltk-1.3.4-1/png/png.c ****       return;
 4365              		.loc 1 662 7 is_stmt 0 view .LVU1278
 4366 0004 4885FF   		testq	%rdi, %rdi
 4367 0007 7407     		je	.L452
 665:fltk-1.3.4-1/png/png.c **** }
 4368              		.loc 1 665 4 is_stmt 1 view .LVU1279
 665:fltk-1.3.4-1/png/png.c **** }
 4369              		.loc 1 665 20 is_stmt 0 view .LVU1280
 4370 0009 4889B708 		movq	%rsi, 264(%rdi)
 4370      010000
 4371              	.L452:
 666:fltk-1.3.4-1/png/png.c **** #  endif
 4372              		.loc 1 666 1 view .LVU1281
 4373 0010 C3       		ret
 4374              		.cfi_endproc
 4375              	.LFE55:
 4377              		.section	.text.png_save_int_32,"ax",@progbits
 4378              		.p2align 4
 4379              		.globl	png_save_int_32
 4381              	png_save_int_32:
 4382              	.LVL408:
 4383              	.LFB56:
 678:fltk-1.3.4-1/png/png.c ****    buf[0] = (png_byte)((i >> 24) & 0xff);
 4384              		.loc 1 678 1 is_stmt 1 view -0
 4385              		.cfi_startproc
 678:fltk-1.3.4-1/png/png.c ****    buf[0] = (png_byte)((i >> 24) & 0xff);
 4386              		.loc 1 678 1 is_stmt 0 view .LVU1283
 4387 0000 F30F1EFA 		endbr64
 679:fltk-1.3.4-1/png/png.c ****    buf[1] = (png_byte)((i >> 16) & 0xff);
 4388              		.loc 1 679 4 is_stmt 1 view .LVU1284
 680:fltk-1.3.4-1/png/png.c ****    buf[2] = (png_byte)((i >> 8) & 0xff);
 4389              		.loc 1 680 4 view .LVU1285
 681:fltk-1.3.4-1/png/png.c ****    buf[3] = (png_byte)(i & 0xff);
 4390              		.loc 1 681 4 view .LVU1286
 682:fltk-1.3.4-1/png/png.c **** }
 4391              		.loc 1 682 4 view .LVU1287
 4392 0004 0FCE     		bswap	%esi
 4393              	.LVL409:
 679:fltk-1.3.4-1/png/png.c ****    buf[1] = (png_byte)((i >> 16) & 0xff);
 4394              		.loc 1 679 11 is_stmt 0 view .LVU1288
 4395 0006 8937     		movl	%esi, (%rdi)
 683:fltk-1.3.4-1/png/png.c **** #endif
 4396              		.loc 1 683 1 view .LVU1289
 4397 0008 C3       		ret
 4398              		.cfi_endproc
 4399              	.LFE56:
 4401              		.section	.rodata.png_convert_to_rfc1123_buffer.str1.1,"aMS",@progbits,1
 4402              	.LC23:
 4403 0000 202B3030 		.string	" +0000"
 4403      303000
 4404              		.section	.text.png_convert_to_rfc1123_buffer,"ax",@progbits
 4405              		.p2align 4
 4406              		.globl	png_convert_to_rfc1123_buffer
 4408              	png_convert_to_rfc1123_buffer:
 4409              	.LVL410:
 4410              	.LFB57:
 692:fltk-1.3.4-1/png/png.c ****    static PNG_CONST char short_months[12][4] =
 4411              		.loc 1 692 1 is_stmt 1 view -0
 4412              		.cfi_startproc
 692:fltk-1.3.4-1/png/png.c ****    static PNG_CONST char short_months[12][4] =
 4413              		.loc 1 692 1 is_stmt 0 view .LVU1291
 4414 0000 F30F1EFA 		endbr64
 4415 0004 4156     		pushq	%r14
 4416              		.cfi_def_cfa_offset 16
 4417              		.cfi_offset 14, -16
 4418 0006 4155     		pushq	%r13
 4419              		.cfi_def_cfa_offset 24
 4420              		.cfi_offset 13, -24
 4421 0008 4154     		pushq	%r12
 4422              		.cfi_def_cfa_offset 32
 4423              		.cfi_offset 12, -32
 4424 000a 55       		pushq	%rbp
 4425              		.cfi_def_cfa_offset 40
 4426              		.cfi_offset 6, -40
 4427 000b 53       		pushq	%rbx
 4428              		.cfi_def_cfa_offset 48
 4429              		.cfi_offset 3, -48
 4430 000c 4883EC10 		subq	$16, %rsp
 4431              		.cfi_def_cfa_offset 64
 692:fltk-1.3.4-1/png/png.c ****    static PNG_CONST char short_months[12][4] =
 4432              		.loc 1 692 1 view .LVU1292
 4433 0010 64488B04 		movq	%fs:40, %rax
 4433      25280000 
 4433      00
 4434 0019 48894424 		movq	%rax, 8(%rsp)
 4434      08
 4435 001e 31C0     		xorl	%eax, %eax
 693:fltk-1.3.4-1/png/png.c ****         {"Jan", "Feb", "Mar", "Apr", "May", "Jun",
 4436              		.loc 1 693 4 is_stmt 1 view .LVU1293
 697:fltk-1.3.4-1/png/png.c ****       return 0;
 4437              		.loc 1 697 4 view .LVU1294
 697:fltk-1.3.4-1/png/png.c ****       return 0;
 4438              		.loc 1 697 7 is_stmt 0 view .LVU1295
 4439 0020 4885FF   		testq	%rdi, %rdi
 4440 0023 0F84C701 		je	.L466
 4440      0000
 698:fltk-1.3.4-1/png/png.c **** 
 4441              		.loc 1 698 14 view .LVU1296
 4442 0029 4531C0   		xorl	%r8d, %r8d
 700:fltk-1.3.4-1/png/png.c ****        ptime->month == 0    ||  ptime->month > 12  ||
 4443              		.loc 1 700 7 view .LVU1297
 4444 002c 66813E0F 		cmpw	$9999, (%rsi)
 4444      27
 4445 0031 4889F3   		movq	%rsi, %rbx
 700:fltk-1.3.4-1/png/png.c ****        ptime->month == 0    ||  ptime->month > 12  ||
 4446              		.loc 1 700 4 is_stmt 1 view .LVU1298
 700:fltk-1.3.4-1/png/png.c ****        ptime->month == 0    ||  ptime->month > 12  ||
 4447              		.loc 1 700 7 is_stmt 0 view .LVU1299
 4448 0034 770B     		ja	.L458
 701:fltk-1.3.4-1/png/png.c ****        ptime->day   == 0    ||  ptime->day   > 31  ||
 4449              		.loc 1 701 29 discriminator 1 view .LVU1300
 4450 0036 0FB64602 		movzbl	2(%rsi), %eax
 4451 003a 83E801   		subl	$1, %eax
 4452 003d 3C0B     		cmpb	$11, %al
 4453 003f 7627     		jbe	.L474
 4454              	.LVL411:
 4455              	.L458:
 735:fltk-1.3.4-1/png/png.c **** 
 4456              		.loc 1 735 1 view .LVU1301
 4457 0041 488B4424 		movq	8(%rsp), %rax
 4457      08
 4458 0046 64483304 		xorq	%fs:40, %rax
 4458      25280000 
 4458      00
 4459 004f 0F85A301 		jne	.L475
 4459      0000
 4460 0055 4883C410 		addq	$16, %rsp
 4461              		.cfi_remember_state
 4462              		.cfi_def_cfa_offset 48
 4463 0059 4489C0   		movl	%r8d, %eax
 4464 005c 5B       		popq	%rbx
 4465              		.cfi_def_cfa_offset 40
 4466 005d 5D       		popq	%rbp
 4467              		.cfi_def_cfa_offset 32
 4468 005e 415C     		popq	%r12
 4469              		.cfi_def_cfa_offset 24
 4470 0060 415D     		popq	%r13
 4471              		.cfi_def_cfa_offset 16
 4472 0062 415E     		popq	%r14
 4473              		.cfi_def_cfa_offset 8
 4474 0064 C3       		ret
 4475              	.LVL412:
 4476              		.p2align 4,,10
 4477 0065 0F1F00   		.p2align 3
 4478              	.L474:
 4479              		.cfi_restore_state
 702:fltk-1.3.4-1/png/png.c ****        ptime->hour  > 23    ||  ptime->minute > 59 ||
 4480              		.loc 1 702 13 discriminator 1 view .LVU1302
 4481 0068 0FB64E03 		movzbl	3(%rsi), %ecx
 702:fltk-1.3.4-1/png/png.c ****        ptime->hour  > 23    ||  ptime->minute > 59 ||
 4482              		.loc 1 702 29 discriminator 1 view .LVU1303
 4483 006c 8D41FF   		leal	-1(%rcx), %eax
 4484 006f 3C1E     		cmpb	$30, %al
 4485 0071 77CE     		ja	.L458
 702:fltk-1.3.4-1/png/png.c ****        ptime->hour  > 23    ||  ptime->minute > 59 ||
 4486              		.loc 1 702 52 discriminator 1 view .LVU1304
 4487 0073 807E0417 		cmpb	$23, 4(%rsi)
 4488 0077 77C8     		ja	.L458
 703:fltk-1.3.4-1/png/png.c ****        ptime->second > 60)
 4489              		.loc 1 703 29 view .LVU1305
 4490 0079 807E053B 		cmpb	$59, 5(%rsi)
 4491 007d 77C2     		ja	.L458
 703:fltk-1.3.4-1/png/png.c ****        ptime->second > 60)
 4492              		.loc 1 703 52 discriminator 1 view .LVU1306
 4493 007f 807E063C 		cmpb	$60, 6(%rsi)
 4494 0083 77BC     		ja	.L458
 4495              	.LBB389:
 716:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 4496              		.loc 1 716 7 view .LVU1307
 4497 0085 4C8D6C24 		leaq	3(%rsp), %r13
 4497      03
 4498 008a 4C8D7424 		leaq	8(%rsp), %r14
 4498      08
 4499 008f 4889FD   		movq	%rdi, %rbp
 708:fltk-1.3.4-1/png/png.c ****       char number_buf[5]; /* enough for a four-digit year */
 4500              		.loc 1 708 7 is_stmt 1 view .LVU1308
 4501              	.LVL413:
 709:fltk-1.3.4-1/png/png.c **** 
 4502              		.loc 1 709 7 view .LVU1309
 716:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 4503              		.loc 1 716 7 view .LVU1310
 4504 0092 BA010000 		movl	$1, %edx
 4504      00
 4505 0097 4C89F6   		movq	%r14, %rsi
 4506 009a 4C89EF   		movq	%r13, %rdi
 4507              	.LVL414:
 716:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 4508              		.loc 1 716 7 is_stmt 0 view .LVU1311
 4509 009d E8000000 		call	png_format_number@PLT
 4509      00
 4510              	.LVL415:
 4511 00a2 31D2     		xorl	%edx, %edx
 4512 00a4 BE1D0000 		movl	$29, %esi
 4512      00
 4513 00a9 4889EF   		movq	%rbp, %rdi
 4514 00ac 4889C1   		movq	%rax, %rcx
 4515 00af E8000000 		call	png_safecat@PLT
 4515      00
 4516              	.LVL416:
 4517 00b4 4889C2   		movq	%rax, %rdx
 4518              	.LVL417:
 717:fltk-1.3.4-1/png/png.c ****       APPEND_STRING(short_months[(ptime->month - 1)]);
 4519              		.loc 1 717 7 is_stmt 1 view .LVU1312
 4520 00b7 4883F81B 		cmpq	$27, %rax
 4521 00bb 7709     		ja	.L460
 717:fltk-1.3.4-1/png/png.c ****       APPEND_STRING(short_months[(ptime->month - 1)]);
 4522              		.loc 1 717 7 discriminator 1 view .LVU1313
 4523              	.LVL418:
 717:fltk-1.3.4-1/png/png.c ****       APPEND_STRING(short_months[(ptime->month - 1)]);
 4524              		.loc 1 717 7 is_stmt 0 discriminator 1 view .LVU1314
 4525 00bd C6440500 		movb	$32, 0(%rbp,%rax)
 4525      20
 4526 00c2 4883C201 		addq	$1, %rdx
 4527              	.LVL419:
 4528              	.L460:
 718:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 4529              		.loc 1 718 7 is_stmt 1 view .LVU1315
 4530 00c6 0FB64302 		movzbl	2(%rbx), %eax
 4531 00ca 488D0D00 		leaq	short_months.6917(%rip), %rcx
 4531      000000
 4532 00d1 BE1D0000 		movl	$29, %esi
 4532      00
 4533 00d6 4889EF   		movq	%rbp, %rdi
 4534 00d9 83E801   		subl	$1, %eax
 4535 00dc 4898     		cltq
 4536 00de 488D0C81 		leaq	(%rcx,%rax,4), %rcx
 4537 00e2 E8000000 		call	png_safecat@PLT
 4537      00
 4538              	.LVL420:
 718:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 4539              		.loc 1 718 7 is_stmt 0 view .LVU1316
 4540 00e7 4989C4   		movq	%rax, %r12
 4541              	.LVL421:
 719:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_u, ptime->year);
 4542              		.loc 1 719 7 is_stmt 1 view .LVU1317
 4543 00ea 4883F81B 		cmpq	$27, %rax
 4544 00ee 7709     		ja	.L461
 719:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_u, ptime->year);
 4545              		.loc 1 719 7 discriminator 1 view .LVU1318
 4546              	.LVL422:
 719:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_u, ptime->year);
 4547              		.loc 1 719 7 is_stmt 0 discriminator 1 view .LVU1319
 4548 00f0 C6440500 		movb	$32, 0(%rbp,%rax)
 4548      20
 4549 00f5 4983C401 		addq	$1, %r12
 4550              	.LVL423:
 4551              	.L461:
 720:fltk-1.3.4-1/png/png.c ****       APPEND(' ');
 4552              		.loc 1 720 7 is_stmt 1 view .LVU1320
 4553 00f9 0FB70B   		movzwl	(%rbx), %ecx
 4554 00fc BA010000 		movl	$1, %edx
 4554      00
 4555 0101 4C89F6   		movq	%r14, %rsi
 4556 0104 4C89EF   		movq	%r13, %rdi
 4557 0107 E8000000 		call	png_format_number@PLT
 4557      00
 4558              	.LVL424:
 4559 010c 4C89E2   		movq	%r12, %rdx
 4560 010f BE1D0000 		movl	$29, %esi
 4560      00
 4561 0114 4889EF   		movq	%rbp, %rdi
 4562 0117 4889C1   		movq	%rax, %rcx
 4563 011a E8000000 		call	png_safecat@PLT
 4563      00
 4564              	.LVL425:
 4565 011f 4989C4   		movq	%rax, %r12
 4566              	.LVL426:
 721:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->hour);
 4567              		.loc 1 721 7 view .LVU1321
 4568 0122 4883F81B 		cmpq	$27, %rax
 4569 0126 7709     		ja	.L462
 721:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->hour);
 4570              		.loc 1 721 7 discriminator 1 view .LVU1322
 4571              	.LVL427:
 721:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->hour);
 4572              		.loc 1 721 7 is_stmt 0 discriminator 1 view .LVU1323
 4573 0128 C6440500 		movb	$32, 0(%rbp,%rax)
 4573      20
 4574 012d 4983C401 		addq	$1, %r12
 4575              	.LVL428:
 4576              	.L462:
 722:fltk-1.3.4-1/png/png.c ****       APPEND(':');
 4577              		.loc 1 722 7 is_stmt 1 view .LVU1324
 4578 0131 0FB64B04 		movzbl	4(%rbx), %ecx
 4579 0135 BA020000 		movl	$2, %edx
 4579      00
 4580 013a 4C89F6   		movq	%r14, %rsi
 4581 013d 4C89EF   		movq	%r13, %rdi
 4582 0140 E8000000 		call	png_format_number@PLT
 4582      00
 4583              	.LVL429:
 4584 0145 4C89E2   		movq	%r12, %rdx
 4585 0148 BE1D0000 		movl	$29, %esi
 4585      00
 4586 014d 4889EF   		movq	%rbp, %rdi
 4587 0150 4889C1   		movq	%rax, %rcx
 4588 0153 E8000000 		call	png_safecat@PLT
 4588      00
 4589              	.LVL430:
 4590 0158 4989C4   		movq	%rax, %r12
 4591              	.LVL431:
 723:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->minute);
 4592              		.loc 1 723 7 view .LVU1325
 4593 015b 4883F81B 		cmpq	$27, %rax
 4594 015f 7709     		ja	.L463
 723:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->minute);
 4595              		.loc 1 723 7 discriminator 1 view .LVU1326
 4596              	.LVL432:
 723:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->minute);
 4597              		.loc 1 723 7 is_stmt 0 discriminator 1 view .LVU1327
 4598 0161 C6440500 		movb	$58, 0(%rbp,%rax)
 4598      3A
 4599 0166 4983C401 		addq	$1, %r12
 4600              	.LVL433:
 4601              	.L463:
 724:fltk-1.3.4-1/png/png.c ****       APPEND(':');
 4602              		.loc 1 724 7 is_stmt 1 view .LVU1328
 4603 016a 0FB64B05 		movzbl	5(%rbx), %ecx
 4604 016e BA020000 		movl	$2, %edx
 4604      00
 4605 0173 4C89F6   		movq	%r14, %rsi
 4606 0176 4C89EF   		movq	%r13, %rdi
 4607 0179 E8000000 		call	png_format_number@PLT
 4607      00
 4608              	.LVL434:
 4609 017e 4C89E2   		movq	%r12, %rdx
 4610 0181 BE1D0000 		movl	$29, %esi
 4610      00
 4611 0186 4889EF   		movq	%rbp, %rdi
 4612 0189 4889C1   		movq	%rax, %rcx
 4613 018c E8000000 		call	png_safecat@PLT
 4613      00
 4614              	.LVL435:
 4615 0191 4989C4   		movq	%rax, %r12
 4616              	.LVL436:
 725:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->second);
 4617              		.loc 1 725 7 view .LVU1329
 4618 0194 4883F81B 		cmpq	$27, %rax
 4619 0198 7709     		ja	.L464
 725:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->second);
 4620              		.loc 1 725 7 discriminator 1 view .LVU1330
 4621              	.LVL437:
 725:fltk-1.3.4-1/png/png.c ****       APPEND_NUMBER(PNG_NUMBER_FORMAT_02u, (unsigned)ptime->second);
 4622              		.loc 1 725 7 is_stmt 0 discriminator 1 view .LVU1331
 4623 019a C6440500 		movb	$58, 0(%rbp,%rax)
 4623      3A
 4624 019f 4983C401 		addq	$1, %r12
 4625              	.LVL438:
 4626              	.L464:
 726:fltk-1.3.4-1/png/png.c ****       APPEND_STRING(" +0000"); /* This reliably terminates the buffer */
 4627              		.loc 1 726 7 is_stmt 1 view .LVU1332
 4628 01a3 0FB64B06 		movzbl	6(%rbx), %ecx
 4629 01a7 BA020000 		movl	$2, %edx
 4629      00
 4630 01ac 4C89F6   		movq	%r14, %rsi
 4631 01af 4C89EF   		movq	%r13, %rdi
 4632 01b2 E8000000 		call	png_format_number@PLT
 4632      00
 4633              	.LVL439:
 4634 01b7 4C89E2   		movq	%r12, %rdx
 4635 01ba BE1D0000 		movl	$29, %esi
 4635      00
 4636 01bf 4889EF   		movq	%rbp, %rdi
 4637 01c2 4889C1   		movq	%rax, %rcx
 4638 01c5 E8000000 		call	png_safecat@PLT
 4638      00
 4639              	.LVL440:
 727:fltk-1.3.4-1/png/png.c **** 
 4640              		.loc 1 727 7 is_stmt 0 view .LVU1333
 4641 01ca 488D0D00 		leaq	.LC23(%rip), %rcx
 4641      000000
 4642 01d1 BE1D0000 		movl	$29, %esi
 4642      00
 4643 01d6 4889EF   		movq	%rbp, %rdi
 726:fltk-1.3.4-1/png/png.c ****       APPEND_STRING(" +0000"); /* This reliably terminates the buffer */
 4644              		.loc 1 726 7 view .LVU1334
 4645 01d9 4889C2   		movq	%rax, %rdx
 4646              	.LVL441:
 727:fltk-1.3.4-1/png/png.c **** 
 4647              		.loc 1 727 7 is_stmt 1 view .LVU1335
 4648 01dc E8000000 		call	png_safecat@PLT
 4648      00
 4649              	.LVL442:
 727:fltk-1.3.4-1/png/png.c **** 
 4650              		.loc 1 727 7 is_stmt 0 view .LVU1336
 4651              	.LBE389:
 734:fltk-1.3.4-1/png/png.c **** }
 4652              		.loc 1 734 4 is_stmt 1 view .LVU1337
 734:fltk-1.3.4-1/png/png.c **** }
 4653              		.loc 1 734 11 is_stmt 0 view .LVU1338
 4654 01e1 41B80100 		movl	$1, %r8d
 4654      0000
 4655 01e7 E955FEFF 		jmp	.L458
 4655      FF
 4656              	.LVL443:
 4657 01ec 0F1F4000 		.p2align 4,,10
 4658              		.p2align 3
 4659              	.L466:
 698:fltk-1.3.4-1/png/png.c **** 
 4660              		.loc 1 698 14 view .LVU1339
 4661 01f0 4531C0   		xorl	%r8d, %r8d
 4662 01f3 E949FEFF 		jmp	.L458
 4662      FF
 4663              	.LVL444:
 4664              	.L475:
 735:fltk-1.3.4-1/png/png.c **** 
 4665              		.loc 1 735 1 view .LVU1340
 4666 01f8 E8000000 		call	__stack_chk_fail@PLT
 4666      00
 4667              	.LVL445:
 4668              		.cfi_endproc
 4669              	.LFE57:
 4671              		.section	.rodata.png_convert_to_rfc1123.str1.1,"aMS",@progbits,1
 4672              	.LC24:
 4673 0000 49676E6F 		.string	"Ignoring invalid time value"
 4673      72696E67 
 4673      20696E76 
 4673      616C6964 
 4673      2074696D 
 4674              		.section	.text.png_convert_to_rfc1123,"ax",@progbits
 4675              		.p2align 4
 4676              		.globl	png_convert_to_rfc1123
 4678              	png_convert_to_rfc1123:
 4679              	.LVL446:
 4680              	.LFB58:
 745:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL)
 4681              		.loc 1 745 1 is_stmt 1 view -0
 4682              		.cfi_startproc
 745:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL)
 4683              		.loc 1 745 1 is_stmt 0 view .LVU1342
 4684 0000 F30F1EFA 		endbr64
 746:fltk-1.3.4-1/png/png.c ****    {
 4685              		.loc 1 746 4 is_stmt 1 view .LVU1343
 745:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL)
 4686              		.loc 1 745 1 is_stmt 0 view .LVU1344
 4687 0004 4154     		pushq	%r12
 4688              		.cfi_def_cfa_offset 16
 4689              		.cfi_offset 12, -16
 756:fltk-1.3.4-1/png/png.c **** }
 4690              		.loc 1 756 11 view .LVU1345
 4691 0006 4531E4   		xorl	%r12d, %r12d
 745:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL)
 4692              		.loc 1 745 1 view .LVU1346
 4693 0009 55       		pushq	%rbp
 4694              		.cfi_def_cfa_offset 24
 4695              		.cfi_offset 6, -24
 4696 000a 4883EC08 		subq	$8, %rsp
 4697              		.cfi_def_cfa_offset 32
 746:fltk-1.3.4-1/png/png.c ****    {
 4698              		.loc 1 746 7 view .LVU1347
 4699 000e 4885FF   		testq	%rdi, %rdi
 4700 0011 7416     		je	.L476
 749:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Ignoring invalid time value");
 4701              		.loc 1 749 48 view .LVU1348
 4702 0013 4C8DA7C9 		leaq	969(%rdi), %r12
 4702      030000
 4703 001a 4889FD   		movq	%rdi, %rbp
 749:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Ignoring invalid time value");
 4704              		.loc 1 749 7 is_stmt 1 view .LVU1349
 749:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Ignoring invalid time value");
 4705              		.loc 1 749 11 is_stmt 0 view .LVU1350
 4706 001d 4C89E7   		movq	%r12, %rdi
 4707              	.LVL447:
 749:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Ignoring invalid time value");
 4708              		.loc 1 749 11 view .LVU1351
 4709 0020 E8000000 		call	png_convert_to_rfc1123_buffer
 4709      00
 4710              	.LVL448:
 749:fltk-1.3.4-1/png/png.c ****          png_warning(png_ptr, "Ignoring invalid time value");
 4711              		.loc 1 749 10 view .LVU1352
 4712 0025 85C0     		testl	%eax, %eax
 4713 0027 740F     		je	.L481
 4714              	.LVL449:
 4715              	.L476:
 757:fltk-1.3.4-1/png/png.c **** #     endif
 4716              		.loc 1 757 1 view .LVU1353
 4717 0029 4883C408 		addq	$8, %rsp
 4718              		.cfi_remember_state
 4719              		.cfi_def_cfa_offset 24
 4720 002d 4C89E0   		movq	%r12, %rax
 4721 0030 5D       		popq	%rbp
 4722              		.cfi_def_cfa_offset 16
 4723 0031 415C     		popq	%r12
 4724              		.cfi_def_cfa_offset 8
 4725 0033 C3       		ret
 4726              	.LVL450:
 4727              		.p2align 4,,10
 4728 0034 0F1F4000 		.p2align 3
 4729              	.L481:
 4730              		.cfi_restore_state
 750:fltk-1.3.4-1/png/png.c **** 
 4731              		.loc 1 750 10 is_stmt 1 view .LVU1354
 4732 0038 4889EF   		movq	%rbp, %rdi
 4733 003b 488D3500 		leaq	.LC24(%rip), %rsi
 4733      000000
 756:fltk-1.3.4-1/png/png.c **** }
 4734              		.loc 1 756 11 is_stmt 0 view .LVU1355
 4735 0042 4531E4   		xorl	%r12d, %r12d
 750:fltk-1.3.4-1/png/png.c **** 
 4736              		.loc 1 750 10 view .LVU1356
 4737 0045 E8000000 		call	png_warning@PLT
 4737      00
 4738              	.LVL451:
 757:fltk-1.3.4-1/png/png.c **** #     endif
 4739              		.loc 1 757 1 view .LVU1357
 4740 004a 4883C408 		addq	$8, %rsp
 4741              		.cfi_def_cfa_offset 24
 4742 004e 4C89E0   		movq	%r12, %rax
 4743 0051 5D       		popq	%rbp
 4744              		.cfi_def_cfa_offset 16
 4745              	.LVL452:
 757:fltk-1.3.4-1/png/png.c **** #     endif
 4746              		.loc 1 757 1 view .LVU1358
 4747 0052 415C     		popq	%r12
 4748              		.cfi_def_cfa_offset 8
 4749 0054 C3       		ret
 4750              		.cfi_endproc
 4751              	.LFE58:
 4753              		.section	.rodata.png_get_copyright.str1.8,"aMS",@progbits,1
 4754              		.align 8
 4755              	.LC25:
 4756 0000 0A6C6962 		.string	"\nlibpng version 1.6.16 - December 22, 2014\nCopyright (c) 1998-2014 Glenn Randers-Pehrso
 4756      706E6720 
 4756      76657273 
 4756      696F6E20 
 4756      312E362E 
 4757              		.section	.text.png_get_copyright,"ax",@progbits
 4758              		.p2align 4
 4759              		.globl	png_get_copyright
 4761              	png_get_copyright:
 4762              	.LVL453:
 4763              	.LFB59:
 765:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
 4764              		.loc 1 765 1 is_stmt 1 view -0
 4765              		.cfi_startproc
 765:fltk-1.3.4-1/png/png.c ****    PNG_UNUSED(png_ptr)  /* Silence compiler warning about unused png_ptr */
 4766              		.loc 1 765 1 is_stmt 0 view .LVU1360
 4767 0000 F30F1EFA 		endbr64
 766:fltk-1.3.4-1/png/png.c **** #ifdef PNG_STRING_COPYRIGHT
 4768              		.loc 1 766 4 is_stmt 1 view .LVU1361
 771:fltk-1.3.4-1/png/png.c ****      "libpng version 1.6.16 - December 22, 2014" PNG_STRING_NEWLINE \
 4769              		.loc 1 771 4 view .LVU1362
 784:fltk-1.3.4-1/png/png.c **** 
 4770              		.loc 1 784 1 is_stmt 0 view .LVU1363
 4771 0004 488D0500 		leaq	.LC25(%rip), %rax
 4771      000000
 4772 000b C3       		ret
 4773              		.cfi_endproc
 4774              	.LFE59:
 4776              		.section	.text.png_get_libpng_ver,"ax",@progbits
 4777              		.p2align 4
 4778              		.globl	png_get_libpng_ver
 4780              	png_get_libpng_ver:
 4781              	.LFB136:
 4782              		.cfi_startproc
 4783 0000 F30F1EFA 		endbr64
 4784 0004 488D0500 		leaq	.LC19(%rip), %rax
 4784      000000
 4785 000b C3       		ret
 4786              		.cfi_endproc
 4787              	.LFE136:
 4789              		.section	.text.png_get_header_ver,"ax",@progbits
 4790              		.p2align 4
 4791              		.globl	png_get_header_ver
 4793              	png_get_header_ver:
 4794              	.LVL454:
 4795              	.LFB61:
 803:fltk-1.3.4-1/png/png.c ****    /* Version of *.h files used when building libpng */
 4796              		.loc 1 803 1 is_stmt 1 view -0
 4797              		.cfi_startproc
 803:fltk-1.3.4-1/png/png.c ****    /* Version of *.h files used when building libpng */
 4798              		.loc 1 803 1 is_stmt 0 view .LVU1365
 4799 0000 F30F1EFA 		endbr64
 805:fltk-1.3.4-1/png/png.c ****    return PNG_LIBPNG_VER_STRING;
 4800              		.loc 1 805 4 is_stmt 1 view .LVU1366
 806:fltk-1.3.4-1/png/png.c **** }
 4801              		.loc 1 806 4 view .LVU1367
 807:fltk-1.3.4-1/png/png.c **** 
 4802              		.loc 1 807 1 is_stmt 0 view .LVU1368
 4803 0004 488D0500 		leaq	.LC19(%rip), %rax
 4803      000000
 4804 000b C3       		ret
 4805              		.cfi_endproc
 4806              	.LFE61:
 4808              		.section	.rodata.png_get_header_version.str1.8,"aMS",@progbits,1
 4809              		.align 8
 4810              	.LC26:
 4811 0000 206C6962 		.string	" libpng version 1.6.16 - December 22, 2014\n\n"
 4811      706E6720 
 4811      76657273 
 4811      696F6E20 
 4811      312E362E 
 4812              		.section	.text.png_get_header_version,"ax",@progbits
 4813              		.p2align 4
 4814              		.globl	png_get_header_version
 4816              	png_get_header_version:
 4817              	.LVL455:
 4818              	.LFB62:
 811:fltk-1.3.4-1/png/png.c ****    /* Returns longer string containing both version and date */
 4819              		.loc 1 811 1 is_stmt 1 view -0
 4820              		.cfi_startproc
 811:fltk-1.3.4-1/png/png.c ****    /* Returns longer string containing both version and date */
 4821              		.loc 1 811 1 is_stmt 0 view .LVU1370
 4822 0000 F30F1EFA 		endbr64
 813:fltk-1.3.4-1/png/png.c **** #ifdef __STDC__
 4823              		.loc 1 813 4 is_stmt 1 view .LVU1371
 815:fltk-1.3.4-1/png/png.c **** #  ifndef PNG_READ_SUPPORTED
 4824              		.loc 1 815 4 view .LVU1372
 823:fltk-1.3.4-1/png/png.c **** 
 4825              		.loc 1 823 1 is_stmt 0 view .LVU1373
 4826 0004 488D0500 		leaq	.LC26(%rip), %rax
 4826      000000
 4827 000b C3       		ret
 4828              		.cfi_endproc
 4829              	.LFE62:
 4831              		.section	.text.png_build_grayscale_palette,"ax",@progbits
 4832              		.p2align 4
 4833              		.globl	png_build_grayscale_palette
 4835              	png_build_grayscale_palette:
 4836              	.LVL456:
 4837              	.LFB63:
 834:fltk-1.3.4-1/png/png.c ****    int num_palette;
 4838              		.loc 1 834 1 is_stmt 1 view -0
 4839              		.cfi_startproc
 834:fltk-1.3.4-1/png/png.c ****    int num_palette;
 4840              		.loc 1 834 1 is_stmt 0 view .LVU1375
 4841 0000 F30F1EFA 		endbr64
 835:fltk-1.3.4-1/png/png.c ****    int color_inc;
 4842              		.loc 1 835 4 is_stmt 1 view .LVU1376
 836:fltk-1.3.4-1/png/png.c ****    int i;
 4843              		.loc 1 836 4 view .LVU1377
 837:fltk-1.3.4-1/png/png.c ****    int v;
 4844              		.loc 1 837 4 view .LVU1378
 838:fltk-1.3.4-1/png/png.c **** 
 4845              		.loc 1 838 4 view .LVU1379
 840:fltk-1.3.4-1/png/png.c **** 
 4846              		.loc 1 840 4 view .LVU1380
 842:fltk-1.3.4-1/png/png.c ****       return;
 4847              		.loc 1 842 4 view .LVU1381
 842:fltk-1.3.4-1/png/png.c ****       return;
 4848              		.loc 1 842 7 is_stmt 0 view .LVU1382
 4849 0004 4885F6   		testq	%rsi, %rsi
 4850 0007 744A     		je	.L486
 845:fltk-1.3.4-1/png/png.c ****    {
 4851              		.loc 1 845 4 is_stmt 1 view .LVU1383
 4852 0009 83EF01   		subl	$1, %edi
 4853              	.LVL457:
 845:fltk-1.3.4-1/png/png.c ****    {
 4854              		.loc 1 845 4 is_stmt 0 view .LVU1384
 4855 000c 83FF07   		cmpl	$7, %edi
 4856 000f 7742     		ja	.L486
 4857 0011 488D0500 		leaq	CSWTCH.176(%rip), %rax
 4857      000000
 4858 0018 488D1500 		leaq	CSWTCH.177(%rip), %rdx
 4858      000000
 4859 001f 8B04B8   		movl	(%rax,%rdi,4), %eax
 4860 0022 8B14BA   		movl	(%rdx,%rdi,4), %edx
 4861              	.LVL458:
 873:fltk-1.3.4-1/png/png.c ****    {
 4862              		.loc 1 873 4 is_stmt 1 view .LVU1385
 873:fltk-1.3.4-1/png/png.c ****    {
 4863              		.loc 1 873 23 view .LVU1386
 873:fltk-1.3.4-1/png/png.c ****    {
 4864              		.loc 1 873 4 is_stmt 0 view .LVU1387
 4865 0025 85C0     		testl	%eax, %eax
 4866 0027 7E2A     		jle	.L486
 4867 0029 83E801   		subl	$1, %eax
 4868              	.LVL459:
 873:fltk-1.3.4-1/png/png.c ****    {
 4869              		.loc 1 873 4 view .LVU1388
 4870 002c 488D0440 		leaq	(%rax,%rax,2), %rax
 4871 0030 488D4C06 		leaq	3(%rsi,%rax), %rcx
 4871      03
 873:fltk-1.3.4-1/png/png.c ****    {
 4872              		.loc 1 873 18 view .LVU1389
 4873 0035 31C0     		xorl	%eax, %eax
 4874              	.LVL460:
 4875 0037 660F1F84 		.p2align 4,,10
 4875      00000000 
 4875      00
 4876              		.p2align 3
 4877              	.L489:
 875:fltk-1.3.4-1/png/png.c ****       palette[i].green = (png_byte)v;
 4878              		.loc 1 875 7 is_stmt 1 discriminator 3 view .LVU1390
 875:fltk-1.3.4-1/png/png.c ****       palette[i].green = (png_byte)v;
 4879              		.loc 1 875 22 is_stmt 0 discriminator 3 view .LVU1391
 4880 0040 8806     		movb	%al, (%rsi)
 876:fltk-1.3.4-1/png/png.c ****       palette[i].blue = (png_byte)v;
 4881              		.loc 1 876 7 is_stmt 1 discriminator 3 view .LVU1392
 4882 0042 4883C603 		addq	$3, %rsi
 876:fltk-1.3.4-1/png/png.c ****       palette[i].blue = (png_byte)v;
 4883              		.loc 1 876 24 is_stmt 0 discriminator 3 view .LVU1393
 4884 0046 8846FE   		movb	%al, -2(%rsi)
 877:fltk-1.3.4-1/png/png.c ****    }
 4885              		.loc 1 877 7 is_stmt 1 discriminator 3 view .LVU1394
 877:fltk-1.3.4-1/png/png.c ****    }
 4886              		.loc 1 877 23 is_stmt 0 discriminator 3 view .LVU1395
 4887 0049 8846FF   		movb	%al, -1(%rsi)
 873:fltk-1.3.4-1/png/png.c ****    {
 4888              		.loc 1 873 40 is_stmt 1 discriminator 3 view .LVU1396
 873:fltk-1.3.4-1/png/png.c ****    {
 4889              		.loc 1 873 47 is_stmt 0 discriminator 3 view .LVU1397
 4890 004c 01D0     		addl	%edx, %eax
 4891              	.LVL461:
 873:fltk-1.3.4-1/png/png.c ****    {
 4892              		.loc 1 873 23 is_stmt 1 discriminator 3 view .LVU1398
 873:fltk-1.3.4-1/png/png.c ****    {
 4893              		.loc 1 873 4 is_stmt 0 discriminator 3 view .LVU1399
 4894 004e 4839CE   		cmpq	%rcx, %rsi
 4895 0051 75ED     		jne	.L489
 4896              	.LVL462:
 4897              	.L486:
 879:fltk-1.3.4-1/png/png.c **** #endif
 4898              		.loc 1 879 1 view .LVU1400
 4899 0053 C3       		ret
 4900              		.cfi_endproc
 4901              	.LFE63:
 4903              		.section	.text.png_handle_as_unknown,"ax",@progbits
 4904              		.p2align 4
 4905              		.globl	png_handle_as_unknown
 4907              	png_handle_as_unknown:
 4908              	.LVL463:
 4909              	.LFB64:
 885:fltk-1.3.4-1/png/png.c ****    /* Check chunk_name and return "keep" value if it's on the list, else 0 */
 4910              		.loc 1 885 1 is_stmt 1 view -0
 4911              		.cfi_startproc
 885:fltk-1.3.4-1/png/png.c ****    /* Check chunk_name and return "keep" value if it's on the list, else 0 */
 4912              		.loc 1 885 1 is_stmt 0 view .LVU1402
 4913 0000 F30F1EFA 		endbr64
 887:fltk-1.3.4-1/png/png.c **** 
 4914              		.loc 1 887 4 is_stmt 1 view .LVU1403
 889:fltk-1.3.4-1/png/png.c ****       return PNG_HANDLE_CHUNK_AS_DEFAULT;
 4915              		.loc 1 889 4 view .LVU1404
 889:fltk-1.3.4-1/png/png.c ****       return PNG_HANDLE_CHUNK_AS_DEFAULT;
 4916              		.loc 1 889 7 is_stmt 0 view .LVU1405
 4917 0004 4885FF   		testq	%rdi, %rdi
 4918 0007 743F     		je	.L498
 4919 0009 4885F6   		testq	%rsi, %rsi
 4920 000c 743A     		je	.L498
 889:fltk-1.3.4-1/png/png.c ****       return PNG_HANDLE_CHUNK_AS_DEFAULT;
 4921              		.loc 1 889 56 discriminator 1 view .LVU1406
 4922 000e 8B8F0404 		movl	1028(%rdi), %ecx
 4922      0000
 890:fltk-1.3.4-1/png/png.c **** 
 4923              		.loc 1 890 14 discriminator 1 view .LVU1407
 4924 0014 31C0     		xorl	%eax, %eax
 889:fltk-1.3.4-1/png/png.c ****       return PNG_HANDLE_CHUNK_AS_DEFAULT;
 4925              		.loc 1 889 46 discriminator 1 view .LVU1408
 4926 0016 85C9     		testl	%ecx, %ecx
 4927 0018 7430     		je	.L494
 892:fltk-1.3.4-1/png/png.c ****    p = p_end + png_ptr->num_chunk_list*5; /* beyond end */
 4928              		.loc 1 892 4 is_stmt 1 view .LVU1409
 892:fltk-1.3.4-1/png/png.c ****    p = p_end + png_ptr->num_chunk_list*5; /* beyond end */
 4929              		.loc 1 892 10 is_stmt 0 view .LVU1410
 4930 001a 488B9708 		movq	1032(%rdi), %rdx
 4930      040000
 4931              	.LVL464:
 893:fltk-1.3.4-1/png/png.c **** 
 4932              		.loc 1 893 4 is_stmt 1 view .LVU1411
 893:fltk-1.3.4-1/png/png.c **** 
 4933              		.loc 1 893 39 is_stmt 0 view .LVU1412
 4934 0021 8D0489   		leal	(%rcx,%rcx,4), %eax
 893:fltk-1.3.4-1/png/png.c **** 
 4935              		.loc 1 893 6 view .LVU1413
 4936 0024 4801D0   		addq	%rdx, %rax
 4937              	.LVL465:
 893:fltk-1.3.4-1/png/png.c **** 
 4938              		.loc 1 893 6 view .LVU1414
 4939 0027 EB0C     		jmp	.L497
 4940 0029 0F1F8000 		.p2align 4,,10
 4940      000000
 4941              		.p2align 3
 4942              	.L496:
 906:fltk-1.3.4-1/png/png.c **** 
 4943              		.loc 1 906 10 is_stmt 1 view .LVU1415
 906:fltk-1.3.4-1/png/png.c **** 
 4944              		.loc 1 906 4 is_stmt 0 view .LVU1416
 4945 0030 4839C2   		cmpq	%rax, %rdx
 4946 0033 7313     		jnb	.L498
 4947              	.L497:
 899:fltk-1.3.4-1/png/png.c ****    {
 4948              		.loc 1 899 4 is_stmt 1 view .LVU1417
 901:fltk-1.3.4-1/png/png.c **** 
 4949              		.loc 1 901 7 view .LVU1418
 901:fltk-1.3.4-1/png/png.c **** 
 4950              		.loc 1 901 9 is_stmt 0 view .LVU1419
 4951 0035 4883E805 		subq	$5, %rax
 4952              	.LVL466:
 903:fltk-1.3.4-1/png/png.c ****          return p[4];
 4953              		.loc 1 903 7 is_stmt 1 view .LVU1420
 903:fltk-1.3.4-1/png/png.c ****          return p[4];
 4954              		.loc 1 903 10 is_stmt 0 view .LVU1421
 4955 0039 8B0E     		movl	(%rsi), %ecx
 4956 003b 3908     		cmpl	%ecx, (%rax)
 4957 003d 75F1     		jne	.L496
 904:fltk-1.3.4-1/png/png.c ****    }
 4958              		.loc 1 904 10 is_stmt 1 view .LVU1422
 904:fltk-1.3.4-1/png/png.c ****    }
 4959              		.loc 1 904 18 is_stmt 0 view .LVU1423
 4960 003f 0FB64004 		movzbl	4(%rax), %eax
 4961              	.LVL467:
 904:fltk-1.3.4-1/png/png.c ****    }
 4962              		.loc 1 904 18 view .LVU1424
 4963 0043 C3       		ret
 4964              	.LVL468:
 4965              		.p2align 4,,10
 4966 0044 0F1F4000 		.p2align 3
 4967              	.L498:
 890:fltk-1.3.4-1/png/png.c **** 
 4968              		.loc 1 890 14 view .LVU1425
 4969 0048 31C0     		xorl	%eax, %eax
 4970              	.L494:
 914:fltk-1.3.4-1/png/png.c **** 
 4971              		.loc 1 914 1 view .LVU1426
 4972 004a C3       		ret
 4973              		.cfi_endproc
 4974              	.LFE64:
 4976              		.section	.text.png_chunk_unknown_handling,"ax",@progbits
 4977              		.p2align 4
 4978              		.globl	png_chunk_unknown_handling
 4980              	png_chunk_unknown_handling:
 4981              	.LVL469:
 4982              	.LFB65:
 920:fltk-1.3.4-1/png/png.c ****    png_byte chunk_string[5];
 4983              		.loc 1 920 1 is_stmt 1 view -0
 4984              		.cfi_startproc
 920:fltk-1.3.4-1/png/png.c ****    png_byte chunk_string[5];
 4985              		.loc 1 920 1 is_stmt 0 view .LVU1428
 4986 0000 F30F1EFA 		endbr64
 4987 0004 4883EC18 		subq	$24, %rsp
 4988              		.cfi_def_cfa_offset 32
 4989 0008 0FCE     		bswap	%esi
 4990              	.LVL470:
 920:fltk-1.3.4-1/png/png.c ****    png_byte chunk_string[5];
 4991              		.loc 1 920 1 view .LVU1429
 4992 000a 64488B04 		movq	%fs:40, %rax
 4992      25280000 
 4992      00
 4993 0013 48894424 		movq	%rax, 8(%rsp)
 4993      08
 4994 0018 31C0     		xorl	%eax, %eax
 921:fltk-1.3.4-1/png/png.c **** 
 4995              		.loc 1 921 4 is_stmt 1 view .LVU1430
 923:fltk-1.3.4-1/png/png.c ****    return png_handle_as_unknown(png_ptr, chunk_string);
 4996              		.loc 1 923 4 view .LVU1431
 4997 001a 89742403 		movl	%esi, 3(%rsp)
 924:fltk-1.3.4-1/png/png.c **** }
 4998              		.loc 1 924 11 is_stmt 0 view .LVU1432
 4999 001e 488D7424 		leaq	3(%rsp), %rsi
 4999      03
 923:fltk-1.3.4-1/png/png.c ****    return png_handle_as_unknown(png_ptr, chunk_string);
 5000              		.loc 1 923 4 view .LVU1433
 5001 0023 C6442407 		movb	$0, 7(%rsp)
 5001      00
 924:fltk-1.3.4-1/png/png.c **** }
 5002              		.loc 1 924 4 is_stmt 1 view .LVU1434
 924:fltk-1.3.4-1/png/png.c **** }
 5003              		.loc 1 924 11 is_stmt 0 view .LVU1435
 5004 0028 E8000000 		call	png_handle_as_unknown
 5004      00
 5005              	.LVL471:
 925:fltk-1.3.4-1/png/png.c **** #endif /* READ_UNKNOWN_CHUNKS || HANDLE_AS_UNKNOWN */
 5006              		.loc 1 925 1 view .LVU1436
 5007 002d 488B5424 		movq	8(%rsp), %rdx
 5007      08
 5008 0032 64483314 		xorq	%fs:40, %rdx
 5008      25280000 
 5008      00
 5009 003b 7505     		jne	.L505
 5010 003d 4883C418 		addq	$24, %rsp
 5011              		.cfi_remember_state
 5012              		.cfi_def_cfa_offset 8
 5013 0041 C3       		ret
 5014              	.L505:
 5015              		.cfi_restore_state
 5016 0042 E8000000 		call	__stack_chk_fail@PLT
 5016      00
 5017              	.LVL472:
 925:fltk-1.3.4-1/png/png.c **** #endif /* READ_UNKNOWN_CHUNKS || HANDLE_AS_UNKNOWN */
 5018              		.loc 1 925 1 view .LVU1437
 5019              		.cfi_endproc
 5020              	.LFE65:
 5022              		.section	.text.png_reset_zstream,"ax",@progbits
 5023              		.p2align 4
 5024              		.globl	png_reset_zstream
 5026              	png_reset_zstream:
 5027              	.LVL473:
 5028              	.LFB66:
 933:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 5029              		.loc 1 933 1 is_stmt 1 view -0
 5030              		.cfi_startproc
 933:fltk-1.3.4-1/png/png.c ****    if (png_ptr == NULL)
 5031              		.loc 1 933 1 is_stmt 0 view .LVU1439
 5032 0000 F30F1EFA 		endbr64
 934:fltk-1.3.4-1/png/png.c ****       return Z_STREAM_ERROR;
 5033              		.loc 1 934 4 is_stmt 1 view .LVU1440
 934:fltk-1.3.4-1/png/png.c ****       return Z_STREAM_ERROR;
 5034              		.loc 1 934 7 is_stmt 0 view .LVU1441
 5035 0004 4885FF   		testq	%rdi, %rdi
 5036 0007 740C     		je	.L507
 938:fltk-1.3.4-1/png/png.c **** }
 5037              		.loc 1 938 4 is_stmt 1 view .LVU1442
 938:fltk-1.3.4-1/png/png.c **** }
 5038              		.loc 1 938 12 is_stmt 0 view .LVU1443
 5039 0009 4881C740 		addq	$320, %rdi
 5039      010000
 5040              	.LVL474:
 938:fltk-1.3.4-1/png/png.c **** }
 5041              		.loc 1 938 12 view .LVU1444
 5042 0010 E9000000 		jmp	inflateReset@PLT
 5042      00
 5043              	.LVL475:
 5044              	.L507:
 939:fltk-1.3.4-1/png/png.c **** #endif /* READ */
 5045              		.loc 1 939 1 view .LVU1445
 5046 0015 B8FEFFFF 		movl	$-2, %eax
 5046      FF
 5047 001a C3       		ret
 5048              		.cfi_endproc
 5049              	.LFE66:
 5051              		.section	.text.png_access_version_number,"ax",@progbits
 5052              		.p2align 4
 5053              		.globl	png_access_version_number
 5055              	png_access_version_number:
 5056              	.LFB67:
 945:fltk-1.3.4-1/png/png.c ****    /* Version of *.c files used when building libpng */
 5057              		.loc 1 945 1 is_stmt 1 view -0
 5058              		.cfi_startproc
 5059 0000 F30F1EFA 		endbr64
 947:fltk-1.3.4-1/png/png.c **** }
 5060              		.loc 1 947 4 view .LVU1447
 948:fltk-1.3.4-1/png/png.c **** 
 5061              		.loc 1 948 1 is_stmt 0 view .LVU1448
 5062 0004 B8782900 		movl	$10616, %eax
 5062      00
 5063 0009 C3       		ret
 5064              		.cfi_endproc
 5065              	.LFE67:
 5067              		.section	.rodata.png_zstream_error.str1.1,"aMS",@progbits,1
 5068              	.LC27:
 5069 0000 756E6578 		.string	"unexpected zlib return code"
 5069      70656374 
 5069      6564207A 
 5069      6C696220 
 5069      72657475 
 5070              	.LC28:
 5071 001c 756E6578 		.string	"unexpected end of LZ stream"
 5071      70656374 
 5071      65642065 
 5071      6E64206F 
 5071      66204C5A 
 5072              	.LC29:
 5073 0038 6D697373 		.string	"missing LZ dictionary"
 5073      696E6720 
 5073      4C5A2064 
 5073      69637469 
 5073      6F6E6172 
 5074              	.LC30:
 5075 004e 7A6C6962 		.string	"zlib IO error"
 5075      20494F20 
 5075      6572726F 
 5075      7200
 5076              	.LC31:
 5077 005c 62616420 		.string	"bad parameters to zlib"
 5077      70617261 
 5077      6D657465 
 5077      72732074 
 5077      6F207A6C 
 5078              	.LC32:
 5079 0073 64616D61 		.string	"damaged LZ stream"
 5079      67656420 
 5079      4C5A2073 
 5079      74726561 
 5079      6D00
 5080              	.LC33:
 5081 0085 696E7375 		.string	"insufficient memory"
 5081      66666963 
 5081      69656E74 
 5081      206D656D 
 5081      6F727900 
 5082              	.LC34:
 5083 0099 7472756E 		.string	"truncated"
 5083      63617465 
 5083      6400
 5084              	.LC35:
 5085 00a3 756E7375 		.string	"unsupported zlib version"
 5085      70706F72 
 5085      74656420 
 5085      7A6C6962 
 5085      20766572 
 5086              	.LC36:
 5087 00bc 756E6578 		.string	"unexpected zlib return"
 5087      70656374 
 5087      6564207A 
 5087      6C696220 
 5087      72657475 
 5088              		.section	.text.png_zstream_error,"ax",@progbits
 5089              		.p2align 4
 5090              		.globl	png_zstream_error
 5092              	png_zstream_error:
 5093              	.LVL476:
 5094              	.LFB68:
 959:fltk-1.3.4-1/png/png.c ****    /* Translate 'ret' into an appropriate error string, priority is given to the
 5095              		.loc 1 959 1 is_stmt 1 view -0
 5096              		.cfi_startproc
 959:fltk-1.3.4-1/png/png.c ****    /* Translate 'ret' into an appropriate error string, priority is given to the
 5097              		.loc 1 959 1 is_stmt 0 view .LVU1450
 5098 0000 F30F1EFA 		endbr64
 964:fltk-1.3.4-1/png/png.c ****    {
 5099              		.loc 1 964 4 is_stmt 1 view .LVU1451
 964:fltk-1.3.4-1/png/png.c ****    {
 5100              		.loc 1 964 7 is_stmt 0 view .LVU1452
 5101 0004 4883BF70 		cmpq	$0, 368(%rdi)
 5101      01000000 
 5102 000c 7402     		je	.L522
1021:fltk-1.3.4-1/png/png.c **** 
 5103              		.loc 1 1021 1 view .LVU1453
 5104 000e C3       		ret
 5105 000f 90       		.p2align 4,,10
 5106              		.p2align 3
 5107              	.L522:
 964:fltk-1.3.4-1/png/png.c ****    {
 5108              		.loc 1 964 38 is_stmt 1 view .LVU1454
 5109 0010 83C607   		addl	$7, %esi
 5110              	.LVL477:
 964:fltk-1.3.4-1/png/png.c ****    {
 5111              		.loc 1 964 38 is_stmt 0 view .LVU1455
 5112 0013 83FE09   		cmpl	$9, %esi
 5113 0016 0F879800 		ja	.L511
 5113      0000
 5114 001c 488D1500 		leaq	.L513(%rip), %rdx
 5114      000000
 5115 0023 486304B2 		movslq	(%rdx,%rsi,4), %rax
 5116 0027 4801D0   		addq	%rdx, %rax
 5117 002a 3EFFE0   		notrack jmp	*%rax
 5118              		.section	.rodata.png_zstream_error,"a",@progbits
 5119              		.align 4
 5120              		.align 4
 5121              	.L513:
 5122 0000 00000000 		.long	.L521-.L513
 5123 0004 00000000 		.long	.L520-.L513
 5124 0008 00000000 		.long	.L519-.L513
 5125 000c 00000000 		.long	.L518-.L513
 5126 0010 00000000 		.long	.L517-.L513
 5127 0014 00000000 		.long	.L516-.L513
 5128 0018 00000000 		.long	.L515-.L513
 5129 001c 00000000 		.long	.L511-.L513
 5130 0020 00000000 		.long	.L514-.L513
 5131 0024 00000000 		.long	.L512-.L513
 5132              		.section	.text.png_zstream_error
 5133              	.L512:
 980:fltk-1.3.4-1/png/png.c ****          break;
 5134              		.loc 1 980 10 is_stmt 1 view .LVU1456
 980:fltk-1.3.4-1/png/png.c ****          break;
 5135              		.loc 1 980 31 is_stmt 0 view .LVU1457
 5136 002d 488D0500 		leaq	.LC29(%rip), %rax
 5136      000000
 5137 0034 48898770 		movq	%rax, 368(%rdi)
 5137      010000
 981:fltk-1.3.4-1/png/png.c **** 
 5138              		.loc 1 981 10 is_stmt 1 view .LVU1458
 5139 003b C3       		ret
 5140              	.L514:
 973:fltk-1.3.4-1/png/png.c ****          break;
 5141              		.loc 1 973 10 view .LVU1459
 973:fltk-1.3.4-1/png/png.c ****          break;
 5142              		.loc 1 973 31 is_stmt 0 view .LVU1460
 5143 003c 488D0500 		leaq	.LC28(%rip), %rax
 5143      000000
 5144 0043 48898770 		movq	%rax, 368(%rdi)
 5144      010000
 974:fltk-1.3.4-1/png/png.c **** 
 5145              		.loc 1 974 10 is_stmt 1 view .LVU1461
 5146 004a C3       		ret
 5147              	.L515:
 985:fltk-1.3.4-1/png/png.c ****          break;
 5148              		.loc 1 985 10 view .LVU1462
 985:fltk-1.3.4-1/png/png.c ****          break;
 5149              		.loc 1 985 31 is_stmt 0 view .LVU1463
 5150 004b 488D0500 		leaq	.LC30(%rip), %rax
 5150      000000
 5151 0052 48898770 		movq	%rax, 368(%rdi)
 5151      010000
 986:fltk-1.3.4-1/png/png.c **** 
 5152              		.loc 1 986 10 is_stmt 1 view .LVU1464
 5153 0059 C3       		ret
 5154              	.L516:
 990:fltk-1.3.4-1/png/png.c ****          break;
 5155              		.loc 1 990 10 view .LVU1465
 990:fltk-1.3.4-1/png/png.c ****          break;
 5156              		.loc 1 990 31 is_stmt 0 view .LVU1466
 5157 005a 488D0500 		leaq	.LC31(%rip), %rax
 5157      000000
 5158 0061 48898770 		movq	%rax, 368(%rdi)
 5158      010000
 991:fltk-1.3.4-1/png/png.c **** 
 5159              		.loc 1 991 10 is_stmt 1 view .LVU1467
 5160 0068 C3       		ret
 5161              	.L517:
 994:fltk-1.3.4-1/png/png.c ****          break;
 5162              		.loc 1 994 10 view .LVU1468
 994:fltk-1.3.4-1/png/png.c ****          break;
 5163              		.loc 1 994 31 is_stmt 0 view .LVU1469
 5164 0069 488D0500 		leaq	.LC32(%rip), %rax
 5164      000000
 5165 0070 48898770 		movq	%rax, 368(%rdi)
 5165      010000
 995:fltk-1.3.4-1/png/png.c **** 
 5166              		.loc 1 995 10 is_stmt 1 view .LVU1470
 5167 0077 C3       		ret
 5168              	.L518:
 998:fltk-1.3.4-1/png/png.c ****          break;
 5169              		.loc 1 998 10 view .LVU1471
 998:fltk-1.3.4-1/png/png.c ****          break;
 5170              		.loc 1 998 31 is_stmt 0 view .LVU1472
 5171 0078 488D0500 		leaq	.LC33(%rip), %rax
 5171      000000
 5172 007f 48898770 		movq	%rax, 368(%rdi)
 5172      010000
 999:fltk-1.3.4-1/png/png.c **** 
 5173              		.loc 1 999 10 is_stmt 1 view .LVU1473
 5174 0086 C3       		ret
 5175              	.L519:
1005:fltk-1.3.4-1/png/png.c ****          break;
 5176              		.loc 1 1005 10 view .LVU1474
1005:fltk-1.3.4-1/png/png.c ****          break;
 5177              		.loc 1 1005 31 is_stmt 0 view .LVU1475
 5178 0087 488D0500 		leaq	.LC34(%rip), %rax
 5178      000000
 5179 008e 48898770 		movq	%rax, 368(%rdi)
 5179      010000
1006:fltk-1.3.4-1/png/png.c **** 
 5180              		.loc 1 1006 10 is_stmt 1 view .LVU1476
 5181 0095 C3       		ret
 5182              	.L520:
1009:fltk-1.3.4-1/png/png.c ****          break;
 5183              		.loc 1 1009 10 view .LVU1477
1009:fltk-1.3.4-1/png/png.c ****          break;
 5184              		.loc 1 1009 31 is_stmt 0 view .LVU1478
 5185 0096 488D0500 		leaq	.LC35(%rip), %rax
 5185      000000
 5186 009d 48898770 		movq	%rax, 368(%rdi)
 5186      010000
1010:fltk-1.3.4-1/png/png.c **** 
 5187              		.loc 1 1010 10 is_stmt 1 view .LVU1479
 5188 00a4 C3       		ret
 5189              	.L521:
1018:fltk-1.3.4-1/png/png.c ****          break;
 5190              		.loc 1 1018 10 view .LVU1480
1018:fltk-1.3.4-1/png/png.c ****          break;
 5191              		.loc 1 1018 31 is_stmt 0 view .LVU1481
 5192 00a5 488D0500 		leaq	.LC36(%rip), %rax
 5192      000000
 5193 00ac 48898770 		movq	%rax, 368(%rdi)
 5193      010000
1019:fltk-1.3.4-1/png/png.c ****    }
 5194              		.loc 1 1019 10 is_stmt 1 view .LVU1482
1021:fltk-1.3.4-1/png/png.c **** 
 5195              		.loc 1 1021 1 is_stmt 0 view .LVU1483
 5196 00b3 C3       		ret
 5197              	.L511:
 968:fltk-1.3.4-1/png/png.c ****          break;
 5198              		.loc 1 968 10 is_stmt 1 view .LVU1484
 968:fltk-1.3.4-1/png/png.c ****          break;
 5199              		.loc 1 968 31 is_stmt 0 view .LVU1485
 5200 00b4 488D0500 		leaq	.LC27(%rip), %rax
 5200      000000
 5201 00bb 48898770 		movq	%rax, 368(%rdi)
 5201      010000
 969:fltk-1.3.4-1/png/png.c **** 
 5202              		.loc 1 969 10 is_stmt 1 view .LVU1486
 5203 00c2 C3       		ret
 5204              		.cfi_endproc
 5205              	.LFE68:
 5207              		.section	.rodata.png_colorspace_set_gamma.str1.1,"aMS",@progbits,1
 5208              	.LC37:
 5209 0000 67616D6D 		.string	"gamma value out of range"
 5209      61207661 
 5209      6C756520 
 5209      6F757420 
 5209      6F662072 
 5210              	.LC38:
 5211 0019 6475706C 		.string	"duplicate"
 5211      69636174 
 5211      6500
 5212              		.section	.text.png_colorspace_set_gamma,"ax",@progbits
 5213              		.p2align 4
 5214              		.globl	png_colorspace_set_gamma
 5216              	png_colorspace_set_gamma:
 5217              	.LVL478:
 5218              	.LFB70:
1076:fltk-1.3.4-1/png/png.c ****    /* Changed in libpng-1.5.4 to limit the values to ensure overflow can't
 5219              		.loc 1 1076 1 view -0
 5220              		.cfi_startproc
1076:fltk-1.3.4-1/png/png.c ****    /* Changed in libpng-1.5.4 to limit the values to ensure overflow can't
 5221              		.loc 1 1076 1 is_stmt 0 view .LVU1488
 5222 0000 F30F1EFA 		endbr64
1088:fltk-1.3.4-1/png/png.c **** 
 5223              		.loc 1 1088 4 is_stmt 1 view .LVU1489
1090:fltk-1.3.4-1/png/png.c ****       errmsg = "gamma value out of range";
 5224              		.loc 1 1090 4 view .LVU1490
1076:fltk-1.3.4-1/png/png.c ****    /* Changed in libpng-1.5.4 to limit the values to ensure overflow can't
 5225              		.loc 1 1076 1 is_stmt 0 view .LVU1491
 5226 0004 55       		pushq	%rbp
 5227              		.cfi_def_cfa_offset 16
 5228              		.cfi_offset 6, -16
 5229 0005 89D5     		movl	%edx, %ebp
1090:fltk-1.3.4-1/png/png.c ****       errmsg = "gamma value out of range";
 5230              		.loc 1 1090 18 view .LVU1492
 5231 0007 83EA10   		subl	$16, %edx
 5232              	.LVL479:
1076:fltk-1.3.4-1/png/png.c ****    /* Changed in libpng-1.5.4 to limit the values to ensure overflow can't
 5233              		.loc 1 1076 1 view .LVU1493
 5234 000a 53       		pushq	%rbx
 5235              		.cfi_def_cfa_offset 24
 5236              		.cfi_offset 3, -24
 5237 000b 4889F3   		movq	%rsi, %rbx
 5238 000e 4883EC08 		subq	$8, %rsp
 5239              		.cfi_def_cfa_offset 32
 5240 0012 0FB7464A 		movzwl	74(%rsi), %eax
1090:fltk-1.3.4-1/png/png.c ****       errmsg = "gamma value out of range";
 5241              		.loc 1 1090 7 view .LVU1494
 5242 0016 81FA30BE 		cmpl	$624999984, %edx
 5242      4025
 5243 001c 7752     		ja	.L529
1095:fltk-1.3.4-1/png/png.c ****          (colorspace->flags & PNG_COLORSPACE_FROM_gAMA) != 0)
 5244              		.loc 1 1095 12 is_stmt 1 view .LVU1495
1095:fltk-1.3.4-1/png/png.c ****          (colorspace->flags & PNG_COLORSPACE_FROM_gAMA) != 0)
 5245              		.loc 1 1095 15 is_stmt 0 view .LVU1496
 5246 001e F6872D01 		testb	$-128, 301(%rdi)
 5246      000080
 5247 0025 7411     		je	.L525
1095:fltk-1.3.4-1/png/png.c ****          (colorspace->flags & PNG_COLORSPACE_FROM_gAMA) != 0)
 5248              		.loc 1 1095 58 discriminator 1 view .LVU1497
 5249 0027 A808     		testb	$8, %al
 5250 0029 740D     		je	.L525
1097:fltk-1.3.4-1/png/png.c **** #  endif
 5251              		.loc 1 1097 17 view .LVU1498
 5252 002b 488D3500 		leaq	.LC38(%rip), %rsi
 5252      000000
 5253              	.LVL480:
1097:fltk-1.3.4-1/png/png.c **** #  endif
 5254              		.loc 1 1097 17 view .LVU1499
 5255 0032 EB43     		jmp	.L524
 5256              		.p2align 4,,10
 5257 0034 0F1F4000 		.p2align 3
 5258              	.L525:
1101:fltk-1.3.4-1/png/png.c ****       return;
 5259              		.loc 1 1101 9 is_stmt 1 view .LVU1500
1101:fltk-1.3.4-1/png/png.c ****       return;
 5260              		.loc 1 1101 12 is_stmt 0 view .LVU1501
 5261 0038 6685C0   		testw	%ax, %ax
 5262 003b 790B     		jns	.L538
 5263              	.LVL481:
 5264              	.L523:
1126:fltk-1.3.4-1/png/png.c **** 
 5265              		.loc 1 1126 1 view .LVU1502
 5266 003d 4883C408 		addq	$8, %rsp
 5267              		.cfi_remember_state
 5268              		.cfi_def_cfa_offset 24
 5269 0041 5B       		popq	%rbx
 5270              		.cfi_def_cfa_offset 16
 5271              	.LVL482:
1126:fltk-1.3.4-1/png/png.c **** 
 5272              		.loc 1 1126 1 view .LVU1503
 5273 0042 5D       		popq	%rbp
 5274              		.cfi_def_cfa_offset 8
 5275              	.LVL483:
1126:fltk-1.3.4-1/png/png.c **** 
 5276              		.loc 1 1126 1 view .LVU1504
 5277 0043 C3       		ret
 5278              	.LVL484:
 5279              		.p2align 4,,10
 5280 0044 0F1F4000 		.p2align 3
 5281              	.L538:
 5282              		.cfi_restore_state
1106:fltk-1.3.4-1/png/png.c ****           1/*from gAMA*/) != 0)
 5283              		.loc 1 1106 7 is_stmt 1 view .LVU1505
1106:fltk-1.3.4-1/png/png.c ****           1/*from gAMA*/) != 0)
 5284              		.loc 1 1106 11 is_stmt 0 view .LVU1506
 5285 0048 8B33     		movl	(%rbx), %esi
 5286 004a 488D534A 		leaq	74(%rbx), %rdx
 5287 004e 41B80100 		movl	$1, %r8d
 5287      0000
 5288 0054 89E9     		movl	%ebp, %ecx
 5289 0056 E8000000 		call	png_colorspace_check_gamma.isra.0
 5289      00
 5290              	.LVL485:
1106:fltk-1.3.4-1/png/png.c ****           1/*from gAMA*/) != 0)
 5291              		.loc 1 1106 10 view .LVU1507
 5292 005b 85C0     		testl	%eax, %eax
 5293 005d 74DE     		je	.L523
1110:fltk-1.3.4-1/png/png.c ****          colorspace->flags |=
 5294              		.loc 1 1110 10 is_stmt 1 view .LVU1508
1110:fltk-1.3.4-1/png/png.c ****          colorspace->flags |=
 5295              		.loc 1 1110 28 is_stmt 0 view .LVU1509
 5296 005f 892B     		movl	%ebp, (%rbx)
1111:fltk-1.3.4-1/png/png.c ****             (PNG_COLORSPACE_HAVE_GAMMA | PNG_COLORSPACE_FROM_gAMA);
 5297              		.loc 1 1111 10 is_stmt 1 view .LVU1510
1111:fltk-1.3.4-1/png/png.c ****             (PNG_COLORSPACE_HAVE_GAMMA | PNG_COLORSPACE_FROM_gAMA);
 5298              		.loc 1 1111 28 is_stmt 0 view .LVU1511
 5299 0061 66834B4A 		orw	$9, 74(%rbx)
 5299      09
1126:fltk-1.3.4-1/png/png.c **** 
 5300              		.loc 1 1126 1 view .LVU1512
 5301 0066 4883C408 		addq	$8, %rsp
 5302              		.cfi_remember_state
 5303              		.cfi_def_cfa_offset 24
 5304 006a 5B       		popq	%rbx
 5305              		.cfi_def_cfa_offset 16
 5306              	.LVL486:
1126:fltk-1.3.4-1/png/png.c **** 
 5307              		.loc 1 1126 1 view .LVU1513
 5308 006b 5D       		popq	%rbp
 5309              		.cfi_def_cfa_offset 8
 5310              	.LVL487:
1126:fltk-1.3.4-1/png/png.c **** 
 5311              		.loc 1 1126 1 view .LVU1514
 5312 006c C3       		ret
 5313              	.LVL488:
 5314 006d 0F1F00   		.p2align 4,,10
 5315              		.p2align 3
 5316              	.L529:
 5317              		.cfi_restore_state
1091:fltk-1.3.4-1/png/png.c **** 
 5318              		.loc 1 1091 14 view .LVU1515
 5319 0070 488D3500 		leaq	.LC37(%rip), %rsi
 5319      000000
 5320              	.L524:
 5321              	.LVL489:
1124:fltk-1.3.4-1/png/png.c ****    png_chunk_report(png_ptr, errmsg, PNG_CHUNK_WRITE_ERROR);
 5322              		.loc 1 1124 4 is_stmt 1 view .LVU1516
1124:fltk-1.3.4-1/png/png.c ****    png_chunk_report(png_ptr, errmsg, PNG_CHUNK_WRITE_ERROR);
 5323              		.loc 1 1124 22 is_stmt 0 view .LVU1517
 5324 0077 660D0080 		orw	$-32768, %ax
1125:fltk-1.3.4-1/png/png.c **** }
 5325              		.loc 1 1125 4 view .LVU1518
 5326 007b BA010000 		movl	$1, %edx
 5326      00
1124:fltk-1.3.4-1/png/png.c ****    png_chunk_report(png_ptr, errmsg, PNG_CHUNK_WRITE_ERROR);
 5327              		.loc 1 1124 22 view .LVU1519
 5328 0080 6689434A 		movw	%ax, 74(%rbx)
1125:fltk-1.3.4-1/png/png.c **** }
 5329              		.loc 1 1125 4 is_stmt 1 view .LVU1520
1126:fltk-1.3.4-1/png/png.c **** 
 5330              		.loc 1 1126 1 is_stmt 0 view .LVU1521
 5331 0084 4883C408 		addq	$8, %rsp
 5332              		.cfi_def_cfa_offset 24
 5333 0088 5B       		popq	%rbx
 5334              		.cfi_def_cfa_offset 16
 5335              	.LVL490:
1126:fltk-1.3.4-1/png/png.c **** 
 5336              		.loc 1 1126 1 view .LVU1522
 5337 0089 5D       		popq	%rbp
 5338              		.cfi_def_cfa_offset 8
 5339              	.LVL491:
1125:fltk-1.3.4-1/png/png.c **** }
 5340              		.loc 1 1125 4 view .LVU1523
 5341 008a E9000000 		jmp	png_chunk_report@PLT
 5341      00
 5342              	.LVL492:
1125:fltk-1.3.4-1/png/png.c **** }
 5343              		.loc 1 1125 4 view .LVU1524
 5344              		.cfi_endproc
 5345              	.LFE70:
 5347              		.section	.text.png_colorspace_sync_info,"ax",@progbits
 5348              		.p2align 4
 5349              		.globl	png_colorspace_sync_info
 5351              	png_colorspace_sync_info:
 5352              	.LVL493:
 5353              	.LFB71:
1130:fltk-1.3.4-1/png/png.c ****    if ((info_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) != 0)
 5354              		.loc 1 1130 1 is_stmt 1 view -0
 5355              		.cfi_startproc
1130:fltk-1.3.4-1/png/png.c ****    if ((info_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) != 0)
 5356              		.loc 1 1130 1 is_stmt 0 view .LVU1526
 5357 0000 F30F1EFA 		endbr64
1131:fltk-1.3.4-1/png/png.c ****    {
 5358              		.loc 1 1131 4 is_stmt 1 view .LVU1527
1131:fltk-1.3.4-1/png/png.c ****    {
 5359              		.loc 1 1131 29 is_stmt 0 view .LVU1528
 5360 0004 0FB7567E 		movzwl	126(%rsi), %edx
 5361 0008 8B4608   		movl	8(%rsi), %eax
1131:fltk-1.3.4-1/png/png.c ****    {
 5362              		.loc 1 1131 7 view .LVU1529
 5363 000b 6685D2   		testw	%dx, %dx
 5364 000e 7830     		js	.L550
1152:fltk-1.3.4-1/png/png.c ****             info_ptr->valid |= PNG_INFO_sRGB;
 5365              		.loc 1 1152 10 is_stmt 1 view .LVU1530
1153:fltk-1.3.4-1/png/png.c **** 
 5366              		.loc 1 1153 29 is_stmt 0 view .LVU1531
 5367 0010 89C1     		movl	%eax, %ecx
 5368 0012 80E4F7   		andb	$-9, %ah
 5369 0015 80CD08   		orb	$8, %ch
 5370 0018 F6C280   		testb	$-128, %dl
 5371 001b 0F45C1   		cmovne	%ecx, %eax
1158:fltk-1.3.4-1/png/png.c ****             info_ptr->valid |= PNG_INFO_cHRM;
 5372              		.loc 1 1158 10 is_stmt 1 view .LVU1532
1159:fltk-1.3.4-1/png/png.c **** 
 5373              		.loc 1 1159 29 is_stmt 0 view .LVU1533
 5374 001e 89C1     		movl	%eax, %ecx
 5375 0020 83E0FB   		andl	$-5, %eax
 5376 0023 83C904   		orl	$4, %ecx
 5377 0026 F6C202   		testb	$2, %dl
 5378 0029 0F45C1   		cmovne	%ecx, %eax
1165:fltk-1.3.4-1/png/png.c ****          info_ptr->valid |= PNG_INFO_gAMA;
 5379              		.loc 1 1165 7 is_stmt 1 view .LVU1534
1166:fltk-1.3.4-1/png/png.c **** 
 5380              		.loc 1 1166 26 is_stmt 0 view .LVU1535
 5381 002c 89C1     		movl	%eax, %ecx
 5382 002e 83C801   		orl	$1, %eax
 5383 0031 83E1FE   		andl	$-2, %ecx
 5384 0034 83E201   		andl	$1, %edx
 5385 0037 0F44C1   		cmove	%ecx, %eax
 5386 003a 894608   		movl	%eax, 8(%rsi)
 5387              	.L539:
1171:fltk-1.3.4-1/png/png.c **** 
 5388              		.loc 1 1171 1 view .LVU1536
 5389 003d C3       		ret
 5390 003e 6690     		.p2align 4,,10
 5391              		.p2align 3
 5392              	.L550:
 5393              	.LVL494:
 5394              	.LBB394:
 5395              	.LBI394:
1129:fltk-1.3.4-1/png/png.c **** {
 5396              		.loc 1 1129 1 is_stmt 1 view .LVU1537
 5397              	.LBB395:
1134:fltk-1.3.4-1/png/png.c ****          PNG_INFO_iCCP);
 5398              		.loc 1 1134 7 view .LVU1538
1134:fltk-1.3.4-1/png/png.c ****          PNG_INFO_iCCP);
 5399              		.loc 1 1134 23 is_stmt 0 view .LVU1539
 5400 0040 25FAE7FF 		andl	$-6150, %eax
 5400      FF
 5401 0045 894608   		movl	%eax, 8(%rsi)
1139:fltk-1.3.4-1/png/png.c **** #     else
 5402              		.loc 1 1139 10 is_stmt 1 view .LVU1540
 5403              	.LVL495:
 5404              	.LBB396:
 5405              	.LBI396:
 442:fltk-1.3.4-1/png/png.c ****    int num)
 5406              		.loc 1 442 1 view .LVU1541
 5407              	.LBB397:
 445:fltk-1.3.4-1/png/png.c **** 
 5408              		.loc 1 445 4 view .LVU1542
 447:fltk-1.3.4-1/png/png.c ****       return;
 5409              		.loc 1 447 4 view .LVU1543
 447:fltk-1.3.4-1/png/png.c ****       return;
 5410              		.loc 1 447 7 is_stmt 0 view .LVU1544
 5411 0048 4885FF   		testq	%rdi, %rdi
 5412 004b 74F0     		je	.L539
 5413 004d B9FFFFFF 		movl	$-1, %ecx
 5413      FF
 5414 0052 BA100000 		movl	$16, %edx
 5414      00
 5415 0057 E9000000 		jmp	png_free_data.part.0
 5415      00
 5416              	.LVL496:
 447:fltk-1.3.4-1/png/png.c ****       return;
 5417              		.loc 1 447 7 view .LVU1545
 5418              	.LBE397:
 5419              	.LBE396:
 5420              	.LBE395:
 5421              	.LBE394:
 5422              		.cfi_endproc
 5423              	.LFE71:
 5425              		.section	.text.png_colorspace_sync,"ax",@progbits
 5426              		.p2align 4
 5427              		.globl	png_colorspace_sync
 5429              	png_colorspace_sync:
 5430              	.LVL497:
 5431              	.LFB72:
1176:fltk-1.3.4-1/png/png.c ****    if (info_ptr == NULL) /* reduce code size; check here not in the caller */
 5432              		.loc 1 1176 1 is_stmt 1 view -0
 5433              		.cfi_startproc
1176:fltk-1.3.4-1/png/png.c ****    if (info_ptr == NULL) /* reduce code size; check here not in the caller */
 5434              		.loc 1 1176 1 is_stmt 0 view .LVU1547
 5435 0000 F30F1EFA 		endbr64
1177:fltk-1.3.4-1/png/png.c ****       return;
 5436              		.loc 1 1177 4 is_stmt 1 view .LVU1548
1177:fltk-1.3.4-1/png/png.c ****       return;
 5437              		.loc 1 1177 7 is_stmt 0 view .LVU1549
 5438 0004 4885F6   		testq	%rsi, %rsi
 5439 0007 744F     		je	.L551
1180:fltk-1.3.4-1/png/png.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 5440              		.loc 1 1180 4 is_stmt 1 view .LVU1550
1180:fltk-1.3.4-1/png/png.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 5441              		.loc 1 1180 25 is_stmt 0 view .LVU1551
 5442 0009 488B8718 		movq	1304(%rdi), %rax
 5442      050000
 5443 0010 F30F6F87 		movdqu	1240(%rdi), %xmm0
 5443      D8040000 
 5444 0018 F30F6F8F 		movdqu	1256(%rdi), %xmm1
 5444      E8040000 
 5445 0020 F30F6F97 		movdqu	1272(%rdi), %xmm2
 5445      F8040000 
 5446 0028 48894674 		movq	%rax, 116(%rsi)
 5447 002c 8B872005 		movl	1312(%rdi), %eax
 5447      0000
 5448 0032 F30F6F9F 		movdqu	1288(%rdi), %xmm3
 5448      08050000 
 5449 003a 0F114634 		movups	%xmm0, 52(%rsi)
 5450 003e 89467C   		movl	%eax, 124(%rsi)
1181:fltk-1.3.4-1/png/png.c **** }
 5451              		.loc 1 1181 4 is_stmt 1 view .LVU1552
1180:fltk-1.3.4-1/png/png.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 5452              		.loc 1 1180 25 is_stmt 0 view .LVU1553
 5453 0041 0F114E44 		movups	%xmm1, 68(%rsi)
 5454 0045 0F115654 		movups	%xmm2, 84(%rsi)
 5455 0049 0F115E64 		movups	%xmm3, 100(%rsi)
1181:fltk-1.3.4-1/png/png.c **** }
 5456              		.loc 1 1181 4 view .LVU1554
 5457 004d E9000000 		jmp	png_colorspace_sync_info
 5457      00
 5458              	.LVL498:
 5459              		.p2align 4,,10
 5460 0052 660F1F44 		.p2align 3
 5460      0000
 5461              	.L551:
1182:fltk-1.3.4-1/png/png.c **** #endif
 5462              		.loc 1 1182 1 view .LVU1555
 5463 0058 C3       		ret
 5464              		.cfi_endproc
 5465              	.LFE72:
 5467              		.section	.rodata.png_colorspace_set_sRGB.str1.1,"aMS",@progbits,1
 5468              	.LC39:
 5469 0000 696E7661 		.string	"invalid sRGB rendering intent"
 5469      6C696420 
 5469      73524742 
 5469      2072656E 
 5469      64657269 
 5470              	.LC40:
 5471 001e 73524742 		.string	"sRGB"
 5471      00
 5472              		.section	.rodata.png_colorspace_set_sRGB.str1.8,"aMS",@progbits,1
 5473              		.align 8
 5474              	.LC41:
 5475 0000 696E636F 		.string	"inconsistent rendering intents"
 5475      6E736973 
 5475      74656E74 
 5475      2072656E 
 5475      64657269 
 5476 001f 00       		.align 8
 5477              	.LC42:
 5478 0020 6475706C 		.string	"duplicate sRGB information ignored"
 5478      69636174 
 5478      65207352 
 5478      47422069 
 5478      6E666F72 
 5479 0043 00000000 		.align 8
 5479      00
 5480              	.LC43:
 5481 0048 6348524D 		.string	"cHRM chunk does not match sRGB"
 5481      20636875 
 5481      6E6B2064 
 5481      6F657320 
 5481      6E6F7420 
 5482              		.section	.text.png_colorspace_set_sRGB,"ax",@progbits
 5483              		.p2align 4
 5484              		.globl	png_colorspace_set_sRGB
 5486              	png_colorspace_set_sRGB:
 5487              	.LVL499:
 5488              	.LFB87:
1835:fltk-1.3.4-1/png/png.c ****    /* sRGB sets known gamma, end points and (from the chunk) intent. */
 5489              		.loc 1 1835 1 is_stmt 1 view -0
 5490              		.cfi_startproc
1835:fltk-1.3.4-1/png/png.c ****    /* sRGB sets known gamma, end points and (from the chunk) intent. */
 5491              		.loc 1 1835 1 is_stmt 0 view .LVU1557
 5492 0000 F30F1EFA 		endbr64
1848:fltk-1.3.4-1/png/png.c ****    {
 5493              		.loc 1 1848 4 is_stmt 1 view .LVU1558
1857:fltk-1.3.4-1/png/png.c ****       return 0;
 5494              		.loc 1 1857 4 view .LVU1559
1857:fltk-1.3.4-1/png/png.c ****       return 0;
 5495              		.loc 1 1857 19 is_stmt 0 view .LVU1560
 5496 0004 0FB7464A 		movzwl	74(%rsi), %eax
1857:fltk-1.3.4-1/png/png.c ****       return 0;
 5497              		.loc 1 1857 7 view .LVU1561
 5498 0008 6685C0   		testw	%ax, %ax
 5499 000b 0F883F01 		js	.L559
 5499      0000
1835:fltk-1.3.4-1/png/png.c ****    /* sRGB sets known gamma, end points and (from the chunk) intent. */
 5500              		.loc 1 1835 1 view .LVU1562
 5501 0011 4154     		pushq	%r12
 5502              		.cfi_def_cfa_offset 16
 5503              		.cfi_offset 12, -16
1870:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "invalid sRGB rendering intent");
 5504              		.loc 1 1870 14 view .LVU1563
 5505 0013 89D1     		movl	%edx, %ecx
 5506 0015 4989FC   		movq	%rdi, %r12
 5507 0018 4C8D0500 		leaq	.LC39(%rip), %r8
 5507      000000
1835:fltk-1.3.4-1/png/png.c ****    /* sRGB sets known gamma, end points and (from the chunk) intent. */
 5508              		.loc 1 1835 1 view .LVU1564
 5509 001f 55       		pushq	%rbp
 5510              		.cfi_def_cfa_offset 24
 5511              		.cfi_offset 6, -24
 5512 0020 4889F5   		movq	%rsi, %rbp
 5513 0023 53       		pushq	%rbx
 5514              		.cfi_def_cfa_offset 32
 5515              		.cfi_offset 3, -32
 5516 0024 89D3     		movl	%edx, %ebx
1869:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, "sRGB",
 5517              		.loc 1 1869 4 is_stmt 1 view .LVU1565
1869:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, "sRGB",
 5518              		.loc 1 1869 7 is_stmt 0 view .LVU1566
 5519 0026 83FA03   		cmpl	$3, %edx
 5520 0029 0F870601 		ja	.L570
 5520      0000
1873:fltk-1.3.4-1/png/png.c ****       colorspace->rendering_intent != intent)
 5521              		.loc 1 1873 4 is_stmt 1 view .LVU1567
1873:fltk-1.3.4-1/png/png.c ****       colorspace->rendering_intent != intent)
 5522              		.loc 1 1873 7 is_stmt 0 view .LVU1568
 5523 002f A804     		testb	$4, %al
 5524 0031 0F85E900 		jne	.L571
 5524      0000
 5525              	.LVL500:
 5526              	.L556:
1878:fltk-1.3.4-1/png/png.c ****    {
 5527              		.loc 1 1878 4 is_stmt 1 view .LVU1569
1878:fltk-1.3.4-1/png/png.c ****    {
 5528              		.loc 1 1878 7 is_stmt 0 view .LVU1570
 5529 0037 A820     		testb	$32, %al
 5530 0039 0F851901 		jne	.L572
 5530      0000
1887:fltk-1.3.4-1/png/png.c ****       !png_colorspace_endpoints_match(&sRGB_xy, &colorspace->end_points_xy,
 5531              		.loc 1 1887 4 is_stmt 1 view .LVU1571
1887:fltk-1.3.4-1/png/png.c ****       !png_colorspace_endpoints_match(&sRGB_xy, &colorspace->end_points_xy,
 5532              		.loc 1 1887 7 is_stmt 0 view .LVU1572
 5533 003f A802     		testb	$2, %al
 5534 0041 742D     		je	.L558
1888:fltk-1.3.4-1/png/png.c ****          100))
 5535              		.loc 1 1888 49 discriminator 1 view .LVU1573
 5536 0043 488D7504 		leaq	4(%rbp), %rsi
 5537              	.LVL501:
1888:fltk-1.3.4-1/png/png.c ****          100))
 5538              		.loc 1 1888 8 discriminator 1 view .LVU1574
 5539 0047 BA640000 		movl	$100, %edx
 5539      00
 5540 004c 488D3D00 		leaq	sRGB_xy(%rip), %rdi
 5540      000000
 5541              	.LVL502:
1888:fltk-1.3.4-1/png/png.c ****          100))
 5542              		.loc 1 1888 8 discriminator 1 view .LVU1575
 5543 0053 E8000000 		call	png_colorspace_endpoints_match
 5543      00
 5544              	.LVL503:
1887:fltk-1.3.4-1/png/png.c ****       !png_colorspace_endpoints_match(&sRGB_xy, &colorspace->end_points_xy,
 5545              		.loc 1 1887 65 discriminator 1 view .LVU1576
 5546 0058 85C0     		testl	%eax, %eax
 5547 005a 7514     		jne	.L558
1890:fltk-1.3.4-1/png/png.c ****          PNG_CHUNK_ERROR);
 5548              		.loc 1 1890 7 is_stmt 1 view .LVU1577
 5549 005c BA020000 		movl	$2, %edx
 5549      00
 5550 0061 488D3500 		leaq	.LC43(%rip), %rsi
 5550      000000
 5551 0068 4C89E7   		movq	%r12, %rdi
 5552 006b E8000000 		call	png_chunk_report@PLT
 5552      00
 5553              	.LVL504:
 5554              		.p2align 4,,10
 5555              		.p2align 3
 5556              	.L558:
1896:fltk-1.3.4-1/png/png.c ****       2/*from sRGB*/);
 5557              		.loc 1 1896 4 view .LVU1578
1896:fltk-1.3.4-1/png/png.c ****       2/*from sRGB*/);
 5558              		.loc 1 1896 10 is_stmt 0 view .LVU1579
 5559 0070 8B7500   		movl	0(%rbp), %esi
 5560 0073 488D554A 		leaq	74(%rbp), %rdx
 5561 0077 41B80200 		movl	$2, %r8d
 5561      0000
 5562 007d 4C89E7   		movq	%r12, %rdi
 5563 0080 B98FB100 		movl	$45455, %ecx
 5563      00
 5564 0085 E8000000 		call	png_colorspace_check_gamma.isra.0
 5564      00
 5565              	.LVL505:
1900:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_INTENT;
 5566              		.loc 1 1900 4 is_stmt 1 view .LVU1580
1914:fltk-1.3.4-1/png/png.c ****       (PNG_COLORSPACE_MATCHES_sRGB|PNG_COLORSPACE_FROM_sRGB);
 5567              		.loc 1 1914 22 is_stmt 0 view .LVU1581
 5568 008a 66814D4A 		orw	$231, 74(%rbp)
 5568      E700
1910:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_GAMMA;
 5569              		.loc 1 1910 22 view .LVU1582
 5570 0090 48B88FB1 		movabsq	$274877906989455, %rax
 5570      000000FA 
 5570      0000
 5571 009a 48894500 		movq	%rax, 0(%rbp)
1904:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = sRGB_XYZ;
 5572              		.loc 1 1904 30 view .LVU1583
 5573 009e 48B8E880 		movabsq	$128849018913000, %rax
 5573      00003075 
 5573      0000
 5574 00a8 48894508 		movq	%rax, 8(%rbp)
 5575 00ac 48B860EA 		movabsq	$64424509500000, %rax
 5575      0000983A 
 5575      0000
 5576 00b6 48894510 		movq	%rax, 16(%rbp)
 5577 00ba 48B87017 		movabsq	$134303627351920, %rax
 5577      0000267A 
 5577      0000
 5578 00c4 48894518 		movq	%rax, 24(%rbp)
 5579 00c8 48B88480 		movabsq	$177120156352644, %rax
 5579      000017A1 
 5579      0000
 5580 00d2 48894520 		movq	%rax, 32(%rbp)
1905:fltk-1.3.4-1/png/png.c ****    colorspace->flags |=
 5581              		.loc 1 1905 31 view .LVU1584
 5582 00d6 48B81053 		movabsq	$8302171804432, %rax
 5582      00008D07 
 5582      0000
 5583 00e0 48894528 		movq	%rax, 40(%rbp)
 5584 00e4 48B8AE8B 		movabsq	$307163176143790, %rax
 5584      00005D17 
 5584      0100
 5585 00ee 48894530 		movq	%rax, 48(%rbp)
 5586 00f2 48B88F2E 		movabsq	$77515569770127, %rax
 5586      00008046 
 5586      0000
1900:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_INTENT;
 5587              		.loc 1 1900 35 view .LVU1585
 5588 00fc 66895D48 		movw	%bx, 72(%rbp)
1901:fltk-1.3.4-1/png/png.c **** 
 5589              		.loc 1 1901 4 is_stmt 1 view .LVU1586
1904:fltk-1.3.4-1/png/png.c ****    colorspace->end_points_XYZ = sRGB_XYZ;
 5590              		.loc 1 1904 4 view .LVU1587
1905:fltk-1.3.4-1/png/png.c ****    colorspace->flags |=
 5591              		.loc 1 1905 4 view .LVU1588
1906:fltk-1.3.4-1/png/png.c ****       (PNG_COLORSPACE_HAVE_ENDPOINTS|PNG_COLORSPACE_ENDPOINTS_MATCH_sRGB);
 5592              		.loc 1 1906 4 view .LVU1589
1910:fltk-1.3.4-1/png/png.c ****    colorspace->flags |= PNG_COLORSPACE_HAVE_GAMMA;
 5593              		.loc 1 1910 4 view .LVU1590
1905:fltk-1.3.4-1/png/png.c ****    colorspace->flags |=
 5594              		.loc 1 1905 31 is_stmt 0 view .LVU1591
 5595 0100 48894538 		movq	%rax, 56(%rbp)
 5596 0104 48B8331C 		movabsq	$408249526393907, %rax
 5596      00004D73 
 5596      0100
 5597 010e 48894540 		movq	%rax, 64(%rbp)
1911:fltk-1.3.4-1/png/png.c **** 
 5598              		.loc 1 1911 4 is_stmt 1 view .LVU1592
1914:fltk-1.3.4-1/png/png.c ****       (PNG_COLORSPACE_MATCHES_sRGB|PNG_COLORSPACE_FROM_sRGB);
 5599              		.loc 1 1914 4 view .LVU1593
1917:fltk-1.3.4-1/png/png.c **** }
 5600              		.loc 1 1917 4 view .LVU1594
1917:fltk-1.3.4-1/png/png.c **** }
 5601              		.loc 1 1917 11 is_stmt 0 view .LVU1595
 5602 0112 B8010000 		movl	$1, %eax
 5602      00
 5603              	.L553:
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5604              		.loc 1 1918 1 view .LVU1596
 5605 0117 5B       		popq	%rbx
 5606              		.cfi_remember_state
 5607              		.cfi_def_cfa_offset 24
 5608              	.LVL506:
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5609              		.loc 1 1918 1 view .LVU1597
 5610 0118 5D       		popq	%rbp
 5611              		.cfi_def_cfa_offset 16
 5612              	.LVL507:
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5613              		.loc 1 1918 1 view .LVU1598
 5614 0119 415C     		popq	%r12
 5615              		.cfi_def_cfa_offset 8
 5616              	.LVL508:
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5617              		.loc 1 1918 1 view .LVU1599
 5618 011b C3       		ret
 5619              	.LVL509:
 5620 011c 0F1F4000 		.p2align 4,,10
 5621              		.p2align 3
 5622              	.L571:
 5623              		.cfi_restore_state
1874:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, "sRGB",
 5624              		.loc 1 1874 17 discriminator 1 view .LVU1600
 5625 0120 0FB75648 		movzwl	72(%rsi), %edx
 5626              	.LVL510:
1873:fltk-1.3.4-1/png/png.c ****       colorspace->rendering_intent != intent)
 5627              		.loc 1 1873 62 discriminator 1 view .LVU1601
 5628 0124 39DA     		cmpl	%ebx, %edx
 5629 0126 0F840BFF 		je	.L556
 5629      FFFF
1875:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "inconsistent rendering intents");
 5630              		.loc 1 1875 7 is_stmt 1 view .LVU1602
1875:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "inconsistent rendering intents");
 5631              		.loc 1 1875 14 is_stmt 0 view .LVU1603
 5632 012c 89D9     		movl	%ebx, %ecx
 5633 012e 4C8D0500 		leaq	.LC41(%rip), %r8
 5633      000000
 5634              	.L570:
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5635              		.loc 1 1918 1 view .LVU1604
 5636 0135 5B       		popq	%rbx
 5637              		.cfi_restore 3
 5638              		.cfi_def_cfa_offset 24
 5639              	.LVL511:
1875:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "inconsistent rendering intents");
 5640              		.loc 1 1875 14 view .LVU1605
 5641 0136 4889EE   		movq	%rbp, %rsi
 5642              	.LVL512:
1875:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "inconsistent rendering intents");
 5643              		.loc 1 1875 14 view .LVU1606
 5644 0139 4C89E7   		movq	%r12, %rdi
 5645              	.LVL513:
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5646              		.loc 1 1918 1 view .LVU1607
 5647 013c 5D       		popq	%rbp
 5648              		.cfi_restore 6
 5649              		.cfi_def_cfa_offset 16
 5650              	.LVL514:
1875:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "inconsistent rendering intents");
 5651              		.loc 1 1875 14 view .LVU1608
 5652 013d 488D1500 		leaq	.LC40(%rip), %rdx
 5652      000000
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5653              		.loc 1 1918 1 view .LVU1609
 5654 0144 415C     		popq	%r12
 5655              		.cfi_restore 12
 5656              		.cfi_def_cfa_offset 8
 5657              	.LVL515:
1875:fltk-1.3.4-1/png/png.c ****          (unsigned)intent, "inconsistent rendering intents");
 5658              		.loc 1 1875 14 view .LVU1610
 5659 0146 E9000000 		jmp	png_icc_profile_error
 5659      00
 5660              	.LVL516:
 5661 014b 0F1F4400 		.p2align 4,,10
 5661      00
 5662              		.p2align 3
 5663              	.L559:
1858:fltk-1.3.4-1/png/png.c **** 
 5664              		.loc 1 1858 14 view .LVU1611
 5665 0150 31C0     		xorl	%eax, %eax
1918:fltk-1.3.4-1/png/png.c **** #endif /* sRGB */
 5666              		.loc 1 1918 1 view .LVU1612
 5667 0152 C3       		ret
 5668              	.LVL517:
 5669              		.p2align 4,,10
 5670 0153 0F1F4400 		.p2align 3
 5670      00
 5671              	.L572:
 5672              		.cfi_def_cfa_offset 32
 5673              		.cfi_offset 3, -32
 5674              		.cfi_offset 6, -24
 5675              		.cfi_offset 12, -16
1880:fltk-1.3.4-1/png/png.c ****       return 0;
 5676              		.loc 1 1880 7 is_stmt 1 view .LVU1613
 5677 0158 488D3500 		leaq	.LC42(%rip), %rsi
 5677      000000
 5678              	.LVL518:
1880:fltk-1.3.4-1/png/png.c ****       return 0;
 5679              		.loc 1 1880 7 is_stmt 0 view .LVU1614
 5680 015f 4C89E7   		movq	%r12, %rdi
 5681              	.LVL519:
1880:fltk-1.3.4-1/png/png.c ****       return 0;
 5682              		.loc 1 1880 7 view .LVU1615
 5683 0162 E8000000 		call	png_benign_error@PLT
 5683      00
 5684              	.LVL520:
1881:fltk-1.3.4-1/png/png.c ****    }
 5685              		.loc 1 1881 7 is_stmt 1 view .LVU1616
1881:fltk-1.3.4-1/png/png.c ****    }
 5686              		.loc 1 1881 14 is_stmt 0 view .LVU1617
 5687 0167 31C0     		xorl	%eax, %eax
 5688 0169 EBAC     		jmp	.L553
 5689              		.cfi_endproc
 5690              	.LFE87:
 5692              		.section	.rodata.png_icc_check_length.str1.1,"aMS",@progbits,1
 5693              	.LC44:
 5694 0000 746F6F20 		.string	"too short"
 5694      73686F72 
 5694      7400
 5695              		.section	.text.png_icc_check_length,"ax",@progbits
 5696              		.p2align 4
 5697              		.globl	png_icc_check_length
 5699              	png_icc_check_length:
 5700              	.LVL521:
 5701              	.LFB88:
1933:fltk-1.3.4-1/png/png.c ****    if (profile_length < 132)
 5702              		.loc 1 1933 1 is_stmt 1 view -0
 5703              		.cfi_startproc
1933:fltk-1.3.4-1/png/png.c ****    if (profile_length < 132)
 5704              		.loc 1 1933 1 is_stmt 0 view .LVU1619
 5705 0000 F30F1EFA 		endbr64
1934:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 5706              		.loc 1 1934 4 is_stmt 1 view .LVU1620
1934:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 5707              		.loc 1 1934 7 is_stmt 0 view .LVU1621
 5708 0004 81F98300 		cmpl	$131, %ecx
 5708      0000
 5709 000a 760C     		jbe	.L575
1939:fltk-1.3.4-1/png/png.c **** 
 5710              		.loc 1 1939 1 view .LVU1622
 5711 000c B8010000 		movl	$1, %eax
 5711      00
 5712 0011 C3       		ret
 5713              		.p2align 4,,10
 5714 0012 660F1F44 		.p2align 3
 5714      0000
 5715              	.L575:
 5716              	.LVL522:
 5717              	.LBB400:
 5718              	.LBI400:
1931:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length)
 5719              		.loc 1 1931 1 is_stmt 1 view .LVU1623
 5720              	.LBB401:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 5721              		.loc 1 1935 7 view .LVU1624
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 5722              		.loc 1 1935 14 is_stmt 0 view .LVU1625
 5723 0018 89C9     		movl	%ecx, %ecx
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 5724              		.loc 1 1935 14 view .LVU1626
 5725 001a 4C8D0500 		leaq	.LC44(%rip), %r8
 5725      000000
 5726 0021 E9000000 		jmp	png_icc_profile_error
 5726      00
 5727              	.LVL523:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 5728              		.loc 1 1935 14 view .LVU1627
 5729              	.LBE401:
 5730              	.LBE400:
 5731              		.cfi_endproc
 5732              	.LFE88:
 5734              		.section	.rodata.png_icc_check_header.str1.1,"aMS",@progbits,1
 5735              	.LC45:
 5736 0000 6C656E67 		.string	"length does not match profile"
 5736      74682064 
 5736      6F657320 
 5736      6E6F7420 
 5736      6D617463 
 5737              	.LC46:
 5738 001e 696E7661 		.string	"invalid length"
 5738      6C696420 
 5738      6C656E67 
 5738      746800
 5739              	.LC47:
 5740 002d 74616720 		.string	"tag count too large"
 5740      636F756E 
 5740      7420746F 
 5740      6F206C61 
 5740      72676500 
 5741              	.LC48:
 5742 0041 696E7661 		.string	"invalid rendering intent"
 5742      6C696420 
 5742      72656E64 
 5742      6572696E 
 5742      6720696E 
 5743              	.LC49:
 5744 005a 696E7465 		.string	"intent outside defined range"
 5744      6E74206F 
 5744      75747369 
 5744      64652064 
 5744      6566696E 
 5745              	.LC50:
 5746 0077 696E7661 		.string	"invalid signature"
 5746      6C696420 
 5746      7369676E 
 5746      61747572 
 5746      6500
 5747              	.LC51:
 5748 0089 50435320 		.string	"PCS illuminant is not D50"
 5748      696C6C75 
 5748      6D696E61 
 5748      6E742069 
 5748      73206E6F 
 5749              		.section	.rodata.png_icc_check_header.str1.8,"aMS",@progbits,1
 5750              		.align 8
 5751              	.LC52:
 5752 0000 52474220 		.string	"RGB color space not permitted on grayscale PNG"
 5752      636F6C6F 
 5752      72207370 
 5752      61636520 
 5752      6E6F7420 
 5753 002f 00       		.align 8
 5754              	.LC53:
 5755 0030 47726179 		.string	"Gray color space not permitted on RGB PNG"
 5755      20636F6C 
 5755      6F722073 
 5755      70616365 
 5755      206E6F74 
 5756 005a 00000000 		.align 8
 5756      0000
 5757              	.LC54:
 5758 0060 696E7661 		.string	"invalid ICC profile color space"
 5758      6C696420 
 5758      49434320 
 5758      70726F66 
 5758      696C6520 
 5759              		.align 8
 5760              	.LC55:
 5761 0080 696E7661 		.string	"invalid embedded Abstract ICC profile"
 5761      6C696420 
 5761      656D6265 
 5761      64646564 
 5761      20416273 
 5762 00a6 0000     		.align 8
 5763              	.LC56:
 5764 00a8 756E6578 		.string	"unexpected DeviceLink ICC profile class"
 5764      70656374 
 5764      65642044 
 5764      65766963 
 5764      654C696E 
 5765              		.align 8
 5766              	.LC57:
 5767 00d0 756E6578 		.string	"unexpected NamedColor ICC profile class"
 5767      70656374 
 5767      6564204E 
 5767      616D6564 
 5767      436F6C6F 
 5768              		.align 8
 5769              	.LC58:
 5770 00f8 756E7265 		.string	"unrecognized ICC profile class"
 5770      636F676E 
 5770      697A6564 
 5770      20494343 
 5770      2070726F 
 5771              		.section	.rodata.png_icc_check_header.str1.1
 5772              	.LC59:
 5773 00a3 756E6578 		.string	"unexpected ICC PCS encoding"
 5773      70656374 
 5773      65642049 
 5773      43432050 
 5773      43532065 
 5774              		.section	.text.png_icc_check_header,"ax",@progbits
 5775              		.p2align 4
 5776              		.globl	png_icc_check_header
 5778              	png_icc_check_header:
 5779              	.LVL524:
 5780              	.LFB89:
1945:fltk-1.3.4-1/png/png.c ****    png_uint_32 temp;
 5781              		.loc 1 1945 1 is_stmt 1 view -0
 5782              		.cfi_startproc
1945:fltk-1.3.4-1/png/png.c ****    png_uint_32 temp;
 5783              		.loc 1 1945 1 is_stmt 0 view .LVU1629
 5784 0000 F30F1EFA 		endbr64
1946:fltk-1.3.4-1/png/png.c **** 
 5785              		.loc 1 1946 4 is_stmt 1 view .LVU1630
1953:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
 5786              		.loc 1 1953 4 view .LVU1631
1945:fltk-1.3.4-1/png/png.c ****    png_uint_32 temp;
 5787              		.loc 1 1945 1 is_stmt 0 view .LVU1632
 5788 0004 4154     		pushq	%r12
 5789              		.cfi_def_cfa_offset 16
 5790              		.cfi_offset 12, -16
 5791 0006 55       		pushq	%rbp
 5792              		.cfi_def_cfa_offset 24
 5793              		.cfi_offset 6, -24
 5794 0007 4889F5   		movq	%rsi, %rbp
 5795 000a 53       		pushq	%rbx
 5796              		.cfi_def_cfa_offset 32
 5797              		.cfi_offset 3, -32
 5798 000b 4C89C3   		movq	%r8, %rbx
 5799 000e 4883EC10 		subq	$16, %rsp
 5800              		.cfi_def_cfa_offset 48
1953:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
 5801              		.loc 1 1953 11 view .LVU1633
 5802 0012 410FB600 		movzbl	(%r8), %eax
 5803 0016 0FB67303 		movzbl	3(%rbx), %esi
 5804              	.LVL525:
1953:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
 5805              		.loc 1 1953 11 view .LVU1634
 5806 001a C1E018   		sall	$24, %eax
 5807 001d 4189C0   		movl	%eax, %r8d
 5808              	.LVL526:
1953:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
 5809              		.loc 1 1953 11 view .LVU1635
 5810 0020 0FB64301 		movzbl	1(%rbx), %eax
 5811 0024 C1E010   		sall	$16, %eax
 5812 0027 4401C0   		addl	%r8d, %eax
1953:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
 5813              		.loc 1 1953 9 view .LVU1636
 5814 002a 01C6     		addl	%eax, %esi
1953:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
 5815              		.loc 1 1953 11 view .LVU1637
 5816 002c 0FB64302 		movzbl	2(%rbx), %eax
 5817 0030 C1E008   		sall	$8, %eax
1953:fltk-1.3.4-1/png/png.c ****    if (temp != profile_length)
 5818              		.loc 1 1953 9 view .LVU1638
 5819 0033 01F0     		addl	%esi, %eax
 5820              	.LVL527:
1954:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5821              		.loc 1 1954 4 is_stmt 1 view .LVU1639
1954:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5822              		.loc 1 1954 7 is_stmt 0 view .LVU1640
 5823 0035 39C8     		cmpl	%ecx, %eax
 5824 0037 0F85CB01 		jne	.L624
 5824      0000
 5825              	.LBB404:
 5826              	.LBB405:
1959:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 5827              		.loc 1 1959 7 view .LVU1641
 5828 003d 807B0803 		cmpb	$3, 8(%rbx)
 5829 0041 4589CC   		movl	%r9d, %r12d
 5830              	.LVL528:
1959:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 5831              		.loc 1 1959 7 view .LVU1642
 5832              	.LBE405:
 5833              	.LBI404:
1942:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length,
 5834              		.loc 1 1942 1 is_stmt 1 view .LVU1643
 5835              	.LBB406:
1958:fltk-1.3.4-1/png/png.c ****    if (temp > 3 && (profile_length & 3))
 5836              		.loc 1 1958 4 view .LVU1644
1959:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 5837              		.loc 1 1959 4 view .LVU1645
1959:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 5838              		.loc 1 1959 7 is_stmt 0 view .LVU1646
 5839 0044 7608     		jbe	.L578
1959:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 5840              		.loc 1 1959 17 view .LVU1647
 5841 0046 A803     		testb	$3, %al
 5842 0048 0F850202 		jne	.L625
 5842      0000
 5843              	.L578:
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5844              		.loc 1 1963 4 is_stmt 1 view .LVU1648
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5845              		.loc 1 1963 11 is_stmt 0 view .LVU1649
 5846 004e 0FB68380 		movzbl	128(%rbx), %eax
 5846      000000
 5847              	.LVL529:
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5848              		.loc 1 1963 11 view .LVU1650
 5849 0055 0FB6B383 		movzbl	131(%rbx), %esi
 5849      000000
 5850              	.LVL530:
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5851              		.loc 1 1963 11 view .LVU1651
 5852 005c C1E018   		sall	$24, %eax
 5853 005f 4189C0   		movl	%eax, %r8d
 5854              	.LVL531:
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5855              		.loc 1 1963 11 view .LVU1652
 5856 0062 0FB68381 		movzbl	129(%rbx), %eax
 5856      000000
 5857 0069 C1E010   		sall	$16, %eax
 5858 006c 4401C0   		addl	%r8d, %eax
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5859              		.loc 1 1963 9 view .LVU1653
 5860 006f 01C6     		addl	%eax, %esi
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5861              		.loc 1 1963 11 view .LVU1654
 5862 0071 0FB68382 		movzbl	130(%rbx), %eax
 5862      000000
 5863 0078 C1E008   		sall	$8, %eax
1963:fltk-1.3.4-1/png/png.c ****    if (temp > 357913930 || /* (2^32-4-132)/12: maximum possible tag count */
 5864              		.loc 1 1963 9 view .LVU1655
 5865 007b 01F0     		addl	%esi, %eax
 5866              	.LVL532:
1964:fltk-1.3.4-1/png/png.c ****       profile_length < 132+12*temp) /* truncated tag table */
 5867              		.loc 1 1964 4 is_stmt 1 view .LVU1656
1964:fltk-1.3.4-1/png/png.c ****       profile_length < 132+12*temp) /* truncated tag table */
 5868              		.loc 1 1964 7 is_stmt 0 view .LVU1657
 5869 007d 3D4A5555 		cmpl	$357913930, %eax
 5869      15
 5870 0082 0F876001 		ja	.L579
 5870      0000
1965:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5871              		.loc 1 1965 30 view .LVU1658
 5872 0088 8D3440   		leal	(%rax,%rax,2), %esi
1965:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5873              		.loc 1 1965 27 view .LVU1659
 5874 008b 8D34B584 		leal	132(,%rsi,4), %esi
 5874      000000
1964:fltk-1.3.4-1/png/png.c ****       profile_length < 132+12*temp) /* truncated tag table */
 5875              		.loc 1 1964 25 view .LVU1660
 5876 0092 39F1     		cmpl	%esi, %ecx
 5877 0094 0F824E01 		jb	.L579
 5877      0000
1972:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
 5878              		.loc 1 1972 4 is_stmt 1 view .LVU1661
1972:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
 5879              		.loc 1 1972 11 is_stmt 0 view .LVU1662
 5880 009a 0FB64B40 		movzbl	64(%rbx), %ecx
 5881              	.LVL533:
1972:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
 5882              		.loc 1 1972 11 view .LVU1663
 5883 009e 0FB64343 		movzbl	67(%rbx), %eax
 5884              	.LVL534:
1974:fltk-1.3.4-1/png/png.c ****          "invalid rendering intent");
 5885              		.loc 1 1974 14 view .LVU1664
 5886 00a2 4C8D0500 		leaq	.LC48(%rip), %r8
 5886      000000
 5887              	.LVL535:
1972:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
 5888              		.loc 1 1972 11 view .LVU1665
 5889 00a9 89CE     		movl	%ecx, %esi
 5890 00ab 0FB64B41 		movzbl	65(%rbx), %ecx
 5891 00af C1E618   		sall	$24, %esi
 5892 00b2 C1E110   		sall	$16, %ecx
 5893 00b5 01F1     		addl	%esi, %ecx
1972:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
 5894              		.loc 1 1972 9 view .LVU1666
 5895 00b7 01C8     		addl	%ecx, %eax
1972:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
 5896              		.loc 1 1972 11 view .LVU1667
 5897 00b9 0FB64B42 		movzbl	66(%rbx), %ecx
 5898 00bd C1E108   		sall	$8, %ecx
1972:fltk-1.3.4-1/png/png.c ****    if (temp >= 0xffff) /* The ICC limit */
 5899              		.loc 1 1972 9 view .LVU1668
 5900 00c0 01C1     		addl	%eax, %ecx
 5901              	.LVL536:
1973:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5902              		.loc 1 1973 4 is_stmt 1 view .LVU1669
1973:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5903              		.loc 1 1973 7 is_stmt 0 view .LVU1670
 5904 00c2 81F9FEFF 		cmpl	$65534, %ecx
 5904      0000
 5905 00c8 0F872301 		ja	.L623
 5905      0000
1980:fltk-1.3.4-1/png/png.c ****       (void)png_icc_profile_error(png_ptr, NULL, name, temp,
 5906              		.loc 1 1980 4 is_stmt 1 view .LVU1671
1980:fltk-1.3.4-1/png/png.c ****       (void)png_icc_profile_error(png_ptr, NULL, name, temp,
 5907              		.loc 1 1980 7 is_stmt 0 view .LVU1672
 5908 00ce 83F903   		cmpl	$3, %ecx
 5909 00d1 0F875101 		ja	.L626
 5909      0000
 5910              	.LVL537:
 5911              	.L582:
1996:fltk-1.3.4-1/png/png.c ****    if (temp != 0x61637370)
 5912              		.loc 1 1996 4 is_stmt 1 view .LVU1673
1996:fltk-1.3.4-1/png/png.c ****    if (temp != 0x61637370)
 5913              		.loc 1 1996 11 is_stmt 0 view .LVU1674
 5914 00d7 0FB64B24 		movzbl	36(%rbx), %ecx
 5915 00db 0FB64327 		movzbl	39(%rbx), %eax
1998:fltk-1.3.4-1/png/png.c ****          "invalid signature");
 5916              		.loc 1 1998 14 view .LVU1675
 5917 00df 4C8D0500 		leaq	.LC50(%rip), %r8
 5917      000000
1996:fltk-1.3.4-1/png/png.c ****    if (temp != 0x61637370)
 5918              		.loc 1 1996 11 view .LVU1676
 5919 00e6 89CE     		movl	%ecx, %esi
 5920 00e8 0FB64B25 		movzbl	37(%rbx), %ecx
 5921 00ec C1E618   		sall	$24, %esi
 5922 00ef C1E110   		sall	$16, %ecx
 5923 00f2 01F1     		addl	%esi, %ecx
1996:fltk-1.3.4-1/png/png.c ****    if (temp != 0x61637370)
 5924              		.loc 1 1996 9 view .LVU1677
 5925 00f4 01C8     		addl	%ecx, %eax
1996:fltk-1.3.4-1/png/png.c ****    if (temp != 0x61637370)
 5926              		.loc 1 1996 11 view .LVU1678
 5927 00f6 0FB64B26 		movzbl	38(%rbx), %ecx
 5928 00fa C1E108   		sall	$8, %ecx
1996:fltk-1.3.4-1/png/png.c ****    if (temp != 0x61637370)
 5929              		.loc 1 1996 9 view .LVU1679
 5930 00fd 01C1     		addl	%eax, %ecx
 5931              	.LVL538:
1997:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5932              		.loc 1 1997 4 is_stmt 1 view .LVU1680
1997:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5933              		.loc 1 1997 7 is_stmt 0 view .LVU1681
 5934 00ff 81F97073 		cmpl	$1633907568, %ecx
 5934      6361
 5935 0105 0F85E600 		jne	.L623
 5935      0000
2008:fltk-1.3.4-1/png/png.c ****       (void)png_icc_profile_error(png_ptr, NULL, name, 0/*no tag value*/,
 5936              		.loc 1 2008 4 is_stmt 1 view .LVU1682
2008:fltk-1.3.4-1/png/png.c ****       (void)png_icc_profile_error(png_ptr, NULL, name, 0/*no tag value*/,
 5937              		.loc 1 2008 8 is_stmt 0 view .LVU1683
 5938 010b 488B3500 		movq	D50_nCIEXYZ(%rip), %rsi
 5938      000000
 5939 0112 48397344 		cmpq	%rsi, 68(%rbx)
 5940 0116 0F84E401 		je	.L627
 5940      0000
 5941              	.L584:
2009:fltk-1.3.4-1/png/png.c ****          "PCS illuminant is not D50");
 5942              		.loc 1 2009 7 is_stmt 1 view .LVU1684
2009:fltk-1.3.4-1/png/png.c ****          "PCS illuminant is not D50");
 5943              		.loc 1 2009 13 is_stmt 0 view .LVU1685
 5944 011c 4C8D0500 		leaq	.LC51(%rip), %r8
 5944      000000
 5945 0123 31C9     		xorl	%ecx, %ecx
 5946              	.LVL539:
2009:fltk-1.3.4-1/png/png.c ****          "PCS illuminant is not D50");
 5947              		.loc 1 2009 13 view .LVU1686
 5948 0125 31F6     		xorl	%esi, %esi
 5949 0127 48895424 		movq	%rdx, 8(%rsp)
 5949      08
 5950 012c 48893C24 		movq	%rdi, (%rsp)
 5951 0130 E8000000 		call	png_icc_profile_error
 5951      00
 5952              	.LVL540:
2009:fltk-1.3.4-1/png/png.c ****          "PCS illuminant is not D50");
 5953              		.loc 1 2009 13 view .LVU1687
 5954 0135 488B5424 		movq	8(%rsp), %rdx
 5954      08
 5955 013a 488B3C24 		movq	(%rsp), %rdi
 5956              	.L586:
2032:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5957              		.loc 1 2032 4 is_stmt 1 view .LVU1688
2032:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5958              		.loc 1 2032 11 is_stmt 0 view .LVU1689
 5959 013e 0FB64B10 		movzbl	16(%rbx), %ecx
 5960 0142 0FB64313 		movzbl	19(%rbx), %eax
 5961 0146 89CE     		movl	%ecx, %esi
 5962 0148 0FB64B11 		movzbl	17(%rbx), %ecx
 5963 014c C1E618   		sall	$24, %esi
 5964 014f C1E110   		sall	$16, %ecx
 5965 0152 01F1     		addl	%esi, %ecx
2032:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5966              		.loc 1 2032 9 view .LVU1690
 5967 0154 01C8     		addl	%ecx, %eax
2032:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5968              		.loc 1 2032 11 view .LVU1691
 5969 0156 0FB64B12 		movzbl	18(%rbx), %ecx
 5970 015a C1E108   		sall	$8, %ecx
2032:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5971              		.loc 1 2032 9 view .LVU1692
 5972 015d 01C1     		addl	%eax, %ecx
 5973              	.LVL541:
2033:fltk-1.3.4-1/png/png.c ****    {
 5974              		.loc 1 2033 4 is_stmt 1 view .LVU1693
 5975 015f 81F95941 		cmpl	$1196573017, %ecx
 5975      5247
 5976 0165 0F84BD01 		je	.L587
 5976      0000
 5977 016b 81F92042 		cmpl	$1380401696, %ecx
 5977      4752
 5978 0171 0F85A101 		jne	.L588
 5978      0000
2036:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5979              		.loc 1 2036 10 view .LVU1694
2036:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5980              		.loc 1 2036 13 is_stmt 0 view .LVU1695
 5981 0177 4183E402 		andl	$2, %r12d
 5982              	.LVL542:
2037:fltk-1.3.4-1/png/png.c ****                "RGB color space not permitted on grayscale PNG");
 5983              		.loc 1 2037 20 view .LVU1696
 5984 017b 4C8D0500 		leaq	.LC52(%rip), %r8
 5984      000000
 5985 0182 B9204247 		movl	$1380401696, %ecx
 5985      52
 5986              	.LVL543:
2036:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
 5987              		.loc 1 2036 13 view .LVU1697
 5988 0187 7468     		je	.L623
 5989              	.L589:
2061:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5990              		.loc 1 2061 4 is_stmt 1 view .LVU1698
2061:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5991              		.loc 1 2061 11 is_stmt 0 view .LVU1699
 5992 0189 0FB64B0C 		movzbl	12(%rbx), %ecx
 5993 018d 0FB6430F 		movzbl	15(%rbx), %eax
 5994              	.LVL544:
2061:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5995              		.loc 1 2061 11 view .LVU1700
 5996 0191 89CE     		movl	%ecx, %esi
 5997              	.LVL545:
2061:fltk-1.3.4-1/png/png.c ****    switch (temp)
 5998              		.loc 1 2061 11 view .LVU1701
 5999 0193 0FB64B0D 		movzbl	13(%rbx), %ecx
 6000 0197 C1E618   		sall	$24, %esi
 6001 019a C1E110   		sall	$16, %ecx
 6002 019d 01F1     		addl	%esi, %ecx
2061:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6003              		.loc 1 2061 9 view .LVU1702
 6004 019f 01C8     		addl	%ecx, %eax
2061:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6005              		.loc 1 2061 11 view .LVU1703
 6006 01a1 0FB64B0E 		movzbl	14(%rbx), %ecx
 6007 01a5 C1E108   		sall	$8, %ecx
2061:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6008              		.loc 1 2061 9 view .LVU1704
 6009 01a8 01C1     		addl	%eax, %ecx
 6010              	.LVL546:
2062:fltk-1.3.4-1/png/png.c ****    {
 6011              		.loc 1 2062 4 is_stmt 1 view .LVU1705
 6012 01aa 81F97274 		cmpl	$1835955314, %ecx
 6012      6E6D
 6013 01b0 0F84FA00 		je	.L590
 6013      0000
 6014 01b6 0F87A400 		ja	.L591
 6014      0000
 6015 01bc 81F97473 		cmpl	$1633842036, %ecx
 6015      6261
 6016 01c2 0F84C001 		je	.L592
 6016      0000
 6017 01c8 81F96B6E 		cmpl	$1818848875, %ecx
 6017      696C
 6018 01ce 0F85A000 		jne	.L594
 6018      0000
2083:fltk-1.3.4-1/png/png.c ****             "unexpected DeviceLink ICC profile class");
 6019              		.loc 1 2083 10 view .LVU1706
2083:fltk-1.3.4-1/png/png.c ****             "unexpected DeviceLink ICC profile class");
 6020              		.loc 1 2083 17 is_stmt 0 view .LVU1707
 6021 01d4 4C8D0500 		leaq	.LC56(%rip), %r8
 6021      000000
 6022 01db B96B6E69 		movl	$1818848875, %ecx
 6022      6C
 6023              	.LVL547:
2083:fltk-1.3.4-1/png/png.c ****             "unexpected DeviceLink ICC profile class");
 6024              		.loc 1 2083 17 view .LVU1708
 6025 01e0 EB0F     		jmp	.L623
 6026              	.LVL548:
 6027              		.p2align 4,,10
 6028 01e2 660F1F44 		.p2align 3
 6028      0000
 6029              	.L579:
1966:fltk-1.3.4-1/png/png.c ****          "tag count too large");
 6030              		.loc 1 1966 7 is_stmt 1 view .LVU1709
1966:fltk-1.3.4-1/png/png.c ****          "tag count too large");
 6031              		.loc 1 1966 14 is_stmt 0 view .LVU1710
 6032 01e8 89C1     		movl	%eax, %ecx
 6033              	.LVL549:
1966:fltk-1.3.4-1/png/png.c ****          "tag count too large");
 6034              		.loc 1 1966 14 view .LVU1711
 6035 01ea 4C8D0500 		leaq	.LC47(%rip), %r8
 6035      000000
 6036              	.LVL550:
 6037              	.L623:
1966:fltk-1.3.4-1/png/png.c ****          "tag count too large");
 6038              		.loc 1 1966 14 view .LVU1712
 6039              	.LBE406:
 6040              	.LBE404:
2122:fltk-1.3.4-1/png/png.c **** 
 6041              		.loc 1 2122 1 view .LVU1713
 6042 01f1 4883C410 		addq	$16, %rsp
 6043              		.cfi_remember_state
 6044              		.cfi_def_cfa_offset 32
 6045              	.LBB412:
 6046              	.LBB407:
2117:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
 6047              		.loc 1 2117 17 view .LVU1714
 6048 01f5 4889EE   		movq	%rbp, %rsi
 6049              	.LBE407:
 6050              	.LBE412:
2122:fltk-1.3.4-1/png/png.c **** 
 6051              		.loc 1 2122 1 view .LVU1715
 6052 01f8 5B       		popq	%rbx
 6053              		.cfi_def_cfa_offset 24
 6054              	.LVL551:
2122:fltk-1.3.4-1/png/png.c **** 
 6055              		.loc 1 2122 1 view .LVU1716
 6056 01f9 5D       		popq	%rbp
 6057              		.cfi_def_cfa_offset 16
 6058              	.LVL552:
2122:fltk-1.3.4-1/png/png.c **** 
 6059              		.loc 1 2122 1 view .LVU1717
 6060 01fa 415C     		popq	%r12
 6061              		.cfi_def_cfa_offset 8
 6062              	.LBB413:
 6063              	.LBB408:
2117:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
 6064              		.loc 1 2117 17 view .LVU1718
 6065 01fc E9000000 		jmp	png_icc_profile_error
 6065      00
 6066              	.LVL553:
 6067              		.p2align 4,,10
 6068 0201 0F1F8000 		.p2align 3
 6068      000000
 6069              	.L624:
 6070              		.cfi_restore_state
2117:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
 6071              		.loc 1 2117 17 view .LVU1719
 6072              	.LBE408:
 6073              	.LBE413:
1955:fltk-1.3.4-1/png/png.c ****          "length does not match profile");
 6074              		.loc 1 1955 7 is_stmt 1 view .LVU1720
2122:fltk-1.3.4-1/png/png.c **** 
 6075              		.loc 1 2122 1 is_stmt 0 view .LVU1721
 6076 0208 4883C410 		addq	$16, %rsp
 6077              		.cfi_remember_state
 6078              		.cfi_def_cfa_offset 32
 6079              	.LBB414:
 6080              	.LBB409:
2117:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
 6081              		.loc 1 2117 17 view .LVU1722
 6082 020c 4889EE   		movq	%rbp, %rsi
 6083              	.LBE409:
 6084              	.LBE414:
1955:fltk-1.3.4-1/png/png.c ****          "length does not match profile");
 6085              		.loc 1 1955 14 view .LVU1723
 6086 020f 4C8D0500 		leaq	.LC45(%rip), %r8
 6086      000000
 6087 0216 89C1     		movl	%eax, %ecx
 6088              	.LVL554:
2122:fltk-1.3.4-1/png/png.c **** 
 6089              		.loc 1 2122 1 view .LVU1724
 6090 0218 5B       		popq	%rbx
 6091              		.cfi_def_cfa_offset 24
 6092              	.LVL555:
2122:fltk-1.3.4-1/png/png.c **** 
 6093              		.loc 1 2122 1 view .LVU1725
 6094 0219 5D       		popq	%rbp
 6095              		.cfi_def_cfa_offset 16
 6096              	.LVL556:
2122:fltk-1.3.4-1/png/png.c **** 
 6097              		.loc 1 2122 1 view .LVU1726
 6098 021a 415C     		popq	%r12
 6099              		.cfi_def_cfa_offset 8
 6100              	.LBB415:
 6101              	.LBB410:
2117:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
 6102              		.loc 1 2117 17 view .LVU1727
 6103 021c E9000000 		jmp	png_icc_profile_error
 6103      00
 6104              	.LVL557:
 6105              		.p2align 4,,10
 6106 0221 0F1F8000 		.p2align 3
 6106      000000
 6107              	.L626:
 6108              		.cfi_restore_state
1981:fltk-1.3.4-1/png/png.c ****          "intent outside defined range");
 6109              		.loc 1 1981 7 is_stmt 1 view .LVU1728
1981:fltk-1.3.4-1/png/png.c ****          "intent outside defined range");
 6110              		.loc 1 1981 13 is_stmt 0 view .LVU1729
 6111 0228 4C8D0500 		leaq	.LC49(%rip), %r8
 6111      000000
 6112 022f 31F6     		xorl	%esi, %esi
 6113 0231 48895424 		movq	%rdx, 8(%rsp)
 6113      08
 6114 0236 48893C24 		movq	%rdi, (%rsp)
 6115 023a E8000000 		call	png_icc_profile_error
 6115      00
 6116              	.LVL558:
1981:fltk-1.3.4-1/png/png.c ****          "intent outside defined range");
 6117              		.loc 1 1981 13 view .LVU1730
 6118 023f 488B5424 		movq	8(%rsp), %rdx
 6118      08
 6119 0244 488B3C24 		movq	(%rsp), %rdi
 6120 0248 E98AFEFF 		jmp	.L582
 6120      FF
 6121              	.LVL559:
 6122 024d 0F1F00   		.p2align 4,,10
 6123              		.p2align 3
 6124              	.L625:
1960:fltk-1.3.4-1/png/png.c ****          "invalid length");
 6125              		.loc 1 1960 7 is_stmt 1 view .LVU1731
1960:fltk-1.3.4-1/png/png.c ****          "invalid length");
 6126              		.loc 1 1960 14 is_stmt 0 view .LVU1732
 6127 0250 89C1     		movl	%eax, %ecx
 6128              	.LVL560:
1960:fltk-1.3.4-1/png/png.c ****          "invalid length");
 6129              		.loc 1 1960 14 view .LVU1733
 6130 0252 4C8D0500 		leaq	.LC46(%rip), %r8
 6130      000000
 6131 0259 EB96     		jmp	.L623
 6132              	.LVL561:
 6133 025b 0F1F4400 		.p2align 4,,10
 6133      00
 6134              		.p2align 3
 6135              	.L591:
2062:fltk-1.3.4-1/png/png.c ****    {
 6136              		.loc 1 2062 4 view .LVU1734
 6137 0260 81F96C63 		cmpl	$1852662636, %ecx
 6137      6D6E
 6138 0266 0F84EC00 		je	.L595
 6138      0000
 6139 026c 81F96B63 		cmpl	$1852662635, %ecx
 6139      6D6E
 6140 0272 772C     		ja	.L628
 6141              	.L594:
2101:fltk-1.3.4-1/png/png.c ****             "unrecognized ICC profile class");
 6142              		.loc 1 2101 10 is_stmt 1 view .LVU1735
2101:fltk-1.3.4-1/png/png.c ****             "unrecognized ICC profile class");
 6143              		.loc 1 2101 16 is_stmt 0 view .LVU1736
 6144 0274 4C8D0500 		leaq	.LC58(%rip), %r8
 6144      000000
 6145 027b 31F6     		xorl	%esi, %esi
 6146 027d 48895424 		movq	%rdx, 8(%rsp)
 6146      08
 6147 0282 48893C24 		movq	%rdi, (%rsp)
 6148 0286 E8000000 		call	png_icc_profile_error
 6148      00
 6149              	.LVL562:
2101:fltk-1.3.4-1/png/png.c ****             "unrecognized ICC profile class");
 6150              		.loc 1 2101 16 view .LVU1737
 6151 028b 488B5424 		movq	8(%rsp), %rdx
 6151      08
 6152 0290 488B3C24 		movq	(%rsp), %rdi
2103:fltk-1.3.4-1/png/png.c ****    }
 6153              		.loc 1 2103 10 is_stmt 1 view .LVU1738
 6154 0294 EB1A     		jmp	.L590
 6155              	.LVL563:
 6156 0296 662E0F1F 		.p2align 4,,10
 6156      84000000 
 6156      0000
 6157              		.p2align 3
 6158              	.L628:
2062:fltk-1.3.4-1/png/png.c ****    {
 6159              		.loc 1 2062 4 is_stmt 0 view .LVU1739
 6160 02a0 81F9726E 		cmpl	$1935896178, %ecx
 6160      6373
 6161 02a6 7408     		je	.L590
 6162 02a8 81F96361 		cmpl	$1936744803, %ecx
 6162      7073
 6163 02ae 753F     		jne	.L629
 6164              	.LVL564:
 6165              	.L590:
2109:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6166              		.loc 1 2109 4 is_stmt 1 view .LVU1740
2109:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6167              		.loc 1 2109 11 is_stmt 0 view .LVU1741
 6168 02b0 0FB64B14 		movzbl	20(%rbx), %ecx
 6169 02b4 0FB64317 		movzbl	23(%rbx), %eax
 6170 02b8 89CE     		movl	%ecx, %esi
 6171 02ba 0FB64B15 		movzbl	21(%rbx), %ecx
 6172 02be C1E618   		sall	$24, %esi
 6173 02c1 C1E110   		sall	$16, %ecx
 6174 02c4 01F1     		addl	%esi, %ecx
2109:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6175              		.loc 1 2109 9 view .LVU1742
 6176 02c6 01C8     		addl	%ecx, %eax
2109:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6177              		.loc 1 2109 11 view .LVU1743
 6178 02c8 0FB64B16 		movzbl	22(%rbx), %ecx
 6179 02cc C1E108   		sall	$8, %ecx
2109:fltk-1.3.4-1/png/png.c ****    switch (temp)
 6180              		.loc 1 2109 9 view .LVU1744
 6181 02cf 01C1     		addl	%eax, %ecx
 6182              	.LVL565:
2110:fltk-1.3.4-1/png/png.c ****    {
 6183              		.loc 1 2110 4 is_stmt 1 view .LVU1745
 6184 02d1 81F92062 		cmpl	$1281450528, %ecx
 6184      614C
 6185 02d7 7408     		je	.L576
 6186 02d9 81F9205A 		cmpl	$1482250784, %ecx
 6186      5958
 6187 02df 7567     		jne	.L630
 6188              	.L576:
 6189              	.LBE410:
 6190              	.LBE415:
2122:fltk-1.3.4-1/png/png.c **** 
 6191              		.loc 1 2122 1 is_stmt 0 view .LVU1746
 6192 02e1 4883C410 		addq	$16, %rsp
 6193              		.cfi_remember_state
 6194              		.cfi_def_cfa_offset 32
 6195 02e5 B8010000 		movl	$1, %eax
 6195      00
 6196 02ea 5B       		popq	%rbx
 6197              		.cfi_def_cfa_offset 24
 6198              	.LVL566:
2122:fltk-1.3.4-1/png/png.c **** 
 6199              		.loc 1 2122 1 view .LVU1747
 6200 02eb 5D       		popq	%rbp
 6201              		.cfi_def_cfa_offset 16
 6202              	.LVL567:
2122:fltk-1.3.4-1/png/png.c **** 
 6203              		.loc 1 2122 1 view .LVU1748
 6204 02ec 415C     		popq	%r12
 6205              		.cfi_def_cfa_offset 8
 6206 02ee C3       		ret
 6207              	.LVL568:
 6208              	.L629:
 6209              		.cfi_restore_state
 6210              	.LBB416:
 6211              	.LBB411:
2062:fltk-1.3.4-1/png/png.c ****    {
 6212              		.loc 1 2062 4 view .LVU1749
 6213 02ef 81F97274 		cmpl	$1886549106, %ecx
 6213      7270
 6214 02f5 74B9     		je	.L590
 6215 02f7 E978FFFF 		jmp	.L594
 6215      FF
 6216              	.LVL569:
 6217 02fc 0F1F4000 		.p2align 4,,10
 6218              		.p2align 3
 6219              	.L627:
2008:fltk-1.3.4-1/png/png.c ****       (void)png_icc_profile_error(png_ptr, NULL, name, 0/*no tag value*/,
 6220              		.loc 1 2008 8 view .LVU1750
 6221 0300 8B350000 		movl	8+D50_nCIEXYZ(%rip), %esi
 6221      0000
 6222 0306 39734C   		cmpl	%esi, 76(%rbx)
 6223 0309 0F850DFE 		jne	.L584
 6223      FFFF
 6224 030f E92AFEFF 		jmp	.L586
 6224      FF
 6225              		.p2align 4,,10
 6226 0314 0F1F4000 		.p2align 3
 6227              	.L588:
2048:fltk-1.3.4-1/png/png.c ****             "invalid ICC profile color space");
 6228              		.loc 1 2048 10 is_stmt 1 view .LVU1751
2048:fltk-1.3.4-1/png/png.c ****             "invalid ICC profile color space");
 6229              		.loc 1 2048 17 is_stmt 0 view .LVU1752
 6230 0318 4C8D0500 		leaq	.LC54(%rip), %r8
 6230      000000
 6231 031f E9CDFEFF 		jmp	.L623
 6231      FF
 6232              		.p2align 4,,10
 6233 0324 0F1F4000 		.p2align 3
 6234              	.L587:
2042:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
 6235              		.loc 1 2042 10 is_stmt 1 view .LVU1753
2042:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
 6236              		.loc 1 2042 13 is_stmt 0 view .LVU1754
 6237 0328 4183E402 		andl	$2, %r12d
 6238              	.LVL570:
2043:fltk-1.3.4-1/png/png.c ****                "Gray color space not permitted on RGB PNG");
 6239              		.loc 1 2043 20 view .LVU1755
 6240 032c 4C8D0500 		leaq	.LC53(%rip), %r8
 6240      000000
 6241 0333 B9594152 		movl	$1196573017, %ecx
 6241      47
 6242              	.LVL571:
2042:fltk-1.3.4-1/png/png.c ****             return png_icc_profile_error(png_ptr, colorspace, name, temp,
 6243              		.loc 1 2042 13 view .LVU1756
 6244 0338 0F844BFE 		je	.L589
 6244      FFFF
 6245 033e E9AEFEFF 		jmp	.L623
 6245      FF
 6246              	.LVL572:
 6247              		.p2align 4,,10
 6248 0343 0F1F4400 		.p2align 3
 6248      00
 6249              	.L630:
2117:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
 6250              		.loc 1 2117 10 is_stmt 1 view .LVU1757
2117:fltk-1.3.4-1/png/png.c ****             "unexpected ICC PCS encoding");
 6251              		.loc 1 2117 17 is_stmt 0 view .LVU1758
 6252 0348 4C8D0500 		leaq	.LC59(%rip), %r8
 6252      000000
 6253 034f E99DFEFF 		jmp	.L623
 6253      FF
 6254              		.p2align 4,,10
 6255 0354 0F1F4000 		.p2align 3
 6256              	.L595:
2091:fltk-1.3.4-1/png/png.c ****             "unexpected NamedColor ICC profile class");
 6257              		.loc 1 2091 10 is_stmt 1 view .LVU1759
2091:fltk-1.3.4-1/png/png.c ****             "unexpected NamedColor ICC profile class");
 6258              		.loc 1 2091 16 is_stmt 0 view .LVU1760
 6259 0358 4C8D0500 		leaq	.LC57(%rip), %r8
 6259      000000
 6260 035f B96C636D 		movl	$1852662636, %ecx
 6260      6E
 6261              	.LVL573:
2091:fltk-1.3.4-1/png/png.c ****             "unexpected NamedColor ICC profile class");
 6262              		.loc 1 2091 16 view .LVU1761
 6263 0364 31F6     		xorl	%esi, %esi
 6264 0366 48893C24 		movq	%rdi, (%rsp)
 6265 036a 48895424 		movq	%rdx, 8(%rsp)
 6265      08
 6266 036f E8000000 		call	png_icc_profile_error
 6266      00
 6267              	.LVL574:
2093:fltk-1.3.4-1/png/png.c **** 
 6268              		.loc 1 2093 10 is_stmt 1 view .LVU1762
 6269 0374 488B3C24 		movq	(%rsp), %rdi
 6270 0378 488B5424 		movq	8(%rsp), %rdx
 6270      08
 6271 037d E92EFFFF 		jmp	.L590
 6271      FF
 6272              	.LVL575:
 6273              		.p2align 4,,10
 6274 0382 660F1F44 		.p2align 3
 6274      0000
 6275              	.L592:
2073:fltk-1.3.4-1/png/png.c ****             "invalid embedded Abstract ICC profile");
 6276              		.loc 1 2073 10 view .LVU1763
2073:fltk-1.3.4-1/png/png.c ****             "invalid embedded Abstract ICC profile");
 6277              		.loc 1 2073 17 is_stmt 0 view .LVU1764
 6278 0388 4C8D0500 		leaq	.LC55(%rip), %r8
 6278      000000
 6279 038f B9747362 		movl	$1633842036, %ecx
 6279      61
 6280              	.LVL576:
2073:fltk-1.3.4-1/png/png.c ****             "invalid embedded Abstract ICC profile");
 6281              		.loc 1 2073 17 view .LVU1765
 6282 0394 E958FEFF 		jmp	.L623
 6282      FF
 6283              	.LBE411:
 6284              	.LBE416:
 6285              		.cfi_endproc
 6286              	.LFE89:
 6288              		.section	.rodata.png_icc_check_tag_table.str1.8,"aMS",@progbits,1
 6289              		.align 8
 6290              	.LC60:
 6291 0000 49434320 		.string	"ICC profile tag start not a multiple of 4"
 6291      70726F66 
 6291      696C6520 
 6291      74616720 
 6291      73746172 
 6292 002a 00000000 		.align 8
 6292      0000
 6293              	.LC61:
 6294 0030 49434320 		.string	"ICC profile tag outside profile"
 6294      70726F66 
 6294      696C6520 
 6294      74616720 
 6294      6F757473 
 6295              		.section	.text.png_icc_check_tag_table,"ax",@progbits
 6296              		.p2align 4
 6297              		.globl	png_icc_check_tag_table
 6299              	png_icc_check_tag_table:
 6300              	.LVL577:
 6301              	.LFB90:
2128:fltk-1.3.4-1/png/png.c ****    png_uint_32 tag_count = png_get_uint_32(profile+128);
 6302              		.loc 1 2128 1 is_stmt 1 view -0
 6303              		.cfi_startproc
2128:fltk-1.3.4-1/png/png.c ****    png_uint_32 tag_count = png_get_uint_32(profile+128);
 6304              		.loc 1 2128 1 is_stmt 0 view .LVU1767
 6305 0000 F30F1EFA 		endbr64
2129:fltk-1.3.4-1/png/png.c ****    png_uint_32 itag;
 6306              		.loc 1 2129 4 is_stmt 1 view .LVU1768
2128:fltk-1.3.4-1/png/png.c ****    png_uint_32 tag_count = png_get_uint_32(profile+128);
 6307              		.loc 1 2128 1 is_stmt 0 view .LVU1769
 6308 0004 4157     		pushq	%r15
 6309              		.cfi_def_cfa_offset 16
 6310              		.cfi_offset 15, -16
 6311 0006 4156     		pushq	%r14
 6312              		.cfi_def_cfa_offset 24
 6313              		.cfi_offset 14, -24
 6314 0008 4189CE   		movl	%ecx, %r14d
 6315 000b 4155     		pushq	%r13
 6316              		.cfi_def_cfa_offset 32
 6317              		.cfi_offset 13, -32
 6318 000d 4154     		pushq	%r12
 6319              		.cfi_def_cfa_offset 40
 6320              		.cfi_offset 12, -40
 6321 000f 55       		pushq	%rbp
 6322              		.cfi_def_cfa_offset 48
 6323              		.cfi_offset 6, -48
 6324 0010 53       		pushq	%rbx
 6325              		.cfi_def_cfa_offset 56
 6326              		.cfi_offset 3, -56
 6327 0011 4883EC28 		subq	$40, %rsp
 6328              		.cfi_def_cfa_offset 96
2129:fltk-1.3.4-1/png/png.c ****    png_uint_32 itag;
 6329              		.loc 1 2129 28 view .LVU1770
 6330 0015 410FB680 		movzbl	128(%r8), %eax
 6330      80000000 
2128:fltk-1.3.4-1/png/png.c ****    png_uint_32 tag_count = png_get_uint_32(profile+128);
 6331              		.loc 1 2128 1 view .LVU1771
 6332 001d 48897424 		movq	%rsi, 24(%rsp)
 6332      18
2129:fltk-1.3.4-1/png/png.c ****    png_uint_32 itag;
 6333              		.loc 1 2129 28 view .LVU1772
 6334 0022 C1E018   		sall	$24, %eax
 6335 0025 89C1     		movl	%eax, %ecx
 6336              	.LVL578:
2129:fltk-1.3.4-1/png/png.c ****    png_uint_32 itag;
 6337              		.loc 1 2129 28 view .LVU1773
 6338 0027 410FB680 		movzbl	129(%r8), %eax
 6338      81000000 
 6339 002f C1E010   		sall	$16, %eax
 6340 0032 01C8     		addl	%ecx, %eax
 6341 0034 410FB688 		movzbl	131(%r8), %ecx
 6341      83000000 
2129:fltk-1.3.4-1/png/png.c ****    png_uint_32 itag;
 6342              		.loc 1 2129 16 view .LVU1774
 6343 003c 01C8     		addl	%ecx, %eax
2129:fltk-1.3.4-1/png/png.c ****    png_uint_32 itag;
 6344              		.loc 1 2129 28 view .LVU1775
 6345 003e 410FB688 		movzbl	130(%r8), %ecx
 6345      82000000 
 6346 0046 C1E108   		sall	$8, %ecx
 6347              	.LVL579:
2130:fltk-1.3.4-1/png/png.c ****    png_const_bytep tag = profile+132; /* The first tag */
 6348              		.loc 1 2130 4 is_stmt 1 view .LVU1776
2131:fltk-1.3.4-1/png/png.c **** 
 6349              		.loc 1 2131 4 view .LVU1777
2136:fltk-1.3.4-1/png/png.c ****    {
 6350              		.loc 1 2136 4 view .LVU1778
2136:fltk-1.3.4-1/png/png.c ****    {
 6351              		.loc 1 2136 17 view .LVU1779
2136:fltk-1.3.4-1/png/png.c ****    {
 6352              		.loc 1 2136 4 is_stmt 0 view .LVU1780
 6353 0049 01C8     		addl	%ecx, %eax
 6354              	.LVL580:
2136:fltk-1.3.4-1/png/png.c ****    {
 6355              		.loc 1 2136 4 view .LVU1781
 6356 004b 0F841F01 		je	.L637
 6356      0000
 6357 0051 83E801   		subl	$1, %eax
 6358              	.LVL581:
2136:fltk-1.3.4-1/png/png.c ****    {
 6359              		.loc 1 2136 4 view .LVU1782
 6360 0054 498D9884 		leaq	132(%r8), %rbx
 6360      000000
 6361              	.LVL582:
2136:fltk-1.3.4-1/png/png.c ****    {
 6362              		.loc 1 2136 4 view .LVU1783
 6363 005b 4989FF   		movq	%rdi, %r15
 6364 005e 488D0440 		leaq	(%rax,%rax,2), %rax
 6365 0062 4D8D8C80 		leaq	144(%r8,%rax,4), %r9
 6365      90000000 
 6366              	.LBB417:
2154:fltk-1.3.4-1/png/png.c ****             "ICC profile tag start not a multiple of 4");
 6367              		.loc 1 2154 16 view .LVU1784
 6368 006a 4C8D0500 		leaq	.LC60(%rip), %r8
 6368      000000
 6369              	.LVL583:
2154:fltk-1.3.4-1/png/png.c ****             "ICC profile tag start not a multiple of 4");
 6370              		.loc 1 2154 16 view .LVU1785
 6371 0071 EB29     		jmp	.L636
 6372              	.LVL584:
 6373              		.p2align 4,,10
 6374 0073 0F1F4400 		.p2align 3
 6374      00
 6375              	.L633:
2161:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
 6376              		.loc 1 2161 7 is_stmt 1 view .LVU1786
2161:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
 6377              		.loc 1 2161 10 is_stmt 0 view .LVU1787
 6378 0078 4539F5   		cmpl	%r14d, %r13d
 6379 007b 0F87C100 		ja	.L635
 6379      0000
 6380              	.L634:
2161:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
 6381              		.loc 1 2161 69 discriminator 1 view .LVU1788
 6382 0081 4489F0   		movl	%r14d, %eax
 6383 0084 4429E8   		subl	%r13d, %eax
2161:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
 6384              		.loc 1 2161 38 discriminator 1 view .LVU1789
 6385 0087 39E8     		cmpl	%ebp, %eax
 6386 0089 0F82B300 		jb	.L635
 6386      0000
2161:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
 6387              		.loc 1 2161 38 discriminator 1 view .LVU1790
 6388              	.LBE417:
2136:fltk-1.3.4-1/png/png.c ****    {
 6389              		.loc 1 2136 35 is_stmt 1 discriminator 2 view .LVU1791
2136:fltk-1.3.4-1/png/png.c ****    {
 6390              		.loc 1 2136 47 is_stmt 0 discriminator 2 view .LVU1792
 6391 008f 4883C30C 		addq	$12, %rbx
 6392              	.LVL585:
2136:fltk-1.3.4-1/png/png.c ****    {
 6393              		.loc 1 2136 17 is_stmt 1 discriminator 2 view .LVU1793
2136:fltk-1.3.4-1/png/png.c ****    {
 6394              		.loc 1 2136 4 is_stmt 0 discriminator 2 view .LVU1794
 6395 0093 4C39CB   		cmpq	%r9, %rbx
 6396 0096 0F84D400 		je	.L637
 6396      0000
 6397              	.LVL586:
 6398              	.L636:
 6399              	.LBB418:
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
 6400              		.loc 1 2138 7 is_stmt 1 view .LVU1795
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
 6401              		.loc 1 2138 28 is_stmt 0 view .LVU1796
 6402 009c 440FB623 		movzbl	(%rbx), %r12d
 6403 00a0 0FB64303 		movzbl	3(%rbx), %eax
2140:fltk-1.3.4-1/png/png.c **** 
 6404              		.loc 1 2140 32 view .LVU1797
 6405 00a4 0FB66B08 		movzbl	8(%rbx), %ebp
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
 6406              		.loc 1 2138 28 view .LVU1798
 6407 00a8 4489E6   		movl	%r12d, %esi
 6408 00ab 440FB663 		movzbl	1(%rbx), %r12d
 6408      01
 6409 00b0 C1E618   		sall	$24, %esi
 6410 00b3 41C1E410 		sall	$16, %r12d
 6411 00b7 4101F4   		addl	%esi, %r12d
2140:fltk-1.3.4-1/png/png.c **** 
 6412              		.loc 1 2140 32 view .LVU1799
 6413 00ba 89EE     		movl	%ebp, %esi
 6414 00bc 0FB66B09 		movzbl	9(%rbx), %ebp
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
 6415              		.loc 1 2138 19 view .LVU1800
 6416 00c0 4401E0   		addl	%r12d, %eax
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
 6417              		.loc 1 2138 28 view .LVU1801
 6418 00c3 440FB663 		movzbl	2(%rbx), %r12d
 6418      02
2140:fltk-1.3.4-1/png/png.c **** 
 6419              		.loc 1 2140 32 view .LVU1802
 6420 00c8 C1E618   		sall	$24, %esi
 6421 00cb C1E510   		sall	$16, %ebp
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
 6422              		.loc 1 2138 28 view .LVU1803
 6423 00ce 41C1E408 		sall	$8, %r12d
2140:fltk-1.3.4-1/png/png.c **** 
 6424              		.loc 1 2140 32 view .LVU1804
 6425 00d2 01F5     		addl	%esi, %ebp
2138:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_start = png_get_uint_32(tag+4); /* must be aligned */
 6426              		.loc 1 2138 19 view .LVU1805
 6427 00d4 4101C4   		addl	%eax, %r12d
 6428              	.LVL587:
2139:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_length = png_get_uint_32(tag+8);/* not padded */
 6429              		.loc 1 2139 7 is_stmt 1 view .LVU1806
2139:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_length = png_get_uint_32(tag+8);/* not padded */
 6430              		.loc 1 2139 31 is_stmt 0 view .LVU1807
 6431 00d7 0FB64304 		movzbl	4(%rbx), %eax
 6432 00db C1E018   		sall	$24, %eax
 6433 00de 89C1     		movl	%eax, %ecx
 6434 00e0 0FB64305 		movzbl	5(%rbx), %eax
 6435 00e4 C1E010   		sall	$16, %eax
 6436 00e7 01C8     		addl	%ecx, %eax
 6437 00e9 0FB64B07 		movzbl	7(%rbx), %ecx
2139:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_length = png_get_uint_32(tag+8);/* not padded */
 6438              		.loc 1 2139 19 view .LVU1808
 6439 00ed 01C8     		addl	%ecx, %eax
2139:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_length = png_get_uint_32(tag+8);/* not padded */
 6440              		.loc 1 2139 31 view .LVU1809
 6441 00ef 0FB64B06 		movzbl	6(%rbx), %ecx
 6442 00f3 C1E108   		sall	$8, %ecx
2139:fltk-1.3.4-1/png/png.c ****       png_uint_32 tag_length = png_get_uint_32(tag+8);/* not padded */
 6443              		.loc 1 2139 19 view .LVU1810
 6444 00f6 448D2C08 		leal	(%rax,%rcx), %r13d
 6445              	.LVL588:
2140:fltk-1.3.4-1/png/png.c **** 
 6446              		.loc 1 2140 7 is_stmt 1 view .LVU1811
2140:fltk-1.3.4-1/png/png.c **** 
 6447              		.loc 1 2140 32 is_stmt 0 view .LVU1812
 6448 00fa 0FB64B0B 		movzbl	11(%rbx), %ecx
2140:fltk-1.3.4-1/png/png.c **** 
 6449              		.loc 1 2140 19 view .LVU1813
 6450 00fe 01E9     		addl	%ebp, %ecx
2140:fltk-1.3.4-1/png/png.c **** 
 6451              		.loc 1 2140 32 view .LVU1814
 6452 0100 0FB66B0A 		movzbl	10(%rbx), %ebp
 6453 0104 C1E508   		sall	$8, %ebp
2140:fltk-1.3.4-1/png/png.c **** 
 6454              		.loc 1 2140 19 view .LVU1815
 6455 0107 01CD     		addl	%ecx, %ebp
 6456              	.LVL589:
2148:fltk-1.3.4-1/png/png.c ****       {
 6457              		.loc 1 2148 7 is_stmt 1 view .LVU1816
2148:fltk-1.3.4-1/png/png.c ****       {
 6458              		.loc 1 2148 10 is_stmt 0 view .LVU1817
 6459 0109 A803     		testb	$3, %al
 6460 010b 0F8467FF 		je	.L633
 6460      FFFF
2154:fltk-1.3.4-1/png/png.c ****             "ICC profile tag start not a multiple of 4");
 6461              		.loc 1 2154 16 view .LVU1818
 6462 0111 4489E1   		movl	%r12d, %ecx
 6463 0114 31F6     		xorl	%esi, %esi
 6464 0116 4C89FF   		movq	%r15, %rdi
 6465 0119 4C894C24 		movq	%r9, 16(%rsp)
 6465      10
2154:fltk-1.3.4-1/png/png.c ****             "ICC profile tag start not a multiple of 4");
 6466              		.loc 1 2154 10 is_stmt 1 view .LVU1819
2154:fltk-1.3.4-1/png/png.c ****             "ICC profile tag start not a multiple of 4");
 6467              		.loc 1 2154 16 is_stmt 0 view .LVU1820
 6468 011e 48895424 		movq	%rdx, 8(%rsp)
 6468      08
 6469 0123 E8000000 		call	png_icc_profile_error
 6469      00
 6470              	.LVL590:
 6471 0128 4C8B4C24 		movq	16(%rsp), %r9
 6471      10
 6472 012d 488B5424 		movq	8(%rsp), %rdx
 6472      08
2161:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
 6473              		.loc 1 2161 7 is_stmt 1 view .LVU1821
2154:fltk-1.3.4-1/png/png.c ****             "ICC profile tag start not a multiple of 4");
 6474              		.loc 1 2154 16 is_stmt 0 view .LVU1822
 6475 0132 4C8D0500 		leaq	.LC60(%rip), %r8
 6475      000000
2161:fltk-1.3.4-1/png/png.c ****          return png_icc_profile_error(png_ptr, colorspace, name, tag_id,
 6476              		.loc 1 2161 10 view .LVU1823
 6477 0139 4539F5   		cmpl	%r14d, %r13d
 6478 013c 0F863FFF 		jbe	.L634
 6478      FFFF
 6479              	.L635:
2162:fltk-1.3.4-1/png/png.c ****             "ICC profile tag outside profile");
 6480              		.loc 1 2162 10 is_stmt 1 view .LVU1824
2162:fltk-1.3.4-1/png/png.c ****             "ICC profile tag outside profile");
 6481              		.loc 1 2162 17 is_stmt 0 view .LVU1825
 6482 0142 488B7424 		movq	24(%rsp), %rsi
 6482      18
 6483              	.LBE418:
2167:fltk-1.3.4-1/png/png.c **** 
 6484              		.loc 1 2167 1 view .LVU1826
 6485 0147 4883C428 		addq	$40, %rsp
 6486              		.cfi_remember_state
 6487              		.cfi_def_cfa_offset 56
 6488              	.LBB419:
2162:fltk-1.3.4-1/png/png.c ****             "ICC profile tag outside profile");
 6489              		.loc 1 2162 17 view .LVU1827
 6490 014b 4489E1   		movl	%r12d, %ecx
 6491 014e 4C89FF   		movq	%r15, %rdi
 6492              	.LBE419:
2167:fltk-1.3.4-1/png/png.c **** 
 6493              		.loc 1 2167 1 view .LVU1828
 6494 0151 5B       		popq	%rbx
 6495              		.cfi_def_cfa_offset 48
 6496              	.LVL591:
 6497              	.LBB420:
2162:fltk-1.3.4-1/png/png.c ****             "ICC profile tag outside profile");
 6498              		.loc 1 2162 17 view .LVU1829
 6499 0152 4C8D0500 		leaq	.LC61(%rip), %r8
 6499      000000
 6500              	.LBE420:
2167:fltk-1.3.4-1/png/png.c **** 
 6501              		.loc 1 2167 1 view .LVU1830
 6502 0159 5D       		popq	%rbp
 6503              		.cfi_def_cfa_offset 40
 6504              	.LVL592:
2167:fltk-1.3.4-1/png/png.c **** 
 6505              		.loc 1 2167 1 view .LVU1831
 6506 015a 415C     		popq	%r12
 6507              		.cfi_def_cfa_offset 32
 6508              	.LVL593:
2167:fltk-1.3.4-1/png/png.c **** 
 6509              		.loc 1 2167 1 view .LVU1832
 6510 015c 415D     		popq	%r13
 6511              		.cfi_def_cfa_offset 24
 6512              	.LVL594:
2167:fltk-1.3.4-1/png/png.c **** 
 6513              		.loc 1 2167 1 view .LVU1833
 6514 015e 415E     		popq	%r14
 6515              		.cfi_def_cfa_offset 16
 6516              	.LVL595:
2167:fltk-1.3.4-1/png/png.c **** 
 6517              		.loc 1 2167 1 view .LVU1834
 6518 0160 415F     		popq	%r15
 6519              		.cfi_def_cfa_offset 8
 6520              	.LVL596:
 6521              	.LBB421:
2162:fltk-1.3.4-1/png/png.c ****             "ICC profile tag outside profile");
 6522              		.loc 1 2162 17 view .LVU1835
 6523 0162 E9000000 		jmp	png_icc_profile_error
 6523      00
 6524              	.LVL597:
 6525 0167 660F1F84 		.p2align 4,,10
 6525      00000000 
 6525      00
 6526              		.p2align 3
 6527              	.L637:
 6528              		.cfi_restore_state
2162:fltk-1.3.4-1/png/png.c ****             "ICC profile tag outside profile");
 6529              		.loc 1 2162 17 view .LVU1836
 6530              	.LBE421:
2167:fltk-1.3.4-1/png/png.c **** 
 6531              		.loc 1 2167 1 view .LVU1837
 6532 0170 4883C428 		addq	$40, %rsp
 6533              		.cfi_def_cfa_offset 56
 6534 0174 B8010000 		movl	$1, %eax
 6534      00
 6535 0179 5B       		popq	%rbx
 6536              		.cfi_def_cfa_offset 48
 6537 017a 5D       		popq	%rbp
 6538              		.cfi_def_cfa_offset 40
 6539 017b 415C     		popq	%r12
 6540              		.cfi_def_cfa_offset 32
 6541 017d 415D     		popq	%r13
 6542              		.cfi_def_cfa_offset 24
 6543 017f 415E     		popq	%r14
 6544              		.cfi_def_cfa_offset 16
 6545              	.LVL598:
2167:fltk-1.3.4-1/png/png.c **** 
 6546              		.loc 1 2167 1 view .LVU1838
 6547 0181 415F     		popq	%r15
 6548              		.cfi_def_cfa_offset 8
 6549 0183 C3       		ret
 6550              		.cfi_endproc
 6551              	.LFE90:
 6553              		.section	.rodata.png_icc_set_sRGB.str1.1,"aMS",@progbits,1
 6554              	.LC62:
 6555 0000 6B6E6F77 		.string	"known incorrect sRGB profile"
 6555      6E20696E 
 6555      636F7272 
 6555      65637420 
 6555      73524742 
 6556              		.section	.rodata.png_icc_set_sRGB.str1.8,"aMS",@progbits,1
 6557              		.align 8
 6558              	.LC63:
 6559 0000 6F75742D 		.string	"out-of-date sRGB profile with no signature"
 6559      6F662D64 
 6559      61746520 
 6559      73524742 
 6559      2070726F 
 6560 002b 00000000 		.align 8
 6560      00
 6561              	.LC64:
 6562 0030 4E6F7420 		.string	"Not recognizing known sRGB profile that has been edited"
 6562      7265636F 
 6562      676E697A 
 6562      696E6720 
 6562      6B6E6F77 
 6563              		.section	.text.png_icc_set_sRGB,"ax",@progbits
 6564              		.p2align 4
 6565              		.globl	png_icc_set_sRGB
 6567              	png_icc_set_sRGB:
 6568              	.LVL599:
 6569              	.LFB92:
2358:fltk-1.3.4-1/png/png.c ****    /* Is this profile one of the known ICC sRGB profiles?  If it is, just set
 6570              		.loc 1 2358 1 is_stmt 1 view -0
 6571              		.cfi_startproc
2358:fltk-1.3.4-1/png/png.c ****    /* Is this profile one of the known ICC sRGB profiles?  If it is, just set
 6572              		.loc 1 2358 1 is_stmt 0 view .LVU1840
 6573 0000 F30F1EFA 		endbr64
2363:fltk-1.3.4-1/png/png.c **** #endif
 6574              		.loc 1 2363 4 is_stmt 1 view .LVU1841
 6575              	.LVL600:
 6576              	.LBB426:
 6577              	.LBI426:
2233:fltk-1.3.4-1/png/png.c ****    png_const_bytep profile, uLong adler)
 6578              		.loc 1 2233 1 view .LVU1842
 6579              	.LBB427:
2244:fltk-1.3.4-1/png/png.c ****    png_uint_32 intent = 0x10000; /* invalid */
 6580              		.loc 1 2244 4 view .LVU1843
2245:fltk-1.3.4-1/png/png.c **** #if PNG_sRGB_PROFILE_CHECKS > 1
 6581              		.loc 1 2245 4 view .LVU1844
2247:fltk-1.3.4-1/png/png.c **** #endif
 6582              		.loc 1 2247 4 view .LVU1845
2249:fltk-1.3.4-1/png/png.c **** 
 6583              		.loc 1 2249 4 view .LVU1846
2253:fltk-1.3.4-1/png/png.c ****                PNG_OPTION_ON)
 6584              		.loc 1 2253 4 view .LVU1847
2253:fltk-1.3.4-1/png/png.c ****                PNG_OPTION_ON)
 6585              		.loc 1 2253 59 is_stmt 0 view .LVU1848
 6586 0004 0FB687C8 		movzbl	968(%rdi), %eax
 6586      030000
2253:fltk-1.3.4-1/png/png.c ****                PNG_OPTION_ON)
 6587              		.loc 1 2253 7 view .LVU1849
 6588 000b 83F030   		xorl	$48, %eax
 6589 000e A830     		testb	$48, %al
 6590 0010 0F84A201 		je	.L662
 6590      0000
 6591              	.LBE427:
 6592              	.LBE426:
2358:fltk-1.3.4-1/png/png.c ****    /* Is this profile one of the known ICC sRGB profiles?  If it is, just set
 6593              		.loc 1 2358 1 view .LVU1850
 6594 0016 4156     		pushq	%r14
 6595              		.cfi_def_cfa_offset 16
 6596              		.cfi_offset 14, -16
 6597 0018 4C8D0500 		leaq	8+png_sRGB_checks(%rip), %r8
 6597      000000
 6598              	.LBB436:
 6599              	.LBB428:
2245:fltk-1.3.4-1/png/png.c **** #if PNG_sRGB_PROFILE_CHECKS > 1
 6600              		.loc 1 2245 16 view .LVU1851
 6601 001f 41B90000 		movl	$65536, %r9d
 6601      0100
2244:fltk-1.3.4-1/png/png.c ****    png_uint_32 intent = 0x10000; /* invalid */
 6602              		.loc 1 2244 16 view .LVU1852
 6603 0025 4531F6   		xorl	%r14d, %r14d
 6604              	.LBE428:
 6605              	.LBE436:
2358:fltk-1.3.4-1/png/png.c ****    /* Is this profile one of the known ICC sRGB profiles?  If it is, just set
 6606              		.loc 1 2358 1 view .LVU1853
 6607 0028 4155     		pushq	%r13
 6608              		.cfi_def_cfa_offset 24
 6609              		.cfi_offset 13, -24
 6610 002a 4989F5   		movq	%rsi, %r13
 6611 002d 4154     		pushq	%r12
 6612              		.cfi_def_cfa_offset 32
 6613              		.cfi_offset 12, -32
 6614              	.LBB437:
 6615              	.LBB429:
2258:fltk-1.3.4-1/png/png.c ****    {
 6616              		.loc 1 2258 10 view .LVU1854
 6617 002f 4531E4   		xorl	%r12d, %r12d
 6618              	.LBE429:
 6619              	.LBE437:
2358:fltk-1.3.4-1/png/png.c ****    /* Is this profile one of the known ICC sRGB profiles?  If it is, just set
 6620              		.loc 1 2358 1 view .LVU1855
 6621 0032 55       		pushq	%rbp
 6622              		.cfi_def_cfa_offset 40
 6623              		.cfi_offset 6, -40
 6624 0033 4889FD   		movq	%rdi, %rbp
 6625 0036 53       		pushq	%rbx
 6626              		.cfi_def_cfa_offset 48
 6627              		.cfi_offset 3, -48
 6628              	.LBB438:
 6629              	.LBB430:
2260:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+88) == png_sRGB_checks[i].md5[1] &&
 6630              		.loc 1 2260 11 view .LVU1856
 6631 0037 0FB67A54 		movzbl	84(%rdx), %edi
 6632              	.LVL601:
2260:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+88) == png_sRGB_checks[i].md5[1] &&
 6633              		.loc 1 2260 11 view .LVU1857
 6634 003b 4889D3   		movq	%rdx, %rbx
 6635 003e 0FB64357 		movzbl	87(%rbx), %eax
 6636 0042 C1E718   		sall	$24, %edi
 6637 0045 89FA     		movl	%edi, %edx
 6638              	.LVL602:
2260:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+88) == png_sRGB_checks[i].md5[1] &&
 6639              		.loc 1 2260 11 view .LVU1858
 6640 0047 0FB67B55 		movzbl	85(%rbx), %edi
 6641 004b C1E710   		sall	$16, %edi
 6642 004e 01D7     		addl	%edx, %edi
 6643 0050 01F8     		addl	%edi, %eax
 6644 0052 0FB67B56 		movzbl	86(%rbx), %edi
 6645 0056 C1E708   		sall	$8, %edi
 6646 0059 01C7     		addl	%eax, %edi
 6647 005b B8DE3DF8 		movl	$704134622, %eax
 6647      29
 6648 0060 EB1C     		jmp	.L654
 6649              	.LVL603:
 6650              		.p2align 4,,10
 6651 0062 660F1F44 		.p2align 3
 6651      0000
 6652              	.L648:
2258:fltk-1.3.4-1/png/png.c ****    {
 6653              		.loc 1 2258 74 is_stmt 1 view .LVU1859
 6654 0068 4183C401 		addl	$1, %r12d
 6655              	.LVL604:
2258:fltk-1.3.4-1/png/png.c ****    {
 6656              		.loc 1 2258 14 view .LVU1860
 6657 006c 4983C020 		addq	$32, %r8
2258:fltk-1.3.4-1/png/png.c ****    {
 6658              		.loc 1 2258 4 is_stmt 0 view .LVU1861
 6659 0070 4183FC07 		cmpl	$7, %r12d
 6660 0074 0F842E01 		je	.L646
 6660      0000
2258:fltk-1.3.4-1/png/png.c ****    {
 6661              		.loc 1 2258 4 view .LVU1862
 6662 007a 418B4004 		movl	4(%r8), %eax
 6663              	.LVL605:
 6664              	.L654:
2260:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+88) == png_sRGB_checks[i].md5[1] &&
 6665              		.loc 1 2260 7 is_stmt 1 view .LVU1863
2260:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+88) == png_sRGB_checks[i].md5[1] &&
 6666              		.loc 1 2260 10 is_stmt 0 view .LVU1864
 6667 007e 39C7     		cmpl	%eax, %edi
 6668 0080 75E6     		jne	.L648
2261:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+92) == png_sRGB_checks[i].md5[2] &&
 6669              		.loc 1 2261 10 view .LVU1865
 6670 0082 0FB64358 		movzbl	88(%rbx), %eax
 6671 0086 0FB6535B 		movzbl	91(%rbx), %edx
 6672 008a C1E018   		sall	$24, %eax
 6673 008d 89C6     		movl	%eax, %esi
 6674 008f 0FB64359 		movzbl	89(%rbx), %eax
 6675 0093 C1E010   		sall	$16, %eax
 6676 0096 01F0     		addl	%esi, %eax
 6677 0098 01C2     		addl	%eax, %edx
 6678 009a 0FB6435A 		movzbl	90(%rbx), %eax
 6679 009e C1E008   		sall	$8, %eax
 6680 00a1 01D0     		addl	%edx, %eax
2260:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+88) == png_sRGB_checks[i].md5[1] &&
 6681              		.loc 1 2260 68 view .LVU1866
 6682 00a3 413B4008 		cmpl	8(%r8), %eax
 6683 00a7 75BF     		jne	.L648
2262:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+96) == png_sRGB_checks[i].md5[3])
 6684              		.loc 1 2262 10 view .LVU1867
 6685 00a9 0FB6435C 		movzbl	92(%rbx), %eax
 6686 00ad 0FB6535F 		movzbl	95(%rbx), %edx
 6687 00b1 C1E018   		sall	$24, %eax
 6688 00b4 89C6     		movl	%eax, %esi
 6689 00b6 0FB6435D 		movzbl	93(%rbx), %eax
 6690 00ba C1E010   		sall	$16, %eax
 6691 00bd 01F0     		addl	%esi, %eax
 6692 00bf 01C2     		addl	%eax, %edx
 6693 00c1 0FB6435E 		movzbl	94(%rbx), %eax
 6694 00c5 C1E008   		sall	$8, %eax
 6695 00c8 01D0     		addl	%edx, %eax
2261:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+92) == png_sRGB_checks[i].md5[2] &&
 6696              		.loc 1 2261 67 view .LVU1868
 6697 00ca 413B400C 		cmpl	12(%r8), %eax
 6698 00ce 7598     		jne	.L648
2263:fltk-1.3.4-1/png/png.c ****       {
 6699              		.loc 1 2263 10 view .LVU1869
 6700 00d0 0FB64360 		movzbl	96(%rbx), %eax
 6701 00d4 0FB65363 		movzbl	99(%rbx), %edx
 6702 00d8 C1E018   		sall	$24, %eax
 6703 00db 89C6     		movl	%eax, %esi
 6704 00dd 0FB64361 		movzbl	97(%rbx), %eax
 6705 00e1 C1E010   		sall	$16, %eax
 6706 00e4 01F0     		addl	%esi, %eax
 6707 00e6 01C2     		addl	%eax, %edx
 6708 00e8 0FB64362 		movzbl	98(%rbx), %eax
 6709 00ec C1E008   		sall	$8, %eax
 6710 00ef 01D0     		addl	%edx, %eax
2262:fltk-1.3.4-1/png/png.c ****          png_get_uint_32(profile+96) == png_sRGB_checks[i].md5[3])
 6711              		.loc 1 2262 67 view .LVU1870
 6712 00f1 413B4010 		cmpl	16(%r8), %eax
 6713 00f5 0F856DFF 		jne	.L648
 6713      FFFF
2275:fltk-1.3.4-1/png/png.c ****          {
 6714              		.loc 1 2275 10 is_stmt 1 view .LVU1871
2275:fltk-1.3.4-1/png/png.c ****          {
 6715              		.loc 1 2275 13 is_stmt 0 view .LVU1872
 6716 00fb 4585F6   		testl	%r14d, %r14d
 6717 00fe 7553     		jne	.L649
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6718              		.loc 1 2277 13 is_stmt 1 view .LVU1873
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6719              		.loc 1 2277 22 is_stmt 0 view .LVU1874
 6720 0100 440FB633 		movzbl	(%rbx), %r14d
 6721              	.LVL606:
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6722              		.loc 1 2277 22 view .LVU1875
 6723 0104 0FB64303 		movzbl	3(%rbx), %eax
2278:fltk-1.3.4-1/png/png.c ****          }
 6724              		.loc 1 2278 22 view .LVU1876
 6725 0108 440FB64B 		movzbl	64(%rbx), %r9d
 6725      40
 6726              	.LVL607:
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6727              		.loc 1 2277 22 view .LVU1877
 6728 010d 4489F2   		movl	%r14d, %edx
 6729 0110 440FB673 		movzbl	1(%rbx), %r14d
 6729      01
 6730 0115 C1E218   		sall	$24, %edx
 6731 0118 41C1E610 		sall	$16, %r14d
 6732 011c 4101D6   		addl	%edx, %r14d
2278:fltk-1.3.4-1/png/png.c ****          }
 6733              		.loc 1 2278 22 view .LVU1878
 6734 011f 4489CA   		movl	%r9d, %edx
 6735 0122 440FB64B 		movzbl	65(%rbx), %r9d
 6735      41
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6736              		.loc 1 2277 20 view .LVU1879
 6737 0127 4401F0   		addl	%r14d, %eax
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6738              		.loc 1 2277 22 view .LVU1880
 6739 012a 440FB673 		movzbl	2(%rbx), %r14d
 6739      02
2278:fltk-1.3.4-1/png/png.c ****          }
 6740              		.loc 1 2278 22 view .LVU1881
 6741 012f C1E218   		sall	$24, %edx
 6742 0132 41C1E110 		sall	$16, %r9d
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6743              		.loc 1 2277 22 view .LVU1882
 6744 0136 41C1E608 		sall	$8, %r14d
2278:fltk-1.3.4-1/png/png.c ****          }
 6745              		.loc 1 2278 22 view .LVU1883
 6746 013a 4101D1   		addl	%edx, %r9d
2277:fltk-1.3.4-1/png/png.c ****             intent = png_get_uint_32(profile+64);
 6747              		.loc 1 2277 20 view .LVU1884
 6748 013d 4101C6   		addl	%eax, %r14d
 6749              	.LVL608:
2278:fltk-1.3.4-1/png/png.c ****          }
 6750              		.loc 1 2278 13 is_stmt 1 view .LVU1885
2278:fltk-1.3.4-1/png/png.c ****          }
 6751              		.loc 1 2278 22 is_stmt 0 view .LVU1886
 6752 0140 0FB64343 		movzbl	67(%rbx), %eax
2278:fltk-1.3.4-1/png/png.c ****          }
 6753              		.loc 1 2278 20 view .LVU1887
 6754 0144 4401C8   		addl	%r9d, %eax
2278:fltk-1.3.4-1/png/png.c ****          }
 6755              		.loc 1 2278 22 view .LVU1888
 6756 0147 440FB64B 		movzbl	66(%rbx), %r9d
 6756      42
 6757 014c 41C1E108 		sall	$8, %r9d
2278:fltk-1.3.4-1/png/png.c ****          }
 6758              		.loc 1 2278 20 view .LVU1889
 6759 0150 4101C1   		addl	%eax, %r9d
 6760              	.LVL609:
 6761              	.L649:
2282:fltk-1.3.4-1/png/png.c ****             intent == png_sRGB_checks[i].intent)
 6762              		.loc 1 2282 10 is_stmt 1 view .LVU1890
2282:fltk-1.3.4-1/png/png.c ****             intent == png_sRGB_checks[i].intent)
 6763              		.loc 1 2282 13 is_stmt 0 view .LVU1891
 6764 0153 453930   		cmpl	%r14d, (%r8)
 6765 0156 0F850CFF 		jne	.L648
 6765      FFFF
2283:fltk-1.3.4-1/png/png.c ****          {
 6766              		.loc 1 2283 41 view .LVU1892
 6767 015c 410FB740 		movzwl	22(%r8), %eax
 6767      16
2282:fltk-1.3.4-1/png/png.c ****             intent == png_sRGB_checks[i].intent)
 6768              		.loc 1 2282 50 view .LVU1893
 6769 0161 4439C8   		cmpl	%r9d, %eax
 6770 0164 0F85FEFE 		jne	.L648
 6770      FFFF
2286:fltk-1.3.4-1/png/png.c ****             {
 6771              		.loc 1 2286 13 is_stmt 1 view .LVU1894
2286:fltk-1.3.4-1/png/png.c ****             {
 6772              		.loc 1 2286 16 is_stmt 0 view .LVU1895
 6773 016a 4885C9   		testq	%rcx, %rcx
 6774 016d 744A     		je	.L665
 6775              	.LVL610:
 6776              	.L650:
2292:fltk-1.3.4-1/png/png.c ****             {
 6777              		.loc 1 2292 13 is_stmt 1 view .LVU1896
2292:fltk-1.3.4-1/png/png.c ****             {
 6778              		.loc 1 2292 44 is_stmt 0 view .LVU1897
 6779 016f 4489E0   		movl	%r12d, %eax
 6780 0172 4C8D2500 		leaq	png_sRGB_checks(%rip), %r12
 6780      000000
 6781              	.LVL611:
2292:fltk-1.3.4-1/png/png.c ****             {
 6782              		.loc 1 2292 44 view .LVU1898
 6783 0179 48C1E005 		salq	$5, %rax
 6784              	.LVL612:
2292:fltk-1.3.4-1/png/png.c ****             {
 6785              		.loc 1 2292 44 view .LVU1899
 6786 017d 4901C4   		addq	%rax, %r12
 6787 0180 418B0424 		movl	(%r12), %eax
2292:fltk-1.3.4-1/png/png.c ****             {
 6788              		.loc 1 2292 16 view .LVU1900
 6789 0184 4839C8   		cmpq	%rcx, %rax
 6790 0187 744E     		je	.L666
 6791              	.LVL613:
 6792              	.L651:
2341:fltk-1.3.4-1/png/png.c ****              " has been edited", 
 6793              		.loc 1 2341 10 is_stmt 1 view .LVU1901
 6794              	.LBE430:
 6795              	.LBE438:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6796              		.loc 1 2367 1 is_stmt 0 view .LVU1902
 6797 0189 5B       		popq	%rbx
 6798              		.cfi_remember_state
 6799              		.cfi_restore 3
 6800              		.cfi_def_cfa_offset 40
 6801              	.LVL614:
 6802              	.LBB439:
 6803              	.LBB431:
2341:fltk-1.3.4-1/png/png.c ****              " has been edited", 
 6804              		.loc 1 2341 10 view .LVU1903
 6805 018a 4889EF   		movq	%rbp, %rdi
 6806 018d 31D2     		xorl	%edx, %edx
 6807              	.LBE431:
 6808              	.LBE439:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6809              		.loc 1 2367 1 view .LVU1904
 6810 018f 5D       		popq	%rbp
 6811              		.cfi_restore 6
 6812              		.cfi_def_cfa_offset 32
 6813              	.LVL615:
 6814              	.LBB440:
 6815              	.LBB432:
2341:fltk-1.3.4-1/png/png.c ****              " has been edited", 
 6816              		.loc 1 2341 10 view .LVU1905
 6817 0190 488D3500 		leaq	.LC64(%rip), %rsi
 6817      000000
 6818              	.LBE432:
 6819              	.LBE440:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6820              		.loc 1 2367 1 view .LVU1906
 6821 0197 415C     		popq	%r12
 6822              		.cfi_restore 12
 6823              		.cfi_def_cfa_offset 24
 6824 0199 415D     		popq	%r13
 6825              		.cfi_restore 13
 6826              		.cfi_def_cfa_offset 16
 6827              	.LVL616:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6828              		.loc 1 2367 1 view .LVU1907
 6829 019b 415E     		popq	%r14
 6830              		.cfi_restore 14
 6831              		.cfi_def_cfa_offset 8
 6832              	.LVL617:
 6833              	.LBB441:
 6834              	.LBB433:
2341:fltk-1.3.4-1/png/png.c ****              " has been edited", 
 6835              		.loc 1 2341 10 view .LVU1908
 6836 019d E9000000 		jmp	png_chunk_report@PLT
 6836      00
 6837              	.LVL618:
 6838              		.p2align 4,,10
 6839 01a2 660F1F44 		.p2align 3
 6839      0000
 6840              	.L646:
 6841              		.cfi_restore_state
2341:fltk-1.3.4-1/png/png.c ****              " has been edited", 
 6842              		.loc 1 2341 10 view .LVU1909
 6843              	.LBE433:
 6844              	.LBE441:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6845              		.loc 1 2367 1 view .LVU1910
 6846 01a8 5B       		popq	%rbx
 6847              		.cfi_def_cfa_offset 40
 6848              	.LVL619:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6849              		.loc 1 2367 1 view .LVU1911
 6850 01a9 5D       		popq	%rbp
 6851              		.cfi_def_cfa_offset 32
 6852              	.LVL620:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6853              		.loc 1 2367 1 view .LVU1912
 6854 01aa 415C     		popq	%r12
 6855              		.cfi_def_cfa_offset 24
 6856              	.LVL621:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6857              		.loc 1 2367 1 view .LVU1913
 6858 01ac 415D     		popq	%r13
 6859              		.cfi_def_cfa_offset 16
 6860              	.LVL622:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6861              		.loc 1 2367 1 view .LVU1914
 6862 01ae 415E     		popq	%r14
 6863              		.cfi_def_cfa_offset 8
 6864              	.LVL623:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6865              		.loc 1 2367 1 view .LVU1915
 6866 01b0 C3       		ret
 6867              	.LVL624:
 6868              		.p2align 4,,10
 6869 01b1 0F1F8000 		.p2align 3
 6869      000000
 6870              	.L662:
 6871              		.cfi_restore 3
 6872              		.cfi_restore 6
 6873              		.cfi_restore 12
 6874              		.cfi_restore 13
 6875              		.cfi_restore 14
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6876              		.loc 1 2367 1 view .LVU1916
 6877 01b8 C3       		ret
 6878              	.LVL625:
 6879              	.L665:
 6880              		.cfi_def_cfa_offset 48
 6881              		.cfi_offset 3, -48
 6882              		.cfi_offset 6, -40
 6883              		.cfi_offset 12, -32
 6884              		.cfi_offset 13, -24
 6885              		.cfi_offset 14, -16
 6886              	.LBB442:
 6887              	.LBB434:
2288:fltk-1.3.4-1/png/png.c ****                adler = adler32(adler, profile, length);
 6888              		.loc 1 2288 16 is_stmt 1 view .LVU1917
2288:fltk-1.3.4-1/png/png.c ****                adler = adler32(adler, profile, length);
 6889              		.loc 1 2288 24 is_stmt 0 view .LVU1918
 6890 01b9 31D2     		xorl	%edx, %edx
 6891 01bb 31F6     		xorl	%esi, %esi
 6892 01bd 31FF     		xorl	%edi, %edi
 6893 01bf E8000000 		call	adler32@PLT
 6893      00
 6894              	.LVL626:
2289:fltk-1.3.4-1/png/png.c ****             }
 6895              		.loc 1 2289 24 view .LVU1919
 6896 01c4 4489F2   		movl	%r14d, %edx
 6897 01c7 4889DE   		movq	%rbx, %rsi
2288:fltk-1.3.4-1/png/png.c ****                adler = adler32(adler, profile, length);
 6898              		.loc 1 2288 24 view .LVU1920
 6899 01ca 4889C7   		movq	%rax, %rdi
 6900              	.LVL627:
2289:fltk-1.3.4-1/png/png.c ****             }
 6901              		.loc 1 2289 16 is_stmt 1 view .LVU1921
2289:fltk-1.3.4-1/png/png.c ****             }
 6902              		.loc 1 2289 24 is_stmt 0 view .LVU1922
 6903 01cd E8000000 		call	adler32@PLT
 6903      00
 6904              	.LVL628:
2289:fltk-1.3.4-1/png/png.c ****             }
 6905              		.loc 1 2289 24 view .LVU1923
 6906 01d2 4889C1   		movq	%rax, %rcx
 6907              	.LVL629:
2289:fltk-1.3.4-1/png/png.c ****             }
 6908              		.loc 1 2289 24 view .LVU1924
 6909 01d5 EB98     		jmp	.L650
 6910              	.LVL630:
 6911              	.L666:
2299:fltk-1.3.4-1/png/png.c ****                   {
 6912              		.loc 1 2299 19 is_stmt 1 view .LVU1925
2301:fltk-1.3.4-1/png/png.c ****                      crc = crc32(crc, profile, length);
 6913              		.loc 1 2301 22 view .LVU1926
2301:fltk-1.3.4-1/png/png.c ****                      crc = crc32(crc, profile, length);
 6914              		.loc 1 2301 28 is_stmt 0 view .LVU1927
 6915 01d7 31D2     		xorl	%edx, %edx
 6916 01d9 31F6     		xorl	%esi, %esi
 6917 01db 31FF     		xorl	%edi, %edi
 6918 01dd E8000000 		call	crc32@PLT
 6918      00
 6919              	.LVL631:
2302:fltk-1.3.4-1/png/png.c ****                   }
 6920              		.loc 1 2302 28 view .LVU1928
 6921 01e2 4489F2   		movl	%r14d, %edx
 6922 01e5 4889DE   		movq	%rbx, %rsi
2301:fltk-1.3.4-1/png/png.c ****                      crc = crc32(crc, profile, length);
 6923              		.loc 1 2301 28 view .LVU1929
 6924 01e8 4889C7   		movq	%rax, %rdi
 6925              	.LVL632:
2302:fltk-1.3.4-1/png/png.c ****                   }
 6926              		.loc 1 2302 22 is_stmt 1 view .LVU1930
2302:fltk-1.3.4-1/png/png.c ****                   }
 6927              		.loc 1 2302 28 is_stmt 0 view .LVU1931
 6928 01eb E8000000 		call	crc32@PLT
 6928      00
 6929              	.LVL633:
2302:fltk-1.3.4-1/png/png.c ****                   }
 6930              		.loc 1 2302 28 view .LVU1932
 6931 01f0 4989C0   		movq	%rax, %r8
 6932              	.LVL634:
2307:fltk-1.3.4-1/png/png.c **** #              endif
 6933              		.loc 1 2307 19 is_stmt 1 view .LVU1933
2307:fltk-1.3.4-1/png/png.c **** #              endif
 6934              		.loc 1 2307 48 is_stmt 0 view .LVU1934
 6935 01f3 418B4424 		movl	4(%r12), %eax
 6935      04
 6936              	.LVL635:
2307:fltk-1.3.4-1/png/png.c **** #              endif
 6937              		.loc 1 2307 22 view .LVU1935
 6938 01f8 4939C0   		cmpq	%rax, %r8
 6939 01fb 758C     		jne	.L651
2310:fltk-1.3.4-1/png/png.c ****                   {
 6940              		.loc 1 2310 19 is_stmt 1 view .LVU1936
2310:fltk-1.3.4-1/png/png.c ****                   {
 6941              		.loc 1 2310 22 is_stmt 0 view .LVU1937
 6942 01fd 41807C24 		cmpb	$0, 29(%r12)
 6942      1D00
 6943 0203 753C     		jne	.L667
2325:fltk-1.3.4-1/png/png.c ****                   {
 6944              		.loc 1 2325 24 is_stmt 1 view .LVU1938
2325:fltk-1.3.4-1/png/png.c ****                   {
 6945              		.loc 1 2325 27 is_stmt 0 view .LVU1939
 6946 0205 41807C24 		cmpb	$0, 28(%r12)
 6946      1C00
 6947 020b 744A     		je	.L668
 6948              	.LVL636:
 6949              	.L653:
2332:fltk-1.3.4-1/png/png.c ****                }
 6950              		.loc 1 2332 19 is_stmt 1 view .LVU1940
2332:fltk-1.3.4-1/png/png.c ****                }
 6951              		.loc 1 2332 19 is_stmt 0 view .LVU1941
 6952              	.LBE434:
 6953              	.LBE442:
 6954              	.LBB443:
 6955              	.LBI443:
2356:fltk-1.3.4-1/png/png.c ****    png_colorspacerp colorspace, png_const_bytep profile, uLong adler)
 6956              		.loc 1 2356 1 is_stmt 1 view .LVU1942
 6957              	.LBB444:
2365:fltk-1.3.4-1/png/png.c ****          (int)/*already checked*/png_get_uint_32(profile+64));
 6958              		.loc 1 2365 7 view .LVU1943
2366:fltk-1.3.4-1/png/png.c **** }
 6959              		.loc 1 2366 34 is_stmt 0 view .LVU1944
 6960 020d 0FB65340 		movzbl	64(%rbx), %edx
 6961 0211 0FB64343 		movzbl	67(%rbx), %eax
2365:fltk-1.3.4-1/png/png.c ****          (int)/*already checked*/png_get_uint_32(profile+64));
 6962              		.loc 1 2365 13 view .LVU1945
 6963 0215 4C89EE   		movq	%r13, %rsi
 6964 0218 4889EF   		movq	%rbp, %rdi
2366:fltk-1.3.4-1/png/png.c **** }
 6965              		.loc 1 2366 34 view .LVU1946
 6966 021b 89D1     		movl	%edx, %ecx
 6967 021d 0FB65341 		movzbl	65(%rbx), %edx
 6968 0221 C1E118   		sall	$24, %ecx
 6969 0224 C1E210   		sall	$16, %edx
 6970 0227 01CA     		addl	%ecx, %edx
 6971 0229 01D0     		addl	%edx, %eax
 6972 022b 0FB65342 		movzbl	66(%rbx), %edx
 6973              	.LBE444:
 6974              	.LBE443:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6975              		.loc 1 2367 1 view .LVU1947
 6976 022f 5B       		popq	%rbx
 6977              		.cfi_remember_state
 6978              		.cfi_restore 3
 6979              		.cfi_def_cfa_offset 40
 6980              	.LVL637:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6981              		.loc 1 2367 1 view .LVU1948
 6982 0230 5D       		popq	%rbp
 6983              		.cfi_restore 6
 6984              		.cfi_def_cfa_offset 32
 6985              	.LVL638:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6986              		.loc 1 2367 1 view .LVU1949
 6987 0231 415C     		popq	%r12
 6988              		.cfi_restore 12
 6989              		.cfi_def_cfa_offset 24
 6990              	.LBB447:
 6991              	.LBB445:
2366:fltk-1.3.4-1/png/png.c **** }
 6992              		.loc 1 2366 34 view .LVU1950
 6993 0233 C1E208   		sall	$8, %edx
 6994              	.LBE445:
 6995              	.LBE447:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 6996              		.loc 1 2367 1 view .LVU1951
 6997 0236 415D     		popq	%r13
 6998              		.cfi_restore 13
 6999              		.cfi_def_cfa_offset 16
 7000              	.LVL639:
2367:fltk-1.3.4-1/png/png.c **** #endif /* READ_sRGB */
 7001              		.loc 1 2367 1 view .LVU1952
 7002 0238 415E     		popq	%r14
 7003              		.cfi_restore 14
 7004              		.cfi_def_cfa_offset 8
 7005              	.LBB448:
 7006              	.LBB446:
2366:fltk-1.3.4-1/png/png.c **** }
 7007              		.loc 1 2366 34 view .LVU1953
 7008 023a 01C2     		addl	%eax, %edx
2365:fltk-1.3.4-1/png/png.c ****          (int)/*already checked*/png_get_uint_32(profile+64));
 7009              		.loc 1 2365 13 view .LVU1954
 7010 023c E9000000 		jmp	png_colorspace_set_sRGB
 7010      00
 7011              	.LVL640:
 7012              	.L667:
 7013              		.cfi_restore_state
2365:fltk-1.3.4-1/png/png.c ****          (int)/*already checked*/png_get_uint_32(profile+64));
 7014              		.loc 1 2365 13 view .LVU1955
 7015              	.LBE446:
 7016              	.LBE448:
 7017              	.LBB449:
 7018              	.LBB435:
2317:fltk-1.3.4-1/png/png.c ****                         PNG_CHUNK_ERROR);
 7019              		.loc 1 2317 22 is_stmt 1 view .LVU1956
 7020 0241 BA020000 		movl	$2, %edx
 7020      00
 7021 0246 488D3500 		leaq	.LC62(%rip), %rsi
 7021      000000
 7022 024d 4889EF   		movq	%rbp, %rdi
 7023 0250 E8000000 		call	png_chunk_report@PLT
 7023      00
 7024              	.LVL641:
2317:fltk-1.3.4-1/png/png.c ****                         PNG_CHUNK_ERROR);
 7025              		.loc 1 2317 22 is_stmt 0 view .LVU1957
 7026 0255 EBB6     		jmp	.L653
 7027              	.LVL642:
 7028              	.L668:
2327:fltk-1.3.4-1/png/png.c ****                         " no signature",
 7029              		.loc 1 2327 22 is_stmt 1 view .LVU1958
 7030 0257 31D2     		xorl	%edx, %edx
 7031 0259 488D3500 		leaq	.LC63(%rip), %rsi
 7031      000000
 7032 0260 4889EF   		movq	%rbp, %rdi
 7033 0263 E8000000 		call	png_chunk_report@PLT
 7033      00
 7034              	.LVL643:
2327:fltk-1.3.4-1/png/png.c ****                         " no signature",
 7035              		.loc 1 2327 22 is_stmt 0 view .LVU1959
 7036 0268 EBA3     		jmp	.L653
 7037              	.LBE435:
 7038              	.LBE449:
 7039              		.cfi_endproc
 7040              	.LFE92:
 7042              		.section	.text.png_colorspace_set_ICC,"ax",@progbits
 7043              		.p2align 4
 7044              		.globl	png_colorspace_set_ICC
 7046              	png_colorspace_set_ICC:
 7047              	.LVL644:
 7048              	.LFB93:
2374:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
 7049              		.loc 1 2374 1 is_stmt 1 view -0
 7050              		.cfi_startproc
2374:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
 7051              		.loc 1 2374 1 is_stmt 0 view .LVU1961
 7052 0000 F30F1EFA 		endbr64
2375:fltk-1.3.4-1/png/png.c ****       return 0;
 7053              		.loc 1 2375 4 is_stmt 1 view .LVU1962
2375:fltk-1.3.4-1/png/png.c ****       return 0;
 7054              		.loc 1 2375 7 is_stmt 0 view .LVU1963
 7055 0004 66837E4A 		cmpw	$0, 74(%rsi)
 7055      00
 7056 0009 0F888100 		js	.L682
 7056      0000
2374:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
 7057              		.loc 1 2374 1 view .LVU1964
 7058 000f 4157     		pushq	%r15
 7059              		.cfi_def_cfa_offset 16
 7060              		.cfi_offset 15, -16
 7061 0011 4989D7   		movq	%rdx, %r15
 7062 0014 4156     		pushq	%r14
 7063              		.cfi_def_cfa_offset 24
 7064              		.cfi_offset 14, -24
 7065 0016 4989FE   		movq	%rdi, %r14
 7066 0019 4155     		pushq	%r13
 7067              		.cfi_def_cfa_offset 32
 7068              		.cfi_offset 13, -32
 7069 001b 4D89C5   		movq	%r8, %r13
2378:fltk-1.3.4-1/png/png.c ****        png_icc_check_header(png_ptr, colorspace, name, profile_length, profile,
 7070              		.loc 1 2378 4 is_stmt 1 view .LVU1965
 7071              	.LVL645:
 7072              	.LBB454:
 7073              	.LBI454:
1931:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length)
 7074              		.loc 1 1931 1 view .LVU1966
 7075              	.LBB455:
1934:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 7076              		.loc 1 1934 4 view .LVU1967
 7077              	.LBE455:
 7078              	.LBE454:
2374:fltk-1.3.4-1/png/png.c ****    if ((colorspace->flags & PNG_COLORSPACE_INVALID) != 0)
 7079              		.loc 1 2374 1 is_stmt 0 view .LVU1968
 7080 001e 4154     		pushq	%r12
 7081              		.cfi_def_cfa_offset 40
 7082              		.cfi_offset 12, -40
 7083 0020 4189CC   		movl	%ecx, %r12d
 7084 0023 55       		pushq	%rbp
 7085              		.cfi_def_cfa_offset 48
 7086              		.cfi_offset 6, -48
 7087 0024 4889F5   		movq	%rsi, %rbp
 7088 0027 4883EC10 		subq	$16, %rsp
 7089              		.cfi_def_cfa_offset 64
 7090              	.LBB461:
 7091              	.LBB459:
1934:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 7092              		.loc 1 1934 7 view .LVU1969
 7093 002b 81F98300 		cmpl	$131, %ecx
 7093      0000
 7094 0031 7665     		jbe	.L672
 7095              	.LVL646:
 7096              	.L675:
1934:fltk-1.3.4-1/png/png.c ****       return png_icc_profile_error(png_ptr, colorspace, name, profile_length,
 7097              		.loc 1 1934 7 view .LVU1970
 7098              	.LBE459:
 7099              	.LBE461:
2379:fltk-1.3.4-1/png/png.c ****           color_type) != 0 &&
 7100              		.loc 1 2379 8 view .LVU1971
 7101 0033 4D89E8   		movq	%r13, %r8
 7102 0036 4489E1   		movl	%r12d, %ecx
 7103 0039 4C89FA   		movq	%r15, %rdx
 7104 003c 4889EE   		movq	%rbp, %rsi
 7105 003f 4C89F7   		movq	%r14, %rdi
 7106 0042 E8000000 		call	png_icc_check_header
 7106      00
 7107              	.LVL647:
2378:fltk-1.3.4-1/png/png.c ****        png_icc_check_header(png_ptr, colorspace, name, profile_length, profile,
 7108              		.loc 1 2378 77 view .LVU1972
 7109 0047 85C0     		testl	%eax, %eax
 7110 0049 7515     		jne	.L683
 7111              	.L674:
2376:fltk-1.3.4-1/png/png.c **** 
 7112              		.loc 1 2376 14 view .LVU1973
 7113 004b 31C0     		xorl	%eax, %eax
 7114              	.L669:
2393:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
 7115              		.loc 1 2393 1 view .LVU1974
 7116 004d 4883C410 		addq	$16, %rsp
 7117              		.cfi_remember_state
 7118              		.cfi_def_cfa_offset 48
 7119 0051 5D       		popq	%rbp
 7120              		.cfi_def_cfa_offset 40
 7121              	.LVL648:
2393:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
 7122              		.loc 1 2393 1 view .LVU1975
 7123 0052 415C     		popq	%r12
 7124              		.cfi_def_cfa_offset 32
 7125              	.LVL649:
2393:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
 7126              		.loc 1 2393 1 view .LVU1976
 7127 0054 415D     		popq	%r13
 7128              		.cfi_def_cfa_offset 24
 7129              	.LVL650:
2393:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
 7130              		.loc 1 2393 1 view .LVU1977
 7131 0056 415E     		popq	%r14
 7132              		.cfi_def_cfa_offset 16
 7133              	.LVL651:
2393:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
 7134              		.loc 1 2393 1 view .LVU1978
 7135 0058 415F     		popq	%r15
 7136              		.cfi_def_cfa_offset 8
 7137              	.LVL652:
2393:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
 7138              		.loc 1 2393 1 view .LVU1979
 7139 005a C3       		ret
 7140              	.LVL653:
 7141 005b 0F1F4400 		.p2align 4,,10
 7141      00
 7142              		.p2align 3
 7143              	.L683:
 7144              		.cfi_restore_state
2381:fltk-1.3.4-1/png/png.c ****           profile) != 0)
 7145              		.loc 1 2381 8 view .LVU1980
 7146 0060 4D89E8   		movq	%r13, %r8
 7147 0063 4489E1   		movl	%r12d, %ecx
 7148 0066 4C89FA   		movq	%r15, %rdx
 7149 0069 4889EE   		movq	%rbp, %rsi
 7150 006c 4C89F7   		movq	%r14, %rdi
 7151 006f E8000000 		call	png_icc_check_tag_table
 7151      00
 7152              	.LVL654:
2380:fltk-1.3.4-1/png/png.c ****        png_icc_check_tag_table(png_ptr, colorspace, name, profile_length,
 7153              		.loc 1 2380 28 view .LVU1981
 7154 0074 85C0     		testl	%eax, %eax
 7155 0076 74D3     		je	.L674
2386:fltk-1.3.4-1/png/png.c **** #     endif
 7156              		.loc 1 2386 10 is_stmt 1 view .LVU1982
 7157 0078 31C9     		xorl	%ecx, %ecx
 7158 007a 4C89EA   		movq	%r13, %rdx
 7159 007d 4889EE   		movq	%rbp, %rsi
 7160 0080 4C89F7   		movq	%r14, %rdi
 7161 0083 E8000000 		call	png_icc_set_sRGB
 7161      00
 7162              	.LVL655:
2388:fltk-1.3.4-1/png/png.c ****    }
 7163              		.loc 1 2388 7 view .LVU1983
2388:fltk-1.3.4-1/png/png.c ****    }
 7164              		.loc 1 2388 14 is_stmt 0 view .LVU1984
 7165 0088 B8010000 		movl	$1, %eax
 7165      00
 7166 008d EBBE     		jmp	.L669
 7167              	.LVL656:
 7168 008f 90       		.p2align 4,,10
 7169              		.p2align 3
 7170              	.L682:
 7171              		.cfi_def_cfa_offset 8
 7172              		.cfi_restore 6
 7173              		.cfi_restore 12
 7174              		.cfi_restore 13
 7175              		.cfi_restore 14
 7176              		.cfi_restore 15
2376:fltk-1.3.4-1/png/png.c **** 
 7177              		.loc 1 2376 14 view .LVU1985
 7178 0090 31C0     		xorl	%eax, %eax
2393:fltk-1.3.4-1/png/png.c **** #endif /* iCCP */
 7179              		.loc 1 2393 1 view .LVU1986
 7180 0092 C3       		ret
 7181              	.LVL657:
 7182              		.p2align 4,,10
 7183 0093 0F1F4400 		.p2align 3
 7183      00
 7184              	.L672:
 7185              		.cfi_def_cfa_offset 64
 7186              		.cfi_offset 6, -48
 7187              		.cfi_offset 12, -40
 7188              		.cfi_offset 13, -32
 7189              		.cfi_offset 14, -24
 7190              		.cfi_offset 15, -16
 7191              	.LBB462:
 7192              	.LBB460:
 7193              	.LBB456:
 7194              	.LBB457:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 7195              		.loc 1 1935 14 view .LVU1987
 7196 0098 89C9     		movl	%ecx, %ecx
 7197              	.LVL658:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 7198              		.loc 1 1935 14 view .LVU1988
 7199 009a 4C8D0500 		leaq	.LC44(%rip), %r8
 7199      000000
 7200              	.LVL659:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 7201              		.loc 1 1935 14 view .LVU1989
 7202 00a1 44894C24 		movl	%r9d, 12(%rsp)
 7202      0C
 7203              	.LVL660:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 7204              		.loc 1 1935 14 view .LVU1990
 7205              	.LBE457:
 7206              	.LBI456:
1931:fltk-1.3.4-1/png/png.c ****    png_const_charp name, png_uint_32 profile_length)
 7207              		.loc 1 1931 1 is_stmt 1 view .LVU1991
 7208              	.LBB458:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 7209              		.loc 1 1935 7 view .LVU1992
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 7210              		.loc 1 1935 14 is_stmt 0 view .LVU1993
 7211 00a6 E8000000 		call	png_icc_profile_error
 7211      00
 7212              	.LVL661:
1935:fltk-1.3.4-1/png/png.c ****          "too short");
 7213              		.loc 1 1935 14 view .LVU1994
 7214              	.LBE458:
 7215              	.LBE456:
 7216              	.LBE460:
 7217              	.LBE462:
2378:fltk-1.3.4-1/png/png.c ****        png_icc_check_header(png_ptr, colorspace, name, profile_length, profile,
 7218              		.loc 1 2378 7 view .LVU1995
 7219 00ab 448B4C24 		movl	12(%rsp), %r9d
 7219      0C
 7220 00b0 85C0     		testl	%eax, %eax
 7221 00b2 0F857BFF 		jne	.L675
 7221      FFFF
2378:fltk-1.3.4-1/png/png.c ****        png_icc_check_header(png_ptr, colorspace, name, profile_length, profile,
 7222              		.loc 1 2378 7 view .LVU1996
 7223 00b8 EB91     		jmp	.L674
 7224              		.cfi_endproc
 7225              	.LFE93:
 7227              		.section	.rodata.png_colorspace_set_rgb_coefficients.str1.8,"aMS",@progbits,1
 7228              		.align 8
 7229              	.LC65:
 7230 0000 696E7465 		.string	"internal error handling cHRM coefficients"
 7230      726E616C 
 7230      20657272 
 7230      6F722068 
 7230      616E646C 
 7231 002a 00000000 		.align 8
 7231      0000
 7232              	.LC66:
 7233 0030 696E7465 		.string	"internal error handling cHRM->XYZ"
 7233      726E616C 
 7233      20657272 
 7233      6F722068 
 7233      616E646C 
 7234              		.section	.text.png_colorspace_set_rgb_coefficients,"ax",@progbits
 7235              		.p2align 4
 7236              		.globl	png_colorspace_set_rgb_coefficients
 7238              	png_colorspace_set_rgb_coefficients:
 7239              	.LVL662:
 7240              	.LFB94:
2399:fltk-1.3.4-1/png/png.c ****    /* Set the rgb_to_gray coefficients from the colorspace. */
 7241              		.loc 1 2399 1 is_stmt 1 view -0
 7242              		.cfi_startproc
2399:fltk-1.3.4-1/png/png.c ****    /* Set the rgb_to_gray coefficients from the colorspace. */
 7243              		.loc 1 2399 1 is_stmt 0 view .LVU1998
 7244 0000 F30F1EFA 		endbr64
 7245 0004 4883EC28 		subq	$40, %rsp
 7246              		.cfi_def_cfa_offset 48
2399:fltk-1.3.4-1/png/png.c ****    /* Set the rgb_to_gray coefficients from the colorspace. */
 7247              		.loc 1 2399 1 view .LVU1999
 7248 0008 64488B04 		movq	%fs:40, %rax
 7248      25280000 
 7248      00
 7249 0011 48894424 		movq	%rax, 24(%rsp)
 7249      18
 7250 0016 31C0     		xorl	%eax, %eax
2401:fltk-1.3.4-1/png/png.c ****       (png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
 7251              		.loc 1 2401 4 is_stmt 1 view .LVU2000
2401:fltk-1.3.4-1/png/png.c ****       (png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
 7252              		.loc 1 2401 7 is_stmt 0 view .LVU2001
 7253 0018 80BF1104 		cmpb	$0, 1041(%rdi)
 7253      000000
 7254 001f 0F852901 		jne	.L684
 7254      0000
 7255 0025 4989F8   		movq	%rdi, %r8
2401:fltk-1.3.4-1/png/png.c ****       (png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_ENDPOINTS) != 0)
 7256              		.loc 1 2401 51 discriminator 1 view .LVU2002
 7257 0028 F6872205 		testb	$2, 1314(%rdi)
 7257      000002
 7258 002f 0F841901 		je	.L684
 7258      0000
 7259              	.LBB463:
2407:fltk-1.3.4-1/png/png.c ****       png_fixed_point g = png_ptr->colorspace.end_points_XYZ.green_Y;
 7260              		.loc 1 2407 7 is_stmt 1 view .LVU2003
2407:fltk-1.3.4-1/png/png.c ****       png_fixed_point g = png_ptr->colorspace.end_points_XYZ.green_Y;
 7261              		.loc 1 2407 61 is_stmt 0 view .LVU2004
 7262 0035 8BB70005 		movl	1280(%rdi), %esi
 7262      0000
2408:fltk-1.3.4-1/png/png.c ****       png_fixed_point b = png_ptr->colorspace.end_points_XYZ.blue_Y;
 7263              		.loc 1 2408 61 view .LVU2005
 7264 003b 448B8F0C 		movl	1292(%rdi), %r9d
 7264      050000
2409:fltk-1.3.4-1/png/png.c ****       png_fixed_point total = r+g+b;
 7265              		.loc 1 2409 61 view .LVU2006
 7266 0042 8B871805 		movl	1304(%rdi), %eax
 7266      0000
2410:fltk-1.3.4-1/png/png.c **** 
 7267              		.loc 1 2410 32 view .LVU2007
 7268 0048 428D0C0E 		leal	(%rsi,%r9), %ecx
2407:fltk-1.3.4-1/png/png.c ****       png_fixed_point g = png_ptr->colorspace.end_points_XYZ.green_Y;
 7269              		.loc 1 2407 23 view .LVU2008
 7270 004c 8974240C 		movl	%esi, 12(%rsp)
2408:fltk-1.3.4-1/png/png.c ****       png_fixed_point b = png_ptr->colorspace.end_points_XYZ.blue_Y;
 7271              		.loc 1 2408 7 is_stmt 1 view .LVU2009
2408:fltk-1.3.4-1/png/png.c ****       png_fixed_point b = png_ptr->colorspace.end_points_XYZ.blue_Y;
 7272              		.loc 1 2408 23 is_stmt 0 view .LVU2010
 7273 0050 44894C24 		movl	%r9d, 16(%rsp)
 7273      10
2409:fltk-1.3.4-1/png/png.c ****       png_fixed_point total = r+g+b;
 7274              		.loc 1 2409 7 is_stmt 1 view .LVU2011
2410:fltk-1.3.4-1/png/png.c **** 
 7275              		.loc 1 2410 23 is_stmt 0 view .LVU2012
 7276 0055 01C1     		addl	%eax, %ecx
2409:fltk-1.3.4-1/png/png.c ****       png_fixed_point total = r+g+b;
 7277              		.loc 1 2409 23 view .LVU2013
 7278 0057 89442414 		movl	%eax, 20(%rsp)
2410:fltk-1.3.4-1/png/png.c **** 
 7279              		.loc 1 2410 7 is_stmt 1 view .LVU2014
 7280              	.LVL663:
2412:fltk-1.3.4-1/png/png.c ****          r >= 0 && png_muldiv(&r, r, 32768, total) && r >= 0 && r <= 32768 &&
 7281              		.loc 1 2412 7 view .LVU2015
2412:fltk-1.3.4-1/png/png.c ****          r >= 0 && png_muldiv(&r, r, 32768, total) && r >= 0 && r <= 32768 &&
 7282              		.loc 1 2412 21 is_stmt 0 view .LVU2016
 7283 005b 85F6     		testl	%esi, %esi
 7284 005d 0F882801 		js	.L686
 7284      0000
 7285 0063 85C9     		testl	%ecx, %ecx
 7286 0065 0F8E2001 		jle	.L686
 7286      0000
 7287              	.LVL664:
 7288              	.LBB464:
 7289              	.LBI464:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 7290              		.loc 1 3243 1 is_stmt 1 view .LVU2017
 7291              	.LBB465:
3247:fltk-1.3.4-1/png/png.c ****    {
 7292              		.loc 1 3247 4 view .LVU2018
3249:fltk-1.3.4-1/png/png.c ****       {
 7293              		.loc 1 3249 7 view .LVU2019
3249:fltk-1.3.4-1/png/png.c ****       {
 7294              		.loc 1 3249 10 is_stmt 0 view .LVU2020
 7295 006b 85F6     		testl	%esi, %esi
 7296 006d 742A     		je	.L688
 7297 006f 488D7C24 		leaq	12(%rsp), %rdi
 7297      0C
 7298              	.LVL665:
3249:fltk-1.3.4-1/png/png.c ****       {
 7299              		.loc 1 3249 10 view .LVU2021
 7300 0074 BA008000 		movl	$32768, %edx
 7300      00
 7301 0079 E8000000 		call	png_muldiv.part.0
 7301      00
 7302              	.LVL666:
3249:fltk-1.3.4-1/png/png.c ****       {
 7303              		.loc 1 3249 10 view .LVU2022
 7304              	.LBE465:
 7305              	.LBE464:
2413:fltk-1.3.4-1/png/png.c ****          g >= 0 && png_muldiv(&g, g, 32768, total) && g >= 0 && g <= 32768 &&
 7306              		.loc 1 2413 17 view .LVU2023
 7307 007e 85C0     		testl	%eax, %eax
 7308 0080 0F840501 		je	.L686
 7308      0000
2413:fltk-1.3.4-1/png/png.c ****          g >= 0 && png_muldiv(&g, g, 32768, total) && g >= 0 && g <= 32768 &&
 7309              		.loc 1 2413 62 discriminator 1 view .LVU2024
 7310 0086 817C240C 		cmpl	$32768, 12(%rsp)
 7310      00800000 
 7311 008e 0F87F700 		ja	.L686
 7311      0000
 7312 0094 448B4C24 		movl	16(%rsp), %r9d
 7312      10
 7313              	.L688:
2413:fltk-1.3.4-1/png/png.c ****          g >= 0 && png_muldiv(&g, g, 32768, total) && g >= 0 && g <= 32768 &&
 7314              		.loc 1 2413 76 discriminator 3 view .LVU2025
 7315 0099 4585C9   		testl	%r9d, %r9d
 7316 009c 0F88E900 		js	.L686
 7316      0000
 7317              	.LVL667:
 7318              	.LBB466:
 7319              	.LBI466:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 7320              		.loc 1 3243 1 is_stmt 1 view .LVU2026
 7321              	.LBB467:
3247:fltk-1.3.4-1/png/png.c ****    {
 7322              		.loc 1 3247 4 view .LVU2027
3249:fltk-1.3.4-1/png/png.c ****       {
 7323              		.loc 1 3249 7 view .LVU2028
3249:fltk-1.3.4-1/png/png.c ****       {
 7324              		.loc 1 3249 10 is_stmt 0 view .LVU2029
 7325 00a2 7428     		je	.L691
 7326 00a4 488D7C24 		leaq	16(%rsp), %rdi
 7326      10
 7327              	.LVL668:
3249:fltk-1.3.4-1/png/png.c ****       {
 7328              		.loc 1 3249 10 view .LVU2030
 7329 00a9 BA008000 		movl	$32768, %edx
 7329      00
 7330 00ae 4489CE   		movl	%r9d, %esi
 7331 00b1 E8000000 		call	png_muldiv.part.0
 7331      00
 7332              	.LVL669:
3249:fltk-1.3.4-1/png/png.c ****       {
 7333              		.loc 1 3249 10 view .LVU2031
 7334              	.LBE467:
 7335              	.LBE466:
2414:fltk-1.3.4-1/png/png.c ****          b >= 0 && png_muldiv(&b, b, 32768, total) && b >= 0 && b <= 32768 &&
 7336              		.loc 1 2414 17 view .LVU2032
 7337 00b6 85C0     		testl	%eax, %eax
 7338 00b8 0F84CD00 		je	.L686
 7338      0000
2414:fltk-1.3.4-1/png/png.c ****          b >= 0 && png_muldiv(&b, b, 32768, total) && b >= 0 && b <= 32768 &&
 7339              		.loc 1 2414 62 discriminator 1 view .LVU2033
 7340 00be 817C2410 		cmpl	$32768, 16(%rsp)
 7340      00800000 
 7341 00c6 0F87BF00 		ja	.L686
 7341      0000
 7342              	.L691:
2415:fltk-1.3.4-1/png/png.c ****          r+g+b <= 32769)
 7343              		.loc 1 2415 12 view .LVU2034
 7344 00cc 8B742414 		movl	20(%rsp), %esi
2414:fltk-1.3.4-1/png/png.c ****          b >= 0 && png_muldiv(&b, b, 32768, total) && b >= 0 && b <= 32768 &&
 7345              		.loc 1 2414 76 view .LVU2035
 7346 00d0 85F6     		testl	%esi, %esi
 7347 00d2 0F88B300 		js	.L686
 7347      0000
 7348              	.LVL670:
 7349              	.LBB468:
 7350              	.LBI468:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 7351              		.loc 1 3243 1 is_stmt 1 view .LVU2036
 7352              	.LBB469:
3247:fltk-1.3.4-1/png/png.c ****    {
 7353              		.loc 1 3247 4 view .LVU2037
3249:fltk-1.3.4-1/png/png.c ****       {
 7354              		.loc 1 3249 7 view .LVU2038
3249:fltk-1.3.4-1/png/png.c ****       {
 7355              		.loc 1 3249 10 is_stmt 0 view .LVU2039
 7356 00d8 7427     		je	.L692
 7357 00da 488D7C24 		leaq	20(%rsp), %rdi
 7357      14
 7358              	.LVL671:
3249:fltk-1.3.4-1/png/png.c ****       {
 7359              		.loc 1 3249 10 view .LVU2040
 7360 00df BA008000 		movl	$32768, %edx
 7360      00
 7361 00e4 E8000000 		call	png_muldiv.part.0
 7361      00
 7362              	.LVL672:
3249:fltk-1.3.4-1/png/png.c ****       {
 7363              		.loc 1 3249 10 view .LVU2041
 7364              	.LBE469:
 7365              	.LBE468:
2415:fltk-1.3.4-1/png/png.c ****          r+g+b <= 32769)
 7366              		.loc 1 2415 17 view .LVU2042
 7367 00e9 85C0     		testl	%eax, %eax
 7368 00eb 0F849A00 		je	.L686
 7368      0000
2415:fltk-1.3.4-1/png/png.c ****          r+g+b <= 32769)
 7369              		.loc 1 2415 57 discriminator 1 view .LVU2043
 7370 00f1 8B742414 		movl	20(%rsp), %esi
2415:fltk-1.3.4-1/png/png.c ****          r+g+b <= 32769)
 7371              		.loc 1 2415 62 discriminator 1 view .LVU2044
 7372 00f5 81FE0080 		cmpl	$32768, %esi
 7372      0000
 7373 00fb 0F878A00 		ja	.L686
 7373      0000
 7374              	.L692:
2416:fltk-1.3.4-1/png/png.c ****       {
 7375              		.loc 1 2416 11 discriminator 3 view .LVU2045
 7376 0101 8B54240C 		movl	12(%rsp), %edx
 7377 0105 8B442410 		movl	16(%rsp), %eax
 7378 0109 8D0C02   		leal	(%rdx,%rax), %ecx
 7379              	.LVL673:
2416:fltk-1.3.4-1/png/png.c ****       {
 7380              		.loc 1 2416 13 discriminator 3 view .LVU2046
 7381 010c 8D3C31   		leal	(%rcx,%rsi), %edi
2415:fltk-1.3.4-1/png/png.c ****          r+g+b <= 32769)
 7382              		.loc 1 2415 76 discriminator 3 view .LVU2047
 7383 010f 81FF0180 		cmpl	$32769, %edi
 7383      0000
 7384 0115 7F74     		jg	.L686
 7385              	.LBB470:
2423:fltk-1.3.4-1/png/png.c **** 
 7386              		.loc 1 2423 10 is_stmt 1 view .LVU2048
 7387              	.LVL674:
2425:fltk-1.3.4-1/png/png.c ****             add = -1;
 7388              		.loc 1 2425 10 view .LVU2049
2425:fltk-1.3.4-1/png/png.c ****             add = -1;
 7389              		.loc 1 2425 13 is_stmt 0 view .LVU2050
 7390 0117 744F     		je	.L699
2427:fltk-1.3.4-1/png/png.c ****             add = 1;
 7391              		.loc 1 2427 15 is_stmt 1 view .LVU2051
2427:fltk-1.3.4-1/png/png.c ****             add = 1;
 7392              		.loc 1 2427 18 is_stmt 0 view .LVU2052
 7393 0119 81FF0080 		cmpl	$32768, %edi
 7393      0000
 7394 011f 741D     		je	.L694
2428:fltk-1.3.4-1/png/png.c **** 
 7395              		.loc 1 2428 17 view .LVU2053
 7396 0121 BF010000 		movl	$1, %edi
 7396      00
 7397              	.L693:
 7398              	.LVL675:
2432:fltk-1.3.4-1/png/png.c ****                g += add;
 7399              		.loc 1 2432 13 is_stmt 1 view .LVU2054
2432:fltk-1.3.4-1/png/png.c ****                g += add;
 7400              		.loc 1 2432 16 is_stmt 0 view .LVU2055
 7401 0126 39C2     		cmpl	%eax, %edx
 7402 0128 7E46     		jle	.L725
2434:fltk-1.3.4-1/png/png.c ****                r += add;
 7403              		.loc 1 2434 29 discriminator 1 view .LVU2056
 7404 012a 39F2     		cmpl	%esi, %edx
 7405 012c 7D52     		jge	.L726
 7406              	.L696:
2437:fltk-1.3.4-1/png/png.c ****          }
 7407              		.loc 1 2437 16 is_stmt 1 view .LVU2057
2437:fltk-1.3.4-1/png/png.c ****          }
 7408              		.loc 1 2437 18 is_stmt 0 view .LVU2058
 7409 012e 01FE     		addl	%edi, %esi
 7410 0130 89742414 		movl	%esi, 20(%rsp)
 7411              	.L697:
2441:fltk-1.3.4-1/png/png.c ****             png_error(png_ptr,
 7412              		.loc 1 2441 10 is_stmt 1 view .LVU2059
2441:fltk-1.3.4-1/png/png.c ****             png_error(png_ptr,
 7413              		.loc 1 2441 17 is_stmt 0 view .LVU2060
 7414 0134 01CE     		addl	%ecx, %esi
2441:fltk-1.3.4-1/png/png.c ****             png_error(png_ptr,
 7415              		.loc 1 2441 13 view .LVU2061
 7416 0136 81FE0080 		cmpl	$32768, %esi
 7416      0000
 7417 013c 7561     		jne	.L727
 7418              	.L694:
2447:fltk-1.3.4-1/png/png.c ****             png_ptr->rgb_to_gray_green_coeff = (png_uint_16)g;
 7419              		.loc 1 2447 13 is_stmt 1 view .LVU2062
2447:fltk-1.3.4-1/png/png.c ****             png_ptr->rgb_to_gray_green_coeff = (png_uint_16)g;
 7420              		.loc 1 2447 48 is_stmt 0 view .LVU2063
 7421 013e 66418990 		movw	%dx, 1042(%r8)
 7421      12040000 
2448:fltk-1.3.4-1/png/png.c ****          }
 7422              		.loc 1 2448 13 is_stmt 1 view .LVU2064
2448:fltk-1.3.4-1/png/png.c ****          }
 7423              		.loc 1 2448 48 is_stmt 0 view .LVU2065
 7424 0146 66418980 		movw	%ax, 1044(%r8)
 7424      14040000 
 7425              	.LVL676:
 7426              	.L684:
2448:fltk-1.3.4-1/png/png.c ****          }
 7427              		.loc 1 2448 48 view .LVU2066
 7428              	.LBE470:
 7429              	.LBE463:
2459:fltk-1.3.4-1/png/png.c **** #endif
 7430              		.loc 1 2459 1 view .LVU2067
 7431 014e 488B4424 		movq	24(%rsp), %rax
 7431      18
 7432 0153 64483304 		xorq	%fs:40, %rax
 7432      25280000 
 7432      00
 7433 015c 753C     		jne	.L728
 7434 015e 4883C428 		addq	$40, %rsp
 7435              		.cfi_remember_state
 7436              		.cfi_def_cfa_offset 8
 7437 0162 C3       		ret
 7438              	.LVL677:
 7439              		.p2align 4,,10
 7440 0163 0F1F4400 		.p2align 3
 7440      00
 7441              	.L699:
 7442              		.cfi_restore_state
 7443              	.LBB473:
 7444              	.LBB471:
2426:fltk-1.3.4-1/png/png.c ****          else if (r+g+b < 32768)
 7445              		.loc 1 2426 17 view .LVU2068
 7446 0168 BFFFFFFF 		movl	$-1, %edi
 7446      FF
 7447 016d EBB7     		jmp	.L693
 7448              	.LVL678:
 7449 016f 90       		.p2align 4,,10
 7450              		.p2align 3
 7451              	.L725:
2432:fltk-1.3.4-1/png/png.c ****                g += add;
 7452              		.loc 1 2432 24 discriminator 1 view .LVU2069
 7453 0170 39F0     		cmpl	%esi, %eax
 7454 0172 7CBA     		jl	.L696
2433:fltk-1.3.4-1/png/png.c ****             else if (r >= g && r >= b)
 7455              		.loc 1 2433 16 is_stmt 1 view .LVU2070
2433:fltk-1.3.4-1/png/png.c ****             else if (r >= g && r >= b)
 7456              		.loc 1 2433 18 is_stmt 0 view .LVU2071
 7457 0174 01F8     		addl	%edi, %eax
 7458 0176 89442410 		movl	%eax, 16(%rsp)
 7459 017a 8D0C02   		leal	(%rdx,%rax), %ecx
 7460 017d EBB5     		jmp	.L697
 7461 017f 90       		.p2align 4,,10
 7462              		.p2align 3
 7463              	.L726:
2435:fltk-1.3.4-1/png/png.c ****             else
 7464              		.loc 1 2435 16 is_stmt 1 view .LVU2072
2435:fltk-1.3.4-1/png/png.c ****             else
 7465              		.loc 1 2435 18 is_stmt 0 view .LVU2073
 7466 0180 01FA     		addl	%edi, %edx
 7467 0182 8954240C 		movl	%edx, 12(%rsp)
 7468 0186 8D0C10   		leal	(%rax,%rdx), %ecx
 7469 0189 EBA9     		jmp	.L697
 7470              	.L686:
2435:fltk-1.3.4-1/png/png.c ****             else
 7471              		.loc 1 2435 18 view .LVU2074
 7472              	.LBE471:
2457:fltk-1.3.4-1/png/png.c ****    }
 7473              		.loc 1 2457 10 is_stmt 1 view .LVU2075
 7474 018b 488D3500 		leaq	.LC66(%rip), %rsi
 7474      000000
 7475 0192 4C89C7   		movq	%r8, %rdi
 7476 0195 E8000000 		call	png_error@PLT
 7476      00
 7477              	.LVL679:
 7478              	.L728:
2457:fltk-1.3.4-1/png/png.c ****    }
 7479              		.loc 1 2457 10 is_stmt 0 view .LVU2076
 7480              	.LBE473:
2459:fltk-1.3.4-1/png/png.c **** #endif
 7481              		.loc 1 2459 1 view .LVU2077
 7482 019a E8000000 		call	__stack_chk_fail@PLT
 7482      00
 7483              	.LVL680:
 7484              	.L727:
 7485              	.LBB474:
 7486              	.LBB472:
2442:fltk-1.3.4-1/png/png.c ****                "internal error handling cHRM coefficients");
 7487              		.loc 1 2442 13 is_stmt 1 view .LVU2078
 7488 019f 488D3500 		leaq	.LC65(%rip), %rsi
 7488      000000
 7489 01a6 4C89C7   		movq	%r8, %rdi
 7490 01a9 E8000000 		call	png_error@PLT
 7490      00
 7491              	.LVL681:
2442:fltk-1.3.4-1/png/png.c ****                "internal error handling cHRM coefficients");
 7492              		.loc 1 2442 13 is_stmt 0 view .LVU2079
 7493              	.LBE472:
 7494              	.LBE474:
 7495              		.cfi_endproc
 7496              	.LFE94:
 7498              		.section	.rodata.png_check_IHDR.str1.1,"aMS",@progbits,1
 7499              	.LC67:
 7500 0000 496D6167 		.string	"Image width is zero in IHDR"
 7500      65207769 
 7500      64746820 
 7500      6973207A 
 7500      65726F20 
 7501              	.LC68:
 7502 001c 496E7661 		.string	"Invalid image width in IHDR"
 7502      6C696420 
 7502      696D6167 
 7502      65207769 
 7502      64746820 
 7503              		.section	.rodata.png_check_IHDR.str1.8,"aMS",@progbits,1
 7504              		.align 8
 7505              	.LC69:
 7506 0000 496D6167 		.string	"Image width exceeds user limit in IHDR"
 7506      65207769 
 7506      64746820 
 7506      65786365 
 7506      65647320 
 7507              		.section	.rodata.png_check_IHDR.str1.1
 7508              	.LC70:
 7509 0038 496D6167 		.string	"Image height is zero in IHDR"
 7509      65206865 
 7509      69676874 
 7509      20697320 
 7509      7A65726F 
 7510              	.LC71:
 7511 0055 496E7661 		.string	"Invalid image height in IHDR"
 7511      6C696420 
 7511      696D6167 
 7511      65206865 
 7511      69676874 
 7512              		.section	.rodata.png_check_IHDR.str1.8
 7513 0027 00       		.align 8
 7514              	.LC72:
 7515 0028 496D6167 		.string	"Image height exceeds user limit in IHDR"
 7515      65206865 
 7515      69676874 
 7515      20657863 
 7515      65656473 
 7516              		.section	.rodata.png_check_IHDR.str1.1
 7517              	.LC73:
 7518 0072 496E7661 		.string	"Invalid bit depth in IHDR"
 7518      6C696420 
 7518      62697420 
 7518      64657074 
 7518      6820696E 
 7519              	.LC74:
 7520 008c 496E7661 		.string	"Invalid color type in IHDR"
 7520      6C696420 
 7520      636F6C6F 
 7520      72207479 
 7520      70652069 
 7521              		.section	.rodata.png_check_IHDR.str1.8
 7522              		.align 8
 7523              	.LC75:
 7524 0050 496E7661 		.string	"Invalid color type/bit depth combination in IHDR"
 7524      6C696420 
 7524      636F6C6F 
 7524      72207479 
 7524      70652F62 
 7525 0081 00000000 		.align 8
 7525      000000
 7526              	.LC76:
 7527 0088 556E6B6E 		.string	"Unknown interlace method in IHDR"
 7527      6F776E20 
 7527      696E7465 
 7527      726C6163 
 7527      65206D65 
 7528 00a9 00000000 		.align 8
 7528      000000
 7529              	.LC77:
 7530 00b0 556E6B6E 		.string	"Unknown compression method in IHDR"
 7530      6F776E20 
 7530      636F6D70 
 7530      72657373 
 7530      696F6E20 
 7531 00d3 00000000 		.align 8
 7531      00
 7532              	.LC78:
 7533 00d8 4D4E4720 		.string	"MNG features are not allowed in a PNG datastream"
 7533      66656174 
 7533      75726573 
 7533      20617265 
 7533      206E6F74 
 7534              		.section	.rodata.png_check_IHDR.str1.1
 7535              	.LC79:
 7536 00a7 556E6B6E 		.string	"Unknown filter method in IHDR"
 7536      6F776E20 
 7536      66696C74 
 7536      6572206D 
 7536      6574686F 
 7537              	.LC80:
 7538 00c5 496E7661 		.string	"Invalid filter method in IHDR"
 7538      6C696420 
 7538      66696C74 
 7538      6572206D 
 7538      6574686F 
 7539              	.LC81:
 7540 00e3 496E7661 		.string	"Invalid IHDR data"
 7540      6C696420 
 7540      49484452 
 7540      20646174 
 7540      6100
 7541              		.section	.text.png_check_IHDR,"ax",@progbits
 7542              		.p2align 4
 7543              		.globl	png_check_IHDR
 7545              	png_check_IHDR:
 7546              	.LVL682:
 7547              	.LFB96:
2480:fltk-1.3.4-1/png/png.c ****    int error = 0;
 7548              		.loc 1 2480 1 is_stmt 1 view -0
 7549              		.cfi_startproc
2480:fltk-1.3.4-1/png/png.c ****    int error = 0;
 7550              		.loc 1 2480 1 is_stmt 0 view .LVU2081
 7551 0000 F30F1EFA 		endbr64
2481:fltk-1.3.4-1/png/png.c **** 
 7552              		.loc 1 2481 4 is_stmt 1 view .LVU2082
 7553              	.LVL683:
2484:fltk-1.3.4-1/png/png.c ****    {
 7554              		.loc 1 2484 4 view .LVU2083
2480:fltk-1.3.4-1/png/png.c ****    int error = 0;
 7555              		.loc 1 2480 1 is_stmt 0 view .LVU2084
 7556 0004 4157     		pushq	%r15
 7557              		.cfi_def_cfa_offset 16
 7558              		.cfi_offset 15, -16
 7559 0006 4156     		pushq	%r14
 7560              		.cfi_def_cfa_offset 24
 7561              		.cfi_offset 14, -24
 7562 0008 4189D6   		movl	%edx, %r14d
 7563 000b 4155     		pushq	%r13
 7564              		.cfi_def_cfa_offset 32
 7565              		.cfi_offset 13, -32
 7566 000d 4589CD   		movl	%r9d, %r13d
 7567 0010 4154     		pushq	%r12
 7568              		.cfi_def_cfa_offset 40
 7569              		.cfi_offset 12, -40
 7570 0012 4189CC   		movl	%ecx, %r12d
 7571 0015 55       		pushq	%rbp
 7572              		.cfi_def_cfa_offset 48
 7573              		.cfi_offset 6, -48
 7574 0016 4889FD   		movq	%rdi, %rbp
 7575 0019 53       		pushq	%rbx
 7576              		.cfi_def_cfa_offset 56
 7577              		.cfi_offset 3, -56
 7578 001a 4489C3   		movl	%r8d, %ebx
 7579 001d 4883EC08 		subq	$8, %rsp
 7580              		.cfi_def_cfa_offset 64
2484:fltk-1.3.4-1/png/png.c ****    {
 7581              		.loc 1 2484 7 view .LVU2085
 7582 0021 85F6     		testl	%esi, %esi
 7583 0023 0F84E701 		je	.L785
 7583      0000
2489:fltk-1.3.4-1/png/png.c ****    {
 7584              		.loc 1 2489 9 is_stmt 1 view .LVU2086
2489:fltk-1.3.4-1/png/png.c ****    {
 7585              		.loc 1 2489 12 is_stmt 0 view .LVU2087
 7586 0029 0F880102 		js	.L786
 7586      0000
2495:fltk-1.3.4-1/png/png.c ****                    (PNG_SIZE_MAX >> 3) /* 8-byte RGBA pixels */
 7587              		.loc 1 2495 9 is_stmt 1 view .LVU2088
 7588              	.LVL684:
2469:fltk-1.3.4-1/png/png.c **** }
 7589              		.loc 1 2469 5 view .LVU2089
2519:fltk-1.3.4-1/png/png.c **** #     else
 7590              		.loc 1 2519 7 view .LVU2090
2481:fltk-1.3.4-1/png/png.c **** 
 7591              		.loc 1 2481 8 is_stmt 0 view .LVU2091
 7592 002f 4531FF   		xorl	%r15d, %r15d
2519:fltk-1.3.4-1/png/png.c **** #     else
 7593              		.loc 1 2519 10 view .LVU2092
 7594 0032 39B75C04 		cmpl	%esi, 1116(%rdi)
 7594      0000
 7595 0038 0F825202 		jb	.L787
 7595      0000
 7596              	.LVL685:
 7597              	.L731:
2529:fltk-1.3.4-1/png/png.c ****    {
 7598              		.loc 1 2529 4 is_stmt 1 view .LVU2093
2529:fltk-1.3.4-1/png/png.c ****    {
 7599              		.loc 1 2529 7 is_stmt 0 view .LVU2094
 7600 003e 4585F6   		testl	%r14d, %r14d
 7601 0041 0F848901 		je	.L788
 7601      0000
2534:fltk-1.3.4-1/png/png.c ****    {
 7602              		.loc 1 2534 9 is_stmt 1 view .LVU2095
2534:fltk-1.3.4-1/png/png.c ****    {
 7603              		.loc 1 2534 12 is_stmt 0 view .LVU2096
 7604 0047 0F880302 		js	.L789
 7604      0000
2542:fltk-1.3.4-1/png/png.c **** #     else
 7605              		.loc 1 2542 7 is_stmt 1 view .LVU2097
2542:fltk-1.3.4-1/png/png.c **** #     else
 7606              		.loc 1 2542 10 is_stmt 0 view .LVU2098
 7607 004d 4439B560 		cmpl	%r14d, 1120(%rbp)
 7607      040000
 7608 0054 0F821602 		jb	.L790
 7608      0000
 7609              	.LVL686:
 7610              	.L734:
2553:fltk-1.3.4-1/png/png.c ****        bit_depth != 8 && bit_depth != 16)
 7611              		.loc 1 2553 4 is_stmt 1 view .LVU2099
2553:fltk-1.3.4-1/png/png.c ****        bit_depth != 8 && bit_depth != 16)
 7612              		.loc 1 2553 23 is_stmt 0 view .LVU2100
 7613 005a 4183FC10 		cmpl	$16, %r12d
 7614 005e 0F874C01 		ja	.L736
 7614      0000
2553:fltk-1.3.4-1/png/png.c ****        bit_depth != 8 && bit_depth != 16)
 7615              		.loc 1 2553 7 view .LVU2101
 7616 0064 BA160101 		movl	$65814, %edx
 7616      00
 7617 0069 4C0FA3E2 		btq	%r12, %rdx
 7618 006d 0F833D01 		jnc	.L736
 7618      0000
 7619              	.LVL687:
 7620              	.L737:
2560:fltk-1.3.4-1/png/png.c ****        color_type == 5 || color_type > 6)
 7621              		.loc 1 2560 4 is_stmt 1 view .LVU2102
2560:fltk-1.3.4-1/png/png.c ****        color_type == 5 || color_type > 6)
 7622              		.loc 1 2560 37 is_stmt 0 view .LVU2103
 7623 0073 4189DE   		movl	%ebx, %r14d
 7624              	.LVL688:
2560:fltk-1.3.4-1/png/png.c ****        color_type == 5 || color_type > 6)
 7625              		.loc 1 2560 37 view .LVU2104
 7626 0076 4183E6FB 		andl	$-5, %r14d
2560:fltk-1.3.4-1/png/png.c ****        color_type == 5 || color_type > 6)
 7627              		.loc 1 2560 7 view .LVU2105
 7628 007a 4183FE01 		cmpl	$1, %r14d
 7629 007e 7405     		je	.L738
2561:fltk-1.3.4-1/png/png.c ****    {
 7630              		.loc 1 2561 24 view .LVU2106
 7631 0080 83FB06   		cmpl	$6, %ebx
 7632 0083 7615     		jbe	.L739
 7633              	.L738:
2563:fltk-1.3.4-1/png/png.c ****       error = 1;
 7634              		.loc 1 2563 7 is_stmt 1 view .LVU2107
 7635 0085 488D3500 		leaq	.LC74(%rip), %rsi
 7635      000000
 7636 008c 4889EF   		movq	%rbp, %rdi
2564:fltk-1.3.4-1/png/png.c ****    }
 7637              		.loc 1 2564 13 is_stmt 0 view .LVU2108
 7638 008f 41BF0100 		movl	$1, %r15d
 7638      0000
 7639              	.LVL689:
2563:fltk-1.3.4-1/png/png.c ****       error = 1;
 7640              		.loc 1 2563 7 view .LVU2109
 7641 0095 E8000000 		call	png_warning@PLT
 7641      00
 7642              	.LVL690:
2564:fltk-1.3.4-1/png/png.c ****    }
 7643              		.loc 1 2564 7 is_stmt 1 view .LVU2110
 7644              	.L739:
2567:fltk-1.3.4-1/png/png.c ****        ((color_type == PNG_COLOR_TYPE_RGB ||
 7645              		.loc 1 2567 4 view .LVU2111
2567:fltk-1.3.4-1/png/png.c ****        ((color_type == PNG_COLOR_TYPE_RGB ||
 7646              		.loc 1 2567 7 is_stmt 0 view .LVU2112
 7647 009a 83FB03   		cmpl	$3, %ebx
 7648 009d 0F85E500 		jne	.L757
 7648      0000
 7649 00a3 4183FC08 		cmpl	$8, %r12d
 7650 00a7 0F8EDB00 		jle	.L757
 7650      0000
 7651              	.L740:
2572:fltk-1.3.4-1/png/png.c ****       error = 1;
 7652              		.loc 1 2572 7 is_stmt 1 view .LVU2113
 7653 00ad 488D3500 		leaq	.LC75(%rip), %rsi
 7653      000000
 7654 00b4 4889EF   		movq	%rbp, %rdi
2573:fltk-1.3.4-1/png/png.c ****    }
 7655              		.loc 1 2573 13 is_stmt 0 view .LVU2114
 7656 00b7 41BF0100 		movl	$1, %r15d
 7656      0000
 7657              	.LVL691:
2572:fltk-1.3.4-1/png/png.c ****       error = 1;
 7658              		.loc 1 2572 7 view .LVU2115
 7659 00bd E8000000 		call	png_warning@PLT
 7659      00
 7660              	.LVL692:
2573:fltk-1.3.4-1/png/png.c ****    }
 7661              		.loc 1 2573 7 is_stmt 1 view .LVU2116
 7662              	.L742:
2576:fltk-1.3.4-1/png/png.c ****    {
 7663              		.loc 1 2576 4 view .LVU2117
2576:fltk-1.3.4-1/png/png.c ****    {
 7664              		.loc 1 2576 7 is_stmt 0 view .LVU2118
 7665 00c2 4183FD01 		cmpl	$1, %r13d
 7666 00c6 7E15     		jle	.L744
2578:fltk-1.3.4-1/png/png.c ****       error = 1;
 7667              		.loc 1 2578 7 is_stmt 1 view .LVU2119
 7668 00c8 488D3500 		leaq	.LC76(%rip), %rsi
 7668      000000
 7669 00cf 4889EF   		movq	%rbp, %rdi
2579:fltk-1.3.4-1/png/png.c ****    }
 7670              		.loc 1 2579 13 is_stmt 0 view .LVU2120
 7671 00d2 41BF0100 		movl	$1, %r15d
 7671      0000
 7672              	.LVL693:
2578:fltk-1.3.4-1/png/png.c ****       error = 1;
 7673              		.loc 1 2578 7 view .LVU2121
 7674 00d8 E8000000 		call	png_warning@PLT
 7674      00
 7675              	.LVL694:
2579:fltk-1.3.4-1/png/png.c ****    }
 7676              		.loc 1 2579 7 is_stmt 1 view .LVU2122
 7677              	.L744:
2582:fltk-1.3.4-1/png/png.c ****    {
 7678              		.loc 1 2582 4 view .LVU2123
2582:fltk-1.3.4-1/png/png.c ****    {
 7679              		.loc 1 2582 7 is_stmt 0 view .LVU2124
 7680 00dd 8B742440 		movl	64(%rsp), %esi
 7681 00e1 85F6     		testl	%esi, %esi
 7682 00e3 0F850701 		jne	.L791
 7682      0000
 7683              	.LVL695:
 7684              	.L745:
2598:fltk-1.3.4-1/png/png.c ****        png_ptr->mng_features_permitted != 0)
 7685              		.loc 1 2598 4 is_stmt 1 view .LVU2125
2598:fltk-1.3.4-1/png/png.c ****        png_ptr->mng_features_permitted != 0)
 7686              		.loc 1 2598 7 is_stmt 0 view .LVU2126
 7687 00e9 F6852D01 		testb	$16, 301(%rbp)
 7687      000010
 7688 00f0 744D     		je	.L746
2598:fltk-1.3.4-1/png/png.c ****        png_ptr->mng_features_permitted != 0)
 7689              		.loc 1 2598 54 discriminator 1 view .LVU2127
 7690 00f2 8B8D1804 		movl	1048(%rbp), %ecx
 7690      0000
 7691 00f8 85C9     		testl	%ecx, %ecx
 7692 00fa 7534     		jne	.L792
2602:fltk-1.3.4-1/png/png.c ****    {
 7693              		.loc 1 2602 4 is_stmt 1 view .LVU2128
2602:fltk-1.3.4-1/png/png.c ****    {
 7694              		.loc 1 2602 7 is_stmt 0 view .LVU2129
 7695 00fc 8B442448 		movl	72(%rsp), %eax
 7696 0100 85C0     		testl	%eax, %eax
 7697 0102 746C     		je	.L748
 7698              	.L753:
2610:fltk-1.3.4-1/png/png.c ****          error = 1;
 7699              		.loc 1 2610 10 is_stmt 1 view .LVU2130
 7700 0104 488D3500 		leaq	.LC79(%rip), %rsi
 7700      000000
 7701 010b 4889EF   		movq	%rbp, %rdi
 7702 010e E8000000 		call	png_warning@PLT
 7702      00
 7703              	.LVL696:
2611:fltk-1.3.4-1/png/png.c ****       }
 7704              		.loc 1 2611 10 view .LVU2131
2614:fltk-1.3.4-1/png/png.c ****       {
 7705              		.loc 1 2614 7 view .LVU2132
2614:fltk-1.3.4-1/png/png.c ****       {
 7706              		.loc 1 2614 10 is_stmt 0 view .LVU2133
 7707 0113 F6852D01 		testb	$16, 301(%rbp)
 7707      000010
 7708 011a 0F858701 		jne	.L793
 7708      0000
 7709              	.LVL697:
 7710              	.L754:
2630:fltk-1.3.4-1/png/png.c **** }
 7711              		.loc 1 2630 7 is_stmt 1 view .LVU2134
 7712 0120 488D3500 		leaq	.LC81(%rip), %rsi
 7712      000000
 7713 0127 4889EF   		movq	%rbp, %rdi
 7714 012a E8000000 		call	png_error@PLT
 7714      00
 7715              	.LVL698:
 7716 012f 90       		.p2align 4,,10
 7717              		.p2align 3
 7718              	.L792:
2600:fltk-1.3.4-1/png/png.c **** 
 7719              		.loc 1 2600 7 view .LVU2135
 7720 0130 488D3500 		leaq	.LC78(%rip), %rsi
 7720      000000
 7721 0137 4889EF   		movq	%rbp, %rdi
 7722 013a E8000000 		call	png_warning@PLT
 7722      00
 7723              	.LVL699:
 7724              	.L746:
2602:fltk-1.3.4-1/png/png.c ****    {
 7725              		.loc 1 2602 4 view .LVU2136
2602:fltk-1.3.4-1/png/png.c ****    {
 7726              		.loc 1 2602 7 is_stmt 0 view .LVU2137
 7727 013f 8B542448 		movl	72(%rsp), %edx
 7728 0143 85D2     		testl	%edx, %edx
 7729 0145 7429     		je	.L748
2604:fltk-1.3.4-1/png/png.c ****           (filter_type == PNG_INTRAPIXEL_DIFFERENCING) &&
 7730              		.loc 1 2604 7 is_stmt 1 view .LVU2138
2604:fltk-1.3.4-1/png/png.c ****           (filter_type == PNG_INTRAPIXEL_DIFFERENCING) &&
 7731              		.loc 1 2604 77 is_stmt 0 view .LVU2139
 7732 0147 F6851804 		testb	$4, 1048(%rbp)
 7732      000004
 7733 014e 74B4     		je	.L753
 7734 0150 837C2448 		cmpl	$64, 72(%rsp)
 7734      40
 7735 0155 75AD     		jne	.L753
2605:fltk-1.3.4-1/png/png.c ****           ((png_ptr->mode & PNG_HAVE_PNG_SIGNATURE) == 0) &&
 7736              		.loc 1 2605 56 view .LVU2140
 7737 0157 F6852D01 		testb	$16, 301(%rbp)
 7737      000010
 7738 015e 75A4     		jne	.L753
2604:fltk-1.3.4-1/png/png.c ****           (filter_type == PNG_INTRAPIXEL_DIFFERENCING) &&
 7739              		.loc 1 2604 11 view .LVU2141
 7740 0160 4183FE02 		cmpl	$2, %r14d
 7741 0164 759E     		jne	.L753
 7742 0166 662E0F1F 		.p2align 4,,10
 7742      84000000 
 7742      0000
 7743              		.p2align 3
 7744              	.L748:
2629:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Invalid IHDR data");
 7745              		.loc 1 2629 4 is_stmt 1 view .LVU2142
2629:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Invalid IHDR data");
 7746              		.loc 1 2629 7 is_stmt 0 view .LVU2143
 7747 0170 4183FF01 		cmpl	$1, %r15d
 7748 0174 74AA     		je	.L754
2631:fltk-1.3.4-1/png/png.c **** 
 7749              		.loc 1 2631 1 view .LVU2144
 7750 0176 4883C408 		addq	$8, %rsp
 7751              		.cfi_remember_state
 7752              		.cfi_def_cfa_offset 56
 7753 017a 5B       		popq	%rbx
 7754              		.cfi_def_cfa_offset 48
 7755              	.LVL700:
2631:fltk-1.3.4-1/png/png.c **** 
 7756              		.loc 1 2631 1 view .LVU2145
 7757 017b 5D       		popq	%rbp
 7758              		.cfi_def_cfa_offset 40
 7759              	.LVL701:
2631:fltk-1.3.4-1/png/png.c **** 
 7760              		.loc 1 2631 1 view .LVU2146
 7761 017c 415C     		popq	%r12
 7762              		.cfi_def_cfa_offset 32
 7763              	.LVL702:
2631:fltk-1.3.4-1/png/png.c **** 
 7764              		.loc 1 2631 1 view .LVU2147
 7765 017e 415D     		popq	%r13
 7766              		.cfi_def_cfa_offset 24
 7767              	.LVL703:
2631:fltk-1.3.4-1/png/png.c **** 
 7768              		.loc 1 2631 1 view .LVU2148
 7769 0180 415E     		popq	%r14
 7770              		.cfi_def_cfa_offset 16
 7771 0182 415F     		popq	%r15
 7772              		.cfi_def_cfa_offset 8
 7773              	.LVL704:
2631:fltk-1.3.4-1/png/png.c **** 
 7774              		.loc 1 2631 1 view .LVU2149
 7775 0184 C3       		ret
 7776              	.LVL705:
 7777              		.p2align 4,,10
 7778 0185 0F1F00   		.p2align 3
 7779              	.L757:
 7780              		.cfi_restore_state
2569:fltk-1.3.4-1/png/png.c ****          color_type == PNG_COLOR_TYPE_RGB_ALPHA) && bit_depth < 8))
 7781              		.loc 1 2569 50 discriminator 1 view .LVU2150
 7782 0188 83FB04   		cmpl	$4, %ebx
 7783 018b 740A     		je	.L758
 7784 018d 4183FE02 		cmpl	$2, %r14d
 7785 0191 0F852BFF 		jne	.L742
 7785      FFFF
 7786              	.L758:
2570:fltk-1.3.4-1/png/png.c ****    {
 7787              		.loc 1 2570 50 view .LVU2151
 7788 0197 4183FC07 		cmpl	$7, %r12d
 7789 019b 0F8F21FF 		jg	.L742
 7789      FFFF
 7790 01a1 E907FFFF 		jmp	.L740
 7790      FF
 7791              	.LVL706:
 7792 01a6 662E0F1F 		.p2align 4,,10
 7792      84000000 
 7792      0000
 7793              		.p2align 3
 7794              	.L736:
2556:fltk-1.3.4-1/png/png.c ****       error = 1;
 7795              		.loc 1 2556 7 is_stmt 1 view .LVU2152
 7796 01b0 488D3500 		leaq	.LC73(%rip), %rsi
 7796      000000
 7797 01b7 4889EF   		movq	%rbp, %rdi
2557:fltk-1.3.4-1/png/png.c ****    }
 7798              		.loc 1 2557 13 is_stmt 0 view .LVU2153
 7799 01ba 41BF0100 		movl	$1, %r15d
 7799      0000
 7800              	.LVL707:
2556:fltk-1.3.4-1/png/png.c ****       error = 1;
 7801              		.loc 1 2556 7 view .LVU2154
 7802 01c0 E8000000 		call	png_warning@PLT
 7802      00
 7803              	.LVL708:
2557:fltk-1.3.4-1/png/png.c ****    }
 7804              		.loc 1 2557 7 is_stmt 1 view .LVU2155
2557:fltk-1.3.4-1/png/png.c ****    }
 7805              		.loc 1 2557 7 is_stmt 0 view .LVU2156
 7806 01c5 E9A9FEFF 		jmp	.L737
 7806      FF
 7807              	.LVL709:
 7808 01ca 660F1F44 		.p2align 4,,10
 7808      0000
 7809              		.p2align 3
 7810              	.L788:
2531:fltk-1.3.4-1/png/png.c ****       error = 1;
 7811              		.loc 1 2531 7 is_stmt 1 view .LVU2157
 7812 01d0 488D3500 		leaq	.LC70(%rip), %rsi
 7812      000000
 7813 01d7 4889EF   		movq	%rbp, %rdi
2532:fltk-1.3.4-1/png/png.c ****    }
 7814              		.loc 1 2532 13 is_stmt 0 view .LVU2158
 7815 01da 41BF0100 		movl	$1, %r15d
 7815      0000
 7816              	.LVL710:
2531:fltk-1.3.4-1/png/png.c ****       error = 1;
 7817              		.loc 1 2531 7 view .LVU2159
 7818 01e0 E8000000 		call	png_warning@PLT
 7818      00
 7819              	.LVL711:
2532:fltk-1.3.4-1/png/png.c ****    }
 7820              		.loc 1 2532 7 is_stmt 1 view .LVU2160
2532:fltk-1.3.4-1/png/png.c ****    }
 7821              		.loc 1 2532 7 is_stmt 0 view .LVU2161
 7822 01e5 E970FEFF 		jmp	.L734
 7822      FF
 7823              	.LVL712:
 7824 01ea 660F1F44 		.p2align 4,,10
 7824      0000
 7825              		.p2align 3
 7826              	.L791:
2584:fltk-1.3.4-1/png/png.c ****       error = 1;
 7827              		.loc 1 2584 7 is_stmt 1 view .LVU2162
 7828 01f0 488D3500 		leaq	.LC77(%rip), %rsi
 7828      000000
 7829 01f7 4889EF   		movq	%rbp, %rdi
2585:fltk-1.3.4-1/png/png.c ****    }
 7830              		.loc 1 2585 13 is_stmt 0 view .LVU2163
 7831 01fa 41BF0100 		movl	$1, %r15d
 7831      0000
 7832              	.LVL713:
2584:fltk-1.3.4-1/png/png.c ****       error = 1;
 7833              		.loc 1 2584 7 view .LVU2164
 7834 0200 E8000000 		call	png_warning@PLT
 7834      00
 7835              	.LVL714:
2585:fltk-1.3.4-1/png/png.c ****    }
 7836              		.loc 1 2585 7 is_stmt 1 view .LVU2165
2585:fltk-1.3.4-1/png/png.c ****    }
 7837              		.loc 1 2585 7 is_stmt 0 view .LVU2166
 7838 0205 E9DFFEFF 		jmp	.L745
 7838      FF
 7839              	.LVL715:
 7840 020a 660F1F44 		.p2align 4,,10
 7840      0000
 7841              		.p2align 3
 7842              	.L785:
2486:fltk-1.3.4-1/png/png.c ****       error = 1;
 7843              		.loc 1 2486 7 is_stmt 1 view .LVU2167
 7844 0210 488D3500 		leaq	.LC67(%rip), %rsi
 7844      000000
 7845              	.LVL716:
2487:fltk-1.3.4-1/png/png.c ****    }
 7846              		.loc 1 2487 13 is_stmt 0 view .LVU2168
 7847 0217 41BF0100 		movl	$1, %r15d
 7847      0000
2486:fltk-1.3.4-1/png/png.c ****       error = 1;
 7848              		.loc 1 2486 7 view .LVU2169
 7849 021d E8000000 		call	png_warning@PLT
 7849      00
 7850              	.LVL717:
2487:fltk-1.3.4-1/png/png.c ****    }
 7851              		.loc 1 2487 7 is_stmt 1 view .LVU2170
2487:fltk-1.3.4-1/png/png.c ****    }
 7852              		.loc 1 2487 7 is_stmt 0 view .LVU2171
 7853 0222 E917FEFF 		jmp	.L731
 7853      FF
 7854              	.LVL718:
 7855 0227 660F1F84 		.p2align 4,,10
 7855      00000000 
 7855      00
 7856              		.p2align 3
 7857              	.L786:
2491:fltk-1.3.4-1/png/png.c ****       error = 1;
 7858              		.loc 1 2491 7 is_stmt 1 view .LVU2172
 7859 0230 488D3500 		leaq	.LC68(%rip), %rsi
 7859      000000
 7860              	.LVL719:
2492:fltk-1.3.4-1/png/png.c ****    }
 7861              		.loc 1 2492 13 is_stmt 0 view .LVU2173
 7862 0237 41BF0100 		movl	$1, %r15d
 7862      0000
2491:fltk-1.3.4-1/png/png.c ****       error = 1;
 7863              		.loc 1 2491 7 view .LVU2174
 7864 023d E8000000 		call	png_warning@PLT
 7864      00
 7865              	.LVL720:
2492:fltk-1.3.4-1/png/png.c ****    }
 7866              		.loc 1 2492 7 is_stmt 1 view .LVU2175
2492:fltk-1.3.4-1/png/png.c ****    }
 7867              		.loc 1 2492 7 is_stmt 0 view .LVU2176
 7868 0242 E9F7FDFF 		jmp	.L731
 7868      FF
 7869              	.LVL721:
 7870 0247 660F1F84 		.p2align 4,,10
 7870      00000000 
 7870      00
 7871              		.p2align 3
 7872              	.L789:
2536:fltk-1.3.4-1/png/png.c ****       error = 1;
 7873              		.loc 1 2536 7 is_stmt 1 view .LVU2177
 7874 0250 488D3500 		leaq	.LC71(%rip), %rsi
 7874      000000
 7875 0257 4889EF   		movq	%rbp, %rdi
2537:fltk-1.3.4-1/png/png.c ****    }
 7876              		.loc 1 2537 13 is_stmt 0 view .LVU2178
 7877 025a 41BF0100 		movl	$1, %r15d
 7877      0000
 7878              	.LVL722:
2536:fltk-1.3.4-1/png/png.c ****       error = 1;
 7879              		.loc 1 2536 7 view .LVU2179
 7880 0260 E8000000 		call	png_warning@PLT
 7880      00
 7881              	.LVL723:
2537:fltk-1.3.4-1/png/png.c ****    }
 7882              		.loc 1 2537 7 is_stmt 1 view .LVU2180
2537:fltk-1.3.4-1/png/png.c ****    }
 7883              		.loc 1 2537 7 is_stmt 0 view .LVU2181
 7884 0265 E9F0FDFF 		jmp	.L734
 7884      FF
 7885              	.LVL724:
 7886 026a 660F1F44 		.p2align 4,,10
 7886      0000
 7887              		.p2align 3
 7888              	.L790:
2547:fltk-1.3.4-1/png/png.c ****          error = 1;
 7889              		.loc 1 2547 10 is_stmt 1 view .LVU2182
 7890 0270 488D3500 		leaq	.LC72(%rip), %rsi
 7890      000000
 7891 0277 4889EF   		movq	%rbp, %rdi
2548:fltk-1.3.4-1/png/png.c ****       }
 7892              		.loc 1 2548 16 is_stmt 0 view .LVU2183
 7893 027a 41BF0100 		movl	$1, %r15d
 7893      0000
 7894              	.LVL725:
2547:fltk-1.3.4-1/png/png.c ****          error = 1;
 7895              		.loc 1 2547 10 view .LVU2184
 7896 0280 E8000000 		call	png_warning@PLT
 7896      00
 7897              	.LVL726:
2548:fltk-1.3.4-1/png/png.c ****       }
 7898              		.loc 1 2548 10 is_stmt 1 view .LVU2185
2548:fltk-1.3.4-1/png/png.c ****       }
 7899              		.loc 1 2548 10 is_stmt 0 view .LVU2186
 7900 0285 E9D0FDFF 		jmp	.L734
 7900      FF
 7901              	.LVL727:
 7902 028a 660F1F44 		.p2align 4,,10
 7902      0000
 7903              		.p2align 3
 7904              	.L787:
2524:fltk-1.3.4-1/png/png.c ****          error = 1;
 7905              		.loc 1 2524 10 is_stmt 1 view .LVU2187
 7906 0290 488D3500 		leaq	.LC69(%rip), %rsi
 7906      000000
 7907              	.LVL728:
2525:fltk-1.3.4-1/png/png.c ****       }
 7908              		.loc 1 2525 16 is_stmt 0 view .LVU2188
 7909 0297 41BF0100 		movl	$1, %r15d
 7909      0000
2524:fltk-1.3.4-1/png/png.c ****          error = 1;
 7910              		.loc 1 2524 10 view .LVU2189
 7911 029d E8000000 		call	png_warning@PLT
 7911      00
 7912              	.LVL729:
2525:fltk-1.3.4-1/png/png.c ****       }
 7913              		.loc 1 2525 10 is_stmt 1 view .LVU2190
2525:fltk-1.3.4-1/png/png.c ****       }
 7914              		.loc 1 2525 10 is_stmt 0 view .LVU2191
 7915 02a2 E997FDFF 		jmp	.L731
 7915      FF
 7916              	.LVL730:
 7917              	.L793:
2616:fltk-1.3.4-1/png/png.c ****          error = 1;
 7918              		.loc 1 2616 10 is_stmt 1 view .LVU2192
 7919 02a7 488D3500 		leaq	.LC80(%rip), %rsi
 7919      000000
 7920 02ae 4889EF   		movq	%rbp, %rdi
 7921 02b1 E8000000 		call	png_warning@PLT
 7921      00
 7922              	.LVL731:
2617:fltk-1.3.4-1/png/png.c ****       }
 7923              		.loc 1 2617 10 view .LVU2193
2629:fltk-1.3.4-1/png/png.c ****       png_error(png_ptr, "Invalid IHDR data");
 7924              		.loc 1 2629 4 view .LVU2194
 7925 02b6 E965FEFF 		jmp	.L754
 7925      FF
 7926              		.cfi_endproc
 7927              	.LFE96:
 7929              		.section	.text.png_check_fp_number,"ax",@progbits
 7930              		.p2align 4
 7931              		.globl	png_check_fp_number
 7933              	png_check_fp_number:
 7934              	.LVL732:
 7935              	.LFB97:
2645:fltk-1.3.4-1/png/png.c ****    int state = *statep;
 7936              		.loc 1 2645 1 view -0
 7937              		.cfi_startproc
2645:fltk-1.3.4-1/png/png.c ****    int state = *statep;
 7938              		.loc 1 2645 1 is_stmt 0 view .LVU2196
 7939 0000 F30F1EFA 		endbr64
2646:fltk-1.3.4-1/png/png.c ****    png_size_t i = *whereami;
 7940              		.loc 1 2646 4 is_stmt 1 view .LVU2197
2647:fltk-1.3.4-1/png/png.c **** 
 7941              		.loc 1 2647 15 is_stmt 0 view .LVU2198
 7942 0004 4C8B09   		movq	(%rcx), %r9
2646:fltk-1.3.4-1/png/png.c ****    png_size_t i = *whereami;
 7943              		.loc 1 2646 8 view .LVU2199
 7944 0007 448B02   		movl	(%rdx), %r8d
 7945              	.LVL733:
2647:fltk-1.3.4-1/png/png.c **** 
 7946              		.loc 1 2647 4 is_stmt 1 view .LVU2200
2649:fltk-1.3.4-1/png/png.c ****    {
 7947              		.loc 1 2649 4 view .LVU2201
2649:fltk-1.3.4-1/png/png.c ****    {
 7948              		.loc 1 2649 10 view .LVU2202
 7949 000a 4939F1   		cmpq	%rsi, %r9
 7950 000d 0F836D01 		jnb	.L841
 7950      0000
 7951 0013 420FB604 		movzbl	(%rdi,%r9), %eax
 7951      0F
 7952 0018 4C8D1500 		leaq	.L798(%rip), %r10
 7952      000000
 7953 001f 4C8D1D00 		leaq	.L807(%rip), %r11
 7953      000000
 7954              	.LBB475:
2651:fltk-1.3.4-1/png/png.c ****       /* First find the type of the next character */
 7955              		.loc 1 2651 7 view .LVU2203
2653:fltk-1.3.4-1/png/png.c ****       {
 7956              		.loc 1 2653 7 view .LVU2204
 7957 0026 83E82B   		subl	$43, %eax
 7958 0029 3C3A     		cmpb	$58, %al
 7959 002b 0F874F01 		ja	.L841
 7959      0000
 7960              	.LBE475:
2645:fltk-1.3.4-1/png/png.c ****    int state = *statep;
 7961              		.loc 1 2645 1 is_stmt 0 view .LVU2205
 7962 0031 55       		pushq	%rbp
 7963              		.cfi_def_cfa_offset 16
 7964              		.cfi_offset 6, -16
 7965 0032 53       		pushq	%rbx
 7966              		.cfi_def_cfa_offset 24
 7967              		.cfi_offset 3, -24
 7968              	.L834:
2645:fltk-1.3.4-1/png/png.c ****    int state = *statep;
 7969              		.loc 1 2645 1 view .LVU2206
 7970 0033 0FB6C0   		movzbl	%al, %eax
 7971 0036 49630482 		movslq	(%r10,%rax,4), %rax
 7972 003a 4C01D0   		addq	%r10, %rax
 7973 003d 3EFFE0   		notrack jmp	*%rax
 7974              		.section	.rodata.png_check_fp_number,"a",@progbits
 7975              		.align 4
 7976              		.align 4
 7977              	.L798:
 7978 0000 00000000 		.long	.L821-.L798
 7979 0004 00000000 		.long	.L840-.L798
 7980 0008 00000000 		.long	.L802-.L798
 7981 000c 00000000 		.long	.L801-.L798
 7982 0010 00000000 		.long	.L840-.L798
 7983 0014 00000000 		.long	.L800-.L798
 7984 0018 00000000 		.long	.L799-.L798
 7985 001c 00000000 		.long	.L799-.L798
 7986 0020 00000000 		.long	.L799-.L798
 7987 0024 00000000 		.long	.L799-.L798
 7988 0028 00000000 		.long	.L799-.L798
 7989 002c 00000000 		.long	.L799-.L798
 7990 0030 00000000 		.long	.L799-.L798
 7991 0034 00000000 		.long	.L799-.L798
 7992 0038 00000000 		.long	.L799-.L798
 7993 003c 00000000 		.long	.L840-.L798
 7994 0040 00000000 		.long	.L840-.L798
 7995 0044 00000000 		.long	.L840-.L798
 7996 0048 00000000 		.long	.L840-.L798
 7997 004c 00000000 		.long	.L840-.L798
 7998 0050 00000000 		.long	.L840-.L798
 7999 0054 00000000 		.long	.L840-.L798
 8000 0058 00000000 		.long	.L840-.L798
 8001 005c 00000000 		.long	.L840-.L798
 8002 0060 00000000 		.long	.L840-.L798
 8003 0064 00000000 		.long	.L840-.L798
 8004 0068 00000000 		.long	.L797-.L798
 8005 006c 00000000 		.long	.L840-.L798
 8006 0070 00000000 		.long	.L840-.L798
 8007 0074 00000000 		.long	.L840-.L798
 8008 0078 00000000 		.long	.L840-.L798
 8009 007c 00000000 		.long	.L840-.L798
 8010 0080 00000000 		.long	.L840-.L798
 8011 0084 00000000 		.long	.L840-.L798
 8012 0088 00000000 		.long	.L840-.L798
 8013 008c 00000000 		.long	.L840-.L798
 8014 0090 00000000 		.long	.L840-.L798
 8015 0094 00000000 		.long	.L840-.L798
 8016 0098 00000000 		.long	.L840-.L798
 8017 009c 00000000 		.long	.L840-.L798
 8018 00a0 00000000 		.long	.L840-.L798
 8019 00a4 00000000 		.long	.L840-.L798
 8020 00a8 00000000 		.long	.L840-.L798
 8021 00ac 00000000 		.long	.L840-.L798
 8022 00b0 00000000 		.long	.L840-.L798
 8023 00b4 00000000 		.long	.L840-.L798
 8024 00b8 00000000 		.long	.L840-.L798
 8025 00bc 00000000 		.long	.L840-.L798
 8026 00c0 00000000 		.long	.L840-.L798
 8027 00c4 00000000 		.long	.L840-.L798
 8028 00c8 00000000 		.long	.L840-.L798
 8029 00cc 00000000 		.long	.L840-.L798
 8030 00d0 00000000 		.long	.L840-.L798
 8031 00d4 00000000 		.long	.L840-.L798
 8032 00d8 00000000 		.long	.L840-.L798
 8033 00dc 00000000 		.long	.L840-.L798
 8034 00e0 00000000 		.long	.L840-.L798
 8035 00e4 00000000 		.long	.L840-.L798
 8036 00e8 00000000 		.long	.L797-.L798
 8037              		.section	.text.png_check_fp_number
 8038              	.LVL734:
 8039              		.p2align 4,,10
 8040              		.p2align 3
 8041              	.L806:
 8042              	.LBB476:
2724:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End;
 8043              		.loc 1 2724 10 is_stmt 1 view .LVU2207
2724:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End;
 8044              		.loc 1 2724 13 is_stmt 0 view .LVU2208
 8045 0040 4489C0   		movl	%r8d, %eax
 8046 0043 83E008   		andl	$8, %eax
 8047 0046 742E     		je	.L804
2727:fltk-1.3.4-1/png/png.c **** 
 8048              		.loc 1 2727 10 is_stmt 1 view .LVU2209
 8049 0048 4181E0C0 		andl	$448, %r8d
 8049      010000
 8050              	.LVL735:
2727:fltk-1.3.4-1/png/png.c **** 
 8051              		.loc 1 2727 10 is_stmt 0 view .LVU2210
 8052 004f 4183C802 		orl	$2, %r8d
 8053              	.LVL736:
2729:fltk-1.3.4-1/png/png.c **** 
 8054              		.loc 1 2729 10 is_stmt 1 view .LVU2211
 8055              	.L816:
2754:fltk-1.3.4-1/png/png.c ****    }
 8056              		.loc 1 2754 7 view .LVU2212
 8057 0053 4983C101 		addq	$1, %r9
 8058              	.LVL737:
2754:fltk-1.3.4-1/png/png.c ****    }
 8059              		.loc 1 2754 7 is_stmt 0 view .LVU2213
 8060              	.LBE476:
2649:fltk-1.3.4-1/png/png.c ****    {
 8061              		.loc 1 2649 10 is_stmt 1 view .LVU2214
 8062 0057 4C39CE   		cmpq	%r9, %rsi
 8063 005a 7414     		je	.L840
 8064              	.LBB477:
2651:fltk-1.3.4-1/png/png.c ****       /* First find the type of the next character */
 8065              		.loc 1 2651 7 view .LVU2215
2653:fltk-1.3.4-1/png/png.c ****       {
 8066              		.loc 1 2653 7 view .LVU2216
 8067 005c 420FB604 		movzbl	(%rdi,%r9), %eax
 8067      0F
 8068 0061 83E82B   		subl	$43, %eax
 8069 0064 3C3A     		cmpb	$58, %al
 8070 0066 76CB     		jbe	.L834
 8071              	.LVL738:
 8072 0068 0F1F8400 		.p2align 4,,10
 8072      00000000 
 8073              		.p2align 3
 8074              	.L840:
2653:fltk-1.3.4-1/png/png.c ****       {
 8075              		.loc 1 2653 7 is_stmt 0 view .LVU2217
 8076 0070 4489C0   		movl	%r8d, %eax
 8077 0073 83E008   		andl	$8, %eax
 8078              	.L804:
2653:fltk-1.3.4-1/png/png.c ****       {
 8079              		.loc 1 2653 7 view .LVU2218
 8080              	.LBE477:
2761:fltk-1.3.4-1/png/png.c ****    *whereami = i;
 8081              		.loc 1 2761 4 is_stmt 1 view .LVU2219
2764:fltk-1.3.4-1/png/png.c **** }
 8082              		.loc 1 2764 38 is_stmt 0 view .LVU2220
 8083 0076 85C0     		testl	%eax, %eax
2761:fltk-1.3.4-1/png/png.c ****    *whereami = i;
 8084              		.loc 1 2761 12 view .LVU2221
 8085 0078 448902   		movl	%r8d, (%rdx)
2762:fltk-1.3.4-1/png/png.c **** 
 8086              		.loc 1 2762 4 is_stmt 1 view .LVU2222
2765:fltk-1.3.4-1/png/png.c **** 
 8087              		.loc 1 2765 1 is_stmt 0 view .LVU2223
 8088 007b 5B       		popq	%rbx
 8089              		.cfi_remember_state
 8090              		.cfi_def_cfa_offset 16
2764:fltk-1.3.4-1/png/png.c **** }
 8091              		.loc 1 2764 38 view .LVU2224
 8092 007c 0F95C0   		setne	%al
2762:fltk-1.3.4-1/png/png.c **** 
 8093              		.loc 1 2762 14 view .LVU2225
 8094 007f 4C8909   		movq	%r9, (%rcx)
2764:fltk-1.3.4-1/png/png.c **** }
 8095              		.loc 1 2764 4 is_stmt 1 view .LVU2226
2765:fltk-1.3.4-1/png/png.c **** 
 8096              		.loc 1 2765 1 is_stmt 0 view .LVU2227
 8097 0082 5D       		popq	%rbp
 8098              		.cfi_def_cfa_offset 8
2764:fltk-1.3.4-1/png/png.c **** }
 8099              		.loc 1 2764 38 view .LVU2228
 8100 0083 0FB6C0   		movzbl	%al, %eax
2765:fltk-1.3.4-1/png/png.c **** 
 8101              		.loc 1 2765 1 view .LVU2229
 8102 0086 C3       		ret
 8103 0087 660F1F84 		.p2align 4,,10
 8103      00000000 
 8103      00
 8104              		.p2align 3
 8105              	.L799:
 8106              		.cfi_restore_state
 8107              	.LBB478:
2661:fltk-1.3.4-1/png/png.c ****       case 69:
 8108              		.loc 1 2661 17 is_stmt 1 view .LVU2230
 8109              	.LVL739:
2661:fltk-1.3.4-1/png/png.c ****       case 69:
 8110              		.loc 1 2661 59 view .LVU2231
2661:fltk-1.3.4-1/png/png.c ****       case 69:
 8111              		.loc 1 2661 7 is_stmt 0 view .LVU2232
 8112 0090 BD080000 		movl	$8, %ebp
 8112      00
2661:fltk-1.3.4-1/png/png.c ****       case 69:
 8113              		.loc 1 2661 22 view .LVU2233
 8114 0095 BB080100 		movl	$264, %ebx
 8114      00
 8115              	.LVL740:
 8116              	.L803:
2671:fltk-1.3.4-1/png/png.c ****       {
 8117              		.loc 1 2671 7 is_stmt 1 view .LVU2234
2671:fltk-1.3.4-1/png/png.c ****       {
 8118              		.loc 1 2671 22 is_stmt 0 view .LVU2235
 8119 009a 4489C0   		movl	%r8d, %eax
 8120 009d 83E003   		andl	$3, %eax
2671:fltk-1.3.4-1/png/png.c ****       {
 8121              		.loc 1 2671 38 view .LVU2236
 8122 00a0 09E8     		orl	%ebp, %eax
 8123 00a2 83E804   		subl	$4, %eax
 8124 00a5 83F81D   		cmpl	$29, %eax
 8125 00a8 77C6     		ja	.L840
2671:fltk-1.3.4-1/png/png.c ****       {
 8126              		.loc 1 2671 38 view .LVU2237
 8127 00aa 49630483 		movslq	(%r11,%rax,4), %rax
 8128 00ae 4C01D8   		addq	%r11, %rax
 8129 00b1 3EFFE0   		notrack jmp	*%rax
 8130              		.section	.rodata.png_check_fp_number
 8131              		.align 4
 8132              		.align 4
 8133              	.L807:
 8134 00ec 00000000 		.long	.L814-.L807
 8135 00f0 00000000 		.long	.L840-.L807
 8136 00f4 00000000 		.long	.L813-.L807
 8137 00f8 00000000 		.long	.L840-.L807
 8138 00fc 00000000 		.long	.L812-.L807
 8139 0100 00000000 		.long	.L811-.L807
 8140 0104 00000000 		.long	.L810-.L807
 8141 0108 00000000 		.long	.L840-.L807
 8142 010c 00000000 		.long	.L840-.L807
 8143 0110 00000000 		.long	.L840-.L807
 8144 0114 00000000 		.long	.L840-.L807
 8145 0118 00000000 		.long	.L840-.L807
 8146 011c 00000000 		.long	.L809-.L807
 8147 0120 00000000 		.long	.L840-.L807
 8148 0124 00000000 		.long	.L840-.L807
 8149 0128 00000000 		.long	.L840-.L807
 8150 012c 00000000 		.long	.L840-.L807
 8151 0130 00000000 		.long	.L840-.L807
 8152 0134 00000000 		.long	.L840-.L807
 8153 0138 00000000 		.long	.L840-.L807
 8154 013c 00000000 		.long	.L840-.L807
 8155 0140 00000000 		.long	.L840-.L807
 8156 0144 00000000 		.long	.L840-.L807
 8157 0148 00000000 		.long	.L840-.L807
 8158 014c 00000000 		.long	.L840-.L807
 8159 0150 00000000 		.long	.L840-.L807
 8160 0154 00000000 		.long	.L840-.L807
 8161 0158 00000000 		.long	.L840-.L807
 8162 015c 00000000 		.long	.L806-.L807
 8163 0160 00000000 		.long	.L806-.L807
 8164              		.section	.text.png_check_fp_number
 8165              	.LVL741:
 8166              		.p2align 4,,10
 8167 00b4 0F1F4000 		.p2align 3
 8168              	.L797:
2663:fltk-1.3.4-1/png/png.c ****       default:  goto PNG_FP_End;
 8169              		.loc 1 2663 17 is_stmt 1 view .LVU2238
2663:fltk-1.3.4-1/png/png.c ****       default:  goto PNG_FP_End;
 8170              		.loc 1 2663 59 view .LVU2239
2663:fltk-1.3.4-1/png/png.c ****       default:  goto PNG_FP_End;
 8171              		.loc 1 2663 7 is_stmt 0 view .LVU2240
 8172 00b8 BD200000 		movl	$32, %ebp
 8172      00
2663:fltk-1.3.4-1/png/png.c ****       default:  goto PNG_FP_End;
 8173              		.loc 1 2663 22 view .LVU2241
 8174 00bd BB200000 		movl	$32, %ebx
 8174      00
2663:fltk-1.3.4-1/png/png.c ****       default:  goto PNG_FP_End;
 8175              		.loc 1 2663 7 view .LVU2242
 8176 00c2 EBD6     		jmp	.L803
 8177              	.LVL742:
 8178              		.p2align 4,,10
 8179 00c4 0F1F4000 		.p2align 3
 8180              	.L800:
2658:fltk-1.3.4-1/png/png.c ****       case 49: case 50: case 51: case 52:
 8181              		.loc 1 2658 17 is_stmt 1 view .LVU2243
2658:fltk-1.3.4-1/png/png.c ****       case 49: case 50: case 51: case 52:
 8182              		.loc 1 2658 59 view .LVU2244
2658:fltk-1.3.4-1/png/png.c ****       case 49: case 50: case 51: case 52:
 8183              		.loc 1 2658 7 is_stmt 0 view .LVU2245
 8184 00c8 BD080000 		movl	$8, %ebp
 8184      00
2658:fltk-1.3.4-1/png/png.c ****       case 49: case 50: case 51: case 52:
 8185              		.loc 1 2658 22 view .LVU2246
 8186 00cd BB080000 		movl	$8, %ebx
 8186      00
2658:fltk-1.3.4-1/png/png.c ****       case 49: case 50: case 51: case 52:
 8187              		.loc 1 2658 7 view .LVU2247
 8188 00d2 EBC6     		jmp	.L803
 8189              	.LVL743:
 8190              		.p2align 4,,10
 8191 00d4 0F1F4000 		.p2align 3
 8192              	.L801:
2657:fltk-1.3.4-1/png/png.c ****       case 48:  type = PNG_FP_SAW_DIGIT;                  break;
 8193              		.loc 1 2657 17 is_stmt 1 view .LVU2248
2657:fltk-1.3.4-1/png/png.c ****       case 48:  type = PNG_FP_SAW_DIGIT;                  break;
 8194              		.loc 1 2657 59 view .LVU2249
2657:fltk-1.3.4-1/png/png.c ****       case 48:  type = PNG_FP_SAW_DIGIT;                  break;
 8195              		.loc 1 2657 7 is_stmt 0 view .LVU2250
 8196 00d8 BD100000 		movl	$16, %ebp
 8196      00
2657:fltk-1.3.4-1/png/png.c ****       case 48:  type = PNG_FP_SAW_DIGIT;                  break;
 8197              		.loc 1 2657 22 view .LVU2251
 8198 00dd BB100000 		movl	$16, %ebx
 8198      00
2657:fltk-1.3.4-1/png/png.c ****       case 48:  type = PNG_FP_SAW_DIGIT;                  break;
 8199              		.loc 1 2657 7 view .LVU2252
 8200 00e2 EBB6     		jmp	.L803
 8201              	.LVL744:
 8202              		.p2align 4,,10
 8203 00e4 0F1F4000 		.p2align 3
 8204              	.L809:
2682:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End;
 8205              		.loc 1 2682 10 is_stmt 1 view .LVU2253
 8206 00e8 4489C0   		movl	%r8d, %eax
 8207 00eb 83E008   		andl	$8, %eax
2682:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End;
 8208              		.loc 1 2682 13 is_stmt 0 view .LVU2254
 8209 00ee 41F6C010 		testb	$16, %r8b
 8210 00f2 7582     		jne	.L804
2685:fltk-1.3.4-1/png/png.c ****             png_fp_add(state, type);
 8211              		.loc 1 2685 15 is_stmt 1 view .LVU2255
2685:fltk-1.3.4-1/png/png.c ****             png_fp_add(state, type);
 8212              		.loc 1 2685 18 is_stmt 0 view .LVU2256
 8213 00f4 85C0     		testl	%eax, %eax
 8214 00f6 0F849C00 		je	.L817
 8214      0000
2686:fltk-1.3.4-1/png/png.c **** 
 8215              		.loc 1 2686 13 is_stmt 1 view .LVU2257
 8216 00fc 4109D8   		orl	%ebx, %r8d
 8217              	.LVL745:
2686:fltk-1.3.4-1/png/png.c **** 
 8218              		.loc 1 2686 13 is_stmt 0 view .LVU2258
 8219 00ff E94FFFFF 		jmp	.L816
 8219      FF
 8220              		.p2align 4,,10
 8221 0104 0F1F4000 		.p2align 3
 8222              	.L810:
2743:fltk-1.3.4-1/png/png.c **** 
 8223              		.loc 1 2743 10 is_stmt 1 view .LVU2259
 8224 0108 4183C848 		orl	$72, %r8d
 8225              	.LVL746:
2745:fltk-1.3.4-1/png/png.c **** 
 8226              		.loc 1 2745 10 view .LVU2260
 8227 010c E942FFFF 		jmp	.L816
 8227      FF
 8228              		.p2align 4,,10
 8229 0111 0F1F8000 		.p2align 3
 8229      000000
 8230              	.L811:
2716:fltk-1.3.4-1/png/png.c ****          break;
 8231              		.loc 1 2716 10 view .LVU2261
 8232 0118 4109D8   		orl	%ebx, %r8d
 8233              	.LVL747:
2716:fltk-1.3.4-1/png/png.c ****          break;
 8234              		.loc 1 2716 10 is_stmt 0 view .LVU2262
 8235 011b 4183C840 		orl	$64, %r8d
 8236              	.LVL748:
2717:fltk-1.3.4-1/png/png.c **** 
 8237              		.loc 1 2717 10 is_stmt 1 view .LVU2263
 8238 011f E92FFFFF 		jmp	.L816
 8238      FF
 8239              		.p2align 4,,10
 8240 0124 0F1F4000 		.p2align 3
 8241              	.L812:
2694:fltk-1.3.4-1/png/png.c ****             png_fp_set(state, PNG_FP_FRACTION | PNG_FP_SAW_DOT);
 8242              		.loc 1 2694 10 view .LVU2264
2695:fltk-1.3.4-1/png/png.c **** 
 8243              		.loc 1 2695 13 is_stmt 0 view .LVU2265
 8244 0128 4489C0   		movl	%r8d, %eax
 8245 012b 25C00100 		andl	$448, %eax
 8245      00
 8246 0130 83C811   		orl	$17, %eax
 8247 0133 41F6C010 		testb	$16, %r8b
 8248 0137 440F45C0 		cmovne	%eax, %r8d
 8249              	.LVL749:
2697:fltk-1.3.4-1/png/png.c **** 
 8250              		.loc 1 2697 10 is_stmt 1 view .LVU2266
 8251 013b 4109D8   		orl	%ebx, %r8d
 8252              	.LVL750:
2697:fltk-1.3.4-1/png/png.c **** 
 8253              		.loc 1 2697 10 is_stmt 0 view .LVU2267
 8254 013e 4183C840 		orl	$64, %r8d
 8255              	.LVL751:
2699:fltk-1.3.4-1/png/png.c **** 
 8256              		.loc 1 2699 10 is_stmt 1 view .LVU2268
 8257 0142 E90CFFFF 		jmp	.L816
 8257      FF
 8258 0147 660F1F84 		.p2align 4,,10
 8258      00000000 
 8258      00
 8259              		.p2align 3
 8260              	.L813:
2732:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End; /* not a part of the number */
 8261              		.loc 1 2732 10 view .LVU2269
2732:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End; /* not a part of the number */
 8262              		.loc 1 2732 13 is_stmt 0 view .LVU2270
 8263 0150 41F6C03C 		testb	$60, %r8b
 8264 0154 0F8516FF 		jne	.L840
 8264      FFFF
2735:fltk-1.3.4-1/png/png.c **** 
 8265              		.loc 1 2735 10 is_stmt 1 view .LVU2271
 8266 015a 4183C804 		orl	$4, %r8d
 8267              	.LVL752:
2737:fltk-1.3.4-1/png/png.c **** 
 8268              		.loc 1 2737 10 view .LVU2272
 8269 015e E9F0FEFF 		jmp	.L816
 8269      FF
 8270              		.p2align 4,,10
 8271 0163 0F1F4400 		.p2align 3
 8271      00
 8272              	.L814:
2674:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End; /* not a part of the number */
 8273              		.loc 1 2674 10 view .LVU2273
2674:fltk-1.3.4-1/png/png.c ****             goto PNG_FP_End; /* not a part of the number */
 8274              		.loc 1 2674 13 is_stmt 0 view .LVU2274
 8275 0168 41F6C03C 		testb	$60, %r8b
 8276 016c 0F85FEFE 		jne	.L840
 8276      FFFF
2686:fltk-1.3.4-1/png/png.c **** 
 8277              		.loc 1 2686 13 is_stmt 1 view .LVU2275
 8278 0172 4109D8   		orl	%ebx, %r8d
 8279              	.LVL753:
2686:fltk-1.3.4-1/png/png.c **** 
 8280              		.loc 1 2686 13 is_stmt 0 view .LVU2276
 8281 0175 E9D9FEFF 		jmp	.L816
 8281      FF
 8282              	.LVL754:
 8283 017a 660F1F44 		.p2align 4,,10
 8283      0000
 8284              		.p2align 3
 8285              	.L841:
 8286              		.cfi_def_cfa_offset 8
 8287              		.cfi_restore 3
 8288              		.cfi_restore 6
2686:fltk-1.3.4-1/png/png.c **** 
 8289              		.loc 1 2686 13 view .LVU2277
 8290 0180 4489C0   		movl	%r8d, %eax
 8291              	.LBE478:
2761:fltk-1.3.4-1/png/png.c ****    *whereami = i;
 8292              		.loc 1 2761 12 view .LVU2278
 8293 0183 448902   		movl	%r8d, (%rdx)
 8294 0186 83E008   		andl	$8, %eax
2761:fltk-1.3.4-1/png/png.c ****    *whereami = i;
 8295              		.loc 1 2761 4 is_stmt 1 view .LVU2279
2762:fltk-1.3.4-1/png/png.c **** 
 8296              		.loc 1 2762 4 view .LVU2280
2762:fltk-1.3.4-1/png/png.c **** 
 8297              		.loc 1 2762 14 is_stmt 0 view .LVU2281
 8298 0189 4C8909   		movq	%r9, (%rcx)
2764:fltk-1.3.4-1/png/png.c **** }
 8299              		.loc 1 2764 4 is_stmt 1 view .LVU2282
2764:fltk-1.3.4-1/png/png.c **** }
 8300              		.loc 1 2764 38 is_stmt 0 view .LVU2283
 8301 018c 85C0     		testl	%eax, %eax
 8302 018e 0F95C0   		setne	%al
 8303 0191 0FB6C0   		movzbl	%al, %eax
2765:fltk-1.3.4-1/png/png.c **** 
 8304              		.loc 1 2765 1 view .LVU2284
 8305 0194 C3       		ret
 8306              	.LVL755:
 8307              		.p2align 4,,10
 8308 0195 0F1F00   		.p2align 3
 8309              	.L817:
 8310              		.cfi_def_cfa_offset 24
 8311              		.cfi_offset 3, -24
 8312              		.cfi_offset 6, -16
 8313              	.LBB479:
2689:fltk-1.3.4-1/png/png.c **** 
 8314              		.loc 1 2689 13 is_stmt 1 view .LVU2285
 8315 0198 4181E0C0 		andl	$448, %r8d
 8315      010000
 8316              	.LVL756:
2689:fltk-1.3.4-1/png/png.c **** 
 8317              		.loc 1 2689 13 is_stmt 0 view .LVU2286
 8318 019f 4109D8   		orl	%ebx, %r8d
 8319 01a2 4183C801 		orl	$1, %r8d
 8320              	.LVL757:
2689:fltk-1.3.4-1/png/png.c **** 
 8321              		.loc 1 2689 13 view .LVU2287
 8322 01a6 E9A8FEFF 		jmp	.L816
 8322      FF
 8323              	.LVL758:
 8324 01ab 0F1F4400 		.p2align 4,,10
 8324      00
 8325              		.p2align 3
 8326              	.L821:
2653:fltk-1.3.4-1/png/png.c ****       {
 8327              		.loc 1 2653 21 view .LVU2288
 8328 01b0 BD040000 		movl	$4, %ebp
 8328      00
2655:fltk-1.3.4-1/png/png.c ****       case 45:  type = PNG_FP_SAW_SIGN + PNG_FP_NEGATIVE; break;
 8329              		.loc 1 2655 22 view .LVU2289
 8330 01b5 BB040000 		movl	$4, %ebx
 8330      00
 8331 01ba E9DBFEFF 		jmp	.L803
 8331      FF
 8332 01bf 90       		.p2align 4,,10
 8333              		.p2align 3
 8334              	.L802:
2653:fltk-1.3.4-1/png/png.c ****       {
 8335              		.loc 1 2653 21 view .LVU2290
 8336 01c0 BD040000 		movl	$4, %ebp
 8336      00
 8337 01c5 BB840000 		movl	$132, %ebx
 8337      00
 8338 01ca E9CBFEFF 		jmp	.L803
 8338      FF
 8339              	.LBE479:
 8340              		.cfi_endproc
 8341              	.LFE97:
 8343              		.section	.text.png_check_fp_string,"ax",@progbits
 8344              		.p2align 4
 8345              		.globl	png_check_fp_string
 8347              	png_check_fp_string:
 8348              	.LVL759:
 8349              	.LFB98:
2771:fltk-1.3.4-1/png/png.c ****    int        state=0;
 8350              		.loc 1 2771 1 is_stmt 1 view -0
 8351              		.cfi_startproc
2771:fltk-1.3.4-1/png/png.c ****    int        state=0;
 8352              		.loc 1 2771 1 is_stmt 0 view .LVU2292
 8353 0000 F30F1EFA 		endbr64
 8354 0004 4883EC28 		subq	$40, %rsp
 8355              		.cfi_def_cfa_offset 48
2771:fltk-1.3.4-1/png/png.c ****    int        state=0;
 8356              		.loc 1 2771 1 view .LVU2293
 8357 0008 64488B04 		movq	%fs:40, %rax
 8357      25280000 
 8357      00
 8358 0011 48894424 		movq	%rax, 24(%rsp)
 8358      18
 8359 0016 31C0     		xorl	%eax, %eax
2772:fltk-1.3.4-1/png/png.c ****    png_size_t char_index=0;
 8360              		.loc 1 2772 4 is_stmt 1 view .LVU2294
2775:fltk-1.3.4-1/png/png.c ****       (char_index == size || string[char_index] == 0))
 8361              		.loc 1 2775 8 is_stmt 0 view .LVU2295
 8362 0018 488D4C24 		leaq	16(%rsp), %rcx
 8362      10
 8363 001d 488D5424 		leaq	12(%rsp), %rdx
 8363      0C
2772:fltk-1.3.4-1/png/png.c ****    png_size_t char_index=0;
 8364              		.loc 1 2772 15 view .LVU2296
 8365 0022 C744240C 		movl	$0, 12(%rsp)
 8365      00000000 
2773:fltk-1.3.4-1/png/png.c **** 
 8366              		.loc 1 2773 4 is_stmt 1 view .LVU2297
2773:fltk-1.3.4-1/png/png.c **** 
 8367              		.loc 1 2773 15 is_stmt 0 view .LVU2298
 8368 002a 48C74424 		movq	$0, 16(%rsp)
 8368      10000000 
 8368      00
2775:fltk-1.3.4-1/png/png.c ****       (char_index == size || string[char_index] == 0))
 8369              		.loc 1 2775 4 is_stmt 1 view .LVU2299
2775:fltk-1.3.4-1/png/png.c ****       (char_index == size || string[char_index] == 0))
 8370              		.loc 1 2775 8 is_stmt 0 view .LVU2300
 8371 0033 E8000000 		call	png_check_fp_number
 8371      00
 8372              	.LVL760:
2775:fltk-1.3.4-1/png/png.c ****       (char_index == size || string[char_index] == 0))
 8373              		.loc 1 2775 7 view .LVU2301
 8374 0038 85C0     		testl	%eax, %eax
 8375 003a 7412     		je	.L843
2776:fltk-1.3.4-1/png/png.c ****       return state /* must be non-zero - see above */;
 8376              		.loc 1 2776 19 discriminator 1 view .LVU2302
 8377 003c 488B5424 		movq	16(%rsp), %rdx
 8377      10
2775:fltk-1.3.4-1/png/png.c ****       (char_index == size || string[char_index] == 0))
 8378              		.loc 1 2775 68 discriminator 1 view .LVU2303
 8379 0041 4839F2   		cmpq	%rsi, %rdx
 8380 0044 7422     		je	.L845
2779:fltk-1.3.4-1/png/png.c **** }
 8381              		.loc 1 2779 11 view .LVU2304
 8382 0046 31C0     		xorl	%eax, %eax
2776:fltk-1.3.4-1/png/png.c ****       return state /* must be non-zero - see above */;
 8383              		.loc 1 2776 27 view .LVU2305
 8384 0048 803C1700 		cmpb	$0, (%rdi,%rdx)
 8385 004c 741A     		je	.L845
 8386              	.L843:
2780:fltk-1.3.4-1/png/png.c **** #endif /* pCAL || sCAL */
 8387              		.loc 1 2780 1 view .LVU2306
 8388 004e 488B4C24 		movq	24(%rsp), %rcx
 8388      18
 8389 0053 6448330C 		xorq	%fs:40, %rcx
 8389      25280000 
 8389      00
 8390 005c 7510     		jne	.L852
 8391 005e 4883C428 		addq	$40, %rsp
 8392              		.cfi_remember_state
 8393              		.cfi_def_cfa_offset 8
 8394 0062 C3       		ret
 8395              		.p2align 4,,10
 8396 0063 0F1F4400 		.p2align 3
 8396      00
 8397              	.L845:
 8398              		.cfi_restore_state
2777:fltk-1.3.4-1/png/png.c **** 
 8399              		.loc 1 2777 7 is_stmt 1 view .LVU2307
2777:fltk-1.3.4-1/png/png.c **** 
 8400              		.loc 1 2777 14 is_stmt 0 view .LVU2308
 8401 0068 8B44240C 		movl	12(%rsp), %eax
 8402 006c EBE0     		jmp	.L843
 8403              	.L852:
2780:fltk-1.3.4-1/png/png.c **** #endif /* pCAL || sCAL */
 8404              		.loc 1 2780 1 view .LVU2309
 8405 006e E8000000 		call	__stack_chk_fail@PLT
 8405      00
 8406              	.LVL761:
2780:fltk-1.3.4-1/png/png.c **** #endif /* pCAL || sCAL */
 8407              		.loc 1 2780 1 view .LVU2310
 8408              		.cfi_endproc
 8409              	.LFE98:
 8411              		.section	.rodata.png_ascii_from_fp.str1.8,"aMS",@progbits,1
 8412              		.align 8
 8413              	.LC86:
 8414 0000 41534349 		.string	"ASCII conversion buffer too small"
 8414      4920636F 
 8414      6E766572 
 8414      73696F6E 
 8414      20627566 
 8415              		.section	.text.png_ascii_from_fp,"ax",@progbits
 8416              		.p2align 4
 8417              		.globl	png_ascii_from_fp
 8419              	png_ascii_from_fp:
 8420              	.LVL762:
 8421              	.LFB100:
2828:fltk-1.3.4-1/png/png.c ****    /* We use standard functions from math.h, but not printf because
 8422              		.loc 1 2828 1 is_stmt 1 view -0
 8423              		.cfi_startproc
2828:fltk-1.3.4-1/png/png.c ****    /* We use standard functions from math.h, but not printf because
 8424              		.loc 1 2828 1 is_stmt 0 view .LVU2312
 8425 0000 F30F1EFA 		endbr64
 8426 0004 4157     		pushq	%r15
 8427              		.cfi_def_cfa_offset 16
 8428              		.cfi_offset 15, -16
 8429 0006 660F28C8 		movapd	%xmm0, %xmm1
 8430 000a 4156     		pushq	%r14
 8431              		.cfi_def_cfa_offset 24
 8432              		.cfi_offset 14, -24
 8433 000c 4155     		pushq	%r13
 8434              		.cfi_def_cfa_offset 32
 8435              		.cfi_offset 13, -32
 8436 000e 4154     		pushq	%r12
 8437              		.cfi_def_cfa_offset 40
 8438              		.cfi_offset 12, -40
 8439 0010 4989D4   		movq	%rdx, %r12
 8440 0013 55       		pushq	%rbp
 8441              		.cfi_def_cfa_offset 48
 8442              		.cfi_offset 6, -48
 8443 0014 53       		pushq	%rbx
 8444              		.cfi_def_cfa_offset 56
 8445              		.cfi_offset 3, -56
 8446 0015 4889F3   		movq	%rsi, %rbx
 8447 0018 4883EC48 		subq	$72, %rsp
 8448              		.cfi_def_cfa_offset 128
2828:fltk-1.3.4-1/png/png.c ****    /* We use standard functions from math.h, but not printf because
 8449              		.loc 1 2828 1 view .LVU2313
 8450 001c 48897C24 		movq	%rdi, 8(%rsp)
 8450      08
 8451 0021 64488B04 		movq	%fs:40, %rax
 8451      25280000 
 8451      00
 8452 002a 48894424 		movq	%rax, 56(%rsp)
 8452      38
 8453 002f 31C0     		xorl	%eax, %eax
2834:fltk-1.3.4-1/png/png.c ****       precision = DBL_DIG;
 8454              		.loc 1 2834 4 is_stmt 1 view .LVU2314
2834:fltk-1.3.4-1/png/png.c ****       precision = DBL_DIG;
 8455              		.loc 1 2834 7 is_stmt 0 view .LVU2315
 8456 0031 85C9     		testl	%ecx, %ecx
 8457 0033 747B     		je	.L907
2838:fltk-1.3.4-1/png/png.c ****       precision = DBL_DIG+1;
 8458              		.loc 1 2838 4 is_stmt 1 view .LVU2316
 8459 0035 83F910   		cmpl	$16, %ecx
 8460 0038 BD100000 		movl	$16, %ebp
 8460      00
 8461 003d 0F46E9   		cmovbe	%ecx, %ebp
 8462 0040 8D4505   		leal	5(%rbp), %eax
 8463              	.L854:
 8464              	.LVL763:
2842:fltk-1.3.4-1/png/png.c ****    {
 8465              		.loc 1 2842 4 view .LVU2317
2842:fltk-1.3.4-1/png/png.c ****    {
 8466              		.loc 1 2842 7 is_stmt 0 view .LVU2318
 8467 0043 4939C4   		cmpq	%rax, %r12
 8468 0046 0F82A905 		jb	.L855
 8468      0000
2844:fltk-1.3.4-1/png/png.c ****       {
 8469              		.loc 1 2844 7 is_stmt 1 view .LVU2319
2844:fltk-1.3.4-1/png/png.c ****       {
 8470              		.loc 1 2844 10 is_stmt 0 view .LVU2320
 8471 004c 660FEFE4 		pxor	%xmm4, %xmm4
 8472 0050 660F2FE1 		comisd	%xmm1, %xmm4
 8473 0054 7613     		jbe	.L856
2846:fltk-1.3.4-1/png/png.c ****          *ascii++ = 45; /* '-'  PLUS 1 TOTAL 1 */
 8474              		.loc 1 2846 10 is_stmt 1 view .LVU2321
2846:fltk-1.3.4-1/png/png.c ****          *ascii++ = 45; /* '-'  PLUS 1 TOTAL 1 */
 8475              		.loc 1 2846 13 is_stmt 0 view .LVU2322
 8476 0056 660F570D 		xorpd	.LC82(%rip), %xmm1
 8476      00000000 
 8477              	.LVL764:
2847:fltk-1.3.4-1/png/png.c ****          --size;
 8478              		.loc 1 2847 10 is_stmt 1 view .LVU2323
2847:fltk-1.3.4-1/png/png.c ****          --size;
 8479              		.loc 1 2847 19 is_stmt 0 view .LVU2324
 8480 005e C6032D   		movb	$45, (%rbx)
2848:fltk-1.3.4-1/png/png.c ****       }
 8481              		.loc 1 2848 10 is_stmt 1 view .LVU2325
 8482 0061 4983EC01 		subq	$1, %r12
 8483              	.LVL765:
2847:fltk-1.3.4-1/png/png.c ****          --size;
 8484              		.loc 1 2847 16 is_stmt 0 view .LVU2326
 8485 0065 4883C301 		addq	$1, %rbx
 8486              	.LVL766:
 8487              	.L856:
2851:fltk-1.3.4-1/png/png.c ****       {
 8488              		.loc 1 2851 7 is_stmt 1 view .LVU2327
2851:fltk-1.3.4-1/png/png.c ****       {
 8489              		.loc 1 2851 10 is_stmt 0 view .LVU2328
 8490 0069 660F2F0D 		comisd	.LC83(%rip), %xmm1
 8490      00000000 
 8491 0071 724D     		jb	.L952
2851:fltk-1.3.4-1/png/png.c ****       {
 8492              		.loc 1 2851 25 discriminator 1 view .LVU2329
 8493 0073 F20F103D 		movsd	.LC84(%rip), %xmm7
 8493      00000000 
 8494 007b 660F2FF9 		comisd	%xmm1, %xmm7
 8495 007f 734F     		jnb	.L961
3123:fltk-1.3.4-1/png/png.c ****          *ascii++ = 110; /* 'n' */
 8496              		.loc 1 3123 10 is_stmt 1 view .LVU2330
 8497              	.LVL767:
3124:fltk-1.3.4-1/png/png.c ****          *ascii++ = 102; /* 'f' */
 8498              		.loc 1 3124 10 view .LVU2331
3125:fltk-1.3.4-1/png/png.c ****          *ascii = 0;
 8499              		.loc 1 3125 10 view .LVU2332
3126:fltk-1.3.4-1/png/png.c ****          return;
 8500              		.loc 1 3126 10 view .LVU2333
3123:fltk-1.3.4-1/png/png.c ****          *ascii++ = 110; /* 'n' */
 8501              		.loc 1 3123 19 is_stmt 0 view .LVU2334
 8502 0081 C703696E 		movl	$6712937, (%rbx)
 8502      6600
3127:fltk-1.3.4-1/png/png.c ****       }
 8503              		.loc 1 3127 10 is_stmt 1 view .LVU2335
 8504              	.LVL768:
 8505              	.L853:
3133:fltk-1.3.4-1/png/png.c **** 
 8506              		.loc 1 3133 1 is_stmt 0 view .LVU2336
 8507 0087 488B4424 		movq	56(%rsp), %rax
 8507      38
 8508 008c 64483304 		xorq	%fs:40, %rax
 8508      25280000 
 8508      00
 8509 0095 0F855505 		jne	.L962
 8509      0000
 8510 009b 4883C448 		addq	$72, %rsp
 8511              		.cfi_remember_state
 8512              		.cfi_def_cfa_offset 56
 8513 009f 5B       		popq	%rbx
 8514              		.cfi_def_cfa_offset 48
 8515 00a0 5D       		popq	%rbp
 8516              		.cfi_def_cfa_offset 40
 8517              	.LVL769:
3133:fltk-1.3.4-1/png/png.c **** 
 8518              		.loc 1 3133 1 view .LVU2337
 8519 00a1 415C     		popq	%r12
 8520              		.cfi_def_cfa_offset 32
 8521              	.LVL770:
3133:fltk-1.3.4-1/png/png.c **** 
 8522              		.loc 1 3133 1 view .LVU2338
 8523 00a3 415D     		popq	%r13
 8524              		.cfi_def_cfa_offset 24
 8525 00a5 415E     		popq	%r14
 8526              		.cfi_def_cfa_offset 16
 8527 00a7 415F     		popq	%r15
 8528              		.cfi_def_cfa_offset 8
 8529 00a9 C3       		ret
 8530              	.LVL771:
 8531 00aa 660F1F44 		.p2align 4,,10
 8531      0000
 8532              		.p2align 3
 8533              	.L907:
 8534              		.cfi_restore_state
3133:fltk-1.3.4-1/png/png.c **** 
 8535              		.loc 1 3133 1 view .LVU2339
 8536 00b0 B8140000 		movl	$20, %eax
 8536      00
2835:fltk-1.3.4-1/png/png.c **** 
 8537              		.loc 1 2835 17 view .LVU2340
 8538 00b5 BD0F0000 		movl	$15, %ebp
 8538      00
 8539 00ba EB87     		jmp	.L854
 8540              	.LVL772:
 8541 00bc 0F1F4000 		.p2align 4,,10
 8542              		.p2align 3
 8543              	.L952:
3115:fltk-1.3.4-1/png/png.c ****       {
 8544              		.loc 1 3115 12 is_stmt 1 view .LVU2341
3117:fltk-1.3.4-1/png/png.c ****          *ascii = 0;
 8545              		.loc 1 3117 10 view .LVU2342
3118:fltk-1.3.4-1/png/png.c ****          return;
 8546              		.loc 1 3118 10 view .LVU2343
3117:fltk-1.3.4-1/png/png.c ****          *ascii = 0;
 8547              		.loc 1 3117 19 is_stmt 0 view .LVU2344
 8548 00c0 B8300000 		movl	$48, %eax
 8548      00
 8549 00c5 668903   		movw	%ax, (%rbx)
3119:fltk-1.3.4-1/png/png.c ****       }
 8550              		.loc 1 3119 10 is_stmt 1 view .LVU2345
 8551 00c8 EBBD     		jmp	.L853
 8552              	.LVL773:
 8553 00ca 660F1F44 		.p2align 4,,10
 8553      0000
 8554              		.p2align 3
 8555              	.L961:
 8556              	.LBB480:
2853:fltk-1.3.4-1/png/png.c ****          double base;   /* 10^exp_b10 */
 8557              		.loc 1 2853 10 view .LVU2346
2854:fltk-1.3.4-1/png/png.c **** 
 8558              		.loc 1 2854 10 view .LVU2347
2865:fltk-1.3.4-1/png/png.c **** 
 8559              		.loc 1 2865 10 view .LVU2348
2865:fltk-1.3.4-1/png/png.c **** 
 8560              		.loc 1 2865 16 is_stmt 0 view .LVU2349
 8561 00d0 660F28C1 		movapd	%xmm1, %xmm0
 8562 00d4 488D7C24 		leaq	28(%rsp), %rdi
 8562      1C
 8563              	.LVL774:
2865:fltk-1.3.4-1/png/png.c **** 
 8564              		.loc 1 2865 16 view .LVU2350
 8565 00d9 F20F110C 		movsd	%xmm1, (%rsp)
 8565      24
 8566 00de E8000000 		call	frexp@PLT
 8566      00
 8567              	.LVL775:
2867:fltk-1.3.4-1/png/png.c **** 
 8568              		.loc 1 2867 10 is_stmt 1 view .LVU2351
2867:fltk-1.3.4-1/png/png.c **** 
 8569              		.loc 1 2867 29 is_stmt 0 view .LVU2352
 8570 00e3 6B74241C 		imull	$77, 28(%rsp), %esi
 8570      4D
2867:fltk-1.3.4-1/png/png.c **** 
 8571              		.loc 1 2867 35 view .LVU2353
 8572 00e8 C1FE08   		sarl	$8, %esi
2870:fltk-1.3.4-1/png/png.c **** 
 8573              		.loc 1 2870 17 view .LVU2354
 8574 00eb 89F7     		movl	%esi, %edi
2867:fltk-1.3.4-1/png/png.c **** 
 8575              		.loc 1 2867 18 view .LVU2355
 8576 00ed 8974241C 		movl	%esi, 28(%rsp)
2870:fltk-1.3.4-1/png/png.c **** 
 8577              		.loc 1 2870 10 is_stmt 1 view .LVU2356
2867:fltk-1.3.4-1/png/png.c **** 
 8578              		.loc 1 2867 35 is_stmt 0 view .LVU2357
 8579 00f1 4189F5   		movl	%esi, %r13d
2870:fltk-1.3.4-1/png/png.c **** 
 8580              		.loc 1 2870 17 view .LVU2358
 8581 00f4 E8000000 		call	png_pow10
 8581      00
 8582              	.LVL776:
2872:fltk-1.3.4-1/png/png.c ****          {
 8583              		.loc 1 2872 16 view .LVU2359
 8584 00f9 F20F100C 		movsd	(%rsp), %xmm1
 8584      24
 8585 00fe 4531C9   		xorl	%r9d, %r9d
2870:fltk-1.3.4-1/png/png.c **** 
 8586              		.loc 1 2870 17 view .LVU2360
 8587 0101 660F28D8 		movapd	%xmm0, %xmm3
 8588              	.LVL777:
2872:fltk-1.3.4-1/png/png.c ****          {
 8589              		.loc 1 2872 10 is_stmt 1 view .LVU2361
2872:fltk-1.3.4-1/png/png.c ****          {
 8590              		.loc 1 2872 16 is_stmt 0 view .LVU2362
 8591 0105 4189F0   		movl	%esi, %r8d
 8592 0108 EB13     		jmp	.L862
 8593              	.LVL778:
 8594 010a 660F1F44 		.p2align 4,,10
 8594      0000
 8595              		.p2align 3
 8596              	.L908:
 8597              	.LBB481:
2872:fltk-1.3.4-1/png/png.c ****          {
 8598              		.loc 1 2872 16 view .LVU2363
 8599 0110 41B90100 		movl	$1, %r9d
 8599      0000
2878:fltk-1.3.4-1/png/png.c **** 
 8600              		.loc 1 2878 16 view .LVU2364
 8601 0116 4189C8   		movl	%ecx, %r8d
2878:fltk-1.3.4-1/png/png.c **** 
 8602              		.loc 1 2878 32 view .LVU2365
 8603 0119 660F28D8 		movapd	%xmm0, %xmm3
 8604              	.LVL779:
 8605              	.L862:
2878:fltk-1.3.4-1/png/png.c **** 
 8606              		.loc 1 2878 32 view .LVU2366
 8607              	.LBE481:
2872:fltk-1.3.4-1/png/png.c ****          {
 8608              		.loc 1 2872 16 is_stmt 1 view .LVU2367
 8609 011d F20F103D 		movsd	.LC83(%rip), %xmm7
 8609      00000000 
 8610 0125 660F2FFB 		comisd	%xmm3, %xmm7
 8611 0129 7706     		ja	.L864
2872:fltk-1.3.4-1/png/png.c ****          {
 8612              		.loc 1 2872 32 is_stmt 0 discriminator 1 view .LVU2368
 8613 012b 660F2FCB 		comisd	%xmm3, %xmm1
 8614 012f 7623     		jbe	.L958
 8615              	.L864:
 8616              	.LBB482:
2875:fltk-1.3.4-1/png/png.c **** 
 8617              		.loc 1 2875 27 view .LVU2369
 8618 0131 418D4801 		leal	1(%r8), %ecx
 8619 0135 F20F110C 		movsd	%xmm1, (%rsp)
 8619      24
2875:fltk-1.3.4-1/png/png.c **** 
 8620              		.loc 1 2875 13 is_stmt 1 view .LVU2370
2875:fltk-1.3.4-1/png/png.c **** 
 8621              		.loc 1 2875 27 is_stmt 0 view .LVU2371
 8622 013a 89CF     		movl	%ecx, %edi
 8623 013c E8000000 		call	png_pow10
 8623      00
 8624              	.LVL780:
2877:fltk-1.3.4-1/png/png.c ****                ++exp_b10, base = test;
 8625              		.loc 1 2877 13 is_stmt 1 view .LVU2372
2877:fltk-1.3.4-1/png/png.c ****                ++exp_b10, base = test;
 8626              		.loc 1 2877 16 is_stmt 0 view .LVU2373
 8627 0141 F20F1035 		movsd	.LC84(%rip), %xmm6
 8627      00000000 
 8628 0149 F20F100C 		movsd	(%rsp), %xmm1
 8628      24
 8629 014e 660F2FF0 		comisd	%xmm0, %xmm6
 8630 0152 73BC     		jnb	.L908
 8631              	.LVL781:
 8632              	.L958:
2877:fltk-1.3.4-1/png/png.c ****                ++exp_b10, base = test;
 8633              		.loc 1 2877 16 view .LVU2374
 8634 0154 4584C9   		testb	%r9b, %r9b
 8635 0157 7408     		je	.L863
 8636 0159 44894424 		movl	%r8d, 28(%rsp)
 8636      1C
 8637              	.LBE482:
2872:fltk-1.3.4-1/png/png.c ****          {
 8638              		.loc 1 2872 32 view .LVU2375
 8639 015e 4589C5   		movl	%r8d, %r13d
 8640              	.L863:
2891:fltk-1.3.4-1/png/png.c ****          while (fp >= 1) fp /= 10, ++exp_b10;
 8641              		.loc 1 2891 10 is_stmt 1 view .LVU2376
2891:fltk-1.3.4-1/png/png.c ****          while (fp >= 1) fp /= 10, ++exp_b10;
 8642              		.loc 1 2891 13 is_stmt 0 view .LVU2377
 8643 0161 F20F5ECB 		divsd	%xmm3, %xmm1
2892:fltk-1.3.4-1/png/png.c **** 
 8644              		.loc 1 2892 16 view .LVU2378
 8645 0165 F20F1025 		movsd	.LC1(%rip), %xmm4
 8645      00000000 
 8646 016d 418D4501 		leal	1(%r13), %eax
 8647 0171 F20F101D 		movsd	.LC0(%rip), %xmm3
 8647      00000000 
 8648              	.LVL782:
2892:fltk-1.3.4-1/png/png.c **** 
 8649              		.loc 1 2892 16 view .LVU2379
 8650 0179 660F2FCC 		comisd	%xmm4, %xmm1
2891:fltk-1.3.4-1/png/png.c ****          while (fp >= 1) fp /= 10, ++exp_b10;
 8651              		.loc 1 2891 13 view .LVU2380
 8652 017d 660F28C1 		movapd	%xmm1, %xmm0
 8653              	.LVL783:
2892:fltk-1.3.4-1/png/png.c **** 
 8654              		.loc 1 2892 10 is_stmt 1 view .LVU2381
2892:fltk-1.3.4-1/png/png.c **** 
 8655              		.loc 1 2892 16 view .LVU2382
 8656 0181 721A     		jb	.L865
 8657              		.p2align 4,,10
 8658 0183 0F1F4400 		.p2align 3
 8658      00
 8659              	.L867:
2892:fltk-1.3.4-1/png/png.c **** 
 8660              		.loc 1 2892 26 discriminator 2 view .LVU2383
2892:fltk-1.3.4-1/png/png.c **** 
 8661              		.loc 1 2892 29 is_stmt 0 discriminator 2 view .LVU2384
 8662 0188 F20F5EC3 		divsd	%xmm3, %xmm0
 8663              	.LVL784:
2892:fltk-1.3.4-1/png/png.c **** 
 8664              		.loc 1 2892 36 discriminator 2 view .LVU2385
 8665 018c 4189C5   		movl	%eax, %r13d
2892:fltk-1.3.4-1/png/png.c **** 
 8666              		.loc 1 2892 16 is_stmt 1 discriminator 2 view .LVU2386
 8667 018f 8D4001   		leal	1(%rax), %eax
 8668 0192 660F2FC4 		comisd	%xmm4, %xmm0
 8669 0196 73F0     		jnb	.L867
 8670 0198 44896C24 		movl	%r13d, 28(%rsp)
 8670      1C
 8671              	.L865:
 8672              	.LBB483:
2901:fltk-1.3.4-1/png/png.c ****             char exponent[10];
 8673              		.loc 1 2901 13 view .LVU2387
2902:fltk-1.3.4-1/png/png.c **** 
 8674              		.loc 1 2902 13 view .LVU2388
2907:fltk-1.3.4-1/png/png.c ****             {
 8675              		.loc 1 2907 13 view .LVU2389
2913:fltk-1.3.4-1/png/png.c **** 
 8676              		.loc 1 2913 22 is_stmt 0 view .LVU2390
 8677 019d 4531F6   		xorl	%r14d, %r14d
2907:fltk-1.3.4-1/png/png.c ****             {
 8678              		.loc 1 2907 16 view .LVU2391
 8679 01a0 4183FDFE 		cmpl	$-2, %r13d
 8680 01a4 7211     		jb	.L868
2909:fltk-1.3.4-1/png/png.c ****                exp_b10 = 0;      /* Dot added below before first output. */
 8681              		.loc 1 2909 16 is_stmt 1 view .LVU2392
2910:fltk-1.3.4-1/png/png.c ****             }
 8682              		.loc 1 2910 24 is_stmt 0 view .LVU2393
 8683 01a6 C744241C 		movl	$0, 28(%rsp)
 8683      00000000 
2909:fltk-1.3.4-1/png/png.c ****                exp_b10 = 0;      /* Dot added below before first output. */
 8684              		.loc 1 2909 22 view .LVU2394
 8685 01ae 4589EE   		movl	%r13d, %r14d
 8686 01b1 4531ED   		xorl	%r13d, %r13d
 8687 01b4 41F7DE   		negl	%r14d
 8688              	.LVL785:
2910:fltk-1.3.4-1/png/png.c ****             }
 8689              		.loc 1 2910 16 is_stmt 1 view .LVU2395
 8690              	.L868:
2918:fltk-1.3.4-1/png/png.c ****             cdigits = 0;   /* Count of digits in list. */
 8691              		.loc 1 2918 13 view .LVU2396
2919:fltk-1.3.4-1/png/png.c **** 
 8692              		.loc 1 2919 13 view .LVU2397
 8693              	.LBB484:
2936:fltk-1.3.4-1/png/png.c **** 
 8694              		.loc 1 2936 23 is_stmt 0 view .LVU2398
 8695 01b7 F30F7E35 		movq	.LC8(%rip), %xmm6
 8695      00000000 
 8696              	.LBE484:
2918:fltk-1.3.4-1/png/png.c ****             cdigits = 0;   /* Count of digits in list. */
 8697              		.loc 1 2918 19 view .LVU2399
 8698 01bf 4489F1   		movl	%r14d, %ecx
2919:fltk-1.3.4-1/png/png.c **** 
 8699              		.loc 1 2919 21 view .LVU2400
 8700 01c2 4531FF   		xorl	%r15d, %r15d
 8701              	.LVL786:
 8702              		.p2align 4,,10
 8703 01c5 0F1F00   		.p2align 3
 8704              	.L895:
2921:fltk-1.3.4-1/png/png.c ****             {
 8705              		.loc 1 2921 13 is_stmt 1 view .LVU2401
 8706              	.LBB489:
2923:fltk-1.3.4-1/png/png.c **** 
 8707              		.loc 1 2923 16 view .LVU2402
2925:fltk-1.3.4-1/png/png.c ****                /* Use modf here, not floor and subtract, so that
 8708              		.loc 1 2925 16 view .LVU2403
2925:fltk-1.3.4-1/png/png.c ****                /* Use modf here, not floor and subtract, so that
 8709              		.loc 1 2925 19 is_stmt 0 view .LVU2404
 8710 01c8 F20F59C3 		mulsd	%xmm3, %xmm0
 8711              	.LVL787:
2931:fltk-1.3.4-1/png/png.c ****                   fp = modf(fp, &d);
 8712              		.loc 1 2931 16 is_stmt 1 view .LVU2405
2931:fltk-1.3.4-1/png/png.c ****                   fp = modf(fp, &d);
 8713              		.loc 1 2931 33 is_stmt 0 view .LVU2406
 8714 01cc 4489F0   		movl	%r14d, %eax
 8715 01cf 29C8     		subl	%ecx, %eax
2931:fltk-1.3.4-1/png/png.c ****                   fp = modf(fp, &d);
 8716              		.loc 1 2931 39 view .LVU2407
 8717 01d1 428D4438 		leal	1(%rax,%r15), %eax
 8717      01
2931:fltk-1.3.4-1/png/png.c ****                   fp = modf(fp, &d);
 8718              		.loc 1 2931 19 view .LVU2408
 8719 01d6 39E8     		cmpl	%ebp, %eax
 8720 01d8 0F8C6202 		jl	.L963
 8720      0000
2936:fltk-1.3.4-1/png/png.c **** 
 8721              		.loc 1 2936 19 is_stmt 1 view .LVU2409
2936:fltk-1.3.4-1/png/png.c **** 
 8722              		.loc 1 2936 23 is_stmt 0 view .LVU2410
 8723 01de F20F5805 		addsd	.LC6(%rip), %xmm0
 8723      00000000 
 8724              	.LVL788:
2936:fltk-1.3.4-1/png/png.c **** 
 8725              		.loc 1 2936 23 view .LVU2411
 8726 01e6 F20F102D 		movsd	.LC7(%rip), %xmm5
 8726      00000000 
 8727 01ee 660F28CE 		movapd	%xmm6, %xmm1
 8728 01f2 660F28D0 		movapd	%xmm0, %xmm2
 8729 01f6 660F54D6 		andpd	%xmm6, %xmm2
 8730 01fa 660F2EEA 		ucomisd	%xmm2, %xmm5
 8731 01fe 762B     		jbe	.L871
 8732 0200 F2480F2C 		cvttsd2siq	%xmm0, %rax
 8732      C0
 8733 0205 660FEFD2 		pxor	%xmm2, %xmm2
 8734 0209 660F55C8 		andnpd	%xmm0, %xmm1
 8735 020d F2480F2A 		cvtsi2sdq	%rax, %xmm2
 8735      D0
 8736 0212 660F28EA 		movapd	%xmm2, %xmm5
 8737 0216 F20FC2E8 		cmpnlesd	%xmm0, %xmm5
 8737      06
 8738 021b 660F28C1 		movapd	%xmm1, %xmm0
 8739 021f 660F54EC 		andpd	%xmm4, %xmm5
 8740 0223 F20F5CD5 		subsd	%xmm5, %xmm2
 8741 0227 660F56C2 		orpd	%xmm2, %xmm0
 8742              	.L871:
2938:fltk-1.3.4-1/png/png.c ****                   {
 8743              		.loc 1 2938 22 view .LVU2412
 8744 022b 660F2F05 		comisd	.LC85(%rip), %xmm0
 8744      00000000 
2936:fltk-1.3.4-1/png/png.c **** 
 8745              		.loc 1 2936 23 view .LVU2413
 8746 0233 660F28C8 		movapd	%xmm0, %xmm1
2936:fltk-1.3.4-1/png/png.c **** 
 8747              		.loc 1 2936 21 view .LVU2414
 8748 0237 F20F1144 		movsd	%xmm0, 32(%rsp)
 8748      2420
2938:fltk-1.3.4-1/png/png.c ****                   {
 8749              		.loc 1 2938 19 is_stmt 1 view .LVU2415
2938:fltk-1.3.4-1/png/png.c ****                   {
 8750              		.loc 1 2938 22 is_stmt 0 view .LVU2416
 8751 023d 0F86ED00 		jbe	.L954
 8751      0000
2941:fltk-1.3.4-1/png/png.c ****                      {
 8752              		.loc 1 2941 22 is_stmt 1 view .LVU2417
2941:fltk-1.3.4-1/png/png.c ****                      {
 8753              		.loc 1 2941 25 is_stmt 0 view .LVU2418
 8754 0243 4585F6   		testl	%r14d, %r14d
 8755 0246 0F847402 		je	.L964
 8755      0000
2943:fltk-1.3.4-1/png/png.c ****                         if (cdigits == 0) --clead;
 8756              		.loc 1 2943 25 is_stmt 1 view .LVU2419
 8757 024c 488D4301 		leaq	1(%rbx), %rax
 8758 0250 4183EE01 		subl	$1, %r14d
 8759              	.LVL789:
2943:fltk-1.3.4-1/png/png.c ****                         if (cdigits == 0) --clead;
 8760              		.loc 1 2943 36 is_stmt 0 view .LVU2420
 8761 0254 F20F1164 		movsd	%xmm4, 32(%rsp)
 8761      2420
2944:fltk-1.3.4-1/png/png.c ****                      }
 8762              		.loc 1 2944 25 is_stmt 1 view .LVU2421
 8763 025a 4889C7   		movq	%rax, %rdi
2944:fltk-1.3.4-1/png/png.c ****                      }
 8764              		.loc 1 2944 28 is_stmt 0 view .LVU2422
 8765 025d 4585FF   		testl	%r15d, %r15d
 8766 0260 0F853A02 		jne	.L912
 8766      0000
2944:fltk-1.3.4-1/png/png.c ****                      }
 8767              		.loc 1 2944 43 is_stmt 1 discriminator 1 view .LVU2423
 8768 0266 83E901   		subl	$1, %ecx
 8769              	.LVL790:
3001:fltk-1.3.4-1/png/png.c ****                {
 8770              		.loc 1 3001 16 discriminator 1 view .LVU2424
2944:fltk-1.3.4-1/png/png.c ****                      }
 8771              		.loc 1 2944 43 is_stmt 0 discriminator 1 view .LVU2425
 8772 0269 BA310000 		movl	$49, %edx
 8772      00
2998:fltk-1.3.4-1/png/png.c ****                }
 8773              		.loc 1 2998 22 discriminator 1 view .LVU2426
 8774 026e 660FEFC0 		pxor	%xmm0, %xmm0
 8775              	.LVL791:
 8776              	.L876:
3009:fltk-1.3.4-1/png/png.c ****                   clead = 0;
 8777              		.loc 1 3009 19 is_stmt 1 view .LVU2427
3009:fltk-1.3.4-1/png/png.c ****                   clead = 0;
 8778              		.loc 1 3009 36 is_stmt 0 view .LVU2428
 8779 0272 4489F6   		movl	%r14d, %esi
 8780 0275 29CE     		subl	%ecx, %esi
3009:fltk-1.3.4-1/png/png.c ****                   clead = 0;
 8781              		.loc 1 3009 27 view .LVU2429
 8782 0277 4101F7   		addl	%esi, %r15d
 8783              	.LVL792:
3010:fltk-1.3.4-1/png/png.c **** 
 8784              		.loc 1 3010 19 is_stmt 1 view .LVU2430
3012:fltk-1.3.4-1/png/png.c ****                   {
 8785              		.loc 1 3012 19 view .LVU2431
3012:fltk-1.3.4-1/png/png.c ****                   {
 8786              		.loc 1 3012 25 view .LVU2432
 8787 027a 4585F6   		testl	%r14d, %r14d
 8788 027d 746B     		je	.L883
3012:fltk-1.3.4-1/png/png.c ****                   {
 8789              		.loc 1 3012 25 is_stmt 0 view .LVU2433
 8790 027f 4489E9   		movl	%r13d, %ecx
 8791 0282 4531C9   		xorl	%r9d, %r9d
 8792 0285 EB3E     		jmp	.L890
 8793 0287 660F1F84 		.p2align 4,,10
 8793      00000000 
 8793      00
 8794              		.p2align 3
 8795              	.L965:
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8796              		.loc 1 3020 25 is_stmt 1 view .LVU2434
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8797              		.loc 1 3020 28 is_stmt 0 view .LVU2435
 8798 0290 85C9     		testl	%ecx, %ecx
 8799 0292 7514     		jne	.L889
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8800              		.loc 1 3020 43 is_stmt 1 discriminator 1 view .LVU2436
 8801              	.LVL793:
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8802              		.loc 1 3020 43 is_stmt 0 discriminator 1 view .LVU2437
 8803 0294 4C8D4303 		leaq	3(%rbx), %r8
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8804              		.loc 1 3020 52 discriminator 1 view .LVU2438
 8805 0298 C6032E   		movb	$46, (%rbx)
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8806              		.loc 1 3020 58 discriminator 1 view .LVU2439
 8807 029b 4983EC01 		subq	$1, %r12
 8808              	.LVL794:
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8809              		.loc 1 3020 49 discriminator 1 view .LVU2440
 8810 029f 4889C3   		movq	%rax, %rbx
 8811              	.LVL795:
3020:fltk-1.3.4-1/png/png.c ****                         /* PLUS 1: TOTAL 4 */
 8812              		.loc 1 3020 58 discriminator 1 view .LVU2441
 8813 02a2 4889F8   		movq	%rdi, %rax
 8814 02a5 4C89C7   		movq	%r8, %rdi
 8815              	.LVL796:
 8816              	.L889:
3022:fltk-1.3.4-1/png/png.c ****                      }
 8817              		.loc 1 3022 25 is_stmt 1 view .LVU2442
 8818 02a8 4989D8   		movq	%rbx, %r8
 8819 02ab 83E901   		subl	$1, %ecx
 8820 02ae 4889C3   		movq	%rax, %rbx
 8821              	.LVL797:
3022:fltk-1.3.4-1/png/png.c ****                      }
 8822              		.loc 1 3022 25 is_stmt 0 view .LVU2443
 8823 02b1 41B90100 		movl	$1, %r9d
 8823      0000
3024:fltk-1.3.4-1/png/png.c ****                   }
 8824              		.loc 1 3024 22 is_stmt 1 view .LVU2444
 8825              	.LVL798:
3012:fltk-1.3.4-1/png/png.c ****                   {
 8826              		.loc 1 3012 25 view .LVU2445
3024:fltk-1.3.4-1/png/png.c ****                   }
 8827              		.loc 1 3024 31 is_stmt 0 view .LVU2446
 8828 02b7 41C60030 		movb	$48, (%r8)
3012:fltk-1.3.4-1/png/png.c ****                   {
 8829              		.loc 1 3012 25 view .LVU2447
 8830 02bb 4183EE01 		subl	$1, %r14d
 8831              	.LVL799:
3012:fltk-1.3.4-1/png/png.c ****                   {
 8832              		.loc 1 3012 25 view .LVU2448
 8833 02bf 741D     		je	.L955
 8834              	.LVL800:
 8835              	.L966:
3012:fltk-1.3.4-1/png/png.c ****                   {
 8836              		.loc 1 3012 25 view .LVU2449
 8837 02c1 4883C001 		addq	$1, %rax
 8838              	.L890:
 8839              	.LVL801:
3018:fltk-1.3.4-1/png/png.c ****                      {
 8840              		.loc 1 3018 22 is_stmt 1 view .LVU2450
 8841 02c5 488D7B02 		leaq	2(%rbx), %rdi
3018:fltk-1.3.4-1/png/png.c ****                      {
 8842              		.loc 1 3018 25 is_stmt 0 view .LVU2451
 8843 02c9 83F9FF   		cmpl	$-1, %ecx
 8844 02cc 75C2     		jne	.L965
3018:fltk-1.3.4-1/png/png.c ****                      {
 8845              		.loc 1 3018 25 view .LVU2452
 8846 02ce 4989D8   		movq	%rbx, %r8
 8847 02d1 4889C3   		movq	%rax, %rbx
 8848              	.LVL802:
3024:fltk-1.3.4-1/png/png.c ****                   }
 8849              		.loc 1 3024 22 is_stmt 1 view .LVU2453
3024:fltk-1.3.4-1/png/png.c ****                   }
 8850              		.loc 1 3024 31 is_stmt 0 view .LVU2454
 8851 02d4 41C60030 		movb	$48, (%r8)
 8852              	.LVL803:
3012:fltk-1.3.4-1/png/png.c ****                   {
 8853              		.loc 1 3012 25 is_stmt 1 view .LVU2455
 8854 02d8 4183EE01 		subl	$1, %r14d
 8855              	.LVL804:
3012:fltk-1.3.4-1/png/png.c ****                   {
 8856              		.loc 1 3012 25 is_stmt 0 view .LVU2456
 8857 02dc 75E3     		jne	.L966
 8858              	.LVL805:
 8859              	.L955:
3012:fltk-1.3.4-1/png/png.c ****                   {
 8860              		.loc 1 3012 25 view .LVU2457
 8861 02de 4584C9   		testb	%r9b, %r9b
 8862 02e1 7407     		je	.L883
 8863 02e3 894C241C 		movl	%ecx, 28(%rsp)
 8864 02e7 4189CD   		movl	%ecx, %r13d
 8865              	.LVL806:
 8866              	.L883:
3027:fltk-1.3.4-1/png/png.c ****                   {
 8867              		.loc 1 3027 19 is_stmt 1 view .LVU2458
3027:fltk-1.3.4-1/png/png.c ****                   {
 8868              		.loc 1 3027 22 is_stmt 0 view .LVU2459
 8869 02ea 4183FDFF 		cmpl	$-1, %r13d
 8870 02ee 0F84BC01 		je	.L917
 8870      0000
3029:fltk-1.3.4-1/png/png.c ****                         *ascii++ = 46, --size; /* counted above */
 8871              		.loc 1 3029 22 is_stmt 1 view .LVU2460
3029:fltk-1.3.4-1/png/png.c ****                         *ascii++ = 46, --size; /* counted above */
 8872              		.loc 1 3029 25 is_stmt 0 view .LVU2461
 8873 02f4 4585ED   		testl	%r13d, %r13d
 8874 02f7 750E     		jne	.L893
3030:fltk-1.3.4-1/png/png.c **** 
 8875              		.loc 1 3030 25 is_stmt 1 view .LVU2462
 8876              	.LVL807:
3030:fltk-1.3.4-1/png/png.c **** 
 8877              		.loc 1 3030 34 is_stmt 0 view .LVU2463
 8878 02f9 C6032E   		movb	$46, (%rbx)
3030:fltk-1.3.4-1/png/png.c **** 
 8879              		.loc 1 3030 40 view .LVU2464
 8880 02fc 4983EC01 		subq	$1, %r12
 8881              	.LVL808:
3030:fltk-1.3.4-1/png/png.c **** 
 8882              		.loc 1 3030 31 view .LVU2465
 8883 0300 4889FB   		movq	%rdi, %rbx
 8884              	.LVL809:
3030:fltk-1.3.4-1/png/png.c **** 
 8885              		.loc 1 3030 40 view .LVU2466
 8886 0303 4883C701 		addq	$1, %rdi
 8887              	.L893:
 8888              	.LVL810:
3032:fltk-1.3.4-1/png/png.c ****                   }
 8889              		.loc 1 3032 22 is_stmt 1 view .LVU2467
 8890 0307 4183ED01 		subl	$1, %r13d
 8891 030b 4889D8   		movq	%rbx, %rax
 8892 030e 4889FB   		movq	%rdi, %rbx
 8893              	.LVL811:
3032:fltk-1.3.4-1/png/png.c ****                   }
 8894              		.loc 1 3032 22 is_stmt 0 view .LVU2468
 8895 0311 44896C24 		movl	%r13d, 28(%rsp)
 8895      1C
 8896              	.LVL812:
 8897              	.L892:
3034:fltk-1.3.4-1/png/png.c ****                }
 8898              		.loc 1 3034 19 is_stmt 1 view .LVU2469
3034:fltk-1.3.4-1/png/png.c ****                }
 8899              		.loc 1 3034 51 is_stmt 0 view .LVU2470
 8900 0316 4183C701 		addl	$1, %r15d
 8901              	.LVL813:
3034:fltk-1.3.4-1/png/png.c ****                }
 8902              		.loc 1 3034 28 view .LVU2471
 8903 031a 8810     		movb	%dl, (%rax)
3010:fltk-1.3.4-1/png/png.c **** 
 8904              		.loc 1 3010 25 view .LVU2472
 8905 031c 31C9     		xorl	%ecx, %ecx
3034:fltk-1.3.4-1/png/png.c ****                }
 8906              		.loc 1 3034 51 view .LVU2473
 8907 031e 4531F6   		xorl	%r14d, %r14d
 8908 0321 4489F8   		movl	%r15d, %eax
 8909              	.LVL814:
3034:fltk-1.3.4-1/png/png.c ****                }
 8910              		.loc 1 3034 51 view .LVU2474
 8911 0324 EB3B     		jmp	.L887
 8912              	.LVL815:
 8913 0326 662E0F1F 		.p2align 4,,10
 8913      84000000 
 8913      0000
 8914              		.p2align 3
 8915              	.L954:
2998:fltk-1.3.4-1/png/png.c ****                }
 8916              		.loc 1 2998 22 view .LVU2475
 8917 0330 660FEFC0 		pxor	%xmm0, %xmm0
 8918              	.L870:
 8919              	.LVL816:
3001:fltk-1.3.4-1/png/png.c ****                {
 8920              		.loc 1 3001 16 is_stmt 1 view .LVU2476
3001:fltk-1.3.4-1/png/png.c ****                {
 8921              		.loc 1 3001 19 is_stmt 0 view .LVU2477
 8922 0334 660FEFED 		pxor	%xmm5, %xmm5
 8923 0338 660F2ECD 		ucomisd	%xmm5, %xmm1
 8924 033c 0F8A4201 		jp	.L924
 8924      0000
 8925              	.L968:
3001:fltk-1.3.4-1/png/png.c ****                {
 8926              		.loc 1 3001 19 view .LVU2478
 8927 0342 0F853C01 		jne	.L924
 8927      0000
3003:fltk-1.3.4-1/png/png.c ****                   if (cdigits == 0) ++clead;
 8928              		.loc 1 3003 19 is_stmt 1 view .LVU2479
 8929 0348 418D5601 		leal	1(%r14), %edx
 8930              	.LVL817:
3004:fltk-1.3.4-1/png/png.c ****                }
 8931              		.loc 1 3004 19 view .LVU2480
 8932 034c 458D3417 		leal	(%r15,%rdx), %r14d
3004:fltk-1.3.4-1/png/png.c ****                }
 8933              		.loc 1 3004 22 is_stmt 0 view .LVU2481
 8934 0350 4585FF   		testl	%r15d, %r15d
 8935 0353 0F84D700 		je	.L886
 8935      0000
3004:fltk-1.3.4-1/png/png.c ****                }
 8936              		.loc 1 3004 22 view .LVU2482
 8937 0359 4489F0   		movl	%r14d, %eax
3003:fltk-1.3.4-1/png/png.c ****                   if (cdigits == 0) ++clead;
 8938              		.loc 1 3003 19 view .LVU2483
 8939 035c 4189D6   		movl	%edx, %r14d
 8940 035f 29C8     		subl	%ecx, %eax
 8941              	.LVL818:
 8942              	.L887:
3003:fltk-1.3.4-1/png/png.c ****                   if (cdigits == 0) ++clead;
 8943              		.loc 1 3003 19 view .LVU2484
 8944              	.LBE489:
3037:fltk-1.3.4-1/png/png.c **** 
 8945              		.loc 1 3037 19 is_stmt 1 discriminator 1 view .LVU2485
3037:fltk-1.3.4-1/png/png.c **** 
 8946              		.loc 1 3037 13 is_stmt 0 discriminator 1 view .LVU2486
 8947 0361 39C5     		cmpl	%eax, %ebp
 8948 0363 7E0E     		jle	.L894
3037:fltk-1.3.4-1/png/png.c **** 
 8949              		.loc 1 3037 57 discriminator 1 view .LVU2487
 8950 0365 660F2F05 		comisd	.LC83(%rip), %xmm0
 8950      00000000 
 8951 036d 0F8755FE 		ja	.L895
 8951      FFFF
 8952              	.L894:
3048:fltk-1.3.4-1/png/png.c ****             {
 8953              		.loc 1 3048 13 is_stmt 1 view .LVU2488
3048:fltk-1.3.4-1/png/png.c ****             {
 8954              		.loc 1 3048 33 is_stmt 0 view .LVU2489
 8955 0373 418D4501 		leal	1(%r13), %eax
 8956 0377 4489E9   		movl	%r13d, %ecx
 8957              	.LVL819:
3048:fltk-1.3.4-1/png/png.c ****             {
 8958              		.loc 1 3048 16 view .LVU2490
 8959 037a 83F803   		cmpl	$3, %eax
 8960 037d 0F86FD01 		jbe	.L967
 8960      0000
3073:fltk-1.3.4-1/png/png.c **** 
 8961              		.loc 1 3073 13 is_stmt 1 view .LVU2491
3073:fltk-1.3.4-1/png/png.c **** 
 8962              		.loc 1 3073 18 is_stmt 0 view .LVU2492
 8963 0383 4D63FF   		movslq	%r15d, %r15
3075:fltk-1.3.4-1/png/png.c **** 
 8964              		.loc 1 3075 22 view .LVU2493
 8965 0386 C60345   		movb	$69, (%rbx)
3073:fltk-1.3.4-1/png/png.c **** 
 8966              		.loc 1 3073 18 view .LVU2494
 8967 0389 4D29FC   		subq	%r15, %r12
 8968              	.LVL820:
3075:fltk-1.3.4-1/png/png.c **** 
 8969              		.loc 1 3075 13 is_stmt 1 view .LVU2495
 8970              	.LBB490:
3082:fltk-1.3.4-1/png/png.c **** 
 8971              		.loc 1 3082 16 view .LVU2496
3084:fltk-1.3.4-1/png/png.c ****                {
 8972              		.loc 1 3084 16 view .LVU2497
3084:fltk-1.3.4-1/png/png.c ****                {
 8973              		.loc 1 3084 19 is_stmt 0 view .LVU2498
 8974 038c 4585ED   		testl	%r13d, %r13d
 8975 038f 0F882B02 		js	.L900
 8975      0000
 8976              	.LBE490:
3075:fltk-1.3.4-1/png/png.c **** 
 8977              		.loc 1 3075 19 view .LVU2499
 8978 0395 488D7B01 		leaq	1(%rbx), %rdi
 8979              	.LVL821:
3075:fltk-1.3.4-1/png/png.c **** 
 8980              		.loc 1 3075 28 view .LVU2500
 8981 0399 4983EC01 		subq	$1, %r12
 8982              	.LVL822:
 8983              	.L901:
 8984              	.LBB491:
3093:fltk-1.3.4-1/png/png.c **** 
 8985              		.loc 1 3093 16 is_stmt 1 view .LVU2501
3095:fltk-1.3.4-1/png/png.c ****                {
 8986              		.loc 1 3095 16 view .LVU2502
3095:fltk-1.3.4-1/png/png.c ****                {
 8987              		.loc 1 3095 22 view .LVU2503
 8988              	.LBE491:
3057:fltk-1.3.4-1/png/png.c **** 
 8989              		.loc 1 3057 22 is_stmt 0 view .LVU2504
 8990 039d BA010000 		movl	$1, %edx
 8990      00
 8991 03a2 4C8D5424 		leaq	45(%rsp), %r10
 8991      2D
 8992              	.LBB492:
3097:fltk-1.3.4-1/png/png.c ****                   uexp_b10 /= 10;
 8993              		.loc 1 3097 62 view .LVU2505
 8994 03a7 41B9CDCC 		movl	$3435973837, %r9d
 8994      CCCC
 8995              	.LVL823:
 8996 03ad 0F1F00   		.p2align 4,,10
 8997              		.p2align 3
 8998              	.L902:
3097:fltk-1.3.4-1/png/png.c ****                   uexp_b10 /= 10;
 8999              		.loc 1 3097 19 is_stmt 1 view .LVU2506
3097:fltk-1.3.4-1/png/png.c ****                   uexp_b10 /= 10;
 9000              		.loc 1 3097 62 is_stmt 0 view .LVU2507
 9001 03b0 89C8     		movl	%ecx, %eax
 9002 03b2 89CB     		movl	%ecx, %ebx
3097:fltk-1.3.4-1/png/png.c ****                   uexp_b10 /= 10;
 9003              		.loc 1 3097 35 view .LVU2508
 9004 03b4 4189D0   		movl	%edx, %r8d
 9005              	.LVL824:
3097:fltk-1.3.4-1/png/png.c ****                   uexp_b10 /= 10;
 9006              		.loc 1 3097 62 view .LVU2509
 9007 03b7 490FAFC1 		imulq	%r9, %rax
 9008 03bb 48C1E823 		shrq	$35, %rax
 9009 03bf 8D3480   		leal	(%rax,%rax,4), %esi
 9010 03c2 01F6     		addl	%esi, %esi
 9011 03c4 29F3     		subl	%esi, %ebx
 9012 03c6 89DE     		movl	%ebx, %esi
3097:fltk-1.3.4-1/png/png.c ****                   uexp_b10 /= 10;
 9013              		.loc 1 3097 41 view .LVU2510
 9014 03c8 83C630   		addl	$48, %esi
 9015 03cb 41883412 		movb	%sil, (%r10,%rdx)
3098:fltk-1.3.4-1/png/png.c ****                }
 9016              		.loc 1 3098 19 is_stmt 1 view .LVU2511
 9017 03cf 89CE     		movl	%ecx, %esi
3098:fltk-1.3.4-1/png/png.c ****                }
 9018              		.loc 1 3098 28 is_stmt 0 view .LVU2512
 9019 03d1 89C1     		movl	%eax, %ecx
 9020              	.LVL825:
3095:fltk-1.3.4-1/png/png.c ****                {
 9021              		.loc 1 3095 22 is_stmt 1 view .LVU2513
 9022 03d3 4889D0   		movq	%rdx, %rax
 9023              	.LVL826:
3095:fltk-1.3.4-1/png/png.c ****                {
 9024              		.loc 1 3095 22 is_stmt 0 view .LVU2514
 9025 03d6 4883C201 		addq	$1, %rdx
 9026              	.LVL827:
3095:fltk-1.3.4-1/png/png.c ****                {
 9027              		.loc 1 3095 22 view .LVU2515
 9028 03da 83FE09   		cmpl	$9, %esi
 9029 03dd 77D1     		ja	.L902
 9030              	.LBE492:
3105:fltk-1.3.4-1/png/png.c ****             {
 9031              		.loc 1 3105 13 is_stmt 1 view .LVU2516
3105:fltk-1.3.4-1/png/png.c ****             {
 9032              		.loc 1 3105 16 is_stmt 0 view .LVU2517
 9033 03df 4539E0   		cmpl	%r12d, %r8d
 9034 03e2 0F8D0D02 		jge	.L855
 9034      0000
 9035 03e8 83E801   		subl	$1, %eax
 9036 03eb 4963D0   		movslq	%r8d, %rdx
 9037 03ee 488D7407 		leaq	1(%rdi,%rax), %rsi
 9037      01
 9038 03f3 488D5414 		leaq	46(%rsp,%rdx), %rdx
 9038      2E
 9039 03f8 4889F8   		movq	%rdi, %rax
 9040              	.LVL828:
 9041 03fb 0F1F4400 		.p2align 4,,10
 9041      00
 9042              		.p2align 3
 9043              	.L904:
3107:fltk-1.3.4-1/png/png.c **** 
 9044              		.loc 1 3107 36 is_stmt 1 discriminator 2 view .LVU2518
3107:fltk-1.3.4-1/png/png.c **** 
 9045              		.loc 1 3107 45 is_stmt 0 discriminator 2 view .LVU2519
 9046 0400 0FB64AFF 		movzbl	-1(%rdx), %ecx
3107:fltk-1.3.4-1/png/png.c **** 
 9047              		.loc 1 3107 42 discriminator 2 view .LVU2520
 9048 0404 4883C001 		addq	$1, %rax
 9049              	.LVL829:
3107:fltk-1.3.4-1/png/png.c **** 
 9050              		.loc 1 3107 42 discriminator 2 view .LVU2521
 9051 0408 4883EA01 		subq	$1, %rdx
 9052              	.LVL830:
3107:fltk-1.3.4-1/png/png.c **** 
 9053              		.loc 1 3107 45 discriminator 2 view .LVU2522
 9054 040c 8848FF   		movb	%cl, -1(%rax)
3107:fltk-1.3.4-1/png/png.c **** 
 9055              		.loc 1 3107 22 is_stmt 1 discriminator 2 view .LVU2523
 9056 040f 4839F0   		cmpq	%rsi, %rax
 9057 0412 75EC     		jne	.L904
3109:fltk-1.3.4-1/png/png.c **** 
 9058              		.loc 1 3109 16 view .LVU2524
3109:fltk-1.3.4-1/png/png.c **** 
 9059              		.loc 1 3109 23 is_stmt 0 view .LVU2525
 9060 0414 4183E801 		subl	$1, %r8d
 9061 0418 4D63C0   		movslq	%r8d, %r8
 9062 041b 42C64407 		movb	$0, 1(%rdi,%r8)
 9062      0100
3111:fltk-1.3.4-1/png/png.c ****             }
 9063              		.loc 1 3111 16 is_stmt 1 view .LVU2526
 9064 0421 E961FCFF 		jmp	.L853
 9064      FF
 9065              	.LVL831:
 9066 0426 662E0F1F 		.p2align 4,,10
 9066      84000000 
 9066      0000
 9067              		.p2align 3
 9068              	.L886:
 9069              	.LBB493:
3004:fltk-1.3.4-1/png/png.c ****                }
 9070              		.loc 1 3004 37 discriminator 1 view .LVU2527
 9071 0430 83C101   		addl	$1, %ecx
 9072              	.LVL832:
3004:fltk-1.3.4-1/png/png.c ****                }
 9073              		.loc 1 3004 37 is_stmt 0 discriminator 1 view .LVU2528
 9074 0433 4489F0   		movl	%r14d, %eax
 9075 0436 29C8     		subl	%ecx, %eax
 9076 0438 E924FFFF 		jmp	.L887
 9076      FF
 9077 043d 0F1F00   		.p2align 4,,10
 9078              		.p2align 3
 9079              	.L963:
2932:fltk-1.3.4-1/png/png.c **** 
 9080              		.loc 1 2932 24 view .LVU2529
 9081 0440 488D7C24 		leaq	32(%rsp), %rdi
 9081      20
 9082 0445 890C24   		movl	%ecx, (%rsp)
2932:fltk-1.3.4-1/png/png.c **** 
 9083              		.loc 1 2932 19 is_stmt 1 view .LVU2530
2932:fltk-1.3.4-1/png/png.c **** 
 9084              		.loc 1 2932 24 is_stmt 0 view .LVU2531
 9085 0448 E8000000 		call	modf@PLT
 9085      00
 9086              	.LVL833:
2932:fltk-1.3.4-1/png/png.c **** 
 9087              		.loc 1 2932 24 view .LVU2532
 9088 044d F20F104C 		movsd	32(%rsp), %xmm1
 9088      2420
3001:fltk-1.3.4-1/png/png.c ****                {
 9089              		.loc 1 3001 19 view .LVU2533
 9090 0453 660FEFED 		pxor	%xmm5, %xmm5
 9091 0457 8B0C24   		movl	(%rsp), %ecx
 9092 045a 488B0500 		movq	.LC0(%rip), %rax
 9092      000000
 9093 0461 F30F7E35 		movq	.LC8(%rip), %xmm6
 9093      00000000 
 9094              	.LVL834:
3001:fltk-1.3.4-1/png/png.c ****                {
 9095              		.loc 1 3001 16 is_stmt 1 view .LVU2534
3001:fltk-1.3.4-1/png/png.c ****                {
 9096              		.loc 1 3001 19 is_stmt 0 view .LVU2535
 9097 0469 660F2ECD 		ucomisd	%xmm5, %xmm1
 9098 046d 66480F6E 		movq	%rax, %xmm3
 9098      D8
 9099 0472 488B0500 		movq	.LC1(%rip), %rax
 9099      000000
 9100 0479 66480F6E 		movq	%rax, %xmm4
 9100      E0
 9101 047e 0F8BBEFE 		jnp	.L968
 9101      FFFF
 9102              	.L924:
3001:fltk-1.3.4-1/png/png.c ****                {
 9103              		.loc 1 3001 19 view .LVU2536
 9104 0484 F20F2CD1 		cvttsd2sil	%xmm1, %edx
 9105 0488 488D4301 		leaq	1(%rbx), %rax
 9106 048c 4889C7   		movq	%rax, %rdi
 9107 048f 83C230   		addl	$48, %edx
 9108 0492 E9DBFDFF 		jmp	.L876
 9108      FF
 9109              	.LVL835:
 9110 0497 660F1F84 		.p2align 4,,10
 9110      00000000 
 9110      00
 9111              		.p2align 3
 9112              	.L912:
3001:fltk-1.3.4-1/png/png.c ****                {
 9113              		.loc 1 3001 19 view .LVU2537
 9114 04a0 BA310000 		movl	$49, %edx
 9114      00
2998:fltk-1.3.4-1/png/png.c ****                }
 9115              		.loc 1 2998 22 view .LVU2538
 9116 04a5 660FEFC0 		pxor	%xmm0, %xmm0
 9117 04a9 E9C4FDFF 		jmp	.L876
 9117      FF
 9118              	.LVL836:
 9119 04ae 6690     		.p2align 4,,10
 9120              		.p2align 3
 9121              	.L917:
2998:fltk-1.3.4-1/png/png.c ****                }
 9122              		.loc 1 2998 22 view .LVU2539
 9123 04b0 4889D8   		movq	%rbx, %rax
 9124 04b3 4889FB   		movq	%rdi, %rbx
 9125 04b6 E95BFEFF 		jmp	.L892
 9125      FF
 9126              	.LVL837:
 9127 04bb 0F1F4400 		.p2align 4,,10
 9127      00
 9128              		.p2align 3
 9129              	.L964:
2948:fltk-1.3.4-1/png/png.c ****                         {
 9130              		.loc 1 2948 31 is_stmt 1 view .LVU2540
 9131 04c0 4489EF   		movl	%r13d, %edi
 9132 04c3 4531C0   		xorl	%r8d, %r8d
 9133 04c6 4585FF   		testl	%r15d, %r15d
 9134 04c9 7F27     		jg	.L874
 9135 04cb E97F0000 		jmp	.L875
 9135      00
 9136              	.LVL838:
 9137              		.p2align 4,,10
 9138              		.p2align 3
 9139              	.L969:
 9140              	.LBB485:
2953:fltk-1.3.4-1/png/png.c **** 
 9141              		.loc 1 2953 31 view .LVU2541
 9142 04d0 83C701   		addl	$1, %edi
2950:fltk-1.3.4-1/png/png.c **** 
 9143              		.loc 1 2950 32 is_stmt 0 view .LVU2542
 9144 04d3 4889C3   		movq	%rax, %rbx
 9145 04d6 41B80100 		movl	$1, %r8d
 9145      0000
 9146              	.LVL839:
 9147              	.L878:
2965:fltk-1.3.4-1/png/png.c ****                            d = ch - 47;  /* I.e. 1+(ch-48) */
 9148              		.loc 1 2965 28 is_stmt 1 view .LVU2543
2966:fltk-1.3.4-1/png/png.c ****                         }
 9149              		.loc 1 2966 28 view .LVU2544
2966:fltk-1.3.4-1/png/png.c ****                         }
 9150              		.loc 1 2966 35 is_stmt 0 view .LVU2545
 9151 04dc 8D42D1   		leal	-47(%rdx), %eax
2966:fltk-1.3.4-1/png/png.c ****                         }
 9152              		.loc 1 2966 30 view .LVU2546
 9153 04df 660FEFC9 		pxor	%xmm1, %xmm1
 9154 04e3 F20F2AC8 		cvtsi2sdl	%eax, %xmm1
2966:fltk-1.3.4-1/png/png.c ****                         }
 9155              		.loc 1 2966 30 view .LVU2547
 9156              	.LBE485:
2948:fltk-1.3.4-1/png/png.c ****                         {
 9157              		.loc 1 2948 31 is_stmt 1 view .LVU2548
 9158 04e7 4183EF01 		subl	$1, %r15d
 9159              	.LVL840:
2948:fltk-1.3.4-1/png/png.c ****                         {
 9160              		.loc 1 2948 31 is_stmt 0 view .LVU2549
 9161 04eb 7443     		je	.L960
2948:fltk-1.3.4-1/png/png.c ****                         {
 9162              		.loc 1 2948 44 discriminator 1 view .LVU2550
 9163 04ed 83FA38   		cmpl	$56, %edx
 9164 04f0 7E3E     		jle	.L960
 9165              	.LVL841:
 9166              	.L874:
 9167              	.LBB486:
2950:fltk-1.3.4-1/png/png.c **** 
 9168              		.loc 1 2950 28 is_stmt 1 view .LVU2551
2950:fltk-1.3.4-1/png/png.c **** 
 9169              		.loc 1 2950 32 is_stmt 0 view .LVU2552
 9170 04f2 0FB653FF 		movzbl	-1(%rbx), %edx
 9171 04f6 488D43FF 		leaq	-1(%rbx), %rax
 9172              	.LVL842:
2952:fltk-1.3.4-1/png/png.c ****                               ++exp_b10;
 9173              		.loc 1 2952 28 is_stmt 1 view .LVU2553
2952:fltk-1.3.4-1/png/png.c ****                               ++exp_b10;
 9174              		.loc 1 2952 31 is_stmt 0 view .LVU2554
 9175 04fa 83FFFF   		cmpl	$-1, %edi
 9176 04fd 75D1     		jne	.L969
2955:fltk-1.3.4-1/png/png.c ****                            {
 9177              		.loc 1 2955 33 is_stmt 1 view .LVU2555
2955:fltk-1.3.4-1/png/png.c ****                            {
 9178              		.loc 1 2955 36 is_stmt 0 view .LVU2556
 9179 04ff 83FA2E   		cmpl	$46, %edx
 9180 0502 740C     		je	.L970
2950:fltk-1.3.4-1/png/png.c **** 
 9181              		.loc 1 2950 32 view .LVU2557
 9182 0504 4889C3   		movq	%rax, %rbx
 9183 0507 EBD3     		jmp	.L878
 9184 0509 0F1F8000 		.p2align 4,,10
 9184      000000
 9185              		.p2align 3
 9186              	.L970:
2957:fltk-1.3.4-1/png/png.c ****                               /* Advance exp_b10 to '1', so that the
 9187              		.loc 1 2957 31 is_stmt 1 view .LVU2558
 9188              	.LVL843:
2957:fltk-1.3.4-1/png/png.c ****                               /* Advance exp_b10 to '1', so that the
 9189              		.loc 1 2957 34 is_stmt 0 view .LVU2559
 9190 0510 0FB653FE 		movzbl	-2(%rbx), %edx
 9191              	.LVL844:
2957:fltk-1.3.4-1/png/png.c ****                               /* Advance exp_b10 to '1', so that the
 9192              		.loc 1 2957 46 view .LVU2560
 9193 0514 4983C401 		addq	$1, %r12
 9194              	.LVL845:
2962:fltk-1.3.4-1/png/png.c ****                            }
 9195              		.loc 1 2962 31 is_stmt 1 view .LVU2561
2957:fltk-1.3.4-1/png/png.c ****                               /* Advance exp_b10 to '1', so that the
 9196              		.loc 1 2957 34 is_stmt 0 view .LVU2562
 9197 0518 4883EB02 		subq	$2, %rbx
 9198              	.LVL846:
2957:fltk-1.3.4-1/png/png.c ****                               /* Advance exp_b10 to '1', so that the
 9199              		.loc 1 2957 46 view .LVU2563
 9200 051c 41B80100 		movl	$1, %r8d
 9200      0000
2962:fltk-1.3.4-1/png/png.c ****                            }
 9201              		.loc 1 2962 39 view .LVU2564
 9202 0522 BF010000 		movl	$1, %edi
 9202      00
 9203 0527 EBB3     		jmp	.L878
 9204 0529 0F1F8000 		.p2align 4,,10
 9204      000000
 9205              		.p2align 3
 9206              	.L960:
2962:fltk-1.3.4-1/png/png.c ****                            }
 9207              		.loc 1 2962 39 view .LVU2565
 9208 0530 F20F114C 		movsd	%xmm1, 32(%rsp)
 9208      2420
 9209 0536 4584C0   		testb	%r8b, %r8b
 9210 0539 7407     		je	.L880
 9211 053b 897C241C 		movl	%edi, 28(%rsp)
 9212              	.LBE486:
2948:fltk-1.3.4-1/png/png.c ****                         {
 9213              		.loc 1 2948 44 view .LVU2566
 9214 053f 4189FD   		movl	%edi, %r13d
 9215              	.L880:
2973:fltk-1.3.4-1/png/png.c ****                         {
 9216              		.loc 1 2973 25 is_stmt 1 view .LVU2567
2998:fltk-1.3.4-1/png/png.c ****                }
 9217              		.loc 1 2998 22 is_stmt 0 view .LVU2568
 9218 0542 660FEFC0 		pxor	%xmm0, %xmm0
2973:fltk-1.3.4-1/png/png.c ****                         {
 9219              		.loc 1 2973 28 view .LVU2569
 9220 0546 83FA38   		cmpl	$56, %edx
 9221 0549 0F8EE5FD 		jle	.L870
 9221      FFFF
 9222              	.LVL847:
 9223              	.L875:
2975:fltk-1.3.4-1/png/png.c ****                            {
 9224              		.loc 1 2975 28 is_stmt 1 view .LVU2570
2975:fltk-1.3.4-1/png/png.c ****                            {
 9225              		.loc 1 2975 31 is_stmt 0 view .LVU2571
 9226 054f 4183FDFF 		cmpl	$-1, %r13d
 9227 0553 7450     		je	.L971
2991:fltk-1.3.4-1/png/png.c **** 
 9228              		.loc 1 2991 31 is_stmt 1 view .LVU2572
 9229 0555 4183C501 		addl	$1, %r13d
 9230 0559 488D7B01 		leaq	1(%rbx), %rdi
 9231 055d 44896C24 		movl	%r13d, 28(%rsp)
 9231      1C
 9232              	.L882:
2994:fltk-1.3.4-1/png/png.c ****                         }
 9233              		.loc 1 2994 28 view .LVU2573
2994:fltk-1.3.4-1/png/png.c ****                         }
 9234              		.loc 1 2994 30 is_stmt 0 view .LVU2574
 9235 0562 F20F1164 		movsd	%xmm4, 32(%rsp)
 9235      2420
 9236              	.LVL848:
3001:fltk-1.3.4-1/png/png.c ****                {
 9237              		.loc 1 3001 16 is_stmt 1 view .LVU2575
3009:fltk-1.3.4-1/png/png.c ****                   clead = 0;
 9238              		.loc 1 3009 19 view .LVU2576
 9239 0568 4129CF   		subl	%ecx, %r15d
 9240              	.LVL849:
3010:fltk-1.3.4-1/png/png.c **** 
 9241              		.loc 1 3010 19 view .LVU2577
3012:fltk-1.3.4-1/png/png.c ****                   {
 9242              		.loc 1 3012 19 view .LVU2578
3012:fltk-1.3.4-1/png/png.c ****                   {
 9243              		.loc 1 3012 25 view .LVU2579
2994:fltk-1.3.4-1/png/png.c ****                         }
 9244              		.loc 1 2994 30 is_stmt 0 view .LVU2580
 9245 056b BA310000 		movl	$49, %edx
 9245      00
2998:fltk-1.3.4-1/png/png.c ****                }
 9246              		.loc 1 2998 22 view .LVU2581
 9247 0570 660FEFC0 		pxor	%xmm0, %xmm0
 9248 0574 E971FDFF 		jmp	.L883
 9248      FF
 9249              	.LVL850:
 9250 0579 0F1F8000 		.p2align 4,,10
 9250      000000
 9251              		.p2align 3
 9252              	.L967:
2998:fltk-1.3.4-1/png/png.c ****                }
 9253              		.loc 1 2998 22 view .LVU2582
 9254              	.LBE493:
3057:fltk-1.3.4-1/png/png.c **** 
 9255              		.loc 1 3057 22 is_stmt 1 view .LVU2583
3057:fltk-1.3.4-1/png/png.c **** 
 9256              		.loc 1 3057 22 is_stmt 0 view .LVU2584
 9257 0580 4585ED   		testl	%r13d, %r13d
 9258 0583 7E32     		jle	.L918
 9259 0585 418D45FF 		leal	-1(%r13), %eax
 9260 0589 488D4403 		leaq	1(%rbx,%rax), %rax
 9260      01
 9261 058e 6690     		.p2align 4,,10
 9262              		.p2align 3
 9263              	.L898:
3057:fltk-1.3.4-1/png/png.c **** 
 9264              		.loc 1 3057 39 is_stmt 1 discriminator 2 view .LVU2585
3057:fltk-1.3.4-1/png/png.c **** 
 9265              		.loc 1 3057 45 is_stmt 0 discriminator 2 view .LVU2586
 9266 0590 4883C301 		addq	$1, %rbx
 9267              	.LVL851:
3057:fltk-1.3.4-1/png/png.c **** 
 9268              		.loc 1 3057 48 discriminator 2 view .LVU2587
 9269 0594 C643FF30 		movb	$48, -1(%rbx)
3057:fltk-1.3.4-1/png/png.c **** 
 9270              		.loc 1 3057 22 is_stmt 1 discriminator 2 view .LVU2588
 9271 0598 4839D8   		cmpq	%rbx, %rax
 9272 059b 75F3     		jne	.L898
 9273              	.L897:
 9274              	.LVL852:
3059:fltk-1.3.4-1/png/png.c **** 
 9275              		.loc 1 3059 16 view .LVU2589
3059:fltk-1.3.4-1/png/png.c **** 
 9276              		.loc 1 3059 23 is_stmt 0 view .LVU2590
 9277 059d C60000   		movb	$0, (%rax)
3064:fltk-1.3.4-1/png/png.c ****             }
 9278              		.loc 1 3064 16 is_stmt 1 view .LVU2591
 9279 05a0 E9E2FAFF 		jmp	.L853
 9279      FF
 9280              	.LVL853:
 9281              	.L971:
 9282              	.LBB494:
 9283              	.LBB487:
2981:fltk-1.3.4-1/png/png.c **** 
 9284              		.loc 1 2981 31 view .LVU2592
2983:fltk-1.3.4-1/png/png.c ****                                  ++size, exp_b10 = 1;
 9285              		.loc 1 2983 34 is_stmt 0 view .LVU2593
 9286 05a5 807BFF2E 		cmpb	$46, -1(%rbx)
2981:fltk-1.3.4-1/png/png.c **** 
 9287              		.loc 1 2981 35 view .LVU2594
 9288 05a9 488D43FF 		leaq	-1(%rbx), %rax
 9289              	.LVL854:
2983:fltk-1.3.4-1/png/png.c ****                                  ++size, exp_b10 = 1;
 9290              		.loc 1 2983 31 is_stmt 1 view .LVU2595
2983:fltk-1.3.4-1/png/png.c ****                                  ++size, exp_b10 = 1;
 9291              		.loc 1 2983 34 is_stmt 0 view .LVU2596
 9292 05ad 7424     		je	.L972
 9293 05af 4889DF   		movq	%rbx, %rdi
2981:fltk-1.3.4-1/png/png.c **** 
 9294              		.loc 1 2981 35 view .LVU2597
 9295 05b2 4889C3   		movq	%rax, %rbx
 9296 05b5 EBAB     		jmp	.L882
 9297              	.LVL855:
 9298              	.L918:
2981:fltk-1.3.4-1/png/png.c **** 
 9299              		.loc 1 2981 35 view .LVU2598
 9300              	.LBE487:
 9301              	.LBE494:
3057:fltk-1.3.4-1/png/png.c **** 
 9302              		.loc 1 3057 22 view .LVU2599
 9303 05b7 4889D8   		movq	%rbx, %rax
 9304 05ba EBE1     		jmp	.L897
 9305              	.LVL856:
 9306 05bc 0F1F4000 		.p2align 4,,10
 9307              		.p2align 3
 9308              	.L900:
 9309              	.LBB495:
3086:fltk-1.3.4-1/png/png.c ****                   uexp_b10 = -exp_b10;
 9310              		.loc 1 3086 19 is_stmt 1 view .LVU2600
3086:fltk-1.3.4-1/png/png.c ****                   uexp_b10 = -exp_b10;
 9311              		.loc 1 3086 28 is_stmt 0 view .LVU2601
 9312 05c0 C643012D 		movb	$45, 1(%rbx)
3086:fltk-1.3.4-1/png/png.c ****                   uexp_b10 = -exp_b10;
 9313              		.loc 1 3086 25 view .LVU2602
 9314 05c4 488D7B02 		leaq	2(%rbx), %rdi
 9315              	.LVL857:
3086:fltk-1.3.4-1/png/png.c ****                   uexp_b10 = -exp_b10;
 9316              		.loc 1 3086 34 view .LVU2603
 9317 05c8 4983EC02 		subq	$2, %r12
 9318              	.LVL858:
3087:fltk-1.3.4-1/png/png.c ****                }
 9319              		.loc 1 3087 19 is_stmt 1 view .LVU2604
3087:fltk-1.3.4-1/png/png.c ****                }
 9320              		.loc 1 3087 30 is_stmt 0 view .LVU2605
 9321 05cc F7D9     		negl	%ecx
 9322              	.LVL859:
3087:fltk-1.3.4-1/png/png.c ****                }
 9323              		.loc 1 3087 30 view .LVU2606
 9324 05ce E9CAFDFF 		jmp	.L901
 9324      FF
 9325              	.LVL860:
 9326              	.L972:
3087:fltk-1.3.4-1/png/png.c ****                }
 9327              		.loc 1 3087 30 view .LVU2607
 9328              	.LBE495:
 9329              	.LBB496:
 9330              	.LBB488:
2984:fltk-1.3.4-1/png/png.c **** 
 9331              		.loc 1 2984 34 is_stmt 1 view .LVU2608
2984:fltk-1.3.4-1/png/png.c **** 
 9332              		.loc 1 2984 50 is_stmt 0 view .LVU2609
 9333 05d3 4889DF   		movq	%rbx, %rdi
2984:fltk-1.3.4-1/png/png.c **** 
 9334              		.loc 1 2984 34 view .LVU2610
 9335 05d6 4983C401 		addq	$1, %r12
 9336              	.LVL861:
2981:fltk-1.3.4-1/png/png.c **** 
 9337              		.loc 1 2981 35 view .LVU2611
 9338 05da 4889C3   		movq	%rax, %rbx
2984:fltk-1.3.4-1/png/png.c **** 
 9339              		.loc 1 2984 50 view .LVU2612
 9340 05dd C744241C 		movl	$1, 28(%rsp)
 9340      01000000 
 9341 05e5 41BD0100 		movl	$1, %r13d
 9341      0000
 9342 05eb E972FFFF 		jmp	.L882
 9342      FF
 9343              	.LVL862:
 9344              	.L962:
2984:fltk-1.3.4-1/png/png.c **** 
 9345              		.loc 1 2984 50 view .LVU2613
 9346              	.LBE488:
 9347              	.LBE496:
 9348              	.LBE483:
 9349              	.LBE480:
3133:fltk-1.3.4-1/png/png.c **** 
 9350              		.loc 1 3133 1 view .LVU2614
 9351 05f0 E8000000 		call	__stack_chk_fail@PLT
 9351      00
 9352              	.LVL863:
 9353              	.L855:
3132:fltk-1.3.4-1/png/png.c **** }
 9354              		.loc 1 3132 4 is_stmt 1 view .LVU2615
 9355 05f5 488B7C24 		movq	8(%rsp), %rdi
 9355      08
 9356 05fa 488D3500 		leaq	.LC86(%rip), %rsi
 9356      000000
 9357 0601 E8000000 		call	png_error@PLT
 9357      00
 9358              	.LVL864:
 9359              		.cfi_endproc
 9360              	.LFE100:
 9362              		.section	.text.png_ascii_from_fixed,"ax",@progbits
 9363              		.p2align 4
 9364              		.globl	png_ascii_from_fixed
 9366              	png_ascii_from_fixed:
 9367              	.LVL865:
 9368              	.LFB101:
3143:fltk-1.3.4-1/png/png.c ****    /* Require space for 10 decimal digits, a decimal point, a minus sign and a
 9369              		.loc 1 3143 1 view -0
 9370              		.cfi_startproc
3143:fltk-1.3.4-1/png/png.c ****    /* Require space for 10 decimal digits, a decimal point, a minus sign and a
 9371              		.loc 1 3143 1 is_stmt 0 view .LVU2617
 9372 0000 F30F1EFA 		endbr64
 9373 0004 53       		pushq	%rbx
 9374              		.cfi_def_cfa_offset 16
 9375              		.cfi_offset 3, -16
 9376 0005 4883EC20 		subq	$32, %rsp
 9377              		.cfi_def_cfa_offset 48
3143:fltk-1.3.4-1/png/png.c ****    /* Require space for 10 decimal digits, a decimal point, a minus sign and a
 9378              		.loc 1 3143 1 view .LVU2618
 9379 0009 64488B04 		movq	%fs:40, %rax
 9379      25280000 
 9379      00
 9380 0012 48894424 		movq	%rax, 24(%rsp)
 9380      18
 9381 0017 31C0     		xorl	%eax, %eax
3147:fltk-1.3.4-1/png/png.c ****    {
 9382              		.loc 1 3147 4 is_stmt 1 view .LVU2619
3147:fltk-1.3.4-1/png/png.c ****    {
 9383              		.loc 1 3147 7 is_stmt 0 view .LVU2620
 9384 0019 4883FA0C 		cmpq	$12, %rdx
 9385 001d 0F867701 		jbe	.L974
 9385      0000
 9386              	.LBB497:
3149:fltk-1.3.4-1/png/png.c **** 
 9387              		.loc 1 3149 7 is_stmt 1 view .LVU2621
3152:fltk-1.3.4-1/png/png.c ****          *ascii++ = 45, --size, num = -fp;
 9388              		.loc 1 3152 7 view .LVU2622
3152:fltk-1.3.4-1/png/png.c ****          *ascii++ = 45, --size, num = -fp;
 9389              		.loc 1 3152 10 is_stmt 0 view .LVU2623
 9390 0023 85C9     		testl	%ecx, %ecx
 9391 0025 0F88D500 		js	.L1007
 9391      0000
3155:fltk-1.3.4-1/png/png.c **** 
 9392              		.loc 1 3155 10 is_stmt 1 view .LVU2624
 9393              	.LVL866:
3157:fltk-1.3.4-1/png/png.c ****       {
 9394              		.loc 1 3157 7 view .LVU2625
 9395              	.LBB498:
3162:fltk-1.3.4-1/png/png.c ****          {
 9396              		.loc 1 3162 16 view .LVU2626
 9397 002b 0F84BF00 		je	.L977
 9397      0000
 9398              	.LVL867:
 9399              	.L976:
3162:fltk-1.3.4-1/png/png.c ****          {
 9400              		.loc 1 3162 16 is_stmt 0 view .LVU2627
 9401              	.LBE498:
3153:fltk-1.3.4-1/png/png.c ****       else
 9402              		.loc 1 3153 16 view .LVU2628
 9403 0031 B8010000 		movl	$1, %eax
 9403      00
 9404 0036 41B81000 		movl	$16, %r8d
 9404      0000
 9405 003c 488D5C24 		leaq	13(%rsp), %rbx
 9405      0D
 9406              	.LBB502:
 9407              	.LBB499:
3165:fltk-1.3.4-1/png/png.c ****             num -= tmp*10;
 9408              		.loc 1 3165 26 view .LVU2629
 9409 0041 41BBCDCC 		movl	$3435973837, %r11d
 9409      CCCC
 9410              	.LVL868:
 9411 0047 660F1F84 		.p2align 4,,10
 9411      00000000 
 9411      00
 9412              		.p2align 3
 9413              	.L980:
3165:fltk-1.3.4-1/png/png.c ****             num -= tmp*10;
 9414              		.loc 1 3165 13 is_stmt 1 view .LVU2630
 9415 0050 89C9     		movl	%ecx, %ecx
3165:fltk-1.3.4-1/png/png.c ****             num -= tmp*10;
 9416              		.loc 1 3165 13 is_stmt 0 view .LVU2631
 9417 0052 4889CA   		movq	%rcx, %rdx
3165:fltk-1.3.4-1/png/png.c ****             num -= tmp*10;
 9418              		.loc 1 3165 26 view .LVU2632
 9419 0055 490FAFCB 		imulq	%r11, %rcx
 9420              	.LVL869:
3165:fltk-1.3.4-1/png/png.c ****             num -= tmp*10;
 9421              		.loc 1 3165 26 view .LVU2633
 9422 0059 4189D2   		movl	%edx, %r10d
 9423 005c 48C1E923 		shrq	$35, %rcx
 9424              	.LVL870:
3166:fltk-1.3.4-1/png/png.c ****             digits[ndigits++] = (char)(48 + num);
 9425              		.loc 1 3166 13 is_stmt 1 view .LVU2634
 9426 0060 8D3C89   		leal	(%rcx,%rcx,4), %edi
 9427 0063 01FF     		addl	%edi, %edi
 9428 0065 4129FA   		subl	%edi, %r10d
 9429 0068 4489D7   		movl	%r10d, %edi
 9430              	.LVL871:
3167:fltk-1.3.4-1/png/png.c ****             /* Record the first non-zero digit, note that this is a number
 9431              		.loc 1 3167 13 view .LVU2635
 9432 006b 4189C2   		movl	%eax, %r10d
 9433              	.LVL872:
3167:fltk-1.3.4-1/png/png.c ****             /* Record the first non-zero digit, note that this is a number
 9434              		.loc 1 3167 33 is_stmt 0 view .LVU2636
 9435 006e 448D4F30 		leal	48(%rdi), %r9d
3167:fltk-1.3.4-1/png/png.c ****             /* Record the first non-zero digit, note that this is a number
 9436              		.loc 1 3167 31 view .LVU2637
 9437 0072 44880C03 		movb	%r9b, (%rbx,%rax)
3171:fltk-1.3.4-1/png/png.c ****                first = ndigits;
 9438              		.loc 1 3171 13 is_stmt 1 view .LVU2638
3171:fltk-1.3.4-1/png/png.c ****                first = ndigits;
 9439              		.loc 1 3171 16 is_stmt 0 view .LVU2639
 9440 0076 4183F810 		cmpl	$16, %r8d
 9441 007a 7506     		jne	.L978
 9442 007c 85FF     		testl	%edi, %edi
 9443 007e 440F45C0 		cmovne	%eax, %r8d
 9444              	.LVL873:
 9445              	.L978:
3171:fltk-1.3.4-1/png/png.c ****                first = ndigits;
 9446              		.loc 1 3171 16 view .LVU2640
 9447              	.LBE499:
3162:fltk-1.3.4-1/png/png.c ****          {
 9448              		.loc 1 3162 16 is_stmt 1 view .LVU2641
 9449 0082 4883C001 		addq	$1, %rax
 9450              	.LVL874:
3162:fltk-1.3.4-1/png/png.c ****          {
 9451              		.loc 1 3162 16 is_stmt 0 view .LVU2642
 9452 0086 83FA09   		cmpl	$9, %edx
 9453 0089 77C5     		ja	.L980
3176:fltk-1.3.4-1/png/png.c ****          {
 9454              		.loc 1 3176 10 is_stmt 1 view .LVU2643
 9455              	.LVL875:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9456              		.loc 1 3178 19 view .LVU2644
 9457 008b 4183FA05 		cmpl	$5, %r10d
 9458 008f 767F     		jbe	.L983
 9459 0091 418D42FF 		leal	-1(%r10), %eax
 9460 0095 4889F2   		movq	%rsi, %rdx
 9461              	.LVL876:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9462              		.loc 1 3178 19 is_stmt 0 view .LVU2645
 9463 0098 EB0E     		jmp	.L985
 9464              	.LVL877:
 9465 009a 660F1F44 		.p2align 4,,10
 9465      0000
 9466              		.p2align 3
 9467              	.L1008:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9468              		.loc 1 3178 19 view .LVU2646
 9469 00a0 89C1     		movl	%eax, %ecx
 9470 00a2 440FB64C 		movzbl	14(%rsp,%rcx), %r9d
 9470      0C0E
 9471              	.LVL878:
 9472              	.L985:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9473              		.loc 1 3178 33 is_stmt 1 discriminator 2 view .LVU2647
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9474              		.loc 1 3178 33 is_stmt 0 discriminator 2 view .LVU2648
 9475 00a8 83E801   		subl	$1, %eax
 9476              	.LVL879:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9477              		.loc 1 3178 39 discriminator 2 view .LVU2649
 9478 00ab 4883C201 		addq	$1, %rdx
 9479              	.LVL880:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9480              		.loc 1 3178 42 discriminator 2 view .LVU2650
 9481 00af 44884AFF 		movb	%r9b, -1(%rdx)
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9482              		.loc 1 3178 19 is_stmt 1 discriminator 2 view .LVU2651
 9483 00b3 83F804   		cmpl	$4, %eax
 9484 00b6 75E8     		jne	.L1008
 9485 00b8 418D42FA 		leal	-6(%r10), %eax
 9486              	.LVL881:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9487              		.loc 1 3178 19 is_stmt 0 discriminator 2 view .LVU2652
 9488 00bc 488D4C06 		leaq	1(%rsi,%rax), %rcx
 9488      01
3183:fltk-1.3.4-1/png/png.c ****             {
 9489              		.loc 1 3183 13 is_stmt 1 view .LVU2653
3183:fltk-1.3.4-1/png/png.c ****             {
 9490              		.loc 1 3183 16 is_stmt 0 view .LVU2654
 9491 00c1 4183F805 		cmpl	$5, %r8d
 9492 00c5 0F86AF00 		jbe	.L1009
 9492      0000
 9493              	.LVL882:
 9494              	.L982:
3200:fltk-1.3.4-1/png/png.c ****          return;
 9495              		.loc 1 3200 10 is_stmt 1 view .LVU2655
3200:fltk-1.3.4-1/png/png.c ****          return;
 9496              		.loc 1 3200 17 is_stmt 0 view .LVU2656
 9497 00cb C60100   		movb	$0, (%rcx)
3201:fltk-1.3.4-1/png/png.c ****       }
 9498              		.loc 1 3201 10 is_stmt 1 view .LVU2657
 9499              	.LBE502:
 9500              	.LBE497:
3207:fltk-1.3.4-1/png/png.c **** #   endif /* FIXED_POINT */
 9501              		.loc 1 3207 1 is_stmt 0 view .LVU2658
 9502 00ce 488B4424 		movq	24(%rsp), %rax
 9502      18
 9503 00d3 64483304 		xorq	%fs:40, %rax
 9503      25280000 
 9503      00
 9504 00dc 0F85C400 		jne	.L1010
 9504      0000
 9505 00e2 4883C420 		addq	$32, %rsp
 9506              		.cfi_remember_state
 9507              		.cfi_def_cfa_offset 16
 9508 00e6 5B       		popq	%rbx
 9509              		.cfi_def_cfa_offset 8
 9510 00e7 C3       		ret
 9511              	.LVL883:
 9512 00e8 0F1F8400 		.p2align 4,,10
 9512      00000000 
 9513              		.p2align 3
 9514              	.L977:
 9515              		.cfi_restore_state
 9516              	.LBB506:
 9517              	.LBB503:
3176:fltk-1.3.4-1/png/png.c ****          {
 9518              		.loc 1 3176 10 is_stmt 1 view .LVU2659
3197:fltk-1.3.4-1/png/png.c **** 
 9519              		.loc 1 3197 13 view .LVU2660
3197:fltk-1.3.4-1/png/png.c **** 
 9520              		.loc 1 3197 22 is_stmt 0 view .LVU2661
 9521 00f0 C60630   		movb	$48, (%rsi)
3197:fltk-1.3.4-1/png/png.c **** 
 9522              		.loc 1 3197 19 view .LVU2662
 9523 00f3 488D4E01 		leaq	1(%rsi), %rcx
 9524              	.LVL884:
3197:fltk-1.3.4-1/png/png.c **** 
 9525              		.loc 1 3197 19 view .LVU2663
 9526 00f7 EBD2     		jmp	.L982
 9527              	.LVL885:
 9528 00f9 0F1F8000 		.p2align 4,,10
 9528      000000
 9529              		.p2align 3
 9530              	.L1007:
3197:fltk-1.3.4-1/png/png.c **** 
 9531              		.loc 1 3197 19 view .LVU2664
 9532              	.LBE503:
3153:fltk-1.3.4-1/png/png.c ****       else
 9533              		.loc 1 3153 10 is_stmt 1 view .LVU2665
3153:fltk-1.3.4-1/png/png.c ****       else
 9534              		.loc 1 3153 19 is_stmt 0 view .LVU2666
 9535 0100 C6062D   		movb	$45, (%rsi)
 9536              	.LVL886:
3153:fltk-1.3.4-1/png/png.c ****       else
 9537              		.loc 1 3153 39 view .LVU2667
 9538 0103 F7D9     		negl	%ecx
 9539              	.LVL887:
3157:fltk-1.3.4-1/png/png.c ****       {
 9540              		.loc 1 3157 7 is_stmt 1 view .LVU2668
 9541              	.LBB504:
3162:fltk-1.3.4-1/png/png.c ****          {
 9542              		.loc 1 3162 16 view .LVU2669
 9543              	.LBE504:
3153:fltk-1.3.4-1/png/png.c ****       else
 9544              		.loc 1 3153 16 is_stmt 0 view .LVU2670
 9545 0105 4883C601 		addq	$1, %rsi
 9546              	.LVL888:
3153:fltk-1.3.4-1/png/png.c ****       else
 9547              		.loc 1 3153 16 view .LVU2671
 9548 0109 E923FFFF 		jmp	.L976
 9548      FF
 9549              	.LVL889:
 9550 010e 6690     		.p2align 4,,10
 9551              		.p2align 3
 9552              	.L983:
 9553              	.LBB505:
3183:fltk-1.3.4-1/png/png.c ****             {
 9554              		.loc 1 3183 13 is_stmt 1 view .LVU2672
3183:fltk-1.3.4-1/png/png.c ****             {
 9555              		.loc 1 3183 16 is_stmt 0 view .LVU2673
 9556 0110 4183F805 		cmpl	$5, %r8d
 9557 0114 777C     		ja	.L993
 9558              	.LBB500:
3185:fltk-1.3.4-1/png/png.c ****                *ascii++ = 46; /* decimal point */
 9559              		.loc 1 3185 16 is_stmt 1 view .LVU2674
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9560              		.loc 1 3186 16 view .LVU2675
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9561              		.loc 1 3186 25 is_stmt 0 view .LVU2676
 9562 0116 C6062E   		movb	$46, (%rsi)
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9563              		.loc 1 3186 22 view .LVU2677
 9564 0119 488D4601 		leaq	1(%rsi), %rax
 9565              	.LVL890:
3190:fltk-1.3.4-1/png/png.c ****                while (ndigits < i) *ascii++ = 48, --i;
 9566              		.loc 1 3190 16 is_stmt 1 view .LVU2678
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9567              		.loc 1 3191 16 view .LVU2679
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9568              		.loc 1 3191 22 view .LVU2680
 9569 011d 4183FA05 		cmpl	$5, %r10d
 9570 0121 742C     		je	.L989
 9571 0123 BF040000 		movl	$4, %edi
 9571      00
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9572              		.loc 1 3186 22 is_stmt 0 view .LVU2681
 9573 0128 4889C2   		movq	%rax, %rdx
 9574              	.LVL891:
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9575              		.loc 1 3186 22 view .LVU2682
 9576 012b 4429D7   		subl	%r10d, %edi
 9577 012e 488D4C3E 		leaq	2(%rsi,%rdi), %rcx
 9577      02
 9578              	.LVL892:
 9579              		.p2align 4,,10
 9580 0133 0F1F4400 		.p2align 3
 9580      00
 9581              	.L987:
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9582              		.loc 1 3191 36 is_stmt 1 discriminator 2 view .LVU2683
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9583              		.loc 1 3191 42 is_stmt 0 discriminator 2 view .LVU2684
 9584 0138 4883C201 		addq	$1, %rdx
 9585              	.LVL893:
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9586              		.loc 1 3191 45 discriminator 2 view .LVU2685
 9587 013c C642FF30 		movb	$48, -1(%rdx)
 9588              	.LVL894:
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9589              		.loc 1 3191 22 is_stmt 1 discriminator 2 view .LVU2686
 9590 0140 4839CA   		cmpq	%rcx, %rdx
 9591 0143 75F3     		jne	.L987
 9592 0145 488D4438 		leaq	1(%rax,%rdi), %rax
 9592      01
 9593              	.LVL895:
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9594              		.loc 1 3192 22 view .LVU2687
 9595 014a 4539D0   		cmpl	%r10d, %r8d
 9596 014d 773B     		ja	.L994
 9597              	.LVL896:
 9598              	.L989:
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9599              		.loc 1 3192 22 is_stmt 0 view .LVU2688
 9600 014f 4489D2   		movl	%r10d, %edx
 9601 0152 4529C2   		subl	%r8d, %r10d
 9602              	.LVL897:
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9603              		.loc 1 3192 22 view .LVU2689
 9604 0155 488D5414 		leaq	14(%rsp,%rdx), %rdx
 9604      0E
 9605              	.LVL898:
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9606              		.loc 1 3192 22 view .LVU2690
 9607 015a 4A8D4C10 		leaq	1(%rax,%r10), %rcx
 9607      01
 9608 015f 90       		.p2align 4,,10
 9609              		.p2align 3
 9610              	.L988:
 9611              	.LVL899:
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9612              		.loc 1 3192 41 is_stmt 1 discriminator 2 view .LVU2691
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9613              		.loc 1 3192 50 is_stmt 0 discriminator 2 view .LVU2692
 9614 0160 0FB672FF 		movzbl	-1(%rdx), %esi
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9615              		.loc 1 3192 47 discriminator 2 view .LVU2693
 9616 0164 4883C001 		addq	$1, %rax
 9617              	.LVL900:
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9618              		.loc 1 3192 47 discriminator 2 view .LVU2694
 9619 0168 4883EA01 		subq	$1, %rdx
 9620              	.LVL901:
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9621              		.loc 1 3192 50 discriminator 2 view .LVU2695
 9622 016c 408870FF 		movb	%sil, -1(%rax)
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9623              		.loc 1 3192 22 is_stmt 1 discriminator 2 view .LVU2696
 9624 0170 4839C8   		cmpq	%rcx, %rax
 9625 0173 75EB     		jne	.L988
 9626 0175 E951FFFF 		jmp	.L982
 9626      FF
 9627              	.LVL902:
 9628              	.L1009:
3185:fltk-1.3.4-1/png/png.c ****                *ascii++ = 46; /* decimal point */
 9629              		.loc 1 3185 16 view .LVU2697
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9630              		.loc 1 3186 16 view .LVU2698
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9631              		.loc 1 3186 25 is_stmt 0 view .LVU2699
 9632 017a C6012E   		movb	$46, (%rcx)
3186:fltk-1.3.4-1/png/png.c ****                /* ndigits may be <5 for small numbers, output leading zeros
 9633              		.loc 1 3186 22 view .LVU2700
 9634 017d 488D4406 		leaq	2(%rsi,%rax), %rax
 9634      02
 9635              	.LVL903:
3190:fltk-1.3.4-1/png/png.c ****                while (ndigits < i) *ascii++ = 48, --i;
 9636              		.loc 1 3190 16 is_stmt 1 view .LVU2701
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9637              		.loc 1 3191 16 view .LVU2702
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9638              		.loc 1 3191 22 view .LVU2703
3192:fltk-1.3.4-1/png/png.c ****                /* Don't output the trailing zeros! */
 9639              		.loc 1 3192 22 view .LVU2704
 9640              	.LBE500:
3178:fltk-1.3.4-1/png/png.c ****             /* The remaining digits are fractional digits, ndigits is '5' or
 9641              		.loc 1 3178 42 is_stmt 0 view .LVU2705
 9642 0182 41BA0500 		movl	$5, %r10d
 9642      0000
 9643 0188 EBC5     		jmp	.L989
 9644              	.LVL904:
 9645              	.L994:
 9646              	.LBB501:
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9647              		.loc 1 3191 42 view .LVU2706
 9648 018a 4889C1   		movq	%rax, %rcx
 9649 018d E939FFFF 		jmp	.L982
 9649      FF
 9650              	.LVL905:
 9651              	.L993:
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9652              		.loc 1 3191 42 view .LVU2707
 9653 0192 4889F1   		movq	%rsi, %rcx
 9654 0195 E931FFFF 		jmp	.L982
 9654      FF
 9655              	.LVL906:
 9656              	.L974:
3191:fltk-1.3.4-1/png/png.c ****                while (ndigits >= first) *ascii++ = digits[--ndigits];
 9657              		.loc 1 3191 42 view .LVU2708
 9658              	.LBE501:
 9659              	.LBE505:
 9660              	.LBE506:
3206:fltk-1.3.4-1/png/png.c **** }
 9661              		.loc 1 3206 4 is_stmt 1 view .LVU2709
 9662 019a 488D3500 		leaq	.LC86(%rip), %rsi
 9662      000000
 9663              	.LVL907:
3206:fltk-1.3.4-1/png/png.c **** }
 9664              		.loc 1 3206 4 is_stmt 0 view .LVU2710
 9665 01a1 E8000000 		call	png_error@PLT
 9665      00
 9666              	.LVL908:
 9667              	.L1010:
3207:fltk-1.3.4-1/png/png.c **** #   endif /* FIXED_POINT */
 9668              		.loc 1 3207 1 view .LVU2711
 9669 01a6 E8000000 		call	__stack_chk_fail@PLT
 9669      00
 9670              	.LVL909:
3207:fltk-1.3.4-1/png/png.c **** #   endif /* FIXED_POINT */
 9671              		.loc 1 3207 1 view .LVU2712
 9672              		.cfi_endproc
 9673              	.LFE101:
 9675              		.section	.text.png_fixed,"ax",@progbits
 9676              		.p2align 4
 9677              		.globl	png_fixed
 9679              	png_fixed:
 9680              	.LVL910:
 9681              	.LFB102:
3220:fltk-1.3.4-1/png/png.c ****    double r = floor(100000 * fp + .5);
 9682              		.loc 1 3220 1 is_stmt 1 view -0
 9683              		.cfi_startproc
3220:fltk-1.3.4-1/png/png.c ****    double r = floor(100000 * fp + .5);
 9684              		.loc 1 3220 1 is_stmt 0 view .LVU2714
 9685 0000 F30F1EFA 		endbr64
3221:fltk-1.3.4-1/png/png.c **** 
 9686              		.loc 1 3221 4 is_stmt 1 view .LVU2715
3221:fltk-1.3.4-1/png/png.c **** 
 9687              		.loc 1 3221 28 is_stmt 0 view .LVU2716
 9688 0004 F20F5905 		mulsd	.LC87(%rip), %xmm0
 9688      00000000 
 9689              	.LVL911:
3221:fltk-1.3.4-1/png/png.c **** 
 9690              		.loc 1 3221 15 view .LVU2717
 9691 000c F20F1015 		movsd	.LC8(%rip), %xmm2
 9691      00000000 
 9692 0014 F20F5805 		addsd	.LC6(%rip), %xmm0
 9692      00000000 
 9693 001c F20F101D 		movsd	.LC7(%rip), %xmm3
 9693      00000000 
 9694 0024 660F28C8 		movapd	%xmm0, %xmm1
 9695 0028 660F54CA 		andpd	%xmm2, %xmm1
 9696 002c 660F2ED9 		ucomisd	%xmm1, %xmm3
 9697 0030 7633     		jbe	.L1012
 9698 0032 F2480F2C 		cvttsd2siq	%xmm0, %rax
 9698      C0
 9699 0037 660FEFC9 		pxor	%xmm1, %xmm1
 9700 003b F20F1025 		movsd	.LC1(%rip), %xmm4
 9700      00000000 
 9701 0043 660F55D0 		andnpd	%xmm0, %xmm2
 9702 0047 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 9702      C8
 9703 004c 660F28D9 		movapd	%xmm1, %xmm3
 9704 0050 F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 9704      06
 9705 0055 660F28C2 		movapd	%xmm2, %xmm0
 9706 0059 660F54DC 		andpd	%xmm4, %xmm3
 9707 005d F20F5CCB 		subsd	%xmm3, %xmm1
 9708 0061 660F56C1 		orpd	%xmm1, %xmm0
 9709              	.L1012:
 9710              	.LVL912:
3223:fltk-1.3.4-1/png/png.c ****       png_fixed_error(png_ptr, text);
 9711              		.loc 1 3223 4 is_stmt 1 view .LVU2718
3223:fltk-1.3.4-1/png/png.c ****       png_fixed_error(png_ptr, text);
 9712              		.loc 1 3223 7 is_stmt 0 view .LVU2719
 9713 0065 660F2F05 		comisd	.LC13(%rip), %xmm0
 9713      00000000 
 9714 006d 7713     		ja	.L1013
3223:fltk-1.3.4-1/png/png.c ****       png_fixed_error(png_ptr, text);
 9715              		.loc 1 3223 24 discriminator 1 view .LVU2720
 9716 006f F20F100D 		movsd	.LC14(%rip), %xmm1
 9716      00000000 
 9717 0077 660F2FC8 		comisd	%xmm0, %xmm1
 9718 007b 7705     		ja	.L1013
3230:fltk-1.3.4-1/png/png.c **** }
 9719              		.loc 1 3230 4 is_stmt 1 view .LVU2721
3230:fltk-1.3.4-1/png/png.c **** }
 9720              		.loc 1 3230 11 is_stmt 0 view .LVU2722
 9721 007d F20F2CC0 		cvttsd2sil	%xmm0, %eax
3231:fltk-1.3.4-1/png/png.c **** #endif
 9722              		.loc 1 3231 1 view .LVU2723
 9723 0081 C3       		ret
 9724              	.L1013:
3224:fltk-1.3.4-1/png/png.c **** 
 9725              		.loc 1 3224 7 is_stmt 1 view .LVU2724
3220:fltk-1.3.4-1/png/png.c ****    double r = floor(100000 * fp + .5);
 9726              		.loc 1 3220 1 is_stmt 0 view .LVU2725
 9727 0082 50       		pushq	%rax
 9728              		.cfi_def_cfa_offset 16
3224:fltk-1.3.4-1/png/png.c **** 
 9729              		.loc 1 3224 7 view .LVU2726
 9730 0083 E8000000 		call	png_fixed_error@PLT
 9730      00
 9731              	.LVL913:
3224:fltk-1.3.4-1/png/png.c **** 
 9732              		.loc 1 3224 7 view .LVU2727
 9733              		.cfi_endproc
 9734              	.LFE102:
 9736              		.section	.text.png_muldiv,"ax",@progbits
 9737              		.p2align 4
 9738              		.globl	png_muldiv
 9740              	png_muldiv:
 9741              	.LVL914:
 9742              	.LFB103:
3245:fltk-1.3.4-1/png/png.c ****    /* Return a * times / divisor, rounded. */
 9743              		.loc 1 3245 1 is_stmt 1 view -0
 9744              		.cfi_startproc
3245:fltk-1.3.4-1/png/png.c ****    /* Return a * times / divisor, rounded. */
 9745              		.loc 1 3245 1 is_stmt 0 view .LVU2729
 9746 0000 F30F1EFA 		endbr64
3247:fltk-1.3.4-1/png/png.c ****    {
 9747              		.loc 1 3247 4 is_stmt 1 view .LVU2730
3245:fltk-1.3.4-1/png/png.c ****    /* Return a * times / divisor, rounded. */
 9748              		.loc 1 3245 1 is_stmt 0 view .LVU2731
 9749 0004 89C8     		movl	%ecx, %eax
3247:fltk-1.3.4-1/png/png.c ****    {
 9750              		.loc 1 3247 7 view .LVU2732
 9751 0006 85C9     		testl	%ecx, %ecx
 9752 0008 7416     		je	.L1020
3249:fltk-1.3.4-1/png/png.c ****       {
 9753              		.loc 1 3249 7 is_stmt 1 view .LVU2733
3249:fltk-1.3.4-1/png/png.c ****       {
 9754              		.loc 1 3249 10 is_stmt 0 view .LVU2734
 9755 000a 85F6     		testl	%esi, %esi
 9756 000c 741A     		je	.L1023
 9757 000e 85D2     		testl	%edx, %edx
 9758 0010 7416     		je	.L1023
 9759 0012 E9000000 		jmp	png_muldiv.part.0
 9759      00
 9760              	.LVL915:
 9761 0017 660F1F84 		.p2align 4,,10
 9761      00000000 
 9761      00
 9762              		.p2align 3
 9763              	.L1020:
3355:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA || INCH_CONVERSIONS */
 9764              		.loc 1 3355 1 view .LVU2735
 9765 0020 C3       		ret
 9766              		.p2align 4,,10
 9767 0021 0F1F8000 		.p2align 3
 9767      000000
 9768              	.L1023:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 9769              		.loc 1 3251 10 is_stmt 1 view .LVU2736
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 9770              		.loc 1 3251 15 is_stmt 0 view .LVU2737
 9771 0028 C7070000 		movl	$0, (%rdi)
 9771      0000
3252:fltk-1.3.4-1/png/png.c ****       }
 9772              		.loc 1 3252 10 is_stmt 1 view .LVU2738
3252:fltk-1.3.4-1/png/png.c ****       }
 9773              		.loc 1 3252 17 is_stmt 0 view .LVU2739
 9774 002e B8010000 		movl	$1, %eax
 9774      00
 9775              	.LVL916:
3252:fltk-1.3.4-1/png/png.c ****       }
 9776              		.loc 1 3252 17 view .LVU2740
 9777 0033 C3       		ret
 9778              		.cfi_endproc
 9779              	.LFE103:
 9781              		.section	.rodata.png_muldiv_warn.str1.1,"aMS",@progbits,1
 9782              	.LC88:
 9783 0000 66697865 		.string	"fixed point overflow ignored"
 9783      6420706F 
 9783      696E7420 
 9783      6F766572 
 9783      666C6F77 
 9784              		.section	.text.png_muldiv_warn,"ax",@progbits
 9785              		.p2align 4
 9786              		.globl	png_muldiv_warn
 9788              	png_muldiv_warn:
 9789              	.LVL917:
 9790              	.LFB104:
3365:fltk-1.3.4-1/png/png.c ****    png_fixed_point result;
 9791              		.loc 1 3365 1 is_stmt 1 view -0
 9792              		.cfi_startproc
3365:fltk-1.3.4-1/png/png.c ****    png_fixed_point result;
 9793              		.loc 1 3365 1 is_stmt 0 view .LVU2742
 9794 0000 F30F1EFA 		endbr64
 9795 0004 4154     		pushq	%r12
 9796              		.cfi_def_cfa_offset 16
 9797              		.cfi_offset 12, -16
 9798 0006 4989F8   		movq	%rdi, %r8
 9799 0009 4883EC10 		subq	$16, %rsp
 9800              		.cfi_def_cfa_offset 32
3365:fltk-1.3.4-1/png/png.c ****    png_fixed_point result;
 9801              		.loc 1 3365 1 view .LVU2743
 9802 000d 64488B04 		movq	%fs:40, %rax
 9802      25280000 
 9802      00
 9803 0016 48894424 		movq	%rax, 8(%rsp)
 9803      08
 9804 001b 31C0     		xorl	%eax, %eax
3366:fltk-1.3.4-1/png/png.c **** 
 9805              		.loc 1 3366 4 is_stmt 1 view .LVU2744
3368:fltk-1.3.4-1/png/png.c ****       return result;
 9806              		.loc 1 3368 4 view .LVU2745
3368:fltk-1.3.4-1/png/png.c ****       return result;
 9807              		.loc 1 3368 8 is_stmt 0 view .LVU2746
 9808 001d 488D7C24 		leaq	4(%rsp), %rdi
 9808      04
 9809              	.LVL918:
3368:fltk-1.3.4-1/png/png.c ****       return result;
 9810              		.loc 1 3368 8 view .LVU2747
 9811 0022 E8000000 		call	png_muldiv
 9811      00
 9812              	.LVL919:
3368:fltk-1.3.4-1/png/png.c ****       return result;
 9813              		.loc 1 3368 7 view .LVU2748
 9814 0027 85C0     		testl	%eax, %eax
 9815 0029 7425     		je	.L1028
3369:fltk-1.3.4-1/png/png.c **** 
 9816              		.loc 1 3369 7 is_stmt 1 view .LVU2749
3369:fltk-1.3.4-1/png/png.c **** 
 9817              		.loc 1 3369 14 is_stmt 0 view .LVU2750
 9818 002b 448B6424 		movl	4(%rsp), %r12d
 9818      04
 9819              	.LVL920:
 9820              	.L1027:
3373:fltk-1.3.4-1/png/png.c **** #endif
 9821              		.loc 1 3373 1 view .LVU2751
 9822 0030 488B4424 		movq	8(%rsp), %rax
 9822      08
 9823 0035 64483304 		xorq	%fs:40, %rax
 9823      25280000 
 9823      00
 9824 003e 7524     		jne	.L1032
 9825 0040 4883C410 		addq	$16, %rsp
 9826              		.cfi_remember_state
 9827              		.cfi_def_cfa_offset 16
 9828 0044 4489E0   		movl	%r12d, %eax
 9829 0047 415C     		popq	%r12
 9830              		.cfi_def_cfa_offset 8
 9831 0049 C3       		ret
 9832              	.LVL921:
 9833 004a 660F1F44 		.p2align 4,,10
 9833      0000
 9834              		.p2align 3
 9835              	.L1028:
 9836              		.cfi_restore_state
3371:fltk-1.3.4-1/png/png.c ****    return 0;
 9837              		.loc 1 3371 4 view .LVU2752
 9838 0050 488D3500 		leaq	.LC88(%rip), %rsi
 9838      000000
 9839              	.LVL922:
3371:fltk-1.3.4-1/png/png.c ****    return 0;
 9840              		.loc 1 3371 4 view .LVU2753
 9841 0057 4C89C7   		movq	%r8, %rdi
 9842 005a 4189C4   		movl	%eax, %r12d
3371:fltk-1.3.4-1/png/png.c ****    return 0;
 9843              		.loc 1 3371 4 is_stmt 1 view .LVU2754
 9844 005d E8000000 		call	png_warning@PLT
 9844      00
 9845              	.LVL923:
3372:fltk-1.3.4-1/png/png.c **** }
 9846              		.loc 1 3372 4 view .LVU2755
3372:fltk-1.3.4-1/png/png.c **** }
 9847              		.loc 1 3372 11 is_stmt 0 view .LVU2756
 9848 0062 EBCC     		jmp	.L1027
 9849              	.L1032:
3373:fltk-1.3.4-1/png/png.c **** #endif
 9850              		.loc 1 3373 1 view .LVU2757
 9851 0064 E8000000 		call	__stack_chk_fail@PLT
 9851      00
 9852              	.LVL924:
 9853              		.cfi_endproc
 9854              	.LFE104:
 9856              		.section	.text.png_reciprocal,"ax",@progbits
 9857              		.p2align 4
 9858              		.globl	png_reciprocal
 9860              	png_reciprocal:
 9861              	.LVL925:
 9862              	.LFB105:
3380:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 9863              		.loc 1 3380 1 is_stmt 1 view -0
 9864              		.cfi_startproc
3380:fltk-1.3.4-1/png/png.c **** #ifdef PNG_FLOATING_ARITHMETIC_SUPPORTED
 9865              		.loc 1 3380 1 is_stmt 0 view .LVU2759
 9866 0000 F30F1EFA 		endbr64
3382:fltk-1.3.4-1/png/png.c **** 
 9867              		.loc 1 3382 4 is_stmt 1 view .LVU2760
3382:fltk-1.3.4-1/png/png.c **** 
 9868              		.loc 1 3382 25 is_stmt 0 view .LVU2761
 9869 0004 660FEFC9 		pxor	%xmm1, %xmm1
 9870 0008 F20F1005 		movsd	.LC89(%rip), %xmm0
 9870      00000000 
3382:fltk-1.3.4-1/png/png.c **** 
 9871              		.loc 1 3382 15 view .LVU2762
 9872 0010 F20F1015 		movsd	.LC8(%rip), %xmm2
 9872      00000000 
3382:fltk-1.3.4-1/png/png.c **** 
 9873              		.loc 1 3382 25 view .LVU2763
 9874 0018 F20F2ACF 		cvtsi2sdl	%edi, %xmm1
3382:fltk-1.3.4-1/png/png.c **** 
 9875              		.loc 1 3382 15 view .LVU2764
 9876 001c F20F101D 		movsd	.LC7(%rip), %xmm3
 9876      00000000 
3382:fltk-1.3.4-1/png/png.c **** 
 9877              		.loc 1 3382 25 view .LVU2765
 9878 0024 F20F5EC1 		divsd	%xmm1, %xmm0
3382:fltk-1.3.4-1/png/png.c **** 
 9879              		.loc 1 3382 15 view .LVU2766
 9880 0028 F20F5805 		addsd	.LC6(%rip), %xmm0
 9880      00000000 
 9881 0030 660F28C8 		movapd	%xmm0, %xmm1
 9882 0034 660F54CA 		andpd	%xmm2, %xmm1
 9883 0038 660F2ED9 		ucomisd	%xmm1, %xmm3
 9884 003c 7633     		jbe	.L1034
 9885 003e F2480F2C 		cvttsd2siq	%xmm0, %rax
 9885      C0
 9886 0043 660FEFC9 		pxor	%xmm1, %xmm1
 9887 0047 F20F1025 		movsd	.LC1(%rip), %xmm4
 9887      00000000 
 9888 004f 660F55D0 		andnpd	%xmm0, %xmm2
 9889 0053 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 9889      C8
 9890 0058 660F28D9 		movapd	%xmm1, %xmm3
 9891 005c F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 9891      06
 9892 0061 660F28C2 		movapd	%xmm2, %xmm0
 9893 0065 660F54DC 		andpd	%xmm4, %xmm3
 9894 0069 F20F5CCB 		subsd	%xmm3, %xmm1
 9895 006d 660F56C1 		orpd	%xmm1, %xmm0
 9896              	.L1034:
 9897              	.LVL926:
3384:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 9898              		.loc 1 3384 4 is_stmt 1 view .LVU2767
3384:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 9899              		.loc 1 3384 7 is_stmt 0 view .LVU2768
 9900 0071 F20F100D 		movsd	.LC13(%rip), %xmm1
 9900      00000000 
 9901 0079 660F2FC8 		comisd	%xmm0, %xmm1
 9902 007d 720A     		jb	.L1043
3384:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 9903              		.loc 1 3384 25 discriminator 1 view .LVU2769
 9904 007f 660F2F05 		comisd	.LC14(%rip), %xmm0
 9904      00000000 
 9905 0087 7307     		jnb	.L1044
 9906              	.L1043:
3393:fltk-1.3.4-1/png/png.c **** }
 9907              		.loc 1 3393 11 view .LVU2770
 9908 0089 31C0     		xorl	%eax, %eax
3394:fltk-1.3.4-1/png/png.c **** 
 9909              		.loc 1 3394 1 view .LVU2771
 9910 008b C3       		ret
 9911 008c 0F1F4000 		.p2align 4,,10
 9912              		.p2align 3
 9913              	.L1044:
3385:fltk-1.3.4-1/png/png.c **** #else
 9914              		.loc 1 3385 7 is_stmt 1 view .LVU2772
3385:fltk-1.3.4-1/png/png.c **** #else
 9915              		.loc 1 3385 14 is_stmt 0 view .LVU2773
 9916 0090 F20F2CC0 		cvttsd2sil	%xmm0, %eax
 9917 0094 C3       		ret
 9918              		.cfi_endproc
 9919              	.LFE105:
 9921              		.section	.text.png_XYZ_from_xy,"ax",@progbits
 9922              		.p2align 4
 9924              	png_XYZ_from_xy:
 9925              	.LVL927:
 9926              	.LFB74:
1237:fltk-1.3.4-1/png/png.c ****    png_fixed_point red_inverse, green_inverse, blue_scale;
 9927              		.loc 1 1237 1 is_stmt 1 view -0
 9928              		.cfi_startproc
1237:fltk-1.3.4-1/png/png.c ****    png_fixed_point red_inverse, green_inverse, blue_scale;
 9929              		.loc 1 1237 1 is_stmt 0 view .LVU2775
 9930 0000 55       		pushq	%rbp
 9931              		.cfi_def_cfa_offset 16
 9932              		.cfi_offset 6, -16
 9933 0001 53       		pushq	%rbx
 9934              		.cfi_def_cfa_offset 24
 9935              		.cfi_offset 3, -24
 9936 0002 4883EC28 		subq	$40, %rsp
 9937              		.cfi_def_cfa_offset 64
1245:fltk-1.3.4-1/png/png.c ****    if (xy->redy < 0 || xy->redy > PNG_FP_1-xy->redx) return 1;
 9938              		.loc 1 1245 10 view .LVU2776
 9939 0006 8B16     		movl	(%rsi), %edx
1237:fltk-1.3.4-1/png/png.c ****    png_fixed_point red_inverse, green_inverse, blue_scale;
 9940              		.loc 1 1237 1 view .LVU2777
 9941 0008 64488B04 		movq	%fs:40, %rax
 9941      25280000 
 9941      00
 9942 0011 48894424 		movq	%rax, 24(%rsp)
 9942      18
 9943 0016 31C0     		xorl	%eax, %eax
1238:fltk-1.3.4-1/png/png.c ****    png_fixed_point left, right, denominator;
 9944              		.loc 1 1238 4 is_stmt 1 view .LVU2778
1239:fltk-1.3.4-1/png/png.c **** 
 9945              		.loc 1 1239 4 view .LVU2779
1245:fltk-1.3.4-1/png/png.c ****    if (xy->redy < 0 || xy->redy > PNG_FP_1-xy->redx) return 1;
 9946              		.loc 1 1245 4 view .LVU2780
1245:fltk-1.3.4-1/png/png.c ****    if (xy->redy < 0 || xy->redy > PNG_FP_1-xy->redx) return 1;
 9947              		.loc 1 1245 7 is_stmt 0 view .LVU2781
 9948 0018 81FAA086 		cmpl	$100000, %edx
 9948      0100
 9949 001e 0F871C04 		ja	.L1048
 9949      0000
1246:fltk-1.3.4-1/png/png.c ****    if (xy->greenx < 0 || xy->greenx > PNG_FP_1) return 1;
 9950              		.loc 1 1246 10 view .LVU2782
 9951 0024 8B4604   		movl	4(%rsi), %eax
 9952 0027 4989F0   		movq	%rsi, %r8
1246:fltk-1.3.4-1/png/png.c ****    if (xy->greenx < 0 || xy->greenx > PNG_FP_1) return 1;
 9953              		.loc 1 1246 4 is_stmt 1 view .LVU2783
1246:fltk-1.3.4-1/png/png.c ****    if (xy->greenx < 0 || xy->greenx > PNG_FP_1) return 1;
 9954              		.loc 1 1246 7 is_stmt 0 view .LVU2784
 9955 002a 85C0     		testl	%eax, %eax
 9956 002c 0F880E04 		js	.L1048
 9956      0000
1246:fltk-1.3.4-1/png/png.c ****    if (xy->greenx < 0 || xy->greenx > PNG_FP_1) return 1;
 9957              		.loc 1 1246 43 discriminator 2 view .LVU2785
 9958 0032 B9A08601 		movl	$100000, %ecx
 9958      00
 9959 0037 89CE     		movl	%ecx, %esi
 9960              	.LVL928:
1246:fltk-1.3.4-1/png/png.c ****    if (xy->greenx < 0 || xy->greenx > PNG_FP_1) return 1;
 9961              		.loc 1 1246 43 discriminator 2 view .LVU2786
 9962 0039 29D6     		subl	%edx, %esi
1246:fltk-1.3.4-1/png/png.c ****    if (xy->greenx < 0 || xy->greenx > PNG_FP_1) return 1;
 9963              		.loc 1 1246 21 discriminator 2 view .LVU2787
 9964 003b 39F0     		cmpl	%esi, %eax
 9965 003d 0F8FFD03 		jg	.L1048
 9965      0000
1247:fltk-1.3.4-1/png/png.c ****    if (xy->greeny < 0 || xy->greeny > PNG_FP_1-xy->greenx) return 1;
 9966              		.loc 1 1247 4 is_stmt 1 view .LVU2788
1247:fltk-1.3.4-1/png/png.c ****    if (xy->greeny < 0 || xy->greeny > PNG_FP_1-xy->greenx) return 1;
 9967              		.loc 1 1247 10 is_stmt 0 view .LVU2789
 9968 0043 418B7008 		movl	8(%r8), %esi
1247:fltk-1.3.4-1/png/png.c ****    if (xy->greeny < 0 || xy->greeny > PNG_FP_1-xy->greenx) return 1;
 9969              		.loc 1 1247 7 view .LVU2790
 9970 0047 81FEA086 		cmpl	$100000, %esi
 9970      0100
 9971 004d 0F87ED03 		ja	.L1048
 9971      0000
 9972 0053 4989F9   		movq	%rdi, %r9
1248:fltk-1.3.4-1/png/png.c ****    if (xy->bluex < 0 || xy->bluex > PNG_FP_1) return 1;
 9973              		.loc 1 1248 4 is_stmt 1 view .LVU2791
1248:fltk-1.3.4-1/png/png.c ****    if (xy->bluex < 0 || xy->bluex > PNG_FP_1) return 1;
 9974              		.loc 1 1248 10 is_stmt 0 view .LVU2792
 9975 0056 418B780C 		movl	12(%r8), %edi
 9976              	.LVL929:
1248:fltk-1.3.4-1/png/png.c ****    if (xy->bluex < 0 || xy->bluex > PNG_FP_1) return 1;
 9977              		.loc 1 1248 7 view .LVU2793
 9978 005a 85FF     		testl	%edi, %edi
 9979 005c 0F88DE03 		js	.L1048
 9979      0000
1248:fltk-1.3.4-1/png/png.c ****    if (xy->bluex < 0 || xy->bluex > PNG_FP_1) return 1;
 9980              		.loc 1 1248 47 discriminator 2 view .LVU2794
 9981 0062 4189CA   		movl	%ecx, %r10d
 9982 0065 4129F2   		subl	%esi, %r10d
1248:fltk-1.3.4-1/png/png.c ****    if (xy->bluex < 0 || xy->bluex > PNG_FP_1) return 1;
 9983              		.loc 1 1248 23 discriminator 2 view .LVU2795
 9984 0068 4439D7   		cmpl	%r10d, %edi
 9985 006b 0F8FCF03 		jg	.L1048
 9985      0000
1249:fltk-1.3.4-1/png/png.c ****    if (xy->bluey < 0 || xy->bluey > PNG_FP_1-xy->bluex) return 1;
 9986              		.loc 1 1249 4 is_stmt 1 view .LVU2796
1249:fltk-1.3.4-1/png/png.c ****    if (xy->bluey < 0 || xy->bluey > PNG_FP_1-xy->bluex) return 1;
 9987              		.loc 1 1249 10 is_stmt 0 view .LVU2797
 9988 0071 458B5010 		movl	16(%r8), %r10d
1249:fltk-1.3.4-1/png/png.c ****    if (xy->bluey < 0 || xy->bluey > PNG_FP_1-xy->bluex) return 1;
 9989              		.loc 1 1249 7 view .LVU2798
 9990 0075 4181FAA0 		cmpl	$100000, %r10d
 9990      860100
 9991 007c 0F87BE03 		ja	.L1048
 9991      0000
1250:fltk-1.3.4-1/png/png.c ****    if (xy->whitex < 0 || xy->whitex > PNG_FP_1) return 1;
 9992              		.loc 1 1250 4 is_stmt 1 view .LVU2799
1250:fltk-1.3.4-1/png/png.c ****    if (xy->whitex < 0 || xy->whitex > PNG_FP_1) return 1;
 9993              		.loc 1 1250 10 is_stmt 0 view .LVU2800
 9994 0082 458B5814 		movl	20(%r8), %r11d
1250:fltk-1.3.4-1/png/png.c ****    if (xy->whitex < 0 || xy->whitex > PNG_FP_1) return 1;
 9995              		.loc 1 1250 7 view .LVU2801
 9996 0086 4585DB   		testl	%r11d, %r11d
 9997 0089 0F88B103 		js	.L1048
 9997      0000
1250:fltk-1.3.4-1/png/png.c ****    if (xy->whitex < 0 || xy->whitex > PNG_FP_1) return 1;
 9998              		.loc 1 1250 45 discriminator 2 view .LVU2802
 9999 008f 4429D1   		subl	%r10d, %ecx
1250:fltk-1.3.4-1/png/png.c ****    if (xy->whitex < 0 || xy->whitex > PNG_FP_1) return 1;
 10000              		.loc 1 1250 22 discriminator 2 view .LVU2803
 10001 0092 4139CB   		cmpl	%ecx, %r11d
 10002 0095 0F8FA503 		jg	.L1048
 10002      0000
1251:fltk-1.3.4-1/png/png.c ****    if (xy->whitey < 0 || xy->whitey > PNG_FP_1-xy->whitex) return 1;
 10003              		.loc 1 1251 4 is_stmt 1 view .LVU2804
1251:fltk-1.3.4-1/png/png.c ****    if (xy->whitey < 0 || xy->whitey > PNG_FP_1-xy->whitex) return 1;
 10004              		.loc 1 1251 10 is_stmt 0 view .LVU2805
 10005 009b 418B4818 		movl	24(%r8), %ecx
1251:fltk-1.3.4-1/png/png.c ****    if (xy->whitey < 0 || xy->whitey > PNG_FP_1-xy->whitex) return 1;
 10006              		.loc 1 1251 7 view .LVU2806
 10007 009f 81F9A086 		cmpl	$100000, %ecx
 10007      0100
 10008 00a5 0F879503 		ja	.L1048
 10008      0000
1252:fltk-1.3.4-1/png/png.c **** 
 10009              		.loc 1 1252 4 is_stmt 1 view .LVU2807
1252:fltk-1.3.4-1/png/png.c **** 
 10010              		.loc 1 1252 10 is_stmt 0 view .LVU2808
 10011 00ab 418B681C 		movl	28(%r8), %ebp
1252:fltk-1.3.4-1/png/png.c **** 
 10012              		.loc 1 1252 7 view .LVU2809
 10013 00af 85ED     		testl	%ebp, %ebp
 10014 00b1 0F888903 		js	.L1048
 10014      0000
1252:fltk-1.3.4-1/png/png.c **** 
 10015              		.loc 1 1252 47 discriminator 2 view .LVU2810
 10016 00b7 BBA08601 		movl	$100000, %ebx
 10016      00
 10017 00bc 29CB     		subl	%ecx, %ebx
1252:fltk-1.3.4-1/png/png.c **** 
 10018              		.loc 1 1252 23 discriminator 2 view .LVU2811
 10019 00be 39DD     		cmpl	%ebx, %ebp
 10020 00c0 0F8F7A03 		jg	.L1048
 10020      0000
1433:fltk-1.3.4-1/png/png.c ****       return 2;
 10021              		.loc 1 1433 4 is_stmt 1 view .LVU2812
1433:fltk-1.3.4-1/png/png.c ****       return 2;
 10022              		.loc 1 1433 8 is_stmt 0 view .LVU2813
 10023 00c6 4429D6   		subl	%r10d, %esi
 10024              	.LVL930:
 10025              	.LBB507:
 10026              	.LBI507:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10027              		.loc 1 3243 1 is_stmt 1 view .LVU2814
 10028              	.LBB508:
3247:fltk-1.3.4-1/png/png.c ****    {
 10029              		.loc 1 3247 4 view .LVU2815
3249:fltk-1.3.4-1/png/png.c ****       {
 10030              		.loc 1 3249 7 view .LVU2816
3249:fltk-1.3.4-1/png/png.c ****       {
 10031              		.loc 1 3249 10 is_stmt 0 view .LVU2817
 10032 00c9 4429D8   		subl	%r11d, %eax
 10033              	.LVL931:
3249:fltk-1.3.4-1/png/png.c ****       {
 10034              		.loc 1 3249 10 view .LVU2818
 10035 00cc 0F849103 		je	.L1087
 10035      0000
 10036 00d2 85F6     		testl	%esi, %esi
 10037 00d4 0F848903 		je	.L1087
 10037      0000
 10038 00da 488D7C24 		leaq	16(%rsp), %rdi
 10038      10
 10039              	.LVL932:
3249:fltk-1.3.4-1/png/png.c ****       {
 10040              		.loc 1 3249 10 view .LVU2819
 10041 00df B9070000 		movl	$7, %ecx
 10041      00
 10042 00e4 89C2     		movl	%eax, %edx
 10043 00e6 E8000000 		call	png_muldiv.part.0
 10043      00
 10044              	.LVL933:
3249:fltk-1.3.4-1/png/png.c ****       {
 10045              		.loc 1 3249 10 view .LVU2820
 10046              	.LBE508:
 10047              	.LBE507:
1433:fltk-1.3.4-1/png/png.c ****       return 2;
 10048              		.loc 1 1433 7 view .LVU2821
 10049 00eb 85C0     		testl	%eax, %eax
 10050 00ed 0F846903 		je	.L1056
 10050      0000
 10051 00f3 418B10   		movl	(%r8), %edx
 10052 00f6 458B5010 		movl	16(%r8), %r10d
 10053 00fa 418B780C 		movl	12(%r8), %edi
 10054 00fe 458B5814 		movl	20(%r8), %r11d
 10055              	.L1051:
1435:fltk-1.3.4-1/png/png.c ****       return 2;
 10056              		.loc 1 1435 4 is_stmt 1 view .LVU2822
 10057              	.LVL934:
1435:fltk-1.3.4-1/png/png.c ****       return 2;
 10058              		.loc 1 1435 8 is_stmt 0 view .LVU2823
 10059 0102 4429D2   		subl	%r10d, %edx
 10060              	.LVL935:
 10061              	.LBB510:
 10062              	.LBI510:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10063              		.loc 1 3243 1 is_stmt 1 view .LVU2824
 10064              	.LBB511:
3247:fltk-1.3.4-1/png/png.c ****    {
 10065              		.loc 1 3247 4 view .LVU2825
3249:fltk-1.3.4-1/png/png.c ****       {
 10066              		.loc 1 3249 7 view .LVU2826
3249:fltk-1.3.4-1/png/png.c ****       {
 10067              		.loc 1 3249 10 is_stmt 0 view .LVU2827
 10068 0105 4429DF   		subl	%r11d, %edi
 10069              	.LVL936:
3249:fltk-1.3.4-1/png/png.c ****       {
 10070              		.loc 1 3249 10 view .LVU2828
 10071 0108 89FE     		movl	%edi, %esi
 10072 010a 0F846003 		je	.L1088
 10072      0000
 10073 0110 85D2     		testl	%edx, %edx
 10074 0112 0F845803 		je	.L1088
 10074      0000
 10075 0118 488D7C24 		leaq	20(%rsp), %rdi
 10075      14
 10076              	.LVL937:
3249:fltk-1.3.4-1/png/png.c ****       {
 10077              		.loc 1 3249 10 view .LVU2829
 10078 011d B9070000 		movl	$7, %ecx
 10078      00
 10079 0122 E8000000 		call	png_muldiv.part.0
 10079      00
 10080              	.LVL938:
3249:fltk-1.3.4-1/png/png.c ****       {
 10081              		.loc 1 3249 10 view .LVU2830
 10082              	.LBE511:
 10083              	.LBE510:
1435:fltk-1.3.4-1/png/png.c ****       return 2;
 10084              		.loc 1 1435 7 view .LVU2831
 10085 0127 85C0     		testl	%eax, %eax
 10086 0129 0F842D03 		je	.L1056
 10086      0000
 10087 012f 8B6C2414 		movl	20(%rsp), %ebp
 10088 0133 458B5814 		movl	20(%r8), %r11d
 10089 0137 458B5010 		movl	16(%r8), %r10d
 10090              	.L1055:
1437:fltk-1.3.4-1/png/png.c **** 
 10091              		.loc 1 1437 4 is_stmt 1 view .LVU2832
1440:fltk-1.3.4-1/png/png.c ****       return 2;
 10092              		.loc 1 1440 8 is_stmt 0 view .LVU2833
 10093 013b 418B501C 		movl	28(%r8), %edx
 10094              	.LBB513:
 10095              	.LBB514:
3249:fltk-1.3.4-1/png/png.c ****       {
 10096              		.loc 1 3249 10 view .LVU2834
 10097 013f 418B7008 		movl	8(%r8), %esi
 10098              	.LBE514:
 10099              	.LBE513:
1437:fltk-1.3.4-1/png/png.c **** 
 10100              		.loc 1 1437 23 view .LVU2835
 10101 0143 8B5C2410 		movl	16(%rsp), %ebx
 10102              	.LVL939:
1440:fltk-1.3.4-1/png/png.c ****       return 2;
 10103              		.loc 1 1440 4 is_stmt 1 view .LVU2836
1440:fltk-1.3.4-1/png/png.c ****       return 2;
 10104              		.loc 1 1440 8 is_stmt 0 view .LVU2837
 10105 0147 4429DA   		subl	%r11d, %edx
 10106              	.LVL940:
 10107              	.LBB517:
 10108              	.LBI513:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10109              		.loc 1 3243 1 is_stmt 1 view .LVU2838
 10110              	.LBB515:
3247:fltk-1.3.4-1/png/png.c ****    {
 10111              		.loc 1 3247 4 view .LVU2839
3249:fltk-1.3.4-1/png/png.c ****       {
 10112              		.loc 1 3249 7 view .LVU2840
3249:fltk-1.3.4-1/png/png.c ****       {
 10113              		.loc 1 3249 10 is_stmt 0 view .LVU2841
 10114 014a 4429D6   		subl	%r10d, %esi
 10115              	.LVL941:
3249:fltk-1.3.4-1/png/png.c ****       {
 10116              		.loc 1 3249 10 view .LVU2842
 10117 014d 0F842C03 		je	.L1089
 10117      0000
 10118 0153 85D2     		testl	%edx, %edx
 10119 0155 0F842403 		je	.L1089
 10119      0000
 10120 015b 488D7C24 		leaq	16(%rsp), %rdi
 10120      10
 10121              	.LVL942:
3249:fltk-1.3.4-1/png/png.c ****       {
 10122              		.loc 1 3249 10 view .LVU2843
 10123 0160 B9070000 		movl	$7, %ecx
 10123      00
 10124 0165 E8000000 		call	png_muldiv.part.0
 10124      00
 10125              	.LVL943:
3249:fltk-1.3.4-1/png/png.c ****       {
 10126              		.loc 1 3249 10 view .LVU2844
 10127              	.LBE515:
 10128              	.LBE517:
1440:fltk-1.3.4-1/png/png.c ****       return 2;
 10129              		.loc 1 1440 7 view .LVU2845
 10130 016a 85C0     		testl	%eax, %eax
 10131 016c 0F84EA02 		je	.L1056
 10131      0000
 10132 0172 458B5010 		movl	16(%r8), %r10d
 10133 0176 458B5814 		movl	20(%r8), %r11d
 10134              	.L1059:
1442:fltk-1.3.4-1/png/png.c ****       return 2;
 10135              		.loc 1 1442 4 is_stmt 1 view .LVU2846
 10136              	.LVL944:
1442:fltk-1.3.4-1/png/png.c ****       return 2;
 10137              		.loc 1 1442 8 is_stmt 0 view .LVU2847
 10138 017a 418B5018 		movl	24(%r8), %edx
 10139              	.LBB518:
 10140              	.LBB519:
3249:fltk-1.3.4-1/png/png.c ****       {
 10141              		.loc 1 3249 10 view .LVU2848
 10142 017e 418B700C 		movl	12(%r8), %esi
 10143              	.LBE519:
 10144              	.LBE518:
1442:fltk-1.3.4-1/png/png.c ****       return 2;
 10145              		.loc 1 1442 8 view .LVU2849
 10146 0182 4429D2   		subl	%r10d, %edx
 10147              	.LVL945:
 10148              	.LBB522:
 10149              	.LBI518:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10150              		.loc 1 3243 1 is_stmt 1 view .LVU2850
 10151              	.LBB520:
3247:fltk-1.3.4-1/png/png.c ****    {
 10152              		.loc 1 3247 4 view .LVU2851
3249:fltk-1.3.4-1/png/png.c ****       {
 10153              		.loc 1 3249 7 view .LVU2852
3249:fltk-1.3.4-1/png/png.c ****       {
 10154              		.loc 1 3249 10 is_stmt 0 view .LVU2853
 10155 0185 4429DE   		subl	%r11d, %esi
 10156              	.LVL946:
3249:fltk-1.3.4-1/png/png.c ****       {
 10157              		.loc 1 3249 10 view .LVU2854
 10158 0188 0F84FE02 		je	.L1090
 10158      0000
 10159 018e 85D2     		testl	%edx, %edx
 10160 0190 0F84F602 		je	.L1090
 10160      0000
 10161 0196 488D7C24 		leaq	20(%rsp), %rdi
 10161      14
 10162              	.LVL947:
3249:fltk-1.3.4-1/png/png.c ****       {
 10163              		.loc 1 3249 10 view .LVU2855
 10164 019b B9070000 		movl	$7, %ecx
 10164      00
 10165 01a0 E8000000 		call	png_muldiv.part.0
 10165      00
 10166              	.LVL948:
3249:fltk-1.3.4-1/png/png.c ****       {
 10167              		.loc 1 3249 10 view .LVU2856
 10168              	.LBE520:
 10169              	.LBE522:
1442:fltk-1.3.4-1/png/png.c ****       return 2;
 10170              		.loc 1 1442 7 view .LVU2857
 10171 01a5 85C0     		testl	%eax, %eax
 10172 01a7 0F84AF02 		je	.L1056
 10172      0000
 10173 01ad 8B442414 		movl	20(%rsp), %eax
 10174              	.L1062:
1450:fltk-1.3.4-1/png/png.c ****        red_inverse <= xy->whitey /* r+g+b scales = white scale */)
 10175              		.loc 1 1450 8 view .LVU2858
 10176 01b1 8B4C2410 		movl	16(%rsp), %ecx
1437:fltk-1.3.4-1/png/png.c **** 
 10177              		.loc 1 1437 16 view .LVU2859
 10178 01b5 29EB     		subl	%ebp, %ebx
 10179              	.LVL949:
1450:fltk-1.3.4-1/png/png.c ****        red_inverse <= xy->whitey /* r+g+b scales = white scale */)
 10180              		.loc 1 1450 8 view .LVU2860
 10181 01b7 418B701C 		movl	28(%r8), %esi
 10182 01bb 488D7C24 		leaq	8(%rsp), %rdi
 10182      08
 10183 01c0 89DA     		movl	%ebx, %edx
1437:fltk-1.3.4-1/png/png.c **** 
 10184              		.loc 1 1437 16 view .LVU2861
 10185 01c2 4189DA   		movl	%ebx, %r10d
1450:fltk-1.3.4-1/png/png.c ****        red_inverse <= xy->whitey /* r+g+b scales = white scale */)
 10186              		.loc 1 1450 4 is_stmt 1 view .LVU2862
1450:fltk-1.3.4-1/png/png.c ****        red_inverse <= xy->whitey /* r+g+b scales = white scale */)
 10187              		.loc 1 1450 8 is_stmt 0 view .LVU2863
 10188 01c5 29C1     		subl	%eax, %ecx
 10189 01c7 E8000000 		call	png_muldiv
 10189      00
 10190              	.LVL950:
1450:fltk-1.3.4-1/png/png.c ****        red_inverse <= xy->whitey /* r+g+b scales = white scale */)
 10191              		.loc 1 1450 7 view .LVU2864
 10192 01cc 85C0     		testl	%eax, %eax
 10193 01ce 0F846C02 		je	.L1048
 10193      0000
1450:fltk-1.3.4-1/png/png.c ****        red_inverse <= xy->whitey /* r+g+b scales = white scale */)
 10194              		.loc 1 1450 75 discriminator 1 view .LVU2865
 10195 01d4 418B701C 		movl	28(%r8), %esi
 10196 01d8 3B742408 		cmpl	8(%rsp), %esi
 10197 01dc 0F8D5E02 		jge	.L1048
 10197      0000
1455:fltk-1.3.4-1/png/png.c ****       return 2;
 10198              		.loc 1 1455 4 is_stmt 1 view .LVU2866
1455:fltk-1.3.4-1/png/png.c ****       return 2;
 10199              		.loc 1 1455 8 is_stmt 0 view .LVU2867
 10200 01e2 418B5018 		movl	24(%r8), %edx
 10201 01e6 418B4004 		movl	4(%r8), %eax
 10202              	.LVL951:
1455:fltk-1.3.4-1/png/png.c ****       return 2;
 10203              		.loc 1 1455 8 view .LVU2868
 10204 01ea 412B5010 		subl	16(%r8), %edx
 10205              	.LVL952:
 10206              	.LBB523:
 10207              	.LBI523:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10208              		.loc 1 3243 1 is_stmt 1 view .LVU2869
 10209              	.LBB524:
3247:fltk-1.3.4-1/png/png.c ****    {
 10210              		.loc 1 3247 4 view .LVU2870
3249:fltk-1.3.4-1/png/png.c ****       {
 10211              		.loc 1 3249 7 view .LVU2871
3249:fltk-1.3.4-1/png/png.c ****       {
 10212              		.loc 1 3249 10 is_stmt 0 view .LVU2872
 10213 01ee 412B4014 		subl	20(%r8), %eax
 10214              	.LVL953:
3249:fltk-1.3.4-1/png/png.c ****       {
 10215              		.loc 1 3249 10 view .LVU2873
 10216 01f2 0F84A302 		je	.L1091
 10216      0000
 10217 01f8 85D2     		testl	%edx, %edx
 10218 01fa 0F849B02 		je	.L1091
 10218      0000
 10219 0200 488D7C24 		leaq	16(%rsp), %rdi
 10219      10
 10220              	.LVL954:
3249:fltk-1.3.4-1/png/png.c ****       {
 10221              		.loc 1 3249 10 view .LVU2874
 10222 0205 B9070000 		movl	$7, %ecx
 10222      00
 10223 020a 89C6     		movl	%eax, %esi
 10224 020c E8000000 		call	png_muldiv.part.0
 10224      00
 10225              	.LVL955:
3249:fltk-1.3.4-1/png/png.c ****       {
 10226              		.loc 1 3249 10 view .LVU2875
 10227              	.LBE524:
 10228              	.LBE523:
1455:fltk-1.3.4-1/png/png.c ****       return 2;
 10229              		.loc 1 1455 7 view .LVU2876
 10230 0211 85C0     		testl	%eax, %eax
 10231 0213 0F844302 		je	.L1056
 10231      0000
 10232 0219 418B701C 		movl	28(%r8), %esi
 10233              	.L1065:
1457:fltk-1.3.4-1/png/png.c ****       return 2;
 10234              		.loc 1 1457 4 is_stmt 1 view .LVU2877
1457:fltk-1.3.4-1/png/png.c ****       return 2;
 10235              		.loc 1 1457 8 is_stmt 0 view .LVU2878
 10236 021d 89F2     		movl	%esi, %edx
 10237 021f 418B00   		movl	(%r8), %eax
 10238              	.LVL956:
1457:fltk-1.3.4-1/png/png.c ****       return 2;
 10239              		.loc 1 1457 8 view .LVU2879
 10240 0222 412B5014 		subl	20(%r8), %edx
 10241              	.LVL957:
 10242              	.LBB526:
 10243              	.LBI526:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10244              		.loc 1 3243 1 is_stmt 1 view .LVU2880
 10245              	.LBB527:
3247:fltk-1.3.4-1/png/png.c ****    {
 10246              		.loc 1 3247 4 view .LVU2881
3249:fltk-1.3.4-1/png/png.c ****       {
 10247              		.loc 1 3249 7 view .LVU2882
3249:fltk-1.3.4-1/png/png.c ****       {
 10248              		.loc 1 3249 10 is_stmt 0 view .LVU2883
 10249 0226 412B4010 		subl	16(%r8), %eax
 10250              	.LVL958:
3249:fltk-1.3.4-1/png/png.c ****       {
 10251              		.loc 1 3249 10 view .LVU2884
 10252 022a 0F847802 		je	.L1092
 10252      0000
 10253 0230 85D2     		testl	%edx, %edx
 10254 0232 0F847002 		je	.L1092
 10254      0000
 10255 0238 488D7C24 		leaq	20(%rsp), %rdi
 10255      14
 10256              	.LVL959:
3249:fltk-1.3.4-1/png/png.c ****       {
 10257              		.loc 1 3249 10 view .LVU2885
 10258 023d B9070000 		movl	$7, %ecx
 10258      00
 10259 0242 89C6     		movl	%eax, %esi
 10260 0244 E8000000 		call	png_muldiv.part.0
 10260      00
 10261              	.LVL960:
3249:fltk-1.3.4-1/png/png.c ****       {
 10262              		.loc 1 3249 10 view .LVU2886
 10263              	.LBE527:
 10264              	.LBE526:
1457:fltk-1.3.4-1/png/png.c ****       return 2;
 10265              		.loc 1 1457 7 view .LVU2887
 10266 0249 85C0     		testl	%eax, %eax
 10267 024b 0F840B02 		je	.L1056
 10267      0000
 10268 0251 418B701C 		movl	28(%r8), %esi
 10269              	.L1068:
1459:fltk-1.3.4-1/png/png.c ****        green_inverse <= xy->whitey)
 10270              		.loc 1 1459 4 is_stmt 1 view .LVU2888
1459:fltk-1.3.4-1/png/png.c ****        green_inverse <= xy->whitey)
 10271              		.loc 1 1459 8 is_stmt 0 view .LVU2889
 10272 0255 8B4C2410 		movl	16(%rsp), %ecx
 10273 0259 488D7C24 		leaq	12(%rsp), %rdi
 10273      0C
 10274 025e 2B4C2414 		subl	20(%rsp), %ecx
 10275 0262 4489D2   		movl	%r10d, %edx
 10276 0265 E8000000 		call	png_muldiv
 10276      00
 10277              	.LVL961:
1459:fltk-1.3.4-1/png/png.c ****        green_inverse <= xy->whitey)
 10278              		.loc 1 1459 7 view .LVU2890
 10279 026a 85C0     		testl	%eax, %eax
 10280 026c 0F84CE01 		je	.L1048
 10280      0000
1460:fltk-1.3.4-1/png/png.c ****       return 1;
 10281              		.loc 1 1460 27 discriminator 1 view .LVU2891
 10282 0272 418B781C 		movl	28(%r8), %edi
1460:fltk-1.3.4-1/png/png.c ****       return 1;
 10283              		.loc 1 1460 22 discriminator 1 view .LVU2892
 10284 0276 448B5C24 		movl	12(%rsp), %r11d
 10284      0C
1459:fltk-1.3.4-1/png/png.c ****        green_inverse <= xy->whitey)
 10285              		.loc 1 1459 77 discriminator 1 view .LVU2893
 10286 027b 4439DF   		cmpl	%r11d, %edi
 10287 027e 0F8DBC01 		jge	.L1048
 10287      0000
1466:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
 10288              		.loc 1 1466 4 is_stmt 1 view .LVU2894
1466:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
 10289              		.loc 1 1466 17 is_stmt 0 view .LVU2895
 10290 0284 E8000000 		call	png_reciprocal
 10290      00
 10291              	.LVL962:
1466:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
 10292              		.loc 1 1466 46 view .LVU2896
 10293 0289 8B4C2408 		movl	8(%rsp), %ecx
1466:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
 10294              		.loc 1 1466 17 view .LVU2897
 10295 028d 4189C2   		movl	%eax, %r10d
1466:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
 10296              		.loc 1 1466 46 view .LVU2898
 10297 0290 89CF     		movl	%ecx, %edi
 10298 0292 E8000000 		call	png_reciprocal
 10298      00
 10299              	.LVL963:
1467:fltk-1.3.4-1/png/png.c ****    if (blue_scale <= 0)
 10300              		.loc 1 1467 8 view .LVU2899
 10301 0297 4489DF   		movl	%r11d, %edi
1466:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
 10302              		.loc 1 1466 44 view .LVU2900
 10303 029a 4129C2   		subl	%eax, %r10d
1467:fltk-1.3.4-1/png/png.c ****    if (blue_scale <= 0)
 10304              		.loc 1 1467 8 view .LVU2901
 10305 029d E8000000 		call	png_reciprocal
 10305      00
 10306              	.LVL964:
1466:fltk-1.3.4-1/png/png.c ****        png_reciprocal(green_inverse);
 10307              		.loc 1 1466 15 view .LVU2902
 10308 02a2 4129C2   		subl	%eax, %r10d
 10309              	.LVL965:
1468:fltk-1.3.4-1/png/png.c ****       return 1;
 10310              		.loc 1 1468 4 is_stmt 1 view .LVU2903
1468:fltk-1.3.4-1/png/png.c ****       return 1;
 10311              		.loc 1 1468 7 is_stmt 0 view .LVU2904
 10312 02a5 4585D2   		testl	%r10d, %r10d
 10313 02a8 0F8E9201 		jle	.L1048
 10313      0000
1473:fltk-1.3.4-1/png/png.c ****       return 1;
 10314              		.loc 1 1473 4 is_stmt 1 view .LVU2905
 10315              	.LVL966:
 10316              	.LBB529:
 10317              	.LBI529:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10318              		.loc 1 3243 1 view .LVU2906
 10319              	.LBB530:
3247:fltk-1.3.4-1/png/png.c ****    {
 10320              		.loc 1 3247 4 view .LVU2907
3247:fltk-1.3.4-1/png/png.c ****    {
 10321              		.loc 1 3247 7 is_stmt 0 view .LVU2908
 10322 02ae 85C9     		testl	%ecx, %ecx
 10323 02b0 0F848A01 		je	.L1048
 10323      0000
 10324              	.LBE530:
 10325              	.LBE529:
1473:fltk-1.3.4-1/png/png.c ****       return 1;
 10326              		.loc 1 1473 8 view .LVU2909
 10327 02b6 418B30   		movl	(%r8), %esi
 10328              	.LBB533:
 10329              	.LBB531:
3249:fltk-1.3.4-1/png/png.c ****       {
 10330              		.loc 1 3249 7 is_stmt 1 view .LVU2910
3249:fltk-1.3.4-1/png/png.c ****       {
 10331              		.loc 1 3249 10 is_stmt 0 view .LVU2911
 10332 02b9 85F6     		testl	%esi, %esi
 10333 02bb 0F84F901 		je	.L1157
 10333      0000
 10334 02c1 BAA08601 		movl	$100000, %edx
 10334      00
 10335 02c6 4C89CF   		movq	%r9, %rdi
 10336 02c9 E8000000 		call	png_muldiv.part.0
 10336      00
 10337              	.LVL967:
3249:fltk-1.3.4-1/png/png.c ****       {
 10338              		.loc 1 3249 10 view .LVU2912
 10339              	.LBE531:
 10340              	.LBE533:
1473:fltk-1.3.4-1/png/png.c ****       return 1;
 10341              		.loc 1 1473 7 view .LVU2913
 10342 02ce 85C0     		testl	%eax, %eax
 10343 02d0 0F846A01 		je	.L1048
 10343      0000
 10344              	.LVL968:
1475:fltk-1.3.4-1/png/png.c ****       return 1;
 10345              		.loc 1 1475 4 is_stmt 1 view .LVU2914
1475:fltk-1.3.4-1/png/png.c ****       return 1;
 10346              		.loc 1 1475 8 is_stmt 0 view .LVU2915
 10347 02d6 8B4C2408 		movl	8(%rsp), %ecx
 10348              	.LVL969:
 10349              	.LBB534:
 10350              	.LBI534:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10351              		.loc 1 3243 1 is_stmt 1 view .LVU2916
 10352              	.LBB535:
3247:fltk-1.3.4-1/png/png.c ****    {
 10353              		.loc 1 3247 4 view .LVU2917
3247:fltk-1.3.4-1/png/png.c ****    {
 10354              		.loc 1 3247 7 is_stmt 0 view .LVU2918
 10355 02da 85C9     		testl	%ecx, %ecx
 10356 02dc 0F845E01 		je	.L1048
 10356      0000
 10357              	.LBE535:
 10358              	.LBE534:
1475:fltk-1.3.4-1/png/png.c ****       return 1;
 10359              		.loc 1 1475 8 view .LVU2919
 10360 02e2 418B7004 		movl	4(%r8), %esi
 10361 02e6 498D7904 		leaq	4(%r9), %rdi
 10362              	.LVL970:
 10363              	.L1070:
 10364              	.LBB539:
 10365              	.LBB536:
3249:fltk-1.3.4-1/png/png.c ****       {
 10366              		.loc 1 3249 7 is_stmt 1 view .LVU2920
3249:fltk-1.3.4-1/png/png.c ****       {
 10367              		.loc 1 3249 10 is_stmt 0 view .LVU2921
 10368 02ea 85F6     		testl	%esi, %esi
 10369 02ec 0F840302 		je	.L1158
 10369      0000
3249:fltk-1.3.4-1/png/png.c ****       {
 10370              		.loc 1 3249 10 view .LVU2922
 10371 02f2 BAA08601 		movl	$100000, %edx
 10371      00
 10372 02f7 E8000000 		call	png_muldiv.part.0
 10372      00
 10373              	.LVL971:
3249:fltk-1.3.4-1/png/png.c ****       {
 10374              		.loc 1 3249 10 view .LVU2923
 10375              	.LBE536:
 10376              	.LBE539:
1475:fltk-1.3.4-1/png/png.c ****       return 1;
 10377              		.loc 1 1475 7 view .LVU2924
 10378 02fc 85C0     		testl	%eax, %eax
 10379 02fe 0F843C01 		je	.L1048
 10379      0000
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10380              		.loc 1 1477 4 is_stmt 1 view .LVU2925
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10381              		.loc 1 1477 8 is_stmt 0 view .LVU2926
 10382 0304 8B4C2408 		movl	8(%rsp), %ecx
 10383              	.LVL972:
 10384              	.LBB540:
 10385              	.LBI540:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10386              		.loc 1 3243 1 is_stmt 1 view .LVU2927
 10387              	.LBB541:
3247:fltk-1.3.4-1/png/png.c ****    {
 10388              		.loc 1 3247 4 view .LVU2928
3247:fltk-1.3.4-1/png/png.c ****    {
 10389              		.loc 1 3247 7 is_stmt 0 view .LVU2929
 10390 0308 85C9     		testl	%ecx, %ecx
 10391 030a 0F843001 		je	.L1048
 10391      0000
 10392              	.LBE541:
 10393              	.LBE540:
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10394              		.loc 1 1477 41 view .LVU2930
 10395 0310 BEA08601 		movl	$100000, %esi
 10395      00
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10396              		.loc 1 1477 8 view .LVU2931
 10397 0315 498D7908 		leaq	8(%r9), %rdi
 10398              	.LVL973:
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10399              		.loc 1 1477 41 view .LVU2932
 10400 0319 412B30   		subl	(%r8), %esi
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10401              		.loc 1 1477 8 view .LVU2933
 10402 031c 412B7004 		subl	4(%r8), %esi
 10403              	.LVL974:
 10404              	.L1072:
 10405              	.LBB545:
 10406              	.LBB542:
3249:fltk-1.3.4-1/png/png.c ****       {
 10407              		.loc 1 3249 7 is_stmt 1 view .LVU2934
3249:fltk-1.3.4-1/png/png.c ****       {
 10408              		.loc 1 3249 10 is_stmt 0 view .LVU2935
 10409 0320 85F6     		testl	%esi, %esi
 10410 0322 0F84C001 		je	.L1159
 10410      0000
 10411 0328 BAA08601 		movl	$100000, %edx
 10411      00
 10412 032d E8000000 		call	png_muldiv.part.0
 10412      00
 10413              	.LVL975:
3249:fltk-1.3.4-1/png/png.c ****       {
 10414              		.loc 1 3249 10 view .LVU2936
 10415              	.LBE542:
 10416              	.LBE545:
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10417              		.loc 1 1477 7 view .LVU2937
 10418 0332 85C0     		testl	%eax, %eax
 10419 0334 0F840601 		je	.L1048
 10419      0000
 10420              	.L1074:
1481:fltk-1.3.4-1/png/png.c ****       return 1;
 10421              		.loc 1 1481 4 is_stmt 1 view .LVU2938
1481:fltk-1.3.4-1/png/png.c ****       return 1;
 10422              		.loc 1 1481 8 is_stmt 0 view .LVU2939
 10423 033a 8B4C240C 		movl	12(%rsp), %ecx
 10424              	.LVL976:
 10425              	.LBB546:
 10426              	.LBI546:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10427              		.loc 1 3243 1 is_stmt 1 view .LVU2940
 10428              	.LBB547:
3247:fltk-1.3.4-1/png/png.c ****    {
 10429              		.loc 1 3247 4 view .LVU2941
3247:fltk-1.3.4-1/png/png.c ****    {
 10430              		.loc 1 3247 7 is_stmt 0 view .LVU2942
 10431 033e 85C9     		testl	%ecx, %ecx
 10432 0340 0F84FA00 		je	.L1048
 10432      0000
 10433              	.LBE547:
 10434              	.LBE546:
1481:fltk-1.3.4-1/png/png.c ****       return 1;
 10435              		.loc 1 1481 8 view .LVU2943
 10436 0346 418B7008 		movl	8(%r8), %esi
 10437              	.LBB551:
 10438              	.LBB548:
3249:fltk-1.3.4-1/png/png.c ****       {
 10439              		.loc 1 3249 7 is_stmt 1 view .LVU2944
3249:fltk-1.3.4-1/png/png.c ****       {
 10440              		.loc 1 3249 10 is_stmt 0 view .LVU2945
 10441 034a 85F6     		testl	%esi, %esi
 10442 034c 0F84F801 		je	.L1160
 10442      0000
 10443              	.LBE548:
 10444              	.LBE551:
1481:fltk-1.3.4-1/png/png.c ****       return 1;
 10445              		.loc 1 1481 8 view .LVU2946
 10446 0352 498D790C 		leaq	12(%r9), %rdi
 10447              	.LVL977:
 10448              	.LBB552:
 10449              	.LBB549:
1481:fltk-1.3.4-1/png/png.c ****       return 1;
 10450              		.loc 1 1481 8 view .LVU2947
 10451 0356 BAA08601 		movl	$100000, %edx
 10451      00
 10452 035b E8000000 		call	png_muldiv.part.0
 10452      00
 10453              	.LVL978:
1481:fltk-1.3.4-1/png/png.c ****       return 1;
 10454              		.loc 1 1481 8 view .LVU2948
 10455              	.LBE549:
 10456              	.LBE552:
1481:fltk-1.3.4-1/png/png.c ****       return 1;
 10457              		.loc 1 1481 7 view .LVU2949
 10458 0360 85C0     		testl	%eax, %eax
 10459 0362 0F84D800 		je	.L1048
 10459      0000
1483:fltk-1.3.4-1/png/png.c ****       return 1;
 10460              		.loc 1 1483 4 is_stmt 1 view .LVU2950
1483:fltk-1.3.4-1/png/png.c ****       return 1;
 10461              		.loc 1 1483 8 is_stmt 0 view .LVU2951
 10462 0368 8B4C240C 		movl	12(%rsp), %ecx
 10463              	.LVL979:
 10464              	.LBB553:
 10465              	.LBI553:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10466              		.loc 1 3243 1 is_stmt 1 view .LVU2952
 10467              	.LBB554:
3247:fltk-1.3.4-1/png/png.c ****    {
 10468              		.loc 1 3247 4 view .LVU2953
3247:fltk-1.3.4-1/png/png.c ****    {
 10469              		.loc 1 3247 7 is_stmt 0 view .LVU2954
 10470 036c 85C9     		testl	%ecx, %ecx
 10471 036e 0F84CC00 		je	.L1048
 10471      0000
 10472              	.LBE554:
 10473              	.LBE553:
1483:fltk-1.3.4-1/png/png.c ****       return 1;
 10474              		.loc 1 1483 8 view .LVU2955
 10475 0374 418B700C 		movl	12(%r8), %esi
 10476 0378 498D7910 		leaq	16(%r9), %rdi
 10477              	.LVL980:
 10478              	.L1076:
 10479              	.LBB558:
 10480              	.LBB555:
3249:fltk-1.3.4-1/png/png.c ****       {
 10481              		.loc 1 3249 7 is_stmt 1 view .LVU2956
3249:fltk-1.3.4-1/png/png.c ****       {
 10482              		.loc 1 3249 10 is_stmt 0 view .LVU2957
 10483 037c 85F6     		testl	%esi, %esi
 10484 037e 0F84A801 		je	.L1161
 10484      0000
3249:fltk-1.3.4-1/png/png.c ****       {
 10485              		.loc 1 3249 10 view .LVU2958
 10486 0384 BAA08601 		movl	$100000, %edx
 10486      00
 10487 0389 E8000000 		call	png_muldiv.part.0
 10487      00
 10488              	.LVL981:
3249:fltk-1.3.4-1/png/png.c ****       {
 10489              		.loc 1 3249 10 view .LVU2959
 10490              	.LBE555:
 10491              	.LBE558:
1483:fltk-1.3.4-1/png/png.c ****       return 1;
 10492              		.loc 1 1483 7 view .LVU2960
 10493 038e 85C0     		testl	%eax, %eax
 10494 0390 0F84AA00 		je	.L1048
 10494      0000
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10495              		.loc 1 1485 4 is_stmt 1 view .LVU2961
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10496              		.loc 1 1485 8 is_stmt 0 view .LVU2962
 10497 0396 8B4C240C 		movl	12(%rsp), %ecx
 10498              	.LVL982:
 10499              	.LBB559:
 10500              	.LBI559:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10501              		.loc 1 3243 1 is_stmt 1 view .LVU2963
 10502              	.LBB560:
3247:fltk-1.3.4-1/png/png.c ****    {
 10503              		.loc 1 3247 4 view .LVU2964
3247:fltk-1.3.4-1/png/png.c ****    {
 10504              		.loc 1 3247 7 is_stmt 0 view .LVU2965
 10505 039a 85C9     		testl	%ecx, %ecx
 10506 039c 0F849E00 		je	.L1048
 10506      0000
 10507              	.LBE560:
 10508              	.LBE559:
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10509              		.loc 1 1485 43 view .LVU2966
 10510 03a2 BEA08601 		movl	$100000, %esi
 10510      00
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10511              		.loc 1 1485 8 view .LVU2967
 10512 03a7 498D7914 		leaq	20(%r9), %rdi
 10513              	.LVL983:
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10514              		.loc 1 1485 43 view .LVU2968
 10515 03ab 412B7008 		subl	8(%r8), %esi
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10516              		.loc 1 1485 8 view .LVU2969
 10517 03af 412B700C 		subl	12(%r8), %esi
 10518              	.LVL984:
 10519              	.L1078:
 10520              	.LBB564:
 10521              	.LBB561:
3249:fltk-1.3.4-1/png/png.c ****       {
 10522              		.loc 1 3249 7 is_stmt 1 view .LVU2970
3249:fltk-1.3.4-1/png/png.c ****       {
 10523              		.loc 1 3249 10 is_stmt 0 view .LVU2971
 10524 03b3 85F6     		testl	%esi, %esi
 10525 03b5 0F846401 		je	.L1162
 10525      0000
 10526 03bb BAA08601 		movl	$100000, %edx
 10526      00
 10527 03c0 E8000000 		call	png_muldiv.part.0
 10527      00
 10528              	.LVL985:
3249:fltk-1.3.4-1/png/png.c ****       {
 10529              		.loc 1 3249 10 view .LVU2972
 10530              	.LBE561:
 10531              	.LBE564:
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10532              		.loc 1 1485 7 view .LVU2973
 10533 03c5 85C0     		testl	%eax, %eax
 10534 03c7 7477     		je	.L1048
 10535              	.L1080:
1489:fltk-1.3.4-1/png/png.c ****       return 1;
 10536              		.loc 1 1489 4 is_stmt 1 view .LVU2974
1489:fltk-1.3.4-1/png/png.c ****       return 1;
 10537              		.loc 1 1489 8 is_stmt 0 view .LVU2975
 10538 03c9 418B7010 		movl	16(%r8), %esi
 10539              	.LVL986:
 10540              	.LBB565:
 10541              	.LBI565:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10542              		.loc 1 3243 1 is_stmt 1 view .LVU2976
 10543              	.LBB566:
3247:fltk-1.3.4-1/png/png.c ****    {
 10544              		.loc 1 3247 4 view .LVU2977
3249:fltk-1.3.4-1/png/png.c ****       {
 10545              		.loc 1 3249 7 view .LVU2978
3249:fltk-1.3.4-1/png/png.c ****       {
 10546              		.loc 1 3249 10 is_stmt 0 view .LVU2979
 10547 03cd 85F6     		testl	%esi, %esi
 10548 03cf 0F843D01 		je	.L1163
 10548      0000
 10549              	.LBE566:
 10550              	.LBE565:
1489:fltk-1.3.4-1/png/png.c ****       return 1;
 10551              		.loc 1 1489 8 view .LVU2980
 10552 03d5 498D7918 		leaq	24(%r9), %rdi
 10553              	.LVL987:
 10554              	.LBB569:
 10555              	.LBB567:
1489:fltk-1.3.4-1/png/png.c ****       return 1;
 10556              		.loc 1 1489 8 view .LVU2981
 10557 03d9 B9A08601 		movl	$100000, %ecx
 10557      00
 10558 03de 4489D2   		movl	%r10d, %edx
 10559 03e1 E8000000 		call	png_muldiv.part.0
 10559      00
 10560              	.LVL988:
1489:fltk-1.3.4-1/png/png.c ****       return 1;
 10561              		.loc 1 1489 8 view .LVU2982
 10562              	.LBE567:
 10563              	.LBE569:
1489:fltk-1.3.4-1/png/png.c ****       return 1;
 10564              		.loc 1 1489 7 view .LVU2983
 10565 03e6 85C0     		testl	%eax, %eax
 10566 03e8 7456     		je	.L1048
 10567              	.L1082:
1491:fltk-1.3.4-1/png/png.c ****       return 1;
 10568              		.loc 1 1491 4 is_stmt 1 view .LVU2984
1491:fltk-1.3.4-1/png/png.c ****       return 1;
 10569              		.loc 1 1491 8 is_stmt 0 view .LVU2985
 10570 03ea 418B7014 		movl	20(%r8), %esi
 10571              	.LVL989:
 10572              	.LBB570:
 10573              	.LBI570:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10574              		.loc 1 3243 1 is_stmt 1 view .LVU2986
 10575              	.LBB571:
3247:fltk-1.3.4-1/png/png.c ****    {
 10576              		.loc 1 3247 4 view .LVU2987
3249:fltk-1.3.4-1/png/png.c ****       {
 10577              		.loc 1 3249 7 view .LVU2988
3249:fltk-1.3.4-1/png/png.c ****       {
 10578              		.loc 1 3249 10 is_stmt 0 view .LVU2989
 10579 03ee 85F6     		testl	%esi, %esi
 10580 03f0 0F84E500 		je	.L1164
 10580      0000
 10581              	.LBE571:
 10582              	.LBE570:
1491:fltk-1.3.4-1/png/png.c ****       return 1;
 10583              		.loc 1 1491 8 view .LVU2990
 10584 03f6 498D791C 		leaq	28(%r9), %rdi
 10585              	.LVL990:
 10586              	.LBB574:
 10587              	.LBB572:
1491:fltk-1.3.4-1/png/png.c ****       return 1;
 10588              		.loc 1 1491 8 view .LVU2991
 10589 03fa B9A08601 		movl	$100000, %ecx
 10589      00
 10590 03ff 4489D2   		movl	%r10d, %edx
 10591 0402 E8000000 		call	png_muldiv.part.0
 10591      00
 10592              	.LVL991:
1491:fltk-1.3.4-1/png/png.c ****       return 1;
 10593              		.loc 1 1491 8 view .LVU2992
 10594              	.LBE572:
 10595              	.LBE574:
1491:fltk-1.3.4-1/png/png.c ****       return 1;
 10596              		.loc 1 1491 7 view .LVU2993
 10597 0407 85C0     		testl	%eax, %eax
 10598 0409 7435     		je	.L1048
 10599              	.L1084:
1493:fltk-1.3.4-1/png/png.c ****        PNG_FP_1) == 0)
 10600              		.loc 1 1493 4 is_stmt 1 view .LVU2994
1493:fltk-1.3.4-1/png/png.c ****        PNG_FP_1) == 0)
 10601              		.loc 1 1493 42 is_stmt 0 view .LVU2995
 10602 040b B8A08601 		movl	$100000, %eax
 10602      00
 10603 0410 412B4010 		subl	16(%r8), %eax
 10604              	.LVL992:
 10605              	.LBB575:
 10606              	.LBI575:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10607              		.loc 1 3243 1 is_stmt 1 view .LVU2996
 10608              	.LBB576:
3247:fltk-1.3.4-1/png/png.c ****    {
 10609              		.loc 1 3247 4 view .LVU2997
3249:fltk-1.3.4-1/png/png.c ****       {
 10610              		.loc 1 3249 7 view .LVU2998
3249:fltk-1.3.4-1/png/png.c ****       {
 10611              		.loc 1 3249 10 is_stmt 0 view .LVU2999
 10612 0414 412B4014 		subl	20(%r8), %eax
 10613              	.LVL993:
3249:fltk-1.3.4-1/png/png.c ****       {
 10614              		.loc 1 3249 10 view .LVU3000
 10615 0418 0F84B000 		je	.L1165
 10615      0000
 10616              	.LBE576:
 10617              	.LBE575:
1493:fltk-1.3.4-1/png/png.c ****        PNG_FP_1) == 0)
 10618              		.loc 1 1493 8 view .LVU3001
 10619 041e 498D7920 		leaq	32(%r9), %rdi
 10620              	.LVL994:
 10621              	.LBB579:
 10622              	.LBB577:
1493:fltk-1.3.4-1/png/png.c ****        PNG_FP_1) == 0)
 10623              		.loc 1 1493 8 view .LVU3002
 10624 0422 B9A08601 		movl	$100000, %ecx
 10624      00
 10625 0427 4489D2   		movl	%r10d, %edx
 10626 042a 89C6     		movl	%eax, %esi
 10627 042c E8000000 		call	png_muldiv.part.0
 10627      00
 10628              	.LVL995:
1493:fltk-1.3.4-1/png/png.c ****        PNG_FP_1) == 0)
 10629              		.loc 1 1493 8 view .LVU3003
 10630              	.LBE577:
 10631              	.LBE579:
1493:fltk-1.3.4-1/png/png.c ****        PNG_FP_1) == 0)
 10632              		.loc 1 1493 7 view .LVU3004
 10633 0431 85C0     		testl	%eax, %eax
 10634 0433 0F94C0   		sete	%al
 10635 0436 0FB6C0   		movzbl	%al, %eax
 10636 0439 EB0A     		jmp	.L1045
 10637              	.LVL996:
 10638 043b 0F1F4400 		.p2align 4,,10
 10638      00
 10639              		.p2align 3
 10640              	.L1048:
1245:fltk-1.3.4-1/png/png.c ****    if (xy->redy < 0 || xy->redy > PNG_FP_1-xy->redx) return 1;
 10641              		.loc 1 1245 52 view .LVU3005
 10642 0440 B8010000 		movl	$1, %eax
 10642      00
 10643              	.L1045:
1498:fltk-1.3.4-1/png/png.c **** 
 10644              		.loc 1 1498 1 view .LVU3006
 10645 0445 488B5C24 		movq	24(%rsp), %rbx
 10645      18
 10646 044a 6448331C 		xorq	%fs:40, %rbx
 10646      25280000 
 10646      00
 10647 0453 7560     		jne	.L1166
 10648 0455 4883C428 		addq	$40, %rsp
 10649              		.cfi_remember_state
 10650              		.cfi_def_cfa_offset 24
 10651 0459 5B       		popq	%rbx
 10652              		.cfi_def_cfa_offset 16
 10653 045a 5D       		popq	%rbp
 10654              		.cfi_def_cfa_offset 8
 10655 045b C3       		ret
 10656              	.LVL997:
 10657              	.L1056:
 10658              		.cfi_restore_state
1434:fltk-1.3.4-1/png/png.c ****    if (png_muldiv(&right, xy->greeny-xy->bluey, xy->redx - xy->bluex, 7) == 0)
 10659              		.loc 1 1434 14 view .LVU3007
 10660 045c B8020000 		movl	$2, %eax
 10660      00
 10661 0461 EBE2     		jmp	.L1045
 10662              	.LVL998:
 10663              	.L1087:
 10664              	.LBB580:
 10665              	.LBB509:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10666              		.loc 1 3251 10 is_stmt 1 view .LVU3008
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10667              		.loc 1 3251 15 is_stmt 0 view .LVU3009
 10668 0463 C7442410 		movl	$0, 16(%rsp)
 10668      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10669              		.loc 1 3252 10 is_stmt 1 view .LVU3010
 10670              	.LVL999:
3252:fltk-1.3.4-1/png/png.c ****       }
 10671              		.loc 1 3252 10 is_stmt 0 view .LVU3011
 10672 046b E992FCFF 		jmp	.L1051
 10672      FF
 10673              	.LVL1000:
 10674              	.L1088:
3252:fltk-1.3.4-1/png/png.c ****       }
 10675              		.loc 1 3252 10 view .LVU3012
 10676              	.LBE509:
 10677              	.LBE580:
 10678              	.LBB581:
 10679              	.LBB512:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10680              		.loc 1 3251 10 is_stmt 1 view .LVU3013
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10681              		.loc 1 3251 15 is_stmt 0 view .LVU3014
 10682 0470 C7442414 		movl	$0, 20(%rsp)
 10682      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10683              		.loc 1 3252 10 is_stmt 1 view .LVU3015
 10684              	.LVL1001:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10685              		.loc 1 3251 15 is_stmt 0 view .LVU3016
 10686 0478 31ED     		xorl	%ebp, %ebp
 10687 047a E9BCFCFF 		jmp	.L1055
 10687      FF
 10688              	.LVL1002:
 10689              	.L1089:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10690              		.loc 1 3251 15 view .LVU3017
 10691              	.LBE512:
 10692              	.LBE581:
 10693              	.LBB582:
 10694              	.LBB516:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10695              		.loc 1 3251 10 is_stmt 1 view .LVU3018
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10696              		.loc 1 3251 15 is_stmt 0 view .LVU3019
 10697 047f C7442410 		movl	$0, 16(%rsp)
 10697      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10698              		.loc 1 3252 10 is_stmt 1 view .LVU3020
 10699              	.LVL1003:
3252:fltk-1.3.4-1/png/png.c ****       }
 10700              		.loc 1 3252 10 is_stmt 0 view .LVU3021
 10701 0487 E9EEFCFF 		jmp	.L1059
 10701      FF
 10702              	.LVL1004:
 10703              	.L1090:
3252:fltk-1.3.4-1/png/png.c ****       }
 10704              		.loc 1 3252 10 view .LVU3022
 10705              	.LBE516:
 10706              	.LBE582:
 10707              	.LBB583:
 10708              	.LBB521:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10709              		.loc 1 3251 10 is_stmt 1 view .LVU3023
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10710              		.loc 1 3251 15 is_stmt 0 view .LVU3024
 10711 048c C7442414 		movl	$0, 20(%rsp)
 10711      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10712              		.loc 1 3252 10 is_stmt 1 view .LVU3025
 10713              	.LVL1005:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10714              		.loc 1 3251 15 is_stmt 0 view .LVU3026
 10715 0494 31C0     		xorl	%eax, %eax
 10716 0496 E916FDFF 		jmp	.L1062
 10716      FF
 10717              	.LVL1006:
 10718              	.L1091:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10719              		.loc 1 3251 15 view .LVU3027
 10720              	.LBE521:
 10721              	.LBE583:
 10722              	.LBB584:
 10723              	.LBB525:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10724              		.loc 1 3251 10 is_stmt 1 view .LVU3028
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10725              		.loc 1 3251 15 is_stmt 0 view .LVU3029
 10726 049b C7442410 		movl	$0, 16(%rsp)
 10726      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10727              		.loc 1 3252 10 is_stmt 1 view .LVU3030
 10728              	.LVL1007:
3252:fltk-1.3.4-1/png/png.c ****       }
 10729              		.loc 1 3252 10 is_stmt 0 view .LVU3031
 10730 04a3 E975FDFF 		jmp	.L1065
 10730      FF
 10731              	.LVL1008:
 10732              	.L1092:
3252:fltk-1.3.4-1/png/png.c ****       }
 10733              		.loc 1 3252 10 view .LVU3032
 10734              	.LBE525:
 10735              	.LBE584:
 10736              	.LBB585:
 10737              	.LBB528:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10738              		.loc 1 3251 10 is_stmt 1 view .LVU3033
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10739              		.loc 1 3251 15 is_stmt 0 view .LVU3034
 10740 04a8 C7442414 		movl	$0, 20(%rsp)
 10740      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10741              		.loc 1 3252 10 is_stmt 1 view .LVU3035
 10742              	.LVL1009:
3252:fltk-1.3.4-1/png/png.c ****       }
 10743              		.loc 1 3252 10 is_stmt 0 view .LVU3036
 10744 04b0 E9A0FDFF 		jmp	.L1068
 10744      FF
 10745              	.LVL1010:
 10746              	.L1166:
3252:fltk-1.3.4-1/png/png.c ****       }
 10747              		.loc 1 3252 10 view .LVU3037
 10748              	.LBE528:
 10749              	.LBE585:
1498:fltk-1.3.4-1/png/png.c **** 
 10750              		.loc 1 1498 1 view .LVU3038
 10751 04b5 E8000000 		call	__stack_chk_fail@PLT
 10751      00
 10752              	.LVL1011:
 10753              	.L1157:
 10754              	.LBB586:
 10755              	.LBB532:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10756              		.loc 1 3251 10 is_stmt 1 view .LVU3039
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10757              		.loc 1 3251 15 is_stmt 0 view .LVU3040
 10758 04ba 41C70100 		movl	$0, (%r9)
 10758      000000
3252:fltk-1.3.4-1/png/png.c ****       }
 10759              		.loc 1 3252 10 is_stmt 1 view .LVU3041
 10760              	.LVL1012:
3252:fltk-1.3.4-1/png/png.c ****       }
 10761              		.loc 1 3252 10 is_stmt 0 view .LVU3042
 10762              	.LBE532:
 10763              	.LBE586:
1475:fltk-1.3.4-1/png/png.c ****       return 1;
 10764              		.loc 1 1475 4 is_stmt 1 view .LVU3043
1475:fltk-1.3.4-1/png/png.c ****       return 1;
 10765              		.loc 1 1475 8 is_stmt 0 view .LVU3044
 10766 04c1 498D7904 		leaq	4(%r9), %rdi
 10767              	.LVL1013:
1475:fltk-1.3.4-1/png/png.c ****       return 1;
 10768              		.loc 1 1475 8 view .LVU3045
 10769 04c5 418B7004 		movl	4(%r8), %esi
 10770              	.LVL1014:
 10771              	.LBB587:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10772              		.loc 1 3243 1 is_stmt 1 view .LVU3046
 10773              	.LBB537:
3247:fltk-1.3.4-1/png/png.c ****    {
 10774              		.loc 1 3247 4 view .LVU3047
 10775 04c9 E91CFEFF 		jmp	.L1070
 10775      FF
 10776              	.LVL1015:
 10777              	.L1165:
3247:fltk-1.3.4-1/png/png.c ****    {
 10778              		.loc 1 3247 4 is_stmt 0 view .LVU3048
 10779              	.LBE537:
 10780              	.LBE587:
 10781              	.LBB588:
 10782              	.LBB578:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10783              		.loc 1 3251 10 is_stmt 1 view .LVU3049
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10784              		.loc 1 3251 15 is_stmt 0 view .LVU3050
 10785 04ce 41C74120 		movl	$0, 32(%r9)
 10785      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10786              		.loc 1 3252 10 is_stmt 1 view .LVU3051
 10787              	.LVL1016:
3252:fltk-1.3.4-1/png/png.c ****       }
 10788              		.loc 1 3252 10 is_stmt 0 view .LVU3052
 10789 04d6 E96AFFFF 		jmp	.L1045
 10789      FF
 10790              	.LVL1017:
 10791              	.L1164:
3252:fltk-1.3.4-1/png/png.c ****       }
 10792              		.loc 1 3252 10 view .LVU3053
 10793              	.LBE578:
 10794              	.LBE588:
 10795              	.LBB589:
 10796              	.LBB573:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10797              		.loc 1 3251 10 is_stmt 1 view .LVU3054
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10798              		.loc 1 3251 15 is_stmt 0 view .LVU3055
 10799 04db 41C7411C 		movl	$0, 28(%r9)
 10799      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10800              		.loc 1 3252 10 is_stmt 1 view .LVU3056
 10801              	.LVL1018:
3252:fltk-1.3.4-1/png/png.c ****       }
 10802              		.loc 1 3252 10 is_stmt 0 view .LVU3057
 10803 04e3 E923FFFF 		jmp	.L1084
 10803      FF
 10804              	.LVL1019:
 10805              	.L1159:
3252:fltk-1.3.4-1/png/png.c ****       }
 10806              		.loc 1 3252 10 view .LVU3058
 10807              	.LBE573:
 10808              	.LBE589:
 10809              	.LBB590:
 10810              	.LBB543:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10811              		.loc 1 3251 10 is_stmt 1 view .LVU3059
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10812              		.loc 1 3251 15 is_stmt 0 view .LVU3060
 10813 04e8 41C74108 		movl	$0, 8(%r9)
 10813      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10814              		.loc 1 3252 10 is_stmt 1 view .LVU3061
 10815              	.LVL1020:
3252:fltk-1.3.4-1/png/png.c ****       }
 10816              		.loc 1 3252 10 is_stmt 0 view .LVU3062
 10817 04f0 E945FEFF 		jmp	.L1074
 10817      FF
 10818              	.LVL1021:
 10819              	.L1158:
3252:fltk-1.3.4-1/png/png.c ****       }
 10820              		.loc 1 3252 10 view .LVU3063
 10821              	.LBE543:
 10822              	.LBE590:
 10823              	.LBB591:
 10824              	.LBB538:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10825              		.loc 1 3251 10 is_stmt 1 view .LVU3064
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10826              		.loc 1 3251 15 is_stmt 0 view .LVU3065
 10827 04f5 41C74104 		movl	$0, 4(%r9)
 10827      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10828              		.loc 1 3252 10 is_stmt 1 view .LVU3066
 10829              	.LVL1022:
3252:fltk-1.3.4-1/png/png.c ****       }
 10830              		.loc 1 3252 10 is_stmt 0 view .LVU3067
 10831              	.LBE538:
 10832              	.LBE591:
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10833              		.loc 1 1477 4 is_stmt 1 view .LVU3068
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10834              		.loc 1 1477 41 is_stmt 0 view .LVU3069
 10835 04fd BEA08601 		movl	$100000, %esi
 10835      00
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10836              		.loc 1 1477 8 view .LVU3070
 10837 0502 498D7908 		leaq	8(%r9), %rdi
 10838              	.LVL1023:
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10839              		.loc 1 1477 41 view .LVU3071
 10840 0506 412B30   		subl	(%r8), %esi
1477:fltk-1.3.4-1/png/png.c ****        red_inverse) == 0)
 10841              		.loc 1 1477 8 view .LVU3072
 10842 0509 412B7004 		subl	4(%r8), %esi
 10843              	.LVL1024:
 10844              	.LBB592:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10845              		.loc 1 3243 1 is_stmt 1 view .LVU3073
 10846              	.LBB544:
3247:fltk-1.3.4-1/png/png.c ****    {
 10847              		.loc 1 3247 4 view .LVU3074
 10848 050d E90EFEFF 		jmp	.L1072
 10848      FF
 10849              	.LVL1025:
 10850              	.L1163:
3247:fltk-1.3.4-1/png/png.c ****    {
 10851              		.loc 1 3247 4 is_stmt 0 view .LVU3075
 10852              	.LBE544:
 10853              	.LBE592:
 10854              	.LBB593:
 10855              	.LBB568:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10856              		.loc 1 3251 10 is_stmt 1 view .LVU3076
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10857              		.loc 1 3251 15 is_stmt 0 view .LVU3077
 10858 0512 41C74118 		movl	$0, 24(%r9)
 10858      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10859              		.loc 1 3252 10 is_stmt 1 view .LVU3078
 10860              	.LVL1026:
3252:fltk-1.3.4-1/png/png.c ****       }
 10861              		.loc 1 3252 10 is_stmt 0 view .LVU3079
 10862 051a E9CBFEFF 		jmp	.L1082
 10862      FF
 10863              	.LVL1027:
 10864              	.L1162:
3252:fltk-1.3.4-1/png/png.c ****       }
 10865              		.loc 1 3252 10 view .LVU3080
 10866              	.LBE568:
 10867              	.LBE593:
 10868              	.LBB594:
 10869              	.LBB562:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10870              		.loc 1 3251 10 is_stmt 1 view .LVU3081
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10871              		.loc 1 3251 15 is_stmt 0 view .LVU3082
 10872 051f 41C74114 		movl	$0, 20(%r9)
 10872      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10873              		.loc 1 3252 10 is_stmt 1 view .LVU3083
 10874              	.LVL1028:
3252:fltk-1.3.4-1/png/png.c ****       }
 10875              		.loc 1 3252 10 is_stmt 0 view .LVU3084
 10876 0527 E99DFEFF 		jmp	.L1080
 10876      FF
 10877              	.LVL1029:
 10878              	.L1161:
3252:fltk-1.3.4-1/png/png.c ****       }
 10879              		.loc 1 3252 10 view .LVU3085
 10880              	.LBE562:
 10881              	.LBE594:
 10882              	.LBB595:
 10883              	.LBB556:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10884              		.loc 1 3251 10 is_stmt 1 view .LVU3086
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10885              		.loc 1 3251 15 is_stmt 0 view .LVU3087
 10886 052c 41C74110 		movl	$0, 16(%r9)
 10886      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10887              		.loc 1 3252 10 is_stmt 1 view .LVU3088
 10888              	.LVL1030:
3252:fltk-1.3.4-1/png/png.c ****       }
 10889              		.loc 1 3252 10 is_stmt 0 view .LVU3089
 10890              	.LBE556:
 10891              	.LBE595:
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10892              		.loc 1 1485 4 is_stmt 1 view .LVU3090
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10893              		.loc 1 1485 43 is_stmt 0 view .LVU3091
 10894 0534 BEA08601 		movl	$100000, %esi
 10894      00
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10895              		.loc 1 1485 8 view .LVU3092
 10896 0539 498D7914 		leaq	20(%r9), %rdi
 10897              	.LVL1031:
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10898              		.loc 1 1485 43 view .LVU3093
 10899 053d 412B7008 		subl	8(%r8), %esi
1485:fltk-1.3.4-1/png/png.c ****        green_inverse) == 0)
 10900              		.loc 1 1485 8 view .LVU3094
 10901 0541 412B700C 		subl	12(%r8), %esi
 10902              	.LVL1032:
 10903              	.LBB596:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10904              		.loc 1 3243 1 is_stmt 1 view .LVU3095
 10905              	.LBB563:
3247:fltk-1.3.4-1/png/png.c ****    {
 10906              		.loc 1 3247 4 view .LVU3096
 10907 0545 E969FEFF 		jmp	.L1078
 10907      FF
 10908              	.LVL1033:
 10909              	.L1160:
3247:fltk-1.3.4-1/png/png.c ****    {
 10910              		.loc 1 3247 4 is_stmt 0 view .LVU3097
 10911              	.LBE563:
 10912              	.LBE596:
 10913              	.LBB597:
 10914              	.LBB550:
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10915              		.loc 1 3251 10 is_stmt 1 view .LVU3098
3251:fltk-1.3.4-1/png/png.c ****          return 1;
 10916              		.loc 1 3251 15 is_stmt 0 view .LVU3099
 10917 054a 41C7410C 		movl	$0, 12(%r9)
 10917      00000000 
3252:fltk-1.3.4-1/png/png.c ****       }
 10918              		.loc 1 3252 10 is_stmt 1 view .LVU3100
 10919              	.LVL1034:
3252:fltk-1.3.4-1/png/png.c ****       }
 10920              		.loc 1 3252 10 is_stmt 0 view .LVU3101
 10921              	.LBE550:
 10922              	.LBE597:
1483:fltk-1.3.4-1/png/png.c ****       return 1;
 10923              		.loc 1 1483 4 is_stmt 1 view .LVU3102
1483:fltk-1.3.4-1/png/png.c ****       return 1;
 10924              		.loc 1 1483 8 is_stmt 0 view .LVU3103
 10925 0552 498D7910 		leaq	16(%r9), %rdi
 10926              	.LVL1035:
1483:fltk-1.3.4-1/png/png.c ****       return 1;
 10927              		.loc 1 1483 8 view .LVU3104
 10928 0556 418B700C 		movl	12(%r8), %esi
 10929              	.LVL1036:
 10930              	.LBB598:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 10931              		.loc 1 3243 1 is_stmt 1 view .LVU3105
 10932              	.LBB557:
3247:fltk-1.3.4-1/png/png.c ****    {
 10933              		.loc 1 3247 4 view .LVU3106
 10934 055a E91DFEFF 		jmp	.L1076
 10934      FF
 10935              	.LBE557:
 10936              	.LBE598:
 10937              		.cfi_endproc
 10938              	.LFE74:
 10940              		.section	.rodata.png_colorspace_set_endpoints.str1.1,"aMS",@progbits,1
 10941              	.LC90:
 10942 0000 696E7661 		.string	"invalid end points"
 10942      6C696420 
 10942      656E6420 
 10942      706F696E 
 10942      747300
 10943              		.section	.rodata.png_colorspace_set_endpoints.str1.8,"aMS",@progbits,1
 10944              		.align 8
 10945              	.LC91:
 10946 0000 696E7465 		.string	"internal error checking chromaticities"
 10946      726E616C 
 10946      20657272 
 10946      6F722063 
 10946      6865636B 
 10947              		.section	.text.png_colorspace_set_endpoints,"ax",@progbits
 10948              		.p2align 4
 10949              		.globl	png_colorspace_set_endpoints
 10951              	png_colorspace_set_endpoints:
 10952              	.LVL1037:
 10953              	.LFB81:
1719:fltk-1.3.4-1/png/png.c ****    png_XYZ XYZ = *XYZ_in;
 10954              		.loc 1 1719 1 view -0
 10955              		.cfi_startproc
1719:fltk-1.3.4-1/png/png.c ****    png_XYZ XYZ = *XYZ_in;
 10956              		.loc 1 1719 1 is_stmt 0 view .LVU3108
 10957 0000 F30F1EFA 		endbr64
 10958 0004 4157     		pushq	%r15
 10959              		.cfi_def_cfa_offset 16
 10960              		.cfi_offset 15, -16
 10961 0006 4156     		pushq	%r14
 10962              		.cfi_def_cfa_offset 24
 10963              		.cfi_offset 14, -24
 10964 0008 4155     		pushq	%r13
 10965              		.cfi_def_cfa_offset 32
 10966              		.cfi_offset 13, -32
 10967 000a 4989FD   		movq	%rdi, %r13
 10968 000d 4154     		pushq	%r12
 10969              		.cfi_def_cfa_offset 40
 10970              		.cfi_offset 12, -40
 10971 000f 55       		pushq	%rbp
 10972              		.cfi_def_cfa_offset 48
 10973              		.cfi_offset 6, -48
 10974 0010 4889F5   		movq	%rsi, %rbp
 10975 0013 53       		pushq	%rbx
 10976              		.cfi_def_cfa_offset 56
 10977              		.cfi_offset 3, -56
 10978 0014 4881EC88 		subq	$136, %rsp
 10978      000000
 10979              		.cfi_def_cfa_offset 192
1720:fltk-1.3.4-1/png/png.c ****    png_xy xy;
 10980              		.loc 1 1720 12 view .LVU3109
 10981 001b F30F6F02 		movdqu	(%rdx), %xmm0
 10982 001f F30F6F4A 		movdqu	16(%rdx), %xmm1
 10982      10
1719:fltk-1.3.4-1/png/png.c ****    png_XYZ XYZ = *XYZ_in;
 10983              		.loc 1 1719 1 view .LVU3110
 10984 0024 64488B04 		movq	%fs:40, %rax
 10984      25280000 
 10984      00
 10985 002d 48894424 		movq	%rax, 120(%rsp)
 10985      78
 10986 0032 31C0     		xorl	%eax, %eax
1720:fltk-1.3.4-1/png/png.c ****    png_xy xy;
 10987              		.loc 1 1720 4 is_stmt 1 view .LVU3111
1720:fltk-1.3.4-1/png/png.c ****    png_xy xy;
 10988              		.loc 1 1720 12 is_stmt 0 view .LVU3112
 10989 0034 8B4220   		movl	32(%rdx), %eax
 10990 0037 0F294424 		movaps	%xmm0, 32(%rsp)
 10990      20
 10991              	.LBB624:
 10992              	.LBB625:
 10993              	.LBB626:
 10994              	.LBB627:
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 10995              		.loc 1 1505 11 view .LVU3113
 10996 003c 8B742424 		movl	36(%rsp), %esi
 10997              	.LVL1038:
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 10998              		.loc 1 1505 11 view .LVU3114
 10999              	.LBE627:
 11000              	.LBE626:
 11001              	.LBE625:
 11002              	.LBE624:
1720:fltk-1.3.4-1/png/png.c ****    png_xy xy;
 11003              		.loc 1 1720 12 view .LVU3115
 11004 0040 89442440 		movl	%eax, 64(%rsp)
1721:fltk-1.3.4-1/png/png.c **** 
 11005              		.loc 1 1721 4 is_stmt 1 view .LVU3116
1723:fltk-1.3.4-1/png/png.c ****    {
 11006              		.loc 1 1723 4 view .LVU3117
 11007              	.LVL1039:
 11008              	.LBB660:
 11009              	.LBI624:
1603:fltk-1.3.4-1/png/png.c **** {
 11010              		.loc 1 1603 1 view .LVU3118
 11011              	.LBB658:
1605:fltk-1.3.4-1/png/png.c ****    png_XYZ XYZtemp;
 11012              		.loc 1 1605 4 view .LVU3119
1606:fltk-1.3.4-1/png/png.c **** 
 11013              		.loc 1 1606 4 view .LVU3120
1608:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11014              		.loc 1 1608 4 view .LVU3121
 11015              	.LBB648:
 11016              	.LBI626:
1501:fltk-1.3.4-1/png/png.c **** {
 11017              		.loc 1 1501 1 view .LVU3122
 11018              	.LBB646:
1503:fltk-1.3.4-1/png/png.c **** 
 11019              		.loc 1 1503 4 view .LVU3123
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 11020              		.loc 1 1505 4 view .LVU3124
 11021              	.LBE646:
 11022              	.LBE648:
 11023              	.LBE658:
 11024              	.LBE660:
1720:fltk-1.3.4-1/png/png.c ****    png_xy xy;
 11025              		.loc 1 1720 12 is_stmt 0 view .LVU3125
 11026 0044 0F294C24 		movaps	%xmm1, 48(%rsp)
 11026      30
 11027              	.LBB661:
 11028              	.LBB659:
 11029              	.LBB649:
 11030              	.LBB647:
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 11031              		.loc 1 1505 7 view .LVU3126
 11032 0049 85F6     		testl	%esi, %esi
 11033 004b 0F883702 		js	.L1186
 11033      0000
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 11034              		.loc 1 1505 29 view .LVU3127
 11035 0051 8B442430 		movl	48(%rsp), %eax
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 11036              		.loc 1 1505 23 view .LVU3128
 11037 0055 85C0     		testl	%eax, %eax
 11038 0057 0F882B02 		js	.L1186
 11038      0000
 11039 005d 89CB     		movl	%ecx, %ebx
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 11040              		.loc 1 1505 49 view .LVU3129
 11041 005f 8B4C243C 		movl	60(%rsp), %ecx
 11042              	.LVL1040:
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 11043              		.loc 1 1505 43 view .LVU3130
 11044 0063 85C9     		testl	%ecx, %ecx
 11045 0065 0F881D02 		js	.L1186
 11045      0000
1506:fltk-1.3.4-1/png/png.c ****       XYZ->red_Z < 0 || XYZ->green_Z < 0 || XYZ->blue_Z < 0)
 11046              		.loc 1 1506 10 view .LVU3131
 11047 006b 448B4424 		movl	32(%rsp), %r8d
 11047      20
1505:fltk-1.3.4-1/png/png.c ****       XYZ->red_X < 0 || XYZ->green_X < 0 || XYZ->blue_X < 0 ||
 11048              		.loc 1 1505 62 view .LVU3132
 11049 0070 4585C0   		testl	%r8d, %r8d
 11050 0073 0F880F02 		js	.L1186
 11050      0000
1506:fltk-1.3.4-1/png/png.c ****       XYZ->red_Z < 0 || XYZ->green_Z < 0 || XYZ->blue_Z < 0)
 11051              		.loc 1 1506 28 view .LVU3133
 11052 0079 8B54242C 		movl	44(%rsp), %edx
 11053              	.LVL1041:
1506:fltk-1.3.4-1/png/png.c ****       XYZ->red_Z < 0 || XYZ->green_Z < 0 || XYZ->blue_Z < 0)
 11054              		.loc 1 1506 22 view .LVU3134
 11055 007d 85D2     		testl	%edx, %edx
 11056 007f 0F880302 		js	.L1186
 11056      0000
1506:fltk-1.3.4-1/png/png.c ****       XYZ->red_Z < 0 || XYZ->green_Z < 0 || XYZ->blue_Z < 0)
 11057              		.loc 1 1506 48 view .LVU3135
 11058 0085 8B7C2438 		movl	56(%rsp), %edi
 11059              	.LVL1042:
1506:fltk-1.3.4-1/png/png.c ****       XYZ->red_Z < 0 || XYZ->green_Z < 0 || XYZ->blue_Z < 0)
 11060              		.loc 1 1506 42 view .LVU3136
 11061 0089 85FF     		testl	%edi, %edi
 11062 008b 0F88F701 		js	.L1186
 11062      0000
1506:fltk-1.3.4-1/png/png.c ****       XYZ->red_Z < 0 || XYZ->green_Z < 0 || XYZ->blue_Z < 0)
 11063              		.loc 1 1506 61 view .LVU3137
 11064 0091 448B5C24 		movl	40(%rsp), %r11d
 11064      28
 11065 0096 4585DB   		testl	%r11d, %r11d
 11066 0099 0F88E901 		js	.L1186
 11066      0000
1507:fltk-1.3.4-1/png/png.c ****       return 1;
 11067              		.loc 1 1507 22 view .LVU3138
 11068 009f 448B5424 		movl	52(%rsp), %r10d
 11068      34
 11069 00a4 4585D2   		testl	%r10d, %r10d
 11070 00a7 0F88DB01 		js	.L1186
 11070      0000
1507:fltk-1.3.4-1/png/png.c ****       return 1;
 11071              		.loc 1 1507 42 view .LVU3139
 11072 00ad 448B4C24 		movl	64(%rsp), %r9d
 11072      40
 11073 00b2 4585C9   		testl	%r9d, %r9d
 11074 00b5 0F88CD01 		js	.L1186
 11074      0000
1515:fltk-1.3.4-1/png/png.c ****    if (0x7fffffff - Y < XYZ->green_X)
 11075              		.loc 1 1515 4 is_stmt 1 view .LVU3140
 11076              	.LVL1043:
1516:fltk-1.3.4-1/png/png.c ****       return 1;
 11077              		.loc 1 1516 4 view .LVU3141
1516:fltk-1.3.4-1/png/png.c ****       return 1;
 11078              		.loc 1 1516 19 is_stmt 0 view .LVU3142
 11079 00bb 41B9FFFF 		movl	$2147483647, %r9d
 11079      FF7F
 11080 00c1 4129F1   		subl	%esi, %r9d
1516:fltk-1.3.4-1/png/png.c ****       return 1;
 11081              		.loc 1 1516 7 view .LVU3143
 11082 00c4 4439CA   		cmpl	%r9d, %edx
 11083 00c7 0F8FBB01 		jg	.L1186
 11083      0000
1518:fltk-1.3.4-1/png/png.c ****    if (0x7fffffff - Y < XYZ->blue_X)
 11084              		.loc 1 1518 4 is_stmt 1 view .LVU3144
1518:fltk-1.3.4-1/png/png.c ****    if (0x7fffffff - Y < XYZ->blue_X)
 11085              		.loc 1 1518 6 is_stmt 0 view .LVU3145
 11086 00cd 01F0     		addl	%esi, %eax
 11087              	.LVL1044:
1519:fltk-1.3.4-1/png/png.c ****       return 1;
 11088              		.loc 1 1519 4 is_stmt 1 view .LVU3146
1519:fltk-1.3.4-1/png/png.c ****       return 1;
 11089              		.loc 1 1519 19 is_stmt 0 view .LVU3147
 11090 00cf BAFFFFFF 		movl	$2147483647, %edx
 11090      7F
 11091 00d4 29C2     		subl	%eax, %edx
1519:fltk-1.3.4-1/png/png.c ****       return 1;
 11092              		.loc 1 1519 7 view .LVU3148
 11093 00d6 39D7     		cmpl	%edx, %edi
 11094 00d8 0F8FAA01 		jg	.L1186
 11094      0000
1521:fltk-1.3.4-1/png/png.c **** 
 11095              		.loc 1 1521 4 is_stmt 1 view .LVU3149
1521:fltk-1.3.4-1/png/png.c **** 
 11096              		.loc 1 1521 6 is_stmt 0 view .LVU3150
 11097 00de 01C1     		addl	%eax, %ecx
 11098              	.LVL1045:
1523:fltk-1.3.4-1/png/png.c ****    {
 11099              		.loc 1 1523 4 is_stmt 1 view .LVU3151
1523:fltk-1.3.4-1/png/png.c ****    {
 11100              		.loc 1 1523 7 is_stmt 0 view .LVU3152
 11101 00e0 81F9A086 		cmpl	$100000, %ecx
 11101      0100
 11102 00e6 0F842401 		je	.L1169
 11102      0000
1525:fltk-1.3.4-1/png/png.c ****          return 1;
 11103              		.loc 1 1525 7 is_stmt 1 view .LVU3153
 11104              	.LVL1046:
 11105              	.LBB628:
 11106              	.LBI628:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11107              		.loc 1 3243 1 view .LVU3154
 11108              	.LBB629:
3247:fltk-1.3.4-1/png/png.c ****    {
 11109              		.loc 1 3247 4 view .LVU3155
3247:fltk-1.3.4-1/png/png.c ****    {
 11110              		.loc 1 3247 7 is_stmt 0 view .LVU3156
 11111 00ec 85C9     		testl	%ecx, %ecx
 11112 00ee 0F849401 		je	.L1186
 11112      0000
3249:fltk-1.3.4-1/png/png.c ****       {
 11113              		.loc 1 3249 7 is_stmt 1 view .LVU3157
3249:fltk-1.3.4-1/png/png.c ****       {
 11114              		.loc 1 3249 10 is_stmt 0 view .LVU3158
 11115 00f4 4585C0   		testl	%r8d, %r8d
 11116 00f7 741E     		je	.L1170
 11117 00f9 488D7C24 		leaq	32(%rsp), %rdi
 11117      20
 11118              	.LVL1047:
3249:fltk-1.3.4-1/png/png.c ****       {
 11119              		.loc 1 3249 10 view .LVU3159
 11120 00fe BAA08601 		movl	$100000, %edx
 11120      00
 11121 0103 4489C6   		movl	%r8d, %esi
 11122 0106 E8000000 		call	png_muldiv.part.0
 11122      00
 11123              	.LVL1048:
3249:fltk-1.3.4-1/png/png.c ****       {
 11124              		.loc 1 3249 10 view .LVU3160
 11125              	.LBE629:
 11126              	.LBE628:
1525:fltk-1.3.4-1/png/png.c ****          return 1;
 11127              		.loc 1 1525 10 view .LVU3161
 11128 010b 85C0     		testl	%eax, %eax
 11129 010d 0F847501 		je	.L1186
 11129      0000
 11130 0113 8B742424 		movl	36(%rsp), %esi
 11131              	.LVL1049:
 11132              	.L1170:
1527:fltk-1.3.4-1/png/png.c ****          return 1;
 11133              		.loc 1 1527 7 is_stmt 1 view .LVU3162
 11134              	.LBB630:
 11135              	.LBI630:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11136              		.loc 1 3243 1 view .LVU3163
 11137              	.LBB631:
3247:fltk-1.3.4-1/png/png.c ****    {
 11138              		.loc 1 3247 4 view .LVU3164
3249:fltk-1.3.4-1/png/png.c ****       {
 11139              		.loc 1 3249 7 view .LVU3165
3249:fltk-1.3.4-1/png/png.c ****       {
 11140              		.loc 1 3249 10 is_stmt 0 view .LVU3166
 11141 0117 85F6     		testl	%esi, %esi
 11142 0119 7417     		je	.L1174
 11143 011b 488D7C24 		leaq	36(%rsp), %rdi
 11143      24
 11144              	.LVL1050:
3249:fltk-1.3.4-1/png/png.c ****       {
 11145              		.loc 1 3249 10 view .LVU3167
 11146 0120 BAA08601 		movl	$100000, %edx
 11146      00
 11147 0125 E8000000 		call	png_muldiv.part.0
 11147      00
 11148              	.LVL1051:
3249:fltk-1.3.4-1/png/png.c ****       {
 11149              		.loc 1 3249 10 view .LVU3168
 11150              	.LBE631:
 11151              	.LBE630:
1527:fltk-1.3.4-1/png/png.c ****          return 1;
 11152              		.loc 1 1527 10 view .LVU3169
 11153 012a 85C0     		testl	%eax, %eax
 11154 012c 0F845601 		je	.L1186
 11154      0000
 11155              	.L1174:
1529:fltk-1.3.4-1/png/png.c ****          return 1;
 11156              		.loc 1 1529 7 is_stmt 1 view .LVU3170
1529:fltk-1.3.4-1/png/png.c ****          return 1;
 11157              		.loc 1 1529 11 is_stmt 0 view .LVU3171
 11158 0132 8B742428 		movl	40(%rsp), %esi
 11159              	.LVL1052:
 11160              	.LBB632:
 11161              	.LBI632:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11162              		.loc 1 3243 1 is_stmt 1 view .LVU3172
 11163              	.LBB633:
3247:fltk-1.3.4-1/png/png.c ****    {
 11164              		.loc 1 3247 4 view .LVU3173
3249:fltk-1.3.4-1/png/png.c ****       {
 11165              		.loc 1 3249 7 view .LVU3174
3249:fltk-1.3.4-1/png/png.c ****       {
 11166              		.loc 1 3249 10 is_stmt 0 view .LVU3175
 11167 0136 85F6     		testl	%esi, %esi
 11168 0138 7417     		je	.L1172
 11169 013a 488D7C24 		leaq	40(%rsp), %rdi
 11169      28
 11170              	.LVL1053:
3249:fltk-1.3.4-1/png/png.c ****       {
 11171              		.loc 1 3249 10 view .LVU3176
 11172 013f BAA08601 		movl	$100000, %edx
 11172      00
 11173 0144 E8000000 		call	png_muldiv.part.0
 11173      00
 11174              	.LVL1054:
3249:fltk-1.3.4-1/png/png.c ****       {
 11175              		.loc 1 3249 10 view .LVU3177
 11176              	.LBE633:
 11177              	.LBE632:
1529:fltk-1.3.4-1/png/png.c ****          return 1;
 11178              		.loc 1 1529 10 view .LVU3178
 11179 0149 85C0     		testl	%eax, %eax
 11180 014b 0F843701 		je	.L1186
 11180      0000
 11181              	.L1172:
1532:fltk-1.3.4-1/png/png.c ****          return 1;
 11182              		.loc 1 1532 7 is_stmt 1 view .LVU3179
1532:fltk-1.3.4-1/png/png.c ****          return 1;
 11183              		.loc 1 1532 11 is_stmt 0 view .LVU3180
 11184 0151 8B74242C 		movl	44(%rsp), %esi
 11185              	.LVL1055:
 11186              	.LBB634:
 11187              	.LBI634:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11188              		.loc 1 3243 1 is_stmt 1 view .LVU3181
 11189              	.LBB635:
3247:fltk-1.3.4-1/png/png.c ****    {
 11190              		.loc 1 3247 4 view .LVU3182
3249:fltk-1.3.4-1/png/png.c ****       {
 11191              		.loc 1 3249 7 view .LVU3183
3249:fltk-1.3.4-1/png/png.c ****       {
 11192              		.loc 1 3249 10 is_stmt 0 view .LVU3184
 11193 0155 85F6     		testl	%esi, %esi
 11194 0157 7417     		je	.L1175
 11195 0159 488D7C24 		leaq	44(%rsp), %rdi
 11195      2C
 11196              	.LVL1056:
3249:fltk-1.3.4-1/png/png.c ****       {
 11197              		.loc 1 3249 10 view .LVU3185
 11198 015e BAA08601 		movl	$100000, %edx
 11198      00
 11199 0163 E8000000 		call	png_muldiv.part.0
 11199      00
 11200              	.LVL1057:
3249:fltk-1.3.4-1/png/png.c ****       {
 11201              		.loc 1 3249 10 view .LVU3186
 11202              	.LBE635:
 11203              	.LBE634:
1532:fltk-1.3.4-1/png/png.c ****          return 1;
 11204              		.loc 1 1532 10 view .LVU3187
 11205 0168 85C0     		testl	%eax, %eax
 11206 016a 0F841801 		je	.L1186
 11206      0000
 11207              	.L1175:
1534:fltk-1.3.4-1/png/png.c ****          return 1;
 11208              		.loc 1 1534 7 is_stmt 1 view .LVU3188
1534:fltk-1.3.4-1/png/png.c ****          return 1;
 11209              		.loc 1 1534 11 is_stmt 0 view .LVU3189
 11210 0170 8B742430 		movl	48(%rsp), %esi
 11211              	.LVL1058:
 11212              	.LBB636:
 11213              	.LBI636:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11214              		.loc 1 3243 1 is_stmt 1 view .LVU3190
 11215              	.LBB637:
3247:fltk-1.3.4-1/png/png.c ****    {
 11216              		.loc 1 3247 4 view .LVU3191
3249:fltk-1.3.4-1/png/png.c ****       {
 11217              		.loc 1 3249 7 view .LVU3192
3249:fltk-1.3.4-1/png/png.c ****       {
 11218              		.loc 1 3249 10 is_stmt 0 view .LVU3193
 11219 0174 85F6     		testl	%esi, %esi
 11220 0176 7417     		je	.L1177
 11221 0178 488D7C24 		leaq	48(%rsp), %rdi
 11221      30
 11222              	.LVL1059:
3249:fltk-1.3.4-1/png/png.c ****       {
 11223              		.loc 1 3249 10 view .LVU3194
 11224 017d BAA08601 		movl	$100000, %edx
 11224      00
 11225 0182 E8000000 		call	png_muldiv.part.0
 11225      00
 11226              	.LVL1060:
3249:fltk-1.3.4-1/png/png.c ****       {
 11227              		.loc 1 3249 10 view .LVU3195
 11228              	.LBE637:
 11229              	.LBE636:
1534:fltk-1.3.4-1/png/png.c ****          return 1;
 11230              		.loc 1 1534 10 view .LVU3196
 11231 0187 85C0     		testl	%eax, %eax
 11232 0189 0F84F900 		je	.L1186
 11232      0000
 11233              	.L1177:
1536:fltk-1.3.4-1/png/png.c ****          return 1;
 11234              		.loc 1 1536 7 is_stmt 1 view .LVU3197
1536:fltk-1.3.4-1/png/png.c ****          return 1;
 11235              		.loc 1 1536 11 is_stmt 0 view .LVU3198
 11236 018f 8B742434 		movl	52(%rsp), %esi
 11237              	.LVL1061:
 11238              	.LBB638:
 11239              	.LBI638:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11240              		.loc 1 3243 1 is_stmt 1 view .LVU3199
 11241              	.LBB639:
3247:fltk-1.3.4-1/png/png.c ****    {
 11242              		.loc 1 3247 4 view .LVU3200
3249:fltk-1.3.4-1/png/png.c ****       {
 11243              		.loc 1 3249 7 view .LVU3201
3249:fltk-1.3.4-1/png/png.c ****       {
 11244              		.loc 1 3249 10 is_stmt 0 view .LVU3202
 11245 0193 85F6     		testl	%esi, %esi
 11246 0195 7417     		je	.L1179
 11247 0197 488D7C24 		leaq	52(%rsp), %rdi
 11247      34
 11248              	.LVL1062:
3249:fltk-1.3.4-1/png/png.c ****       {
 11249              		.loc 1 3249 10 view .LVU3203
 11250 019c BAA08601 		movl	$100000, %edx
 11250      00
 11251 01a1 E8000000 		call	png_muldiv.part.0
 11251      00
 11252              	.LVL1063:
3249:fltk-1.3.4-1/png/png.c ****       {
 11253              		.loc 1 3249 10 view .LVU3204
 11254              	.LBE639:
 11255              	.LBE638:
1536:fltk-1.3.4-1/png/png.c ****          return 1;
 11256              		.loc 1 1536 10 view .LVU3205
 11257 01a6 85C0     		testl	%eax, %eax
 11258 01a8 0F84DA00 		je	.L1186
 11258      0000
 11259              	.L1179:
1539:fltk-1.3.4-1/png/png.c ****          return 1;
 11260              		.loc 1 1539 7 is_stmt 1 view .LVU3206
1539:fltk-1.3.4-1/png/png.c ****          return 1;
 11261              		.loc 1 1539 11 is_stmt 0 view .LVU3207
 11262 01ae 8B742438 		movl	56(%rsp), %esi
 11263              	.LVL1064:
 11264              	.LBB640:
 11265              	.LBI640:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11266              		.loc 1 3243 1 is_stmt 1 view .LVU3208
 11267              	.LBB641:
3247:fltk-1.3.4-1/png/png.c ****    {
 11268              		.loc 1 3247 4 view .LVU3209
3249:fltk-1.3.4-1/png/png.c ****       {
 11269              		.loc 1 3249 7 view .LVU3210
3249:fltk-1.3.4-1/png/png.c ****       {
 11270              		.loc 1 3249 10 is_stmt 0 view .LVU3211
 11271 01b2 85F6     		testl	%esi, %esi
 11272 01b4 7417     		je	.L1181
 11273 01b6 488D7C24 		leaq	56(%rsp), %rdi
 11273      38
 11274              	.LVL1065:
3249:fltk-1.3.4-1/png/png.c ****       {
 11275              		.loc 1 3249 10 view .LVU3212
 11276 01bb BAA08601 		movl	$100000, %edx
 11276      00
 11277 01c0 E8000000 		call	png_muldiv.part.0
 11277      00
 11278              	.LVL1066:
3249:fltk-1.3.4-1/png/png.c ****       {
 11279              		.loc 1 3249 10 view .LVU3213
 11280              	.LBE641:
 11281              	.LBE640:
1539:fltk-1.3.4-1/png/png.c ****          return 1;
 11282              		.loc 1 1539 10 view .LVU3214
 11283 01c5 85C0     		testl	%eax, %eax
 11284 01c7 0F84BB00 		je	.L1186
 11284      0000
 11285              	.L1181:
1541:fltk-1.3.4-1/png/png.c ****          return 1;
 11286              		.loc 1 1541 7 is_stmt 1 view .LVU3215
1541:fltk-1.3.4-1/png/png.c ****          return 1;
 11287              		.loc 1 1541 11 is_stmt 0 view .LVU3216
 11288 01cd 8B74243C 		movl	60(%rsp), %esi
 11289              	.LVL1067:
 11290              	.LBB642:
 11291              	.LBI642:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11292              		.loc 1 3243 1 is_stmt 1 view .LVU3217
 11293              	.LBB643:
3247:fltk-1.3.4-1/png/png.c ****    {
 11294              		.loc 1 3247 4 view .LVU3218
3249:fltk-1.3.4-1/png/png.c ****       {
 11295              		.loc 1 3249 7 view .LVU3219
3249:fltk-1.3.4-1/png/png.c ****       {
 11296              		.loc 1 3249 10 is_stmt 0 view .LVU3220
 11297 01d1 85F6     		testl	%esi, %esi
 11298 01d3 7417     		je	.L1183
 11299 01d5 488D7C24 		leaq	60(%rsp), %rdi
 11299      3C
 11300              	.LVL1068:
3249:fltk-1.3.4-1/png/png.c ****       {
 11301              		.loc 1 3249 10 view .LVU3221
 11302 01da BAA08601 		movl	$100000, %edx
 11302      00
 11303 01df E8000000 		call	png_muldiv.part.0
 11303      00
 11304              	.LVL1069:
3249:fltk-1.3.4-1/png/png.c ****       {
 11305              		.loc 1 3249 10 view .LVU3222
 11306              	.LBE643:
 11307              	.LBE642:
1541:fltk-1.3.4-1/png/png.c ****          return 1;
 11308              		.loc 1 1541 10 view .LVU3223
 11309 01e4 85C0     		testl	%eax, %eax
 11310 01e6 0F849C00 		je	.L1186
 11310      0000
 11311              	.L1183:
1543:fltk-1.3.4-1/png/png.c ****          return 1;
 11312              		.loc 1 1543 7 is_stmt 1 view .LVU3224
1543:fltk-1.3.4-1/png/png.c ****          return 1;
 11313              		.loc 1 1543 11 is_stmt 0 view .LVU3225
 11314 01ec 8B742440 		movl	64(%rsp), %esi
 11315              	.LVL1070:
 11316              	.LBB644:
 11317              	.LBI644:
3243:fltk-1.3.4-1/png/png.c ****     png_int_32 divisor)
 11318              		.loc 1 3243 1 is_stmt 1 view .LVU3226
 11319              	.LBB645:
3247:fltk-1.3.4-1/png/png.c ****    {
 11320              		.loc 1 3247 4 view .LVU3227
3249:fltk-1.3.4-1/png/png.c ****       {
 11321              		.loc 1 3249 7 view .LVU3228
3249:fltk-1.3.4-1/png/png.c ****       {
 11322              		.loc 1 3249 10 is_stmt 0 view .LVU3229
 11323 01f0 85F6     		testl	%esi, %esi
 11324 01f2 741C     		je	.L1169
 11325 01f4 488D7C24 		leaq	64(%rsp), %rdi
 11325      40
 11326              	.LVL1071:
3249:fltk-1.3.4-1/png/png.c ****       {
 11327              		.loc 1 3249 10 view .LVU3230
 11328 01f9 BAA08601 		movl	$100000, %edx
 11328      00
 11329 01fe E8000000 		call	png_muldiv.part.0
 11329      00
 11330              	.LVL1072:
3249:fltk-1.3.4-1/png/png.c ****       {
 11331              		.loc 1 3249 10 view .LVU3231
 11332              	.LBE645:
 11333              	.LBE644:
1543:fltk-1.3.4-1/png/png.c ****          return 1;
 11334              		.loc 1 1543 10 view .LVU3232
 11335 0203 85C0     		testl	%eax, %eax
 11336 0205 0F847D00 		je	.L1186
 11336      0000
 11337 020b 0F1F4400 		.p2align 4,,10
 11337      00
 11338              		.p2align 3
 11339              	.L1169:
 11340              	.LVL1073:
1543:fltk-1.3.4-1/png/png.c ****          return 1;
 11341              		.loc 1 1543 10 view .LVU3233
 11342              	.LBE647:
 11343              	.LBE649:
1612:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11344              		.loc 1 1612 4 is_stmt 1 view .LVU3234
1612:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11345              		.loc 1 1612 13 is_stmt 0 view .LVU3235
 11346 0210 4C8D6424 		leaq	32(%rsp), %r12
 11346      20
 11347              	.LVL1074:
1612:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11348              		.loc 1 1612 13 view .LVU3236
 11349 0215 4989E6   		movq	%rsp, %r14
 11350 0218 4C89E6   		movq	%r12, %rsi
 11351 021b 4C89F7   		movq	%r14, %rdi
 11352 021e E8000000 		call	png_xy_from_XYZ
 11352      00
 11353              	.LVL1075:
1613:fltk-1.3.4-1/png/png.c ****       return result;
 11354              		.loc 1 1613 4 is_stmt 1 view .LVU3237
1613:fltk-1.3.4-1/png/png.c ****       return result;
 11355              		.loc 1 1613 7 is_stmt 0 view .LVU3238
 11356 0223 85C0     		testl	%eax, %eax
 11357 0225 0F859D00 		jne	.L1191
 11357      0000
1616:fltk-1.3.4-1/png/png.c ****    return png_colorspace_check_xy(&XYZtemp, xy);
 11358              		.loc 1 1616 4 is_stmt 1 view .LVU3239
1616:fltk-1.3.4-1/png/png.c ****    return png_colorspace_check_xy(&XYZtemp, xy);
 11359              		.loc 1 1616 12 is_stmt 0 view .LVU3240
 11360 022b 660F6F54 		movdqa	32(%rsp), %xmm2
 11360      2420
 11361 0231 660F6F5C 		movdqa	48(%rsp), %xmm3
 11361      2430
 11362              	.LBB650:
 11363              	.LBB651:
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11364              		.loc 1 1583 13 view .LVU3241
 11365 0237 4C8D7C24 		leaq	80(%rsp), %r15
 11365      50
 11366 023c 4C89F6   		movq	%r14, %rsi
 11367              	.LBE651:
 11368              	.LBE650:
1616:fltk-1.3.4-1/png/png.c ****    return png_colorspace_check_xy(&XYZtemp, xy);
 11369              		.loc 1 1616 12 view .LVU3242
 11370 023f 8B442440 		movl	64(%rsp), %eax
 11371              	.LVL1076:
 11372              	.LBB655:
 11373              	.LBB652:
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11374              		.loc 1 1583 13 view .LVU3243
 11375 0243 4C89FF   		movq	%r15, %rdi
 11376              	.LBE652:
 11377              	.LBE655:
1616:fltk-1.3.4-1/png/png.c ****    return png_colorspace_check_xy(&XYZtemp, xy);
 11378              		.loc 1 1616 12 view .LVU3244
 11379 0246 0F295424 		movaps	%xmm2, 80(%rsp)
 11379      50
 11380 024b 89442470 		movl	%eax, 112(%rsp)
1617:fltk-1.3.4-1/png/png.c **** }
 11381              		.loc 1 1617 4 is_stmt 1 view .LVU3245
 11382              	.LVL1077:
 11383              	.LBB656:
 11384              	.LBI650:
1577:fltk-1.3.4-1/png/png.c **** {
 11385              		.loc 1 1577 1 view .LVU3246
 11386              	.LBB653:
1579:fltk-1.3.4-1/png/png.c ****    png_xy xy_test;
 11387              		.loc 1 1579 4 view .LVU3247
1580:fltk-1.3.4-1/png/png.c **** 
 11388              		.loc 1 1580 4 view .LVU3248
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11389              		.loc 1 1583 4 view .LVU3249
 11390              	.LBE653:
 11391              	.LBE656:
1616:fltk-1.3.4-1/png/png.c ****    return png_colorspace_check_xy(&XYZtemp, xy);
 11392              		.loc 1 1616 12 is_stmt 0 view .LVU3250
 11393 024f 0F295C24 		movaps	%xmm3, 96(%rsp)
 11393      60
 11394              	.LBB657:
 11395              	.LBB654:
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11396              		.loc 1 1583 13 view .LVU3251
 11397 0254 E8000000 		call	png_XYZ_from_xy
 11397      00
 11398              	.LVL1078:
1584:fltk-1.3.4-1/png/png.c ****       return result;
 11399              		.loc 1 1584 4 is_stmt 1 view .LVU3252
1584:fltk-1.3.4-1/png/png.c ****       return result;
 11400              		.loc 1 1584 7 is_stmt 0 view .LVU3253
 11401 0259 85C0     		testl	%eax, %eax
 11402 025b 756B     		jne	.L1191
 11403 025d 4C89F6   		movq	%r14, %rsi
 11404 0260 4C89FF   		movq	%r15, %rdi
 11405 0263 E8000000 		call	png_colorspace_check_xy.part.0
 11405      00
 11406              	.LVL1079:
1584:fltk-1.3.4-1/png/png.c ****       return result;
 11407              		.loc 1 1584 7 view .LVU3254
 11408              	.LBE654:
 11409              	.LBE657:
 11410              	.LBE659:
 11411              	.LBE661:
1723:fltk-1.3.4-1/png/png.c ****    {
 11412              		.loc 1 1723 4 view .LVU3255
 11413 0268 85C0     		testl	%eax, %eax
 11414 026a 755C     		jne	.L1191
1726:fltk-1.3.4-1/png/png.c ****             preferred);
 11415              		.loc 1 1726 10 is_stmt 1 view .LVU3256
1726:fltk-1.3.4-1/png/png.c ****             preferred);
 11416              		.loc 1 1726 17 is_stmt 0 view .LVU3257
 11417 026c 4189D8   		movl	%ebx, %r8d
 11418 026f 4C89E1   		movq	%r12, %rcx
 11419 0272 4C89F2   		movq	%r14, %rdx
 11420 0275 4889EE   		movq	%rbp, %rsi
 11421 0278 4C89EF   		movq	%r13, %rdi
 11422 027b E8000000 		call	png_colorspace_set_xy_and_XYZ
 11422      00
 11423              	.LVL1080:
 11424 0280 EB1D     		jmp	.L1167
 11425              	.LVL1081:
 11426              		.p2align 4,,10
 11427 0282 660F1F44 		.p2align 3
 11427      0000
 11428              	.L1186:
1731:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "invalid end points");
 11429              		.loc 1 1731 10 is_stmt 1 view .LVU3258
1731:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "invalid end points");
 11430              		.loc 1 1731 28 is_stmt 0 view .LVU3259
 11431 0288 66814D4A 		orw	$-32768, 74(%rbp)
 11431      0080
1732:fltk-1.3.4-1/png/png.c ****          break;
 11432              		.loc 1 1732 10 is_stmt 1 view .LVU3260
 11433 028e 488D3500 		leaq	.LC90(%rip), %rsi
 11433      000000
 11434 0295 4C89EF   		movq	%r13, %rdi
 11435 0298 E8000000 		call	png_benign_error@PLT
 11435      00
 11436              	.LVL1082:
1733:fltk-1.3.4-1/png/png.c **** 
 11437              		.loc 1 1733 10 view .LVU3261
1738:fltk-1.3.4-1/png/png.c ****    }
 11438              		.loc 1 1738 10 view .LVU3262
1741:fltk-1.3.4-1/png/png.c **** }
 11439              		.loc 1 1741 4 view .LVU3263
1741:fltk-1.3.4-1/png/png.c **** }
 11440              		.loc 1 1741 11 is_stmt 0 view .LVU3264
 11441 029d 31C0     		xorl	%eax, %eax
 11442              	.L1167:
1742:fltk-1.3.4-1/png/png.c **** 
 11443              		.loc 1 1742 1 view .LVU3265
 11444 029f 488B5C24 		movq	120(%rsp), %rbx
 11444      78
 11445 02a4 6448331C 		xorq	%fs:40, %rbx
 11445      25280000 
 11445      00
 11446 02ad 7533     		jne	.L1259
 11447 02af 4881C488 		addq	$136, %rsp
 11447      000000
 11448              		.cfi_remember_state
 11449              		.cfi_def_cfa_offset 56
 11450 02b6 5B       		popq	%rbx
 11451              		.cfi_def_cfa_offset 48
 11452 02b7 5D       		popq	%rbp
 11453              		.cfi_def_cfa_offset 40
 11454              	.LVL1083:
1742:fltk-1.3.4-1/png/png.c **** 
 11455              		.loc 1 1742 1 view .LVU3266
 11456 02b8 415C     		popq	%r12
 11457              		.cfi_def_cfa_offset 32
 11458 02ba 415D     		popq	%r13
 11459              		.cfi_def_cfa_offset 24
 11460              	.LVL1084:
1742:fltk-1.3.4-1/png/png.c **** 
 11461              		.loc 1 1742 1 view .LVU3267
 11462 02bc 415E     		popq	%r14
 11463              		.cfi_def_cfa_offset 16
 11464 02be 415F     		popq	%r15
 11465              		.cfi_def_cfa_offset 8
 11466 02c0 C3       		ret
 11467              	.LVL1085:
 11468              		.p2align 4,,10
 11469 02c1 0F1F8000 		.p2align 3
 11469      000000
 11470              	.L1191:
 11471              		.cfi_restore_state
1723:fltk-1.3.4-1/png/png.c ****    {
 11472              		.loc 1 1723 4 view .LVU3268
 11473 02c8 83F801   		cmpl	$1, %eax
 11474 02cb 74BB     		je	.L1186
1736:fltk-1.3.4-1/png/png.c ****          png_error(png_ptr, "internal error checking chromaticities");
 11475              		.loc 1 1736 10 is_stmt 1 view .LVU3269
1736:fltk-1.3.4-1/png/png.c ****          png_error(png_ptr, "internal error checking chromaticities");
 11476              		.loc 1 1736 28 is_stmt 0 view .LVU3270
 11477 02cd 66814D4A 		orw	$-32768, 74(%rbp)
 11477      0080
1737:fltk-1.3.4-1/png/png.c ****          break;
 11478              		.loc 1 1737 10 is_stmt 1 view .LVU3271
 11479 02d3 488D3500 		leaq	.LC91(%rip), %rsi
 11479      000000
 11480 02da 4C89EF   		movq	%r13, %rdi
 11481 02dd E8000000 		call	png_error@PLT
 11481      00
 11482              	.LVL1086:
 11483              	.L1259:
1742:fltk-1.3.4-1/png/png.c **** 
 11484              		.loc 1 1742 1 is_stmt 0 view .LVU3272
 11485 02e2 E8000000 		call	__stack_chk_fail@PLT
 11485      00
 11486              	.LVL1087:
 11487              		.cfi_endproc
 11488              	.LFE81:
 11490              		.section	.rodata.png_colorspace_set_chromaticities.str1.1,"aMS",@progbits,1
 11491              	.LC92:
 11492 0000 696E7661 		.string	"invalid chromaticities"
 11492      6C696420 
 11492      6368726F 
 11492      6D617469 
 11492      63697469 
 11493              		.section	.text.png_colorspace_set_chromaticities,"ax",@progbits
 11494              		.p2align 4
 11495              		.globl	png_colorspace_set_chromaticities
 11497              	png_colorspace_set_chromaticities:
 11498              	.LVL1088:
 11499              	.LFB80:
1681:fltk-1.3.4-1/png/png.c ****    /* We must check the end points to ensure they are reasonable - in the past
 11500              		.loc 1 1681 1 is_stmt 1 view -0
 11501              		.cfi_startproc
1681:fltk-1.3.4-1/png/png.c ****    /* We must check the end points to ensure they are reasonable - in the past
 11502              		.loc 1 1681 1 is_stmt 0 view .LVU3274
 11503 0000 F30F1EFA 		endbr64
 11504 0004 4156     		pushq	%r14
 11505              		.cfi_def_cfa_offset 16
 11506              		.cfi_offset 14, -16
 11507 0006 4155     		pushq	%r13
 11508              		.cfi_def_cfa_offset 24
 11509              		.cfi_offset 13, -24
 11510 0008 4989D5   		movq	%rdx, %r13
 11511 000b 4154     		pushq	%r12
 11512              		.cfi_def_cfa_offset 32
 11513              		.cfi_offset 12, -32
 11514 000d 4989FC   		movq	%rdi, %r12
 11515 0010 55       		pushq	%rbp
 11516              		.cfi_def_cfa_offset 40
 11517              		.cfi_offset 6, -40
 11518 0011 4889F5   		movq	%rsi, %rbp
 11519              	.LBB664:
 11520              	.LBB665:
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11521              		.loc 1 1583 13 view .LVU3275
 11522 0014 4889D6   		movq	%rdx, %rsi
 11523              	.LVL1089:
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11524              		.loc 1 1583 13 view .LVU3276
 11525              	.LBE665:
 11526              	.LBE664:
1681:fltk-1.3.4-1/png/png.c ****    /* We must check the end points to ensure they are reasonable - in the past
 11527              		.loc 1 1681 1 view .LVU3277
 11528 0017 53       		pushq	%rbx
 11529              		.cfi_def_cfa_offset 48
 11530              		.cfi_offset 3, -48
 11531 0018 89CB     		movl	%ecx, %ebx
 11532 001a 4883EC30 		subq	$48, %rsp
 11533              		.cfi_def_cfa_offset 96
1681:fltk-1.3.4-1/png/png.c ****    /* We must check the end points to ensure they are reasonable - in the past
 11534              		.loc 1 1681 1 view .LVU3278
 11535 001e 64488B04 		movq	%fs:40, %rax
 11535      25280000 
 11535      00
 11536 0027 48894424 		movq	%rax, 40(%rsp)
 11536      28
 11537 002c 31C0     		xorl	%eax, %eax
1688:fltk-1.3.4-1/png/png.c **** 
 11538              		.loc 1 1688 4 is_stmt 1 view .LVU3279
1690:fltk-1.3.4-1/png/png.c ****    {
 11539              		.loc 1 1690 4 view .LVU3280
 11540              	.LVL1090:
 11541              	.LBB668:
 11542              	.LBI664:
1577:fltk-1.3.4-1/png/png.c **** {
 11543              		.loc 1 1577 1 view .LVU3281
 11544              	.LBB666:
1579:fltk-1.3.4-1/png/png.c ****    png_xy xy_test;
 11545              		.loc 1 1579 4 view .LVU3282
1580:fltk-1.3.4-1/png/png.c **** 
 11546              		.loc 1 1580 4 view .LVU3283
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11547              		.loc 1 1583 4 view .LVU3284
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11548              		.loc 1 1583 13 is_stmt 0 view .LVU3285
 11549 002e 4989E6   		movq	%rsp, %r14
 11550 0031 4C89F7   		movq	%r14, %rdi
 11551              	.LVL1091:
1583:fltk-1.3.4-1/png/png.c ****    if (result != 0)
 11552              		.loc 1 1583 13 view .LVU3286
 11553 0034 E8000000 		call	png_XYZ_from_xy
 11553      00
 11554              	.LVL1092:
1584:fltk-1.3.4-1/png/png.c ****       return result;
 11555              		.loc 1 1584 4 is_stmt 1 view .LVU3287
1584:fltk-1.3.4-1/png/png.c ****       return result;
 11556              		.loc 1 1584 7 is_stmt 0 view .LVU3288
 11557 0039 85C0     		testl	%eax, %eax
 11558 003b 7443     		je	.L1269
 11559              	.LVL1093:
 11560              	.L1261:
1584:fltk-1.3.4-1/png/png.c ****       return result;
 11561              		.loc 1 1584 7 view .LVU3289
 11562              	.LBE666:
 11563              	.LBE668:
1690:fltk-1.3.4-1/png/png.c ****    {
 11564              		.loc 1 1690 4 view .LVU3290
 11565 003d 83F801   		cmpl	$1, %eax
 11566 0040 7563     		jne	.L1270
1700:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "invalid chromaticities");
 11567              		.loc 1 1700 10 is_stmt 1 view .LVU3291
1700:fltk-1.3.4-1/png/png.c ****          png_benign_error(png_ptr, "invalid chromaticities");
 11568              		.loc 1 1700 28 is_stmt 0 view .LVU3292
 11569 0042 66814D4A 		orw	$-32768, 74(%rbp)
 11569      0080
1701:fltk-1.3.4-1/png/png.c ****          break;
 11570              		.loc 1 1701 10 is_stmt 1 view .LVU3293
 11571 0048 488D3500 		leaq	.LC92(%rip), %rsi
 11571      000000
 11572 004f 4C89E7   		movq	%r12, %rdi
 11573 0052 E8000000 		call	png_benign_error@PLT
 11573      00
 11574              	.LVL1094:
1702:fltk-1.3.4-1/png/png.c **** 
 11575              		.loc 1 1702 10 view .LVU3294
1710:fltk-1.3.4-1/png/png.c ****    }
 11576              		.loc 1 1710 10 view .LVU3295
1713:fltk-1.3.4-1/png/png.c **** }
 11577              		.loc 1 1713 4 view .LVU3296
1713:fltk-1.3.4-1/png/png.c **** }
 11578              		.loc 1 1713 11 is_stmt 0 view .LVU3297
 11579 0057 31C0     		xorl	%eax, %eax
 11580              	.L1260:
1714:fltk-1.3.4-1/png/png.c **** 
 11581              		.loc 1 1714 1 view .LVU3298
 11582 0059 488B5C24 		movq	40(%rsp), %rbx
 11582      28
 11583 005e 6448331C 		xorq	%fs:40, %rbx
 11583      25280000 
 11583      00
 11584              	.LVL1095:
1714:fltk-1.3.4-1/png/png.c **** 
 11585              		.loc 1 1714 1 view .LVU3299
 11586 0067 7551     		jne	.L1271
 11587 0069 4883C430 		addq	$48, %rsp
 11588              		.cfi_remember_state
 11589              		.cfi_def_cfa_offset 48
 11590 006d 5B       		popq	%rbx
 11591              		.cfi_def_cfa_offset 40
 11592 006e 5D       		popq	%rbp
 11593              		.cfi_def_cfa_offset 32
 11594              	.LVL1096:
1714:fltk-1.3.4-1/png/png.c **** 
 11595              		.loc 1 1714 1 view .LVU3300
 11596 006f 415C     		popq	%r12
 11597              		.cfi_def_cfa_offset 24
 11598              	.LVL1097:
1714:fltk-1.3.4-1/png/png.c **** 
 11599              		.loc 1 1714 1 view .LVU3301
 11600 0071 415D     		popq	%r13
 11601              		.cfi_def_cfa_offset 16
 11602              	.LVL1098:
1714:fltk-1.3.4-1/png/png.c **** 
 11603              		.loc 1 1714 1 view .LVU3302
 11604 0073 415E     		popq	%r14
 11605              		.cfi_def_cfa_offset 8
 11606 0075 C3       		ret
 11607              	.LVL1099:
 11608 0076 662E0F1F 		.p2align 4,,10
 11608      84000000 
 11608      0000
 11609              		.p2align 3
 11610              	.L1269:
 11611              		.cfi_restore_state
 11612              	.LBB669:
 11613              	.LBB667:
1714:fltk-1.3.4-1/png/png.c **** 
 11614              		.loc 1 1714 1 view .LVU3303
 11615 0080 4C89EE   		movq	%r13, %rsi
 11616 0083 4C89F7   		movq	%r14, %rdi
 11617 0086 E8000000 		call	png_colorspace_check_xy.part.0
 11617      00
 11618              	.LVL1100:
1714:fltk-1.3.4-1/png/png.c **** 
 11619              		.loc 1 1714 1 view .LVU3304
 11620              	.LBE667:
 11621              	.LBE669:
1690:fltk-1.3.4-1/png/png.c ****    {
 11622              		.loc 1 1690 4 view .LVU3305
 11623 008b 85C0     		testl	%eax, %eax
 11624 008d 75AE     		jne	.L1261
1693:fltk-1.3.4-1/png/png.c ****             preferred);
 11625              		.loc 1 1693 10 is_stmt 1 view .LVU3306
1693:fltk-1.3.4-1/png/png.c ****             preferred);
 11626              		.loc 1 1693 17 is_stmt 0 view .LVU3307
 11627 008f 4189D8   		movl	%ebx, %r8d
 11628 0092 4C89F1   		movq	%r14, %rcx
 11629 0095 4C89EA   		movq	%r13, %rdx
 11630 0098 4889EE   		movq	%rbp, %rsi
 11631 009b 4C89E7   		movq	%r12, %rdi
 11632 009e E8000000 		call	png_colorspace_set_xy_and_XYZ
 11632      00
 11633              	.LVL1101:
 11634 00a3 EBB4     		jmp	.L1260
 11635              	.L1270:
1708:fltk-1.3.4-1/png/png.c ****          png_error(png_ptr, "internal error checking chromaticities");
 11636              		.loc 1 1708 10 is_stmt 1 view .LVU3308
1708:fltk-1.3.4-1/png/png.c ****          png_error(png_ptr, "internal error checking chromaticities");
 11637              		.loc 1 1708 28 is_stmt 0 view .LVU3309
 11638 00a5 66814D4A 		orw	$-32768, 74(%rbp)
 11638      0080
1709:fltk-1.3.4-1/png/png.c ****          break;
 11639              		.loc 1 1709 10 is_stmt 1 view .LVU3310
 11640 00ab 488D3500 		leaq	.LC91(%rip), %rsi
 11640      000000
 11641 00b2 4C89E7   		movq	%r12, %rdi
 11642 00b5 E8000000 		call	png_error@PLT
 11642      00
 11643              	.LVL1102:
 11644              	.L1271:
1714:fltk-1.3.4-1/png/png.c **** 
 11645              		.loc 1 1714 1 is_stmt 0 view .LVU3311
 11646 00ba E8000000 		call	__stack_chk_fail@PLT
 11646      00
 11647              	.LVL1103:
 11648              		.cfi_endproc
 11649              	.LFE80:
 11651              		.section	.text.png_gamma_significant,"ax",@progbits
 11652              		.p2align 4
 11653              		.globl	png_gamma_significant
 11655              	png_gamma_significant:
 11656              	.LVL1104:
 11657              	.LFB106:
3401:fltk-1.3.4-1/png/png.c ****    return gamma_val < PNG_FP_1 - PNG_GAMMA_THRESHOLD_FIXED ||
 11658              		.loc 1 3401 1 is_stmt 1 view -0
 11659              		.cfi_startproc
3401:fltk-1.3.4-1/png/png.c ****    return gamma_val < PNG_FP_1 - PNG_GAMMA_THRESHOLD_FIXED ||
 11660              		.loc 1 3401 1 is_stmt 0 view .LVU3313
 11661 0000 F30F1EFA 		endbr64
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 11662              		.loc 1 3402 4 is_stmt 1 view .LVU3314
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 11663              		.loc 1 3402 60 is_stmt 0 view .LVU3315
 11664 0004 81EF1873 		subl	$95000, %edi
 11664      0100
 11665              	.LVL1105:
3402:fltk-1.3.4-1/png/png.c ****        gamma_val > PNG_FP_1 + PNG_GAMMA_THRESHOLD_FIXED;
 11666              		.loc 1 3402 60 view .LVU3316
 11667 000a 31C0     		xorl	%eax, %eax
 11668 000c 81FF1027 		cmpl	$10000, %edi
 11668      0000
 11669 0012 0F97C0   		seta	%al
3404:fltk-1.3.4-1/png/png.c **** #endif
 11670              		.loc 1 3404 1 view .LVU3317
 11671 0015 C3       		ret
 11672              		.cfi_endproc
 11673              	.LFE106:
 11675              		.section	.text.png_reciprocal2,"ax",@progbits
 11676              		.p2align 4
 11677              		.globl	png_reciprocal2
 11679              	png_reciprocal2:
 11680              	.LVL1106:
 11681              	.LFB108:
3435:fltk-1.3.4-1/png/png.c ****    /* The required result is 1/a * 1/b; the following preserves accuracy. */
 11682              		.loc 1 3435 1 is_stmt 1 view -0
 11683              		.cfi_startproc
3435:fltk-1.3.4-1/png/png.c ****    /* The required result is 1/a * 1/b; the following preserves accuracy. */
 11684              		.loc 1 3435 1 is_stmt 0 view .LVU3319
 11685 0000 F30F1EFA 		endbr64
3438:fltk-1.3.4-1/png/png.c ****    r /= b;
 11686              		.loc 1 3438 4 is_stmt 1 view .LVU3320
3438:fltk-1.3.4-1/png/png.c ****    r /= b;
 11687              		.loc 1 3438 19 is_stmt 0 view .LVU3321
 11688 0004 660FEFC9 		pxor	%xmm1, %xmm1
3438:fltk-1.3.4-1/png/png.c ****    r /= b;
 11689              		.loc 1 3438 11 view .LVU3322
 11690 0008 F20F1005 		movsd	.LC93(%rip), %xmm0
 11690      00000000 
3440:fltk-1.3.4-1/png/png.c **** 
 11691              		.loc 1 3440 8 view .LVU3323
 11692 0010 F20F1015 		movsd	.LC8(%rip), %xmm2
 11692      00000000 
3438:fltk-1.3.4-1/png/png.c ****    r /= b;
 11693              		.loc 1 3438 19 view .LVU3324
 11694 0018 F20F2ACF 		cvtsi2sdl	%edi, %xmm1
3440:fltk-1.3.4-1/png/png.c **** 
 11695              		.loc 1 3440 8 view .LVU3325
 11696 001c F20F101D 		movsd	.LC7(%rip), %xmm3
 11696      00000000 
3438:fltk-1.3.4-1/png/png.c ****    r /= b;
 11697              		.loc 1 3438 11 view .LVU3326
 11698 0024 F20F5EC1 		divsd	%xmm1, %xmm0
 11699              	.LVL1107:
3439:fltk-1.3.4-1/png/png.c ****    r = floor(r+.5);
 11700              		.loc 1 3439 4 is_stmt 1 view .LVU3327
3440:fltk-1.3.4-1/png/png.c **** 
 11701              		.loc 1 3440 4 view .LVU3328
3439:fltk-1.3.4-1/png/png.c ****    r = floor(r+.5);
 11702              		.loc 1 3439 6 is_stmt 0 view .LVU3329
 11703 0028 660FEFC9 		pxor	%xmm1, %xmm1
 11704 002c F20F2ACE 		cvtsi2sdl	%esi, %xmm1
 11705 0030 F20F5EC1 		divsd	%xmm1, %xmm0
 11706              	.LVL1108:
3440:fltk-1.3.4-1/png/png.c **** 
 11707              		.loc 1 3440 8 view .LVU3330
 11708 0034 F20F5805 		addsd	.LC6(%rip), %xmm0
 11708      00000000 
 11709 003c 660F28C8 		movapd	%xmm0, %xmm1
 11710 0040 660F54CA 		andpd	%xmm2, %xmm1
 11711 0044 660F2ED9 		ucomisd	%xmm1, %xmm3
 11712 0048 7633     		jbe	.L1274
 11713 004a F2480F2C 		cvttsd2siq	%xmm0, %rax
 11713      C0
 11714 004f 660FEFC9 		pxor	%xmm1, %xmm1
 11715 0053 F20F1025 		movsd	.LC1(%rip), %xmm4
 11715      00000000 
 11716 005b 660F55D0 		andnpd	%xmm0, %xmm2
 11717 005f F2480F2A 		cvtsi2sdq	%rax, %xmm1
 11717      C8
 11718 0064 660F28D9 		movapd	%xmm1, %xmm3
 11719 0068 F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 11719      06
 11720 006d 660F28C2 		movapd	%xmm2, %xmm0
 11721 0071 660F54DC 		andpd	%xmm4, %xmm3
 11722 0075 F20F5CCB 		subsd	%xmm3, %xmm1
 11723 0079 660F56C1 		orpd	%xmm1, %xmm0
 11724              	.L1274:
 11725              	.LVL1109:
3442:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 11726              		.loc 1 3442 4 is_stmt 1 view .LVU3331
3442:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 11727              		.loc 1 3442 7 is_stmt 0 view .LVU3332
 11728 007d F20F100D 		movsd	.LC13(%rip), %xmm1
 11728      00000000 
 11729 0085 660F2FC8 		comisd	%xmm0, %xmm1
 11730 0089 720A     		jb	.L1283
3442:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 11731              		.loc 1 3442 25 discriminator 1 view .LVU3333
 11732 008b 660F2F05 		comisd	.LC14(%rip), %xmm0
 11732      00000000 
 11733 0093 730B     		jnb	.L1284
 11734              	.L1283:
3456:fltk-1.3.4-1/png/png.c **** }
 11735              		.loc 1 3456 11 view .LVU3334
 11736 0095 31C0     		xorl	%eax, %eax
3457:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 11737              		.loc 1 3457 1 view .LVU3335
 11738 0097 C3       		ret
 11739 0098 0F1F8400 		.p2align 4,,10
 11739      00000000 
 11740              		.p2align 3
 11741              	.L1284:
3443:fltk-1.3.4-1/png/png.c **** #else
 11742              		.loc 1 3443 7 is_stmt 1 view .LVU3336
3443:fltk-1.3.4-1/png/png.c **** #else
 11743              		.loc 1 3443 14 is_stmt 0 view .LVU3337
 11744 00a0 F20F2CC0 		cvttsd2sil	%xmm0, %eax
 11745 00a4 C3       		ret
 11746              		.cfi_endproc
 11747              	.LFE108:
 11749              		.section	.text.png_gamma_8bit_correct,"ax",@progbits
 11750              		.p2align 4
 11751              		.globl	png_gamma_8bit_correct
 11753              	png_gamma_8bit_correct:
 11754              	.LVL1110:
 11755              	.LFB109:
3753:fltk-1.3.4-1/png/png.c ****    if (value > 0 && value < 255)
 11756              		.loc 1 3753 1 is_stmt 1 view -0
 11757              		.cfi_startproc
3753:fltk-1.3.4-1/png/png.c ****    if (value > 0 && value < 255)
 11758              		.loc 1 3753 1 is_stmt 0 view .LVU3339
 11759 0000 F30F1EFA 		endbr64
3754:fltk-1.3.4-1/png/png.c ****    {
 11760              		.loc 1 3754 4 is_stmt 1 view .LVU3340
3754:fltk-1.3.4-1/png/png.c ****    {
 11761              		.loc 1 3754 18 is_stmt 0 view .LVU3341
 11762 0004 8D57FF   		leal	-1(%rdi), %edx
3754:fltk-1.3.4-1/png/png.c ****    {
 11763              		.loc 1 3754 7 view .LVU3342
 11764 0007 81FAFD00 		cmpl	$253, %edx
 11764      0000
 11765 000d 7609     		jbe	.L1287
3795:fltk-1.3.4-1/png/png.c **** }
 11766              		.loc 1 3795 4 is_stmt 1 view .LVU3343
3796:fltk-1.3.4-1/png/png.c **** 
 11767              		.loc 1 3796 1 is_stmt 0 view .LVU3344
 11768 000f 89F8     		movl	%edi, %eax
 11769 0011 C3       		ret
 11770              		.p2align 4,,10
 11771 0012 660F1F44 		.p2align 3
 11771      0000
 11772              	.L1287:
 11773 0018 E9000000 		jmp	png_gamma_8bit_correct.part.0
 11773      00
 11774              	.LVL1111:
3796:fltk-1.3.4-1/png/png.c **** 
 11775              		.loc 1 3796 1 view .LVU3345
 11776              		.cfi_endproc
 11777              	.LFE109:
 11779              		.section	.text.png_gamma_16bit_correct,"ax",@progbits
 11780              		.p2align 4
 11781              		.globl	png_gamma_16bit_correct
 11783              	png_gamma_16bit_correct:
 11784              	.LVL1112:
 11785              	.LFB110:
3801:fltk-1.3.4-1/png/png.c ****    if (value > 0 && value < 65535)
 11786              		.loc 1 3801 1 is_stmt 1 view -0
 11787              		.cfi_startproc
3801:fltk-1.3.4-1/png/png.c ****    if (value > 0 && value < 65535)
 11788              		.loc 1 3801 1 is_stmt 0 view .LVU3347
 11789 0000 F30F1EFA 		endbr64
3802:fltk-1.3.4-1/png/png.c ****    {
 11790              		.loc 1 3802 4 is_stmt 1 view .LVU3348
3802:fltk-1.3.4-1/png/png.c ****    {
 11791              		.loc 1 3802 18 is_stmt 0 view .LVU3349
 11792 0004 8D57FF   		leal	-1(%rdi), %edx
3802:fltk-1.3.4-1/png/png.c ****    {
 11793              		.loc 1 3802 7 view .LVU3350
 11794 0007 81FAFDFF 		cmpl	$65533, %edx
 11794      0000
 11795 000d 7609     		jbe	.L1290
3825:fltk-1.3.4-1/png/png.c **** }
 11796              		.loc 1 3825 4 is_stmt 1 view .LVU3351
3826:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
 11797              		.loc 1 3826 1 is_stmt 0 view .LVU3352
 11798 000f 89F8     		movl	%edi, %eax
 11799 0011 C3       		ret
 11800              		.p2align 4,,10
 11801 0012 660F1F44 		.p2align 3
 11801      0000
 11802              	.L1290:
 11803 0018 E9000000 		jmp	png_gamma_16bit_correct.part.0
 11803      00
 11804              	.LVL1113:
3826:fltk-1.3.4-1/png/png.c **** #endif /* 16BIT */
 11805              		.loc 1 3826 1 view .LVU3353
 11806              		.cfi_endproc
 11807              	.LFE110:
 11809              		.section	.text.png_gamma_correct,"ax",@progbits
 11810              		.p2align 4
 11811              		.globl	png_gamma_correct
 11813              	png_gamma_correct:
 11814              	.LVL1114:
 11815              	.LFB111:
3837:fltk-1.3.4-1/png/png.c ****    if (png_ptr->bit_depth == 8)
 11816              		.loc 1 3837 1 is_stmt 1 view -0
 11817              		.cfi_startproc
3837:fltk-1.3.4-1/png/png.c ****    if (png_ptr->bit_depth == 8)
 11818              		.loc 1 3837 1 is_stmt 0 view .LVU3355
 11819 0000 F30F1EFA 		endbr64
3838:fltk-1.3.4-1/png/png.c ****       return png_gamma_8bit_correct(value, gamma_val);
 11820              		.loc 1 3838 4 is_stmt 1 view .LVU3356
3837:fltk-1.3.4-1/png/png.c ****    if (png_ptr->bit_depth == 8)
 11821              		.loc 1 3837 1 is_stmt 0 view .LVU3357
 11822 0004 4989F8   		movq	%rdi, %r8
 11823 0007 8D4EFF   		leal	-1(%rsi), %ecx
 11824 000a 89F7     		movl	%esi, %edi
 11825              	.LVL1115:
3838:fltk-1.3.4-1/png/png.c ****       return png_gamma_8bit_correct(value, gamma_val);
 11826              		.loc 1 3838 7 view .LVU3358
 11827 000c 4180B878 		cmpb	$8, 632(%r8)
 11827      02000008 
 11828 0014 7412     		je	.L1302
3843:fltk-1.3.4-1/png/png.c **** #else
 11829              		.loc 1 3843 7 is_stmt 1 view .LVU3359
 11830              	.LVL1116:
 11831              	.LBB670:
 11832              	.LBI670:
3800:fltk-1.3.4-1/png/png.c **** {
 11833              		.loc 1 3800 1 view .LVU3360
 11834              	.LBB671:
3802:fltk-1.3.4-1/png/png.c ****    {
 11835              		.loc 1 3802 4 view .LVU3361
3825:fltk-1.3.4-1/png/png.c **** }
 11836              		.loc 1 3825 11 is_stmt 0 view .LVU3362
 11837 0016 89F0     		movl	%esi, %eax
3802:fltk-1.3.4-1/png/png.c ****    {
 11838              		.loc 1 3802 7 view .LVU3363
 11839 0018 81F9FDFF 		cmpl	$65533, %ecx
 11839      0000
 11840 001e 7630     		jbe	.L1303
 11841              	.LVL1117:
 11842              	.L1299:
3802:fltk-1.3.4-1/png/png.c ****    {
 11843              		.loc 1 3802 7 view .LVU3364
 11844              	.LBE671:
 11845              	.LBE670:
3848:fltk-1.3.4-1/png/png.c **** 
 11846              		.loc 1 3848 1 view .LVU3365
 11847 0020 C3       		ret
 11848              		.p2align 4,,10
 11849 0021 0F1F8000 		.p2align 3
 11849      000000
 11850              	.L1302:
3839:fltk-1.3.4-1/png/png.c **** 
 11851              		.loc 1 3839 7 is_stmt 1 view .LVU3366
 11852              	.LVL1118:
 11853              	.LBB673:
 11854              	.LBI673:
3752:fltk-1.3.4-1/png/png.c **** {
 11855              		.loc 1 3752 1 view .LVU3367
 11856              	.LBB674:
3754:fltk-1.3.4-1/png/png.c ****    {
 11857              		.loc 1 3754 4 view .LVU3368
 11858              	.LBE674:
 11859              	.LBE673:
3839:fltk-1.3.4-1/png/png.c **** 
 11860              		.loc 1 3839 14 is_stmt 0 view .LVU3369
 11861 0028 400FB6C6 		movzbl	%sil, %eax
 11862              	.LBB677:
 11863              	.LBB675:
3754:fltk-1.3.4-1/png/png.c ****    {
 11864              		.loc 1 3754 7 view .LVU3370
 11865 002c 81F9FD00 		cmpl	$253, %ecx
 11865      0000
 11866 0032 77EC     		ja	.L1299
 11867              	.LBE675:
 11868              	.LBE677:
3837:fltk-1.3.4-1/png/png.c ****    if (png_ptr->bit_depth == 8)
 11869              		.loc 1 3837 1 view .LVU3371
 11870 0034 4883EC08 		subq	$8, %rsp
 11871              		.cfi_def_cfa_offset 16
 11872              	.LBB678:
 11873              	.LBB676:
 11874 0038 89D6     		movl	%edx, %esi
 11875              	.LVL1119:
3837:fltk-1.3.4-1/png/png.c ****    if (png_ptr->bit_depth == 8)
 11876              		.loc 1 3837 1 view .LVU3372
 11877 003a E8000000 		call	png_gamma_8bit_correct.part.0
 11877      00
 11878              	.LVL1120:
3837:fltk-1.3.4-1/png/png.c ****    if (png_ptr->bit_depth == 8)
 11879              		.loc 1 3837 1 view .LVU3373
 11880              	.LBE676:
 11881              	.LBE678:
3848:fltk-1.3.4-1/png/png.c **** 
 11882              		.loc 1 3848 1 view .LVU3374
 11883 003f 4883C408 		addq	$8, %rsp
 11884              		.cfi_def_cfa_offset 8
3839:fltk-1.3.4-1/png/png.c **** 
 11885              		.loc 1 3839 14 view .LVU3375
 11886 0043 0FB6C0   		movzbl	%al, %eax
3848:fltk-1.3.4-1/png/png.c **** 
 11887              		.loc 1 3848 1 view .LVU3376
 11888 0046 C3       		ret
 11889              	.LVL1121:
 11890 0047 660F1F84 		.p2align 4,,10
 11890      00000000 
 11890      00
 11891              		.p2align 3
 11892              	.L1303:
 11893              	.LBB679:
 11894              	.LBB672:
3848:fltk-1.3.4-1/png/png.c **** 
 11895              		.loc 1 3848 1 view .LVU3377
 11896 0050 89D6     		movl	%edx, %esi
 11897              	.LVL1122:
3848:fltk-1.3.4-1/png/png.c **** 
 11898              		.loc 1 3848 1 view .LVU3378
 11899 0052 E9000000 		jmp	png_gamma_16bit_correct.part.0
 11899      00
 11900              	.LVL1123:
3848:fltk-1.3.4-1/png/png.c **** 
 11901              		.loc 1 3848 1 view .LVU3379
 11902              	.LBE672:
 11903              	.LBE679:
 11904              		.cfi_endproc
 11905              	.LFE111:
 11907              		.section	.text.png_destroy_gamma_table,"ax",@progbits
 11908              		.p2align 4
 11909              		.globl	png_destroy_gamma_table
 11911              	png_destroy_gamma_table:
 11912              	.LVL1124:
 11913              	.LFB115:
4025:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_table);
 11914              		.loc 1 4025 1 is_stmt 1 view -0
 11915              		.cfi_startproc
4025:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_table);
 11916              		.loc 1 4025 1 is_stmt 0 view .LVU3381
 11917 0000 F30F1EFA 		endbr64
4026:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_table = NULL;
 11918              		.loc 1 4026 4 is_stmt 1 view .LVU3382
4025:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_table);
 11919              		.loc 1 4025 1 is_stmt 0 view .LVU3383
 11920 0004 4154     		pushq	%r12
 11921              		.cfi_def_cfa_offset 16
 11922              		.cfi_offset 12, -16
 11923 0006 55       		pushq	%rbp
 11924              		.cfi_def_cfa_offset 24
 11925              		.cfi_offset 6, -24
 11926 0007 53       		pushq	%rbx
 11927              		.cfi_def_cfa_offset 32
 11928              		.cfi_offset 3, -32
4026:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_table = NULL;
 11929              		.loc 1 4026 4 view .LVU3384
 11930 0008 488BB7B8 		movq	696(%rdi), %rsi
 11930      020000
4025:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_table);
 11931              		.loc 1 4025 1 view .LVU3385
 11932 000f 4889FB   		movq	%rdi, %rbx
4026:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_table = NULL;
 11933              		.loc 1 4026 4 view .LVU3386
 11934 0012 E8000000 		call	png_free@PLT
 11934      00
 11935              	.LVL1125:
4027:fltk-1.3.4-1/png/png.c **** 
 11936              		.loc 1 4027 4 is_stmt 1 view .LVU3387
4030:fltk-1.3.4-1/png/png.c ****    {
 11937              		.loc 1 4030 15 is_stmt 0 view .LVU3388
 11938 0017 488BB3C0 		movq	704(%rbx), %rsi
 11938      020000
4027:fltk-1.3.4-1/png/png.c **** 
 11939              		.loc 1 4027 25 view .LVU3389
 11940 001e 48C783B8 		movq	$0, 696(%rbx)
 11940      02000000 
 11940      000000
4030:fltk-1.3.4-1/png/png.c ****    {
 11941              		.loc 1 4030 4 is_stmt 1 view .LVU3390
4030:fltk-1.3.4-1/png/png.c ****    {
 11942              		.loc 1 4030 7 is_stmt 0 view .LVU3391
 11943 0029 4885F6   		testq	%rsi, %rsi
 11944 002c 7451     		je	.L1305
 11945              	.LBB680:
4032:fltk-1.3.4-1/png/png.c ****       int istop = (1 << (8 - png_ptr->gamma_shift));
 11946              		.loc 1 4032 7 is_stmt 1 view .LVU3392
4033:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 11947              		.loc 1 4033 7 view .LVU3393
4033:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 11948              		.loc 1 4033 28 is_stmt 0 view .LVU3394
 11949 002e B9080000 		movl	$8, %ecx
 11949      00
4033:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 11950              		.loc 1 4033 11 view .LVU3395
 11951 0033 B8010000 		movl	$1, %eax
 11951      00
4033:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 11952              		.loc 1 4033 28 view .LVU3396
 11953 0038 2B8BB002 		subl	688(%rbx), %ecx
 11953      0000
4033:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 11954              		.loc 1 4033 11 view .LVU3397
 11955 003e D3E0     		sall	%cl, %eax
 11956              	.LVL1126:
4034:fltk-1.3.4-1/png/png.c ****       {
 11957              		.loc 1 4034 7 is_stmt 1 view .LVU3398
4034:fltk-1.3.4-1/png/png.c ****       {
 11958              		.loc 1 4034 19 view .LVU3399
4034:fltk-1.3.4-1/png/png.c ****       {
 11959              		.loc 1 4034 7 is_stmt 0 view .LVU3400
 11960 0040 85C0     		testl	%eax, %eax
 11961 0042 7E28     		jle	.L1306
 11962 0044 448D60FF 		leal	-1(%rax), %r12d
 11963 0048 31ED     		xorl	%ebp, %ebp
 11964 004a 49C1E403 		salq	$3, %r12
 11965 004e EB04     		jmp	.L1308
 11966              	.LVL1127:
 11967              		.p2align 4,,10
 11968              		.p2align 3
 11969              	.L1307:
4034:fltk-1.3.4-1/png/png.c ****       {
 11970              		.loc 1 4034 7 view .LVU3401
 11971 0050 4883C508 		addq	$8, %rbp
 11972              	.L1308:
4036:fltk-1.3.4-1/png/png.c ****       }
 11973              		.loc 1 4036 10 is_stmt 1 discriminator 3 view .LVU3402
 11974 0054 488B342E 		movq	(%rsi,%rbp), %rsi
 11975 0058 4889DF   		movq	%rbx, %rdi
 11976 005b E8000000 		call	png_free@PLT
 11976      00
 11977              	.LVL1128:
4034:fltk-1.3.4-1/png/png.c ****       {
 11978              		.loc 1 4034 30 discriminator 3 view .LVU3403
4034:fltk-1.3.4-1/png/png.c ****       {
 11979              		.loc 1 4034 19 discriminator 3 view .LVU3404
 11980 0060 488BB3C0 		movq	704(%rbx), %rsi
 11980      020000
4034:fltk-1.3.4-1/png/png.c ****       {
 11981              		.loc 1 4034 7 is_stmt 0 discriminator 3 view .LVU3405
 11982 0067 4939EC   		cmpq	%rbp, %r12
 11983 006a 75E4     		jne	.L1307
 11984              	.L1306:
4038:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_16_table = NULL;
 11985              		.loc 1 4038 4 is_stmt 1 view .LVU3406
 11986 006c 4889DF   		movq	%rbx, %rdi
 11987 006f E8000000 		call	png_free@PLT
 11987      00
 11988              	.LVL1129:
4039:fltk-1.3.4-1/png/png.c ****    }
 11989              		.loc 1 4039 4 view .LVU3407
4039:fltk-1.3.4-1/png/png.c ****    }
 11990              		.loc 1 4039 28 is_stmt 0 view .LVU3408
 11991 0074 48C783C0 		movq	$0, 704(%rbx)
 11991      02000000 
 11991      000000
 11992              	.L1305:
4039:fltk-1.3.4-1/png/png.c ****    }
 11993              		.loc 1 4039 28 view .LVU3409
 11994              	.LBE680:
4046:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_from_1 = NULL;
 11995              		.loc 1 4046 4 is_stmt 1 view .LVU3410
 11996 007f 488BB3C8 		movq	712(%rbx), %rsi
 11996      020000
 11997 0086 4889DF   		movq	%rbx, %rdi
 11998 0089 E8000000 		call	png_free@PLT
 11998      00
 11999              	.LVL1130:
4047:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_to_1);
 12000              		.loc 1 4047 4 view .LVU3411
4048:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_to_1 = NULL;
 12001              		.loc 1 4048 4 is_stmt 0 view .LVU3412
 12002 008e 488BB3D0 		movq	720(%rbx), %rsi
 12002      020000
 12003 0095 4889DF   		movq	%rbx, %rdi
4047:fltk-1.3.4-1/png/png.c ****    png_free(png_ptr, png_ptr->gamma_to_1);
 12004              		.loc 1 4047 26 view .LVU3413
 12005 0098 48C783C8 		movq	$0, 712(%rbx)
 12005      02000000 
 12005      000000
4048:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_to_1 = NULL;
 12006              		.loc 1 4048 4 is_stmt 1 view .LVU3414
 12007 00a3 E8000000 		call	png_free@PLT
 12007      00
 12008              	.LVL1131:
4049:fltk-1.3.4-1/png/png.c **** 
 12009              		.loc 1 4049 4 view .LVU3415
4052:fltk-1.3.4-1/png/png.c ****    {
 12010              		.loc 1 4052 15 is_stmt 0 view .LVU3416
 12011 00a8 488BB3D8 		movq	728(%rbx), %rsi
 12011      020000
4049:fltk-1.3.4-1/png/png.c **** 
 12012              		.loc 1 4049 24 view .LVU3417
 12013 00af 48C783D0 		movq	$0, 720(%rbx)
 12013      02000000 
 12013      000000
4052:fltk-1.3.4-1/png/png.c ****    {
 12014              		.loc 1 4052 4 is_stmt 1 view .LVU3418
4052:fltk-1.3.4-1/png/png.c ****    {
 12015              		.loc 1 4052 7 is_stmt 0 view .LVU3419
 12016 00ba 4885F6   		testq	%rsi, %rsi
 12017 00bd 7458     		je	.L1309
 12018              	.LBB681:
4054:fltk-1.3.4-1/png/png.c ****       int istop = (1 << (8 - png_ptr->gamma_shift));
 12019              		.loc 1 4054 7 is_stmt 1 view .LVU3420
4055:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12020              		.loc 1 4055 7 view .LVU3421
4055:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12021              		.loc 1 4055 28 is_stmt 0 view .LVU3422
 12022 00bf B9080000 		movl	$8, %ecx
 12022      00
4055:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12023              		.loc 1 4055 11 view .LVU3423
 12024 00c4 B8010000 		movl	$1, %eax
 12024      00
4055:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12025              		.loc 1 4055 28 view .LVU3424
 12026 00c9 2B8BB002 		subl	688(%rbx), %ecx
 12026      0000
4055:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12027              		.loc 1 4055 11 view .LVU3425
 12028 00cf D3E0     		sall	%cl, %eax
 12029              	.LVL1132:
4056:fltk-1.3.4-1/png/png.c ****       {
 12030              		.loc 1 4056 7 is_stmt 1 view .LVU3426
4056:fltk-1.3.4-1/png/png.c ****       {
 12031              		.loc 1 4056 19 view .LVU3427
4056:fltk-1.3.4-1/png/png.c ****       {
 12032              		.loc 1 4056 7 is_stmt 0 view .LVU3428
 12033 00d1 85C0     		testl	%eax, %eax
 12034 00d3 7E2F     		jle	.L1310
 12035 00d5 448D60FF 		leal	-1(%rax), %r12d
 12036 00d9 31ED     		xorl	%ebp, %ebp
 12037 00db 49C1E403 		salq	$3, %r12
 12038 00df EB0B     		jmp	.L1312
 12039              	.LVL1133:
 12040              		.p2align 4,,10
 12041 00e1 0F1F8000 		.p2align 3
 12041      000000
 12042              	.L1311:
4056:fltk-1.3.4-1/png/png.c ****       {
 12043              		.loc 1 4056 7 view .LVU3429
 12044 00e8 4883C508 		addq	$8, %rbp
 12045              	.L1312:
4058:fltk-1.3.4-1/png/png.c ****       }
 12046              		.loc 1 4058 10 is_stmt 1 discriminator 3 view .LVU3430
 12047 00ec 488B342E 		movq	(%rsi,%rbp), %rsi
 12048 00f0 4889DF   		movq	%rbx, %rdi
 12049 00f3 E8000000 		call	png_free@PLT
 12049      00
 12050              	.LVL1134:
4056:fltk-1.3.4-1/png/png.c ****       {
 12051              		.loc 1 4056 30 discriminator 3 view .LVU3431
4056:fltk-1.3.4-1/png/png.c ****       {
 12052              		.loc 1 4056 19 discriminator 3 view .LVU3432
 12053 00f8 488BB3D8 		movq	728(%rbx), %rsi
 12053      020000
4056:fltk-1.3.4-1/png/png.c ****       {
 12054              		.loc 1 4056 7 is_stmt 0 discriminator 3 view .LVU3433
 12055 00ff 4939EC   		cmpq	%rbp, %r12
 12056 0102 75E4     		jne	.L1311
 12057              	.L1310:
4060:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_16_from_1 = NULL;
 12058              		.loc 1 4060 4 is_stmt 1 view .LVU3434
 12059 0104 4889DF   		movq	%rbx, %rdi
 12060 0107 E8000000 		call	png_free@PLT
 12060      00
 12061              	.LVL1135:
4061:fltk-1.3.4-1/png/png.c ****    }
 12062              		.loc 1 4061 4 view .LVU3435
4061:fltk-1.3.4-1/png/png.c ****    }
 12063              		.loc 1 4061 29 is_stmt 0 view .LVU3436
 12064 010c 48C783D8 		movq	$0, 728(%rbx)
 12064      02000000 
 12064      000000
 12065              	.L1309:
4061:fltk-1.3.4-1/png/png.c ****    }
 12066              		.loc 1 4061 29 view .LVU3437
 12067              	.LBE681:
4063:fltk-1.3.4-1/png/png.c ****    {
 12068              		.loc 1 4063 4 is_stmt 1 view .LVU3438
4063:fltk-1.3.4-1/png/png.c ****    {
 12069              		.loc 1 4063 15 is_stmt 0 view .LVU3439
 12070 0117 488BB3E0 		movq	736(%rbx), %rsi
 12070      020000
4063:fltk-1.3.4-1/png/png.c ****    {
 12071              		.loc 1 4063 7 view .LVU3440
 12072 011e 4885F6   		testq	%rsi, %rsi
 12073 0121 7454     		je	.L1304
 12074              	.LBB682:
4065:fltk-1.3.4-1/png/png.c ****       int istop = (1 << (8 - png_ptr->gamma_shift));
 12075              		.loc 1 4065 7 is_stmt 1 view .LVU3441
4066:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12076              		.loc 1 4066 7 view .LVU3442
4066:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12077              		.loc 1 4066 28 is_stmt 0 view .LVU3443
 12078 0123 B9080000 		movl	$8, %ecx
 12078      00
4066:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12079              		.loc 1 4066 11 view .LVU3444
 12080 0128 B8010000 		movl	$1, %eax
 12080      00
4066:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12081              		.loc 1 4066 28 view .LVU3445
 12082 012d 2B8BB002 		subl	688(%rbx), %ecx
 12082      0000
4066:fltk-1.3.4-1/png/png.c ****       for (i = 0; i < istop; i++)
 12083              		.loc 1 4066 11 view .LVU3446
 12084 0133 D3E0     		sall	%cl, %eax
 12085              	.LVL1136:
4067:fltk-1.3.4-1/png/png.c ****       {
 12086              		.loc 1 4067 7 is_stmt 1 view .LVU3447
4067:fltk-1.3.4-1/png/png.c ****       {
 12087              		.loc 1 4067 19 view .LVU3448
4067:fltk-1.3.4-1/png/png.c ****       {
 12088              		.loc 1 4067 7 is_stmt 0 view .LVU3449
 12089 0135 85C0     		testl	%eax, %eax
 12090 0137 7E2B     		jle	.L1314
 12091 0139 448D60FF 		leal	-1(%rax), %r12d
 12092 013d 31ED     		xorl	%ebp, %ebp
 12093 013f 49C1E403 		salq	$3, %r12
 12094 0143 EB07     		jmp	.L1316
 12095              	.LVL1137:
 12096              		.p2align 4,,10
 12097 0145 0F1F00   		.p2align 3
 12098              	.L1315:
4067:fltk-1.3.4-1/png/png.c ****       {
 12099              		.loc 1 4067 7 view .LVU3450
 12100 0148 4883C508 		addq	$8, %rbp
 12101              	.L1316:
4069:fltk-1.3.4-1/png/png.c ****       }
 12102              		.loc 1 4069 10 is_stmt 1 discriminator 3 view .LVU3451
 12103 014c 488B342E 		movq	(%rsi,%rbp), %rsi
 12104 0150 4889DF   		movq	%rbx, %rdi
 12105 0153 E8000000 		call	png_free@PLT
 12105      00
 12106              	.LVL1138:
4067:fltk-1.3.4-1/png/png.c ****       {
 12107              		.loc 1 4067 30 discriminator 3 view .LVU3452
4067:fltk-1.3.4-1/png/png.c ****       {
 12108              		.loc 1 4067 19 discriminator 3 view .LVU3453
 12109 0158 488BB3E0 		movq	736(%rbx), %rsi
 12109      020000
4067:fltk-1.3.4-1/png/png.c ****       {
 12110              		.loc 1 4067 7 is_stmt 0 discriminator 3 view .LVU3454
 12111 015f 4939EC   		cmpq	%rbp, %r12
 12112 0162 75E4     		jne	.L1315
 12113              	.L1314:
4071:fltk-1.3.4-1/png/png.c ****    png_ptr->gamma_16_to_1 = NULL;
 12114              		.loc 1 4071 4 is_stmt 1 view .LVU3455
 12115 0164 4889DF   		movq	%rbx, %rdi
 12116 0167 E8000000 		call	png_free@PLT
 12116      00
 12117              	.LVL1139:
4072:fltk-1.3.4-1/png/png.c ****    }
 12118              		.loc 1 4072 4 view .LVU3456
4072:fltk-1.3.4-1/png/png.c ****    }
 12119              		.loc 1 4072 27 is_stmt 0 view .LVU3457
 12120 016c 48C783E0 		movq	$0, 736(%rbx)
 12120      02000000 
 12120      000000
 12121              	.L1304:
4072:fltk-1.3.4-1/png/png.c ****    }
 12122              		.loc 1 4072 27 view .LVU3458
 12123              	.LBE682:
4076:fltk-1.3.4-1/png/png.c **** 
 12124              		.loc 1 4076 1 view .LVU3459
 12125 0177 5B       		popq	%rbx
 12126              		.cfi_def_cfa_offset 24
 12127              	.LVL1140:
4076:fltk-1.3.4-1/png/png.c **** 
 12128              		.loc 1 4076 1 view .LVU3460
 12129 0178 5D       		popq	%rbp
 12130              		.cfi_def_cfa_offset 16
 12131 0179 415C     		popq	%r12
 12132              		.cfi_def_cfa_offset 8
 12133 017b C3       		ret
 12134              		.cfi_endproc
 12135              	.LFE115:
 12137              		.section	.rodata.png_build_gamma_table.str1.1,"aMS",@progbits,1
 12138              	.LC94:
 12139 0000 67616D6D 		.string	"gamma table being rebuilt"
 12139      61207461 
 12139      626C6520 
 12139      6265696E 
 12139      67207265 
 12140              		.section	.text.png_build_gamma_table,"ax",@progbits
 12141              		.p2align 4
 12142              		.globl	png_build_gamma_table
 12144              	png_build_gamma_table:
 12145              	.LVL1141:
 12146              	.LFB116:
4085:fltk-1.3.4-1/png/png.c ****   png_debug(1, "in png_build_gamma_table");
 12147              		.loc 1 4085 1 is_stmt 1 view -0
 12148              		.cfi_startproc
4085:fltk-1.3.4-1/png/png.c ****   png_debug(1, "in png_build_gamma_table");
 12149              		.loc 1 4085 1 is_stmt 0 view .LVU3462
 12150 0000 F30F1EFA 		endbr64
4086:fltk-1.3.4-1/png/png.c **** 
 12151              		.loc 1 4086 3 is_stmt 1 view .LVU3463
4094:fltk-1.3.4-1/png/png.c ****   {
 12152              		.loc 1 4094 3 view .LVU3464
4085:fltk-1.3.4-1/png/png.c ****   png_debug(1, "in png_build_gamma_table");
 12153              		.loc 1 4085 1 is_stmt 0 view .LVU3465
 12154 0004 4157     		pushq	%r15
 12155              		.cfi_def_cfa_offset 16
 12156              		.cfi_offset 15, -16
 12157 0006 4156     		pushq	%r14
 12158              		.cfi_def_cfa_offset 24
 12159              		.cfi_offset 14, -24
 12160 0008 4989FE   		movq	%rdi, %r14
 12161 000b 4155     		pushq	%r13
 12162              		.cfi_def_cfa_offset 32
 12163              		.cfi_offset 13, -32
 12164 000d 4154     		pushq	%r12
 12165              		.cfi_def_cfa_offset 40
 12166              		.cfi_offset 12, -40
 12167 000f 55       		pushq	%rbp
 12168              		.cfi_def_cfa_offset 48
 12169              		.cfi_offset 6, -48
 12170 0010 53       		pushq	%rbx
 12171              		.cfi_def_cfa_offset 56
 12172              		.cfi_offset 3, -56
 12173 0011 89F3     		movl	%esi, %ebx
 12174 0013 4883EC28 		subq	$40, %rsp
 12175              		.cfi_def_cfa_offset 96
4094:fltk-1.3.4-1/png/png.c ****   {
 12176              		.loc 1 4094 6 view .LVU3466
 12177 0017 4883BFB8 		cmpq	$0, 696(%rdi)
 12177      02000000 
 12178 001f 0F84DB02 		je	.L1374
 12178      0000
 12179              	.L1328:
4096:fltk-1.3.4-1/png/png.c ****     png_destroy_gamma_table(png_ptr);
 12180              		.loc 1 4096 5 is_stmt 1 view .LVU3467
 12181 0025 4C89F7   		movq	%r14, %rdi
 12182              	.LVL1142:
4096:fltk-1.3.4-1/png/png.c ****     png_destroy_gamma_table(png_ptr);
 12183              		.loc 1 4096 5 is_stmt 0 view .LVU3468
 12184 0028 488D3500 		leaq	.LC94(%rip), %rsi
 12184      000000
 12185              	.LVL1143:
4096:fltk-1.3.4-1/png/png.c ****     png_destroy_gamma_table(png_ptr);
 12186              		.loc 1 4096 5 view .LVU3469
 12187 002f E8000000 		call	png_warning@PLT
 12187      00
 12188              	.LVL1144:
4097:fltk-1.3.4-1/png/png.c ****   }
 12189              		.loc 1 4097 5 is_stmt 1 view .LVU3470
 12190 0034 4C89F7   		movq	%r14, %rdi
 12191 0037 E8000000 		call	png_destroy_gamma_table
 12191      00
 12192              	.LVL1145:
 12193              	.L1329:
4100:fltk-1.3.4-1/png/png.c ****   {
 12194              		.loc 1 4100 3 view .LVU3471
 12195 003c 418BB6B4 		movl	692(%r14), %esi
 12195      020000
4100:fltk-1.3.4-1/png/png.c ****   {
 12196              		.loc 1 4100 6 is_stmt 0 view .LVU3472
 12197 0043 83FB08   		cmpl	$8, %ebx
 12198 0046 7F48     		jg	.L1330
4102:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ?  png_reciprocal2(png_ptr->colorspace.gamma,
 12199              		.loc 1 4102 6 is_stmt 1 view .LVU3473
 12200 0048 BAA08601 		movl	$100000, %edx
 12200      00
 12201 004d 85F6     		testl	%esi, %esi
 12202 004f 7E0E     		jle	.L1331
4103:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma) : PNG_FP_1);
 12203              		.loc 1 4103 39 is_stmt 0 view .LVU3474
 12204 0051 418BBED8 		movl	1240(%r14), %edi
 12204      040000
 12205 0058 E8000000 		call	png_reciprocal2
 12205      00
 12206              	.LVL1146:
 12207 005d 89C2     		movl	%eax, %edx
 12208              	.L1331:
4102:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ?  png_reciprocal2(png_ptr->colorspace.gamma,
 12209              		.loc 1 4102 36 discriminator 2 view .LVU3475
 12210 005f 498DB6B8 		leaq	696(%r14), %rsi
 12210      020000
4102:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ?  png_reciprocal2(png_ptr->colorspace.gamma,
 12211              		.loc 1 4102 6 discriminator 2 view .LVU3476
 12212 0066 4C89F7   		movq	%r14, %rdi
 12213 0069 E8000000 		call	png_build_8bit_table
 12213      00
 12214              	.LVL1147:
4109:fltk-1.3.4-1/png/png.c ****      {
 12215              		.loc 1 4109 6 is_stmt 1 discriminator 2 view .LVU3477
4109:fltk-1.3.4-1/png/png.c ****      {
 12216              		.loc 1 4109 9 is_stmt 0 discriminator 2 view .LVU3478
 12217 006e 41F78634 		testl	$6291584, 308(%r14)
 12217      01000080 
 12217      006000
 12218 0079 0F855903 		jne	.L1375
 12218      0000
 12219              	.LVL1148:
 12220              	.L1327:
4211:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 12221              		.loc 1 4211 1 view .LVU3479
 12222 007f 4883C428 		addq	$40, %rsp
 12223              		.cfi_remember_state
 12224              		.cfi_def_cfa_offset 56
 12225 0083 5B       		popq	%rbx
 12226              		.cfi_def_cfa_offset 48
 12227 0084 5D       		popq	%rbp
 12228              		.cfi_def_cfa_offset 40
 12229 0085 415C     		popq	%r12
 12230              		.cfi_def_cfa_offset 32
 12231 0087 415D     		popq	%r13
 12232              		.cfi_def_cfa_offset 24
 12233 0089 415E     		popq	%r14
 12234              		.cfi_def_cfa_offset 16
 12235 008b 415F     		popq	%r15
 12236              		.cfi_def_cfa_offset 8
 12237 008d C3       		ret
 12238              	.LVL1149:
 12239 008e 6690     		.p2align 4,,10
 12240              		.p2align 3
 12241              	.L1330:
 12242              		.cfi_restore_state
 12243              	.LBB691:
4123:fltk-1.3.4-1/png/png.c **** 
 12244              		.loc 1 4123 6 is_stmt 1 view .LVU3480
4125:fltk-1.3.4-1/png/png.c ****      {
 12245              		.loc 1 4125 6 view .LVU3481
4125:fltk-1.3.4-1/png/png.c ****      {
 12246              		.loc 1 4125 9 is_stmt 0 view .LVU3482
 12247 0090 41F68677 		testb	$2, 631(%r14)
 12247      02000002 
 12248 0098 0F853202 		jne	.L1376
 12248      0000
4136:fltk-1.3.4-1/png/png.c **** 
 12249              		.loc 1 4136 9 is_stmt 1 view .LVU3483
4136:fltk-1.3.4-1/png/png.c **** 
 12250              		.loc 1 4136 17 is_stmt 0 view .LVU3484
 12251 009e 410FB686 		movzbl	747(%r14), %eax
 12251      EB020000 
 12252              	.LVL1150:
 12253              	.L1337:
4156:fltk-1.3.4-1/png/png.c ****         shift = (png_byte)(16U - sig_bit); /* shift == insignificant bits */
 12254              		.loc 1 4156 6 is_stmt 1 view .LVU3485
 12255 00a6 418B9634 		movl	308(%r14), %edx
 12255      010000
4156:fltk-1.3.4-1/png/png.c ****         shift = (png_byte)(16U - sig_bit); /* shift == insignificant bits */
 12256              		.loc 1 4156 22 is_stmt 0 view .LVU3486
 12257 00ad 8D48FF   		leal	-1(%rax), %ecx
 12258 00b0 81E20004 		andl	$67109888, %edx
 12258      0004
4156:fltk-1.3.4-1/png/png.c ****         shift = (png_byte)(16U - sig_bit); /* shift == insignificant bits */
 12259              		.loc 1 4156 9 view .LVU3487
 12260 00b6 80F90E   		cmpb	$14, %cl
 12261 00b9 0F865902 		jbe	.L1338
 12261      0000
 12262              	.LVL1151:
4162:fltk-1.3.4-1/png/png.c ****      {
 12263              		.loc 1 4162 6 is_stmt 1 view .LVU3488
4162:fltk-1.3.4-1/png/png.c ****      {
 12264              		.loc 1 4162 9 is_stmt 0 view .LVU3489
 12265 00bf 85D2     		testl	%edx, %edx
 12266 00c1 0F846903 		je	.L1377
 12266      0000
 12267              	.LVL1152:
 12268              	.L1339:
4175:fltk-1.3.4-1/png/png.c **** 
 12269              		.loc 1 4175 6 is_stmt 1 view .LVU3490
4175:fltk-1.3.4-1/png/png.c **** 
 12270              		.loc 1 4175 27 is_stmt 0 view .LVU3491
 12271 00c7 C7442418 		movl	$2048, 24(%rsp)
 12271      00080000 
 12272 00cf 41B94000 		movl	$64, %r9d
 12272      0000
 12273 00d5 41BC0800 		movl	$8, %r12d
 12273      0000
 12274 00db 41C786B0 		movl	$5, 688(%r14)
 12274      02000005 
 12274      000000
4182:fltk-1.3.4-1/png/png.c ****          png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
 12275              		.loc 1 4182 6 is_stmt 1 view .LVU3492
4175:fltk-1.3.4-1/png/png.c **** 
 12276              		.loc 1 4175 27 is_stmt 0 view .LVU3493
 12277 00e6 C7442408 		movl	$7, 8(%rsp)
 12277      07000000 
 12278 00ee C7442410 		movl	$2047, 16(%rsp)
 12278      FF070000 
 12279 00f6 C7442404 		movl	$3, 4(%rsp)
 12279      03000000 
 12280 00fe C744241C 		movl	$5, 28(%rsp)
 12280      05000000 
 12281 0106 C644240F 		movb	$5, 15(%rsp)
 12281      05
 12282              	.LVL1153:
 12283              	.L1356:
4183:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ? png_product2(png_ptr->colorspace.gamma,
 12284              		.loc 1 4183 10 is_stmt 1 view .LVU3494
 12285 010b 41BFA086 		movl	$100000, %r15d
 12285      0100
 12286 0111 85F6     		testl	%esi, %esi
 12287 0113 0F8E9D00 		jle	.L1342
 12287      0000
 12288              	.LVL1154:
 12289              	.LBB692:
 12290              	.LBI692:
3411:fltk-1.3.4-1/png/png.c **** {
 12291              		.loc 1 3411 1 view .LVU3495
 12292              	.LBB693:
3415:fltk-1.3.4-1/png/png.c ****    r *= b;
 12293              		.loc 1 3415 4 view .LVU3496
3415:fltk-1.3.4-1/png/png.c ****    r *= b;
 12294              		.loc 1 3415 17 is_stmt 0 view .LVU3497
 12295 0119 660FEFC0 		pxor	%xmm0, %xmm0
3415:fltk-1.3.4-1/png/png.c ****    r *= b;
 12296              		.loc 1 3415 11 view .LVU3498
 12297 011d F20F100D 		movsd	.LC4(%rip), %xmm1
 12297      00000000 
3417:fltk-1.3.4-1/png/png.c **** 
 12298              		.loc 1 3417 8 view .LVU3499
 12299 0125 F20F1015 		movsd	.LC8(%rip), %xmm2
 12299      00000000 
3415:fltk-1.3.4-1/png/png.c ****    r *= b;
 12300              		.loc 1 3415 17 view .LVU3500
 12301 012d F2410F2A 		cvtsi2sdl	1240(%r14), %xmm0
 12301      86D80400 
 12301      00
3417:fltk-1.3.4-1/png/png.c **** 
 12302              		.loc 1 3417 8 view .LVU3501
 12303 0136 F20F101D 		movsd	.LC7(%rip), %xmm3
 12303      00000000 
3415:fltk-1.3.4-1/png/png.c ****    r *= b;
 12304              		.loc 1 3415 11 view .LVU3502
 12305 013e F20F59C8 		mulsd	%xmm0, %xmm1
 12306              	.LVL1155:
3416:fltk-1.3.4-1/png/png.c ****    r = floor(r+.5);
 12307              		.loc 1 3416 4 is_stmt 1 view .LVU3503
3417:fltk-1.3.4-1/png/png.c **** 
 12308              		.loc 1 3417 4 view .LVU3504
3416:fltk-1.3.4-1/png/png.c ****    r = floor(r+.5);
 12309              		.loc 1 3416 6 is_stmt 0 view .LVU3505
 12310 0142 660FEFC0 		pxor	%xmm0, %xmm0
 12311 0146 F20F2AC6 		cvtsi2sdl	%esi, %xmm0
 12312 014a F20F59C1 		mulsd	%xmm1, %xmm0
3417:fltk-1.3.4-1/png/png.c **** 
 12313              		.loc 1 3417 8 view .LVU3506
 12314 014e F20F5805 		addsd	.LC6(%rip), %xmm0
 12314      00000000 
 12315 0156 660F28C8 		movapd	%xmm0, %xmm1
 12316              	.LVL1156:
3417:fltk-1.3.4-1/png/png.c **** 
 12317              		.loc 1 3417 8 view .LVU3507
 12318 015a 660F54CA 		andpd	%xmm2, %xmm1
 12319 015e 660F2ED9 		ucomisd	%xmm1, %xmm3
 12320 0162 7633     		jbe	.L1343
 12321 0164 F2480F2C 		cvttsd2siq	%xmm0, %rax
 12321      C0
 12322 0169 660FEFC9 		pxor	%xmm1, %xmm1
 12323 016d F20F1025 		movsd	.LC1(%rip), %xmm4
 12323      00000000 
 12324 0175 660F55D0 		andnpd	%xmm0, %xmm2
 12325 0179 F2480F2A 		cvtsi2sdq	%rax, %xmm1
 12325      C8
 12326 017e 660F28D9 		movapd	%xmm1, %xmm3
 12327 0182 F20FC2D8 		cmpnlesd	%xmm0, %xmm3
 12327      06
 12328 0187 660F28C2 		movapd	%xmm2, %xmm0
 12329 018b 660F54DC 		andpd	%xmm4, %xmm3
 12330 018f F20F5CCB 		subsd	%xmm3, %xmm1
 12331 0193 660F56C1 		orpd	%xmm1, %xmm0
 12332              	.L1343:
 12333              	.LVL1157:
3419:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 12334              		.loc 1 3419 4 is_stmt 1 view .LVU3508
3419:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 12335              		.loc 1 3419 7 is_stmt 0 view .LVU3509
 12336 0197 F20F100D 		movsd	.LC13(%rip), %xmm1
 12336      00000000 
 12337 019f 660F2FC8 		comisd	%xmm0, %xmm1
 12338 01a3 720E     		jb	.L1372
3419:fltk-1.3.4-1/png/png.c ****       return (png_fixed_point)r;
 12339              		.loc 1 3419 25 view .LVU3510
 12340 01a5 660F2F05 		comisd	.LC14(%rip), %xmm0
 12340      00000000 
 12341 01ad 0F832D03 		jnb	.L1378
 12341      0000
 12342              	.L1372:
3428:fltk-1.3.4-1/png/png.c **** }
 12343              		.loc 1 3428 11 view .LVU3511
 12344 01b3 4531FF   		xorl	%r15d, %r15d
 12345              	.LVL1158:
 12346              	.L1342:
3428:fltk-1.3.4-1/png/png.c **** }
 12347              		.loc 1 3428 11 view .LVU3512
 12348              	.LBE693:
 12349              	.LBE692:
 12350              	.LBB695:
 12351              	.LBI695:
3937:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int shift, PNG_CONST png_fixed_point gamma_val)
 12352              		.loc 1 3937 1 is_stmt 1 discriminator 2 view .LVU3513
 12353              	.LBB696:
3940:fltk-1.3.4-1/png/png.c ****    PNG_CONST unsigned int max = (1U << (16U - shift))-1U;
 12354              		.loc 1 3940 4 discriminator 2 view .LVU3514
3941:fltk-1.3.4-1/png/png.c ****    unsigned int i;
 12355              		.loc 1 3941 4 discriminator 2 view .LVU3515
3942:fltk-1.3.4-1/png/png.c ****    png_uint_32 last;
 12356              		.loc 1 3942 4 discriminator 2 view .LVU3516
3943:fltk-1.3.4-1/png/png.c **** 
 12357              		.loc 1 3943 4 discriminator 2 view .LVU3517
3945:fltk-1.3.4-1/png/png.c ****        (png_uint_16pp)png_calloc(png_ptr, num * (sizeof (png_uint_16p)));
 12358              		.loc 1 3945 4 discriminator 2 view .LVU3518
3946:fltk-1.3.4-1/png/png.c **** 
 12359              		.loc 1 3946 23 is_stmt 0 discriminator 2 view .LVU3519
 12360 01b6 4C89CE   		movq	%r9, %rsi
 12361 01b9 4C89F7   		movq	%r14, %rdi
3945:fltk-1.3.4-1/png/png.c ****        (png_uint_16pp)png_calloc(png_ptr, num * (sizeof (png_uint_16p)));
 12362              		.loc 1 3945 34 discriminator 2 view .LVU3520
 12363 01bc 4531ED   		xorl	%r13d, %r13d
3946:fltk-1.3.4-1/png/png.c **** 
 12364              		.loc 1 3946 23 discriminator 2 view .LVU3521
 12365 01bf E8000000 		call	png_calloc@PLT
 12365      00
 12366              	.LVL1159:
3945:fltk-1.3.4-1/png/png.c ****        (png_uint_16pp)png_calloc(png_ptr, num * (sizeof (png_uint_16p)));
 12367              		.loc 1 3945 34 discriminator 2 view .LVU3522
 12368 01c4 498986C0 		movq	%rax, 704(%r14)
 12368      020000
3946:fltk-1.3.4-1/png/png.c **** 
 12369              		.loc 1 3946 23 discriminator 2 view .LVU3523
 12370 01cb 4889C3   		movq	%rax, %rbx
 12371              	.LVL1160:
3952:fltk-1.3.4-1/png/png.c ****       table[i] = (png_uint_16p)png_malloc(png_ptr,
 12372              		.loc 1 3952 4 is_stmt 1 discriminator 2 view .LVU3524
3952:fltk-1.3.4-1/png/png.c ****       table[i] = (png_uint_16p)png_malloc(png_ptr,
 12373              		.loc 1 3952 16 discriminator 2 view .LVU3525
 12374 01ce 6690     		.p2align 4,,10
 12375              		.p2align 3
 12376              	.L1346:
3953:fltk-1.3.4-1/png/png.c ****           256 * (sizeof (png_uint_16)));
 12377              		.loc 1 3953 7 view .LVU3526
3953:fltk-1.3.4-1/png/png.c ****           256 * (sizeof (png_uint_16)));
 12378              		.loc 1 3953 32 is_stmt 0 view .LVU3527
 12379 01d0 BE000200 		movl	$512, %esi
 12379      00
 12380 01d5 4C89F7   		movq	%r14, %rdi
 12381 01d8 E8000000 		call	png_malloc@PLT
 12381      00
 12382              	.LVL1161:
3953:fltk-1.3.4-1/png/png.c ****           256 * (sizeof (png_uint_16)));
 12383              		.loc 1 3953 16 view .LVU3528
 12384 01dd 4A8904EB 		movq	%rax, (%rbx,%r13,8)
3952:fltk-1.3.4-1/png/png.c ****       table[i] = (png_uint_16p)png_malloc(png_ptr,
 12385              		.loc 1 3952 25 is_stmt 1 view .LVU3529
 12386              	.LVL1162:
3952:fltk-1.3.4-1/png/png.c ****       table[i] = (png_uint_16p)png_malloc(png_ptr,
 12387              		.loc 1 3952 16 view .LVU3530
 12388 01e1 4983C501 		addq	$1, %r13
 12389              	.LVL1163:
3952:fltk-1.3.4-1/png/png.c ****       table[i] = (png_uint_16p)png_malloc(png_ptr,
 12390              		.loc 1 3952 4 is_stmt 0 view .LVU3531
 12391 01e5 4539EC   		cmpl	%r13d, %r12d
 12392 01e8 77E6     		ja	.L1346
 12393 01ea 41BD8000 		movl	$128, %r13d
 12393      0000
3972:fltk-1.3.4-1/png/png.c ****    for (i = 0; i < 255; ++i) /* 8-bit output value */
 12394              		.loc 1 3972 9 view .LVU3532
 12395 01f0 4531E4   		xorl	%r12d, %r12d
 12396 01f3 4489ED   		movl	%r13d, %ebp
 12397 01f6 448B6C24 		movl	16(%rsp), %r13d
 12397      10
 12398 01fb 4C897424 		movq	%r14, 16(%rsp)
 12398      10
 12399 0200 4589E6   		movl	%r12d, %r14d
 12400              	.LVL1164:
 12401              		.p2align 4,,10
 12402 0203 0F1F4400 		.p2align 3
 12402      00
 12403              	.L1349:
 12404              	.LBB697:
3976:fltk-1.3.4-1/png/png.c **** 
 12405              		.loc 1 3976 7 is_stmt 1 view .LVU3533
 12406              	.LBB698:
 12407              	.LBB699:
 12408 0208 4489FE   		movl	%r15d, %esi
 12409 020b 89EF     		movl	%ebp, %edi
 12410 020d 448D6580 		leal	-128(%rbp), %r12d
 12411              	.LVL1165:
3976:fltk-1.3.4-1/png/png.c **** 
 12412              		.loc 1 3976 7 is_stmt 0 view .LVU3534
 12413              	.LBE699:
 12414              	.LBE698:
3979:fltk-1.3.4-1/png/png.c **** 
 12415              		.loc 1 3979 7 is_stmt 1 view .LVU3535
 12416              	.LBB701:
 12417              	.LBI698:
3800:fltk-1.3.4-1/png/png.c **** {
 12418              		.loc 1 3800 1 view .LVU3536
 12419              	.LBB700:
3802:fltk-1.3.4-1/png/png.c ****    {
 12420              		.loc 1 3802 4 view .LVU3537
 12421 0211 E8000000 		call	png_gamma_16bit_correct.part.0
 12421      00
 12422              	.LVL1166:
3802:fltk-1.3.4-1/png/png.c ****    {
 12423              		.loc 1 3802 4 is_stmt 0 view .LVU3538
 12424              	.LBE700:
 12425              	.LBE701:
3982:fltk-1.3.4-1/png/png.c **** 
 12426              		.loc 1 3982 7 is_stmt 1 view .LVU3539
3979:fltk-1.3.4-1/png/png.c **** 
 12427              		.loc 1 3979 19 is_stmt 0 view .LVU3540
 12428 0216 0FB7C0   		movzwl	%ax, %eax
 12429              	.LVL1167:
3982:fltk-1.3.4-1/png/png.c **** 
 12430              		.loc 1 3982 22 view .LVU3541
 12431 0219 410FAFC5 		imull	%r13d, %eax
 12432              	.LVL1168:
3982:fltk-1.3.4-1/png/png.c **** 
 12433              		.loc 1 3982 37 view .LVU3542
 12434 021d 8D880080 		leal	32768(%rax), %ecx
 12434      0000
 12435 0223 4889C8   		movq	%rcx, %rax
 12436 0226 48C1E010 		salq	$16, %rax
 12437 022a 4801C8   		addq	%rcx, %rax
 12438 022d 48C1E00F 		salq	$15, %rax
 12439 0231 4801C8   		addq	%rcx, %rax
 12440 0234 48C1E82F 		shrq	$47, %rax
3982:fltk-1.3.4-1/png/png.c **** 
 12441              		.loc 1 3982 13 view .LVU3543
 12442 0238 8D7001   		leal	1(%rax), %esi
 12443              	.LVL1169:
3984:fltk-1.3.4-1/png/png.c ****       {
 12444              		.loc 1 3984 7 is_stmt 1 view .LVU3544
3984:fltk-1.3.4-1/png/png.c ****       {
 12445              		.loc 1 3984 13 view .LVU3545
 12446 023b 4439F6   		cmpl	%r14d, %esi
 12447 023e 7628     		jbe	.L1347
 12448              	.LVL1170:
 12449              		.p2align 4,,10
 12450              		.p2align 3
 12451              	.L1348:
3986:fltk-1.3.4-1/png/png.c ****          last++;
 12452              		.loc 1 3986 10 view .LVU3546
3986:fltk-1.3.4-1/png/png.c ****          last++;
 12453              		.loc 1 3986 21 is_stmt 0 view .LVU3547
 12454 0240 8B542408 		movl	8(%rsp), %edx
3986:fltk-1.3.4-1/png/png.c ****          last++;
 12455              		.loc 1 3986 46 view .LVU3548
 12456 0244 0FB64C24 		movzbl	4(%rsp), %ecx
 12456      04
 12457 0249 4489F7   		movl	%r14d, %edi
3986:fltk-1.3.4-1/png/png.c ****          last++;
 12458              		.loc 1 3986 21 view .LVU3549
 12459 024c 4421F2   		andl	%r14d, %edx
3986:fltk-1.3.4-1/png/png.c ****          last++;
 12460              		.loc 1 3986 46 view .LVU3550
 12461 024f D3EF     		shrl	%cl, %edi
3986:fltk-1.3.4-1/png/png.c ****          last++;
 12462              		.loc 1 3986 63 view .LVU3551
 12463 0251 488B14D3 		movq	(%rbx,%rdx,8), %rdx
 12464 0255 66448924 		movw	%r12w, (%rdx,%rdi,2)
 12464      7A
3987:fltk-1.3.4-1/png/png.c ****       }
 12465              		.loc 1 3987 10 is_stmt 1 view .LVU3552
 12466 025a 4489F2   		movl	%r14d, %edx
3987:fltk-1.3.4-1/png/png.c ****       }
 12467              		.loc 1 3987 14 is_stmt 0 view .LVU3553
 12468 025d 4183C601 		addl	$1, %r14d
 12469              	.LVL1171:
3984:fltk-1.3.4-1/png/png.c ****       {
 12470              		.loc 1 3984 13 is_stmt 1 view .LVU3554
 12471 0261 39D0     		cmpl	%edx, %eax
 12472 0263 75DB     		jne	.L1348
 12473 0265 4189F6   		movl	%esi, %r14d
 12474              	.LVL1172:
 12475              	.L1347:
3984:fltk-1.3.4-1/png/png.c ****       {
 12476              		.loc 1 3984 13 is_stmt 0 view .LVU3555
 12477              	.LBE697:
3973:fltk-1.3.4-1/png/png.c ****    {
 12478              		.loc 1 3973 25 is_stmt 1 view .LVU3556
3973:fltk-1.3.4-1/png/png.c ****    {
 12479              		.loc 1 3973 16 view .LVU3557
 12480 0268 81C50101 		addl	$257, %ebp
 12480      0000
3973:fltk-1.3.4-1/png/png.c ****    {
 12481              		.loc 1 3973 4 is_stmt 0 view .LVU3558
 12482 026e 81FD7F00 		cmpl	$65663, %ebp
 12482      0100
 12483 0274 7592     		jne	.L1349
3992:fltk-1.3.4-1/png/png.c ****    {
 12484              		.loc 1 3992 10 view .LVU3559
 12485 0276 8B7C2418 		movl	24(%rsp), %edi
 12486 027a 4589F4   		movl	%r14d, %r12d
 12487 027d 4C8B7424 		movq	16(%rsp), %r14
 12487      10
 12488              	.LVL1173:
3992:fltk-1.3.4-1/png/png.c ****    {
 12489              		.loc 1 3992 10 is_stmt 1 view .LVU3560
 12490 0282 4139FC   		cmpl	%edi, %r12d
 12491 0285 0F83DA00 		jnb	.L1350
 12491      0000
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12492              		.loc 1 3994 26 is_stmt 0 view .LVU3561
 12493 028b 0FB64C24 		movzbl	28(%rsp), %ecx
 12493      1C
 12494 0290 BEFF0000 		movl	$255, %esi
 12494      00
 12495 0295 D3FE     		sarl	%cl, %esi
 12496 0297 8B4C2404 		movl	4(%rsp), %ecx
 12497 029b 0F1F4400 		.p2align 4,,10
 12497      00
 12498              		.p2align 3
 12499              	.L1351:
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12500              		.loc 1 3994 7 is_stmt 1 view .LVU3562
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12501              		.loc 1 3994 18 is_stmt 0 view .LVU3563
 12502 02a0 89F0     		movl	%esi, %eax
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12503              		.loc 1 3994 42 view .LVU3564
 12504 02a2 4489E2   		movl	%r12d, %edx
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12505              		.loc 1 3994 59 view .LVU3565
 12506 02a5 41B8FFFF 		movl	$-1, %r8d
 12506      FFFF
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12507              		.loc 1 3994 18 view .LVU3566
 12508 02ab 4421E0   		andl	%r12d, %eax
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12509              		.loc 1 3994 42 view .LVU3567
 12510 02ae D3EA     		shrl	%cl, %edx
3995:fltk-1.3.4-1/png/png.c ****    }
 12511              		.loc 1 3995 11 view .LVU3568
 12512 02b0 4183C401 		addl	$1, %r12d
 12513              	.LVL1174:
3994:fltk-1.3.4-1/png/png.c ****       last++;
 12514              		.loc 1 3994 59 view .LVU3569
 12515 02b4 488B04C3 		movq	(%rbx,%rax,8), %rax
 12516 02b8 66448904 		movw	%r8w, (%rax,%rdx,2)
 12516      50
3995:fltk-1.3.4-1/png/png.c ****    }
 12517              		.loc 1 3995 7 is_stmt 1 view .LVU3570
 12518              	.LVL1175:
3992:fltk-1.3.4-1/png/png.c ****    {
 12519              		.loc 1 3992 10 view .LVU3571
 12520 02bd 4139FC   		cmpl	%edi, %r12d
 12521 02c0 75DE     		jne	.L1351
 12522 02c2 E99E0000 		jmp	.L1350
 12522      00
 12523              	.LVL1176:
 12524 02c7 660F1F84 		.p2align 4,,10
 12524      00000000 
 12524      00
 12525              		.p2align 3
 12526              	.L1376:
3992:fltk-1.3.4-1/png/png.c ****    {
 12527              		.loc 1 3992 10 is_stmt 0 view .LVU3572
 12528              	.LBE696:
 12529              	.LBE695:
4127:fltk-1.3.4-1/png/png.c **** 
 12530              		.loc 1 4127 9 is_stmt 1 view .LVU3573
4127:fltk-1.3.4-1/png/png.c **** 
 12531              		.loc 1 4127 17 is_stmt 0 view .LVU3574
 12532 02d0 410FB696 		movzbl	744(%r14), %edx
 12532      E8020000 
 12533              	.LVL1177:
4129:fltk-1.3.4-1/png/png.c ****            sig_bit = png_ptr->sig_bit.green;
 12534              		.loc 1 4129 9 is_stmt 1 view .LVU3575
4132:fltk-1.3.4-1/png/png.c ****            sig_bit = png_ptr->sig_bit.blue;
 12535              		.loc 1 4132 9 view .LVU3576
 12536 02d8 410FB686 		movzbl	745(%r14), %eax
 12536      E9020000 
 12537 02e0 38D0     		cmpb	%dl, %al
 12538 02e2 0F42C2   		cmovb	%edx, %eax
 12539 02e5 410FB696 		movzbl	746(%r14), %edx
 12539      EA020000 
 12540              	.LVL1178:
4132:fltk-1.3.4-1/png/png.c ****            sig_bit = png_ptr->sig_bit.blue;
 12541              		.loc 1 4132 9 is_stmt 0 view .LVU3577
 12542 02ed 38D0     		cmpb	%dl, %al
 12543 02ef 0F42C2   		cmovb	%edx, %eax
 12544 02f2 E9AFFDFF 		jmp	.L1337
 12544      FF
 12545              	.LVL1179:
 12546 02f7 660F1F84 		.p2align 4,,10
 12546      00000000 
 12546      00
 12547              		.p2align 3
 12548              	.L1374:
4132:fltk-1.3.4-1/png/png.c ****            sig_bit = png_ptr->sig_bit.blue;
 12549              		.loc 1 4132 9 view .LVU3578
 12550              	.LBE691:
4094:fltk-1.3.4-1/png/png.c ****   {
 12551              		.loc 1 4094 36 discriminator 1 view .LVU3579
 12552 0300 4883BFC0 		cmpq	$0, 704(%rdi)
 12552      02000000 
 12553 0308 0F8517FD 		jne	.L1328
 12553      FFFF
 12554 030e E929FDFF 		jmp	.L1329
 12554      FF
 12555              	.LVL1180:
 12556              		.p2align 4,,10
 12557 0313 0F1F4400 		.p2align 3
 12557      00
 12558              	.L1338:
 12559              	.LBB703:
4157:fltk-1.3.4-1/png/png.c **** 
 12560              		.loc 1 4157 9 is_stmt 1 view .LVU3580
4157:fltk-1.3.4-1/png/png.c **** 
 12561              		.loc 1 4157 15 is_stmt 0 view .LVU3581
 12562 0318 B9100000 		movl	$16, %ecx
 12562      00
 12563 031d 29C1     		subl	%eax, %ecx
 12564 031f 0FB6C1   		movzbl	%cl, %eax
 12565              	.LVL1181:
4162:fltk-1.3.4-1/png/png.c ****      {
 12566              		.loc 1 4162 6 is_stmt 1 view .LVU3582
4162:fltk-1.3.4-1/png/png.c ****      {
 12567              		.loc 1 4162 9 is_stmt 0 view .LVU3583
 12568 0322 85D2     		testl	%edx, %edx
 12569 0324 0F851E01 		jne	.L1341
 12569      0000
4172:fltk-1.3.4-1/png/png.c ****         shift = 8U; /* Guarantees at least one table! */
 12570              		.loc 1 4172 6 is_stmt 1 view .LVU3584
 12571 032a 3C08     		cmpb	$8, %al
 12572 032c BA080000 		movl	$8, %edx
 12572      00
 12573 0331 0F46D0   		cmovbe	%eax, %edx
 12574 0334 8854240F 		movb	%dl, 15(%rsp)
 12575              	.LVL1182:
4175:fltk-1.3.4-1/png/png.c **** 
 12576              		.loc 1 4175 6 view .LVU3585
4175:fltk-1.3.4-1/png/png.c **** 
 12577              		.loc 1 4175 27 is_stmt 0 view .LVU3586
 12578 0338 418996B0 		movl	%edx, 688(%r14)
 12578      020000
4182:fltk-1.3.4-1/png/png.c ****          png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
 12579              		.loc 1 4182 6 is_stmt 1 view .LVU3587
 12580              	.LVL1183:
 12581              	.L1340:
4188:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ? png_reciprocal2(png_ptr->colorspace.gamma,
 12582              		.loc 1 4188 10 view .LVU3588
 12583 033f B9A08601 		movl	$100000, %ecx
 12583      00
 12584 0344 85F6     		testl	%esi, %esi
 12585 0346 7E0E     		jle	.L1352
4189:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma) : PNG_FP_1);
 12586              		.loc 1 4189 38 is_stmt 0 view .LVU3589
 12587 0348 418BBED8 		movl	1240(%r14), %edi
 12587      040000
 12588 034f E8000000 		call	png_reciprocal2
 12588      00
 12589              	.LVL1184:
 12590 0354 89C1     		movl	%eax, %ecx
 12591              	.L1352:
4188:fltk-1.3.4-1/png/png.c ****          png_ptr->screen_gamma > 0 ? png_reciprocal2(png_ptr->colorspace.gamma,
 12592              		.loc 1 4188 10 discriminator 2 view .LVU3590
 12593 0356 498DB6C0 		leaq	704(%r14), %rsi
 12593      020000
 12594 035d 4C89F7   		movq	%r14, %rdi
 12595 0360 E8000000 		call	png_build_16bit_table
 12595      00
 12596              	.LVL1185:
 12597              	.L1350:
4195:fltk-1.3.4-1/png/png.c ****      {
 12598              		.loc 1 4195 6 is_stmt 1 view .LVU3591
4195:fltk-1.3.4-1/png/png.c ****      {
 12599              		.loc 1 4195 9 is_stmt 0 view .LVU3592
 12600 0365 41F78634 		testl	$6291584, 308(%r14)
 12600      01000080 
 12600      006000
 12601 0370 0F8409FD 		je	.L1327
 12601      FFFF
4197:fltk-1.3.4-1/png/png.c ****             png_reciprocal(png_ptr->colorspace.gamma));
 12602              		.loc 1 4197 9 is_stmt 1 view .LVU3593
 12603 0376 418BBED8 		movl	1240(%r14), %edi
 12603      040000
 12604 037d E8000000 		call	png_reciprocal
 12604      00
 12605              	.LVL1186:
 12606 0382 440FB664 		movzbl	15(%rsp), %r12d
 12606      240F
 12607 0388 4C89F7   		movq	%r14, %rdi
 12608 038b 498DB6E0 		leaq	736(%r14), %rsi
 12608      020000
 12609 0392 89C1     		movl	%eax, %ecx
 12610 0394 4489E2   		movl	%r12d, %edx
 12611 0397 E8000000 		call	png_build_16bit_table
 12611      00
 12612              	.LVL1187:
4204:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ? png_reciprocal(png_ptr->screen_gamma) :
 12613              		.loc 1 4204 9 view .LVU3594
4205:fltk-1.3.4-1/png/png.c ****             png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
 12614              		.loc 1 4205 20 is_stmt 0 view .LVU3595
 12615 039c 418BBEB4 		movl	692(%r14), %edi
 12615      020000
4204:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ? png_reciprocal(png_ptr->screen_gamma) :
 12616              		.loc 1 4204 9 view .LVU3596
 12617 03a3 85FF     		testl	%edi, %edi
 12618 03a5 0F8E2501 		jle	.L1354
 12618      0000
4205:fltk-1.3.4-1/png/png.c ****             png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
 12619              		.loc 1 4205 41 view .LVU3597
 12620 03ab E8000000 		call	png_reciprocal
 12620      00
 12621              	.LVL1188:
 12622 03b0 89C1     		movl	%eax, %ecx
 12623              	.L1355:
 12624              	.LBE703:
4211:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 12625              		.loc 1 4211 1 discriminator 2 view .LVU3598
 12626 03b2 4883C428 		addq	$40, %rsp
 12627              		.cfi_remember_state
 12628              		.cfi_def_cfa_offset 56
 12629              	.LBB704:
4204:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ? png_reciprocal(png_ptr->screen_gamma) :
 12630              		.loc 1 4204 9 discriminator 2 view .LVU3599
 12631 03b6 498DB6D8 		leaq	728(%r14), %rsi
 12631      020000
 12632 03bd 4489E2   		movl	%r12d, %edx
 12633 03c0 4C89F7   		movq	%r14, %rdi
 12634              	.LBE704:
4211:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 12635              		.loc 1 4211 1 discriminator 2 view .LVU3600
 12636 03c3 5B       		popq	%rbx
 12637              		.cfi_def_cfa_offset 48
 12638 03c4 5D       		popq	%rbp
 12639              		.cfi_def_cfa_offset 40
 12640 03c5 415C     		popq	%r12
 12641              		.cfi_def_cfa_offset 32
 12642 03c7 415D     		popq	%r13
 12643              		.cfi_def_cfa_offset 24
 12644 03c9 415E     		popq	%r14
 12645              		.cfi_def_cfa_offset 16
 12646 03cb 415F     		popq	%r15
 12647              		.cfi_def_cfa_offset 8
 12648              	.LBB705:
4204:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ? png_reciprocal(png_ptr->screen_gamma) :
 12649              		.loc 1 4204 9 discriminator 2 view .LVU3601
 12650 03cd E9000000 		jmp	png_build_16bit_table
 12650      00
 12651              	.LVL1189:
 12652              		.p2align 4,,10
 12653 03d2 660F1F44 		.p2align 3
 12653      0000
 12654              	.L1375:
 12655              		.cfi_restore_state
4204:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ? png_reciprocal(png_ptr->screen_gamma) :
 12656              		.loc 1 4204 9 discriminator 2 view .LVU3602
 12657              	.LBE705:
4111:fltk-1.3.4-1/png/png.c ****             png_reciprocal(png_ptr->colorspace.gamma));
 12658              		.loc 1 4111 9 is_stmt 1 view .LVU3603
 12659 03d8 418BBED8 		movl	1240(%r14), %edi
 12659      040000
 12660 03df E8000000 		call	png_reciprocal
 12660      00
 12661              	.LVL1190:
 12662 03e4 4C89F7   		movq	%r14, %rdi
4111:fltk-1.3.4-1/png/png.c ****             png_reciprocal(png_ptr->colorspace.gamma));
 12663              		.loc 1 4111 39 is_stmt 0 view .LVU3604
 12664 03e7 498DB6D0 		leaq	720(%r14), %rsi
 12664      020000
4111:fltk-1.3.4-1/png/png.c ****             png_reciprocal(png_ptr->colorspace.gamma));
 12665              		.loc 1 4111 9 view .LVU3605
 12666 03ee 89C2     		movl	%eax, %edx
 12667 03f0 E8000000 		call	png_build_8bit_table
 12667      00
 12668              	.LVL1191:
4114:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ?  png_reciprocal(png_ptr->screen_gamma) :
 12669              		.loc 1 4114 9 is_stmt 1 view .LVU3606
4115:fltk-1.3.4-1/png/png.c ****             png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
 12670              		.loc 1 4115 20 is_stmt 0 view .LVU3607
 12671 03f5 418BBEB4 		movl	692(%r14), %edi
 12671      020000
4114:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ?  png_reciprocal(png_ptr->screen_gamma) :
 12672              		.loc 1 4114 9 view .LVU3608
 12673 03fc 85FF     		testl	%edi, %edi
 12674 03fe 0F8EBC00 		jle	.L1334
 12674      0000
4115:fltk-1.3.4-1/png/png.c ****             png_ptr->colorspace.gamma/* Probably doing rgb_to_gray */);
 12675              		.loc 1 4115 42 view .LVU3609
 12676 0404 E8000000 		call	png_reciprocal
 12676      00
 12677              	.LVL1192:
 12678 0409 89C2     		movl	%eax, %edx
 12679              	.L1335:
4211:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 12680              		.loc 1 4211 1 discriminator 2 view .LVU3610
 12681 040b 4883C428 		addq	$40, %rsp
 12682              		.cfi_remember_state
 12683              		.cfi_def_cfa_offset 56
4114:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ?  png_reciprocal(png_ptr->screen_gamma) :
 12684              		.loc 1 4114 39 discriminator 2 view .LVU3611
 12685 040f 498DB6C8 		leaq	712(%r14), %rsi
 12685      020000
4114:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ?  png_reciprocal(png_ptr->screen_gamma) :
 12686              		.loc 1 4114 9 discriminator 2 view .LVU3612
 12687 0416 4C89F7   		movq	%r14, %rdi
4211:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 12688              		.loc 1 4211 1 discriminator 2 view .LVU3613
 12689 0419 5B       		popq	%rbx
 12690              		.cfi_def_cfa_offset 48
 12691              	.LVL1193:
4211:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 12692              		.loc 1 4211 1 discriminator 2 view .LVU3614
 12693 041a 5D       		popq	%rbp
 12694              		.cfi_def_cfa_offset 40
 12695 041b 415C     		popq	%r12
 12696              		.cfi_def_cfa_offset 32
 12697 041d 415D     		popq	%r13
 12698              		.cfi_def_cfa_offset 24
 12699 041f 415E     		popq	%r14
 12700              		.cfi_def_cfa_offset 16
 12701              	.LVL1194:
4211:fltk-1.3.4-1/png/png.c **** #endif /* READ_GAMMA */
 12702              		.loc 1 4211 1 discriminator 2 view .LVU3615
 12703 0421 415F     		popq	%r15
 12704              		.cfi_def_cfa_offset 8
4114:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ?  png_reciprocal(png_ptr->screen_gamma) :
 12705              		.loc 1 4114 9 discriminator 2 view .LVU3616
 12706 0423 E9000000 		jmp	png_build_8bit_table
 12706      00
 12707              	.LVL1195:
 12708 0428 0F1F8400 		.p2align 4,,10
 12708      00000000 
 12709              		.p2align 3
 12710              	.L1377:
 12711              		.cfi_restore_state
 12712              	.LBB706:
4172:fltk-1.3.4-1/png/png.c ****         shift = 8U; /* Guarantees at least one table! */
 12713              		.loc 1 4172 6 is_stmt 1 view .LVU3617
4175:fltk-1.3.4-1/png/png.c **** 
 12714              		.loc 1 4175 6 view .LVU3618
4175:fltk-1.3.4-1/png/png.c **** 
 12715              		.loc 1 4175 27 is_stmt 0 view .LVU3619
 12716 0430 41C786B0 		movl	$0, 688(%r14)
 12716      02000000 
 12716      000000
4182:fltk-1.3.4-1/png/png.c ****          png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
 12717              		.loc 1 4182 6 is_stmt 1 view .LVU3620
4175:fltk-1.3.4-1/png/png.c **** 
 12718              		.loc 1 4175 27 is_stmt 0 view .LVU3621
 12719 043b C644240F 		movb	$0, 15(%rsp)
 12719      00
 12720 0440 E9FAFEFF 		jmp	.L1340
 12720      FF
 12721              	.LVL1196:
 12722              		.p2align 4,,10
 12723 0445 0F1F00   		.p2align 3
 12724              	.L1341:
4168:fltk-1.3.4-1/png/png.c ****            shift = (16U - PNG_MAX_GAMMA_8);
 12725              		.loc 1 4168 9 is_stmt 1 view .LVU3622
4168:fltk-1.3.4-1/png/png.c ****            shift = (16U - PNG_MAX_GAMMA_8);
 12726              		.loc 1 4168 12 is_stmt 0 view .LVU3623
 12727 0448 3C04     		cmpb	$4, %al
 12728 044a 0F8677FC 		jbe	.L1339
 12728      FFFF
4172:fltk-1.3.4-1/png/png.c ****         shift = 8U; /* Guarantees at least one table! */
 12729              		.loc 1 4172 6 is_stmt 1 view .LVU3624
 12730 0450 3C08     		cmpb	$8, %al
 12731 0452 BA080000 		movl	$8, %edx
 12731      00
 12732 0457 BD080000 		movl	$8, %ebp
 12732      00
 12733 045c 41BDFF00 		movl	$255, %r13d
 12733      0000
 12734 0462 0F46D0   		cmovbe	%eax, %edx
 12735 0465 0FB6C2   		movzbl	%dl, %eax
 12736              	.LVL1197:
4172:fltk-1.3.4-1/png/png.c ****         shift = 8U; /* Guarantees at least one table! */
 12737              		.loc 1 4172 6 is_stmt 0 view .LVU3625
 12738 0468 89C3     		movl	%eax, %ebx
 12739              	.LVL1198:
4172:fltk-1.3.4-1/png/png.c ****         shift = 8U; /* Guarantees at least one table! */
 12740              		.loc 1 4172 6 view .LVU3626
 12741 046a 29C5     		subl	%eax, %ebp
 12742 046c 8844240F 		movb	%al, 15(%rsp)
 12743              	.LVL1199:
4175:fltk-1.3.4-1/png/png.c **** 
 12744              		.loc 1 4175 6 is_stmt 1 view .LVU3627
4175:fltk-1.3.4-1/png/png.c **** 
 12745              		.loc 1 4175 27 is_stmt 0 view .LVU3628
 12746 0470 418986B0 		movl	%eax, 688(%r14)
 12746      020000
4182:fltk-1.3.4-1/png/png.c ****          png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
 12747              		.loc 1 4182 6 is_stmt 1 view .LVU3629
 12748 0477 89E9     		movl	%ebp, %ecx
 12749 0479 8944241C 		movl	%eax, 28(%rsp)
 12750 047d B8010000 		movl	$1, %eax
 12750      00
 12751              	.LVL1200:
4182:fltk-1.3.4-1/png/png.c ****          png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
 12752              		.loc 1 4182 6 is_stmt 0 view .LVU3630
 12753 0482 4189C4   		movl	%eax, %r12d
 12754 0485 896C2404 		movl	%ebp, 4(%rsp)
 12755 0489 41D3E4   		sall	%cl, %r12d
 12756 048c B9100000 		movl	$16, %ecx
 12756      00
 12757 0491 29D9     		subl	%ebx, %ecx
 12758 0493 4589E1   		movl	%r12d, %r9d
 12759 0496 D3E0     		sall	%cl, %eax
 12760 0498 89D9     		movl	%ebx, %ecx
 12761 049a 49C1E103 		salq	$3, %r9
 12762 049e 83E801   		subl	$1, %eax
 12763 04a1 41D3ED   		shrl	%cl, %r13d
 12764 04a4 89442410 		movl	%eax, 16(%rsp)
 12765 04a8 4489E0   		movl	%r12d, %eax
 12766 04ab C1E008   		sall	$8, %eax
 12767 04ae 44896C24 		movl	%r13d, 8(%rsp)
 12767      08
 12768 04b3 89442418 		movl	%eax, 24(%rsp)
 12769 04b7 E94FFCFF 		jmp	.L1356
 12769      FF
 12770              	.LVL1201:
 12771 04bc 0F1F4000 		.p2align 4,,10
 12772              		.p2align 3
 12773              	.L1334:
4182:fltk-1.3.4-1/png/png.c ****          png_build_16to8_table(png_ptr, &png_ptr->gamma_16_table, shift,
 12774              		.loc 1 4182 6 view .LVU3631
 12775              	.LBE706:
4114:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ?  png_reciprocal(png_ptr->screen_gamma) :
 12776              		.loc 1 4114 9 discriminator 1 view .LVU3632
 12777 04c0 418B96D8 		movl	1240(%r14), %edx
 12777      040000
 12778 04c7 E93FFFFF 		jmp	.L1335
 12778      FF
 12779              	.LVL1202:
 12780 04cc 0F1F4000 		.p2align 4,,10
 12781              		.p2align 3
 12782              	.L1354:
 12783              	.LBB707:
4204:fltk-1.3.4-1/png/png.c ****             png_ptr->screen_gamma > 0 ? png_reciprocal(png_ptr->screen_gamma) :
 12784              		.loc 1 4204 9 discriminator 1 view .LVU3633
 12785 04d0 418B8ED8 		movl	1240(%r14), %ecx
 12785      040000
 12786 04d7 E9D6FEFF 		jmp	.L1355
 12786      FF
 12787              	.LVL1203:
 12788 04dc 0F1F4000 		.p2align 4,,10
 12789              		.p2align 3
 12790              	.L1378:
 12791              	.LBB702:
 12792              	.LBB694:
3420:fltk-1.3.4-1/png/png.c **** #    else
 12793              		.loc 1 3420 7 is_stmt 1 view .LVU3634
3420:fltk-1.3.4-1/png/png.c **** #    else
 12794              		.loc 1 3420 14 is_stmt 0 view .LVU3635
 12795 04e0 F2440F2C 		cvttsd2sil	%xmm0, %r15d
 12795      F8
 12796 04e5 E9CCFCFF 		jmp	.L1342
 12796      FF
 12797              	.LBE694:
 12798              	.LBE702:
 12799              	.LBE707:
 12800              		.cfi_endproc
 12801              	.LFE116:
 12803              		.section	.text.png_set_option,"ax",@progbits
 12804              		.p2align 4
 12805              		.globl	png_set_option
 12807              	png_set_option:
 12808              	.LVL1204:
 12809              	.LFB117:
4218:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL && option >= 0 && option < PNG_OPTION_NEXT &&
 12810              		.loc 1 4218 1 is_stmt 1 view -0
 12811              		.cfi_startproc
4218:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL && option >= 0 && option < PNG_OPTION_NEXT &&
 12812              		.loc 1 4218 1 is_stmt 0 view .LVU3637
 12813 0000 F30F1EFA 		endbr64
4219:fltk-1.3.4-1/png/png.c ****       (option & 1) == 0)
 12814              		.loc 1 4219 4 is_stmt 1 view .LVU3638
4218:fltk-1.3.4-1/png/png.c ****    if (png_ptr != NULL && option >= 0 && option < PNG_OPTION_NEXT &&
 12815              		.loc 1 4218 1 is_stmt 0 view .LVU3639
 12816 0004 89F1     		movl	%esi, %ecx
4219:fltk-1.3.4-1/png/png.c ****       (option & 1) == 0)
 12817              		.loc 1 4219 39 view .LVU3640
 12818 0006 4885FF   		testq	%rdi, %rdi
 12819 0009 7405     		je	.L1382
 12820 000b 83FE05   		cmpl	$5, %esi
 12821 000e 7610     		jbe	.L1390
 12822              	.L1382:
4231:fltk-1.3.4-1/png/png.c **** }
 12823              		.loc 1 4231 11 view .LVU3641
 12824 0010 B8010000 		movl	$1, %eax
 12824      00
 12825              	.L1379:
4232:fltk-1.3.4-1/png/png.c **** #endif
 12826              		.loc 1 4232 1 view .LVU3642
 12827 0015 C3       		ret
 12828 0016 662E0F1F 		.p2align 4,,10
 12828      84000000 
 12828      0000
 12829              		.p2align 3
 12830              	.L1390:
4219:fltk-1.3.4-1/png/png.c ****       (option & 1) == 0)
 12831              		.loc 1 4219 67 discriminator 2 view .LVU3643
 12832 0020 89F0     		movl	%esi, %eax
 12833 0022 83E001   		andl	$1, %eax
 12834 0025 75EE     		jne	.L1379
 12835              	.LBB708:
4222:fltk-1.3.4-1/png/png.c ****       int setting = (2 + (onoff != 0)) << option;
 12836              		.loc 1 4222 7 is_stmt 1 view .LVU3644
4222:fltk-1.3.4-1/png/png.c ****       int setting = (2 + (onoff != 0)) << option;
 12837              		.loc 1 4222 11 is_stmt 0 view .LVU3645
 12838 0027 B8030000 		movl	$3, %eax
 12838      00
 12839 002c D3E0     		sall	%cl, %eax
 12840 002e 89C6     		movl	%eax, %esi
 12841              	.LVL1205:
4223:fltk-1.3.4-1/png/png.c ****       int current = png_ptr->options;
 12842              		.loc 1 4223 7 is_stmt 1 view .LVU3646
 12843 0030 B8020000 		movl	$2, %eax
 12843      00
 12844              	.LVL1206:
4223:fltk-1.3.4-1/png/png.c ****       int current = png_ptr->options;
 12845              		.loc 1 4223 7 is_stmt 0 view .LVU3647
 12846 0035 D3E0     		sall	%cl, %eax
 12847 0037 85D2     		testl	%edx, %edx
4224:fltk-1.3.4-1/png/png.c **** 
 12848              		.loc 1 4224 28 view .LVU3648
 12849 0039 0FB697C8 		movzbl	968(%rdi), %edx
 12849      030000
 12850              	.LVL1207:
4224:fltk-1.3.4-1/png/png.c **** 
 12851              		.loc 1 4224 28 view .LVU3649
 12852 0040 0F45C6   		cmovne	%esi, %eax
 12853 0043 4189C0   		movl	%eax, %r8d
4224:fltk-1.3.4-1/png/png.c **** 
 12854              		.loc 1 4224 7 is_stmt 1 view .LVU3650
 12855              	.LVL1208:
4226:fltk-1.3.4-1/png/png.c **** 
 12856              		.loc 1 4226 7 view .LVU3651
4226:fltk-1.3.4-1/png/png.c **** 
 12857              		.loc 1 4226 46 is_stmt 0 view .LVU3652
 12858 0046 89F0     		movl	%esi, %eax
 12859 0048 F7D0     		notl	%eax
 12860 004a 21D0     		andl	%edx, %eax
4226:fltk-1.3.4-1/png/png.c **** 
 12861              		.loc 1 4226 55 view .LVU3653
 12862 004c 4409C0   		orl	%r8d, %eax
 12863 004f 8887C803 		movb	%al, 968(%rdi)
 12863      0000
4228:fltk-1.3.4-1/png/png.c ****    }
 12864              		.loc 1 4228 7 is_stmt 1 view .LVU3654
4224:fltk-1.3.4-1/png/png.c **** 
 12865              		.loc 1 4224 11 is_stmt 0 view .LVU3655
 12866 0055 0FB6C2   		movzbl	%dl, %eax
 12867              	.LVL1209:
4228:fltk-1.3.4-1/png/png.c ****    }
 12868              		.loc 1 4228 23 view .LVU3656
 12869 0058 21F0     		andl	%esi, %eax
 12870              	.LVL1210:
4228:fltk-1.3.4-1/png/png.c ****    }
 12871              		.loc 1 4228 31 view .LVU3657
 12872 005a D3F8     		sarl	%cl, %eax
 12873 005c C3       		ret
 12874              	.LBE708:
 12875              		.cfi_endproc
 12876              	.LFE117:
 12878              		.section	.text.png_image_free,"ax",@progbits
 12879              		.p2align 4
 12880              		.globl	png_image_free
 12882              	png_image_free:
 12883              	.LVL1211:
 12884              	.LFB119:
4465:fltk-1.3.4-1/png/png.c **** 
4466:fltk-1.3.4-1/png/png.c **** void PNGAPI
4467:fltk-1.3.4-1/png/png.c **** png_image_free(png_imagep image)
4468:fltk-1.3.4-1/png/png.c **** {
 12885              		.loc 1 4468 1 is_stmt 1 view -0
 12886              		.cfi_startproc
 12887              		.loc 1 4468 1 is_stmt 0 view .LVU3659
 12888 0000 F30F1EFA 		endbr64
4469:fltk-1.3.4-1/png/png.c ****    /* Safely call the real function, but only if doing so is safe at this point
4470:fltk-1.3.4-1/png/png.c ****     * (if not inside an error handling context).  Otherwise assume
4471:fltk-1.3.4-1/png/png.c ****     * png_safe_execute will call this API after the return.
4472:fltk-1.3.4-1/png/png.c ****     */
4473:fltk-1.3.4-1/png/png.c ****    if (image != NULL && image->opaque != NULL &&
 12889              		.loc 1 4473 4 is_stmt 1 view .LVU3660
 12890              		.loc 1 4473 7 is_stmt 0 view .LVU3661
 12891 0004 4885FF   		testq	%rdi, %rdi
 12892 0007 740F     		je	.L1400
 12893              		.loc 1 4473 30 discriminator 1 view .LVU3662
 12894 0009 488B07   		movq	(%rdi), %rax
 12895              		.loc 1 4473 22 discriminator 1 view .LVU3663
 12896 000c 4885C0   		testq	%rax, %rax
 12897 000f 7407     		je	.L1400
 12898              		.loc 1 4473 47 discriminator 2 view .LVU3664
 12899 0011 48837810 		cmpq	$0, 16(%rax)
 12899      00
 12900 0016 7408     		je	.L1403
 12901              	.L1400:
 12902 0018 C3       		ret
 12903 0019 0F1F8000 		.p2align 4,,10
 12903      000000
 12904              		.p2align 3
 12905              	.L1403:
 12906              	.LVL1212:
 12907              	.LBB711:
 12908              	.LBI711:
4467:fltk-1.3.4-1/png/png.c **** {
 12909              		.loc 1 4467 1 is_stmt 1 view .LVU3665
 12910              	.LBB712:
4474:fltk-1.3.4-1/png/png.c ****       image->opaque->error_buf == NULL)
4475:fltk-1.3.4-1/png/png.c ****    {
4476:fltk-1.3.4-1/png/png.c ****       /* Ignore errors here: */
4477:fltk-1.3.4-1/png/png.c ****       (void)png_safe_execute(image, png_image_free_function, image);
 12911              		.loc 1 4477 7 view .LVU3666
 12912              	.LBE712:
 12913              	.LBE711:
4468:fltk-1.3.4-1/png/png.c ****    /* Safely call the real function, but only if doing so is safe at this point
 12914              		.loc 1 4468 1 is_stmt 0 view .LVU3667
 12915 0020 4883EC18 		subq	$24, %rsp
 12916              		.cfi_def_cfa_offset 32
 12917              	.LBB714:
 12918              	.LBB713:
 12919              		.loc 1 4477 13 view .LVU3668
 12920 0024 4889FA   		movq	%rdi, %rdx
 12921 0027 488D3500 		leaq	png_image_free_function(%rip), %rsi
 12921      000000
 12922 002e 48897C24 		movq	%rdi, 8(%rsp)
 12922      08
 12923 0033 E8000000 		call	png_safe_execute@PLT
 12923      00
 12924              	.LVL1213:
4478:fltk-1.3.4-1/png/png.c ****       image->opaque = NULL;
 12925              		.loc 1 4478 7 is_stmt 1 view .LVU3669
 12926              		.loc 1 4478 21 is_stmt 0 view .LVU3670
 12927 0038 488B7C24 		movq	8(%rsp), %rdi
 12927      08
 12928 003d 48C70700 		movq	$0, (%rdi)
 12928      000000
 12929              	.LVL1214:
 12930              		.loc 1 4478 21 view .LVU3671
 12931              	.LBE713:
 12932              	.LBE714:
4479:fltk-1.3.4-1/png/png.c ****    }
4480:fltk-1.3.4-1/png/png.c **** }
 12933              		.loc 1 4480 1 view .LVU3672
 12934 0044 4883C418 		addq	$24, %rsp
 12935              		.cfi_def_cfa_offset 8
 12936 0048 C3       		ret
 12937              		.cfi_endproc
 12938              	.LFE119:
 12940              		.section	.text.png_image_error,"ax",@progbits
 12941              		.p2align 4
 12942              		.globl	png_image_error
 12944              	png_image_error:
 12945              	.LVL1215:
 12946              	.LFB120:
4481:fltk-1.3.4-1/png/png.c **** 
4482:fltk-1.3.4-1/png/png.c **** int /* PRIVATE */
4483:fltk-1.3.4-1/png/png.c **** png_image_error(png_imagep image, png_const_charp error_message)
4484:fltk-1.3.4-1/png/png.c **** {
 12947              		.loc 1 4484 1 is_stmt 1 view -0
 12948              		.cfi_startproc
 12949              		.loc 1 4484 1 is_stmt 0 view .LVU3674
 12950 0000 F30F1EFA 		endbr64
4485:fltk-1.3.4-1/png/png.c ****    /* Utility to log an error. */
4486:fltk-1.3.4-1/png/png.c ****    png_safecat(image->message, (sizeof image->message), 0, error_message);
 12951              		.loc 1 4486 4 is_stmt 1 view .LVU3675
4484:fltk-1.3.4-1/png/png.c ****    /* Utility to log an error. */
 12952              		.loc 1 4484 1 is_stmt 0 view .LVU3676
 12953 0004 55       		pushq	%rbp
 12954              		.cfi_def_cfa_offset 16
 12955              		.cfi_offset 6, -16
4484:fltk-1.3.4-1/png/png.c ****    /* Utility to log an error. */
 12956              		.loc 1 4484 1 view .LVU3677
 12957 0005 4889F1   		movq	%rsi, %rcx
 12958 0008 4889FD   		movq	%rdi, %rbp
 12959              		.loc 1 4486 4 view .LVU3678
 12960 000b 31D2     		xorl	%edx, %edx
 12961              		.loc 1 4486 21 view .LVU3679
 12962 000d 488D7F24 		leaq	36(%rdi), %rdi
 12963              	.LVL1216:
 12964              		.loc 1 4486 4 view .LVU3680
 12965 0011 BE400000 		movl	$64, %esi
 12965      00
 12966              	.LVL1217:
 12967              		.loc 1 4486 4 view .LVU3681
 12968 0016 E8000000 		call	png_safecat@PLT
 12968      00
 12969              	.LVL1218:
4487:fltk-1.3.4-1/png/png.c ****    image->warning_or_error |= PNG_IMAGE_ERROR;
 12970              		.loc 1 4487 4 is_stmt 1 view .LVU3682
 12971              		.loc 1 4487 28 is_stmt 0 view .LVU3683
 12972 001b 834D2002 		orl	$2, 32(%rbp)
4488:fltk-1.3.4-1/png/png.c ****    png_image_free(image);
 12973              		.loc 1 4488 4 is_stmt 1 view .LVU3684
 12974 001f 4889EF   		movq	%rbp, %rdi
 12975 0022 E8000000 		call	png_image_free
 12975      00
 12976              	.LVL1219:
4489:fltk-1.3.4-1/png/png.c ****    return 0;
 12977              		.loc 1 4489 4 view .LVU3685
4490:fltk-1.3.4-1/png/png.c **** }
 12978              		.loc 1 4490 1 is_stmt 0 view .LVU3686
 12979 0027 31C0     		xorl	%eax, %eax
 12980 0029 5D       		popq	%rbp
 12981              		.cfi_def_cfa_offset 8
 12982              	.LVL1220:
 12983              		.loc 1 4490 1 view .LVU3687
 12984 002a C3       		ret
 12985              		.cfi_endproc
 12986              	.LFE120:
 12988              		.section	.rodata.CSWTCH.177,"a"
 12989              		.align 32
 12992              	CSWTCH.177:
 12993 0000 FF000000 		.long	255
 12994 0004 55000000 		.long	85
 12995 0008 00000000 		.long	0
 12996 000c 11000000 		.long	17
 12997 0010 00000000 		.long	0
 12998 0014 00000000 		.long	0
 12999 0018 00000000 		.long	0
 13000 001c 01000000 		.long	1
 13001              		.section	.rodata.CSWTCH.176,"a"
 13002              		.align 32
 13005              	CSWTCH.176:
 13006 0000 02000000 		.long	2
 13007 0004 04000000 		.long	4
 13008 0008 00000000 		.long	0
 13009 000c 10000000 		.long	16
 13010 0010 00000000 		.long	0
 13011 0014 00000000 		.long	0
 13012 0018 00000000 		.long	0
 13013 001c 00010000 		.long	256
 13014              		.section	.rodata.short_months.6917,"a"
 13015              		.align 32
 13018              	short_months.6917:
 13019 0000 4A616E00 		.string	"Jan"
 13020 0004 46656200 		.string	"Feb"
 13021 0008 4D617200 		.string	"Mar"
 13022 000c 41707200 		.string	"Apr"
 13023 0010 4D617900 		.string	"May"
 13024 0014 4A756E00 		.string	"Jun"
 13025 0018 4A756C00 		.string	"Jul"
 13026 001c 41756700 		.string	"Aug"
 13027 0020 53657000 		.string	"Sep"
 13028 0024 4F637400 		.string	"Oct"
 13029 0028 4E6F7600 		.string	"Nov"
 13030 002c 44656300 		.string	"Dec"
 13031              		.globl	png_sRGB_delta
 13032              		.section	.rodata.png_sRGB_delta,"a"
 13033              		.align 32
 13036              	png_sRGB_delta:
 13037 0000 CFC99E81 		.ascii	"\317\311\236\201qdZRMHD@=;86421/.-+*)(''&%$$#\"\"!!  \037\037"
 13037      71645A52 
 13037      4D484440 
 13037      3D3B3836 
 13037      3432312F 
 13038 0029 1E1E1E1D 		.ascii	"\036\036\036\035\035\034\034\034\033\033\033\033\032\032\032"
 13038      1D1C1C1C 
 13038      1B1B1B1B 
 13038      1A1A1A
 13039 0038 19191919 		.ascii	"\031\031\031\031\030\030\030\030\027\027\027\027\027\026\026"
 13039      18181818 
 13039      17171717 
 13039      171616
 13040 0047 16161616 		.ascii	"\026\026\026\026\025\025\025\025\025\025\024\024\024\024\024"
 13040      15151515 
 13040      15151414 
 13040      141414
 13041 0056 14141413 		.ascii	"\024\024\024\023\023\023\023\023\023\023\023\022\022\022\022"
 13041      13131313 
 13041      13131312 
 13041      121212
 13042 0065 12121212 		.ascii	"\022\022\022\022\022\022\021\021\021\021\021\021\021\021\021"
 13042      12121111 
 13042      11111111 
 13042      111111
 13043 0074 11111010 		.ascii	"\021\021\020\020\020\020\020\020\020\020\020\020\020\020\020"
 13043      10101010 
 13043      10101010 
 13043      101010
 13044 0083 100F0F0F 		.ascii	"\020\017\017\017\017\017\017\017\017\017\017\017\017\017\017"
 13044      0F0F0F0F 
 13044      0F0F0F0F 
 13044      0F0F0F
 13045 0092 0F0F0E0E 		.ascii	"\017\017\016\016\016\016\016\016\016\016\016\016\016\016\016"
 13045      0E0E0E0E 
 13045      0E0E0E0E 
 13045      0E0E0E
 13046 00a1 0E0E0E0E 		.ascii	"\016\016\016\016\016\016\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r\r"
 13046      0E0E0D0D 
 13046      0D0D0D0D 
 13046      0D0D0D0D 
 13046      0D0D0D0D 
 13047 00b9 0D0D0D0D 		.ascii	"\r\r\r\r\r\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f\f"
 13047      0D0C0C0C 
 13047      0C0C0C0C 
 13047      0C0C0C0C 
 13047      0C0C0C0C 
 13048 00d7 0C0C0C0C 		.ascii	"\f\f\f\f\f\013\013\013\013\013\013\013\013\013\013\013\013\013"
 13048      0C0B0B0B 
 13048      0B0B0B0B 
 13048      0B0B0B0B 
 13048      0B0B
 13049 00e9 0B0B0B0B 		.ascii	"\013\013\013\013\013\013\013\013\013\013\013\013\013\013\013"
 13049      0B0B0B0B 
 13049      0B0B0B0B 
 13049      0B0B0B
 13050 00f8 0B0B0B0B 		.ascii	"\013\013\013\013\013\013\013\013\013\n\n\n\n\n\n\n\n\n\n\n\n"
 13050      0B0B0B0B 
 13050      0B0A0A0A 
 13050      0A0A0A0A 
 13050      0A0A0A0A 
 13051 010d 0A0A0A0A 		.ascii	"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"
 13051      0A0A0A0A 
 13051      0A0A0A0A 
 13051      0A0A0A0A 
 13051      0A0A0A0A 
 13052 012b 0A0A0A0A 		.ascii	"\n\n\n\n\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"
 13052      0A0A0909 
 13052      09090909 
 13052      09090909 
 13052      09090909 
 13053 0149 09090909 		.ascii	"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t"
 13053      09090909 
 13053      09090909 
 13053      09090909 
 13053      09090909 
 13054 0167 09090909 		.ascii	"\t\t\t\t\t\t\t\t\t\t\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"
 13054      09090909 
 13054      09090808 
 13054      08080808 
 13054      08080808 
 13055 0185 08080808 		.ascii	"\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"
 13055      08080808 
 13055      08080808 
 13055      08080808 
 13055      08080808 
 13056 01a3 08080808 		.ascii	"\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b"
 13056      08080808 
 13056      08080808 
 13056      08080808 
 13056      08080808 
 13057 01c1 08080808 		.ascii	"\b\b\b\b\b\b\b\b\007\007\007\007\007\007\007\007\007\007\007"
 13057      08080808 
 13057      07070707 
 13057      07070707 
 13057      070707
 13058 01d4 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007"
 13058      07070707 
 13058      07070707 
 13058      070707
 13059 01e3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007\007\007"
 13059      07070707 
 13059      07070707 
 13059      070707
 13060 01f2 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007\007"
 13060      07070707 
 13060      07070707 
 13060      0707
 13061              		.globl	png_sRGB_base
 13062              		.section	.rodata.png_sRGB_base,"a"
 13063              		.align 32
 13066              	png_sRGB_base:
 13579              		.globl	png_sRGB_table
 13580              		.section	.rodata.png_sRGB_table,"a"
 13581              		.align 32
 13584              	png_sRGB_table:
 13841              		.section	.rodata.png_sRGB_checks,"a"
 13842              		.align 32
 13845              	png_sRGB_checks:
 13846 0000 F6D93F0A 		.long	171956726
 13847 0004 B972873B 		.long	998732473
 13848 0008 E80B0000 		.long	3048
 13849 000c DE3DF829 		.long	704134622
 13850 0010 AE55F2AF 		.long	-1343072850
 13851 0014 E4FA4278 		.long	2017655524
 13852 0018 0D3983CA 		.long	-897369843
 13853 001c 01       		.byte	1
 13854 001d 00       		.byte	0
 13856 0020 E1E50949 		.long	1225385441
 13857 0024 21BB7E42 		.long	1115601697
 13858 0028 EC0B0000 		.long	3052
 13859 002c 37D65BC9 		.long	-916728265
 13860 0030 3B8A5DE9 		.long	-379745733
 13861 0034 998FF30D 		.long	234065817
 13862 0038 890332C1 		.long	-1053686903
 13863 003c 01       		.byte	1
 13864 003d 00       		.byte	0
 13866 0040 A14421FD 		.long	-48151391
 13867 0044 AED86F30 		.long	812636334
 13868 0048 3CEE0000 		.long	60988
 13869 004c 783366FC 		.long	-60411016
 13870 0050 6B88E237 		.long	937592939
 13871 0054 83E972FD 		.long	-42800765
 13872 0058 B8F12882 		.long	-2111245896
 13873 005c 01       		.byte	1
 13874 005d 00       		.byte	0
 13876 0060 D2359C20 		.long	547108306
 13877 0064 1278EFBB 		.long	-1141934062
 13878 0068 20EE0000 		.long	60960
 13879 006c BF2A5634 		.long	878062271
 13880 0070 06CD4C99 		.long	-1723020026
 13881 0074 21572C6D 		.long	1831622433
 13882 0078 5D8CD6D0 		.long	-791245731
 13883 007c 01       		.byte	1
 13884 007d 00       		.byte	0
 13886 0080 62D754A0 		.long	-1605052574
 13887 0084 CE29515D 		.long	1565600206
 13888 0088 D00B0000 		.long	3024
 13889 008c 00000000 		.long	0
 13890 0090 00000000 		.long	0
 13891 0094 00000000 		.long	0
 13892 0098 00000000 		.long	0
 13893 009c 00       		.byte	0
 13894 009d 00       		.byte	0
 13896 00a0 FBF384F7 		.long	-142281733
 13897 00a4 52A52E18 		.long	405710162
 13898 00a8 480C0000 		.long	3144
 13899 00ac 00000000 		.long	0
 13900 00b0 00000000 		.long	0
 13901 00b4 00000000 		.long	0
 13902 00b8 00000000 		.long	0
 13903 00bc 00       		.byte	0
 13904 00bd 01       		.byte	1
 13906 00c0 FCF39803 		.long	60355580
 13907 00c4 6D529EF2 		.long	-224505235
 13908 00c8 480C0000 		.long	3144
 13909 00cc 00000000 		.long	0
 13910 00d0 00000000 		.long	0
 13911 00d4 00000000 		.long	0
 13912 00d8 00000000 		.long	0
 13913 00dc 00       		.byte	0
 13914 00dd 01       		.byte	1
 13916              		.section	.rodata.D50_nCIEXYZ,"a"
 13917              		.align 8
 13920              	D50_nCIEXYZ:
 13921 0000 00       		.string	""
 13922 0001 00       		.string	""
 13923 0002 F6D600   		.string	"\366\326"
 13924 0005 0100     		.string	"\001"
 13925 0007 00       		.string	""
 13926 0008 00       		.string	""
 13927 0009 00       		.string	""
 13928 000a D32D     		.ascii	"\323-"
 13929              		.section	.rodata.sRGB_xy,"a"
 13930              		.align 32
 13933              	sRGB_xy:
 13934 0000 00FA0000 		.long	64000
 13935 0004 E8800000 		.long	33000
 13936 0008 30750000 		.long	30000
 13937 000c 60EA0000 		.long	60000
 13938 0010 983A0000 		.long	15000
 13939 0014 70170000 		.long	6000
 13940 0018 267A0000 		.long	31270
 13941 001c 84800000 		.long	32900
 13942              		.section	.rodata.cst8,"aM",@progbits,8
 13943              		.align 8
 13944              	.LC0:
 13945 0000 00000000 		.long	0
 13946 0004 00002440 		.long	1076101120
 13947              		.align 8
 13948              	.LC1:
 13949 0008 00000000 		.long	0
 13950 000c 0000F03F 		.long	1072693248
 13951              		.align 8
 13952              	.LC4:
 13953 0010 F168E388 		.long	2296604913
 13954 0014 B5F8E43E 		.long	1055193269
 13955              		.align 8
 13956              	.LC5:
 13957 0018 00000000 		.long	0
 13958 001c E0FFEF40 		.long	1089470432
 13959              		.align 8
 13960              	.LC6:
 13961 0020 00000000 		.long	0
 13962 0024 0000E03F 		.long	1071644672
 13963              		.align 8
 13964              	.LC7:
 13965 0028 00000000 		.long	0
 13966 002c 00003043 		.long	1127219200
 13967              		.section	.rodata.cst16,"aM",@progbits,16
 13968              		.align 16
 13969              	.LC8:
 13970 0000 FFFFFFFF 		.long	4294967295
 13971 0004 FFFFFF7F 		.long	2147483647
 13972 0008 00000000 		.long	0
 13973 000c 00000000 		.long	0
 13974              		.section	.rodata.cst8
 13975              		.align 8
 13976              	.LC9:
 13977 0030 FFFFFFFF 		.long	4294967295
 13978 0034 FFFFFF7F 		.long	2147483647
 13979              		.align 8
 13980              	.LC13:
 13981 0038 0000C0FF 		.long	4290772992
 13982 003c FFFFDF41 		.long	1105199103
 13983              		.align 8
 13984              	.LC14:
 13985 0040 00000000 		.long	0
 13986 0044 0000E0C1 		.long	-1042284544
 13987              		.align 8
 13988              	.LC17:
 13989 0048 00000000 		.long	0
 13990 004c 00E06F40 		.long	1081073664
 13991              		.section	.rodata.cst16
 13992              		.align 16
 13993              	.LC82:
 13994 0010 00000000 		.long	0
 13995 0014 00000080 		.long	-2147483648
 13996 0018 00000000 		.long	0
 13997 001c 00000000 		.long	0
 13998              		.section	.rodata.cst8
 13999              		.align 8
 14000              	.LC83:
 14001 0050 00000000 		.long	0
 14002 0054 00001000 		.long	1048576
 14003              		.align 8
 14004              	.LC84:
 14005 0058 FFFFFFFF 		.long	4294967295
 14006 005c FFFFEF7F 		.long	2146435071
 14007              		.align 8
 14008              	.LC85:
 14009 0060 00000000 		.long	0
 14010 0064 00002240 		.long	1075970048
 14011              		.align 8
 14012              	.LC87:
 14013 0068 00000000 		.long	0
 14014 006c 006AF840 		.long	1090021888
 14015              		.align 8
 14016              	.LC89:
 14017 0070 00000020 		.long	536870912
 14018 0074 5FA00242 		.long	1107468383
 14019              		.align 8
 14020              	.LC93:
 14021 0078 00003426 		.long	640942080
 14022 007c F56B0C43 		.long	1124887541
 14023              		.text
 14024              	.Letext0:
 14025              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 14026              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 14027              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 14028              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 14029              		.file 7 "/usr/include/stdio.h"
 14030              		.file 8 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 14031              		.file 9 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 14032              		.file 10 "/usr/include/setjmp.h"
 14033              		.file 11 "/usr/include/time.h"
 14034              		.file 12 "fltk-1.3.4-1/png/pngconf.h"
 14035              		.file 13 "fltk-1.3.4-1/png/png.h"
 14036              		.file 14 "fltk-1.3.4-1/png/pngstruct.h"
 14037              		.file 15 "fltk-1.3.4-1/png/pnginfo.h"
 14038              		.file 16 "fltk-1.3.4-1/png/pngpriv.h"
 14039              		.file 17 "/usr/include/zconf.h"
 14040              		.file 18 "/usr/include/unistd.h"
 14041              		.file 19 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 14042              		.file 20 "/usr/include/zlib.h"
 14043              		.file 21 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h"
 14044              		.file 22 "/usr/include/stdlib.h"
 14045              		.file 23 "/usr/include/string.h"
 60573              		.section	.note.gnu.property,"a"
 60574              		.align 8
 60575 0000 04000000 		.long	 1f - 0f
 60576 0004 10000000 		.long	 4f - 1f
 60577 0008 05000000 		.long	 5
 60578              	0:
 60579 000c 474E5500 		.string	 "GNU"
 60580              	1:
 60581              		.align 8
 60582 0010 020000C0 		.long	 0xc0000002
 60583 0014 04000000 		.long	 3f - 2f
 60584              	2:
 60585 0018 03000000 		.long	 0x3
 60586              	3:
 60587 001c 00000000 		.align 8
 60588              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 png.c
     /tmp/cc6keEV0.s:7      .text.png_colorspace_endpoints_match:0000000000000000 png_colorspace_endpoints_match
     /tmp/cc6keEV0.s:126    .text.png_pow10:0000000000000000 png_pow10
     /tmp/cc6keEV0.s:232    .text.png_zalloc:0000000000000000 png_zalloc
     /tmp/cc6keEV0.s:272    .text.png_zfree:0000000000000000 png_zfree
     /tmp/cc6keEV0.s:292    .text.png_colorspace_set_xy_and_XYZ:0000000000000000 png_colorspace_set_xy_and_XYZ
     /tmp/cc6keEV0.s:13933  .rodata.sRGB_xy:0000000000000000 sRGB_xy
     /tmp/cc6keEV0.s:472    .text.png_build_16bit_table:0000000000000000 png_build_16bit_table
     /tmp/cc6keEV0.s:782    .text.png_image_free_function:0000000000000000 png_image_free_function
     /tmp/cc6keEV0.s:930    .text.is_ICC_signature_char.part.0:0000000000000000 is_ICC_signature_char.part.0
     /tmp/cc6keEV0.s:958    .text.png_icc_profile_error:0000000000000000 png_icc_profile_error
     /tmp/cc6keEV0.s:1419   .text.png_free_data.part.0:0000000000000000 png_free_data.part.0
     /tmp/cc6keEV0.s:2070   .text.png_muldiv.part.0:0000000000000000 png_muldiv.part.0
     /tmp/cc6keEV0.s:2151   .text.png_xy_from_XYZ:0000000000000000 png_xy_from_XYZ
     /tmp/cc6keEV0.s:2678   .text.png_colorspace_check_xy.part.0:0000000000000000 png_colorspace_check_xy.part.0
     /tmp/cc6keEV0.s:2758   .text.png_colorspace_check_gamma.isra.0:0000000000000000 png_colorspace_check_gamma.isra.0
     /tmp/cc6keEV0.s:2921   .text.png_gamma_8bit_correct.part.0:0000000000000000 png_gamma_8bit_correct.part.0
     /tmp/cc6keEV0.s:2980   .text.png_build_8bit_table:0000000000000000 png_build_8bit_table
     /tmp/cc6keEV0.s:3116   .text.png_gamma_16bit_correct.part.0:0000000000000000 png_gamma_16bit_correct.part.0
     /tmp/cc6keEV0.s:3180   .text.png_set_sig_bytes:0000000000000000 png_set_sig_bytes
     /tmp/cc6keEV0.s:3226   .text.png_sig_cmp:0000000000000000 png_sig_cmp
     /tmp/cc6keEV0.s:3317   .text.png_reset_crc:0000000000000000 png_reset_crc
     /tmp/cc6keEV0.s:3355   .text.png_calculate_crc:0000000000000000 png_calculate_crc
     /tmp/cc6keEV0.s:3515   .text.png_user_version_check:0000000000000000 png_user_version_check
     /tmp/cc6keEV0.s:3717   .text.png_create_png_struct:0000000000000000 png_create_png_struct
     /tmp/cc6keEV0.s:3930   .text.png_create_info_struct:0000000000000000 png_create_info_struct
     /tmp/cc6keEV0.s:4006   .text.png_destroy_info_struct:0000000000000000 png_destroy_info_struct
     /tmp/cc6keEV0.s:4138   .text.png_info_init_3:0000000000000000 png_info_init_3
     /tmp/cc6keEV0.s:4238   .text.png_data_freer:0000000000000000 png_data_freer
     /tmp/cc6keEV0.s:4299   .text.png_free_data:0000000000000000 png_free_data
     /tmp/cc6keEV0.s:4327   .text.png_get_io_ptr:0000000000000000 png_get_io_ptr
     /tmp/cc6keEV0.s:4356   .text.png_init_io:0000000000000000 png_init_io
     /tmp/cc6keEV0.s:4381   .text.png_save_int_32:0000000000000000 png_save_int_32
     /tmp/cc6keEV0.s:4408   .text.png_convert_to_rfc1123_buffer:0000000000000000 png_convert_to_rfc1123_buffer
     /tmp/cc6keEV0.s:13018  .rodata.short_months.6917:0000000000000000 short_months.6917
     /tmp/cc6keEV0.s:4678   .text.png_convert_to_rfc1123:0000000000000000 png_convert_to_rfc1123
     /tmp/cc6keEV0.s:4761   .text.png_get_copyright:0000000000000000 png_get_copyright
     /tmp/cc6keEV0.s:4780   .text.png_get_libpng_ver:0000000000000000 png_get_libpng_ver
     /tmp/cc6keEV0.s:4793   .text.png_get_header_ver:0000000000000000 png_get_header_ver
     /tmp/cc6keEV0.s:4816   .text.png_get_header_version:0000000000000000 png_get_header_version
     /tmp/cc6keEV0.s:4835   .text.png_build_grayscale_palette:0000000000000000 png_build_grayscale_palette
     /tmp/cc6keEV0.s:13005  .rodata.CSWTCH.176:0000000000000000 CSWTCH.176
     /tmp/cc6keEV0.s:12992  .rodata.CSWTCH.177:0000000000000000 CSWTCH.177
     /tmp/cc6keEV0.s:4907   .text.png_handle_as_unknown:0000000000000000 png_handle_as_unknown
     /tmp/cc6keEV0.s:4980   .text.png_chunk_unknown_handling:0000000000000000 png_chunk_unknown_handling
     /tmp/cc6keEV0.s:5026   .text.png_reset_zstream:0000000000000000 png_reset_zstream
     /tmp/cc6keEV0.s:5055   .text.png_access_version_number:0000000000000000 png_access_version_number
     /tmp/cc6keEV0.s:5092   .text.png_zstream_error:0000000000000000 png_zstream_error
     /tmp/cc6keEV0.s:5216   .text.png_colorspace_set_gamma:0000000000000000 png_colorspace_set_gamma
     /tmp/cc6keEV0.s:5351   .text.png_colorspace_sync_info:0000000000000000 png_colorspace_sync_info
     /tmp/cc6keEV0.s:5429   .text.png_colorspace_sync:0000000000000000 png_colorspace_sync
     /tmp/cc6keEV0.s:5486   .text.png_colorspace_set_sRGB:0000000000000000 png_colorspace_set_sRGB
     /tmp/cc6keEV0.s:5699   .text.png_icc_check_length:0000000000000000 png_icc_check_length
     /tmp/cc6keEV0.s:5778   .text.png_icc_check_header:0000000000000000 png_icc_check_header
     /tmp/cc6keEV0.s:13920  .rodata.D50_nCIEXYZ:0000000000000000 D50_nCIEXYZ
     /tmp/cc6keEV0.s:6299   .text.png_icc_check_tag_table:0000000000000000 png_icc_check_tag_table
     /tmp/cc6keEV0.s:6567   .text.png_icc_set_sRGB:0000000000000000 png_icc_set_sRGB
     /tmp/cc6keEV0.s:13845  .rodata.png_sRGB_checks:0000000000000000 png_sRGB_checks
     /tmp/cc6keEV0.s:7046   .text.png_colorspace_set_ICC:0000000000000000 png_colorspace_set_ICC
     /tmp/cc6keEV0.s:7238   .text.png_colorspace_set_rgb_coefficients:0000000000000000 png_colorspace_set_rgb_coefficients
     /tmp/cc6keEV0.s:7545   .text.png_check_IHDR:0000000000000000 png_check_IHDR
     /tmp/cc6keEV0.s:7933   .text.png_check_fp_number:0000000000000000 png_check_fp_number
     /tmp/cc6keEV0.s:8347   .text.png_check_fp_string:0000000000000000 png_check_fp_string
     /tmp/cc6keEV0.s:8419   .text.png_ascii_from_fp:0000000000000000 png_ascii_from_fp
     /tmp/cc6keEV0.s:9366   .text.png_ascii_from_fixed:0000000000000000 png_ascii_from_fixed
     /tmp/cc6keEV0.s:9679   .text.png_fixed:0000000000000000 png_fixed
     /tmp/cc6keEV0.s:9740   .text.png_muldiv:0000000000000000 png_muldiv
     /tmp/cc6keEV0.s:9788   .text.png_muldiv_warn:0000000000000000 png_muldiv_warn
     /tmp/cc6keEV0.s:9860   .text.png_reciprocal:0000000000000000 png_reciprocal
     /tmp/cc6keEV0.s:9924   .text.png_XYZ_from_xy:0000000000000000 png_XYZ_from_xy
     /tmp/cc6keEV0.s:10951  .text.png_colorspace_set_endpoints:0000000000000000 png_colorspace_set_endpoints
     /tmp/cc6keEV0.s:11497  .text.png_colorspace_set_chromaticities:0000000000000000 png_colorspace_set_chromaticities
     /tmp/cc6keEV0.s:11655  .text.png_gamma_significant:0000000000000000 png_gamma_significant
     /tmp/cc6keEV0.s:11679  .text.png_reciprocal2:0000000000000000 png_reciprocal2
     /tmp/cc6keEV0.s:11753  .text.png_gamma_8bit_correct:0000000000000000 png_gamma_8bit_correct
     /tmp/cc6keEV0.s:11783  .text.png_gamma_16bit_correct:0000000000000000 png_gamma_16bit_correct
     /tmp/cc6keEV0.s:11813  .text.png_gamma_correct:0000000000000000 png_gamma_correct
     /tmp/cc6keEV0.s:11911  .text.png_destroy_gamma_table:0000000000000000 png_destroy_gamma_table
     /tmp/cc6keEV0.s:12144  .text.png_build_gamma_table:0000000000000000 png_build_gamma_table
     /tmp/cc6keEV0.s:12807  .text.png_set_option:0000000000000000 png_set_option
     /tmp/cc6keEV0.s:12882  .text.png_image_free:0000000000000000 png_image_free
     /tmp/cc6keEV0.s:12944  .text.png_image_error:0000000000000000 png_image_error
     /tmp/cc6keEV0.s:13036  .rodata.png_sRGB_delta:0000000000000000 png_sRGB_delta
     /tmp/cc6keEV0.s:13066  .rodata.png_sRGB_base:0000000000000000 png_sRGB_base
     /tmp/cc6keEV0.s:13584  .rodata.png_sRGB_table:0000000000000000 png_sRGB_table
     /tmp/cc6keEV0.s:13948  .rodata.cst8:0000000000000008 .LC1
     /tmp/cc6keEV0.s:13944  .rodata.cst8:0000000000000000 .LC0
     /tmp/cc6keEV0.s:287    .rodata.png_colorspace_set_xy_and_XYZ.str1.1:0000000000000000 .LC3
     /tmp/cc6keEV0.s:13952  .rodata.cst8:0000000000000010 .LC4
     /tmp/cc6keEV0.s:13956  .rodata.cst8:0000000000000018 .LC5
     /tmp/cc6keEV0.s:13960  .rodata.cst8:0000000000000020 .LC6
     /tmp/cc6keEV0.s:13976  .rodata.cst8:0000000000000030 .LC9
     /tmp/cc6keEV0.s:13964  .rodata.cst8:0000000000000028 .LC7
     /tmp/cc6keEV0.s:949    .rodata.png_icc_profile_error.str1.1:0000000000000000 .LC10
     /tmp/cc6keEV0.s:951    .rodata.png_icc_profile_error.str1.1:000000000000000a .LC11
     /tmp/cc6keEV0.s:953    .rodata.png_icc_profile_error.str1.1:000000000000000e .LC12
     /tmp/cc6keEV0.s:13969  .rodata.cst16:0000000000000000 .LC8
     /tmp/cc6keEV0.s:13980  .rodata.cst8:0000000000000038 .LC13
     /tmp/cc6keEV0.s:13984  .rodata.cst8:0000000000000040 .LC14
     /tmp/cc6keEV0.s:2753   .rodata.png_colorspace_check_gamma.isra.0.str1.8:0000000000000020 .LC16
     /tmp/cc6keEV0.s:2750   .rodata.png_colorspace_check_gamma.isra.0.str1.8:0000000000000000 .LC15
     /tmp/cc6keEV0.s:13988  .rodata.cst8:0000000000000048 .LC17
     /tmp/cc6keEV0.s:3174   .rodata.png_set_sig_bytes.str1.8:0000000000000000 .LC18
     /tmp/cc6keEV0.s:3502   .rodata.png_user_version_check.str1.1:0000000000000000 .LC19
     /tmp/cc6keEV0.s:3506   .rodata.png_user_version_check.str1.8:0000000000000000 .LC20
     /tmp/cc6keEV0.s:3509   .rodata.png_user_version_check.str1.1:0000000000000007 .LC21
     /tmp/cc6keEV0.s:4232   .rodata.png_data_freer.str1.8:0000000000000000 .LC22
     /tmp/cc6keEV0.s:4402   .rodata.png_convert_to_rfc1123_buffer.str1.1:0000000000000000 .LC23
     /tmp/cc6keEV0.s:4672   .rodata.png_convert_to_rfc1123.str1.1:0000000000000000 .LC24
     /tmp/cc6keEV0.s:4755   .rodata.png_get_copyright.str1.8:0000000000000000 .LC25
     /tmp/cc6keEV0.s:4810   .rodata.png_get_header_version.str1.8:0000000000000000 .LC26
     /tmp/cc6keEV0.s:5072   .rodata.png_zstream_error.str1.1:0000000000000038 .LC29
     /tmp/cc6keEV0.s:5070   .rodata.png_zstream_error.str1.1:000000000000001c .LC28
     /tmp/cc6keEV0.s:5074   .rodata.png_zstream_error.str1.1:000000000000004e .LC30
     /tmp/cc6keEV0.s:5076   .rodata.png_zstream_error.str1.1:000000000000005c .LC31
     /tmp/cc6keEV0.s:5078   .rodata.png_zstream_error.str1.1:0000000000000073 .LC32
     /tmp/cc6keEV0.s:5080   .rodata.png_zstream_error.str1.1:0000000000000085 .LC33
     /tmp/cc6keEV0.s:5082   .rodata.png_zstream_error.str1.1:0000000000000099 .LC34
     /tmp/cc6keEV0.s:5084   .rodata.png_zstream_error.str1.1:00000000000000a3 .LC35
     /tmp/cc6keEV0.s:5086   .rodata.png_zstream_error.str1.1:00000000000000bc .LC36
     /tmp/cc6keEV0.s:5068   .rodata.png_zstream_error.str1.1:0000000000000000 .LC27
     /tmp/cc6keEV0.s:5210   .rodata.png_colorspace_set_gamma.str1.1:0000000000000019 .LC38
     /tmp/cc6keEV0.s:5208   .rodata.png_colorspace_set_gamma.str1.1:0000000000000000 .LC37
     /tmp/cc6keEV0.s:5468   .rodata.png_colorspace_set_sRGB.str1.1:0000000000000000 .LC39
     /tmp/cc6keEV0.s:5480   .rodata.png_colorspace_set_sRGB.str1.8:0000000000000048 .LC43
     /tmp/cc6keEV0.s:5474   .rodata.png_colorspace_set_sRGB.str1.8:0000000000000000 .LC41
     /tmp/cc6keEV0.s:5470   .rodata.png_colorspace_set_sRGB.str1.1:000000000000001e .LC40
     /tmp/cc6keEV0.s:5477   .rodata.png_colorspace_set_sRGB.str1.8:0000000000000020 .LC42
     /tmp/cc6keEV0.s:5693   .rodata.png_icc_check_length.str1.1:0000000000000000 .LC44
     /tmp/cc6keEV0.s:5741   .rodata.png_icc_check_header.str1.1:0000000000000041 .LC48
     /tmp/cc6keEV0.s:5745   .rodata.png_icc_check_header.str1.1:0000000000000077 .LC50
     /tmp/cc6keEV0.s:5747   .rodata.png_icc_check_header.str1.1:0000000000000089 .LC51
     /tmp/cc6keEV0.s:5751   .rodata.png_icc_check_header.str1.8:0000000000000000 .LC52
     /tmp/cc6keEV0.s:5763   .rodata.png_icc_check_header.str1.8:00000000000000a8 .LC56
     /tmp/cc6keEV0.s:5739   .rodata.png_icc_check_header.str1.1:000000000000002d .LC47
     /tmp/cc6keEV0.s:5735   .rodata.png_icc_check_header.str1.1:0000000000000000 .LC45
     /tmp/cc6keEV0.s:5743   .rodata.png_icc_check_header.str1.1:000000000000005a .LC49
     /tmp/cc6keEV0.s:5737   .rodata.png_icc_check_header.str1.1:000000000000001e .LC46
     /tmp/cc6keEV0.s:5769   .rodata.png_icc_check_header.str1.8:00000000000000f8 .LC58
     /tmp/cc6keEV0.s:5757   .rodata.png_icc_check_header.str1.8:0000000000000060 .LC54
     /tmp/cc6keEV0.s:5754   .rodata.png_icc_check_header.str1.8:0000000000000030 .LC53
     /tmp/cc6keEV0.s:5772   .rodata.png_icc_check_header.str1.1:00000000000000a3 .LC59
     /tmp/cc6keEV0.s:5766   .rodata.png_icc_check_header.str1.8:00000000000000d0 .LC57
     /tmp/cc6keEV0.s:5760   .rodata.png_icc_check_header.str1.8:0000000000000080 .LC55
     /tmp/cc6keEV0.s:6290   .rodata.png_icc_check_tag_table.str1.8:0000000000000000 .LC60
     /tmp/cc6keEV0.s:6293   .rodata.png_icc_check_tag_table.str1.8:0000000000000030 .LC61
     /tmp/cc6keEV0.s:6561   .rodata.png_icc_set_sRGB.str1.8:0000000000000030 .LC64
     /tmp/cc6keEV0.s:6554   .rodata.png_icc_set_sRGB.str1.1:0000000000000000 .LC62
     /tmp/cc6keEV0.s:6558   .rodata.png_icc_set_sRGB.str1.8:0000000000000000 .LC63
     /tmp/cc6keEV0.s:7232   .rodata.png_colorspace_set_rgb_coefficients.str1.8:0000000000000030 .LC66
     /tmp/cc6keEV0.s:7229   .rodata.png_colorspace_set_rgb_coefficients.str1.8:0000000000000000 .LC65
     /tmp/cc6keEV0.s:7519   .rodata.png_check_IHDR.str1.1:000000000000008c .LC74
     /tmp/cc6keEV0.s:7523   .rodata.png_check_IHDR.str1.8:0000000000000050 .LC75
     /tmp/cc6keEV0.s:7526   .rodata.png_check_IHDR.str1.8:0000000000000088 .LC76
     /tmp/cc6keEV0.s:7535   .rodata.png_check_IHDR.str1.1:00000000000000a7 .LC79
     /tmp/cc6keEV0.s:7539   .rodata.png_check_IHDR.str1.1:00000000000000e3 .LC81
     /tmp/cc6keEV0.s:7532   .rodata.png_check_IHDR.str1.8:00000000000000d8 .LC78
     /tmp/cc6keEV0.s:7517   .rodata.png_check_IHDR.str1.1:0000000000000072 .LC73
     /tmp/cc6keEV0.s:7508   .rodata.png_check_IHDR.str1.1:0000000000000038 .LC70
     /tmp/cc6keEV0.s:7529   .rodata.png_check_IHDR.str1.8:00000000000000b0 .LC77
     /tmp/cc6keEV0.s:7499   .rodata.png_check_IHDR.str1.1:0000000000000000 .LC67
     /tmp/cc6keEV0.s:7501   .rodata.png_check_IHDR.str1.1:000000000000001c .LC68
     /tmp/cc6keEV0.s:7510   .rodata.png_check_IHDR.str1.1:0000000000000055 .LC71
     /tmp/cc6keEV0.s:7514   .rodata.png_check_IHDR.str1.8:0000000000000028 .LC72
     /tmp/cc6keEV0.s:7505   .rodata.png_check_IHDR.str1.8:0000000000000000 .LC69
     /tmp/cc6keEV0.s:7537   .rodata.png_check_IHDR.str1.1:00000000000000c5 .LC80
     /tmp/cc6keEV0.s:13993  .rodata.cst16:0000000000000010 .LC82
     /tmp/cc6keEV0.s:14000  .rodata.cst8:0000000000000050 .LC83
     /tmp/cc6keEV0.s:14004  .rodata.cst8:0000000000000058 .LC84
     /tmp/cc6keEV0.s:14008  .rodata.cst8:0000000000000060 .LC85
     /tmp/cc6keEV0.s:8413   .rodata.png_ascii_from_fp.str1.8:0000000000000000 .LC86
     /tmp/cc6keEV0.s:14012  .rodata.cst8:0000000000000068 .LC87
     /tmp/cc6keEV0.s:9782   .rodata.png_muldiv_warn.str1.1:0000000000000000 .LC88
     /tmp/cc6keEV0.s:14016  .rodata.cst8:0000000000000070 .LC89
     /tmp/cc6keEV0.s:10941  .rodata.png_colorspace_set_endpoints.str1.1:0000000000000000 .LC90
     /tmp/cc6keEV0.s:10945  .rodata.png_colorspace_set_endpoints.str1.8:0000000000000000 .LC91
     /tmp/cc6keEV0.s:11491  .rodata.png_colorspace_set_chromaticities.str1.1:0000000000000000 .LC92
     /tmp/cc6keEV0.s:14020  .rodata.cst8:0000000000000078 .LC93
     /tmp/cc6keEV0.s:12138  .rodata.png_build_gamma_table.str1.1:0000000000000000 .LC94
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
png_malloc_warn
png_free
png_benign_error
png_calloc
png_malloc
pow
fclose
png_destroy_read_struct
png_destroy_write_struct
__stack_chk_fail
png_safecat
png_format_number
png_chunk_report
png_error
memcmp
crc32
png_warning
png_set_mem_fn
png_set_error_fn
_setjmp
__longjmp_chk
png_malloc_base
free
inflateReset
adler32
frexp
modf
png_fixed_error
png_safe_execute
