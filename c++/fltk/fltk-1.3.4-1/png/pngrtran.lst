   1              		.file	"pngrtran.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely.png_do_gray_to_rgb,"ax",@progbits
   5              	.LCOLDB0:
   6              		.section	.text.png_do_gray_to_rgb,"ax",@progbits
   7              	.LHOTB0:
   8              		.p2align 4,,15
   9              		.section	.text.unlikely.png_do_gray_to_rgb
  10              	.Ltext_cold0:
  11              		.section	.text.png_do_gray_to_rgb
  13              	png_do_gray_to_rgb:
  14              	.LFB91:
  15              		.file 1 "fltk-1.3.4-1/png/pngrtran.c"
   1:fltk-1.3.4-1/png/pngrtran.c **** 
   2:fltk-1.3.4-1/png/pngrtran.c **** /* pngrtran.c - transforms the data in a row for PNG readers
   3:fltk-1.3.4-1/png/pngrtran.c ****  *
   4:fltk-1.3.4-1/png/pngrtran.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngrtran.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngrtran.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngrtran.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngrtran.c ****  *
   9:fltk-1.3.4-1/png/pngrtran.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngrtran.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngrtran.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngrtran.c ****  *
  13:fltk-1.3.4-1/png/pngrtran.c ****  * This file contains functions optionally called by an application
  14:fltk-1.3.4-1/png/pngrtran.c ****  * in order to tell libpng how to handle data when reading a PNG.
  15:fltk-1.3.4-1/png/pngrtran.c ****  * Transformations that are used in both reading and writing are
  16:fltk-1.3.4-1/png/pngrtran.c ****  * in pngtrans.c.
  17:fltk-1.3.4-1/png/pngrtran.c ****  */
  18:fltk-1.3.4-1/png/pngrtran.c **** 
  19:fltk-1.3.4-1/png/pngrtran.c **** #include "pngpriv.h"
  20:fltk-1.3.4-1/png/pngrtran.c **** 
  21:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SUPPORTED
  22:fltk-1.3.4-1/png/pngrtran.c **** 
  23:fltk-1.3.4-1/png/pngrtran.c **** /* Set the action on getting a CRC error for an ancillary or critical chunk. */
  24:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
  25:fltk-1.3.4-1/png/pngrtran.c **** png_set_crc_action(png_structrp png_ptr, int crit_action, int ancil_action)
  26:fltk-1.3.4-1/png/pngrtran.c **** {
  27:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_crc_action");
  28:fltk-1.3.4-1/png/pngrtran.c **** 
  29:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr == NULL)
  30:fltk-1.3.4-1/png/pngrtran.c ****       return;
  31:fltk-1.3.4-1/png/pngrtran.c **** 
  32:fltk-1.3.4-1/png/pngrtran.c ****    /* Tell libpng how we react to CRC errors in critical chunks */
  33:fltk-1.3.4-1/png/pngrtran.c ****    switch (crit_action)
  34:fltk-1.3.4-1/png/pngrtran.c ****    {
  35:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_NO_CHANGE:                        /* Leave setting as is */
  36:fltk-1.3.4-1/png/pngrtran.c ****          break;
  37:fltk-1.3.4-1/png/pngrtran.c **** 
  38:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_WARN_USE:                               /* Warn/use data */
  39:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_CRC_CRITICAL_MASK;
  40:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_CRC_CRITICAL_USE;
  41:fltk-1.3.4-1/png/pngrtran.c ****          break;
  42:fltk-1.3.4-1/png/pngrtran.c **** 
  43:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_QUIET_USE:                             /* Quiet/use data */
  44:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_CRC_CRITICAL_MASK;
  45:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_CRC_CRITICAL_USE |
  46:fltk-1.3.4-1/png/pngrtran.c ****                            PNG_FLAG_CRC_CRITICAL_IGNORE;
  47:fltk-1.3.4-1/png/pngrtran.c ****          break;
  48:fltk-1.3.4-1/png/pngrtran.c **** 
  49:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_WARN_DISCARD:    /* Not a valid action for critical data */
  50:fltk-1.3.4-1/png/pngrtran.c ****          png_warning(png_ptr,
  51:fltk-1.3.4-1/png/pngrtran.c ****             "Can't discard critical data on CRC error");
  52:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_ERROR_QUIT:                                /* Error/quit */
  53:fltk-1.3.4-1/png/pngrtran.c **** 
  54:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_DEFAULT:
  55:fltk-1.3.4-1/png/pngrtran.c ****       default:
  56:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_CRC_CRITICAL_MASK;
  57:fltk-1.3.4-1/png/pngrtran.c ****          break;
  58:fltk-1.3.4-1/png/pngrtran.c ****    }
  59:fltk-1.3.4-1/png/pngrtran.c **** 
  60:fltk-1.3.4-1/png/pngrtran.c ****    /* Tell libpng how we react to CRC errors in ancillary chunks */
  61:fltk-1.3.4-1/png/pngrtran.c ****    switch (ancil_action)
  62:fltk-1.3.4-1/png/pngrtran.c ****    {
  63:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_NO_CHANGE:                       /* Leave setting as is */
  64:fltk-1.3.4-1/png/pngrtran.c ****          break;
  65:fltk-1.3.4-1/png/pngrtran.c **** 
  66:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_WARN_USE:                              /* Warn/use data */
  67:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_CRC_ANCILLARY_MASK;
  68:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_CRC_ANCILLARY_USE;
  69:fltk-1.3.4-1/png/pngrtran.c ****          break;
  70:fltk-1.3.4-1/png/pngrtran.c **** 
  71:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_QUIET_USE:                            /* Quiet/use data */
  72:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_CRC_ANCILLARY_MASK;
  73:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_CRC_ANCILLARY_USE |
  74:fltk-1.3.4-1/png/pngrtran.c ****                            PNG_FLAG_CRC_ANCILLARY_NOWARN;
  75:fltk-1.3.4-1/png/pngrtran.c ****          break;
  76:fltk-1.3.4-1/png/pngrtran.c **** 
  77:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_ERROR_QUIT:                               /* Error/quit */
  78:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_CRC_ANCILLARY_MASK;
  79:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_CRC_ANCILLARY_NOWARN;
  80:fltk-1.3.4-1/png/pngrtran.c ****          break;
  81:fltk-1.3.4-1/png/pngrtran.c **** 
  82:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_WARN_DISCARD:                      /* Warn/discard data */
  83:fltk-1.3.4-1/png/pngrtran.c **** 
  84:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_CRC_DEFAULT:
  85:fltk-1.3.4-1/png/pngrtran.c ****       default:
  86:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_CRC_ANCILLARY_MASK;
  87:fltk-1.3.4-1/png/pngrtran.c ****          break;
  88:fltk-1.3.4-1/png/pngrtran.c ****    }
  89:fltk-1.3.4-1/png/pngrtran.c **** }
  90:fltk-1.3.4-1/png/pngrtran.c **** 
  91:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_TRANSFORMS_SUPPORTED
  92:fltk-1.3.4-1/png/pngrtran.c **** /* Is it OK to set a transformation now?  Only if png_start_read_image or
  93:fltk-1.3.4-1/png/pngrtran.c ****  * png_read_update_info have not been called.  It is not necessary for the IHDR
  94:fltk-1.3.4-1/png/pngrtran.c ****  * to have been read in all cases; the need_IHDR parameter allows for this
  95:fltk-1.3.4-1/png/pngrtran.c ****  * check too.
  96:fltk-1.3.4-1/png/pngrtran.c ****  */
  97:fltk-1.3.4-1/png/pngrtran.c **** static int
  98:fltk-1.3.4-1/png/pngrtran.c **** png_rtran_ok(png_structrp png_ptr, int need_IHDR)
  99:fltk-1.3.4-1/png/pngrtran.c **** {
 100:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr != NULL)
 101:fltk-1.3.4-1/png/pngrtran.c ****    {
 102:fltk-1.3.4-1/png/pngrtran.c ****       if ((png_ptr->flags & PNG_FLAG_ROW_INIT) != 0)
 103:fltk-1.3.4-1/png/pngrtran.c ****          png_app_error(png_ptr,
 104:fltk-1.3.4-1/png/pngrtran.c ****             "invalid after png_start_read_image or png_read_update_info");
 105:fltk-1.3.4-1/png/pngrtran.c **** 
 106:fltk-1.3.4-1/png/pngrtran.c ****       else if (need_IHDR && (png_ptr->mode & PNG_HAVE_IHDR) == 0)
 107:fltk-1.3.4-1/png/pngrtran.c ****          png_app_error(png_ptr, "invalid before the PNG header has been read");
 108:fltk-1.3.4-1/png/pngrtran.c **** 
 109:fltk-1.3.4-1/png/pngrtran.c ****       else
 110:fltk-1.3.4-1/png/pngrtran.c ****       {
 111:fltk-1.3.4-1/png/pngrtran.c ****          /* Turn on failure to initialize correctly for all transforms. */
 112:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_DETECT_UNINITIALIZED;
 113:fltk-1.3.4-1/png/pngrtran.c **** 
 114:fltk-1.3.4-1/png/pngrtran.c ****          return 1; /* Ok */
 115:fltk-1.3.4-1/png/pngrtran.c ****       }
 116:fltk-1.3.4-1/png/pngrtran.c ****    }
 117:fltk-1.3.4-1/png/pngrtran.c **** 
 118:fltk-1.3.4-1/png/pngrtran.c ****    return 0; /* no png_error possible! */
 119:fltk-1.3.4-1/png/pngrtran.c **** }
 120:fltk-1.3.4-1/png/pngrtran.c **** #endif
 121:fltk-1.3.4-1/png/pngrtran.c **** 
 122:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_BACKGROUND_SUPPORTED
 123:fltk-1.3.4-1/png/pngrtran.c **** /* Handle alpha and tRNS via a background color */
 124:fltk-1.3.4-1/png/pngrtran.c **** void PNGFAPI
 125:fltk-1.3.4-1/png/pngrtran.c **** png_set_background_fixed(png_structrp png_ptr,
 126:fltk-1.3.4-1/png/pngrtran.c ****     png_const_color_16p background_color, int background_gamma_code,
 127:fltk-1.3.4-1/png/pngrtran.c ****     int need_expand, png_fixed_point background_gamma)
 128:fltk-1.3.4-1/png/pngrtran.c **** {
 129:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_background_fixed");
 130:fltk-1.3.4-1/png/pngrtran.c **** 
 131:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0 || background_color == NULL)
 132:fltk-1.3.4-1/png/pngrtran.c ****       return;
 133:fltk-1.3.4-1/png/pngrtran.c **** 
 134:fltk-1.3.4-1/png/pngrtran.c ****    if (background_gamma_code == PNG_BACKGROUND_GAMMA_UNKNOWN)
 135:fltk-1.3.4-1/png/pngrtran.c ****    {
 136:fltk-1.3.4-1/png/pngrtran.c ****       png_warning(png_ptr, "Application must supply a known background gamma");
 137:fltk-1.3.4-1/png/pngrtran.c ****       return;
 138:fltk-1.3.4-1/png/pngrtran.c ****    }
 139:fltk-1.3.4-1/png/pngrtran.c **** 
 140:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_COMPOSE | PNG_STRIP_ALPHA;
 141:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
 142:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 143:fltk-1.3.4-1/png/pngrtran.c **** 
 144:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->background = *background_color;
 145:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->background_gamma = background_gamma;
 146:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->background_gamma_type = (png_byte)(background_gamma_code);
 147:fltk-1.3.4-1/png/pngrtran.c ****    if (need_expand != 0)
 148:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations |= PNG_BACKGROUND_EXPAND;
 149:fltk-1.3.4-1/png/pngrtran.c ****    else
 150:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~PNG_BACKGROUND_EXPAND;
 151:fltk-1.3.4-1/png/pngrtran.c **** }
 152:fltk-1.3.4-1/png/pngrtran.c **** 
 153:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
 154:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 155:fltk-1.3.4-1/png/pngrtran.c **** png_set_background(png_structrp png_ptr,
 156:fltk-1.3.4-1/png/pngrtran.c ****     png_const_color_16p background_color, int background_gamma_code,
 157:fltk-1.3.4-1/png/pngrtran.c ****     int need_expand, double background_gamma)
 158:fltk-1.3.4-1/png/pngrtran.c **** {
 159:fltk-1.3.4-1/png/pngrtran.c ****    png_set_background_fixed(png_ptr, background_color, background_gamma_code,
 160:fltk-1.3.4-1/png/pngrtran.c ****       need_expand, png_fixed(png_ptr, background_gamma, "png_set_background"));
 161:fltk-1.3.4-1/png/pngrtran.c **** }
 162:fltk-1.3.4-1/png/pngrtran.c **** #  endif  /* FLOATING_POINT */
 163:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_BACKGROUND */
 164:fltk-1.3.4-1/png/pngrtran.c **** 
 165:fltk-1.3.4-1/png/pngrtran.c **** /* Scale 16-bit depth files to 8-bit depth.  If both of these are set then the
 166:fltk-1.3.4-1/png/pngrtran.c ****  * one that pngrtran does first (scale) happens.  This is necessary to allow the
 167:fltk-1.3.4-1/png/pngrtran.c ****  * TRANSFORM and API behavior to be somewhat consistent, and it's simpler.
 168:fltk-1.3.4-1/png/pngrtran.c ****  */
 169:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED
 170:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 171:fltk-1.3.4-1/png/pngrtran.c **** png_set_scale_16(png_structrp png_ptr)
 172:fltk-1.3.4-1/png/pngrtran.c **** {
 173:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_scale_16");
 174:fltk-1.3.4-1/png/pngrtran.c **** 
 175:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 176:fltk-1.3.4-1/png/pngrtran.c ****       return;
 177:fltk-1.3.4-1/png/pngrtran.c **** 
 178:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_SCALE_16_TO_8;
 179:fltk-1.3.4-1/png/pngrtran.c **** }
 180:fltk-1.3.4-1/png/pngrtran.c **** #endif
 181:fltk-1.3.4-1/png/pngrtran.c **** 
 182:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
 183:fltk-1.3.4-1/png/pngrtran.c **** /* Chop 16-bit depth files to 8-bit depth */
 184:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 185:fltk-1.3.4-1/png/pngrtran.c **** png_set_strip_16(png_structrp png_ptr)
 186:fltk-1.3.4-1/png/pngrtran.c **** {
 187:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_strip_16");
 188:fltk-1.3.4-1/png/pngrtran.c **** 
 189:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 190:fltk-1.3.4-1/png/pngrtran.c ****       return;
 191:fltk-1.3.4-1/png/pngrtran.c **** 
 192:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_16_TO_8;
 193:fltk-1.3.4-1/png/pngrtran.c **** }
 194:fltk-1.3.4-1/png/pngrtran.c **** #endif
 195:fltk-1.3.4-1/png/pngrtran.c **** 
 196:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
 197:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 198:fltk-1.3.4-1/png/pngrtran.c **** png_set_strip_alpha(png_structrp png_ptr)
 199:fltk-1.3.4-1/png/pngrtran.c **** {
 200:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_strip_alpha");
 201:fltk-1.3.4-1/png/pngrtran.c **** 
 202:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 203:fltk-1.3.4-1/png/pngrtran.c ****       return;
 204:fltk-1.3.4-1/png/pngrtran.c **** 
 205:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_STRIP_ALPHA;
 206:fltk-1.3.4-1/png/pngrtran.c **** }
 207:fltk-1.3.4-1/png/pngrtran.c **** #endif
 208:fltk-1.3.4-1/png/pngrtran.c **** 
 209:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_ALPHA_MODE_SUPPORTED) || defined(PNG_READ_GAMMA_SUPPORTED)
 210:fltk-1.3.4-1/png/pngrtran.c **** static png_fixed_point
 211:fltk-1.3.4-1/png/pngrtran.c **** translate_gamma_flags(png_structrp png_ptr, png_fixed_point output_gamma,
 212:fltk-1.3.4-1/png/pngrtran.c ****    int is_screen)
 213:fltk-1.3.4-1/png/pngrtran.c **** {
 214:fltk-1.3.4-1/png/pngrtran.c ****    /* Check for flag values.  The main reason for having the old Mac value as a
 215:fltk-1.3.4-1/png/pngrtran.c ****     * flag is that it is pretty near impossible to work out what the correct
 216:fltk-1.3.4-1/png/pngrtran.c ****     * value is from Apple documentation - a working Mac system is needed to
 217:fltk-1.3.4-1/png/pngrtran.c ****     * discover the value!
 218:fltk-1.3.4-1/png/pngrtran.c ****     */
 219:fltk-1.3.4-1/png/pngrtran.c ****    if (output_gamma == PNG_DEFAULT_sRGB ||
 220:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_DEFAULT_sRGB)
 221:fltk-1.3.4-1/png/pngrtran.c ****    {
 222:fltk-1.3.4-1/png/pngrtran.c ****       /* If there is no sRGB support this just sets the gamma to the standard
 223:fltk-1.3.4-1/png/pngrtran.c ****        * sRGB value.  (This is a side effect of using this function!)
 224:fltk-1.3.4-1/png/pngrtran.c ****        */
 225:fltk-1.3.4-1/png/pngrtran.c **** #     ifdef PNG_READ_sRGB_SUPPORTED
 226:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_ASSUME_sRGB;
 227:fltk-1.3.4-1/png/pngrtran.c **** #     else
 228:fltk-1.3.4-1/png/pngrtran.c ****          PNG_UNUSED(png_ptr)
 229:fltk-1.3.4-1/png/pngrtran.c **** #     endif
 230:fltk-1.3.4-1/png/pngrtran.c ****       if (is_screen != 0)
 231:fltk-1.3.4-1/png/pngrtran.c ****          output_gamma = PNG_GAMMA_sRGB;
 232:fltk-1.3.4-1/png/pngrtran.c ****       else
 233:fltk-1.3.4-1/png/pngrtran.c ****          output_gamma = PNG_GAMMA_sRGB_INVERSE;
 234:fltk-1.3.4-1/png/pngrtran.c ****    }
 235:fltk-1.3.4-1/png/pngrtran.c **** 
 236:fltk-1.3.4-1/png/pngrtran.c ****    else if (output_gamma == PNG_GAMMA_MAC_18 ||
 237:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_GAMMA_MAC_18)
 238:fltk-1.3.4-1/png/pngrtran.c ****    {
 239:fltk-1.3.4-1/png/pngrtran.c ****       if (is_screen != 0)
 240:fltk-1.3.4-1/png/pngrtran.c ****          output_gamma = PNG_GAMMA_MAC_OLD;
 241:fltk-1.3.4-1/png/pngrtran.c ****       else
 242:fltk-1.3.4-1/png/pngrtran.c ****          output_gamma = PNG_GAMMA_MAC_INVERSE;
 243:fltk-1.3.4-1/png/pngrtran.c ****    }
 244:fltk-1.3.4-1/png/pngrtran.c **** 
 245:fltk-1.3.4-1/png/pngrtran.c ****    return output_gamma;
 246:fltk-1.3.4-1/png/pngrtran.c **** }
 247:fltk-1.3.4-1/png/pngrtran.c **** 
 248:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
 249:fltk-1.3.4-1/png/pngrtran.c **** static png_fixed_point
 250:fltk-1.3.4-1/png/pngrtran.c **** convert_gamma_value(png_structrp png_ptr, double output_gamma)
 251:fltk-1.3.4-1/png/pngrtran.c **** {
 252:fltk-1.3.4-1/png/pngrtran.c ****    /* The following silently ignores cases where fixed point (times 100,000)
 253:fltk-1.3.4-1/png/pngrtran.c ****     * gamma values are passed to the floating point API.  This is safe and it
 254:fltk-1.3.4-1/png/pngrtran.c ****     * means the fixed point constants work just fine with the floating point
 255:fltk-1.3.4-1/png/pngrtran.c ****     * API.  The alternative would just lead to undetected errors and spurious
 256:fltk-1.3.4-1/png/pngrtran.c ****     * bug reports.  Negative values fail inside the _fixed API unless they
 257:fltk-1.3.4-1/png/pngrtran.c ****     * correspond to the flag values.
 258:fltk-1.3.4-1/png/pngrtran.c ****     */
 259:fltk-1.3.4-1/png/pngrtran.c ****    if (output_gamma > 0 && output_gamma < 128)
 260:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma *= PNG_FP_1;
 261:fltk-1.3.4-1/png/pngrtran.c **** 
 262:fltk-1.3.4-1/png/pngrtran.c ****    /* This preserves -1 and -2 exactly: */
 263:fltk-1.3.4-1/png/pngrtran.c ****    output_gamma = floor(output_gamma + .5);
 264:fltk-1.3.4-1/png/pngrtran.c **** 
 265:fltk-1.3.4-1/png/pngrtran.c ****    if (output_gamma > PNG_FP_MAX || output_gamma < PNG_FP_MIN)
 266:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed_error(png_ptr, "gamma value");
 267:fltk-1.3.4-1/png/pngrtran.c **** 
 268:fltk-1.3.4-1/png/pngrtran.c ****    return (png_fixed_point)output_gamma;
 269:fltk-1.3.4-1/png/pngrtran.c **** }
 270:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 271:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_ALPHA_MODE || READ_GAMMA */
 272:fltk-1.3.4-1/png/pngrtran.c **** 
 273:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_ALPHA_MODE_SUPPORTED
 274:fltk-1.3.4-1/png/pngrtran.c **** void PNGFAPI
 275:fltk-1.3.4-1/png/pngrtran.c **** png_set_alpha_mode_fixed(png_structrp png_ptr, int mode,
 276:fltk-1.3.4-1/png/pngrtran.c ****    png_fixed_point output_gamma)
 277:fltk-1.3.4-1/png/pngrtran.c **** {
 278:fltk-1.3.4-1/png/pngrtran.c ****    int compose = 0;
 279:fltk-1.3.4-1/png/pngrtran.c ****    png_fixed_point file_gamma;
 280:fltk-1.3.4-1/png/pngrtran.c **** 
 281:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_alpha_mode");
 282:fltk-1.3.4-1/png/pngrtran.c **** 
 283:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 284:fltk-1.3.4-1/png/pngrtran.c ****       return;
 285:fltk-1.3.4-1/png/pngrtran.c **** 
 286:fltk-1.3.4-1/png/pngrtran.c ****    output_gamma = translate_gamma_flags(png_ptr, output_gamma, 1/*screen*/);
 287:fltk-1.3.4-1/png/pngrtran.c **** 
 288:fltk-1.3.4-1/png/pngrtran.c ****    /* Validate the value to ensure it is in a reasonable range. The value
 289:fltk-1.3.4-1/png/pngrtran.c ****     * is expected to be 1 or greater, but this range test allows for some
 290:fltk-1.3.4-1/png/pngrtran.c ****     * viewing correction values.  The intent is to weed out users of this API
 291:fltk-1.3.4-1/png/pngrtran.c ****     * who use the inverse of the gamma value accidentally!  Since some of these
 292:fltk-1.3.4-1/png/pngrtran.c ****     * values are reasonable this may have to be changed.
 293:fltk-1.3.4-1/png/pngrtran.c ****     */
 294:fltk-1.3.4-1/png/pngrtran.c ****    if (output_gamma < 70000 || output_gamma > 300000)
 295:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "output gamma out of expected range");
 296:fltk-1.3.4-1/png/pngrtran.c **** 
 297:fltk-1.3.4-1/png/pngrtran.c ****    /* The default file gamma is the inverse of the output gamma; the output
 298:fltk-1.3.4-1/png/pngrtran.c ****     * gamma may be changed below so get the file value first:
 299:fltk-1.3.4-1/png/pngrtran.c ****     */
 300:fltk-1.3.4-1/png/pngrtran.c ****    file_gamma = png_reciprocal(output_gamma);
 301:fltk-1.3.4-1/png/pngrtran.c **** 
 302:fltk-1.3.4-1/png/pngrtran.c ****    /* There are really 8 possibilities here, composed of any combination
 303:fltk-1.3.4-1/png/pngrtran.c ****     * of:
 304:fltk-1.3.4-1/png/pngrtran.c ****     *
 305:fltk-1.3.4-1/png/pngrtran.c ****     *    premultiply the color channels
 306:fltk-1.3.4-1/png/pngrtran.c ****     *    do not encode non-opaque pixels
 307:fltk-1.3.4-1/png/pngrtran.c ****     *    encode the alpha as well as the color channels
 308:fltk-1.3.4-1/png/pngrtran.c ****     *
 309:fltk-1.3.4-1/png/pngrtran.c ****     * The differences disappear if the input/output ('screen') gamma is 1.0,
 310:fltk-1.3.4-1/png/pngrtran.c ****     * because then the encoding is a no-op and there is only the choice of
 311:fltk-1.3.4-1/png/pngrtran.c ****     * premultiplying the color channels or not.
 312:fltk-1.3.4-1/png/pngrtran.c ****     *
 313:fltk-1.3.4-1/png/pngrtran.c ****     * png_set_alpha_mode and png_set_background interact because both use
 314:fltk-1.3.4-1/png/pngrtran.c ****     * png_compose to do the work.  Calling both is only useful when
 315:fltk-1.3.4-1/png/pngrtran.c ****     * png_set_alpha_mode is used to set the default mode - PNG_ALPHA_PNG - along
 316:fltk-1.3.4-1/png/pngrtran.c ****     * with a default gamma value.  Otherwise PNG_COMPOSE must not be set.
 317:fltk-1.3.4-1/png/pngrtran.c ****     */
 318:fltk-1.3.4-1/png/pngrtran.c ****    switch (mode)
 319:fltk-1.3.4-1/png/pngrtran.c ****    {
 320:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_ALPHA_PNG:        /* default: png standard */
 321:fltk-1.3.4-1/png/pngrtran.c ****          /* No compose, but it may be set by png_set_background! */
 322:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
 323:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 324:fltk-1.3.4-1/png/pngrtran.c ****          break;
 325:fltk-1.3.4-1/png/pngrtran.c **** 
 326:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_ALPHA_ASSOCIATED: /* color channels premultiplied */
 327:fltk-1.3.4-1/png/pngrtran.c ****          compose = 1;
 328:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
 329:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 330:fltk-1.3.4-1/png/pngrtran.c ****          /* The output is linear: */
 331:fltk-1.3.4-1/png/pngrtran.c ****          output_gamma = PNG_FP_1;
 332:fltk-1.3.4-1/png/pngrtran.c ****          break;
 333:fltk-1.3.4-1/png/pngrtran.c **** 
 334:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_ALPHA_OPTIMIZED:  /* associated, non-opaque pixels linear */
 335:fltk-1.3.4-1/png/pngrtran.c ****          compose = 1;
 336:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
 337:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_OPTIMIZE_ALPHA;
 338:fltk-1.3.4-1/png/pngrtran.c ****          /* output_gamma records the encoding of opaque pixels! */
 339:fltk-1.3.4-1/png/pngrtran.c ****          break;
 340:fltk-1.3.4-1/png/pngrtran.c **** 
 341:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_ALPHA_BROKEN:     /* associated, non-linear, alpha encoded */
 342:fltk-1.3.4-1/png/pngrtran.c ****          compose = 1;
 343:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations |= PNG_ENCODE_ALPHA;
 344:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 345:fltk-1.3.4-1/png/pngrtran.c ****          break;
 346:fltk-1.3.4-1/png/pngrtran.c **** 
 347:fltk-1.3.4-1/png/pngrtran.c ****       default:
 348:fltk-1.3.4-1/png/pngrtran.c ****          png_error(png_ptr, "invalid alpha mode");
 349:fltk-1.3.4-1/png/pngrtran.c ****    }
 350:fltk-1.3.4-1/png/pngrtran.c **** 
 351:fltk-1.3.4-1/png/pngrtran.c ****    /* Only set the default gamma if the file gamma has not been set (this has
 352:fltk-1.3.4-1/png/pngrtran.c ****     * the side effect that the gamma in a second call to png_set_alpha_mode will
 353:fltk-1.3.4-1/png/pngrtran.c ****     * be ignored.)
 354:fltk-1.3.4-1/png/pngrtran.c ****     */
 355:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr->colorspace.gamma == 0)
 356:fltk-1.3.4-1/png/pngrtran.c ****    {
 357:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->colorspace.gamma = file_gamma;
 358:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->colorspace.flags |= PNG_COLORSPACE_HAVE_GAMMA;
 359:fltk-1.3.4-1/png/pngrtran.c ****    }
 360:fltk-1.3.4-1/png/pngrtran.c **** 
 361:fltk-1.3.4-1/png/pngrtran.c ****    /* But always set the output gamma: */
 362:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->screen_gamma = output_gamma;
 363:fltk-1.3.4-1/png/pngrtran.c **** 
 364:fltk-1.3.4-1/png/pngrtran.c ****    /* Finally, if pre-multiplying, set the background fields to achieve the
 365:fltk-1.3.4-1/png/pngrtran.c ****     * desired result.
 366:fltk-1.3.4-1/png/pngrtran.c ****     */
 367:fltk-1.3.4-1/png/pngrtran.c ****    if (compose != 0)
 368:fltk-1.3.4-1/png/pngrtran.c ****    {
 369:fltk-1.3.4-1/png/pngrtran.c ****       /* And obtain alpha pre-multiplication by composing on black: */
 370:fltk-1.3.4-1/png/pngrtran.c ****       memset(&png_ptr->background, 0, (sizeof png_ptr->background));
 371:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background_gamma = png_ptr->colorspace.gamma; /* just in case */
 372:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background_gamma_type = PNG_BACKGROUND_GAMMA_FILE;
 373:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~PNG_BACKGROUND_EXPAND;
 374:fltk-1.3.4-1/png/pngrtran.c **** 
 375:fltk-1.3.4-1/png/pngrtran.c ****       if ((png_ptr->transformations & PNG_COMPOSE) != 0)
 376:fltk-1.3.4-1/png/pngrtran.c ****          png_error(png_ptr,
 377:fltk-1.3.4-1/png/pngrtran.c ****             "conflicting calls to set alpha mode and background");
 378:fltk-1.3.4-1/png/pngrtran.c **** 
 379:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations |= PNG_COMPOSE;
 380:fltk-1.3.4-1/png/pngrtran.c ****    }
 381:fltk-1.3.4-1/png/pngrtran.c **** }
 382:fltk-1.3.4-1/png/pngrtran.c **** 
 383:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
 384:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 385:fltk-1.3.4-1/png/pngrtran.c **** png_set_alpha_mode(png_structrp png_ptr, int mode, double output_gamma)
 386:fltk-1.3.4-1/png/pngrtran.c **** {
 387:fltk-1.3.4-1/png/pngrtran.c ****    png_set_alpha_mode_fixed(png_ptr, mode, convert_gamma_value(png_ptr,
 388:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma));
 389:fltk-1.3.4-1/png/pngrtran.c **** }
 390:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 391:fltk-1.3.4-1/png/pngrtran.c **** #endif
 392:fltk-1.3.4-1/png/pngrtran.c **** 
 393:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_QUANTIZE_SUPPORTED
 394:fltk-1.3.4-1/png/pngrtran.c **** /* Dither file to 8-bit.  Supply a palette, the current number
 395:fltk-1.3.4-1/png/pngrtran.c ****  * of elements in the palette, the maximum number of elements
 396:fltk-1.3.4-1/png/pngrtran.c ****  * allowed, and a histogram if possible.  If the current number
 397:fltk-1.3.4-1/png/pngrtran.c ****  * of colors is greater then the maximum number, the palette will be
 398:fltk-1.3.4-1/png/pngrtran.c ****  * modified to fit in the maximum number.  "full_quantize" indicates
 399:fltk-1.3.4-1/png/pngrtran.c ****  * whether we need a quantizing cube set up for RGB images, or if we
 400:fltk-1.3.4-1/png/pngrtran.c ****  * simply are reducing the number of colors in a paletted image.
 401:fltk-1.3.4-1/png/pngrtran.c ****  */
 402:fltk-1.3.4-1/png/pngrtran.c **** 
 403:fltk-1.3.4-1/png/pngrtran.c **** typedef struct png_dsort_struct
 404:fltk-1.3.4-1/png/pngrtran.c **** {
 405:fltk-1.3.4-1/png/pngrtran.c ****    struct png_dsort_struct * next;
 406:fltk-1.3.4-1/png/pngrtran.c ****    png_byte left;
 407:fltk-1.3.4-1/png/pngrtran.c ****    png_byte right;
 408:fltk-1.3.4-1/png/pngrtran.c **** } png_dsort;
 409:fltk-1.3.4-1/png/pngrtran.c **** typedef png_dsort *   png_dsortp;
 410:fltk-1.3.4-1/png/pngrtran.c **** typedef png_dsort * * png_dsortpp;
 411:fltk-1.3.4-1/png/pngrtran.c **** 
 412:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 413:fltk-1.3.4-1/png/pngrtran.c **** png_set_quantize(png_structrp png_ptr, png_colorp palette,
 414:fltk-1.3.4-1/png/pngrtran.c ****     int num_palette, int maximum_colors, png_const_uint_16p histogram,
 415:fltk-1.3.4-1/png/pngrtran.c ****     int full_quantize)
 416:fltk-1.3.4-1/png/pngrtran.c **** {
 417:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_quantize");
 418:fltk-1.3.4-1/png/pngrtran.c **** 
 419:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 420:fltk-1.3.4-1/png/pngrtran.c ****       return;
 421:fltk-1.3.4-1/png/pngrtran.c **** 
 422:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_QUANTIZE;
 423:fltk-1.3.4-1/png/pngrtran.c **** 
 424:fltk-1.3.4-1/png/pngrtran.c ****    if (full_quantize == 0)
 425:fltk-1.3.4-1/png/pngrtran.c ****    {
 426:fltk-1.3.4-1/png/pngrtran.c ****       int i;
 427:fltk-1.3.4-1/png/pngrtran.c **** 
 428:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->quantize_index = (png_bytep)png_malloc(png_ptr,
 429:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)(num_palette * (sizeof (png_byte))));
 430:fltk-1.3.4-1/png/pngrtran.c ****       for (i = 0; i < num_palette; i++)
 431:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_index[i] = (png_byte)i;
 432:fltk-1.3.4-1/png/pngrtran.c ****    }
 433:fltk-1.3.4-1/png/pngrtran.c **** 
 434:fltk-1.3.4-1/png/pngrtran.c ****    if (num_palette > maximum_colors)
 435:fltk-1.3.4-1/png/pngrtran.c ****    {
 436:fltk-1.3.4-1/png/pngrtran.c ****       if (histogram != NULL)
 437:fltk-1.3.4-1/png/pngrtran.c ****       {
 438:fltk-1.3.4-1/png/pngrtran.c ****          /* This is easy enough, just throw out the least used colors.
 439:fltk-1.3.4-1/png/pngrtran.c ****           * Perhaps not the best solution, but good enough.
 440:fltk-1.3.4-1/png/pngrtran.c ****           */
 441:fltk-1.3.4-1/png/pngrtran.c **** 
 442:fltk-1.3.4-1/png/pngrtran.c ****          int i;
 443:fltk-1.3.4-1/png/pngrtran.c **** 
 444:fltk-1.3.4-1/png/pngrtran.c ****          /* Initialize an array to sort colors */
 445:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_sort = (png_bytep)png_malloc(png_ptr,
 446:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 447:fltk-1.3.4-1/png/pngrtran.c **** 
 448:fltk-1.3.4-1/png/pngrtran.c ****          /* Initialize the quantize_sort array */
 449:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < num_palette; i++)
 450:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->quantize_sort[i] = (png_byte)i;
 451:fltk-1.3.4-1/png/pngrtran.c **** 
 452:fltk-1.3.4-1/png/pngrtran.c ****          /* Find the least used palette entries by starting a
 453:fltk-1.3.4-1/png/pngrtran.c ****           * bubble sort, and running it until we have sorted
 454:fltk-1.3.4-1/png/pngrtran.c ****           * out enough colors.  Note that we don't care about
 455:fltk-1.3.4-1/png/pngrtran.c ****           * sorting all the colors, just finding which are
 456:fltk-1.3.4-1/png/pngrtran.c ****           * least used.
 457:fltk-1.3.4-1/png/pngrtran.c ****           */
 458:fltk-1.3.4-1/png/pngrtran.c **** 
 459:fltk-1.3.4-1/png/pngrtran.c ****          for (i = num_palette - 1; i >= maximum_colors; i--)
 460:fltk-1.3.4-1/png/pngrtran.c ****          {
 461:fltk-1.3.4-1/png/pngrtran.c ****             int done; /* To stop early if the list is pre-sorted */
 462:fltk-1.3.4-1/png/pngrtran.c ****             int j;
 463:fltk-1.3.4-1/png/pngrtran.c **** 
 464:fltk-1.3.4-1/png/pngrtran.c ****             done = 1;
 465:fltk-1.3.4-1/png/pngrtran.c ****             for (j = 0; j < i; j++)
 466:fltk-1.3.4-1/png/pngrtran.c ****             {
 467:fltk-1.3.4-1/png/pngrtran.c ****                if (histogram[png_ptr->quantize_sort[j]]
 468:fltk-1.3.4-1/png/pngrtran.c ****                    < histogram[png_ptr->quantize_sort[j + 1]])
 469:fltk-1.3.4-1/png/pngrtran.c ****                {
 470:fltk-1.3.4-1/png/pngrtran.c ****                   png_byte t;
 471:fltk-1.3.4-1/png/pngrtran.c **** 
 472:fltk-1.3.4-1/png/pngrtran.c ****                   t = png_ptr->quantize_sort[j];
 473:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->quantize_sort[j] = png_ptr->quantize_sort[j + 1];
 474:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->quantize_sort[j + 1] = t;
 475:fltk-1.3.4-1/png/pngrtran.c ****                   done = 0;
 476:fltk-1.3.4-1/png/pngrtran.c ****                }
 477:fltk-1.3.4-1/png/pngrtran.c ****             }
 478:fltk-1.3.4-1/png/pngrtran.c **** 
 479:fltk-1.3.4-1/png/pngrtran.c ****             if (done != 0)
 480:fltk-1.3.4-1/png/pngrtran.c ****                break;
 481:fltk-1.3.4-1/png/pngrtran.c ****          }
 482:fltk-1.3.4-1/png/pngrtran.c **** 
 483:fltk-1.3.4-1/png/pngrtran.c ****          /* Swap the palette around, and set up a table, if necessary */
 484:fltk-1.3.4-1/png/pngrtran.c ****          if (full_quantize != 0)
 485:fltk-1.3.4-1/png/pngrtran.c ****          {
 486:fltk-1.3.4-1/png/pngrtran.c ****             int j = num_palette;
 487:fltk-1.3.4-1/png/pngrtran.c **** 
 488:fltk-1.3.4-1/png/pngrtran.c ****             /* Put all the useful colors within the max, but don't
 489:fltk-1.3.4-1/png/pngrtran.c ****              * move the others.
 490:fltk-1.3.4-1/png/pngrtran.c ****              */
 491:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < maximum_colors; i++)
 492:fltk-1.3.4-1/png/pngrtran.c ****             {
 493:fltk-1.3.4-1/png/pngrtran.c ****                if ((int)png_ptr->quantize_sort[i] >= maximum_colors)
 494:fltk-1.3.4-1/png/pngrtran.c ****                {
 495:fltk-1.3.4-1/png/pngrtran.c ****                   do
 496:fltk-1.3.4-1/png/pngrtran.c ****                      j--;
 497:fltk-1.3.4-1/png/pngrtran.c ****                   while ((int)png_ptr->quantize_sort[j] >= maximum_colors);
 498:fltk-1.3.4-1/png/pngrtran.c **** 
 499:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i] = palette[j];
 500:fltk-1.3.4-1/png/pngrtran.c ****                }
 501:fltk-1.3.4-1/png/pngrtran.c ****             }
 502:fltk-1.3.4-1/png/pngrtran.c ****          }
 503:fltk-1.3.4-1/png/pngrtran.c ****          else
 504:fltk-1.3.4-1/png/pngrtran.c ****          {
 505:fltk-1.3.4-1/png/pngrtran.c ****             int j = num_palette;
 506:fltk-1.3.4-1/png/pngrtran.c **** 
 507:fltk-1.3.4-1/png/pngrtran.c ****             /* Move all the used colors inside the max limit, and
 508:fltk-1.3.4-1/png/pngrtran.c ****              * develop a translation table.
 509:fltk-1.3.4-1/png/pngrtran.c ****              */
 510:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < maximum_colors; i++)
 511:fltk-1.3.4-1/png/pngrtran.c ****             {
 512:fltk-1.3.4-1/png/pngrtran.c ****                /* Only move the colors we need to */
 513:fltk-1.3.4-1/png/pngrtran.c ****                if ((int)png_ptr->quantize_sort[i] >= maximum_colors)
 514:fltk-1.3.4-1/png/pngrtran.c ****                {
 515:fltk-1.3.4-1/png/pngrtran.c ****                   png_color tmp_color;
 516:fltk-1.3.4-1/png/pngrtran.c **** 
 517:fltk-1.3.4-1/png/pngrtran.c ****                   do
 518:fltk-1.3.4-1/png/pngrtran.c ****                      j--;
 519:fltk-1.3.4-1/png/pngrtran.c ****                   while ((int)png_ptr->quantize_sort[j] >= maximum_colors);
 520:fltk-1.3.4-1/png/pngrtran.c **** 
 521:fltk-1.3.4-1/png/pngrtran.c ****                   tmp_color = palette[j];
 522:fltk-1.3.4-1/png/pngrtran.c ****                   palette[j] = palette[i];
 523:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i] = tmp_color;
 524:fltk-1.3.4-1/png/pngrtran.c ****                   /* Indicate where the color went */
 525:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->quantize_index[j] = (png_byte)i;
 526:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->quantize_index[i] = (png_byte)j;
 527:fltk-1.3.4-1/png/pngrtran.c ****                }
 528:fltk-1.3.4-1/png/pngrtran.c ****             }
 529:fltk-1.3.4-1/png/pngrtran.c **** 
 530:fltk-1.3.4-1/png/pngrtran.c ****             /* Find closest color for those colors we are not using */
 531:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < num_palette; i++)
 532:fltk-1.3.4-1/png/pngrtran.c ****             {
 533:fltk-1.3.4-1/png/pngrtran.c ****                if ((int)png_ptr->quantize_index[i] >= maximum_colors)
 534:fltk-1.3.4-1/png/pngrtran.c ****                {
 535:fltk-1.3.4-1/png/pngrtran.c ****                   int min_d, k, min_k, d_index;
 536:fltk-1.3.4-1/png/pngrtran.c **** 
 537:fltk-1.3.4-1/png/pngrtran.c ****                   /* Find the closest color to one we threw out */
 538:fltk-1.3.4-1/png/pngrtran.c ****                   d_index = png_ptr->quantize_index[i];
 539:fltk-1.3.4-1/png/pngrtran.c ****                   min_d = PNG_COLOR_DIST(palette[d_index], palette[0]);
 540:fltk-1.3.4-1/png/pngrtran.c ****                   for (k = 1, min_k = 0; k < maximum_colors; k++)
 541:fltk-1.3.4-1/png/pngrtran.c ****                   {
 542:fltk-1.3.4-1/png/pngrtran.c ****                      int d;
 543:fltk-1.3.4-1/png/pngrtran.c **** 
 544:fltk-1.3.4-1/png/pngrtran.c ****                      d = PNG_COLOR_DIST(palette[d_index], palette[k]);
 545:fltk-1.3.4-1/png/pngrtran.c **** 
 546:fltk-1.3.4-1/png/pngrtran.c ****                      if (d < min_d)
 547:fltk-1.3.4-1/png/pngrtran.c ****                      {
 548:fltk-1.3.4-1/png/pngrtran.c ****                         min_d = d;
 549:fltk-1.3.4-1/png/pngrtran.c ****                         min_k = k;
 550:fltk-1.3.4-1/png/pngrtran.c ****                      }
 551:fltk-1.3.4-1/png/pngrtran.c ****                   }
 552:fltk-1.3.4-1/png/pngrtran.c ****                   /* Point to closest color */
 553:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->quantize_index[i] = (png_byte)min_k;
 554:fltk-1.3.4-1/png/pngrtran.c ****                }
 555:fltk-1.3.4-1/png/pngrtran.c ****             }
 556:fltk-1.3.4-1/png/pngrtran.c ****          }
 557:fltk-1.3.4-1/png/pngrtran.c ****          png_free(png_ptr, png_ptr->quantize_sort);
 558:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_sort = NULL;
 559:fltk-1.3.4-1/png/pngrtran.c ****       }
 560:fltk-1.3.4-1/png/pngrtran.c ****       else
 561:fltk-1.3.4-1/png/pngrtran.c ****       {
 562:fltk-1.3.4-1/png/pngrtran.c ****          /* This is much harder to do simply (and quickly).  Perhaps
 563:fltk-1.3.4-1/png/pngrtran.c ****           * we need to go through a median cut routine, but those
 564:fltk-1.3.4-1/png/pngrtran.c ****           * don't always behave themselves with only a few colors
 565:fltk-1.3.4-1/png/pngrtran.c ****           * as input.  So we will just find the closest two colors,
 566:fltk-1.3.4-1/png/pngrtran.c ****           * and throw out one of them (chosen somewhat randomly).
 567:fltk-1.3.4-1/png/pngrtran.c ****           * [We don't understand this at all, so if someone wants to
 568:fltk-1.3.4-1/png/pngrtran.c ****           *  work on improving it, be our guest - AED, GRP]
 569:fltk-1.3.4-1/png/pngrtran.c ****           */
 570:fltk-1.3.4-1/png/pngrtran.c ****          int i;
 571:fltk-1.3.4-1/png/pngrtran.c ****          int max_d;
 572:fltk-1.3.4-1/png/pngrtran.c ****          int num_new_palette;
 573:fltk-1.3.4-1/png/pngrtran.c ****          png_dsortp t;
 574:fltk-1.3.4-1/png/pngrtran.c ****          png_dsortpp hash;
 575:fltk-1.3.4-1/png/pngrtran.c **** 
 576:fltk-1.3.4-1/png/pngrtran.c ****          t = NULL;
 577:fltk-1.3.4-1/png/pngrtran.c **** 
 578:fltk-1.3.4-1/png/pngrtran.c ****          /* Initialize palette index arrays */
 579:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->index_to_palette = (png_bytep)png_malloc(png_ptr,
 580:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 581:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->palette_to_index = (png_bytep)png_malloc(png_ptr,
 582:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 583:fltk-1.3.4-1/png/pngrtran.c **** 
 584:fltk-1.3.4-1/png/pngrtran.c ****          /* Initialize the sort array */
 585:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < num_palette; i++)
 586:fltk-1.3.4-1/png/pngrtran.c ****          {
 587:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->index_to_palette[i] = (png_byte)i;
 588:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->palette_to_index[i] = (png_byte)i;
 589:fltk-1.3.4-1/png/pngrtran.c ****          }
 590:fltk-1.3.4-1/png/pngrtran.c **** 
 591:fltk-1.3.4-1/png/pngrtran.c ****          hash = (png_dsortpp)png_calloc(png_ptr, (png_uint_32)(769 *
 592:fltk-1.3.4-1/png/pngrtran.c ****              (sizeof (png_dsortp))));
 593:fltk-1.3.4-1/png/pngrtran.c **** 
 594:fltk-1.3.4-1/png/pngrtran.c ****          num_new_palette = num_palette;
 595:fltk-1.3.4-1/png/pngrtran.c **** 
 596:fltk-1.3.4-1/png/pngrtran.c ****          /* Initial wild guess at how far apart the farthest pixel
 597:fltk-1.3.4-1/png/pngrtran.c ****           * pair we will be eliminating will be.  Larger
 598:fltk-1.3.4-1/png/pngrtran.c ****           * numbers mean more areas will be allocated, Smaller
 599:fltk-1.3.4-1/png/pngrtran.c ****           * numbers run the risk of not saving enough data, and
 600:fltk-1.3.4-1/png/pngrtran.c ****           * having to do this all over again.
 601:fltk-1.3.4-1/png/pngrtran.c ****           *
 602:fltk-1.3.4-1/png/pngrtran.c ****           * I have not done extensive checking on this number.
 603:fltk-1.3.4-1/png/pngrtran.c ****           */
 604:fltk-1.3.4-1/png/pngrtran.c ****          max_d = 96;
 605:fltk-1.3.4-1/png/pngrtran.c **** 
 606:fltk-1.3.4-1/png/pngrtran.c ****          while (num_new_palette > maximum_colors)
 607:fltk-1.3.4-1/png/pngrtran.c ****          {
 608:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < num_new_palette - 1; i++)
 609:fltk-1.3.4-1/png/pngrtran.c ****             {
 610:fltk-1.3.4-1/png/pngrtran.c ****                int j;
 611:fltk-1.3.4-1/png/pngrtran.c **** 
 612:fltk-1.3.4-1/png/pngrtran.c ****                for (j = i + 1; j < num_new_palette; j++)
 613:fltk-1.3.4-1/png/pngrtran.c ****                {
 614:fltk-1.3.4-1/png/pngrtran.c ****                   int d;
 615:fltk-1.3.4-1/png/pngrtran.c **** 
 616:fltk-1.3.4-1/png/pngrtran.c ****                   d = PNG_COLOR_DIST(palette[i], palette[j]);
 617:fltk-1.3.4-1/png/pngrtran.c **** 
 618:fltk-1.3.4-1/png/pngrtran.c ****                   if (d <= max_d)
 619:fltk-1.3.4-1/png/pngrtran.c ****                   {
 620:fltk-1.3.4-1/png/pngrtran.c **** 
 621:fltk-1.3.4-1/png/pngrtran.c ****                      t = (png_dsortp)png_malloc_warn(png_ptr,
 622:fltk-1.3.4-1/png/pngrtran.c ****                          (png_uint_32)(sizeof (png_dsort)));
 623:fltk-1.3.4-1/png/pngrtran.c **** 
 624:fltk-1.3.4-1/png/pngrtran.c ****                      if (t == NULL)
 625:fltk-1.3.4-1/png/pngrtran.c ****                          break;
 626:fltk-1.3.4-1/png/pngrtran.c **** 
 627:fltk-1.3.4-1/png/pngrtran.c ****                      t->next = hash[d];
 628:fltk-1.3.4-1/png/pngrtran.c ****                      t->left = (png_byte)i;
 629:fltk-1.3.4-1/png/pngrtran.c ****                      t->right = (png_byte)j;
 630:fltk-1.3.4-1/png/pngrtran.c ****                      hash[d] = t;
 631:fltk-1.3.4-1/png/pngrtran.c ****                   }
 632:fltk-1.3.4-1/png/pngrtran.c ****                }
 633:fltk-1.3.4-1/png/pngrtran.c ****                if (t == NULL)
 634:fltk-1.3.4-1/png/pngrtran.c ****                   break;
 635:fltk-1.3.4-1/png/pngrtran.c ****             }
 636:fltk-1.3.4-1/png/pngrtran.c **** 
 637:fltk-1.3.4-1/png/pngrtran.c ****             if (t != NULL)
 638:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i <= max_d; i++)
 639:fltk-1.3.4-1/png/pngrtran.c ****             {
 640:fltk-1.3.4-1/png/pngrtran.c ****                if (hash[i] != NULL)
 641:fltk-1.3.4-1/png/pngrtran.c ****                {
 642:fltk-1.3.4-1/png/pngrtran.c ****                   png_dsortp p;
 643:fltk-1.3.4-1/png/pngrtran.c **** 
 644:fltk-1.3.4-1/png/pngrtran.c ****                   for (p = hash[i]; p; p = p->next)
 645:fltk-1.3.4-1/png/pngrtran.c ****                   {
 646:fltk-1.3.4-1/png/pngrtran.c ****                      if ((int)png_ptr->index_to_palette[p->left]
 647:fltk-1.3.4-1/png/pngrtran.c ****                          < num_new_palette &&
 648:fltk-1.3.4-1/png/pngrtran.c ****                          (int)png_ptr->index_to_palette[p->right]
 649:fltk-1.3.4-1/png/pngrtran.c ****                          < num_new_palette)
 650:fltk-1.3.4-1/png/pngrtran.c ****                      {
 651:fltk-1.3.4-1/png/pngrtran.c ****                         int j, next_j;
 652:fltk-1.3.4-1/png/pngrtran.c **** 
 653:fltk-1.3.4-1/png/pngrtran.c ****                         if (num_new_palette & 0x01)
 654:fltk-1.3.4-1/png/pngrtran.c ****                         {
 655:fltk-1.3.4-1/png/pngrtran.c ****                            j = p->left;
 656:fltk-1.3.4-1/png/pngrtran.c ****                            next_j = p->right;
 657:fltk-1.3.4-1/png/pngrtran.c ****                         }
 658:fltk-1.3.4-1/png/pngrtran.c ****                         else
 659:fltk-1.3.4-1/png/pngrtran.c ****                         {
 660:fltk-1.3.4-1/png/pngrtran.c ****                            j = p->right;
 661:fltk-1.3.4-1/png/pngrtran.c ****                            next_j = p->left;
 662:fltk-1.3.4-1/png/pngrtran.c ****                         }
 663:fltk-1.3.4-1/png/pngrtran.c **** 
 664:fltk-1.3.4-1/png/pngrtran.c ****                         num_new_palette--;
 665:fltk-1.3.4-1/png/pngrtran.c ****                         palette[png_ptr->index_to_palette[j]]
 666:fltk-1.3.4-1/png/pngrtran.c ****                             = palette[num_new_palette];
 667:fltk-1.3.4-1/png/pngrtran.c ****                         if (full_quantize == 0)
 668:fltk-1.3.4-1/png/pngrtran.c ****                         {
 669:fltk-1.3.4-1/png/pngrtran.c ****                            int k;
 670:fltk-1.3.4-1/png/pngrtran.c **** 
 671:fltk-1.3.4-1/png/pngrtran.c ****                            for (k = 0; k < num_palette; k++)
 672:fltk-1.3.4-1/png/pngrtran.c ****                            {
 673:fltk-1.3.4-1/png/pngrtran.c ****                               if (png_ptr->quantize_index[k] ==
 674:fltk-1.3.4-1/png/pngrtran.c ****                                   png_ptr->index_to_palette[j])
 675:fltk-1.3.4-1/png/pngrtran.c ****                                  png_ptr->quantize_index[k] =
 676:fltk-1.3.4-1/png/pngrtran.c ****                                      png_ptr->index_to_palette[next_j];
 677:fltk-1.3.4-1/png/pngrtran.c **** 
 678:fltk-1.3.4-1/png/pngrtran.c ****                               if ((int)png_ptr->quantize_index[k] ==
 679:fltk-1.3.4-1/png/pngrtran.c ****                                   num_new_palette)
 680:fltk-1.3.4-1/png/pngrtran.c ****                                  png_ptr->quantize_index[k] =
 681:fltk-1.3.4-1/png/pngrtran.c ****                                      png_ptr->index_to_palette[j];
 682:fltk-1.3.4-1/png/pngrtran.c ****                            }
 683:fltk-1.3.4-1/png/pngrtran.c ****                         }
 684:fltk-1.3.4-1/png/pngrtran.c **** 
 685:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->index_to_palette[png_ptr->palette_to_index
 686:fltk-1.3.4-1/png/pngrtran.c ****                             [num_new_palette]] = png_ptr->index_to_palette[j];
 687:fltk-1.3.4-1/png/pngrtran.c **** 
 688:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->palette_to_index[png_ptr->index_to_palette[j]]
 689:fltk-1.3.4-1/png/pngrtran.c ****                             = png_ptr->palette_to_index[num_new_palette];
 690:fltk-1.3.4-1/png/pngrtran.c **** 
 691:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->index_to_palette[j] =
 692:fltk-1.3.4-1/png/pngrtran.c ****                             (png_byte)num_new_palette;
 693:fltk-1.3.4-1/png/pngrtran.c **** 
 694:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->palette_to_index[num_new_palette] =
 695:fltk-1.3.4-1/png/pngrtran.c ****                             (png_byte)j;
 696:fltk-1.3.4-1/png/pngrtran.c ****                      }
 697:fltk-1.3.4-1/png/pngrtran.c ****                      if (num_new_palette <= maximum_colors)
 698:fltk-1.3.4-1/png/pngrtran.c ****                         break;
 699:fltk-1.3.4-1/png/pngrtran.c ****                   }
 700:fltk-1.3.4-1/png/pngrtran.c ****                   if (num_new_palette <= maximum_colors)
 701:fltk-1.3.4-1/png/pngrtran.c ****                      break;
 702:fltk-1.3.4-1/png/pngrtran.c ****                }
 703:fltk-1.3.4-1/png/pngrtran.c ****             }
 704:fltk-1.3.4-1/png/pngrtran.c **** 
 705:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < 769; i++)
 706:fltk-1.3.4-1/png/pngrtran.c ****             {
 707:fltk-1.3.4-1/png/pngrtran.c ****                if (hash[i] != NULL)
 708:fltk-1.3.4-1/png/pngrtran.c ****                {
 709:fltk-1.3.4-1/png/pngrtran.c ****                   png_dsortp p = hash[i];
 710:fltk-1.3.4-1/png/pngrtran.c ****                   while (p)
 711:fltk-1.3.4-1/png/pngrtran.c ****                   {
 712:fltk-1.3.4-1/png/pngrtran.c ****                      t = p->next;
 713:fltk-1.3.4-1/png/pngrtran.c ****                      png_free(png_ptr, p);
 714:fltk-1.3.4-1/png/pngrtran.c ****                      p = t;
 715:fltk-1.3.4-1/png/pngrtran.c ****                   }
 716:fltk-1.3.4-1/png/pngrtran.c ****                }
 717:fltk-1.3.4-1/png/pngrtran.c ****                hash[i] = 0;
 718:fltk-1.3.4-1/png/pngrtran.c ****             }
 719:fltk-1.3.4-1/png/pngrtran.c ****             max_d += 96;
 720:fltk-1.3.4-1/png/pngrtran.c ****          }
 721:fltk-1.3.4-1/png/pngrtran.c ****          png_free(png_ptr, hash);
 722:fltk-1.3.4-1/png/pngrtran.c ****          png_free(png_ptr, png_ptr->palette_to_index);
 723:fltk-1.3.4-1/png/pngrtran.c ****          png_free(png_ptr, png_ptr->index_to_palette);
 724:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->palette_to_index = NULL;
 725:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->index_to_palette = NULL;
 726:fltk-1.3.4-1/png/pngrtran.c ****       }
 727:fltk-1.3.4-1/png/pngrtran.c ****       num_palette = maximum_colors;
 728:fltk-1.3.4-1/png/pngrtran.c ****    }
 729:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr->palette == NULL)
 730:fltk-1.3.4-1/png/pngrtran.c ****    {
 731:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->palette = palette;
 732:fltk-1.3.4-1/png/pngrtran.c ****    }
 733:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->num_palette = (png_uint_16)num_palette;
 734:fltk-1.3.4-1/png/pngrtran.c **** 
 735:fltk-1.3.4-1/png/pngrtran.c ****    if (full_quantize != 0)
 736:fltk-1.3.4-1/png/pngrtran.c ****    {
 737:fltk-1.3.4-1/png/pngrtran.c ****       int i;
 738:fltk-1.3.4-1/png/pngrtran.c ****       png_bytep distance;
 739:fltk-1.3.4-1/png/pngrtran.c ****       int total_bits = PNG_QUANTIZE_RED_BITS + PNG_QUANTIZE_GREEN_BITS +
 740:fltk-1.3.4-1/png/pngrtran.c ****           PNG_QUANTIZE_BLUE_BITS;
 741:fltk-1.3.4-1/png/pngrtran.c ****       int num_red = (1 << PNG_QUANTIZE_RED_BITS);
 742:fltk-1.3.4-1/png/pngrtran.c ****       int num_green = (1 << PNG_QUANTIZE_GREEN_BITS);
 743:fltk-1.3.4-1/png/pngrtran.c ****       int num_blue = (1 << PNG_QUANTIZE_BLUE_BITS);
 744:fltk-1.3.4-1/png/pngrtran.c ****       png_size_t num_entries = ((png_size_t)1 << total_bits);
 745:fltk-1.3.4-1/png/pngrtran.c **** 
 746:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->palette_lookup = (png_bytep)png_calloc(png_ptr,
 747:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)(num_entries * (sizeof (png_byte))));
 748:fltk-1.3.4-1/png/pngrtran.c **** 
 749:fltk-1.3.4-1/png/pngrtran.c ****       distance = (png_bytep)png_malloc(png_ptr, (png_uint_32)(num_entries *
 750:fltk-1.3.4-1/png/pngrtran.c ****           (sizeof (png_byte))));
 751:fltk-1.3.4-1/png/pngrtran.c **** 
 752:fltk-1.3.4-1/png/pngrtran.c ****       memset(distance, 0xff, num_entries * (sizeof (png_byte)));
 753:fltk-1.3.4-1/png/pngrtran.c **** 
 754:fltk-1.3.4-1/png/pngrtran.c ****       for (i = 0; i < num_palette; i++)
 755:fltk-1.3.4-1/png/pngrtran.c ****       {
 756:fltk-1.3.4-1/png/pngrtran.c ****          int ir, ig, ib;
 757:fltk-1.3.4-1/png/pngrtran.c ****          int r = (palette[i].red >> (8 - PNG_QUANTIZE_RED_BITS));
 758:fltk-1.3.4-1/png/pngrtran.c ****          int g = (palette[i].green >> (8 - PNG_QUANTIZE_GREEN_BITS));
 759:fltk-1.3.4-1/png/pngrtran.c ****          int b = (palette[i].blue >> (8 - PNG_QUANTIZE_BLUE_BITS));
 760:fltk-1.3.4-1/png/pngrtran.c **** 
 761:fltk-1.3.4-1/png/pngrtran.c ****          for (ir = 0; ir < num_red; ir++)
 762:fltk-1.3.4-1/png/pngrtran.c ****          {
 763:fltk-1.3.4-1/png/pngrtran.c ****             /* int dr = abs(ir - r); */
 764:fltk-1.3.4-1/png/pngrtran.c ****             int dr = ((ir > r) ? ir - r : r - ir);
 765:fltk-1.3.4-1/png/pngrtran.c ****             int index_r = (ir << (PNG_QUANTIZE_BLUE_BITS +
 766:fltk-1.3.4-1/png/pngrtran.c ****                 PNG_QUANTIZE_GREEN_BITS));
 767:fltk-1.3.4-1/png/pngrtran.c **** 
 768:fltk-1.3.4-1/png/pngrtran.c ****             for (ig = 0; ig < num_green; ig++)
 769:fltk-1.3.4-1/png/pngrtran.c ****             {
 770:fltk-1.3.4-1/png/pngrtran.c ****                /* int dg = abs(ig - g); */
 771:fltk-1.3.4-1/png/pngrtran.c ****                int dg = ((ig > g) ? ig - g : g - ig);
 772:fltk-1.3.4-1/png/pngrtran.c ****                int dt = dr + dg;
 773:fltk-1.3.4-1/png/pngrtran.c ****                int dm = ((dr > dg) ? dr : dg);
 774:fltk-1.3.4-1/png/pngrtran.c ****                int index_g = index_r | (ig << PNG_QUANTIZE_BLUE_BITS);
 775:fltk-1.3.4-1/png/pngrtran.c **** 
 776:fltk-1.3.4-1/png/pngrtran.c ****                for (ib = 0; ib < num_blue; ib++)
 777:fltk-1.3.4-1/png/pngrtran.c ****                {
 778:fltk-1.3.4-1/png/pngrtran.c ****                   int d_index = index_g | ib;
 779:fltk-1.3.4-1/png/pngrtran.c ****                   /* int db = abs(ib - b); */
 780:fltk-1.3.4-1/png/pngrtran.c ****                   int db = ((ib > b) ? ib - b : b - ib);
 781:fltk-1.3.4-1/png/pngrtran.c ****                   int dmax = ((dm > db) ? dm : db);
 782:fltk-1.3.4-1/png/pngrtran.c ****                   int d = dmax + dt + db;
 783:fltk-1.3.4-1/png/pngrtran.c **** 
 784:fltk-1.3.4-1/png/pngrtran.c ****                   if (d < (int)distance[d_index])
 785:fltk-1.3.4-1/png/pngrtran.c ****                   {
 786:fltk-1.3.4-1/png/pngrtran.c ****                      distance[d_index] = (png_byte)d;
 787:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->palette_lookup[d_index] = (png_byte)i;
 788:fltk-1.3.4-1/png/pngrtran.c ****                   }
 789:fltk-1.3.4-1/png/pngrtran.c ****                }
 790:fltk-1.3.4-1/png/pngrtran.c ****             }
 791:fltk-1.3.4-1/png/pngrtran.c ****          }
 792:fltk-1.3.4-1/png/pngrtran.c ****       }
 793:fltk-1.3.4-1/png/pngrtran.c **** 
 794:fltk-1.3.4-1/png/pngrtran.c ****       png_free(png_ptr, distance);
 795:fltk-1.3.4-1/png/pngrtran.c ****    }
 796:fltk-1.3.4-1/png/pngrtran.c **** }
 797:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_QUANTIZE */
 798:fltk-1.3.4-1/png/pngrtran.c **** 
 799:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
 800:fltk-1.3.4-1/png/pngrtran.c **** void PNGFAPI
 801:fltk-1.3.4-1/png/pngrtran.c **** png_set_gamma_fixed(png_structrp png_ptr, png_fixed_point scrn_gamma,
 802:fltk-1.3.4-1/png/pngrtran.c ****    png_fixed_point file_gamma)
 803:fltk-1.3.4-1/png/pngrtran.c **** {
 804:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_gamma_fixed");
 805:fltk-1.3.4-1/png/pngrtran.c **** 
 806:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 807:fltk-1.3.4-1/png/pngrtran.c ****       return;
 808:fltk-1.3.4-1/png/pngrtran.c **** 
 809:fltk-1.3.4-1/png/pngrtran.c ****    /* New in libpng-1.5.4 - reserve particular negative values as flags. */
 810:fltk-1.3.4-1/png/pngrtran.c ****    scrn_gamma = translate_gamma_flags(png_ptr, scrn_gamma, 1/*screen*/);
 811:fltk-1.3.4-1/png/pngrtran.c ****    file_gamma = translate_gamma_flags(png_ptr, file_gamma, 0/*file*/);
 812:fltk-1.3.4-1/png/pngrtran.c **** 
 813:fltk-1.3.4-1/png/pngrtran.c ****    /* Checking the gamma values for being >0 was added in 1.5.4 along with the
 814:fltk-1.3.4-1/png/pngrtran.c ****     * premultiplied alpha support; this actually hides an undocumented feature
 815:fltk-1.3.4-1/png/pngrtran.c ****     * of the previous implementation which allowed gamma processing to be
 816:fltk-1.3.4-1/png/pngrtran.c ****     * disabled in background handling.  There is no evidence (so far) that this
 817:fltk-1.3.4-1/png/pngrtran.c ****     * was being used; however, png_set_background itself accepted and must still
 818:fltk-1.3.4-1/png/pngrtran.c ****     * accept '0' for the gamma value it takes, because it isn't always used.
 819:fltk-1.3.4-1/png/pngrtran.c ****     *
 820:fltk-1.3.4-1/png/pngrtran.c ****     * Since this is an API change (albeit a very minor one that removes an
 821:fltk-1.3.4-1/png/pngrtran.c ****     * undocumented API feature) the following checks were only enabled in
 822:fltk-1.3.4-1/png/pngrtran.c ****     * libpng-1.6.0.
 823:fltk-1.3.4-1/png/pngrtran.c ****     */
 824:fltk-1.3.4-1/png/pngrtran.c ****    if (file_gamma <= 0)
 825:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "invalid file gamma in png_set_gamma");
 826:fltk-1.3.4-1/png/pngrtran.c **** 
 827:fltk-1.3.4-1/png/pngrtran.c ****    if (scrn_gamma <= 0)
 828:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "invalid screen gamma in png_set_gamma");
 829:fltk-1.3.4-1/png/pngrtran.c **** 
 830:fltk-1.3.4-1/png/pngrtran.c ****    /* Set the gamma values unconditionally - this overrides the value in the PNG
 831:fltk-1.3.4-1/png/pngrtran.c ****     * file if a gAMA chunk was present.  png_set_alpha_mode provides a
 832:fltk-1.3.4-1/png/pngrtran.c ****     * different, easier, way to default the file gamma.
 833:fltk-1.3.4-1/png/pngrtran.c ****     */
 834:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->colorspace.gamma = file_gamma;
 835:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->colorspace.flags |= PNG_COLORSPACE_HAVE_GAMMA;
 836:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->screen_gamma = scrn_gamma;
 837:fltk-1.3.4-1/png/pngrtran.c **** }
 838:fltk-1.3.4-1/png/pngrtran.c **** 
 839:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
 840:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 841:fltk-1.3.4-1/png/pngrtran.c **** png_set_gamma(png_structrp png_ptr, double scrn_gamma, double file_gamma)
 842:fltk-1.3.4-1/png/pngrtran.c **** {
 843:fltk-1.3.4-1/png/pngrtran.c ****    png_set_gamma_fixed(png_ptr, convert_gamma_value(png_ptr, scrn_gamma),
 844:fltk-1.3.4-1/png/pngrtran.c ****       convert_gamma_value(png_ptr, file_gamma));
 845:fltk-1.3.4-1/png/pngrtran.c **** }
 846:fltk-1.3.4-1/png/pngrtran.c **** #  endif /* FLOATING_POINT */
 847:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_GAMMA */
 848:fltk-1.3.4-1/png/pngrtran.c **** 
 849:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
 850:fltk-1.3.4-1/png/pngrtran.c **** /* Expand paletted images to RGB, expand grayscale images of
 851:fltk-1.3.4-1/png/pngrtran.c ****  * less than 8-bit depth to 8-bit depth, and expand tRNS chunks
 852:fltk-1.3.4-1/png/pngrtran.c ****  * to alpha channels.
 853:fltk-1.3.4-1/png/pngrtran.c ****  */
 854:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 855:fltk-1.3.4-1/png/pngrtran.c **** png_set_expand(png_structrp png_ptr)
 856:fltk-1.3.4-1/png/pngrtran.c **** {
 857:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand");
 858:fltk-1.3.4-1/png/pngrtran.c **** 
 859:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 860:fltk-1.3.4-1/png/pngrtran.c ****       return;
 861:fltk-1.3.4-1/png/pngrtran.c **** 
 862:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= (PNG_EXPAND | PNG_EXPAND_tRNS);
 863:fltk-1.3.4-1/png/pngrtran.c **** }
 864:fltk-1.3.4-1/png/pngrtran.c **** 
 865:fltk-1.3.4-1/png/pngrtran.c **** /* GRR 19990627:  the following three functions currently are identical
 866:fltk-1.3.4-1/png/pngrtran.c ****  *  to png_set_expand().  However, it is entirely reasonable that someone
 867:fltk-1.3.4-1/png/pngrtran.c ****  *  might wish to expand an indexed image to RGB but *not* expand a single,
 868:fltk-1.3.4-1/png/pngrtran.c ****  *  fully transparent palette entry to a full alpha channel--perhaps instead
 869:fltk-1.3.4-1/png/pngrtran.c ****  *  convert tRNS to the grayscale/RGB format (16-bit RGB value), or replace
 870:fltk-1.3.4-1/png/pngrtran.c ****  *  the transparent color with a particular RGB value, or drop tRNS entirely.
 871:fltk-1.3.4-1/png/pngrtran.c ****  *  IOW, a future version of the library may make the transformations flag
 872:fltk-1.3.4-1/png/pngrtran.c ****  *  a bit more fine-grained, with separate bits for each of these three
 873:fltk-1.3.4-1/png/pngrtran.c ****  *  functions.
 874:fltk-1.3.4-1/png/pngrtran.c ****  *
 875:fltk-1.3.4-1/png/pngrtran.c ****  *  More to the point, these functions make it obvious what libpng will be
 876:fltk-1.3.4-1/png/pngrtran.c ****  *  doing, whereas "expand" can (and does) mean any number of things.
 877:fltk-1.3.4-1/png/pngrtran.c ****  *
 878:fltk-1.3.4-1/png/pngrtran.c ****  *  GRP 20060307: In libpng-1.2.9, png_set_gray_1_2_4_to_8() was modified
 879:fltk-1.3.4-1/png/pngrtran.c ****  *  to expand only the sample depth but not to expand the tRNS to alpha
 880:fltk-1.3.4-1/png/pngrtran.c ****  *  and its name was changed to png_set_expand_gray_1_2_4_to_8().
 881:fltk-1.3.4-1/png/pngrtran.c ****  */
 882:fltk-1.3.4-1/png/pngrtran.c **** 
 883:fltk-1.3.4-1/png/pngrtran.c **** /* Expand paletted images to RGB. */
 884:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 885:fltk-1.3.4-1/png/pngrtran.c **** png_set_palette_to_rgb(png_structrp png_ptr)
 886:fltk-1.3.4-1/png/pngrtran.c **** {
 887:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_palette_to_rgb");
 888:fltk-1.3.4-1/png/pngrtran.c **** 
 889:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 890:fltk-1.3.4-1/png/pngrtran.c ****       return;
 891:fltk-1.3.4-1/png/pngrtran.c **** 
 892:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= (PNG_EXPAND | PNG_EXPAND_tRNS);
 893:fltk-1.3.4-1/png/pngrtran.c **** }
 894:fltk-1.3.4-1/png/pngrtran.c **** 
 895:fltk-1.3.4-1/png/pngrtran.c **** /* Expand grayscale images of less than 8-bit depth to 8 bits. */
 896:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 897:fltk-1.3.4-1/png/pngrtran.c **** png_set_expand_gray_1_2_4_to_8(png_structrp png_ptr)
 898:fltk-1.3.4-1/png/pngrtran.c **** {
 899:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand_gray_1_2_4_to_8");
 900:fltk-1.3.4-1/png/pngrtran.c **** 
 901:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 902:fltk-1.3.4-1/png/pngrtran.c ****       return;
 903:fltk-1.3.4-1/png/pngrtran.c **** 
 904:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_EXPAND;
 905:fltk-1.3.4-1/png/pngrtran.c **** }
 906:fltk-1.3.4-1/png/pngrtran.c **** 
 907:fltk-1.3.4-1/png/pngrtran.c **** /* Expand tRNS chunks to alpha channels. */
 908:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 909:fltk-1.3.4-1/png/pngrtran.c **** png_set_tRNS_to_alpha(png_structrp png_ptr)
 910:fltk-1.3.4-1/png/pngrtran.c **** {
 911:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_tRNS_to_alpha");
 912:fltk-1.3.4-1/png/pngrtran.c **** 
 913:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 914:fltk-1.3.4-1/png/pngrtran.c ****       return;
 915:fltk-1.3.4-1/png/pngrtran.c **** 
 916:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= (PNG_EXPAND | PNG_EXPAND_tRNS);
 917:fltk-1.3.4-1/png/pngrtran.c **** }
 918:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_EXPAND */
 919:fltk-1.3.4-1/png/pngrtran.c **** 
 920:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
 921:fltk-1.3.4-1/png/pngrtran.c **** /* Expand to 16-bit channels, expand the tRNS chunk too (because otherwise
 922:fltk-1.3.4-1/png/pngrtran.c ****  * it may not work correctly.)
 923:fltk-1.3.4-1/png/pngrtran.c ****  */
 924:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 925:fltk-1.3.4-1/png/pngrtran.c **** png_set_expand_16(png_structrp png_ptr)
 926:fltk-1.3.4-1/png/pngrtran.c **** {
 927:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand_16");
 928:fltk-1.3.4-1/png/pngrtran.c **** 
 929:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 930:fltk-1.3.4-1/png/pngrtran.c ****       return;
 931:fltk-1.3.4-1/png/pngrtran.c **** 
 932:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= (PNG_EXPAND_16 | PNG_EXPAND | PNG_EXPAND_tRNS);
 933:fltk-1.3.4-1/png/pngrtran.c **** }
 934:fltk-1.3.4-1/png/pngrtran.c **** #endif
 935:fltk-1.3.4-1/png/pngrtran.c **** 
 936:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
 937:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
 938:fltk-1.3.4-1/png/pngrtran.c **** png_set_gray_to_rgb(png_structrp png_ptr)
 939:fltk-1.3.4-1/png/pngrtran.c **** {
 940:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_gray_to_rgb");
 941:fltk-1.3.4-1/png/pngrtran.c **** 
 942:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 0) == 0)
 943:fltk-1.3.4-1/png/pngrtran.c ****       return;
 944:fltk-1.3.4-1/png/pngrtran.c **** 
 945:fltk-1.3.4-1/png/pngrtran.c ****    /* Because rgb must be 8 bits or more: */
 946:fltk-1.3.4-1/png/pngrtran.c ****    png_set_expand_gray_1_2_4_to_8(png_ptr);
 947:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_GRAY_TO_RGB;
 948:fltk-1.3.4-1/png/pngrtran.c **** }
 949:fltk-1.3.4-1/png/pngrtran.c **** #endif
 950:fltk-1.3.4-1/png/pngrtran.c **** 
 951:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
 952:fltk-1.3.4-1/png/pngrtran.c **** void PNGFAPI
 953:fltk-1.3.4-1/png/pngrtran.c **** png_set_rgb_to_gray_fixed(png_structrp png_ptr, int error_action,
 954:fltk-1.3.4-1/png/pngrtran.c ****     png_fixed_point red, png_fixed_point green)
 955:fltk-1.3.4-1/png/pngrtran.c **** {
 956:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_rgb_to_gray");
 957:fltk-1.3.4-1/png/pngrtran.c **** 
 958:fltk-1.3.4-1/png/pngrtran.c ****    /* Need the IHDR here because of the check on color_type below. */
 959:fltk-1.3.4-1/png/pngrtran.c ****    /* TODO: fix this */
 960:fltk-1.3.4-1/png/pngrtran.c ****    if (png_rtran_ok(png_ptr, 1) == 0)
 961:fltk-1.3.4-1/png/pngrtran.c ****       return;
 962:fltk-1.3.4-1/png/pngrtran.c **** 
 963:fltk-1.3.4-1/png/pngrtran.c ****    switch (error_action)
 964:fltk-1.3.4-1/png/pngrtran.c ****    {
 965:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_ERROR_ACTION_NONE:
 966:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations |= PNG_RGB_TO_GRAY;
 967:fltk-1.3.4-1/png/pngrtran.c ****          break;
 968:fltk-1.3.4-1/png/pngrtran.c **** 
 969:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_ERROR_ACTION_WARN:
 970:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations |= PNG_RGB_TO_GRAY_WARN;
 971:fltk-1.3.4-1/png/pngrtran.c ****          break;
 972:fltk-1.3.4-1/png/pngrtran.c **** 
 973:fltk-1.3.4-1/png/pngrtran.c ****       case PNG_ERROR_ACTION_ERROR:
 974:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations |= PNG_RGB_TO_GRAY_ERR;
 975:fltk-1.3.4-1/png/pngrtran.c ****          break;
 976:fltk-1.3.4-1/png/pngrtran.c **** 
 977:fltk-1.3.4-1/png/pngrtran.c ****       default:
 978:fltk-1.3.4-1/png/pngrtran.c ****          png_error(png_ptr, "invalid error action to rgb_to_gray");
 979:fltk-1.3.4-1/png/pngrtran.c ****          break;
 980:fltk-1.3.4-1/png/pngrtran.c ****    }
 981:fltk-1.3.4-1/png/pngrtran.c **** 
 982:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 983:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
 984:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations |= PNG_EXPAND;
 985:fltk-1.3.4-1/png/pngrtran.c **** #else
 986:fltk-1.3.4-1/png/pngrtran.c ****    {
 987:fltk-1.3.4-1/png/pngrtran.c ****       /* Make this an error in 1.6 because otherwise the application may assume
 988:fltk-1.3.4-1/png/pngrtran.c ****        * that it just worked and get a memory overwrite.
 989:fltk-1.3.4-1/png/pngrtran.c ****        */
 990:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr,
 991:fltk-1.3.4-1/png/pngrtran.c ****         "Cannot do RGB_TO_GRAY without EXPAND_SUPPORTED");
 992:fltk-1.3.4-1/png/pngrtran.c **** 
 993:fltk-1.3.4-1/png/pngrtran.c ****       /* png_ptr->transformations &= ~PNG_RGB_TO_GRAY; */
 994:fltk-1.3.4-1/png/pngrtran.c ****    }
 995:fltk-1.3.4-1/png/pngrtran.c **** #endif
 996:fltk-1.3.4-1/png/pngrtran.c ****    {
 997:fltk-1.3.4-1/png/pngrtran.c ****       if (red >= 0 && green >= 0 && red + green <= PNG_FP_1)
 998:fltk-1.3.4-1/png/pngrtran.c ****       {
 999:fltk-1.3.4-1/png/pngrtran.c ****          png_uint_16 red_int, green_int;
1000:fltk-1.3.4-1/png/pngrtran.c **** 
1001:fltk-1.3.4-1/png/pngrtran.c ****          /* NOTE: this calculation does not round, but this behavior is retained
1002:fltk-1.3.4-1/png/pngrtran.c ****           * for consistency; the inaccuracy is very small.  The code here always
1003:fltk-1.3.4-1/png/pngrtran.c ****           * overwrites the coefficients, regardless of whether they have been
1004:fltk-1.3.4-1/png/pngrtran.c ****           * defaulted or set already.
1005:fltk-1.3.4-1/png/pngrtran.c ****           */
1006:fltk-1.3.4-1/png/pngrtran.c ****          red_int = (png_uint_16)(((png_uint_32)red*32768)/100000);
1007:fltk-1.3.4-1/png/pngrtran.c ****          green_int = (png_uint_16)(((png_uint_32)green*32768)/100000);
1008:fltk-1.3.4-1/png/pngrtran.c **** 
1009:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_red_coeff   = red_int;
1010:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_green_coeff = green_int;
1011:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_coefficients_set = 1;
1012:fltk-1.3.4-1/png/pngrtran.c ****       }
1013:fltk-1.3.4-1/png/pngrtran.c **** 
1014:fltk-1.3.4-1/png/pngrtran.c ****       else
1015:fltk-1.3.4-1/png/pngrtran.c ****       {
1016:fltk-1.3.4-1/png/pngrtran.c ****          if (red >= 0 && green >= 0)
1017:fltk-1.3.4-1/png/pngrtran.c ****             png_app_warning(png_ptr,
1018:fltk-1.3.4-1/png/pngrtran.c ****                "ignoring out of range rgb_to_gray coefficients");
1019:fltk-1.3.4-1/png/pngrtran.c **** 
1020:fltk-1.3.4-1/png/pngrtran.c ****          /* Use the defaults, from the cHRM chunk if set, else the historical
1021:fltk-1.3.4-1/png/pngrtran.c ****           * values which are close to the sRGB/HDTV/ITU-Rec 709 values.  See
1022:fltk-1.3.4-1/png/pngrtran.c ****           * png_do_rgb_to_gray for more discussion of the values.  In this case
1023:fltk-1.3.4-1/png/pngrtran.c ****           * the coefficients are not marked as 'set' and are not overwritten if
1024:fltk-1.3.4-1/png/pngrtran.c ****           * something has already provided a default.
1025:fltk-1.3.4-1/png/pngrtran.c ****           */
1026:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->rgb_to_gray_red_coeff == 0 &&
1027:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->rgb_to_gray_green_coeff == 0)
1028:fltk-1.3.4-1/png/pngrtran.c ****          {
1029:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->rgb_to_gray_red_coeff   = 6968;
1030:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->rgb_to_gray_green_coeff = 23434;
1031:fltk-1.3.4-1/png/pngrtran.c ****             /* png_ptr->rgb_to_gray_blue_coeff  = 2366; */
1032:fltk-1.3.4-1/png/pngrtran.c ****          }
1033:fltk-1.3.4-1/png/pngrtran.c ****       }
1034:fltk-1.3.4-1/png/pngrtran.c ****    }
1035:fltk-1.3.4-1/png/pngrtran.c **** }
1036:fltk-1.3.4-1/png/pngrtran.c **** 
1037:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_FLOATING_POINT_SUPPORTED
1038:fltk-1.3.4-1/png/pngrtran.c **** /* Convert a RGB image to a grayscale of the same width.  This allows us,
1039:fltk-1.3.4-1/png/pngrtran.c ****  * for example, to convert a 24 bpp RGB image into an 8 bpp grayscale image.
1040:fltk-1.3.4-1/png/pngrtran.c ****  */
1041:fltk-1.3.4-1/png/pngrtran.c **** 
1042:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
1043:fltk-1.3.4-1/png/pngrtran.c **** png_set_rgb_to_gray(png_structrp png_ptr, int error_action, double red,
1044:fltk-1.3.4-1/png/pngrtran.c ****    double green)
1045:fltk-1.3.4-1/png/pngrtran.c **** {
1046:fltk-1.3.4-1/png/pngrtran.c ****    png_set_rgb_to_gray_fixed(png_ptr, error_action,
1047:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed(png_ptr, red, "rgb to gray red coefficient"),
1048:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed(png_ptr, green, "rgb to gray green coefficient"));
1049:fltk-1.3.4-1/png/pngrtran.c **** }
1050:fltk-1.3.4-1/png/pngrtran.c **** #endif /* FLOATING POINT */
1051:fltk-1.3.4-1/png/pngrtran.c **** 
1052:fltk-1.3.4-1/png/pngrtran.c **** #endif /* RGB_TO_GRAY */
1053:fltk-1.3.4-1/png/pngrtran.c **** 
1054:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_USER_TRANSFORM_SUPPORTED) || \
1055:fltk-1.3.4-1/png/pngrtran.c ****     defined(PNG_WRITE_USER_TRANSFORM_SUPPORTED)
1056:fltk-1.3.4-1/png/pngrtran.c **** void PNGAPI
1057:fltk-1.3.4-1/png/pngrtran.c **** png_set_read_user_transform_fn(png_structrp png_ptr, png_user_transform_ptr
1058:fltk-1.3.4-1/png/pngrtran.c ****     read_user_transform_fn)
1059:fltk-1.3.4-1/png/pngrtran.c **** {
1060:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_read_user_transform_fn");
1061:fltk-1.3.4-1/png/pngrtran.c **** 
1062:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_USER_TRANSFORM_SUPPORTED
1063:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations |= PNG_USER_TRANSFORM;
1064:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->read_user_transform_fn = read_user_transform_fn;
1065:fltk-1.3.4-1/png/pngrtran.c **** #endif
1066:fltk-1.3.4-1/png/pngrtran.c **** }
1067:fltk-1.3.4-1/png/pngrtran.c **** #endif
1068:fltk-1.3.4-1/png/pngrtran.c **** 
1069:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_TRANSFORMS_SUPPORTED
1070:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
1071:fltk-1.3.4-1/png/pngrtran.c **** /* In the case of gamma transformations only do transformations on images where
1072:fltk-1.3.4-1/png/pngrtran.c ****  * the [file] gamma and screen_gamma are not close reciprocals, otherwise it
1073:fltk-1.3.4-1/png/pngrtran.c ****  * slows things down slightly, and also needlessly introduces small errors.
1074:fltk-1.3.4-1/png/pngrtran.c ****  */
1075:fltk-1.3.4-1/png/pngrtran.c **** static int /* PRIVATE */
1076:fltk-1.3.4-1/png/pngrtran.c **** png_gamma_threshold(png_fixed_point screen_gamma, png_fixed_point file_gamma)
1077:fltk-1.3.4-1/png/pngrtran.c **** {
1078:fltk-1.3.4-1/png/pngrtran.c ****    /* PNG_GAMMA_THRESHOLD is the threshold for performing gamma
1079:fltk-1.3.4-1/png/pngrtran.c ****     * correction as a difference of the overall transform from 1.0
1080:fltk-1.3.4-1/png/pngrtran.c ****     *
1081:fltk-1.3.4-1/png/pngrtran.c ****     * We want to compare the threshold with s*f - 1, if we get
1082:fltk-1.3.4-1/png/pngrtran.c ****     * overflow here it is because of wacky gamma values so we
1083:fltk-1.3.4-1/png/pngrtran.c ****     * turn on processing anyway.
1084:fltk-1.3.4-1/png/pngrtran.c ****     */
1085:fltk-1.3.4-1/png/pngrtran.c ****    png_fixed_point gtest;
1086:fltk-1.3.4-1/png/pngrtran.c ****    return !png_muldiv(&gtest, screen_gamma, file_gamma, PNG_FP_1) ||
1087:fltk-1.3.4-1/png/pngrtran.c ****        png_gamma_significant(gtest);
1088:fltk-1.3.4-1/png/pngrtran.c **** }
1089:fltk-1.3.4-1/png/pngrtran.c **** #endif
1090:fltk-1.3.4-1/png/pngrtran.c **** 
1091:fltk-1.3.4-1/png/pngrtran.c **** /* Initialize everything needed for the read.  This includes modifying
1092:fltk-1.3.4-1/png/pngrtran.c ****  * the palette.
1093:fltk-1.3.4-1/png/pngrtran.c ****  */
1094:fltk-1.3.4-1/png/pngrtran.c **** 
1095:fltk-1.3.4-1/png/pngrtran.c **** /* For the moment 'png_init_palette_transformations' and
1096:fltk-1.3.4-1/png/pngrtran.c ****  * 'png_init_rgb_transformations' only do some flag canceling optimizations.
1097:fltk-1.3.4-1/png/pngrtran.c ****  * The intent is that these two routines should have palette or rgb operations
1098:fltk-1.3.4-1/png/pngrtran.c ****  * extracted from 'png_init_read_transformations'.
1099:fltk-1.3.4-1/png/pngrtran.c ****  */
1100:fltk-1.3.4-1/png/pngrtran.c **** static void /* PRIVATE */
1101:fltk-1.3.4-1/png/pngrtran.c **** png_init_palette_transformations(png_structrp png_ptr)
1102:fltk-1.3.4-1/png/pngrtran.c **** {
1103:fltk-1.3.4-1/png/pngrtran.c ****    /* Called to handle the (input) palette case.  In png_do_read_transformations
1104:fltk-1.3.4-1/png/pngrtran.c ****     * the first step is to expand the palette if requested, so this code must
1105:fltk-1.3.4-1/png/pngrtran.c ****     * take care to only make changes that are invariant with respect to the
1106:fltk-1.3.4-1/png/pngrtran.c ****     * palette expansion, or only do them if there is no expansion.
1107:fltk-1.3.4-1/png/pngrtran.c ****     *
1108:fltk-1.3.4-1/png/pngrtran.c ****     * STRIP_ALPHA has already been handled in the caller (by setting num_trans
1109:fltk-1.3.4-1/png/pngrtran.c ****     * to 0.)
1110:fltk-1.3.4-1/png/pngrtran.c ****     */
1111:fltk-1.3.4-1/png/pngrtran.c ****    int input_has_alpha = 0;
1112:fltk-1.3.4-1/png/pngrtran.c ****    int input_has_transparency = 0;
1113:fltk-1.3.4-1/png/pngrtran.c **** 
1114:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr->num_trans > 0)
1115:fltk-1.3.4-1/png/pngrtran.c ****    {
1116:fltk-1.3.4-1/png/pngrtran.c ****       int i;
1117:fltk-1.3.4-1/png/pngrtran.c **** 
1118:fltk-1.3.4-1/png/pngrtran.c ****       /* Ignore if all the entries are opaque (unlikely!) */
1119:fltk-1.3.4-1/png/pngrtran.c ****       for (i=0; i<png_ptr->num_trans; ++i)
1120:fltk-1.3.4-1/png/pngrtran.c ****       {
1121:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->trans_alpha[i] == 255)
1122:fltk-1.3.4-1/png/pngrtran.c ****             continue;
1123:fltk-1.3.4-1/png/pngrtran.c ****          else if (png_ptr->trans_alpha[i] == 0)
1124:fltk-1.3.4-1/png/pngrtran.c ****             input_has_transparency = 1;
1125:fltk-1.3.4-1/png/pngrtran.c ****          else
1126:fltk-1.3.4-1/png/pngrtran.c ****          {
1127:fltk-1.3.4-1/png/pngrtran.c ****             input_has_transparency = 1;
1128:fltk-1.3.4-1/png/pngrtran.c ****             input_has_alpha = 1;
1129:fltk-1.3.4-1/png/pngrtran.c ****             break;
1130:fltk-1.3.4-1/png/pngrtran.c ****          }
1131:fltk-1.3.4-1/png/pngrtran.c ****       }
1132:fltk-1.3.4-1/png/pngrtran.c ****    }
1133:fltk-1.3.4-1/png/pngrtran.c **** 
1134:fltk-1.3.4-1/png/pngrtran.c ****    /* If no alpha we can optimize. */
1135:fltk-1.3.4-1/png/pngrtran.c ****    if (input_has_alpha == 0)
1136:fltk-1.3.4-1/png/pngrtran.c ****    {
1137:fltk-1.3.4-1/png/pngrtran.c ****       /* Any alpha means background and associative alpha processing is
1138:fltk-1.3.4-1/png/pngrtran.c ****        * required, however if the alpha is 0 or 1 throughout OPTIMIZE_ALPHA
1139:fltk-1.3.4-1/png/pngrtran.c ****        * and ENCODE_ALPHA are irrelevant.
1140:fltk-1.3.4-1/png/pngrtran.c ****        */
1141:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
1142:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
1143:fltk-1.3.4-1/png/pngrtran.c **** 
1144:fltk-1.3.4-1/png/pngrtran.c ****       if (input_has_transparency == 0)
1145:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~(PNG_COMPOSE | PNG_BACKGROUND_EXPAND);
1146:fltk-1.3.4-1/png/pngrtran.c ****    }
1147:fltk-1.3.4-1/png/pngrtran.c **** 
1148:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_EXPAND_SUPPORTED) && defined(PNG_READ_BACKGROUND_SUPPORTED)
1149:fltk-1.3.4-1/png/pngrtran.c ****    /* png_set_background handling - deals with the complexity of whether the
1150:fltk-1.3.4-1/png/pngrtran.c ****     * background color is in the file format or the screen format in the case
1151:fltk-1.3.4-1/png/pngrtran.c ****     * where an 'expand' will happen.
1152:fltk-1.3.4-1/png/pngrtran.c ****     */
1153:fltk-1.3.4-1/png/pngrtran.c **** 
1154:fltk-1.3.4-1/png/pngrtran.c ****    /* The following code cannot be entered in the alpha pre-multiplication case
1155:fltk-1.3.4-1/png/pngrtran.c ****     * because PNG_BACKGROUND_EXPAND is cancelled below.
1156:fltk-1.3.4-1/png/pngrtran.c ****     */
1157:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_BACKGROUND_EXPAND) != 0 &&
1158:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_EXPAND) != 0)
1159:fltk-1.3.4-1/png/pngrtran.c ****    {
1160:fltk-1.3.4-1/png/pngrtran.c ****       {
1161:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->background.red   =
1162:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette[png_ptr->background.index].red;
1163:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->background.green =
1164:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette[png_ptr->background.index].green;
1165:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->background.blue  =
1166:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette[png_ptr->background.index].blue;
1167:fltk-1.3.4-1/png/pngrtran.c **** 
1168:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_INVERT_ALPHA_SUPPORTED
1169:fltk-1.3.4-1/png/pngrtran.c ****         if ((png_ptr->transformations & PNG_INVERT_ALPHA) != 0)
1170:fltk-1.3.4-1/png/pngrtran.c ****         {
1171:fltk-1.3.4-1/png/pngrtran.c ****            if ((png_ptr->transformations & PNG_EXPAND_tRNS) == 0)
1172:fltk-1.3.4-1/png/pngrtran.c ****            {
1173:fltk-1.3.4-1/png/pngrtran.c ****               /* Invert the alpha channel (in tRNS) unless the pixels are
1174:fltk-1.3.4-1/png/pngrtran.c ****                * going to be expanded, in which case leave it for later
1175:fltk-1.3.4-1/png/pngrtran.c ****                */
1176:fltk-1.3.4-1/png/pngrtran.c ****               int i, istop = png_ptr->num_trans;
1177:fltk-1.3.4-1/png/pngrtran.c **** 
1178:fltk-1.3.4-1/png/pngrtran.c ****               for (i=0; i<istop; i++)
1179:fltk-1.3.4-1/png/pngrtran.c ****                  png_ptr->trans_alpha[i] = (png_byte)(255 -
1180:fltk-1.3.4-1/png/pngrtran.c ****                     png_ptr->trans_alpha[i]);
1181:fltk-1.3.4-1/png/pngrtran.c ****            }
1182:fltk-1.3.4-1/png/pngrtran.c ****         }
1183:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_INVERT_ALPHA */
1184:fltk-1.3.4-1/png/pngrtran.c ****       }
1185:fltk-1.3.4-1/png/pngrtran.c ****    } /* background expand and (therefore) no alpha association. */
1186:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_EXPAND && READ_BACKGROUND */
1187:fltk-1.3.4-1/png/pngrtran.c **** }
1188:fltk-1.3.4-1/png/pngrtran.c **** 
1189:fltk-1.3.4-1/png/pngrtran.c **** static void /* PRIVATE */
1190:fltk-1.3.4-1/png/pngrtran.c **** png_init_rgb_transformations(png_structrp png_ptr)
1191:fltk-1.3.4-1/png/pngrtran.c **** {
1192:fltk-1.3.4-1/png/pngrtran.c ****    /* Added to libpng-1.5.4: check the color type to determine whether there
1193:fltk-1.3.4-1/png/pngrtran.c ****     * is any alpha or transparency in the image and simply cancel the
1194:fltk-1.3.4-1/png/pngrtran.c ****     * background and alpha mode stuff if there isn't.
1195:fltk-1.3.4-1/png/pngrtran.c ****     */
1196:fltk-1.3.4-1/png/pngrtran.c ****    int input_has_alpha = (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0;
1197:fltk-1.3.4-1/png/pngrtran.c ****    int input_has_transparency = png_ptr->num_trans > 0;
1198:fltk-1.3.4-1/png/pngrtran.c **** 
1199:fltk-1.3.4-1/png/pngrtran.c ****    /* If no alpha we can optimize. */
1200:fltk-1.3.4-1/png/pngrtran.c ****    if (input_has_alpha == 0)
1201:fltk-1.3.4-1/png/pngrtran.c ****    {
1202:fltk-1.3.4-1/png/pngrtran.c ****       /* Any alpha means background and associative alpha processing is
1203:fltk-1.3.4-1/png/pngrtran.c ****        * required, however if the alpha is 0 or 1 throughout OPTIMIZE_ALPHA
1204:fltk-1.3.4-1/png/pngrtran.c ****        * and ENCODE_ALPHA are irrelevant.
1205:fltk-1.3.4-1/png/pngrtran.c ****        */
1206:fltk-1.3.4-1/png/pngrtran.c **** #     ifdef PNG_READ_ALPHA_MODE_SUPPORTED
1207:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
1208:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
1209:fltk-1.3.4-1/png/pngrtran.c **** #     endif
1210:fltk-1.3.4-1/png/pngrtran.c **** 
1211:fltk-1.3.4-1/png/pngrtran.c ****       if (input_has_transparency == 0)
1212:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~(PNG_COMPOSE | PNG_BACKGROUND_EXPAND);
1213:fltk-1.3.4-1/png/pngrtran.c ****    }
1214:fltk-1.3.4-1/png/pngrtran.c **** 
1215:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_EXPAND_SUPPORTED) && defined(PNG_READ_BACKGROUND_SUPPORTED)
1216:fltk-1.3.4-1/png/pngrtran.c ****    /* png_set_background handling - deals with the complexity of whether the
1217:fltk-1.3.4-1/png/pngrtran.c ****     * background color is in the file format or the screen format in the case
1218:fltk-1.3.4-1/png/pngrtran.c ****     * where an 'expand' will happen.
1219:fltk-1.3.4-1/png/pngrtran.c ****     */
1220:fltk-1.3.4-1/png/pngrtran.c **** 
1221:fltk-1.3.4-1/png/pngrtran.c ****    /* The following code cannot be entered in the alpha pre-multiplication case
1222:fltk-1.3.4-1/png/pngrtran.c ****     * because PNG_BACKGROUND_EXPAND is cancelled below.
1223:fltk-1.3.4-1/png/pngrtran.c ****     */
1224:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_BACKGROUND_EXPAND) != 0 &&
1225:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_EXPAND) != 0 &&
1226:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type & PNG_COLOR_MASK_COLOR) == 0)
1227:fltk-1.3.4-1/png/pngrtran.c ****        /* i.e., GRAY or GRAY_ALPHA */
1228:fltk-1.3.4-1/png/pngrtran.c ****    {
1229:fltk-1.3.4-1/png/pngrtran.c ****       {
1230:fltk-1.3.4-1/png/pngrtran.c ****          /* Expand background and tRNS chunks */
1231:fltk-1.3.4-1/png/pngrtran.c ****          int gray = png_ptr->background.gray;
1232:fltk-1.3.4-1/png/pngrtran.c ****          int trans_gray = png_ptr->trans_color.gray;
1233:fltk-1.3.4-1/png/pngrtran.c **** 
1234:fltk-1.3.4-1/png/pngrtran.c ****          switch (png_ptr->bit_depth)
1235:fltk-1.3.4-1/png/pngrtran.c ****          {
1236:fltk-1.3.4-1/png/pngrtran.c ****             case 1:
1237:fltk-1.3.4-1/png/pngrtran.c ****                gray *= 0xff;
1238:fltk-1.3.4-1/png/pngrtran.c ****                trans_gray *= 0xff;
1239:fltk-1.3.4-1/png/pngrtran.c ****                break;
1240:fltk-1.3.4-1/png/pngrtran.c **** 
1241:fltk-1.3.4-1/png/pngrtran.c ****             case 2:
1242:fltk-1.3.4-1/png/pngrtran.c ****                gray *= 0x55;
1243:fltk-1.3.4-1/png/pngrtran.c ****                trans_gray *= 0x55;
1244:fltk-1.3.4-1/png/pngrtran.c ****                break;
1245:fltk-1.3.4-1/png/pngrtran.c **** 
1246:fltk-1.3.4-1/png/pngrtran.c ****             case 4:
1247:fltk-1.3.4-1/png/pngrtran.c ****                gray *= 0x11;
1248:fltk-1.3.4-1/png/pngrtran.c ****                trans_gray *= 0x11;
1249:fltk-1.3.4-1/png/pngrtran.c ****                break;
1250:fltk-1.3.4-1/png/pngrtran.c **** 
1251:fltk-1.3.4-1/png/pngrtran.c ****             default:
1252:fltk-1.3.4-1/png/pngrtran.c **** 
1253:fltk-1.3.4-1/png/pngrtran.c ****             case 8:
1254:fltk-1.3.4-1/png/pngrtran.c ****                /* FALL THROUGH (Already 8 bits) */
1255:fltk-1.3.4-1/png/pngrtran.c **** 
1256:fltk-1.3.4-1/png/pngrtran.c ****             case 16:
1257:fltk-1.3.4-1/png/pngrtran.c ****                /* Already a full 16 bits */
1258:fltk-1.3.4-1/png/pngrtran.c ****                break;
1259:fltk-1.3.4-1/png/pngrtran.c ****          }
1260:fltk-1.3.4-1/png/pngrtran.c **** 
1261:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->background.red = png_ptr->background.green =
1262:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->background.blue = (png_uint_16)gray;
1263:fltk-1.3.4-1/png/pngrtran.c **** 
1264:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->transformations & PNG_EXPAND_tRNS) == 0)
1265:fltk-1.3.4-1/png/pngrtran.c ****          {
1266:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->trans_color.red = png_ptr->trans_color.green =
1267:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->trans_color.blue = (png_uint_16)trans_gray;
1268:fltk-1.3.4-1/png/pngrtran.c ****          }
1269:fltk-1.3.4-1/png/pngrtran.c ****       }
1270:fltk-1.3.4-1/png/pngrtran.c ****    } /* background expand and (therefore) no alpha association. */
1271:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_EXPAND && READ_BACKGROUND */
1272:fltk-1.3.4-1/png/pngrtran.c **** }
1273:fltk-1.3.4-1/png/pngrtran.c **** 
1274:fltk-1.3.4-1/png/pngrtran.c **** void /* PRIVATE */
1275:fltk-1.3.4-1/png/pngrtran.c **** png_init_read_transformations(png_structrp png_ptr)
1276:fltk-1.3.4-1/png/pngrtran.c **** {
1277:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_init_read_transformations");
1278:fltk-1.3.4-1/png/pngrtran.c **** 
1279:fltk-1.3.4-1/png/pngrtran.c ****    /* This internal function is called from png_read_start_row in pngrutil.c
1280:fltk-1.3.4-1/png/pngrtran.c ****     * and it is called before the 'rowbytes' calculation is done, so the code
1281:fltk-1.3.4-1/png/pngrtran.c ****     * in here can change or update the transformations flags.
1282:fltk-1.3.4-1/png/pngrtran.c ****     *
1283:fltk-1.3.4-1/png/pngrtran.c ****     * First do updates that do not depend on the details of the PNG image data
1284:fltk-1.3.4-1/png/pngrtran.c ****     * being processed.
1285:fltk-1.3.4-1/png/pngrtran.c ****     */
1286:fltk-1.3.4-1/png/pngrtran.c **** 
1287:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
1288:fltk-1.3.4-1/png/pngrtran.c ****    /* Prior to 1.5.4 these tests were performed from png_set_gamma, 1.5.4 adds
1289:fltk-1.3.4-1/png/pngrtran.c ****     * png_set_alpha_mode and this is another source for a default file gamma so
1290:fltk-1.3.4-1/png/pngrtran.c ****     * the test needs to be performed later - here.  In addition prior to 1.5.4
1291:fltk-1.3.4-1/png/pngrtran.c ****     * the tests were repeated for the PALETTE color type here - this is no
1292:fltk-1.3.4-1/png/pngrtran.c ****     * longer necessary (and doesn't seem to have been necessary before.)
1293:fltk-1.3.4-1/png/pngrtran.c ****     */
1294:fltk-1.3.4-1/png/pngrtran.c ****    {
1295:fltk-1.3.4-1/png/pngrtran.c ****       /* The following temporary indicates if overall gamma correction is
1296:fltk-1.3.4-1/png/pngrtran.c ****        * required.
1297:fltk-1.3.4-1/png/pngrtran.c ****        */
1298:fltk-1.3.4-1/png/pngrtran.c ****       int gamma_correction = 0;
1299:fltk-1.3.4-1/png/pngrtran.c **** 
1300:fltk-1.3.4-1/png/pngrtran.c ****       if (png_ptr->colorspace.gamma != 0) /* has been set */
1301:fltk-1.3.4-1/png/pngrtran.c ****       {
1302:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->screen_gamma != 0) /* screen set too */
1303:fltk-1.3.4-1/png/pngrtran.c ****             gamma_correction = png_gamma_threshold(png_ptr->colorspace.gamma,
1304:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->screen_gamma);
1305:fltk-1.3.4-1/png/pngrtran.c **** 
1306:fltk-1.3.4-1/png/pngrtran.c ****          else
1307:fltk-1.3.4-1/png/pngrtran.c ****             /* Assume the output matches the input; a long time default behavior
1308:fltk-1.3.4-1/png/pngrtran.c ****              * of libpng, although the standard has nothing to say about this.
1309:fltk-1.3.4-1/png/pngrtran.c ****              */
1310:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->screen_gamma = png_reciprocal(png_ptr->colorspace.gamma);
1311:fltk-1.3.4-1/png/pngrtran.c ****       }
1312:fltk-1.3.4-1/png/pngrtran.c **** 
1313:fltk-1.3.4-1/png/pngrtran.c ****       else if (png_ptr->screen_gamma != 0)
1314:fltk-1.3.4-1/png/pngrtran.c ****          /* The converse - assume the file matches the screen, note that this
1315:fltk-1.3.4-1/png/pngrtran.c ****           * perhaps undesireable default can (from 1.5.4) be changed by calling
1316:fltk-1.3.4-1/png/pngrtran.c ****           * png_set_alpha_mode (even if the alpha handling mode isn't required
1317:fltk-1.3.4-1/png/pngrtran.c ****           * or isn't changed from the default.)
1318:fltk-1.3.4-1/png/pngrtran.c ****           */
1319:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->colorspace.gamma = png_reciprocal(png_ptr->screen_gamma);
1320:fltk-1.3.4-1/png/pngrtran.c **** 
1321:fltk-1.3.4-1/png/pngrtran.c ****       else /* neither are set */
1322:fltk-1.3.4-1/png/pngrtran.c ****          /* Just in case the following prevents any processing - file and screen
1323:fltk-1.3.4-1/png/pngrtran.c ****           * are both assumed to be linear and there is no way to introduce a
1324:fltk-1.3.4-1/png/pngrtran.c ****           * third gamma value other than png_set_background with 'UNIQUE', and,
1325:fltk-1.3.4-1/png/pngrtran.c ****           * prior to 1.5.4
1326:fltk-1.3.4-1/png/pngrtran.c ****           */
1327:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->screen_gamma = png_ptr->colorspace.gamma = PNG_FP_1;
1328:fltk-1.3.4-1/png/pngrtran.c **** 
1329:fltk-1.3.4-1/png/pngrtran.c ****       /* We have a gamma value now. */
1330:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->colorspace.flags |= PNG_COLORSPACE_HAVE_GAMMA;
1331:fltk-1.3.4-1/png/pngrtran.c **** 
1332:fltk-1.3.4-1/png/pngrtran.c ****       /* Now turn the gamma transformation on or off as appropriate.  Notice
1333:fltk-1.3.4-1/png/pngrtran.c ****        * that PNG_GAMMA just refers to the file->screen correction.  Alpha
1334:fltk-1.3.4-1/png/pngrtran.c ****        * composition may independently cause gamma correction because it needs
1335:fltk-1.3.4-1/png/pngrtran.c ****        * linear data (e.g. if the file has a gAMA chunk but the screen gamma
1336:fltk-1.3.4-1/png/pngrtran.c ****        * hasn't been specified.)  In any case this flag may get turned off in
1337:fltk-1.3.4-1/png/pngrtran.c ****        * the code immediately below if the transform can be handled outside the
1338:fltk-1.3.4-1/png/pngrtran.c ****        * row loop.
1339:fltk-1.3.4-1/png/pngrtran.c ****        */
1340:fltk-1.3.4-1/png/pngrtran.c ****       if (gamma_correction != 0)
1341:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations |= PNG_GAMMA;
1342:fltk-1.3.4-1/png/pngrtran.c **** 
1343:fltk-1.3.4-1/png/pngrtran.c ****       else
1344:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~PNG_GAMMA;
1345:fltk-1.3.4-1/png/pngrtran.c ****    }
1346:fltk-1.3.4-1/png/pngrtran.c **** #endif
1347:fltk-1.3.4-1/png/pngrtran.c **** 
1348:fltk-1.3.4-1/png/pngrtran.c ****    /* Certain transformations have the effect of preventing other
1349:fltk-1.3.4-1/png/pngrtran.c ****     * transformations that happen afterward in png_do_read_transformations;
1350:fltk-1.3.4-1/png/pngrtran.c ****     * resolve the interdependencies here.  From the code of
1351:fltk-1.3.4-1/png/pngrtran.c ****     * png_do_read_transformations the order is:
1352:fltk-1.3.4-1/png/pngrtran.c ****     *
1353:fltk-1.3.4-1/png/pngrtran.c ****     *  1) PNG_EXPAND (including PNG_EXPAND_tRNS)
1354:fltk-1.3.4-1/png/pngrtran.c ****     *  2) PNG_STRIP_ALPHA (if no compose)
1355:fltk-1.3.4-1/png/pngrtran.c ****     *  3) PNG_RGB_TO_GRAY
1356:fltk-1.3.4-1/png/pngrtran.c ****     *  4) PNG_GRAY_TO_RGB iff !PNG_BACKGROUND_IS_GRAY
1357:fltk-1.3.4-1/png/pngrtran.c ****     *  5) PNG_COMPOSE
1358:fltk-1.3.4-1/png/pngrtran.c ****     *  6) PNG_GAMMA
1359:fltk-1.3.4-1/png/pngrtran.c ****     *  7) PNG_STRIP_ALPHA (if compose)
1360:fltk-1.3.4-1/png/pngrtran.c ****     *  8) PNG_ENCODE_ALPHA
1361:fltk-1.3.4-1/png/pngrtran.c ****     *  9) PNG_SCALE_16_TO_8
1362:fltk-1.3.4-1/png/pngrtran.c ****     * 10) PNG_16_TO_8
1363:fltk-1.3.4-1/png/pngrtran.c ****     * 11) PNG_QUANTIZE (converts to palette)
1364:fltk-1.3.4-1/png/pngrtran.c ****     * 12) PNG_EXPAND_16
1365:fltk-1.3.4-1/png/pngrtran.c ****     * 13) PNG_GRAY_TO_RGB iff PNG_BACKGROUND_IS_GRAY
1366:fltk-1.3.4-1/png/pngrtran.c ****     * 14) PNG_INVERT_MONO
1367:fltk-1.3.4-1/png/pngrtran.c ****     * 15) PNG_INVERT_ALPHA
1368:fltk-1.3.4-1/png/pngrtran.c ****     * 16) PNG_SHIFT
1369:fltk-1.3.4-1/png/pngrtran.c ****     * 17) PNG_PACK
1370:fltk-1.3.4-1/png/pngrtran.c ****     * 18) PNG_BGR
1371:fltk-1.3.4-1/png/pngrtran.c ****     * 19) PNG_PACKSWAP
1372:fltk-1.3.4-1/png/pngrtran.c ****     * 20) PNG_FILLER (includes PNG_ADD_ALPHA)
1373:fltk-1.3.4-1/png/pngrtran.c ****     * 21) PNG_SWAP_ALPHA
1374:fltk-1.3.4-1/png/pngrtran.c ****     * 22) PNG_SWAP_BYTES
1375:fltk-1.3.4-1/png/pngrtran.c ****     * 23) PNG_USER_TRANSFORM [must be last]
1376:fltk-1.3.4-1/png/pngrtran.c ****     */
1377:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
1378:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_STRIP_ALPHA) != 0 &&
1379:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) == 0)
1380:fltk-1.3.4-1/png/pngrtran.c ****    {
1381:fltk-1.3.4-1/png/pngrtran.c ****       /* Stripping the alpha channel happens immediately after the 'expand'
1382:fltk-1.3.4-1/png/pngrtran.c ****        * transformations, before all other transformation, so it cancels out
1383:fltk-1.3.4-1/png/pngrtran.c ****        * the alpha handling.  It has the side effect negating the effect of
1384:fltk-1.3.4-1/png/pngrtran.c ****        * PNG_EXPAND_tRNS too:
1385:fltk-1.3.4-1/png/pngrtran.c ****        */
1386:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~(PNG_BACKGROUND_EXPAND | PNG_ENCODE_ALPHA |
1387:fltk-1.3.4-1/png/pngrtran.c ****          PNG_EXPAND_tRNS);
1388:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
1389:fltk-1.3.4-1/png/pngrtran.c **** 
1390:fltk-1.3.4-1/png/pngrtran.c ****       /* Kill the tRNS chunk itself too.  Prior to 1.5.4 this did not happen
1391:fltk-1.3.4-1/png/pngrtran.c ****        * so transparency information would remain just so long as it wasn't
1392:fltk-1.3.4-1/png/pngrtran.c ****        * expanded.  This produces unexpected API changes if the set of things
1393:fltk-1.3.4-1/png/pngrtran.c ****        * that do PNG_EXPAND_tRNS changes (perfectly possible given the
1394:fltk-1.3.4-1/png/pngrtran.c ****        * documentation - which says ask for what you want, accept what you
1395:fltk-1.3.4-1/png/pngrtran.c ****        * get.)  This makes the behavior consistent from 1.5.4:
1396:fltk-1.3.4-1/png/pngrtran.c ****        */
1397:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->num_trans = 0;
1398:fltk-1.3.4-1/png/pngrtran.c ****    }
1399:fltk-1.3.4-1/png/pngrtran.c **** #endif /* STRIP_ALPHA supported, no COMPOSE */
1400:fltk-1.3.4-1/png/pngrtran.c **** 
1401:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_ALPHA_MODE_SUPPORTED
1402:fltk-1.3.4-1/png/pngrtran.c ****    /* If the screen gamma is about 1.0 then the OPTIMIZE_ALPHA and ENCODE_ALPHA
1403:fltk-1.3.4-1/png/pngrtran.c ****     * settings will have no effect.
1404:fltk-1.3.4-1/png/pngrtran.c ****     */
1405:fltk-1.3.4-1/png/pngrtran.c ****    if (png_gamma_significant(png_ptr->screen_gamma) == 0)
1406:fltk-1.3.4-1/png/pngrtran.c ****    {
1407:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
1408:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
1409:fltk-1.3.4-1/png/pngrtran.c ****    }
1410:fltk-1.3.4-1/png/pngrtran.c **** #endif
1411:fltk-1.3.4-1/png/pngrtran.c **** 
1412:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
1413:fltk-1.3.4-1/png/pngrtran.c ****    /* Make sure the coefficients for the rgb to gray conversion are set
1414:fltk-1.3.4-1/png/pngrtran.c ****     * appropriately.
1415:fltk-1.3.4-1/png/pngrtran.c ****     */
1416:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0)
1417:fltk-1.3.4-1/png/pngrtran.c ****       png_colorspace_set_rgb_coefficients(png_ptr);
1418:fltk-1.3.4-1/png/pngrtran.c **** #endif
1419:fltk-1.3.4-1/png/pngrtran.c **** 
1420:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
1421:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_EXPAND_SUPPORTED) && defined(PNG_READ_BACKGROUND_SUPPORTED)
1422:fltk-1.3.4-1/png/pngrtran.c ****    /* Detect gray background and attempt to enable optimization for
1423:fltk-1.3.4-1/png/pngrtran.c ****     * gray --> RGB case.
1424:fltk-1.3.4-1/png/pngrtran.c ****     *
1425:fltk-1.3.4-1/png/pngrtran.c ****     * Note:  if PNG_BACKGROUND_EXPAND is set and color_type is either RGB or
1426:fltk-1.3.4-1/png/pngrtran.c ****     * RGB_ALPHA (in which case need_expand is superfluous anyway), the
1427:fltk-1.3.4-1/png/pngrtran.c ****     * background color might actually be gray yet not be flagged as such.
1428:fltk-1.3.4-1/png/pngrtran.c ****     * This is not a problem for the current code, which uses
1429:fltk-1.3.4-1/png/pngrtran.c ****     * PNG_BACKGROUND_IS_GRAY only to decide when to do the
1430:fltk-1.3.4-1/png/pngrtran.c ****     * png_do_gray_to_rgb() transformation.
1431:fltk-1.3.4-1/png/pngrtran.c ****     *
1432:fltk-1.3.4-1/png/pngrtran.c ****     * TODO: this code needs to be revised to avoid the complexity and
1433:fltk-1.3.4-1/png/pngrtran.c ****     * interdependencies.  The color type of the background should be recorded in
1434:fltk-1.3.4-1/png/pngrtran.c ****     * png_set_background, along with the bit depth, then the code has a record
1435:fltk-1.3.4-1/png/pngrtran.c ****     * of exactly what color space the background is currently in.
1436:fltk-1.3.4-1/png/pngrtran.c ****     */
1437:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_BACKGROUND_EXPAND) != 0)
1438:fltk-1.3.4-1/png/pngrtran.c ****    {
1439:fltk-1.3.4-1/png/pngrtran.c ****       /* PNG_BACKGROUND_EXPAND: the background is in the file color space, so if
1440:fltk-1.3.4-1/png/pngrtran.c ****        * the file was grayscale the background value is gray.
1441:fltk-1.3.4-1/png/pngrtran.c ****        */
1442:fltk-1.3.4-1/png/pngrtran.c ****       if ((png_ptr->color_type & PNG_COLOR_MASK_COLOR) == 0)
1443:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->mode |= PNG_BACKGROUND_IS_GRAY;
1444:fltk-1.3.4-1/png/pngrtran.c ****    }
1445:fltk-1.3.4-1/png/pngrtran.c **** 
1446:fltk-1.3.4-1/png/pngrtran.c ****    else if ((png_ptr->transformations & PNG_COMPOSE) != 0)
1447:fltk-1.3.4-1/png/pngrtran.c ****    {
1448:fltk-1.3.4-1/png/pngrtran.c ****       /* PNG_COMPOSE: png_set_background was called with need_expand false,
1449:fltk-1.3.4-1/png/pngrtran.c ****        * so the color is in the color space of the output or png_set_alpha_mode
1450:fltk-1.3.4-1/png/pngrtran.c ****        * was called and the color is black.  Ignore RGB_TO_GRAY because that
1451:fltk-1.3.4-1/png/pngrtran.c ****        * happens before GRAY_TO_RGB.
1452:fltk-1.3.4-1/png/pngrtran.c ****        */
1453:fltk-1.3.4-1/png/pngrtran.c ****       if ((png_ptr->transformations & PNG_GRAY_TO_RGB) != 0)
1454:fltk-1.3.4-1/png/pngrtran.c ****       {
1455:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->background.red == png_ptr->background.green &&
1456:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->background.red == png_ptr->background.blue)
1457:fltk-1.3.4-1/png/pngrtran.c ****          {
1458:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->mode |= PNG_BACKGROUND_IS_GRAY;
1459:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->background.gray = png_ptr->background.red;
1460:fltk-1.3.4-1/png/pngrtran.c ****          }
1461:fltk-1.3.4-1/png/pngrtran.c ****       }
1462:fltk-1.3.4-1/png/pngrtran.c ****    }
1463:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_EXPAND && READ_BACKGROUND */
1464:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_GRAY_TO_RGB */
1465:fltk-1.3.4-1/png/pngrtran.c **** 
1466:fltk-1.3.4-1/png/pngrtran.c ****    /* For indexed PNG data (PNG_COLOR_TYPE_PALETTE) many of the transformations
1467:fltk-1.3.4-1/png/pngrtran.c ****     * can be performed directly on the palette, and some (such as rgb to gray)
1468:fltk-1.3.4-1/png/pngrtran.c ****     * can be optimized inside the palette.  This is particularly true of the
1469:fltk-1.3.4-1/png/pngrtran.c ****     * composite (background and alpha) stuff, which can be pretty much all done
1470:fltk-1.3.4-1/png/pngrtran.c ****     * in the palette even if the result is expanded to RGB or gray afterward.
1471:fltk-1.3.4-1/png/pngrtran.c ****     *
1472:fltk-1.3.4-1/png/pngrtran.c ****     * NOTE: this is Not Yet Implemented, the code behaves as in 1.5.1 and
1473:fltk-1.3.4-1/png/pngrtran.c ****     * earlier and the palette stuff is actually handled on the first row.  This
1474:fltk-1.3.4-1/png/pngrtran.c ****     * leads to the reported bug that the palette returned by png_get_PLTE is not
1475:fltk-1.3.4-1/png/pngrtran.c ****     * updated.
1476:fltk-1.3.4-1/png/pngrtran.c ****     */
1477:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
1478:fltk-1.3.4-1/png/pngrtran.c ****       png_init_palette_transformations(png_ptr);
1479:fltk-1.3.4-1/png/pngrtran.c **** 
1480:fltk-1.3.4-1/png/pngrtran.c ****    else
1481:fltk-1.3.4-1/png/pngrtran.c ****       png_init_rgb_transformations(png_ptr);
1482:fltk-1.3.4-1/png/pngrtran.c **** 
1483:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) && \
1484:fltk-1.3.4-1/png/pngrtran.c ****    defined(PNG_READ_EXPAND_16_SUPPORTED)
1485:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_EXPAND_16) != 0 &&
1486:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) != 0 &&
1487:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_BACKGROUND_EXPAND) == 0 &&
1488:fltk-1.3.4-1/png/pngrtran.c ****        png_ptr->bit_depth != 16)
1489:fltk-1.3.4-1/png/pngrtran.c ****    {
1490:fltk-1.3.4-1/png/pngrtran.c ****       /* TODO: fix this.  Because the expand_16 operation is after the compose
1491:fltk-1.3.4-1/png/pngrtran.c ****        * handling the background color must be 8, not 16, bits deep, but the
1492:fltk-1.3.4-1/png/pngrtran.c ****        * application will supply a 16-bit value so reduce it here.
1493:fltk-1.3.4-1/png/pngrtran.c ****        *
1494:fltk-1.3.4-1/png/pngrtran.c ****        * The PNG_BACKGROUND_EXPAND code above does not expand to 16 bits at
1495:fltk-1.3.4-1/png/pngrtran.c ****        * present, so that case is ok (until do_expand_16 is moved.)
1496:fltk-1.3.4-1/png/pngrtran.c ****        *
1497:fltk-1.3.4-1/png/pngrtran.c ****        * NOTE: this discards the low 16 bits of the user supplied background
1498:fltk-1.3.4-1/png/pngrtran.c ****        * color, but until expand_16 works properly there is no choice!
1499:fltk-1.3.4-1/png/pngrtran.c ****        */
1500:fltk-1.3.4-1/png/pngrtran.c **** #     define CHOP(x) (x)=((png_uint_16)PNG_DIV257(x))
1501:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.red);
1502:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.green);
1503:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.blue);
1504:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.gray);
1505:fltk-1.3.4-1/png/pngrtran.c **** #     undef CHOP
1506:fltk-1.3.4-1/png/pngrtran.c ****    }
1507:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_BACKGROUND && READ_EXPAND_16 */
1508:fltk-1.3.4-1/png/pngrtran.c **** 
1509:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) && \
1510:fltk-1.3.4-1/png/pngrtran.c ****    (defined(PNG_READ_SCALE_16_TO_8_SUPPORTED) || \
1511:fltk-1.3.4-1/png/pngrtran.c ****    defined(PNG_READ_STRIP_16_TO_8_SUPPORTED))
1512:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & (PNG_16_TO_8|PNG_SCALE_16_TO_8)) != 0 &&
1513:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) != 0 &&
1514:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_BACKGROUND_EXPAND) == 0 &&
1515:fltk-1.3.4-1/png/pngrtran.c ****        png_ptr->bit_depth == 16)
1516:fltk-1.3.4-1/png/pngrtran.c ****    {
1517:fltk-1.3.4-1/png/pngrtran.c ****       /* On the other hand, if a 16-bit file is to be reduced to 8-bits per
1518:fltk-1.3.4-1/png/pngrtran.c ****        * component this will also happen after PNG_COMPOSE and so the background
1519:fltk-1.3.4-1/png/pngrtran.c ****        * color must be pre-expanded here.
1520:fltk-1.3.4-1/png/pngrtran.c ****        *
1521:fltk-1.3.4-1/png/pngrtran.c ****        * TODO: fix this too.
1522:fltk-1.3.4-1/png/pngrtran.c ****        */
1523:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background.red = (png_uint_16)(png_ptr->background.red * 257);
1524:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background.green =
1525:fltk-1.3.4-1/png/pngrtran.c ****          (png_uint_16)(png_ptr->background.green * 257);
1526:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background.blue = (png_uint_16)(png_ptr->background.blue * 257);
1527:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background.gray = (png_uint_16)(png_ptr->background.gray * 257);
1528:fltk-1.3.4-1/png/pngrtran.c ****    }
1529:fltk-1.3.4-1/png/pngrtran.c **** #endif
1530:fltk-1.3.4-1/png/pngrtran.c **** 
1531:fltk-1.3.4-1/png/pngrtran.c ****    /* NOTE: below 'PNG_READ_ALPHA_MODE_SUPPORTED' is presumed to also enable the
1532:fltk-1.3.4-1/png/pngrtran.c ****     * background support (see the comments in scripts/pnglibconf.dfa), this
1533:fltk-1.3.4-1/png/pngrtran.c ****     * allows pre-multiplication of the alpha channel to be implemented as
1534:fltk-1.3.4-1/png/pngrtran.c ****     * compositing on black.  This is probably sub-optimal and has been done in
1535:fltk-1.3.4-1/png/pngrtran.c ****     * 1.5.4 betas simply to enable external critique and testing (i.e. to
1536:fltk-1.3.4-1/png/pngrtran.c ****     * implement the new API quickly, without lots of internal changes.)
1537:fltk-1.3.4-1/png/pngrtran.c ****     */
1538:fltk-1.3.4-1/png/pngrtran.c **** 
1539:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
1540:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_READ_BACKGROUND_SUPPORTED
1541:fltk-1.3.4-1/png/pngrtran.c ****       /* Includes ALPHA_MODE */
1542:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background_1 = png_ptr->background;
1543:fltk-1.3.4-1/png/pngrtran.c **** #  endif
1544:fltk-1.3.4-1/png/pngrtran.c **** 
1545:fltk-1.3.4-1/png/pngrtran.c ****    /* This needs to change - in the palette image case a whole set of tables are
1546:fltk-1.3.4-1/png/pngrtran.c ****     * built when it would be quicker to just calculate the correct value for
1547:fltk-1.3.4-1/png/pngrtran.c ****     * each palette entry directly.  Also, the test is too tricky - why check
1548:fltk-1.3.4-1/png/pngrtran.c ****     * PNG_RGB_TO_GRAY if PNG_GAMMA is not set?  The answer seems to be that
1549:fltk-1.3.4-1/png/pngrtran.c ****     * PNG_GAMMA is cancelled even if the gamma is known?  The test excludes the
1550:fltk-1.3.4-1/png/pngrtran.c ****     * PNG_COMPOSE case, so apparently if there is no *overall* gamma correction
1551:fltk-1.3.4-1/png/pngrtran.c ****     * the gamma tables will not be built even if composition is required on a
1552:fltk-1.3.4-1/png/pngrtran.c ****     * gamma encoded value.
1553:fltk-1.3.4-1/png/pngrtran.c ****     *
1554:fltk-1.3.4-1/png/pngrtran.c ****     * In 1.5.4 this is addressed below by an additional check on the individual
1555:fltk-1.3.4-1/png/pngrtran.c ****     * file gamma - if it is not 1.0 both RGB_TO_GRAY and COMPOSE need the
1556:fltk-1.3.4-1/png/pngrtran.c ****     * tables.
1557:fltk-1.3.4-1/png/pngrtran.c ****     */
1558:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_GAMMA) != 0 ||
1559:fltk-1.3.4-1/png/pngrtran.c ****        ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0 &&
1560:fltk-1.3.4-1/png/pngrtran.c ****         (png_gamma_significant(png_ptr->colorspace.gamma) != 0 ||
1561:fltk-1.3.4-1/png/pngrtran.c ****          png_gamma_significant(png_ptr->screen_gamma) != 0)) ||
1562:fltk-1.3.4-1/png/pngrtran.c ****         ((png_ptr->transformations & PNG_COMPOSE) != 0 &&
1563:fltk-1.3.4-1/png/pngrtran.c ****          (png_gamma_significant(png_ptr->colorspace.gamma) != 0 ||
1564:fltk-1.3.4-1/png/pngrtran.c ****           png_gamma_significant(png_ptr->screen_gamma) != 0
1565:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_READ_BACKGROUND_SUPPORTED
1566:fltk-1.3.4-1/png/pngrtran.c ****          || (png_ptr->background_gamma_type == PNG_BACKGROUND_GAMMA_UNIQUE &&
1567:fltk-1.3.4-1/png/pngrtran.c ****            png_gamma_significant(png_ptr->background_gamma) != 0)
1568:fltk-1.3.4-1/png/pngrtran.c **** #  endif
1569:fltk-1.3.4-1/png/pngrtran.c ****         )) || ((png_ptr->transformations & PNG_ENCODE_ALPHA) != 0 &&
1570:fltk-1.3.4-1/png/pngrtran.c ****        png_gamma_significant(png_ptr->screen_gamma) != 0))
1571:fltk-1.3.4-1/png/pngrtran.c ****    {
1572:fltk-1.3.4-1/png/pngrtran.c ****       png_build_gamma_table(png_ptr, png_ptr->bit_depth);
1573:fltk-1.3.4-1/png/pngrtran.c **** 
1574:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_BACKGROUND_SUPPORTED
1575:fltk-1.3.4-1/png/pngrtran.c ****       if ((png_ptr->transformations & PNG_COMPOSE) != 0)
1576:fltk-1.3.4-1/png/pngrtran.c ****       {
1577:fltk-1.3.4-1/png/pngrtran.c ****          /* Issue a warning about this combination: because RGB_TO_GRAY is
1578:fltk-1.3.4-1/png/pngrtran.c ****           * optimized to do the gamma transform if present yet do_background has
1579:fltk-1.3.4-1/png/pngrtran.c ****           * to do the same thing if both options are set a
1580:fltk-1.3.4-1/png/pngrtran.c ****           * double-gamma-correction happens.  This is true in all versions of
1581:fltk-1.3.4-1/png/pngrtran.c ****           * libpng to date.
1582:fltk-1.3.4-1/png/pngrtran.c ****           */
1583:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0)
1584:fltk-1.3.4-1/png/pngrtran.c ****             png_warning(png_ptr,
1585:fltk-1.3.4-1/png/pngrtran.c ****                "libpng does not support gamma+background+rgb_to_gray");
1586:fltk-1.3.4-1/png/pngrtran.c **** 
1587:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->color_type == PNG_COLOR_TYPE_PALETTE) != 0)
1588:fltk-1.3.4-1/png/pngrtran.c ****          {
1589:fltk-1.3.4-1/png/pngrtran.c ****             /* We don't get to here unless there is a tRNS chunk with non-opaque
1590:fltk-1.3.4-1/png/pngrtran.c ****              * entries - see the checking code at the start of this function.
1591:fltk-1.3.4-1/png/pngrtran.c ****              */
1592:fltk-1.3.4-1/png/pngrtran.c ****             png_color back, back_1;
1593:fltk-1.3.4-1/png/pngrtran.c ****             png_colorp palette = png_ptr->palette;
1594:fltk-1.3.4-1/png/pngrtran.c ****             int num_palette = png_ptr->num_palette;
1595:fltk-1.3.4-1/png/pngrtran.c ****             int i;
1596:fltk-1.3.4-1/png/pngrtran.c ****             if (png_ptr->background_gamma_type == PNG_BACKGROUND_GAMMA_FILE)
1597:fltk-1.3.4-1/png/pngrtran.c ****             {
1598:fltk-1.3.4-1/png/pngrtran.c **** 
1599:fltk-1.3.4-1/png/pngrtran.c ****                back.red = png_ptr->gamma_table[png_ptr->background.red];
1600:fltk-1.3.4-1/png/pngrtran.c ****                back.green = png_ptr->gamma_table[png_ptr->background.green];
1601:fltk-1.3.4-1/png/pngrtran.c ****                back.blue = png_ptr->gamma_table[png_ptr->background.blue];
1602:fltk-1.3.4-1/png/pngrtran.c **** 
1603:fltk-1.3.4-1/png/pngrtran.c ****                back_1.red = png_ptr->gamma_to_1[png_ptr->background.red];
1604:fltk-1.3.4-1/png/pngrtran.c ****                back_1.green = png_ptr->gamma_to_1[png_ptr->background.green];
1605:fltk-1.3.4-1/png/pngrtran.c ****                back_1.blue = png_ptr->gamma_to_1[png_ptr->background.blue];
1606:fltk-1.3.4-1/png/pngrtran.c ****             }
1607:fltk-1.3.4-1/png/pngrtran.c ****             else
1608:fltk-1.3.4-1/png/pngrtran.c ****             {
1609:fltk-1.3.4-1/png/pngrtran.c ****                png_fixed_point g, gs;
1610:fltk-1.3.4-1/png/pngrtran.c **** 
1611:fltk-1.3.4-1/png/pngrtran.c ****                switch (png_ptr->background_gamma_type)
1612:fltk-1.3.4-1/png/pngrtran.c ****                {
1613:fltk-1.3.4-1/png/pngrtran.c ****                   case PNG_BACKGROUND_GAMMA_SCREEN:
1614:fltk-1.3.4-1/png/pngrtran.c ****                      g = (png_ptr->screen_gamma);
1615:fltk-1.3.4-1/png/pngrtran.c ****                      gs = PNG_FP_1;
1616:fltk-1.3.4-1/png/pngrtran.c ****                      break;
1617:fltk-1.3.4-1/png/pngrtran.c **** 
1618:fltk-1.3.4-1/png/pngrtran.c ****                   case PNG_BACKGROUND_GAMMA_FILE:
1619:fltk-1.3.4-1/png/pngrtran.c ****                      g = png_reciprocal(png_ptr->colorspace.gamma);
1620:fltk-1.3.4-1/png/pngrtran.c ****                      gs = png_reciprocal2(png_ptr->colorspace.gamma,
1621:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->screen_gamma);
1622:fltk-1.3.4-1/png/pngrtran.c ****                      break;
1623:fltk-1.3.4-1/png/pngrtran.c **** 
1624:fltk-1.3.4-1/png/pngrtran.c ****                   case PNG_BACKGROUND_GAMMA_UNIQUE:
1625:fltk-1.3.4-1/png/pngrtran.c ****                      g = png_reciprocal(png_ptr->background_gamma);
1626:fltk-1.3.4-1/png/pngrtran.c ****                      gs = png_reciprocal2(png_ptr->background_gamma,
1627:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->screen_gamma);
1628:fltk-1.3.4-1/png/pngrtran.c ****                      break;
1629:fltk-1.3.4-1/png/pngrtran.c ****                   default:
1630:fltk-1.3.4-1/png/pngrtran.c ****                      g = PNG_FP_1;    /* back_1 */
1631:fltk-1.3.4-1/png/pngrtran.c ****                      gs = PNG_FP_1;   /* back */
1632:fltk-1.3.4-1/png/pngrtran.c ****                      break;
1633:fltk-1.3.4-1/png/pngrtran.c ****                }
1634:fltk-1.3.4-1/png/pngrtran.c **** 
1635:fltk-1.3.4-1/png/pngrtran.c ****                if (png_gamma_significant(gs) != 0)
1636:fltk-1.3.4-1/png/pngrtran.c ****                {
1637:fltk-1.3.4-1/png/pngrtran.c ****                   back.red = png_gamma_8bit_correct(png_ptr->background.red,
1638:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
1639:fltk-1.3.4-1/png/pngrtran.c ****                   back.green = png_gamma_8bit_correct(png_ptr->background.green,
1640:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
1641:fltk-1.3.4-1/png/pngrtran.c ****                   back.blue = png_gamma_8bit_correct(png_ptr->background.blue,
1642:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
1643:fltk-1.3.4-1/png/pngrtran.c ****                }
1644:fltk-1.3.4-1/png/pngrtran.c **** 
1645:fltk-1.3.4-1/png/pngrtran.c ****                else
1646:fltk-1.3.4-1/png/pngrtran.c ****                {
1647:fltk-1.3.4-1/png/pngrtran.c ****                   back.red   = (png_byte)png_ptr->background.red;
1648:fltk-1.3.4-1/png/pngrtran.c ****                   back.green = (png_byte)png_ptr->background.green;
1649:fltk-1.3.4-1/png/pngrtran.c ****                   back.blue  = (png_byte)png_ptr->background.blue;
1650:fltk-1.3.4-1/png/pngrtran.c ****                }
1651:fltk-1.3.4-1/png/pngrtran.c **** 
1652:fltk-1.3.4-1/png/pngrtran.c ****                if (png_gamma_significant(g) != 0)
1653:fltk-1.3.4-1/png/pngrtran.c ****                {
1654:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.red = png_gamma_8bit_correct(png_ptr->background.red,
1655:fltk-1.3.4-1/png/pngrtran.c ****                      g);
1656:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.green = png_gamma_8bit_correct(
1657:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->background.green, g);
1658:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.blue = png_gamma_8bit_correct(png_ptr->background.blue,
1659:fltk-1.3.4-1/png/pngrtran.c ****                      g);
1660:fltk-1.3.4-1/png/pngrtran.c ****                }
1661:fltk-1.3.4-1/png/pngrtran.c **** 
1662:fltk-1.3.4-1/png/pngrtran.c ****                else
1663:fltk-1.3.4-1/png/pngrtran.c ****                {
1664:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.red   = (png_byte)png_ptr->background.red;
1665:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.green = (png_byte)png_ptr->background.green;
1666:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.blue  = (png_byte)png_ptr->background.blue;
1667:fltk-1.3.4-1/png/pngrtran.c ****                }
1668:fltk-1.3.4-1/png/pngrtran.c ****             }
1669:fltk-1.3.4-1/png/pngrtran.c **** 
1670:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < num_palette; i++)
1671:fltk-1.3.4-1/png/pngrtran.c ****             {
1672:fltk-1.3.4-1/png/pngrtran.c ****                if (i < (int)png_ptr->num_trans &&
1673:fltk-1.3.4-1/png/pngrtran.c ****                    png_ptr->trans_alpha[i] != 0xff)
1674:fltk-1.3.4-1/png/pngrtran.c ****                {
1675:fltk-1.3.4-1/png/pngrtran.c ****                   if (png_ptr->trans_alpha[i] == 0)
1676:fltk-1.3.4-1/png/pngrtran.c ****                   {
1677:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i] = back;
1678:fltk-1.3.4-1/png/pngrtran.c ****                   }
1679:fltk-1.3.4-1/png/pngrtran.c ****                   else /* if (png_ptr->trans_alpha[i] != 0xff) */
1680:fltk-1.3.4-1/png/pngrtran.c ****                   {
1681:fltk-1.3.4-1/png/pngrtran.c ****                      png_byte v, w;
1682:fltk-1.3.4-1/png/pngrtran.c **** 
1683:fltk-1.3.4-1/png/pngrtran.c ****                      v = png_ptr->gamma_to_1[palette[i].red];
1684:fltk-1.3.4-1/png/pngrtran.c ****                      png_composite(w, v, png_ptr->trans_alpha[i], back_1.red);
1685:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].red = png_ptr->gamma_from_1[w];
1686:fltk-1.3.4-1/png/pngrtran.c **** 
1687:fltk-1.3.4-1/png/pngrtran.c ****                      v = png_ptr->gamma_to_1[palette[i].green];
1688:fltk-1.3.4-1/png/pngrtran.c ****                      png_composite(w, v, png_ptr->trans_alpha[i], back_1.green);
1689:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].green = png_ptr->gamma_from_1[w];
1690:fltk-1.3.4-1/png/pngrtran.c **** 
1691:fltk-1.3.4-1/png/pngrtran.c ****                      v = png_ptr->gamma_to_1[palette[i].blue];
1692:fltk-1.3.4-1/png/pngrtran.c ****                      png_composite(w, v, png_ptr->trans_alpha[i], back_1.blue);
1693:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].blue = png_ptr->gamma_from_1[w];
1694:fltk-1.3.4-1/png/pngrtran.c ****                   }
1695:fltk-1.3.4-1/png/pngrtran.c ****                }
1696:fltk-1.3.4-1/png/pngrtran.c ****                else
1697:fltk-1.3.4-1/png/pngrtran.c ****                {
1698:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i].red = png_ptr->gamma_table[palette[i].red];
1699:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i].green = png_ptr->gamma_table[palette[i].green];
1700:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i].blue = png_ptr->gamma_table[palette[i].blue];
1701:fltk-1.3.4-1/png/pngrtran.c ****                }
1702:fltk-1.3.4-1/png/pngrtran.c ****             }
1703:fltk-1.3.4-1/png/pngrtran.c **** 
1704:fltk-1.3.4-1/png/pngrtran.c ****             /* Prevent the transformations being done again.
1705:fltk-1.3.4-1/png/pngrtran.c ****              *
1706:fltk-1.3.4-1/png/pngrtran.c ****              * NOTE: this is highly dubious; it removes the transformations in
1707:fltk-1.3.4-1/png/pngrtran.c ****              * place.  This seems inconsistent with the general treatment of the
1708:fltk-1.3.4-1/png/pngrtran.c ****              * transformations elsewhere.
1709:fltk-1.3.4-1/png/pngrtran.c ****              */
1710:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->transformations &= ~(PNG_COMPOSE | PNG_GAMMA);
1711:fltk-1.3.4-1/png/pngrtran.c ****          } /* color_type == PNG_COLOR_TYPE_PALETTE */
1712:fltk-1.3.4-1/png/pngrtran.c **** 
1713:fltk-1.3.4-1/png/pngrtran.c ****          /* if (png_ptr->background_gamma_type!=PNG_BACKGROUND_GAMMA_UNKNOWN) */
1714:fltk-1.3.4-1/png/pngrtran.c ****          else /* color_type != PNG_COLOR_TYPE_PALETTE */
1715:fltk-1.3.4-1/png/pngrtran.c ****          {
1716:fltk-1.3.4-1/png/pngrtran.c ****             int gs_sig, g_sig;
1717:fltk-1.3.4-1/png/pngrtran.c ****             png_fixed_point g = PNG_FP_1;  /* Correction to linear */
1718:fltk-1.3.4-1/png/pngrtran.c ****             png_fixed_point gs = PNG_FP_1; /* Correction to screen */
1719:fltk-1.3.4-1/png/pngrtran.c **** 
1720:fltk-1.3.4-1/png/pngrtran.c ****             switch (png_ptr->background_gamma_type)
1721:fltk-1.3.4-1/png/pngrtran.c ****             {
1722:fltk-1.3.4-1/png/pngrtran.c ****                case PNG_BACKGROUND_GAMMA_SCREEN:
1723:fltk-1.3.4-1/png/pngrtran.c ****                   g = png_ptr->screen_gamma;
1724:fltk-1.3.4-1/png/pngrtran.c ****                   /* gs = PNG_FP_1; */
1725:fltk-1.3.4-1/png/pngrtran.c ****                   break;
1726:fltk-1.3.4-1/png/pngrtran.c **** 
1727:fltk-1.3.4-1/png/pngrtran.c ****                case PNG_BACKGROUND_GAMMA_FILE:
1728:fltk-1.3.4-1/png/pngrtran.c ****                   g = png_reciprocal(png_ptr->colorspace.gamma);
1729:fltk-1.3.4-1/png/pngrtran.c ****                   gs = png_reciprocal2(png_ptr->colorspace.gamma,
1730:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->screen_gamma);
1731:fltk-1.3.4-1/png/pngrtran.c ****                   break;
1732:fltk-1.3.4-1/png/pngrtran.c **** 
1733:fltk-1.3.4-1/png/pngrtran.c ****                case PNG_BACKGROUND_GAMMA_UNIQUE:
1734:fltk-1.3.4-1/png/pngrtran.c ****                   g = png_reciprocal(png_ptr->background_gamma);
1735:fltk-1.3.4-1/png/pngrtran.c ****                   gs = png_reciprocal2(png_ptr->background_gamma,
1736:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->screen_gamma);
1737:fltk-1.3.4-1/png/pngrtran.c ****                   break;
1738:fltk-1.3.4-1/png/pngrtran.c **** 
1739:fltk-1.3.4-1/png/pngrtran.c ****                default:
1740:fltk-1.3.4-1/png/pngrtran.c ****                   png_error(png_ptr, "invalid background gamma type");
1741:fltk-1.3.4-1/png/pngrtran.c ****             }
1742:fltk-1.3.4-1/png/pngrtran.c **** 
1743:fltk-1.3.4-1/png/pngrtran.c ****             g_sig = png_gamma_significant(g);
1744:fltk-1.3.4-1/png/pngrtran.c ****             gs_sig = png_gamma_significant(gs);
1745:fltk-1.3.4-1/png/pngrtran.c **** 
1746:fltk-1.3.4-1/png/pngrtran.c ****             if (g_sig != 0)
1747:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->background_1.gray = png_gamma_correct(png_ptr,
1748:fltk-1.3.4-1/png/pngrtran.c ****                    png_ptr->background.gray, g);
1749:fltk-1.3.4-1/png/pngrtran.c **** 
1750:fltk-1.3.4-1/png/pngrtran.c ****             if (gs_sig != 0)
1751:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->background.gray = png_gamma_correct(png_ptr,
1752:fltk-1.3.4-1/png/pngrtran.c ****                    png_ptr->background.gray, gs);
1753:fltk-1.3.4-1/png/pngrtran.c **** 
1754:fltk-1.3.4-1/png/pngrtran.c ****             if ((png_ptr->background.red != png_ptr->background.green) ||
1755:fltk-1.3.4-1/png/pngrtran.c ****                 (png_ptr->background.red != png_ptr->background.blue) ||
1756:fltk-1.3.4-1/png/pngrtran.c ****                 (png_ptr->background.red != png_ptr->background.gray))
1757:fltk-1.3.4-1/png/pngrtran.c ****             {
1758:fltk-1.3.4-1/png/pngrtran.c ****                /* RGB or RGBA with color background */
1759:fltk-1.3.4-1/png/pngrtran.c ****                if (g_sig != 0)
1760:fltk-1.3.4-1/png/pngrtran.c ****                {
1761:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->background_1.red = png_gamma_correct(png_ptr,
1762:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.red, g);
1763:fltk-1.3.4-1/png/pngrtran.c **** 
1764:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->background_1.green = png_gamma_correct(png_ptr,
1765:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, g);
1766:fltk-1.3.4-1/png/pngrtran.c **** 
1767:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->background_1.blue = png_gamma_correct(png_ptr,
1768:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.blue, g);
1769:fltk-1.3.4-1/png/pngrtran.c ****                }
1770:fltk-1.3.4-1/png/pngrtran.c **** 
1771:fltk-1.3.4-1/png/pngrtran.c ****                if (gs_sig != 0)
1772:fltk-1.3.4-1/png/pngrtran.c ****                {
1773:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->background.red = png_gamma_correct(png_ptr,
1774:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.red, gs);
1775:fltk-1.3.4-1/png/pngrtran.c **** 
1776:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->background.green = png_gamma_correct(png_ptr,
1777:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, gs);
1778:fltk-1.3.4-1/png/pngrtran.c **** 
1779:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->background.blue = png_gamma_correct(png_ptr,
1780:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.blue, gs);
1781:fltk-1.3.4-1/png/pngrtran.c ****                }
1782:fltk-1.3.4-1/png/pngrtran.c ****             }
1783:fltk-1.3.4-1/png/pngrtran.c **** 
1784:fltk-1.3.4-1/png/pngrtran.c ****             else
1785:fltk-1.3.4-1/png/pngrtran.c ****             {
1786:fltk-1.3.4-1/png/pngrtran.c ****                /* GRAY, GRAY ALPHA, RGB, or RGBA with gray background */
1787:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->background_1.red = png_ptr->background_1.green
1788:fltk-1.3.4-1/png/pngrtran.c ****                    = png_ptr->background_1.blue = png_ptr->background_1.gray;
1789:fltk-1.3.4-1/png/pngrtran.c **** 
1790:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->background.red = png_ptr->background.green
1791:fltk-1.3.4-1/png/pngrtran.c ****                    = png_ptr->background.blue = png_ptr->background.gray;
1792:fltk-1.3.4-1/png/pngrtran.c ****             }
1793:fltk-1.3.4-1/png/pngrtran.c **** 
1794:fltk-1.3.4-1/png/pngrtran.c ****             /* The background is now in screen gamma: */
1795:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->background_gamma_type = PNG_BACKGROUND_GAMMA_SCREEN;
1796:fltk-1.3.4-1/png/pngrtran.c ****          } /* color_type != PNG_COLOR_TYPE_PALETTE */
1797:fltk-1.3.4-1/png/pngrtran.c ****       }/* png_ptr->transformations & PNG_BACKGROUND */
1798:fltk-1.3.4-1/png/pngrtran.c **** 
1799:fltk-1.3.4-1/png/pngrtran.c ****       else
1800:fltk-1.3.4-1/png/pngrtran.c ****       /* Transformation does not include PNG_BACKGROUND */
1801:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_BACKGROUND */
1802:fltk-1.3.4-1/png/pngrtran.c ****       if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE
1803:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
1804:fltk-1.3.4-1/png/pngrtran.c ****          /* RGB_TO_GRAY needs to have non-gamma-corrected values! */
1805:fltk-1.3.4-1/png/pngrtran.c ****          && ((png_ptr->transformations & PNG_EXPAND) == 0 ||
1806:fltk-1.3.4-1/png/pngrtran.c ****          (png_ptr->transformations & PNG_RGB_TO_GRAY) == 0)
1807:fltk-1.3.4-1/png/pngrtran.c **** #endif
1808:fltk-1.3.4-1/png/pngrtran.c ****          )
1809:fltk-1.3.4-1/png/pngrtran.c ****       {
1810:fltk-1.3.4-1/png/pngrtran.c ****          png_colorp palette = png_ptr->palette;
1811:fltk-1.3.4-1/png/pngrtran.c ****          int num_palette = png_ptr->num_palette;
1812:fltk-1.3.4-1/png/pngrtran.c ****          int i;
1813:fltk-1.3.4-1/png/pngrtran.c **** 
1814:fltk-1.3.4-1/png/pngrtran.c ****          /* NOTE: there are other transformations that should probably be in
1815:fltk-1.3.4-1/png/pngrtran.c ****           * here too.
1816:fltk-1.3.4-1/png/pngrtran.c ****           */
1817:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < num_palette; i++)
1818:fltk-1.3.4-1/png/pngrtran.c ****          {
1819:fltk-1.3.4-1/png/pngrtran.c ****             palette[i].red = png_ptr->gamma_table[palette[i].red];
1820:fltk-1.3.4-1/png/pngrtran.c ****             palette[i].green = png_ptr->gamma_table[palette[i].green];
1821:fltk-1.3.4-1/png/pngrtran.c ****             palette[i].blue = png_ptr->gamma_table[palette[i].blue];
1822:fltk-1.3.4-1/png/pngrtran.c ****          }
1823:fltk-1.3.4-1/png/pngrtran.c **** 
1824:fltk-1.3.4-1/png/pngrtran.c ****          /* Done the gamma correction. */
1825:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~PNG_GAMMA;
1826:fltk-1.3.4-1/png/pngrtran.c ****       } /* color_type == PALETTE && !PNG_BACKGROUND transformation */
1827:fltk-1.3.4-1/png/pngrtran.c ****    }
1828:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_BACKGROUND_SUPPORTED
1829:fltk-1.3.4-1/png/pngrtran.c ****    else
1830:fltk-1.3.4-1/png/pngrtran.c **** #endif
1831:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_GAMMA */
1832:fltk-1.3.4-1/png/pngrtran.c **** 
1833:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_BACKGROUND_SUPPORTED
1834:fltk-1.3.4-1/png/pngrtran.c ****    /* No GAMMA transformation (see the hanging else 4 lines above) */
1835:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_COMPOSE) != 0 &&
1836:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE))
1837:fltk-1.3.4-1/png/pngrtran.c ****    {
1838:fltk-1.3.4-1/png/pngrtran.c ****       int i;
1839:fltk-1.3.4-1/png/pngrtran.c ****       int istop = (int)png_ptr->num_trans;
1840:fltk-1.3.4-1/png/pngrtran.c ****       png_color back;
1841:fltk-1.3.4-1/png/pngrtran.c ****       png_colorp palette = png_ptr->palette;
1842:fltk-1.3.4-1/png/pngrtran.c **** 
1843:fltk-1.3.4-1/png/pngrtran.c ****       back.red   = (png_byte)png_ptr->background.red;
1844:fltk-1.3.4-1/png/pngrtran.c ****       back.green = (png_byte)png_ptr->background.green;
1845:fltk-1.3.4-1/png/pngrtran.c ****       back.blue  = (png_byte)png_ptr->background.blue;
1846:fltk-1.3.4-1/png/pngrtran.c **** 
1847:fltk-1.3.4-1/png/pngrtran.c ****       for (i = 0; i < istop; i++)
1848:fltk-1.3.4-1/png/pngrtran.c ****       {
1849:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->trans_alpha[i] == 0)
1850:fltk-1.3.4-1/png/pngrtran.c ****          {
1851:fltk-1.3.4-1/png/pngrtran.c ****             palette[i] = back;
1852:fltk-1.3.4-1/png/pngrtran.c ****          }
1853:fltk-1.3.4-1/png/pngrtran.c **** 
1854:fltk-1.3.4-1/png/pngrtran.c ****          else if (png_ptr->trans_alpha[i] != 0xff)
1855:fltk-1.3.4-1/png/pngrtran.c ****          {
1856:fltk-1.3.4-1/png/pngrtran.c ****             /* The png_composite() macro is defined in png.h */
1857:fltk-1.3.4-1/png/pngrtran.c ****             png_composite(palette[i].red, palette[i].red,
1858:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.red);
1859:fltk-1.3.4-1/png/pngrtran.c **** 
1860:fltk-1.3.4-1/png/pngrtran.c ****             png_composite(palette[i].green, palette[i].green,
1861:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.green);
1862:fltk-1.3.4-1/png/pngrtran.c **** 
1863:fltk-1.3.4-1/png/pngrtran.c ****             png_composite(palette[i].blue, palette[i].blue,
1864:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.blue);
1865:fltk-1.3.4-1/png/pngrtran.c ****          }
1866:fltk-1.3.4-1/png/pngrtran.c ****       }
1867:fltk-1.3.4-1/png/pngrtran.c **** 
1868:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~PNG_COMPOSE;
1869:fltk-1.3.4-1/png/pngrtran.c ****    }
1870:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_BACKGROUND */
1871:fltk-1.3.4-1/png/pngrtran.c **** 
1872:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SHIFT_SUPPORTED
1873:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_SHIFT) != 0 &&
1874:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_EXPAND) == 0 &&
1875:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE))
1876:fltk-1.3.4-1/png/pngrtran.c ****    {
1877:fltk-1.3.4-1/png/pngrtran.c ****       int i;
1878:fltk-1.3.4-1/png/pngrtran.c ****       int istop = png_ptr->num_palette;
1879:fltk-1.3.4-1/png/pngrtran.c ****       int shift = 8 - png_ptr->sig_bit.red;
1880:fltk-1.3.4-1/png/pngrtran.c **** 
1881:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~PNG_SHIFT;
1882:fltk-1.3.4-1/png/pngrtran.c **** 
1883:fltk-1.3.4-1/png/pngrtran.c ****       /* significant bits can be in the range 1 to 7 for a meaninful result, if
1884:fltk-1.3.4-1/png/pngrtran.c ****        * the number of significant bits is 0 then no shift is done (this is an
1885:fltk-1.3.4-1/png/pngrtran.c ****        * error condition which is silently ignored.)
1886:fltk-1.3.4-1/png/pngrtran.c ****        */
1887:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
1888:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
1889:fltk-1.3.4-1/png/pngrtran.c ****          {
1890:fltk-1.3.4-1/png/pngrtran.c ****             int component = png_ptr->palette[i].red;
1891:fltk-1.3.4-1/png/pngrtran.c **** 
1892:fltk-1.3.4-1/png/pngrtran.c ****             component >>= shift;
1893:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->palette[i].red = (png_byte)component;
1894:fltk-1.3.4-1/png/pngrtran.c ****          }
1895:fltk-1.3.4-1/png/pngrtran.c **** 
1896:fltk-1.3.4-1/png/pngrtran.c ****       shift = 8 - png_ptr->sig_bit.green;
1897:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
1898:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
1899:fltk-1.3.4-1/png/pngrtran.c ****          {
1900:fltk-1.3.4-1/png/pngrtran.c ****             int component = png_ptr->palette[i].green;
1901:fltk-1.3.4-1/png/pngrtran.c **** 
1902:fltk-1.3.4-1/png/pngrtran.c ****             component >>= shift;
1903:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->palette[i].green = (png_byte)component;
1904:fltk-1.3.4-1/png/pngrtran.c ****          }
1905:fltk-1.3.4-1/png/pngrtran.c **** 
1906:fltk-1.3.4-1/png/pngrtran.c ****       shift = 8 - png_ptr->sig_bit.blue;
1907:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
1908:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
1909:fltk-1.3.4-1/png/pngrtran.c ****          {
1910:fltk-1.3.4-1/png/pngrtran.c ****             int component = png_ptr->palette[i].blue;
1911:fltk-1.3.4-1/png/pngrtran.c **** 
1912:fltk-1.3.4-1/png/pngrtran.c ****             component >>= shift;
1913:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->palette[i].blue = (png_byte)component;
1914:fltk-1.3.4-1/png/pngrtran.c ****          }
1915:fltk-1.3.4-1/png/pngrtran.c ****    }
1916:fltk-1.3.4-1/png/pngrtran.c **** #endif  /* READ_SHIFT */
1917:fltk-1.3.4-1/png/pngrtran.c **** }
1918:fltk-1.3.4-1/png/pngrtran.c **** 
1919:fltk-1.3.4-1/png/pngrtran.c **** /* Modify the info structure to reflect the transformations.  The
1920:fltk-1.3.4-1/png/pngrtran.c ****  * info should be updated so a PNG file could be written with it,
1921:fltk-1.3.4-1/png/pngrtran.c ****  * assuming the transformations result in valid PNG data.
1922:fltk-1.3.4-1/png/pngrtran.c ****  */
1923:fltk-1.3.4-1/png/pngrtran.c **** void /* PRIVATE */
1924:fltk-1.3.4-1/png/pngrtran.c **** png_read_transform_info(png_structrp png_ptr, png_inforp info_ptr)
1925:fltk-1.3.4-1/png/pngrtran.c **** {
1926:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_read_transform_info");
1927:fltk-1.3.4-1/png/pngrtran.c **** 
1928:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
1929:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_EXPAND) != 0)
1930:fltk-1.3.4-1/png/pngrtran.c ****    {
1931:fltk-1.3.4-1/png/pngrtran.c ****       if (info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
1932:fltk-1.3.4-1/png/pngrtran.c ****       {
1933:fltk-1.3.4-1/png/pngrtran.c ****          /* This check must match what actually happens in
1934:fltk-1.3.4-1/png/pngrtran.c ****           * png_do_expand_palette; if it ever checks the tRNS chunk to see if
1935:fltk-1.3.4-1/png/pngrtran.c ****           * it is all opaque we must do the same (at present it does not.)
1936:fltk-1.3.4-1/png/pngrtran.c ****           */
1937:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->num_trans > 0)
1938:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->color_type = PNG_COLOR_TYPE_RGB_ALPHA;
1939:fltk-1.3.4-1/png/pngrtran.c **** 
1940:fltk-1.3.4-1/png/pngrtran.c ****          else
1941:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->color_type = PNG_COLOR_TYPE_RGB;
1942:fltk-1.3.4-1/png/pngrtran.c **** 
1943:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->bit_depth = 8;
1944:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->num_trans = 0;
1945:fltk-1.3.4-1/png/pngrtran.c **** 
1946:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->palette == NULL)
1947:fltk-1.3.4-1/png/pngrtran.c ****             png_error (png_ptr, "Palette is NULL in indexed image");
1948:fltk-1.3.4-1/png/pngrtran.c ****       }
1949:fltk-1.3.4-1/png/pngrtran.c ****       else
1950:fltk-1.3.4-1/png/pngrtran.c ****       {
1951:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->num_trans != 0)
1952:fltk-1.3.4-1/png/pngrtran.c ****          {
1953:fltk-1.3.4-1/png/pngrtran.c ****             if ((png_ptr->transformations & PNG_EXPAND_tRNS) != 0)
1954:fltk-1.3.4-1/png/pngrtran.c ****                info_ptr->color_type |= PNG_COLOR_MASK_ALPHA;
1955:fltk-1.3.4-1/png/pngrtran.c ****          }
1956:fltk-1.3.4-1/png/pngrtran.c ****          if (info_ptr->bit_depth < 8)
1957:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->bit_depth = 8;
1958:fltk-1.3.4-1/png/pngrtran.c **** 
1959:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->num_trans = 0;
1960:fltk-1.3.4-1/png/pngrtran.c ****       }
1961:fltk-1.3.4-1/png/pngrtran.c ****    }
1962:fltk-1.3.4-1/png/pngrtran.c **** #endif
1963:fltk-1.3.4-1/png/pngrtran.c **** 
1964:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) ||\
1965:fltk-1.3.4-1/png/pngrtran.c ****    defined(PNG_READ_ALPHA_MODE_SUPPORTED)
1966:fltk-1.3.4-1/png/pngrtran.c ****    /* The following is almost certainly wrong unless the background value is in
1967:fltk-1.3.4-1/png/pngrtran.c ****     * the screen space!
1968:fltk-1.3.4-1/png/pngrtran.c ****     */
1969:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_COMPOSE) != 0)
1970:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->background = png_ptr->background;
1971:fltk-1.3.4-1/png/pngrtran.c **** #endif
1972:fltk-1.3.4-1/png/pngrtran.c **** 
1973:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
1974:fltk-1.3.4-1/png/pngrtran.c ****    /* The following used to be conditional on PNG_GAMMA (prior to 1.5.4),
1975:fltk-1.3.4-1/png/pngrtran.c ****     * however it seems that the code in png_init_read_transformations, which has
1976:fltk-1.3.4-1/png/pngrtran.c ****     * been called before this from png_read_update_info->png_read_start_row
1977:fltk-1.3.4-1/png/pngrtran.c ****     * sometimes does the gamma transform and cancels the flag.
1978:fltk-1.3.4-1/png/pngrtran.c ****     *
1979:fltk-1.3.4-1/png/pngrtran.c ****     * TODO: this looks wrong; the info_ptr should end up with a gamma equal to
1980:fltk-1.3.4-1/png/pngrtran.c ****     * the screen_gamma value.  The following probably results in weirdness if
1981:fltk-1.3.4-1/png/pngrtran.c ****     * the info_ptr is used by the app after the rows have been read.
1982:fltk-1.3.4-1/png/pngrtran.c ****     */
1983:fltk-1.3.4-1/png/pngrtran.c ****    info_ptr->colorspace.gamma = png_ptr->colorspace.gamma;
1984:fltk-1.3.4-1/png/pngrtran.c **** #endif
1985:fltk-1.3.4-1/png/pngrtran.c **** 
1986:fltk-1.3.4-1/png/pngrtran.c ****    if (info_ptr->bit_depth == 16)
1987:fltk-1.3.4-1/png/pngrtran.c ****    {
1988:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_READ_16BIT_SUPPORTED
1989:fltk-1.3.4-1/png/pngrtran.c **** #     ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED
1990:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->transformations & PNG_SCALE_16_TO_8) != 0)
1991:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->bit_depth = 8;
1992:fltk-1.3.4-1/png/pngrtran.c **** #     endif
1993:fltk-1.3.4-1/png/pngrtran.c **** 
1994:fltk-1.3.4-1/png/pngrtran.c **** #     ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
1995:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->transformations & PNG_16_TO_8) != 0)
1996:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->bit_depth = 8;
1997:fltk-1.3.4-1/png/pngrtran.c **** #     endif
1998:fltk-1.3.4-1/png/pngrtran.c **** 
1999:fltk-1.3.4-1/png/pngrtran.c **** #  else
2000:fltk-1.3.4-1/png/pngrtran.c ****       /* No 16 bit support: force chopping 16-bit input down to 8, in this case
2001:fltk-1.3.4-1/png/pngrtran.c ****        * the app program can chose if both APIs are available by setting the
2002:fltk-1.3.4-1/png/pngrtran.c ****        * correct scaling to use.
2003:fltk-1.3.4-1/png/pngrtran.c ****        */
2004:fltk-1.3.4-1/png/pngrtran.c **** #     ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
2005:fltk-1.3.4-1/png/pngrtran.c ****          /* For compatibility with previous versions use the strip method by
2006:fltk-1.3.4-1/png/pngrtran.c ****           * default.  This code works because if PNG_SCALE_16_TO_8 is already
2007:fltk-1.3.4-1/png/pngrtran.c ****           * set the code below will do that in preference to the chop.
2008:fltk-1.3.4-1/png/pngrtran.c ****           */
2009:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations |= PNG_16_TO_8;
2010:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->bit_depth = 8;
2011:fltk-1.3.4-1/png/pngrtran.c **** #     else
2012:fltk-1.3.4-1/png/pngrtran.c **** 
2013:fltk-1.3.4-1/png/pngrtran.c **** #        ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED
2014:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->transformations |= PNG_SCALE_16_TO_8;
2015:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->bit_depth = 8;
2016:fltk-1.3.4-1/png/pngrtran.c **** #        else
2017:fltk-1.3.4-1/png/pngrtran.c **** 
2018:fltk-1.3.4-1/png/pngrtran.c ****             CONFIGURATION ERROR: you must enable at least one 16 to 8 method
2019:fltk-1.3.4-1/png/pngrtran.c **** #        endif
2020:fltk-1.3.4-1/png/pngrtran.c **** #    endif
2021:fltk-1.3.4-1/png/pngrtran.c **** #endif /* !READ_16BIT */
2022:fltk-1.3.4-1/png/pngrtran.c ****    }
2023:fltk-1.3.4-1/png/pngrtran.c **** 
2024:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
2025:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_GRAY_TO_RGB) != 0)
2026:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->color_type = (png_byte)(info_ptr->color_type |
2027:fltk-1.3.4-1/png/pngrtran.c ****          PNG_COLOR_MASK_COLOR);
2028:fltk-1.3.4-1/png/pngrtran.c **** #endif
2029:fltk-1.3.4-1/png/pngrtran.c **** 
2030:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
2031:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0)
2032:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->color_type = (png_byte)(info_ptr->color_type &
2033:fltk-1.3.4-1/png/pngrtran.c ****          ~PNG_COLOR_MASK_COLOR);
2034:fltk-1.3.4-1/png/pngrtran.c **** #endif
2035:fltk-1.3.4-1/png/pngrtran.c **** 
2036:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_QUANTIZE_SUPPORTED
2037:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_QUANTIZE) != 0)
2038:fltk-1.3.4-1/png/pngrtran.c ****    {
2039:fltk-1.3.4-1/png/pngrtran.c ****       if (((info_ptr->color_type == PNG_COLOR_TYPE_RGB) ||
2040:fltk-1.3.4-1/png/pngrtran.c ****           (info_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA)) &&
2041:fltk-1.3.4-1/png/pngrtran.c ****           png_ptr->palette_lookup != 0 && info_ptr->bit_depth == 8)
2042:fltk-1.3.4-1/png/pngrtran.c ****       {
2043:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->color_type = PNG_COLOR_TYPE_PALETTE;
2044:fltk-1.3.4-1/png/pngrtran.c ****       }
2045:fltk-1.3.4-1/png/pngrtran.c ****    }
2046:fltk-1.3.4-1/png/pngrtran.c **** #endif
2047:fltk-1.3.4-1/png/pngrtran.c **** 
2048:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
2049:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_EXPAND_16) != 0 &&
2050:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth == 8 &&
2051:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->color_type != PNG_COLOR_TYPE_PALETTE)
2052:fltk-1.3.4-1/png/pngrtran.c ****    {
2053:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->bit_depth = 16;
2054:fltk-1.3.4-1/png/pngrtran.c ****    }
2055:fltk-1.3.4-1/png/pngrtran.c **** #endif
2056:fltk-1.3.4-1/png/pngrtran.c **** 
2057:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_PACK_SUPPORTED
2058:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_PACK) != 0 &&
2059:fltk-1.3.4-1/png/pngrtran.c ****        (info_ptr->bit_depth < 8))
2060:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->bit_depth = 8;
2061:fltk-1.3.4-1/png/pngrtran.c **** #endif
2062:fltk-1.3.4-1/png/pngrtran.c **** 
2063:fltk-1.3.4-1/png/pngrtran.c ****    if (info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
2064:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels = 1;
2065:fltk-1.3.4-1/png/pngrtran.c **** 
2066:fltk-1.3.4-1/png/pngrtran.c ****    else if ((info_ptr->color_type & PNG_COLOR_MASK_COLOR) != 0)
2067:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels = 3;
2068:fltk-1.3.4-1/png/pngrtran.c **** 
2069:fltk-1.3.4-1/png/pngrtran.c ****    else
2070:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels = 1;
2071:fltk-1.3.4-1/png/pngrtran.c **** 
2072:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
2073:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_STRIP_ALPHA) != 0)
2074:fltk-1.3.4-1/png/pngrtran.c ****    {
2075:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->color_type = (png_byte)(info_ptr->color_type &
2076:fltk-1.3.4-1/png/pngrtran.c ****          ~PNG_COLOR_MASK_ALPHA);
2077:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->num_trans = 0;
2078:fltk-1.3.4-1/png/pngrtran.c ****    }
2079:fltk-1.3.4-1/png/pngrtran.c **** #endif
2080:fltk-1.3.4-1/png/pngrtran.c **** 
2081:fltk-1.3.4-1/png/pngrtran.c ****    if ((info_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0)
2082:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels++;
2083:fltk-1.3.4-1/png/pngrtran.c **** 
2084:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_FILLER_SUPPORTED
2085:fltk-1.3.4-1/png/pngrtran.c ****    /* STRIP_ALPHA and FILLER allowed:  MASK_ALPHA bit stripped above */
2086:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_FILLER) != 0 &&
2087:fltk-1.3.4-1/png/pngrtran.c ****        (info_ptr->color_type == PNG_COLOR_TYPE_RGB ||
2088:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->color_type == PNG_COLOR_TYPE_GRAY))
2089:fltk-1.3.4-1/png/pngrtran.c ****    {
2090:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels++;
2091:fltk-1.3.4-1/png/pngrtran.c ****       /* If adding a true alpha channel not just filler */
2092:fltk-1.3.4-1/png/pngrtran.c ****       if ((png_ptr->transformations & PNG_ADD_ALPHA) != 0)
2093:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->color_type |= PNG_COLOR_MASK_ALPHA;
2094:fltk-1.3.4-1/png/pngrtran.c ****    }
2095:fltk-1.3.4-1/png/pngrtran.c **** #endif
2096:fltk-1.3.4-1/png/pngrtran.c **** 
2097:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_USER_TRANSFORM_PTR_SUPPORTED) && \
2098:fltk-1.3.4-1/png/pngrtran.c **** defined(PNG_READ_USER_TRANSFORM_SUPPORTED)
2099:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_USER_TRANSFORM) != 0)
2100:fltk-1.3.4-1/png/pngrtran.c ****    {
2101:fltk-1.3.4-1/png/pngrtran.c ****       if (info_ptr->bit_depth < png_ptr->user_transform_depth)
2102:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->bit_depth = png_ptr->user_transform_depth;
2103:fltk-1.3.4-1/png/pngrtran.c **** 
2104:fltk-1.3.4-1/png/pngrtran.c ****       if (info_ptr->channels < png_ptr->user_transform_channels)
2105:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->channels = png_ptr->user_transform_channels;
2106:fltk-1.3.4-1/png/pngrtran.c ****    }
2107:fltk-1.3.4-1/png/pngrtran.c **** #endif
2108:fltk-1.3.4-1/png/pngrtran.c **** 
2109:fltk-1.3.4-1/png/pngrtran.c ****    info_ptr->pixel_depth = (png_byte)(info_ptr->channels *
2110:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth);
2111:fltk-1.3.4-1/png/pngrtran.c **** 
2112:fltk-1.3.4-1/png/pngrtran.c ****    info_ptr->rowbytes = PNG_ROWBYTES(info_ptr->pixel_depth, info_ptr->width);
2113:fltk-1.3.4-1/png/pngrtran.c **** 
2114:fltk-1.3.4-1/png/pngrtran.c ****    /* Adding in 1.5.4: cache the above value in png_struct so that we can later
2115:fltk-1.3.4-1/png/pngrtran.c ****     * check in png_rowbytes that the user buffer won't get overwritten.  Note
2116:fltk-1.3.4-1/png/pngrtran.c ****     * that the field is not always set - if png_read_update_info isn't called
2117:fltk-1.3.4-1/png/pngrtran.c ****     * the application has to either not do any transforms or get the calculation
2118:fltk-1.3.4-1/png/pngrtran.c ****     * right itself.
2119:fltk-1.3.4-1/png/pngrtran.c ****     */
2120:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->info_rowbytes = info_ptr->rowbytes;
2121:fltk-1.3.4-1/png/pngrtran.c **** 
2122:fltk-1.3.4-1/png/pngrtran.c **** #ifndef PNG_READ_EXPAND_SUPPORTED
2123:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr != NULL)
2124:fltk-1.3.4-1/png/pngrtran.c ****       return;
2125:fltk-1.3.4-1/png/pngrtran.c **** #endif
2126:fltk-1.3.4-1/png/pngrtran.c **** }
2127:fltk-1.3.4-1/png/pngrtran.c **** 
2128:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_PACK_SUPPORTED
2129:fltk-1.3.4-1/png/pngrtran.c **** /* Unpack pixels of 1, 2, or 4 bits per pixel into 1 byte per pixel,
2130:fltk-1.3.4-1/png/pngrtran.c ****  * without changing the actual values.  Thus, if you had a row with
2131:fltk-1.3.4-1/png/pngrtran.c ****  * a bit depth of 1, you would end up with bytes that only contained
2132:fltk-1.3.4-1/png/pngrtran.c ****  * the numbers 0 or 1.  If you would rather they contain 0 and 255, use
2133:fltk-1.3.4-1/png/pngrtran.c ****  * png_do_shift() after this.
2134:fltk-1.3.4-1/png/pngrtran.c ****  */
2135:fltk-1.3.4-1/png/pngrtran.c **** static void
2136:fltk-1.3.4-1/png/pngrtran.c **** png_do_unpack(png_row_infop row_info, png_bytep row)
2137:fltk-1.3.4-1/png/pngrtran.c **** {
2138:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_unpack");
2139:fltk-1.3.4-1/png/pngrtran.c **** 
2140:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->bit_depth < 8)
2141:fltk-1.3.4-1/png/pngrtran.c ****    {
2142:fltk-1.3.4-1/png/pngrtran.c ****       png_uint_32 i;
2143:fltk-1.3.4-1/png/pngrtran.c ****       png_uint_32 row_width=row_info->width;
2144:fltk-1.3.4-1/png/pngrtran.c **** 
2145:fltk-1.3.4-1/png/pngrtran.c ****       switch (row_info->bit_depth)
2146:fltk-1.3.4-1/png/pngrtran.c ****       {
2147:fltk-1.3.4-1/png/pngrtran.c ****          case 1:
2148:fltk-1.3.4-1/png/pngrtran.c ****          {
2149:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)((row_width - 1) >> 3);
2150:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
2151:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = 7 - (int)((row_width + 7) & 0x07);
2152:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2153:fltk-1.3.4-1/png/pngrtran.c ****             {
2154:fltk-1.3.4-1/png/pngrtran.c ****                *dp = (png_byte)((*sp >> shift) & 0x01);
2155:fltk-1.3.4-1/png/pngrtran.c **** 
2156:fltk-1.3.4-1/png/pngrtran.c ****                if (shift == 7)
2157:fltk-1.3.4-1/png/pngrtran.c ****                {
2158:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 0;
2159:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
2160:fltk-1.3.4-1/png/pngrtran.c ****                }
2161:fltk-1.3.4-1/png/pngrtran.c **** 
2162:fltk-1.3.4-1/png/pngrtran.c ****                else
2163:fltk-1.3.4-1/png/pngrtran.c ****                   shift++;
2164:fltk-1.3.4-1/png/pngrtran.c **** 
2165:fltk-1.3.4-1/png/pngrtran.c ****                dp--;
2166:fltk-1.3.4-1/png/pngrtran.c ****             }
2167:fltk-1.3.4-1/png/pngrtran.c ****             break;
2168:fltk-1.3.4-1/png/pngrtran.c ****          }
2169:fltk-1.3.4-1/png/pngrtran.c **** 
2170:fltk-1.3.4-1/png/pngrtran.c ****          case 2:
2171:fltk-1.3.4-1/png/pngrtran.c ****          {
2172:fltk-1.3.4-1/png/pngrtran.c **** 
2173:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)((row_width - 1) >> 2);
2174:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
2175:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
2176:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2177:fltk-1.3.4-1/png/pngrtran.c ****             {
2178:fltk-1.3.4-1/png/pngrtran.c ****                *dp = (png_byte)((*sp >> shift) & 0x03);
2179:fltk-1.3.4-1/png/pngrtran.c **** 
2180:fltk-1.3.4-1/png/pngrtran.c ****                if (shift == 6)
2181:fltk-1.3.4-1/png/pngrtran.c ****                {
2182:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 0;
2183:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
2184:fltk-1.3.4-1/png/pngrtran.c ****                }
2185:fltk-1.3.4-1/png/pngrtran.c **** 
2186:fltk-1.3.4-1/png/pngrtran.c ****                else
2187:fltk-1.3.4-1/png/pngrtran.c ****                   shift += 2;
2188:fltk-1.3.4-1/png/pngrtran.c **** 
2189:fltk-1.3.4-1/png/pngrtran.c ****                dp--;
2190:fltk-1.3.4-1/png/pngrtran.c ****             }
2191:fltk-1.3.4-1/png/pngrtran.c ****             break;
2192:fltk-1.3.4-1/png/pngrtran.c ****          }
2193:fltk-1.3.4-1/png/pngrtran.c **** 
2194:fltk-1.3.4-1/png/pngrtran.c ****          case 4:
2195:fltk-1.3.4-1/png/pngrtran.c ****          {
2196:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)((row_width - 1) >> 1);
2197:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
2198:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = (int)((1 - ((row_width + 1) & 0x01)) << 2);
2199:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2200:fltk-1.3.4-1/png/pngrtran.c ****             {
2201:fltk-1.3.4-1/png/pngrtran.c ****                *dp = (png_byte)((*sp >> shift) & 0x0f);
2202:fltk-1.3.4-1/png/pngrtran.c **** 
2203:fltk-1.3.4-1/png/pngrtran.c ****                if (shift == 4)
2204:fltk-1.3.4-1/png/pngrtran.c ****                {
2205:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 0;
2206:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
2207:fltk-1.3.4-1/png/pngrtran.c ****                }
2208:fltk-1.3.4-1/png/pngrtran.c **** 
2209:fltk-1.3.4-1/png/pngrtran.c ****                else
2210:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 4;
2211:fltk-1.3.4-1/png/pngrtran.c **** 
2212:fltk-1.3.4-1/png/pngrtran.c ****                dp--;
2213:fltk-1.3.4-1/png/pngrtran.c ****             }
2214:fltk-1.3.4-1/png/pngrtran.c ****             break;
2215:fltk-1.3.4-1/png/pngrtran.c ****          }
2216:fltk-1.3.4-1/png/pngrtran.c **** 
2217:fltk-1.3.4-1/png/pngrtran.c ****          default:
2218:fltk-1.3.4-1/png/pngrtran.c ****             break;
2219:fltk-1.3.4-1/png/pngrtran.c ****       }
2220:fltk-1.3.4-1/png/pngrtran.c ****       row_info->bit_depth = 8;
2221:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(8 * row_info->channels);
2222:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_width * row_info->channels;
2223:fltk-1.3.4-1/png/pngrtran.c ****    }
2224:fltk-1.3.4-1/png/pngrtran.c **** }
2225:fltk-1.3.4-1/png/pngrtran.c **** #endif
2226:fltk-1.3.4-1/png/pngrtran.c **** 
2227:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SHIFT_SUPPORTED
2228:fltk-1.3.4-1/png/pngrtran.c **** /* Reverse the effects of png_do_shift.  This routine merely shifts the
2229:fltk-1.3.4-1/png/pngrtran.c ****  * pixels back to their significant bits values.  Thus, if you have
2230:fltk-1.3.4-1/png/pngrtran.c ****  * a row of bit depth 8, but only 5 are significant, this will shift
2231:fltk-1.3.4-1/png/pngrtran.c ****  * the values back to 0 through 31.
2232:fltk-1.3.4-1/png/pngrtran.c ****  */
2233:fltk-1.3.4-1/png/pngrtran.c **** static void
2234:fltk-1.3.4-1/png/pngrtran.c **** png_do_unshift(png_row_infop row_info, png_bytep row,
2235:fltk-1.3.4-1/png/pngrtran.c ****     png_const_color_8p sig_bits)
2236:fltk-1.3.4-1/png/pngrtran.c **** {
2237:fltk-1.3.4-1/png/pngrtran.c ****    int color_type;
2238:fltk-1.3.4-1/png/pngrtran.c **** 
2239:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_unshift");
2240:fltk-1.3.4-1/png/pngrtran.c **** 
2241:fltk-1.3.4-1/png/pngrtran.c ****    /* The palette case has already been handled in the _init routine. */
2242:fltk-1.3.4-1/png/pngrtran.c ****    color_type = row_info->color_type;
2243:fltk-1.3.4-1/png/pngrtran.c **** 
2244:fltk-1.3.4-1/png/pngrtran.c ****    if (color_type != PNG_COLOR_TYPE_PALETTE)
2245:fltk-1.3.4-1/png/pngrtran.c ****    {
2246:fltk-1.3.4-1/png/pngrtran.c ****       int shift[4];
2247:fltk-1.3.4-1/png/pngrtran.c ****       int channels = 0;
2248:fltk-1.3.4-1/png/pngrtran.c ****       int bit_depth = row_info->bit_depth;
2249:fltk-1.3.4-1/png/pngrtran.c **** 
2250:fltk-1.3.4-1/png/pngrtran.c ****       if ((color_type & PNG_COLOR_MASK_COLOR) != 0)
2251:fltk-1.3.4-1/png/pngrtran.c ****       {
2252:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->red;
2253:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->green;
2254:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->blue;
2255:fltk-1.3.4-1/png/pngrtran.c ****       }
2256:fltk-1.3.4-1/png/pngrtran.c **** 
2257:fltk-1.3.4-1/png/pngrtran.c ****       else
2258:fltk-1.3.4-1/png/pngrtran.c ****       {
2259:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->gray;
2260:fltk-1.3.4-1/png/pngrtran.c ****       }
2261:fltk-1.3.4-1/png/pngrtran.c **** 
2262:fltk-1.3.4-1/png/pngrtran.c ****       if ((color_type & PNG_COLOR_MASK_ALPHA) != 0)
2263:fltk-1.3.4-1/png/pngrtran.c ****       {
2264:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->alpha;
2265:fltk-1.3.4-1/png/pngrtran.c ****       }
2266:fltk-1.3.4-1/png/pngrtran.c **** 
2267:fltk-1.3.4-1/png/pngrtran.c ****       {
2268:fltk-1.3.4-1/png/pngrtran.c ****          int c, have_shift;
2269:fltk-1.3.4-1/png/pngrtran.c **** 
2270:fltk-1.3.4-1/png/pngrtran.c ****          for (c = have_shift = 0; c < channels; ++c)
2271:fltk-1.3.4-1/png/pngrtran.c ****          {
2272:fltk-1.3.4-1/png/pngrtran.c ****             /* A shift of more than the bit depth is an error condition but it
2273:fltk-1.3.4-1/png/pngrtran.c ****              * gets ignored here.
2274:fltk-1.3.4-1/png/pngrtran.c ****              */
2275:fltk-1.3.4-1/png/pngrtran.c ****             if (shift[c] <= 0 || shift[c] >= bit_depth)
2276:fltk-1.3.4-1/png/pngrtran.c ****                shift[c] = 0;
2277:fltk-1.3.4-1/png/pngrtran.c **** 
2278:fltk-1.3.4-1/png/pngrtran.c ****             else
2279:fltk-1.3.4-1/png/pngrtran.c ****                have_shift = 1;
2280:fltk-1.3.4-1/png/pngrtran.c ****          }
2281:fltk-1.3.4-1/png/pngrtran.c **** 
2282:fltk-1.3.4-1/png/pngrtran.c ****          if (have_shift == 0)
2283:fltk-1.3.4-1/png/pngrtran.c ****             return;
2284:fltk-1.3.4-1/png/pngrtran.c ****       }
2285:fltk-1.3.4-1/png/pngrtran.c **** 
2286:fltk-1.3.4-1/png/pngrtran.c ****       switch (bit_depth)
2287:fltk-1.3.4-1/png/pngrtran.c ****       {
2288:fltk-1.3.4-1/png/pngrtran.c ****          default:
2289:fltk-1.3.4-1/png/pngrtran.c ****          /* Must be 1bpp gray: should not be here! */
2290:fltk-1.3.4-1/png/pngrtran.c ****             /* NOTREACHED */
2291:fltk-1.3.4-1/png/pngrtran.c ****             break;
2292:fltk-1.3.4-1/png/pngrtran.c **** 
2293:fltk-1.3.4-1/png/pngrtran.c ****          case 2:
2294:fltk-1.3.4-1/png/pngrtran.c ****          /* Must be 2bpp gray */
2295:fltk-1.3.4-1/png/pngrtran.c ****          /* assert(channels == 1 && shift[0] == 1) */
2296:fltk-1.3.4-1/png/pngrtran.c ****          {
2297:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp = row;
2298:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp_end = bp + row_info->rowbytes;
2299:fltk-1.3.4-1/png/pngrtran.c **** 
2300:fltk-1.3.4-1/png/pngrtran.c ****             while (bp < bp_end)
2301:fltk-1.3.4-1/png/pngrtran.c ****             {
2302:fltk-1.3.4-1/png/pngrtran.c ****                int b = (*bp >> 1) & 0x55;
2303:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)b;
2304:fltk-1.3.4-1/png/pngrtran.c ****             }
2305:fltk-1.3.4-1/png/pngrtran.c ****             break;
2306:fltk-1.3.4-1/png/pngrtran.c ****          }
2307:fltk-1.3.4-1/png/pngrtran.c **** 
2308:fltk-1.3.4-1/png/pngrtran.c ****          case 4:
2309:fltk-1.3.4-1/png/pngrtran.c ****          /* Must be 4bpp gray */
2310:fltk-1.3.4-1/png/pngrtran.c ****          /* assert(channels == 1) */
2311:fltk-1.3.4-1/png/pngrtran.c ****          {
2312:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp = row;
2313:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp_end = bp + row_info->rowbytes;
2314:fltk-1.3.4-1/png/pngrtran.c ****             int gray_shift = shift[0];
2315:fltk-1.3.4-1/png/pngrtran.c ****             int mask =  0xf >> gray_shift;
2316:fltk-1.3.4-1/png/pngrtran.c **** 
2317:fltk-1.3.4-1/png/pngrtran.c ****             mask |= mask << 4;
2318:fltk-1.3.4-1/png/pngrtran.c **** 
2319:fltk-1.3.4-1/png/pngrtran.c ****             while (bp < bp_end)
2320:fltk-1.3.4-1/png/pngrtran.c ****             {
2321:fltk-1.3.4-1/png/pngrtran.c ****                int b = (*bp >> gray_shift) & mask;
2322:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)b;
2323:fltk-1.3.4-1/png/pngrtran.c ****             }
2324:fltk-1.3.4-1/png/pngrtran.c ****             break;
2325:fltk-1.3.4-1/png/pngrtran.c ****          }
2326:fltk-1.3.4-1/png/pngrtran.c **** 
2327:fltk-1.3.4-1/png/pngrtran.c ****          case 8:
2328:fltk-1.3.4-1/png/pngrtran.c ****          /* Single byte components, G, GA, RGB, RGBA */
2329:fltk-1.3.4-1/png/pngrtran.c ****          {
2330:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp = row;
2331:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp_end = bp + row_info->rowbytes;
2332:fltk-1.3.4-1/png/pngrtran.c ****             int channel = 0;
2333:fltk-1.3.4-1/png/pngrtran.c **** 
2334:fltk-1.3.4-1/png/pngrtran.c ****             while (bp < bp_end)
2335:fltk-1.3.4-1/png/pngrtran.c ****             {
2336:fltk-1.3.4-1/png/pngrtran.c ****                int b = *bp >> shift[channel];
2337:fltk-1.3.4-1/png/pngrtran.c ****                if (++channel >= channels)
2338:fltk-1.3.4-1/png/pngrtran.c ****                   channel = 0;
2339:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)b;
2340:fltk-1.3.4-1/png/pngrtran.c ****             }
2341:fltk-1.3.4-1/png/pngrtran.c ****             break;
2342:fltk-1.3.4-1/png/pngrtran.c ****          }
2343:fltk-1.3.4-1/png/pngrtran.c **** 
2344:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2345:fltk-1.3.4-1/png/pngrtran.c ****          case 16:
2346:fltk-1.3.4-1/png/pngrtran.c ****          /* Double byte components, G, GA, RGB, RGBA */
2347:fltk-1.3.4-1/png/pngrtran.c ****          {
2348:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp = row;
2349:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep bp_end = bp + row_info->rowbytes;
2350:fltk-1.3.4-1/png/pngrtran.c ****             int channel = 0;
2351:fltk-1.3.4-1/png/pngrtran.c **** 
2352:fltk-1.3.4-1/png/pngrtran.c ****             while (bp < bp_end)
2353:fltk-1.3.4-1/png/pngrtran.c ****             {
2354:fltk-1.3.4-1/png/pngrtran.c ****                int value = (bp[0] << 8) + bp[1];
2355:fltk-1.3.4-1/png/pngrtran.c **** 
2356:fltk-1.3.4-1/png/pngrtran.c ****                value >>= shift[channel];
2357:fltk-1.3.4-1/png/pngrtran.c ****                if (++channel >= channels)
2358:fltk-1.3.4-1/png/pngrtran.c ****                   channel = 0;
2359:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)(value >> 8);
2360:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)(value & 0xff);
2361:fltk-1.3.4-1/png/pngrtran.c ****             }
2362:fltk-1.3.4-1/png/pngrtran.c ****             break;
2363:fltk-1.3.4-1/png/pngrtran.c ****          }
2364:fltk-1.3.4-1/png/pngrtran.c **** #endif
2365:fltk-1.3.4-1/png/pngrtran.c ****       }
2366:fltk-1.3.4-1/png/pngrtran.c ****    }
2367:fltk-1.3.4-1/png/pngrtran.c **** }
2368:fltk-1.3.4-1/png/pngrtran.c **** #endif
2369:fltk-1.3.4-1/png/pngrtran.c **** 
2370:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED
2371:fltk-1.3.4-1/png/pngrtran.c **** /* Scale rows of bit depth 16 down to 8 accurately */
2372:fltk-1.3.4-1/png/pngrtran.c **** static void
2373:fltk-1.3.4-1/png/pngrtran.c **** png_do_scale_16_to_8(png_row_infop row_info, png_bytep row)
2374:fltk-1.3.4-1/png/pngrtran.c **** {
2375:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_scale_16_to_8");
2376:fltk-1.3.4-1/png/pngrtran.c **** 
2377:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->bit_depth == 16)
2378:fltk-1.3.4-1/png/pngrtran.c ****    {
2379:fltk-1.3.4-1/png/pngrtran.c ****       png_bytep sp = row; /* source */
2380:fltk-1.3.4-1/png/pngrtran.c ****       png_bytep dp = row; /* destination */
2381:fltk-1.3.4-1/png/pngrtran.c ****       png_bytep ep = sp + row_info->rowbytes; /* end+1 */
2382:fltk-1.3.4-1/png/pngrtran.c **** 
2383:fltk-1.3.4-1/png/pngrtran.c ****       while (sp < ep)
2384:fltk-1.3.4-1/png/pngrtran.c ****       {
2385:fltk-1.3.4-1/png/pngrtran.c ****          /* The input is an array of 16 bit components, these must be scaled to
2386:fltk-1.3.4-1/png/pngrtran.c ****           * 8 bits each.  For a 16 bit value V the required value (from the PNG
2387:fltk-1.3.4-1/png/pngrtran.c ****           * specification) is:
2388:fltk-1.3.4-1/png/pngrtran.c ****           *
2389:fltk-1.3.4-1/png/pngrtran.c ****           *    (V * 255) / 65535
2390:fltk-1.3.4-1/png/pngrtran.c ****           *
2391:fltk-1.3.4-1/png/pngrtran.c ****           * This reduces to round(V / 257), or floor((V + 128.5)/257)
2392:fltk-1.3.4-1/png/pngrtran.c ****           *
2393:fltk-1.3.4-1/png/pngrtran.c ****           * Represent V as the two byte value vhi.vlo.  Make a guess that the
2394:fltk-1.3.4-1/png/pngrtran.c ****           * result is the top byte of V, vhi, then the correction to this value
2395:fltk-1.3.4-1/png/pngrtran.c ****           * is:
2396:fltk-1.3.4-1/png/pngrtran.c ****           *
2397:fltk-1.3.4-1/png/pngrtran.c ****           *    error = floor(((V-vhi.vhi) + 128.5) / 257)
2398:fltk-1.3.4-1/png/pngrtran.c ****           *          = floor(((vlo-vhi) + 128.5) / 257)
2399:fltk-1.3.4-1/png/pngrtran.c ****           *
2400:fltk-1.3.4-1/png/pngrtran.c ****           * This can be approximated using integer arithmetic (and a signed
2401:fltk-1.3.4-1/png/pngrtran.c ****           * shift):
2402:fltk-1.3.4-1/png/pngrtran.c ****           *
2403:fltk-1.3.4-1/png/pngrtran.c ****           *    error = (vlo-vhi+128) >> 8;
2404:fltk-1.3.4-1/png/pngrtran.c ****           *
2405:fltk-1.3.4-1/png/pngrtran.c ****           * The approximate differs from the exact answer only when (vlo-vhi) is
2406:fltk-1.3.4-1/png/pngrtran.c ****           * 128; it then gives a correction of +1 when the exact correction is
2407:fltk-1.3.4-1/png/pngrtran.c ****           * 0.  This gives 128 errors.  The exact answer (correct for all 16 bit
2408:fltk-1.3.4-1/png/pngrtran.c ****           * input values) is:
2409:fltk-1.3.4-1/png/pngrtran.c ****           *
2410:fltk-1.3.4-1/png/pngrtran.c ****           *    error = (vlo-vhi+128)*65535 >> 24;
2411:fltk-1.3.4-1/png/pngrtran.c ****           *
2412:fltk-1.3.4-1/png/pngrtran.c ****           * An alternative arithmetic calculation which also gives no errors is:
2413:fltk-1.3.4-1/png/pngrtran.c ****           *
2414:fltk-1.3.4-1/png/pngrtran.c ****           *    (V * 255 + 32895) >> 16
2415:fltk-1.3.4-1/png/pngrtran.c ****           */
2416:fltk-1.3.4-1/png/pngrtran.c **** 
2417:fltk-1.3.4-1/png/pngrtran.c ****          png_int_32 tmp = *sp++; /* must be signed! */
2418:fltk-1.3.4-1/png/pngrtran.c ****          tmp += (((int)*sp++ - tmp + 128) * 65535) >> 24;
2419:fltk-1.3.4-1/png/pngrtran.c ****          *dp++ = (png_byte)tmp;
2420:fltk-1.3.4-1/png/pngrtran.c ****       }
2421:fltk-1.3.4-1/png/pngrtran.c **** 
2422:fltk-1.3.4-1/png/pngrtran.c ****       row_info->bit_depth = 8;
2423:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(8 * row_info->channels);
2424:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
2425:fltk-1.3.4-1/png/pngrtran.c ****    }
2426:fltk-1.3.4-1/png/pngrtran.c **** }
2427:fltk-1.3.4-1/png/pngrtran.c **** #endif
2428:fltk-1.3.4-1/png/pngrtran.c **** 
2429:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
2430:fltk-1.3.4-1/png/pngrtran.c **** static void
2431:fltk-1.3.4-1/png/pngrtran.c **** /* Simply discard the low byte.  This was the default behavior prior
2432:fltk-1.3.4-1/png/pngrtran.c ****  * to libpng-1.5.4.
2433:fltk-1.3.4-1/png/pngrtran.c ****  */
2434:fltk-1.3.4-1/png/pngrtran.c **** png_do_chop(png_row_infop row_info, png_bytep row)
2435:fltk-1.3.4-1/png/pngrtran.c **** {
2436:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_chop");
2437:fltk-1.3.4-1/png/pngrtran.c **** 
2438:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->bit_depth == 16)
2439:fltk-1.3.4-1/png/pngrtran.c ****    {
2440:fltk-1.3.4-1/png/pngrtran.c ****       png_bytep sp = row; /* source */
2441:fltk-1.3.4-1/png/pngrtran.c ****       png_bytep dp = row; /* destination */
2442:fltk-1.3.4-1/png/pngrtran.c ****       png_bytep ep = sp + row_info->rowbytes; /* end+1 */
2443:fltk-1.3.4-1/png/pngrtran.c **** 
2444:fltk-1.3.4-1/png/pngrtran.c ****       while (sp < ep)
2445:fltk-1.3.4-1/png/pngrtran.c ****       {
2446:fltk-1.3.4-1/png/pngrtran.c ****          *dp++ = *sp;
2447:fltk-1.3.4-1/png/pngrtran.c ****          sp += 2; /* skip low byte */
2448:fltk-1.3.4-1/png/pngrtran.c ****       }
2449:fltk-1.3.4-1/png/pngrtran.c **** 
2450:fltk-1.3.4-1/png/pngrtran.c ****       row_info->bit_depth = 8;
2451:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(8 * row_info->channels);
2452:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
2453:fltk-1.3.4-1/png/pngrtran.c ****    }
2454:fltk-1.3.4-1/png/pngrtran.c **** }
2455:fltk-1.3.4-1/png/pngrtran.c **** #endif
2456:fltk-1.3.4-1/png/pngrtran.c **** 
2457:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SWAP_ALPHA_SUPPORTED
2458:fltk-1.3.4-1/png/pngrtran.c **** static void
2459:fltk-1.3.4-1/png/pngrtran.c **** png_do_read_swap_alpha(png_row_infop row_info, png_bytep row)
2460:fltk-1.3.4-1/png/pngrtran.c **** {
2461:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_read_swap_alpha");
2462:fltk-1.3.4-1/png/pngrtran.c **** 
2463:fltk-1.3.4-1/png/pngrtran.c ****    {
2464:fltk-1.3.4-1/png/pngrtran.c ****       png_uint_32 row_width = row_info->width;
2465:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
2466:fltk-1.3.4-1/png/pngrtran.c ****       {
2467:fltk-1.3.4-1/png/pngrtran.c ****          /* This converts from RGBA to ARGB */
2468:fltk-1.3.4-1/png/pngrtran.c ****          if (row_info->bit_depth == 8)
2469:fltk-1.3.4-1/png/pngrtran.c ****          {
2470:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + row_info->rowbytes;
2471:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
2472:fltk-1.3.4-1/png/pngrtran.c ****             png_byte save;
2473:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
2474:fltk-1.3.4-1/png/pngrtran.c **** 
2475:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2476:fltk-1.3.4-1/png/pngrtran.c ****             {
2477:fltk-1.3.4-1/png/pngrtran.c ****                save = *(--sp);
2478:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2479:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2480:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2481:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save;
2482:fltk-1.3.4-1/png/pngrtran.c ****             }
2483:fltk-1.3.4-1/png/pngrtran.c ****          }
2484:fltk-1.3.4-1/png/pngrtran.c **** 
2485:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2486:fltk-1.3.4-1/png/pngrtran.c ****          /* This converts from RRGGBBAA to AARRGGBB */
2487:fltk-1.3.4-1/png/pngrtran.c ****          else
2488:fltk-1.3.4-1/png/pngrtran.c ****          {
2489:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + row_info->rowbytes;
2490:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
2491:fltk-1.3.4-1/png/pngrtran.c ****             png_byte save[2];
2492:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
2493:fltk-1.3.4-1/png/pngrtran.c **** 
2494:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2495:fltk-1.3.4-1/png/pngrtran.c ****             {
2496:fltk-1.3.4-1/png/pngrtran.c ****                save[0] = *(--sp);
2497:fltk-1.3.4-1/png/pngrtran.c ****                save[1] = *(--sp);
2498:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2499:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2500:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2501:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2502:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2503:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2504:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[0];
2505:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[1];
2506:fltk-1.3.4-1/png/pngrtran.c ****             }
2507:fltk-1.3.4-1/png/pngrtran.c ****          }
2508:fltk-1.3.4-1/png/pngrtran.c **** #endif
2509:fltk-1.3.4-1/png/pngrtran.c ****       }
2510:fltk-1.3.4-1/png/pngrtran.c **** 
2511:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
2512:fltk-1.3.4-1/png/pngrtran.c ****       {
2513:fltk-1.3.4-1/png/pngrtran.c ****          /* This converts from GA to AG */
2514:fltk-1.3.4-1/png/pngrtran.c ****          if (row_info->bit_depth == 8)
2515:fltk-1.3.4-1/png/pngrtran.c ****          {
2516:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + row_info->rowbytes;
2517:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
2518:fltk-1.3.4-1/png/pngrtran.c ****             png_byte save;
2519:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
2520:fltk-1.3.4-1/png/pngrtran.c **** 
2521:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2522:fltk-1.3.4-1/png/pngrtran.c ****             {
2523:fltk-1.3.4-1/png/pngrtran.c ****                save = *(--sp);
2524:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2525:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save;
2526:fltk-1.3.4-1/png/pngrtran.c ****             }
2527:fltk-1.3.4-1/png/pngrtran.c ****          }
2528:fltk-1.3.4-1/png/pngrtran.c **** 
2529:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2530:fltk-1.3.4-1/png/pngrtran.c ****          /* This converts from GGAA to AAGG */
2531:fltk-1.3.4-1/png/pngrtran.c ****          else
2532:fltk-1.3.4-1/png/pngrtran.c ****          {
2533:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + row_info->rowbytes;
2534:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
2535:fltk-1.3.4-1/png/pngrtran.c ****             png_byte save[2];
2536:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
2537:fltk-1.3.4-1/png/pngrtran.c **** 
2538:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2539:fltk-1.3.4-1/png/pngrtran.c ****             {
2540:fltk-1.3.4-1/png/pngrtran.c ****                save[0] = *(--sp);
2541:fltk-1.3.4-1/png/pngrtran.c ****                save[1] = *(--sp);
2542:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2543:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2544:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[0];
2545:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[1];
2546:fltk-1.3.4-1/png/pngrtran.c ****             }
2547:fltk-1.3.4-1/png/pngrtran.c ****          }
2548:fltk-1.3.4-1/png/pngrtran.c **** #endif
2549:fltk-1.3.4-1/png/pngrtran.c ****       }
2550:fltk-1.3.4-1/png/pngrtran.c ****    }
2551:fltk-1.3.4-1/png/pngrtran.c **** }
2552:fltk-1.3.4-1/png/pngrtran.c **** #endif
2553:fltk-1.3.4-1/png/pngrtran.c **** 
2554:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_INVERT_ALPHA_SUPPORTED
2555:fltk-1.3.4-1/png/pngrtran.c **** static void
2556:fltk-1.3.4-1/png/pngrtran.c **** png_do_read_invert_alpha(png_row_infop row_info, png_bytep row)
2557:fltk-1.3.4-1/png/pngrtran.c **** {
2558:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width;
2559:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_read_invert_alpha");
2560:fltk-1.3.4-1/png/pngrtran.c **** 
2561:fltk-1.3.4-1/png/pngrtran.c ****    row_width = row_info->width;
2562:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
2563:fltk-1.3.4-1/png/pngrtran.c ****    {
2564:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth == 8)
2565:fltk-1.3.4-1/png/pngrtran.c ****       {
2566:fltk-1.3.4-1/png/pngrtran.c ****          /* This inverts the alpha channel in RGBA */
2567:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep sp = row + row_info->rowbytes;
2568:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
2569:fltk-1.3.4-1/png/pngrtran.c ****          png_uint_32 i;
2570:fltk-1.3.4-1/png/pngrtran.c **** 
2571:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < row_width; i++)
2572:fltk-1.3.4-1/png/pngrtran.c ****          {
2573:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
2574:fltk-1.3.4-1/png/pngrtran.c **** 
2575:fltk-1.3.4-1/png/pngrtran.c **** /*          This does nothing:
2576:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2577:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2578:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2579:fltk-1.3.4-1/png/pngrtran.c ****             We can replace it with:
2580:fltk-1.3.4-1/png/pngrtran.c **** */
2581:fltk-1.3.4-1/png/pngrtran.c ****             sp-=3;
2582:fltk-1.3.4-1/png/pngrtran.c ****             dp=sp;
2583:fltk-1.3.4-1/png/pngrtran.c ****          }
2584:fltk-1.3.4-1/png/pngrtran.c ****       }
2585:fltk-1.3.4-1/png/pngrtran.c **** 
2586:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2587:fltk-1.3.4-1/png/pngrtran.c ****       /* This inverts the alpha channel in RRGGBBAA */
2588:fltk-1.3.4-1/png/pngrtran.c ****       else
2589:fltk-1.3.4-1/png/pngrtran.c ****       {
2590:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep sp = row + row_info->rowbytes;
2591:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
2592:fltk-1.3.4-1/png/pngrtran.c ****          png_uint_32 i;
2593:fltk-1.3.4-1/png/pngrtran.c **** 
2594:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < row_width; i++)
2595:fltk-1.3.4-1/png/pngrtran.c ****          {
2596:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
2597:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
2598:fltk-1.3.4-1/png/pngrtran.c **** 
2599:fltk-1.3.4-1/png/pngrtran.c **** /*          This does nothing:
2600:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2601:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2602:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2603:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2604:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2605:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2606:fltk-1.3.4-1/png/pngrtran.c ****             We can replace it with:
2607:fltk-1.3.4-1/png/pngrtran.c **** */
2608:fltk-1.3.4-1/png/pngrtran.c ****             sp-=6;
2609:fltk-1.3.4-1/png/pngrtran.c ****             dp=sp;
2610:fltk-1.3.4-1/png/pngrtran.c ****          }
2611:fltk-1.3.4-1/png/pngrtran.c ****       }
2612:fltk-1.3.4-1/png/pngrtran.c **** #endif
2613:fltk-1.3.4-1/png/pngrtran.c ****    }
2614:fltk-1.3.4-1/png/pngrtran.c ****    else if (row_info->color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
2615:fltk-1.3.4-1/png/pngrtran.c ****    {
2616:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth == 8)
2617:fltk-1.3.4-1/png/pngrtran.c ****       {
2618:fltk-1.3.4-1/png/pngrtran.c ****          /* This inverts the alpha channel in GA */
2619:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep sp = row + row_info->rowbytes;
2620:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
2621:fltk-1.3.4-1/png/pngrtran.c ****          png_uint_32 i;
2622:fltk-1.3.4-1/png/pngrtran.c **** 
2623:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < row_width; i++)
2624:fltk-1.3.4-1/png/pngrtran.c ****          {
2625:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
2626:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2627:fltk-1.3.4-1/png/pngrtran.c ****          }
2628:fltk-1.3.4-1/png/pngrtran.c ****       }
2629:fltk-1.3.4-1/png/pngrtran.c **** 
2630:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2631:fltk-1.3.4-1/png/pngrtran.c ****       else
2632:fltk-1.3.4-1/png/pngrtran.c ****       {
2633:fltk-1.3.4-1/png/pngrtran.c ****          /* This inverts the alpha channel in GGAA */
2634:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep sp  = row + row_info->rowbytes;
2635:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
2636:fltk-1.3.4-1/png/pngrtran.c ****          png_uint_32 i;
2637:fltk-1.3.4-1/png/pngrtran.c **** 
2638:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < row_width; i++)
2639:fltk-1.3.4-1/png/pngrtran.c ****          {
2640:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
2641:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
2642:fltk-1.3.4-1/png/pngrtran.c **** /*
2643:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2644:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
2645:fltk-1.3.4-1/png/pngrtran.c **** */
2646:fltk-1.3.4-1/png/pngrtran.c ****             sp-=2;
2647:fltk-1.3.4-1/png/pngrtran.c ****             dp=sp;
2648:fltk-1.3.4-1/png/pngrtran.c ****          }
2649:fltk-1.3.4-1/png/pngrtran.c ****       }
2650:fltk-1.3.4-1/png/pngrtran.c **** #endif
2651:fltk-1.3.4-1/png/pngrtran.c ****    }
2652:fltk-1.3.4-1/png/pngrtran.c **** }
2653:fltk-1.3.4-1/png/pngrtran.c **** #endif
2654:fltk-1.3.4-1/png/pngrtran.c **** 
2655:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_FILLER_SUPPORTED
2656:fltk-1.3.4-1/png/pngrtran.c **** /* Add filler channel if we have RGB color */
2657:fltk-1.3.4-1/png/pngrtran.c **** static void
2658:fltk-1.3.4-1/png/pngrtran.c **** png_do_read_filler(png_row_infop row_info, png_bytep row,
2659:fltk-1.3.4-1/png/pngrtran.c ****     png_uint_32 filler, png_uint_32 flags)
2660:fltk-1.3.4-1/png/pngrtran.c **** {
2661:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 i;
2662:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width = row_info->width;
2663:fltk-1.3.4-1/png/pngrtran.c **** 
2664:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2665:fltk-1.3.4-1/png/pngrtran.c ****    png_byte hi_filler = (png_byte)((filler>>8) & 0xff);
2666:fltk-1.3.4-1/png/pngrtran.c **** #endif
2667:fltk-1.3.4-1/png/pngrtran.c ****    png_byte lo_filler = (png_byte)(filler & 0xff);
2668:fltk-1.3.4-1/png/pngrtran.c **** 
2669:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_read_filler");
2670:fltk-1.3.4-1/png/pngrtran.c **** 
2671:fltk-1.3.4-1/png/pngrtran.c ****    if (
2672:fltk-1.3.4-1/png/pngrtran.c ****        row_info->color_type == PNG_COLOR_TYPE_GRAY)
2673:fltk-1.3.4-1/png/pngrtran.c ****    {
2674:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth == 8)
2675:fltk-1.3.4-1/png/pngrtran.c ****       {
2676:fltk-1.3.4-1/png/pngrtran.c ****          if ((flags & PNG_FLAG_FILLER_AFTER) != 0)
2677:fltk-1.3.4-1/png/pngrtran.c ****          {
2678:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from G to GX */
2679:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width;
2680:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp =  sp + (png_size_t)row_width;
2681:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
2682:fltk-1.3.4-1/png/pngrtran.c ****             {
2683:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2684:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2685:fltk-1.3.4-1/png/pngrtran.c ****             }
2686:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = lo_filler;
2687:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
2688:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 16;
2689:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 2;
2690:fltk-1.3.4-1/png/pngrtran.c ****          }
2691:fltk-1.3.4-1/png/pngrtran.c **** 
2692:fltk-1.3.4-1/png/pngrtran.c ****          else
2693:fltk-1.3.4-1/png/pngrtran.c ****          {
2694:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from G to XG */
2695:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width;
2696:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width;
2697:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2698:fltk-1.3.4-1/png/pngrtran.c ****             {
2699:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2700:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2701:fltk-1.3.4-1/png/pngrtran.c ****             }
2702:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
2703:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 16;
2704:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 2;
2705:fltk-1.3.4-1/png/pngrtran.c ****          }
2706:fltk-1.3.4-1/png/pngrtran.c ****       }
2707:fltk-1.3.4-1/png/pngrtran.c **** 
2708:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2709:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->bit_depth == 16)
2710:fltk-1.3.4-1/png/pngrtran.c ****       {
2711:fltk-1.3.4-1/png/pngrtran.c ****          if ((flags & PNG_FLAG_FILLER_AFTER) != 0)
2712:fltk-1.3.4-1/png/pngrtran.c ****          {
2713:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from GG to GGXX */
2714:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 2;
2715:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
2716:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
2717:fltk-1.3.4-1/png/pngrtran.c ****             {
2718:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
2719:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2720:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2721:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2722:fltk-1.3.4-1/png/pngrtran.c ****             }
2723:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = hi_filler;
2724:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = lo_filler;
2725:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
2726:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 32;
2727:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 4;
2728:fltk-1.3.4-1/png/pngrtran.c ****          }
2729:fltk-1.3.4-1/png/pngrtran.c **** 
2730:fltk-1.3.4-1/png/pngrtran.c ****          else
2731:fltk-1.3.4-1/png/pngrtran.c ****          {
2732:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from GG to XXGG */
2733:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 2;
2734:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
2735:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2736:fltk-1.3.4-1/png/pngrtran.c ****             {
2737:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2738:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2739:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
2740:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2741:fltk-1.3.4-1/png/pngrtran.c ****             }
2742:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
2743:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 32;
2744:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 4;
2745:fltk-1.3.4-1/png/pngrtran.c ****          }
2746:fltk-1.3.4-1/png/pngrtran.c ****       }
2747:fltk-1.3.4-1/png/pngrtran.c **** #endif
2748:fltk-1.3.4-1/png/pngrtran.c ****    } /* COLOR_TYPE == GRAY */
2749:fltk-1.3.4-1/png/pngrtran.c ****    else if (row_info->color_type == PNG_COLOR_TYPE_RGB)
2750:fltk-1.3.4-1/png/pngrtran.c ****    {
2751:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth == 8)
2752:fltk-1.3.4-1/png/pngrtran.c ****       {
2753:fltk-1.3.4-1/png/pngrtran.c ****          if ((flags & PNG_FLAG_FILLER_AFTER) != 0)
2754:fltk-1.3.4-1/png/pngrtran.c ****          {
2755:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from RGB to RGBX */
2756:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 3;
2757:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width;
2758:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
2759:fltk-1.3.4-1/png/pngrtran.c ****             {
2760:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2761:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2762:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2763:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2764:fltk-1.3.4-1/png/pngrtran.c ****             }
2765:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = lo_filler;
2766:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 4;
2767:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 32;
2768:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 4;
2769:fltk-1.3.4-1/png/pngrtran.c ****          }
2770:fltk-1.3.4-1/png/pngrtran.c **** 
2771:fltk-1.3.4-1/png/pngrtran.c ****          else
2772:fltk-1.3.4-1/png/pngrtran.c ****          {
2773:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from RGB to XRGB */
2774:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 3;
2775:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp + (png_size_t)row_width;
2776:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2777:fltk-1.3.4-1/png/pngrtran.c ****             {
2778:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2779:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2780:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2781:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2782:fltk-1.3.4-1/png/pngrtran.c ****             }
2783:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 4;
2784:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 32;
2785:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 4;
2786:fltk-1.3.4-1/png/pngrtran.c ****          }
2787:fltk-1.3.4-1/png/pngrtran.c ****       }
2788:fltk-1.3.4-1/png/pngrtran.c **** 
2789:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
2790:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->bit_depth == 16)
2791:fltk-1.3.4-1/png/pngrtran.c ****       {
2792:fltk-1.3.4-1/png/pngrtran.c ****          if ((flags & PNG_FLAG_FILLER_AFTER) != 0)
2793:fltk-1.3.4-1/png/pngrtran.c ****          {
2794:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from RRGGBB to RRGGBBXX */
2795:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 6;
2796:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
2797:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
2798:fltk-1.3.4-1/png/pngrtran.c ****             {
2799:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
2800:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2801:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2802:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2803:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2804:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2805:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2806:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2807:fltk-1.3.4-1/png/pngrtran.c ****             }
2808:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = hi_filler;
2809:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = lo_filler;
2810:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 4;
2811:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 64;
2812:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 8;
2813:fltk-1.3.4-1/png/pngrtran.c ****          }
2814:fltk-1.3.4-1/png/pngrtran.c **** 
2815:fltk-1.3.4-1/png/pngrtran.c ****          else
2816:fltk-1.3.4-1/png/pngrtran.c ****          {
2817:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes the data from RRGGBB to XXRRGGBB */
2818:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 6;
2819:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
2820:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2821:fltk-1.3.4-1/png/pngrtran.c ****             {
2822:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2823:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2824:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2825:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2826:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2827:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
2828:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
2829:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
2830:fltk-1.3.4-1/png/pngrtran.c ****             }
2831:fltk-1.3.4-1/png/pngrtran.c **** 
2832:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 4;
2833:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 64;
2834:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 8;
2835:fltk-1.3.4-1/png/pngrtran.c ****          }
2836:fltk-1.3.4-1/png/pngrtran.c ****       }
2837:fltk-1.3.4-1/png/pngrtran.c **** #endif
2838:fltk-1.3.4-1/png/pngrtran.c ****    } /* COLOR_TYPE == RGB */
2839:fltk-1.3.4-1/png/pngrtran.c **** }
2840:fltk-1.3.4-1/png/pngrtran.c **** #endif
2841:fltk-1.3.4-1/png/pngrtran.c **** 
2842:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
2843:fltk-1.3.4-1/png/pngrtran.c **** /* Expand grayscale files to RGB, with or without alpha */
2844:fltk-1.3.4-1/png/pngrtran.c **** static void
2845:fltk-1.3.4-1/png/pngrtran.c **** png_do_gray_to_rgb(png_row_infop row_info, png_bytep row)
2846:fltk-1.3.4-1/png/pngrtran.c **** {
  16              		.loc 1 2846 0
  17              		.cfi_startproc
  18              	.LVL0:
2847:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 i;
2848:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width = row_info->width;
2849:fltk-1.3.4-1/png/pngrtran.c **** 
2850:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_gray_to_rgb");
2851:fltk-1.3.4-1/png/pngrtran.c **** 
2852:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->bit_depth >= 8 &&
  19              		.loc 1 2852 0
  20 0000 440FB647 		movzbl	17(%rdi), %r8d
  20      11
  21 0005 4180F807 		cmpb	$7, %r8b
  22 0009 0F86C600 		jbe	.L1
  22      0000
2853:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) == 0)
  23              		.loc 1 2853 0 discriminator 1
  24 000f 440FB64F 		movzbl	16(%rdi), %r9d
  24      10
2852:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) == 0)
  25              		.loc 1 2852 0 discriminator 1
  26 0014 41F6C102 		testb	$2, %r9b
  27 0018 0F85B700 		jne	.L1
  27      0000
2848:fltk-1.3.4-1/png/pngrtran.c **** 
  28              		.loc 1 2848 0
  29 001e 448B1F   		movl	(%rdi), %r11d
2854:fltk-1.3.4-1/png/pngrtran.c ****    {
2855:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->color_type == PNG_COLOR_TYPE_GRAY)
  30              		.loc 1 2855 0
  31 0021 4584C9   		testb	%r9b, %r9b
  32              	.LBB105:
2856:fltk-1.3.4-1/png/pngrtran.c ****       {
2857:fltk-1.3.4-1/png/pngrtran.c ****          if (row_info->bit_depth == 8)
2858:fltk-1.3.4-1/png/pngrtran.c ****          {
2859:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes G to RGB */
2860:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width - 1;
  33              		.loc 1 2860 0
  34 0024 4589DA   		movl	%r11d, %r10d
  35              	.LBE105:
2855:fltk-1.3.4-1/png/pngrtran.c ****       {
  36              		.loc 1 2855 0
  37 0027 7577     		jne	.L3
2857:fltk-1.3.4-1/png/pngrtran.c ****          {
  38              		.loc 1 2857 0
  39 0029 4180F808 		cmpb	$8, %r8b
  40 002d 0F84C500 		je	.L30
  40      0000
  41              	.LBB106:
2861:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
2862:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2863:fltk-1.3.4-1/png/pngrtran.c ****             {
2864:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
2865:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
2866:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
2867:fltk-1.3.4-1/png/pngrtran.c ****             }
2868:fltk-1.3.4-1/png/pngrtran.c ****          }
2869:fltk-1.3.4-1/png/pngrtran.c **** 
2870:fltk-1.3.4-1/png/pngrtran.c ****          else
2871:fltk-1.3.4-1/png/pngrtran.c ****          {
2872:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes GG to RRGGBB */
2873:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 2 - 1;
  42              		.loc 1 2873 0
  43 0033 4A8D5456 		leaq	-1(%rsi,%r10,2), %rdx
  43      FF
  44              	.LVL1:
2874:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 4;
2875:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
  45              		.loc 1 2875 0
  46 0038 4585DB   		testl	%r11d, %r11d
2874:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 4;
  47              		.loc 1 2874 0
  48 003b 4A8D0C92 		leaq	(%rdx,%r10,4), %rcx
  49              	.LVL2:
  50              		.loc 1 2875 0
  51 003f 7469     		je	.L5
  52 0041 418D43FF 		leal	-1(%r11), %eax
  53 0045 4889D6   		movq	%rdx, %rsi
  54              	.LVL3:
  55 0048 4801C0   		addq	%rax, %rax
  56 004b 4829C6   		subq	%rax, %rsi
  57 004e 488D76FE 		leaq	-2(%rsi), %rsi
  58              	.LVL4:
  59              		.p2align 4,,10
  60 0052 660F1F44 		.p2align 3
  60      0000
  61              	.L7:
2876:fltk-1.3.4-1/png/pngrtran.c ****             {
2877:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
  62              		.loc 1 2877 0 discriminator 3
  63 0058 0FB602   		movzbl	(%rdx), %eax
  64 005b 4883EA02 		subq	$2, %rdx
  65              	.LVL5:
  66 005f 4883E906 		subq	$6, %rcx
  67              	.LVL6:
  68 0063 884106   		movb	%al, 6(%rcx)
  69              	.LVL7:
2878:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp - 1);
  70              		.loc 1 2878 0 discriminator 3
  71 0066 0FB64201 		movzbl	1(%rdx), %eax
  72 006a 884105   		movb	%al, 5(%rcx)
2879:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
  73              		.loc 1 2879 0 discriminator 3
  74 006d 0FB64202 		movzbl	2(%rdx), %eax
  75 0071 884104   		movb	%al, 4(%rcx)
2880:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp - 1);
  76              		.loc 1 2880 0 discriminator 3
  77 0074 0FB64201 		movzbl	1(%rdx), %eax
  78 0078 884103   		movb	%al, 3(%rcx)
  79              	.LVL8:
2881:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
  80              		.loc 1 2881 0 discriminator 3
  81 007b 0FB64202 		movzbl	2(%rdx), %eax
  82 007f 884102   		movb	%al, 2(%rcx)
  83              	.LVL9:
2882:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
  84              		.loc 1 2882 0 discriminator 3
  85 0082 0FB64201 		movzbl	1(%rdx), %eax
2875:fltk-1.3.4-1/png/pngrtran.c ****             {
  86              		.loc 1 2875 0 discriminator 3
  87 0086 4839F2   		cmpq	%rsi, %rdx
  88              		.loc 1 2882 0 discriminator 3
  89 0089 884101   		movb	%al, 1(%rcx)
2875:fltk-1.3.4-1/png/pngrtran.c ****             {
  90              		.loc 1 2875 0 discriminator 3
  91 008c 75CA     		jne	.L7
  92              	.LVL10:
  93              	.L28:
  94 008e 440FB64F 		movzbl	16(%rdi), %r9d
  94      10
  95 0093 440FB647 		movzbl	17(%rdi), %r8d
  95      11
  96 0098 EB10     		jmp	.L5
  97              	.LVL11:
  98 009a 660F1F44 		.p2align 4,,10
  98      0000
  99              		.p2align 3
 100              	.L3:
 101              	.LBE106:
2883:fltk-1.3.4-1/png/pngrtran.c ****             }
2884:fltk-1.3.4-1/png/pngrtran.c ****          }
2885:fltk-1.3.4-1/png/pngrtran.c ****       }
2886:fltk-1.3.4-1/png/pngrtran.c **** 
2887:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
 102              		.loc 1 2887 0
 103 00a0 4180F904 		cmpb	$4, %r9b
 104 00a4 0F84A600 		je	.L31
 104      0000
 105              	.LVL12:
 106              	.L5:
2888:fltk-1.3.4-1/png/pngrtran.c ****       {
2889:fltk-1.3.4-1/png/pngrtran.c ****          if (row_info->bit_depth == 8)
2890:fltk-1.3.4-1/png/pngrtran.c ****          {
2891:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes GA to RGBA */
2892:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 2 - 1;
2893:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
2894:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2895:fltk-1.3.4-1/png/pngrtran.c ****             {
2896:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
2897:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
2898:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
2899:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
2900:fltk-1.3.4-1/png/pngrtran.c ****             }
2901:fltk-1.3.4-1/png/pngrtran.c ****          }
2902:fltk-1.3.4-1/png/pngrtran.c **** 
2903:fltk-1.3.4-1/png/pngrtran.c ****          else
2904:fltk-1.3.4-1/png/pngrtran.c ****          {
2905:fltk-1.3.4-1/png/pngrtran.c ****             /* This changes GGAA to RRGGBBAA */
2906:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row + (png_size_t)row_width * 4 - 1;
2907:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 4;
2908:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
2909:fltk-1.3.4-1/png/pngrtran.c ****             {
2910:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
2911:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
2912:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
2913:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp - 1);
2914:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
2915:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp - 1);
2916:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
2917:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
2918:fltk-1.3.4-1/png/pngrtran.c ****             }
2919:fltk-1.3.4-1/png/pngrtran.c ****          }
2920:fltk-1.3.4-1/png/pngrtran.c ****       }
2921:fltk-1.3.4-1/png/pngrtran.c ****       row_info->channels = (png_byte)(row_info->channels + 2);
 107              		.loc 1 2921 0
 108 00aa 0FB64712 		movzbl	18(%rdi), %eax
2922:fltk-1.3.4-1/png/pngrtran.c ****       row_info->color_type |= PNG_COLOR_MASK_COLOR;
 109              		.loc 1 2922 0
 110 00ae 4183C902 		orl	$2, %r9d
 111 00b2 44884F10 		movb	%r9b, 16(%rdi)
2921:fltk-1.3.4-1/png/pngrtran.c ****       row_info->color_type |= PNG_COLOR_MASK_COLOR;
 112              		.loc 1 2921 0
 113 00b6 83C002   		addl	$2, %eax
 114 00b9 884712   		movb	%al, 18(%rdi)
2923:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(row_info->channels *
 115              		.loc 1 2923 0
 116 00bc 410FAFC0 		imull	%r8d, %eax
2924:fltk-1.3.4-1/png/pngrtran.c ****           row_info->bit_depth);
2925:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
 117              		.loc 1 2925 0
 118 00c0 3C07     		cmpb	$7, %al
2923:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(row_info->channels *
 119              		.loc 1 2923 0
 120 00c2 884713   		movb	%al, 19(%rdi)
 121              		.loc 1 2925 0
 122 00c5 7619     		jbe	.L12
 123              		.loc 1 2925 0 is_stmt 0 discriminator 1
 124 00c7 C0E803   		shrb	$3, %al
 125 00ca 0FB6D0   		movzbl	%al, %edx
 126 00cd 490FAFD2 		imulq	%r10, %rdx
 127              	.L13:
 128              		.loc 1 2925 0 discriminator 4
 129 00d1 48895708 		movq	%rdx, 8(%rdi)
 130              	.LVL13:
 131              	.L1:
 132 00d5 F3C3     		rep ret
 133              	.LVL14:
 134 00d7 660F1F84 		.p2align 4,,10
 134      00000000 
 134      00
 135              		.p2align 3
 136              	.L12:
 137              		.loc 1 2925 0 discriminator 2
 138 00e0 0FB6C0   		movzbl	%al, %eax
 139 00e3 490FAFC2 		imulq	%r10, %rax
 140 00e7 488D5007 		leaq	7(%rax), %rdx
 141 00eb 48C1EA03 		shrq	$3, %rdx
 142 00ef EBE0     		jmp	.L13
 143              	.LVL15:
 144              		.p2align 4,,10
 145 00f1 0F1F8000 		.p2align 3
 145      000000
 146              	.L30:
 147              	.LBB107:
2860:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
 148              		.loc 1 2860 0 is_stmt 1
 149 00f8 4A8D7416 		leaq	-1(%rsi,%r10), %rsi
 149      FF
 150              	.LVL16:
2862:fltk-1.3.4-1/png/pngrtran.c ****             {
 151              		.loc 1 2862 0
 152 00fd 4585DB   		testl	%r11d, %r11d
2861:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 153              		.loc 1 2861 0
 154 0100 4A8D0C56 		leaq	(%rsi,%r10,2), %rcx
 155              	.LVL17:
2862:fltk-1.3.4-1/png/pngrtran.c ****             {
 156              		.loc 1 2862 0
 157 0104 74A4     		je	.L5
 158 0106 418D43FF 		leal	-1(%r11), %eax
 159 010a 4889CA   		movq	%rcx, %rdx
 160 010d 488D0440 		leaq	(%rax,%rax,2), %rax
 161 0111 4829C2   		subq	%rax, %rdx
 162 0114 4C8D4AFD 		leaq	-3(%rdx), %r9
 163              	.LVL18:
 164 0118 0F1F8400 		.p2align 4,,10
 164      00000000 
 165              		.p2align 3
 166              	.L6:
2864:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
 167              		.loc 1 2864 0 discriminator 3
 168 0120 440FB606 		movzbl	(%rsi), %r8d
2866:fltk-1.3.4-1/png/pngrtran.c ****             }
 169              		.loc 1 2866 0 discriminator 3
 170 0124 4883EE01 		subq	$1, %rsi
 171              	.LVL19:
 172 0128 4883E903 		subq	$3, %rcx
 173              	.LVL20:
2864:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
 174              		.loc 1 2864 0 discriminator 3
 175 012c 44884103 		movb	%r8b, 3(%rcx)
 176              	.LVL21:
2865:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
 177              		.loc 1 2865 0 discriminator 3
 178 0130 440FB646 		movzbl	1(%rsi), %r8d
 178      01
 179 0135 44884102 		movb	%r8b, 2(%rcx)
 180              	.LVL22:
2866:fltk-1.3.4-1/png/pngrtran.c ****             }
 181              		.loc 1 2866 0 discriminator 3
 182 0139 440FB646 		movzbl	1(%rsi), %r8d
 182      01
2862:fltk-1.3.4-1/png/pngrtran.c ****             {
 183              		.loc 1 2862 0 discriminator 3
 184 013e 4C39C9   		cmpq	%r9, %rcx
2866:fltk-1.3.4-1/png/pngrtran.c ****             }
 185              		.loc 1 2866 0 discriminator 3
 186 0141 44884101 		movb	%r8b, 1(%rcx)
2862:fltk-1.3.4-1/png/pngrtran.c ****             {
 187              		.loc 1 2862 0 discriminator 3
 188 0145 75D9     		jne	.L6
 189 0147 E942FFFF 		jmp	.L28
 189      FF
 190              	.LVL23:
 191 014c 0F1F4000 		.p2align 4,,10
 192              		.p2align 3
 193              	.L31:
 194              	.LBE107:
2889:fltk-1.3.4-1/png/pngrtran.c ****          {
 195              		.loc 1 2889 0
 196 0150 4180F808 		cmpb	$8, %r8b
 197 0154 747A     		je	.L32
 198              	.LBB108:
2908:fltk-1.3.4-1/png/pngrtran.c ****             {
 199              		.loc 1 2908 0
 200 0156 4585DB   		testl	%r11d, %r11d
2906:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 4;
 201              		.loc 1 2906 0
 202 0159 4A8D4C96 		leaq	-1(%rsi,%r10,4), %rcx
 202      FF
 203              	.LVL24:
2907:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 204              		.loc 1 2907 0
 205 015e 4A8D74D6 		leaq	-1(%rsi,%r10,8), %rsi
 205      FF
 206              	.LVL25:
2908:fltk-1.3.4-1/png/pngrtran.c ****             {
 207              		.loc 1 2908 0
 208 0163 0F8441FF 		je	.L5
 208      FFFF
 209 0169 418D43FF 		leal	-1(%r11), %eax
 210 016d 4889CA   		movq	%rcx, %rdx
 211 0170 48C1E002 		salq	$2, %rax
 212 0174 4829C2   		subq	%rax, %rdx
 213 0177 488D52FC 		leaq	-4(%rdx), %rdx
 214              	.LVL26:
 215 017b 0F1F4400 		.p2align 4,,10
 215      00
 216              		.p2align 3
 217              	.L11:
2910:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
 218              		.loc 1 2910 0 discriminator 3
 219 0180 0FB601   		movzbl	(%rcx), %eax
 220 0183 4883E904 		subq	$4, %rcx
 221              	.LVL27:
 222 0187 4883EE08 		subq	$8, %rsi
 223              	.LVL28:
 224 018b 884608   		movb	%al, 8(%rsi)
 225              	.LVL29:
2911:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
 226              		.loc 1 2911 0 discriminator 3
 227 018e 0FB64103 		movzbl	3(%rcx), %eax
 228 0192 884607   		movb	%al, 7(%rsi)
2912:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp - 1);
 229              		.loc 1 2912 0 discriminator 3
 230 0195 0FB64102 		movzbl	2(%rcx), %eax
 231 0199 884606   		movb	%al, 6(%rsi)
2913:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
 232              		.loc 1 2913 0 discriminator 3
 233 019c 0FB64101 		movzbl	1(%rcx), %eax
 234 01a0 884605   		movb	%al, 5(%rsi)
2914:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp - 1);
 235              		.loc 1 2914 0 discriminator 3
 236 01a3 0FB64102 		movzbl	2(%rcx), %eax
 237 01a7 884604   		movb	%al, 4(%rsi)
2915:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
 238              		.loc 1 2915 0 discriminator 3
 239 01aa 0FB64101 		movzbl	1(%rcx), %eax
 240 01ae 884603   		movb	%al, 3(%rsi)
 241              	.LVL30:
2916:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
 242              		.loc 1 2916 0 discriminator 3
 243 01b1 0FB64102 		movzbl	2(%rcx), %eax
 244 01b5 884602   		movb	%al, 2(%rsi)
 245              	.LVL31:
2917:fltk-1.3.4-1/png/pngrtran.c ****             }
 246              		.loc 1 2917 0 discriminator 3
 247 01b8 0FB64101 		movzbl	1(%rcx), %eax
2908:fltk-1.3.4-1/png/pngrtran.c ****             {
 248              		.loc 1 2908 0 discriminator 3
 249 01bc 4839D1   		cmpq	%rdx, %rcx
2917:fltk-1.3.4-1/png/pngrtran.c ****             }
 250              		.loc 1 2917 0 discriminator 3
 251 01bf 884601   		movb	%al, 1(%rsi)
2908:fltk-1.3.4-1/png/pngrtran.c ****             {
 252              		.loc 1 2908 0 discriminator 3
 253 01c2 75BC     		jne	.L11
 254 01c4 E9C5FEFF 		jmp	.L28
 254      FF
 255              	.LVL32:
 256 01c9 0F1F8000 		.p2align 4,,10
 256      000000
 257              		.p2align 3
 258              	.L32:
 259              	.LBE108:
 260              	.LBB109:
2894:fltk-1.3.4-1/png/pngrtran.c ****             {
 261              		.loc 1 2894 0
 262 01d0 4585DB   		testl	%r11d, %r11d
2892:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
 263              		.loc 1 2892 0
 264 01d3 4A8D4456 		leaq	-1(%rsi,%r10,2), %rax
 264      FF
 265              	.LVL33:
2893:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 266              		.loc 1 2893 0
 267 01d8 4A8D5496 		leaq	-1(%rsi,%r10,4), %rdx
 267      FF
 268              	.LVL34:
2894:fltk-1.3.4-1/png/pngrtran.c ****             {
 269              		.loc 1 2894 0
 270 01dd 0F84C7FE 		je	.L5
 270      FFFF
 271 01e3 418D4BFF 		leal	-1(%r11), %ecx
 272 01e7 4889C6   		movq	%rax, %rsi
 273              	.LVL35:
 274 01ea 4801C9   		addq	%rcx, %rcx
 275 01ed 4829CE   		subq	%rcx, %rsi
 276 01f0 488D76FE 		leaq	-2(%rsi), %rsi
 277              	.LVL36:
 278              		.p2align 4,,10
 279 01f4 0F1F4000 		.p2align 3
 280              	.L10:
2896:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
 281              		.loc 1 2896 0 discriminator 3
 282 01f8 0FB608   		movzbl	(%rax), %ecx
 283 01fb 4883E802 		subq	$2, %rax
 284              	.LVL37:
 285 01ff 4883EA04 		subq	$4, %rdx
 286              	.LVL38:
 287 0203 884A04   		movb	%cl, 4(%rdx)
 288              	.LVL39:
2897:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *sp;
 289              		.loc 1 2897 0 discriminator 3
 290 0206 0FB64801 		movzbl	1(%rax), %ecx
 291 020a 884A03   		movb	%cl, 3(%rdx)
2898:fltk-1.3.4-1/png/pngrtran.c ****                *(dp--) = *(sp--);
 292              		.loc 1 2898 0 discriminator 3
 293 020d 0FB64801 		movzbl	1(%rax), %ecx
 294 0211 884A02   		movb	%cl, 2(%rdx)
 295              	.LVL40:
2899:fltk-1.3.4-1/png/pngrtran.c ****             }
 296              		.loc 1 2899 0 discriminator 3
 297 0214 0FB64801 		movzbl	1(%rax), %ecx
2894:fltk-1.3.4-1/png/pngrtran.c ****             {
 298              		.loc 1 2894 0 discriminator 3
 299 0218 4839F0   		cmpq	%rsi, %rax
2899:fltk-1.3.4-1/png/pngrtran.c ****             }
 300              		.loc 1 2899 0 discriminator 3
 301 021b 884A01   		movb	%cl, 1(%rdx)
2894:fltk-1.3.4-1/png/pngrtran.c ****             {
 302              		.loc 1 2894 0 discriminator 3
 303 021e 75D8     		jne	.L10
 304 0220 E969FEFF 		jmp	.L28
 304      FF
 305              	.LBE109:
 306              		.cfi_endproc
 307              	.LFE91:
 309              		.section	.text.unlikely.png_do_gray_to_rgb
 310              	.LCOLDE0:
 311              		.section	.text.png_do_gray_to_rgb
 312              	.LHOTE0:
 313              		.section	.text.unlikely.png_do_expand,"ax",@progbits
 314              	.LCOLDB1:
 315              		.section	.text.png_do_expand,"ax",@progbits
 316              	.LHOTB1:
 317              		.p2align 4,,15
 319              	png_do_expand:
 320              	.LFB97:
2926:fltk-1.3.4-1/png/pngrtran.c ****    }
2927:fltk-1.3.4-1/png/pngrtran.c **** }
2928:fltk-1.3.4-1/png/pngrtran.c **** #endif
2929:fltk-1.3.4-1/png/pngrtran.c **** 
2930:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
2931:fltk-1.3.4-1/png/pngrtran.c **** /* Reduce RGB files to grayscale, with or without alpha
2932:fltk-1.3.4-1/png/pngrtran.c ****  * using the equation given in Poynton's ColorFAQ of 1998-01-04 at
2933:fltk-1.3.4-1/png/pngrtran.c ****  * <http://www.inforamp.net/~poynton/>  (THIS LINK IS DEAD June 2008 but
2934:fltk-1.3.4-1/png/pngrtran.c ****  * versions dated 1998 through November 2002 have been archived at
2935:fltk-1.3.4-1/png/pngrtran.c ****  * http://web.archive.org/web/20000816232553/http://www.inforamp.net/
2936:fltk-1.3.4-1/png/pngrtran.c ****  * ~poynton/notes/colour_and_gamma/ColorFAQ.txt )
2937:fltk-1.3.4-1/png/pngrtran.c ****  * Charles Poynton poynton at poynton.com
2938:fltk-1.3.4-1/png/pngrtran.c ****  *
2939:fltk-1.3.4-1/png/pngrtran.c ****  *     Y = 0.212671 * R + 0.715160 * G + 0.072169 * B
2940:fltk-1.3.4-1/png/pngrtran.c ****  *
2941:fltk-1.3.4-1/png/pngrtran.c ****  *  which can be expressed with integers as
2942:fltk-1.3.4-1/png/pngrtran.c ****  *
2943:fltk-1.3.4-1/png/pngrtran.c ****  *     Y = (6969 * R + 23434 * G + 2365 * B)/32768
2944:fltk-1.3.4-1/png/pngrtran.c ****  *
2945:fltk-1.3.4-1/png/pngrtran.c ****  * Poynton's current link (as of January 2003 through July 2011):
2946:fltk-1.3.4-1/png/pngrtran.c ****  * <http://www.poynton.com/notes/colour_and_gamma/>
2947:fltk-1.3.4-1/png/pngrtran.c ****  * has changed the numbers slightly:
2948:fltk-1.3.4-1/png/pngrtran.c ****  *
2949:fltk-1.3.4-1/png/pngrtran.c ****  *     Y = 0.2126*R + 0.7152*G + 0.0722*B
2950:fltk-1.3.4-1/png/pngrtran.c ****  *
2951:fltk-1.3.4-1/png/pngrtran.c ****  *  which can be expressed with integers as
2952:fltk-1.3.4-1/png/pngrtran.c ****  *
2953:fltk-1.3.4-1/png/pngrtran.c ****  *     Y = (6966 * R + 23436 * G + 2366 * B)/32768
2954:fltk-1.3.4-1/png/pngrtran.c ****  *
2955:fltk-1.3.4-1/png/pngrtran.c ****  *  Historically, however, libpng uses numbers derived from the ITU-R Rec 709
2956:fltk-1.3.4-1/png/pngrtran.c ****  *  end point chromaticities and the D65 white point.  Depending on the
2957:fltk-1.3.4-1/png/pngrtran.c ****  *  precision used for the D65 white point this produces a variety of different
2958:fltk-1.3.4-1/png/pngrtran.c ****  *  numbers, however if the four decimal place value used in ITU-R Rec 709 is
2959:fltk-1.3.4-1/png/pngrtran.c ****  *  used (0.3127,0.3290) the Y calculation would be:
2960:fltk-1.3.4-1/png/pngrtran.c ****  *
2961:fltk-1.3.4-1/png/pngrtran.c ****  *     Y = (6968 * R + 23435 * G + 2366 * B)/32768
2962:fltk-1.3.4-1/png/pngrtran.c ****  *
2963:fltk-1.3.4-1/png/pngrtran.c ****  *  While this is correct the rounding results in an overflow for white, because
2964:fltk-1.3.4-1/png/pngrtran.c ****  *  the sum of the rounded coefficients is 32769, not 32768.  Consequently
2965:fltk-1.3.4-1/png/pngrtran.c ****  *  libpng uses, instead, the closest non-overflowing approximation:
2966:fltk-1.3.4-1/png/pngrtran.c ****  *
2967:fltk-1.3.4-1/png/pngrtran.c ****  *     Y = (6968 * R + 23434 * G + 2366 * B)/32768
2968:fltk-1.3.4-1/png/pngrtran.c ****  *
2969:fltk-1.3.4-1/png/pngrtran.c ****  *  Starting with libpng-1.5.5, if the image being converted has a cHRM chunk
2970:fltk-1.3.4-1/png/pngrtran.c ****  *  (including an sRGB chunk) then the chromaticities are used to calculate the
2971:fltk-1.3.4-1/png/pngrtran.c ****  *  coefficients.  See the chunk handling in pngrutil.c for more information.
2972:fltk-1.3.4-1/png/pngrtran.c ****  *
2973:fltk-1.3.4-1/png/pngrtran.c ****  *  In all cases the calculation is to be done in a linear colorspace.  If no
2974:fltk-1.3.4-1/png/pngrtran.c ****  *  gamma information is available to correct the encoding of the original RGB
2975:fltk-1.3.4-1/png/pngrtran.c ****  *  values this results in an implicit assumption that the original PNG RGB
2976:fltk-1.3.4-1/png/pngrtran.c ****  *  values were linear.
2977:fltk-1.3.4-1/png/pngrtran.c ****  *
2978:fltk-1.3.4-1/png/pngrtran.c ****  *  Other integer coefficents can be used via png_set_rgb_to_gray().  Because
2979:fltk-1.3.4-1/png/pngrtran.c ****  *  the API takes just red and green coefficients the blue coefficient is
2980:fltk-1.3.4-1/png/pngrtran.c ****  *  calculated to make the sum 32768.  This will result in different rounding
2981:fltk-1.3.4-1/png/pngrtran.c ****  *  to that used above.
2982:fltk-1.3.4-1/png/pngrtran.c ****  */
2983:fltk-1.3.4-1/png/pngrtran.c **** static int
2984:fltk-1.3.4-1/png/pngrtran.c **** png_do_rgb_to_gray(png_structrp png_ptr, png_row_infop row_info, png_bytep row)
2985:fltk-1.3.4-1/png/pngrtran.c **** 
2986:fltk-1.3.4-1/png/pngrtran.c **** {
2987:fltk-1.3.4-1/png/pngrtran.c ****    int rgb_error = 0;
2988:fltk-1.3.4-1/png/pngrtran.c **** 
2989:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_rgb_to_gray");
2990:fltk-1.3.4-1/png/pngrtran.c **** 
2991:fltk-1.3.4-1/png/pngrtran.c ****    if ((row_info->color_type & PNG_COLOR_MASK_PALETTE) == 0 &&
2992:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) != 0)
2993:fltk-1.3.4-1/png/pngrtran.c ****    {
2994:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 rc = png_ptr->rgb_to_gray_red_coeff;
2995:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 gc = png_ptr->rgb_to_gray_green_coeff;
2996:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 bc = 32768 - rc - gc;
2997:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 row_width = row_info->width;
2998:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST int have_alpha =
2999:fltk-1.3.4-1/png/pngrtran.c ****          (row_info->color_type & PNG_COLOR_MASK_ALPHA) != 0;
3000:fltk-1.3.4-1/png/pngrtran.c **** 
3001:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth == 8)
3002:fltk-1.3.4-1/png/pngrtran.c ****       {
3003:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3004:fltk-1.3.4-1/png/pngrtran.c ****          /* Notice that gamma to/from 1 are not necessarily inverses (if
3005:fltk-1.3.4-1/png/pngrtran.c ****           * there is an overall gamma correction).  Prior to 1.5.5 this code
3006:fltk-1.3.4-1/png/pngrtran.c ****           * checked the linearized values for equality; this doesn't match
3007:fltk-1.3.4-1/png/pngrtran.c ****           * the documentation, the original values must be checked.
3008:fltk-1.3.4-1/png/pngrtran.c ****           */
3009:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->gamma_from_1 != NULL && png_ptr->gamma_to_1 != NULL)
3010:fltk-1.3.4-1/png/pngrtran.c ****          {
3011:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row;
3012:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row;
3013:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
3014:fltk-1.3.4-1/png/pngrtran.c **** 
3015:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
3016:fltk-1.3.4-1/png/pngrtran.c ****             {
3017:fltk-1.3.4-1/png/pngrtran.c ****                png_byte red   = *(sp++);
3018:fltk-1.3.4-1/png/pngrtran.c ****                png_byte green = *(sp++);
3019:fltk-1.3.4-1/png/pngrtran.c ****                png_byte blue  = *(sp++);
3020:fltk-1.3.4-1/png/pngrtran.c **** 
3021:fltk-1.3.4-1/png/pngrtran.c ****                if (red != green || red != blue)
3022:fltk-1.3.4-1/png/pngrtran.c ****                {
3023:fltk-1.3.4-1/png/pngrtran.c ****                   red = png_ptr->gamma_to_1[red];
3024:fltk-1.3.4-1/png/pngrtran.c ****                   green = png_ptr->gamma_to_1[green];
3025:fltk-1.3.4-1/png/pngrtran.c ****                   blue = png_ptr->gamma_to_1[blue];
3026:fltk-1.3.4-1/png/pngrtran.c **** 
3027:fltk-1.3.4-1/png/pngrtran.c ****                   rgb_error |= 1;
3028:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = png_ptr->gamma_from_1[
3029:fltk-1.3.4-1/png/pngrtran.c ****                       (rc*red + gc*green + bc*blue + 16384)>>15];
3030:fltk-1.3.4-1/png/pngrtran.c ****                }
3031:fltk-1.3.4-1/png/pngrtran.c **** 
3032:fltk-1.3.4-1/png/pngrtran.c ****                else
3033:fltk-1.3.4-1/png/pngrtran.c ****                {
3034:fltk-1.3.4-1/png/pngrtran.c ****                   /* If there is no overall correction the table will not be
3035:fltk-1.3.4-1/png/pngrtran.c ****                    * set.
3036:fltk-1.3.4-1/png/pngrtran.c ****                    */
3037:fltk-1.3.4-1/png/pngrtran.c ****                   if (png_ptr->gamma_table != NULL)
3038:fltk-1.3.4-1/png/pngrtran.c ****                      red = png_ptr->gamma_table[red];
3039:fltk-1.3.4-1/png/pngrtran.c **** 
3040:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = red;
3041:fltk-1.3.4-1/png/pngrtran.c ****                }
3042:fltk-1.3.4-1/png/pngrtran.c **** 
3043:fltk-1.3.4-1/png/pngrtran.c ****                if (have_alpha != 0)
3044:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
3045:fltk-1.3.4-1/png/pngrtran.c ****             }
3046:fltk-1.3.4-1/png/pngrtran.c ****          }
3047:fltk-1.3.4-1/png/pngrtran.c ****          else
3048:fltk-1.3.4-1/png/pngrtran.c **** #endif
3049:fltk-1.3.4-1/png/pngrtran.c ****          {
3050:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row;
3051:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row;
3052:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
3053:fltk-1.3.4-1/png/pngrtran.c **** 
3054:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
3055:fltk-1.3.4-1/png/pngrtran.c ****             {
3056:fltk-1.3.4-1/png/pngrtran.c ****                png_byte red   = *(sp++);
3057:fltk-1.3.4-1/png/pngrtran.c ****                png_byte green = *(sp++);
3058:fltk-1.3.4-1/png/pngrtran.c ****                png_byte blue  = *(sp++);
3059:fltk-1.3.4-1/png/pngrtran.c **** 
3060:fltk-1.3.4-1/png/pngrtran.c ****                if (red != green || red != blue)
3061:fltk-1.3.4-1/png/pngrtran.c ****                {
3062:fltk-1.3.4-1/png/pngrtran.c ****                   rgb_error |= 1;
3063:fltk-1.3.4-1/png/pngrtran.c ****                   /* NOTE: this is the historical approach which simply
3064:fltk-1.3.4-1/png/pngrtran.c ****                    * truncates the results.
3065:fltk-1.3.4-1/png/pngrtran.c ****                    */
3066:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = (png_byte)((rc*red + gc*green + bc*blue)>>15);
3067:fltk-1.3.4-1/png/pngrtran.c ****                }
3068:fltk-1.3.4-1/png/pngrtran.c **** 
3069:fltk-1.3.4-1/png/pngrtran.c ****                else
3070:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = red;
3071:fltk-1.3.4-1/png/pngrtran.c **** 
3072:fltk-1.3.4-1/png/pngrtran.c ****                if (have_alpha != 0)
3073:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
3074:fltk-1.3.4-1/png/pngrtran.c ****             }
3075:fltk-1.3.4-1/png/pngrtran.c ****          }
3076:fltk-1.3.4-1/png/pngrtran.c ****       }
3077:fltk-1.3.4-1/png/pngrtran.c **** 
3078:fltk-1.3.4-1/png/pngrtran.c ****       else /* RGB bit_depth == 16 */
3079:fltk-1.3.4-1/png/pngrtran.c ****       {
3080:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3081:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->gamma_16_to_1 != NULL && png_ptr->gamma_16_from_1 != NULL)
3082:fltk-1.3.4-1/png/pngrtran.c ****          {
3083:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row;
3084:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row;
3085:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
3086:fltk-1.3.4-1/png/pngrtran.c **** 
3087:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
3088:fltk-1.3.4-1/png/pngrtran.c ****             {
3089:fltk-1.3.4-1/png/pngrtran.c ****                png_uint_16 red, green, blue, w;
3090:fltk-1.3.4-1/png/pngrtran.c **** 
3091:fltk-1.3.4-1/png/pngrtran.c ****                red   = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
3092:fltk-1.3.4-1/png/pngrtran.c ****                green = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
3093:fltk-1.3.4-1/png/pngrtran.c ****                blue  = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
3094:fltk-1.3.4-1/png/pngrtran.c **** 
3095:fltk-1.3.4-1/png/pngrtran.c ****                if (red == green && red == blue)
3096:fltk-1.3.4-1/png/pngrtran.c ****                {
3097:fltk-1.3.4-1/png/pngrtran.c ****                   if (png_ptr->gamma_16_table != NULL)
3098:fltk-1.3.4-1/png/pngrtran.c ****                      w = png_ptr->gamma_16_table[(red & 0xff)
3099:fltk-1.3.4-1/png/pngrtran.c ****                          >> png_ptr->gamma_shift][red >> 8];
3100:fltk-1.3.4-1/png/pngrtran.c **** 
3101:fltk-1.3.4-1/png/pngrtran.c ****                   else
3102:fltk-1.3.4-1/png/pngrtran.c ****                      w = red;
3103:fltk-1.3.4-1/png/pngrtran.c ****                }
3104:fltk-1.3.4-1/png/pngrtran.c **** 
3105:fltk-1.3.4-1/png/pngrtran.c ****                else
3106:fltk-1.3.4-1/png/pngrtran.c ****                {
3107:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 red_1   = png_ptr->gamma_16_to_1[(red&0xff)
3108:fltk-1.3.4-1/png/pngrtran.c ****                       >> png_ptr->gamma_shift][red>>8];
3109:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 green_1 =
3110:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_16_to_1[(green&0xff) >>
3111:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_shift][green>>8];
3112:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 blue_1  = png_ptr->gamma_16_to_1[(blue&0xff)
3113:fltk-1.3.4-1/png/pngrtran.c ****                       >> png_ptr->gamma_shift][blue>>8];
3114:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 gray16  = (png_uint_16)((rc*red_1 + gc*green_1
3115:fltk-1.3.4-1/png/pngrtran.c ****                       + bc*blue_1 + 16384)>>15);
3116:fltk-1.3.4-1/png/pngrtran.c ****                   w = png_ptr->gamma_16_from_1[(gray16&0xff) >>
3117:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_shift][gray16 >> 8];
3118:fltk-1.3.4-1/png/pngrtran.c ****                   rgb_error |= 1;
3119:fltk-1.3.4-1/png/pngrtran.c ****                }
3120:fltk-1.3.4-1/png/pngrtran.c **** 
3121:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)((w>>8) & 0xff);
3122:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(w & 0xff);
3123:fltk-1.3.4-1/png/pngrtran.c **** 
3124:fltk-1.3.4-1/png/pngrtran.c ****                if (have_alpha != 0)
3125:fltk-1.3.4-1/png/pngrtran.c ****                {
3126:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
3127:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
3128:fltk-1.3.4-1/png/pngrtran.c ****                }
3129:fltk-1.3.4-1/png/pngrtran.c ****             }
3130:fltk-1.3.4-1/png/pngrtran.c ****          }
3131:fltk-1.3.4-1/png/pngrtran.c ****          else
3132:fltk-1.3.4-1/png/pngrtran.c **** #endif
3133:fltk-1.3.4-1/png/pngrtran.c ****          {
3134:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep sp = row;
3135:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row;
3136:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 i;
3137:fltk-1.3.4-1/png/pngrtran.c **** 
3138:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
3139:fltk-1.3.4-1/png/pngrtran.c ****             {
3140:fltk-1.3.4-1/png/pngrtran.c ****                png_uint_16 red, green, blue, gray16;
3141:fltk-1.3.4-1/png/pngrtran.c **** 
3142:fltk-1.3.4-1/png/pngrtran.c ****                red   = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
3143:fltk-1.3.4-1/png/pngrtran.c ****                green = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
3144:fltk-1.3.4-1/png/pngrtran.c ****                blue  = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
3145:fltk-1.3.4-1/png/pngrtran.c **** 
3146:fltk-1.3.4-1/png/pngrtran.c ****                if (red != green || red != blue)
3147:fltk-1.3.4-1/png/pngrtran.c ****                   rgb_error |= 1;
3148:fltk-1.3.4-1/png/pngrtran.c **** 
3149:fltk-1.3.4-1/png/pngrtran.c ****                /* From 1.5.5 in the 16 bit case do the accurate conversion even
3150:fltk-1.3.4-1/png/pngrtran.c ****                 * in the 'fast' case - this is because this is where the code
3151:fltk-1.3.4-1/png/pngrtran.c ****                 * ends up when handling linear 16 bit data.
3152:fltk-1.3.4-1/png/pngrtran.c ****                 */
3153:fltk-1.3.4-1/png/pngrtran.c ****                gray16  = (png_uint_16)((rc*red + gc*green + bc*blue + 16384) >>
3154:fltk-1.3.4-1/png/pngrtran.c ****                   15);
3155:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)((gray16 >> 8) & 0xff);
3156:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(gray16 & 0xff);
3157:fltk-1.3.4-1/png/pngrtran.c **** 
3158:fltk-1.3.4-1/png/pngrtran.c ****                if (have_alpha != 0)
3159:fltk-1.3.4-1/png/pngrtran.c ****                {
3160:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
3161:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
3162:fltk-1.3.4-1/png/pngrtran.c ****                }
3163:fltk-1.3.4-1/png/pngrtran.c ****             }
3164:fltk-1.3.4-1/png/pngrtran.c ****          }
3165:fltk-1.3.4-1/png/pngrtran.c ****       }
3166:fltk-1.3.4-1/png/pngrtran.c **** 
3167:fltk-1.3.4-1/png/pngrtran.c ****       row_info->channels = (png_byte)(row_info->channels - 2);
3168:fltk-1.3.4-1/png/pngrtran.c ****       row_info->color_type = (png_byte)(row_info->color_type &
3169:fltk-1.3.4-1/png/pngrtran.c ****           ~PNG_COLOR_MASK_COLOR);
3170:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(row_info->channels *
3171:fltk-1.3.4-1/png/pngrtran.c ****           row_info->bit_depth);
3172:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
3173:fltk-1.3.4-1/png/pngrtran.c ****    }
3174:fltk-1.3.4-1/png/pngrtran.c ****    return rgb_error;
3175:fltk-1.3.4-1/png/pngrtran.c **** }
3176:fltk-1.3.4-1/png/pngrtran.c **** #endif
3177:fltk-1.3.4-1/png/pngrtran.c **** 
3178:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) ||\
3179:fltk-1.3.4-1/png/pngrtran.c ****    defined(PNG_READ_ALPHA_MODE_SUPPORTED)
3180:fltk-1.3.4-1/png/pngrtran.c **** /* Replace any alpha or transparency with the supplied background color.
3181:fltk-1.3.4-1/png/pngrtran.c ****  * "background" is already in the screen gamma, while "background_1" is
3182:fltk-1.3.4-1/png/pngrtran.c ****  * at a gamma of 1.0.  Paletted files have already been taken care of.
3183:fltk-1.3.4-1/png/pngrtran.c ****  */
3184:fltk-1.3.4-1/png/pngrtran.c **** static void
3185:fltk-1.3.4-1/png/pngrtran.c **** png_do_compose(png_row_infop row_info, png_bytep row, png_structrp png_ptr)
3186:fltk-1.3.4-1/png/pngrtran.c **** {
3187:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3188:fltk-1.3.4-1/png/pngrtran.c ****    png_const_bytep gamma_table = png_ptr->gamma_table;
3189:fltk-1.3.4-1/png/pngrtran.c ****    png_const_bytep gamma_from_1 = png_ptr->gamma_from_1;
3190:fltk-1.3.4-1/png/pngrtran.c ****    png_const_bytep gamma_to_1 = png_ptr->gamma_to_1;
3191:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16 = png_ptr->gamma_16_table;
3192:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16_from_1 = png_ptr->gamma_16_from_1;
3193:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16_to_1 = png_ptr->gamma_16_to_1;
3194:fltk-1.3.4-1/png/pngrtran.c ****    int gamma_shift = png_ptr->gamma_shift;
3195:fltk-1.3.4-1/png/pngrtran.c ****    int optimize = (png_ptr->flags & PNG_FLAG_OPTIMIZE_ALPHA) != 0;
3196:fltk-1.3.4-1/png/pngrtran.c **** #endif
3197:fltk-1.3.4-1/png/pngrtran.c **** 
3198:fltk-1.3.4-1/png/pngrtran.c ****    png_bytep sp;
3199:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 i;
3200:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width = row_info->width;
3201:fltk-1.3.4-1/png/pngrtran.c ****    int shift;
3202:fltk-1.3.4-1/png/pngrtran.c **** 
3203:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_compose");
3204:fltk-1.3.4-1/png/pngrtran.c **** 
3205:fltk-1.3.4-1/png/pngrtran.c ****    {
3206:fltk-1.3.4-1/png/pngrtran.c ****       switch (row_info->color_type)
3207:fltk-1.3.4-1/png/pngrtran.c ****       {
3208:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_GRAY:
3209:fltk-1.3.4-1/png/pngrtran.c ****          {
3210:fltk-1.3.4-1/png/pngrtran.c ****             switch (row_info->bit_depth)
3211:fltk-1.3.4-1/png/pngrtran.c ****             {
3212:fltk-1.3.4-1/png/pngrtran.c ****                case 1:
3213:fltk-1.3.4-1/png/pngrtran.c ****                {
3214:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3215:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 7;
3216:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
3217:fltk-1.3.4-1/png/pngrtran.c ****                   {
3218:fltk-1.3.4-1/png/pngrtran.c ****                      if ((png_uint_16)((*sp >> shift) & 0x01)
3219:fltk-1.3.4-1/png/pngrtran.c ****                         == png_ptr->trans_color.gray)
3220:fltk-1.3.4-1/png/pngrtran.c ****                      {
3221:fltk-1.3.4-1/png/pngrtran.c ****                         unsigned int tmp = *sp & (0x7f7f >> (7 - shift));
3222:fltk-1.3.4-1/png/pngrtran.c ****                         tmp |= png_ptr->background.gray << shift;
3223:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)(tmp & 0xff);
3224:fltk-1.3.4-1/png/pngrtran.c ****                      }
3225:fltk-1.3.4-1/png/pngrtran.c **** 
3226:fltk-1.3.4-1/png/pngrtran.c ****                      if (shift == 0)
3227:fltk-1.3.4-1/png/pngrtran.c ****                      {
3228:fltk-1.3.4-1/png/pngrtran.c ****                         shift = 7;
3229:fltk-1.3.4-1/png/pngrtran.c ****                         sp++;
3230:fltk-1.3.4-1/png/pngrtran.c ****                      }
3231:fltk-1.3.4-1/png/pngrtran.c **** 
3232:fltk-1.3.4-1/png/pngrtran.c ****                      else
3233:fltk-1.3.4-1/png/pngrtran.c ****                         shift--;
3234:fltk-1.3.4-1/png/pngrtran.c ****                   }
3235:fltk-1.3.4-1/png/pngrtran.c ****                   break;
3236:fltk-1.3.4-1/png/pngrtran.c ****                }
3237:fltk-1.3.4-1/png/pngrtran.c **** 
3238:fltk-1.3.4-1/png/pngrtran.c ****                case 2:
3239:fltk-1.3.4-1/png/pngrtran.c ****                {
3240:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3241:fltk-1.3.4-1/png/pngrtran.c ****                   if (gamma_table != NULL)
3242:fltk-1.3.4-1/png/pngrtran.c ****                   {
3243:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3244:fltk-1.3.4-1/png/pngrtran.c ****                      shift = 6;
3245:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++)
3246:fltk-1.3.4-1/png/pngrtran.c ****                      {
3247:fltk-1.3.4-1/png/pngrtran.c ****                         if ((png_uint_16)((*sp >> shift) & 0x03)
3248:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
3249:fltk-1.3.4-1/png/pngrtran.c ****                         {
3250:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int tmp = *sp & (0x3f3f >> (6 - shift));
3251:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
3252:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)(tmp & 0xff);
3253:fltk-1.3.4-1/png/pngrtran.c ****                         }
3254:fltk-1.3.4-1/png/pngrtran.c **** 
3255:fltk-1.3.4-1/png/pngrtran.c ****                         else
3256:fltk-1.3.4-1/png/pngrtran.c ****                         {
3257:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int p = (*sp >> shift) & 0x03;
3258:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int g = (gamma_table [p | (p << 2) |
3259:fltk-1.3.4-1/png/pngrtran.c ****                                (p << 4) | (p << 6)] >> 6) & 0x03;
3260:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int tmp = *sp & (0x3f3f >> (6 - shift));
3261:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
3262:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)(tmp & 0xff);
3263:fltk-1.3.4-1/png/pngrtran.c ****                         }
3264:fltk-1.3.4-1/png/pngrtran.c **** 
3265:fltk-1.3.4-1/png/pngrtran.c ****                         if (shift == 0)
3266:fltk-1.3.4-1/png/pngrtran.c ****                         {
3267:fltk-1.3.4-1/png/pngrtran.c ****                            shift = 6;
3268:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
3269:fltk-1.3.4-1/png/pngrtran.c ****                         }
3270:fltk-1.3.4-1/png/pngrtran.c **** 
3271:fltk-1.3.4-1/png/pngrtran.c ****                         else
3272:fltk-1.3.4-1/png/pngrtran.c ****                            shift -= 2;
3273:fltk-1.3.4-1/png/pngrtran.c ****                      }
3274:fltk-1.3.4-1/png/pngrtran.c ****                   }
3275:fltk-1.3.4-1/png/pngrtran.c **** 
3276:fltk-1.3.4-1/png/pngrtran.c ****                   else
3277:fltk-1.3.4-1/png/pngrtran.c **** #endif
3278:fltk-1.3.4-1/png/pngrtran.c ****                   {
3279:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3280:fltk-1.3.4-1/png/pngrtran.c ****                      shift = 6;
3281:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++)
3282:fltk-1.3.4-1/png/pngrtran.c ****                      {
3283:fltk-1.3.4-1/png/pngrtran.c ****                         if ((png_uint_16)((*sp >> shift) & 0x03)
3284:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
3285:fltk-1.3.4-1/png/pngrtran.c ****                         {
3286:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int tmp = *sp & (0x3f3f >> (6 - shift));
3287:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
3288:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)(tmp & 0xff);
3289:fltk-1.3.4-1/png/pngrtran.c ****                         }
3290:fltk-1.3.4-1/png/pngrtran.c **** 
3291:fltk-1.3.4-1/png/pngrtran.c ****                         if (shift == 0)
3292:fltk-1.3.4-1/png/pngrtran.c ****                         {
3293:fltk-1.3.4-1/png/pngrtran.c ****                            shift = 6;
3294:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
3295:fltk-1.3.4-1/png/pngrtran.c ****                         }
3296:fltk-1.3.4-1/png/pngrtran.c **** 
3297:fltk-1.3.4-1/png/pngrtran.c ****                         else
3298:fltk-1.3.4-1/png/pngrtran.c ****                            shift -= 2;
3299:fltk-1.3.4-1/png/pngrtran.c ****                      }
3300:fltk-1.3.4-1/png/pngrtran.c ****                   }
3301:fltk-1.3.4-1/png/pngrtran.c ****                   break;
3302:fltk-1.3.4-1/png/pngrtran.c ****                }
3303:fltk-1.3.4-1/png/pngrtran.c **** 
3304:fltk-1.3.4-1/png/pngrtran.c ****                case 4:
3305:fltk-1.3.4-1/png/pngrtran.c ****                {
3306:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3307:fltk-1.3.4-1/png/pngrtran.c ****                   if (gamma_table != NULL)
3308:fltk-1.3.4-1/png/pngrtran.c ****                   {
3309:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3310:fltk-1.3.4-1/png/pngrtran.c ****                      shift = 4;
3311:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++)
3312:fltk-1.3.4-1/png/pngrtran.c ****                      {
3313:fltk-1.3.4-1/png/pngrtran.c ****                         if ((png_uint_16)((*sp >> shift) & 0x0f)
3314:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
3315:fltk-1.3.4-1/png/pngrtran.c ****                         {
3316:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int tmp = *sp & (0xf0f >> (4 - shift));
3317:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
3318:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)(tmp & 0xff);
3319:fltk-1.3.4-1/png/pngrtran.c ****                         }
3320:fltk-1.3.4-1/png/pngrtran.c **** 
3321:fltk-1.3.4-1/png/pngrtran.c ****                         else
3322:fltk-1.3.4-1/png/pngrtran.c ****                         {
3323:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int p = (*sp >> shift) & 0x0f;
3324:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int g = (gamma_table[p | (p << 4)] >> 4) &
3325:fltk-1.3.4-1/png/pngrtran.c ****                               0x0f;
3326:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int tmp = *sp & (0xf0f >> (4 - shift));
3327:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
3328:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)(tmp & 0xff);
3329:fltk-1.3.4-1/png/pngrtran.c ****                         }
3330:fltk-1.3.4-1/png/pngrtran.c **** 
3331:fltk-1.3.4-1/png/pngrtran.c ****                         if (shift == 0)
3332:fltk-1.3.4-1/png/pngrtran.c ****                         {
3333:fltk-1.3.4-1/png/pngrtran.c ****                            shift = 4;
3334:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
3335:fltk-1.3.4-1/png/pngrtran.c ****                         }
3336:fltk-1.3.4-1/png/pngrtran.c **** 
3337:fltk-1.3.4-1/png/pngrtran.c ****                         else
3338:fltk-1.3.4-1/png/pngrtran.c ****                            shift -= 4;
3339:fltk-1.3.4-1/png/pngrtran.c ****                      }
3340:fltk-1.3.4-1/png/pngrtran.c ****                   }
3341:fltk-1.3.4-1/png/pngrtran.c **** 
3342:fltk-1.3.4-1/png/pngrtran.c ****                   else
3343:fltk-1.3.4-1/png/pngrtran.c **** #endif
3344:fltk-1.3.4-1/png/pngrtran.c ****                   {
3345:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3346:fltk-1.3.4-1/png/pngrtran.c ****                      shift = 4;
3347:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++)
3348:fltk-1.3.4-1/png/pngrtran.c ****                      {
3349:fltk-1.3.4-1/png/pngrtran.c ****                         if ((png_uint_16)((*sp >> shift) & 0x0f)
3350:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
3351:fltk-1.3.4-1/png/pngrtran.c ****                         {
3352:fltk-1.3.4-1/png/pngrtran.c ****                            unsigned int tmp = *sp & (0xf0f >> (4 - shift));
3353:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
3354:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)(tmp & 0xff);
3355:fltk-1.3.4-1/png/pngrtran.c ****                         }
3356:fltk-1.3.4-1/png/pngrtran.c **** 
3357:fltk-1.3.4-1/png/pngrtran.c ****                         if (shift == 0)
3358:fltk-1.3.4-1/png/pngrtran.c ****                         {
3359:fltk-1.3.4-1/png/pngrtran.c ****                            shift = 4;
3360:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
3361:fltk-1.3.4-1/png/pngrtran.c ****                         }
3362:fltk-1.3.4-1/png/pngrtran.c **** 
3363:fltk-1.3.4-1/png/pngrtran.c ****                         else
3364:fltk-1.3.4-1/png/pngrtran.c ****                            shift -= 4;
3365:fltk-1.3.4-1/png/pngrtran.c ****                      }
3366:fltk-1.3.4-1/png/pngrtran.c ****                   }
3367:fltk-1.3.4-1/png/pngrtran.c ****                   break;
3368:fltk-1.3.4-1/png/pngrtran.c ****                }
3369:fltk-1.3.4-1/png/pngrtran.c **** 
3370:fltk-1.3.4-1/png/pngrtran.c ****                case 8:
3371:fltk-1.3.4-1/png/pngrtran.c ****                {
3372:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3373:fltk-1.3.4-1/png/pngrtran.c ****                   if (gamma_table != NULL)
3374:fltk-1.3.4-1/png/pngrtran.c ****                   {
3375:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3376:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++, sp++)
3377:fltk-1.3.4-1/png/pngrtran.c ****                      {
3378:fltk-1.3.4-1/png/pngrtran.c ****                         if (*sp == png_ptr->trans_color.gray)
3379:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)png_ptr->background.gray;
3380:fltk-1.3.4-1/png/pngrtran.c **** 
3381:fltk-1.3.4-1/png/pngrtran.c ****                         else
3382:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = gamma_table[*sp];
3383:fltk-1.3.4-1/png/pngrtran.c ****                      }
3384:fltk-1.3.4-1/png/pngrtran.c ****                   }
3385:fltk-1.3.4-1/png/pngrtran.c ****                   else
3386:fltk-1.3.4-1/png/pngrtran.c **** #endif
3387:fltk-1.3.4-1/png/pngrtran.c ****                   {
3388:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3389:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++, sp++)
3390:fltk-1.3.4-1/png/pngrtran.c ****                      {
3391:fltk-1.3.4-1/png/pngrtran.c ****                         if (*sp == png_ptr->trans_color.gray)
3392:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)png_ptr->background.gray;
3393:fltk-1.3.4-1/png/pngrtran.c ****                      }
3394:fltk-1.3.4-1/png/pngrtran.c ****                   }
3395:fltk-1.3.4-1/png/pngrtran.c ****                   break;
3396:fltk-1.3.4-1/png/pngrtran.c ****                }
3397:fltk-1.3.4-1/png/pngrtran.c **** 
3398:fltk-1.3.4-1/png/pngrtran.c ****                case 16:
3399:fltk-1.3.4-1/png/pngrtran.c ****                {
3400:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3401:fltk-1.3.4-1/png/pngrtran.c ****                   if (gamma_16 != NULL)
3402:fltk-1.3.4-1/png/pngrtran.c ****                   {
3403:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3404:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++, sp += 2)
3405:fltk-1.3.4-1/png/pngrtran.c ****                      {
3406:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 v;
3407:fltk-1.3.4-1/png/pngrtran.c **** 
3408:fltk-1.3.4-1/png/pngrtran.c ****                         v = (png_uint_16)(((*sp) << 8) + *(sp + 1));
3409:fltk-1.3.4-1/png/pngrtran.c **** 
3410:fltk-1.3.4-1/png/pngrtran.c ****                         if (v == png_ptr->trans_color.gray)
3411:fltk-1.3.4-1/png/pngrtran.c ****                         {
3412:fltk-1.3.4-1/png/pngrtran.c ****                            /* Background is already in screen gamma */
3413:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)((png_ptr->background.gray >> 8)
3414:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3415:fltk-1.3.4-1/png/pngrtran.c ****                            *(sp + 1) = (png_byte)(png_ptr->background.gray
3416:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3417:fltk-1.3.4-1/png/pngrtran.c ****                         }
3418:fltk-1.3.4-1/png/pngrtran.c **** 
3419:fltk-1.3.4-1/png/pngrtran.c ****                         else
3420:fltk-1.3.4-1/png/pngrtran.c ****                         {
3421:fltk-1.3.4-1/png/pngrtran.c ****                            v = gamma_16[*(sp + 1) >> gamma_shift][*sp];
3422:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)((v >> 8) & 0xff);
3423:fltk-1.3.4-1/png/pngrtran.c ****                            *(sp + 1) = (png_byte)(v & 0xff);
3424:fltk-1.3.4-1/png/pngrtran.c ****                         }
3425:fltk-1.3.4-1/png/pngrtran.c ****                      }
3426:fltk-1.3.4-1/png/pngrtran.c ****                   }
3427:fltk-1.3.4-1/png/pngrtran.c ****                   else
3428:fltk-1.3.4-1/png/pngrtran.c **** #endif
3429:fltk-1.3.4-1/png/pngrtran.c ****                   {
3430:fltk-1.3.4-1/png/pngrtran.c ****                      sp = row;
3431:fltk-1.3.4-1/png/pngrtran.c ****                      for (i = 0; i < row_width; i++, sp += 2)
3432:fltk-1.3.4-1/png/pngrtran.c ****                      {
3433:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 v;
3434:fltk-1.3.4-1/png/pngrtran.c **** 
3435:fltk-1.3.4-1/png/pngrtran.c ****                         v = (png_uint_16)(((*sp) << 8) + *(sp + 1));
3436:fltk-1.3.4-1/png/pngrtran.c **** 
3437:fltk-1.3.4-1/png/pngrtran.c ****                         if (v == png_ptr->trans_color.gray)
3438:fltk-1.3.4-1/png/pngrtran.c ****                         {
3439:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)((png_ptr->background.gray >> 8)
3440:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3441:fltk-1.3.4-1/png/pngrtran.c ****                            *(sp + 1) = (png_byte)(png_ptr->background.gray
3442:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3443:fltk-1.3.4-1/png/pngrtran.c ****                         }
3444:fltk-1.3.4-1/png/pngrtran.c ****                      }
3445:fltk-1.3.4-1/png/pngrtran.c ****                   }
3446:fltk-1.3.4-1/png/pngrtran.c ****                   break;
3447:fltk-1.3.4-1/png/pngrtran.c ****                }
3448:fltk-1.3.4-1/png/pngrtran.c **** 
3449:fltk-1.3.4-1/png/pngrtran.c ****                default:
3450:fltk-1.3.4-1/png/pngrtran.c ****                   break;
3451:fltk-1.3.4-1/png/pngrtran.c ****             }
3452:fltk-1.3.4-1/png/pngrtran.c ****             break;
3453:fltk-1.3.4-1/png/pngrtran.c ****          }
3454:fltk-1.3.4-1/png/pngrtran.c **** 
3455:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_RGB:
3456:fltk-1.3.4-1/png/pngrtran.c ****          {
3457:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 8)
3458:fltk-1.3.4-1/png/pngrtran.c ****             {
3459:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3460:fltk-1.3.4-1/png/pngrtran.c ****                if (gamma_table != NULL)
3461:fltk-1.3.4-1/png/pngrtran.c ****                {
3462:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3463:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 3)
3464:fltk-1.3.4-1/png/pngrtran.c ****                   {
3465:fltk-1.3.4-1/png/pngrtran.c ****                      if (*sp == png_ptr->trans_color.red &&
3466:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 1) == png_ptr->trans_color.green &&
3467:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 2) == png_ptr->trans_color.blue)
3468:fltk-1.3.4-1/png/pngrtran.c ****                      {
3469:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)png_ptr->background.red;
3470:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
3471:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
3472:fltk-1.3.4-1/png/pngrtran.c ****                      }
3473:fltk-1.3.4-1/png/pngrtran.c **** 
3474:fltk-1.3.4-1/png/pngrtran.c ****                      else
3475:fltk-1.3.4-1/png/pngrtran.c ****                      {
3476:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = gamma_table[*sp];
3477:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = gamma_table[*(sp + 1)];
3478:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = gamma_table[*(sp + 2)];
3479:fltk-1.3.4-1/png/pngrtran.c ****                      }
3480:fltk-1.3.4-1/png/pngrtran.c ****                   }
3481:fltk-1.3.4-1/png/pngrtran.c ****                }
3482:fltk-1.3.4-1/png/pngrtran.c ****                else
3483:fltk-1.3.4-1/png/pngrtran.c **** #endif
3484:fltk-1.3.4-1/png/pngrtran.c ****                {
3485:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3486:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 3)
3487:fltk-1.3.4-1/png/pngrtran.c ****                   {
3488:fltk-1.3.4-1/png/pngrtran.c ****                      if (*sp == png_ptr->trans_color.red &&
3489:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 1) == png_ptr->trans_color.green &&
3490:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 2) == png_ptr->trans_color.blue)
3491:fltk-1.3.4-1/png/pngrtran.c ****                      {
3492:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)png_ptr->background.red;
3493:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
3494:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
3495:fltk-1.3.4-1/png/pngrtran.c ****                      }
3496:fltk-1.3.4-1/png/pngrtran.c ****                   }
3497:fltk-1.3.4-1/png/pngrtran.c ****                }
3498:fltk-1.3.4-1/png/pngrtran.c ****             }
3499:fltk-1.3.4-1/png/pngrtran.c ****             else /* if (row_info->bit_depth == 16) */
3500:fltk-1.3.4-1/png/pngrtran.c ****             {
3501:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3502:fltk-1.3.4-1/png/pngrtran.c ****                if (gamma_16 != NULL)
3503:fltk-1.3.4-1/png/pngrtran.c ****                {
3504:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3505:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 6)
3506:fltk-1.3.4-1/png/pngrtran.c ****                   {
3507:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 r = (png_uint_16)(((*sp) << 8) + *(sp + 1));
3508:fltk-1.3.4-1/png/pngrtran.c **** 
3509:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 g = (png_uint_16)(((*(sp + 2)) << 8)
3510:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 3));
3511:fltk-1.3.4-1/png/pngrtran.c **** 
3512:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 b = (png_uint_16)(((*(sp + 4)) << 8)
3513:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 5));
3514:fltk-1.3.4-1/png/pngrtran.c **** 
3515:fltk-1.3.4-1/png/pngrtran.c ****                      if (r == png_ptr->trans_color.red &&
3516:fltk-1.3.4-1/png/pngrtran.c ****                          g == png_ptr->trans_color.green &&
3517:fltk-1.3.4-1/png/pngrtran.c ****                          b == png_ptr->trans_color.blue)
3518:fltk-1.3.4-1/png/pngrtran.c ****                      {
3519:fltk-1.3.4-1/png/pngrtran.c ****                         /* Background is already in screen gamma */
3520:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((png_ptr->background.red >> 8) & 0xff);
3521:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
3522:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
3523:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3524:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(png_ptr->background.green
3525:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3526:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((png_ptr->background.blue >> 8)
3527:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3528:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(png_ptr->background.blue & 0xff);
3529:fltk-1.3.4-1/png/pngrtran.c ****                      }
3530:fltk-1.3.4-1/png/pngrtran.c **** 
3531:fltk-1.3.4-1/png/pngrtran.c ****                      else
3532:fltk-1.3.4-1/png/pngrtran.c ****                      {
3533:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 v = gamma_16[*(sp + 1) >> gamma_shift][*sp];
3534:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
3535:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
3536:fltk-1.3.4-1/png/pngrtran.c **** 
3537:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16[*(sp + 3) >> gamma_shift][*(sp + 2)];
3538:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
3539:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
3540:fltk-1.3.4-1/png/pngrtran.c **** 
3541:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16[*(sp + 5) >> gamma_shift][*(sp + 4)];
3542:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
3543:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
3544:fltk-1.3.4-1/png/pngrtran.c ****                      }
3545:fltk-1.3.4-1/png/pngrtran.c ****                   }
3546:fltk-1.3.4-1/png/pngrtran.c ****                }
3547:fltk-1.3.4-1/png/pngrtran.c **** 
3548:fltk-1.3.4-1/png/pngrtran.c ****                else
3549:fltk-1.3.4-1/png/pngrtran.c **** #endif
3550:fltk-1.3.4-1/png/pngrtran.c ****                {
3551:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3552:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 6)
3553:fltk-1.3.4-1/png/pngrtran.c ****                   {
3554:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 r = (png_uint_16)(((*sp) << 8) + *(sp + 1));
3555:fltk-1.3.4-1/png/pngrtran.c **** 
3556:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 g = (png_uint_16)(((*(sp + 2)) << 8)
3557:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 3));
3558:fltk-1.3.4-1/png/pngrtran.c **** 
3559:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 b = (png_uint_16)(((*(sp + 4)) << 8)
3560:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 5));
3561:fltk-1.3.4-1/png/pngrtran.c **** 
3562:fltk-1.3.4-1/png/pngrtran.c ****                      if (r == png_ptr->trans_color.red &&
3563:fltk-1.3.4-1/png/pngrtran.c ****                          g == png_ptr->trans_color.green &&
3564:fltk-1.3.4-1/png/pngrtran.c ****                          b == png_ptr->trans_color.blue)
3565:fltk-1.3.4-1/png/pngrtran.c ****                      {
3566:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((png_ptr->background.red >> 8) & 0xff);
3567:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
3568:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
3569:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3570:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(png_ptr->background.green
3571:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3572:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((png_ptr->background.blue >> 8)
3573:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3574:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(png_ptr->background.blue & 0xff);
3575:fltk-1.3.4-1/png/pngrtran.c ****                      }
3576:fltk-1.3.4-1/png/pngrtran.c ****                   }
3577:fltk-1.3.4-1/png/pngrtran.c ****                }
3578:fltk-1.3.4-1/png/pngrtran.c ****             }
3579:fltk-1.3.4-1/png/pngrtran.c ****             break;
3580:fltk-1.3.4-1/png/pngrtran.c ****          }
3581:fltk-1.3.4-1/png/pngrtran.c **** 
3582:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_GRAY_ALPHA:
3583:fltk-1.3.4-1/png/pngrtran.c ****          {
3584:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 8)
3585:fltk-1.3.4-1/png/pngrtran.c ****             {
3586:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3587:fltk-1.3.4-1/png/pngrtran.c ****                if (gamma_to_1 != NULL && gamma_from_1 != NULL &&
3588:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_table != NULL)
3589:fltk-1.3.4-1/png/pngrtran.c ****                {
3590:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3591:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 2)
3592:fltk-1.3.4-1/png/pngrtran.c ****                   {
3593:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 a = *(sp + 1);
3594:fltk-1.3.4-1/png/pngrtran.c **** 
3595:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == 0xff)
3596:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = gamma_table[*sp];
3597:fltk-1.3.4-1/png/pngrtran.c **** 
3598:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a == 0)
3599:fltk-1.3.4-1/png/pngrtran.c ****                      {
3600:fltk-1.3.4-1/png/pngrtran.c ****                         /* Background is already in screen gamma */
3601:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)png_ptr->background.gray;
3602:fltk-1.3.4-1/png/pngrtran.c ****                      }
3603:fltk-1.3.4-1/png/pngrtran.c **** 
3604:fltk-1.3.4-1/png/pngrtran.c ****                      else
3605:fltk-1.3.4-1/png/pngrtran.c ****                      {
3606:fltk-1.3.4-1/png/pngrtran.c ****                         png_byte v, w;
3607:fltk-1.3.4-1/png/pngrtran.c **** 
3608:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_to_1[*sp];
3609:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.gray);
3610:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
3611:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_from_1[w];
3612:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = w;
3613:fltk-1.3.4-1/png/pngrtran.c ****                      }
3614:fltk-1.3.4-1/png/pngrtran.c ****                   }
3615:fltk-1.3.4-1/png/pngrtran.c ****                }
3616:fltk-1.3.4-1/png/pngrtran.c ****                else
3617:fltk-1.3.4-1/png/pngrtran.c **** #endif
3618:fltk-1.3.4-1/png/pngrtran.c ****                {
3619:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3620:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 2)
3621:fltk-1.3.4-1/png/pngrtran.c ****                   {
3622:fltk-1.3.4-1/png/pngrtran.c ****                      png_byte a = *(sp + 1);
3623:fltk-1.3.4-1/png/pngrtran.c **** 
3624:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == 0)
3625:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)png_ptr->background.gray;
3626:fltk-1.3.4-1/png/pngrtran.c **** 
3627:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a < 0xff)
3628:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(*sp, *sp, a, png_ptr->background.gray);
3629:fltk-1.3.4-1/png/pngrtran.c ****                   }
3630:fltk-1.3.4-1/png/pngrtran.c ****                }
3631:fltk-1.3.4-1/png/pngrtran.c ****             }
3632:fltk-1.3.4-1/png/pngrtran.c ****             else /* if (png_ptr->bit_depth == 16) */
3633:fltk-1.3.4-1/png/pngrtran.c ****             {
3634:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3635:fltk-1.3.4-1/png/pngrtran.c ****                if (gamma_16 != NULL && gamma_16_from_1 != NULL &&
3636:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_16_to_1 != NULL)
3637:fltk-1.3.4-1/png/pngrtran.c ****                {
3638:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3639:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 4)
3640:fltk-1.3.4-1/png/pngrtran.c ****                   {
3641:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 a = (png_uint_16)(((*(sp + 2)) << 8)
3642:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 3));
3643:fltk-1.3.4-1/png/pngrtran.c **** 
3644:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == (png_uint_16)0xffff)
3645:fltk-1.3.4-1/png/pngrtran.c ****                      {
3646:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 v;
3647:fltk-1.3.4-1/png/pngrtran.c **** 
3648:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16[*(sp + 1) >> gamma_shift][*sp];
3649:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
3650:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
3651:fltk-1.3.4-1/png/pngrtran.c ****                      }
3652:fltk-1.3.4-1/png/pngrtran.c **** 
3653:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a == 0)
3654:fltk-1.3.4-1/png/pngrtran.c ****                      {
3655:fltk-1.3.4-1/png/pngrtran.c ****                         /* Background is already in screen gamma */
3656:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((png_ptr->background.gray >> 8)
3657:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3658:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.gray & 0xff);
3659:fltk-1.3.4-1/png/pngrtran.c ****                      }
3660:fltk-1.3.4-1/png/pngrtran.c **** 
3661:fltk-1.3.4-1/png/pngrtran.c ****                      else
3662:fltk-1.3.4-1/png/pngrtran.c ****                      {
3663:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 g, v, w;
3664:fltk-1.3.4-1/png/pngrtran.c **** 
3665:fltk-1.3.4-1/png/pngrtran.c ****                         g = gamma_16_to_1[*(sp + 1) >> gamma_shift][*sp];
3666:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(v, g, a, png_ptr->background_1.gray);
3667:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize != 0)
3668:fltk-1.3.4-1/png/pngrtran.c ****                            w = v;
3669:fltk-1.3.4-1/png/pngrtran.c ****                         else
3670:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[(v&0xff) >> gamma_shift][v >> 8];
3671:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((w >> 8) & 0xff);
3672:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(w & 0xff);
3673:fltk-1.3.4-1/png/pngrtran.c ****                      }
3674:fltk-1.3.4-1/png/pngrtran.c ****                   }
3675:fltk-1.3.4-1/png/pngrtran.c ****                }
3676:fltk-1.3.4-1/png/pngrtran.c ****                else
3677:fltk-1.3.4-1/png/pngrtran.c **** #endif
3678:fltk-1.3.4-1/png/pngrtran.c ****                {
3679:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3680:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 4)
3681:fltk-1.3.4-1/png/pngrtran.c ****                   {
3682:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 a = (png_uint_16)(((*(sp + 2)) << 8)
3683:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 3));
3684:fltk-1.3.4-1/png/pngrtran.c **** 
3685:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == 0)
3686:fltk-1.3.4-1/png/pngrtran.c ****                      {
3687:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((png_ptr->background.gray >> 8)
3688:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3689:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.gray & 0xff);
3690:fltk-1.3.4-1/png/pngrtran.c ****                      }
3691:fltk-1.3.4-1/png/pngrtran.c **** 
3692:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a < 0xffff)
3693:fltk-1.3.4-1/png/pngrtran.c ****                      {
3694:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 g, v;
3695:fltk-1.3.4-1/png/pngrtran.c **** 
3696:fltk-1.3.4-1/png/pngrtran.c ****                         g = (png_uint_16)(((*sp) << 8) + *(sp + 1));
3697:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(v, g, a, png_ptr->background.gray);
3698:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
3699:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
3700:fltk-1.3.4-1/png/pngrtran.c ****                      }
3701:fltk-1.3.4-1/png/pngrtran.c ****                   }
3702:fltk-1.3.4-1/png/pngrtran.c ****                }
3703:fltk-1.3.4-1/png/pngrtran.c ****             }
3704:fltk-1.3.4-1/png/pngrtran.c ****             break;
3705:fltk-1.3.4-1/png/pngrtran.c ****          }
3706:fltk-1.3.4-1/png/pngrtran.c **** 
3707:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_RGB_ALPHA:
3708:fltk-1.3.4-1/png/pngrtran.c ****          {
3709:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 8)
3710:fltk-1.3.4-1/png/pngrtran.c ****             {
3711:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3712:fltk-1.3.4-1/png/pngrtran.c ****                if (gamma_to_1 != NULL && gamma_from_1 != NULL &&
3713:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_table != NULL)
3714:fltk-1.3.4-1/png/pngrtran.c ****                {
3715:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3716:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 4)
3717:fltk-1.3.4-1/png/pngrtran.c ****                   {
3718:fltk-1.3.4-1/png/pngrtran.c ****                      png_byte a = *(sp + 3);
3719:fltk-1.3.4-1/png/pngrtran.c **** 
3720:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == 0xff)
3721:fltk-1.3.4-1/png/pngrtran.c ****                      {
3722:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = gamma_table[*sp];
3723:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = gamma_table[*(sp + 1)];
3724:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = gamma_table[*(sp + 2)];
3725:fltk-1.3.4-1/png/pngrtran.c ****                      }
3726:fltk-1.3.4-1/png/pngrtran.c **** 
3727:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a == 0)
3728:fltk-1.3.4-1/png/pngrtran.c ****                      {
3729:fltk-1.3.4-1/png/pngrtran.c ****                         /* Background is already in screen gamma */
3730:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)png_ptr->background.red;
3731:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
3732:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
3733:fltk-1.3.4-1/png/pngrtran.c ****                      }
3734:fltk-1.3.4-1/png/pngrtran.c **** 
3735:fltk-1.3.4-1/png/pngrtran.c ****                      else
3736:fltk-1.3.4-1/png/pngrtran.c ****                      {
3737:fltk-1.3.4-1/png/pngrtran.c ****                         png_byte v, w;
3738:fltk-1.3.4-1/png/pngrtran.c **** 
3739:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_to_1[*sp];
3740:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.red);
3741:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0) w = gamma_from_1[w];
3742:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = w;
3743:fltk-1.3.4-1/png/pngrtran.c **** 
3744:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_to_1[*(sp + 1)];
3745:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.green);
3746:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0) w = gamma_from_1[w];
3747:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = w;
3748:fltk-1.3.4-1/png/pngrtran.c **** 
3749:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_to_1[*(sp + 2)];
3750:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.blue);
3751:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0) w = gamma_from_1[w];
3752:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = w;
3753:fltk-1.3.4-1/png/pngrtran.c ****                      }
3754:fltk-1.3.4-1/png/pngrtran.c ****                   }
3755:fltk-1.3.4-1/png/pngrtran.c ****                }
3756:fltk-1.3.4-1/png/pngrtran.c ****                else
3757:fltk-1.3.4-1/png/pngrtran.c **** #endif
3758:fltk-1.3.4-1/png/pngrtran.c ****                {
3759:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3760:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 4)
3761:fltk-1.3.4-1/png/pngrtran.c ****                   {
3762:fltk-1.3.4-1/png/pngrtran.c ****                      png_byte a = *(sp + 3);
3763:fltk-1.3.4-1/png/pngrtran.c **** 
3764:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == 0)
3765:fltk-1.3.4-1/png/pngrtran.c ****                      {
3766:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)png_ptr->background.red;
3767:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
3768:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
3769:fltk-1.3.4-1/png/pngrtran.c ****                      }
3770:fltk-1.3.4-1/png/pngrtran.c **** 
3771:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a < 0xff)
3772:fltk-1.3.4-1/png/pngrtran.c ****                      {
3773:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(*sp, *sp, a, png_ptr->background.red);
3774:fltk-1.3.4-1/png/pngrtran.c **** 
3775:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(*(sp + 1), *(sp + 1), a,
3776:fltk-1.3.4-1/png/pngrtran.c ****                             png_ptr->background.green);
3777:fltk-1.3.4-1/png/pngrtran.c **** 
3778:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(*(sp + 2), *(sp + 2), a,
3779:fltk-1.3.4-1/png/pngrtran.c ****                             png_ptr->background.blue);
3780:fltk-1.3.4-1/png/pngrtran.c ****                      }
3781:fltk-1.3.4-1/png/pngrtran.c ****                   }
3782:fltk-1.3.4-1/png/pngrtran.c ****                }
3783:fltk-1.3.4-1/png/pngrtran.c ****             }
3784:fltk-1.3.4-1/png/pngrtran.c ****             else /* if (row_info->bit_depth == 16) */
3785:fltk-1.3.4-1/png/pngrtran.c ****             {
3786:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3787:fltk-1.3.4-1/png/pngrtran.c ****                if (gamma_16 != NULL && gamma_16_from_1 != NULL &&
3788:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_16_to_1 != NULL)
3789:fltk-1.3.4-1/png/pngrtran.c ****                {
3790:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3791:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 8)
3792:fltk-1.3.4-1/png/pngrtran.c ****                   {
3793:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 a = (png_uint_16)(((png_uint_16)(*(sp + 6))
3794:fltk-1.3.4-1/png/pngrtran.c ****                          << 8) + (png_uint_16)(*(sp + 7)));
3795:fltk-1.3.4-1/png/pngrtran.c **** 
3796:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == (png_uint_16)0xffff)
3797:fltk-1.3.4-1/png/pngrtran.c ****                      {
3798:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 v;
3799:fltk-1.3.4-1/png/pngrtran.c **** 
3800:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16[*(sp + 1) >> gamma_shift][*sp];
3801:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
3802:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
3803:fltk-1.3.4-1/png/pngrtran.c **** 
3804:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16[*(sp + 3) >> gamma_shift][*(sp + 2)];
3805:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
3806:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
3807:fltk-1.3.4-1/png/pngrtran.c **** 
3808:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16[*(sp + 5) >> gamma_shift][*(sp + 4)];
3809:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
3810:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
3811:fltk-1.3.4-1/png/pngrtran.c ****                      }
3812:fltk-1.3.4-1/png/pngrtran.c **** 
3813:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a == 0)
3814:fltk-1.3.4-1/png/pngrtran.c ****                      {
3815:fltk-1.3.4-1/png/pngrtran.c ****                         /* Background is already in screen gamma */
3816:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((png_ptr->background.red >> 8) & 0xff);
3817:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
3818:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
3819:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3820:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(png_ptr->background.green
3821:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3822:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((png_ptr->background.blue >> 8)
3823:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3824:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(png_ptr->background.blue & 0xff);
3825:fltk-1.3.4-1/png/pngrtran.c ****                      }
3826:fltk-1.3.4-1/png/pngrtran.c **** 
3827:fltk-1.3.4-1/png/pngrtran.c ****                      else
3828:fltk-1.3.4-1/png/pngrtran.c ****                      {
3829:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 v, w;
3830:fltk-1.3.4-1/png/pngrtran.c **** 
3831:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16_to_1[*(sp + 1) >> gamma_shift][*sp];
3832:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.red);
3833:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
3834:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
3835:fltk-1.3.4-1/png/pngrtran.c ****                                 8];
3836:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((w >> 8) & 0xff);
3837:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(w & 0xff);
3838:fltk-1.3.4-1/png/pngrtran.c **** 
3839:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16_to_1[*(sp + 3) >> gamma_shift][*(sp + 2)];
3840:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.green);
3841:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
3842:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
3843:fltk-1.3.4-1/png/pngrtran.c ****                                 8];
3844:fltk-1.3.4-1/png/pngrtran.c **** 
3845:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((w >> 8) & 0xff);
3846:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(w & 0xff);
3847:fltk-1.3.4-1/png/pngrtran.c **** 
3848:fltk-1.3.4-1/png/pngrtran.c ****                         v = gamma_16_to_1[*(sp + 5) >> gamma_shift][*(sp + 4)];
3849:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.blue);
3850:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
3851:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
3852:fltk-1.3.4-1/png/pngrtran.c ****                                 8];
3853:fltk-1.3.4-1/png/pngrtran.c **** 
3854:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((w >> 8) & 0xff);
3855:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(w & 0xff);
3856:fltk-1.3.4-1/png/pngrtran.c ****                      }
3857:fltk-1.3.4-1/png/pngrtran.c ****                   }
3858:fltk-1.3.4-1/png/pngrtran.c ****                }
3859:fltk-1.3.4-1/png/pngrtran.c **** 
3860:fltk-1.3.4-1/png/pngrtran.c ****                else
3861:fltk-1.3.4-1/png/pngrtran.c **** #endif
3862:fltk-1.3.4-1/png/pngrtran.c ****                {
3863:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row;
3864:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++, sp += 8)
3865:fltk-1.3.4-1/png/pngrtran.c ****                   {
3866:fltk-1.3.4-1/png/pngrtran.c ****                      png_uint_16 a = (png_uint_16)(((png_uint_16)(*(sp + 6))
3867:fltk-1.3.4-1/png/pngrtran.c ****                          << 8) + (png_uint_16)(*(sp + 7)));
3868:fltk-1.3.4-1/png/pngrtran.c **** 
3869:fltk-1.3.4-1/png/pngrtran.c ****                      if (a == 0)
3870:fltk-1.3.4-1/png/pngrtran.c ****                      {
3871:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((png_ptr->background.red >> 8) & 0xff);
3872:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
3873:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
3874:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3875:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(png_ptr->background.green
3876:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3877:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((png_ptr->background.blue >> 8)
3878:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
3879:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(png_ptr->background.blue & 0xff);
3880:fltk-1.3.4-1/png/pngrtran.c ****                      }
3881:fltk-1.3.4-1/png/pngrtran.c **** 
3882:fltk-1.3.4-1/png/pngrtran.c ****                      else if (a < 0xffff)
3883:fltk-1.3.4-1/png/pngrtran.c ****                      {
3884:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 v;
3885:fltk-1.3.4-1/png/pngrtran.c **** 
3886:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 r = (png_uint_16)(((*sp) << 8) + *(sp + 1));
3887:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 g = (png_uint_16)(((*(sp + 2)) << 8)
3888:fltk-1.3.4-1/png/pngrtran.c ****                             + *(sp + 3));
3889:fltk-1.3.4-1/png/pngrtran.c ****                         png_uint_16 b = (png_uint_16)(((*(sp + 4)) << 8)
3890:fltk-1.3.4-1/png/pngrtran.c ****                             + *(sp + 5));
3891:fltk-1.3.4-1/png/pngrtran.c **** 
3892:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(v, r, a, png_ptr->background.red);
3893:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
3894:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
3895:fltk-1.3.4-1/png/pngrtran.c **** 
3896:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(v, g, a, png_ptr->background.green);
3897:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
3898:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
3899:fltk-1.3.4-1/png/pngrtran.c **** 
3900:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(v, b, a, png_ptr->background.blue);
3901:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
3902:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
3903:fltk-1.3.4-1/png/pngrtran.c ****                      }
3904:fltk-1.3.4-1/png/pngrtran.c ****                   }
3905:fltk-1.3.4-1/png/pngrtran.c ****                }
3906:fltk-1.3.4-1/png/pngrtran.c ****             }
3907:fltk-1.3.4-1/png/pngrtran.c ****             break;
3908:fltk-1.3.4-1/png/pngrtran.c ****          }
3909:fltk-1.3.4-1/png/pngrtran.c **** 
3910:fltk-1.3.4-1/png/pngrtran.c ****          default:
3911:fltk-1.3.4-1/png/pngrtran.c ****             break;
3912:fltk-1.3.4-1/png/pngrtran.c ****       }
3913:fltk-1.3.4-1/png/pngrtran.c ****    }
3914:fltk-1.3.4-1/png/pngrtran.c **** }
3915:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_BACKGROUND || READ_ALPHA_MODE */
3916:fltk-1.3.4-1/png/pngrtran.c **** 
3917:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
3918:fltk-1.3.4-1/png/pngrtran.c **** /* Gamma correct the image, avoiding the alpha channel.  Make sure
3919:fltk-1.3.4-1/png/pngrtran.c ****  * you do this after you deal with the transparency issue on grayscale
3920:fltk-1.3.4-1/png/pngrtran.c ****  * or RGB images. If your bit depth is 8, use gamma_table, if it
3921:fltk-1.3.4-1/png/pngrtran.c ****  * is 16, use gamma_16_table and gamma_shift.  Build these with
3922:fltk-1.3.4-1/png/pngrtran.c ****  * build_gamma_table().
3923:fltk-1.3.4-1/png/pngrtran.c ****  */
3924:fltk-1.3.4-1/png/pngrtran.c **** static void
3925:fltk-1.3.4-1/png/pngrtran.c **** png_do_gamma(png_row_infop row_info, png_bytep row, png_structrp png_ptr)
3926:fltk-1.3.4-1/png/pngrtran.c **** {
3927:fltk-1.3.4-1/png/pngrtran.c ****    png_const_bytep gamma_table = png_ptr->gamma_table;
3928:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16_table = png_ptr->gamma_16_table;
3929:fltk-1.3.4-1/png/pngrtran.c ****    int gamma_shift = png_ptr->gamma_shift;
3930:fltk-1.3.4-1/png/pngrtran.c **** 
3931:fltk-1.3.4-1/png/pngrtran.c ****    png_bytep sp;
3932:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 i;
3933:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width=row_info->width;
3934:fltk-1.3.4-1/png/pngrtran.c **** 
3935:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_gamma");
3936:fltk-1.3.4-1/png/pngrtran.c **** 
3937:fltk-1.3.4-1/png/pngrtran.c ****    if (((row_info->bit_depth <= 8 && gamma_table != NULL) ||
3938:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->bit_depth == 16 && gamma_16_table != NULL)))
3939:fltk-1.3.4-1/png/pngrtran.c ****    {
3940:fltk-1.3.4-1/png/pngrtran.c ****       switch (row_info->color_type)
3941:fltk-1.3.4-1/png/pngrtran.c ****       {
3942:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_RGB:
3943:fltk-1.3.4-1/png/pngrtran.c ****          {
3944:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 8)
3945:fltk-1.3.4-1/png/pngrtran.c ****             {
3946:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
3947:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
3948:fltk-1.3.4-1/png/pngrtran.c ****                {
3949:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
3950:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
3951:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
3952:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
3953:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
3954:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
3955:fltk-1.3.4-1/png/pngrtran.c ****                }
3956:fltk-1.3.4-1/png/pngrtran.c ****             }
3957:fltk-1.3.4-1/png/pngrtran.c **** 
3958:fltk-1.3.4-1/png/pngrtran.c ****             else /* if (row_info->bit_depth == 16) */
3959:fltk-1.3.4-1/png/pngrtran.c ****             {
3960:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
3961:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
3962:fltk-1.3.4-1/png/pngrtran.c ****                {
3963:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 v;
3964:fltk-1.3.4-1/png/pngrtran.c **** 
3965:fltk-1.3.4-1/png/pngrtran.c ****                   v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3966:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
3967:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
3968:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
3969:fltk-1.3.4-1/png/pngrtran.c **** 
3970:fltk-1.3.4-1/png/pngrtran.c ****                   v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3971:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
3972:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
3973:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
3974:fltk-1.3.4-1/png/pngrtran.c **** 
3975:fltk-1.3.4-1/png/pngrtran.c ****                   v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
3976:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
3977:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
3978:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
3979:fltk-1.3.4-1/png/pngrtran.c ****                }
3980:fltk-1.3.4-1/png/pngrtran.c ****             }
3981:fltk-1.3.4-1/png/pngrtran.c ****             break;
3982:fltk-1.3.4-1/png/pngrtran.c ****          }
3983:fltk-1.3.4-1/png/pngrtran.c **** 
3984:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_RGB_ALPHA:
3985:fltk-1.3.4-1/png/pngrtran.c ****          {
3986:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 8)
3987:fltk-1.3.4-1/png/pngrtran.c ****             {
3988:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
3989:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
3990:fltk-1.3.4-1/png/pngrtran.c ****                {
3991:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
3992:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
3993:fltk-1.3.4-1/png/pngrtran.c **** 
3994:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
3995:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
3996:fltk-1.3.4-1/png/pngrtran.c **** 
3997:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
3998:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
3999:fltk-1.3.4-1/png/pngrtran.c **** 
4000:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
4001:fltk-1.3.4-1/png/pngrtran.c ****                }
4002:fltk-1.3.4-1/png/pngrtran.c ****             }
4003:fltk-1.3.4-1/png/pngrtran.c **** 
4004:fltk-1.3.4-1/png/pngrtran.c ****             else /* if (row_info->bit_depth == 16) */
4005:fltk-1.3.4-1/png/pngrtran.c ****             {
4006:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
4007:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4008:fltk-1.3.4-1/png/pngrtran.c ****                {
4009:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
4010:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
4011:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
4012:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
4013:fltk-1.3.4-1/png/pngrtran.c **** 
4014:fltk-1.3.4-1/png/pngrtran.c ****                   v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
4015:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
4016:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
4017:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
4018:fltk-1.3.4-1/png/pngrtran.c **** 
4019:fltk-1.3.4-1/png/pngrtran.c ****                   v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
4020:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
4021:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
4022:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 4;
4023:fltk-1.3.4-1/png/pngrtran.c ****                }
4024:fltk-1.3.4-1/png/pngrtran.c ****             }
4025:fltk-1.3.4-1/png/pngrtran.c ****             break;
4026:fltk-1.3.4-1/png/pngrtran.c ****          }
4027:fltk-1.3.4-1/png/pngrtran.c **** 
4028:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_GRAY_ALPHA:
4029:fltk-1.3.4-1/png/pngrtran.c ****          {
4030:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 8)
4031:fltk-1.3.4-1/png/pngrtran.c ****             {
4032:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
4033:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4034:fltk-1.3.4-1/png/pngrtran.c ****                {
4035:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
4036:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
4037:fltk-1.3.4-1/png/pngrtran.c ****                }
4038:fltk-1.3.4-1/png/pngrtran.c ****             }
4039:fltk-1.3.4-1/png/pngrtran.c **** 
4040:fltk-1.3.4-1/png/pngrtran.c ****             else /* if (row_info->bit_depth == 16) */
4041:fltk-1.3.4-1/png/pngrtran.c ****             {
4042:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
4043:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4044:fltk-1.3.4-1/png/pngrtran.c ****                {
4045:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
4046:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
4047:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
4048:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 4;
4049:fltk-1.3.4-1/png/pngrtran.c ****                }
4050:fltk-1.3.4-1/png/pngrtran.c ****             }
4051:fltk-1.3.4-1/png/pngrtran.c ****             break;
4052:fltk-1.3.4-1/png/pngrtran.c ****          }
4053:fltk-1.3.4-1/png/pngrtran.c **** 
4054:fltk-1.3.4-1/png/pngrtran.c ****          case PNG_COLOR_TYPE_GRAY:
4055:fltk-1.3.4-1/png/pngrtran.c ****          {
4056:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 2)
4057:fltk-1.3.4-1/png/pngrtran.c ****             {
4058:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
4059:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i += 4)
4060:fltk-1.3.4-1/png/pngrtran.c ****                {
4061:fltk-1.3.4-1/png/pngrtran.c ****                   int a = *sp & 0xc0;
4062:fltk-1.3.4-1/png/pngrtran.c ****                   int b = *sp & 0x30;
4063:fltk-1.3.4-1/png/pngrtran.c ****                   int c = *sp & 0x0c;
4064:fltk-1.3.4-1/png/pngrtran.c ****                   int d = *sp & 0x03;
4065:fltk-1.3.4-1/png/pngrtran.c **** 
4066:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)(
4067:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
4068:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(b<<2)|b|(b>>2)|(b>>4)])>>2) & 0x30)|
4069:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(c<<4)|(c<<2)|c|(c>>2)])>>4) & 0x0c)|
4070:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(d<<6)|(d<<4)|(d<<2)|d])>>6) ));
4071:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
4072:fltk-1.3.4-1/png/pngrtran.c ****                }
4073:fltk-1.3.4-1/png/pngrtran.c ****             }
4074:fltk-1.3.4-1/png/pngrtran.c **** 
4075:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 4)
4076:fltk-1.3.4-1/png/pngrtran.c ****             {
4077:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
4078:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i += 2)
4079:fltk-1.3.4-1/png/pngrtran.c ****                {
4080:fltk-1.3.4-1/png/pngrtran.c ****                   int msb = *sp & 0xf0;
4081:fltk-1.3.4-1/png/pngrtran.c ****                   int lsb = *sp & 0x0f;
4082:fltk-1.3.4-1/png/pngrtran.c **** 
4083:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((((int)gamma_table[msb | (msb >> 4)]) & 0xf0)
4084:fltk-1.3.4-1/png/pngrtran.c ****                       | (((int)gamma_table[(lsb << 4) | lsb]) >> 4));
4085:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
4086:fltk-1.3.4-1/png/pngrtran.c ****                }
4087:fltk-1.3.4-1/png/pngrtran.c ****             }
4088:fltk-1.3.4-1/png/pngrtran.c **** 
4089:fltk-1.3.4-1/png/pngrtran.c ****             else if (row_info->bit_depth == 8)
4090:fltk-1.3.4-1/png/pngrtran.c ****             {
4091:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
4092:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4093:fltk-1.3.4-1/png/pngrtran.c ****                {
4094:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = gamma_table[*sp];
4095:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
4096:fltk-1.3.4-1/png/pngrtran.c ****                }
4097:fltk-1.3.4-1/png/pngrtran.c ****             }
4098:fltk-1.3.4-1/png/pngrtran.c **** 
4099:fltk-1.3.4-1/png/pngrtran.c ****             else if (row_info->bit_depth == 16)
4100:fltk-1.3.4-1/png/pngrtran.c ****             {
4101:fltk-1.3.4-1/png/pngrtran.c ****                sp = row;
4102:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4103:fltk-1.3.4-1/png/pngrtran.c ****                {
4104:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 v = gamma_16_table[*(sp + 1) >> gamma_shift][*sp];
4105:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
4106:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
4107:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
4108:fltk-1.3.4-1/png/pngrtran.c ****                }
4109:fltk-1.3.4-1/png/pngrtran.c ****             }
4110:fltk-1.3.4-1/png/pngrtran.c ****             break;
4111:fltk-1.3.4-1/png/pngrtran.c ****          }
4112:fltk-1.3.4-1/png/pngrtran.c **** 
4113:fltk-1.3.4-1/png/pngrtran.c ****          default:
4114:fltk-1.3.4-1/png/pngrtran.c ****             break;
4115:fltk-1.3.4-1/png/pngrtran.c ****       }
4116:fltk-1.3.4-1/png/pngrtran.c ****    }
4117:fltk-1.3.4-1/png/pngrtran.c **** }
4118:fltk-1.3.4-1/png/pngrtran.c **** #endif
4119:fltk-1.3.4-1/png/pngrtran.c **** 
4120:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_ALPHA_MODE_SUPPORTED
4121:fltk-1.3.4-1/png/pngrtran.c **** /* Encode the alpha channel to the output gamma (the input channel is always
4122:fltk-1.3.4-1/png/pngrtran.c ****  * linear.)  Called only with color types that have an alpha channel.  Needs the
4123:fltk-1.3.4-1/png/pngrtran.c ****  * from_1 tables.
4124:fltk-1.3.4-1/png/pngrtran.c ****  */
4125:fltk-1.3.4-1/png/pngrtran.c **** static void
4126:fltk-1.3.4-1/png/pngrtran.c **** png_do_encode_alpha(png_row_infop row_info, png_bytep row, png_structrp png_ptr)
4127:fltk-1.3.4-1/png/pngrtran.c **** {
4128:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width = row_info->width;
4129:fltk-1.3.4-1/png/pngrtran.c **** 
4130:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_encode_alpha");
4131:fltk-1.3.4-1/png/pngrtran.c **** 
4132:fltk-1.3.4-1/png/pngrtran.c ****    if ((row_info->color_type & PNG_COLOR_MASK_ALPHA) != 0)
4133:fltk-1.3.4-1/png/pngrtran.c ****    {
4134:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth == 8)
4135:fltk-1.3.4-1/png/pngrtran.c ****       {
4136:fltk-1.3.4-1/png/pngrtran.c ****          PNG_CONST png_bytep table = png_ptr->gamma_from_1;
4137:fltk-1.3.4-1/png/pngrtran.c **** 
4138:fltk-1.3.4-1/png/pngrtran.c ****          if (table != NULL)
4139:fltk-1.3.4-1/png/pngrtran.c ****          {
4140:fltk-1.3.4-1/png/pngrtran.c ****             PNG_CONST int step =
4141:fltk-1.3.4-1/png/pngrtran.c ****                (row_info->color_type & PNG_COLOR_MASK_COLOR) ? 4 : 2;
4142:fltk-1.3.4-1/png/pngrtran.c **** 
4143:fltk-1.3.4-1/png/pngrtran.c ****             /* The alpha channel is the last component: */
4144:fltk-1.3.4-1/png/pngrtran.c ****             row += step - 1;
4145:fltk-1.3.4-1/png/pngrtran.c **** 
4146:fltk-1.3.4-1/png/pngrtran.c ****             for (; row_width > 0; --row_width, row += step)
4147:fltk-1.3.4-1/png/pngrtran.c ****                *row = table[*row];
4148:fltk-1.3.4-1/png/pngrtran.c **** 
4149:fltk-1.3.4-1/png/pngrtran.c ****             return;
4150:fltk-1.3.4-1/png/pngrtran.c ****          }
4151:fltk-1.3.4-1/png/pngrtran.c ****       }
4152:fltk-1.3.4-1/png/pngrtran.c **** 
4153:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->bit_depth == 16)
4154:fltk-1.3.4-1/png/pngrtran.c ****       {
4155:fltk-1.3.4-1/png/pngrtran.c ****          PNG_CONST png_uint_16pp table = png_ptr->gamma_16_from_1;
4156:fltk-1.3.4-1/png/pngrtran.c ****          PNG_CONST int gamma_shift = png_ptr->gamma_shift;
4157:fltk-1.3.4-1/png/pngrtran.c **** 
4158:fltk-1.3.4-1/png/pngrtran.c ****          if (table != NULL)
4159:fltk-1.3.4-1/png/pngrtran.c ****          {
4160:fltk-1.3.4-1/png/pngrtran.c ****             PNG_CONST int step =
4161:fltk-1.3.4-1/png/pngrtran.c ****                (row_info->color_type & PNG_COLOR_MASK_COLOR) ? 8 : 4;
4162:fltk-1.3.4-1/png/pngrtran.c **** 
4163:fltk-1.3.4-1/png/pngrtran.c ****             /* The alpha channel is the last component: */
4164:fltk-1.3.4-1/png/pngrtran.c ****             row += step - 2;
4165:fltk-1.3.4-1/png/pngrtran.c **** 
4166:fltk-1.3.4-1/png/pngrtran.c ****             for (; row_width > 0; --row_width, row += step)
4167:fltk-1.3.4-1/png/pngrtran.c ****             {
4168:fltk-1.3.4-1/png/pngrtran.c ****                png_uint_16 v;
4169:fltk-1.3.4-1/png/pngrtran.c **** 
4170:fltk-1.3.4-1/png/pngrtran.c ****                v = table[*(row + 1) >> gamma_shift][*row];
4171:fltk-1.3.4-1/png/pngrtran.c ****                *row = (png_byte)((v >> 8) & 0xff);
4172:fltk-1.3.4-1/png/pngrtran.c ****                *(row + 1) = (png_byte)(v & 0xff);
4173:fltk-1.3.4-1/png/pngrtran.c ****             }
4174:fltk-1.3.4-1/png/pngrtran.c **** 
4175:fltk-1.3.4-1/png/pngrtran.c ****             return;
4176:fltk-1.3.4-1/png/pngrtran.c ****          }
4177:fltk-1.3.4-1/png/pngrtran.c ****       }
4178:fltk-1.3.4-1/png/pngrtran.c ****    }
4179:fltk-1.3.4-1/png/pngrtran.c **** 
4180:fltk-1.3.4-1/png/pngrtran.c ****    /* Only get to here if called with a weird row_info; no harm has been done,
4181:fltk-1.3.4-1/png/pngrtran.c ****     * so just issue a warning.
4182:fltk-1.3.4-1/png/pngrtran.c ****     */
4183:fltk-1.3.4-1/png/pngrtran.c ****    png_warning(png_ptr, "png_do_encode_alpha: unexpected call");
4184:fltk-1.3.4-1/png/pngrtran.c **** }
4185:fltk-1.3.4-1/png/pngrtran.c **** #endif
4186:fltk-1.3.4-1/png/pngrtran.c **** 
4187:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
4188:fltk-1.3.4-1/png/pngrtran.c **** /* Expands a palette row to an RGB or RGBA row depending
4189:fltk-1.3.4-1/png/pngrtran.c ****  * upon whether you supply trans and num_trans.
4190:fltk-1.3.4-1/png/pngrtran.c ****  */
4191:fltk-1.3.4-1/png/pngrtran.c **** static void
4192:fltk-1.3.4-1/png/pngrtran.c **** png_do_expand_palette(png_row_infop row_info, png_bytep row,
4193:fltk-1.3.4-1/png/pngrtran.c ****    png_const_colorp palette, png_const_bytep trans_alpha, int num_trans)
4194:fltk-1.3.4-1/png/pngrtran.c **** {
4195:fltk-1.3.4-1/png/pngrtran.c ****    int shift, value;
4196:fltk-1.3.4-1/png/pngrtran.c ****    png_bytep sp, dp;
4197:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 i;
4198:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width=row_info->width;
4199:fltk-1.3.4-1/png/pngrtran.c **** 
4200:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_expand_palette");
4201:fltk-1.3.4-1/png/pngrtran.c **** 
4202:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->color_type == PNG_COLOR_TYPE_PALETTE)
4203:fltk-1.3.4-1/png/pngrtran.c ****    {
4204:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth < 8)
4205:fltk-1.3.4-1/png/pngrtran.c ****       {
4206:fltk-1.3.4-1/png/pngrtran.c ****          switch (row_info->bit_depth)
4207:fltk-1.3.4-1/png/pngrtran.c ****          {
4208:fltk-1.3.4-1/png/pngrtran.c ****             case 1:
4209:fltk-1.3.4-1/png/pngrtran.c ****             {
4210:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + (png_size_t)((row_width - 1) >> 3);
4211:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
4212:fltk-1.3.4-1/png/pngrtran.c ****                shift = 7 - (int)((row_width + 7) & 0x07);
4213:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4214:fltk-1.3.4-1/png/pngrtran.c ****                {
4215:fltk-1.3.4-1/png/pngrtran.c ****                   if ((*sp >> shift) & 0x01)
4216:fltk-1.3.4-1/png/pngrtran.c ****                      *dp = 1;
4217:fltk-1.3.4-1/png/pngrtran.c **** 
4218:fltk-1.3.4-1/png/pngrtran.c ****                   else
4219:fltk-1.3.4-1/png/pngrtran.c ****                      *dp = 0;
4220:fltk-1.3.4-1/png/pngrtran.c **** 
4221:fltk-1.3.4-1/png/pngrtran.c ****                   if (shift == 7)
4222:fltk-1.3.4-1/png/pngrtran.c ****                   {
4223:fltk-1.3.4-1/png/pngrtran.c ****                      shift = 0;
4224:fltk-1.3.4-1/png/pngrtran.c ****                      sp--;
4225:fltk-1.3.4-1/png/pngrtran.c ****                   }
4226:fltk-1.3.4-1/png/pngrtran.c **** 
4227:fltk-1.3.4-1/png/pngrtran.c ****                   else
4228:fltk-1.3.4-1/png/pngrtran.c ****                      shift++;
4229:fltk-1.3.4-1/png/pngrtran.c **** 
4230:fltk-1.3.4-1/png/pngrtran.c ****                   dp--;
4231:fltk-1.3.4-1/png/pngrtran.c ****                }
4232:fltk-1.3.4-1/png/pngrtran.c ****                break;
4233:fltk-1.3.4-1/png/pngrtran.c ****             }
4234:fltk-1.3.4-1/png/pngrtran.c **** 
4235:fltk-1.3.4-1/png/pngrtran.c ****             case 2:
4236:fltk-1.3.4-1/png/pngrtran.c ****             {
4237:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + (png_size_t)((row_width - 1) >> 2);
4238:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
4239:fltk-1.3.4-1/png/pngrtran.c ****                shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
4240:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4241:fltk-1.3.4-1/png/pngrtran.c ****                {
4242:fltk-1.3.4-1/png/pngrtran.c ****                   value = (*sp >> shift) & 0x03;
4243:fltk-1.3.4-1/png/pngrtran.c ****                   *dp = (png_byte)value;
4244:fltk-1.3.4-1/png/pngrtran.c ****                   if (shift == 6)
4245:fltk-1.3.4-1/png/pngrtran.c ****                   {
4246:fltk-1.3.4-1/png/pngrtran.c ****                      shift = 0;
4247:fltk-1.3.4-1/png/pngrtran.c ****                      sp--;
4248:fltk-1.3.4-1/png/pngrtran.c ****                   }
4249:fltk-1.3.4-1/png/pngrtran.c **** 
4250:fltk-1.3.4-1/png/pngrtran.c ****                   else
4251:fltk-1.3.4-1/png/pngrtran.c ****                      shift += 2;
4252:fltk-1.3.4-1/png/pngrtran.c **** 
4253:fltk-1.3.4-1/png/pngrtran.c ****                   dp--;
4254:fltk-1.3.4-1/png/pngrtran.c ****                }
4255:fltk-1.3.4-1/png/pngrtran.c ****                break;
4256:fltk-1.3.4-1/png/pngrtran.c ****             }
4257:fltk-1.3.4-1/png/pngrtran.c **** 
4258:fltk-1.3.4-1/png/pngrtran.c ****             case 4:
4259:fltk-1.3.4-1/png/pngrtran.c ****             {
4260:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + (png_size_t)((row_width - 1) >> 1);
4261:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
4262:fltk-1.3.4-1/png/pngrtran.c ****                shift = (int)((row_width & 0x01) << 2);
4263:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4264:fltk-1.3.4-1/png/pngrtran.c ****                {
4265:fltk-1.3.4-1/png/pngrtran.c ****                   value = (*sp >> shift) & 0x0f;
4266:fltk-1.3.4-1/png/pngrtran.c ****                   *dp = (png_byte)value;
4267:fltk-1.3.4-1/png/pngrtran.c ****                   if (shift == 4)
4268:fltk-1.3.4-1/png/pngrtran.c ****                   {
4269:fltk-1.3.4-1/png/pngrtran.c ****                      shift = 0;
4270:fltk-1.3.4-1/png/pngrtran.c ****                      sp--;
4271:fltk-1.3.4-1/png/pngrtran.c ****                   }
4272:fltk-1.3.4-1/png/pngrtran.c **** 
4273:fltk-1.3.4-1/png/pngrtran.c ****                   else
4274:fltk-1.3.4-1/png/pngrtran.c ****                      shift += 4;
4275:fltk-1.3.4-1/png/pngrtran.c **** 
4276:fltk-1.3.4-1/png/pngrtran.c ****                   dp--;
4277:fltk-1.3.4-1/png/pngrtran.c ****                }
4278:fltk-1.3.4-1/png/pngrtran.c ****                break;
4279:fltk-1.3.4-1/png/pngrtran.c ****             }
4280:fltk-1.3.4-1/png/pngrtran.c **** 
4281:fltk-1.3.4-1/png/pngrtran.c ****             default:
4282:fltk-1.3.4-1/png/pngrtran.c ****                break;
4283:fltk-1.3.4-1/png/pngrtran.c ****          }
4284:fltk-1.3.4-1/png/pngrtran.c ****          row_info->bit_depth = 8;
4285:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = 8;
4286:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = row_width;
4287:fltk-1.3.4-1/png/pngrtran.c ****       }
4288:fltk-1.3.4-1/png/pngrtran.c **** 
4289:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->bit_depth == 8)
4290:fltk-1.3.4-1/png/pngrtran.c ****       {
4291:fltk-1.3.4-1/png/pngrtran.c ****          {
4292:fltk-1.3.4-1/png/pngrtran.c ****             if (num_trans > 0)
4293:fltk-1.3.4-1/png/pngrtran.c ****             {
4294:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + (png_size_t)row_width - 1;
4295:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)(row_width << 2) - 1;
4296:fltk-1.3.4-1/png/pngrtran.c **** 
4297:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4298:fltk-1.3.4-1/png/pngrtran.c ****                {
4299:fltk-1.3.4-1/png/pngrtran.c ****                   if ((int)(*sp) >= num_trans)
4300:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0xff;
4301:fltk-1.3.4-1/png/pngrtran.c **** 
4302:fltk-1.3.4-1/png/pngrtran.c ****                   else
4303:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = trans_alpha[*sp];
4304:fltk-1.3.4-1/png/pngrtran.c **** 
4305:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].blue;
4306:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].green;
4307:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].red;
4308:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
4309:fltk-1.3.4-1/png/pngrtran.c ****                }
4310:fltk-1.3.4-1/png/pngrtran.c ****                row_info->bit_depth = 8;
4311:fltk-1.3.4-1/png/pngrtran.c ****                row_info->pixel_depth = 32;
4312:fltk-1.3.4-1/png/pngrtran.c ****                row_info->rowbytes = row_width * 4;
4313:fltk-1.3.4-1/png/pngrtran.c ****                row_info->color_type = 6;
4314:fltk-1.3.4-1/png/pngrtran.c ****                row_info->channels = 4;
4315:fltk-1.3.4-1/png/pngrtran.c ****             }
4316:fltk-1.3.4-1/png/pngrtran.c **** 
4317:fltk-1.3.4-1/png/pngrtran.c ****             else
4318:fltk-1.3.4-1/png/pngrtran.c ****             {
4319:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + (png_size_t)row_width - 1;
4320:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)(row_width * 3) - 1;
4321:fltk-1.3.4-1/png/pngrtran.c **** 
4322:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4323:fltk-1.3.4-1/png/pngrtran.c ****                {
4324:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].blue;
4325:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].green;
4326:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].red;
4327:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
4328:fltk-1.3.4-1/png/pngrtran.c ****                }
4329:fltk-1.3.4-1/png/pngrtran.c **** 
4330:fltk-1.3.4-1/png/pngrtran.c ****                row_info->bit_depth = 8;
4331:fltk-1.3.4-1/png/pngrtran.c ****                row_info->pixel_depth = 24;
4332:fltk-1.3.4-1/png/pngrtran.c ****                row_info->rowbytes = row_width * 3;
4333:fltk-1.3.4-1/png/pngrtran.c ****                row_info->color_type = 2;
4334:fltk-1.3.4-1/png/pngrtran.c ****                row_info->channels = 3;
4335:fltk-1.3.4-1/png/pngrtran.c ****             }
4336:fltk-1.3.4-1/png/pngrtran.c ****          }
4337:fltk-1.3.4-1/png/pngrtran.c ****       }
4338:fltk-1.3.4-1/png/pngrtran.c ****    }
4339:fltk-1.3.4-1/png/pngrtran.c **** }
4340:fltk-1.3.4-1/png/pngrtran.c **** 
4341:fltk-1.3.4-1/png/pngrtran.c **** /* If the bit depth < 8, it is expanded to 8.  Also, if the already
4342:fltk-1.3.4-1/png/pngrtran.c ****  * expanded transparency value is supplied, an alpha channel is built.
4343:fltk-1.3.4-1/png/pngrtran.c ****  */
4344:fltk-1.3.4-1/png/pngrtran.c **** static void
4345:fltk-1.3.4-1/png/pngrtran.c **** png_do_expand(png_row_infop row_info, png_bytep row,
4346:fltk-1.3.4-1/png/pngrtran.c ****     png_const_color_16p trans_color)
4347:fltk-1.3.4-1/png/pngrtran.c **** {
 321              		.loc 1 4347 0
 322              		.cfi_startproc
 323              	.LVL41:
4348:fltk-1.3.4-1/png/pngrtran.c ****    int shift, value;
4349:fltk-1.3.4-1/png/pngrtran.c ****    png_bytep sp, dp;
4350:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 i;
4351:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width=row_info->width;
4352:fltk-1.3.4-1/png/pngrtran.c **** 
4353:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_expand");
4354:fltk-1.3.4-1/png/pngrtran.c **** 
4355:fltk-1.3.4-1/png/pngrtran.c ****    {
4356:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->color_type == PNG_COLOR_TYPE_GRAY)
 324              		.loc 1 4356 0
 325 0000 0FB64710 		movzbl	16(%rdi), %eax
4347:fltk-1.3.4-1/png/pngrtran.c ****    int shift, value;
 326              		.loc 1 4347 0
 327 0004 4155     		pushq	%r13
 328              		.cfi_def_cfa_offset 16
 329              		.cfi_offset 13, -16
4351:fltk-1.3.4-1/png/pngrtran.c **** 
 330              		.loc 1 4351 0
 331 0006 448B1F   		movl	(%rdi), %r11d
 332              	.LVL42:
4347:fltk-1.3.4-1/png/pngrtran.c ****    int shift, value;
 333              		.loc 1 4347 0
 334 0009 4154     		pushq	%r12
 335              		.cfi_def_cfa_offset 24
 336              		.cfi_offset 12, -24
 337 000b 55       		pushq	%rbp
 338              		.cfi_def_cfa_offset 32
 339              		.cfi_offset 6, -32
 340 000c 53       		pushq	%rbx
 341              		.cfi_def_cfa_offset 40
 342              		.cfi_offset 3, -40
 343              		.loc 1 4356 0
 344 000d 84C0     		testb	%al, %al
 345 000f 744F     		je	.L119
4357:fltk-1.3.4-1/png/pngrtran.c ****       {
4358:fltk-1.3.4-1/png/pngrtran.c ****          unsigned int gray = trans_color != NULL ? trans_color->gray : 0;
4359:fltk-1.3.4-1/png/pngrtran.c **** 
4360:fltk-1.3.4-1/png/pngrtran.c ****          if (row_info->bit_depth < 8)
4361:fltk-1.3.4-1/png/pngrtran.c ****          {
4362:fltk-1.3.4-1/png/pngrtran.c ****             switch (row_info->bit_depth)
4363:fltk-1.3.4-1/png/pngrtran.c ****             {
4364:fltk-1.3.4-1/png/pngrtran.c ****                case 1:
4365:fltk-1.3.4-1/png/pngrtran.c ****                {
4366:fltk-1.3.4-1/png/pngrtran.c ****                   gray = (gray & 0x01) * 0xff;
4367:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 3);
4368:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
4369:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 7 - (int)((row_width + 7) & 0x07);
4370:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
4371:fltk-1.3.4-1/png/pngrtran.c ****                   {
4372:fltk-1.3.4-1/png/pngrtran.c ****                      if ((*sp >> shift) & 0x01)
4373:fltk-1.3.4-1/png/pngrtran.c ****                         *dp = 0xff;
4374:fltk-1.3.4-1/png/pngrtran.c **** 
4375:fltk-1.3.4-1/png/pngrtran.c ****                      else
4376:fltk-1.3.4-1/png/pngrtran.c ****                         *dp = 0;
4377:fltk-1.3.4-1/png/pngrtran.c **** 
4378:fltk-1.3.4-1/png/pngrtran.c ****                      if (shift == 7)
4379:fltk-1.3.4-1/png/pngrtran.c ****                      {
4380:fltk-1.3.4-1/png/pngrtran.c ****                         shift = 0;
4381:fltk-1.3.4-1/png/pngrtran.c ****                         sp--;
4382:fltk-1.3.4-1/png/pngrtran.c ****                      }
4383:fltk-1.3.4-1/png/pngrtran.c **** 
4384:fltk-1.3.4-1/png/pngrtran.c ****                      else
4385:fltk-1.3.4-1/png/pngrtran.c ****                         shift++;
4386:fltk-1.3.4-1/png/pngrtran.c **** 
4387:fltk-1.3.4-1/png/pngrtran.c ****                      dp--;
4388:fltk-1.3.4-1/png/pngrtran.c ****                   }
4389:fltk-1.3.4-1/png/pngrtran.c ****                   break;
4390:fltk-1.3.4-1/png/pngrtran.c ****                }
4391:fltk-1.3.4-1/png/pngrtran.c **** 
4392:fltk-1.3.4-1/png/pngrtran.c ****                case 2:
4393:fltk-1.3.4-1/png/pngrtran.c ****                {
4394:fltk-1.3.4-1/png/pngrtran.c ****                   gray = (gray & 0x03) * 0x55;
4395:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 2);
4396:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
4397:fltk-1.3.4-1/png/pngrtran.c ****                   shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
4398:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
4399:fltk-1.3.4-1/png/pngrtran.c ****                   {
4400:fltk-1.3.4-1/png/pngrtran.c ****                      value = (*sp >> shift) & 0x03;
4401:fltk-1.3.4-1/png/pngrtran.c ****                      *dp = (png_byte)(value | (value << 2) | (value << 4) |
4402:fltk-1.3.4-1/png/pngrtran.c ****                         (value << 6));
4403:fltk-1.3.4-1/png/pngrtran.c ****                      if (shift == 6)
4404:fltk-1.3.4-1/png/pngrtran.c ****                      {
4405:fltk-1.3.4-1/png/pngrtran.c ****                         shift = 0;
4406:fltk-1.3.4-1/png/pngrtran.c ****                         sp--;
4407:fltk-1.3.4-1/png/pngrtran.c ****                      }
4408:fltk-1.3.4-1/png/pngrtran.c **** 
4409:fltk-1.3.4-1/png/pngrtran.c ****                      else
4410:fltk-1.3.4-1/png/pngrtran.c ****                         shift += 2;
4411:fltk-1.3.4-1/png/pngrtran.c **** 
4412:fltk-1.3.4-1/png/pngrtran.c ****                      dp--;
4413:fltk-1.3.4-1/png/pngrtran.c ****                   }
4414:fltk-1.3.4-1/png/pngrtran.c ****                   break;
4415:fltk-1.3.4-1/png/pngrtran.c ****                }
4416:fltk-1.3.4-1/png/pngrtran.c **** 
4417:fltk-1.3.4-1/png/pngrtran.c ****                case 4:
4418:fltk-1.3.4-1/png/pngrtran.c ****                {
4419:fltk-1.3.4-1/png/pngrtran.c ****                   gray = (gray & 0x0f) * 0x11;
4420:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 1);
4421:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
4422:fltk-1.3.4-1/png/pngrtran.c ****                   shift = (int)((1 - ((row_width + 1) & 0x01)) << 2);
4423:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
4424:fltk-1.3.4-1/png/pngrtran.c ****                   {
4425:fltk-1.3.4-1/png/pngrtran.c ****                      value = (*sp >> shift) & 0x0f;
4426:fltk-1.3.4-1/png/pngrtran.c ****                      *dp = (png_byte)(value | (value << 4));
4427:fltk-1.3.4-1/png/pngrtran.c ****                      if (shift == 4)
4428:fltk-1.3.4-1/png/pngrtran.c ****                      {
4429:fltk-1.3.4-1/png/pngrtran.c ****                         shift = 0;
4430:fltk-1.3.4-1/png/pngrtran.c ****                         sp--;
4431:fltk-1.3.4-1/png/pngrtran.c ****                      }
4432:fltk-1.3.4-1/png/pngrtran.c **** 
4433:fltk-1.3.4-1/png/pngrtran.c ****                      else
4434:fltk-1.3.4-1/png/pngrtran.c ****                         shift = 4;
4435:fltk-1.3.4-1/png/pngrtran.c **** 
4436:fltk-1.3.4-1/png/pngrtran.c ****                      dp--;
4437:fltk-1.3.4-1/png/pngrtran.c ****                   }
4438:fltk-1.3.4-1/png/pngrtran.c ****                   break;
4439:fltk-1.3.4-1/png/pngrtran.c ****                }
4440:fltk-1.3.4-1/png/pngrtran.c **** 
4441:fltk-1.3.4-1/png/pngrtran.c ****                default:
4442:fltk-1.3.4-1/png/pngrtran.c ****                   break;
4443:fltk-1.3.4-1/png/pngrtran.c ****             }
4444:fltk-1.3.4-1/png/pngrtran.c **** 
4445:fltk-1.3.4-1/png/pngrtran.c ****             row_info->bit_depth = 8;
4446:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 8;
4447:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width;
4448:fltk-1.3.4-1/png/pngrtran.c ****          }
4449:fltk-1.3.4-1/png/pngrtran.c **** 
4450:fltk-1.3.4-1/png/pngrtran.c ****          if (trans_color != NULL)
4451:fltk-1.3.4-1/png/pngrtran.c ****          {
4452:fltk-1.3.4-1/png/pngrtran.c ****             if (row_info->bit_depth == 8)
4453:fltk-1.3.4-1/png/pngrtran.c ****             {
4454:fltk-1.3.4-1/png/pngrtran.c ****                gray = gray & 0xff;
4455:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + (png_size_t)row_width - 1;
4456:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)(row_width << 1) - 1;
4457:fltk-1.3.4-1/png/pngrtran.c **** 
4458:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4459:fltk-1.3.4-1/png/pngrtran.c ****                {
4460:fltk-1.3.4-1/png/pngrtran.c ****                   if (*sp == gray)
4461:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0;
4462:fltk-1.3.4-1/png/pngrtran.c **** 
4463:fltk-1.3.4-1/png/pngrtran.c ****                   else
4464:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0xff;
4465:fltk-1.3.4-1/png/pngrtran.c **** 
4466:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = *sp--;
4467:fltk-1.3.4-1/png/pngrtran.c ****                }
4468:fltk-1.3.4-1/png/pngrtran.c ****             }
4469:fltk-1.3.4-1/png/pngrtran.c **** 
4470:fltk-1.3.4-1/png/pngrtran.c ****             else if (row_info->bit_depth == 16)
4471:fltk-1.3.4-1/png/pngrtran.c ****             {
4472:fltk-1.3.4-1/png/pngrtran.c ****                unsigned int gray_high = (gray >> 8) & 0xff;
4473:fltk-1.3.4-1/png/pngrtran.c ****                unsigned int gray_low = gray & 0xff;
4474:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + row_info->rowbytes - 1;
4475:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (row_info->rowbytes << 1) - 1;
4476:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
4477:fltk-1.3.4-1/png/pngrtran.c ****                {
4478:fltk-1.3.4-1/png/pngrtran.c ****                   if (*(sp - 1) == gray_high && *(sp) == gray_low)
4479:fltk-1.3.4-1/png/pngrtran.c ****                   {
4480:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0;
4481:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0;
4482:fltk-1.3.4-1/png/pngrtran.c ****                   }
4483:fltk-1.3.4-1/png/pngrtran.c **** 
4484:fltk-1.3.4-1/png/pngrtran.c ****                   else
4485:fltk-1.3.4-1/png/pngrtran.c ****                   {
4486:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0xff;
4487:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0xff;
4488:fltk-1.3.4-1/png/pngrtran.c ****                   }
4489:fltk-1.3.4-1/png/pngrtran.c **** 
4490:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = *sp--;
4491:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = *sp--;
4492:fltk-1.3.4-1/png/pngrtran.c ****                }
4493:fltk-1.3.4-1/png/pngrtran.c ****             }
4494:fltk-1.3.4-1/png/pngrtran.c **** 
4495:fltk-1.3.4-1/png/pngrtran.c ****             row_info->color_type = PNG_COLOR_TYPE_GRAY_ALPHA;
4496:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
4497:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = (png_byte)(row_info->bit_depth << 1);
4498:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth,
4499:fltk-1.3.4-1/png/pngrtran.c ****                row_width);
4500:fltk-1.3.4-1/png/pngrtran.c ****          }
4501:fltk-1.3.4-1/png/pngrtran.c ****       }
4502:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->color_type == PNG_COLOR_TYPE_RGB &&
 346              		.loc 1 4502 0 discriminator 1
 347 0011 4885D2   		testq	%rdx, %rdx
 348 0014 743F     		je	.L33
 349 0016 3C02     		cmpb	$2, %al
 350 0018 753B     		jne	.L33
4503:fltk-1.3.4-1/png/pngrtran.c ****           trans_color != NULL)
4504:fltk-1.3.4-1/png/pngrtran.c ****       {
4505:fltk-1.3.4-1/png/pngrtran.c ****          if (row_info->bit_depth == 8)
 351              		.loc 1 4505 0
 352 001a 0FB64F11 		movzbl	17(%rdi), %ecx
 353 001e 80F908   		cmpb	$8, %cl
 354 0021 0F847903 		je	.L120
 354      0000
4506:fltk-1.3.4-1/png/pngrtran.c ****          {
4507:fltk-1.3.4-1/png/pngrtran.c ****             png_byte red = (png_byte)(trans_color->red & 0xff);
4508:fltk-1.3.4-1/png/pngrtran.c ****             png_byte green = (png_byte)(trans_color->green & 0xff);
4509:fltk-1.3.4-1/png/pngrtran.c ****             png_byte blue = (png_byte)(trans_color->blue & 0xff);
4510:fltk-1.3.4-1/png/pngrtran.c ****             sp = row + (png_size_t)row_info->rowbytes - 1;
4511:fltk-1.3.4-1/png/pngrtran.c ****             dp = row + (png_size_t)(row_width << 2) - 1;
4512:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
4513:fltk-1.3.4-1/png/pngrtran.c ****             {
4514:fltk-1.3.4-1/png/pngrtran.c ****                if (*(sp - 2) == red && *(sp - 1) == green && *(sp) == blue)
4515:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0;
4516:fltk-1.3.4-1/png/pngrtran.c **** 
4517:fltk-1.3.4-1/png/pngrtran.c ****                else
4518:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0xff;
4519:fltk-1.3.4-1/png/pngrtran.c **** 
4520:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4521:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4522:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4523:fltk-1.3.4-1/png/pngrtran.c ****             }
4524:fltk-1.3.4-1/png/pngrtran.c ****          }
4525:fltk-1.3.4-1/png/pngrtran.c ****          else if (row_info->bit_depth == 16)
 355              		.loc 1 4525 0
 356 0027 80F910   		cmpb	$16, %cl
 357 002a 0F840804 		je	.L121
 357      0000
 358              	.LVL43:
 359              	.L74:
4526:fltk-1.3.4-1/png/pngrtran.c ****          {
4527:fltk-1.3.4-1/png/pngrtran.c ****             png_byte red_high = (png_byte)((trans_color->red >> 8) & 0xff);
4528:fltk-1.3.4-1/png/pngrtran.c ****             png_byte green_high = (png_byte)((trans_color->green >> 8) & 0xff);
4529:fltk-1.3.4-1/png/pngrtran.c ****             png_byte blue_high = (png_byte)((trans_color->blue >> 8) & 0xff);
4530:fltk-1.3.4-1/png/pngrtran.c ****             png_byte red_low = (png_byte)(trans_color->red & 0xff);
4531:fltk-1.3.4-1/png/pngrtran.c ****             png_byte green_low = (png_byte)(trans_color->green & 0xff);
4532:fltk-1.3.4-1/png/pngrtran.c ****             png_byte blue_low = (png_byte)(trans_color->blue & 0xff);
4533:fltk-1.3.4-1/png/pngrtran.c ****             sp = row + row_info->rowbytes - 1;
4534:fltk-1.3.4-1/png/pngrtran.c ****             dp = row + (png_size_t)(row_width << 3) - 1;
4535:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
4536:fltk-1.3.4-1/png/pngrtran.c ****             {
4537:fltk-1.3.4-1/png/pngrtran.c ****                if (*(sp - 5) == red_high &&
4538:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 4) == red_low &&
4539:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 3) == green_high &&
4540:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 2) == green_low &&
4541:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 1) == blue_high &&
4542:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp    ) == blue_low)
4543:fltk-1.3.4-1/png/pngrtran.c ****                {
4544:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0;
4545:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0;
4546:fltk-1.3.4-1/png/pngrtran.c ****                }
4547:fltk-1.3.4-1/png/pngrtran.c **** 
4548:fltk-1.3.4-1/png/pngrtran.c ****                else
4549:fltk-1.3.4-1/png/pngrtran.c ****                {
4550:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0xff;
4551:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0xff;
4552:fltk-1.3.4-1/png/pngrtran.c ****                }
4553:fltk-1.3.4-1/png/pngrtran.c **** 
4554:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4555:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4556:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4557:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4558:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4559:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
4560:fltk-1.3.4-1/png/pngrtran.c ****             }
4561:fltk-1.3.4-1/png/pngrtran.c ****          }
4562:fltk-1.3.4-1/png/pngrtran.c ****          row_info->color_type = PNG_COLOR_TYPE_RGB_ALPHA;
4563:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = 4;
4564:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = (png_byte)(row_info->bit_depth << 2);
 360              		.loc 1 4564 0
 361 0030 C1E102   		sall	$2, %ecx
4562:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = 4;
 362              		.loc 1 4562 0
 363 0033 C6471006 		movb	$6, 16(%rdi)
4563:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = (png_byte)(row_info->bit_depth << 2);
 364              		.loc 1 4563 0
 365 0037 C6471204 		movb	$4, 18(%rdi)
4565:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
 366              		.loc 1 4565 0
 367 003b 80F907   		cmpb	$7, %cl
4564:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
 368              		.loc 1 4564 0
 369 003e 884F13   		movb	%cl, 19(%rdi)
 370              		.loc 1 4565 0
 371 0041 0F864902 		jbe	.L78
 371      0000
 372              	.L82:
 373              		.loc 1 4565 0 is_stmt 0 discriminator 1
 374 0047 C0E903   		shrb	$3, %cl
 375 004a 0FB6C9   		movzbl	%cl, %ecx
 376 004d 4C0FAFD9 		imulq	%rcx, %r11
 377              	.LVL44:
 378              	.L79:
 379              		.loc 1 4565 0 discriminator 4
 380 0051 4C895F08 		movq	%r11, 8(%rdi)
 381              	.L33:
4566:fltk-1.3.4-1/png/pngrtran.c ****       }
4567:fltk-1.3.4-1/png/pngrtran.c ****    }
4568:fltk-1.3.4-1/png/pngrtran.c **** }
 382              		.loc 1 4568 0 is_stmt 1
 383 0055 5B       		popq	%rbx
 384              		.cfi_remember_state
 385              		.cfi_def_cfa_offset 32
 386 0056 5D       		popq	%rbp
 387              		.cfi_def_cfa_offset 24
 388 0057 415C     		popq	%r12
 389              		.cfi_def_cfa_offset 16
 390 0059 415D     		popq	%r13
 391              		.cfi_def_cfa_offset 8
 392 005b C3       		ret
 393              	.LVL45:
 394 005c 0F1F4000 		.p2align 4,,10
 395              		.p2align 3
 396              	.L119:
 397              		.cfi_restore_state
 398              	.LBB110:
4358:fltk-1.3.4-1/png/pngrtran.c **** 
 399              		.loc 1 4358 0
 400 0060 4885D2   		testq	%rdx, %rdx
 401 0063 0F84FF00 		je	.L35
 401      0000
4360:fltk-1.3.4-1/png/pngrtran.c ****          {
 402              		.loc 1 4360 0 discriminator 1
 403 0069 0FB64711 		movzbl	17(%rdi), %eax
4358:fltk-1.3.4-1/png/pngrtran.c **** 
 404              		.loc 1 4358 0 discriminator 1
 405 006d 440FB752 		movzwl	8(%rdx), %r10d
 405      08
4360:fltk-1.3.4-1/png/pngrtran.c ****          {
 406              		.loc 1 4360 0 discriminator 1
 407 0072 3C07     		cmpb	$7, %al
4358:fltk-1.3.4-1/png/pngrtran.c **** 
 408              		.loc 1 4358 0 discriminator 1
 409 0074 4489D1   		movl	%r10d, %ecx
 410              	.LVL46:
4360:fltk-1.3.4-1/png/pngrtran.c ****          {
 411              		.loc 1 4360 0 discriminator 1
 412 0077 0F879300 		ja	.L122
 412      0000
 413              	.LVL47:
 414              	.L81:
4362:fltk-1.3.4-1/png/pngrtran.c ****             {
 415              		.loc 1 4362 0
 416 007d 3C02     		cmpb	$2, %al
 417 007f 0F84FB00 		je	.L38
 417      0000
 418 0085 3C04     		cmpb	$4, %al
 419 0087 0F841B02 		je	.L39
 419      0000
 420 008d 3C01     		cmpb	$1, %al
 421 008f 4589D9   		movl	%r11d, %r9d
 422 0092 0F849802 		je	.L123
 422      0000
 423              	.L41:
 424              	.LVL48:
4450:fltk-1.3.4-1/png/pngrtran.c ****          {
 425              		.loc 1 4450 0
 426 0098 4885D2   		testq	%rdx, %rdx
4445:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 8;
 427              		.loc 1 4445 0
 428 009b C6471108 		movb	$8, 17(%rdi)
4446:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width;
 429              		.loc 1 4446 0
 430 009f C6471308 		movb	$8, 19(%rdi)
4447:fltk-1.3.4-1/png/pngrtran.c ****          }
 431              		.loc 1 4447 0
 432 00a3 4C894F08 		movq	%r9, 8(%rdi)
4450:fltk-1.3.4-1/png/pngrtran.c ****          {
 433              		.loc 1 4450 0
 434 00a7 74AC     		je	.L33
 435              	.L53:
4456:fltk-1.3.4-1/png/pngrtran.c **** 
 436              		.loc 1 4456 0
 437 00a9 438D141B 		leal	(%r11,%r11), %edx
 438              	.LVL49:
4458:fltk-1.3.4-1/png/pngrtran.c ****                {
 439              		.loc 1 4458 0
 440 00ad 4585DB   		testl	%r11d, %r11d
4454:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + (png_size_t)row_width - 1;
 441              		.loc 1 4454 0
 442 00b0 450FB6D2 		movzbl	%r10b, %r10d
 443              	.LVL50:
4455:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)(row_width << 1) - 1;
 444              		.loc 1 4455 0
 445 00b4 4A8D440E 		leaq	-1(%rsi,%r9), %rax
 445      FF
 446              	.LVL51:
4456:fltk-1.3.4-1/png/pngrtran.c **** 
 447              		.loc 1 4456 0
 448 00b9 488D4C16 		leaq	-1(%rsi,%rdx), %rcx
 448      FF
 449              	.LVL52:
4458:fltk-1.3.4-1/png/pngrtran.c ****                {
 450              		.loc 1 4458 0
 451 00be 0F844701 		je	.L115
 451      0000
 452 00c4 418D73FF 		leal	-1(%r11), %esi
 453              	.LVL53:
 454 00c8 488D51FF 		leaq	-1(%rcx), %rdx
 455 00cc 4801F6   		addq	%rsi, %rsi
 456 00cf 4829F1   		subq	%rsi, %rcx
 457              	.LVL54:
 458 00d2 488D71FD 		leaq	-3(%rcx), %rsi
 459 00d6 EB24     		jmp	.L59
 460 00d8 0F1F8400 		.p2align 4,,10
 460      00000000 
 461              		.p2align 3
 462              	.L57:
 463              	.LVL55:
4464:fltk-1.3.4-1/png/pngrtran.c **** 
 464              		.loc 1 4464 0
 465 00e0 C64201FF 		movb	$-1, 1(%rdx)
 466              	.L58:
 467              	.LVL56:
4466:fltk-1.3.4-1/png/pngrtran.c ****                }
 468              		.loc 1 4466 0 discriminator 2
 469 00e4 4883E801 		subq	$1, %rax
 470              	.LVL57:
 471 00e8 0FB64801 		movzbl	1(%rax), %ecx
 472 00ec 4883EA02 		subq	$2, %rdx
 473              	.LVL58:
 474 00f0 884A02   		movb	%cl, 2(%rdx)
4458:fltk-1.3.4-1/png/pngrtran.c ****                {
 475              		.loc 1 4458 0 discriminator 2
 476 00f3 4839F2   		cmpq	%rsi, %rdx
 477 00f6 0F840F01 		je	.L115
 477      0000
 478              	.LVL59:
 479              	.L59:
4460:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0;
 480              		.loc 1 4460 0
 481 00fc 0FB608   		movzbl	(%rax), %ecx
 482 00ff 4139CA   		cmpl	%ecx, %r10d
 483 0102 75DC     		jne	.L57
 484              	.LVL60:
4461:fltk-1.3.4-1/png/pngrtran.c **** 
 485              		.loc 1 4461 0
 486 0104 C6420100 		movb	$0, 1(%rdx)
 487 0108 EBDA     		jmp	.L58
 488              	.LVL61:
 489 010a 660F1F44 		.p2align 4,,10
 489      0000
 490              		.p2align 3
 491              	.L122:
4452:fltk-1.3.4-1/png/pngrtran.c ****             {
 492              		.loc 1 4452 0
 493 0110 3C08     		cmpb	$8, %al
 494 0112 0F842404 		je	.L124
 494      0000
4470:fltk-1.3.4-1/png/pngrtran.c ****             {
 495              		.loc 1 4470 0
 496 0118 3C10     		cmpb	$16, %al
 497 011a 4589D9   		movl	%r11d, %r9d
 498 011d 0F84F500 		je	.L125
 498      0000
 499              	.LVL62:
 500              	.L56:
4497:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth,
 501              		.loc 1 4497 0
 502 0123 01C0     		addl	%eax, %eax
4495:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
 503              		.loc 1 4495 0
 504 0125 C6471004 		movb	$4, 16(%rdi)
4496:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = (png_byte)(row_info->bit_depth << 1);
 505              		.loc 1 4496 0
 506 0129 C6471202 		movb	$2, 18(%rdi)
4498:fltk-1.3.4-1/png/pngrtran.c ****                row_width);
 507              		.loc 1 4498 0
 508 012d 3C07     		cmpb	$7, %al
4497:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth,
 509              		.loc 1 4497 0
 510 012f 884713   		movb	%al, 19(%rdi)
4498:fltk-1.3.4-1/png/pngrtran.c ****                row_width);
 511              		.loc 1 4498 0
 512 0132 761C     		jbe	.L66
 513              	.L62:
4498:fltk-1.3.4-1/png/pngrtran.c ****                row_width);
 514              		.loc 1 4498 0 is_stmt 0 discriminator 1
 515 0134 C0E803   		shrb	$3, %al
 516 0137 0FB6D0   		movzbl	%al, %edx
 517 013a 4889D0   		movq	%rdx, %rax
 518 013d 490FAFC1 		imulq	%r9, %rax
 519              	.L67:
 520              	.LBE110:
 521              		.loc 1 4568 0 is_stmt 1 discriminator 4
 522 0141 5B       		popq	%rbx
 523              		.cfi_remember_state
 524              		.cfi_def_cfa_offset 32
 525              	.LBB112:
4498:fltk-1.3.4-1/png/pngrtran.c ****                row_width);
 526              		.loc 1 4498 0 discriminator 4
 527 0142 48894708 		movq	%rax, 8(%rdi)
 528              	.LBE112:
 529              		.loc 1 4568 0 discriminator 4
 530 0146 5D       		popq	%rbp
 531              		.cfi_def_cfa_offset 24
 532 0147 415C     		popq	%r12
 533              		.cfi_def_cfa_offset 16
 534 0149 415D     		popq	%r13
 535              		.cfi_def_cfa_offset 8
 536 014b C3       		ret
 537 014c 0F1F4000 		.p2align 4,,10
 538              		.p2align 3
 539              	.L66:
 540              		.cfi_restore_state
 541              	.LBB113:
4498:fltk-1.3.4-1/png/pngrtran.c ****                row_width);
 542              		.loc 1 4498 0 discriminator 2
 543 0150 0FB6D0   		movzbl	%al, %edx
 544 0153 4889D0   		movq	%rdx, %rax
 545 0156 490FAFC1 		imulq	%r9, %rax
 546 015a 4883C007 		addq	$7, %rax
 547 015e 48C1E803 		shrq	$3, %rax
 548 0162 EBDD     		jmp	.L67
 549              	.LVL63:
 550              		.p2align 4,,10
 551 0164 0F1F4000 		.p2align 3
 552              	.L35:
4360:fltk-1.3.4-1/png/pngrtran.c ****          {
 553              		.loc 1 4360 0
 554 0168 0FB64711 		movzbl	17(%rdi), %eax
 555 016c 3C07     		cmpb	$7, %al
 556 016e 0F87E1FE 		ja	.L33
 556      FFFF
4358:fltk-1.3.4-1/png/pngrtran.c **** 
 557              		.loc 1 4358 0
 558 0174 4531D2   		xorl	%r10d, %r10d
 559 0177 E901FFFF 		jmp	.L81
 559      FF
 560              	.LVL64:
 561 017c 0F1F4000 		.p2align 4,,10
 562              		.p2align 3
 563              	.L38:
4395:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 564              		.loc 1 4395 0
 565 0180 418D43FF 		leal	-1(%r11), %eax
4397:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 566              		.loc 1 4397 0
 567 0184 418D4B03 		leal	3(%r11), %ecx
4394:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 2);
 568              		.loc 1 4394 0
 569 0188 4183E203 		andl	$3, %r10d
 570 018c 456BD255 		imull	$85, %r10d, %r10d
 571              	.LVL65:
4396:fltk-1.3.4-1/png/pngrtran.c ****                   shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
 572              		.loc 1 4396 0
 573 0190 4589D9   		movl	%r11d, %r9d
4395:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 574              		.loc 1 4395 0
 575 0193 89C3     		movl	%eax, %ebx
4397:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 576              		.loc 1 4397 0
 577 0195 F7D1     		notl	%ecx
4396:fltk-1.3.4-1/png/pngrtran.c ****                   shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
 578              		.loc 1 4396 0
 579 0197 4E8D440E 		leaq	-1(%rsi,%r9), %r8
 579      FF
4395:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 580              		.loc 1 4395 0
 581 019c C1EB02   		shrl	$2, %ebx
4397:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 582              		.loc 1 4397 0
 583 019f 83E103   		andl	$3, %ecx
4395:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 584              		.loc 1 4395 0
 585 01a2 4801F3   		addq	%rsi, %rbx
 586              	.LVL66:
4397:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 587              		.loc 1 4397 0
 588 01a5 01C9     		addl	%ecx, %ecx
 589              	.LVL67:
4398:fltk-1.3.4-1/png/pngrtran.c ****                   {
 590              		.loc 1 4398 0
 591 01a7 4585DB   		testl	%r11d, %r11d
 592 01aa 0F84E8FE 		je	.L41
 592      FFFF
 593 01b0 48F7D0   		notq	%rax
 594 01b3 498D2C00 		leaq	(%r8,%rax), %rbp
 595 01b7 EB17     		jmp	.L49
 596              	.LVL68:
 597 01b9 0F1F8000 		.p2align 4,,10
 597      000000
 598              		.p2align 3
 599              	.L47:
4410:fltk-1.3.4-1/png/pngrtran.c **** 
 600              		.loc 1 4410 0
 601 01c0 83C102   		addl	$2, %ecx
 602              	.LVL69:
 603              	.L48:
4412:fltk-1.3.4-1/png/pngrtran.c ****                   }
 604              		.loc 1 4412 0 discriminator 2
 605 01c3 4983E801 		subq	$1, %r8
 606              	.LVL70:
4398:fltk-1.3.4-1/png/pngrtran.c ****                   {
 607              		.loc 1 4398 0 discriminator 2
 608 01c7 4939E8   		cmpq	%rbp, %r8
 609 01ca 0F84C8FE 		je	.L41
 609      FFFF
 610              	.LVL71:
 611              	.L49:
4400:fltk-1.3.4-1/png/pngrtran.c ****                      *dp = (png_byte)(value | (value << 2) | (value << 4) |
 612              		.loc 1 4400 0
 613 01d0 0FB603   		movzbl	(%rbx), %eax
 614 01d3 D3F8     		sarl	%cl, %eax
 615 01d5 83E003   		andl	$3, %eax
 616              	.LVL72:
4401:fltk-1.3.4-1/png/pngrtran.c ****                         (value << 6));
 617              		.loc 1 4401 0
 618 01d8 448D2C85 		leal	0(,%rax,4), %r13d
 618      00000000 
 619 01e0 4189C4   		movl	%eax, %r12d
 620 01e3 41C1E404 		sall	$4, %r12d
 621 01e7 4509EC   		orl	%r13d, %r12d
 622 01ea 4109C4   		orl	%eax, %r12d
 623 01ed C1E006   		sall	$6, %eax
 624              	.LVL73:
 625 01f0 4409E0   		orl	%r12d, %eax
4403:fltk-1.3.4-1/png/pngrtran.c ****                      {
 626              		.loc 1 4403 0
 627 01f3 83F906   		cmpl	$6, %ecx
4401:fltk-1.3.4-1/png/pngrtran.c ****                         (value << 6));
 628              		.loc 1 4401 0
 629 01f6 418800   		movb	%al, (%r8)
 630              	.LVL74:
4403:fltk-1.3.4-1/png/pngrtran.c ****                      {
 631              		.loc 1 4403 0
 632 01f9 75C5     		jne	.L47
 633              	.LVL75:
4406:fltk-1.3.4-1/png/pngrtran.c ****                      }
 634              		.loc 1 4406 0
 635 01fb 4883EB01 		subq	$1, %rbx
 636              	.LVL76:
4405:fltk-1.3.4-1/png/pngrtran.c ****                         sp--;
 637              		.loc 1 4405 0
 638 01ff 31C9     		xorl	%ecx, %ecx
 639 0201 EBC0     		jmp	.L48
 640              	.LVL77:
 641              		.p2align 4,,10
 642 0203 0F1F4400 		.p2align 3
 642      00
 643              	.L127:
 644 0208 4589D9   		movl	%r11d, %r9d
 645              	.LVL78:
 646              	.L115:
 647 020b 0FB64711 		movzbl	17(%rdi), %eax
 648 020f E90FFFFF 		jmp	.L56
 648      FF
 649              	.LVL79:
 650              		.p2align 4,,10
 651 0214 0F1F4000 		.p2align 3
 652              	.L125:
 653              	.LBB111:
4474:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (row_info->rowbytes << 1) - 1;
 654              		.loc 1 4474 0
 655 0218 488B4708 		movq	8(%rdi), %rax
4472:fltk-1.3.4-1/png/pngrtran.c ****                unsigned int gray_low = gray & 0xff;
 656              		.loc 1 4472 0
 657 021c 41C1EA08 		shrl	$8, %r10d
 658              	.LVL80:
4476:fltk-1.3.4-1/png/pngrtran.c ****                {
 659              		.loc 1 4476 0
 660 0220 4585DB   		testl	%r11d, %r11d
4473:fltk-1.3.4-1/png/pngrtran.c ****                sp = row + row_info->rowbytes - 1;
 661              		.loc 1 4473 0
 662 0223 440FB6C1 		movzbl	%cl, %r8d
 663              	.LVL81:
4474:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (row_info->rowbytes << 1) - 1;
 664              		.loc 1 4474 0
 665 0227 488D5406 		leaq	-1(%rsi,%rax), %rdx
 665      FF
 666              	.LVL82:
4475:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 667              		.loc 1 4475 0
 668 022c 488D4C46 		leaq	-1(%rsi,%rax,2), %rcx
 668      FF
 669              	.LVL83:
4476:fltk-1.3.4-1/png/pngrtran.c ****                {
 670              		.loc 1 4476 0
 671 0231 0F84D902 		je	.L126
 671      0000
 672 0237 418D73FF 		leal	-1(%r11), %esi
 673              	.LVL84:
 674 023b 488D41FE 		leaq	-2(%rcx), %rax
 675 023f 48C1E602 		salq	$2, %rsi
 676 0243 4829F1   		subq	%rsi, %rcx
 677              	.LVL85:
 678 0246 488D71FA 		leaq	-6(%rcx), %rsi
 679 024a EB26     		jmp	.L65
 680              	.LVL86:
 681 024c 0F1F4000 		.p2align 4,,10
 682              		.p2align 3
 683              	.L63:
4486:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0xff;
 684              		.loc 1 4486 0
 685 0250 C64002FF 		movb	$-1, 2(%rax)
 686              	.LVL87:
4487:fltk-1.3.4-1/png/pngrtran.c ****                   }
 687              		.loc 1 4487 0
 688 0254 C64001FF 		movb	$-1, 1(%rax)
 689              	.L64:
 690              	.LVL88:
4490:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = *sp--;
 691              		.loc 1 4490 0 discriminator 2
 692 0258 0FB60A   		movzbl	(%rdx), %ecx
 693 025b 4883EA02 		subq	$2, %rdx
 694              	.LVL89:
 695 025f 4883E804 		subq	$4, %rax
 696              	.LVL90:
 697 0263 884804   		movb	%cl, 4(%rax)
 698              	.LVL91:
4491:fltk-1.3.4-1/png/pngrtran.c ****                }
 699              		.loc 1 4491 0 discriminator 2
 700 0266 0FB64A01 		movzbl	1(%rdx), %ecx
 701 026a 884803   		movb	%cl, 3(%rax)
4476:fltk-1.3.4-1/png/pngrtran.c ****                {
 702              		.loc 1 4476 0 discriminator 2
 703 026d 4839F0   		cmpq	%rsi, %rax
 704 0270 7496     		je	.L127
 705              	.L65:
 706              	.LVL92:
4478:fltk-1.3.4-1/png/pngrtran.c ****                   {
 707              		.loc 1 4478 0
 708 0272 0FB64AFF 		movzbl	-1(%rdx), %ecx
 709 0276 4139CA   		cmpl	%ecx, %r10d
 710 0279 75D5     		jne	.L63
4478:fltk-1.3.4-1/png/pngrtran.c ****                   {
 711              		.loc 1 4478 0 is_stmt 0 discriminator 1
 712 027b 0FB60A   		movzbl	(%rdx), %ecx
 713 027e 4139C8   		cmpl	%ecx, %r8d
 714 0281 75CD     		jne	.L63
 715              	.LVL93:
4480:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0;
 716              		.loc 1 4480 0 is_stmt 1
 717 0283 C6400200 		movb	$0, 2(%rax)
 718              	.LVL94:
4481:fltk-1.3.4-1/png/pngrtran.c ****                   }
 719              		.loc 1 4481 0
 720 0287 C6400100 		movb	$0, 1(%rax)
 721 028b EBCB     		jmp	.L64
 722              	.LVL95:
 723 028d 0F1F00   		.p2align 4,,10
 724              		.p2align 3
 725              	.L78:
 726              	.LBE111:
 727              	.LBE113:
4565:fltk-1.3.4-1/png/pngrtran.c ****       }
 728              		.loc 1 4565 0 discriminator 2
 729 0290 0FB6C9   		movzbl	%cl, %ecx
 730 0293 4C0FAFD9 		imulq	%rcx, %r11
 731              	.LVL96:
 732 0297 4983C307 		addq	$7, %r11
 733 029b 49C1EB03 		shrq	$3, %r11
 734 029f E9ADFDFF 		jmp	.L79
 734      FF
 735              	.LVL97:
 736              		.p2align 4,,10
 737 02a4 0F1F4000 		.p2align 3
 738              	.L39:
 739              	.LBB114:
4420:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 740              		.loc 1 4420 0
 741 02a8 458D43FF 		leal	-1(%r11), %r8d
4419:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 1);
 742              		.loc 1 4419 0
 743 02ac 4183E20F 		andl	$15, %r10d
4422:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 744              		.loc 1 4422 0
 745 02b0 418D4B01 		leal	1(%r11), %ecx
4419:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 1);
 746              		.loc 1 4419 0
 747 02b4 4489D0   		movl	%r10d, %eax
4421:fltk-1.3.4-1/png/pngrtran.c ****                   shift = (int)((1 - ((row_width + 1) & 0x01)) << 2);
 748              		.loc 1 4421 0
 749 02b7 4589D9   		movl	%r11d, %r9d
4420:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 750              		.loc 1 4420 0
 751 02ba 4489C3   		movl	%r8d, %ebx
4419:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 1);
 752              		.loc 1 4419 0
 753 02bd C1E004   		sall	$4, %eax
4422:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 754              		.loc 1 4422 0
 755 02c0 83E101   		andl	$1, %ecx
4420:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 756              		.loc 1 4420 0
 757 02c3 D1EB     		shrl	%ebx
4419:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 1);
 758              		.loc 1 4419 0
 759 02c5 4101C2   		addl	%eax, %r10d
 760              	.LVL98:
4421:fltk-1.3.4-1/png/pngrtran.c ****                   shift = (int)((1 - ((row_width + 1) & 0x01)) << 2);
 761              		.loc 1 4421 0
 762 02c8 4A8D440E 		leaq	-1(%rsi,%r9), %rax
 762      FF
4420:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 763              		.loc 1 4420 0
 764 02cd 4801F3   		addq	%rsi, %rbx
 765              	.LVL99:
4422:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 766              		.loc 1 4422 0
 767 02d0 83F901   		cmpl	$1, %ecx
 768 02d3 19C9     		sbbl	%ecx, %ecx
 769 02d5 83E104   		andl	$4, %ecx
 770              	.LVL100:
4423:fltk-1.3.4-1/png/pngrtran.c ****                   {
 771              		.loc 1 4423 0
 772 02d8 4585DB   		testl	%r11d, %r11d
 773 02db 0F84B7FD 		je	.L41
 773      FFFF
 774 02e1 49F7D0   		notq	%r8
 775 02e4 4A8D2C00 		leaq	(%rax,%r8), %rbp
 776 02e8 EB18     		jmp	.L52
 777 02ea 660F1F44 		.p2align 4,,10
 777      0000
 778              		.p2align 3
 779              	.L84:
4434:fltk-1.3.4-1/png/pngrtran.c **** 
 780              		.loc 1 4434 0
 781 02f0 B9040000 		movl	$4, %ecx
 781      00
 782              	.LVL101:
 783              	.L51:
4436:fltk-1.3.4-1/png/pngrtran.c ****                   }
 784              		.loc 1 4436 0 discriminator 2
 785 02f5 4883E801 		subq	$1, %rax
 786              	.LVL102:
4423:fltk-1.3.4-1/png/pngrtran.c ****                   {
 787              		.loc 1 4423 0 discriminator 2
 788 02f9 4839E8   		cmpq	%rbp, %rax
 789 02fc 0F8496FD 		je	.L41
 789      FFFF
 790              	.LVL103:
 791              	.L52:
4425:fltk-1.3.4-1/png/pngrtran.c ****                      *dp = (png_byte)(value | (value << 4));
 792              		.loc 1 4425 0
 793 0302 440FB603 		movzbl	(%rbx), %r8d
 794 0306 41D3F8   		sarl	%cl, %r8d
 795 0309 4183E00F 		andl	$15, %r8d
 796              	.LVL104:
4426:fltk-1.3.4-1/png/pngrtran.c ****                      if (shift == 4)
 797              		.loc 1 4426 0
 798 030d 4589C4   		movl	%r8d, %r12d
 799 0310 41C1E404 		sall	$4, %r12d
 800 0314 4509E0   		orl	%r12d, %r8d
 801              	.LVL105:
4427:fltk-1.3.4-1/png/pngrtran.c ****                      {
 802              		.loc 1 4427 0
 803 0317 83F904   		cmpl	$4, %ecx
4426:fltk-1.3.4-1/png/pngrtran.c ****                      if (shift == 4)
 804              		.loc 1 4426 0
 805 031a 448800   		movb	%r8b, (%rax)
 806              	.LVL106:
4427:fltk-1.3.4-1/png/pngrtran.c ****                      {
 807              		.loc 1 4427 0
 808 031d 75D1     		jne	.L84
 809              	.LVL107:
4430:fltk-1.3.4-1/png/pngrtran.c ****                      }
 810              		.loc 1 4430 0
 811 031f 4883EB01 		subq	$1, %rbx
 812              	.LVL108:
4429:fltk-1.3.4-1/png/pngrtran.c ****                         sp--;
 813              		.loc 1 4429 0
 814 0323 31C9     		xorl	%ecx, %ecx
 815 0325 EBCE     		jmp	.L51
 816              	.LVL109:
 817 0327 660F1F84 		.p2align 4,,10
 817      00000000 
 817      00
 818              		.p2align 3
 819              	.L123:
4366:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 3);
 820              		.loc 1 4366 0
 821 0330 4489D0   		movl	%r10d, %eax
4369:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 822              		.loc 1 4369 0
 823 0333 418D4B07 		leal	7(%r11), %ecx
4368:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 7 - (int)((row_width + 7) & 0x07);
 824              		.loc 1 4368 0
 825 0337 4589D9   		movl	%r11d, %r9d
4366:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 3);
 826              		.loc 1 4366 0
 827 033a 83E001   		andl	$1, %eax
4368:fltk-1.3.4-1/png/pngrtran.c ****                   shift = 7 - (int)((row_width + 7) & 0x07);
 828              		.loc 1 4368 0
 829 033d 4E8D440E 		leaq	-1(%rsi,%r9), %r8
 829      FF
4366:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 3);
 830              		.loc 1 4366 0
 831 0342 4189C2   		movl	%eax, %r10d
4369:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 832              		.loc 1 4369 0
 833 0345 F7D1     		notl	%ecx
4366:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 3);
 834              		.loc 1 4366 0
 835 0347 41C1E208 		sall	$8, %r10d
4369:fltk-1.3.4-1/png/pngrtran.c ****                   for (i = 0; i < row_width; i++)
 836              		.loc 1 4369 0
 837 034b 83E107   		andl	$7, %ecx
4366:fltk-1.3.4-1/png/pngrtran.c ****                   sp = row + (png_size_t)((row_width - 1) >> 3);
 838              		.loc 1 4366 0
 839 034e 4129C2   		subl	%eax, %r10d
 840              	.LVL110:
4367:fltk-1.3.4-1/png/pngrtran.c ****                   dp = row + (png_size_t)row_width - 1;
 841              		.loc 1 4367 0
 842 0351 418D43FF 		leal	-1(%r11), %eax
 843 0355 89C3     		movl	%eax, %ebx
 844 0357 C1EB03   		shrl	$3, %ebx
 845 035a 4801F3   		addq	%rsi, %rbx
 846              	.LVL111:
4370:fltk-1.3.4-1/png/pngrtran.c ****                   {
 847              		.loc 1 4370 0
 848 035d 4585DB   		testl	%r11d, %r11d
 849 0360 0F8432FD 		je	.L41
 849      FFFF
 850 0366 48F7D0   		notq	%rax
 851 0369 498D2C00 		leaq	(%r8,%rax), %rbp
 852 036d EB11     		jmp	.L46
 853 036f 90       		.p2align 4,,10
 854              		.p2align 3
 855              	.L44:
4385:fltk-1.3.4-1/png/pngrtran.c **** 
 856              		.loc 1 4385 0
 857 0370 83C101   		addl	$1, %ecx
 858              	.LVL112:
 859              	.L45:
4387:fltk-1.3.4-1/png/pngrtran.c ****                   }
 860              		.loc 1 4387 0 discriminator 2
 861 0373 4983E801 		subq	$1, %r8
 862              	.LVL113:
4370:fltk-1.3.4-1/png/pngrtran.c ****                   {
 863              		.loc 1 4370 0 discriminator 2
 864 0377 4939E8   		cmpq	%rbp, %r8
 865 037a 0F8418FD 		je	.L41
 865      FFFF
 866              	.LVL114:
 867              	.L46:
4372:fltk-1.3.4-1/png/pngrtran.c ****                         *dp = 0xff;
 868              		.loc 1 4372 0
 869 0380 0FB603   		movzbl	(%rbx), %eax
 870 0383 D3F8     		sarl	%cl, %eax
 871 0385 83E001   		andl	$1, %eax
4373:fltk-1.3.4-1/png/pngrtran.c **** 
 872              		.loc 1 4373 0
 873 0388 F7D8     		negl	%eax
4378:fltk-1.3.4-1/png/pngrtran.c ****                      {
 874              		.loc 1 4378 0
 875 038a 83F907   		cmpl	$7, %ecx
4373:fltk-1.3.4-1/png/pngrtran.c **** 
 876              		.loc 1 4373 0
 877 038d 418800   		movb	%al, (%r8)
4378:fltk-1.3.4-1/png/pngrtran.c ****                      {
 878              		.loc 1 4378 0
 879 0390 75DE     		jne	.L44
 880              	.LVL115:
4381:fltk-1.3.4-1/png/pngrtran.c ****                      }
 881              		.loc 1 4381 0
 882 0392 4883EB01 		subq	$1, %rbx
 883              	.LVL116:
4380:fltk-1.3.4-1/png/pngrtran.c ****                         sp--;
 884              		.loc 1 4380 0
 885 0396 31C9     		xorl	%ecx, %ecx
 886 0398 EBD9     		jmp	.L45
 887              	.LVL117:
 888 039a 660F1F44 		.p2align 4,,10
 888      0000
 889              		.p2align 3
 890              	.L120:
 891              	.LBE114:
 892              	.LBB115:
4510:fltk-1.3.4-1/png/pngrtran.c ****             dp = row + (png_size_t)(row_width << 2) - 1;
 893              		.loc 1 4510 0
 894 03a0 488B4708 		movq	8(%rdi), %rax
4512:fltk-1.3.4-1/png/pngrtran.c ****             {
 895              		.loc 1 4512 0
 896 03a4 4585DB   		testl	%r11d, %r11d
4507:fltk-1.3.4-1/png/pngrtran.c ****             png_byte green = (png_byte)(trans_color->green & 0xff);
 897              		.loc 1 4507 0
 898 03a7 440FB642 		movzbl	2(%rdx), %r8d
 898      02
 899              	.LVL118:
4508:fltk-1.3.4-1/png/pngrtran.c ****             png_byte blue = (png_byte)(trans_color->blue & 0xff);
 900              		.loc 1 4508 0
 901 03ac 440FB64A 		movzbl	4(%rdx), %r9d
 901      04
 902              	.LVL119:
4509:fltk-1.3.4-1/png/pngrtran.c ****             sp = row + (png_size_t)row_info->rowbytes - 1;
 903              		.loc 1 4509 0
 904 03b1 440FB652 		movzbl	6(%rdx), %r10d
 904      06
 905              	.LVL120:
4511:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 906              		.loc 1 4511 0
 907 03b6 428D149D 		leal	0(,%r11,4), %edx
 907      00000000 
 908              	.LVL121:
4510:fltk-1.3.4-1/png/pngrtran.c ****             dp = row + (png_size_t)(row_width << 2) - 1;
 909              		.loc 1 4510 0
 910 03be 488D4406 		leaq	-1(%rsi,%rax), %rax
 910      FF
 911              	.LVL122:
4512:fltk-1.3.4-1/png/pngrtran.c ****             {
 912              		.loc 1 4512 0
 913 03c3 0F846001 		je	.L70
 913      0000
 914 03c9 418D4BFF 		leal	-1(%r11), %ecx
 915 03cd 4889C3   		movq	%rax, %rbx
 916 03d0 488D5416 		leaq	-2(%rsi,%rdx), %rdx
 916      FE
 917              	.LVL123:
 918 03d5 488D0C49 		leaq	(%rcx,%rcx,2), %rcx
 919 03d9 4829CB   		subq	%rcx, %rbx
 920 03dc 488D73FD 		leaq	-3(%rbx), %rsi
 921              	.LVL124:
 922 03e0 EB2B     		jmp	.L73
 923              	.LVL125:
 924              		.p2align 4,,10
 925 03e2 660F1F44 		.p2align 3
 925      0000
 926              	.L71:
4518:fltk-1.3.4-1/png/pngrtran.c **** 
 927              		.loc 1 4518 0
 928 03e8 C64201FF 		movb	$-1, 1(%rdx)
 929              	.L72:
 930              	.LVL126:
4520:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
 931              		.loc 1 4520 0 discriminator 2
 932 03ec 0FB608   		movzbl	(%rax), %ecx
 933 03ef 4883E803 		subq	$3, %rax
 934              	.LVL127:
 935 03f3 4883EA04 		subq	$4, %rdx
 936              	.LVL128:
 937 03f7 884A04   		movb	%cl, 4(%rdx)
 938              	.LVL129:
4521:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
 939              		.loc 1 4521 0 discriminator 2
 940 03fa 0FB64802 		movzbl	2(%rax), %ecx
 941 03fe 884A03   		movb	%cl, 3(%rdx)
 942              	.LVL130:
4522:fltk-1.3.4-1/png/pngrtran.c ****             }
 943              		.loc 1 4522 0 discriminator 2
 944 0401 0FB64801 		movzbl	1(%rax), %ecx
 945 0405 884A02   		movb	%cl, 2(%rdx)
4512:fltk-1.3.4-1/png/pngrtran.c ****             {
 946              		.loc 1 4512 0 discriminator 2
 947 0408 4839F0   		cmpq	%rsi, %rax
 948 040b 741B     		je	.L116
 949              	.L73:
 950              	.LVL131:
4514:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0;
 951              		.loc 1 4514 0
 952 040d 443A40FE 		cmpb	-2(%rax), %r8b
 953 0411 75D5     		jne	.L71
4514:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0;
 954              		.loc 1 4514 0 is_stmt 0 discriminator 1
 955 0413 443A48FF 		cmpb	-1(%rax), %r9b
 956 0417 75CF     		jne	.L71
4514:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0;
 957              		.loc 1 4514 0 discriminator 2
 958 0419 443A10   		cmpb	(%rax), %r10b
 959 041c 75CA     		jne	.L71
 960              	.LVL132:
4515:fltk-1.3.4-1/png/pngrtran.c **** 
 961              		.loc 1 4515 0 is_stmt 1
 962 041e C6420100 		movb	$0, 1(%rdx)
 963 0422 EBC8     		jmp	.L72
 964              	.LVL133:
 965              		.p2align 4,,10
 966 0424 0F1F4000 		.p2align 3
 967              	.L116:
 968 0428 0FB64F11 		movzbl	17(%rdi), %ecx
 969 042c E9FFFBFF 		jmp	.L74
 969      FF
 970              	.LVL134:
 971              		.p2align 4,,10
 972 0431 0F1F8000 		.p2align 3
 972      000000
 973              	.L121:
 974              	.LBE115:
 975              	.LBB116:
4527:fltk-1.3.4-1/png/pngrtran.c ****             png_byte green_high = (png_byte)((trans_color->green >> 8) & 0xff);
 976              		.loc 1 4527 0
 977 0438 440FB74A 		movzwl	2(%rdx), %r9d
 977      02
4528:fltk-1.3.4-1/png/pngrtran.c ****             png_byte blue_high = (png_byte)((trans_color->blue >> 8) & 0xff);
 978              		.loc 1 4528 0
 979 043d 440FB752 		movzwl	4(%rdx), %r10d
 979      04
4529:fltk-1.3.4-1/png/pngrtran.c ****             png_byte red_low = (png_byte)(trans_color->red & 0xff);
 980              		.loc 1 4529 0
 981 0442 0FB75A06 		movzwl	6(%rdx), %ebx
4534:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 982              		.loc 1 4534 0
 983 0446 428D14DD 		leal	0(,%r11,8), %edx
 983      00000000 
 984              	.LVL135:
4527:fltk-1.3.4-1/png/pngrtran.c ****             png_byte green_high = (png_byte)((trans_color->green >> 8) & 0xff);
 985              		.loc 1 4527 0
 986 044e 4489C8   		movl	%r9d, %eax
 987 0451 66C1E808 		shrw	$8, %ax
 988 0455 4189C0   		movl	%eax, %r8d
 989              	.LVL136:
4528:fltk-1.3.4-1/png/pngrtran.c ****             png_byte blue_high = (png_byte)((trans_color->blue >> 8) & 0xff);
 990              		.loc 1 4528 0
 991 0458 4489D0   		movl	%r10d, %eax
 992              	.LVL137:
 993 045b 66C1E808 		shrw	$8, %ax
 994 045f 89C5     		movl	%eax, %ebp
 995              	.LVL138:
4529:fltk-1.3.4-1/png/pngrtran.c ****             png_byte red_low = (png_byte)(trans_color->red & 0xff);
 996              		.loc 1 4529 0
 997 0461 89D8     		movl	%ebx, %eax
 998              	.LVL139:
 999 0463 66C1E808 		shrw	$8, %ax
4535:fltk-1.3.4-1/png/pngrtran.c ****             {
 1000              		.loc 1 4535 0
 1001 0467 4585DB   		testl	%r11d, %r11d
4529:fltk-1.3.4-1/png/pngrtran.c ****             png_byte red_low = (png_byte)(trans_color->red & 0xff);
 1002              		.loc 1 4529 0
 1003 046a 4189C4   		movl	%eax, %r12d
 1004              	.LVL140:
4533:fltk-1.3.4-1/png/pngrtran.c ****             dp = row + (png_size_t)(row_width << 3) - 1;
 1005              		.loc 1 4533 0
 1006 046d 488B4708 		movq	8(%rdi), %rax
 1007              	.LVL141:
 1008 0471 488D4406 		leaq	-1(%rsi,%rax), %rax
 1008      FF
 1009              	.LVL142:
4535:fltk-1.3.4-1/png/pngrtran.c ****             {
 1010              		.loc 1 4535 0
 1011 0476 0F84AD00 		je	.L70
 1011      0000
 1012 047c 418D4BFF 		leal	-1(%r11), %ecx
 1013 0480 488D5416 		leaq	-3(%rsi,%rdx), %rdx
 1013      FD
 1014              	.LVL143:
 1015 0485 4889C6   		movq	%rax, %rsi
 1016              	.LVL144:
 1017 0488 488D0C49 		leaq	(%rcx,%rcx,2), %rcx
 1018 048c 4801C9   		addq	%rcx, %rcx
 1019 048f 4829CE   		subq	%rcx, %rsi
 1020 0492 488D76FA 		leaq	-6(%rsi), %rsi
 1021 0496 EB4A     		jmp	.L77
 1022              	.LVL145:
 1023 0498 0F1F8400 		.p2align 4,,10
 1023      00000000 
 1024              		.p2align 3
 1025              	.L75:
4550:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0xff;
 1026              		.loc 1 4550 0
 1027 04a0 C64202FF 		movb	$-1, 2(%rdx)
 1028              	.LVL146:
4551:fltk-1.3.4-1/png/pngrtran.c ****                }
 1029              		.loc 1 4551 0
 1030 04a4 C64201FF 		movb	$-1, 1(%rdx)
 1031              	.L76:
 1032              	.LVL147:
4554:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
 1033              		.loc 1 4554 0 discriminator 2
 1034 04a8 0FB608   		movzbl	(%rax), %ecx
 1035 04ab 4883E806 		subq	$6, %rax
 1036              	.LVL148:
 1037 04af 4883EA08 		subq	$8, %rdx
 1038              	.LVL149:
 1039 04b3 884A08   		movb	%cl, 8(%rdx)
 1040              	.LVL150:
4555:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
 1041              		.loc 1 4555 0 discriminator 2
 1042 04b6 0FB64805 		movzbl	5(%rax), %ecx
 1043 04ba 884A07   		movb	%cl, 7(%rdx)
 1044              	.LVL151:
4556:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
 1045              		.loc 1 4556 0 discriminator 2
 1046 04bd 0FB64804 		movzbl	4(%rax), %ecx
 1047 04c1 884A06   		movb	%cl, 6(%rdx)
 1048              	.LVL152:
4557:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
 1049              		.loc 1 4557 0 discriminator 2
 1050 04c4 0FB64803 		movzbl	3(%rax), %ecx
 1051 04c8 884A05   		movb	%cl, 5(%rdx)
 1052              	.LVL153:
4558:fltk-1.3.4-1/png/pngrtran.c ****                *dp-- = *sp--;
 1053              		.loc 1 4558 0 discriminator 2
 1054 04cb 0FB64802 		movzbl	2(%rax), %ecx
 1055 04cf 884A04   		movb	%cl, 4(%rdx)
 1056              	.LVL154:
4559:fltk-1.3.4-1/png/pngrtran.c ****             }
 1057              		.loc 1 4559 0 discriminator 2
 1058 04d2 0FB64801 		movzbl	1(%rax), %ecx
 1059 04d6 884A03   		movb	%cl, 3(%rdx)
4535:fltk-1.3.4-1/png/pngrtran.c ****             {
 1060              		.loc 1 4535 0 discriminator 2
 1061 04d9 4839F0   		cmpq	%rsi, %rax
 1062 04dc 0F8446FF 		je	.L116
 1062      FFFF
 1063              	.L77:
 1064              	.LVL155:
4537:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 4) == red_low &&
 1065              		.loc 1 4537 0
 1066 04e2 443A40FB 		cmpb	-5(%rax), %r8b
 1067 04e6 75B8     		jne	.L75
4537:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 4) == red_low &&
 1068              		.loc 1 4537 0 is_stmt 0 discriminator 1
 1069 04e8 443A48FC 		cmpb	-4(%rax), %r9b
 1070 04ec 75B2     		jne	.L75
4538:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 3) == green_high &&
 1071              		.loc 1 4538 0 is_stmt 1
 1072 04ee 403A68FD 		cmpb	-3(%rax), %bpl
 1073 04f2 75AC     		jne	.L75
4539:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 2) == green_low &&
 1074              		.loc 1 4539 0
 1075 04f4 443A50FE 		cmpb	-2(%rax), %r10b
 1076 04f8 75A6     		jne	.L75
4540:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp - 1) == blue_high &&
 1077              		.loc 1 4540 0
 1078 04fa 443A60FF 		cmpb	-1(%rax), %r12b
 1079 04fe 75A0     		jne	.L75
4541:fltk-1.3.4-1/png/pngrtran.c ****                    *(sp    ) == blue_low)
 1080              		.loc 1 4541 0
 1081 0500 3A18     		cmpb	(%rax), %bl
 1082 0502 759C     		jne	.L75
 1083              	.LVL156:
4544:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = 0;
 1084              		.loc 1 4544 0
 1085 0504 C6420200 		movb	$0, 2(%rdx)
 1086              	.LVL157:
4545:fltk-1.3.4-1/png/pngrtran.c ****                }
 1087              		.loc 1 4545 0
 1088 0508 C6420100 		movb	$0, 1(%rdx)
 1089 050c EB9A     		jmp	.L76
 1090              	.LVL158:
 1091 050e 6690     		.p2align 4,,10
 1092              		.p2align 3
 1093              	.L126:
 1094              	.LBE116:
 1095              	.LBB117:
4495:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
 1096              		.loc 1 4495 0
 1097 0510 C6471004 		movb	$4, 16(%rdi)
 1098              	.LVL159:
4496:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = (png_byte)(row_info->bit_depth << 1);
 1099              		.loc 1 4496 0
 1100 0514 C6471202 		movb	$2, 18(%rdi)
4497:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth,
 1101              		.loc 1 4497 0
 1102 0518 4531C9   		xorl	%r9d, %r9d
 1103 051b C6471320 		movb	$32, 19(%rdi)
 1104 051f B8200000 		movl	$32, %eax
 1104      00
 1105 0524 E90BFCFF 		jmp	.L62
 1105      FF
 1106              	.LVL160:
 1107              	.L70:
 1108              	.LBE117:
4564:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
 1109              		.loc 1 4564 0
 1110 0529 C1E102   		sall	$2, %ecx
4562:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = 4;
 1111              		.loc 1 4562 0
 1112 052c C6471006 		movb	$6, 16(%rdi)
4563:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = (png_byte)(row_info->bit_depth << 2);
 1113              		.loc 1 4563 0
 1114 0530 C6471204 		movb	$4, 18(%rdi)
4564:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
 1115              		.loc 1 4564 0
 1116 0534 884F13   		movb	%cl, 19(%rdi)
 1117 0537 E90BFBFF 		jmp	.L82
 1117      FF
 1118              	.LVL161:
 1119              	.L124:
 1120 053c 4589D9   		movl	%r11d, %r9d
 1121 053f E965FBFF 		jmp	.L53
 1121      FF
 1122              		.cfi_endproc
 1123              	.LFE97:
 1125              		.section	.text.unlikely.png_do_expand
 1126              	.LCOLDE1:
 1127              		.section	.text.png_do_expand
 1128              	.LHOTE1:
 1129              		.section	.rodata.str1.8,"aMS",@progbits,1
 1130              		.align 8
 1131              	.LC2:
 1132 0000 696E7661 		.string	"invalid after png_start_read_image or png_read_update_info"
 1132      6C696420 
 1132      61667465 
 1132      7220706E 
 1132      675F7374 
 1133 003b 00000000 		.align 8
 1133      00
 1134              	.LC3:
 1135 0040 696E7661 		.string	"invalid before the PNG header has been read"
 1135      6C696420 
 1135      6265666F 
 1135      72652074 
 1135      68652050 
 1136              		.section	.text.unlikely.png_rtran_ok,"ax",@progbits
 1137              	.LCOLDB4:
 1138              		.section	.text.png_rtran_ok,"ax",@progbits
 1139              	.LHOTB4:
 1140              		.p2align 4,,15
 1142              	png_rtran_ok:
 1143              	.LFB57:
  99:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr != NULL)
 1144              		.loc 1 99 0
 1145              		.cfi_startproc
 1146              	.LVL162:
 1147 0000 4883EC08 		subq	$8, %rsp
 1148              		.cfi_def_cfa_offset 16
 100:fltk-1.3.4-1/png/pngrtran.c ****    {
 1149              		.loc 1 100 0
 1150 0004 4885FF   		testq	%rdi, %rdi
 1151 0007 745F     		je	.L132
 102:fltk-1.3.4-1/png/pngrtran.c ****          png_app_error(png_ptr,
 1152              		.loc 1 102 0
 1153 0009 8B873001 		movl	304(%rdi), %eax
 1153      0000
 1154 000f A840     		testb	$64, %al
 1155 0011 753D     		jne	.L137
 106:fltk-1.3.4-1/png/pngrtran.c ****          png_app_error(png_ptr, "invalid before the PNG header has been read");
 1156              		.loc 1 106 0
 1157 0013 85F6     		testl	%esi, %esi
 1158 0015 7519     		jne	.L138
 1159              	.L131:
 112:fltk-1.3.4-1/png/pngrtran.c **** 
 1160              		.loc 1 112 0
 1161 0017 80CC40   		orb	$64, %ah
 1162 001a 89873001 		movl	%eax, 304(%rdi)
 1162      0000
 114:fltk-1.3.4-1/png/pngrtran.c ****       }
 1163              		.loc 1 114 0
 1164 0020 B8010000 		movl	$1, %eax
 1164      00
 1165              	.LVL163:
 1166              	.L129:
 119:fltk-1.3.4-1/png/pngrtran.c **** #endif
 1167              		.loc 1 119 0
 1168 0025 4883C408 		addq	$8, %rsp
 1169              		.cfi_remember_state
 1170              		.cfi_def_cfa_offset 8
 1171 0029 C3       		ret
 1172              	.LVL164:
 1173 002a 660F1F44 		.p2align 4,,10
 1173      0000
 1174              		.p2align 3
 1175              	.L138:
 1176              		.cfi_restore_state
 106:fltk-1.3.4-1/png/pngrtran.c ****          png_app_error(png_ptr, "invalid before the PNG header has been read");
 1177              		.loc 1 106 0 discriminator 1
 1178 0030 F6872C01 		testb	$1, 300(%rdi)
 1178      000001
 1179 0037 75DE     		jne	.L131
 107:fltk-1.3.4-1/png/pngrtran.c **** 
 1180              		.loc 1 107 0
 1181 0039 BE000000 		movl	$.LC3, %esi
 1181      00
 1182              	.LVL165:
 1183 003e E8000000 		call	png_app_error
 1183      00
 1184              	.LVL166:
 118:fltk-1.3.4-1/png/pngrtran.c **** }
 1185              		.loc 1 118 0
 1186 0043 31C0     		xorl	%eax, %eax
 107:fltk-1.3.4-1/png/pngrtran.c **** 
 1187              		.loc 1 107 0
 1188 0045 EBDE     		jmp	.L129
 1189              	.LVL167:
 1190 0047 660F1F84 		.p2align 4,,10
 1190      00000000 
 1190      00
 1191              		.p2align 3
 1192              	.L137:
 103:fltk-1.3.4-1/png/pngrtran.c ****             "invalid after png_start_read_image or png_read_update_info");
 1193              		.loc 1 103 0
 1194 0050 BE000000 		movl	$.LC2, %esi
 1194      00
 1195              	.LVL168:
 1196 0055 E8000000 		call	png_app_error
 1196      00
 1197              	.LVL169:
 118:fltk-1.3.4-1/png/pngrtran.c **** }
 1198              		.loc 1 118 0
 1199 005a 31C0     		xorl	%eax, %eax
 119:fltk-1.3.4-1/png/pngrtran.c **** #endif
 1200              		.loc 1 119 0
 1201 005c 4883C408 		addq	$8, %rsp
 1202              		.cfi_remember_state
 1203              		.cfi_def_cfa_offset 8
 1204 0060 C3       		ret
 1205              	.LVL170:
 1206              		.p2align 4,,10
 1207 0061 0F1F8000 		.p2align 3
 1207      000000
 1208              	.L132:
 1209              		.cfi_restore_state
 118:fltk-1.3.4-1/png/pngrtran.c **** }
 1210              		.loc 1 118 0
 1211 0068 31C0     		xorl	%eax, %eax
 119:fltk-1.3.4-1/png/pngrtran.c **** #endif
 1212              		.loc 1 119 0
 1213 006a 4883C408 		addq	$8, %rsp
 1214              		.cfi_def_cfa_offset 8
 1215 006e C3       		ret
 1216              		.cfi_endproc
 1217              	.LFE57:
 1219              		.section	.text.unlikely.png_rtran_ok
 1220              	.LCOLDE4:
 1221              		.section	.text.png_rtran_ok
 1222              	.LHOTE4:
 1223              		.section	.rodata.str1.1,"aMS",@progbits,1
 1224              	.LC11:
 1225 0000 67616D6D 		.string	"gamma value"
 1225      61207661 
 1225      6C756500 
 1226              		.section	.text.unlikely.convert_gamma_value,"ax",@progbits
 1227              	.LCOLDB12:
 1228              		.section	.text.convert_gamma_value,"ax",@progbits
 1229              	.LHOTB12:
 1230              		.p2align 4,,15
 1232              	convert_gamma_value:
 1233              	.LFB64:
 251:fltk-1.3.4-1/png/pngrtran.c ****    /* The following silently ignores cases where fixed point (times 100,000)
 1234              		.loc 1 251 0
 1235              		.cfi_startproc
 1236              	.LVL171:
 259:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma *= PNG_FP_1;
 1237              		.loc 1 259 0
 1238 0000 660F2E05 		ucomisd	.LC5(%rip), %xmm0
 1238      00000000 
 251:fltk-1.3.4-1/png/pngrtran.c ****    /* The following silently ignores cases where fixed point (times 100,000)
 1239              		.loc 1 251 0
 1240 0008 53       		pushq	%rbx
 1241              		.cfi_def_cfa_offset 16
 1242              		.cfi_offset 3, -16
 251:fltk-1.3.4-1/png/pngrtran.c ****    /* The following silently ignores cases where fixed point (times 100,000)
 1243              		.loc 1 251 0
 1244 0009 4889FB   		movq	%rdi, %rbx
 259:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma *= PNG_FP_1;
 1245              		.loc 1 259 0
 1246 000c 760E     		jbe	.L140
 259:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma *= PNG_FP_1;
 1247              		.loc 1 259 0 is_stmt 0 discriminator 1
 1248 000e F20F100D 		movsd	.LC6(%rip), %xmm1
 1248      00000000 
 1249 0016 660F2EC8 		ucomisd	%xmm0, %xmm1
 1250 001a 7734     		ja	.L150
 1251              	.L140:
 263:fltk-1.3.4-1/png/pngrtran.c **** 
 1252              		.loc 1 263 0 is_stmt 1
 1253 001c F20F5805 		addsd	.LC8(%rip), %xmm0
 1253      00000000 
 1254              	.LVL172:
 1255 0024 E8000000 		call	floor
 1255      00
 1256              	.LVL173:
 265:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed_error(png_ptr, "gamma value");
 1257              		.loc 1 265 0
 1258 0029 660F2E05 		ucomisd	.LC9(%rip), %xmm0
 1258      00000000 
 1259 0031 7727     		ja	.L143
 265:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed_error(png_ptr, "gamma value");
 1260              		.loc 1 265 0 is_stmt 0 discriminator 1
 1261 0033 F20F100D 		movsd	.LC10(%rip), %xmm1
 1261      00000000 
 1262 003b 660F2EC8 		ucomisd	%xmm0, %xmm1
 1263 003f 7719     		ja	.L143
 268:fltk-1.3.4-1/png/pngrtran.c **** }
 1264              		.loc 1 268 0 is_stmt 1
 1265 0041 F20F2CC0 		cvttsd2si	%xmm0, %eax
 269:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 1266              		.loc 1 269 0
 1267 0045 5B       		popq	%rbx
 1268              		.cfi_remember_state
 1269              		.cfi_def_cfa_offset 8
 1270              	.LVL174:
 1271 0046 C3       		ret
 1272              	.LVL175:
 1273 0047 660F1F84 		.p2align 4,,10
 1273      00000000 
 1273      00
 1274              		.p2align 3
 1275              	.L150:
 1276              		.cfi_restore_state
 260:fltk-1.3.4-1/png/pngrtran.c **** 
 1277              		.loc 1 260 0
 1278 0050 F20F5905 		mulsd	.LC7(%rip), %xmm0
 1278      00000000 
 1279              	.LVL176:
 1280 0058 EBC2     		jmp	.L140
 1281              	.L143:
 266:fltk-1.3.4-1/png/pngrtran.c **** 
 1282              		.loc 1 266 0
 1283 005a BE000000 		movl	$.LC11, %esi
 1283      00
 1284 005f 4889DF   		movq	%rbx, %rdi
 1285 0062 E8000000 		call	png_fixed_error
 1285      00
 1286              	.LVL177:
 1287              		.cfi_endproc
 1288              	.LFE64:
 1290              		.section	.text.unlikely.convert_gamma_value
 1291              	.LCOLDE12:
 1292              		.section	.text.convert_gamma_value
 1293              	.LHOTE12:
 1294              		.section	.rodata.str1.8
 1295 006c 00000000 		.align 8
 1296              	.LC13:
 1297 0070 43616E27 		.string	"Can't discard critical data on CRC error"
 1297      74206469 
 1297      73636172 
 1297      64206372 
 1297      69746963 
 1298              		.section	.text.unlikely.png_set_crc_action,"ax",@progbits
 1299              	.LCOLDB14:
 1300              		.section	.text.png_set_crc_action,"ax",@progbits
 1301              	.LHOTB14:
 1302              		.p2align 4,,15
 1303              		.globl	png_set_crc_action
 1305              	png_set_crc_action:
 1306              	.LFB56:
  26:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_crc_action");
 1307              		.loc 1 26 0
 1308              		.cfi_startproc
 1309              	.LVL178:
  29:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1310              		.loc 1 29 0
 1311 0000 4885FF   		testq	%rdi, %rdi
 1312 0003 743F     		je	.L175
  26:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_crc_action");
 1313              		.loc 1 26 0
 1314 0005 55       		pushq	%rbp
 1315              		.cfi_def_cfa_offset 16
 1316              		.cfi_offset 6, -16
 1317 0006 53       		pushq	%rbx
 1318              		.cfi_def_cfa_offset 24
 1319              		.cfi_offset 3, -24
 1320 0007 89D5     		movl	%edx, %ebp
 1321 0009 4889FB   		movq	%rdi, %rbx
 1322 000c 4883EC08 		subq	$8, %rsp
 1323              		.cfi_def_cfa_offset 32
  33:fltk-1.3.4-1/png/pngrtran.c ****    {
 1324              		.loc 1 33 0
 1325 0010 83FE03   		cmpl	$3, %esi
 1326 0013 0F84D700 		je	.L154
 1326      0000
 1327 0019 7E35     		jle	.L176
 1328 001b 83FE04   		cmpl	$4, %esi
 1329 001e 0F84BC00 		je	.L157
 1329      0000
 1330 0024 83FE05   		cmpl	$5, %esi
 1331 0027 7536     		jne	.L153
 1332              	.L158:
  61:fltk-1.3.4-1/png/pngrtran.c ****    {
 1333              		.loc 1 61 0
 1334 0029 83FD03   		cmpl	$3, %ebp
 1335 002c 7440     		je	.L160
 1336              	.LVL179:
 1337              	.L178:
 1338 002e 7E60     		jle	.L177
 1339 0030 83FD04   		cmpl	$4, %ebp
 1340 0033 0F848F00 		je	.L163
 1340      0000
 1341 0039 83FD05   		cmpl	$5, %ebp
 1342 003c 7572     		jne	.L159
  89:fltk-1.3.4-1/png/pngrtran.c **** 
 1343              		.loc 1 89 0
 1344 003e 4883C408 		addq	$8, %rsp
 1345              		.cfi_def_cfa_offset 24
 1346 0042 5B       		popq	%rbx
 1347              		.cfi_restore 3
 1348              		.cfi_def_cfa_offset 16
 1349              	.LVL180:
 1350 0043 5D       		popq	%rbp
 1351              		.cfi_restore 6
 1352              		.cfi_def_cfa_offset 8
 1353              	.LVL181:
 1354              	.L175:
 1355 0044 F3C3     		rep ret
 1356              	.LVL182:
 1357 0046 662E0F1F 		.p2align 4,,10
 1357      84000000 
 1357      0000
 1358              		.p2align 3
 1359              	.L176:
 1360              		.cfi_def_cfa_offset 32
 1361              		.cfi_offset 3, -24
 1362              		.cfi_offset 6, -16
  33:fltk-1.3.4-1/png/pngrtran.c ****    {
 1363              		.loc 1 33 0
 1364 0050 83FE02   		cmpl	$2, %esi
 1365 0053 750A     		jne	.L153
  50:fltk-1.3.4-1/png/pngrtran.c ****             "Can't discard critical data on CRC error");
 1366              		.loc 1 50 0
 1367 0055 BE000000 		movl	$.LC13, %esi
 1367      00
 1368              	.LVL183:
 1369 005a E8000000 		call	png_warning
 1369      00
 1370              	.LVL184:
 1371              	.L153:
  56:fltk-1.3.4-1/png/pngrtran.c ****          break;
 1372              		.loc 1 56 0
 1373 005f 81A33001 		andl	$-3073, 304(%rbx)
 1373      0000FFF3 
 1373      FFFF
  61:fltk-1.3.4-1/png/pngrtran.c ****    {
 1374              		.loc 1 61 0
 1375 0069 83FD03   		cmpl	$3, %ebp
 1376 006c 75C0     		jne	.L178
 1377              	.L160:
  68:fltk-1.3.4-1/png/pngrtran.c ****          break;
 1378              		.loc 1 68 0
 1379 006e 8B833001 		movl	304(%rbx), %eax
 1379      0000
 1380 0074 80E4FC   		andb	$252, %ah
 1381 0077 80CC01   		orb	$1, %ah
 1382 007a 89833001 		movl	%eax, 304(%rbx)
 1382      0000
  89:fltk-1.3.4-1/png/pngrtran.c **** 
 1383              		.loc 1 89 0
 1384 0080 4883C408 		addq	$8, %rsp
 1385              		.cfi_remember_state
 1386              		.cfi_def_cfa_offset 24
 1387 0084 5B       		popq	%rbx
 1388              		.cfi_restore 3
 1389              		.cfi_def_cfa_offset 16
 1390              	.LVL185:
 1391 0085 5D       		popq	%rbp
 1392              		.cfi_restore 6
 1393              		.cfi_def_cfa_offset 8
 1394              	.LVL186:
 1395 0086 EBBC     		jmp	.L175
 1396              	.LVL187:
 1397 0088 0F1F8400 		.p2align 4,,10
 1397      00000000 
 1398              		.p2align 3
 1399              	.L177:
 1400              		.cfi_restore_state
  61:fltk-1.3.4-1/png/pngrtran.c ****    {
 1401              		.loc 1 61 0
 1402 0090 83FD01   		cmpl	$1, %ebp
 1403 0093 751B     		jne	.L159
  79:fltk-1.3.4-1/png/pngrtran.c ****          break;
 1404              		.loc 1 79 0
 1405 0095 8B833001 		movl	304(%rbx), %eax
 1405      0000
 1406 009b 80E4FC   		andb	$252, %ah
 1407 009e 80CC02   		orb	$2, %ah
 1408 00a1 89833001 		movl	%eax, 304(%rbx)
 1408      0000
  89:fltk-1.3.4-1/png/pngrtran.c **** 
 1409              		.loc 1 89 0
 1410 00a7 4883C408 		addq	$8, %rsp
 1411              		.cfi_remember_state
 1412              		.cfi_def_cfa_offset 24
 1413 00ab 5B       		popq	%rbx
 1414              		.cfi_restore 3
 1415              		.cfi_def_cfa_offset 16
 1416              	.LVL188:
 1417 00ac 5D       		popq	%rbp
 1418              		.cfi_restore 6
 1419              		.cfi_def_cfa_offset 8
 1420              	.LVL189:
 1421 00ad EB95     		jmp	.L175
 1422              	.LVL190:
 1423 00af 90       		.p2align 4,,10
 1424              		.p2align 3
 1425              	.L159:
 1426              		.cfi_restore_state
  86:fltk-1.3.4-1/png/pngrtran.c ****          break;
 1427              		.loc 1 86 0
 1428 00b0 81A33001 		andl	$-769, 304(%rbx)
 1428      0000FFFC 
 1428      FFFF
  89:fltk-1.3.4-1/png/pngrtran.c **** 
 1429              		.loc 1 89 0
 1430 00ba 4883C408 		addq	$8, %rsp
 1431              		.cfi_remember_state
 1432              		.cfi_def_cfa_offset 24
 1433 00be 5B       		popq	%rbx
 1434              		.cfi_restore 3
 1435              		.cfi_def_cfa_offset 16
 1436              	.LVL191:
 1437 00bf 5D       		popq	%rbp
 1438              		.cfi_restore 6
 1439              		.cfi_def_cfa_offset 8
 1440              	.LVL192:
 1441 00c0 EB82     		jmp	.L175
 1442              	.LVL193:
 1443              		.p2align 4,,10
 1444 00c2 660F1F44 		.p2align 3
 1444      0000
 1445              	.L163:
 1446              		.cfi_restore_state
  73:fltk-1.3.4-1/png/pngrtran.c ****                            PNG_FLAG_CRC_ANCILLARY_NOWARN;
 1447              		.loc 1 73 0
 1448 00c8 818B3001 		orl	$768, 304(%rbx)
 1448      00000003 
 1448      0000
  89:fltk-1.3.4-1/png/pngrtran.c **** 
 1449              		.loc 1 89 0
 1450 00d2 4883C408 		addq	$8, %rsp
 1451              		.cfi_remember_state
 1452              		.cfi_def_cfa_offset 24
 1453 00d6 5B       		popq	%rbx
 1454              		.cfi_restore 3
 1455              		.cfi_def_cfa_offset 16
 1456              	.LVL194:
 1457 00d7 5D       		popq	%rbp
 1458              		.cfi_restore 6
 1459              		.cfi_def_cfa_offset 8
 1460              	.LVL195:
 1461 00d8 E967FFFF 		jmp	.L175
 1461      FF
 1462              	.LVL196:
 1463 00dd 0F1F00   		.p2align 4,,10
 1464              		.p2align 3
 1465              	.L157:
 1466              		.cfi_restore_state
  45:fltk-1.3.4-1/png/pngrtran.c ****                            PNG_FLAG_CRC_CRITICAL_IGNORE;
 1467              		.loc 1 45 0
 1468 00e0 818F3001 		orl	$3072, 304(%rdi)
 1468      0000000C 
 1468      0000
  47:fltk-1.3.4-1/png/pngrtran.c **** 
 1469              		.loc 1 47 0
 1470 00ea E93AFFFF 		jmp	.L158
 1470      FF
 1471 00ef 90       		.p2align 4,,10
 1472              		.p2align 3
 1473              	.L154:
  40:fltk-1.3.4-1/png/pngrtran.c ****          break;
 1474              		.loc 1 40 0
 1475 00f0 8B873001 		movl	304(%rdi), %eax
 1475      0000
 1476 00f6 80E4F3   		andb	$243, %ah
 1477 00f9 80CC04   		orb	$4, %ah
 1478 00fc 89873001 		movl	%eax, 304(%rdi)
 1478      0000
  41:fltk-1.3.4-1/png/pngrtran.c **** 
 1479              		.loc 1 41 0
 1480 0102 E922FFFF 		jmp	.L158
 1480      FF
 1481              		.cfi_endproc
 1482              	.LFE56:
 1484              		.section	.text.unlikely.png_set_crc_action
 1485              	.LCOLDE14:
 1486              		.section	.text.png_set_crc_action
 1487              	.LHOTE14:
 1488              		.section	.rodata.str1.8
 1489 0099 00000000 		.align 8
 1489      000000
 1490              	.LC15:
 1491 00a0 4170706C 		.string	"Application must supply a known background gamma"
 1491      69636174 
 1491      696F6E20 
 1491      6D757374 
 1491      20737570 
 1492              		.section	.text.unlikely.png_set_background_fixed,"ax",@progbits
 1493              	.LCOLDB16:
 1494              		.section	.text.png_set_background_fixed,"ax",@progbits
 1495              	.LHOTB16:
 1496              		.p2align 4,,15
 1497              		.globl	png_set_background_fixed
 1499              	png_set_background_fixed:
 1500              	.LFB58:
 128:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_background_fixed");
 1501              		.loc 1 128 0
 1502              		.cfi_startproc
 1503              	.LVL197:
 1504 0000 4156     		pushq	%r14
 1505              		.cfi_def_cfa_offset 16
 1506              		.cfi_offset 14, -16
 1507 0002 4155     		pushq	%r13
 1508              		.cfi_def_cfa_offset 24
 1509              		.cfi_offset 13, -24
 1510 0004 4589C6   		movl	%r8d, %r14d
 1511 0007 4154     		pushq	%r12
 1512              		.cfi_def_cfa_offset 32
 1513              		.cfi_offset 12, -32
 1514 0009 55       		pushq	%rbp
 1515              		.cfi_def_cfa_offset 40
 1516              		.cfi_offset 6, -40
 1517 000a 4889F5   		movq	%rsi, %rbp
 1518 000d 53       		pushq	%rbx
 1519              		.cfi_def_cfa_offset 48
 1520              		.cfi_offset 3, -48
 131:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1521              		.loc 1 131 0
 1522 000e 31F6     		xorl	%esi, %esi
 1523              	.LVL198:
 128:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_background_fixed");
 1524              		.loc 1 128 0
 1525 0010 4889FB   		movq	%rdi, %rbx
 1526 0013 4189D4   		movl	%edx, %r12d
 1527 0016 4189CD   		movl	%ecx, %r13d
 131:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1528              		.loc 1 131 0
 1529 0019 E8000000 		call	png_rtran_ok
 1529      00
 1530              	.LVL199:
 1531 001e 4885ED   		testq	%rbp, %rbp
 1532 0021 7468     		je	.L179
 1533 0023 85C0     		testl	%eax, %eax
 1534 0025 7464     		je	.L179
 134:fltk-1.3.4-1/png/pngrtran.c ****    {
 1535              		.loc 1 134 0
 1536 0027 4585E4   		testl	%r12d, %r12d
 1537 002a 746C     		je	.L184
 1538              	.LVL200:
 1539              	.LBB120:
 1540              	.LBB121:
 140:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->transformations &= ~PNG_ENCODE_ALPHA;
 1541              		.loc 1 140 0
 1542 002c 8B833401 		movl	308(%rbx), %eax
 1542      0000
 142:fltk-1.3.4-1/png/pngrtran.c **** 
 1543              		.loc 1 142 0
 1544 0032 81A33001 		andl	$-8193, 304(%rbx)
 1544      0000FFDF 
 1544      FFFF
 1545 003c 89C2     		movl	%eax, %edx
 1546 003e 81E2FFFF 		andl	$-8388609, %edx
 1546      7FFF
 141:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 1547              		.loc 1 141 0
 1548 0044 89D1     		movl	%edx, %ecx
 1549 0046 81C98000 		orl	$262272, %ecx
 1549      0400
 147:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations |= PNG_BACKGROUND_EXPAND;
 1550              		.loc 1 147 0
 1551 004c 4585ED   		testl	%r13d, %r13d
 141:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 1552              		.loc 1 141 0
 1553 004f 898B3401 		movl	%ecx, 308(%rbx)
 1553      0000
 144:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->background_gamma = background_gamma;
 1554              		.loc 1 144 0
 1555 0055 488B4D00 		movq	0(%rbp), %rcx
 1556 0059 48898B88 		movq	%rcx, 648(%rbx)
 1556      020000
 1557 0060 0FB74D08 		movzwl	8(%rbp), %ecx
 145:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->background_gamma_type = (png_byte)(background_gamma_code);
 1558              		.loc 1 145 0
 1559 0064 4489B384 		movl	%r14d, 644(%rbx)
 1559      020000
 146:fltk-1.3.4-1/png/pngrtran.c ****    if (need_expand != 0)
 1560              		.loc 1 146 0
 1561 006b 4488A382 		movb	%r12b, 642(%rbx)
 1561      020000
 144:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->background_gamma = background_gamma;
 1562              		.loc 1 144 0
 1563 0072 66898B90 		movw	%cx, 656(%rbx)
 1563      020000
 147:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations |= PNG_BACKGROUND_EXPAND;
 1564              		.loc 1 147 0
 1565 0079 7535     		jne	.L185
 150:fltk-1.3.4-1/png/pngrtran.c **** }
 1566              		.loc 1 150 0
 1567 007b 25FFFE7F 		andl	$-8388865, %eax
 1567      FF
 1568 0080 0D800004 		orl	$262272, %eax
 1568      00
 1569 0085 89833401 		movl	%eax, 308(%rbx)
 1569      0000
 1570              	.LVL201:
 1571              	.L179:
 1572              	.LBE121:
 1573              	.LBE120:
 151:fltk-1.3.4-1/png/pngrtran.c **** 
 1574              		.loc 1 151 0
 1575 008b 5B       		popq	%rbx
 1576              		.cfi_remember_state
 1577              		.cfi_def_cfa_offset 40
 1578              	.LVL202:
 1579 008c 5D       		popq	%rbp
 1580              		.cfi_def_cfa_offset 32
 1581              	.LVL203:
 1582 008d 415C     		popq	%r12
 1583              		.cfi_def_cfa_offset 24
 1584              	.LVL204:
 1585 008f 415D     		popq	%r13
 1586              		.cfi_def_cfa_offset 16
 1587              	.LVL205:
 1588 0091 415E     		popq	%r14
 1589              		.cfi_def_cfa_offset 8
 1590              	.LVL206:
 1591 0093 C3       		ret
 1592              	.LVL207:
 1593              		.p2align 4,,10
 1594 0094 0F1F4000 		.p2align 3
 1595              	.L184:
 1596              		.cfi_restore_state
 136:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1597              		.loc 1 136 0
 1598 0098 4889DF   		movq	%rbx, %rdi
 1599 009b BE000000 		movl	$.LC15, %esi
 1599      00
 151:fltk-1.3.4-1/png/pngrtran.c **** 
 1600              		.loc 1 151 0
 1601 00a0 5B       		popq	%rbx
 1602              		.cfi_remember_state
 1603              		.cfi_def_cfa_offset 40
 1604              	.LVL208:
 1605 00a1 5D       		popq	%rbp
 1606              		.cfi_def_cfa_offset 32
 1607              	.LVL209:
 1608 00a2 415C     		popq	%r12
 1609              		.cfi_def_cfa_offset 24
 1610              	.LVL210:
 1611 00a4 415D     		popq	%r13
 1612              		.cfi_def_cfa_offset 16
 1613              	.LVL211:
 1614 00a6 415E     		popq	%r14
 1615              		.cfi_def_cfa_offset 8
 1616              	.LVL212:
 136:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1617              		.loc 1 136 0
 1618 00a8 E9000000 		jmp	png_warning
 1618      00
 1619              	.LVL213:
 1620 00ad 0F1F00   		.p2align 4,,10
 1621              		.p2align 3
 1622              	.L185:
 1623              		.cfi_restore_state
 1624              	.LBB123:
 1625              	.LBB122:
 148:fltk-1.3.4-1/png/pngrtran.c ****    else
 1626              		.loc 1 148 0
 1627 00b0 81CA8001 		orl	$262528, %edx
 1627      0400
 1628 00b6 89933401 		movl	%edx, 308(%rbx)
 1628      0000
 1629              	.LBE122:
 1630              	.LBE123:
 151:fltk-1.3.4-1/png/pngrtran.c **** 
 1631              		.loc 1 151 0
 1632 00bc 5B       		popq	%rbx
 1633              		.cfi_def_cfa_offset 40
 1634              	.LVL214:
 1635 00bd 5D       		popq	%rbp
 1636              		.cfi_def_cfa_offset 32
 1637              	.LVL215:
 1638 00be 415C     		popq	%r12
 1639              		.cfi_def_cfa_offset 24
 1640              	.LVL216:
 1641 00c0 415D     		popq	%r13
 1642              		.cfi_def_cfa_offset 16
 1643              	.LVL217:
 1644 00c2 415E     		popq	%r14
 1645              		.cfi_def_cfa_offset 8
 1646              	.LVL218:
 1647 00c4 C3       		ret
 1648              		.cfi_endproc
 1649              	.LFE58:
 1651              		.section	.text.unlikely.png_set_background_fixed
 1652              	.LCOLDE16:
 1653              		.section	.text.png_set_background_fixed
 1654              	.LHOTE16:
 1655              		.section	.rodata.str1.1
 1656              	.LC17:
 1657 000c 706E675F 		.string	"png_set_background"
 1657      7365745F 
 1657      6261636B 
 1657      67726F75 
 1657      6E6400
 1658              		.section	.text.unlikely.png_set_background,"ax",@progbits
 1659              	.LCOLDB18:
 1660              		.section	.text.png_set_background,"ax",@progbits
 1661              	.LHOTB18:
 1662              		.p2align 4,,15
 1663              		.globl	png_set_background
 1665              	png_set_background:
 1666              	.LFB59:
 158:fltk-1.3.4-1/png/pngrtran.c ****    png_set_background_fixed(png_ptr, background_color, background_gamma_code,
 1667              		.loc 1 158 0
 1668              		.cfi_startproc
 1669              	.LVL219:
 1670 0000 4155     		pushq	%r13
 1671              		.cfi_def_cfa_offset 16
 1672              		.cfi_offset 13, -16
 1673 0002 4154     		pushq	%r12
 1674              		.cfi_def_cfa_offset 24
 1675              		.cfi_offset 12, -24
 1676 0004 4189CD   		movl	%ecx, %r13d
 1677 0007 55       		pushq	%rbp
 1678              		.cfi_def_cfa_offset 32
 1679              		.cfi_offset 6, -32
 1680 0008 53       		pushq	%rbx
 1681              		.cfi_def_cfa_offset 40
 1682              		.cfi_offset 3, -40
 1683 0009 4889F5   		movq	%rsi, %rbp
 159:fltk-1.3.4-1/png/pngrtran.c ****       need_expand, png_fixed(png_ptr, background_gamma, "png_set_background"));
 1684              		.loc 1 159 0
 1685 000c BE000000 		movl	$.LC17, %esi
 1685      00
 1686              	.LVL220:
 158:fltk-1.3.4-1/png/pngrtran.c ****    png_set_background_fixed(png_ptr, background_color, background_gamma_code,
 1687              		.loc 1 158 0
 1688 0011 4889FB   		movq	%rdi, %rbx
 1689 0014 4189D4   		movl	%edx, %r12d
 1690 0017 4883EC08 		subq	$8, %rsp
 1691              		.cfi_def_cfa_offset 48
 159:fltk-1.3.4-1/png/pngrtran.c ****       need_expand, png_fixed(png_ptr, background_gamma, "png_set_background"));
 1692              		.loc 1 159 0
 1693 001b E8000000 		call	png_fixed
 1693      00
 1694              	.LVL221:
 161:fltk-1.3.4-1/png/pngrtran.c **** #  endif  /* FLOATING_POINT */
 1695              		.loc 1 161 0
 1696 0020 4883C408 		addq	$8, %rsp
 1697              		.cfi_def_cfa_offset 40
 159:fltk-1.3.4-1/png/pngrtran.c ****       need_expand, png_fixed(png_ptr, background_gamma, "png_set_background"));
 1698              		.loc 1 159 0
 1699 0024 4489E9   		movl	%r13d, %ecx
 1700 0027 4489E2   		movl	%r12d, %edx
 1701 002a 4889EE   		movq	%rbp, %rsi
 1702 002d 4889DF   		movq	%rbx, %rdi
 1703 0030 4189C0   		movl	%eax, %r8d
 161:fltk-1.3.4-1/png/pngrtran.c **** #  endif  /* FLOATING_POINT */
 1704              		.loc 1 161 0
 1705 0033 5B       		popq	%rbx
 1706              		.cfi_def_cfa_offset 32
 1707              	.LVL222:
 1708 0034 5D       		popq	%rbp
 1709              		.cfi_def_cfa_offset 24
 1710              	.LVL223:
 1711 0035 415C     		popq	%r12
 1712              		.cfi_def_cfa_offset 16
 1713              	.LVL224:
 1714 0037 415D     		popq	%r13
 1715              		.cfi_def_cfa_offset 8
 1716              	.LVL225:
 159:fltk-1.3.4-1/png/pngrtran.c ****       need_expand, png_fixed(png_ptr, background_gamma, "png_set_background"));
 1717              		.loc 1 159 0
 1718 0039 E9000000 		jmp	png_set_background_fixed
 1718      00
 1719              	.LVL226:
 1720              		.cfi_endproc
 1721              	.LFE59:
 1723              		.section	.text.unlikely.png_set_background
 1724              	.LCOLDE18:
 1725              		.section	.text.png_set_background
 1726              	.LHOTE18:
 1727              		.section	.text.unlikely.png_set_scale_16,"ax",@progbits
 1728              	.LCOLDB19:
 1729              		.section	.text.png_set_scale_16,"ax",@progbits
 1730              	.LHOTB19:
 1731              		.p2align 4,,15
 1732              		.globl	png_set_scale_16
 1734              	png_set_scale_16:
 1735              	.LFB60:
 172:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_scale_16");
 1736              		.loc 1 172 0
 1737              		.cfi_startproc
 1738              	.LVL227:
 1739 0000 53       		pushq	%rbx
 1740              		.cfi_def_cfa_offset 16
 1741              		.cfi_offset 3, -16
 175:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1742              		.loc 1 175 0
 1743 0001 31F6     		xorl	%esi, %esi
 172:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_scale_16");
 1744              		.loc 1 172 0
 1745 0003 4889FB   		movq	%rdi, %rbx
 175:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1746              		.loc 1 175 0
 1747 0006 E8000000 		call	png_rtran_ok
 1747      00
 1748              	.LVL228:
 1749 000b 85C0     		testl	%eax, %eax
 1750 000d 740A     		je	.L188
 178:fltk-1.3.4-1/png/pngrtran.c **** }
 1751              		.loc 1 178 0
 1752 000f 818B3401 		orl	$67108864, 308(%rbx)
 1752      00000000 
 1752      0004
 1753              	.L188:
 179:fltk-1.3.4-1/png/pngrtran.c **** #endif
 1754              		.loc 1 179 0
 1755 0019 5B       		popq	%rbx
 1756              		.cfi_def_cfa_offset 8
 1757              	.LVL229:
 1758 001a C3       		ret
 1759              		.cfi_endproc
 1760              	.LFE60:
 1762              		.section	.text.unlikely.png_set_scale_16
 1763              	.LCOLDE19:
 1764              		.section	.text.png_set_scale_16
 1765              	.LHOTE19:
 1766              		.section	.text.unlikely.png_set_strip_16,"ax",@progbits
 1767              	.LCOLDB20:
 1768              		.section	.text.png_set_strip_16,"ax",@progbits
 1769              	.LHOTB20:
 1770              		.p2align 4,,15
 1771              		.globl	png_set_strip_16
 1773              	png_set_strip_16:
 1774              	.LFB61:
 186:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_strip_16");
 1775              		.loc 1 186 0
 1776              		.cfi_startproc
 1777              	.LVL230:
 1778 0000 53       		pushq	%rbx
 1779              		.cfi_def_cfa_offset 16
 1780              		.cfi_offset 3, -16
 189:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1781              		.loc 1 189 0
 1782 0001 31F6     		xorl	%esi, %esi
 186:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_strip_16");
 1783              		.loc 1 186 0
 1784 0003 4889FB   		movq	%rdi, %rbx
 189:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1785              		.loc 1 189 0
 1786 0006 E8000000 		call	png_rtran_ok
 1786      00
 1787              	.LVL231:
 1788 000b 85C0     		testl	%eax, %eax
 1789 000d 740A     		je	.L194
 192:fltk-1.3.4-1/png/pngrtran.c **** }
 1790              		.loc 1 192 0
 1791 000f 818B3401 		orl	$1024, 308(%rbx)
 1791      00000004 
 1791      0000
 1792              	.L194:
 193:fltk-1.3.4-1/png/pngrtran.c **** #endif
 1793              		.loc 1 193 0
 1794 0019 5B       		popq	%rbx
 1795              		.cfi_def_cfa_offset 8
 1796              	.LVL232:
 1797 001a C3       		ret
 1798              		.cfi_endproc
 1799              	.LFE61:
 1801              		.section	.text.unlikely.png_set_strip_16
 1802              	.LCOLDE20:
 1803              		.section	.text.png_set_strip_16
 1804              	.LHOTE20:
 1805              		.section	.text.unlikely.png_set_strip_alpha,"ax",@progbits
 1806              	.LCOLDB21:
 1807              		.section	.text.png_set_strip_alpha,"ax",@progbits
 1808              	.LHOTB21:
 1809              		.p2align 4,,15
 1810              		.globl	png_set_strip_alpha
 1812              	png_set_strip_alpha:
 1813              	.LFB62:
 199:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_strip_alpha");
 1814              		.loc 1 199 0
 1815              		.cfi_startproc
 1816              	.LVL233:
 1817 0000 53       		pushq	%rbx
 1818              		.cfi_def_cfa_offset 16
 1819              		.cfi_offset 3, -16
 202:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1820              		.loc 1 202 0
 1821 0001 31F6     		xorl	%esi, %esi
 199:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_strip_alpha");
 1822              		.loc 1 199 0
 1823 0003 4889FB   		movq	%rdi, %rbx
 202:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1824              		.loc 1 202 0
 1825 0006 E8000000 		call	png_rtran_ok
 1825      00
 1826              	.LVL234:
 1827 000b 85C0     		testl	%eax, %eax
 1828 000d 740A     		je	.L200
 205:fltk-1.3.4-1/png/pngrtran.c **** }
 1829              		.loc 1 205 0
 1830 000f 818B3401 		orl	$262144, 308(%rbx)
 1830      00000000 
 1830      0400
 1831              	.L200:
 206:fltk-1.3.4-1/png/pngrtran.c **** #endif
 1832              		.loc 1 206 0
 1833 0019 5B       		popq	%rbx
 1834              		.cfi_def_cfa_offset 8
 1835              	.LVL235:
 1836 001a C3       		ret
 1837              		.cfi_endproc
 1838              	.LFE62:
 1840              		.section	.text.unlikely.png_set_strip_alpha
 1841              	.LCOLDE21:
 1842              		.section	.text.png_set_strip_alpha
 1843              	.LHOTE21:
 1844              		.section	.rodata.str1.8
 1845 00d1 00000000 		.align 8
 1845      000000
 1846              	.LC22:
 1847 00d8 6F757470 		.string	"output gamma out of expected range"
 1847      75742067 
 1847      616D6D61 
 1847      206F7574 
 1847      206F6620 
 1848              		.section	.rodata.str1.1
 1849              	.LC23:
 1850 001f 696E7661 		.string	"invalid alpha mode"
 1850      6C696420 
 1850      616C7068 
 1850      61206D6F 
 1850      646500
 1851              		.section	.rodata.str1.8
 1852 00fb 00000000 		.align 8
 1852      00
 1853              	.LC24:
 1854 0100 636F6E66 		.string	"conflicting calls to set alpha mode and background"
 1854      6C696374 
 1854      696E6720 
 1854      63616C6C 
 1854      7320746F 
 1855              		.section	.text.unlikely.png_set_alpha_mode_fixed,"ax",@progbits
 1856              	.LCOLDB25:
 1857              		.section	.text.png_set_alpha_mode_fixed,"ax",@progbits
 1858              	.LHOTB25:
 1859              		.p2align 4,,15
 1860              		.globl	png_set_alpha_mode_fixed
 1862              	png_set_alpha_mode_fixed:
 1863              	.LFB65:
 277:fltk-1.3.4-1/png/pngrtran.c ****    int compose = 0;
 1864              		.loc 1 277 0
 1865              		.cfi_startproc
 1866              	.LVL236:
 1867 0000 4154     		pushq	%r12
 1868              		.cfi_def_cfa_offset 16
 1869              		.cfi_offset 12, -16
 1870 0002 55       		pushq	%rbp
 1871              		.cfi_def_cfa_offset 24
 1872              		.cfi_offset 6, -24
 1873 0003 4189F4   		movl	%esi, %r12d
 1874 0006 53       		pushq	%rbx
 1875              		.cfi_def_cfa_offset 32
 1876              		.cfi_offset 3, -32
 283:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1877              		.loc 1 283 0
 1878 0007 31F6     		xorl	%esi, %esi
 1879              	.LVL237:
 277:fltk-1.3.4-1/png/pngrtran.c ****    int compose = 0;
 1880              		.loc 1 277 0
 1881 0009 4889FB   		movq	%rdi, %rbx
 1882 000c 89D5     		movl	%edx, %ebp
 283:fltk-1.3.4-1/png/pngrtran.c ****       return;
 1883              		.loc 1 283 0
 1884 000e E8000000 		call	png_rtran_ok
 1884      00
 1885              	.LVL238:
 1886 0013 85C0     		testl	%eax, %eax
 1887 0015 0F84C900 		je	.L206
 1887      0000
 1888              	.LVL239:
 1889              	.LBB132:
 1890              	.LBB133:
 1891              	.LBB134:
 1892              	.LBB135:
 219:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_DEFAULT_sRGB)
 1893              		.loc 1 219 0
 1894 001b 83FDFF   		cmpl	$-1, %ebp
 1895 001e 740C     		je	.L225
 1896 0020 81FD6079 		cmpl	$-100000, %ebp
 1896      FEFF
 1897 0026 0F853401 		jne	.L208
 1897      0000
 1898              	.L225:
 226:fltk-1.3.4-1/png/pngrtran.c **** #     else
 1899              		.loc 1 226 0
 1900 002c 818B3001 		orl	$4096, 304(%rbx)
 1900      00000010 
 1900      0000
 231:fltk-1.3.4-1/png/pngrtran.c ****       else
 1901              		.loc 1 231 0
 1902 0036 BD605B03 		movl	$220000, %ebp
 1902      00
 1903              	.LVL240:
 1904              	.L211:
 1905              	.LBE135:
 1906              	.LBE134:
 300:fltk-1.3.4-1/png/pngrtran.c **** 
 1907              		.loc 1 300 0
 1908 003b 89EF     		movl	%ebp, %edi
 1909 003d E8000000 		call	png_reciprocal
 1909      00
 1910              	.LVL241:
 318:fltk-1.3.4-1/png/pngrtran.c ****    {
 1911              		.loc 1 318 0
 1912 0042 4183FC01 		cmpl	$1, %r12d
 1913 0046 0F845401 		je	.L213
 1913      0000
 1914 004c 0F8ECE00 		jle	.L232
 1914      0000
 1915 0052 4183FC02 		cmpl	$2, %r12d
 1916 0056 0F849400 		je	.L216
 1916      0000
 1917 005c 4183FC03 		cmpl	$3, %r12d
 1918 0060 0F852A01 		jne	.L212
 1918      0000
 1919              	.LVL242:
 343:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 1920              		.loc 1 343 0
 1921 0066 818B3401 		orl	$8388608, 308(%rbx)
 1921      00000000 
 1921      8000
 344:fltk-1.3.4-1/png/pngrtran.c ****          break;
 1922              		.loc 1 344 0
 1923 0070 81A33001 		andl	$-8193, 304(%rbx)
 1923      0000FFDF 
 1923      FFFF
 1924              	.L220:
 1925              	.LVL243:
 355:fltk-1.3.4-1/png/pngrtran.c ****    {
 1926              		.loc 1 355 0
 1927 007a 8B93D804 		movl	1240(%rbx), %edx
 1927      0000
 1928 0080 85D2     		testl	%edx, %edx
 1929 0082 0F858A00 		jne	.L223
 1929      0000
 1930              	.L234:
 358:fltk-1.3.4-1/png/pngrtran.c ****    }
 1931              		.loc 1 358 0
 1932 0088 66838B22 		orw	$1, 1314(%rbx)
 1932      05000001 
 357:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->colorspace.flags |= PNG_COLORSPACE_HAVE_GAMMA;
 1933              		.loc 1 357 0
 1934 0090 8983D804 		movl	%eax, 1240(%rbx)
 1934      0000
 362:fltk-1.3.4-1/png/pngrtran.c **** 
 1935              		.loc 1 362 0
 1936 0096 89C2     		movl	%eax, %edx
 1937 0098 89ABB402 		movl	%ebp, 692(%rbx)
 1937      0000
 1938              	.L222:
 1939              	.LVL244:
 371:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background_gamma_type = PNG_BACKGROUND_GAMMA_FILE;
 1940              		.loc 1 371 0
 1941 009e 89938402 		movl	%edx, 644(%rbx)
 1941      0000
 373:fltk-1.3.4-1/png/pngrtran.c **** 
 1942              		.loc 1 373 0
 1943 00a4 8B933401 		movl	308(%rbx), %edx
 1943      0000
 1944              	.LBB142:
 1945              	.LBB143:
 1946              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string3.h"
   1:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* Copyright (C) 2004-2016 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string3.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string3.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string3.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string3.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string3.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string3.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string3.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string3.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string3.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string3.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string3.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string3.h ****    <http://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifndef _STRING_H
  19:/usr/include/x86_64-linux-gnu/bits/string3.h **** # error "Never use <bits/string3.h> directly; include <string.h> instead."
  20:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  21:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/string3.h **** #if !__GNUC_PREREQ (5,0)
  23:/usr/include/x86_64-linux-gnu/bits/string3.h **** __warndecl (__warn_memset_zero_len,
  24:/usr/include/x86_64-linux-gnu/bits/string3.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  25:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  26:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  27:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifndef __cplusplus
  28:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* XXX This is temporarily.  We should not redefine any of the symbols
  29:/usr/include/x86_64-linux-gnu/bits/string3.h ****    and instead integrate the error checking into the original
  30:/usr/include/x86_64-linux-gnu/bits/string3.h ****    definitions.  */
  31:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memcpy
  32:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memmove
  33:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memset
  34:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strcat
  35:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strcpy
  36:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strncat
  37:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strncpy
  38:/usr/include/x86_64-linux-gnu/bits/string3.h **** # ifdef __USE_GNU
  39:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef mempcpy
  40:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef stpcpy
  41:/usr/include/x86_64-linux-gnu/bits/string3.h **** # endif
  42:/usr/include/x86_64-linux-gnu/bits/string3.h **** # ifdef __USE_MISC
  43:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef bcopy
  44:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef bzero
  45:/usr/include/x86_64-linux-gnu/bits/string3.h **** # endif
  46:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  47:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  48:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  49:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  50:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  51:/usr/include/x86_64-linux-gnu/bits/string3.h **** 	       size_t __len))
  52:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  53:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  54:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  55:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  56:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  57:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  58:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  59:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  60:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  61:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifdef __USE_GNU
  63:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  64:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  65:/usr/include/x86_64-linux-gnu/bits/string3.h **** 		size_t __len))
  66:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  68:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  69:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  70:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  71:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  72:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* The first two tests here help to catch a somewhat common problem
  73:/usr/include/x86_64-linux-gnu/bits/string3.h ****    where the second and third parameter are transposed.  This is
  74:/usr/include/x86_64-linux-gnu/bits/string3.h ****    especially problematic if the intended fill value is zero.  In this
  75:/usr/include/x86_64-linux-gnu/bits/string3.h ****    case no work is done at all.  We detect these problems by referring
  76:/usr/include/x86_64-linux-gnu/bits/string3.h ****    non-existing functions.  */
  77:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  78:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  79:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/string3.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  81:/usr/include/x86_64-linux-gnu/bits/string3.h ****      need them here.  */
  82:/usr/include/x86_64-linux-gnu/bits/string3.h **** #if !__GNUC_PREREQ (5,0)
  83:/usr/include/x86_64-linux-gnu/bits/string3.h ****   if (__builtin_constant_p (__len) && __len == 0
  84:/usr/include/x86_64-linux-gnu/bits/string3.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  85:/usr/include/x86_64-linux-gnu/bits/string3.h ****     {
  86:/usr/include/x86_64-linux-gnu/bits/string3.h ****       __warn_memset_zero_len ();
  87:/usr/include/x86_64-linux-gnu/bits/string3.h ****       return __dest;
  88:/usr/include/x86_64-linux-gnu/bits/string3.h ****     }
  89:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  90:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 1947              		.loc 2 90 0
 1948 00aa 31C0     		xorl	%eax, %eax
 1949              	.LVL245:
 1950 00ac 66898390 		movw	%ax, 656(%rbx)
 1950      020000
 1951              	.LVL246:
 1952 00b3 48C78388 		movq	$0, 648(%rbx)
 1952      02000000 
 1952      000000
 1953              	.LBE143:
 1954              	.LBE142:
 373:fltk-1.3.4-1/png/pngrtran.c **** 
 1955              		.loc 1 373 0
 1956 00be 89D0     		movl	%edx, %eax
 372:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->transformations &= ~PNG_BACKGROUND_EXPAND;
 1957              		.loc 1 372 0
 1958 00c0 C6838202 		movb	$2, 642(%rbx)
 1958      000002
 373:fltk-1.3.4-1/png/pngrtran.c **** 
 1959              		.loc 1 373 0
 1960 00c7 80E4FE   		andb	$254, %ah
 375:fltk-1.3.4-1/png/pngrtran.c ****          png_error(png_ptr,
 1961              		.loc 1 375 0
 1962 00ca 81E28000 		andl	$128, %edx
 1962      0000
 373:fltk-1.3.4-1/png/pngrtran.c **** 
 1963              		.loc 1 373 0
 1964 00d0 89833401 		movl	%eax, 308(%rbx)
 1964      0000
 375:fltk-1.3.4-1/png/pngrtran.c ****          png_error(png_ptr,
 1965              		.loc 1 375 0
 1966 00d6 0F85EE00 		jne	.L233
 1966      0000
 379:fltk-1.3.4-1/png/pngrtran.c ****    }
 1967              		.loc 1 379 0
 1968 00dc 0C80     		orb	$-128, %al
 1969 00de 89833401 		movl	%eax, 308(%rbx)
 1969      0000
 1970              	.LVL247:
 1971              	.L206:
 1972              	.LBE133:
 1973              	.LBE132:
 381:fltk-1.3.4-1/png/pngrtran.c **** 
 1974              		.loc 1 381 0
 1975 00e4 5B       		popq	%rbx
 1976              		.cfi_remember_state
 1977              		.cfi_def_cfa_offset 24
 1978              	.LVL248:
 1979 00e5 5D       		popq	%rbp
 1980              		.cfi_def_cfa_offset 16
 1981 00e6 415C     		popq	%r12
 1982              		.cfi_def_cfa_offset 8
 1983              	.LVL249:
 1984 00e8 C3       		ret
 1985              	.LVL250:
 1986 00e9 0F1F8000 		.p2align 4,,10
 1986      000000
 1987              		.p2align 3
 1988              	.L216:
 1989              		.cfi_restore_state
 1990              	.LBB148:
 1991              	.LBB146:
 355:fltk-1.3.4-1/png/pngrtran.c ****    {
 1992              		.loc 1 355 0
 1993 00f0 8B93D804 		movl	1240(%rbx), %edx
 1993      0000
 336:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags |= PNG_FLAG_OPTIMIZE_ALPHA;
 1994              		.loc 1 336 0
 1995 00f6 81A33401 		andl	$-8388609, 308(%rbx)
 1995      0000FFFF 
 1995      7FFF
 337:fltk-1.3.4-1/png/pngrtran.c ****          /* output_gamma records the encoding of opaque pixels! */
 1996              		.loc 1 337 0
 1997 0100 818B3001 		orl	$8192, 304(%rbx)
 1997      00000020 
 1997      0000
 1998              	.LVL251:
 355:fltk-1.3.4-1/png/pngrtran.c ****    {
 1999              		.loc 1 355 0
 2000 010a 85D2     		testl	%edx, %edx
 2001 010c 0F8476FF 		je	.L234
 2001      FFFF
 2002              	.L223:
 362:fltk-1.3.4-1/png/pngrtran.c **** 
 2003              		.loc 1 362 0
 2004 0112 89ABB402 		movl	%ebp, 692(%rbx)
 2004      0000
 2005 0118 EB84     		jmp	.L222
 2006              	.LVL252:
 2007 011a 660F1F44 		.p2align 4,,10
 2007      0000
 2008              		.p2align 3
 2009              	.L232:
 318:fltk-1.3.4-1/png/pngrtran.c ****    {
 2010              		.loc 1 318 0
 2011 0120 4585E4   		testl	%r12d, %r12d
 2012 0123 756B     		jne	.L212
 355:fltk-1.3.4-1/png/pngrtran.c ****    {
 2013              		.loc 1 355 0
 2014 0125 8B93D804 		movl	1240(%rbx), %edx
 2014      0000
 322:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 2015              		.loc 1 322 0
 2016 012b 81A33401 		andl	$-8388609, 308(%rbx)
 2016      0000FFFF 
 2016      7FFF
 323:fltk-1.3.4-1/png/pngrtran.c ****          break;
 2017              		.loc 1 323 0
 2018 0135 81A33001 		andl	$-8193, 304(%rbx)
 2018      0000FFDF 
 2018      FFFF
 2019              	.LVL253:
 355:fltk-1.3.4-1/png/pngrtran.c ****    {
 2020              		.loc 1 355 0
 2021 013f 85D2     		testl	%edx, %edx
 2022 0141 750E     		jne	.L231
 358:fltk-1.3.4-1/png/pngrtran.c ****    }
 2023              		.loc 1 358 0
 2024 0143 66838B22 		orw	$1, 1314(%rbx)
 2024      05000001 
 357:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->colorspace.flags |= PNG_COLORSPACE_HAVE_GAMMA;
 2025              		.loc 1 357 0
 2026 014b 8983D804 		movl	%eax, 1240(%rbx)
 2026      0000
 2027              	.L231:
 362:fltk-1.3.4-1/png/pngrtran.c **** 
 2028              		.loc 1 362 0
 2029 0151 89ABB402 		movl	%ebp, 692(%rbx)
 2029      0000
 2030              	.LBE146:
 2031              	.LBE148:
 381:fltk-1.3.4-1/png/pngrtran.c **** 
 2032              		.loc 1 381 0
 2033 0157 5B       		popq	%rbx
 2034              		.cfi_remember_state
 2035              		.cfi_def_cfa_offset 24
 2036              	.LVL254:
 2037 0158 5D       		popq	%rbp
 2038              		.cfi_def_cfa_offset 16
 2039              	.LVL255:
 2040 0159 415C     		popq	%r12
 2041              		.cfi_def_cfa_offset 8
 2042              	.LVL256:
 2043 015b C3       		ret
 2044              	.LVL257:
 2045 015c 0F1F4000 		.p2align 4,,10
 2046              		.p2align 3
 2047              	.L208:
 2048              		.cfi_restore_state
 2049              	.LBB149:
 2050              	.LBB147:
 2051              	.LBB144:
 2052              	.LBB140:
 2053              	.LBB136:
 2054              	.LBB137:
 236:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_GAMMA_MAC_18)
 2055              		.loc 1 236 0
 2056 0160 83FDFE   		cmpl	$-2, %ebp
 2057 0163 745B     		je	.L224
 2058 0165 81FDB03C 		cmpl	$-50000, %ebp
 2058      FFFF
 2059 016b 7453     		je	.L224
 2060              	.LVL258:
 2061              	.LBE137:
 2062              	.LBE136:
 2063              	.LBE140:
 2064              	.LBE144:
 294:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "output gamma out of expected range");
 2065              		.loc 1 294 0
 2066 016d 8D8590EE 		leal	-70000(%rbp), %eax
 2066      FEFF
 2067 0173 3D708203 		cmpl	$230000, %eax
 2067      00
 2068 0178 0F86BDFE 		jbe	.L211
 2068      FFFF
 295:fltk-1.3.4-1/png/pngrtran.c **** 
 2069              		.loc 1 295 0
 2070 017e BE000000 		movl	$.LC22, %esi
 2070      00
 2071 0183 4889DF   		movq	%rbx, %rdi
 2072 0186 E8000000 		call	png_error
 2072      00
 2073              	.LVL259:
 2074 018b 0F1F4400 		.p2align 4,,10
 2074      00
 2075              		.p2align 3
 2076              	.L212:
 348:fltk-1.3.4-1/png/pngrtran.c ****    }
 2077              		.loc 1 348 0
 2078 0190 BE000000 		movl	$.LC23, %esi
 2078      00
 2079 0195 4889DF   		movq	%rbx, %rdi
 2080 0198 E8000000 		call	png_error
 2080      00
 2081              	.LVL260:
 2082 019d 0F1F00   		.p2align 4,,10
 2083              		.p2align 3
 2084              	.L213:
 328:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 2085              		.loc 1 328 0
 2086 01a0 81A33401 		andl	$-8388609, 308(%rbx)
 2086      0000FFFF 
 2086      7FFF
 329:fltk-1.3.4-1/png/pngrtran.c ****          /* The output is linear: */
 2087              		.loc 1 329 0
 2088 01aa 81A33001 		andl	$-8193, 304(%rbx)
 2088      0000FFDF 
 2088      FFFF
 2089              	.LVL261:
 331:fltk-1.3.4-1/png/pngrtran.c ****          break;
 2090              		.loc 1 331 0
 2091 01b4 BDA08601 		movl	$100000, %ebp
 2091      00
 2092 01b9 E9BCFEFF 		jmp	.L220
 2092      FF
 2093              	.LVL262:
 2094 01be 6690     		.p2align 4,,10
 2095              		.p2align 3
 2096              	.L224:
 2097              	.LBB145:
 2098              	.LBB141:
 2099              	.LBB139:
 2100              	.LBB138:
 240:fltk-1.3.4-1/png/pngrtran.c ****       else
 2101              		.loc 1 240 0
 2102 01c0 BDAC5002 		movl	$151724, %ebp
 2102      00
 2103              	.LVL263:
 2104 01c5 E971FEFF 		jmp	.L211
 2104      FF
 2105              	.LVL264:
 2106              	.L233:
 2107              	.LBE138:
 2108              	.LBE139:
 2109              	.LBE141:
 2110              	.LBE145:
 376:fltk-1.3.4-1/png/pngrtran.c ****             "conflicting calls to set alpha mode and background");
 2111              		.loc 1 376 0
 2112 01ca BE000000 		movl	$.LC24, %esi
 2112      00
 2113 01cf 4889DF   		movq	%rbx, %rdi
 2114 01d2 E8000000 		call	png_error
 2114      00
 2115              	.LVL265:
 2116              	.LBE147:
 2117              	.LBE149:
 2118              		.cfi_endproc
 2119              	.LFE65:
 2121              		.section	.text.unlikely.png_set_alpha_mode_fixed
 2122              	.LCOLDE25:
 2123              		.section	.text.png_set_alpha_mode_fixed
 2124              	.LHOTE25:
 2125              		.section	.text.unlikely.png_set_alpha_mode,"ax",@progbits
 2126              	.LCOLDB26:
 2127              		.section	.text.png_set_alpha_mode,"ax",@progbits
 2128              	.LHOTB26:
 2129              		.p2align 4,,15
 2130              		.globl	png_set_alpha_mode
 2132              	png_set_alpha_mode:
 2133              	.LFB66:
 386:fltk-1.3.4-1/png/pngrtran.c ****    png_set_alpha_mode_fixed(png_ptr, mode, convert_gamma_value(png_ptr,
 2134              		.loc 1 386 0
 2135              		.cfi_startproc
 2136              	.LVL266:
 2137 0000 55       		pushq	%rbp
 2138              		.cfi_def_cfa_offset 16
 2139              		.cfi_offset 6, -16
 2140 0001 53       		pushq	%rbx
 2141              		.cfi_def_cfa_offset 24
 2142              		.cfi_offset 3, -24
 2143 0002 89F5     		movl	%esi, %ebp
 2144 0004 4889FB   		movq	%rdi, %rbx
 2145 0007 4883EC08 		subq	$8, %rsp
 2146              		.cfi_def_cfa_offset 32
 387:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma));
 2147              		.loc 1 387 0
 2148 000b E8000000 		call	convert_gamma_value
 2148      00
 2149              	.LVL267:
 389:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 2150              		.loc 1 389 0
 2151 0010 4883C408 		addq	$8, %rsp
 2152              		.cfi_def_cfa_offset 24
 387:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma));
 2153              		.loc 1 387 0
 2154 0014 89EE     		movl	%ebp, %esi
 2155 0016 4889DF   		movq	%rbx, %rdi
 389:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 2156              		.loc 1 389 0
 2157 0019 5B       		popq	%rbx
 2158              		.cfi_def_cfa_offset 16
 2159              	.LVL268:
 2160 001a 5D       		popq	%rbp
 2161              		.cfi_def_cfa_offset 8
 2162              	.LVL269:
 387:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma));
 2163              		.loc 1 387 0
 2164 001b 89C2     		movl	%eax, %edx
 2165 001d E9000000 		jmp	png_set_alpha_mode_fixed
 2165      00
 2166              	.LVL270:
 2167              		.cfi_endproc
 2168              	.LFE66:
 2170              		.section	.text.unlikely.png_set_alpha_mode
 2171              	.LCOLDE26:
 2172              		.section	.text.png_set_alpha_mode
 2173              	.LHOTE26:
 2174              		.section	.text.unlikely.png_set_quantize,"ax",@progbits
 2175              	.LCOLDB27:
 2176              		.section	.text.png_set_quantize,"ax",@progbits
 2177              	.LHOTB27:
 2178              		.p2align 4,,15
 2179              		.globl	png_set_quantize
 2181              	png_set_quantize:
 2182              	.LFB67:
 416:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_quantize");
 2183              		.loc 1 416 0
 2184              		.cfi_startproc
 2185              	.LVL271:
 2186 0000 4157     		pushq	%r15
 2187              		.cfi_def_cfa_offset 16
 2188              		.cfi_offset 15, -16
 2189 0002 4156     		pushq	%r14
 2190              		.cfi_def_cfa_offset 24
 2191              		.cfi_offset 14, -24
 2192 0004 4989F6   		movq	%rsi, %r14
 2193 0007 4155     		pushq	%r13
 2194              		.cfi_def_cfa_offset 32
 2195              		.cfi_offset 13, -32
 2196 0009 4154     		pushq	%r12
 2197              		.cfi_def_cfa_offset 40
 2198              		.cfi_offset 12, -40
 419:fltk-1.3.4-1/png/pngrtran.c ****       return;
 2199              		.loc 1 419 0
 2200 000b 31F6     		xorl	%esi, %esi
 2201              	.LVL272:
 416:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_quantize");
 2202              		.loc 1 416 0
 2203 000d 55       		pushq	%rbp
 2204              		.cfi_def_cfa_offset 48
 2205              		.cfi_offset 6, -48
 2206 000e 53       		pushq	%rbx
 2207              		.cfi_def_cfa_offset 56
 2208              		.cfi_offset 3, -56
 2209 000f 4989FF   		movq	%rdi, %r15
 2210 0012 89CB     		movl	%ecx, %ebx
 2211 0014 4C89C5   		movq	%r8, %rbp
 2212 0017 4589CD   		movl	%r9d, %r13d
 2213 001a 4883EC58 		subq	$88, %rsp
 2214              		.cfi_def_cfa_offset 144
 416:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_quantize");
 2215              		.loc 1 416 0
 2216 001e 89542414 		movl	%edx, 20(%rsp)
 2217 0022 44894C24 		movl	%r9d, 24(%rsp)
 2217      18
 419:fltk-1.3.4-1/png/pngrtran.c ****       return;
 2218              		.loc 1 419 0
 2219 0027 E8000000 		call	png_rtran_ok
 2219      00
 2220              	.LVL273:
 2221 002c 85C0     		testl	%eax, %eax
 2222 002e 0F843E01 		je	.L237
 2222      0000
 422:fltk-1.3.4-1/png/pngrtran.c **** 
 2223              		.loc 1 422 0
 2224 0034 41838F34 		orl	$64, 308(%r15)
 2224      01000040 
 424:fltk-1.3.4-1/png/pngrtran.c ****    {
 2225              		.loc 1 424 0
 2226 003c 4585ED   		testl	%r13d, %r13d
 2227 003f 0F843202 		je	.L240
 2227      0000
 2228              	.LVL274:
 2229              	.L243:
 434:fltk-1.3.4-1/png/pngrtran.c ****    {
 2230              		.loc 1 434 0
 2231 0045 395C2414 		cmpl	%ebx, 20(%rsp)
 2232 0049 0F8EF900 		jle	.L242
 2232      0000
 436:fltk-1.3.4-1/png/pngrtran.c ****       {
 2233              		.loc 1 436 0
 2234 004f 4885ED   		testq	%rbp, %rbp
 2235              	.LBB150:
 445:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 2236              		.loc 1 445 0
 2237 0052 448B6C24 		movl	20(%rsp), %r13d
 2237      14
 2238              	.LBE150:
 436:fltk-1.3.4-1/png/pngrtran.c ****       {
 2239              		.loc 1 436 0
 2240 0057 0F84C003 		je	.L245
 2240      0000
 2241              	.LBB158:
 445:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 2242              		.loc 1 445 0
 2243 005d 4489EE   		movl	%r13d, %esi
 2244 0060 4C89FF   		movq	%r15, %rdi
 2245 0063 E8000000 		call	png_malloc
 2245      00
 2246              	.LVL275:
 449:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->quantize_sort[i] = (png_byte)i;
 2247              		.loc 1 449 0
 2248 0068 4585ED   		testl	%r13d, %r13d
 445:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 2249              		.loc 1 445 0
 2250 006b 49898740 		movq	%rax, 1088(%r15)
 2250      040000
 2251              	.LVL276:
 449:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->quantize_sort[i] = (png_byte)i;
 2252              		.loc 1 449 0
 2253 0072 0F8E0901 		jle	.L246
 2253      0000
 449:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->quantize_sort[i] = (png_byte)i;
 2254              		.loc 1 449 0 is_stmt 0 discriminator 3
 2255 0078 4889C2   		movq	%rax, %rdx
 2256 007b 31C0     		xorl	%eax, %eax
 2257              	.LVL277:
 2258              	.L247:
 450:fltk-1.3.4-1/png/pngrtran.c **** 
 2259              		.loc 1 450 0 is_stmt 1 discriminator 3
 2260 007d 880402   		movb	%al, (%rdx,%rax)
 2261              	.LVL278:
 2262 0080 4883C001 		addq	$1, %rax
 2263              	.LVL279:
 449:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->quantize_sort[i] = (png_byte)i;
 2264              		.loc 1 449 0 discriminator 3
 2265 0084 39442414 		cmpl	%eax, 20(%rsp)
 2266 0088 0F8EF300 		jle	.L246
 2266      0000
 2267 008e 498B9740 		movq	1088(%r15), %rdx
 2267      040000
 2268 0095 EBE6     		jmp	.L247
 2269              	.LVL280:
 2270 0097 660F1F84 		.p2align 4,,10
 2270      00000000 
 2270      00
 2271              		.p2align 3
 2272              	.L277:
 2273 00a0 4983C403 		addq	$3, %r12
 2274              	.LBE158:
 2275              	.LBB159:
 2276              	.LBB160:
 633:fltk-1.3.4-1/png/pngrtran.c ****                   break;
 2277              		.loc 1 633 0
 2278 00a4 4885C0   		testq	%rax, %rax
 2279 00a7 4589FE   		movl	%r15d, %r14d
 2280              	.LVL281:
 2281 00aa 0F851004 		jne	.L281
 2281      0000
 2282              	.L369:
 2283 00b0 4189CD   		movl	%ecx, %r13d
 2284              	.LVL282:
 2285 00b3 4D89C7   		movq	%r8, %r15
 2286              	.LVL283:
 2287 00b6 4D89CE   		movq	%r9, %r14
 2288              	.LVL284:
 2289              	.LBE160:
 2290              	.LBB162:
 2291              	.LBB163:
 2292              	.LBB164:
 671:fltk-1.3.4-1/png/pngrtran.c ****                            {
 2293              		.loc 1 671 0
 2294 00b9 31ED     		xorl	%ebp, %ebp
 2295              	.LVL285:
 2296              	.L283:
 2297 00bb 4C8B6424 		movq	8(%rsp), %r12
 2297      08
 2298              	.LVL286:
 2299              	.L298:
 2300              	.LBE164:
 2301              	.LBE163:
 2302              	.LBE162:
 707:fltk-1.3.4-1/png/pngrtran.c ****                {
 2303              		.loc 1 707 0
 2304 00c0 498B3424 		movq	(%r12), %rsi
 2305 00c4 4885F6   		testq	%rsi, %rsi
 2306 00c7 7413     		je	.L296
 2307              	.L297:
 2308              	.LVL287:
 2309              	.LBB167:
 712:fltk-1.3.4-1/png/pngrtran.c ****                      png_free(png_ptr, p);
 2310              		.loc 1 712 0
 2311 00c9 488B2E   		movq	(%rsi), %rbp
 2312              	.LVL288:
 713:fltk-1.3.4-1/png/pngrtran.c ****                      p = t;
 2313              		.loc 1 713 0
 2314 00cc 4C89FF   		movq	%r15, %rdi
 2315 00cf E8000000 		call	png_free
 2315      00
 2316              	.LVL289:
 710:fltk-1.3.4-1/png/pngrtran.c ****                   {
 2317              		.loc 1 710 0
 2318 00d4 4885ED   		testq	%rbp, %rbp
 2319 00d7 4889EE   		movq	%rbp, %rsi
 2320 00da 75ED     		jne	.L297
 2321              	.LVL290:
 2322              	.L296:
 2323              	.LBE167:
 717:fltk-1.3.4-1/png/pngrtran.c ****             }
 2324              		.loc 1 717 0 discriminator 2
 2325 00dc 49C70424 		movq	$0, (%r12)
 2325      00000000 
 2326 00e4 4983C408 		addq	$8, %r12
 705:fltk-1.3.4-1/png/pngrtran.c ****             {
 2327              		.loc 1 705 0 discriminator 2
 2328 00e8 4C3B6424 		cmpq	40(%rsp), %r12
 2328      28
 2329 00ed 75D1     		jne	.L298
 719:fltk-1.3.4-1/png/pngrtran.c ****          }
 2330              		.loc 1 719 0
 2331 00ef 83442420 		addl	$96, 32(%rsp)
 2331      60
 2332              	.LVL291:
 606:fltk-1.3.4-1/png/pngrtran.c ****          {
 2333              		.loc 1 606 0
 2334 00f4 443B6C24 		cmpl	36(%rsp), %r13d
 2334      24
 2335 00f9 0F8FA303 		jg	.L274
 2335      0000
 721:fltk-1.3.4-1/png/pngrtran.c ****          png_free(png_ptr, png_ptr->palette_to_index);
 2336              		.loc 1 721 0
 2337 00ff 488B7424 		movq	8(%rsp), %rsi
 2337      08
 2338 0104 4C89FF   		movq	%r15, %rdi
 2339 0107 8B5C2424 		movl	36(%rsp), %ebx
 2340 010b E8000000 		call	png_free
 2340      00
 2341              	.LVL292:
 722:fltk-1.3.4-1/png/pngrtran.c ****          png_free(png_ptr, png_ptr->index_to_palette);
 2342              		.loc 1 722 0
 2343 0110 498BB750 		movq	1104(%r15), %rsi
 2343      040000
 2344 0117 4C89FF   		movq	%r15, %rdi
 2345 011a E8000000 		call	png_free
 2345      00
 2346              	.LVL293:
 723:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->palette_to_index = NULL;
 2347              		.loc 1 723 0
 2348 011f 498BB748 		movq	1096(%r15), %rsi
 2348      040000
 2349 0126 4C89FF   		movq	%r15, %rdi
 2350 0129 E8000000 		call	png_free
 2350      00
 2351              	.LVL294:
 724:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->index_to_palette = NULL;
 2352              		.loc 1 724 0
 2353 012e 49C78750 		movq	$0, 1104(%r15)
 2353      04000000 
 2353      000000
 725:fltk-1.3.4-1/png/pngrtran.c ****       }
 2354              		.loc 1 725 0
 2355 0139 49C78748 		movq	$0, 1096(%r15)
 2355      04000000 
 2355      000000
 2356 0144 895C2414 		movl	%ebx, 20(%rsp)
 2357              	.LVL295:
 2358              	.L242:
 2359              	.LBE159:
 729:fltk-1.3.4-1/png/pngrtran.c ****    {
 2360              		.loc 1 729 0
 2361 0148 4983BF60 		cmpq	$0, 608(%r15)
 2361      02000000 
 2362 0150 7507     		jne	.L299
 731:fltk-1.3.4-1/png/pngrtran.c ****    }
 2363              		.loc 1 731 0
 2364 0152 4D89B760 		movq	%r14, 608(%r15)
 2364      020000
 2365              	.L299:
 733:fltk-1.3.4-1/png/pngrtran.c **** 
 2366              		.loc 1 733 0
 2367 0159 0FB74424 		movzwl	20(%rsp), %eax
 2367      14
 735:fltk-1.3.4-1/png/pngrtran.c ****    {
 2368              		.loc 1 735 0
 2369 015e 8B542418 		movl	24(%rsp), %edx
 2370 0162 85D2     		testl	%edx, %edx
 733:fltk-1.3.4-1/png/pngrtran.c **** 
 2371              		.loc 1 733 0
 2372 0164 66418987 		movw	%ax, 616(%r15)
 2372      68020000 
 735:fltk-1.3.4-1/png/pngrtran.c ****    {
 2373              		.loc 1 735 0
 2374 016c 0F854401 		jne	.L375
 2374      0000
 2375              	.L237:
 796:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_QUANTIZE */
 2376              		.loc 1 796 0
 2377 0172 4883C458 		addq	$88, %rsp
 2378              		.cfi_remember_state
 2379              		.cfi_def_cfa_offset 56
 2380 0176 5B       		popq	%rbx
 2381              		.cfi_def_cfa_offset 48
 2382 0177 5D       		popq	%rbp
 2383              		.cfi_def_cfa_offset 40
 2384 0178 415C     		popq	%r12
 2385              		.cfi_def_cfa_offset 32
 2386 017a 415D     		popq	%r13
 2387              		.cfi_def_cfa_offset 24
 2388 017c 415E     		popq	%r14
 2389              		.cfi_def_cfa_offset 16
 2390 017e 415F     		popq	%r15
 2391              		.cfi_def_cfa_offset 8
 2392 0180 C3       		ret
 2393              	.LVL296:
 2394              	.L246:
 2395              		.cfi_restore_state
 2396              	.LBB170:
 459:fltk-1.3.4-1/png/pngrtran.c ****          {
 2397              		.loc 1 459 0
 2398 0181 8B442414 		movl	20(%rsp), %eax
 2399 0185 83E801   		subl	$1, %eax
 2400              	.LVL297:
 2401 0188 39C3     		cmpl	%eax, %ebx
 2402 018a 7F59     		jg	.L249
 2403              	.L333:
 2404              	.LVL298:
 2405              	.LBB151:
 465:fltk-1.3.4-1/png/pngrtran.c ****             {
 2406              		.loc 1 465 0 discriminator 1
 2407 018c 85C0     		testl	%eax, %eax
 2408 018e 7E55     		jle	.L249
 465:fltk-1.3.4-1/png/pngrtran.c ****             {
 2409              		.loc 1 465 0 is_stmt 0
 2410 0190 31D2     		xorl	%edx, %edx
 2411 0192 B9010000 		movl	$1, %ecx
 2411      00
 2412              	.LVL299:
 2413              	.L253:
 467:fltk-1.3.4-1/png/pngrtran.c ****                    < histogram[png_ptr->quantize_sort[j + 1]])
 2414              		.loc 1 467 0 is_stmt 1
 2415 0197 4D8B8740 		movq	1088(%r15), %r8
 2415      040000
 2416 019e 4C8D4A01 		leaq	1(%rdx), %r9
 2417 01a2 498D3C10 		leaq	(%r8,%rdx), %rdi
 468:fltk-1.3.4-1/png/pngrtran.c ****                {
 2418              		.loc 1 468 0
 2419 01a6 450FB654 		movzbl	1(%r8,%rdx), %r10d
 2419      1001
 467:fltk-1.3.4-1/png/pngrtran.c ****                    < histogram[png_ptr->quantize_sort[j + 1]])
 2420              		.loc 1 467 0
 2421 01ac 440FB61F 		movzbl	(%rdi), %r11d
 468:fltk-1.3.4-1/png/pngrtran.c ****                {
 2422              		.loc 1 468 0
 2423 01b0 4D89D0   		movq	%r10, %r8
 467:fltk-1.3.4-1/png/pngrtran.c ****                    < histogram[png_ptr->quantize_sort[j + 1]])
 2424              		.loc 1 467 0
 2425 01b3 460FB754 		movzwl	0(%rbp,%r10,2), %r10d
 2425      5500
 2426 01b9 66463954 		cmpw	%r10w, 0(%rbp,%r11,2)
 2426      5D00
 2427 01bf 7311     		jnb	.L252
 2428              	.LVL300:
 2429              	.LBB152:
 473:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->quantize_sort[j + 1] = t;
 2430              		.loc 1 473 0
 2431 01c1 448807   		movb	%r8b, (%rdi)
 474:fltk-1.3.4-1/png/pngrtran.c ****                   done = 0;
 2432              		.loc 1 474 0
 2433 01c4 498B8F40 		movq	1088(%r15), %rcx
 2433      040000
 2434              	.LVL301:
 2435 01cb 44885C11 		movb	%r11b, 1(%rcx,%rdx)
 2435      01
 2436              	.LVL302:
 475:fltk-1.3.4-1/png/pngrtran.c ****                }
 2437              		.loc 1 475 0
 2438 01d0 31C9     		xorl	%ecx, %ecx
 2439              	.LVL303:
 2440              	.L252:
 2441              	.LBE152:
 465:fltk-1.3.4-1/png/pngrtran.c ****             {
 2442              		.loc 1 465 0 discriminator 2
 2443 01d2 4439C8   		cmpl	%r9d, %eax
 2444 01d5 4C89CA   		movq	%r9, %rdx
 2445 01d8 7FBD     		jg	.L253
 2446              	.LVL304:
 479:fltk-1.3.4-1/png/pngrtran.c ****                break;
 2447              		.loc 1 479 0
 2448 01da 85C9     		testl	%ecx, %ecx
 2449 01dc 7507     		jne	.L249
 2450              	.LBE151:
 459:fltk-1.3.4-1/png/pngrtran.c ****          {
 2451              		.loc 1 459 0 discriminator 2
 2452 01de 83E801   		subl	$1, %eax
 2453              	.LVL305:
 2454 01e1 39C3     		cmpl	%eax, %ebx
 2455 01e3 7EA7     		jle	.L333
 2456              	.LVL306:
 2457              	.L249:
 484:fltk-1.3.4-1/png/pngrtran.c ****          {
 2458              		.loc 1 484 0
 2459 01e5 8B6C2418 		movl	24(%rsp), %ebp
 2460              	.LVL307:
 2461 01e9 85ED     		testl	%ebp, %ebp
 2462 01eb 0F842705 		je	.L376
 2462      0000
 2463              	.LVL308:
 2464              	.LBB153:
 491:fltk-1.3.4-1/png/pngrtran.c ****             {
 2465              		.loc 1 491 0 discriminator 1
 2466 01f1 85DB     		testl	%ebx, %ebx
 2467 01f3 498BB740 		movq	1088(%r15), %rsi
 2467      040000
 2468 01fa 7E5F     		jle	.L260
 491:fltk-1.3.4-1/png/pngrtran.c ****             {
 2469              		.loc 1 491 0 is_stmt 0
 2470 01fc 8B7C2414 		movl	20(%rsp), %edi
 2471 0200 4C89F1   		movq	%r14, %rcx
 2472 0203 31D2     		xorl	%edx, %edx
 2473              	.LVL309:
 2474              	.L263:
 493:fltk-1.3.4-1/png/pngrtran.c ****                {
 2475              		.loc 1 493 0 is_stmt 1
 2476 0205 0FB60416 		movzbl	(%rsi,%rdx), %eax
 2477 0209 39C3     		cmpl	%eax, %ebx
 2478 020b 7F42     		jg	.L261
 2479 020d 4863C7   		movslq	%edi, %rax
 2480 0210 4883E801 		subq	$1, %rax
 2481 0214 EB0D     		jmp	.L262
 2482 0216 662E0F1F 		.p2align 4,,10
 2482      84000000 
 2482      0000
 2483              		.p2align 3
 2484              	.L314:
 2485 0220 4C89C8   		movq	%r9, %rax
 2486              	.L262:
 497:fltk-1.3.4-1/png/pngrtran.c **** 
 2487              		.loc 1 497 0 discriminator 1
 2488 0223 440FB604 		movzbl	(%rsi,%rax), %r8d
 2488      06
 496:fltk-1.3.4-1/png/pngrtran.c ****                   while ((int)png_ptr->quantize_sort[j] >= maximum_colors);
 2489              		.loc 1 496 0 discriminator 1
 2490 0228 83EF01   		subl	$1, %edi
 2491              	.LVL310:
 2492 022b 4C8D48FF 		leaq	-1(%rax), %r9
 497:fltk-1.3.4-1/png/pngrtran.c **** 
 2493              		.loc 1 497 0 discriminator 1
 2494 022f 4439C3   		cmpl	%r8d, %ebx
 2495 0232 7EEC     		jle	.L314
 499:fltk-1.3.4-1/png/pngrtran.c ****                }
 2496              		.loc 1 499 0
 2497 0234 488D0440 		leaq	(%rax,%rax,2), %rax
 2498 0238 4C01F0   		addq	%r14, %rax
 2499 023b 0FB730   		movzwl	(%rax), %esi
 2500 023e 668931   		movw	%si, (%rcx)
 2501 0241 0FB64002 		movzbl	2(%rax), %eax
 2502 0245 884102   		movb	%al, 2(%rcx)
 2503 0248 498BB740 		movq	1088(%r15), %rsi
 2503      040000
 2504              	.L261:
 2505              	.LVL311:
 2506 024f 4883C201 		addq	$1, %rdx
 2507              	.LVL312:
 2508 0253 4883C103 		addq	$3, %rcx
 491:fltk-1.3.4-1/png/pngrtran.c ****             {
 2509              		.loc 1 491 0 discriminator 2
 2510 0257 39D3     		cmpl	%edx, %ebx
 2511 0259 7FAA     		jg	.L263
 2512              	.LVL313:
 2513              	.L260:
 2514              	.LBE153:
 557:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_sort = NULL;
 2515              		.loc 1 557 0
 2516 025b 4C89FF   		movq	%r15, %rdi
 2517 025e E8000000 		call	png_free
 2517      00
 2518              	.LVL314:
 558:fltk-1.3.4-1/png/pngrtran.c ****       }
 2519              		.loc 1 558 0
 2520 0263 49C78740 		movq	$0, 1088(%r15)
 2520      04000000 
 2520      000000
 2521              	.LBE170:
 2522 026e 895C2414 		movl	%ebx, 20(%rsp)
 2523              	.LVL315:
 2524 0272 E9D1FEFF 		jmp	.L242
 2524      FF
 2525              	.LVL316:
 2526              	.L240:
 2527              	.LBB171:
 428:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)(num_palette * (sizeof (png_byte))));
 2528              		.loc 1 428 0
 2529 0277 448B6C24 		movl	20(%rsp), %r13d
 2529      14
 2530              	.LVL317:
 2531 027c 4C89FF   		movq	%r15, %rdi
 2532 027f 4489EE   		movl	%r13d, %esi
 2533 0282 E8000000 		call	png_malloc
 2533      00
 2534              	.LVL318:
 430:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_index[i] = (png_byte)i;
 2535              		.loc 1 430 0
 2536 0287 4585ED   		testl	%r13d, %r13d
 428:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)(num_palette * (sizeof (png_byte))));
 2537              		.loc 1 428 0
 2538 028a 49898790 		movq	%rax, 912(%r15)
 2538      030000
 2539              	.LVL319:
 430:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_index[i] = (png_byte)i;
 2540              		.loc 1 430 0
 2541 0291 0F8EAEFD 		jle	.L243
 2541      FFFF
 430:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_index[i] = (png_byte)i;
 2542              		.loc 1 430 0 is_stmt 0 discriminator 3
 2543 0297 4889C2   		movq	%rax, %rdx
 2544 029a 31C0     		xorl	%eax, %eax
 2545              	.LVL320:
 2546              	.L244:
 431:fltk-1.3.4-1/png/pngrtran.c ****    }
 2547              		.loc 1 431 0 is_stmt 1 discriminator 3
 2548 029c 880402   		movb	%al, (%rdx,%rax)
 2549              	.LVL321:
 2550 029f 4883C001 		addq	$1, %rax
 2551              	.LVL322:
 430:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->quantize_index[i] = (png_byte)i;
 2552              		.loc 1 430 0 discriminator 3
 2553 02a3 39442414 		cmpl	%eax, 20(%rsp)
 2554 02a7 0F8E98FD 		jle	.L243
 2554      FFFF
 2555 02ad 498B9790 		movq	912(%r15), %rdx
 2555      030000
 2556 02b4 EBE6     		jmp	.L244
 2557              	.LVL323:
 2558              	.L375:
 2559              	.LBE171:
 2560              	.LBB172:
 746:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)(num_entries * (sizeof (png_byte))));
 2561              		.loc 1 746 0
 2562 02b6 BE008000 		movl	$32768, %esi
 2562      00
 2563 02bb 4C89FF   		movq	%r15, %rdi
 754:fltk-1.3.4-1/png/pngrtran.c ****       {
 2564              		.loc 1 754 0
 2565 02be 31ED     		xorl	%ebp, %ebp
 746:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)(num_entries * (sizeof (png_byte))));
 2566              		.loc 1 746 0
 2567 02c0 E8000000 		call	png_calloc
 2567      00
 2568              	.LVL324:
 749:fltk-1.3.4-1/png/pngrtran.c ****           (sizeof (png_byte))));
 2569              		.loc 1 749 0
 2570 02c5 BE008000 		movl	$32768, %esi
 2570      00
 2571 02ca 4C89FF   		movq	%r15, %rdi
 746:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)(num_entries * (sizeof (png_byte))));
 2572              		.loc 1 746 0
 2573 02cd 49898788 		movq	%rax, 904(%r15)
 2573      030000
 749:fltk-1.3.4-1/png/pngrtran.c ****           (sizeof (png_byte))));
 2574              		.loc 1 749 0
 2575 02d4 E8000000 		call	png_malloc
 2575      00
 2576              	.LVL325:
 2577              	.LBB173:
 2578              	.LBB174:
 2579              		.loc 2 90 0
 2580 02d9 BA008000 		movl	$32768, %edx
 2580      00
 2581 02de BEFF0000 		movl	$255, %esi
 2581      00
 2582 02e3 4889C7   		movq	%rax, %rdi
 2583              	.LBE174:
 2584              	.LBE173:
 749:fltk-1.3.4-1/png/pngrtran.c ****           (sizeof (png_byte))));
 2585              		.loc 1 749 0
 2586 02e6 4889C3   		movq	%rax, %rbx
 2587              	.LVL326:
 2588              	.LBB176:
 2589              	.LBB175:
 2590              		.loc 2 90 0
 2591 02e9 E8000000 		call	memset
 2591      00
 2592              	.LVL327:
 2593              	.LBE175:
 2594              	.LBE176:
 754:fltk-1.3.4-1/png/pngrtran.c ****       {
 2595              		.loc 1 754 0
 2596 02ee 8B442414 		movl	20(%rsp), %eax
 2597 02f2 4C897424 		movq	%r14, 24(%rsp)
 2597      18
 2598              	.LVL328:
 2599 02f7 85C0     		testl	%eax, %eax
 2600 02f9 0F8E0501 		jle	.L313
 2600      0000
 2601              	.LVL329:
 2602              	.L330:
 2603              	.LBB177:
 757:fltk-1.3.4-1/png/pngrtran.c ****          int g = (palette[i].green >> (8 - PNG_QUANTIZE_GREEN_BITS));
 2604              		.loc 1 757 0
 2605 02ff 488B7424 		movq	24(%rsp), %rsi
 2605      18
 761:fltk-1.3.4-1/png/pngrtran.c ****          {
 2606              		.loc 1 761 0
 2607 0304 C7442420 		movl	$0, 32(%rsp)
 2607      00000000 
 757:fltk-1.3.4-1/png/pngrtran.c ****          int g = (palette[i].green >> (8 - PNG_QUANTIZE_GREEN_BITS));
 2608              		.loc 1 757 0
 2609 030c 0FB606   		movzbl	(%rsi), %eax
 2610 030f C0E803   		shrb	$3, %al
 2611 0312 0FB6C0   		movzbl	%al, %eax
 2612 0315 89442424 		movl	%eax, 36(%rsp)
 2613              	.LVL330:
 758:fltk-1.3.4-1/png/pngrtran.c ****          int b = (palette[i].blue >> (8 - PNG_QUANTIZE_BLUE_BITS));
 2614              		.loc 1 758 0
 2615 0319 0FB64601 		movzbl	1(%rsi), %eax
 2616              	.LVL331:
 2617 031d C0E803   		shrb	$3, %al
 2618 0320 440FB6F0 		movzbl	%al, %r14d
 2619              	.LVL332:
 759:fltk-1.3.4-1/png/pngrtran.c **** 
 2620              		.loc 1 759 0
 2621 0324 0FB64602 		movzbl	2(%rsi), %eax
 2622 0328 89C6     		movl	%eax, %esi
 2623 032a 88442408 		movb	%al, 8(%rsp)
 2624 032e 40C0EE03 		shrb	$3, %sil
 2625 0332 400FB6F6 		movzbl	%sil, %esi
 2626              	.LVL333:
 2627              	.L311:
 2628 0336 8B542420 		movl	32(%rsp), %edx
 2629 033a 8B4C2424 		movl	36(%rsp), %ecx
 2630 033e 89D0     		movl	%edx, %eax
 2631 0340 4189CD   		movl	%ecx, %r13d
 2632 0343 4129D5   		subl	%edx, %r13d
 2633 0346 29C8     		subl	%ecx, %eax
 2634 0348 39D1     		cmpl	%edx, %ecx
 2635 034a 440F4CE8 		cmovl	%eax, %r13d
 2636              	.LVL334:
 2637              	.LBB178:
 765:fltk-1.3.4-1/png/pngrtran.c ****                 PNG_QUANTIZE_GREEN_BITS));
 2638              		.loc 1 765 0
 2639 034e C1E20A   		sall	$10, %edx
 768:fltk-1.3.4-1/png/pngrtran.c ****             {
 2640              		.loc 1 768 0
 2641 0351 4531E4   		xorl	%r12d, %r12d
 765:fltk-1.3.4-1/png/pngrtran.c ****                 PNG_QUANTIZE_GREEN_BITS));
 2642              		.loc 1 765 0
 2643 0354 89542408 		movl	%edx, 8(%rsp)
 2644              	.LVL335:
 2645 0358 0F1F8400 		.p2align 4,,10
 2645      00000000 
 2646              		.p2align 3
 2647              	.L310:
 2648 0360 4589E0   		movl	%r12d, %r8d
 2649 0363 4489F0   		movl	%r14d, %eax
 2650              	.LBB179:
 774:fltk-1.3.4-1/png/pngrtran.c **** 
 2651              		.loc 1 774 0
 2652 0366 4589E2   		movl	%r12d, %r10d
 2653 0369 4529F0   		subl	%r14d, %r8d
 2654 036c 4429E0   		subl	%r12d, %eax
 2655 036f 4539E6   		cmpl	%r12d, %r14d
 2656 0372 440F4DC0 		cmovge	%eax, %r8d
 2657              	.LVL336:
 773:fltk-1.3.4-1/png/pngrtran.c ****                int index_g = index_r | (ig << PNG_QUANTIZE_BLUE_BITS);
 2658              		.loc 1 773 0
 2659 0376 4539C5   		cmpl	%r8d, %r13d
 772:fltk-1.3.4-1/png/pngrtran.c ****                int dm = ((dr > dg) ? dr : dg);
 2660              		.loc 1 772 0
 2661 0379 478D5C05 		leal	0(%r13,%r8), %r11d
 2661      00
 2662              	.LVL337:
 773:fltk-1.3.4-1/png/pngrtran.c ****                int index_g = index_r | (ig << PNG_QUANTIZE_BLUE_BITS);
 2663              		.loc 1 773 0
 2664 037e 450F4DC5 		cmovge	%r13d, %r8d
 2665              	.LVL338:
 774:fltk-1.3.4-1/png/pngrtran.c **** 
 2666              		.loc 1 774 0
 2667 0382 41C1E205 		sall	$5, %r10d
 2668 0386 440B5424 		orl	8(%rsp), %r10d
 2668      08
 2669              	.LVL339:
 776:fltk-1.3.4-1/png/pngrtran.c ****                {
 2670              		.loc 1 776 0
 2671 038b 31D2     		xorl	%edx, %edx
 2672              	.LVL340:
 2673 038d 0F1F00   		.p2align 4,,10
 2674              		.p2align 3
 2675              	.L309:
 2676              	.LBB180:
 778:fltk-1.3.4-1/png/pngrtran.c ****                   /* int db = abs(ib - b); */
 2677              		.loc 1 778 0
 2678 0390 4489D1   		movl	%r10d, %ecx
 2679 0393 89D7     		movl	%edx, %edi
 2680 0395 89F0     		movl	%esi, %eax
 2681 0397 29F7     		subl	%esi, %edi
 2682 0399 09D1     		orl	%edx, %ecx
 2683              	.LVL341:
 2684 039b 29D0     		subl	%edx, %eax
 2685 039d 39D6     		cmpl	%edx, %esi
 784:fltk-1.3.4-1/png/pngrtran.c ****                   {
 2686              		.loc 1 784 0
 2687 039f 4863C9   		movslq	%ecx, %rcx
 2688 03a2 0F4CC7   		cmovl	%edi, %eax
 2689              	.LVL342:
 782:fltk-1.3.4-1/png/pngrtran.c **** 
 2690              		.loc 1 782 0
 2691 03a5 4489C7   		movl	%r8d, %edi
 2692 03a8 4439C0   		cmpl	%r8d, %eax
 2693 03ab 0F4DF8   		cmovge	%eax, %edi
 2694 03ae 4401DF   		addl	%r11d, %edi
 2695 03b1 01F8     		addl	%edi, %eax
 2696              	.LVL343:
 784:fltk-1.3.4-1/png/pngrtran.c ****                   {
 2697              		.loc 1 784 0
 2698 03b3 488D3C0B 		leaq	(%rbx,%rcx), %rdi
 2699 03b7 440FB60F 		movzbl	(%rdi), %r9d
 2700 03bb 4439C8   		cmpl	%r9d, %eax
 2701 03be 7D0D     		jge	.L308
 786:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->palette_lookup[d_index] = (png_byte)i;
 2702              		.loc 1 786 0
 2703 03c0 8807     		movb	%al, (%rdi)
 787:fltk-1.3.4-1/png/pngrtran.c ****                   }
 2704              		.loc 1 787 0
 2705 03c2 498B8788 		movq	904(%r15), %rax
 2705      030000
 2706              	.LVL344:
 2707 03c9 40882C08 		movb	%bpl, (%rax,%rcx)
 2708              	.L308:
 2709              	.LBE180:
 776:fltk-1.3.4-1/png/pngrtran.c ****                {
 2710              		.loc 1 776 0 discriminator 2
 2711 03cd 83C201   		addl	$1, %edx
 2712              	.LVL345:
 2713 03d0 83FA20   		cmpl	$32, %edx
 2714 03d3 75BB     		jne	.L309
 2715              	.LBE179:
 768:fltk-1.3.4-1/png/pngrtran.c ****             {
 2716              		.loc 1 768 0 discriminator 2
 2717 03d5 4183C401 		addl	$1, %r12d
 2718              	.LVL346:
 2719 03d9 4183FC20 		cmpl	$32, %r12d
 2720 03dd 7581     		jne	.L310
 2721              	.LBE178:
 761:fltk-1.3.4-1/png/pngrtran.c ****          {
 2722              		.loc 1 761 0 discriminator 2
 2723 03df 83442420 		addl	$1, 32(%rsp)
 2723      01
 2724              	.LVL347:
 2725 03e4 8B442420 		movl	32(%rsp), %eax
 2726              	.LVL348:
 2727 03e8 83F820   		cmpl	$32, %eax
 2728 03eb 0F8545FF 		jne	.L311
 2728      FFFF
 2729              	.LBE177:
 754:fltk-1.3.4-1/png/pngrtran.c ****       {
 2730              		.loc 1 754 0 discriminator 2
 2731 03f1 83C501   		addl	$1, %ebp
 2732              	.LVL349:
 2733 03f4 48834424 		addq	$3, 24(%rsp)
 2733      1803
 2734 03fa 396C2414 		cmpl	%ebp, 20(%rsp)
 2735 03fe 0F85FBFE 		jne	.L330
 2735      FFFF
 2736              	.LVL350:
 2737              	.L313:
 2738              	.LBE172:
 796:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_QUANTIZE */
 2739              		.loc 1 796 0
 2740 0404 4883C458 		addq	$88, %rsp
 2741              		.cfi_remember_state
 2742              		.cfi_def_cfa_offset 56
 2743              	.LBB181:
 794:fltk-1.3.4-1/png/pngrtran.c ****    }
 2744              		.loc 1 794 0
 2745 0408 4889DE   		movq	%rbx, %rsi
 2746 040b 4C89FF   		movq	%r15, %rdi
 2747              	.LBE181:
 796:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_QUANTIZE */
 2748              		.loc 1 796 0
 2749 040e 5B       		popq	%rbx
 2750              		.cfi_def_cfa_offset 48
 2751              	.LVL351:
 2752 040f 5D       		popq	%rbp
 2753              		.cfi_def_cfa_offset 40
 2754 0410 415C     		popq	%r12
 2755              		.cfi_def_cfa_offset 32
 2756 0412 415D     		popq	%r13
 2757              		.cfi_def_cfa_offset 24
 2758 0414 415E     		popq	%r14
 2759              		.cfi_def_cfa_offset 16
 2760 0416 415F     		popq	%r15
 2761              		.cfi_def_cfa_offset 8
 2762              	.LBB182:
 794:fltk-1.3.4-1/png/pngrtran.c ****    }
 2763              		.loc 1 794 0
 2764 0418 E9000000 		jmp	png_free
 2764      00
 2765              	.LVL352:
 2766              	.L245:
 2767              		.cfi_restore_state
 2768              	.LBE182:
 2769              	.LBB183:
 579:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 2770              		.loc 1 579 0
 2771 041d 4489ED   		movl	%r13d, %ebp
 2772              	.LVL353:
 2773 0420 4C89FF   		movq	%r15, %rdi
 2774 0423 4889EE   		movq	%rbp, %rsi
 2775 0426 E8000000 		call	png_malloc
 2775      00
 2776              	.LVL354:
 581:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 2777              		.loc 1 581 0
 2778 042b 4889EE   		movq	%rbp, %rsi
 579:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 2779              		.loc 1 579 0
 2780 042e 49898748 		movq	%rax, 1096(%r15)
 2780      040000
 581:fltk-1.3.4-1/png/pngrtran.c ****              (png_uint_32)(num_palette * (sizeof (png_byte))));
 2781              		.loc 1 581 0
 2782 0435 4C89FF   		movq	%r15, %rdi
 2783 0438 E8000000 		call	png_malloc
 2783      00
 2784              	.LVL355:
 2785 043d 49898750 		movq	%rax, 1104(%r15)
 2785      040000
 2786              	.LVL356:
 585:fltk-1.3.4-1/png/pngrtran.c ****          {
 2787              		.loc 1 585 0
 2788 0444 31C0     		xorl	%eax, %eax
 2789 0446 4585ED   		testl	%r13d, %r13d
 2790 0449 7E1E     		jle	.L276
 2791              	.LVL357:
 2792              	.L334:
 587:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->palette_to_index[i] = (png_byte)i;
 2793              		.loc 1 587 0 discriminator 3
 2794 044b 498B9748 		movq	1096(%r15), %rdx
 2794      040000
 2795 0452 880402   		movb	%al, (%rdx,%rax)
 588:fltk-1.3.4-1/png/pngrtran.c ****          }
 2796              		.loc 1 588 0 discriminator 3
 2797 0455 498B9750 		movq	1104(%r15), %rdx
 2797      040000
 2798 045c 880402   		movb	%al, (%rdx,%rax)
 2799              	.LVL358:
 2800 045f 4883C001 		addq	$1, %rax
 2801              	.LVL359:
 585:fltk-1.3.4-1/png/pngrtran.c ****          {
 2802              		.loc 1 585 0 discriminator 3
 2803 0463 39442414 		cmpl	%eax, 20(%rsp)
 2804 0467 7FE2     		jg	.L334
 2805              	.L276:
 591:fltk-1.3.4-1/png/pngrtran.c ****              (sizeof (png_dsortp))));
 2806              		.loc 1 591 0
 2807 0469 BE081800 		movl	$6152, %esi
 2807      00
 2808 046e 4C89FF   		movq	%r15, %rdi
 576:fltk-1.3.4-1/png/pngrtran.c **** 
 2809              		.loc 1 576 0
 2810 0471 31ED     		xorl	%ebp, %ebp
 591:fltk-1.3.4-1/png/pngrtran.c ****              (sizeof (png_dsortp))));
 2811              		.loc 1 591 0
 2812 0473 E8000000 		call	png_calloc
 2812      00
 2813              	.LVL360:
 2814 0478 498D7603 		leaq	3(%r14), %rsi
 2815 047c 448B6C24 		movl	20(%rsp), %r13d
 2815      14
 2816 0481 48894424 		movq	%rax, 8(%rsp)
 2816      08
 2817              	.LVL361:
 2818 0486 48050818 		addq	$6152, %rax
 2818      0000
 2819              	.LVL362:
 604:fltk-1.3.4-1/png/pngrtran.c **** 
 2820              		.loc 1 604 0
 2821 048c C7442420 		movl	$96, 32(%rsp)
 2821      60000000 
 2822 0494 895C2424 		movl	%ebx, 36(%rsp)
 2823 0498 48897424 		movq	%rsi, 48(%rsp)
 2823      30
 2824 049d 48894424 		movq	%rax, 40(%rsp)
 2824      28
 2825              	.LVL363:
 2826              	.L274:
 2827 04a2 418D45FF 		leal	-1(%r13), %eax
 2828 04a6 4C8B6424 		movq	48(%rsp), %r12
 2828      30
 2829 04ab 31DB     		xorl	%ebx, %ebx
 2830 04ad 4D89F1   		movq	%r14, %r9
 2831 04b0 4489E9   		movl	%r13d, %ecx
 2832 04b3 4D89F8   		movq	%r15, %r8
 2833 04b6 89442440 		movl	%eax, 64(%rsp)
 2834 04ba 4189DE   		movl	%ebx, %r14d
 2835 04bd 4889E8   		movq	%rbp, %rax
 2836              	.LVL364:
 2837              	.L281:
 608:fltk-1.3.4-1/png/pngrtran.c ****             {
 2838              		.loc 1 608 0 discriminator 1
 2839 04c0 443B7424 		cmpl	64(%rsp), %r14d
 2839      40
 2840 04c5 0F8DC500 		jge	.L377
 2840      0000
 2841 04cb 458D7E01 		leal	1(%r14), %r15d
 2842              	.LBB168:
 612:fltk-1.3.4-1/png/pngrtran.c ****                {
 2843              		.loc 1 612 0
 2844 04cf 4439F9   		cmpl	%r15d, %ecx
 2845 04d2 4589FD   		movl	%r15d, %r13d
 2846              	.LVL365:
 2847 04d5 0F8EC5FB 		jle	.L277
 2847      FFFF
 2848 04db 4C89E5   		movq	%r12, %rbp
 2849 04de EB11     		jmp	.L280
 2850              	.LVL366:
 2851              	.L278:
 612:fltk-1.3.4-1/png/pngrtran.c ****                {
 2852              		.loc 1 612 0 is_stmt 0 discriminator 2
 2853 04e0 4183C501 		addl	$1, %r13d
 2854              	.LVL367:
 2855 04e4 4883C503 		addq	$3, %rbp
 2856 04e8 4139CD   		cmpl	%ecx, %r13d
 2857 04eb 0F84AFFB 		je	.L277
 2857      FFFF
 2858              	.L280:
 2859              	.LBB161:
 616:fltk-1.3.4-1/png/pngrtran.c **** 
 2860              		.loc 1 616 0 is_stmt 1
 2861 04f1 0FB67500 		movzbl	0(%rbp), %esi
 2862 04f5 410FB654 		movzbl	-3(%r12), %edx
 2862      24FD
 2863 04fb 29F2     		subl	%esi, %edx
 2864 04fd 89D6     		movl	%edx, %esi
 2865 04ff 89D3     		movl	%edx, %ebx
 2866 0501 410FB654 		movzbl	-2(%r12), %edx
 2866      24FE
 2867 0507 C1FE1F   		sarl	$31, %esi
 2868 050a 31F3     		xorl	%esi, %ebx
 2869 050c 29F3     		subl	%esi, %ebx
 2870 050e 0FB67501 		movzbl	1(%rbp), %esi
 2871 0512 29F2     		subl	%esi, %edx
 2872 0514 89D6     		movl	%edx, %esi
 2873 0516 C1FE1F   		sarl	$31, %esi
 2874 0519 31F2     		xorl	%esi, %edx
 2875 051b 29F2     		subl	%esi, %edx
 2876 051d 0FB67502 		movzbl	2(%rbp), %esi
 2877 0521 01D3     		addl	%edx, %ebx
 2878 0523 410FB654 		movzbl	-1(%r12), %edx
 2878      24FF
 2879 0529 29F2     		subl	%esi, %edx
 2880 052b 89D6     		movl	%edx, %esi
 2881 052d C1FE1F   		sarl	$31, %esi
 2882 0530 31F2     		xorl	%esi, %edx
 2883 0532 29F2     		subl	%esi, %edx
 2884 0534 01D3     		addl	%edx, %ebx
 2885              	.LVL368:
 618:fltk-1.3.4-1/png/pngrtran.c ****                   {
 2886              		.loc 1 618 0
 2887 0536 395C2420 		cmpl	%ebx, 32(%rsp)
 2888 053a 7CA4     		jl	.L278
 621:fltk-1.3.4-1/png/pngrtran.c ****                          (png_uint_32)(sizeof (png_dsort)));
 2889              		.loc 1 621 0
 2890 053c 4C89C7   		movq	%r8, %rdi
 2891 053f BE100000 		movl	$16, %esi
 2891      00
 2892 0544 4C894C24 		movq	%r9, 72(%rsp)
 2892      48
 2893 0549 894C2444 		movl	%ecx, 68(%rsp)
 2894 054d 4C894424 		movq	%r8, 56(%rsp)
 2894      38
 2895 0552 E8000000 		call	png_malloc_warn
 2895      00
 2896              	.LVL369:
 624:fltk-1.3.4-1/png/pngrtran.c ****                          break;
 2897              		.loc 1 624 0
 2898 0557 4885C0   		testq	%rax, %rax
 2899 055a 4C8B4424 		movq	56(%rsp), %r8
 2899      38
 2900 055f 8B4C2444 		movl	68(%rsp), %ecx
 2901 0563 4C8B4C24 		movq	72(%rsp), %r9
 2901      48
 2902 0568 0F8442FB 		je	.L369
 2902      FFFF
 627:fltk-1.3.4-1/png/pngrtran.c ****                      t->left = (png_byte)i;
 2903              		.loc 1 627 0
 2904 056e 488B7424 		movq	8(%rsp), %rsi
 2904      08
 2905 0573 4863DB   		movslq	%ebx, %rbx
 2906 0576 488D14DE 		leaq	(%rsi,%rbx,8), %rdx
 2907 057a 488B32   		movq	(%rdx), %rsi
 628:fltk-1.3.4-1/png/pngrtran.c ****                      t->right = (png_byte)j;
 2908              		.loc 1 628 0
 2909 057d 44887008 		movb	%r14b, 8(%rax)
 629:fltk-1.3.4-1/png/pngrtran.c ****                      hash[d] = t;
 2910              		.loc 1 629 0
 2911 0581 44886809 		movb	%r13b, 9(%rax)
 627:fltk-1.3.4-1/png/pngrtran.c ****                      t->left = (png_byte)i;
 2912              		.loc 1 627 0
 2913 0585 488930   		movq	%rsi, (%rax)
 630:fltk-1.3.4-1/png/pngrtran.c ****                   }
 2914              		.loc 1 630 0
 2915 0588 488902   		movq	%rax, (%rdx)
 2916 058b E950FFFF 		jmp	.L278
 2916      FF
 2917              	.LVL370:
 2918              	.L377:
 2919              	.LBE161:
 2920              	.LBE168:
 637:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i <= max_d; i++)
 2921              		.loc 1 637 0
 2922 0590 4885C0   		testq	%rax, %rax
 2923 0593 4189CD   		movl	%ecx, %r13d
 2924 0596 4889C5   		movq	%rax, %rbp
 2925 0599 4D89C7   		movq	%r8, %r15
 2926 059c 4D89CE   		movq	%r9, %r14
 2927              	.LVL371:
 2928 059f 0F8416FB 		je	.L283
 2928      FFFF
 2929              	.LVL372:
 2930 05a5 31DB     		xorl	%ebx, %ebx
 2931              	.LVL373:
 2932              	.L295:
 640:fltk-1.3.4-1/png/pngrtran.c ****                {
 2933              		.loc 1 640 0
 2934 05a7 488B4424 		movq	8(%rsp), %rax
 2934      08
 2935 05ac 488B3CD8 		movq	(%rax,%rbx,8), %rdi
 2936 05b0 4885FF   		testq	%rdi, %rdi
 2937 05b3 0F844C01 		je	.L284
 2937      0000
 2938              	.L294:
 2939              	.LVL374:
 2940              	.LBB169:
 646:fltk-1.3.4-1/png/pngrtran.c ****                          < num_new_palette &&
 2941              		.loc 1 646 0
 2942 05b9 0FB64F08 		movzbl	8(%rdi), %ecx
 2943 05bd 498B8748 		movq	1096(%r15), %rax
 2943      040000
 2944 05c4 4889CA   		movq	%rcx, %rdx
 2945 05c7 0FB60C08 		movzbl	(%rax,%rcx), %ecx
 2946 05cb 4439E9   		cmpl	%r13d, %ecx
 2947 05ce 0F8D1A01 		jge	.L285
 2947      0000
 648:fltk-1.3.4-1/png/pngrtran.c ****                          < num_new_palette)
 2948              		.loc 1 648 0
 2949 05d4 0FB67709 		movzbl	9(%rdi), %esi
 2950 05d8 4889F1   		movq	%rsi, %rcx
 647:fltk-1.3.4-1/png/pngrtran.c ****                          (int)png_ptr->index_to_palette[p->right]
 2951              		.loc 1 647 0
 2952 05db 0FB63430 		movzbl	(%rax,%rsi), %esi
 2953 05df 4439EE   		cmpl	%r13d, %esi
 2954 05e2 0F8D0601 		jge	.L285
 2954      0000
 2955              	.LBB166:
 653:fltk-1.3.4-1/png/pngrtran.c ****                         {
 2956              		.loc 1 653 0
 2957 05e8 41F6C501 		testb	$1, %r13b
 655:fltk-1.3.4-1/png/pngrtran.c ****                            next_j = p->right;
 2958              		.loc 1 655 0
 2959 05ec 440FB6DA 		movzbl	%dl, %r11d
 653:fltk-1.3.4-1/png/pngrtran.c ****                         {
 2960              		.loc 1 653 0
 2961 05f0 7507     		jne	.L287
 660:fltk-1.3.4-1/png/pngrtran.c ****                            next_j = p->left;
 2962              		.loc 1 660 0
 2963 05f2 440FB6D9 		movzbl	%cl, %r11d
 2964              	.LVL375:
 661:fltk-1.3.4-1/png/pngrtran.c ****                         }
 2965              		.loc 1 661 0
 2966 05f6 0FB6CA   		movzbl	%dl, %ecx
 2967              	.LVL376:
 2968              	.L287:
 664:fltk-1.3.4-1/png/pngrtran.c ****                         palette[png_ptr->index_to_palette[j]]
 2969              		.loc 1 664 0
 2970 05f9 4183ED01 		subl	$1, %r13d
 2971              	.LVL377:
 665:fltk-1.3.4-1/png/pngrtran.c ****                             = palette[num_new_palette];
 2972              		.loc 1 665 0
 2973 05fd 4963D3   		movslq	%r11d, %rdx
 667:fltk-1.3.4-1/png/pngrtran.c ****                         {
 2974              		.loc 1 667 0
 2975 0600 448B5424 		movl	24(%rsp), %r10d
 2975      18
 666:fltk-1.3.4-1/png/pngrtran.c ****                         if (full_quantize == 0)
 2976              		.loc 1 666 0
 2977 0605 4D63C5   		movslq	%r13d, %r8
 2978 0608 0FB60410 		movzbl	(%rax,%rdx), %eax
 2979 060c 4B8D3440 		leaq	(%r8,%r8,2), %rsi
 2980 0610 4C01F6   		addq	%r14, %rsi
 2981 0613 440FB70E 		movzwl	(%rsi), %r9d
 2982 0617 488D0440 		leaq	(%rax,%rax,2), %rax
 2983 061b 4C01F0   		addq	%r14, %rax
 667:fltk-1.3.4-1/png/pngrtran.c ****                         {
 2984              		.loc 1 667 0
 2985 061e 4585D2   		testl	%r10d, %r10d
 666:fltk-1.3.4-1/png/pngrtran.c ****                         if (full_quantize == 0)
 2986              		.loc 1 666 0
 2987 0621 66448908 		movw	%r9w, (%rax)
 2988 0625 0FB67602 		movzbl	2(%rsi), %esi
 2989 0629 40887002 		movb	%sil, 2(%rax)
 2990 062d 498B8748 		movq	1096(%r15), %rax
 2990      040000
 2991 0634 0FB63410 		movzbl	(%rax,%rdx), %esi
 667:fltk-1.3.4-1/png/pngrtran.c ****                         {
 2992              		.loc 1 667 0
 2993 0638 7573     		jne	.L289
 2994              	.LVL378:
 2995              	.LBB165:
 671:fltk-1.3.4-1/png/pngrtran.c ****                            {
 2996              		.loc 1 671 0 discriminator 1
 2997 063a 448B4C24 		movl	20(%rsp), %r9d
 2997      14
 2998 063f 4585C9   		testl	%r9d, %r9d
 2999 0642 7E69     		jle	.L289
 671:fltk-1.3.4-1/png/pngrtran.c ****                            {
 3000              		.loc 1 671 0 is_stmt 0
 3001 0644 4531C9   		xorl	%r9d, %r9d
 676:fltk-1.3.4-1/png/pngrtran.c **** 
 3002              		.loc 1 676 0 is_stmt 1
 3003 0647 4863C9   		movslq	%ecx, %rcx
 3004 064a EB10     		jmp	.L293
 3005              	.LVL379:
 3006              	.L291:
 678:fltk-1.3.4-1/png/pngrtran.c ****                                   num_new_palette)
 3007              		.loc 1 678 0
 3008 064c 4539E5   		cmpl	%r12d, %r13d
 3009 064f 7443     		je	.L378
 3010              	.L292:
 3011              	.LVL380:
 3012 0651 4983C101 		addq	$1, %r9
 3013              	.LVL381:
 671:fltk-1.3.4-1/png/pngrtran.c ****                            {
 3014              		.loc 1 671 0 discriminator 2
 3015 0655 44394C24 		cmpl	%r9d, 20(%rsp)
 3015      14
 3016 065a 7E51     		jle	.L289
 3017              	.L293:
 3018              	.LVL382:
 673:fltk-1.3.4-1/png/pngrtran.c ****                                   png_ptr->index_to_palette[j])
 3019              		.loc 1 673 0
 3020 065c 4D89CA   		movq	%r9, %r10
 3021 065f 4D039790 		addq	912(%r15), %r10
 3021      030000
 3022 0666 450FB622 		movzbl	(%r10), %r12d
 3023 066a 4138F4   		cmpb	%sil, %r12b
 3024 066d 75DD     		jne	.L291
 676:fltk-1.3.4-1/png/pngrtran.c **** 
 3025              		.loc 1 676 0
 3026 066f 0FB60408 		movzbl	(%rax,%rcx), %eax
 675:fltk-1.3.4-1/png/pngrtran.c ****                                      png_ptr->index_to_palette[next_j];
 3027              		.loc 1 675 0
 3028 0673 418802   		movb	%al, (%r10)
 3029 0676 4D89CA   		movq	%r9, %r10
 3030 0679 4D039790 		addq	912(%r15), %r10
 3030      030000
 3031 0680 498B8748 		movq	1096(%r15), %rax
 3031      040000
 3032 0687 450FB622 		movzbl	(%r10), %r12d
 3033 068b 0FB63410 		movzbl	(%rax,%rdx), %esi
 678:fltk-1.3.4-1/png/pngrtran.c ****                                   num_new_palette)
 3034              		.loc 1 678 0
 3035 068f 4539E5   		cmpl	%r12d, %r13d
 3036 0692 75BD     		jne	.L292
 3037              	.L378:
 3038 0694 4983C101 		addq	$1, %r9
 3039              	.LVL383:
 671:fltk-1.3.4-1/png/pngrtran.c ****                            {
 3040              		.loc 1 671 0
 3041 0698 44394C24 		cmpl	%r9d, 20(%rsp)
 3041      14
 680:fltk-1.3.4-1/png/pngrtran.c ****                                      png_ptr->index_to_palette[j];
 3042              		.loc 1 680 0
 3043 069d 418832   		movb	%sil, (%r10)
 3044 06a0 498B8748 		movq	1096(%r15), %rax
 3044      040000
 3045 06a7 0FB63410 		movzbl	(%rax,%rdx), %esi
 671:fltk-1.3.4-1/png/pngrtran.c ****                            {
 3046              		.loc 1 671 0
 3047 06ab 7FAF     		jg	.L293
 3048              	.LVL384:
 3049              	.L289:
 3050              	.LBE165:
 686:fltk-1.3.4-1/png/pngrtran.c **** 
 3051              		.loc 1 686 0
 3052 06ad 498B8F50 		movq	1104(%r15), %rcx
 3052      040000
 3053 06b4 420FB60C 		movzbl	(%rcx,%r8), %ecx
 3053      01
 3054 06b9 40883408 		movb	%sil, (%rax,%rcx)
 688:fltk-1.3.4-1/png/pngrtran.c ****                             = png_ptr->palette_to_index[num_new_palette];
 3055              		.loc 1 688 0
 3056 06bd 498B8750 		movq	1104(%r15), %rax
 3056      040000
 3057 06c4 498B8F48 		movq	1096(%r15), %rcx
 3057      040000
 689:fltk-1.3.4-1/png/pngrtran.c **** 
 3058              		.loc 1 689 0
 3059 06cb 420FB634 		movzbl	(%rax,%r8), %esi
 3059      00
 3060 06d0 0FB60C11 		movzbl	(%rcx,%rdx), %ecx
 3061 06d4 40883408 		movb	%sil, (%rax,%rcx)
 691:fltk-1.3.4-1/png/pngrtran.c ****                             (png_byte)num_new_palette;
 3062              		.loc 1 691 0
 3063 06d8 498B8748 		movq	1096(%r15), %rax
 3063      040000
 3064 06df 44882C10 		movb	%r13b, (%rax,%rdx)
 694:fltk-1.3.4-1/png/pngrtran.c ****                             (png_byte)j;
 3065              		.loc 1 694 0
 3066 06e3 498B8750 		movq	1104(%r15), %rax
 3066      040000
 3067 06ea 46881C00 		movb	%r11b, (%rax,%r8)
 3068              	.LVL385:
 3069              	.L285:
 3070              	.LBE166:
 697:fltk-1.3.4-1/png/pngrtran.c ****                         break;
 3071              		.loc 1 697 0
 3072 06ee 443B6C24 		cmpl	36(%rsp), %r13d
 3072      24
 3073 06f3 0F8EC2F9 		jle	.L283
 3073      FFFF
 644:fltk-1.3.4-1/png/pngrtran.c ****                   {
 3074              		.loc 1 644 0 discriminator 2
 3075 06f9 488B3F   		movq	(%rdi), %rdi
 3076              	.LVL386:
 3077 06fc 4885FF   		testq	%rdi, %rdi
 3078 06ff 0F85B4FE 		jne	.L294
 3078      FFFF
 3079              	.LVL387:
 3080              	.L284:
 3081 0705 4883C301 		addq	$1, %rbx
 3082              	.LVL388:
 3083              	.LBE169:
 638:fltk-1.3.4-1/png/pngrtran.c ****             {
 3084              		.loc 1 638 0 discriminator 2
 3085 0709 395C2420 		cmpl	%ebx, 32(%rsp)
 3086 070d 0F8D94FE 		jge	.L295
 3086      FFFF
 3087 0713 E9A3F9FF 		jmp	.L283
 3087      FF
 3088              	.LVL389:
 3089              	.L376:
 3090              	.LBE183:
 3091              	.LBB184:
 3092              	.LBB154:
 510:fltk-1.3.4-1/png/pngrtran.c ****             {
 3093              		.loc 1 510 0 discriminator 1
 3094 0718 31F6     		xorl	%esi, %esi
 3095 071a 85DB     		testl	%ebx, %ebx
 3096 071c 4C89F2   		movq	%r14, %rdx
 3097 071f 8B7C2414 		movl	20(%rsp), %edi
 3098 0723 0F8E8A00 		jle	.L267
 3098      0000
 3099              	.LVL390:
 3100              	.L332:
 513:fltk-1.3.4-1/png/pngrtran.c ****                {
 3101              		.loc 1 513 0
 3102 0729 498B8F40 		movq	1088(%r15), %rcx
 3102      040000
 3103 0730 0FB60431 		movzbl	(%rcx,%rsi), %eax
 3104 0734 39C3     		cmpl	%eax, %ebx
 3105 0736 7F6B     		jg	.L264
 3106 0738 4863C7   		movslq	%edi, %rax
 3107 073b 4883E801 		subq	$1, %rax
 3108 073f EB0A     		jmp	.L265
 3109              		.p2align 4,,10
 3110 0741 0F1F8000 		.p2align 3
 3110      000000
 3111              	.L315:
 3112 0748 4C89C8   		movq	%r9, %rax
 3113              	.L265:
 3114              	.LBB155:
 519:fltk-1.3.4-1/png/pngrtran.c **** 
 3115              		.loc 1 519 0 discriminator 1
 3116 074b 440FB604 		movzbl	(%rcx,%rax), %r8d
 3116      01
 518:fltk-1.3.4-1/png/pngrtran.c ****                   while ((int)png_ptr->quantize_sort[j] >= maximum_colors);
 3117              		.loc 1 518 0 discriminator 1
 3118 0750 83EF01   		subl	$1, %edi
 3119              	.LVL391:
 3120 0753 4C8D48FF 		leaq	-1(%rax), %r9
 519:fltk-1.3.4-1/png/pngrtran.c **** 
 3121              		.loc 1 519 0 discriminator 1
 3122 0757 4439C3   		cmpl	%r8d, %ebx
 3123 075a 7EEC     		jle	.L315
 522:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i] = tmp_color;
 3124              		.loc 1 522 0
 3125 075c 440FB71A 		movzwl	(%rdx), %r11d
 521:fltk-1.3.4-1/png/pngrtran.c ****                   palette[j] = palette[i];
 3126              		.loc 1 521 0
 3127 0760 488D0C40 		leaq	(%rax,%rax,2), %rcx
 3128 0764 4C01F1   		addq	%r14, %rcx
 3129 0767 440FB611 		movzbl	(%rcx), %r10d
 3130              	.LVL392:
 3131 076b 440FB649 		movzbl	1(%rcx), %r9d
 3131      01
 3132              	.LVL393:
 3133 0770 440FB641 		movzbl	2(%rcx), %r8d
 3133      02
 3134              	.LVL394:
 522:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i] = tmp_color;
 3135              		.loc 1 522 0
 3136 0775 66448919 		movw	%r11w, (%rcx)
 3137 0779 440FB65A 		movzbl	2(%rdx), %r11d
 3137      02
 3138 077e 44885902 		movb	%r11b, 2(%rcx)
 523:fltk-1.3.4-1/png/pngrtran.c ****                   /* Indicate where the color went */
 3139              		.loc 1 523 0
 3140 0782 448812   		movb	%r10b, (%rdx)
 3141 0785 44884A01 		movb	%r9b, 1(%rdx)
 3142 0789 44884202 		movb	%r8b, 2(%rdx)
 525:fltk-1.3.4-1/png/pngrtran.c ****                   png_ptr->quantize_index[i] = (png_byte)j;
 3143              		.loc 1 525 0
 3144 078d 498B8F90 		movq	912(%r15), %rcx
 3144      030000
 3145 0794 40883401 		movb	%sil, (%rcx,%rax)
 526:fltk-1.3.4-1/png/pngrtran.c ****                }
 3146              		.loc 1 526 0
 3147 0798 498B8790 		movq	912(%r15), %rax
 3147      030000
 3148 079f 40883C30 		movb	%dil, (%rax,%rsi)
 3149              	.LVL395:
 3150              	.L264:
 3151 07a3 4883C601 		addq	$1, %rsi
 3152              	.LVL396:
 3153 07a7 4883C203 		addq	$3, %rdx
 3154              	.LBE155:
 510:fltk-1.3.4-1/png/pngrtran.c ****             {
 3155              		.loc 1 510 0 discriminator 2
 3156 07ab 39F3     		cmpl	%esi, %ebx
 3157 07ad 0F8F76FF 		jg	.L332
 3157      FFFF
 3158              	.L267:
 3159              	.LVL397:
 531:fltk-1.3.4-1/png/pngrtran.c ****             {
 3160              		.loc 1 531 0
 3161 07b3 448B5C24 		movl	20(%rsp), %r11d
 3161      14
 3162 07b8 4531ED   		xorl	%r13d, %r13d
 3163 07bb 4585DB   		testl	%r11d, %r11d
 3164 07be 0F8EE000 		jle	.L373
 3164      0000
 3165              	.LVL398:
 3166              	.L331:
 533:fltk-1.3.4-1/png/pngrtran.c ****                {
 3167              		.loc 1 533 0
 3168 07c4 4D89E9   		movq	%r13, %r9
 3169 07c7 4D038F90 		addq	912(%r15), %r9
 3169      030000
 3170 07ce 410FB611 		movzbl	(%r9), %edx
 3171 07d2 39D3     		cmpl	%edx, %ebx
 3172 07d4 0F8FBB00 		jg	.L268
 3172      0000
 3173              	.LVL399:
 3174              	.LBB156:
 539:fltk-1.3.4-1/png/pngrtran.c ****                   for (k = 1, min_k = 0; k < maximum_colors; k++)
 3175              		.loc 1 539 0
 3176 07da 488D0452 		leaq	(%rdx,%rdx,2), %rax
 3177 07de 4C01F0   		addq	%r14, %rax
 3178 07e1 440FB610 		movzbl	(%rax), %r10d
 3179 07e5 440FB658 		movzbl	1(%rax), %r11d
 3179      01
 3180 07ea 0FB66802 		movzbl	2(%rax), %ebp
 3181 07ee 410FB606 		movzbl	(%r14), %eax
 3182 07f2 4489D6   		movl	%r10d, %esi
 3183 07f5 29C6     		subl	%eax, %esi
 3184 07f7 89F0     		movl	%esi, %eax
 3185 07f9 4489DE   		movl	%r11d, %esi
 3186 07fc 99       		cltd
 3187              	.LVL400:
 3188 07fd 31D0     		xorl	%edx, %eax
 3189 07ff 29D0     		subl	%edx, %eax
 3190 0801 89C1     		movl	%eax, %ecx
 3191 0803 410FB646 		movzbl	1(%r14), %eax
 3191      01
 3192 0808 29C6     		subl	%eax, %esi
 3193 080a 89F0     		movl	%esi, %eax
 3194 080c 89EE     		movl	%ebp, %esi
 3195 080e 99       		cltd
 3196 080f 31D0     		xorl	%edx, %eax
 3197 0811 29D0     		subl	%edx, %eax
 3198 0813 410FB656 		movzbl	2(%r14), %edx
 3198      02
 3199 0818 01C8     		addl	%ecx, %eax
 3200 081a 29D6     		subl	%edx, %esi
 3201 081c 89F2     		movl	%esi, %edx
 3202 081e C1FE1F   		sarl	$31, %esi
 3203 0821 31F2     		xorl	%esi, %edx
 3204 0823 89D1     		movl	%edx, %ecx
 3205 0825 29F1     		subl	%esi, %ecx
 3206 0827 01C1     		addl	%eax, %ecx
 3207              	.LVL401:
 540:fltk-1.3.4-1/png/pngrtran.c ****                   {
 3208              		.loc 1 540 0
 3209 0829 83FB01   		cmpl	$1, %ebx
 3210 082c 7E62     		jle	.L316
 3211 082e 498D7E03 		leaq	3(%r14), %rdi
 3212 0832 31F6     		xorl	%esi, %esi
 3213 0834 41B80100 		movl	$1, %r8d
 3213      0000
 3214              	.LVL402:
 3215              	.L271:
 3216              	.LBB157:
 544:fltk-1.3.4-1/png/pngrtran.c **** 
 3217              		.loc 1 544 0
 3218 083a 0FB607   		movzbl	(%rdi), %eax
 3219 083d 4489D2   		movl	%r10d, %edx
 3220 0840 29C2     		subl	%eax, %edx
 3221 0842 89D0     		movl	%edx, %eax
 3222 0844 99       		cltd
 3223 0845 31D0     		xorl	%edx, %eax
 3224 0847 4189C4   		movl	%eax, %r12d
 3225 084a 0FB64701 		movzbl	1(%rdi), %eax
 3226 084e 4129D4   		subl	%edx, %r12d
 3227 0851 4489DA   		movl	%r11d, %edx
 3228 0854 29C2     		subl	%eax, %edx
 3229 0856 89D0     		movl	%edx, %eax
 3230 0858 C1F81F   		sarl	$31, %eax
 3231 085b 31C2     		xorl	%eax, %edx
 3232 085d 29C2     		subl	%eax, %edx
 3233 085f 0FB64702 		movzbl	2(%rdi), %eax
 3234 0863 4101D4   		addl	%edx, %r12d
 3235 0866 89EA     		movl	%ebp, %edx
 3236 0868 29C2     		subl	%eax, %edx
 3237 086a 89D0     		movl	%edx, %eax
 3238 086c C1F81F   		sarl	$31, %eax
 3239 086f 31C2     		xorl	%eax, %edx
 3240 0871 29C2     		subl	%eax, %edx
 3241 0873 89D0     		movl	%edx, %eax
 3242 0875 4401E0   		addl	%r12d, %eax
 3243              	.LVL403:
 546:fltk-1.3.4-1/png/pngrtran.c ****                      {
 3244              		.loc 1 546 0
 3245 0878 39C1     		cmpl	%eax, %ecx
 3246 087a 7E05     		jle	.L270
 3247 087c 4489C6   		movl	%r8d, %esi
 3248              	.LVL404:
 3249 087f 89C1     		movl	%eax, %ecx
 3250              	.LVL405:
 3251              	.L270:
 3252              	.LBE157:
 540:fltk-1.3.4-1/png/pngrtran.c ****                   {
 3253              		.loc 1 540 0 discriminator 2
 3254 0881 4183C001 		addl	$1, %r8d
 3255              	.LVL406:
 3256 0885 4883C703 		addq	$3, %rdi
 3257 0889 4439C3   		cmpl	%r8d, %ebx
 3258 088c 75AC     		jne	.L271
 3259 088e EB02     		jmp	.L269
 3260              	.LVL407:
 3261              	.L316:
 540:fltk-1.3.4-1/png/pngrtran.c ****                   {
 3262              		.loc 1 540 0 is_stmt 0
 3263 0890 31F6     		xorl	%esi, %esi
 3264              	.LVL408:
 3265              	.L269:
 553:fltk-1.3.4-1/png/pngrtran.c ****                }
 3266              		.loc 1 553 0 is_stmt 1
 3267 0892 418831   		movb	%sil, (%r9)
 3268              	.LVL409:
 3269              	.L268:
 3270 0895 4983C501 		addq	$1, %r13
 3271              	.LVL410:
 3272              	.LBE156:
 531:fltk-1.3.4-1/png/pngrtran.c ****             {
 3273              		.loc 1 531 0 discriminator 2
 3274 0899 44396C24 		cmpl	%r13d, 20(%rsp)
 3274      14
 3275 089e 0F8F20FF 		jg	.L331
 3275      FFFF
 3276              	.L373:
 3277 08a4 498BB740 		movq	1088(%r15), %rsi
 3277      040000
 3278 08ab E9ABF9FF 		jmp	.L260
 3278      FF
 3279              	.LBE154:
 3280              	.LBE184:
 3281              		.cfi_endproc
 3282              	.LFE67:
 3284              		.section	.text.unlikely.png_set_quantize
 3285              	.LCOLDE27:
 3286              		.section	.text.png_set_quantize
 3287              	.LHOTE27:
 3288              		.section	.rodata.str1.8
 3289 0133 00000000 		.align 8
 3289      00
 3290              	.LC28:
 3291 0138 696E7661 		.string	"invalid file gamma in png_set_gamma"
 3291      6C696420 
 3291      66696C65 
 3291      2067616D 
 3291      6D612069 
 3292 015c 00000000 		.align 8
 3293              	.LC29:
 3294 0160 696E7661 		.string	"invalid screen gamma in png_set_gamma"
 3294      6C696420 
 3294      73637265 
 3294      656E2067 
 3294      616D6D61 
 3295              		.section	.text.unlikely.png_set_gamma_fixed,"ax",@progbits
 3296              	.LCOLDB30:
 3297              		.section	.text.png_set_gamma_fixed,"ax",@progbits
 3298              	.LHOTB30:
 3299              		.p2align 4,,15
 3300              		.globl	png_set_gamma_fixed
 3302              	png_set_gamma_fixed:
 3303              	.LFB68:
 803:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_gamma_fixed");
 3304              		.loc 1 803 0
 3305              		.cfi_startproc
 3306              	.LVL411:
 3307 0000 4154     		pushq	%r12
 3308              		.cfi_def_cfa_offset 16
 3309              		.cfi_offset 12, -16
 3310 0002 55       		pushq	%rbp
 3311              		.cfi_def_cfa_offset 24
 3312              		.cfi_offset 6, -24
 3313 0003 89F5     		movl	%esi, %ebp
 3314 0005 53       		pushq	%rbx
 3315              		.cfi_def_cfa_offset 32
 3316              		.cfi_offset 3, -32
 806:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3317              		.loc 1 806 0
 3318 0006 31F6     		xorl	%esi, %esi
 3319              	.LVL412:
 803:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_gamma_fixed");
 3320              		.loc 1 803 0
 3321 0008 4889FB   		movq	%rdi, %rbx
 3322 000b 4189D4   		movl	%edx, %r12d
 806:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3323              		.loc 1 806 0
 3324 000e E8000000 		call	png_rtran_ok
 3324      00
 3325              	.LVL413:
 3326 0013 85C0     		testl	%eax, %eax
 3327 0015 7454     		je	.L379
 3328              	.LVL414:
 3329              	.LBB195:
 3330              	.LBB196:
 3331              	.LBB197:
 3332              	.LBB198:
 219:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_DEFAULT_sRGB)
 3333              		.loc 1 219 0
 3334 0017 83FDFF   		cmpl	$-1, %ebp
 3335 001a 7408     		je	.L391
 3336 001c 81FD6079 		cmpl	$-100000, %ebp
 3336      FEFF
 3337 0022 754C     		jne	.L381
 3338              	.L391:
 226:fltk-1.3.4-1/png/pngrtran.c **** #     else
 3339              		.loc 1 226 0
 3340 0024 818B3001 		orl	$4096, 304(%rbx)
 3340      00000010 
 3340      0000
 231:fltk-1.3.4-1/png/pngrtran.c ****       else
 3341              		.loc 1 231 0
 3342 002e BD605B03 		movl	$220000, %ebp
 3342      00
 3343              	.LVL415:
 3344              	.L383:
 3345              	.LBE198:
 3346              	.LBE197:
 3347              	.LBB202:
 3348              	.LBB203:
 219:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_DEFAULT_sRGB)
 3349              		.loc 1 219 0
 3350 0033 4183FCFF 		cmpl	$-1, %r12d
 3351 0037 7409     		je	.L393
 3352 0039 4181FC60 		cmpl	$-100000, %r12d
 3352      79FEFF
 3353 0040 7546     		jne	.L385
 3354              	.L393:
 226:fltk-1.3.4-1/png/pngrtran.c **** #     else
 3355              		.loc 1 226 0
 3356 0042 818B3001 		orl	$4096, 304(%rbx)
 3356      00000010 
 3356      0000
 3357              	.LVL416:
 233:fltk-1.3.4-1/png/pngrtran.c ****    }
 3358              		.loc 1 233 0
 3359 004c 41BC8FB1 		movl	$45455, %r12d
 3359      0000
 3360              	.LVL417:
 3361              	.L388:
 3362              	.LBE203:
 3363              	.LBE202:
 827:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "invalid screen gamma in png_set_gamma");
 3364              		.loc 1 827 0
 3365 0052 85ED     		testl	%ebp, %ebp
 3366 0054 7E62     		jle	.L401
 835:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->screen_gamma = scrn_gamma;
 3367              		.loc 1 835 0
 3368 0056 66838B22 		orw	$1, 1314(%rbx)
 3368      05000001 
 834:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->colorspace.flags |= PNG_COLORSPACE_HAVE_GAMMA;
 3369              		.loc 1 834 0
 3370 005e 4489A3D8 		movl	%r12d, 1240(%rbx)
 3370      040000
 836:fltk-1.3.4-1/png/pngrtran.c **** }
 3371              		.loc 1 836 0
 3372 0065 89ABB402 		movl	%ebp, 692(%rbx)
 3372      0000
 3373              	.LVL418:
 3374              	.L379:
 3375              	.LBE196:
 3376              	.LBE195:
 837:fltk-1.3.4-1/png/pngrtran.c **** 
 3377              		.loc 1 837 0
 3378 006b 5B       		popq	%rbx
 3379              		.cfi_remember_state
 3380              		.cfi_def_cfa_offset 24
 3381              	.LVL419:
 3382 006c 5D       		popq	%rbp
 3383              		.cfi_def_cfa_offset 16
 3384 006d 415C     		popq	%r12
 3385              		.cfi_def_cfa_offset 8
 3386 006f C3       		ret
 3387              	.LVL420:
 3388              		.p2align 4,,10
 3389              		.p2align 3
 3390              	.L381:
 3391              		.cfi_restore_state
 3392              	.LBB214:
 3393              	.LBB213:
 3394              	.LBB210:
 3395              	.LBB201:
 3396              	.LBB199:
 3397              	.LBB200:
 236:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_GAMMA_MAC_18)
 3398              		.loc 1 236 0
 3399 0070 83FDFE   		cmpl	$-2, %ebp
 3400 0073 7408     		je	.L392
 3401 0075 81FDB03C 		cmpl	$-50000, %ebp
 3401      FFFF
 3402 007b 75B6     		jne	.L383
 3403              	.L392:
 240:fltk-1.3.4-1/png/pngrtran.c ****       else
 3404              		.loc 1 240 0
 3405 007d BDAC5002 		movl	$151724, %ebp
 3405      00
 3406              	.LVL421:
 3407 0082 EBAF     		jmp	.L383
 3408              	.LVL422:
 3409              		.p2align 4,,10
 3410 0084 0F1F4000 		.p2align 3
 3411              	.L385:
 3412              	.LBE200:
 3413              	.LBE199:
 3414              	.LBE201:
 3415              	.LBE210:
 3416              	.LBB211:
 3417              	.LBB208:
 3418              	.LBB204:
 3419              	.LBB205:
 236:fltk-1.3.4-1/png/pngrtran.c ****       output_gamma == PNG_FP_1 / PNG_GAMMA_MAC_18)
 3420              		.loc 1 236 0
 3421 0088 4183FCFE 		cmpl	$-2, %r12d
 3422 008c 7422     		je	.L390
 3423 008e 4181FCB0 		cmpl	$-50000, %r12d
 3423      3CFFFF
 3424 0095 7419     		je	.L390
 3425              	.LVL423:
 3426              	.LBE205:
 3427              	.LBE204:
 3428              	.LBE208:
 3429              	.LBE211:
 824:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "invalid file gamma in png_set_gamma");
 3430              		.loc 1 824 0
 3431 0097 4585E4   		testl	%r12d, %r12d
 3432 009a 7FB6     		jg	.L388
 825:fltk-1.3.4-1/png/pngrtran.c **** 
 3433              		.loc 1 825 0
 3434 009c BE000000 		movl	$.LC28, %esi
 3434      00
 3435 00a1 4889DF   		movq	%rbx, %rdi
 3436 00a4 E8000000 		call	png_error
 3436      00
 3437              	.LVL424:
 3438 00a9 0F1F8000 		.p2align 4,,10
 3438      000000
 3439              		.p2align 3
 3440              	.L390:
 3441              	.LBB212:
 3442              	.LBB209:
 3443              	.LBB207:
 3444              	.LBB206:
 242:fltk-1.3.4-1/png/pngrtran.c ****    }
 3445              		.loc 1 242 0
 3446 00b0 41BC7501 		movl	$65909, %r12d
 3446      0100
 3447              	.LVL425:
 3448 00b6 EB9A     		jmp	.L388
 3449              	.LVL426:
 3450              	.L401:
 3451              	.LBE206:
 3452              	.LBE207:
 3453              	.LBE209:
 3454              	.LBE212:
 828:fltk-1.3.4-1/png/pngrtran.c **** 
 3455              		.loc 1 828 0
 3456 00b8 BE000000 		movl	$.LC29, %esi
 3456      00
 3457 00bd 4889DF   		movq	%rbx, %rdi
 3458 00c0 E8000000 		call	png_error
 3458      00
 3459              	.LVL427:
 3460              	.LBE213:
 3461              	.LBE214:
 3462              		.cfi_endproc
 3463              	.LFE68:
 3465              		.section	.text.unlikely.png_set_gamma_fixed
 3466              	.LCOLDE30:
 3467              		.section	.text.png_set_gamma_fixed
 3468              	.LHOTE30:
 3469              		.section	.text.unlikely.png_set_gamma,"ax",@progbits
 3470              	.LCOLDB31:
 3471              		.section	.text.png_set_gamma,"ax",@progbits
 3472              	.LHOTB31:
 3473              		.p2align 4,,15
 3474              		.globl	png_set_gamma
 3476              	png_set_gamma:
 3477              	.LFB69:
 842:fltk-1.3.4-1/png/pngrtran.c ****    png_set_gamma_fixed(png_ptr, convert_gamma_value(png_ptr, scrn_gamma),
 3478              		.loc 1 842 0
 3479              		.cfi_startproc
 3480              	.LVL428:
 3481 0000 55       		pushq	%rbp
 3482              		.cfi_def_cfa_offset 16
 3483              		.cfi_offset 6, -16
 3484 0001 53       		pushq	%rbx
 3485              		.cfi_def_cfa_offset 24
 3486              		.cfi_offset 3, -24
 3487 0002 4889FB   		movq	%rdi, %rbx
 3488 0005 4883EC18 		subq	$24, %rsp
 3489              		.cfi_def_cfa_offset 48
 842:fltk-1.3.4-1/png/pngrtran.c ****    png_set_gamma_fixed(png_ptr, convert_gamma_value(png_ptr, scrn_gamma),
 3490              		.loc 1 842 0
 3491 0009 F20F1144 		movsd	%xmm0, 8(%rsp)
 3491      2408
 843:fltk-1.3.4-1/png/pngrtran.c ****       convert_gamma_value(png_ptr, file_gamma));
 3492              		.loc 1 843 0
 3493 000f 660F28C1 		movapd	%xmm1, %xmm0
 3494              	.LVL429:
 3495 0013 E8000000 		call	convert_gamma_value
 3495      00
 3496              	.LVL430:
 3497 0018 F20F1054 		movsd	8(%rsp), %xmm2
 3497      2408
 3498 001e 4889DF   		movq	%rbx, %rdi
 3499 0021 89C5     		movl	%eax, %ebp
 3500 0023 660F28C2 		movapd	%xmm2, %xmm0
 3501 0027 E8000000 		call	convert_gamma_value
 3501      00
 3502              	.LVL431:
 845:fltk-1.3.4-1/png/pngrtran.c **** #  endif /* FLOATING_POINT */
 3503              		.loc 1 845 0
 3504 002c 4883C418 		addq	$24, %rsp
 3505              		.cfi_def_cfa_offset 24
 843:fltk-1.3.4-1/png/pngrtran.c ****       convert_gamma_value(png_ptr, file_gamma));
 3506              		.loc 1 843 0
 3507 0030 89EA     		movl	%ebp, %edx
 3508 0032 4889DF   		movq	%rbx, %rdi
 845:fltk-1.3.4-1/png/pngrtran.c **** #  endif /* FLOATING_POINT */
 3509              		.loc 1 845 0
 3510 0035 5B       		popq	%rbx
 3511              		.cfi_def_cfa_offset 16
 3512              	.LVL432:
 3513 0036 5D       		popq	%rbp
 3514              		.cfi_def_cfa_offset 8
 843:fltk-1.3.4-1/png/pngrtran.c ****       convert_gamma_value(png_ptr, file_gamma));
 3515              		.loc 1 843 0
 3516 0037 89C6     		movl	%eax, %esi
 3517 0039 E9000000 		jmp	png_set_gamma_fixed
 3517      00
 3518              	.LVL433:
 3519              		.cfi_endproc
 3520              	.LFE69:
 3522              		.section	.text.unlikely.png_set_gamma
 3523              	.LCOLDE31:
 3524              		.section	.text.png_set_gamma
 3525              	.LHOTE31:
 3526              		.section	.text.unlikely.png_set_expand_gray_1_2_4_to_8,"ax",@progbits
 3527              	.LCOLDB32:
 3528              		.section	.text.png_set_expand_gray_1_2_4_to_8,"ax",@progbits
 3529              	.LHOTB32:
 3530              		.p2align 4,,15
 3531              		.globl	png_set_expand_gray_1_2_4_to_8
 3533              	png_set_expand_gray_1_2_4_to_8:
 3534              	.LFB72:
 898:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand_gray_1_2_4_to_8");
 3535              		.loc 1 898 0
 3536              		.cfi_startproc
 3537              	.LVL434:
 3538 0000 53       		pushq	%rbx
 3539              		.cfi_def_cfa_offset 16
 3540              		.cfi_offset 3, -16
 901:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3541              		.loc 1 901 0
 3542 0001 31F6     		xorl	%esi, %esi
 898:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand_gray_1_2_4_to_8");
 3543              		.loc 1 898 0
 3544 0003 4889FB   		movq	%rdi, %rbx
 901:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3545              		.loc 1 901 0
 3546 0006 E8000000 		call	png_rtran_ok
 3546      00
 3547              	.LVL435:
 3548 000b 85C0     		testl	%eax, %eax
 3549 000d 740A     		je	.L404
 904:fltk-1.3.4-1/png/pngrtran.c **** }
 3550              		.loc 1 904 0
 3551 000f 818B3401 		orl	$4096, 308(%rbx)
 3551      00000010 
 3551      0000
 3552              	.L404:
 905:fltk-1.3.4-1/png/pngrtran.c **** 
 3553              		.loc 1 905 0
 3554 0019 5B       		popq	%rbx
 3555              		.cfi_def_cfa_offset 8
 3556              	.LVL436:
 3557 001a C3       		ret
 3558              		.cfi_endproc
 3559              	.LFE72:
 3561              		.section	.text.unlikely.png_set_expand_gray_1_2_4_to_8
 3562              	.LCOLDE32:
 3563              		.section	.text.png_set_expand_gray_1_2_4_to_8
 3564              	.LHOTE32:
 3565              		.section	.text.unlikely.png_set_tRNS_to_alpha,"ax",@progbits
 3566              	.LCOLDB33:
 3567              		.section	.text.png_set_tRNS_to_alpha,"ax",@progbits
 3568              	.LHOTB33:
 3569              		.p2align 4,,15
 3570              		.globl	png_set_tRNS_to_alpha
 3572              	png_set_tRNS_to_alpha:
 3573              	.LFB73:
 910:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_tRNS_to_alpha");
 3574              		.loc 1 910 0
 3575              		.cfi_startproc
 3576              	.LVL437:
 3577 0000 53       		pushq	%rbx
 3578              		.cfi_def_cfa_offset 16
 3579              		.cfi_offset 3, -16
 913:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3580              		.loc 1 913 0
 3581 0001 31F6     		xorl	%esi, %esi
 910:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_tRNS_to_alpha");
 3582              		.loc 1 910 0
 3583 0003 4889FB   		movq	%rdi, %rbx
 913:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3584              		.loc 1 913 0
 3585 0006 E8000000 		call	png_rtran_ok
 3585      00
 3586              	.LVL438:
 3587 000b 85C0     		testl	%eax, %eax
 3588 000d 740A     		je	.L410
 916:fltk-1.3.4-1/png/pngrtran.c **** }
 3589              		.loc 1 916 0
 3590 000f 818B3401 		orl	$33558528, 308(%rbx)
 3590      00000010 
 3590      0002
 3591              	.L410:
 917:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_EXPAND */
 3592              		.loc 1 917 0
 3593 0019 5B       		popq	%rbx
 3594              		.cfi_def_cfa_offset 8
 3595              	.LVL439:
 3596 001a C3       		ret
 3597              		.cfi_endproc
 3598              	.LFE73:
 3600              		.section	.text.unlikely.png_set_tRNS_to_alpha
 3601              	.LCOLDE33:
 3602              		.section	.text.png_set_tRNS_to_alpha
 3603              	.LHOTE33:
 3604              		.section	.text.unlikely.png_set_palette_to_rgb,"ax",@progbits
 3605              	.LCOLDB34:
 3606              		.section	.text.png_set_palette_to_rgb,"ax",@progbits
 3607              	.LHOTB34:
 3608              		.p2align 4,,15
 3609              		.globl	png_set_palette_to_rgb
 3611              	png_set_palette_to_rgb:
 3612              	.LFB111:
 3613              		.cfi_startproc
 3614 0000 E9000000 		jmp	png_set_tRNS_to_alpha
 3614      00
 3615              		.cfi_endproc
 3616              	.LFE111:
 3618              		.section	.text.unlikely.png_set_palette_to_rgb
 3619              	.LCOLDE34:
 3620              		.section	.text.png_set_palette_to_rgb
 3621              	.LHOTE34:
 3622              		.section	.text.unlikely.png_set_expand,"ax",@progbits
 3623              	.LCOLDB35:
 3624              		.section	.text.png_set_expand,"ax",@progbits
 3625              	.LHOTB35:
 3626              		.p2align 4,,15
 3627              		.globl	png_set_expand
 3629              	png_set_expand:
 3630              	.LFB113:
 3631              		.cfi_startproc
 3632 0000 E9000000 		jmp	png_set_tRNS_to_alpha
 3632      00
 3633              		.cfi_endproc
 3634              	.LFE113:
 3636              		.section	.text.unlikely.png_set_expand
 3637              	.LCOLDE35:
 3638              		.section	.text.png_set_expand
 3639              	.LHOTE35:
 3640              		.section	.text.unlikely.png_set_expand_16,"ax",@progbits
 3641              	.LCOLDB36:
 3642              		.section	.text.png_set_expand_16,"ax",@progbits
 3643              	.LHOTB36:
 3644              		.p2align 4,,15
 3645              		.globl	png_set_expand_16
 3647              	png_set_expand_16:
 3648              	.LFB74:
 926:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand_16");
 3649              		.loc 1 926 0
 3650              		.cfi_startproc
 3651              	.LVL440:
 926:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand_16");
 3652              		.loc 1 926 0
 3653 0000 53       		pushq	%rbx
 3654              		.cfi_def_cfa_offset 16
 3655              		.cfi_offset 3, -16
 929:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3656              		.loc 1 929 0
 3657 0001 31F6     		xorl	%esi, %esi
 926:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_expand_16");
 3658              		.loc 1 926 0
 3659 0003 4889FB   		movq	%rdi, %rbx
 929:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3660              		.loc 1 929 0
 3661 0006 E8000000 		call	png_rtran_ok
 3661      00
 3662              	.LVL441:
 3663 000b 85C0     		testl	%eax, %eax
 3664 000d 740A     		je	.L418
 932:fltk-1.3.4-1/png/pngrtran.c **** }
 3665              		.loc 1 932 0
 3666 000f 818B3401 		orl	$33559040, 308(%rbx)
 3666      00000012 
 3666      0002
 3667              	.L418:
 933:fltk-1.3.4-1/png/pngrtran.c **** #endif
 3668              		.loc 1 933 0
 3669 0019 5B       		popq	%rbx
 3670              		.cfi_def_cfa_offset 8
 3671              	.LVL442:
 3672 001a C3       		ret
 3673              		.cfi_endproc
 3674              	.LFE74:
 3676              		.section	.text.unlikely.png_set_expand_16
 3677              	.LCOLDE36:
 3678              		.section	.text.png_set_expand_16
 3679              	.LHOTE36:
 3680              		.section	.text.unlikely.png_set_gray_to_rgb,"ax",@progbits
 3681              	.LCOLDB37:
 3682              		.section	.text.png_set_gray_to_rgb,"ax",@progbits
 3683              	.LHOTB37:
 3684              		.p2align 4,,15
 3685              		.globl	png_set_gray_to_rgb
 3687              	png_set_gray_to_rgb:
 3688              	.LFB75:
 939:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_gray_to_rgb");
 3689              		.loc 1 939 0
 3690              		.cfi_startproc
 3691              	.LVL443:
 3692 0000 53       		pushq	%rbx
 3693              		.cfi_def_cfa_offset 16
 3694              		.cfi_offset 3, -16
 942:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3695              		.loc 1 942 0
 3696 0001 31F6     		xorl	%esi, %esi
 939:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_gray_to_rgb");
 3697              		.loc 1 939 0
 3698 0003 4889FB   		movq	%rdi, %rbx
 942:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3699              		.loc 1 942 0
 3700 0006 E8000000 		call	png_rtran_ok
 3700      00
 3701              	.LVL444:
 3702 000b 85C0     		testl	%eax, %eax
 3703 000d 7509     		jne	.L432
 948:fltk-1.3.4-1/png/pngrtran.c **** #endif
 3704              		.loc 1 948 0
 3705 000f 5B       		popq	%rbx
 3706              		.cfi_remember_state
 3707              		.cfi_def_cfa_offset 8
 3708              	.LVL445:
 3709 0010 C3       		ret
 3710              	.LVL446:
 3711              		.p2align 4,,10
 3712 0011 0F1F8000 		.p2align 3
 3712      000000
 3713              	.L432:
 3714              		.cfi_restore_state
 3715              	.LBB215:
 3716              	.LBB216:
 901:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3717              		.loc 1 901 0
 3718 0018 31F6     		xorl	%esi, %esi
 3719 001a 4889DF   		movq	%rbx, %rdi
 3720 001d E8000000 		call	png_rtran_ok
 3720      00
 3721              	.LVL447:
 3722 0022 85C0     		testl	%eax, %eax
 3723 0024 8B833401 		movl	308(%rbx), %eax
 3723      0000
 3724 002a 7514     		jne	.L433
 3725              	.LVL448:
 3726              	.LBE216:
 3727              	.LBE215:
 947:fltk-1.3.4-1/png/pngrtran.c **** }
 3728              		.loc 1 947 0
 3729 002c 80CC40   		orb	$64, %ah
 3730 002f 89833401 		movl	%eax, 308(%rbx)
 3730      0000
 3731              	.L434:
 948:fltk-1.3.4-1/png/pngrtran.c **** #endif
 3732              		.loc 1 948 0
 3733 0035 5B       		popq	%rbx
 3734              		.cfi_remember_state
 3735              		.cfi_def_cfa_offset 8
 3736              	.LVL449:
 3737 0036 C3       		ret
 3738              	.LVL450:
 3739 0037 660F1F84 		.p2align 4,,10
 3739      00000000 
 3739      00
 3740              		.p2align 3
 3741              	.L433:
 3742              		.cfi_restore_state
 3743              	.LBB218:
 3744              	.LBB217:
 904:fltk-1.3.4-1/png/pngrtran.c **** }
 3745              		.loc 1 904 0
 3746 0040 80CC10   		orb	$16, %ah
 3747              	.LVL451:
 3748              	.LBE217:
 3749              	.LBE218:
 947:fltk-1.3.4-1/png/pngrtran.c **** }
 3750              		.loc 1 947 0
 3751 0043 80CC40   		orb	$64, %ah
 3752 0046 89833401 		movl	%eax, 308(%rbx)
 3752      0000
 3753 004c EBE7     		jmp	.L434
 3754              		.cfi_endproc
 3755              	.LFE75:
 3757              		.section	.text.unlikely.png_set_gray_to_rgb
 3758              	.LCOLDE37:
 3759              		.section	.text.png_set_gray_to_rgb
 3760              	.LHOTE37:
 3761              		.section	.rodata.str1.8
 3762 0186 0000     		.align 8
 3763              	.LC38:
 3764 0188 696E7661 		.string	"invalid error action to rgb_to_gray"
 3764      6C696420 
 3764      6572726F 
 3764      72206163 
 3764      74696F6E 
 3765 01ac 00000000 		.align 8
 3766              	.LC39:
 3767 01b0 69676E6F 		.string	"ignoring out of range rgb_to_gray coefficients"
 3767      72696E67 
 3767      206F7574 
 3767      206F6620 
 3767      72616E67 
 3768              		.section	.text.unlikely.png_set_rgb_to_gray_fixed,"ax",@progbits
 3769              	.LCOLDB40:
 3770              		.section	.text.png_set_rgb_to_gray_fixed,"ax",@progbits
 3771              	.LHOTB40:
 3772              		.p2align 4,,15
 3773              		.globl	png_set_rgb_to_gray_fixed
 3775              	png_set_rgb_to_gray_fixed:
 3776              	.LFB76:
 955:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_rgb_to_gray");
 3777              		.loc 1 955 0
 3778              		.cfi_startproc
 3779              	.LVL452:
 3780 0000 4155     		pushq	%r13
 3781              		.cfi_def_cfa_offset 16
 3782              		.cfi_offset 13, -16
 3783 0002 4154     		pushq	%r12
 3784              		.cfi_def_cfa_offset 24
 3785              		.cfi_offset 12, -24
 3786 0004 4189F5   		movl	%esi, %r13d
 3787 0007 55       		pushq	%rbp
 3788              		.cfi_def_cfa_offset 32
 3789              		.cfi_offset 6, -32
 3790 0008 53       		pushq	%rbx
 3791              		.cfi_def_cfa_offset 40
 3792              		.cfi_offset 3, -40
 960:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3793              		.loc 1 960 0
 3794 0009 BE010000 		movl	$1, %esi
 3794      00
 3795              	.LVL453:
 955:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_rgb_to_gray");
 3796              		.loc 1 955 0
 3797 000e 4889FB   		movq	%rdi, %rbx
 3798 0011 89D5     		movl	%edx, %ebp
 3799 0013 4189CC   		movl	%ecx, %r12d
 3800 0016 4883EC08 		subq	$8, %rsp
 3801              		.cfi_def_cfa_offset 48
 960:fltk-1.3.4-1/png/pngrtran.c ****       return;
 3802              		.loc 1 960 0
 3803 001a E8000000 		call	png_rtran_ok
 3803      00
 3804              	.LVL454:
 3805 001f 85C0     		testl	%eax, %eax
 3806 0021 0F848900 		je	.L435
 3806      0000
 963:fltk-1.3.4-1/png/pngrtran.c ****    {
 3807              		.loc 1 963 0
 3808 0027 4183FD02 		cmpl	$2, %r13d
 3809 002b 7423     		je	.L439
 3810 002d 4183FD03 		cmpl	$3, %r13d
 3811 0031 0F84A900 		je	.L440
 3811      0000
 3812 0037 4183FD01 		cmpl	$1, %r13d
 3813 003b 0F847F00 		je	.L449
 3813      0000
 978:fltk-1.3.4-1/png/pngrtran.c ****          break;
 3814              		.loc 1 978 0
 3815 0041 BE000000 		movl	$.LC38, %esi
 3815      00
 3816 0046 4889DF   		movq	%rbx, %rdi
 3817 0049 E8000000 		call	png_error
 3817      00
 3818              	.LVL455:
 3819 004e 6690     		.p2align 4,,10
 3820              		.p2align 3
 3821              	.L439:
 970:fltk-1.3.4-1/png/pngrtran.c ****          break;
 3822              		.loc 1 970 0
 3823 0050 818B3401 		orl	$4194304, 308(%rbx)
 3823      00000000 
 3823      4000
 3824              	.L442:
 3825              	.LVL456:
 3826              	.LBB222:
 3827              	.LBB223:
 982:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
 3828              		.loc 1 982 0
 3829 005a 80BB7702 		cmpb	$3, 631(%rbx)
 3829      000003
 3830 0061 7470     		je	.L450
 3831              	.L443:
 997:fltk-1.3.4-1/png/pngrtran.c ****       {
 3832              		.loc 1 997 0
 3833 0063 85ED     		testl	%ebp, %ebp
 3834 0065 781E     		js	.L444
 3835 0067 4585E4   		testl	%r12d, %r12d
 3836 006a 7819     		js	.L444
 3837 006c 428D4425 		leal	0(%rbp,%r12), %eax
 3837      00
 3838 0071 3DA08601 		cmpl	$100000, %eax
 3838      00
 3839 0076 7E78     		jle	.L451
1017:fltk-1.3.4-1/png/pngrtran.c ****                "ignoring out of range rgb_to_gray coefficients");
 3840              		.loc 1 1017 0
 3841 0078 BE000000 		movl	$.LC39, %esi
 3841      00
 3842 007d 4889DF   		movq	%rbx, %rdi
 3843 0080 E8000000 		call	png_app_warning
 3843      00
 3844              	.LVL457:
 3845              	.L444:
1026:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->rgb_to_gray_green_coeff == 0)
 3846              		.loc 1 1026 0
 3847 0085 48B80000 		movabsq	$281474976645120, %rax
 3847      FFFFFFFF 
 3847      0000
 3848 008f 48858310 		testq	%rax, 1040(%rbx)
 3848      040000
 3849 0096 7518     		jne	.L435
1029:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->rgb_to_gray_green_coeff = 23434;
 3850              		.loc 1 1029 0
 3851 0098 B8381B00 		movl	$6968, %eax
 3851      00
1030:fltk-1.3.4-1/png/pngrtran.c ****             /* png_ptr->rgb_to_gray_blue_coeff  = 2366; */
 3852              		.loc 1 1030 0
 3853 009d BA8A5B00 		movl	$23434, %edx
 3853      00
1029:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->rgb_to_gray_green_coeff = 23434;
 3854              		.loc 1 1029 0
 3855 00a2 66898312 		movw	%ax, 1042(%rbx)
 3855      040000
1030:fltk-1.3.4-1/png/pngrtran.c ****             /* png_ptr->rgb_to_gray_blue_coeff  = 2366; */
 3856              		.loc 1 1030 0
 3857 00a9 66899314 		movw	%dx, 1044(%rbx)
 3857      040000
 3858              	.LVL458:
 3859              	.L435:
 3860              	.LBE223:
 3861              	.LBE222:
1035:fltk-1.3.4-1/png/pngrtran.c **** 
 3862              		.loc 1 1035 0
 3863 00b0 4883C408 		addq	$8, %rsp
 3864              		.cfi_remember_state
 3865              		.cfi_def_cfa_offset 40
 3866 00b4 5B       		popq	%rbx
 3867              		.cfi_def_cfa_offset 32
 3868              	.LVL459:
 3869 00b5 5D       		popq	%rbp
 3870              		.cfi_def_cfa_offset 24
 3871 00b6 415C     		popq	%r12
 3872              		.cfi_def_cfa_offset 16
 3873 00b8 415D     		popq	%r13
 3874              		.cfi_def_cfa_offset 8
 3875              	.LVL460:
 3876 00ba C3       		ret
 3877              	.LVL461:
 3878 00bb 0F1F4400 		.p2align 4,,10
 3878      00
 3879              		.p2align 3
 3880              	.L449:
 3881              		.cfi_restore_state
 966:fltk-1.3.4-1/png/pngrtran.c ****          break;
 3882              		.loc 1 966 0
 3883 00c0 818B3401 		orl	$6291456, 308(%rbx)
 3883      00000000 
 3883      6000
 3884              	.LVL462:
 3885              	.LBB227:
 3886              	.LBB225:
 982:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
 3887              		.loc 1 982 0
 3888 00ca 80BB7702 		cmpb	$3, 631(%rbx)
 3888      000003
 3889 00d1 7590     		jne	.L443
 3890              	.L450:
 984:fltk-1.3.4-1/png/pngrtran.c **** #else
 3891              		.loc 1 984 0
 3892 00d3 818B3401 		orl	$4096, 308(%rbx)
 3892      00000010 
 3892      0000
 3893 00dd EB84     		jmp	.L443
 3894              	.LVL463:
 3895 00df 90       		.p2align 4,,10
 3896              		.p2align 3
 3897              	.L440:
 3898              	.LBE225:
 3899              	.LBE227:
 974:fltk-1.3.4-1/png/pngrtran.c ****          break;
 3900              		.loc 1 974 0
 3901 00e0 818B3401 		orl	$2097152, 308(%rbx)
 3901      00000000 
 3901      2000
 975:fltk-1.3.4-1/png/pngrtran.c **** 
 3902              		.loc 1 975 0
 3903 00ea E96BFFFF 		jmp	.L442
 3903      FF
 3904              	.LVL464:
 3905 00ef 90       		.p2align 4,,10
 3906              		.p2align 3
 3907              	.L451:
 3908              	.LBB228:
 3909              	.LBB226:
 3910              	.LBB224:
1009:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_green_coeff = green_int;
 3911              		.loc 1 1009 0
 3912 00f0 C1E50F   		sall	$15, %ebp
 3913              	.LVL465:
 3914 00f3 B9C55A7C 		movl	$175921861, %ecx
 3914      0A
1010:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_coefficients_set = 1;
 3915              		.loc 1 1010 0
 3916 00f8 41C1E40F 		sall	$15, %r12d
 3917              	.LVL466:
1009:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_green_coeff = green_int;
 3918              		.loc 1 1009 0
 3919 00fc C1ED05   		shrl	$5, %ebp
1010:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_coefficients_set = 1;
 3920              		.loc 1 1010 0
 3921 00ff 41C1EC05 		shrl	$5, %r12d
1011:fltk-1.3.4-1/png/pngrtran.c ****       }
 3922              		.loc 1 1011 0
 3923 0103 C6831104 		movb	$1, 1041(%rbx)
 3923      000001
1009:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_green_coeff = green_int;
 3924              		.loc 1 1009 0
 3925 010a 89E8     		movl	%ebp, %eax
 3926 010c F7E1     		mull	%ecx
1010:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_coefficients_set = 1;
 3927              		.loc 1 1010 0
 3928 010e 4489E0   		movl	%r12d, %eax
1009:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_green_coeff = green_int;
 3929              		.loc 1 1009 0
 3930 0111 C1EA07   		shrl	$7, %edx
 3931 0114 66899312 		movw	%dx, 1042(%rbx)
 3931      040000
1010:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_coefficients_set = 1;
 3932              		.loc 1 1010 0
 3933 011b F7E1     		mull	%ecx
 3934 011d C1EA07   		shrl	$7, %edx
 3935 0120 66899314 		movw	%dx, 1044(%rbx)
 3935      040000
 3936 0127 EB87     		jmp	.L435
 3937              	.LBE224:
 3938              	.LBE226:
 3939              	.LBE228:
 3940              		.cfi_endproc
 3941              	.LFE76:
 3943              		.section	.text.unlikely.png_set_rgb_to_gray_fixed
 3944              	.LCOLDE40:
 3945              		.section	.text.png_set_rgb_to_gray_fixed
 3946              	.LHOTE40:
 3947              		.section	.rodata.str1.1
 3948              	.LC41:
 3949 0032 72676220 		.string	"rgb to gray green coefficient"
 3949      746F2067 
 3949      72617920 
 3949      67726565 
 3949      6E20636F 
 3950              	.LC42:
 3951 0050 72676220 		.string	"rgb to gray red coefficient"
 3951      746F2067 
 3951      72617920 
 3951      72656420 
 3951      636F6566 
 3952              		.section	.text.unlikely.png_set_rgb_to_gray,"ax",@progbits
 3953              	.LCOLDB43:
 3954              		.section	.text.png_set_rgb_to_gray,"ax",@progbits
 3955              	.LHOTB43:
 3956              		.p2align 4,,15
 3957              		.globl	png_set_rgb_to_gray
 3959              	png_set_rgb_to_gray:
 3960              	.LFB77:
1045:fltk-1.3.4-1/png/pngrtran.c ****    png_set_rgb_to_gray_fixed(png_ptr, error_action,
 3961              		.loc 1 1045 0
 3962              		.cfi_startproc
 3963              	.LVL467:
 3964 0000 4154     		pushq	%r12
 3965              		.cfi_def_cfa_offset 16
 3966              		.cfi_offset 12, -16
 3967 0002 55       		pushq	%rbp
 3968              		.cfi_def_cfa_offset 24
 3969              		.cfi_offset 6, -24
 3970 0003 89F5     		movl	%esi, %ebp
 3971 0005 53       		pushq	%rbx
 3972              		.cfi_def_cfa_offset 32
 3973              		.cfi_offset 3, -32
1046:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed(png_ptr, red, "rgb to gray red coefficient"),
 3974              		.loc 1 1046 0
 3975 0006 BE000000 		movl	$.LC41, %esi
 3975      00
 3976              	.LVL468:
1045:fltk-1.3.4-1/png/pngrtran.c ****    png_set_rgb_to_gray_fixed(png_ptr, error_action,
 3977              		.loc 1 1045 0
 3978 000b 4889FB   		movq	%rdi, %rbx
 3979 000e 4883EC10 		subq	$16, %rsp
 3980              		.cfi_def_cfa_offset 48
1045:fltk-1.3.4-1/png/pngrtran.c ****    png_set_rgb_to_gray_fixed(png_ptr, error_action,
 3981              		.loc 1 1045 0
 3982 0012 F20F1144 		movsd	%xmm0, 8(%rsp)
 3982      2408
1046:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed(png_ptr, red, "rgb to gray red coefficient"),
 3983              		.loc 1 1046 0
 3984 0018 660F28C1 		movapd	%xmm1, %xmm0
 3985              	.LVL469:
 3986 001c E8000000 		call	png_fixed
 3986      00
 3987              	.LVL470:
 3988 0021 F20F1054 		movsd	8(%rsp), %xmm2
 3988      2408
 3989 0027 4889DF   		movq	%rbx, %rdi
 3990 002a BE000000 		movl	$.LC42, %esi
 3990      00
 3991 002f 4189C4   		movl	%eax, %r12d
 3992 0032 660F28C2 		movapd	%xmm2, %xmm0
 3993 0036 E8000000 		call	png_fixed
 3993      00
 3994              	.LVL471:
1049:fltk-1.3.4-1/png/pngrtran.c **** #endif /* FLOATING POINT */
 3995              		.loc 1 1049 0
 3996 003b 4883C410 		addq	$16, %rsp
 3997              		.cfi_def_cfa_offset 32
1046:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed(png_ptr, red, "rgb to gray red coefficient"),
 3998              		.loc 1 1046 0
 3999 003f 4489E1   		movl	%r12d, %ecx
 4000 0042 89EE     		movl	%ebp, %esi
 4001 0044 4889DF   		movq	%rbx, %rdi
 4002 0047 89C2     		movl	%eax, %edx
1049:fltk-1.3.4-1/png/pngrtran.c **** #endif /* FLOATING POINT */
 4003              		.loc 1 1049 0
 4004 0049 5B       		popq	%rbx
 4005              		.cfi_def_cfa_offset 24
 4006              	.LVL472:
 4007 004a 5D       		popq	%rbp
 4008              		.cfi_def_cfa_offset 16
 4009              	.LVL473:
 4010 004b 415C     		popq	%r12
 4011              		.cfi_def_cfa_offset 8
1046:fltk-1.3.4-1/png/pngrtran.c ****       png_fixed(png_ptr, red, "rgb to gray red coefficient"),
 4012              		.loc 1 1046 0
 4013 004d E9000000 		jmp	png_set_rgb_to_gray_fixed
 4013      00
 4014              	.LVL474:
 4015              		.cfi_endproc
 4016              	.LFE77:
 4018              		.section	.text.unlikely.png_set_rgb_to_gray
 4019              	.LCOLDE43:
 4020              		.section	.text.png_set_rgb_to_gray
 4021              	.LHOTE43:
 4022              		.section	.text.unlikely.png_set_read_user_transform_fn,"ax",@progbits
 4023              	.LCOLDB44:
 4024              		.section	.text.png_set_read_user_transform_fn,"ax",@progbits
 4025              	.LHOTB44:
 4026              		.p2align 4,,15
 4027              		.globl	png_set_read_user_transform_fn
 4029              	png_set_read_user_transform_fn:
 4030              	.LFB78:
1059:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_set_read_user_transform_fn");
 4031              		.loc 1 1059 0
 4032              		.cfi_startproc
 4033              	.LVL475:
1063:fltk-1.3.4-1/png/pngrtran.c ****    png_ptr->read_user_transform_fn = read_user_transform_fn;
 4034              		.loc 1 1063 0
 4035 0000 818F3401 		orl	$1048576, 308(%rdi)
 4035      00000000 
 4035      1000
1064:fltk-1.3.4-1/png/pngrtran.c **** #endif
 4036              		.loc 1 1064 0
 4037 000a 4889B710 		movq	%rsi, 272(%rdi)
 4037      010000
 4038 0011 C3       		ret
 4039              		.cfi_endproc
 4040              	.LFE78:
 4042              		.section	.text.unlikely.png_set_read_user_transform_fn
 4043              	.LCOLDE44:
 4044              		.section	.text.png_set_read_user_transform_fn
 4045              	.LHOTE44:
 4046              		.section	.rodata.str1.8
 4047 01df 00       		.align 8
 4048              	.LC45:
 4049 01e0 6C696270 		.string	"libpng does not support gamma+background+rgb_to_gray"
 4049      6E672064 
 4049      6F657320 
 4049      6E6F7420 
 4049      73757070 
 4050              		.section	.rodata.str1.1
 4051              	.LC46:
 4052 006c 696E7661 		.string	"invalid background gamma type"
 4052      6C696420 
 4052      6261636B 
 4052      67726F75 
 4052      6E642067 
 4053              		.section	.text.unlikely.png_init_read_transformations,"ax",@progbits
 4054              	.LCOLDB47:
 4055              		.section	.text.png_init_read_transformations,"ax",@progbits
 4056              	.LHOTB47:
 4057              		.p2align 4,,15
 4058              		.globl	png_init_read_transformations
 4060              	png_init_read_transformations:
 4061              	.LFB82:
1276:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_init_read_transformations");
 4062              		.loc 1 1276 0
 4063              		.cfi_startproc
 4064              	.LVL476:
 4065 0000 4157     		pushq	%r15
 4066              		.cfi_def_cfa_offset 16
 4067              		.cfi_offset 15, -16
 4068 0002 4156     		pushq	%r14
 4069              		.cfi_def_cfa_offset 24
 4070              		.cfi_offset 14, -24
 4071 0004 4155     		pushq	%r13
 4072              		.cfi_def_cfa_offset 32
 4073              		.cfi_offset 13, -32
 4074 0006 4154     		pushq	%r12
 4075              		.cfi_def_cfa_offset 40
 4076              		.cfi_offset 12, -40
 4077 0008 55       		pushq	%rbp
 4078              		.cfi_def_cfa_offset 48
 4079              		.cfi_offset 6, -48
 4080 0009 53       		pushq	%rbx
 4081              		.cfi_def_cfa_offset 56
 4082              		.cfi_offset 3, -56
 4083 000a 4889FB   		movq	%rdi, %rbx
 4084 000d 4883EC28 		subq	$40, %rsp
 4085              		.cfi_def_cfa_offset 96
 4086              	.LBB255:
1300:fltk-1.3.4-1/png/pngrtran.c ****       {
 4087              		.loc 1 1300 0
 4088 0011 8BB7D804 		movl	1240(%rdi), %esi
 4088      0000
 4089              	.LBE255:
1276:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_init_read_transformations");
 4090              		.loc 1 1276 0
 4091 0017 64488B04 		movq	%fs:40, %rax
 4091      25280000 
 4091      00
 4092 0020 48894424 		movq	%rax, 24(%rsp)
 4092      18
 4093 0025 31C0     		xorl	%eax, %eax
 4094              	.LVL477:
 4095              	.LBB260:
1300:fltk-1.3.4-1/png/pngrtran.c ****       {
 4096              		.loc 1 1300 0
 4097 0027 85F6     		testl	%esi, %esi
 4098 0029 7445     		je	.L456
1302:fltk-1.3.4-1/png/pngrtran.c ****             gamma_correction = png_gamma_threshold(png_ptr->colorspace.gamma,
 4099              		.loc 1 1302 0
 4100 002b 8B97B402 		movl	692(%rdi), %edx
 4100      0000
 4101 0031 85D2     		testl	%edx, %edx
 4102 0033 0F841702 		je	.L457
 4102      0000
 4103              	.LVL478:
 4104              	.LBB256:
 4105              	.LBB257:
1086:fltk-1.3.4-1/png/pngrtran.c ****        png_gamma_significant(gtest);
 4106              		.loc 1 1086 0
 4107 0039 488D7C24 		leaq	20(%rsp), %rdi
 4107      14
 4108              	.LVL479:
 4109 003e B9A08601 		movl	$100000, %ecx
 4109      00
 4110 0043 E8000000 		call	png_muldiv
 4110      00
 4111              	.LVL480:
 4112 0048 85C0     		testl	%eax, %eax
 4113 004a 0F85A808 		jne	.L645
 4113      0000
 4114              	.LVL481:
 4115              	.LBE257:
 4116              	.LBE256:
1330:fltk-1.3.4-1/png/pngrtran.c **** 
 4117              		.loc 1 1330 0
 4118 0050 66838B22 		orw	$1, 1314(%rbx)
 4118      05000001 
 4119              	.LVL482:
 4120              	.L459:
1341:fltk-1.3.4-1/png/pngrtran.c **** 
 4121              		.loc 1 1341 0
 4122 0058 818B3401 		orl	$8192, 308(%rbx)
 4122      00000020 
 4122      0000
 4123 0062 8BBBB402 		movl	692(%rbx), %edi
 4123      0000
 4124 0068 EB3F     		jmp	.L463
 4125              	.LVL483:
 4126 006a 660F1F44 		.p2align 4,,10
 4126      0000
 4127              		.p2align 3
 4128              	.L456:
1313:fltk-1.3.4-1/png/pngrtran.c ****          /* The converse - assume the file matches the screen, note that this
 4129              		.loc 1 1313 0
 4130 0070 8BBFB402 		movl	692(%rdi), %edi
 4130      0000
 4131 0076 85FF     		testl	%edi, %edi
 4132 0078 0F857206 		jne	.L646
 4132      0000
1327:fltk-1.3.4-1/png/pngrtran.c **** 
 4133              		.loc 1 1327 0
 4134 007e C783D804 		movl	$100000, 1240(%rbx)
 4134      0000A086 
 4134      0100
 4135 0088 C783B402 		movl	$100000, 692(%rbx)
 4135      0000A086 
 4135      0100
 4136 0092 BFA08601 		movl	$100000, %edi
 4136      00
 4137              	.L461:
1330:fltk-1.3.4-1/png/pngrtran.c **** 
 4138              		.loc 1 1330 0
 4139 0097 66838B22 		orw	$1, 1314(%rbx)
 4139      05000001 
 4140              	.LVL484:
 4141              	.L545:
1344:fltk-1.3.4-1/png/pngrtran.c ****    }
 4142              		.loc 1 1344 0
 4143 009f 81A33401 		andl	$-8193, 308(%rbx)
 4143      0000FFDF 
 4143      FFFF
 4144              	.L463:
 4145              	.LBE260:
1378:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) == 0)
 4146              		.loc 1 1378 0
 4147 00a9 8B933401 		movl	308(%rbx), %edx
 4147      0000
 4148 00af 81E28000 		andl	$262272, %edx
 4148      0400
 4149 00b5 81FA0000 		cmpl	$262144, %edx
 4149      0400
 4150 00bb 0F844704 		je	.L647
 4150      0000
 4151              	.L464:
1405:fltk-1.3.4-1/png/pngrtran.c ****    {
 4152              		.loc 1 1405 0
 4153 00c1 E8000000 		call	png_gamma_significant
 4153      00
 4154              	.LVL485:
 4155 00c6 85C0     		testl	%eax, %eax
1407:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 4156              		.loc 1 1407 0
 4157 00c8 8B833401 		movl	308(%rbx), %eax
 4157      0000
1405:fltk-1.3.4-1/png/pngrtran.c ****    {
 4158              		.loc 1 1405 0
 4159 00ce 7515     		jne	.L466
1408:fltk-1.3.4-1/png/pngrtran.c ****    }
 4160              		.loc 1 1408 0
 4161 00d0 81A33001 		andl	$-8193, 304(%rbx)
 4161      0000FFDF 
 4161      FFFF
1407:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 4162              		.loc 1 1407 0
 4163 00da 25FFFF7F 		andl	$-8388609, %eax
 4163      FF
 4164 00df 89833401 		movl	%eax, 308(%rbx)
 4164      0000
 4165              	.L466:
1416:fltk-1.3.4-1/png/pngrtran.c ****       png_colorspace_set_rgb_coefficients(png_ptr);
 4166              		.loc 1 1416 0
 4167 00e5 A9000060 		testl	$6291456, %eax
 4167      00
 4168 00ea 0F857003 		jne	.L648
 4168      0000
 4169              	.L467:
1437:fltk-1.3.4-1/png/pngrtran.c ****    {
 4170              		.loc 1 1437 0
 4171 00f0 F6C401   		testb	$1, %ah
 4172 00f3 0F842702 		je	.L468
 4172      0000
1442:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->mode |= PNG_BACKGROUND_IS_GRAY;
 4173              		.loc 1 1442 0
 4174 00f9 0FB68B77 		movzbl	631(%rbx), %ecx
 4174      020000
 4175 0100 F6C102   		testb	$2, %cl
 4176 0103 750A     		jne	.L469
1443:fltk-1.3.4-1/png/pngrtran.c ****    }
 4177              		.loc 1 1443 0
 4178 0105 818B2C01 		orl	$2048, 300(%rbx)
 4178      00000008 
 4178      0000
 4179              	.L469:
1477:fltk-1.3.4-1/png/pngrtran.c ****       png_init_palette_transformations(png_ptr);
 4180              		.loc 1 1477 0
 4181 010f 80F903   		cmpb	$3, %cl
 4182 0112 0F843C02 		je	.L649
 4182      0000
 4183              	.L472:
 4184              	.LVL486:
 4185              	.LBB261:
 4186              	.LBB262:
1200:fltk-1.3.4-1/png/pngrtran.c ****    {
 4187              		.loc 1 1200 0
 4188 0118 F6C104   		testb	$4, %cl
 4189 011b 7533     		jne	.L480
1197:fltk-1.3.4-1/png/pngrtran.c **** 
 4190              		.loc 1 1197 0
 4191 011d 0FB7B370 		movzwl	624(%rbx), %esi
 4191      020000
1207:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 4192              		.loc 1 1207 0
 4193 0124 89C2     		movl	%eax, %edx
1208:fltk-1.3.4-1/png/pngrtran.c **** #     endif
 4194              		.loc 1 1208 0
 4195 0126 81A33001 		andl	$-8193, 304(%rbx)
 4195      0000FFDF 
 4195      FFFF
1207:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 4196              		.loc 1 1207 0
 4197 0130 81E2FFFF 		andl	$-8388609, %edx
 4197      7FFF
 4198 0136 89933401 		movl	%edx, 308(%rbx)
 4198      0000
1211:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~(PNG_COMPOSE | PNG_BACKGROUND_EXPAND);
 4199              		.loc 1 1211 0
 4200 013c 6685F6   		testw	%si, %si
 4201 013f 0F85A305 		jne	.L553
 4201      0000
1212:fltk-1.3.4-1/png/pngrtran.c ****    }
 4202              		.loc 1 1212 0
 4203 0145 257FFE7F 		andl	$-8388993, %eax
 4203      FF
 4204 014a 89833401 		movl	%eax, 308(%rbx)
 4204      0000
 4205              	.L480:
1224:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_EXPAND) != 0 &&
 4206              		.loc 1 1224 0
 4207 0150 8B933401 		movl	308(%rbx), %edx
 4207      0000
 4208 0156 89D6     		movl	%edx, %esi
 4209 0158 81E60011 		andl	$4352, %esi
 4209      0000
 4210 015e 81FE0011 		cmpl	$4352, %esi
 4210      0000
 4211 0164 0F84C603 		je	.L650
 4211      0000
 4212              	.LVL487:
 4213              	.L478:
 4214              	.LBE262:
 4215              	.LBE261:
1485:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) != 0 &&
 4216              		.loc 1 1485 0
 4217 016a 89D1     		movl	%edx, %ecx
 4218 016c 81E18003 		andl	$896, %ecx
 4218      0000
 4219 0172 81F98002 		cmpl	$640, %ecx
 4219      0000
 4220 0178 0F84FA02 		je	.L651
 4220      0000
 4221              	.L485:
1512:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) != 0 &&
 4222              		.loc 1 1512 0
 4223 017e A9000400 		testl	$67109888, %eax
 4223      04
 4224 0183 740F     		je	.L486
1513:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_BACKGROUND_EXPAND) == 0 &&
 4225              		.loc 1 1513 0
 4226 0185 81E28001 		andl	$384, %edx
 4226      0000
 4227 018b 83C280   		addl	$-128, %edx
 4228 018e 0F84DC07 		je	.L652
 4228      0000
 4229              	.L486:
1542:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 4230              		.loc 1 1542 0
 4231 0194 488B9388 		movq	648(%rbx), %rdx
 4231      020000
1558:fltk-1.3.4-1/png/pngrtran.c ****        ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0 &&
 4232              		.loc 1 1558 0
 4233 019b F6C420   		testb	$32, %ah
1542:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 4234              		.loc 1 1542 0
 4235 019e 48899392 		movq	%rdx, 658(%rbx)
 4235      020000
 4236 01a5 0FB79390 		movzwl	656(%rbx), %edx
 4236      020000
 4237 01ac 6689939A 		movw	%dx, 666(%rbx)
 4237      020000
1558:fltk-1.3.4-1/png/pngrtran.c ****        ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0 &&
 4238              		.loc 1 1558 0
 4239 01b3 753B     		jne	.L491
1558:fltk-1.3.4-1/png/pngrtran.c ****        ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0 &&
 4240              		.loc 1 1558 0 is_stmt 0 discriminator 1
 4241 01b5 A9000060 		testl	$6291456, %eax
 4241      00
 4242 01ba 0F85F004 		jne	.L653
 4242      0000
 4243              	.L490:
1561:fltk-1.3.4-1/png/pngrtran.c ****         ((png_ptr->transformations & PNG_COMPOSE) != 0 &&
 4244              		.loc 1 1561 0 is_stmt 1
 4245 01c0 A880     		testb	$-128, %al
 4246 01c2 0F855807 		jne	.L654
 4246      0000
1569:fltk-1.3.4-1/png/pngrtran.c ****        png_gamma_significant(png_ptr->screen_gamma) != 0))
 4247              		.loc 1 1569 0
 4248 01c8 A9000080 		testl	$8388608, %eax
 4248      00
 4249 01cd 0F840A01 		je	.L508
 4249      0000
 4250              	.L494:
1570:fltk-1.3.4-1/png/pngrtran.c ****    {
 4251              		.loc 1 1570 0
 4252 01d3 8BBBB402 		movl	692(%rbx), %edi
 4252      0000
 4253 01d9 E8000000 		call	png_gamma_significant
 4253      00
 4254              	.LVL488:
1569:fltk-1.3.4-1/png/pngrtran.c ****        png_gamma_significant(png_ptr->screen_gamma) != 0))
 4255              		.loc 1 1569 0
 4256 01de 85C0     		testl	%eax, %eax
 4257 01e0 0F84DA05 		je	.L655
 4257      0000
 4258 01e6 662E0F1F 		.p2align 4,,10
 4258      84000000 
 4258      0000
 4259              		.p2align 3
 4260              	.L491:
1572:fltk-1.3.4-1/png/pngrtran.c **** 
 4261              		.loc 1 1572 0
 4262 01f0 0FB6B378 		movzbl	632(%rbx), %esi
 4262      020000
 4263 01f7 4889DF   		movq	%rbx, %rdi
 4264 01fa E8000000 		call	png_build_gamma_table
 4264      00
 4265              	.LVL489:
1575:fltk-1.3.4-1/png/pngrtran.c ****       {
 4266              		.loc 1 1575 0
 4267 01ff 8B933401 		movl	308(%rbx), %edx
 4267      0000
 4268 0205 F6C280   		testb	$-128, %dl
 4269 0208 0F84C201 		je	.L656
 4269      0000
1583:fltk-1.3.4-1/png/pngrtran.c ****             png_warning(png_ptr,
 4270              		.loc 1 1583 0
 4271 020e 81E20000 		andl	$6291456, %edx
 4271      6000
 4272 0214 0F85C607 		jne	.L657
 4272      0000
 4273              	.L497:
1587:fltk-1.3.4-1/png/pngrtran.c ****          {
 4274              		.loc 1 1587 0
 4275 021a 80BB7702 		cmpb	$3, 631(%rbx)
 4275      000003
 4276 0221 0F84D107 		je	.L658
 4276      0000
 4277              	.LVL490:
 4278              	.LBB268:
1720:fltk-1.3.4-1/png/pngrtran.c ****             {
 4279              		.loc 1 1720 0
 4280 0227 0FB68382 		movzbl	642(%rbx), %eax
 4280      020000
 4281 022e 3C02     		cmpb	$2, %al
 4282 0230 7436     		je	.L515
 4283 0232 3C03     		cmpb	$3, %al
 4284 0234 0F846E09 		je	.L516
 4284      0000
 4285 023a 3C01     		cmpb	$1, %al
 4286 023c 0F844E09 		je	.L659
 4286      0000
1740:fltk-1.3.4-1/png/pngrtran.c ****             }
 4287              		.loc 1 1740 0
 4288 0242 BE000000 		movl	$.LC46, %esi
 4288      00
 4289 0247 4889DF   		movq	%rbx, %rdi
 4290 024a E8000000 		call	png_error
 4290      00
 4291              	.LVL491:
 4292 024f 90       		.p2align 4,,10
 4293              		.p2align 3
 4294              	.L457:
 4295              	.LBE268:
 4296              	.LBB269:
1310:fltk-1.3.4-1/png/pngrtran.c ****       }
 4297              		.loc 1 1310 0
 4298 0250 89F7     		movl	%esi, %edi
 4299 0252 E8000000 		call	png_reciprocal
 4299      00
 4300              	.LVL492:
 4301 0257 89C7     		movl	%eax, %edi
 4302 0259 8983B402 		movl	%eax, 692(%rbx)
 4302      0000
 4303 025f E933FEFF 		jmp	.L461
 4303      FF
 4304              	.LVL493:
 4305              		.p2align 4,,10
 4306 0264 0F1F4000 		.p2align 3
 4307              	.L515:
 4308              	.LBE269:
 4309              	.LBB270:
1728:fltk-1.3.4-1/png/pngrtran.c ****                   gs = png_reciprocal2(png_ptr->colorspace.gamma,
 4310              		.loc 1 1728 0
 4311 0268 8BBBD804 		movl	1240(%rbx), %edi
 4311      0000
 4312 026e E8000000 		call	png_reciprocal
 4312      00
 4313              	.LVL494:
1729:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->screen_gamma);
 4314              		.loc 1 1729 0
 4315 0273 8BB3B402 		movl	692(%rbx), %esi
 4315      0000
 4316 0279 8BBBD804 		movl	1240(%rbx), %edi
 4316      0000
1728:fltk-1.3.4-1/png/pngrtran.c ****                   gs = png_reciprocal2(png_ptr->colorspace.gamma,
 4317              		.loc 1 1728 0
 4318 027f 4189C4   		movl	%eax, %r12d
 4319              	.LVL495:
1729:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->screen_gamma);
 4320              		.loc 1 1729 0
 4321 0282 E8000000 		call	png_reciprocal2
 4321      00
 4322              	.LVL496:
 4323 0287 89C5     		movl	%eax, %ebp
 4324              	.LVL497:
 4325              	.L518:
1743:fltk-1.3.4-1/png/pngrtran.c ****             gs_sig = png_gamma_significant(gs);
 4326              		.loc 1 1743 0
 4327 0289 4489E7   		movl	%r12d, %edi
 4328 028c E8000000 		call	png_gamma_significant
 4328      00
 4329              	.LVL498:
1744:fltk-1.3.4-1/png/pngrtran.c **** 
 4330              		.loc 1 1744 0
 4331 0291 89EF     		movl	%ebp, %edi
1743:fltk-1.3.4-1/png/pngrtran.c ****             gs_sig = png_gamma_significant(gs);
 4332              		.loc 1 1743 0
 4333 0293 4189C6   		movl	%eax, %r14d
 4334              	.LVL499:
1744:fltk-1.3.4-1/png/pngrtran.c **** 
 4335              		.loc 1 1744 0
 4336 0296 E8000000 		call	png_gamma_significant
 4336      00
 4337              	.LVL500:
1746:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->background_1.gray = png_gamma_correct(png_ptr,
 4338              		.loc 1 1746 0
 4339 029b 4585F6   		testl	%r14d, %r14d
1744:fltk-1.3.4-1/png/pngrtran.c **** 
 4340              		.loc 1 1744 0
 4341 029e 4189C5   		movl	%eax, %r13d
 4342              	.LVL501:
1746:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->background_1.gray = png_gamma_correct(png_ptr,
 4343              		.loc 1 1746 0
 4344 02a1 0F854909 		jne	.L660
 4344      0000
 4345              	.LVL502:
 4346              	.L519:
1750:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->background.gray = png_gamma_correct(png_ptr,
 4347              		.loc 1 1750 0
 4348 02a7 4585ED   		testl	%r13d, %r13d
 4349 02aa 0F852009 		jne	.L661
 4349      0000
 4350              	.L520:
1754:fltk-1.3.4-1/png/pngrtran.c ****                 (png_ptr->background.red != png_ptr->background.blue) ||
 4351              		.loc 1 1754 0
 4352 02b0 0FB7B38A 		movzwl	650(%rbx), %esi
 4352      020000
 4353 02b7 663BB38C 		cmpw	652(%rbx), %si
 4353      020000
 4354 02be 0F846C0B 		je	.L662
 4354      0000
 4355              	.L521:
1759:fltk-1.3.4-1/png/pngrtran.c ****                {
 4356              		.loc 1 1759 0
 4357 02c4 4585F6   		testl	%r14d, %r14d
 4358 02c7 0F859309 		jne	.L663
 4358      0000
 4359              	.L523:
1771:fltk-1.3.4-1/png/pngrtran.c ****                {
 4360              		.loc 1 1771 0
 4361 02cd 4585ED   		testl	%r13d, %r13d
 4362 02d0 0F853A09 		jne	.L664
 4362      0000
 4363              	.L524:
1795:fltk-1.3.4-1/png/pngrtran.c ****          } /* color_type != PNG_COLOR_TYPE_PALETTE */
 4364              		.loc 1 1795 0
 4365 02d6 C6838202 		movb	$1, 642(%rbx)
 4365      000001
 4366              	.LVL503:
 4367              	.L508:
 4368              	.LBE270:
1873:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_EXPAND) == 0 &&
 4369              		.loc 1 1873 0
 4370 02dd 8B933401 		movl	308(%rbx), %edx
 4370      0000
 4371 02e3 89D0     		movl	%edx, %eax
 4372 02e5 25081000 		andl	$4104, %eax
 4372      00
 4373 02ea 83F808   		cmpl	$8, %eax
 4374 02ed 0F84C502 		je	.L665
 4374      0000
 4375              	.L455:
1917:fltk-1.3.4-1/png/pngrtran.c **** 
 4376              		.loc 1 1917 0
 4377 02f3 488B4424 		movq	24(%rsp), %rax
 4377      18
 4378 02f8 64483304 		xorq	%fs:40, %rax
 4378      25280000 
 4378      00
 4379 0301 0F85B20C 		jne	.L666
 4379      0000
 4380 0307 4883C428 		addq	$40, %rsp
 4381              		.cfi_remember_state
 4382              		.cfi_def_cfa_offset 56
 4383 030b 5B       		popq	%rbx
 4384              		.cfi_def_cfa_offset 48
 4385              	.LVL504:
 4386 030c 5D       		popq	%rbp
 4387              		.cfi_def_cfa_offset 40
 4388 030d 415C     		popq	%r12
 4389              		.cfi_def_cfa_offset 32
 4390 030f 415D     		popq	%r13
 4391              		.cfi_def_cfa_offset 24
 4392 0311 415E     		popq	%r14
 4393              		.cfi_def_cfa_offset 16
 4394 0313 415F     		popq	%r15
 4395              		.cfi_def_cfa_offset 8
 4396 0315 C3       		ret
 4397              	.LVL505:
 4398 0316 662E0F1F 		.p2align 4,,10
 4398      84000000 
 4398      0000
 4399              		.p2align 3
 4400              	.L468:
 4401              		.cfi_restore_state
1453:fltk-1.3.4-1/png/pngrtran.c ****       {
 4402              		.loc 1 1453 0
 4403 0320 89C2     		movl	%eax, %edx
 4404 0322 81E28040 		andl	$16512, %edx
 4404      0000
 4405 0328 81FA8040 		cmpl	$16512, %edx
 4405      0000
 4406 032e 7514     		jne	.L637
1455:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->background.red == png_ptr->background.blue)
 4407              		.loc 1 1455 0
 4408 0330 0FB7938A 		movzwl	650(%rbx), %edx
 4408      020000
 4409 0337 663B938C 		cmpw	652(%rbx), %dx
 4409      020000
 4410 033e 0F84AC09 		je	.L667
 4410      0000
 4411              	.L637:
 4412 0344 0FB68B77 		movzbl	631(%rbx), %ecx
 4412      020000
1477:fltk-1.3.4-1/png/pngrtran.c ****       png_init_palette_transformations(png_ptr);
 4413              		.loc 1 1477 0
 4414 034b 80F903   		cmpb	$3, %cl
 4415 034e 0F85C4FD 		jne	.L472
 4415      FFFF
 4416              	.L649:
 4417              	.LVL506:
 4418              	.LBB271:
 4419              	.LBB272:
1114:fltk-1.3.4-1/png/pngrtran.c ****    {
 4420              		.loc 1 1114 0
 4421 0354 440FB78B 		movzwl	624(%rbx), %r9d
 4421      70020000 
 4422 035c 664585C9 		testw	%r9w, %r9w
 4423 0360 0F84AA03 		je	.L473
 4423      0000
 4424              	.LVL507:
 4425 0366 488BB3F8 		movq	760(%rbx), %rsi
 4425      020000
 4426              	.LBB273:
1119:fltk-1.3.4-1/png/pngrtran.c ****       {
 4427              		.loc 1 1119 0
 4428 036d 410FB7F9 		movzwl	%r9w, %edi
 4429 0371 31D2     		xorl	%edx, %edx
 4430 0373 4531C0   		xorl	%r8d, %r8d
 4431              	.LVL508:
 4432 0376 662E0F1F 		.p2align 4,,10
 4432      84000000 
 4432      0000
 4433              		.p2align 3
 4434              	.L476:
1121:fltk-1.3.4-1/png/pngrtran.c ****             continue;
 4435              		.loc 1 1121 0
 4436 0380 0FB60C16 		movzbl	(%rsi,%rdx), %ecx
 4437 0384 80F9FF   		cmpb	$-1, %cl
 4438 0387 740E     		je	.L474
1123:fltk-1.3.4-1/png/pngrtran.c ****             input_has_transparency = 1;
 4439              		.loc 1 1123 0
 4440 0389 84C9     		testb	%cl, %cl
 4441 038b 0F859403 		jne	.L475
 4441      0000
1124:fltk-1.3.4-1/png/pngrtran.c ****          else
 4442              		.loc 1 1124 0
 4443 0391 41B80100 		movl	$1, %r8d
 4443      0000
 4444              	.LVL509:
 4445              	.L474:
 4446 0397 4883C201 		addq	$1, %rdx
 4447              	.LVL510:
1119:fltk-1.3.4-1/png/pngrtran.c ****       {
 4448              		.loc 1 1119 0
 4449 039b 39D7     		cmpl	%edx, %edi
 4450 039d 7FE1     		jg	.L476
 4451              	.LBE273:
1141:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 4452              		.loc 1 1141 0
 4453 039f 89C2     		movl	%eax, %edx
1142:fltk-1.3.4-1/png/pngrtran.c **** 
 4454              		.loc 1 1142 0
 4455 03a1 81A33001 		andl	$-8193, 304(%rbx)
 4455      0000FFDF 
 4455      FFFF
1141:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 4456              		.loc 1 1141 0
 4457 03ab 81E2FFFF 		andl	$-8388609, %edx
 4457      7FFF
1144:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~(PNG_COMPOSE | PNG_BACKGROUND_EXPAND);
 4458              		.loc 1 1144 0
 4459 03b1 4585C0   		testl	%r8d, %r8d
1141:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->flags &= ~PNG_FLAG_OPTIMIZE_ALPHA;
 4460              		.loc 1 1141 0
 4461 03b4 89933401 		movl	%edx, 308(%rbx)
 4461      0000
1144:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~(PNG_COMPOSE | PNG_BACKGROUND_EXPAND);
 4462              		.loc 1 1144 0
 4463 03ba 0F845A03 		je	.L546
 4463      0000
 4464 03c0 89D0     		movl	%edx, %eax
 4465 03c2 E95E0300 		jmp	.L475
 4465      00
 4466              	.LVL511:
 4467 03c7 660F1F84 		.p2align 4,,10
 4467      00000000 
 4467      00
 4468              		.p2align 3
 4469              	.L656:
 4470              	.LBE272:
 4471              	.LBE271:
1802:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
 4472              		.loc 1 1802 0
 4473 03d0 80BB7702 		cmpb	$3, 631(%rbx)
 4473      000003
 4474 03d7 0F8516FF 		jne	.L455
 4474      FFFF
1805:fltk-1.3.4-1/png/pngrtran.c ****          (png_ptr->transformations & PNG_RGB_TO_GRAY) == 0)
 4475              		.loc 1 1805 0
 4476 03dd F6C610   		testb	$16, %dh
 4477 03e0 0F85CA08 		jne	.L668
 4477      0000
 4478              	.L526:
 4479              	.LBB276:
1811:fltk-1.3.4-1/png/pngrtran.c ****          int i;
 4480              		.loc 1 1811 0
 4481 03e6 0FB78B68 		movzwl	616(%rbx), %ecx
 4481      020000
1810:fltk-1.3.4-1/png/pngrtran.c ****          int num_palette = png_ptr->num_palette;
 4482              		.loc 1 1810 0
 4483 03ed 488B8360 		movq	608(%rbx), %rax
 4483      020000
 4484              	.LVL512:
1817:fltk-1.3.4-1/png/pngrtran.c ****          {
 4485              		.loc 1 1817 0
 4486 03f4 6685C9   		testw	%cx, %cx
 4487 03f7 7453     		je	.L528
 4488 03f9 8D51FF   		leal	-1(%rcx), %edx
 4489 03fc 488D7452 		leaq	3(%rdx,%rdx,2), %rsi
 4489      03
 4490 0401 4801C6   		addq	%rax, %rsi
 4491              	.LVL513:
 4492              		.p2align 4,,10
 4493 0404 0F1F4000 		.p2align 3
 4494              	.L529:
1819:fltk-1.3.4-1/png/pngrtran.c ****             palette[i].green = png_ptr->gamma_table[palette[i].green];
 4495              		.loc 1 1819 0 discriminator 3
 4496 0408 0FB610   		movzbl	(%rax), %edx
 4497 040b 488B8BB8 		movq	696(%rbx), %rcx
 4497      020000
 4498 0412 4883C003 		addq	$3, %rax
 4499 0416 0FB61411 		movzbl	(%rcx,%rdx), %edx
 4500 041a 8850FD   		movb	%dl, -3(%rax)
1820:fltk-1.3.4-1/png/pngrtran.c ****             palette[i].blue = png_ptr->gamma_table[palette[i].blue];
 4501              		.loc 1 1820 0 discriminator 3
 4502 041d 0FB650FE 		movzbl	-2(%rax), %edx
 4503 0421 488B8BB8 		movq	696(%rbx), %rcx
 4503      020000
 4504 0428 0FB61411 		movzbl	(%rcx,%rdx), %edx
 4505 042c 8850FE   		movb	%dl, -2(%rax)
1821:fltk-1.3.4-1/png/pngrtran.c ****          }
 4506              		.loc 1 1821 0 discriminator 3
 4507 042f 0FB650FF 		movzbl	-1(%rax), %edx
 4508 0433 488B8BB8 		movq	696(%rbx), %rcx
 4508      020000
 4509 043a 0FB61411 		movzbl	(%rcx,%rdx), %edx
 4510 043e 8850FF   		movb	%dl, -1(%rax)
1817:fltk-1.3.4-1/png/pngrtran.c ****          {
 4511              		.loc 1 1817 0 discriminator 3
 4512 0441 4839F0   		cmpq	%rsi, %rax
 4513 0444 75C2     		jne	.L529
 4514 0446 8B933401 		movl	308(%rbx), %edx
 4514      0000
 4515              	.L528:
1825:fltk-1.3.4-1/png/pngrtran.c ****       } /* color_type == PALETTE && !PNG_BACKGROUND transformation */
 4516              		.loc 1 1825 0
 4517 044c 80E6DF   		andb	$223, %dh
 4518 044f 89933401 		movl	%edx, 308(%rbx)
 4518      0000
 4519 0455 E983FEFF 		jmp	.L508
 4519      FF
 4520 045a 660F1F44 		.p2align 4,,10
 4520      0000
 4521              		.p2align 3
 4522              	.L648:
 4523              	.LBE276:
1417:fltk-1.3.4-1/png/pngrtran.c **** #endif
 4524              		.loc 1 1417 0
 4525 0460 4889DF   		movq	%rbx, %rdi
 4526 0463 E8000000 		call	png_colorspace_set_rgb_coefficients
 4526      00
 4527              	.LVL514:
 4528 0468 8B833401 		movl	308(%rbx), %eax
 4528      0000
 4529 046e E97DFCFF 		jmp	.L467
 4529      FF
 4530              		.p2align 4,,10
 4531 0473 0F1F4400 		.p2align 3
 4531      00
 4532              	.L651:
1487:fltk-1.3.4-1/png/pngrtran.c ****        png_ptr->bit_depth != 16)
 4533              		.loc 1 1487 0
 4534 0478 80BB7802 		cmpb	$16, 632(%rbx)
 4534      000010
 4535 047f 0F84F9FC 		je	.L485
 4535      FFFF
1501:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.green);
 4536              		.loc 1 1501 0
 4537 0485 0FB7B38A 		movzwl	650(%rbx), %esi
 4537      020000
 4538 048c 89F1     		movl	%esi, %ecx
 4539 048e C1E108   		sall	$8, %ecx
 4540 0491 29F1     		subl	%esi, %ecx
1502:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.blue);
 4541              		.loc 1 1502 0
 4542 0493 0FB7B38C 		movzwl	652(%rbx), %esi
 4542      020000
1501:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.green);
 4543              		.loc 1 1501 0
 4544 049a 81C17F80 		addl	$32895, %ecx
 4544      0000
 4545 04a0 C1E910   		shrl	$16, %ecx
 4546 04a3 66898B8A 		movw	%cx, 650(%rbx)
 4546      020000
1502:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.blue);
 4547              		.loc 1 1502 0
 4548 04aa 89F1     		movl	%esi, %ecx
 4549 04ac C1E108   		sall	$8, %ecx
 4550 04af 29F1     		subl	%esi, %ecx
1503:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.gray);
 4551              		.loc 1 1503 0
 4552 04b1 0FB7B38E 		movzwl	654(%rbx), %esi
 4552      020000
1502:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.blue);
 4553              		.loc 1 1502 0
 4554 04b8 81C17F80 		addl	$32895, %ecx
 4554      0000
 4555 04be C1E910   		shrl	$16, %ecx
 4556 04c1 66898B8C 		movw	%cx, 652(%rbx)
 4556      020000
1503:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.gray);
 4557              		.loc 1 1503 0
 4558 04c8 89F1     		movl	%esi, %ecx
 4559 04ca C1E108   		sall	$8, %ecx
 4560 04cd 29F1     		subl	%esi, %ecx
1504:fltk-1.3.4-1/png/pngrtran.c **** #     undef CHOP
 4561              		.loc 1 1504 0
 4562 04cf 0FB7B390 		movzwl	656(%rbx), %esi
 4562      020000
1503:fltk-1.3.4-1/png/pngrtran.c ****       CHOP(png_ptr->background.gray);
 4563              		.loc 1 1503 0
 4564 04d6 81C17F80 		addl	$32895, %ecx
 4564      0000
 4565 04dc C1E910   		shrl	$16, %ecx
 4566 04df 66898B8E 		movw	%cx, 654(%rbx)
 4566      020000
1504:fltk-1.3.4-1/png/pngrtran.c **** #     undef CHOP
 4567              		.loc 1 1504 0
 4568 04e6 89F1     		movl	%esi, %ecx
 4569 04e8 C1E108   		sall	$8, %ecx
 4570 04eb 29F1     		subl	%esi, %ecx
 4571 04ed 81C17F80 		addl	$32895, %ecx
 4571      0000
 4572 04f3 C1E910   		shrl	$16, %ecx
 4573 04f6 66898B90 		movw	%cx, 656(%rbx)
 4573      020000
 4574 04fd E97CFCFF 		jmp	.L485
 4574      FF
 4575              		.p2align 4,,10
 4576 0502 660F1F44 		.p2align 3
 4576      0000
 4577              	.L647:
1397:fltk-1.3.4-1/png/pngrtran.c ****    }
 4578              		.loc 1 1397 0
 4579 0508 31C0     		xorl	%eax, %eax
1386:fltk-1.3.4-1/png/pngrtran.c ****          PNG_EXPAND_tRNS);
 4580              		.loc 1 1386 0
 4581 050a 81A33401 		andl	$-41943297, 308(%rbx)
 4581      0000FFFE 
 4581      7FFD
1388:fltk-1.3.4-1/png/pngrtran.c **** 
 4582              		.loc 1 1388 0
 4583 0514 81A33001 		andl	$-8193, 304(%rbx)
 4583      0000FFDF 
 4583      FFFF
1397:fltk-1.3.4-1/png/pngrtran.c ****    }
 4584              		.loc 1 1397 0
 4585 051e 66898370 		movw	%ax, 624(%rbx)
 4585      020000
 4586 0525 E997FBFF 		jmp	.L464
 4586      FF
 4587              	.LVL515:
 4588 052a 660F1F44 		.p2align 4,,10
 4588      0000
 4589              		.p2align 3
 4590              	.L650:
 4591              	.LBB277:
 4592              	.LBB265:
1225:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type & PNG_COLOR_MASK_COLOR) == 0)
 4593              		.loc 1 1225 0
 4594 0530 83E102   		andl	$2, %ecx
 4595              	.LVL516:
 4596 0533 0F8531FC 		jne	.L478
 4596      FFFF
 4597              	.LBB263:
1234:fltk-1.3.4-1/png/pngrtran.c ****          {
 4598              		.loc 1 1234 0
 4599 0539 0FB6BB78 		movzbl	632(%rbx), %edi
 4599      020000
1231:fltk-1.3.4-1/png/pngrtran.c ****          int trans_gray = png_ptr->trans_color.gray;
 4600              		.loc 1 1231 0
 4601 0540 0FB78B90 		movzwl	656(%rbx), %ecx
 4601      020000
 4602              	.LVL517:
1232:fltk-1.3.4-1/png/pngrtran.c **** 
 4603              		.loc 1 1232 0
 4604 0547 0FB7B308 		movzwl	776(%rbx), %esi
 4604      030000
 4605              	.LVL518:
1234:fltk-1.3.4-1/png/pngrtran.c ****          {
 4606              		.loc 1 1234 0
 4607 054e 4080FF02 		cmpb	$2, %dil
 4608 0552 0F844809 		je	.L482
 4608      0000
 4609 0558 4080FF04 		cmpb	$4, %dil
 4610 055c 0F842609 		je	.L483
 4610      0000
 4611 0562 4080FF01 		cmpb	$1, %dil
 4612 0566 7512     		jne	.L481
1237:fltk-1.3.4-1/png/pngrtran.c ****                trans_gray *= 0xff;
 4613              		.loc 1 1237 0
 4614 0568 89CF     		movl	%ecx, %edi
 4615 056a C1E708   		sall	$8, %edi
 4616 056d 29CF     		subl	%ecx, %edi
 4617 056f 89F9     		movl	%edi, %ecx
 4618              	.LVL519:
1238:fltk-1.3.4-1/png/pngrtran.c ****                break;
 4619              		.loc 1 1238 0
 4620 0571 89F7     		movl	%esi, %edi
 4621 0573 C1E708   		sall	$8, %edi
 4622 0576 29F7     		subl	%esi, %edi
 4623 0578 89FE     		movl	%edi, %esi
 4624              	.LVL520:
 4625              	.L481:
1264:fltk-1.3.4-1/png/pngrtran.c ****          {
 4626              		.loc 1 1264 0
 4627 057a A9000000 		testl	$33554432, %eax
 4627      02
1262:fltk-1.3.4-1/png/pngrtran.c **** 
 4628              		.loc 1 1262 0
 4629 057f 66898B8E 		movw	%cx, 654(%rbx)
 4629      020000
1261:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->background.blue = (png_uint_16)gray;
 4630              		.loc 1 1261 0
 4631 0586 66898B8C 		movw	%cx, 652(%rbx)
 4631      020000
 4632 058d 66898B8A 		movw	%cx, 650(%rbx)
 4632      020000
1264:fltk-1.3.4-1/png/pngrtran.c ****          {
 4633              		.loc 1 1264 0
 4634 0594 0F85D0FB 		jne	.L478
 4634      FFFF
1267:fltk-1.3.4-1/png/pngrtran.c ****          }
 4635              		.loc 1 1267 0
 4636 059a 6689B306 		movw	%si, 774(%rbx)
 4636      030000
1266:fltk-1.3.4-1/png/pngrtran.c ****                png_ptr->trans_color.blue = (png_uint_16)trans_gray;
 4637              		.loc 1 1266 0
 4638 05a1 6689B304 		movw	%si, 772(%rbx)
 4638      030000
 4639 05a8 6689B302 		movw	%si, 770(%rbx)
 4639      030000
 4640 05af E9B6FBFF 		jmp	.L478
 4640      FF
 4641              	.LVL521:
 4642              		.p2align 4,,10
 4643 05b4 0F1F4000 		.p2align 3
 4644              	.L665:
 4645              	.LBE263:
 4646              	.LBE265:
 4647              	.LBE277:
1874:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE))
 4648              		.loc 1 1874 0
 4649 05b8 80BB7702 		cmpb	$3, 631(%rbx)
 4649      000003
 4650 05bf 0F852EFD 		jne	.L455
 4650      FFFF
 4651              	.L548:
 4652              	.LBB278:
1879:fltk-1.3.4-1/png/pngrtran.c **** 
 4653              		.loc 1 1879 0
 4654 05c5 0FB683E8 		movzbl	744(%rbx), %eax
 4654      020000
 4655 05cc B9080000 		movl	$8, %ecx
 4655      00
1881:fltk-1.3.4-1/png/pngrtran.c **** 
 4656              		.loc 1 1881 0
 4657 05d1 83E2F7   		andl	$-9, %edx
1878:fltk-1.3.4-1/png/pngrtran.c ****       int shift = 8 - png_ptr->sig_bit.red;
 4658              		.loc 1 1878 0
 4659 05d4 440FB783 		movzwl	616(%rbx), %r8d
 4659      68020000 
 4660              	.LVL522:
1881:fltk-1.3.4-1/png/pngrtran.c **** 
 4661              		.loc 1 1881 0
 4662 05dc 89933401 		movl	%edx, 308(%rbx)
 4662      0000
1879:fltk-1.3.4-1/png/pngrtran.c **** 
 4663              		.loc 1 1879 0
 4664 05e2 29C1     		subl	%eax, %ecx
 4665              	.LVL523:
1887:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
 4666              		.loc 1 1887 0
 4667 05e4 8D41FF   		leal	-1(%rcx), %eax
 4668 05e7 83F806   		cmpl	$6, %eax
 4669 05ea 0F875805 		ja	.L538
 4669      0000
 4670              	.LVL524:
1888:fltk-1.3.4-1/png/pngrtran.c ****          {
 4671              		.loc 1 1888 0 discriminator 1
 4672 05f0 4585C0   		testl	%r8d, %r8d
 4673 05f3 0F844F05 		je	.L538
 4673      0000
 4674 05f9 418D40FF 		leal	-1(%r8), %eax
 4675 05fd 488D7C40 		leaq	3(%rax,%rax,2), %rdi
 4675      03
1888:fltk-1.3.4-1/png/pngrtran.c ****          {
 4676              		.loc 1 1888 0 is_stmt 0 discriminator 3
 4677 0602 31C0     		xorl	%eax, %eax
 4678              	.LVL525:
 4679              		.p2align 4,,10
 4680 0604 0F1F4000 		.p2align 3
 4681              	.L539:
 4682              	.LBB279:
1890:fltk-1.3.4-1/png/pngrtran.c **** 
 4683              		.loc 1 1890 0 is_stmt 1 discriminator 3
 4684 0608 4889C6   		movq	%rax, %rsi
 4685 060b 4803B360 		addq	608(%rbx), %rsi
 4685      020000
 4686 0612 4883C003 		addq	$3, %rax
 4687 0616 0FB616   		movzbl	(%rsi), %edx
 4688              	.LVL526:
1893:fltk-1.3.4-1/png/pngrtran.c ****          }
 4689              		.loc 1 1893 0 discriminator 3
 4690 0619 D3FA     		sarl	%cl, %edx
 4691              	.LVL527:
 4692              	.LBE279:
1888:fltk-1.3.4-1/png/pngrtran.c ****          {
 4693              		.loc 1 1888 0 discriminator 3
 4694 061b 4839F8   		cmpq	%rdi, %rax
 4695              	.LBB280:
1893:fltk-1.3.4-1/png/pngrtran.c ****          }
 4696              		.loc 1 1893 0 discriminator 3
 4697 061e 8816     		movb	%dl, (%rsi)
 4698              	.LVL528:
 4699              	.LBE280:
1888:fltk-1.3.4-1/png/pngrtran.c ****          {
 4700              		.loc 1 1888 0 discriminator 3
 4701 0620 75E6     		jne	.L539
1896:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
 4702              		.loc 1 1896 0
 4703 0622 0FB693E9 		movzbl	745(%rbx), %edx
 4703      020000
 4704 0629 B8080000 		movl	$8, %eax
 4704      00
 4705 062e 89C1     		movl	%eax, %ecx
 4706              	.LVL529:
 4707 0630 29D1     		subl	%edx, %ecx
 4708              	.LVL530:
1897:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
 4709              		.loc 1 1897 0
 4710 0632 8D51FF   		leal	-1(%rcx), %edx
 4711 0635 83FA06   		cmpl	$6, %edx
 4712 0638 0F87DA06 		ja	.L669
 4712      0000
 4713              	.L549:
 4714              	.LVL531:
1888:fltk-1.3.4-1/png/pngrtran.c ****          {
 4715              		.loc 1 1888 0 discriminator 3
 4716 063e 31F6     		xorl	%esi, %esi
 4717 0640 31D2     		xorl	%edx, %edx
 4718              	.LVL532:
 4719              		.p2align 4,,10
 4720 0642 660F1F44 		.p2align 3
 4720      0000
 4721              	.L542:
 4722              	.LBB281:
1900:fltk-1.3.4-1/png/pngrtran.c **** 
 4723              		.loc 1 1900 0 discriminator 3
 4724 0648 4889F7   		movq	%rsi, %rdi
 4725 064b 4803BB60 		addq	608(%rbx), %rdi
 4725      020000
 4726              	.LBE281:
1898:fltk-1.3.4-1/png/pngrtran.c ****          {
 4727              		.loc 1 1898 0 discriminator 3
 4728 0652 83C201   		addl	$1, %edx
 4729              	.LVL533:
 4730 0655 4883C603 		addq	$3, %rsi
 4731              	.LBB282:
1900:fltk-1.3.4-1/png/pngrtran.c **** 
 4732              		.loc 1 1900 0 discriminator 3
 4733 0659 0FB64701 		movzbl	1(%rdi), %eax
 4734              	.LVL534:
1903:fltk-1.3.4-1/png/pngrtran.c ****          }
 4735              		.loc 1 1903 0 discriminator 3
 4736 065d D3F8     		sarl	%cl, %eax
 4737              	.LVL535:
 4738              	.LBE282:
1898:fltk-1.3.4-1/png/pngrtran.c ****          {
 4739              		.loc 1 1898 0 discriminator 3
 4740 065f 4139D0   		cmpl	%edx, %r8d
 4741              	.LBB283:
1903:fltk-1.3.4-1/png/pngrtran.c ****          }
 4742              		.loc 1 1903 0 discriminator 3
 4743 0662 884701   		movb	%al, 1(%rdi)
 4744              	.LVL536:
 4745              	.LBE283:
1898:fltk-1.3.4-1/png/pngrtran.c ****          {
 4746              		.loc 1 1898 0 discriminator 3
 4747 0665 7FE1     		jg	.L542
1906:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
 4748              		.loc 1 1906 0
 4749 0667 0FB683EA 		movzbl	746(%rbx), %eax
 4749      020000
 4750 066e B9080000 		movl	$8, %ecx
 4750      00
 4751              	.LVL537:
 4752 0673 29C1     		subl	%eax, %ecx
 4753              	.LVL538:
1907:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
 4754              		.loc 1 1907 0
 4755 0675 8D41FF   		leal	-1(%rcx), %eax
 4756 0678 83F806   		cmpl	$6, %eax
 4757 067b 0F8772FC 		ja	.L455
 4757      FFFF
 4758              	.LVL539:
 4759              	.L551:
1888:fltk-1.3.4-1/png/pngrtran.c ****          {
 4760              		.loc 1 1888 0 discriminator 3
 4761 0681 31F6     		xorl	%esi, %esi
 4762 0683 31D2     		xorl	%edx, %edx
 4763              	.LVL540:
 4764              		.p2align 4,,10
 4765 0685 0F1F00   		.p2align 3
 4766              	.L544:
 4767              	.LBB284:
1910:fltk-1.3.4-1/png/pngrtran.c **** 
 4768              		.loc 1 1910 0 discriminator 3
 4769 0688 4889F7   		movq	%rsi, %rdi
 4770 068b 4803BB60 		addq	608(%rbx), %rdi
 4770      020000
 4771              	.LBE284:
1908:fltk-1.3.4-1/png/pngrtran.c ****          {
 4772              		.loc 1 1908 0 discriminator 3
 4773 0692 83C201   		addl	$1, %edx
 4774              	.LVL541:
 4775 0695 4883C603 		addq	$3, %rsi
 4776              	.LBB285:
1910:fltk-1.3.4-1/png/pngrtran.c **** 
 4777              		.loc 1 1910 0 discriminator 3
 4778 0699 0FB64702 		movzbl	2(%rdi), %eax
 4779              	.LVL542:
1913:fltk-1.3.4-1/png/pngrtran.c ****          }
 4780              		.loc 1 1913 0 discriminator 3
 4781 069d D3F8     		sarl	%cl, %eax
 4782              	.LVL543:
 4783              	.LBE285:
1908:fltk-1.3.4-1/png/pngrtran.c ****          {
 4784              		.loc 1 1908 0 discriminator 3
 4785 069f 4139D0   		cmpl	%edx, %r8d
 4786              	.LBB286:
1913:fltk-1.3.4-1/png/pngrtran.c ****          }
 4787              		.loc 1 1913 0 discriminator 3
 4788 06a2 884702   		movb	%al, 2(%rdi)
 4789              	.LVL544:
 4790              	.LBE286:
1908:fltk-1.3.4-1/png/pngrtran.c ****          {
 4791              		.loc 1 1908 0 discriminator 3
 4792 06a5 7FE1     		jg	.L544
 4793 06a7 E947FCFF 		jmp	.L455
 4793      FF
 4794              	.LVL545:
 4795 06ac 0F1F4000 		.p2align 4,,10
 4796              		.p2align 3
 4797              	.L653:
 4798              	.LBE278:
1560:fltk-1.3.4-1/png/pngrtran.c ****          png_gamma_significant(png_ptr->screen_gamma) != 0)) ||
 4799              		.loc 1 1560 0
 4800 06b0 8BBBD804 		movl	1240(%rbx), %edi
 4800      0000
 4801 06b6 E8000000 		call	png_gamma_significant
 4801      00
 4802              	.LVL546:
1559:fltk-1.3.4-1/png/pngrtran.c ****         (png_gamma_significant(png_ptr->colorspace.gamma) != 0 ||
 4803              		.loc 1 1559 0
 4804 06bb 85C0     		testl	%eax, %eax
 4805 06bd 0F852DFB 		jne	.L491
 4805      FFFF
1561:fltk-1.3.4-1/png/pngrtran.c ****         ((png_ptr->transformations & PNG_COMPOSE) != 0 &&
 4806              		.loc 1 1561 0
 4807 06c3 8BBBB402 		movl	692(%rbx), %edi
 4807      0000
 4808 06c9 E8000000 		call	png_gamma_significant
 4808      00
 4809              	.LVL547:
1560:fltk-1.3.4-1/png/pngrtran.c ****          png_gamma_significant(png_ptr->screen_gamma) != 0)) ||
 4810              		.loc 1 1560 0
 4811 06ce 85C0     		testl	%eax, %eax
 4812 06d0 0F851AFB 		jne	.L491
 4812      FFFF
 4813 06d6 8B833401 		movl	308(%rbx), %eax
 4813      0000
 4814 06dc E9DFFAFF 		jmp	.L490
 4814      FF
 4815              	.LVL548:
 4816              		.p2align 4,,10
 4817 06e1 0F1F8000 		.p2align 3
 4817      000000
 4818              	.L553:
 4819              	.LBB287:
 4820              	.LBB266:
1211:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations &= ~(PNG_COMPOSE | PNG_BACKGROUND_EXPAND);
 4821              		.loc 1 1211 0
 4822 06e8 89D0     		movl	%edx, %eax
 4823 06ea E961FAFF 		jmp	.L480
 4823      FF
 4824              	.LVL549:
 4825 06ef 90       		.p2align 4,,10
 4826              		.p2align 3
 4827              	.L646:
 4828              	.LBE266:
 4829              	.LBE287:
 4830              	.LBB288:
1319:fltk-1.3.4-1/png/pngrtran.c **** 
 4831              		.loc 1 1319 0
 4832 06f0 E8000000 		call	png_reciprocal
 4832      00
 4833              	.LVL550:
 4834 06f5 8BBBB402 		movl	692(%rbx), %edi
 4834      0000
 4835 06fb 8983D804 		movl	%eax, 1240(%rbx)
 4835      0000
 4836 0701 E991F9FF 		jmp	.L461
 4836      FF
 4837              	.LVL551:
 4838 0706 662E0F1F 		.p2align 4,,10
 4838      84000000 
 4838      0000
 4839              		.p2align 3
 4840              	.L473:
 4841              	.LBE288:
 4842              	.LBB289:
 4843              	.LBB275:
1142:fltk-1.3.4-1/png/pngrtran.c **** 
 4844              		.loc 1 1142 0
 4845 0710 81A33001 		andl	$-8193, 304(%rbx)
 4845      0000FFDF 
 4845      FFFF
 4846              	.LVL552:
 4847              	.L546:
1145:fltk-1.3.4-1/png/pngrtran.c ****    }
 4848              		.loc 1 1145 0
 4849 071a 257FFE7F 		andl	$-8388993, %eax
 4849      FF
 4850 071f 89833401 		movl	%eax, 308(%rbx)
 4850      0000
 4851              	.LVL553:
 4852              	.L475:
1157:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_EXPAND) != 0)
 4853              		.loc 1 1157 0
 4854 0725 8B933401 		movl	308(%rbx), %edx
 4854      0000
 4855 072b 89D1     		movl	%edx, %ecx
 4856 072d 81E10011 		andl	$4352, %ecx
 4856      0000
 4857 0733 81F90011 		cmpl	$4352, %ecx
 4857      0000
 4858 0739 0F852BFA 		jne	.L478
 4858      FFFF
1162:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->background.green =
 4859              		.loc 1 1162 0
 4860 073f 0FB68B88 		movzbl	648(%rbx), %ecx
 4860      020000
 4861 0746 488D0C49 		leaq	(%rcx,%rcx,2), %rcx
 4862 074a 48038B60 		addq	608(%rbx), %rcx
 4862      020000
1169:fltk-1.3.4-1/png/pngrtran.c ****         {
 4863              		.loc 1 1169 0
 4864 0751 A9000008 		testl	$524288, %eax
 4864      00
1161:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette[png_ptr->background.index].red;
 4865              		.loc 1 1161 0
 4866 0756 0FB631   		movzbl	(%rcx), %esi
 4867 0759 6689B38A 		movw	%si, 650(%rbx)
 4867      020000
1163:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette[png_ptr->background.index].green;
 4868              		.loc 1 1163 0
 4869 0760 0FB67101 		movzbl	1(%rcx), %esi
 4870 0764 6689B38C 		movw	%si, 652(%rbx)
 4870      020000
1165:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette[png_ptr->background.index].blue;
 4871              		.loc 1 1165 0
 4872 076b 0FB64902 		movzbl	2(%rcx), %ecx
 4873 076f 66898B8E 		movw	%cx, 654(%rbx)
 4873      020000
1169:fltk-1.3.4-1/png/pngrtran.c ****         {
 4874              		.loc 1 1169 0
 4875 0776 0F84EEF9 		je	.L478
 4875      FFFF
1171:fltk-1.3.4-1/png/pngrtran.c ****            {
 4876              		.loc 1 1171 0
 4877 077c A9000000 		testl	$33554432, %eax
 4877      02
 4878 0781 0F85E3F9 		jne	.L478
 4878      FFFF
 4879              	.LVL554:
 4880              	.LBB274:
1178:fltk-1.3.4-1/png/pngrtran.c ****                  png_ptr->trans_alpha[i] = (png_byte)(255 -
 4881              		.loc 1 1178 0
 4882 0787 4585C9   		testl	%r9d, %r9d
 4883 078a 0F84DAF9 		je	.L478
 4883      FFFF
 4884 0790 31C0     		xorl	%eax, %eax
 4885              	.LVL555:
 4886              		.p2align 4,,10
 4887 0792 660F1F44 		.p2align 3
 4887      0000
 4888              	.L479:
1180:fltk-1.3.4-1/png/pngrtran.c ****            }
 4889              		.loc 1 1180 0
 4890 0798 4889C2   		movq	%rax, %rdx
 4891 079b 480393F8 		addq	760(%rbx), %rdx
 4891      020000
 4892 07a2 4883C001 		addq	$1, %rax
 4893              	.LVL556:
1178:fltk-1.3.4-1/png/pngrtran.c ****                  png_ptr->trans_alpha[i] = (png_byte)(255 -
 4894              		.loc 1 1178 0
 4895 07a6 4139C1   		cmpl	%eax, %r9d
1179:fltk-1.3.4-1/png/pngrtran.c ****                     png_ptr->trans_alpha[i]);
 4896              		.loc 1 1179 0
 4897 07a9 F612     		notb	(%rdx)
1178:fltk-1.3.4-1/png/pngrtran.c ****                  png_ptr->trans_alpha[i] = (png_byte)(255 -
 4898              		.loc 1 1178 0
 4899 07ab 7FEB     		jg	.L479
 4900 07ad 8B933401 		movl	308(%rbx), %edx
 4900      0000
 4901 07b3 89D0     		movl	%edx, %eax
 4902 07b5 E9B0F9FF 		jmp	.L478
 4902      FF
 4903              	.LVL557:
 4904 07ba 660F1F44 		.p2align 4,,10
 4904      0000
 4905              		.p2align 3
 4906              	.L655:
 4907 07c0 8B833401 		movl	308(%rbx), %eax
 4907      0000
 4908              	.L495:
 4909              	.LBE274:
 4910              	.LBE275:
 4911              	.LBE289:
1835:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE))
 4912              		.loc 1 1835 0
 4913 07c6 A880     		testb	$-128, %al
 4914 07c8 0F840FFB 		je	.L508
 4914      FFFF
1835:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE))
 4915              		.loc 1 1835 0 is_stmt 0 discriminator 1
 4916 07ce 80BB7702 		cmpb	$3, 631(%rbx)
 4916      000003
 4917 07d5 0F8518FB 		jne	.L455
 4917      FFFF
 4918              	.LBB290:
1839:fltk-1.3.4-1/png/pngrtran.c ****       png_color back;
 4919              		.loc 1 1839 0 is_stmt 1
 4920 07db 440FB783 		movzwl	624(%rbx), %r8d
 4920      70020000 
 4921              	.LVL558:
1843:fltk-1.3.4-1/png/pngrtran.c ****       back.green = (png_byte)png_ptr->background.green;
 4922              		.loc 1 1843 0
 4923 07e3 0FB7AB8A 		movzwl	650(%rbx), %ebp
 4923      020000
1844:fltk-1.3.4-1/png/pngrtran.c ****       back.blue  = (png_byte)png_ptr->background.blue;
 4924              		.loc 1 1844 0
 4925 07ea 440FB79B 		movzwl	652(%rbx), %r11d
 4925      8C020000 
1845:fltk-1.3.4-1/png/pngrtran.c **** 
 4926              		.loc 1 1845 0
 4927 07f2 440FB793 		movzwl	654(%rbx), %r10d
 4927      8E020000 
1841:fltk-1.3.4-1/png/pngrtran.c **** 
 4928              		.loc 1 1841 0
 4929 07fa 488BB360 		movq	608(%rbx), %rsi
 4929      020000
 4930              	.LVL559:
1847:fltk-1.3.4-1/png/pngrtran.c ****       {
 4931              		.loc 1 1847 0
 4932 0801 4585C0   		testl	%r8d, %r8d
1843:fltk-1.3.4-1/png/pngrtran.c ****       back.green = (png_byte)png_ptr->background.green;
 4933              		.loc 1 1843 0
 4934 0804 4189EC   		movl	%ebp, %r12d
 4935              	.LVL560:
1844:fltk-1.3.4-1/png/pngrtran.c ****       back.blue  = (png_byte)png_ptr->background.blue;
 4936              		.loc 1 1844 0
 4937 0807 4589DD   		movl	%r11d, %r13d
 4938              	.LVL561:
1845:fltk-1.3.4-1/png/pngrtran.c **** 
 4939              		.loc 1 1845 0
 4940 080a 4589D6   		movl	%r10d, %r14d
 4941              	.LVL562:
1847:fltk-1.3.4-1/png/pngrtran.c ****       {
 4942              		.loc 1 1847 0
 4943 080d 0F846306 		je	.L531
 4943      0000
 4944 0813 31FF     		xorl	%edi, %edi
 4945              	.LBB291:
1857:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.red);
 4946              		.loc 1 1857 0
 4947 0815 41B9FF00 		movl	$255, %r9d
 4947      0000
 4948 081b 400FB6ED 		movzbl	%bpl, %ebp
 4949              	.LVL563:
 4950              	.LBE291:
 4951              	.LBB292:
1860:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.green);
 4952              		.loc 1 1860 0
 4953 081f 450FB6DB 		movzbl	%r11b, %r11d
 4954              	.LVL564:
 4955              	.LBE292:
 4956              	.LBB293:
1863:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.blue);
 4957              		.loc 1 1863 0
 4958 0823 450FB6D2 		movzbl	%r10b, %r10d
 4959              	.LVL565:
 4960 0827 EB23     		jmp	.L534
 4961              	.LVL566:
 4962 0829 0F1F8000 		.p2align 4,,10
 4962      000000
 4963              		.p2align 3
 4964              	.L671:
 4965              	.LBE293:
1851:fltk-1.3.4-1/png/pngrtran.c ****          }
 4966              		.loc 1 1851 0
 4967 0830 448826   		movb	%r12b, (%rsi)
 4968 0833 44886E01 		movb	%r13b, 1(%rsi)
 4969 0837 44887602 		movb	%r14b, 2(%rsi)
 4970              	.L533:
 4971              	.LVL567:
 4972 083b 4883C701 		addq	$1, %rdi
 4973              	.LVL568:
 4974 083f 4883C603 		addq	$3, %rsi
1847:fltk-1.3.4-1/png/pngrtran.c ****       {
 4975              		.loc 1 1847 0 discriminator 2
 4976 0843 4139F8   		cmpl	%edi, %r8d
 4977 0846 0F8E2406 		jle	.L670
 4977      0000
 4978              	.L534:
 4979              	.LVL569:
1849:fltk-1.3.4-1/png/pngrtran.c ****          {
 4980              		.loc 1 1849 0
 4981 084c 488B83F8 		movq	760(%rbx), %rax
 4981      020000
 4982 0853 0FB60C38 		movzbl	(%rax,%rdi), %ecx
 4983 0857 84C9     		testb	%cl, %cl
 4984 0859 74D5     		je	.L671
1854:fltk-1.3.4-1/png/pngrtran.c ****          {
 4985              		.loc 1 1854 0
 4986 085b 80F9FF   		cmpb	$-1, %cl
 4987 085e 74DB     		je	.L533
 4988              	.LBB294:
1857:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.red);
 4989              		.loc 1 1857 0
 4990 0860 0FB6C1   		movzbl	%cl, %eax
 4991 0863 4489CA   		movl	%r9d, %edx
 4992 0866 29C2     		subl	%eax, %edx
 4993 0868 89D0     		movl	%edx, %eax
 4994 086a 0FAFC5   		imull	%ebp, %eax
 4995 086d 89C2     		movl	%eax, %edx
 4996 086f 89C8     		movl	%ecx, %eax
 4997 0871 F626     		mulb	(%rsi)
 4998 0873 8D840280 		leal	128(%rdx,%rax), %eax
 4998      000000
 4999              	.LVL570:
 5000 087a 0FB6D4   		movzbl	%ah, %edx
 5001 087d 0FB7C0   		movzwl	%ax, %eax
 5002 0880 01D0     		addl	%edx, %eax
 5003              	.LVL571:
 5004              	.LBE294:
 5005              	.LBB295:
1860:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.green);
 5006              		.loc 1 1860 0
 5007 0882 4489CA   		movl	%r9d, %edx
 5008              	.LBE295:
 5009              	.LBB296:
1857:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.red);
 5010              		.loc 1 1857 0
 5011 0885 C1F808   		sarl	$8, %eax
 5012 0888 8806     		movb	%al, (%rsi)
 5013              	.LBE296:
 5014              	.LBB297:
1860:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.green);
 5015              		.loc 1 1860 0
 5016 088a 488B83F8 		movq	760(%rbx), %rax
 5016      020000
 5017 0891 0FB60438 		movzbl	(%rax,%rdi), %eax
 5018 0895 29C2     		subl	%eax, %edx
 5019 0897 89C1     		movl	%eax, %ecx
 5020 0899 89D0     		movl	%edx, %eax
 5021 089b 410FAFC3 		imull	%r11d, %eax
 5022 089f 89C2     		movl	%eax, %edx
 5023 08a1 89C8     		movl	%ecx, %eax
 5024 08a3 F66601   		mulb	1(%rsi)
 5025 08a6 8D840280 		leal	128(%rdx,%rax), %eax
 5025      000000
 5026              	.LVL572:
 5027 08ad 0FB6D4   		movzbl	%ah, %edx
 5028 08b0 0FB7C0   		movzwl	%ax, %eax
 5029 08b3 01D0     		addl	%edx, %eax
 5030              	.LVL573:
 5031              	.LBE297:
 5032              	.LBB298:
1863:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.blue);
 5033              		.loc 1 1863 0
 5034 08b5 4489CA   		movl	%r9d, %edx
 5035              	.LBE298:
 5036              	.LBB299:
1860:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.green);
 5037              		.loc 1 1860 0
 5038 08b8 C1F808   		sarl	$8, %eax
 5039 08bb 884601   		movb	%al, 1(%rsi)
 5040              	.LBE299:
 5041              	.LBB300:
1863:fltk-1.3.4-1/png/pngrtran.c ****                 png_ptr->trans_alpha[i], back.blue);
 5042              		.loc 1 1863 0
 5043 08be 488B83F8 		movq	760(%rbx), %rax
 5043      020000
 5044 08c5 0FB60438 		movzbl	(%rax,%rdi), %eax
 5045 08c9 29C2     		subl	%eax, %edx
 5046 08cb 89C1     		movl	%eax, %ecx
 5047 08cd 89D0     		movl	%edx, %eax
 5048 08cf 410FAFC2 		imull	%r10d, %eax
 5049 08d3 89C2     		movl	%eax, %edx
 5050 08d5 89C8     		movl	%ecx, %eax
 5051 08d7 F66602   		mulb	2(%rsi)
 5052 08da 8D840280 		leal	128(%rdx,%rax), %eax
 5052      000000
 5053              	.LVL574:
 5054 08e1 0FB6D4   		movzbl	%ah, %edx
 5055 08e4 0FB7C0   		movzwl	%ax, %eax
 5056 08e7 01D0     		addl	%edx, %eax
 5057              	.LVL575:
 5058 08e9 C1F808   		sarl	$8, %eax
 5059 08ec 884602   		movb	%al, 2(%rsi)
 5060 08ef E947FFFF 		jmp	.L533
 5060      FF
 5061              	.LVL576:
 5062              		.p2align 4,,10
 5063 08f4 0F1F4000 		.p2align 3
 5064              	.L645:
 5065              	.LBE300:
 5066              	.LBE290:
 5067              	.LBB301:
 5068              	.LBB259:
 5069              	.LBB258:
1087:fltk-1.3.4-1/png/pngrtran.c **** }
 5070              		.loc 1 1087 0
 5071 08f8 8B7C2414 		movl	20(%rsp), %edi
 5072 08fc E8000000 		call	png_gamma_significant
 5072      00
 5073              	.LVL577:
 5074              	.LBE258:
 5075              	.LBE259:
1330:fltk-1.3.4-1/png/pngrtran.c **** 
 5076              		.loc 1 1330 0
 5077 0901 66838B22 		orw	$1, 1314(%rbx)
 5077      05000001 
1340:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->transformations |= PNG_GAMMA;
 5078              		.loc 1 1340 0
 5079 0909 85C0     		testl	%eax, %eax
 5080 090b 0F8547F7 		jne	.L459
 5080      FFFF
 5081 0911 8BBBB402 		movl	692(%rbx), %edi
 5081      0000
 5082 0917 E983F7FF 		jmp	.L545
 5082      FF
 5083              	.LVL578:
 5084 091c 0F1F4000 		.p2align 4,,10
 5085              		.p2align 3
 5086              	.L654:
 5087              	.LBE301:
1563:fltk-1.3.4-1/png/pngrtran.c ****           png_gamma_significant(png_ptr->screen_gamma) != 0
 5088              		.loc 1 1563 0
 5089 0920 8BBBD804 		movl	1240(%rbx), %edi
 5089      0000
 5090 0926 E8000000 		call	png_gamma_significant
 5090      00
 5091              	.LVL579:
1562:fltk-1.3.4-1/png/pngrtran.c ****          (png_gamma_significant(png_ptr->colorspace.gamma) != 0 ||
 5092              		.loc 1 1562 0
 5093 092b 85C0     		testl	%eax, %eax
 5094 092d 0F85BDF8 		jne	.L491
 5094      FFFF
1564:fltk-1.3.4-1/png/pngrtran.c **** #  ifdef PNG_READ_BACKGROUND_SUPPORTED
 5095              		.loc 1 1564 0
 5096 0933 8BBBB402 		movl	692(%rbx), %edi
 5096      0000
 5097 0939 E8000000 		call	png_gamma_significant
 5097      00
 5098              	.LVL580:
1563:fltk-1.3.4-1/png/pngrtran.c ****           png_gamma_significant(png_ptr->screen_gamma) != 0
 5099              		.loc 1 1563 0
 5100 093e 85C0     		testl	%eax, %eax
 5101 0940 0F85AAF8 		jne	.L491
 5101      FFFF
1566:fltk-1.3.4-1/png/pngrtran.c ****            png_gamma_significant(png_ptr->background_gamma) != 0)
 5102              		.loc 1 1566 0
 5103 0946 80BB8202 		cmpb	$3, 642(%rbx)
 5103      000003
 5104 094d 0F844E06 		je	.L493
 5104      0000
 5105              	.L496:
1569:fltk-1.3.4-1/png/pngrtran.c ****        png_gamma_significant(png_ptr->screen_gamma) != 0))
 5106              		.loc 1 1569 0
 5107 0953 8B833401 		movl	308(%rbx), %eax
 5107      0000
 5108 0959 A9000080 		testl	$8388608, %eax
 5108      00
 5109 095e 0F8462FE 		je	.L495
 5109      FFFF
 5110 0964 E96AF8FF 		jmp	.L494
 5110      FF
 5111 0969 0F1F8000 		.p2align 4,,10
 5111      000000
 5112              		.p2align 3
 5113              	.L652:
1514:fltk-1.3.4-1/png/pngrtran.c ****        png_ptr->bit_depth == 16)
 5114              		.loc 1 1514 0
 5115 0970 80BB7802 		cmpb	$16, 632(%rbx)
 5115      000010
 5116 0977 0F8517F8 		jne	.L486
 5116      FFFF
1523:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background.green =
 5117              		.loc 1 1523 0
 5118 097d 0FB7938A 		movzwl	650(%rbx), %edx
 5118      020000
 5119 0984 89D1     		movl	%edx, %ecx
 5120 0986 C1E108   		sall	$8, %ecx
 5121 0989 01CA     		addl	%ecx, %edx
 5122 098b 6689938A 		movw	%dx, 650(%rbx)
 5122      020000
1524:fltk-1.3.4-1/png/pngrtran.c ****          (png_uint_16)(png_ptr->background.green * 257);
 5123              		.loc 1 1524 0
 5124 0992 0FB7938C 		movzwl	652(%rbx), %edx
 5124      020000
 5125 0999 89D1     		movl	%edx, %ecx
 5126 099b C1E108   		sall	$8, %ecx
 5127 099e 01CA     		addl	%ecx, %edx
 5128 09a0 6689938C 		movw	%dx, 652(%rbx)
 5128      020000
1526:fltk-1.3.4-1/png/pngrtran.c ****       png_ptr->background.gray = (png_uint_16)(png_ptr->background.gray * 257);
 5129              		.loc 1 1526 0
 5130 09a7 0FB7938E 		movzwl	654(%rbx), %edx
 5130      020000
 5131 09ae 89D1     		movl	%edx, %ecx
 5132 09b0 C1E108   		sall	$8, %ecx
 5133 09b3 01CA     		addl	%ecx, %edx
 5134 09b5 6689938E 		movw	%dx, 654(%rbx)
 5134      020000
1527:fltk-1.3.4-1/png/pngrtran.c ****    }
 5135              		.loc 1 1527 0
 5136 09bc 0FB79390 		movzwl	656(%rbx), %edx
 5136      020000
 5137 09c3 89D1     		movl	%edx, %ecx
 5138 09c5 C1E108   		sall	$8, %ecx
 5139 09c8 01CA     		addl	%ecx, %edx
 5140 09ca 66899390 		movw	%dx, 656(%rbx)
 5140      020000
 5141 09d1 E9BEF7FF 		jmp	.L486
 5141      FF
 5142 09d6 662E0F1F 		.p2align 4,,10
 5142      84000000 
 5142      0000
 5143              		.p2align 3
 5144              	.L657:
1584:fltk-1.3.4-1/png/pngrtran.c ****                "libpng does not support gamma+background+rgb_to_gray");
 5145              		.loc 1 1584 0
 5146 09e0 BE000000 		movl	$.LC45, %esi
 5146      00
 5147 09e5 4889DF   		movq	%rbx, %rdi
 5148 09e8 E8000000 		call	png_warning
 5148      00
 5149              	.LVL581:
 5150 09ed E928F8FF 		jmp	.L497
 5150      FF
 5151              		.p2align 4,,10
 5152 09f2 660F1F44 		.p2align 3
 5152      0000
 5153              	.L658:
 5154              	.LBB302:
1596:fltk-1.3.4-1/png/pngrtran.c ****             {
 5155              		.loc 1 1596 0
 5156 09f8 0FB68382 		movzbl	642(%rbx), %eax
 5156      020000
1593:fltk-1.3.4-1/png/pngrtran.c ****             int num_palette = png_ptr->num_palette;
 5157              		.loc 1 1593 0
 5158 09ff 488BAB60 		movq	608(%rbx), %rbp
 5158      020000
 5159              	.LVL582:
1594:fltk-1.3.4-1/png/pngrtran.c ****             int i;
 5160              		.loc 1 1594 0
 5161 0a06 440FB7A3 		movzwl	616(%rbx), %r12d
 5161      68020000 
 5162              	.LVL583:
1596:fltk-1.3.4-1/png/pngrtran.c ****             {
 5163              		.loc 1 1596 0
 5164 0a0e 3C02     		cmpb	$2, %al
 5165 0a10 0F849A04 		je	.L672
 5165      0000
 5166              	.LBB303:
1611:fltk-1.3.4-1/png/pngrtran.c ****                {
 5167              		.loc 1 1611 0
 5168 0a16 3C01     		cmpb	$1, %al
 5169 0a18 0F841A03 		je	.L502
 5169      0000
 5170 0a1e 3C03     		cmpb	$3, %al
 5171 0a20 0F856A05 		jne	.L673
 5171      0000
1625:fltk-1.3.4-1/png/pngrtran.c ****                      gs = png_reciprocal2(png_ptr->background_gamma,
 5172              		.loc 1 1625 0
 5173 0a26 8BBB8402 		movl	644(%rbx), %edi
 5173      0000
 5174 0a2c E8000000 		call	png_reciprocal
 5174      00
 5175              	.LVL584:
1626:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->screen_gamma);
 5176              		.loc 1 1626 0
 5177 0a31 8BB3B402 		movl	692(%rbx), %esi
 5177      0000
 5178 0a37 8BBB8402 		movl	644(%rbx), %edi
 5178      0000
1625:fltk-1.3.4-1/png/pngrtran.c ****                      gs = png_reciprocal2(png_ptr->background_gamma,
 5179              		.loc 1 1625 0
 5180 0a3d 4189C6   		movl	%eax, %r14d
 5181              	.LVL585:
1626:fltk-1.3.4-1/png/pngrtran.c ****                         png_ptr->screen_gamma);
 5182              		.loc 1 1626 0
 5183 0a40 E8000000 		call	png_reciprocal2
 5183      00
 5184              	.LVL586:
 5185 0a45 4189C7   		movl	%eax, %r15d
 5186              	.LVL587:
 5187              	.L501:
1635:fltk-1.3.4-1/png/pngrtran.c ****                {
 5188              		.loc 1 1635 0
 5189 0a48 4489FF   		movl	%r15d, %edi
 5190 0a4b E8000000 		call	png_gamma_significant
 5190      00
 5191              	.LVL588:
 5192 0a50 85C0     		testl	%eax, %eax
 5193 0a52 0F85F804 		jne	.L674
 5193      0000
1647:fltk-1.3.4-1/png/pngrtran.c ****                   back.green = (png_byte)png_ptr->background.green;
 5194              		.loc 1 1647 0
 5195 0a58 0FB6838A 		movzbl	650(%rbx), %eax
 5195      020000
1648:fltk-1.3.4-1/png/pngrtran.c ****                   back.blue  = (png_byte)png_ptr->background.blue;
 5196              		.loc 1 1648 0
 5197 0a5f 440FB6AB 		movzbl	652(%rbx), %r13d
 5197      8C020000 
1649:fltk-1.3.4-1/png/pngrtran.c ****                }
 5198              		.loc 1 1649 0
 5199 0a67 440FB6BB 		movzbl	654(%rbx), %r15d
 5199      8E020000 
 5200              	.LVL589:
1647:fltk-1.3.4-1/png/pngrtran.c ****                   back.green = (png_byte)png_ptr->background.green;
 5201              		.loc 1 1647 0
 5202 0a6f 8844240E 		movb	%al, 14(%rsp)
 5203              	.LVL590:
 5204              	.L505:
1652:fltk-1.3.4-1/png/pngrtran.c ****                {
 5205              		.loc 1 1652 0
 5206 0a73 4489F7   		movl	%r14d, %edi
 5207 0a76 E8000000 		call	png_gamma_significant
 5207      00
 5208              	.LVL591:
 5209 0a7b 85C0     		testl	%eax, %eax
 5210 0a7d 0F857D04 		jne	.L675
 5210      0000
1664:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.green = (png_byte)png_ptr->background.green;
 5211              		.loc 1 1664 0
 5212 0a83 440FB69B 		movzbl	650(%rbx), %r11d
 5212      8A020000 
 5213              	.LVL592:
1665:fltk-1.3.4-1/png/pngrtran.c ****                   back_1.blue  = (png_byte)png_ptr->background.blue;
 5214              		.loc 1 1665 0
 5215 0a8b 440FB693 		movzbl	652(%rbx), %r10d
 5215      8C020000 
 5216              	.LVL593:
1666:fltk-1.3.4-1/png/pngrtran.c ****                }
 5217              		.loc 1 1666 0
 5218 0a93 0FB6838E 		movzbl	654(%rbx), %eax
 5218      020000
 5219              	.LVL594:
 5220              	.L500:
 5221              	.LBE303:
1670:fltk-1.3.4-1/png/pngrtran.c ****             {
 5222              		.loc 1 1670 0
 5223 0a9a 4531C0   		xorl	%r8d, %r8d
 5224 0a9d 31C9     		xorl	%ecx, %ecx
 5225 0a9f 4585E4   		testl	%r12d, %r12d
 5226 0aa2 4889EA   		movq	%rbp, %rdx
 5227 0aa5 0F846D03 		je	.L513
 5227      0000
 5228              	.LVL595:
 5229              	.LBB304:
 5230              	.LBB305:
1692:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].blue = png_ptr->gamma_from_1[w];
 5231              		.loc 1 1692 0
 5232 0aab 440FB6C8 		movzbl	%al, %r9d
 5233              	.LBE305:
 5234              	.LBB306:
1684:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].red = png_ptr->gamma_from_1[w];
 5235              		.loc 1 1684 0
 5236 0aaf BDFF0000 		movl	$255, %ebp
 5236      00
 5237              	.LBE306:
 5238              	.LBB307:
1692:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].blue = png_ptr->gamma_from_1[w];
 5239              		.loc 1 1692 0
 5240 0ab4 6644894C 		movw	%r9w, 12(%rsp)
 5240      240C
 5241 0aba EB48     		jmp	.L597
 5242              	.LVL596:
 5243 0abc 0F1F4000 		.p2align 4,,10
 5244              		.p2align 3
 5245              	.L676:
 5246              	.LBE307:
 5247              	.LBE304:
1673:fltk-1.3.4-1/png/pngrtran.c ****                {
 5248              		.loc 1 1673 0 discriminator 1
 5249 0ac0 488B83F8 		movq	760(%rbx), %rax
 5249      020000
 5250 0ac7 420FB634 		movzbl	(%rax,%r8), %esi
 5250      00
1672:fltk-1.3.4-1/png/pngrtran.c ****                    png_ptr->trans_alpha[i] != 0xff)
 5251              		.loc 1 1672 0 discriminator 1
 5252 0acc 4080FEFF 		cmpb	$-1, %sil
 5253 0ad0 743D     		je	.L509
1675:fltk-1.3.4-1/png/pngrtran.c ****                   {
 5254              		.loc 1 1675 0
 5255 0ad2 4084F6   		testb	%sil, %sil
 5256 0ad5 0F857502 		jne	.L510
 5256      0000
1677:fltk-1.3.4-1/png/pngrtran.c ****                   }
 5257              		.loc 1 1677 0
 5258 0adb 0FB64424 		movzbl	14(%rsp), %eax
 5258      0E
 5259 0ae0 44886A01 		movb	%r13b, 1(%rdx)
 5260 0ae4 44887A02 		movb	%r15b, 2(%rdx)
 5261 0ae8 8802     		movb	%al, (%rdx)
 5262 0aea 660F1F44 		.p2align 4,,10
 5262      0000
 5263              		.p2align 3
 5264              	.L511:
1670:fltk-1.3.4-1/png/pngrtran.c ****             {
 5265              		.loc 1 1670 0 discriminator 2
 5266 0af0 83C101   		addl	$1, %ecx
 5267              	.LVL597:
 5268 0af3 4983C001 		addq	$1, %r8
 5269 0af7 4883C203 		addq	$3, %rdx
 5270 0afb 4139CC   		cmpl	%ecx, %r12d
 5271 0afe 0F841403 		je	.L513
 5271      0000
 5272              	.LVL598:
 5273              	.L597:
1672:fltk-1.3.4-1/png/pngrtran.c ****                    png_ptr->trans_alpha[i] != 0xff)
 5274              		.loc 1 1672 0
 5275 0b04 0FB78370 		movzwl	624(%rbx), %eax
 5275      020000
 5276 0b0b 39C8     		cmpl	%ecx, %eax
 5277 0b0d 7FB1     		jg	.L676
 5278              	.L509:
1698:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i].green = png_ptr->gamma_table[palette[i].green];
 5279              		.loc 1 1698 0
 5280 0b0f 0FB602   		movzbl	(%rdx), %eax
 5281 0b12 488BB3B8 		movq	696(%rbx), %rsi
 5281      020000
 5282 0b19 0FB60406 		movzbl	(%rsi,%rax), %eax
 5283 0b1d 8802     		movb	%al, (%rdx)
1699:fltk-1.3.4-1/png/pngrtran.c ****                   palette[i].blue = png_ptr->gamma_table[palette[i].blue];
 5284              		.loc 1 1699 0
 5285 0b1f 0FB64201 		movzbl	1(%rdx), %eax
 5286 0b23 488BB3B8 		movq	696(%rbx), %rsi
 5286      020000
 5287 0b2a 0FB60406 		movzbl	(%rsi,%rax), %eax
 5288 0b2e 884201   		movb	%al, 1(%rdx)
1700:fltk-1.3.4-1/png/pngrtran.c ****                }
 5289              		.loc 1 1700 0
 5290 0b31 0FB64202 		movzbl	2(%rdx), %eax
 5291 0b35 488BB3B8 		movq	696(%rbx), %rsi
 5291      020000
 5292 0b3c 0FB60406 		movzbl	(%rsi,%rax), %eax
 5293 0b40 884202   		movb	%al, 2(%rdx)
 5294 0b43 EBAB     		jmp	.L511
 5295              	.LVL599:
 5296              		.p2align 4,,10
 5297 0b45 0F1F00   		.p2align 3
 5298              	.L538:
 5299              	.LBE302:
 5300              	.LBB318:
1896:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
 5301              		.loc 1 1896 0
 5302 0b48 0FB693E9 		movzbl	745(%rbx), %edx
 5302      020000
 5303 0b4f B8080000 		movl	$8, %eax
 5303      00
 5304 0b54 89C1     		movl	%eax, %ecx
 5305              	.LVL600:
 5306 0b56 29D1     		subl	%edx, %ecx
 5307              	.LVL601:
1897:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
 5308              		.loc 1 1897 0
 5309 0b58 8D51FF   		leal	-1(%rcx), %edx
 5310 0b5b 83FA06   		cmpl	$6, %edx
 5311 0b5e 0F867401 		jbe	.L677
 5311      0000
1906:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
 5312              		.loc 1 1906 0
 5313 0b64 0FB693EA 		movzbl	746(%rbx), %edx
 5313      020000
 5314 0b6b 29D0     		subl	%edx, %eax
 5315 0b6d 89C1     		movl	%eax, %ecx
 5316              	.LVL602:
1907:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
 5317              		.loc 1 1907 0
 5318 0b6f 8D40FF   		leal	-1(%rax), %eax
 5319              	.LVL603:
 5320 0b72 83F806   		cmpl	$6, %eax
 5321 0b75 0F8778F7 		ja	.L455
 5321      FFFF
 5322              	.LVL604:
1908:fltk-1.3.4-1/png/pngrtran.c ****          {
 5323              		.loc 1 1908 0 discriminator 1
 5324 0b7b 4585C0   		testl	%r8d, %r8d
 5325 0b7e 0F85FDFA 		jne	.L551
 5325      FFFF
 5326 0b84 E96AF7FF 		jmp	.L455
 5326      FF
 5327              	.LVL605:
 5328 0b89 0F1F8000 		.p2align 4,,10
 5328      000000
 5329              		.p2align 3
 5330              	.L659:
 5331              	.LBE318:
 5332              	.LBB319:
1723:fltk-1.3.4-1/png/pngrtran.c ****                   /* gs = PNG_FP_1; */
 5333              		.loc 1 1723 0
 5334 0b90 448BA3B4 		movl	692(%rbx), %r12d
 5334      020000
 5335              	.LVL606:
1718:fltk-1.3.4-1/png/pngrtran.c **** 
 5336              		.loc 1 1718 0
 5337 0b97 BDA08601 		movl	$100000, %ebp
 5337      00
1725:fltk-1.3.4-1/png/pngrtran.c **** 
 5338              		.loc 1 1725 0
 5339 0b9c E9E8F6FF 		jmp	.L518
 5339      FF
 5340              	.LVL607:
 5341              		.p2align 4,,10
 5342 0ba1 0F1F8000 		.p2align 3
 5342      000000
 5343              	.L516:
1734:fltk-1.3.4-1/png/pngrtran.c ****                   gs = png_reciprocal2(png_ptr->background_gamma,
 5344              		.loc 1 1734 0
 5345 0ba8 8BBB8402 		movl	644(%rbx), %edi
 5345      0000
 5346 0bae E8000000 		call	png_reciprocal
 5346      00
 5347              	.LVL608:
1735:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->screen_gamma);
 5348              		.loc 1 1735 0
 5349 0bb3 8BB3B402 		movl	692(%rbx), %esi
 5349      0000
 5350 0bb9 8BBB8402 		movl	644(%rbx), %edi
 5350      0000
1734:fltk-1.3.4-1/png/pngrtran.c ****                   gs = png_reciprocal2(png_ptr->background_gamma,
 5351              		.loc 1 1734 0
 5352 0bbf 4189C4   		movl	%eax, %r12d
 5353              	.LVL609:
1735:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->screen_gamma);
 5354              		.loc 1 1735 0
 5355 0bc2 E8000000 		call	png_reciprocal2
 5355      00
 5356              	.LVL610:
 5357 0bc7 89C5     		movl	%eax, %ebp
 5358              	.LVL611:
1737:fltk-1.3.4-1/png/pngrtran.c **** 
 5359              		.loc 1 1737 0
 5360 0bc9 E9BBF6FF 		jmp	.L518
 5360      FF
 5361              	.LVL612:
 5362 0bce 6690     		.p2align 4,,10
 5363              		.p2align 3
 5364              	.L661:
1751:fltk-1.3.4-1/png/pngrtran.c ****                    png_ptr->background.gray, gs);
 5365              		.loc 1 1751 0
 5366 0bd0 0FB7B390 		movzwl	656(%rbx), %esi
 5366      020000
 5367 0bd7 89EA     		movl	%ebp, %edx
 5368 0bd9 4889DF   		movq	%rbx, %rdi
 5369 0bdc E8000000 		call	png_gamma_correct
 5369      00
 5370              	.LVL613:
 5371 0be1 66898390 		movw	%ax, 656(%rbx)
 5371      020000
 5372 0be8 E9C3F6FF 		jmp	.L520
 5372      FF
 5373              	.LVL614:
 5374 0bed 0F1F00   		.p2align 4,,10
 5375              		.p2align 3
 5376              	.L660:
1747:fltk-1.3.4-1/png/pngrtran.c ****                    png_ptr->background.gray, g);
 5377              		.loc 1 1747 0
 5378 0bf0 0FB7B390 		movzwl	656(%rbx), %esi
 5378      020000
 5379 0bf7 4489E2   		movl	%r12d, %edx
 5380 0bfa 4889DF   		movq	%rbx, %rdi
 5381 0bfd E8000000 		call	png_gamma_correct
 5381      00
 5382              	.LVL615:
 5383 0c02 6689839A 		movw	%ax, 666(%rbx)
 5383      020000
 5384 0c09 E999F6FF 		jmp	.L519
 5384      FF
 5385 0c0e 6690     		.p2align 4,,10
 5386              		.p2align 3
 5387              	.L664:
1773:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.red, gs);
 5388              		.loc 1 1773 0
 5389 0c10 0FB7B38A 		movzwl	650(%rbx), %esi
 5389      020000
 5390 0c17 89EA     		movl	%ebp, %edx
 5391 0c19 4889DF   		movq	%rbx, %rdi
 5392 0c1c E8000000 		call	png_gamma_correct
 5392      00
 5393              	.LVL616:
1776:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, gs);
 5394              		.loc 1 1776 0
 5395 0c21 0FB7B38C 		movzwl	652(%rbx), %esi
 5395      020000
 5396 0c28 89EA     		movl	%ebp, %edx
 5397 0c2a 4889DF   		movq	%rbx, %rdi
1773:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.red, gs);
 5398              		.loc 1 1773 0
 5399 0c2d 6689838A 		movw	%ax, 650(%rbx)
 5399      020000
1776:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, gs);
 5400              		.loc 1 1776 0
 5401 0c34 E8000000 		call	png_gamma_correct
 5401      00
 5402              	.LVL617:
1779:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.blue, gs);
 5403              		.loc 1 1779 0
 5404 0c39 0FB7B38E 		movzwl	654(%rbx), %esi
 5404      020000
1776:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, gs);
 5405              		.loc 1 1776 0
 5406 0c40 6689838C 		movw	%ax, 652(%rbx)
 5406      020000
1779:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.blue, gs);
 5407              		.loc 1 1779 0
 5408 0c47 89EA     		movl	%ebp, %edx
 5409 0c49 4889DF   		movq	%rbx, %rdi
 5410 0c4c E8000000 		call	png_gamma_correct
 5410      00
 5411              	.LVL618:
 5412 0c51 6689838E 		movw	%ax, 654(%rbx)
 5412      020000
 5413 0c58 E979F6FF 		jmp	.L524
 5413      FF
 5414 0c5d 0F1F00   		.p2align 4,,10
 5415              		.p2align 3
 5416              	.L663:
1761:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.red, g);
 5417              		.loc 1 1761 0
 5418 0c60 4489E2   		movl	%r12d, %edx
 5419 0c63 4889DF   		movq	%rbx, %rdi
 5420 0c66 E8000000 		call	png_gamma_correct
 5420      00
 5421              	.LVL619:
1764:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, g);
 5422              		.loc 1 1764 0
 5423 0c6b 0FB7B38C 		movzwl	652(%rbx), %esi
 5423      020000
 5424 0c72 4489E2   		movl	%r12d, %edx
 5425 0c75 4889DF   		movq	%rbx, %rdi
1761:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.red, g);
 5426              		.loc 1 1761 0
 5427 0c78 66898394 		movw	%ax, 660(%rbx)
 5427      020000
1764:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, g);
 5428              		.loc 1 1764 0
 5429 0c7f E8000000 		call	png_gamma_correct
 5429      00
 5430              	.LVL620:
1767:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.blue, g);
 5431              		.loc 1 1767 0
 5432 0c84 0FB7B38E 		movzwl	654(%rbx), %esi
 5432      020000
1764:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.green, g);
 5433              		.loc 1 1764 0
 5434 0c8b 66898396 		movw	%ax, 662(%rbx)
 5434      020000
1767:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->background.blue, g);
 5435              		.loc 1 1767 0
 5436 0c92 4489E2   		movl	%r12d, %edx
 5437 0c95 4889DF   		movq	%rbx, %rdi
 5438 0c98 E8000000 		call	png_gamma_correct
 5438      00
 5439              	.LVL621:
 5440 0c9d 66898398 		movw	%ax, 664(%rbx)
 5440      020000
 5441 0ca4 E924F6FF 		jmp	.L523
 5441      FF
 5442              	.LVL622:
 5443 0ca9 0F1F8000 		.p2align 4,,10
 5443      000000
 5444              		.p2align 3
 5445              	.L668:
 5446              	.LBE319:
1805:fltk-1.3.4-1/png/pngrtran.c ****          (png_ptr->transformations & PNG_RGB_TO_GRAY) == 0)
 5447              		.loc 1 1805 0 discriminator 1
 5448 0cb0 F7C20000 		testl	$6291456, %edx
 5448      6000
 5449 0cb6 0F842AF7 		je	.L526
 5449      FFFF
1873:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_EXPAND) == 0 &&
 5450              		.loc 1 1873 0
 5451 0cbc 89D0     		movl	%edx, %eax
 5452 0cbe 25081000 		andl	$4104, %eax
 5452      00
 5453 0cc3 83F808   		cmpl	$8, %eax
 5454 0cc6 0F8527F6 		jne	.L455
 5454      FFFF
 5455 0ccc E9F4F8FF 		jmp	.L548
 5455      FF
 5456              	.LVL623:
 5457              		.p2align 4,,10
 5458 0cd1 0F1F8000 		.p2align 3
 5458      000000
 5459              	.L677:
 5460              	.LBB320:
1898:fltk-1.3.4-1/png/pngrtran.c ****          {
 5461              		.loc 1 1898 0 discriminator 1
 5462 0cd8 4585C0   		testl	%r8d, %r8d
 5463 0cdb 0F855DF9 		jne	.L549
 5463      FFFF
 5464 0ce1 E90DF6FF 		jmp	.L455
 5464      FF
 5465              	.LVL624:
 5466 0ce6 662E0F1F 		.p2align 4,,10
 5466      84000000 
 5466      0000
 5467              		.p2align 3
 5468              	.L667:
 5469              	.LBE320:
1455:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->background.red == png_ptr->background.blue)
 5470              		.loc 1 1455 0 discriminator 1
 5471 0cf0 663B938E 		cmpw	654(%rbx), %dx
 5471      020000
 5472 0cf7 0F8547F6 		jne	.L637
 5472      FFFF
1458:fltk-1.3.4-1/png/pngrtran.c ****             png_ptr->background.gray = png_ptr->background.red;
 5473              		.loc 1 1458 0
 5474 0cfd 818B2C01 		orl	$2048, 300(%rbx)
 5474      00000008 
 5474      0000
1459:fltk-1.3.4-1/png/pngrtran.c ****          }
 5475              		.loc 1 1459 0
 5476 0d07 66899390 		movw	%dx, 656(%rbx)
 5476      020000
 5477 0d0e E931F6FF 		jmp	.L637
 5477      FF
 5478              	.LVL625:
 5479              		.p2align 4,,10
 5480 0d13 0F1F4400 		.p2align 3
 5480      00
 5481              	.L669:
 5482              	.LBB321:
1906:fltk-1.3.4-1/png/pngrtran.c ****       if (shift > 0 && shift < 8)
 5483              		.loc 1 1906 0
 5484 0d18 0FB693EA 		movzbl	746(%rbx), %edx
 5484      020000
 5485 0d1f 29D0     		subl	%edx, %eax
 5486 0d21 89C1     		movl	%eax, %ecx
 5487              	.LVL626:
1907:fltk-1.3.4-1/png/pngrtran.c ****          for (i=0; i<istop; ++i)
 5488              		.loc 1 1907 0
 5489 0d23 8D40FF   		leal	-1(%rax), %eax
 5490              	.LVL627:
 5491 0d26 83F806   		cmpl	$6, %eax
 5492 0d29 0F8652F9 		jbe	.L551
 5492      FFFF
 5493 0d2f E9BFF5FF 		jmp	.L455
 5493      FF
 5494              	.LVL628:
 5495              		.p2align 4,,10
 5496 0d34 0F1F4000 		.p2align 3
 5497              	.L502:
 5498              	.LBE321:
 5499              	.LBB322:
 5500              	.LBB315:
1614:fltk-1.3.4-1/png/pngrtran.c ****                      gs = PNG_FP_1;
 5501              		.loc 1 1614 0
 5502 0d38 448BB3B4 		movl	692(%rbx), %r14d
 5502      020000
 5503              	.LVL629:
1615:fltk-1.3.4-1/png/pngrtran.c ****                      break;
 5504              		.loc 1 1615 0
 5505 0d3f 41BFA086 		movl	$100000, %r15d
 5505      0100
1616:fltk-1.3.4-1/png/pngrtran.c **** 
 5506              		.loc 1 1616 0
 5507 0d45 E9FEFCFF 		jmp	.L501
 5507      FF
 5508              	.LVL630:
 5509 0d4a 660F1F44 		.p2align 4,,10
 5509      0000
 5510              		.p2align 3
 5511              	.L510:
 5512              	.LBE315:
 5513              	.LBB316:
1683:fltk-1.3.4-1/png/pngrtran.c ****                      png_composite(w, v, png_ptr->trans_alpha[i], back_1.red);
 5514              		.loc 1 1683 0
 5515 0d50 440FB632 		movzbl	(%rdx), %r14d
 5516              	.LVL631:
 5517              	.LBB308:
1684:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].red = png_ptr->gamma_from_1[w];
 5518              		.loc 1 1684 0
 5519 0d54 4C8B8BD0 		movq	720(%rbx), %r9
 5519      020000
 5520 0d5b 400FB6C6 		movzbl	%sil, %eax
 5521 0d5f 89EF     		movl	%ebp, %edi
 5522 0d61 29C7     		subl	%eax, %edi
 5523 0d63 89F0     		movl	%esi, %eax
 5524 0d65 410FAFFB 		imull	%r11d, %edi
 5525 0d69 43F62431 		mulb	(%r9,%r14)
 5526              	.LBE308:
1687:fltk-1.3.4-1/png/pngrtran.c ****                      png_composite(w, v, png_ptr->trans_alpha[i], back_1.green);
 5527              		.loc 1 1687 0
 5528 0d6d 440FB672 		movzbl	1(%rdx), %r14d
 5528      01
 5529              	.LVL632:
 5530              	.LBB309:
1684:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].red = png_ptr->gamma_from_1[w];
 5531              		.loc 1 1684 0
 5532 0d72 8D840780 		leal	128(%rdi,%rax), %eax
 5532      000000
 5533              	.LVL633:
 5534              	.LBE309:
1685:fltk-1.3.4-1/png/pngrtran.c **** 
 5535              		.loc 1 1685 0
 5536 0d79 0FB6F4   		movzbl	%ah, %esi
 5537 0d7c 4801F0   		addq	%rsi, %rax
 5538              	.LVL634:
 5539 0d7f 488BB3C8 		movq	712(%rbx), %rsi
 5539      020000
 5540 0d86 0FB6C4   		movzbl	%ah, %eax
 5541 0d89 0FB60406 		movzbl	(%rsi,%rax), %eax
 5542              	.LBB310:
1688:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].green = png_ptr->gamma_from_1[w];
 5543              		.loc 1 1688 0
 5544 0d8d 89EE     		movl	%ebp, %esi
 5545              	.LBE310:
1685:fltk-1.3.4-1/png/pngrtran.c **** 
 5546              		.loc 1 1685 0
 5547 0d8f 8802     		movb	%al, (%rdx)
 5548              	.LVL635:
 5549              	.LBB311:
1688:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].green = png_ptr->gamma_from_1[w];
 5550              		.loc 1 1688 0
 5551 0d91 488B83F8 		movq	760(%rbx), %rax
 5551      020000
 5552 0d98 4C8B8BD0 		movq	720(%rbx), %r9
 5552      020000
 5553 0d9f 420FB604 		movzbl	(%rax,%r8), %eax
 5553      00
 5554 0da4 29C6     		subl	%eax, %esi
 5555 0da6 43F62431 		mulb	(%r9,%r14)
 5556 0daa 410FAFF2 		imull	%r10d, %esi
 5557              	.LBE311:
1691:fltk-1.3.4-1/png/pngrtran.c ****                      png_composite(w, v, png_ptr->trans_alpha[i], back_1.blue);
 5558              		.loc 1 1691 0
 5559 0dae 440FB672 		movzbl	2(%rdx), %r14d
 5559      02
 5560              	.LBB312:
1688:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].green = png_ptr->gamma_from_1[w];
 5561              		.loc 1 1688 0
 5562 0db3 8D840680 		leal	128(%rsi,%rax), %eax
 5562      000000
 5563              	.LVL636:
 5564              	.LBE312:
1689:fltk-1.3.4-1/png/pngrtran.c **** 
 5565              		.loc 1 1689 0
 5566 0dba 0FB6F4   		movzbl	%ah, %esi
 5567 0dbd 4801F0   		addq	%rsi, %rax
 5568              	.LVL637:
 5569 0dc0 488BB3C8 		movq	712(%rbx), %rsi
 5569      020000
 5570 0dc7 0FB6C4   		movzbl	%ah, %eax
 5571 0dca 0FB60406 		movzbl	(%rsi,%rax), %eax
 5572              	.LBB313:
1692:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].blue = png_ptr->gamma_from_1[w];
 5573              		.loc 1 1692 0
 5574 0dce 89EE     		movl	%ebp, %esi
 5575              	.LBE313:
1689:fltk-1.3.4-1/png/pngrtran.c **** 
 5576              		.loc 1 1689 0
 5577 0dd0 884201   		movb	%al, 1(%rdx)
 5578              	.LVL638:
 5579              	.LBB314:
1692:fltk-1.3.4-1/png/pngrtran.c ****                      palette[i].blue = png_ptr->gamma_from_1[w];
 5580              		.loc 1 1692 0
 5581 0dd3 488B83F8 		movq	760(%rbx), %rax
 5581      020000
 5582 0dda 4C8B8BD0 		movq	720(%rbx), %r9
 5582      020000
 5583 0de1 420FB604 		movzbl	(%rax,%r8), %eax
 5583      00
 5584 0de6 29C6     		subl	%eax, %esi
 5585 0de8 43F62431 		mulb	(%r9,%r14)
 5586 0dec 660FAF74 		imulw	12(%rsp), %si
 5586      240C
 5587 0df2 8D840680 		leal	128(%rsi,%rax), %eax
 5587      000000
 5588              	.LVL639:
 5589              	.LBE314:
1693:fltk-1.3.4-1/png/pngrtran.c ****                   }
 5590              		.loc 1 1693 0
 5591 0df9 0FB6F4   		movzbl	%ah, %esi
 5592 0dfc 4801F0   		addq	%rsi, %rax
 5593              	.LVL640:
 5594 0dff 488BB3C8 		movq	712(%rbx), %rsi
 5594      020000
 5595 0e06 0FB6C4   		movzbl	%ah, %eax
 5596 0e09 0FB60406 		movzbl	(%rsi,%rax), %eax
 5597 0e0d 884202   		movb	%al, 2(%rdx)
 5598 0e10 E9DBFCFF 		jmp	.L511
 5598      FF
 5599              	.LVL641:
 5600              		.p2align 4,,10
 5601 0e15 0F1F00   		.p2align 3
 5602              	.L513:
 5603              	.LBE316:
1710:fltk-1.3.4-1/png/pngrtran.c ****          } /* color_type == PNG_COLOR_TYPE_PALETTE */
 5604              		.loc 1 1710 0
 5605 0e18 81A33401 		andl	$-8321, 308(%rbx)
 5605      00007FDF 
 5605      FFFF
 5606              	.LVL642:
 5607              	.LBE322:
 5608 0e22 E9B6F4FF 		jmp	.L508
 5608      FF
 5609              	.LVL643:
 5610 0e27 660F1F84 		.p2align 4,,10
 5610      00000000 
 5610      00
 5611              		.p2align 3
 5612              	.L662:
 5613              	.LBB323:
1754:fltk-1.3.4-1/png/pngrtran.c ****                 (png_ptr->background.red != png_ptr->background.blue) ||
 5614              		.loc 1 1754 0 discriminator 1
 5615 0e30 663BB38E 		cmpw	654(%rbx), %si
 5615      020000
 5616 0e37 0F8587F4 		jne	.L521
 5616      FFFF
1755:fltk-1.3.4-1/png/pngrtran.c ****                 (png_ptr->background.red != png_ptr->background.gray))
 5617              		.loc 1 1755 0
 5618 0e3d 663BB390 		cmpw	656(%rbx), %si
 5618      020000
 5619 0e44 0F857AF4 		jne	.L521
 5619      FFFF
1788:fltk-1.3.4-1/png/pngrtran.c **** 
 5620              		.loc 1 1788 0
 5621 0e4a 0FB7839A 		movzwl	666(%rbx), %eax
 5621      020000
 5622 0e51 66898398 		movw	%ax, 664(%rbx)
 5622      020000
 5623 0e58 66898396 		movw	%ax, 662(%rbx)
 5623      020000
1787:fltk-1.3.4-1/png/pngrtran.c ****                    = png_ptr->background_1.blue = png_ptr->background_1.gray;
 5624              		.loc 1 1787 0
 5625 0e5f 66898394 		movw	%ax, 660(%rbx)
 5625      020000
 5626 0e66 E96BF4FF 		jmp	.L524
 5626      FF
 5627              	.LVL644:
 5628 0e6b 0F1F4400 		.p2align 4,,10
 5628      00
 5629              		.p2align 3
 5630              	.L670:
 5631 0e70 8B833401 		movl	308(%rbx), %eax
 5631      0000
 5632              	.L531:
 5633              	.LBE323:
 5634              	.LBB324:
1868:fltk-1.3.4-1/png/pngrtran.c ****    }
 5635              		.loc 1 1868 0
 5636 0e76 247F     		andb	$127, %al
 5637 0e78 89833401 		movl	%eax, 308(%rbx)
 5637      0000
 5638              	.LVL645:
 5639 0e7e E95AF4FF 		jmp	.L508
 5639      FF
 5640              	.LVL646:
 5641              		.p2align 4,,10
 5642 0e83 0F1F4400 		.p2align 3
 5642      00
 5643              	.L483:
 5644              	.LBE324:
 5645              	.LBB325:
 5646              	.LBB267:
 5647              	.LBB264:
1247:fltk-1.3.4-1/png/pngrtran.c ****                trans_gray *= 0x11;
 5648              		.loc 1 1247 0
 5649 0e88 89CF     		movl	%ecx, %edi
 5650 0e8a C1E704   		sall	$4, %edi
 5651 0e8d 01F9     		addl	%edi, %ecx
 5652              	.LVL647:
1248:fltk-1.3.4-1/png/pngrtran.c ****                break;
 5653              		.loc 1 1248 0
 5654 0e8f 89F7     		movl	%esi, %edi
 5655 0e91 C1E704   		sall	$4, %edi
 5656 0e94 01FE     		addl	%edi, %esi
 5657              	.LVL648:
 5658 0e96 E9DFF6FF 		jmp	.L481
 5658      FF
 5659 0e9b 0F1F4400 		.p2align 4,,10
 5659      00
 5660              		.p2align 3
 5661              	.L482:
1242:fltk-1.3.4-1/png/pngrtran.c ****                trans_gray *= 0x55;
 5662              		.loc 1 1242 0
 5663 0ea0 6BC955   		imull	$85, %ecx, %ecx
 5664              	.LVL649:
1243:fltk-1.3.4-1/png/pngrtran.c ****                break;
 5665              		.loc 1 1243 0
 5666 0ea3 6BF655   		imull	$85, %esi, %esi
 5667              	.LVL650:
 5668 0ea6 E9CFF6FF 		jmp	.L481
 5668      FF
 5669              	.LVL651:
 5670 0eab 0F1F4400 		.p2align 4,,10
 5670      00
 5671              		.p2align 3
 5672              	.L672:
 5673              	.LBE264:
 5674              	.LBE267:
 5675              	.LBE325:
 5676              	.LBB326:
1599:fltk-1.3.4-1/png/pngrtran.c ****                back.green = png_ptr->gamma_table[png_ptr->background.green];
 5677              		.loc 1 1599 0
 5678 0eb0 0FB7B38A 		movzwl	650(%rbx), %esi
 5678      020000
 5679 0eb7 488B83B8 		movq	696(%rbx), %rax
 5679      020000
1600:fltk-1.3.4-1/png/pngrtran.c ****                back.blue = png_ptr->gamma_table[png_ptr->background.blue];
 5680              		.loc 1 1600 0
 5681 0ebe 0FB78B8C 		movzwl	652(%rbx), %ecx
 5681      020000
1601:fltk-1.3.4-1/png/pngrtran.c **** 
 5682              		.loc 1 1601 0
 5683 0ec5 0FB7938E 		movzwl	654(%rbx), %edx
 5683      020000
1599:fltk-1.3.4-1/png/pngrtran.c ****                back.green = png_ptr->gamma_table[png_ptr->background.green];
 5684              		.loc 1 1599 0
 5685 0ecc 0FB63C30 		movzbl	(%rax,%rsi), %edi
1600:fltk-1.3.4-1/png/pngrtran.c ****                back.blue = png_ptr->gamma_table[png_ptr->background.blue];
 5686              		.loc 1 1600 0
 5687 0ed0 440FB62C 		movzbl	(%rax,%rcx), %r13d
 5687      08
1601:fltk-1.3.4-1/png/pngrtran.c **** 
 5688              		.loc 1 1601 0
 5689 0ed5 440FB63C 		movzbl	(%rax,%rdx), %r15d
 5689      10
1603:fltk-1.3.4-1/png/pngrtran.c ****                back_1.green = png_ptr->gamma_to_1[png_ptr->background.green];
 5690              		.loc 1 1603 0
 5691 0eda 488B83D0 		movq	720(%rbx), %rax
 5691      020000
1599:fltk-1.3.4-1/png/pngrtran.c ****                back.green = png_ptr->gamma_table[png_ptr->background.green];
 5692              		.loc 1 1599 0
 5693 0ee1 40887C24 		movb	%dil, 14(%rsp)
 5693      0E
 5694              	.LVL652:
1603:fltk-1.3.4-1/png/pngrtran.c ****                back_1.green = png_ptr->gamma_to_1[png_ptr->background.green];
 5695              		.loc 1 1603 0
 5696 0ee6 440FB61C 		movzbl	(%rax,%rsi), %r11d
 5696      30
 5697              	.LVL653:
1604:fltk-1.3.4-1/png/pngrtran.c ****                back_1.blue = png_ptr->gamma_to_1[png_ptr->background.blue];
 5698              		.loc 1 1604 0
 5699 0eeb 440FB614 		movzbl	(%rax,%rcx), %r10d
 5699      08
 5700              	.LVL654:
1605:fltk-1.3.4-1/png/pngrtran.c ****             }
 5701              		.loc 1 1605 0
 5702 0ef0 0FB60410 		movzbl	(%rax,%rdx), %eax
 5703              	.LVL655:
 5704 0ef4 E9A1FBFF 		jmp	.L500
 5704      FF
 5705              	.LVL656:
 5706 0ef9 0F1F8000 		.p2align 4,,10
 5706      000000
 5707              		.p2align 3
 5708              	.L675:
 5709              	.LBB317:
1654:fltk-1.3.4-1/png/pngrtran.c ****                      g);
 5710              		.loc 1 1654 0
 5711 0f00 0FB7BB8A 		movzwl	650(%rbx), %edi
 5711      020000
 5712 0f07 4489F6   		movl	%r14d, %esi
 5713 0f0a E8000000 		call	png_gamma_8bit_correct
 5713      00
 5714              	.LVL657:
1656:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->background.green, g);
 5715              		.loc 1 1656 0
 5716 0f0f 0FB7BB8C 		movzwl	652(%rbx), %edi
 5716      020000
 5717 0f16 4489F6   		movl	%r14d, %esi
1654:fltk-1.3.4-1/png/pngrtran.c ****                      g);
 5718              		.loc 1 1654 0
 5719 0f19 8844240F 		movb	%al, 15(%rsp)
 5720              	.LVL658:
1656:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->background.green, g);
 5721              		.loc 1 1656 0
 5722 0f1d E8000000 		call	png_gamma_8bit_correct
 5722      00
 5723              	.LVL659:
1658:fltk-1.3.4-1/png/pngrtran.c ****                      g);
 5724              		.loc 1 1658 0
 5725 0f22 0FB7BB8E 		movzwl	654(%rbx), %edi
 5725      020000
 5726 0f29 4489F6   		movl	%r14d, %esi
1656:fltk-1.3.4-1/png/pngrtran.c ****                      png_ptr->background.green, g);
 5727              		.loc 1 1656 0
 5728 0f2c 8844240C 		movb	%al, 12(%rsp)
 5729              	.LVL660:
1658:fltk-1.3.4-1/png/pngrtran.c ****                      g);
 5730              		.loc 1 1658 0
 5731 0f30 E8000000 		call	png_gamma_8bit_correct
 5731      00
 5732              	.LVL661:
 5733 0f35 440FB654 		movzbl	12(%rsp), %r10d
 5733      240C
 5734 0f3b 440FB65C 		movzbl	15(%rsp), %r11d
 5734      240F
 5735 0f41 E954FBFF 		jmp	.L500
 5735      FF
 5736              	.LVL662:
 5737 0f46 662E0F1F 		.p2align 4,,10
 5737      84000000 
 5737      0000
 5738              		.p2align 3
 5739              	.L674:
1637:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
 5740              		.loc 1 1637 0
 5741 0f50 0FB7BB8A 		movzwl	650(%rbx), %edi
 5741      020000
 5742 0f57 4489FE   		movl	%r15d, %esi
 5743 0f5a E8000000 		call	png_gamma_8bit_correct
 5743      00
 5744              	.LVL663:
1639:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
 5745              		.loc 1 1639 0
 5746 0f5f 0FB7BB8C 		movzwl	652(%rbx), %edi
 5746      020000
 5747 0f66 4489FE   		movl	%r15d, %esi
1637:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
 5748              		.loc 1 1637 0
 5749 0f69 8844240E 		movb	%al, 14(%rsp)
 5750              	.LVL664:
1639:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
 5751              		.loc 1 1639 0
 5752 0f6d E8000000 		call	png_gamma_8bit_correct
 5752      00
 5753              	.LVL665:
1641:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
 5754              		.loc 1 1641 0
 5755 0f72 0FB7BB8E 		movzwl	654(%rbx), %edi
 5755      020000
 5756 0f79 4489FE   		movl	%r15d, %esi
1639:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
 5757              		.loc 1 1639 0
 5758 0f7c 4189C5   		movl	%eax, %r13d
 5759              	.LVL666:
1641:fltk-1.3.4-1/png/pngrtran.c ****                       gs);
 5760              		.loc 1 1641 0
 5761 0f7f E8000000 		call	png_gamma_8bit_correct
 5761      00
 5762              	.LVL667:
 5763 0f84 4189C7   		movl	%eax, %r15d
 5764              	.LVL668:
 5765 0f87 E9E7FAFF 		jmp	.L505
 5765      FF
 5766              	.LVL669:
 5767 0f8c 0F1F4000 		.p2align 4,,10
 5768              		.p2align 3
 5769              	.L673:
1631:fltk-1.3.4-1/png/pngrtran.c ****                      break;
 5770              		.loc 1 1631 0
 5771 0f90 41BFA086 		movl	$100000, %r15d
 5771      0100
1630:fltk-1.3.4-1/png/pngrtran.c ****                      gs = PNG_FP_1;   /* back */
 5772              		.loc 1 1630 0
 5773 0f96 41BEA086 		movl	$100000, %r14d
 5773      0100
 5774 0f9c E9A7FAFF 		jmp	.L501
 5774      FF
 5775              	.LVL670:
 5776              	.L493:
 5777              	.LBE317:
 5778              	.LBE326:
1567:fltk-1.3.4-1/png/pngrtran.c **** #  endif
 5779              		.loc 1 1567 0 discriminator 1
 5780 0fa1 8BBB8402 		movl	644(%rbx), %edi
 5780      0000
 5781 0fa7 E8000000 		call	png_gamma_significant
 5781      00
 5782              	.LVL671:
1566:fltk-1.3.4-1/png/pngrtran.c ****            png_gamma_significant(png_ptr->background_gamma) != 0)
 5783              		.loc 1 1566 0 discriminator 1
 5784 0fac 85C0     		testl	%eax, %eax
 5785 0fae 0F853CF2 		jne	.L491
 5785      FFFF
 5786 0fb4 E99AF9FF 		jmp	.L496
 5786      FF
 5787              	.L666:
1917:fltk-1.3.4-1/png/pngrtran.c **** 
 5788              		.loc 1 1917 0
 5789 0fb9 E8000000 		call	__stack_chk_fail
 5789      00
 5790              	.LVL672:
 5791              		.cfi_endproc
 5792              	.LFE82:
 5794              		.section	.text.unlikely.png_init_read_transformations
 5795              	.LCOLDE47:
 5796              		.section	.text.png_init_read_transformations
 5797              	.LHOTE47:
 5798              		.section	.rodata.str1.8
 5799 0215 000000   		.align 8
 5800              	.LC48:
 5801 0218 50616C65 		.string	"Palette is NULL in indexed image"
 5801      74746520 
 5801      6973204E 
 5801      554C4C20 
 5801      696E2069 
 5802              		.section	.text.unlikely.png_read_transform_info,"ax",@progbits
 5803              	.LCOLDB49:
 5804              		.section	.text.png_read_transform_info,"ax",@progbits
 5805              	.LHOTB49:
 5806              		.p2align 4,,15
 5807              		.globl	png_read_transform_info
 5809              	png_read_transform_info:
 5810              	.LFB83:
1925:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_read_transform_info");
 5811              		.loc 1 1925 0
 5812              		.cfi_startproc
 5813              	.LVL673:
1929:fltk-1.3.4-1/png/pngrtran.c ****    {
 5814              		.loc 1 1929 0
 5815 0000 8B973401 		movl	308(%rdi), %edx
 5815      0000
 5816 0006 F6C610   		testb	$16, %dh
 5817 0009 0F852901 		jne	.L679
 5817      0000
 5818 000f 0FB64624 		movzbl	36(%rsi), %eax
 5819              	.L680:
1969:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->background = png_ptr->background;
 5820              		.loc 1 1969 0
 5821 0013 F6C280   		testb	$-128, %dl
 5822 0016 0F856401 		jne	.L713
 5822      0000
1983:fltk-1.3.4-1/png/pngrtran.c **** #endif
 5823              		.loc 1 1983 0
 5824 001c 8B8FD804 		movl	1240(%rdi), %ecx
 5824      0000
1986:fltk-1.3.4-1/png/pngrtran.c ****    {
 5825              		.loc 1 1986 0
 5826 0022 3C10     		cmpb	$16, %al
1983:fltk-1.3.4-1/png/pngrtran.c **** #endif
 5827              		.loc 1 1983 0
 5828 0024 894E34   		movl	%ecx, 52(%rsi)
1986:fltk-1.3.4-1/png/pngrtran.c ****    {
 5829              		.loc 1 1986 0
 5830 0027 0F848001 		je	.L766
 5830      0000
 5831              	.L689:
2025:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->color_type = (png_byte)(info_ptr->color_type |
 5832              		.loc 1 2025 0
 5833 002d F6C640   		testb	$64, %dh
 5834 0030 7404     		je	.L692
2026:fltk-1.3.4-1/png/pngrtran.c ****          PNG_COLOR_MASK_COLOR);
 5835              		.loc 1 2026 0
 5836 0032 804E2502 		orb	$2, 37(%rsi)
 5837              	.L692:
2031:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->color_type = (png_byte)(info_ptr->color_type &
 5838              		.loc 1 2031 0
 5839 0036 F7C20000 		testl	$6291456, %edx
 5839      6000
 5840 003c 7404     		je	.L693
2032:fltk-1.3.4-1/png/pngrtran.c ****          ~PNG_COLOR_MASK_COLOR);
 5841              		.loc 1 2032 0
 5842 003e 806625FD 		andb	$-3, 37(%rsi)
 5843              	.L693:
2037:fltk-1.3.4-1/png/pngrtran.c ****    {
 5844              		.loc 1 2037 0
 5845 0042 F6C240   		testb	$64, %dl
 5846 0045 0F848501 		je	.L694
 5846      0000
2039:fltk-1.3.4-1/png/pngrtran.c ****           (info_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA)) &&
 5847              		.loc 1 2039 0
 5848 004b 0FB64625 		movzbl	37(%rsi), %eax
 5849 004f 83E0FB   		andl	$-5, %eax
 5850 0052 3C02     		cmpb	$2, %al
 5851 0054 0F857601 		jne	.L694
 5851      0000
2040:fltk-1.3.4-1/png/pngrtran.c ****           png_ptr->palette_lookup != 0 && info_ptr->bit_depth == 8)
 5852              		.loc 1 2040 0
 5853 005a 4883BF88 		cmpq	$0, 904(%rdi)
 5853      03000000 
 5854 0062 0F846801 		je	.L694
 5854      0000
2041:fltk-1.3.4-1/png/pngrtran.c ****       {
 5855              		.loc 1 2041 0
 5856 0068 807E2408 		cmpb	$8, 36(%rsi)
 5857 006c 0F843E02 		je	.L767
 5857      0000
 5858              		.p2align 4,,10
 5859 0072 660F1F44 		.p2align 3
 5859      0000
 5860              	.L695:
2058:fltk-1.3.4-1/png/pngrtran.c ****        (info_ptr->bit_depth < 8))
 5861              		.loc 1 2058 0
 5862 0078 F6C204   		testb	$4, %dl
 5863 007b 0F859F01 		jne	.L768
 5863      0000
 5864              	.L764:
 5865 0081 0FB64E25 		movzbl	37(%rsi), %ecx
2063:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels = 1;
 5866              		.loc 1 2063 0
 5867 0085 80F903   		cmpb	$3, %cl
 5868 0088 0F847201 		je	.L718
 5868      0000
 5869              	.L701:
2066:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels = 3;
 5870              		.loc 1 2066 0
 5871 008e F6C102   		testb	$2, %cl
 5872 0091 0F85D901 		jne	.L769
 5872      0000
2070:fltk-1.3.4-1/png/pngrtran.c **** 
 5873              		.loc 1 2070 0
 5874 0097 C6462901 		movb	$1, 41(%rsi)
 5875 009b B8010000 		movl	$1, %eax
 5875      00
 5876              	.L705:
2073:fltk-1.3.4-1/png/pngrtran.c ****    {
 5877              		.loc 1 2073 0
 5878 00a0 F7C20000 		testl	$262144, %edx
 5878      0400
 5879 00a6 740E     		je	.L706
 5880              	.L702:
2075:fltk-1.3.4-1/png/pngrtran.c ****          ~PNG_COLOR_MASK_ALPHA);
 5881              		.loc 1 2075 0
 5882 00a8 83E1FB   		andl	$-5, %ecx
2077:fltk-1.3.4-1/png/pngrtran.c ****    }
 5883              		.loc 1 2077 0
 5884 00ab 4531C0   		xorl	%r8d, %r8d
2075:fltk-1.3.4-1/png/pngrtran.c ****          ~PNG_COLOR_MASK_ALPHA);
 5885              		.loc 1 2075 0
 5886 00ae 884E25   		movb	%cl, 37(%rsi)
2077:fltk-1.3.4-1/png/pngrtran.c ****    }
 5887              		.loc 1 2077 0
 5888 00b1 66448946 		movw	%r8w, 34(%rsi)
 5888      22
 5889              	.L706:
2081:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels++;
 5890              		.loc 1 2081 0
 5891 00b6 F6C104   		testb	$4, %cl
 5892 00b9 7406     		je	.L707
2082:fltk-1.3.4-1/png/pngrtran.c **** 
 5893              		.loc 1 2082 0
 5894 00bb 83C001   		addl	$1, %eax
 5895 00be 884629   		movb	%al, 41(%rsi)
 5896              	.L707:
2086:fltk-1.3.4-1/png/pngrtran.c ****        (info_ptr->color_type == PNG_COLOR_TYPE_RGB ||
 5897              		.loc 1 2086 0
 5898 00c1 F6C680   		testb	$128, %dh
 5899 00c4 741A     		je	.L708
2086:fltk-1.3.4-1/png/pngrtran.c ****        (info_ptr->color_type == PNG_COLOR_TYPE_RGB ||
 5900              		.loc 1 2086 0 is_stmt 0 discriminator 1
 5901 00c6 F6C1FD   		testb	$-3, %cl
 5902 00c9 7515     		jne	.L708
2090:fltk-1.3.4-1/png/pngrtran.c ****       /* If adding a true alpha channel not just filler */
 5903              		.loc 1 2090 0 is_stmt 1
 5904 00cb 83C001   		addl	$1, %eax
2092:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->color_type |= PNG_COLOR_MASK_ALPHA;
 5905              		.loc 1 2092 0
 5906 00ce F7C20000 		testl	$16777216, %edx
 5906      0001
2090:fltk-1.3.4-1/png/pngrtran.c ****       /* If adding a true alpha channel not just filler */
 5907              		.loc 1 2090 0
 5908 00d4 884629   		movb	%al, 41(%rsi)
2092:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->color_type |= PNG_COLOR_MASK_ALPHA;
 5909              		.loc 1 2092 0
 5910 00d7 0F85C301 		jne	.L770
 5910      0000
 5911 00dd 0F1F00   		.p2align 4,,10
 5912              		.p2align 3
 5913              	.L708:
2099:fltk-1.3.4-1/png/pngrtran.c ****    {
 5914              		.loc 1 2099 0
 5915 00e0 81E20000 		andl	$1048576, %edx
 5915      1000
 5916 00e6 741F     		je	.L709
2101:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->bit_depth = png_ptr->user_transform_depth;
 5917              		.loc 1 2101 0
 5918 00e8 0FB69728 		movzbl	296(%rdi), %edx
 5918      010000
 5919 00ef 385624   		cmpb	%dl, 36(%rsi)
 5920 00f2 7303     		jnb	.L710
2102:fltk-1.3.4-1/png/pngrtran.c **** 
 5921              		.loc 1 2102 0
 5922 00f4 885624   		movb	%dl, 36(%rsi)
 5923              	.L710:
2104:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->channels = png_ptr->user_transform_channels;
 5924              		.loc 1 2104 0
 5925 00f7 0FB69729 		movzbl	297(%rdi), %edx
 5925      010000
 5926 00fe 38C2     		cmpb	%al, %dl
 5927 0100 7605     		jbe	.L709
2105:fltk-1.3.4-1/png/pngrtran.c ****    }
 5928              		.loc 1 2105 0
 5929 0102 885629   		movb	%dl, 41(%rsi)
 5930 0105 89D0     		movl	%edx, %eax
 5931              	.L709:
2109:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth);
 5932              		.loc 1 2109 0
 5933 0107 F66624   		mulb	36(%rsi)
2112:fltk-1.3.4-1/png/pngrtran.c **** 
 5934              		.loc 1 2112 0
 5935 010a 8B16     		movl	(%rsi), %edx
 5936 010c 3C07     		cmpb	$7, %al
2109:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth);
 5937              		.loc 1 2109 0
 5938 010e 88462A   		movb	%al, 42(%rsi)
2112:fltk-1.3.4-1/png/pngrtran.c **** 
 5939              		.loc 1 2112 0
 5940 0111 0F876901 		ja	.L771
 5940      0000
2112:fltk-1.3.4-1/png/pngrtran.c **** 
 5941              		.loc 1 2112 0 is_stmt 0 discriminator 2
 5942 0117 0FB6C0   		movzbl	%al, %eax
 5943 011a 480FAFC2 		imulq	%rdx, %rax
 5944 011e 4883C007 		addq	$7, %rax
 5945 0122 48C1E803 		shrq	$3, %rax
 5946 0126 48894610 		movq	%rax, 16(%rsi)
2120:fltk-1.3.4-1/png/pngrtran.c **** 
 5947              		.loc 1 2120 0 is_stmt 1 discriminator 2
 5948 012a 48898750 		movq	%rax, 592(%rdi)
 5948      020000
2126:fltk-1.3.4-1/png/pngrtran.c **** 
 5949              		.loc 1 2126 0 discriminator 2
 5950 0131 C3       		ret
 5951              		.p2align 4,,10
 5952 0132 660F1F44 		.p2align 3
 5952      0000
 5953              	.L679:
1931:fltk-1.3.4-1/png/pngrtran.c ****       {
 5954              		.loc 1 1931 0
 5955 0138 0FB64625 		movzbl	37(%rsi), %eax
 5956 013c 3C03     		cmpb	$3, %al
 5957 013e 0F85F400 		jne	.L681
 5957      0000
1938:fltk-1.3.4-1/png/pngrtran.c **** 
 5958              		.loc 1 1938 0
 5959 0144 6683BF70 		cmpw	$1, 624(%rdi)
 5959      02000001 
1943:fltk-1.3.4-1/png/pngrtran.c ****          info_ptr->num_trans = 0;
 5960              		.loc 1 1943 0
 5961 014c C6462408 		movb	$8, 36(%rsi)
1938:fltk-1.3.4-1/png/pngrtran.c **** 
 5962              		.loc 1 1938 0
 5963 0150 19C0     		sbbl	%eax, %eax
1944:fltk-1.3.4-1/png/pngrtran.c **** 
 5964              		.loc 1 1944 0
 5965 0152 4531DB   		xorl	%r11d, %r11d
1938:fltk-1.3.4-1/png/pngrtran.c **** 
 5966              		.loc 1 1938 0
 5967 0155 83E0FC   		andl	$-4, %eax
1944:fltk-1.3.4-1/png/pngrtran.c **** 
 5968              		.loc 1 1944 0
 5969 0158 6644895E 		movw	%r11w, 34(%rsi)
 5969      22
1938:fltk-1.3.4-1/png/pngrtran.c **** 
 5970              		.loc 1 1938 0
 5971 015d 83C006   		addl	$6, %eax
1946:fltk-1.3.4-1/png/pngrtran.c ****             png_error (png_ptr, "Palette is NULL in indexed image");
 5972              		.loc 1 1946 0
 5973 0160 4883BF60 		cmpq	$0, 608(%rdi)
 5973      02000000 
1938:fltk-1.3.4-1/png/pngrtran.c **** 
 5974              		.loc 1 1938 0
 5975 0168 884625   		movb	%al, 37(%rsi)
1946:fltk-1.3.4-1/png/pngrtran.c ****             png_error (png_ptr, "Palette is NULL in indexed image");
 5976              		.loc 1 1946 0
 5977 016b 0F846D01 		je	.L772
 5977      0000
1969:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->background = png_ptr->background;
 5978              		.loc 1 1969 0
 5979 0171 F6C280   		testb	$-128, %dl
 5980 0174 0F845601 		je	.L762
 5980      0000
 5981 017a B8080000 		movl	$8, %eax
 5981      00
 5982 017f 90       		.p2align 4,,10
 5983              		.p2align 3
 5984              	.L713:
1970:fltk-1.3.4-1/png/pngrtran.c **** #endif
 5985              		.loc 1 1970 0
 5986 0180 488B8F88 		movq	648(%rdi), %rcx
 5986      020000
1986:fltk-1.3.4-1/png/pngrtran.c ****    {
 5987              		.loc 1 1986 0
 5988 0187 3C10     		cmpb	$16, %al
1970:fltk-1.3.4-1/png/pngrtran.c **** #endif
 5989              		.loc 1 1970 0
 5990 0189 48898ECA 		movq	%rcx, 202(%rsi)
 5990      000000
 5991 0190 0FB78F90 		movzwl	656(%rdi), %ecx
 5991      020000
 5992 0197 66898ED2 		movw	%cx, 210(%rsi)
 5992      000000
1983:fltk-1.3.4-1/png/pngrtran.c **** #endif
 5993              		.loc 1 1983 0
 5994 019e 8B8FD804 		movl	1240(%rdi), %ecx
 5994      0000
 5995 01a4 894E34   		movl	%ecx, 52(%rsi)
1986:fltk-1.3.4-1/png/pngrtran.c ****    {
 5996              		.loc 1 1986 0
 5997 01a7 0F8580FE 		jne	.L689
 5997      FFFF
 5998              	.L766:
1990:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->bit_depth = 8;
 5999              		.loc 1 1990 0
 6000 01ad F7C20000 		testl	$67108864, %edx
 6000      0004
 6001 01b3 7404     		je	.L690
1991:fltk-1.3.4-1/png/pngrtran.c **** #     endif
 6002              		.loc 1 1991 0
 6003 01b5 C6462408 		movb	$8, 36(%rsi)
 6004              	.L690:
1995:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->bit_depth = 8;
 6005              		.loc 1 1995 0
 6006 01b9 F6C604   		testb	$4, %dh
 6007 01bc 0F846BFE 		je	.L689
 6007      FFFF
1996:fltk-1.3.4-1/png/pngrtran.c **** #     endif
 6008              		.loc 1 1996 0
 6009 01c2 C6462408 		movb	$8, 36(%rsi)
 6010 01c6 E962FEFF 		jmp	.L689
 6010      FF
 6011 01cb 0F1F4400 		.p2align 4,,10
 6011      00
 6012              		.p2align 3
 6013              	.L694:
2049:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth == 8 &&
 6014              		.loc 1 2049 0
 6015 01d0 F6C602   		testb	$2, %dh
 6016 01d3 0F849FFE 		je	.L695
 6016      FFFF
2049:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth == 8 &&
 6017              		.loc 1 2049 0 is_stmt 0 discriminator 1
 6018 01d9 807E2408 		cmpb	$8, 36(%rsi)
 6019 01dd 0F8595FE 		jne	.L695
 6019      FFFF
 6020 01e3 0FB64E25 		movzbl	37(%rsi), %ecx
2050:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->color_type != PNG_COLOR_TYPE_PALETTE)
 6021              		.loc 1 2050 0 is_stmt 1
 6022 01e7 80F903   		cmpb	$3, %cl
 6023 01ea 7414     		je	.L718
2063:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels = 1;
 6024              		.loc 1 2063 0
 6025 01ec 80F903   		cmpb	$3, %cl
2053:fltk-1.3.4-1/png/pngrtran.c ****    }
 6026              		.loc 1 2053 0
 6027 01ef C6462410 		movb	$16, 36(%rsi)
2063:fltk-1.3.4-1/png/pngrtran.c ****       info_ptr->channels = 1;
 6028              		.loc 1 2063 0
 6029 01f3 0F8595FE 		jne	.L701
 6029      FFFF
 6030 01f9 0F1F8000 		.p2align 4,,10
 6030      000000
 6031              		.p2align 3
 6032              	.L718:
2073:fltk-1.3.4-1/png/pngrtran.c ****    {
 6033              		.loc 1 2073 0
 6034 0200 F7C20000 		testl	$262144, %edx
 6034      0400
2064:fltk-1.3.4-1/png/pngrtran.c **** 
 6035              		.loc 1 2064 0
 6036 0206 C6462901 		movb	$1, 41(%rsi)
2073:fltk-1.3.4-1/png/pngrtran.c ****    {
 6037              		.loc 1 2073 0
 6038 020a B8010000 		movl	$1, %eax
 6038      00
 6039 020f 0F8593FE 		jne	.L702
 6039      FFFF
 6040 0215 E9C6FEFF 		jmp	.L708
 6040      FF
 6041 021a 660F1F44 		.p2align 4,,10
 6041      0000
 6042              		.p2align 3
 6043              	.L768:
2058:fltk-1.3.4-1/png/pngrtran.c ****        (info_ptr->bit_depth < 8))
 6044              		.loc 1 2058 0 discriminator 1
 6045 0220 807E2407 		cmpb	$7, 36(%rsi)
 6046 0224 0F8757FE 		ja	.L764
 6046      FFFF
2060:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6047              		.loc 1 2060 0
 6048 022a C6462408 		movb	$8, 36(%rsi)
 6049 022e E94EFEFF 		jmp	.L764
 6049      FF
 6050              		.p2align 4,,10
 6051 0233 0F1F4400 		.p2align 3
 6051      00
 6052              	.L681:
1951:fltk-1.3.4-1/png/pngrtran.c ****          {
 6053              		.loc 1 1951 0
 6054 0238 6683BF70 		cmpw	$0, 624(%rdi)
 6054      02000000 
 6055 0240 740E     		je	.L685
1953:fltk-1.3.4-1/png/pngrtran.c ****                info_ptr->color_type |= PNG_COLOR_MASK_ALPHA;
 6056              		.loc 1 1953 0
 6057 0242 F7C20000 		testl	$33554432, %edx
 6057      0002
 6058 0248 7406     		je	.L685
1954:fltk-1.3.4-1/png/pngrtran.c ****          }
 6059              		.loc 1 1954 0
 6060 024a 83C804   		orl	$4, %eax
 6061 024d 884625   		movb	%al, 37(%rsi)
 6062              	.L685:
1956:fltk-1.3.4-1/png/pngrtran.c ****             info_ptr->bit_depth = 8;
 6063              		.loc 1 1956 0
 6064 0250 0FB64624 		movzbl	36(%rsi), %eax
 6065 0254 3C07     		cmpb	$7, %al
 6066 0256 7709     		ja	.L686
1957:fltk-1.3.4-1/png/pngrtran.c **** 
 6067              		.loc 1 1957 0
 6068 0258 C6462408 		movb	$8, 36(%rsi)
 6069 025c B8080000 		movl	$8, %eax
 6069      00
 6070              	.L686:
1959:fltk-1.3.4-1/png/pngrtran.c ****       }
 6071              		.loc 1 1959 0
 6072 0261 4531C9   		xorl	%r9d, %r9d
 6073 0264 6644894E 		movw	%r9w, 34(%rsi)
 6073      22
 6074 0269 E9A5FDFF 		jmp	.L680
 6074      FF
 6075 026e 6690     		.p2align 4,,10
 6076              		.p2align 3
 6077              	.L769:
2067:fltk-1.3.4-1/png/pngrtran.c **** 
 6078              		.loc 1 2067 0
 6079 0270 C6462903 		movb	$3, 41(%rsi)
 6080 0274 B8030000 		movl	$3, %eax
 6080      00
 6081 0279 E922FEFF 		jmp	.L705
 6081      FF
 6082 027e 6690     		.p2align 4,,10
 6083              		.p2align 3
 6084              	.L771:
2112:fltk-1.3.4-1/png/pngrtran.c **** 
 6085              		.loc 1 2112 0 discriminator 1
 6086 0280 C0E803   		shrb	$3, %al
 6087 0283 0FB6C0   		movzbl	%al, %eax
 6088 0286 480FAFC2 		imulq	%rdx, %rax
 6089 028a 48894610 		movq	%rax, 16(%rsi)
2120:fltk-1.3.4-1/png/pngrtran.c **** 
 6090              		.loc 1 2120 0 discriminator 1
 6091 028e 48898750 		movq	%rax, 592(%rdi)
 6091      020000
2126:fltk-1.3.4-1/png/pngrtran.c **** 
 6092              		.loc 1 2126 0 discriminator 1
 6093 0295 C3       		ret
 6094 0296 662E0F1F 		.p2align 4,,10
 6094      84000000 
 6094      0000
 6095              		.p2align 3
 6096              	.L770:
2093:fltk-1.3.4-1/png/pngrtran.c ****    }
 6097              		.loc 1 2093 0
 6098 02a0 83C904   		orl	$4, %ecx
 6099 02a3 884E25   		movb	%cl, 37(%rsi)
 6100 02a6 E935FEFF 		jmp	.L708
 6100      FF
 6101 02ab 0F1F4400 		.p2align 4,,10
 6101      00
 6102              		.p2align 3
 6103              	.L767:
2049:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth == 8 &&
 6104              		.loc 1 2049 0
 6105 02b0 F6C602   		testb	$2, %dh
2043:fltk-1.3.4-1/png/pngrtran.c ****       }
 6106              		.loc 1 2043 0
 6107 02b3 C6462503 		movb	$3, 37(%rsi)
2049:fltk-1.3.4-1/png/pngrtran.c ****        info_ptr->bit_depth == 8 &&
 6108              		.loc 1 2049 0
 6109 02b7 0F84BBFD 		je	.L695
 6109      FFFF
 6110 02bd B9030000 		movl	$3, %ecx
 6110      00
 6111 02c2 E939FFFF 		jmp	.L718
 6111      FF
 6112 02c7 660F1F84 		.p2align 4,,10
 6112      00000000 
 6112      00
 6113              		.p2align 3
 6114              	.L762:
1983:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6115              		.loc 1 1983 0
 6116 02d0 8B87D804 		movl	1240(%rdi), %eax
 6116      0000
 6117 02d6 894634   		movl	%eax, 52(%rsi)
 6118 02d9 E94FFDFF 		jmp	.L689
 6118      FF
 6119              	.L772:
1925:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_read_transform_info");
 6120              		.loc 1 1925 0
 6121 02de 4152     		pushq	%r10
 6122              		.cfi_def_cfa_offset 16
1947:fltk-1.3.4-1/png/pngrtran.c ****       }
 6123              		.loc 1 1947 0
 6124 02e0 BE000000 		movl	$.LC48, %esi
 6124      00
 6125              	.LVL674:
 6126 02e5 E8000000 		call	png_error
 6126      00
 6127              	.LVL675:
 6128              		.cfi_endproc
 6129              	.LFE83:
 6131              		.section	.text.unlikely.png_read_transform_info
 6132              	.LCOLDE49:
 6133              		.section	.text.png_read_transform_info
 6134              	.LHOTE49:
 6135              		.section	.rodata.str1.1
 6136              	.LC50:
 6137 008a 4E554C4C 		.string	"NULL row buffer"
 6137      20726F77 
 6137      20627566 
 6137      66657200 
 6138              	.LC51:
 6139 009a 556E696E 		.string	"Uninitialized row"
 6139      69746961 
 6139      6C697A65 
 6139      6420726F 
 6139      7700
 6140              		.section	.rodata.str1.8
 6141 0239 00000000 		.align 8
 6141      000000
 6142              	.LC52:
 6143 0240 706E675F 		.string	"png_do_rgb_to_gray found nongray pixel"
 6143      646F5F72 
 6143      67625F74 
 6143      6F5F6772 
 6143      61792066 
 6144 0267 00       		.align 8
 6145              	.LC53:
 6146 0268 706E675F 		.string	"png_do_encode_alpha: unexpected call"
 6146      646F5F65 
 6146      6E636F64 
 6146      655F616C 
 6146      7068613A 
 6147 028d 000000   		.align 8
 6148              	.LC54:
 6149 0290 706E675F 		.string	"png_do_quantize returned rowbytes=0"
 6149      646F5F71 
 6149      75616E74 
 6149      697A6520 
 6149      72657475 
 6150              		.section	.text.unlikely.png_do_read_transformations,"ax",@progbits
 6151              	.LCOLDB55:
 6152              		.section	.text.png_do_read_transformations,"ax",@progbits
 6153              	.LHOTB55:
 6154              		.p2align 4,,15
 6155              		.globl	png_do_read_transformations
 6157              	png_do_read_transformations:
 6158              	.LFB100:
4569:fltk-1.3.4-1/png/pngrtran.c **** #endif
4570:fltk-1.3.4-1/png/pngrtran.c **** 
4571:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
4572:fltk-1.3.4-1/png/pngrtran.c **** /* If the bit depth is 8 and the color type is not a palette type expand the
4573:fltk-1.3.4-1/png/pngrtran.c ****  * whole row to 16 bits.  Has no effect otherwise.
4574:fltk-1.3.4-1/png/pngrtran.c ****  */
4575:fltk-1.3.4-1/png/pngrtran.c **** static void
4576:fltk-1.3.4-1/png/pngrtran.c **** png_do_expand_16(png_row_infop row_info, png_bytep row)
4577:fltk-1.3.4-1/png/pngrtran.c **** {
4578:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->bit_depth == 8 &&
4579:fltk-1.3.4-1/png/pngrtran.c ****       row_info->color_type != PNG_COLOR_TYPE_PALETTE)
4580:fltk-1.3.4-1/png/pngrtran.c ****    {
4581:fltk-1.3.4-1/png/pngrtran.c ****       /* The row have a sequence of bytes containing [0..255] and we need
4582:fltk-1.3.4-1/png/pngrtran.c ****        * to turn it into another row containing [0..65535], to do this we
4583:fltk-1.3.4-1/png/pngrtran.c ****        * calculate:
4584:fltk-1.3.4-1/png/pngrtran.c ****        *
4585:fltk-1.3.4-1/png/pngrtran.c ****        *  (input / 255) * 65535
4586:fltk-1.3.4-1/png/pngrtran.c ****        *
4587:fltk-1.3.4-1/png/pngrtran.c ****        *  Which happens to be exactly input * 257 and this can be achieved
4588:fltk-1.3.4-1/png/pngrtran.c ****        *  simply by byte replication in place (copying backwards).
4589:fltk-1.3.4-1/png/pngrtran.c ****        */
4590:fltk-1.3.4-1/png/pngrtran.c ****       png_byte *sp = row + row_info->rowbytes; /* source, last byte + 1 */
4591:fltk-1.3.4-1/png/pngrtran.c ****       png_byte *dp = sp + row_info->rowbytes;  /* destination, end + 1 */
4592:fltk-1.3.4-1/png/pngrtran.c ****       while (dp > sp)
4593:fltk-1.3.4-1/png/pngrtran.c ****          dp[-2] = dp[-1] = *--sp, dp -= 2;
4594:fltk-1.3.4-1/png/pngrtran.c **** 
4595:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes *= 2;
4596:fltk-1.3.4-1/png/pngrtran.c ****       row_info->bit_depth = 16;
4597:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(row_info->channels * 16);
4598:fltk-1.3.4-1/png/pngrtran.c ****    }
4599:fltk-1.3.4-1/png/pngrtran.c **** }
4600:fltk-1.3.4-1/png/pngrtran.c **** #endif
4601:fltk-1.3.4-1/png/pngrtran.c **** 
4602:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_QUANTIZE_SUPPORTED
4603:fltk-1.3.4-1/png/pngrtran.c **** static void
4604:fltk-1.3.4-1/png/pngrtran.c **** png_do_quantize(png_row_infop row_info, png_bytep row,
4605:fltk-1.3.4-1/png/pngrtran.c ****     png_const_bytep palette_lookup, png_const_bytep quantize_lookup)
4606:fltk-1.3.4-1/png/pngrtran.c **** {
4607:fltk-1.3.4-1/png/pngrtran.c ****    png_bytep sp, dp;
4608:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 i;
4609:fltk-1.3.4-1/png/pngrtran.c ****    png_uint_32 row_width=row_info->width;
4610:fltk-1.3.4-1/png/pngrtran.c **** 
4611:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_quantize");
4612:fltk-1.3.4-1/png/pngrtran.c **** 
4613:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->bit_depth == 8)
4614:fltk-1.3.4-1/png/pngrtran.c ****    {
4615:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->color_type == PNG_COLOR_TYPE_RGB && palette_lookup)
4616:fltk-1.3.4-1/png/pngrtran.c ****       {
4617:fltk-1.3.4-1/png/pngrtran.c ****          int r, g, b, p;
4618:fltk-1.3.4-1/png/pngrtran.c ****          sp = row;
4619:fltk-1.3.4-1/png/pngrtran.c ****          dp = row;
4620:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < row_width; i++)
4621:fltk-1.3.4-1/png/pngrtran.c ****          {
4622:fltk-1.3.4-1/png/pngrtran.c ****             r = *sp++;
4623:fltk-1.3.4-1/png/pngrtran.c ****             g = *sp++;
4624:fltk-1.3.4-1/png/pngrtran.c ****             b = *sp++;
4625:fltk-1.3.4-1/png/pngrtran.c **** 
4626:fltk-1.3.4-1/png/pngrtran.c ****             /* This looks real messy, but the compiler will reduce
4627:fltk-1.3.4-1/png/pngrtran.c ****              * it down to a reasonable formula.  For example, with
4628:fltk-1.3.4-1/png/pngrtran.c ****              * 5 bits per color, we get:
4629:fltk-1.3.4-1/png/pngrtran.c ****              * p = (((r >> 3) & 0x1f) << 10) |
4630:fltk-1.3.4-1/png/pngrtran.c ****              *    (((g >> 3) & 0x1f) << 5) |
4631:fltk-1.3.4-1/png/pngrtran.c ****              *    ((b >> 3) & 0x1f);
4632:fltk-1.3.4-1/png/pngrtran.c ****              */
4633:fltk-1.3.4-1/png/pngrtran.c ****             p = (((r >> (8 - PNG_QUANTIZE_RED_BITS)) &
4634:fltk-1.3.4-1/png/pngrtran.c ****                 ((1 << PNG_QUANTIZE_RED_BITS) - 1)) <<
4635:fltk-1.3.4-1/png/pngrtran.c ****                 (PNG_QUANTIZE_GREEN_BITS + PNG_QUANTIZE_BLUE_BITS)) |
4636:fltk-1.3.4-1/png/pngrtran.c ****                 (((g >> (8 - PNG_QUANTIZE_GREEN_BITS)) &
4637:fltk-1.3.4-1/png/pngrtran.c ****                 ((1 << PNG_QUANTIZE_GREEN_BITS) - 1)) <<
4638:fltk-1.3.4-1/png/pngrtran.c ****                 (PNG_QUANTIZE_BLUE_BITS)) |
4639:fltk-1.3.4-1/png/pngrtran.c ****                 ((b >> (8 - PNG_QUANTIZE_BLUE_BITS)) &
4640:fltk-1.3.4-1/png/pngrtran.c ****                 ((1 << PNG_QUANTIZE_BLUE_BITS) - 1));
4641:fltk-1.3.4-1/png/pngrtran.c **** 
4642:fltk-1.3.4-1/png/pngrtran.c ****             *dp++ = palette_lookup[p];
4643:fltk-1.3.4-1/png/pngrtran.c ****          }
4644:fltk-1.3.4-1/png/pngrtran.c **** 
4645:fltk-1.3.4-1/png/pngrtran.c ****          row_info->color_type = PNG_COLOR_TYPE_PALETTE;
4646:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = 1;
4647:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = row_info->bit_depth;
4648:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
4649:fltk-1.3.4-1/png/pngrtran.c ****       }
4650:fltk-1.3.4-1/png/pngrtran.c **** 
4651:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA &&
4652:fltk-1.3.4-1/png/pngrtran.c ****          palette_lookup != NULL)
4653:fltk-1.3.4-1/png/pngrtran.c ****       {
4654:fltk-1.3.4-1/png/pngrtran.c ****          int r, g, b, p;
4655:fltk-1.3.4-1/png/pngrtran.c ****          sp = row;
4656:fltk-1.3.4-1/png/pngrtran.c ****          dp = row;
4657:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < row_width; i++)
4658:fltk-1.3.4-1/png/pngrtran.c ****          {
4659:fltk-1.3.4-1/png/pngrtran.c ****             r = *sp++;
4660:fltk-1.3.4-1/png/pngrtran.c ****             g = *sp++;
4661:fltk-1.3.4-1/png/pngrtran.c ****             b = *sp++;
4662:fltk-1.3.4-1/png/pngrtran.c ****             sp++;
4663:fltk-1.3.4-1/png/pngrtran.c **** 
4664:fltk-1.3.4-1/png/pngrtran.c ****             p = (((r >> (8 - PNG_QUANTIZE_RED_BITS)) &
4665:fltk-1.3.4-1/png/pngrtran.c ****                 ((1 << PNG_QUANTIZE_RED_BITS) - 1)) <<
4666:fltk-1.3.4-1/png/pngrtran.c ****                 (PNG_QUANTIZE_GREEN_BITS + PNG_QUANTIZE_BLUE_BITS)) |
4667:fltk-1.3.4-1/png/pngrtran.c ****                 (((g >> (8 - PNG_QUANTIZE_GREEN_BITS)) &
4668:fltk-1.3.4-1/png/pngrtran.c ****                 ((1 << PNG_QUANTIZE_GREEN_BITS) - 1)) <<
4669:fltk-1.3.4-1/png/pngrtran.c ****                 (PNG_QUANTIZE_BLUE_BITS)) |
4670:fltk-1.3.4-1/png/pngrtran.c ****                 ((b >> (8 - PNG_QUANTIZE_BLUE_BITS)) &
4671:fltk-1.3.4-1/png/pngrtran.c ****                 ((1 << PNG_QUANTIZE_BLUE_BITS) - 1));
4672:fltk-1.3.4-1/png/pngrtran.c **** 
4673:fltk-1.3.4-1/png/pngrtran.c ****             *dp++ = palette_lookup[p];
4674:fltk-1.3.4-1/png/pngrtran.c ****          }
4675:fltk-1.3.4-1/png/pngrtran.c **** 
4676:fltk-1.3.4-1/png/pngrtran.c ****          row_info->color_type = PNG_COLOR_TYPE_PALETTE;
4677:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = 1;
4678:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = row_info->bit_depth;
4679:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
4680:fltk-1.3.4-1/png/pngrtran.c ****       }
4681:fltk-1.3.4-1/png/pngrtran.c **** 
4682:fltk-1.3.4-1/png/pngrtran.c ****       else if (row_info->color_type == PNG_COLOR_TYPE_PALETTE &&
4683:fltk-1.3.4-1/png/pngrtran.c ****          quantize_lookup)
4684:fltk-1.3.4-1/png/pngrtran.c ****       {
4685:fltk-1.3.4-1/png/pngrtran.c ****          sp = row;
4686:fltk-1.3.4-1/png/pngrtran.c **** 
4687:fltk-1.3.4-1/png/pngrtran.c ****          for (i = 0; i < row_width; i++, sp++)
4688:fltk-1.3.4-1/png/pngrtran.c ****          {
4689:fltk-1.3.4-1/png/pngrtran.c ****             *sp = quantize_lookup[*sp];
4690:fltk-1.3.4-1/png/pngrtran.c ****          }
4691:fltk-1.3.4-1/png/pngrtran.c ****       }
4692:fltk-1.3.4-1/png/pngrtran.c ****    }
4693:fltk-1.3.4-1/png/pngrtran.c **** }
4694:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_QUANTIZE */
4695:fltk-1.3.4-1/png/pngrtran.c **** 
4696:fltk-1.3.4-1/png/pngrtran.c **** /* Transform the row.  The order of transformations is significant,
4697:fltk-1.3.4-1/png/pngrtran.c ****  * and is very touchy.  If you add a transformation, take care to
4698:fltk-1.3.4-1/png/pngrtran.c ****  * decide how it fits in with the other transformations here.
4699:fltk-1.3.4-1/png/pngrtran.c ****  */
4700:fltk-1.3.4-1/png/pngrtran.c **** void /* PRIVATE */
4701:fltk-1.3.4-1/png/pngrtran.c **** png_do_read_transformations(png_structrp png_ptr, png_row_infop row_info)
4702:fltk-1.3.4-1/png/pngrtran.c **** {
 6159              		.loc 1 4702 0
 6160              		.cfi_startproc
 6161              	.LVL676:
 6162 0000 4157     		pushq	%r15
 6163              		.cfi_def_cfa_offset 16
 6164              		.cfi_offset 15, -16
 6165 0002 4156     		pushq	%r14
 6166              		.cfi_def_cfa_offset 24
 6167              		.cfi_offset 14, -24
 6168 0004 4155     		pushq	%r13
 6169              		.cfi_def_cfa_offset 32
 6170              		.cfi_offset 13, -32
 6171 0006 4154     		pushq	%r12
 6172              		.cfi_def_cfa_offset 40
 6173              		.cfi_offset 12, -40
 6174 0008 55       		pushq	%rbp
 6175              		.cfi_def_cfa_offset 48
 6176              		.cfi_offset 6, -48
 6177 0009 53       		pushq	%rbx
 6178              		.cfi_def_cfa_offset 56
 6179              		.cfi_offset 3, -56
 6180 000a 4889F5   		movq	%rsi, %rbp
 6181 000d 4889FB   		movq	%rdi, %rbx
 6182 0010 4883EC38 		subq	$56, %rsp
 6183              		.cfi_def_cfa_offset 112
4703:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_read_transformations");
4704:fltk-1.3.4-1/png/pngrtran.c **** 
4705:fltk-1.3.4-1/png/pngrtran.c ****    if (png_ptr->row_buf == NULL)
 6184              		.loc 1 4705 0
 6185 0014 488BB728 		movq	552(%rdi), %rsi
 6185      020000
 6186              	.LVL677:
4702:fltk-1.3.4-1/png/pngrtran.c ****    png_debug(1, "in png_do_read_transformations");
 6187              		.loc 1 4702 0
 6188 001b 64488B04 		movq	%fs:40, %rax
 6188      25280000 
 6188      00
 6189 0024 48894424 		movq	%rax, 40(%rsp)
 6189      28
 6190 0029 31C0     		xorl	%eax, %eax
 6191              		.loc 1 4705 0
 6192 002b 4885F6   		testq	%rsi, %rsi
 6193 002e 0F844A30 		je	.L1522
 6193      0000
4706:fltk-1.3.4-1/png/pngrtran.c ****    {
4707:fltk-1.3.4-1/png/pngrtran.c ****       /* Prior to 1.5.4 this output row/pass where the NULL pointer is, but this
4708:fltk-1.3.4-1/png/pngrtran.c ****        * error is incredibly rare and incredibly easy to debug without this
4709:fltk-1.3.4-1/png/pngrtran.c ****        * information.
4710:fltk-1.3.4-1/png/pngrtran.c ****        */
4711:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "NULL row buffer");
4712:fltk-1.3.4-1/png/pngrtran.c ****    }
4713:fltk-1.3.4-1/png/pngrtran.c **** 
4714:fltk-1.3.4-1/png/pngrtran.c ****    /* The following is debugging; prior to 1.5.4 the code was never compiled in;
4715:fltk-1.3.4-1/png/pngrtran.c ****     * in 1.5.4 PNG_FLAG_DETECT_UNINITIALIZED was added and the macro
4716:fltk-1.3.4-1/png/pngrtran.c ****     * PNG_WARN_UNINITIALIZED_ROW removed.  In 1.6 the new flag is set only for
4717:fltk-1.3.4-1/png/pngrtran.c ****     * all transformations, however in practice the ROW_INIT always gets done on
4718:fltk-1.3.4-1/png/pngrtran.c ****     * demand, if necessary.
4719:fltk-1.3.4-1/png/pngrtran.c ****     */
4720:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->flags & PNG_FLAG_DETECT_UNINITIALIZED) != 0 &&
 6194              		.loc 1 4720 0
 6195 0034 8B873001 		movl	304(%rdi), %eax
 6195      0000
 6196 003a 25404000 		andl	$16448, %eax
 6196      00
 6197 003f 3D004000 		cmpl	$16384, %eax
 6197      00
 6198 0044 0F842A30 		je	.L1523
 6198      0000
4721:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->flags & PNG_FLAG_ROW_INIT) == 0)
4722:fltk-1.3.4-1/png/pngrtran.c ****    {
4723:fltk-1.3.4-1/png/pngrtran.c ****       /* Application has failed to call either png_read_start_image() or
4724:fltk-1.3.4-1/png/pngrtran.c ****        * png_read_update_info() after setting transforms that expand pixels.
4725:fltk-1.3.4-1/png/pngrtran.c ****        * This check added to libpng-1.2.19 (but not enabled until 1.5.4).
4726:fltk-1.3.4-1/png/pngrtran.c ****        */
4727:fltk-1.3.4-1/png/pngrtran.c ****       png_error(png_ptr, "Uninitialized row");
4728:fltk-1.3.4-1/png/pngrtran.c ****    }
4729:fltk-1.3.4-1/png/pngrtran.c **** 
4730:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
4731:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_EXPAND) != 0)
 6199              		.loc 1 4731 0
 6200 004a 8B873401 		movl	308(%rdi), %eax
 6200      0000
 6201 0050 F6C410   		testb	$16, %ah
 6202 0053 742D     		je	.L776
4732:fltk-1.3.4-1/png/pngrtran.c ****    {
4733:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->color_type == PNG_COLOR_TYPE_PALETTE)
 6203              		.loc 1 4733 0
 6204 0055 807D1003 		cmpb	$3, 16(%rbp)
 6205 0059 0F841911 		je	.L1524
 6205      0000
4734:fltk-1.3.4-1/png/pngrtran.c ****       {
4735:fltk-1.3.4-1/png/pngrtran.c ****          png_do_expand_palette(row_info, png_ptr->row_buf + 1,
4736:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette, png_ptr->trans_alpha, png_ptr->num_trans);
4737:fltk-1.3.4-1/png/pngrtran.c ****       }
4738:fltk-1.3.4-1/png/pngrtran.c **** 
4739:fltk-1.3.4-1/png/pngrtran.c ****       else
4740:fltk-1.3.4-1/png/pngrtran.c ****       {
4741:fltk-1.3.4-1/png/pngrtran.c ****          if (png_ptr->num_trans != 0 &&
 6206              		.loc 1 4741 0
 6207 005f 6683BF70 		cmpw	$0, 624(%rdi)
 6207      02000000 
 6208 0067 740B     		je	.L810
 6209              		.loc 1 4741 0 is_stmt 0 discriminator 1
 6210 0069 A9000000 		testl	$33554432, %eax
 6210      02
 6211 006e 0F859C10 		jne	.L1525
 6211      0000
 6212              	.L810:
4742:fltk-1.3.4-1/png/pngrtran.c ****              (png_ptr->transformations & PNG_EXPAND_tRNS) != 0)
4743:fltk-1.3.4-1/png/pngrtran.c ****             png_do_expand(row_info, png_ptr->row_buf + 1,
4744:fltk-1.3.4-1/png/pngrtran.c ****                 &(png_ptr->trans_color));
4745:fltk-1.3.4-1/png/pngrtran.c **** 
4746:fltk-1.3.4-1/png/pngrtran.c ****          else
4747:fltk-1.3.4-1/png/pngrtran.c ****             png_do_expand(row_info, png_ptr->row_buf + 1,
 6213              		.loc 1 4747 0 is_stmt 1
 6214 0074 4883C601 		addq	$1, %rsi
 6215 0078 31D2     		xorl	%edx, %edx
 6216 007a 4889EF   		movq	%rbp, %rdi
 6217              	.LVL678:
 6218 007d E8000000 		call	png_do_expand
 6218      00
 6219              	.LVL679:
 6220              	.L776:
4748:fltk-1.3.4-1/png/pngrtran.c ****                 NULL);
4749:fltk-1.3.4-1/png/pngrtran.c ****       }
4750:fltk-1.3.4-1/png/pngrtran.c ****    }
4751:fltk-1.3.4-1/png/pngrtran.c **** #endif
4752:fltk-1.3.4-1/png/pngrtran.c **** 
4753:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
4754:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_STRIP_ALPHA) != 0 &&
 6221              		.loc 1 4754 0
 6222 0082 8B933401 		movl	308(%rbx), %edx
 6222      0000
 6223 0088 89D1     		movl	%edx, %ecx
 6224 008a 89D0     		movl	%edx, %eax
 6225 008c 81E18000 		andl	$262272, %ecx
 6225      0400
 6226 0092 81F90000 		cmpl	$262144, %ecx
 6226      0400
 6227 0098 0F847A0B 		je	.L1526
 6227      0000
 6228              	.L804:
4755:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) == 0 &&
4756:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
4757:fltk-1.3.4-1/png/pngrtran.c ****        row_info->color_type == PNG_COLOR_TYPE_GRAY_ALPHA))
4758:fltk-1.3.4-1/png/pngrtran.c ****       png_do_strip_channel(row_info, png_ptr->row_buf + 1,
4759:fltk-1.3.4-1/png/pngrtran.c ****          0 /* at_start == false, because SWAP_ALPHA happens later */);
4760:fltk-1.3.4-1/png/pngrtran.c **** #endif
4761:fltk-1.3.4-1/png/pngrtran.c **** 
4762:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
4763:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_RGB_TO_GRAY) != 0)
 6229              		.loc 1 4763 0
 6230 009e A9000060 		testl	$6291456, %eax
 6230      00
 6231 00a3 0F85070A 		jne	.L1527
 6231      0000
 6232              	.LVL680:
 6233              	.L807:
4764:fltk-1.3.4-1/png/pngrtran.c ****    {
4765:fltk-1.3.4-1/png/pngrtran.c ****       int rgb_error =
4766:fltk-1.3.4-1/png/pngrtran.c ****           png_do_rgb_to_gray(png_ptr, row_info,
4767:fltk-1.3.4-1/png/pngrtran.c ****               png_ptr->row_buf + 1);
4768:fltk-1.3.4-1/png/pngrtran.c **** 
4769:fltk-1.3.4-1/png/pngrtran.c ****       if (rgb_error != 0)
4770:fltk-1.3.4-1/png/pngrtran.c ****       {
4771:fltk-1.3.4-1/png/pngrtran.c ****          png_ptr->rgb_to_gray_status=1;
4772:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->transformations & PNG_RGB_TO_GRAY) ==
4773:fltk-1.3.4-1/png/pngrtran.c ****              PNG_RGB_TO_GRAY_WARN)
4774:fltk-1.3.4-1/png/pngrtran.c ****             png_warning(png_ptr, "png_do_rgb_to_gray found nongray pixel");
4775:fltk-1.3.4-1/png/pngrtran.c **** 
4776:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->transformations & PNG_RGB_TO_GRAY) ==
4777:fltk-1.3.4-1/png/pngrtran.c ****              PNG_RGB_TO_GRAY_ERR)
4778:fltk-1.3.4-1/png/pngrtran.c ****             png_error(png_ptr, "png_do_rgb_to_gray found nongray pixel");
4779:fltk-1.3.4-1/png/pngrtran.c ****       }
4780:fltk-1.3.4-1/png/pngrtran.c ****    }
4781:fltk-1.3.4-1/png/pngrtran.c **** #endif
4782:fltk-1.3.4-1/png/pngrtran.c **** 
4783:fltk-1.3.4-1/png/pngrtran.c **** /* From Andreas Dilger e-mail to png-implement, 26 March 1998:
4784:fltk-1.3.4-1/png/pngrtran.c ****  *
4785:fltk-1.3.4-1/png/pngrtran.c ****  *   In most cases, the "simple transparency" should be done prior to doing
4786:fltk-1.3.4-1/png/pngrtran.c ****  *   gray-to-RGB, or you will have to test 3x as many bytes to check if a
4787:fltk-1.3.4-1/png/pngrtran.c ****  *   pixel is transparent.  You would also need to make sure that the
4788:fltk-1.3.4-1/png/pngrtran.c ****  *   transparency information is upgraded to RGB.
4789:fltk-1.3.4-1/png/pngrtran.c ****  *
4790:fltk-1.3.4-1/png/pngrtran.c ****  *   To summarize, the current flow is:
4791:fltk-1.3.4-1/png/pngrtran.c ****  *   - Gray + simple transparency -> compare 1 or 2 gray bytes and composite
4792:fltk-1.3.4-1/png/pngrtran.c ****  *                                   with background "in place" if transparent,
4793:fltk-1.3.4-1/png/pngrtran.c ****  *                                   convert to RGB if necessary
4794:fltk-1.3.4-1/png/pngrtran.c ****  *   - Gray + alpha -> composite with gray background and remove alpha bytes,
4795:fltk-1.3.4-1/png/pngrtran.c ****  *                                   convert to RGB if necessary
4796:fltk-1.3.4-1/png/pngrtran.c ****  *
4797:fltk-1.3.4-1/png/pngrtran.c ****  *   To support RGB backgrounds for gray images we need:
4798:fltk-1.3.4-1/png/pngrtran.c ****  *   - Gray + simple transparency -> convert to RGB + simple transparency,
4799:fltk-1.3.4-1/png/pngrtran.c ****  *                                   compare 3 or 6 bytes and composite with
4800:fltk-1.3.4-1/png/pngrtran.c ****  *                                   background "in place" if transparent
4801:fltk-1.3.4-1/png/pngrtran.c ****  *                                   (3x compare/pixel compared to doing
4802:fltk-1.3.4-1/png/pngrtran.c ****  *                                   composite with gray bkgrnd)
4803:fltk-1.3.4-1/png/pngrtran.c ****  *   - Gray + alpha -> convert to RGB + alpha, composite with background and
4804:fltk-1.3.4-1/png/pngrtran.c ****  *                                   remove alpha bytes (3x float
4805:fltk-1.3.4-1/png/pngrtran.c ****  *                                   operations/pixel compared with composite
4806:fltk-1.3.4-1/png/pngrtran.c ****  *                                   on gray background)
4807:fltk-1.3.4-1/png/pngrtran.c ****  *
4808:fltk-1.3.4-1/png/pngrtran.c ****  *  Greg's change will do this.  The reason it wasn't done before is for
4809:fltk-1.3.4-1/png/pngrtran.c ****  *  performance, as this increases the per-pixel operations.  If we would check
4810:fltk-1.3.4-1/png/pngrtran.c ****  *  in advance if the background was gray or RGB, and position the gray-to-RGB
4811:fltk-1.3.4-1/png/pngrtran.c ****  *  transform appropriately, then it would save a lot of work/time.
4812:fltk-1.3.4-1/png/pngrtran.c ****  */
4813:fltk-1.3.4-1/png/pngrtran.c **** 
4814:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
4815:fltk-1.3.4-1/png/pngrtran.c ****    /* If gray -> RGB, do so now only if background is non-gray; else do later
4816:fltk-1.3.4-1/png/pngrtran.c ****     * for performance reasons
4817:fltk-1.3.4-1/png/pngrtran.c ****     */
4818:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_GRAY_TO_RGB) != 0 &&
 6234              		.loc 1 4818 0
 6235 00a9 F6C440   		testb	$64, %ah
 6236 00ac 0F85D602 		jne	.L1528
 6236      0000
 6237              	.L846:
4819:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->mode & PNG_BACKGROUND_IS_GRAY) == 0)
4820:fltk-1.3.4-1/png/pngrtran.c ****       png_do_gray_to_rgb(row_info, png_ptr->row_buf + 1);
4821:fltk-1.3.4-1/png/pngrtran.c **** #endif
4822:fltk-1.3.4-1/png/pngrtran.c **** 
4823:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) ||\
4824:fltk-1.3.4-1/png/pngrtran.c ****    defined(PNG_READ_ALPHA_MODE_SUPPORTED)
4825:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_COMPOSE) != 0)
 6238              		.loc 1 4825 0
 6239 00b2 A880     		testb	$-128, %al
 6240 00b4 0F850603 		jne	.L1529
 6240      0000
 6241              	.L847:
4826:fltk-1.3.4-1/png/pngrtran.c ****       png_do_compose(row_info, png_ptr->row_buf + 1, png_ptr);
4827:fltk-1.3.4-1/png/pngrtran.c **** #endif
4828:fltk-1.3.4-1/png/pngrtran.c **** 
4829:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GAMMA_SUPPORTED
4830:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_GAMMA) != 0 &&
 6242              		.loc 1 4830 0
 6243 00ba 8B833401 		movl	308(%rbx), %eax
 6243      0000
 6244 00c0 89C2     		movl	%eax, %edx
 6245 00c2 81E20020 		andl	$6299648, %edx
 6245      6000
 6246 00c8 81FA0020 		cmpl	$8192, %edx
 6246      0000
 6247 00ce 0F842C10 		je	.L1511
 6247      0000
 6248              	.L969:
4831:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
4832:fltk-1.3.4-1/png/pngrtran.c ****       /* Because RGB_TO_GRAY does the gamma transform. */
4833:fltk-1.3.4-1/png/pngrtran.c ****       (png_ptr->transformations & PNG_RGB_TO_GRAY) == 0 &&
4834:fltk-1.3.4-1/png/pngrtran.c **** #endif
4835:fltk-1.3.4-1/png/pngrtran.c **** #if defined(PNG_READ_BACKGROUND_SUPPORTED) ||\
4836:fltk-1.3.4-1/png/pngrtran.c ****    defined(PNG_READ_ALPHA_MODE_SUPPORTED)
4837:fltk-1.3.4-1/png/pngrtran.c ****       /* Because PNG_COMPOSE does the gamma transform if there is something to
4838:fltk-1.3.4-1/png/pngrtran.c ****        * do (if there is an alpha channel or transparency.)
4839:fltk-1.3.4-1/png/pngrtran.c ****        */
4840:fltk-1.3.4-1/png/pngrtran.c ****        !((png_ptr->transformations & PNG_COMPOSE) &&
4841:fltk-1.3.4-1/png/pngrtran.c ****        ((png_ptr->num_trans != 0) ||
4842:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0)) &&
4843:fltk-1.3.4-1/png/pngrtran.c **** #endif
4844:fltk-1.3.4-1/png/pngrtran.c ****       /* Because png_init_read_transformations transforms the palette, unless
4845:fltk-1.3.4-1/png/pngrtran.c ****        * RGB_TO_GRAY will do the transform.
4846:fltk-1.3.4-1/png/pngrtran.c ****        */
4847:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type != PNG_COLOR_TYPE_PALETTE))
4848:fltk-1.3.4-1/png/pngrtran.c ****       png_do_gamma(row_info, png_ptr->row_buf + 1, png_ptr);
4849:fltk-1.3.4-1/png/pngrtran.c **** #endif
4850:fltk-1.3.4-1/png/pngrtran.c **** 
4851:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_ALPHA_SUPPORTED
4852:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_STRIP_ALPHA) != 0 &&
 6249              		.loc 1 4852 0
 6250 00d4 25800004 		andl	$262272, %eax
 6250      00
 6251 00d9 3D800004 		cmpl	$262272, %eax
 6251      00
 6252 00de 0F84040B 		je	.L1530
 6252      0000
 6253              	.L1005:
4853:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) != 0 &&
4854:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
4855:fltk-1.3.4-1/png/pngrtran.c ****        row_info->color_type == PNG_COLOR_TYPE_GRAY_ALPHA))
4856:fltk-1.3.4-1/png/pngrtran.c ****       png_do_strip_channel(row_info, png_ptr->row_buf + 1,
4857:fltk-1.3.4-1/png/pngrtran.c ****           0 /* at_start == false, because SWAP_ALPHA happens later */);
4858:fltk-1.3.4-1/png/pngrtran.c **** #endif
4859:fltk-1.3.4-1/png/pngrtran.c **** 
4860:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_ALPHA_MODE_SUPPORTED
4861:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_ENCODE_ALPHA) != 0 &&
 6254              		.loc 1 4861 0
 6255 00e4 8B833401 		movl	308(%rbx), %eax
 6255      0000
 6256 00ea A9000080 		testl	$8388608, %eax
 6256      00
 6257 00ef 0F852B01 		jne	.L1531
 6257      0000
 6258              	.L1006:
4862:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type & PNG_COLOR_MASK_ALPHA) != 0)
4863:fltk-1.3.4-1/png/pngrtran.c ****       png_do_encode_alpha(row_info, png_ptr->row_buf + 1, png_ptr);
4864:fltk-1.3.4-1/png/pngrtran.c **** #endif
4865:fltk-1.3.4-1/png/pngrtran.c **** 
4866:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SCALE_16_TO_8_SUPPORTED
4867:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_SCALE_16_TO_8) != 0)
 6259              		.loc 1 4867 0
 6260 00f5 A9000000 		testl	$67108864, %eax
 6260      04
 6261 00fa 0F857801 		jne	.L1532
 6261      0000
 6262              	.L1013:
4868:fltk-1.3.4-1/png/pngrtran.c ****       png_do_scale_16_to_8(row_info, png_ptr->row_buf + 1);
4869:fltk-1.3.4-1/png/pngrtran.c **** #endif
4870:fltk-1.3.4-1/png/pngrtran.c **** 
4871:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_STRIP_16_TO_8_SUPPORTED
4872:fltk-1.3.4-1/png/pngrtran.c ****    /* There is no harm in doing both of these because only one has any effect,
4873:fltk-1.3.4-1/png/pngrtran.c ****     * by putting the 'scale' option first if the app asks for scale (either by
4874:fltk-1.3.4-1/png/pngrtran.c ****     * calling the API or in a TRANSFORM flag) this is what happens.
4875:fltk-1.3.4-1/png/pngrtran.c ****     */
4876:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_16_TO_8) != 0)
 6263              		.loc 1 4876 0
 6264 0100 F6C404   		testb	$4, %ah
 6265 0103 0F85CF08 		jne	.L1533
 6265      0000
 6266              	.L1018:
4877:fltk-1.3.4-1/png/pngrtran.c ****       png_do_chop(row_info, png_ptr->row_buf + 1);
4878:fltk-1.3.4-1/png/pngrtran.c **** #endif
4879:fltk-1.3.4-1/png/pngrtran.c **** 
4880:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_QUANTIZE_SUPPORTED
4881:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_QUANTIZE) != 0)
 6267              		.loc 1 4881 0
 6268 0109 A840     		testb	$64, %al
 6269 010b 0F85DF01 		jne	.L1534
 6269      0000
 6270              	.L1024:
4882:fltk-1.3.4-1/png/pngrtran.c ****    {
4883:fltk-1.3.4-1/png/pngrtran.c ****       png_do_quantize(row_info, png_ptr->row_buf + 1,
4884:fltk-1.3.4-1/png/pngrtran.c ****           png_ptr->palette_lookup, png_ptr->quantize_index);
4885:fltk-1.3.4-1/png/pngrtran.c **** 
4886:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->rowbytes == 0)
4887:fltk-1.3.4-1/png/pngrtran.c ****          png_error(png_ptr, "png_do_quantize returned rowbytes=0");
4888:fltk-1.3.4-1/png/pngrtran.c ****    }
4889:fltk-1.3.4-1/png/pngrtran.c **** #endif /* READ_QUANTIZE */
4890:fltk-1.3.4-1/png/pngrtran.c **** 
4891:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
4892:fltk-1.3.4-1/png/pngrtran.c ****    /* Do the expansion now, after all the arithmetic has been done.  Notice
4893:fltk-1.3.4-1/png/pngrtran.c ****     * that previous transformations can handle the PNG_EXPAND_16 flag if this
4894:fltk-1.3.4-1/png/pngrtran.c ****     * is efficient (particularly true in the case of gamma correction, where
4895:fltk-1.3.4-1/png/pngrtran.c ****     * better accuracy results faster!)
4896:fltk-1.3.4-1/png/pngrtran.c ****     */
4897:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_EXPAND_16) != 0)
 6271              		.loc 1 4897 0
 6272 0111 F6C402   		testb	$2, %ah
 6273 0114 0F85FC01 		jne	.L1535
 6273      0000
 6274              	.L1045:
4898:fltk-1.3.4-1/png/pngrtran.c ****       png_do_expand_16(row_info, png_ptr->row_buf + 1);
4899:fltk-1.3.4-1/png/pngrtran.c **** #endif
4900:fltk-1.3.4-1/png/pngrtran.c **** 
4901:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
4902:fltk-1.3.4-1/png/pngrtran.c ****    /* NOTE: moved here in 1.5.4 (from much later in this list.) */
4903:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_GRAY_TO_RGB) != 0 &&
 6275              		.loc 1 4903 0
 6276 011a F6C440   		testb	$64, %ah
 6277 011d 0F850505 		jne	.L1536
 6277      0000
 6278              	.L1048:
4904:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->mode & PNG_BACKGROUND_IS_GRAY) != 0)
4905:fltk-1.3.4-1/png/pngrtran.c ****       png_do_gray_to_rgb(row_info, png_ptr->row_buf + 1);
4906:fltk-1.3.4-1/png/pngrtran.c **** #endif
4907:fltk-1.3.4-1/png/pngrtran.c **** 
4908:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_INVERT_SUPPORTED
4909:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_INVERT_MONO) != 0)
 6279              		.loc 1 4909 0
 6280 0123 A820     		testb	$32, %al
 6281 0125 0F853505 		jne	.L1537
 6281      0000
 6282              	.L1049:
4910:fltk-1.3.4-1/png/pngrtran.c ****       png_do_invert(row_info, png_ptr->row_buf + 1);
4911:fltk-1.3.4-1/png/pngrtran.c **** #endif
4912:fltk-1.3.4-1/png/pngrtran.c **** 
4913:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_INVERT_ALPHA_SUPPORTED
4914:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_INVERT_ALPHA) != 0)
 6283              		.loc 1 4914 0
 6284 012b A9000008 		testl	$524288, %eax
 6284      00
 6285 0130 0F854E05 		jne	.L1538
 6285      0000
 6286              	.L1050:
4915:fltk-1.3.4-1/png/pngrtran.c ****       png_do_read_invert_alpha(row_info, png_ptr->row_buf + 1);
4916:fltk-1.3.4-1/png/pngrtran.c **** #endif
4917:fltk-1.3.4-1/png/pngrtran.c **** 
4918:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SHIFT_SUPPORTED
4919:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_SHIFT) != 0)
 6287              		.loc 1 4919 0
 6288 0136 A808     		testb	$8, %al
 6289 0138 0F85C205 		jne	.L1539
 6289      0000
 6290              	.L1060:
4920:fltk-1.3.4-1/png/pngrtran.c ****       png_do_unshift(row_info, png_ptr->row_buf + 1,
4921:fltk-1.3.4-1/png/pngrtran.c ****           &(png_ptr->shift));
4922:fltk-1.3.4-1/png/pngrtran.c **** #endif
4923:fltk-1.3.4-1/png/pngrtran.c **** 
4924:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_PACK_SUPPORTED
4925:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_PACK) != 0)
 6291              		.loc 1 4925 0
 6292 013e A804     		testb	$4, %al
 6293 0140 0F85E006 		jne	.L1540
 6293      0000
 6294              	.L1084:
4926:fltk-1.3.4-1/png/pngrtran.c ****       png_do_unpack(row_info, png_ptr->row_buf + 1);
4927:fltk-1.3.4-1/png/pngrtran.c **** #endif
4928:fltk-1.3.4-1/png/pngrtran.c **** 
4929:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_CHECK_FOR_INVALID_INDEX_SUPPORTED
4930:fltk-1.3.4-1/png/pngrtran.c ****    /* Added at libpng-1.5.10 */
4931:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->color_type == PNG_COLOR_TYPE_PALETTE &&
 6295              		.loc 1 4931 0
 6296 0146 807D1003 		cmpb	$3, 16(%rbp)
 6297 014a 0F843007 		je	.L1101
 6297      0000
 6298              	.L1102:
4932:fltk-1.3.4-1/png/pngrtran.c ****        png_ptr->num_palette_max >= 0)
4933:fltk-1.3.4-1/png/pngrtran.c ****       png_do_check_palette_indexes(png_ptr, row_info);
4934:fltk-1.3.4-1/png/pngrtran.c **** #endif
4935:fltk-1.3.4-1/png/pngrtran.c **** 
4936:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_BGR_SUPPORTED
4937:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_BGR) != 0)
 6299              		.loc 1 4937 0
 6300 0150 8B933401 		movl	308(%rbx), %edx
 6300      0000
 6301 0156 F6C201   		testb	$1, %dl
 6302 0159 0F855107 		jne	.L1541
 6302      0000
 6303              	.L1104:
4938:fltk-1.3.4-1/png/pngrtran.c ****       png_do_bgr(row_info, png_ptr->row_buf + 1);
4939:fltk-1.3.4-1/png/pngrtran.c **** #endif
4940:fltk-1.3.4-1/png/pngrtran.c **** 
4941:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_PACKSWAP_SUPPORTED
4942:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_PACKSWAP) != 0)
 6304              		.loc 1 4942 0
 6305 015f F7C20000 		testl	$65536, %edx
 6305      0100
 6306 0165 0F856A07 		jne	.L1542
 6306      0000
 6307              	.L1105:
4943:fltk-1.3.4-1/png/pngrtran.c ****       png_do_packswap(row_info, png_ptr->row_buf + 1);
4944:fltk-1.3.4-1/png/pngrtran.c **** #endif
4945:fltk-1.3.4-1/png/pngrtran.c **** 
4946:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_FILLER_SUPPORTED
4947:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_FILLER) != 0)
 6308              		.loc 1 4947 0
 6309 016b F6C680   		testb	$128, %dh
 6310 016e 0F858307 		jne	.L1543
 6310      0000
 6311              	.L1106:
4948:fltk-1.3.4-1/png/pngrtran.c ****       png_do_read_filler(row_info, png_ptr->row_buf + 1,
4949:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)png_ptr->filler, png_ptr->flags);
4950:fltk-1.3.4-1/png/pngrtran.c **** #endif
4951:fltk-1.3.4-1/png/pngrtran.c **** 
4952:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SWAP_ALPHA_SUPPORTED
4953:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_SWAP_ALPHA) != 0)
 6312              		.loc 1 4953 0
 6313 0174 F7C20000 		testl	$131072, %edx
 6313      0200
 6314 017a 0F85B00A 		jne	.L1544
 6314      0000
 6315              	.L1115:
4954:fltk-1.3.4-1/png/pngrtran.c ****       png_do_read_swap_alpha(row_info, png_ptr->row_buf + 1);
4955:fltk-1.3.4-1/png/pngrtran.c **** #endif
4956:fltk-1.3.4-1/png/pngrtran.c **** 
4957:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_16BIT_SUPPORTED
4958:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_SWAP_SUPPORTED
4959:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_SWAP_BYTES) != 0)
 6316              		.loc 1 4959 0
 6317 0180 F6C210   		testb	$16, %dl
 6318 0183 0F850709 		jne	.L1545
 6318      0000
 6319              	.L1142:
4960:fltk-1.3.4-1/png/pngrtran.c ****       png_do_swap(row_info, png_ptr->row_buf + 1);
4961:fltk-1.3.4-1/png/pngrtran.c **** #endif
4962:fltk-1.3.4-1/png/pngrtran.c **** #endif
4963:fltk-1.3.4-1/png/pngrtran.c **** 
4964:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_USER_TRANSFORM_SUPPORTED
4965:fltk-1.3.4-1/png/pngrtran.c ****    if ((png_ptr->transformations & PNG_USER_TRANSFORM) != 0)
 6320              		.loc 1 4965 0
 6321 0189 81E20000 		andl	$1048576, %edx
 6321      1000
 6322 018f 7464     		je	.L773
4966:fltk-1.3.4-1/png/pngrtran.c ****    {
4967:fltk-1.3.4-1/png/pngrtran.c ****       if (png_ptr->read_user_transform_fn != NULL)
 6323              		.loc 1 4967 0
 6324 0191 488B8310 		movq	272(%rbx), %rax
 6324      010000
 6325 0198 4885C0   		testq	%rax, %rax
 6326 019b 7413     		je	.L1144
4968:fltk-1.3.4-1/png/pngrtran.c ****          (*(png_ptr->read_user_transform_fn)) /* User read transform function */
 6327              		.loc 1 4968 0
 6328 019d 488BBB28 		movq	552(%rbx), %rdi
 6328      020000
 6329 01a4 4889EE   		movq	%rbp, %rsi
 6330 01a7 488D5701 		leaq	1(%rdi), %rdx
 6331 01ab 4889DF   		movq	%rbx, %rdi
 6332 01ae FFD0     		call	*%rax
 6333              	.LVL681:
 6334              	.L1144:
4969:fltk-1.3.4-1/png/pngrtran.c ****              (png_ptr,     /* png_ptr */
4970:fltk-1.3.4-1/png/pngrtran.c ****              row_info,     /* row_info: */
4971:fltk-1.3.4-1/png/pngrtran.c ****                 /*  png_uint_32 width;       width of row */
4972:fltk-1.3.4-1/png/pngrtran.c ****                 /*  png_size_t rowbytes;     number of bytes in row */
4973:fltk-1.3.4-1/png/pngrtran.c ****                 /*  png_byte color_type;     color type of pixels */
4974:fltk-1.3.4-1/png/pngrtran.c ****                 /*  png_byte bit_depth;      bit depth of samples */
4975:fltk-1.3.4-1/png/pngrtran.c ****                 /*  png_byte channels;       number of channels (1-4) */
4976:fltk-1.3.4-1/png/pngrtran.c ****                 /*  png_byte pixel_depth;    bits per pixel (depth*channels) */
4977:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->row_buf + 1);    /* start of pixel data for row */
4978:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_USER_TRANSFORM_PTR_SUPPORTED
4979:fltk-1.3.4-1/png/pngrtran.c ****       if (png_ptr->user_transform_depth != 0)
 6335              		.loc 1 4979 0
 6336 01b0 0FB68328 		movzbl	296(%rbx), %eax
 6336      010000
 6337 01b7 84C0     		testb	%al, %al
 6338 01b9 0F859108 		jne	.L1145
 6338      0000
4980:fltk-1.3.4-1/png/pngrtran.c ****          row_info->bit_depth = png_ptr->user_transform_depth;
4981:fltk-1.3.4-1/png/pngrtran.c **** 
4982:fltk-1.3.4-1/png/pngrtran.c ****       if (png_ptr->user_transform_channels != 0)
 6339              		.loc 1 4982 0
 6340 01bf 0FB69329 		movzbl	297(%rbx), %edx
 6340      010000
 6341 01c6 0FB64511 		movzbl	17(%rbp), %eax
 6342 01ca 84D2     		testb	%dl, %dl
 6343 01cc 0F859008 		jne	.L1147
 6343      0000
 6344              	.L1560:
 6345 01d2 0FB65512 		movzbl	18(%rbp), %edx
4983:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = png_ptr->user_transform_channels;
4984:fltk-1.3.4-1/png/pngrtran.c **** #endif
4985:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(row_info->bit_depth *
 6346              		.loc 1 4985 0
 6347 01d6 0FAFC2   		imull	%edx, %eax
4986:fltk-1.3.4-1/png/pngrtran.c ****           row_info->channels);
4987:fltk-1.3.4-1/png/pngrtran.c **** 
4988:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_info->width);
 6348              		.loc 1 4988 0
 6349 01d9 3C07     		cmpb	$7, %al
4985:fltk-1.3.4-1/png/pngrtran.c ****           row_info->channels);
 6350              		.loc 1 4985 0
 6351 01db 884513   		movb	%al, 19(%rbp)
 6352              		.loc 1 4988 0
 6353 01de 0F868F08 		jbe	.L1149
 6353      0000
 6354              	.L1561:
 6355              		.loc 1 4988 0 is_stmt 0 discriminator 1
 6356 01e4 8B4D00   		movl	0(%rbp), %ecx
 6357 01e7 C0E803   		shrb	$3, %al
 6358 01ea 0FB6C0   		movzbl	%al, %eax
 6359 01ed 480FAFC1 		imulq	%rcx, %rax
 6360              	.L1150:
 6361              		.loc 1 4988 0 discriminator 4
 6362 01f1 48894508 		movq	%rax, 8(%rbp)
 6363              	.L773:
4989:fltk-1.3.4-1/png/pngrtran.c ****    }
4990:fltk-1.3.4-1/png/pngrtran.c **** #endif
4991:fltk-1.3.4-1/png/pngrtran.c **** }
 6364              		.loc 1 4991 0 is_stmt 1
 6365 01f5 488B4424 		movq	40(%rsp), %rax
 6365      28
 6366 01fa 64483304 		xorq	%fs:40, %rax
 6366      25280000 
 6366      00
 6367 0203 0F857F2E 		jne	.L1546
 6367      0000
 6368 0209 4883C438 		addq	$56, %rsp
 6369              		.cfi_remember_state
 6370              		.cfi_def_cfa_offset 56
 6371 020d 5B       		popq	%rbx
 6372              		.cfi_def_cfa_offset 48
 6373              	.LVL682:
 6374 020e 5D       		popq	%rbp
 6375              		.cfi_def_cfa_offset 40
 6376 020f 415C     		popq	%r12
 6377              		.cfi_def_cfa_offset 32
 6378 0211 415D     		popq	%r13
 6379              		.cfi_def_cfa_offset 24
 6380 0213 415E     		popq	%r14
 6381              		.cfi_def_cfa_offset 16
 6382 0215 415F     		popq	%r15
 6383              		.cfi_def_cfa_offset 8
 6384 0217 C3       		ret
 6385              	.LVL683:
 6386 0218 0F1F8400 		.p2align 4,,10
 6386      00000000 
 6387              		.p2align 3
 6388              	.L1531:
 6389              		.cfi_restore_state
4862:fltk-1.3.4-1/png/pngrtran.c ****       png_do_encode_alpha(row_info, png_ptr->row_buf + 1, png_ptr);
 6390              		.loc 1 4862 0 discriminator 1
 6391 0220 0FB65510 		movzbl	16(%rbp), %edx
4861:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type & PNG_COLOR_MASK_ALPHA) != 0)
 6392              		.loc 1 4861 0 discriminator 1
 6393 0224 F6C204   		testb	$4, %dl
 6394 0227 0F84C8FE 		je	.L1006
 6394      FFFF
4863:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6395              		.loc 1 4863 0
 6396 022d 488BBB28 		movq	552(%rbx), %rdi
 6396      020000
 6397 0234 8B7500   		movl	0(%rbp), %esi
 6398 0237 488D4F01 		leaq	1(%rdi), %rcx
 6399              	.LVL684:
 6400              	.LBB458:
 6401              	.LBB459:
4134:fltk-1.3.4-1/png/pngrtran.c ****       {
 6402              		.loc 1 4134 0
 6403 023b 0FB67D11 		movzbl	17(%rbp), %edi
 6404 023f 4080FF08 		cmpb	$8, %dil
 6405 0243 0F84C71C 		je	.L1547
 6405      0000
4153:fltk-1.3.4-1/png/pngrtran.c ****       {
 6406              		.loc 1 4153 0
 6407 0249 4080FF10 		cmpb	$16, %dil
 6408 024d 0F840D20 		je	.L1548
 6408      0000
 6409              	.L1008:
4183:fltk-1.3.4-1/png/pngrtran.c **** }
 6410              		.loc 1 4183 0
 6411 0253 BE000000 		movl	$.LC53, %esi
 6411      00
 6412              	.LVL685:
 6413 0258 4889DF   		movq	%rbx, %rdi
 6414 025b E8000000 		call	png_warning
 6414      00
 6415              	.LVL686:
 6416              	.L1513:
 6417 0260 8B833401 		movl	308(%rbx), %eax
 6417      0000
 6418              	.LBE459:
 6419              	.LBE458:
4867:fltk-1.3.4-1/png/pngrtran.c ****       png_do_scale_16_to_8(row_info, png_ptr->row_buf + 1);
 6420              		.loc 1 4867 0
 6421 0266 A9000000 		testl	$67108864, %eax
 6421      04
 6422 026b 0F848FFE 		je	.L1013
 6422      FFFF
 6423              	.LVL687:
 6424              		.p2align 4,,10
 6425 0271 0F1F8000 		.p2align 3
 6425      000000
 6426              	.L1532:
 6427              	.LBB468:
 6428              	.LBB469:
2377:fltk-1.3.4-1/png/pngrtran.c ****    {
 6429              		.loc 1 2377 0
 6430 0278 807D1110 		cmpb	$16, 17(%rbp)
 6431 027c 0F8587FE 		jne	.L1018
 6431      FFFF
 6432              	.LBE469:
 6433              	.LBE468:
4868:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6434              		.loc 1 4868 0
 6435 0282 488B8328 		movq	552(%rbx), %rax
 6435      020000
 6436 0289 488D7001 		leaq	1(%rax), %rsi
 6437              	.LVL688:
 6438              	.LBB474:
 6439              	.LBB473:
 6440              	.LBB470:
2381:fltk-1.3.4-1/png/pngrtran.c **** 
 6441              		.loc 1 2381 0
 6442 028d 4989F0   		movq	%rsi, %r8
 6443 0290 4C034508 		addq	8(%rbp), %r8
 6444              	.LVL689:
2383:fltk-1.3.4-1/png/pngrtran.c ****       {
 6445              		.loc 1 2383 0
 6446 0294 4889F7   		movq	%rsi, %rdi
 6447 0297 4C39C6   		cmpq	%r8, %rsi
 6448 029a 732C     		jnb	.L1017
 6449              	.LVL690:
 6450 029c 0F1F4000 		.p2align 4,,10
 6451              		.p2align 3
 6452              	.L1337:
 6453              	.LBB471:
2417:fltk-1.3.4-1/png/pngrtran.c ****          tmp += (((int)*sp++ - tmp + 128) * 65535) >> 24;
 6454              		.loc 1 2417 0
 6455 02a0 0FB60E   		movzbl	(%rsi), %ecx
 6456              	.LVL691:
 6457 02a3 4883C602 		addq	$2, %rsi
 6458              	.LVL692:
2419:fltk-1.3.4-1/png/pngrtran.c ****       }
 6459              		.loc 1 2419 0
 6460 02a7 4883C701 		addq	$1, %rdi
 6461              	.LVL693:
2418:fltk-1.3.4-1/png/pngrtran.c ****          *dp++ = (png_byte)tmp;
 6462              		.loc 1 2418 0
 6463 02ab 0FB656FF 		movzbl	-1(%rsi), %edx
 6464 02af 29CA     		subl	%ecx, %edx
 6465 02b1 83EA80   		subl	$-128, %edx
 6466 02b4 89D0     		movl	%edx, %eax
 6467 02b6 C1E010   		sall	$16, %eax
 6468 02b9 29D0     		subl	%edx, %eax
 6469 02bb C1F818   		sarl	$24, %eax
 6470              	.LVL694:
2419:fltk-1.3.4-1/png/pngrtran.c ****       }
 6471              		.loc 1 2419 0
 6472 02be 01C8     		addl	%ecx, %eax
 6473              	.LVL695:
 6474              	.LBE471:
2383:fltk-1.3.4-1/png/pngrtran.c ****       {
 6475              		.loc 1 2383 0
 6476 02c0 4939F0   		cmpq	%rsi, %r8
 6477              	.LBB472:
2419:fltk-1.3.4-1/png/pngrtran.c ****       }
 6478              		.loc 1 2419 0
 6479 02c3 8847FF   		movb	%al, -1(%rdi)
 6480              	.LBE472:
2383:fltk-1.3.4-1/png/pngrtran.c ****       {
 6481              		.loc 1 2383 0
 6482 02c6 77D8     		ja	.L1337
 6483              	.LVL696:
 6484              	.L1017:
2423:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
 6485              		.loc 1 2423 0
 6486 02c8 0FB64512 		movzbl	18(%rbp), %eax
2422:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(8 * row_info->channels);
 6487              		.loc 1 2422 0
 6488 02cc C6451108 		movb	$8, 17(%rbp)
2423:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
 6489              		.loc 1 2423 0
 6490 02d0 8D14C500 		leal	0(,%rax,8), %edx
 6490      000000
2424:fltk-1.3.4-1/png/pngrtran.c ****    }
 6491              		.loc 1 2424 0
 6492 02d7 0FAF4500 		imull	0(%rbp), %eax
2423:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
 6493              		.loc 1 2423 0
 6494 02db 885513   		movb	%dl, 19(%rbp)
2424:fltk-1.3.4-1/png/pngrtran.c ****    }
 6495              		.loc 1 2424 0
 6496 02de 48894508 		movq	%rax, 8(%rbp)
 6497 02e2 8B833401 		movl	308(%rbx), %eax
 6497      0000
 6498              	.LBE470:
 6499              	.LBE473:
 6500              	.LBE474:
4881:fltk-1.3.4-1/png/pngrtran.c ****    {
 6501              		.loc 1 4881 0
 6502 02e8 A840     		testb	$64, %al
 6503 02ea 0F8421FE 		je	.L1024
 6503      FFFF
 6504              	.LVL697:
 6505              		.p2align 4,,10
 6506              		.p2align 3
 6507              	.L1534:
 6508              	.LBB475:
 6509              	.LBB476:
4613:fltk-1.3.4-1/png/pngrtran.c ****    {
 6510              		.loc 1 4613 0
 6511 02f0 807D1108 		cmpb	$8, 17(%rbp)
 6512 02f4 0F84A60B 		je	.L1549
 6512      0000
 6513              	.LVL698:
 6514              	.L1514:
 6515 02fa 4C8B4508 		movq	8(%rbp), %r8
 6516              	.L1026:
 6517              	.LVL699:
 6518              	.LBE476:
 6519              	.LBE475:
4886:fltk-1.3.4-1/png/pngrtran.c ****          png_error(png_ptr, "png_do_quantize returned rowbytes=0");
 6520              		.loc 1 4886 0
 6521 02fe 4D85C0   		testq	%r8, %r8
 6522 0301 0F84862D 		je	.L1044
 6522      0000
 6523 0307 8B833401 		movl	308(%rbx), %eax
 6523      0000
4897:fltk-1.3.4-1/png/pngrtran.c ****       png_do_expand_16(row_info, png_ptr->row_buf + 1);
 6524              		.loc 1 4897 0
 6525 030d F6C402   		testb	$2, %ah
 6526 0310 0F8404FE 		je	.L1045
 6526      FFFF
 6527              	.L1535:
 6528              	.LVL700:
 6529              	.LBB486:
 6530              	.LBB487:
4578:fltk-1.3.4-1/png/pngrtran.c ****       row_info->color_type != PNG_COLOR_TYPE_PALETTE)
 6531              		.loc 1 4578 0
 6532 0316 807D1108 		cmpb	$8, 17(%rbp)
 6533 031a 0F85FAFD 		jne	.L1045
 6533      FFFF
 6534              	.LVL701:
 6535              	.L1154:
 6536 0320 807D1003 		cmpb	$3, 16(%rbp)
 6537 0324 0F84F0FD 		je	.L1045
 6537      FFFF
 6538              	.LBB488:
4590:fltk-1.3.4-1/png/pngrtran.c ****       png_byte *dp = sp + row_info->rowbytes;  /* destination, end + 1 */
 6539              		.loc 1 4590 0
 6540 032a 488B4D08 		movq	8(%rbp), %rcx
 6541 032e 488B8328 		movq	552(%rbx), %rax
 6541      020000
 6542 0335 488D5408 		leaq	1(%rax,%rcx), %rdx
 6542      01
 6543              	.LVL702:
4591:fltk-1.3.4-1/png/pngrtran.c ****       while (dp > sp)
 6544              		.loc 1 4591 0
 6545 033a 488D040A 		leaq	(%rdx,%rcx), %rax
 6546              	.LVL703:
4592:fltk-1.3.4-1/png/pngrtran.c ****          dp[-2] = dp[-1] = *--sp, dp -= 2;
 6547              		.loc 1 4592 0
 6548 033e 4839C2   		cmpq	%rax, %rdx
 6549 0341 731E     		jnb	.L1046
 6550              	.LVL704:
 6551              		.p2align 4,,10
 6552 0343 0F1F4400 		.p2align 3
 6552      00
 6553              	.L1047:
4593:fltk-1.3.4-1/png/pngrtran.c **** 
 6554              		.loc 1 4593 0
 6555 0348 4883EA01 		subq	$1, %rdx
 6556              	.LVL705:
 6557 034c 0FB60A   		movzbl	(%rdx), %ecx
 6558 034f 4883E802 		subq	$2, %rax
 6559              	.LVL706:
 6560 0353 884801   		movb	%cl, 1(%rax)
 6561 0356 8808     		movb	%cl, (%rax)
 6562              	.LVL707:
4592:fltk-1.3.4-1/png/pngrtran.c ****          dp[-2] = dp[-1] = *--sp, dp -= 2;
 6563              		.loc 1 4592 0
 6564 0358 4839C2   		cmpq	%rax, %rdx
 6565 035b 72EB     		jb	.L1047
 6566 035d 488B4D08 		movq	8(%rbp), %rcx
 6567              	.L1046:
4597:fltk-1.3.4-1/png/pngrtran.c ****    }
 6568              		.loc 1 4597 0
 6569 0361 0FB64512 		movzbl	18(%rbp), %eax
 6570              	.LVL708:
4595:fltk-1.3.4-1/png/pngrtran.c ****       row_info->bit_depth = 16;
 6571              		.loc 1 4595 0
 6572 0365 4801C9   		addq	%rcx, %rcx
4596:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(row_info->channels * 16);
 6573              		.loc 1 4596 0
 6574 0368 C6451110 		movb	$16, 17(%rbp)
4595:fltk-1.3.4-1/png/pngrtran.c ****       row_info->bit_depth = 16;
 6575              		.loc 1 4595 0
 6576 036c 48894D08 		movq	%rcx, 8(%rbp)
4597:fltk-1.3.4-1/png/pngrtran.c ****    }
 6577              		.loc 1 4597 0
 6578 0370 C1E004   		sall	$4, %eax
 6579 0373 884513   		movb	%al, 19(%rbp)
 6580 0376 8B833401 		movl	308(%rbx), %eax
 6580      0000
 6581 037c E999FDFF 		jmp	.L1045
 6581      FF
 6582              	.LVL709:
 6583              		.p2align 4,,10
 6584 0381 0F1F8000 		.p2align 3
 6584      000000
 6585              	.L1528:
 6586              	.LBE488:
 6587              	.LBE487:
 6588              	.LBE486:
4818:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->mode & PNG_BACKGROUND_IS_GRAY) == 0)
 6589              		.loc 1 4818 0 discriminator 1
 6590 0388 F6832D01 		testb	$8, 301(%rbx)
 6590      000008
 6591 038f 0F851DFD 		jne	.L846
 6591      FFFF
4820:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6592              		.loc 1 4820 0
 6593 0395 488B8328 		movq	552(%rbx), %rax
 6593      020000
 6594 039c 4889EF   		movq	%rbp, %rdi
 6595 039f 488D7001 		leaq	1(%rax), %rsi
 6596 03a3 E8000000 		call	png_do_gray_to_rgb
 6596      00
 6597              	.LVL710:
 6598 03a8 8B833401 		movl	308(%rbx), %eax
 6598      0000
4825:fltk-1.3.4-1/png/pngrtran.c ****       png_do_compose(row_info, png_ptr->row_buf + 1, png_ptr);
 6599              		.loc 1 4825 0
 6600 03ae A880     		testb	$-128, %al
 6601 03b0 0F8404FD 		je	.L847
 6601      FFFF
 6602 03b6 662E0F1F 		.p2align 4,,10
 6602      84000000 
 6602      0000
 6603              		.p2align 3
 6604              	.L1529:
 6605              	.LBB489:
 6606              	.LBB490:
3206:fltk-1.3.4-1/png/pngrtran.c ****       {
 6607              		.loc 1 3206 0
 6608 03c0 0FB64510 		movzbl	16(%rbp), %eax
3195:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6609              		.loc 1 3195 0
 6610 03c4 8BBB3001 		movl	304(%rbx), %edi
 6610      0000
 6611              	.LBE490:
 6612              	.LBE489:
4826:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6613              		.loc 1 4826 0
 6614 03ca 4C8BB328 		movq	552(%rbx), %r14
 6614      020000
 6615 03d1 448B5D00 		movl	0(%rbp), %r11d
 6616              	.LBB597:
 6617              	.LBB586:
3188:fltk-1.3.4-1/png/pngrtran.c ****    png_const_bytep gamma_from_1 = png_ptr->gamma_from_1;
 6618              		.loc 1 3188 0
 6619 03d5 488BB3B8 		movq	696(%rbx), %rsi
 6619      020000
3189:fltk-1.3.4-1/png/pngrtran.c ****    png_const_bytep gamma_to_1 = png_ptr->gamma_to_1;
 6620              		.loc 1 3189 0
 6621 03dc 4C8BABC8 		movq	712(%rbx), %r13
 6621      020000
3195:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6622              		.loc 1 3195 0
 6623 03e3 81E70020 		andl	$8192, %edi
 6623      0000
3190:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16 = png_ptr->gamma_16_table;
 6624              		.loc 1 3190 0
 6625 03e9 4C8BA3D0 		movq	720(%rbx), %r12
 6625      020000
3191:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16_from_1 = png_ptr->gamma_16_from_1;
 6626              		.loc 1 3191 0
 6627 03f0 4C8B8BC0 		movq	704(%rbx), %r9
 6627      020000
3206:fltk-1.3.4-1/png/pngrtran.c ****       {
 6628              		.loc 1 3206 0
 6629 03f7 3C02     		cmpb	$2, %al
 6630              	.LBE586:
 6631              	.LBE597:
4826:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6632              		.loc 1 4826 0
 6633 03f9 498D5601 		leaq	1(%r14), %rdx
 6634              	.LVL711:
 6635              	.LBB598:
 6636              	.LBB587:
3192:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16_to_1 = png_ptr->gamma_16_to_1;
 6637              		.loc 1 3192 0
 6638 03fd 4C8B93D8 		movq	728(%rbx), %r10
 6638      020000
 6639              	.LVL712:
3193:fltk-1.3.4-1/png/pngrtran.c ****    int gamma_shift = png_ptr->gamma_shift;
 6640              		.loc 1 3193 0
 6641 0404 4C8B83E0 		movq	736(%rbx), %r8
 6641      020000
 6642              	.LVL713:
3194:fltk-1.3.4-1/png/pngrtran.c ****    int optimize = (png_ptr->flags & PNG_FLAG_OPTIMIZE_ALPHA) != 0;
 6643              		.loc 1 3194 0
 6644 040b 8B8BB002 		movl	688(%rbx), %ecx
 6644      0000
 6645              	.LVL714:
3206:fltk-1.3.4-1/png/pngrtran.c ****       {
 6646              		.loc 1 3206 0
 6647 0411 0F84190F 		je	.L849
 6647      0000
 6648 0417 0F869309 		jbe	.L1550
 6648      0000
 6649 041d 3C04     		cmpb	$4, %al
 6650 041f 0F841B0E 		je	.L852
 6650      0000
 6651 0425 3C06     		cmpb	$6, %al
 6652 0427 0F85EB0A 		jne	.L848
 6652      0000
3709:fltk-1.3.4-1/png/pngrtran.c ****             {
 6653              		.loc 1 3709 0
 6654 042d 807D1108 		cmpb	$8, 17(%rbp)
 6655 0431 0F84C912 		je	.L1551
 6655      0000
3787:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_16_to_1 != NULL)
 6656              		.loc 1 3787 0
 6657 0437 4D85C9   		testq	%r9, %r9
 6658 043a 400F95C6 		setne	%sil
 6659              	.LVL715:
 6660 043e 4D85D2   		testq	%r10, %r10
 6661 0441 0F95C0   		setne	%al
 6662 0444 4084C6   		testb	%al, %sil
 6663 0447 0F84F922 		je	.L1178
 6663      0000
 6664 044d 4D85C0   		testq	%r8, %r8
 6665 0450 0F84F022 		je	.L1178
 6665      0000
 6666              	.LVL716:
3791:fltk-1.3.4-1/png/pngrtran.c ****                   {
 6667              		.loc 1 3791 0
 6668 0456 4585DB   		testl	%r11d, %r11d
 6669 0459 0F84711E 		je	.L860
 6669      0000
 6670 045f 418D43FF 		leal	-1(%r11), %eax
 6671              	.LBB491:
 6672              	.LBB492:
 6673              	.LBB493:
3832:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6674              		.loc 1 3832 0
 6675 0463 41BCFFFF 		movl	$65535, %r12d
 6675      0000
 6676              	.LVL717:
 6677 0469 4D8D5CC6 		leaq	9(%r14,%rax,8), %r11
 6677      09
 6678              	.LVL718:
 6679 046e EB48     		jmp	.L965
 6680              	.LVL719:
 6681              		.p2align 4,,10
 6682              		.p2align 3
 6683              	.L1553:
 6684              	.LBE493:
 6685              	.LBE492:
3816:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
 6686              		.loc 1 3816 0
 6687 0470 0FB6838B 		movzbl	651(%rbx), %eax
 6687      020000
 6688              	.LVL720:
 6689 0477 8802     		movb	%al, (%rdx)
3817:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
 6690              		.loc 1 3817 0
 6691 0479 0FB7838A 		movzwl	650(%rbx), %eax
 6691      020000
 6692 0480 884201   		movb	%al, 1(%rdx)
3818:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 6693              		.loc 1 3818 0
 6694 0483 0FB6838D 		movzbl	653(%rbx), %eax
 6694      020000
 6695 048a 884202   		movb	%al, 2(%rdx)
3820:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 6696              		.loc 1 3820 0
 6697 048d 0FB7838C 		movzwl	652(%rbx), %eax
 6697      020000
 6698 0494 884203   		movb	%al, 3(%rdx)
3822:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 6699              		.loc 1 3822 0
 6700 0497 0FB6838F 		movzbl	655(%rbx), %eax
 6700      020000
 6701 049e 884204   		movb	%al, 4(%rdx)
3824:fltk-1.3.4-1/png/pngrtran.c ****                      }
 6702              		.loc 1 3824 0
 6703 04a1 0FB7838E 		movzwl	654(%rbx), %eax
 6703      020000
 6704 04a8 884205   		movb	%al, 5(%rdx)
 6705              	.L960:
 6706              	.LBE491:
3791:fltk-1.3.4-1/png/pngrtran.c ****                   {
 6707              		.loc 1 3791 0
 6708 04ab 4883C208 		addq	$8, %rdx
 6709              	.LVL721:
 6710 04af 4C39DA   		cmpq	%r11, %rdx
 6711 04b2 0F84600A 		je	.L848
 6711      0000
 6712              	.L965:
 6713              	.LBB504:
3793:fltk-1.3.4-1/png/pngrtran.c ****                          << 8) + (png_uint_16)(*(sp + 7)));
 6714              		.loc 1 3793 0
 6715 04b8 0FB64206 		movzbl	6(%rdx), %eax
 6716 04bc 0FB67207 		movzbl	7(%rdx), %esi
 6717 04c0 C1E008   		sall	$8, %eax
 6718 04c3 01F0     		addl	%esi, %eax
 6719              	.LVL722:
3796:fltk-1.3.4-1/png/pngrtran.c ****                      {
 6720              		.loc 1 3796 0
 6721 04c5 6683F8FF 		cmpw	$-1, %ax
 6722 04c9 0F846916 		je	.L1552
 6722      0000
3813:fltk-1.3.4-1/png/pngrtran.c ****                      {
 6723              		.loc 1 3813 0
 6724 04cf 6685C0   		testw	%ax, %ax
 6725 04d2 749C     		je	.L1553
 6726              	.LVL723:
 6727              	.LBB502:
3831:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.red);
 6728              		.loc 1 3831 0
 6729 04d4 440FB66A 		movzbl	1(%rdx), %r13d
 6729      01
 6730              	.LVL724:
 6731 04d9 440FB632 		movzbl	(%rdx), %r14d
 6732              	.LBB494:
3832:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6733              		.loc 1 3832 0
 6734 04dd 440FB7F8 		movzwl	%ax, %r15d
 6735 04e1 4489E6   		movl	%r12d, %esi
 6736 04e4 4429FE   		subl	%r15d, %esi
 6737              	.LBE494:
3831:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.red);
 6738              		.loc 1 3831 0
 6739 04e7 41D3FD   		sarl	%cl, %r13d
 6740              	.LVL725:
 6741 04ea 4D63ED   		movslq	%r13d, %r13
 6742 04ed 4F8B2CE8 		movq	(%r8,%r13,8), %r13
 6743              	.LBB495:
3832:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6744              		.loc 1 3832 0
 6745 04f1 470FB774 		movzwl	0(%r13,%r14,2), %r14d
 6745      7500
 6746 04f7 440FB7AB 		movzwl	660(%rbx), %r13d
 6746      94020000 
 6747 04ff 450FAFF7 		imull	%r15d, %r14d
 6748 0503 440FAFEE 		imull	%esi, %r13d
 6749 0507 478DAC2E 		leal	32768(%r14,%r13), %r13d
 6749      00800000 
 6750              	.LVL726:
 6751 050f 4589EE   		movl	%r13d, %r14d
 6752 0512 41C1EE10 		shrl	$16, %r14d
 6753 0516 4501F5   		addl	%r14d, %r13d
 6754              	.LVL727:
 6755 0519 41C1ED10 		shrl	$16, %r13d
 6756              	.LBE495:
3833:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
 6757              		.loc 1 3833 0
 6758 051d 85FF     		testl	%edi, %edi
 6759              	.LBB496:
3832:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6760              		.loc 1 3832 0
 6761 051f 4589EE   		movl	%r13d, %r14d
 6762              	.LVL728:
 6763              	.LBE496:
3833:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
 6764              		.loc 1 3833 0
 6765 0522 7519     		jne	.L962
3834:fltk-1.3.4-1/png/pngrtran.c ****                                 8];
 6766              		.loc 1 3834 0
 6767 0524 450FB6F5 		movzbl	%r13b, %r14d
 6768 0528 4C89E8   		movq	%r13, %rax
 6769              	.LVL729:
 6770 052b 41D3FE   		sarl	%cl, %r14d
 6771 052e 0FB6C4   		movzbl	%ah, %eax
 6772 0531 4D63F6   		movslq	%r14d, %r14
 6773 0534 4F8B34F2 		movq	(%r10,%r14,8), %r14
 6774 0538 450FB734 		movzwl	(%r14,%rax,2), %r14d
 6774      46
 6775              	.LVL730:
 6776              	.L962:
3836:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(w & 0xff);
 6777              		.loc 1 3836 0
 6778 053d 4589F5   		movl	%r14d, %r13d
3837:fltk-1.3.4-1/png/pngrtran.c **** 
 6779              		.loc 1 3837 0
 6780 0540 44887201 		movb	%r14b, 1(%rdx)
 6781              	.LVL731:
3839:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.green);
 6782              		.loc 1 3839 0
 6783 0544 440FB672 		movzbl	2(%rdx), %r14d
 6783      02
 6784              	.LVL732:
3836:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(w & 0xff);
 6785              		.loc 1 3836 0
 6786 0549 6641C1ED 		shrw	$8, %r13w
 6786      08
 6787              	.LVL733:
 6788 054e 44882A   		movb	%r13b, (%rdx)
 6789              	.LVL734:
3839:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.green);
 6790              		.loc 1 3839 0
 6791 0551 440FB66A 		movzbl	3(%rdx), %r13d
 6791      03
 6792 0556 41D3FD   		sarl	%cl, %r13d
 6793 0559 4D63ED   		movslq	%r13d, %r13
 6794 055c 4F8B2CE8 		movq	(%r8,%r13,8), %r13
 6795              	.LBB497:
3840:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6796              		.loc 1 3840 0
 6797 0560 470FB774 		movzwl	0(%r13,%r14,2), %r14d
 6797      7500
 6798 0566 440FB7AB 		movzwl	662(%rbx), %r13d
 6798      96020000 
 6799 056e 450FAFF7 		imull	%r15d, %r14d
 6800 0572 440FAFEE 		imull	%esi, %r13d
 6801 0576 478DAC2E 		leal	32768(%r14,%r13), %r13d
 6801      00800000 
 6802              	.LVL735:
 6803 057e 4589EE   		movl	%r13d, %r14d
 6804 0581 41C1EE10 		shrl	$16, %r14d
 6805 0585 4501F5   		addl	%r14d, %r13d
 6806              	.LVL736:
 6807 0588 41C1ED10 		shrl	$16, %r13d
 6808              	.LBE497:
3841:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
 6809              		.loc 1 3841 0
 6810 058c 85FF     		testl	%edi, %edi
 6811              	.LBB498:
3840:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6812              		.loc 1 3840 0
 6813 058e 4589EE   		movl	%r13d, %r14d
 6814              	.LVL737:
 6815              	.LBE498:
3841:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
 6816              		.loc 1 3841 0
 6817 0591 7519     		jne	.L963
3842:fltk-1.3.4-1/png/pngrtran.c ****                                 8];
 6818              		.loc 1 3842 0
 6819 0593 450FB6F5 		movzbl	%r13b, %r14d
 6820 0597 4C89E8   		movq	%r13, %rax
 6821 059a 41D3FE   		sarl	%cl, %r14d
 6822 059d 0FB6C4   		movzbl	%ah, %eax
 6823 05a0 4D63F6   		movslq	%r14d, %r14
 6824 05a3 4F8B34F2 		movq	(%r10,%r14,8), %r14
 6825 05a7 450FB734 		movzwl	(%r14,%rax,2), %r14d
 6825      46
 6826              	.LVL738:
 6827              	.L963:
3845:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(w & 0xff);
 6828              		.loc 1 3845 0
 6829 05ac 4589F5   		movl	%r14d, %r13d
3846:fltk-1.3.4-1/png/pngrtran.c **** 
 6830              		.loc 1 3846 0
 6831 05af 44887203 		movb	%r14b, 3(%rdx)
 6832              	.LVL739:
3848:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.blue);
 6833              		.loc 1 3848 0
 6834 05b3 440FB672 		movzbl	4(%rdx), %r14d
 6834      04
 6835              	.LVL740:
3845:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(w & 0xff);
 6836              		.loc 1 3845 0
 6837 05b8 6641C1ED 		shrw	$8, %r13w
 6837      08
 6838              	.LVL741:
 6839              	.LBB499:
3849:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6840              		.loc 1 3849 0
 6841 05bd 4489F8   		movl	%r15d, %eax
 6842              	.LBE499:
3845:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(w & 0xff);
 6843              		.loc 1 3845 0
 6844 05c0 44886A02 		movb	%r13b, 2(%rdx)
 6845              	.LVL742:
3848:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(w, v, a, png_ptr->background_1.blue);
 6846              		.loc 1 3848 0
 6847 05c4 440FB66A 		movzbl	5(%rdx), %r13d
 6847      05
 6848 05c9 41D3FD   		sarl	%cl, %r13d
 6849 05cc 4D63ED   		movslq	%r13d, %r13
 6850 05cf 4F8B2CE8 		movq	(%r8,%r13,8), %r13
 6851              	.LBB500:
3849:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6852              		.loc 1 3849 0
 6853 05d3 470FB76C 		movzwl	0(%r13,%r14,2), %r13d
 6853      7500
 6854 05d9 410FAFC5 		imull	%r13d, %eax
 6855 05dd 440FB7AB 		movzwl	664(%rbx), %r13d
 6855      98020000 
 6856 05e5 410FAFF5 		imull	%r13d, %esi
 6857 05e9 8D843000 		leal	32768(%rax,%rsi), %eax
 6857      800000
 6858              	.LVL743:
 6859 05f0 89C6     		movl	%eax, %esi
 6860 05f2 C1EE10   		shrl	$16, %esi
 6861 05f5 01F0     		addl	%esi, %eax
 6862              	.LVL744:
 6863 05f7 C1E810   		shrl	$16, %eax
 6864              	.LBE500:
3850:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
 6865              		.loc 1 3850 0
 6866 05fa 85FF     		testl	%edi, %edi
 6867              	.LBB501:
3849:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 6868              		.loc 1 3849 0
 6869 05fc 89C6     		movl	%eax, %esi
 6870              	.LVL745:
 6871              	.LBE501:
3850:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_16_from_1[((w&0xff) >> gamma_shift)][w >>
 6872              		.loc 1 3850 0
 6873 05fe 7513     		jne	.L964
3851:fltk-1.3.4-1/png/pngrtran.c ****                                 8];
 6874              		.loc 1 3851 0
 6875 0600 0FB6F0   		movzbl	%al, %esi
 6876 0603 0FB6C4   		movzbl	%ah, %eax
 6877              	.LVL746:
 6878 0606 D3FE     		sarl	%cl, %esi
 6879 0608 4863F6   		movslq	%esi, %rsi
 6880 060b 498B34F2 		movq	(%r10,%rsi,8), %rsi
 6881 060f 0FB73446 		movzwl	(%rsi,%rax,2), %esi
 6882              	.LVL747:
 6883              	.L964:
3854:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(w & 0xff);
 6884              		.loc 1 3854 0
 6885 0613 89F0     		movl	%esi, %eax
3855:fltk-1.3.4-1/png/pngrtran.c ****                      }
 6886              		.loc 1 3855 0
 6887 0615 40887205 		movb	%sil, 5(%rdx)
 6888              	.LVL748:
3854:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(w & 0xff);
 6889              		.loc 1 3854 0
 6890 0619 66C1E808 		shrw	$8, %ax
 6891 061d 884204   		movb	%al, 4(%rdx)
 6892 0620 E986FEFF 		jmp	.L960
 6892      FF
 6893              	.LVL749:
 6894              		.p2align 4,,10
 6895 0625 0F1F00   		.p2align 3
 6896              	.L1536:
 6897              	.LBE502:
 6898              	.LBE504:
 6899              	.LBE587:
 6900              	.LBE598:
4903:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->mode & PNG_BACKGROUND_IS_GRAY) != 0)
 6901              		.loc 1 4903 0 discriminator 1
 6902 0628 F6832D01 		testb	$8, 301(%rbx)
 6902      000008
 6903 062f 0F84EEFA 		je	.L1048
 6903      FFFF
4905:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6904              		.loc 1 4905 0
 6905 0635 488B8328 		movq	552(%rbx), %rax
 6905      020000
 6906 063c 4889EF   		movq	%rbp, %rdi
 6907 063f 488D7001 		leaq	1(%rax), %rsi
 6908 0643 E8000000 		call	png_do_gray_to_rgb
 6908      00
 6909              	.LVL750:
 6910 0648 8B833401 		movl	308(%rbx), %eax
 6910      0000
4909:fltk-1.3.4-1/png/pngrtran.c ****       png_do_invert(row_info, png_ptr->row_buf + 1);
 6911              		.loc 1 4909 0
 6912 064e A820     		testb	$32, %al
 6913 0650 0F84D5FA 		je	.L1049
 6913      FFFF
 6914 0656 662E0F1F 		.p2align 4,,10
 6914      84000000 
 6914      0000
 6915              		.p2align 3
 6916              	.L1537:
4910:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6917              		.loc 1 4910 0
 6918 0660 488B8328 		movq	552(%rbx), %rax
 6918      020000
 6919 0667 4889EF   		movq	%rbp, %rdi
 6920 066a 488D7001 		leaq	1(%rax), %rsi
 6921 066e E8000000 		call	png_do_invert
 6921      00
 6922              	.LVL751:
 6923 0673 8B833401 		movl	308(%rbx), %eax
 6923      0000
4914:fltk-1.3.4-1/png/pngrtran.c ****       png_do_read_invert_alpha(row_info, png_ptr->row_buf + 1);
 6924              		.loc 1 4914 0
 6925 0679 A9000008 		testl	$524288, %eax
 6925      00
 6926 067e 0F84B2FA 		je	.L1050
 6926      FFFF
 6927              	.L1538:
 6928              	.LBB599:
 6929              	.LBB600:
2562:fltk-1.3.4-1/png/pngrtran.c ****    {
 6930              		.loc 1 2562 0
 6931 0684 0FB67510 		movzbl	16(%rbp), %esi
 6932              	.LBE600:
 6933              	.LBE599:
4915:fltk-1.3.4-1/png/pngrtran.c **** #endif
 6934              		.loc 1 4915 0
 6935 0688 488BBB28 		movq	552(%rbx), %rdi
 6935      020000
 6936 068f 488D5701 		leaq	1(%rdi), %rdx
 6937              	.LVL752:
 6938              	.LBB611:
 6939              	.LBB607:
2561:fltk-1.3.4-1/png/pngrtran.c ****    if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
 6940              		.loc 1 2561 0
 6941 0693 8B7D00   		movl	0(%rbp), %edi
 6942              	.LVL753:
2562:fltk-1.3.4-1/png/pngrtran.c ****    {
 6943              		.loc 1 2562 0
 6944 0696 4080FE06 		cmpb	$6, %sil
 6945 069a 0F84900A 		je	.L1554
 6945      0000
2614:fltk-1.3.4-1/png/pngrtran.c ****    {
 6946              		.loc 1 2614 0
 6947 06a0 4080FE04 		cmpb	$4, %sil
 6948 06a4 0F858CFA 		jne	.L1050
 6948      FFFF
2616:fltk-1.3.4-1/png/pngrtran.c ****       {
 6949              		.loc 1 2616 0
 6950 06aa 807D1108 		cmpb	$8, 17(%rbp)
 6951              	.LBB601:
2619:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
 6952              		.loc 1 2619 0
 6953 06ae 4889D1   		movq	%rdx, %rcx
 6954              	.LBE601:
2616:fltk-1.3.4-1/png/pngrtran.c ****       {
 6955              		.loc 1 2616 0
 6956 06b1 0F84691A 		je	.L1555
 6956      0000
 6957              	.LBB602:
2634:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
 6958              		.loc 1 2634 0
 6959 06b7 48034D08 		addq	8(%rbp), %rcx
 6960              	.LVL754:
2638:fltk-1.3.4-1/png/pngrtran.c ****          {
 6961              		.loc 1 2638 0
 6962 06bb 85FF     		testl	%edi, %edi
 6963 06bd 0F84BE06 		je	.L1057
 6963      0000
 6964 06c3 8D47FF   		leal	-1(%rdi), %eax
 6965 06c6 4889CF   		movq	%rcx, %rdi
 6966              	.LVL755:
 6967 06c9 48C1E002 		salq	$2, %rax
 6968 06cd 4829C7   		subq	%rax, %rdi
 6969 06d0 4889F8   		movq	%rdi, %rax
 6970 06d3 4883E804 		subq	$4, %rax
 6971              	.LVL756:
 6972 06d7 660F1F84 		.p2align 4,,10
 6972      00000000 
 6972      00
 6973              		.p2align 3
 6974              	.L1059:
2640:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
 6975              		.loc 1 2640 0
 6976 06e0 F651FF   		notb	-1(%rcx)
 6977              	.LVL757:
2641:fltk-1.3.4-1/png/pngrtran.c **** /*
 6978              		.loc 1 2641 0
 6979 06e3 F651FE   		notb	-2(%rcx)
 6980 06e6 4883E904 		subq	$4, %rcx
 6981              	.LVL758:
2638:fltk-1.3.4-1/png/pngrtran.c ****          {
 6982              		.loc 1 2638 0
 6983 06ea 4839C1   		cmpq	%rax, %rcx
 6984 06ed 75F1     		jne	.L1059
 6985              	.LVL759:
 6986              	.L1515:
 6987 06ef 8B833401 		movl	308(%rbx), %eax
 6987      0000
 6988              	.LBE602:
 6989              	.LBE607:
 6990              	.LBE611:
4919:fltk-1.3.4-1/png/pngrtran.c ****       png_do_unshift(row_info, png_ptr->row_buf + 1,
 6991              		.loc 1 4919 0
 6992 06f5 A808     		testb	$8, %al
 6993 06f7 0F8441FA 		je	.L1060
 6993      FFFF
 6994              	.LVL760:
 6995 06fd 0F1F00   		.p2align 4,,10
 6996              		.p2align 3
 6997              	.L1539:
 6998              	.LBB612:
 6999              	.LBB613:
2242:fltk-1.3.4-1/png/pngrtran.c **** 
 7000              		.loc 1 2242 0
 7001 0700 0FB67510 		movzbl	16(%rbp), %esi
 7002              	.LBE613:
 7003              	.LBE612:
4920:fltk-1.3.4-1/png/pngrtran.c ****           &(png_ptr->shift));
 7004              		.loc 1 4920 0
 7005 0704 488BBB28 		movq	552(%rbx), %rdi
 7005      020000
 7006 070b 488D5701 		leaq	1(%rdi), %rdx
 7007              	.LVL761:
 7008              	.LBB642:
 7009              	.LBB635:
2244:fltk-1.3.4-1/png/pngrtran.c ****    {
 7010              		.loc 1 2244 0
 7011 070f 4080FE03 		cmpb	$3, %sil
 7012 0713 0F84570D 		je	.L1061
 7012      0000
 7013              	.LVL762:
 7014              	.LBB614:
2248:fltk-1.3.4-1/png/pngrtran.c **** 
 7015              		.loc 1 2248 0
 7016 0719 0FB67D11 		movzbl	17(%rbp), %edi
2250:fltk-1.3.4-1/png/pngrtran.c ****       {
 7017              		.loc 1 2250 0
 7018 071d 40F6C602 		testb	$2, %sil
2248:fltk-1.3.4-1/png/pngrtran.c **** 
 7019              		.loc 1 2248 0
 7020 0721 4189FA   		movl	%edi, %r10d
 7021              	.LVL763:
2250:fltk-1.3.4-1/png/pngrtran.c ****       {
 7022              		.loc 1 2250 0
 7023 0724 0F846606 		je	.L1062
 7023      0000
 7024              	.LVL764:
 7025              	.L1155:
2252:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->green;
 7026              		.loc 1 2252 0
 7027 072a 0FB683ED 		movzbl	749(%rbx), %eax
 7027      020000
 7028 0731 89F9     		movl	%edi, %ecx
2254:fltk-1.3.4-1/png/pngrtran.c ****       }
 7029              		.loc 1 2254 0
 7030 0733 41B80300 		movl	$3, %r8d
 7030      0000
2252:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->green;
 7031              		.loc 1 2252 0
 7032 0739 29C1     		subl	%eax, %ecx
2253:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->blue;
 7033              		.loc 1 2253 0
 7034 073b 0FB683EE 		movzbl	750(%rbx), %eax
 7034      020000
2252:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->green;
 7035              		.loc 1 2252 0
 7036 0742 894C2410 		movl	%ecx, 16(%rsp)
 7037              	.LVL765:
2253:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->blue;
 7038              		.loc 1 2253 0
 7039 0746 89F9     		movl	%edi, %ecx
 7040 0748 29C1     		subl	%eax, %ecx
2254:fltk-1.3.4-1/png/pngrtran.c ****       }
 7041              		.loc 1 2254 0
 7042 074a 0FB683EF 		movzbl	751(%rbx), %eax
 7042      020000
2253:fltk-1.3.4-1/png/pngrtran.c ****          shift[channels++] = bit_depth - sig_bits->blue;
 7043              		.loc 1 2253 0
 7044 0751 894C2414 		movl	%ecx, 20(%rsp)
 7045              	.LVL766:
2254:fltk-1.3.4-1/png/pngrtran.c ****       }
 7046              		.loc 1 2254 0
 7047 0755 89F9     		movl	%edi, %ecx
 7048 0757 29C1     		subl	%eax, %ecx
 7049 0759 894C2418 		movl	%ecx, 24(%rsp)
 7050              	.LVL767:
 7051              	.L1063:
2262:fltk-1.3.4-1/png/pngrtran.c ****       {
 7052              		.loc 1 2262 0
 7053 075d 83E604   		andl	$4, %esi
 7054 0760 7416     		je	.L1064
 7055              	.LVL768:
2264:fltk-1.3.4-1/png/pngrtran.c ****       }
 7056              		.loc 1 2264 0
 7057 0762 0FB68BF1 		movzbl	753(%rbx), %ecx
 7057      020000
 7058 0769 89FE     		movl	%edi, %esi
 7059 076b 4963C0   		movslq	%r8d, %rax
 7060 076e 4183C001 		addl	$1, %r8d
 7061              	.LVL769:
 7062 0772 29CE     		subl	%ecx, %esi
 7063 0774 89748410 		movl	%esi, 16(%rsp,%rax,4)
 7064              	.L1064:
 7065              	.LVL770:
 7066 0778 488D4424 		leaq	16(%rsp), %rax
 7066      10
 7067 077d 418D48FF 		leal	-1(%r8), %ecx
 7068              	.LBB615:
2270:fltk-1.3.4-1/png/pngrtran.c ****          {
 7069              		.loc 1 2270 0
 7070 0781 4531C9   		xorl	%r9d, %r9d
 7071 0784 488D7488 		leaq	4(%rax,%rcx,4), %rsi
 7071      04
 7072              	.LVL771:
 7073              	.L1067:
2275:fltk-1.3.4-1/png/pngrtran.c ****                shift[c] = 0;
 7074              		.loc 1 2275 0
 7075 0789 8B08     		movl	(%rax), %ecx
 7076 078b 85C9     		testl	%ecx, %ecx
 7077 078d 0F8ECD08 		jle	.L1179
 7077      0000
 7078 0793 39F9     		cmpl	%edi, %ecx
 7079 0795 0F8DC508 		jge	.L1179
 7079      0000
2279:fltk-1.3.4-1/png/pngrtran.c ****          }
 7080              		.loc 1 2279 0
 7081 079b 41B90100 		movl	$1, %r9d
 7081      0000
 7082              	.LVL772:
 7083              	.L1065:
 7084 07a1 4883C004 		addq	$4, %rax
2270:fltk-1.3.4-1/png/pngrtran.c ****          {
 7085              		.loc 1 2270 0
 7086 07a5 4839F0   		cmpq	%rsi, %rax
 7087 07a8 75DF     		jne	.L1067
2282:fltk-1.3.4-1/png/pngrtran.c ****             return;
 7088              		.loc 1 2282 0
 7089 07aa 4585C9   		testl	%r9d, %r9d
 7090 07ad 7469     		je	.L1068
 7091              	.LBE615:
2286:fltk-1.3.4-1/png/pngrtran.c ****       {
 7092              		.loc 1 2286 0
 7093 07af 4180FA04 		cmpb	$4, %r10b
 7094 07b3 0F848718 		je	.L1070
 7094      0000
 7095 07b9 0F869115 		jbe	.L1556
 7095      0000
 7096 07bf 4180FA08 		cmpb	$8, %r10b
 7097 07c3 0F849F0D 		je	.L1073
 7097      0000
 7098 07c9 4180FA10 		cmpb	$16, %r10b
 7099 07cd 7549     		jne	.L1068
 7100              	.LVL773:
 7101              	.LBB616:
2349:fltk-1.3.4-1/png/pngrtran.c ****             int channel = 0;
 7102              		.loc 1 2349 0
 7103 07cf 4889D7   		movq	%rdx, %rdi
 7104              	.LVL774:
 7105 07d2 48037D08 		addq	8(%rbp), %rdi
 7106              	.LVL775:
2352:fltk-1.3.4-1/png/pngrtran.c ****             {
 7107              		.loc 1 2352 0
 7108 07d6 4839D7   		cmpq	%rdx, %rdi
 7109 07d9 763D     		jbe	.L1068
 7110 07db 31F6     		xorl	%esi, %esi
 7111              	.LBB617:
2358:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)(value >> 8);
 7112              		.loc 1 2358 0
 7113 07dd 4531C9   		xorl	%r9d, %r9d
 7114              	.LVL776:
 7115              		.p2align 4,,10
 7116              		.p2align 3
 7117              	.L1082:
2354:fltk-1.3.4-1/png/pngrtran.c **** 
 7118              		.loc 1 2354 0
 7119 07e0 0FB602   		movzbl	(%rdx), %eax
 7120 07e3 0FB64A01 		movzbl	1(%rdx), %ecx
 7121 07e7 C1E008   		sall	$8, %eax
 7122 07ea 01C8     		addl	%ecx, %eax
 7123              	.LVL777:
2356:fltk-1.3.4-1/png/pngrtran.c ****                if (++channel >= channels)
 7124              		.loc 1 2356 0
 7125 07ec 4863CE   		movslq	%esi, %rcx
2357:fltk-1.3.4-1/png/pngrtran.c ****                   channel = 0;
 7126              		.loc 1 2357 0
 7127 07ef 83C601   		addl	$1, %esi
 7128              	.LVL778:
2356:fltk-1.3.4-1/png/pngrtran.c ****                if (++channel >= channels)
 7129              		.loc 1 2356 0
 7130 07f2 8B4C8C10 		movl	16(%rsp,%rcx,4), %ecx
 7131 07f6 D3F8     		sarl	%cl, %eax
 7132              	.LVL779:
2358:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)(value >> 8);
 7133              		.loc 1 2358 0
 7134 07f8 4139F0   		cmpl	%esi, %r8d
2359:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)(value & 0xff);
 7135              		.loc 1 2359 0
 7136 07fb 89C1     		movl	%eax, %ecx
2358:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)(value >> 8);
 7137              		.loc 1 2358 0
 7138 07fd 410F4EF1 		cmovle	%r9d, %esi
 7139              	.LVL780:
 7140 0801 4883C202 		addq	$2, %rdx
 7141              	.LVL781:
2359:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)(value & 0xff);
 7142              		.loc 1 2359 0
 7143 0805 C1F908   		sarl	$8, %ecx
 7144 0808 884AFE   		movb	%cl, -2(%rdx)
 7145              	.LVL782:
 7146              	.LBE617:
2352:fltk-1.3.4-1/png/pngrtran.c ****             {
 7147              		.loc 1 2352 0
 7148 080b 4839D7   		cmpq	%rdx, %rdi
 7149              	.LBB618:
2360:fltk-1.3.4-1/png/pngrtran.c ****             }
 7150              		.loc 1 2360 0
 7151 080e 8842FF   		movb	%al, -1(%rdx)
 7152              	.LBE618:
2352:fltk-1.3.4-1/png/pngrtran.c ****             {
 7153              		.loc 1 2352 0
 7154 0811 77CD     		ja	.L1082
 7155              	.LVL783:
 7156              		.p2align 4,,10
 7157 0813 0F1F4400 		.p2align 3
 7157      00
 7158              	.L1068:
 7159 0818 8B833401 		movl	308(%rbx), %eax
 7159      0000
 7160              	.LBE616:
 7161              	.LBE614:
 7162              	.LBE635:
 7163              	.LBE642:
4925:fltk-1.3.4-1/png/pngrtran.c ****       png_do_unpack(row_info, png_ptr->row_buf + 1);
 7164              		.loc 1 4925 0
 7165 081e A804     		testb	$4, %al
 7166 0820 0F8420F9 		je	.L1084
 7166      FFFF
 7167              	.LVL784:
 7168              	.L1540:
 7169 0826 488B8328 		movq	552(%rbx), %rax
 7169      020000
 7170 082d 488D5001 		leaq	1(%rax), %rdx
 7171              	.L1152:
 7172              	.LVL785:
 7173              	.LBB643:
 7174              	.LBB644:
2140:fltk-1.3.4-1/png/pngrtran.c ****    {
 7175              		.loc 1 2140 0
 7176 0831 0FB64511 		movzbl	17(%rbp), %eax
 7177 0835 3C07     		cmpb	$7, %al
 7178 0837 0F8709F9 		ja	.L1084
 7178      FFFF
 7179              	.LBB645:
2145:fltk-1.3.4-1/png/pngrtran.c ****       {
 7180              		.loc 1 2145 0
 7181 083d 3C02     		cmpb	$2, %al
2143:fltk-1.3.4-1/png/pngrtran.c **** 
 7182              		.loc 1 2143 0
 7183 083f 8B7500   		movl	0(%rbp), %esi
 7184              	.LVL786:
2145:fltk-1.3.4-1/png/pngrtran.c ****       {
 7185              		.loc 1 2145 0
 7186 0842 0F841814 		je	.L1087
 7186      0000
 7187 0848 3C04     		cmpb	$4, %al
 7188 084a 0F84B013 		je	.L1088
 7188      0000
 7189 0850 3C01     		cmpb	$1, %al
 7190 0852 0F844813 		je	.L1557
 7190      0000
 7191              	.LVL787:
 7192              	.L1086:
2221:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_width * row_info->channels;
 7193              		.loc 1 2221 0
 7194 0858 0FB64512 		movzbl	18(%rbp), %eax
2220:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(8 * row_info->channels);
 7195              		.loc 1 2220 0
 7196 085c C6451108 		movb	$8, 17(%rbp)
2222:fltk-1.3.4-1/png/pngrtran.c ****    }
 7197              		.loc 1 2222 0
 7198 0860 0FAFF0   		imull	%eax, %esi
 7199              	.LVL788:
 7200              	.LBE645:
 7201              	.LBE644:
 7202              	.LBE643:
4931:fltk-1.3.4-1/png/pngrtran.c ****        png_ptr->num_palette_max >= 0)
 7203              		.loc 1 4931 0
 7204 0863 807D1003 		cmpb	$3, 16(%rbp)
 7205              	.LBB653:
 7206              	.LBB651:
 7207              	.LBB649:
2221:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_width * row_info->channels;
 7208              		.loc 1 2221 0
 7209 0867 8D14C500 		leal	0(,%rax,8), %edx
 7209      000000
 7210 086e 885513   		movb	%dl, 19(%rbp)
2222:fltk-1.3.4-1/png/pngrtran.c ****    }
 7211              		.loc 1 2222 0
 7212 0871 89F0     		movl	%esi, %eax
 7213 0873 48894508 		movq	%rax, 8(%rbp)
 7214              	.LBE649:
 7215              	.LBE651:
 7216              	.LBE653:
4931:fltk-1.3.4-1/png/pngrtran.c ****        png_ptr->num_palette_max >= 0)
 7217              		.loc 1 4931 0
 7218 0877 0F85D3F8 		jne	.L1102
 7218      FFFF
 7219              	.LVL789:
 7220 087d 0F1F00   		.p2align 4,,10
 7221              		.p2align 3
 7222              	.L1101:
 7223 0880 8B836C02 		movl	620(%rbx), %eax
 7223      0000
 7224 0886 85C0     		testl	%eax, %eax
 7225 0888 0F88C2F8 		js	.L1102
 7225      FFFF
4933:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7226              		.loc 1 4933 0
 7227 088e 4889EE   		movq	%rbp, %rsi
 7228 0891 4889DF   		movq	%rbx, %rdi
 7229 0894 E8000000 		call	png_do_check_palette_indexes
 7229      00
 7230              	.LVL790:
4937:fltk-1.3.4-1/png/pngrtran.c ****       png_do_bgr(row_info, png_ptr->row_buf + 1);
 7231              		.loc 1 4937 0
 7232 0899 8B933401 		movl	308(%rbx), %edx
 7232      0000
 7233 089f F6C201   		testb	$1, %dl
 7234 08a2 0F84B7F8 		je	.L1104
 7234      FFFF
 7235 08a8 0F1F8400 		.p2align 4,,10
 7235      00000000 
 7236              		.p2align 3
 7237              	.L1541:
4938:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7238              		.loc 1 4938 0
 7239 08b0 488B8328 		movq	552(%rbx), %rax
 7239      020000
 7240 08b7 4889EF   		movq	%rbp, %rdi
 7241 08ba 488D7001 		leaq	1(%rax), %rsi
 7242 08be E8000000 		call	png_do_bgr
 7242      00
 7243              	.LVL791:
 7244 08c3 8B933401 		movl	308(%rbx), %edx
 7244      0000
4942:fltk-1.3.4-1/png/pngrtran.c ****       png_do_packswap(row_info, png_ptr->row_buf + 1);
 7245              		.loc 1 4942 0
 7246 08c9 F7C20000 		testl	$65536, %edx
 7246      0100
 7247 08cf 0F8496F8 		je	.L1105
 7247      FFFF
 7248              	.L1542:
4943:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7249              		.loc 1 4943 0
 7250 08d5 488B8328 		movq	552(%rbx), %rax
 7250      020000
 7251 08dc 4889EF   		movq	%rbp, %rdi
 7252 08df 488D7001 		leaq	1(%rax), %rsi
 7253 08e3 E8000000 		call	png_do_packswap
 7253      00
 7254              	.LVL792:
 7255 08e8 8B933401 		movl	308(%rbx), %edx
 7255      0000
4947:fltk-1.3.4-1/png/pngrtran.c ****       png_do_read_filler(row_info, png_ptr->row_buf + 1,
 7256              		.loc 1 4947 0
 7257 08ee F6C680   		testb	$128, %dh
 7258 08f1 0F847DF8 		je	.L1106
 7258      FFFF
 7259              	.L1543:
4949:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7260              		.loc 1 4949 0
 7261 08f7 440FB78B 		movzwl	640(%rbx), %r9d
 7261      80020000 
4948:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)png_ptr->filler, png_ptr->flags);
 7262              		.loc 1 4948 0
 7263 08ff 488BBB28 		movq	552(%rbx), %rdi
 7263      020000
 7264 0906 8B833001 		movl	304(%rbx), %eax
 7264      0000
 7265              	.LBB654:
 7266              	.LBB655:
2662:fltk-1.3.4-1/png/pngrtran.c **** 
 7267              		.loc 1 2662 0
 7268 090c 8B7500   		movl	0(%rbp), %esi
 7269              	.LBE655:
 7270              	.LBE654:
4948:fltk-1.3.4-1/png/pngrtran.c ****           (png_uint_32)png_ptr->filler, png_ptr->flags);
 7271              		.loc 1 4948 0
 7272 090f 4C8D4701 		leaq	1(%rdi), %r8
 7273              	.LVL793:
 7274              	.LBB676:
 7275              	.LBB669:
2665:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7276              		.loc 1 2665 0
 7277 0913 4C89C9   		movq	%r9, %rcx
 7278 0916 0FB6FD   		movzbl	%ch, %edi
2667:fltk-1.3.4-1/png/pngrtran.c **** 
 7279              		.loc 1 2667 0
 7280 0919 4489C9   		movl	%r9d, %ecx
2665:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7281              		.loc 1 2665 0
 7282 091c 4189FB   		movl	%edi, %r11d
 7283 091f 4189FA   		movl	%edi, %r10d
 7284              	.LVL794:
2672:fltk-1.3.4-1/png/pngrtran.c ****    {
 7285              		.loc 1 2672 0
 7286 0922 0FB67D10 		movzbl	16(%rbp), %edi
2671:fltk-1.3.4-1/png/pngrtran.c ****        row_info->color_type == PNG_COLOR_TYPE_GRAY)
 7287              		.loc 1 2671 0
 7288 0926 4084FF   		testb	%dil, %dil
 7289 0929 0F858103 		jne	.L1107
 7289      0000
2674:fltk-1.3.4-1/png/pngrtran.c ****       {
 7290              		.loc 1 2674 0
 7291 092f 0FB67D11 		movzbl	17(%rbp), %edi
 7292 0933 4080FF08 		cmpb	$8, %dil
 7293 0937 0F84A313 		je	.L1558
 7293      0000
2709:fltk-1.3.4-1/png/pngrtran.c ****       {
 7294              		.loc 1 2709 0
 7295 093d 4080FF10 		cmpb	$16, %dil
 7296 0941 0F8539F8 		jne	.L1115
 7296      FFFF
2711:fltk-1.3.4-1/png/pngrtran.c ****          {
 7297              		.loc 1 2711 0
 7298 0947 A880     		testb	$-128, %al
 7299              	.LBB656:
2714:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
 7300              		.loc 1 2714 0
 7301 0949 89F0     		movl	%esi, %eax
 7302              	.LVL795:
 7303 094b 498D1440 		leaq	(%r8,%rax,2), %rdx
 7304              	.LBE656:
2711:fltk-1.3.4-1/png/pngrtran.c ****          {
 7305              		.loc 1 2711 0
 7306 094f 0F840B1A 		je	.L1116
 7306      0000
 7307              	.LVL796:
 7308              	.LBB657:
2716:fltk-1.3.4-1/png/pngrtran.c ****             {
 7309              		.loc 1 2716 0
 7310 0955 83FE01   		cmpl	$1, %esi
2715:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
 7311              		.loc 1 2715 0
 7312 0958 4D8D2480 		leaq	(%r8,%rax,4), %r12
 7313              	.LVL797:
2716:fltk-1.3.4-1/png/pngrtran.c ****             {
 7314              		.loc 1 2716 0
 7315 095c 764B     		jbe	.L1117
 7316 095e 448D6EFE 		leal	-2(%rsi), %r13d
 7317 0962 4C89E7   		movq	%r12, %rdi
 7318 0965 4A8D04AD 		leaq	0(,%r13,4), %rax
 7318      00000000 
 7319 096d 4829C7   		subq	%rax, %rdi
 7320 0970 4C89E0   		movq	%r12, %rax
 7321 0973 4C8D47FC 		leaq	-4(%rdi), %r8
 7322              	.LVL798:
 7323 0977 660F1F84 		.p2align 4,,10
 7323      00000000 
 7323      00
 7324              		.p2align 3
 7325              	.L1118:
2718:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
 7326              		.loc 1 2718 0
 7327 0980 448850FF 		movb	%r10b, -1(%rax)
 7328              	.LVL799:
2719:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7329              		.loc 1 2719 0
 7330 0984 8848FE   		movb	%cl, -2(%rax)
 7331              	.LVL800:
 7332 0987 4883EA02 		subq	$2, %rdx
 7333              	.LVL801:
2720:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7334              		.loc 1 2720 0
 7335 098b 0FB67A01 		movzbl	1(%rdx), %edi
 7336 098f 4883E804 		subq	$4, %rax
 7337              	.LVL802:
 7338 0993 40887801 		movb	%dil, 1(%rax)
 7339              	.LVL803:
2721:fltk-1.3.4-1/png/pngrtran.c ****             }
 7340              		.loc 1 2721 0
 7341 0997 0FB63A   		movzbl	(%rdx), %edi
2716:fltk-1.3.4-1/png/pngrtran.c ****             {
 7342              		.loc 1 2716 0
 7343 099a 4939C0   		cmpq	%rax, %r8
2721:fltk-1.3.4-1/png/pngrtran.c ****             }
 7344              		.loc 1 2721 0
 7345 099d 408838   		movb	%dil, (%rax)
2716:fltk-1.3.4-1/png/pngrtran.c ****             {
 7346              		.loc 1 2716 0
 7347 09a0 75DE     		jne	.L1118
 7348 09a2 49F7D5   		notq	%r13
 7349 09a5 4F8D24AC 		leaq	(%r12,%r13,4), %r12
 7350              	.LVL804:
 7351              	.L1117:
2723:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = lo_filler;
 7352              		.loc 1 2723 0
 7353 09a9 45885C24 		movb	%r11b, -1(%r12)
 7353      FF
 7354              	.LVL805:
2724:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
 7355              		.loc 1 2724 0
 7356 09ae 45884C24 		movb	%r9b, -2(%r12)
 7356      FE
2725:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 32;
 7357              		.loc 1 2725 0
 7358 09b3 C6451202 		movb	$2, 18(%rbp)
 7359              	.LVL806:
 7360              	.L1516:
 7361              	.LBE657:
 7362              	.LBB658:
2785:fltk-1.3.4-1/png/pngrtran.c ****          }
 7363              		.loc 1 2785 0
 7364 09b7 8D04B500 		leal	0(,%rsi,4), %eax
 7364      000000
2784:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 4;
 7365              		.loc 1 2784 0
 7366 09be C6451320 		movb	$32, 19(%rbp)
2785:fltk-1.3.4-1/png/pngrtran.c ****          }
 7367              		.loc 1 2785 0
 7368 09c2 48894508 		movq	%rax, 8(%rbp)
 7369 09c6 8B933401 		movl	308(%rbx), %edx
 7369      0000
 7370 09cc E9A3F7FF 		jmp	.L1106
 7370      FF
 7371              	.LVL807:
 7372              		.p2align 4,,10
 7373 09d1 0F1F8000 		.p2align 3
 7373      000000
 7374              	.L1533:
 7375              	.LBE658:
 7376              	.LBE669:
 7377              	.LBE676:
 7378              	.LBB677:
 7379              	.LBB678:
2438:fltk-1.3.4-1/png/pngrtran.c ****    {
 7380              		.loc 1 2438 0
 7381 09d8 807D1110 		cmpb	$16, 17(%rbp)
 7382 09dc 0F8527F7 		jne	.L1018
 7382      FFFF
 7383              	.LBE678:
 7384              	.LBE677:
4877:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7385              		.loc 1 4877 0
 7386 09e2 488B8328 		movq	552(%rbx), %rax
 7386      020000
 7387 09e9 4883C001 		addq	$1, %rax
 7388              	.LVL808:
 7389              	.LBB681:
 7390              	.LBB680:
 7391              	.LBB679:
2442:fltk-1.3.4-1/png/pngrtran.c **** 
 7392              		.loc 1 2442 0
 7393 09ed 4889C6   		movq	%rax, %rsi
 7394 09f0 48037508 		addq	8(%rbp), %rsi
 7395              	.LVL809:
 7396 09f4 4889C2   		movq	%rax, %rdx
2444:fltk-1.3.4-1/png/pngrtran.c ****       {
 7397              		.loc 1 2444 0
 7398 09f7 4839F0   		cmpq	%rsi, %rax
 7399 09fa 7317     		jnb	.L1023
 7400              	.LVL810:
 7401 09fc 0F1F4000 		.p2align 4,,10
 7402              		.p2align 3
 7403              	.L1338:
2446:fltk-1.3.4-1/png/pngrtran.c ****          sp += 2; /* skip low byte */
 7404              		.loc 1 2446 0
 7405 0a00 0FB608   		movzbl	(%rax), %ecx
2447:fltk-1.3.4-1/png/pngrtran.c ****       }
 7406              		.loc 1 2447 0
 7407 0a03 4883C002 		addq	$2, %rax
 7408              	.LVL811:
 7409 0a07 4883C201 		addq	$1, %rdx
 7410              	.LVL812:
2446:fltk-1.3.4-1/png/pngrtran.c ****          sp += 2; /* skip low byte */
 7411              		.loc 1 2446 0
 7412 0a0b 884AFF   		movb	%cl, -1(%rdx)
2444:fltk-1.3.4-1/png/pngrtran.c ****       {
 7413              		.loc 1 2444 0
 7414 0a0e 4839C6   		cmpq	%rax, %rsi
 7415 0a11 77ED     		ja	.L1338
 7416              	.LVL813:
 7417              	.L1023:
2451:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
 7418              		.loc 1 2451 0
 7419 0a13 0FB64512 		movzbl	18(%rbp), %eax
2452:fltk-1.3.4-1/png/pngrtran.c ****    }
 7420              		.loc 1 2452 0
 7421 0a17 448B4500 		movl	0(%rbp), %r8d
2450:fltk-1.3.4-1/png/pngrtran.c ****       row_info->pixel_depth = (png_byte)(8 * row_info->channels);
 7422              		.loc 1 2450 0
 7423 0a1b C6451108 		movb	$8, 17(%rbp)
2451:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
 7424              		.loc 1 2451 0
 7425 0a1f 8D14C500 		leal	0(,%rax,8), %edx
 7425      000000
2452:fltk-1.3.4-1/png/pngrtran.c ****    }
 7426              		.loc 1 2452 0
 7427 0a26 410FAFC0 		imull	%r8d, %eax
2451:fltk-1.3.4-1/png/pngrtran.c ****       row_info->rowbytes = row_info->width * row_info->channels;
 7428              		.loc 1 2451 0
 7429 0a2a 885513   		movb	%dl, 19(%rbp)
2452:fltk-1.3.4-1/png/pngrtran.c ****    }
 7430              		.loc 1 2452 0
 7431 0a2d 48894508 		movq	%rax, 8(%rbp)
 7432              	.LBE679:
 7433              	.LBE680:
 7434              	.LBE681:
4881:fltk-1.3.4-1/png/pngrtran.c ****    {
 7435              		.loc 1 4881 0
 7436 0a31 8B833401 		movl	308(%rbx), %eax
 7436      0000
 7437 0a37 A840     		testb	$64, %al
 7438 0a39 0F858112 		jne	.L1559
 7438      0000
4897:fltk-1.3.4-1/png/pngrtran.c ****       png_do_expand_16(row_info, png_ptr->row_buf + 1);
 7439              		.loc 1 4897 0
 7440 0a3f F6C402   		testb	$2, %ah
 7441 0a42 0F84D2F6 		je	.L1045
 7441      FFFF
 7442 0a48 E9D3F8FF 		jmp	.L1154
 7442      FF
 7443              	.LVL814:
 7444 0a4d 0F1F00   		.p2align 4,,10
 7445              		.p2align 3
 7446              	.L1145:
4980:fltk-1.3.4-1/png/pngrtran.c **** 
 7447              		.loc 1 4980 0
 7448 0a50 884511   		movb	%al, 17(%rbp)
4982:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = png_ptr->user_transform_channels;
 7449              		.loc 1 4982 0
 7450 0a53 0FB69329 		movzbl	297(%rbx), %edx
 7450      010000
 7451 0a5a 84D2     		testb	%dl, %dl
 7452 0a5c 0F8470F7 		je	.L1560
 7452      FFFF
 7453              	.L1147:
4985:fltk-1.3.4-1/png/pngrtran.c ****           row_info->channels);
 7454              		.loc 1 4985 0
 7455 0a62 0FAFC2   		imull	%edx, %eax
4983:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7456              		.loc 1 4983 0
 7457 0a65 885512   		movb	%dl, 18(%rbp)
4988:fltk-1.3.4-1/png/pngrtran.c ****    }
 7458              		.loc 1 4988 0
 7459 0a68 3C07     		cmpb	$7, %al
4985:fltk-1.3.4-1/png/pngrtran.c ****           row_info->channels);
 7460              		.loc 1 4985 0
 7461 0a6a 884513   		movb	%al, 19(%rbp)
4988:fltk-1.3.4-1/png/pngrtran.c ****    }
 7462              		.loc 1 4988 0
 7463 0a6d 0F8771F7 		ja	.L1561
 7463      FFFF
 7464              	.L1149:
4988:fltk-1.3.4-1/png/pngrtran.c ****    }
 7465              		.loc 1 4988 0 is_stmt 0 discriminator 2
 7466 0a73 8B5500   		movl	0(%rbp), %edx
 7467 0a76 0FB6C0   		movzbl	%al, %eax
 7468 0a79 480FAFC2 		imulq	%rdx, %rax
 7469 0a7d 4883C007 		addq	$7, %rax
 7470 0a81 48C1E803 		shrq	$3, %rax
 7471 0a85 E967F7FF 		jmp	.L1150
 7471      FF
 7472 0a8a 660F1F44 		.p2align 4,,10
 7472      0000
 7473              		.p2align 3
 7474              	.L1545:
4960:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7475              		.loc 1 4960 0 is_stmt 1
 7476 0a90 488B8328 		movq	552(%rbx), %rax
 7476      020000
 7477 0a97 4889EF   		movq	%rbp, %rdi
 7478 0a9a 488D7001 		leaq	1(%rax), %rsi
 7479 0a9e E8000000 		call	png_do_swap
 7479      00
 7480              	.LVL815:
 7481 0aa3 8B933401 		movl	308(%rbx), %edx
 7481      0000
 7482 0aa9 E9DBF6FF 		jmp	.L1142
 7482      FF
 7483              	.LVL816:
 7484 0aae 6690     		.p2align 4,,10
 7485              		.p2align 3
 7486              	.L1527:
 7487              	.LBB682:
 7488              	.LBB683:
 7489              	.LBB684:
2991:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) != 0)
 7490              		.loc 1 2991 0
 7491 0ab0 440FB645 		movzbl	16(%rbp), %r8d
 7491      10
 7492 0ab5 4489C2   		movl	%r8d, %edx
 7493 0ab8 83E203   		andl	$3, %edx
 7494 0abb 80FA02   		cmpb	$2, %dl
 7495 0abe 0F85E5F5 		jne	.L807
 7495      FFFF
 7496              	.LVL817:
 7497              	.L1153:
 7498              	.LBB685:
2994:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 gc = png_ptr->rgb_to_gray_green_coeff;
 7499              		.loc 1 2994 0
 7500 0ac4 440FB7AB 		movzwl	1042(%rbx), %r13d
 7500      12040000 
 7501              	.LVL818:
2995:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 bc = 32768 - rc - gc;
 7502              		.loc 1 2995 0
 7503 0acc 440FB7B3 		movzwl	1044(%rbx), %r14d
 7503      14040000 
 7504              	.LVL819:
2996:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 row_width = row_info->width;
 7505              		.loc 1 2996 0
 7506 0ad4 B9008000 		movl	$32768, %ecx
 7506      00
 7507              	.LBE685:
 7508              	.LBE684:
 7509              	.LBE683:
4766:fltk-1.3.4-1/png/pngrtran.c ****               png_ptr->row_buf + 1);
 7510              		.loc 1 4766 0
 7511 0ad9 488B8328 		movq	552(%rbx), %rax
 7511      020000
 7512 0ae0 4589C3   		movl	%r8d, %r11d
 7513              	.LBB726:
 7514              	.LBB714:
 7515              	.LBB703:
2997:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST int have_alpha =
 7516              		.loc 1 2997 0
 7517 0ae3 448B5500 		movl	0(%rbp), %r10d
 7518 0ae7 4183E304 		andl	$4, %r11d
 7519              	.LBE703:
 7520              	.LBE714:
 7521              	.LBE726:
4766:fltk-1.3.4-1/png/pngrtran.c ****               png_ptr->row_buf + 1);
 7522              		.loc 1 4766 0
 7523 0aeb 488D5001 		leaq	1(%rax), %rdx
 7524              	.LBB727:
 7525              	.LBB715:
 7526              	.LBB704:
2996:fltk-1.3.4-1/png/pngrtran.c ****       PNG_CONST png_uint_32 row_width = row_info->width;
 7527              		.loc 1 2996 0
 7528 0aef 438D4435 		leal	0(%r13,%r14), %eax
 7528      00
 7529 0af4 29C1     		subl	%eax, %ecx
 7530 0af6 89C8     		movl	%ecx, %eax
 7531              	.LVL820:
3001:fltk-1.3.4-1/png/pngrtran.c ****       {
 7532              		.loc 1 3001 0
 7533 0af8 0FB64D11 		movzbl	17(%rbp), %ecx
 7534 0afc 80F908   		cmpb	$8, %cl
 7535 0aff 0F841313 		je	.L1562
 7535      0000
3081:fltk-1.3.4-1/png/pngrtran.c ****          {
 7536              		.loc 1 3081 0
 7537 0b05 4883BBE0 		cmpq	$0, 736(%rbx)
 7537      02000000 
 7538 0b0d 0F848516 		je	.L829
 7538      0000
 7539 0b13 4883BBD8 		cmpq	$0, 728(%rbx)
 7539      02000000 
 7540 0b1b 0F847716 		je	.L829
 7540      0000
 7541              	.LVL821:
 7542              	.LBB686:
3087:fltk-1.3.4-1/png/pngrtran.c ****             {
 7543              		.loc 1 3087 0
 7544 0b21 4585D2   		testl	%r10d, %r10d
 7545 0b24 0F84761B 		je	.L1163
 7545      0000
 7546 0b2a 48896C24 		movq	%rbp, 8(%rsp)
 7546      08
 7547 0b2f 4989D0   		movq	%rdx, %r8
 7548 0b32 4531E4   		xorl	%r12d, %r12d
 7549 0b35 4531C9   		xorl	%r9d, %r9d
 7550 0b38 4889DF   		movq	%rbx, %rdi
 7551 0b3b 89C5     		movl	%eax, %ebp
 7552              	.LVL822:
 7553 0b3d EB16     		jmp	.L836
 7554              	.LVL823:
 7555 0b3f 90       		.p2align 4,,10
 7556              		.p2align 3
 7557              	.L1564:
 7558              	.LBB687:
3093:fltk-1.3.4-1/png/pngrtran.c **** 
 7559              		.loc 1 3093 0
 7560 0b40 4883C206 		addq	$6, %rdx
 7561              	.LVL824:
3122:fltk-1.3.4-1/png/pngrtran.c **** 
 7562              		.loc 1 3122 0
 7563 0b44 4983C002 		addq	$2, %r8
 7564              	.LVL825:
 7565              	.L835:
 7566              	.LBE687:
3087:fltk-1.3.4-1/png/pngrtran.c ****             {
 7567              		.loc 1 3087 0
 7568 0b48 4183C101 		addl	$1, %r9d
 7569              	.LVL826:
 7570 0b4c 4539CA   		cmpl	%r9d, %r10d
 7571 0b4f 0F842B09 		je	.L1563
 7571      0000
 7572              	.LVL827:
 7573              	.L836:
 7574              	.LBB689:
3091:fltk-1.3.4-1/png/pngrtran.c ****                green = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 7575              		.loc 1 3091 0
 7576 0b55 0FB602   		movzbl	(%rdx), %eax
 7577 0b58 0FB64A01 		movzbl	1(%rdx), %ecx
3092:fltk-1.3.4-1/png/pngrtran.c ****                blue  = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 7578              		.loc 1 3092 0
 7579 0b5c 0FB65A02 		movzbl	2(%rdx), %ebx
3093:fltk-1.3.4-1/png/pngrtran.c **** 
 7580              		.loc 1 3093 0
 7581 0b60 0FB67204 		movzbl	4(%rdx), %esi
3091:fltk-1.3.4-1/png/pngrtran.c ****                green = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 7582              		.loc 1 3091 0
 7583 0b64 C1E008   		sall	$8, %eax
 7584 0b67 09C8     		orl	%ecx, %eax
 7585              	.LVL828:
3092:fltk-1.3.4-1/png/pngrtran.c ****                blue  = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 7586              		.loc 1 3092 0
 7587 0b69 0FB64A03 		movzbl	3(%rdx), %ecx
 7588 0b6d C1E308   		sall	$8, %ebx
3093:fltk-1.3.4-1/png/pngrtran.c **** 
 7589              		.loc 1 3093 0
 7590 0b70 C1E608   		sall	$8, %esi
3092:fltk-1.3.4-1/png/pngrtran.c ****                blue  = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 7591              		.loc 1 3092 0
 7592 0b73 09CB     		orl	%ecx, %ebx
 7593              	.LVL829:
3093:fltk-1.3.4-1/png/pngrtran.c **** 
 7594              		.loc 1 3093 0
 7595 0b75 0FB64A05 		movzbl	5(%rdx), %ecx
 7596 0b79 09CE     		orl	%ecx, %esi
 7597              	.LVL830:
3095:fltk-1.3.4-1/png/pngrtran.c ****                {
 7598              		.loc 1 3095 0
 7599 0b7b 6639D8   		cmpw	%bx, %ax
 7600 0b7e 0F85EC04 		jne	.L832
 7600      0000
 7601 0b84 6639F0   		cmpw	%si, %ax
 7602 0b87 0F85E304 		jne	.L832
 7602      0000
3097:fltk-1.3.4-1/png/pngrtran.c ****                      w = png_ptr->gamma_16_table[(red & 0xff)
 7603              		.loc 1 3097 0
 7604 0b8d 488B9FC0 		movq	704(%rdi), %rbx
 7604      020000
 7605              	.LVL831:
 7606 0b94 4885DB   		testq	%rbx, %rbx
 7607 0b97 7419     		je	.L833
3098:fltk-1.3.4-1/png/pngrtran.c ****                          >> png_ptr->gamma_shift][red >> 8];
 7608              		.loc 1 3098 0
 7609 0b99 8B8FB002 		movl	688(%rdi), %ecx
 7609      0000
 7610 0b9f 0FB6F0   		movzbl	%al, %esi
 7611              	.LVL832:
3099:fltk-1.3.4-1/png/pngrtran.c **** 
 7612              		.loc 1 3099 0
 7613 0ba2 0FB6C4   		movzbl	%ah, %eax
 7614              	.LVL833:
3098:fltk-1.3.4-1/png/pngrtran.c ****                          >> png_ptr->gamma_shift][red >> 8];
 7615              		.loc 1 3098 0
 7616 0ba5 D3FE     		sarl	%cl, %esi
 7617 0ba7 4863F6   		movslq	%esi, %rsi
3099:fltk-1.3.4-1/png/pngrtran.c **** 
 7618              		.loc 1 3099 0
 7619 0baa 488B0CF3 		movq	(%rbx,%rsi,8), %rcx
3098:fltk-1.3.4-1/png/pngrtran.c ****                          >> png_ptr->gamma_shift][red >> 8];
 7620              		.loc 1 3098 0
 7621 0bae 0FB70441 		movzwl	(%rcx,%rax,2), %eax
 7622              	.LVL834:
 7623              	.L833:
3121:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(w & 0xff);
 7624              		.loc 1 3121 0
 7625 0bb2 89C1     		movl	%eax, %ecx
3122:fltk-1.3.4-1/png/pngrtran.c **** 
 7626              		.loc 1 3122 0
 7627 0bb4 41884001 		movb	%al, 1(%r8)
3121:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(w & 0xff);
 7628              		.loc 1 3121 0
 7629 0bb8 66C1E908 		shrw	$8, %cx
3124:fltk-1.3.4-1/png/pngrtran.c ****                {
 7630              		.loc 1 3124 0
 7631 0bbc 4584DB   		testb	%r11b, %r11b
3121:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(w & 0xff);
 7632              		.loc 1 3121 0
 7633 0bbf 418808   		movb	%cl, (%r8)
 7634              	.LVL835:
3124:fltk-1.3.4-1/png/pngrtran.c ****                {
 7635              		.loc 1 3124 0
 7636 0bc2 0F8478FF 		je	.L1564
 7636      FFFF
 7637              	.LVL836:
3126:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
 7638              		.loc 1 3126 0
 7639 0bc8 0FB64206 		movzbl	6(%rdx), %eax
 7640              	.LVL837:
3127:fltk-1.3.4-1/png/pngrtran.c ****                }
 7641              		.loc 1 3127 0
 7642 0bcc 4983C004 		addq	$4, %r8
 7643              	.LVL838:
 7644 0bd0 4883C208 		addq	$8, %rdx
 7645              	.LVL839:
3126:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
 7646              		.loc 1 3126 0
 7647 0bd4 418840FE 		movb	%al, -2(%r8)
3127:fltk-1.3.4-1/png/pngrtran.c ****                }
 7648              		.loc 1 3127 0
 7649 0bd8 0FB642FF 		movzbl	-1(%rdx), %eax
 7650 0bdc 418840FF 		movb	%al, -1(%r8)
 7651 0be0 E963FFFF 		jmp	.L835
 7651      FF
 7652              	.LVL840:
 7653              		.p2align 4,,10
 7654 0be5 0F1F00   		.p2align 3
 7655              	.L1530:
 7656              	.LBE689:
 7657              	.LBE686:
 7658              	.LBE704:
 7659              	.LBE715:
 7660              	.LBE727:
 7661              	.LBE682:
4853:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
 7662              		.loc 1 4853 0
 7663 0be8 0FB64510 		movzbl	16(%rbp), %eax
 7664 0bec 83E0FD   		andl	$-3, %eax
 7665 0bef 3C04     		cmpb	$4, %al
 7666 0bf1 0F85EDF4 		jne	.L1005
 7666      FFFF
4856:fltk-1.3.4-1/png/pngrtran.c ****           0 /* at_start == false, because SWAP_ALPHA happens later */);
 7667              		.loc 1 4856 0
 7668 0bf7 488B8328 		movq	552(%rbx), %rax
 7668      020000
 7669 0bfe 31D2     		xorl	%edx, %edx
 7670 0c00 4889EF   		movq	%rbp, %rdi
 7671 0c03 488D7001 		leaq	1(%rax), %rsi
 7672 0c07 E8000000 		call	png_do_strip_channel
 7672      00
 7673              	.LVL841:
 7674 0c0c E9D3F4FF 		jmp	.L1005
 7674      FF
 7675              	.LVL842:
 7676              		.p2align 4,,10
 7677 0c11 0F1F8000 		.p2align 3
 7677      000000
 7678              	.L1526:
4755:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA ||
 7679              		.loc 1 4755 0
 7680 0c18 0FB64510 		movzbl	16(%rbp), %eax
 7681 0c1c 83E0FD   		andl	$-3, %eax
 7682 0c1f 3C04     		cmpb	$4, %al
 7683 0c21 0F845902 		je	.L799
 7683      0000
 7684 0c27 89D0     		movl	%edx, %eax
 7685 0c29 E970F4FF 		jmp	.L804
 7685      FF
 7686              	.LVL843:
 7687 0c2e 6690     		.p2align 4,,10
 7688              		.p2align 3
 7689              	.L1544:
 7690              	.LBB738:
 7691              	.LBB739:
2465:fltk-1.3.4-1/png/pngrtran.c ****       {
 7692              		.loc 1 2465 0
 7693 0c30 0FB64D10 		movzbl	16(%rbp), %ecx
 7694              	.LBE739:
 7695              	.LBE738:
4954:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7696              		.loc 1 4954 0
 7697 0c34 488B8328 		movq	552(%rbx), %rax
 7697      020000
 7698              	.LBB749:
 7699              	.LBB744:
2464:fltk-1.3.4-1/png/pngrtran.c ****       if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
 7700              		.loc 1 2464 0
 7701 0c3b 8B7500   		movl	0(%rbp), %esi
 7702              	.LBE744:
 7703              	.LBE749:
4954:fltk-1.3.4-1/png/pngrtran.c **** #endif
 7704              		.loc 1 4954 0
 7705 0c3e 4883C001 		addq	$1, %rax
 7706              	.LVL844:
 7707              	.LBB750:
 7708              	.LBB745:
2465:fltk-1.3.4-1/png/pngrtran.c ****       {
 7709              		.loc 1 2465 0
 7710 0c42 80F906   		cmpb	$6, %cl
 7711 0c45 0F848501 		je	.L1565
 7711      0000
2511:fltk-1.3.4-1/png/pngrtran.c ****       {
 7712              		.loc 1 2511 0
 7713 0c4b 80F904   		cmpb	$4, %cl
 7714 0c4e 0F852CF5 		jne	.L1115
 7714      FFFF
2514:fltk-1.3.4-1/png/pngrtran.c ****          {
 7715              		.loc 1 2514 0
 7716 0c54 807D1108 		cmpb	$8, 17(%rbp)
 7717 0c58 0F84FA14 		je	.L1566
 7717      0000
 7718              	.LBB740:
2533:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
 7719              		.loc 1 2533 0
 7720 0c5e 48034508 		addq	8(%rbp), %rax
 7721              	.LVL845:
2538:fltk-1.3.4-1/png/pngrtran.c ****             {
 7722              		.loc 1 2538 0
 7723 0c62 85F6     		testl	%esi, %esi
 7724 0c64 0F8416F5 		je	.L1115
 7724      FFFF
 7725 0c6a 8D56FF   		leal	-1(%rsi), %edx
 7726 0c6d 4889C7   		movq	%rax, %rdi
 7727 0c70 48C1E202 		salq	$2, %rdx
 7728 0c74 4829D7   		subq	%rdx, %rdi
 7729 0c77 488D7FFC 		leaq	-4(%rdi), %rdi
 7730              	.LVL846:
 7731 0c7b 0F1F4400 		.p2align 4,,10
 7731      00
 7732              		.p2align 3
 7733              	.L1141:
2542:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7734              		.loc 1 2542 0
 7735 0c80 0FB670FD 		movzbl	-3(%rax), %esi
2540:fltk-1.3.4-1/png/pngrtran.c ****                save[1] = *(--sp);
 7736              		.loc 1 2540 0
 7737 0c84 0FB648FF 		movzbl	-1(%rax), %ecx
 7738              	.LVL847:
 7739 0c88 4883E804 		subq	$4, %rax
 7740              	.LVL848:
2541:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7741              		.loc 1 2541 0
 7742 0c8c 0FB65002 		movzbl	2(%rax), %edx
 7743              	.LVL849:
2542:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7744              		.loc 1 2542 0
 7745 0c90 40887003 		movb	%sil, 3(%rax)
 7746              	.LVL850:
2543:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[0];
 7747              		.loc 1 2543 0
 7748 0c94 0FB630   		movzbl	(%rax), %esi
2538:fltk-1.3.4-1/png/pngrtran.c ****             {
 7749              		.loc 1 2538 0
 7750 0c97 4839C7   		cmpq	%rax, %rdi
2544:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[1];
 7751              		.loc 1 2544 0
 7752 0c9a 884801   		movb	%cl, 1(%rax)
2545:fltk-1.3.4-1/png/pngrtran.c ****             }
 7753              		.loc 1 2545 0
 7754 0c9d 8810     		movb	%dl, (%rax)
2543:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[0];
 7755              		.loc 1 2543 0
 7756 0c9f 40887002 		movb	%sil, 2(%rax)
 7757              	.LVL851:
2538:fltk-1.3.4-1/png/pngrtran.c ****             {
 7758              		.loc 1 2538 0
 7759 0ca3 75DB     		jne	.L1141
 7760              	.LVL852:
 7761              	.L1517:
 7762 0ca5 8B933401 		movl	308(%rbx), %edx
 7762      0000
 7763 0cab E9D0F4FF 		jmp	.L1115
 7763      FF
 7764              	.LVL853:
 7765              		.p2align 4,,10
 7766              		.p2align 3
 7767              	.L1107:
 7768              	.LBE740:
 7769              	.LBE745:
 7770              	.LBE750:
 7771              	.LBB751:
 7772              	.LBB670:
2749:fltk-1.3.4-1/png/pngrtran.c ****    {
 7773              		.loc 1 2749 0
 7774 0cb0 4080FF02 		cmpb	$2, %dil
 7775 0cb4 0F85BAF4 		jne	.L1106
 7775      FFFF
2751:fltk-1.3.4-1/png/pngrtran.c ****       {
 7776              		.loc 1 2751 0
 7777 0cba 0FB67D11 		movzbl	17(%rbp), %edi
 7778 0cbe 4080FF08 		cmpb	$8, %dil
 7779 0cc2 0F84780B 		je	.L1567
 7779      0000
2790:fltk-1.3.4-1/png/pngrtran.c ****       {
 7780              		.loc 1 2790 0
 7781 0cc8 4080FF10 		cmpb	$16, %dil
 7782 0ccc 0F85AEF4 		jne	.L1115
 7782      FFFF
2792:fltk-1.3.4-1/png/pngrtran.c ****          {
 7783              		.loc 1 2792 0
 7784 0cd2 A880     		testb	$-128, %al
 7785 0cd4 0F843919 		je	.L1129
 7785      0000
 7786              	.LBB659:
2795:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
 7787              		.loc 1 2795 0
 7788 0cda 89F0     		movl	%esi, %eax
 7789              	.LVL854:
 7790 0cdc 4C8D2400 		leaq	(%rax,%rax), %r12
 7791 0ce0 4C01E0   		addq	%r12, %rax
 7792 0ce3 498D1440 		leaq	(%r8,%rax,2), %rdx
 7793              	.LVL855:
2796:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
 7794              		.loc 1 2796 0
 7795 0ce7 4901D4   		addq	%rdx, %r12
 7796              	.LVL856:
2797:fltk-1.3.4-1/png/pngrtran.c ****             {
 7797              		.loc 1 2797 0
 7798 0cea 83FE01   		cmpl	$1, %esi
 7799 0ced 766A     		jbe	.L1130
 7800 0cef 448D6EFE 		leal	-2(%rsi), %r13d
 7801 0cf3 4889D7   		movq	%rdx, %rdi
 7802 0cf6 4B8D446D 		leaq	0(%r13,%r13,2), %rax
 7802      00
 7803 0cfb 4801C0   		addq	%rax, %rax
 7804 0cfe 4829C7   		subq	%rax, %rdi
 7805 0d01 4C89E0   		movq	%r12, %rax
 7806 0d04 4C8D47FA 		leaq	-6(%rdi), %r8
 7807              	.LVL857:
 7808 0d08 0F1F8400 		.p2align 4,,10
 7808      00000000 
 7809              		.p2align 3
 7810              	.L1131:
2799:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
 7811              		.loc 1 2799 0
 7812 0d10 448850FF 		movb	%r10b, -1(%rax)
 7813              	.LVL858:
2800:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7814              		.loc 1 2800 0
 7815 0d14 8848FE   		movb	%cl, -2(%rax)
 7816              	.LVL859:
 7817 0d17 4883EA06 		subq	$6, %rdx
 7818              	.LVL860:
2801:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7819              		.loc 1 2801 0
 7820 0d1b 0FB67A05 		movzbl	5(%rdx), %edi
 7821 0d1f 4883E808 		subq	$8, %rax
 7822              	.LVL861:
 7823 0d23 40887805 		movb	%dil, 5(%rax)
 7824              	.LVL862:
2802:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7825              		.loc 1 2802 0
 7826 0d27 0FB67A04 		movzbl	4(%rdx), %edi
 7827 0d2b 40887804 		movb	%dil, 4(%rax)
 7828              	.LVL863:
2803:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7829              		.loc 1 2803 0
 7830 0d2f 0FB67A03 		movzbl	3(%rdx), %edi
 7831 0d33 40887803 		movb	%dil, 3(%rax)
 7832              	.LVL864:
2804:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7833              		.loc 1 2804 0
 7834 0d37 0FB67A02 		movzbl	2(%rdx), %edi
 7835 0d3b 40887802 		movb	%dil, 2(%rax)
 7836              	.LVL865:
2805:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7837              		.loc 1 2805 0
 7838 0d3f 0FB67A01 		movzbl	1(%rdx), %edi
 7839 0d43 40887801 		movb	%dil, 1(%rax)
 7840              	.LVL866:
2806:fltk-1.3.4-1/png/pngrtran.c ****             }
 7841              		.loc 1 2806 0
 7842 0d47 0FB63A   		movzbl	(%rdx), %edi
2797:fltk-1.3.4-1/png/pngrtran.c ****             {
 7843              		.loc 1 2797 0
 7844 0d4a 4C39C2   		cmpq	%r8, %rdx
2806:fltk-1.3.4-1/png/pngrtran.c ****             }
 7845              		.loc 1 2806 0
 7846 0d4d 408838   		movb	%dil, (%rax)
2797:fltk-1.3.4-1/png/pngrtran.c ****             {
 7847              		.loc 1 2797 0
 7848 0d50 75BE     		jne	.L1131
 7849 0d52 49F7D5   		notq	%r13
 7850 0d55 4F8D24EC 		leaq	(%r12,%r13,8), %r12
 7851              	.LVL867:
 7852              	.L1130:
2808:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = lo_filler;
 7853              		.loc 1 2808 0
 7854 0d59 45885C24 		movb	%r11b, -1(%r12)
 7854      FF
 7855              	.LVL868:
2809:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 4;
 7856              		.loc 1 2809 0
 7857 0d5e 45884C24 		movb	%r9b, -2(%r12)
 7857      FE
 7858              	.LVL869:
 7859              	.L1134:
 7860              	.LBE659:
 7861              	.LBB660:
2834:fltk-1.3.4-1/png/pngrtran.c ****          }
 7862              		.loc 1 2834 0
 7863 0d63 8D04F500 		leal	0(,%rsi,8), %eax
 7863      000000
2832:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 64;
 7864              		.loc 1 2832 0
 7865 0d6a C6451204 		movb	$4, 18(%rbp)
2833:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 8;
 7866              		.loc 1 2833 0
 7867 0d6e C6451340 		movb	$64, 19(%rbp)
2834:fltk-1.3.4-1/png/pngrtran.c ****          }
 7868              		.loc 1 2834 0
 7869 0d72 48894508 		movq	%rax, 8(%rbp)
 7870 0d76 8B933401 		movl	308(%rbx), %edx
 7870      0000
 7871 0d7c E9F3F3FF 		jmp	.L1106
 7871      FF
 7872              	.LVL870:
 7873              	.L1057:
 7874              	.LBE660:
 7875              	.LBE670:
 7876              	.LBE751:
4919:fltk-1.3.4-1/png/pngrtran.c ****       png_do_unshift(row_info, png_ptr->row_buf + 1,
 7877              		.loc 1 4919 0
 7878 0d81 A808     		testb	$8, %al
 7879 0d83 0F84B5F3 		je	.L1060
 7879      FFFF
 7880              	.LVL871:
 7881              	.LBB752:
 7882              	.LBB636:
 7883              	.LBB629:
2248:fltk-1.3.4-1/png/pngrtran.c **** 
 7884              		.loc 1 2248 0
 7885 0d89 0FB67D11 		movzbl	17(%rbp), %edi
 7886              	.LVL872:
 7887 0d8d 4189FA   		movl	%edi, %r10d
 7888              	.LVL873:
 7889              		.p2align 4,,10
 7890              		.p2align 3
 7891              	.L1062:
2259:fltk-1.3.4-1/png/pngrtran.c ****       }
 7892              		.loc 1 2259 0
 7893 0d90 0FB683F0 		movzbl	752(%rbx), %eax
 7893      020000
 7894 0d97 89F9     		movl	%edi, %ecx
 7895 0d99 41B80100 		movl	$1, %r8d
 7895      0000
 7896 0d9f 29C1     		subl	%eax, %ecx
 7897 0da1 894C2410 		movl	%ecx, 16(%rsp)
 7898 0da5 E9B3F9FF 		jmp	.L1063
 7898      FF
 7899              	.LVL874:
 7900 0daa 660F1F44 		.p2align 4,,10
 7900      0000
 7901              		.p2align 3
 7902              	.L1550:
 7903              	.LBE629:
 7904              	.LBE636:
 7905              	.LBE752:
 7906              	.LBB753:
 7907              	.LBB588:
3206:fltk-1.3.4-1/png/pngrtran.c ****       {
 7908              		.loc 1 3206 0
 7909 0db0 84C0     		testb	%al, %al
 7910 0db2 0F856001 		jne	.L848
 7910      0000
3210:fltk-1.3.4-1/png/pngrtran.c ****             {
 7911              		.loc 1 3210 0
 7912 0db8 807D1110 		cmpb	$16, 17(%rbp)
 7913 0dbc 0F875601 		ja	.L848
 7913      0000
 7914 0dc2 0FB64511 		movzbl	17(%rbp), %eax
 7915 0dc6 FF24C500 		jmp	*.L855(,%rax,8)
 7915      000000
 7916              		.section	.rodata.png_do_read_transformations,"a",@progbits
 7917              		.align 8
 7918              		.align 4
 7919              	.L855:
 7920 0000 00000000 		.quad	.L848
 7920      00000000 
 7921 0008 00000000 		.quad	.L854
 7921      00000000 
 7922 0010 00000000 		.quad	.L856
 7922      00000000 
 7923 0018 00000000 		.quad	.L848
 7923      00000000 
 7924 0020 00000000 		.quad	.L857
 7924      00000000 
 7925 0028 00000000 		.quad	.L848
 7925      00000000 
 7926 0030 00000000 		.quad	.L848
 7926      00000000 
 7927 0038 00000000 		.quad	.L848
 7927      00000000 
 7928 0040 00000000 		.quad	.L858
 7928      00000000 
 7929 0048 00000000 		.quad	.L848
 7929      00000000 
 7930 0050 00000000 		.quad	.L848
 7930      00000000 
 7931 0058 00000000 		.quad	.L848
 7931      00000000 
 7932 0060 00000000 		.quad	.L848
 7932      00000000 
 7933 0068 00000000 		.quad	.L848
 7933      00000000 
 7934 0070 00000000 		.quad	.L848
 7934      00000000 
 7935 0078 00000000 		.quad	.L848
 7935      00000000 
 7936 0080 00000000 		.quad	.L859
 7936      00000000 
 7937              		.section	.text.png_do_read_transformations
 7938              	.LVL875:
 7939 0dcd 0F1F00   		.p2align 4,,10
 7940              		.p2align 3
 7941              	.L1565:
 7942              	.LBE588:
 7943              	.LBE753:
 7944              	.LBB754:
 7945              	.LBB746:
2468:fltk-1.3.4-1/png/pngrtran.c ****          {
 7946              		.loc 1 2468 0
 7947 0dd0 807D1108 		cmpb	$8, 17(%rbp)
 7948 0dd4 0F84FE12 		je	.L1568
 7948      0000
 7949              	.LBB741:
2489:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
 7950              		.loc 1 2489 0
 7951 0dda 48034508 		addq	8(%rbp), %rax
 7952              	.LVL876:
2494:fltk-1.3.4-1/png/pngrtran.c ****             {
 7953              		.loc 1 2494 0
 7954 0dde 85F6     		testl	%esi, %esi
 7955 0de0 0F849AF3 		je	.L1115
 7955      FFFF
 7956 0de6 8D56FF   		leal	-1(%rsi), %edx
 7957 0de9 4889C7   		movq	%rax, %rdi
 7958 0dec 48C1E203 		salq	$3, %rdx
 7959 0df0 4829D7   		subq	%rdx, %rdi
 7960 0df3 488D7FF8 		leaq	-8(%rdi), %rdi
 7961              	.LVL877:
 7962 0df7 660F1F84 		.p2align 4,,10
 7962      00000000 
 7962      00
 7963              		.p2align 3
 7964              	.L1138:
2498:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7965              		.loc 1 2498 0
 7966 0e00 0FB670FD 		movzbl	-3(%rax), %esi
2496:fltk-1.3.4-1/png/pngrtran.c ****                save[1] = *(--sp);
 7967              		.loc 1 2496 0
 7968 0e04 0FB648FF 		movzbl	-1(%rax), %ecx
 7969              	.LVL878:
 7970 0e08 4883E808 		subq	$8, %rax
 7971              	.LVL879:
2497:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7972              		.loc 1 2497 0
 7973 0e0c 0FB65006 		movzbl	6(%rax), %edx
 7974              	.LVL880:
2498:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7975              		.loc 1 2498 0
 7976 0e10 40887007 		movb	%sil, 7(%rax)
 7977              	.LVL881:
2499:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7978              		.loc 1 2499 0
 7979 0e14 0FB67004 		movzbl	4(%rax), %esi
 7980 0e18 40887006 		movb	%sil, 6(%rax)
 7981              	.LVL882:
2500:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7982              		.loc 1 2500 0
 7983 0e1c 0FB67003 		movzbl	3(%rax), %esi
 7984 0e20 40887005 		movb	%sil, 5(%rax)
 7985              	.LVL883:
2501:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7986              		.loc 1 2501 0
 7987 0e24 0FB67002 		movzbl	2(%rax), %esi
 7988 0e28 40887004 		movb	%sil, 4(%rax)
 7989              	.LVL884:
2502:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 7990              		.loc 1 2502 0
 7991 0e2c 0FB67001 		movzbl	1(%rax), %esi
 7992 0e30 40887003 		movb	%sil, 3(%rax)
 7993              	.LVL885:
2503:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[0];
 7994              		.loc 1 2503 0
 7995 0e34 0FB630   		movzbl	(%rax), %esi
2494:fltk-1.3.4-1/png/pngrtran.c ****             {
 7996              		.loc 1 2494 0
 7997 0e37 4839C7   		cmpq	%rax, %rdi
2504:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[1];
 7998              		.loc 1 2504 0
 7999 0e3a 884801   		movb	%cl, 1(%rax)
2505:fltk-1.3.4-1/png/pngrtran.c ****             }
 8000              		.loc 1 2505 0
 8001 0e3d 8810     		movb	%dl, (%rax)
2503:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save[0];
 8002              		.loc 1 2503 0
 8003 0e3f 40887002 		movb	%sil, 2(%rax)
 8004              	.LVL886:
2494:fltk-1.3.4-1/png/pngrtran.c ****             {
 8005              		.loc 1 2494 0
 8006 0e43 75BB     		jne	.L1138
 8007 0e45 E95BFEFF 		jmp	.L1517
 8007      FF
 8008              	.LVL887:
 8009              	.L803:
 8010              	.LBE741:
 8011              	.LBE746:
 8012              	.LBE754:
 8013              	.LBB755:
 8014              	.LBB756:
4312:fltk-1.3.4-1/png/pngrtran.c ****                row_info->color_type = 6;
 8015              		.loc 1 4312 0
 8016 0e4a 428D048D 		leal	0(,%r9,4), %eax
 8016      00000000 
4310:fltk-1.3.4-1/png/pngrtran.c ****                row_info->pixel_depth = 32;
 8017              		.loc 1 4310 0
 8018 0e52 C6451108 		movb	$8, 17(%rbp)
4311:fltk-1.3.4-1/png/pngrtran.c ****                row_info->rowbytes = row_width * 4;
 8019              		.loc 1 4311 0
 8020 0e56 C6451320 		movb	$32, 19(%rbp)
4313:fltk-1.3.4-1/png/pngrtran.c ****                row_info->channels = 4;
 8021              		.loc 1 4313 0
 8022 0e5a C6451006 		movb	$6, 16(%rbp)
4314:fltk-1.3.4-1/png/pngrtran.c ****             }
 8023              		.loc 1 4314 0
 8024 0e5e C6451204 		movb	$4, 18(%rbp)
4312:fltk-1.3.4-1/png/pngrtran.c ****                row_info->color_type = 6;
 8025              		.loc 1 4312 0
 8026 0e62 48894508 		movq	%rax, 8(%rbp)
 8027              	.LBE756:
 8028              	.LBE755:
4754:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->transformations & PNG_COMPOSE) == 0 &&
 8029              		.loc 1 4754 0
 8030 0e66 8B833401 		movl	308(%rbx), %eax
 8030      0000
 8031 0e6c 89C2     		movl	%eax, %edx
 8032 0e6e 81E28000 		andl	$262272, %edx
 8032      0400
 8033 0e74 81FA0000 		cmpl	$262144, %edx
 8033      0400
 8034 0e7a 0F851EF2 		jne	.L804
 8034      FFFF
 8035              	.LVL888:
 8036              		.p2align 4,,10
 8037              		.p2align 3
 8038              	.L799:
4758:fltk-1.3.4-1/png/pngrtran.c ****          0 /* at_start == false, because SWAP_ALPHA happens later */);
 8039              		.loc 1 4758 0
 8040 0e80 488B8328 		movq	552(%rbx), %rax
 8040      020000
 8041 0e87 31D2     		xorl	%edx, %edx
 8042 0e89 4889EF   		movq	%rbp, %rdi
 8043 0e8c 488D7001 		leaq	1(%rax), %rsi
 8044 0e90 E8000000 		call	png_do_strip_channel
 8044      00
 8045              	.LVL889:
 8046 0e95 8B833401 		movl	308(%rbx), %eax
 8046      0000
 8047 0e9b E9FEF1FF 		jmp	.L804
 8047      FF
 8048              	.LVL890:
 8049              		.p2align 4,,10
 8050              		.p2align 3
 8051              	.L1549:
4883:fltk-1.3.4-1/png/pngrtran.c ****           png_ptr->palette_lookup, png_ptr->quantize_index);
 8052              		.loc 1 4883 0
 8053 0ea0 488B8328 		movq	552(%rbx), %rax
 8053      020000
 8054              	.LBB763:
 8055              	.LBB481:
4609:fltk-1.3.4-1/png/pngrtran.c **** 
 8056              		.loc 1 4609 0
 8057 0ea7 448B4500 		movl	0(%rbp), %r8d
 8058              	.LBE481:
 8059              	.LBE763:
4884:fltk-1.3.4-1/png/pngrtran.c **** 
 8060              		.loc 1 4884 0
 8061 0eab 488B9390 		movq	912(%rbx), %rdx
 8061      030000
 8062 0eb2 488BBB88 		movq	904(%rbx), %rdi
 8062      030000
4883:fltk-1.3.4-1/png/pngrtran.c ****           png_ptr->palette_lookup, png_ptr->quantize_index);
 8063              		.loc 1 4883 0
 8064 0eb9 488D4801 		leaq	1(%rax), %rcx
 8065              	.LVL891:
 8066              	.L1151:
 8067              	.LBB764:
 8068              	.LBB482:
4615:fltk-1.3.4-1/png/pngrtran.c ****       {
 8069              		.loc 1 4615 0
 8070 0ebd 0FB64510 		movzbl	16(%rbp), %eax
 8071 0ec1 3C02     		cmpb	$2, %al
 8072 0ec3 0F84C70E 		je	.L1569
 8072      0000
4651:fltk-1.3.4-1/png/pngrtran.c ****          palette_lookup != NULL)
 8073              		.loc 1 4651 0
 8074 0ec9 3C06     		cmpb	$6, %al
 8075 0ecb 0F840711 		je	.L1570
 8075      0000
4682:fltk-1.3.4-1/png/pngrtran.c ****          quantize_lookup)
 8076              		.loc 1 4682 0
 8077 0ed1 3C03     		cmpb	$3, %al
 8078 0ed3 0F8521F4 		jne	.L1514
 8078      FFFF
 8079 0ed9 4885D2   		testq	%rdx, %rdx
 8080 0edc 0F8418F4 		je	.L1514
 8080      FFFF
 8081              	.LVL892:
4687:fltk-1.3.4-1/png/pngrtran.c ****          {
 8082              		.loc 1 4687 0
 8083 0ee2 4585C0   		testl	%r8d, %r8d
 8084 0ee5 0F840FF4 		je	.L1514
 8084      FFFF
 8085 0eeb 418D40FF 		leal	-1(%r8), %eax
 8086 0eef 488D7401 		leaq	1(%rcx,%rax), %rsi
 8086      01
 8087              	.LVL893:
 8088              		.p2align 4,,10
 8089 0ef4 0F1F4000 		.p2align 3
 8090              	.L1043:
4689:fltk-1.3.4-1/png/pngrtran.c ****          }
 8091              		.loc 1 4689 0
 8092 0ef8 0FB601   		movzbl	(%rcx), %eax
4687:fltk-1.3.4-1/png/pngrtran.c ****          {
 8093              		.loc 1 4687 0
 8094 0efb 4883C101 		addq	$1, %rcx
 8095              	.LVL894:
4689:fltk-1.3.4-1/png/pngrtran.c ****          }
 8096              		.loc 1 4689 0
 8097 0eff 0FB60402 		movzbl	(%rdx,%rax), %eax
 8098 0f03 8841FF   		movb	%al, -1(%rcx)
 8099              	.LVL895:
4687:fltk-1.3.4-1/png/pngrtran.c ****          {
 8100              		.loc 1 4687 0
 8101 0f06 4839CE   		cmpq	%rcx, %rsi
 8102 0f09 75ED     		jne	.L1043
 8103 0f0b E9EAF3FF 		jmp	.L1514
 8103      FF
 8104              	.LVL896:
 8105              		.p2align 4,,10
 8106              		.p2align 3
 8107              	.L1510:
 8108 0f10 4C89FD   		movq	%r15, %rbp
 8109              	.LVL897:
 8110              		.p2align 4,,10
 8111 0f13 0F1F4400 		.p2align 3
 8111      00
 8112              	.L848:
 8113              	.LBE482:
 8114              	.LBE764:
4830:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
 8115              		.loc 1 4830 0
 8116 0f18 8B833401 		movl	308(%rbx), %eax
 8116      0000
 8117 0f1e 89C2     		movl	%eax, %edx
 8118 0f20 81E20020 		andl	$6299648, %edx
 8118      6000
 8119 0f26 81FA0020 		cmpl	$8192, %edx
 8119      0000
 8120 0f2c 0F85A2F1 		jne	.L969
 8120      FFFF
4833:fltk-1.3.4-1/png/pngrtran.c **** #endif
 8121              		.loc 1 4833 0
 8122 0f32 A880     		testb	$-128, %al
 8123 0f34 0F84C601 		je	.L1511
 8123      0000
 8124              	.L970:
4840:fltk-1.3.4-1/png/pngrtran.c ****        ((png_ptr->num_trans != 0) ||
 8125              		.loc 1 4840 0
 8126 0f3a 6683BB70 		cmpw	$0, 624(%rbx)
 8126      02000000 
 8127 0f42 0F850801 		jne	.L1512
 8127      0000
4842:fltk-1.3.4-1/png/pngrtran.c **** #endif
 8128              		.loc 1 4842 0
 8129 0f48 0FB68377 		movzbl	631(%rbx), %eax
 8129      020000
4841:fltk-1.3.4-1/png/pngrtran.c ****        (png_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0)) &&
 8130              		.loc 1 4841 0
 8131 0f4f A804     		testb	$4, %al
 8132 0f51 0F85F900 		jne	.L1512
 8132      0000
 8133              	.LVL898:
 8134              	.L971:
4842:fltk-1.3.4-1/png/pngrtran.c **** #endif
 8135              		.loc 1 4842 0
 8136 0f57 3C03     		cmpb	$3, %al
 8137 0f59 0F84F100 		je	.L1512
 8137      0000
 8138              	.LVL899:
 8139              	.LBB765:
 8140              	.LBB766:
3937:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->bit_depth == 16 && gamma_16_table != NULL)))
 8141              		.loc 1 3937 0
 8142 0f5f 0FB65511 		movzbl	17(%rbp), %edx
3927:fltk-1.3.4-1/png/pngrtran.c ****    png_const_uint_16pp gamma_16_table = png_ptr->gamma_16_table;
 8143              		.loc 1 3927 0
 8144 0f63 4C8BA3B8 		movq	696(%rbx), %r12
 8144      020000
 8145              	.LVL900:
3928:fltk-1.3.4-1/png/pngrtran.c ****    int gamma_shift = png_ptr->gamma_shift;
 8146              		.loc 1 3928 0
 8147 0f6a 4C8B9BC0 		movq	704(%rbx), %r11
 8147      020000
 8148              	.LVL901:
3937:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->bit_depth == 16 && gamma_16_table != NULL)))
 8149              		.loc 1 3937 0
 8150 0f71 80FA08   		cmpb	$8, %dl
 8151 0f74 0F879E05 		ja	.L975
 8151      0000
 8152 0f7a 4D85E4   		testq	%r12, %r12
 8153 0f7d 0F84CD00 		je	.L1512
 8153      0000
 8154              	.L976:
3940:fltk-1.3.4-1/png/pngrtran.c ****       {
 8155              		.loc 1 3940 0
 8156 0f83 0FB67510 		movzbl	16(%rbp), %esi
 8157              	.LBE766:
 8158              	.LBE765:
4848:fltk-1.3.4-1/png/pngrtran.c **** #endif
 8159              		.loc 1 4848 0
 8160 0f87 4C8BB328 		movq	552(%rbx), %r14
 8160      020000
 8161 0f8e 448B6D00 		movl	0(%rbp), %r13d
 8162              	.LBB781:
 8163              	.LBB775:
3929:fltk-1.3.4-1/png/pngrtran.c **** 
 8164              		.loc 1 3929 0
 8165 0f92 8B8BB002 		movl	688(%rbx), %ecx
 8165      0000
 8166              	.LBE775:
 8167              	.LBE781:
4848:fltk-1.3.4-1/png/pngrtran.c **** #endif
 8168              		.loc 1 4848 0
 8169 0f98 498D4601 		leaq	1(%r14), %rax
 8170              	.LBB782:
 8171              	.LBB776:
3940:fltk-1.3.4-1/png/pngrtran.c ****       {
 8172              		.loc 1 3940 0
 8173 0f9c 4080FE02 		cmpb	$2, %sil
 8174 0fa0 0F84B914 		je	.L979
 8174      0000
 8175 0fa6 0F864414 		jbe	.L1571
 8175      0000
 8176 0fac 4080FE04 		cmpb	$4, %sil
 8177 0fb0 0F843D15 		je	.L982
 8177      0000
 8178 0fb6 4080FE06 		cmpb	$6, %sil
 8179 0fba 0F859000 		jne	.L1512
 8179      0000
3986:fltk-1.3.4-1/png/pngrtran.c ****             {
 8180              		.loc 1 3986 0
 8181 0fc0 80FA08   		cmpb	$8, %dl
 8182 0fc3 0F84C81A 		je	.L988
 8182      0000
 8183              	.LVL902:
 8184 0fc9 418D55FF 		leal	-1(%r13), %edx
4007:fltk-1.3.4-1/png/pngrtran.c ****                {
 8185              		.loc 1 4007 0
 8186 0fcd 4585ED   		testl	%r13d, %r13d
 8187 0fd0 498D74D6 		leaq	9(%r14,%rdx,8), %rsi
 8187      09
 8188 0fd5 7479     		je	.L1512
 8189              	.LVL903:
 8190 0fd7 660F1F84 		.p2align 4,,10
 8190      00000000 
 8190      00
 8191              		.p2align 3
 8192              	.L991:
 8193              	.LBB767:
4009:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 8194              		.loc 1 4009 0
 8195 0fe0 0FB65001 		movzbl	1(%rax), %edx
 8196 0fe4 0FB638   		movzbl	(%rax), %edi
 8197 0fe7 4883C008 		addq	$8, %rax
 8198              	.LVL904:
 8199 0feb D3FA     		sarl	%cl, %edx
 8200 0fed 4863D2   		movslq	%edx, %rdx
 8201 0ff0 498B14D3 		movq	(%r11,%rdx,8), %rdx
 8202 0ff4 0FB7147A 		movzwl	(%rdx,%rdi,2), %edx
 8203              	.LVL905:
4011:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 8204              		.loc 1 4011 0
 8205 0ff8 8850F9   		movb	%dl, -7(%rax)
 8206              	.LVL906:
4010:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 8207              		.loc 1 4010 0
 8208 0ffb 89D7     		movl	%edx, %edi
4014:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 8209              		.loc 1 4014 0
 8210 0ffd 0FB650FB 		movzbl	-5(%rax), %edx
 8211              	.LVL907:
4010:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 8212              		.loc 1 4010 0
 8213 1001 66C1EF08 		shrw	$8, %di
 8214              	.LVL908:
 8215 1005 408878F8 		movb	%dil, -8(%rax)
4014:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 8216              		.loc 1 4014 0
 8217 1009 0FB678FA 		movzbl	-6(%rax), %edi
 8218 100d D3FA     		sarl	%cl, %edx
 8219 100f 4863D2   		movslq	%edx, %rdx
 8220 1012 498B14D3 		movq	(%r11,%rdx,8), %rdx
 8221 1016 0FB7147A 		movzwl	(%rdx,%rdi,2), %edx
 8222              	.LVL909:
4016:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 8223              		.loc 1 4016 0
 8224 101a 8850FB   		movb	%dl, -5(%rax)
4015:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 8225              		.loc 1 4015 0
 8226 101d 89D7     		movl	%edx, %edi
4019:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 8227              		.loc 1 4019 0
 8228 101f 0FB650FD 		movzbl	-3(%rax), %edx
 8229              	.LVL910:
4015:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 8230              		.loc 1 4015 0
 8231 1023 66C1EF08 		shrw	$8, %di
 8232              	.LVL911:
 8233 1027 408878FA 		movb	%dil, -6(%rax)
4019:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 8234              		.loc 1 4019 0
 8235 102b 0FB678FC 		movzbl	-4(%rax), %edi
 8236 102f D3FA     		sarl	%cl, %edx
 8237 1031 4863D2   		movslq	%edx, %rdx
 8238 1034 498B14D3 		movq	(%r11,%rdx,8), %rdx
 8239 1038 0FB7147A 		movzwl	(%rdx,%rdi,2), %edx
 8240              	.LVL912:
4020:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 8241              		.loc 1 4020 0
 8242 103c 89D7     		movl	%edx, %edi
4021:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 4;
 8243              		.loc 1 4021 0
 8244 103e 8850FD   		movb	%dl, -3(%rax)
4020:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 8245              		.loc 1 4020 0
 8246 1041 66C1EF08 		shrw	$8, %di
 8247 1045 408878FC 		movb	%dil, -4(%rax)
 8248              	.LVL913:
 8249              	.LBE767:
4007:fltk-1.3.4-1/png/pngrtran.c ****                {
 8250              		.loc 1 4007 0
 8251 1049 4839F0   		cmpq	%rsi, %rax
 8252 104c 7592     		jne	.L991
 8253              	.LVL914:
 8254 104e 6690     		.p2align 4,,10
 8255              		.p2align 3
 8256              	.L1512:
 8257 1050 8B833401 		movl	308(%rbx), %eax
 8257      0000
 8258 1056 E979F0FF 		jmp	.L969
 8258      FF
 8259              	.LVL915:
 8260 105b 0F1F4400 		.p2align 4,,10
 8260      00
 8261              		.p2align 3
 8262              	.L1179:
 8263              	.LBE776:
 8264              	.LBE782:
 8265              	.LBB783:
 8266              	.LBB637:
 8267              	.LBB630:
 8268              	.LBB619:
2276:fltk-1.3.4-1/png/pngrtran.c **** 
 8269              		.loc 1 2276 0
 8270 1060 C7000000 		movl	$0, (%rax)
 8270      0000
 8271 1066 E936F7FF 		jmp	.L1065
 8271      FF
 8272              	.LVL916:
 8273 106b 0F1F4400 		.p2align 4,,10
 8273      00
 8274              		.p2align 3
 8275              	.L832:
 8276              	.LBE619:
 8277              	.LBE630:
 8278              	.LBE637:
 8279              	.LBE783:
 8280              	.LBB784:
 8281              	.LBB728:
 8282              	.LBB716:
 8283              	.LBB705:
 8284              	.LBB691:
 8285              	.LBB690:
 8286              	.LBB688:
3108:fltk-1.3.4-1/png/pngrtran.c ****                   png_uint_16 green_1 =
 8287              		.loc 1 3108 0
 8288 1070 8B8FB002 		movl	688(%rdi), %ecx
 8288      0000
3107:fltk-1.3.4-1/png/pngrtran.c ****                       >> png_ptr->gamma_shift][red>>8];
 8289              		.loc 1 3107 0
 8290 1076 4C8BA7E0 		movq	736(%rdi), %r12
 8290      020000
 8291              	.LVL917:
 8292 107d 440FB6F8 		movzbl	%al, %r15d
 8293 1081 0FB6C4   		movzbl	%ah, %eax
 8294              	.LVL918:
 8295 1084 41D3FF   		sarl	%cl, %r15d
 8296 1087 4D63FF   		movslq	%r15d, %r15
 8297 108a 4F8B3CFC 		movq	(%r12,%r15,8), %r15
3115:fltk-1.3.4-1/png/pngrtran.c ****                   w = png_ptr->gamma_16_from_1[(gray16&0xff) >>
 8298              		.loc 1 3115 0
 8299 108e 450FB73C 		movzwl	(%r15,%rax,2), %r15d
 8299      47
3110:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_shift][green>>8];
 8300              		.loc 1 3110 0
 8301 1093 0FB6C3   		movzbl	%bl, %eax
3109:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_16_to_1[(green&0xff) >>
 8302              		.loc 1 3109 0
 8303 1096 0FB6DF   		movzbl	%bh, %ebx
 8304              	.LVL919:
3110:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_shift][green>>8];
 8305              		.loc 1 3110 0
 8306 1099 D3F8     		sarl	%cl, %eax
 8307 109b 4898     		cltq
3109:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_16_to_1[(green&0xff) >>
 8308              		.loc 1 3109 0
 8309 109d 498B04C4 		movq	(%r12,%rax,8), %rax
3115:fltk-1.3.4-1/png/pngrtran.c ****                   w = png_ptr->gamma_16_from_1[(gray16&0xff) >>
 8310              		.loc 1 3115 0
 8311 10a1 450FAFFD 		imull	%r13d, %r15d
 8312 10a5 0FB70458 		movzwl	(%rax,%rbx,2), %eax
 8313 10a9 410FAFC6 		imull	%r14d, %eax
 8314 10ad 418D9C07 		leal	16384(%r15,%rax), %ebx
 8314      00400000 
3112:fltk-1.3.4-1/png/pngrtran.c ****                       >> png_ptr->gamma_shift][blue>>8];
 8315              		.loc 1 3112 0
 8316 10b5 400FB6C6 		movzbl	%sil, %eax
 8317 10b9 D3F8     		sarl	%cl, %eax
 8318 10bb 4C63F8   		movslq	%eax, %r15
 8319 10be 4889F0   		movq	%rsi, %rax
 8320 10c1 0FB6F4   		movzbl	%ah, %esi
 8321              	.LVL920:
 8322 10c4 4B8B04FC 		movq	(%r12,%r15,8), %rax
3118:fltk-1.3.4-1/png/pngrtran.c ****                }
 8323              		.loc 1 3118 0
 8324 10c8 41BC0100 		movl	$1, %r12d
 8324      0000
3115:fltk-1.3.4-1/png/pngrtran.c ****                   w = png_ptr->gamma_16_from_1[(gray16&0xff) >>
 8325              		.loc 1 3115 0
 8326 10ce 0FB70470 		movzwl	(%rax,%rsi,2), %eax
 8327 10d2 0FAFC5   		imull	%ebp, %eax
 8328 10d5 01C3     		addl	%eax, %ebx
 8329 10d7 C1EB0F   		shrl	$15, %ebx
 8330              	.LVL921:
3116:fltk-1.3.4-1/png/pngrtran.c ****                       png_ptr->gamma_shift][gray16 >> 8];
 8331              		.loc 1 3116 0
 8332 10da 0FB6C3   		movzbl	%bl, %eax
 8333 10dd 0FB6DF   		movzbl	%bh, %ebx
 8334              	.LVL922:
 8335 10e0 D3F8     		sarl	%cl, %eax
 8336 10e2 488B8FD8 		movq	728(%rdi), %rcx
 8336      020000
 8337 10e9 4898     		cltq
 8338 10eb 488B04C1 		movq	(%rcx,%rax,8), %rax
 8339 10ef 0FB70458 		movzwl	(%rax,%rbx,2), %eax
 8340              	.LVL923:
 8341 10f3 E9BAFAFF 		jmp	.L833
 8341      FF
 8342              	.LVL924:
 8343 10f8 0F1F8400 		.p2align 4,,10
 8343      00000000 
 8344              		.p2align 3
 8345              	.L1511:
 8346 1100 0FB68377 		movzbl	631(%rbx), %eax
 8346      020000
 8347 1107 E94BFEFF 		jmp	.L971
 8347      FF
 8348              	.LVL925:
 8349 110c 0F1F4000 		.p2align 4,,10
 8350              		.p2align 3
 8351              	.L1525:
 8352              	.LBE688:
 8353              	.LBE690:
 8354              	.LBE691:
 8355              	.LBE705:
 8356              	.LBE716:
 8357              	.LBE728:
 8358              	.LBE784:
4744:fltk-1.3.4-1/png/pngrtran.c **** 
 8359              		.loc 1 4744 0
 8360 1110 488D9700 		leaq	768(%rdi), %rdx
 8360      030000
4743:fltk-1.3.4-1/png/pngrtran.c ****                 &(png_ptr->trans_color));
 8361              		.loc 1 4743 0
 8362 1117 4883C601 		addq	$1, %rsi
 8363 111b 4889EF   		movq	%rbp, %rdi
 8364 111e E8000000 		call	png_do_expand
 8364      00
 8365              	.LVL926:
 8366 1123 E95AEFFF 		jmp	.L776
 8366      FF
 8367              	.LVL927:
 8368 1128 0F1F8400 		.p2align 4,,10
 8368      00000000 
 8369              		.p2align 3
 8370              	.L1554:
 8371              	.LBB785:
 8372              	.LBB608:
2564:fltk-1.3.4-1/png/pngrtran.c ****       {
 8373              		.loc 1 2564 0
 8374 1130 807D1108 		cmpb	$8, 17(%rbp)
 8375              	.LBB603:
2567:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
 8376              		.loc 1 2567 0
 8377 1134 4889D1   		movq	%rdx, %rcx
 8378              	.LBE603:
2564:fltk-1.3.4-1/png/pngrtran.c ****       {
 8379              		.loc 1 2564 0
 8380 1137 0F845B0F 		je	.L1572
 8380      0000
 8381              	.LBB604:
2590:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
 8382              		.loc 1 2590 0
 8383 113d 48034D08 		addq	8(%rbp), %rcx
 8384              	.LVL928:
2594:fltk-1.3.4-1/png/pngrtran.c ****          {
 8385              		.loc 1 2594 0
 8386 1141 85FF     		testl	%edi, %edi
 8387 1143 0F843E15 		je	.L1053
 8387      0000
 8388 1149 8D47FF   		leal	-1(%rdi), %eax
 8389 114c 4889CF   		movq	%rcx, %rdi
 8390              	.LVL929:
 8391 114f 48C1E003 		salq	$3, %rax
 8392 1153 4829C7   		subq	%rax, %rdi
 8393 1156 4889F8   		movq	%rdi, %rax
 8394 1159 4883E808 		subq	$8, %rax
 8395              	.LVL930:
 8396 115d 0F1F00   		.p2align 4,,10
 8397              		.p2align 3
 8398              	.L1055:
2596:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = (png_byte)(255 - *(--sp));
 8399              		.loc 1 2596 0
 8400 1160 F651FF   		notb	-1(%rcx)
 8401              	.LVL931:
2597:fltk-1.3.4-1/png/pngrtran.c **** 
 8402              		.loc 1 2597 0
 8403 1163 F651FE   		notb	-2(%rcx)
 8404 1166 4883E908 		subq	$8, %rcx
 8405              	.LVL932:
2594:fltk-1.3.4-1/png/pngrtran.c ****          {
 8406              		.loc 1 2594 0
 8407 116a 4839C1   		cmpq	%rax, %rcx
 8408 116d 75F1     		jne	.L1055
 8409 116f E97BF5FF 		jmp	.L1515
 8409      FF
 8410              	.LVL933:
 8411              		.p2align 4,,10
 8412 1174 0F1F4000 		.p2align 3
 8413              	.L1524:
 8414              	.LBE604:
 8415              	.LBE608:
 8416              	.LBE785:
 8417              	.LBB786:
 8418              	.LBB757:
4204:fltk-1.3.4-1/png/pngrtran.c ****       {
 8419              		.loc 1 4204 0
 8420 1178 0FB65511 		movzbl	17(%rbp), %edx
 8421              	.LBE757:
 8422              	.LBE786:
4735:fltk-1.3.4-1/png/pngrtran.c ****              png_ptr->palette, png_ptr->trans_alpha, png_ptr->num_trans);
 8423              		.loc 1 4735 0
 8424 117c 4883C601 		addq	$1, %rsi
 8425              	.LVL934:
4736:fltk-1.3.4-1/png/pngrtran.c ****       }
 8426              		.loc 1 4736 0
 8427 1180 440FB797 		movzwl	624(%rdi), %r10d
 8427      70020000 
 8428 1188 4C8B87F8 		movq	760(%rdi), %r8
 8428      020000
 8429              	.LBB787:
 8430              	.LBB758:
4198:fltk-1.3.4-1/png/pngrtran.c **** 
 8431              		.loc 1 4198 0
 8432 118f 448B4D00 		movl	0(%rbp), %r9d
 8433              	.LBE758:
 8434              	.LBE787:
4736:fltk-1.3.4-1/png/pngrtran.c ****       }
 8435              		.loc 1 4736 0
 8436 1193 488BBF60 		movq	608(%rdi), %rdi
 8436      020000
 8437              	.LVL935:
 8438              	.LBB788:
 8439              	.LBB759:
4204:fltk-1.3.4-1/png/pngrtran.c ****       {
 8440              		.loc 1 4204 0
 8441 119a 80FA07   		cmpb	$7, %dl
 8442 119d 0F868D03 		jbe	.L1573
 8442      0000
4289:fltk-1.3.4-1/png/pngrtran.c ****       {
 8443              		.loc 1 4289 0
 8444 11a3 80FA08   		cmpb	$8, %dl
 8445 11a6 0F85F2EE 		jne	.L804
 8445      FFFF
 8446 11ac 4489C8   		movl	%r9d, %eax
 8447 11af 488D4406 		leaq	-1(%rsi,%rax), %rax
 8447      FF
 8448              	.L795:
4292:fltk-1.3.4-1/png/pngrtran.c ****             {
 8449              		.loc 1 4292 0
 8450 11b4 4585D2   		testl	%r10d, %r10d
 8451 11b7 0F84B31A 		je	.L797
 8451      0000
 8452              	.LVL936:
4297:fltk-1.3.4-1/png/pngrtran.c ****                {
 8453              		.loc 1 4297 0
 8454 11bd 4585C9   		testl	%r9d, %r9d
4295:fltk-1.3.4-1/png/pngrtran.c **** 
 8455              		.loc 1 4295 0
 8456 11c0 428D148D 		leal	0(,%r9,4), %edx
 8456      00000000 
 8457              	.LVL937:
4297:fltk-1.3.4-1/png/pngrtran.c ****                {
 8458              		.loc 1 4297 0
 8459 11c8 0F847CFC 		je	.L803
 8459      FFFF
 8460 11ce 488D4C16 		leaq	-2(%rsi,%rdx), %rcx
 8460      FE
 8461 11d3 418D71FF 		leal	-1(%r9), %esi
 8462              	.LVL938:
 8463 11d7 48F7D6   		notq	%rsi
 8464 11da 4801C6   		addq	%rax, %rsi
 8465 11dd EB44     		jmp	.L802
 8466              	.LVL939:
 8467 11df 90       		.p2align 4,,10
 8468              		.p2align 3
 8469              	.L1574:
4300:fltk-1.3.4-1/png/pngrtran.c **** 
 8470              		.loc 1 4300 0
 8471 11e0 C64101FF 		movb	$-1, 1(%rcx)
 8472              	.L801:
 8473              	.LVL940:
4305:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].green;
 8474              		.loc 1 4305 0
 8475 11e4 0FB610   		movzbl	(%rax), %edx
4308:fltk-1.3.4-1/png/pngrtran.c ****                }
 8476              		.loc 1 4308 0
 8477 11e7 4883E801 		subq	$1, %rax
 8478              	.LVL941:
 8479 11eb 4883E904 		subq	$4, %rcx
 8480              	.LVL942:
4305:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].green;
 8481              		.loc 1 4305 0
 8482 11ef 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 8483 11f3 0FB65417 		movzbl	2(%rdi,%rdx), %edx
 8483      02
 8484 11f8 885104   		movb	%dl, 4(%rcx)
 8485              	.LVL943:
4306:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].red;
 8486              		.loc 1 4306 0
 8487 11fb 0FB65001 		movzbl	1(%rax), %edx
 8488 11ff 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 8489 1203 0FB65417 		movzbl	1(%rdi,%rdx), %edx
 8489      01
 8490 1208 885103   		movb	%dl, 3(%rcx)
4307:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
 8491              		.loc 1 4307 0
 8492 120b 0FB65001 		movzbl	1(%rax), %edx
 8493              	.LVL944:
 8494 120f 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 8495 1213 0FB61417 		movzbl	(%rdi,%rdx), %edx
 8496 1217 885102   		movb	%dl, 2(%rcx)
4297:fltk-1.3.4-1/png/pngrtran.c ****                {
 8497              		.loc 1 4297 0
 8498 121a 4839F0   		cmpq	%rsi, %rax
 8499 121d 0F8427FC 		je	.L803
 8499      FFFF
 8500              	.LVL945:
 8501              	.L802:
4299:fltk-1.3.4-1/png/pngrtran.c ****                      *dp-- = 0xff;
 8502              		.loc 1 4299 0
 8503 1223 440FB618 		movzbl	(%rax), %r11d
 8504 1227 4539DA   		cmpl	%r11d, %r10d
 8505 122a 7EB4     		jle	.L1574
 8506              	.LVL946:
4303:fltk-1.3.4-1/png/pngrtran.c **** 
 8507              		.loc 1 4303 0
 8508 122c 430FB614 		movzbl	(%r8,%r11), %edx
 8508      18
 8509 1231 885101   		movb	%dl, 1(%rcx)
 8510 1234 EBAE     		jmp	.L801
 8511              	.LVL947:
 8512 1236 662E0F1F 		.p2align 4,,10
 8512      84000000 
 8512      0000
 8513              		.p2align 3
 8514              	.L852:
 8515              	.LBE759:
 8516              	.LBE788:
 8517              	.LBB789:
 8518              	.LBB589:
3584:fltk-1.3.4-1/png/pngrtran.c ****             {
 8519              		.loc 1 3584 0
 8520 1240 807D1108 		cmpb	$8, 17(%rbp)
 8521 1244 0F846603 		je	.L1575
 8521      0000
3635:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_16_to_1 != NULL)
 8522              		.loc 1 3635 0
 8523 124a 4D85C9   		testq	%r9, %r9
 8524 124d 400F95C6 		setne	%sil
 8525              	.LVL948:
 8526 1251 4D85D2   		testq	%r10, %r10
 8527 1254 0F95C0   		setne	%al
 8528 1257 4084C6   		testb	%al, %sil
 8529 125a 0F844814 		je	.L1176
 8529      0000
 8530 1260 4D85C0   		testq	%r8, %r8
 8531 1263 0F843F14 		je	.L1176
 8531      0000
 8532              	.LVL949:
3639:fltk-1.3.4-1/png/pngrtran.c ****                   {
 8533              		.loc 1 3639 0
 8534 1269 4585DB   		testl	%r11d, %r11d
 8535 126c 0F845E10 		je	.L860
 8535      0000
 8536 1272 418D43FF 		leal	-1(%r11), %eax
 8537              	.LBB505:
 8538              	.LBB506:
 8539              	.LBB507:
3666:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize != 0)
 8540              		.loc 1 3666 0
 8541 1276 41BCFFFF 		movl	$65535, %r12d
 8541      0000
 8542              	.LVL950:
 8543 127c 4D8D5C86 		leaq	5(%r14,%rax,4), %r11
 8543      05
 8544              	.LVL951:
 8545 1281 EB25     		jmp	.L938
 8546              	.LVL952:
 8547              		.p2align 4,,10
 8548 1283 0F1F4400 		.p2align 3
 8548      00
 8549              	.L1577:
 8550              	.LBE507:
 8551              	.LBE506:
3656:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 8552              		.loc 1 3656 0
 8553 1288 0FB68391 		movzbl	657(%rbx), %eax
 8553      020000
 8554              	.LVL953:
 8555 128f 8802     		movb	%al, (%rdx)
3658:fltk-1.3.4-1/png/pngrtran.c ****                      }
 8556              		.loc 1 3658 0
 8557 1291 0FB78390 		movzwl	656(%rbx), %eax
 8557      020000
 8558 1298 884201   		movb	%al, 1(%rdx)
 8559              	.L935:
 8560              	.LBE505:
3639:fltk-1.3.4-1/png/pngrtran.c ****                   {
 8561              		.loc 1 3639 0
 8562 129b 4883C204 		addq	$4, %rdx
 8563              	.LVL954:
 8564 129f 4C39DA   		cmpq	%r11, %rdx
 8565 12a2 0F8470FC 		je	.L848
 8565      FFFF
 8566              	.L938:
 8567              	.LBB513:
3641:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 3));
 8568              		.loc 1 3641 0
 8569 12a8 0FB64202 		movzbl	2(%rdx), %eax
 8570 12ac 0FB67203 		movzbl	3(%rdx), %esi
 8571 12b0 C1E008   		sall	$8, %eax
 8572 12b3 01F0     		addl	%esi, %eax
 8573              	.LVL955:
3644:fltk-1.3.4-1/png/pngrtran.c ****                      {
 8574              		.loc 1 3644 0
 8575 12b5 6683F8FF 		cmpw	$-1, %ax
 8576 12b9 0F845108 		je	.L1576
 8576      0000
3653:fltk-1.3.4-1/png/pngrtran.c ****                      {
 8577              		.loc 1 3653 0
 8578 12bf 6685C0   		testw	%ax, %ax
 8579 12c2 74C4     		je	.L1577
 8580              	.LVL956:
 8581              	.LBB511:
3665:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(v, g, a, png_ptr->background_1.gray);
 8582              		.loc 1 3665 0
 8583 12c4 0FB67201 		movzbl	1(%rdx), %esi
 8584              	.LVL957:
 8585 12c8 440FB62A 		movzbl	(%rdx), %r13d
 8586              	.LBB508:
3666:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize != 0)
 8587              		.loc 1 3666 0
 8588 12cc 0FB7C0   		movzwl	%ax, %eax
 8589 12cf 4589E7   		movl	%r12d, %r15d
 8590 12d2 4129C7   		subl	%eax, %r15d
 8591              	.LBE508:
3665:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite_16(v, g, a, png_ptr->background_1.gray);
 8592              		.loc 1 3665 0
 8593 12d5 D3FE     		sarl	%cl, %esi
 8594              	.LVL958:
 8595 12d7 4863F6   		movslq	%esi, %rsi
 8596 12da 498B34F0 		movq	(%r8,%rsi,8), %rsi
 8597              	.LBB509:
3666:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize != 0)
 8598              		.loc 1 3666 0
 8599 12de 420FB734 		movzwl	(%rsi,%r13,2), %esi
 8599      6E
 8600 12e3 440FB7AB 		movzwl	666(%rbx), %r13d
 8600      9A020000 
 8601 12eb 0FAFF0   		imull	%eax, %esi
 8602 12ee 4489F8   		movl	%r15d, %eax
 8603              	.LVL959:
 8604 12f1 410FAFC5 		imull	%r13d, %eax
 8605 12f5 8D840600 		leal	32768(%rsi,%rax), %eax
 8605      800000
 8606              	.LVL960:
 8607 12fc 89C6     		movl	%eax, %esi
 8608 12fe C1EE10   		shrl	$16, %esi
 8609 1301 01F0     		addl	%esi, %eax
 8610              	.LVL961:
 8611 1303 C1E810   		shrl	$16, %eax
 8612              	.LBE509:
3667:fltk-1.3.4-1/png/pngrtran.c ****                            w = v;
 8613              		.loc 1 3667 0
 8614 1306 85FF     		testl	%edi, %edi
 8615              	.LBB510:
3666:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize != 0)
 8616              		.loc 1 3666 0
 8617 1308 89C6     		movl	%eax, %esi
 8618              	.LVL962:
 8619              	.LBE510:
3667:fltk-1.3.4-1/png/pngrtran.c ****                            w = v;
 8620              		.loc 1 3667 0
 8621 130a 7513     		jne	.L937
3670:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((w >> 8) & 0xff);
 8622              		.loc 1 3670 0
 8623 130c 0FB6F0   		movzbl	%al, %esi
 8624 130f 0FB6C4   		movzbl	%ah, %eax
 8625              	.LVL963:
 8626 1312 D3FE     		sarl	%cl, %esi
 8627 1314 4863F6   		movslq	%esi, %rsi
 8628 1317 498B34F2 		movq	(%r10,%rsi,8), %rsi
 8629 131b 0FB73446 		movzwl	(%rsi,%rax,2), %esi
 8630              	.LVL964:
 8631              	.L937:
3671:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(w & 0xff);
 8632              		.loc 1 3671 0
 8633 131f 89F0     		movl	%esi, %eax
3672:fltk-1.3.4-1/png/pngrtran.c ****                      }
 8634              		.loc 1 3672 0
 8635 1321 40887201 		movb	%sil, 1(%rdx)
 8636              	.LVL965:
3671:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(w & 0xff);
 8637              		.loc 1 3671 0
 8638 1325 66C1E808 		shrw	$8, %ax
 8639 1329 8802     		movb	%al, (%rdx)
 8640 132b E96BFFFF 		jmp	.L935
 8640      FF
 8641              	.LVL966:
 8642              		.p2align 4,,10
 8643              		.p2align 3
 8644              	.L849:
 8645              	.LBE511:
 8646              	.LBE513:
3457:fltk-1.3.4-1/png/pngrtran.c ****             {
 8647              		.loc 1 3457 0
 8648 1330 807D1108 		cmpb	$8, 17(%rbp)
 8649 1334 0F842603 		je	.L1578
 8649      0000
3502:fltk-1.3.4-1/png/pngrtran.c ****                {
 8650              		.loc 1 3502 0
 8651 133a 4D85C9   		testq	%r9, %r9
 8652 133d 0F844615 		je	.L1579
 8652      0000
 8653              	.LVL967:
3505:fltk-1.3.4-1/png/pngrtran.c ****                   {
 8654              		.loc 1 3505 0
 8655 1343 4585DB   		testl	%r11d, %r11d
 8656 1346 0F84840F 		je	.L860
 8656      0000
 8657 134c 418D43FF 		leal	-1(%r11), %eax
 8658 1350 488D0440 		leaq	(%rax,%rax,2), %rax
 8659 1354 4D8D6446 		leaq	7(%r14,%rax,2), %r12
 8659      07
 8660              	.LVL968:
 8661 1359 EB63     		jmp	.L916
 8662              	.LVL969:
 8663 135b 0F1F4400 		.p2align 4,,10
 8663      00
 8664              		.p2align 3
 8665              	.L914:
 8666              	.LBB514:
 8667              	.LBB515:
3533:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 8668              		.loc 1 3533 0
 8669 1360 D3F8     		sarl	%cl, %eax
 8670              	.LVL970:
3537:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
 8671              		.loc 1 3537 0
 8672 1362 D3FE     		sarl	%cl, %esi
 8673              	.LVL971:
3541:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 8674              		.loc 1 3541 0
 8675 1364 D3FF     		sarl	%cl, %edi
 8676              	.LVL972:
3533:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 8677              		.loc 1 3533 0
 8678 1366 4898     		cltq
3537:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
 8679              		.loc 1 3537 0
 8680 1368 4863F6   		movslq	%esi, %rsi
3541:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 8681              		.loc 1 3541 0
 8682 136b 4863FF   		movslq	%edi, %rdi
3533:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 8683              		.loc 1 3533 0
 8684 136e 498B04C1 		movq	(%r9,%rax,8), %rax
 8685 1372 420FB704 		movzwl	(%rax,%r8,2), %eax
 8685      40
 8686              	.LVL973:
3534:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 8687              		.loc 1 3534 0
 8688 1377 4189C0   		movl	%eax, %r8d
 8689              	.LVL974:
3535:fltk-1.3.4-1/png/pngrtran.c **** 
 8690              		.loc 1 3535 0
 8691 137a 884201   		movb	%al, 1(%rdx)
 8692              	.LVL975:
3534:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 8693              		.loc 1 3534 0
 8694 137d 6641C1E8 		shrw	$8, %r8w
 8694      08
 8695 1382 448802   		movb	%r8b, (%rdx)
3537:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
 8696              		.loc 1 3537 0
 8697 1385 498B04F1 		movq	(%r9,%rsi,8), %rax
 8698              	.LVL976:
 8699 1389 420FB704 		movzwl	(%rax,%r10,2), %eax
 8699      50
 8700              	.LVL977:
3538:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
 8701              		.loc 1 3538 0
 8702 138e 89C6     		movl	%eax, %esi
3539:fltk-1.3.4-1/png/pngrtran.c **** 
 8703              		.loc 1 3539 0
 8704 1390 884203   		movb	%al, 3(%rdx)
 8705              	.LVL978:
3538:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
 8706              		.loc 1 3538 0
 8707 1393 66C1EE08 		shrw	$8, %si
 8708 1397 40887202 		movb	%sil, 2(%rdx)
3541:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 8709              		.loc 1 3541 0
 8710 139b 498B04F9 		movq	(%r9,%rdi,8), %rax
 8711              	.LVL979:
 8712 139f 420FB704 		movzwl	(%rax,%r11,2), %eax
 8712      58
 8713              	.LVL980:
3542:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
 8714              		.loc 1 3542 0
 8715 13a4 89C6     		movl	%eax, %esi
3543:fltk-1.3.4-1/png/pngrtran.c ****                      }
 8716              		.loc 1 3543 0
 8717 13a6 884205   		movb	%al, 5(%rdx)
 8718              	.LVL981:
3542:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
 8719              		.loc 1 3542 0
 8720 13a9 66C1EE08 		shrw	$8, %si
 8721 13ad 40887204 		movb	%sil, 4(%rdx)
 8722              	.LVL982:
 8723              	.L915:
 8724              	.LBE515:
 8725              	.LBE514:
3505:fltk-1.3.4-1/png/pngrtran.c ****                   {
 8726              		.loc 1 3505 0
 8727 13b1 4883C206 		addq	$6, %rdx
 8728              	.LVL983:
 8729 13b5 4C39E2   		cmpq	%r12, %rdx
 8730 13b8 0F845AFB 		je	.L848
 8730      FFFF
 8731              	.L916:
 8732              	.LBB516:
3507:fltk-1.3.4-1/png/pngrtran.c **** 
 8733              		.loc 1 3507 0
 8734 13be 440FB602 		movzbl	(%rdx), %r8d
 8735 13c2 440FB66A 		movzbl	1(%rdx), %r13d
 8735      01
3509:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 3));
 8736              		.loc 1 3509 0
 8737 13c7 440FB652 		movzbl	2(%rdx), %r10d
 8737      02
3510:fltk-1.3.4-1/png/pngrtran.c **** 
 8738              		.loc 1 3510 0
 8739 13cc 0FB67203 		movzbl	3(%rdx), %esi
3512:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 5));
 8740              		.loc 1 3512 0
 8741 13d0 440FB65A 		movzbl	4(%rdx), %r11d
 8741      04
3513:fltk-1.3.4-1/png/pngrtran.c **** 
 8742              		.loc 1 3513 0
 8743 13d5 0FB67A05 		movzbl	5(%rdx), %edi
3515:fltk-1.3.4-1/png/pngrtran.c ****                          g == png_ptr->trans_color.green &&
 8744              		.loc 1 3515 0
 8745 13d9 4589C6   		movl	%r8d, %r14d
3507:fltk-1.3.4-1/png/pngrtran.c **** 
 8746              		.loc 1 3507 0
 8747 13dc 4489E8   		movl	%r13d, %eax
 8748              	.LVL984:
3515:fltk-1.3.4-1/png/pngrtran.c ****                          g == png_ptr->trans_color.green &&
 8749              		.loc 1 3515 0
 8750 13df 41C1E608 		sall	$8, %r14d
 8751 13e3 4501F5   		addl	%r14d, %r13d
 8752              	.LVL985:
 8753 13e6 66443BAB 		cmpw	770(%rbx), %r13w
 8753      02030000 
 8754 13ee 0F856CFF 		jne	.L914
 8754      FFFF
 8755 13f4 4589D6   		movl	%r10d, %r14d
 8756 13f7 440FB6EE 		movzbl	%sil, %r13d
 8757              	.LVL986:
 8758 13fb 41C1E608 		sall	$8, %r14d
 8759 13ff 4501F5   		addl	%r14d, %r13d
 8760              	.LVL987:
 8761 1402 66443BAB 		cmpw	772(%rbx), %r13w
 8761      04030000 
 8762 140a 0F8550FF 		jne	.L914
 8762      FFFF
3516:fltk-1.3.4-1/png/pngrtran.c ****                          b == png_ptr->trans_color.blue)
 8763              		.loc 1 3516 0
 8764 1410 4589DE   		movl	%r11d, %r14d
 8765 1413 440FB6EF 		movzbl	%dil, %r13d
 8766              	.LVL988:
 8767 1417 41C1E608 		sall	$8, %r14d
 8768 141b 4501F5   		addl	%r14d, %r13d
 8769              	.LVL989:
 8770 141e 66443BAB 		cmpw	774(%rbx), %r13w
 8770      06030000 
 8771 1426 0F8534FF 		jne	.L914
 8771      FFFF
3520:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
 8772              		.loc 1 3520 0
 8773 142c 0FB6838B 		movzbl	651(%rbx), %eax
 8773      020000
 8774              	.LVL990:
 8775 1433 8802     		movb	%al, (%rdx)
3521:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
 8776              		.loc 1 3521 0
 8777 1435 0FB7838A 		movzwl	650(%rbx), %eax
 8777      020000
 8778 143c 884201   		movb	%al, 1(%rdx)
 8779              	.LVL991:
3522:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 8780              		.loc 1 3522 0
 8781 143f 0FB6838D 		movzbl	653(%rbx), %eax
 8781      020000
 8782 1446 884202   		movb	%al, 2(%rdx)
3524:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 8783              		.loc 1 3524 0
 8784 1449 0FB7838C 		movzwl	652(%rbx), %eax
 8784      020000
 8785 1450 884203   		movb	%al, 3(%rdx)
3526:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 8786              		.loc 1 3526 0
 8787 1453 0FB6838F 		movzbl	655(%rbx), %eax
 8787      020000
 8788 145a 884204   		movb	%al, 4(%rdx)
3528:fltk-1.3.4-1/png/pngrtran.c ****                      }
 8789              		.loc 1 3528 0
 8790 145d 0FB7838E 		movzwl	654(%rbx), %eax
 8790      020000
 8791 1464 884205   		movb	%al, 5(%rdx)
 8792 1467 E945FFFF 		jmp	.L915
 8792      FF
 8793              	.LVL992:
 8794 146c 0F1F4000 		.p2align 4,,10
 8795              		.p2align 3
 8796              	.L1061:
 8797              	.LBE516:
 8798              	.LBE589:
 8799              	.LBE789:
4925:fltk-1.3.4-1/png/pngrtran.c ****       png_do_unpack(row_info, png_ptr->row_buf + 1);
 8800              		.loc 1 4925 0
 8801 1470 A804     		testb	$4, %al
 8802 1472 0F8408F4 		je	.L1101
 8802      FFFF
 8803 1478 E9B4F3FF 		jmp	.L1152
 8803      FF
 8804              	.LVL993:
 8805 147d 0F1F00   		.p2align 4,,10
 8806              		.p2align 3
 8807              	.L1563:
 8808 1480 488B6C24 		movq	8(%rsp), %rbp
 8808      08
 8809              	.LVL994:
 8810 1485 4889FB   		movq	%rdi, %rbx
 8811 1488 440FB645 		movzbl	16(%rbp), %r8d
 8811      10
 8812              	.LVL995:
 8813 148d 0FB64D11 		movzbl	17(%rbp), %ecx
 8814              	.LVL996:
 8815              	.L815:
 8816              	.LBB790:
 8817              	.LBB729:
 8818              	.LBB717:
 8819              	.LBB706:
3167:fltk-1.3.4-1/png/pngrtran.c ****       row_info->color_type = (png_byte)(row_info->color_type &
 8820              		.loc 1 3167 0
 8821 1491 0FB64512 		movzbl	18(%rbp), %eax
3168:fltk-1.3.4-1/png/pngrtran.c ****           ~PNG_COLOR_MASK_COLOR);
 8822              		.loc 1 3168 0
 8823 1495 4183E0FD 		andl	$-3, %r8d
 8824 1499 44884510 		movb	%r8b, 16(%rbp)
3167:fltk-1.3.4-1/png/pngrtran.c ****       row_info->color_type = (png_byte)(row_info->color_type &
 8825              		.loc 1 3167 0
 8826 149d 83E802   		subl	$2, %eax
 8827 14a0 884512   		movb	%al, 18(%rbp)
3170:fltk-1.3.4-1/png/pngrtran.c ****           row_info->bit_depth);
 8828              		.loc 1 3170 0
 8829 14a3 0FAFC1   		imull	%ecx, %eax
3172:fltk-1.3.4-1/png/pngrtran.c ****    }
 8830              		.loc 1 3172 0
 8831 14a6 3C07     		cmpb	$7, %al
3170:fltk-1.3.4-1/png/pngrtran.c ****           row_info->bit_depth);
 8832              		.loc 1 3170 0
 8833 14a8 884513   		movb	%al, 19(%rbp)
3172:fltk-1.3.4-1/png/pngrtran.c ****    }
 8834              		.loc 1 3172 0
 8835 14ab 7653     		jbe	.L842
 8836 14ad C0E803   		shrb	$3, %al
 8837 14b0 0FB6C0   		movzbl	%al, %eax
 8838 14b3 4C0FAFD0 		imulq	%rax, %r10
 8839              	.LVL997:
 8840              	.L843:
 8841              	.LBE706:
 8842              	.LBE717:
 8843              	.LBE729:
4769:fltk-1.3.4-1/png/pngrtran.c ****       {
 8844              		.loc 1 4769 0
 8845 14b7 4585E4   		testl	%r12d, %r12d
 8846              	.LBB730:
 8847              	.LBB718:
 8848              	.LBB707:
3172:fltk-1.3.4-1/png/pngrtran.c ****    }
 8849              		.loc 1 3172 0
 8850 14ba 4C895508 		movq	%r10, 8(%rbp)
 8851              	.LVL998:
 8852              	.LBE707:
 8853              	.LBE718:
 8854              	.LBE730:
4769:fltk-1.3.4-1/png/pngrtran.c ****       {
 8855              		.loc 1 4769 0
 8856 14be 0F84D61B 		je	.L1580
 8856      0000
4772:fltk-1.3.4-1/png/pngrtran.c ****              PNG_RGB_TO_GRAY_WARN)
 8857              		.loc 1 4772 0
 8858 14c4 8B833401 		movl	308(%rbx), %eax
 8858      0000
4771:fltk-1.3.4-1/png/pngrtran.c ****          if ((png_ptr->transformations & PNG_RGB_TO_GRAY) ==
 8859              		.loc 1 4771 0
 8860 14ca C6831004 		movb	$1, 1040(%rbx)
 8860      000001
4772:fltk-1.3.4-1/png/pngrtran.c ****              PNG_RGB_TO_GRAY_WARN)
 8861              		.loc 1 4772 0
 8862 14d1 89C2     		movl	%eax, %edx
 8863 14d3 81E20000 		andl	$6291456, %edx
 8863      6000
 8864 14d9 81FA0000 		cmpl	$4194304, %edx
 8864      4000
 8865 14df 0F84530E 		je	.L1581
 8865      0000
 8866              	.LVL999:
 8867              	.L845:
4776:fltk-1.3.4-1/png/pngrtran.c ****              PNG_RGB_TO_GRAY_ERR)
 8868              		.loc 1 4776 0
 8869 14e5 81FA0000 		cmpl	$2097152, %edx
 8869      2000
 8870 14eb 0F85B8EB 		jne	.L807
 8870      FFFF
4778:fltk-1.3.4-1/png/pngrtran.c ****       }
 8871              		.loc 1 4778 0
 8872 14f1 BE000000 		movl	$.LC52, %esi
 8872      00
 8873 14f6 4889DF   		movq	%rbx, %rdi
 8874 14f9 E8000000 		call	png_error
 8874      00
 8875              	.LVL1000:
 8876 14fe 6690     		.p2align 4,,10
 8877              		.p2align 3
 8878              	.L842:
 8879              	.LBB731:
 8880              	.LBB719:
 8881              	.LBB708:
3172:fltk-1.3.4-1/png/pngrtran.c ****    }
 8882              		.loc 1 3172 0
 8883 1500 0FB6C0   		movzbl	%al, %eax
 8884 1503 4C0FAFD0 		imulq	%rax, %r10
 8885              	.LVL1001:
 8886 1507 4983C207 		addq	$7, %r10
 8887 150b 49C1EA03 		shrq	$3, %r10
 8888 150f EBA6     		jmp	.L843
 8889              	.LVL1002:
 8890              		.p2align 4,,10
 8891 1511 0F1F8000 		.p2align 3
 8891      000000
 8892              	.L975:
 8893              	.LBE708:
 8894              	.LBE719:
 8895              	.LBE731:
 8896              	.LBE790:
 8897              	.LBB791:
 8898              	.LBB777:
3938:fltk-1.3.4-1/png/pngrtran.c ****    {
 8899              		.loc 1 3938 0
 8900 1518 4D85DB   		testq	%r11, %r11
 8901 151b 0F842FFB 		je	.L1512
 8901      FFFF
 8902 1521 80FA10   		cmpb	$16, %dl
 8903 1524 0F8459FA 		je	.L976
 8903      FFFF
 8904 152a E921FBFF 		jmp	.L1512
 8904      FF
 8905              	.LVL1003:
 8906 152f 90       		.p2align 4,,10
 8907              		.p2align 3
 8908              	.L1573:
 8909              	.LBE777:
 8910              	.LBE791:
 8911              	.LBB792:
 8912              	.LBB760:
4206:fltk-1.3.4-1/png/pngrtran.c ****          {
 8913              		.loc 1 4206 0
 8914 1530 80FA02   		cmpb	$2, %dl
 8915 1533 0F84C114 		je	.L780
 8915      0000
 8916 1539 80FA04   		cmpb	$4, %dl
 8917 153c 0F845814 		je	.L781
 8917      0000
 8918 1542 80FA01   		cmpb	$1, %dl
 8919 1545 0F84EF13 		je	.L782
 8919      0000
 8920 154b 4589CC   		movl	%r9d, %r12d
 8921 154e 4A8D4426 		leaq	-1(%rsi,%r12), %rax
 8921      FF
 8922              	.L783:
4284:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = 8;
 8923              		.loc 1 4284 0
 8924 1553 C6451108 		movb	$8, 17(%rbp)
4285:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = row_width;
 8925              		.loc 1 4285 0
 8926 1557 C6451308 		movb	$8, 19(%rbp)
4286:fltk-1.3.4-1/png/pngrtran.c ****       }
 8927              		.loc 1 4286 0
 8928 155b 4C896508 		movq	%r12, 8(%rbp)
 8929 155f E950FCFF 		jmp	.L795
 8929      FF
 8930              	.LVL1004:
 8931              		.p2align 4,,10
 8932 1564 0F1F4000 		.p2align 3
 8933              	.L1073:
 8934              	.LBE760:
 8935              	.LBE792:
 8936              	.LBB793:
 8937              	.LBB638:
 8938              	.LBB631:
 8939              	.LBB620:
2331:fltk-1.3.4-1/png/pngrtran.c ****             int channel = 0;
 8940              		.loc 1 2331 0
 8941 1568 4889D7   		movq	%rdx, %rdi
 8942              	.LVL1005:
 8943 156b 48037D08 		addq	8(%rbp), %rdi
 8944              	.LVL1006:
2334:fltk-1.3.4-1/png/pngrtran.c ****             {
 8945              		.loc 1 2334 0
 8946 156f 4839D7   		cmpq	%rdx, %rdi
 8947 1572 0F86A0F2 		jbe	.L1068
 8947      FFFF
 8948 1578 31C0     		xorl	%eax, %eax
 8949              	.LBB621:
2338:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)b;
 8950              		.loc 1 2338 0
 8951 157a 4531C9   		xorl	%r9d, %r9d
 8952              	.LVL1007:
 8953 157d 0F1F00   		.p2align 4,,10
 8954              		.p2align 3
 8955              	.L1080:
2336:fltk-1.3.4-1/png/pngrtran.c ****                if (++channel >= channels)
 8956              		.loc 1 2336 0
 8957 1580 0FB632   		movzbl	(%rdx), %esi
 8958 1583 4863C8   		movslq	%eax, %rcx
2337:fltk-1.3.4-1/png/pngrtran.c ****                   channel = 0;
 8959              		.loc 1 2337 0
 8960 1586 83C001   		addl	$1, %eax
 8961              	.LVL1008:
2336:fltk-1.3.4-1/png/pngrtran.c ****                if (++channel >= channels)
 8962              		.loc 1 2336 0
 8963 1589 8B4C8C10 		movl	16(%rsp,%rcx,4), %ecx
 8964 158d D3FE     		sarl	%cl, %esi
 8965              	.LVL1009:
2338:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)b;
 8966              		.loc 1 2338 0
 8967 158f 4139C0   		cmpl	%eax, %r8d
 8968 1592 410F4EC1 		cmovle	%r9d, %eax
 8969              	.LVL1010:
2339:fltk-1.3.4-1/png/pngrtran.c ****             }
 8970              		.loc 1 2339 0
 8971 1596 4883C201 		addq	$1, %rdx
 8972              	.LVL1011:
 8973              	.LBE621:
2334:fltk-1.3.4-1/png/pngrtran.c ****             {
 8974              		.loc 1 2334 0
 8975 159a 4839D7   		cmpq	%rdx, %rdi
 8976              	.LBB622:
2339:fltk-1.3.4-1/png/pngrtran.c ****             }
 8977              		.loc 1 2339 0
 8978 159d 408872FF 		movb	%sil, -1(%rdx)
 8979              	.LBE622:
2334:fltk-1.3.4-1/png/pngrtran.c ****             {
 8980              		.loc 1 2334 0
 8981 15a1 75DD     		jne	.L1080
 8982 15a3 E970F2FF 		jmp	.L1068
 8982      FF
 8983              	.LVL1012:
 8984 15a8 0F1F8400 		.p2align 4,,10
 8984      00000000 
 8985              		.p2align 3
 8986              	.L1575:
 8987              	.LBE620:
 8988              	.LBE631:
 8989              	.LBE638:
 8990              	.LBE793:
 8991              	.LBB794:
 8992              	.LBB590:
3587:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_table != NULL)
 8993              		.loc 1 3587 0
 8994 15b0 4D85E4   		testq	%r12, %r12
 8995 15b3 0F95C1   		setne	%cl
 8996              	.LVL1013:
 8997 15b6 4D85ED   		testq	%r13, %r13
 8998 15b9 0F95C0   		setne	%al
 8999 15bc 84C1     		testb	%al, %cl
 9000 15be 0F843717 		je	.L1175
 9000      0000
 9001 15c4 4885F6   		testq	%rsi, %rsi
 9002 15c7 0F842E17 		je	.L1175
 9002      0000
 9003              	.LVL1014:
3591:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9004              		.loc 1 3591 0
 9005 15cd 4585DB   		testl	%r11d, %r11d
 9006 15d0 0F84FA0C 		je	.L860
 9006      0000
 9007 15d6 418D43FF 		leal	-1(%r11), %eax
 9008              	.LBB517:
 9009              	.LBB518:
 9010              	.LBB519:
3609:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 9011              		.loc 1 3609 0
 9012 15da 41B9FF00 		movl	$255, %r9d
 9012      0000
 9013              	.LVL1015:
 9014 15e0 4D8D4446 		leaq	3(%r14,%rax,2), %r8
 9014      03
 9015              	.LVL1016:
 9016 15e5 EB1F     		jmp	.L927
 9017              	.LVL1017:
 9018 15e7 660F1F84 		.p2align 4,,10
 9018      00000000 
 9018      00
 9019              		.p2align 3
 9020              	.L1583:
 9021              	.LBE519:
 9022              	.LBE518:
3601:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9023              		.loc 1 3601 0
 9024 15f0 0FB78390 		movzwl	656(%rbx), %eax
 9024      020000
 9025              	.LVL1018:
 9026 15f7 8802     		movb	%al, (%rdx)
 9027              	.LVL1019:
 9028              	.L924:
 9029              	.LBE517:
3591:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9030              		.loc 1 3591 0
 9031 15f9 4883C202 		addq	$2, %rdx
 9032              	.LVL1020:
 9033 15fd 4C39C2   		cmpq	%r8, %rdx
 9034 1600 0F8412F9 		je	.L848
 9034      FFFF
 9035              	.LVL1021:
 9036              	.L927:
 9037              	.LBB522:
3593:fltk-1.3.4-1/png/pngrtran.c **** 
 9038              		.loc 1 3593 0
 9039 1606 0FB64A01 		movzbl	1(%rdx), %ecx
3595:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = gamma_table[*sp];
 9040              		.loc 1 3595 0
 9041 160a 6681F9FF 		cmpw	$255, %cx
 9041      00
3593:fltk-1.3.4-1/png/pngrtran.c **** 
 9042              		.loc 1 3593 0
 9043 160f 89C8     		movl	%ecx, %eax
 9044              	.LVL1022:
3595:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = gamma_table[*sp];
 9045              		.loc 1 3595 0
 9046 1611 0F84C10D 		je	.L1582
 9046      0000
3598:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9047              		.loc 1 3598 0
 9048 1617 6685C9   		testw	%cx, %cx
 9049 161a 74D4     		je	.L1583
 9050              	.LBB521:
3608:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.gray);
 9051              		.loc 1 3608 0
 9052 161c 440FB612 		movzbl	(%rdx), %r10d
 9053              	.LVL1023:
 9054              	.LBB520:
3609:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0)
 9055              		.loc 1 3609 0
 9056 1620 4589CF   		movl	%r9d, %r15d
 9057 1623 4129CF   		subl	%ecx, %r15d
 9058 1626 4489F9   		movl	%r15d, %ecx
 9059 1629 660FAF8B 		imulw	666(%rbx), %cx
 9059      9A020000 
 9060 1631 43F62414 		mulb	(%r12,%r10)
 9061              	.LVL1024:
 9062 1635 8D840180 		leal	128(%rcx,%rax), %eax
 9062      000000
 9063              	.LVL1025:
 9064 163c 0FB6CC   		movzbl	%ah, %ecx
 9065 163f 0FB7C0   		movzwl	%ax, %eax
 9066 1642 01C8     		addl	%ecx, %eax
 9067              	.LVL1026:
 9068 1644 C1E808   		shrl	$8, %eax
 9069              	.LVL1027:
 9070              	.LBE520:
3610:fltk-1.3.4-1/png/pngrtran.c ****                            w = gamma_from_1[w];
 9071              		.loc 1 3610 0
 9072 1647 85FF     		testl	%edi, %edi
 9073 1649 7509     		jne	.L926
3611:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = w;
 9074              		.loc 1 3611 0
 9075 164b 0FB6C0   		movzbl	%al, %eax
 9076              	.LVL1028:
 9077 164e 410FB644 		movzbl	0(%r13,%rax), %eax
 9077      0500
 9078              	.LVL1029:
 9079              	.L926:
3612:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9080              		.loc 1 3612 0
 9081 1654 8802     		movb	%al, (%rdx)
 9082              	.LVL1030:
 9083 1656 EBA1     		jmp	.L924
 9084              	.LVL1031:
 9085 1658 0F1F8400 		.p2align 4,,10
 9085      00000000 
 9086              		.p2align 3
 9087              	.L1578:
 9088              	.LBE521:
 9089              	.LBE522:
3460:fltk-1.3.4-1/png/pngrtran.c ****                {
 9090              		.loc 1 3460 0
 9091 1660 4885F6   		testq	%rsi, %rsi
 9092 1663 0F840317 		je	.L1584
 9092      0000
 9093              	.LVL1032:
3463:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9094              		.loc 1 3463 0
 9095 1669 4585DB   		testl	%r11d, %r11d
 9096 166c 0F845E0C 		je	.L860
 9096      0000
 9097 1672 418D43FF 		leal	-1(%r11), %eax
 9098 1676 488D4440 		leaq	4(%rax,%rax,2), %rax
 9098      04
 9099 167b 4901C6   		addq	%rax, %r14
 9100 167e EB29     		jmp	.L909
 9101              	.LVL1033:
 9102              		.p2align 4,,10
 9103              		.p2align 3
 9104              	.L905:
 9105 1680 0FB64A01 		movzbl	1(%rdx), %ecx
 9106              	.L1509:
 9107 1684 0FB67A02 		movzbl	2(%rdx), %edi
 9108              	.L907:
3476:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = gamma_table[*(sp + 1)];
 9109              		.loc 1 3476 0
 9110 1688 0FB60406 		movzbl	(%rsi,%rax), %eax
 9111 168c 8802     		movb	%al, (%rdx)
3477:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = gamma_table[*(sp + 2)];
 9112              		.loc 1 3477 0
 9113 168e 0FB6040E 		movzbl	(%rsi,%rcx), %eax
 9114 1692 884201   		movb	%al, 1(%rdx)
3478:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9115              		.loc 1 3478 0
 9116 1695 0FB6043E 		movzbl	(%rsi,%rdi), %eax
 9117 1699 884202   		movb	%al, 2(%rdx)
 9118              	.L908:
3463:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9119              		.loc 1 3463 0
 9120 169c 4883C203 		addq	$3, %rdx
 9121              	.LVL1034:
 9122 16a0 4C39F2   		cmpq	%r14, %rdx
 9123 16a3 0F846FF8 		je	.L848
 9123      FFFF
 9124              	.L909:
3465:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 1) == png_ptr->trans_color.green &&
 9125              		.loc 1 3465 0
 9126 16a9 0FB60A   		movzbl	(%rdx), %ecx
 9127 16ac 663B8B02 		cmpw	770(%rbx), %cx
 9127      030000
 9128 16b3 4889C8   		movq	%rcx, %rax
 9129 16b6 75C8     		jne	.L905
3466:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 2) == png_ptr->trans_color.blue)
 9130              		.loc 1 3466 0
 9131 16b8 0FB67A01 		movzbl	1(%rdx), %edi
3465:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 1) == png_ptr->trans_color.green &&
 9132              		.loc 1 3465 0
 9133 16bc 663BBB04 		cmpw	772(%rbx), %di
 9133      030000
3466:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 2) == png_ptr->trans_color.blue)
 9134              		.loc 1 3466 0
 9135 16c3 4889F9   		movq	%rdi, %rcx
3465:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 1) == png_ptr->trans_color.green &&
 9136              		.loc 1 3465 0
 9137 16c6 75BC     		jne	.L1509
3467:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9138              		.loc 1 3467 0
 9139 16c8 440FB642 		movzbl	2(%rdx), %r8d
 9139      02
3466:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 2) == png_ptr->trans_color.blue)
 9140              		.loc 1 3466 0
 9141 16cd 66443B83 		cmpw	774(%rbx), %r8w
 9141      06030000 
3467:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9142              		.loc 1 3467 0
 9143 16d5 4C89C7   		movq	%r8, %rdi
3466:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 2) == png_ptr->trans_color.blue)
 9144              		.loc 1 3466 0
 9145 16d8 75AE     		jne	.L907
3469:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
 9146              		.loc 1 3469 0
 9147 16da 0FB7838A 		movzwl	650(%rbx), %eax
 9147      020000
 9148 16e1 8802     		movb	%al, (%rdx)
3470:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
 9149              		.loc 1 3470 0
 9150 16e3 0FB7838C 		movzwl	652(%rbx), %eax
 9150      020000
 9151 16ea 884201   		movb	%al, 1(%rdx)
3471:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9152              		.loc 1 3471 0
 9153 16ed 0FB7838E 		movzwl	654(%rbx), %eax
 9153      020000
 9154 16f4 884202   		movb	%al, 2(%rdx)
 9155 16f7 EBA3     		jmp	.L908
 9156              	.LVL1035:
 9157 16f9 0F1F8000 		.p2align 4,,10
 9157      000000
 9158              		.p2align 3
 9159              	.L1551:
3712:fltk-1.3.4-1/png/pngrtran.c ****                    gamma_table != NULL)
 9160              		.loc 1 3712 0
 9161 1700 4D85E4   		testq	%r12, %r12
 9162 1703 0F95C1   		setne	%cl
 9163              	.LVL1036:
 9164 1706 4D85ED   		testq	%r13, %r13
 9165 1709 0F95C0   		setne	%al
 9166 170c 84C1     		testb	%al, %cl
 9167 170e 0F84C616 		je	.L1177
 9167      0000
 9168 1714 4885F6   		testq	%rsi, %rsi
 9169 1717 0F84BD16 		je	.L1177
 9169      0000
 9170              	.LVL1037:
3716:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9171              		.loc 1 3716 0
 9172 171d 4585DB   		testl	%r11d, %r11d
 9173 1720 0F84AA0B 		je	.L860
 9173      0000
 9174 1726 418D43FF 		leal	-1(%r11), %eax
 9175              	.LBB523:
 9176              	.LBB524:
 9177              	.LBB525:
3740:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0) w = gamma_from_1[w];
 9178              		.loc 1 3740 0
 9179 172a 41B9FF00 		movl	$255, %r9d
 9179      0000
 9180              	.LVL1038:
 9181 1730 4989EF   		movq	%rbp, %r15
 9182 1733 4D8D4486 		leaq	5(%r14,%rax,4), %r8
 9182      05
 9183              	.LVL1039:
 9184 1738 EB30     		jmp	.L952
 9185              	.LVL1040:
 9186 173a 660F1F44 		.p2align 4,,10
 9186      0000
 9187              		.p2align 3
 9188              	.L1586:
 9189              	.LBE525:
 9190              	.LBE524:
3730:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
 9191              		.loc 1 3730 0
 9192 1740 0FB7838A 		movzwl	650(%rbx), %eax
 9192      020000
 9193 1747 8802     		movb	%al, (%rdx)
3731:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
 9194              		.loc 1 3731 0
 9195 1749 0FB7838C 		movzwl	652(%rbx), %eax
 9195      020000
 9196 1750 884201   		movb	%al, 1(%rdx)
3732:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9197              		.loc 1 3732 0
 9198 1753 0FB7838E 		movzwl	654(%rbx), %eax
 9198      020000
 9199 175a 884202   		movb	%al, 2(%rdx)
 9200              	.L947:
 9201              	.LBE523:
3716:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9202              		.loc 1 3716 0
 9203 175d 4883C204 		addq	$4, %rdx
 9204              	.LVL1041:
 9205 1761 4C39C2   		cmpq	%r8, %rdx
 9206 1764 0F84A6F7 		je	.L1510
 9206      FFFF
 9207              	.LVL1042:
 9208              	.L952:
 9209              	.LBB530:
3718:fltk-1.3.4-1/png/pngrtran.c **** 
 9210              		.loc 1 3718 0
 9211 176a 440FB652 		movzbl	3(%rdx), %r10d
 9211      03
 9212              	.LVL1043:
3720:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9213              		.loc 1 3720 0
 9214 176f 4180FAFF 		cmpb	$-1, %r10b
 9215 1773 0F84370C 		je	.L1585
 9215      0000
3727:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9216              		.loc 1 3727 0
 9217 1779 4584D2   		testb	%r10b, %r10b
 9218 177c 74C2     		je	.L1586
 9219              	.LBB529:
3739:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.red);
 9220              		.loc 1 3739 0
 9221 177e 440FB632 		movzbl	(%rdx), %r14d
 9222              	.LVL1044:
 9223              	.LBB526:
3740:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0) w = gamma_from_1[w];
 9224              		.loc 1 3740 0
 9225 1782 410FB6C2 		movzbl	%r10b, %eax
 9226 1786 4489C9   		movl	%r9d, %ecx
 9227 1789 29C1     		subl	%eax, %ecx
 9228 178b 4489D0   		movl	%r10d, %eax
 9229 178e 4189CB   		movl	%ecx, %r11d
 9230 1791 66440FAF 		imulw	660(%rbx), %r11w
 9230      9B940200 
 9230      00
 9231 179a 43F62434 		mulb	(%r12,%r14)
 9232 179e 418D8403 		leal	128(%r11,%rax), %eax
 9232      80000000 
 9233              	.LVL1045:
 9234 17a6 0FB6EC   		movzbl	%ah, %ebp
 9235 17a9 0FB7C0   		movzwl	%ax, %eax
 9236 17ac 01E8     		addl	%ebp, %eax
 9237              	.LVL1046:
 9238 17ae C1E808   		shrl	$8, %eax
 9239              	.LVL1047:
 9240              	.LBE526:
3741:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = w;
 9241              		.loc 1 3741 0
 9242 17b1 85FF     		testl	%edi, %edi
 9243 17b3 7509     		jne	.L949
 9244 17b5 0FB6C0   		movzbl	%al, %eax
 9245              	.LVL1048:
 9246 17b8 410FB644 		movzbl	0(%r13,%rax), %eax
 9246      0500
 9247              	.LVL1049:
 9248              	.L949:
3744:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.green);
 9249              		.loc 1 3744 0
 9250 17be 440FB672 		movzbl	1(%rdx), %r14d
 9250      01
 9251              	.LVL1050:
3742:fltk-1.3.4-1/png/pngrtran.c **** 
 9252              		.loc 1 3742 0
 9253 17c3 8802     		movb	%al, (%rdx)
 9254              	.LVL1051:
 9255              	.LBB527:
3745:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0) w = gamma_from_1[w];
 9256              		.loc 1 3745 0
 9257 17c5 4189CB   		movl	%ecx, %r11d
 9258 17c8 4489D0   		movl	%r10d, %eax
 9259              	.LVL1052:
 9260 17cb 66440FAF 		imulw	662(%rbx), %r11w
 9260      9B960200 
 9260      00
 9261 17d4 43F62434 		mulb	(%r12,%r14)
 9262 17d8 418D8403 		leal	128(%r11,%rax), %eax
 9262      80000000 
 9263              	.LVL1053:
 9264 17e0 0FB6EC   		movzbl	%ah, %ebp
 9265 17e3 0FB7C0   		movzwl	%ax, %eax
 9266 17e6 01E8     		addl	%ebp, %eax
 9267              	.LVL1054:
 9268 17e8 C1E808   		shrl	$8, %eax
 9269              	.LVL1055:
 9270              	.LBE527:
3746:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = w;
 9271              		.loc 1 3746 0
 9272 17eb 85FF     		testl	%edi, %edi
 9273 17ed 7509     		jne	.L950
 9274 17ef 0FB6C0   		movzbl	%al, %eax
 9275              	.LVL1056:
 9276 17f2 410FB644 		movzbl	0(%r13,%rax), %eax
 9276      0500
 9277              	.LVL1057:
 9278              	.L950:
3749:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(w, v, a, png_ptr->background_1.blue);
 9279              		.loc 1 3749 0
 9280 17f8 440FB65A 		movzbl	2(%rdx), %r11d
 9280      02
 9281              	.LVL1058:
3747:fltk-1.3.4-1/png/pngrtran.c **** 
 9282              		.loc 1 3747 0
 9283 17fd 884201   		movb	%al, 1(%rdx)
 9284              	.LVL1059:
 9285              	.LBB528:
3750:fltk-1.3.4-1/png/pngrtran.c ****                         if (optimize == 0) w = gamma_from_1[w];
 9286              		.loc 1 3750 0
 9287 1800 4489D0   		movl	%r10d, %eax
 9288              	.LVL1060:
 9289 1803 660FAF8B 		imulw	664(%rbx), %cx
 9289      98020000 
 9290 180b 43F6241C 		mulb	(%r12,%r11)
 9291 180f 8D840180 		leal	128(%rcx,%rax), %eax
 9291      000000
 9292              	.LVL1061:
 9293 1816 0FB6CC   		movzbl	%ah, %ecx
 9294 1819 0FB7C0   		movzwl	%ax, %eax
 9295 181c 01C8     		addl	%ecx, %eax
 9296              	.LVL1062:
 9297 181e C1E808   		shrl	$8, %eax
 9298              	.LVL1063:
 9299              	.LBE528:
3751:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = w;
 9300              		.loc 1 3751 0
 9301 1821 85FF     		testl	%edi, %edi
 9302 1823 7509     		jne	.L951
 9303 1825 0FB6C0   		movzbl	%al, %eax
 9304              	.LVL1064:
 9305 1828 410FB644 		movzbl	0(%r13,%rax), %eax
 9305      0500
 9306              	.LVL1065:
 9307              	.L951:
3752:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9308              		.loc 1 3752 0
 9309 182e 884202   		movb	%al, 2(%rdx)
 9310 1831 E927FFFF 		jmp	.L947
 9310      FF
 9311              	.LVL1066:
 9312 1836 662E0F1F 		.p2align 4,,10
 9312      84000000 
 9312      0000
 9313              		.p2align 3
 9314              	.L1567:
 9315              	.LBE529:
 9316              	.LBE530:
 9317              	.LBE590:
 9318              	.LBE794:
 9319              	.LBB795:
 9320              	.LBB671:
2753:fltk-1.3.4-1/png/pngrtran.c ****          {
 9321              		.loc 1 2753 0
 9322 1840 A880     		testb	$-128, %al
 9323 1842 0F84770D 		je	.L1123
 9323      0000
 9324              	.LBB661:
2756:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width;
 9325              		.loc 1 2756 0
 9326 1848 4189F2   		movl	%esi, %r10d
 9327 184b 4B8D0452 		leaq	(%r10,%r10,2), %rax
 9328              	.LVL1067:
 9329 184f 4C01C0   		addq	%r8, %rax
 9330              	.LVL1068:
2757:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
 9331              		.loc 1 2757 0
 9332 1852 4901C2   		addq	%rax, %r10
 9333              	.LVL1069:
2758:fltk-1.3.4-1/png/pngrtran.c ****             {
 9334              		.loc 1 2758 0
 9335 1855 83FE01   		cmpl	$1, %esi
 9336 1858 7648     		jbe	.L1124
 9337 185a 448D5EFE 		leal	-2(%rsi), %r11d
 9338              	.LVL1070:
 9339 185e 4C89D7   		movq	%r10, %rdi
 9340 1861 4A8D149D 		leaq	0(,%r11,4), %rdx
 9340      00000000 
 9341 1869 4829D7   		subq	%rdx, %rdi
 9342 186c 4C8D47FC 		leaq	-4(%rdi), %r8
 9343              	.LVL1071:
 9344 1870 4C89D7   		movq	%r10, %rdi
 9345              	.LVL1072:
 9346              		.p2align 4,,10
 9347 1873 0F1F4400 		.p2align 3
 9347      00
 9348              	.L1125:
2760:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 9349              		.loc 1 2760 0
 9350 1878 884FFF   		movb	%cl, -1(%rdi)
 9351              	.LVL1073:
2761:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 9352              		.loc 1 2761 0
 9353 187b 0FB650FF 		movzbl	-1(%rax), %edx
 9354 187f 4883E803 		subq	$3, %rax
 9355              	.LVL1074:
 9356 1883 4883EF04 		subq	$4, %rdi
 9357              	.LVL1075:
 9358 1887 885702   		movb	%dl, 2(%rdi)
 9359              	.LVL1076:
2762:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 9360              		.loc 1 2762 0
 9361 188a 0FB65001 		movzbl	1(%rax), %edx
 9362 188e 885701   		movb	%dl, 1(%rdi)
 9363              	.LVL1077:
2763:fltk-1.3.4-1/png/pngrtran.c ****             }
 9364              		.loc 1 2763 0
 9365 1891 0FB610   		movzbl	(%rax), %edx
2758:fltk-1.3.4-1/png/pngrtran.c ****             {
 9366              		.loc 1 2758 0
 9367 1894 4C39C7   		cmpq	%r8, %rdi
2763:fltk-1.3.4-1/png/pngrtran.c ****             }
 9368              		.loc 1 2763 0
 9369 1897 8817     		movb	%dl, (%rdi)
2758:fltk-1.3.4-1/png/pngrtran.c ****             {
 9370              		.loc 1 2758 0
 9371 1899 75DD     		jne	.L1125
 9372 189b 49F7D3   		notq	%r11
 9373 189e 4F8D149A 		leaq	(%r10,%r11,4), %r10
 9374              	.LVL1078:
 9375              	.L1124:
2765:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 4;
 9376              		.loc 1 2765 0
 9377 18a2 45884AFF 		movb	%r9b, -1(%r10)
 9378              	.LVL1079:
 9379              	.L1128:
 9380              	.LBE661:
 9381              	.LBB662:
2783:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 32;
 9382              		.loc 1 2783 0
 9383 18a6 C6451204 		movb	$4, 18(%rbp)
 9384 18aa E908F1FF 		jmp	.L1516
 9384      FF
 9385              	.LVL1080:
 9386              	.L859:
 9387              	.LBE662:
 9388              	.LBE671:
 9389              	.LBE795:
 9390              	.LBB796:
 9391              	.LBB591:
3401:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9392              		.loc 1 3401 0
 9393 18af 4D85C9   		testq	%r9, %r9
 9394 18b2 0F84AC16 		je	.L1587
 9394      0000
 9395              	.LVL1081:
3404:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9396              		.loc 1 3404 0
 9397 18b8 4585DB   		testl	%r11d, %r11d
 9398 18bb 0F840F0A 		je	.L860
 9398      0000
 9399 18c1 418D43FF 		leal	-1(%r11), %eax
 9400 18c5 4D8D5446 		leaq	3(%r14,%rax,2), %r10
 9400      03
 9401              	.LVL1082:
 9402 18ca EB29     		jmp	.L899
 9403              	.LVL1083:
 9404 18cc 0F1F4000 		.p2align 4,,10
 9405              		.p2align 3
 9406              	.L897:
 9407              	.LBB531:
3421:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)((v >> 8) & 0xff);
 9408              		.loc 1 3421 0
 9409 18d0 D3F8     		sarl	%cl, %eax
 9410              	.LVL1084:
 9411 18d2 4898     		cltq
 9412 18d4 498B04C1 		movq	(%r9,%rax,8), %rax
 9413 18d8 0FB70470 		movzwl	(%rax,%rsi,2), %eax
 9414              	.LVL1085:
3422:fltk-1.3.4-1/png/pngrtran.c ****                            *(sp + 1) = (png_byte)(v & 0xff);
 9415              		.loc 1 3422 0
 9416 18dc 89C6     		movl	%eax, %esi
3423:fltk-1.3.4-1/png/pngrtran.c ****                         }
 9417              		.loc 1 3423 0
 9418 18de 884201   		movb	%al, 1(%rdx)
3422:fltk-1.3.4-1/png/pngrtran.c ****                            *(sp + 1) = (png_byte)(v & 0xff);
 9419              		.loc 1 3422 0
 9420 18e1 66C1EE08 		shrw	$8, %si
 9421 18e5 408832   		movb	%sil, (%rdx)
 9422              	.LVL1086:
 9423              	.L898:
 9424              	.LBE531:
3404:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9425              		.loc 1 3404 0
 9426 18e8 4883C202 		addq	$2, %rdx
 9427              	.LVL1087:
 9428 18ec 4C39D2   		cmpq	%r10, %rdx
 9429 18ef 0F8423F6 		je	.L848
 9429      FFFF
 9430              	.L899:
 9431              	.LBB532:
3408:fltk-1.3.4-1/png/pngrtran.c **** 
 9432              		.loc 1 3408 0
 9433 18f5 0FB632   		movzbl	(%rdx), %esi
 9434 18f8 0FB67A01 		movzbl	1(%rdx), %edi
3410:fltk-1.3.4-1/png/pngrtran.c ****                         {
 9435              		.loc 1 3410 0
 9436 18fc 4189F0   		movl	%esi, %r8d
3408:fltk-1.3.4-1/png/pngrtran.c **** 
 9437              		.loc 1 3408 0
 9438 18ff 89F8     		movl	%edi, %eax
 9439              	.LVL1088:
3410:fltk-1.3.4-1/png/pngrtran.c ****                         {
 9440              		.loc 1 3410 0
 9441 1901 41C1E008 		sall	$8, %r8d
 9442 1905 4401C7   		addl	%r8d, %edi
 9443              	.LVL1089:
 9444 1908 663BBB08 		cmpw	776(%rbx), %di
 9444      030000
 9445 190f 75BF     		jne	.L897
3413:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 9446              		.loc 1 3413 0
 9447 1911 0FB68391 		movzbl	657(%rbx), %eax
 9447      020000
 9448              	.LVL1090:
 9449 1918 8802     		movb	%al, (%rdx)
3415:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 9450              		.loc 1 3415 0
 9451 191a 0FB78390 		movzwl	656(%rbx), %eax
 9451      020000
 9452 1921 884201   		movb	%al, 1(%rdx)
 9453              	.LVL1091:
 9454 1924 EBC2     		jmp	.L898
 9455              	.LVL1092:
 9456              	.L858:
 9457              	.LBE532:
3373:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9458              		.loc 1 3373 0
 9459 1926 4885F6   		testq	%rsi, %rsi
 9460 1929 0F840517 		je	.L1588
 9460      0000
 9461              	.LVL1093:
3376:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9462              		.loc 1 3376 0
 9463 192f 4585DB   		testl	%r11d, %r11d
 9464 1932 0F849809 		je	.L860
 9464      0000
 9465 1938 418D43FF 		leal	-1(%r11), %eax
 9466 193c 498D7C06 		leaq	2(%r14,%rax), %rdi
 9466      02
 9467              	.LVL1094:
 9468 1941 EB18     		jmp	.L892
 9469              	.LVL1095:
 9470              		.p2align 4,,10
 9471 1943 0F1F4400 		.p2align 3
 9471      00
 9472              	.L890:
3382:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9473              		.loc 1 3382 0
 9474 1948 0FB6040E 		movzbl	(%rsi,%rcx), %eax
 9475 194c 8802     		movb	%al, (%rdx)
 9476              	.L891:
 9477              	.LVL1096:
3376:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9478              		.loc 1 3376 0
 9479 194e 4883C201 		addq	$1, %rdx
 9480              	.LVL1097:
 9481 1952 4839FA   		cmpq	%rdi, %rdx
 9482 1955 0F84BDF5 		je	.L848
 9482      FFFF
 9483              	.L892:
 9484              	.LVL1098:
3378:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)png_ptr->background.gray;
 9485              		.loc 1 3378 0
 9486 195b 0FB60A   		movzbl	(%rdx), %ecx
 9487 195e 663B8B08 		cmpw	776(%rbx), %cx
 9487      030000
 9488 1965 75E1     		jne	.L890
3379:fltk-1.3.4-1/png/pngrtran.c **** 
 9489              		.loc 1 3379 0
 9490 1967 0FB78390 		movzwl	656(%rbx), %eax
 9490      020000
 9491 196e 8802     		movb	%al, (%rdx)
 9492 1970 EBDC     		jmp	.L891
 9493              	.LVL1099:
 9494              	.L857:
3307:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9495              		.loc 1 3307 0
 9496 1972 4885F6   		testq	%rsi, %rsi
 9497 1975 0F843E16 		je	.L1589
 9497      0000
 9498              	.LVL1100:
3311:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9499              		.loc 1 3311 0
 9500 197b 4585DB   		testl	%r11d, %r11d
 9501 197e 0F844C09 		je	.L860
 9501      0000
 9502 1984 4531C9   		xorl	%r9d, %r9d
 9503              	.LVL1101:
 9504 1987 41B80400 		movl	$4, %r8d
 9504      0000
 9505              	.LVL1102:
 9506              	.LBB533:
3326:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
 9507              		.loc 1 3326 0
 9508 198d 41BC0400 		movl	$4, %r12d
 9508      0000
 9509              	.LVL1103:
 9510 1993 41BA0F0F 		movl	$3855, %r10d
 9510      0000
 9511              	.LVL1104:
 9512 1999 EB1C     		jmp	.L883
 9513              	.LVL1105:
 9514 199b 0F1F4400 		.p2align 4,,10
 9514      00
 9515              		.p2align 3
 9516              	.L1591:
 9517              	.LBE533:
3334:fltk-1.3.4-1/png/pngrtran.c ****                         }
 9518              		.loc 1 3334 0
 9519 19a0 4883C201 		addq	$1, %rdx
 9520              	.LVL1106:
3333:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
 9521              		.loc 1 3333 0
 9522 19a4 41B80400 		movl	$4, %r8d
 9522      0000
 9523              	.LVL1107:
 9524              	.L882:
3311:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9525              		.loc 1 3311 0
 9526 19aa 4183C101 		addl	$1, %r9d
 9527              	.LVL1108:
 9528 19ae 4539CB   		cmpl	%r9d, %r11d
 9529 19b1 0F8461F5 		je	.L848
 9529      FFFF
 9530              	.LVL1109:
 9531              	.L883:
3313:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
 9532              		.loc 1 3313 0
 9533 19b7 440FB62A 		movzbl	(%rdx), %r13d
 9534 19bb 4489C1   		movl	%r8d, %ecx
 9535 19be 4489E8   		movl	%r13d, %eax
 9536 19c1 D3F8     		sarl	%cl, %eax
 9537 19c3 0FB78B08 		movzwl	776(%rbx), %ecx
 9537      030000
 9538 19ca 83E00F   		andl	$15, %eax
 9539 19cd 39C8     		cmpl	%ecx, %eax
 9540              	.LBB534:
3316:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 9541              		.loc 1 3316 0
 9542 19cf 4489E1   		movl	%r12d, %ecx
 9543              	.LBE534:
3313:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
 9544              		.loc 1 3313 0
 9545 19d2 0F84B005 		je	.L1590
 9545      0000
 9546              	.LVL1110:
 9547              	.LBB535:
3326:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
 9548              		.loc 1 3326 0
 9549 19d8 4429C1   		subl	%r8d, %ecx
 9550 19db 4489D7   		movl	%r10d, %edi
 9551 19de D3FF     		sarl	%cl, %edi
3324:fltk-1.3.4-1/png/pngrtran.c ****                               0x0f;
 9552              		.loc 1 3324 0
 9553 19e0 89C1     		movl	%eax, %ecx
 9554 19e2 C1E104   		sall	$4, %ecx
3326:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
 9555              		.loc 1 3326 0
 9556 19e5 4421EF   		andl	%r13d, %edi
 9557              	.LVL1111:
3324:fltk-1.3.4-1/png/pngrtran.c ****                               0x0f;
 9558              		.loc 1 3324 0
 9559 19e8 09C8     		orl	%ecx, %eax
 9560              	.LVL1112:
3328:fltk-1.3.4-1/png/pngrtran.c ****                         }
 9561              		.loc 1 3328 0
 9562 19ea 4489C1   		movl	%r8d, %ecx
 9563 19ed 0FB60406 		movzbl	(%rsi,%rax), %eax
 9564 19f1 C0E804   		shrb	$4, %al
 9565 19f4 0FB6C0   		movzbl	%al, %eax
 9566 19f7 D3E0     		sall	%cl, %eax
 9567 19f9 09F8     		orl	%edi, %eax
 9568 19fb 8802     		movb	%al, (%rdx)
 9569              	.LVL1113:
 9570              	.L880:
 9571              	.LBE535:
3331:fltk-1.3.4-1/png/pngrtran.c ****                         {
 9572              		.loc 1 3331 0
 9573 19fd 4585C0   		testl	%r8d, %r8d
 9574 1a00 749E     		je	.L1591
3338:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9575              		.loc 1 3338 0
 9576 1a02 4183E804 		subl	$4, %r8d
 9577              	.LVL1114:
 9578 1a06 EBA2     		jmp	.L882
 9579              	.LVL1115:
 9580              	.L856:
3241:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9581              		.loc 1 3241 0
 9582 1a08 4885F6   		testq	%rsi, %rsi
 9583 1a0b 0F84E014 		je	.L1592
 9583      0000
 9584              	.LVL1116:
3245:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9585              		.loc 1 3245 0
 9586 1a11 4585DB   		testl	%r11d, %r11d
 9587 1a14 0F84B608 		je	.L860
 9587      0000
 9588 1a1a 4531C9   		xorl	%r9d, %r9d
 9589              	.LVL1117:
 9590 1a1d 41B80600 		movl	$6, %r8d
 9590      0000
 9591              	.LVL1118:
 9592              	.LBB536:
3260:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
 9593              		.loc 1 3260 0
 9594 1a23 41BC0600 		movl	$6, %r12d
 9594      0000
 9595              	.LVL1119:
 9596 1a29 41BA3F3F 		movl	$16191, %r10d
 9596      0000
 9597              	.LVL1120:
 9598 1a2f EB1E     		jmp	.L871
 9599              	.LVL1121:
 9600              		.p2align 4,,10
 9601 1a31 0F1F8000 		.p2align 3
 9601      000000
 9602              	.L1594:
 9603              	.LBE536:
3268:fltk-1.3.4-1/png/pngrtran.c ****                         }
 9604              		.loc 1 3268 0
 9605 1a38 4883C201 		addq	$1, %rdx
 9606              	.LVL1122:
3267:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
 9607              		.loc 1 3267 0
 9608 1a3c 41B80600 		movl	$6, %r8d
 9608      0000
 9609              	.LVL1123:
 9610              	.L870:
3245:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9611              		.loc 1 3245 0
 9612 1a42 4183C101 		addl	$1, %r9d
 9613              	.LVL1124:
 9614 1a46 4539CB   		cmpl	%r9d, %r11d
 9615 1a49 0F84C9F4 		je	.L848
 9615      FFFF
 9616              	.LVL1125:
 9617              	.L871:
3247:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
 9618              		.loc 1 3247 0
 9619 1a4f 440FB62A 		movzbl	(%rdx), %r13d
 9620 1a53 4489C1   		movl	%r8d, %ecx
 9621 1a56 4489E8   		movl	%r13d, %eax
 9622 1a59 D3F8     		sarl	%cl, %eax
 9623 1a5b 0FB78B08 		movzwl	776(%rbx), %ecx
 9623      030000
 9624 1a62 83E003   		andl	$3, %eax
 9625 1a65 39C8     		cmpl	%ecx, %eax
 9626              	.LBB537:
3250:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 9627              		.loc 1 3250 0
 9628 1a67 4489E1   		movl	%r12d, %ecx
 9629              	.LBE537:
3247:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
 9630              		.loc 1 3247 0
 9631 1a6a 0F844005 		je	.L1593
 9631      0000
 9632              	.LVL1126:
 9633              	.LBB538:
3260:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
 9634              		.loc 1 3260 0
 9635 1a70 4429C1   		subl	%r8d, %ecx
 9636 1a73 4489D7   		movl	%r10d, %edi
 9637 1a76 D3FF     		sarl	%cl, %edi
3258:fltk-1.3.4-1/png/pngrtran.c ****                                (p << 4) | (p << 6)] >> 6) & 0x03;
 9638              		.loc 1 3258 0
 9639 1a78 89C1     		movl	%eax, %ecx
3260:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= g << shift;
 9640              		.loc 1 3260 0
 9641 1a7a 4421EF   		andl	%r13d, %edi
 9642              	.LVL1127:
3258:fltk-1.3.4-1/png/pngrtran.c ****                                (p << 4) | (p << 6)] >> 6) & 0x03;
 9643              		.loc 1 3258 0
 9644 1a7d 448D2C85 		leal	0(,%rax,4), %r13d
 9644      00000000 
 9645 1a85 C1E104   		sall	$4, %ecx
 9646 1a88 4409E9   		orl	%r13d, %ecx
 9647 1a8b 09C1     		orl	%eax, %ecx
 9648 1a8d C1E006   		sall	$6, %eax
 9649              	.LVL1128:
 9650 1a90 09C8     		orl	%ecx, %eax
3262:fltk-1.3.4-1/png/pngrtran.c ****                         }
 9651              		.loc 1 3262 0
 9652 1a92 4489C1   		movl	%r8d, %ecx
 9653 1a95 0FB60406 		movzbl	(%rsi,%rax), %eax
 9654 1a99 C0E806   		shrb	$6, %al
 9655 1a9c 0FB6C0   		movzbl	%al, %eax
 9656 1a9f D3E0     		sall	%cl, %eax
 9657 1aa1 09F8     		orl	%edi, %eax
 9658 1aa3 8802     		movb	%al, (%rdx)
 9659              	.LVL1129:
 9660              	.L868:
 9661              	.LBE538:
3265:fltk-1.3.4-1/png/pngrtran.c ****                         {
 9662              		.loc 1 3265 0
 9663 1aa5 4585C0   		testl	%r8d, %r8d
 9664 1aa8 748E     		je	.L1594
3272:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9665              		.loc 1 3272 0
 9666 1aaa 4183E802 		subl	$2, %r8d
 9667              	.LVL1130:
 9668 1aae EB92     		jmp	.L870
 9669              	.LVL1131:
 9670              	.L854:
3216:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9671              		.loc 1 3216 0
 9672 1ab0 4585DB   		testl	%r11d, %r11d
 9673 1ab3 0F841708 		je	.L860
 9673      0000
 9674 1ab9 4531C0   		xorl	%r8d, %r8d
 9675              	.LVL1132:
 9676 1abc BF070000 		movl	$7, %edi
 9676      00
 9677              	.LVL1133:
 9678              	.LBB539:
3221:fltk-1.3.4-1/png/pngrtran.c ****                         tmp |= png_ptr->background.gray << shift;
 9679              		.loc 1 3221 0
 9680 1ac1 41BA0700 		movl	$7, %r10d
 9680      0000
 9681              	.LVL1134:
 9682 1ac7 41B97F7F 		movl	$32639, %r9d
 9682      0000
 9683              	.LVL1135:
 9684 1acd EB17     		jmp	.L864
 9685              	.LVL1136:
 9686 1acf 90       		.p2align 4,,10
 9687              		.p2align 3
 9688              	.L1596:
 9689              	.LBE539:
3229:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9690              		.loc 1 3229 0
 9691 1ad0 4883C201 		addq	$1, %rdx
 9692              	.LVL1137:
3228:fltk-1.3.4-1/png/pngrtran.c ****                         sp++;
 9693              		.loc 1 3228 0
 9694 1ad4 BF070000 		movl	$7, %edi
 9694      00
 9695              	.LVL1138:
 9696              	.L863:
3216:fltk-1.3.4-1/png/pngrtran.c ****                   {
 9697              		.loc 1 3216 0
 9698 1ad9 4183C001 		addl	$1, %r8d
 9699              	.LVL1139:
 9700 1add 4539C3   		cmpl	%r8d, %r11d
 9701 1ae0 0F8432F4 		je	.L848
 9701      FFFF
 9702              	.LVL1140:
 9703              	.L864:
3218:fltk-1.3.4-1/png/pngrtran.c ****                         == png_ptr->trans_color.gray)
 9704              		.loc 1 3218 0
 9705 1ae6 0FB632   		movzbl	(%rdx), %esi
 9706 1ae9 89F9     		movl	%edi, %ecx
 9707 1aeb 89F0     		movl	%esi, %eax
 9708 1aed D3F8     		sarl	%cl, %eax
 9709 1aef 0FB78B08 		movzwl	776(%rbx), %ecx
 9709      030000
 9710 1af6 83E001   		andl	$1, %eax
 9711 1af9 39C8     		cmpl	%ecx, %eax
 9712 1afb 0F845F04 		je	.L1595
 9712      0000
 9713              	.L861:
3226:fltk-1.3.4-1/png/pngrtran.c ****                      {
 9714              		.loc 1 3226 0
 9715 1b01 85FF     		testl	%edi, %edi
 9716 1b03 74CB     		je	.L1596
3233:fltk-1.3.4-1/png/pngrtran.c ****                   }
 9717              		.loc 1 3233 0
 9718 1b05 83EF01   		subl	$1, %edi
 9719              	.LVL1141:
 9720 1b08 EBCF     		jmp	.L863
 9721              	.LVL1142:
 9722 1b0a 660F1F44 		.p2align 4,,10
 9722      0000
 9723              		.p2align 3
 9724              	.L1576:
 9725              	.LBB540:
 9726              	.LBB512:
3648:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 9727              		.loc 1 3648 0
 9728 1b10 0FB64201 		movzbl	1(%rdx), %eax
 9729              	.LVL1143:
 9730 1b14 0FB632   		movzbl	(%rdx), %esi
 9731 1b17 D3F8     		sarl	%cl, %eax
 9732 1b19 4898     		cltq
 9733 1b1b 498B04C1 		movq	(%r9,%rax,8), %rax
 9734 1b1f 0FB70470 		movzwl	(%rax,%rsi,2), %eax
 9735              	.LVL1144:
3649:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 9736              		.loc 1 3649 0
 9737 1b23 89C6     		movl	%eax, %esi
3650:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9738              		.loc 1 3650 0
 9739 1b25 884201   		movb	%al, 1(%rdx)
3649:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 9740              		.loc 1 3649 0
 9741 1b28 66C1EE08 		shrw	$8, %si
 9742 1b2c 408832   		movb	%sil, (%rdx)
 9743 1b2f E967F7FF 		jmp	.L935
 9743      FF
 9744              	.LVL1145:
 9745              		.p2align 4,,10
 9746 1b34 0F1F4000 		.p2align 3
 9747              	.L1552:
 9748              	.LBE512:
 9749              	.LBE540:
 9750              	.LBB541:
 9751              	.LBB503:
3800:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 9752              		.loc 1 3800 0
 9753 1b38 0FB64201 		movzbl	1(%rdx), %eax
 9754              	.LVL1146:
 9755 1b3c 0FB632   		movzbl	(%rdx), %esi
 9756 1b3f D3F8     		sarl	%cl, %eax
 9757 1b41 4898     		cltq
 9758 1b43 498B04C1 		movq	(%r9,%rax,8), %rax
 9759 1b47 0FB70470 		movzwl	(%rax,%rsi,2), %eax
 9760              	.LVL1147:
3802:fltk-1.3.4-1/png/pngrtran.c **** 
 9761              		.loc 1 3802 0
 9762 1b4b 884201   		movb	%al, 1(%rdx)
3801:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 9763              		.loc 1 3801 0
 9764 1b4e 89C6     		movl	%eax, %esi
3804:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
 9765              		.loc 1 3804 0
 9766 1b50 0FB64203 		movzbl	3(%rdx), %eax
 9767              	.LVL1148:
3801:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 9768              		.loc 1 3801 0
 9769 1b54 66C1EE08 		shrw	$8, %si
 9770              	.LVL1149:
 9771 1b58 408832   		movb	%sil, (%rdx)
3804:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
 9772              		.loc 1 3804 0
 9773 1b5b 0FB67202 		movzbl	2(%rdx), %esi
 9774 1b5f D3F8     		sarl	%cl, %eax
 9775 1b61 4898     		cltq
 9776 1b63 498B04C1 		movq	(%r9,%rax,8), %rax
 9777 1b67 0FB70470 		movzwl	(%rax,%rsi,2), %eax
 9778              	.LVL1150:
3806:fltk-1.3.4-1/png/pngrtran.c **** 
 9779              		.loc 1 3806 0
 9780 1b6b 884203   		movb	%al, 3(%rdx)
3805:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
 9781              		.loc 1 3805 0
 9782 1b6e 89C6     		movl	%eax, %esi
3808:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 9783              		.loc 1 3808 0
 9784 1b70 0FB64205 		movzbl	5(%rdx), %eax
 9785              	.LVL1151:
3805:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
 9786              		.loc 1 3805 0
 9787 1b74 66C1EE08 		shrw	$8, %si
 9788              	.LVL1152:
 9789 1b78 40887202 		movb	%sil, 2(%rdx)
3808:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 9790              		.loc 1 3808 0
 9791 1b7c 0FB67204 		movzbl	4(%rdx), %esi
 9792 1b80 D3F8     		sarl	%cl, %eax
 9793 1b82 4898     		cltq
 9794 1b84 498B04C1 		movq	(%r9,%rax,8), %rax
 9795 1b88 0FB70470 		movzwl	(%rax,%rsi,2), %eax
 9796              	.LVL1153:
3809:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
 9797              		.loc 1 3809 0
 9798 1b8c 89C6     		movl	%eax, %esi
3810:fltk-1.3.4-1/png/pngrtran.c ****                      }
 9799              		.loc 1 3810 0
 9800 1b8e 884205   		movb	%al, 5(%rdx)
3809:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
 9801              		.loc 1 3809 0
 9802 1b91 66C1EE08 		shrw	$8, %si
 9803 1b95 40887204 		movb	%sil, 4(%rdx)
 9804 1b99 E90DE9FF 		jmp	.L960
 9804      FF
 9805              	.LVL1154:
 9806 1b9e 6690     		.p2align 4,,10
 9807              		.p2align 3
 9808              	.L1557:
 9809              	.LBE503:
 9810              	.LBE541:
 9811              	.LBE591:
 9812              	.LBE796:
 9813              	.LBB797:
 9814              	.LBB652:
 9815              	.LBB650:
 9816              	.LBB646:
2149:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
 9817              		.loc 1 2149 0
 9818 1ba0 8D46FF   		leal	-1(%rsi), %eax
2150:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = 7 - (int)((row_width + 7) & 0x07);
 9819              		.loc 1 2150 0
 9820 1ba3 89F1     		movl	%esi, %ecx
2149:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
 9821              		.loc 1 2149 0
 9822 1ba5 89C7     		movl	%eax, %edi
 9823 1ba7 48F7D0   		notq	%rax
 9824 1baa C1EF03   		shrl	$3, %edi
 9825 1bad 4801D7   		addq	%rdx, %rdi
 9826              	.LVL1155:
2150:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = 7 - (int)((row_width + 7) & 0x07);
 9827              		.loc 1 2150 0
 9828 1bb0 488D540A 		leaq	-1(%rdx,%rcx), %rdx
 9828      FF
 9829              	.LVL1156:
2151:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 9830              		.loc 1 2151 0
 9831 1bb5 8D4E07   		leal	7(%rsi), %ecx
 9832 1bb8 F7D1     		notl	%ecx
 9833 1bba 4C8D0402 		leaq	(%rdx,%rax), %r8
 9834 1bbe 83E107   		andl	$7, %ecx
 9835              	.LVL1157:
2152:fltk-1.3.4-1/png/pngrtran.c ****             {
 9836              		.loc 1 2152 0
 9837 1bc1 85F6     		testl	%esi, %esi
 9838 1bc3 751B     		jne	.L1335
 9839 1bc5 E98EECFF 		jmp	.L1086
 9839      FF
 9840              	.LVL1158:
 9841 1bca 660F1F44 		.p2align 4,,10
 9841      0000
 9842              		.p2align 3
 9843              	.L1091:
2163:fltk-1.3.4-1/png/pngrtran.c **** 
 9844              		.loc 1 2163 0
 9845 1bd0 83C101   		addl	$1, %ecx
 9846              	.LVL1159:
 9847              	.L1092:
2165:fltk-1.3.4-1/png/pngrtran.c ****             }
 9848              		.loc 1 2165 0
 9849 1bd3 4883EA01 		subq	$1, %rdx
 9850              	.LVL1160:
2152:fltk-1.3.4-1/png/pngrtran.c ****             {
 9851              		.loc 1 2152 0
 9852 1bd7 4C39C2   		cmpq	%r8, %rdx
 9853 1bda 0F8478EC 		je	.L1086
 9853      FFFF
 9854              	.LVL1161:
 9855              	.L1335:
2154:fltk-1.3.4-1/png/pngrtran.c **** 
 9856              		.loc 1 2154 0
 9857 1be0 0FB607   		movzbl	(%rdi), %eax
 9858 1be3 D3F8     		sarl	%cl, %eax
 9859 1be5 83E001   		andl	$1, %eax
2156:fltk-1.3.4-1/png/pngrtran.c ****                {
 9860              		.loc 1 2156 0
 9861 1be8 83F907   		cmpl	$7, %ecx
2154:fltk-1.3.4-1/png/pngrtran.c **** 
 9862              		.loc 1 2154 0
 9863 1beb 8802     		movb	%al, (%rdx)
2156:fltk-1.3.4-1/png/pngrtran.c ****                {
 9864              		.loc 1 2156 0
 9865 1bed 75E1     		jne	.L1091
 9866              	.LVL1162:
2159:fltk-1.3.4-1/png/pngrtran.c ****                }
 9867              		.loc 1 2159 0
 9868 1bef 4883EF01 		subq	$1, %rdi
 9869              	.LVL1163:
2158:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
 9870              		.loc 1 2158 0
 9871 1bf3 31C9     		xorl	%ecx, %ecx
 9872 1bf5 EBDC     		jmp	.L1092
 9873              	.LVL1164:
 9874 1bf7 660F1F84 		.p2align 4,,10
 9874      00000000 
 9874      00
 9875              		.p2align 3
 9876              	.L1088:
 9877              	.LBE646:
 9878              	.LBB647:
2196:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
 9879              		.loc 1 2196 0
 9880 1c00 8D46FF   		leal	-1(%rsi), %eax
2197:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = (int)((1 - ((row_width + 1) & 0x01)) << 2);
 9881              		.loc 1 2197 0
 9882 1c03 89F1     		movl	%esi, %ecx
2196:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
 9883              		.loc 1 2196 0
 9884 1c05 89C7     		movl	%eax, %edi
 9885 1c07 D1EF     		shrl	%edi
 9886 1c09 4801D7   		addq	%rdx, %rdi
 9887              	.LVL1165:
2197:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = (int)((1 - ((row_width + 1) & 0x01)) << 2);
 9888              		.loc 1 2197 0
 9889 1c0c 488D540A 		leaq	-1(%rdx,%rcx), %rdx
 9889      FF
 9890              	.LVL1166:
2198:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 9891              		.loc 1 2198 0
 9892 1c11 8D4E01   		leal	1(%rsi), %ecx
 9893 1c14 83E101   		andl	$1, %ecx
 9894 1c17 83F901   		cmpl	$1, %ecx
 9895 1c1a 19C9     		sbbl	%ecx, %ecx
 9896 1c1c 83E104   		andl	$4, %ecx
 9897              	.LVL1167:
2199:fltk-1.3.4-1/png/pngrtran.c ****             {
 9898              		.loc 1 2199 0
 9899 1c1f 85F6     		testl	%esi, %esi
 9900 1c21 0F8431EC 		je	.L1086
 9900      FFFF
 9901 1c27 48F7D0   		notq	%rax
 9902 1c2a 4C8D0402 		leaq	(%rdx,%rax), %r8
 9903 1c2e EB12     		jmp	.L1100
 9904              	.LVL1168:
 9905              		.p2align 4,,10
 9906              		.p2align 3
 9907              	.L1170:
2210:fltk-1.3.4-1/png/pngrtran.c **** 
 9908              		.loc 1 2210 0
 9909 1c30 B9040000 		movl	$4, %ecx
 9909      00
 9910              	.LVL1169:
 9911              	.L1099:
2212:fltk-1.3.4-1/png/pngrtran.c ****             }
 9912              		.loc 1 2212 0
 9913 1c35 4883EA01 		subq	$1, %rdx
 9914              	.LVL1170:
2199:fltk-1.3.4-1/png/pngrtran.c ****             {
 9915              		.loc 1 2199 0
 9916 1c39 4C39C2   		cmpq	%r8, %rdx
 9917 1c3c 0F8416EC 		je	.L1086
 9917      FFFF
 9918              	.LVL1171:
 9919              	.L1100:
2201:fltk-1.3.4-1/png/pngrtran.c **** 
 9920              		.loc 1 2201 0
 9921 1c42 0FB607   		movzbl	(%rdi), %eax
 9922 1c45 D3F8     		sarl	%cl, %eax
 9923 1c47 83E00F   		andl	$15, %eax
2203:fltk-1.3.4-1/png/pngrtran.c ****                {
 9924              		.loc 1 2203 0
 9925 1c4a 83F904   		cmpl	$4, %ecx
2201:fltk-1.3.4-1/png/pngrtran.c **** 
 9926              		.loc 1 2201 0
 9927 1c4d 8802     		movb	%al, (%rdx)
2203:fltk-1.3.4-1/png/pngrtran.c ****                {
 9928              		.loc 1 2203 0
 9929 1c4f 75DF     		jne	.L1170
 9930              	.LVL1172:
2206:fltk-1.3.4-1/png/pngrtran.c ****                }
 9931              		.loc 1 2206 0
 9932 1c51 4883EF01 		subq	$1, %rdi
 9933              	.LVL1173:
2205:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
 9934              		.loc 1 2205 0
 9935 1c55 31C9     		xorl	%ecx, %ecx
 9936 1c57 EBDC     		jmp	.L1099
 9937              	.LVL1174:
 9938 1c59 0F1F8000 		.p2align 4,,10
 9938      000000
 9939              		.p2align 3
 9940              	.L1087:
 9941              	.LBE647:
 9942              	.LBB648:
2173:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
 9943              		.loc 1 2173 0
 9944 1c60 8D46FF   		leal	-1(%rsi), %eax
2174:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
 9945              		.loc 1 2174 0
 9946 1c63 89F1     		movl	%esi, %ecx
2173:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = row + (png_size_t)row_width - 1;
 9947              		.loc 1 2173 0
 9948 1c65 89C7     		movl	%eax, %edi
 9949 1c67 C1EF02   		shrl	$2, %edi
 9950 1c6a 4801D7   		addq	%rdx, %rdi
 9951              	.LVL1175:
2174:fltk-1.3.4-1/png/pngrtran.c ****             png_uint_32 shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
 9952              		.loc 1 2174 0
 9953 1c6d 488D540A 		leaq	-1(%rdx,%rcx), %rdx
 9953      FF
 9954              	.LVL1176:
2175:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 9955              		.loc 1 2175 0
 9956 1c72 8D4E03   		leal	3(%rsi), %ecx
 9957 1c75 F7D1     		notl	%ecx
 9958 1c77 83E103   		andl	$3, %ecx
 9959 1c7a 01C9     		addl	%ecx, %ecx
 9960              	.LVL1177:
2176:fltk-1.3.4-1/png/pngrtran.c ****             {
 9961              		.loc 1 2176 0
 9962 1c7c 85F6     		testl	%esi, %esi
 9963 1c7e 0F84D4EB 		je	.L1086
 9963      FFFF
 9964 1c84 48F7D0   		notq	%rax
 9965 1c87 4C8D0402 		leaq	(%rdx,%rax), %r8
 9966 1c8b EB13     		jmp	.L1097
 9967              	.LVL1178:
 9968 1c8d 0F1F00   		.p2align 4,,10
 9969              		.p2align 3
 9970              	.L1095:
2187:fltk-1.3.4-1/png/pngrtran.c **** 
 9971              		.loc 1 2187 0
 9972 1c90 83C102   		addl	$2, %ecx
 9973              	.LVL1179:
 9974              	.L1096:
2189:fltk-1.3.4-1/png/pngrtran.c ****             }
 9975              		.loc 1 2189 0
 9976 1c93 4883EA01 		subq	$1, %rdx
 9977              	.LVL1180:
2176:fltk-1.3.4-1/png/pngrtran.c ****             {
 9978              		.loc 1 2176 0
 9979 1c97 4C39C2   		cmpq	%r8, %rdx
 9980 1c9a 0F84B8EB 		je	.L1086
 9980      FFFF
 9981              	.LVL1181:
 9982              	.L1097:
2178:fltk-1.3.4-1/png/pngrtran.c **** 
 9983              		.loc 1 2178 0
 9984 1ca0 0FB607   		movzbl	(%rdi), %eax
 9985 1ca3 D3F8     		sarl	%cl, %eax
 9986 1ca5 83E003   		andl	$3, %eax
2180:fltk-1.3.4-1/png/pngrtran.c ****                {
 9987              		.loc 1 2180 0
 9988 1ca8 83F906   		cmpl	$6, %ecx
2178:fltk-1.3.4-1/png/pngrtran.c **** 
 9989              		.loc 1 2178 0
 9990 1cab 8802     		movb	%al, (%rdx)
2180:fltk-1.3.4-1/png/pngrtran.c ****                {
 9991              		.loc 1 2180 0
 9992 1cad 75E1     		jne	.L1095
 9993              	.LVL1182:
2183:fltk-1.3.4-1/png/pngrtran.c ****                }
 9994              		.loc 1 2183 0
 9995 1caf 4883EF01 		subq	$1, %rdi
 9996              	.LVL1183:
2182:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
 9997              		.loc 1 2182 0
 9998 1cb3 31C9     		xorl	%ecx, %ecx
 9999 1cb5 EBDC     		jmp	.L1096
 10000              	.LVL1184:
 10001 1cb7 660F1F84 		.p2align 4,,10
 10001      00000000 
 10001      00
 10002              		.p2align 3
 10003              	.L1559:
 10004              	.LBE648:
 10005              	.LBE650:
 10006              	.LBE652:
 10007              	.LBE797:
4883:fltk-1.3.4-1/png/pngrtran.c ****           png_ptr->palette_lookup, png_ptr->quantize_index);
 10008              		.loc 1 4883 0
 10009 1cc0 488B8328 		movq	552(%rbx), %rax
 10009      020000
4884:fltk-1.3.4-1/png/pngrtran.c **** 
 10010              		.loc 1 4884 0
 10011 1cc7 488B9390 		movq	912(%rbx), %rdx
 10011      030000
 10012 1cce 488BBB88 		movq	904(%rbx), %rdi
 10012      030000
4883:fltk-1.3.4-1/png/pngrtran.c ****           png_ptr->palette_lookup, png_ptr->quantize_index);
 10013              		.loc 1 4883 0
 10014 1cd5 488D4801 		leaq	1(%rax), %rcx
 10015              	.LVL1185:
 10016 1cd9 E9DFF1FF 		jmp	.L1151
 10016      FF
 10017              	.LVL1186:
 10018 1cde 6690     		.p2align 4,,10
 10019              		.p2align 3
 10020              	.L1558:
 10021              	.LBB798:
 10022              	.LBB672:
2676:fltk-1.3.4-1/png/pngrtran.c ****          {
 10023              		.loc 1 2676 0
 10024 1ce0 A880     		testb	$-128, %al
 10025 1ce2 0F840806 		je	.L1109
 10025      0000
 10026              	.LBB663:
2679:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp =  sp + (png_size_t)row_width;
 10027              		.loc 1 2679 0
 10028 1ce8 4189F2   		movl	%esi, %r10d
 10029 1ceb 4B8D0410 		leaq	(%r8,%r10), %rax
 10030              	.LVL1187:
2680:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 1; i < row_width; i++)
 10031              		.loc 1 2680 0
 10032 1cef 4901C2   		addq	%rax, %r10
 10033              	.LVL1188:
2681:fltk-1.3.4-1/png/pngrtran.c ****             {
 10034              		.loc 1 2681 0
 10035 1cf2 83FE01   		cmpl	$1, %esi
 10036 1cf5 7636     		jbe	.L1110
 10037 1cf7 448D5EFE 		leal	-2(%rsi), %r11d
 10038              	.LVL1189:
 10039 1cfb 4C89D2   		movq	%r10, %rdx
 10040 1cfe 4D89D8   		movq	%r11, %r8
 10041              	.LVL1190:
 10042 1d01 49F7D0   		notq	%r8
 10043 1d04 4901C0   		addq	%rax, %r8
 10044              	.LVL1191:
 10045 1d07 660F1F84 		.p2align 4,,10
 10045      00000000 
 10045      00
 10046              		.p2align 3
 10047              	.L1111:
2684:fltk-1.3.4-1/png/pngrtran.c ****             }
 10048              		.loc 1 2684 0
 10049 1d10 4883E801 		subq	$1, %rax
 10050              	.LVL1192:
2683:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 10051              		.loc 1 2683 0
 10052 1d14 884AFF   		movb	%cl, -1(%rdx)
 10053 1d17 4883EA02 		subq	$2, %rdx
 10054              	.LVL1193:
2684:fltk-1.3.4-1/png/pngrtran.c ****             }
 10055              		.loc 1 2684 0
 10056 1d1b 0FB638   		movzbl	(%rax), %edi
2681:fltk-1.3.4-1/png/pngrtran.c ****             {
 10057              		.loc 1 2681 0
 10058 1d1e 4C39C0   		cmpq	%r8, %rax
2684:fltk-1.3.4-1/png/pngrtran.c ****             }
 10059              		.loc 1 2684 0
 10060 1d21 40883A   		movb	%dil, (%rdx)
2681:fltk-1.3.4-1/png/pngrtran.c ****             {
 10061              		.loc 1 2681 0
 10062 1d24 75EA     		jne	.L1111
 10063 1d26 49F7D3   		notq	%r11
 10064 1d29 4F8D145A 		leaq	(%r10,%r11,2), %r10
 10065              	.LVL1194:
 10066              	.L1110:
2686:fltk-1.3.4-1/png/pngrtran.c ****             row_info->channels = 2;
 10067              		.loc 1 2686 0
 10068 1d2d 45884AFF 		movb	%r9b, -1(%r10)
 10069              	.LVL1195:
 10070              	.L1114:
 10071              	.LBE663:
 10072              	.LBB664:
2704:fltk-1.3.4-1/png/pngrtran.c ****          }
 10073              		.loc 1 2704 0
 10074 1d31 8D0436   		leal	(%rsi,%rsi), %eax
2702:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 16;
 10075              		.loc 1 2702 0
 10076 1d34 C6451202 		movb	$2, 18(%rbp)
2703:fltk-1.3.4-1/png/pngrtran.c ****             row_info->rowbytes = row_width * 2;
 10077              		.loc 1 2703 0
 10078 1d38 C6451310 		movb	$16, 19(%rbp)
2704:fltk-1.3.4-1/png/pngrtran.c ****          }
 10079              		.loc 1 2704 0
 10080 1d3c 48894508 		movq	%rax, 8(%rbp)
 10081 1d40 8B933401 		movl	308(%rbx), %edx
 10081      0000
 10082 1d46 E929E4FF 		jmp	.L1106
 10082      FF
 10083              	.LVL1196:
 10084 1d4b 0F1F4400 		.p2align 4,,10
 10084      00
 10085              		.p2align 3
 10086              	.L1556:
 10087              	.LBE664:
 10088              	.LBE672:
 10089              	.LBE798:
 10090              	.LBB799:
 10091              	.LBB639:
 10092              	.LBB632:
2286:fltk-1.3.4-1/png/pngrtran.c ****       {
 10093              		.loc 1 2286 0
 10094 1d50 4180FA02 		cmpb	$2, %r10b
 10095 1d54 0F85BEEA 		jne	.L1068
 10095      FFFF
 10096              	.LVL1197:
 10097              	.LBB623:
2298:fltk-1.3.4-1/png/pngrtran.c **** 
 10098              		.loc 1 2298 0
 10099 1d5a 4889D1   		movq	%rdx, %rcx
 10100 1d5d 48034D08 		addq	8(%rbp), %rcx
 10101              	.LVL1198:
2300:fltk-1.3.4-1/png/pngrtran.c ****             {
 10102              		.loc 1 2300 0
 10103 1d61 4839D1   		cmpq	%rdx, %rcx
 10104 1d64 0F86AEEA 		jbe	.L1068
 10104      FFFF
 10105              	.LVL1199:
 10106 1d6a 660F1F44 		.p2align 4,,10
 10106      0000
 10107              		.p2align 3
 10108              	.L1336:
 10109 1d70 0FB602   		movzbl	(%rdx), %eax
 10110              	.LBB624:
2303:fltk-1.3.4-1/png/pngrtran.c ****             }
 10111              		.loc 1 2303 0
 10112 1d73 4883C201 		addq	$1, %rdx
 10113              	.LVL1200:
 10114 1d77 D0E8     		shrb	%al
 10115 1d79 83E055   		andl	$85, %eax
 10116              	.LVL1201:
 10117              	.LBE624:
2300:fltk-1.3.4-1/png/pngrtran.c ****             {
 10118              		.loc 1 2300 0
 10119 1d7c 4839D1   		cmpq	%rdx, %rcx
 10120              	.LBB625:
2303:fltk-1.3.4-1/png/pngrtran.c ****             }
 10121              		.loc 1 2303 0
 10122 1d7f 8842FF   		movb	%al, -1(%rdx)
 10123              	.LBE625:
2300:fltk-1.3.4-1/png/pngrtran.c ****             {
 10124              		.loc 1 2300 0
 10125 1d82 75EC     		jne	.L1336
 10126 1d84 E98FEAFF 		jmp	.L1068
 10126      FF
 10127              	.LVL1202:
 10128 1d89 0F1F8000 		.p2align 4,,10
 10128      000000
 10129              		.p2align 3
 10130              	.L1569:
 10131              	.LBE623:
 10132              	.LBE632:
 10133              	.LBE639:
 10134              	.LBE799:
 10135              	.LBB800:
 10136              	.LBB483:
4615:fltk-1.3.4-1/png/pngrtran.c ****       {
 10137              		.loc 1 4615 0
 10138 1d90 4885FF   		testq	%rdi, %rdi
 10139 1d93 0F8461E5 		je	.L1514
 10139      FFFF
 10140              	.LVL1203:
 10141              	.LBB477:
4620:fltk-1.3.4-1/png/pngrtran.c ****          {
 10142              		.loc 1 4620 0
 10143 1d99 4585C0   		testl	%r8d, %r8d
 10144 1d9c 744C     		je	.L1041
 10145 1d9e 418D40FF 		leal	-1(%r8), %eax
 10146 1da2 4889CE   		movq	%rcx, %rsi
 10147 1da5 4C8D4C01 		leaq	1(%rcx,%rax), %r9
 10147      01
 10148              	.LVL1204:
 10149 1daa 660F1F44 		.p2align 4,,10
 10149      0000
 10150              		.p2align 3
 10151              	.L1032:
4622:fltk-1.3.4-1/png/pngrtran.c ****             g = *sp++;
 10152              		.loc 1 4622 0
 10153 1db0 0FB606   		movzbl	(%rsi), %eax
 10154              	.LVL1205:
4623:fltk-1.3.4-1/png/pngrtran.c ****             b = *sp++;
 10155              		.loc 1 4623 0
 10156 1db3 0FB65601 		movzbl	1(%rsi), %edx
 10157              	.LVL1206:
 10158 1db7 4883C603 		addq	$3, %rsi
 10159              	.LVL1207:
4642:fltk-1.3.4-1/png/pngrtran.c ****          }
 10160              		.loc 1 4642 0
 10161 1dbb 4883C101 		addq	$1, %rcx
 10162              	.LVL1208:
 10163 1dbf C1F803   		sarl	$3, %eax
 10164              	.LVL1209:
 10165 1dc2 C1E00A   		sall	$10, %eax
 10166 1dc5 4189C2   		movl	%eax, %r10d
 10167 1dc8 89D0     		movl	%edx, %eax
 10168 1dca 0FB656FF 		movzbl	-1(%rsi), %edx
 10169              	.LVL1210:
 10170 1dce C1F803   		sarl	$3, %eax
 10171              	.LVL1211:
 10172 1dd1 C1E005   		sall	$5, %eax
 10173 1dd4 4409D0   		orl	%r10d, %eax
 10174 1dd7 C1FA03   		sarl	$3, %edx
 10175              	.LVL1212:
 10176 1dda 09D0     		orl	%edx, %eax
4620:fltk-1.3.4-1/png/pngrtran.c ****          {
 10177              		.loc 1 4620 0
 10178 1ddc 4C39C9   		cmpq	%r9, %rcx
4642:fltk-1.3.4-1/png/pngrtran.c ****          }
 10179              		.loc 1 4642 0
 10180 1ddf 4898     		cltq
 10181 1de1 0FB60407 		movzbl	(%rdi,%rax), %eax
 10182 1de5 8841FF   		movb	%al, -1(%rcx)
 10183              	.LVL1213:
4620:fltk-1.3.4-1/png/pngrtran.c ****          {
 10184              		.loc 1 4620 0
 10185 1de8 75C6     		jne	.L1032
 10186              	.LVL1214:
 10187              	.L1041:
 10188              	.LBE477:
 10189              	.LBB478:
4678:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
 10190              		.loc 1 4678 0
 10191 1dea 0FB64511 		movzbl	17(%rbp), %eax
4676:fltk-1.3.4-1/png/pngrtran.c ****          row_info->channels = 1;
 10192              		.loc 1 4676 0
 10193 1dee C6451003 		movb	$3, 16(%rbp)
4677:fltk-1.3.4-1/png/pngrtran.c ****          row_info->pixel_depth = row_info->bit_depth;
 10194              		.loc 1 4677 0
 10195 1df2 C6451201 		movb	$1, 18(%rbp)
4679:fltk-1.3.4-1/png/pngrtran.c ****       }
 10196              		.loc 1 4679 0
 10197 1df6 3C07     		cmpb	$7, %al
4678:fltk-1.3.4-1/png/pngrtran.c ****          row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, row_width);
 10198              		.loc 1 4678 0
 10199 1df8 884513   		movb	%al, 19(%rbp)
4679:fltk-1.3.4-1/png/pngrtran.c ****       }
 10200              		.loc 1 4679 0
 10201 1dfb 0F867F02 		jbe	.L1597
 10201      0000
 10202 1e01 C0E803   		shrb	$3, %al
 10203 1e04 0FB6C0   		movzbl	%al, %eax
 10204 1e07 4C0FAFC0 		imulq	%rax, %r8
 10205              	.LVL1215:
 10206              	.L1042:
 10207 1e0b 4C894508 		movq	%r8, 8(%rbp)
 10208 1e0f E9EAE4FF 		jmp	.L1026
 10208      FF
 10209              	.LVL1216:
 10210              		.p2align 4,,10
 10211 1e14 0F1F4000 		.p2align 3
 10212              	.L1562:
 10213              	.LBE478:
 10214              	.LBE483:
 10215              	.LBE800:
 10216              	.LBB801:
 10217              	.LBB732:
 10218              	.LBB720:
 10219              	.LBB709:
3009:fltk-1.3.4-1/png/pngrtran.c ****          {
 10220              		.loc 1 3009 0
 10221 1e18 4883BBC8 		cmpq	$0, 712(%rbx)
 10221      02000000 
 10222 1e20 0F841907 		je	.L812
 10222      0000
 10223 1e26 4883BBD0 		cmpq	$0, 720(%rbx)
 10223      02000000 
 10224 1e2e 0F840B07 		je	.L812
 10224      0000
 10225              	.LVL1217:
 10226              	.LBB692:
3015:fltk-1.3.4-1/png/pngrtran.c ****             {
 10227              		.loc 1 3015 0
 10228 1e34 4585D2   		testl	%r10d, %r10d
 10229 1e37 0F846308 		je	.L1163
 10229      0000
 10230 1e3d 4889D6   		movq	%rdx, %rsi
 10231 1e40 4531E4   		xorl	%r12d, %r12d
 10232 1e43 31C9     		xorl	%ecx, %ecx
 10233 1e45 4189C0   		movl	%eax, %r8d
 10234 1e48 EB19     		jmp	.L822
 10235              	.LVL1218:
 10236 1e4a 660F1F44 		.p2align 4,,10
 10236      0000
 10237              		.p2align 3
 10238              	.L1598:
 10239              	.LBB693:
3019:fltk-1.3.4-1/png/pngrtran.c **** 
 10240              		.loc 1 3019 0
 10241 1e50 4883C203 		addq	$3, %rdx
 10242              	.LVL1219:
 10243 1e54 4889FE   		movq	%rdi, %rsi
 10244              	.LVL1220:
 10245              	.L821:
 10246              	.LBE693:
3015:fltk-1.3.4-1/png/pngrtran.c ****             {
 10247              		.loc 1 3015 0
 10248 1e57 83C101   		addl	$1, %ecx
 10249              	.LVL1221:
 10250 1e5a 4139CA   		cmpl	%ecx, %r10d
 10251 1e5d 0F849D00 		je	.L1508
 10251      0000
 10252              	.LVL1222:
 10253              	.L822:
 10254              	.LBB694:
3017:fltk-1.3.4-1/png/pngrtran.c ****                png_byte green = *(sp++);
 10255              		.loc 1 3017 0
 10256 1e63 0FB602   		movzbl	(%rdx), %eax
 10257              	.LVL1223:
3018:fltk-1.3.4-1/png/pngrtran.c ****                png_byte blue  = *(sp++);
 10258              		.loc 1 3018 0
 10259 1e66 0FB67A01 		movzbl	1(%rdx), %edi
 10260              	.LVL1224:
3019:fltk-1.3.4-1/png/pngrtran.c **** 
 10261              		.loc 1 3019 0
 10262 1e6a 440FB67A 		movzbl	2(%rdx), %r15d
 10262      02
 10263              	.LVL1225:
3021:fltk-1.3.4-1/png/pngrtran.c ****                {
 10264              		.loc 1 3021 0
 10265 1e6f 4038F8   		cmpb	%dil, %al
 10266 1e72 7534     		jne	.L1172
 10267 1e74 4438F8   		cmpb	%r15b, %al
 10268 1e77 752F     		jne	.L1172
3037:fltk-1.3.4-1/png/pngrtran.c ****                      red = png_ptr->gamma_table[red];
 10269              		.loc 1 3037 0
 10270 1e79 488BBBB8 		movq	696(%rbx), %rdi
 10270      020000
 10271              	.LVL1226:
 10272 1e80 4885FF   		testq	%rdi, %rdi
 10273 1e83 7404     		je	.L819
3038:fltk-1.3.4-1/png/pngrtran.c **** 
 10274              		.loc 1 3038 0
 10275 1e85 0FB60407 		movzbl	(%rdi,%rax), %eax
 10276              	.LVL1227:
 10277              	.L819:
3040:fltk-1.3.4-1/png/pngrtran.c ****                }
 10278              		.loc 1 3040 0
 10279 1e89 488D7E01 		leaq	1(%rsi), %rdi
 10280              	.LVL1228:
 10281 1e8d 8806     		movb	%al, (%rsi)
 10282              	.LVL1229:
 10283              	.L818:
3043:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
 10284              		.loc 1 3043 0
 10285 1e8f 4584DB   		testb	%r11b, %r11b
 10286 1e92 74BC     		je	.L1598
3044:fltk-1.3.4-1/png/pngrtran.c ****             }
 10287              		.loc 1 3044 0
 10288 1e94 0FB64203 		movzbl	3(%rdx), %eax
 10289 1e98 488D7701 		leaq	1(%rdi), %rsi
 10290              	.LVL1230:
 10291 1e9c 4883C204 		addq	$4, %rdx
 10292              	.LVL1231:
 10293 1ea0 8807     		movb	%al, (%rdi)
 10294 1ea2 EBB3     		jmp	.L821
 10295              	.LVL1232:
 10296              		.p2align 4,,10
 10297 1ea4 0F1F4000 		.p2align 3
 10298              	.L1172:
3023:fltk-1.3.4-1/png/pngrtran.c ****                   green = png_ptr->gamma_to_1[green];
 10299              		.loc 1 3023 0
 10300 1ea8 4C8B8BD0 		movq	720(%rbx), %r9
 10300      020000
 10301              	.LVL1233:
3024:fltk-1.3.4-1/png/pngrtran.c ****                   blue = png_ptr->gamma_to_1[blue];
 10302              		.loc 1 3024 0
 10303 1eaf 440FB6E7 		movzbl	%dil, %r12d
 10304              	.LVL1234:
3028:fltk-1.3.4-1/png/pngrtran.c ****                       (rc*red + gc*green + bc*blue + 16384)>>15];
 10305              		.loc 1 3028 0
 10306 1eb3 488D7E01 		leaq	1(%rsi), %rdi
 10307              	.LVL1235:
 10308 1eb7 410FB604 		movzbl	(%r9,%rax), %eax
 10308      01
 10309              	.LVL1236:
 10310 1ebc 470FB624 		movzbl	(%r9,%r12), %r12d
 10310      21
 10311              	.LVL1237:
 10312 1ec1 410FAFC5 		imull	%r13d, %eax
 10313 1ec5 450FAFE6 		imull	%r14d, %r12d
 10314 1ec9 468DA420 		leal	16384(%rax,%r12), %r12d
 10314      00400000 
 10315 1ed1 430FB604 		movzbl	(%r9,%r15), %eax
 10315      39
 10316 1ed6 4C8B8BC8 		movq	712(%rbx), %r9
 10316      020000
 10317              	.LVL1238:
 10318 1edd 410FAFC0 		imull	%r8d, %eax
 10319 1ee1 4401E0   		addl	%r12d, %eax
3027:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = png_ptr->gamma_from_1[
 10320              		.loc 1 3027 0
 10321 1ee4 41BC0100 		movl	$1, %r12d
 10321      0000
3028:fltk-1.3.4-1/png/pngrtran.c ****                       (rc*red + gc*green + bc*blue + 16384)>>15];
 10322              		.loc 1 3028 0
 10323 1eea C1E80F   		shrl	$15, %eax
 10324 1eed 410FB604 		movzbl	(%r9,%rax), %eax
 10324      01
 10325 1ef2 8806     		movb	%al, (%rsi)
 10326              	.LVL1239:
 10327 1ef4 EB99     		jmp	.L818
 10328              	.LVL1240:
 10329 1ef6 662E0F1F 		.p2align 4,,10
 10329      84000000 
 10329      0000
 10330              		.p2align 3
 10331              	.L1508:
 10332 1f00 440FB645 		movzbl	16(%rbp), %r8d
 10332      10
 10333              	.LVL1241:
 10334 1f05 0FB64D11 		movzbl	17(%rbp), %ecx
 10335 1f09 E983F5FF 		jmp	.L815
 10335      FF
 10336              	.LVL1242:
 10337 1f0e 6690     		.p2align 4,,10
 10338              		.p2align 3
 10339              	.L1547:
 10340              	.LBE694:
 10341              	.LBE692:
 10342              	.LBE709:
 10343              	.LBE720:
 10344              	.LBE732:
 10345              	.LBE801:
 10346              	.LBB802:
 10347              	.LBB466:
 10348              	.LBB460:
4136:fltk-1.3.4-1/png/pngrtran.c **** 
 10349              		.loc 1 4136 0
 10350 1f10 4C8B83C8 		movq	712(%rbx), %r8
 10350      020000
 10351              	.LVL1243:
4138:fltk-1.3.4-1/png/pngrtran.c ****          {
 10352              		.loc 1 4138 0
 10353 1f17 4D85C0   		testq	%r8, %r8
 10354 1f1a 0F8433E3 		je	.L1008
 10354      FFFF
 10355              	.LBB461:
4141:fltk-1.3.4-1/png/pngrtran.c **** 
 10356              		.loc 1 4141 0
 10357 1f20 83E202   		andl	$2, %edx
 10358 1f23 80FA01   		cmpb	$1, %dl
 10359 1f26 4D19C9   		sbbq	%r9, %r9
 10360 1f29 4983E1FE 		andq	$-2, %r9
 10361 1f2d 4C89CF   		movq	%r9, %rdi
4144:fltk-1.3.4-1/png/pngrtran.c **** 
 10362              		.loc 1 4144 0
 10363 1f30 4A8D5409 		leaq	3(%rcx,%r9), %rdx
 10363      03
4141:fltk-1.3.4-1/png/pngrtran.c **** 
 10364              		.loc 1 4141 0
 10365 1f35 4883C704 		addq	$4, %rdi
 10366              	.LVL1244:
4146:fltk-1.3.4-1/png/pngrtran.c ****                *row = table[*row];
 10367              		.loc 1 4146 0
 10368 1f39 85F6     		testl	%esi, %esi
 10369 1f3b 0F84B4E1 		je	.L1006
 10369      FFFF
 10370              		.p2align 4,,10
 10371 1f41 0F1F8000 		.p2align 3
 10371      000000
 10372              	.L1010:
 10373              	.LVL1245:
4147:fltk-1.3.4-1/png/pngrtran.c **** 
 10374              		.loc 1 4147 0
 10375 1f48 0FB602   		movzbl	(%rdx), %eax
 10376 1f4b 410FB604 		movzbl	(%r8,%rax), %eax
 10376      00
 10377 1f50 8802     		movb	%al, (%rdx)
4146:fltk-1.3.4-1/png/pngrtran.c ****                *row = table[*row];
 10378              		.loc 1 4146 0
 10379 1f52 4801FA   		addq	%rdi, %rdx
 10380              	.LVL1246:
 10381 1f55 83EE01   		subl	$1, %esi
 10382              	.LVL1247:
 10383 1f58 75EE     		jne	.L1010
 10384 1f5a E901E3FF 		jmp	.L1513
 10384      FF
 10385              	.LVL1248:
 10386 1f5f 90       		.p2align 4,,10
 10387              		.p2align 3
 10388              	.L1595:
 10389              	.LBE461:
 10390              	.LBE460:
 10391              	.LBE466:
 10392              	.LBE802:
 10393              	.LBB803:
 10394              	.LBB592:
 10395              	.LBB542:
3221:fltk-1.3.4-1/png/pngrtran.c ****                         tmp |= png_ptr->background.gray << shift;
 10396              		.loc 1 3221 0
 10397 1f60 4489D1   		movl	%r10d, %ecx
 10398 1f63 4489C8   		movl	%r9d, %eax
 10399 1f66 29F9     		subl	%edi, %ecx
 10400 1f68 D3F8     		sarl	%cl, %eax
3223:fltk-1.3.4-1/png/pngrtran.c ****                      }
 10401              		.loc 1 3223 0
 10402 1f6a 89F9     		movl	%edi, %ecx
3221:fltk-1.3.4-1/png/pngrtran.c ****                         tmp |= png_ptr->background.gray << shift;
 10403              		.loc 1 3221 0
 10404 1f6c 21C6     		andl	%eax, %esi
 10405              	.LVL1249:
3223:fltk-1.3.4-1/png/pngrtran.c ****                      }
 10406              		.loc 1 3223 0
 10407 1f6e 0FB78390 		movzwl	656(%rbx), %eax
 10407      020000
 10408 1f75 D3E0     		sall	%cl, %eax
 10409 1f77 09C6     		orl	%eax, %esi
 10410              	.LVL1250:
 10411 1f79 408832   		movb	%sil, (%rdx)
 10412              	.LVL1251:
 10413 1f7c E980FBFF 		jmp	.L861
 10413      FF
 10414              	.LVL1252:
 10415              		.p2align 4,,10
 10416 1f81 0F1F8000 		.p2align 3
 10416      000000
 10417              	.L1590:
 10418              	.LBE542:
 10419              	.LBB543:
3316:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 10420              		.loc 1 3316 0
 10421 1f88 4429C1   		subl	%r8d, %ecx
 10422 1f8b 4489D7   		movl	%r10d, %edi
 10423 1f8e D3FF     		sarl	%cl, %edi
3318:fltk-1.3.4-1/png/pngrtran.c ****                         }
 10424              		.loc 1 3318 0
 10425 1f90 4489C1   		movl	%r8d, %ecx
3316:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 10426              		.loc 1 3316 0
 10427 1f93 4421EF   		andl	%r13d, %edi
 10428              	.LVL1253:
3318:fltk-1.3.4-1/png/pngrtran.c ****                         }
 10429              		.loc 1 3318 0
 10430 1f96 440FB7AB 		movzwl	656(%rbx), %r13d
 10430      90020000 
 10431 1f9e 41D3E5   		sall	%cl, %r13d
 10432 1fa1 4409EF   		orl	%r13d, %edi
 10433              	.LVL1254:
 10434 1fa4 40883A   		movb	%dil, (%rdx)
 10435              	.LVL1255:
 10436 1fa7 E951FAFF 		jmp	.L880
 10436      FF
 10437 1fac 0F1F4000 		.p2align 4,,10
 10438              		.p2align 3
 10439              	.L1593:
 10440              	.LBE543:
 10441              	.LBB544:
3250:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 10442              		.loc 1 3250 0
 10443 1fb0 4429C1   		subl	%r8d, %ecx
 10444 1fb3 4489D7   		movl	%r10d, %edi
 10445 1fb6 D3FF     		sarl	%cl, %edi
3252:fltk-1.3.4-1/png/pngrtran.c ****                         }
 10446              		.loc 1 3252 0
 10447 1fb8 4489C1   		movl	%r8d, %ecx
3250:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 10448              		.loc 1 3250 0
 10449 1fbb 4421EF   		andl	%r13d, %edi
 10450              	.LVL1256:
3252:fltk-1.3.4-1/png/pngrtran.c ****                         }
 10451              		.loc 1 3252 0
 10452 1fbe 440FB7AB 		movzwl	656(%rbx), %r13d
 10452      90020000 
 10453 1fc6 41D3E5   		sall	%cl, %r13d
 10454 1fc9 4409EF   		orl	%r13d, %edi
 10455              	.LVL1257:
 10456 1fcc 40883A   		movb	%dil, (%rdx)
 10457              	.LVL1258:
 10458 1fcf E9D1FAFF 		jmp	.L868
 10458      FF
 10459              	.LVL1259:
 10460              		.p2align 4,,10
 10461 1fd4 0F1F4000 		.p2align 3
 10462              	.L1570:
 10463              	.LBE544:
 10464              	.LBE592:
 10465              	.LBE803:
 10466              	.LBB804:
 10467              	.LBB484:
4651:fltk-1.3.4-1/png/pngrtran.c ****          palette_lookup != NULL)
 10468              		.loc 1 4651 0
 10469 1fd8 4885FF   		testq	%rdi, %rdi
 10470 1fdb 0F8419E3 		je	.L1514
 10470      FFFF
 10471              	.LVL1260:
 10472              	.LBB479:
4657:fltk-1.3.4-1/png/pngrtran.c ****          {
 10473              		.loc 1 4657 0
 10474 1fe1 4585C0   		testl	%r8d, %r8d
 10475 1fe4 0F8400FE 		je	.L1041
 10475      FFFF
 10476 1fea 418D40FF 		leal	-1(%r8), %eax
 10477 1fee 4989C9   		movq	%rcx, %r9
 10478 1ff1 4C8D5481 		leaq	4(%rcx,%rax,4), %r10
 10478      04
 10479              	.LVL1261:
 10480 1ff6 662E0F1F 		.p2align 4,,10
 10480      84000000 
 10480      0000
 10481              		.p2align 3
 10482              	.L1040:
4659:fltk-1.3.4-1/png/pngrtran.c ****             g = *sp++;
 10483              		.loc 1 4659 0
 10484 2000 0FB601   		movzbl	(%rcx), %eax
 10485              	.LVL1262:
4660:fltk-1.3.4-1/png/pngrtran.c ****             b = *sp++;
 10486              		.loc 1 4660 0
 10487 2003 0FB67101 		movzbl	1(%rcx), %esi
 10488              	.LVL1263:
 10489 2007 4883C104 		addq	$4, %rcx
 10490              	.LVL1264:
4661:fltk-1.3.4-1/png/pngrtran.c ****             sp++;
 10491              		.loc 1 4661 0
 10492 200b 0FB651FE 		movzbl	-2(%rcx), %edx
 10493              	.LVL1265:
 10494 200f 4983C101 		addq	$1, %r9
 10495              	.LVL1266:
4673:fltk-1.3.4-1/png/pngrtran.c ****          }
 10496              		.loc 1 4673 0
 10497 2013 C1F803   		sarl	$3, %eax
 10498              	.LVL1267:
 10499 2016 C1E00A   		sall	$10, %eax
 10500 2019 C1FA03   		sarl	$3, %edx
 10501              	.LVL1268:
 10502 201c 4189C3   		movl	%eax, %r11d
 10503 201f 89F0     		movl	%esi, %eax
 10504 2021 C1F803   		sarl	$3, %eax
 10505 2024 C1E005   		sall	$5, %eax
 10506 2027 4409D8   		orl	%r11d, %eax
 10507 202a 09D0     		orl	%edx, %eax
 10508              	.LVL1269:
 10509 202c 4898     		cltq
 10510 202e 0FB60407 		movzbl	(%rdi,%rax), %eax
 10511              	.LVL1270:
 10512 2032 418841FF 		movb	%al, -1(%r9)
 10513              	.LVL1271:
4657:fltk-1.3.4-1/png/pngrtran.c ****          {
 10514              		.loc 1 4657 0
 10515 2036 4C39D1   		cmpq	%r10, %rcx
 10516 2039 75C5     		jne	.L1040
 10517 203b E9AAFDFF 		jmp	.L1041
 10517      FF
 10518              	.LVL1272:
 10519              		.p2align 4,,10
 10520              		.p2align 3
 10521              	.L1070:
 10522              	.LBE479:
 10523              	.LBE484:
 10524              	.LBE804:
 10525              	.LBB805:
 10526              	.LBB640:
 10527              	.LBB633:
 10528              	.LBB626:
2314:fltk-1.3.4-1/png/pngrtran.c ****             int mask =  0xf >> gray_shift;
 10529              		.loc 1 2314 0
 10530 2040 8B4C2410 		movl	16(%rsp), %ecx
2313:fltk-1.3.4-1/png/pngrtran.c ****             int gray_shift = shift[0];
 10531              		.loc 1 2313 0
 10532 2044 4889D7   		movq	%rdx, %rdi
 10533              	.LVL1273:
2315:fltk-1.3.4-1/png/pngrtran.c **** 
 10534              		.loc 1 2315 0
 10535 2047 BE0F0000 		movl	$15, %esi
 10535      00
2313:fltk-1.3.4-1/png/pngrtran.c ****             int gray_shift = shift[0];
 10536              		.loc 1 2313 0
 10537 204c 48037D08 		addq	8(%rbp), %rdi
 10538              	.LVL1274:
2315:fltk-1.3.4-1/png/pngrtran.c **** 
 10539              		.loc 1 2315 0
 10540 2050 D3FE     		sarl	%cl, %esi
 10541              	.LVL1275:
2317:fltk-1.3.4-1/png/pngrtran.c **** 
 10542              		.loc 1 2317 0
 10543 2052 89F0     		movl	%esi, %eax
 10544 2054 C1E004   		sall	$4, %eax
 10545 2057 09C6     		orl	%eax, %esi
 10546              	.LVL1276:
2319:fltk-1.3.4-1/png/pngrtran.c ****             {
 10547              		.loc 1 2319 0
 10548 2059 4839D7   		cmpq	%rdx, %rdi
 10549 205c 0F86B6E7 		jbe	.L1068
 10549      FFFF
 10550              	.LVL1277:
 10551              		.p2align 4,,10
 10552 2062 660F1F44 		.p2align 3
 10552      0000
 10553              	.L1078:
 10554              	.LBB627:
2321:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)b;
 10555              		.loc 1 2321 0
 10556 2068 0FB602   		movzbl	(%rdx), %eax
2322:fltk-1.3.4-1/png/pngrtran.c ****             }
 10557              		.loc 1 2322 0
 10558 206b 4883C201 		addq	$1, %rdx
 10559              	.LVL1278:
2321:fltk-1.3.4-1/png/pngrtran.c ****                *bp++ = (png_byte)b;
 10560              		.loc 1 2321 0
 10561 206f D3F8     		sarl	%cl, %eax
 10562 2071 21F0     		andl	%esi, %eax
 10563              	.LVL1279:
 10564              	.LBE627:
2319:fltk-1.3.4-1/png/pngrtran.c ****             {
 10565              		.loc 1 2319 0
 10566 2073 4839D7   		cmpq	%rdx, %rdi
 10567              	.LBB628:
2322:fltk-1.3.4-1/png/pngrtran.c ****             }
 10568              		.loc 1 2322 0
 10569 2076 8842FF   		movb	%al, -1(%rdx)
 10570              	.LBE628:
2319:fltk-1.3.4-1/png/pngrtran.c ****             {
 10571              		.loc 1 2319 0
 10572 2079 75ED     		jne	.L1078
 10573 207b E998E7FF 		jmp	.L1068
 10573      FF
 10574              	.LVL1280:
 10575              		.p2align 4,,10
 10576              		.p2align 3
 10577              	.L1597:
 10578              	.LBE626:
 10579              	.LBE633:
 10580              	.LBE640:
 10581              	.LBE805:
 10582              	.LBB806:
 10583              	.LBB485:
 10584              	.LBB480:
4679:fltk-1.3.4-1/png/pngrtran.c ****       }
 10585              		.loc 1 4679 0
 10586 2080 4C0FAFC0 		imulq	%rax, %r8
 10587              	.LVL1281:
 10588 2084 4983C007 		addq	$7, %r8
 10589 2088 49C1E803 		shrq	$3, %r8
 10590 208c E97AFDFF 		jmp	.L1042
 10590      FF
 10591              	.LVL1282:
 10592              		.p2align 4,,10
 10593 2091 0F1F8000 		.p2align 3
 10593      000000
 10594              	.L1572:
 10595              	.LBE480:
 10596              	.LBE485:
 10597              	.LBE806:
 10598              	.LBB807:
 10599              	.LBB609:
 10600              	.LBB605:
2567:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
 10601              		.loc 1 2567 0
 10602 2098 48034D08 		addq	8(%rbp), %rcx
 10603              	.LVL1283:
2571:fltk-1.3.4-1/png/pngrtran.c ****          {
 10604              		.loc 1 2571 0
 10605 209c 85FF     		testl	%edi, %edi
 10606 209e 0F84E305 		je	.L1053
 10606      0000
 10607 20a4 8D47FF   		leal	-1(%rdi), %eax
 10608 20a7 4889CF   		movq	%rcx, %rdi
 10609              	.LVL1284:
 10610 20aa 48C1E002 		salq	$2, %rax
 10611 20ae 4829C7   		subq	%rax, %rdi
 10612 20b1 4889F8   		movq	%rdi, %rax
 10613 20b4 4883E804 		subq	$4, %rax
 10614              	.LVL1285:
 10615 20b8 0F1F8400 		.p2align 4,,10
 10615      00000000 
 10616              		.p2align 3
 10617              	.L1054:
2573:fltk-1.3.4-1/png/pngrtran.c **** 
 10618              		.loc 1 2573 0
 10619 20c0 F651FF   		notb	-1(%rcx)
 10620 20c3 4883E904 		subq	$4, %rcx
 10621              	.LVL1286:
2571:fltk-1.3.4-1/png/pngrtran.c ****          {
 10622              		.loc 1 2571 0
 10623 20c7 4839C1   		cmpq	%rax, %rcx
 10624 20ca 75F4     		jne	.L1054
 10625 20cc E91EE6FF 		jmp	.L1515
 10625      FF
 10626              	.LVL1287:
 10627              		.p2align 4,,10
 10628 20d1 0F1F8000 		.p2align 3
 10628      000000
 10629              	.L1568:
 10630              	.LBE605:
 10631              	.LBE609:
 10632              	.LBE807:
 10633              	.LBB808:
 10634              	.LBB747:
 10635              	.LBB742:
2470:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
 10636              		.loc 1 2470 0
 10637 20d8 48034508 		addq	8(%rbp), %rax
 10638              	.LVL1288:
2475:fltk-1.3.4-1/png/pngrtran.c ****             {
 10639              		.loc 1 2475 0
 10640 20dc 85F6     		testl	%esi, %esi
 10641 20de 0F849CE0 		je	.L1115
 10641      FFFF
 10642 20e4 8D56FF   		leal	-1(%rsi), %edx
 10643 20e7 4889C7   		movq	%rax, %rdi
 10644 20ea 48C1E202 		salq	$2, %rdx
 10645 20ee 4829D7   		subq	%rdx, %rdi
 10646 20f1 488D77FC 		leaq	-4(%rdi), %rsi
 10647              	.LVL1289:
 10648              		.p2align 4,,10
 10649 20f5 0F1F00   		.p2align 3
 10650              	.L1137:
2478:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 10651              		.loc 1 2478 0
 10652 20f8 0FB648FE 		movzbl	-2(%rax), %ecx
2477:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 10653              		.loc 1 2477 0
 10654 20fc 0FB650FF 		movzbl	-1(%rax), %edx
 10655              	.LVL1290:
 10656 2100 4883E804 		subq	$4, %rax
 10657              	.LVL1291:
2478:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 10658              		.loc 1 2478 0
 10659 2104 884803   		movb	%cl, 3(%rax)
 10660              	.LVL1292:
2479:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 10661              		.loc 1 2479 0
 10662 2107 0FB64801 		movzbl	1(%rax), %ecx
 10663 210b 884802   		movb	%cl, 2(%rax)
 10664              	.LVL1293:
2480:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save;
 10665              		.loc 1 2480 0
 10666 210e 0FB608   		movzbl	(%rax), %ecx
2475:fltk-1.3.4-1/png/pngrtran.c ****             {
 10667              		.loc 1 2475 0
 10668 2111 4839C6   		cmpq	%rax, %rsi
2481:fltk-1.3.4-1/png/pngrtran.c ****             }
 10669              		.loc 1 2481 0
 10670 2114 8810     		movb	%dl, (%rax)
2480:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save;
 10671              		.loc 1 2480 0
 10672 2116 884801   		movb	%cl, 1(%rax)
 10673              	.LVL1294:
2475:fltk-1.3.4-1/png/pngrtran.c ****             {
 10674              		.loc 1 2475 0
 10675 2119 75DD     		jne	.L1137
 10676 211b E985EBFF 		jmp	.L1517
 10676      FF
 10677              	.LVL1295:
 10678              		.p2align 4,,10
 10679              		.p2align 3
 10680              	.L1555:
 10681              	.LBE742:
 10682              	.LBE747:
 10683              	.LBE808:
 10684              	.LBB809:
 10685              	.LBB610:
 10686              	.LBB606:
2619:fltk-1.3.4-1/png/pngrtran.c ****          png_bytep dp = sp;
 10687              		.loc 1 2619 0
 10688 2120 48034D08 		addq	8(%rbp), %rcx
 10689              	.LVL1296:
2623:fltk-1.3.4-1/png/pngrtran.c ****          {
 10690              		.loc 1 2623 0
 10691 2124 85FF     		testl	%edi, %edi
 10692 2126 0F8455EC 		je	.L1057
 10692      FFFF
 10693 212c 8D47FF   		leal	-1(%rdi), %eax
 10694 212f 4889CF   		movq	%rcx, %rdi
 10695              	.LVL1297:
 10696 2132 4801C0   		addq	%rax, %rax
 10697 2135 4829C7   		subq	%rax, %rdi
 10698 2138 4889F8   		movq	%rdi, %rax
 10699 213b 4883E802 		subq	$2, %rax
 10700              	.LVL1298:
 10701 213f 90       		.p2align 4,,10
 10702              		.p2align 3
 10703              	.L1058:
2625:fltk-1.3.4-1/png/pngrtran.c ****             *(--dp) = *(--sp);
 10704              		.loc 1 2625 0
 10705 2140 F651FF   		notb	-1(%rcx)
 10706 2143 4883E902 		subq	$2, %rcx
 10707              	.LVL1299:
2623:fltk-1.3.4-1/png/pngrtran.c ****          {
 10708              		.loc 1 2623 0
 10709 2147 4839C1   		cmpq	%rax, %rcx
 10710 214a 75F4     		jne	.L1058
 10711 214c E99EE5FF 		jmp	.L1515
 10711      FF
 10712              	.LVL1300:
 10713              		.p2align 4,,10
 10714 2151 0F1F8000 		.p2align 3
 10714      000000
 10715              	.L1566:
 10716              	.LBE606:
 10717              	.LBE610:
 10718              	.LBE809:
 10719              	.LBB810:
 10720              	.LBB748:
 10721              	.LBB743:
2516:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp;
 10722              		.loc 1 2516 0
 10723 2158 48034508 		addq	8(%rbp), %rax
 10724              	.LVL1301:
2521:fltk-1.3.4-1/png/pngrtran.c ****             {
 10725              		.loc 1 2521 0
 10726 215c 85F6     		testl	%esi, %esi
 10727 215e 0F841CE0 		je	.L1115
 10727      FFFF
 10728 2164 8D56FF   		leal	-1(%rsi), %edx
 10729 2167 4889C7   		movq	%rax, %rdi
 10730 216a 4801D2   		addq	%rdx, %rdx
 10731 216d 4829D7   		subq	%rdx, %rdi
 10732 2170 488D77FE 		leaq	-2(%rdi), %rsi
 10733              	.LVL1302:
 10734              		.p2align 4,,10
 10735 2174 0F1F4000 		.p2align 3
 10736              	.L1140:
2523:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 10737              		.loc 1 2523 0
 10738 2178 0FB650FF 		movzbl	-1(%rax), %edx
 10739              	.LVL1303:
 10740 217c 4883E802 		subq	$2, %rax
 10741              	.LVL1304:
2524:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save;
 10742              		.loc 1 2524 0
 10743 2180 0FB608   		movzbl	(%rax), %ecx
2521:fltk-1.3.4-1/png/pngrtran.c ****             {
 10744              		.loc 1 2521 0
 10745 2183 4839C6   		cmpq	%rax, %rsi
2525:fltk-1.3.4-1/png/pngrtran.c ****             }
 10746              		.loc 1 2525 0
 10747 2186 8810     		movb	%dl, (%rax)
2524:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = save;
 10748              		.loc 1 2524 0
 10749 2188 884801   		movb	%cl, 1(%rax)
 10750              	.LVL1305:
2521:fltk-1.3.4-1/png/pngrtran.c ****             {
 10751              		.loc 1 2521 0
 10752 218b 75EB     		jne	.L1140
 10753 218d E913EBFF 		jmp	.L1517
 10753      FF
 10754              	.LVL1306:
 10755              		.p2align 4,,10
 10756 2192 660F1F44 		.p2align 3
 10756      0000
 10757              	.L829:
 10758              	.LBE743:
 10759              	.LBE748:
 10760              	.LBE810:
 10761              	.LBB811:
 10762              	.LBB733:
 10763              	.LBB721:
 10764              	.LBB710:
 10765              	.LBB695:
3138:fltk-1.3.4-1/png/pngrtran.c ****             {
 10766              		.loc 1 3138 0
 10767 2198 4531E4   		xorl	%r12d, %r12d
 10768 219b 31FF     		xorl	%edi, %edi
 10769 219d 4585D2   		testl	%r10d, %r10d
 10770 21a0 4889D6   		movq	%rdx, %rsi
 10771 21a3 0F84BF0A 		je	.L1506
 10771      0000
 10772 21a9 4189C0   		movl	%eax, %r8d
 10773 21ac EB16     		jmp	.L1342
 10774              	.LVL1307:
 10775 21ae 6690     		.p2align 4,,10
 10776              		.p2align 3
 10777              	.L1599:
 10778              	.LBB696:
3144:fltk-1.3.4-1/png/pngrtran.c **** 
 10779              		.loc 1 3144 0
 10780 21b0 4883C206 		addq	$6, %rdx
 10781              	.LVL1308:
3156:fltk-1.3.4-1/png/pngrtran.c **** 
 10782              		.loc 1 3156 0
 10783 21b4 4883C602 		addq	$2, %rsi
 10784              	.LVL1309:
 10785              	.L840:
 10786              	.LBE696:
3138:fltk-1.3.4-1/png/pngrtran.c ****             {
 10787              		.loc 1 3138 0
 10788 21b8 83C701   		addl	$1, %edi
 10789              	.LVL1310:
 10790 21bb 4139FA   		cmpl	%edi, %r10d
 10791 21be 0F843CFD 		je	.L1508
 10791      FFFF
 10792              	.LVL1311:
 10793              	.L1342:
 10794              	.LBB697:
3142:fltk-1.3.4-1/png/pngrtran.c ****                green = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 10795              		.loc 1 3142 0
 10796 21c4 440FB60A 		movzbl	(%rdx), %r9d
 10797 21c8 0FB64201 		movzbl	1(%rdx), %eax
3143:fltk-1.3.4-1/png/pngrtran.c ****                blue  = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 10798              		.loc 1 3143 0
 10799 21cc 0FB64A03 		movzbl	3(%rdx), %ecx
3144:fltk-1.3.4-1/png/pngrtran.c **** 
 10800              		.loc 1 3144 0
 10801 21d0 440FB67A 		movzbl	5(%rdx), %r15d
 10801      05
3142:fltk-1.3.4-1/png/pngrtran.c ****                green = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 10802              		.loc 1 3142 0
 10803 21d5 41C1E108 		sall	$8, %r9d
 10804 21d9 4109C1   		orl	%eax, %r9d
 10805              	.LVL1312:
3143:fltk-1.3.4-1/png/pngrtran.c ****                blue  = (png_uint_16)(((*(sp)) << 8) | *(sp + 1)); sp += 2;
 10806              		.loc 1 3143 0
 10807 21dc 0FB64202 		movzbl	2(%rdx), %eax
 10808 21e0 C1E008   		sall	$8, %eax
 10809 21e3 09C8     		orl	%ecx, %eax
 10810              	.LVL1313:
3144:fltk-1.3.4-1/png/pngrtran.c **** 
 10811              		.loc 1 3144 0
 10812 21e5 0FB64A04 		movzbl	4(%rdx), %ecx
 10813 21e9 C1E108   		sall	$8, %ecx
 10814 21ec 4409F9   		orl	%r15d, %ecx
 10815              	.LVL1314:
3146:fltk-1.3.4-1/png/pngrtran.c ****                   rgb_error |= 1;
 10816              		.loc 1 3146 0
 10817 21ef 664139C1 		cmpw	%ax, %r9w
 10818 21f3 755B     		jne	.L1174
 10819 21f5 664139C9 		cmpw	%cx, %r9w
 10820 21f9 7555     		jne	.L1174
 10821              	.LVL1315:
 10822              	.L837:
3153:fltk-1.3.4-1/png/pngrtran.c ****                   15);
 10823              		.loc 1 3153 0
 10824 21fb 450FB7C9 		movzwl	%r9w, %r9d
 10825 21ff 0FB7C0   		movzwl	%ax, %eax
 10826 2202 0FB7C9   		movzwl	%cx, %ecx
 10827 2205 450FAFCD 		imull	%r13d, %r9d
 10828              	.LVL1316:
 10829 2209 410FAFC6 		imull	%r14d, %eax
 10830              	.LVL1317:
 10831 220d 410FAFC8 		imull	%r8d, %ecx
 10832              	.LVL1318:
 10833 2211 418D8401 		leal	16384(%r9,%rax), %eax
 10833      00400000 
 10834 2219 01C8     		addl	%ecx, %eax
 10835 221b C1E80F   		shrl	$15, %eax
 10836              	.LVL1319:
3155:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(gray16 & 0xff);
 10837              		.loc 1 3155 0
 10838 221e 89C1     		movl	%eax, %ecx
3156:fltk-1.3.4-1/png/pngrtran.c **** 
 10839              		.loc 1 3156 0
 10840 2220 884601   		movb	%al, 1(%rsi)
 10841              	.LVL1320:
3155:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(gray16 & 0xff);
 10842              		.loc 1 3155 0
 10843 2223 66C1E908 		shrw	$8, %cx
3158:fltk-1.3.4-1/png/pngrtran.c ****                {
 10844              		.loc 1 3158 0
 10845 2227 4584DB   		testb	%r11b, %r11b
3155:fltk-1.3.4-1/png/pngrtran.c ****                *(dp++) = (png_byte)(gray16 & 0xff);
 10846              		.loc 1 3155 0
 10847 222a 880E     		movb	%cl, (%rsi)
 10848              	.LVL1321:
3158:fltk-1.3.4-1/png/pngrtran.c ****                {
 10849              		.loc 1 3158 0
 10850 222c 7482     		je	.L1599
 10851              	.LVL1322:
3160:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
 10852              		.loc 1 3160 0
 10853 222e 0FB64206 		movzbl	6(%rdx), %eax
 10854              	.LVL1323:
3161:fltk-1.3.4-1/png/pngrtran.c ****                }
 10855              		.loc 1 3161 0
 10856 2232 4883C604 		addq	$4, %rsi
 10857              	.LVL1324:
 10858 2236 4883C208 		addq	$8, %rdx
 10859              	.LVL1325:
3160:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
 10860              		.loc 1 3160 0
 10861 223a 8846FE   		movb	%al, -2(%rsi)
3161:fltk-1.3.4-1/png/pngrtran.c ****                }
 10862              		.loc 1 3161 0
 10863 223d 0FB642FF 		movzbl	-1(%rdx), %eax
 10864 2241 8846FF   		movb	%al, -1(%rsi)
 10865 2244 E96FFFFF 		jmp	.L840
 10865      FF
 10866              	.LVL1326:
 10867 2249 0F1F8000 		.p2align 4,,10
 10867      000000
 10868              		.p2align 3
 10869              	.L1174:
3147:fltk-1.3.4-1/png/pngrtran.c **** 
 10870              		.loc 1 3147 0
 10871 2250 41BC0100 		movl	$1, %r12d
 10871      0000
 10872              	.LVL1327:
 10873 2256 EBA3     		jmp	.L837
 10874              	.LVL1328:
 10875 2258 0F1F8400 		.p2align 4,,10
 10875      00000000 
 10876              		.p2align 3
 10877              	.L1548:
 10878              	.LBE697:
 10879              	.LBE695:
 10880              	.LBE710:
 10881              	.LBE721:
 10882              	.LBE733:
 10883              	.LBE811:
 10884              	.LBB812:
 10885              	.LBB467:
 10886              	.LBB462:
4155:fltk-1.3.4-1/png/pngrtran.c ****          PNG_CONST int gamma_shift = png_ptr->gamma_shift;
 10887              		.loc 1 4155 0
 10888 2260 4C8B83D8 		movq	728(%rbx), %r8
 10888      020000
 10889              	.LVL1329:
4158:fltk-1.3.4-1/png/pngrtran.c ****          {
 10890              		.loc 1 4158 0
 10891 2267 4D85C0   		testq	%r8, %r8
 10892 226a 0F84E3DF 		je	.L1008
 10892      FFFF
 10893              	.LBB463:
4161:fltk-1.3.4-1/png/pngrtran.c **** 
 10894              		.loc 1 4161 0
 10895 2270 83E202   		andl	$2, %edx
 10896 2273 80FA01   		cmpb	$1, %dl
 10897 2276 4819FF   		sbbq	%rdi, %rdi
 10898 2279 4883E7FC 		andq	$-4, %rdi
 10899 227d 4989F9   		movq	%rdi, %r9
4164:fltk-1.3.4-1/png/pngrtran.c **** 
 10900              		.loc 1 4164 0
 10901 2280 488D5439 		leaq	6(%rcx,%rdi), %rdx
 10901      06
4161:fltk-1.3.4-1/png/pngrtran.c **** 
 10902              		.loc 1 4161 0
 10903 2285 4983C108 		addq	$8, %r9
 10904              	.LVL1330:
4166:fltk-1.3.4-1/png/pngrtran.c ****             {
 10905              		.loc 1 4166 0
 10906 2289 85F6     		testl	%esi, %esi
 10907 228b 0F8464DE 		je	.L1006
 10907      FFFF
 10908              	.LBE463:
4156:fltk-1.3.4-1/png/pngrtran.c **** 
 10909              		.loc 1 4156 0
 10910 2291 8B8BB002 		movl	688(%rbx), %ecx
 10910      0000
 10911              	.LVL1331:
 10912 2297 660F1F84 		.p2align 4,,10
 10912      00000000 
 10912      00
 10913              		.p2align 3
 10914              	.L1012:
 10915              	.LBB465:
 10916              	.LBB464:
4170:fltk-1.3.4-1/png/pngrtran.c ****                *row = (png_byte)((v >> 8) & 0xff);
 10917              		.loc 1 4170 0
 10918 22a0 0FB64201 		movzbl	1(%rdx), %eax
 10919 22a4 0FB63A   		movzbl	(%rdx), %edi
 10920 22a7 D3F8     		sarl	%cl, %eax
 10921 22a9 4898     		cltq
 10922 22ab 498B04C0 		movq	(%r8,%rax,8), %rax
 10923 22af 0FB70478 		movzwl	(%rax,%rdi,2), %eax
 10924              	.LVL1332:
4171:fltk-1.3.4-1/png/pngrtran.c ****                *(row + 1) = (png_byte)(v & 0xff);
 10925              		.loc 1 4171 0
 10926 22b3 89C7     		movl	%eax, %edi
4172:fltk-1.3.4-1/png/pngrtran.c ****             }
 10927              		.loc 1 4172 0
 10928 22b5 884201   		movb	%al, 1(%rdx)
4171:fltk-1.3.4-1/png/pngrtran.c ****                *(row + 1) = (png_byte)(v & 0xff);
 10929              		.loc 1 4171 0
 10930 22b8 66C1EF08 		shrw	$8, %di
 10931 22bc 40883A   		movb	%dil, (%rdx)
 10932              	.LBE464:
4166:fltk-1.3.4-1/png/pngrtran.c ****             {
 10933              		.loc 1 4166 0
 10934 22bf 4C01CA   		addq	%r9, %rdx
 10935              	.LVL1333:
 10936 22c2 83EE01   		subl	$1, %esi
 10937              	.LVL1334:
 10938 22c5 75D9     		jne	.L1012
 10939 22c7 E994DFFF 		jmp	.L1513
 10939      FF
 10940              	.LVL1335:
 10941 22cc 0F1F4000 		.p2align 4,,10
 10942              		.p2align 3
 10943              	.L860:
 10944              	.LBE465:
 10945              	.LBE462:
 10946              	.LBE467:
 10947              	.LBE812:
4830:fltk-1.3.4-1/png/pngrtran.c **** #ifdef PNG_READ_RGB_TO_GRAY_SUPPORTED
 10948              		.loc 1 4830 0
 10949 22d0 8B833401 		movl	308(%rbx), %eax
 10949      0000
 10950 22d6 89C2     		movl	%eax, %edx
 10951              	.LVL1336:
 10952 22d8 81E20020 		andl	$6299648, %edx
 10952      6000
 10953 22de 81FA0020 		cmpl	$8192, %edx
 10953      0000
 10954 22e4 0F85EADD 		jne	.L969
 10954      FFFF
 10955 22ea E94BECFF 		jmp	.L970
 10955      FF
 10956              	.LVL1337:
 10957 22ef 90       		.p2align 4,,10
 10958              		.p2align 3
 10959              	.L1109:
 10960              	.LBB813:
 10961              	.LBB673:
 10962              	.LBB665:
2695:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width;
 10963              		.loc 1 2695 0
 10964 22f0 89F0     		movl	%esi, %eax
 10965              	.LVL1338:
 10966 22f2 498D1400 		leaq	(%r8,%rax), %rdx
 10967              	.LVL1339:
2696:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 10968              		.loc 1 2696 0
 10969 22f6 4801D0   		addq	%rdx, %rax
 10970              	.LVL1340:
2697:fltk-1.3.4-1/png/pngrtran.c ****             {
 10971              		.loc 1 2697 0
 10972 22f9 85F6     		testl	%esi, %esi
 10973 22fb 0F8430FA 		je	.L1114
 10973      FFFF
 10974 2301 8D7EFF   		leal	-1(%rsi), %edi
 10975 2304 4989C7   		movq	%rax, %r15
 10976 2307 4801FF   		addq	%rdi, %rdi
 10977 230a 4929FF   		subq	%rdi, %r15
 10978 230d 4D8D47FE 		leaq	-2(%r15), %r8
 10979              	.LVL1341:
 10980              		.p2align 4,,10
 10981 2311 0F1F8000 		.p2align 3
 10981      000000
 10982              	.L1113:
2699:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
 10983              		.loc 1 2699 0
 10984 2318 4883EA01 		subq	$1, %rdx
 10985              	.LVL1342:
 10986 231c 0FB63A   		movzbl	(%rdx), %edi
 10987 231f 4883E802 		subq	$2, %rax
 10988              	.LVL1343:
 10989 2323 40887801 		movb	%dil, 1(%rax)
 10990              	.LVL1344:
2697:fltk-1.3.4-1/png/pngrtran.c ****             {
 10991              		.loc 1 2697 0
 10992 2327 4C39C0   		cmpq	%r8, %rax
2700:fltk-1.3.4-1/png/pngrtran.c ****             }
 10993              		.loc 1 2700 0
 10994 232a 8808     		movb	%cl, (%rax)
2697:fltk-1.3.4-1/png/pngrtran.c ****             {
 10995              		.loc 1 2697 0
 10996 232c 75EA     		jne	.L1113
 10997 232e E9FEF9FF 		jmp	.L1114
 10997      FF
 10998              	.LVL1345:
 10999              		.p2align 4,,10
 11000 2333 0F1F4400 		.p2align 3
 11000      00
 11001              	.L1581:
 11002              	.LBE665:
 11003              	.LBE673:
 11004              	.LBE813:
 11005              	.LBB814:
4774:fltk-1.3.4-1/png/pngrtran.c **** 
 11006              		.loc 1 4774 0
 11007 2338 BE000000 		movl	$.LC52, %esi
 11007      00
 11008 233d 4889DF   		movq	%rbx, %rdi
 11009 2340 E8000000 		call	png_warning
 11009      00
 11010              	.LVL1346:
 11011 2345 8B833401 		movl	308(%rbx), %eax
 11011      0000
 11012 234b 89C2     		movl	%eax, %edx
 11013 234d 81E20000 		andl	$6291456, %edx
 11013      6000
 11014 2353 E98DF1FF 		jmp	.L845
 11014      FF
 11015              	.LVL1347:
 11016 2358 0F1F8400 		.p2align 4,,10
 11016      00000000 
 11017              		.p2align 3
 11018              	.L1116:
 11019              	.LBE814:
 11020              	.LBB815:
 11021              	.LBB674:
 11022              	.LBB666:
2735:fltk-1.3.4-1/png/pngrtran.c ****             {
 11023              		.loc 1 2735 0
 11024 2360 85F6     		testl	%esi, %esi
2734:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 11025              		.loc 1 2734 0
 11026 2362 498D0480 		leaq	(%r8,%rax,4), %rax
 11027              	.LVL1348:
2735:fltk-1.3.4-1/png/pngrtran.c ****             {
 11028              		.loc 1 2735 0
 11029 2366 743A     		je	.L1121
 11030 2368 8D7EFF   		leal	-1(%rsi), %edi
 11031 236b 4989C7   		movq	%rax, %r15
 11032 236e 48C1E702 		salq	$2, %rdi
 11033 2372 4929FF   		subq	%rdi, %r15
 11034 2375 4D8D47FC 		leaq	-4(%r15), %r8
 11035              	.LVL1349:
 11036 2379 0F1F8000 		.p2align 4,,10
 11036      000000
 11037              		.p2align 3
 11038              	.L1120:
2737:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11039              		.loc 1 2737 0
 11040 2380 0FB67AFF 		movzbl	-1(%rdx), %edi
 11041 2384 4883EA02 		subq	$2, %rdx
 11042              	.LVL1350:
 11043 2388 4883E804 		subq	$4, %rax
 11044              	.LVL1351:
 11045 238c 40887803 		movb	%dil, 3(%rax)
 11046              	.LVL1352:
2738:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
 11047              		.loc 1 2738 0
 11048 2390 0FB63A   		movzbl	(%rdx), %edi
2739:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
 11049              		.loc 1 2739 0
 11050 2393 44885001 		movb	%r10b, 1(%rax)
2738:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
 11051              		.loc 1 2738 0
 11052 2397 40887802 		movb	%dil, 2(%rax)
 11053              	.LVL1353:
2735:fltk-1.3.4-1/png/pngrtran.c ****             {
 11054              		.loc 1 2735 0
 11055 239b 4C39C0   		cmpq	%r8, %rax
2740:fltk-1.3.4-1/png/pngrtran.c ****             }
 11056              		.loc 1 2740 0
 11057 239e 8808     		movb	%cl, (%rax)
2735:fltk-1.3.4-1/png/pngrtran.c ****             {
 11058              		.loc 1 2735 0
 11059 23a0 75DE     		jne	.L1120
 11060              	.L1121:
2742:fltk-1.3.4-1/png/pngrtran.c ****             row_info->pixel_depth = 32;
 11061              		.loc 1 2742 0
 11062 23a2 C6451202 		movb	$2, 18(%rbp)
 11063 23a6 E90CE6FF 		jmp	.L1516
 11063      FF
 11064              	.LVL1354:
 11065 23ab 0F1F4400 		.p2align 4,,10
 11065      00
 11066              		.p2align 3
 11067              	.L1585:
 11068              	.LBE666:
 11069              	.LBE674:
 11070              	.LBE815:
 11071              	.LBB816:
 11072              	.LBB593:
 11073              	.LBB545:
3722:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = gamma_table[*(sp + 1)];
 11074              		.loc 1 3722 0
 11075 23b0 0FB602   		movzbl	(%rdx), %eax
 11076 23b3 0FB60406 		movzbl	(%rsi,%rax), %eax
 11077 23b7 8802     		movb	%al, (%rdx)
3723:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = gamma_table[*(sp + 2)];
 11078              		.loc 1 3723 0
 11079 23b9 0FB64201 		movzbl	1(%rdx), %eax
 11080 23bd 0FB60406 		movzbl	(%rsi,%rax), %eax
 11081 23c1 884201   		movb	%al, 1(%rdx)
3724:fltk-1.3.4-1/png/pngrtran.c ****                      }
 11082              		.loc 1 3724 0
 11083 23c4 0FB64202 		movzbl	2(%rdx), %eax
 11084 23c8 0FB60406 		movzbl	(%rsi,%rax), %eax
 11085 23cc 884202   		movb	%al, 2(%rdx)
 11086 23cf E989F3FF 		jmp	.L947
 11086      FF
 11087              	.LVL1355:
 11088              		.p2align 4,,10
 11089 23d4 0F1F4000 		.p2align 3
 11090              	.L1582:
 11091              	.LBE545:
 11092              	.LBB546:
3596:fltk-1.3.4-1/png/pngrtran.c **** 
 11093              		.loc 1 3596 0
 11094 23d8 0FB602   		movzbl	(%rdx), %eax
 11095              	.LVL1356:
 11096 23db 0FB60406 		movzbl	(%rsi,%rax), %eax
 11097 23df 8802     		movb	%al, (%rdx)
 11098 23e1 E913F2FF 		jmp	.L924
 11098      FF
 11099              	.LVL1357:
 11100 23e6 662E0F1F 		.p2align 4,,10
 11100      84000000 
 11100      0000
 11101              		.p2align 3
 11102              	.L1571:
 11103              	.LBE546:
 11104              	.LBE593:
 11105              	.LBE816:
 11106              	.LBB817:
 11107              	.LBB778:
3940:fltk-1.3.4-1/png/pngrtran.c ****       {
 11108              		.loc 1 3940 0
 11109 23f0 4084F6   		testb	%sil, %sil
 11110 23f3 0F8557EC 		jne	.L1512
 11110      FFFF
4056:fltk-1.3.4-1/png/pngrtran.c ****             {
 11111              		.loc 1 4056 0
 11112 23f9 80FA02   		cmpb	$2, %dl
 11113 23fc 0F841F07 		je	.L1600
 11113      0000
4075:fltk-1.3.4-1/png/pngrtran.c ****             {
 11114              		.loc 1 4075 0
 11115 2402 80FA04   		cmpb	$4, %dl
 11116 2405 0F84AA0A 		je	.L1601
 11116      0000
 11117              	.LVL1358:
 11118              	.L999:
4089:fltk-1.3.4-1/png/pngrtran.c ****             {
 11119              		.loc 1 4089 0
 11120 240b 80FA08   		cmpb	$8, %dl
 11121 240e 0F84AF0A 		je	.L1602
 11121      0000
4099:fltk-1.3.4-1/png/pngrtran.c ****             {
 11122              		.loc 1 4099 0
 11123 2414 80FA10   		cmpb	$16, %dl
 11124 2417 0F8533EC 		jne	.L1512
 11124      FFFF
 11125              	.LVL1359:
4102:fltk-1.3.4-1/png/pngrtran.c ****                {
 11126              		.loc 1 4102 0
 11127 241d 4585ED   		testl	%r13d, %r13d
 11128 2420 0F842AEC 		je	.L1512
 11128      FFFF
 11129 2426 418D55FF 		leal	-1(%r13), %edx
 11130 242a 498D7C56 		leaq	3(%r14,%rdx,2), %rdi
 11130      03
 11131              	.LVL1360:
 11132 242f 90       		.p2align 4,,10
 11133              		.p2align 3
 11134              	.L1004:
 11135              	.LBB768:
4104:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11136              		.loc 1 4104 0
 11137 2430 0FB65001 		movzbl	1(%rax), %edx
 11138 2434 0FB630   		movzbl	(%rax), %esi
4107:fltk-1.3.4-1/png/pngrtran.c ****                }
 11139              		.loc 1 4107 0
 11140 2437 4883C002 		addq	$2, %rax
 11141              	.LVL1361:
4104:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11142              		.loc 1 4104 0
 11143 243b D3FA     		sarl	%cl, %edx
 11144 243d 4863D2   		movslq	%edx, %rdx
 11145 2440 498B14D3 		movq	(%r11,%rdx,8), %rdx
 11146 2444 0FB71472 		movzwl	(%rdx,%rsi,2), %edx
 11147              	.LVL1362:
4105:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11148              		.loc 1 4105 0
 11149 2448 89D6     		movl	%edx, %esi
4106:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 11150              		.loc 1 4106 0
 11151 244a 8850FF   		movb	%dl, -1(%rax)
4105:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11152              		.loc 1 4105 0
 11153 244d 66C1EE08 		shrw	$8, %si
 11154 2451 408870FE 		movb	%sil, -2(%rax)
 11155              	.LVL1363:
 11156              	.LBE768:
4102:fltk-1.3.4-1/png/pngrtran.c ****                {
 11157              		.loc 1 4102 0
 11158 2455 4839F8   		cmpq	%rdi, %rax
 11159 2458 75D6     		jne	.L1004
 11160 245a E9F1EBFF 		jmp	.L1512
 11160      FF
 11161              	.LVL1364:
 11162              	.L979:
3944:fltk-1.3.4-1/png/pngrtran.c ****             {
 11163              		.loc 1 3944 0
 11164 245f 80FA08   		cmpb	$8, %dl
 11165 2462 0F847106 		je	.L984
 11165      0000
 11166              	.LVL1365:
3961:fltk-1.3.4-1/png/pngrtran.c ****                {
 11167              		.loc 1 3961 0
 11168 2468 4585ED   		testl	%r13d, %r13d
 11169 246b 0F84DFEB 		je	.L1512
 11169      FFFF
 11170 2471 418D55FF 		leal	-1(%r13), %edx
 11171 2475 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 11172 2479 498D7456 		leaq	7(%r14,%rdx,2), %rsi
 11172      07
 11173              	.LVL1366:
 11174 247e 6690     		.p2align 4,,10
 11175              		.p2align 3
 11176              	.L987:
 11177              	.LBB769:
3965:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11178              		.loc 1 3965 0
 11179 2480 0FB65001 		movzbl	1(%rax), %edx
 11180 2484 0FB638   		movzbl	(%rax), %edi
 11181 2487 4883C006 		addq	$6, %rax
 11182              	.LVL1367:
 11183 248b D3FA     		sarl	%cl, %edx
 11184 248d 4863D2   		movslq	%edx, %rdx
 11185 2490 498B14D3 		movq	(%r11,%rdx,8), %rdx
 11186 2494 0FB7147A 		movzwl	(%rdx,%rdi,2), %edx
 11187              	.LVL1368:
3967:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 11188              		.loc 1 3967 0
 11189 2498 8850FB   		movb	%dl, -5(%rax)
 11190              	.LVL1369:
3966:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11191              		.loc 1 3966 0
 11192 249b 89D7     		movl	%edx, %edi
3970:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11193              		.loc 1 3970 0
 11194 249d 0FB650FD 		movzbl	-3(%rax), %edx
 11195              	.LVL1370:
3966:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11196              		.loc 1 3966 0
 11197 24a1 66C1EF08 		shrw	$8, %di
 11198              	.LVL1371:
 11199 24a5 408878FA 		movb	%dil, -6(%rax)
3970:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11200              		.loc 1 3970 0
 11201 24a9 0FB678FC 		movzbl	-4(%rax), %edi
 11202 24ad D3FA     		sarl	%cl, %edx
 11203 24af 4863D2   		movslq	%edx, %rdx
 11204 24b2 498B14D3 		movq	(%r11,%rdx,8), %rdx
 11205 24b6 0FB7147A 		movzwl	(%rdx,%rdi,2), %edx
 11206              	.LVL1372:
3972:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 11207              		.loc 1 3972 0
 11208 24ba 8850FD   		movb	%dl, -3(%rax)
3971:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11209              		.loc 1 3971 0
 11210 24bd 89D7     		movl	%edx, %edi
3975:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11211              		.loc 1 3975 0
 11212 24bf 0FB650FF 		movzbl	-1(%rax), %edx
 11213              	.LVL1373:
3971:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11214              		.loc 1 3971 0
 11215 24c3 66C1EF08 		shrw	$8, %di
 11216              	.LVL1374:
 11217 24c7 408878FC 		movb	%dil, -4(%rax)
3975:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11218              		.loc 1 3975 0
 11219 24cb 0FB678FE 		movzbl	-2(%rax), %edi
 11220 24cf D3FA     		sarl	%cl, %edx
 11221 24d1 4863D2   		movslq	%edx, %rdx
 11222 24d4 498B14D3 		movq	(%r11,%rdx,8), %rdx
 11223 24d8 0FB7147A 		movzwl	(%rdx,%rdi,2), %edx
 11224              	.LVL1375:
3976:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11225              		.loc 1 3976 0
 11226 24dc 89D7     		movl	%edx, %edi
3977:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 11227              		.loc 1 3977 0
 11228 24de 8850FF   		movb	%dl, -1(%rax)
3976:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11229              		.loc 1 3976 0
 11230 24e1 66C1EF08 		shrw	$8, %di
 11231 24e5 408878FE 		movb	%dil, -2(%rax)
 11232              	.LVL1376:
 11233              	.LBE769:
3961:fltk-1.3.4-1/png/pngrtran.c ****                {
 11234              		.loc 1 3961 0
 11235 24e9 4839F0   		cmpq	%rsi, %rax
 11236 24ec 7592     		jne	.L987
 11237 24ee E95DEBFF 		jmp	.L1512
 11237      FF
 11238              	.LVL1377:
 11239              	.L982:
4030:fltk-1.3.4-1/png/pngrtran.c ****             {
 11240              		.loc 1 4030 0
 11241 24f3 80FA08   		cmpb	$8, %dl
 11242 24f6 0F846605 		je	.L992
 11242      0000
 11243              	.LVL1378:
 11244 24fc 418D55FF 		leal	-1(%r13), %edx
4043:fltk-1.3.4-1/png/pngrtran.c ****                {
 11245              		.loc 1 4043 0
 11246 2500 4585ED   		testl	%r13d, %r13d
 11247 2503 498D7C96 		leaq	5(%r14,%rdx,4), %rdi
 11247      05
 11248 2508 0F8442EB 		je	.L1512
 11248      FFFF
 11249              	.LVL1379:
 11250 250e 6690     		.p2align 4,,10
 11251              		.p2align 3
 11252              	.L995:
 11253              	.LBB770:
4045:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11254              		.loc 1 4045 0
 11255 2510 0FB65001 		movzbl	1(%rax), %edx
 11256 2514 0FB630   		movzbl	(%rax), %esi
4048:fltk-1.3.4-1/png/pngrtran.c ****                }
 11257              		.loc 1 4048 0
 11258 2517 4883C004 		addq	$4, %rax
 11259              	.LVL1380:
4045:fltk-1.3.4-1/png/pngrtran.c ****                   *sp = (png_byte)((v >> 8) & 0xff);
 11260              		.loc 1 4045 0
 11261 251b D3FA     		sarl	%cl, %edx
 11262 251d 4863D2   		movslq	%edx, %rdx
 11263 2520 498B14D3 		movq	(%r11,%rdx,8), %rdx
 11264 2524 0FB71472 		movzwl	(%rdx,%rsi,2), %edx
 11265              	.LVL1381:
4046:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11266              		.loc 1 4046 0
 11267 2528 89D6     		movl	%edx, %esi
4047:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 4;
 11268              		.loc 1 4047 0
 11269 252a 8850FD   		movb	%dl, -3(%rax)
4046:fltk-1.3.4-1/png/pngrtran.c ****                   *(sp + 1) = (png_byte)(v & 0xff);
 11270              		.loc 1 4046 0
 11271 252d 66C1EE08 		shrw	$8, %si
 11272 2531 408870FC 		movb	%sil, -4(%rax)
 11273              	.LVL1382:
 11274              	.LBE770:
4043:fltk-1.3.4-1/png/pngrtran.c ****                {
 11275              		.loc 1 4043 0
 11276 2535 4839F8   		cmpq	%rdi, %rax
 11277 2538 75D6     		jne	.L995
 11278 253a E911EBFF 		jmp	.L1512
 11278      FF
 11279              	.LVL1383:
 11280              	.L812:
 11281              	.LBE778:
 11282              	.LBE817:
 11283              	.LBB818:
 11284              	.LBB734:
 11285              	.LBB722:
 11286              	.LBB711:
 11287              	.LBB698:
3054:fltk-1.3.4-1/png/pngrtran.c ****             {
 11288              		.loc 1 3054 0
 11289 253f 4531E4   		xorl	%r12d, %r12d
 11290 2542 31F6     		xorl	%esi, %esi
 11291 2544 4585D2   		testl	%r10d, %r10d
 11292 2547 4889D7   		movq	%rdx, %rdi
 11293 254a 0F841807 		je	.L1506
 11293      0000
 11294 2550 4189C0   		movl	%eax, %r8d
 11295 2553 EB16     		jmp	.L1341
 11296              	.LVL1384:
 11297              		.p2align 4,,10
 11298 2555 0F1F00   		.p2align 3
 11299              	.L1603:
 11300              	.LBB699:
3058:fltk-1.3.4-1/png/pngrtran.c **** 
 11301              		.loc 1 3058 0
 11302 2558 4883C203 		addq	$3, %rdx
 11303              	.LVL1385:
 11304 255c 4889CF   		movq	%rcx, %rdi
 11305              	.LVL1386:
 11306              	.L827:
 11307              	.LBE699:
3054:fltk-1.3.4-1/png/pngrtran.c ****             {
 11308              		.loc 1 3054 0
 11309 255f 83C601   		addl	$1, %esi
 11310              	.LVL1387:
 11311 2562 4139F2   		cmpl	%esi, %r10d
 11312 2565 0F8495F9 		je	.L1508
 11312      FFFF
 11313              	.LVL1388:
 11314              	.L1341:
 11315              	.LBB700:
3056:fltk-1.3.4-1/png/pngrtran.c ****                png_byte green = *(sp++);
 11316              		.loc 1 3056 0
 11317 256b 440FB60A 		movzbl	(%rdx), %r9d
 11318              	.LVL1389:
3057:fltk-1.3.4-1/png/pngrtran.c ****                png_byte blue  = *(sp++);
 11319              		.loc 1 3057 0
 11320 256f 440FB67A 		movzbl	1(%rdx), %r15d
 11320      01
 11321              	.LVL1390:
3070:fltk-1.3.4-1/png/pngrtran.c **** 
 11322              		.loc 1 3070 0
 11323 2574 488D4F01 		leaq	1(%rdi), %rcx
3058:fltk-1.3.4-1/png/pngrtran.c **** 
 11324              		.loc 1 3058 0
 11325 2578 0FB64202 		movzbl	2(%rdx), %eax
 11326              	.LVL1391:
3060:fltk-1.3.4-1/png/pngrtran.c ****                {
 11327              		.loc 1 3060 0
 11328 257c 4538F9   		cmpb	%r15b, %r9b
 11329 257f 751F     		jne	.L1173
 11330 2581 4138C1   		cmpb	%al, %r9b
 11331 2584 751A     		jne	.L1173
 11332              	.LVL1392:
3070:fltk-1.3.4-1/png/pngrtran.c **** 
 11333              		.loc 1 3070 0
 11334 2586 44880F   		movb	%r9b, (%rdi)
 11335              	.LVL1393:
 11336              	.L825:
3072:fltk-1.3.4-1/png/pngrtran.c ****                   *(dp++) = *(sp++);
 11337              		.loc 1 3072 0
 11338 2589 4584DB   		testb	%r11b, %r11b
 11339 258c 74CA     		je	.L1603
3073:fltk-1.3.4-1/png/pngrtran.c ****             }
 11340              		.loc 1 3073 0
 11341 258e 0FB64203 		movzbl	3(%rdx), %eax
 11342 2592 488D7901 		leaq	1(%rcx), %rdi
 11343              	.LVL1394:
 11344 2596 4883C204 		addq	$4, %rdx
 11345              	.LVL1395:
 11346 259a 8801     		movb	%al, (%rcx)
 11347 259c EBC1     		jmp	.L827
 11348              	.LVL1396:
 11349 259e 6690     		.p2align 4,,10
 11350              		.p2align 3
 11351              	.L1173:
3066:fltk-1.3.4-1/png/pngrtran.c ****                }
 11352              		.loc 1 3066 0
 11353 25a0 450FAFCD 		imull	%r13d, %r9d
 11354              	.LVL1397:
3062:fltk-1.3.4-1/png/pngrtran.c ****                   /* NOTE: this is the historical approach which simply
 11355              		.loc 1 3062 0
 11356 25a4 41BC0100 		movl	$1, %r12d
 11356      0000
3066:fltk-1.3.4-1/png/pngrtran.c ****                }
 11357              		.loc 1 3066 0
 11358 25aa 450FAFFE 		imull	%r14d, %r15d
 11359              	.LVL1398:
 11360 25ae 410FAFC0 		imull	%r8d, %eax
 11361              	.LVL1399:
 11362 25b2 4501F9   		addl	%r15d, %r9d
 11363 25b5 4401C8   		addl	%r9d, %eax
 11364 25b8 C1E80F   		shrl	$15, %eax
 11365 25bb 8807     		movb	%al, (%rdi)
 11366              	.LVL1400:
 11367 25bd EBCA     		jmp	.L825
 11368              	.LVL1401:
 11369              	.L1123:
 11370              	.LBE700:
 11371              	.LBE698:
 11372              	.LBE711:
 11373              	.LBE722:
 11374              	.LBE734:
 11375              	.LBE818:
 11376              	.LBB819:
 11377              	.LBB675:
 11378              	.LBB667:
2774:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp + (png_size_t)row_width;
 11379              		.loc 1 2774 0
 11380 25bf 89F2     		movl	%esi, %edx
 11381 25c1 488D0452 		leaq	(%rdx,%rdx,2), %rax
 11382              	.LVL1402:
 11383 25c5 4C01C0   		addq	%r8, %rax
 11384              	.LVL1403:
2775:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 11385              		.loc 1 2775 0
 11386 25c8 4801C2   		addq	%rax, %rdx
 11387              	.LVL1404:
2776:fltk-1.3.4-1/png/pngrtran.c ****             {
 11388              		.loc 1 2776 0
 11389 25cb 85F6     		testl	%esi, %esi
 11390 25cd 0F84D3F2 		je	.L1128
 11390      FFFF
 11391 25d3 8D7EFF   		leal	-1(%rsi), %edi
 11392 25d6 4989C7   		movq	%rax, %r15
 11393 25d9 488D3C7F 		leaq	(%rdi,%rdi,2), %rdi
 11394 25dd 4929FF   		subq	%rdi, %r15
 11395 25e0 4D8D47FD 		leaq	-3(%r15), %r8
 11396              	.LVL1405:
 11397              		.p2align 4,,10
 11398 25e4 0F1F4000 		.p2align 3
 11399              	.L1127:
2778:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11400              		.loc 1 2778 0
 11401 25e8 0FB678FF 		movzbl	-1(%rax), %edi
 11402 25ec 4883E803 		subq	$3, %rax
 11403              	.LVL1406:
 11404 25f0 4883EA04 		subq	$4, %rdx
 11405              	.LVL1407:
 11406 25f4 40887A03 		movb	%dil, 3(%rdx)
 11407              	.LVL1408:
2779:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11408              		.loc 1 2779 0
 11409 25f8 0FB67801 		movzbl	1(%rax), %edi
 11410 25fc 40887A02 		movb	%dil, 2(%rdx)
 11411              	.LVL1409:
2780:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
 11412              		.loc 1 2780 0
 11413 2600 0FB638   		movzbl	(%rax), %edi
 11414 2603 40887A01 		movb	%dil, 1(%rdx)
 11415              	.LVL1410:
2776:fltk-1.3.4-1/png/pngrtran.c ****             {
 11416              		.loc 1 2776 0
 11417 2607 4C39C0   		cmpq	%r8, %rax
2781:fltk-1.3.4-1/png/pngrtran.c ****             }
 11418              		.loc 1 2781 0
 11419 260a 880A     		movb	%cl, (%rdx)
2776:fltk-1.3.4-1/png/pngrtran.c ****             {
 11420              		.loc 1 2776 0
 11421 260c 75DA     		jne	.L1127
 11422 260e E993F2FF 		jmp	.L1128
 11422      FF
 11423              	.LVL1411:
 11424              	.L1129:
 11425              	.LBE667:
 11426              	.LBB668:
2818:fltk-1.3.4-1/png/pngrtran.c ****             png_bytep dp = sp  + (png_size_t)row_width * 2;
 11427              		.loc 1 2818 0
 11428 2613 89F2     		movl	%esi, %edx
 11429 2615 488D0412 		leaq	(%rdx,%rdx), %rax
 11430              	.LVL1412:
 11431 2619 4801C2   		addq	%rax, %rdx
 11432 261c 498D1450 		leaq	(%r8,%rdx,2), %rdx
 11433              	.LVL1413:
2819:fltk-1.3.4-1/png/pngrtran.c ****             for (i = 0; i < row_width; i++)
 11434              		.loc 1 2819 0
 11435 2620 4801D0   		addq	%rdx, %rax
 11436              	.LVL1414:
2820:fltk-1.3.4-1/png/pngrtran.c ****             {
 11437              		.loc 1 2820 0
 11438 2623 85F6     		testl	%esi, %esi
 11439 2625 0F8438E7 		je	.L1134
 11439      FFFF
 11440 262b 8D7EFF   		leal	-1(%rsi), %edi
 11441 262e 4989C7   		movq	%rax, %r15
 11442 2631 48C1E703 		salq	$3, %rdi
 11443 2635 4929FF   		subq	%rdi, %r15
 11444 2638 4D8D47F8 		leaq	-8(%r15), %r8
 11445              	.LVL1415:
 11446 263c 0F1F4000 		.p2align 4,,10
 11447              		.p2align 3
 11448              	.L1133:
2822:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11449              		.loc 1 2822 0
 11450 2640 0FB67AFF 		movzbl	-1(%rdx), %edi
 11451 2644 4883EA06 		subq	$6, %rdx
 11452              	.LVL1416:
 11453 2648 4883E808 		subq	$8, %rax
 11454              	.LVL1417:
 11455 264c 40887807 		movb	%dil, 7(%rax)
 11456              	.LVL1418:
2823:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11457              		.loc 1 2823 0
 11458 2650 0FB67A04 		movzbl	4(%rdx), %edi
 11459 2654 40887806 		movb	%dil, 6(%rax)
 11460              	.LVL1419:
2824:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11461              		.loc 1 2824 0
 11462 2658 0FB67A03 		movzbl	3(%rdx), %edi
 11463 265c 40887805 		movb	%dil, 5(%rax)
 11464              	.LVL1420:
2825:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11465              		.loc 1 2825 0
 11466 2660 0FB67A02 		movzbl	2(%rdx), %edi
 11467 2664 40887804 		movb	%dil, 4(%rax)
 11468              	.LVL1421:
2826:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = *(--sp);
 11469              		.loc 1 2826 0
 11470 2668 0FB67A01 		movzbl	1(%rdx), %edi
 11471 266c 40887803 		movb	%dil, 3(%rax)
 11472              	.LVL1422:
2827:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
 11473              		.loc 1 2827 0
 11474 2670 0FB63A   		movzbl	(%rdx), %edi
2828:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = lo_filler;
 11475              		.loc 1 2828 0
 11476 2673 44885001 		movb	%r10b, 1(%rax)
2827:fltk-1.3.4-1/png/pngrtran.c ****                *(--dp) = hi_filler;
 11477              		.loc 1 2827 0
 11478 2677 40887802 		movb	%dil, 2(%rax)
 11479              	.LVL1423:
2820:fltk-1.3.4-1/png/pngrtran.c ****             {
 11480              		.loc 1 2820 0
 11481 267b 4C39C0   		cmpq	%r8, %rax
2829:fltk-1.3.4-1/png/pngrtran.c ****             }
 11482              		.loc 1 2829 0
 11483 267e 8808     		movb	%cl, (%rax)
2820:fltk-1.3.4-1/png/pngrtran.c ****             {
 11484              		.loc 1 2820 0
 11485 2680 75BE     		jne	.L1133
 11486 2682 E9DCE6FF 		jmp	.L1134
 11486      FF
 11487              	.LVL1424:
 11488              	.L1053:
 11489              	.LBE668:
 11490              	.LBE675:
 11491              	.LBE819:
4919:fltk-1.3.4-1/png/pngrtran.c ****       png_do_unshift(row_info, png_ptr->row_buf + 1,
 11492              		.loc 1 4919 0
 11493 2687 A808     		testb	$8, %al
 11494 2689 0F84AFDA 		je	.L1060
 11494      FFFF
 11495              	.LVL1425:
 11496              	.LBB820:
 11497              	.LBB641:
 11498              	.LBB634:
2248:fltk-1.3.4-1/png/pngrtran.c **** 
 11499              		.loc 1 2248 0
 11500 268f 0FB67D11 		movzbl	17(%rbp), %edi
 11501              	.LVL1426:
 11502 2693 4189FA   		movl	%edi, %r10d
 11503              	.LVL1427:
 11504 2696 E98FE0FF 		jmp	.L1155
 11504      FF
 11505              	.LVL1428:
 11506 269b 0F1F4400 		.p2align 4,,10
 11506      00
 11507              		.p2align 3
 11508              	.L1163:
 11509              	.LBE634:
 11510              	.LBE641:
 11511              	.LBE820:
 11512              	.LBB821:
 11513              	.LBB735:
 11514              	.LBB723:
 11515              	.LBB712:
 11516              	.LBB701:
3087:fltk-1.3.4-1/png/pngrtran.c ****             {
 11517              		.loc 1 3087 0
 11518 26a0 4531E4   		xorl	%r12d, %r12d
 11519 26a3 E9E9EDFF 		jmp	.L815
 11519      FF
 11520              	.LVL1429:
 11521              	.L1176:
 11522              	.LBE701:
 11523              	.LBE712:
 11524              	.LBE723:
 11525              	.LBE735:
 11526              	.LBE821:
 11527              	.LBB822:
 11528              	.LBB594:
3680:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11529              		.loc 1 3680 0
 11530 26a8 4585DB   		testl	%r11d, %r11d
 11531 26ab 0F841FFC 		je	.L860
 11531      FFFF
 11532 26b1 418D43FF 		leal	-1(%r11), %eax
 11533              	.LBB547:
 11534              	.LBB548:
 11535              	.LBB549:
3697:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11536              		.loc 1 3697 0
 11537 26b5 41B8FFFF 		movl	$65535, %r8d
 11537      0000
 11538              	.LVL1430:
 11539 26bb 498D7C86 		leaq	5(%r14,%rax,4), %rdi
 11539      05
 11540              	.LVL1431:
 11541 26c0 EB26     		jmp	.L941
 11542              	.LVL1432:
 11543              		.p2align 4,,10
 11544 26c2 660F1F44 		.p2align 3
 11544      0000
 11545              	.L1604:
 11546              	.LBE549:
 11547              	.LBE548:
3687:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 11548              		.loc 1 3687 0
 11549 26c8 0FB68391 		movzbl	657(%rbx), %eax
 11549      020000
 11550              	.LVL1433:
 11551 26cf 8802     		movb	%al, (%rdx)
3689:fltk-1.3.4-1/png/pngrtran.c ****                      }
 11552              		.loc 1 3689 0
 11553 26d1 0FB78390 		movzwl	656(%rbx), %eax
 11553      020000
 11554 26d8 884201   		movb	%al, 1(%rdx)
 11555              	.LVL1434:
 11556              	.L940:
 11557              	.LBE547:
3680:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11558              		.loc 1 3680 0
 11559 26db 4883C204 		addq	$4, %rdx
 11560              	.LVL1435:
 11561 26df 4839FA   		cmpq	%rdi, %rdx
 11562 26e2 0F8430E8 		je	.L848
 11562      FFFF
 11563              	.L941:
 11564              	.LBB552:
3682:fltk-1.3.4-1/png/pngrtran.c ****                          + *(sp + 3));
 11565              		.loc 1 3682 0
 11566 26e8 0FB64202 		movzbl	2(%rdx), %eax
 11567 26ec C1E008   		sall	$8, %eax
 11568 26ef 89C1     		movl	%eax, %ecx
 11569 26f1 0FB64203 		movzbl	3(%rdx), %eax
 11570              	.LVL1436:
3685:fltk-1.3.4-1/png/pngrtran.c ****                      {
 11571              		.loc 1 3685 0
 11572 26f5 6601C8   		addw	%cx, %ax
 11573              	.LVL1437:
 11574 26f8 74CE     		je	.L1604
3692:fltk-1.3.4-1/png/pngrtran.c ****                      {
 11575              		.loc 1 3692 0
 11576 26fa 6683F8FF 		cmpw	$-1, %ax
 11577 26fe 74DB     		je	.L940
 11578              	.LVL1438:
 11579              	.LBB551:
 11580              	.LBB550:
3697:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11581              		.loc 1 3697 0
 11582 2700 0FB60A   		movzbl	(%rdx), %ecx
 11583 2703 0FB67201 		movzbl	1(%rdx), %esi
 11584 2707 0FB7C0   		movzwl	%ax, %eax
 11585 270a 4589C7   		movl	%r8d, %r15d
 11586 270d 4129C7   		subl	%eax, %r15d
 11587 2710 C1E108   		sall	$8, %ecx
 11588 2713 01F1     		addl	%esi, %ecx
 11589 2715 0FB7B390 		movzwl	656(%rbx), %esi
 11589      020000
 11590 271c 0FB7C9   		movzwl	%cx, %ecx
 11591 271f 0FAFC8   		imull	%eax, %ecx
 11592 2722 4489F8   		movl	%r15d, %eax
 11593              	.LVL1439:
 11594 2725 0FAFC6   		imull	%esi, %eax
 11595 2728 8D840100 		leal	32768(%rcx,%rax), %eax
 11595      800000
 11596              	.LVL1440:
 11597 272f 89C1     		movl	%eax, %ecx
 11598 2731 C1E910   		shrl	$16, %ecx
 11599 2734 01C8     		addl	%ecx, %eax
 11600              	.LVL1441:
 11601 2736 C1E810   		shrl	$16, %eax
 11602              	.LVL1442:
 11603              	.LBE550:
3698:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 11604              		.loc 1 3698 0
 11605 2739 89C1     		movl	%eax, %ecx
3699:fltk-1.3.4-1/png/pngrtran.c ****                      }
 11606              		.loc 1 3699 0
 11607 273b 884201   		movb	%al, 1(%rdx)
 11608              	.LVL1443:
3698:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 11609              		.loc 1 3698 0
 11610 273e 66C1E908 		shrw	$8, %cx
 11611 2742 880A     		movb	%cl, (%rdx)
 11612 2744 EB95     		jmp	.L940
 11613              	.LVL1444:
 11614              	.L1178:
 11615              	.LBE551:
 11616              	.LBE552:
3864:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11617              		.loc 1 3864 0
 11618 2746 4585DB   		testl	%r11d, %r11d
 11619 2749 0F8481FB 		je	.L860
 11619      FFFF
 11620 274f 418D43FF 		leal	-1(%r11), %eax
 11621              	.LBB553:
 11622              	.LBB554:
 11623              	.LBB555:
3892:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11624              		.loc 1 3892 0
 11625 2753 41B9FFFF 		movl	$65535, %r9d
 11625      0000
 11626              	.LVL1445:
 11627 2759 4D8D44C6 		leaq	9(%r14,%rax,8), %r8
 11627      09
 11628              	.LVL1446:
 11629 275e EB48     		jmp	.L968
 11630              	.LVL1447:
 11631              		.p2align 4,,10
 11632              		.p2align 3
 11633              	.L1605:
 11634              	.LBE555:
 11635              	.LBE554:
3871:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
 11636              		.loc 1 3871 0
 11637 2760 0FB6838B 		movzbl	651(%rbx), %eax
 11637      020000
 11638              	.LVL1448:
 11639 2767 8802     		movb	%al, (%rdx)
3872:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
 11640              		.loc 1 3872 0
 11641 2769 0FB7838A 		movzwl	650(%rbx), %eax
 11641      020000
 11642 2770 884201   		movb	%al, 1(%rdx)
3873:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 11643              		.loc 1 3873 0
 11644 2773 0FB6838D 		movzbl	653(%rbx), %eax
 11644      020000
 11645 277a 884202   		movb	%al, 2(%rdx)
3875:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 11646              		.loc 1 3875 0
 11647 277d 0FB7838C 		movzwl	652(%rbx), %eax
 11647      020000
 11648 2784 884203   		movb	%al, 3(%rdx)
3877:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 11649              		.loc 1 3877 0
 11650 2787 0FB6838F 		movzbl	655(%rbx), %eax
 11650      020000
 11651 278e 884204   		movb	%al, 4(%rdx)
3879:fltk-1.3.4-1/png/pngrtran.c ****                      }
 11652              		.loc 1 3879 0
 11653 2791 0FB7838E 		movzwl	654(%rbx), %eax
 11653      020000
 11654 2798 884205   		movb	%al, 5(%rdx)
 11655              	.L967:
 11656              	.LBE553:
3864:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11657              		.loc 1 3864 0
 11658 279b 4883C208 		addq	$8, %rdx
 11659              	.LVL1449:
 11660 279f 4C39C2   		cmpq	%r8, %rdx
 11661 27a2 0F8470E7 		je	.L848
 11661      FFFF
 11662              	.L968:
 11663              	.LBB567:
3866:fltk-1.3.4-1/png/pngrtran.c ****                          << 8) + (png_uint_16)(*(sp + 7)));
 11664              		.loc 1 3866 0
 11665 27a8 0FB64206 		movzbl	6(%rdx), %eax
 11666 27ac 0FB64A07 		movzbl	7(%rdx), %ecx
 11667 27b0 C1E008   		sall	$8, %eax
 11668              	.LVL1450:
3869:fltk-1.3.4-1/png/pngrtran.c ****                      {
 11669              		.loc 1 3869 0
 11670 27b3 6601C8   		addw	%cx, %ax
 11671              	.LVL1451:
 11672 27b6 74A8     		je	.L1605
3882:fltk-1.3.4-1/png/pngrtran.c ****                      {
 11673              		.loc 1 3882 0
 11674 27b8 6683F8FF 		cmpw	$-1, %ax
 11675 27bc 74DD     		je	.L967
 11676              	.LVL1452:
 11677              	.LBB566:
3887:fltk-1.3.4-1/png/pngrtran.c ****                             + *(sp + 3));
 11678              		.loc 1 3887 0
 11679 27be 0FB67202 		movzbl	2(%rdx), %esi
 11680 27c2 0FB64A03 		movzbl	3(%rdx), %ecx
 11681              	.LBB556:
3892:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11682              		.loc 1 3892 0
 11683 27c6 0FB7C0   		movzwl	%ax, %eax
 11684              	.LBE556:
3889:fltk-1.3.4-1/png/pngrtran.c ****                             + *(sp + 5));
 11685              		.loc 1 3889 0
 11686 27c9 0FB67A05 		movzbl	5(%rdx), %edi
 11687              	.LBB557:
3892:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11688              		.loc 1 3892 0
 11689 27cd 440FB65A 		movzbl	1(%rdx), %r11d
 11689      01
 11690 27d2 4589CA   		movl	%r9d, %r10d
 11691 27d5 4129C2   		subl	%eax, %r10d
 11692              	.LBE557:
3887:fltk-1.3.4-1/png/pngrtran.c ****                             + *(sp + 3));
 11693              		.loc 1 3887 0
 11694 27d8 C1E608   		sall	$8, %esi
 11695 27db 01CE     		addl	%ecx, %esi
 11696              	.LVL1453:
3889:fltk-1.3.4-1/png/pngrtran.c ****                             + *(sp + 5));
 11697              		.loc 1 3889 0
 11698 27dd 0FB64A04 		movzbl	4(%rdx), %ecx
 11699              	.LBB558:
3896:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
 11700              		.loc 1 3896 0
 11701 27e1 0FB7F6   		movzwl	%si, %esi
 11702 27e4 0FAFF0   		imull	%eax, %esi
 11703              	.LVL1454:
 11704              	.LBE558:
3889:fltk-1.3.4-1/png/pngrtran.c ****                             + *(sp + 5));
 11705              		.loc 1 3889 0
 11706 27e7 C1E108   		sall	$8, %ecx
 11707 27ea 01F9     		addl	%edi, %ecx
 11708              	.LVL1455:
 11709              	.LBB559:
3892:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11710              		.loc 1 3892 0
 11711 27ec 0FB63A   		movzbl	(%rdx), %edi
 11712              	.LBE559:
 11713              	.LBB560:
3900:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 11714              		.loc 1 3900 0
 11715 27ef 0FB7C9   		movzwl	%cx, %ecx
 11716              	.LBE560:
 11717              	.LBB561:
3892:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11718              		.loc 1 3892 0
 11719 27f2 C1E708   		sall	$8, %edi
 11720 27f5 4401DF   		addl	%r11d, %edi
 11721 27f8 440FB79B 		movzwl	650(%rbx), %r11d
 11721      8A020000 
 11722 2800 0FB7FF   		movzwl	%di, %edi
 11723 2803 0FAFF8   		imull	%eax, %edi
 11724              	.LBE561:
 11725              	.LBB562:
3900:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 11726              		.loc 1 3900 0
 11727 2806 0FAFC1   		imull	%ecx, %eax
 11728              	.LVL1456:
 11729              	.LBE562:
 11730              	.LBB563:
3892:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)((v >> 8) & 0xff);
 11731              		.loc 1 3892 0
 11732 2809 450FAFDA 		imull	%r10d, %r11d
 11733 280d 428DBC1F 		leal	32768(%rdi,%r11), %edi
 11733      00800000 
 11734              	.LVL1457:
 11735 2815 4189FB   		movl	%edi, %r11d
 11736 2818 41C1EB10 		shrl	$16, %r11d
 11737 281c 4401DF   		addl	%r11d, %edi
 11738              	.LVL1458:
 11739 281f C1EF10   		shrl	$16, %edi
 11740              	.LVL1459:
 11741              	.LBE563:
3893:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 11742              		.loc 1 3893 0
 11743 2822 4189FB   		movl	%edi, %r11d
3894:fltk-1.3.4-1/png/pngrtran.c **** 
 11744              		.loc 1 3894 0
 11745 2825 40887A01 		movb	%dil, 1(%rdx)
 11746              	.LVL1460:
3893:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(v & 0xff);
 11747              		.loc 1 3893 0
 11748 2829 6641C1EB 		shrw	$8, %r11w
 11748      08
 11749 282e 44881A   		movb	%r11b, (%rdx)
 11750              	.LBB564:
3896:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((v >> 8) & 0xff);
 11751              		.loc 1 3896 0
 11752 2831 0FB7BB8C 		movzwl	652(%rbx), %edi
 11752      020000
 11753              	.LVL1461:
 11754 2838 410FAFFA 		imull	%r10d, %edi
 11755 283c 8DB43700 		leal	32768(%rdi,%rsi), %esi
 11755      800000
 11756              	.LVL1462:
 11757 2843 89F7     		movl	%esi, %edi
 11758 2845 C1EF10   		shrl	$16, %edi
 11759 2848 01FE     		addl	%edi, %esi
 11760              	.LVL1463:
 11761 284a C1EE10   		shrl	$16, %esi
 11762              	.LVL1464:
 11763              	.LBE564:
3897:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
 11764              		.loc 1 3897 0
 11765 284d 89F7     		movl	%esi, %edi
3898:fltk-1.3.4-1/png/pngrtran.c **** 
 11766              		.loc 1 3898 0
 11767 284f 40887203 		movb	%sil, 3(%rdx)
3897:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 3) = (png_byte)(v & 0xff);
 11768              		.loc 1 3897 0
 11769 2853 66C1EF08 		shrw	$8, %di
 11770 2857 40887A02 		movb	%dil, 2(%rdx)
 11771              	.LBB565:
3900:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 4) = (png_byte)((v >> 8) & 0xff);
 11772              		.loc 1 3900 0
 11773 285b 0FB7B38E 		movzwl	654(%rbx), %esi
 11773      020000
 11774              	.LVL1465:
 11775 2862 440FAFD6 		imull	%esi, %r10d
 11776 2866 418D8402 		leal	32768(%r10,%rax), %eax
 11776      00800000 
 11777              	.LVL1466:
 11778 286e 89C1     		movl	%eax, %ecx
 11779              	.LVL1467:
 11780 2870 C1E910   		shrl	$16, %ecx
 11781 2873 01C8     		addl	%ecx, %eax
 11782              	.LVL1468:
 11783 2875 C1E810   		shrl	$16, %eax
 11784              	.LVL1469:
 11785              	.LBE565:
3901:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
 11786              		.loc 1 3901 0
 11787 2878 89C1     		movl	%eax, %ecx
3902:fltk-1.3.4-1/png/pngrtran.c ****                      }
 11788              		.loc 1 3902 0
 11789 287a 884205   		movb	%al, 5(%rdx)
3901:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 5) = (png_byte)(v & 0xff);
 11790              		.loc 1 3901 0
 11791 287d 66C1E908 		shrw	$8, %cx
 11792 2881 884A04   		movb	%cl, 4(%rdx)
 11793 2884 E912FFFF 		jmp	.L967
 11793      FF
 11794              	.LVL1470:
 11795              	.L1579:
 11796              	.LBE566:
 11797              	.LBE567:
3552:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11798              		.loc 1 3552 0
 11799 2889 4585DB   		testl	%r11d, %r11d
 11800 288c 0F843EFA 		je	.L860
 11800      FFFF
 11801 2892 418D43FF 		leal	-1(%r11), %eax
 11802 2896 488D0440 		leaq	(%rax,%rax,2), %rax
 11803 289a 498D7446 		leaq	7(%r14,%rax,2), %rsi
 11803      07
 11804              	.LVL1471:
 11805 289f EB14     		jmp	.L918
 11806              	.LVL1472:
 11807              		.p2align 4,,10
 11808 28a1 0F1F8000 		.p2align 3
 11808      000000
 11809              	.L917:
 11810 28a8 4883C206 		addq	$6, %rdx
 11811              	.LVL1473:
 11812 28ac 4839F2   		cmpq	%rsi, %rdx
 11813 28af 0F8463E6 		je	.L848
 11813      FFFF
 11814              	.L918:
 11815              	.LVL1474:
 11816              	.LBB568:
3562:fltk-1.3.4-1/png/pngrtran.c ****                          g == png_ptr->trans_color.green &&
 11817              		.loc 1 3562 0
 11818 28b5 0FB602   		movzbl	(%rdx), %eax
 11819 28b8 0FB64A01 		movzbl	1(%rdx), %ecx
 11820 28bc C1E008   		sall	$8, %eax
 11821 28bf 01C8     		addl	%ecx, %eax
 11822 28c1 663B8302 		cmpw	770(%rbx), %ax
 11822      030000
 11823 28c8 75DE     		jne	.L917
 11824 28ca 0FB64202 		movzbl	2(%rdx), %eax
 11825 28ce C1E008   		sall	$8, %eax
 11826 28d1 89C1     		movl	%eax, %ecx
 11827 28d3 0FB64203 		movzbl	3(%rdx), %eax
 11828 28d7 01C8     		addl	%ecx, %eax
 11829 28d9 663B8304 		cmpw	772(%rbx), %ax
 11829      030000
 11830 28e0 75C6     		jne	.L917
3563:fltk-1.3.4-1/png/pngrtran.c ****                          b == png_ptr->trans_color.blue)
 11831              		.loc 1 3563 0
 11832 28e2 0FB64204 		movzbl	4(%rdx), %eax
 11833 28e6 C1E008   		sall	$8, %eax
 11834 28e9 89C1     		movl	%eax, %ecx
 11835 28eb 0FB64205 		movzbl	5(%rdx), %eax
 11836 28ef 01C8     		addl	%ecx, %eax
 11837 28f1 663B8306 		cmpw	774(%rbx), %ax
 11837      030000
 11838 28f8 75AE     		jne	.L917
3566:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)(png_ptr->background.red & 0xff);
 11839              		.loc 1 3566 0
 11840 28fa 0FB6838B 		movzbl	651(%rbx), %eax
 11840      020000
 11841 2901 8802     		movb	%al, (%rdx)
 11842              	.LVL1475:
3567:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)((png_ptr->background.green >> 8)
 11843              		.loc 1 3567 0
 11844 2903 0FB7838A 		movzwl	650(%rbx), %eax
 11844      020000
 11845 290a 884201   		movb	%al, 1(%rdx)
3568:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 11846              		.loc 1 3568 0
 11847 290d 0FB6838D 		movzbl	653(%rbx), %eax
 11847      020000
 11848 2914 884202   		movb	%al, 2(%rdx)
 11849              	.LVL1476:
3570:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 11850              		.loc 1 3570 0
 11851 2917 0FB7838C 		movzwl	652(%rbx), %eax
 11851      020000
 11852 291e 884203   		movb	%al, 3(%rdx)
3572:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 11853              		.loc 1 3572 0
 11854 2921 0FB6838F 		movzbl	655(%rbx), %eax
 11854      020000
 11855 2928 884204   		movb	%al, 4(%rdx)
 11856              	.LVL1477:
3574:fltk-1.3.4-1/png/pngrtran.c ****                      }
 11857              		.loc 1 3574 0
 11858 292b 0FB7838E 		movzwl	654(%rbx), %eax
 11858      020000
 11859 2932 884205   		movb	%al, 5(%rdx)
 11860 2935 E96EFFFF 		jmp	.L917
 11860      FF
 11861              	.LVL1478:
 11862              	.L782:
 11863              	.LBE568:
 11864              	.LBE594:
 11865              	.LBE822:
 11866              	.LBB823:
 11867              	.LBB761:
4210:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11868              		.loc 1 4210 0
 11869 293a 418D51FF 		leal	-1(%r9), %edx
4212:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 11870              		.loc 1 4212 0
 11871 293e 418D4907 		leal	7(%r9), %ecx
4211:fltk-1.3.4-1/png/pngrtran.c ****                shift = 7 - (int)((row_width + 7) & 0x07);
 11872              		.loc 1 4211 0
 11873 2942 4589CC   		movl	%r9d, %r12d
 11874 2945 4A8D4426 		leaq	-1(%rsi,%r12), %rax
 11874      FF
4210:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11875              		.loc 1 4210 0
 11876 294a 4189D5   		movl	%edx, %r13d
4212:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 11877              		.loc 1 4212 0
 11878 294d F7D1     		notl	%ecx
4210:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11879              		.loc 1 4210 0
 11880 294f 41C1ED03 		shrl	$3, %r13d
4212:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 11881              		.loc 1 4212 0
 11882 2953 83E107   		andl	$7, %ecx
4210:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11883              		.loc 1 4210 0
 11884 2956 4901F5   		addq	%rsi, %r13
 11885              	.LVL1479:
4213:fltk-1.3.4-1/png/pngrtran.c ****                {
 11886              		.loc 1 4213 0
 11887 2959 4585C9   		testl	%r9d, %r9d
 11888 295c 0F84F1EB 		je	.L783
 11888      FFFF
 11889 2962 4189D6   		movl	%edx, %r14d
 11890 2965 4989C3   		movq	%rax, %r11
 11891 2968 49F7D6   		notq	%r14
 11892 296b 4901C6   		addq	%rax, %r14
 11893 296e EB10     		jmp	.L788
 11894              	.LVL1480:
 11895              		.p2align 4,,10
 11896              		.p2align 3
 11897              	.L786:
4228:fltk-1.3.4-1/png/pngrtran.c **** 
 11898              		.loc 1 4228 0
 11899 2970 83C101   		addl	$1, %ecx
 11900              	.LVL1481:
 11901              	.L787:
4230:fltk-1.3.4-1/png/pngrtran.c ****                }
 11902              		.loc 1 4230 0
 11903 2973 4983EB01 		subq	$1, %r11
 11904              	.LVL1482:
4213:fltk-1.3.4-1/png/pngrtran.c ****                {
 11905              		.loc 1 4213 0
 11906 2977 4D39F3   		cmpq	%r14, %r11
 11907 297a 0F84D3EB 		je	.L783
 11907      FFFF
 11908              	.LVL1483:
 11909              	.L788:
4215:fltk-1.3.4-1/png/pngrtran.c ****                      *dp = 1;
 11910              		.loc 1 4215 0
 11911 2980 410FB655 		movzbl	0(%r13), %edx
 11911      00
 11912 2985 D3FA     		sarl	%cl, %edx
4216:fltk-1.3.4-1/png/pngrtran.c **** 
 11913              		.loc 1 4216 0
 11914 2987 83E201   		andl	$1, %edx
4221:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11915              		.loc 1 4221 0
 11916 298a 83F907   		cmpl	$7, %ecx
4216:fltk-1.3.4-1/png/pngrtran.c **** 
 11917              		.loc 1 4216 0
 11918 298d 418813   		movb	%dl, (%r11)
4221:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11919              		.loc 1 4221 0
 11920 2990 75DE     		jne	.L786
 11921              	.LVL1484:
4224:fltk-1.3.4-1/png/pngrtran.c ****                   }
 11922              		.loc 1 4224 0
 11923 2992 4983ED01 		subq	$1, %r13
 11924              	.LVL1485:
4223:fltk-1.3.4-1/png/pngrtran.c ****                      sp--;
 11925              		.loc 1 4223 0
 11926 2996 31C9     		xorl	%ecx, %ecx
 11927 2998 EBD9     		jmp	.L787
 11928              	.LVL1486:
 11929              	.L781:
4260:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11930              		.loc 1 4260 0
 11931 299a 418D51FF 		leal	-1(%r9), %edx
4262:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 11932              		.loc 1 4262 0
 11933 299e 4489C9   		movl	%r9d, %ecx
4261:fltk-1.3.4-1/png/pngrtran.c ****                shift = (int)((row_width & 0x01) << 2);
 11934              		.loc 1 4261 0
 11935 29a1 4589CC   		movl	%r9d, %r12d
4262:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 11936              		.loc 1 4262 0
 11937 29a4 83E101   		andl	$1, %ecx
4261:fltk-1.3.4-1/png/pngrtran.c ****                shift = (int)((row_width & 0x01) << 2);
 11938              		.loc 1 4261 0
 11939 29a7 4A8D4426 		leaq	-1(%rsi,%r12), %rax
 11939      FF
4260:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11940              		.loc 1 4260 0
 11941 29ac 4189D5   		movl	%edx, %r13d
4262:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 11942              		.loc 1 4262 0
 11943 29af C1E102   		sall	$2, %ecx
4260:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11944              		.loc 1 4260 0
 11945 29b2 41D1ED   		shrl	%r13d
 11946 29b5 4901F5   		addq	%rsi, %r13
 11947              	.LVL1487:
4263:fltk-1.3.4-1/png/pngrtran.c ****                {
 11948              		.loc 1 4263 0
 11949 29b8 4585C9   		testl	%r9d, %r9d
 11950 29bb 0F8492EB 		je	.L783
 11950      FFFF
 11951 29c1 4189D6   		movl	%edx, %r14d
 11952 29c4 4989C3   		movq	%rax, %r11
 11953 29c7 49F7D6   		notq	%r14
 11954 29ca 4901C6   		addq	%rax, %r14
 11955 29cd EB11     		jmp	.L794
 11956              	.LVL1488:
 11957 29cf 90       		.p2align 4,,10
 11958              		.p2align 3
 11959              	.L792:
4274:fltk-1.3.4-1/png/pngrtran.c **** 
 11960              		.loc 1 4274 0
 11961 29d0 83C104   		addl	$4, %ecx
 11962              	.LVL1489:
 11963              	.L793:
4276:fltk-1.3.4-1/png/pngrtran.c ****                }
 11964              		.loc 1 4276 0
 11965 29d3 4983EB01 		subq	$1, %r11
 11966              	.LVL1490:
4263:fltk-1.3.4-1/png/pngrtran.c ****                {
 11967              		.loc 1 4263 0
 11968 29d7 4D39F3   		cmpq	%r14, %r11
 11969 29da 0F8473EB 		je	.L783
 11969      FFFF
 11970              	.LVL1491:
 11971              	.L794:
4266:fltk-1.3.4-1/png/pngrtran.c ****                   if (shift == 4)
 11972              		.loc 1 4266 0
 11973 29e0 410FB655 		movzbl	0(%r13), %edx
 11973      00
 11974 29e5 D3FA     		sarl	%cl, %edx
 11975 29e7 83E20F   		andl	$15, %edx
4267:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11976              		.loc 1 4267 0
 11977 29ea 83F904   		cmpl	$4, %ecx
4266:fltk-1.3.4-1/png/pngrtran.c ****                   if (shift == 4)
 11978              		.loc 1 4266 0
 11979 29ed 418813   		movb	%dl, (%r11)
 11980              	.LVL1492:
4267:fltk-1.3.4-1/png/pngrtran.c ****                   {
 11981              		.loc 1 4267 0
 11982 29f0 75DE     		jne	.L792
 11983              	.LVL1493:
4270:fltk-1.3.4-1/png/pngrtran.c ****                   }
 11984              		.loc 1 4270 0
 11985 29f2 4983ED01 		subq	$1, %r13
 11986              	.LVL1494:
4269:fltk-1.3.4-1/png/pngrtran.c ****                      sp--;
 11987              		.loc 1 4269 0
 11988 29f6 31C9     		xorl	%ecx, %ecx
 11989 29f8 EBD9     		jmp	.L793
 11990              	.LVL1495:
 11991              	.L780:
4237:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11992              		.loc 1 4237 0
 11993 29fa 418D51FF 		leal	-1(%r9), %edx
4239:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 11994              		.loc 1 4239 0
 11995 29fe 418D4903 		leal	3(%r9), %ecx
4238:fltk-1.3.4-1/png/pngrtran.c ****                shift = (int)((3 - ((row_width + 3) & 0x03)) << 1);
 11996              		.loc 1 4238 0
 11997 2a02 4589CC   		movl	%r9d, %r12d
 11998 2a05 4A8D4426 		leaq	-1(%rsi,%r12), %rax
 11998      FF
4237:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 11999              		.loc 1 4237 0
 12000 2a0a 4189D5   		movl	%edx, %r13d
4239:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 12001              		.loc 1 4239 0
 12002 2a0d F7D1     		notl	%ecx
4237:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 12003              		.loc 1 4237 0
 12004 2a0f 41C1ED02 		shrl	$2, %r13d
4239:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 12005              		.loc 1 4239 0
 12006 2a13 83E103   		andl	$3, %ecx
4237:fltk-1.3.4-1/png/pngrtran.c ****                dp = row + (png_size_t)row_width - 1;
 12007              		.loc 1 4237 0
 12008 2a16 4901F5   		addq	%rsi, %r13
 12009              	.LVL1496:
4239:fltk-1.3.4-1/png/pngrtran.c ****                for (i = 0; i < row_width; i++)
 12010              		.loc 1 4239 0
 12011 2a19 01C9     		addl	%ecx, %ecx
 12012              	.LVL1497:
4240:fltk-1.3.4-1/png/pngrtran.c ****                {
 12013              		.loc 1 4240 0
 12014 2a1b 4585C9   		testl	%r9d, %r9d
 12015 2a1e 0F842FEB 		je	.L783
 12015      FFFF
 12016 2a24 4189D6   		movl	%edx, %r14d
 12017 2a27 4989C3   		movq	%rax, %r11
 12018 2a2a 49F7D6   		notq	%r14
 12019 2a2d 4901C6   		addq	%rax, %r14
 12020 2a30 EB16     		jmp	.L791
 12021              	.LVL1498:
 12022              		.p2align 4,,10
 12023 2a32 660F1F44 		.p2align 3
 12023      0000
 12024              	.L789:
4251:fltk-1.3.4-1/png/pngrtran.c **** 
 12025              		.loc 1 4251 0
 12026 2a38 83C102   		addl	$2, %ecx
 12027              	.LVL1499:
 12028              	.L790:
4253:fltk-1.3.4-1/png/pngrtran.c ****                }
 12029              		.loc 1 4253 0
 12030 2a3b 4983EB01 		subq	$1, %r11
 12031              	.LVL1500:
4240:fltk-1.3.4-1/png/pngrtran.c ****                {
 12032              		.loc 1 4240 0
 12033 2a3f 4D39F3   		cmpq	%r14, %r11
 12034 2a42 0F840BEB 		je	.L783
 12034      FFFF
 12035              	.LVL1501:
 12036              	.L791:
4243:fltk-1.3.4-1/png/pngrtran.c ****                   if (shift == 6)
 12037              		.loc 1 4243 0
 12038 2a48 410FB655 		movzbl	0(%r13), %edx
 12038      00
 12039 2a4d D3FA     		sarl	%cl, %edx
 12040 2a4f 83E203   		andl	$3, %edx
4244:fltk-1.3.4-1/png/pngrtran.c ****                   {
 12041              		.loc 1 4244 0
 12042 2a52 83F906   		cmpl	$6, %ecx
4243:fltk-1.3.4-1/png/pngrtran.c ****                   if (shift == 6)
 12043              		.loc 1 4243 0
 12044 2a55 418813   		movb	%dl, (%r11)
 12045              	.LVL1502:
4244:fltk-1.3.4-1/png/pngrtran.c ****                   {
 12046              		.loc 1 4244 0
 12047 2a58 75DE     		jne	.L789
 12048              	.LVL1503:
4247:fltk-1.3.4-1/png/pngrtran.c ****                   }
 12049              		.loc 1 4247 0
 12050 2a5a 4983ED01 		subq	$1, %r13
 12051              	.LVL1504:
4246:fltk-1.3.4-1/png/pngrtran.c ****                      sp--;
 12052              		.loc 1 4246 0
 12053 2a5e 31C9     		xorl	%ecx, %ecx
 12054 2a60 EBD9     		jmp	.L790
 12055              	.LVL1505:
 12056              	.L992:
 12057              	.LBE761:
 12058              	.LBE823:
 12059              	.LBB824:
 12060              	.LBB779:
4033:fltk-1.3.4-1/png/pngrtran.c ****                {
 12061              		.loc 1 4033 0
 12062 2a62 4585ED   		testl	%r13d, %r13d
 12063 2a65 0F84E5E5 		je	.L1512
 12063      FFFF
 12064 2a6b 418D55FF 		leal	-1(%r13), %edx
 12065 2a6f 498D4C56 		leaq	3(%r14,%rdx,2), %rcx
 12065      03
 12066              	.LVL1506:
 12067              		.p2align 4,,10
 12068 2a74 0F1F4000 		.p2align 3
 12069              	.L994:
4035:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 12070              		.loc 1 4035 0
 12071 2a78 0FB610   		movzbl	(%rax), %edx
4036:fltk-1.3.4-1/png/pngrtran.c ****                }
 12072              		.loc 1 4036 0
 12073 2a7b 4883C002 		addq	$2, %rax
 12074              	.LVL1507:
4035:fltk-1.3.4-1/png/pngrtran.c ****                   sp += 2;
 12075              		.loc 1 4035 0
 12076 2a7f 410FB614 		movzbl	(%r12,%rdx), %edx
 12076      14
 12077 2a84 8850FE   		movb	%dl, -2(%rax)
 12078              	.LVL1508:
4033:fltk-1.3.4-1/png/pngrtran.c ****                {
 12079              		.loc 1 4033 0
 12080 2a87 4839C8   		cmpq	%rcx, %rax
 12081 2a8a 75EC     		jne	.L994
 12082 2a8c E9BFE5FF 		jmp	.L1512
 12082      FF
 12083              	.LVL1509:
 12084              	.L988:
3989:fltk-1.3.4-1/png/pngrtran.c ****                {
 12085              		.loc 1 3989 0
 12086 2a91 4585ED   		testl	%r13d, %r13d
 12087 2a94 0F84B6E5 		je	.L1512
 12087      FFFF
 12088 2a9a 418D55FF 		leal	-1(%r13), %edx
 12089 2a9e 498D4C96 		leaq	5(%r14,%rdx,4), %rcx
 12089      05
 12090              	.LVL1510:
 12091              		.p2align 4,,10
 12092 2aa3 0F1F4400 		.p2align 3
 12092      00
 12093              	.L990:
3991:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12094              		.loc 1 3991 0
 12095 2aa8 0FB610   		movzbl	(%rax), %edx
 12096 2aab 4883C004 		addq	$4, %rax
 12097              	.LVL1511:
 12098 2aaf 410FB614 		movzbl	(%r12,%rdx), %edx
 12098      14
 12099 2ab4 8850FC   		movb	%dl, -4(%rax)
 12100              	.LVL1512:
3994:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12101              		.loc 1 3994 0
 12102 2ab7 0FB650FD 		movzbl	-3(%rax), %edx
 12103 2abb 410FB614 		movzbl	(%r12,%rdx), %edx
 12103      14
 12104 2ac0 8850FD   		movb	%dl, -3(%rax)
3997:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12105              		.loc 1 3997 0
 12106 2ac3 0FB650FE 		movzbl	-2(%rax), %edx
 12107 2ac7 410FB614 		movzbl	(%r12,%rdx), %edx
 12107      14
 12108 2acc 8850FE   		movb	%dl, -2(%rax)
 12109              	.LVL1513:
3989:fltk-1.3.4-1/png/pngrtran.c ****                {
 12110              		.loc 1 3989 0
 12111 2acf 4839C8   		cmpq	%rcx, %rax
 12112 2ad2 75D4     		jne	.L990
 12113 2ad4 E977E5FF 		jmp	.L1512
 12113      FF
 12114              	.LVL1514:
 12115              	.L984:
3947:fltk-1.3.4-1/png/pngrtran.c ****                {
 12116              		.loc 1 3947 0
 12117 2ad9 4585ED   		testl	%r13d, %r13d
 12118 2adc 0F846EE5 		je	.L1512
 12118      FFFF
 12119 2ae2 418D55FF 		leal	-1(%r13), %edx
 12120 2ae6 488D5452 		leaq	4(%rdx,%rdx,2), %rdx
 12120      04
 12121 2aeb 4901D6   		addq	%rdx, %r14
 12122              	.LVL1515:
 12123 2aee 6690     		.p2align 4,,10
 12124              		.p2align 3
 12125              	.L986:
3949:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12126              		.loc 1 3949 0
 12127 2af0 0FB610   		movzbl	(%rax), %edx
 12128 2af3 4883C003 		addq	$3, %rax
 12129              	.LVL1516:
 12130 2af7 410FB614 		movzbl	(%r12,%rdx), %edx
 12130      14
 12131 2afc 8850FD   		movb	%dl, -3(%rax)
 12132              	.LVL1517:
3951:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12133              		.loc 1 3951 0
 12134 2aff 0FB650FE 		movzbl	-2(%rax), %edx
 12135 2b03 410FB614 		movzbl	(%r12,%rdx), %edx
 12135      14
 12136 2b08 8850FE   		movb	%dl, -2(%rax)
3953:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12137              		.loc 1 3953 0
 12138 2b0b 0FB650FF 		movzbl	-1(%rax), %edx
 12139 2b0f 410FB614 		movzbl	(%r12,%rdx), %edx
 12139      14
 12140 2b14 8850FF   		movb	%dl, -1(%rax)
 12141              	.LVL1518:
3947:fltk-1.3.4-1/png/pngrtran.c ****                {
 12142              		.loc 1 3947 0
 12143 2b17 4C39F0   		cmpq	%r14, %rax
 12144 2b1a 75D4     		jne	.L986
 12145 2b1c E92FE5FF 		jmp	.L1512
 12145      FF
 12146              	.LVL1519:
 12147              	.L1600:
4059:fltk-1.3.4-1/png/pngrtran.c ****                {
 12148              		.loc 1 4059 0
 12149 2b21 4585ED   		testl	%r13d, %r13d
 12150 2b24 0F8426E5 		je	.L1512
 12150      FFFF
 12151 2b2a 4989C7   		movq	%rax, %r15
 12152 2b2d 4531D2   		xorl	%r10d, %r10d
 12153 2b30 4C897424 		movq	%r14, 8(%rsp)
 12153      08
 12154              	.LVL1520:
 12155              		.p2align 4,,10
 12156 2b35 0F1F00   		.p2align 3
 12157              	.L997:
 12158              	.LBB771:
4061:fltk-1.3.4-1/png/pngrtran.c ****                   int b = *sp & 0x30;
 12159              		.loc 1 4061 0
 12160 2b38 410FB617 		movzbl	(%r15), %edx
 12161 2b3c 4189D0   		movl	%edx, %r8d
4062:fltk-1.3.4-1/png/pngrtran.c ****                   int c = *sp & 0x0c;
 12162              		.loc 1 4062 0
 12163 2b3f 89D7     		movl	%edx, %edi
4063:fltk-1.3.4-1/png/pngrtran.c ****                   int d = *sp & 0x03;
 12164              		.loc 1 4063 0
 12165 2b41 89D6     		movl	%edx, %esi
4061:fltk-1.3.4-1/png/pngrtran.c ****                   int b = *sp & 0x30;
 12166              		.loc 1 4061 0
 12167 2b43 4181E0C0 		andl	$192, %r8d
 12167      000000
 12168              	.LVL1521:
4064:fltk-1.3.4-1/png/pngrtran.c **** 
 12169              		.loc 1 4064 0
 12170 2b4a 83E203   		andl	$3, %edx
4062:fltk-1.3.4-1/png/pngrtran.c ****                   int c = *sp & 0x0c;
 12171              		.loc 1 4062 0
 12172 2b4d 83E730   		andl	$48, %edi
 12173              	.LVL1522:
4067:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(b<<2)|b|(b>>2)|(b>>4)])>>2) & 0x30)|
 12174              		.loc 1 4067 0
 12175 2b50 4589C6   		movl	%r8d, %r14d
 12176 2b53 4589C1   		movl	%r8d, %r9d
4063:fltk-1.3.4-1/png/pngrtran.c ****                   int d = *sp & 0x03;
 12177              		.loc 1 4063 0
 12178 2b56 83E60C   		andl	$12, %esi
 12179              	.LVL1523:
4067:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(b<<2)|b|(b>>2)|(b>>4)])>>2) & 0x30)|
 12180              		.loc 1 4067 0
 12181 2b59 41C1FE02 		sarl	$2, %r14d
 12182 2b5d 41C1F904 		sarl	$4, %r9d
 12183 2b61 4509F1   		orl	%r14d, %r9d
4070:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12184              		.loc 1 4070 0
 12185 2b64 4189D6   		movl	%edx, %r14d
4067:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(b<<2)|b|(b>>2)|(b>>4)])>>2) & 0x30)|
 12186              		.loc 1 4067 0
 12187 2b67 4509C1   		orl	%r8d, %r9d
 12188 2b6a 41C1F806 		sarl	$6, %r8d
 12189              	.LVL1524:
4070:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12190              		.loc 1 4070 0
 12191 2b6e 41C1E606 		sall	$6, %r14d
4067:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(b<<2)|b|(b>>2)|(b>>4)])>>2) & 0x30)|
 12192              		.loc 1 4067 0
 12193 2b72 4509C8   		orl	%r9d, %r8d
 12194 2b75 4D63C0   		movslq	%r8d, %r8
4066:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
 12195              		.loc 1 4066 0
 12196 2b78 470FB60C 		movzbl	(%r12,%r8), %r9d
 12196      04
4070:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12197              		.loc 1 4070 0
 12198 2b7d 4189D0   		movl	%edx, %r8d
 12199 2b80 41C1E004 		sall	$4, %r8d
 12200 2b84 4509F0   		orl	%r14d, %r8d
 12201 2b87 4109D0   		orl	%edx, %r8d
 12202 2b8a C1E202   		sall	$2, %edx
 12203              	.LVL1525:
 12204 2b8d 4409C2   		orl	%r8d, %edx
4066:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
 12205              		.loc 1 4066 0
 12206 2b90 4183E1C0 		andl	$-64, %r9d
4068:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(c<<4)|(c<<2)|c|(c>>2)])>>4) & 0x0c)|
 12207              		.loc 1 4068 0
 12208 2b94 448D04BD 		leal	0(,%rdi,4), %r8d
 12208      00000000 
4070:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12209              		.loc 1 4070 0
 12210 2b9c 4863D2   		movslq	%edx, %rdx
4066:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
 12211              		.loc 1 4066 0
 12212 2b9f 410FB614 		movzbl	(%r12,%rdx), %edx
 12212      14
 12213 2ba4 C0EA06   		shrb	$6, %dl
 12214 2ba7 4109D1   		orl	%edx, %r9d
4068:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(c<<4)|(c<<2)|c|(c>>2)])>>4) & 0x0c)|
 12215              		.loc 1 4068 0
 12216 2baa 89FA     		movl	%edi, %edx
 12217 2bac C1FA02   		sarl	$2, %edx
 12218 2baf 4409C2   		orl	%r8d, %edx
 12219 2bb2 09FA     		orl	%edi, %edx
 12220 2bb4 C1FF04   		sarl	$4, %edi
 12221              	.LVL1526:
 12222 2bb7 09D7     		orl	%edx, %edi
 12223 2bb9 4863D7   		movslq	%edi, %rdx
4069:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(d<<6)|(d<<4)|(d<<2)|d])>>6) ));
 12224              		.loc 1 4069 0
 12225 2bbc 89F7     		movl	%esi, %edi
4066:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
 12226              		.loc 1 4066 0
 12227 2bbe 410FB614 		movzbl	(%r12,%rdx), %edx
 12227      14
4069:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(d<<6)|(d<<4)|(d<<2)|d])>>6) ));
 12228              		.loc 1 4069 0
 12229 2bc3 C1E704   		sall	$4, %edi
4066:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
 12230              		.loc 1 4066 0
 12231 2bc6 C0EA02   		shrb	$2, %dl
 12232 2bc9 83E230   		andl	$48, %edx
 12233 2bcc 4109D1   		orl	%edx, %r9d
4069:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[(d<<6)|(d<<4)|(d<<2)|d])>>6) ));
 12234              		.loc 1 4069 0
 12235 2bcf 8D14B500 		leal	0(,%rsi,4), %edx
 12235      000000
 12236 2bd6 09FA     		orl	%edi, %edx
 12237 2bd8 09F2     		orl	%esi, %edx
 12238 2bda C1FE02   		sarl	$2, %esi
 12239              	.LVL1527:
 12240 2bdd 09D6     		orl	%edx, %esi
 12241 2bdf 4863D6   		movslq	%esi, %rdx
4066:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
 12242              		.loc 1 4066 0
 12243 2be2 410FB614 		movzbl	(%r12,%rdx), %edx
 12243      14
 12244 2be7 C0EA04   		shrb	$4, %dl
 12245              	.LBE771:
4059:fltk-1.3.4-1/png/pngrtran.c ****                {
 12246              		.loc 1 4059 0
 12247 2bea 4183C204 		addl	$4, %r10d
 12248              	.LVL1528:
 12249              	.LBB772:
4071:fltk-1.3.4-1/png/pngrtran.c ****                }
 12250              		.loc 1 4071 0
 12251 2bee 4983C701 		addq	$1, %r15
 12252              	.LVL1529:
4066:fltk-1.3.4-1/png/pngrtran.c ****                       ((((int)gamma_table[a|(a>>2)|(a>>4)|(a>>6)])   ) & 0xc0)|
 12253              		.loc 1 4066 0
 12254 2bf2 83E20C   		andl	$12, %edx
 12255 2bf5 4109D1   		orl	%edx, %r9d
 12256 2bf8 45884FFF 		movb	%r9b, -1(%r15)
 12257              	.LVL1530:
 12258              	.LBE772:
4059:fltk-1.3.4-1/png/pngrtran.c ****                {
 12259              		.loc 1 4059 0
 12260 2bfc 4539D5   		cmpl	%r10d, %r13d
 12261 2bff 0F8733FF 		ja	.L997
 12261      FFFF
 12262 2c05 0FB65511 		movzbl	17(%rbp), %edx
 12263 2c09 4C8B7424 		movq	8(%rsp), %r14
 12263      08
4075:fltk-1.3.4-1/png/pngrtran.c ****             {
 12264              		.loc 1 4075 0
 12265 2c0e 80FA04   		cmpb	$4, %dl
 12266 2c11 0F85F4F7 		jne	.L999
 12266      FFFF
 12267              	.LVL1531:
 12268              	.L998:
4059:fltk-1.3.4-1/png/pngrtran.c ****                {
 12269              		.loc 1 4059 0
 12270 2c17 31FF     		xorl	%edi, %edi
 12271              	.LVL1532:
 12272 2c19 0F1F8000 		.p2align 4,,10
 12272      000000
 12273              		.p2align 3
 12274              	.L1000:
 12275              	.LBB773:
4080:fltk-1.3.4-1/png/pngrtran.c ****                   int lsb = *sp & 0x0f;
 12276              		.loc 1 4080 0
 12277 2c20 0FB610   		movzbl	(%rax), %edx
 12278              	.LBE773:
4078:fltk-1.3.4-1/png/pngrtran.c ****                {
 12279              		.loc 1 4078 0
 12280 2c23 83C702   		addl	$2, %edi
 12281              	.LVL1533:
 12282              	.LBB774:
4085:fltk-1.3.4-1/png/pngrtran.c ****                }
 12283              		.loc 1 4085 0
 12284 2c26 4883C001 		addq	$1, %rax
 12285              	.LVL1534:
4080:fltk-1.3.4-1/png/pngrtran.c ****                   int lsb = *sp & 0x0f;
 12286              		.loc 1 4080 0
 12287 2c2a 89D1     		movl	%edx, %ecx
4081:fltk-1.3.4-1/png/pngrtran.c **** 
 12288              		.loc 1 4081 0
 12289 2c2c 83E20F   		andl	$15, %edx
4080:fltk-1.3.4-1/png/pngrtran.c ****                   int lsb = *sp & 0x0f;
 12290              		.loc 1 4080 0
 12291 2c2f 81E1F000 		andl	$240, %ecx
 12291      0000
 12292              	.LVL1535:
4083:fltk-1.3.4-1/png/pngrtran.c ****                       | (((int)gamma_table[(lsb << 4) | lsb]) >> 4));
 12293              		.loc 1 4083 0
 12294 2c35 89CE     		movl	%ecx, %esi
 12295 2c37 C1FE04   		sarl	$4, %esi
 12296 2c3a 09F1     		orl	%esi, %ecx
 12297              	.LVL1536:
4084:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12298              		.loc 1 4084 0
 12299 2c3c 89D6     		movl	%edx, %esi
 12300 2c3e C1E604   		sall	$4, %esi
4083:fltk-1.3.4-1/png/pngrtran.c ****                       | (((int)gamma_table[(lsb << 4) | lsb]) >> 4));
 12301              		.loc 1 4083 0
 12302 2c41 4863C9   		movslq	%ecx, %rcx
4084:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12303              		.loc 1 4084 0
 12304 2c44 09F2     		orl	%esi, %edx
 12305              	.LVL1537:
4083:fltk-1.3.4-1/png/pngrtran.c ****                       | (((int)gamma_table[(lsb << 4) | lsb]) >> 4));
 12306              		.loc 1 4083 0
 12307 2c46 410FB60C 		movzbl	(%r12,%rcx), %ecx
 12307      0C
4084:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12308              		.loc 1 4084 0
 12309 2c4b 4863D2   		movslq	%edx, %rdx
4083:fltk-1.3.4-1/png/pngrtran.c ****                       | (((int)gamma_table[(lsb << 4) | lsb]) >> 4));
 12310              		.loc 1 4083 0
 12311 2c4e 410FB614 		movzbl	(%r12,%rdx), %edx
 12311      14
 12312 2c53 83E1F0   		andl	$-16, %ecx
 12313 2c56 C0EA04   		shrb	$4, %dl
 12314 2c59 09CA     		orl	%ecx, %edx
 12315 2c5b 8850FF   		movb	%dl, -1(%rax)
 12316              	.LVL1538:
 12317              	.LBE774:
4078:fltk-1.3.4-1/png/pngrtran.c ****                {
 12318              		.loc 1 4078 0
 12319 2c5e 4139FD   		cmpl	%edi, %r13d
 12320 2c61 77BD     		ja	.L1000
 12321 2c63 E9E8E3FF 		jmp	.L1512
 12321      FF
 12322              	.LVL1539:
 12323              	.L1506:
 12324              	.LBE779:
 12325              	.LBE824:
 12326              	.LBB825:
 12327              	.LBB736:
 12328              	.LBB724:
 12329              	.LBB713:
 12330              	.LBB702:
3138:fltk-1.3.4-1/png/pngrtran.c ****             {
 12331              		.loc 1 3138 0
 12332 2c68 4589D4   		movl	%r10d, %r12d
 12333 2c6b E921E8FF 		jmp	.L815
 12333      FF
 12334              	.LVL1540:
 12335              	.L797:
 12336              	.LBE702:
 12337              	.LBE713:
 12338              	.LBE724:
 12339              	.LBE736:
 12340              	.LBE825:
 12341              	.LBB826:
 12342              	.LBB762:
4320:fltk-1.3.4-1/png/pngrtran.c **** 
 12343              		.loc 1 4320 0
 12344 2c70 478D0449 		leal	(%r9,%r9,2), %r8d
 12345              	.LVL1541:
4322:fltk-1.3.4-1/png/pngrtran.c ****                {
 12346              		.loc 1 4322 0
 12347 2c74 4585C9   		testl	%r9d, %r9d
4320:fltk-1.3.4-1/png/pngrtran.c **** 
 12348              		.loc 1 4320 0
 12349 2c77 4A8D5406 		leaq	-1(%rsi,%r8), %rdx
 12349      FF
 12350              	.LVL1542:
4322:fltk-1.3.4-1/png/pngrtran.c ****                {
 12351              		.loc 1 4322 0
 12352 2c7c 744D     		je	.L809
 12353 2c7e 418D71FF 		leal	-1(%r9), %esi
 12354              	.LVL1543:
 12355 2c82 48F7D6   		notq	%rsi
 12356 2c85 4801C6   		addq	%rax, %rsi
 12357              	.LVL1544:
 12358 2c88 0F1F8400 		.p2align 4,,10
 12358      00000000 
 12359              		.p2align 3
 12360              	.L808:
4324:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].green;
 12361              		.loc 1 4324 0
 12362 2c90 0FB608   		movzbl	(%rax), %ecx
4327:fltk-1.3.4-1/png/pngrtran.c ****                }
 12363              		.loc 1 4327 0
 12364 2c93 4883E801 		subq	$1, %rax
 12365              	.LVL1545:
 12366 2c97 4883EA03 		subq	$3, %rdx
 12367              	.LVL1546:
4324:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].green;
 12368              		.loc 1 4324 0
 12369 2c9b 488D0C49 		leaq	(%rcx,%rcx,2), %rcx
 12370 2c9f 0FB64C0F 		movzbl	2(%rdi,%rcx), %ecx
 12370      02
 12371 2ca4 884A03   		movb	%cl, 3(%rdx)
 12372              	.LVL1547:
4325:fltk-1.3.4-1/png/pngrtran.c ****                   *dp-- = palette[*sp].red;
 12373              		.loc 1 4325 0
 12374 2ca7 0FB64801 		movzbl	1(%rax), %ecx
 12375 2cab 488D0C49 		leaq	(%rcx,%rcx,2), %rcx
 12376 2caf 0FB64C0F 		movzbl	1(%rdi,%rcx), %ecx
 12376      01
 12377 2cb4 884A02   		movb	%cl, 2(%rdx)
 12378              	.LVL1548:
4326:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
 12379              		.loc 1 4326 0
 12380 2cb7 0FB64801 		movzbl	1(%rax), %ecx
 12381              	.LVL1549:
4322:fltk-1.3.4-1/png/pngrtran.c ****                {
 12382              		.loc 1 4322 0
 12383 2cbb 4839C6   		cmpq	%rax, %rsi
4326:fltk-1.3.4-1/png/pngrtran.c ****                   sp--;
 12384              		.loc 1 4326 0
 12385 2cbe 488D0C49 		leaq	(%rcx,%rcx,2), %rcx
 12386 2cc2 0FB60C0F 		movzbl	(%rdi,%rcx), %ecx
 12387 2cc6 884A01   		movb	%cl, 1(%rdx)
4322:fltk-1.3.4-1/png/pngrtran.c ****                {
 12388              		.loc 1 4322 0
 12389 2cc9 75C5     		jne	.L808
 12390              	.LVL1550:
 12391              	.L809:
4330:fltk-1.3.4-1/png/pngrtran.c ****                row_info->pixel_depth = 24;
 12392              		.loc 1 4330 0
 12393 2ccb C6451108 		movb	$8, 17(%rbp)
4331:fltk-1.3.4-1/png/pngrtran.c ****                row_info->rowbytes = row_width * 3;
 12394              		.loc 1 4331 0
 12395 2ccf C6451318 		movb	$24, 19(%rbp)
4332:fltk-1.3.4-1/png/pngrtran.c ****                row_info->color_type = 2;
 12396              		.loc 1 4332 0
 12397 2cd3 4C894508 		movq	%r8, 8(%rbp)
4333:fltk-1.3.4-1/png/pngrtran.c ****                row_info->channels = 3;
 12398              		.loc 1 4333 0
 12399 2cd7 C6451002 		movb	$2, 16(%rbp)
4334:fltk-1.3.4-1/png/pngrtran.c ****             }
 12400              		.loc 1 4334 0
 12401 2cdb C6451203 		movb	$3, 18(%rbp)
 12402              	.LBE762:
 12403              	.LBE826:
4763:fltk-1.3.4-1/png/pngrtran.c ****    {
 12404              		.loc 1 4763 0
 12405 2cdf 8B833401 		movl	308(%rbx), %eax
 12405      0000
 12406 2ce5 A9000060 		testl	$6291456, %eax
 12406      00
 12407 2cea 0F84B9D3 		je	.L807
 12407      FFFF
 12408              	.LVL1551:
 12409              	.LBB827:
 12410              	.LBB737:
 12411              	.LBB725:
2991:fltk-1.3.4-1/png/pngrtran.c ****        (row_info->color_type & PNG_COLOR_MASK_COLOR) != 0)
 12412              		.loc 1 2991 0
 12413 2cf0 41B80200 		movl	$2, %r8d
 12413      0000
 12414 2cf6 E9C9DDFF 		jmp	.L1153
 12414      FF
 12415              	.LVL1552:
 12416              	.L1175:
 12417              	.LBE725:
 12418              	.LBE737:
 12419              	.LBE827:
 12420              	.LBB828:
 12421              	.LBB595:
3620:fltk-1.3.4-1/png/pngrtran.c ****                   {
 12422              		.loc 1 3620 0
 12423 2cfb 4585DB   		testl	%r11d, %r11d
 12424 2cfe 0F84CCF5 		je	.L860
 12424      FFFF
 12425 2d04 418D43FF 		leal	-1(%r11), %eax
 12426              	.LBB569:
 12427              	.LBB570:
3628:fltk-1.3.4-1/png/pngrtran.c ****                   }
 12428              		.loc 1 3628 0
 12429 2d08 41B8FF00 		movl	$255, %r8d
 12429      0000
 12430              	.LVL1553:
 12431 2d0e 498D7C46 		leaq	3(%r14,%rax,2), %rdi
 12431      03
 12432              	.LVL1554:
 12433 2d13 EB19     		jmp	.L930
 12434              	.LVL1555:
 12435              		.p2align 4,,10
 12436 2d15 0F1F00   		.p2align 3
 12437              	.L1606:
 12438              	.LBE570:
3625:fltk-1.3.4-1/png/pngrtran.c **** 
 12439              		.loc 1 3625 0
 12440 2d18 0FB78390 		movzwl	656(%rbx), %eax
 12440      020000
 12441 2d1f 8802     		movb	%al, (%rdx)
 12442              	.L929:
 12443              	.LBE569:
3620:fltk-1.3.4-1/png/pngrtran.c ****                   {
 12444              		.loc 1 3620 0
 12445 2d21 4883C202 		addq	$2, %rdx
 12446              	.LVL1556:
 12447 2d25 4839FA   		cmpq	%rdi, %rdx
 12448 2d28 0F84EAE1 		je	.L848
 12448      FFFF
 12449              	.LVL1557:
 12450              	.L930:
 12451              	.LBB572:
3622:fltk-1.3.4-1/png/pngrtran.c **** 
 12452              		.loc 1 3622 0
 12453 2d2e 0FB67201 		movzbl	1(%rdx), %esi
 12454              	.LVL1558:
3624:fltk-1.3.4-1/png/pngrtran.c ****                         *sp = (png_byte)png_ptr->background.gray;
 12455              		.loc 1 3624 0
 12456 2d32 4084F6   		testb	%sil, %sil
 12457 2d35 74E1     		je	.L1606
3627:fltk-1.3.4-1/png/pngrtran.c ****                         png_composite(*sp, *sp, a, png_ptr->background.gray);
 12458              		.loc 1 3627 0
 12459 2d37 4080FEFF 		cmpb	$-1, %sil
 12460 2d3b 74E4     		je	.L929
 12461              	.LBB571:
3628:fltk-1.3.4-1/png/pngrtran.c ****                   }
 12462              		.loc 1 3628 0
 12463 2d3d 400FB6C6 		movzbl	%sil, %eax
 12464 2d41 4489C1   		movl	%r8d, %ecx
 12465 2d44 29C1     		subl	%eax, %ecx
 12466 2d46 89C8     		movl	%ecx, %eax
 12467 2d48 660FAF83 		imulw	656(%rbx), %ax
 12467      90020000 
 12468 2d50 89C1     		movl	%eax, %ecx
 12469 2d52 89F0     		movl	%esi, %eax
 12470 2d54 F622     		mulb	(%rdx)
 12471 2d56 8D840180 		leal	128(%rcx,%rax), %eax
 12471      000000
 12472              	.LVL1559:
 12473 2d5d 0FB6CC   		movzbl	%ah, %ecx
 12474 2d60 0FB7C0   		movzwl	%ax, %eax
 12475 2d63 01C8     		addl	%ecx, %eax
 12476              	.LVL1560:
 12477 2d65 C1F808   		sarl	$8, %eax
 12478 2d68 8802     		movb	%al, (%rdx)
 12479 2d6a EBB5     		jmp	.L929
 12480              	.LVL1561:
 12481              	.L1584:
 12482              	.LBE571:
 12483              	.LBE572:
3486:fltk-1.3.4-1/png/pngrtran.c ****                   {
 12484              		.loc 1 3486 0
 12485 2d6c 4585DB   		testl	%r11d, %r11d
 12486 2d6f 0F845BF5 		je	.L860
 12486      FFFF
 12487 2d75 418D43FF 		leal	-1(%r11), %eax
 12488 2d79 488D4440 		leaq	4(%rax,%rax,2), %rax
 12488      04
 12489 2d7e 4901C6   		addq	%rax, %r14
 12490 2d81 EB12     		jmp	.L911
 12491              	.LVL1562:
 12492              		.p2align 4,,10
 12493 2d83 0F1F4400 		.p2align 3
 12493      00
 12494              	.L910:
 12495 2d88 4883C203 		addq	$3, %rdx
 12496              	.LVL1563:
 12497 2d8c 4C39F2   		cmpq	%r14, %rdx
 12498 2d8f 0F8483E1 		je	.L848
 12498      FFFF
 12499              	.L911:
3488:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 1) == png_ptr->trans_color.green &&
 12500              		.loc 1 3488 0
 12501 2d95 0FB602   		movzbl	(%rdx), %eax
 12502 2d98 663B8302 		cmpw	770(%rbx), %ax
 12502      030000
 12503 2d9f 75E7     		jne	.L910
 12504 2da1 0FB64201 		movzbl	1(%rdx), %eax
 12505 2da5 663B8304 		cmpw	772(%rbx), %ax
 12505      030000
 12506 2dac 75DA     		jne	.L910
3489:fltk-1.3.4-1/png/pngrtran.c ****                          *(sp + 2) == png_ptr->trans_color.blue)
 12507              		.loc 1 3489 0
 12508 2dae 0FB64202 		movzbl	2(%rdx), %eax
 12509 2db2 663B8306 		cmpw	774(%rbx), %ax
 12509      030000
 12510 2db9 75CD     		jne	.L910
3492:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
 12511              		.loc 1 3492 0
 12512 2dbb 0FB7838A 		movzwl	650(%rbx), %eax
 12512      020000
 12513 2dc2 8802     		movb	%al, (%rdx)
3493:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
 12514              		.loc 1 3493 0
 12515 2dc4 0FB7838C 		movzwl	652(%rbx), %eax
 12515      020000
 12516 2dcb 884201   		movb	%al, 1(%rdx)
3494:fltk-1.3.4-1/png/pngrtran.c ****                      }
 12517              		.loc 1 3494 0
 12518 2dce 0FB7838E 		movzwl	654(%rbx), %eax
 12518      020000
 12519 2dd5 884202   		movb	%al, 2(%rdx)
 12520 2dd8 EBAE     		jmp	.L910
 12521              	.LVL1564:
 12522              	.L1177:
3760:fltk-1.3.4-1/png/pngrtran.c ****                   {
 12523              		.loc 1 3760 0
 12524 2dda 4585DB   		testl	%r11d, %r11d
 12525 2ddd 0F84EDF4 		je	.L860
 12525      FFFF
 12526 2de3 418D43FF 		leal	-1(%r11), %eax
 12527              	.LBB573:
 12528              	.LBB574:
3773:fltk-1.3.4-1/png/pngrtran.c **** 
 12529              		.loc 1 3773 0
 12530 2de7 41B8FF00 		movl	$255, %r8d
 12530      0000
 12531              	.LVL1565:
 12532 2ded 4989EF   		movq	%rbp, %r15
 12533 2df0 498D7C86 		leaq	5(%r14,%rax,4), %rdi
 12533      05
 12534              	.LVL1566:
 12535 2df5 EB33     		jmp	.L955
 12536              	.LVL1567:
 12537 2df7 660F1F84 		.p2align 4,,10
 12537      00000000 
 12537      00
 12538              		.p2align 3
 12539              	.L1607:
 12540              	.LBE574:
3766:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 1) = (png_byte)png_ptr->background.green;
 12541              		.loc 1 3766 0
 12542 2e00 0FB7838A 		movzwl	650(%rbx), %eax
 12542      020000
 12543 2e07 8802     		movb	%al, (%rdx)
3767:fltk-1.3.4-1/png/pngrtran.c ****                         *(sp + 2) = (png_byte)png_ptr->background.blue;
 12544              		.loc 1 3767 0
 12545 2e09 0FB7838C 		movzwl	652(%rbx), %eax
 12545      020000
 12546 2e10 884201   		movb	%al, 1(%rdx)
3768:fltk-1.3.4-1/png/pngrtran.c ****                      }
 12547              		.loc 1 3768 0
 12548 2e13 0FB7838E 		movzwl	654(%rbx), %eax
 12548      020000
 12549 2e1a 884202   		movb	%al, 2(%rdx)
 12550              	.L954:
 12551              	.LBE573:
3760:fltk-1.3.4-1/png/pngrtran.c ****                   {
 12552              		.loc 1 3760 0
 12553 2e1d 4883C204 		addq	$4, %rdx
 12554              	.LVL1568:
 12555 2e21 4839FA   		cmpq	%rdi, %rdx
 12556 2e24 0F84E6E0 		je	.L1510
 12556      FFFF
 12557              	.LVL1569:
 12558              	.L955:
 12559              	.LBB580:
3762:fltk-1.3.4-1/png/pngrtran.c **** 
 12560              		.loc 1 3762 0
 12561 2e2a 0FB67203 		movzbl	3(%rdx), %esi
 12562              	.LVL1570:
3764:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12563              		.loc 1 3764 0
 12564 2e2e 4084F6   		testb	%sil, %sil
 12565 2e31 74CD     		je	.L1607
3771:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12566              		.loc 1 3771 0
 12567 2e33 4080FEFF 		cmpb	$-1, %sil
 12568 2e37 74E4     		je	.L954
 12569              	.LBB575:
3773:fltk-1.3.4-1/png/pngrtran.c **** 
 12570              		.loc 1 3773 0
 12571 2e39 400FB6C6 		movzbl	%sil, %eax
 12572 2e3d 4489C1   		movl	%r8d, %ecx
 12573 2e40 29C1     		subl	%eax, %ecx
 12574 2e42 89F0     		movl	%esi, %eax
 12575 2e44 4189C9   		movl	%ecx, %r9d
 12576 2e47 F622     		mulb	(%rdx)
 12577 2e49 66440FAF 		imulw	650(%rbx), %r9w
 12577      8B8A0200 
 12577      00
 12578 2e52 418D8401 		leal	128(%r9,%rax), %eax
 12578      80000000 
 12579              	.LVL1571:
 12580              	.LBE575:
 12581              	.LBB576:
3775:fltk-1.3.4-1/png/pngrtran.c ****                             png_ptr->background.green);
 12582              		.loc 1 3775 0
 12583 2e5a 4189C9   		movl	%ecx, %r9d
 12584              	.LBE576:
 12585              	.LBB577:
3773:fltk-1.3.4-1/png/pngrtran.c **** 
 12586              		.loc 1 3773 0
 12587 2e5d 0FB6EC   		movzbl	%ah, %ebp
 12588 2e60 0FB7C0   		movzwl	%ax, %eax
 12589 2e63 01E8     		addl	%ebp, %eax
 12590              	.LVL1572:
 12591 2e65 C1F808   		sarl	$8, %eax
 12592 2e68 8802     		movb	%al, (%rdx)
 12593              	.LBE577:
 12594              	.LBB578:
3775:fltk-1.3.4-1/png/pngrtran.c ****                             png_ptr->background.green);
 12595              		.loc 1 3775 0
 12596 2e6a 89F0     		movl	%esi, %eax
 12597 2e6c 66440FAF 		imulw	652(%rbx), %r9w
 12597      8B8C0200 
 12597      00
 12598 2e75 F66201   		mulb	1(%rdx)
 12599 2e78 418D8401 		leal	128(%r9,%rax), %eax
 12599      80000000 
 12600              	.LVL1573:
 12601 2e80 0FB6EC   		movzbl	%ah, %ebp
 12602 2e83 0FB7C0   		movzwl	%ax, %eax
 12603 2e86 01E8     		addl	%ebp, %eax
 12604              	.LVL1574:
 12605 2e88 C1F808   		sarl	$8, %eax
 12606 2e8b 884201   		movb	%al, 1(%rdx)
 12607              	.LBE578:
 12608              	.LBB579:
3778:fltk-1.3.4-1/png/pngrtran.c ****                             png_ptr->background.blue);
 12609              		.loc 1 3778 0
 12610 2e8e 89F0     		movl	%esi, %eax
 12611 2e90 660FAF8B 		imulw	654(%rbx), %cx
 12611      8E020000 
 12612 2e98 F66202   		mulb	2(%rdx)
 12613 2e9b 8D840180 		leal	128(%rcx,%rax), %eax
 12613      000000
 12614              	.LVL1575:
 12615 2ea2 0FB6CC   		movzbl	%ah, %ecx
 12616 2ea5 0FB7C0   		movzwl	%ax, %eax
 12617 2ea8 01C8     		addl	%ecx, %eax
 12618              	.LVL1576:
 12619 2eaa C1F808   		sarl	$8, %eax
 12620 2ead 884202   		movb	%al, 2(%rdx)
 12621 2eb0 E968FFFF 		jmp	.L954
 12621      FF
 12622              	.LVL1577:
 12623              	.L1601:
 12624              	.LBE579:
 12625              	.LBE580:
 12626              	.LBE595:
 12627              	.LBE828:
 12628              	.LBB829:
 12629              	.LBB780:
4078:fltk-1.3.4-1/png/pngrtran.c ****                {
 12630              		.loc 1 4078 0
 12631 2eb5 4585ED   		testl	%r13d, %r13d
 12632 2eb8 0F8559FD 		jne	.L998
 12632      FFFF
 12633 2ebe E98DE1FF 		jmp	.L1512
 12633      FF
 12634              	.LVL1578:
 12635              	.L1602:
4092:fltk-1.3.4-1/png/pngrtran.c ****                {
 12636              		.loc 1 4092 0
 12637 2ec3 4585ED   		testl	%r13d, %r13d
 12638 2ec6 0F8484E1 		je	.L1512
 12638      FFFF
 12639 2ecc 418D55FF 		leal	-1(%r13), %edx
 12640 2ed0 498D4C16 		leaq	2(%r14,%rdx), %rcx
 12640      02
 12641              	.LVL1579:
 12642              		.p2align 4,,10
 12643 2ed5 0F1F00   		.p2align 3
 12644              	.L1003:
4094:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12645              		.loc 1 4094 0
 12646 2ed8 0FB610   		movzbl	(%rax), %edx
4095:fltk-1.3.4-1/png/pngrtran.c ****                }
 12647              		.loc 1 4095 0
 12648 2edb 4883C001 		addq	$1, %rax
 12649              	.LVL1580:
4094:fltk-1.3.4-1/png/pngrtran.c ****                   sp++;
 12650              		.loc 1 4094 0
 12651 2edf 410FB614 		movzbl	(%r12,%rdx), %edx
 12651      14
 12652 2ee4 8850FF   		movb	%dl, -1(%rax)
 12653              	.LVL1581:
4092:fltk-1.3.4-1/png/pngrtran.c ****                {
 12654              		.loc 1 4092 0
 12655 2ee7 4839C8   		cmpq	%rcx, %rax
 12656 2eea 75EC     		jne	.L1003
 12657 2eec E95FE1FF 		jmp	.L1512
 12657      FF
 12658              	.LVL1582:
 12659              	.L1592:
 12660              	.LBE780:
 12661              	.LBE829:
 12662              	.LBB830:
 12663              	.LBB596:
3281:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12664              		.loc 1 3281 0
 12665 2ef1 4531C0   		xorl	%r8d, %r8d
 12666              	.LVL1583:
 12667 2ef4 4585DB   		testl	%r11d, %r11d
 12668 2ef7 BF060000 		movl	$6, %edi
 12668      00
 12669              	.LVL1584:
 12670              	.LBB581:
3286:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 12671              		.loc 1 3286 0
 12672 2efc 41BA0600 		movl	$6, %r10d
 12672      0000
 12673              	.LVL1585:
 12674 2f02 41B93F3F 		movl	$16191, %r9d
 12674      0000
 12675              	.LVL1586:
 12676              	.LBE581:
3281:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12677              		.loc 1 3281 0
 12678 2f08 751C     		jne	.L1339
 12679 2f0a E9C1F3FF 		jmp	.L860
 12679      FF
 12680              	.LVL1587:
 12681 2f0f 90       		.p2align 4,,10
 12682              		.p2align 3
 12683              	.L1609:
3294:fltk-1.3.4-1/png/pngrtran.c ****                         }
 12684              		.loc 1 3294 0
 12685 2f10 4883C201 		addq	$1, %rdx
 12686              	.LVL1588:
3293:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
 12687              		.loc 1 3293 0
 12688 2f14 BF060000 		movl	$6, %edi
 12688      00
 12689              	.LVL1589:
 12690              	.L875:
3281:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12691              		.loc 1 3281 0
 12692 2f19 4183C001 		addl	$1, %r8d
 12693              	.LVL1590:
 12694 2f1d 4539C3   		cmpl	%r8d, %r11d
 12695 2f20 0F84F2DF 		je	.L848
 12695      FFFF
 12696              	.LVL1591:
 12697              	.L1339:
3283:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
 12698              		.loc 1 3283 0
 12699 2f26 0FB632   		movzbl	(%rdx), %esi
 12700 2f29 89F9     		movl	%edi, %ecx
 12701 2f2b 89F0     		movl	%esi, %eax
 12702 2f2d D3F8     		sarl	%cl, %eax
 12703 2f2f 0FB78B08 		movzwl	776(%rbx), %ecx
 12703      030000
 12704 2f36 83E003   		andl	$3, %eax
 12705 2f39 39C8     		cmpl	%ecx, %eax
 12706 2f3b 7409     		je	.L1608
 12707              	.L873:
3291:fltk-1.3.4-1/png/pngrtran.c ****                         {
 12708              		.loc 1 3291 0
 12709 2f3d 85FF     		testl	%edi, %edi
 12710 2f3f 74CF     		je	.L1609
3298:fltk-1.3.4-1/png/pngrtran.c ****                      }
 12711              		.loc 1 3298 0
 12712 2f41 83EF02   		subl	$2, %edi
 12713              	.LVL1592:
 12714 2f44 EBD3     		jmp	.L875
 12715              	.L1608:
 12716              	.LBB582:
3286:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 12717              		.loc 1 3286 0
 12718 2f46 4489D1   		movl	%r10d, %ecx
 12719 2f49 4489C8   		movl	%r9d, %eax
 12720 2f4c 29F9     		subl	%edi, %ecx
 12721 2f4e D3F8     		sarl	%cl, %eax
3288:fltk-1.3.4-1/png/pngrtran.c ****                         }
 12722              		.loc 1 3288 0
 12723 2f50 89F9     		movl	%edi, %ecx
3286:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 12724              		.loc 1 3286 0
 12725 2f52 21C6     		andl	%eax, %esi
 12726              	.LVL1593:
3288:fltk-1.3.4-1/png/pngrtran.c ****                         }
 12727              		.loc 1 3288 0
 12728 2f54 0FB78390 		movzwl	656(%rbx), %eax
 12728      020000
 12729 2f5b D3E0     		sall	%cl, %eax
 12730 2f5d 09C6     		orl	%eax, %esi
 12731              	.LVL1594:
 12732 2f5f 408832   		movb	%sil, (%rdx)
 12733              	.LVL1595:
 12734 2f62 EBD9     		jmp	.L873
 12735              	.LVL1596:
 12736              	.L1587:
 12737 2f64 418D43FF 		leal	-1(%r11), %eax
 12738              	.LBE582:
3431:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12739              		.loc 1 3431 0
 12740 2f68 4585DB   		testl	%r11d, %r11d
 12741 2f6b 498D7446 		leaq	3(%r14,%rax,2), %rsi
 12741      03
 12742              	.LVL1597:
 12743 2f70 751B     		jne	.L901
 12744 2f72 E959F3FF 		jmp	.L860
 12744      FF
 12745              	.LVL1598:
 12746 2f77 660F1F84 		.p2align 4,,10
 12746      00000000 
 12746      00
 12747              		.p2align 3
 12748              	.L900:
 12749 2f80 4883C202 		addq	$2, %rdx
 12750              	.LVL1599:
 12751 2f84 4839F2   		cmpq	%rsi, %rdx
 12752 2f87 0F848BDF 		je	.L848
 12752      FFFF
 12753              	.L901:
 12754              	.LVL1600:
 12755              	.LBB583:
3437:fltk-1.3.4-1/png/pngrtran.c ****                         {
 12756              		.loc 1 3437 0
 12757 2f8d 0FB602   		movzbl	(%rdx), %eax
 12758 2f90 C1E008   		sall	$8, %eax
 12759 2f93 89C1     		movl	%eax, %ecx
 12760 2f95 0FB64201 		movzbl	1(%rdx), %eax
 12761 2f99 01C8     		addl	%ecx, %eax
 12762 2f9b 663B8308 		cmpw	776(%rbx), %ax
 12762      030000
 12763 2fa2 75DC     		jne	.L900
3439:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 12764              		.loc 1 3439 0
 12765 2fa4 0FB68391 		movzbl	657(%rbx), %eax
 12765      020000
 12766 2fab 8802     		movb	%al, (%rdx)
 12767              	.LVL1601:
3441:fltk-1.3.4-1/png/pngrtran.c ****                                 & 0xff);
 12768              		.loc 1 3441 0
 12769 2fad 0FB78390 		movzwl	656(%rbx), %eax
 12769      020000
 12770 2fb4 884201   		movb	%al, 1(%rdx)
 12771 2fb7 EBC7     		jmp	.L900
 12772              	.LVL1602:
 12773              	.L1589:
 12774              	.LBE583:
3347:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12775              		.loc 1 3347 0
 12776 2fb9 4531C0   		xorl	%r8d, %r8d
 12777              	.LVL1603:
 12778 2fbc 4585DB   		testl	%r11d, %r11d
 12779 2fbf BF040000 		movl	$4, %edi
 12779      00
 12780              	.LVL1604:
 12781              	.LBB584:
3352:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 12782              		.loc 1 3352 0
 12783 2fc4 41BA0400 		movl	$4, %r10d
 12783      0000
 12784              	.LVL1605:
 12785 2fca 41B90F0F 		movl	$3855, %r9d
 12785      0000
 12786              	.LVL1606:
 12787              	.LBE584:
3347:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12788              		.loc 1 3347 0
 12789 2fd0 7524     		jne	.L1340
 12790 2fd2 E9F9F2FF 		jmp	.L860
 12790      FF
 12791              	.LVL1607:
 12792 2fd7 660F1F84 		.p2align 4,,10
 12792      00000000 
 12792      00
 12793              		.p2align 3
 12794              	.L1611:
3360:fltk-1.3.4-1/png/pngrtran.c ****                         }
 12795              		.loc 1 3360 0
 12796 2fe0 4883C201 		addq	$1, %rdx
 12797              	.LVL1608:
3359:fltk-1.3.4-1/png/pngrtran.c ****                            sp++;
 12798              		.loc 1 3359 0
 12799 2fe4 BF040000 		movl	$4, %edi
 12799      00
 12800              	.LVL1609:
 12801              	.L886:
3347:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12802              		.loc 1 3347 0
 12803 2fe9 4183C001 		addl	$1, %r8d
 12804              	.LVL1610:
 12805 2fed 4539C3   		cmpl	%r8d, %r11d
 12806 2ff0 0F8422DF 		je	.L848
 12806      FFFF
 12807              	.LVL1611:
 12808              	.L1340:
3349:fltk-1.3.4-1/png/pngrtran.c ****                             == png_ptr->trans_color.gray)
 12809              		.loc 1 3349 0
 12810 2ff6 0FB632   		movzbl	(%rdx), %esi
 12811 2ff9 89F9     		movl	%edi, %ecx
 12812 2ffb 89F0     		movl	%esi, %eax
 12813 2ffd D3F8     		sarl	%cl, %eax
 12814 2fff 0FB78B08 		movzwl	776(%rbx), %ecx
 12814      030000
 12815 3006 83E00F   		andl	$15, %eax
 12816 3009 39C8     		cmpl	%ecx, %eax
 12817 300b 7409     		je	.L1610
 12818              	.L884:
3357:fltk-1.3.4-1/png/pngrtran.c ****                         {
 12819              		.loc 1 3357 0
 12820 300d 85FF     		testl	%edi, %edi
 12821 300f 74CF     		je	.L1611
3364:fltk-1.3.4-1/png/pngrtran.c ****                      }
 12822              		.loc 1 3364 0
 12823 3011 83EF04   		subl	$4, %edi
 12824              	.LVL1612:
 12825 3014 EBD3     		jmp	.L886
 12826              	.L1610:
 12827              	.LBB585:
3352:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 12828              		.loc 1 3352 0
 12829 3016 4489D1   		movl	%r10d, %ecx
 12830 3019 4489C8   		movl	%r9d, %eax
 12831 301c 29F9     		subl	%edi, %ecx
 12832 301e D3F8     		sarl	%cl, %eax
3354:fltk-1.3.4-1/png/pngrtran.c ****                         }
 12833              		.loc 1 3354 0
 12834 3020 89F9     		movl	%edi, %ecx
3352:fltk-1.3.4-1/png/pngrtran.c ****                            tmp |= png_ptr->background.gray << shift;
 12835              		.loc 1 3352 0
 12836 3022 21C6     		andl	%eax, %esi
 12837              	.LVL1613:
3354:fltk-1.3.4-1/png/pngrtran.c ****                         }
 12838              		.loc 1 3354 0
 12839 3024 0FB78390 		movzwl	656(%rbx), %eax
 12839      020000
 12840 302b D3E0     		sall	%cl, %eax
 12841 302d 09C6     		orl	%eax, %esi
 12842              	.LVL1614:
 12843 302f 408832   		movb	%sil, (%rdx)
 12844              	.LVL1615:
 12845 3032 EBD9     		jmp	.L884
 12846              	.LVL1616:
 12847              	.L1588:
 12848 3034 418D43FF 		leal	-1(%r11), %eax
 12849              	.LBE585:
3389:fltk-1.3.4-1/png/pngrtran.c ****                      {
 12850              		.loc 1 3389 0
 12851 3038 4585DB   		testl	%r11d, %r11d
 12852 303b 498D4C06 		leaq	2(%r14,%rax), %rcx
 12852      02
 12853              	.LVL1617:
 12854 3040 751B     		jne	.L894
 12855 3042 E989F2FF 		jmp	.L860
 12855      FF
 12856              	.LVL1618:
 12857 3047 660F1F84 		.p2align 4,,10
 12857      00000000 
 12857      00
 12858              		.p2align 3
 12859              	.L893:
 12860 3050 4883C201 		addq	$1, %rdx
 12861              	.LVL1619:
 12862 3054 4839CA   		cmpq	%rcx, %rdx
 12863 3057 0F84BBDE 		je	.L848
 12863      FFFF
 12864              	.L894:
 12865              	.LVL1620:
3391:fltk-1.3.4-1/png/pngrtran.c ****                            *sp = (png_byte)png_ptr->background.gray;
 12866              		.loc 1 3391 0
 12867 305d 0FB602   		movzbl	(%rdx), %eax
 12868 3060 663B8308 		cmpw	776(%rbx), %ax
 12868      030000
 12869 3067 75E7     		jne	.L893
3392:fltk-1.3.4-1/png/pngrtran.c ****                      }
 12870              		.loc 1 3392 0
 12871 3069 0FB78390 		movzwl	656(%rbx), %eax
 12871      020000
 12872 3070 8802     		movb	%al, (%rdx)
 12873 3072 EBDC     		jmp	.L893
 12874              	.LVL1621:
 12875              	.L1523:
 12876              	.LBE596:
 12877              	.LBE830:
4727:fltk-1.3.4-1/png/pngrtran.c ****    }
 12878              		.loc 1 4727 0
 12879 3074 BE000000 		movl	$.LC51, %esi
 12879      00
 12880 3079 E8000000 		call	png_error
 12880      00
 12881              	.LVL1622:
 12882              	.L1522:
4711:fltk-1.3.4-1/png/pngrtran.c ****    }
 12883              		.loc 1 4711 0
 12884 307e BE000000 		movl	$.LC50, %esi
 12884      00
 12885 3083 E8000000 		call	png_error
 12885      00
 12886              	.LVL1623:
 12887              	.L1546:
 12888              		.loc 1 4991 0
 12889 3088 E8000000 		call	__stack_chk_fail
 12889      00
 12890              	.LVL1624:
 12891              	.L1044:
4887:fltk-1.3.4-1/png/pngrtran.c ****    }
 12892              		.loc 1 4887 0
 12893 308d BE000000 		movl	$.LC54, %esi
 12893      00
 12894 3092 4889DF   		movq	%rbx, %rdi
 12895 3095 E8000000 		call	png_error
 12895      00
 12896              	.LVL1625:
 12897              	.L1580:
 12898 309a 8B833401 		movl	308(%rbx), %eax
 12898      0000
 12899 30a0 E904D0FF 		jmp	.L807
 12899      FF
 12900              		.cfi_endproc
 12901              	.LFE100:
 12903              		.section	.text.unlikely.png_do_read_transformations
 12904              	.LCOLDE55:
 12905              		.section	.text.png_do_read_transformations
 12906              	.LHOTE55:
 12907              		.section	.rodata.cst8,"aM",@progbits,8
 12908              		.align 8
 12909              	.LC5:
 12910 0000 00000000 		.long	0
 12911 0004 00000000 		.long	0
 12912              		.align 8
 12913              	.LC6:
 12914 0008 00000000 		.long	0
 12915 000c 00006040 		.long	1080033280
 12916              		.align 8
 12917              	.LC7:
 12918 0010 00000000 		.long	0
 12919 0014 006AF840 		.long	1090021888
 12920              		.align 8
 12921              	.LC8:
 12922 0018 00000000 		.long	0
 12923 001c 0000E03F 		.long	1071644672
 12924              		.align 8
 12925              	.LC9:
 12926 0020 0000C0FF 		.long	4290772992
 12927 0024 FFFFDF41 		.long	1105199103
 12928              		.align 8
 12929              	.LC10:
 12930 0028 0000C0FF 		.long	4290772992
 12931 002c FFFFDFC1 		.long	-1042284545
 12932              		.text
 12933              	.Letext0:
 12934              		.section	.text.unlikely.png_do_gray_to_rgb
 12935              	.Letext_cold0:
 12936              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 12937              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 12938              		.file 5 "/usr/include/libio.h"
 12939              		.file 6 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 12940              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sigset.h"
 12941              		.file 8 "/usr/include/setjmp.h"
 12942              		.file 9 "fltk-1.3.4-1/png/pngconf.h"
 12943              		.file 10 "fltk-1.3.4-1/png/png.h"
 12944              		.file 11 "fltk-1.3.4-1/png/pngstruct.h"
 12945              		.file 12 "fltk-1.3.4-1/png/pnginfo.h"
 12946              		.file 13 "/usr/include/x86_64-linux-gnu/zconf.h"
 12947              		.file 14 "/usr/include/zlib.h"
 12948              		.file 15 "fltk-1.3.4-1/png/pngpriv.h"
 12949              		.file 16 "/usr/include/stdio.h"
 12950              		.file 17 "/usr/include/x86_64-linux-gnu/bits/mathcalls.h"
 12951              		.file 18 "<built-in>"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngrtran.c
     /tmp/ccIuOZST.s:13     .text.png_do_gray_to_rgb:0000000000000000 png_do_gray_to_rgb
     /tmp/ccIuOZST.s:319    .text.png_do_expand:0000000000000000 png_do_expand
     /tmp/ccIuOZST.s:1142   .text.png_rtran_ok:0000000000000000 png_rtran_ok
     /tmp/ccIuOZST.s:1232   .text.convert_gamma_value:0000000000000000 convert_gamma_value
     /tmp/ccIuOZST.s:1305   .text.png_set_crc_action:0000000000000000 png_set_crc_action
     /tmp/ccIuOZST.s:1499   .text.png_set_background_fixed:0000000000000000 png_set_background_fixed
     /tmp/ccIuOZST.s:1665   .text.png_set_background:0000000000000000 png_set_background
     /tmp/ccIuOZST.s:1734   .text.png_set_scale_16:0000000000000000 png_set_scale_16
     /tmp/ccIuOZST.s:1773   .text.png_set_strip_16:0000000000000000 png_set_strip_16
     /tmp/ccIuOZST.s:1812   .text.png_set_strip_alpha:0000000000000000 png_set_strip_alpha
     /tmp/ccIuOZST.s:1862   .text.png_set_alpha_mode_fixed:0000000000000000 png_set_alpha_mode_fixed
     /tmp/ccIuOZST.s:2132   .text.png_set_alpha_mode:0000000000000000 png_set_alpha_mode
     /tmp/ccIuOZST.s:2181   .text.png_set_quantize:0000000000000000 png_set_quantize
     /tmp/ccIuOZST.s:3302   .text.png_set_gamma_fixed:0000000000000000 png_set_gamma_fixed
     /tmp/ccIuOZST.s:3476   .text.png_set_gamma:0000000000000000 png_set_gamma
     /tmp/ccIuOZST.s:3533   .text.png_set_expand_gray_1_2_4_to_8:0000000000000000 png_set_expand_gray_1_2_4_to_8
     /tmp/ccIuOZST.s:3572   .text.png_set_tRNS_to_alpha:0000000000000000 png_set_tRNS_to_alpha
     /tmp/ccIuOZST.s:3611   .text.png_set_palette_to_rgb:0000000000000000 png_set_palette_to_rgb
     /tmp/ccIuOZST.s:3629   .text.png_set_expand:0000000000000000 png_set_expand
     /tmp/ccIuOZST.s:3647   .text.png_set_expand_16:0000000000000000 png_set_expand_16
     /tmp/ccIuOZST.s:3687   .text.png_set_gray_to_rgb:0000000000000000 png_set_gray_to_rgb
     /tmp/ccIuOZST.s:3775   .text.png_set_rgb_to_gray_fixed:0000000000000000 png_set_rgb_to_gray_fixed
     /tmp/ccIuOZST.s:3959   .text.png_set_rgb_to_gray:0000000000000000 png_set_rgb_to_gray
     /tmp/ccIuOZST.s:4029   .text.png_set_read_user_transform_fn:0000000000000000 png_set_read_user_transform_fn
     /tmp/ccIuOZST.s:4060   .text.png_init_read_transformations:0000000000000000 png_init_read_transformations
     /tmp/ccIuOZST.s:5809   .text.png_read_transform_info:0000000000000000 png_read_transform_info
     /tmp/ccIuOZST.s:6157   .text.png_do_read_transformations:0000000000000000 png_do_read_transformations
     /tmp/ccIuOZST.s:12909  .rodata.cst8:0000000000000000 .LC5
     /tmp/ccIuOZST.s:12913  .rodata.cst8:0000000000000008 .LC6
     /tmp/ccIuOZST.s:12921  .rodata.cst8:0000000000000018 .LC8
     /tmp/ccIuOZST.s:12925  .rodata.cst8:0000000000000020 .LC9
     /tmp/ccIuOZST.s:12929  .rodata.cst8:0000000000000028 .LC10
     /tmp/ccIuOZST.s:12917  .rodata.cst8:0000000000000010 .LC7
                           .group:0000000000000000 wm4.0.cf9695abff4f49bdfe00dc4091904acd
                           .group:0000000000000000 wm4.stdcpredef.h.19.bf2bf6c5fb087dfb5ef2d2297c2795de
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.22780be97c2f806ec599b8b99aa89f7d
                           .group:0000000000000000 wm4.cdefs.h.19.56613e71f285ebad825b69b151170a81
                           .group:0000000000000000 wm4.wordsize.h.4.256e8fdbd37801980286acdbc40d0280
                           .group:0000000000000000 wm4.cdefs.h.432.619afd0aac7c4b439843706c1b28ddea
                           .group:0000000000000000 wm4.stubs64.h.10.918ceb5fa58268542bf143e4c1efbcf3
                           .group:0000000000000000 wm4.stdlib.h.27.59e2586c75bdbcb991b248ad7257b993
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.stdlib.h.37.e081b308f911db94d3185af615f2b2e2
                           .group:0000000000000000 wm4.string.h.23.8394011d5995a16f15d67d04e84a1d69
                           .group:0000000000000000 wm4.stddef.h.238.04cc7214bceba497b20d15c10fd97511
                           .group:0000000000000000 wm4.string.h.24.1b0dc67418e7128d207285861439c2f8
                           .group:0000000000000000 wm4.endian.h.19.ff00c9c0f5e9f9a9719c5de76ace57b4
                           .group:0000000000000000 wm4.endian.h.41.27d650ce666b76881e2a2a218ea61984
                           .group:0000000000000000 wm4.types.h.89.468e2451361e3b92f048f6cad51690ff
                           .group:0000000000000000 wm4.typesizes.h.24.40eb69a6270178f15d1bf3d7b6635a8b
                           .group:0000000000000000 wm4.string2.h.55.e4a4cfd7781cc64a4341475e67436ab1
                           .group:0000000000000000 wm4.string3.h.31.2b75bd65145c50aeedb61673ce0d3293
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.f0fd92c175c1576df467c4d5fe2b091a
                           .group:0000000000000000 wm4.posix1_lim.h.25.28c8eb2d22697e7711efefdec5344a02
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.2.9ff59823e8adcf4502d980ef41362326
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.d5a83c17f38162a5dd6f834eaf38f8ef
                           .group:0000000000000000 wm4.stdio.h.26.4719156f1aea2bb9662fd6c582dc9a4c
                           .group:0000000000000000 wm4.stddef.h.161.19e15733342b50ead2919490b095303e
                           .group:0000000000000000 wm4.stdio.h.36.2dd12c1fd035242ad5cfd0152a01be5a
                           .group:0000000000000000 wm4._G_config.h.5.b0f37d9e474454cf6e459063458db32f
                           .group:0000000000000000 wm4.wchar.h.80.eea3eba2d2a17aace9470a8e0d8218dc
                           .group:0000000000000000 wm4._G_config.h.46.5187c97b14fd664662cb32e6b94fc49e
                           .group:0000000000000000 wm4.libio.h.33.a775b9ecae273f33bc59931e9891e4ca
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.libio.h.51.dab170798ec1df48c625aea7c30e1b63
                           .group:0000000000000000 wm4.stdio.h.120.80cbf0ec1718a5b27e6428218e29c72d
                           .group:0000000000000000 wm4.stdio_lim.h.23.f8541119d1bcf759d7de9531671fd758
                           .group:0000000000000000 wm4.stdio.h.172.df21df34a7396d7da2e08f9b617d582f
                           .group:0000000000000000 wm4.stdio.h.26.e50fc3808d57d965ceefc6f6dd102eb7
                           .group:0000000000000000 wm4.sigset.h.20.f36413b6d2364ad847d3db53fb03e683
                           .group:0000000000000000 wm4.setjmp.h.67.51aa194c3c89a841663c00cb93fd90ff
                           .group:0000000000000000 wm4.time.h.26.6a3cabd4f228e226db6723a3b0c81ba6
                           .group:0000000000000000 wm4.time.h.40.99bfb90272c7e82357ef3c2f5c6fefc8
                           .group:0000000000000000 wm4.time.h.53.f8af6908497bac0ca16faea86fb8cd87
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.1cf88a0527b6b1225d49fbee2b32acb7
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.75644856b74ba3d815155fe5fe7ecc56
                           .group:0000000000000000 wm4.mathdef.h.23.67c0aa4a204f1f427459dfc651aba565
                           .group:0000000000000000 wm4.math.h.55.cf380f99c57d42476a5252f30065036a
                           .group:0000000000000000 wm4.math.h.84.742292806c6be54f49dc607928a827f7
                           .group:0000000000000000 wm4.math.h.105.59ff0f83ebf6a04e70e145cef2d1185e
                           .group:0000000000000000 wm4.math.h.152.48a142bc1575e748473ff86330dee044
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.bbc7b5783b51507f7721a5620139b4ee
                           .group:0000000000000000 wm4.zconf.h.397.69c03305677a9a6792fe2a94f7c9f69b
                           .group:0000000000000000 wm4.types.h.23.92678977f3921b8dce508274ac68f78d
                           .group:0000000000000000 wm4.types.h.187.12f6c32afb936b45a5f241219964ce93
                           .group:0000000000000000 wm4.stdarg.h.31.48e922dd0aaedfb616aafd8a7b7a4949
                           .group:0000000000000000 wm4.unistd.h.23.c85a58a698f53edadcf64287ab24fecb
                           .group:0000000000000000 wm4.posix_opt.h.20.9a8aece77957db1725bd2b9521e5f9c5
                           .group:0000000000000000 wm4.unistd.h.213.4c582e35260d661b081322974b7c1e74
                           .group:0000000000000000 wm4.unistd.h.284.7e168706bc8bd978e02fd1da439d9bc3
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.457.505c3613686dd75e492569d7a56a6eb0
                           .group:0000000000000000 wm4.zlib.h.40.5a15529ab8e285cee4b0ddab32502c27
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8

UNDEFINED SYMBOLS
png_app_error
floor
png_fixed_error
png_warning
png_fixed
png_reciprocal
png_error
png_malloc
png_free
png_calloc
memset
png_malloc_warn
png_app_warning
png_muldiv
png_gamma_significant
png_build_gamma_table
png_reciprocal2
png_colorspace_set_rgb_coefficients
png_gamma_correct
png_gamma_8bit_correct
__stack_chk_fail
png_do_invert
png_do_check_palette_indexes
png_do_bgr
png_do_packswap
png_do_swap
png_do_strip_channel
