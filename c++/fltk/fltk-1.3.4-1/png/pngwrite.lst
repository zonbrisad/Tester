   1              		.file	"pngwrite.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.png_reset_filter_heuristics,"ax",@progbits
   5              		.p2align 4
   7              	png_reset_filter_heuristics:
   8              	.LVL0:
   9              	.LFB58:
  10              		.file 1 "fltk-1.3.4-1/png/pngwrite.c"
   1:fltk-1.3.4-1/png/pngwrite.c **** 
   2:fltk-1.3.4-1/png/pngwrite.c **** /* pngwrite.c - general routines to write a PNG file
   3:fltk-1.3.4-1/png/pngwrite.c ****  *
   4:fltk-1.3.4-1/png/pngwrite.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngwrite.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngwrite.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngwrite.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngwrite.c ****  *
   9:fltk-1.3.4-1/png/pngwrite.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngwrite.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngwrite.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngwrite.c ****  */
  13:fltk-1.3.4-1/png/pngwrite.c **** 
  14:fltk-1.3.4-1/png/pngwrite.c **** #include "pngpriv.h"
  15:fltk-1.3.4-1/png/pngwrite.c **** #if defined(PNG_SIMPLIFIED_WRITE_SUPPORTED) && defined(PNG_STDIO_SUPPORTED)
  16:fltk-1.3.4-1/png/pngwrite.c **** #  include <errno.h>
  17:fltk-1.3.4-1/png/pngwrite.c **** #endif
  18:fltk-1.3.4-1/png/pngwrite.c **** 
  19:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SUPPORTED
  20:fltk-1.3.4-1/png/pngwrite.c **** 
  21:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED
  22:fltk-1.3.4-1/png/pngwrite.c **** /* Write out all the unknown chunks for the current given location */
  23:fltk-1.3.4-1/png/pngwrite.c **** static void
  24:fltk-1.3.4-1/png/pngwrite.c **** write_unknown_chunks(png_structrp png_ptr, png_const_inforp info_ptr,
  25:fltk-1.3.4-1/png/pngwrite.c ****    unsigned int where)
  26:fltk-1.3.4-1/png/pngwrite.c **** {
  27:fltk-1.3.4-1/png/pngwrite.c ****    if (info_ptr->unknown_chunks_num != 0)
  28:fltk-1.3.4-1/png/pngwrite.c ****    {
  29:fltk-1.3.4-1/png/pngwrite.c ****       png_const_unknown_chunkp up;
  30:fltk-1.3.4-1/png/pngwrite.c **** 
  31:fltk-1.3.4-1/png/pngwrite.c ****       png_debug(5, "writing extra chunks");
  32:fltk-1.3.4-1/png/pngwrite.c **** 
  33:fltk-1.3.4-1/png/pngwrite.c ****       for (up = info_ptr->unknown_chunks;
  34:fltk-1.3.4-1/png/pngwrite.c ****            up < info_ptr->unknown_chunks + info_ptr->unknown_chunks_num;
  35:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
  36:fltk-1.3.4-1/png/pngwrite.c ****          if ((up->location & where) != 0)
  37:fltk-1.3.4-1/png/pngwrite.c ****       {
  38:fltk-1.3.4-1/png/pngwrite.c ****          /* If per-chunk unknown chunk handling is enabled use it, otherwise
  39:fltk-1.3.4-1/png/pngwrite.c ****           * just write the chunks the application has set.
  40:fltk-1.3.4-1/png/pngwrite.c ****           */
  41:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_SET_UNKNOWN_CHUNKS_SUPPORTED
  42:fltk-1.3.4-1/png/pngwrite.c ****          int keep = png_handle_as_unknown(png_ptr, up->name);
  43:fltk-1.3.4-1/png/pngwrite.c **** 
  44:fltk-1.3.4-1/png/pngwrite.c ****          /* NOTE: this code is radically different from the read side in the
  45:fltk-1.3.4-1/png/pngwrite.c ****           * matter of handling an ancillary unknown chunk.  In the read side
  46:fltk-1.3.4-1/png/pngwrite.c ****           * the default behavior is to discard it, in the code below the default
  47:fltk-1.3.4-1/png/pngwrite.c ****           * behavior is to write it.  Critical chunks are, however, only
  48:fltk-1.3.4-1/png/pngwrite.c ****           * written if explicitly listed or if the default is set to write all
  49:fltk-1.3.4-1/png/pngwrite.c ****           * unknown chunks.
  50:fltk-1.3.4-1/png/pngwrite.c ****           *
  51:fltk-1.3.4-1/png/pngwrite.c ****           * The default handling is also slightly weird - it is not possible to
  52:fltk-1.3.4-1/png/pngwrite.c ****           * stop the writing of all unsafe-to-copy chunks!
  53:fltk-1.3.4-1/png/pngwrite.c ****           *
  54:fltk-1.3.4-1/png/pngwrite.c ****           * TODO: REVIEW: this would seem to be a bug.
  55:fltk-1.3.4-1/png/pngwrite.c ****           */
  56:fltk-1.3.4-1/png/pngwrite.c ****          if (keep != PNG_HANDLE_CHUNK_NEVER &&
  57:fltk-1.3.4-1/png/pngwrite.c ****              ((up->name[3] & 0x20) /* safe-to-copy overrides everything */ ||
  58:fltk-1.3.4-1/png/pngwrite.c ****               keep == PNG_HANDLE_CHUNK_ALWAYS ||
  59:fltk-1.3.4-1/png/pngwrite.c ****               (keep == PNG_HANDLE_CHUNK_AS_DEFAULT &&
  60:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->unknown_default == PNG_HANDLE_CHUNK_ALWAYS)))
  61:fltk-1.3.4-1/png/pngwrite.c **** #endif
  62:fltk-1.3.4-1/png/pngwrite.c ****          {
  63:fltk-1.3.4-1/png/pngwrite.c ****             /* TODO: review, what is wrong with a zero length unknown chunk? */
  64:fltk-1.3.4-1/png/pngwrite.c ****             if (up->size == 0)
  65:fltk-1.3.4-1/png/pngwrite.c ****                png_warning(png_ptr, "Writing zero-length unknown chunk");
  66:fltk-1.3.4-1/png/pngwrite.c **** 
  67:fltk-1.3.4-1/png/pngwrite.c ****             png_write_chunk(png_ptr, up->name, up->data, up->size);
  68:fltk-1.3.4-1/png/pngwrite.c ****          }
  69:fltk-1.3.4-1/png/pngwrite.c ****       }
  70:fltk-1.3.4-1/png/pngwrite.c ****    }
  71:fltk-1.3.4-1/png/pngwrite.c **** }
  72:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_UNKNOWN_CHUNKS */
  73:fltk-1.3.4-1/png/pngwrite.c **** 
  74:fltk-1.3.4-1/png/pngwrite.c **** /* Writes all the PNG information.  This is the suggested way to use the
  75:fltk-1.3.4-1/png/pngwrite.c ****  * library.  If you have a new chunk to add, make a function to write it,
  76:fltk-1.3.4-1/png/pngwrite.c ****  * and put it in the correct location here.  If you want the chunk written
  77:fltk-1.3.4-1/png/pngwrite.c ****  * after the image data, put it in png_write_end().  I strongly encourage
  78:fltk-1.3.4-1/png/pngwrite.c ****  * you to supply a PNG_INFO_ flag, and check info_ptr->valid before writing
  79:fltk-1.3.4-1/png/pngwrite.c ****  * the chunk, as that will keep the code from breaking if you want to just
  80:fltk-1.3.4-1/png/pngwrite.c ****  * write a plain PNG file.  If you have long comments, I suggest writing
  81:fltk-1.3.4-1/png/pngwrite.c ****  * them in png_write_end(), and compressing them.
  82:fltk-1.3.4-1/png/pngwrite.c ****  */
  83:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
  84:fltk-1.3.4-1/png/pngwrite.c **** png_write_info_before_PLTE(png_structrp png_ptr, png_const_inforp info_ptr)
  85:fltk-1.3.4-1/png/pngwrite.c **** {
  86:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_info_before_PLTE");
  87:fltk-1.3.4-1/png/pngwrite.c **** 
  88:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL || info_ptr == NULL)
  89:fltk-1.3.4-1/png/pngwrite.c ****       return;
  90:fltk-1.3.4-1/png/pngwrite.c **** 
  91:fltk-1.3.4-1/png/pngwrite.c ****    if ((png_ptr->mode & PNG_WROTE_INFO_BEFORE_PLTE) == 0)
  92:fltk-1.3.4-1/png/pngwrite.c ****    {
  93:fltk-1.3.4-1/png/pngwrite.c ****    /* Write PNG signature */
  94:fltk-1.3.4-1/png/pngwrite.c ****    png_write_sig(png_ptr);
  95:fltk-1.3.4-1/png/pngwrite.c **** 
  96:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
  97:fltk-1.3.4-1/png/pngwrite.c ****    if ((png_ptr->mode & PNG_HAVE_PNG_SIGNATURE) != 0 && \
  98:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->mng_features_permitted != 0)
  99:fltk-1.3.4-1/png/pngwrite.c ****    {
 100:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "MNG features are not allowed in a PNG datastream");
 101:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->mng_features_permitted = 0;
 102:fltk-1.3.4-1/png/pngwrite.c ****    }
 103:fltk-1.3.4-1/png/pngwrite.c **** #endif
 104:fltk-1.3.4-1/png/pngwrite.c **** 
 105:fltk-1.3.4-1/png/pngwrite.c ****    /* Write IHDR information. */
 106:fltk-1.3.4-1/png/pngwrite.c ****    png_write_IHDR(png_ptr, info_ptr->width, info_ptr->height,
 107:fltk-1.3.4-1/png/pngwrite.c ****        info_ptr->bit_depth, info_ptr->color_type, info_ptr->compression_type,
 108:fltk-1.3.4-1/png/pngwrite.c ****        info_ptr->filter_type,
 109:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INTERLACING_SUPPORTED
 110:fltk-1.3.4-1/png/pngwrite.c ****        info_ptr->interlace_type
 111:fltk-1.3.4-1/png/pngwrite.c **** #else
 112:fltk-1.3.4-1/png/pngwrite.c ****        0
 113:fltk-1.3.4-1/png/pngwrite.c **** #endif
 114:fltk-1.3.4-1/png/pngwrite.c ****       );
 115:fltk-1.3.4-1/png/pngwrite.c **** 
 116:fltk-1.3.4-1/png/pngwrite.c ****    /* The rest of these check to see if the valid field has the appropriate
 117:fltk-1.3.4-1/png/pngwrite.c ****     * flag set, and if it does, writes the chunk.
 118:fltk-1.3.4-1/png/pngwrite.c ****     *
 119:fltk-1.3.4-1/png/pngwrite.c ****     * 1.6.0: COLORSPACE support controls the writing of these chunks too, and
 120:fltk-1.3.4-1/png/pngwrite.c ****     * the chunks will be written if the WRITE routine is there and information
 121:fltk-1.3.4-1/png/pngwrite.c ****     * is available in the COLORSPACE.  (See png_colorspace_sync_info in png.c
 122:fltk-1.3.4-1/png/pngwrite.c ****     * for where the valid flags get set.)
 123:fltk-1.3.4-1/png/pngwrite.c ****     *
 124:fltk-1.3.4-1/png/pngwrite.c ****     * Under certain circumstances the colorspace can be invalidated without
 125:fltk-1.3.4-1/png/pngwrite.c ****     * syncing the info_struct 'valid' flags; this happens if libpng detects and
 126:fltk-1.3.4-1/png/pngwrite.c ****     * error and calls png_error while the color space is being set, yet the
 127:fltk-1.3.4-1/png/pngwrite.c ****     * application continues writing the PNG.  So check the 'invalid' flag here
 128:fltk-1.3.4-1/png/pngwrite.c ****     * too.
 129:fltk-1.3.4-1/png/pngwrite.c ****     */
 130:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_GAMMA_SUPPORTED
 131:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_WRITE_gAMA_SUPPORTED
 132:fltk-1.3.4-1/png/pngwrite.c ****       if ((info_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) == 0 &&
 133:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_gAMA) != 0 &&
 134:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_gAMA) != 0)
 135:fltk-1.3.4-1/png/pngwrite.c ****          png_write_gAMA_fixed(png_ptr, info_ptr->colorspace.gamma);
 136:fltk-1.3.4-1/png/pngwrite.c **** #  endif
 137:fltk-1.3.4-1/png/pngwrite.c **** #endif
 138:fltk-1.3.4-1/png/pngwrite.c **** 
 139:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_COLORSPACE_SUPPORTED
 140:fltk-1.3.4-1/png/pngwrite.c ****    /* Write only one of sRGB or an ICC profile.  If a profile was supplied
 141:fltk-1.3.4-1/png/pngwrite.c ****     * and it matches one of the known sRGB ones issue a warning.
 142:fltk-1.3.4-1/png/pngwrite.c ****     */
 143:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_WRITE_iCCP_SUPPORTED
 144:fltk-1.3.4-1/png/pngwrite.c ****       if ((info_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) == 0 &&
 145:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_iCCP) != 0)
 146:fltk-1.3.4-1/png/pngwrite.c ****       {
 147:fltk-1.3.4-1/png/pngwrite.c **** #        ifdef PNG_WRITE_sRGB_SUPPORTED
 148:fltk-1.3.4-1/png/pngwrite.c ****             if ((info_ptr->valid & PNG_INFO_sRGB) != 0)
 149:fltk-1.3.4-1/png/pngwrite.c ****                png_app_warning(png_ptr,
 150:fltk-1.3.4-1/png/pngwrite.c ****                   "profile matches sRGB but writing iCCP instead");
 151:fltk-1.3.4-1/png/pngwrite.c **** #        endif
 152:fltk-1.3.4-1/png/pngwrite.c **** 
 153:fltk-1.3.4-1/png/pngwrite.c ****          png_write_iCCP(png_ptr, info_ptr->iccp_name,
 154:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->iccp_profile);
 155:fltk-1.3.4-1/png/pngwrite.c ****       }
 156:fltk-1.3.4-1/png/pngwrite.c **** #     ifdef PNG_WRITE_sRGB_SUPPORTED
 157:fltk-1.3.4-1/png/pngwrite.c ****          else
 158:fltk-1.3.4-1/png/pngwrite.c **** #     endif
 159:fltk-1.3.4-1/png/pngwrite.c **** #  endif
 160:fltk-1.3.4-1/png/pngwrite.c **** 
 161:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_WRITE_sRGB_SUPPORTED
 162:fltk-1.3.4-1/png/pngwrite.c ****       if ((info_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) == 0 &&
 163:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_sRGB) != 0)
 164:fltk-1.3.4-1/png/pngwrite.c ****          png_write_sRGB(png_ptr, info_ptr->colorspace.rendering_intent);
 165:fltk-1.3.4-1/png/pngwrite.c **** #  endif /* WRITE_sRGB */
 166:fltk-1.3.4-1/png/pngwrite.c **** #endif /* COLORSPACE */
 167:fltk-1.3.4-1/png/pngwrite.c **** 
 168:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_sBIT_SUPPORTED
 169:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_sBIT) != 0)
 170:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sBIT(png_ptr, &(info_ptr->sig_bit), info_ptr->color_type);
 171:fltk-1.3.4-1/png/pngwrite.c **** #endif
 172:fltk-1.3.4-1/png/pngwrite.c **** 
 173:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_COLORSPACE_SUPPORTED
 174:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_WRITE_cHRM_SUPPORTED
 175:fltk-1.3.4-1/png/pngwrite.c ****       if ((info_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) == 0 &&
 176:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0 &&
 177:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->valid & PNG_INFO_cHRM) != 0)
 178:fltk-1.3.4-1/png/pngwrite.c ****          png_write_cHRM_fixed(png_ptr, &info_ptr->colorspace.end_points_xy);
 179:fltk-1.3.4-1/png/pngwrite.c **** #  endif
 180:fltk-1.3.4-1/png/pngwrite.c **** #endif
 181:fltk-1.3.4-1/png/pngwrite.c **** 
 182:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED
 183:fltk-1.3.4-1/png/pngwrite.c ****       write_unknown_chunks(png_ptr, info_ptr, PNG_HAVE_IHDR);
 184:fltk-1.3.4-1/png/pngwrite.c **** #endif
 185:fltk-1.3.4-1/png/pngwrite.c **** 
 186:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->mode |= PNG_WROTE_INFO_BEFORE_PLTE;
 187:fltk-1.3.4-1/png/pngwrite.c ****    }
 188:fltk-1.3.4-1/png/pngwrite.c **** }
 189:fltk-1.3.4-1/png/pngwrite.c **** 
 190:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 191:fltk-1.3.4-1/png/pngwrite.c **** png_write_info(png_structrp png_ptr, png_const_inforp info_ptr)
 192:fltk-1.3.4-1/png/pngwrite.c **** {
 193:fltk-1.3.4-1/png/pngwrite.c **** #if defined(PNG_WRITE_TEXT_SUPPORTED) || defined(PNG_WRITE_sPLT_SUPPORTED)
 194:fltk-1.3.4-1/png/pngwrite.c ****    int i;
 195:fltk-1.3.4-1/png/pngwrite.c **** #endif
 196:fltk-1.3.4-1/png/pngwrite.c **** 
 197:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_info");
 198:fltk-1.3.4-1/png/pngwrite.c **** 
 199:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL || info_ptr == NULL)
 200:fltk-1.3.4-1/png/pngwrite.c ****       return;
 201:fltk-1.3.4-1/png/pngwrite.c **** 
 202:fltk-1.3.4-1/png/pngwrite.c ****    png_write_info_before_PLTE(png_ptr, info_ptr);
 203:fltk-1.3.4-1/png/pngwrite.c **** 
 204:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_PLTE) != 0)
 205:fltk-1.3.4-1/png/pngwrite.c ****       png_write_PLTE(png_ptr, info_ptr->palette,
 206:fltk-1.3.4-1/png/pngwrite.c ****           (png_uint_32)info_ptr->num_palette);
 207:fltk-1.3.4-1/png/pngwrite.c **** 
 208:fltk-1.3.4-1/png/pngwrite.c ****    else if ((info_ptr->color_type == PNG_COLOR_TYPE_PALETTE) !=0)
 209:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "Valid palette required for paletted images");
 210:fltk-1.3.4-1/png/pngwrite.c **** 
 211:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_tRNS_SUPPORTED
 212:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_tRNS) !=0)
 213:fltk-1.3.4-1/png/pngwrite.c ****    {
 214:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_ALPHA_SUPPORTED
 215:fltk-1.3.4-1/png/pngwrite.c ****       /* Invert the alpha channel (in tRNS) */
 216:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_INVERT_ALPHA) != 0 &&
 217:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 218:fltk-1.3.4-1/png/pngwrite.c ****       {
 219:fltk-1.3.4-1/png/pngwrite.c ****          int j;
 220:fltk-1.3.4-1/png/pngwrite.c ****          for (j = 0; j<(int)info_ptr->num_trans; j++)
 221:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 222:fltk-1.3.4-1/png/pngwrite.c ****                (png_byte)(255 - info_ptr->trans_alpha[j]);
 223:fltk-1.3.4-1/png/pngwrite.c ****       }
 224:fltk-1.3.4-1/png/pngwrite.c **** #endif
 225:fltk-1.3.4-1/png/pngwrite.c ****       png_write_tRNS(png_ptr, info_ptr->trans_alpha, &(info_ptr->trans_color),
 226:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->num_trans, info_ptr->color_type);
 227:fltk-1.3.4-1/png/pngwrite.c ****    }
 228:fltk-1.3.4-1/png/pngwrite.c **** #endif
 229:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_bKGD_SUPPORTED
 230:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_bKGD) != 0)
 231:fltk-1.3.4-1/png/pngwrite.c ****       png_write_bKGD(png_ptr, &(info_ptr->background), info_ptr->color_type);
 232:fltk-1.3.4-1/png/pngwrite.c **** #endif
 233:fltk-1.3.4-1/png/pngwrite.c **** 
 234:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_hIST_SUPPORTED
 235:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_hIST) != 0)
 236:fltk-1.3.4-1/png/pngwrite.c ****       png_write_hIST(png_ptr, info_ptr->hist, info_ptr->num_palette);
 237:fltk-1.3.4-1/png/pngwrite.c **** #endif
 238:fltk-1.3.4-1/png/pngwrite.c **** 
 239:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_oFFs_SUPPORTED
 240:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_oFFs) != 0)
 241:fltk-1.3.4-1/png/pngwrite.c ****       png_write_oFFs(png_ptr, info_ptr->x_offset, info_ptr->y_offset,
 242:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->offset_unit_type);
 243:fltk-1.3.4-1/png/pngwrite.c **** #endif
 244:fltk-1.3.4-1/png/pngwrite.c **** 
 245:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_pCAL_SUPPORTED
 246:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_pCAL) != 0)
 247:fltk-1.3.4-1/png/pngwrite.c ****       png_write_pCAL(png_ptr, info_ptr->pcal_purpose, info_ptr->pcal_X0,
 248:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->pcal_X1, info_ptr->pcal_type, info_ptr->pcal_nparams,
 249:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->pcal_units, info_ptr->pcal_params);
 250:fltk-1.3.4-1/png/pngwrite.c **** #endif
 251:fltk-1.3.4-1/png/pngwrite.c **** 
 252:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_sCAL_SUPPORTED
 253:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_sCAL) != 0)
 254:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sCAL_s(png_ptr, (int)info_ptr->scal_unit,
 255:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->scal_s_width, info_ptr->scal_s_height);
 256:fltk-1.3.4-1/png/pngwrite.c **** #endif /* sCAL */
 257:fltk-1.3.4-1/png/pngwrite.c **** 
 258:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_pHYs_SUPPORTED
 259:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_pHYs) != 0)
 260:fltk-1.3.4-1/png/pngwrite.c ****       png_write_pHYs(png_ptr, info_ptr->x_pixels_per_unit,
 261:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->y_pixels_per_unit, info_ptr->phys_unit_type);
 262:fltk-1.3.4-1/png/pngwrite.c **** #endif /* pHYs */
 263:fltk-1.3.4-1/png/pngwrite.c **** 
 264:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_tIME_SUPPORTED
 265:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_tIME) != 0)
 266:fltk-1.3.4-1/png/pngwrite.c ****    {
 267:fltk-1.3.4-1/png/pngwrite.c ****       png_write_tIME(png_ptr, &(info_ptr->mod_time));
 268:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->mode |= PNG_WROTE_tIME;
 269:fltk-1.3.4-1/png/pngwrite.c ****    }
 270:fltk-1.3.4-1/png/pngwrite.c **** #endif /* tIME */
 271:fltk-1.3.4-1/png/pngwrite.c **** 
 272:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_sPLT_SUPPORTED
 273:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_sPLT) != 0)
 274:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < (int)info_ptr->splt_palettes_num; i++)
 275:fltk-1.3.4-1/png/pngwrite.c ****          png_write_sPLT(png_ptr, info_ptr->splt_palettes + i);
 276:fltk-1.3.4-1/png/pngwrite.c **** #endif /* sPLT */
 277:fltk-1.3.4-1/png/pngwrite.c **** 
 278:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_TEXT_SUPPORTED
 279:fltk-1.3.4-1/png/pngwrite.c ****    /* Check to see if we need to write text chunks */
 280:fltk-1.3.4-1/png/pngwrite.c ****    for (i = 0; i < info_ptr->num_text; i++)
 281:fltk-1.3.4-1/png/pngwrite.c ****    {
 282:fltk-1.3.4-1/png/pngwrite.c ****       png_debug2(2, "Writing header text chunk %d, type %d", i,
 283:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->text[i].compression);
 284:fltk-1.3.4-1/png/pngwrite.c ****       /* An internationalized chunk? */
 285:fltk-1.3.4-1/png/pngwrite.c ****       if (info_ptr->text[i].compression > 0)
 286:fltk-1.3.4-1/png/pngwrite.c ****       {
 287:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_iTXt_SUPPORTED
 288:fltk-1.3.4-1/png/pngwrite.c ****          /* Write international chunk */
 289:fltk-1.3.4-1/png/pngwrite.c ****          png_write_iTXt(png_ptr,
 290:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].compression,
 291:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].key,
 292:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].lang,
 293:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].lang_key,
 294:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].text);
 295:fltk-1.3.4-1/png/pngwrite.c ****          /* Mark this chunk as written */
 296:fltk-1.3.4-1/png/pngwrite.c ****          if (info_ptr->text[i].compression == PNG_TEXT_COMPRESSION_NONE)
 297:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 298:fltk-1.3.4-1/png/pngwrite.c ****          else
 299:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_zTXt_WR;
 300:fltk-1.3.4-1/png/pngwrite.c **** #else
 301:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "Unable to write international text");
 302:fltk-1.3.4-1/png/pngwrite.c **** #endif
 303:fltk-1.3.4-1/png/pngwrite.c ****       }
 304:fltk-1.3.4-1/png/pngwrite.c **** 
 305:fltk-1.3.4-1/png/pngwrite.c ****       /* If we want a compressed text chunk */
 306:fltk-1.3.4-1/png/pngwrite.c ****       else if (info_ptr->text[i].compression == PNG_TEXT_COMPRESSION_zTXt)
 307:fltk-1.3.4-1/png/pngwrite.c ****       {
 308:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_zTXt_SUPPORTED
 309:fltk-1.3.4-1/png/pngwrite.c ****          /* Write compressed chunk */
 310:fltk-1.3.4-1/png/pngwrite.c ****          png_write_zTXt(png_ptr, info_ptr->text[i].key,
 311:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].text, info_ptr->text[i].compression);
 312:fltk-1.3.4-1/png/pngwrite.c ****          /* Mark this chunk as written */
 313:fltk-1.3.4-1/png/pngwrite.c ****          info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_zTXt_WR;
 314:fltk-1.3.4-1/png/pngwrite.c **** #else
 315:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "Unable to write compressed text");
 316:fltk-1.3.4-1/png/pngwrite.c **** #endif
 317:fltk-1.3.4-1/png/pngwrite.c ****       }
 318:fltk-1.3.4-1/png/pngwrite.c **** 
 319:fltk-1.3.4-1/png/pngwrite.c ****       else if (info_ptr->text[i].compression == PNG_TEXT_COMPRESSION_NONE)
 320:fltk-1.3.4-1/png/pngwrite.c ****       {
 321:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_tEXt_SUPPORTED
 322:fltk-1.3.4-1/png/pngwrite.c ****          /* Write uncompressed chunk */
 323:fltk-1.3.4-1/png/pngwrite.c ****          png_write_tEXt(png_ptr, info_ptr->text[i].key,
 324:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].text,
 325:fltk-1.3.4-1/png/pngwrite.c ****              0);
 326:fltk-1.3.4-1/png/pngwrite.c ****          /* Mark this chunk as written */
 327:fltk-1.3.4-1/png/pngwrite.c ****          info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 328:fltk-1.3.4-1/png/pngwrite.c **** #else
 329:fltk-1.3.4-1/png/pngwrite.c ****          /* Can't get here */
 330:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "Unable to write uncompressed text");
 331:fltk-1.3.4-1/png/pngwrite.c **** #endif
 332:fltk-1.3.4-1/png/pngwrite.c ****       }
 333:fltk-1.3.4-1/png/pngwrite.c ****    }
 334:fltk-1.3.4-1/png/pngwrite.c **** #endif /* tEXt */
 335:fltk-1.3.4-1/png/pngwrite.c **** 
 336:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED
 337:fltk-1.3.4-1/png/pngwrite.c ****    write_unknown_chunks(png_ptr, info_ptr, PNG_HAVE_PLTE);
 338:fltk-1.3.4-1/png/pngwrite.c **** #endif
 339:fltk-1.3.4-1/png/pngwrite.c **** }
 340:fltk-1.3.4-1/png/pngwrite.c **** 
 341:fltk-1.3.4-1/png/pngwrite.c **** /* Writes the end of the PNG file.  If you don't want to write comments or
 342:fltk-1.3.4-1/png/pngwrite.c ****  * time information, you can pass NULL for info.  If you already wrote these
 343:fltk-1.3.4-1/png/pngwrite.c ****  * in png_write_info(), do not write them again here.  If you have long
 344:fltk-1.3.4-1/png/pngwrite.c ****  * comments, I suggest writing them here, and compressing them.
 345:fltk-1.3.4-1/png/pngwrite.c ****  */
 346:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 347:fltk-1.3.4-1/png/pngwrite.c **** png_write_end(png_structrp png_ptr, png_inforp info_ptr)
 348:fltk-1.3.4-1/png/pngwrite.c **** {
 349:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_end");
 350:fltk-1.3.4-1/png/pngwrite.c **** 
 351:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 352:fltk-1.3.4-1/png/pngwrite.c ****       return;
 353:fltk-1.3.4-1/png/pngwrite.c **** 
 354:fltk-1.3.4-1/png/pngwrite.c ****    if ((png_ptr->mode & PNG_HAVE_IDAT) == 0)
 355:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "No IDATs written into file");
 356:fltk-1.3.4-1/png/pngwrite.c **** 
 357:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_CHECK_FOR_INVALID_INDEX_SUPPORTED
 358:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->num_palette_max > png_ptr->num_palette)
 359:fltk-1.3.4-1/png/pngwrite.c ****       png_benign_error(png_ptr, "Wrote palette index exceeding num_palette");
 360:fltk-1.3.4-1/png/pngwrite.c **** #endif
 361:fltk-1.3.4-1/png/pngwrite.c **** 
 362:fltk-1.3.4-1/png/pngwrite.c ****    /* See if user wants us to write information chunks */
 363:fltk-1.3.4-1/png/pngwrite.c ****    if (info_ptr != NULL)
 364:fltk-1.3.4-1/png/pngwrite.c ****    {
 365:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_TEXT_SUPPORTED
 366:fltk-1.3.4-1/png/pngwrite.c ****       int i; /* local index variable */
 367:fltk-1.3.4-1/png/pngwrite.c **** #endif
 368:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_tIME_SUPPORTED
 369:fltk-1.3.4-1/png/pngwrite.c ****       /* Check to see if user has supplied a time chunk */
 370:fltk-1.3.4-1/png/pngwrite.c ****       if ((info_ptr->valid & PNG_INFO_tIME) != 0 &&
 371:fltk-1.3.4-1/png/pngwrite.c ****           (png_ptr->mode & PNG_WROTE_tIME) == 0)
 372:fltk-1.3.4-1/png/pngwrite.c ****          png_write_tIME(png_ptr, &(info_ptr->mod_time));
 373:fltk-1.3.4-1/png/pngwrite.c **** 
 374:fltk-1.3.4-1/png/pngwrite.c **** #endif
 375:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_TEXT_SUPPORTED
 376:fltk-1.3.4-1/png/pngwrite.c ****       /* Loop through comment chunks */
 377:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < info_ptr->num_text; i++)
 378:fltk-1.3.4-1/png/pngwrite.c ****       {
 379:fltk-1.3.4-1/png/pngwrite.c ****          png_debug2(2, "Writing trailer text chunk %d, type %d", i,
 380:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression);
 381:fltk-1.3.4-1/png/pngwrite.c ****          /* An internationalized chunk? */
 382:fltk-1.3.4-1/png/pngwrite.c ****          if (info_ptr->text[i].compression > 0)
 383:fltk-1.3.4-1/png/pngwrite.c ****          {
 384:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_iTXt_SUPPORTED
 385:fltk-1.3.4-1/png/pngwrite.c ****             /* Write international chunk */
 386:fltk-1.3.4-1/png/pngwrite.c ****             png_write_iTXt(png_ptr,
 387:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].compression,
 388:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].key,
 389:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].lang,
 390:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].lang_key,
 391:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].text);
 392:fltk-1.3.4-1/png/pngwrite.c ****             /* Mark this chunk as written */
 393:fltk-1.3.4-1/png/pngwrite.c ****             if (info_ptr->text[i].compression == PNG_TEXT_COMPRESSION_NONE)
 394:fltk-1.3.4-1/png/pngwrite.c ****                info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 395:fltk-1.3.4-1/png/pngwrite.c ****             else
 396:fltk-1.3.4-1/png/pngwrite.c ****                info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_zTXt_WR;
 397:fltk-1.3.4-1/png/pngwrite.c **** #else
 398:fltk-1.3.4-1/png/pngwrite.c ****             png_warning(png_ptr, "Unable to write international text");
 399:fltk-1.3.4-1/png/pngwrite.c **** #endif
 400:fltk-1.3.4-1/png/pngwrite.c ****          }
 401:fltk-1.3.4-1/png/pngwrite.c **** 
 402:fltk-1.3.4-1/png/pngwrite.c ****          else if (info_ptr->text[i].compression >= PNG_TEXT_COMPRESSION_zTXt)
 403:fltk-1.3.4-1/png/pngwrite.c ****          {
 404:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_zTXt_SUPPORTED
 405:fltk-1.3.4-1/png/pngwrite.c ****             /* Write compressed chunk */
 406:fltk-1.3.4-1/png/pngwrite.c ****             png_write_zTXt(png_ptr, info_ptr->text[i].key,
 407:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].text, info_ptr->text[i].compression);
 408:fltk-1.3.4-1/png/pngwrite.c ****             /* Mark this chunk as written */
 409:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_zTXt_WR;
 410:fltk-1.3.4-1/png/pngwrite.c **** #else
 411:fltk-1.3.4-1/png/pngwrite.c ****             png_warning(png_ptr, "Unable to write compressed text");
 412:fltk-1.3.4-1/png/pngwrite.c **** #endif
 413:fltk-1.3.4-1/png/pngwrite.c ****          }
 414:fltk-1.3.4-1/png/pngwrite.c **** 
 415:fltk-1.3.4-1/png/pngwrite.c ****          else if (info_ptr->text[i].compression == PNG_TEXT_COMPRESSION_NONE)
 416:fltk-1.3.4-1/png/pngwrite.c ****          {
 417:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_tEXt_SUPPORTED
 418:fltk-1.3.4-1/png/pngwrite.c ****             /* Write uncompressed chunk */
 419:fltk-1.3.4-1/png/pngwrite.c ****             png_write_tEXt(png_ptr, info_ptr->text[i].key,
 420:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].text, 0);
 421:fltk-1.3.4-1/png/pngwrite.c ****             /* Mark this chunk as written */
 422:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 423:fltk-1.3.4-1/png/pngwrite.c **** #else
 424:fltk-1.3.4-1/png/pngwrite.c ****             png_warning(png_ptr, "Unable to write uncompressed text");
 425:fltk-1.3.4-1/png/pngwrite.c **** #endif
 426:fltk-1.3.4-1/png/pngwrite.c ****          }
 427:fltk-1.3.4-1/png/pngwrite.c ****       }
 428:fltk-1.3.4-1/png/pngwrite.c **** #endif
 429:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED
 430:fltk-1.3.4-1/png/pngwrite.c ****       write_unknown_chunks(png_ptr, info_ptr, PNG_AFTER_IDAT);
 431:fltk-1.3.4-1/png/pngwrite.c **** #endif
 432:fltk-1.3.4-1/png/pngwrite.c ****    }
 433:fltk-1.3.4-1/png/pngwrite.c **** 
 434:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->mode |= PNG_AFTER_IDAT;
 435:fltk-1.3.4-1/png/pngwrite.c **** 
 436:fltk-1.3.4-1/png/pngwrite.c ****    /* Write end of PNG file */
 437:fltk-1.3.4-1/png/pngwrite.c ****    png_write_IEND(png_ptr);
 438:fltk-1.3.4-1/png/pngwrite.c **** 
 439:fltk-1.3.4-1/png/pngwrite.c ****    /* This flush, added in libpng-1.0.8, removed from libpng-1.0.9beta03,
 440:fltk-1.3.4-1/png/pngwrite.c ****     * and restored again in libpng-1.2.30, may cause some applications that
 441:fltk-1.3.4-1/png/pngwrite.c ****     * do not set png_ptr->output_flush_fn to crash.  If your application
 442:fltk-1.3.4-1/png/pngwrite.c ****     * experiences a problem, please try building libpng with
 443:fltk-1.3.4-1/png/pngwrite.c ****     * PNG_WRITE_FLUSH_AFTER_IEND_SUPPORTED defined, and report the event to
 444:fltk-1.3.4-1/png/pngwrite.c ****     * png-mng-implement at lists.sf.net .
 445:fltk-1.3.4-1/png/pngwrite.c ****     */
 446:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FLUSH_SUPPORTED
 447:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_WRITE_FLUSH_AFTER_IEND_SUPPORTED
 448:fltk-1.3.4-1/png/pngwrite.c ****    png_flush(png_ptr);
 449:fltk-1.3.4-1/png/pngwrite.c **** #  endif
 450:fltk-1.3.4-1/png/pngwrite.c **** #endif
 451:fltk-1.3.4-1/png/pngwrite.c **** }
 452:fltk-1.3.4-1/png/pngwrite.c **** 
 453:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_CONVERT_tIME_SUPPORTED
 454:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 455:fltk-1.3.4-1/png/pngwrite.c **** png_convert_from_struct_tm(png_timep ptime, PNG_CONST struct tm * ttime)
 456:fltk-1.3.4-1/png/pngwrite.c **** {
 457:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_convert_from_struct_tm");
 458:fltk-1.3.4-1/png/pngwrite.c **** 
 459:fltk-1.3.4-1/png/pngwrite.c ****    ptime->year = (png_uint_16)(1900 + ttime->tm_year);
 460:fltk-1.3.4-1/png/pngwrite.c ****    ptime->month = (png_byte)(ttime->tm_mon + 1);
 461:fltk-1.3.4-1/png/pngwrite.c ****    ptime->day = (png_byte)ttime->tm_mday;
 462:fltk-1.3.4-1/png/pngwrite.c ****    ptime->hour = (png_byte)ttime->tm_hour;
 463:fltk-1.3.4-1/png/pngwrite.c ****    ptime->minute = (png_byte)ttime->tm_min;
 464:fltk-1.3.4-1/png/pngwrite.c ****    ptime->second = (png_byte)ttime->tm_sec;
 465:fltk-1.3.4-1/png/pngwrite.c **** }
 466:fltk-1.3.4-1/png/pngwrite.c **** 
 467:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 468:fltk-1.3.4-1/png/pngwrite.c **** png_convert_from_time_t(png_timep ptime, time_t ttime)
 469:fltk-1.3.4-1/png/pngwrite.c **** {
 470:fltk-1.3.4-1/png/pngwrite.c ****    struct tm *tbuf;
 471:fltk-1.3.4-1/png/pngwrite.c **** 
 472:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_convert_from_time_t");
 473:fltk-1.3.4-1/png/pngwrite.c **** 
 474:fltk-1.3.4-1/png/pngwrite.c ****    tbuf = gmtime(&ttime);
 475:fltk-1.3.4-1/png/pngwrite.c ****    png_convert_from_struct_tm(ptime, tbuf);
 476:fltk-1.3.4-1/png/pngwrite.c **** }
 477:fltk-1.3.4-1/png/pngwrite.c **** #endif
 478:fltk-1.3.4-1/png/pngwrite.c **** 
 479:fltk-1.3.4-1/png/pngwrite.c **** /* Initialize png_ptr structure, and allocate any memory needed */
 480:fltk-1.3.4-1/png/pngwrite.c **** PNG_FUNCTION(png_structp,PNGAPI
 481:fltk-1.3.4-1/png/pngwrite.c **** png_create_write_struct,(png_const_charp user_png_ver, png_voidp error_ptr,
 482:fltk-1.3.4-1/png/pngwrite.c ****     png_error_ptr error_fn, png_error_ptr warn_fn),PNG_ALLOCATED)
 483:fltk-1.3.4-1/png/pngwrite.c **** {
 484:fltk-1.3.4-1/png/pngwrite.c **** #ifndef PNG_USER_MEM_SUPPORTED
 485:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 486:fltk-1.3.4-1/png/pngwrite.c ****        error_fn, warn_fn, NULL, NULL, NULL);
 487:fltk-1.3.4-1/png/pngwrite.c **** #else
 488:fltk-1.3.4-1/png/pngwrite.c ****    return png_create_write_struct_2(user_png_ver, error_ptr, error_fn,
 489:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 490:fltk-1.3.4-1/png/pngwrite.c **** }
 491:fltk-1.3.4-1/png/pngwrite.c **** 
 492:fltk-1.3.4-1/png/pngwrite.c **** /* Alternate initialize png_ptr structure, and allocate any memory needed */
 493:fltk-1.3.4-1/png/pngwrite.c **** PNG_FUNCTION(png_structp,PNGAPI
 494:fltk-1.3.4-1/png/pngwrite.c **** png_create_write_struct_2,(png_const_charp user_png_ver, png_voidp error_ptr,
 495:fltk-1.3.4-1/png/pngwrite.c ****     png_error_ptr error_fn, png_error_ptr warn_fn, png_voidp mem_ptr,
 496:fltk-1.3.4-1/png/pngwrite.c ****     png_malloc_ptr malloc_fn, png_free_ptr free_fn),PNG_ALLOCATED)
 497:fltk-1.3.4-1/png/pngwrite.c **** {
 498:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 499:fltk-1.3.4-1/png/pngwrite.c ****        error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
 500:fltk-1.3.4-1/png/pngwrite.c **** #endif /* USER_MEM */
 501:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr != NULL)
 502:fltk-1.3.4-1/png/pngwrite.c ****    {
 503:fltk-1.3.4-1/png/pngwrite.c ****       /* Set the zlib control values to defaults; they can be overridden by the
 504:fltk-1.3.4-1/png/pngwrite.c ****        * application after the struct has been created.
 505:fltk-1.3.4-1/png/pngwrite.c ****        */
 506:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zbuffer_size = PNG_ZBUF_SIZE;
 507:fltk-1.3.4-1/png/pngwrite.c **** 
 508:fltk-1.3.4-1/png/pngwrite.c ****       /* The 'zlib_strategy' setting is irrelevant because png_default_claim in
 509:fltk-1.3.4-1/png/pngwrite.c ****        * pngwutil.c defaults it according to whether or not filters will be
 510:fltk-1.3.4-1/png/pngwrite.c ****        * used, and ignores this setting.
 511:fltk-1.3.4-1/png/pngwrite.c ****        */
 512:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_strategy = PNG_Z_DEFAULT_STRATEGY;
 513:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_level = PNG_Z_DEFAULT_COMPRESSION;
 514:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_mem_level = 8;
 515:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_window_bits = 15;
 516:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_method = 8;
 517:fltk-1.3.4-1/png/pngwrite.c **** 
 518:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_COMPRESSED_TEXT_SUPPORTED
 519:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_strategy = PNG_TEXT_Z_DEFAULT_STRATEGY;
 520:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_level = PNG_TEXT_Z_DEFAULT_COMPRESSION;
 521:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_mem_level = 8;
 522:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_window_bits = 15;
 523:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_method = 8;
 524:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_COMPRESSED_TEXT */
 525:fltk-1.3.4-1/png/pngwrite.c **** 
 526:fltk-1.3.4-1/png/pngwrite.c ****       /* This is a highly dubious configuration option; by default it is off,
 527:fltk-1.3.4-1/png/pngwrite.c ****        * but it may be appropriate for private builds that are testing
 528:fltk-1.3.4-1/png/pngwrite.c ****        * extensions not conformant to the current specification, or of
 529:fltk-1.3.4-1/png/pngwrite.c ****        * applications that must not fail to write at all costs!
 530:fltk-1.3.4-1/png/pngwrite.c ****        */
 531:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_BENIGN_WRITE_ERRORS_SUPPORTED
 532:fltk-1.3.4-1/png/pngwrite.c ****       /* In stable builds only warn if an application error can be completely
 533:fltk-1.3.4-1/png/pngwrite.c ****        * handled.
 534:fltk-1.3.4-1/png/pngwrite.c ****        */
 535:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->flags |= PNG_FLAG_BENIGN_ERRORS_WARN;
 536:fltk-1.3.4-1/png/pngwrite.c **** #endif
 537:fltk-1.3.4-1/png/pngwrite.c **** 
 538:fltk-1.3.4-1/png/pngwrite.c ****       /* App warnings are warnings in release (or release candidate) builds but
 539:fltk-1.3.4-1/png/pngwrite.c ****        * are errors during development.
 540:fltk-1.3.4-1/png/pngwrite.c ****        */
 541:fltk-1.3.4-1/png/pngwrite.c **** #if PNG_LIBPNG_BUILD_BASE_TYPE >= PNG_LIBPNG_BUILD_RC
 542:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->flags |= PNG_FLAG_APP_WARNINGS_WARN;
 543:fltk-1.3.4-1/png/pngwrite.c **** #endif
 544:fltk-1.3.4-1/png/pngwrite.c **** 
 545:fltk-1.3.4-1/png/pngwrite.c ****       /* TODO: delay this, it can be done in png_init_io() (if the app doesn't
 546:fltk-1.3.4-1/png/pngwrite.c ****        * do it itself) avoiding setting the default function if it is not
 547:fltk-1.3.4-1/png/pngwrite.c ****        * required.
 548:fltk-1.3.4-1/png/pngwrite.c ****        */
 549:fltk-1.3.4-1/png/pngwrite.c ****       png_set_write_fn(png_ptr, NULL, NULL, NULL);
 550:fltk-1.3.4-1/png/pngwrite.c ****    }
 551:fltk-1.3.4-1/png/pngwrite.c **** 
 552:fltk-1.3.4-1/png/pngwrite.c ****    return png_ptr;
 553:fltk-1.3.4-1/png/pngwrite.c **** }
 554:fltk-1.3.4-1/png/pngwrite.c **** 
 555:fltk-1.3.4-1/png/pngwrite.c **** 
 556:fltk-1.3.4-1/png/pngwrite.c **** /* Write a few rows of image data.  If the image is interlaced,
 557:fltk-1.3.4-1/png/pngwrite.c ****  * either you will have to write the 7 sub images, or, if you
 558:fltk-1.3.4-1/png/pngwrite.c ****  * have called png_set_interlace_handling(), you will have to
 559:fltk-1.3.4-1/png/pngwrite.c ****  * "write" the image seven times.
 560:fltk-1.3.4-1/png/pngwrite.c ****  */
 561:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 562:fltk-1.3.4-1/png/pngwrite.c **** png_write_rows(png_structrp png_ptr, png_bytepp row,
 563:fltk-1.3.4-1/png/pngwrite.c ****     png_uint_32 num_rows)
 564:fltk-1.3.4-1/png/pngwrite.c **** {
 565:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 i; /* row counter */
 566:fltk-1.3.4-1/png/pngwrite.c ****    png_bytepp rp; /* row pointer */
 567:fltk-1.3.4-1/png/pngwrite.c **** 
 568:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_rows");
 569:fltk-1.3.4-1/png/pngwrite.c **** 
 570:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 571:fltk-1.3.4-1/png/pngwrite.c ****       return;
 572:fltk-1.3.4-1/png/pngwrite.c **** 
 573:fltk-1.3.4-1/png/pngwrite.c ****    /* Loop through the rows */
 574:fltk-1.3.4-1/png/pngwrite.c ****    for (i = 0, rp = row; i < num_rows; i++, rp++)
 575:fltk-1.3.4-1/png/pngwrite.c ****    {
 576:fltk-1.3.4-1/png/pngwrite.c ****       png_write_row(png_ptr, *rp);
 577:fltk-1.3.4-1/png/pngwrite.c ****    }
 578:fltk-1.3.4-1/png/pngwrite.c **** }
 579:fltk-1.3.4-1/png/pngwrite.c **** 
 580:fltk-1.3.4-1/png/pngwrite.c **** /* Write the image.  You only need to call this function once, even
 581:fltk-1.3.4-1/png/pngwrite.c ****  * if you are writing an interlaced image.
 582:fltk-1.3.4-1/png/pngwrite.c ****  */
 583:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 584:fltk-1.3.4-1/png/pngwrite.c **** png_write_image(png_structrp png_ptr, png_bytepp image)
 585:fltk-1.3.4-1/png/pngwrite.c **** {
 586:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 i; /* row index */
 587:fltk-1.3.4-1/png/pngwrite.c ****    int pass, num_pass; /* pass variables */
 588:fltk-1.3.4-1/png/pngwrite.c ****    png_bytepp rp; /* points to current row */
 589:fltk-1.3.4-1/png/pngwrite.c **** 
 590:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 591:fltk-1.3.4-1/png/pngwrite.c ****       return;
 592:fltk-1.3.4-1/png/pngwrite.c **** 
 593:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_image");
 594:fltk-1.3.4-1/png/pngwrite.c **** 
 595:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INTERLACING_SUPPORTED
 596:fltk-1.3.4-1/png/pngwrite.c ****    /* Initialize interlace handling.  If image is not interlaced,
 597:fltk-1.3.4-1/png/pngwrite.c ****     * this will set pass to 1
 598:fltk-1.3.4-1/png/pngwrite.c ****     */
 599:fltk-1.3.4-1/png/pngwrite.c ****    num_pass = png_set_interlace_handling(png_ptr);
 600:fltk-1.3.4-1/png/pngwrite.c **** #else
 601:fltk-1.3.4-1/png/pngwrite.c ****    num_pass = 1;
 602:fltk-1.3.4-1/png/pngwrite.c **** #endif
 603:fltk-1.3.4-1/png/pngwrite.c ****    /* Loop through passes */
 604:fltk-1.3.4-1/png/pngwrite.c ****    for (pass = 0; pass < num_pass; pass++)
 605:fltk-1.3.4-1/png/pngwrite.c ****    {
 606:fltk-1.3.4-1/png/pngwrite.c ****       /* Loop through image */
 607:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0, rp = image; i < png_ptr->height; i++, rp++)
 608:fltk-1.3.4-1/png/pngwrite.c ****       {
 609:fltk-1.3.4-1/png/pngwrite.c ****          png_write_row(png_ptr, *rp);
 610:fltk-1.3.4-1/png/pngwrite.c ****       }
 611:fltk-1.3.4-1/png/pngwrite.c ****    }
 612:fltk-1.3.4-1/png/pngwrite.c **** }
 613:fltk-1.3.4-1/png/pngwrite.c **** 
 614:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
 615:fltk-1.3.4-1/png/pngwrite.c **** /* Performs intrapixel differencing  */
 616:fltk-1.3.4-1/png/pngwrite.c **** static void
 617:fltk-1.3.4-1/png/pngwrite.c **** png_do_write_intrapixel(png_row_infop row_info, png_bytep row)
 618:fltk-1.3.4-1/png/pngwrite.c **** {
 619:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_do_write_intrapixel");
 620:fltk-1.3.4-1/png/pngwrite.c **** 
 621:fltk-1.3.4-1/png/pngwrite.c ****    if ((row_info->color_type & PNG_COLOR_MASK_COLOR) != 0)
 622:fltk-1.3.4-1/png/pngwrite.c ****    {
 623:fltk-1.3.4-1/png/pngwrite.c ****       int bytes_per_pixel;
 624:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_32 row_width = row_info->width;
 625:fltk-1.3.4-1/png/pngwrite.c ****       if (row_info->bit_depth == 8)
 626:fltk-1.3.4-1/png/pngwrite.c ****       {
 627:fltk-1.3.4-1/png/pngwrite.c ****          png_bytep rp;
 628:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 i;
 629:fltk-1.3.4-1/png/pngwrite.c **** 
 630:fltk-1.3.4-1/png/pngwrite.c ****          if (row_info->color_type == PNG_COLOR_TYPE_RGB)
 631:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 3;
 632:fltk-1.3.4-1/png/pngwrite.c **** 
 633:fltk-1.3.4-1/png/pngwrite.c ****          else if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
 634:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 4;
 635:fltk-1.3.4-1/png/pngwrite.c **** 
 636:fltk-1.3.4-1/png/pngwrite.c ****          else
 637:fltk-1.3.4-1/png/pngwrite.c ****             return;
 638:fltk-1.3.4-1/png/pngwrite.c **** 
 639:fltk-1.3.4-1/png/pngwrite.c ****          for (i = 0, rp = row; i < row_width; i++, rp += bytes_per_pixel)
 640:fltk-1.3.4-1/png/pngwrite.c ****          {
 641:fltk-1.3.4-1/png/pngwrite.c ****             *(rp)     = (png_byte)((*rp       - *(rp + 1)) & 0xff);
 642:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 2) = (png_byte)((*(rp + 2) - *(rp + 1)) & 0xff);
 643:fltk-1.3.4-1/png/pngwrite.c ****          }
 644:fltk-1.3.4-1/png/pngwrite.c ****       }
 645:fltk-1.3.4-1/png/pngwrite.c **** 
 646:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_16BIT_SUPPORTED
 647:fltk-1.3.4-1/png/pngwrite.c ****       else if (row_info->bit_depth == 16)
 648:fltk-1.3.4-1/png/pngwrite.c ****       {
 649:fltk-1.3.4-1/png/pngwrite.c ****          png_bytep rp;
 650:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 i;
 651:fltk-1.3.4-1/png/pngwrite.c **** 
 652:fltk-1.3.4-1/png/pngwrite.c ****          if (row_info->color_type == PNG_COLOR_TYPE_RGB)
 653:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 6;
 654:fltk-1.3.4-1/png/pngwrite.c **** 
 655:fltk-1.3.4-1/png/pngwrite.c ****          else if (row_info->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
 656:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 8;
 657:fltk-1.3.4-1/png/pngwrite.c **** 
 658:fltk-1.3.4-1/png/pngwrite.c ****          else
 659:fltk-1.3.4-1/png/pngwrite.c ****             return;
 660:fltk-1.3.4-1/png/pngwrite.c **** 
 661:fltk-1.3.4-1/png/pngwrite.c ****          for (i = 0, rp = row; i < row_width; i++, rp += bytes_per_pixel)
 662:fltk-1.3.4-1/png/pngwrite.c ****          {
 663:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 s0   = (*(rp    ) << 8) | *(rp + 1);
 664:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 s1   = (*(rp + 2) << 8) | *(rp + 3);
 665:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 s2   = (*(rp + 4) << 8) | *(rp + 5);
 666:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 red  = (png_uint_32)((s0 - s1) & 0xffffL);
 667:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 blue = (png_uint_32)((s2 - s1) & 0xffffL);
 668:fltk-1.3.4-1/png/pngwrite.c ****             *(rp    ) = (png_byte)((red >> 8) & 0xff);
 669:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 670:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 4) = (png_byte)((blue >> 8) & 0xff);
 671:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 672:fltk-1.3.4-1/png/pngwrite.c ****          }
 673:fltk-1.3.4-1/png/pngwrite.c ****       }
 674:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_16BIT */
 675:fltk-1.3.4-1/png/pngwrite.c ****    }
 676:fltk-1.3.4-1/png/pngwrite.c **** }
 677:fltk-1.3.4-1/png/pngwrite.c **** #endif /* MNG_FEATURES */
 678:fltk-1.3.4-1/png/pngwrite.c **** 
 679:fltk-1.3.4-1/png/pngwrite.c **** /* Called by user to write a row of image data */
 680:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 681:fltk-1.3.4-1/png/pngwrite.c **** png_write_row(png_structrp png_ptr, png_const_bytep row)
 682:fltk-1.3.4-1/png/pngwrite.c **** {
 683:fltk-1.3.4-1/png/pngwrite.c ****    /* 1.5.6: moved from png_struct to be a local structure: */
 684:fltk-1.3.4-1/png/pngwrite.c ****    png_row_info row_info;
 685:fltk-1.3.4-1/png/pngwrite.c **** 
 686:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 687:fltk-1.3.4-1/png/pngwrite.c ****       return;
 688:fltk-1.3.4-1/png/pngwrite.c **** 
 689:fltk-1.3.4-1/png/pngwrite.c ****    png_debug2(1, "in png_write_row (row %u, pass %d)",
 690:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->row_number, png_ptr->pass);
 691:fltk-1.3.4-1/png/pngwrite.c **** 
 692:fltk-1.3.4-1/png/pngwrite.c ****    /* Initialize transformations and other stuff if first time */
 693:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->row_number == 0 && png_ptr->pass == 0)
 694:fltk-1.3.4-1/png/pngwrite.c ****    {
 695:fltk-1.3.4-1/png/pngwrite.c ****       /* Make sure we wrote the header info */
 696:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->mode & PNG_WROTE_INFO_BEFORE_PLTE) == 0)
 697:fltk-1.3.4-1/png/pngwrite.c ****          png_error(png_ptr,
 698:fltk-1.3.4-1/png/pngwrite.c ****              "png_write_info was never called before png_write_row");
 699:fltk-1.3.4-1/png/pngwrite.c **** 
 700:fltk-1.3.4-1/png/pngwrite.c ****       /* Check for transforms that have been set but were defined out */
 701:fltk-1.3.4-1/png/pngwrite.c **** #if !defined(PNG_WRITE_INVERT_SUPPORTED) && defined(PNG_READ_INVERT_SUPPORTED)
 702:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_INVERT_MONO) != 0)
 703:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "PNG_WRITE_INVERT_SUPPORTED is not defined");
 704:fltk-1.3.4-1/png/pngwrite.c **** #endif
 705:fltk-1.3.4-1/png/pngwrite.c **** 
 706:fltk-1.3.4-1/png/pngwrite.c **** #if !defined(PNG_WRITE_FILLER_SUPPORTED) && defined(PNG_READ_FILLER_SUPPORTED)
 707:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_FILLER) != 0)
 708:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "PNG_WRITE_FILLER_SUPPORTED is not defined");
 709:fltk-1.3.4-1/png/pngwrite.c **** #endif
 710:fltk-1.3.4-1/png/pngwrite.c **** #if !defined(PNG_WRITE_PACKSWAP_SUPPORTED) && \
 711:fltk-1.3.4-1/png/pngwrite.c ****     defined(PNG_READ_PACKSWAP_SUPPORTED)
 712:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_PACKSWAP) != 0)
 713:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr,
 714:fltk-1.3.4-1/png/pngwrite.c ****              "PNG_WRITE_PACKSWAP_SUPPORTED is not defined");
 715:fltk-1.3.4-1/png/pngwrite.c **** #endif
 716:fltk-1.3.4-1/png/pngwrite.c **** 
 717:fltk-1.3.4-1/png/pngwrite.c **** #if !defined(PNG_WRITE_PACK_SUPPORTED) && defined(PNG_READ_PACK_SUPPORTED)
 718:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_PACK) != 0)
 719:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "PNG_WRITE_PACK_SUPPORTED is not defined");
 720:fltk-1.3.4-1/png/pngwrite.c **** #endif
 721:fltk-1.3.4-1/png/pngwrite.c **** 
 722:fltk-1.3.4-1/png/pngwrite.c **** #if !defined(PNG_WRITE_SHIFT_SUPPORTED) && defined(PNG_READ_SHIFT_SUPPORTED)
 723:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_SHIFT) != 0)
 724:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "PNG_WRITE_SHIFT_SUPPORTED is not defined");
 725:fltk-1.3.4-1/png/pngwrite.c **** #endif
 726:fltk-1.3.4-1/png/pngwrite.c **** 
 727:fltk-1.3.4-1/png/pngwrite.c **** #if !defined(PNG_WRITE_BGR_SUPPORTED) && defined(PNG_READ_BGR_SUPPORTED)
 728:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_BGR) != 0)
 729:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "PNG_WRITE_BGR_SUPPORTED is not defined");
 730:fltk-1.3.4-1/png/pngwrite.c **** #endif
 731:fltk-1.3.4-1/png/pngwrite.c **** 
 732:fltk-1.3.4-1/png/pngwrite.c **** #if !defined(PNG_WRITE_SWAP_SUPPORTED) && defined(PNG_READ_SWAP_SUPPORTED)
 733:fltk-1.3.4-1/png/pngwrite.c ****       if ((png_ptr->transformations & PNG_SWAP_BYTES) != 0)
 734:fltk-1.3.4-1/png/pngwrite.c ****          png_warning(png_ptr, "PNG_WRITE_SWAP_SUPPORTED is not defined");
 735:fltk-1.3.4-1/png/pngwrite.c **** #endif
 736:fltk-1.3.4-1/png/pngwrite.c **** 
 737:fltk-1.3.4-1/png/pngwrite.c ****       png_write_start_row(png_ptr);
 738:fltk-1.3.4-1/png/pngwrite.c ****    }
 739:fltk-1.3.4-1/png/pngwrite.c **** 
 740:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INTERLACING_SUPPORTED
 741:fltk-1.3.4-1/png/pngwrite.c ****    /* If interlaced and not interested in row, return */
 742:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->interlaced != 0 &&
 743:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 744:fltk-1.3.4-1/png/pngwrite.c ****    {
 745:fltk-1.3.4-1/png/pngwrite.c ****       switch (png_ptr->pass)
 746:fltk-1.3.4-1/png/pngwrite.c ****       {
 747:fltk-1.3.4-1/png/pngwrite.c ****          case 0:
 748:fltk-1.3.4-1/png/pngwrite.c ****             if ((png_ptr->row_number & 0x07) != 0)
 749:fltk-1.3.4-1/png/pngwrite.c ****             {
 750:fltk-1.3.4-1/png/pngwrite.c ****                png_write_finish_row(png_ptr);
 751:fltk-1.3.4-1/png/pngwrite.c ****                return;
 752:fltk-1.3.4-1/png/pngwrite.c ****             }
 753:fltk-1.3.4-1/png/pngwrite.c ****             break;
 754:fltk-1.3.4-1/png/pngwrite.c **** 
 755:fltk-1.3.4-1/png/pngwrite.c ****          case 1:
 756:fltk-1.3.4-1/png/pngwrite.c ****             if ((png_ptr->row_number & 0x07) != 0 || png_ptr->width < 5)
 757:fltk-1.3.4-1/png/pngwrite.c ****             {
 758:fltk-1.3.4-1/png/pngwrite.c ****                png_write_finish_row(png_ptr);
 759:fltk-1.3.4-1/png/pngwrite.c ****                return;
 760:fltk-1.3.4-1/png/pngwrite.c ****             }
 761:fltk-1.3.4-1/png/pngwrite.c ****             break;
 762:fltk-1.3.4-1/png/pngwrite.c **** 
 763:fltk-1.3.4-1/png/pngwrite.c ****          case 2:
 764:fltk-1.3.4-1/png/pngwrite.c ****             if ((png_ptr->row_number & 0x07) != 4)
 765:fltk-1.3.4-1/png/pngwrite.c ****             {
 766:fltk-1.3.4-1/png/pngwrite.c ****                png_write_finish_row(png_ptr);
 767:fltk-1.3.4-1/png/pngwrite.c ****                return;
 768:fltk-1.3.4-1/png/pngwrite.c ****             }
 769:fltk-1.3.4-1/png/pngwrite.c ****             break;
 770:fltk-1.3.4-1/png/pngwrite.c **** 
 771:fltk-1.3.4-1/png/pngwrite.c ****          case 3:
 772:fltk-1.3.4-1/png/pngwrite.c ****             if ((png_ptr->row_number & 0x03) != 0 || png_ptr->width < 3)
 773:fltk-1.3.4-1/png/pngwrite.c ****             {
 774:fltk-1.3.4-1/png/pngwrite.c ****                png_write_finish_row(png_ptr);
 775:fltk-1.3.4-1/png/pngwrite.c ****                return;
 776:fltk-1.3.4-1/png/pngwrite.c ****             }
 777:fltk-1.3.4-1/png/pngwrite.c ****             break;
 778:fltk-1.3.4-1/png/pngwrite.c **** 
 779:fltk-1.3.4-1/png/pngwrite.c ****          case 4:
 780:fltk-1.3.4-1/png/pngwrite.c ****             if ((png_ptr->row_number & 0x03) != 2)
 781:fltk-1.3.4-1/png/pngwrite.c ****             {
 782:fltk-1.3.4-1/png/pngwrite.c ****                png_write_finish_row(png_ptr);
 783:fltk-1.3.4-1/png/pngwrite.c ****                return;
 784:fltk-1.3.4-1/png/pngwrite.c ****             }
 785:fltk-1.3.4-1/png/pngwrite.c ****             break;
 786:fltk-1.3.4-1/png/pngwrite.c **** 
 787:fltk-1.3.4-1/png/pngwrite.c ****          case 5:
 788:fltk-1.3.4-1/png/pngwrite.c ****             if ((png_ptr->row_number & 0x01) != 0 || png_ptr->width < 2)
 789:fltk-1.3.4-1/png/pngwrite.c ****             {
 790:fltk-1.3.4-1/png/pngwrite.c ****                png_write_finish_row(png_ptr);
 791:fltk-1.3.4-1/png/pngwrite.c ****                return;
 792:fltk-1.3.4-1/png/pngwrite.c ****             }
 793:fltk-1.3.4-1/png/pngwrite.c ****             break;
 794:fltk-1.3.4-1/png/pngwrite.c **** 
 795:fltk-1.3.4-1/png/pngwrite.c ****          case 6:
 796:fltk-1.3.4-1/png/pngwrite.c ****             if ((png_ptr->row_number & 0x01) == 0)
 797:fltk-1.3.4-1/png/pngwrite.c ****             {
 798:fltk-1.3.4-1/png/pngwrite.c ****                png_write_finish_row(png_ptr);
 799:fltk-1.3.4-1/png/pngwrite.c ****                return;
 800:fltk-1.3.4-1/png/pngwrite.c ****             }
 801:fltk-1.3.4-1/png/pngwrite.c ****             break;
 802:fltk-1.3.4-1/png/pngwrite.c **** 
 803:fltk-1.3.4-1/png/pngwrite.c ****          default: /* error: ignore it */
 804:fltk-1.3.4-1/png/pngwrite.c ****             break;
 805:fltk-1.3.4-1/png/pngwrite.c ****       }
 806:fltk-1.3.4-1/png/pngwrite.c ****    }
 807:fltk-1.3.4-1/png/pngwrite.c **** #endif
 808:fltk-1.3.4-1/png/pngwrite.c **** 
 809:fltk-1.3.4-1/png/pngwrite.c ****    /* Set up row info for transformations */
 810:fltk-1.3.4-1/png/pngwrite.c ****    row_info.color_type = png_ptr->color_type;
 811:fltk-1.3.4-1/png/pngwrite.c ****    row_info.width = png_ptr->usr_width;
 812:fltk-1.3.4-1/png/pngwrite.c ****    row_info.channels = png_ptr->usr_channels;
 813:fltk-1.3.4-1/png/pngwrite.c ****    row_info.bit_depth = png_ptr->usr_bit_depth;
 814:fltk-1.3.4-1/png/pngwrite.c ****    row_info.pixel_depth = (png_byte)(row_info.bit_depth * row_info.channels);
 815:fltk-1.3.4-1/png/pngwrite.c ****    row_info.rowbytes = PNG_ROWBYTES(row_info.pixel_depth, row_info.width);
 816:fltk-1.3.4-1/png/pngwrite.c **** 
 817:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->color_type = %d", row_info.color_type);
 818:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->width = %u", row_info.width);
 819:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->channels = %d", row_info.channels);
 820:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->bit_depth = %d", row_info.bit_depth);
 821:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->pixel_depth = %d", row_info.pixel_depth);
 822:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->rowbytes = %lu", (unsigned long)row_info.rowbytes);
 823:fltk-1.3.4-1/png/pngwrite.c **** 
 824:fltk-1.3.4-1/png/pngwrite.c ****    /* Copy user's row into buffer, leaving room for filter byte. */
 825:fltk-1.3.4-1/png/pngwrite.c ****    memcpy(png_ptr->row_buf + 1, row, row_info.rowbytes);
 826:fltk-1.3.4-1/png/pngwrite.c **** 
 827:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INTERLACING_SUPPORTED
 828:fltk-1.3.4-1/png/pngwrite.c ****    /* Handle interlacing */
 829:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->interlaced && png_ptr->pass < 6 &&
 830:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 831:fltk-1.3.4-1/png/pngwrite.c ****    {
 832:fltk-1.3.4-1/png/pngwrite.c ****       png_do_write_interlace(&row_info, png_ptr->row_buf + 1, png_ptr->pass);
 833:fltk-1.3.4-1/png/pngwrite.c ****       /* This should always get caught above, but still ... */
 834:fltk-1.3.4-1/png/pngwrite.c ****       if (row_info.width == 0)
 835:fltk-1.3.4-1/png/pngwrite.c ****       {
 836:fltk-1.3.4-1/png/pngwrite.c ****          png_write_finish_row(png_ptr);
 837:fltk-1.3.4-1/png/pngwrite.c ****          return;
 838:fltk-1.3.4-1/png/pngwrite.c ****       }
 839:fltk-1.3.4-1/png/pngwrite.c ****    }
 840:fltk-1.3.4-1/png/pngwrite.c **** #endif
 841:fltk-1.3.4-1/png/pngwrite.c **** 
 842:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_TRANSFORMS_SUPPORTED
 843:fltk-1.3.4-1/png/pngwrite.c ****    /* Handle other transformations */
 844:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->transformations != 0)
 845:fltk-1.3.4-1/png/pngwrite.c ****       png_do_write_transformations(png_ptr, &row_info);
 846:fltk-1.3.4-1/png/pngwrite.c **** #endif
 847:fltk-1.3.4-1/png/pngwrite.c **** 
 848:fltk-1.3.4-1/png/pngwrite.c ****    /* At this point the row_info pixel depth must match the 'transformed' depth,
 849:fltk-1.3.4-1/png/pngwrite.c ****     * which is also the output depth.
 850:fltk-1.3.4-1/png/pngwrite.c ****     */
 851:fltk-1.3.4-1/png/pngwrite.c ****    if (row_info.pixel_depth != png_ptr->pixel_depth ||
 852:fltk-1.3.4-1/png/pngwrite.c ****       row_info.pixel_depth != png_ptr->transformed_pixel_depth)
 853:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "internal write transform logic error");
 854:fltk-1.3.4-1/png/pngwrite.c **** 
 855:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
 856:fltk-1.3.4-1/png/pngwrite.c ****    /* Write filter_method 64 (intrapixel differencing) only if
 857:fltk-1.3.4-1/png/pngwrite.c ****     * 1. Libpng was compiled with PNG_MNG_FEATURES_SUPPORTED and
 858:fltk-1.3.4-1/png/pngwrite.c ****     * 2. Libpng did not write a PNG signature (this filter_method is only
 859:fltk-1.3.4-1/png/pngwrite.c ****     *    used in PNG datastreams that are embedded in MNG datastreams) and
 860:fltk-1.3.4-1/png/pngwrite.c ****     * 3. The application called png_permit_mng_features with a mask that
 861:fltk-1.3.4-1/png/pngwrite.c ****     *    included PNG_FLAG_MNG_FILTER_64 and
 862:fltk-1.3.4-1/png/pngwrite.c ****     * 4. The filter_method is 64 and
 863:fltk-1.3.4-1/png/pngwrite.c ****     * 5. The color_type is RGB or RGBA
 864:fltk-1.3.4-1/png/pngwrite.c ****     */
 865:fltk-1.3.4-1/png/pngwrite.c ****    if ((png_ptr->mng_features_permitted & PNG_FLAG_MNG_FILTER_64) != 0 &&
 866:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 867:fltk-1.3.4-1/png/pngwrite.c ****    {
 868:fltk-1.3.4-1/png/pngwrite.c ****       /* Intrapixel differencing */
 869:fltk-1.3.4-1/png/pngwrite.c ****       png_do_write_intrapixel(&row_info, png_ptr->row_buf + 1);
 870:fltk-1.3.4-1/png/pngwrite.c ****    }
 871:fltk-1.3.4-1/png/pngwrite.c **** #endif
 872:fltk-1.3.4-1/png/pngwrite.c **** 
 873:fltk-1.3.4-1/png/pngwrite.c **** /* Added at libpng-1.5.10 */
 874:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_CHECK_FOR_INVALID_INDEX_SUPPORTED
 875:fltk-1.3.4-1/png/pngwrite.c ****    /* Check for out-of-range palette index */
 876:fltk-1.3.4-1/png/pngwrite.c ****    if (row_info.color_type == PNG_COLOR_TYPE_PALETTE &&
 877:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->num_palette_max >= 0)
 878:fltk-1.3.4-1/png/pngwrite.c ****       png_do_check_palette_indexes(png_ptr, &row_info);
 879:fltk-1.3.4-1/png/pngwrite.c **** #endif
 880:fltk-1.3.4-1/png/pngwrite.c **** 
 881:fltk-1.3.4-1/png/pngwrite.c ****    /* Find a filter if necessary, filter the row and write it out. */
 882:fltk-1.3.4-1/png/pngwrite.c ****    png_write_find_filter(png_ptr, &row_info);
 883:fltk-1.3.4-1/png/pngwrite.c **** 
 884:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->write_row_fn != NULL)
 885:fltk-1.3.4-1/png/pngwrite.c ****       (*(png_ptr->write_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 886:fltk-1.3.4-1/png/pngwrite.c **** }
 887:fltk-1.3.4-1/png/pngwrite.c **** 
 888:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FLUSH_SUPPORTED
 889:fltk-1.3.4-1/png/pngwrite.c **** /* Set the automatic flush interval or 0 to turn flushing off */
 890:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 891:fltk-1.3.4-1/png/pngwrite.c **** png_set_flush(png_structrp png_ptr, int nrows)
 892:fltk-1.3.4-1/png/pngwrite.c **** {
 893:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_flush");
 894:fltk-1.3.4-1/png/pngwrite.c **** 
 895:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 896:fltk-1.3.4-1/png/pngwrite.c ****       return;
 897:fltk-1.3.4-1/png/pngwrite.c **** 
 898:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->flush_dist = (nrows < 0 ? 0 : nrows);
 899:fltk-1.3.4-1/png/pngwrite.c **** }
 900:fltk-1.3.4-1/png/pngwrite.c **** 
 901:fltk-1.3.4-1/png/pngwrite.c **** /* Flush the current output buffers now */
 902:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 903:fltk-1.3.4-1/png/pngwrite.c **** png_write_flush(png_structrp png_ptr)
 904:fltk-1.3.4-1/png/pngwrite.c **** {
 905:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_flush");
 906:fltk-1.3.4-1/png/pngwrite.c **** 
 907:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 908:fltk-1.3.4-1/png/pngwrite.c ****       return;
 909:fltk-1.3.4-1/png/pngwrite.c **** 
 910:fltk-1.3.4-1/png/pngwrite.c ****    /* We have already written out all of the data */
 911:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->row_number >= png_ptr->num_rows)
 912:fltk-1.3.4-1/png/pngwrite.c ****       return;
 913:fltk-1.3.4-1/png/pngwrite.c **** 
 914:fltk-1.3.4-1/png/pngwrite.c ****    png_compress_IDAT(png_ptr, NULL, 0, Z_SYNC_FLUSH);
 915:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->flush_rows = 0;
 916:fltk-1.3.4-1/png/pngwrite.c ****    png_flush(png_ptr);
 917:fltk-1.3.4-1/png/pngwrite.c **** }
 918:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FLUSH */
 919:fltk-1.3.4-1/png/pngwrite.c **** 
 920:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_WEIGHTED_FILTER_SUPPORTED
 921:fltk-1.3.4-1/png/pngwrite.c **** static void png_reset_filter_heuristics(png_structrp png_ptr);/* forward decl */
 922:fltk-1.3.4-1/png/pngwrite.c **** #endif
 923:fltk-1.3.4-1/png/pngwrite.c **** 
 924:fltk-1.3.4-1/png/pngwrite.c **** /* Free any memory used in png_ptr struct without freeing the struct itself. */
 925:fltk-1.3.4-1/png/pngwrite.c **** static void
 926:fltk-1.3.4-1/png/pngwrite.c **** png_write_destroy(png_structrp png_ptr)
 927:fltk-1.3.4-1/png/pngwrite.c **** {
 928:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_destroy");
 929:fltk-1.3.4-1/png/pngwrite.c **** 
 930:fltk-1.3.4-1/png/pngwrite.c ****    /* Free any memory zlib uses */
 931:fltk-1.3.4-1/png/pngwrite.c ****    if ((png_ptr->flags & PNG_FLAG_ZSTREAM_INITIALIZED) != 0)
 932:fltk-1.3.4-1/png/pngwrite.c ****       deflateEnd(&png_ptr->zstream);
 933:fltk-1.3.4-1/png/pngwrite.c **** 
 934:fltk-1.3.4-1/png/pngwrite.c ****    /* Free our memory.  png_free checks NULL for us. */
 935:fltk-1.3.4-1/png/pngwrite.c ****    png_free_buffer_list(png_ptr, &png_ptr->zbuffer_list);
 936:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->row_buf);
 937:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->row_buf = NULL;
 938:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FILTER_SUPPORTED
 939:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->prev_row);
 940:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->sub_row);
 941:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->up_row);
 942:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->avg_row);
 943:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->paeth_row);
 944:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->prev_row = NULL;
 945:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->sub_row = NULL;
 946:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->up_row = NULL;
 947:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->avg_row = NULL;
 948:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->paeth_row = NULL;
 949:fltk-1.3.4-1/png/pngwrite.c **** #endif
 950:fltk-1.3.4-1/png/pngwrite.c **** 
 951:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_WEIGHTED_FILTER_SUPPORTED
 952:fltk-1.3.4-1/png/pngwrite.c ****    /* Use this to save a little code space, it doesn't free the filter_costs */
 953:fltk-1.3.4-1/png/pngwrite.c ****    png_reset_filter_heuristics(png_ptr);
 954:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->filter_costs);
 955:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->inv_filter_costs);
 956:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->filter_costs = NULL;
 957:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->inv_filter_costs = NULL;
 958:fltk-1.3.4-1/png/pngwrite.c **** #endif
 959:fltk-1.3.4-1/png/pngwrite.c **** 
 960:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_SET_UNKNOWN_CHUNKS_SUPPORTED
 961:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->chunk_list);
 962:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->chunk_list = NULL;
 963:fltk-1.3.4-1/png/pngwrite.c **** #endif
 964:fltk-1.3.4-1/png/pngwrite.c **** 
 965:fltk-1.3.4-1/png/pngwrite.c ****    /* The error handling and memory handling information is left intact at this
 966:fltk-1.3.4-1/png/pngwrite.c ****     * point: the jmp_buf may still have to be freed.  See png_destroy_png_struct
 967:fltk-1.3.4-1/png/pngwrite.c ****     * for how this happens.
 968:fltk-1.3.4-1/png/pngwrite.c ****     */
 969:fltk-1.3.4-1/png/pngwrite.c **** }
 970:fltk-1.3.4-1/png/pngwrite.c **** 
 971:fltk-1.3.4-1/png/pngwrite.c **** /* Free all memory used by the write.
 972:fltk-1.3.4-1/png/pngwrite.c ****  * In libpng 1.6.0 this API changed quietly to no longer accept a NULL value for
 973:fltk-1.3.4-1/png/pngwrite.c ****  * *png_ptr_ptr.  Prior to 1.6.0 it would accept such a value and it would free
 974:fltk-1.3.4-1/png/pngwrite.c ****  * the passed in info_structs but it would quietly fail to free any of the data
 975:fltk-1.3.4-1/png/pngwrite.c ****  * inside them.  In 1.6.0 it quietly does nothing (it has to be quiet because it
 976:fltk-1.3.4-1/png/pngwrite.c ****  * has no png_ptr.)
 977:fltk-1.3.4-1/png/pngwrite.c ****  */
 978:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
 979:fltk-1.3.4-1/png/pngwrite.c **** png_destroy_write_struct(png_structpp png_ptr_ptr, png_infopp info_ptr_ptr)
 980:fltk-1.3.4-1/png/pngwrite.c **** {
 981:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_destroy_write_struct");
 982:fltk-1.3.4-1/png/pngwrite.c **** 
 983:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr_ptr != NULL)
 984:fltk-1.3.4-1/png/pngwrite.c ****    {
 985:fltk-1.3.4-1/png/pngwrite.c ****       png_structrp png_ptr = *png_ptr_ptr;
 986:fltk-1.3.4-1/png/pngwrite.c **** 
 987:fltk-1.3.4-1/png/pngwrite.c ****       if (png_ptr != NULL) /* added in libpng 1.6.0 */
 988:fltk-1.3.4-1/png/pngwrite.c ****       {
 989:fltk-1.3.4-1/png/pngwrite.c ****          png_destroy_info_struct(png_ptr, info_ptr_ptr);
 990:fltk-1.3.4-1/png/pngwrite.c **** 
 991:fltk-1.3.4-1/png/pngwrite.c ****          *png_ptr_ptr = NULL;
 992:fltk-1.3.4-1/png/pngwrite.c ****          png_write_destroy(png_ptr);
 993:fltk-1.3.4-1/png/pngwrite.c ****          png_destroy_png_struct(png_ptr);
 994:fltk-1.3.4-1/png/pngwrite.c ****       }
 995:fltk-1.3.4-1/png/pngwrite.c ****    }
 996:fltk-1.3.4-1/png/pngwrite.c **** }
 997:fltk-1.3.4-1/png/pngwrite.c **** 
 998:fltk-1.3.4-1/png/pngwrite.c **** /* Allow the application to select one or more row filters to use. */
 999:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1000:fltk-1.3.4-1/png/pngwrite.c **** png_set_filter(png_structrp png_ptr, int method, int filters)
1001:fltk-1.3.4-1/png/pngwrite.c **** {
1002:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter");
1003:fltk-1.3.4-1/png/pngwrite.c **** 
1004:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1005:fltk-1.3.4-1/png/pngwrite.c ****       return;
1006:fltk-1.3.4-1/png/pngwrite.c **** 
1007:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
1008:fltk-1.3.4-1/png/pngwrite.c ****    if ((png_ptr->mng_features_permitted & PNG_FLAG_MNG_FILTER_64) != 0 &&
1009:fltk-1.3.4-1/png/pngwrite.c ****        (method == PNG_INTRAPIXEL_DIFFERENCING))
1010:fltk-1.3.4-1/png/pngwrite.c ****       method = PNG_FILTER_TYPE_BASE;
1011:fltk-1.3.4-1/png/pngwrite.c **** 
1012:fltk-1.3.4-1/png/pngwrite.c **** #endif
1013:fltk-1.3.4-1/png/pngwrite.c ****    if (method == PNG_FILTER_TYPE_BASE)
1014:fltk-1.3.4-1/png/pngwrite.c ****    {
1015:fltk-1.3.4-1/png/pngwrite.c ****       switch (filters & (PNG_ALL_FILTERS | 0x07))
1016:fltk-1.3.4-1/png/pngwrite.c ****       {
1017:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FILTER_SUPPORTED
1018:fltk-1.3.4-1/png/pngwrite.c ****          case 5:
1019:fltk-1.3.4-1/png/pngwrite.c ****          case 6:
1020:fltk-1.3.4-1/png/pngwrite.c ****          case 7: png_app_error(png_ptr, "Unknown row filter for method 0");
1021:fltk-1.3.4-1/png/pngwrite.c ****             /* FALL THROUGH */
1022:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FILTER */
1023:fltk-1.3.4-1/png/pngwrite.c ****          case PNG_FILTER_VALUE_NONE:
1024:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->do_filter = PNG_FILTER_NONE; break;
1025:fltk-1.3.4-1/png/pngwrite.c **** 
1026:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FILTER_SUPPORTED
1027:fltk-1.3.4-1/png/pngwrite.c ****          case PNG_FILTER_VALUE_SUB:
1028:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->do_filter = PNG_FILTER_SUB; break;
1029:fltk-1.3.4-1/png/pngwrite.c **** 
1030:fltk-1.3.4-1/png/pngwrite.c ****          case PNG_FILTER_VALUE_UP:
1031:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->do_filter = PNG_FILTER_UP; break;
1032:fltk-1.3.4-1/png/pngwrite.c **** 
1033:fltk-1.3.4-1/png/pngwrite.c ****          case PNG_FILTER_VALUE_AVG:
1034:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->do_filter = PNG_FILTER_AVG; break;
1035:fltk-1.3.4-1/png/pngwrite.c **** 
1036:fltk-1.3.4-1/png/pngwrite.c ****          case PNG_FILTER_VALUE_PAETH:
1037:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->do_filter = PNG_FILTER_PAETH; break;
1038:fltk-1.3.4-1/png/pngwrite.c **** 
1039:fltk-1.3.4-1/png/pngwrite.c ****          default:
1040:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->do_filter = (png_byte)filters; break;
1041:fltk-1.3.4-1/png/pngwrite.c **** #else
1042:fltk-1.3.4-1/png/pngwrite.c ****          default:
1043:fltk-1.3.4-1/png/pngwrite.c ****             png_app_error(png_ptr, "Unknown row filter for method 0");
1044:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FILTER */
1045:fltk-1.3.4-1/png/pngwrite.c ****       }
1046:fltk-1.3.4-1/png/pngwrite.c **** 
1047:fltk-1.3.4-1/png/pngwrite.c ****       /* If we have allocated the row_buf, this means we have already started
1048:fltk-1.3.4-1/png/pngwrite.c ****        * with the image and we should have allocated all of the filter buffers
1049:fltk-1.3.4-1/png/pngwrite.c ****        * that have been selected.  If prev_row isn't already allocated, then
1050:fltk-1.3.4-1/png/pngwrite.c ****        * it is too late to start using the filters that need it, since we
1051:fltk-1.3.4-1/png/pngwrite.c ****        * will be missing the data in the previous row.  If an application
1052:fltk-1.3.4-1/png/pngwrite.c ****        * wants to start and stop using particular filters during compression,
1053:fltk-1.3.4-1/png/pngwrite.c ****        * it should start out with all of the filters, and then add and
1054:fltk-1.3.4-1/png/pngwrite.c ****        * remove them after the start of compression.
1055:fltk-1.3.4-1/png/pngwrite.c ****        */
1056:fltk-1.3.4-1/png/pngwrite.c ****       if (png_ptr->row_buf != NULL)
1057:fltk-1.3.4-1/png/pngwrite.c ****       {
1058:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FILTER_SUPPORTED
1059:fltk-1.3.4-1/png/pngwrite.c ****          if ((png_ptr->do_filter & PNG_FILTER_SUB) != 0 &&
1060:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->sub_row == NULL)
1061:fltk-1.3.4-1/png/pngwrite.c ****          {
1062:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->sub_row = (png_bytep)png_malloc(png_ptr,
1063:fltk-1.3.4-1/png/pngwrite.c ****                 (png_ptr->rowbytes + 1));
1064:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->sub_row[0] = PNG_FILTER_VALUE_SUB;
1065:fltk-1.3.4-1/png/pngwrite.c ****          }
1066:fltk-1.3.4-1/png/pngwrite.c **** 
1067:fltk-1.3.4-1/png/pngwrite.c ****          if ((png_ptr->do_filter & PNG_FILTER_UP) != 0 &&
1068:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->up_row == NULL)
1069:fltk-1.3.4-1/png/pngwrite.c ****          {
1070:fltk-1.3.4-1/png/pngwrite.c ****             if (png_ptr->prev_row == NULL)
1071:fltk-1.3.4-1/png/pngwrite.c ****             {
1072:fltk-1.3.4-1/png/pngwrite.c ****                png_warning(png_ptr, "Can't add Up filter after starting");
1073:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->do_filter = (png_byte)(png_ptr->do_filter &
1074:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_UP);
1075:fltk-1.3.4-1/png/pngwrite.c ****             }
1076:fltk-1.3.4-1/png/pngwrite.c **** 
1077:fltk-1.3.4-1/png/pngwrite.c ****             else
1078:fltk-1.3.4-1/png/pngwrite.c ****             {
1079:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->up_row = (png_bytep)png_malloc(png_ptr,
1080:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
1081:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->up_row[0] = PNG_FILTER_VALUE_UP;
1082:fltk-1.3.4-1/png/pngwrite.c ****             }
1083:fltk-1.3.4-1/png/pngwrite.c ****          }
1084:fltk-1.3.4-1/png/pngwrite.c **** 
1085:fltk-1.3.4-1/png/pngwrite.c ****          if ((png_ptr->do_filter & PNG_FILTER_AVG) != 0 &&
1086:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->avg_row == NULL)
1087:fltk-1.3.4-1/png/pngwrite.c ****          {
1088:fltk-1.3.4-1/png/pngwrite.c ****             if (png_ptr->prev_row == NULL)
1089:fltk-1.3.4-1/png/pngwrite.c ****             {
1090:fltk-1.3.4-1/png/pngwrite.c ****                png_warning(png_ptr, "Can't add Average filter after starting");
1091:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->do_filter = (png_byte)(png_ptr->do_filter &
1092:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_AVG);
1093:fltk-1.3.4-1/png/pngwrite.c ****             }
1094:fltk-1.3.4-1/png/pngwrite.c **** 
1095:fltk-1.3.4-1/png/pngwrite.c ****             else
1096:fltk-1.3.4-1/png/pngwrite.c ****             {
1097:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->avg_row = (png_bytep)png_malloc(png_ptr,
1098:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
1099:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->avg_row[0] = PNG_FILTER_VALUE_AVG;
1100:fltk-1.3.4-1/png/pngwrite.c ****             }
1101:fltk-1.3.4-1/png/pngwrite.c ****          }
1102:fltk-1.3.4-1/png/pngwrite.c **** 
1103:fltk-1.3.4-1/png/pngwrite.c ****          if ((png_ptr->do_filter & PNG_FILTER_PAETH) != 0 &&
1104:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->paeth_row == NULL)
1105:fltk-1.3.4-1/png/pngwrite.c ****          {
1106:fltk-1.3.4-1/png/pngwrite.c ****             if (png_ptr->prev_row == NULL)
1107:fltk-1.3.4-1/png/pngwrite.c ****             {
1108:fltk-1.3.4-1/png/pngwrite.c ****                png_warning(png_ptr, "Can't add Paeth filter after starting");
1109:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->do_filter &= (png_byte)(~PNG_FILTER_PAETH);
1110:fltk-1.3.4-1/png/pngwrite.c ****             }
1111:fltk-1.3.4-1/png/pngwrite.c **** 
1112:fltk-1.3.4-1/png/pngwrite.c ****             else
1113:fltk-1.3.4-1/png/pngwrite.c ****             {
1114:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->paeth_row = (png_bytep)png_malloc(png_ptr,
1115:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
1116:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->paeth_row[0] = PNG_FILTER_VALUE_PAETH;
1117:fltk-1.3.4-1/png/pngwrite.c ****             }
1118:fltk-1.3.4-1/png/pngwrite.c ****          }
1119:fltk-1.3.4-1/png/pngwrite.c **** 
1120:fltk-1.3.4-1/png/pngwrite.c ****          if (png_ptr->do_filter == PNG_NO_FILTERS)
1121:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FILTER */
1122:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->do_filter = PNG_FILTER_NONE;
1123:fltk-1.3.4-1/png/pngwrite.c ****       }
1124:fltk-1.3.4-1/png/pngwrite.c ****    }
1125:fltk-1.3.4-1/png/pngwrite.c ****    else
1126:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "Unknown custom filter method");
1127:fltk-1.3.4-1/png/pngwrite.c **** }
1128:fltk-1.3.4-1/png/pngwrite.c **** 
1129:fltk-1.3.4-1/png/pngwrite.c **** /* This allows us to influence the way in which libpng chooses the "best"
1130:fltk-1.3.4-1/png/pngwrite.c ****  * filter for the current scanline.  While the "minimum-sum-of-absolute-
1131:fltk-1.3.4-1/png/pngwrite.c ****  * differences metric is relatively fast and effective, there is some
1132:fltk-1.3.4-1/png/pngwrite.c ****  * question as to whether it can be improved upon by trying to keep the
1133:fltk-1.3.4-1/png/pngwrite.c ****  * filtered data going to zlib more consistent, hopefully resulting in
1134:fltk-1.3.4-1/png/pngwrite.c ****  * better compression.
1135:fltk-1.3.4-1/png/pngwrite.c ****  */
1136:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_WEIGHTED_FILTER_SUPPORTED      /* GRR 970116 */
1137:fltk-1.3.4-1/png/pngwrite.c **** /* Convenience reset API. */
1138:fltk-1.3.4-1/png/pngwrite.c **** static void
1139:fltk-1.3.4-1/png/pngwrite.c **** png_reset_filter_heuristics(png_structrp png_ptr)
1140:fltk-1.3.4-1/png/pngwrite.c **** {
  11              		.loc 1 1140 1 view -0
  12              		.cfi_startproc
1141:fltk-1.3.4-1/png/pngwrite.c ****    /* Clear out any old values in the 'weights' - this must be done because if
1142:fltk-1.3.4-1/png/pngwrite.c ****     * the app calls set_filter_heuristics multiple times with different
1143:fltk-1.3.4-1/png/pngwrite.c ****     * 'num_weights' values we would otherwise potentially have wrong sized
1144:fltk-1.3.4-1/png/pngwrite.c ****     * arrays.
1145:fltk-1.3.4-1/png/pngwrite.c ****     */
1146:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->num_prev_filters = 0;
  13              		.loc 1 1146 4 view .LVU1
1147:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->heuristic_method = PNG_FILTER_HEURISTIC_UNWEIGHTED;
  14              		.loc 1 1147 4 view .LVU2
1140:fltk-1.3.4-1/png/pngwrite.c ****    /* Clear out any old values in the 'weights' - this must be done because if
  15              		.loc 1 1140 1 is_stmt 0 view .LVU3
  16 0000 55       		pushq	%rbp
  17              		.cfi_def_cfa_offset 16
  18              		.cfi_offset 6, -16
1148:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->prev_filters != NULL)
  19              		.loc 1 1148 15 view .LVU4
  20 0001 488BB7A0 		movq	928(%rdi), %rsi
  20      030000
1147:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->heuristic_method = PNG_FILTER_HEURISTIC_UNWEIGHTED;
  21              		.loc 1 1147 30 view .LVU5
  22 0008 B8010000 		movl	$1, %eax
  22      00
1140:fltk-1.3.4-1/png/pngwrite.c ****    /* Clear out any old values in the 'weights' - this must be done because if
  23              		.loc 1 1140 1 view .LVU6
  24 000d 4889FD   		movq	%rdi, %rbp
1147:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->heuristic_method = PNG_FILTER_HEURISTIC_UNWEIGHTED;
  25              		.loc 1 1147 30 view .LVU7
  26 0010 66898798 		movw	%ax, 920(%rdi)
  26      030000
  27              		.loc 1 1148 4 is_stmt 1 view .LVU8
  28              		.loc 1 1148 7 is_stmt 0 view .LVU9
  29 0017 4885F6   		testq	%rsi, %rsi
  30 001a 7410     		je	.L2
  31              	.LBB99:
1149:fltk-1.3.4-1/png/pngwrite.c ****    {
1150:fltk-1.3.4-1/png/pngwrite.c ****       png_bytep old = png_ptr->prev_filters;
  32              		.loc 1 1150 7 is_stmt 1 view .LVU10
  33              	.LVL1:
1151:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->prev_filters = NULL;
  34              		.loc 1 1151 7 view .LVU11
  35              		.loc 1 1151 29 is_stmt 0 view .LVU12
  36 001c 48C787A0 		movq	$0, 928(%rdi)
  36      03000000 
  36      000000
1152:fltk-1.3.4-1/png/pngwrite.c ****       png_free(png_ptr, old);
  37              		.loc 1 1152 7 is_stmt 1 view .LVU13
  38 0027 E8000000 		call	png_free@PLT
  38      00
  39              	.LVL2:
  40              	.L2:
  41              		.loc 1 1152 7 is_stmt 0 view .LVU14
  42              	.LBE99:
1153:fltk-1.3.4-1/png/pngwrite.c ****    }
1154:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->filter_weights != NULL)
  43              		.loc 1 1154 4 is_stmt 1 view .LVU15
  44              		.loc 1 1154 15 is_stmt 0 view .LVU16
  45 002c 488BB5A8 		movq	936(%rbp), %rsi
  45      030000
  46              		.loc 1 1154 7 view .LVU17
  47 0033 4885F6   		testq	%rsi, %rsi
  48 0036 7413     		je	.L3
  49              	.LBB100:
1155:fltk-1.3.4-1/png/pngwrite.c ****    {
1156:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_16p old = png_ptr->filter_weights;
  50              		.loc 1 1156 7 is_stmt 1 view .LVU18
  51              	.LVL3:
1157:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->filter_weights = NULL;
  52              		.loc 1 1157 7 view .LVU19
  53              		.loc 1 1157 31 is_stmt 0 view .LVU20
  54 0038 48C785A8 		movq	$0, 936(%rbp)
  54      03000000 
  54      000000
1158:fltk-1.3.4-1/png/pngwrite.c ****       png_free(png_ptr, old);
  55              		.loc 1 1158 7 is_stmt 1 view .LVU21
  56 0043 4889EF   		movq	%rbp, %rdi
  57 0046 E8000000 		call	png_free@PLT
  57      00
  58              	.LVL4:
  59              	.L3:
  60              		.loc 1 1158 7 is_stmt 0 view .LVU22
  61              	.LBE100:
1159:fltk-1.3.4-1/png/pngwrite.c ****    }
1160:fltk-1.3.4-1/png/pngwrite.c **** 
1161:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr->inv_filter_weights != NULL)
  62              		.loc 1 1161 4 is_stmt 1 view .LVU23
  63              		.loc 1 1161 15 is_stmt 0 view .LVU24
  64 004b 488BB5B0 		movq	944(%rbp), %rsi
  64      030000
  65              		.loc 1 1161 7 view .LVU25
  66 0052 4885F6   		testq	%rsi, %rsi
  67 0055 7419     		je	.L1
  68              	.LBB101:
1162:fltk-1.3.4-1/png/pngwrite.c ****    {
1163:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_16p old = png_ptr->inv_filter_weights;
  69              		.loc 1 1163 7 is_stmt 1 view .LVU26
  70              	.LVL5:
1164:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->inv_filter_weights = NULL;
  71              		.loc 1 1164 7 view .LVU27
  72              		.loc 1 1164 35 is_stmt 0 view .LVU28
  73 0057 48C785B0 		movq	$0, 944(%rbp)
  73      03000000 
  73      000000
1165:fltk-1.3.4-1/png/pngwrite.c ****       png_free(png_ptr, old);
  74              		.loc 1 1165 7 is_stmt 1 view .LVU29
  75 0062 4889EF   		movq	%rbp, %rdi
  76              	.LBE101:
1166:fltk-1.3.4-1/png/pngwrite.c ****    }
1167:fltk-1.3.4-1/png/pngwrite.c **** 
1168:fltk-1.3.4-1/png/pngwrite.c ****    /* Leave the filter_costs - this array is fixed size. */
1169:fltk-1.3.4-1/png/pngwrite.c **** }
  77              		.loc 1 1169 1 is_stmt 0 view .LVU30
  78 0065 5D       		popq	%rbp
  79              		.cfi_remember_state
  80              		.cfi_def_cfa_offset 8
  81              	.LVL6:
  82              	.LBB102:
1165:fltk-1.3.4-1/png/pngwrite.c ****       png_free(png_ptr, old);
  83              		.loc 1 1165 7 view .LVU31
  84 0066 E9000000 		jmp	png_free@PLT
  84      00
  85              	.LVL7:
  86 006b 0F1F4400 		.p2align 4,,10
  86      00
  87              		.p2align 3
  88              	.L1:
  89              		.cfi_restore_state
1165:fltk-1.3.4-1/png/pngwrite.c ****       png_free(png_ptr, old);
  90              		.loc 1 1165 7 view .LVU32
  91              	.LBE102:
  92              		.loc 1 1169 1 view .LVU33
  93 0070 5D       		popq	%rbp
  94              		.cfi_def_cfa_offset 8
  95              	.LVL8:
  96              		.loc 1 1169 1 view .LVU34
  97 0071 C3       		ret
  98              		.cfi_endproc
  99              	.LFE58:
 101              		.section	.text.png_unpremultiply.part.0,"ax",@progbits
 102              		.p2align 4
 104              	png_unpremultiply.part.0:
 105              	.LVL9:
 106              	.LFB83:
1170:fltk-1.3.4-1/png/pngwrite.c **** 
1171:fltk-1.3.4-1/png/pngwrite.c **** static int
1172:fltk-1.3.4-1/png/pngwrite.c **** png_init_filter_heuristics(png_structrp png_ptr, int heuristic_method,
1173:fltk-1.3.4-1/png/pngwrite.c ****    int num_weights)
1174:fltk-1.3.4-1/png/pngwrite.c **** {
1175:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1176:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
1177:fltk-1.3.4-1/png/pngwrite.c **** 
1178:fltk-1.3.4-1/png/pngwrite.c ****    /* Clear out the arrays */
1179:fltk-1.3.4-1/png/pngwrite.c ****    png_reset_filter_heuristics(png_ptr);
1180:fltk-1.3.4-1/png/pngwrite.c **** 
1181:fltk-1.3.4-1/png/pngwrite.c ****    /* Check arguments; the 'reset' function makes the correct settings for the
1182:fltk-1.3.4-1/png/pngwrite.c ****     * unweighted case, but we must handle the weight case by initializing the
1183:fltk-1.3.4-1/png/pngwrite.c ****     * arrays for the caller.
1184:fltk-1.3.4-1/png/pngwrite.c ****     */
1185:fltk-1.3.4-1/png/pngwrite.c ****    if (heuristic_method == PNG_FILTER_HEURISTIC_WEIGHTED)
1186:fltk-1.3.4-1/png/pngwrite.c ****    {
1187:fltk-1.3.4-1/png/pngwrite.c ****       int i;
1188:fltk-1.3.4-1/png/pngwrite.c **** 
1189:fltk-1.3.4-1/png/pngwrite.c ****       if (num_weights > 0)
1190:fltk-1.3.4-1/png/pngwrite.c ****       {
1191:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->prev_filters = (png_bytep)png_malloc(png_ptr,
1192:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_byte)) * num_weights));
1193:fltk-1.3.4-1/png/pngwrite.c **** 
1194:fltk-1.3.4-1/png/pngwrite.c ****          /* To make sure that the weighting starts out fairly */
1195:fltk-1.3.4-1/png/pngwrite.c ****          for (i = 0; i < num_weights; i++)
1196:fltk-1.3.4-1/png/pngwrite.c ****          {
1197:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->prev_filters[i] = 255;
1198:fltk-1.3.4-1/png/pngwrite.c ****          }
1199:fltk-1.3.4-1/png/pngwrite.c **** 
1200:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_weights = (png_uint_16p)png_malloc(png_ptr,
1201:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
1202:fltk-1.3.4-1/png/pngwrite.c **** 
1203:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->inv_filter_weights = (png_uint_16p)png_malloc(png_ptr,
1204:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
1205:fltk-1.3.4-1/png/pngwrite.c **** 
1206:fltk-1.3.4-1/png/pngwrite.c ****          for (i = 0; i < num_weights; i++)
1207:fltk-1.3.4-1/png/pngwrite.c ****          {
1208:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->inv_filter_weights[i] =
1209:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
1210:fltk-1.3.4-1/png/pngwrite.c ****          }
1211:fltk-1.3.4-1/png/pngwrite.c **** 
1212:fltk-1.3.4-1/png/pngwrite.c ****          /* Safe to set this now */
1213:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->num_prev_filters = (png_byte)num_weights;
1214:fltk-1.3.4-1/png/pngwrite.c ****       }
1215:fltk-1.3.4-1/png/pngwrite.c **** 
1216:fltk-1.3.4-1/png/pngwrite.c ****       /* If, in the future, there are other filter methods, this would
1217:fltk-1.3.4-1/png/pngwrite.c ****        * need to be based on png_ptr->filter.
1218:fltk-1.3.4-1/png/pngwrite.c ****        */
1219:fltk-1.3.4-1/png/pngwrite.c ****       if (png_ptr->filter_costs == NULL)
1220:fltk-1.3.4-1/png/pngwrite.c ****       {
1221:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_costs = (png_uint_16p)png_malloc(png_ptr,
1222:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
1223:fltk-1.3.4-1/png/pngwrite.c **** 
1224:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->inv_filter_costs = (png_uint_16p)png_malloc(png_ptr,
1225:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
1226:fltk-1.3.4-1/png/pngwrite.c ****       }
1227:fltk-1.3.4-1/png/pngwrite.c **** 
1228:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < PNG_FILTER_VALUE_LAST; i++)
1229:fltk-1.3.4-1/png/pngwrite.c ****       {
1230:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->inv_filter_costs[i] =
1231:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_costs[i] = PNG_COST_FACTOR;
1232:fltk-1.3.4-1/png/pngwrite.c ****       }
1233:fltk-1.3.4-1/png/pngwrite.c **** 
1234:fltk-1.3.4-1/png/pngwrite.c ****       /* All the arrays are inited, safe to set this: */
1235:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->heuristic_method = PNG_FILTER_HEURISTIC_WEIGHTED;
1236:fltk-1.3.4-1/png/pngwrite.c **** 
1237:fltk-1.3.4-1/png/pngwrite.c ****       /* Return the 'ok' code. */
1238:fltk-1.3.4-1/png/pngwrite.c ****       return 1;
1239:fltk-1.3.4-1/png/pngwrite.c ****    }
1240:fltk-1.3.4-1/png/pngwrite.c ****    else if (heuristic_method == PNG_FILTER_HEURISTIC_DEFAULT ||
1241:fltk-1.3.4-1/png/pngwrite.c ****       heuristic_method == PNG_FILTER_HEURISTIC_UNWEIGHTED)
1242:fltk-1.3.4-1/png/pngwrite.c ****    {
1243:fltk-1.3.4-1/png/pngwrite.c ****       return 1;
1244:fltk-1.3.4-1/png/pngwrite.c ****    }
1245:fltk-1.3.4-1/png/pngwrite.c ****    else
1246:fltk-1.3.4-1/png/pngwrite.c ****    {
1247:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Unknown filter heuristic method");
1248:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
1249:fltk-1.3.4-1/png/pngwrite.c ****    }
1250:fltk-1.3.4-1/png/pngwrite.c **** }
1251:fltk-1.3.4-1/png/pngwrite.c **** 
1252:fltk-1.3.4-1/png/pngwrite.c **** /* Provide floating and fixed point APIs */
1253:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_FLOATING_POINT_SUPPORTED
1254:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1255:fltk-1.3.4-1/png/pngwrite.c **** png_set_filter_heuristics(png_structrp png_ptr, int heuristic_method,
1256:fltk-1.3.4-1/png/pngwrite.c ****     int num_weights, png_const_doublep filter_weights,
1257:fltk-1.3.4-1/png/pngwrite.c ****     png_const_doublep filter_costs)
1258:fltk-1.3.4-1/png/pngwrite.c **** {
1259:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics");
1260:fltk-1.3.4-1/png/pngwrite.c **** 
1261:fltk-1.3.4-1/png/pngwrite.c ****    /* The internal API allocates all the arrays and ensures that the elements of
1262:fltk-1.3.4-1/png/pngwrite.c ****     * those arrays are set to the default value.
1263:fltk-1.3.4-1/png/pngwrite.c ****     */
1264:fltk-1.3.4-1/png/pngwrite.c ****    if (png_init_filter_heuristics(png_ptr, heuristic_method, num_weights) == 0)
1265:fltk-1.3.4-1/png/pngwrite.c ****       return;
1266:fltk-1.3.4-1/png/pngwrite.c **** 
1267:fltk-1.3.4-1/png/pngwrite.c ****    /* If using the weighted method copy in the weights. */
1268:fltk-1.3.4-1/png/pngwrite.c ****    if (heuristic_method == PNG_FILTER_HEURISTIC_WEIGHTED)
1269:fltk-1.3.4-1/png/pngwrite.c ****    {
1270:fltk-1.3.4-1/png/pngwrite.c ****       int i;
1271:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < num_weights; i++)
1272:fltk-1.3.4-1/png/pngwrite.c ****       {
1273:fltk-1.3.4-1/png/pngwrite.c ****          if (filter_weights[i] <= 0.0)
1274:fltk-1.3.4-1/png/pngwrite.c ****          {
1275:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->inv_filter_weights[i] =
1276:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
1277:fltk-1.3.4-1/png/pngwrite.c ****          }
1278:fltk-1.3.4-1/png/pngwrite.c **** 
1279:fltk-1.3.4-1/png/pngwrite.c ****          else
1280:fltk-1.3.4-1/png/pngwrite.c ****          {
1281:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->inv_filter_weights[i] =
1282:fltk-1.3.4-1/png/pngwrite.c ****                 (png_uint_16)(PNG_WEIGHT_FACTOR*filter_weights[i]+.5);
1283:fltk-1.3.4-1/png/pngwrite.c **** 
1284:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] =
1285:fltk-1.3.4-1/png/pngwrite.c ****                 (png_uint_16)(PNG_WEIGHT_FACTOR/filter_weights[i]+.5);
1286:fltk-1.3.4-1/png/pngwrite.c ****          }
1287:fltk-1.3.4-1/png/pngwrite.c ****       }
1288:fltk-1.3.4-1/png/pngwrite.c **** 
1289:fltk-1.3.4-1/png/pngwrite.c ****       /* Here is where we set the relative costs of the different filters.  We
1290:fltk-1.3.4-1/png/pngwrite.c ****        * should take the desired compression level into account when setting
1291:fltk-1.3.4-1/png/pngwrite.c ****        * the costs, so that Paeth, for instance, has a high relative cost at low
1292:fltk-1.3.4-1/png/pngwrite.c ****        * compression levels, while it has a lower relative cost at higher
1293:fltk-1.3.4-1/png/pngwrite.c ****        * compression settings.  The filter types are in order of increasing
1294:fltk-1.3.4-1/png/pngwrite.c ****        * relative cost, so it would be possible to do this with an algorithm.
1295:fltk-1.3.4-1/png/pngwrite.c ****        */
1296:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < PNG_FILTER_VALUE_LAST; i++) if (filter_costs[i] >= 1.0)
1297:fltk-1.3.4-1/png/pngwrite.c ****       {
1298:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->inv_filter_costs[i] =
1299:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_16)(PNG_COST_FACTOR / filter_costs[i] + .5);
1300:fltk-1.3.4-1/png/pngwrite.c **** 
1301:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_costs[i] =
1302:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_16)(PNG_COST_FACTOR * filter_costs[i] + .5);
1303:fltk-1.3.4-1/png/pngwrite.c ****       }
1304:fltk-1.3.4-1/png/pngwrite.c ****    }
1305:fltk-1.3.4-1/png/pngwrite.c **** }
1306:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
1307:fltk-1.3.4-1/png/pngwrite.c **** 
1308:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_FIXED_POINT_SUPPORTED
1309:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1310:fltk-1.3.4-1/png/pngwrite.c **** png_set_filter_heuristics_fixed(png_structrp png_ptr, int heuristic_method,
1311:fltk-1.3.4-1/png/pngwrite.c ****     int num_weights, png_const_fixed_point_p filter_weights,
1312:fltk-1.3.4-1/png/pngwrite.c ****     png_const_fixed_point_p filter_costs)
1313:fltk-1.3.4-1/png/pngwrite.c **** {
1314:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics_fixed");
1315:fltk-1.3.4-1/png/pngwrite.c **** 
1316:fltk-1.3.4-1/png/pngwrite.c ****    /* The internal API allocates all the arrays and ensures that the elements of
1317:fltk-1.3.4-1/png/pngwrite.c ****     * those arrays are set to the default value.
1318:fltk-1.3.4-1/png/pngwrite.c ****     */
1319:fltk-1.3.4-1/png/pngwrite.c ****    if (png_init_filter_heuristics(png_ptr, heuristic_method, num_weights) == 0)
1320:fltk-1.3.4-1/png/pngwrite.c ****       return;
1321:fltk-1.3.4-1/png/pngwrite.c **** 
1322:fltk-1.3.4-1/png/pngwrite.c ****    /* If using the weighted method copy in the weights. */
1323:fltk-1.3.4-1/png/pngwrite.c ****    if (heuristic_method == PNG_FILTER_HEURISTIC_WEIGHTED)
1324:fltk-1.3.4-1/png/pngwrite.c ****    {
1325:fltk-1.3.4-1/png/pngwrite.c ****       int i;
1326:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < num_weights; i++)
1327:fltk-1.3.4-1/png/pngwrite.c ****       {
1328:fltk-1.3.4-1/png/pngwrite.c ****          if (filter_weights[i] <= 0)
1329:fltk-1.3.4-1/png/pngwrite.c ****          {
1330:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->inv_filter_weights[i] =
1331:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
1332:fltk-1.3.4-1/png/pngwrite.c ****          }
1333:fltk-1.3.4-1/png/pngwrite.c **** 
1334:fltk-1.3.4-1/png/pngwrite.c ****          else
1335:fltk-1.3.4-1/png/pngwrite.c ****          {
1336:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->inv_filter_weights[i] = (png_uint_16)
1337:fltk-1.3.4-1/png/pngwrite.c ****                ((PNG_WEIGHT_FACTOR*filter_weights[i]+PNG_FP_HALF)/PNG_FP_1);
1338:fltk-1.3.4-1/png/pngwrite.c **** 
1339:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = (png_uint_16)((PNG_WEIGHT_FACTOR*
1340:fltk-1.3.4-1/png/pngwrite.c ****                PNG_FP_1+(filter_weights[i]/2))/filter_weights[i]);
1341:fltk-1.3.4-1/png/pngwrite.c ****          }
1342:fltk-1.3.4-1/png/pngwrite.c ****       }
1343:fltk-1.3.4-1/png/pngwrite.c **** 
1344:fltk-1.3.4-1/png/pngwrite.c ****       /* Here is where we set the relative costs of the different filters.  We
1345:fltk-1.3.4-1/png/pngwrite.c ****        * should take the desired compression level into account when setting
1346:fltk-1.3.4-1/png/pngwrite.c ****        * the costs, so that Paeth, for instance, has a high relative cost at low
1347:fltk-1.3.4-1/png/pngwrite.c ****        * compression levels, while it has a lower relative cost at higher
1348:fltk-1.3.4-1/png/pngwrite.c ****        * compression settings.  The filter types are in order of increasing
1349:fltk-1.3.4-1/png/pngwrite.c ****        * relative cost, so it would be possible to do this with an algorithm.
1350:fltk-1.3.4-1/png/pngwrite.c ****        */
1351:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < PNG_FILTER_VALUE_LAST; i++)
1352:fltk-1.3.4-1/png/pngwrite.c ****          if (filter_costs[i] >= PNG_FP_1)
1353:fltk-1.3.4-1/png/pngwrite.c ****       {
1354:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 tmp;
1355:fltk-1.3.4-1/png/pngwrite.c **** 
1356:fltk-1.3.4-1/png/pngwrite.c ****          /* Use a 32 bit unsigned temporary here because otherwise the
1357:fltk-1.3.4-1/png/pngwrite.c ****           * intermediate value will be a 32 bit *signed* integer (ANSI rules)
1358:fltk-1.3.4-1/png/pngwrite.c ****           * and this will get the wrong answer on division.
1359:fltk-1.3.4-1/png/pngwrite.c ****           */
1360:fltk-1.3.4-1/png/pngwrite.c ****          tmp = PNG_COST_FACTOR*PNG_FP_1 + (filter_costs[i]/2);
1361:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= filter_costs[i];
1362:fltk-1.3.4-1/png/pngwrite.c **** 
1363:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->inv_filter_costs[i] = (png_uint_16)tmp;
1364:fltk-1.3.4-1/png/pngwrite.c **** 
1365:fltk-1.3.4-1/png/pngwrite.c ****          tmp = PNG_COST_FACTOR * filter_costs[i] + PNG_FP_HALF;
1366:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= PNG_FP_1;
1367:fltk-1.3.4-1/png/pngwrite.c **** 
1368:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_costs[i] = (png_uint_16)tmp;
1369:fltk-1.3.4-1/png/pngwrite.c ****       }
1370:fltk-1.3.4-1/png/pngwrite.c ****    }
1371:fltk-1.3.4-1/png/pngwrite.c **** }
1372:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
1373:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_WEIGHTED_FILTER */
1374:fltk-1.3.4-1/png/pngwrite.c **** 
1375:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1376:fltk-1.3.4-1/png/pngwrite.c **** png_set_compression_level(png_structrp png_ptr, int level)
1377:fltk-1.3.4-1/png/pngwrite.c **** {
1378:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_level");
1379:fltk-1.3.4-1/png/pngwrite.c **** 
1380:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1381:fltk-1.3.4-1/png/pngwrite.c ****       return;
1382:fltk-1.3.4-1/png/pngwrite.c **** 
1383:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_level = level;
1384:fltk-1.3.4-1/png/pngwrite.c **** }
1385:fltk-1.3.4-1/png/pngwrite.c **** 
1386:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1387:fltk-1.3.4-1/png/pngwrite.c **** png_set_compression_mem_level(png_structrp png_ptr, int mem_level)
1388:fltk-1.3.4-1/png/pngwrite.c **** {
1389:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_mem_level");
1390:fltk-1.3.4-1/png/pngwrite.c **** 
1391:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1392:fltk-1.3.4-1/png/pngwrite.c ****       return;
1393:fltk-1.3.4-1/png/pngwrite.c **** 
1394:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_mem_level = mem_level;
1395:fltk-1.3.4-1/png/pngwrite.c **** }
1396:fltk-1.3.4-1/png/pngwrite.c **** 
1397:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1398:fltk-1.3.4-1/png/pngwrite.c **** png_set_compression_strategy(png_structrp png_ptr, int strategy)
1399:fltk-1.3.4-1/png/pngwrite.c **** {
1400:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_strategy");
1401:fltk-1.3.4-1/png/pngwrite.c **** 
1402:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1403:fltk-1.3.4-1/png/pngwrite.c ****       return;
1404:fltk-1.3.4-1/png/pngwrite.c **** 
1405:fltk-1.3.4-1/png/pngwrite.c ****    /* The flag setting here prevents the libpng dynamic selection of strategy.
1406:fltk-1.3.4-1/png/pngwrite.c ****     */
1407:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->flags |= PNG_FLAG_ZLIB_CUSTOM_STRATEGY;
1408:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_strategy = strategy;
1409:fltk-1.3.4-1/png/pngwrite.c **** }
1410:fltk-1.3.4-1/png/pngwrite.c **** 
1411:fltk-1.3.4-1/png/pngwrite.c **** /* If PNG_WRITE_OPTIMIZE_CMF_SUPPORTED is defined, libpng will use a
1412:fltk-1.3.4-1/png/pngwrite.c ****  * smaller value of window_bits if it can do so safely.
1413:fltk-1.3.4-1/png/pngwrite.c ****  */
1414:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1415:fltk-1.3.4-1/png/pngwrite.c **** png_set_compression_window_bits(png_structrp png_ptr, int window_bits)
1416:fltk-1.3.4-1/png/pngwrite.c **** {
1417:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1418:fltk-1.3.4-1/png/pngwrite.c ****       return;
1419:fltk-1.3.4-1/png/pngwrite.c **** 
1420:fltk-1.3.4-1/png/pngwrite.c ****    /* Prior to 1.6.0 this would warn but then set the window_bits value, this
1421:fltk-1.3.4-1/png/pngwrite.c ****     * meant that negative window bits values could be selected which would cause
1422:fltk-1.3.4-1/png/pngwrite.c ****     * libpng to write a non-standard PNG file with raw deflate or gzip
1423:fltk-1.3.4-1/png/pngwrite.c ****     * compressed IDAT or ancillary chunks.  Such files can be read and there is
1424:fltk-1.3.4-1/png/pngwrite.c ****     * no warning on read, so this seems like a very bad idea.
1425:fltk-1.3.4-1/png/pngwrite.c ****     */
1426:fltk-1.3.4-1/png/pngwrite.c ****    if (window_bits > 15)
1427:fltk-1.3.4-1/png/pngwrite.c ****    {
1428:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression windows <= 32k supported by PNG");
1429:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 15;
1430:fltk-1.3.4-1/png/pngwrite.c ****    }
1431:fltk-1.3.4-1/png/pngwrite.c **** 
1432:fltk-1.3.4-1/png/pngwrite.c ****    else if (window_bits < 8)
1433:fltk-1.3.4-1/png/pngwrite.c ****    {
1434:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression windows >= 256 supported by PNG");
1435:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 8;
1436:fltk-1.3.4-1/png/pngwrite.c ****    }
1437:fltk-1.3.4-1/png/pngwrite.c **** 
1438:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_window_bits = window_bits;
1439:fltk-1.3.4-1/png/pngwrite.c **** }
1440:fltk-1.3.4-1/png/pngwrite.c **** 
1441:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1442:fltk-1.3.4-1/png/pngwrite.c **** png_set_compression_method(png_structrp png_ptr, int method)
1443:fltk-1.3.4-1/png/pngwrite.c **** {
1444:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_method");
1445:fltk-1.3.4-1/png/pngwrite.c **** 
1446:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1447:fltk-1.3.4-1/png/pngwrite.c ****       return;
1448:fltk-1.3.4-1/png/pngwrite.c **** 
1449:fltk-1.3.4-1/png/pngwrite.c ****    /* This would produce an invalid PNG file if it worked, but it doesn't and
1450:fltk-1.3.4-1/png/pngwrite.c ****     * deflate will fault it, so it is harmless to just warn here.
1451:fltk-1.3.4-1/png/pngwrite.c ****     */
1452:fltk-1.3.4-1/png/pngwrite.c ****    if (method != 8)
1453:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression method 8 is supported by PNG");
1454:fltk-1.3.4-1/png/pngwrite.c **** 
1455:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_method = method;
1456:fltk-1.3.4-1/png/pngwrite.c **** }
1457:fltk-1.3.4-1/png/pngwrite.c **** 
1458:fltk-1.3.4-1/png/pngwrite.c **** /* The following were added to libpng-1.5.4 */
1459:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_CUSTOMIZE_ZTXT_COMPRESSION_SUPPORTED
1460:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1461:fltk-1.3.4-1/png/pngwrite.c **** png_set_text_compression_level(png_structrp png_ptr, int level)
1462:fltk-1.3.4-1/png/pngwrite.c **** {
1463:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_level");
1464:fltk-1.3.4-1/png/pngwrite.c **** 
1465:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1466:fltk-1.3.4-1/png/pngwrite.c ****       return;
1467:fltk-1.3.4-1/png/pngwrite.c **** 
1468:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_text_level = level;
1469:fltk-1.3.4-1/png/pngwrite.c **** }
1470:fltk-1.3.4-1/png/pngwrite.c **** 
1471:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1472:fltk-1.3.4-1/png/pngwrite.c **** png_set_text_compression_mem_level(png_structrp png_ptr, int mem_level)
1473:fltk-1.3.4-1/png/pngwrite.c **** {
1474:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_mem_level");
1475:fltk-1.3.4-1/png/pngwrite.c **** 
1476:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1477:fltk-1.3.4-1/png/pngwrite.c ****       return;
1478:fltk-1.3.4-1/png/pngwrite.c **** 
1479:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_text_mem_level = mem_level;
1480:fltk-1.3.4-1/png/pngwrite.c **** }
1481:fltk-1.3.4-1/png/pngwrite.c **** 
1482:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1483:fltk-1.3.4-1/png/pngwrite.c **** png_set_text_compression_strategy(png_structrp png_ptr, int strategy)
1484:fltk-1.3.4-1/png/pngwrite.c **** {
1485:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_strategy");
1486:fltk-1.3.4-1/png/pngwrite.c **** 
1487:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1488:fltk-1.3.4-1/png/pngwrite.c ****       return;
1489:fltk-1.3.4-1/png/pngwrite.c **** 
1490:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_text_strategy = strategy;
1491:fltk-1.3.4-1/png/pngwrite.c **** }
1492:fltk-1.3.4-1/png/pngwrite.c **** 
1493:fltk-1.3.4-1/png/pngwrite.c **** /* If PNG_WRITE_OPTIMIZE_CMF_SUPPORTED is defined, libpng will use a
1494:fltk-1.3.4-1/png/pngwrite.c ****  * smaller value of window_bits if it can do so safely.
1495:fltk-1.3.4-1/png/pngwrite.c ****  */
1496:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1497:fltk-1.3.4-1/png/pngwrite.c **** png_set_text_compression_window_bits(png_structrp png_ptr, int window_bits)
1498:fltk-1.3.4-1/png/pngwrite.c **** {
1499:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1500:fltk-1.3.4-1/png/pngwrite.c ****       return;
1501:fltk-1.3.4-1/png/pngwrite.c **** 
1502:fltk-1.3.4-1/png/pngwrite.c ****    if (window_bits > 15)
1503:fltk-1.3.4-1/png/pngwrite.c ****    {
1504:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression windows <= 32k supported by PNG");
1505:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 15;
1506:fltk-1.3.4-1/png/pngwrite.c ****    }
1507:fltk-1.3.4-1/png/pngwrite.c **** 
1508:fltk-1.3.4-1/png/pngwrite.c ****    else if (window_bits < 8)
1509:fltk-1.3.4-1/png/pngwrite.c ****    {
1510:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression windows >= 256 supported by PNG");
1511:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 8;
1512:fltk-1.3.4-1/png/pngwrite.c ****    }
1513:fltk-1.3.4-1/png/pngwrite.c **** 
1514:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_text_window_bits = window_bits;
1515:fltk-1.3.4-1/png/pngwrite.c **** }
1516:fltk-1.3.4-1/png/pngwrite.c **** 
1517:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1518:fltk-1.3.4-1/png/pngwrite.c **** png_set_text_compression_method(png_structrp png_ptr, int method)
1519:fltk-1.3.4-1/png/pngwrite.c **** {
1520:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_method");
1521:fltk-1.3.4-1/png/pngwrite.c **** 
1522:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1523:fltk-1.3.4-1/png/pngwrite.c ****       return;
1524:fltk-1.3.4-1/png/pngwrite.c **** 
1525:fltk-1.3.4-1/png/pngwrite.c ****    if (method != 8)
1526:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression method 8 is supported by PNG");
1527:fltk-1.3.4-1/png/pngwrite.c **** 
1528:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_text_method = method;
1529:fltk-1.3.4-1/png/pngwrite.c **** }
1530:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_CUSTOMIZE_ZTXT_COMPRESSION */
1531:fltk-1.3.4-1/png/pngwrite.c **** /* end of API added to libpng-1.5.4 */
1532:fltk-1.3.4-1/png/pngwrite.c **** 
1533:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1534:fltk-1.3.4-1/png/pngwrite.c **** png_set_write_status_fn(png_structrp png_ptr, png_write_status_ptr write_row_fn)
1535:fltk-1.3.4-1/png/pngwrite.c **** {
1536:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1537:fltk-1.3.4-1/png/pngwrite.c ****       return;
1538:fltk-1.3.4-1/png/pngwrite.c **** 
1539:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->write_row_fn = write_row_fn;
1540:fltk-1.3.4-1/png/pngwrite.c **** }
1541:fltk-1.3.4-1/png/pngwrite.c **** 
1542:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_USER_TRANSFORM_SUPPORTED
1543:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1544:fltk-1.3.4-1/png/pngwrite.c **** png_set_write_user_transform_fn(png_structrp png_ptr, png_user_transform_ptr
1545:fltk-1.3.4-1/png/pngwrite.c ****     write_user_transform_fn)
1546:fltk-1.3.4-1/png/pngwrite.c **** {
1547:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_write_user_transform_fn");
1548:fltk-1.3.4-1/png/pngwrite.c **** 
1549:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
1550:fltk-1.3.4-1/png/pngwrite.c ****       return;
1551:fltk-1.3.4-1/png/pngwrite.c **** 
1552:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->transformations |= PNG_USER_TRANSFORM;
1553:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->write_user_transform_fn = write_user_transform_fn;
1554:fltk-1.3.4-1/png/pngwrite.c **** }
1555:fltk-1.3.4-1/png/pngwrite.c **** #endif
1556:fltk-1.3.4-1/png/pngwrite.c **** 
1557:fltk-1.3.4-1/png/pngwrite.c **** 
1558:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_INFO_IMAGE_SUPPORTED
1559:fltk-1.3.4-1/png/pngwrite.c **** void PNGAPI
1560:fltk-1.3.4-1/png/pngwrite.c **** png_write_png(png_structrp png_ptr, png_inforp info_ptr,
1561:fltk-1.3.4-1/png/pngwrite.c ****     int transforms, voidp params)
1562:fltk-1.3.4-1/png/pngwrite.c **** {
1563:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL || info_ptr == NULL)
1564:fltk-1.3.4-1/png/pngwrite.c ****       return;
1565:fltk-1.3.4-1/png/pngwrite.c **** 
1566:fltk-1.3.4-1/png/pngwrite.c ****    if ((info_ptr->valid & PNG_INFO_IDAT) == 0)
1567:fltk-1.3.4-1/png/pngwrite.c ****    {
1568:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "no rows for png_write_image to write");
1569:fltk-1.3.4-1/png/pngwrite.c ****       return;
1570:fltk-1.3.4-1/png/pngwrite.c ****    }
1571:fltk-1.3.4-1/png/pngwrite.c **** 
1572:fltk-1.3.4-1/png/pngwrite.c ****    /* Write the file header information. */
1573:fltk-1.3.4-1/png/pngwrite.c ****    png_write_info(png_ptr, info_ptr);
1574:fltk-1.3.4-1/png/pngwrite.c **** 
1575:fltk-1.3.4-1/png/pngwrite.c ****    /* ------ these transformations don't touch the info structure ------- */
1576:fltk-1.3.4-1/png/pngwrite.c **** 
1577:fltk-1.3.4-1/png/pngwrite.c ****    /* Invert monochrome pixels */
1578:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_INVERT_MONO) != 0)
1579:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_SUPPORTED
1580:fltk-1.3.4-1/png/pngwrite.c ****       png_set_invert_mono(png_ptr);
1581:fltk-1.3.4-1/png/pngwrite.c **** #else
1582:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_INVERT_MONO not supported");
1583:fltk-1.3.4-1/png/pngwrite.c **** #endif
1584:fltk-1.3.4-1/png/pngwrite.c **** 
1585:fltk-1.3.4-1/png/pngwrite.c ****    /* Shift the pixels up to a legal bit depth and fill in
1586:fltk-1.3.4-1/png/pngwrite.c ****     * as appropriate to correctly scale the image.
1587:fltk-1.3.4-1/png/pngwrite.c ****     */
1588:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_SHIFT) != 0)
1589:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SHIFT_SUPPORTED
1590:fltk-1.3.4-1/png/pngwrite.c ****       if ((info_ptr->valid & PNG_INFO_sBIT) != 0)
1591:fltk-1.3.4-1/png/pngwrite.c ****          png_set_shift(png_ptr, &info_ptr->sig_bit);
1592:fltk-1.3.4-1/png/pngwrite.c **** #else
1593:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_SHIFT not supported");
1594:fltk-1.3.4-1/png/pngwrite.c **** #endif
1595:fltk-1.3.4-1/png/pngwrite.c **** 
1596:fltk-1.3.4-1/png/pngwrite.c ****    /* Pack pixels into bytes */
1597:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_PACKING) != 0)
1598:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_PACK_SUPPORTED
1599:fltk-1.3.4-1/png/pngwrite.c ****       png_set_packing(png_ptr);
1600:fltk-1.3.4-1/png/pngwrite.c **** #else
1601:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_PACKING not supported");
1602:fltk-1.3.4-1/png/pngwrite.c **** #endif
1603:fltk-1.3.4-1/png/pngwrite.c **** 
1604:fltk-1.3.4-1/png/pngwrite.c ****    /* Swap location of alpha bytes from ARGB to RGBA */
1605:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_SWAP_ALPHA) != 0)
1606:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SWAP_ALPHA_SUPPORTED
1607:fltk-1.3.4-1/png/pngwrite.c ****       png_set_swap_alpha(png_ptr);
1608:fltk-1.3.4-1/png/pngwrite.c **** #else
1609:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_SWAP_ALPHA not supported");
1610:fltk-1.3.4-1/png/pngwrite.c **** #endif
1611:fltk-1.3.4-1/png/pngwrite.c **** 
1612:fltk-1.3.4-1/png/pngwrite.c ****    /* Remove a filler (X) from XRGB/RGBX/AG/GA into to convert it into
1613:fltk-1.3.4-1/png/pngwrite.c ****     * RGB, note that the code expects the input color type to be G or RGB; no
1614:fltk-1.3.4-1/png/pngwrite.c ****     * alpha channel.
1615:fltk-1.3.4-1/png/pngwrite.c ****     */
1616:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & (PNG_TRANSFORM_STRIP_FILLER_AFTER|
1617:fltk-1.3.4-1/png/pngwrite.c ****       PNG_TRANSFORM_STRIP_FILLER_BEFORE)) != 0)
1618:fltk-1.3.4-1/png/pngwrite.c ****    {
1619:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FILLER_SUPPORTED
1620:fltk-1.3.4-1/png/pngwrite.c ****       if ((transforms & PNG_TRANSFORM_STRIP_FILLER_AFTER) != 0)
1621:fltk-1.3.4-1/png/pngwrite.c ****       {
1622:fltk-1.3.4-1/png/pngwrite.c ****          if ((transforms & PNG_TRANSFORM_STRIP_FILLER_BEFORE) != 0)
1623:fltk-1.3.4-1/png/pngwrite.c ****             png_app_error(png_ptr,
1624:fltk-1.3.4-1/png/pngwrite.c ****                "PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported");
1625:fltk-1.3.4-1/png/pngwrite.c **** 
1626:fltk-1.3.4-1/png/pngwrite.c ****          /* Continue if ignored - this is the pre-1.6.10 behavior */
1627:fltk-1.3.4-1/png/pngwrite.c ****          png_set_filler(png_ptr, 0, PNG_FILLER_AFTER);
1628:fltk-1.3.4-1/png/pngwrite.c ****       }
1629:fltk-1.3.4-1/png/pngwrite.c **** 
1630:fltk-1.3.4-1/png/pngwrite.c ****       else if ((transforms & PNG_TRANSFORM_STRIP_FILLER_BEFORE) != 0)
1631:fltk-1.3.4-1/png/pngwrite.c ****          png_set_filler(png_ptr, 0, PNG_FILLER_BEFORE);
1632:fltk-1.3.4-1/png/pngwrite.c **** #else
1633:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_STRIP_FILLER not supported");
1634:fltk-1.3.4-1/png/pngwrite.c **** #endif
1635:fltk-1.3.4-1/png/pngwrite.c ****    }
1636:fltk-1.3.4-1/png/pngwrite.c **** 
1637:fltk-1.3.4-1/png/pngwrite.c ****    /* Flip BGR pixels to RGB */
1638:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_BGR) != 0)
1639:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_BGR_SUPPORTED
1640:fltk-1.3.4-1/png/pngwrite.c ****       png_set_bgr(png_ptr);
1641:fltk-1.3.4-1/png/pngwrite.c **** #else
1642:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_BGR not supported");
1643:fltk-1.3.4-1/png/pngwrite.c **** #endif
1644:fltk-1.3.4-1/png/pngwrite.c **** 
1645:fltk-1.3.4-1/png/pngwrite.c ****    /* Swap bytes of 16-bit files to most significant byte first */
1646:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_SWAP_ENDIAN) != 0)
1647:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SWAP_SUPPORTED
1648:fltk-1.3.4-1/png/pngwrite.c ****       png_set_swap(png_ptr);
1649:fltk-1.3.4-1/png/pngwrite.c **** #else
1650:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_SWAP_ENDIAN not supported");
1651:fltk-1.3.4-1/png/pngwrite.c **** #endif
1652:fltk-1.3.4-1/png/pngwrite.c **** 
1653:fltk-1.3.4-1/png/pngwrite.c ****    /* Swap bits of 1, 2, 4 bit packed pixel formats */
1654:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_PACKSWAP) != 0)
1655:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_PACKSWAP_SUPPORTED
1656:fltk-1.3.4-1/png/pngwrite.c ****       png_set_packswap(png_ptr);
1657:fltk-1.3.4-1/png/pngwrite.c **** #else
1658:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_PACKSWAP not supported");
1659:fltk-1.3.4-1/png/pngwrite.c **** #endif
1660:fltk-1.3.4-1/png/pngwrite.c **** 
1661:fltk-1.3.4-1/png/pngwrite.c ****    /* Invert the alpha channel from opacity to transparency */
1662:fltk-1.3.4-1/png/pngwrite.c ****    if ((transforms & PNG_TRANSFORM_INVERT_ALPHA) != 0)
1663:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_ALPHA_SUPPORTED
1664:fltk-1.3.4-1/png/pngwrite.c ****       png_set_invert_alpha(png_ptr);
1665:fltk-1.3.4-1/png/pngwrite.c **** #else
1666:fltk-1.3.4-1/png/pngwrite.c ****       png_app_error(png_ptr, "PNG_TRANSFORM_INVERT_ALPHA not supported");
1667:fltk-1.3.4-1/png/pngwrite.c **** #endif
1668:fltk-1.3.4-1/png/pngwrite.c **** 
1669:fltk-1.3.4-1/png/pngwrite.c ****    /* ----------------------- end of transformations ------------------- */
1670:fltk-1.3.4-1/png/pngwrite.c **** 
1671:fltk-1.3.4-1/png/pngwrite.c ****    /* Write the bits */
1672:fltk-1.3.4-1/png/pngwrite.c ****    png_write_image(png_ptr, info_ptr->row_pointers);
1673:fltk-1.3.4-1/png/pngwrite.c **** 
1674:fltk-1.3.4-1/png/pngwrite.c ****    /* It is REQUIRED to call this to finish writing the rest of the file */
1675:fltk-1.3.4-1/png/pngwrite.c ****    png_write_end(png_ptr, info_ptr);
1676:fltk-1.3.4-1/png/pngwrite.c **** 
1677:fltk-1.3.4-1/png/pngwrite.c ****    PNG_UNUSED(params)
1678:fltk-1.3.4-1/png/pngwrite.c **** }
1679:fltk-1.3.4-1/png/pngwrite.c **** #endif
1680:fltk-1.3.4-1/png/pngwrite.c **** 
1681:fltk-1.3.4-1/png/pngwrite.c **** 
1682:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_SIMPLIFIED_WRITE_SUPPORTED
1683:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_STDIO_SUPPORTED /* currently required for png_image_write_* */
1684:fltk-1.3.4-1/png/pngwrite.c **** /* Initialize the write structure - general purpose utility. */
1685:fltk-1.3.4-1/png/pngwrite.c **** static int
1686:fltk-1.3.4-1/png/pngwrite.c **** png_image_write_init(png_imagep image)
1687:fltk-1.3.4-1/png/pngwrite.c **** {
1688:fltk-1.3.4-1/png/pngwrite.c ****    png_structp png_ptr = png_create_write_struct(PNG_LIBPNG_VER_STRING, image,
1689:fltk-1.3.4-1/png/pngwrite.c ****           png_safe_error, png_safe_warning);
1690:fltk-1.3.4-1/png/pngwrite.c **** 
1691:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr != NULL)
1692:fltk-1.3.4-1/png/pngwrite.c ****    {
1693:fltk-1.3.4-1/png/pngwrite.c ****       png_infop info_ptr = png_create_info_struct(png_ptr);
1694:fltk-1.3.4-1/png/pngwrite.c **** 
1695:fltk-1.3.4-1/png/pngwrite.c ****       if (info_ptr != NULL)
1696:fltk-1.3.4-1/png/pngwrite.c ****       {
1697:fltk-1.3.4-1/png/pngwrite.c ****          png_controlp control = png_voidcast(png_controlp,
1698:fltk-1.3.4-1/png/pngwrite.c ****             png_malloc_warn(png_ptr, (sizeof *control)));
1699:fltk-1.3.4-1/png/pngwrite.c **** 
1700:fltk-1.3.4-1/png/pngwrite.c ****          if (control != NULL)
1701:fltk-1.3.4-1/png/pngwrite.c ****          {
1702:fltk-1.3.4-1/png/pngwrite.c ****             memset(control, 0, (sizeof *control));
1703:fltk-1.3.4-1/png/pngwrite.c **** 
1704:fltk-1.3.4-1/png/pngwrite.c ****             control->png_ptr = png_ptr;
1705:fltk-1.3.4-1/png/pngwrite.c ****             control->info_ptr = info_ptr;
1706:fltk-1.3.4-1/png/pngwrite.c ****             control->for_write = 1;
1707:fltk-1.3.4-1/png/pngwrite.c **** 
1708:fltk-1.3.4-1/png/pngwrite.c ****             image->opaque = control;
1709:fltk-1.3.4-1/png/pngwrite.c ****             return 1;
1710:fltk-1.3.4-1/png/pngwrite.c ****          }
1711:fltk-1.3.4-1/png/pngwrite.c **** 
1712:fltk-1.3.4-1/png/pngwrite.c ****          /* Error clean up */
1713:fltk-1.3.4-1/png/pngwrite.c ****          png_destroy_info_struct(png_ptr, &info_ptr);
1714:fltk-1.3.4-1/png/pngwrite.c ****       }
1715:fltk-1.3.4-1/png/pngwrite.c **** 
1716:fltk-1.3.4-1/png/pngwrite.c ****       png_destroy_write_struct(&png_ptr, NULL);
1717:fltk-1.3.4-1/png/pngwrite.c ****    }
1718:fltk-1.3.4-1/png/pngwrite.c **** 
1719:fltk-1.3.4-1/png/pngwrite.c ****    return png_image_error(image, "png_image_write_: out of memory");
1720:fltk-1.3.4-1/png/pngwrite.c **** }
1721:fltk-1.3.4-1/png/pngwrite.c **** 
1722:fltk-1.3.4-1/png/pngwrite.c **** /* Arguments to png_image_write_main: */
1723:fltk-1.3.4-1/png/pngwrite.c **** typedef struct
1724:fltk-1.3.4-1/png/pngwrite.c **** {
1725:fltk-1.3.4-1/png/pngwrite.c ****    /* Arguments: */
1726:fltk-1.3.4-1/png/pngwrite.c ****    png_imagep      image;
1727:fltk-1.3.4-1/png/pngwrite.c ****    png_const_voidp buffer;
1728:fltk-1.3.4-1/png/pngwrite.c ****    png_int_32      row_stride;
1729:fltk-1.3.4-1/png/pngwrite.c ****    png_const_voidp colormap;
1730:fltk-1.3.4-1/png/pngwrite.c ****    int             convert_to_8bit;
1731:fltk-1.3.4-1/png/pngwrite.c ****    /* Local variables: */
1732:fltk-1.3.4-1/png/pngwrite.c ****    png_const_voidp first_row;
1733:fltk-1.3.4-1/png/pngwrite.c ****    ptrdiff_t       row_bytes;
1734:fltk-1.3.4-1/png/pngwrite.c ****    png_voidp       local_row;
1735:fltk-1.3.4-1/png/pngwrite.c **** } png_image_write_control;
1736:fltk-1.3.4-1/png/pngwrite.c **** 
1737:fltk-1.3.4-1/png/pngwrite.c **** /* Write png_uint_16 input to a 16-bit PNG; the png_ptr has already been set to
1738:fltk-1.3.4-1/png/pngwrite.c ****  * do any necessary byte swapping.  The component order is defined by the
1739:fltk-1.3.4-1/png/pngwrite.c ****  * png_image format value.
1740:fltk-1.3.4-1/png/pngwrite.c ****  */
1741:fltk-1.3.4-1/png/pngwrite.c **** static int
1742:fltk-1.3.4-1/png/pngwrite.c **** png_write_image_16bit(png_voidp argument)
1743:fltk-1.3.4-1/png/pngwrite.c **** {
1744:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
1745:fltk-1.3.4-1/png/pngwrite.c ****       argument);
1746:fltk-1.3.4-1/png/pngwrite.c ****    png_imagep image = display->image;
1747:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
1748:fltk-1.3.4-1/png/pngwrite.c **** 
1749:fltk-1.3.4-1/png/pngwrite.c ****    png_const_uint_16p input_row = png_voidcast(png_const_uint_16p,
1750:fltk-1.3.4-1/png/pngwrite.c ****       display->first_row);
1751:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_16p output_row = png_voidcast(png_uint_16p, display->local_row);
1752:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_16p row_end;
1753:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = (image->format & PNG_FORMAT_FLAG_COLOR) != 0 ? 3 : 1;
1754:fltk-1.3.4-1/png/pngwrite.c ****    int aindex = 0;
1755:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 y = image->height;
1756:fltk-1.3.4-1/png/pngwrite.c **** 
1757:fltk-1.3.4-1/png/pngwrite.c ****    if ((image->format & PNG_FORMAT_FLAG_ALPHA) != 0)
1758:fltk-1.3.4-1/png/pngwrite.c ****    {
1759:fltk-1.3.4-1/png/pngwrite.c **** #     ifdef PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED
1760:fltk-1.3.4-1/png/pngwrite.c ****          if ((image->format & PNG_FORMAT_FLAG_AFIRST) != 0)
1761:fltk-1.3.4-1/png/pngwrite.c ****          {
1762:fltk-1.3.4-1/png/pngwrite.c ****             aindex = -1;
1763:fltk-1.3.4-1/png/pngwrite.c ****             ++input_row; /* To point to the first component */
1764:fltk-1.3.4-1/png/pngwrite.c ****             ++output_row;
1765:fltk-1.3.4-1/png/pngwrite.c ****          }
1766:fltk-1.3.4-1/png/pngwrite.c **** 
1767:fltk-1.3.4-1/png/pngwrite.c ****          else
1768:fltk-1.3.4-1/png/pngwrite.c **** #     endif
1769:fltk-1.3.4-1/png/pngwrite.c ****          aindex = channels;
1770:fltk-1.3.4-1/png/pngwrite.c ****    }
1771:fltk-1.3.4-1/png/pngwrite.c **** 
1772:fltk-1.3.4-1/png/pngwrite.c ****    else
1773:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "png_write_image: internal call error");
1774:fltk-1.3.4-1/png/pngwrite.c **** 
1775:fltk-1.3.4-1/png/pngwrite.c ****    /* Work out the output row end and count over this, note that the increment
1776:fltk-1.3.4-1/png/pngwrite.c ****     * above to 'row' means that row_end can actually be beyond the end of the
1777:fltk-1.3.4-1/png/pngwrite.c ****     * row; this is correct.
1778:fltk-1.3.4-1/png/pngwrite.c ****     */
1779:fltk-1.3.4-1/png/pngwrite.c ****    row_end = output_row + image->width * (channels+1);
1780:fltk-1.3.4-1/png/pngwrite.c **** 
1781:fltk-1.3.4-1/png/pngwrite.c ****    while (y-- > 0)
1782:fltk-1.3.4-1/png/pngwrite.c ****    {
1783:fltk-1.3.4-1/png/pngwrite.c ****       png_const_uint_16p in_ptr = input_row;
1784:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_16p out_ptr = output_row;
1785:fltk-1.3.4-1/png/pngwrite.c **** 
1786:fltk-1.3.4-1/png/pngwrite.c ****       while (out_ptr < row_end)
1787:fltk-1.3.4-1/png/pngwrite.c ****       {
1788:fltk-1.3.4-1/png/pngwrite.c ****          const png_uint_16 alpha = in_ptr[aindex];
1789:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 reciprocal = 0;
1790:fltk-1.3.4-1/png/pngwrite.c ****          int c;
1791:fltk-1.3.4-1/png/pngwrite.c **** 
1792:fltk-1.3.4-1/png/pngwrite.c ****          out_ptr[aindex] = alpha;
1793:fltk-1.3.4-1/png/pngwrite.c **** 
1794:fltk-1.3.4-1/png/pngwrite.c ****          /* Calculate a reciprocal.  The correct calculation is simply
1795:fltk-1.3.4-1/png/pngwrite.c ****           * component/alpha*65535 << 15. (I.e. 15 bits of precision); this
1796:fltk-1.3.4-1/png/pngwrite.c ****           * allows correct rounding by adding .5 before the shift.  'reciprocal'
1797:fltk-1.3.4-1/png/pngwrite.c ****           * is only initialized when required.
1798:fltk-1.3.4-1/png/pngwrite.c ****           */
1799:fltk-1.3.4-1/png/pngwrite.c ****          if (alpha > 0 && alpha < 65535)
1800:fltk-1.3.4-1/png/pngwrite.c ****             reciprocal = ((0xffff<<15)+(alpha>>1))/alpha;
1801:fltk-1.3.4-1/png/pngwrite.c **** 
1802:fltk-1.3.4-1/png/pngwrite.c ****          c = channels;
1803:fltk-1.3.4-1/png/pngwrite.c ****          do /* always at least one channel */
1804:fltk-1.3.4-1/png/pngwrite.c ****          {
1805:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_16 component = *in_ptr++;
1806:fltk-1.3.4-1/png/pngwrite.c **** 
1807:fltk-1.3.4-1/png/pngwrite.c ****             /* The following gives 65535 for an alpha of 0, which is fine,
1808:fltk-1.3.4-1/png/pngwrite.c ****              * otherwise if 0/0 is represented as some other value there is more
1809:fltk-1.3.4-1/png/pngwrite.c ****              * likely to be a discontinuity which will probably damage
1810:fltk-1.3.4-1/png/pngwrite.c ****              * compression when moving from a fully transparent area to a
1811:fltk-1.3.4-1/png/pngwrite.c ****              * nearly transparent one.  (The assumption here is that opaque
1812:fltk-1.3.4-1/png/pngwrite.c ****              * areas tend not to be 0 intensity.)
1813:fltk-1.3.4-1/png/pngwrite.c ****              */
1814:fltk-1.3.4-1/png/pngwrite.c ****             if (component >= alpha)
1815:fltk-1.3.4-1/png/pngwrite.c ****                component = 65535;
1816:fltk-1.3.4-1/png/pngwrite.c **** 
1817:fltk-1.3.4-1/png/pngwrite.c ****             /* component<alpha, so component/alpha is less than one and
1818:fltk-1.3.4-1/png/pngwrite.c ****              * component*reciprocal is less than 2^31.
1819:fltk-1.3.4-1/png/pngwrite.c ****              */
1820:fltk-1.3.4-1/png/pngwrite.c ****             else if (component > 0 && alpha < 65535)
1821:fltk-1.3.4-1/png/pngwrite.c ****             {
1822:fltk-1.3.4-1/png/pngwrite.c ****                png_uint_32 calc = component * reciprocal;
1823:fltk-1.3.4-1/png/pngwrite.c ****                calc += 16384; /* round to nearest */
1824:fltk-1.3.4-1/png/pngwrite.c ****                component = (png_uint_16)(calc >> 15);
1825:fltk-1.3.4-1/png/pngwrite.c ****             }
1826:fltk-1.3.4-1/png/pngwrite.c **** 
1827:fltk-1.3.4-1/png/pngwrite.c ****             *out_ptr++ = component;
1828:fltk-1.3.4-1/png/pngwrite.c ****          }
1829:fltk-1.3.4-1/png/pngwrite.c ****          while (--c > 0);
1830:fltk-1.3.4-1/png/pngwrite.c **** 
1831:fltk-1.3.4-1/png/pngwrite.c ****          /* Skip to next component (skip the intervening alpha channel) */
1832:fltk-1.3.4-1/png/pngwrite.c ****          ++in_ptr;
1833:fltk-1.3.4-1/png/pngwrite.c ****          ++out_ptr;
1834:fltk-1.3.4-1/png/pngwrite.c ****       }
1835:fltk-1.3.4-1/png/pngwrite.c **** 
1836:fltk-1.3.4-1/png/pngwrite.c ****       png_write_row(png_ptr, png_voidcast(png_const_bytep, display->local_row));
1837:fltk-1.3.4-1/png/pngwrite.c ****       input_row += display->row_bytes/(sizeof (png_uint_16));
1838:fltk-1.3.4-1/png/pngwrite.c ****    }
1839:fltk-1.3.4-1/png/pngwrite.c **** 
1840:fltk-1.3.4-1/png/pngwrite.c ****    return 1;
1841:fltk-1.3.4-1/png/pngwrite.c **** }
1842:fltk-1.3.4-1/png/pngwrite.c **** 
1843:fltk-1.3.4-1/png/pngwrite.c **** /* Given 16-bit input (1 to 4 channels) write 8-bit output.  If an alpha channel
1844:fltk-1.3.4-1/png/pngwrite.c ****  * is present it must be removed from the components, the components are then
1845:fltk-1.3.4-1/png/pngwrite.c ****  * written in sRGB encoding.  No components are added or removed.
1846:fltk-1.3.4-1/png/pngwrite.c ****  *
1847:fltk-1.3.4-1/png/pngwrite.c ****  * Calculate an alpha reciprocal to reverse pre-multiplication.  As above the
1848:fltk-1.3.4-1/png/pngwrite.c ****  * calculation can be done to 15 bits of accuracy; however, the output needs to
1849:fltk-1.3.4-1/png/pngwrite.c ****  * be scaled in the range 0..255*65535, so include that scaling here.
1850:fltk-1.3.4-1/png/pngwrite.c ****  */
1851:fltk-1.3.4-1/png/pngwrite.c **** #define UNP_RECIPROCAL(alpha) ((((0xffff*0xff)<<7)+(alpha>>1))/alpha)
1852:fltk-1.3.4-1/png/pngwrite.c **** 
1853:fltk-1.3.4-1/png/pngwrite.c **** static png_byte
1854:fltk-1.3.4-1/png/pngwrite.c **** png_unpremultiply(png_uint_32 component, png_uint_32 alpha,
 107              		.loc 1 1854 1 is_stmt 1 view -0
 108              		.cfi_startproc
1855:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 reciprocal/*from the above macro*/)
1856:fltk-1.3.4-1/png/pngwrite.c **** {
1857:fltk-1.3.4-1/png/pngwrite.c ****    /* The following gives 1.0 for an alpha of 0, which is fine, otherwise if 0/0
1858:fltk-1.3.4-1/png/pngwrite.c ****     * is represented as some other value there is more likely to be a
1859:fltk-1.3.4-1/png/pngwrite.c ****     * discontinuity which will probably damage compression when moving from a
1860:fltk-1.3.4-1/png/pngwrite.c ****     * fully transparent area to a nearly transparent one.  (The assumption here
1861:fltk-1.3.4-1/png/pngwrite.c ****     * is that opaque areas tend not to be 0 intensity.)
1862:fltk-1.3.4-1/png/pngwrite.c ****     *
1863:fltk-1.3.4-1/png/pngwrite.c ****     * There is a rounding problem here; if alpha is less than 128 it will end up
1864:fltk-1.3.4-1/png/pngwrite.c ****     * as 0 when scaled to 8 bits.  To avoid introducing spurious colors into the
1865:fltk-1.3.4-1/png/pngwrite.c ****     * output change for this too.
1866:fltk-1.3.4-1/png/pngwrite.c ****     */
1867:fltk-1.3.4-1/png/pngwrite.c ****    if (component >= alpha || alpha < 128)
1868:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
1869:fltk-1.3.4-1/png/pngwrite.c **** 
1870:fltk-1.3.4-1/png/pngwrite.c ****    /* component<alpha, so component/alpha is less than one and
1871:fltk-1.3.4-1/png/pngwrite.c ****     * component*reciprocal is less than 2^31.
1872:fltk-1.3.4-1/png/pngwrite.c ****     */
1873:fltk-1.3.4-1/png/pngwrite.c ****    else if (component > 0)
1874:fltk-1.3.4-1/png/pngwrite.c ****    {
1875:fltk-1.3.4-1/png/pngwrite.c ****       /* The test is that alpha/257 (rounded) is less than 255, the first value
1876:fltk-1.3.4-1/png/pngwrite.c ****        * that becomes 255 is 65407.
1877:fltk-1.3.4-1/png/pngwrite.c ****        * NOTE: this must agree with the PNG_DIV257 macro (which must, therefore,
1878:fltk-1.3.4-1/png/pngwrite.c ****        * be exact!)  [Could also test reciprocal != 0]
1879:fltk-1.3.4-1/png/pngwrite.c ****        */
1880:fltk-1.3.4-1/png/pngwrite.c ****       if (alpha < 65407)
 109              		.loc 1 1880 7 view .LVU36
 110              		.loc 1 1880 10 is_stmt 0 view .LVU37
 111 0000 81FE7EFF 		cmpl	$65406, %esi
 111      0000
 112 0006 7738     		ja	.L14
1881:fltk-1.3.4-1/png/pngwrite.c ****       {
1882:fltk-1.3.4-1/png/pngwrite.c ****          component *= reciprocal;
 113              		.loc 1 1882 10 is_stmt 1 view .LVU38
 114              		.loc 1 1882 20 is_stmt 0 view .LVU39
 115 0008 0FAFFA   		imull	%edx, %edi
 116              	.LVL10:
1883:fltk-1.3.4-1/png/pngwrite.c ****          component += 64; /* round to nearest */
 117              		.loc 1 1883 10 is_stmt 1 view .LVU40
 118              		.loc 1 1883 20 is_stmt 0 view .LVU41
 119 000b 8D5740   		leal	64(%rdi), %edx
 120              	.LVL11:
1884:fltk-1.3.4-1/png/pngwrite.c ****          component >>= 7;
 121              		.loc 1 1884 10 is_stmt 1 view .LVU42
 122              		.loc 1 1884 20 is_stmt 0 view .LVU43
 123 000e C1EA07   		shrl	$7, %edx
 124              	.LVL12:
 125              	.L15:
1885:fltk-1.3.4-1/png/pngwrite.c ****       }
1886:fltk-1.3.4-1/png/pngwrite.c **** 
1887:fltk-1.3.4-1/png/pngwrite.c ****       else
1888:fltk-1.3.4-1/png/pngwrite.c ****          component *= 255;
1889:fltk-1.3.4-1/png/pngwrite.c **** 
1890:fltk-1.3.4-1/png/pngwrite.c ****       /* Convert the component to sRGB. */
1891:fltk-1.3.4-1/png/pngwrite.c ****       return (png_byte)PNG_sRGB_FROM_LINEAR(component);
 126              		.loc 1 1891 7 is_stmt 1 view .LVU44
 127              		.loc 1 1891 24 is_stmt 0 view .LVU45
 128 0011 89D1     		movl	%edx, %ecx
 129 0013 89D0     		movl	%edx, %eax
 130 0015 488D1500 		leaq	png_sRGB_delta(%rip), %rdx
 130      000000
 131              	.LVL13:
 132              		.loc 1 1891 24 view .LVU46
 133 001c C1E90F   		shrl	$15, %ecx
 134 001f 25FF7F00 		andl	$32767, %eax
 134      00
 135              	.LVL14:
 136              		.loc 1 1891 24 view .LVU47
 137 0024 0FB6140A 		movzbl	(%rdx,%rcx), %edx
 138 0028 0FAFC2   		imull	%edx, %eax
 139 002b 488D1500 		leaq	png_sRGB_base(%rip), %rdx
 139      000000
 140 0032 0FB7144A 		movzwl	(%rdx,%rcx,2), %edx
 141 0036 C1E80C   		shrl	$12, %eax
 142 0039 01D0     		addl	%edx, %eax
 143 003b C1E808   		shrl	$8, %eax
1892:fltk-1.3.4-1/png/pngwrite.c ****    }
1893:fltk-1.3.4-1/png/pngwrite.c **** 
1894:fltk-1.3.4-1/png/pngwrite.c ****    else
1895:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
1896:fltk-1.3.4-1/png/pngwrite.c **** }
 144              		.loc 1 1896 1 view .LVU48
 145 003e C3       		ret
 146              	.LVL15:
 147 003f 90       		.p2align 4,,10
 148              		.p2align 3
 149              	.L14:
1888:fltk-1.3.4-1/png/pngwrite.c **** 
 150              		.loc 1 1888 10 is_stmt 1 view .LVU49
1888:fltk-1.3.4-1/png/pngwrite.c **** 
 151              		.loc 1 1888 20 is_stmt 0 view .LVU50
 152 0040 89FA     		movl	%edi, %edx
 153              	.LVL16:
1888:fltk-1.3.4-1/png/pngwrite.c **** 
 154              		.loc 1 1888 20 view .LVU51
 155 0042 C1E208   		sall	$8, %edx
 156 0045 29FA     		subl	%edi, %edx
 157              	.LVL17:
1888:fltk-1.3.4-1/png/pngwrite.c **** 
 158              		.loc 1 1888 20 view .LVU52
 159 0047 EBC8     		jmp	.L15
 160              		.cfi_endproc
 161              	.LFE83:
 163              		.section	.rodata.write_unknown_chunks.isra.0.part.0.str1.8,"aMS",@progbits,1
 164              		.align 8
 165              	.LC0:
 166 0000 57726974 		.string	"Writing zero-length unknown chunk"
 166      696E6720 
 166      7A65726F 
 166      2D6C656E 
 166      67746820 
 167              		.section	.text.write_unknown_chunks.isra.0.part.0,"ax",@progbits
 168              		.p2align 4
 170              	write_unknown_chunks.isra.0.part.0:
 171              	.LVL18:
 172              	.LFB85:
  24:fltk-1.3.4-1/png/pngwrite.c ****    unsigned int where)
 173              		.loc 1 24 1 is_stmt 1 view -0
 174              		.cfi_startproc
 175              	.LBB103:
  29:fltk-1.3.4-1/png/pngwrite.c **** 
 176              		.loc 1 29 7 view .LVU54
  31:fltk-1.3.4-1/png/pngwrite.c **** 
 177              		.loc 1 31 7 view .LVU55
  33:fltk-1.3.4-1/png/pngwrite.c ****            up < info_ptr->unknown_chunks + info_ptr->unknown_chunks_num;
 178              		.loc 1 33 7 view .LVU56
 179              	.LBE103:
  24:fltk-1.3.4-1/png/pngwrite.c ****    unsigned int where)
 180              		.loc 1 24 1 is_stmt 0 view .LVU57
 181 0000 4157     		pushq	%r15
 182              		.cfi_def_cfa_offset 16
 183              		.cfi_offset 15, -16
 184 0002 4156     		pushq	%r14
 185              		.cfi_def_cfa_offset 24
 186              		.cfi_offset 14, -24
 187 0004 4155     		pushq	%r13
 188              		.cfi_def_cfa_offset 32
 189              		.cfi_offset 13, -32
 190 0006 4154     		pushq	%r12
 191              		.cfi_def_cfa_offset 40
 192              		.cfi_offset 12, -40
 193 0008 4989D4   		movq	%rdx, %r12
 194 000b 55       		pushq	%rbp
 195              		.cfi_def_cfa_offset 48
 196              		.cfi_offset 6, -48
 197 000c 53       		pushq	%rbx
 198              		.cfi_def_cfa_offset 56
 199              		.cfi_offset 3, -56
 200 000d 89CB     		movl	%ecx, %ebx
 201 000f 4883EC08 		subq	$8, %rsp
 202              		.cfi_def_cfa_offset 64
 203              	.LBB106:
  34:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
 204              		.loc 1 34 52 view .LVU58
 205 0013 49630424 		movslq	(%r12), %rax
  33:fltk-1.3.4-1/png/pngwrite.c ****            up < info_ptr->unknown_chunks + info_ptr->unknown_chunks_num;
 206              		.loc 1 33 15 view .LVU59
 207 0017 488B16   		movq	(%rsi), %rdx
 208              	.LVL19:
  34:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
 209              		.loc 1 34 12 is_stmt 1 view .LVU60
  34:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
 210              		.loc 1 34 52 is_stmt 0 view .LVU61
 211 001a 4889C1   		movq	%rax, %rcx
 212              	.LVL20:
  34:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
 213              		.loc 1 34 42 view .LVU62
 214 001d 48C1E005 		salq	$5, %rax
 215 0021 4801D0   		addq	%rdx, %rax
  33:fltk-1.3.4-1/png/pngwrite.c ****            up < info_ptr->unknown_chunks + info_ptr->unknown_chunks_num;
 216              		.loc 1 33 7 view .LVU63
 217 0024 4839C2   		cmpq	%rax, %rdx
 218 0027 0F839300 		jnb	.L16
 218      0000
 219 002d 4889FD   		movq	%rdi, %rbp
 220 0030 4989F5   		movq	%rsi, %r13
 221 0033 4C8D3500 		leaq	.LC0(%rip), %r14
 221      000000
 222 003a 4989D7   		movq	%rdx, %r15
 223 003d EB14     		jmp	.L17
 224              	.LVL21:
 225 003f 90       		.p2align 4,,10
 226              		.p2align 3
 227              	.L19:
  35:fltk-1.3.4-1/png/pngwrite.c ****          if ((up->location & where) != 0)
 228              		.loc 1 35 12 is_stmt 1 view .LVU64
  34:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
 229              		.loc 1 34 52 is_stmt 0 view .LVU65
 230 0040 4863C1   		movslq	%ecx, %rax
  35:fltk-1.3.4-1/png/pngwrite.c ****          if ((up->location & where) != 0)
 231              		.loc 1 35 12 view .LVU66
 232 0043 4983C720 		addq	$32, %r15
 233              	.LVL22:
  34:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
 234              		.loc 1 34 12 is_stmt 1 view .LVU67
  34:fltk-1.3.4-1/png/pngwrite.c ****            ++up)
 235              		.loc 1 34 42 is_stmt 0 view .LVU68
 236 0047 48C1E005 		salq	$5, %rax
 237 004b 4801D0   		addq	%rdx, %rax
  33:fltk-1.3.4-1/png/pngwrite.c ****            up < info_ptr->unknown_chunks + info_ptr->unknown_chunks_num;
 238              		.loc 1 33 7 view .LVU69
 239 004e 4939C7   		cmpq	%rax, %r15
 240 0051 736D     		jnb	.L16
 241              	.L17:
  36:fltk-1.3.4-1/png/pngwrite.c ****       {
 242              		.loc 1 36 10 is_stmt 1 view .LVU70
  36:fltk-1.3.4-1/png/pngwrite.c ****       {
 243              		.loc 1 36 17 is_stmt 0 view .LVU71
 244 0053 410FB647 		movzbl	24(%r15), %eax
 244      18
  36:fltk-1.3.4-1/png/pngwrite.c ****       {
 245              		.loc 1 36 13 view .LVU72
 246 0058 85D8     		testl	%ebx, %eax
 247 005a 74E4     		je	.L19
 248              	.LBB104:
  42:fltk-1.3.4-1/png/pngwrite.c **** 
 249              		.loc 1 42 10 is_stmt 1 view .LVU73
  42:fltk-1.3.4-1/png/pngwrite.c **** 
 250              		.loc 1 42 21 is_stmt 0 view .LVU74
 251 005c 4C89FE   		movq	%r15, %rsi
 252 005f 4889EF   		movq	%rbp, %rdi
 253 0062 E8000000 		call	png_handle_as_unknown@PLT
 253      00
 254              	.LVL23:
  56:fltk-1.3.4-1/png/pngwrite.c ****              ((up->name[3] & 0x20) /* safe-to-copy overrides everything */ ||
 255              		.loc 1 56 10 is_stmt 1 view .LVU75
  56:fltk-1.3.4-1/png/pngwrite.c ****              ((up->name[3] & 0x20) /* safe-to-copy overrides everything */ ||
 256              		.loc 1 56 13 is_stmt 0 view .LVU76
 257 0067 83F801   		cmpl	$1, %eax
 258 006a 741C     		je	.L33
  57:fltk-1.3.4-1/png/pngwrite.c ****               keep == PNG_HANDLE_CHUNK_ALWAYS ||
 259              		.loc 1 57 76 view .LVU77
 260 006c 41F64703 		testb	$32, 3(%r15)
 260      20
 261 0071 7525     		jne	.L21
 262 0073 83F803   		cmpl	$3, %eax
 263 0076 7420     		je	.L21
  58:fltk-1.3.4-1/png/pngwrite.c ****               (keep == PNG_HANDLE_CHUNK_AS_DEFAULT &&
 264              		.loc 1 58 47 view .LVU78
 265 0078 85C0     		testl	%eax, %eax
 266 007a 750C     		jne	.L33
  59:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->unknown_default == PNG_HANDLE_CHUNK_ALWAYS)))
 267              		.loc 1 59 52 view .LVU79
 268 007c 83BD0004 		cmpl	$3, 1024(%rbp)
 268      000003
 269 0083 7413     		je	.L21
 270              		.p2align 4,,10
 271 0085 0F1F00   		.p2align 3
 272              	.L33:
 273 0088 498B5500 		movq	0(%r13), %rdx
 274 008c 418B0C24 		movl	(%r12), %ecx
 275 0090 EBAE     		jmp	.L19
 276              		.p2align 4,,10
 277 0092 660F1F44 		.p2align 3
 277      0000
 278              	.L21:
  64:fltk-1.3.4-1/png/pngwrite.c ****                png_warning(png_ptr, "Writing zero-length unknown chunk");
 279              		.loc 1 64 13 is_stmt 1 view .LVU80
  64:fltk-1.3.4-1/png/pngwrite.c ****                png_warning(png_ptr, "Writing zero-length unknown chunk");
 280              		.loc 1 64 19 is_stmt 0 view .LVU81
 281 0098 498B4F10 		movq	16(%r15), %rcx
  64:fltk-1.3.4-1/png/pngwrite.c ****                png_warning(png_ptr, "Writing zero-length unknown chunk");
 282              		.loc 1 64 16 view .LVU82
 283 009c 4885C9   		testq	%rcx, %rcx
 284 009f 742F     		je	.L34
 285              	.LVL24:
 286              	.L22:
  67:fltk-1.3.4-1/png/pngwrite.c ****          }
 287              		.loc 1 67 13 is_stmt 1 view .LVU83
 288 00a1 498B5708 		movq	8(%r15), %rdx
 289 00a5 4C89FE   		movq	%r15, %rsi
 290 00a8 4889EF   		movq	%rbp, %rdi
 291 00ab E8000000 		call	png_write_chunk@PLT
 291      00
 292              	.LVL25:
 293 00b0 498B5500 		movq	0(%r13), %rdx
 294 00b4 418B0C24 		movl	(%r12), %ecx
 295 00b8 EB86     		jmp	.L19
 296              	.LVL26:
 297 00ba 660F1F44 		.p2align 4,,10
 297      0000
 298              		.p2align 3
 299              	.L16:
  67:fltk-1.3.4-1/png/pngwrite.c ****          }
 300              		.loc 1 67 13 is_stmt 0 view .LVU84
 301              	.LBE104:
 302              	.LBE106:
  71:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_UNKNOWN_CHUNKS */
 303              		.loc 1 71 1 view .LVU85
 304 00c0 4883C408 		addq	$8, %rsp
 305              		.cfi_remember_state
 306              		.cfi_def_cfa_offset 56
 307 00c4 5B       		popq	%rbx
 308              		.cfi_def_cfa_offset 48
 309              	.LVL27:
  71:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_UNKNOWN_CHUNKS */
 310              		.loc 1 71 1 view .LVU86
 311 00c5 5D       		popq	%rbp
 312              		.cfi_def_cfa_offset 40
 313 00c6 415C     		popq	%r12
 314              		.cfi_def_cfa_offset 32
 315 00c8 415D     		popq	%r13
 316              		.cfi_def_cfa_offset 24
 317 00ca 415E     		popq	%r14
 318              		.cfi_def_cfa_offset 16
 319 00cc 415F     		popq	%r15
 320              		.cfi_def_cfa_offset 8
 321 00ce C3       		ret
 322              	.LVL28:
 323 00cf 90       		.p2align 4,,10
 324              		.p2align 3
 325              	.L34:
 326              		.cfi_restore_state
 327              	.LBB107:
 328              	.LBB105:
  65:fltk-1.3.4-1/png/pngwrite.c **** 
 329              		.loc 1 65 16 is_stmt 1 view .LVU87
 330 00d0 4C89F6   		movq	%r14, %rsi
 331 00d3 4889EF   		movq	%rbp, %rdi
 332 00d6 E8000000 		call	png_warning@PLT
 332      00
 333              	.LVL29:
  65:fltk-1.3.4-1/png/pngwrite.c **** 
 334              		.loc 1 65 16 is_stmt 0 view .LVU88
 335 00db 498B4F10 		movq	16(%r15), %rcx
 336 00df EBC0     		jmp	.L22
 337              	.LBE105:
 338              	.LBE107:
 339              		.cfi_endproc
 340              	.LFE85:
 342              		.section	.rodata.png_init_filter_heuristics.str1.8,"aMS",@progbits,1
 343              		.align 8
 344              	.LC1:
 345 0000 556E6B6E 		.string	"Unknown filter heuristic method"
 345      6F776E20 
 345      66696C74 
 345      65722068 
 345      65757269 
 346              		.section	.text.png_init_filter_heuristics,"ax",@progbits
 347              		.p2align 4
 349              	png_init_filter_heuristics:
 350              	.LVL30:
 351              	.LFB59:
1174:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 352              		.loc 1 1174 1 is_stmt 1 view -0
 353              		.cfi_startproc
1175:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
 354              		.loc 1 1175 4 view .LVU90
1176:fltk-1.3.4-1/png/pngwrite.c **** 
 355              		.loc 1 1176 14 is_stmt 0 view .LVU91
 356 0000 31C0     		xorl	%eax, %eax
1175:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
 357              		.loc 1 1175 7 view .LVU92
 358 0002 4885FF   		testq	%rdi, %rdi
 359 0005 7459     		je	.L50
1174:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 360              		.loc 1 1174 1 view .LVU93
 361 0007 4155     		pushq	%r13
 362              		.cfi_def_cfa_offset 16
 363              		.cfi_offset 13, -16
 364 0009 4154     		pushq	%r12
 365              		.cfi_def_cfa_offset 24
 366              		.cfi_offset 12, -24
 367 000b 4189D4   		movl	%edx, %r12d
1179:fltk-1.3.4-1/png/pngwrite.c **** 
 368              		.loc 1 1179 4 is_stmt 1 view .LVU94
1174:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 369              		.loc 1 1174 1 is_stmt 0 view .LVU95
 370 000e 55       		pushq	%rbp
 371              		.cfi_def_cfa_offset 32
 372              		.cfi_offset 6, -32
 373 000f 4889FD   		movq	%rdi, %rbp
 374 0012 53       		pushq	%rbx
 375              		.cfi_def_cfa_offset 40
 376              		.cfi_offset 3, -40
 377 0013 89F3     		movl	%esi, %ebx
 378 0015 4883EC08 		subq	$8, %rsp
 379              		.cfi_def_cfa_offset 48
1179:fltk-1.3.4-1/png/pngwrite.c **** 
 380              		.loc 1 1179 4 view .LVU96
 381 0019 E8000000 		call	png_reset_filter_heuristics
 381      00
 382              	.LVL31:
1185:fltk-1.3.4-1/png/pngwrite.c ****    {
 383              		.loc 1 1185 4 is_stmt 1 view .LVU97
1185:fltk-1.3.4-1/png/pngwrite.c ****    {
 384              		.loc 1 1185 7 is_stmt 0 view .LVU98
 385 001e 83FB02   		cmpl	$2, %ebx
 386 0021 7445     		je	.L53
1240:fltk-1.3.4-1/png/pngwrite.c ****       heuristic_method == PNG_FILTER_HEURISTIC_UNWEIGHTED)
 387              		.loc 1 1240 9 is_stmt 1 view .LVU99
1243:fltk-1.3.4-1/png/pngwrite.c ****    }
 388              		.loc 1 1243 14 is_stmt 0 view .LVU100
 389 0023 B8010000 		movl	$1, %eax
 389      00
1240:fltk-1.3.4-1/png/pngwrite.c ****       heuristic_method == PNG_FILTER_HEURISTIC_UNWEIGHTED)
 390              		.loc 1 1240 12 view .LVU101
 391 0028 83FB01   		cmpl	$1, %ebx
 392 002b 7713     		ja	.L54
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 393              		.loc 1 1250 1 view .LVU102
 394 002d 4883C408 		addq	$8, %rsp
 395              		.cfi_remember_state
 396              		.cfi_def_cfa_offset 40
 397 0031 5B       		popq	%rbx
 398              		.cfi_def_cfa_offset 32
 399              	.LVL32:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 400              		.loc 1 1250 1 view .LVU103
 401 0032 5D       		popq	%rbp
 402              		.cfi_def_cfa_offset 24
 403              	.LVL33:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 404              		.loc 1 1250 1 view .LVU104
 405 0033 415C     		popq	%r12
 406              		.cfi_def_cfa_offset 16
 407              	.LVL34:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 408              		.loc 1 1250 1 view .LVU105
 409 0035 415D     		popq	%r13
 410              		.cfi_def_cfa_offset 8
 411 0037 C3       		ret
 412              	.LVL35:
 413 0038 0F1F8400 		.p2align 4,,10
 413      00000000 
 414              		.p2align 3
 415              	.L54:
 416              		.cfi_restore_state
1247:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
 417              		.loc 1 1247 7 is_stmt 1 view .LVU106
 418 0040 4889EF   		movq	%rbp, %rdi
 419 0043 488D3500 		leaq	.LC1(%rip), %rsi
 419      000000
 420 004a E8000000 		call	png_warning@PLT
 420      00
 421              	.LVL36:
1248:fltk-1.3.4-1/png/pngwrite.c ****    }
 422              		.loc 1 1248 7 view .LVU107
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 423              		.loc 1 1250 1 is_stmt 0 view .LVU108
 424 004f 4883C408 		addq	$8, %rsp
 425              		.cfi_def_cfa_offset 40
1248:fltk-1.3.4-1/png/pngwrite.c ****    }
 426              		.loc 1 1248 14 view .LVU109
 427 0053 31C0     		xorl	%eax, %eax
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 428              		.loc 1 1250 1 view .LVU110
 429 0055 5B       		popq	%rbx
 430              		.cfi_def_cfa_offset 32
 431              	.LVL37:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 432              		.loc 1 1250 1 view .LVU111
 433 0056 5D       		popq	%rbp
 434              		.cfi_def_cfa_offset 24
 435              	.LVL38:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 436              		.loc 1 1250 1 view .LVU112
 437 0057 415C     		popq	%r12
 438              		.cfi_def_cfa_offset 16
 439              	.LVL39:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 440              		.loc 1 1250 1 view .LVU113
 441 0059 415D     		popq	%r13
 442              		.cfi_def_cfa_offset 8
 443 005b C3       		ret
 444              	.LVL40:
 445 005c 0F1F4000 		.p2align 4,,10
 446              		.p2align 3
 447              	.L50:
 448              		.cfi_restore 3
 449              		.cfi_restore 6
 450              		.cfi_restore 12
 451              		.cfi_restore 13
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 452              		.loc 1 1250 1 view .LVU114
 453 0060 C3       		ret
 454              	.LVL41:
 455              		.p2align 4,,10
 456 0061 0F1F8000 		.p2align 3
 456      000000
 457              	.L53:
 458              		.cfi_def_cfa_offset 48
 459              		.cfi_offset 3, -40
 460              		.cfi_offset 6, -32
 461              		.cfi_offset 12, -24
 462              		.cfi_offset 13, -16
 463              	.LBB111:
 464              	.LBI111:
1172:fltk-1.3.4-1/png/pngwrite.c ****    int num_weights)
 465              		.loc 1 1172 1 is_stmt 1 view .LVU115
 466              	.LBB112:
1187:fltk-1.3.4-1/png/pngwrite.c **** 
 467              		.loc 1 1187 7 view .LVU116
1189:fltk-1.3.4-1/png/pngwrite.c ****       {
 468              		.loc 1 1189 7 view .LVU117
1189:fltk-1.3.4-1/png/pngwrite.c ****       {
 469              		.loc 1 1189 10 is_stmt 0 view .LVU118
 470 0068 4585E4   		testl	%r12d, %r12d
 471 006b 7F63     		jg	.L55
 472              	.LVL42:
 473              	.L38:
1219:fltk-1.3.4-1/png/pngwrite.c ****       {
 474              		.loc 1 1219 7 is_stmt 1 view .LVU119
1219:fltk-1.3.4-1/png/pngwrite.c ****       {
 475              		.loc 1 1219 18 is_stmt 0 view .LVU120
 476 006d 488B95B8 		movq	952(%rbp), %rdx
 476      030000
1219:fltk-1.3.4-1/png/pngwrite.c ****       {
 477              		.loc 1 1219 10 view .LVU121
 478 0074 4885D2   		testq	%rdx, %rdx
 479 0077 0F84F300 		je	.L56
 479      0000
 480              	.L42:
1203:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 481              		.loc 1 1203 38 view .LVU122
 482 007d 31C0     		xorl	%eax, %eax
 483              	.L44:
1230:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_costs[i] = PNG_COST_FACTOR;
 484              		.loc 1 1230 10 is_stmt 1 view .LVU123
1231:fltk-1.3.4-1/png/pngwrite.c ****       }
 485              		.loc 1 1231 35 is_stmt 0 view .LVU124
 486 007f B9080000 		movl	$8, %ecx
 486      00
1230:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_costs[i] = PNG_COST_FACTOR;
 487              		.loc 1 1230 39 view .LVU125
 488 0084 BE080000 		movl	$8, %esi
 488      00
1231:fltk-1.3.4-1/png/pngwrite.c ****       }
 489              		.loc 1 1231 35 view .LVU126
 490 0089 66890C02 		movw	%cx, (%rdx,%rax)
1230:fltk-1.3.4-1/png/pngwrite.c ****          png_ptr->filter_costs[i] = PNG_COST_FACTOR;
 491              		.loc 1 1230 39 view .LVU127
 492 008d 488B95C0 		movq	960(%rbp), %rdx
 492      030000
 493 0094 66893402 		movw	%si, (%rdx,%rax)
1228:fltk-1.3.4-1/png/pngwrite.c ****       {
 494              		.loc 1 1228 46 is_stmt 1 view .LVU128
1228:fltk-1.3.4-1/png/pngwrite.c ****       {
 495              		.loc 1 1228 19 view .LVU129
 496 0098 4883C002 		addq	$2, %rax
1228:fltk-1.3.4-1/png/pngwrite.c ****       {
 497              		.loc 1 1228 7 is_stmt 0 view .LVU130
 498 009c 4883F80A 		cmpq	$10, %rax
 499 00a0 740E     		je	.L43
 500 00a2 488B95B8 		movq	952(%rbp), %rdx
 500      030000
 501 00a9 EBD4     		jmp	.L44
 502 00ab 0F1F4400 		.p2align 4,,10
 502      00
 503              		.p2align 3
 504              	.L43:
1235:fltk-1.3.4-1/png/pngwrite.c **** 
 505              		.loc 1 1235 7 is_stmt 1 view .LVU131
1235:fltk-1.3.4-1/png/pngwrite.c **** 
 506              		.loc 1 1235 33 is_stmt 0 view .LVU132
 507 00b0 C6859803 		movb	$2, 920(%rbp)
 507      000002
1238:fltk-1.3.4-1/png/pngwrite.c ****    }
 508              		.loc 1 1238 7 is_stmt 1 view .LVU133
 509              	.LVL43:
1238:fltk-1.3.4-1/png/pngwrite.c ****    }
 510              		.loc 1 1238 7 is_stmt 0 view .LVU134
 511              	.LBE112:
 512              	.LBE111:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 513              		.loc 1 1250 1 view .LVU135
 514 00b7 4883C408 		addq	$8, %rsp
 515              		.cfi_remember_state
 516              		.cfi_def_cfa_offset 40
 517              	.LBB115:
 518              	.LBB113:
1235:fltk-1.3.4-1/png/pngwrite.c **** 
 519              		.loc 1 1235 33 view .LVU136
 520 00bb B8010000 		movl	$1, %eax
 520      00
 521              	.LBE113:
 522              	.LBE115:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 523              		.loc 1 1250 1 view .LVU137
 524 00c0 5B       		popq	%rbx
 525              		.cfi_def_cfa_offset 32
 526 00c1 5D       		popq	%rbp
 527              		.cfi_def_cfa_offset 24
 528              	.LVL44:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 529              		.loc 1 1250 1 view .LVU138
 530 00c2 415C     		popq	%r12
 531              		.cfi_def_cfa_offset 16
 532              	.LVL45:
1250:fltk-1.3.4-1/png/pngwrite.c **** 
 533              		.loc 1 1250 1 view .LVU139
 534 00c4 415D     		popq	%r13
 535              		.cfi_def_cfa_offset 8
 536 00c6 C3       		ret
 537              	.LVL46:
 538 00c7 660F1F84 		.p2align 4,,10
 538      00000000 
 538      00
 539              		.p2align 3
 540              	.L55:
 541              		.cfi_restore_state
 542              	.LBB116:
 543              	.LBB114:
1191:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_byte)) * num_weights));
 544              		.loc 1 1191 10 is_stmt 1 view .LVU140
1192:fltk-1.3.4-1/png/pngwrite.c **** 
 545              		.loc 1 1192 14 is_stmt 0 view .LVU141
 546 00d0 4963F4   		movslq	%r12d, %rsi
1191:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_byte)) * num_weights));
 547              		.loc 1 1191 45 view .LVU142
 548 00d3 4889EF   		movq	%rbp, %rdi
 549 00d6 E8000000 		call	png_malloc@PLT
 549      00
 550              	.LVL47:
 551 00db 418D7424 		leal	-1(%r12), %esi
 551      FF
1191:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_byte)) * num_weights));
 552              		.loc 1 1191 32 view .LVU143
 553 00e0 31D2     		xorl	%edx, %edx
 554 00e2 488985A0 		movq	%rax, 928(%rbp)
 554      030000
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 555              		.loc 1 1195 10 is_stmt 1 view .LVU144
 556              	.LVL48:
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 557              		.loc 1 1195 22 view .LVU145
 558 00e9 488D5E01 		leaq	1(%rsi), %rbx
 559              	.LVL49:
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 560              		.loc 1 1195 22 is_stmt 0 view .LVU146
 561 00ed EB0B     		jmp	.L40
 562              	.LVL50:
 563 00ef 90       		.p2align 4,,10
 564              		.p2align 3
 565              	.L57:
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 566              		.loc 1 1195 22 view .LVU147
 567 00f0 488B85A0 		movq	928(%rbp), %rax
 567      030000
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 568              		.loc 1 1195 10 view .LVU148
 569 00f7 4889CA   		movq	%rcx, %rdx
 570              	.LVL51:
 571              	.L40:
1197:fltk-1.3.4-1/png/pngwrite.c ****          }
 572              		.loc 1 1197 13 is_stmt 1 view .LVU149
1197:fltk-1.3.4-1/png/pngwrite.c ****          }
 573              		.loc 1 1197 38 is_stmt 0 view .LVU150
 574 00fa C60410FF 		movb	$-1, (%rax,%rdx)
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 575              		.loc 1 1195 39 is_stmt 1 view .LVU151
 576              	.LVL52:
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 577              		.loc 1 1195 22 view .LVU152
 578 00fe 488D4A01 		leaq	1(%rdx), %rcx
1195:fltk-1.3.4-1/png/pngwrite.c ****          {
 579              		.loc 1 1195 10 is_stmt 0 view .LVU153
 580 0102 4839F2   		cmpq	%rsi, %rdx
 581 0105 75E9     		jne	.L57
1200:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 582              		.loc 1 1200 10 is_stmt 1 view .LVU154
1201:fltk-1.3.4-1/png/pngwrite.c **** 
 583              		.loc 1 1201 14 is_stmt 0 view .LVU155
 584 0107 478D2C24 		leal	(%r12,%r12), %r13d
1200:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 585              		.loc 1 1200 50 view .LVU156
 586 010b 4889EF   		movq	%rbp, %rdi
 587 010e 4C89EE   		movq	%r13, %rsi
 588 0111 E8000000 		call	png_malloc@PLT
 588      00
 589              	.LVL53:
1203:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 590              		.loc 1 1203 54 view .LVU157
 591 0116 4C89EE   		movq	%r13, %rsi
 592 0119 4889EF   		movq	%rbp, %rdi
1200:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 593              		.loc 1 1200 34 view .LVU158
 594 011c 488985A8 		movq	%rax, 936(%rbp)
 594      030000
1203:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 595              		.loc 1 1203 10 is_stmt 1 view .LVU159
1203:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 596              		.loc 1 1203 54 is_stmt 0 view .LVU160
 597 0123 E8000000 		call	png_malloc@PLT
 597      00
 598              	.LVL54:
 599 0128 488D0C1B 		leaq	(%rbx,%rbx), %rcx
1203:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 600              		.loc 1 1203 38 view .LVU161
 601 012c 488985B0 		movq	%rax, 944(%rbp)
 601      030000
1206:fltk-1.3.4-1/png/pngwrite.c ****          {
 602              		.loc 1 1206 10 is_stmt 1 view .LVU162
 603              	.LVL55:
1206:fltk-1.3.4-1/png/pngwrite.c ****          {
 604              		.loc 1 1206 22 view .LVU163
1203:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * num_weights));
 605              		.loc 1 1203 38 is_stmt 0 view .LVU164
 606 0133 31C0     		xorl	%eax, %eax
 607              	.LVL56:
 608              		.p2align 4,,10
 609 0135 0F1F00   		.p2align 3
 610              	.L41:
1208:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 611              		.loc 1 1208 13 is_stmt 1 view .LVU165
1209:fltk-1.3.4-1/png/pngwrite.c ****          }
 612              		.loc 1 1209 40 is_stmt 0 view .LVU166
 613 0138 488B95A8 		movq	936(%rbp), %rdx
 613      030000
 614 013f BF000100 		movl	$256, %edi
 614      00
1208:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 615              		.loc 1 1208 44 view .LVU167
 616 0144 41B80001 		movl	$256, %r8d
 616      0000
1209:fltk-1.3.4-1/png/pngwrite.c ****          }
 617              		.loc 1 1209 40 view .LVU168
 618 014a 66893C02 		movw	%di, (%rdx,%rax)
1208:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 619              		.loc 1 1208 44 view .LVU169
 620 014e 488B95B0 		movq	944(%rbp), %rdx
 620      030000
 621 0155 66448904 		movw	%r8w, (%rdx,%rax)
 621      02
1206:fltk-1.3.4-1/png/pngwrite.c ****          {
 622              		.loc 1 1206 39 is_stmt 1 view .LVU170
1206:fltk-1.3.4-1/png/pngwrite.c ****          {
 623              		.loc 1 1206 22 view .LVU171
 624 015a 4883C002 		addq	$2, %rax
1206:fltk-1.3.4-1/png/pngwrite.c ****          {
 625              		.loc 1 1206 10 is_stmt 0 view .LVU172
 626 015e 4839C8   		cmpq	%rcx, %rax
 627 0161 75D5     		jne	.L41
1213:fltk-1.3.4-1/png/pngwrite.c ****       }
 628              		.loc 1 1213 10 is_stmt 1 view .LVU173
1213:fltk-1.3.4-1/png/pngwrite.c ****       }
 629              		.loc 1 1213 38 is_stmt 0 view .LVU174
 630 0163 4488A599 		movb	%r12b, 921(%rbp)
 630      030000
 631 016a E9FEFEFF 		jmp	.L38
 631      FF
 632 016f 90       		.p2align 4,,10
 633              		.p2align 3
 634              	.L56:
1221:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
 635              		.loc 1 1221 10 is_stmt 1 view .LVU175
1221:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
 636              		.loc 1 1221 48 is_stmt 0 view .LVU176
 637 0170 BE0A0000 		movl	$10, %esi
 637      00
 638 0175 4889EF   		movq	%rbp, %rdi
 639 0178 E8000000 		call	png_malloc@PLT
 639      00
 640              	.LVL57:
1224:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
 641              		.loc 1 1224 52 view .LVU177
 642 017d BE0A0000 		movl	$10, %esi
 642      00
 643 0182 4889EF   		movq	%rbp, %rdi
1221:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
 644              		.loc 1 1221 32 view .LVU178
 645 0185 488985B8 		movq	%rax, 952(%rbp)
 645      030000
1224:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
 646              		.loc 1 1224 10 is_stmt 1 view .LVU179
1224:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
 647              		.loc 1 1224 52 is_stmt 0 view .LVU180
 648 018c E8000000 		call	png_malloc@PLT
 648      00
 649              	.LVL58:
 650 0191 488B95B8 		movq	952(%rbp), %rdx
 650      030000
1224:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_32)((sizeof (png_uint_16)) * PNG_FILTER_VALUE_LAST));
 651              		.loc 1 1224 36 view .LVU181
 652 0198 488985C0 		movq	%rax, 960(%rbp)
 652      030000
 653 019f E9D9FEFF 		jmp	.L42
 653      FF
 654              	.LBE114:
 655              	.LBE116:
 656              		.cfi_endproc
 657              	.LFE59:
 659              		.section	.text.png_image_set_PLTE.isra.0,"ax",@progbits
 660              		.p2align 4
 662              	png_image_set_PLTE.isra.0:
 663              	.LFB87:
1897:fltk-1.3.4-1/png/pngwrite.c **** 
1898:fltk-1.3.4-1/png/pngwrite.c **** static int
1899:fltk-1.3.4-1/png/pngwrite.c **** png_write_image_8bit(png_voidp argument)
1900:fltk-1.3.4-1/png/pngwrite.c **** {
1901:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
1902:fltk-1.3.4-1/png/pngwrite.c ****       argument);
1903:fltk-1.3.4-1/png/pngwrite.c ****    png_imagep image = display->image;
1904:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
1905:fltk-1.3.4-1/png/pngwrite.c **** 
1906:fltk-1.3.4-1/png/pngwrite.c ****    png_const_uint_16p input_row = png_voidcast(png_const_uint_16p,
1907:fltk-1.3.4-1/png/pngwrite.c ****       display->first_row);
1908:fltk-1.3.4-1/png/pngwrite.c ****    png_bytep output_row = png_voidcast(png_bytep, display->local_row);
1909:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 y = image->height;
1910:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = (image->format & PNG_FORMAT_FLAG_COLOR) != 0 ? 3 : 1;
1911:fltk-1.3.4-1/png/pngwrite.c **** 
1912:fltk-1.3.4-1/png/pngwrite.c ****    if ((image->format & PNG_FORMAT_FLAG_ALPHA) != 0)
1913:fltk-1.3.4-1/png/pngwrite.c ****    {
1914:fltk-1.3.4-1/png/pngwrite.c ****       png_bytep row_end;
1915:fltk-1.3.4-1/png/pngwrite.c ****       int aindex;
1916:fltk-1.3.4-1/png/pngwrite.c **** 
1917:fltk-1.3.4-1/png/pngwrite.c **** #     ifdef PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED
1918:fltk-1.3.4-1/png/pngwrite.c ****          if ((image->format & PNG_FORMAT_FLAG_AFIRST) != 0)
1919:fltk-1.3.4-1/png/pngwrite.c ****          {
1920:fltk-1.3.4-1/png/pngwrite.c ****             aindex = -1;
1921:fltk-1.3.4-1/png/pngwrite.c ****             ++input_row; /* To point to the first component */
1922:fltk-1.3.4-1/png/pngwrite.c ****             ++output_row;
1923:fltk-1.3.4-1/png/pngwrite.c ****          }
1924:fltk-1.3.4-1/png/pngwrite.c **** 
1925:fltk-1.3.4-1/png/pngwrite.c ****          else
1926:fltk-1.3.4-1/png/pngwrite.c **** #     endif
1927:fltk-1.3.4-1/png/pngwrite.c ****          aindex = channels;
1928:fltk-1.3.4-1/png/pngwrite.c **** 
1929:fltk-1.3.4-1/png/pngwrite.c ****       /* Use row_end in place of a loop counter: */
1930:fltk-1.3.4-1/png/pngwrite.c ****       row_end = output_row + image->width * (channels+1);
1931:fltk-1.3.4-1/png/pngwrite.c **** 
1932:fltk-1.3.4-1/png/pngwrite.c ****       while (y-- > 0)
1933:fltk-1.3.4-1/png/pngwrite.c ****       {
1934:fltk-1.3.4-1/png/pngwrite.c ****          png_const_uint_16p in_ptr = input_row;
1935:fltk-1.3.4-1/png/pngwrite.c ****          png_bytep out_ptr = output_row;
1936:fltk-1.3.4-1/png/pngwrite.c **** 
1937:fltk-1.3.4-1/png/pngwrite.c ****          while (out_ptr < row_end)
1938:fltk-1.3.4-1/png/pngwrite.c ****          {
1939:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_16 alpha = in_ptr[aindex];
1940:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
1941:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
1942:fltk-1.3.4-1/png/pngwrite.c ****             int c;
1943:fltk-1.3.4-1/png/pngwrite.c **** 
1944:fltk-1.3.4-1/png/pngwrite.c ****             /* Scale and write the alpha channel. */
1945:fltk-1.3.4-1/png/pngwrite.c ****             out_ptr[aindex] = alphabyte;
1946:fltk-1.3.4-1/png/pngwrite.c **** 
1947:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte > 0 && alphabyte < 255)
1948:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = UNP_RECIPROCAL(alpha);
1949:fltk-1.3.4-1/png/pngwrite.c **** 
1950:fltk-1.3.4-1/png/pngwrite.c ****             c = channels;
1951:fltk-1.3.4-1/png/pngwrite.c ****             do /* always at least one channel */
1952:fltk-1.3.4-1/png/pngwrite.c ****                *out_ptr++ = png_unpremultiply(*in_ptr++, alpha, reciprocal);
1953:fltk-1.3.4-1/png/pngwrite.c ****             while (--c > 0);
1954:fltk-1.3.4-1/png/pngwrite.c **** 
1955:fltk-1.3.4-1/png/pngwrite.c ****             /* Skip to next component (skip the intervening alpha channel) */
1956:fltk-1.3.4-1/png/pngwrite.c ****             ++in_ptr;
1957:fltk-1.3.4-1/png/pngwrite.c ****             ++out_ptr;
1958:fltk-1.3.4-1/png/pngwrite.c ****          } /* while out_ptr < row_end */
1959:fltk-1.3.4-1/png/pngwrite.c **** 
1960:fltk-1.3.4-1/png/pngwrite.c ****          png_write_row(png_ptr, png_voidcast(png_const_bytep,
1961:fltk-1.3.4-1/png/pngwrite.c ****             display->local_row));
1962:fltk-1.3.4-1/png/pngwrite.c ****          input_row += display->row_bytes/(sizeof (png_uint_16));
1963:fltk-1.3.4-1/png/pngwrite.c ****       } /* while y */
1964:fltk-1.3.4-1/png/pngwrite.c ****    }
1965:fltk-1.3.4-1/png/pngwrite.c **** 
1966:fltk-1.3.4-1/png/pngwrite.c ****    else
1967:fltk-1.3.4-1/png/pngwrite.c ****    {
1968:fltk-1.3.4-1/png/pngwrite.c ****       /* No alpha channel, so the row_end really is the end of the row and it
1969:fltk-1.3.4-1/png/pngwrite.c ****        * is sufficient to loop over the components one by one.
1970:fltk-1.3.4-1/png/pngwrite.c ****        */
1971:fltk-1.3.4-1/png/pngwrite.c ****       png_bytep row_end = output_row + image->width * channels;
1972:fltk-1.3.4-1/png/pngwrite.c **** 
1973:fltk-1.3.4-1/png/pngwrite.c ****       while (y-- > 0)
1974:fltk-1.3.4-1/png/pngwrite.c ****       {
1975:fltk-1.3.4-1/png/pngwrite.c ****          png_const_uint_16p in_ptr = input_row;
1976:fltk-1.3.4-1/png/pngwrite.c ****          png_bytep out_ptr = output_row;
1977:fltk-1.3.4-1/png/pngwrite.c **** 
1978:fltk-1.3.4-1/png/pngwrite.c ****          while (out_ptr < row_end)
1979:fltk-1.3.4-1/png/pngwrite.c ****          {
1980:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 component = *in_ptr++;
1981:fltk-1.3.4-1/png/pngwrite.c **** 
1982:fltk-1.3.4-1/png/pngwrite.c ****             component *= 255;
1983:fltk-1.3.4-1/png/pngwrite.c ****             *out_ptr++ = (png_byte)PNG_sRGB_FROM_LINEAR(component);
1984:fltk-1.3.4-1/png/pngwrite.c ****          }
1985:fltk-1.3.4-1/png/pngwrite.c **** 
1986:fltk-1.3.4-1/png/pngwrite.c ****          png_write_row(png_ptr, output_row);
1987:fltk-1.3.4-1/png/pngwrite.c ****          input_row += display->row_bytes/(sizeof (png_uint_16));
1988:fltk-1.3.4-1/png/pngwrite.c ****       }
1989:fltk-1.3.4-1/png/pngwrite.c ****    }
1990:fltk-1.3.4-1/png/pngwrite.c **** 
1991:fltk-1.3.4-1/png/pngwrite.c ****    return 1;
1992:fltk-1.3.4-1/png/pngwrite.c **** }
1993:fltk-1.3.4-1/png/pngwrite.c **** 
1994:fltk-1.3.4-1/png/pngwrite.c **** static void
1995:fltk-1.3.4-1/png/pngwrite.c **** png_image_set_PLTE(png_image_write_control *display)
 664              		.loc 1 1995 1 is_stmt 1 view -0
 665              		.cfi_startproc
 666 0000 4157     		pushq	%r15
 667              		.cfi_def_cfa_offset 16
 668              		.cfi_offset 15, -16
 669              	.LBB117:
 670              	.LBB118:
 671              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 672              		.loc 2 71 10 is_stmt 0 view .LVU183
 673 0002 660F76C0 		pcmpeqd	%xmm0, %xmm0
 674              	.LBE118:
 675              	.LBE117:
 676              		.loc 1 1995 1 view .LVU184
 677 0006 4989FF   		movq	%rdi, %r15
 678              	.LBB123:
 679              	.LBB124:
 680              		.loc 2 71 10 view .LVU185
 681 0009 B9600000 		movl	$96, %ecx
 681      00
 682              	.LBE124:
 683              	.LBE123:
 684              		.loc 1 1995 1 view .LVU186
 685 000e 4156     		pushq	%r14
 686              		.cfi_def_cfa_offset 24
 687              		.cfi_offset 14, -24
 688 0010 4155     		pushq	%r13
 689              		.cfi_def_cfa_offset 32
 690              		.cfi_offset 13, -32
 691 0012 4154     		pushq	%r12
 692              		.cfi_def_cfa_offset 40
 693              		.cfi_offset 12, -40
 694 0014 55       		pushq	%rbp
 695              		.cfi_def_cfa_offset 48
 696              		.cfi_offset 6, -48
 697 0015 4889F5   		movq	%rsi, %rbp
 698 0018 53       		pushq	%rbx
 699              		.cfi_def_cfa_offset 56
 700              		.cfi_offset 3, -56
 701 0019 4881EC98 		subq	$1176, %rsp
 701      040000
 702              		.cfi_def_cfa_offset 1232
1996:fltk-1.3.4-1/png/pngwrite.c **** {
1997:fltk-1.3.4-1/png/pngwrite.c ****    const png_imagep image = display->image;
1998:fltk-1.3.4-1/png/pngwrite.c ****    const void *cmap = display->colormap;
1999:fltk-1.3.4-1/png/pngwrite.c ****    const int entries = image->colormap_entries > 256 ? 256 :
2000:fltk-1.3.4-1/png/pngwrite.c ****       (int)image->colormap_entries;
2001:fltk-1.3.4-1/png/pngwrite.c **** 
2002:fltk-1.3.4-1/png/pngwrite.c ****    /* NOTE: the caller must check for cmap != NULL and entries != 0 */
2003:fltk-1.3.4-1/png/pngwrite.c ****    const png_uint_32 format = image->format;
 703              		.loc 1 2003 22 view .LVU187
 704 0020 8B5F14   		movl	20(%rdi), %ebx
1999:fltk-1.3.4-1/png/pngwrite.c ****       (int)image->colormap_entries;
 705              		.loc 1 1999 29 view .LVU188
 706 0023 448B4F1C 		movl	28(%rdi), %r9d
1995:fltk-1.3.4-1/png/pngwrite.c **** {
 707              		.loc 1 1995 1 view .LVU189
 708 0027 48897C24 		movq	%rdi, 40(%rsp)
 708      28
 709              	.LBB130:
 710              	.LBB125:
 711              		.loc 2 71 10 view .LVU190
 712 002c 4C8DAC24 		leaq	128(%rsp), %r13
 712      80000000 
 713              	.LBE125:
 714              	.LBE130:
2004:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = PNG_IMAGE_SAMPLE_CHANNELS(format);
2005:fltk-1.3.4-1/png/pngwrite.c **** 
2006:fltk-1.3.4-1/png/pngwrite.c **** #  if defined(PNG_FORMAT_BGR_SUPPORTED) &&\
2007:fltk-1.3.4-1/png/pngwrite.c ****       defined(PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED)
2008:fltk-1.3.4-1/png/pngwrite.c ****       const int afirst = (format & PNG_FORMAT_FLAG_AFIRST) != 0 &&
 715              		.loc 1 2008 65 view .LVU191
 716 0034 4189DE   		movl	%ebx, %r14d
2004:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = PNG_IMAGE_SAMPLE_CHANNELS(format);
 717              		.loc 1 2004 25 view .LVU192
 718 0037 89DE     		movl	%ebx, %esi
 719              	.LBB131:
 720              	.LBB126:
 721              		.loc 2 71 10 view .LVU193
 722 0039 4C89EF   		movq	%r13, %rdi
 723              	.LBE126:
 724              	.LBE131:
2009:fltk-1.3.4-1/png/pngwrite.c ****          (format & PNG_FORMAT_FLAG_ALPHA) != 0;
2010:fltk-1.3.4-1/png/pngwrite.c **** #  else
2011:fltk-1.3.4-1/png/pngwrite.c **** #     define afirst 0
2012:fltk-1.3.4-1/png/pngwrite.c **** #  endif
2013:fltk-1.3.4-1/png/pngwrite.c **** 
2014:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_FORMAT_BGR_SUPPORTED
2015:fltk-1.3.4-1/png/pngwrite.c ****       const int bgr = (format & PNG_FORMAT_FLAG_BGR) != 0 ? 2 : 0;
 725              		.loc 1 2015 63 view .LVU194
 726 003c 4189D8   		movl	%ebx, %r8d
1995:fltk-1.3.4-1/png/pngwrite.c **** {
 727              		.loc 1 1995 1 view .LVU195
 728 003f 64488B04 		movq	%fs:40, %rax
 728      25280000 
 728      00
 729 0048 48898424 		movq	%rax, 1160(%rsp)
 729      88040000 
 730 0050 31C0     		xorl	%eax, %eax
1997:fltk-1.3.4-1/png/pngwrite.c ****    const void *cmap = display->colormap;
 731              		.loc 1 1997 4 is_stmt 1 view .LVU196
1998:fltk-1.3.4-1/png/pngwrite.c ****    const int entries = image->colormap_entries > 256 ? 256 :
 732              		.loc 1 1998 4 view .LVU197
 733              	.LVL59:
1999:fltk-1.3.4-1/png/pngwrite.c ****       (int)image->colormap_entries;
 734              		.loc 1 1999 4 view .LVU198
1999:fltk-1.3.4-1/png/pngwrite.c ****       (int)image->colormap_entries;
 735              		.loc 1 1999 60 is_stmt 0 view .LVU199
 736 0052 4181F900 		cmpl	$256, %r9d
 736      010000
 737 0059 B8000100 		movl	$256, %eax
 737      00
 738              	.LBB132:
 739              	.LBB127:
 740              		.loc 2 71 10 view .LVU200
 741 005e 4C896C24 		movq	%r13, 64(%rsp)
 741      40
 742              	.LBE127:
 743              	.LBE132:
1999:fltk-1.3.4-1/png/pngwrite.c ****       (int)image->colormap_entries;
 744              		.loc 1 1999 60 view .LVU201
 745 0063 410F46C1 		cmovbe	%r9d, %eax
2008:fltk-1.3.4-1/png/pngwrite.c ****          (format & PNG_FORMAT_FLAG_ALPHA) != 0;
 746              		.loc 1 2008 65 view .LVU202
 747 0067 4183E621 		andl	$33, %r14d
2004:fltk-1.3.4-1/png/pngwrite.c **** 
 748              		.loc 1 2004 25 view .LVU203
 749 006b 83E603   		andl	$3, %esi
 750              	.LBB133:
 751              	.LBB119:
 752              		.loc 2 71 10 view .LVU204
 753 006e 0F298424 		movaps	%xmm0, 896(%rsp)
 753      80030000 
 754              	.LBE119:
 755              	.LBE133:
2008:fltk-1.3.4-1/png/pngwrite.c ****          (format & PNG_FORMAT_FLAG_ALPHA) != 0;
 756              		.loc 1 2008 65 view .LVU205
 757 0076 4183FE21 		cmpl	$33, %r14d
 758 007a 44897424 		movl	%r14d, 52(%rsp)
 758      34
 759 007f 0F94C2   		sete	%dl
1999:fltk-1.3.4-1/png/pngwrite.c ****       (int)image->colormap_entries;
 760              		.loc 1 1999 60 view .LVU206
 761 0082 89442430 		movl	%eax, 48(%rsp)
 762 0086 4189C2   		movl	%eax, %r10d
 763              	.LVL60:
2003:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = PNG_IMAGE_SAMPLE_CHANNELS(format);
 764              		.loc 1 2003 4 is_stmt 1 view .LVU207
2004:fltk-1.3.4-1/png/pngwrite.c **** 
 765              		.loc 1 2004 4 view .LVU208
2008:fltk-1.3.4-1/png/pngwrite.c ****          (format & PNG_FORMAT_FLAG_ALPHA) != 0;
 766              		.loc 1 2008 7 view .LVU209
 767              		.loc 1 2015 7 view .LVU210
 768              	.LBB134:
 769              	.LBB128:
 770              		.loc 2 71 10 is_stmt 0 view .LVU211
 771 0089 31C0     		xorl	%eax, %eax
 772              	.LVL61:
 773              		.loc 2 71 10 view .LVU212
 774 008b F348AB   		rep stosq
 775              	.LBE128:
 776              	.LBE134:
 777              	.LBB135:
 778              	.LBB120:
 779 008e 0F298424 		movaps	%xmm0, 912(%rsp)
 779      90030000 
 780              	.LBE120:
 781              	.LBE135:
 782              		.loc 1 2015 63 view .LVU213
 783 0096 41C1E803 		shrl	$3, %r8d
 784              	.LBB136:
 785              	.LBB121:
 786              		.loc 2 71 10 view .LVU214
 787 009a 0F298424 		movaps	%xmm0, 928(%rsp)
 787      A0030000 
 788              	.LBE121:
 789              	.LBE136:
 790              		.loc 1 2015 17 view .LVU215
 791 00a2 4183E002 		andl	$2, %r8d
 792              	.LVL62:
2016:fltk-1.3.4-1/png/pngwrite.c **** #  else
2017:fltk-1.3.4-1/png/pngwrite.c **** #     define bgr 0
2018:fltk-1.3.4-1/png/pngwrite.c **** #  endif
2019:fltk-1.3.4-1/png/pngwrite.c **** 
2020:fltk-1.3.4-1/png/pngwrite.c ****    int i, num_trans;
 793              		.loc 1 2020 4 is_stmt 1 view .LVU216
2021:fltk-1.3.4-1/png/pngwrite.c ****    png_color palette[256];
 794              		.loc 1 2021 4 view .LVU217
2022:fltk-1.3.4-1/png/pngwrite.c ****    png_byte tRNS[256];
 795              		.loc 1 2022 4 view .LVU218
2023:fltk-1.3.4-1/png/pngwrite.c **** 
2024:fltk-1.3.4-1/png/pngwrite.c ****    memset(tRNS, 255, (sizeof tRNS));
 796              		.loc 1 2024 4 view .LVU219
 797              	.LBB137:
 798              	.LBI117:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 799              		.loc 2 59 1 view .LVU220
 800              	.LBB122:
 801              		.loc 2 71 3 view .LVU221
 802              		.loc 2 71 10 is_stmt 0 view .LVU222
 803 00a6 0F298424 		movaps	%xmm0, 944(%rsp)
 803      B0030000 
 804 00ae 0F298424 		movaps	%xmm0, 960(%rsp)
 804      C0030000 
 805 00b6 0F298424 		movaps	%xmm0, 976(%rsp)
 805      D0030000 
 806 00be 0F298424 		movaps	%xmm0, 992(%rsp)
 806      E0030000 
 807 00c6 0F298424 		movaps	%xmm0, 1008(%rsp)
 807      F0030000 
 808 00ce 0F298424 		movaps	%xmm0, 1024(%rsp)
 808      00040000 
 809 00d6 0F298424 		movaps	%xmm0, 1040(%rsp)
 809      10040000 
 810 00de 0F298424 		movaps	%xmm0, 1056(%rsp)
 810      20040000 
 811 00e6 0F298424 		movaps	%xmm0, 1072(%rsp)
 811      30040000 
 812 00ee 0F298424 		movaps	%xmm0, 1088(%rsp)
 812      40040000 
 813 00f6 0F298424 		movaps	%xmm0, 1104(%rsp)
 813      50040000 
 814 00fe 0F298424 		movaps	%xmm0, 1120(%rsp)
 814      60040000 
 815 0106 0F298424 		movaps	%xmm0, 1136(%rsp)
 815      70040000 
 816              	.LVL63:
 817              		.loc 2 71 10 view .LVU223
 818              	.LBE122:
 819              	.LBE137:
2025:fltk-1.3.4-1/png/pngwrite.c ****    memset(palette, 0, (sizeof palette));
 820              		.loc 1 2025 4 is_stmt 1 view .LVU224
 821              	.LBB138:
 822              	.LBI123:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 823              		.loc 2 59 1 view .LVU225
 824              	.LBB129:
 825              		.loc 2 71 3 view .LVU226
 826              		.loc 2 71 3 is_stmt 0 view .LVU227
 827              	.LBE129:
 828              	.LBE138:
2026:fltk-1.3.4-1/png/pngwrite.c **** 
2027:fltk-1.3.4-1/png/pngwrite.c ****    for (i=num_trans=0; i<entries; ++i)
 829              		.loc 1 2027 4 is_stmt 1 view .LVU228
 830              		.loc 1 2027 24 view .LVU229
 831 010e 498B0F   		movq	(%r15), %rcx
 832 0111 48894C24 		movq	%rcx, 56(%rsp)
 832      38
 833              		.loc 1 2027 4 is_stmt 0 view .LVU230
 834 0116 4585C9   		testl	%r9d, %r9d
 835 0119 0F84A104 		je	.L59
 835      0000
 836 011f 31C9     		xorl	%ecx, %ecx
 837 0121 4183FE21 		cmpl	$33, %r14d
 838 0125 448D5E01 		leal	1(%rsi), %r11d
 839              	.LVL64:
 840              	.LBB139:
2028:fltk-1.3.4-1/png/pngwrite.c ****    {
2029:fltk-1.3.4-1/png/pngwrite.c ****       /* This gets automatically converted to sRGB with reversal of the
2030:fltk-1.3.4-1/png/pngwrite.c ****        * pre-multiplication if the color-map has an alpha channel.
2031:fltk-1.3.4-1/png/pngwrite.c ****        */
2032:fltk-1.3.4-1/png/pngwrite.c ****       if ((format & PNG_FORMAT_FLAG_LINEAR) != 0)
2033:fltk-1.3.4-1/png/pngwrite.c ****       {
2034:fltk-1.3.4-1/png/pngwrite.c ****          png_const_uint_16p entry = png_voidcast(png_const_uint_16p, cmap);
2035:fltk-1.3.4-1/png/pngwrite.c **** 
2036:fltk-1.3.4-1/png/pngwrite.c ****          entry += i * channels;
2037:fltk-1.3.4-1/png/pngwrite.c **** 
2038:fltk-1.3.4-1/png/pngwrite.c ****          if ((channels & 1) != 0) /* no alpha */
2039:fltk-1.3.4-1/png/pngwrite.c ****          {
2040:fltk-1.3.4-1/png/pngwrite.c ****             if (channels >= 3) /* RGB */
2041:fltk-1.3.4-1/png/pngwrite.c ****             {
2042:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].blue = (png_byte)PNG_sRGB_FROM_LINEAR(255 *
2043:fltk-1.3.4-1/png/pngwrite.c ****                   entry[(2 ^ bgr)]);
2044:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].green = (png_byte)PNG_sRGB_FROM_LINEAR(255 *
2045:fltk-1.3.4-1/png/pngwrite.c ****                   entry[1]);
2046:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].red = (png_byte)PNG_sRGB_FROM_LINEAR(255 *
 841              		.loc 1 2046 43 view .LVU231
 842 0129 41B90100 		movl	$1, %r9d
 842      0000
 843 012f 0F95C1   		setne	%cl
 844              	.LBB140:
2047:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
2048:fltk-1.3.4-1/png/pngwrite.c ****             }
2049:fltk-1.3.4-1/png/pngwrite.c **** 
2050:fltk-1.3.4-1/png/pngwrite.c ****             else /* Gray */
2051:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].blue = palette[i].red = palette[i].green =
2052:fltk-1.3.4-1/png/pngwrite.c ****                   (png_byte)PNG_sRGB_FROM_LINEAR(255 * *entry);
2053:fltk-1.3.4-1/png/pngwrite.c ****          }
2054:fltk-1.3.4-1/png/pngwrite.c **** 
2055:fltk-1.3.4-1/png/pngwrite.c ****          else /* alpha */
2056:fltk-1.3.4-1/png/pngwrite.c ****          {
2057:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_16 alpha = entry[afirst ? 0 : channels-1];
 845              		.loc 1 2057 38 view .LVU232
 846 0132 4801F6   		addq	%rsi, %rsi
 847 0135 4183FE21 		cmpl	$33, %r14d
2058:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
2059:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
2060:fltk-1.3.4-1/png/pngwrite.c **** 
2061:fltk-1.3.4-1/png/pngwrite.c ****             /* Calculate a reciprocal, as in the png_write_image_8bit code above
2062:fltk-1.3.4-1/png/pngwrite.c ****              * this is designed to produce a value scaled to 255*65535 when
2063:fltk-1.3.4-1/png/pngwrite.c ****              * divided by 128 (i.e. asr 7).
2064:fltk-1.3.4-1/png/pngwrite.c ****              */
2065:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte > 0 && alphabyte < 255)
2066:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = (((0xffff*0xff)<<7)+(alpha>>1))/alpha;
2067:fltk-1.3.4-1/png/pngwrite.c **** 
2068:fltk-1.3.4-1/png/pngwrite.c ****             tRNS[i] = alphabyte;
2069:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte < 255)
2070:fltk-1.3.4-1/png/pngwrite.c ****                num_trans = i+1;
2071:fltk-1.3.4-1/png/pngwrite.c **** 
2072:fltk-1.3.4-1/png/pngwrite.c ****             if (channels >= 3) /* RGB */
2073:fltk-1.3.4-1/png/pngwrite.c ****             {
2074:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].blue = png_unpremultiply(entry[afirst + (2 ^ bgr)],
2075:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
2076:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].green = png_unpremultiply(entry[afirst + 1], alpha,
2077:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
2078:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].red = png_unpremultiply(entry[afirst + bgr], alpha,
2079:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
2080:fltk-1.3.4-1/png/pngwrite.c ****             }
2081:fltk-1.3.4-1/png/pngwrite.c **** 
2082:fltk-1.3.4-1/png/pngwrite.c ****             else /* gray */
2083:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].blue = palette[i].red = palette[i].green =
2084:fltk-1.3.4-1/png/pngwrite.c ****                   png_unpremultiply(entry[afirst], alpha, reciprocal);
 848              		.loc 1 2084 42 view .LVU233
 849 0139 440FB6F2 		movzbl	%dl, %r14d
 850 013d 488D0C49 		leaq	(%rcx,%rcx,2), %rcx
 851 0141 480F45C6 		cmovne	%rsi, %rax
 852 0145 0FB6D2   		movzbl	%dl, %edx
 853              	.LVL65:
 854              		.loc 1 2084 42 view .LVU234
 855 0148 83E304   		andl	$4, %ebx
 856              	.LVL66:
 857              		.loc 1 2084 42 view .LVU235
 858 014b 48894C24 		movq	%rcx, 112(%rsp)
 858      70
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 859              		.loc 1 2074 70 view .LVU236
 860 0150 4489C1   		movl	%r8d, %ecx
 861              		.loc 1 2084 42 view .LVU237
 862 0153 4B8D3436 		leaq	(%r14,%r14), %rsi
 863 0157 4589DC   		movl	%r11d, %r12d
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 864              		.loc 1 2074 70 view .LVU238
 865 015a 83F102   		xorl	$2, %ecx
2057:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 866              		.loc 1 2057 25 view .LVU239
 867 015d 4829E8   		subq	%rbp, %rax
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 868              		.loc 1 2074 70 view .LVU240
 869 0160 4863F9   		movslq	%ecx, %rdi
2057:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 870              		.loc 1 2057 25 view .LVU241
 871 0163 48894424 		movq	%rax, 32(%rsp)
 871      20
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 872              		.loc 1 2074 65 view .LVU242
 873 0168 8D0C3A   		leal	(%rdx,%rdi), %ecx
2078:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 874              		.loc 1 2078 64 view .LVU243
 875 016b 4401C2   		addl	%r8d, %edx
 876              	.LVL67:
2078:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 877              		.loc 1 2078 64 view .LVU244
 878              	.LBE140:
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 879              		.loc 1 2046 43 view .LVU245
 880 016e 4D63C0   		movslq	%r8d, %r8
 881              	.LBB161:
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 882              		.loc 1 2074 57 view .LVU246
 883 0171 4C8D3C09 		leaq	(%rcx,%rcx), %r15
 884              	.LVL68:
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 885              		.loc 1 2074 57 view .LVU247
 886              	.LBE161:
 887              	.LBE139:
 888              	.LBB168:
2085:fltk-1.3.4-1/png/pngwrite.c ****          }
2086:fltk-1.3.4-1/png/pngwrite.c ****       }
2087:fltk-1.3.4-1/png/pngwrite.c **** 
2088:fltk-1.3.4-1/png/pngwrite.c ****       else /* Color-map has sRGB values */
2089:fltk-1.3.4-1/png/pngwrite.c ****       {
2090:fltk-1.3.4-1/png/pngwrite.c ****          png_const_bytep entry = png_voidcast(png_const_bytep, cmap);
2091:fltk-1.3.4-1/png/pngwrite.c **** 
2092:fltk-1.3.4-1/png/pngwrite.c ****          entry += i * channels;
2093:fltk-1.3.4-1/png/pngwrite.c **** 
2094:fltk-1.3.4-1/png/pngwrite.c ****          switch (channels)
2095:fltk-1.3.4-1/png/pngwrite.c ****          {
2096:fltk-1.3.4-1/png/pngwrite.c ****             case 4:
2097:fltk-1.3.4-1/png/pngwrite.c ****                tRNS[i] = entry[afirst ? 0 : 3];
2098:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
2099:fltk-1.3.4-1/png/pngwrite.c ****                   num_trans = i+1;
2100:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
2101:fltk-1.3.4-1/png/pngwrite.c ****             case 3:
2102:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].blue = entry[afirst + (2 ^ bgr)];
 889              		.loc 1 2102 39 view .LVU248
 890 0175 48894C24 		movq	%rcx, 16(%rsp)
 890      10
 891              	.LBE168:
 892              	.LBB169:
2038:fltk-1.3.4-1/png/pngwrite.c ****          {
 893              		.loc 1 2038 24 view .LVU249
 894 017a 4489D9   		movl	%r11d, %ecx
 895              	.LBB162:
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 896              		.loc 1 2074 57 view .LVU250
 897 017d 4C897C24 		movq	%r15, 88(%rsp)
 897      58
2076:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 898              		.loc 1 2076 58 view .LVU251
 899 0182 4C8D7E02 		leaq	2(%rsi), %r15
 900              	.LBE162:
2038:fltk-1.3.4-1/png/pngwrite.c ****          {
 901              		.loc 1 2038 24 view .LVU252
 902 0186 83E101   		andl	$1, %ecx
 903              	.LBB163:
2084:fltk-1.3.4-1/png/pngwrite.c ****          }
 904              		.loc 1 2084 42 view .LVU253
 905 0189 4829EE   		subq	%rbp, %rsi
2076:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 906              		.loc 1 2076 58 view .LVU254
 907 018c 4C897C24 		movq	%r15, 96(%rsp)
 907      60
2078:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 908              		.loc 1 2078 56 view .LVU255
 909 0191 4C8D3C12 		leaq	(%rdx,%rdx), %r15
 910 0195 4C897C24 		movq	%r15, 104(%rsp)
 910      68
 911              	.LBE163:
2042:fltk-1.3.4-1/png/pngwrite.c ****                   entry[(2 ^ bgr)]);
 912              		.loc 1 2042 44 view .LVU256
 913 019a 4C8D3C3F 		leaq	(%rdi,%rdi), %r15
 914 019e 418D7AFF 		leal	-1(%r10), %edi
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 915              		.loc 1 2046 43 view .LVU257
 916 01a2 4989EA   		movq	%rbp, %r10
 917              	.LVL69:
2042:fltk-1.3.4-1/png/pngwrite.c ****                   entry[(2 ^ bgr)]);
 918              		.loc 1 2042 44 view .LVU258
 919 01a5 4C897C24 		movq	%r15, 72(%rsp)
 919      48
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 920              		.loc 1 2046 43 view .LVU259
 921 01aa 4F8D3C00 		leaq	(%r8,%r8), %r15
 922 01ae 4D89E8   		movq	%r13, %r8
 923              	.LVL70:
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 924              		.loc 1 2046 43 view .LVU260
 925              	.LBE169:
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 926              		.loc 1 2027 20 view .LVU261
 927 01b1 4531ED   		xorl	%r13d, %r13d
 928              	.LBB170:
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 929              		.loc 1 2046 43 view .LVU262
 930 01b4 4C897C24 		movq	%r15, 80(%rsp)
 930      50
 931 01b9 4C8D7F02 		leaq	2(%rdi), %r15
 932              	.LBE170:
 933              	.LBB171:
2097:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 934              		.loc 1 2097 24 view .LVU263
 935 01bd 488DBC24 		leaq	895(%rsp), %rdi
 935      7F030000 
2103:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].green = entry[afirst + 1];
2104:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].red = entry[afirst + bgr];
 936              		.loc 1 2104 38 view .LVU264
 937 01c5 48895424 		movq	%rdx, 24(%rsp)
 937      18
2097:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 938              		.loc 1 2097 24 view .LVU265
 939 01ca 48893C24 		movq	%rdi, (%rsp)
 940              	.LBE171:
 941              	.LBB172:
2038:fltk-1.3.4-1/png/pngwrite.c ****          {
 942              		.loc 1 2038 24 view .LVU266
 943 01ce 894C2408 		movl	%ecx, 8(%rsp)
 944              	.LBB164:
2084:fltk-1.3.4-1/png/pngwrite.c ****          }
 945              		.loc 1 2084 42 view .LVU267
 946 01d2 48897424 		movq	%rsi, 120(%rsp)
 946      78
 947 01d7 E9DE0000 		jmp	.L76
 947      00
 948              	.LVL71:
 949 01dc 0F1F4000 		.p2align 4,,10
 950              		.p2align 3
 951              	.L109:
2084:fltk-1.3.4-1/png/pngwrite.c ****          }
 952              		.loc 1 2084 42 view .LVU268
 953              	.LBE164:
2034:fltk-1.3.4-1/png/pngwrite.c **** 
 954              		.loc 1 2034 10 is_stmt 1 view .LVU269
2036:fltk-1.3.4-1/png/pngwrite.c **** 
 955              		.loc 1 2036 10 view .LVU270
2038:fltk-1.3.4-1/png/pngwrite.c ****          {
 956              		.loc 1 2038 10 view .LVU271
2038:fltk-1.3.4-1/png/pngwrite.c ****          {
 957              		.loc 1 2038 13 is_stmt 0 view .LVU272
 958 01e0 8B442408 		movl	8(%rsp), %eax
 959 01e4 85C0     		testl	%eax, %eax
 960 01e6 0F847401 		je	.L61
 960      0000
2040:fltk-1.3.4-1/png/pngwrite.c ****             {
 961              		.loc 1 2040 13 is_stmt 1 view .LVU273
2040:fltk-1.3.4-1/png/pngwrite.c ****             {
 962              		.loc 1 2040 16 is_stmt 0 view .LVU274
 963 01ec 4183FB02 		cmpl	$2, %r11d
 964 01f0 0F8E0A03 		jle	.L62
 964      0000
2042:fltk-1.3.4-1/png/pngwrite.c ****                   entry[(2 ^ bgr)]);
 965              		.loc 1 2042 16 is_stmt 1 view .LVU275
2042:fltk-1.3.4-1/png/pngwrite.c ****                   entry[(2 ^ bgr)]);
 966              		.loc 1 2042 44 is_stmt 0 view .LVU276
 967 01f6 488B4424 		movq	72(%rsp), %rax
 967      48
 968 01fb 488D3500 		leaq	png_sRGB_delta(%rip), %rsi
 968      000000
 969 0202 488D3D00 		leaq	png_sRGB_base(%rip), %rdi
 969      000000
 970              	.LVL72:
2042:fltk-1.3.4-1/png/pngwrite.c ****                   entry[(2 ^ bgr)]);
 971              		.loc 1 2042 44 view .LVU277
 972 0209 4829E8   		subq	%rbp, %rax
 973 020c 420FB714 		movzwl	(%rax,%r10,2), %edx
 973      50
 974 0211 89D0     		movl	%edx, %eax
 975 0213 C1E008   		sall	$8, %eax
 976 0216 29D0     		subl	%edx, %eax
 977 0218 89C2     		movl	%eax, %edx
 978 021a 25FF7F00 		andl	$32767, %eax
 978      00
 979 021f C1FA0F   		sarl	$15, %edx
 980 0222 4863D2   		movslq	%edx, %rdx
 981 0225 0FB60C16 		movzbl	(%rsi,%rdx), %ecx
 982 0229 0FB71457 		movzwl	(%rdi,%rdx,2), %edx
 983 022d 0FAFC1   		imull	%ecx, %eax
 984 0230 C1F80C   		sarl	$12, %eax
 985 0233 01D0     		addl	%edx, %eax
2042:fltk-1.3.4-1/png/pngwrite.c ****                   entry[(2 ^ bgr)]);
 986              		.loc 1 2042 34 view .LVU278
 987 0235 0FB6C4   		movzbl	%ah, %eax
 988 0238 41884002 		movb	%al, 2(%r8)
2044:fltk-1.3.4-1/png/pngwrite.c ****                   entry[1]);
 989              		.loc 1 2044 16 is_stmt 1 view .LVU279
2044:fltk-1.3.4-1/png/pngwrite.c ****                   entry[1]);
 990              		.loc 1 2044 45 is_stmt 0 view .LVU280
 991 023c 4889E8   		movq	%rbp, %rax
 992 023f 48F7D8   		negq	%rax
 993 0242 420FB754 		movzwl	2(%rax,%r10,2), %edx
 993      5002
 994 0248 89D0     		movl	%edx, %eax
 995 024a C1E008   		sall	$8, %eax
 996 024d 29D0     		subl	%edx, %eax
 997 024f 89C2     		movl	%eax, %edx
 998 0251 25FF7F00 		andl	$32767, %eax
 998      00
 999 0256 C1FA0F   		sarl	$15, %edx
 1000 0259 4863D2   		movslq	%edx, %rdx
 1001 025c 0FB60C16 		movzbl	(%rsi,%rdx), %ecx
 1002 0260 0FB71457 		movzwl	(%rdi,%rdx,2), %edx
 1003 0264 0FAFC1   		imull	%ecx, %eax
 1004 0267 C1F80C   		sarl	$12, %eax
 1005 026a 01D0     		addl	%edx, %eax
2044:fltk-1.3.4-1/png/pngwrite.c ****                   entry[1]);
 1006              		.loc 1 2044 35 view .LVU281
 1007 026c 0FB6C4   		movzbl	%ah, %eax
 1008 026f 41884001 		movb	%al, 1(%r8)
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 1009              		.loc 1 2046 16 is_stmt 1 view .LVU282
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 1010              		.loc 1 2046 43 is_stmt 0 view .LVU283
 1011 0273 488B4424 		movq	80(%rsp), %rax
 1011      50
 1012 0278 4829E8   		subq	%rbp, %rax
 1013 027b 420FB714 		movzwl	(%rax,%r10,2), %edx
 1013      50
 1014 0280 89D0     		movl	%edx, %eax
 1015 0282 C1E008   		sall	$8, %eax
 1016 0285 29D0     		subl	%edx, %eax
 1017 0287 89C2     		movl	%eax, %edx
 1018 0289 25FF7F00 		andl	$32767, %eax
 1018      00
 1019 028e C1FA0F   		sarl	$15, %edx
 1020 0291 4863D2   		movslq	%edx, %rdx
 1021 0294 0FB60C16 		movzbl	(%rsi,%rdx), %ecx
 1022 0298 0FB71457 		movzwl	(%rdi,%rdx,2), %edx
 1023 029c 0FAFC1   		imull	%ecx, %eax
 1024 029f C1F80C   		sarl	$12, %eax
 1025 02a2 01D0     		addl	%edx, %eax
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 1026              		.loc 1 2046 33 view .LVU284
 1027 02a4 0FB6C4   		movzbl	%ah, %eax
 1028 02a7 418800   		movb	%al, (%r8)
 1029              	.L63:
2046:fltk-1.3.4-1/png/pngwrite.c ****                   entry[bgr]);
 1030              		.loc 1 2046 33 view .LVU285
 1031              	.LBE172:
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 1032              		.loc 1 2027 35 is_stmt 1 view .LVU286
 1033              	.LVL73:
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 1034              		.loc 1 2027 24 view .LVU287
 1035 02aa 4983C101 		addq	$1, %r9
 1036              	.LVL74:
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 1037              		.loc 1 2027 24 is_stmt 0 view .LVU288
 1038 02ae 4983C003 		addq	$3, %r8
 1039 02b2 4D01E2   		addq	%r12, %r10
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 1040              		.loc 1 2027 4 view .LVU289
 1041 02b5 4D39CF   		cmpq	%r9, %r15
 1042 02b8 744A     		je	.L108
 1043              	.LVL75:
 1044              	.L76:
2032:fltk-1.3.4-1/png/pngwrite.c ****       {
 1045              		.loc 1 2032 7 is_stmt 1 view .LVU290
 1046 02ba 4489CF   		movl	%r9d, %edi
2032:fltk-1.3.4-1/png/pngwrite.c ****       {
 1047              		.loc 1 2032 10 is_stmt 0 view .LVU291
 1048 02bd 85DB     		testl	%ebx, %ebx
 1049 02bf 0F851BFF 		jne	.L109
 1049      FFFF
 1050              	.LBB173:
2090:fltk-1.3.4-1/png/pngwrite.c **** 
 1051              		.loc 1 2090 10 is_stmt 1 view .LVU292
 1052              	.LVL76:
2092:fltk-1.3.4-1/png/pngwrite.c **** 
 1053              		.loc 1 2092 10 view .LVU293
2094:fltk-1.3.4-1/png/pngwrite.c ****          {
 1054              		.loc 1 2094 10 view .LVU294
 1055 02c5 4183FB03 		cmpl	$3, %r11d
 1056 02c9 0F849101 		je	.L72
 1056      0000
 1057 02cf 4183FB04 		cmpl	$4, %r11d
 1058 02d3 0F846F01 		je	.L73
 1058      0000
 1059 02d9 4183FB02 		cmpl	$2, %r11d
 1060 02dd 0F846D02 		je	.L110
 1060      0000
 1061              	.LVL77:
 1062              	.L75:
2105:fltk-1.3.4-1/png/pngwrite.c ****                break;
2106:fltk-1.3.4-1/png/pngwrite.c **** 
2107:fltk-1.3.4-1/png/pngwrite.c ****             case 2:
2108:fltk-1.3.4-1/png/pngwrite.c ****                tRNS[i] = entry[1 ^ afirst];
2109:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
2110:fltk-1.3.4-1/png/pngwrite.c ****                   num_trans = i+1;
2111:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
2112:fltk-1.3.4-1/png/pngwrite.c ****             case 1:
2113:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].blue = palette[i].red = palette[i].green =
 1063              		.loc 1 2113 16 view .LVU295
2114:fltk-1.3.4-1/png/pngwrite.c ****                   entry[afirst];
 1064              		.loc 1 2114 24 is_stmt 0 view .LVU296
 1065 02e3 430FB604 		movzbl	(%r10,%r14), %eax
 1065      32
 1066              	.LVL78:
 1067              	.L107:
 1068              		.loc 1 2114 24 view .LVU297
 1069 02e8 4983C101 		addq	$1, %r9
 1070              	.LVL79:
2113:fltk-1.3.4-1/png/pngwrite.c ****                   entry[afirst];
 1071              		.loc 1 2113 68 view .LVU298
 1072 02ec 41884001 		movb	%al, 1(%r8)
 1073 02f0 4D01E2   		addq	%r12, %r10
 1074 02f3 4983C003 		addq	$3, %r8
2113:fltk-1.3.4-1/png/pngwrite.c ****                   entry[afirst];
 1075              		.loc 1 2113 49 view .LVU299
 1076 02f7 418840FD 		movb	%al, -3(%r8)
2113:fltk-1.3.4-1/png/pngwrite.c ****                   entry[afirst];
 1077              		.loc 1 2113 32 view .LVU300
 1078 02fb 418840FF 		movb	%al, -1(%r8)
2115:fltk-1.3.4-1/png/pngwrite.c ****                break;
 1079              		.loc 1 2115 16 is_stmt 1 view .LVU301
 1080              		.loc 1 2115 16 is_stmt 0 view .LVU302
 1081              	.LBE173:
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 1082              		.loc 1 2027 35 is_stmt 1 view .LVU303
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 1083              		.loc 1 2027 24 view .LVU304
2027:fltk-1.3.4-1/png/pngwrite.c ****    {
 1084              		.loc 1 2027 4 is_stmt 0 view .LVU305
 1085 02ff 4D39CF   		cmpq	%r9, %r15
 1086 0302 75B6     		jne	.L76
 1087              	.L108:
2116:fltk-1.3.4-1/png/pngwrite.c **** 
2117:fltk-1.3.4-1/png/pngwrite.c ****             default:
2118:fltk-1.3.4-1/png/pngwrite.c ****                break;
2119:fltk-1.3.4-1/png/pngwrite.c ****          }
2120:fltk-1.3.4-1/png/pngwrite.c ****       }
2121:fltk-1.3.4-1/png/pngwrite.c ****    }
2122:fltk-1.3.4-1/png/pngwrite.c **** 
2123:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef afirst
2124:fltk-1.3.4-1/png/pngwrite.c **** #     undef afirst
2125:fltk-1.3.4-1/png/pngwrite.c **** #  endif
2126:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef bgr
2127:fltk-1.3.4-1/png/pngwrite.c **** #     undef bgr
2128:fltk-1.3.4-1/png/pngwrite.c **** #  endif
2129:fltk-1.3.4-1/png/pngwrite.c **** 
2130:fltk-1.3.4-1/png/pngwrite.c ****    png_set_PLTE(image->opaque->png_ptr, image->opaque->info_ptr, palette,
 1088              		.loc 1 2130 4 is_stmt 1 view .LVU306
 1089 0304 488B4424 		movq	56(%rsp), %rax
 1089      38
 1090 0309 8B4C2430 		movl	48(%rsp), %ecx
 1091 030d 488B5424 		movq	64(%rsp), %rdx
 1091      40
 1092 0312 488B7008 		movq	8(%rax), %rsi
 1093 0316 488B38   		movq	(%rax), %rdi
 1094 0319 E8000000 		call	png_set_PLTE@PLT
 1094      00
 1095              	.LVL80:
2131:fltk-1.3.4-1/png/pngwrite.c ****       entries);
2132:fltk-1.3.4-1/png/pngwrite.c **** 
2133:fltk-1.3.4-1/png/pngwrite.c ****    if (num_trans > 0)
 1096              		.loc 1 2133 4 view .LVU307
 1097              		.loc 1 2133 7 is_stmt 0 view .LVU308
 1098 031e 4585ED   		testl	%r13d, %r13d
 1099 0321 0F855102 		jne	.L111
 1099      0000
 1100              	.LVL81:
 1101              	.L77:
2134:fltk-1.3.4-1/png/pngwrite.c ****       png_set_tRNS(image->opaque->png_ptr, image->opaque->info_ptr, tRNS,
2135:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
2136:fltk-1.3.4-1/png/pngwrite.c **** 
2137:fltk-1.3.4-1/png/pngwrite.c ****    image->colormap_entries = entries;
 1102              		.loc 1 2137 4 is_stmt 1 view .LVU309
 1103              		.loc 1 2137 28 is_stmt 0 view .LVU310
 1104 0327 488B4424 		movq	40(%rsp), %rax
 1104      28
 1105 032c 8B5C2430 		movl	48(%rsp), %ebx
 1106 0330 89581C   		movl	%ebx, 28(%rax)
2138:fltk-1.3.4-1/png/pngwrite.c **** }
 1107              		.loc 1 2138 1 view .LVU311
 1108 0333 488B8424 		movq	1160(%rsp), %rax
 1108      88040000 
 1109 033b 64483304 		xorq	%fs:40, %rax
 1109      25280000 
 1109      00
 1110 0344 0F859302 		jne	.L112
 1110      0000
 1111 034a 4881C498 		addq	$1176, %rsp
 1111      040000
 1112              		.cfi_remember_state
 1113              		.cfi_def_cfa_offset 56
 1114 0351 5B       		popq	%rbx
 1115              		.cfi_def_cfa_offset 48
 1116 0352 5D       		popq	%rbp
 1117              		.cfi_def_cfa_offset 40
 1118              	.LVL82:
 1119              		.loc 1 2138 1 view .LVU312
 1120 0353 415C     		popq	%r12
 1121              		.cfi_def_cfa_offset 32
 1122 0355 415D     		popq	%r13
 1123              		.cfi_def_cfa_offset 24
 1124 0357 415E     		popq	%r14
 1125              		.cfi_def_cfa_offset 16
 1126 0359 415F     		popq	%r15
 1127              		.cfi_def_cfa_offset 8
 1128 035b C3       		ret
 1129              	.LVL83:
 1130 035c 0F1F4000 		.p2align 4,,10
 1131              		.p2align 3
 1132              	.L61:
 1133              		.cfi_restore_state
 1134              	.LBB174:
 1135              	.LBB165:
2057:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 1136              		.loc 1 2057 13 is_stmt 1 view .LVU313
2057:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 1137              		.loc 1 2057 25 is_stmt 0 view .LVU314
 1138 0360 488B4424 		movq	32(%rsp), %rax
 1138      20
 1139 0365 420FB734 		movzwl	(%rax,%r10,2), %esi
 1139      50
2058:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
 1140              		.loc 1 2058 44 view .LVU315
 1141 036a 89F1     		movl	%esi, %ecx
2057:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 1142              		.loc 1 2057 25 view .LVU316
 1143 036c 89F0     		movl	%esi, %eax
 1144              	.LVL84:
2058:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
 1145              		.loc 1 2058 13 is_stmt 1 view .LVU317
2058:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
 1146              		.loc 1 2058 44 is_stmt 0 view .LVU318
 1147 036e C1E108   		sall	$8, %ecx
 1148 0371 29F1     		subl	%esi, %ecx
 1149 0373 81C17F80 		addl	$32895, %ecx
 1149      0000
 1150 0379 C1E910   		shrl	$16, %ecx
 1151              	.LVL85:
2059:fltk-1.3.4-1/png/pngwrite.c **** 
 1152              		.loc 1 2059 13 is_stmt 1 view .LVU319
2065:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = (((0xffff*0xff)<<7)+(alpha>>1))/alpha;
 1153              		.loc 1 2065 13 view .LVU320
2065:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = (((0xffff*0xff)<<7)+(alpha>>1))/alpha;
 1154              		.loc 1 2065 31 is_stmt 0 view .LVU321
 1155 037c 8D51FF   		leal	-1(%rcx), %edx
2065:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = (((0xffff*0xff)<<7)+(alpha>>1))/alpha;
 1156              		.loc 1 2065 16 view .LVU322
 1157 037f 80FAFD   		cmpb	$-3, %dl
 1158 0382 0F870801 		ja	.L64
 1158      0000
2066:fltk-1.3.4-1/png/pngwrite.c **** 
 1159              		.loc 1 2066 16 is_stmt 1 view .LVU323
2066:fltk-1.3.4-1/png/pngwrite.c **** 
 1160              		.loc 1 2066 55 is_stmt 0 view .LVU324
 1161 0388 66D1E8   		shrw	%ax
 1162 038b 0FB7C0   		movzwl	%ax, %eax
2066:fltk-1.3.4-1/png/pngwrite.c **** 
 1163              		.loc 1 2066 48 view .LVU325
 1164 038e 0580807F 		addl	$2139062400, %eax
 1164      7F
2066:fltk-1.3.4-1/png/pngwrite.c **** 
 1165              		.loc 1 2066 27 view .LVU326
 1166 0393 99       		cltd
 1167 0394 F7FE     		idivl	%esi
 1168 0396 8944240C 		movl	%eax, 12(%rsp)
 1169              	.LVL86:
2068:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte < 255)
 1170              		.loc 1 2068 13 is_stmt 1 view .LVU327
2068:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte < 255)
 1171              		.loc 1 2068 21 is_stmt 0 view .LVU328
 1172 039a 488B0424 		movq	(%rsp), %rax
 1173              	.LVL87:
2068:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte < 255)
 1174              		.loc 1 2068 21 view .LVU329
 1175 039e 42880C08 		movb	%cl, (%rax,%r9)
2069:fltk-1.3.4-1/png/pngwrite.c ****                num_trans = i+1;
 1176              		.loc 1 2069 13 is_stmt 1 view .LVU330
 1177              	.LVL88:
 1178              	.L65:
2070:fltk-1.3.4-1/png/pngwrite.c **** 
 1179              		.loc 1 2070 16 view .LVU331
2070:fltk-1.3.4-1/png/pngwrite.c **** 
 1180              		.loc 1 2070 26 is_stmt 0 view .LVU332
 1181 03a2 4189FD   		movl	%edi, %r13d
 1182              	.LVL89:
 1183              	.L66:
2072:fltk-1.3.4-1/png/pngwrite.c ****             {
 1184              		.loc 1 2072 13 is_stmt 1 view .LVU333
2072:fltk-1.3.4-1/png/pngwrite.c ****             {
 1185              		.loc 1 2072 16 is_stmt 0 view .LVU334
 1186 03a5 4183FB02 		cmpl	$2, %r11d
 1187 03a9 0F8E1101 		jle	.L67
 1187      0000
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 1188              		.loc 1 2074 16 is_stmt 1 view .LVU335
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 1189              		.loc 1 2074 57 is_stmt 0 view .LVU336
 1190 03af 488B4424 		movq	88(%rsp), %rax
 1190      58
 1191              	.LBB141:
 1192              	.LBB142:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1193              		.loc 1 1867 7 view .LVU337
 1194 03b4 BA7F0000 		movl	$127, %edx
 1194      00
 1195              	.LBE142:
 1196              	.LBE141:
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 1197              		.loc 1 2074 57 view .LVU338
 1198 03b9 4829E8   		subq	%rbp, %rax
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 1199              		.loc 1 2074 34 view .LVU339
 1200 03bc 420FB73C 		movzwl	(%rax,%r10,2), %edi
 1200      50
 1201              	.LVL90:
 1202              	.LBB145:
 1203              	.LBI141:
1854:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 reciprocal/*from the above macro*/)
 1204              		.loc 1 1854 1 is_stmt 1 view .LVU340
 1205              	.LBB143:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1206              		.loc 1 1867 4 view .LVU341
1868:fltk-1.3.4-1/png/pngwrite.c **** 
 1207              		.loc 1 1868 14 is_stmt 0 view .LVU342
 1208 03c1 B8FFFFFF 		movl	$-1, %eax
 1208      FF
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1209              		.loc 1 1867 7 view .LVU343
 1210 03c6 83FF7F   		cmpl	$127, %edi
 1211 03c9 0F43D7   		cmovnb	%edi, %edx
 1212 03cc 39D6     		cmpl	%edx, %esi
 1213 03ce 760A     		jbe	.L68
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1214              		.loc 1 1873 9 is_stmt 1 view .LVU344
1895:fltk-1.3.4-1/png/pngwrite.c **** }
 1215              		.loc 1 1895 14 is_stmt 0 view .LVU345
 1216 03d0 31C0     		xorl	%eax, %eax
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1217              		.loc 1 1873 12 view .LVU346
 1218 03d2 85FF     		testl	%edi, %edi
 1219 03d4 0F85D601 		jne	.L113
 1219      0000
 1220              	.LVL91:
 1221              	.L68:
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1222              		.loc 1 1873 12 view .LVU347
 1223              	.LBE143:
 1224              	.LBE145:
2074:fltk-1.3.4-1/png/pngwrite.c ****                   alpha, reciprocal);
 1225              		.loc 1 2074 32 view .LVU348
 1226 03da 41884002 		movb	%al, 2(%r8)
2076:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1227              		.loc 1 2076 16 is_stmt 1 view .LVU349
2076:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1228              		.loc 1 2076 58 is_stmt 0 view .LVU350
 1229 03de 488B4424 		movq	96(%rsp), %rax
 1229      60
 1230              	.LBB146:
 1231              	.LBB147:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1232              		.loc 1 1867 7 view .LVU351
 1233 03e3 BA7F0000 		movl	$127, %edx
 1233      00
 1234              	.LBE147:
 1235              	.LBE146:
2076:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1236              		.loc 1 2076 58 view .LVU352
 1237 03e8 4829E8   		subq	%rbp, %rax
2076:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1238              		.loc 1 2076 35 view .LVU353
 1239 03eb 420FB73C 		movzwl	(%rax,%r10,2), %edi
 1239      50
 1240              	.LVL92:
 1241              	.LBB150:
 1242              	.LBI146:
1854:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 reciprocal/*from the above macro*/)
 1243              		.loc 1 1854 1 is_stmt 1 view .LVU354
 1244              	.LBB148:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1245              		.loc 1 1867 4 view .LVU355
1868:fltk-1.3.4-1/png/pngwrite.c **** 
 1246              		.loc 1 1868 14 is_stmt 0 view .LVU356
 1247 03f0 B8FFFFFF 		movl	$-1, %eax
 1247      FF
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1248              		.loc 1 1867 7 view .LVU357
 1249 03f5 83FF7F   		cmpl	$127, %edi
 1250 03f8 0F43D7   		cmovnb	%edi, %edx
 1251 03fb 39D6     		cmpl	%edx, %esi
 1252 03fd 760A     		jbe	.L69
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1253              		.loc 1 1873 9 is_stmt 1 view .LVU358
1895:fltk-1.3.4-1/png/pngwrite.c **** }
 1254              		.loc 1 1895 14 is_stmt 0 view .LVU359
 1255 03ff 31C0     		xorl	%eax, %eax
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1256              		.loc 1 1873 12 view .LVU360
 1257 0401 85FF     		testl	%edi, %edi
 1258 0403 0F859701 		jne	.L114
 1258      0000
 1259              	.LVL93:
 1260              	.L69:
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1261              		.loc 1 1873 12 view .LVU361
 1262              	.LBE148:
 1263              	.LBE150:
2076:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1264              		.loc 1 2076 33 view .LVU362
 1265 0409 41884001 		movb	%al, 1(%r8)
2078:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1266              		.loc 1 2078 16 is_stmt 1 view .LVU363
2078:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1267              		.loc 1 2078 56 is_stmt 0 view .LVU364
 1268 040d 488B4424 		movq	104(%rsp), %rax
 1268      68
 1269              	.LBB151:
 1270              	.LBB152:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1271              		.loc 1 1867 7 view .LVU365
 1272 0412 BA7F0000 		movl	$127, %edx
 1272      00
 1273              	.LBE152:
 1274              	.LBE151:
2078:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1275              		.loc 1 2078 56 view .LVU366
 1276 0417 4829E8   		subq	%rbp, %rax
2078:fltk-1.3.4-1/png/pngwrite.c ****                   reciprocal);
 1277              		.loc 1 2078 33 view .LVU367
 1278 041a 420FB73C 		movzwl	(%rax,%r10,2), %edi
 1278      50
 1279              	.LVL94:
 1280              	.LBB154:
 1281              	.LBI151:
1854:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 reciprocal/*from the above macro*/)
 1282              		.loc 1 1854 1 is_stmt 1 view .LVU368
 1283              	.LBB153:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1284              		.loc 1 1867 4 view .LVU369
1868:fltk-1.3.4-1/png/pngwrite.c **** 
 1285              		.loc 1 1868 14 is_stmt 0 view .LVU370
 1286 041f B8FFFFFF 		movl	$-1, %eax
 1286      FF
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1287              		.loc 1 1867 7 view .LVU371
 1288 0424 83FF7F   		cmpl	$127, %edi
 1289 0427 0F43D7   		cmovnb	%edi, %edx
 1290 042a 39D6     		cmpl	%edx, %esi
 1291 042c 760F     		jbe	.L106
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1292              		.loc 1 1873 9 is_stmt 1 view .LVU372
1895:fltk-1.3.4-1/png/pngwrite.c **** }
 1293              		.loc 1 1895 14 is_stmt 0 view .LVU373
 1294 042e 31C0     		xorl	%eax, %eax
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1295              		.loc 1 1873 12 view .LVU374
 1296 0430 85FF     		testl	%edi, %edi
 1297 0432 7409     		je	.L106
 1298 0434 8B54240C 		movl	12(%rsp), %edx
 1299 0438 E8000000 		call	png_unpremultiply.part.0
 1299      00
 1300              	.LVL95:
 1301              	.L106:
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1302              		.loc 1 1873 12 view .LVU375
 1303              	.LBE153:
 1304              	.LBE154:
 1305              	.LBE165:
 1306              	.LBE174:
 1307              	.LBB175:
2104:fltk-1.3.4-1/png/pngwrite.c ****                break;
 1308              		.loc 1 2104 31 view .LVU376
 1309 043d 418800   		movb	%al, (%r8)
2105:fltk-1.3.4-1/png/pngwrite.c **** 
 1310              		.loc 1 2105 16 is_stmt 1 view .LVU377
 1311 0440 E965FEFF 		jmp	.L63
 1311      FF
 1312              	.LVL96:
 1313              		.p2align 4,,10
 1314 0445 0F1F00   		.p2align 3
 1315              	.L73:
2097:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1316              		.loc 1 2097 16 view .LVU378
2097:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1317              		.loc 1 2097 31 is_stmt 0 view .LVU379
 1318 0448 488B4424 		movq	112(%rsp), %rax
 1318      70
2097:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1319              		.loc 1 2097 24 view .LVU380
 1320 044d 488B0C24 		movq	(%rsp), %rcx
2097:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1321              		.loc 1 2097 31 view .LVU381
 1322 0451 410FB604 		movzbl	(%r10,%rax), %eax
 1322      02
2099:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
 1323              		.loc 1 2099 29 view .LVU382
 1324 0456 3CFF     		cmpb	$-1, %al
2097:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1325              		.loc 1 2097 24 view .LVU383
 1326 0458 42880409 		movb	%al, (%rcx,%r9)
2098:fltk-1.3.4-1/png/pngwrite.c ****                   num_trans = i+1;
 1327              		.loc 1 2098 16 is_stmt 1 view .LVU384
2099:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
 1328              		.loc 1 2099 29 is_stmt 0 view .LVU385
 1329 045c 450F45E9 		cmovne	%r9d, %r13d
 1330              	.LVL97:
 1331              	.L72:
2102:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].green = entry[afirst + 1];
 1332              		.loc 1 2102 16 is_stmt 1 view .LVU386
2102:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].green = entry[afirst + 1];
 1333              		.loc 1 2102 39 is_stmt 0 view .LVU387
 1334 0460 488B4424 		movq	16(%rsp), %rax
 1334      10
 1335 0465 410FB604 		movzbl	(%r10,%rax), %eax
 1335      02
2102:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].green = entry[afirst + 1];
 1336              		.loc 1 2102 32 view .LVU388
 1337 046a 41884002 		movb	%al, 2(%r8)
2103:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].red = entry[afirst + bgr];
 1338              		.loc 1 2103 16 is_stmt 1 view .LVU389
2103:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].red = entry[afirst + bgr];
 1339              		.loc 1 2103 40 is_stmt 0 view .LVU390
 1340 046e 430FB644 		movzbl	1(%r10,%r14), %eax
 1340      3201
2103:fltk-1.3.4-1/png/pngwrite.c ****                palette[i].red = entry[afirst + bgr];
 1341              		.loc 1 2103 33 view .LVU391
 1342 0474 41884001 		movb	%al, 1(%r8)
2104:fltk-1.3.4-1/png/pngwrite.c ****                break;
 1343              		.loc 1 2104 16 is_stmt 1 view .LVU392
2104:fltk-1.3.4-1/png/pngwrite.c ****                break;
 1344              		.loc 1 2104 38 is_stmt 0 view .LVU393
 1345 0478 488B4424 		movq	24(%rsp), %rax
 1345      18
 1346 047d 410FB604 		movzbl	(%r10,%rax), %eax
 1346      02
2104:fltk-1.3.4-1/png/pngwrite.c ****                break;
 1347              		.loc 1 2104 31 view .LVU394
 1348 0482 418800   		movb	%al, (%r8)
2105:fltk-1.3.4-1/png/pngwrite.c **** 
 1349              		.loc 1 2105 16 is_stmt 1 view .LVU395
 1350 0485 E920FEFF 		jmp	.L63
 1350      FF
 1351              	.LVL98:
 1352 048a 660F1F44 		.p2align 4,,10
 1352      0000
 1353              		.p2align 3
 1354              	.L64:
2105:fltk-1.3.4-1/png/pngwrite.c **** 
 1355              		.loc 1 2105 16 is_stmt 0 view .LVU396
 1356              	.LBE175:
 1357              	.LBB176:
 1358              	.LBB166:
2068:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte < 255)
 1359              		.loc 1 2068 13 is_stmt 1 view .LVU397
2068:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte < 255)
 1360              		.loc 1 2068 21 is_stmt 0 view .LVU398
 1361 0490 488B0424 		movq	(%rsp), %rax
2059:fltk-1.3.4-1/png/pngwrite.c **** 
 1362              		.loc 1 2059 25 view .LVU399
 1363 0494 C744240C 		movl	$0, 12(%rsp)
 1363      00000000 
2068:fltk-1.3.4-1/png/pngwrite.c ****             if (alphabyte < 255)
 1364              		.loc 1 2068 21 view .LVU400
 1365 049c 42880C08 		movb	%cl, (%rax,%r9)
2069:fltk-1.3.4-1/png/pngwrite.c ****                num_trans = i+1;
 1366              		.loc 1 2069 13 is_stmt 1 view .LVU401
2069:fltk-1.3.4-1/png/pngwrite.c ****                num_trans = i+1;
 1367              		.loc 1 2069 16 is_stmt 0 view .LVU402
 1368 04a0 81F9FF00 		cmpl	$255, %ecx
 1368      0000
 1369 04a6 0F84F9FE 		je	.L66
 1369      FFFF
2059:fltk-1.3.4-1/png/pngwrite.c **** 
 1370              		.loc 1 2059 25 view .LVU403
 1371 04ac 8B442408 		movl	8(%rsp), %eax
 1372 04b0 8944240C 		movl	%eax, 12(%rsp)
 1373 04b4 E9E9FEFF 		jmp	.L65
 1373      FF
 1374              	.LVL99:
 1375 04b9 0F1F8000 		.p2align 4,,10
 1375      000000
 1376              		.p2align 3
 1377              	.L67:
2083:fltk-1.3.4-1/png/pngwrite.c ****                   png_unpremultiply(entry[afirst], alpha, reciprocal);
 1378              		.loc 1 2083 16 is_stmt 1 view .LVU404
2084:fltk-1.3.4-1/png/pngwrite.c ****          }
 1379              		.loc 1 2084 19 is_stmt 0 view .LVU405
 1380 04c0 488B4424 		movq	120(%rsp), %rax
 1380      78
 1381              	.LBB155:
 1382              	.LBB156:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1383              		.loc 1 1867 7 view .LVU406
 1384 04c5 BA7F0000 		movl	$127, %edx
 1384      00
 1385              	.LBE156:
 1386              	.LBE155:
2084:fltk-1.3.4-1/png/pngwrite.c ****          }
 1387              		.loc 1 2084 19 view .LVU407
 1388 04ca 420FB73C 		movzwl	(%rax,%r10,2), %edi
 1388      50
 1389              	.LVL100:
 1390              	.LBB158:
 1391              	.LBI155:
1854:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 reciprocal/*from the above macro*/)
 1392              		.loc 1 1854 1 is_stmt 1 view .LVU408
 1393              	.LBB157:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1394              		.loc 1 1867 4 view .LVU409
1868:fltk-1.3.4-1/png/pngwrite.c **** 
 1395              		.loc 1 1868 14 is_stmt 0 view .LVU410
 1396 04cf B8FFFFFF 		movl	$-1, %eax
 1396      FF
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 1397              		.loc 1 1867 7 view .LVU411
 1398 04d4 83FF7F   		cmpl	$127, %edi
 1399 04d7 0F43D7   		cmovnb	%edi, %edx
 1400 04da 39D6     		cmpl	%edx, %esi
 1401 04dc 0F8606FE 		jbe	.L107
 1401      FFFF
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1402              		.loc 1 1873 9 is_stmt 1 view .LVU412
1895:fltk-1.3.4-1/png/pngwrite.c **** }
 1403              		.loc 1 1895 14 is_stmt 0 view .LVU413
 1404 04e2 31C0     		xorl	%eax, %eax
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1405              		.loc 1 1873 12 view .LVU414
 1406 04e4 85FF     		testl	%edi, %edi
 1407 04e6 0F84FCFD 		je	.L107
 1407      FFFF
 1408 04ec 8B54240C 		movl	12(%rsp), %edx
 1409 04f0 E8000000 		call	png_unpremultiply.part.0
 1409      00
 1410              	.LVL101:
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1411              		.loc 1 1873 12 view .LVU415
 1412 04f5 E9EEFDFF 		jmp	.L107
 1412      FF
 1413              	.LVL102:
 1414 04fa 660F1F44 		.p2align 4,,10
 1414      0000
 1415              		.p2align 3
 1416              	.L62:
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 1417              		.loc 1 1873 12 view .LVU416
 1418              	.LBE157:
 1419              	.LBE158:
 1420              	.LBE166:
2051:fltk-1.3.4-1/png/pngwrite.c ****                   (png_byte)PNG_sRGB_FROM_LINEAR(255 * *entry);
 1421              		.loc 1 2051 16 is_stmt 1 view .LVU417
2052:fltk-1.3.4-1/png/pngwrite.c ****          }
 1422              		.loc 1 2052 29 is_stmt 0 view .LVU418
 1423 0500 4889E8   		movq	%rbp, %rax
 1424 0503 488D0D00 		leaq	png_sRGB_delta(%rip), %rcx
 1424      000000
 1425 050a 488D3500 		leaq	png_sRGB_base(%rip), %rsi
 1425      000000
 1426 0511 48F7D8   		negq	%rax
 1427 0514 420FB714 		movzwl	(%rax,%r10,2), %edx
 1427      50
 1428 0519 89D0     		movl	%edx, %eax
 1429 051b C1E008   		sall	$8, %eax
 1430 051e 29D0     		subl	%edx, %eax
 1431 0520 89C2     		movl	%eax, %edx
 1432 0522 25FF7F00 		andl	$32767, %eax
 1432      00
 1433 0527 C1FA0F   		sarl	$15, %edx
 1434 052a 4863D2   		movslq	%edx, %rdx
 1435 052d 0FB60C11 		movzbl	(%rcx,%rdx), %ecx
 1436 0531 0FB71456 		movzwl	(%rsi,%rdx,2), %edx
 1437 0535 0FAFC1   		imull	%ecx, %eax
 1438 0538 C1F80C   		sarl	$12, %eax
 1439 053b 01D0     		addl	%edx, %eax
 1440 053d C1F808   		sarl	$8, %eax
2051:fltk-1.3.4-1/png/pngwrite.c ****                   (png_byte)PNG_sRGB_FROM_LINEAR(255 * *entry);
 1441              		.loc 1 2051 68 view .LVU419
 1442 0540 41884001 		movb	%al, 1(%r8)
2051:fltk-1.3.4-1/png/pngwrite.c ****                   (png_byte)PNG_sRGB_FROM_LINEAR(255 * *entry);
 1443              		.loc 1 2051 49 view .LVU420
 1444 0544 418800   		movb	%al, (%r8)
2051:fltk-1.3.4-1/png/pngwrite.c ****                   (png_byte)PNG_sRGB_FROM_LINEAR(255 * *entry);
 1445              		.loc 1 2051 32 view .LVU421
 1446 0547 41884002 		movb	%al, 2(%r8)
 1447 054b E95AFDFF 		jmp	.L63
 1447      FF
 1448              	.LVL103:
 1449              		.p2align 4,,10
 1450              		.p2align 3
 1451              	.L110:
2051:fltk-1.3.4-1/png/pngwrite.c ****                   (png_byte)PNG_sRGB_FROM_LINEAR(255 * *entry);
 1452              		.loc 1 2051 32 view .LVU422
 1453              	.LBE176:
 1454              	.LBB177:
2108:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1455              		.loc 1 2108 16 is_stmt 1 view .LVU423
2108:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1456              		.loc 1 2108 34 is_stmt 0 view .LVU424
 1457 0550 31C0     		xorl	%eax, %eax
 1458 0552 837C2434 		cmpl	$33, 52(%rsp)
 1458      21
2108:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1459              		.loc 1 2108 24 view .LVU425
 1460 0557 488B3424 		movq	(%rsp), %rsi
2108:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1461              		.loc 1 2108 34 view .LVU426
 1462 055b 0F95C0   		setne	%al
2108:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1463              		.loc 1 2108 31 view .LVU427
 1464 055e 410FB604 		movzbl	(%r10,%rax), %eax
 1464      02
2110:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
 1465              		.loc 1 2110 29 view .LVU428
 1466 0563 3CFF     		cmpb	$-1, %al
2108:fltk-1.3.4-1/png/pngwrite.c ****                if (tRNS[i] < 255)
 1467              		.loc 1 2108 24 view .LVU429
 1468 0565 4288040E 		movb	%al, (%rsi,%r9)
2109:fltk-1.3.4-1/png/pngwrite.c ****                   num_trans = i+1;
 1469              		.loc 1 2109 16 is_stmt 1 view .LVU430
2110:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
 1470              		.loc 1 2110 29 is_stmt 0 view .LVU431
 1471 0569 450F45E9 		cmovne	%r9d, %r13d
 1472              	.LVL104:
2110:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
 1473              		.loc 1 2110 29 view .LVU432
 1474 056d E971FDFF 		jmp	.L75
 1474      FF
 1475              	.LVL105:
 1476              		.p2align 4,,10
 1477 0572 660F1F44 		.p2align 3
 1477      0000
 1478              	.L111:
2110:fltk-1.3.4-1/png/pngwrite.c ****                /* FALL THROUGH */
 1479              		.loc 1 2110 29 view .LVU433
 1480              	.LBE177:
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1481              		.loc 1 2134 7 is_stmt 1 view .LVU434
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1482              		.loc 1 2134 49 is_stmt 0 view .LVU435
 1483 0578 488B4424 		movq	40(%rsp), %rax
 1483      28
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1484              		.loc 1 2134 7 view .LVU436
 1485 057d 488D9424 		leaq	896(%rsp), %rdx
 1485      80030000 
 1486 0585 4531C0   		xorl	%r8d, %r8d
 1487 0588 4489E9   		movl	%r13d, %ecx
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1488              		.loc 1 2134 49 view .LVU437
 1489 058b 488B00   		movq	(%rax), %rax
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1490              		.loc 1 2134 7 view .LVU438
 1491 058e 488B7008 		movq	8(%rax), %rsi
 1492 0592 488B38   		movq	(%rax), %rdi
 1493 0595 E8000000 		call	png_set_tRNS@PLT
 1493      00
 1494              	.LVL106:
 1495 059a E988FDFF 		jmp	.L77
 1495      FF
 1496              	.LVL107:
 1497 059f 90       		.p2align 4,,10
 1498              		.p2align 3
 1499              	.L114:
 1500              	.LBB178:
 1501              	.LBB167:
 1502              	.LBB159:
 1503              	.LBB149:
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1504              		.loc 1 2134 7 view .LVU439
 1505 05a0 8B54240C 		movl	12(%rsp), %edx
 1506 05a4 E8000000 		call	png_unpremultiply.part.0
 1506      00
 1507              	.LVL108:
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1508              		.loc 1 2134 7 view .LVU440
 1509 05a9 E95BFEFF 		jmp	.L69
 1509      FF
 1510              	.LVL109:
 1511 05ae 6690     		.p2align 4,,10
 1512              		.p2align 3
 1513              	.L113:
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1514              		.loc 1 2134 7 view .LVU441
 1515              	.LBE149:
 1516              	.LBE159:
 1517              	.LBB160:
 1518              	.LBB144:
 1519 05b0 8B54240C 		movl	12(%rsp), %edx
 1520 05b4 E8000000 		call	png_unpremultiply.part.0
 1520      00
 1521              	.LVL110:
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1522              		.loc 1 2134 7 view .LVU442
 1523 05b9 E91CFEFF 		jmp	.L68
 1523      FF
 1524              	.LVL111:
 1525 05be 6690     		.p2align 4,,10
 1526              		.p2align 3
 1527              	.L59:
2134:fltk-1.3.4-1/png/pngwrite.c ****          num_trans, NULL);
 1528              		.loc 1 2134 7 view .LVU443
 1529              	.LBE144:
 1530              	.LBE160:
 1531              	.LBE167:
 1532              	.LBE178:
2130:fltk-1.3.4-1/png/pngwrite.c ****       entries);
 1533              		.loc 1 2130 4 is_stmt 1 view .LVU444
 1534 05c0 488B4424 		movq	56(%rsp), %rax
 1534      38
 1535 05c5 488B5424 		movq	64(%rsp), %rdx
 1535      40
 1536              	.LVL112:
2130:fltk-1.3.4-1/png/pngwrite.c ****       entries);
 1537              		.loc 1 2130 4 is_stmt 0 view .LVU445
 1538 05ca 31C9     		xorl	%ecx, %ecx
 1539 05cc 488B7008 		movq	8(%rax), %rsi
 1540              	.LVL113:
2130:fltk-1.3.4-1/png/pngwrite.c ****       entries);
 1541              		.loc 1 2130 4 view .LVU446
 1542 05d0 488B38   		movq	(%rax), %rdi
 1543 05d3 E8000000 		call	png_set_PLTE@PLT
 1543      00
 1544              	.LVL114:
2133:fltk-1.3.4-1/png/pngwrite.c ****       png_set_tRNS(image->opaque->png_ptr, image->opaque->info_ptr, tRNS,
 1545              		.loc 1 2133 4 is_stmt 1 view .LVU447
 1546 05d8 E94AFDFF 		jmp	.L77
 1546      FF
 1547              	.LVL115:
 1548              	.L112:
 1549              		.loc 1 2138 1 is_stmt 0 view .LVU448
 1550 05dd E8000000 		call	__stack_chk_fail@PLT
 1550      00
 1551              	.LVL116:
 1552              		.cfi_endproc
 1553              	.LFE87:
 1555              		.section	.rodata.png_write_info_before_PLTE.str1.8,"aMS",@progbits,1
 1556              		.align 8
 1557              	.LC2:
 1558 0000 4D4E4720 		.string	"MNG features are not allowed in a PNG datastream"
 1558      66656174 
 1558      75726573 
 1558      20617265 
 1558      206E6F74 
 1559 0031 00000000 		.align 8
 1559      000000
 1560              	.LC3:
 1561 0038 70726F66 		.string	"profile matches sRGB but writing iCCP instead"
 1561      696C6520 
 1561      6D617463 
 1561      68657320 
 1561      73524742 
 1562              		.section	.text.png_write_info_before_PLTE,"ax",@progbits
 1563              		.p2align 4
 1564              		.globl	png_write_info_before_PLTE
 1566              	png_write_info_before_PLTE:
 1567              	.LVL117:
 1568              	.LFB42:
  85:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_info_before_PLTE");
 1569              		.loc 1 85 1 is_stmt 1 view -0
 1570              		.cfi_startproc
  85:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_info_before_PLTE");
 1571              		.loc 1 85 1 is_stmt 0 view .LVU450
 1572 0000 F30F1EFA 		endbr64
  86:fltk-1.3.4-1/png/pngwrite.c **** 
 1573              		.loc 1 86 4 is_stmt 1 view .LVU451
  88:fltk-1.3.4-1/png/pngwrite.c ****       return;
 1574              		.loc 1 88 4 view .LVU452
  88:fltk-1.3.4-1/png/pngwrite.c ****       return;
 1575              		.loc 1 88 7 is_stmt 0 view .LVU453
 1576 0004 4885FF   		testq	%rdi, %rdi
 1577 0007 0F844301 		je	.L154
 1577      0000
  85:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_info_before_PLTE");
 1578              		.loc 1 85 1 view .LVU454
 1579 000d 55       		pushq	%rbp
 1580              		.cfi_def_cfa_offset 16
 1581              		.cfi_offset 6, -16
 1582 000e 53       		pushq	%rbx
 1583              		.cfi_def_cfa_offset 24
 1584              		.cfi_offset 3, -24
 1585 000f 4889F3   		movq	%rsi, %rbx
 1586 0012 4883EC08 		subq	$8, %rsp
 1587              		.cfi_def_cfa_offset 32
  88:fltk-1.3.4-1/png/pngwrite.c ****       return;
 1588              		.loc 1 88 7 view .LVU455
 1589 0016 4885F6   		testq	%rsi, %rsi
 1590 0019 740C     		je	.L115
 1591 001b 4889FD   		movq	%rdi, %rbp
  91:fltk-1.3.4-1/png/pngwrite.c ****    {
 1592              		.loc 1 91 4 is_stmt 1 view .LVU456
  91:fltk-1.3.4-1/png/pngwrite.c ****    {
 1593              		.loc 1 91 7 is_stmt 0 view .LVU457
 1594 001e F6872D01 		testb	$4, 301(%rdi)
 1594      000004
 1595 0025 7409     		je	.L157
 1596              	.L115:
 188:fltk-1.3.4-1/png/pngwrite.c **** 
 1597              		.loc 1 188 1 view .LVU458
 1598 0027 4883C408 		addq	$8, %rsp
 1599              		.cfi_remember_state
 1600              		.cfi_def_cfa_offset 24
 1601 002b 5B       		popq	%rbx
 1602              		.cfi_def_cfa_offset 16
 1603 002c 5D       		popq	%rbp
 1604              		.cfi_def_cfa_offset 8
 1605 002d C3       		ret
 1606              	.LVL118:
 1607 002e 6690     		.p2align 4,,10
 1608              		.p2align 3
 1609              	.L157:
 1610              		.cfi_restore_state
 1611              	.LBB184:
 1612              	.LBI184:
  84:fltk-1.3.4-1/png/pngwrite.c **** {
 1613              		.loc 1 84 1 is_stmt 1 view .LVU459
 1614              	.LBB185:
  94:fltk-1.3.4-1/png/pngwrite.c **** 
 1615              		.loc 1 94 4 view .LVU460
 1616 0030 E8000000 		call	png_write_sig@PLT
 1616      00
 1617              	.LVL119:
  97:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->mng_features_permitted != 0)
 1618              		.loc 1 97 4 view .LVU461
  97:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->mng_features_permitted != 0)
 1619              		.loc 1 97 7 is_stmt 0 view .LVU462
 1620 0035 F6852D01 		testb	$16, 301(%rbp)
 1620      000010
 1621 003c 740E     		je	.L117
  97:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->mng_features_permitted != 0)
 1622              		.loc 1 97 54 view .LVU463
 1623 003e 8BB51804 		movl	1048(%rbp), %esi
 1623      0000
 1624 0044 85F6     		testl	%esi, %esi
 1625 0046 0F851C01 		jne	.L158
 1625      0000
 1626              	.L117:
 106:fltk-1.3.4-1/png/pngwrite.c ****        info_ptr->bit_depth, info_ptr->color_type, info_ptr->compression_type,
 1627              		.loc 1 106 4 is_stmt 1 view .LVU464
 1628 004c 0FB64328 		movzbl	40(%rbx), %eax
 1629 0050 0FB64B24 		movzbl	36(%rbx), %ecx
 1630 0054 4889EF   		movq	%rbp, %rdi
 1631 0057 8B5304   		movl	4(%rbx), %edx
 1632 005a 50       		pushq	%rax
 1633              		.cfi_def_cfa_offset 40
 1634 005b 0FB64327 		movzbl	39(%rbx), %eax
 1635 005f 50       		pushq	%rax
 1636              		.cfi_def_cfa_offset 48
 1637 0060 440FB64B 		movzbl	38(%rbx), %r9d
 1637      26
 1638 0065 440FB643 		movzbl	37(%rbx), %r8d
 1638      25
 1639 006a 8B33     		movl	(%rbx), %esi
 1640 006c E8000000 		call	png_write_IHDR@PLT
 1640      00
 1641              	.LVL120:
 132:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_gAMA) != 0 &&
 1642              		.loc 1 132 7 view .LVU465
 132:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_gAMA) != 0 &&
 1643              		.loc 1 132 32 is_stmt 0 view .LVU466
 1644 0071 0FB7437E 		movzwl	126(%rbx), %eax
 132:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_gAMA) != 0 &&
 1645              		.loc 1 132 10 view .LVU467
 1646 0075 5A       		popq	%rdx
 1647              		.cfi_def_cfa_offset 40
 1648 0076 59       		popq	%rcx
 1649              		.cfi_def_cfa_offset 32
 1650 0077 6685C0   		testw	%ax, %ax
 1651 007a 786C     		js	.L118
 1652 007c 8B5308   		movl	8(%rbx), %edx
 132:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_gAMA) != 0 &&
 1653              		.loc 1 132 70 view .LVU468
 1654 007f A808     		testb	$8, %al
 1655 0081 7409     		je	.L119
 133:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_gAMA) != 0)
 1656              		.loc 1 133 72 view .LVU469
 1657 0083 F6C201   		testb	$1, %dl
 1658 0086 0F850401 		jne	.L159
 1658      0000
 1659              	.L119:
 1660 008c 89D0     		movl	%edx, %eax
 1661 008e 25000800 		andl	$2048, %eax
 1661      00
 144:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_iCCP) != 0)
 1662              		.loc 1 144 70 view .LVU470
 1663 0093 F6C610   		testb	$16, %dh
 1664 0096 0F848C00 		je	.L120
 1664      0000
 148:fltk-1.3.4-1/png/pngwrite.c ****                png_app_warning(png_ptr,
 1665              		.loc 1 148 13 is_stmt 1 view .LVU471
 148:fltk-1.3.4-1/png/pngwrite.c ****                png_app_warning(png_ptr,
 1666              		.loc 1 148 16 is_stmt 0 view .LVU472
 1667 009c 85C0     		testl	%eax, %eax
 1668 009e 0F850C01 		jne	.L160
 1668      0000
 1669              	.L121:
 153:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->iccp_profile);
 1670              		.loc 1 153 10 is_stmt 1 view .LVU473
 1671 00a4 488B9388 		movq	136(%rbx), %rdx
 1671      000000
 1672 00ab 488BB380 		movq	128(%rbx), %rsi
 1672      000000
 1673 00b2 4889EF   		movq	%rbp, %rdi
 1674 00b5 E8000000 		call	png_write_iCCP@PLT
 1674      00
 1675              	.LVL121:
 1676              	.L122:
 169:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sBIT(png_ptr, &(info_ptr->sig_bit), info_ptr->color_type);
 1677              		.loc 1 169 4 view .LVU474
 169:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sBIT(png_ptr, &(info_ptr->sig_bit), info_ptr->color_type);
 1678              		.loc 1 169 7 is_stmt 0 view .LVU475
 1679 00ba F6430802 		testb	$2, 8(%rbx)
 1680 00be 7575     		jne	.L129
 1681              	.L124:
 175:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0 &&
 1682              		.loc 1 175 7 is_stmt 1 view .LVU476
 175:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0 &&
 1683              		.loc 1 175 32 is_stmt 0 view .LVU477
 1684 00c0 0FB7437E 		movzwl	126(%rbx), %eax
 175:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0 &&
 1685              		.loc 1 175 10 view .LVU478
 1686 00c4 6685C0   		testw	%ax, %ax
 1687 00c7 7825     		js	.L126
 1688              	.L125:
 175:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0 &&
 1689              		.loc 1 175 70 view .LVU479
 1690 00c9 A810     		testb	$16, %al
 1691 00cb 7421     		je	.L126
 176:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->valid & PNG_INFO_cHRM) != 0)
 1692              		.loc 1 176 71 view .LVU480
 1693 00cd F6430804 		testb	$4, 8(%rbx)
 1694 00d1 741B     		je	.L126
 178:fltk-1.3.4-1/png/pngwrite.c **** #  endif
 1695              		.loc 1 178 10 is_stmt 1 view .LVU481
 1696 00d3 488D7338 		leaq	56(%rbx), %rsi
 1697 00d7 4889EF   		movq	%rbp, %rdi
 1698 00da E8000000 		call	png_write_cHRM_fixed@PLT
 1698      00
 1699              	.LVL122:
 1700 00df EB0D     		jmp	.L126
 1701              		.p2align 4,,10
 1702 00e1 0F1F8000 		.p2align 3
 1702      000000
 1703              	.L118:
 169:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sBIT(png_ptr, &(info_ptr->sig_bit), info_ptr->color_type);
 1704              		.loc 1 169 4 view .LVU482
 169:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sBIT(png_ptr, &(info_ptr->sig_bit), info_ptr->color_type);
 1705              		.loc 1 169 7 is_stmt 0 view .LVU483
 1706 00e8 F6430802 		testb	$2, 8(%rbx)
 1707 00ec 7547     		jne	.L129
 1708              	.L126:
 183:fltk-1.3.4-1/png/pngwrite.c **** #endif
 1709              		.loc 1 183 7 is_stmt 1 view .LVU484
 1710              	.LVL123:
 1711              	.LBB186:
 1712              	.LBI186:
  24:fltk-1.3.4-1/png/pngwrite.c ****    unsigned int where)
 1713              		.loc 1 24 1 view .LVU485
 1714              	.LBB187:
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 1715              		.loc 1 27 4 view .LVU486
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 1716              		.loc 1 27 7 is_stmt 0 view .LVU487
 1717 00ee 8B832801 		movl	296(%rbx), %eax
 1717      0000
 1718 00f4 85C0     		testl	%eax, %eax
 1719 00f6 741B     		je	.L128
 1720 00f8 488D9328 		leaq	296(%rbx), %rdx
 1720      010000
 1721 00ff 488DB320 		leaq	288(%rbx), %rsi
 1721      010000
 1722 0106 B9010000 		movl	$1, %ecx
 1722      00
 1723 010b 4889EF   		movq	%rbp, %rdi
 1724 010e E8000000 		call	write_unknown_chunks.isra.0.part.0
 1724      00
 1725              	.LVL124:
 1726              	.L128:
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 1727              		.loc 1 27 7 view .LVU488
 1728              	.LBE187:
 1729              	.LBE186:
 186:fltk-1.3.4-1/png/pngwrite.c ****    }
 1730              		.loc 1 186 7 is_stmt 1 view .LVU489
 186:fltk-1.3.4-1/png/pngwrite.c ****    }
 1731              		.loc 1 186 21 is_stmt 0 view .LVU490
 1732 0113 818D2C01 		orl	$1024, 300(%rbp)
 1732      00000004 
 1732      0000
 1733              	.LVL125:
 186:fltk-1.3.4-1/png/pngwrite.c ****    }
 1734              		.loc 1 186 21 view .LVU491
 1735              	.LBE185:
 1736              	.LBE184:
 188:fltk-1.3.4-1/png/pngwrite.c **** 
 1737              		.loc 1 188 1 view .LVU492
 1738 011d 4883C408 		addq	$8, %rsp
 1739              		.cfi_remember_state
 1740              		.cfi_def_cfa_offset 24
 1741 0121 5B       		popq	%rbx
 1742              		.cfi_def_cfa_offset 16
 1743              	.LVL126:
 188:fltk-1.3.4-1/png/pngwrite.c **** 
 1744              		.loc 1 188 1 view .LVU493
 1745 0122 5D       		popq	%rbp
 1746              		.cfi_def_cfa_offset 8
 1747              	.LVL127:
 188:fltk-1.3.4-1/png/pngwrite.c **** 
 1748              		.loc 1 188 1 view .LVU494
 1749 0123 C3       		ret
 1750              	.LVL128:
 1751              		.p2align 4,,10
 1752 0124 0F1F4000 		.p2align 3
 1753              	.L120:
 1754              		.cfi_restore_state
 1755              	.LBB189:
 1756              	.LBB188:
 162:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_sRGB) != 0)
 1757              		.loc 1 162 7 is_stmt 1 view .LVU495
 162:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_sRGB) != 0)
 1758              		.loc 1 162 70 is_stmt 0 view .LVU496
 1759 0128 85C0     		testl	%eax, %eax
 1760 012a 0F859800 		jne	.L161
 1760      0000
 169:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sBIT(png_ptr, &(info_ptr->sig_bit), info_ptr->color_type);
 1761              		.loc 1 169 4 is_stmt 1 view .LVU497
 169:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sBIT(png_ptr, &(info_ptr->sig_bit), info_ptr->color_type);
 1762              		.loc 1 169 7 is_stmt 0 view .LVU498
 1763 0130 83E202   		andl	$2, %edx
 1764 0133 7423     		je	.L152
 1765              	.L129:
 170:fltk-1.3.4-1/png/pngwrite.c **** #endif
 1766              		.loc 1 170 7 is_stmt 1 view .LVU499
 1767 0135 0FB65325 		movzbl	37(%rbx), %edx
 1768 0139 488DB3B0 		leaq	176(%rbx), %rsi
 1768      000000
 1769 0140 4889EF   		movq	%rbp, %rdi
 1770 0143 E8000000 		call	png_write_sBIT@PLT
 1770      00
 1771              	.LVL129:
 1772 0148 E973FFFF 		jmp	.L124
 1772      FF
 1773              	.LVL130:
 1774 014d 0F1F00   		.p2align 4,,10
 1775              		.p2align 3
 1776              	.L154:
 1777              		.cfi_def_cfa_offset 8
 1778              		.cfi_restore 3
 1779              		.cfi_restore 6
 170:fltk-1.3.4-1/png/pngwrite.c **** #endif
 1780              		.loc 1 170 7 is_stmt 0 view .LVU500
 1781 0150 C3       		ret
 1782              	.LVL131:
 1783              		.p2align 4,,10
 1784 0151 0F1F8000 		.p2align 3
 1784      000000
 1785              	.L152:
 1786              		.cfi_def_cfa_offset 32
 1787              		.cfi_offset 3, -24
 1788              		.cfi_offset 6, -16
 175:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0 &&
 1789              		.loc 1 175 7 is_stmt 1 view .LVU501
 175:fltk-1.3.4-1/png/pngwrite.c ****          (info_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0 &&
 1790              		.loc 1 175 32 is_stmt 0 view .LVU502
 1791 0158 0FB7437E 		movzwl	126(%rbx), %eax
 1792 015c E968FFFF 		jmp	.L125
 1792      FF
 1793              		.p2align 4,,10
 1794 0161 0F1F8000 		.p2align 3
 1794      000000
 1795              	.L158:
 100:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->mng_features_permitted = 0;
 1796              		.loc 1 100 7 is_stmt 1 view .LVU503
 1797 0168 488D3500 		leaq	.LC2(%rip), %rsi
 1797      000000
 1798 016f 4889EF   		movq	%rbp, %rdi
 1799 0172 E8000000 		call	png_warning@PLT
 1799      00
 1800              	.LVL132:
 101:fltk-1.3.4-1/png/pngwrite.c ****    }
 1801              		.loc 1 101 7 view .LVU504
 101:fltk-1.3.4-1/png/pngwrite.c ****    }
 1802              		.loc 1 101 39 is_stmt 0 view .LVU505
 1803 0177 C7851804 		movl	$0, 1048(%rbp)
 1803      00000000 
 1803      0000
 1804 0181 E9C6FEFF 		jmp	.L117
 1804      FF
 1805 0186 662E0F1F 		.p2align 4,,10
 1805      84000000 
 1805      0000
 1806              		.p2align 3
 1807              	.L159:
 135:fltk-1.3.4-1/png/pngwrite.c **** #  endif
 1808              		.loc 1 135 10 is_stmt 1 view .LVU506
 1809 0190 8B7334   		movl	52(%rbx), %esi
 1810 0193 4889EF   		movq	%rbp, %rdi
 1811 0196 E8000000 		call	png_write_gAMA_fixed@PLT
 1811      00
 1812              	.LVL133:
 144:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_iCCP) != 0)
 1813              		.loc 1 144 7 view .LVU507
 144:fltk-1.3.4-1/png/pngwrite.c ****           (info_ptr->valid & PNG_INFO_iCCP) != 0)
 1814              		.loc 1 144 10 is_stmt 0 view .LVU508
 1815 019b 66837B7E 		cmpw	$0, 126(%rbx)
 1815      00
 1816 01a0 0F8842FF 		js	.L118
 1816      FFFF
 1817 01a6 8B5308   		movl	8(%rbx), %edx
 1818 01a9 E9DEFEFF 		jmp	.L119
 1818      FF
 1819 01ae 6690     		.p2align 4,,10
 1820              		.p2align 3
 1821              	.L160:
 149:fltk-1.3.4-1/png/pngwrite.c ****                   "profile matches sRGB but writing iCCP instead");
 1822              		.loc 1 149 16 is_stmt 1 view .LVU509
 1823 01b0 488D3500 		leaq	.LC3(%rip), %rsi
 1823      000000
 1824 01b7 4889EF   		movq	%rbp, %rdi
 1825 01ba E8000000 		call	png_app_warning@PLT
 1825      00
 1826              	.LVL134:
 1827 01bf E9E0FEFF 		jmp	.L121
 1827      FF
 1828              		.p2align 4,,10
 1829 01c4 0F1F4000 		.p2align 3
 1830              	.L161:
 164:fltk-1.3.4-1/png/pngwrite.c **** #  endif /* WRITE_sRGB */
 1831              		.loc 1 164 10 view .LVU510
 1832 01c8 0FB7737C 		movzwl	124(%rbx), %esi
 1833 01cc 4889EF   		movq	%rbp, %rdi
 1834 01cf E8000000 		call	png_write_sRGB@PLT
 1834      00
 1835              	.LVL135:
 1836 01d4 E9E1FEFF 		jmp	.L122
 1836      FF
 1837              	.LBE188:
 1838              	.LBE189:
 1839              		.cfi_endproc
 1840              	.LFE42:
 1842              		.section	.rodata.png_write_info.str1.8,"aMS",@progbits,1
 1843              		.align 8
 1844              	.LC4:
 1845 0000 56616C69 		.string	"Valid palette required for paletted images"
 1845      64207061 
 1845      6C657474 
 1845      65207265 
 1845      71756972 
 1846              		.section	.text.png_write_info,"ax",@progbits
 1847              		.p2align 4
 1848              		.globl	png_write_info
 1850              	png_write_info:
 1851              	.LVL136:
 1852              	.LFB43:
 192:fltk-1.3.4-1/png/pngwrite.c **** #if defined(PNG_WRITE_TEXT_SUPPORTED) || defined(PNG_WRITE_sPLT_SUPPORTED)
 1853              		.loc 1 192 1 view -0
 1854              		.cfi_startproc
 192:fltk-1.3.4-1/png/pngwrite.c **** #if defined(PNG_WRITE_TEXT_SUPPORTED) || defined(PNG_WRITE_sPLT_SUPPORTED)
 1855              		.loc 1 192 1 is_stmt 0 view .LVU512
 1856 0000 F30F1EFA 		endbr64
 194:fltk-1.3.4-1/png/pngwrite.c **** #endif
 1857              		.loc 1 194 4 is_stmt 1 view .LVU513
 197:fltk-1.3.4-1/png/pngwrite.c **** 
 1858              		.loc 1 197 4 view .LVU514
 199:fltk-1.3.4-1/png/pngwrite.c ****       return;
 1859              		.loc 1 199 4 view .LVU515
 199:fltk-1.3.4-1/png/pngwrite.c ****       return;
 1860              		.loc 1 199 7 is_stmt 0 view .LVU516
 1861 0004 4885FF   		testq	%rdi, %rdi
 1862 0007 0F842B02 		je	.L223
 1862      0000
 192:fltk-1.3.4-1/png/pngwrite.c **** #if defined(PNG_WRITE_TEXT_SUPPORTED) || defined(PNG_WRITE_sPLT_SUPPORTED)
 1863              		.loc 1 192 1 view .LVU517
 1864 000d 4155     		pushq	%r13
 1865              		.cfi_def_cfa_offset 16
 1866              		.cfi_offset 13, -16
 1867 000f 4154     		pushq	%r12
 1868              		.cfi_def_cfa_offset 24
 1869              		.cfi_offset 12, -24
 1870 0011 55       		pushq	%rbp
 1871              		.cfi_def_cfa_offset 32
 1872              		.cfi_offset 6, -32
 1873 0012 53       		pushq	%rbx
 1874              		.cfi_def_cfa_offset 40
 1875              		.cfi_offset 3, -40
 1876 0013 4889F3   		movq	%rsi, %rbx
 1877 0016 4883EC08 		subq	$8, %rsp
 1878              		.cfi_def_cfa_offset 48
 199:fltk-1.3.4-1/png/pngwrite.c ****       return;
 1879              		.loc 1 199 7 view .LVU518
 1880 001a 4885F6   		testq	%rsi, %rsi
 1881 001d 0F843D01 		je	.L162
 1881      0000
 1882 0023 4989FD   		movq	%rdi, %r13
 202:fltk-1.3.4-1/png/pngwrite.c **** 
 1883              		.loc 1 202 4 is_stmt 1 view .LVU519
 1884 0026 E8000000 		call	png_write_info_before_PLTE
 1884      00
 1885              	.LVL137:
 204:fltk-1.3.4-1/png/pngwrite.c ****       png_write_PLTE(png_ptr, info_ptr->palette,
 1886              		.loc 1 204 4 view .LVU520
 204:fltk-1.3.4-1/png/pngwrite.c ****       png_write_PLTE(png_ptr, info_ptr->palette,
 1887              		.loc 1 204 17 is_stmt 0 view .LVU521
 1888 002b 8B4308   		movl	8(%rbx), %eax
 204:fltk-1.3.4-1/png/pngwrite.c ****       png_write_PLTE(png_ptr, info_ptr->palette,
 1889              		.loc 1 204 7 view .LVU522
 1890 002e A808     		testb	$8, %al
 1891 0030 0F853202 		jne	.L226
 1891      0000
 208:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "Valid palette required for paletted images");
 1892              		.loc 1 208 9 is_stmt 1 view .LVU523
 208:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "Valid palette required for paletted images");
 1893              		.loc 1 208 12 is_stmt 0 view .LVU524
 1894 0036 807B2503 		cmpb	$3, 37(%rbx)
 1895 003a 0F844203 		je	.L227
 1895      0000
 1896              	.L167:
 1897              	.LVL138:
 1898              	.LBB196:
 1899              	.LBI196:
 191:fltk-1.3.4-1/png/pngwrite.c **** {
 1900              		.loc 1 191 1 is_stmt 1 view .LVU525
 1901              	.LBB197:
 212:fltk-1.3.4-1/png/pngwrite.c ****    {
 1902              		.loc 1 212 4 view .LVU526
 212:fltk-1.3.4-1/png/pngwrite.c ****    {
 1903              		.loc 1 212 7 is_stmt 0 view .LVU527
 1904 0040 A810     		testb	$16, %al
 1905 0042 7430     		je	.L168
 216:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 1906              		.loc 1 216 7 is_stmt 1 view .LVU528
 1907 0044 440FB643 		movzbl	37(%rbx), %r8d
 1907      25
 1908 0049 0FB74B22 		movzwl	34(%rbx), %ecx
 216:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 1909              		.loc 1 216 10 is_stmt 0 view .LVU529
 1910 004d 41F68536 		testb	$8, 310(%r13)
 1910      01000008 
 1911 0055 0F859D01 		jne	.L228
 1911      0000
 1912              	.L169:
 225:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->num_trans, info_ptr->color_type);
 1913              		.loc 1 225 7 is_stmt 1 view .LVU530
 1914 005b 488BB3B8 		movq	184(%rbx), %rsi
 1914      000000
 1915 0062 488D93C0 		leaq	192(%rbx), %rdx
 1915      000000
 1916 0069 4C89EF   		movq	%r13, %rdi
 1917 006c E8000000 		call	png_write_tRNS@PLT
 1917      00
 1918              	.LVL139:
 1919 0071 8B4308   		movl	8(%rbx), %eax
 1920              	.L168:
 230:fltk-1.3.4-1/png/pngwrite.c ****       png_write_bKGD(png_ptr, &(info_ptr->background), info_ptr->color_type);
 1921              		.loc 1 230 4 view .LVU531
 230:fltk-1.3.4-1/png/pngwrite.c ****       png_write_bKGD(png_ptr, &(info_ptr->background), info_ptr->color_type);
 1922              		.loc 1 230 7 is_stmt 0 view .LVU532
 1923 0074 A820     		testb	$32, %al
 1924 0076 0F85E402 		jne	.L229
 1924      0000
 1925              	.L171:
 235:fltk-1.3.4-1/png/pngwrite.c ****       png_write_hIST(png_ptr, info_ptr->hist, info_ptr->num_palette);
 1926              		.loc 1 235 4 is_stmt 1 view .LVU533
 235:fltk-1.3.4-1/png/pngwrite.c ****       png_write_hIST(png_ptr, info_ptr->hist, info_ptr->num_palette);
 1927              		.loc 1 235 7 is_stmt 0 view .LVU534
 1928 007c A840     		testb	$64, %al
 1929 007e 0F85BC02 		jne	.L230
 1929      0000
 1930              	.L172:
 240:fltk-1.3.4-1/png/pngwrite.c ****       png_write_oFFs(png_ptr, info_ptr->x_offset, info_ptr->y_offset,
 1931              		.loc 1 240 4 is_stmt 1 view .LVU535
 240:fltk-1.3.4-1/png/pngwrite.c ****       png_write_oFFs(png_ptr, info_ptr->x_offset, info_ptr->y_offset,
 1932              		.loc 1 240 7 is_stmt 0 view .LVU536
 1933 0084 F6C401   		testb	$1, %ah
 1934 0087 0F858B02 		jne	.L231
 1934      0000
 1935              	.L173:
 246:fltk-1.3.4-1/png/pngwrite.c ****       png_write_pCAL(png_ptr, info_ptr->pcal_purpose, info_ptr->pcal_X0,
 1936              		.loc 1 246 4 is_stmt 1 view .LVU537
 246:fltk-1.3.4-1/png/pngwrite.c ****       png_write_pCAL(png_ptr, info_ptr->pcal_purpose, info_ptr->pcal_X0,
 1937              		.loc 1 246 7 is_stmt 0 view .LVU538
 1938 008d F6C404   		testb	$4, %ah
 1939 0090 0F853A02 		jne	.L232
 1939      0000
 1940              	.L174:
 253:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sCAL_s(png_ptr, (int)info_ptr->scal_unit,
 1941              		.loc 1 253 4 is_stmt 1 view .LVU539
 253:fltk-1.3.4-1/png/pngwrite.c ****       png_write_sCAL_s(png_ptr, (int)info_ptr->scal_unit,
 1942              		.loc 1 253 7 is_stmt 0 view .LVU540
 1943 0096 F6C440   		testb	$64, %ah
 1944 0099 0F850902 		jne	.L233
 1944      0000
 1945              	.L175:
 259:fltk-1.3.4-1/png/pngwrite.c ****       png_write_pHYs(png_ptr, info_ptr->x_pixels_per_unit,
 1946              		.loc 1 259 4 is_stmt 1 view .LVU541
 259:fltk-1.3.4-1/png/pngwrite.c ****       png_write_pHYs(png_ptr, info_ptr->x_pixels_per_unit,
 1947              		.loc 1 259 7 is_stmt 0 view .LVU542
 1948 009f A880     		testb	$-128, %al
 1949 00a1 0F85D901 		jne	.L234
 1949      0000
 1950              	.L176:
 265:fltk-1.3.4-1/png/pngwrite.c ****    {
 1951              		.loc 1 265 4 is_stmt 1 view .LVU543
 265:fltk-1.3.4-1/png/pngwrite.c ****    {
 1952              		.loc 1 265 7 is_stmt 0 view .LVU544
 1953 00a7 F6C402   		testb	$2, %ah
 1954 00aa 0F859001 		jne	.L235
 1954      0000
 1955              	.L177:
 273:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < (int)info_ptr->splt_palettes_num; i++)
 1956              		.loc 1 273 4 is_stmt 1 view .LVU545
 273:fltk-1.3.4-1/png/pngwrite.c ****       for (i = 0; i < (int)info_ptr->splt_palettes_num; i++)
 1957              		.loc 1 273 7 is_stmt 0 view .LVU546
 1958 00b0 F6C420   		testb	$32, %ah
 1959 00b3 7435     		je	.L182
 1960              	.LVL140:
 274:fltk-1.3.4-1/png/pngwrite.c ****          png_write_sPLT(png_ptr, info_ptr->splt_palettes + i);
 1961              		.loc 1 274 19 is_stmt 1 view .LVU547
 274:fltk-1.3.4-1/png/pngwrite.c ****          png_write_sPLT(png_ptr, info_ptr->splt_palettes + i);
 1962              		.loc 1 274 7 is_stmt 0 view .LVU548
 1963 00b5 8B833801 		movl	312(%rbx), %eax
 1963      0000
 1964 00bb 85C0     		testl	%eax, %eax
 1965 00bd 7E2B     		jle	.L182
 1966 00bf 31ED     		xorl	%ebp, %ebp
 1967              	.LVL141:
 1968              		.p2align 4,,10
 1969 00c1 0F1F8000 		.p2align 3
 1969      000000
 1970              	.L183:
 275:fltk-1.3.4-1/png/pngwrite.c **** #endif /* sPLT */
 1971              		.loc 1 275 10 is_stmt 1 view .LVU549
 275:fltk-1.3.4-1/png/pngwrite.c **** #endif /* sPLT */
 1972              		.loc 1 275 58 is_stmt 0 view .LVU550
 1973 00c8 4889EE   		movq	%rbp, %rsi
 275:fltk-1.3.4-1/png/pngwrite.c **** #endif /* sPLT */
 1974              		.loc 1 275 10 view .LVU551
 1975 00cb 4C89EF   		movq	%r13, %rdi
 1976 00ce 4883C501 		addq	$1, %rbp
 1977              	.LVL142:
 275:fltk-1.3.4-1/png/pngwrite.c **** #endif /* sPLT */
 1978              		.loc 1 275 58 view .LVU552
 1979 00d2 48C1E605 		salq	$5, %rsi
 1980 00d6 4803B330 		addq	304(%rbx), %rsi
 1980      010000
 275:fltk-1.3.4-1/png/pngwrite.c **** #endif /* sPLT */
 1981              		.loc 1 275 10 view .LVU553
 1982 00dd E8000000 		call	png_write_sPLT@PLT
 1982      00
 1983              	.LVL143:
 274:fltk-1.3.4-1/png/pngwrite.c ****          png_write_sPLT(png_ptr, info_ptr->splt_palettes + i);
 1984              		.loc 1 274 57 is_stmt 1 view .LVU554
 274:fltk-1.3.4-1/png/pngwrite.c ****          png_write_sPLT(png_ptr, info_ptr->splt_palettes + i);
 1985              		.loc 1 274 19 view .LVU555
 274:fltk-1.3.4-1/png/pngwrite.c ****          png_write_sPLT(png_ptr, info_ptr->splt_palettes + i);
 1986              		.loc 1 274 7 is_stmt 0 view .LVU556
 1987 00e2 39AB3801 		cmpl	%ebp, 312(%rbx)
 1987      0000
 1988 00e8 7FDE     		jg	.L183
 1989              	.L182:
 1990              	.LVL144:
 280:fltk-1.3.4-1/png/pngwrite.c ****    {
 1991              		.loc 1 280 16 is_stmt 1 view .LVU557
 280:fltk-1.3.4-1/png/pngwrite.c ****    {
 1992              		.loc 1 280 4 is_stmt 0 view .LVU558
 1993 00ea 8B8B9400 		movl	148(%rbx), %ecx
 1993      0000
 1994 00f0 31ED     		xorl	%ebp, %ebp
 1995 00f2 4531E4   		xorl	%r12d, %r12d
 1996 00f5 85C9     		testl	%ecx, %ecx
 1997 00f7 7F23     		jg	.L179
 1998 00f9 E99A0000 		jmp	.L188
 1998      00
 1999              	.LVL145:
 2000 00fe 6690     		.p2align 4,,10
 2001              		.p2align 3
 2002              	.L184:
 306:fltk-1.3.4-1/png/pngwrite.c ****       {
 2003              		.loc 1 306 12 is_stmt 1 view .LVU559
 306:fltk-1.3.4-1/png/pngwrite.c ****       {
 2004              		.loc 1 306 15 is_stmt 0 view .LVU560
 2005 0100 746E     		je	.L236
 319:fltk-1.3.4-1/png/pngwrite.c ****       {
 2006              		.loc 1 319 12 is_stmt 1 view .LVU561
 319:fltk-1.3.4-1/png/pngwrite.c ****       {
 2007              		.loc 1 319 15 is_stmt 0 view .LVU562
 2008 0102 83FEFF   		cmpl	$-1, %esi
 2009 0105 0F84C500 		je	.L237
 2009      0000
 2010              	.L186:
 280:fltk-1.3.4-1/png/pngwrite.c ****    {
 2011              		.loc 1 280 40 is_stmt 1 view .LVU563
 280:fltk-1.3.4-1/png/pngwrite.c ****    {
 2012              		.loc 1 280 41 is_stmt 0 view .LVU564
 2013 010b 4183C401 		addl	$1, %r12d
 2014              	.LVL146:
 280:fltk-1.3.4-1/png/pngwrite.c ****    {
 2015              		.loc 1 280 16 is_stmt 1 view .LVU565
 2016 010f 4883C538 		addq	$56, %rbp
 280:fltk-1.3.4-1/png/pngwrite.c ****    {
 2017              		.loc 1 280 4 is_stmt 0 view .LVU566
 2018 0113 443BA394 		cmpl	148(%rbx), %r12d
 2018      000000
 2019 011a 7D7C     		jge	.L188
 2020              	.LVL147:
 2021              	.L179:
 282:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->text[i].compression);
 2022              		.loc 1 282 7 is_stmt 1 view .LVU567
 285:fltk-1.3.4-1/png/pngwrite.c ****       {
 2023              		.loc 1 285 7 view .LVU568
 285:fltk-1.3.4-1/png/pngwrite.c ****       {
 2024              		.loc 1 285 25 is_stmt 0 view .LVU569
 2025 011c 488B83A0 		movq	160(%rbx), %rax
 2025      000000
 2026 0123 4801E8   		addq	%rbp, %rax
 285:fltk-1.3.4-1/png/pngwrite.c ****       {
 2027              		.loc 1 285 28 view .LVU570
 2028 0126 8B30     		movl	(%rax), %esi
 285:fltk-1.3.4-1/png/pngwrite.c ****       {
 2029              		.loc 1 285 10 view .LVU571
 2030 0128 85F6     		testl	%esi, %esi
 2031 012a 7ED4     		jle	.L184
 289:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].compression,
 2032              		.loc 1 289 10 is_stmt 1 view .LVU572
 2033 012c 488B5008 		movq	8(%rax), %rdx
 2034 0130 488B4828 		movq	40(%rax), %rcx
 2035 0134 4C89EF   		movq	%r13, %rdi
 2036 0137 4C8B4810 		movq	16(%rax), %r9
 2037 013b 4C8B4030 		movq	48(%rax), %r8
 2038 013f E8000000 		call	png_write_iTXt@PLT
 2038      00
 2039              	.LVL148:
 296:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 2040              		.loc 1 296 10 view .LVU573
 296:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 2041              		.loc 1 296 28 is_stmt 0 view .LVU574
 2042 0144 488B93A0 		movq	160(%rbx), %rdx
 2042      000000
 297:fltk-1.3.4-1/png/pngwrite.c ****          else
 2043              		.loc 1 297 43 view .LVU575
 2044 014b 31C0     		xorl	%eax, %eax
 296:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 2045              		.loc 1 296 28 view .LVU576
 2046 014d 4801EA   		addq	%rbp, %rdx
 297:fltk-1.3.4-1/png/pngwrite.c ****          else
 2047              		.loc 1 297 43 view .LVU577
 2048 0150 833AFF   		cmpl	$-1, (%rdx)
 2049 0153 0F95C0   		setne	%al
 2050 0156 83E803   		subl	$3, %eax
 2051 0159 8902     		movl	%eax, (%rdx)
 2052 015b EBAE     		jmp	.L186
 2053              	.LVL149:
 2054 015d 0F1F00   		.p2align 4,,10
 2055              		.p2align 3
 2056              	.L162:
 297:fltk-1.3.4-1/png/pngwrite.c ****          else
 2057              		.loc 1 297 43 view .LVU578
 2058              	.LBE197:
 2059              	.LBE196:
 339:fltk-1.3.4-1/png/pngwrite.c **** 
 2060              		.loc 1 339 1 view .LVU579
 2061 0160 4883C408 		addq	$8, %rsp
 2062              		.cfi_remember_state
 2063              		.cfi_def_cfa_offset 40
 2064 0164 5B       		popq	%rbx
 2065              		.cfi_def_cfa_offset 32
 2066              	.LVL150:
 339:fltk-1.3.4-1/png/pngwrite.c **** 
 2067              		.loc 1 339 1 view .LVU580
 2068 0165 5D       		popq	%rbp
 2069              		.cfi_def_cfa_offset 24
 2070 0166 415C     		popq	%r12
 2071              		.cfi_def_cfa_offset 16
 2072 0168 415D     		popq	%r13
 2073              		.cfi_def_cfa_offset 8
 2074 016a C3       		ret
 2075              	.LVL151:
 2076 016b 0F1F4400 		.p2align 4,,10
 2076      00
 2077              		.p2align 3
 2078              	.L236:
 2079              		.cfi_restore_state
 2080              	.LBB210:
 2081              	.LBB206:
 310:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].text, info_ptr->text[i].compression);
 2082              		.loc 1 310 10 is_stmt 1 view .LVU581
 2083 0170 488B5010 		movq	16(%rax), %rdx
 2084 0174 488B7008 		movq	8(%rax), %rsi
 2085 0178 31C9     		xorl	%ecx, %ecx
 2086 017a 4C89EF   		movq	%r13, %rdi
 2087 017d E8000000 		call	png_write_zTXt@PLT
 2087      00
 2088              	.LVL152:
 313:fltk-1.3.4-1/png/pngwrite.c **** #else
 2089              		.loc 1 313 10 view .LVU582
 313:fltk-1.3.4-1/png/pngwrite.c **** #else
 2090              		.loc 1 313 40 is_stmt 0 view .LVU583
 2091 0182 488B83A0 		movq	160(%rbx), %rax
 2091      000000
 2092 0189 C70428FE 		movl	$-2, (%rax,%rbp)
 2092      FFFFFF
 2093 0190 E976FFFF 		jmp	.L186
 2093      FF
 2094              	.LVL153:
 2095              		.p2align 4,,10
 2096 0195 0F1F00   		.p2align 3
 2097              	.L188:
 337:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2098              		.loc 1 337 4 is_stmt 1 view .LVU584
 2099              	.LBB198:
 2100              	.LBI198:
  24:fltk-1.3.4-1/png/pngwrite.c ****    unsigned int where)
 2101              		.loc 1 24 1 view .LVU585
 2102              	.LBB199:
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 2103              		.loc 1 27 4 view .LVU586
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 2104              		.loc 1 27 7 is_stmt 0 view .LVU587
 2105 0198 8B932801 		movl	296(%rbx), %edx
 2105      0000
 2106 019e 85D2     		testl	%edx, %edx
 2107 01a0 74BE     		je	.L162
 2108              	.LBE199:
 2109              	.LBE198:
 2110              	.LBE206:
 2111              	.LBE210:
 339:fltk-1.3.4-1/png/pngwrite.c **** 
 2112              		.loc 1 339 1 view .LVU588
 2113 01a2 4883C408 		addq	$8, %rsp
 2114              		.cfi_remember_state
 2115              		.cfi_def_cfa_offset 40
 2116              	.LBB211:
 2117              	.LBB207:
 2118              	.LBB202:
 2119              	.LBB200:
 2120 01a6 488D9328 		leaq	296(%rbx), %rdx
 2120      010000
 2121 01ad 4C89EF   		movq	%r13, %rdi
 2122 01b0 B9020000 		movl	$2, %ecx
 2122      00
 2123 01b5 488DB320 		leaq	288(%rbx), %rsi
 2123      010000
 2124              	.LBE200:
 2125              	.LBE202:
 2126              	.LBE207:
 2127              	.LBE211:
 2128 01bc 5B       		popq	%rbx
 2129              		.cfi_restore 3
 2130              		.cfi_def_cfa_offset 32
 2131              	.LVL154:
 339:fltk-1.3.4-1/png/pngwrite.c **** 
 2132              		.loc 1 339 1 view .LVU589
 2133 01bd 5D       		popq	%rbp
 2134              		.cfi_restore 6
 2135              		.cfi_def_cfa_offset 24
 2136 01be 415C     		popq	%r12
 2137              		.cfi_restore 12
 2138              		.cfi_def_cfa_offset 16
 2139 01c0 415D     		popq	%r13
 2140              		.cfi_restore 13
 2141              		.cfi_def_cfa_offset 8
 2142              	.LVL155:
 2143              	.LBB212:
 2144              	.LBB208:
 2145              	.LBB203:
 2146              	.LBB201:
 339:fltk-1.3.4-1/png/pngwrite.c **** 
 2147              		.loc 1 339 1 view .LVU590
 2148 01c2 E9000000 		jmp	write_unknown_chunks.isra.0.part.0
 2148      00
 2149              	.LVL156:
 2150 01c7 660F1F84 		.p2align 4,,10
 2150      00000000 
 2150      00
 2151              		.p2align 3
 2152              	.L237:
 2153              		.cfi_restore_state
 339:fltk-1.3.4-1/png/pngwrite.c **** 
 2154              		.loc 1 339 1 view .LVU591
 2155              	.LBE201:
 2156              	.LBE203:
 323:fltk-1.3.4-1/png/pngwrite.c ****              info_ptr->text[i].text,
 2157              		.loc 1 323 10 is_stmt 1 view .LVU592
 2158 01d0 488B5010 		movq	16(%rax), %rdx
 2159 01d4 488B7008 		movq	8(%rax), %rsi
 2160 01d8 31C9     		xorl	%ecx, %ecx
 2161 01da 4C89EF   		movq	%r13, %rdi
 2162 01dd E8000000 		call	png_write_tEXt@PLT
 2162      00
 2163              	.LVL157:
 327:fltk-1.3.4-1/png/pngwrite.c **** #else
 2164              		.loc 1 327 10 view .LVU593
 327:fltk-1.3.4-1/png/pngwrite.c **** #else
 2165              		.loc 1 327 40 is_stmt 0 view .LVU594
 2166 01e2 488B83A0 		movq	160(%rbx), %rax
 2166      000000
 2167 01e9 C70428FD 		movl	$-3, (%rax,%rbp)
 2167      FFFFFF
 2168 01f0 E916FFFF 		jmp	.L186
 2168      FF
 2169              	.LVL158:
 2170              		.p2align 4,,10
 2171 01f5 0F1F00   		.p2align 3
 2172              	.L228:
 216:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 2173              		.loc 1 216 62 view .LVU595
 2174 01f8 4180F803 		cmpb	$3, %r8b
 2175 01fc 0F8559FE 		jne	.L169
 2175      FFFF
 2176              	.LVL159:
 2177              	.LBB204:
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2178              		.loc 1 220 22 is_stmt 1 view .LVU596
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2179              		.loc 1 220 10 is_stmt 0 view .LVU597
 2180 0202 6685C9   		testw	%cx, %cx
 2181 0205 0F847001 		je	.L189
 2181      0000
 2182 020b 31C0     		xorl	%eax, %eax
 2183              	.LVL160:
 2184 020d 0F1F00   		.p2align 4,,10
 2185              		.p2align 3
 2186              	.L170:
 221:fltk-1.3.4-1/png/pngwrite.c ****                (png_byte)(255 - info_ptr->trans_alpha[j]);
 2187              		.loc 1 221 13 is_stmt 1 view .LVU598
 222:fltk-1.3.4-1/png/pngwrite.c ****       }
 2188              		.loc 1 222 54 is_stmt 0 view .LVU599
 2189 0210 488B93B8 		movq	184(%rbx), %rdx
 2189      000000
 2190 0217 4801C2   		addq	%rax, %rdx
 2191 021a 4883C001 		addq	$1, %rax
 2192              	.LVL161:
 222:fltk-1.3.4-1/png/pngwrite.c ****       }
 2193              		.loc 1 222 16 view .LVU600
 2194 021e F612     		notb	(%rdx)
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2195              		.loc 1 220 50 is_stmt 1 view .LVU601
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2196              		.loc 1 220 22 view .LVU602
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2197              		.loc 1 220 24 is_stmt 0 view .LVU603
 2198 0220 0FB74B22 		movzwl	34(%rbx), %ecx
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2199              		.loc 1 220 10 view .LVU604
 2200 0224 39C1     		cmpl	%eax, %ecx
 2201 0226 7FE8     		jg	.L170
 2202 0228 440FB643 		movzbl	37(%rbx), %r8d
 2202      25
 2203 022d E929FEFF 		jmp	.L169
 2203      FF
 2204              	.LVL162:
 2205              		.p2align 4,,10
 2206 0232 660F1F44 		.p2align 3
 2206      0000
 2207              	.L223:
 2208              		.cfi_def_cfa_offset 8
 2209              		.cfi_restore 3
 2210              		.cfi_restore 6
 2211              		.cfi_restore 12
 2212              		.cfi_restore 13
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2213              		.loc 1 220 10 view .LVU605
 2214 0238 C3       		ret
 2215              	.LVL163:
 2216 0239 0F1F8000 		.p2align 4,,10
 2216      000000
 2217              		.p2align 3
 2218              	.L235:
 2219              		.cfi_def_cfa_offset 48
 2220              		.cfi_offset 3, -40
 2221              		.cfi_offset 6, -32
 2222              		.cfi_offset 12, -24
 2223              		.cfi_offset 13, -16
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2224              		.loc 1 220 10 view .LVU606
 2225              	.LBE204:
 267:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->mode |= PNG_WROTE_tIME;
 2226              		.loc 1 267 7 is_stmt 1 view .LVU607
 2227 0240 488DB3A8 		leaq	168(%rbx), %rsi
 2227      000000
 2228 0247 4C89EF   		movq	%r13, %rdi
 2229 024a E8000000 		call	png_write_tIME@PLT
 2229      00
 2230              	.LVL164:
 268:fltk-1.3.4-1/png/pngwrite.c ****    }
 2231              		.loc 1 268 7 view .LVU608
 2232 024f 8B4308   		movl	8(%rbx), %eax
 268:fltk-1.3.4-1/png/pngwrite.c ****    }
 2233              		.loc 1 268 21 is_stmt 0 view .LVU609
 2234 0252 41818D2C 		orl	$512, 300(%r13)
 2234      01000000 
 2234      020000
 2235 025d E94EFEFF 		jmp	.L177
 2235      FF
 2236              	.LVL165:
 2237              		.p2align 4,,10
 2238 0262 660F1F44 		.p2align 3
 2238      0000
 2239              	.L226:
 268:fltk-1.3.4-1/png/pngwrite.c ****    }
 2240              		.loc 1 268 21 view .LVU610
 2241              	.LBE208:
 2242              	.LBE212:
 205:fltk-1.3.4-1/png/pngwrite.c ****           (png_uint_32)info_ptr->num_palette);
 2243              		.loc 1 205 7 is_stmt 1 view .LVU611
 2244 0268 0FB75320 		movzwl	32(%rbx), %edx
 2245 026c 488B7318 		movq	24(%rbx), %rsi
 2246 0270 4C89EF   		movq	%r13, %rdi
 2247 0273 E8000000 		call	png_write_PLTE@PLT
 2247      00
 2248              	.LVL166:
 2249 0278 8B4308   		movl	8(%rbx), %eax
 2250 027b E9C0FDFF 		jmp	.L167
 2250      FF
 2251              	.LVL167:
 2252              		.p2align 4,,10
 2253              		.p2align 3
 2254              	.L234:
 2255              	.LBB213:
 2256              	.LBB209:
 260:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->y_pixels_per_unit, info_ptr->phys_unit_type);
 2257              		.loc 1 260 7 view .LVU612
 2258 0280 0FB68BE8 		movzbl	232(%rbx), %ecx
 2258      000000
 2259 0287 8B93E400 		movl	228(%rbx), %edx
 2259      0000
 2260 028d 4C89EF   		movq	%r13, %rdi
 2261 0290 8BB3E000 		movl	224(%rbx), %esi
 2261      0000
 2262 0296 E8000000 		call	png_write_pHYs@PLT
 2262      00
 2263              	.LVL168:
 2264 029b 8B4308   		movl	8(%rbx), %eax
 2265 029e E904FEFF 		jmp	.L176
 2265      FF
 2266              		.p2align 4,,10
 2267 02a3 0F1F4400 		.p2align 3
 2267      00
 2268              	.L233:
 254:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->scal_s_width, info_ptr->scal_s_height);
 2269              		.loc 1 254 7 view .LVU613
 2270 02a8 488B8B48 		movq	328(%rbx), %rcx
 2270      010000
 2271 02af 488B9340 		movq	320(%rbx), %rdx
 2271      010000
 2272 02b6 4C89EF   		movq	%r13, %rdi
 2273 02b9 0FB6B33C 		movzbl	316(%rbx), %esi
 2273      010000
 2274 02c0 E8000000 		call	png_write_sCAL_s@PLT
 2274      00
 2275              	.LVL169:
 2276 02c5 8B4308   		movl	8(%rbx), %eax
 2277 02c8 E9D2FDFF 		jmp	.L175
 2277      FF
 2278 02cd 0F1F00   		.p2align 4,,10
 2279              		.p2align 3
 2280              	.L232:
 247:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->pcal_X1, info_ptr->pcal_type, info_ptr->pcal_nparams,
 2281              		.loc 1 247 7 view .LVU614
 2282 02d0 488BB3F8 		movq	248(%rbx), %rsi
 2282      000000
 2283 02d7 8B8B0401 		movl	260(%rbx), %ecx
 2283      0000
 2284 02dd 4C89EF   		movq	%r13, %rdi
 2285 02e0 8B930001 		movl	256(%rbx), %edx
 2285      0000
 2286 02e6 FFB31001 		pushq	272(%rbx)
 2286      0000
 2287              		.cfi_def_cfa_offset 56
 2288 02ec FFB30801 		pushq	264(%rbx)
 2288      0000
 2289              		.cfi_def_cfa_offset 64
 2290 02f2 440FB68B 		movzbl	281(%rbx), %r9d
 2290      19010000 
 2291 02fa 440FB683 		movzbl	280(%rbx), %r8d
 2291      18010000 
 2292 0302 E8000000 		call	png_write_pCAL@PLT
 2292      00
 2293              	.LVL170:
 2294 0307 5E       		popq	%rsi
 2295              		.cfi_def_cfa_offset 56
 2296 0308 8B4308   		movl	8(%rbx), %eax
 2297 030b 5F       		popq	%rdi
 2298              		.cfi_def_cfa_offset 48
 2299 030c E985FDFF 		jmp	.L174
 2299      FF
 2300              		.p2align 4,,10
 2301 0311 0F1F8000 		.p2align 3
 2301      000000
 2302              	.L231:
 241:fltk-1.3.4-1/png/pngwrite.c ****           info_ptr->offset_unit_type);
 2303              		.loc 1 241 7 view .LVU615
 2304 0318 0FB68BDC 		movzbl	220(%rbx), %ecx
 2304      000000
 2305 031f 8B93D800 		movl	216(%rbx), %edx
 2305      0000
 2306 0325 4C89EF   		movq	%r13, %rdi
 2307 0328 8BB3D400 		movl	212(%rbx), %esi
 2307      0000
 2308 032e E8000000 		call	png_write_oFFs@PLT
 2308      00
 2309              	.LVL171:
 2310 0333 8B4308   		movl	8(%rbx), %eax
 2311 0336 E952FDFF 		jmp	.L173
 2311      FF
 2312 033b 0F1F4400 		.p2align 4,,10
 2312      00
 2313              		.p2align 3
 2314              	.L230:
 236:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2315              		.loc 1 236 7 view .LVU616
 2316 0340 0FB75320 		movzwl	32(%rbx), %edx
 2317 0344 488BB3F0 		movq	240(%rbx), %rsi
 2317      000000
 2318 034b 4C89EF   		movq	%r13, %rdi
 2319 034e E8000000 		call	png_write_hIST@PLT
 2319      00
 2320              	.LVL172:
 2321 0353 8B4308   		movl	8(%rbx), %eax
 2322 0356 E929FDFF 		jmp	.L172
 2322      FF
 2323 035b 0F1F4400 		.p2align 4,,10
 2323      00
 2324              		.p2align 3
 2325              	.L229:
 231:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2326              		.loc 1 231 7 view .LVU617
 2327 0360 0FB65325 		movzbl	37(%rbx), %edx
 2328 0364 488DB3CA 		leaq	202(%rbx), %rsi
 2328      000000
 2329 036b 4C89EF   		movq	%r13, %rdi
 2330 036e E8000000 		call	png_write_bKGD@PLT
 2330      00
 2331              	.LVL173:
 2332 0373 8B4308   		movl	8(%rbx), %eax
 2333 0376 E901FDFF 		jmp	.L171
 2333      FF
 2334              	.LVL174:
 2335              	.L189:
 2336              	.LBB205:
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2337              		.loc 1 220 10 is_stmt 0 view .LVU618
 2338 037b 31C9     		xorl	%ecx, %ecx
 2339 037d E9D9FCFF 		jmp	.L169
 2339      FF
 2340              	.LVL175:
 2341              	.L227:
 220:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->trans_alpha[j] =
 2342              		.loc 1 220 10 view .LVU619
 2343              	.LBE205:
 2344              	.LBE209:
 2345              	.LBE213:
 209:fltk-1.3.4-1/png/pngwrite.c **** 
 2346              		.loc 1 209 7 is_stmt 1 view .LVU620
 2347 0382 488D3500 		leaq	.LC4(%rip), %rsi
 2347      000000
 2348 0389 4C89EF   		movq	%r13, %rdi
 2349 038c E8000000 		call	png_error@PLT
 2349      00
 2350              	.LVL176:
 2351              		.cfi_endproc
 2352              	.LFE43:
 2354              		.section	.rodata.png_write_end.str1.1,"aMS",@progbits,1
 2355              	.LC5:
 2356 0000 4E6F2049 		.string	"No IDATs written into file"
 2356      44415473 
 2356      20777269 
 2356      7474656E 
 2356      20696E74 
 2357              		.section	.rodata.png_write_end.str1.8,"aMS",@progbits,1
 2358              		.align 8
 2359              	.LC6:
 2360 0000 57726F74 		.string	"Wrote palette index exceeding num_palette"
 2360      65207061 
 2360      6C657474 
 2360      6520696E 
 2360      64657820 
 2361              		.section	.text.png_write_end,"ax",@progbits
 2362              		.p2align 4
 2363              		.globl	png_write_end
 2365              	png_write_end:
 2366              	.LVL177:
 2367              	.LFB44:
 348:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_end");
 2368              		.loc 1 348 1 view -0
 2369              		.cfi_startproc
 348:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_end");
 2370              		.loc 1 348 1 is_stmt 0 view .LVU622
 2371 0000 F30F1EFA 		endbr64
 349:fltk-1.3.4-1/png/pngwrite.c **** 
 2372              		.loc 1 349 4 is_stmt 1 view .LVU623
 351:fltk-1.3.4-1/png/pngwrite.c ****       return;
 2373              		.loc 1 351 4 view .LVU624
 351:fltk-1.3.4-1/png/pngwrite.c ****       return;
 2374              		.loc 1 351 7 is_stmt 0 view .LVU625
 2375 0004 4885FF   		testq	%rdi, %rdi
 2376 0007 0F848B01 		je	.L238
 2376      0000
 348:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_end");
 2377              		.loc 1 348 1 view .LVU626
 2378 000d 4155     		pushq	%r13
 2379              		.cfi_def_cfa_offset 16
 2380              		.cfi_offset 13, -16
 2381 000f 4989FD   		movq	%rdi, %r13
 354:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "No IDATs written into file");
 2382              		.loc 1 354 4 is_stmt 1 view .LVU627
 348:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_end");
 2383              		.loc 1 348 1 is_stmt 0 view .LVU628
 2384 0012 4154     		pushq	%r12
 2385              		.cfi_def_cfa_offset 24
 2386              		.cfi_offset 12, -24
 2387 0014 55       		pushq	%rbp
 2388              		.cfi_def_cfa_offset 32
 2389              		.cfi_offset 6, -32
 2390 0015 53       		pushq	%rbx
 2391              		.cfi_def_cfa_offset 40
 2392              		.cfi_offset 3, -40
 2393 0016 4883EC08 		subq	$8, %rsp
 2394              		.cfi_def_cfa_offset 48
 354:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "No IDATs written into file");
 2395              		.loc 1 354 7 view .LVU629
 2396 001a F6872C01 		testb	$4, 300(%rdi)
 2396      000004
 2397 0021 0F847201 		je	.L259
 2397      0000
 358:fltk-1.3.4-1/png/pngwrite.c ****       png_benign_error(png_ptr, "Wrote palette index exceeding num_palette");
 2398              		.loc 1 358 42 view .LVU630
 2399 0027 0FB78768 		movzwl	616(%rdi), %eax
 2399      020000
 2400 002e 4889F3   		movq	%rsi, %rbx
 358:fltk-1.3.4-1/png/pngwrite.c ****       png_benign_error(png_ptr, "Wrote palette index exceeding num_palette");
 2401              		.loc 1 358 4 is_stmt 1 view .LVU631
 358:fltk-1.3.4-1/png/pngwrite.c ****       png_benign_error(png_ptr, "Wrote palette index exceeding num_palette");
 2402              		.loc 1 358 7 is_stmt 0 view .LVU632
 2403 0031 39876C02 		cmpl	%eax, 620(%rdi)
 2403      0000
 2404 0037 0F8F4301 		jg	.L260
 2404      0000
 2405              	.LVL178:
 2406              	.L241:
 363:fltk-1.3.4-1/png/pngwrite.c ****    {
 2407              		.loc 1 363 4 is_stmt 1 view .LVU633
 363:fltk-1.3.4-1/png/pngwrite.c ****    {
 2408              		.loc 1 363 7 is_stmt 0 view .LVU634
 2409 003d 4885DB   		testq	%rbx, %rbx
 2410 0040 0F84CF00 		je	.L243
 2410      0000
 2411              	.LBB214:
 366:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2412              		.loc 1 366 7 is_stmt 1 view .LVU635
 370:fltk-1.3.4-1/png/pngwrite.c ****           (png_ptr->mode & PNG_WROTE_tIME) == 0)
 2413              		.loc 1 370 7 view .LVU636
 370:fltk-1.3.4-1/png/pngwrite.c ****           (png_ptr->mode & PNG_WROTE_tIME) == 0)
 2414              		.loc 1 370 10 is_stmt 0 view .LVU637
 2415 0046 F6430902 		testb	$2, 9(%rbx)
 2416 004a 0F85E000 		jne	.L261
 2416      0000
 2417              	.L244:
 2418              	.LVL179:
 377:fltk-1.3.4-1/png/pngwrite.c ****       {
 2419              		.loc 1 377 19 is_stmt 1 discriminator 1 view .LVU638
 377:fltk-1.3.4-1/png/pngwrite.c ****       {
 2420              		.loc 1 377 7 is_stmt 0 discriminator 1 view .LVU639
 2421 0050 8B939400 		movl	148(%rbx), %edx
 2421      0000
 2422 0056 85D2     		testl	%edx, %edx
 2423 0058 0F8E9200 		jle	.L245
 2423      0000
 377:fltk-1.3.4-1/png/pngwrite.c ****       {
 2424              		.loc 1 377 7 view .LVU640
 2425 005e 31ED     		xorl	%ebp, %ebp
 2426 0060 4531E4   		xorl	%r12d, %r12d
 2427 0063 EB1F     		jmp	.L250
 2428              	.LVL180:
 2429              		.p2align 4,,10
 2430 0065 0F1F00   		.p2align 3
 2431              	.L246:
 402:fltk-1.3.4-1/png/pngwrite.c ****          {
 2432              		.loc 1 402 15 is_stmt 1 view .LVU641
 402:fltk-1.3.4-1/png/pngwrite.c ****          {
 2433              		.loc 1 402 18 is_stmt 0 view .LVU642
 2434 0068 745E     		je	.L262
 415:fltk-1.3.4-1/png/pngwrite.c ****          {
 2435              		.loc 1 415 15 is_stmt 1 view .LVU643
 415:fltk-1.3.4-1/png/pngwrite.c ****          {
 2436              		.loc 1 415 18 is_stmt 0 view .LVU644
 2437 006a 83FEFF   		cmpl	$-1, %esi
 2438 006d 0F84E500 		je	.L263
 2438      0000
 2439              	.L248:
 377:fltk-1.3.4-1/png/pngwrite.c ****       {
 2440              		.loc 1 377 43 is_stmt 1 discriminator 2 view .LVU645
 377:fltk-1.3.4-1/png/pngwrite.c ****       {
 2441              		.loc 1 377 44 is_stmt 0 discriminator 2 view .LVU646
 2442 0073 4183C401 		addl	$1, %r12d
 2443              	.LVL181:
 377:fltk-1.3.4-1/png/pngwrite.c ****       {
 2444              		.loc 1 377 19 is_stmt 1 discriminator 2 view .LVU647
 2445 0077 4883C538 		addq	$56, %rbp
 377:fltk-1.3.4-1/png/pngwrite.c ****       {
 2446              		.loc 1 377 7 is_stmt 0 discriminator 2 view .LVU648
 2447 007b 4439A394 		cmpl	%r12d, 148(%rbx)
 2447      000000
 2448 0082 7E6C     		jle	.L245
 2449              	.LVL182:
 2450              	.L250:
 379:fltk-1.3.4-1/png/pngwrite.c ****             info_ptr->text[i].compression);
 2451              		.loc 1 379 10 is_stmt 1 view .LVU649
 382:fltk-1.3.4-1/png/pngwrite.c ****          {
 2452              		.loc 1 382 10 view .LVU650
 382:fltk-1.3.4-1/png/pngwrite.c ****          {
 2453              		.loc 1 382 28 is_stmt 0 view .LVU651
 2454 0084 488B83A0 		movq	160(%rbx), %rax
 2454      000000
 2455 008b 4801E8   		addq	%rbp, %rax
 382:fltk-1.3.4-1/png/pngwrite.c ****          {
 2456              		.loc 1 382 31 view .LVU652
 2457 008e 8B30     		movl	(%rax), %esi
 382:fltk-1.3.4-1/png/pngwrite.c ****          {
 2458              		.loc 1 382 13 view .LVU653
 2459 0090 85F6     		testl	%esi, %esi
 2460 0092 7ED4     		jle	.L246
 386:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].compression,
 2461              		.loc 1 386 13 is_stmt 1 view .LVU654
 2462 0094 488B5008 		movq	8(%rax), %rdx
 2463 0098 488B4828 		movq	40(%rax), %rcx
 2464 009c 4C89EF   		movq	%r13, %rdi
 2465 009f 4C8B4810 		movq	16(%rax), %r9
 2466 00a3 4C8B4030 		movq	48(%rax), %r8
 2467 00a7 E8000000 		call	png_write_iTXt@PLT
 2467      00
 2468              	.LVL183:
 393:fltk-1.3.4-1/png/pngwrite.c ****                info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 2469              		.loc 1 393 13 view .LVU655
 393:fltk-1.3.4-1/png/pngwrite.c ****                info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 2470              		.loc 1 393 31 is_stmt 0 view .LVU656
 2471 00ac 488B93A0 		movq	160(%rbx), %rdx
 2471      000000
 394:fltk-1.3.4-1/png/pngwrite.c ****             else
 2472              		.loc 1 394 46 view .LVU657
 2473 00b3 31C0     		xorl	%eax, %eax
 393:fltk-1.3.4-1/png/pngwrite.c ****                info_ptr->text[i].compression = PNG_TEXT_COMPRESSION_NONE_WR;
 2474              		.loc 1 393 31 view .LVU658
 2475 00b5 4801EA   		addq	%rbp, %rdx
 394:fltk-1.3.4-1/png/pngwrite.c ****             else
 2476              		.loc 1 394 46 view .LVU659
 2477 00b8 833AFF   		cmpl	$-1, (%rdx)
 2478 00bb 0F95C0   		setne	%al
 2479 00be 83E803   		subl	$3, %eax
 2480 00c1 8902     		movl	%eax, (%rdx)
 2481 00c3 EBAE     		jmp	.L248
 2482              		.p2align 4,,10
 2483 00c5 0F1F00   		.p2align 3
 2484              	.L262:
 406:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].text, info_ptr->text[i].compression);
 2485              		.loc 1 406 13 is_stmt 1 view .LVU660
 2486 00c8 488B5010 		movq	16(%rax), %rdx
 2487 00cc 488B7008 		movq	8(%rax), %rsi
 2488 00d0 31C9     		xorl	%ecx, %ecx
 2489 00d2 4C89EF   		movq	%r13, %rdi
 2490 00d5 E8000000 		call	png_write_zTXt@PLT
 2490      00
 2491              	.LVL184:
 409:fltk-1.3.4-1/png/pngwrite.c **** #else
 2492              		.loc 1 409 13 view .LVU661
 409:fltk-1.3.4-1/png/pngwrite.c **** #else
 2493              		.loc 1 409 43 is_stmt 0 view .LVU662
 2494 00da 488B83A0 		movq	160(%rbx), %rax
 2494      000000
 2495 00e1 C70428FE 		movl	$-2, (%rax,%rbp)
 2495      FFFFFF
 2496 00e8 EB89     		jmp	.L248
 2497              	.LVL185:
 2498 00ea 660F1F44 		.p2align 4,,10
 2498      0000
 2499              		.p2align 3
 2500              	.L245:
 430:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2501              		.loc 1 430 7 is_stmt 1 view .LVU663
 2502              	.LBB215:
 2503              	.LBI215:
  24:fltk-1.3.4-1/png/pngwrite.c ****    unsigned int where)
 2504              		.loc 1 24 1 view .LVU664
 2505              	.LBB216:
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 2506              		.loc 1 27 4 view .LVU665
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 2507              		.loc 1 27 7 is_stmt 0 view .LVU666
 2508 00f0 8B832801 		movl	296(%rbx), %eax
 2508      0000
 2509 00f6 85C0     		testl	%eax, %eax
 2510 00f8 741B     		je	.L243
 2511 00fa 488D9328 		leaq	296(%rbx), %rdx
 2511      010000
 2512 0101 488DB320 		leaq	288(%rbx), %rsi
 2512      010000
 2513 0108 B9080000 		movl	$8, %ecx
 2513      00
 2514 010d 4C89EF   		movq	%r13, %rdi
 2515 0110 E8000000 		call	write_unknown_chunks.isra.0.part.0
 2515      00
 2516              	.LVL186:
 2517              	.L243:
  27:fltk-1.3.4-1/png/pngwrite.c ****    {
 2518              		.loc 1 27 7 view .LVU667
 2519              	.LBE216:
 2520              	.LBE215:
 2521              	.LBE214:
 434:fltk-1.3.4-1/png/pngwrite.c **** 
 2522              		.loc 1 434 4 is_stmt 1 view .LVU668
 434:fltk-1.3.4-1/png/pngwrite.c **** 
 2523              		.loc 1 434 18 is_stmt 0 view .LVU669
 2524 0115 41838D2C 		orl	$8, 300(%r13)
 2524      01000008 
 437:fltk-1.3.4-1/png/pngwrite.c **** 
 2525              		.loc 1 437 4 is_stmt 1 view .LVU670
 451:fltk-1.3.4-1/png/pngwrite.c **** 
 2526              		.loc 1 451 1 is_stmt 0 view .LVU671
 2527 011d 4883C408 		addq	$8, %rsp
 2528              		.cfi_remember_state
 2529              		.cfi_def_cfa_offset 40
 437:fltk-1.3.4-1/png/pngwrite.c **** 
 2530              		.loc 1 437 4 view .LVU672
 2531 0121 4C89EF   		movq	%r13, %rdi
 451:fltk-1.3.4-1/png/pngwrite.c **** 
 2532              		.loc 1 451 1 view .LVU673
 2533 0124 5B       		popq	%rbx
 2534              		.cfi_restore 3
 2535              		.cfi_def_cfa_offset 32
 2536              	.LVL187:
 451:fltk-1.3.4-1/png/pngwrite.c **** 
 2537              		.loc 1 451 1 view .LVU674
 2538 0125 5D       		popq	%rbp
 2539              		.cfi_restore 6
 2540              		.cfi_def_cfa_offset 24
 2541 0126 415C     		popq	%r12
 2542              		.cfi_restore 12
 2543              		.cfi_def_cfa_offset 16
 2544 0128 415D     		popq	%r13
 2545              		.cfi_restore 13
 2546              		.cfi_def_cfa_offset 8
 2547              	.LVL188:
 437:fltk-1.3.4-1/png/pngwrite.c **** 
 2548              		.loc 1 437 4 view .LVU675
 2549 012a E9000000 		jmp	png_write_IEND@PLT
 2549      00
 2550              	.LVL189:
 2551 012f 90       		.p2align 4,,10
 2552              		.p2align 3
 2553              	.L261:
 2554              		.cfi_restore_state
 2555              	.LBB217:
 370:fltk-1.3.4-1/png/pngwrite.c ****           (png_ptr->mode & PNG_WROTE_tIME) == 0)
 2556              		.loc 1 370 50 discriminator 1 view .LVU676
 2557 0130 41F6852D 		testb	$2, 301(%r13)
 2557      01000002 
 2558 0138 0F8512FF 		jne	.L244
 2558      FFFF
 372:fltk-1.3.4-1/png/pngwrite.c **** 
 2559              		.loc 1 372 10 is_stmt 1 view .LVU677
 372:fltk-1.3.4-1/png/pngwrite.c **** 
 2560              		.loc 1 372 34 is_stmt 0 view .LVU678
 2561 013e 488DB3A8 		leaq	168(%rbx), %rsi
 2561      000000
 372:fltk-1.3.4-1/png/pngwrite.c **** 
 2562              		.loc 1 372 10 view .LVU679
 2563 0145 4C89EF   		movq	%r13, %rdi
 2564 0148 E8000000 		call	png_write_tIME@PLT
 2564      00
 2565              	.LVL190:
 2566 014d E9FEFEFF 		jmp	.L244
 2566      FF
 2567              	.LVL191:
 2568              		.p2align 4,,10
 2569 0152 660F1F44 		.p2align 3
 2569      0000
 2570              	.L263:
 419:fltk-1.3.4-1/png/pngwrite.c ****                 info_ptr->text[i].text, 0);
 2571              		.loc 1 419 13 is_stmt 1 view .LVU680
 2572 0158 488B5010 		movq	16(%rax), %rdx
 2573 015c 488B7008 		movq	8(%rax), %rsi
 2574 0160 31C9     		xorl	%ecx, %ecx
 2575 0162 4C89EF   		movq	%r13, %rdi
 2576 0165 E8000000 		call	png_write_tEXt@PLT
 2576      00
 2577              	.LVL192:
 422:fltk-1.3.4-1/png/pngwrite.c **** #else
 2578              		.loc 1 422 13 view .LVU681
 422:fltk-1.3.4-1/png/pngwrite.c **** #else
 2579              		.loc 1 422 43 is_stmt 0 view .LVU682
 2580 016a 488B83A0 		movq	160(%rbx), %rax
 2580      000000
 2581 0171 C70428FD 		movl	$-3, (%rax,%rbp)
 2581      FFFFFF
 2582 0178 E9F6FEFF 		jmp	.L248
 2582      FF
 2583              	.LVL193:
 2584 017d 0F1F00   		.p2align 4,,10
 2585              		.p2align 3
 2586              	.L260:
 422:fltk-1.3.4-1/png/pngwrite.c **** #else
 2587              		.loc 1 422 43 view .LVU683
 2588              	.LBE217:
 359:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2589              		.loc 1 359 7 is_stmt 1 view .LVU684
 2590 0180 488D3500 		leaq	.LC6(%rip), %rsi
 2590      000000
 2591 0187 E8000000 		call	png_benign_error@PLT
 2591      00
 2592              	.LVL194:
 359:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2593              		.loc 1 359 7 is_stmt 0 view .LVU685
 2594 018c E9ACFEFF 		jmp	.L241
 2594      FF
 2595              	.LVL195:
 2596              		.p2align 4,,10
 2597 0191 0F1F8000 		.p2align 3
 2597      000000
 2598              	.L238:
 2599              		.cfi_def_cfa_offset 8
 2600              		.cfi_restore 3
 2601              		.cfi_restore 6
 2602              		.cfi_restore 12
 2603              		.cfi_restore 13
 359:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2604              		.loc 1 359 7 view .LVU686
 2605 0198 C3       		ret
 2606              	.L259:
 2607              		.cfi_def_cfa_offset 48
 2608              		.cfi_offset 3, -40
 2609              		.cfi_offset 6, -32
 2610              		.cfi_offset 12, -24
 2611              		.cfi_offset 13, -16
 355:fltk-1.3.4-1/png/pngwrite.c **** 
 2612              		.loc 1 355 7 is_stmt 1 view .LVU687
 2613 0199 488D3500 		leaq	.LC5(%rip), %rsi
 2613      000000
 2614              	.LVL196:
 355:fltk-1.3.4-1/png/pngwrite.c **** 
 2615              		.loc 1 355 7 is_stmt 0 view .LVU688
 2616 01a0 E8000000 		call	png_error@PLT
 2616      00
 2617              	.LVL197:
 355:fltk-1.3.4-1/png/pngwrite.c **** 
 2618              		.loc 1 355 7 view .LVU689
 2619              		.cfi_endproc
 2620              	.LFE44:
 2622              		.section	.text.png_convert_from_struct_tm,"ax",@progbits
 2623              		.p2align 4
 2624              		.globl	png_convert_from_struct_tm
 2626              	png_convert_from_struct_tm:
 2627              	.LVL198:
 2628              	.LFB45:
 456:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_convert_from_struct_tm");
 2629              		.loc 1 456 1 is_stmt 1 view -0
 2630              		.cfi_startproc
 456:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_convert_from_struct_tm");
 2631              		.loc 1 456 1 is_stmt 0 view .LVU691
 2632 0000 F30F1EFA 		endbr64
 457:fltk-1.3.4-1/png/pngwrite.c **** 
 2633              		.loc 1 457 4 is_stmt 1 view .LVU692
 459:fltk-1.3.4-1/png/pngwrite.c ****    ptime->month = (png_byte)(ttime->tm_mon + 1);
 2634              		.loc 1 459 4 view .LVU693
 459:fltk-1.3.4-1/png/pngwrite.c ****    ptime->month = (png_byte)(ttime->tm_mon + 1);
 2635              		.loc 1 459 18 is_stmt 0 view .LVU694
 2636 0004 0FB74614 		movzwl	20(%rsi), %eax
 2637 0008 66056C07 		addw	$1900, %ax
 2638 000c 668907   		movw	%ax, (%rdi)
 460:fltk-1.3.4-1/png/pngwrite.c ****    ptime->day = (png_byte)ttime->tm_mday;
 2639              		.loc 1 460 4 is_stmt 1 view .LVU695
 460:fltk-1.3.4-1/png/pngwrite.c ****    ptime->day = (png_byte)ttime->tm_mday;
 2640              		.loc 1 460 19 is_stmt 0 view .LVU696
 2641 000f 0FB64610 		movzbl	16(%rsi), %eax
 2642 0013 83C001   		addl	$1, %eax
 2643 0016 884702   		movb	%al, 2(%rdi)
 461:fltk-1.3.4-1/png/pngwrite.c ****    ptime->hour = (png_byte)ttime->tm_hour;
 2644              		.loc 1 461 4 is_stmt 1 view .LVU697
 461:fltk-1.3.4-1/png/pngwrite.c ****    ptime->hour = (png_byte)ttime->tm_hour;
 2645              		.loc 1 461 17 is_stmt 0 view .LVU698
 2646 0019 8B460C   		movl	12(%rsi), %eax
 2647 001c 884703   		movb	%al, 3(%rdi)
 462:fltk-1.3.4-1/png/pngwrite.c ****    ptime->minute = (png_byte)ttime->tm_min;
 2648              		.loc 1 462 4 is_stmt 1 view .LVU699
 462:fltk-1.3.4-1/png/pngwrite.c ****    ptime->minute = (png_byte)ttime->tm_min;
 2649              		.loc 1 462 18 is_stmt 0 view .LVU700
 2650 001f 8B4608   		movl	8(%rsi), %eax
 2651 0022 884704   		movb	%al, 4(%rdi)
 463:fltk-1.3.4-1/png/pngwrite.c ****    ptime->second = (png_byte)ttime->tm_sec;
 2652              		.loc 1 463 4 is_stmt 1 view .LVU701
 463:fltk-1.3.4-1/png/pngwrite.c ****    ptime->second = (png_byte)ttime->tm_sec;
 2653              		.loc 1 463 20 is_stmt 0 view .LVU702
 2654 0025 8B4604   		movl	4(%rsi), %eax
 2655 0028 884705   		movb	%al, 5(%rdi)
 464:fltk-1.3.4-1/png/pngwrite.c **** }
 2656              		.loc 1 464 4 is_stmt 1 view .LVU703
 464:fltk-1.3.4-1/png/pngwrite.c **** }
 2657              		.loc 1 464 20 is_stmt 0 view .LVU704
 2658 002b 8B06     		movl	(%rsi), %eax
 2659 002d 884706   		movb	%al, 6(%rdi)
 465:fltk-1.3.4-1/png/pngwrite.c **** 
 2660              		.loc 1 465 1 view .LVU705
 2661 0030 C3       		ret
 2662              		.cfi_endproc
 2663              	.LFE45:
 2665              		.section	.text.png_convert_from_time_t,"ax",@progbits
 2666              		.p2align 4
 2667              		.globl	png_convert_from_time_t
 2669              	png_convert_from_time_t:
 2670              	.LVL199:
 2671              	.LFB46:
 469:fltk-1.3.4-1/png/pngwrite.c ****    struct tm *tbuf;
 2672              		.loc 1 469 1 is_stmt 1 view -0
 2673              		.cfi_startproc
 469:fltk-1.3.4-1/png/pngwrite.c ****    struct tm *tbuf;
 2674              		.loc 1 469 1 is_stmt 0 view .LVU707
 2675 0000 F30F1EFA 		endbr64
 470:fltk-1.3.4-1/png/pngwrite.c **** 
 2676              		.loc 1 470 4 is_stmt 1 view .LVU708
 472:fltk-1.3.4-1/png/pngwrite.c **** 
 2677              		.loc 1 472 4 view .LVU709
 474:fltk-1.3.4-1/png/pngwrite.c ****    png_convert_from_struct_tm(ptime, tbuf);
 2678              		.loc 1 474 4 view .LVU710
 469:fltk-1.3.4-1/png/pngwrite.c ****    struct tm *tbuf;
 2679              		.loc 1 469 1 is_stmt 0 view .LVU711
 2680 0004 53       		pushq	%rbx
 2681              		.cfi_def_cfa_offset 16
 2682              		.cfi_offset 3, -16
 2683 0005 4889FB   		movq	%rdi, %rbx
 2684 0008 4883EC10 		subq	$16, %rsp
 2685              		.cfi_def_cfa_offset 32
 474:fltk-1.3.4-1/png/pngwrite.c ****    png_convert_from_struct_tm(ptime, tbuf);
 2686              		.loc 1 474 11 view .LVU712
 2687 000c 488D7C24 		leaq	8(%rsp), %rdi
 2687      08
 2688              	.LVL200:
 469:fltk-1.3.4-1/png/pngwrite.c ****    struct tm *tbuf;
 2689              		.loc 1 469 1 view .LVU713
 2690 0011 48897424 		movq	%rsi, 8(%rsp)
 2690      08
 474:fltk-1.3.4-1/png/pngwrite.c ****    png_convert_from_struct_tm(ptime, tbuf);
 2691              		.loc 1 474 11 view .LVU714
 2692 0016 E8000000 		call	gmtime@PLT
 2692      00
 2693              	.LVL201:
 475:fltk-1.3.4-1/png/pngwrite.c **** }
 2694              		.loc 1 475 4 is_stmt 1 view .LVU715
 2695              	.LBB218:
 2696              	.LBI218:
 455:fltk-1.3.4-1/png/pngwrite.c **** {
 2697              		.loc 1 455 1 view .LVU716
 2698              	.LBB219:
 457:fltk-1.3.4-1/png/pngwrite.c **** 
 2699              		.loc 1 457 4 view .LVU717
 459:fltk-1.3.4-1/png/pngwrite.c ****    ptime->month = (png_byte)(ttime->tm_mon + 1);
 2700              		.loc 1 459 4 view .LVU718
 459:fltk-1.3.4-1/png/pngwrite.c ****    ptime->month = (png_byte)(ttime->tm_mon + 1);
 2701              		.loc 1 459 18 is_stmt 0 view .LVU719
 2702 001b 0FB74814 		movzwl	20(%rax), %ecx
 2703 001f 8D916C07 		leal	1900(%rcx), %edx
 2703      0000
 2704 0025 668913   		movw	%dx, (%rbx)
 460:fltk-1.3.4-1/png/pngwrite.c ****    ptime->day = (png_byte)ttime->tm_mday;
 2705              		.loc 1 460 4 is_stmt 1 view .LVU720
 460:fltk-1.3.4-1/png/pngwrite.c ****    ptime->day = (png_byte)ttime->tm_mday;
 2706              		.loc 1 460 19 is_stmt 0 view .LVU721
 2707 0028 0FB67010 		movzbl	16(%rax), %esi
 2708 002c 8D5601   		leal	1(%rsi), %edx
 2709 002f 885302   		movb	%dl, 2(%rbx)
 461:fltk-1.3.4-1/png/pngwrite.c ****    ptime->hour = (png_byte)ttime->tm_hour;
 2710              		.loc 1 461 4 is_stmt 1 view .LVU722
 461:fltk-1.3.4-1/png/pngwrite.c ****    ptime->hour = (png_byte)ttime->tm_hour;
 2711              		.loc 1 461 17 is_stmt 0 view .LVU723
 2712 0032 8B500C   		movl	12(%rax), %edx
 2713 0035 885303   		movb	%dl, 3(%rbx)
 462:fltk-1.3.4-1/png/pngwrite.c ****    ptime->minute = (png_byte)ttime->tm_min;
 2714              		.loc 1 462 4 is_stmt 1 view .LVU724
 462:fltk-1.3.4-1/png/pngwrite.c ****    ptime->minute = (png_byte)ttime->tm_min;
 2715              		.loc 1 462 18 is_stmt 0 view .LVU725
 2716 0038 8B5008   		movl	8(%rax), %edx
 2717 003b 885304   		movb	%dl, 4(%rbx)
 463:fltk-1.3.4-1/png/pngwrite.c ****    ptime->second = (png_byte)ttime->tm_sec;
 2718              		.loc 1 463 4 is_stmt 1 view .LVU726
 463:fltk-1.3.4-1/png/pngwrite.c ****    ptime->second = (png_byte)ttime->tm_sec;
 2719              		.loc 1 463 20 is_stmt 0 view .LVU727
 2720 003e 8B5004   		movl	4(%rax), %edx
 2721 0041 885305   		movb	%dl, 5(%rbx)
 464:fltk-1.3.4-1/png/pngwrite.c **** }
 2722              		.loc 1 464 4 is_stmt 1 view .LVU728
 464:fltk-1.3.4-1/png/pngwrite.c **** }
 2723              		.loc 1 464 20 is_stmt 0 view .LVU729
 2724 0044 8B00     		movl	(%rax), %eax
 2725              	.LVL202:
 464:fltk-1.3.4-1/png/pngwrite.c **** }
 2726              		.loc 1 464 20 view .LVU730
 2727 0046 884306   		movb	%al, 6(%rbx)
 2728              	.LVL203:
 464:fltk-1.3.4-1/png/pngwrite.c **** }
 2729              		.loc 1 464 20 view .LVU731
 2730              	.LBE219:
 2731              	.LBE218:
 476:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2732              		.loc 1 476 1 view .LVU732
 2733 0049 4883C410 		addq	$16, %rsp
 2734              		.cfi_def_cfa_offset 16
 2735 004d 5B       		popq	%rbx
 2736              		.cfi_def_cfa_offset 8
 2737              	.LVL204:
 476:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2738              		.loc 1 476 1 view .LVU733
 2739 004e C3       		ret
 2740              		.cfi_endproc
 2741              	.LFE46:
 2743              		.section	.text.png_create_write_struct_2,"ax",@progbits
 2744              		.p2align 4
 2745              		.globl	png_create_write_struct_2
 2747              	png_create_write_struct_2:
 2748              	.LVL205:
 2749              	.LFB48:
 497:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 2750              		.loc 1 497 1 is_stmt 1 view -0
 2751              		.cfi_startproc
 497:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 2752              		.loc 1 497 1 is_stmt 0 view .LVU735
 2753 0000 F30F1EFA 		endbr64
 498:fltk-1.3.4-1/png/pngwrite.c ****        error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
 2754              		.loc 1 498 4 is_stmt 1 view .LVU736
 497:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = png_create_png_struct(user_png_ver, error_ptr,
 2755              		.loc 1 497 1 is_stmt 0 view .LVU737
 2756 0004 4154     		pushq	%r12
 2757              		.cfi_def_cfa_offset 16
 2758              		.cfi_offset 12, -16
 498:fltk-1.3.4-1/png/pngwrite.c ****        error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
 2759              		.loc 1 498 27 view .LVU738
 2760 0006 4883EC08 		subq	$8, %rsp
 2761              		.cfi_def_cfa_offset 24
 2762 000a FF742418 		pushq	24(%rsp)
 2763              		.cfi_def_cfa_offset 32
 2764 000e E8000000 		call	png_create_png_struct@PLT
 2764      00
 2765              	.LVL206:
 501:fltk-1.3.4-1/png/pngwrite.c ****    {
 2766              		.loc 1 501 7 view .LVU739
 2767 0013 5A       		popq	%rdx
 2768              		.cfi_def_cfa_offset 24
 2769 0014 59       		popq	%rcx
 2770              		.cfi_def_cfa_offset 16
 498:fltk-1.3.4-1/png/pngwrite.c ****        error_fn, warn_fn, mem_ptr, malloc_fn, free_fn);
 2771              		.loc 1 498 27 view .LVU740
 2772 0015 4989C4   		movq	%rax, %r12
 2773              	.LVL207:
 501:fltk-1.3.4-1/png/pngwrite.c ****    {
 2774              		.loc 1 501 4 is_stmt 1 view .LVU741
 501:fltk-1.3.4-1/png/pngwrite.c ****    {
 2775              		.loc 1 501 7 is_stmt 0 view .LVU742
 2776 0018 4885C0   		testq	%rax, %rax
 2777 001b 0F848000 		je	.L267
 2777      0000
 506:fltk-1.3.4-1/png/pngwrite.c **** 
 2778              		.loc 1 506 7 is_stmt 1 view .LVU743
 512:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_level = PNG_Z_DEFAULT_COMPRESSION;
 2779              		.loc 1 512 7 view .LVU744
 513:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_mem_level = 8;
 2780              		.loc 1 513 7 view .LVU745
 514:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_window_bits = 15;
 2781              		.loc 1 514 7 view .LVU746
 515:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_method = 8;
 2782              		.loc 1 515 7 view .LVU747
 516:fltk-1.3.4-1/png/pngwrite.c **** 
 2783              		.loc 1 516 7 view .LVU748
 519:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_level = PNG_TEXT_Z_DEFAULT_COMPRESSION;
 2784              		.loc 1 519 7 view .LVU749
 520:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_mem_level = 8;
 2785              		.loc 1 520 7 view .LVU750
 521:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_window_bits = 15;
 2786              		.loc 1 521 7 view .LVU751
 522:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_method = 8;
 2787              		.loc 1 522 7 view .LVU752
 523:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_COMPRESSED_TEXT */
 2788              		.loc 1 523 7 view .LVU753
 506:fltk-1.3.4-1/png/pngwrite.c **** 
 2789              		.loc 1 506 29 is_stmt 0 view .LVU754
 2790 0021 48B80020 		movabsq	$-4294959104, %rax
 2790      0000FFFF 
 2790      FFFF
 2791              	.LVL208:
 549:fltk-1.3.4-1/png/pngwrite.c ****    }
 2792              		.loc 1 549 7 view .LVU755
 2793 002b 31C9     		xorl	%ecx, %ecx
 2794 002d 31D2     		xorl	%edx, %edx
 2795 002f 31F6     		xorl	%esi, %esi
 506:fltk-1.3.4-1/png/pngwrite.c **** 
 2796              		.loc 1 506 29 view .LVU756
 2797 0031 49898424 		movq	%rax, 440(%r12)
 2797      B8010000 
 549:fltk-1.3.4-1/png/pngwrite.c ****    }
 2798              		.loc 1 549 7 view .LVU757
 2799 0039 4C89E7   		movq	%r12, %rdi
 516:fltk-1.3.4-1/png/pngwrite.c **** 
 2800              		.loc 1 516 28 view .LVU758
 2801 003c 48B80800 		movabsq	$64424509448, %rax
 2801      00000F00 
 2801      0000
 2802 0046 49898424 		movq	%rax, 448(%r12)
 2802      C0010000 
 514:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_window_bits = 15;
 2803              		.loc 1 514 31 view .LVU759
 2804 004e 48B80800 		movabsq	$4294967304, %rax
 2804      00000100 
 2804      0000
 2805 0058 49898424 		movq	%rax, 456(%r12)
 2805      C8010000 
 520:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_mem_level = 8;
 2806              		.loc 1 520 32 view .LVU760
 2807 0060 48B8FFFF 		movabsq	$38654705663, %rax
 2807      FFFF0800 
 2807      0000
 2808 006a 49898424 		movq	%rax, 464(%r12)
 2808      D0010000 
 522:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_method = 8;
 2809              		.loc 1 522 38 view .LVU761
 2810 0072 48B80F00 		movabsq	$34359738383, %rax
 2810      00000800 
 2810      0000
 542:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2811              		.loc 1 542 22 view .LVU762
 2812 007c 41818C24 		orl	$2097152, 304(%r12)
 2812      30010000 
 2812      00002000 
 522:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_method = 8;
 2813              		.loc 1 522 38 view .LVU763
 2814 0088 49898424 		movq	%rax, 472(%r12)
 2814      D8010000 
 519:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->zlib_text_level = PNG_TEXT_Z_DEFAULT_COMPRESSION;
 2815              		.loc 1 519 35 view .LVU764
 2816 0090 41C78424 		movl	$0, 480(%r12)
 2816      E0010000 
 2816      00000000 
 542:fltk-1.3.4-1/png/pngwrite.c **** #endif
 2817              		.loc 1 542 7 is_stmt 1 view .LVU765
 549:fltk-1.3.4-1/png/pngwrite.c ****    }
 2818              		.loc 1 549 7 view .LVU766
 2819 009c E8000000 		call	png_set_write_fn@PLT
 2819      00
 2820              	.LVL209:
 552:fltk-1.3.4-1/png/pngwrite.c **** }
 2821              		.loc 1 552 4 view .LVU767
 2822              	.L267:
 553:fltk-1.3.4-1/png/pngwrite.c **** 
 2823              		.loc 1 553 1 is_stmt 0 view .LVU768
 2824 00a1 4C89E0   		movq	%r12, %rax
 2825 00a4 415C     		popq	%r12
 2826              		.cfi_def_cfa_offset 8
 2827              	.LVL210:
 553:fltk-1.3.4-1/png/pngwrite.c **** 
 2828              		.loc 1 553 1 view .LVU769
 2829 00a6 C3       		ret
 2830              		.cfi_endproc
 2831              	.LFE48:
 2833              		.section	.text.png_create_write_struct,"ax",@progbits
 2834              		.p2align 4
 2835              		.globl	png_create_write_struct
 2837              	png_create_write_struct:
 2838              	.LVL211:
 2839              	.LFB47:
 483:fltk-1.3.4-1/png/pngwrite.c **** #ifndef PNG_USER_MEM_SUPPORTED
 2840              		.loc 1 483 1 is_stmt 1 view -0
 2841              		.cfi_startproc
 483:fltk-1.3.4-1/png/pngwrite.c **** #ifndef PNG_USER_MEM_SUPPORTED
 2842              		.loc 1 483 1 is_stmt 0 view .LVU771
 2843 0000 F30F1EFA 		endbr64
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 2844              		.loc 1 488 4 is_stmt 1 view .LVU772
 483:fltk-1.3.4-1/png/pngwrite.c **** #ifndef PNG_USER_MEM_SUPPORTED
 2845              		.loc 1 483 1 is_stmt 0 view .LVU773
 2846 0004 4883EC10 		subq	$16, %rsp
 2847              		.cfi_def_cfa_offset 24
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 2848              		.loc 1 488 11 view .LVU774
 2849 0008 4531C9   		xorl	%r9d, %r9d
 2850 000b 4531C0   		xorl	%r8d, %r8d
 2851 000e 6A00     		pushq	$0
 2852              		.cfi_def_cfa_offset 32
 2853 0010 E8000000 		call	png_create_write_struct_2
 2853      00
 2854              	.LVL212:
 490:fltk-1.3.4-1/png/pngwrite.c **** 
 2855              		.loc 1 490 1 view .LVU775
 2856 0015 4883C418 		addq	$24, %rsp
 2857              		.cfi_def_cfa_offset 8
 2858 0019 C3       		ret
 2859              		.cfi_endproc
 2860              	.LFE47:
 2862              		.section	.rodata.png_write_row.str1.8,"aMS",@progbits,1
 2863              		.align 8
 2864              	.LC7:
 2865 0000 706E675F 		.string	"png_write_info was never called before png_write_row"
 2865      77726974 
 2865      655F696E 
 2865      666F2077 
 2865      6173206E 
 2866 0035 000000   		.align 8
 2867              	.LC8:
 2868 0038 696E7465 		.string	"internal write transform logic error"
 2868      726E616C 
 2868      20777269 
 2868      74652074 
 2868      72616E73 
 2869              		.section	.text.png_write_row,"ax",@progbits
 2870              		.p2align 4
 2871              		.globl	png_write_row
 2873              	png_write_row:
 2874              	.LVL213:
 2875              	.LFB52:
 682:fltk-1.3.4-1/png/pngwrite.c ****    /* 1.5.6: moved from png_struct to be a local structure: */
 2876              		.loc 1 682 1 is_stmt 1 view -0
 2877              		.cfi_startproc
 682:fltk-1.3.4-1/png/pngwrite.c ****    /* 1.5.6: moved from png_struct to be a local structure: */
 2878              		.loc 1 682 1 is_stmt 0 view .LVU777
 2879 0000 F30F1EFA 		endbr64
 2880 0004 4154     		pushq	%r12
 2881              		.cfi_def_cfa_offset 16
 2882              		.cfi_offset 12, -16
 2883 0006 55       		pushq	%rbp
 2884              		.cfi_def_cfa_offset 24
 2885              		.cfi_offset 6, -24
 2886 0007 4883EC38 		subq	$56, %rsp
 2887              		.cfi_def_cfa_offset 80
 682:fltk-1.3.4-1/png/pngwrite.c ****    /* 1.5.6: moved from png_struct to be a local structure: */
 2888              		.loc 1 682 1 view .LVU778
 2889 000b 64488B04 		movq	%fs:40, %rax
 2889      25280000 
 2889      00
 2890 0014 48894424 		movq	%rax, 40(%rsp)
 2890      28
 2891 0019 31C0     		xorl	%eax, %eax
 684:fltk-1.3.4-1/png/pngwrite.c **** 
 2892              		.loc 1 684 4 is_stmt 1 view .LVU779
 686:fltk-1.3.4-1/png/pngwrite.c ****       return;
 2893              		.loc 1 686 4 view .LVU780
 686:fltk-1.3.4-1/png/pngwrite.c ****       return;
 2894              		.loc 1 686 7 is_stmt 0 view .LVU781
 2895 001b 4885FF   		testq	%rdi, %rdi
 2896 001e 0F847F01 		je	.L275
 2896      0000
 693:fltk-1.3.4-1/png/pngwrite.c ****    {
 2897              		.loc 1 693 7 view .LVU782
 2898 0024 8B8F1402 		movl	532(%rdi), %ecx
 2898      0000
 2899 002a 4889FD   		movq	%rdi, %rbp
 689:fltk-1.3.4-1/png/pngwrite.c ****       png_ptr->row_number, png_ptr->pass);
 2900              		.loc 1 689 4 is_stmt 1 view .LVU783
 693:fltk-1.3.4-1/png/pngwrite.c ****    {
 2901              		.loc 1 693 4 view .LVU784
 693:fltk-1.3.4-1/png/pngwrite.c ****    {
 2902              		.loc 1 693 7 is_stmt 0 view .LVU785
 2903 002d 85C9     		testl	%ecx, %ecx
 2904 002f 7525     		jne	.L277
 693:fltk-1.3.4-1/png/pngwrite.c ****    {
 2905              		.loc 1 693 33 discriminator 1 view .LVU786
 2906 0031 80BF7502 		cmpb	$0, 629(%rdi)
 2906      000000
 2907 0038 751C     		jne	.L277
 696:fltk-1.3.4-1/png/pngwrite.c ****          png_error(png_ptr,
 2908              		.loc 1 696 7 is_stmt 1 view .LVU787
 696:fltk-1.3.4-1/png/pngwrite.c ****          png_error(png_ptr,
 2909              		.loc 1 696 10 is_stmt 0 view .LVU788
 2910 003a F6872D01 		testb	$4, 301(%rdi)
 2910      000004
 2911 0041 0F84D103 		je	.L345
 2911      0000
 2912 0047 48897424 		movq	%rsi, 8(%rsp)
 2912      08
 737:fltk-1.3.4-1/png/pngwrite.c ****    }
 2913              		.loc 1 737 7 is_stmt 1 view .LVU789
 2914 004c E8000000 		call	png_write_start_row@PLT
 2914      00
 2915              	.LVL214:
 737:fltk-1.3.4-1/png/pngwrite.c ****    }
 2916              		.loc 1 737 7 is_stmt 0 view .LVU790
 2917 0051 488B7424 		movq	8(%rsp), %rsi
 2917      08
 2918              	.LVL215:
 2919              	.L277:
 742:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 2920              		.loc 1 742 4 is_stmt 1 view .LVU791
 742:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 2921              		.loc 1 742 7 is_stmt 0 view .LVU792
 2922 0056 80BD7402 		cmpb	$0, 628(%rbp)
 2922      000000
 2923 005d 7441     		je	.L279
 742:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 2924              		.loc 1 742 33 discriminator 1 view .LVU793
 2925 005f F6853401 		testb	$2, 308(%rbp)
 2925      000002
 2926 0066 7438     		je	.L279
 745:fltk-1.3.4-1/png/pngwrite.c ****       {
 2927              		.loc 1 745 7 is_stmt 1 view .LVU794
 2928 0068 80BD7502 		cmpb	$6, 629(%rbp)
 2928      000006
 2929 006f 772F     		ja	.L279
 2930 0071 0FB68575 		movzbl	629(%rbp), %eax
 2930      020000
 2931 0078 488D1500 		leaq	.L281(%rip), %rdx
 2931      000000
 2932 007f 48630482 		movslq	(%rdx,%rax,4), %rax
 2933 0083 4801D0   		addq	%rdx, %rax
 2934 0086 3EFFE0   		notrack jmp	*%rax
 2935              		.section	.rodata.png_write_row,"a",@progbits
 2936              		.align 4
 2937              		.align 4
 2938              	.L281:
 2939 0000 00000000 		.long	.L287-.L281
 2940 0004 00000000 		.long	.L286-.L281
 2941 0008 00000000 		.long	.L285-.L281
 2942 000c 00000000 		.long	.L284-.L281
 2943 0010 00000000 		.long	.L283-.L281
 2944 0014 00000000 		.long	.L282-.L281
 2945 0018 00000000 		.long	.L280-.L281
 2946              		.section	.text.png_write_row
 2947 0089 0F1F8000 		.p2align 4,,10
 2947      000000
 2948              		.p2align 3
 2949              	.L280:
 796:fltk-1.3.4-1/png/pngwrite.c ****             {
 2950              		.loc 1 796 13 view .LVU795
 796:fltk-1.3.4-1/png/pngwrite.c ****             {
 2951              		.loc 1 796 16 is_stmt 0 view .LVU796
 2952 0090 F6851402 		testb	$1, 532(%rbp)
 2952      000001
 2953 0097 0F84D301 		je	.L289
 2953      0000
 2954 009d 0F1F00   		.p2align 4,,10
 2955              		.p2align 3
 2956              	.L279:
 810:fltk-1.3.4-1/png/pngwrite.c ****    row_info.width = png_ptr->usr_width;
 2957              		.loc 1 810 4 is_stmt 1 view .LVU797
 810:fltk-1.3.4-1/png/pngwrite.c ****    row_info.width = png_ptr->usr_width;
 2958              		.loc 1 810 24 is_stmt 0 view .LVU798
 2959 00a0 0FB68577 		movzbl	631(%rbp), %eax
 2959      020000
 813:fltk-1.3.4-1/png/pngwrite.c ****    row_info.pixel_depth = (png_byte)(row_info.bit_depth * row_info.channels);
 2960              		.loc 1 813 32 view .LVU799
 2961 00a7 0FB68D79 		movzbl	633(%rbp), %ecx
 2961      020000
 811:fltk-1.3.4-1/png/pngwrite.c ****    row_info.channels = png_ptr->usr_channels;
 2962              		.loc 1 811 28 view .LVU800
 2963 00ae 8B950402 		movl	516(%rbp), %edx
 2963      0000
 810:fltk-1.3.4-1/png/pngwrite.c ****    row_info.width = png_ptr->usr_width;
 2964              		.loc 1 810 24 view .LVU801
 2965 00b4 88442420 		movb	%al, 32(%rsp)
 811:fltk-1.3.4-1/png/pngwrite.c ****    row_info.channels = png_ptr->usr_channels;
 2966              		.loc 1 811 4 is_stmt 1 view .LVU802
 812:fltk-1.3.4-1/png/pngwrite.c ****    row_info.bit_depth = png_ptr->usr_bit_depth;
 2967              		.loc 1 812 31 is_stmt 0 view .LVU803
 2968 00b8 0FB6857C 		movzbl	636(%rbp), %eax
 2968      020000
 813:fltk-1.3.4-1/png/pngwrite.c ****    row_info.pixel_depth = (png_byte)(row_info.bit_depth * row_info.channels);
 2969              		.loc 1 813 23 view .LVU804
 2970 00bf 884C2421 		movb	%cl, 33(%rsp)
 812:fltk-1.3.4-1/png/pngwrite.c ****    row_info.bit_depth = png_ptr->usr_bit_depth;
 2971              		.loc 1 812 22 view .LVU805
 2972 00c3 88442422 		movb	%al, 34(%rsp)
 814:fltk-1.3.4-1/png/pngwrite.c ****    row_info.rowbytes = PNG_ROWBYTES(row_info.pixel_depth, row_info.width);
 2973              		.loc 1 814 27 view .LVU806
 2974 00c7 0FAFC1   		imull	%ecx, %eax
 2975 00ca 89D1     		movl	%edx, %ecx
 811:fltk-1.3.4-1/png/pngwrite.c ****    row_info.channels = png_ptr->usr_channels;
 2976              		.loc 1 811 19 view .LVU807
 2977 00cc 89542410 		movl	%edx, 16(%rsp)
 812:fltk-1.3.4-1/png/pngwrite.c ****    row_info.bit_depth = png_ptr->usr_bit_depth;
 2978              		.loc 1 812 4 is_stmt 1 view .LVU808
 813:fltk-1.3.4-1/png/pngwrite.c ****    row_info.pixel_depth = (png_byte)(row_info.bit_depth * row_info.channels);
 2979              		.loc 1 813 4 view .LVU809
 814:fltk-1.3.4-1/png/pngwrite.c ****    row_info.rowbytes = PNG_ROWBYTES(row_info.pixel_depth, row_info.width);
 2980              		.loc 1 814 4 view .LVU810
 814:fltk-1.3.4-1/png/pngwrite.c ****    row_info.rowbytes = PNG_ROWBYTES(row_info.pixel_depth, row_info.width);
 2981              		.loc 1 814 25 is_stmt 0 view .LVU811
 2982 00d0 88442423 		movb	%al, 35(%rsp)
 815:fltk-1.3.4-1/png/pngwrite.c **** 
 2983              		.loc 1 815 4 is_stmt 1 view .LVU812
 815:fltk-1.3.4-1/png/pngwrite.c **** 
 2984              		.loc 1 815 24 is_stmt 0 view .LVU813
 2985 00d4 3C07     		cmpb	$7, %al
 2986 00d6 0F86E400 		jbe	.L290
 2986      0000
 815:fltk-1.3.4-1/png/pngwrite.c **** 
 2987              		.loc 1 815 24 discriminator 1 view .LVU814
 2988 00dc C0E803   		shrb	$3, %al
 2989 00df 0FB6D0   		movzbl	%al, %edx
 2990 00e2 480FAFD1 		imulq	%rcx, %rdx
 2991              	.L291:
 825:fltk-1.3.4-1/png/pngwrite.c **** 
 2992              		.loc 1 825 28 discriminator 4 view .LVU815
 2993 00e6 488B8528 		movq	552(%rbp), %rax
 2993      020000
 815:fltk-1.3.4-1/png/pngwrite.c **** 
 2994              		.loc 1 815 22 discriminator 4 view .LVU816
 2995 00ed 48895424 		movq	%rdx, 24(%rsp)
 2995      18
 817:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->width = %u", row_info.width);
 2996              		.loc 1 817 4 is_stmt 1 discriminator 4 view .LVU817
 818:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->channels = %d", row_info.channels);
 2997              		.loc 1 818 4 discriminator 4 view .LVU818
 819:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->bit_depth = %d", row_info.bit_depth);
 2998              		.loc 1 819 4 discriminator 4 view .LVU819
 820:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->pixel_depth = %d", row_info.pixel_depth);
 2999              		.loc 1 820 4 discriminator 4 view .LVU820
 821:fltk-1.3.4-1/png/pngwrite.c ****    png_debug1(3, "row_info->rowbytes = %lu", (unsigned long)row_info.rowbytes);
 3000              		.loc 1 821 4 discriminator 4 view .LVU821
 822:fltk-1.3.4-1/png/pngwrite.c **** 
 3001              		.loc 1 822 4 discriminator 4 view .LVU822
 825:fltk-1.3.4-1/png/pngwrite.c **** 
 3002              		.loc 1 825 4 discriminator 4 view .LVU823
 3003              	.LVL216:
 3004              	.LBB228:
 3005              	.LBI228:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3006              		.loc 2 31 1 discriminator 4 view .LVU824
 3007              	.LBB229:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3008              		.loc 2 34 3 discriminator 4 view .LVU825
 3009              	.LBE229:
 3010              	.LBE228:
 825:fltk-1.3.4-1/png/pngwrite.c **** 
 3011              		.loc 1 825 28 is_stmt 0 discriminator 4 view .LVU826
 3012 00f2 488D7801 		leaq	1(%rax), %rdi
 3013              	.LVL217:
 3014              	.LBB231:
 3015              	.LBB230:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3016              		.loc 2 34 10 discriminator 4 view .LVU827
 3017 00f6 E8000000 		call	memcpy@PLT
 3017      00
 3018              	.LVL218:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3019              		.loc 2 34 10 discriminator 4 view .LVU828
 3020              	.LBE230:
 3021              	.LBE231:
 829:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 3022              		.loc 1 829 4 is_stmt 1 discriminator 4 view .LVU829
 829:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 3023              		.loc 1 829 7 is_stmt 0 discriminator 4 view .LVU830
 3024 00fb 80BD7402 		cmpb	$0, 628(%rbp)
 3024      000000
 3025 0102 0F84F800 		je	.L292
 3025      0000
 829:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 3026              		.loc 1 829 38 discriminator 1 view .LVU831
 3027 0108 0FB69575 		movzbl	629(%rbp), %edx
 3027      020000
 3028 010f 8B853401 		movl	308(%rbp), %eax
 3028      0000
 829:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 3029              		.loc 1 829 28 discriminator 1 view .LVU832
 3030 0115 80FA05   		cmpb	$5, %dl
 3031 0118 0F86BA00 		jbe	.L346
 3031      0000
 3032              	.L293:
 844:fltk-1.3.4-1/png/pngwrite.c ****       png_do_write_transformations(png_ptr, &row_info);
 3033              		.loc 1 844 4 is_stmt 1 view .LVU833
 844:fltk-1.3.4-1/png/pngwrite.c ****       png_do_write_transformations(png_ptr, &row_info);
 3034              		.loc 1 844 7 is_stmt 0 view .LVU834
 3035 011e 85C0     		testl	%eax, %eax
 3036 0120 0F85E800 		jne	.L347
 3036      0000
 3037              	.L294:
 851:fltk-1.3.4-1/png/pngwrite.c ****       row_info.pixel_depth != png_ptr->transformed_pixel_depth)
 3038              		.loc 1 851 4 is_stmt 1 view .LVU835
 851:fltk-1.3.4-1/png/pngwrite.c ****       row_info.pixel_depth != png_ptr->transformed_pixel_depth)
 3039              		.loc 1 851 16 is_stmt 0 view .LVU836
 3040 0126 0FB64424 		movzbl	35(%rsp), %eax
 3040      23
 851:fltk-1.3.4-1/png/pngwrite.c ****       row_info.pixel_depth != png_ptr->transformed_pixel_depth)
 3041              		.loc 1 851 7 view .LVU837
 3042 012b 3A857A02 		cmpb	634(%rbp), %al
 3042      0000
 3043 0131 0F85CD02 		jne	.L295
 3043      0000
 851:fltk-1.3.4-1/png/pngwrite.c ****       row_info.pixel_depth != png_ptr->transformed_pixel_depth)
 3044              		.loc 1 851 53 discriminator 1 view .LVU838
 3045 0137 3A857F02 		cmpb	639(%rbp), %al
 3045      0000
 3046 013d 0F85C102 		jne	.L295
 3046      0000
 865:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 3047              		.loc 1 865 4 is_stmt 1 view .LVU839
 865:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 3048              		.loc 1 865 72 is_stmt 0 view .LVU840
 3049 0143 48B80400 		movabsq	$1095216660484, %rax
 3049      0000FF00 
 3049      0000
 3050 014d 48238518 		andq	1048(%rbp), %rax
 3050      040000
 3051 0154 0FB65424 		movzbl	32(%rsp), %edx
 3051      20
 865:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->filter_type == PNG_INTRAPIXEL_DIFFERENCING))
 3052              		.loc 1 865 7 view .LVU841
 3053 0159 48B90400 		movabsq	$274877906948, %rcx
 3053      00004000 
 3053      0000
 3054 0163 4839C8   		cmpq	%rcx, %rax
 3055 0166 0F841401 		je	.L348
 3055      0000
 3056              	.L297:
 876:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->num_palette_max >= 0)
 3057              		.loc 1 876 4 is_stmt 1 view .LVU842
 3058 016c 4C8D6424 		leaq	16(%rsp), %r12
 3058      10
 876:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->num_palette_max >= 0)
 3059              		.loc 1 876 7 is_stmt 0 view .LVU843
 3060 0171 80FA03   		cmpb	$3, %dl
 3061 0174 0F84AE00 		je	.L303
 3061      0000
 3062              	.L304:
 882:fltk-1.3.4-1/png/pngwrite.c **** 
 3063              		.loc 1 882 4 is_stmt 1 view .LVU844
 3064 017a 4C89E6   		movq	%r12, %rsi
 3065 017d 4889EF   		movq	%rbp, %rdi
 3066 0180 E8000000 		call	png_write_find_filter@PLT
 3066      00
 3067              	.LVL219:
 884:fltk-1.3.4-1/png/pngwrite.c ****       (*(png_ptr->write_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 3068              		.loc 1 884 4 view .LVU845
 884:fltk-1.3.4-1/png/pngwrite.c ****       (*(png_ptr->write_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 3069              		.loc 1 884 15 is_stmt 0 view .LVU846
 3070 0185 488B8518 		movq	792(%rbp), %rax
 3070      030000
 884:fltk-1.3.4-1/png/pngwrite.c ****       (*(png_ptr->write_row_fn))(png_ptr, png_ptr->row_number, png_ptr->pass);
 3071              		.loc 1 884 7 view .LVU847
 3072 018c 4885C0   		testq	%rax, %rax
 3073 018f 7412     		je	.L275
 885:fltk-1.3.4-1/png/pngwrite.c **** }
 3074              		.loc 1 885 7 is_stmt 1 view .LVU848
 885:fltk-1.3.4-1/png/pngwrite.c **** }
 3075              		.loc 1 885 8 is_stmt 0 view .LVU849
 3076 0191 0FB69575 		movzbl	629(%rbp), %edx
 3076      020000
 3077 0198 8BB51402 		movl	532(%rbp), %esi
 3077      0000
 3078 019e 4889EF   		movq	%rbp, %rdi
 3079 01a1 FFD0     		call	*%rax
 3080              	.LVL220:
 3081              	.L275:
 886:fltk-1.3.4-1/png/pngwrite.c **** 
 3082              		.loc 1 886 1 view .LVU850
 3083 01a3 488B4424 		movq	40(%rsp), %rax
 3083      28
 3084 01a8 64483304 		xorq	%fs:40, %rax
 3084      25280000 
 3084      00
 3085 01b1 0F855C02 		jne	.L349
 3085      0000
 3086 01b7 4883C438 		addq	$56, %rsp
 3087              		.cfi_remember_state
 3088              		.cfi_def_cfa_offset 24
 3089 01bb 5D       		popq	%rbp
 3090              		.cfi_def_cfa_offset 16
 3091 01bc 415C     		popq	%r12
 3092              		.cfi_def_cfa_offset 8
 3093 01be C3       		ret
 3094              	.LVL221:
 3095 01bf 90       		.p2align 4,,10
 3096              		.p2align 3
 3097              	.L290:
 3098              		.cfi_restore_state
 815:fltk-1.3.4-1/png/pngwrite.c **** 
 3099              		.loc 1 815 24 discriminator 2 view .LVU851
 3100 01c0 0FB6D0   		movzbl	%al, %edx
 3101 01c3 480FAFD1 		imulq	%rcx, %rdx
 3102 01c7 4883C207 		addq	$7, %rdx
 3103 01cb 48C1EA03 		shrq	$3, %rdx
 3104 01cf E912FFFF 		jmp	.L291
 3104      FF
 3105              		.p2align 4,,10
 3106 01d4 0F1F4000 		.p2align 3
 3107              	.L346:
 829:fltk-1.3.4-1/png/pngwrite.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0)
 3108              		.loc 1 829 49 discriminator 2 view .LVU852
 3109 01d8 A802     		testb	$2, %al
 3110 01da 0F843EFF 		je	.L293
 3110      FFFF
 832:fltk-1.3.4-1/png/pngwrite.c ****       /* This should always get caught above, but still ... */
 3111              		.loc 1 832 7 is_stmt 1 view .LVU853
 3112 01e0 488B8528 		movq	552(%rbp), %rax
 3112      020000
 3113 01e7 4C8D6424 		leaq	16(%rsp), %r12
 3113      10
 3114 01ec 4C89E7   		movq	%r12, %rdi
 3115 01ef 488D7001 		leaq	1(%rax), %rsi
 3116 01f3 E8000000 		call	png_do_write_interlace@PLT
 3116      00
 3117              	.LVL222:
 834:fltk-1.3.4-1/png/pngwrite.c ****       {
 3118              		.loc 1 834 7 view .LVU854
 834:fltk-1.3.4-1/png/pngwrite.c ****       {
 3119              		.loc 1 834 10 is_stmt 0 view .LVU855
 3120 01f8 8B542410 		movl	16(%rsp), %edx
 3121 01fc 85D2     		testl	%edx, %edx
 3122 01fe 7470     		je	.L289
 3123              		.p2align 4,,10
 3124              		.p2align 3
 3125              	.L292:
 834:fltk-1.3.4-1/png/pngwrite.c ****       {
 3126              		.loc 1 834 10 view .LVU856
 3127 0200 8B853401 		movl	308(%rbp), %eax
 3127      0000
 844:fltk-1.3.4-1/png/pngwrite.c ****       png_do_write_transformations(png_ptr, &row_info);
 3128              		.loc 1 844 4 is_stmt 1 view .LVU857
 844:fltk-1.3.4-1/png/pngwrite.c ****       png_do_write_transformations(png_ptr, &row_info);
 3129              		.loc 1 844 7 is_stmt 0 view .LVU858
 3130 0206 85C0     		testl	%eax, %eax
 3131 0208 0F8418FF 		je	.L294
 3131      FFFF
 3132              	.L347:
 845:fltk-1.3.4-1/png/pngwrite.c **** #endif
 3133              		.loc 1 845 7 is_stmt 1 view .LVU859
 3134 020e 4C8D6424 		leaq	16(%rsp), %r12
 3134      10
 3135 0213 4889EF   		movq	%rbp, %rdi
 3136 0216 4C89E6   		movq	%r12, %rsi
 3137 0219 E8000000 		call	png_do_write_transformations@PLT
 3137      00
 3138              	.LVL223:
 3139 021e E903FFFF 		jmp	.L294
 3139      FF
 3140              		.p2align 4,,10
 3141 0223 0F1F4400 		.p2align 3
 3141      00
 3142              	.L303:
 876:fltk-1.3.4-1/png/pngwrite.c ****        png_ptr->num_palette_max >= 0)
 3143              		.loc 1 876 54 is_stmt 0 discriminator 1 view .LVU860
 3144 0228 8B856C02 		movl	620(%rbp), %eax
 3144      0000
 3145 022e 85C0     		testl	%eax, %eax
 3146 0230 0F8844FF 		js	.L304
 3146      FFFF
 878:fltk-1.3.4-1/png/pngwrite.c **** #endif
 3147              		.loc 1 878 7 is_stmt 1 view .LVU861
 3148 0236 4C89E6   		movq	%r12, %rsi
 3149 0239 4889EF   		movq	%rbp, %rdi
 3150 023c E8000000 		call	png_do_check_palette_indexes@PLT
 3150      00
 3151              	.LVL224:
 3152 0241 E934FFFF 		jmp	.L304
 3152      FF
 3153 0246 662E0F1F 		.p2align 4,,10
 3153      84000000 
 3153      0000
 3154              		.p2align 3
 3155              	.L286:
 756:fltk-1.3.4-1/png/pngwrite.c ****             {
 3156              		.loc 1 756 13 view .LVU862
 756:fltk-1.3.4-1/png/pngwrite.c ****             {
 3157              		.loc 1 756 16 is_stmt 0 view .LVU863
 3158 0250 F6851402 		testb	$7, 532(%rbp)
 3158      000007
 3159 0257 7517     		jne	.L289
 756:fltk-1.3.4-1/png/pngwrite.c ****             {
 3160              		.loc 1 756 51 discriminator 1 view .LVU864
 3161 0259 83BDF801 		cmpl	$4, 504(%rbp)
 3161      000004
 3162 0260 0F873AFE 		ja	.L279
 3162      FFFF
 3163 0266 662E0F1F 		.p2align 4,,10
 3163      84000000 
 3163      0000
 3164              		.p2align 3
 3165              	.L289:
 750:fltk-1.3.4-1/png/pngwrite.c ****                return;
 3166              		.loc 1 750 16 is_stmt 1 view .LVU865
 3167 0270 4889EF   		movq	%rbp, %rdi
 3168 0273 E8000000 		call	png_write_finish_row@PLT
 3168      00
 3169              	.LVL225:
 751:fltk-1.3.4-1/png/pngwrite.c ****             }
 3170              		.loc 1 751 16 view .LVU866
 3171 0278 E926FFFF 		jmp	.L275
 3171      FF
 3172 027d 0F1F00   		.p2align 4,,10
 3173              		.p2align 3
 3174              	.L348:
 869:fltk-1.3.4-1/png/pngwrite.c ****    }
 3175              		.loc 1 869 7 view .LVU867
 3176              	.LVL226:
 3177              	.LBB232:
 3178              	.LBI232:
 617:fltk-1.3.4-1/png/pngwrite.c **** {
 3179              		.loc 1 617 1 view .LVU868
 3180              	.LBB233:
 619:fltk-1.3.4-1/png/pngwrite.c **** 
 3181              		.loc 1 619 4 view .LVU869
 621:fltk-1.3.4-1/png/pngwrite.c ****    {
 3182              		.loc 1 621 4 view .LVU870
 621:fltk-1.3.4-1/png/pngwrite.c ****    {
 3183              		.loc 1 621 7 is_stmt 0 view .LVU871
 3184 0280 F6C202   		testb	$2, %dl
 3185 0283 0F84E3FE 		je	.L297
 3185      FFFF
 3186              	.LBE233:
 3187              	.LBE232:
 869:fltk-1.3.4-1/png/pngwrite.c ****    }
 3188              		.loc 1 869 7 view .LVU872
 3189 0289 488B8528 		movq	552(%rbp), %rax
 3189      020000
 3190              	.LBB245:
 3191              	.LBB242:
 3192              	.LBB234:
 625:fltk-1.3.4-1/png/pngwrite.c ****       {
 3193              		.loc 1 625 19 view .LVU873
 3194 0290 0FB64C24 		movzbl	33(%rsp), %ecx
 3194      21
 624:fltk-1.3.4-1/png/pngwrite.c ****       if (row_info->bit_depth == 8)
 3195              		.loc 1 624 19 view .LVU874
 3196 0295 8B7C2410 		movl	16(%rsp), %edi
 3197              	.LBE234:
 3198              	.LBE242:
 3199              	.LBE245:
 869:fltk-1.3.4-1/png/pngwrite.c ****    }
 3200              		.loc 1 869 7 view .LVU875
 3201 0299 4883C001 		addq	$1, %rax
 3202              	.LBB246:
 3203              	.LBB243:
 3204              	.LBB240:
 623:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_32 row_width = row_info->width;
 3205              		.loc 1 623 7 is_stmt 1 view .LVU876
 624:fltk-1.3.4-1/png/pngwrite.c ****       if (row_info->bit_depth == 8)
 3206              		.loc 1 624 7 view .LVU877
 3207              	.LVL227:
 625:fltk-1.3.4-1/png/pngwrite.c ****       {
 3208              		.loc 1 625 7 view .LVU878
 625:fltk-1.3.4-1/png/pngwrite.c ****       {
 3209              		.loc 1 625 10 is_stmt 0 view .LVU879
 3210 029d 80F908   		cmpb	$8, %cl
 3211 02a0 0F840A01 		je	.L350
 3211      0000
 647:fltk-1.3.4-1/png/pngwrite.c ****       {
 3212              		.loc 1 647 12 is_stmt 1 view .LVU880
 647:fltk-1.3.4-1/png/pngwrite.c ****       {
 3213              		.loc 1 647 15 is_stmt 0 view .LVU881
 3214 02a6 80F910   		cmpb	$16, %cl
 3215 02a9 0F85BDFE 		jne	.L297
 3215      FFFF
 3216              	.LBB235:
 649:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 i;
 3217              		.loc 1 649 10 is_stmt 1 view .LVU882
 650:fltk-1.3.4-1/png/pngwrite.c **** 
 3218              		.loc 1 650 10 view .LVU883
 652:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 6;
 3219              		.loc 1 652 10 view .LVU884
 652:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 6;
 3220              		.loc 1 652 13 is_stmt 0 view .LVU885
 3221 02af 80FA02   		cmpb	$2, %dl
 3222 02b2 0F843701 		je	.L311
 3222      0000
 655:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 8;
 3223              		.loc 1 655 15 is_stmt 1 view .LVU886
 655:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 8;
 3224              		.loc 1 655 18 is_stmt 0 view .LVU887
 3225 02b8 80FA06   		cmpb	$6, %dl
 3226 02bb 0F85ABFE 		jne	.L297
 3226      FFFF
 656:fltk-1.3.4-1/png/pngwrite.c **** 
 3227              		.loc 1 656 29 view .LVU888
 3228 02c1 41B90800 		movl	$8, %r9d
 3228      0000
 3229              	.L301:
 3230              	.LVL228:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3231              		.loc 1 661 10 is_stmt 1 view .LVU889
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3232              		.loc 1 661 32 view .LVU890
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3233              		.loc 1 661 17 is_stmt 0 view .LVU891
 3234 02c7 4531C0   		xorl	%r8d, %r8d
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3235              		.loc 1 661 10 view .LVU892
 3236 02ca 85FF     		testl	%edi, %edi
 3237 02cc 0F842801 		je	.L344
 3237      0000
 3238              	.LVL229:
 3239              		.p2align 4,,10
 3240 02d2 660F1F44 		.p2align 3
 3240      0000
 3241              	.L302:
 3242              	.LBB236:
 663:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 s1   = (*(rp + 2) << 8) | *(rp + 3);
 3243              		.loc 1 663 13 is_stmt 1 view .LVU893
 664:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 s2   = (*(rp + 4) << 8) | *(rp + 5);
 3244              		.loc 1 664 13 view .LVU894
 3245 02d8 0FB708   		movzwl	(%rax), %ecx
 3246 02db 0FB75004 		movzwl	4(%rax), %edx
 3247              	.LBE236:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3248              		.loc 1 661 48 is_stmt 0 view .LVU895
 3249 02df 4183C001 		addl	$1, %r8d
 3250              	.LVL230:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3251              		.loc 1 661 48 view .LVU896
 3252 02e3 0FB77002 		movzwl	2(%rax), %esi
 3253 02e7 66C1C108 		rolw	$8, %cx
 3254 02eb 66C1C208 		rolw	$8, %dx
 3255 02ef 66C1C608 		rolw	$8, %si
 3256              	.LVL231:
 3257              	.LBB237:
 665:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 red  = (png_uint_32)((s0 - s1) & 0xffffL);
 3258              		.loc 1 665 13 is_stmt 1 view .LVU897
 666:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 blue = (png_uint_32)((s2 - s1) & 0xffffL);
 3259              		.loc 1 666 13 view .LVU898
 3260 02f3 29F1     		subl	%esi, %ecx
 3261              	.LVL232:
 667:fltk-1.3.4-1/png/pngwrite.c ****             *(rp    ) = (png_byte)((red >> 8) & 0xff);
 3262              		.loc 1 667 13 view .LVU899
 3263 02f5 29F2     		subl	%esi, %edx
 3264              	.LVL233:
 668:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 3265              		.loc 1 668 13 view .LVU900
 669:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 4) = (png_byte)((blue >> 8) & 0xff);
 3266              		.loc 1 669 25 is_stmt 0 view .LVU901
 3267 02f7 884801   		movb	%cl, 1(%rax)
 3268              	.LVL234:
 668:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 3269              		.loc 1 668 41 view .LVU902
 3270 02fa 0FB6F5   		movzbl	%ch, %esi
 3271              	.LVL235:
 670:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 3272              		.loc 1 670 42 view .LVU903
 3273 02fd 0FB6CE   		movzbl	%dh, %ecx
 3274              	.LVL236:
 668:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 1) = (png_byte)(red & 0xff);
 3275              		.loc 1 668 25 view .LVU904
 3276 0300 408830   		movb	%sil, (%rax)
 669:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 4) = (png_byte)((blue >> 8) & 0xff);
 3277              		.loc 1 669 13 is_stmt 1 view .LVU905
 670:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 3278              		.loc 1 670 13 view .LVU906
 670:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 5) = (png_byte)(blue & 0xff);
 3279              		.loc 1 670 25 is_stmt 0 view .LVU907
 3280 0303 884804   		movb	%cl, 4(%rax)
 3281              	.LVL237:
 671:fltk-1.3.4-1/png/pngwrite.c ****          }
 3282              		.loc 1 671 13 is_stmt 1 view .LVU908
 671:fltk-1.3.4-1/png/pngwrite.c ****          }
 3283              		.loc 1 671 25 is_stmt 0 view .LVU909
 3284 0306 885005   		movb	%dl, 5(%rax)
 3285              	.LBE237:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3286              		.loc 1 661 47 is_stmt 1 view .LVU910
 3287              	.LVL238:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3288              		.loc 1 661 55 is_stmt 0 view .LVU911
 3289 0309 4C01C8   		addq	%r9, %rax
 3290              	.LVL239:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3291              		.loc 1 661 32 is_stmt 1 view .LVU912
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3292              		.loc 1 661 10 is_stmt 0 view .LVU913
 3293 030c 4439C7   		cmpl	%r8d, %edi
 3294 030f 75C7     		jne	.L302
 3295              	.LVL240:
 3296              	.L343:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3297              		.loc 1 661 10 view .LVU914
 3298 0311 0FB65424 		movzbl	32(%rsp), %edx
 3298      20
 3299 0316 E951FEFF 		jmp	.L297
 3299      FF
 3300              	.LVL241:
 3301 031b 0F1F4400 		.p2align 4,,10
 3301      00
 3302              		.p2align 3
 3303              	.L287:
 661:fltk-1.3.4-1/png/pngwrite.c ****          {
 3304              		.loc 1 661 10 view .LVU915
 3305              	.LBE235:
 3306              	.LBE240:
 3307              	.LBE243:
 3308              	.LBE246:
 748:fltk-1.3.4-1/png/pngwrite.c ****             {
 3309              		.loc 1 748 13 is_stmt 1 view .LVU916
 748:fltk-1.3.4-1/png/pngwrite.c ****             {
 3310              		.loc 1 748 16 is_stmt 0 view .LVU917
 3311 0320 F6851402 		testb	$7, 532(%rbp)
 3311      000007
 3312 0327 0F8473FD 		je	.L279
 3312      FFFF
 3313 032d E93EFFFF 		jmp	.L289
 3313      FF
 3314              		.p2align 4,,10
 3315 0332 660F1F44 		.p2align 3
 3315      0000
 3316              	.L285:
 764:fltk-1.3.4-1/png/pngwrite.c ****             {
 3317              		.loc 1 764 13 is_stmt 1 view .LVU918
 764:fltk-1.3.4-1/png/pngwrite.c ****             {
 3318              		.loc 1 764 38 is_stmt 0 view .LVU919
 3319 0338 8B851402 		movl	532(%rbp), %eax
 3319      0000
 3320 033e 83E007   		andl	$7, %eax
 764:fltk-1.3.4-1/png/pngwrite.c ****             {
 3321              		.loc 1 764 16 view .LVU920
 3322 0341 83F804   		cmpl	$4, %eax
 3323 0344 0F8456FD 		je	.L279
 3323      FFFF
 3324 034a E921FFFF 		jmp	.L289
 3324      FF
 3325 034f 90       		.p2align 4,,10
 3326              		.p2align 3
 3327              	.L284:
 772:fltk-1.3.4-1/png/pngwrite.c ****             {
 3328              		.loc 1 772 13 is_stmt 1 view .LVU921
 772:fltk-1.3.4-1/png/pngwrite.c ****             {
 3329              		.loc 1 772 16 is_stmt 0 view .LVU922
 3330 0350 F6851402 		testb	$3, 532(%rbp)
 3330      000003
 3331 0357 0F8513FF 		jne	.L289
 3331      FFFF
 772:fltk-1.3.4-1/png/pngwrite.c ****             {
 3332              		.loc 1 772 51 discriminator 1 view .LVU923
 3333 035d 83BDF801 		cmpl	$2, 504(%rbp)
 3333      000002
 3334 0364 0F8736FD 		ja	.L279
 3334      FFFF
 3335 036a E901FFFF 		jmp	.L289
 3335      FF
 3336 036f 90       		.p2align 4,,10
 3337              		.p2align 3
 3338              	.L283:
 780:fltk-1.3.4-1/png/pngwrite.c ****             {
 3339              		.loc 1 780 13 is_stmt 1 view .LVU924
 780:fltk-1.3.4-1/png/pngwrite.c ****             {
 3340              		.loc 1 780 38 is_stmt 0 view .LVU925
 3341 0370 8B851402 		movl	532(%rbp), %eax
 3341      0000
 3342 0376 83E003   		andl	$3, %eax
 780:fltk-1.3.4-1/png/pngwrite.c ****             {
 3343              		.loc 1 780 16 view .LVU926
 3344 0379 83F802   		cmpl	$2, %eax
 3345 037c 0F841EFD 		je	.L279
 3345      FFFF
 3346 0382 E9E9FEFF 		jmp	.L289
 3346      FF
 3347 0387 660F1F84 		.p2align 4,,10
 3347      00000000 
 3347      00
 3348              		.p2align 3
 3349              	.L282:
 788:fltk-1.3.4-1/png/pngwrite.c ****             {
 3350              		.loc 1 788 13 is_stmt 1 view .LVU927
 788:fltk-1.3.4-1/png/pngwrite.c ****             {
 3351              		.loc 1 788 16 is_stmt 0 view .LVU928
 3352 0390 F6851402 		testb	$1, 532(%rbp)
 3352      000001
 3353 0397 0F85D3FE 		jne	.L289
 3353      FFFF
 788:fltk-1.3.4-1/png/pngwrite.c ****             {
 3354              		.loc 1 788 51 discriminator 1 view .LVU929
 3355 039d 83BDF801 		cmpl	$1, 504(%rbp)
 3355      000001
 3356 03a4 0F87F6FC 		ja	.L279
 3356      FFFF
 3357 03aa E9C1FEFF 		jmp	.L289
 3357      FF
 3358              	.LVL242:
 3359 03af 90       		.p2align 4,,10
 3360              		.p2align 3
 3361              	.L350:
 3362              	.LBB247:
 3363              	.LBB244:
 3364              	.LBB241:
 3365              	.LBB238:
 627:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 i;
 3366              		.loc 1 627 10 is_stmt 1 view .LVU930
 628:fltk-1.3.4-1/png/pngwrite.c **** 
 3367              		.loc 1 628 10 view .LVU931
 630:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 3;
 3368              		.loc 1 630 10 view .LVU932
 630:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 3;
 3369              		.loc 1 630 13 is_stmt 0 view .LVU933
 3370 03b0 80FA02   		cmpb	$2, %dl
 3371 03b3 7433     		je	.L309
 633:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 4;
 3372              		.loc 1 633 15 is_stmt 1 view .LVU934
 633:fltk-1.3.4-1/png/pngwrite.c ****             bytes_per_pixel = 4;
 3373              		.loc 1 633 18 is_stmt 0 view .LVU935
 3374 03b5 80FA06   		cmpb	$6, %dl
 3375 03b8 0F85AEFD 		jne	.L297
 3375      FFFF
 634:fltk-1.3.4-1/png/pngwrite.c **** 
 3376              		.loc 1 634 29 view .LVU936
 3377 03be BE040000 		movl	$4, %esi
 3377      00
 3378              	.L299:
 3379              	.LVL243:
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3380              		.loc 1 639 10 is_stmt 1 view .LVU937
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3381              		.loc 1 639 32 view .LVU938
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3382              		.loc 1 639 17 is_stmt 0 view .LVU939
 3383 03c3 31D2     		xorl	%edx, %edx
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3384              		.loc 1 639 10 view .LVU940
 3385 03c5 85FF     		testl	%edi, %edi
 3386 03c7 7431     		je	.L344
 3387              	.LVL244:
 3388 03c9 0F1F8000 		.p2align 4,,10
 3388      000000
 3389              		.p2align 3
 3390              	.L300:
 641:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 2) = (png_byte)((*(rp + 2) - *(rp + 1)) & 0xff);
 3391              		.loc 1 641 13 is_stmt 1 view .LVU941
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3392              		.loc 1 639 48 is_stmt 0 view .LVU942
 3393 03d0 83C201   		addl	$1, %edx
 3394              	.LVL245:
 641:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 2) = (png_byte)((*(rp + 2) - *(rp + 1)) & 0xff);
 3395              		.loc 1 641 49 view .LVU943
 3396 03d3 0FB64801 		movzbl	1(%rax), %ecx
 641:fltk-1.3.4-1/png/pngwrite.c ****             *(rp + 2) = (png_byte)((*(rp + 2) - *(rp + 1)) & 0xff);
 3397              		.loc 1 641 47 view .LVU944
 3398 03d7 2808     		subb	%cl, (%rax)
 642:fltk-1.3.4-1/png/pngwrite.c ****          }
 3399              		.loc 1 642 13 is_stmt 1 view .LVU945
 642:fltk-1.3.4-1/png/pngwrite.c ****          }
 3400              		.loc 1 642 47 is_stmt 0 view .LVU946
 3401 03d9 284802   		subb	%cl, 2(%rax)
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3402              		.loc 1 639 47 is_stmt 1 view .LVU947
 3403              	.LVL246:
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3404              		.loc 1 639 55 is_stmt 0 view .LVU948
 3405 03dc 4801F0   		addq	%rsi, %rax
 3406              	.LVL247:
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3407              		.loc 1 639 32 is_stmt 1 view .LVU949
 639:fltk-1.3.4-1/png/pngwrite.c ****          {
 3408              		.loc 1 639 10 is_stmt 0 view .LVU950
 3409 03df 39D7     		cmpl	%edx, %edi
 3410 03e1 75ED     		jne	.L300
 3411 03e3 E929FFFF 		jmp	.L343
 3411      FF
 3412              	.LVL248:
 3413              	.L309:
 631:fltk-1.3.4-1/png/pngwrite.c **** 
 3414              		.loc 1 631 29 view .LVU951
 3415 03e8 BE030000 		movl	$3, %esi
 3415      00
 3416 03ed EBD4     		jmp	.L299
 3417              	.L311:
 3418              	.LBE238:
 3419              	.LBB239:
 653:fltk-1.3.4-1/png/pngwrite.c **** 
 3420              		.loc 1 653 29 view .LVU952
 3421 03ef 41B90600 		movl	$6, %r9d
 3421      0000
 3422 03f5 E9CDFEFF 		jmp	.L301
 3422      FF
 3423              	.L344:
 3424 03fa 4C8D6424 		leaq	16(%rsp), %r12
 3424      10
 3425              	.LVL249:
 653:fltk-1.3.4-1/png/pngwrite.c **** 
 3426              		.loc 1 653 29 view .LVU953
 3427 03ff E976FDFF 		jmp	.L304
 3427      FF
 3428              	.LVL250:
 3429              	.L295:
 653:fltk-1.3.4-1/png/pngwrite.c **** 
 3430              		.loc 1 653 29 view .LVU954
 3431              	.LBE239:
 3432              	.LBE241:
 3433              	.LBE244:
 3434              	.LBE247:
 853:fltk-1.3.4-1/png/pngwrite.c **** 
 3435              		.loc 1 853 7 is_stmt 1 view .LVU955
 3436 0404 488D3500 		leaq	.LC8(%rip), %rsi
 3436      000000
 3437 040b 4889EF   		movq	%rbp, %rdi
 3438 040e E8000000 		call	png_error@PLT
 3438      00
 3439              	.LVL251:
 3440              	.L349:
 886:fltk-1.3.4-1/png/pngwrite.c **** 
 3441              		.loc 1 886 1 is_stmt 0 view .LVU956
 3442 0413 E8000000 		call	__stack_chk_fail@PLT
 3442      00
 3443              	.LVL252:
 3444              	.L345:
 697:fltk-1.3.4-1/png/pngwrite.c ****              "png_write_info was never called before png_write_row");
 3445              		.loc 1 697 10 is_stmt 1 view .LVU957
 3446 0418 488D3500 		leaq	.LC7(%rip), %rsi
 3446      000000
 3447              	.LVL253:
 697:fltk-1.3.4-1/png/pngwrite.c ****              "png_write_info was never called before png_write_row");
 3448              		.loc 1 697 10 is_stmt 0 view .LVU958
 3449 041f E8000000 		call	png_error@PLT
 3449      00
 3450              	.LVL254:
 697:fltk-1.3.4-1/png/pngwrite.c ****              "png_write_info was never called before png_write_row");
 3451              		.loc 1 697 10 view .LVU959
 3452              		.cfi_endproc
 3453              	.LFE52:
 3455              		.section	.text.png_write_rows,"ax",@progbits
 3456              		.p2align 4
 3457              		.globl	png_write_rows
 3459              	png_write_rows:
 3460              	.LVL255:
 3461              	.LFB49:
 564:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 i; /* row counter */
 3462              		.loc 1 564 1 is_stmt 1 view -0
 3463              		.cfi_startproc
 564:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 i; /* row counter */
 3464              		.loc 1 564 1 is_stmt 0 view .LVU961
 3465 0000 F30F1EFA 		endbr64
 565:fltk-1.3.4-1/png/pngwrite.c ****    png_bytepp rp; /* row pointer */
 3466              		.loc 1 565 4 is_stmt 1 view .LVU962
 566:fltk-1.3.4-1/png/pngwrite.c **** 
 3467              		.loc 1 566 4 view .LVU963
 568:fltk-1.3.4-1/png/pngwrite.c **** 
 3468              		.loc 1 568 4 view .LVU964
 570:fltk-1.3.4-1/png/pngwrite.c ****       return;
 3469              		.loc 1 570 4 view .LVU965
 570:fltk-1.3.4-1/png/pngwrite.c ****       return;
 3470              		.loc 1 570 7 is_stmt 0 view .LVU966
 3471 0004 4885FF   		testq	%rdi, %rdi
 3472 0007 7437     		je	.L362
 3473              	.LVL256:
 574:fltk-1.3.4-1/png/pngwrite.c ****    {
 3474              		.loc 1 574 26 is_stmt 1 view .LVU967
 574:fltk-1.3.4-1/png/pngwrite.c ****    {
 3475              		.loc 1 574 4 is_stmt 0 view .LVU968
 3476 0009 85D2     		testl	%edx, %edx
 3477 000b 7433     		je	.L362
 3478 000d 8D42FF   		leal	-1(%rdx), %eax
 564:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 i; /* row counter */
 3479              		.loc 1 564 1 view .LVU969
 3480 0010 4154     		pushq	%r12
 3481              		.cfi_def_cfa_offset 16
 3482              		.cfi_offset 12, -16
 3483 0012 4C8D64C6 		leaq	8(%rsi,%rax,8), %r12
 3483      08
 3484 0017 55       		pushq	%rbp
 3485              		.cfi_def_cfa_offset 24
 3486              		.cfi_offset 6, -24
 3487 0018 4889FD   		movq	%rdi, %rbp
 3488 001b 53       		pushq	%rbx
 3489              		.cfi_def_cfa_offset 32
 3490              		.cfi_offset 3, -32
 3491 001c 4889F3   		movq	%rsi, %rbx
 3492              	.LVL257:
 3493 001f 90       		.p2align 4,,10
 3494              		.p2align 3
 3495              	.L353:
 576:fltk-1.3.4-1/png/pngwrite.c ****    }
 3496              		.loc 1 576 7 is_stmt 1 discriminator 3 view .LVU970
 3497 0020 488B33   		movq	(%rbx), %rsi
 3498 0023 4889EF   		movq	%rbp, %rdi
 574:fltk-1.3.4-1/png/pngwrite.c ****    {
 3499              		.loc 1 574 47 is_stmt 0 discriminator 3 view .LVU971
 3500 0026 4883C308 		addq	$8, %rbx
 3501              	.LVL258:
 576:fltk-1.3.4-1/png/pngwrite.c ****    }
 3502              		.loc 1 576 7 discriminator 3 view .LVU972
 3503 002a E8000000 		call	png_write_row
 3503      00
 3504              	.LVL259:
 574:fltk-1.3.4-1/png/pngwrite.c ****    {
 3505              		.loc 1 574 40 is_stmt 1 discriminator 3 view .LVU973
 574:fltk-1.3.4-1/png/pngwrite.c ****    {
 3506              		.loc 1 574 26 discriminator 3 view .LVU974
 574:fltk-1.3.4-1/png/pngwrite.c ****    {
 3507              		.loc 1 574 4 is_stmt 0 discriminator 3 view .LVU975
 3508 002f 4C39E3   		cmpq	%r12, %rbx
 3509 0032 75EC     		jne	.L353
 578:fltk-1.3.4-1/png/pngwrite.c **** 
 3510              		.loc 1 578 1 view .LVU976
 3511 0034 5B       		popq	%rbx
 3512              		.cfi_def_cfa_offset 24
 3513              	.LVL260:
 578:fltk-1.3.4-1/png/pngwrite.c **** 
 3514              		.loc 1 578 1 view .LVU977
 3515 0035 5D       		popq	%rbp
 3516              		.cfi_def_cfa_offset 16
 3517              	.LVL261:
 578:fltk-1.3.4-1/png/pngwrite.c **** 
 3518              		.loc 1 578 1 view .LVU978
 3519 0036 415C     		popq	%r12
 3520              		.cfi_def_cfa_offset 8
 3521 0038 C3       		ret
 3522              	.LVL262:
 3523 0039 0F1F8000 		.p2align 4,,10
 3523      000000
 3524              		.p2align 3
 3525              	.L362:
 3526              		.cfi_restore 3
 3527              		.cfi_restore 6
 3528              		.cfi_restore 12
 578:fltk-1.3.4-1/png/pngwrite.c **** 
 3529              		.loc 1 578 1 view .LVU979
 3530 0040 C3       		ret
 3531              		.cfi_endproc
 3532              	.LFE49:
 3534              		.section	.text.png_write_image.part.0,"ax",@progbits
 3535              		.p2align 4
 3537              	png_write_image.part.0:
 3538              	.LVL263:
 3539              	.LFB90:
 584:fltk-1.3.4-1/png/pngwrite.c **** {
 3540              		.loc 1 584 1 is_stmt 1 view -0
 3541              		.cfi_startproc
 593:fltk-1.3.4-1/png/pngwrite.c **** 
 3542              		.loc 1 593 4 view .LVU981
 599:fltk-1.3.4-1/png/pngwrite.c **** #else
 3543              		.loc 1 599 4 view .LVU982
 584:fltk-1.3.4-1/png/pngwrite.c **** {
 3544              		.loc 1 584 1 is_stmt 0 view .LVU983
 3545 0000 4156     		pushq	%r14
 3546              		.cfi_def_cfa_offset 16
 3547              		.cfi_offset 14, -16
 3548 0002 4155     		pushq	%r13
 3549              		.cfi_def_cfa_offset 24
 3550              		.cfi_offset 13, -24
 3551 0004 4531ED   		xorl	%r13d, %r13d
 3552 0007 4154     		pushq	%r12
 3553              		.cfi_def_cfa_offset 32
 3554              		.cfi_offset 12, -32
 3555 0009 4989F4   		movq	%rsi, %r12
 3556 000c 55       		pushq	%rbp
 3557              		.cfi_def_cfa_offset 40
 3558              		.cfi_offset 6, -40
 3559 000d 4889FD   		movq	%rdi, %rbp
 3560 0010 53       		pushq	%rbx
 3561              		.cfi_def_cfa_offset 48
 3562              		.cfi_offset 3, -48
 599:fltk-1.3.4-1/png/pngwrite.c **** #else
 3563              		.loc 1 599 15 view .LVU984
 3564 0011 E8000000 		call	png_set_interlace_handling@PLT
 3564      00
 3565              	.LVL264:
 604:fltk-1.3.4-1/png/pngwrite.c ****    {
 3566              		.loc 1 604 4 is_stmt 1 view .LVU985
 604:fltk-1.3.4-1/png/pngwrite.c ****    {
 3567              		.loc 1 604 19 view .LVU986
 3568 0016 4189C6   		movl	%eax, %r14d
 604:fltk-1.3.4-1/png/pngwrite.c ****    {
 3569              		.loc 1 604 4 is_stmt 0 view .LVU987
 3570 0019 85C0     		testl	%eax, %eax
 3571 001b 7E34     		jle	.L365
 3572              	.LVL265:
 3573 001d 0F1F00   		.p2align 4,,10
 3574              		.p2align 3
 3575              	.L366:
 607:fltk-1.3.4-1/png/pngwrite.c ****       {
 3576              		.loc 1 607 31 is_stmt 1 view .LVU988
 607:fltk-1.3.4-1/png/pngwrite.c ****       {
 3577              		.loc 1 607 7 is_stmt 0 view .LVU989
 3578 0020 8B85FC01 		movl	508(%rbp), %eax
 3578      0000
 3579 0026 31DB     		xorl	%ebx, %ebx
 3580 0028 85C0     		testl	%eax, %eax
 3581 002a 741C     		je	.L369
 3582              	.LVL266:
 3583 002c 0F1F4000 		.p2align 4,,10
 3584              		.p2align 3
 3585              	.L368:
 609:fltk-1.3.4-1/png/pngwrite.c ****       }
 3586              		.loc 1 609 10 is_stmt 1 view .LVU990
 3587 0030 498B34DC 		movq	(%r12,%rbx,8), %rsi
 3588 0034 4889EF   		movq	%rbp, %rdi
 3589 0037 4883C301 		addq	$1, %rbx
 3590              	.LVL267:
 609:fltk-1.3.4-1/png/pngwrite.c ****       }
 3591              		.loc 1 609 10 is_stmt 0 view .LVU991
 3592 003b E8000000 		call	png_write_row
 3592      00
 3593              	.LVL268:
 607:fltk-1.3.4-1/png/pngwrite.c ****       {
 3594              		.loc 1 607 52 is_stmt 1 view .LVU992
 607:fltk-1.3.4-1/png/pngwrite.c ****       {
 3595              		.loc 1 607 31 view .LVU993
 607:fltk-1.3.4-1/png/pngwrite.c ****       {
 3596              		.loc 1 607 7 is_stmt 0 view .LVU994
 3597 0040 399DFC01 		cmpl	%ebx, 508(%rbp)
 3597      0000
 3598 0046 77E8     		ja	.L368
 3599              	.L369:
 604:fltk-1.3.4-1/png/pngwrite.c ****    {
 3600              		.loc 1 604 36 is_stmt 1 view .LVU995
 604:fltk-1.3.4-1/png/pngwrite.c ****    {
 3601              		.loc 1 604 40 is_stmt 0 view .LVU996
 3602 0048 4183C501 		addl	$1, %r13d
 3603              	.LVL269:
 604:fltk-1.3.4-1/png/pngwrite.c ****    {
 3604              		.loc 1 604 19 is_stmt 1 view .LVU997
 604:fltk-1.3.4-1/png/pngwrite.c ****    {
 3605              		.loc 1 604 4 is_stmt 0 view .LVU998
 3606 004c 4539EE   		cmpl	%r13d, %r14d
 3607 004f 75CF     		jne	.L366
 3608              	.LVL270:
 3609              	.L365:
 612:fltk-1.3.4-1/png/pngwrite.c **** 
 3610              		.loc 1 612 1 view .LVU999
 3611 0051 5B       		popq	%rbx
 3612              		.cfi_def_cfa_offset 40
 3613 0052 5D       		popq	%rbp
 3614              		.cfi_def_cfa_offset 32
 3615              	.LVL271:
 612:fltk-1.3.4-1/png/pngwrite.c **** 
 3616              		.loc 1 612 1 view .LVU1000
 3617 0053 415C     		popq	%r12
 3618              		.cfi_def_cfa_offset 24
 3619              	.LVL272:
 612:fltk-1.3.4-1/png/pngwrite.c **** 
 3620              		.loc 1 612 1 view .LVU1001
 3621 0055 415D     		popq	%r13
 3622              		.cfi_def_cfa_offset 16
 3623 0057 415E     		popq	%r14
 3624              		.cfi_def_cfa_offset 8
 3625              	.LVL273:
 612:fltk-1.3.4-1/png/pngwrite.c **** 
 3626              		.loc 1 612 1 view .LVU1002
 3627 0059 C3       		ret
 3628              		.cfi_endproc
 3629              	.LFE90:
 3631              		.section	.text.png_write_image,"ax",@progbits
 3632              		.p2align 4
 3633              		.globl	png_write_image
 3635              	png_write_image:
 3636              	.LVL274:
 3637              	.LFB50:
 585:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 i; /* row index */
 3638              		.loc 1 585 1 is_stmt 1 view -0
 3639              		.cfi_startproc
 585:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 i; /* row index */
 3640              		.loc 1 585 1 is_stmt 0 view .LVU1004
 3641 0000 F30F1EFA 		endbr64
 586:fltk-1.3.4-1/png/pngwrite.c ****    int pass, num_pass; /* pass variables */
 3642              		.loc 1 586 4 is_stmt 1 view .LVU1005
 587:fltk-1.3.4-1/png/pngwrite.c ****    png_bytepp rp; /* points to current row */
 3643              		.loc 1 587 4 view .LVU1006
 588:fltk-1.3.4-1/png/pngwrite.c **** 
 3644              		.loc 1 588 4 view .LVU1007
 590:fltk-1.3.4-1/png/pngwrite.c ****       return;
 3645              		.loc 1 590 4 view .LVU1008
 590:fltk-1.3.4-1/png/pngwrite.c ****       return;
 3646              		.loc 1 590 7 is_stmt 0 view .LVU1009
 3647 0004 4885FF   		testq	%rdi, %rdi
 3648 0007 7407     		je	.L377
 3649 0009 E9000000 		jmp	png_write_image.part.0
 3649      00
 3650              	.LVL275:
 3651 000e 6690     		.p2align 4,,10
 3652              		.p2align 3
 3653              	.L377:
 612:fltk-1.3.4-1/png/pngwrite.c **** 
 3654              		.loc 1 612 1 view .LVU1010
 3655 0010 C3       		ret
 3656              		.cfi_endproc
 3657              	.LFE50:
 3659              		.section	.text.png_write_image_8bit,"ax",@progbits
 3660              		.p2align 4
 3662              	png_write_image_8bit:
 3663              	.LVL276:
 3664              	.LFB78:
1900:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 3665              		.loc 1 1900 1 is_stmt 1 view -0
 3666              		.cfi_startproc
1900:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 3667              		.loc 1 1900 1 is_stmt 0 view .LVU1012
 3668 0000 F30F1EFA 		endbr64
1901:fltk-1.3.4-1/png/pngwrite.c ****       argument);
 3669              		.loc 1 1901 4 is_stmt 1 view .LVU1013
 3670              	.LVL277:
1903:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 3671              		.loc 1 1903 4 view .LVU1014
1900:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 3672              		.loc 1 1900 1 is_stmt 0 view .LVU1015
 3673 0004 4157     		pushq	%r15
 3674              		.cfi_def_cfa_offset 16
 3675              		.cfi_offset 15, -16
 3676 0006 4156     		pushq	%r14
 3677              		.cfi_def_cfa_offset 24
 3678              		.cfi_offset 14, -24
 3679 0008 4155     		pushq	%r13
 3680              		.cfi_def_cfa_offset 32
 3681              		.cfi_offset 13, -32
 3682 000a 4154     		pushq	%r12
 3683              		.cfi_def_cfa_offset 40
 3684              		.cfi_offset 12, -40
 3685 000c 55       		pushq	%rbp
 3686              		.cfi_def_cfa_offset 48
 3687              		.cfi_offset 6, -48
 3688 000d 53       		pushq	%rbx
 3689              		.cfi_def_cfa_offset 56
 3690              		.cfi_offset 3, -56
 3691 000e 4883EC58 		subq	$88, %rsp
 3692              		.cfi_def_cfa_offset 144
1903:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 3693              		.loc 1 1903 15 view .LVU1016
 3694 0012 488B07   		movq	(%rdi), %rax
 3695              	.LVL278:
1904:fltk-1.3.4-1/png/pngwrite.c **** 
 3696              		.loc 1 1904 4 is_stmt 1 view .LVU1017
1908:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 y = image->height;
 3697              		.loc 1 1908 14 is_stmt 0 view .LVU1018
 3698 0015 488B6F38 		movq	56(%rdi), %rbp
1900:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 3699              		.loc 1 1900 1 view .LVU1019
 3700 0019 48897C24 		movq	%rdi, 32(%rsp)
 3700      20
1904:fltk-1.3.4-1/png/pngwrite.c **** 
 3701              		.loc 1 1904 17 view .LVU1020
 3702 001e 488B10   		movq	(%rax), %rdx
1909:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = (image->format & PNG_FORMAT_FLAG_COLOR) != 0 ? 3 : 1;
 3703              		.loc 1 1909 16 view .LVU1021
 3704 0021 8B4810   		movl	16(%rax), %ecx
1904:fltk-1.3.4-1/png/pngwrite.c **** 
 3705              		.loc 1 1904 17 view .LVU1022
 3706 0024 488B1A   		movq	(%rdx), %rbx
1910:fltk-1.3.4-1/png/pngwrite.c **** 
 3707              		.loc 1 1910 31 view .LVU1023
 3708 0027 8B5014   		movl	20(%rax), %edx
 3709 002a 8B400C   		movl	12(%rax), %eax
 3710              	.LVL279:
1910:fltk-1.3.4-1/png/pngwrite.c **** 
 3711              		.loc 1 1910 40 view .LVU1024
 3712 002d 89D6     		movl	%edx, %esi
1904:fltk-1.3.4-1/png/pngwrite.c **** 
 3713              		.loc 1 1904 17 view .LVU1025
 3714 002f 48895C24 		movq	%rbx, 24(%rsp)
 3714      18
 3715              	.LVL280:
1906:fltk-1.3.4-1/png/pngwrite.c ****       display->first_row);
 3716              		.loc 1 1906 4 is_stmt 1 view .LVU1026
1906:fltk-1.3.4-1/png/pngwrite.c ****       display->first_row);
 3717              		.loc 1 1906 23 is_stmt 0 view .LVU1027
 3718 0034 488B5F28 		movq	40(%rdi), %rbx
 3719              	.LVL281:
1908:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 y = image->height;
 3720              		.loc 1 1908 4 is_stmt 1 view .LVU1028
1909:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = (image->format & PNG_FORMAT_FLAG_COLOR) != 0 ? 3 : 1;
 3721              		.loc 1 1909 4 view .LVU1029
1910:fltk-1.3.4-1/png/pngwrite.c **** 
 3722              		.loc 1 1910 4 view .LVU1030
1910:fltk-1.3.4-1/png/pngwrite.c **** 
 3723              		.loc 1 1910 40 is_stmt 0 view .LVU1031
 3724 0038 83E602   		andl	$2, %esi
1910:fltk-1.3.4-1/png/pngwrite.c **** 
 3725              		.loc 1 1910 74 view .LVU1032
 3726 003b 83FE01   		cmpl	$1, %esi
 3727 003e 8D71FF   		leal	-1(%rcx), %esi
 3728 0041 4519ED   		sbbl	%r13d, %r13d
 3729 0044 89742448 		movl	%esi, 72(%rsp)
 3730 0048 4183E5FE 		andl	$-2, %r13d
 3731 004c 4183C503 		addl	$3, %r13d
 3732              	.LVL282:
1912:fltk-1.3.4-1/png/pngwrite.c ****    {
 3733              		.loc 1 1912 4 is_stmt 1 view .LVU1033
1912:fltk-1.3.4-1/png/pngwrite.c ****    {
 3734              		.loc 1 1912 7 is_stmt 0 view .LVU1034
 3735 0050 F6C201   		testb	$1, %dl
 3736 0053 0F846901 		je	.L381
 3736      0000
 3737              	.LBB248:
1914:fltk-1.3.4-1/png/pngwrite.c ****       int aindex;
 3738              		.loc 1 1914 7 is_stmt 1 view .LVU1035
1915:fltk-1.3.4-1/png/pngwrite.c **** 
 3739              		.loc 1 1915 7 view .LVU1036
1918:fltk-1.3.4-1/png/pngwrite.c ****          {
 3740              		.loc 1 1918 10 view .LVU1037
1918:fltk-1.3.4-1/png/pngwrite.c ****          {
 3741              		.loc 1 1918 13 is_stmt 0 view .LVU1038
 3742 0059 83E220   		andl	$32, %edx
1927:fltk-1.3.4-1/png/pngwrite.c **** 
 3743              		.loc 1 1927 17 view .LVU1039
 3744 005c 4D63E5   		movslq	%r13d, %r12
1918:fltk-1.3.4-1/png/pngwrite.c ****          {
 3745              		.loc 1 1918 13 view .LVU1040
 3746 005f 740F     		je	.L382
1920:fltk-1.3.4-1/png/pngwrite.c ****             ++input_row; /* To point to the first component */
 3747              		.loc 1 1920 13 is_stmt 1 view .LVU1041
 3748              	.LVL283:
1921:fltk-1.3.4-1/png/pngwrite.c ****             ++output_row;
 3749              		.loc 1 1921 13 view .LVU1042
 3750 0061 4883C302 		addq	$2, %rbx
 3751              	.LVL284:
1922:fltk-1.3.4-1/png/pngwrite.c ****          }
 3752              		.loc 1 1922 13 view .LVU1043
 3753 0065 4883C501 		addq	$1, %rbp
 3754              	.LVL285:
1920:fltk-1.3.4-1/png/pngwrite.c ****             ++input_row; /* To point to the first component */
 3755              		.loc 1 1920 20 is_stmt 0 view .LVU1044
 3756 0069 49C7C4FF 		movq	$-1, %r12
 3756      FFFFFF
 3757              	.LVL286:
 3758              	.L382:
1930:fltk-1.3.4-1/png/pngwrite.c **** 
 3759              		.loc 1 1930 7 is_stmt 1 view .LVU1045
1930:fltk-1.3.4-1/png/pngwrite.c **** 
 3760              		.loc 1 1930 54 is_stmt 0 view .LVU1046
 3761 0070 418D5501 		leal	1(%r13), %edx
1930:fltk-1.3.4-1/png/pngwrite.c **** 
 3762              		.loc 1 1930 43 view .LVU1047
 3763 0074 0FAFC2   		imull	%edx, %eax
1930:fltk-1.3.4-1/png/pngwrite.c **** 
 3764              		.loc 1 1930 15 view .LVU1048
 3765 0077 4801E8   		addq	%rbp, %rax
 3766 007a 48890424 		movq	%rax, (%rsp)
 3767              	.LVL287:
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3768              		.loc 1 1932 7 is_stmt 1 view .LVU1049
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3769              		.loc 1 1932 13 view .LVU1050
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3770              		.loc 1 1932 13 is_stmt 0 view .LVU1051
 3771 007e 85C9     		testl	%ecx, %ecx
 3772 0080 0F842801 		je	.L383
 3772      0000
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3773              		.loc 1 1932 13 view .LVU1052
 3774 0086 418D45FF 		leal	-1(%r13), %eax
 3775              	.LVL288:
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3776              		.loc 1 1932 13 view .LVU1053
 3777 008a 48895C24 		movq	%rbx, 56(%rsp)
 3777      38
 3778              	.LBB249:
 3779              	.LBB250:
1939:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 3780              		.loc 1 1939 39 view .LVU1054
 3781 008f 4B8D0C24 		leaq	(%r12,%r12), %rcx
 3782              	.LVL289:
1939:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 3783              		.loc 1 1939 39 view .LVU1055
 3784 0093 488D7400 		leaq	4(%rax,%rax), %rsi
 3784      04
 3785 0098 8944244C 		movl	%eax, 76(%rsp)
 3786 009c 48897424 		movq	%rsi, 8(%rsp)
 3786      08
 3787 00a1 488D7400 		leaq	2(%rax,%rax), %rsi
 3787      02
 3788 00a6 488D4400 		leaq	4(%rax,%rax), %rax
 3788      04
 3789 00ab 48897424 		movq	%rsi, 64(%rsp)
 3789      40
 3790 00b0 48894424 		movq	%rax, 16(%rsp)
 3790      10
 3791 00b5 48896C24 		movq	%rbp, 48(%rsp)
 3791      30
 3792 00ba 4889CD   		movq	%rcx, %rbp
 3793              	.LVL290:
 3794 00bd 0F1F00   		.p2align 4,,10
 3795              		.p2align 3
 3796              	.L384:
1939:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 3797              		.loc 1 1939 39 view .LVU1056
 3798              	.LBE250:
1937:fltk-1.3.4-1/png/pngwrite.c ****          {
 3799              		.loc 1 1937 16 is_stmt 1 view .LVU1057
 3800 00c0 488B0C24 		movq	(%rsp), %rcx
 3801 00c4 48394C24 		cmpq	%rcx, 48(%rsp)
 3801      30
 3802 00c9 0F83A800 		jnb	.L390
 3802      0000
 3803 00cf 4C8B6C24 		movq	56(%rsp), %r13
 3803      38
 3804 00d4 4C8B5424 		movq	64(%rsp), %r10
 3804      40
 3805              	.LBB255:
 3806              	.LBB251:
 3807              	.LBB252:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 3808              		.loc 1 1867 7 is_stmt 0 view .LVU1058
 3809 00d9 41BE7F00 		movl	$127, %r14d
 3809      0000
 3810 00df 4C637C24 		movslq	76(%rsp), %r15
 3810      4C
 3811              	.LBE252:
 3812              	.LBE251:
 3813              	.LBE255:
1937:fltk-1.3.4-1/png/pngwrite.c ****          {
 3814              		.loc 1 1937 16 view .LVU1059
 3815 00e4 4C8B5C24 		movq	48(%rsp), %r11
 3815      30
 3816 00e9 4D01EA   		addq	%r13, %r10
 3817 00ec 4983C702 		addq	$2, %r15
 3818              	.LVL291:
 3819              		.p2align 4,,10
 3820              		.p2align 3
 3821              	.L388:
 3822              	.LBB256:
1939:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 3823              		.loc 1 1939 13 is_stmt 1 view .LVU1060
1939:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 3824              		.loc 1 1939 25 is_stmt 0 view .LVU1061
 3825 00f0 410FB774 		movzwl	0(%r13,%rbp), %esi
 3825      2D00
1941:fltk-1.3.4-1/png/pngwrite.c ****             int c;
 3826              		.loc 1 1941 25 view .LVU1062
 3827 00f6 31DB     		xorl	%ebx, %ebx
1940:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
 3828              		.loc 1 1940 44 view .LVU1063
 3829 00f8 89F2     		movl	%esi, %edx
1939:fltk-1.3.4-1/png/pngwrite.c ****             png_byte alphabyte = (png_byte)PNG_DIV257(alpha);
 3830              		.loc 1 1939 25 view .LVU1064
 3831 00fa 89F0     		movl	%esi, %eax
 3832              	.LVL292:
1940:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
 3833              		.loc 1 1940 13 is_stmt 1 view .LVU1065
1940:fltk-1.3.4-1/png/pngwrite.c ****             png_uint_32 reciprocal = 0;
 3834              		.loc 1 1940 44 is_stmt 0 view .LVU1066
 3835 00fc C1E208   		sall	$8, %edx
 3836 00ff 29F2     		subl	%esi, %edx
 3837 0101 81C27F80 		addl	$32895, %edx
 3837      0000
 3838 0107 C1EA10   		shrl	$16, %edx
 3839              	.LVL293:
1941:fltk-1.3.4-1/png/pngwrite.c ****             int c;
 3840              		.loc 1 1941 13 is_stmt 1 view .LVU1067
1942:fltk-1.3.4-1/png/pngwrite.c **** 
 3841              		.loc 1 1942 13 view .LVU1068
1945:fltk-1.3.4-1/png/pngwrite.c **** 
 3842              		.loc 1 1945 13 view .LVU1069
1945:fltk-1.3.4-1/png/pngwrite.c **** 
 3843              		.loc 1 1945 29 is_stmt 0 view .LVU1070
 3844 010a 43881423 		movb	%dl, (%r11,%r12)
1947:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = UNP_RECIPROCAL(alpha);
 3845              		.loc 1 1947 13 is_stmt 1 view .LVU1071
1947:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = UNP_RECIPROCAL(alpha);
 3846              		.loc 1 1947 31 is_stmt 0 view .LVU1072
 3847 010e 83EA01   		subl	$1, %edx
 3848              	.LVL294:
1947:fltk-1.3.4-1/png/pngwrite.c ****                reciprocal = UNP_RECIPROCAL(alpha);
 3849              		.loc 1 1947 16 view .LVU1073
 3850 0111 80FAFD   		cmpb	$-3, %dl
 3851 0114 7710     		ja	.L385
1948:fltk-1.3.4-1/png/pngwrite.c **** 
 3852              		.loc 1 1948 16 is_stmt 1 view .LVU1074
1948:fltk-1.3.4-1/png/pngwrite.c **** 
 3853              		.loc 1 1948 29 is_stmt 0 view .LVU1075
 3854 0116 66D1E8   		shrw	%ax
 3855 0119 0FB7C0   		movzwl	%ax, %eax
 3856 011c 0580807F 		addl	$2139062400, %eax
 3856      7F
1948:fltk-1.3.4-1/png/pngwrite.c **** 
 3857              		.loc 1 1948 27 view .LVU1076
 3858 0121 99       		cltd
 3859 0122 F7FE     		idivl	%esi
 3860 0124 89C3     		movl	%eax, %ebx
 3861              	.LVL295:
 3862              	.L385:
1950:fltk-1.3.4-1/png/pngwrite.c ****             do /* always at least one channel */
 3863              		.loc 1 1950 13 is_stmt 1 view .LVU1077
1941:fltk-1.3.4-1/png/pngwrite.c ****             int c;
 3864              		.loc 1 1941 25 is_stmt 0 view .LVU1078
 3865 0126 4D89D9   		movq	%r11, %r9
 3866 0129 4D89E8   		movq	%r13, %r8
 3867              	.LVL296:
 3868              	.L387:
1951:fltk-1.3.4-1/png/pngwrite.c ****                *out_ptr++ = png_unpremultiply(*in_ptr++, alpha, reciprocal);
 3869              		.loc 1 1951 13 is_stmt 1 discriminator 1 view .LVU1079
1952:fltk-1.3.4-1/png/pngwrite.c ****             while (--c > 0);
 3870              		.loc 1 1952 16 discriminator 1 view .LVU1080
1952:fltk-1.3.4-1/png/pngwrite.c ****             while (--c > 0);
 3871              		.loc 1 1952 29 is_stmt 0 discriminator 1 view .LVU1081
 3872 012c 410FB738 		movzwl	(%r8), %edi
1952:fltk-1.3.4-1/png/pngwrite.c ****             while (--c > 0);
 3873              		.loc 1 1952 54 discriminator 1 view .LVU1082
 3874 0130 4983C002 		addq	$2, %r8
 3875              	.LVL297:
1952:fltk-1.3.4-1/png/pngwrite.c ****             while (--c > 0);
 3876              		.loc 1 1952 24 discriminator 1 view .LVU1083
 3877 0134 4983C101 		addq	$1, %r9
 3878              	.LVL298:
 3879              	.LBB254:
 3880              	.LBI251:
1854:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 reciprocal/*from the above macro*/)
 3881              		.loc 1 1854 1 is_stmt 1 discriminator 1 view .LVU1084
 3882              	.LBB253:
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 3883              		.loc 1 1867 4 discriminator 1 view .LVU1085
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 3884              		.loc 1 1867 7 is_stmt 0 discriminator 1 view .LVU1086
 3885 0138 4489F2   		movl	%r14d, %edx
1868:fltk-1.3.4-1/png/pngwrite.c **** 
 3886              		.loc 1 1868 14 discriminator 1 view .LVU1087
 3887 013b B8FFFFFF 		movl	$-1, %eax
 3887      FF
1867:fltk-1.3.4-1/png/pngwrite.c ****       return 255;
 3888              		.loc 1 1867 7 discriminator 1 view .LVU1088
 3889 0140 83FF7F   		cmpl	$127, %edi
 3890 0143 0F43D7   		cmovnb	%edi, %edx
 3891 0146 39D6     		cmpl	%edx, %esi
 3892 0148 760D     		jbe	.L386
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 3893              		.loc 1 1873 9 is_stmt 1 view .LVU1089
1895:fltk-1.3.4-1/png/pngwrite.c **** }
 3894              		.loc 1 1895 14 is_stmt 0 view .LVU1090
 3895 014a 31C0     		xorl	%eax, %eax
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 3896              		.loc 1 1873 12 view .LVU1091
 3897 014c 85FF     		testl	%edi, %edi
 3898 014e 7407     		je	.L386
 3899 0150 89DA     		movl	%ebx, %edx
 3900 0152 E8000000 		call	png_unpremultiply.part.0
 3900      00
 3901              	.LVL299:
 3902              	.L386:
1873:fltk-1.3.4-1/png/pngwrite.c ****    {
 3903              		.loc 1 1873 12 view .LVU1092
 3904              	.LBE253:
 3905              	.LBE254:
1952:fltk-1.3.4-1/png/pngwrite.c ****             while (--c > 0);
 3906              		.loc 1 1952 27 view .LVU1093
 3907 0157 418841FF 		movb	%al, -1(%r9)
1953:fltk-1.3.4-1/png/pngwrite.c **** 
 3908              		.loc 1 1953 19 is_stmt 1 view .LVU1094
1953:fltk-1.3.4-1/png/pngwrite.c **** 
 3909              		.loc 1 1953 13 is_stmt 0 view .LVU1095
 3910 015b 4D39D0   		cmpq	%r10, %r8
 3911 015e 75CC     		jne	.L387
1956:fltk-1.3.4-1/png/pngwrite.c ****             ++out_ptr;
 3912              		.loc 1 1956 13 is_stmt 1 view .LVU1096
 3913 0160 4C036C24 		addq	16(%rsp), %r13
 3913      10
 3914              	.LVL300:
1957:fltk-1.3.4-1/png/pngwrite.c ****          } /* while out_ptr < row_end */
 3915              		.loc 1 1957 13 view .LVU1097
 3916 0165 4D01FB   		addq	%r15, %r11
 3917              	.LVL301:
1957:fltk-1.3.4-1/png/pngwrite.c ****          } /* while out_ptr < row_end */
 3918              		.loc 1 1957 13 is_stmt 0 view .LVU1098
 3919              	.LBE256:
1937:fltk-1.3.4-1/png/pngwrite.c ****          {
 3920              		.loc 1 1937 16 is_stmt 1 view .LVU1099
 3921 0168 4C035424 		addq	8(%rsp), %r10
 3921      08
 3922 016d 4C3B1C24 		cmpq	(%rsp), %r11
 3923 0171 0F8279FF 		jb	.L388
 3923      FFFF
 3924              	.LVL302:
 3925              	.L390:
1960:fltk-1.3.4-1/png/pngwrite.c ****             display->local_row));
 3926              		.loc 1 1960 10 view .LVU1100
 3927 0177 488B5C24 		movq	32(%rsp), %rbx
 3927      20
 3928 017c 488B7C24 		movq	24(%rsp), %rdi
 3928      18
 3929 0181 488B7338 		movq	56(%rbx), %rsi
 3930 0185 E8000000 		call	png_write_row
 3930      00
 3931              	.LVL303:
1962:fltk-1.3.4-1/png/pngwrite.c ****       } /* while y */
 3932              		.loc 1 1962 10 view .LVU1101
1962:fltk-1.3.4-1/png/pngwrite.c ****       } /* while y */
 3933              		.loc 1 1962 10 is_stmt 0 view .LVU1102
 3934              	.LBE249:
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3935              		.loc 1 1932 13 is_stmt 1 view .LVU1103
 3936              	.LBB257:
1962:fltk-1.3.4-1/png/pngwrite.c ****       } /* while y */
 3937              		.loc 1 1962 20 is_stmt 0 view .LVU1104
 3938 018a 488B4330 		movq	48(%rbx), %rax
 3939              	.LBE257:
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3940              		.loc 1 1932 15 view .LVU1105
 3941 018e 836C2448 		subl	$1, 72(%rsp)
 3941      01
 3942              	.LVL304:
 3943              	.LBB258:
1962:fltk-1.3.4-1/png/pngwrite.c ****       } /* while y */
 3944              		.loc 1 1962 20 view .LVU1106
 3945 0193 48894424 		movq	%rax, 40(%rsp)
 3945      28
 3946 0198 4883E0FE 		andq	$-2, %rax
 3947 019c 48014424 		addq	%rax, 56(%rsp)
 3947      38
 3948              	.LVL305:
1962:fltk-1.3.4-1/png/pngwrite.c ****       } /* while y */
 3949              		.loc 1 1962 20 view .LVU1107
 3950              	.LBE258:
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3951              		.loc 1 1932 15 view .LVU1108
 3952 01a1 8B442448 		movl	72(%rsp), %eax
 3953              	.LVL306:
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3954              		.loc 1 1932 13 view .LVU1109
 3955 01a5 83F8FF   		cmpl	$-1, %eax
 3956 01a8 0F8512FF 		jne	.L384
 3956      FFFF
 3957              	.LVL307:
 3958              	.L383:
1932:fltk-1.3.4-1/png/pngwrite.c ****       {
 3959              		.loc 1 1932 13 view .LVU1110
 3960              	.LBE248:
1991:fltk-1.3.4-1/png/pngwrite.c **** }
 3961              		.loc 1 1991 4 is_stmt 1 view .LVU1111
1992:fltk-1.3.4-1/png/pngwrite.c **** 
 3962              		.loc 1 1992 1 is_stmt 0 view .LVU1112
 3963 01ae 4883C458 		addq	$88, %rsp
 3964              		.cfi_remember_state
 3965              		.cfi_def_cfa_offset 56
 3966 01b2 B8010000 		movl	$1, %eax
 3966      00
 3967 01b7 5B       		popq	%rbx
 3968              		.cfi_def_cfa_offset 48
 3969 01b8 5D       		popq	%rbp
 3970              		.cfi_def_cfa_offset 40
 3971 01b9 415C     		popq	%r12
 3972              		.cfi_def_cfa_offset 32
 3973 01bb 415D     		popq	%r13
 3974              		.cfi_def_cfa_offset 24
 3975 01bd 415E     		popq	%r14
 3976              		.cfi_def_cfa_offset 16
 3977 01bf 415F     		popq	%r15
 3978              		.cfi_def_cfa_offset 8
 3979 01c1 C3       		ret
 3980              	.LVL308:
 3981              	.L381:
 3982              		.cfi_restore_state
 3983              	.LBB259:
1971:fltk-1.3.4-1/png/pngwrite.c **** 
 3984              		.loc 1 1971 7 is_stmt 1 view .LVU1113
1971:fltk-1.3.4-1/png/pngwrite.c **** 
 3985              		.loc 1 1971 53 is_stmt 0 view .LVU1114
 3986 01c2 440FAFE8 		imull	%eax, %r13d
 3987 01c6 4C8D3D00 		leaq	png_sRGB_delta(%rip), %r15
 3987      000000
 3988 01cd 4C8D3500 		leaq	png_sRGB_base(%rip), %r14
 3988      000000
1971:fltk-1.3.4-1/png/pngwrite.c **** 
 3989              		.loc 1 1971 17 view .LVU1115
 3990 01d4 4E8D642D 		leaq	0(%rbp,%r13), %r12
 3990      00
 3991              	.LVL309:
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 3992              		.loc 1 1973 7 is_stmt 1 view .LVU1116
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 3993              		.loc 1 1973 13 view .LVU1117
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 3994              		.loc 1 1973 13 is_stmt 0 view .LVU1118
 3995 01d9 85C9     		testl	%ecx, %ecx
 3996 01db 74D1     		je	.L383
 3997 01dd 4C896424 		movq	%r12, 8(%rsp)
 3997      08
 3998 01e2 4D89EC   		movq	%r13, %r12
 3999              	.LVL310:
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 4000              		.loc 1 1973 13 view .LVU1119
 4001 01e5 4989DD   		movq	%rbx, %r13
 4002 01e8 4889EB   		movq	%rbp, %rbx
 4003              	.LVL311:
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 4004              		.loc 1 1973 13 view .LVU1120
 4005 01eb 8B6C2448 		movl	72(%rsp), %ebp
 4006              	.LVL312:
 4007 01ef 90       		.p2align 4,,10
 4008              		.p2align 3
 4009              	.L391:
 4010              	.LBB260:
1978:fltk-1.3.4-1/png/pngwrite.c ****          {
 4011              		.loc 1 1978 16 is_stmt 1 view .LVU1121
 4012 01f0 31FF     		xorl	%edi, %edi
 4013 01f2 483B5C24 		cmpq	8(%rsp), %rbx
 4013      08
 4014 01f7 7342     		jnb	.L393
 4015              	.LVL313:
 4016 01f9 0F1F8000 		.p2align 4,,10
 4016      000000
 4017              		.p2align 3
 4018              	.L392:
 4019              	.LBB261:
1980:fltk-1.3.4-1/png/pngwrite.c **** 
 4020              		.loc 1 1980 13 view .LVU1122
1980:fltk-1.3.4-1/png/pngwrite.c **** 
 4021              		.loc 1 1980 25 is_stmt 0 view .LVU1123
 4022 0200 450FB744 		movzwl	0(%r13,%rdi,2), %r8d
 4022      7D00
 4023              	.LVL314:
1982:fltk-1.3.4-1/png/pngwrite.c ****             *out_ptr++ = (png_byte)PNG_sRGB_FROM_LINEAR(component);
 4024              		.loc 1 1982 13 is_stmt 1 view .LVU1124
1982:fltk-1.3.4-1/png/pngwrite.c ****             *out_ptr++ = (png_byte)PNG_sRGB_FROM_LINEAR(component);
 4025              		.loc 1 1982 23 is_stmt 0 view .LVU1125
 4026 0206 4489C0   		movl	%r8d, %eax
 4027 0209 C1E008   		sall	$8, %eax
 4028 020c 4429C0   		subl	%r8d, %eax
 4029              	.LVL315:
1983:fltk-1.3.4-1/png/pngwrite.c ****          }
 4030              		.loc 1 1983 13 is_stmt 1 view .LVU1126
1983:fltk-1.3.4-1/png/pngwrite.c ****          }
 4031              		.loc 1 1983 36 is_stmt 0 view .LVU1127
 4032 020f 4189C0   		movl	%eax, %r8d
 4033 0212 25FF7F00 		andl	$32767, %eax
 4033      00
 4034              	.LVL316:
1983:fltk-1.3.4-1/png/pngwrite.c ****          }
 4035              		.loc 1 1983 36 view .LVU1128
 4036 0217 41C1E80F 		shrl	$15, %r8d
 4037              	.LVL317:
1983:fltk-1.3.4-1/png/pngwrite.c ****          }
 4038              		.loc 1 1983 36 view .LVU1129
 4039 021b 470FB60C 		movzbl	(%r15,%r8), %r9d
 4039      07
 4040 0220 470FB704 		movzwl	(%r14,%r8,2), %r8d
 4040      46
 4041 0225 410FAFC1 		imull	%r9d, %eax
 4042 0229 C1E80C   		shrl	$12, %eax
 4043 022c 4401C0   		addl	%r8d, %eax
1983:fltk-1.3.4-1/png/pngwrite.c ****          }
 4044              		.loc 1 1983 26 view .LVU1130
 4045 022f 88243B   		movb	%ah, (%rbx,%rdi)
 4046              	.LVL318:
1983:fltk-1.3.4-1/png/pngwrite.c ****          }
 4047              		.loc 1 1983 26 view .LVU1131
 4048              	.LBE261:
1978:fltk-1.3.4-1/png/pngwrite.c ****          {
 4049              		.loc 1 1978 16 is_stmt 1 view .LVU1132
 4050 0232 4883C701 		addq	$1, %rdi
 4051              	.LVL319:
1978:fltk-1.3.4-1/png/pngwrite.c ****          {
 4052              		.loc 1 1978 16 is_stmt 0 view .LVU1133
 4053 0236 4C39E7   		cmpq	%r12, %rdi
 4054 0239 75C5     		jne	.L392
 4055              	.LVL320:
 4056              	.L393:
1986:fltk-1.3.4-1/png/pngwrite.c ****          input_row += display->row_bytes/(sizeof (png_uint_16));
 4057              		.loc 1 1986 10 is_stmt 1 view .LVU1134
 4058 023b 488B7C24 		movq	24(%rsp), %rdi
 4058      18
 4059 0240 4889DE   		movq	%rbx, %rsi
 4060              	.LBE260:
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 4061              		.loc 1 1973 15 is_stmt 0 view .LVU1135
 4062 0243 83ED01   		subl	$1, %ebp
 4063              	.LVL321:
 4064              	.LBB262:
1986:fltk-1.3.4-1/png/pngwrite.c ****          input_row += display->row_bytes/(sizeof (png_uint_16));
 4065              		.loc 1 1986 10 view .LVU1136
 4066 0246 E8000000 		call	png_write_row
 4066      00
 4067              	.LVL322:
1987:fltk-1.3.4-1/png/pngwrite.c ****       }
 4068              		.loc 1 1987 10 is_stmt 1 view .LVU1137
1987:fltk-1.3.4-1/png/pngwrite.c ****       }
 4069              		.loc 1 1987 20 is_stmt 0 view .LVU1138
 4070 024b 488B4424 		movq	32(%rsp), %rax
 4070      20
 4071 0250 488B4030 		movq	48(%rax), %rax
 4072 0254 48890424 		movq	%rax, (%rsp)
 4073 0258 4883E0FE 		andq	$-2, %rax
 4074 025c 4901C5   		addq	%rax, %r13
 4075              	.LVL323:
1987:fltk-1.3.4-1/png/pngwrite.c ****       }
 4076              		.loc 1 1987 20 view .LVU1139
 4077              	.LBE262:
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 4078              		.loc 1 1973 13 is_stmt 1 view .LVU1140
1973:fltk-1.3.4-1/png/pngwrite.c ****       {
 4079              		.loc 1 1973 13 is_stmt 0 view .LVU1141
 4080 025f 83FDFF   		cmpl	$-1, %ebp
 4081 0262 758C     		jne	.L391
 4082 0264 E945FFFF 		jmp	.L383
 4082      FF
 4083              	.LBE259:
 4084              		.cfi_endproc
 4085              	.LFE78:
 4087              		.section	.rodata.png_write_image_16bit.str1.8,"aMS",@progbits,1
 4088              		.align 8
 4089              	.LC9:
 4090 0000 706E675F 		.string	"png_write_image: internal call error"
 4090      77726974 
 4090      655F696D 
 4090      6167653A 
 4090      20696E74 
 4091              		.section	.text.png_write_image_16bit,"ax",@progbits
 4092              		.p2align 4
 4094              	png_write_image_16bit:
 4095              	.LVL324:
 4096              	.LFB76:
1743:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 4097              		.loc 1 1743 1 is_stmt 1 view -0
 4098              		.cfi_startproc
1743:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 4099              		.loc 1 1743 1 is_stmt 0 view .LVU1143
 4100 0000 F30F1EFA 		endbr64
1744:fltk-1.3.4-1/png/pngwrite.c ****       argument);
 4101              		.loc 1 1744 4 is_stmt 1 view .LVU1144
 4102              	.LVL325:
1746:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 4103              		.loc 1 1746 4 view .LVU1145
1743:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 4104              		.loc 1 1743 1 is_stmt 0 view .LVU1146
 4105 0004 4157     		pushq	%r15
 4106              		.cfi_def_cfa_offset 16
 4107              		.cfi_offset 15, -16
 4108 0006 4989F9   		movq	%rdi, %r9
 4109 0009 4156     		pushq	%r14
 4110              		.cfi_def_cfa_offset 24
 4111              		.cfi_offset 14, -24
 4112 000b 4155     		pushq	%r13
 4113              		.cfi_def_cfa_offset 32
 4114              		.cfi_offset 13, -32
 4115 000d 4154     		pushq	%r12
 4116              		.cfi_def_cfa_offset 40
 4117              		.cfi_offset 12, -40
 4118 000f 55       		pushq	%rbp
 4119              		.cfi_def_cfa_offset 48
 4120              		.cfi_offset 6, -48
 4121 0010 53       		pushq	%rbx
 4122              		.cfi_def_cfa_offset 56
 4123              		.cfi_offset 3, -56
 4124 0011 4883EC28 		subq	$40, %rsp
 4125              		.cfi_def_cfa_offset 96
1746:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 4126              		.loc 1 1746 15 view .LVU1147
 4127 0015 488B17   		movq	(%rdi), %rdx
 4128              	.LVL326:
1747:fltk-1.3.4-1/png/pngwrite.c **** 
 4129              		.loc 1 1747 4 is_stmt 1 view .LVU1148
1751:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_16p row_end;
 4130              		.loc 1 1751 17 is_stmt 0 view .LVU1149
 4131 0018 488B5F38 		movq	56(%rdi), %rbx
1749:fltk-1.3.4-1/png/pngwrite.c ****       display->first_row);
 4132              		.loc 1 1749 23 view .LVU1150
 4133 001c 4C8B7F28 		movq	40(%rdi), %r15
1747:fltk-1.3.4-1/png/pngwrite.c **** 
 4134              		.loc 1 1747 17 view .LVU1151
 4135 0020 488B02   		movq	(%rdx), %rax
1753:fltk-1.3.4-1/png/pngwrite.c ****    int aindex = 0;
 4136              		.loc 1 1753 31 view .LVU1152
 4137 0023 8B4A14   		movl	20(%rdx), %ecx
1751:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_16p row_end;
 4138              		.loc 1 1751 17 view .LVU1153
 4139 0026 48895C24 		movq	%rbx, 24(%rsp)
 4139      18
1755:fltk-1.3.4-1/png/pngwrite.c **** 
 4140              		.loc 1 1755 16 view .LVU1154
 4141 002b 8B7A10   		movl	16(%rdx), %edi
 4142              	.LVL327:
1747:fltk-1.3.4-1/png/pngwrite.c **** 
 4143              		.loc 1 1747 17 view .LVU1155
 4144 002e 4C8B20   		movq	(%rax), %r12
 4145              	.LVL328:
1749:fltk-1.3.4-1/png/pngwrite.c ****       display->first_row);
 4146              		.loc 1 1749 4 is_stmt 1 view .LVU1156
1751:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_16p row_end;
 4147              		.loc 1 1751 4 view .LVU1157
1752:fltk-1.3.4-1/png/pngwrite.c ****    const int channels = (image->format & PNG_FORMAT_FLAG_COLOR) != 0 ? 3 : 1;
 4148              		.loc 1 1752 4 view .LVU1158
1753:fltk-1.3.4-1/png/pngwrite.c ****    int aindex = 0;
 4149              		.loc 1 1753 4 view .LVU1159
1753:fltk-1.3.4-1/png/pngwrite.c ****    int aindex = 0;
 4150              		.loc 1 1753 40 is_stmt 0 view .LVU1160
 4151 0031 89C8     		movl	%ecx, %eax
 4152 0033 83E002   		andl	$2, %eax
1753:fltk-1.3.4-1/png/pngwrite.c ****    int aindex = 0;
 4153              		.loc 1 1753 74 view .LVU1161
 4154 0036 83F801   		cmpl	$1, %eax
 4155 0039 19C0     		sbbl	%eax, %eax
 4156 003b 83E0FE   		andl	$-2, %eax
 4157 003e 83C003   		addl	$3, %eax
 4158              	.LVL329:
1754:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 y = image->height;
 4159              		.loc 1 1754 4 is_stmt 1 view .LVU1162
1755:fltk-1.3.4-1/png/pngwrite.c **** 
 4160              		.loc 1 1755 4 view .LVU1163
1757:fltk-1.3.4-1/png/pngwrite.c ****    {
 4161              		.loc 1 1757 4 view .LVU1164
1757:fltk-1.3.4-1/png/pngwrite.c ****    {
 4162              		.loc 1 1757 7 is_stmt 0 view .LVU1165
 4163 0041 F6C101   		testb	$1, %cl
 4164 0044 0F844201 		je	.L420
 4164      0000
1760:fltk-1.3.4-1/png/pngwrite.c ****          {
 4165              		.loc 1 1760 10 is_stmt 1 view .LVU1166
1760:fltk-1.3.4-1/png/pngwrite.c ****          {
 4166              		.loc 1 1760 13 is_stmt 0 view .LVU1167
 4167 004a 83E120   		andl	$32, %ecx
1769:fltk-1.3.4-1/png/pngwrite.c ****    }
 4168              		.loc 1 1769 17 view .LVU1168
 4169 004d 4863F0   		movslq	%eax, %rsi
1760:fltk-1.3.4-1/png/pngwrite.c ****          {
 4170              		.loc 1 1760 13 view .LVU1169
 4171 0050 0F851D01 		jne	.L451
 4171      0000
 4172              	.LVL330:
 4173              	.L421:
1779:fltk-1.3.4-1/png/pngwrite.c **** 
 4174              		.loc 1 1779 4 is_stmt 1 view .LVU1170
1779:fltk-1.3.4-1/png/pngwrite.c **** 
 4175              		.loc 1 1779 51 is_stmt 0 view .LVU1171
 4176 0056 8D4801   		leal	1(%rax), %ecx
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4177              		.loc 1 1781 12 view .LVU1172
 4178 0059 448D47FF 		leal	-1(%rdi), %r8d
1779:fltk-1.3.4-1/png/pngwrite.c **** 
 4179              		.loc 1 1779 40 view .LVU1173
 4180 005d 89CB     		movl	%ecx, %ebx
 4181 005f 0FAF5A0C 		imull	12(%rdx), %ebx
 4182 0063 4889DA   		movq	%rbx, %rdx
 4183              	.LVL331:
1779:fltk-1.3.4-1/png/pngwrite.c **** 
 4184              		.loc 1 1779 12 view .LVU1174
 4185 0066 488B5C24 		movq	24(%rsp), %rbx
 4185      18
 4186 006b 4C8D3453 		leaq	(%rbx,%rdx,2), %r14
 4187              	.LVL332:
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4188              		.loc 1 1781 4 is_stmt 1 view .LVU1175
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4189              		.loc 1 1781 10 view .LVU1176
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4190              		.loc 1 1781 10 is_stmt 0 view .LVU1177
 4191 006f 85FF     		testl	%edi, %edi
 4192 0071 0F84E800 		je	.L422
 4192      0000
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4193              		.loc 1 1781 10 view .LVU1178
 4194 0077 8D58FF   		leal	-1(%rax), %ebx
 4195              	.LBB263:
 4196              	.LBB264:
1788:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 reciprocal = 0;
 4197              		.loc 1 1788 42 view .LVU1179
 4198 007a 488D2C36 		leaq	(%rsi,%rsi), %rbp
 4199 007e 4C8D6C1B 		leaq	4(%rbx,%rbx), %r13
 4199      04
 4200              	.LVL333:
 4201              		.p2align 4,,10
 4202 0083 0F1F4400 		.p2align 3
 4202      00
 4203              	.L423:
1788:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 reciprocal = 0;
 4204              		.loc 1 1788 42 view .LVU1180
 4205              	.LBE264:
1786:fltk-1.3.4-1/png/pngwrite.c ****       {
 4206              		.loc 1 1786 13 is_stmt 1 view .LVU1181
 4207 0088 488B4424 		movq	24(%rsp), %rax
 4207      18
 4208 008d 4D89FB   		movq	%r15, %r11
 4209 0090 4889C7   		movq	%rax, %rdi
 4210 0093 4C39F0   		cmpq	%r14, %rax
 4211 0096 0F838A00 		jnb	.L428
 4211      0000
 4212              	.LVL334:
 4213 009c 0F1F4000 		.p2align 4,,10
 4214              		.p2align 3
 4215              	.L427:
 4216              	.LBB268:
1788:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 reciprocal = 0;
 4217              		.loc 1 1788 10 view .LVU1182
1788:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 reciprocal = 0;
 4218              		.loc 1 1788 28 is_stmt 0 view .LVU1183
 4219 00a0 410FB734 		movzwl	(%r11,%rbp), %esi
 4219      2B
 4220              	.LVL335:
1789:fltk-1.3.4-1/png/pngwrite.c ****          int c;
 4221              		.loc 1 1789 10 is_stmt 1 view .LVU1184
1790:fltk-1.3.4-1/png/pngwrite.c **** 
 4222              		.loc 1 1790 10 view .LVU1185
1792:fltk-1.3.4-1/png/pngwrite.c **** 
 4223              		.loc 1 1792 10 view .LVU1186
1789:fltk-1.3.4-1/png/pngwrite.c ****          int c;
 4224              		.loc 1 1789 22 is_stmt 0 view .LVU1187
 4225 00a5 31C0     		xorl	%eax, %eax
1799:fltk-1.3.4-1/png/pngwrite.c ****             reciprocal = ((0xffff<<15)+(alpha>>1))/alpha;
 4226              		.loc 1 1799 24 view .LVU1188
 4227 00a7 8D56FF   		leal	-1(%rsi), %edx
1792:fltk-1.3.4-1/png/pngwrite.c **** 
 4228              		.loc 1 1792 26 view .LVU1189
 4229 00aa 6689342F 		movw	%si, (%rdi,%rbp)
1799:fltk-1.3.4-1/png/pngwrite.c ****             reciprocal = ((0xffff<<15)+(alpha>>1))/alpha;
 4230              		.loc 1 1799 10 is_stmt 1 view .LVU1190
1799:fltk-1.3.4-1/png/pngwrite.c ****             reciprocal = ((0xffff<<15)+(alpha>>1))/alpha;
 4231              		.loc 1 1799 13 is_stmt 0 view .LVU1191
 4232 00ae 6683FAFD 		cmpw	$-3, %dx
 4233 00b2 7713     		ja	.L424
1800:fltk-1.3.4-1/png/pngwrite.c **** 
 4234              		.loc 1 1800 13 is_stmt 1 view .LVU1192
1800:fltk-1.3.4-1/png/pngwrite.c **** 
 4235              		.loc 1 1800 46 is_stmt 0 view .LVU1193
 4236 00b4 89F0     		movl	%esi, %eax
1800:fltk-1.3.4-1/png/pngwrite.c **** 
 4237              		.loc 1 1800 51 view .LVU1194
 4238 00b6 0FB7CE   		movzwl	%si, %ecx
1800:fltk-1.3.4-1/png/pngwrite.c **** 
 4239              		.loc 1 1800 46 view .LVU1195
 4240 00b9 66D1E8   		shrw	%ax
 4241 00bc 0FB7C0   		movzwl	%ax, %eax
1800:fltk-1.3.4-1/png/pngwrite.c **** 
 4242              		.loc 1 1800 39 view .LVU1196
 4243 00bf 050080FF 		addl	$2147450880, %eax
 4243      7F
1800:fltk-1.3.4-1/png/pngwrite.c **** 
 4244              		.loc 1 1800 24 view .LVU1197
 4245 00c4 99       		cltd
 4246 00c5 F7F9     		idivl	%ecx
 4247              	.LVL336:
 4248              	.L424:
1802:fltk-1.3.4-1/png/pngwrite.c ****          do /* always at least one channel */
 4249              		.loc 1 1802 10 is_stmt 1 view .LVU1198
1789:fltk-1.3.4-1/png/pngwrite.c ****          int c;
 4250              		.loc 1 1789 22 is_stmt 0 view .LVU1199
 4251 00c7 31D2     		xorl	%edx, %edx
 4252              	.LVL337:
1803:fltk-1.3.4-1/png/pngwrite.c ****          {
 4253              		.loc 1 1803 10 is_stmt 1 view .LVU1200
 4254              	.LBB265:
1805:fltk-1.3.4-1/png/pngwrite.c **** 
 4255              		.loc 1 1805 13 view .LVU1201
1805:fltk-1.3.4-1/png/pngwrite.c **** 
 4256              		.loc 1 1805 25 is_stmt 0 view .LVU1202
 4257 00c9 410FB70C 		movzwl	(%r11,%rdx,2), %ecx
 4257      53
 4258              	.LVL338:
1814:fltk-1.3.4-1/png/pngwrite.c ****                component = 65535;
 4259              		.loc 1 1814 13 is_stmt 1 view .LVU1203
1814:fltk-1.3.4-1/png/pngwrite.c ****                component = 65535;
 4260              		.loc 1 1814 16 is_stmt 0 view .LVU1204
 4261 00ce 6639CE   		cmpw	%cx, %si
 4262 00d1 7632     		jbe	.L432
 4263              	.LVL339:
 4264              	.L453:
1820:fltk-1.3.4-1/png/pngwrite.c ****             {
 4265              		.loc 1 1820 18 is_stmt 1 view .LVU1205
1820:fltk-1.3.4-1/png/pngwrite.c ****             {
 4266              		.loc 1 1820 21 is_stmt 0 view .LVU1206
 4267 00d3 6685C9   		testw	%cx, %cx
 4268 00d6 7413     		je	.L425
1820:fltk-1.3.4-1/png/pngwrite.c ****             {
 4269              		.loc 1 1820 21 view .LVU1207
 4270 00d8 6683FEFF 		cmpw	$-1, %si
 4271 00dc 740D     		je	.L425
 4272              	.LBB266:
1822:fltk-1.3.4-1/png/pngwrite.c ****                calc += 16384; /* round to nearest */
 4273              		.loc 1 1822 16 is_stmt 1 view .LVU1208
1822:fltk-1.3.4-1/png/pngwrite.c ****                calc += 16384; /* round to nearest */
 4274              		.loc 1 1822 28 is_stmt 0 view .LVU1209
 4275 00de 0FAFC8   		imull	%eax, %ecx
 4276              	.LVL340:
1823:fltk-1.3.4-1/png/pngwrite.c ****                component = (png_uint_16)(calc >> 15);
 4277              		.loc 1 1823 16 is_stmt 1 view .LVU1210
1824:fltk-1.3.4-1/png/pngwrite.c ****             }
 4278              		.loc 1 1824 16 view .LVU1211
1824:fltk-1.3.4-1/png/pngwrite.c ****             }
 4279              		.loc 1 1824 47 is_stmt 0 view .LVU1212
 4280 00e1 8D8C0900 		leal	32768(%rcx,%rcx), %ecx
 4280      800000
 4281              	.LVL341:
1824:fltk-1.3.4-1/png/pngwrite.c ****             }
 4282              		.loc 1 1824 26 view .LVU1213
 4283 00e8 C1E910   		shrl	$16, %ecx
 4284              	.L425:
 4285              	.LVL342:
1824:fltk-1.3.4-1/png/pngwrite.c ****             }
 4286              		.loc 1 1824 26 view .LVU1214
 4287              	.LBE266:
1827:fltk-1.3.4-1/png/pngwrite.c ****          }
 4288              		.loc 1 1827 13 is_stmt 1 view .LVU1215
1827:fltk-1.3.4-1/png/pngwrite.c ****          }
 4289              		.loc 1 1827 24 is_stmt 0 view .LVU1216
 4290 00eb 66890C57 		movw	%cx, (%rdi,%rdx,2)
 4291              	.LBE265:
1829:fltk-1.3.4-1/png/pngwrite.c **** 
 4292              		.loc 1 1829 16 is_stmt 1 view .LVU1217
1829:fltk-1.3.4-1/png/pngwrite.c **** 
 4293              		.loc 1 1829 16 is_stmt 0 view .LVU1218
 4294 00ef 488D4A01 		leaq	1(%rdx), %rcx
 4295              	.LVL343:
1829:fltk-1.3.4-1/png/pngwrite.c **** 
 4296              		.loc 1 1829 10 view .LVU1219
 4297 00f3 4839DA   		cmpq	%rbx, %rdx
 4298 00f6 741F     		je	.L452
 4299              	.LVL344:
 4300              	.L433:
1829:fltk-1.3.4-1/png/pngwrite.c **** 
 4301              		.loc 1 1829 10 view .LVU1220
 4302 00f8 4889CA   		movq	%rcx, %rdx
 4303              	.LVL345:
1803:fltk-1.3.4-1/png/pngwrite.c ****          {
 4304              		.loc 1 1803 10 is_stmt 1 view .LVU1221
 4305              	.LBB267:
1805:fltk-1.3.4-1/png/pngwrite.c **** 
 4306              		.loc 1 1805 13 view .LVU1222
1805:fltk-1.3.4-1/png/pngwrite.c **** 
 4307              		.loc 1 1805 25 is_stmt 0 view .LVU1223
 4308 00fb 410FB70C 		movzwl	(%r11,%rdx,2), %ecx
 4308      53
 4309              	.LVL346:
1814:fltk-1.3.4-1/png/pngwrite.c ****                component = 65535;
 4310              		.loc 1 1814 13 is_stmt 1 view .LVU1224
1814:fltk-1.3.4-1/png/pngwrite.c ****                component = 65535;
 4311              		.loc 1 1814 16 is_stmt 0 view .LVU1225
 4312 0100 6639CE   		cmpw	%cx, %si
 4313 0103 77CE     		ja	.L453
 4314              	.LVL347:
 4315              	.L432:
1815:fltk-1.3.4-1/png/pngwrite.c **** 
 4316              		.loc 1 1815 26 view .LVU1226
 4317 0105 B9FFFFFF 		movl	$-1, %ecx
 4317      FF
 4318              	.LVL348:
1827:fltk-1.3.4-1/png/pngwrite.c ****          }
 4319              		.loc 1 1827 13 is_stmt 1 view .LVU1227
1827:fltk-1.3.4-1/png/pngwrite.c ****          }
 4320              		.loc 1 1827 24 is_stmt 0 view .LVU1228
 4321 010a 66890C57 		movw	%cx, (%rdi,%rdx,2)
 4322              	.LBE267:
1829:fltk-1.3.4-1/png/pngwrite.c **** 
 4323              		.loc 1 1829 16 is_stmt 1 view .LVU1229
1829:fltk-1.3.4-1/png/pngwrite.c **** 
 4324              		.loc 1 1829 16 is_stmt 0 view .LVU1230
 4325 010e 488D4A01 		leaq	1(%rdx), %rcx
 4326              	.LVL349:
1829:fltk-1.3.4-1/png/pngwrite.c **** 
 4327              		.loc 1 1829 10 view .LVU1231
 4328 0112 4839DA   		cmpq	%rbx, %rdx
 4329 0115 75E1     		jne	.L433
 4330              	.LVL350:
 4331              	.L452:
1832:fltk-1.3.4-1/png/pngwrite.c ****          ++out_ptr;
 4332              		.loc 1 1832 10 is_stmt 1 view .LVU1232
 4333 0117 4C01EF   		addq	%r13, %rdi
 4334 011a 4D01EB   		addq	%r13, %r11
 4335              	.LVL351:
1833:fltk-1.3.4-1/png/pngwrite.c ****       }
 4336              		.loc 1 1833 10 view .LVU1233
1833:fltk-1.3.4-1/png/pngwrite.c ****       }
 4337              		.loc 1 1833 10 is_stmt 0 view .LVU1234
 4338              	.LBE268:
1786:fltk-1.3.4-1/png/pngwrite.c ****       {
 4339              		.loc 1 1786 13 is_stmt 1 view .LVU1235
 4340 011d 4939FE   		cmpq	%rdi, %r14
 4341 0120 0F877AFF 		ja	.L427
 4341      FFFF
 4342              	.LVL352:
 4343              	.L428:
1836:fltk-1.3.4-1/png/pngwrite.c ****       input_row += display->row_bytes/(sizeof (png_uint_16));
 4344              		.loc 1 1836 7 is_stmt 0 view .LVU1236
 4345 0126 498B7138 		movq	56(%r9), %rsi
 4346 012a 4C89E7   		movq	%r12, %rdi
 4347              	.LVL353:
1836:fltk-1.3.4-1/png/pngwrite.c ****       input_row += display->row_bytes/(sizeof (png_uint_16));
 4348              		.loc 1 1836 7 view .LVU1237
 4349 012d 44894424 		movl	%r8d, 20(%rsp)
 4349      14
1836:fltk-1.3.4-1/png/pngwrite.c ****       input_row += display->row_bytes/(sizeof (png_uint_16));
 4350              		.loc 1 1836 7 is_stmt 1 view .LVU1238
 4351 0132 4C894C24 		movq	%r9, 8(%rsp)
 4351      08
 4352 0137 E8000000 		call	png_write_row
 4352      00
 4353              	.LVL354:
1837:fltk-1.3.4-1/png/pngwrite.c ****    }
 4354              		.loc 1 1837 7 view .LVU1239
1837:fltk-1.3.4-1/png/pngwrite.c ****    }
 4355              		.loc 1 1837 17 is_stmt 0 view .LVU1240
 4356 013c 4C8B4C24 		movq	8(%rsp), %r9
 4356      08
 4357              	.LBE263:
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4358              		.loc 1 1781 12 view .LVU1241
 4359 0141 448B4424 		movl	20(%rsp), %r8d
 4359      14
 4360              	.LBB269:
1837:fltk-1.3.4-1/png/pngwrite.c ****    }
 4361              		.loc 1 1837 17 view .LVU1242
 4362 0146 498B4130 		movq	48(%r9), %rax
 4363              	.LBE269:
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4364              		.loc 1 1781 12 view .LVU1243
 4365 014a 4183E801 		subl	$1, %r8d
 4366              	.LBB270:
1837:fltk-1.3.4-1/png/pngwrite.c ****    }
 4367              		.loc 1 1837 17 view .LVU1244
 4368 014e 4883E0FE 		andq	$-2, %rax
 4369 0152 4901C7   		addq	%rax, %r15
 4370              	.LVL355:
1837:fltk-1.3.4-1/png/pngwrite.c ****    }
 4371              		.loc 1 1837 17 view .LVU1245
 4372              	.LBE270:
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4373              		.loc 1 1781 10 is_stmt 1 view .LVU1246
1781:fltk-1.3.4-1/png/pngwrite.c ****    {
 4374              		.loc 1 1781 10 is_stmt 0 view .LVU1247
 4375 0155 4183F8FF 		cmpl	$-1, %r8d
 4376 0159 0F8529FF 		jne	.L423
 4376      FFFF
 4377              	.L422:
1840:fltk-1.3.4-1/png/pngwrite.c **** }
 4378              		.loc 1 1840 4 is_stmt 1 view .LVU1248
1841:fltk-1.3.4-1/png/pngwrite.c **** 
 4379              		.loc 1 1841 1 is_stmt 0 view .LVU1249
 4380 015f 4883C428 		addq	$40, %rsp
 4381              		.cfi_remember_state
 4382              		.cfi_def_cfa_offset 56
 4383 0163 B8010000 		movl	$1, %eax
 4383      00
 4384 0168 5B       		popq	%rbx
 4385              		.cfi_def_cfa_offset 48
 4386 0169 5D       		popq	%rbp
 4387              		.cfi_def_cfa_offset 40
 4388 016a 415C     		popq	%r12
 4389              		.cfi_def_cfa_offset 32
 4390              	.LVL356:
1841:fltk-1.3.4-1/png/pngwrite.c **** 
 4391              		.loc 1 1841 1 view .LVU1250
 4392 016c 415D     		popq	%r13
 4393              		.cfi_def_cfa_offset 24
 4394 016e 415E     		popq	%r14
 4395              		.cfi_def_cfa_offset 16
 4396              	.LVL357:
1841:fltk-1.3.4-1/png/pngwrite.c **** 
 4397              		.loc 1 1841 1 view .LVU1251
 4398 0170 415F     		popq	%r15
 4399              		.cfi_def_cfa_offset 8
 4400              	.LVL358:
1841:fltk-1.3.4-1/png/pngwrite.c **** 
 4401              		.loc 1 1841 1 view .LVU1252
 4402 0172 C3       		ret
 4403              	.LVL359:
 4404              	.L451:
 4405              		.cfi_restore_state
1762:fltk-1.3.4-1/png/pngwrite.c ****             ++input_row; /* To point to the first component */
 4406              		.loc 1 1762 13 is_stmt 1 view .LVU1253
1763:fltk-1.3.4-1/png/pngwrite.c ****             ++output_row;
 4407              		.loc 1 1763 13 view .LVU1254
1764:fltk-1.3.4-1/png/pngwrite.c ****          }
 4408              		.loc 1 1764 13 is_stmt 0 view .LVU1255
 4409 0173 4883C302 		addq	$2, %rbx
 4410              	.LVL360:
1763:fltk-1.3.4-1/png/pngwrite.c ****             ++output_row;
 4411              		.loc 1 1763 13 view .LVU1256
 4412 0177 4983C702 		addq	$2, %r15
 4413              	.LVL361:
1764:fltk-1.3.4-1/png/pngwrite.c ****          }
 4414              		.loc 1 1764 13 is_stmt 1 view .LVU1257
1762:fltk-1.3.4-1/png/pngwrite.c ****             ++input_row; /* To point to the first component */
 4415              		.loc 1 1762 20 is_stmt 0 view .LVU1258
 4416 017b 48C7C6FF 		movq	$-1, %rsi
 4416      FFFFFF
1764:fltk-1.3.4-1/png/pngwrite.c ****          }
 4417              		.loc 1 1764 13 view .LVU1259
 4418 0182 48895C24 		movq	%rbx, 24(%rsp)
 4418      18
 4419              	.LVL362:
1764:fltk-1.3.4-1/png/pngwrite.c ****          }
 4420              		.loc 1 1764 13 view .LVU1260
 4421 0187 E9CAFEFF 		jmp	.L421
 4421      FF
 4422              	.LVL363:
 4423              	.L420:
1773:fltk-1.3.4-1/png/pngwrite.c **** 
 4424              		.loc 1 1773 7 is_stmt 1 view .LVU1261
 4425 018c 488D3500 		leaq	.LC9(%rip), %rsi
 4425      000000
 4426 0193 4C89E7   		movq	%r12, %rdi
 4427              	.LVL364:
1773:fltk-1.3.4-1/png/pngwrite.c **** 
 4428              		.loc 1 1773 7 is_stmt 0 view .LVU1262
 4429 0196 E8000000 		call	png_error@PLT
 4429      00
 4430              	.LVL365:
1773:fltk-1.3.4-1/png/pngwrite.c **** 
 4431              		.loc 1 1773 7 view .LVU1263
 4432              		.cfi_endproc
 4433              	.LFE76:
 4435              		.section	.text.png_set_flush,"ax",@progbits
 4436              		.p2align 4
 4437              		.globl	png_set_flush
 4439              	png_set_flush:
 4440              	.LVL366:
 4441              	.LFB53:
 892:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_flush");
 4442              		.loc 1 892 1 is_stmt 1 view -0
 4443              		.cfi_startproc
 892:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_flush");
 4444              		.loc 1 892 1 is_stmt 0 view .LVU1265
 4445 0000 F30F1EFA 		endbr64
 893:fltk-1.3.4-1/png/pngwrite.c **** 
 4446              		.loc 1 893 4 is_stmt 1 view .LVU1266
 895:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4447              		.loc 1 895 4 view .LVU1267
 895:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4448              		.loc 1 895 7 is_stmt 0 view .LVU1268
 4449 0004 4885FF   		testq	%rdi, %rdi
 4450 0007 7410     		je	.L454
 898:fltk-1.3.4-1/png/pngwrite.c **** }
 4451              		.loc 1 898 4 is_stmt 1 view .LVU1269
 898:fltk-1.3.4-1/png/pngwrite.c **** }
 4452              		.loc 1 898 41 is_stmt 0 view .LVU1270
 4453 0009 85F6     		testl	%esi, %esi
 4454 000b B8000000 		movl	$0, %eax
 4454      00
 4455 0010 0F48F0   		cmovs	%eax, %esi
 4456              	.LVL367:
 898:fltk-1.3.4-1/png/pngwrite.c **** }
 4457              		.loc 1 898 24 view .LVU1271
 4458 0013 89B7A802 		movl	%esi, 680(%rdi)
 4458      0000
 4459              	.L454:
 899:fltk-1.3.4-1/png/pngwrite.c **** 
 4460              		.loc 1 899 1 view .LVU1272
 4461 0019 C3       		ret
 4462              		.cfi_endproc
 4463              	.LFE53:
 4465              		.section	.text.png_write_flush,"ax",@progbits
 4466              		.p2align 4
 4467              		.globl	png_write_flush
 4469              	png_write_flush:
 4470              	.LVL368:
 4471              	.LFB54:
 904:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_flush");
 4472              		.loc 1 904 1 is_stmt 1 view -0
 4473              		.cfi_startproc
 904:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_flush");
 4474              		.loc 1 904 1 is_stmt 0 view .LVU1274
 4475 0000 F30F1EFA 		endbr64
 905:fltk-1.3.4-1/png/pngwrite.c **** 
 4476              		.loc 1 905 4 is_stmt 1 view .LVU1275
 907:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4477              		.loc 1 907 4 view .LVU1276
 907:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4478              		.loc 1 907 7 is_stmt 0 view .LVU1277
 4479 0004 4885FF   		testq	%rdi, %rdi
 4480 0007 743F     		je	.L465
 904:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_write_flush");
 4481              		.loc 1 904 1 view .LVU1278
 4482 0009 55       		pushq	%rbp
 4483              		.cfi_def_cfa_offset 16
 4484              		.cfi_offset 6, -16
 4485 000a 4889FD   		movq	%rdi, %rbp
 911:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4486              		.loc 1 911 4 is_stmt 1 view .LVU1279
 911:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4487              		.loc 1 911 7 is_stmt 0 view .LVU1280
 4488 000d 8B870002 		movl	512(%rdi), %eax
 4488      0000
 4489 0013 39871402 		cmpl	%eax, 532(%rdi)
 4489      0000
 4490 0019 7205     		jb	.L468
 917:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FLUSH */
 4491              		.loc 1 917 1 view .LVU1281
 4492 001b 5D       		popq	%rbp
 4493              		.cfi_remember_state
 4494              		.cfi_def_cfa_offset 8
 4495 001c C3       		ret
 4496 001d 0F1F00   		.p2align 4,,10
 4497              		.p2align 3
 4498              	.L468:
 4499              		.cfi_restore_state
 914:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->flush_rows = 0;
 4500              		.loc 1 914 4 is_stmt 1 view .LVU1282
 4501 0020 B9020000 		movl	$2, %ecx
 4501      00
 4502 0025 31D2     		xorl	%edx, %edx
 4503 0027 31F6     		xorl	%esi, %esi
 4504 0029 E8000000 		call	png_compress_IDAT@PLT
 4504      00
 4505              	.LVL369:
 915:fltk-1.3.4-1/png/pngwrite.c ****    png_flush(png_ptr);
 4506              		.loc 1 915 4 view .LVU1283
 916:fltk-1.3.4-1/png/pngwrite.c **** }
 4507              		.loc 1 916 4 is_stmt 0 view .LVU1284
 4508 002e 4889EF   		movq	%rbp, %rdi
 915:fltk-1.3.4-1/png/pngwrite.c ****    png_flush(png_ptr);
 4509              		.loc 1 915 24 view .LVU1285
 4510 0031 C785AC02 		movl	$0, 684(%rbp)
 4510      00000000 
 4510      0000
 916:fltk-1.3.4-1/png/pngwrite.c **** }
 4511              		.loc 1 916 4 is_stmt 1 view .LVU1286
 917:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FLUSH */
 4512              		.loc 1 917 1 is_stmt 0 view .LVU1287
 4513 003b 5D       		popq	%rbp
 4514              		.cfi_restore 6
 4515              		.cfi_def_cfa_offset 8
 4516              	.LVL370:
 916:fltk-1.3.4-1/png/pngwrite.c **** }
 4517              		.loc 1 916 4 view .LVU1288
 4518 003c E9000000 		jmp	png_flush@PLT
 4518      00
 4519              	.LVL371:
 4520              		.p2align 4,,10
 4521 0041 0F1F8000 		.p2align 3
 4521      000000
 4522              	.L465:
 916:fltk-1.3.4-1/png/pngwrite.c **** }
 4523              		.loc 1 916 4 view .LVU1289
 4524 0048 C3       		ret
 4525              		.cfi_endproc
 4526              	.LFE54:
 4528              		.section	.text.png_destroy_write_struct,"ax",@progbits
 4529              		.p2align 4
 4530              		.globl	png_destroy_write_struct
 4532              	png_destroy_write_struct:
 4533              	.LVL372:
 4534              	.LFB56:
 980:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_destroy_write_struct");
 4535              		.loc 1 980 1 is_stmt 1 view -0
 4536              		.cfi_startproc
 980:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_destroy_write_struct");
 4537              		.loc 1 980 1 is_stmt 0 view .LVU1291
 4538 0000 F30F1EFA 		endbr64
 981:fltk-1.3.4-1/png/pngwrite.c **** 
 4539              		.loc 1 981 4 is_stmt 1 view .LVU1292
 983:fltk-1.3.4-1/png/pngwrite.c ****    {
 4540              		.loc 1 983 4 view .LVU1293
 983:fltk-1.3.4-1/png/pngwrite.c ****    {
 4541              		.loc 1 983 7 is_stmt 0 view .LVU1294
 4542 0004 4885FF   		testq	%rdi, %rdi
 4543 0007 0F845301 		je	.L482
 4543      0000
 980:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_destroy_write_struct");
 4544              		.loc 1 980 1 view .LVU1295
 4545 000d 55       		pushq	%rbp
 4546              		.cfi_def_cfa_offset 16
 4547              		.cfi_offset 6, -16
 4548 000e 53       		pushq	%rbx
 4549              		.cfi_def_cfa_offset 24
 4550              		.cfi_offset 3, -24
 4551 000f 4889FB   		movq	%rdi, %rbx
 4552              	.LBB274:
 985:fltk-1.3.4-1/png/pngwrite.c **** 
 4553              		.loc 1 985 7 is_stmt 1 view .LVU1296
 4554              	.LBE274:
 980:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_destroy_write_struct");
 4555              		.loc 1 980 1 is_stmt 0 view .LVU1297
 4556 0012 4883EC08 		subq	$8, %rsp
 4557              		.cfi_def_cfa_offset 32
 4558              	.LBB281:
 985:fltk-1.3.4-1/png/pngwrite.c **** 
 4559              		.loc 1 985 20 view .LVU1298
 4560 0016 488B2F   		movq	(%rdi), %rbp
 4561              	.LVL373:
 987:fltk-1.3.4-1/png/pngwrite.c ****       {
 4562              		.loc 1 987 7 is_stmt 1 view .LVU1299
 987:fltk-1.3.4-1/png/pngwrite.c ****       {
 4563              		.loc 1 987 10 is_stmt 0 view .LVU1300
 4564 0019 4885ED   		testq	%rbp, %rbp
 4565 001c 0F842E01 		je	.L469
 4565      0000
 989:fltk-1.3.4-1/png/pngwrite.c **** 
 4566              		.loc 1 989 10 is_stmt 1 view .LVU1301
 4567 0022 4889EF   		movq	%rbp, %rdi
 4568              	.LVL374:
 989:fltk-1.3.4-1/png/pngwrite.c **** 
 4569              		.loc 1 989 10 is_stmt 0 view .LVU1302
 4570 0025 E8000000 		call	png_destroy_info_struct@PLT
 4570      00
 4571              	.LVL375:
 991:fltk-1.3.4-1/png/pngwrite.c ****          png_write_destroy(png_ptr);
 4572              		.loc 1 991 10 is_stmt 1 view .LVU1303
 991:fltk-1.3.4-1/png/pngwrite.c ****          png_write_destroy(png_ptr);
 4573              		.loc 1 991 23 is_stmt 0 view .LVU1304
 4574 002a 48C70300 		movq	$0, (%rbx)
 4574      000000
 992:fltk-1.3.4-1/png/pngwrite.c ****          png_destroy_png_struct(png_ptr);
 4575              		.loc 1 992 10 is_stmt 1 view .LVU1305
 4576              	.LVL376:
 4577              	.LBB275:
 4578              	.LBI275:
 926:fltk-1.3.4-1/png/pngwrite.c **** {
 4579              		.loc 1 926 1 view .LVU1306
 4580              	.LBB276:
 928:fltk-1.3.4-1/png/pngwrite.c **** 
 4581              		.loc 1 928 4 view .LVU1307
 931:fltk-1.3.4-1/png/pngwrite.c ****       deflateEnd(&png_ptr->zstream);
 4582              		.loc 1 931 4 view .LVU1308
 931:fltk-1.3.4-1/png/pngwrite.c ****       deflateEnd(&png_ptr->zstream);
 4583              		.loc 1 931 7 is_stmt 0 view .LVU1309
 4584 0031 F6853001 		testb	$2, 304(%rbp)
 4584      000002
 4585 0038 0F852A01 		jne	.L485
 4585      0000
 4586              	.L471:
 935:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->row_buf);
 4587              		.loc 1 935 4 is_stmt 1 view .LVU1310
 4588 003e 488DB5B0 		leaq	432(%rbp), %rsi
 4588      010000
 4589 0045 4889EF   		movq	%rbp, %rdi
 4590 0048 E8000000 		call	png_free_buffer_list@PLT
 4590      00
 4591              	.LVL377:
 936:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->row_buf = NULL;
 4592              		.loc 1 936 4 view .LVU1311
 4593 004d 488BB528 		movq	552(%rbp), %rsi
 4593      020000
 4594 0054 4889EF   		movq	%rbp, %rdi
 4595 0057 E8000000 		call	png_free@PLT
 4595      00
 4596              	.LVL378:
 937:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FILTER_SUPPORTED
 4597              		.loc 1 937 4 view .LVU1312
 939:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->sub_row);
 4598              		.loc 1 939 4 is_stmt 0 view .LVU1313
 4599 005c 488BB520 		movq	544(%rbp), %rsi
 4599      020000
 4600 0063 4889EF   		movq	%rbp, %rdi
 937:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_FILTER_SUPPORTED
 4601              		.loc 1 937 21 view .LVU1314
 4602 0066 48C78528 		movq	$0, 552(%rbp)
 4602      02000000 
 4602      000000
 939:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->sub_row);
 4603              		.loc 1 939 4 is_stmt 1 view .LVU1315
 4604 0071 E8000000 		call	png_free@PLT
 4604      00
 4605              	.LVL379:
 940:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->up_row);
 4606              		.loc 1 940 4 view .LVU1316
 4607 0076 488BB530 		movq	560(%rbp), %rsi
 4607      020000
 4608 007d 4889EF   		movq	%rbp, %rdi
 4609 0080 E8000000 		call	png_free@PLT
 4609      00
 4610              	.LVL380:
 941:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->avg_row);
 4611              		.loc 1 941 4 view .LVU1317
 4612 0085 488BB538 		movq	568(%rbp), %rsi
 4612      020000
 4613 008c 4889EF   		movq	%rbp, %rdi
 4614 008f E8000000 		call	png_free@PLT
 4614      00
 4615              	.LVL381:
 942:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->paeth_row);
 4616              		.loc 1 942 4 view .LVU1318
 4617 0094 488BB540 		movq	576(%rbp), %rsi
 4617      020000
 4618 009b 4889EF   		movq	%rbp, %rdi
 4619 009e E8000000 		call	png_free@PLT
 4619      00
 4620              	.LVL382:
 943:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->prev_row = NULL;
 4621              		.loc 1 943 4 view .LVU1319
 4622 00a3 488BB548 		movq	584(%rbp), %rsi
 4622      020000
 4623 00aa 4889EF   		movq	%rbp, %rdi
 4624 00ad E8000000 		call	png_free@PLT
 4624      00
 4625              	.LVL383:
 944:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->sub_row = NULL;
 4626              		.loc 1 944 4 view .LVU1320
 953:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->filter_costs);
 4627              		.loc 1 953 4 is_stmt 0 view .LVU1321
 4628 00b2 4889EF   		movq	%rbp, %rdi
 944:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->sub_row = NULL;
 4629              		.loc 1 944 22 view .LVU1322
 4630 00b5 48C78520 		movq	$0, 544(%rbp)
 4630      02000000 
 4630      000000
 945:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->up_row = NULL;
 4631              		.loc 1 945 4 is_stmt 1 view .LVU1323
 945:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->up_row = NULL;
 4632              		.loc 1 945 21 is_stmt 0 view .LVU1324
 4633 00c0 48C78530 		movq	$0, 560(%rbp)
 4633      02000000 
 4633      000000
 946:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->avg_row = NULL;
 4634              		.loc 1 946 4 is_stmt 1 view .LVU1325
 946:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->avg_row = NULL;
 4635              		.loc 1 946 20 is_stmt 0 view .LVU1326
 4636 00cb 48C78538 		movq	$0, 568(%rbp)
 4636      02000000 
 4636      000000
 947:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->paeth_row = NULL;
 4637              		.loc 1 947 4 is_stmt 1 view .LVU1327
 947:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->paeth_row = NULL;
 4638              		.loc 1 947 21 is_stmt 0 view .LVU1328
 4639 00d6 48C78540 		movq	$0, 576(%rbp)
 4639      02000000 
 4639      000000
 948:fltk-1.3.4-1/png/pngwrite.c **** #endif
 4640              		.loc 1 948 4 is_stmt 1 view .LVU1329
 948:fltk-1.3.4-1/png/pngwrite.c **** #endif
 4641              		.loc 1 948 23 is_stmt 0 view .LVU1330
 4642 00e1 48C78548 		movq	$0, 584(%rbp)
 4642      02000000 
 4642      000000
 953:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->filter_costs);
 4643              		.loc 1 953 4 is_stmt 1 view .LVU1331
 4644 00ec E8000000 		call	png_reset_filter_heuristics
 4644      00
 4645              	.LVL384:
 954:fltk-1.3.4-1/png/pngwrite.c ****    png_free(png_ptr, png_ptr->inv_filter_costs);
 4646              		.loc 1 954 4 view .LVU1332
 4647 00f1 488BB5B8 		movq	952(%rbp), %rsi
 4647      030000
 4648 00f8 4889EF   		movq	%rbp, %rdi
 4649 00fb E8000000 		call	png_free@PLT
 4649      00
 4650              	.LVL385:
 955:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->filter_costs = NULL;
 4651              		.loc 1 955 4 view .LVU1333
 4652 0100 488BB5C0 		movq	960(%rbp), %rsi
 4652      030000
 4653 0107 4889EF   		movq	%rbp, %rdi
 4654 010a E8000000 		call	png_free@PLT
 4654      00
 4655              	.LVL386:
 956:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->inv_filter_costs = NULL;
 4656              		.loc 1 956 4 view .LVU1334
 961:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->chunk_list = NULL;
 4657              		.loc 1 961 4 is_stmt 0 view .LVU1335
 4658 010f 488BB508 		movq	1032(%rbp), %rsi
 4658      040000
 4659 0116 4889EF   		movq	%rbp, %rdi
 956:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->inv_filter_costs = NULL;
 4660              		.loc 1 956 26 view .LVU1336
 4661 0119 48C785B8 		movq	$0, 952(%rbp)
 4661      03000000 
 4661      000000
 957:fltk-1.3.4-1/png/pngwrite.c **** #endif
 4662              		.loc 1 957 4 is_stmt 1 view .LVU1337
 957:fltk-1.3.4-1/png/pngwrite.c **** #endif
 4663              		.loc 1 957 30 is_stmt 0 view .LVU1338
 4664 0124 48C785C0 		movq	$0, 960(%rbp)
 4664      03000000 
 4664      000000
 961:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->chunk_list = NULL;
 4665              		.loc 1 961 4 is_stmt 1 view .LVU1339
 4666 012f E8000000 		call	png_free@PLT
 4666      00
 4667              	.LVL387:
 962:fltk-1.3.4-1/png/pngwrite.c **** #endif
 4668              		.loc 1 962 4 view .LVU1340
 4669              	.LBE276:
 4670              	.LBE275:
 993:fltk-1.3.4-1/png/pngwrite.c ****       }
 4671              		.loc 1 993 10 is_stmt 0 view .LVU1341
 4672 0134 4889EF   		movq	%rbp, %rdi
 4673              	.LBB279:
 4674              	.LBB277:
 962:fltk-1.3.4-1/png/pngwrite.c **** #endif
 4675              		.loc 1 962 24 view .LVU1342
 4676 0137 48C78508 		movq	$0, 1032(%rbp)
 4676      04000000 
 4676      000000
 4677              	.LVL388:
 962:fltk-1.3.4-1/png/pngwrite.c **** #endif
 4678              		.loc 1 962 24 view .LVU1343
 4679              	.LBE277:
 4680              	.LBE279:
 993:fltk-1.3.4-1/png/pngwrite.c ****       }
 4681              		.loc 1 993 10 is_stmt 1 view .LVU1344
 4682              	.LBE281:
 996:fltk-1.3.4-1/png/pngwrite.c **** 
 4683              		.loc 1 996 1 is_stmt 0 view .LVU1345
 4684 0142 4883C408 		addq	$8, %rsp
 4685              		.cfi_remember_state
 4686              		.cfi_def_cfa_offset 24
 4687 0146 5B       		popq	%rbx
 4688              		.cfi_restore 3
 4689              		.cfi_def_cfa_offset 16
 4690              	.LVL389:
 996:fltk-1.3.4-1/png/pngwrite.c **** 
 4691              		.loc 1 996 1 view .LVU1346
 4692 0147 5D       		popq	%rbp
 4693              		.cfi_restore 6
 4694              		.cfi_def_cfa_offset 8
 4695              	.LVL390:
 4696              	.LBB282:
 993:fltk-1.3.4-1/png/pngwrite.c ****       }
 4697              		.loc 1 993 10 view .LVU1347
 4698 0148 E9000000 		jmp	png_destroy_png_struct@PLT
 4698      00
 4699              	.LVL391:
 4700 014d 0F1F00   		.p2align 4,,10
 4701              		.p2align 3
 4702              	.L469:
 4703              		.cfi_restore_state
 993:fltk-1.3.4-1/png/pngwrite.c ****       }
 4704              		.loc 1 993 10 view .LVU1348
 4705              	.LBE282:
 996:fltk-1.3.4-1/png/pngwrite.c **** 
 4706              		.loc 1 996 1 view .LVU1349
 4707 0150 4883C408 		addq	$8, %rsp
 4708              		.cfi_def_cfa_offset 24
 4709 0154 5B       		popq	%rbx
 4710              		.cfi_def_cfa_offset 16
 4711              	.LVL392:
 996:fltk-1.3.4-1/png/pngwrite.c **** 
 4712              		.loc 1 996 1 view .LVU1350
 4713 0155 5D       		popq	%rbp
 4714              		.cfi_def_cfa_offset 8
 4715              	.LVL393:
 996:fltk-1.3.4-1/png/pngwrite.c **** 
 4716              		.loc 1 996 1 view .LVU1351
 4717 0156 C3       		ret
 4718              	.LVL394:
 4719 0157 660F1F84 		.p2align 4,,10
 4719      00000000 
 4719      00
 4720              		.p2align 3
 4721              	.L482:
 4722              		.cfi_restore 3
 4723              		.cfi_restore 6
 996:fltk-1.3.4-1/png/pngwrite.c **** 
 4724              		.loc 1 996 1 view .LVU1352
 4725 0160 C3       		ret
 4726              	.LVL395:
 4727              		.p2align 4,,10
 4728 0161 0F1F8000 		.p2align 3
 4728      000000
 4729              	.L485:
 4730              		.cfi_def_cfa_offset 32
 4731              		.cfi_offset 3, -24
 4732              		.cfi_offset 6, -16
 4733              	.LBB283:
 4734              	.LBB280:
 4735              	.LBB278:
 932:fltk-1.3.4-1/png/pngwrite.c **** 
 4736              		.loc 1 932 7 is_stmt 1 view .LVU1353
 4737 0168 488DBD40 		leaq	320(%rbp), %rdi
 4737      010000
 4738 016f E8000000 		call	deflateEnd@PLT
 4738      00
 4739              	.LVL396:
 4740 0174 E9C5FEFF 		jmp	.L471
 4740      FF
 4741              	.LBE278:
 4742              	.LBE280:
 4743              	.LBE283:
 4744              		.cfi_endproc
 4745              	.LFE56:
 4747              		.section	.rodata.png_set_filter.str1.8,"aMS",@progbits,1
 4748              		.align 8
 4749              	.LC10:
 4750 0000 556E6B6E 		.string	"Unknown row filter for method 0"
 4750      6F776E20 
 4750      726F7720 
 4750      66696C74 
 4750      65722066 
 4751              		.align 8
 4752              	.LC11:
 4753 0020 43616E27 		.string	"Can't add Up filter after starting"
 4753      74206164 
 4753      64205570 
 4753      2066696C 
 4753      74657220 
 4754 0043 00000000 		.align 8
 4754      00
 4755              	.LC12:
 4756 0048 43616E27 		.string	"Can't add Average filter after starting"
 4756      74206164 
 4756      64204176 
 4756      65726167 
 4756      65206669 
 4757              		.align 8
 4758              	.LC13:
 4759 0070 43616E27 		.string	"Can't add Paeth filter after starting"
 4759      74206164 
 4759      64205061 
 4759      65746820 
 4759      66696C74 
 4760              		.section	.rodata.png_set_filter.str1.1,"aMS",@progbits,1
 4761              	.LC14:
 4762 0000 556E6B6E 		.string	"Unknown custom filter method"
 4762      6F776E20 
 4762      63757374 
 4762      6F6D2066 
 4762      696C7465 
 4763              		.section	.text.png_set_filter,"ax",@progbits
 4764              		.p2align 4
 4765              		.globl	png_set_filter
 4767              	png_set_filter:
 4768              	.LVL397:
 4769              	.LFB57:
1001:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter");
 4770              		.loc 1 1001 1 view -0
 4771              		.cfi_startproc
1001:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter");
 4772              		.loc 1 1001 1 is_stmt 0 view .LVU1355
 4773 0000 F30F1EFA 		endbr64
1002:fltk-1.3.4-1/png/pngwrite.c **** 
 4774              		.loc 1 1002 4 is_stmt 1 view .LVU1356
1004:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4775              		.loc 1 1004 4 view .LVU1357
1004:fltk-1.3.4-1/png/pngwrite.c ****       return;
 4776              		.loc 1 1004 7 is_stmt 0 view .LVU1358
 4777 0004 4885FF   		testq	%rdi, %rdi
 4778 0007 0F84B301 		je	.L527
 4778      0000
1001:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter");
 4779              		.loc 1 1001 1 view .LVU1359
 4780 000d 55       		pushq	%rbp
 4781              		.cfi_def_cfa_offset 16
 4782              		.cfi_offset 6, -16
 4783 000e 4889FD   		movq	%rdi, %rbp
1008:fltk-1.3.4-1/png/pngwrite.c ****        (method == PNG_INTRAPIXEL_DIFFERENCING))
 4784              		.loc 1 1008 4 is_stmt 1 view .LVU1360
1008:fltk-1.3.4-1/png/pngwrite.c ****        (method == PNG_INTRAPIXEL_DIFFERENCING))
 4785              		.loc 1 1008 72 is_stmt 0 view .LVU1361
 4786 0011 F6871804 		testb	$4, 1048(%rdi)
 4786      000004
 4787 0018 7405     		je	.L513
 4788 001a 83FE40   		cmpl	$64, %esi
 4789 001d 7408     		je	.L488
 4790              	.L513:
1013:fltk-1.3.4-1/png/pngwrite.c ****    {
 4791              		.loc 1 1013 4 is_stmt 1 view .LVU1362
1013:fltk-1.3.4-1/png/pngwrite.c ****    {
 4792              		.loc 1 1013 7 is_stmt 0 view .LVU1363
 4793 001f 85F6     		testl	%esi, %esi
 4794 0021 0F856502 		jne	.L490
 4794      0000
 4795              	.L488:
 4796              	.LVL398:
1015:fltk-1.3.4-1/png/pngwrite.c ****       {
 4797              		.loc 1 1015 7 is_stmt 1 view .LVU1364
1015:fltk-1.3.4-1/png/pngwrite.c ****       {
 4798              		.loc 1 1015 23 is_stmt 0 view .LVU1365
 4799 0027 0FB6C2   		movzbl	%dl, %eax
 4800 002a 80FA07   		cmpb	$7, %dl
 4801 002d 0F878E01 		ja	.L491
 4801      0000
 4802 0033 488D0D00 		leaq	.L493(%rip), %rcx
 4802      000000
 4803 003a 89C2     		movl	%eax, %edx
 4804              	.LVL399:
1015:fltk-1.3.4-1/png/pngwrite.c ****       {
 4805              		.loc 1 1015 23 view .LVU1366
 4806 003c 48630491 		movslq	(%rcx,%rdx,4), %rax
 4807 0040 4801C8   		addq	%rcx, %rax
 4808 0043 3EFFE0   		notrack jmp	*%rax
 4809              		.section	.rodata.png_set_filter,"a",@progbits
 4810              		.align 4
 4811              		.align 4
 4812              	.L493:
 4813 0000 00000000 		.long	.L498-.L493
 4814 0004 00000000 		.long	.L497-.L493
 4815 0008 00000000 		.long	.L496-.L493
 4816 000c 00000000 		.long	.L495-.L493
 4817 0010 00000000 		.long	.L494-.L493
 4818 0014 00000000 		.long	.L492-.L493
 4819 0018 00000000 		.long	.L492-.L493
 4820 001c 00000000 		.long	.L492-.L493
 4821              		.section	.text.png_set_filter
 4822 0046 662E0F1F 		.p2align 4,,10
 4822      84000000 
 4822      0000
 4823              		.p2align 3
 4824              	.L492:
1020:fltk-1.3.4-1/png/pngwrite.c ****             /* FALL THROUGH */
 4825              		.loc 1 1020 18 is_stmt 1 view .LVU1367
 4826 0050 488D3500 		leaq	.LC10(%rip), %rsi
 4826      000000
 4827 0057 4889EF   		movq	%rbp, %rdi
 4828              	.LVL400:
1020:fltk-1.3.4-1/png/pngwrite.c ****             /* FALL THROUGH */
 4829              		.loc 1 1020 18 is_stmt 0 view .LVU1368
 4830 005a E8000000 		call	png_app_error@PLT
 4830      00
 4831              	.LVL401:
 4832              	.L498:
1024:fltk-1.3.4-1/png/pngwrite.c **** 
 4833              		.loc 1 1024 13 is_stmt 1 view .LVU1369
1024:fltk-1.3.4-1/png/pngwrite.c **** 
 4834              		.loc 1 1024 32 is_stmt 0 view .LVU1370
 4835 005f C6857602 		movb	$8, 630(%rbp)
 4835      000008
1024:fltk-1.3.4-1/png/pngwrite.c **** 
 4836              		.loc 1 1024 51 is_stmt 1 view .LVU1371
 4837              	.L499:
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 4838              		.loc 1 1056 7 view .LVU1372
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 4839              		.loc 1 1056 10 is_stmt 0 view .LVU1373
 4840 0066 4883BD28 		cmpq	$0, 552(%rbp)
 4840      02000000 
 4841 006e 742F     		je	.L486
 4842              	.L503:
1067:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->up_row == NULL)
 4843              		.loc 1 1067 10 is_stmt 1 view .LVU1374
1067:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->up_row == NULL)
 4844              		.loc 1 1067 22 is_stmt 0 view .LVU1375
 4845 0070 0FB68576 		movzbl	630(%rbp), %eax
 4845      020000
1067:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->up_row == NULL)
 4846              		.loc 1 1067 13 view .LVU1376
 4847 0077 A820     		testb	$32, %al
 4848 0079 740E     		je	.L504
1067:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->up_row == NULL)
 4849              		.loc 1 1067 56 discriminator 1 view .LVU1377
 4850 007b 4883BD38 		cmpq	$0, 568(%rbp)
 4850      02000000 
 4851 0083 0F845701 		je	.L530
 4851      0000
 4852              	.L504:
1085:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->avg_row == NULL)
 4853              		.loc 1 1085 10 is_stmt 1 view .LVU1378
1085:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->avg_row == NULL)
 4854              		.loc 1 1085 13 is_stmt 0 view .LVU1379
 4855 0089 A840     		testb	$64, %al
 4856 008b 0F849700 		je	.L506
 4856      0000
1085:fltk-1.3.4-1/png/pngwrite.c ****               png_ptr->avg_row == NULL)
 4857              		.loc 1 1085 57 discriminator 1 view .LVU1380
 4858 0091 4883BD40 		cmpq	$0, 576(%rbp)
 4858      02000000 
 4859 0099 7455     		je	.L531
1103:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->paeth_row == NULL)
 4860              		.loc 1 1103 10 is_stmt 1 view .LVU1381
1103:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->paeth_row == NULL)
 4861              		.loc 1 1103 13 is_stmt 0 view .LVU1382
 4862 009b 84C0     		testb	%al, %al
 4863 009d 7809     		js	.L512
 4864              	.L486:
1127:fltk-1.3.4-1/png/pngwrite.c **** 
 4865              		.loc 1 1127 1 view .LVU1383
 4866 009f 5D       		popq	%rbp
 4867              		.cfi_remember_state
 4868              		.cfi_def_cfa_offset 8
 4869              	.LVL402:
1127:fltk-1.3.4-1/png/pngwrite.c **** 
 4870              		.loc 1 1127 1 view .LVU1384
 4871 00a0 C3       		ret
 4872              	.LVL403:
 4873              		.p2align 4,,10
 4874 00a1 0F1F8000 		.p2align 3
 4874      000000
 4875              	.L512:
 4876              		.cfi_restore_state
1103:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->paeth_row == NULL)
 4877              		.loc 1 1103 59 view .LVU1385
 4878 00a8 4883BD48 		cmpq	$0, 584(%rbp)
 4878      02000000 
 4879 00b0 75ED     		jne	.L486
1106:fltk-1.3.4-1/png/pngwrite.c ****             {
 4880              		.loc 1 1106 13 is_stmt 1 view .LVU1386
1106:fltk-1.3.4-1/png/pngwrite.c ****             {
 4881              		.loc 1 1106 16 is_stmt 0 view .LVU1387
 4882 00b2 4883BD20 		cmpq	$0, 544(%rbp)
 4882      02000000 
 4883 00ba 0F845801 		je	.L532
 4883      0000
1114:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 4884              		.loc 1 1114 16 is_stmt 1 view .LVU1388
1114:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 4885              		.loc 1 1114 48 is_stmt 0 view .LVU1389
 4886 00c0 488B8508 		movq	520(%rbp), %rax
 4886      020000
 4887 00c7 4889EF   		movq	%rbp, %rdi
 4888 00ca 488D7001 		leaq	1(%rax), %rsi
 4889 00ce E8000000 		call	png_malloc@PLT
 4889      00
 4890              	.LVL404:
1114:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 4891              		.loc 1 1114 35 view .LVU1390
 4892 00d3 48898548 		movq	%rax, 584(%rbp)
 4892      020000
1116:fltk-1.3.4-1/png/pngwrite.c ****             }
 4893              		.loc 1 1116 16 is_stmt 1 view .LVU1391
1116:fltk-1.3.4-1/png/pngwrite.c ****             }
 4894              		.loc 1 1116 38 is_stmt 0 view .LVU1392
 4895 00da C60004   		movb	$4, (%rax)
 4896 00dd 0FB68576 		movzbl	630(%rbp), %eax
 4896      020000
 4897 00e4 EB4A     		jmp	.L509
 4898 00e6 662E0F1F 		.p2align 4,,10
 4898      84000000 
 4898      0000
 4899              		.p2align 3
 4900              	.L531:
1088:fltk-1.3.4-1/png/pngwrite.c ****             {
 4901              		.loc 1 1088 13 is_stmt 1 view .LVU1393
1088:fltk-1.3.4-1/png/pngwrite.c ****             {
 4902              		.loc 1 1088 16 is_stmt 0 view .LVU1394
 4903 00f0 4883BD20 		cmpq	$0, 544(%rbp)
 4903      02000000 
 4904 00f8 0F846A01 		je	.L533
 4904      0000
1097:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 4905              		.loc 1 1097 16 is_stmt 1 view .LVU1395
1097:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 4906              		.loc 1 1097 46 is_stmt 0 view .LVU1396
 4907 00fe 488B8508 		movq	520(%rbp), %rax
 4907      020000
 4908 0105 4889EF   		movq	%rbp, %rdi
 4909 0108 488D7001 		leaq	1(%rax), %rsi
 4910 010c E8000000 		call	png_malloc@PLT
 4910      00
 4911              	.LVL405:
1097:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 4912              		.loc 1 1097 33 view .LVU1397
 4913 0111 48898540 		movq	%rax, 576(%rbp)
 4913      020000
1099:fltk-1.3.4-1/png/pngwrite.c ****             }
 4914              		.loc 1 1099 16 is_stmt 1 view .LVU1398
1099:fltk-1.3.4-1/png/pngwrite.c ****             }
 4915              		.loc 1 1099 36 is_stmt 0 view .LVU1399
 4916 0118 C60003   		movb	$3, (%rax)
 4917 011b 0FB68576 		movzbl	630(%rbp), %eax
 4917      020000
 4918              		.p2align 4,,10
 4919 0122 660F1F44 		.p2align 3
 4919      0000
 4920              	.L506:
1103:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->paeth_row == NULL)
 4921              		.loc 1 1103 10 is_stmt 1 view .LVU1400
1103:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->paeth_row == NULL)
 4922              		.loc 1 1103 13 is_stmt 0 view .LVU1401
 4923 0128 84C0     		testb	%al, %al
 4924 012a 0F8878FF 		js	.L512
 4924      FFFF
 4925              	.L509:
1120:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FILTER */
 4926              		.loc 1 1120 10 is_stmt 1 view .LVU1402
1120:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_FILTER */
 4927              		.loc 1 1120 13 is_stmt 0 view .LVU1403
 4928 0130 84C0     		testb	%al, %al
 4929 0132 0F8567FF 		jne	.L486
 4929      FFFF
1122:fltk-1.3.4-1/png/pngwrite.c ****       }
 4930              		.loc 1 1122 13 is_stmt 1 view .LVU1404
1122:fltk-1.3.4-1/png/pngwrite.c ****       }
 4931              		.loc 1 1122 32 is_stmt 0 view .LVU1405
 4932 0138 C6857602 		movb	$8, 630(%rbp)
 4932      000008
1127:fltk-1.3.4-1/png/pngwrite.c **** 
 4933              		.loc 1 1127 1 view .LVU1406
 4934 013f 5D       		popq	%rbp
 4935              		.cfi_remember_state
 4936              		.cfi_def_cfa_offset 8
 4937              	.LVL406:
1127:fltk-1.3.4-1/png/pngwrite.c **** 
 4938              		.loc 1 1127 1 view .LVU1407
 4939 0140 C3       		ret
 4940              	.LVL407:
 4941              		.p2align 4,,10
 4942 0141 0F1F8000 		.p2align 3
 4942      000000
 4943              	.L497:
 4944              		.cfi_restore_state
1028:fltk-1.3.4-1/png/pngwrite.c **** 
 4945              		.loc 1 1028 13 is_stmt 1 view .LVU1408
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 4946              		.loc 1 1056 10 is_stmt 0 view .LVU1409
 4947 0148 4883BD28 		cmpq	$0, 552(%rbp)
 4947      02000000 
1028:fltk-1.3.4-1/png/pngwrite.c **** 
 4948              		.loc 1 1028 32 view .LVU1410
 4949 0150 C6857602 		movb	$16, 630(%rbp)
 4949      000010
1028:fltk-1.3.4-1/png/pngwrite.c **** 
 4950              		.loc 1 1028 50 is_stmt 1 view .LVU1411
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 4951              		.loc 1 1056 7 view .LVU1412
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 4952              		.loc 1 1056 10 is_stmt 0 view .LVU1413
 4953 0157 0F8442FF 		je	.L486
 4953      FFFF
 4954              	.L502:
1059:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->sub_row == NULL)
 4955              		.loc 1 1059 57 view .LVU1414
 4956 015d 4883BD30 		cmpq	$0, 560(%rbp)
 4956      02000000 
 4957 0165 0F8505FF 		jne	.L503
 4957      FFFF
1062:fltk-1.3.4-1/png/pngwrite.c ****                 (png_ptr->rowbytes + 1));
 4958              		.loc 1 1062 13 is_stmt 1 view .LVU1415
1062:fltk-1.3.4-1/png/pngwrite.c ****                 (png_ptr->rowbytes + 1));
 4959              		.loc 1 1062 43 is_stmt 0 view .LVU1416
 4960 016b 488B8508 		movq	520(%rbp), %rax
 4960      020000
 4961 0172 4889EF   		movq	%rbp, %rdi
 4962              	.LVL408:
1062:fltk-1.3.4-1/png/pngwrite.c ****                 (png_ptr->rowbytes + 1));
 4963              		.loc 1 1062 43 view .LVU1417
 4964 0175 488D7001 		leaq	1(%rax), %rsi
 4965 0179 E8000000 		call	png_malloc@PLT
 4965      00
 4966              	.LVL409:
1062:fltk-1.3.4-1/png/pngwrite.c ****                 (png_ptr->rowbytes + 1));
 4967              		.loc 1 1062 30 view .LVU1418
 4968 017e 48898530 		movq	%rax, 560(%rbp)
 4968      020000
1064:fltk-1.3.4-1/png/pngwrite.c ****          }
 4969              		.loc 1 1064 13 is_stmt 1 view .LVU1419
1064:fltk-1.3.4-1/png/pngwrite.c ****          }
 4970              		.loc 1 1064 33 is_stmt 0 view .LVU1420
 4971 0185 C60001   		movb	$1, (%rax)
 4972 0188 E9E3FEFF 		jmp	.L503
 4972      FF
 4973              	.LVL410:
 4974 018d 0F1F00   		.p2align 4,,10
 4975              		.p2align 3
 4976              	.L496:
1031:fltk-1.3.4-1/png/pngwrite.c **** 
 4977              		.loc 1 1031 13 is_stmt 1 view .LVU1421
1031:fltk-1.3.4-1/png/pngwrite.c **** 
 4978              		.loc 1 1031 32 is_stmt 0 view .LVU1422
 4979 0190 C6857602 		movb	$32, 630(%rbp)
 4979      000020
1031:fltk-1.3.4-1/png/pngwrite.c **** 
 4980              		.loc 1 1031 49 is_stmt 1 view .LVU1423
1031:fltk-1.3.4-1/png/pngwrite.c **** 
 4981              		.loc 1 1031 13 is_stmt 0 view .LVU1424
 4982 0197 E9CAFEFF 		jmp	.L499
 4982      FF
 4983 019c 0F1F4000 		.p2align 4,,10
 4984              		.p2align 3
 4985              	.L495:
1034:fltk-1.3.4-1/png/pngwrite.c **** 
 4986              		.loc 1 1034 13 is_stmt 1 view .LVU1425
1034:fltk-1.3.4-1/png/pngwrite.c **** 
 4987              		.loc 1 1034 32 is_stmt 0 view .LVU1426
 4988 01a0 C6857602 		movb	$64, 630(%rbp)
 4988      000040
1034:fltk-1.3.4-1/png/pngwrite.c **** 
 4989              		.loc 1 1034 50 is_stmt 1 view .LVU1427
1034:fltk-1.3.4-1/png/pngwrite.c **** 
 4990              		.loc 1 1034 13 is_stmt 0 view .LVU1428
 4991 01a7 E9BAFEFF 		jmp	.L499
 4991      FF
 4992 01ac 0F1F4000 		.p2align 4,,10
 4993              		.p2align 3
 4994              	.L494:
1037:fltk-1.3.4-1/png/pngwrite.c **** 
 4995              		.loc 1 1037 13 is_stmt 1 view .LVU1429
1037:fltk-1.3.4-1/png/pngwrite.c **** 
 4996              		.loc 1 1037 32 is_stmt 0 view .LVU1430
 4997 01b0 C6857602 		movb	$-128, 630(%rbp)
 4997      000080
1037:fltk-1.3.4-1/png/pngwrite.c **** 
 4998              		.loc 1 1037 52 is_stmt 1 view .LVU1431
1037:fltk-1.3.4-1/png/pngwrite.c **** 
 4999              		.loc 1 1037 13 is_stmt 0 view .LVU1432
 5000 01b7 E9AAFEFF 		jmp	.L499
 5000      FF
 5001              	.LVL411:
 5002 01bc 0F1F4000 		.p2align 4,,10
 5003              		.p2align 3
 5004              	.L527:
 5005              		.cfi_def_cfa_offset 8
 5006              		.cfi_restore 6
1037:fltk-1.3.4-1/png/pngwrite.c **** 
 5007              		.loc 1 1037 13 view .LVU1433
 5008 01c0 C3       		ret
 5009              	.LVL412:
 5010              	.L491:
 5011              		.cfi_def_cfa_offset 16
 5012              		.cfi_offset 6, -16
1040:fltk-1.3.4-1/png/pngwrite.c **** #else
 5013              		.loc 1 1040 13 is_stmt 1 view .LVU1434
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 5014              		.loc 1 1056 10 is_stmt 0 view .LVU1435
 5015 01c1 4883BD28 		cmpq	$0, 552(%rbp)
 5015      02000000 
1040:fltk-1.3.4-1/png/pngwrite.c **** #else
 5016              		.loc 1 1040 32 view .LVU1436
 5017 01c9 88957602 		movb	%dl, 630(%rbp)
 5017      0000
1040:fltk-1.3.4-1/png/pngwrite.c **** #else
 5018              		.loc 1 1040 53 is_stmt 1 view .LVU1437
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 5019              		.loc 1 1056 7 view .LVU1438
1056:fltk-1.3.4-1/png/pngwrite.c ****       {
 5020              		.loc 1 1056 10 is_stmt 0 view .LVU1439
 5021 01cf 0F84CAFE 		je	.L486
 5021      FFFF
1059:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->sub_row == NULL)
 5022              		.loc 1 1059 10 is_stmt 1 view .LVU1440
1059:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->sub_row == NULL)
 5023              		.loc 1 1059 13 is_stmt 0 view .LVU1441
 5024 01d5 83E210   		andl	$16, %edx
 5025              	.LVL413:
1059:fltk-1.3.4-1/png/pngwrite.c ****              png_ptr->sub_row == NULL)
 5026              		.loc 1 1059 13 view .LVU1442
 5027 01d8 7583     		jne	.L502
 5028 01da E991FEFF 		jmp	.L503
 5028      FF
 5029              	.LVL414:
 5030 01df 90       		.p2align 4,,10
 5031              		.p2align 3
 5032              	.L530:
1070:fltk-1.3.4-1/png/pngwrite.c ****             {
 5033              		.loc 1 1070 13 is_stmt 1 view .LVU1443
1070:fltk-1.3.4-1/png/pngwrite.c ****             {
 5034              		.loc 1 1070 16 is_stmt 0 view .LVU1444
 5035 01e0 4883BD20 		cmpq	$0, 544(%rbp)
 5035      02000000 
 5036 01e8 7456     		je	.L534
1079:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 5037              		.loc 1 1079 16 is_stmt 1 view .LVU1445
1079:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 5038              		.loc 1 1079 45 is_stmt 0 view .LVU1446
 5039 01ea 488B8508 		movq	520(%rbp), %rax
 5039      020000
 5040 01f1 4889EF   		movq	%rbp, %rdi
 5041 01f4 488D7001 		leaq	1(%rax), %rsi
 5042 01f8 E8000000 		call	png_malloc@PLT
 5042      00
 5043              	.LVL415:
1079:fltk-1.3.4-1/png/pngwrite.c ****                    (png_ptr->rowbytes + 1));
 5044              		.loc 1 1079 32 view .LVU1447
 5045 01fd 48898538 		movq	%rax, 568(%rbp)
 5045      020000
1081:fltk-1.3.4-1/png/pngwrite.c ****             }
 5046              		.loc 1 1081 16 is_stmt 1 view .LVU1448
1081:fltk-1.3.4-1/png/pngwrite.c ****             }
 5047              		.loc 1 1081 35 is_stmt 0 view .LVU1449
 5048 0204 C60002   		movb	$2, (%rax)
 5049 0207 0FB68576 		movzbl	630(%rbp), %eax
 5049      020000
 5050 020e E976FEFF 		jmp	.L504
 5050      FF
 5051              		.p2align 4,,10
 5052 0213 0F1F4400 		.p2align 3
 5052      00
 5053              	.L532:
1108:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->do_filter &= (png_byte)(~PNG_FILTER_PAETH);
 5054              		.loc 1 1108 16 is_stmt 1 view .LVU1450
 5055 0218 488D3500 		leaq	.LC13(%rip), %rsi
 5055      000000
 5056 021f 4889EF   		movq	%rbp, %rdi
 5057 0222 E8000000 		call	png_warning@PLT
 5057      00
 5058              	.LVL416:
1109:fltk-1.3.4-1/png/pngwrite.c ****             }
 5059              		.loc 1 1109 16 view .LVU1451
1109:fltk-1.3.4-1/png/pngwrite.c ****             }
 5060              		.loc 1 1109 35 is_stmt 0 view .LVU1452
 5061 0227 0FB68576 		movzbl	630(%rbp), %eax
 5061      020000
 5062 022e 83E07F   		andl	$127, %eax
 5063 0231 88857602 		movb	%al, 630(%rbp)
 5063      0000
 5064 0237 E9F4FEFF 		jmp	.L509
 5064      FF
 5065 023c 0F1F4000 		.p2align 4,,10
 5066              		.p2align 3
 5067              	.L534:
1072:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->do_filter = (png_byte)(png_ptr->do_filter &
 5068              		.loc 1 1072 16 is_stmt 1 view .LVU1453
 5069 0240 488D3500 		leaq	.LC11(%rip), %rsi
 5069      000000
 5070 0247 4889EF   		movq	%rbp, %rdi
 5071 024a E8000000 		call	png_warning@PLT
 5071      00
 5072              	.LVL417:
1073:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_UP);
 5073              		.loc 1 1073 16 view .LVU1454
1073:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_UP);
 5074              		.loc 1 1073 37 is_stmt 0 view .LVU1455
 5075 024f 0FB68576 		movzbl	630(%rbp), %eax
 5075      020000
 5076 0256 83E0DF   		andl	$-33, %eax
1073:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_UP);
 5077              		.loc 1 1073 35 view .LVU1456
 5078 0259 88857602 		movb	%al, 630(%rbp)
 5078      0000
 5079 025f E925FEFF 		jmp	.L504
 5079      FF
 5080              		.p2align 4,,10
 5081 0264 0F1F4000 		.p2align 3
 5082              	.L533:
1090:fltk-1.3.4-1/png/pngwrite.c ****                png_ptr->do_filter = (png_byte)(png_ptr->do_filter &
 5083              		.loc 1 1090 16 is_stmt 1 view .LVU1457
 5084 0268 488D3500 		leaq	.LC12(%rip), %rsi
 5084      000000
 5085 026f 4889EF   		movq	%rbp, %rdi
 5086 0272 E8000000 		call	png_warning@PLT
 5086      00
 5087              	.LVL418:
1091:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_AVG);
 5088              		.loc 1 1091 16 view .LVU1458
1091:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_AVG);
 5089              		.loc 1 1091 37 is_stmt 0 view .LVU1459
 5090 0277 0FB68576 		movzbl	630(%rbp), %eax
 5090      020000
 5091 027e 83E0BF   		andl	$-65, %eax
1091:fltk-1.3.4-1/png/pngwrite.c ****                    ~PNG_FILTER_AVG);
 5092              		.loc 1 1091 35 view .LVU1460
 5093 0281 88857602 		movb	%al, 630(%rbp)
 5093      0000
 5094 0287 E99CFEFF 		jmp	.L506
 5094      FF
 5095              	.LVL419:
 5096              	.L490:
1126:fltk-1.3.4-1/png/pngwrite.c **** }
 5097              		.loc 1 1126 7 is_stmt 1 view .LVU1461
 5098 028c 488D3500 		leaq	.LC14(%rip), %rsi
 5098      000000
 5099              	.LVL420:
1126:fltk-1.3.4-1/png/pngwrite.c **** }
 5100              		.loc 1 1126 7 is_stmt 0 view .LVU1462
 5101 0293 4889EF   		movq	%rbp, %rdi
 5102              	.LVL421:
1126:fltk-1.3.4-1/png/pngwrite.c **** }
 5103              		.loc 1 1126 7 view .LVU1463
 5104 0296 E8000000 		call	png_error@PLT
 5104      00
 5105              	.LVL422:
1126:fltk-1.3.4-1/png/pngwrite.c **** }
 5106              		.loc 1 1126 7 view .LVU1464
 5107              		.cfi_endproc
 5108              	.LFE57:
 5110              		.section	.rodata.png_image_write_main.str1.8,"aMS",@progbits,1
 5111              		.align 8
 5112              	.LC15:
 5113 0000 6E6F2063 		.string	"no color-map for color-mapped image"
 5113      6F6C6F72 
 5113      2D6D6170 
 5113      20666F72 
 5113      20636F6C 
 5114 0024 00000000 		.align 8
 5115              	.LC16:
 5116 0028 706E675F 		.string	"png_write_image: unsupported transformation"
 5116      77726974 
 5116      655F696D 
 5116      6167653A 
 5116      20756E73 
 5117              		.section	.text.png_image_write_main,"ax",@progbits
 5118              		.p2align 4
 5120              	png_image_write_main:
 5121              	.LVL423:
 5122              	.LFB80:
2139:fltk-1.3.4-1/png/pngwrite.c **** 
2140:fltk-1.3.4-1/png/pngwrite.c **** static int
2141:fltk-1.3.4-1/png/pngwrite.c **** png_image_write_main(png_voidp argument)
2142:fltk-1.3.4-1/png/pngwrite.c **** {
 5123              		.loc 1 2142 1 is_stmt 1 view -0
 5124              		.cfi_startproc
 5125              		.loc 1 2142 1 is_stmt 0 view .LVU1466
 5126 0000 F30F1EFA 		endbr64
2143:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 5127              		.loc 1 2143 4 is_stmt 1 view .LVU1467
 5128              	.LVL424:
2144:fltk-1.3.4-1/png/pngwrite.c ****       argument);
2145:fltk-1.3.4-1/png/pngwrite.c ****    png_imagep image = display->image;
 5129              		.loc 1 2145 4 view .LVU1468
2142:fltk-1.3.4-1/png/pngwrite.c ****    png_image_write_control *display = png_voidcast(png_image_write_control*,
 5130              		.loc 1 2142 1 is_stmt 0 view .LVU1469
 5131 0004 4157     		pushq	%r15
 5132              		.cfi_def_cfa_offset 16
 5133              		.cfi_offset 15, -16
 5134 0006 4156     		pushq	%r14
 5135              		.cfi_def_cfa_offset 24
 5136              		.cfi_offset 14, -24
 5137 0008 4989FE   		movq	%rdi, %r14
 5138 000b 4155     		pushq	%r13
 5139              		.cfi_def_cfa_offset 32
 5140              		.cfi_offset 13, -32
 5141 000d 4154     		pushq	%r12
 5142              		.cfi_def_cfa_offset 40
 5143              		.cfi_offset 12, -40
 5144 000f 55       		pushq	%rbp
 5145              		.cfi_def_cfa_offset 48
 5146              		.cfi_offset 6, -48
 5147 0010 53       		pushq	%rbx
 5148              		.cfi_def_cfa_offset 56
 5149              		.cfi_offset 3, -56
 5150 0011 4883EC18 		subq	$24, %rsp
 5151              		.cfi_def_cfa_offset 80
 5152              		.loc 1 2145 15 view .LVU1470
 5153 0015 488B1F   		movq	(%rdi), %rbx
 5154              	.LVL425:
2146:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 5155              		.loc 1 2146 4 is_stmt 1 view .LVU1471
 5156              		.loc 1 2146 32 is_stmt 0 view .LVU1472
 5157 0018 488B03   		movq	(%rbx), %rax
2147:fltk-1.3.4-1/png/pngwrite.c ****    png_inforp info_ptr = image->opaque->info_ptr;
2148:fltk-1.3.4-1/png/pngwrite.c ****    png_uint_32 format = image->format;
 5158              		.loc 1 2148 16 view .LVU1473
 5159 001b 448B7B14 		movl	20(%rbx), %r15d
2146:fltk-1.3.4-1/png/pngwrite.c ****    png_structrp png_ptr = image->opaque->png_ptr;
 5160              		.loc 1 2146 17 view .LVU1474
 5161 001f 488B28   		movq	(%rax), %rbp
 5162              	.LVL426:
2147:fltk-1.3.4-1/png/pngwrite.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 5163              		.loc 1 2147 4 is_stmt 1 view .LVU1475
2147:fltk-1.3.4-1/png/pngwrite.c ****    png_inforp info_ptr = image->opaque->info_ptr;
 5164              		.loc 1 2147 15 is_stmt 0 view .LVU1476
 5165 0022 4C8B6008 		movq	8(%rax), %r12
 5166              	.LVL427:
 5167              		.loc 1 2148 4 is_stmt 1 view .LVU1477
2149:fltk-1.3.4-1/png/pngwrite.c **** 
2150:fltk-1.3.4-1/png/pngwrite.c ****    /* The following four ints are actually booleans */
2151:fltk-1.3.4-1/png/pngwrite.c ****    int colormap = (format & PNG_FORMAT_FLAG_COLORMAP);
 5168              		.loc 1 2151 4 view .LVU1478
2152:fltk-1.3.4-1/png/pngwrite.c ****    int linear = !colormap && (format & PNG_FORMAT_FLAG_LINEAR); /* input */
 5169              		.loc 1 2152 4 view .LVU1479
 5170              		.loc 1 2152 27 is_stmt 0 view .LVU1480
 5171 0026 4489F8   		movl	%r15d, %eax
 5172 0029 83E008   		andl	$8, %eax
 5173              	.LVL428:
 5174              		.loc 1 2152 27 view .LVU1481
 5175 002c 89442408 		movl	%eax, 8(%rsp)
 5176 0030 7536     		jne	.L568
 5177              	.LVL429:
2153:fltk-1.3.4-1/png/pngwrite.c ****    int alpha = !colormap && (format & PNG_FORMAT_FLAG_ALPHA);
 5178              		.loc 1 2153 37 discriminator 1 view .LVU1482
 5179 0032 4489F8   		movl	%r15d, %eax
 5180              	.LVL430:
 5181              		.loc 1 2153 37 discriminator 1 view .LVU1483
 5182 0035 83E001   		andl	$1, %eax
 5183 0038 8944240C 		movl	%eax, 12(%rsp)
 5184              	.LVL431:
2154:fltk-1.3.4-1/png/pngwrite.c ****    int write_16bit = linear && !colormap && (display->convert_to_8bit == 0);
 5185              		.loc 1 2154 4 is_stmt 1 discriminator 1 view .LVU1484
 5186              		.loc 1 2154 42 is_stmt 0 discriminator 1 view .LVU1485
 5187 003c 41F6C704 		testb	$4, %r15b
 5188 0040 0F84E103 		je	.L569
 5188      0000
 5189 0046 448B4720 		movl	32(%rdi), %r8d
 5190 004a 31C0     		xorl	%eax, %eax
 5191              	.LVL432:
 5192              		.loc 1 2154 32 discriminator 1 view .LVU1486
 5193 004c C6442407 		movb	$1, 7(%rsp)
 5193      01
 5194 0051 41BD0100 		movl	$1, %r13d
 5194      0000
 5195              		.loc 1 2154 42 discriminator 1 view .LVU1487
 5196 0057 4585C0   		testl	%r8d, %r8d
 5197 005a 0F94C0   		sete	%al
 5198 005d 890424   		movl	%eax, (%rsp)
 5199 0060 EB1D     		jmp	.L536
 5200              	.LVL433:
 5201              		.p2align 4,,10
 5202 0062 660F1F44 		.p2align 3
 5202      0000
 5203              	.L568:
2153:fltk-1.3.4-1/png/pngwrite.c ****    int alpha = !colormap && (format & PNG_FORMAT_FLAG_ALPHA);
 5204              		.loc 1 2153 26 view .LVU1488
 5205 0068 C744240C 		movl	$0, 12(%rsp)
 5205      00000000 
2152:fltk-1.3.4-1/png/pngwrite.c ****    int linear = !colormap && (format & PNG_FORMAT_FLAG_LINEAR); /* input */
 5206              		.loc 1 2152 27 view .LVU1489
 5207 0070 4531ED   		xorl	%r13d, %r13d
 5208              		.loc 1 2154 32 view .LVU1490
 5209 0073 C6442407 		movb	$0, 7(%rsp)
 5209      00
 5210              		.loc 1 2154 42 view .LVU1491
 5211 0078 C7042400 		movl	$0, (%rsp)
 5211      000000
 5212              	.LVL434:
 5213              	.L536:
2155:fltk-1.3.4-1/png/pngwrite.c **** 
2156:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_BENIGN_ERRORS_SUPPORTED
2157:fltk-1.3.4-1/png/pngwrite.c ****       /* Make sure we error out on any bad situation */
2158:fltk-1.3.4-1/png/pngwrite.c ****       png_set_benign_errors(png_ptr, 0/*error*/);
 5214              		.loc 1 2158 7 is_stmt 1 discriminator 6 view .LVU1492
 5215 007f 4889EF   		movq	%rbp, %rdi
 5216              	.LVL435:
 5217              		.loc 1 2158 7 is_stmt 0 discriminator 6 view .LVU1493
 5218 0082 31F6     		xorl	%esi, %esi
 5219 0084 E8000000 		call	png_set_benign_errors@PLT
 5219      00
 5220              	.LVL436:
2159:fltk-1.3.4-1/png/pngwrite.c **** #  endif
2160:fltk-1.3.4-1/png/pngwrite.c **** 
2161:fltk-1.3.4-1/png/pngwrite.c ****    /* Default the 'row_stride' parameter if required. */
2162:fltk-1.3.4-1/png/pngwrite.c ****    if (display->row_stride == 0)
 5221              		.loc 1 2162 4 is_stmt 1 discriminator 6 view .LVU1494
 5222              		.loc 1 2162 7 is_stmt 0 discriminator 6 view .LVU1495
 5223 0089 418B7E10 		movl	16(%r14), %edi
 5224 008d 85FF     		testl	%edi, %edi
 5225 008f 751E     		jne	.L537
2163:fltk-1.3.4-1/png/pngwrite.c ****       display->row_stride = PNG_IMAGE_ROW_STRIDE(*image);
 5226              		.loc 1 2163 7 is_stmt 1 view .LVU1496
 5227              		.loc 1 2163 29 is_stmt 0 view .LVU1497
 5228 0091 8B4B14   		movl	20(%rbx), %ecx
 5229 0094 89CA     		movl	%ecx, %edx
 5230 0096 83E203   		andl	$3, %edx
 5231 0099 83C201   		addl	$1, %edx
 5232 009c 83E108   		andl	$8, %ecx
 5233 009f B9010000 		movl	$1, %ecx
 5233      00
 5234 00a4 0F45D1   		cmovne	%ecx, %edx
 5235 00a7 0FAF530C 		imull	12(%rbx), %edx
 5236              		.loc 1 2163 27 view .LVU1498
 5237 00ab 41895610 		movl	%edx, 16(%r14)
 5238              	.L537:
2164:fltk-1.3.4-1/png/pngwrite.c **** 
2165:fltk-1.3.4-1/png/pngwrite.c ****    /* Set the required transforms then write the rows in the correct order. */
2166:fltk-1.3.4-1/png/pngwrite.c ****    if ((format & PNG_FORMAT_FLAG_COLORMAP) != 0)
 5239              		.loc 1 2166 4 is_stmt 1 view .LVU1499
 5240              		.loc 1 2166 7 is_stmt 0 view .LVU1500
 5241 00af 41F6C708 		testb	$8, %r15b
 5242 00b3 0F84E701 		je	.L539
 5242      0000
2167:fltk-1.3.4-1/png/pngwrite.c ****    {
2168:fltk-1.3.4-1/png/pngwrite.c ****       if (display->colormap != NULL && image->colormap_entries > 0)
 5243              		.loc 1 2168 7 is_stmt 1 view .LVU1501
 5244              		.loc 1 2168 10 is_stmt 0 view .LVU1502
 5245 00b9 49837E18 		cmpq	$0, 24(%r14)
 5245      00
 5246 00be 0F844203 		je	.L540
 5246      0000
 5247              		.loc 1 2168 45 discriminator 1 view .LVU1503
 5248 00c4 8B531C   		movl	28(%rbx), %edx
 5249              		.loc 1 2168 37 discriminator 1 view .LVU1504
 5250 00c7 85D2     		testl	%edx, %edx
 5251 00c9 0F843703 		je	.L540
 5251      0000
 5252              	.LBB284:
2169:fltk-1.3.4-1/png/pngwrite.c ****       {
2170:fltk-1.3.4-1/png/pngwrite.c ****          png_uint_32 entries = image->colormap_entries;
 5253              		.loc 1 2170 10 is_stmt 1 view .LVU1505
 5254              	.LVL437:
2171:fltk-1.3.4-1/png/pngwrite.c **** 
2172:fltk-1.3.4-1/png/pngwrite.c ****          png_set_IHDR(png_ptr, info_ptr, image->width, image->height,
 5255              		.loc 1 2172 10 view .LVU1506
 5256 00cf 41B80800 		movl	$8, %r8d
 5256      0000
 5257 00d5 83FA10   		cmpl	$16, %edx
 5258 00d8 770F     		ja	.L541
2173:fltk-1.3.4-1/png/pngwrite.c ****             entries > 16 ? 8 : (entries > 4 ? 4 : (entries > 2 ? 2 : 1)),
 5259              		.loc 1 2173 49 is_stmt 0 view .LVU1507
 5260 00da 41B80400 		movl	$4, %r8d
 5260      0000
 5261 00e0 83FA04   		cmpl	$4, %edx
 5262 00e3 0F869702 		jbe	.L613
 5262      0000
 5263              	.L541:
2172:fltk-1.3.4-1/png/pngwrite.c ****             entries > 16 ? 8 : (entries > 4 ? 4 : (entries > 2 ? 2 : 1)),
 5264              		.loc 1 2172 10 discriminator 3 view .LVU1508
 5265 00e9 4883EC08 		subq	$8, %rsp
 5266              		.cfi_def_cfa_offset 88
 5267              	.LVL438:
2172:fltk-1.3.4-1/png/pngwrite.c ****             entries > 16 ? 8 : (entries > 4 ? 4 : (entries > 2 ? 2 : 1)),
 5268              		.loc 1 2172 10 discriminator 3 view .LVU1509
 5269 00ed 8B4B10   		movl	16(%rbx), %ecx
 5270 00f0 8B530C   		movl	12(%rbx), %edx
 5271              	.LVL439:
2172:fltk-1.3.4-1/png/pngwrite.c ****             entries > 16 ? 8 : (entries > 4 ? 4 : (entries > 2 ? 2 : 1)),
 5272              		.loc 1 2172 10 discriminator 3 view .LVU1510
 5273 00f3 41B90300 		movl	$3, %r9d
 5273      0000
 5274 00f9 6A00     		pushq	$0
 5275              		.cfi_def_cfa_offset 96
 5276              	.LVL440:
2172:fltk-1.3.4-1/png/pngwrite.c ****             entries > 16 ? 8 : (entries > 4 ? 4 : (entries > 2 ? 2 : 1)),
 5277              		.loc 1 2172 10 discriminator 3 view .LVU1511
 5278 00fb 4C89E6   		movq	%r12, %rsi
 5279 00fe 4889EF   		movq	%rbp, %rdi
 5280 0101 6A00     		pushq	$0
 5281              		.cfi_def_cfa_offset 104
 5282 0103 6A00     		pushq	$0
 5283              		.cfi_def_cfa_offset 112
 5284 0105 E8000000 		call	png_set_IHDR@PLT
 5284      00
 5285              	.LVL441:
2174:fltk-1.3.4-1/png/pngwrite.c ****             PNG_COLOR_TYPE_PALETTE, PNG_INTERLACE_NONE,
2175:fltk-1.3.4-1/png/pngwrite.c ****             PNG_COMPRESSION_TYPE_BASE, PNG_FILTER_TYPE_BASE);
2176:fltk-1.3.4-1/png/pngwrite.c **** 
2177:fltk-1.3.4-1/png/pngwrite.c ****          png_image_set_PLTE(display);
 5286              		.loc 1 2177 10 is_stmt 1 discriminator 3 view .LVU1512
 5287 010a 498B7618 		movq	24(%r14), %rsi
 5288 010e 498B3E   		movq	(%r14), %rdi
 5289 0111 4883C420 		addq	$32, %rsp
 5290              		.cfi_def_cfa_offset 80
 5291              	.LVL442:
 5292              		.loc 1 2177 10 is_stmt 0 discriminator 3 view .LVU1513
 5293 0115 E8000000 		call	png_image_set_PLTE.isra.0
 5293      00
 5294              	.LVL443:
 5295              	.LBE284:
2178:fltk-1.3.4-1/png/pngwrite.c ****       }
2179:fltk-1.3.4-1/png/pngwrite.c **** 
2180:fltk-1.3.4-1/png/pngwrite.c ****       else
2181:fltk-1.3.4-1/png/pngwrite.c ****          png_error(image->opaque->png_ptr,
2182:fltk-1.3.4-1/png/pngwrite.c ****             "no color-map for color-mapped image");
2183:fltk-1.3.4-1/png/pngwrite.c ****    }
2184:fltk-1.3.4-1/png/pngwrite.c **** 
2185:fltk-1.3.4-1/png/pngwrite.c ****    else
2186:fltk-1.3.4-1/png/pngwrite.c ****       png_set_IHDR(png_ptr, info_ptr, image->width, image->height,
2187:fltk-1.3.4-1/png/pngwrite.c ****          write_16bit ? 16 : 8,
2188:fltk-1.3.4-1/png/pngwrite.c ****          ((format & PNG_FORMAT_FLAG_COLOR) ? PNG_COLOR_MASK_COLOR : 0) +
2189:fltk-1.3.4-1/png/pngwrite.c ****          ((format & PNG_FORMAT_FLAG_ALPHA) ? PNG_COLOR_MASK_ALPHA : 0),
2190:fltk-1.3.4-1/png/pngwrite.c ****          PNG_INTERLACE_NONE, PNG_COMPRESSION_TYPE_BASE, PNG_FILTER_TYPE_BASE);
2191:fltk-1.3.4-1/png/pngwrite.c **** 
2192:fltk-1.3.4-1/png/pngwrite.c ****    /* Counter-intuitively the data transformations must be called *after*
2193:fltk-1.3.4-1/png/pngwrite.c ****     * png_write_info, not before as in the read code, but the 'set' functions
2194:fltk-1.3.4-1/png/pngwrite.c ****     * must still be called before.  Just set the color space information, never
2195:fltk-1.3.4-1/png/pngwrite.c ****     * write an interlaced image.
2196:fltk-1.3.4-1/png/pngwrite.c ****     */
2197:fltk-1.3.4-1/png/pngwrite.c **** 
2198:fltk-1.3.4-1/png/pngwrite.c ****    if (write_16bit != 0)
 5296              		.loc 1 2198 4 is_stmt 1 discriminator 3 view .LVU1514
 5297              		.loc 1 2198 7 is_stmt 0 discriminator 3 view .LVU1515
 5298 011a 8B3424   		movl	(%rsp), %esi
 5299 011d 85F6     		testl	%esi, %esi
 5300 011f 0F85CC01 		jne	.L614
 5300      0000
 5301              	.L544:
2199:fltk-1.3.4-1/png/pngwrite.c ****    {
2200:fltk-1.3.4-1/png/pngwrite.c ****       /* The gamma here is 1.0 (linear) and the cHRM chunk matches sRGB. */
2201:fltk-1.3.4-1/png/pngwrite.c ****       png_set_gAMA_fixed(png_ptr, info_ptr, PNG_GAMMA_LINEAR);
2202:fltk-1.3.4-1/png/pngwrite.c **** 
2203:fltk-1.3.4-1/png/pngwrite.c ****       if ((image->flags & PNG_IMAGE_FLAG_COLORSPACE_NOT_sRGB) == 0)
2204:fltk-1.3.4-1/png/pngwrite.c ****          png_set_cHRM_fixed(png_ptr, info_ptr,
2205:fltk-1.3.4-1/png/pngwrite.c ****             /* color      x       y */
2206:fltk-1.3.4-1/png/pngwrite.c ****             /* white */ 31270, 32900,
2207:fltk-1.3.4-1/png/pngwrite.c ****             /* red   */ 64000, 33000,
2208:fltk-1.3.4-1/png/pngwrite.c ****             /* green */ 30000, 60000,
2209:fltk-1.3.4-1/png/pngwrite.c ****             /* blue  */ 15000,  6000
2210:fltk-1.3.4-1/png/pngwrite.c ****          );
2211:fltk-1.3.4-1/png/pngwrite.c ****    }
2212:fltk-1.3.4-1/png/pngwrite.c **** 
2213:fltk-1.3.4-1/png/pngwrite.c ****    else if ((image->flags & PNG_IMAGE_FLAG_COLORSPACE_NOT_sRGB) == 0)
 5302              		.loc 1 2213 9 is_stmt 1 view .LVU1516
 5303              		.loc 1 2213 12 is_stmt 0 view .LVU1517
 5304 0125 F6431801 		testb	$1, 24(%rbx)
 5305 0129 0F85F901 		jne	.L546
 5305      0000
2214:fltk-1.3.4-1/png/pngwrite.c ****       png_set_sRGB(png_ptr, info_ptr, PNG_sRGB_INTENT_PERCEPTUAL);
 5306              		.loc 1 2214 7 is_stmt 1 view .LVU1518
 5307 012f 31D2     		xorl	%edx, %edx
 5308 0131 4C89E6   		movq	%r12, %rsi
 5309 0134 4889EF   		movq	%rbp, %rdi
 5310 0137 E8000000 		call	png_set_sRGB@PLT
 5310      00
 5311              	.LVL444:
 5312              	.L547:
2215:fltk-1.3.4-1/png/pngwrite.c **** 
2216:fltk-1.3.4-1/png/pngwrite.c ****    /* Else writing an 8-bit file and the *colors* aren't sRGB, but the 8-bit
2217:fltk-1.3.4-1/png/pngwrite.c ****     * space must still be gamma encoded.
2218:fltk-1.3.4-1/png/pngwrite.c ****     */
2219:fltk-1.3.4-1/png/pngwrite.c ****    else
2220:fltk-1.3.4-1/png/pngwrite.c ****       png_set_gAMA_fixed(png_ptr, info_ptr, PNG_GAMMA_sRGB_INVERSE);
2221:fltk-1.3.4-1/png/pngwrite.c **** 
2222:fltk-1.3.4-1/png/pngwrite.c ****    /* Write the file header. */
2223:fltk-1.3.4-1/png/pngwrite.c ****    png_write_info(png_ptr, info_ptr);
 5313              		.loc 1 2223 4 view .LVU1519
 5314 013c 4C89E6   		movq	%r12, %rsi
 5315 013f 4889EF   		movq	%rbp, %rdi
 5316 0142 E8000000 		call	png_write_info
 5316      00
 5317              	.LVL445:
2224:fltk-1.3.4-1/png/pngwrite.c **** 
2225:fltk-1.3.4-1/png/pngwrite.c ****    /* Now set up the data transformations (*after* the header is written),
2226:fltk-1.3.4-1/png/pngwrite.c ****     * remove the handled transformations from the 'format' flags for checking.
2227:fltk-1.3.4-1/png/pngwrite.c ****     *
2228:fltk-1.3.4-1/png/pngwrite.c ****     * First check for a little endian system if writing 16 bit files.
2229:fltk-1.3.4-1/png/pngwrite.c ****     */
2230:fltk-1.3.4-1/png/pngwrite.c ****    if (write_16bit != 0)
 5318              		.loc 1 2230 4 view .LVU1520
 5319              	.L567:
2231:fltk-1.3.4-1/png/pngwrite.c ****    {
2232:fltk-1.3.4-1/png/pngwrite.c ****       PNG_CONST png_uint_16 le = 0x0001;
2233:fltk-1.3.4-1/png/pngwrite.c **** 
2234:fltk-1.3.4-1/png/pngwrite.c ****       if ((*(png_const_bytep) & le) != 0)
2235:fltk-1.3.4-1/png/pngwrite.c ****          png_set_swap(png_ptr);
2236:fltk-1.3.4-1/png/pngwrite.c ****    }
2237:fltk-1.3.4-1/png/pngwrite.c **** 
2238:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_SIMPLIFIED_WRITE_BGR_SUPPORTED
2239:fltk-1.3.4-1/png/pngwrite.c ****       if ((format & PNG_FORMAT_FLAG_BGR) != 0)
 5320              		.loc 1 2239 7 view .LVU1521
 5321              		.loc 1 2239 10 is_stmt 0 view .LVU1522
 5322 0147 41F6C710 		testb	$16, %r15b
 5323 014b 7415     		je	.L548
2240:fltk-1.3.4-1/png/pngwrite.c ****       {
2241:fltk-1.3.4-1/png/pngwrite.c ****          if (colormap == 0 && (format & PNG_FORMAT_FLAG_COLOR) != 0)
 5324              		.loc 1 2241 10 is_stmt 1 view .LVU1523
 5325              		.loc 1 2241 13 is_stmt 0 view .LVU1524
 5326 014d 807C2407 		cmpb	$0, 7(%rsp)
 5326      00
 5327 0152 740A     		je	.L549
 5328              		.loc 1 2241 28 discriminator 1 view .LVU1525
 5329 0154 41F6C702 		testb	$2, %r15b
 5330 0158 0F854A02 		jne	.L615
 5330      0000
 5331              	.L549:
2242:fltk-1.3.4-1/png/pngwrite.c ****             png_set_bgr(png_ptr);
2243:fltk-1.3.4-1/png/pngwrite.c ****          format &= ~PNG_FORMAT_FLAG_BGR;
 5332              		.loc 1 2243 10 is_stmt 1 view .LVU1526
 5333              		.loc 1 2243 17 is_stmt 0 view .LVU1527
 5334 015e 4183E7EF 		andl	$-17, %r15d
 5335              	.LVL446:
 5336              	.L548:
2244:fltk-1.3.4-1/png/pngwrite.c ****       }
2245:fltk-1.3.4-1/png/pngwrite.c **** #  endif
2246:fltk-1.3.4-1/png/pngwrite.c **** 
2247:fltk-1.3.4-1/png/pngwrite.c **** #  ifdef PNG_SIMPLIFIED_WRITE_AFIRST_SUPPORTED
2248:fltk-1.3.4-1/png/pngwrite.c ****       if ((format & PNG_FORMAT_FLAG_AFIRST) != 0)
 5337              		.loc 1 2248 7 is_stmt 1 view .LVU1528
 5338              		.loc 1 2248 10 is_stmt 0 view .LVU1529
 5339 0162 41F6C720 		testb	$32, %r15b
 5340 0166 7415     		je	.L550
2249:fltk-1.3.4-1/png/pngwrite.c ****       {
2250:fltk-1.3.4-1/png/pngwrite.c ****          if (colormap == 0 && (format & PNG_FORMAT_FLAG_ALPHA) != 0)
 5341              		.loc 1 2250 10 is_stmt 1 view .LVU1530
 5342              		.loc 1 2250 13 is_stmt 0 view .LVU1531
 5343 0168 807C2407 		cmpb	$0, 7(%rsp)
 5343      00
 5344 016d 740A     		je	.L551
 5345              		.loc 1 2250 28 discriminator 1 view .LVU1532
 5346 016f 41F6C701 		testb	$1, %r15b
 5347 0173 0F851F02 		jne	.L616
 5347      0000
 5348              	.L551:
2251:fltk-1.3.4-1/png/pngwrite.c ****             png_set_swap_alpha(png_ptr);
2252:fltk-1.3.4-1/png/pngwrite.c ****          format &= ~PNG_FORMAT_FLAG_AFIRST;
 5349              		.loc 1 2252 10 is_stmt 1 view .LVU1533
 5350              		.loc 1 2252 17 is_stmt 0 view .LVU1534
 5351 0179 4183E7DF 		andl	$-33, %r15d
 5352              	.LVL447:
 5353              	.L550:
2253:fltk-1.3.4-1/png/pngwrite.c ****       }
2254:fltk-1.3.4-1/png/pngwrite.c **** #  endif
2255:fltk-1.3.4-1/png/pngwrite.c **** 
2256:fltk-1.3.4-1/png/pngwrite.c ****    /* If there are 16 or fewer color-map entries we wrote a lower bit depth
2257:fltk-1.3.4-1/png/pngwrite.c ****     * above, but the application data is still byte packed.
2258:fltk-1.3.4-1/png/pngwrite.c ****     */
2259:fltk-1.3.4-1/png/pngwrite.c ****    if (colormap != 0 && image->colormap_entries <= 16)
 5354              		.loc 1 2259 4 is_stmt 1 view .LVU1535
 5355              		.loc 1 2259 7 is_stmt 0 view .LVU1536
 5356 017d 8B4C2408 		movl	8(%rsp), %ecx
 5357 0181 85C9     		testl	%ecx, %ecx
 5358 0183 740A     		je	.L552
 5359              		.loc 1 2259 22 discriminator 1 view .LVU1537
 5360 0185 837B1C10 		cmpl	$16, 28(%rbx)
 5361 0189 0F862902 		jbe	.L617
 5361      0000
 5362              	.L552:
2260:fltk-1.3.4-1/png/pngwrite.c ****       png_set_packing(png_ptr);
2261:fltk-1.3.4-1/png/pngwrite.c **** 
2262:fltk-1.3.4-1/png/pngwrite.c ****    /* That should have handled all (both) the transforms. */
2263:fltk-1.3.4-1/png/pngwrite.c ****    if ((format & ~(png_uint_32)(PNG_FORMAT_FLAG_COLOR | PNG_FORMAT_FLAG_LINEAR |
 5363              		.loc 1 2263 4 is_stmt 1 view .LVU1538
 5364              		.loc 1 2263 7 is_stmt 0 view .LVU1539
 5365 018f 4183E7F0 		andl	$-16, %r15d
 5366              	.LVL448:
 5367              		.loc 1 2263 7 view .LVU1540
 5368 0193 0F857F02 		jne	.L618
 5368      0000
 5369              	.LBB285:
2264:fltk-1.3.4-1/png/pngwrite.c ****          PNG_FORMAT_FLAG_ALPHA | PNG_FORMAT_FLAG_COLORMAP)) != 0)
2265:fltk-1.3.4-1/png/pngwrite.c ****       png_error(png_ptr, "png_write_image: unsupported transformation");
2266:fltk-1.3.4-1/png/pngwrite.c **** 
2267:fltk-1.3.4-1/png/pngwrite.c ****    {
2268:fltk-1.3.4-1/png/pngwrite.c ****       png_const_bytep row = png_voidcast(png_const_bytep, display->buffer);
 5370              		.loc 1 2268 7 is_stmt 1 view .LVU1541
2269:fltk-1.3.4-1/png/pngwrite.c ****       ptrdiff_t row_bytes = display->row_stride;
 5371              		.loc 1 2269 17 is_stmt 0 view .LVU1542
 5372 0199 49635610 		movslq	16(%r14), %rdx
 5373 019d 4585ED   		testl	%r13d, %r13d
2268:fltk-1.3.4-1/png/pngwrite.c ****       ptrdiff_t row_bytes = display->row_stride;
 5374              		.loc 1 2268 23 view .LVU1543
 5375 01a0 498B4E08 		movq	8(%r14), %rcx
 5376              	.LVL449:
 5377              		.loc 1 2269 7 is_stmt 1 view .LVU1544
2270:fltk-1.3.4-1/png/pngwrite.c **** 
2271:fltk-1.3.4-1/png/pngwrite.c ****       if (linear != 0)
 5378              		.loc 1 2271 7 view .LVU1545
2269:fltk-1.3.4-1/png/pngwrite.c **** 
 5379              		.loc 1 2269 17 is_stmt 0 view .LVU1546
 5380 01a4 488D0412 		leaq	(%rdx,%rdx), %rax
 5381 01a8 480F44C2 		cmove	%rdx, %rax
 5382              	.LVL450:
2272:fltk-1.3.4-1/png/pngwrite.c ****          row_bytes *= (sizeof (png_uint_16));
2273:fltk-1.3.4-1/png/pngwrite.c **** 
2274:fltk-1.3.4-1/png/pngwrite.c ****       if (row_bytes < 0)
 5383              		.loc 1 2274 7 is_stmt 1 view .LVU1547
 5384              		.loc 1 2274 10 is_stmt 0 view .LVU1548
 5385 01ac 4885C0   		testq	%rax, %rax
 5386 01af 790D     		jns	.L556
2275:fltk-1.3.4-1/png/pngwrite.c ****          row += (image->height-1) * (-row_bytes);
 5387              		.loc 1 2275 10 is_stmt 1 view .LVU1549
 5388              		.loc 1 2275 31 is_stmt 0 view .LVU1550
 5389 01b1 8B5310   		movl	16(%rbx), %edx
 5390 01b4 83EA01   		subl	$1, %edx
 5391              		.loc 1 2275 35 view .LVU1551
 5392 01b7 480FAFD0 		imulq	%rax, %rdx
 5393              		.loc 1 2275 14 view .LVU1552
 5394 01bb 4829D1   		subq	%rdx, %rcx
 5395              	.LVL451:
 5396              	.L556:
2276:fltk-1.3.4-1/png/pngwrite.c **** 
2277:fltk-1.3.4-1/png/pngwrite.c ****       display->first_row = row;
 5397              		.loc 1 2277 7 is_stmt 1 view .LVU1553
 5398              		.loc 1 2277 26 is_stmt 0 view .LVU1554
 5399 01be 49894E28 		movq	%rcx, 40(%r14)
2278:fltk-1.3.4-1/png/pngwrite.c ****       display->row_bytes = row_bytes;
 5400              		.loc 1 2278 7 is_stmt 1 view .LVU1555
 5401              		.loc 1 2278 26 is_stmt 0 view .LVU1556
 5402 01c2 49894630 		movq	%rax, 48(%r14)
 5403              	.LBE285:
2279:fltk-1.3.4-1/png/pngwrite.c ****    }
2280:fltk-1.3.4-1/png/pngwrite.c **** 
2281:fltk-1.3.4-1/png/pngwrite.c ****    /* Apply 'fast' options if the flag is set. */
2282:fltk-1.3.4-1/png/pngwrite.c ****    if ((image->flags & PNG_IMAGE_FLAG_FAST) != 0)
 5404              		.loc 1 2282 4 is_stmt 1 view .LVU1557
 5405              		.loc 1 2282 7 is_stmt 0 view .LVU1558
 5406 01c6 F6431802 		testb	$2, 24(%rbx)
 5407 01ca 0F857001 		jne	.L619
 5407      0000
 5408              	.LVL452:
 5409              	.L558:
2283:fltk-1.3.4-1/png/pngwrite.c ****    {
2284:fltk-1.3.4-1/png/pngwrite.c ****       png_set_filter(png_ptr, PNG_FILTER_TYPE_BASE, PNG_NO_FILTERS);
2285:fltk-1.3.4-1/png/pngwrite.c ****       /* NOTE: determined by experiment using pngstest, this reflects some
2286:fltk-1.3.4-1/png/pngwrite.c ****        * balance between the time to write the image once and the time to read
2287:fltk-1.3.4-1/png/pngwrite.c ****        * it about 50 times.  The speed-up in pngstest was about 10-20% of the
2288:fltk-1.3.4-1/png/pngwrite.c ****        * total (user) time on a heavily loaded system.
2289:fltk-1.3.4-1/png/pngwrite.c ****        */
2290:fltk-1.3.4-1/png/pngwrite.c ****       png_set_compression_level(png_ptr, 3);
2291:fltk-1.3.4-1/png/pngwrite.c ****    }
2292:fltk-1.3.4-1/png/pngwrite.c **** 
2293:fltk-1.3.4-1/png/pngwrite.c ****    /* Check for the cases that currently require a pre-transform on the row
2294:fltk-1.3.4-1/png/pngwrite.c ****     * before it is written.  This only applies when the input is 16-bit and
2295:fltk-1.3.4-1/png/pngwrite.c ****     * either there is an alpha channel or it is converted to 8-bit.
2296:fltk-1.3.4-1/png/pngwrite.c ****     */
2297:fltk-1.3.4-1/png/pngwrite.c ****    if ((linear != 0 && alpha != 0 ) ||
 5410              		.loc 1 2297 4 is_stmt 1 view .LVU1559
 5411              		.loc 1 2297 7 is_stmt 0 view .LVU1560
 5412 01d0 44856C24 		testl	%r13d, 12(%rsp)
 5412      0C
 5413 01d5 7513     		jne	.L560
 5414              		.loc 1 2297 37 discriminator 1 view .LVU1561
 5415 01d7 807C2407 		cmpb	$0, 7(%rsp)
 5415      00
 5416 01dc 0F848600 		je	.L561
 5416      0000
2298:fltk-1.3.4-1/png/pngwrite.c ****        (colormap == 0 && display->convert_to_8bit != 0))
 5417              		.loc 1 2298 23 view .LVU1562
 5418 01e2 418B5620 		movl	32(%r14), %edx
 5419 01e6 85D2     		testl	%edx, %edx
 5420 01e8 747E     		je	.L561
 5421              	.L560:
 5422              	.LBB286:
2299:fltk-1.3.4-1/png/pngwrite.c ****    {
2300:fltk-1.3.4-1/png/pngwrite.c ****       png_bytep row = png_voidcast(png_bytep, png_malloc(png_ptr,
 5423              		.loc 1 2300 7 is_stmt 1 view .LVU1563
 5424              		.loc 1 2300 23 is_stmt 0 view .LVU1564
 5425 01ea 4C89E6   		movq	%r12, %rsi
 5426 01ed 4889EF   		movq	%rbp, %rdi
 5427 01f0 E8000000 		call	png_get_rowbytes@PLT
 5427      00
 5428              	.LVL453:
 5429 01f5 4889EF   		movq	%rbp, %rdi
 5430 01f8 4889C6   		movq	%rax, %rsi
 5431 01fb E8000000 		call	png_malloc@PLT
 5431      00
 5432              	.LVL454:
2301:fltk-1.3.4-1/png/pngwrite.c ****          png_get_rowbytes(png_ptr, info_ptr)));
2302:fltk-1.3.4-1/png/pngwrite.c ****       int result;
2303:fltk-1.3.4-1/png/pngwrite.c **** 
2304:fltk-1.3.4-1/png/pngwrite.c ****       display->local_row = row;
2305:fltk-1.3.4-1/png/pngwrite.c ****       if (write_16bit != 0)
2306:fltk-1.3.4-1/png/pngwrite.c ****          result = png_safe_execute(image, png_write_image_16bit, display);
 5433              		.loc 1 2306 19 view .LVU1565
 5434 0200 4C89F2   		movq	%r14, %rdx
2304:fltk-1.3.4-1/png/pngwrite.c ****       if (write_16bit != 0)
 5435              		.loc 1 2304 26 view .LVU1566
 5436 0203 49894638 		movq	%rax, 56(%r14)
2300:fltk-1.3.4-1/png/pngwrite.c ****          png_get_rowbytes(png_ptr, info_ptr)));
 5437              		.loc 1 2300 23 view .LVU1567
 5438 0207 4989C7   		movq	%rax, %r15
 5439              	.LVL455:
2302:fltk-1.3.4-1/png/pngwrite.c **** 
 5440              		.loc 1 2302 7 is_stmt 1 view .LVU1568
2304:fltk-1.3.4-1/png/pngwrite.c ****       if (write_16bit != 0)
 5441              		.loc 1 2304 7 view .LVU1569
2305:fltk-1.3.4-1/png/pngwrite.c ****          result = png_safe_execute(image, png_write_image_16bit, display);
 5442              		.loc 1 2305 7 view .LVU1570
2305:fltk-1.3.4-1/png/pngwrite.c ****          result = png_safe_execute(image, png_write_image_16bit, display);
 5443              		.loc 1 2305 10 is_stmt 0 view .LVU1571
 5444 020a 8B0424   		movl	(%rsp), %eax
 5445              	.LVL456:
2305:fltk-1.3.4-1/png/pngwrite.c ****          result = png_safe_execute(image, png_write_image_16bit, display);
 5446              		.loc 1 2305 10 view .LVU1572
 5447 020d 85C0     		testl	%eax, %eax
 5448 020f 0F845301 		je	.L562
 5448      0000
 5449              	.LVL457:
 5450              		.loc 1 2306 10 is_stmt 1 view .LVU1573
 5451              		.loc 1 2306 19 is_stmt 0 view .LVU1574
 5452 0215 488D3500 		leaq	png_write_image_16bit(%rip), %rsi
 5452      000000
 5453 021c 4889DF   		movq	%rbx, %rdi
 5454 021f E8000000 		call	png_safe_execute@PLT
 5454      00
 5455              	.LVL458:
 5456              		.loc 1 2306 19 view .LVU1575
 5457 0224 4189C5   		movl	%eax, %r13d
 5458              	.LVL459:
 5459              	.L563:
2307:fltk-1.3.4-1/png/pngwrite.c ****       else
2308:fltk-1.3.4-1/png/pngwrite.c ****          result = png_safe_execute(image, png_write_image_8bit, display);
2309:fltk-1.3.4-1/png/pngwrite.c ****       display->local_row = NULL;
 5460              		.loc 1 2309 7 is_stmt 1 view .LVU1576
 5461              		.loc 1 2309 26 is_stmt 0 view .LVU1577
 5462 0227 49C74638 		movq	$0, 56(%r14)
 5462      00000000 
2310:fltk-1.3.4-1/png/pngwrite.c **** 
2311:fltk-1.3.4-1/png/pngwrite.c ****       png_free(png_ptr, row);
 5463              		.loc 1 2311 7 is_stmt 1 view .LVU1578
 5464 022f 4C89FE   		movq	%r15, %rsi
 5465 0232 4889EF   		movq	%rbp, %rdi
 5466 0235 E8000000 		call	png_free@PLT
 5466      00
 5467              	.LVL460:
2312:fltk-1.3.4-1/png/pngwrite.c **** 
2313:fltk-1.3.4-1/png/pngwrite.c ****       /* Skip the 'write_end' on error: */
2314:fltk-1.3.4-1/png/pngwrite.c ****       if (result == 0)
 5468              		.loc 1 2314 7 view .LVU1579
 5469              		.loc 1 2314 10 is_stmt 0 view .LVU1580
 5470 023a 4585ED   		testl	%r13d, %r13d
 5471 023d 7411     		je	.L535
 5472              	.LVL461:
 5473              	.L565:
 5474              		.loc 1 2314 10 view .LVU1581
 5475              	.LBE286:
2315:fltk-1.3.4-1/png/pngwrite.c ****          return 0;
2316:fltk-1.3.4-1/png/pngwrite.c ****    }
2317:fltk-1.3.4-1/png/pngwrite.c **** 
2318:fltk-1.3.4-1/png/pngwrite.c ****    /* Otherwise this is the case where the input is in a format currently
2319:fltk-1.3.4-1/png/pngwrite.c ****     * supported by the rest of the libpng write code; call it directly.
2320:fltk-1.3.4-1/png/pngwrite.c ****     */
2321:fltk-1.3.4-1/png/pngwrite.c ****    else
2322:fltk-1.3.4-1/png/pngwrite.c ****    {
2323:fltk-1.3.4-1/png/pngwrite.c ****       png_const_bytep row = png_voidcast(png_const_bytep, display->first_row);
2324:fltk-1.3.4-1/png/pngwrite.c ****       ptrdiff_t row_bytes = display->row_bytes;
2325:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_32 y = image->height;
2326:fltk-1.3.4-1/png/pngwrite.c **** 
2327:fltk-1.3.4-1/png/pngwrite.c ****       while (y-- > 0)
2328:fltk-1.3.4-1/png/pngwrite.c ****       {
2329:fltk-1.3.4-1/png/pngwrite.c ****          png_write_row(png_ptr, row);
2330:fltk-1.3.4-1/png/pngwrite.c ****          row += row_bytes;
2331:fltk-1.3.4-1/png/pngwrite.c ****       }
2332:fltk-1.3.4-1/png/pngwrite.c ****    }
2333:fltk-1.3.4-1/png/pngwrite.c **** 
2334:fltk-1.3.4-1/png/pngwrite.c ****    png_write_end(png_ptr, info_ptr);
 5476              		.loc 1 2334 4 is_stmt 1 view .LVU1582
 5477 023f 4C89E6   		movq	%r12, %rsi
 5478 0242 4889EF   		movq	%rbp, %rdi
2335:fltk-1.3.4-1/png/pngwrite.c ****    return 1;
 5479              		.loc 1 2335 11 is_stmt 0 view .LVU1583
 5480 0245 41BD0100 		movl	$1, %r13d
 5480      0000
2334:fltk-1.3.4-1/png/pngwrite.c ****    return 1;
 5481              		.loc 1 2334 4 view .LVU1584
 5482 024b E8000000 		call	png_write_end
 5482      00
 5483              	.LVL462:
 5484              		.loc 1 2335 4 is_stmt 1 view .LVU1585
 5485              	.L535:
2336:fltk-1.3.4-1/png/pngwrite.c **** }
 5486              		.loc 1 2336 1 is_stmt 0 view .LVU1586
 5487 0250 4883C418 		addq	$24, %rsp
 5488              		.cfi_remember_state
 5489              		.cfi_def_cfa_offset 56
 5490              	.LVL463:
 5491              		.loc 1 2336 1 view .LVU1587
 5492 0254 4489E8   		movl	%r13d, %eax
 5493 0257 5B       		popq	%rbx
 5494              		.cfi_def_cfa_offset 48
 5495 0258 5D       		popq	%rbp
 5496              		.cfi_def_cfa_offset 40
 5497              	.LVL464:
 5498              		.loc 1 2336 1 view .LVU1588
 5499 0259 415C     		popq	%r12
 5500              		.cfi_def_cfa_offset 32
 5501              	.LVL465:
 5502              		.loc 1 2336 1 view .LVU1589
 5503 025b 415D     		popq	%r13
 5504              		.cfi_def_cfa_offset 24
 5505 025d 415E     		popq	%r14
 5506              		.cfi_def_cfa_offset 16
 5507 025f 415F     		popq	%r15
 5508              		.cfi_def_cfa_offset 8
 5509 0261 C3       		ret
 5510              	.LVL466:
 5511              		.p2align 4,,10
 5512 0262 660F1F44 		.p2align 3
 5512      0000
 5513              	.L561:
 5514              		.cfi_restore_state
 5515              	.LBB287:
2323:fltk-1.3.4-1/png/pngwrite.c ****       ptrdiff_t row_bytes = display->row_bytes;
 5516              		.loc 1 2323 7 is_stmt 1 view .LVU1590
2325:fltk-1.3.4-1/png/pngwrite.c **** 
 5517              		.loc 1 2325 19 is_stmt 0 view .LVU1591
 5518 0268 8B4310   		movl	16(%rbx), %eax
2323:fltk-1.3.4-1/png/pngwrite.c ****       ptrdiff_t row_bytes = display->row_bytes;
 5519              		.loc 1 2323 23 view .LVU1592
 5520 026b 4D8B6E28 		movq	40(%r14), %r13
 5521              	.LVL467:
2324:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_32 y = image->height;
 5522              		.loc 1 2324 7 is_stmt 1 view .LVU1593
2324:fltk-1.3.4-1/png/pngwrite.c ****       png_uint_32 y = image->height;
 5523              		.loc 1 2324 17 is_stmt 0 view .LVU1594
 5524 026f 4D8B7630 		movq	48(%r14), %r14
 5525              	.LVL468:
2325:fltk-1.3.4-1/png/pngwrite.c **** 
 5526              		.loc 1 2325 7 is_stmt 1 view .LVU1595
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5527              		.loc 1 2327 7 view .LVU1596
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5528              		.loc 1 2327 13 view .LVU1597
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5529              		.loc 1 2327 15 is_stmt 0 view .LVU1598
 5530 0273 8D58FF   		leal	-1(%rax), %ebx
 5531              	.LVL469:
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5532              		.loc 1 2327 13 view .LVU1599
 5533 0276 85C0     		testl	%eax, %eax
 5534 0278 74C5     		je	.L565
 5535 027a 660F1F44 		.p2align 4,,10
 5535      0000
 5536              		.p2align 3
 5537              	.L566:
2329:fltk-1.3.4-1/png/pngwrite.c ****          row += row_bytes;
 5538              		.loc 1 2329 10 is_stmt 1 view .LVU1600
 5539 0280 4C89EE   		movq	%r13, %rsi
 5540 0283 4889EF   		movq	%rbp, %rdi
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5541              		.loc 1 2327 15 is_stmt 0 view .LVU1601
 5542 0286 83EB01   		subl	$1, %ebx
 5543              	.LVL470:
2330:fltk-1.3.4-1/png/pngwrite.c ****       }
 5544              		.loc 1 2330 14 view .LVU1602
 5545 0289 4D01F5   		addq	%r14, %r13
 5546              	.LVL471:
2329:fltk-1.3.4-1/png/pngwrite.c ****          row += row_bytes;
 5547              		.loc 1 2329 10 view .LVU1603
 5548 028c E8000000 		call	png_write_row
 5548      00
 5549              	.LVL472:
2330:fltk-1.3.4-1/png/pngwrite.c ****       }
 5550              		.loc 1 2330 10 is_stmt 1 view .LVU1604
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5551              		.loc 1 2327 13 view .LVU1605
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5552              		.loc 1 2327 13 is_stmt 0 view .LVU1606
 5553 0291 83FBFF   		cmpl	$-1, %ebx
 5554 0294 75EA     		jne	.L566
 5555 0296 EBA7     		jmp	.L565
 5556              	.LVL473:
 5557 0298 0F1F8400 		.p2align 4,,10
 5557      00000000 
 5558              		.p2align 3
 5559              	.L539:
2327:fltk-1.3.4-1/png/pngwrite.c ****       {
 5560              		.loc 1 2327 13 view .LVU1607
 5561              	.LBE287:
2186:fltk-1.3.4-1/png/pngwrite.c ****          write_16bit ? 16 : 8,
 5562              		.loc 1 2186 7 is_stmt 1 view .LVU1608
2188:fltk-1.3.4-1/png/pngwrite.c ****          ((format & PNG_FORMAT_FLAG_ALPHA) ? PNG_COLOR_MASK_ALPHA : 0),
 5563              		.loc 1 2188 67 is_stmt 0 view .LVU1609
 5564 02a0 4489FF   		movl	%r15d, %edi
2186:fltk-1.3.4-1/png/pngwrite.c ****          write_16bit ? 16 : 8,
 5565              		.loc 1 2186 7 view .LVU1610
 5566 02a3 448B530C 		movl	12(%rbx), %r10d
 5567 02a7 8B4B10   		movl	16(%rbx), %ecx
 5568 02aa 4C89E6   		movq	%r12, %rsi
2189:fltk-1.3.4-1/png/pngwrite.c ****          PNG_INTERLACE_NONE, PNG_COMPRESSION_TYPE_BASE, PNG_FILTER_TYPE_BASE);
 5569              		.loc 1 2189 67 view .LVU1611
 5570 02ad 468D0CBD 		leal	0(,%r15,4), %r9d
 5570      00000000 
2188:fltk-1.3.4-1/png/pngwrite.c ****          ((format & PNG_FORMAT_FLAG_ALPHA) ? PNG_COLOR_MASK_ALPHA : 0),
 5571              		.loc 1 2188 67 view .LVU1612
 5572 02b5 83E702   		andl	$2, %edi
2189:fltk-1.3.4-1/png/pngwrite.c ****          PNG_INTERLACE_NONE, PNG_COMPRESSION_TYPE_BASE, PNG_FILTER_TYPE_BASE);
 5573              		.loc 1 2189 67 view .LVU1613
 5574 02b8 4183E104 		andl	$4, %r9d
2186:fltk-1.3.4-1/png/pngwrite.c ****          write_16bit ? 16 : 8,
 5575              		.loc 1 2186 7 view .LVU1614
 5576 02bc 833C2401 		cmpl	$1, (%rsp)
 5577 02c0 19D2     		sbbl	%edx, %edx
 5578 02c2 4883EC08 		subq	$8, %rsp
 5579              		.cfi_def_cfa_offset 88
 5580              	.LVL474:
2186:fltk-1.3.4-1/png/pngwrite.c ****          write_16bit ? 16 : 8,
 5581              		.loc 1 2186 7 view .LVU1615
 5582 02c6 4109F9   		orl	%edi, %r9d
 5583 02c9 4889EF   		movq	%rbp, %rdi
 5584 02cc 6A00     		pushq	$0
 5585              		.cfi_def_cfa_offset 96
 5586 02ce 83E2F8   		andl	$-8, %edx
 5587 02d1 6A00     		pushq	$0
 5588              		.cfi_def_cfa_offset 104
 5589 02d3 448D4210 		leal	16(%rdx), %r8d
 5590 02d7 4489D2   		movl	%r10d, %edx
 5591 02da 6A00     		pushq	$0
 5592              		.cfi_def_cfa_offset 112
 5593 02dc E8000000 		call	png_set_IHDR@PLT
 5593      00
 5594              	.LVL475:
2198:fltk-1.3.4-1/png/pngwrite.c ****    {
 5595              		.loc 1 2198 7 view .LVU1616
 5596 02e1 8B742420 		movl	32(%rsp), %esi
2186:fltk-1.3.4-1/png/pngwrite.c ****          write_16bit ? 16 : 8,
 5597              		.loc 1 2186 7 view .LVU1617
 5598 02e5 4883C420 		addq	$32, %rsp
 5599              		.cfi_def_cfa_offset 80
 5600              	.LVL476:
2198:fltk-1.3.4-1/png/pngwrite.c ****    {
 5601              		.loc 1 2198 4 is_stmt 1 view .LVU1618
2198:fltk-1.3.4-1/png/pngwrite.c ****    {
 5602              		.loc 1 2198 7 is_stmt 0 view .LVU1619
 5603 02e9 85F6     		testl	%esi, %esi
 5604 02eb 0F8434FE 		je	.L544
 5604      FFFF
 5605              	.L614:
2201:fltk-1.3.4-1/png/pngwrite.c **** 
 5606              		.loc 1 2201 7 is_stmt 1 view .LVU1620
 5607 02f1 BAA08601 		movl	$100000, %edx
 5607      00
 5608 02f6 4C89E6   		movq	%r12, %rsi
 5609 02f9 4889EF   		movq	%rbp, %rdi
 5610 02fc E8000000 		call	png_set_gAMA_fixed@PLT
 5610      00
 5611              	.LVL477:
2203:fltk-1.3.4-1/png/pngwrite.c ****          png_set_cHRM_fixed(png_ptr, info_ptr,
 5612              		.loc 1 2203 7 view .LVU1621
2203:fltk-1.3.4-1/png/pngwrite.c ****          png_set_cHRM_fixed(png_ptr, info_ptr,
 5613              		.loc 1 2203 10 is_stmt 0 view .LVU1622
 5614 0301 F6431801 		testb	$1, 24(%rbx)
 5615 0305 0F84BD00 		je	.L620
 5615      0000
 5616              	.L545:
2223:fltk-1.3.4-1/png/pngwrite.c **** 
 5617              		.loc 1 2223 4 is_stmt 1 view .LVU1623
 5618 030b 4889EF   		movq	%rbp, %rdi
 5619 030e 4C89E6   		movq	%r12, %rsi
 5620 0311 E8000000 		call	png_write_info
 5620      00
 5621              	.LVL478:
2230:fltk-1.3.4-1/png/pngwrite.c ****    {
 5622              		.loc 1 2230 4 view .LVU1624
 5623              	.LBB288:
2232:fltk-1.3.4-1/png/pngwrite.c **** 
 5624              		.loc 1 2232 7 view .LVU1625
2234:fltk-1.3.4-1/png/pngwrite.c ****          png_set_swap(png_ptr);
 5625              		.loc 1 2234 7 view .LVU1626
2235:fltk-1.3.4-1/png/pngwrite.c ****    }
 5626              		.loc 1 2235 10 view .LVU1627
 5627 0316 4889EF   		movq	%rbp, %rdi
 5628 0319 E8000000 		call	png_set_swap@PLT
 5628      00
 5629              	.LVL479:
2235:fltk-1.3.4-1/png/pngwrite.c ****    }
 5630              		.loc 1 2235 10 is_stmt 0 view .LVU1628
 5631 031e E924FEFF 		jmp	.L567
 5631      FF
 5632              		.p2align 4,,10
 5633 0323 0F1F4400 		.p2align 3
 5633      00
 5634              	.L546:
2235:fltk-1.3.4-1/png/pngwrite.c ****    }
 5635              		.loc 1 2235 10 view .LVU1629
 5636              	.LBE288:
2220:fltk-1.3.4-1/png/pngwrite.c **** 
 5637              		.loc 1 2220 7 is_stmt 1 view .LVU1630
 5638 0328 BA8FB100 		movl	$45455, %edx
 5638      00
 5639 032d 4C89E6   		movq	%r12, %rsi
 5640 0330 4889EF   		movq	%rbp, %rdi
 5641 0333 E8000000 		call	png_set_gAMA_fixed@PLT
 5641      00
 5642              	.LVL480:
 5643 0338 E9FFFDFF 		jmp	.L547
 5643      FF
 5644              	.LVL481:
 5645 033d 0F1F00   		.p2align 4,,10
 5646              		.p2align 3
 5647              	.L619:
2284:fltk-1.3.4-1/png/pngwrite.c ****       /* NOTE: determined by experiment using pngstest, this reflects some
 5648              		.loc 1 2284 7 view .LVU1631
 5649 0340 31D2     		xorl	%edx, %edx
 5650 0342 31F6     		xorl	%esi, %esi
 5651 0344 4889EF   		movq	%rbp, %rdi
 5652 0347 E8000000 		call	png_set_filter
 5652      00
 5653              	.LVL482:
2290:fltk-1.3.4-1/png/pngwrite.c ****    }
 5654              		.loc 1 2290 7 view .LVU1632
 5655              	.LBB289:
 5656              	.LBI289:
1376:fltk-1.3.4-1/png/pngwrite.c **** {
 5657              		.loc 1 1376 1 view .LVU1633
 5658              	.LBB290:
1378:fltk-1.3.4-1/png/pngwrite.c **** 
 5659              		.loc 1 1378 4 view .LVU1634
1380:fltk-1.3.4-1/png/pngwrite.c ****       return;
 5660              		.loc 1 1380 4 view .LVU1635
1380:fltk-1.3.4-1/png/pngwrite.c ****       return;
 5661              		.loc 1 1380 7 is_stmt 0 view .LVU1636
 5662 034c 4885ED   		testq	%rbp, %rbp
 5663 034f 0F847BFE 		je	.L558
 5663      FFFF
1383:fltk-1.3.4-1/png/pngwrite.c **** }
 5664              		.loc 1 1383 4 is_stmt 1 view .LVU1637
1383:fltk-1.3.4-1/png/pngwrite.c **** }
 5665              		.loc 1 1383 24 is_stmt 0 view .LVU1638
 5666 0355 C785BC01 		movl	$3, 444(%rbp)
 5666      00000300 
 5666      0000
 5667 035f E96CFEFF 		jmp	.L558
 5667      FF
 5668              	.LVL483:
 5669              		.p2align 4,,10
 5670 0364 0F1F4000 		.p2align 3
 5671              	.L562:
1383:fltk-1.3.4-1/png/pngwrite.c **** }
 5672              		.loc 1 1383 24 view .LVU1639
 5673              	.LBE290:
 5674              	.LBE289:
 5675              	.LBB291:
2308:fltk-1.3.4-1/png/pngwrite.c ****       display->local_row = NULL;
 5676              		.loc 1 2308 10 is_stmt 1 view .LVU1640
2308:fltk-1.3.4-1/png/pngwrite.c ****       display->local_row = NULL;
 5677              		.loc 1 2308 19 is_stmt 0 view .LVU1641
 5678 0368 488D3500 		leaq	png_write_image_8bit(%rip), %rsi
 5678      000000
 5679 036f 4889DF   		movq	%rbx, %rdi
 5680 0372 E8000000 		call	png_safe_execute@PLT
 5680      00
 5681              	.LVL484:
2308:fltk-1.3.4-1/png/pngwrite.c ****       display->local_row = NULL;
 5682              		.loc 1 2308 19 view .LVU1642
 5683 0377 4189C5   		movl	%eax, %r13d
 5684              	.LVL485:
2308:fltk-1.3.4-1/png/pngwrite.c ****       display->local_row = NULL;
 5685              		.loc 1 2308 19 view .LVU1643
 5686 037a E9A8FEFF 		jmp	.L563
 5686      FF
 5687              	.LVL486:
 5688 037f 90       		.p2align 4,,10
 5689              		.p2align 3
 5690              	.L613:
2308:fltk-1.3.4-1/png/pngwrite.c ****       display->local_row = NULL;
 5691              		.loc 1 2308 19 view .LVU1644
 5692              	.LBE291:
 5693              	.LBB292:
2173:fltk-1.3.4-1/png/pngwrite.c ****             PNG_COLOR_TYPE_PALETTE, PNG_INTERLACE_NONE,
 5694              		.loc 1 2173 68 discriminator 1 view .LVU1645
 5695 0380 4531C0   		xorl	%r8d, %r8d
 5696 0383 83FA02   		cmpl	$2, %edx
 5697 0386 410F97C0 		seta	%r8b
 5698 038a 4183C001 		addl	$1, %r8d
 5699 038e E956FDFF 		jmp	.L541
 5699      FF
 5700              	.LVL487:
 5701              		.p2align 4,,10
 5702 0393 0F1F4400 		.p2align 3
 5702      00
 5703              	.L616:
2173:fltk-1.3.4-1/png/pngwrite.c ****             PNG_COLOR_TYPE_PALETTE, PNG_INTERLACE_NONE,
 5704              		.loc 1 2173 68 discriminator 1 view .LVU1646
 5705              	.LBE292:
2251:fltk-1.3.4-1/png/pngwrite.c ****          format &= ~PNG_FORMAT_FLAG_AFIRST;
 5706              		.loc 1 2251 13 is_stmt 1 view .LVU1647
 5707 0398 4889EF   		movq	%rbp, %rdi
 5708 039b E8000000 		call	png_set_swap_alpha@PLT
 5708      00
 5709              	.LVL488:
 5710 03a0 E9D4FDFF 		jmp	.L551
 5710      FF
 5711              		.p2align 4,,10
 5712 03a5 0F1F00   		.p2align 3
 5713              	.L615:
2242:fltk-1.3.4-1/png/pngwrite.c ****          format &= ~PNG_FORMAT_FLAG_BGR;
 5714              		.loc 1 2242 13 view .LVU1648
 5715 03a8 4889EF   		movq	%rbp, %rdi
 5716 03ab E8000000 		call	png_set_bgr@PLT
 5716      00
 5717              	.LVL489:
 5718 03b0 E9A9FDFF 		jmp	.L549
 5718      FF
 5719              		.p2align 4,,10
 5720 03b5 0F1F00   		.p2align 3
 5721              	.L617:
2260:fltk-1.3.4-1/png/pngwrite.c **** 
 5722              		.loc 1 2260 7 view .LVU1649
 5723 03b8 4889EF   		movq	%rbp, %rdi
 5724 03bb E8000000 		call	png_set_packing@PLT
 5724      00
 5725              	.LVL490:
 5726 03c0 E9CAFDFF 		jmp	.L552
 5726      FF
 5727              		.p2align 4,,10
 5728 03c5 0F1F00   		.p2align 3
 5729              	.L620:
2204:fltk-1.3.4-1/png/pngwrite.c ****             /* color      x       y */
 5730              		.loc 1 2204 10 view .LVU1650
 5731 03c8 68701700 		pushq	$6000
 5731      00
 5732              		.cfi_def_cfa_offset 88
 5733              	.LVL491:
2204:fltk-1.3.4-1/png/pngwrite.c ****             /* color      x       y */
 5734              		.loc 1 2204 10 is_stmt 0 view .LVU1651
 5735 03cd B9848000 		movl	$32900, %ecx
 5735      00
 5736 03d2 4C89E6   		movq	%r12, %rsi
 5737 03d5 4889EF   		movq	%rbp, %rdi
 5738 03d8 68983A00 		pushq	$15000
 5738      00
 5739              		.cfi_def_cfa_offset 96
 5740 03dd 41B9E880 		movl	$33000, %r9d
 5740      0000
 5741 03e3 41B800FA 		movl	$64000, %r8d
 5741      0000
 5742 03e9 BA267A00 		movl	$31270, %edx
 5742      00
 5743 03ee 6860EA00 		pushq	$60000
 5743      00
 5744              		.cfi_def_cfa_offset 104
 5745 03f3 68307500 		pushq	$30000
 5745      00
 5746              		.cfi_def_cfa_offset 112
 5747 03f8 E8000000 		call	png_set_cHRM_fixed@PLT
 5747      00
 5748              	.LVL492:
 5749 03fd 4883C420 		addq	$32, %rsp
 5750              		.cfi_def_cfa_offset 80
 5751              	.LVL493:
2204:fltk-1.3.4-1/png/pngwrite.c ****             /* color      x       y */
 5752              		.loc 1 2204 10 view .LVU1652
 5753 0401 E905FFFF 		jmp	.L545
 5753      FF
 5754              	.L540:
2181:fltk-1.3.4-1/png/pngwrite.c ****             "no color-map for color-mapped image");
 5755              		.loc 1 2181 10 is_stmt 1 view .LVU1653
2181:fltk-1.3.4-1/png/pngwrite.c ****             "no color-map for color-mapped image");
 5756              		.loc 1 2181 33 is_stmt 0 view .LVU1654
 5757 0406 488B03   		movq	(%rbx), %rax
2181:fltk-1.3.4-1/png/pngwrite.c ****             "no color-map for color-mapped image");
 5758              		.loc 1 2181 10 view .LVU1655
 5759 0409 488D3500 		leaq	.LC15(%rip), %rsi
 5759      000000
 5760 0410 488B38   		movq	(%rax), %rdi
 5761 0413 E8000000 		call	png_error@PLT
 5761      00
 5762              	.LVL494:
 5763              	.L618:
2265:fltk-1.3.4-1/png/pngwrite.c **** 
 5764              		.loc 1 2265 7 is_stmt 1 view .LVU1656
 5765 0418 488D3500 		leaq	.LC16(%rip), %rsi
 5765      000000
 5766 041f 4889EF   		movq	%rbp, %rdi
 5767 0422 E8000000 		call	png_error@PLT
 5767      00
 5768              	.LVL495:
 5769              	.L569:
2154:fltk-1.3.4-1/png/pngwrite.c **** 
 5770              		.loc 1 2154 42 is_stmt 0 view .LVU1657
 5771 0427 C7042400 		movl	$0, (%rsp)
 5771      000000
 5772 042e 4531ED   		xorl	%r13d, %r13d
2154:fltk-1.3.4-1/png/pngwrite.c **** 
 5773              		.loc 1 2154 32 view .LVU1658
 5774 0431 C6442407 		movb	$1, 7(%rsp)
 5774      01
 5775 0436 E944FCFF 		jmp	.L536
 5775      FF
 5776              		.cfi_endproc
 5777              	.LFE80:
 5779              		.section	.text.png_set_filter_heuristics,"ax",@progbits
 5780              		.p2align 4
 5781              		.globl	png_set_filter_heuristics
 5783              	png_set_filter_heuristics:
 5784              	.LVL496:
 5785              	.LFB60:
1258:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics");
 5786              		.loc 1 1258 1 is_stmt 1 view -0
 5787              		.cfi_startproc
1258:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics");
 5788              		.loc 1 1258 1 is_stmt 0 view .LVU1660
 5789 0000 F30F1EFA 		endbr64
1259:fltk-1.3.4-1/png/pngwrite.c **** 
 5790              		.loc 1 1259 4 is_stmt 1 view .LVU1661
1264:fltk-1.3.4-1/png/pngwrite.c ****       return;
 5791              		.loc 1 1264 4 view .LVU1662
1258:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics");
 5792              		.loc 1 1258 1 is_stmt 0 view .LVU1663
 5793 0004 4156     		pushq	%r14
 5794              		.cfi_def_cfa_offset 16
 5795              		.cfi_offset 14, -16
 5796 0006 4189D6   		movl	%edx, %r14d
 5797 0009 4155     		pushq	%r13
 5798              		.cfi_def_cfa_offset 24
 5799              		.cfi_offset 13, -24
 5800 000b 4D89C5   		movq	%r8, %r13
 5801 000e 4154     		pushq	%r12
 5802              		.cfi_def_cfa_offset 32
 5803              		.cfi_offset 12, -32
 5804 0010 4189F4   		movl	%esi, %r12d
 5805 0013 55       		pushq	%rbp
 5806              		.cfi_def_cfa_offset 40
 5807              		.cfi_offset 6, -40
 5808 0014 4889CD   		movq	%rcx, %rbp
 5809 0017 53       		pushq	%rbx
 5810              		.cfi_def_cfa_offset 48
 5811              		.cfi_offset 3, -48
1258:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics");
 5812              		.loc 1 1258 1 view .LVU1664
 5813 0018 4889FB   		movq	%rdi, %rbx
1264:fltk-1.3.4-1/png/pngwrite.c ****       return;
 5814              		.loc 1 1264 8 view .LVU1665
 5815 001b E8000000 		call	png_init_filter_heuristics
 5815      00
 5816              	.LVL497:
1268:fltk-1.3.4-1/png/pngwrite.c ****    {
 5817              		.loc 1 1268 4 is_stmt 1 view .LVU1666
1268:fltk-1.3.4-1/png/pngwrite.c ****    {
 5818              		.loc 1 1268 7 is_stmt 0 view .LVU1667
 5819 0020 4183FC02 		cmpl	$2, %r12d
 5820 0024 7504     		jne	.L621
 5821 0026 85C0     		testl	%eax, %eax
 5822 0028 750E     		jne	.L643
 5823              	.L621:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5824              		.loc 1 1305 1 view .LVU1668
 5825 002a 5B       		popq	%rbx
 5826              		.cfi_remember_state
 5827              		.cfi_def_cfa_offset 40
 5828              	.LVL498:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5829              		.loc 1 1305 1 view .LVU1669
 5830 002b 5D       		popq	%rbp
 5831              		.cfi_def_cfa_offset 32
 5832              	.LVL499:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5833              		.loc 1 1305 1 view .LVU1670
 5834 002c 415C     		popq	%r12
 5835              		.cfi_def_cfa_offset 24
 5836              	.LVL500:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5837              		.loc 1 1305 1 view .LVU1671
 5838 002e 415D     		popq	%r13
 5839              		.cfi_def_cfa_offset 16
 5840              	.LVL501:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5841              		.loc 1 1305 1 view .LVU1672
 5842 0030 415E     		popq	%r14
 5843              		.cfi_def_cfa_offset 8
 5844              	.LVL502:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5845              		.loc 1 1305 1 view .LVU1673
 5846 0032 C3       		ret
 5847              	.LVL503:
 5848              		.p2align 4,,10
 5849 0033 0F1F4400 		.p2align 3
 5849      00
 5850              	.L643:
 5851              		.cfi_restore_state
 5852              	.LBB293:
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5853              		.loc 1 1271 19 is_stmt 1 view .LVU1674
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5854              		.loc 1 1271 7 is_stmt 0 view .LVU1675
 5855 0038 4585F6   		testl	%r14d, %r14d
 5856 003b 0F8E9900 		jle	.L630
 5856      0000
 5857 0041 418D46FF 		leal	-1(%r14), %eax
1282:fltk-1.3.4-1/png/pngwrite.c **** 
 5858              		.loc 1 1282 48 view .LVU1676
 5859 0045 F20F1015 		movsd	.LC18(%rip), %xmm2
 5859      00000000 
1282:fltk-1.3.4-1/png/pngwrite.c **** 
 5860              		.loc 1 1282 66 view .LVU1677
 5861 004d F20F100D 		movsd	.LC19(%rip), %xmm1
 5861      00000000 
 5862 0055 660FEFDB 		pxor	%xmm3, %xmm3
 5863 0059 488D7400 		leaq	2(%rax,%rax), %rsi
 5863      02
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5864              		.loc 1 1271 7 view .LVU1678
 5865 005e 31C0     		xorl	%eax, %eax
 5866 0060 EB43     		jmp	.L629
 5867              	.LVL504:
 5868              		.p2align 4,,10
 5869 0062 660F1F44 		.p2align 3
 5869      0000
 5870              	.L641:
1281:fltk-1.3.4-1/png/pngwrite.c ****                 (png_uint_16)(PNG_WEIGHT_FACTOR*filter_weights[i]+.5);
 5871              		.loc 1 1281 13 is_stmt 1 view .LVU1679
1282:fltk-1.3.4-1/png/pngwrite.c **** 
 5872              		.loc 1 1282 48 is_stmt 0 view .LVU1680
 5873 0068 F20F59C2 		mulsd	%xmm2, %xmm0
1281:fltk-1.3.4-1/png/pngwrite.c ****                 (png_uint_16)(PNG_WEIGHT_FACTOR*filter_weights[i]+.5);
 5874              		.loc 1 1281 44 view .LVU1681
 5875 006c 488B8BB0 		movq	944(%rbx), %rcx
 5875      030000
1282:fltk-1.3.4-1/png/pngwrite.c **** 
 5876              		.loc 1 1282 66 view .LVU1682
 5877 0073 F20F58C1 		addsd	%xmm1, %xmm0
1282:fltk-1.3.4-1/png/pngwrite.c **** 
 5878              		.loc 1 1282 17 view .LVU1683
 5879 0077 F20F2CD0 		cvttsd2sil	%xmm0, %edx
1285:fltk-1.3.4-1/png/pngwrite.c ****          }
 5880              		.loc 1 1285 48 view .LVU1684
 5881 007b 660F28C2 		movapd	%xmm2, %xmm0
1282:fltk-1.3.4-1/png/pngwrite.c **** 
 5882              		.loc 1 1282 17 view .LVU1685
 5883 007f 66891401 		movw	%dx, (%rcx,%rax)
1284:fltk-1.3.4-1/png/pngwrite.c ****                 (png_uint_16)(PNG_WEIGHT_FACTOR/filter_weights[i]+.5);
 5884              		.loc 1 1284 13 is_stmt 1 view .LVU1686
1285:fltk-1.3.4-1/png/pngwrite.c ****          }
 5885              		.loc 1 1285 48 is_stmt 0 view .LVU1687
 5886 0083 F20F5E44 		divsd	0(%rbp,%rax,4), %xmm0
 5886      8500
1285:fltk-1.3.4-1/png/pngwrite.c ****          }
 5887              		.loc 1 1285 66 view .LVU1688
 5888 0089 F20F58C1 		addsd	%xmm1, %xmm0
1284:fltk-1.3.4-1/png/pngwrite.c ****                 (png_uint_16)(PNG_WEIGHT_FACTOR/filter_weights[i]+.5);
 5889              		.loc 1 1284 40 view .LVU1689
 5890 008d 488B8BA8 		movq	936(%rbx), %rcx
 5890      030000
1285:fltk-1.3.4-1/png/pngwrite.c ****          }
 5891              		.loc 1 1285 17 view .LVU1690
 5892 0094 F20F2CD0 		cvttsd2sil	%xmm0, %edx
 5893 0098 66891401 		movw	%dx, (%rcx,%rax)
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5894              		.loc 1 1271 36 is_stmt 1 view .LVU1691
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5895              		.loc 1 1271 19 view .LVU1692
 5896 009c 4883C002 		addq	$2, %rax
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5897              		.loc 1 1271 7 is_stmt 0 view .LVU1693
 5898 00a0 4839F0   		cmpq	%rsi, %rax
 5899 00a3 7435     		je	.L630
 5900              	.L629:
1273:fltk-1.3.4-1/png/pngwrite.c ****          {
 5901              		.loc 1 1273 10 is_stmt 1 view .LVU1694
1273:fltk-1.3.4-1/png/pngwrite.c ****          {
 5902              		.loc 1 1273 28 is_stmt 0 view .LVU1695
 5903 00a5 F20F1044 		movsd	0(%rbp,%rax,4), %xmm0
 5903      8500
1273:fltk-1.3.4-1/png/pngwrite.c ****          {
 5904              		.loc 1 1273 13 view .LVU1696
 5905 00ab 660F2FD8 		comisd	%xmm0, %xmm3
 5906 00af 72B7     		jb	.L641
1275:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 5907              		.loc 1 1275 13 is_stmt 1 view .LVU1697
1276:fltk-1.3.4-1/png/pngwrite.c ****          }
 5908              		.loc 1 1276 40 is_stmt 0 view .LVU1698
 5909 00b1 488B93A8 		movq	936(%rbx), %rdx
 5909      030000
 5910 00b8 B9000100 		movl	$256, %ecx
 5910      00
1275:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 5911              		.loc 1 1275 44 view .LVU1699
 5912 00bd BF000100 		movl	$256, %edi
 5912      00
1276:fltk-1.3.4-1/png/pngwrite.c ****          }
 5913              		.loc 1 1276 40 view .LVU1700
 5914 00c2 66890C02 		movw	%cx, (%rdx,%rax)
1275:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 5915              		.loc 1 1275 44 view .LVU1701
 5916 00c6 488B93B0 		movq	944(%rbx), %rdx
 5916      030000
 5917 00cd 66893C02 		movw	%di, (%rdx,%rax)
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5918              		.loc 1 1271 36 is_stmt 1 view .LVU1702
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5919              		.loc 1 1271 19 view .LVU1703
 5920 00d1 4883C002 		addq	$2, %rax
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5921              		.loc 1 1271 7 is_stmt 0 view .LVU1704
 5922 00d5 4839F0   		cmpq	%rsi, %rax
 5923 00d8 75CB     		jne	.L629
 5924              	.L630:
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5925              		.loc 1 1271 7 view .LVU1705
 5926 00da F20F101D 		movsd	.LC20(%rip), %xmm3
 5926      00000000 
1299:fltk-1.3.4-1/png/pngwrite.c **** 
 5927              		.loc 1 1299 44 view .LVU1706
 5928 00e2 F20F1015 		movsd	.LC21(%rip), %xmm2
 5928      00000000 
1271:fltk-1.3.4-1/png/pngwrite.c ****       {
 5929              		.loc 1 1271 7 view .LVU1707
 5930 00ea 31C0     		xorl	%eax, %eax
1299:fltk-1.3.4-1/png/pngwrite.c **** 
 5931              		.loc 1 1299 62 view .LVU1708
 5932 00ec F20F100D 		movsd	.LC19(%rip), %xmm1
 5932      00000000 
 5933              	.L625:
1296:fltk-1.3.4-1/png/pngwrite.c ****       {
 5934              		.loc 1 1296 51 is_stmt 1 discriminator 4 view .LVU1709
1296:fltk-1.3.4-1/png/pngwrite.c ****       {
 5935              		.loc 1 1296 67 is_stmt 0 discriminator 4 view .LVU1710
 5936 00f4 F2410F10 		movsd	0(%r13,%rax,4), %xmm0
 5936      448500
1296:fltk-1.3.4-1/png/pngwrite.c ****       {
 5937              		.loc 1 1296 54 discriminator 4 view .LVU1711
 5938 00fb 660F2FC3 		comisd	%xmm3, %xmm0
 5939 00ff 723D     		jb	.L631
1298:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_16)(PNG_COST_FACTOR / filter_costs[i] + .5);
 5940              		.loc 1 1298 10 is_stmt 1 view .LVU1712
1299:fltk-1.3.4-1/png/pngwrite.c **** 
 5941              		.loc 1 1299 44 is_stmt 0 view .LVU1713
 5942 0101 660F28E2 		movapd	%xmm2, %xmm4
1298:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_16)(PNG_COST_FACTOR / filter_costs[i] + .5);
 5943              		.loc 1 1298 39 view .LVU1714
 5944 0105 488B8BC0 		movq	960(%rbx), %rcx
 5944      030000
1299:fltk-1.3.4-1/png/pngwrite.c **** 
 5945              		.loc 1 1299 44 view .LVU1715
 5946 010c F20F5EE0 		divsd	%xmm0, %xmm4
 5947 0110 660F28C4 		movapd	%xmm4, %xmm0
1299:fltk-1.3.4-1/png/pngwrite.c **** 
 5948              		.loc 1 1299 62 view .LVU1716
 5949 0114 F20F58C1 		addsd	%xmm1, %xmm0
1299:fltk-1.3.4-1/png/pngwrite.c **** 
 5950              		.loc 1 1299 14 view .LVU1717
 5951 0118 F20F2CD0 		cvttsd2sil	%xmm0, %edx
 5952 011c 66891401 		movw	%dx, (%rcx,%rax)
1301:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_16)(PNG_COST_FACTOR * filter_costs[i] + .5);
 5953              		.loc 1 1301 10 is_stmt 1 view .LVU1718
1302:fltk-1.3.4-1/png/pngwrite.c ****       }
 5954              		.loc 1 1302 44 is_stmt 0 view .LVU1719
 5955 0120 F2410F10 		movsd	0(%r13,%rax,4), %xmm0
 5955      448500
1301:fltk-1.3.4-1/png/pngwrite.c ****              (png_uint_16)(PNG_COST_FACTOR * filter_costs[i] + .5);
 5956              		.loc 1 1301 35 view .LVU1720
 5957 0127 488B8BB8 		movq	952(%rbx), %rcx
 5957      030000
1302:fltk-1.3.4-1/png/pngwrite.c ****       }
 5958              		.loc 1 1302 44 view .LVU1721
 5959 012e F20F59C2 		mulsd	%xmm2, %xmm0
1302:fltk-1.3.4-1/png/pngwrite.c ****       }
 5960              		.loc 1 1302 62 view .LVU1722
 5961 0132 F20F58C1 		addsd	%xmm1, %xmm0
1302:fltk-1.3.4-1/png/pngwrite.c ****       }
 5962              		.loc 1 1302 14 view .LVU1723
 5963 0136 F20F2CD0 		cvttsd2sil	%xmm0, %edx
 5964 013a 66891401 		movw	%dx, (%rcx,%rax)
 5965              	.L631:
1296:fltk-1.3.4-1/png/pngwrite.c ****       {
 5966              		.loc 1 1296 46 is_stmt 1 discriminator 2 view .LVU1724
1296:fltk-1.3.4-1/png/pngwrite.c ****       {
 5967              		.loc 1 1296 19 discriminator 2 view .LVU1725
 5968 013e 4883C002 		addq	$2, %rax
1296:fltk-1.3.4-1/png/pngwrite.c ****       {
 5969              		.loc 1 1296 7 is_stmt 0 discriminator 2 view .LVU1726
 5970 0142 4883F80A 		cmpq	$10, %rax
 5971 0146 75AC     		jne	.L625
 5972              	.LBE293:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5973              		.loc 1 1305 1 view .LVU1727
 5974 0148 5B       		popq	%rbx
 5975              		.cfi_def_cfa_offset 40
 5976              	.LVL505:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5977              		.loc 1 1305 1 view .LVU1728
 5978 0149 5D       		popq	%rbp
 5979              		.cfi_def_cfa_offset 32
 5980              	.LVL506:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5981              		.loc 1 1305 1 view .LVU1729
 5982 014a 415C     		popq	%r12
 5983              		.cfi_def_cfa_offset 24
 5984              	.LVL507:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5985              		.loc 1 1305 1 view .LVU1730
 5986 014c 415D     		popq	%r13
 5987              		.cfi_def_cfa_offset 16
 5988              	.LVL508:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5989              		.loc 1 1305 1 view .LVU1731
 5990 014e 415E     		popq	%r14
 5991              		.cfi_def_cfa_offset 8
 5992              	.LVL509:
1305:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FLOATING_POINT */
 5993              		.loc 1 1305 1 view .LVU1732
 5994 0150 C3       		ret
 5995              		.cfi_endproc
 5996              	.LFE60:
 5998              		.section	.text.png_set_filter_heuristics_fixed,"ax",@progbits
 5999              		.p2align 4
 6000              		.globl	png_set_filter_heuristics_fixed
 6002              	png_set_filter_heuristics_fixed:
 6003              	.LVL510:
 6004              	.LFB61:
1313:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics_fixed");
 6005              		.loc 1 1313 1 is_stmt 1 view -0
 6006              		.cfi_startproc
1313:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics_fixed");
 6007              		.loc 1 1313 1 is_stmt 0 view .LVU1734
 6008 0000 F30F1EFA 		endbr64
1314:fltk-1.3.4-1/png/pngwrite.c **** 
 6009              		.loc 1 1314 4 is_stmt 1 view .LVU1735
1319:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6010              		.loc 1 1319 4 view .LVU1736
1313:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics_fixed");
 6011              		.loc 1 1313 1 is_stmt 0 view .LVU1737
 6012 0004 4156     		pushq	%r14
 6013              		.cfi_def_cfa_offset 16
 6014              		.cfi_offset 14, -16
 6015 0006 4189D6   		movl	%edx, %r14d
 6016 0009 4155     		pushq	%r13
 6017              		.cfi_def_cfa_offset 24
 6018              		.cfi_offset 13, -24
 6019 000b 4189F5   		movl	%esi, %r13d
 6020 000e 4154     		pushq	%r12
 6021              		.cfi_def_cfa_offset 32
 6022              		.cfi_offset 12, -32
 6023 0010 4D89C4   		movq	%r8, %r12
 6024 0013 55       		pushq	%rbp
 6025              		.cfi_def_cfa_offset 40
 6026              		.cfi_offset 6, -40
 6027 0014 4889CD   		movq	%rcx, %rbp
 6028 0017 53       		pushq	%rbx
 6029              		.cfi_def_cfa_offset 48
 6030              		.cfi_offset 3, -48
1313:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_filter_heuristics_fixed");
 6031              		.loc 1 1313 1 view .LVU1738
 6032 0018 4889FB   		movq	%rdi, %rbx
1319:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6033              		.loc 1 1319 8 view .LVU1739
 6034 001b E8000000 		call	png_init_filter_heuristics
 6034      00
 6035              	.LVL511:
1323:fltk-1.3.4-1/png/pngwrite.c ****    {
 6036              		.loc 1 1323 4 is_stmt 1 view .LVU1740
1323:fltk-1.3.4-1/png/pngwrite.c ****    {
 6037              		.loc 1 1323 7 is_stmt 0 view .LVU1741
 6038 0020 4183FD02 		cmpl	$2, %r13d
 6039 0024 7504     		jne	.L644
 6040 0026 85C0     		testl	%eax, %eax
 6041 0028 750E     		jne	.L661
 6042              	.L644:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6043              		.loc 1 1371 1 view .LVU1742
 6044 002a 5B       		popq	%rbx
 6045              		.cfi_remember_state
 6046              		.cfi_def_cfa_offset 40
 6047              	.LVL512:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6048              		.loc 1 1371 1 view .LVU1743
 6049 002b 5D       		popq	%rbp
 6050              		.cfi_def_cfa_offset 32
 6051              	.LVL513:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6052              		.loc 1 1371 1 view .LVU1744
 6053 002c 415C     		popq	%r12
 6054              		.cfi_def_cfa_offset 24
 6055              	.LVL514:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6056              		.loc 1 1371 1 view .LVU1745
 6057 002e 415D     		popq	%r13
 6058              		.cfi_def_cfa_offset 16
 6059              	.LVL515:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6060              		.loc 1 1371 1 view .LVU1746
 6061 0030 415E     		popq	%r14
 6062              		.cfi_def_cfa_offset 8
 6063              	.LVL516:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6064              		.loc 1 1371 1 view .LVU1747
 6065 0032 C3       		ret
 6066              	.LVL517:
 6067              		.p2align 4,,10
 6068 0033 0F1F4400 		.p2align 3
 6068      00
 6069              	.L661:
 6070              		.cfi_restore_state
 6071              	.LBB294:
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6072              		.loc 1 1326 19 is_stmt 1 view .LVU1748
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6073              		.loc 1 1326 7 is_stmt 0 view .LVU1749
 6074 0038 4585F6   		testl	%r14d, %r14d
 6075 003b 0F8E8B00 		jle	.L652
 6075      0000
 6076 0041 418D46FF 		leal	-1(%r14), %eax
 6077 0045 31F6     		xorl	%esi, %esi
 6078 0047 488D4C00 		leaq	2(%rax,%rax), %rcx
 6078      02
 6079 004c EB4D     		jmp	.L651
 6080              	.LVL518:
 6081 004e 6690     		.p2align 4,,10
 6082              		.p2align 3
 6083              	.L649:
1336:fltk-1.3.4-1/png/pngwrite.c ****                ((PNG_WEIGHT_FACTOR*filter_weights[i]+PNG_FP_HALF)/PNG_FP_1);
 6084              		.loc 1 1336 13 is_stmt 1 view .LVU1750
1337:fltk-1.3.4-1/png/pngwrite.c **** 
 6085              		.loc 1 1337 35 is_stmt 0 view .LVU1751
 6086 0050 C1E008   		sall	$8, %eax
1336:fltk-1.3.4-1/png/pngwrite.c ****                ((PNG_WEIGHT_FACTOR*filter_weights[i]+PNG_FP_HALF)/PNG_FP_1);
 6087              		.loc 1 1336 44 view .LVU1752
 6088 0053 488B93B0 		movq	944(%rbx), %rdx
 6088      030000
1337:fltk-1.3.4-1/png/pngwrite.c **** 
 6089              		.loc 1 1337 53 view .LVU1753
 6090 005a 0550C300 		addl	$50000, %eax
 6090      00
1337:fltk-1.3.4-1/png/pngwrite.c **** 
 6091              		.loc 1 1337 66 view .LVU1754
 6092 005f C1E805   		shrl	$5, %eax
 6093 0062 4869C0C5 		imulq	$175921861, %rax, %rax
 6093      5A7C0A
 6094 0069 48C1E827 		shrq	$39, %rax
1336:fltk-1.3.4-1/png/pngwrite.c ****                ((PNG_WEIGHT_FACTOR*filter_weights[i]+PNG_FP_HALF)/PNG_FP_1);
 6095              		.loc 1 1336 46 view .LVU1755
 6096 006d 66890432 		movw	%ax, (%rdx,%rsi)
1339:fltk-1.3.4-1/png/pngwrite.c ****                PNG_FP_1+(filter_weights[i]/2))/filter_weights[i]);
 6097              		.loc 1 1339 13 is_stmt 1 view .LVU1756
1340:fltk-1.3.4-1/png/pngwrite.c ****          }
 6098              		.loc 1 1340 40 is_stmt 0 view .LVU1757
 6099 0071 8B7C7500 		movl	0(%rbp,%rsi,2), %edi
1339:fltk-1.3.4-1/png/pngwrite.c ****                PNG_FP_1+(filter_weights[i]/2))/filter_weights[i]);
 6100              		.loc 1 1339 40 view .LVU1758
 6101 0075 4C8B83A8 		movq	936(%rbx), %r8
 6101      030000
1340:fltk-1.3.4-1/png/pngwrite.c ****          }
 6102              		.loc 1 1340 43 view .LVU1759
 6103 007c 89F8     		movl	%edi, %eax
 6104 007e C1E81F   		shrl	$31, %eax
 6105 0081 01F8     		addl	%edi, %eax
 6106 0083 D1F8     		sarl	%eax
1340:fltk-1.3.4-1/png/pngwrite.c ****          }
 6107              		.loc 1 1340 24 view .LVU1760
 6108 0085 0500A086 		addl	$25600000, %eax
 6108      01
1340:fltk-1.3.4-1/png/pngwrite.c ****          }
 6109              		.loc 1 1340 47 view .LVU1761
 6110 008a 99       		cltd
 6111 008b F7FF     		idivl	%edi
1339:fltk-1.3.4-1/png/pngwrite.c ****                PNG_FP_1+(filter_weights[i]/2))/filter_weights[i]);
 6112              		.loc 1 1339 42 view .LVU1762
 6113 008d 66418904 		movw	%ax, (%r8,%rsi)
 6113      30
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6114              		.loc 1 1326 36 is_stmt 1 view .LVU1763
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6115              		.loc 1 1326 19 view .LVU1764
 6116 0092 4883C602 		addq	$2, %rsi
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6117              		.loc 1 1326 7 is_stmt 0 view .LVU1765
 6118 0096 4839CE   		cmpq	%rcx, %rsi
 6119 0099 7431     		je	.L652
 6120              	.L651:
1328:fltk-1.3.4-1/png/pngwrite.c ****          {
 6121              		.loc 1 1328 10 is_stmt 1 view .LVU1766
1328:fltk-1.3.4-1/png/pngwrite.c ****          {
 6122              		.loc 1 1328 28 is_stmt 0 view .LVU1767
 6123 009b 8B447500 		movl	0(%rbp,%rsi,2), %eax
1328:fltk-1.3.4-1/png/pngwrite.c ****          {
 6124              		.loc 1 1328 13 view .LVU1768
 6125 009f 85C0     		testl	%eax, %eax
 6126 00a1 7FAD     		jg	.L649
1330:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 6127              		.loc 1 1330 13 is_stmt 1 view .LVU1769
1331:fltk-1.3.4-1/png/pngwrite.c ****          }
 6128              		.loc 1 1331 40 is_stmt 0 view .LVU1770
 6129 00a3 488B83A8 		movq	936(%rbx), %rax
 6129      030000
 6130 00aa BA000100 		movl	$256, %edx
 6130      00
1330:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 6131              		.loc 1 1330 44 view .LVU1771
 6132 00af BF000100 		movl	$256, %edi
 6132      00
1331:fltk-1.3.4-1/png/pngwrite.c ****          }
 6133              		.loc 1 1331 40 view .LVU1772
 6134 00b4 66891430 		movw	%dx, (%rax,%rsi)
1330:fltk-1.3.4-1/png/pngwrite.c ****             png_ptr->filter_weights[i] = PNG_WEIGHT_FACTOR;
 6135              		.loc 1 1330 44 view .LVU1773
 6136 00b8 488B83B0 		movq	944(%rbx), %rax
 6136      030000
 6137 00bf 66893C30 		movw	%di, (%rax,%rsi)
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6138              		.loc 1 1326 36 is_stmt 1 view .LVU1774
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6139              		.loc 1 1326 19 view .LVU1775
 6140 00c3 4883C602 		addq	$2, %rsi
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6141              		.loc 1 1326 7 is_stmt 0 view .LVU1776
 6142 00c7 4839CE   		cmpq	%rcx, %rsi
 6143 00ca 75CF     		jne	.L651
 6144              	.L652:
1326:fltk-1.3.4-1/png/pngwrite.c ****       {
 6145              		.loc 1 1326 7 view .LVU1777
 6146 00cc 31C9     		xorl	%ecx, %ecx
 6147              	.L648:
1352:fltk-1.3.4-1/png/pngwrite.c ****       {
 6148              		.loc 1 1352 10 is_stmt 1 view .LVU1778
1352:fltk-1.3.4-1/png/pngwrite.c ****       {
 6149              		.loc 1 1352 26 is_stmt 0 view .LVU1779
 6150 00ce 418B344C 		movl	(%r12,%rcx,2), %esi
1352:fltk-1.3.4-1/png/pngwrite.c ****       {
 6151              		.loc 1 1352 13 view .LVU1780
 6152 00d2 81FE9F86 		cmpl	$99999, %esi
 6152      0100
 6153 00d8 7E3C     		jle	.L653
 6154              	.LBB295:
1354:fltk-1.3.4-1/png/pngwrite.c **** 
 6155              		.loc 1 1354 10 is_stmt 1 view .LVU1781
1360:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= filter_costs[i];
 6156              		.loc 1 1360 10 view .LVU1782
1360:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= filter_costs[i];
 6157              		.loc 1 1360 59 is_stmt 0 view .LVU1783
 6158 00da 89F0     		movl	%esi, %eax
1361:fltk-1.3.4-1/png/pngwrite.c **** 
 6159              		.loc 1 1361 14 view .LVU1784
 6160 00dc 31D2     		xorl	%edx, %edx
1363:fltk-1.3.4-1/png/pngwrite.c **** 
 6161              		.loc 1 1363 39 view .LVU1785
 6162 00de 488BBBC0 		movq	960(%rbx), %rdi
 6162      030000
1360:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= filter_costs[i];
 6163              		.loc 1 1360 59 view .LVU1786
 6164 00e5 D1F8     		sarl	%eax
1360:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= filter_costs[i];
 6165              		.loc 1 1360 41 view .LVU1787
 6166 00e7 0500350C 		addl	$800000, %eax
 6166      00
 6167              	.LVL519:
1361:fltk-1.3.4-1/png/pngwrite.c **** 
 6168              		.loc 1 1361 10 is_stmt 1 view .LVU1788
1363:fltk-1.3.4-1/png/pngwrite.c **** 
 6169              		.loc 1 1363 10 view .LVU1789
1361:fltk-1.3.4-1/png/pngwrite.c **** 
 6170              		.loc 1 1361 14 is_stmt 0 view .LVU1790
 6171 00ec F7F6     		divl	%esi
 6172              	.LVL520:
1363:fltk-1.3.4-1/png/pngwrite.c **** 
 6173              		.loc 1 1363 41 view .LVU1791
 6174 00ee 6689040F 		movw	%ax, (%rdi,%rcx)
1365:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= PNG_FP_1;
 6175              		.loc 1 1365 10 is_stmt 1 view .LVU1792
1365:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= PNG_FP_1;
 6176              		.loc 1 1365 50 is_stmt 0 view .LVU1793
 6177 00f2 418B044C 		movl	(%r12,%rcx,2), %eax
 6178              	.LVL521:
1368:fltk-1.3.4-1/png/pngwrite.c ****       }
 6179              		.loc 1 1368 35 view .LVU1794
 6180 00f6 488B93B8 		movq	952(%rbx), %rdx
 6180      030000
1365:fltk-1.3.4-1/png/pngwrite.c ****          tmp /= PNG_FP_1;
 6181              		.loc 1 1365 50 view .LVU1795
 6182 00fd 8D04C550 		leal	50000(,%rax,8), %eax
 6182      C30000
 6183              	.LVL522:
1366:fltk-1.3.4-1/png/pngwrite.c **** 
 6184              		.loc 1 1366 10 is_stmt 1 view .LVU1796
1368:fltk-1.3.4-1/png/pngwrite.c ****       }
 6185              		.loc 1 1368 10 view .LVU1797
1366:fltk-1.3.4-1/png/pngwrite.c **** 
 6186              		.loc 1 1366 14 is_stmt 0 view .LVU1798
 6187 0104 C1E805   		shrl	$5, %eax
 6188              	.LVL523:
1366:fltk-1.3.4-1/png/pngwrite.c **** 
 6189              		.loc 1 1366 14 view .LVU1799
 6190 0107 4869C0C5 		imulq	$175921861, %rax, %rax
 6190      5A7C0A
 6191 010e 48C1E827 		shrq	$39, %rax
1368:fltk-1.3.4-1/png/pngwrite.c ****       }
 6192              		.loc 1 1368 37 view .LVU1800
 6193 0112 6689040A 		movw	%ax, (%rdx,%rcx)
 6194              	.LVL524:
 6195              	.L653:
1368:fltk-1.3.4-1/png/pngwrite.c ****       }
 6196              		.loc 1 1368 37 view .LVU1801
 6197              	.LBE295:
1351:fltk-1.3.4-1/png/pngwrite.c ****          if (filter_costs[i] >= PNG_FP_1)
 6198              		.loc 1 1351 46 is_stmt 1 discriminator 2 view .LVU1802
1351:fltk-1.3.4-1/png/pngwrite.c ****          if (filter_costs[i] >= PNG_FP_1)
 6199              		.loc 1 1351 19 discriminator 2 view .LVU1803
 6200 0116 4883C102 		addq	$2, %rcx
1351:fltk-1.3.4-1/png/pngwrite.c ****          if (filter_costs[i] >= PNG_FP_1)
 6201              		.loc 1 1351 7 is_stmt 0 discriminator 2 view .LVU1804
 6202 011a 4883F90A 		cmpq	$10, %rcx
 6203 011e 75AE     		jne	.L648
 6204              	.LBE294:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6205              		.loc 1 1371 1 view .LVU1805
 6206 0120 5B       		popq	%rbx
 6207              		.cfi_def_cfa_offset 40
 6208              	.LVL525:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6209              		.loc 1 1371 1 view .LVU1806
 6210 0121 5D       		popq	%rbp
 6211              		.cfi_def_cfa_offset 32
 6212              	.LVL526:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6213              		.loc 1 1371 1 view .LVU1807
 6214 0122 415C     		popq	%r12
 6215              		.cfi_def_cfa_offset 24
 6216              	.LVL527:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6217              		.loc 1 1371 1 view .LVU1808
 6218 0124 415D     		popq	%r13
 6219              		.cfi_def_cfa_offset 16
 6220              	.LVL528:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6221              		.loc 1 1371 1 view .LVU1809
 6222 0126 415E     		popq	%r14
 6223              		.cfi_def_cfa_offset 8
 6224              	.LVL529:
1371:fltk-1.3.4-1/png/pngwrite.c **** #endif /* FIXED_POINT */
 6225              		.loc 1 1371 1 view .LVU1810
 6226 0128 C3       		ret
 6227              		.cfi_endproc
 6228              	.LFE61:
 6230              		.section	.text.png_set_compression_level,"ax",@progbits
 6231              		.p2align 4
 6232              		.globl	png_set_compression_level
 6234              	png_set_compression_level:
 6235              	.LVL530:
 6236              	.LFB62:
1377:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_level");
 6237              		.loc 1 1377 1 is_stmt 1 view -0
 6238              		.cfi_startproc
1377:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_level");
 6239              		.loc 1 1377 1 is_stmt 0 view .LVU1812
 6240 0000 F30F1EFA 		endbr64
1378:fltk-1.3.4-1/png/pngwrite.c **** 
 6241              		.loc 1 1378 4 is_stmt 1 view .LVU1813
1380:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6242              		.loc 1 1380 4 view .LVU1814
1380:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6243              		.loc 1 1380 7 is_stmt 0 view .LVU1815
 6244 0004 4885FF   		testq	%rdi, %rdi
 6245 0007 7406     		je	.L662
1383:fltk-1.3.4-1/png/pngwrite.c **** }
 6246              		.loc 1 1383 4 is_stmt 1 view .LVU1816
1383:fltk-1.3.4-1/png/pngwrite.c **** }
 6247              		.loc 1 1383 24 is_stmt 0 view .LVU1817
 6248 0009 89B7BC01 		movl	%esi, 444(%rdi)
 6248      0000
 6249              	.L662:
1384:fltk-1.3.4-1/png/pngwrite.c **** 
 6250              		.loc 1 1384 1 view .LVU1818
 6251 000f C3       		ret
 6252              		.cfi_endproc
 6253              	.LFE62:
 6255              		.section	.text.png_set_compression_mem_level,"ax",@progbits
 6256              		.p2align 4
 6257              		.globl	png_set_compression_mem_level
 6259              	png_set_compression_mem_level:
 6260              	.LVL531:
 6261              	.LFB63:
1388:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_mem_level");
 6262              		.loc 1 1388 1 is_stmt 1 view -0
 6263              		.cfi_startproc
1388:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_mem_level");
 6264              		.loc 1 1388 1 is_stmt 0 view .LVU1820
 6265 0000 F30F1EFA 		endbr64
1389:fltk-1.3.4-1/png/pngwrite.c **** 
 6266              		.loc 1 1389 4 is_stmt 1 view .LVU1821
1391:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6267              		.loc 1 1391 4 view .LVU1822
1391:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6268              		.loc 1 1391 7 is_stmt 0 view .LVU1823
 6269 0004 4885FF   		testq	%rdi, %rdi
 6270 0007 7406     		je	.L667
1394:fltk-1.3.4-1/png/pngwrite.c **** }
 6271              		.loc 1 1394 4 is_stmt 1 view .LVU1824
1394:fltk-1.3.4-1/png/pngwrite.c **** }
 6272              		.loc 1 1394 28 is_stmt 0 view .LVU1825
 6273 0009 89B7C801 		movl	%esi, 456(%rdi)
 6273      0000
 6274              	.L667:
1395:fltk-1.3.4-1/png/pngwrite.c **** 
 6275              		.loc 1 1395 1 view .LVU1826
 6276 000f C3       		ret
 6277              		.cfi_endproc
 6278              	.LFE63:
 6280              		.section	.text.png_set_compression_strategy,"ax",@progbits
 6281              		.p2align 4
 6282              		.globl	png_set_compression_strategy
 6284              	png_set_compression_strategy:
 6285              	.LVL532:
 6286              	.LFB64:
1399:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_strategy");
 6287              		.loc 1 1399 1 is_stmt 1 view -0
 6288              		.cfi_startproc
1399:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_strategy");
 6289              		.loc 1 1399 1 is_stmt 0 view .LVU1828
 6290 0000 F30F1EFA 		endbr64
1400:fltk-1.3.4-1/png/pngwrite.c **** 
 6291              		.loc 1 1400 4 is_stmt 1 view .LVU1829
1402:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6292              		.loc 1 1402 4 view .LVU1830
1402:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6293              		.loc 1 1402 7 is_stmt 0 view .LVU1831
 6294 0004 4885FF   		testq	%rdi, %rdi
 6295 0007 740D     		je	.L672
1407:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_strategy = strategy;
 6296              		.loc 1 1407 4 is_stmt 1 view .LVU1832
1407:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->zlib_strategy = strategy;
 6297              		.loc 1 1407 19 is_stmt 0 view .LVU1833
 6298 0009 838F3001 		orl	$1, 304(%rdi)
 6298      000001
1408:fltk-1.3.4-1/png/pngwrite.c **** }
 6299              		.loc 1 1408 4 is_stmt 1 view .LVU1834
1408:fltk-1.3.4-1/png/pngwrite.c **** }
 6300              		.loc 1 1408 27 is_stmt 0 view .LVU1835
 6301 0010 89B7CC01 		movl	%esi, 460(%rdi)
 6301      0000
 6302              	.L672:
1409:fltk-1.3.4-1/png/pngwrite.c **** 
 6303              		.loc 1 1409 1 view .LVU1836
 6304 0016 C3       		ret
 6305              		.cfi_endproc
 6306              	.LFE64:
 6308              		.section	.rodata.png_set_compression_window_bits.str1.8,"aMS",@progbits,1
 6309              		.align 8
 6310              	.LC22:
 6311 0000 4F6E6C79 		.string	"Only compression windows <= 32k supported by PNG"
 6311      20636F6D 
 6311      70726573 
 6311      73696F6E 
 6311      2077696E 
 6312 0031 00000000 		.align 8
 6312      000000
 6313              	.LC23:
 6314 0038 4F6E6C79 		.string	"Only compression windows >= 256 supported by PNG"
 6314      20636F6D 
 6314      70726573 
 6314      73696F6E 
 6314      2077696E 
 6315              		.section	.text.png_set_compression_window_bits,"ax",@progbits
 6316              		.p2align 4
 6317              		.globl	png_set_compression_window_bits
 6319              	png_set_compression_window_bits:
 6320              	.LVL533:
 6321              	.LFB65:
1416:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6322              		.loc 1 1416 1 is_stmt 1 view -0
 6323              		.cfi_startproc
1416:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6324              		.loc 1 1416 1 is_stmt 0 view .LVU1838
 6325 0000 F30F1EFA 		endbr64
1417:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6326              		.loc 1 1417 4 is_stmt 1 view .LVU1839
1417:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6327              		.loc 1 1417 7 is_stmt 0 view .LVU1840
 6328 0004 4885FF   		testq	%rdi, %rdi
 6329 0007 7457     		je	.L685
1416:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6330              		.loc 1 1416 1 view .LVU1841
 6331 0009 53       		pushq	%rbx
 6332              		.cfi_def_cfa_offset 16
 6333              		.cfi_offset 3, -16
 6334 000a 4889FB   		movq	%rdi, %rbx
1426:fltk-1.3.4-1/png/pngwrite.c ****    {
 6335              		.loc 1 1426 4 is_stmt 1 view .LVU1842
1426:fltk-1.3.4-1/png/pngwrite.c ****    {
 6336              		.loc 1 1426 7 is_stmt 0 view .LVU1843
 6337 000d 83FE0F   		cmpl	$15, %esi
 6338 0010 7F0E     		jg	.L688
1432:fltk-1.3.4-1/png/pngwrite.c ****    {
 6339              		.loc 1 1432 9 is_stmt 1 view .LVU1844
1432:fltk-1.3.4-1/png/pngwrite.c ****    {
 6340              		.loc 1 1432 12 is_stmt 0 view .LVU1845
 6341 0012 83FE07   		cmpl	$7, %esi
 6342 0015 7E29     		jle	.L689
1438:fltk-1.3.4-1/png/pngwrite.c **** }
 6343              		.loc 1 1438 4 is_stmt 1 view .LVU1846
1438:fltk-1.3.4-1/png/pngwrite.c **** }
 6344              		.loc 1 1438 30 is_stmt 0 view .LVU1847
 6345 0017 89B3C401 		movl	%esi, 452(%rbx)
 6345      0000
1439:fltk-1.3.4-1/png/pngwrite.c **** 
 6346              		.loc 1 1439 1 view .LVU1848
 6347 001d 5B       		popq	%rbx
 6348              		.cfi_remember_state
 6349              		.cfi_def_cfa_offset 8
 6350 001e C3       		ret
 6351              	.LVL534:
 6352 001f 90       		.p2align 4,,10
 6353              		.p2align 3
 6354              	.L688:
 6355              		.cfi_restore_state
1428:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 15;
 6356              		.loc 1 1428 7 is_stmt 1 view .LVU1849
 6357 0020 488D3500 		leaq	.LC22(%rip), %rsi
 6357      000000
 6358              	.LVL535:
1428:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 15;
 6359              		.loc 1 1428 7 is_stmt 0 view .LVU1850
 6360 0027 E8000000 		call	png_warning@PLT
 6360      00
 6361              	.LVL536:
1429:fltk-1.3.4-1/png/pngwrite.c ****    }
 6362              		.loc 1 1429 7 is_stmt 1 view .LVU1851
1429:fltk-1.3.4-1/png/pngwrite.c ****    }
 6363              		.loc 1 1429 19 is_stmt 0 view .LVU1852
 6364 002c BE0F0000 		movl	$15, %esi
 6364      00
 6365              	.LVL537:
1438:fltk-1.3.4-1/png/pngwrite.c **** }
 6366              		.loc 1 1438 4 is_stmt 1 view .LVU1853
1438:fltk-1.3.4-1/png/pngwrite.c **** }
 6367              		.loc 1 1438 30 is_stmt 0 view .LVU1854
 6368 0031 89B3C401 		movl	%esi, 452(%rbx)
 6368      0000
1439:fltk-1.3.4-1/png/pngwrite.c **** 
 6369              		.loc 1 1439 1 view .LVU1855
 6370 0037 5B       		popq	%rbx
 6371              		.cfi_remember_state
 6372              		.cfi_def_cfa_offset 8
 6373              	.LVL538:
1439:fltk-1.3.4-1/png/pngwrite.c **** 
 6374              		.loc 1 1439 1 view .LVU1856
 6375 0038 C3       		ret
 6376              	.LVL539:
 6377 0039 0F1F8000 		.p2align 4,,10
 6377      000000
 6378              		.p2align 3
 6379              	.L689:
 6380              		.cfi_restore_state
1434:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 8;
 6381              		.loc 1 1434 7 is_stmt 1 view .LVU1857
 6382 0040 488D3500 		leaq	.LC23(%rip), %rsi
 6382      000000
 6383              	.LVL540:
1434:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 8;
 6384              		.loc 1 1434 7 is_stmt 0 view .LVU1858
 6385 0047 E8000000 		call	png_warning@PLT
 6385      00
 6386              	.LVL541:
1435:fltk-1.3.4-1/png/pngwrite.c ****    }
 6387              		.loc 1 1435 7 is_stmt 1 view .LVU1859
1435:fltk-1.3.4-1/png/pngwrite.c ****    }
 6388              		.loc 1 1435 19 is_stmt 0 view .LVU1860
 6389 004c BE080000 		movl	$8, %esi
 6389      00
 6390              	.LVL542:
1438:fltk-1.3.4-1/png/pngwrite.c **** }
 6391              		.loc 1 1438 4 is_stmt 1 view .LVU1861
1438:fltk-1.3.4-1/png/pngwrite.c **** }
 6392              		.loc 1 1438 30 is_stmt 0 view .LVU1862
 6393 0051 89B3C401 		movl	%esi, 452(%rbx)
 6393      0000
1439:fltk-1.3.4-1/png/pngwrite.c **** 
 6394              		.loc 1 1439 1 view .LVU1863
 6395 0057 5B       		popq	%rbx
 6396              		.cfi_def_cfa_offset 8
 6397              	.LVL543:
1439:fltk-1.3.4-1/png/pngwrite.c **** 
 6398              		.loc 1 1439 1 view .LVU1864
 6399 0058 C3       		ret
 6400              	.LVL544:
 6401 0059 0F1F8000 		.p2align 4,,10
 6401      000000
 6402              		.p2align 3
 6403              	.L685:
 6404              		.cfi_restore 3
1439:fltk-1.3.4-1/png/pngwrite.c **** 
 6405              		.loc 1 1439 1 view .LVU1865
 6406 0060 C3       		ret
 6407              		.cfi_endproc
 6408              	.LFE65:
 6410              		.section	.rodata.png_set_compression_method.str1.8,"aMS",@progbits,1
 6411              		.align 8
 6412              	.LC24:
 6413 0000 4F6E6C79 		.string	"Only compression method 8 is supported by PNG"
 6413      20636F6D 
 6413      70726573 
 6413      73696F6E 
 6413      206D6574 
 6414              		.section	.text.png_set_compression_method,"ax",@progbits
 6415              		.p2align 4
 6416              		.globl	png_set_compression_method
 6418              	png_set_compression_method:
 6419              	.LVL545:
 6420              	.LFB66:
1443:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_method");
 6421              		.loc 1 1443 1 is_stmt 1 view -0
 6422              		.cfi_startproc
1443:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_method");
 6423              		.loc 1 1443 1 is_stmt 0 view .LVU1867
 6424 0000 F30F1EFA 		endbr64
1444:fltk-1.3.4-1/png/pngwrite.c **** 
 6425              		.loc 1 1444 4 is_stmt 1 view .LVU1868
1446:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6426              		.loc 1 1446 4 view .LVU1869
1446:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6427              		.loc 1 1446 7 is_stmt 0 view .LVU1870
 6428 0004 4885FF   		testq	%rdi, %rdi
 6429 0007 7447     		je	.L700
1443:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_method");
 6430              		.loc 1 1443 1 view .LVU1871
 6431 0009 55       		pushq	%rbp
 6432              		.cfi_def_cfa_offset 16
 6433              		.cfi_offset 6, -16
 6434 000a 89F5     		movl	%esi, %ebp
1452:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression method 8 is supported by PNG");
 6435              		.loc 1 1452 4 is_stmt 1 view .LVU1872
1443:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_compression_method");
 6436              		.loc 1 1443 1 is_stmt 0 view .LVU1873
 6437 000c 53       		pushq	%rbx
 6438              		.cfi_def_cfa_offset 24
 6439              		.cfi_offset 3, -24
 6440 000d 4889FB   		movq	%rdi, %rbx
 6441 0010 4883EC08 		subq	$8, %rsp
 6442              		.cfi_def_cfa_offset 32
1452:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression method 8 is supported by PNG");
 6443              		.loc 1 1452 7 view .LVU1874
 6444 0014 83FE08   		cmpl	$8, %esi
 6445 0017 7517     		jne	.L703
1455:fltk-1.3.4-1/png/pngwrite.c **** }
 6446              		.loc 1 1455 4 is_stmt 1 view .LVU1875
1455:fltk-1.3.4-1/png/pngwrite.c **** }
 6447              		.loc 1 1455 25 is_stmt 0 view .LVU1876
 6448 0019 89ABC001 		movl	%ebp, 448(%rbx)
 6448      0000
1456:fltk-1.3.4-1/png/pngwrite.c **** 
 6449              		.loc 1 1456 1 view .LVU1877
 6450 001f 4883C408 		addq	$8, %rsp
 6451              		.cfi_remember_state
 6452              		.cfi_def_cfa_offset 24
 6453 0023 5B       		popq	%rbx
 6454              		.cfi_def_cfa_offset 16
 6455 0024 5D       		popq	%rbp
 6456              		.cfi_def_cfa_offset 8
 6457 0025 C3       		ret
 6458              	.LVL546:
 6459 0026 662E0F1F 		.p2align 4,,10
 6459      84000000 
 6459      0000
 6460              		.p2align 3
 6461              	.L703:
 6462              		.cfi_restore_state
1453:fltk-1.3.4-1/png/pngwrite.c **** 
 6463              		.loc 1 1453 7 is_stmt 1 view .LVU1878
 6464 0030 488D3500 		leaq	.LC24(%rip), %rsi
 6464      000000
 6465              	.LVL547:
1453:fltk-1.3.4-1/png/pngwrite.c **** 
 6466              		.loc 1 1453 7 is_stmt 0 view .LVU1879
 6467 0037 E8000000 		call	png_warning@PLT
 6467      00
 6468              	.LVL548:
1455:fltk-1.3.4-1/png/pngwrite.c **** }
 6469              		.loc 1 1455 4 is_stmt 1 view .LVU1880
1455:fltk-1.3.4-1/png/pngwrite.c **** }
 6470              		.loc 1 1455 25 is_stmt 0 view .LVU1881
 6471 003c 89ABC001 		movl	%ebp, 448(%rbx)
 6471      0000
1456:fltk-1.3.4-1/png/pngwrite.c **** 
 6472              		.loc 1 1456 1 view .LVU1882
 6473 0042 4883C408 		addq	$8, %rsp
 6474              		.cfi_def_cfa_offset 24
 6475 0046 5B       		popq	%rbx
 6476              		.cfi_def_cfa_offset 16
 6477              	.LVL549:
1456:fltk-1.3.4-1/png/pngwrite.c **** 
 6478              		.loc 1 1456 1 view .LVU1883
 6479 0047 5D       		popq	%rbp
 6480              		.cfi_def_cfa_offset 8
 6481              	.LVL550:
1456:fltk-1.3.4-1/png/pngwrite.c **** 
 6482              		.loc 1 1456 1 view .LVU1884
 6483 0048 C3       		ret
 6484              	.LVL551:
 6485 0049 0F1F8000 		.p2align 4,,10
 6485      000000
 6486              		.p2align 3
 6487              	.L700:
 6488              		.cfi_restore 3
 6489              		.cfi_restore 6
1456:fltk-1.3.4-1/png/pngwrite.c **** 
 6490              		.loc 1 1456 1 view .LVU1885
 6491 0050 C3       		ret
 6492              		.cfi_endproc
 6493              	.LFE66:
 6495              		.section	.text.png_set_text_compression_level,"ax",@progbits
 6496              		.p2align 4
 6497              		.globl	png_set_text_compression_level
 6499              	png_set_text_compression_level:
 6500              	.LVL552:
 6501              	.LFB67:
1462:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_level");
 6502              		.loc 1 1462 1 is_stmt 1 view -0
 6503              		.cfi_startproc
1462:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_level");
 6504              		.loc 1 1462 1 is_stmt 0 view .LVU1887
 6505 0000 F30F1EFA 		endbr64
1463:fltk-1.3.4-1/png/pngwrite.c **** 
 6506              		.loc 1 1463 4 is_stmt 1 view .LVU1888
1465:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6507              		.loc 1 1465 4 view .LVU1889
1465:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6508              		.loc 1 1465 7 is_stmt 0 view .LVU1890
 6509 0004 4885FF   		testq	%rdi, %rdi
 6510 0007 7406     		je	.L704
1468:fltk-1.3.4-1/png/pngwrite.c **** }
 6511              		.loc 1 1468 4 is_stmt 1 view .LVU1891
1468:fltk-1.3.4-1/png/pngwrite.c **** }
 6512              		.loc 1 1468 29 is_stmt 0 view .LVU1892
 6513 0009 89B7D001 		movl	%esi, 464(%rdi)
 6513      0000
 6514              	.L704:
1469:fltk-1.3.4-1/png/pngwrite.c **** 
 6515              		.loc 1 1469 1 view .LVU1893
 6516 000f C3       		ret
 6517              		.cfi_endproc
 6518              	.LFE67:
 6520              		.section	.text.png_set_text_compression_mem_level,"ax",@progbits
 6521              		.p2align 4
 6522              		.globl	png_set_text_compression_mem_level
 6524              	png_set_text_compression_mem_level:
 6525              	.LVL553:
 6526              	.LFB68:
1473:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_mem_level");
 6527              		.loc 1 1473 1 is_stmt 1 view -0
 6528              		.cfi_startproc
1473:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_mem_level");
 6529              		.loc 1 1473 1 is_stmt 0 view .LVU1895
 6530 0000 F30F1EFA 		endbr64
1474:fltk-1.3.4-1/png/pngwrite.c **** 
 6531              		.loc 1 1474 4 is_stmt 1 view .LVU1896
1476:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6532              		.loc 1 1476 4 view .LVU1897
1476:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6533              		.loc 1 1476 7 is_stmt 0 view .LVU1898
 6534 0004 4885FF   		testq	%rdi, %rdi
 6535 0007 7406     		je	.L709
1479:fltk-1.3.4-1/png/pngwrite.c **** }
 6536              		.loc 1 1479 4 is_stmt 1 view .LVU1899
1479:fltk-1.3.4-1/png/pngwrite.c **** }
 6537              		.loc 1 1479 33 is_stmt 0 view .LVU1900
 6538 0009 89B7DC01 		movl	%esi, 476(%rdi)
 6538      0000
 6539              	.L709:
1480:fltk-1.3.4-1/png/pngwrite.c **** 
 6540              		.loc 1 1480 1 view .LVU1901
 6541 000f C3       		ret
 6542              		.cfi_endproc
 6543              	.LFE68:
 6545              		.section	.text.png_set_text_compression_strategy,"ax",@progbits
 6546              		.p2align 4
 6547              		.globl	png_set_text_compression_strategy
 6549              	png_set_text_compression_strategy:
 6550              	.LVL554:
 6551              	.LFB69:
1484:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_strategy");
 6552              		.loc 1 1484 1 is_stmt 1 view -0
 6553              		.cfi_startproc
1484:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_strategy");
 6554              		.loc 1 1484 1 is_stmt 0 view .LVU1903
 6555 0000 F30F1EFA 		endbr64
1485:fltk-1.3.4-1/png/pngwrite.c **** 
 6556              		.loc 1 1485 4 is_stmt 1 view .LVU1904
1487:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6557              		.loc 1 1487 4 view .LVU1905
1487:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6558              		.loc 1 1487 7 is_stmt 0 view .LVU1906
 6559 0004 4885FF   		testq	%rdi, %rdi
 6560 0007 7406     		je	.L714
1490:fltk-1.3.4-1/png/pngwrite.c **** }
 6561              		.loc 1 1490 4 is_stmt 1 view .LVU1907
1490:fltk-1.3.4-1/png/pngwrite.c **** }
 6562              		.loc 1 1490 32 is_stmt 0 view .LVU1908
 6563 0009 89B7E001 		movl	%esi, 480(%rdi)
 6563      0000
 6564              	.L714:
1491:fltk-1.3.4-1/png/pngwrite.c **** 
 6565              		.loc 1 1491 1 view .LVU1909
 6566 000f C3       		ret
 6567              		.cfi_endproc
 6568              	.LFE69:
 6570              		.section	.text.png_set_text_compression_window_bits,"ax",@progbits
 6571              		.p2align 4
 6572              		.globl	png_set_text_compression_window_bits
 6574              	png_set_text_compression_window_bits:
 6575              	.LVL555:
 6576              	.LFB70:
1498:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6577              		.loc 1 1498 1 is_stmt 1 view -0
 6578              		.cfi_startproc
1498:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6579              		.loc 1 1498 1 is_stmt 0 view .LVU1911
 6580 0000 F30F1EFA 		endbr64
1499:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6581              		.loc 1 1499 4 is_stmt 1 view .LVU1912
1499:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6582              		.loc 1 1499 7 is_stmt 0 view .LVU1913
 6583 0004 4885FF   		testq	%rdi, %rdi
 6584 0007 7457     		je	.L727
1498:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6585              		.loc 1 1498 1 view .LVU1914
 6586 0009 53       		pushq	%rbx
 6587              		.cfi_def_cfa_offset 16
 6588              		.cfi_offset 3, -16
 6589 000a 4889FB   		movq	%rdi, %rbx
1502:fltk-1.3.4-1/png/pngwrite.c ****    {
 6590              		.loc 1 1502 4 is_stmt 1 view .LVU1915
1502:fltk-1.3.4-1/png/pngwrite.c ****    {
 6591              		.loc 1 1502 7 is_stmt 0 view .LVU1916
 6592 000d 83FE0F   		cmpl	$15, %esi
 6593 0010 7F0E     		jg	.L730
1508:fltk-1.3.4-1/png/pngwrite.c ****    {
 6594              		.loc 1 1508 9 is_stmt 1 view .LVU1917
1508:fltk-1.3.4-1/png/pngwrite.c ****    {
 6595              		.loc 1 1508 12 is_stmt 0 view .LVU1918
 6596 0012 83FE07   		cmpl	$7, %esi
 6597 0015 7E29     		jle	.L731
1514:fltk-1.3.4-1/png/pngwrite.c **** }
 6598              		.loc 1 1514 4 is_stmt 1 view .LVU1919
1514:fltk-1.3.4-1/png/pngwrite.c **** }
 6599              		.loc 1 1514 35 is_stmt 0 view .LVU1920
 6600 0017 89B3D801 		movl	%esi, 472(%rbx)
 6600      0000
1515:fltk-1.3.4-1/png/pngwrite.c **** 
 6601              		.loc 1 1515 1 view .LVU1921
 6602 001d 5B       		popq	%rbx
 6603              		.cfi_remember_state
 6604              		.cfi_def_cfa_offset 8
 6605 001e C3       		ret
 6606              	.LVL556:
 6607 001f 90       		.p2align 4,,10
 6608              		.p2align 3
 6609              	.L730:
 6610              		.cfi_restore_state
1504:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 15;
 6611              		.loc 1 1504 7 is_stmt 1 view .LVU1922
 6612 0020 488D3500 		leaq	.LC22(%rip), %rsi
 6612      000000
 6613              	.LVL557:
1504:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 15;
 6614              		.loc 1 1504 7 is_stmt 0 view .LVU1923
 6615 0027 E8000000 		call	png_warning@PLT
 6615      00
 6616              	.LVL558:
1505:fltk-1.3.4-1/png/pngwrite.c ****    }
 6617              		.loc 1 1505 7 is_stmt 1 view .LVU1924
1505:fltk-1.3.4-1/png/pngwrite.c ****    }
 6618              		.loc 1 1505 19 is_stmt 0 view .LVU1925
 6619 002c BE0F0000 		movl	$15, %esi
 6619      00
 6620              	.LVL559:
1514:fltk-1.3.4-1/png/pngwrite.c **** }
 6621              		.loc 1 1514 4 is_stmt 1 view .LVU1926
1514:fltk-1.3.4-1/png/pngwrite.c **** }
 6622              		.loc 1 1514 35 is_stmt 0 view .LVU1927
 6623 0031 89B3D801 		movl	%esi, 472(%rbx)
 6623      0000
1515:fltk-1.3.4-1/png/pngwrite.c **** 
 6624              		.loc 1 1515 1 view .LVU1928
 6625 0037 5B       		popq	%rbx
 6626              		.cfi_remember_state
 6627              		.cfi_def_cfa_offset 8
 6628              	.LVL560:
1515:fltk-1.3.4-1/png/pngwrite.c **** 
 6629              		.loc 1 1515 1 view .LVU1929
 6630 0038 C3       		ret
 6631              	.LVL561:
 6632 0039 0F1F8000 		.p2align 4,,10
 6632      000000
 6633              		.p2align 3
 6634              	.L731:
 6635              		.cfi_restore_state
1510:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 8;
 6636              		.loc 1 1510 7 is_stmt 1 view .LVU1930
 6637 0040 488D3500 		leaq	.LC23(%rip), %rsi
 6637      000000
 6638              	.LVL562:
1510:fltk-1.3.4-1/png/pngwrite.c ****       window_bits = 8;
 6639              		.loc 1 1510 7 is_stmt 0 view .LVU1931
 6640 0047 E8000000 		call	png_warning@PLT
 6640      00
 6641              	.LVL563:
1511:fltk-1.3.4-1/png/pngwrite.c ****    }
 6642              		.loc 1 1511 7 is_stmt 1 view .LVU1932
1511:fltk-1.3.4-1/png/pngwrite.c ****    }
 6643              		.loc 1 1511 19 is_stmt 0 view .LVU1933
 6644 004c BE080000 		movl	$8, %esi
 6644      00
 6645              	.LVL564:
1514:fltk-1.3.4-1/png/pngwrite.c **** }
 6646              		.loc 1 1514 4 is_stmt 1 view .LVU1934
1514:fltk-1.3.4-1/png/pngwrite.c **** }
 6647              		.loc 1 1514 35 is_stmt 0 view .LVU1935
 6648 0051 89B3D801 		movl	%esi, 472(%rbx)
 6648      0000
1515:fltk-1.3.4-1/png/pngwrite.c **** 
 6649              		.loc 1 1515 1 view .LVU1936
 6650 0057 5B       		popq	%rbx
 6651              		.cfi_def_cfa_offset 8
 6652              	.LVL565:
1515:fltk-1.3.4-1/png/pngwrite.c **** 
 6653              		.loc 1 1515 1 view .LVU1937
 6654 0058 C3       		ret
 6655              	.LVL566:
 6656 0059 0F1F8000 		.p2align 4,,10
 6656      000000
 6657              		.p2align 3
 6658              	.L727:
 6659              		.cfi_restore 3
1515:fltk-1.3.4-1/png/pngwrite.c **** 
 6660              		.loc 1 1515 1 view .LVU1938
 6661 0060 C3       		ret
 6662              		.cfi_endproc
 6663              	.LFE70:
 6665              		.section	.text.png_set_text_compression_method,"ax",@progbits
 6666              		.p2align 4
 6667              		.globl	png_set_text_compression_method
 6669              	png_set_text_compression_method:
 6670              	.LVL567:
 6671              	.LFB71:
1519:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_method");
 6672              		.loc 1 1519 1 is_stmt 1 view -0
 6673              		.cfi_startproc
1519:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_method");
 6674              		.loc 1 1519 1 is_stmt 0 view .LVU1940
 6675 0000 F30F1EFA 		endbr64
1520:fltk-1.3.4-1/png/pngwrite.c **** 
 6676              		.loc 1 1520 4 is_stmt 1 view .LVU1941
1522:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6677              		.loc 1 1522 4 view .LVU1942
1522:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6678              		.loc 1 1522 7 is_stmt 0 view .LVU1943
 6679 0004 4885FF   		testq	%rdi, %rdi
 6680 0007 7447     		je	.L742
1519:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_method");
 6681              		.loc 1 1519 1 view .LVU1944
 6682 0009 55       		pushq	%rbp
 6683              		.cfi_def_cfa_offset 16
 6684              		.cfi_offset 6, -16
 6685 000a 89F5     		movl	%esi, %ebp
1525:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression method 8 is supported by PNG");
 6686              		.loc 1 1525 4 is_stmt 1 view .LVU1945
1519:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_text_compression_method");
 6687              		.loc 1 1519 1 is_stmt 0 view .LVU1946
 6688 000c 53       		pushq	%rbx
 6689              		.cfi_def_cfa_offset 24
 6690              		.cfi_offset 3, -24
 6691 000d 4889FB   		movq	%rdi, %rbx
 6692 0010 4883EC08 		subq	$8, %rsp
 6693              		.cfi_def_cfa_offset 32
1525:fltk-1.3.4-1/png/pngwrite.c ****       png_warning(png_ptr, "Only compression method 8 is supported by PNG");
 6694              		.loc 1 1525 7 view .LVU1947
 6695 0014 83FE08   		cmpl	$8, %esi
 6696 0017 7517     		jne	.L745
1528:fltk-1.3.4-1/png/pngwrite.c **** }
 6697              		.loc 1 1528 4 is_stmt 1 view .LVU1948
1528:fltk-1.3.4-1/png/pngwrite.c **** }
 6698              		.loc 1 1528 30 is_stmt 0 view .LVU1949
 6699 0019 89ABD401 		movl	%ebp, 468(%rbx)
 6699      0000
1529:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_CUSTOMIZE_ZTXT_COMPRESSION */
 6700              		.loc 1 1529 1 view .LVU1950
 6701 001f 4883C408 		addq	$8, %rsp
 6702              		.cfi_remember_state
 6703              		.cfi_def_cfa_offset 24
 6704 0023 5B       		popq	%rbx
 6705              		.cfi_def_cfa_offset 16
 6706 0024 5D       		popq	%rbp
 6707              		.cfi_def_cfa_offset 8
 6708 0025 C3       		ret
 6709              	.LVL568:
 6710 0026 662E0F1F 		.p2align 4,,10
 6710      84000000 
 6710      0000
 6711              		.p2align 3
 6712              	.L745:
 6713              		.cfi_restore_state
1526:fltk-1.3.4-1/png/pngwrite.c **** 
 6714              		.loc 1 1526 7 is_stmt 1 view .LVU1951
 6715 0030 488D3500 		leaq	.LC24(%rip), %rsi
 6715      000000
 6716              	.LVL569:
1526:fltk-1.3.4-1/png/pngwrite.c **** 
 6717              		.loc 1 1526 7 is_stmt 0 view .LVU1952
 6718 0037 E8000000 		call	png_warning@PLT
 6718      00
 6719              	.LVL570:
1528:fltk-1.3.4-1/png/pngwrite.c **** }
 6720              		.loc 1 1528 4 is_stmt 1 view .LVU1953
1528:fltk-1.3.4-1/png/pngwrite.c **** }
 6721              		.loc 1 1528 30 is_stmt 0 view .LVU1954
 6722 003c 89ABD401 		movl	%ebp, 468(%rbx)
 6722      0000
1529:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_CUSTOMIZE_ZTXT_COMPRESSION */
 6723              		.loc 1 1529 1 view .LVU1955
 6724 0042 4883C408 		addq	$8, %rsp
 6725              		.cfi_def_cfa_offset 24
 6726 0046 5B       		popq	%rbx
 6727              		.cfi_def_cfa_offset 16
 6728              	.LVL571:
1529:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_CUSTOMIZE_ZTXT_COMPRESSION */
 6729              		.loc 1 1529 1 view .LVU1956
 6730 0047 5D       		popq	%rbp
 6731              		.cfi_def_cfa_offset 8
 6732              	.LVL572:
1529:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_CUSTOMIZE_ZTXT_COMPRESSION */
 6733              		.loc 1 1529 1 view .LVU1957
 6734 0048 C3       		ret
 6735              	.LVL573:
 6736 0049 0F1F8000 		.p2align 4,,10
 6736      000000
 6737              		.p2align 3
 6738              	.L742:
 6739              		.cfi_restore 3
 6740              		.cfi_restore 6
1529:fltk-1.3.4-1/png/pngwrite.c **** #endif /* WRITE_CUSTOMIZE_ZTXT_COMPRESSION */
 6741              		.loc 1 1529 1 view .LVU1958
 6742 0050 C3       		ret
 6743              		.cfi_endproc
 6744              	.LFE71:
 6746              		.section	.text.png_set_write_status_fn,"ax",@progbits
 6747              		.p2align 4
 6748              		.globl	png_set_write_status_fn
 6750              	png_set_write_status_fn:
 6751              	.LVL574:
 6752              	.LFB72:
1535:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6753              		.loc 1 1535 1 is_stmt 1 view -0
 6754              		.cfi_startproc
1535:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL)
 6755              		.loc 1 1535 1 is_stmt 0 view .LVU1960
 6756 0000 F30F1EFA 		endbr64
1536:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6757              		.loc 1 1536 4 is_stmt 1 view .LVU1961
1536:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6758              		.loc 1 1536 7 is_stmt 0 view .LVU1962
 6759 0004 4885FF   		testq	%rdi, %rdi
 6760 0007 7407     		je	.L746
1539:fltk-1.3.4-1/png/pngwrite.c **** }
 6761              		.loc 1 1539 4 is_stmt 1 view .LVU1963
1539:fltk-1.3.4-1/png/pngwrite.c **** }
 6762              		.loc 1 1539 26 is_stmt 0 view .LVU1964
 6763 0009 4889B718 		movq	%rsi, 792(%rdi)
 6763      030000
 6764              	.L746:
1540:fltk-1.3.4-1/png/pngwrite.c **** 
 6765              		.loc 1 1540 1 view .LVU1965
 6766 0010 C3       		ret
 6767              		.cfi_endproc
 6768              	.LFE72:
 6770              		.section	.text.png_set_write_user_transform_fn,"ax",@progbits
 6771              		.p2align 4
 6772              		.globl	png_set_write_user_transform_fn
 6774              	png_set_write_user_transform_fn:
 6775              	.LVL575:
 6776              	.LFB73:
1546:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_write_user_transform_fn");
 6777              		.loc 1 1546 1 is_stmt 1 view -0
 6778              		.cfi_startproc
1546:fltk-1.3.4-1/png/pngwrite.c ****    png_debug(1, "in png_set_write_user_transform_fn");
 6779              		.loc 1 1546 1 is_stmt 0 view .LVU1967
 6780 0000 F30F1EFA 		endbr64
1547:fltk-1.3.4-1/png/pngwrite.c **** 
 6781              		.loc 1 1547 4 is_stmt 1 view .LVU1968
1549:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6782              		.loc 1 1549 4 view .LVU1969
1549:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6783              		.loc 1 1549 7 is_stmt 0 view .LVU1970
 6784 0004 4885FF   		testq	%rdi, %rdi
 6785 0007 7411     		je	.L751
1552:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->write_user_transform_fn = write_user_transform_fn;
 6786              		.loc 1 1552 4 is_stmt 1 view .LVU1971
1552:fltk-1.3.4-1/png/pngwrite.c ****    png_ptr->write_user_transform_fn = write_user_transform_fn;
 6787              		.loc 1 1552 29 is_stmt 0 view .LVU1972
 6788 0009 818F3401 		orl	$1048576, 308(%rdi)
 6788      00000000 
 6788      1000
1553:fltk-1.3.4-1/png/pngwrite.c **** }
 6789              		.loc 1 1553 4 is_stmt 1 view .LVU1973
1553:fltk-1.3.4-1/png/pngwrite.c **** }
 6790              		.loc 1 1553 37 is_stmt 0 view .LVU1974
 6791 0013 4889B718 		movq	%rsi, 280(%rdi)
 6791      010000
 6792              	.L751:
1554:fltk-1.3.4-1/png/pngwrite.c **** #endif
 6793              		.loc 1 1554 1 view .LVU1975
 6794 001a C3       		ret
 6795              		.cfi_endproc
 6796              	.LFE73:
 6798              		.section	.rodata.png_write_png.str1.8,"aMS",@progbits,1
 6799              		.align 8
 6800              	.LC25:
 6801 0000 6E6F2072 		.string	"no rows for png_write_image to write"
 6801      6F777320 
 6801      666F7220 
 6801      706E675F 
 6801      77726974 
 6802 0025 000000   		.align 8
 6803              	.LC26:
 6804 0028 504E475F 		.string	"PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported"
 6804      5452414E 
 6804      53464F52 
 6804      4D5F5354 
 6804      5249505F 
 6805              		.section	.text.png_write_png,"ax",@progbits
 6806              		.p2align 4
 6807              		.globl	png_write_png
 6809              	png_write_png:
 6810              	.LVL576:
 6811              	.LFB74:
1562:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL || info_ptr == NULL)
 6812              		.loc 1 1562 1 is_stmt 1 view -0
 6813              		.cfi_startproc
1562:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL || info_ptr == NULL)
 6814              		.loc 1 1562 1 is_stmt 0 view .LVU1977
 6815 0000 F30F1EFA 		endbr64
1563:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6816              		.loc 1 1563 4 is_stmt 1 view .LVU1978
1563:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6817              		.loc 1 1563 7 is_stmt 0 view .LVU1979
 6818 0004 4885FF   		testq	%rdi, %rdi
 6819 0007 0F847B01 		je	.L807
 6819      0000
1562:fltk-1.3.4-1/png/pngwrite.c ****    if (png_ptr == NULL || info_ptr == NULL)
 6820              		.loc 1 1562 1 view .LVU1980
 6821 000d 4154     		pushq	%r12
 6822              		.cfi_def_cfa_offset 16
 6823              		.cfi_offset 12, -16
 6824 000f 4989F4   		movq	%rsi, %r12
 6825 0012 55       		pushq	%rbp
 6826              		.cfi_def_cfa_offset 24
 6827              		.cfi_offset 6, -24
 6828 0013 53       		pushq	%rbx
 6829              		.cfi_def_cfa_offset 32
 6830              		.cfi_offset 3, -32
1563:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6831              		.loc 1 1563 7 view .LVU1981
 6832 0014 4885F6   		testq	%rsi, %rsi
 6833 0017 0F84C300 		je	.L756
 6833      0000
 6834 001d 4889FD   		movq	%rdi, %rbp
1566:fltk-1.3.4-1/png/pngwrite.c ****    {
 6835              		.loc 1 1566 4 is_stmt 1 view .LVU1982
1566:fltk-1.3.4-1/png/pngwrite.c ****    {
 6836              		.loc 1 1566 7 is_stmt 0 view .LVU1983
 6837 0020 F6460980 		testb	$-128, 9(%rsi)
 6838 0024 0F84A600 		je	.L810
 6838      0000
 6839 002a 89D3     		movl	%edx, %ebx
1573:fltk-1.3.4-1/png/pngwrite.c **** 
 6840              		.loc 1 1573 4 is_stmt 1 view .LVU1984
 6841 002c E8000000 		call	png_write_info
 6841      00
 6842              	.LVL577:
1578:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_SUPPORTED
 6843              		.loc 1 1578 4 view .LVU1985
1578:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_SUPPORTED
 6844              		.loc 1 1578 7 is_stmt 0 view .LVU1986
 6845 0031 F6C320   		testb	$32, %bl
 6846 0034 0F85FE00 		jne	.L811
 6846      0000
 6847              	.L759:
1588:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SHIFT_SUPPORTED
 6848              		.loc 1 1588 4 is_stmt 1 view .LVU1987
1588:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SHIFT_SUPPORTED
 6849              		.loc 1 1588 7 is_stmt 0 view .LVU1988
 6850 003a F6C340   		testb	$64, %bl
 6851 003d 740C     		je	.L760
1590:fltk-1.3.4-1/png/pngwrite.c ****          png_set_shift(png_ptr, &info_ptr->sig_bit);
 6852              		.loc 1 1590 7 is_stmt 1 view .LVU1989
1590:fltk-1.3.4-1/png/pngwrite.c ****          png_set_shift(png_ptr, &info_ptr->sig_bit);
 6853              		.loc 1 1590 10 is_stmt 0 view .LVU1990
 6854 003f 41F64424 		testb	$2, 8(%r12)
 6854      0802
 6855 0045 0F85B500 		jne	.L812
 6855      0000
 6856              	.L760:
1597:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_PACK_SUPPORTED
 6857              		.loc 1 1597 4 is_stmt 1 view .LVU1991
1597:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_PACK_SUPPORTED
 6858              		.loc 1 1597 7 is_stmt 0 view .LVU1992
 6859 004b F6C304   		testb	$4, %bl
 6860 004e 0F85D400 		jne	.L813
 6860      0000
 6861              	.L761:
1605:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SWAP_ALPHA_SUPPORTED
 6862              		.loc 1 1605 4 is_stmt 1 view .LVU1993
1605:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SWAP_ALPHA_SUPPORTED
 6863              		.loc 1 1605 7 is_stmt 0 view .LVU1994
 6864 0054 F6C701   		testb	$1, %bh
 6865 0057 0F85BB00 		jne	.L814
 6865      0000
 6866              	.L762:
1616:fltk-1.3.4-1/png/pngwrite.c ****       PNG_TRANSFORM_STRIP_FILLER_BEFORE)) != 0)
 6867              		.loc 1 1616 4 is_stmt 1 view .LVU1995
1616:fltk-1.3.4-1/png/pngwrite.c ****       PNG_TRANSFORM_STRIP_FILLER_BEFORE)) != 0)
 6868              		.loc 1 1616 7 is_stmt 0 view .LVU1996
 6869 005d F6C718   		testb	$24, %bh
 6870 0060 7423     		je	.L763
1620:fltk-1.3.4-1/png/pngwrite.c ****       {
 6871              		.loc 1 1620 7 is_stmt 1 view .LVU1997
 6872 0062 89D8     		movl	%ebx, %eax
 6873 0064 25000800 		andl	$2048, %eax
 6873      00
1620:fltk-1.3.4-1/png/pngwrite.c ****       {
 6874              		.loc 1 1620 10 is_stmt 0 view .LVU1998
 6875 0069 F6C710   		testb	$16, %bh
 6876 006c 747A     		je	.L764
1622:fltk-1.3.4-1/png/pngwrite.c ****             png_app_error(png_ptr,
 6877              		.loc 1 1622 10 is_stmt 1 view .LVU1999
1622:fltk-1.3.4-1/png/pngwrite.c ****             png_app_error(png_ptr,
 6878              		.loc 1 1622 13 is_stmt 0 view .LVU2000
 6879 006e 85C0     		testl	%eax, %eax
 6880 0070 0F851A01 		jne	.L815
 6880      0000
 6881              	.L765:
1627:fltk-1.3.4-1/png/pngwrite.c ****       }
 6882              		.loc 1 1627 10 is_stmt 1 view .LVU2001
 6883 0076 BA010000 		movl	$1, %edx
 6883      00
 6884 007b 31F6     		xorl	%esi, %esi
 6885 007d 4889EF   		movq	%rbp, %rdi
 6886 0080 E8000000 		call	png_set_filler@PLT
 6886      00
 6887              	.LVL578:
 6888              	.L763:
1638:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_BGR_SUPPORTED
 6889              		.loc 1 1638 4 view .LVU2002
1638:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_BGR_SUPPORTED
 6890              		.loc 1 1638 7 is_stmt 0 view .LVU2003
 6891 0085 F6C380   		testb	$-128, %bl
 6892 0088 0F85EA00 		jne	.L816
 6892      0000
 6893              	.L766:
1646:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SWAP_SUPPORTED
 6894              		.loc 1 1646 4 is_stmt 1 view .LVU2004
1646:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_SWAP_SUPPORTED
 6895              		.loc 1 1646 7 is_stmt 0 view .LVU2005
 6896 008e F6C702   		testb	$2, %bh
 6897 0091 0F85D100 		jne	.L817
 6897      0000
 6898              	.L767:
1654:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_PACKSWAP_SUPPORTED
 6899              		.loc 1 1654 4 is_stmt 1 view .LVU2006
1654:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_PACKSWAP_SUPPORTED
 6900              		.loc 1 1654 7 is_stmt 0 view .LVU2007
 6901 0097 F6C308   		testb	$8, %bl
 6902 009a 0F85B800 		jne	.L818
 6902      0000
 6903              	.L768:
1662:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_ALPHA_SUPPORTED
 6904              		.loc 1 1662 4 is_stmt 1 view .LVU2008
1662:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_ALPHA_SUPPORTED
 6905              		.loc 1 1662 7 is_stmt 0 view .LVU2009
 6906 00a0 80E704   		andb	$4, %bh
 6907              	.LVL579:
1662:fltk-1.3.4-1/png/pngwrite.c **** #ifdef PNG_WRITE_INVERT_ALPHA_SUPPORTED
 6908              		.loc 1 1662 7 view .LVU2010
 6909 00a3 0F859F00 		jne	.L819
 6909      0000
 6910              	.L769:
1672:fltk-1.3.4-1/png/pngwrite.c **** 
 6911              		.loc 1 1672 4 is_stmt 1 view .LVU2011
 6912              	.LVL580:
 6913              	.LBB296:
 6914              	.LBI296:
 584:fltk-1.3.4-1/png/pngwrite.c **** {
 6915              		.loc 1 584 1 view .LVU2012
 6916              	.LBB297:
 586:fltk-1.3.4-1/png/pngwrite.c ****    int pass, num_pass; /* pass variables */
 6917              		.loc 1 586 4 view .LVU2013
 587:fltk-1.3.4-1/png/pngwrite.c ****    png_bytepp rp; /* points to current row */
 6918              		.loc 1 587 4 view .LVU2014
 588:fltk-1.3.4-1/png/pngwrite.c **** 
 6919              		.loc 1 588 4 view .LVU2015
 590:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6920              		.loc 1 590 4 view .LVU2016
 6921 00a9 498BB424 		movq	336(%r12), %rsi
 6921      50010000 
 6922 00b1 4889EF   		movq	%rbp, %rdi
 6923 00b4 E8000000 		call	png_write_image.part.0
 6923      00
 6924              	.LVL581:
 590:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6925              		.loc 1 590 4 is_stmt 0 view .LVU2017
 6926              	.LBE297:
 6927              	.LBE296:
1675:fltk-1.3.4-1/png/pngwrite.c **** 
 6928              		.loc 1 1675 4 is_stmt 1 view .LVU2018
1678:fltk-1.3.4-1/png/pngwrite.c **** #endif
 6929              		.loc 1 1678 1 is_stmt 0 view .LVU2019
 6930 00b9 5B       		popq	%rbx
 6931              		.cfi_remember_state
 6932              		.cfi_restore 3
 6933              		.cfi_def_cfa_offset 24
1675:fltk-1.3.4-1/png/pngwrite.c **** 
 6934              		.loc 1 1675 4 view .LVU2020
 6935 00ba 4C89E6   		movq	%r12, %rsi
 6936 00bd 4889EF   		movq	%rbp, %rdi
1678:fltk-1.3.4-1/png/pngwrite.c **** #endif
 6937              		.loc 1 1678 1 view .LVU2021
 6938 00c0 5D       		popq	%rbp
 6939              		.cfi_restore 6
 6940              		.cfi_def_cfa_offset 16
 6941              	.LVL582:
1678:fltk-1.3.4-1/png/pngwrite.c **** #endif
 6942              		.loc 1 1678 1 view .LVU2022
 6943 00c1 415C     		popq	%r12
 6944              		.cfi_restore 12
 6945              		.cfi_def_cfa_offset 8
 6946              	.LVL583:
1675:fltk-1.3.4-1/png/pngwrite.c **** 
 6947              		.loc 1 1675 4 view .LVU2023
 6948 00c3 E9000000 		jmp	png_write_end
 6948      00
 6949              	.LVL584:
 6950 00c8 0F1F8400 		.p2align 4,,10
 6950      00000000 
 6951              		.p2align 3
 6952              	.L810:
 6953              		.cfi_restore_state
1568:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6954              		.loc 1 1568 7 is_stmt 1 view .LVU2024
1678:fltk-1.3.4-1/png/pngwrite.c **** #endif
 6955              		.loc 1 1678 1 is_stmt 0 view .LVU2025
 6956 00d0 5B       		popq	%rbx
 6957              		.cfi_remember_state
 6958              		.cfi_restore 3
 6959              		.cfi_def_cfa_offset 24
1568:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6960              		.loc 1 1568 7 view .LVU2026
 6961 00d1 488D3500 		leaq	.LC25(%rip), %rsi
 6961      000000
 6962              	.LVL585:
1678:fltk-1.3.4-1/png/pngwrite.c **** #endif
 6963              		.loc 1 1678 1 view .LVU2027
 6964 00d8 5D       		popq	%rbp
 6965              		.cfi_restore 6
 6966              		.cfi_def_cfa_offset 16
 6967 00d9 415C     		popq	%r12
 6968              		.cfi_restore 12
 6969              		.cfi_def_cfa_offset 8
 6970              	.LVL586:
1568:fltk-1.3.4-1/png/pngwrite.c ****       return;
 6971              		.loc 1 1568 7 view .LVU2028
 6972 00db E9000000 		jmp	png_app_error@PLT
 6972      00
 6973              	.LVL587:
 6974              		.p2align 4,,10
 6975              		.p2align 3
 6976              	.L756:
 6977              		.cfi_restore_state
1678:fltk-1.3.4-1/png/pngwrite.c **** #endif
 6978              		.loc 1 1678 1 view .LVU2029
 6979 00e0 5B       		popq	%rbx
 6980              		.cfi_remember_state
 6981              		.cfi_def_cfa_offset 24
 6982 00e1 5D       		popq	%rbp
 6983              		.cfi_def_cfa_offset 16
 6984 00e2 415C     		popq	%r12
 6985              		.cfi_def_cfa_offset 8
 6986 00e4 C3       		ret
 6987              	.LVL588:
 6988              		.p2align 4,,10
 6989 00e5 0F1F00   		.p2align 3
 6990              	.L764:
 6991              		.cfi_restore_state
1630:fltk-1.3.4-1/png/pngwrite.c ****          png_set_filler(png_ptr, 0, PNG_FILLER_BEFORE);
 6992              		.loc 1 1630 12 is_stmt 1 view .LVU2030
1630:fltk-1.3.4-1/png/pngwrite.c ****          png_set_filler(png_ptr, 0, PNG_FILLER_BEFORE);
 6993              		.loc 1 1630 15 is_stmt 0 view .LVU2031
 6994 00e8 85C0     		testl	%eax, %eax
 6995 00ea 7499     		je	.L763
1631:fltk-1.3.4-1/png/pngwrite.c **** #else
 6996              		.loc 1 1631 10 is_stmt 1 view .LVU2032
 6997 00ec 31D2     		xorl	%edx, %edx
 6998 00ee 31F6     		xorl	%esi, %esi
 6999 00f0 4889EF   		movq	%rbp, %rdi
 7000 00f3 E8000000 		call	png_set_filler@PLT
 7000      00
 7001              	.LVL589:
 7002 00f8 EB8B     		jmp	.L763
 7003 00fa 660F1F44 		.p2align 4,,10
 7003      0000
 7004              		.p2align 3
 7005              	.L812:
1591:fltk-1.3.4-1/png/pngwrite.c **** #else
 7006              		.loc 1 1591 10 view .LVU2033
1591:fltk-1.3.4-1/png/pngwrite.c **** #else
 7007              		.loc 1 1591 33 is_stmt 0 view .LVU2034
 7008 0100 498DB424 		leaq	176(%r12), %rsi
 7008      B0000000 
1591:fltk-1.3.4-1/png/pngwrite.c **** #else
 7009              		.loc 1 1591 10 view .LVU2035
 7010 0108 4889EF   		movq	%rbp, %rdi
 7011 010b E8000000 		call	png_set_shift@PLT
 7011      00
 7012              	.LVL590:
 7013 0110 E936FFFF 		jmp	.L760
 7013      FF
 7014              		.p2align 4,,10
 7015 0115 0F1F00   		.p2align 3
 7016              	.L814:
1607:fltk-1.3.4-1/png/pngwrite.c **** #else
 7017              		.loc 1 1607 7 is_stmt 1 view .LVU2036
 7018 0118 4889EF   		movq	%rbp, %rdi
 7019 011b E8000000 		call	png_set_swap_alpha@PLT
 7019      00
 7020              	.LVL591:
 7021 0120 E938FFFF 		jmp	.L762
 7021      FF
 7022              		.p2align 4,,10
 7023 0125 0F1F00   		.p2align 3
 7024              	.L813:
1599:fltk-1.3.4-1/png/pngwrite.c **** #else
 7025              		.loc 1 1599 7 view .LVU2037
 7026 0128 4889EF   		movq	%rbp, %rdi
 7027 012b E8000000 		call	png_set_packing@PLT
 7027      00
 7028              	.LVL592:
 7029 0130 E91FFFFF 		jmp	.L761
 7029      FF
 7030              		.p2align 4,,10
 7031 0135 0F1F00   		.p2align 3
 7032              	.L811:
1580:fltk-1.3.4-1/png/pngwrite.c **** #else
 7033              		.loc 1 1580 7 view .LVU2038
 7034 0138 4889EF   		movq	%rbp, %rdi
 7035 013b E8000000 		call	png_set_invert_mono@PLT
 7035      00
 7036              	.LVL593:
 7037 0140 E9F5FEFF 		jmp	.L759
 7037      FF
 7038              	.LVL594:
 7039              		.p2align 4,,10
 7040 0145 0F1F00   		.p2align 3
 7041              	.L819:
1664:fltk-1.3.4-1/png/pngwrite.c **** #else
 7042              		.loc 1 1664 7 view .LVU2039
 7043 0148 4889EF   		movq	%rbp, %rdi
 7044 014b E8000000 		call	png_set_invert_alpha@PLT
 7044      00
 7045              	.LVL595:
 7046 0150 E954FFFF 		jmp	.L769
 7046      FF
 7047              	.LVL596:
 7048              		.p2align 4,,10
 7049 0155 0F1F00   		.p2align 3
 7050              	.L818:
1656:fltk-1.3.4-1/png/pngwrite.c **** #else
 7051              		.loc 1 1656 7 view .LVU2040
 7052 0158 4889EF   		movq	%rbp, %rdi
 7053 015b E8000000 		call	png_set_packswap@PLT
 7053      00
 7054              	.LVL597:
 7055 0160 E93BFFFF 		jmp	.L768
 7055      FF
 7056              		.p2align 4,,10
 7057 0165 0F1F00   		.p2align 3
 7058              	.L817:
1648:fltk-1.3.4-1/png/pngwrite.c **** #else
 7059              		.loc 1 1648 7 view .LVU2041
 7060 0168 4889EF   		movq	%rbp, %rdi
 7061 016b E8000000 		call	png_set_swap@PLT
 7061      00
 7062              	.LVL598:
 7063 0170 E922FFFF 		jmp	.L767
 7063      FF
 7064              		.p2align 4,,10
 7065 0175 0F1F00   		.p2align 3
 7066              	.L816:
1640:fltk-1.3.4-1/png/pngwrite.c **** #else
 7067              		.loc 1 1640 7 view .LVU2042
 7068 0178 4889EF   		movq	%rbp, %rdi
 7069 017b E8000000 		call	png_set_bgr@PLT
 7069      00
 7070              	.LVL599:
 7071 0180 E909FFFF 		jmp	.L766
 7071      FF
 7072              	.LVL600:
 7073              		.p2align 4,,10
 7074 0185 0F1F00   		.p2align 3
 7075              	.L807:
 7076              		.cfi_def_cfa_offset 8
 7077              		.cfi_restore 3
 7078              		.cfi_restore 6
 7079              		.cfi_restore 12
1640:fltk-1.3.4-1/png/pngwrite.c **** #else
 7080              		.loc 1 1640 7 is_stmt 0 view .LVU2043
 7081 0188 C3       		ret
 7082              	.LVL601:
 7083 0189 0F1F8000 		.p2align 4,,10
 7083      000000
 7084              		.p2align 3
 7085              	.L815:
 7086              		.cfi_def_cfa_offset 32
 7087              		.cfi_offset 3, -32
 7088              		.cfi_offset 6, -24
 7089              		.cfi_offset 12, -16
1623:fltk-1.3.4-1/png/pngwrite.c ****                "PNG_TRANSFORM_STRIP_FILLER: BEFORE+AFTER not supported");
 7090              		.loc 1 1623 13 is_stmt 1 view .LVU2044
 7091 0190 488D3500 		leaq	.LC26(%rip), %rsi
 7091      000000
 7092 0197 4889EF   		movq	%rbp, %rdi
 7093 019a E8000000 		call	png_app_error@PLT
 7093      00
 7094              	.LVL602:
 7095 019f E9D2FEFF 		jmp	.L765
 7095      FF
 7096              		.cfi_endproc
 7097              	.LFE74:
 7099              		.section	.rodata.png_image_write_to_stdio.str1.1,"aMS",@progbits,1
 7100              	.LC27:
 7101 0000 312E362E 		.string	"1.6.16"
 7101      313600
 7102              		.section	.rodata.png_image_write_to_stdio.str1.8,"aMS",@progbits,1
 7103              		.align 8
 7104              	.LC28:
 7105 0000 706E675F 		.string	"png_image_write_: out of memory"
 7105      696D6167 
 7105      655F7772 
 7105      6974655F 
 7105      3A206F75 
 7106              		.align 8
 7107              	.LC29:
 7108 0020 706E675F 		.string	"png_image_write_to_stdio: invalid argument"
 7108      696D6167 
 7108      655F7772 
 7108      6974655F 
 7108      746F5F73 
 7109 004b 00000000 		.align 8
 7109      00
 7110              	.LC30:
 7111 0050 706E675F 		.string	"png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION"
 7111      696D6167 
 7111      655F7772 
 7111      6974655F 
 7111      746F5F73 
 7112              		.section	.text.png_image_write_to_stdio,"ax",@progbits
 7113              		.p2align 4
 7114              		.globl	png_image_write_to_stdio
 7116              	png_image_write_to_stdio:
 7117              	.LVL603:
 7118              	.LFB81:
2337:fltk-1.3.4-1/png/pngwrite.c **** 
2338:fltk-1.3.4-1/png/pngwrite.c **** int PNGAPI
2339:fltk-1.3.4-1/png/pngwrite.c **** png_image_write_to_stdio(png_imagep image, FILE *file, int convert_to_8bit,
2340:fltk-1.3.4-1/png/pngwrite.c ****    const void *buffer, png_int_32 row_stride, const void *colormap)
2341:fltk-1.3.4-1/png/pngwrite.c **** {
 7119              		.loc 1 2341 1 view -0
 7120              		.cfi_startproc
 7121              		.loc 1 2341 1 is_stmt 0 view .LVU2046
 7122 0000 F30F1EFA 		endbr64
 7123 0004 4157     		pushq	%r15
 7124              		.cfi_def_cfa_offset 16
 7125              		.cfi_offset 15, -16
 7126 0006 4156     		pushq	%r14
 7127              		.cfi_def_cfa_offset 24
 7128              		.cfi_offset 14, -24
 7129 0008 4155     		pushq	%r13
 7130              		.cfi_def_cfa_offset 32
 7131              		.cfi_offset 13, -32
 7132 000a 4154     		pushq	%r12
 7133              		.cfi_def_cfa_offset 40
 7134              		.cfi_offset 12, -40
 7135 000c 55       		pushq	%rbp
 7136              		.cfi_def_cfa_offset 48
 7137              		.cfi_offset 6, -48
 7138 000d 53       		pushq	%rbx
 7139              		.cfi_def_cfa_offset 56
 7140              		.cfi_offset 3, -56
 7141 000e 4883EC78 		subq	$120, %rsp
 7142              		.cfi_def_cfa_offset 176
 7143              		.loc 1 2341 1 view .LVU2047
 7144 0012 64488B04 		movq	%fs:40, %rax
 7144      25280000 
 7144      00
 7145 001b 48894424 		movq	%rax, 104(%rsp)
 7145      68
 7146 0020 31C0     		xorl	%eax, %eax
2342:fltk-1.3.4-1/png/pngwrite.c ****    /* Write the image to the given (FILE*). */
2343:fltk-1.3.4-1/png/pngwrite.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 7147              		.loc 1 2343 4 is_stmt 1 view .LVU2048
 7148              		.loc 1 2343 7 is_stmt 0 view .LVU2049
 7149 0022 4885FF   		testq	%rdi, %rdi
 7150 0025 0F844501 		je	.L829
 7150      0000
 7151              		.loc 1 2343 22 discriminator 1 view .LVU2050
 7152 002b 837F0801 		cmpl	$1, 8(%rdi)
 7153 002f 4889FD   		movq	%rdi, %rbp
 7154 0032 7434     		je	.L841
2344:fltk-1.3.4-1/png/pngwrite.c ****    {
2345:fltk-1.3.4-1/png/pngwrite.c ****       if (file != NULL)
2346:fltk-1.3.4-1/png/pngwrite.c ****       {
2347:fltk-1.3.4-1/png/pngwrite.c ****          if (png_image_write_init(image) != 0)
2348:fltk-1.3.4-1/png/pngwrite.c ****          {
2349:fltk-1.3.4-1/png/pngwrite.c ****             png_image_write_control display;
2350:fltk-1.3.4-1/png/pngwrite.c ****             int result;
2351:fltk-1.3.4-1/png/pngwrite.c **** 
2352:fltk-1.3.4-1/png/pngwrite.c ****             /* This is slightly evil, but png_init_io doesn't do anything other
2353:fltk-1.3.4-1/png/pngwrite.c ****              * than this and we haven't changed the standard IO functions so
2354:fltk-1.3.4-1/png/pngwrite.c ****              * this saves a 'safe' function.
2355:fltk-1.3.4-1/png/pngwrite.c ****              */
2356:fltk-1.3.4-1/png/pngwrite.c ****             image->opaque->png_ptr->io_ptr = file;
2357:fltk-1.3.4-1/png/pngwrite.c **** 
2358:fltk-1.3.4-1/png/pngwrite.c ****             memset(&display, 0, (sizeof display));
2359:fltk-1.3.4-1/png/pngwrite.c ****             display.image = image;
2360:fltk-1.3.4-1/png/pngwrite.c ****             display.buffer = buffer;
2361:fltk-1.3.4-1/png/pngwrite.c ****             display.row_stride = row_stride;
2362:fltk-1.3.4-1/png/pngwrite.c ****             display.colormap = colormap;
2363:fltk-1.3.4-1/png/pngwrite.c ****             display.convert_to_8bit = convert_to_8bit;
2364:fltk-1.3.4-1/png/pngwrite.c **** 
2365:fltk-1.3.4-1/png/pngwrite.c ****             result = png_safe_execute(image, png_image_write_main, &display);
2366:fltk-1.3.4-1/png/pngwrite.c ****             png_image_free(image);
2367:fltk-1.3.4-1/png/pngwrite.c ****             return result;
2368:fltk-1.3.4-1/png/pngwrite.c ****          }
2369:fltk-1.3.4-1/png/pngwrite.c **** 
2370:fltk-1.3.4-1/png/pngwrite.c ****          else
2371:fltk-1.3.4-1/png/pngwrite.c ****             return 0;
2372:fltk-1.3.4-1/png/pngwrite.c ****       }
2373:fltk-1.3.4-1/png/pngwrite.c **** 
2374:fltk-1.3.4-1/png/pngwrite.c ****       else
2375:fltk-1.3.4-1/png/pngwrite.c ****          return png_image_error(image,
2376:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_stdio: invalid argument");
2377:fltk-1.3.4-1/png/pngwrite.c ****    }
2378:fltk-1.3.4-1/png/pngwrite.c **** 
2379:fltk-1.3.4-1/png/pngwrite.c ****    else if (image != NULL)
 7155              		.loc 1 2379 9 is_stmt 1 view .LVU2051
2380:fltk-1.3.4-1/png/pngwrite.c ****       return png_image_error(image,
 7156              		.loc 1 2380 7 view .LVU2052
 7157              		.loc 1 2380 14 is_stmt 0 view .LVU2053
 7158 0034 488D3500 		leaq	.LC30(%rip), %rsi
 7158      000000
 7159              	.LVL604:
 7160              		.loc 1 2380 14 view .LVU2054
 7161 003b E8000000 		call	png_image_error@PLT
 7161      00
 7162              	.LVL605:
 7163              	.L820:
2381:fltk-1.3.4-1/png/pngwrite.c ****          "png_image_write_to_stdio: incorrect PNG_IMAGE_VERSION");
2382:fltk-1.3.4-1/png/pngwrite.c **** 
2383:fltk-1.3.4-1/png/pngwrite.c ****    else
2384:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
2385:fltk-1.3.4-1/png/pngwrite.c **** }
 7164              		.loc 1 2385 1 view .LVU2055
 7165 0040 488B5C24 		movq	104(%rsp), %rbx
 7165      68
 7166 0045 6448331C 		xorq	%fs:40, %rbx
 7166      25280000 
 7166      00
 7167 004e 0F853D01 		jne	.L842
 7167      0000
 7168 0054 4883C478 		addq	$120, %rsp
 7169              		.cfi_remember_state
 7170              		.cfi_def_cfa_offset 56
 7171 0058 5B       		popq	%rbx
 7172              		.cfi_def_cfa_offset 48
 7173 0059 5D       		popq	%rbp
 7174              		.cfi_def_cfa_offset 40
 7175 005a 415C     		popq	%r12
 7176              		.cfi_def_cfa_offset 32
 7177 005c 415D     		popq	%r13
 7178              		.cfi_def_cfa_offset 24
 7179 005e 415E     		popq	%r14
 7180              		.cfi_def_cfa_offset 16
 7181 0060 415F     		popq	%r15
 7182              		.cfi_def_cfa_offset 8
 7183 0062 C3       		ret
 7184              	.LVL606:
 7185              		.p2align 4,,10
 7186 0063 0F1F4400 		.p2align 3
 7186      00
 7187              	.L841:
 7188              		.cfi_restore_state
 7189              		.loc 1 2385 1 view .LVU2056
 7190 0068 4889F3   		movq	%rsi, %rbx
2345:fltk-1.3.4-1/png/pngwrite.c ****       {
 7191              		.loc 1 2345 7 is_stmt 1 view .LVU2057
2345:fltk-1.3.4-1/png/pngwrite.c ****       {
 7192              		.loc 1 2345 10 is_stmt 0 view .LVU2058
 7193 006b 4885F6   		testq	%rsi, %rsi
 7194 006e 0F840C01 		je	.L824
 7194      0000
 7195              	.LVL607:
 7196              	.LBB311:
 7197              	.LBB312:
 7198              	.LBB313:
 7199              	.LBB314:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7200              		.loc 1 488 11 view .LVU2059
 7201 0074 4883EC08 		subq	$8, %rsp
 7202              		.cfi_def_cfa_offset 184
 7203 0078 4189D4   		movl	%edx, %r12d
 7204 007b 4989CF   		movq	%rcx, %r15
 7205 007e 4889FE   		movq	%rdi, %rsi
 7206 0081 6A00     		pushq	$0
 7207              		.cfi_def_cfa_offset 192
 7208 0083 488B1500 		movq	png_safe_error@GOTPCREL(%rip), %rdx
 7208      000000
 7209              	.LVL608:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7210              		.loc 1 488 11 view .LVU2060
 7211 008a 4589C6   		movl	%r8d, %r14d
 7212 008d 4D89CD   		movq	%r9, %r13
 7213              	.LBE314:
 7214              	.LBE313:
 7215              	.LBE312:
 7216              	.LBE311:
2347:fltk-1.3.4-1/png/pngwrite.c ****          {
 7217              		.loc 1 2347 10 is_stmt 1 view .LVU2061
 7218              	.LVL609:
 7219              	.LBB329:
 7220              	.LBI311:
1686:fltk-1.3.4-1/png/pngwrite.c **** {
 7221              		.loc 1 1686 1 view .LVU2062
 7222              	.LBB327:
1688:fltk-1.3.4-1/png/pngwrite.c ****           png_safe_error, png_safe_warning);
 7223              		.loc 1 1688 4 view .LVU2063
 7224              	.LBB316:
 7225              	.LBI313:
 480:fltk-1.3.4-1/png/pngwrite.c **** png_create_write_struct,(png_const_charp user_png_ver, png_voidp error_ptr,
 7226              		.loc 1 480 1 view .LVU2064
 7227              	.LBB315:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7228              		.loc 1 488 4 view .LVU2065
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7229              		.loc 1 488 11 is_stmt 0 view .LVU2066
 7230 0090 488B0D00 		movq	png_safe_warning@GOTPCREL(%rip), %rcx
 7230      000000
 7231              	.LVL610:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7232              		.loc 1 488 11 view .LVU2067
 7233 0097 488D3D00 		leaq	.LC27(%rip), %rdi
 7233      000000
 7234              	.LVL611:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7235              		.loc 1 488 11 view .LVU2068
 7236 009e 4531C9   		xorl	%r9d, %r9d
 7237              	.LVL612:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7238              		.loc 1 488 11 view .LVU2069
 7239 00a1 4531C0   		xorl	%r8d, %r8d
 7240              	.LVL613:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7241              		.loc 1 488 11 view .LVU2070
 7242 00a4 E8000000 		call	png_create_write_struct_2
 7242      00
 7243              	.LVL614:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7244              		.loc 1 488 11 view .LVU2071
 7245 00a9 4889C7   		movq	%rax, %rdi
 7246              	.LVL615:
 488:fltk-1.3.4-1/png/pngwrite.c ****        warn_fn, NULL, NULL, NULL);
 7247              		.loc 1 488 11 view .LVU2072
 7248              	.LBE315:
 7249              	.LBE316:
1688:fltk-1.3.4-1/png/pngwrite.c ****           png_safe_error, png_safe_warning);
 7250              		.loc 1 1688 16 view .LVU2073
 7251 00ac 48894424 		movq	%rax, 40(%rsp)
 7251      28
1691:fltk-1.3.4-1/png/pngwrite.c ****    {
 7252              		.loc 1 1691 4 is_stmt 1 view .LVU2074
1691:fltk-1.3.4-1/png/pngwrite.c ****    {
 7253              		.loc 1 1691 7 is_stmt 0 view .LVU2075
 7254 00b1 58       		popq	%rax
 7255              		.cfi_def_cfa_offset 184
 7256 00b2 5A       		popq	%rdx
 7257              		.cfi_def_cfa_offset 176
 7258 00b3 4885FF   		testq	%rdi, %rdi
 7259 00b6 0F84F500 		je	.L825
 7259      0000
 7260              	.LBB317:
1693:fltk-1.3.4-1/png/pngwrite.c **** 
 7261              		.loc 1 1693 7 is_stmt 1 view .LVU2076
1693:fltk-1.3.4-1/png/pngwrite.c **** 
 7262              		.loc 1 1693 28 is_stmt 0 view .LVU2077
 7263 00bc E8000000 		call	png_create_info_struct@PLT
 7263      00
 7264              	.LVL616:
1693:fltk-1.3.4-1/png/pngwrite.c **** 
 7265              		.loc 1 1693 17 view .LVU2078
 7266 00c1 48894424 		movq	%rax, 32(%rsp)
 7266      20
1695:fltk-1.3.4-1/png/pngwrite.c ****       {
 7267              		.loc 1 1695 7 is_stmt 1 view .LVU2079
1695:fltk-1.3.4-1/png/pngwrite.c ****       {
 7268              		.loc 1 1695 10 is_stmt 0 view .LVU2080
 7269 00c6 4885C0   		testq	%rax, %rax
 7270 00c9 0F84D600 		je	.L826
 7270      0000
 7271              	.LBB318:
1697:fltk-1.3.4-1/png/pngwrite.c ****             png_malloc_warn(png_ptr, (sizeof *control)));
 7272              		.loc 1 1697 10 is_stmt 1 view .LVU2081
1697:fltk-1.3.4-1/png/pngwrite.c ****             png_malloc_warn(png_ptr, (sizeof *control)));
 7273              		.loc 1 1697 33 is_stmt 0 view .LVU2082
 7274 00cf 488B7C24 		movq	24(%rsp), %rdi
 7274      18
 7275 00d4 BE300000 		movl	$48, %esi
 7275      00
 7276 00d9 E8000000 		call	png_malloc_warn@PLT
 7276      00
 7277              	.LVL617:
1700:fltk-1.3.4-1/png/pngwrite.c ****          {
 7278              		.loc 1 1700 10 is_stmt 1 view .LVU2083
1700:fltk-1.3.4-1/png/pngwrite.c ****          {
 7279              		.loc 1 1700 13 is_stmt 0 view .LVU2084
 7280 00de 4885C0   		testq	%rax, %rax
 7281 00e1 0F84AF00 		je	.L827
 7281      0000
1702:fltk-1.3.4-1/png/pngwrite.c **** 
 7282              		.loc 1 1702 13 is_stmt 1 view .LVU2085
 7283              	.LVL618:
 7284              	.LBB319:
 7285              	.LBI319:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 7286              		.loc 2 59 1 view .LVU2086
 7287              	.LBB320:
 7288              		.loc 2 71 3 view .LVU2087
 7289              		.loc 2 71 10 is_stmt 0 view .LVU2088
 7290 00e7 660FEFC0 		pxor	%xmm0, %xmm0
 7291              	.LBE320:
 7292              	.LBE319:
1704:fltk-1.3.4-1/png/pngwrite.c ****             control->info_ptr = info_ptr;
 7293              		.loc 1 1704 30 view .LVU2089
 7294 00eb 488B5424 		movq	24(%rsp), %rdx
 7294      18
1705:fltk-1.3.4-1/png/pngwrite.c ****             control->for_write = 1;
 7295              		.loc 1 1705 31 view .LVU2090
 7296 00f0 488B4C24 		movq	32(%rsp), %rcx
 7296      20
1708:fltk-1.3.4-1/png/pngwrite.c ****             return 1;
 7297              		.loc 1 1708 27 view .LVU2091
 7298 00f5 48894500 		movq	%rax, 0(%rbp)
 7299              	.LBB323:
 7300              	.LBB321:
 7301              		.loc 2 71 10 view .LVU2092
 7302 00f9 0F114020 		movups	%xmm0, 32(%rax)
 7303              	.LVL619:
 7304              		.loc 2 71 10 view .LVU2093
 7305              	.LBE321:
 7306              	.LBE323:
1704:fltk-1.3.4-1/png/pngwrite.c ****             control->info_ptr = info_ptr;
 7307              		.loc 1 1704 13 is_stmt 1 view .LVU2094
1706:fltk-1.3.4-1/png/pngwrite.c **** 
 7308              		.loc 1 1706 32 is_stmt 0 view .LVU2095
 7309 00fd 80482801 		orb	$1, 40(%rax)
1704:fltk-1.3.4-1/png/pngwrite.c ****             control->info_ptr = info_ptr;
 7310              		.loc 1 1704 30 view .LVU2096
 7311 0101 488910   		movq	%rdx, (%rax)
1705:fltk-1.3.4-1/png/pngwrite.c ****             control->for_write = 1;
 7312              		.loc 1 1705 13 is_stmt 1 view .LVU2097
1705:fltk-1.3.4-1/png/pngwrite.c ****             control->for_write = 1;
 7313              		.loc 1 1705 31 is_stmt 0 view .LVU2098
 7314 0104 48894808 		movq	%rcx, 8(%rax)
1706:fltk-1.3.4-1/png/pngwrite.c **** 
 7315              		.loc 1 1706 13 is_stmt 1 view .LVU2099
1708:fltk-1.3.4-1/png/pngwrite.c ****             return 1;
 7316              		.loc 1 1708 13 view .LVU2100
1709:fltk-1.3.4-1/png/pngwrite.c ****          }
 7317              		.loc 1 1709 13 view .LVU2101
 7318              	.LVL620:
 7319              	.LBB324:
 7320              	.LBB322:
 7321              		.loc 2 71 10 is_stmt 0 view .LVU2102
 7322 0108 0F114010 		movups	%xmm0, 16(%rax)
 7323              	.L828:
 7324              	.LVL621:
 7325              		.loc 2 71 10 view .LVU2103
 7326              	.LBE322:
 7327              	.LBE324:
 7328              	.LBE318:
 7329              	.LBE317:
 7330              	.LBE327:
 7331              	.LBE329:
 7332              	.LBB330:
 7333              	.LBI330:
2339:fltk-1.3.4-1/png/pngwrite.c ****    const void *buffer, png_int_32 row_stride, const void *colormap)
 7334              		.loc 1 2339 1 is_stmt 1 view .LVU2104
 7335              	.LBB331:
2349:fltk-1.3.4-1/png/pngwrite.c ****             int result;
 7336              		.loc 1 2349 13 view .LVU2105
2350:fltk-1.3.4-1/png/pngwrite.c **** 
 7337              		.loc 1 2350 13 view .LVU2106
2356:fltk-1.3.4-1/png/pngwrite.c **** 
 7338              		.loc 1 2356 13 view .LVU2107
2356:fltk-1.3.4-1/png/pngwrite.c **** 
 7339              		.loc 1 2356 44 is_stmt 0 view .LVU2108
 7340 010c 48899A08 		movq	%rbx, 264(%rdx)
 7340      010000
2358:fltk-1.3.4-1/png/pngwrite.c ****             display.image = image;
 7341              		.loc 1 2358 13 is_stmt 1 view .LVU2109
 7342              	.LVL622:
 7343              	.LBB332:
 7344              	.LBI332:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 7345              		.loc 2 59 1 view .LVU2110
 7346              	.LBB333:
 7347              		.loc 2 71 3 view .LVU2111
 7348              		.loc 2 71 10 is_stmt 0 view .LVU2112
 7349 0113 660FEFC0 		pxor	%xmm0, %xmm0
 7350 0117 488D5424 		leaq	32(%rsp), %rdx
 7350      20
 7351              	.LVL623:
 7352              		.loc 2 71 10 view .LVU2113
 7353              	.LBE333:
 7354              	.LBE332:
2365:fltk-1.3.4-1/png/pngwrite.c ****             png_image_free(image);
 7355              		.loc 1 2365 22 view .LVU2114
 7356 011c 4889EF   		movq	%rbp, %rdi
 7357 011f 488D3500 		leaq	png_image_write_main(%rip), %rsi
 7357      000000
 7358              	.LBB335:
 7359              	.LBB334:
 7360              		.loc 2 71 10 view .LVU2115
 7361 0126 0F294424 		movaps	%xmm0, 48(%rsp)
 7361      30
 7362 012b 0F294424 		movaps	%xmm0, 64(%rsp)
 7362      40
 7363 0130 0F294424 		movaps	%xmm0, 80(%rsp)
 7363      50
 7364              	.LVL624:
 7365              		.loc 2 71 10 view .LVU2116
 7366              	.LBE334:
 7367              	.LBE335:
2359:fltk-1.3.4-1/png/pngwrite.c ****             display.buffer = buffer;
 7368              		.loc 1 2359 13 is_stmt 1 view .LVU2117
2359:fltk-1.3.4-1/png/pngwrite.c ****             display.buffer = buffer;
 7369              		.loc 1 2359 27 is_stmt 0 view .LVU2118
 7370 0135 48896C24 		movq	%rbp, 32(%rsp)
 7370      20
2360:fltk-1.3.4-1/png/pngwrite.c ****             display.row_stride = row_stride;
 7371              		.loc 1 2360 13 is_stmt 1 view .LVU2119
2360:fltk-1.3.4-1/png/pngwrite.c ****             display.row_stride = row_stride;
 7372              		.loc 1 2360 28 is_stmt 0 view .LVU2120
 7373 013a 4C897C24 		movq	%r15, 40(%rsp)
 7373      28
2361:fltk-1.3.4-1/png/pngwrite.c ****             display.colormap = colormap;
 7374              		.loc 1 2361 13 is_stmt 1 view .LVU2121
2361:fltk-1.3.4-1/png/pngwrite.c ****             display.colormap = colormap;
 7375              		.loc 1 2361 32 is_stmt 0 view .LVU2122
 7376 013f 44897424 		movl	%r14d, 48(%rsp)
 7376      30
2362:fltk-1.3.4-1/png/pngwrite.c ****             display.convert_to_8bit = convert_to_8bit;
 7377              		.loc 1 2362 13 is_stmt 1 view .LVU2123
2362:fltk-1.3.4-1/png/pngwrite.c ****             display.convert_to_8bit = convert_to_8bit;
 7378              		.loc 1 2362 30 is_stmt 0 view .LVU2124
 7379 0144 4C896C24 		movq	%r13, 56(%rsp)
 7379      38
2363:fltk-1.3.4-1/png/pngwrite.c **** 
 7380              		.loc 1 2363 13 is_stmt 1 view .LVU2125
2363:fltk-1.3.4-1/png/pngwrite.c **** 
 7381              		.loc 1 2363 37 is_stmt 0 view .LVU2126
 7382 0149 44896424 		movl	%r12d, 64(%rsp)
 7382      40
2365:fltk-1.3.4-1/png/pngwrite.c ****             png_image_free(image);
 7383              		.loc 1 2365 13 is_stmt 1 view .LVU2127
2365:fltk-1.3.4-1/png/pngwrite.c ****             png_image_free(image);
 7384              		.loc 1 2365 22 is_stmt 0 view .LVU2128
 7385 014e E8000000 		call	png_safe_execute@PLT
 7385      00
 7386              	.LVL625:
2366:fltk-1.3.4-1/png/pngwrite.c ****             return result;
 7387              		.loc 1 2366 13 view .LVU2129
 7388 0153 4889EF   		movq	%rbp, %rdi
2365:fltk-1.3.4-1/png/pngwrite.c ****             png_image_free(image);
 7389              		.loc 1 2365 22 view .LVU2130
 7390 0156 8944240C 		movl	%eax, 12(%rsp)
 7391              	.LVL626:
2366:fltk-1.3.4-1/png/pngwrite.c ****             return result;
 7392              		.loc 1 2366 13 is_stmt 1 view .LVU2131
 7393 015a E8000000 		call	png_image_free@PLT
 7393      00
 7394              	.LVL627:
2367:fltk-1.3.4-1/png/pngwrite.c ****          }
 7395              		.loc 1 2367 13 view .LVU2132
2367:fltk-1.3.4-1/png/pngwrite.c ****          }
 7396              		.loc 1 2367 13 is_stmt 0 view .LVU2133
 7397 015f 8B44240C 		movl	12(%rsp), %eax
 7398 0163 E9D8FEFF 		jmp	.L820
 7398      FF
 7399              	.LVL628:
 7400 0168 0F1F8400 		.p2align 4,,10
 7400      00000000 
 7401              		.p2align 3
 7402              	.L829:
2367:fltk-1.3.4-1/png/pngwrite.c ****          }
 7403              		.loc 1 2367 13 view .LVU2134
 7404              	.LBE331:
 7405              	.LBE330:
2384:fltk-1.3.4-1/png/pngwrite.c **** }
 7406              		.loc 1 2384 14 view .LVU2135
 7407 0170 31C0     		xorl	%eax, %eax
 7408 0172 E9C9FEFF 		jmp	.L820
 7408      FF
 7409              	.LVL629:
 7410 0177 660F1F84 		.p2align 4,,10
 7410      00000000 
 7410      00
 7411              		.p2align 3
 7412              	.L824:
2375:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_stdio: invalid argument");
 7413              		.loc 1 2375 10 is_stmt 1 view .LVU2136
2375:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_stdio: invalid argument");
 7414              		.loc 1 2375 17 is_stmt 0 view .LVU2137
 7415 0180 488D3500 		leaq	.LC29(%rip), %rsi
 7415      000000
 7416 0187 E8000000 		call	png_image_error@PLT
 7416      00
 7417              	.LVL630:
2375:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_stdio: invalid argument");
 7418              		.loc 1 2375 17 view .LVU2138
 7419 018c E9AFFEFF 		jmp	.L820
 7419      FF
 7420              	.LVL631:
 7421              	.L842:
 7422              		.loc 1 2385 1 view .LVU2139
 7423 0191 E8000000 		call	__stack_chk_fail@PLT
 7423      00
 7424              	.LVL632:
 7425              	.L827:
 7426              	.LBB336:
 7427              	.LBB328:
 7428              	.LBB326:
 7429              	.LBB325:
1713:fltk-1.3.4-1/png/pngwrite.c ****       }
 7430              		.loc 1 1713 10 is_stmt 1 view .LVU2140
 7431 0196 488B7C24 		movq	24(%rsp), %rdi
 7431      18
 7432 019b 488D7424 		leaq	32(%rsp), %rsi
 7432      20
 7433 01a0 E8000000 		call	png_destroy_info_struct@PLT
 7433      00
 7434              	.LVL633:
 7435              	.L826:
1713:fltk-1.3.4-1/png/pngwrite.c ****       }
 7436              		.loc 1 1713 10 is_stmt 0 view .LVU2141
 7437              	.LBE325:
1716:fltk-1.3.4-1/png/pngwrite.c ****    }
 7438              		.loc 1 1716 7 is_stmt 1 view .LVU2142
 7439 01a5 488D7C24 		leaq	24(%rsp), %rdi
 7439      18
 7440 01aa 31F6     		xorl	%esi, %esi
 7441 01ac E8000000 		call	png_destroy_write_struct
 7441      00
 7442              	.LVL634:
 7443              	.L825:
 7444              	.LBE326:
1719:fltk-1.3.4-1/png/pngwrite.c **** }
 7445              		.loc 1 1719 4 view .LVU2143
1719:fltk-1.3.4-1/png/pngwrite.c **** }
 7446              		.loc 1 1719 11 is_stmt 0 view .LVU2144
 7447 01b1 488D3500 		leaq	.LC28(%rip), %rsi
 7447      000000
 7448 01b8 4889EF   		movq	%rbp, %rdi
 7449 01bb E8000000 		call	png_image_error@PLT
 7449      00
 7450              	.LVL635:
1719:fltk-1.3.4-1/png/pngwrite.c **** }
 7451              		.loc 1 1719 11 view .LVU2145
 7452              	.LBE328:
 7453              	.LBE336:
2347:fltk-1.3.4-1/png/pngwrite.c ****          {
 7454              		.loc 1 2347 13 view .LVU2146
 7455 01c0 85C0     		testl	%eax, %eax
 7456 01c2 74AC     		je	.L829
 7457 01c4 488B4500 		movq	0(%rbp), %rax
 7458 01c8 488B10   		movq	(%rax), %rdx
 7459 01cb E93CFFFF 		jmp	.L828
 7459      FF
 7460              		.cfi_endproc
 7461              	.LFE81:
 7463              		.section	.rodata.png_image_write_to_file.str1.1,"aMS",@progbits,1
 7464              	.LC31:
 7465 0000 776200   		.string	"wb"
 7466              		.section	.rodata.png_image_write_to_file.str1.8,"aMS",@progbits,1
 7467              		.align 8
 7468              	.LC32:
 7469 0000 706E675F 		.string	"png_image_write_to_file: invalid argument"
 7469      696D6167 
 7469      655F7772 
 7469      6974655F 
 7469      746F5F66 
 7470 002a 00000000 		.align 8
 7470      0000
 7471              	.LC33:
 7472 0030 706E675F 		.string	"png_image_write_to_file: incorrect PNG_IMAGE_VERSION"
 7472      696D6167 
 7472      655F7772 
 7472      6974655F 
 7472      746F5F66 
 7473              		.section	.text.png_image_write_to_file,"ax",@progbits
 7474              		.p2align 4
 7475              		.globl	png_image_write_to_file
 7477              	png_image_write_to_file:
 7478              	.LVL636:
 7479              	.LFB82:
2386:fltk-1.3.4-1/png/pngwrite.c **** 
2387:fltk-1.3.4-1/png/pngwrite.c **** int PNGAPI
2388:fltk-1.3.4-1/png/pngwrite.c **** png_image_write_to_file(png_imagep image, const char *file_name,
2389:fltk-1.3.4-1/png/pngwrite.c ****    int convert_to_8bit, const void *buffer, png_int_32 row_stride,
2390:fltk-1.3.4-1/png/pngwrite.c ****    const void *colormap)
2391:fltk-1.3.4-1/png/pngwrite.c **** {
 7480              		.loc 1 2391 1 is_stmt 1 view -0
 7481              		.cfi_startproc
 7482              		.loc 1 2391 1 is_stmt 0 view .LVU2148
 7483 0000 F30F1EFA 		endbr64
2392:fltk-1.3.4-1/png/pngwrite.c ****    /* Write the image to the named file. */
2393:fltk-1.3.4-1/png/pngwrite.c ****    if (image != NULL && image->version == PNG_IMAGE_VERSION)
 7484              		.loc 1 2393 4 is_stmt 1 view .LVU2149
2391:fltk-1.3.4-1/png/pngwrite.c ****    /* Write the image to the named file. */
 7485              		.loc 1 2391 1 is_stmt 0 view .LVU2150
 7486 0004 4156     		pushq	%r14
 7487              		.cfi_def_cfa_offset 16
 7488              		.cfi_offset 14, -16
 7489 0006 4155     		pushq	%r13
 7490              		.cfi_def_cfa_offset 24
 7491              		.cfi_offset 13, -24
 7492 0008 4154     		pushq	%r12
 7493              		.cfi_def_cfa_offset 32
 7494              		.cfi_offset 12, -32
 7495 000a 55       		pushq	%rbp
 7496              		.cfi_def_cfa_offset 40
 7497              		.cfi_offset 6, -40
 7498 000b 4883EC28 		subq	$40, %rsp
 7499              		.cfi_def_cfa_offset 80
 7500              		.loc 1 2393 7 view .LVU2151
 7501 000f 4885FF   		testq	%rdi, %rdi
 7502 0012 0F84C800 		je	.L851
 7502      0000
 7503              		.loc 1 2393 22 discriminator 1 view .LVU2152
 7504 0018 837F0801 		cmpl	$1, 8(%rdi)
 7505 001c 4889FD   		movq	%rdi, %rbp
 7506 001f 741F     		je	.L855
2394:fltk-1.3.4-1/png/pngwrite.c ****    {
2395:fltk-1.3.4-1/png/pngwrite.c ****       if (file_name != NULL)
2396:fltk-1.3.4-1/png/pngwrite.c ****       {
2397:fltk-1.3.4-1/png/pngwrite.c ****          FILE *fp = fopen(file_name, "wb");
2398:fltk-1.3.4-1/png/pngwrite.c **** 
2399:fltk-1.3.4-1/png/pngwrite.c ****          if (fp != NULL)
2400:fltk-1.3.4-1/png/pngwrite.c ****          {
2401:fltk-1.3.4-1/png/pngwrite.c ****             if (png_image_write_to_stdio(image, fp, convert_to_8bit, buffer,
2402:fltk-1.3.4-1/png/pngwrite.c ****                row_stride, colormap) != 0)
2403:fltk-1.3.4-1/png/pngwrite.c ****             {
2404:fltk-1.3.4-1/png/pngwrite.c ****                int error; /* from fflush/fclose */
2405:fltk-1.3.4-1/png/pngwrite.c **** 
2406:fltk-1.3.4-1/png/pngwrite.c ****                /* Make sure the file is flushed correctly. */
2407:fltk-1.3.4-1/png/pngwrite.c ****                if (fflush(fp) == 0 && ferror(fp) == 0)
2408:fltk-1.3.4-1/png/pngwrite.c ****                {
2409:fltk-1.3.4-1/png/pngwrite.c ****                   if (fclose(fp) == 0)
2410:fltk-1.3.4-1/png/pngwrite.c ****                      return 1;
2411:fltk-1.3.4-1/png/pngwrite.c **** 
2412:fltk-1.3.4-1/png/pngwrite.c ****                   error = errno; /* from fclose */
2413:fltk-1.3.4-1/png/pngwrite.c ****                }
2414:fltk-1.3.4-1/png/pngwrite.c **** 
2415:fltk-1.3.4-1/png/pngwrite.c ****                else
2416:fltk-1.3.4-1/png/pngwrite.c ****                {
2417:fltk-1.3.4-1/png/pngwrite.c ****                   error = errno; /* from fflush or ferror */
2418:fltk-1.3.4-1/png/pngwrite.c ****                   (void)fclose(fp);
2419:fltk-1.3.4-1/png/pngwrite.c ****                }
2420:fltk-1.3.4-1/png/pngwrite.c **** 
2421:fltk-1.3.4-1/png/pngwrite.c ****                (void)remove(file_name);
2422:fltk-1.3.4-1/png/pngwrite.c ****                /* The image has already been cleaned up; this is just used to
2423:fltk-1.3.4-1/png/pngwrite.c ****                 * set the error (because the original write succeeded).
2424:fltk-1.3.4-1/png/pngwrite.c ****                 */
2425:fltk-1.3.4-1/png/pngwrite.c ****                return png_image_error(image, strerror(error));
2426:fltk-1.3.4-1/png/pngwrite.c ****             }
2427:fltk-1.3.4-1/png/pngwrite.c **** 
2428:fltk-1.3.4-1/png/pngwrite.c ****             else
2429:fltk-1.3.4-1/png/pngwrite.c ****             {
2430:fltk-1.3.4-1/png/pngwrite.c ****                /* Clean up: just the opened file. */
2431:fltk-1.3.4-1/png/pngwrite.c ****                (void)fclose(fp);
2432:fltk-1.3.4-1/png/pngwrite.c ****                (void)remove(file_name);
2433:fltk-1.3.4-1/png/pngwrite.c ****                return 0;
2434:fltk-1.3.4-1/png/pngwrite.c ****             }
2435:fltk-1.3.4-1/png/pngwrite.c ****          }
2436:fltk-1.3.4-1/png/pngwrite.c **** 
2437:fltk-1.3.4-1/png/pngwrite.c ****          else
2438:fltk-1.3.4-1/png/pngwrite.c ****             return png_image_error(image, strerror(errno));
2439:fltk-1.3.4-1/png/pngwrite.c ****       }
2440:fltk-1.3.4-1/png/pngwrite.c **** 
2441:fltk-1.3.4-1/png/pngwrite.c ****       else
2442:fltk-1.3.4-1/png/pngwrite.c ****          return png_image_error(image,
2443:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_file: invalid argument");
2444:fltk-1.3.4-1/png/pngwrite.c ****    }
2445:fltk-1.3.4-1/png/pngwrite.c **** 
2446:fltk-1.3.4-1/png/pngwrite.c ****    else if (image != NULL)
 7507              		.loc 1 2446 9 is_stmt 1 view .LVU2153
2447:fltk-1.3.4-1/png/pngwrite.c ****       return png_image_error(image,
 7508              		.loc 1 2447 7 view .LVU2154
 7509              		.loc 1 2447 14 is_stmt 0 view .LVU2155
 7510 0021 488D3500 		leaq	.LC33(%rip), %rsi
 7510      000000
 7511              	.LVL637:
 7512              	.L854:
2448:fltk-1.3.4-1/png/pngwrite.c ****          "png_image_write_to_file: incorrect PNG_IMAGE_VERSION");
2449:fltk-1.3.4-1/png/pngwrite.c **** 
2450:fltk-1.3.4-1/png/pngwrite.c ****    else
2451:fltk-1.3.4-1/png/pngwrite.c ****       return 0;
2452:fltk-1.3.4-1/png/pngwrite.c **** }
 7513              		.loc 1 2452 1 view .LVU2156
 7514 0028 4883C428 		addq	$40, %rsp
 7515              		.cfi_remember_state
 7516              		.cfi_def_cfa_offset 40
2447:fltk-1.3.4-1/png/pngwrite.c ****       return png_image_error(image,
 7517              		.loc 1 2447 14 view .LVU2157
 7518 002c 4889EF   		movq	%rbp, %rdi
 7519              		.loc 1 2452 1 view .LVU2158
 7520 002f 5D       		popq	%rbp
 7521              		.cfi_def_cfa_offset 32
 7522              	.LVL638:
 7523              		.loc 1 2452 1 view .LVU2159
 7524 0030 415C     		popq	%r12
 7525              		.cfi_def_cfa_offset 24
 7526 0032 415D     		popq	%r13
 7527              		.cfi_def_cfa_offset 16
 7528 0034 415E     		popq	%r14
 7529              		.cfi_def_cfa_offset 8
2447:fltk-1.3.4-1/png/pngwrite.c ****       return png_image_error(image,
 7530              		.loc 1 2447 14 view .LVU2160
 7531 0036 E9000000 		jmp	png_image_error@PLT
 7531      00
 7532              	.LVL639:
 7533 003b 0F1F4400 		.p2align 4,,10
 7533      00
 7534              		.p2align 3
 7535              	.L855:
 7536              		.cfi_restore_state
2447:fltk-1.3.4-1/png/pngwrite.c ****       return png_image_error(image,
 7537              		.loc 1 2447 14 view .LVU2161
 7538 0040 4C894C24 		movq	%r9, 24(%rsp)
 7538      18
 7539 0045 4989F4   		movq	%rsi, %r12
 7540 0048 44894424 		movl	%r8d, 20(%rsp)
 7540      14
 7541 004d 48894C24 		movq	%rcx, 8(%rsp)
 7541      08
 7542 0052 89542410 		movl	%edx, 16(%rsp)
2395:fltk-1.3.4-1/png/pngwrite.c ****       {
 7543              		.loc 1 2395 7 is_stmt 1 view .LVU2162
2395:fltk-1.3.4-1/png/pngwrite.c ****       {
 7544              		.loc 1 2395 10 is_stmt 0 view .LVU2163
 7545 0056 4885F6   		testq	%rsi, %rsi
 7546 0059 0F84B100 		je	.L846
 7546      0000
 7547              	.LBB337:
2397:fltk-1.3.4-1/png/pngwrite.c **** 
 7548              		.loc 1 2397 10 is_stmt 1 view .LVU2164
2397:fltk-1.3.4-1/png/pngwrite.c **** 
 7549              		.loc 1 2397 21 is_stmt 0 view .LVU2165
 7550 005f 488D3500 		leaq	.LC31(%rip), %rsi
 7550      000000
 7551              	.LVL640:
2397:fltk-1.3.4-1/png/pngwrite.c **** 
 7552              		.loc 1 2397 21 view .LVU2166
 7553 0066 4C89E7   		movq	%r12, %rdi
 7554              	.LVL641:
2397:fltk-1.3.4-1/png/pngwrite.c **** 
 7555              		.loc 1 2397 21 view .LVU2167
 7556 0069 E8000000 		call	fopen@PLT
 7556      00
 7557              	.LVL642:
2397:fltk-1.3.4-1/png/pngwrite.c **** 
 7558              		.loc 1 2397 21 view .LVU2168
 7559 006e 4989C6   		movq	%rax, %r14
 7560              	.LVL643:
2399:fltk-1.3.4-1/png/pngwrite.c ****          {
 7561              		.loc 1 2399 10 is_stmt 1 view .LVU2169
2399:fltk-1.3.4-1/png/pngwrite.c ****          {
 7562              		.loc 1 2399 13 is_stmt 0 view .LVU2170
 7563 0071 4885C0   		testq	%rax, %rax
 7564 0074 0F84C600 		je	.L847
 7564      0000
2401:fltk-1.3.4-1/png/pngwrite.c ****                row_stride, colormap) != 0)
 7565              		.loc 1 2401 13 is_stmt 1 view .LVU2171
2401:fltk-1.3.4-1/png/pngwrite.c ****                row_stride, colormap) != 0)
 7566              		.loc 1 2401 17 is_stmt 0 view .LVU2172
 7567 007a 4C8B4C24 		movq	24(%rsp), %r9
 7567      18
 7568 007f 448B4424 		movl	20(%rsp), %r8d
 7568      14
 7569 0084 4889EF   		movq	%rbp, %rdi
 7570 0087 4889C6   		movq	%rax, %rsi
 7571 008a 488B4C24 		movq	8(%rsp), %rcx
 7571      08
 7572 008f 8B542410 		movl	16(%rsp), %edx
 7573 0093 E8000000 		call	png_image_write_to_stdio
 7573      00
 7574              	.LVL644:
 7575              	.LBB338:
2407:fltk-1.3.4-1/png/pngwrite.c ****                {
 7576              		.loc 1 2407 20 view .LVU2173
 7577 0098 4C89F7   		movq	%r14, %rdi
 7578              	.LBE338:
2401:fltk-1.3.4-1/png/pngwrite.c ****                row_stride, colormap) != 0)
 7579              		.loc 1 2401 17 view .LVU2174
 7580 009b 4189C5   		movl	%eax, %r13d
2401:fltk-1.3.4-1/png/pngwrite.c ****                row_stride, colormap) != 0)
 7581              		.loc 1 2401 16 view .LVU2175
 7582 009e 85C0     		testl	%eax, %eax
 7583 00a0 7456     		je	.L848
 7584              	.LBB339:
2404:fltk-1.3.4-1/png/pngwrite.c **** 
 7585              		.loc 1 2404 16 is_stmt 1 view .LVU2176
2407:fltk-1.3.4-1/png/pngwrite.c ****                {
 7586              		.loc 1 2407 16 view .LVU2177
2407:fltk-1.3.4-1/png/pngwrite.c ****                {
 7587              		.loc 1 2407 20 is_stmt 0 view .LVU2178
 7588 00a2 E8000000 		call	fflush@PLT
 7588      00
 7589              	.LVL645:
2407:fltk-1.3.4-1/png/pngwrite.c ****                {
 7590              		.loc 1 2407 19 view .LVU2179
 7591 00a7 85C0     		testl	%eax, %eax
 7592 00a9 750C     		jne	.L849
2407:fltk-1.3.4-1/png/pngwrite.c ****                {
 7593              		.loc 1 2407 39 discriminator 1 view .LVU2180
 7594 00ab 4C89F7   		movq	%r14, %rdi
 7595 00ae E8000000 		call	ferror@PLT
 7595      00
 7596              	.LVL646:
2407:fltk-1.3.4-1/png/pngwrite.c ****                {
 7597              		.loc 1 2407 36 discriminator 1 view .LVU2181
 7598 00b3 85C0     		testl	%eax, %eax
 7599 00b5 7469     		je	.L856
 7600              	.L849:
2417:fltk-1.3.4-1/png/pngwrite.c ****                   (void)fclose(fp);
 7601              		.loc 1 2417 19 is_stmt 1 view .LVU2182
2417:fltk-1.3.4-1/png/pngwrite.c ****                   (void)fclose(fp);
 7602              		.loc 1 2417 27 is_stmt 0 view .LVU2183
 7603 00b7 E8000000 		call	__errno_location@PLT
 7603      00
 7604              	.LVL647:
2418:fltk-1.3.4-1/png/pngwrite.c ****                }
 7605              		.loc 1 2418 25 view .LVU2184
 7606 00bc 4C89F7   		movq	%r14, %rdi
2417:fltk-1.3.4-1/png/pngwrite.c ****                   (void)fclose(fp);
 7607              		.loc 1 2417 25 view .LVU2185
 7608 00bf 448B28   		movl	(%rax), %r13d
 7609              	.LVL648:
2418:fltk-1.3.4-1/png/pngwrite.c ****                }
 7610              		.loc 1 2418 19 is_stmt 1 view .LVU2186
2418:fltk-1.3.4-1/png/pngwrite.c ****                }
 7611              		.loc 1 2418 25 is_stmt 0 view .LVU2187
 7612 00c2 E8000000 		call	fclose@PLT
 7612      00
 7613              	.LVL649:
 7614              	.L850:
2421:fltk-1.3.4-1/png/pngwrite.c ****                /* The image has already been cleaned up; this is just used to
 7615              		.loc 1 2421 16 is_stmt 1 view .LVU2188
2421:fltk-1.3.4-1/png/pngwrite.c ****                /* The image has already been cleaned up; this is just used to
 7616              		.loc 1 2421 22 is_stmt 0 view .LVU2189
 7617 00c7 4C89E7   		movq	%r12, %rdi
 7618 00ca E8000000 		call	remove@PLT
 7618      00
 7619              	.LVL650:
2425:fltk-1.3.4-1/png/pngwrite.c ****             }
 7620              		.loc 1 2425 16 is_stmt 1 view .LVU2190
2425:fltk-1.3.4-1/png/pngwrite.c ****             }
 7621              		.loc 1 2425 46 is_stmt 0 view .LVU2191
 7622 00cf 4489EF   		movl	%r13d, %edi
 7623 00d2 E8000000 		call	strerror@PLT
 7623      00
 7624              	.LVL651:
 7625 00d7 4889C6   		movq	%rax, %rsi
 7626 00da E949FFFF 		jmp	.L854
 7626      FF
 7627              	.LVL652:
 7628 00df 90       		.p2align 4,,10
 7629              		.p2align 3
 7630              	.L851:
2425:fltk-1.3.4-1/png/pngwrite.c ****             }
 7631              		.loc 1 2425 46 view .LVU2192
 7632              	.LBE339:
 7633              	.LBE337:
2451:fltk-1.3.4-1/png/pngwrite.c **** }
 7634              		.loc 1 2451 14 view .LVU2193
 7635 00e0 4531ED   		xorl	%r13d, %r13d
 7636              	.LVL653:
 7637              	.L843:
 7638              		.loc 1 2452 1 view .LVU2194
 7639 00e3 4883C428 		addq	$40, %rsp
 7640              		.cfi_remember_state
 7641              		.cfi_def_cfa_offset 40
 7642 00e7 4489E8   		movl	%r13d, %eax
 7643 00ea 5D       		popq	%rbp
 7644              		.cfi_def_cfa_offset 32
 7645 00eb 415C     		popq	%r12
 7646              		.cfi_def_cfa_offset 24
 7647 00ed 415D     		popq	%r13
 7648              		.cfi_def_cfa_offset 16
 7649 00ef 415E     		popq	%r14
 7650              		.cfi_def_cfa_offset 8
 7651 00f1 C3       		ret
 7652              	.LVL654:
 7653              		.p2align 4,,10
 7654 00f2 660F1F44 		.p2align 3
 7654      0000
 7655              	.L848:
 7656              		.cfi_restore_state
 7657              	.LBB342:
2431:fltk-1.3.4-1/png/pngwrite.c ****                (void)remove(file_name);
 7658              		.loc 1 2431 16 is_stmt 1 view .LVU2195
2431:fltk-1.3.4-1/png/pngwrite.c ****                (void)remove(file_name);
 7659              		.loc 1 2431 22 is_stmt 0 view .LVU2196
 7660 00f8 E8000000 		call	fclose@PLT
 7660      00
 7661              	.LVL655:
2432:fltk-1.3.4-1/png/pngwrite.c ****                return 0;
 7662              		.loc 1 2432 16 is_stmt 1 view .LVU2197
2432:fltk-1.3.4-1/png/pngwrite.c ****                return 0;
 7663              		.loc 1 2432 22 is_stmt 0 view .LVU2198
 7664 00fd 4C89E7   		movq	%r12, %rdi
 7665 0100 E8000000 		call	remove@PLT
 7665      00
 7666              	.LVL656:
2433:fltk-1.3.4-1/png/pngwrite.c ****             }
 7667              		.loc 1 2433 16 is_stmt 1 view .LVU2199
2433:fltk-1.3.4-1/png/pngwrite.c ****             }
 7668              		.loc 1 2433 23 is_stmt 0 view .LVU2200
 7669 0105 EBDC     		jmp	.L843
 7670              	.LVL657:
 7671 0107 660F1F84 		.p2align 4,,10
 7671      00000000 
 7671      00
 7672              		.p2align 3
 7673              	.L846:
2433:fltk-1.3.4-1/png/pngwrite.c ****             }
 7674              		.loc 1 2433 23 view .LVU2201
 7675              	.LBE342:
2442:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_file: invalid argument");
 7676              		.loc 1 2442 10 is_stmt 1 view .LVU2202
2442:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_file: invalid argument");
 7677              		.loc 1 2442 17 is_stmt 0 view .LVU2203
 7678 0110 488D3500 		leaq	.LC32(%rip), %rsi
 7678      000000
 7679              	.LVL658:
2442:fltk-1.3.4-1/png/pngwrite.c ****             "png_image_write_to_file: invalid argument");
 7680              		.loc 1 2442 17 view .LVU2204
 7681 0117 E90CFFFF 		jmp	.L854
 7681      FF
 7682              	.LVL659:
 7683 011c 0F1F4000 		.p2align 4,,10
 7684              		.p2align 3
 7685              	.L856:
 7686              	.LBB343:
 7687              	.LBB340:
2409:fltk-1.3.4-1/png/pngwrite.c ****                      return 1;
 7688              		.loc 1 2409 19 is_stmt 1 view .LVU2205
2409:fltk-1.3.4-1/png/pngwrite.c ****                      return 1;
 7689              		.loc 1 2409 23 is_stmt 0 view .LVU2206
 7690 0120 4C89F7   		movq	%r14, %rdi
 7691 0123 E8000000 		call	fclose@PLT
 7691      00
 7692              	.LVL660:
2409:fltk-1.3.4-1/png/pngwrite.c ****                      return 1;
 7693              		.loc 1 2409 22 view .LVU2207
 7694 0128 85C0     		testl	%eax, %eax
 7695 012a 742C     		je	.L852
2412:fltk-1.3.4-1/png/pngwrite.c ****                }
 7696              		.loc 1 2412 19 is_stmt 1 view .LVU2208
2412:fltk-1.3.4-1/png/pngwrite.c ****                }
 7697              		.loc 1 2412 27 is_stmt 0 view .LVU2209
 7698 012c E8000000 		call	__errno_location@PLT
 7698      00
 7699              	.LVL661:
2412:fltk-1.3.4-1/png/pngwrite.c ****                }
 7700              		.loc 1 2412 25 view .LVU2210
 7701 0131 448B28   		movl	(%rax), %r13d
 7702              	.LVL662:
2412:fltk-1.3.4-1/png/pngwrite.c ****                }
 7703              		.loc 1 2412 25 view .LVU2211
 7704 0134 EB91     		jmp	.L850
 7705              	.LVL663:
 7706 0136 662E0F1F 		.p2align 4,,10
 7706      84000000 
 7706      0000
 7707              		.p2align 3
 7708              	.L847:
2412:fltk-1.3.4-1/png/pngwrite.c ****                }
 7709              		.loc 1 2412 25 view .LVU2212
 7710              	.LBE340:
2438:fltk-1.3.4-1/png/pngwrite.c ****       }
 7711              		.loc 1 2438 13 is_stmt 1 view .LVU2213
2438:fltk-1.3.4-1/png/pngwrite.c ****       }
 7712              		.loc 1 2438 52 is_stmt 0 view .LVU2214
 7713 0140 E8000000 		call	__errno_location@PLT
 7713      00
 7714              	.LVL664:
2438:fltk-1.3.4-1/png/pngwrite.c ****       }
 7715              		.loc 1 2438 43 view .LVU2215
 7716 0145 8B38     		movl	(%rax), %edi
 7717 0147 E8000000 		call	strerror@PLT
 7717      00
 7718              	.LVL665:
 7719 014c 4889C6   		movq	%rax, %rsi
 7720 014f E9D4FEFF 		jmp	.L854
 7720      FF
 7721              		.p2align 4,,10
 7722 0154 0F1F4000 		.p2align 3
 7723              	.L852:
 7724              	.LBB341:
2410:fltk-1.3.4-1/png/pngwrite.c **** 
 7725              		.loc 1 2410 29 view .LVU2216
 7726 0158 41BD0100 		movl	$1, %r13d
 7726      0000
 7727 015e EB83     		jmp	.L843
 7728              	.LBE341:
 7729              	.LBE343:
 7730              		.cfi_endproc
 7731              	.LFE82:
 7733              		.section	.rodata.cst8,"aM",@progbits,8
 7734              		.align 8
 7735              	.LC18:
 7736 0000 00000000 		.long	0
 7737 0004 00007040 		.long	1081081856
 7738              		.align 8
 7739              	.LC19:
 7740 0008 00000000 		.long	0
 7741 000c 0000E03F 		.long	1071644672
 7742              		.align 8
 7743              	.LC20:
 7744 0010 00000000 		.long	0
 7745 0014 0000F03F 		.long	1072693248
 7746              		.align 8
 7747              	.LC21:
 7748 0018 00000000 		.long	0
 7749 001c 00002040 		.long	1075838976
 7750              		.text
 7751              	.Letext0:
 7752              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 7753              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 7754              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 7755              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 7756              		.file 7 "/usr/include/stdio.h"
 7757              		.file 8 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 7758              		.file 9 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 7759              		.file 10 "/usr/include/setjmp.h"
 7760              		.file 11 "/usr/include/x86_64-linux-gnu/bits/types/time_t.h"
 7761              		.file 12 "/usr/include/x86_64-linux-gnu/bits/types/struct_tm.h"
 7762              		.file 13 "/usr/include/time.h"
 7763              		.file 14 "fltk-1.3.4-1/png/pngconf.h"
 7764              		.file 15 "fltk-1.3.4-1/png/png.h"
 7765              		.file 16 "fltk-1.3.4-1/png/pngstruct.h"
 7766              		.file 17 "fltk-1.3.4-1/png/pnginfo.h"
 7767              		.file 18 "fltk-1.3.4-1/png/pngpriv.h"
 7768              		.file 19 "/usr/include/zconf.h"
 7769              		.file 20 "/usr/include/unistd.h"
 7770              		.file 21 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 7771              		.file 22 "/usr/include/zlib.h"
 7772              		.file 23 "/usr/include/errno.h"
 7773              		.file 24 "/usr/include/string.h"
 7774              		.file 25 "<built-in>"
 41861              		.section	.note.gnu.property,"a"
 41862              		.align 8
 41863 0000 04000000 		.long	 1f - 0f
 41864 0004 10000000 		.long	 4f - 1f
 41865 0008 05000000 		.long	 5
 41866              	0:
 41867 000c 474E5500 		.string	 "GNU"
 41868              	1:
 41869              		.align 8
 41870 0010 020000C0 		.long	 0xc0000002
 41871 0014 04000000 		.long	 3f - 2f
 41872              	2:
 41873 0018 03000000 		.long	 0x3
 41874              	3:
 41875 001c 00000000 		.align 8
 41876              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngwrite.c
     /tmp/ccWfjkcH.s:7      .text.png_reset_filter_heuristics:0000000000000000 png_reset_filter_heuristics
     /tmp/ccWfjkcH.s:104    .text.png_unpremultiply.part.0:0000000000000000 png_unpremultiply.part.0
     /tmp/ccWfjkcH.s:170    .text.write_unknown_chunks.isra.0.part.0:0000000000000000 write_unknown_chunks.isra.0.part.0
     /tmp/ccWfjkcH.s:349    .text.png_init_filter_heuristics:0000000000000000 png_init_filter_heuristics
     /tmp/ccWfjkcH.s:662    .text.png_image_set_PLTE.isra.0:0000000000000000 png_image_set_PLTE.isra.0
     /tmp/ccWfjkcH.s:1566   .text.png_write_info_before_PLTE:0000000000000000 png_write_info_before_PLTE
     /tmp/ccWfjkcH.s:1850   .text.png_write_info:0000000000000000 png_write_info
     /tmp/ccWfjkcH.s:2365   .text.png_write_end:0000000000000000 png_write_end
     /tmp/ccWfjkcH.s:2626   .text.png_convert_from_struct_tm:0000000000000000 png_convert_from_struct_tm
     /tmp/ccWfjkcH.s:2669   .text.png_convert_from_time_t:0000000000000000 png_convert_from_time_t
     /tmp/ccWfjkcH.s:2747   .text.png_create_write_struct_2:0000000000000000 png_create_write_struct_2
     /tmp/ccWfjkcH.s:2837   .text.png_create_write_struct:0000000000000000 png_create_write_struct
     /tmp/ccWfjkcH.s:2873   .text.png_write_row:0000000000000000 png_write_row
     /tmp/ccWfjkcH.s:3459   .text.png_write_rows:0000000000000000 png_write_rows
     /tmp/ccWfjkcH.s:3537   .text.png_write_image.part.0:0000000000000000 png_write_image.part.0
     /tmp/ccWfjkcH.s:3635   .text.png_write_image:0000000000000000 png_write_image
     /tmp/ccWfjkcH.s:3662   .text.png_write_image_8bit:0000000000000000 png_write_image_8bit
     /tmp/ccWfjkcH.s:4094   .text.png_write_image_16bit:0000000000000000 png_write_image_16bit
     /tmp/ccWfjkcH.s:4439   .text.png_set_flush:0000000000000000 png_set_flush
     /tmp/ccWfjkcH.s:4469   .text.png_write_flush:0000000000000000 png_write_flush
     /tmp/ccWfjkcH.s:4532   .text.png_destroy_write_struct:0000000000000000 png_destroy_write_struct
     /tmp/ccWfjkcH.s:4767   .text.png_set_filter:0000000000000000 png_set_filter
     /tmp/ccWfjkcH.s:5120   .text.png_image_write_main:0000000000000000 png_image_write_main
     /tmp/ccWfjkcH.s:5783   .text.png_set_filter_heuristics:0000000000000000 png_set_filter_heuristics
     /tmp/ccWfjkcH.s:6002   .text.png_set_filter_heuristics_fixed:0000000000000000 png_set_filter_heuristics_fixed
     /tmp/ccWfjkcH.s:6234   .text.png_set_compression_level:0000000000000000 png_set_compression_level
     /tmp/ccWfjkcH.s:6259   .text.png_set_compression_mem_level:0000000000000000 png_set_compression_mem_level
     /tmp/ccWfjkcH.s:6284   .text.png_set_compression_strategy:0000000000000000 png_set_compression_strategy
     /tmp/ccWfjkcH.s:6319   .text.png_set_compression_window_bits:0000000000000000 png_set_compression_window_bits
     /tmp/ccWfjkcH.s:6418   .text.png_set_compression_method:0000000000000000 png_set_compression_method
     /tmp/ccWfjkcH.s:6499   .text.png_set_text_compression_level:0000000000000000 png_set_text_compression_level
     /tmp/ccWfjkcH.s:6524   .text.png_set_text_compression_mem_level:0000000000000000 png_set_text_compression_mem_level
     /tmp/ccWfjkcH.s:6549   .text.png_set_text_compression_strategy:0000000000000000 png_set_text_compression_strategy
     /tmp/ccWfjkcH.s:6574   .text.png_set_text_compression_window_bits:0000000000000000 png_set_text_compression_window_bits
     /tmp/ccWfjkcH.s:6669   .text.png_set_text_compression_method:0000000000000000 png_set_text_compression_method
     /tmp/ccWfjkcH.s:6750   .text.png_set_write_status_fn:0000000000000000 png_set_write_status_fn
     /tmp/ccWfjkcH.s:6774   .text.png_set_write_user_transform_fn:0000000000000000 png_set_write_user_transform_fn
     /tmp/ccWfjkcH.s:6809   .text.png_write_png:0000000000000000 png_write_png
     /tmp/ccWfjkcH.s:7116   .text.png_image_write_to_stdio:0000000000000000 png_image_write_to_stdio
     /tmp/ccWfjkcH.s:7477   .text.png_image_write_to_file:0000000000000000 png_image_write_to_file
     /tmp/ccWfjkcH.s:165    .rodata.write_unknown_chunks.isra.0.part.0.str1.8:0000000000000000 .LC0
     /tmp/ccWfjkcH.s:344    .rodata.png_init_filter_heuristics.str1.8:0000000000000000 .LC1
     /tmp/ccWfjkcH.s:1557   .rodata.png_write_info_before_PLTE.str1.8:0000000000000000 .LC2
     /tmp/ccWfjkcH.s:1560   .rodata.png_write_info_before_PLTE.str1.8:0000000000000038 .LC3
     /tmp/ccWfjkcH.s:1844   .rodata.png_write_info.str1.8:0000000000000000 .LC4
     /tmp/ccWfjkcH.s:2359   .rodata.png_write_end.str1.8:0000000000000000 .LC6
     /tmp/ccWfjkcH.s:2355   .rodata.png_write_end.str1.1:0000000000000000 .LC5
     /tmp/ccWfjkcH.s:2867   .rodata.png_write_row.str1.8:0000000000000038 .LC8
     /tmp/ccWfjkcH.s:2864   .rodata.png_write_row.str1.8:0000000000000000 .LC7
     /tmp/ccWfjkcH.s:4089   .rodata.png_write_image_16bit.str1.8:0000000000000000 .LC9
     /tmp/ccWfjkcH.s:4749   .rodata.png_set_filter.str1.8:0000000000000000 .LC10
     /tmp/ccWfjkcH.s:4758   .rodata.png_set_filter.str1.8:0000000000000070 .LC13
     /tmp/ccWfjkcH.s:4752   .rodata.png_set_filter.str1.8:0000000000000020 .LC11
     /tmp/ccWfjkcH.s:4755   .rodata.png_set_filter.str1.8:0000000000000048 .LC12
     /tmp/ccWfjkcH.s:4761   .rodata.png_set_filter.str1.1:0000000000000000 .LC14
     /tmp/ccWfjkcH.s:5112   .rodata.png_image_write_main.str1.8:0000000000000000 .LC15
     /tmp/ccWfjkcH.s:5115   .rodata.png_image_write_main.str1.8:0000000000000028 .LC16
     /tmp/ccWfjkcH.s:7735   .rodata.cst8:0000000000000000 .LC18
     /tmp/ccWfjkcH.s:7739   .rodata.cst8:0000000000000008 .LC19
     /tmp/ccWfjkcH.s:7743   .rodata.cst8:0000000000000010 .LC20
     /tmp/ccWfjkcH.s:7747   .rodata.cst8:0000000000000018 .LC21
     /tmp/ccWfjkcH.s:6310   .rodata.png_set_compression_window_bits.str1.8:0000000000000000 .LC22
     /tmp/ccWfjkcH.s:6313   .rodata.png_set_compression_window_bits.str1.8:0000000000000038 .LC23
     /tmp/ccWfjkcH.s:6412   .rodata.png_set_compression_method.str1.8:0000000000000000 .LC24
     /tmp/ccWfjkcH.s:6800   .rodata.png_write_png.str1.8:0000000000000000 .LC25
     /tmp/ccWfjkcH.s:6803   .rodata.png_write_png.str1.8:0000000000000028 .LC26
     /tmp/ccWfjkcH.s:7110   .rodata.png_image_write_to_stdio.str1.8:0000000000000050 .LC30
     /tmp/ccWfjkcH.s:7100   .rodata.png_image_write_to_stdio.str1.1:0000000000000000 .LC27
     /tmp/ccWfjkcH.s:7107   .rodata.png_image_write_to_stdio.str1.8:0000000000000020 .LC29
     /tmp/ccWfjkcH.s:7104   .rodata.png_image_write_to_stdio.str1.8:0000000000000000 .LC28
     /tmp/ccWfjkcH.s:7471   .rodata.png_image_write_to_file.str1.8:0000000000000030 .LC33
     /tmp/ccWfjkcH.s:7464   .rodata.png_image_write_to_file.str1.1:0000000000000000 .LC31
     /tmp/ccWfjkcH.s:7468   .rodata.png_image_write_to_file.str1.8:0000000000000000 .LC32
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8
                           .group:0000000000000000 wm4.errnobase.h.3.496c97749cc421db8c7f3a88bb19be3e
                           .group:0000000000000000 wm4.errno.h.7.abb72fb4c24e8d4d14afee66cc0be915

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
png_free
png_sRGB_delta
png_sRGB_base
png_handle_as_unknown
png_write_chunk
png_warning
png_malloc
png_set_PLTE
png_set_tRNS
__stack_chk_fail
png_write_sig
png_write_IHDR
png_write_iCCP
png_write_cHRM_fixed
png_write_sBIT
png_write_gAMA_fixed
png_app_warning
png_write_sRGB
png_write_tRNS
png_write_sPLT
png_write_iTXt
png_write_zTXt
png_write_tEXt
png_write_tIME
png_write_PLTE
png_write_pHYs
png_write_sCAL_s
png_write_pCAL
png_write_oFFs
png_write_hIST
png_write_bKGD
png_error
png_write_IEND
png_benign_error
gmtime
png_create_png_struct
png_set_write_fn
png_write_start_row
memcpy
png_write_find_filter
png_do_write_interlace
png_do_write_transformations
png_do_check_palette_indexes
png_write_finish_row
png_set_interlace_handling
png_compress_IDAT
png_flush
png_destroy_info_struct
png_free_buffer_list
png_destroy_png_struct
deflateEnd
png_app_error
png_set_benign_errors
png_set_IHDR
png_set_sRGB
png_get_rowbytes
png_safe_execute
png_set_gAMA_fixed
png_set_swap
png_set_swap_alpha
png_set_bgr
png_set_packing
png_set_cHRM_fixed
png_set_filler
png_set_shift
png_set_invert_mono
png_set_invert_alpha
png_set_packswap
png_image_error
png_safe_error
png_safe_warning
png_create_info_struct
png_malloc_warn
png_image_free
fopen
fflush
ferror
__errno_location
fclose
remove
strerror
