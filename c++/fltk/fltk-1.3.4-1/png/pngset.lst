   1              		.file	"pngset.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata.check_location.str1.8,"aMS",@progbits,1
   5              		.align 8
   6              	.LC0:
   7 0000 706E675F 		.string	"png_set_unknown_chunks now expects a valid location"
   7      7365745F 
   7      756E6B6E 
   7      6F776E5F 
   7      6368756E 
   8 0034 00000000 		.align 8
   9              	.LC1:
  10 0038 696E7661 		.string	"invalid location in png_set_unknown_chunks"
  10      6C696420 
  10      6C6F6361 
  10      74696F6E 
  10      20696E20 
  11              		.section	.text.check_location,"ax",@progbits
  12              		.p2align 4
  14              	check_location:
  15              	.LVL0:
  16              	.LFB66:
  17              		.file 1 "fltk-1.3.4-1/png/pngset.c"
   1:fltk-1.3.4-1/png/pngset.c **** 
   2:fltk-1.3.4-1/png/pngset.c **** /* pngset.c - storage of image information into info struct
   3:fltk-1.3.4-1/png/pngset.c ****  *
   4:fltk-1.3.4-1/png/pngset.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngset.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngset.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngset.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngset.c ****  *
   9:fltk-1.3.4-1/png/pngset.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngset.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngset.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngset.c ****  *
  13:fltk-1.3.4-1/png/pngset.c ****  * The functions here are used during reads to store data from the file
  14:fltk-1.3.4-1/png/pngset.c ****  * into the info struct, and during writes to store application data
  15:fltk-1.3.4-1/png/pngset.c ****  * into the info struct for writing into the file.  This abstracts the
  16:fltk-1.3.4-1/png/pngset.c ****  * info struct and allows us to change the structure in the future.
  17:fltk-1.3.4-1/png/pngset.c ****  */
  18:fltk-1.3.4-1/png/pngset.c **** 
  19:fltk-1.3.4-1/png/pngset.c **** #include "pngpriv.h"
  20:fltk-1.3.4-1/png/pngset.c **** 
  21:fltk-1.3.4-1/png/pngset.c **** #if defined(PNG_READ_SUPPORTED) || defined(PNG_WRITE_SUPPORTED)
  22:fltk-1.3.4-1/png/pngset.c **** 
  23:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_bKGD_SUPPORTED
  24:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
  25:fltk-1.3.4-1/png/pngset.c **** png_set_bKGD(png_const_structrp png_ptr, png_inforp info_ptr,
  26:fltk-1.3.4-1/png/pngset.c ****     png_const_color_16p background)
  27:fltk-1.3.4-1/png/pngset.c **** {
  28:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "bKGD");
  29:fltk-1.3.4-1/png/pngset.c **** 
  30:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || background == NULL)
  31:fltk-1.3.4-1/png/pngset.c ****       return;
  32:fltk-1.3.4-1/png/pngset.c **** 
  33:fltk-1.3.4-1/png/pngset.c ****    info_ptr->background = *background;
  34:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_bKGD;
  35:fltk-1.3.4-1/png/pngset.c **** }
  36:fltk-1.3.4-1/png/pngset.c **** #endif
  37:fltk-1.3.4-1/png/pngset.c **** 
  38:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_cHRM_SUPPORTED
  39:fltk-1.3.4-1/png/pngset.c **** void PNGFAPI
  40:fltk-1.3.4-1/png/pngset.c **** png_set_cHRM_fixed(png_const_structrp png_ptr, png_inforp info_ptr,
  41:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point white_x, png_fixed_point white_y, png_fixed_point red_x,
  42:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point red_y, png_fixed_point green_x, png_fixed_point green_y,
  43:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point blue_x, png_fixed_point blue_y)
  44:fltk-1.3.4-1/png/pngset.c **** {
  45:fltk-1.3.4-1/png/pngset.c ****    png_xy xy;
  46:fltk-1.3.4-1/png/pngset.c **** 
  47:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "cHRM fixed");
  48:fltk-1.3.4-1/png/pngset.c **** 
  49:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
  50:fltk-1.3.4-1/png/pngset.c ****       return;
  51:fltk-1.3.4-1/png/pngset.c **** 
  52:fltk-1.3.4-1/png/pngset.c ****    xy.redx = red_x;
  53:fltk-1.3.4-1/png/pngset.c ****    xy.redy = red_y;
  54:fltk-1.3.4-1/png/pngset.c ****    xy.greenx = green_x;
  55:fltk-1.3.4-1/png/pngset.c ****    xy.greeny = green_y;
  56:fltk-1.3.4-1/png/pngset.c ****    xy.bluex = blue_x;
  57:fltk-1.3.4-1/png/pngset.c ****    xy.bluey = blue_y;
  58:fltk-1.3.4-1/png/pngset.c ****    xy.whitex = white_x;
  59:fltk-1.3.4-1/png/pngset.c ****    xy.whitey = white_y;
  60:fltk-1.3.4-1/png/pngset.c **** 
  61:fltk-1.3.4-1/png/pngset.c ****    if (png_colorspace_set_chromaticities(png_ptr, &info_ptr->colorspace, &xy,
  62:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
  63:fltk-1.3.4-1/png/pngset.c ****       info_ptr->colorspace.flags |= PNG_COLORSPACE_FROM_cHRM;
  64:fltk-1.3.4-1/png/pngset.c **** 
  65:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
  66:fltk-1.3.4-1/png/pngset.c **** }
  67:fltk-1.3.4-1/png/pngset.c **** 
  68:fltk-1.3.4-1/png/pngset.c **** void PNGFAPI
  69:fltk-1.3.4-1/png/pngset.c **** png_set_cHRM_XYZ_fixed(png_const_structrp png_ptr, png_inforp info_ptr,
  70:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_red_X, png_fixed_point int_red_Y,
  71:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_red_Z, png_fixed_point int_green_X,
  72:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_green_Y, png_fixed_point int_green_Z,
  73:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_blue_X, png_fixed_point int_blue_Y,
  74:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_blue_Z)
  75:fltk-1.3.4-1/png/pngset.c **** {
  76:fltk-1.3.4-1/png/pngset.c ****    png_XYZ XYZ;
  77:fltk-1.3.4-1/png/pngset.c **** 
  78:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "cHRM XYZ fixed");
  79:fltk-1.3.4-1/png/pngset.c **** 
  80:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
  81:fltk-1.3.4-1/png/pngset.c ****       return;
  82:fltk-1.3.4-1/png/pngset.c **** 
  83:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_X = int_red_X;
  84:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Y = int_red_Y;
  85:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Z = int_red_Z;
  86:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_X = int_green_X;
  87:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Y = int_green_Y;
  88:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Z = int_green_Z;
  89:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_X = int_blue_X;
  90:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Y = int_blue_Y;
  91:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Z = int_blue_Z;
  92:fltk-1.3.4-1/png/pngset.c **** 
  93:fltk-1.3.4-1/png/pngset.c ****    if (png_colorspace_set_endpoints(png_ptr, &info_ptr->colorspace,
  94:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
  95:fltk-1.3.4-1/png/pngset.c ****       info_ptr->colorspace.flags |= PNG_COLORSPACE_FROM_cHRM;
  96:fltk-1.3.4-1/png/pngset.c **** 
  97:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
  98:fltk-1.3.4-1/png/pngset.c **** }
  99:fltk-1.3.4-1/png/pngset.c **** 
 100:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
 101:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 102:fltk-1.3.4-1/png/pngset.c **** png_set_cHRM(png_const_structrp png_ptr, png_inforp info_ptr,
 103:fltk-1.3.4-1/png/pngset.c ****     double white_x, double white_y, double red_x, double red_y,
 104:fltk-1.3.4-1/png/pngset.c ****     double green_x, double green_y, double blue_x, double blue_y)
 105:fltk-1.3.4-1/png/pngset.c **** {
 106:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_fixed(png_ptr, info_ptr,
 107:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_x, "cHRM White X"),
 108:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_y, "cHRM White Y"),
 109:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_x, "cHRM Red X"),
 110:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_y, "cHRM Red Y"),
 111:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, green_x, "cHRM Green X"),
 112:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, green_y, "cHRM Green Y"),
 113:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, blue_x, "cHRM Blue X"),
 114:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, blue_y, "cHRM Blue Y"));
 115:fltk-1.3.4-1/png/pngset.c **** }
 116:fltk-1.3.4-1/png/pngset.c **** 
 117:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 118:fltk-1.3.4-1/png/pngset.c **** png_set_cHRM_XYZ(png_const_structrp png_ptr, png_inforp info_ptr, double red_X,
 119:fltk-1.3.4-1/png/pngset.c ****     double red_Y, double red_Z, double green_X, double green_Y, double green_Z,
 120:fltk-1.3.4-1/png/pngset.c ****     double blue_X, double blue_Y, double blue_Z)
 121:fltk-1.3.4-1/png/pngset.c **** {
 122:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_XYZ_fixed(png_ptr, info_ptr,
 123:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 124:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_Y, "cHRM Red Y"),
 125:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_Z, "cHRM Red Z"),
 126:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, green_X, "cHRM Red X"),
 127:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, green_Y, "cHRM Red Y"),
 128:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, green_Z, "cHRM Red Z"),
 129:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, blue_X, "cHRM Red X"),
 130:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, blue_Y, "cHRM Red Y"),
 131:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, blue_Z, "cHRM Red Z"));
 132:fltk-1.3.4-1/png/pngset.c **** }
 133:fltk-1.3.4-1/png/pngset.c **** #  endif /* FLOATING_POINT */
 134:fltk-1.3.4-1/png/pngset.c **** 
 135:fltk-1.3.4-1/png/pngset.c **** #endif /* cHRM */
 136:fltk-1.3.4-1/png/pngset.c **** 
 137:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_gAMA_SUPPORTED
 138:fltk-1.3.4-1/png/pngset.c **** void PNGFAPI
 139:fltk-1.3.4-1/png/pngset.c **** png_set_gAMA_fixed(png_const_structrp png_ptr, png_inforp info_ptr,
 140:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point file_gamma)
 141:fltk-1.3.4-1/png/pngset.c **** {
 142:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "gAMA");
 143:fltk-1.3.4-1/png/pngset.c **** 
 144:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 145:fltk-1.3.4-1/png/pngset.c ****       return;
 146:fltk-1.3.4-1/png/pngset.c **** 
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_set_gamma(png_ptr, &info_ptr->colorspace, file_gamma);
 148:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 149:fltk-1.3.4-1/png/pngset.c **** }
 150:fltk-1.3.4-1/png/pngset.c **** 
 151:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
 152:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 153:fltk-1.3.4-1/png/pngset.c **** png_set_gAMA(png_const_structrp png_ptr, png_inforp info_ptr, double file_gamma)
 154:fltk-1.3.4-1/png/pngset.c **** {
 155:fltk-1.3.4-1/png/pngset.c ****    png_set_gAMA_fixed(png_ptr, info_ptr, png_fixed(png_ptr, file_gamma,
 156:fltk-1.3.4-1/png/pngset.c ****        "png_set_gAMA"));
 157:fltk-1.3.4-1/png/pngset.c **** }
 158:fltk-1.3.4-1/png/pngset.c **** #  endif
 159:fltk-1.3.4-1/png/pngset.c **** #endif
 160:fltk-1.3.4-1/png/pngset.c **** 
 161:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_hIST_SUPPORTED
 162:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 163:fltk-1.3.4-1/png/pngset.c **** png_set_hIST(png_const_structrp png_ptr, png_inforp info_ptr,
 164:fltk-1.3.4-1/png/pngset.c ****     png_const_uint_16p hist)
 165:fltk-1.3.4-1/png/pngset.c **** {
 166:fltk-1.3.4-1/png/pngset.c ****    int i;
 167:fltk-1.3.4-1/png/pngset.c **** 
 168:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "hIST");
 169:fltk-1.3.4-1/png/pngset.c **** 
 170:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 171:fltk-1.3.4-1/png/pngset.c ****       return;
 172:fltk-1.3.4-1/png/pngset.c **** 
 173:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->num_palette == 0 || info_ptr->num_palette
 174:fltk-1.3.4-1/png/pngset.c ****        > PNG_MAX_PALETTE_LENGTH)
 175:fltk-1.3.4-1/png/pngset.c ****    {
 176:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr,
 177:fltk-1.3.4-1/png/pngset.c ****           "Invalid palette size, hIST allocation skipped");
 178:fltk-1.3.4-1/png/pngset.c **** 
 179:fltk-1.3.4-1/png/pngset.c ****       return;
 180:fltk-1.3.4-1/png/pngset.c ****    }
 181:fltk-1.3.4-1/png/pngset.c **** 
 182:fltk-1.3.4-1/png/pngset.c ****    png_free_data(png_ptr, info_ptr, PNG_FREE_HIST, 0);
 183:fltk-1.3.4-1/png/pngset.c **** 
 184:fltk-1.3.4-1/png/pngset.c ****    /* Changed from info->num_palette to PNG_MAX_PALETTE_LENGTH in
 185:fltk-1.3.4-1/png/pngset.c ****     * version 1.2.1
 186:fltk-1.3.4-1/png/pngset.c ****     */
 187:fltk-1.3.4-1/png/pngset.c ****    info_ptr->hist = png_voidcast(png_uint_16p, png_malloc_warn(png_ptr,
 188:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_uint_16))));
 189:fltk-1.3.4-1/png/pngset.c **** 
 190:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->hist == NULL)
 191:fltk-1.3.4-1/png/pngset.c ****    {
 192:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Insufficient memory for hIST chunk data");
 193:fltk-1.3.4-1/png/pngset.c ****       return;
 194:fltk-1.3.4-1/png/pngset.c ****    }
 195:fltk-1.3.4-1/png/pngset.c **** 
 196:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_HIST;
 197:fltk-1.3.4-1/png/pngset.c **** 
 198:fltk-1.3.4-1/png/pngset.c ****    for (i = 0; i < info_ptr->num_palette; i++)
 199:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 200:fltk-1.3.4-1/png/pngset.c **** 
 201:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_hIST;
 202:fltk-1.3.4-1/png/pngset.c **** }
 203:fltk-1.3.4-1/png/pngset.c **** #endif
 204:fltk-1.3.4-1/png/pngset.c **** 
 205:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 206:fltk-1.3.4-1/png/pngset.c **** png_set_IHDR(png_const_structrp png_ptr, png_inforp info_ptr,
 207:fltk-1.3.4-1/png/pngset.c ****     png_uint_32 width, png_uint_32 height, int bit_depth,
 208:fltk-1.3.4-1/png/pngset.c ****     int color_type, int interlace_type, int compression_type,
 209:fltk-1.3.4-1/png/pngset.c ****     int filter_type)
 210:fltk-1.3.4-1/png/pngset.c **** {
 211:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "IHDR");
 212:fltk-1.3.4-1/png/pngset.c **** 
 213:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 214:fltk-1.3.4-1/png/pngset.c ****       return;
 215:fltk-1.3.4-1/png/pngset.c **** 
 216:fltk-1.3.4-1/png/pngset.c ****    info_ptr->width = width;
 217:fltk-1.3.4-1/png/pngset.c ****    info_ptr->height = height;
 218:fltk-1.3.4-1/png/pngset.c ****    info_ptr->bit_depth = (png_byte)bit_depth;
 219:fltk-1.3.4-1/png/pngset.c ****    info_ptr->color_type = (png_byte)color_type;
 220:fltk-1.3.4-1/png/pngset.c ****    info_ptr->compression_type = (png_byte)compression_type;
 221:fltk-1.3.4-1/png/pngset.c ****    info_ptr->filter_type = (png_byte)filter_type;
 222:fltk-1.3.4-1/png/pngset.c ****    info_ptr->interlace_type = (png_byte)interlace_type;
 223:fltk-1.3.4-1/png/pngset.c **** 
 224:fltk-1.3.4-1/png/pngset.c ****    png_check_IHDR (png_ptr, info_ptr->width, info_ptr->height,
 225:fltk-1.3.4-1/png/pngset.c ****        info_ptr->bit_depth, info_ptr->color_type, info_ptr->interlace_type,
 226:fltk-1.3.4-1/png/pngset.c ****        info_ptr->compression_type, info_ptr->filter_type);
 227:fltk-1.3.4-1/png/pngset.c **** 
 228:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 229:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 1;
 230:fltk-1.3.4-1/png/pngset.c **** 
 231:fltk-1.3.4-1/png/pngset.c ****    else if ((info_ptr->color_type & PNG_COLOR_MASK_COLOR) != 0)
 232:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 3;
 233:fltk-1.3.4-1/png/pngset.c **** 
 234:fltk-1.3.4-1/png/pngset.c ****    else
 235:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 1;
 236:fltk-1.3.4-1/png/pngset.c **** 
 237:fltk-1.3.4-1/png/pngset.c ****    if ((info_ptr->color_type & PNG_COLOR_MASK_ALPHA) != 0)
 238:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels++;
 239:fltk-1.3.4-1/png/pngset.c **** 
 240:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pixel_depth = (png_byte)(info_ptr->channels * info_ptr->bit_depth);
 241:fltk-1.3.4-1/png/pngset.c **** 
 242:fltk-1.3.4-1/png/pngset.c ****    info_ptr->rowbytes = PNG_ROWBYTES(info_ptr->pixel_depth, width);
 243:fltk-1.3.4-1/png/pngset.c **** }
 244:fltk-1.3.4-1/png/pngset.c **** 
 245:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_oFFs_SUPPORTED
 246:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 247:fltk-1.3.4-1/png/pngset.c **** png_set_oFFs(png_const_structrp png_ptr, png_inforp info_ptr,
 248:fltk-1.3.4-1/png/pngset.c ****     png_int_32 offset_x, png_int_32 offset_y, int unit_type)
 249:fltk-1.3.4-1/png/pngset.c **** {
 250:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "oFFs");
 251:fltk-1.3.4-1/png/pngset.c **** 
 252:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 253:fltk-1.3.4-1/png/pngset.c ****       return;
 254:fltk-1.3.4-1/png/pngset.c **** 
 255:fltk-1.3.4-1/png/pngset.c ****    info_ptr->x_offset = offset_x;
 256:fltk-1.3.4-1/png/pngset.c ****    info_ptr->y_offset = offset_y;
 257:fltk-1.3.4-1/png/pngset.c ****    info_ptr->offset_unit_type = (png_byte)unit_type;
 258:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_oFFs;
 259:fltk-1.3.4-1/png/pngset.c **** }
 260:fltk-1.3.4-1/png/pngset.c **** #endif
 261:fltk-1.3.4-1/png/pngset.c **** 
 262:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_pCAL_SUPPORTED
 263:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 264:fltk-1.3.4-1/png/pngset.c **** png_set_pCAL(png_const_structrp png_ptr, png_inforp info_ptr,
 265:fltk-1.3.4-1/png/pngset.c ****     png_const_charp purpose, png_int_32 X0, png_int_32 X1, int type,
 266:fltk-1.3.4-1/png/pngset.c ****     int nparams, png_const_charp units, png_charpp params)
 267:fltk-1.3.4-1/png/pngset.c **** {
 268:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 269:fltk-1.3.4-1/png/pngset.c ****    int i;
 270:fltk-1.3.4-1/png/pngset.c **** 
 271:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "pCAL");
 272:fltk-1.3.4-1/png/pngset.c **** 
 273:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || purpose == NULL || units == NULL
 274:fltk-1.3.4-1/png/pngset.c ****       || (nparams > 0 && params == NULL))
 275:fltk-1.3.4-1/png/pngset.c ****       return;
 276:fltk-1.3.4-1/png/pngset.c **** 
 277:fltk-1.3.4-1/png/pngset.c ****    length = strlen(purpose) + 1;
 278:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating purpose for info (%lu bytes)",
 279:fltk-1.3.4-1/png/pngset.c ****        (unsigned long)length);
 280:fltk-1.3.4-1/png/pngset.c **** 
 281:fltk-1.3.4-1/png/pngset.c ****    /* TODO: validate format of calibration name and unit name */
 282:fltk-1.3.4-1/png/pngset.c **** 
 283:fltk-1.3.4-1/png/pngset.c ****    /* Check that the type matches the specification. */
 284:fltk-1.3.4-1/png/pngset.c ****    if (type < 0 || type > 3)
 285:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL equation type");
 286:fltk-1.3.4-1/png/pngset.c **** 
 287:fltk-1.3.4-1/png/pngset.c ****    if (nparams < 0 || nparams > 255)
 288:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL parameter count");
 289:fltk-1.3.4-1/png/pngset.c **** 
 290:fltk-1.3.4-1/png/pngset.c ****    /* Validate params[nparams] */
 291:fltk-1.3.4-1/png/pngset.c ****    for (i=0; i<nparams; ++i)
 292:fltk-1.3.4-1/png/pngset.c ****    {
 293:fltk-1.3.4-1/png/pngset.c ****       if (params[i] == NULL ||
 294:fltk-1.3.4-1/png/pngset.c ****           !png_check_fp_string(params[i], strlen(params[i])))
 295:fltk-1.3.4-1/png/pngset.c ****          png_error(png_ptr, "Invalid format for pCAL parameter");
 296:fltk-1.3.4-1/png/pngset.c ****    }
 297:fltk-1.3.4-1/png/pngset.c **** 
 298:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_purpose = png_voidcast(png_charp,
 299:fltk-1.3.4-1/png/pngset.c ****        png_malloc_warn(png_ptr, length));
 300:fltk-1.3.4-1/png/pngset.c **** 
 301:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->pcal_purpose == NULL)
 302:fltk-1.3.4-1/png/pngset.c ****    {
 303:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Insufficient memory for pCAL purpose");
 304:fltk-1.3.4-1/png/pngset.c ****       return;
 305:fltk-1.3.4-1/png/pngset.c ****    }
 306:fltk-1.3.4-1/png/pngset.c **** 
 307:fltk-1.3.4-1/png/pngset.c ****    memcpy(info_ptr->pcal_purpose, purpose, length);
 308:fltk-1.3.4-1/png/pngset.c **** 
 309:fltk-1.3.4-1/png/pngset.c ****    png_debug(3, "storing X0, X1, type, and nparams in info");
 310:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_X0 = X0;
 311:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_X1 = X1;
 312:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_type = (png_byte)type;
 313:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_nparams = (png_byte)nparams;
 314:fltk-1.3.4-1/png/pngset.c **** 
 315:fltk-1.3.4-1/png/pngset.c ****    length = strlen(units) + 1;
 316:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating units for info (%lu bytes)",
 317:fltk-1.3.4-1/png/pngset.c ****      (unsigned long)length);
 318:fltk-1.3.4-1/png/pngset.c **** 
 319:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_units = png_voidcast(png_charp,
 320:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, length));
 321:fltk-1.3.4-1/png/pngset.c **** 
 322:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->pcal_units == NULL)
 323:fltk-1.3.4-1/png/pngset.c ****    {
 324:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Insufficient memory for pCAL units");
 325:fltk-1.3.4-1/png/pngset.c ****       return;
 326:fltk-1.3.4-1/png/pngset.c ****    }
 327:fltk-1.3.4-1/png/pngset.c **** 
 328:fltk-1.3.4-1/png/pngset.c ****    memcpy(info_ptr->pcal_units, units, length);
 329:fltk-1.3.4-1/png/pngset.c **** 
 330:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_params = png_voidcast(png_charpp, png_malloc_warn(png_ptr,
 331:fltk-1.3.4-1/png/pngset.c ****        (png_size_t)((nparams + 1) * (sizeof (png_charp)))));
 332:fltk-1.3.4-1/png/pngset.c **** 
 333:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->pcal_params == NULL)
 334:fltk-1.3.4-1/png/pngset.c ****    {
 335:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Insufficient memory for pCAL params");
 336:fltk-1.3.4-1/png/pngset.c ****       return;
 337:fltk-1.3.4-1/png/pngset.c ****    }
 338:fltk-1.3.4-1/png/pngset.c **** 
 339:fltk-1.3.4-1/png/pngset.c ****    memset(info_ptr->pcal_params, 0, (nparams + 1) * (sizeof (png_charp)));
 340:fltk-1.3.4-1/png/pngset.c **** 
 341:fltk-1.3.4-1/png/pngset.c ****    for (i = 0; i < nparams; i++)
 342:fltk-1.3.4-1/png/pngset.c ****    {
 343:fltk-1.3.4-1/png/pngset.c ****       length = strlen(params[i]) + 1;
 344:fltk-1.3.4-1/png/pngset.c ****       png_debug2(3, "allocating parameter %d for info (%lu bytes)", i,
 345:fltk-1.3.4-1/png/pngset.c ****           (unsigned long)length);
 346:fltk-1.3.4-1/png/pngset.c **** 
 347:fltk-1.3.4-1/png/pngset.c ****       info_ptr->pcal_params[i] = (png_charp)png_malloc_warn(png_ptr, length);
 348:fltk-1.3.4-1/png/pngset.c **** 
 349:fltk-1.3.4-1/png/pngset.c ****       if (info_ptr->pcal_params[i] == NULL)
 350:fltk-1.3.4-1/png/pngset.c ****       {
 351:fltk-1.3.4-1/png/pngset.c ****          png_warning(png_ptr, "Insufficient memory for pCAL parameter");
 352:fltk-1.3.4-1/png/pngset.c ****          return;
 353:fltk-1.3.4-1/png/pngset.c ****       }
 354:fltk-1.3.4-1/png/pngset.c **** 
 355:fltk-1.3.4-1/png/pngset.c ****       memcpy(info_ptr->pcal_params[i], params[i], length);
 356:fltk-1.3.4-1/png/pngset.c ****    }
 357:fltk-1.3.4-1/png/pngset.c **** 
 358:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_pCAL;
 359:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_PCAL;
 360:fltk-1.3.4-1/png/pngset.c **** }
 361:fltk-1.3.4-1/png/pngset.c **** #endif
 362:fltk-1.3.4-1/png/pngset.c **** 
 363:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_sCAL_SUPPORTED
 364:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 365:fltk-1.3.4-1/png/pngset.c **** png_set_sCAL_s(png_const_structrp png_ptr, png_inforp info_ptr,
 366:fltk-1.3.4-1/png/pngset.c ****     int unit, png_const_charp swidth, png_const_charp sheight)
 367:fltk-1.3.4-1/png/pngset.c **** {
 368:fltk-1.3.4-1/png/pngset.c ****    png_size_t lengthw = 0, lengthh = 0;
 369:fltk-1.3.4-1/png/pngset.c **** 
 370:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 371:fltk-1.3.4-1/png/pngset.c **** 
 372:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 373:fltk-1.3.4-1/png/pngset.c ****       return;
 374:fltk-1.3.4-1/png/pngset.c **** 
 375:fltk-1.3.4-1/png/pngset.c ****    /* Double check the unit (should never get here with an invalid
 376:fltk-1.3.4-1/png/pngset.c ****     * unit unless this is an API call.)
 377:fltk-1.3.4-1/png/pngset.c ****     */
 378:fltk-1.3.4-1/png/pngset.c ****    if (unit != 1 && unit != 2)
 379:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL unit");
 380:fltk-1.3.4-1/png/pngset.c **** 
 381:fltk-1.3.4-1/png/pngset.c ****    if (swidth == NULL || (lengthw = strlen(swidth)) == 0 ||
 382:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 383:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL width");
 384:fltk-1.3.4-1/png/pngset.c **** 
 385:fltk-1.3.4-1/png/pngset.c ****    if (sheight == NULL || (lengthh = strlen(sheight)) == 0 ||
 386:fltk-1.3.4-1/png/pngset.c ****        sheight[0] == 45 /* '-' */ || !png_check_fp_string(sheight, lengthh))
 387:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL height");
 388:fltk-1.3.4-1/png/pngset.c **** 
 389:fltk-1.3.4-1/png/pngset.c ****    info_ptr->scal_unit = (png_byte)unit;
 390:fltk-1.3.4-1/png/pngset.c **** 
 391:fltk-1.3.4-1/png/pngset.c ****    ++lengthw;
 392:fltk-1.3.4-1/png/pngset.c **** 
 393:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating unit for info (%u bytes)", (unsigned int)lengthw);
 394:fltk-1.3.4-1/png/pngset.c **** 
 395:fltk-1.3.4-1/png/pngset.c ****    info_ptr->scal_s_width = png_voidcast(png_charp,
 396:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthw));
 397:fltk-1.3.4-1/png/pngset.c **** 
 398:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->scal_s_width == NULL)
 399:fltk-1.3.4-1/png/pngset.c ****    {
 400:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Memory allocation failed while processing sCAL");
 401:fltk-1.3.4-1/png/pngset.c ****       return;
 402:fltk-1.3.4-1/png/pngset.c ****    }
 403:fltk-1.3.4-1/png/pngset.c **** 
 404:fltk-1.3.4-1/png/pngset.c ****    memcpy(info_ptr->scal_s_width, swidth, lengthw);
 405:fltk-1.3.4-1/png/pngset.c **** 
 406:fltk-1.3.4-1/png/pngset.c ****    ++lengthh;
 407:fltk-1.3.4-1/png/pngset.c **** 
 408:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating unit for info (%u bytes)", (unsigned int)lengthh);
 409:fltk-1.3.4-1/png/pngset.c **** 
 410:fltk-1.3.4-1/png/pngset.c ****    info_ptr->scal_s_height = png_voidcast(png_charp,
 411:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthh));
 412:fltk-1.3.4-1/png/pngset.c **** 
 413:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->scal_s_height == NULL)
 414:fltk-1.3.4-1/png/pngset.c ****    {
 415:fltk-1.3.4-1/png/pngset.c ****       png_free (png_ptr, info_ptr->scal_s_width);
 416:fltk-1.3.4-1/png/pngset.c ****       info_ptr->scal_s_width = NULL;
 417:fltk-1.3.4-1/png/pngset.c **** 
 418:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Memory allocation failed while processing sCAL");
 419:fltk-1.3.4-1/png/pngset.c ****       return;
 420:fltk-1.3.4-1/png/pngset.c ****    }
 421:fltk-1.3.4-1/png/pngset.c **** 
 422:fltk-1.3.4-1/png/pngset.c ****    memcpy(info_ptr->scal_s_height, sheight, lengthh);
 423:fltk-1.3.4-1/png/pngset.c **** 
 424:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_sCAL;
 425:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_SCAL;
 426:fltk-1.3.4-1/png/pngset.c **** }
 427:fltk-1.3.4-1/png/pngset.c **** 
 428:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_FLOATING_POINT_SUPPORTED
 429:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 430:fltk-1.3.4-1/png/pngset.c **** png_set_sCAL(png_const_structrp png_ptr, png_inforp info_ptr, int unit,
 431:fltk-1.3.4-1/png/pngset.c ****     double width, double height)
 432:fltk-1.3.4-1/png/pngset.c **** {
 433:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 434:fltk-1.3.4-1/png/pngset.c **** 
 435:fltk-1.3.4-1/png/pngset.c ****    /* Check the arguments. */
 436:fltk-1.3.4-1/png/pngset.c ****    if (width <= 0)
 437:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL width ignored");
 438:fltk-1.3.4-1/png/pngset.c **** 
 439:fltk-1.3.4-1/png/pngset.c ****    else if (height <= 0)
 440:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL height ignored");
 441:fltk-1.3.4-1/png/pngset.c **** 
 442:fltk-1.3.4-1/png/pngset.c ****    else
 443:fltk-1.3.4-1/png/pngset.c ****    {
 444:fltk-1.3.4-1/png/pngset.c ****       /* Convert 'width' and 'height' to ASCII. */
 445:fltk-1.3.4-1/png/pngset.c ****       char swidth[PNG_sCAL_MAX_DIGITS+1];
 446:fltk-1.3.4-1/png/pngset.c ****       char sheight[PNG_sCAL_MAX_DIGITS+1];
 447:fltk-1.3.4-1/png/pngset.c **** 
 448:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fp(png_ptr, swidth, (sizeof swidth), width,
 449:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 450:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fp(png_ptr, sheight, (sizeof sheight), height,
 451:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 452:fltk-1.3.4-1/png/pngset.c **** 
 453:fltk-1.3.4-1/png/pngset.c ****       png_set_sCAL_s(png_ptr, info_ptr, unit, swidth, sheight);
 454:fltk-1.3.4-1/png/pngset.c ****    }
 455:fltk-1.3.4-1/png/pngset.c **** }
 456:fltk-1.3.4-1/png/pngset.c **** #  endif
 457:fltk-1.3.4-1/png/pngset.c **** 
 458:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_FIXED_POINT_SUPPORTED
 459:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 460:fltk-1.3.4-1/png/pngset.c **** png_set_sCAL_fixed(png_const_structrp png_ptr, png_inforp info_ptr, int unit,
 461:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point width, png_fixed_point height)
 462:fltk-1.3.4-1/png/pngset.c **** {
 463:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 464:fltk-1.3.4-1/png/pngset.c **** 
 465:fltk-1.3.4-1/png/pngset.c ****    /* Check the arguments. */
 466:fltk-1.3.4-1/png/pngset.c ****    if (width <= 0)
 467:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL width ignored");
 468:fltk-1.3.4-1/png/pngset.c **** 
 469:fltk-1.3.4-1/png/pngset.c ****    else if (height <= 0)
 470:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL height ignored");
 471:fltk-1.3.4-1/png/pngset.c **** 
 472:fltk-1.3.4-1/png/pngset.c ****    else
 473:fltk-1.3.4-1/png/pngset.c ****    {
 474:fltk-1.3.4-1/png/pngset.c ****       /* Convert 'width' and 'height' to ASCII. */
 475:fltk-1.3.4-1/png/pngset.c ****       char swidth[PNG_sCAL_MAX_DIGITS+1];
 476:fltk-1.3.4-1/png/pngset.c ****       char sheight[PNG_sCAL_MAX_DIGITS+1];
 477:fltk-1.3.4-1/png/pngset.c **** 
 478:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fixed(png_ptr, swidth, (sizeof swidth), width);
 479:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fixed(png_ptr, sheight, (sizeof sheight), height);
 480:fltk-1.3.4-1/png/pngset.c **** 
 481:fltk-1.3.4-1/png/pngset.c ****       png_set_sCAL_s(png_ptr, info_ptr, unit, swidth, sheight);
 482:fltk-1.3.4-1/png/pngset.c ****    }
 483:fltk-1.3.4-1/png/pngset.c **** }
 484:fltk-1.3.4-1/png/pngset.c **** #  endif
 485:fltk-1.3.4-1/png/pngset.c **** #endif
 486:fltk-1.3.4-1/png/pngset.c **** 
 487:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_pHYs_SUPPORTED
 488:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 489:fltk-1.3.4-1/png/pngset.c **** png_set_pHYs(png_const_structrp png_ptr, png_inforp info_ptr,
 490:fltk-1.3.4-1/png/pngset.c ****     png_uint_32 res_x, png_uint_32 res_y, int unit_type)
 491:fltk-1.3.4-1/png/pngset.c **** {
 492:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "pHYs");
 493:fltk-1.3.4-1/png/pngset.c **** 
 494:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 495:fltk-1.3.4-1/png/pngset.c ****       return;
 496:fltk-1.3.4-1/png/pngset.c **** 
 497:fltk-1.3.4-1/png/pngset.c ****    info_ptr->x_pixels_per_unit = res_x;
 498:fltk-1.3.4-1/png/pngset.c ****    info_ptr->y_pixels_per_unit = res_y;
 499:fltk-1.3.4-1/png/pngset.c ****    info_ptr->phys_unit_type = (png_byte)unit_type;
 500:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_pHYs;
 501:fltk-1.3.4-1/png/pngset.c **** }
 502:fltk-1.3.4-1/png/pngset.c **** #endif
 503:fltk-1.3.4-1/png/pngset.c **** 
 504:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 505:fltk-1.3.4-1/png/pngset.c **** png_set_PLTE(png_structrp png_ptr, png_inforp info_ptr,
 506:fltk-1.3.4-1/png/pngset.c ****     png_const_colorp palette, int num_palette)
 507:fltk-1.3.4-1/png/pngset.c **** {
 508:fltk-1.3.4-1/png/pngset.c **** 
 509:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "PLTE");
 510:fltk-1.3.4-1/png/pngset.c **** 
 511:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 512:fltk-1.3.4-1/png/pngset.c ****       return;
 513:fltk-1.3.4-1/png/pngset.c **** 
 514:fltk-1.3.4-1/png/pngset.c ****    if (num_palette < 0 || num_palette > PNG_MAX_PALETTE_LENGTH)
 515:fltk-1.3.4-1/png/pngset.c ****    {
 516:fltk-1.3.4-1/png/pngset.c ****       if (info_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 517:fltk-1.3.4-1/png/pngset.c ****          png_error(png_ptr, "Invalid palette length");
 518:fltk-1.3.4-1/png/pngset.c **** 
 519:fltk-1.3.4-1/png/pngset.c ****       else
 520:fltk-1.3.4-1/png/pngset.c ****       {
 521:fltk-1.3.4-1/png/pngset.c ****          png_warning(png_ptr, "Invalid palette length");
 522:fltk-1.3.4-1/png/pngset.c ****          return;
 523:fltk-1.3.4-1/png/pngset.c ****       }
 524:fltk-1.3.4-1/png/pngset.c ****    }
 525:fltk-1.3.4-1/png/pngset.c **** 
 526:fltk-1.3.4-1/png/pngset.c ****    if ((num_palette > 0 && palette == NULL) ||
 527:fltk-1.3.4-1/png/pngset.c ****       (num_palette == 0
 528:fltk-1.3.4-1/png/pngset.c **** #        ifdef PNG_MNG_FEATURES_SUPPORTED
 529:fltk-1.3.4-1/png/pngset.c ****             && (png_ptr->mng_features_permitted & PNG_FLAG_MNG_EMPTY_PLTE) == 0
 530:fltk-1.3.4-1/png/pngset.c **** #        endif
 531:fltk-1.3.4-1/png/pngset.c ****       ))
 532:fltk-1.3.4-1/png/pngset.c ****    {
 533:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid palette");
 534:fltk-1.3.4-1/png/pngset.c ****       return;
 535:fltk-1.3.4-1/png/pngset.c ****    }
 536:fltk-1.3.4-1/png/pngset.c **** 
 537:fltk-1.3.4-1/png/pngset.c ****    /* It may not actually be necessary to set png_ptr->palette here;
 538:fltk-1.3.4-1/png/pngset.c ****     * we do it for backward compatibility with the way the png_handle_tRNS
 539:fltk-1.3.4-1/png/pngset.c ****     * function used to do the allocation.
 540:fltk-1.3.4-1/png/pngset.c ****     *
 541:fltk-1.3.4-1/png/pngset.c ****     * 1.6.0: the above statement appears to be incorrect; something has to set
 542:fltk-1.3.4-1/png/pngset.c ****     * the palette inside png_struct on read.
 543:fltk-1.3.4-1/png/pngset.c ****     */
 544:fltk-1.3.4-1/png/pngset.c ****    png_free_data(png_ptr, info_ptr, PNG_FREE_PLTE, 0);
 545:fltk-1.3.4-1/png/pngset.c **** 
 546:fltk-1.3.4-1/png/pngset.c ****    /* Changed in libpng-1.2.1 to allocate PNG_MAX_PALETTE_LENGTH instead
 547:fltk-1.3.4-1/png/pngset.c ****     * of num_palette entries, in case of an invalid PNG file that has
 548:fltk-1.3.4-1/png/pngset.c ****     * too-large sample values.
 549:fltk-1.3.4-1/png/pngset.c ****     */
 550:fltk-1.3.4-1/png/pngset.c ****    png_ptr->palette = png_voidcast(png_colorp, png_calloc(png_ptr,
 551:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_color))));
 552:fltk-1.3.4-1/png/pngset.c **** 
 553:fltk-1.3.4-1/png/pngset.c ****    if (num_palette > 0)
 554:fltk-1.3.4-1/png/pngset.c ****       memcpy(png_ptr->palette, palette, num_palette * (sizeof (png_color)));
 555:fltk-1.3.4-1/png/pngset.c ****    info_ptr->palette = png_ptr->palette;
 556:fltk-1.3.4-1/png/pngset.c ****    info_ptr->num_palette = png_ptr->num_palette = (png_uint_16)num_palette;
 557:fltk-1.3.4-1/png/pngset.c **** 
 558:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_PLTE;
 559:fltk-1.3.4-1/png/pngset.c **** 
 560:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_PLTE;
 561:fltk-1.3.4-1/png/pngset.c **** }
 562:fltk-1.3.4-1/png/pngset.c **** 
 563:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_sBIT_SUPPORTED
 564:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 565:fltk-1.3.4-1/png/pngset.c **** png_set_sBIT(png_const_structrp png_ptr, png_inforp info_ptr,
 566:fltk-1.3.4-1/png/pngset.c ****     png_const_color_8p sig_bit)
 567:fltk-1.3.4-1/png/pngset.c **** {
 568:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sBIT");
 569:fltk-1.3.4-1/png/pngset.c **** 
 570:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || sig_bit == NULL)
 571:fltk-1.3.4-1/png/pngset.c ****       return;
 572:fltk-1.3.4-1/png/pngset.c **** 
 573:fltk-1.3.4-1/png/pngset.c ****    info_ptr->sig_bit = *sig_bit;
 574:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_sBIT;
 575:fltk-1.3.4-1/png/pngset.c **** }
 576:fltk-1.3.4-1/png/pngset.c **** #endif
 577:fltk-1.3.4-1/png/pngset.c **** 
 578:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_sRGB_SUPPORTED
 579:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 580:fltk-1.3.4-1/png/pngset.c **** png_set_sRGB(png_const_structrp png_ptr, png_inforp info_ptr, int srgb_intent)
 581:fltk-1.3.4-1/png/pngset.c **** {
 582:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB");
 583:fltk-1.3.4-1/png/pngset.c **** 
 584:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 585:fltk-1.3.4-1/png/pngset.c ****       return;
 586:fltk-1.3.4-1/png/pngset.c **** 
 587:fltk-1.3.4-1/png/pngset.c ****    (void)png_colorspace_set_sRGB(png_ptr, &info_ptr->colorspace, srgb_intent);
 588:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 589:fltk-1.3.4-1/png/pngset.c **** }
 590:fltk-1.3.4-1/png/pngset.c **** 
 591:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 592:fltk-1.3.4-1/png/pngset.c **** png_set_sRGB_gAMA_and_cHRM(png_const_structrp png_ptr, png_inforp info_ptr,
 593:fltk-1.3.4-1/png/pngset.c ****     int srgb_intent)
 594:fltk-1.3.4-1/png/pngset.c **** {
 595:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB_gAMA_and_cHRM");
 596:fltk-1.3.4-1/png/pngset.c **** 
 597:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 598:fltk-1.3.4-1/png/pngset.c ****       return;
 599:fltk-1.3.4-1/png/pngset.c **** 
 600:fltk-1.3.4-1/png/pngset.c ****    if (png_colorspace_set_sRGB(png_ptr, &info_ptr->colorspace,
 601:fltk-1.3.4-1/png/pngset.c ****        srgb_intent) != 0)
 602:fltk-1.3.4-1/png/pngset.c ****    {
 603:fltk-1.3.4-1/png/pngset.c ****       /* This causes the gAMA and cHRM to be written too */
 604:fltk-1.3.4-1/png/pngset.c ****       info_ptr->colorspace.flags |=
 605:fltk-1.3.4-1/png/pngset.c ****          PNG_COLORSPACE_FROM_gAMA|PNG_COLORSPACE_FROM_cHRM;
 606:fltk-1.3.4-1/png/pngset.c ****    }
 607:fltk-1.3.4-1/png/pngset.c **** 
 608:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 609:fltk-1.3.4-1/png/pngset.c **** }
 610:fltk-1.3.4-1/png/pngset.c **** #endif /* sRGB */
 611:fltk-1.3.4-1/png/pngset.c **** 
 612:fltk-1.3.4-1/png/pngset.c **** 
 613:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_iCCP_SUPPORTED
 614:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 615:fltk-1.3.4-1/png/pngset.c **** png_set_iCCP(png_const_structrp png_ptr, png_inforp info_ptr,
 616:fltk-1.3.4-1/png/pngset.c ****     png_const_charp name, int compression_type,
 617:fltk-1.3.4-1/png/pngset.c ****     png_const_bytep profile, png_uint_32 proflen)
 618:fltk-1.3.4-1/png/pngset.c **** {
 619:fltk-1.3.4-1/png/pngset.c ****    png_charp new_iccp_name;
 620:fltk-1.3.4-1/png/pngset.c ****    png_bytep new_iccp_profile;
 621:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 622:fltk-1.3.4-1/png/pngset.c **** 
 623:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "iCCP");
 624:fltk-1.3.4-1/png/pngset.c **** 
 625:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || name == NULL || profile == NULL)
 626:fltk-1.3.4-1/png/pngset.c ****       return;
 627:fltk-1.3.4-1/png/pngset.c **** 
 628:fltk-1.3.4-1/png/pngset.c ****    if (compression_type != PNG_COMPRESSION_TYPE_BASE)
 629:fltk-1.3.4-1/png/pngset.c ****       png_app_error(png_ptr, "Invalid iCCP compression method");
 630:fltk-1.3.4-1/png/pngset.c **** 
 631:fltk-1.3.4-1/png/pngset.c ****    /* Set the colorspace first because this validates the profile; do not
 632:fltk-1.3.4-1/png/pngset.c ****     * override previously set app cHRM or gAMA here (because likely as not the
 633:fltk-1.3.4-1/png/pngset.c ****     * application knows better than libpng what the correct values are.)  Pass
 634:fltk-1.3.4-1/png/pngset.c ****     * the info_ptr color_type field to png_colorspace_set_ICC because in the
 635:fltk-1.3.4-1/png/pngset.c ****     * write case it has not yet been stored in png_ptr.
 636:fltk-1.3.4-1/png/pngset.c ****     */
 637:fltk-1.3.4-1/png/pngset.c ****    {
 638:fltk-1.3.4-1/png/pngset.c ****       int result = png_colorspace_set_ICC(png_ptr, &info_ptr->colorspace, name,
 639:fltk-1.3.4-1/png/pngset.c ****          proflen, profile, info_ptr->color_type);
 640:fltk-1.3.4-1/png/pngset.c **** 
 641:fltk-1.3.4-1/png/pngset.c ****       png_colorspace_sync_info(png_ptr, info_ptr);
 642:fltk-1.3.4-1/png/pngset.c **** 
 643:fltk-1.3.4-1/png/pngset.c ****       /* Don't do any of the copying if the profile was bad, or inconsistent. */
 644:fltk-1.3.4-1/png/pngset.c ****       if (result == 0)
 645:fltk-1.3.4-1/png/pngset.c ****          return;
 646:fltk-1.3.4-1/png/pngset.c **** 
 647:fltk-1.3.4-1/png/pngset.c ****       /* But do write the gAMA and cHRM chunks from the profile. */
 648:fltk-1.3.4-1/png/pngset.c ****       info_ptr->colorspace.flags |=
 649:fltk-1.3.4-1/png/pngset.c ****          PNG_COLORSPACE_FROM_gAMA|PNG_COLORSPACE_FROM_cHRM;
 650:fltk-1.3.4-1/png/pngset.c ****    }
 651:fltk-1.3.4-1/png/pngset.c **** 
 652:fltk-1.3.4-1/png/pngset.c ****    length = strlen(name)+1;
 653:fltk-1.3.4-1/png/pngset.c ****    new_iccp_name = png_voidcast(png_charp, png_malloc_warn(png_ptr, length));
 654:fltk-1.3.4-1/png/pngset.c **** 
 655:fltk-1.3.4-1/png/pngset.c ****    if (new_iccp_name == NULL)
 656:fltk-1.3.4-1/png/pngset.c ****    {
 657:fltk-1.3.4-1/png/pngset.c ****       png_benign_error(png_ptr, "Insufficient memory to process iCCP chunk");
 658:fltk-1.3.4-1/png/pngset.c ****       return;
 659:fltk-1.3.4-1/png/pngset.c ****    }
 660:fltk-1.3.4-1/png/pngset.c **** 
 661:fltk-1.3.4-1/png/pngset.c ****    memcpy(new_iccp_name, name, length);
 662:fltk-1.3.4-1/png/pngset.c ****    new_iccp_profile = png_voidcast(png_bytep,
 663:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, proflen));
 664:fltk-1.3.4-1/png/pngset.c **** 
 665:fltk-1.3.4-1/png/pngset.c ****    if (new_iccp_profile == NULL)
 666:fltk-1.3.4-1/png/pngset.c ****    {
 667:fltk-1.3.4-1/png/pngset.c ****       png_free(png_ptr, new_iccp_name);
 668:fltk-1.3.4-1/png/pngset.c ****       new_iccp_name = NULL;
 669:fltk-1.3.4-1/png/pngset.c ****       png_benign_error(png_ptr,
 670:fltk-1.3.4-1/png/pngset.c ****           "Insufficient memory to process iCCP profile");
 671:fltk-1.3.4-1/png/pngset.c ****       return;
 672:fltk-1.3.4-1/png/pngset.c ****    }
 673:fltk-1.3.4-1/png/pngset.c **** 
 674:fltk-1.3.4-1/png/pngset.c ****    memcpy(new_iccp_profile, profile, proflen);
 675:fltk-1.3.4-1/png/pngset.c **** 
 676:fltk-1.3.4-1/png/pngset.c ****    png_free_data(png_ptr, info_ptr, PNG_FREE_ICCP, 0);
 677:fltk-1.3.4-1/png/pngset.c **** 
 678:fltk-1.3.4-1/png/pngset.c ****    info_ptr->iccp_proflen = proflen;
 679:fltk-1.3.4-1/png/pngset.c ****    info_ptr->iccp_name = new_iccp_name;
 680:fltk-1.3.4-1/png/pngset.c ****    info_ptr->iccp_profile = new_iccp_profile;
 681:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_ICCP;
 682:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_iCCP;
 683:fltk-1.3.4-1/png/pngset.c **** }
 684:fltk-1.3.4-1/png/pngset.c **** #endif
 685:fltk-1.3.4-1/png/pngset.c **** 
 686:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_TEXT_SUPPORTED
 687:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 688:fltk-1.3.4-1/png/pngset.c **** png_set_text(png_const_structrp png_ptr, png_inforp info_ptr,
 689:fltk-1.3.4-1/png/pngset.c ****     png_const_textp text_ptr, int num_text)
 690:fltk-1.3.4-1/png/pngset.c **** {
 691:fltk-1.3.4-1/png/pngset.c ****    int ret;
 692:fltk-1.3.4-1/png/pngset.c ****    ret = png_set_text_2(png_ptr, info_ptr, text_ptr, num_text);
 693:fltk-1.3.4-1/png/pngset.c **** 
 694:fltk-1.3.4-1/png/pngset.c ****    if (ret != 0)
 695:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Insufficient memory to store text");
 696:fltk-1.3.4-1/png/pngset.c **** }
 697:fltk-1.3.4-1/png/pngset.c **** 
 698:fltk-1.3.4-1/png/pngset.c **** int /* PRIVATE */
 699:fltk-1.3.4-1/png/pngset.c **** png_set_text_2(png_const_structrp png_ptr, png_inforp info_ptr,
 700:fltk-1.3.4-1/png/pngset.c ****     png_const_textp text_ptr, int num_text)
 701:fltk-1.3.4-1/png/pngset.c **** {
 702:fltk-1.3.4-1/png/pngset.c ****    int i;
 703:fltk-1.3.4-1/png/pngset.c **** 
 704:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %lx storage function", png_ptr == NULL ? "unexpected" :
 705:fltk-1.3.4-1/png/pngset.c ****       (unsigned long)png_ptr->chunk_name);
 706:fltk-1.3.4-1/png/pngset.c **** 
 707:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || num_text <= 0 || text_ptr == NULL)
 708:fltk-1.3.4-1/png/pngset.c ****       return(0);
 709:fltk-1.3.4-1/png/pngset.c **** 
 710:fltk-1.3.4-1/png/pngset.c ****    /* Make sure we have enough space in the "text" array in info_struct
 711:fltk-1.3.4-1/png/pngset.c ****     * to hold all of the incoming text_ptr objects.  This compare can't overflow
 712:fltk-1.3.4-1/png/pngset.c ****     * because max_text >= num_text (anyway, subtract of two positive integers
 713:fltk-1.3.4-1/png/pngset.c ****     * can't overflow in any case.)
 714:fltk-1.3.4-1/png/pngset.c ****     */
 715:fltk-1.3.4-1/png/pngset.c ****    if (num_text > info_ptr->max_text - info_ptr->num_text)
 716:fltk-1.3.4-1/png/pngset.c ****    {
 717:fltk-1.3.4-1/png/pngset.c ****       int old_num_text = info_ptr->num_text;
 718:fltk-1.3.4-1/png/pngset.c ****       int max_text;
 719:fltk-1.3.4-1/png/pngset.c ****       png_textp new_text = NULL;
 720:fltk-1.3.4-1/png/pngset.c **** 
 721:fltk-1.3.4-1/png/pngset.c ****       /* Calculate an appropriate max_text, checking for overflow. */
 722:fltk-1.3.4-1/png/pngset.c ****       max_text = old_num_text;
 723:fltk-1.3.4-1/png/pngset.c ****       if (num_text <= INT_MAX - max_text)
 724:fltk-1.3.4-1/png/pngset.c ****       {
 725:fltk-1.3.4-1/png/pngset.c ****          max_text += num_text;
 726:fltk-1.3.4-1/png/pngset.c **** 
 727:fltk-1.3.4-1/png/pngset.c ****          /* Round up to a multiple of 8 */
 728:fltk-1.3.4-1/png/pngset.c ****          if (max_text < INT_MAX-8)
 729:fltk-1.3.4-1/png/pngset.c ****             max_text = (max_text + 8) & ~0x7;
 730:fltk-1.3.4-1/png/pngset.c **** 
 731:fltk-1.3.4-1/png/pngset.c ****          else
 732:fltk-1.3.4-1/png/pngset.c ****             max_text = INT_MAX;
 733:fltk-1.3.4-1/png/pngset.c **** 
 734:fltk-1.3.4-1/png/pngset.c ****          /* Now allocate a new array and copy the old members in; this does all
 735:fltk-1.3.4-1/png/pngset.c ****           * the overflow checks.
 736:fltk-1.3.4-1/png/pngset.c ****           */
 737:fltk-1.3.4-1/png/pngset.c ****          new_text = png_voidcast(png_textp,png_realloc_array(png_ptr,
 738:fltk-1.3.4-1/png/pngset.c ****             info_ptr->text, old_num_text, max_text-old_num_text,
 739:fltk-1.3.4-1/png/pngset.c ****             sizeof *new_text));
 740:fltk-1.3.4-1/png/pngset.c ****       }
 741:fltk-1.3.4-1/png/pngset.c **** 
 742:fltk-1.3.4-1/png/pngset.c ****       if (new_text == NULL)
 743:fltk-1.3.4-1/png/pngset.c ****       {
 744:fltk-1.3.4-1/png/pngset.c ****          png_chunk_report(png_ptr, "too many text chunks",
 745:fltk-1.3.4-1/png/pngset.c ****             PNG_CHUNK_WRITE_ERROR);
 746:fltk-1.3.4-1/png/pngset.c ****          return 1;
 747:fltk-1.3.4-1/png/pngset.c ****       }
 748:fltk-1.3.4-1/png/pngset.c **** 
 749:fltk-1.3.4-1/png/pngset.c ****       png_free(png_ptr, info_ptr->text);
 750:fltk-1.3.4-1/png/pngset.c **** 
 751:fltk-1.3.4-1/png/pngset.c ****       info_ptr->text = new_text;
 752:fltk-1.3.4-1/png/pngset.c ****       info_ptr->free_me |= PNG_FREE_TEXT;
 753:fltk-1.3.4-1/png/pngset.c ****       info_ptr->max_text = max_text;
 754:fltk-1.3.4-1/png/pngset.c ****       /* num_text is adjusted below as the entries are copied in */
 755:fltk-1.3.4-1/png/pngset.c **** 
 756:fltk-1.3.4-1/png/pngset.c ****       png_debug1(3, "allocated %d entries for info_ptr->text", max_text);
 757:fltk-1.3.4-1/png/pngset.c ****    }
 758:fltk-1.3.4-1/png/pngset.c **** 
 759:fltk-1.3.4-1/png/pngset.c ****    for (i = 0; i < num_text; i++)
 760:fltk-1.3.4-1/png/pngset.c ****    {
 761:fltk-1.3.4-1/png/pngset.c ****       size_t text_length, key_len;
 762:fltk-1.3.4-1/png/pngset.c ****       size_t lang_len, lang_key_len;
 763:fltk-1.3.4-1/png/pngset.c ****       png_textp textp = &(info_ptr->text[info_ptr->num_text]);
 764:fltk-1.3.4-1/png/pngset.c **** 
 765:fltk-1.3.4-1/png/pngset.c ****       if (text_ptr[i].key == NULL)
 766:fltk-1.3.4-1/png/pngset.c ****           continue;
 767:fltk-1.3.4-1/png/pngset.c **** 
 768:fltk-1.3.4-1/png/pngset.c ****       if (text_ptr[i].compression < PNG_TEXT_COMPRESSION_NONE ||
 769:fltk-1.3.4-1/png/pngset.c ****           text_ptr[i].compression >= PNG_TEXT_COMPRESSION_LAST)
 770:fltk-1.3.4-1/png/pngset.c ****       {
 771:fltk-1.3.4-1/png/pngset.c ****          png_chunk_report(png_ptr, "text compression mode is out of range",
 772:fltk-1.3.4-1/png/pngset.c ****             PNG_CHUNK_WRITE_ERROR);
 773:fltk-1.3.4-1/png/pngset.c ****          continue;
 774:fltk-1.3.4-1/png/pngset.c ****       }
 775:fltk-1.3.4-1/png/pngset.c **** 
 776:fltk-1.3.4-1/png/pngset.c ****       key_len = strlen(text_ptr[i].key);
 777:fltk-1.3.4-1/png/pngset.c **** 
 778:fltk-1.3.4-1/png/pngset.c ****       if (text_ptr[i].compression <= 0)
 779:fltk-1.3.4-1/png/pngset.c ****       {
 780:fltk-1.3.4-1/png/pngset.c ****          lang_len = 0;
 781:fltk-1.3.4-1/png/pngset.c ****          lang_key_len = 0;
 782:fltk-1.3.4-1/png/pngset.c ****       }
 783:fltk-1.3.4-1/png/pngset.c **** 
 784:fltk-1.3.4-1/png/pngset.c ****       else
 785:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_iTXt_SUPPORTED
 786:fltk-1.3.4-1/png/pngset.c ****       {
 787:fltk-1.3.4-1/png/pngset.c ****          /* Set iTXt data */
 788:fltk-1.3.4-1/png/pngset.c **** 
 789:fltk-1.3.4-1/png/pngset.c ****          if (text_ptr[i].lang != NULL)
 790:fltk-1.3.4-1/png/pngset.c ****             lang_len = strlen(text_ptr[i].lang);
 791:fltk-1.3.4-1/png/pngset.c **** 
 792:fltk-1.3.4-1/png/pngset.c ****          else
 793:fltk-1.3.4-1/png/pngset.c ****             lang_len = 0;
 794:fltk-1.3.4-1/png/pngset.c **** 
 795:fltk-1.3.4-1/png/pngset.c ****          if (text_ptr[i].lang_key != NULL)
 796:fltk-1.3.4-1/png/pngset.c ****             lang_key_len = strlen(text_ptr[i].lang_key);
 797:fltk-1.3.4-1/png/pngset.c **** 
 798:fltk-1.3.4-1/png/pngset.c ****          else
 799:fltk-1.3.4-1/png/pngset.c ****             lang_key_len = 0;
 800:fltk-1.3.4-1/png/pngset.c ****       }
 801:fltk-1.3.4-1/png/pngset.c **** #  else /* PNG_iTXt_SUPPORTED */
 802:fltk-1.3.4-1/png/pngset.c ****       {
 803:fltk-1.3.4-1/png/pngset.c ****          png_chunk_report(png_ptr, "iTXt chunk not supported",
 804:fltk-1.3.4-1/png/pngset.c ****             PNG_CHUNK_WRITE_ERROR);
 805:fltk-1.3.4-1/png/pngset.c ****          continue;
 806:fltk-1.3.4-1/png/pngset.c ****       }
 807:fltk-1.3.4-1/png/pngset.c **** #  endif
 808:fltk-1.3.4-1/png/pngset.c **** 
 809:fltk-1.3.4-1/png/pngset.c ****       if (text_ptr[i].text == NULL || text_ptr[i].text[0] == '\0')
 810:fltk-1.3.4-1/png/pngset.c ****       {
 811:fltk-1.3.4-1/png/pngset.c ****          text_length = 0;
 812:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_iTXt_SUPPORTED
 813:fltk-1.3.4-1/png/pngset.c ****          if (text_ptr[i].compression > 0)
 814:fltk-1.3.4-1/png/pngset.c ****             textp->compression = PNG_ITXT_COMPRESSION_NONE;
 815:fltk-1.3.4-1/png/pngset.c **** 
 816:fltk-1.3.4-1/png/pngset.c ****          else
 817:fltk-1.3.4-1/png/pngset.c **** #  endif
 818:fltk-1.3.4-1/png/pngset.c ****             textp->compression = PNG_TEXT_COMPRESSION_NONE;
 819:fltk-1.3.4-1/png/pngset.c ****       }
 820:fltk-1.3.4-1/png/pngset.c **** 
 821:fltk-1.3.4-1/png/pngset.c ****       else
 822:fltk-1.3.4-1/png/pngset.c ****       {
 823:fltk-1.3.4-1/png/pngset.c ****          text_length = strlen(text_ptr[i].text);
 824:fltk-1.3.4-1/png/pngset.c ****          textp->compression = text_ptr[i].compression;
 825:fltk-1.3.4-1/png/pngset.c ****       }
 826:fltk-1.3.4-1/png/pngset.c **** 
 827:fltk-1.3.4-1/png/pngset.c ****       textp->key = png_voidcast(png_charp,png_malloc_base(png_ptr,
 828:fltk-1.3.4-1/png/pngset.c ****           key_len + text_length + lang_len + lang_key_len + 4));
 829:fltk-1.3.4-1/png/pngset.c **** 
 830:fltk-1.3.4-1/png/pngset.c ****       if (textp->key == NULL)
 831:fltk-1.3.4-1/png/pngset.c ****       {
 832:fltk-1.3.4-1/png/pngset.c ****          png_chunk_report(png_ptr, "text chunk: out of memory",
 833:fltk-1.3.4-1/png/pngset.c ****                PNG_CHUNK_WRITE_ERROR);
 834:fltk-1.3.4-1/png/pngset.c ****          return 1;
 835:fltk-1.3.4-1/png/pngset.c ****       }
 836:fltk-1.3.4-1/png/pngset.c **** 
 837:fltk-1.3.4-1/png/pngset.c ****       png_debug2(2, "Allocated %lu bytes at %p in png_set_text",
 838:fltk-1.3.4-1/png/pngset.c ****           (unsigned long)(png_uint_32)
 839:fltk-1.3.4-1/png/pngset.c ****           (key_len + lang_len + lang_key_len + text_length + 4),
 840:fltk-1.3.4-1/png/pngset.c ****           textp->key);
 841:fltk-1.3.4-1/png/pngset.c **** 
 842:fltk-1.3.4-1/png/pngset.c ****       memcpy(textp->key, text_ptr[i].key, key_len);
 843:fltk-1.3.4-1/png/pngset.c ****       *(textp->key + key_len) = '\0';
 844:fltk-1.3.4-1/png/pngset.c **** 
 845:fltk-1.3.4-1/png/pngset.c ****       if (text_ptr[i].compression > 0)
 846:fltk-1.3.4-1/png/pngset.c ****       {
 847:fltk-1.3.4-1/png/pngset.c ****          textp->lang = textp->key + key_len + 1;
 848:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->lang, text_ptr[i].lang, lang_len);
 849:fltk-1.3.4-1/png/pngset.c ****          *(textp->lang + lang_len) = '\0';
 850:fltk-1.3.4-1/png/pngset.c ****          textp->lang_key = textp->lang + lang_len + 1;
 851:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->lang_key, text_ptr[i].lang_key, lang_key_len);
 852:fltk-1.3.4-1/png/pngset.c ****          *(textp->lang_key + lang_key_len) = '\0';
 853:fltk-1.3.4-1/png/pngset.c ****          textp->text = textp->lang_key + lang_key_len + 1;
 854:fltk-1.3.4-1/png/pngset.c ****       }
 855:fltk-1.3.4-1/png/pngset.c **** 
 856:fltk-1.3.4-1/png/pngset.c ****       else
 857:fltk-1.3.4-1/png/pngset.c ****       {
 858:fltk-1.3.4-1/png/pngset.c ****          textp->lang=NULL;
 859:fltk-1.3.4-1/png/pngset.c ****          textp->lang_key=NULL;
 860:fltk-1.3.4-1/png/pngset.c ****          textp->text = textp->key + key_len + 1;
 861:fltk-1.3.4-1/png/pngset.c ****       }
 862:fltk-1.3.4-1/png/pngset.c **** 
 863:fltk-1.3.4-1/png/pngset.c ****       if (text_length != 0)
 864:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->text, text_ptr[i].text, text_length);
 865:fltk-1.3.4-1/png/pngset.c **** 
 866:fltk-1.3.4-1/png/pngset.c ****       *(textp->text + text_length) = '\0';
 867:fltk-1.3.4-1/png/pngset.c **** 
 868:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_iTXt_SUPPORTED
 869:fltk-1.3.4-1/png/pngset.c ****       if (textp->compression > 0)
 870:fltk-1.3.4-1/png/pngset.c ****       {
 871:fltk-1.3.4-1/png/pngset.c ****          textp->text_length = 0;
 872:fltk-1.3.4-1/png/pngset.c ****          textp->itxt_length = text_length;
 873:fltk-1.3.4-1/png/pngset.c ****       }
 874:fltk-1.3.4-1/png/pngset.c **** 
 875:fltk-1.3.4-1/png/pngset.c ****       else
 876:fltk-1.3.4-1/png/pngset.c **** #  endif
 877:fltk-1.3.4-1/png/pngset.c ****       {
 878:fltk-1.3.4-1/png/pngset.c ****          textp->text_length = text_length;
 879:fltk-1.3.4-1/png/pngset.c ****          textp->itxt_length = 0;
 880:fltk-1.3.4-1/png/pngset.c ****       }
 881:fltk-1.3.4-1/png/pngset.c **** 
 882:fltk-1.3.4-1/png/pngset.c ****       info_ptr->num_text++;
 883:fltk-1.3.4-1/png/pngset.c ****       png_debug1(3, "transferred text chunk %d", info_ptr->num_text);
 884:fltk-1.3.4-1/png/pngset.c ****    }
 885:fltk-1.3.4-1/png/pngset.c **** 
 886:fltk-1.3.4-1/png/pngset.c ****    return(0);
 887:fltk-1.3.4-1/png/pngset.c **** }
 888:fltk-1.3.4-1/png/pngset.c **** #endif
 889:fltk-1.3.4-1/png/pngset.c **** 
 890:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_tIME_SUPPORTED
 891:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 892:fltk-1.3.4-1/png/pngset.c **** png_set_tIME(png_const_structrp png_ptr, png_inforp info_ptr,
 893:fltk-1.3.4-1/png/pngset.c ****     png_const_timep mod_time)
 894:fltk-1.3.4-1/png/pngset.c **** {
 895:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "tIME");
 896:fltk-1.3.4-1/png/pngset.c **** 
 897:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || mod_time == NULL ||
 898:fltk-1.3.4-1/png/pngset.c ****        (png_ptr->mode & PNG_WROTE_tIME) != 0)
 899:fltk-1.3.4-1/png/pngset.c ****       return;
 900:fltk-1.3.4-1/png/pngset.c **** 
 901:fltk-1.3.4-1/png/pngset.c ****    if (mod_time->month == 0   || mod_time->month > 12  ||
 902:fltk-1.3.4-1/png/pngset.c ****        mod_time->day   == 0   || mod_time->day   > 31  ||
 903:fltk-1.3.4-1/png/pngset.c ****        mod_time->hour  > 23   || mod_time->minute > 59 ||
 904:fltk-1.3.4-1/png/pngset.c ****        mod_time->second > 60)
 905:fltk-1.3.4-1/png/pngset.c ****    {
 906:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Ignoring invalid time value");
 907:fltk-1.3.4-1/png/pngset.c ****       return;
 908:fltk-1.3.4-1/png/pngset.c ****    }
 909:fltk-1.3.4-1/png/pngset.c **** 
 910:fltk-1.3.4-1/png/pngset.c ****    info_ptr->mod_time = *mod_time;
 911:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_tIME;
 912:fltk-1.3.4-1/png/pngset.c **** }
 913:fltk-1.3.4-1/png/pngset.c **** #endif
 914:fltk-1.3.4-1/png/pngset.c **** 
 915:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_tRNS_SUPPORTED
 916:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 917:fltk-1.3.4-1/png/pngset.c **** png_set_tRNS(png_structrp png_ptr, png_inforp info_ptr,
 918:fltk-1.3.4-1/png/pngset.c ****     png_const_bytep trans_alpha, int num_trans, png_const_color_16p trans_color)
 919:fltk-1.3.4-1/png/pngset.c **** {
 920:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "tRNS");
 921:fltk-1.3.4-1/png/pngset.c **** 
 922:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 923:fltk-1.3.4-1/png/pngset.c ****       return;
 924:fltk-1.3.4-1/png/pngset.c **** 
 925:fltk-1.3.4-1/png/pngset.c ****    if (trans_alpha != NULL)
 926:fltk-1.3.4-1/png/pngset.c ****    {
 927:fltk-1.3.4-1/png/pngset.c ****        /* It may not actually be necessary to set png_ptr->trans_alpha here;
 928:fltk-1.3.4-1/png/pngset.c ****         * we do it for backward compatibility with the way the png_handle_tRNS
 929:fltk-1.3.4-1/png/pngset.c ****         * function used to do the allocation.
 930:fltk-1.3.4-1/png/pngset.c ****         *
 931:fltk-1.3.4-1/png/pngset.c ****         * 1.6.0: The above statement is incorrect; png_handle_tRNS effectively
 932:fltk-1.3.4-1/png/pngset.c ****         * relies on png_set_tRNS storing the information in png_struct
 933:fltk-1.3.4-1/png/pngset.c ****         * (otherwise it won't be there for the code in pngrtran.c).
 934:fltk-1.3.4-1/png/pngset.c ****         */
 935:fltk-1.3.4-1/png/pngset.c **** 
 936:fltk-1.3.4-1/png/pngset.c ****        png_free_data(png_ptr, info_ptr, PNG_FREE_TRNS, 0);
 937:fltk-1.3.4-1/png/pngset.c **** 
 938:fltk-1.3.4-1/png/pngset.c ****        /* Changed from num_trans to PNG_MAX_PALETTE_LENGTH in version 1.2.1 */
 939:fltk-1.3.4-1/png/pngset.c ****        png_ptr->trans_alpha = info_ptr->trans_alpha = png_voidcast(png_bytep,
 940:fltk-1.3.4-1/png/pngset.c ****          png_malloc(png_ptr, PNG_MAX_PALETTE_LENGTH));
 941:fltk-1.3.4-1/png/pngset.c **** 
 942:fltk-1.3.4-1/png/pngset.c ****        if (num_trans > 0 && num_trans <= PNG_MAX_PALETTE_LENGTH)
 943:fltk-1.3.4-1/png/pngset.c ****           memcpy(info_ptr->trans_alpha, trans_alpha, (png_size_t)num_trans);
 944:fltk-1.3.4-1/png/pngset.c ****    }
 945:fltk-1.3.4-1/png/pngset.c **** 
 946:fltk-1.3.4-1/png/pngset.c ****    if (trans_color != NULL)
 947:fltk-1.3.4-1/png/pngset.c ****    {
 948:fltk-1.3.4-1/png/pngset.c ****       int sample_max = (1 << info_ptr->bit_depth);
 949:fltk-1.3.4-1/png/pngset.c **** 
 950:fltk-1.3.4-1/png/pngset.c ****       if ((info_ptr->color_type == PNG_COLOR_TYPE_GRAY &&
 951:fltk-1.3.4-1/png/pngset.c ****           trans_color->gray > sample_max) ||
 952:fltk-1.3.4-1/png/pngset.c ****           (info_ptr->color_type == PNG_COLOR_TYPE_RGB &&
 953:fltk-1.3.4-1/png/pngset.c ****           (trans_color->red > sample_max ||
 954:fltk-1.3.4-1/png/pngset.c ****           trans_color->green > sample_max ||
 955:fltk-1.3.4-1/png/pngset.c ****           trans_color->blue > sample_max)))
 956:fltk-1.3.4-1/png/pngset.c ****          png_warning(png_ptr,
 957:fltk-1.3.4-1/png/pngset.c ****             "tRNS chunk has out-of-range samples for bit_depth");
 958:fltk-1.3.4-1/png/pngset.c **** 
 959:fltk-1.3.4-1/png/pngset.c ****       info_ptr->trans_color = *trans_color;
 960:fltk-1.3.4-1/png/pngset.c **** 
 961:fltk-1.3.4-1/png/pngset.c ****       if (num_trans == 0)
 962:fltk-1.3.4-1/png/pngset.c ****          num_trans = 1;
 963:fltk-1.3.4-1/png/pngset.c ****    }
 964:fltk-1.3.4-1/png/pngset.c **** 
 965:fltk-1.3.4-1/png/pngset.c ****    info_ptr->num_trans = (png_uint_16)num_trans;
 966:fltk-1.3.4-1/png/pngset.c **** 
 967:fltk-1.3.4-1/png/pngset.c ****    if (num_trans != 0)
 968:fltk-1.3.4-1/png/pngset.c ****    {
 969:fltk-1.3.4-1/png/pngset.c ****       info_ptr->valid |= PNG_INFO_tRNS;
 970:fltk-1.3.4-1/png/pngset.c ****       info_ptr->free_me |= PNG_FREE_TRNS;
 971:fltk-1.3.4-1/png/pngset.c ****    }
 972:fltk-1.3.4-1/png/pngset.c **** }
 973:fltk-1.3.4-1/png/pngset.c **** #endif
 974:fltk-1.3.4-1/png/pngset.c **** 
 975:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_sPLT_SUPPORTED
 976:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
 977:fltk-1.3.4-1/png/pngset.c **** png_set_sPLT(png_const_structrp png_ptr,
 978:fltk-1.3.4-1/png/pngset.c ****     png_inforp info_ptr, png_const_sPLT_tp entries, int nentries)
 979:fltk-1.3.4-1/png/pngset.c **** /*
 980:fltk-1.3.4-1/png/pngset.c ****  *  entries        - array of png_sPLT_t structures
 981:fltk-1.3.4-1/png/pngset.c ****  *                   to be added to the list of palettes
 982:fltk-1.3.4-1/png/pngset.c ****  *                   in the info structure.
 983:fltk-1.3.4-1/png/pngset.c ****  *
 984:fltk-1.3.4-1/png/pngset.c ****  *  nentries       - number of palette structures to be
 985:fltk-1.3.4-1/png/pngset.c ****  *                   added.
 986:fltk-1.3.4-1/png/pngset.c ****  */
 987:fltk-1.3.4-1/png/pngset.c **** {
 988:fltk-1.3.4-1/png/pngset.c ****    png_sPLT_tp np;
 989:fltk-1.3.4-1/png/pngset.c **** 
 990:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || nentries <= 0 || entries == NULL)
 991:fltk-1.3.4-1/png/pngset.c ****       return;
 992:fltk-1.3.4-1/png/pngset.c **** 
 993:fltk-1.3.4-1/png/pngset.c ****    /* Use the internal realloc function, which checks for all the possible
 994:fltk-1.3.4-1/png/pngset.c ****     * overflows.  Notice that the parameters are (int) and (size_t)
 995:fltk-1.3.4-1/png/pngset.c ****     */
 996:fltk-1.3.4-1/png/pngset.c ****    np = png_voidcast(png_sPLT_tp,png_realloc_array(png_ptr,
 997:fltk-1.3.4-1/png/pngset.c ****       info_ptr->splt_palettes, info_ptr->splt_palettes_num, nentries,
 998:fltk-1.3.4-1/png/pngset.c ****       sizeof *np));
 999:fltk-1.3.4-1/png/pngset.c **** 
1000:fltk-1.3.4-1/png/pngset.c ****    if (np == NULL)
1001:fltk-1.3.4-1/png/pngset.c ****    {
1002:fltk-1.3.4-1/png/pngset.c ****       /* Out of memory or too many chunks */
1003:fltk-1.3.4-1/png/pngset.c ****       png_chunk_report(png_ptr, "too many sPLT chunks", PNG_CHUNK_WRITE_ERROR);
1004:fltk-1.3.4-1/png/pngset.c ****       return;
1005:fltk-1.3.4-1/png/pngset.c ****    }
1006:fltk-1.3.4-1/png/pngset.c **** 
1007:fltk-1.3.4-1/png/pngset.c ****    png_free(png_ptr, info_ptr->splt_palettes);
1008:fltk-1.3.4-1/png/pngset.c ****    info_ptr->splt_palettes = np;
1009:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_SPLT;
1010:fltk-1.3.4-1/png/pngset.c **** 
1011:fltk-1.3.4-1/png/pngset.c ****    np += info_ptr->splt_palettes_num;
1012:fltk-1.3.4-1/png/pngset.c **** 
1013:fltk-1.3.4-1/png/pngset.c ****    do
1014:fltk-1.3.4-1/png/pngset.c ****    {
1015:fltk-1.3.4-1/png/pngset.c ****       png_size_t length;
1016:fltk-1.3.4-1/png/pngset.c **** 
1017:fltk-1.3.4-1/png/pngset.c ****       /* Skip invalid input entries */
1018:fltk-1.3.4-1/png/pngset.c ****       if (entries->name == NULL || entries->entries == NULL)
1019:fltk-1.3.4-1/png/pngset.c ****       {
1020:fltk-1.3.4-1/png/pngset.c ****          /* png_handle_sPLT doesn't do this, so this is an app error */
1021:fltk-1.3.4-1/png/pngset.c ****          png_app_error(png_ptr, "png_set_sPLT: invalid sPLT");
1022:fltk-1.3.4-1/png/pngset.c ****          /* Just skip the invalid entry */
1023:fltk-1.3.4-1/png/pngset.c ****          continue;
1024:fltk-1.3.4-1/png/pngset.c ****       }
1025:fltk-1.3.4-1/png/pngset.c **** 
1026:fltk-1.3.4-1/png/pngset.c ****       np->depth = entries->depth;
1027:fltk-1.3.4-1/png/pngset.c **** 
1028:fltk-1.3.4-1/png/pngset.c ****       /* In the event of out-of-memory just return - there's no point keeping
1029:fltk-1.3.4-1/png/pngset.c ****        * on trying to add sPLT chunks.
1030:fltk-1.3.4-1/png/pngset.c ****        */
1031:fltk-1.3.4-1/png/pngset.c ****       length = strlen(entries->name) + 1;
1032:fltk-1.3.4-1/png/pngset.c ****       np->name = png_voidcast(png_charp, png_malloc_base(png_ptr, length));
1033:fltk-1.3.4-1/png/pngset.c **** 
1034:fltk-1.3.4-1/png/pngset.c ****       if (np->name == NULL)
1035:fltk-1.3.4-1/png/pngset.c ****          break;
1036:fltk-1.3.4-1/png/pngset.c **** 
1037:fltk-1.3.4-1/png/pngset.c ****       memcpy(np->name, entries->name, length);
1038:fltk-1.3.4-1/png/pngset.c **** 
1039:fltk-1.3.4-1/png/pngset.c ****       /* IMPORTANT: we have memory now that won't get freed if something else
1040:fltk-1.3.4-1/png/pngset.c ****        * goes wrong; this code must free it.  png_malloc_array produces no
1041:fltk-1.3.4-1/png/pngset.c ****        * warnings; use a png_chunk_report (below) if there is an error.
1042:fltk-1.3.4-1/png/pngset.c ****        */
1043:fltk-1.3.4-1/png/pngset.c ****       np->entries = png_voidcast(png_sPLT_entryp, png_malloc_array(png_ptr,
1044:fltk-1.3.4-1/png/pngset.c ****           entries->nentries, sizeof (png_sPLT_entry)));
1045:fltk-1.3.4-1/png/pngset.c **** 
1046:fltk-1.3.4-1/png/pngset.c ****       if (np->entries == NULL)
1047:fltk-1.3.4-1/png/pngset.c ****       {
1048:fltk-1.3.4-1/png/pngset.c ****          png_free(png_ptr, np->name);
1049:fltk-1.3.4-1/png/pngset.c ****          np->name = NULL;
1050:fltk-1.3.4-1/png/pngset.c ****          break;
1051:fltk-1.3.4-1/png/pngset.c ****       }
1052:fltk-1.3.4-1/png/pngset.c **** 
1053:fltk-1.3.4-1/png/pngset.c ****       np->nentries = entries->nentries;
1054:fltk-1.3.4-1/png/pngset.c ****       /* This multiply can't overflow because png_malloc_array has already
1055:fltk-1.3.4-1/png/pngset.c ****        * checked it when doing the allocation.
1056:fltk-1.3.4-1/png/pngset.c ****        */
1057:fltk-1.3.4-1/png/pngset.c ****       memcpy(np->entries, entries->entries,
1058:fltk-1.3.4-1/png/pngset.c ****          entries->nentries * sizeof (png_sPLT_entry));
1059:fltk-1.3.4-1/png/pngset.c **** 
1060:fltk-1.3.4-1/png/pngset.c ****       /* Note that 'continue' skips the advance of the out pointer and out
1061:fltk-1.3.4-1/png/pngset.c ****        * count, so an invalid entry is not added.
1062:fltk-1.3.4-1/png/pngset.c ****        */
1063:fltk-1.3.4-1/png/pngset.c ****       info_ptr->valid |= PNG_INFO_sPLT;
1064:fltk-1.3.4-1/png/pngset.c ****       ++(info_ptr->splt_palettes_num);
1065:fltk-1.3.4-1/png/pngset.c ****       ++np;
1066:fltk-1.3.4-1/png/pngset.c ****    }
1067:fltk-1.3.4-1/png/pngset.c ****    while (++entries, --nentries);
1068:fltk-1.3.4-1/png/pngset.c **** 
1069:fltk-1.3.4-1/png/pngset.c ****    if (nentries > 0)
1070:fltk-1.3.4-1/png/pngset.c ****       png_chunk_report(png_ptr, "sPLT out of memory", PNG_CHUNK_WRITE_ERROR);
1071:fltk-1.3.4-1/png/pngset.c **** }
1072:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
1073:fltk-1.3.4-1/png/pngset.c **** 
1074:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED
1075:fltk-1.3.4-1/png/pngset.c **** static png_byte
1076:fltk-1.3.4-1/png/pngset.c **** check_location(png_const_structrp png_ptr, int location)
1077:fltk-1.3.4-1/png/pngset.c **** {
  18              		.loc 1 1077 1 view -0
  19              		.cfi_startproc
1078:fltk-1.3.4-1/png/pngset.c ****    location &= (PNG_HAVE_IHDR|PNG_HAVE_PLTE|PNG_AFTER_IDAT);
  20              		.loc 1 1078 4 view .LVU1
1079:fltk-1.3.4-1/png/pngset.c **** 
1080:fltk-1.3.4-1/png/pngset.c ****    /* New in 1.6.0; copy the location and check it.  This is an API
1081:fltk-1.3.4-1/png/pngset.c ****     * change; previously the app had to use the
1082:fltk-1.3.4-1/png/pngset.c ****     * png_set_unknown_chunk_location API below for each chunk.
1083:fltk-1.3.4-1/png/pngset.c ****     */
1084:fltk-1.3.4-1/png/pngset.c ****    if (location == 0 && (png_ptr->mode & PNG_IS_READ_STRUCT) == 0)
  21              		.loc 1 1084 4 view .LVU2
  22              		.loc 1 1084 7 is_stmt 0 view .LVU3
  23 0000 89F0     		movl	%esi, %eax
  24 0002 83E00B   		andl	$11, %eax
  25              	.LVL1:
  26              		.loc 1 1084 7 view .LVU4
  27 0005 7429     		je	.L20
1085:fltk-1.3.4-1/png/pngset.c ****    {
1086:fltk-1.3.4-1/png/pngset.c ****       /* Write struct, so unknown chunks come from the app */
1087:fltk-1.3.4-1/png/pngset.c ****       png_app_warning(png_ptr,
1088:fltk-1.3.4-1/png/pngset.c ****          "png_set_unknown_chunks now expects a valid location");
1089:fltk-1.3.4-1/png/pngset.c ****       /* Use the old behavior */
1090:fltk-1.3.4-1/png/pngset.c ****       location = (png_byte)(png_ptr->mode &
1091:fltk-1.3.4-1/png/pngset.c ****          (PNG_HAVE_IHDR|PNG_HAVE_PLTE|PNG_AFTER_IDAT));
1092:fltk-1.3.4-1/png/pngset.c ****    }
1093:fltk-1.3.4-1/png/pngset.c **** 
1094:fltk-1.3.4-1/png/pngset.c ****    /* This need not be an internal error - if the app calls
1095:fltk-1.3.4-1/png/pngset.c ****     * png_set_unknown_chunks on a read pointer it must get the location right.
1096:fltk-1.3.4-1/png/pngset.c ****     */
1097:fltk-1.3.4-1/png/pngset.c ****    if (location == 0)
1098:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "invalid location in png_set_unknown_chunks");
1099:fltk-1.3.4-1/png/pngset.c **** 
1100:fltk-1.3.4-1/png/pngset.c ****    /* Now reduce the location to the top-most set bit by removing each least
1101:fltk-1.3.4-1/png/pngset.c ****     * significant bit in turn.
1102:fltk-1.3.4-1/png/pngset.c ****     */
1103:fltk-1.3.4-1/png/pngset.c ****    while (location != (location & -location))
  28              		.loc 1 1103 10 is_stmt 1 view .LVU5
  29              		.loc 1 1103 35 is_stmt 0 view .LVU6
  30 0007 89C2     		movl	%eax, %edx
  31 0009 F7DA     		negl	%edx
  32              		.loc 1 1103 33 view .LVU7
  33 000b 21C2     		andl	%eax, %edx
  34              		.loc 1 1103 10 view .LVU8
  35 000d 39C2     		cmpl	%eax, %edx
  36 000f 7438     		je	.L15
  37              		.p2align 4,,10
  38 0011 0F1F8000 		.p2align 3
  38      000000
  39              	.L13:
1104:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
  40              		.loc 1 1104 7 is_stmt 1 view .LVU9
  41              		.loc 1 1104 16 is_stmt 0 view .LVU10
  42 0018 8D50FF   		leal	-1(%rax), %edx
  43 001b 21D0     		andl	%edx, %eax
  44              	.LVL2:
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
  45              		.loc 1 1103 10 is_stmt 1 view .LVU11
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
  46              		.loc 1 1103 35 is_stmt 0 view .LVU12
  47 001d 89C2     		movl	%eax, %edx
  48 001f F7DA     		negl	%edx
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
  49              		.loc 1 1103 33 view .LVU13
  50 0021 21C2     		andl	%eax, %edx
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
  51              		.loc 1 1103 10 view .LVU14
  52 0023 39C2     		cmpl	%eax, %edx
  53 0025 75F1     		jne	.L13
  54 0027 C3       		ret
  55 0028 0F1F8400 		.p2align 4,,10
  55      00000000 
  56              		.p2align 3
  57              	.L20:
1077:fltk-1.3.4-1/png/pngset.c ****    location &= (PNG_HAVE_IHDR|PNG_HAVE_PLTE|PNG_AFTER_IDAT);
  58              		.loc 1 1077 1 discriminator 1 view .LVU15
  59 0030 4883EC18 		subq	$24, %rsp
  60              		.cfi_def_cfa_offset 32
1084:fltk-1.3.4-1/png/pngset.c ****    {
  61              		.loc 1 1084 22 discriminator 1 view .LVU16
  62 0034 F6872D01 		testb	$-128, 301(%rdi)
  62      000080
  63 003b 7413     		je	.L21
  64              	.LVL3:
  65              	.L3:
1098:fltk-1.3.4-1/png/pngset.c **** 
  66              		.loc 1 1098 7 is_stmt 1 view .LVU17
  67 003d 488D3500 		leaq	.LC1(%rip), %rsi
  67      000000
  68 0044 E8000000 		call	png_error@PLT
  68      00
  69              	.LVL4:
  70              	.L15:
  71              		.cfi_def_cfa_offset 8
1105:fltk-1.3.4-1/png/pngset.c **** 
1106:fltk-1.3.4-1/png/pngset.c ****    /* The cast is safe because 'location' is a bit mask and only the low four
1107:fltk-1.3.4-1/png/pngset.c ****     * bits are significant.
1108:fltk-1.3.4-1/png/pngset.c ****     */
1109:fltk-1.3.4-1/png/pngset.c ****    return (png_byte)location;
  72              		.loc 1 1109 4 view .LVU18
1110:fltk-1.3.4-1/png/pngset.c **** }
  73              		.loc 1 1110 1 is_stmt 0 view .LVU19
  74 0049 C3       		ret
  75 004a 660F1F44 		.p2align 4,,10
  75      0000
  76              		.p2align 3
  77              	.L21:
  78              		.cfi_def_cfa_offset 32
1087:fltk-1.3.4-1/png/pngset.c ****          "png_set_unknown_chunks now expects a valid location");
  79              		.loc 1 1087 7 is_stmt 1 view .LVU20
  80 0050 488D3500 		leaq	.LC0(%rip), %rsi
  80      000000
  81 0057 48897C24 		movq	%rdi, 8(%rsp)
  81      08
  82 005c E8000000 		call	png_app_warning@PLT
  82      00
  83              	.LVL5:
1090:fltk-1.3.4-1/png/pngset.c ****          (PNG_HAVE_IHDR|PNG_HAVE_PLTE|PNG_AFTER_IDAT));
  84              		.loc 1 1090 7 view .LVU21
1090:fltk-1.3.4-1/png/pngset.c ****          (PNG_HAVE_IHDR|PNG_HAVE_PLTE|PNG_AFTER_IDAT));
  85              		.loc 1 1090 18 is_stmt 0 view .LVU22
  86 0061 488B7C24 		movq	8(%rsp), %rdi
  86      08
  87 0066 0FB6872C 		movzbl	300(%rdi), %eax
  87      010000
  88              	.LVL6:
1097:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "invalid location in png_set_unknown_chunks");
  89              		.loc 1 1097 4 is_stmt 1 view .LVU23
1097:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "invalid location in png_set_unknown_chunks");
  90              		.loc 1 1097 7 is_stmt 0 view .LVU24
  91 006d 83E00B   		andl	$11, %eax
  92              	.LVL7:
1097:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "invalid location in png_set_unknown_chunks");
  93              		.loc 1 1097 7 view .LVU25
  94 0070 750B     		jne	.L18
1097:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "invalid location in png_set_unknown_chunks");
  95              		.loc 1 1097 7 view .LVU26
  96 0072 EBC9     		jmp	.L3
  97              		.p2align 4,,10
  98 0074 0F1F4000 		.p2align 3
  99              	.L4:
1104:fltk-1.3.4-1/png/pngset.c **** 
 100              		.loc 1 1104 7 is_stmt 1 view .LVU27
1104:fltk-1.3.4-1/png/pngset.c **** 
 101              		.loc 1 1104 16 is_stmt 0 view .LVU28
 102 0078 8D50FF   		leal	-1(%rax), %edx
 103 007b 21D0     		andl	%edx, %eax
 104              	.LVL8:
 105              	.L18:
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
 106              		.loc 1 1103 10 is_stmt 1 view .LVU29
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
 107              		.loc 1 1103 35 is_stmt 0 view .LVU30
 108 007d 89C2     		movl	%eax, %edx
 109 007f F7DA     		negl	%edx
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
 110              		.loc 1 1103 33 view .LVU31
 111 0081 21C2     		andl	%eax, %edx
1103:fltk-1.3.4-1/png/pngset.c ****       location &= ~(location & -location);
 112              		.loc 1 1103 10 view .LVU32
 113 0083 39C2     		cmpl	%eax, %edx
 114 0085 75F1     		jne	.L4
1109:fltk-1.3.4-1/png/pngset.c **** }
 115              		.loc 1 1109 4 is_stmt 1 view .LVU33
 116              		.loc 1 1110 1 is_stmt 0 view .LVU34
 117 0087 4883C418 		addq	$24, %rsp
 118              		.cfi_def_cfa_offset 8
 119 008b C3       		ret
 120              		.cfi_endproc
 121              	.LFE66:
 123              		.section	.text.png_set_bKGD,"ax",@progbits
 124              		.p2align 4
 125              		.globl	png_set_bKGD
 127              	png_set_bKGD:
 128              	.LVL9:
 129              	.LFB41:
  27:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "bKGD");
 130              		.loc 1 27 1 is_stmt 1 view -0
 131              		.cfi_startproc
  27:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "bKGD");
 132              		.loc 1 27 1 is_stmt 0 view .LVU36
 133 0000 F30F1EFA 		endbr64
  28:fltk-1.3.4-1/png/pngset.c **** 
 134              		.loc 1 28 4 is_stmt 1 view .LVU37
  30:fltk-1.3.4-1/png/pngset.c ****       return;
 135              		.loc 1 30 4 view .LVU38
  30:fltk-1.3.4-1/png/pngset.c ****       return;
 136              		.loc 1 30 36 is_stmt 0 view .LVU39
 137 0004 4885F6   		testq	%rsi, %rsi
 138 0007 0F94C1   		sete	%cl
  30:fltk-1.3.4-1/png/pngset.c ****       return;
 139              		.loc 1 30 44 view .LVU40
 140 000a 4885D2   		testq	%rdx, %rdx
 141 000d 0F94C0   		sete	%al
 142 0010 08C1     		orb	%al, %cl
 143 0012 751E     		jne	.L22
 144 0014 4885FF   		testq	%rdi, %rdi
 145 0017 7419     		je	.L22
  33:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_bKGD;
 146              		.loc 1 33 4 is_stmt 1 view .LVU41
  33:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_bKGD;
 147              		.loc 1 33 25 is_stmt 0 view .LVU42
 148 0019 488B02   		movq	(%rdx), %rax
  34:fltk-1.3.4-1/png/pngset.c **** }
 149              		.loc 1 34 20 view .LVU43
 150 001c 834E0820 		orl	$32, 8(%rsi)
  33:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_bKGD;
 151              		.loc 1 33 25 view .LVU44
 152 0020 488986CA 		movq	%rax, 202(%rsi)
 152      000000
 153 0027 0FB74208 		movzwl	8(%rdx), %eax
 154 002b 668986D2 		movw	%ax, 210(%rsi)
 154      000000
  34:fltk-1.3.4-1/png/pngset.c **** }
 155              		.loc 1 34 4 is_stmt 1 view .LVU45
 156              	.L22:
  35:fltk-1.3.4-1/png/pngset.c **** #endif
 157              		.loc 1 35 1 is_stmt 0 view .LVU46
 158 0032 C3       		ret
 159              		.cfi_endproc
 160              	.LFE41:
 162              		.section	.text.png_set_cHRM_fixed,"ax",@progbits
 163              		.p2align 4
 164              		.globl	png_set_cHRM_fixed
 166              	png_set_cHRM_fixed:
 167              	.LVL10:
 168              	.LFB42:
  44:fltk-1.3.4-1/png/pngset.c ****    png_xy xy;
 169              		.loc 1 44 1 is_stmt 1 view -0
 170              		.cfi_startproc
  44:fltk-1.3.4-1/png/pngset.c ****    png_xy xy;
 171              		.loc 1 44 1 is_stmt 0 view .LVU48
 172 0000 F30F1EFA 		endbr64
 173 0004 4154     		pushq	%r12
 174              		.cfi_def_cfa_offset 16
 175              		.cfi_offset 12, -16
 176 0006 55       		pushq	%rbp
 177              		.cfi_def_cfa_offset 24
 178              		.cfi_offset 6, -24
 179 0007 4883EC38 		subq	$56, %rsp
 180              		.cfi_def_cfa_offset 80
  44:fltk-1.3.4-1/png/pngset.c ****    png_xy xy;
 181              		.loc 1 44 1 view .LVU49
 182 000b 64488B04 		movq	%fs:40, %rax
 182      25280000 
 182      00
 183 0014 48894424 		movq	%rax, 40(%rsp)
 183      28
 184 0019 31C0     		xorl	%eax, %eax
  45:fltk-1.3.4-1/png/pngset.c **** 
 185              		.loc 1 45 4 is_stmt 1 view .LVU50
  47:fltk-1.3.4-1/png/pngset.c **** 
 186              		.loc 1 47 4 view .LVU51
  49:fltk-1.3.4-1/png/pngset.c ****       return;
 187              		.loc 1 49 4 view .LVU52
  49:fltk-1.3.4-1/png/pngset.c ****       return;
 188              		.loc 1 49 7 is_stmt 0 view .LVU53
 189 001b 4885FF   		testq	%rdi, %rdi
 190 001e 7461     		je	.L24
 191 0020 4889F5   		movq	%rsi, %rbp
 192 0023 4885F6   		testq	%rsi, %rsi
 193 0026 7459     		je	.L24
 194              	.LBB73:
 195              	.LBB74:
  54:fltk-1.3.4-1/png/pngset.c ****    xy.greeny = green_y;
 196              		.loc 1 54 14 view .LVU54
 197 0028 8B442450 		movl	80(%rsp), %eax
  58:fltk-1.3.4-1/png/pngset.c ****    xy.whitey = white_y;
 198              		.loc 1 58 14 view .LVU55
 199 002c 89542418 		movl	%edx, 24(%rsp)
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 200              		.loc 1 61 51 view .LVU56
 201 0030 488D7634 		leaq	52(%rsi), %rsi
 202              	.LVL11:
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 203              		.loc 1 61 8 view .LVU57
 204 0034 4889E2   		movq	%rsp, %rdx
 205              	.LVL12:
  59:fltk-1.3.4-1/png/pngset.c **** 
 206              		.loc 1 59 14 view .LVU58
 207 0037 894C241C 		movl	%ecx, 28(%rsp)
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 208              		.loc 1 61 8 view .LVU59
 209 003b B9020000 		movl	$2, %ecx
 209      00
 210              	.LVL13:
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 211              		.loc 1 61 8 view .LVU60
 212 0040 4989FC   		movq	%rdi, %r12
 213              	.LVL14:
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 214              		.loc 1 61 8 view .LVU61
 215              	.LBE74:
 216              	.LBI73:
  40:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point white_x, png_fixed_point white_y, png_fixed_point red_x,
 217              		.loc 1 40 1 is_stmt 1 view .LVU62
 218              	.LBB75:
  52:fltk-1.3.4-1/png/pngset.c ****    xy.redy = red_y;
 219              		.loc 1 52 4 view .LVU63
  54:fltk-1.3.4-1/png/pngset.c ****    xy.greeny = green_y;
 220              		.loc 1 54 14 is_stmt 0 view .LVU64
 221 0043 89442408 		movl	%eax, 8(%rsp)
  55:fltk-1.3.4-1/png/pngset.c ****    xy.bluex = blue_x;
 222              		.loc 1 55 14 view .LVU65
 223 0047 8B442458 		movl	88(%rsp), %eax
 224              	.LVL15:
  52:fltk-1.3.4-1/png/pngset.c ****    xy.redy = red_y;
 225              		.loc 1 52 12 view .LVU66
 226 004b 44890424 		movl	%r8d, (%rsp)
  53:fltk-1.3.4-1/png/pngset.c ****    xy.greenx = green_x;
 227              		.loc 1 53 4 is_stmt 1 view .LVU67
  55:fltk-1.3.4-1/png/pngset.c ****    xy.bluex = blue_x;
 228              		.loc 1 55 14 is_stmt 0 view .LVU68
 229 004f 8944240C 		movl	%eax, 12(%rsp)
  56:fltk-1.3.4-1/png/pngset.c ****    xy.bluey = blue_y;
 230              		.loc 1 56 13 view .LVU69
 231 0053 8B442460 		movl	96(%rsp), %eax
  53:fltk-1.3.4-1/png/pngset.c ****    xy.greenx = green_x;
 232              		.loc 1 53 12 view .LVU70
 233 0057 44894C24 		movl	%r9d, 4(%rsp)
 233      04
  54:fltk-1.3.4-1/png/pngset.c ****    xy.greeny = green_y;
 234              		.loc 1 54 4 is_stmt 1 view .LVU71
  55:fltk-1.3.4-1/png/pngset.c ****    xy.bluex = blue_x;
 235              		.loc 1 55 4 view .LVU72
  56:fltk-1.3.4-1/png/pngset.c ****    xy.bluey = blue_y;
 236              		.loc 1 56 4 view .LVU73
  56:fltk-1.3.4-1/png/pngset.c ****    xy.bluey = blue_y;
 237              		.loc 1 56 13 is_stmt 0 view .LVU74
 238 005c 89442410 		movl	%eax, 16(%rsp)
  57:fltk-1.3.4-1/png/pngset.c ****    xy.whitex = white_x;
 239              		.loc 1 57 4 is_stmt 1 view .LVU75
  57:fltk-1.3.4-1/png/pngset.c ****    xy.whitex = white_x;
 240              		.loc 1 57 13 is_stmt 0 view .LVU76
 241 0060 8B442468 		movl	104(%rsp), %eax
 242 0064 89442414 		movl	%eax, 20(%rsp)
  58:fltk-1.3.4-1/png/pngset.c ****    xy.whitey = white_y;
 243              		.loc 1 58 4 is_stmt 1 view .LVU77
  59:fltk-1.3.4-1/png/pngset.c **** 
 244              		.loc 1 59 4 view .LVU78
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 245              		.loc 1 61 4 view .LVU79
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 246              		.loc 1 61 8 is_stmt 0 view .LVU80
 247 0068 E8000000 		call	png_colorspace_set_chromaticities@PLT
 247      00
 248              	.LVL16:
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 249              		.loc 1 61 7 view .LVU81
 250 006d 85C0     		testl	%eax, %eax
 251 006f 7405     		je	.L26
  63:fltk-1.3.4-1/png/pngset.c **** 
 252              		.loc 1 63 7 is_stmt 1 view .LVU82
  63:fltk-1.3.4-1/png/pngset.c **** 
 253              		.loc 1 63 34 is_stmt 0 view .LVU83
 254 0071 66834D7E 		orw	$16, 126(%rbp)
 254      10
 255              	.L26:
  65:fltk-1.3.4-1/png/pngset.c **** }
 256              		.loc 1 65 4 is_stmt 1 view .LVU84
 257 0076 4889EE   		movq	%rbp, %rsi
 258 0079 4C89E7   		movq	%r12, %rdi
 259 007c E8000000 		call	png_colorspace_sync_info@PLT
 259      00
 260              	.LVL17:
 261              	.L24:
  65:fltk-1.3.4-1/png/pngset.c **** }
 262              		.loc 1 65 4 is_stmt 0 view .LVU85
 263              	.LBE75:
 264              	.LBE73:
  66:fltk-1.3.4-1/png/pngset.c **** 
 265              		.loc 1 66 1 view .LVU86
 266 0081 488B4424 		movq	40(%rsp), %rax
 266      28
 267 0086 64483304 		xorq	%fs:40, %rax
 267      25280000 
 267      00
 268 008f 7508     		jne	.L32
 269 0091 4883C438 		addq	$56, %rsp
 270              		.cfi_remember_state
 271              		.cfi_def_cfa_offset 24
 272 0095 5D       		popq	%rbp
 273              		.cfi_def_cfa_offset 16
 274 0096 415C     		popq	%r12
 275              		.cfi_def_cfa_offset 8
 276 0098 C3       		ret
 277              	.L32:
 278              		.cfi_restore_state
 279 0099 E8000000 		call	__stack_chk_fail@PLT
 279      00
 280              	.LVL18:
 281              		.cfi_endproc
 282              	.LFE42:
 284              		.section	.text.png_set_cHRM_XYZ_fixed,"ax",@progbits
 285              		.p2align 4
 286              		.globl	png_set_cHRM_XYZ_fixed
 288              	png_set_cHRM_XYZ_fixed:
 289              	.LVL19:
 290              	.LFB43:
  75:fltk-1.3.4-1/png/pngset.c ****    png_XYZ XYZ;
 291              		.loc 1 75 1 is_stmt 1 view -0
 292              		.cfi_startproc
  75:fltk-1.3.4-1/png/pngset.c ****    png_XYZ XYZ;
 293              		.loc 1 75 1 is_stmt 0 view .LVU88
 294 0000 F30F1EFA 		endbr64
 295 0004 4154     		pushq	%r12
 296              		.cfi_def_cfa_offset 16
 297              		.cfi_offset 12, -16
 298 0006 55       		pushq	%rbp
 299              		.cfi_def_cfa_offset 24
 300              		.cfi_offset 6, -24
 301 0007 4883EC38 		subq	$56, %rsp
 302              		.cfi_def_cfa_offset 80
  75:fltk-1.3.4-1/png/pngset.c ****    png_XYZ XYZ;
 303              		.loc 1 75 1 view .LVU89
 304 000b 64488B04 		movq	%fs:40, %rax
 304      25280000 
 304      00
 305 0014 48894424 		movq	%rax, 40(%rsp)
 305      28
 306 0019 31C0     		xorl	%eax, %eax
  76:fltk-1.3.4-1/png/pngset.c **** 
 307              		.loc 1 76 4 is_stmt 1 view .LVU90
  78:fltk-1.3.4-1/png/pngset.c **** 
 308              		.loc 1 78 4 view .LVU91
  80:fltk-1.3.4-1/png/pngset.c ****       return;
 309              		.loc 1 80 4 view .LVU92
  80:fltk-1.3.4-1/png/pngset.c ****       return;
 310              		.loc 1 80 7 is_stmt 0 view .LVU93
 311 001b 4885FF   		testq	%rdi, %rdi
 312 001e 7469     		je	.L33
 313 0020 4889F5   		movq	%rsi, %rbp
 314 0023 4885F6   		testq	%rsi, %rsi
 315 0026 7461     		je	.L33
 316              	.LBB78:
 317              	.LBB79:
  87:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Z = int_green_Z;
 318              		.loc 1 87 16 view .LVU94
 319 0028 8B442450 		movl	80(%rsp), %eax
  83:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Y = int_red_Y;
 320              		.loc 1 83 14 view .LVU95
 321 002c 891424   		movl	%edx, (%rsp)
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 322              		.loc 1 93 46 view .LVU96
 323 002f 488D7634 		leaq	52(%rsi), %rsi
 324              	.LVL20:
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 325              		.loc 1 93 8 view .LVU97
 326 0033 4889E2   		movq	%rsp, %rdx
 327              	.LVL21:
  84:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Z = int_red_Z;
 328              		.loc 1 84 14 view .LVU98
 329 0036 894C2404 		movl	%ecx, 4(%rsp)
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 330              		.loc 1 93 8 view .LVU99
 331 003a B9020000 		movl	$2, %ecx
 331      00
 332              	.LVL22:
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 333              		.loc 1 93 8 view .LVU100
 334 003f 4989FC   		movq	%rdi, %r12
 335              	.LVL23:
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 336              		.loc 1 93 8 view .LVU101
 337              	.LBE79:
 338              	.LBI78:
  69:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_red_X, png_fixed_point int_red_Y,
 339              		.loc 1 69 1 is_stmt 1 view .LVU102
 340              	.LBB80:
  83:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Y = int_red_Y;
 341              		.loc 1 83 4 view .LVU103
  84:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Z = int_red_Z;
 342              		.loc 1 84 4 view .LVU104
  85:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_X = int_green_X;
 343              		.loc 1 85 4 view .LVU105
  87:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Z = int_green_Z;
 344              		.loc 1 87 16 is_stmt 0 view .LVU106
 345 0042 89442410 		movl	%eax, 16(%rsp)
  88:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_X = int_blue_X;
 346              		.loc 1 88 16 view .LVU107
 347 0046 8B442458 		movl	88(%rsp), %eax
 348              	.LVL24:
  85:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_X = int_green_X;
 349              		.loc 1 85 14 view .LVU108
 350 004a 44894424 		movl	%r8d, 8(%rsp)
 350      08
  86:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Y = int_green_Y;
 351              		.loc 1 86 4 is_stmt 1 view .LVU109
  88:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_X = int_blue_X;
 352              		.loc 1 88 16 is_stmt 0 view .LVU110
 353 004f 89442414 		movl	%eax, 20(%rsp)
  89:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Y = int_blue_Y;
 354              		.loc 1 89 15 view .LVU111
 355 0053 8B442460 		movl	96(%rsp), %eax
  86:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Y = int_green_Y;
 356              		.loc 1 86 16 view .LVU112
 357 0057 44894C24 		movl	%r9d, 12(%rsp)
 357      0C
  87:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Z = int_green_Z;
 358              		.loc 1 87 4 is_stmt 1 view .LVU113
  88:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_X = int_blue_X;
 359              		.loc 1 88 4 view .LVU114
  89:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Y = int_blue_Y;
 360              		.loc 1 89 4 view .LVU115
  89:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Y = int_blue_Y;
 361              		.loc 1 89 15 is_stmt 0 view .LVU116
 362 005c 89442418 		movl	%eax, 24(%rsp)
  90:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Z = int_blue_Z;
 363              		.loc 1 90 4 is_stmt 1 view .LVU117
  90:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Z = int_blue_Z;
 364              		.loc 1 90 15 is_stmt 0 view .LVU118
 365 0060 8B442468 		movl	104(%rsp), %eax
 366 0064 8944241C 		movl	%eax, 28(%rsp)
  91:fltk-1.3.4-1/png/pngset.c **** 
 367              		.loc 1 91 4 is_stmt 1 view .LVU119
  91:fltk-1.3.4-1/png/pngset.c **** 
 368              		.loc 1 91 15 is_stmt 0 view .LVU120
 369 0068 8B442470 		movl	112(%rsp), %eax
 370 006c 89442420 		movl	%eax, 32(%rsp)
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 371              		.loc 1 93 4 is_stmt 1 view .LVU121
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 372              		.loc 1 93 8 is_stmt 0 view .LVU122
 373 0070 E8000000 		call	png_colorspace_set_endpoints@PLT
 373      00
 374              	.LVL25:
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 375              		.loc 1 93 7 view .LVU123
 376 0075 85C0     		testl	%eax, %eax
 377 0077 7405     		je	.L35
  95:fltk-1.3.4-1/png/pngset.c **** 
 378              		.loc 1 95 7 is_stmt 1 view .LVU124
  95:fltk-1.3.4-1/png/pngset.c **** 
 379              		.loc 1 95 34 is_stmt 0 view .LVU125
 380 0079 66834D7E 		orw	$16, 126(%rbp)
 380      10
 381              	.L35:
  97:fltk-1.3.4-1/png/pngset.c **** }
 382              		.loc 1 97 4 is_stmt 1 view .LVU126
 383 007e 4889EE   		movq	%rbp, %rsi
 384 0081 4C89E7   		movq	%r12, %rdi
 385 0084 E8000000 		call	png_colorspace_sync_info@PLT
 385      00
 386              	.LVL26:
 387              	.L33:
  97:fltk-1.3.4-1/png/pngset.c **** }
 388              		.loc 1 97 4 is_stmt 0 view .LVU127
 389              	.LBE80:
 390              	.LBE78:
  98:fltk-1.3.4-1/png/pngset.c **** 
 391              		.loc 1 98 1 view .LVU128
 392 0089 488B4424 		movq	40(%rsp), %rax
 392      28
 393 008e 64483304 		xorq	%fs:40, %rax
 393      25280000 
 393      00
 394 0097 7508     		jne	.L41
 395 0099 4883C438 		addq	$56, %rsp
 396              		.cfi_remember_state
 397              		.cfi_def_cfa_offset 24
 398 009d 5D       		popq	%rbp
 399              		.cfi_def_cfa_offset 16
 400 009e 415C     		popq	%r12
 401              		.cfi_def_cfa_offset 8
 402 00a0 C3       		ret
 403              	.L41:
 404              		.cfi_restore_state
 405 00a1 E8000000 		call	__stack_chk_fail@PLT
 405      00
 406              	.LVL27:
 407              		.cfi_endproc
 408              	.LFE43:
 410              		.section	.rodata.png_set_cHRM.str1.1,"aMS",@progbits,1
 411              	.LC2:
 412 0000 6348524D 		.string	"cHRM Blue Y"
 412      20426C75 
 412      65205900 
 413              	.LC3:
 414 000c 6348524D 		.string	"cHRM Blue X"
 414      20426C75 
 414      65205800 
 415              	.LC4:
 416 0018 6348524D 		.string	"cHRM Green Y"
 416      20477265 
 416      656E2059 
 416      00
 417              	.LC5:
 418 0025 6348524D 		.string	"cHRM Green X"
 418      20477265 
 418      656E2058 
 418      00
 419              	.LC6:
 420 0032 6348524D 		.string	"cHRM Red Y"
 420      20526564 
 420      205900
 421              	.LC7:
 422 003d 6348524D 		.string	"cHRM Red X"
 422      20526564 
 422      205800
 423              	.LC8:
 424 0048 6348524D 		.string	"cHRM White Y"
 424      20576869 
 424      74652059 
 424      00
 425              	.LC9:
 426 0055 6348524D 		.string	"cHRM White X"
 426      20576869 
 426      74652058 
 426      00
 427              		.section	.text.png_set_cHRM,"ax",@progbits
 428              		.p2align 4
 429              		.globl	png_set_cHRM
 431              	png_set_cHRM:
 432              	.LVL28:
 433              	.LFB44:
 105:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_fixed(png_ptr, info_ptr,
 434              		.loc 1 105 1 is_stmt 1 view -0
 435              		.cfi_startproc
 105:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_fixed(png_ptr, info_ptr,
 436              		.loc 1 105 1 is_stmt 0 view .LVU130
 437 0000 F30F1EFA 		endbr64
 438 0004 4157     		pushq	%r15
 439              		.cfi_def_cfa_offset 16
 440              		.cfi_offset 15, -16
 441 0006 4156     		pushq	%r14
 442              		.cfi_def_cfa_offset 24
 443              		.cfi_offset 14, -24
 444 0008 4155     		pushq	%r13
 445              		.cfi_def_cfa_offset 32
 446              		.cfi_offset 13, -32
 447 000a 4154     		pushq	%r12
 448              		.cfi_def_cfa_offset 40
 449              		.cfi_offset 12, -40
 450 000c 4989F4   		movq	%rsi, %r12
 106:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_x, "cHRM White X"),
 451              		.loc 1 106 4 view .LVU131
 452 000f 488D3500 		leaq	.LC2(%rip), %rsi
 452      000000
 453              	.LVL29:
 105:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_fixed(png_ptr, info_ptr,
 454              		.loc 1 105 1 view .LVU132
 455 0016 55       		pushq	%rbp
 456              		.cfi_def_cfa_offset 48
 457              		.cfi_offset 6, -48
 458 0017 4889FD   		movq	%rdi, %rbp
 459 001a 53       		pushq	%rbx
 460              		.cfi_def_cfa_offset 56
 461              		.cfi_offset 3, -56
 462 001b 4883EC78 		subq	$120, %rsp
 463              		.cfi_def_cfa_offset 176
 105:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_fixed(png_ptr, info_ptr,
 464              		.loc 1 105 1 view .LVU133
 465 001f F20F114C 		movsd	%xmm1, 48(%rsp)
 465      2430
 466 0025 F20F1154 		movsd	%xmm2, 40(%rsp)
 466      2428
 467 002b F20F115C 		movsd	%xmm3, 32(%rsp)
 467      2420
 468 0031 F20F1164 		movsd	%xmm4, 24(%rsp)
 468      2418
 469 0037 F20F116C 		movsd	%xmm5, 16(%rsp)
 469      2410
 470 003d F20F1144 		movsd	%xmm0, 56(%rsp)
 470      2438
 471 0043 660F28C7 		movapd	%xmm7, %xmm0
 472              	.LVL30:
 105:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_fixed(png_ptr, info_ptr,
 473              		.loc 1 105 1 view .LVU134
 474 0047 F20F1174 		movsd	%xmm6, 8(%rsp)
 474      2408
 475 004d 64488B04 		movq	%fs:40, %rax
 475      25280000 
 475      00
 476 0056 48894424 		movq	%rax, 104(%rsp)
 476      68
 477 005b 31C0     		xorl	%eax, %eax
 106:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_x, "cHRM White X"),
 478              		.loc 1 106 4 is_stmt 1 view .LVU135
 479 005d E8000000 		call	png_fixed@PLT
 479      00
 480              	.LVL31:
 106:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_x, "cHRM White X"),
 481              		.loc 1 106 4 is_stmt 0 view .LVU136
 482 0062 F20F1074 		movsd	8(%rsp), %xmm6
 482      2408
 483 0068 488D3500 		leaq	.LC3(%rip), %rsi
 483      000000
 484 006f 4889EF   		movq	%rbp, %rdi
 485 0072 89C3     		movl	%eax, %ebx
 486 0074 660F28C6 		movapd	%xmm6, %xmm0
 487 0078 E8000000 		call	png_fixed@PLT
 487      00
 488              	.LVL32:
 489 007d F20F106C 		movsd	16(%rsp), %xmm5
 489      2410
 490 0083 488D3500 		leaq	.LC4(%rip), %rsi
 490      000000
 491 008a 4889EF   		movq	%rbp, %rdi
 492 008d 89442408 		movl	%eax, 8(%rsp)
 493              	.LVL33:
 106:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_x, "cHRM White X"),
 494              		.loc 1 106 4 view .LVU137
 495 0091 660F28C5 		movapd	%xmm5, %xmm0
 496 0095 E8000000 		call	png_fixed@PLT
 496      00
 497              	.LVL34:
 498 009a F20F1064 		movsd	24(%rsp), %xmm4
 498      2418
 499 00a0 488D3500 		leaq	.LC5(%rip), %rsi
 499      000000
 500 00a7 4889EF   		movq	%rbp, %rdi
 501 00aa 89442410 		movl	%eax, 16(%rsp)
 502              	.LVL35:
 106:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_x, "cHRM White X"),
 503              		.loc 1 106 4 view .LVU138
 504 00ae 660F28C4 		movapd	%xmm4, %xmm0
 505 00b2 E8000000 		call	png_fixed@PLT
 505      00
 506              	.LVL36:
 507 00b7 F20F105C 		movsd	32(%rsp), %xmm3
 507      2420
 508 00bd 488D3500 		leaq	.LC6(%rip), %rsi
 508      000000
 509 00c4 4889EF   		movq	%rbp, %rdi
 510 00c7 4189C5   		movl	%eax, %r13d
 511 00ca 660F28C3 		movapd	%xmm3, %xmm0
 512 00ce E8000000 		call	png_fixed@PLT
 512      00
 513              	.LVL37:
 514 00d3 F20F1054 		movsd	40(%rsp), %xmm2
 514      2428
 515 00d9 488D3500 		leaq	.LC7(%rip), %rsi
 515      000000
 516 00e0 4889EF   		movq	%rbp, %rdi
 517 00e3 4189C6   		movl	%eax, %r14d
 518 00e6 660F28C2 		movapd	%xmm2, %xmm0
 519 00ea E8000000 		call	png_fixed@PLT
 519      00
 520              	.LVL38:
 521 00ef F20F104C 		movsd	48(%rsp), %xmm1
 521      2430
 522 00f5 488D3500 		leaq	.LC8(%rip), %rsi
 522      000000
 523 00fc 4889EF   		movq	%rbp, %rdi
 524 00ff 4189C7   		movl	%eax, %r15d
 525 0102 660F28C1 		movapd	%xmm1, %xmm0
 526 0106 E8000000 		call	png_fixed@PLT
 526      00
 527              	.LVL39:
 528 010b F2440F10 		movsd	56(%rsp), %xmm8
 528      442438
 529 0112 488D3500 		leaq	.LC9(%rip), %rsi
 529      000000
 530 0119 4889EF   		movq	%rbp, %rdi
 531 011c 89442418 		movl	%eax, 24(%rsp)
 532              	.LVL40:
 106:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, white_x, "cHRM White X"),
 533              		.loc 1 106 4 view .LVU139
 534 0120 66410F28 		movapd	%xmm8, %xmm0
 534      C0
 535 0125 E8000000 		call	png_fixed@PLT
 535      00
 536              	.LVL41:
 537              	.LBB85:
 538              	.LBI85:
  40:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point white_x, png_fixed_point white_y, png_fixed_point red_x,
 539              		.loc 1 40 1 is_stmt 1 view .LVU140
 540              	.LBB86:
  45:fltk-1.3.4-1/png/pngset.c **** 
 541              		.loc 1 45 4 view .LVU141
  47:fltk-1.3.4-1/png/pngset.c **** 
 542              		.loc 1 47 4 view .LVU142
  49:fltk-1.3.4-1/png/pngset.c ****       return;
 543              		.loc 1 49 4 view .LVU143
  49:fltk-1.3.4-1/png/pngset.c ****       return;
 544              		.loc 1 49 7 is_stmt 0 view .LVU144
 545 012a 4885ED   		testq	%rbp, %rbp
 546 012d 7461     		je	.L42
 547 012f 4D85E4   		testq	%r12, %r12
 548 0132 745C     		je	.L42
 549              	.LVL42:
 550              	.LBB87:
 551              	.LBI87:
  40:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point white_x, png_fixed_point white_y, png_fixed_point red_x,
 552              		.loc 1 40 1 is_stmt 1 view .LVU145
 553              	.LBB88:
  52:fltk-1.3.4-1/png/pngset.c ****    xy.redy = red_y;
 554              		.loc 1 52 4 view .LVU146
  55:fltk-1.3.4-1/png/pngset.c ****    xy.bluex = blue_x;
 555              		.loc 1 55 14 is_stmt 0 view .LVU147
 556 0134 8B4C2410 		movl	16(%rsp), %ecx
  56:fltk-1.3.4-1/png/pngset.c ****    xy.bluey = blue_y;
 557              		.loc 1 56 13 view .LVU148
 558 0138 8B542408 		movl	8(%rsp), %edx
  58:fltk-1.3.4-1/png/pngset.c ****    xy.whitey = white_y;
 559              		.loc 1 58 14 view .LVU149
 560 013c 89442458 		movl	%eax, 88(%rsp)
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 561              		.loc 1 61 8 view .LVU150
 562 0140 4889EF   		movq	%rbp, %rdi
  59:fltk-1.3.4-1/png/pngset.c **** 
 563              		.loc 1 59 14 view .LVU151
 564 0143 8B442418 		movl	24(%rsp), %eax
 565              	.LVL43:
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 566              		.loc 1 61 51 view .LVU152
 567 0147 498D7424 		leaq	52(%r12), %rsi
 567      34
  52:fltk-1.3.4-1/png/pngset.c ****    xy.redy = red_y;
 568              		.loc 1 52 12 view .LVU153
 569 014c 44897C24 		movl	%r15d, 64(%rsp)
 569      40
  53:fltk-1.3.4-1/png/pngset.c ****    xy.greenx = green_x;
 570              		.loc 1 53 4 is_stmt 1 view .LVU154
  55:fltk-1.3.4-1/png/pngset.c ****    xy.bluex = blue_x;
 571              		.loc 1 55 14 is_stmt 0 view .LVU155
 572 0151 894C244C 		movl	%ecx, 76(%rsp)
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 573              		.loc 1 61 8 view .LVU156
 574 0155 B9020000 		movl	$2, %ecx
 574      00
  56:fltk-1.3.4-1/png/pngset.c ****    xy.bluey = blue_y;
 575              		.loc 1 56 13 view .LVU157
 576 015a 89542450 		movl	%edx, 80(%rsp)
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 577              		.loc 1 61 8 view .LVU158
 578 015e 488D5424 		leaq	64(%rsp), %rdx
 578      40
  53:fltk-1.3.4-1/png/pngset.c ****    xy.greenx = green_x;
 579              		.loc 1 53 12 view .LVU159
 580 0163 44897424 		movl	%r14d, 68(%rsp)
 580      44
  54:fltk-1.3.4-1/png/pngset.c ****    xy.greeny = green_y;
 581              		.loc 1 54 4 is_stmt 1 view .LVU160
  54:fltk-1.3.4-1/png/pngset.c ****    xy.greeny = green_y;
 582              		.loc 1 54 14 is_stmt 0 view .LVU161
 583 0168 44896C24 		movl	%r13d, 72(%rsp)
 583      48
  55:fltk-1.3.4-1/png/pngset.c ****    xy.bluex = blue_x;
 584              		.loc 1 55 4 is_stmt 1 view .LVU162
  56:fltk-1.3.4-1/png/pngset.c ****    xy.bluey = blue_y;
 585              		.loc 1 56 4 view .LVU163
  57:fltk-1.3.4-1/png/pngset.c ****    xy.whitex = white_x;
 586              		.loc 1 57 4 view .LVU164
  57:fltk-1.3.4-1/png/pngset.c ****    xy.whitex = white_x;
 587              		.loc 1 57 13 is_stmt 0 view .LVU165
 588 016d 895C2454 		movl	%ebx, 84(%rsp)
  58:fltk-1.3.4-1/png/pngset.c ****    xy.whitey = white_y;
 589              		.loc 1 58 4 is_stmt 1 view .LVU166
  59:fltk-1.3.4-1/png/pngset.c **** 
 590              		.loc 1 59 4 view .LVU167
  59:fltk-1.3.4-1/png/pngset.c **** 
 591              		.loc 1 59 14 is_stmt 0 view .LVU168
 592 0171 8944245C 		movl	%eax, 92(%rsp)
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 593              		.loc 1 61 4 is_stmt 1 view .LVU169
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 594              		.loc 1 61 8 is_stmt 0 view .LVU170
 595 0175 E8000000 		call	png_colorspace_set_chromaticities@PLT
 595      00
 596              	.LVL44:
  61:fltk-1.3.4-1/png/pngset.c ****        2/* override with app values*/) != 0)
 597              		.loc 1 61 7 view .LVU171
 598 017a 85C0     		testl	%eax, %eax
 599 017c 7407     		je	.L44
  63:fltk-1.3.4-1/png/pngset.c **** 
 600              		.loc 1 63 7 is_stmt 1 view .LVU172
  63:fltk-1.3.4-1/png/pngset.c **** 
 601              		.loc 1 63 34 is_stmt 0 view .LVU173
 602 017e 6641834C 		orw	$16, 126(%r12)
 602      247E10
 603              	.L44:
  65:fltk-1.3.4-1/png/pngset.c **** }
 604              		.loc 1 65 4 is_stmt 1 view .LVU174
 605 0185 4C89E6   		movq	%r12, %rsi
 606 0188 4889EF   		movq	%rbp, %rdi
 607 018b E8000000 		call	png_colorspace_sync_info@PLT
 607      00
 608              	.LVL45:
 609              	.L42:
  65:fltk-1.3.4-1/png/pngset.c **** }
 610              		.loc 1 65 4 is_stmt 0 view .LVU175
 611              	.LBE88:
 612              	.LBE87:
 613              	.LBE86:
 614              	.LBE85:
 115:fltk-1.3.4-1/png/pngset.c **** 
 615              		.loc 1 115 1 view .LVU176
 616 0190 488B4424 		movq	104(%rsp), %rax
 616      68
 617 0195 64483304 		xorq	%fs:40, %rax
 617      25280000 
 617      00
 618 019e 750F     		jne	.L50
 619 01a0 4883C478 		addq	$120, %rsp
 620              		.cfi_remember_state
 621              		.cfi_def_cfa_offset 56
 622 01a4 5B       		popq	%rbx
 623              		.cfi_def_cfa_offset 48
 624 01a5 5D       		popq	%rbp
 625              		.cfi_def_cfa_offset 40
 626              	.LVL46:
 115:fltk-1.3.4-1/png/pngset.c **** 
 627              		.loc 1 115 1 view .LVU177
 628 01a6 415C     		popq	%r12
 629              		.cfi_def_cfa_offset 32
 630              	.LVL47:
 115:fltk-1.3.4-1/png/pngset.c **** 
 631              		.loc 1 115 1 view .LVU178
 632 01a8 415D     		popq	%r13
 633              		.cfi_def_cfa_offset 24
 634 01aa 415E     		popq	%r14
 635              		.cfi_def_cfa_offset 16
 636 01ac 415F     		popq	%r15
 637              		.cfi_def_cfa_offset 8
 638 01ae C3       		ret
 639              	.LVL48:
 640              	.L50:
 641              		.cfi_restore_state
 115:fltk-1.3.4-1/png/pngset.c **** 
 642              		.loc 1 115 1 view .LVU179
 643 01af E8000000 		call	__stack_chk_fail@PLT
 643      00
 644              	.LVL49:
 645              		.cfi_endproc
 646              	.LFE44:
 648              		.section	.rodata.png_set_cHRM_XYZ.str1.1,"aMS",@progbits,1
 649              	.LC10:
 650 0000 6348524D 		.string	"cHRM Red Z"
 650      20526564 
 650      205A00
 651              		.section	.text.png_set_cHRM_XYZ,"ax",@progbits
 652              		.p2align 4
 653              		.globl	png_set_cHRM_XYZ
 655              	png_set_cHRM_XYZ:
 656              	.LVL50:
 657              	.LFB45:
 121:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_XYZ_fixed(png_ptr, info_ptr,
 658              		.loc 1 121 1 is_stmt 1 view -0
 659              		.cfi_startproc
 121:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_XYZ_fixed(png_ptr, info_ptr,
 660              		.loc 1 121 1 is_stmt 0 view .LVU181
 661 0000 F30F1EFA 		endbr64
 662 0004 4157     		pushq	%r15
 663              		.cfi_def_cfa_offset 16
 664              		.cfi_offset 15, -16
 665 0006 4156     		pushq	%r14
 666              		.cfi_def_cfa_offset 24
 667              		.cfi_offset 14, -24
 668 0008 4155     		pushq	%r13
 669              		.cfi_def_cfa_offset 32
 670              		.cfi_offset 13, -32
 671 000a 4154     		pushq	%r12
 672              		.cfi_def_cfa_offset 40
 673              		.cfi_offset 12, -40
 674 000c 4989F4   		movq	%rsi, %r12
 122:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 675              		.loc 1 122 4 view .LVU182
 676 000f 488D3500 		leaq	.LC10(%rip), %rsi
 676      000000
 677              	.LVL51:
 121:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_XYZ_fixed(png_ptr, info_ptr,
 678              		.loc 1 121 1 view .LVU183
 679 0016 55       		pushq	%rbp
 680              		.cfi_def_cfa_offset 48
 681              		.cfi_offset 6, -48
 682 0017 4889FD   		movq	%rdi, %rbp
 683 001a 53       		pushq	%rbx
 684              		.cfi_def_cfa_offset 56
 685              		.cfi_offset 3, -56
 686 001b 4881EC88 		subq	$136, %rsp
 686      000000
 687              		.cfi_def_cfa_offset 192
 121:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_XYZ_fixed(png_ptr, info_ptr,
 688              		.loc 1 121 1 view .LVU184
 689 0022 F20F1144 		movsd	%xmm0, 64(%rsp)
 689      2440
 122:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 690              		.loc 1 122 4 view .LVU185
 691 0028 F20F1084 		movsd	192(%rsp), %xmm0
 691      24C00000 
 691      00
 692              	.LVL52:
 121:fltk-1.3.4-1/png/pngset.c ****    png_set_cHRM_XYZ_fixed(png_ptr, info_ptr,
 693              		.loc 1 121 1 view .LVU186
 694 0031 F20F114C 		movsd	%xmm1, 56(%rsp)
 694      2438
 695 0037 F20F1154 		movsd	%xmm2, 48(%rsp)
 695      2430
 696 003d F20F115C 		movsd	%xmm3, 40(%rsp)
 696      2428
 697 0043 F20F1164 		movsd	%xmm4, 32(%rsp)
 697      2420
 698 0049 F20F116C 		movsd	%xmm5, 24(%rsp)
 698      2418
 699 004f F20F1174 		movsd	%xmm6, 16(%rsp)
 699      2410
 700 0055 F20F117C 		movsd	%xmm7, 8(%rsp)
 700      2408
 701 005b 64488B04 		movq	%fs:40, %rax
 701      25280000 
 701      00
 702 0064 48894424 		movq	%rax, 120(%rsp)
 702      78
 703 0069 31C0     		xorl	%eax, %eax
 122:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 704              		.loc 1 122 4 is_stmt 1 view .LVU187
 705 006b E8000000 		call	png_fixed@PLT
 705      00
 706              	.LVL53:
 122:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 707              		.loc 1 122 4 is_stmt 0 view .LVU188
 708 0070 F20F107C 		movsd	8(%rsp), %xmm7
 708      2408
 709 0076 488D3500 		leaq	.LC6(%rip), %rsi
 709      000000
 710 007d 4889EF   		movq	%rbp, %rdi
 711 0080 8944244C 		movl	%eax, 76(%rsp)
 712 0084 660F28C7 		movapd	%xmm7, %xmm0
 713 0088 E8000000 		call	png_fixed@PLT
 713      00
 714              	.LVL54:
 715 008d F20F1074 		movsd	16(%rsp), %xmm6
 715      2410
 716 0093 488D3500 		leaq	.LC7(%rip), %rsi
 716      000000
 717 009a 4889EF   		movq	%rbp, %rdi
 718 009d 89442408 		movl	%eax, 8(%rsp)
 719              	.LVL55:
 122:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 720              		.loc 1 122 4 view .LVU189
 721 00a1 660F28C6 		movapd	%xmm6, %xmm0
 722 00a5 E8000000 		call	png_fixed@PLT
 722      00
 723              	.LVL56:
 724 00aa F20F106C 		movsd	24(%rsp), %xmm5
 724      2418
 725 00b0 488D3500 		leaq	.LC10(%rip), %rsi
 725      000000
 726 00b7 4889EF   		movq	%rbp, %rdi
 727 00ba 89442410 		movl	%eax, 16(%rsp)
 728              	.LVL57:
 122:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 729              		.loc 1 122 4 view .LVU190
 730 00be 660F28C5 		movapd	%xmm5, %xmm0
 731 00c2 E8000000 		call	png_fixed@PLT
 731      00
 732              	.LVL58:
 733 00c7 F20F1064 		movsd	32(%rsp), %xmm4
 733      2420
 734 00cd 488D3500 		leaq	.LC6(%rip), %rsi
 734      000000
 735 00d4 4889EF   		movq	%rbp, %rdi
 736 00d7 89C3     		movl	%eax, %ebx
 737 00d9 660F28C4 		movapd	%xmm4, %xmm0
 738 00dd E8000000 		call	png_fixed@PLT
 738      00
 739              	.LVL59:
 740 00e2 F20F105C 		movsd	40(%rsp), %xmm3
 740      2428
 741 00e8 488D3500 		leaq	.LC7(%rip), %rsi
 741      000000
 742 00ef 4889EF   		movq	%rbp, %rdi
 743 00f2 89442418 		movl	%eax, 24(%rsp)
 744              	.LVL60:
 122:fltk-1.3.4-1/png/pngset.c ****       png_fixed(png_ptr, red_X, "cHRM Red X"),
 745              		.loc 1 122 4 view .LVU191
 746 00f6 660F28C3 		movapd	%xmm3, %xmm0
 747 00fa E8000000 		call	png_fixed@PLT
 747      00
 748              	.LVL61:
 749 00ff F20F1054 		movsd	48(%rsp), %xmm2
 749      2430
 750 0105 488D3500 		leaq	.LC10(%rip), %rsi
 750      000000
 751 010c 4889EF   		movq	%rbp, %rdi
 752 010f 4189C5   		movl	%eax, %r13d
 753 0112 660F28C2 		movapd	%xmm2, %xmm0
 754 0116 E8000000 		call	png_fixed@PLT
 754      00
 755              	.LVL62:
 756 011b F20F104C 		movsd	56(%rsp), %xmm1
 756      2438
 757 0121 488D3500 		leaq	.LC6(%rip), %rsi
 757      000000
 758 0128 4889EF   		movq	%rbp, %rdi
 759 012b 4189C6   		movl	%eax, %r14d
 760 012e 660F28C1 		movapd	%xmm1, %xmm0
 761 0132 E8000000 		call	png_fixed@PLT
 761      00
 762              	.LVL63:
 763 0137 F2440F10 		movsd	64(%rsp), %xmm8
 763      442440
 764 013e 488D3500 		leaq	.LC7(%rip), %rsi
 764      000000
 765 0145 4889EF   		movq	%rbp, %rdi
 766 0148 4189C7   		movl	%eax, %r15d
 767 014b 66410F28 		movapd	%xmm8, %xmm0
 767      C0
 768 0150 E8000000 		call	png_fixed@PLT
 768      00
 769              	.LVL64:
 770              	.LBB93:
 771              	.LBI93:
  69:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_red_X, png_fixed_point int_red_Y,
 772              		.loc 1 69 1 is_stmt 1 view .LVU192
 773              	.LBB94:
  76:fltk-1.3.4-1/png/pngset.c **** 
 774              		.loc 1 76 4 view .LVU193
  78:fltk-1.3.4-1/png/pngset.c **** 
 775              		.loc 1 78 4 view .LVU194
  80:fltk-1.3.4-1/png/pngset.c ****       return;
 776              		.loc 1 80 4 view .LVU195
  80:fltk-1.3.4-1/png/pngset.c ****       return;
 777              		.loc 1 80 7 is_stmt 0 view .LVU196
 778 0155 4885ED   		testq	%rbp, %rbp
 779 0158 7469     		je	.L51
 780 015a 4D85E4   		testq	%r12, %r12
 781 015d 7464     		je	.L51
 782              	.LVL65:
 783              	.LBB95:
 784              	.LBI95:
  69:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point int_red_X, png_fixed_point int_red_Y,
 785              		.loc 1 69 1 is_stmt 1 view .LVU197
 786              	.LBB96:
  83:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Y = int_red_Y;
 787              		.loc 1 83 4 view .LVU198
  87:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Z = int_green_Z;
 788              		.loc 1 87 16 is_stmt 0 view .LVU199
 789 015f 8B4C2418 		movl	24(%rsp), %ecx
  89:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Y = int_blue_Y;
 790              		.loc 1 89 15 view .LVU200
 791 0163 8B542410 		movl	16(%rsp), %edx
  83:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Y = int_red_Y;
 792              		.loc 1 83 14 view .LVU201
 793 0167 89442450 		movl	%eax, 80(%rsp)
  84:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Z = int_red_Z;
 794              		.loc 1 84 4 is_stmt 1 view .LVU202
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 795              		.loc 1 93 8 is_stmt 0 view .LVU203
 796 016b 4889EF   		movq	%rbp, %rdi
  91:fltk-1.3.4-1/png/pngset.c **** 
 797              		.loc 1 91 15 view .LVU204
 798 016e 8B44244C 		movl	76(%rsp), %eax
 799              	.LVL66:
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 800              		.loc 1 93 46 view .LVU205
 801 0172 498D7424 		leaq	52(%r12), %rsi
 801      34
  84:fltk-1.3.4-1/png/pngset.c ****    XYZ.red_Z = int_red_Z;
 802              		.loc 1 84 14 view .LVU206
 803 0177 44897C24 		movl	%r15d, 84(%rsp)
 803      54
  85:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_X = int_green_X;
 804              		.loc 1 85 4 is_stmt 1 view .LVU207
  87:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Z = int_green_Z;
 805              		.loc 1 87 16 is_stmt 0 view .LVU208
 806 017c 894C2460 		movl	%ecx, 96(%rsp)
  90:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Z = int_blue_Z;
 807              		.loc 1 90 15 view .LVU209
 808 0180 8B4C2408 		movl	8(%rsp), %ecx
  89:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Y = int_blue_Y;
 809              		.loc 1 89 15 view .LVU210
 810 0184 89542468 		movl	%edx, 104(%rsp)
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 811              		.loc 1 93 8 view .LVU211
 812 0188 488D5424 		leaq	80(%rsp), %rdx
 812      50
 813              	.LVL67:
  90:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Z = int_blue_Z;
 814              		.loc 1 90 15 view .LVU212
 815 018d 894C246C 		movl	%ecx, 108(%rsp)
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 816              		.loc 1 93 8 view .LVU213
 817 0191 B9020000 		movl	$2, %ecx
 817      00
  85:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_X = int_green_X;
 818              		.loc 1 85 14 view .LVU214
 819 0196 44897424 		movl	%r14d, 88(%rsp)
 819      58
  86:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Y = int_green_Y;
 820              		.loc 1 86 4 is_stmt 1 view .LVU215
  86:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Y = int_green_Y;
 821              		.loc 1 86 16 is_stmt 0 view .LVU216
 822 019b 44896C24 		movl	%r13d, 92(%rsp)
 822      5C
  87:fltk-1.3.4-1/png/pngset.c ****    XYZ.green_Z = int_green_Z;
 823              		.loc 1 87 4 is_stmt 1 view .LVU217
  88:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_X = int_blue_X;
 824              		.loc 1 88 4 view .LVU218
  88:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_X = int_blue_X;
 825              		.loc 1 88 16 is_stmt 0 view .LVU219
 826 01a0 895C2464 		movl	%ebx, 100(%rsp)
  89:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Y = int_blue_Y;
 827              		.loc 1 89 4 is_stmt 1 view .LVU220
  90:fltk-1.3.4-1/png/pngset.c ****    XYZ.blue_Z = int_blue_Z;
 828              		.loc 1 90 4 view .LVU221
  91:fltk-1.3.4-1/png/pngset.c **** 
 829              		.loc 1 91 4 view .LVU222
  91:fltk-1.3.4-1/png/pngset.c **** 
 830              		.loc 1 91 15 is_stmt 0 view .LVU223
 831 01a4 89442470 		movl	%eax, 112(%rsp)
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 832              		.loc 1 93 4 is_stmt 1 view .LVU224
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 833              		.loc 1 93 8 is_stmt 0 view .LVU225
 834 01a8 E8000000 		call	png_colorspace_set_endpoints@PLT
 834      00
 835              	.LVL68:
  93:fltk-1.3.4-1/png/pngset.c ****        &XYZ, 2) != 0)
 836              		.loc 1 93 7 view .LVU226
 837 01ad 85C0     		testl	%eax, %eax
 838 01af 7407     		je	.L53
  95:fltk-1.3.4-1/png/pngset.c **** 
 839              		.loc 1 95 7 is_stmt 1 view .LVU227
  95:fltk-1.3.4-1/png/pngset.c **** 
 840              		.loc 1 95 34 is_stmt 0 view .LVU228
 841 01b1 6641834C 		orw	$16, 126(%r12)
 841      247E10
 842              	.L53:
  97:fltk-1.3.4-1/png/pngset.c **** }
 843              		.loc 1 97 4 is_stmt 1 view .LVU229
 844 01b8 4C89E6   		movq	%r12, %rsi
 845 01bb 4889EF   		movq	%rbp, %rdi
 846 01be E8000000 		call	png_colorspace_sync_info@PLT
 846      00
 847              	.LVL69:
 848              	.L51:
  97:fltk-1.3.4-1/png/pngset.c **** }
 849              		.loc 1 97 4 is_stmt 0 view .LVU230
 850              	.LBE96:
 851              	.LBE95:
 852              	.LBE94:
 853              	.LBE93:
 132:fltk-1.3.4-1/png/pngset.c **** #  endif /* FLOATING_POINT */
 854              		.loc 1 132 1 view .LVU231
 855 01c3 488B4424 		movq	120(%rsp), %rax
 855      78
 856 01c8 64483304 		xorq	%fs:40, %rax
 856      25280000 
 856      00
 857 01d1 7512     		jne	.L59
 858 01d3 4881C488 		addq	$136, %rsp
 858      000000
 859              		.cfi_remember_state
 860              		.cfi_def_cfa_offset 56
 861 01da 5B       		popq	%rbx
 862              		.cfi_def_cfa_offset 48
 863 01db 5D       		popq	%rbp
 864              		.cfi_def_cfa_offset 40
 865              	.LVL70:
 132:fltk-1.3.4-1/png/pngset.c **** #  endif /* FLOATING_POINT */
 866              		.loc 1 132 1 view .LVU232
 867 01dc 415C     		popq	%r12
 868              		.cfi_def_cfa_offset 32
 869              	.LVL71:
 132:fltk-1.3.4-1/png/pngset.c **** #  endif /* FLOATING_POINT */
 870              		.loc 1 132 1 view .LVU233
 871 01de 415D     		popq	%r13
 872              		.cfi_def_cfa_offset 24
 873 01e0 415E     		popq	%r14
 874              		.cfi_def_cfa_offset 16
 875 01e2 415F     		popq	%r15
 876              		.cfi_def_cfa_offset 8
 877 01e4 C3       		ret
 878              	.LVL72:
 879              	.L59:
 880              		.cfi_restore_state
 132:fltk-1.3.4-1/png/pngset.c **** #  endif /* FLOATING_POINT */
 881              		.loc 1 132 1 view .LVU234
 882 01e5 E8000000 		call	__stack_chk_fail@PLT
 882      00
 883              	.LVL73:
 884              		.cfi_endproc
 885              	.LFE45:
 887              		.section	.text.png_set_gAMA_fixed,"ax",@progbits
 888              		.p2align 4
 889              		.globl	png_set_gAMA_fixed
 891              	png_set_gAMA_fixed:
 892              	.LVL74:
 893              	.LFB46:
 141:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "gAMA");
 894              		.loc 1 141 1 is_stmt 1 view -0
 895              		.cfi_startproc
 141:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "gAMA");
 896              		.loc 1 141 1 is_stmt 0 view .LVU236
 897 0000 F30F1EFA 		endbr64
 142:fltk-1.3.4-1/png/pngset.c **** 
 898              		.loc 1 142 4 is_stmt 1 view .LVU237
 144:fltk-1.3.4-1/png/pngset.c ****       return;
 899              		.loc 1 144 4 view .LVU238
 144:fltk-1.3.4-1/png/pngset.c ****       return;
 900              		.loc 1 144 7 is_stmt 0 view .LVU239
 901 0004 4885FF   		testq	%rdi, %rdi
 902 0007 7447     		je	.L63
 141:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "gAMA");
 903              		.loc 1 141 1 view .LVU240
 904 0009 4154     		pushq	%r12
 905              		.cfi_def_cfa_offset 16
 906              		.cfi_offset 12, -16
 907 000b 4989F4   		movq	%rsi, %r12
 908 000e 55       		pushq	%rbp
 909              		.cfi_def_cfa_offset 24
 910              		.cfi_offset 6, -24
 911 000f 4883EC08 		subq	$8, %rsp
 912              		.cfi_def_cfa_offset 32
 144:fltk-1.3.4-1/png/pngset.c ****       return;
 913              		.loc 1 144 7 view .LVU241
 914 0013 4885F6   		testq	%rsi, %rsi
 915 0016 7428     		je	.L60
 916              	.LBB99:
 917              	.LBB100:
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 918              		.loc 1 147 38 view .LVU242
 919 0018 488D7634 		leaq	52(%rsi), %rsi
 920              	.LVL75:
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 921              		.loc 1 147 38 view .LVU243
 922 001c 4889FD   		movq	%rdi, %rbp
 923              	.LVL76:
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 924              		.loc 1 147 38 view .LVU244
 925              	.LBE100:
 926              	.LBI99:
 139:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point file_gamma)
 927              		.loc 1 139 1 is_stmt 1 view .LVU245
 928              	.LBB101:
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 929              		.loc 1 147 4 view .LVU246
 930 001f E8000000 		call	png_colorspace_set_gamma@PLT
 930      00
 931              	.LVL77:
 148:fltk-1.3.4-1/png/pngset.c **** }
 932              		.loc 1 148 4 view .LVU247
 933              	.LBE101:
 934              	.LBE99:
 149:fltk-1.3.4-1/png/pngset.c **** 
 935              		.loc 1 149 1 is_stmt 0 view .LVU248
 936 0024 4883C408 		addq	$8, %rsp
 937              		.cfi_remember_state
 938              		.cfi_def_cfa_offset 24
 939              	.LBB104:
 940              	.LBB102:
 148:fltk-1.3.4-1/png/pngset.c **** }
 941              		.loc 1 148 4 view .LVU249
 942 0028 4C89E6   		movq	%r12, %rsi
 943 002b 4889EF   		movq	%rbp, %rdi
 944              	.LBE102:
 945              	.LBE104:
 149:fltk-1.3.4-1/png/pngset.c **** 
 946              		.loc 1 149 1 view .LVU250
 947 002e 5D       		popq	%rbp
 948              		.cfi_restore 6
 949              		.cfi_def_cfa_offset 16
 950              	.LVL78:
 149:fltk-1.3.4-1/png/pngset.c **** 
 951              		.loc 1 149 1 view .LVU251
 952 002f 415C     		popq	%r12
 953              		.cfi_restore 12
 954              		.cfi_def_cfa_offset 8
 955              	.LVL79:
 956              	.LBB105:
 957              	.LBB103:
 148:fltk-1.3.4-1/png/pngset.c **** }
 958              		.loc 1 148 4 view .LVU252
 959 0031 E9000000 		jmp	png_colorspace_sync_info@PLT
 959      00
 960              	.LVL80:
 961 0036 662E0F1F 		.p2align 4,,10
 961      84000000 
 961      0000
 962              		.p2align 3
 963              	.L60:
 964              		.cfi_restore_state
 148:fltk-1.3.4-1/png/pngset.c **** }
 965              		.loc 1 148 4 view .LVU253
 966              	.LBE103:
 967              	.LBE105:
 149:fltk-1.3.4-1/png/pngset.c **** 
 968              		.loc 1 149 1 view .LVU254
 969 0040 4883C408 		addq	$8, %rsp
 970              		.cfi_def_cfa_offset 24
 971 0044 5D       		popq	%rbp
 972              		.cfi_def_cfa_offset 16
 973 0045 415C     		popq	%r12
 974              		.cfi_def_cfa_offset 8
 975 0047 C3       		ret
 976 0048 0F1F8400 		.p2align 4,,10
 976      00000000 
 977              		.p2align 3
 978              	.L63:
 979              		.cfi_restore 6
 980              		.cfi_restore 12
 981 0050 C3       		ret
 982              		.cfi_endproc
 983              	.LFE46:
 985              		.section	.rodata.png_set_gAMA.str1.1,"aMS",@progbits,1
 986              	.LC11:
 987 0000 706E675F 		.string	"png_set_gAMA"
 987      7365745F 
 987      67414D41 
 987      00
 988              		.section	.text.png_set_gAMA,"ax",@progbits
 989              		.p2align 4
 990              		.globl	png_set_gAMA
 992              	png_set_gAMA:
 993              	.LVL81:
 994              	.LFB47:
 154:fltk-1.3.4-1/png/pngset.c ****    png_set_gAMA_fixed(png_ptr, info_ptr, png_fixed(png_ptr, file_gamma,
 995              		.loc 1 154 1 is_stmt 1 view -0
 996              		.cfi_startproc
 154:fltk-1.3.4-1/png/pngset.c ****    png_set_gAMA_fixed(png_ptr, info_ptr, png_fixed(png_ptr, file_gamma,
 997              		.loc 1 154 1 is_stmt 0 view .LVU256
 998 0000 F30F1EFA 		endbr64
 155:fltk-1.3.4-1/png/pngset.c ****        "png_set_gAMA"));
 999              		.loc 1 155 4 is_stmt 1 view .LVU257
 154:fltk-1.3.4-1/png/pngset.c ****    png_set_gAMA_fixed(png_ptr, info_ptr, png_fixed(png_ptr, file_gamma,
 1000              		.loc 1 154 1 is_stmt 0 view .LVU258
 1001 0004 4154     		pushq	%r12
 1002              		.cfi_def_cfa_offset 16
 1003              		.cfi_offset 12, -16
 1004 0006 4989F4   		movq	%rsi, %r12
 155:fltk-1.3.4-1/png/pngset.c ****        "png_set_gAMA"));
 1005              		.loc 1 155 4 view .LVU259
 1006 0009 488D3500 		leaq	.LC11(%rip), %rsi
 1006      000000
 1007              	.LVL82:
 154:fltk-1.3.4-1/png/pngset.c ****    png_set_gAMA_fixed(png_ptr, info_ptr, png_fixed(png_ptr, file_gamma,
 1008              		.loc 1 154 1 view .LVU260
 1009 0010 55       		pushq	%rbp
 1010              		.cfi_def_cfa_offset 24
 1011              		.cfi_offset 6, -24
 1012 0011 4889FD   		movq	%rdi, %rbp
 1013 0014 4883EC08 		subq	$8, %rsp
 1014              		.cfi_def_cfa_offset 32
 155:fltk-1.3.4-1/png/pngset.c ****        "png_set_gAMA"));
 1015              		.loc 1 155 4 view .LVU261
 1016 0018 E8000000 		call	png_fixed@PLT
 1016      00
 1017              	.LVL83:
 1018              	.LBB110:
 1019              	.LBI110:
 139:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point file_gamma)
 1020              		.loc 1 139 1 is_stmt 1 view .LVU262
 1021              	.LBB111:
 142:fltk-1.3.4-1/png/pngset.c **** 
 1022              		.loc 1 142 4 view .LVU263
 144:fltk-1.3.4-1/png/pngset.c ****       return;
 1023              		.loc 1 144 4 view .LVU264
 144:fltk-1.3.4-1/png/pngset.c ****       return;
 1024              		.loc 1 144 7 is_stmt 0 view .LVU265
 1025 001d 4885ED   		testq	%rbp, %rbp
 1026 0020 742E     		je	.L66
 1027 0022 4D85E4   		testq	%r12, %r12
 1028 0025 7429     		je	.L66
 1029              	.LBB112:
 1030              	.LBB113:
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 1031              		.loc 1 147 38 view .LVU266
 1032 0027 498D7424 		leaq	52(%r12), %rsi
 1032      34
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 1033              		.loc 1 147 4 view .LVU267
 1034 002c 4889EF   		movq	%rbp, %rdi
 1035 002f 89C2     		movl	%eax, %edx
 1036              	.LVL84:
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 1037              		.loc 1 147 4 view .LVU268
 1038              	.LBE113:
 1039              	.LBI112:
 139:fltk-1.3.4-1/png/pngset.c ****     png_fixed_point file_gamma)
 1040              		.loc 1 139 1 is_stmt 1 view .LVU269
 1041              	.LBB114:
 147:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 1042              		.loc 1 147 4 view .LVU270
 1043 0031 E8000000 		call	png_colorspace_set_gamma@PLT
 1043      00
 1044              	.LVL85:
 148:fltk-1.3.4-1/png/pngset.c **** }
 1045              		.loc 1 148 4 view .LVU271
 1046              	.LBE114:
 1047              	.LBE112:
 1048              	.LBE111:
 1049              	.LBE110:
 157:fltk-1.3.4-1/png/pngset.c **** #  endif
 1050              		.loc 1 157 1 is_stmt 0 view .LVU272
 1051 0036 4883C408 		addq	$8, %rsp
 1052              		.cfi_remember_state
 1053              		.cfi_def_cfa_offset 24
 1054              	.LBB121:
 1055              	.LBB119:
 1056              	.LBB117:
 1057              	.LBB115:
 148:fltk-1.3.4-1/png/pngset.c **** }
 1058              		.loc 1 148 4 view .LVU273
 1059 003a 4C89E6   		movq	%r12, %rsi
 1060 003d 4889EF   		movq	%rbp, %rdi
 1061              	.LBE115:
 1062              	.LBE117:
 1063              	.LBE119:
 1064              	.LBE121:
 157:fltk-1.3.4-1/png/pngset.c **** #  endif
 1065              		.loc 1 157 1 view .LVU274
 1066 0040 5D       		popq	%rbp
 1067              		.cfi_def_cfa_offset 16
 1068              	.LVL86:
 157:fltk-1.3.4-1/png/pngset.c **** #  endif
 1069              		.loc 1 157 1 view .LVU275
 1070 0041 415C     		popq	%r12
 1071              		.cfi_def_cfa_offset 8
 1072              	.LVL87:
 1073              	.LBB122:
 1074              	.LBB120:
 1075              	.LBB118:
 1076              	.LBB116:
 148:fltk-1.3.4-1/png/pngset.c **** }
 1077              		.loc 1 148 4 view .LVU276
 1078 0043 E9000000 		jmp	png_colorspace_sync_info@PLT
 1078      00
 1079              	.LVL88:
 1080 0048 0F1F8400 		.p2align 4,,10
 1080      00000000 
 1081              		.p2align 3
 1082              	.L66:
 1083              		.cfi_restore_state
 148:fltk-1.3.4-1/png/pngset.c **** }
 1084              		.loc 1 148 4 view .LVU277
 1085              	.LBE116:
 1086              	.LBE118:
 1087              	.LBE120:
 1088              	.LBE122:
 157:fltk-1.3.4-1/png/pngset.c **** #  endif
 1089              		.loc 1 157 1 view .LVU278
 1090 0050 4883C408 		addq	$8, %rsp
 1091              		.cfi_def_cfa_offset 24
 1092 0054 5D       		popq	%rbp
 1093              		.cfi_def_cfa_offset 16
 1094              	.LVL89:
 157:fltk-1.3.4-1/png/pngset.c **** #  endif
 1095              		.loc 1 157 1 view .LVU279
 1096 0055 415C     		popq	%r12
 1097              		.cfi_def_cfa_offset 8
 1098              	.LVL90:
 157:fltk-1.3.4-1/png/pngset.c **** #  endif
 1099              		.loc 1 157 1 view .LVU280
 1100 0057 C3       		ret
 1101              		.cfi_endproc
 1102              	.LFE47:
 1104              		.section	.rodata.png_set_hIST.str1.8,"aMS",@progbits,1
 1105              		.align 8
 1106              	.LC12:
 1107 0000 496E7661 		.string	"Invalid palette size, hIST allocation skipped"
 1107      6C696420 
 1107      70616C65 
 1107      74746520 
 1107      73697A65 
 1108 002e 0000     		.align 8
 1109              	.LC13:
 1110 0030 496E7375 		.string	"Insufficient memory for hIST chunk data"
 1110      66666963 
 1110      69656E74 
 1110      206D656D 
 1110      6F727920 
 1111              		.section	.text.png_set_hIST,"ax",@progbits
 1112              		.p2align 4
 1113              		.globl	png_set_hIST
 1115              	png_set_hIST:
 1116              	.LVL91:
 1117              	.LFB48:
 165:fltk-1.3.4-1/png/pngset.c ****    int i;
 1118              		.loc 1 165 1 is_stmt 1 view -0
 1119              		.cfi_startproc
 165:fltk-1.3.4-1/png/pngset.c ****    int i;
 1120              		.loc 1 165 1 is_stmt 0 view .LVU282
 1121 0000 F30F1EFA 		endbr64
 166:fltk-1.3.4-1/png/pngset.c **** 
 1122              		.loc 1 166 4 is_stmt 1 view .LVU283
 168:fltk-1.3.4-1/png/pngset.c **** 
 1123              		.loc 1 168 4 view .LVU284
 170:fltk-1.3.4-1/png/pngset.c ****       return;
 1124              		.loc 1 170 4 view .LVU285
 170:fltk-1.3.4-1/png/pngset.c ****       return;
 1125              		.loc 1 170 7 is_stmt 0 view .LVU286
 1126 0004 4885FF   		testq	%rdi, %rdi
 1127 0007 0F84A300 		je	.L76
 1127      0000
 165:fltk-1.3.4-1/png/pngset.c ****    int i;
 1128              		.loc 1 165 1 view .LVU287
 1129 000d 4154     		pushq	%r12
 1130              		.cfi_def_cfa_offset 16
 1131              		.cfi_offset 12, -16
 1132 000f 55       		pushq	%rbp
 1133              		.cfi_def_cfa_offset 24
 1134              		.cfi_offset 6, -24
 1135 0010 53       		pushq	%rbx
 1136              		.cfi_def_cfa_offset 32
 1137              		.cfi_offset 3, -32
 1138 0011 4889F3   		movq	%rsi, %rbx
 170:fltk-1.3.4-1/png/pngset.c ****       return;
 1139              		.loc 1 170 7 view .LVU288
 1140 0014 4885F6   		testq	%rsi, %rsi
 1141 0017 7477     		je	.L69
 173:fltk-1.3.4-1/png/pngset.c ****        > PNG_MAX_PALETTE_LENGTH)
 1142              		.loc 1 173 35 view .LVU289
 1143 0019 0FB74620 		movzwl	32(%rsi), %eax
 1144 001d 4989FC   		movq	%rdi, %r12
 173:fltk-1.3.4-1/png/pngset.c ****        > PNG_MAX_PALETTE_LENGTH)
 1145              		.loc 1 173 4 is_stmt 1 view .LVU290
 176:fltk-1.3.4-1/png/pngset.c ****           "Invalid palette size, hIST allocation skipped");
 1146              		.loc 1 176 7 is_stmt 0 view .LVU291
 1147 0020 488D3500 		leaq	.LC12(%rip), %rsi
 1147      000000
 1148              	.LVL92:
 173:fltk-1.3.4-1/png/pngset.c ****        > PNG_MAX_PALETTE_LENGTH)
 1149              		.loc 1 173 35 view .LVU292
 1150 0027 83E801   		subl	$1, %eax
 173:fltk-1.3.4-1/png/pngset.c ****        > PNG_MAX_PALETTE_LENGTH)
 1151              		.loc 1 173 7 view .LVU293
 1152 002a 663DFF00 		cmpw	$255, %ax
 1153 002e 776C     		ja	.L79
 182:fltk-1.3.4-1/png/pngset.c **** 
 1154              		.loc 1 182 4 view .LVU294
 1155 0030 31C9     		xorl	%ecx, %ecx
 1156 0032 4889DE   		movq	%rbx, %rsi
 1157 0035 4889D5   		movq	%rdx, %rbp
 182:fltk-1.3.4-1/png/pngset.c **** 
 1158              		.loc 1 182 4 is_stmt 1 view .LVU295
 1159 0038 BA080000 		movl	$8, %edx
 1159      00
 1160              	.LVL93:
 182:fltk-1.3.4-1/png/pngset.c **** 
 1161              		.loc 1 182 4 is_stmt 0 view .LVU296
 1162 003d E8000000 		call	png_free_data@PLT
 1162      00
 1163              	.LVL94:
 187:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_uint_16))));
 1164              		.loc 1 187 4 is_stmt 1 view .LVU297
 187:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_uint_16))));
 1165              		.loc 1 187 21 is_stmt 0 view .LVU298
 1166 0042 BE000200 		movl	$512, %esi
 1166      00
 1167 0047 4C89E7   		movq	%r12, %rdi
 1168 004a E8000000 		call	png_malloc_warn@PLT
 1168      00
 1169              	.LVL95:
 187:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_uint_16))));
 1170              		.loc 1 187 19 view .LVU299
 1171 004f 488983F0 		movq	%rax, 240(%rbx)
 1171      000000
 190:fltk-1.3.4-1/png/pngset.c ****    {
 1172              		.loc 1 190 4 is_stmt 1 view .LVU300
 190:fltk-1.3.4-1/png/pngset.c ****    {
 1173              		.loc 1 190 7 is_stmt 0 view .LVU301
 1174 0056 4885C0   		testq	%rax, %rax
 1175 0059 743A     		je	.L80
 196:fltk-1.3.4-1/png/pngset.c **** 
 1176              		.loc 1 196 4 is_stmt 1 view .LVU302
 196:fltk-1.3.4-1/png/pngset.c **** 
 1177              		.loc 1 196 22 is_stmt 0 view .LVU303
 1178 005b 838B1C01 		orl	$8, 284(%rbx)
 1178      000008
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1179              		.loc 1 198 4 is_stmt 1 view .LVU304
 1180              	.LVL96:
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1181              		.loc 1 198 16 view .LVU305
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1182              		.loc 1 198 4 is_stmt 0 view .LVU306
 1183 0062 66837B20 		cmpw	$0, 32(%rbx)
 1183      00
 1184 0067 7423     		je	.L73
 1185 0069 31D2     		xorl	%edx, %edx
 1186 006b EB0A     		jmp	.L74
 1187              	.LVL97:
 1188 006d 0F1F00   		.p2align 4,,10
 1189              		.p2align 3
 1190              	.L81:
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1191              		.loc 1 198 4 view .LVU307
 1192 0070 488B83F0 		movq	240(%rbx), %rax
 1192      000000
 1193              	.L74:
 1194              	.LVL98:
 199:fltk-1.3.4-1/png/pngset.c **** 
 1195              		.loc 1 199 7 is_stmt 1 discriminator 3 view .LVU308
 199:fltk-1.3.4-1/png/pngset.c **** 
 1196              		.loc 1 199 31 is_stmt 0 discriminator 3 view .LVU309
 1197 0077 0FB74C55 		movzwl	0(%rbp,%rdx,2), %ecx
 1197      00
 199:fltk-1.3.4-1/png/pngset.c **** 
 1198              		.loc 1 199 25 discriminator 3 view .LVU310
 1199 007c 66890C50 		movw	%cx, (%rax,%rdx,2)
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1200              		.loc 1 198 43 is_stmt 1 discriminator 3 view .LVU311
 1201              	.LVL99:
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1202              		.loc 1 198 16 discriminator 3 view .LVU312
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1203              		.loc 1 198 28 is_stmt 0 discriminator 3 view .LVU313
 1204 0080 0FB74320 		movzwl	32(%rbx), %eax
 1205 0084 4883C201 		addq	$1, %rdx
 1206              	.LVL100:
 198:fltk-1.3.4-1/png/pngset.c ****       info_ptr->hist[i] = hist[i];
 1207              		.loc 1 198 4 discriminator 3 view .LVU314
 1208 0088 39D0     		cmpl	%edx, %eax
 1209 008a 7FE4     		jg	.L81
 1210              	.L73:
 201:fltk-1.3.4-1/png/pngset.c **** }
 1211              		.loc 1 201 4 is_stmt 1 view .LVU315
 201:fltk-1.3.4-1/png/pngset.c **** }
 1212              		.loc 1 201 20 is_stmt 0 view .LVU316
 1213 008c 834B0840 		orl	$64, 8(%rbx)
 1214              	.LVL101:
 1215              	.L69:
 202:fltk-1.3.4-1/png/pngset.c **** #endif
 1216              		.loc 1 202 1 view .LVU317
 1217 0090 5B       		popq	%rbx
 1218              		.cfi_remember_state
 1219              		.cfi_def_cfa_offset 24
 1220              	.LVL102:
 202:fltk-1.3.4-1/png/pngset.c **** #endif
 1221              		.loc 1 202 1 view .LVU318
 1222 0091 5D       		popq	%rbp
 1223              		.cfi_def_cfa_offset 16
 1224 0092 415C     		popq	%r12
 1225              		.cfi_def_cfa_offset 8
 1226 0094 C3       		ret
 1227              	.LVL103:
 1228              	.L80:
 1229              		.cfi_restore_state
 192:fltk-1.3.4-1/png/pngset.c ****       return;
 1230              		.loc 1 192 7 is_stmt 1 view .LVU319
 1231 0095 488D3500 		leaq	.LC13(%rip), %rsi
 1231      000000
 1232              	.LVL104:
 1233              	.L79:
 202:fltk-1.3.4-1/png/pngset.c **** #endif
 1234              		.loc 1 202 1 is_stmt 0 view .LVU320
 1235 009c 5B       		popq	%rbx
 1236              		.cfi_restore 3
 1237              		.cfi_def_cfa_offset 24
 1238              	.LVL105:
 192:fltk-1.3.4-1/png/pngset.c ****       return;
 1239              		.loc 1 192 7 view .LVU321
 1240 009d 4C89E7   		movq	%r12, %rdi
 202:fltk-1.3.4-1/png/pngset.c **** #endif
 1241              		.loc 1 202 1 view .LVU322
 1242 00a0 5D       		popq	%rbp
 1243              		.cfi_restore 6
 1244              		.cfi_def_cfa_offset 16
 1245 00a1 415C     		popq	%r12
 1246              		.cfi_restore 12
 1247              		.cfi_def_cfa_offset 8
 1248              	.LVL106:
 192:fltk-1.3.4-1/png/pngset.c ****       return;
 1249              		.loc 1 192 7 view .LVU323
 1250 00a3 E9000000 		jmp	png_warning@PLT
 1250      00
 1251              	.LVL107:
 1252 00a8 0F1F8400 		.p2align 4,,10
 1252      00000000 
 1253              		.p2align 3
 1254              	.L76:
 192:fltk-1.3.4-1/png/pngset.c ****       return;
 1255              		.loc 1 192 7 view .LVU324
 1256 00b0 C3       		ret
 1257              		.cfi_endproc
 1258              	.LFE48:
 1260              		.section	.text.png_set_IHDR,"ax",@progbits
 1261              		.p2align 4
 1262              		.globl	png_set_IHDR
 1264              	png_set_IHDR:
 1265              	.LVL108:
 1266              	.LFB49:
 210:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "IHDR");
 1267              		.loc 1 210 1 is_stmt 1 view -0
 1268              		.cfi_startproc
 210:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "IHDR");
 1269              		.loc 1 210 1 is_stmt 0 view .LVU326
 1270 0000 F30F1EFA 		endbr64
 211:fltk-1.3.4-1/png/pngset.c **** 
 1271              		.loc 1 211 4 is_stmt 1 view .LVU327
 213:fltk-1.3.4-1/png/pngset.c ****       return;
 1272              		.loc 1 213 4 view .LVU328
 213:fltk-1.3.4-1/png/pngset.c ****       return;
 1273              		.loc 1 213 7 is_stmt 0 view .LVU329
 1274 0004 4885FF   		testq	%rdi, %rdi
 1275 0007 0F84A300 		je	.L94
 1275      0000
 210:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "IHDR");
 1276              		.loc 1 210 1 view .LVU330
 1277 000d 55       		pushq	%rbp
 1278              		.cfi_def_cfa_offset 16
 1279              		.cfi_offset 6, -16
 1280 000e 53       		pushq	%rbx
 1281              		.cfi_def_cfa_offset 24
 1282              		.cfi_offset 3, -24
 1283 000f 4889F3   		movq	%rsi, %rbx
 1284 0012 4883EC08 		subq	$8, %rsp
 1285              		.cfi_def_cfa_offset 32
 213:fltk-1.3.4-1/png/pngset.c ****       return;
 1286              		.loc 1 213 7 view .LVU331
 1287 0016 4885F6   		testq	%rsi, %rsi
 1288 0019 0F848A00 		je	.L82
 1288      0000
 217:fltk-1.3.4-1/png/pngset.c ****    info_ptr->bit_depth = (png_byte)bit_depth;
 1289              		.loc 1 217 21 view .LVU332
 1290 001f 894E04   		movl	%ecx, 4(%rsi)
 1291 0022 89D5     		movl	%edx, %ebp
 1292 0024 89CA     		movl	%ecx, %edx
 1293              	.LVL109:
 220:fltk-1.3.4-1/png/pngset.c ****    info_ptr->filter_type = (png_byte)filter_type;
 1294              		.loc 1 220 33 view .LVU333
 1295 0026 0FB64C24 		movzbl	40(%rsp), %ecx
 1295      28
 1296              	.LVL110:
 218:fltk-1.3.4-1/png/pngset.c ****    info_ptr->color_type = (png_byte)color_type;
 1297              		.loc 1 218 26 view .LVU334
 1298 002b 44884624 		movb	%r8b, 36(%rsi)
 1299 002f 4489C8   		movl	%r9d, %eax
 216:fltk-1.3.4-1/png/pngset.c ****    info_ptr->height = height;
 1300              		.loc 1 216 4 is_stmt 1 view .LVU335
 220:fltk-1.3.4-1/png/pngset.c ****    info_ptr->filter_type = (png_byte)filter_type;
 1301              		.loc 1 220 33 is_stmt 0 view .LVU336
 1302 0032 884E26   		movb	%cl, 38(%rsi)
 221:fltk-1.3.4-1/png/pngset.c ****    info_ptr->interlace_type = (png_byte)interlace_type;
 1303              		.loc 1 221 28 view .LVU337
 1304 0035 0FB64C24 		movzbl	48(%rsp), %ecx
 1304      30
 219:fltk-1.3.4-1/png/pngset.c ****    info_ptr->compression_type = (png_byte)compression_type;
 1305              		.loc 1 219 27 view .LVU338
 1306 003a 44884E25 		movb	%r9b, 37(%rsi)
 221:fltk-1.3.4-1/png/pngset.c ****    info_ptr->interlace_type = (png_byte)interlace_type;
 1307              		.loc 1 221 28 view .LVU339
 1308 003e 884E27   		movb	%cl, 39(%rsi)
 224:fltk-1.3.4-1/png/pngset.c ****        info_ptr->bit_depth, info_ptr->color_type, info_ptr->interlace_type,
 1309              		.loc 1 224 4 view .LVU340
 1310 0041 410FB6C8 		movzbl	%r8b, %ecx
 1311 0045 440FB6C0 		movzbl	%al, %r8d
 1312              	.LVL111:
 216:fltk-1.3.4-1/png/pngset.c ****    info_ptr->height = height;
 1313              		.loc 1 216 20 view .LVU341
 1314 0049 892E     		movl	%ebp, (%rsi)
 217:fltk-1.3.4-1/png/pngset.c ****    info_ptr->bit_depth = (png_byte)bit_depth;
 1315              		.loc 1 217 4 is_stmt 1 view .LVU342
 218:fltk-1.3.4-1/png/pngset.c ****    info_ptr->color_type = (png_byte)color_type;
 1316              		.loc 1 218 4 view .LVU343
 219:fltk-1.3.4-1/png/pngset.c ****    info_ptr->compression_type = (png_byte)compression_type;
 1317              		.loc 1 219 4 view .LVU344
 220:fltk-1.3.4-1/png/pngset.c ****    info_ptr->filter_type = (png_byte)filter_type;
 1318              		.loc 1 220 4 view .LVU345
 221:fltk-1.3.4-1/png/pngset.c ****    info_ptr->interlace_type = (png_byte)interlace_type;
 1319              		.loc 1 221 4 view .LVU346
 222:fltk-1.3.4-1/png/pngset.c **** 
 1320              		.loc 1 222 4 view .LVU347
 222:fltk-1.3.4-1/png/pngset.c **** 
 1321              		.loc 1 222 31 is_stmt 0 view .LVU348
 1322 004b 0FB67424 		movzbl	32(%rsp), %esi
 1322      20
 1323              	.LVL112:
 222:fltk-1.3.4-1/png/pngset.c **** 
 1324              		.loc 1 222 31 view .LVU349
 1325 0050 40887328 		movb	%sil, 40(%rbx)
 224:fltk-1.3.4-1/png/pngset.c ****        info_ptr->bit_depth, info_ptr->color_type, info_ptr->interlace_type,
 1326              		.loc 1 224 4 is_stmt 1 view .LVU350
 1327 0054 0FB67424 		movzbl	48(%rsp), %esi
 1327      30
 1328 0059 56       		pushq	%rsi
 1329              		.cfi_def_cfa_offset 40
 1330 005a 0FB67424 		movzbl	48(%rsp), %esi
 1330      30
 1331 005f 56       		pushq	%rsi
 1332              		.cfi_def_cfa_offset 48
 1333 0060 440FB64C 		movzbl	48(%rsp), %r9d
 1333      2430
 1334              	.LVL113:
 224:fltk-1.3.4-1/png/pngset.c ****        info_ptr->bit_depth, info_ptr->color_type, info_ptr->interlace_type,
 1335              		.loc 1 224 4 is_stmt 0 view .LVU351
 1336 0066 89EE     		movl	%ebp, %esi
 1337 0068 E8000000 		call	png_check_IHDR@PLT
 1337      00
 1338              	.LVL114:
 228:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 1;
 1339              		.loc 1 228 4 is_stmt 1 view .LVU352
 228:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 1;
 1340              		.loc 1 228 16 is_stmt 0 view .LVU353
 1341 006d 0FB65325 		movzbl	37(%rbx), %edx
 228:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 1;
 1342              		.loc 1 228 7 view .LVU354
 1343 0071 58       		popq	%rax
 1344              		.cfi_def_cfa_offset 40
 1345 0072 59       		popq	%rcx
 1346              		.cfi_def_cfa_offset 32
 1347 0073 80FA03   		cmpb	$3, %dl
 1348 0076 7468     		je	.L97
 231:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 3;
 1349              		.loc 1 231 9 is_stmt 1 view .LVU355
 231:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels = 3;
 1350              		.loc 1 231 12 is_stmt 0 view .LVU356
 1351 0078 F6C202   		testb	$2, %dl
 1352 007b 753B     		jne	.L98
 235:fltk-1.3.4-1/png/pngset.c **** 
 1353              		.loc 1 235 7 is_stmt 1 view .LVU357
 235:fltk-1.3.4-1/png/pngset.c **** 
 1354              		.loc 1 235 26 is_stmt 0 view .LVU358
 1355 007d C6432901 		movb	$1, 41(%rbx)
 1356 0081 B8010000 		movl	$1, %eax
 1356      00
 1357              	.L87:
 237:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels++;
 1358              		.loc 1 237 4 is_stmt 1 view .LVU359
 237:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels++;
 1359              		.loc 1 237 7 is_stmt 0 view .LVU360
 1360 0086 83E204   		andl	$4, %edx
 1361 0089 7406     		je	.L85
 238:fltk-1.3.4-1/png/pngset.c **** 
 1362              		.loc 1 238 7 is_stmt 1 view .LVU361
 238:fltk-1.3.4-1/png/pngset.c **** 
 1363              		.loc 1 238 25 is_stmt 0 view .LVU362
 1364 008b 83C001   		addl	$1, %eax
 1365 008e 884329   		movb	%al, 41(%rbx)
 1366              	.L85:
 240:fltk-1.3.4-1/png/pngset.c **** 
 1367              		.loc 1 240 4 is_stmt 1 view .LVU363
 240:fltk-1.3.4-1/png/pngset.c **** 
 1368              		.loc 1 240 28 is_stmt 0 view .LVU364
 1369 0091 F66324   		mulb	36(%rbx)
 240:fltk-1.3.4-1/png/pngset.c **** 
 1370              		.loc 1 240 26 view .LVU365
 1371 0094 88432A   		movb	%al, 42(%rbx)
 242:fltk-1.3.4-1/png/pngset.c **** }
 1372              		.loc 1 242 4 is_stmt 1 view .LVU366
 242:fltk-1.3.4-1/png/pngset.c **** }
 1373              		.loc 1 242 25 is_stmt 0 view .LVU367
 1374 0097 3C07     		cmpb	$7, %al
 1375 0099 762D     		jbe	.L88
 242:fltk-1.3.4-1/png/pngset.c **** }
 1376              		.loc 1 242 25 discriminator 1 view .LVU368
 1377 009b C0E803   		shrb	$3, %al
 1378 009e 0FB6C0   		movzbl	%al, %eax
 1379 00a1 480FAFC5 		imulq	%rbp, %rax
 1380              	.L89:
 242:fltk-1.3.4-1/png/pngset.c **** }
 1381              		.loc 1 242 23 discriminator 4 view .LVU369
 1382 00a5 48894310 		movq	%rax, 16(%rbx)
 1383              	.LVL115:
 1384              	.L82:
 243:fltk-1.3.4-1/png/pngset.c **** 
 1385              		.loc 1 243 1 view .LVU370
 1386 00a9 4883C408 		addq	$8, %rsp
 1387              		.cfi_def_cfa_offset 24
 1388 00ad 5B       		popq	%rbx
 1389              		.cfi_def_cfa_offset 16
 1390              	.LVL116:
 243:fltk-1.3.4-1/png/pngset.c **** 
 1391              		.loc 1 243 1 view .LVU371
 1392 00ae 5D       		popq	%rbp
 1393              		.cfi_def_cfa_offset 8
 1394 00af C3       		ret
 1395              	.LVL117:
 1396              		.p2align 4,,10
 1397              		.p2align 3
 1398              	.L94:
 1399              		.cfi_restore 3
 1400              		.cfi_restore 6
 243:fltk-1.3.4-1/png/pngset.c **** 
 1401              		.loc 1 243 1 view .LVU372
 1402 00b0 C3       		ret
 1403              	.LVL118:
 1404              		.p2align 4,,10
 1405 00b1 0F1F8000 		.p2align 3
 1405      000000
 1406              	.L98:
 1407              		.cfi_def_cfa_offset 32
 1408              		.cfi_offset 3, -24
 1409              		.cfi_offset 6, -16
 232:fltk-1.3.4-1/png/pngset.c **** 
 1410              		.loc 1 232 7 is_stmt 1 view .LVU373
 232:fltk-1.3.4-1/png/pngset.c **** 
 1411              		.loc 1 232 26 is_stmt 0 view .LVU374
 1412 00b8 C6432903 		movb	$3, 41(%rbx)
 1413 00bc B8030000 		movl	$3, %eax
 1413      00
 1414 00c1 EBC3     		jmp	.L87
 1415              		.p2align 4,,10
 1416 00c3 0F1F4400 		.p2align 3
 1416      00
 1417              	.L88:
 242:fltk-1.3.4-1/png/pngset.c **** }
 1418              		.loc 1 242 25 discriminator 2 view .LVU375
 1419 00c8 0FB6C0   		movzbl	%al, %eax
 1420 00cb 480FAFC5 		imulq	%rbp, %rax
 1421 00cf 4883C007 		addq	$7, %rax
 1422 00d3 48C1E803 		shrq	$3, %rax
 1423 00d7 EBCC     		jmp	.L89
 1424 00d9 0F1F8000 		.p2align 4,,10
 1424      000000
 1425              		.p2align 3
 1426              	.L97:
 229:fltk-1.3.4-1/png/pngset.c **** 
 1427              		.loc 1 229 7 is_stmt 1 view .LVU376
 229:fltk-1.3.4-1/png/pngset.c **** 
 1428              		.loc 1 229 26 is_stmt 0 view .LVU377
 1429 00e0 C6432901 		movb	$1, 41(%rbx)
 237:fltk-1.3.4-1/png/pngset.c ****       info_ptr->channels++;
 1430              		.loc 1 237 4 is_stmt 1 view .LVU378
 229:fltk-1.3.4-1/png/pngset.c **** 
 1431              		.loc 1 229 26 is_stmt 0 view .LVU379
 1432 00e4 B8010000 		movl	$1, %eax
 1432      00
 1433 00e9 EBA6     		jmp	.L85
 1434              		.cfi_endproc
 1435              	.LFE49:
 1437              		.section	.text.png_set_oFFs,"ax",@progbits
 1438              		.p2align 4
 1439              		.globl	png_set_oFFs
 1441              	png_set_oFFs:
 1442              	.LVL119:
 1443              	.LFB50:
 249:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "oFFs");
 1444              		.loc 1 249 1 is_stmt 1 view -0
 1445              		.cfi_startproc
 249:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "oFFs");
 1446              		.loc 1 249 1 is_stmt 0 view .LVU381
 1447 0000 F30F1EFA 		endbr64
 250:fltk-1.3.4-1/png/pngset.c **** 
 1448              		.loc 1 250 4 is_stmt 1 view .LVU382
 252:fltk-1.3.4-1/png/pngset.c ****       return;
 1449              		.loc 1 252 4 view .LVU383
 252:fltk-1.3.4-1/png/pngset.c ****       return;
 1450              		.loc 1 252 7 is_stmt 0 view .LVU384
 1451 0004 4885FF   		testq	%rdi, %rdi
 1452 0007 741F     		je	.L99
 1453 0009 4885F6   		testq	%rsi, %rsi
 1454 000c 741A     		je	.L99
 255:fltk-1.3.4-1/png/pngset.c ****    info_ptr->y_offset = offset_y;
 1455              		.loc 1 255 4 is_stmt 1 view .LVU385
 258:fltk-1.3.4-1/png/pngset.c **** }
 1456              		.loc 1 258 20 is_stmt 0 view .LVU386
 1457 000e 814E0800 		orl	$256, 8(%rsi)
 1457      010000
 255:fltk-1.3.4-1/png/pngset.c ****    info_ptr->y_offset = offset_y;
 1458              		.loc 1 255 23 view .LVU387
 1459 0015 8996D400 		movl	%edx, 212(%rsi)
 1459      0000
 256:fltk-1.3.4-1/png/pngset.c ****    info_ptr->offset_unit_type = (png_byte)unit_type;
 1460              		.loc 1 256 4 is_stmt 1 view .LVU388
 256:fltk-1.3.4-1/png/pngset.c ****    info_ptr->offset_unit_type = (png_byte)unit_type;
 1461              		.loc 1 256 23 is_stmt 0 view .LVU389
 1462 001b 898ED800 		movl	%ecx, 216(%rsi)
 1462      0000
 257:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_oFFs;
 1463              		.loc 1 257 4 is_stmt 1 view .LVU390
 257:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_oFFs;
 1464              		.loc 1 257 33 is_stmt 0 view .LVU391
 1465 0021 448886DC 		movb	%r8b, 220(%rsi)
 1465      000000
 258:fltk-1.3.4-1/png/pngset.c **** }
 1466              		.loc 1 258 4 is_stmt 1 view .LVU392
 1467              	.L99:
 259:fltk-1.3.4-1/png/pngset.c **** #endif
 1468              		.loc 1 259 1 is_stmt 0 view .LVU393
 1469 0028 C3       		ret
 1470              		.cfi_endproc
 1471              	.LFE50:
 1473              		.section	.rodata.png_set_pCAL.str1.1,"aMS",@progbits,1
 1474              	.LC14:
 1475 0000 496E7661 		.string	"Invalid pCAL equation type"
 1475      6C696420 
 1475      7043414C 
 1475      20657175 
 1475      6174696F 
 1476              	.LC15:
 1477 001b 496E7661 		.string	"Invalid pCAL parameter count"
 1477      6C696420 
 1477      7043414C 
 1477      20706172 
 1477      616D6574 
 1478              		.section	.rodata.png_set_pCAL.str1.8,"aMS",@progbits,1
 1479              		.align 8
 1480              	.LC16:
 1481 0000 496E7661 		.string	"Invalid format for pCAL parameter"
 1481      6C696420 
 1481      666F726D 
 1481      61742066 
 1481      6F722070 
 1482 0022 00000000 		.align 8
 1482      0000
 1483              	.LC17:
 1484 0028 496E7375 		.string	"Insufficient memory for pCAL purpose"
 1484      66666963 
 1484      69656E74 
 1484      206D656D 
 1484      6F727920 
 1485 004d 000000   		.align 8
 1486              	.LC18:
 1487 0050 496E7375 		.string	"Insufficient memory for pCAL units"
 1487      66666963 
 1487      69656E74 
 1487      206D656D 
 1487      6F727920 
 1488 0073 00000000 		.align 8
 1488      00
 1489              	.LC19:
 1490 0078 496E7375 		.string	"Insufficient memory for pCAL params"
 1490      66666963 
 1490      69656E74 
 1490      206D656D 
 1490      6F727920 
 1491 009c 00000000 		.align 8
 1492              	.LC20:
 1493 00a0 496E7375 		.string	"Insufficient memory for pCAL parameter"
 1493      66666963 
 1493      69656E74 
 1493      206D656D 
 1493      6F727920 
 1494              		.section	.text.png_set_pCAL,"ax",@progbits
 1495              		.p2align 4
 1496              		.globl	png_set_pCAL
 1498              	png_set_pCAL:
 1499              	.LVL120:
 1500              	.LFB51:
 267:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 1501              		.loc 1 267 1 is_stmt 1 view -0
 1502              		.cfi_startproc
 267:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 1503              		.loc 1 267 1 is_stmt 0 view .LVU395
 1504 0000 F30F1EFA 		endbr64
 268:fltk-1.3.4-1/png/pngset.c ****    int i;
 1505              		.loc 1 268 4 is_stmt 1 view .LVU396
 269:fltk-1.3.4-1/png/pngset.c **** 
 1506              		.loc 1 269 4 view .LVU397
 271:fltk-1.3.4-1/png/pngset.c **** 
 1507              		.loc 1 271 4 view .LVU398
 273:fltk-1.3.4-1/png/pngset.c ****       || (nparams > 0 && params == NULL))
 1508              		.loc 1 273 4 view .LVU399
 267:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 1509              		.loc 1 267 1 is_stmt 0 view .LVU400
 1510 0004 4157     		pushq	%r15
 1511              		.cfi_def_cfa_offset 16
 1512              		.cfi_offset 15, -16
 1513 0006 4156     		pushq	%r14
 1514              		.cfi_def_cfa_offset 24
 1515              		.cfi_offset 14, -24
 1516 0008 4155     		pushq	%r13
 1517              		.cfi_def_cfa_offset 32
 1518              		.cfi_offset 13, -32
 1519 000a 4154     		pushq	%r12
 1520              		.cfi_def_cfa_offset 40
 1521              		.cfi_offset 12, -40
 1522 000c 55       		pushq	%rbp
 1523              		.cfi_def_cfa_offset 48
 1524              		.cfi_offset 6, -48
 1525 000d 53       		pushq	%rbx
 1526              		.cfi_def_cfa_offset 56
 1527              		.cfi_offset 3, -56
 1528 000e 4883EC38 		subq	$56, %rsp
 1529              		.cfi_def_cfa_offset 112
 267:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 1530              		.loc 1 267 1 view .LVU401
 1531 0012 894C2420 		movl	%ecx, 32(%rsp)
 1532 0016 488B4424 		movq	120(%rsp), %rax
 1532      78
 1533 001b 8B4C2470 		movl	112(%rsp), %ecx
 1534              	.LVL121:
 267:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 1535              		.loc 1 267 1 view .LVU402
 1536 001f 48895424 		movq	%rdx, 8(%rsp)
 1536      08
 1537 0024 44894424 		movl	%r8d, 36(%rsp)
 1537      24
 1538 0029 4C8BAC24 		movq	128(%rsp), %r13
 1538      80000000 
 1539 0031 44894C24 		movl	%r9d, 20(%rsp)
 1539      14
 1540 0036 890C24   		movl	%ecx, (%rsp)
 1541 0039 48894424 		movq	%rax, 24(%rsp)
 1541      18
 273:fltk-1.3.4-1/png/pngset.c ****       || (nparams > 0 && params == NULL))
 1542              		.loc 1 273 7 view .LVU403
 1543 003e 4885FF   		testq	%rdi, %rdi
 1544 0041 741E     		je	.L101
 1545 0043 4889F3   		movq	%rsi, %rbx
 1546 0046 4885F6   		testq	%rsi, %rsi
 1547 0049 7416     		je	.L101
 273:fltk-1.3.4-1/png/pngset.c ****       || (nparams > 0 && params == NULL))
 1548              		.loc 1 273 63 discriminator 1 view .LVU404
 1549 004b 4885D2   		testq	%rdx, %rdx
 1550 004e 7411     		je	.L101
 1551 0050 4885C0   		testq	%rax, %rax
 1552 0053 740C     		je	.L101
 1553 0055 4989FC   		movq	%rdi, %r12
 274:fltk-1.3.4-1/png/pngset.c ****       return;
 1554              		.loc 1 274 7 view .LVU405
 1555 0058 85C9     		testl	%ecx, %ecx
 1556 005a 7E14     		jle	.L117
 1557 005c 4D85ED   		testq	%r13, %r13
 1558 005f 750F     		jne	.L117
 1559              	.L101:
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1560              		.loc 1 360 1 view .LVU406
 1561 0061 4883C438 		addq	$56, %rsp
 1562              		.cfi_remember_state
 1563              		.cfi_def_cfa_offset 56
 1564 0065 5B       		popq	%rbx
 1565              		.cfi_def_cfa_offset 48
 1566 0066 5D       		popq	%rbp
 1567              		.cfi_def_cfa_offset 40
 1568 0067 415C     		popq	%r12
 1569              		.cfi_def_cfa_offset 32
 1570 0069 415D     		popq	%r13
 1571              		.cfi_def_cfa_offset 24
 1572 006b 415E     		popq	%r14
 1573              		.cfi_def_cfa_offset 16
 1574 006d 415F     		popq	%r15
 1575              		.cfi_def_cfa_offset 8
 1576 006f C3       		ret
 1577              	.LVL122:
 1578              		.p2align 4,,10
 1579              		.p2align 3
 1580              	.L117:
 1581              		.cfi_restore_state
 277:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating purpose for info (%lu bytes)",
 1582              		.loc 1 277 4 is_stmt 1 view .LVU407
 277:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating purpose for info (%lu bytes)",
 1583              		.loc 1 277 13 is_stmt 0 view .LVU408
 1584 0070 488B7C24 		movq	8(%rsp), %rdi
 1584      08
 1585              	.LVL123:
 277:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating purpose for info (%lu bytes)",
 1586              		.loc 1 277 13 view .LVU409
 1587 0075 E8000000 		call	strlen@PLT
 1587      00
 1588              	.LVL124:
 277:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating purpose for info (%lu bytes)",
 1589              		.loc 1 277 11 view .LVU410
 1590 007a 4883C001 		addq	$1, %rax
 284:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL equation type");
 1591              		.loc 1 284 7 view .LVU411
 1592 007e 837C2414 		cmpl	$3, 20(%rsp)
 1592      03
 277:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating purpose for info (%lu bytes)",
 1593              		.loc 1 277 11 view .LVU412
 1594 0083 48894424 		movq	%rax, 40(%rsp)
 1594      28
 1595              	.LVL125:
 278:fltk-1.3.4-1/png/pngset.c ****        (unsigned long)length);
 1596              		.loc 1 278 4 is_stmt 1 view .LVU413
 284:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL equation type");
 1597              		.loc 1 284 4 view .LVU414
 284:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL equation type");
 1598              		.loc 1 284 7 is_stmt 0 view .LVU415
 1599 0088 0F87F901 		ja	.L128
 1599      0000
 287:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL parameter count");
 1600              		.loc 1 287 4 is_stmt 1 view .LVU416
 287:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL parameter count");
 1601              		.loc 1 287 7 is_stmt 0 view .LVU417
 1602 008e 8B0424   		movl	(%rsp), %eax
 1603              	.LVL126:
 287:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid pCAL parameter count");
 1604              		.loc 1 287 7 view .LVU418
 1605 0091 3DFF0000 		cmpl	$255, %eax
 1605      00
 1606 0096 0F87FA01 		ja	.L105
 1606      0000
 1607              	.LVL127:
 291:fltk-1.3.4-1/png/pngset.c ****    {
 1608              		.loc 1 291 14 is_stmt 1 view .LVU419
 291:fltk-1.3.4-1/png/pngset.c ****    {
 1609              		.loc 1 291 4 is_stmt 0 view .LVU420
 1610 009c 85C0     		testl	%eax, %eax
 1611 009e 7E40     		jle	.L107
 1612 00a0 8B0424   		movl	(%rsp), %eax
 1613 00a3 4D89EE   		movq	%r13, %r14
 1614 00a6 83E801   		subl	$1, %eax
 1615 00a9 498D6CC5 		leaq	8(%r13,%rax,8), %rbp
 1615      08
 1616              	.LVL128:
 1617 00ae 6690     		.p2align 4,,10
 1618              		.p2align 3
 1619              	.L110:
 293:fltk-1.3.4-1/png/pngset.c ****           !png_check_fp_string(params[i], strlen(params[i])))
 1620              		.loc 1 293 7 is_stmt 1 view .LVU421
 293:fltk-1.3.4-1/png/pngset.c ****           !png_check_fp_string(params[i], strlen(params[i])))
 1621              		.loc 1 293 17 is_stmt 0 view .LVU422
 1622 00b0 4D8B3E   		movq	(%r14), %r15
 293:fltk-1.3.4-1/png/pngset.c ****           !png_check_fp_string(params[i], strlen(params[i])))
 1623              		.loc 1 293 10 view .LVU423
 1624 00b3 4D85FF   		testq	%r15, %r15
 1625 00b6 0F84BC01 		je	.L109
 1625      0000
 294:fltk-1.3.4-1/png/pngset.c ****          png_error(png_ptr, "Invalid format for pCAL parameter");
 1626              		.loc 1 294 12 discriminator 1 view .LVU424
 1627 00bc 4C89FF   		movq	%r15, %rdi
 1628 00bf E8000000 		call	strlen@PLT
 1628      00
 1629              	.LVL129:
 1630 00c4 4C89FF   		movq	%r15, %rdi
 1631 00c7 4889C6   		movq	%rax, %rsi
 1632 00ca E8000000 		call	png_check_fp_string@PLT
 1632      00
 1633              	.LVL130:
 293:fltk-1.3.4-1/png/pngset.c ****           !png_check_fp_string(params[i], strlen(params[i])))
 1634              		.loc 1 293 29 discriminator 1 view .LVU425
 1635 00cf 85C0     		testl	%eax, %eax
 1636 00d1 0F84A101 		je	.L109
 1636      0000
 291:fltk-1.3.4-1/png/pngset.c ****    {
 1637              		.loc 1 291 25 is_stmt 1 discriminator 2 view .LVU426
 291:fltk-1.3.4-1/png/pngset.c ****    {
 1638              		.loc 1 291 14 discriminator 2 view .LVU427
 1639 00d7 4983C608 		addq	$8, %r14
 291:fltk-1.3.4-1/png/pngset.c ****    {
 1640              		.loc 1 291 4 is_stmt 0 discriminator 2 view .LVU428
 1641 00db 4939EE   		cmpq	%rbp, %r14
 1642 00de 75D0     		jne	.L110
 1643              	.L107:
 298:fltk-1.3.4-1/png/pngset.c ****        png_malloc_warn(png_ptr, length));
 1644              		.loc 1 298 4 is_stmt 1 view .LVU429
 298:fltk-1.3.4-1/png/pngset.c ****        png_malloc_warn(png_ptr, length));
 1645              		.loc 1 298 29 is_stmt 0 view .LVU430
 1646 00e0 488B7424 		movq	40(%rsp), %rsi
 1646      28
 1647 00e5 4C89E7   		movq	%r12, %rdi
 1648 00e8 E8000000 		call	png_malloc_warn@PLT
 1648      00
 1649              	.LVL131:
 298:fltk-1.3.4-1/png/pngset.c ****        png_malloc_warn(png_ptr, length));
 1650              		.loc 1 298 27 view .LVU431
 1651 00ed 488983F8 		movq	%rax, 248(%rbx)
 1651      000000
 301:fltk-1.3.4-1/png/pngset.c ****    {
 1652              		.loc 1 301 4 is_stmt 1 view .LVU432
 298:fltk-1.3.4-1/png/pngset.c ****        png_malloc_warn(png_ptr, length));
 1653              		.loc 1 298 29 is_stmt 0 view .LVU433
 1654 00f4 4889C7   		movq	%rax, %rdi
 301:fltk-1.3.4-1/png/pngset.c ****    {
 1655              		.loc 1 301 7 view .LVU434
 1656 00f7 4885C0   		testq	%rax, %rax
 1657 00fa 0F84B701 		je	.L129
 1657      0000
 307:fltk-1.3.4-1/png/pngset.c **** 
 1658              		.loc 1 307 4 is_stmt 1 view .LVU435
 1659              	.LVL132:
 1660              	.LBB123:
 1661              	.LBI123:
 1662              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 1663              		.loc 2 31 1 view .LVU436
 1664              	.LBB124:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 1665              		.loc 2 34 3 view .LVU437
 1666              		.loc 2 34 10 is_stmt 0 view .LVU438
 1667 0100 488B5424 		movq	40(%rsp), %rdx
 1667      28
 1668 0105 488B7424 		movq	8(%rsp), %rsi
 1668      08
 1669 010a E8000000 		call	memcpy@PLT
 1669      00
 1670              	.LVL133:
 1671              		.loc 2 34 10 view .LVU439
 1672              	.LBE124:
 1673              	.LBE123:
 309:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_X0 = X0;
 1674              		.loc 1 309 4 is_stmt 1 view .LVU440
 310:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_X1 = X1;
 1675              		.loc 1 310 4 view .LVU441
 310:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_X1 = X1;
 1676              		.loc 1 310 22 is_stmt 0 view .LVU442
 1677 010f 8B442420 		movl	32(%rsp), %eax
 315:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating units for info (%lu bytes)",
 1678              		.loc 1 315 13 view .LVU443
 1679 0113 488B7C24 		movq	24(%rsp), %rdi
 1679      18
 310:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_X1 = X1;
 1680              		.loc 1 310 22 view .LVU444
 1681 0118 89830001 		movl	%eax, 256(%rbx)
 1681      0000
 311:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_type = (png_byte)type;
 1682              		.loc 1 311 4 is_stmt 1 view .LVU445
 311:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_type = (png_byte)type;
 1683              		.loc 1 311 22 is_stmt 0 view .LVU446
 1684 011e 8B442424 		movl	36(%rsp), %eax
 1685 0122 89830401 		movl	%eax, 260(%rbx)
 1685      0000
 312:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_nparams = (png_byte)nparams;
 1686              		.loc 1 312 4 is_stmt 1 view .LVU447
 312:fltk-1.3.4-1/png/pngset.c ****    info_ptr->pcal_nparams = (png_byte)nparams;
 1687              		.loc 1 312 26 is_stmt 0 view .LVU448
 1688 0128 0FB64424 		movzbl	20(%rsp), %eax
 1688      14
 1689 012d 88831801 		movb	%al, 280(%rbx)
 1689      0000
 313:fltk-1.3.4-1/png/pngset.c **** 
 1690              		.loc 1 313 4 is_stmt 1 view .LVU449
 313:fltk-1.3.4-1/png/pngset.c **** 
 1691              		.loc 1 313 29 is_stmt 0 view .LVU450
 1692 0133 0FB60424 		movzbl	(%rsp), %eax
 1693 0137 88831901 		movb	%al, 281(%rbx)
 1693      0000
 315:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating units for info (%lu bytes)",
 1694              		.loc 1 315 4 is_stmt 1 view .LVU451
 315:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating units for info (%lu bytes)",
 1695              		.loc 1 315 13 is_stmt 0 view .LVU452
 1696 013d E8000000 		call	strlen@PLT
 1696      00
 1697              	.LVL134:
 319:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, length));
 1698              		.loc 1 319 27 view .LVU453
 1699 0142 4C89E7   		movq	%r12, %rdi
 315:fltk-1.3.4-1/png/pngset.c ****    png_debug1(3, "allocating units for info (%lu bytes)",
 1700              		.loc 1 315 11 view .LVU454
 1701 0145 4C8D7001 		leaq	1(%rax), %r14
 1702              	.LVL135:
 316:fltk-1.3.4-1/png/pngset.c ****      (unsigned long)length);
 1703              		.loc 1 316 4 is_stmt 1 view .LVU455
 319:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, length));
 1704              		.loc 1 319 4 view .LVU456
 319:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, length));
 1705              		.loc 1 319 27 is_stmt 0 view .LVU457
 1706 0149 4C89F6   		movq	%r14, %rsi
 1707 014c E8000000 		call	png_malloc_warn@PLT
 1707      00
 1708              	.LVL136:
 319:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, length));
 1709              		.loc 1 319 25 view .LVU458
 1710 0151 48898308 		movq	%rax, 264(%rbx)
 1710      010000
 322:fltk-1.3.4-1/png/pngset.c ****    {
 1711              		.loc 1 322 4 is_stmt 1 view .LVU459
 319:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, length));
 1712              		.loc 1 319 27 is_stmt 0 view .LVU460
 1713 0158 4889C7   		movq	%rax, %rdi
 322:fltk-1.3.4-1/png/pngset.c ****    {
 1714              		.loc 1 322 7 view .LVU461
 1715 015b 4885C0   		testq	%rax, %rax
 1716 015e 0F844101 		je	.L130
 1716      0000
 328:fltk-1.3.4-1/png/pngset.c **** 
 1717              		.loc 1 328 4 is_stmt 1 view .LVU462
 1718              	.LVL137:
 1719              	.LBB125:
 1720              	.LBI125:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 1721              		.loc 2 31 1 view .LVU463
 1722              	.LBB126:
 1723              		.loc 2 34 3 view .LVU464
 1724              		.loc 2 34 10 is_stmt 0 view .LVU465
 1725 0164 488B7424 		movq	24(%rsp), %rsi
 1725      18
 1726 0169 4C89F2   		movq	%r14, %rdx
 1727 016c E8000000 		call	memcpy@PLT
 1727      00
 1728              	.LVL138:
 1729              		.loc 2 34 10 view .LVU466
 1730              	.LBE126:
 1731              	.LBE125:
 330:fltk-1.3.4-1/png/pngset.c ****        (png_size_t)((nparams + 1) * (sizeof (png_charp)))));
 1732              		.loc 1 330 4 is_stmt 1 view .LVU467
 330:fltk-1.3.4-1/png/pngset.c ****        (png_size_t)((nparams + 1) * (sizeof (png_charp)))));
 1733              		.loc 1 330 28 is_stmt 0 view .LVU468
 1734 0171 8B0424   		movl	(%rsp), %eax
 1735 0174 4C89E7   		movq	%r12, %rdi
 1736 0177 8D6801   		leal	1(%rax), %ebp
 1737 017a 4863ED   		movslq	%ebp, %rbp
 1738 017d 48C1E503 		salq	$3, %rbp
 1739 0181 4889EE   		movq	%rbp, %rsi
 1740 0184 E8000000 		call	png_malloc_warn@PLT
 1740      00
 1741              	.LVL139:
 330:fltk-1.3.4-1/png/pngset.c ****        (png_size_t)((nparams + 1) * (sizeof (png_charp)))));
 1742              		.loc 1 330 26 view .LVU469
 1743 0189 48898310 		movq	%rax, 272(%rbx)
 1743      010000
 333:fltk-1.3.4-1/png/pngset.c ****    {
 1744              		.loc 1 333 4 is_stmt 1 view .LVU470
 330:fltk-1.3.4-1/png/pngset.c ****        (png_size_t)((nparams + 1) * (sizeof (png_charp)))));
 1745              		.loc 1 330 28 is_stmt 0 view .LVU471
 1746 0190 4889C1   		movq	%rax, %rcx
 333:fltk-1.3.4-1/png/pngset.c ****    {
 1747              		.loc 1 333 7 view .LVU472
 1748 0193 4885C0   		testq	%rax, %rax
 1749 0196 0F841201 		je	.L131
 1749      0000
 339:fltk-1.3.4-1/png/pngset.c **** 
 1750              		.loc 1 339 4 is_stmt 1 view .LVU473
 1751              	.LVL140:
 1752              	.LBB127:
 1753              	.LBI127:
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
 1754              		.loc 2 59 1 view .LVU474
 1755              	.LBB128:
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 1756              		.loc 2 71 3 view .LVU475
 1757              		.loc 2 71 10 is_stmt 0 view .LVU476
 1758 019c 488D7908 		leaq	8(%rcx), %rdi
 1759 01a0 48C70000 		movq	$0, (%rax)
 1759      000000
 1760              	.LVL141:
 1761              		.loc 2 71 10 view .LVU477
 1762 01a7 89E8     		movl	%ebp, %eax
 1763              	.LVL142:
 1764              		.loc 2 71 10 view .LVU478
 1765 01a9 48C74401 		movq	$0, -8(%rcx,%rax)
 1765      F8000000 
 1765      00
 1766 01b2 4883E7F8 		andq	$-8, %rdi
 1767 01b6 31C0     		xorl	%eax, %eax
 1768 01b8 4829F9   		subq	%rdi, %rcx
 1769              	.LVL143:
 1770              		.loc 2 71 10 view .LVU479
 1771 01bb 01E9     		addl	%ebp, %ecx
 1772 01bd C1E903   		shrl	$3, %ecx
 1773 01c0 F348AB   		rep stosq
 1774              	.LVL144:
 1775              		.loc 2 71 10 view .LVU480
 1776              	.LBE128:
 1777              	.LBE127:
 341:fltk-1.3.4-1/png/pngset.c ****    {
 1778              		.loc 1 341 4 is_stmt 1 view .LVU481
 341:fltk-1.3.4-1/png/pngset.c ****    {
 1779              		.loc 1 341 16 view .LVU482
 341:fltk-1.3.4-1/png/pngset.c ****    {
 1780              		.loc 1 341 4 is_stmt 0 view .LVU483
 1781 01c3 8B0424   		movl	(%rsp), %eax
 1782 01c6 85C0     		testl	%eax, %eax
 1783 01c8 0F8E8A00 		jle	.L114
 1783      0000
 1784 01ce 83E801   		subl	$1, %eax
 1785 01d1 31ED     		xorl	%ebp, %ebp
 1786 01d3 488D04C5 		leaq	8(,%rax,8), %rax
 1786      08000000 
 1787 01db 48890424 		movq	%rax, (%rsp)
 1788 01df EB1E     		jmp	.L116
 1789              	.LVL145:
 1790              		.p2align 4,,10
 1791 01e1 0F1F8000 		.p2align 3
 1791      000000
 1792              	.L115:
 355:fltk-1.3.4-1/png/pngset.c ****    }
 1793              		.loc 1 355 7 is_stmt 1 discriminator 2 view .LVU484
 1794              	.LBB129:
 1795              	.LBI129:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 1796              		.loc 2 31 1 discriminator 2 view .LVU485
 1797              	.LBB130:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 1798              		.loc 2 34 3 discriminator 2 view .LVU486
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 1799              		.loc 2 34 10 is_stmt 0 discriminator 2 view .LVU487
 1800 01e8 498B742D 		movq	0(%r13,%rbp), %rsi
 1800      00
 1801 01ed 4C89F2   		movq	%r14, %rdx
 1802 01f0 4883C508 		addq	$8, %rbp
 1803              	.LVL146:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 1804              		.loc 2 34 10 discriminator 2 view .LVU488
 1805 01f4 E8000000 		call	memcpy@PLT
 1805      00
 1806              	.LVL147:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 1807              		.loc 2 34 10 discriminator 2 view .LVU489
 1808              	.LBE130:
 1809              	.LBE129:
 341:fltk-1.3.4-1/png/pngset.c ****    {
 1810              		.loc 1 341 29 is_stmt 1 discriminator 2 view .LVU490
 341:fltk-1.3.4-1/png/pngset.c ****    {
 1811              		.loc 1 341 16 discriminator 2 view .LVU491
 341:fltk-1.3.4-1/png/pngset.c ****    {
 1812              		.loc 1 341 4 is_stmt 0 discriminator 2 view .LVU492
 1813 01f9 483B2C24 		cmpq	(%rsp), %rbp
 1814 01fd 7459     		je	.L114
 1815              	.L116:
 343:fltk-1.3.4-1/png/pngset.c ****       png_debug2(3, "allocating parameter %d for info (%lu bytes)", i,
 1816              		.loc 1 343 7 is_stmt 1 view .LVU493
 343:fltk-1.3.4-1/png/pngset.c ****       png_debug2(3, "allocating parameter %d for info (%lu bytes)", i,
 1817              		.loc 1 343 16 is_stmt 0 view .LVU494
 1818 01ff 498B7C2D 		movq	0(%r13,%rbp), %rdi
 1818      00
 1819 0204 E8000000 		call	strlen@PLT
 1819      00
 1820              	.LVL148:
 347:fltk-1.3.4-1/png/pngset.c **** 
 1821              		.loc 1 347 28 view .LVU495
 1822 0209 4C8BBB10 		movq	272(%rbx), %r15
 1822      010000
 347:fltk-1.3.4-1/png/pngset.c **** 
 1823              		.loc 1 347 45 view .LVU496
 1824 0210 4C89E7   		movq	%r12, %rdi
 343:fltk-1.3.4-1/png/pngset.c ****       png_debug2(3, "allocating parameter %d for info (%lu bytes)", i,
 1825              		.loc 1 343 14 view .LVU497
 1826 0213 4C8D7001 		leaq	1(%rax), %r14
 1827              	.LVL149:
 344:fltk-1.3.4-1/png/pngset.c ****           (unsigned long)length);
 1828              		.loc 1 344 7 is_stmt 1 view .LVU498
 347:fltk-1.3.4-1/png/pngset.c **** 
 1829              		.loc 1 347 7 view .LVU499
 347:fltk-1.3.4-1/png/pngset.c **** 
 1830              		.loc 1 347 45 is_stmt 0 view .LVU500
 1831 0217 4C89F6   		movq	%r14, %rsi
 347:fltk-1.3.4-1/png/pngset.c **** 
 1832              		.loc 1 347 28 view .LVU501
 1833 021a 4901EF   		addq	%rbp, %r15
 347:fltk-1.3.4-1/png/pngset.c **** 
 1834              		.loc 1 347 45 view .LVU502
 1835 021d E8000000 		call	png_malloc_warn@PLT
 1835      00
 1836              	.LVL150:
 347:fltk-1.3.4-1/png/pngset.c **** 
 1837              		.loc 1 347 32 view .LVU503
 1838 0222 498907   		movq	%rax, (%r15)
 349:fltk-1.3.4-1/png/pngset.c ****       {
 1839              		.loc 1 349 7 is_stmt 1 view .LVU504
 349:fltk-1.3.4-1/png/pngset.c ****       {
 1840              		.loc 1 349 32 is_stmt 0 view .LVU505
 1841 0225 488B8310 		movq	272(%rbx), %rax
 1841      010000
 1842 022c 488B3C28 		movq	(%rax,%rbp), %rdi
 349:fltk-1.3.4-1/png/pngset.c ****       {
 1843              		.loc 1 349 10 view .LVU506
 1844 0230 4885FF   		testq	%rdi, %rdi
 1845 0233 75B3     		jne	.L115
 351:fltk-1.3.4-1/png/pngset.c ****          return;
 1846              		.loc 1 351 10 is_stmt 1 view .LVU507
 1847 0235 488D3500 		leaq	.LC20(%rip), %rsi
 1847      000000
 1848              	.LVL151:
 1849              	.L127:
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1850              		.loc 1 360 1 is_stmt 0 view .LVU508
 1851 023c 4883C438 		addq	$56, %rsp
 1852              		.cfi_remember_state
 1853              		.cfi_def_cfa_offset 56
 351:fltk-1.3.4-1/png/pngset.c ****          return;
 1854              		.loc 1 351 10 view .LVU509
 1855 0240 4C89E7   		movq	%r12, %rdi
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1856              		.loc 1 360 1 view .LVU510
 1857 0243 5B       		popq	%rbx
 1858              		.cfi_def_cfa_offset 48
 1859              	.LVL152:
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1860              		.loc 1 360 1 view .LVU511
 1861 0244 5D       		popq	%rbp
 1862              		.cfi_def_cfa_offset 40
 1863 0245 415C     		popq	%r12
 1864              		.cfi_def_cfa_offset 32
 1865              	.LVL153:
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1866              		.loc 1 360 1 view .LVU512
 1867 0247 415D     		popq	%r13
 1868              		.cfi_def_cfa_offset 24
 1869 0249 415E     		popq	%r14
 1870              		.cfi_def_cfa_offset 16
 1871 024b 415F     		popq	%r15
 1872              		.cfi_def_cfa_offset 8
 351:fltk-1.3.4-1/png/pngset.c ****          return;
 1873              		.loc 1 351 10 view .LVU513
 1874 024d E9000000 		jmp	png_warning@PLT
 1874      00
 1875              	.LVL154:
 1876              		.p2align 4,,10
 1877 0252 660F1F44 		.p2align 3
 1877      0000
 1878              	.L114:
 1879              		.cfi_restore_state
 358:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_PCAL;
 1880              		.loc 1 358 4 is_stmt 1 view .LVU514
 358:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_PCAL;
 1881              		.loc 1 358 20 is_stmt 0 view .LVU515
 1882 0258 814B0800 		orl	$1024, 8(%rbx)
 1882      040000
 359:fltk-1.3.4-1/png/pngset.c **** }
 1883              		.loc 1 359 4 is_stmt 1 view .LVU516
 359:fltk-1.3.4-1/png/pngset.c **** }
 1884              		.loc 1 359 22 is_stmt 0 view .LVU517
 1885 025f 818B1C01 		orl	$128, 284(%rbx)
 1885      00008000 
 1885      0000
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1886              		.loc 1 360 1 view .LVU518
 1887 0269 4883C438 		addq	$56, %rsp
 1888              		.cfi_remember_state
 1889              		.cfi_def_cfa_offset 56
 1890 026d 5B       		popq	%rbx
 1891              		.cfi_def_cfa_offset 48
 1892              	.LVL155:
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1893              		.loc 1 360 1 view .LVU519
 1894 026e 5D       		popq	%rbp
 1895              		.cfi_def_cfa_offset 40
 1896 026f 415C     		popq	%r12
 1897              		.cfi_def_cfa_offset 32
 1898              	.LVL156:
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1899              		.loc 1 360 1 view .LVU520
 1900 0271 415D     		popq	%r13
 1901              		.cfi_def_cfa_offset 24
 1902 0273 415E     		popq	%r14
 1903              		.cfi_def_cfa_offset 16
 1904              	.LVL157:
 360:fltk-1.3.4-1/png/pngset.c **** #endif
 1905              		.loc 1 360 1 view .LVU521
 1906 0275 415F     		popq	%r15
 1907              		.cfi_def_cfa_offset 8
 1908 0277 C3       		ret
 1909              	.LVL158:
 1910              	.L109:
 1911              		.cfi_restore_state
 295:fltk-1.3.4-1/png/pngset.c ****    }
 1912              		.loc 1 295 10 is_stmt 1 view .LVU522
 1913 0278 488D3500 		leaq	.LC16(%rip), %rsi
 1913      000000
 1914 027f 4C89E7   		movq	%r12, %rdi
 1915 0282 E8000000 		call	png_error@PLT
 1915      00
 1916              	.LVL159:
 1917              	.L128:
 285:fltk-1.3.4-1/png/pngset.c **** 
 1918              		.loc 1 285 7 view .LVU523
 1919 0287 488D3500 		leaq	.LC14(%rip), %rsi
 1919      000000
 1920 028e 4C89E7   		movq	%r12, %rdi
 1921 0291 E8000000 		call	png_error@PLT
 1921      00
 1922              	.LVL160:
 1923              	.L105:
 288:fltk-1.3.4-1/png/pngset.c **** 
 1924              		.loc 1 288 7 view .LVU524
 1925 0296 488D3500 		leaq	.LC15(%rip), %rsi
 1925      000000
 1926 029d 4C89E7   		movq	%r12, %rdi
 1927 02a0 E8000000 		call	png_error@PLT
 1927      00
 1928              	.LVL161:
 1929              	.L130:
 324:fltk-1.3.4-1/png/pngset.c ****       return;
 1930              		.loc 1 324 7 view .LVU525
 1931 02a5 488D3500 		leaq	.LC18(%rip), %rsi
 1931      000000
 1932 02ac EB8E     		jmp	.L127
 1933              	.L131:
 335:fltk-1.3.4-1/png/pngset.c ****       return;
 1934              		.loc 1 335 7 view .LVU526
 1935 02ae 488D3500 		leaq	.LC19(%rip), %rsi
 1935      000000
 1936 02b5 EB85     		jmp	.L127
 1937              	.LVL162:
 1938              	.L129:
 303:fltk-1.3.4-1/png/pngset.c ****       return;
 1939              		.loc 1 303 7 view .LVU527
 1940 02b7 488D3500 		leaq	.LC17(%rip), %rsi
 1940      000000
 1941 02be E979FFFF 		jmp	.L127
 1941      FF
 1942              		.cfi_endproc
 1943              	.LFE51:
 1945              		.section	.rodata.png_set_sCAL_s.str1.1,"aMS",@progbits,1
 1946              	.LC21:
 1947 0000 496E7661 		.string	"Invalid sCAL unit"
 1947      6C696420 
 1947      7343414C 
 1947      20756E69 
 1947      7400
 1948              	.LC22:
 1949 0012 496E7661 		.string	"Invalid sCAL width"
 1949      6C696420 
 1949      7343414C 
 1949      20776964 
 1949      746800
 1950              	.LC23:
 1951 0025 496E7661 		.string	"Invalid sCAL height"
 1951      6C696420 
 1951      7343414C 
 1951      20686569 
 1951      67687400 
 1952              		.section	.rodata.png_set_sCAL_s.str1.8,"aMS",@progbits,1
 1953              		.align 8
 1954              	.LC24:
 1955 0000 4D656D6F 		.string	"Memory allocation failed while processing sCAL"
 1955      72792061 
 1955      6C6C6F63 
 1955      6174696F 
 1955      6E206661 
 1956              		.section	.text.png_set_sCAL_s,"ax",@progbits
 1957              		.p2align 4
 1958              		.globl	png_set_sCAL_s
 1960              	png_set_sCAL_s:
 1961              	.LVL163:
 1962              	.LFB52:
 367:fltk-1.3.4-1/png/pngset.c ****    png_size_t lengthw = 0, lengthh = 0;
 1963              		.loc 1 367 1 view -0
 1964              		.cfi_startproc
 367:fltk-1.3.4-1/png/pngset.c ****    png_size_t lengthw = 0, lengthh = 0;
 1965              		.loc 1 367 1 is_stmt 0 view .LVU529
 1966 0000 F30F1EFA 		endbr64
 1967 0004 4157     		pushq	%r15
 1968              		.cfi_def_cfa_offset 16
 1969              		.cfi_offset 15, -16
 1970 0006 4156     		pushq	%r14
 1971              		.cfi_def_cfa_offset 24
 1972              		.cfi_offset 14, -24
 1973 0008 4155     		pushq	%r13
 1974              		.cfi_def_cfa_offset 32
 1975              		.cfi_offset 13, -32
 1976 000a 4154     		pushq	%r12
 1977              		.cfi_def_cfa_offset 40
 1978              		.cfi_offset 12, -40
 1979 000c 55       		pushq	%rbp
 1980              		.cfi_def_cfa_offset 48
 1981              		.cfi_offset 6, -48
 1982 000d 53       		pushq	%rbx
 1983              		.cfi_def_cfa_offset 56
 1984              		.cfi_offset 3, -56
 1985 000e 4883EC18 		subq	$24, %rsp
 1986              		.cfi_def_cfa_offset 80
 367:fltk-1.3.4-1/png/pngset.c ****    png_size_t lengthw = 0, lengthh = 0;
 1987              		.loc 1 367 1 view .LVU530
 1988 0012 8954240C 		movl	%edx, 12(%rsp)
 368:fltk-1.3.4-1/png/pngset.c **** 
 1989              		.loc 1 368 4 is_stmt 1 view .LVU531
 1990              	.LVL164:
 370:fltk-1.3.4-1/png/pngset.c **** 
 1991              		.loc 1 370 4 view .LVU532
 372:fltk-1.3.4-1/png/pngset.c ****       return;
 1992              		.loc 1 372 4 view .LVU533
 372:fltk-1.3.4-1/png/pngset.c ****       return;
 1993              		.loc 1 372 7 is_stmt 0 view .LVU534
 1994 0016 4885FF   		testq	%rdi, %rdi
 1995 0019 0F840801 		je	.L132
 1995      0000
 1996 001f 4889F3   		movq	%rsi, %rbx
 1997 0022 4885F6   		testq	%rsi, %rsi
 1998 0025 0F84FC00 		je	.L132
 1998      0000
 378:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL unit");
 1999              		.loc 1 378 18 view .LVU535
 2000 002b 8D42FF   		leal	-1(%rdx), %eax
 2001 002e 4989FF   		movq	%rdi, %r15
 378:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL unit");
 2002              		.loc 1 378 4 is_stmt 1 view .LVU536
 378:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL unit");
 2003              		.loc 1 378 7 is_stmt 0 view .LVU537
 2004 0031 83F801   		cmpl	$1, %eax
 2005 0034 0F875101 		ja	.L155
 2005      0000
 2006 003a 4889CD   		movq	%rcx, %rbp
 2007              	.LVL165:
 2008              	.LBB137:
 2009              	.LBI137:
 365:fltk-1.3.4-1/png/pngset.c ****     int unit, png_const_charp swidth, png_const_charp sheight)
 2010              		.loc 1 365 1 is_stmt 1 view .LVU538
 2011              	.LBB138:
 381:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 2012              		.loc 1 381 4 view .LVU539
 381:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 2013              		.loc 1 381 7 is_stmt 0 view .LVU540
 2014 003d 4885C9   		testq	%rcx, %rcx
 2015 0040 0F84F000 		je	.L136
 2015      0000
 381:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 2016              		.loc 1 381 37 view .LVU541
 2017 0046 4889CF   		movq	%rcx, %rdi
 2018              	.LVL166:
 381:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 2019              		.loc 1 381 37 view .LVU542
 2020 0049 4D89C4   		movq	%r8, %r12
 2021 004c E8000000 		call	strlen@PLT
 2021      00
 2022              	.LVL167:
 381:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 2023              		.loc 1 381 37 view .LVU543
 2024 0051 4989C5   		movq	%rax, %r13
 2025              	.LVL168:
 381:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 2026              		.loc 1 381 23 view .LVU544
 2027 0054 4885C0   		testq	%rax, %rax
 2028 0057 0F84D900 		je	.L136
 2028      0000
 381:fltk-1.3.4-1/png/pngset.c ****        swidth[0] == 45 /* '-' */ || !png_check_fp_string(swidth, lengthw))
 2029              		.loc 1 381 58 view .LVU545
 2030 005d 807D002D 		cmpb	$45, 0(%rbp)
 2031 0061 0F84CF00 		je	.L136
 2031      0000
 382:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL width");
 2032              		.loc 1 382 38 view .LVU546
 2033 0067 4889C6   		movq	%rax, %rsi
 2034 006a 4889EF   		movq	%rbp, %rdi
 2035 006d E8000000 		call	png_check_fp_string@PLT
 2035      00
 2036              	.LVL169:
 382:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL width");
 2037              		.loc 1 382 34 view .LVU547
 2038 0072 85C0     		testl	%eax, %eax
 2039 0074 0F84BC00 		je	.L136
 2039      0000
 385:fltk-1.3.4-1/png/pngset.c ****        sheight[0] == 45 /* '-' */ || !png_check_fp_string(sheight, lengthh))
 2040              		.loc 1 385 4 is_stmt 1 view .LVU548
 385:fltk-1.3.4-1/png/pngset.c ****        sheight[0] == 45 /* '-' */ || !png_check_fp_string(sheight, lengthh))
 2041              		.loc 1 385 7 is_stmt 0 view .LVU549
 2042 007a 4D85E4   		testq	%r12, %r12
 2043 007d 0F84C200 		je	.L138
 2043      0000
 385:fltk-1.3.4-1/png/pngset.c ****        sheight[0] == 45 /* '-' */ || !png_check_fp_string(sheight, lengthh))
 2044              		.loc 1 385 38 view .LVU550
 2045 0083 4C89E7   		movq	%r12, %rdi
 2046 0086 E8000000 		call	strlen@PLT
 2046      00
 2047              	.LVL170:
 2048 008b 4989C6   		movq	%rax, %r14
 2049              	.LVL171:
 385:fltk-1.3.4-1/png/pngset.c ****        sheight[0] == 45 /* '-' */ || !png_check_fp_string(sheight, lengthh))
 2050              		.loc 1 385 24 view .LVU551
 2051 008e 4885C0   		testq	%rax, %rax
 2052 0091 0F84AE00 		je	.L138
 2052      0000
 385:fltk-1.3.4-1/png/pngset.c ****        sheight[0] == 45 /* '-' */ || !png_check_fp_string(sheight, lengthh))
 2053              		.loc 1 385 60 view .LVU552
 2054 0097 41803C24 		cmpb	$45, (%r12)
 2054      2D
 2055 009c 0F84A300 		je	.L138
 2055      0000
 386:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL height");
 2056              		.loc 1 386 39 view .LVU553
 2057 00a2 4889C6   		movq	%rax, %rsi
 2058 00a5 4C89E7   		movq	%r12, %rdi
 2059 00a8 E8000000 		call	png_check_fp_string@PLT
 2059      00
 2060              	.LVL172:
 386:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Invalid sCAL height");
 2061              		.loc 1 386 35 view .LVU554
 2062 00ad 85C0     		testl	%eax, %eax
 2063 00af 0F849000 		je	.L138
 2063      0000
 389:fltk-1.3.4-1/png/pngset.c **** 
 2064              		.loc 1 389 4 is_stmt 1 view .LVU555
 389:fltk-1.3.4-1/png/pngset.c **** 
 2065              		.loc 1 389 26 is_stmt 0 view .LVU556
 2066 00b5 0FB64424 		movzbl	12(%rsp), %eax
 2066      0C
 391:fltk-1.3.4-1/png/pngset.c **** 
 2067              		.loc 1 391 4 view .LVU557
 2068 00ba 4983C501 		addq	$1, %r13
 2069              	.LVL173:
 395:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthw));
 2070              		.loc 1 395 29 view .LVU558
 2071 00be 4C89FF   		movq	%r15, %rdi
 2072 00c1 4C89EE   		movq	%r13, %rsi
 389:fltk-1.3.4-1/png/pngset.c **** 
 2073              		.loc 1 389 26 view .LVU559
 2074 00c4 88833C01 		movb	%al, 316(%rbx)
 2074      0000
 391:fltk-1.3.4-1/png/pngset.c **** 
 2075              		.loc 1 391 4 is_stmt 1 view .LVU560
 2076              	.LVL174:
 393:fltk-1.3.4-1/png/pngset.c **** 
 2077              		.loc 1 393 4 view .LVU561
 395:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthw));
 2078              		.loc 1 395 4 view .LVU562
 395:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthw));
 2079              		.loc 1 395 29 is_stmt 0 view .LVU563
 2080 00ca E8000000 		call	png_malloc_warn@PLT
 2080      00
 2081              	.LVL175:
 395:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthw));
 2082              		.loc 1 395 27 view .LVU564
 2083 00cf 48898340 		movq	%rax, 320(%rbx)
 2083      010000
 398:fltk-1.3.4-1/png/pngset.c ****    {
 2084              		.loc 1 398 4 is_stmt 1 view .LVU565
 395:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthw));
 2085              		.loc 1 395 29 is_stmt 0 view .LVU566
 2086 00d6 4889C7   		movq	%rax, %rdi
 398:fltk-1.3.4-1/png/pngset.c ****    {
 2087              		.loc 1 398 7 view .LVU567
 2088 00d9 4885C0   		testq	%rax, %rax
 2089 00dc 0F848C00 		je	.L154
 2089      0000
 404:fltk-1.3.4-1/png/pngset.c **** 
 2090              		.loc 1 404 4 is_stmt 1 view .LVU568
 2091              	.LVL176:
 2092              	.LBB139:
 2093              	.LBI139:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2094              		.loc 2 31 1 view .LVU569
 2095              	.LBB140:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2096              		.loc 2 34 3 view .LVU570
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2097              		.loc 2 34 10 is_stmt 0 view .LVU571
 2098 00e2 4C89EA   		movq	%r13, %rdx
 2099 00e5 4889EE   		movq	%rbp, %rsi
 2100              	.LBE140:
 2101              	.LBE139:
 406:fltk-1.3.4-1/png/pngset.c **** 
 2102              		.loc 1 406 4 view .LVU572
 2103 00e8 4983C601 		addq	$1, %r14
 2104              	.LVL177:
 2105              	.LBB142:
 2106              	.LBB141:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2107              		.loc 2 34 10 view .LVU573
 2108 00ec E8000000 		call	memcpy@PLT
 2108      00
 2109              	.LVL178:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2110              		.loc 2 34 10 view .LVU574
 2111              	.LBE141:
 2112              	.LBE142:
 406:fltk-1.3.4-1/png/pngset.c **** 
 2113              		.loc 1 406 4 is_stmt 1 view .LVU575
 408:fltk-1.3.4-1/png/pngset.c **** 
 2114              		.loc 1 408 4 view .LVU576
 410:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthh));
 2115              		.loc 1 410 4 view .LVU577
 410:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthh));
 2116              		.loc 1 410 30 is_stmt 0 view .LVU578
 2117 00f1 4C89FF   		movq	%r15, %rdi
 2118 00f4 4C89F6   		movq	%r14, %rsi
 2119 00f7 E8000000 		call	png_malloc_warn@PLT
 2119      00
 2120              	.LVL179:
 410:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthh));
 2121              		.loc 1 410 28 view .LVU579
 2122 00fc 48898348 		movq	%rax, 328(%rbx)
 2122      010000
 413:fltk-1.3.4-1/png/pngset.c ****    {
 2123              		.loc 1 413 4 is_stmt 1 view .LVU580
 410:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, lengthh));
 2124              		.loc 1 410 30 is_stmt 0 view .LVU581
 2125 0103 4889C7   		movq	%rax, %rdi
 413:fltk-1.3.4-1/png/pngset.c ****    {
 2126              		.loc 1 413 7 view .LVU582
 2127 0106 4885C0   		testq	%rax, %rax
 2128 0109 7449     		je	.L156
 422:fltk-1.3.4-1/png/pngset.c **** 
 2129              		.loc 1 422 4 is_stmt 1 view .LVU583
 2130              	.LVL180:
 2131              	.LBB143:
 2132              	.LBI143:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2133              		.loc 2 31 1 view .LVU584
 2134              	.LBB144:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2135              		.loc 2 34 3 view .LVU585
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2136              		.loc 2 34 10 is_stmt 0 view .LVU586
 2137 010b 4C89F2   		movq	%r14, %rdx
 2138 010e 4C89E6   		movq	%r12, %rsi
 2139 0111 E8000000 		call	memcpy@PLT
 2139      00
 2140              	.LVL181:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2141              		.loc 2 34 10 view .LVU587
 2142              	.LBE144:
 2143              	.LBE143:
 424:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_SCAL;
 2144              		.loc 1 424 4 is_stmt 1 view .LVU588
 424:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_SCAL;
 2145              		.loc 1 424 20 is_stmt 0 view .LVU589
 2146 0116 814B0800 		orl	$16384, 8(%rbx)
 2146      400000
 425:fltk-1.3.4-1/png/pngset.c **** }
 2147              		.loc 1 425 4 is_stmt 1 view .LVU590
 425:fltk-1.3.4-1/png/pngset.c **** }
 2148              		.loc 1 425 22 is_stmt 0 view .LVU591
 2149 011d 818B1C01 		orl	$256, 284(%rbx)
 2149      00000001 
 2149      0000
 2150              	.LVL182:
 2151              	.L132:
 425:fltk-1.3.4-1/png/pngset.c **** }
 2152              		.loc 1 425 22 view .LVU592
 2153              	.LBE138:
 2154              	.LBE137:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2155              		.loc 1 426 1 view .LVU593
 2156 0127 4883C418 		addq	$24, %rsp
 2157              		.cfi_remember_state
 2158              		.cfi_def_cfa_offset 56
 2159 012b 5B       		popq	%rbx
 2160              		.cfi_def_cfa_offset 48
 2161 012c 5D       		popq	%rbp
 2162              		.cfi_def_cfa_offset 40
 2163 012d 415C     		popq	%r12
 2164              		.cfi_def_cfa_offset 32
 2165 012f 415D     		popq	%r13
 2166              		.cfi_def_cfa_offset 24
 2167 0131 415E     		popq	%r14
 2168              		.cfi_def_cfa_offset 16
 2169 0133 415F     		popq	%r15
 2170              		.cfi_def_cfa_offset 8
 2171 0135 C3       		ret
 2172              	.LVL183:
 2173              	.L136:
 2174              		.cfi_restore_state
 2175              	.LBB148:
 2176              	.LBB145:
 383:fltk-1.3.4-1/png/pngset.c **** 
 2177              		.loc 1 383 7 is_stmt 1 view .LVU594
 2178 0136 488D3500 		leaq	.LC22(%rip), %rsi
 2178      000000
 2179 013d 4C89FF   		movq	%r15, %rdi
 2180 0140 E8000000 		call	png_error@PLT
 2180      00
 2181              	.LVL184:
 2182              	.L138:
 387:fltk-1.3.4-1/png/pngset.c **** 
 2183              		.loc 1 387 7 view .LVU595
 2184 0145 488D3500 		leaq	.LC23(%rip), %rsi
 2184      000000
 2185 014c 4C89FF   		movq	%r15, %rdi
 2186 014f E8000000 		call	png_error@PLT
 2186      00
 2187              	.LVL185:
 2188              	.L156:
 415:fltk-1.3.4-1/png/pngset.c ****       info_ptr->scal_s_width = NULL;
 2189              		.loc 1 415 7 view .LVU596
 2190 0154 488BB340 		movq	320(%rbx), %rsi
 2190      010000
 2191 015b 4C89FF   		movq	%r15, %rdi
 2192 015e E8000000 		call	png_free@PLT
 2192      00
 2193              	.LVL186:
 416:fltk-1.3.4-1/png/pngset.c **** 
 2194              		.loc 1 416 7 view .LVU597
 416:fltk-1.3.4-1/png/pngset.c **** 
 2195              		.loc 1 416 30 is_stmt 0 view .LVU598
 2196 0163 48C78340 		movq	$0, 320(%rbx)
 2196      01000000 
 2196      000000
 2197              	.L154:
 418:fltk-1.3.4-1/png/pngset.c ****       return;
 2198              		.loc 1 418 7 is_stmt 1 view .LVU599
 2199              	.LBE145:
 2200              	.LBE148:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2201              		.loc 1 426 1 is_stmt 0 view .LVU600
 2202 016e 4883C418 		addq	$24, %rsp
 2203              		.cfi_remember_state
 2204              		.cfi_def_cfa_offset 56
 2205              	.LBB149:
 2206              	.LBB146:
 418:fltk-1.3.4-1/png/pngset.c ****       return;
 2207              		.loc 1 418 7 view .LVU601
 2208 0172 4C89FF   		movq	%r15, %rdi
 2209 0175 488D3500 		leaq	.LC24(%rip), %rsi
 2209      000000
 2210              	.LBE146:
 2211              	.LBE149:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2212              		.loc 1 426 1 view .LVU602
 2213 017c 5B       		popq	%rbx
 2214              		.cfi_def_cfa_offset 48
 2215              	.LVL187:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2216              		.loc 1 426 1 view .LVU603
 2217 017d 5D       		popq	%rbp
 2218              		.cfi_def_cfa_offset 40
 2219              	.LVL188:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2220              		.loc 1 426 1 view .LVU604
 2221 017e 415C     		popq	%r12
 2222              		.cfi_def_cfa_offset 32
 2223              	.LVL189:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2224              		.loc 1 426 1 view .LVU605
 2225 0180 415D     		popq	%r13
 2226              		.cfi_def_cfa_offset 24
 2227              	.LVL190:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2228              		.loc 1 426 1 view .LVU606
 2229 0182 415E     		popq	%r14
 2230              		.cfi_def_cfa_offset 16
 2231              	.LVL191:
 426:fltk-1.3.4-1/png/pngset.c **** 
 2232              		.loc 1 426 1 view .LVU607
 2233 0184 415F     		popq	%r15
 2234              		.cfi_def_cfa_offset 8
 2235              	.LVL192:
 2236              	.LBB150:
 2237              	.LBB147:
 418:fltk-1.3.4-1/png/pngset.c ****       return;
 2238              		.loc 1 418 7 view .LVU608
 2239 0186 E9000000 		jmp	png_warning@PLT
 2239      00
 2240              	.LVL193:
 2241              	.L155:
 2242              		.cfi_restore_state
 418:fltk-1.3.4-1/png/pngset.c ****       return;
 2243              		.loc 1 418 7 view .LVU609
 2244              	.LBE147:
 2245              	.LBE150:
 379:fltk-1.3.4-1/png/pngset.c **** 
 2246              		.loc 1 379 7 is_stmt 1 view .LVU610
 2247 018b 488D3500 		leaq	.LC21(%rip), %rsi
 2247      000000
 2248 0192 E8000000 		call	png_error@PLT
 2248      00
 2249              	.LVL194:
 379:fltk-1.3.4-1/png/pngset.c **** 
 2250              		.loc 1 379 7 is_stmt 0 view .LVU611
 2251              		.cfi_endproc
 2252              	.LFE52:
 2254              		.section	.rodata.png_set_sCAL.str1.1,"aMS",@progbits,1
 2255              	.LC26:
 2256 0000 496E7661 		.string	"Invalid sCAL width ignored"
 2256      6C696420 
 2256      7343414C 
 2256      20776964 
 2256      74682069 
 2257              	.LC27:
 2258 001b 496E7661 		.string	"Invalid sCAL height ignored"
 2258      6C696420 
 2258      7343414C 
 2258      20686569 
 2258      67687420 
 2259              		.section	.text.png_set_sCAL,"ax",@progbits
 2260              		.p2align 4
 2261              		.globl	png_set_sCAL
 2263              	png_set_sCAL:
 2264              	.LVL195:
 2265              	.LFB53:
 432:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 2266              		.loc 1 432 1 is_stmt 1 view -0
 2267              		.cfi_startproc
 432:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 2268              		.loc 1 432 1 is_stmt 0 view .LVU613
 2269 0000 F30F1EFA 		endbr64
 2270 0004 4156     		pushq	%r14
 2271              		.cfi_def_cfa_offset 16
 2272              		.cfi_offset 14, -16
 436:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL width ignored");
 2273              		.loc 1 436 7 view .LVU614
 2274 0006 660FEFD2 		pxor	%xmm2, %xmm2
 432:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 2275              		.loc 1 432 1 view .LVU615
 2276 000a 4155     		pushq	%r13
 2277              		.cfi_def_cfa_offset 24
 2278              		.cfi_offset 13, -24
 2279 000c 4154     		pushq	%r12
 2280              		.cfi_def_cfa_offset 32
 2281              		.cfi_offset 12, -32
 2282 000e 55       		pushq	%rbp
 2283              		.cfi_def_cfa_offset 40
 2284              		.cfi_offset 6, -40
 2285 000f 4889FD   		movq	%rdi, %rbp
 2286 0012 53       		pushq	%rbx
 2287              		.cfi_def_cfa_offset 48
 2288              		.cfi_offset 3, -48
 2289 0013 4883EC50 		subq	$80, %rsp
 2290              		.cfi_def_cfa_offset 128
 432:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 2291              		.loc 1 432 1 view .LVU616
 2292 0017 64488B04 		movq	%fs:40, %rax
 2292      25280000 
 2292      00
 2293 0020 48894424 		movq	%rax, 72(%rsp)
 2293      48
 2294 0025 31C0     		xorl	%eax, %eax
 433:fltk-1.3.4-1/png/pngset.c **** 
 2295              		.loc 1 433 4 is_stmt 1 view .LVU617
 436:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL width ignored");
 2296              		.loc 1 436 4 view .LVU618
 436:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL width ignored");
 2297              		.loc 1 436 7 is_stmt 0 view .LVU619
 2298 0027 660F2FD0 		comisd	%xmm0, %xmm2
 2299 002b 0F838F00 		jnb	.L169
 2299      0000
 439:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL height ignored");
 2300              		.loc 1 439 9 is_stmt 1 view .LVU620
 439:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL height ignored");
 2301              		.loc 1 439 12 is_stmt 0 view .LVU621
 2302 0031 660F2FD1 		comisd	%xmm1, %xmm2
 2303 0035 7379     		jnb	.L170
 2304              	.LBB151:
 448:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 2305              		.loc 1 448 7 view .LVU622
 2306 0037 4C8D7424 		leaq	16(%rsp), %r14
 2306      10
 2307 003c 4989F4   		movq	%rsi, %r12
 2308 003f 4189D5   		movl	%edx, %r13d
 2309 0042 B9050000 		movl	$5, %ecx
 2309      00
 2310 0047 BA120000 		movl	$18, %edx
 2310      00
 2311              	.LVL196:
 448:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 2312              		.loc 1 448 7 view .LVU623
 2313 004c 4C89F6   		movq	%r14, %rsi
 2314              	.LVL197:
 448:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 2315              		.loc 1 448 7 view .LVU624
 2316 004f F20F114C 		movsd	%xmm1, 8(%rsp)
 2316      2408
 445:fltk-1.3.4-1/png/pngset.c ****       char sheight[PNG_sCAL_MAX_DIGITS+1];
 2317              		.loc 1 445 7 is_stmt 1 view .LVU625
 446:fltk-1.3.4-1/png/pngset.c **** 
 2318              		.loc 1 446 7 view .LVU626
 448:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 2319              		.loc 1 448 7 view .LVU627
 450:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 2320              		.loc 1 450 7 is_stmt 0 view .LVU628
 2321 0055 488D5C24 		leaq	48(%rsp), %rbx
 2321      30
 448:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 2322              		.loc 1 448 7 view .LVU629
 2323 005a E8000000 		call	png_ascii_from_fp@PLT
 2323      00
 2324              	.LVL198:
 450:fltk-1.3.4-1/png/pngset.c ****          PNG_sCAL_PRECISION);
 2325              		.loc 1 450 7 is_stmt 1 view .LVU630
 2326 005f B9050000 		movl	$5, %ecx
 2326      00
 2327 0064 4889DE   		movq	%rbx, %rsi
 2328 0067 4889EF   		movq	%rbp, %rdi
 2329 006a F20F104C 		movsd	8(%rsp), %xmm1
 2329      2408
 2330 0070 BA120000 		movl	$18, %edx
 2330      00
 2331 0075 660F28C1 		movapd	%xmm1, %xmm0
 2332 0079 E8000000 		call	png_ascii_from_fp@PLT
 2332      00
 2333              	.LVL199:
 453:fltk-1.3.4-1/png/pngset.c ****    }
 2334              		.loc 1 453 7 view .LVU631
 2335 007e 4989D8   		movq	%rbx, %r8
 2336 0081 4C89F1   		movq	%r14, %rcx
 2337 0084 4489EA   		movl	%r13d, %edx
 2338 0087 4C89E6   		movq	%r12, %rsi
 2339 008a 4889EF   		movq	%rbp, %rdi
 2340 008d E8000000 		call	png_set_sCAL_s
 2340      00
 2341              	.LVL200:
 2342              	.L157:
 453:fltk-1.3.4-1/png/pngset.c ****    }
 2343              		.loc 1 453 7 is_stmt 0 view .LVU632
 2344              	.LBE151:
 455:fltk-1.3.4-1/png/pngset.c **** #  endif
 2345              		.loc 1 455 1 view .LVU633
 2346 0092 488B4424 		movq	72(%rsp), %rax
 2346      48
 2347 0097 64483304 		xorq	%fs:40, %rax
 2347      25280000 
 2347      00
 2348 00a0 752C     		jne	.L171
 2349 00a2 4883C450 		addq	$80, %rsp
 2350              		.cfi_remember_state
 2351              		.cfi_def_cfa_offset 48
 2352 00a6 5B       		popq	%rbx
 2353              		.cfi_def_cfa_offset 40
 2354 00a7 5D       		popq	%rbp
 2355              		.cfi_def_cfa_offset 32
 2356              	.LVL201:
 455:fltk-1.3.4-1/png/pngset.c **** #  endif
 2357              		.loc 1 455 1 view .LVU634
 2358 00a8 415C     		popq	%r12
 2359              		.cfi_def_cfa_offset 24
 2360 00aa 415D     		popq	%r13
 2361              		.cfi_def_cfa_offset 16
 2362 00ac 415E     		popq	%r14
 2363              		.cfi_def_cfa_offset 8
 2364 00ae C3       		ret
 2365              	.LVL202:
 2366 00af 90       		.p2align 4,,10
 2367              		.p2align 3
 2368              	.L170:
 2369              		.cfi_restore_state
 440:fltk-1.3.4-1/png/pngset.c **** 
 2370              		.loc 1 440 7 is_stmt 1 view .LVU635
 2371 00b0 488D3500 		leaq	.LC27(%rip), %rsi
 2371      000000
 2372              	.LVL203:
 440:fltk-1.3.4-1/png/pngset.c **** 
 2373              		.loc 1 440 7 is_stmt 0 view .LVU636
 2374 00b7 E8000000 		call	png_warning@PLT
 2374      00
 2375              	.LVL204:
 440:fltk-1.3.4-1/png/pngset.c **** 
 2376              		.loc 1 440 7 view .LVU637
 2377 00bc EBD4     		jmp	.L157
 2378              	.LVL205:
 2379 00be 6690     		.p2align 4,,10
 2380              		.p2align 3
 2381              	.L169:
 437:fltk-1.3.4-1/png/pngset.c **** 
 2382              		.loc 1 437 7 is_stmt 1 view .LVU638
 2383 00c0 488D3500 		leaq	.LC26(%rip), %rsi
 2383      000000
 2384              	.LVL206:
 437:fltk-1.3.4-1/png/pngset.c **** 
 2385              		.loc 1 437 7 is_stmt 0 view .LVU639
 2386 00c7 E8000000 		call	png_warning@PLT
 2386      00
 2387              	.LVL207:
 437:fltk-1.3.4-1/png/pngset.c **** 
 2388              		.loc 1 437 7 view .LVU640
 2389 00cc EBC4     		jmp	.L157
 2390              	.L171:
 455:fltk-1.3.4-1/png/pngset.c **** #  endif
 2391              		.loc 1 455 1 view .LVU641
 2392 00ce E8000000 		call	__stack_chk_fail@PLT
 2392      00
 2393              	.LVL208:
 2394              		.cfi_endproc
 2395              	.LFE53:
 2397              		.section	.text.png_set_sCAL_fixed,"ax",@progbits
 2398              		.p2align 4
 2399              		.globl	png_set_sCAL_fixed
 2401              	png_set_sCAL_fixed:
 2402              	.LVL209:
 2403              	.LFB54:
 462:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 2404              		.loc 1 462 1 is_stmt 1 view -0
 2405              		.cfi_startproc
 462:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 2406              		.loc 1 462 1 is_stmt 0 view .LVU643
 2407 0000 F30F1EFA 		endbr64
 2408 0004 4157     		pushq	%r15
 2409              		.cfi_def_cfa_offset 16
 2410              		.cfi_offset 15, -16
 2411 0006 4156     		pushq	%r14
 2412              		.cfi_def_cfa_offset 24
 2413              		.cfi_offset 14, -24
 2414 0008 4155     		pushq	%r13
 2415              		.cfi_def_cfa_offset 32
 2416              		.cfi_offset 13, -32
 2417 000a 4154     		pushq	%r12
 2418              		.cfi_def_cfa_offset 40
 2419              		.cfi_offset 12, -40
 2420 000c 55       		pushq	%rbp
 2421              		.cfi_def_cfa_offset 48
 2422              		.cfi_offset 6, -48
 2423 000d 4889FD   		movq	%rdi, %rbp
 2424 0010 53       		pushq	%rbx
 2425              		.cfi_def_cfa_offset 56
 2426              		.cfi_offset 3, -56
 2427 0011 4883EC48 		subq	$72, %rsp
 2428              		.cfi_def_cfa_offset 128
 462:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sCAL");
 2429              		.loc 1 462 1 view .LVU644
 2430 0015 64488B04 		movq	%fs:40, %rax
 2430      25280000 
 2430      00
 2431 001e 48894424 		movq	%rax, 56(%rsp)
 2431      38
 2432 0023 31C0     		xorl	%eax, %eax
 463:fltk-1.3.4-1/png/pngset.c **** 
 2433              		.loc 1 463 4 is_stmt 1 view .LVU645
 466:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL width ignored");
 2434              		.loc 1 466 4 view .LVU646
 466:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL width ignored");
 2435              		.loc 1 466 7 is_stmt 0 view .LVU647
 2436 0025 85C9     		testl	%ecx, %ecx
 2437 0027 0F8E8300 		jle	.L178
 2437      0000
 2438 002d 4589C4   		movl	%r8d, %r12d
 469:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL height ignored");
 2439              		.loc 1 469 9 is_stmt 1 view .LVU648
 469:fltk-1.3.4-1/png/pngset.c ****       png_warning(png_ptr, "Invalid sCAL height ignored");
 2440              		.loc 1 469 12 is_stmt 0 view .LVU649
 2441 0030 4585C0   		testl	%r8d, %r8d
 2442 0033 7E6B     		jle	.L179
 2443              	.LBB152:
 478:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fixed(png_ptr, sheight, (sizeof sheight), height);
 2444              		.loc 1 478 7 view .LVU650
 2445 0035 4989E7   		movq	%rsp, %r15
 2446 0038 4989F5   		movq	%rsi, %r13
 479:fltk-1.3.4-1/png/pngset.c **** 
 2447              		.loc 1 479 7 view .LVU651
 2448 003b 488D5C24 		leaq	32(%rsp), %rbx
 2448      20
 2449 0040 4189D6   		movl	%edx, %r14d
 475:fltk-1.3.4-1/png/pngset.c ****       char sheight[PNG_sCAL_MAX_DIGITS+1];
 2450              		.loc 1 475 7 is_stmt 1 view .LVU652
 476:fltk-1.3.4-1/png/pngset.c **** 
 2451              		.loc 1 476 7 view .LVU653
 478:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fixed(png_ptr, sheight, (sizeof sheight), height);
 2452              		.loc 1 478 7 view .LVU654
 2453 0043 4C89FE   		movq	%r15, %rsi
 2454              	.LVL210:
 478:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fixed(png_ptr, sheight, (sizeof sheight), height);
 2455              		.loc 1 478 7 is_stmt 0 view .LVU655
 2456 0046 BA120000 		movl	$18, %edx
 2456      00
 2457              	.LVL211:
 478:fltk-1.3.4-1/png/pngset.c ****       png_ascii_from_fixed(png_ptr, sheight, (sizeof sheight), height);
 2458              		.loc 1 478 7 view .LVU656
 2459 004b E8000000 		call	png_ascii_from_fixed@PLT
 2459      00
 2460              	.LVL212:
 479:fltk-1.3.4-1/png/pngset.c **** 
 2461              		.loc 1 479 7 is_stmt 1 view .LVU657
 2462 0050 4489E1   		movl	%r12d, %ecx
 2463 0053 BA120000 		movl	$18, %edx
 2463      00
 2464 0058 4889DE   		movq	%rbx, %rsi
 2465 005b 4889EF   		movq	%rbp, %rdi
 2466 005e E8000000 		call	png_ascii_from_fixed@PLT
 2466      00
 2467              	.LVL213:
 481:fltk-1.3.4-1/png/pngset.c ****    }
 2468              		.loc 1 481 7 view .LVU658
 2469 0063 4989D8   		movq	%rbx, %r8
 2470 0066 4C89F9   		movq	%r15, %rcx
 2471 0069 4489F2   		movl	%r14d, %edx
 2472 006c 4C89EE   		movq	%r13, %rsi
 2473 006f 4889EF   		movq	%rbp, %rdi
 2474 0072 E8000000 		call	png_set_sCAL_s
 2474      00
 2475              	.LVL214:
 2476              	.L172:
 481:fltk-1.3.4-1/png/pngset.c ****    }
 2477              		.loc 1 481 7 is_stmt 0 view .LVU659
 2478              	.LBE152:
 483:fltk-1.3.4-1/png/pngset.c **** #  endif
 2479              		.loc 1 483 1 view .LVU660
 2480 0077 488B4424 		movq	56(%rsp), %rax
 2480      38
 2481 007c 64483304 		xorq	%fs:40, %rax
 2481      25280000 
 2481      00
 2482 0085 7537     		jne	.L180
 2483 0087 4883C448 		addq	$72, %rsp
 2484              		.cfi_remember_state
 2485              		.cfi_def_cfa_offset 56
 2486 008b 5B       		popq	%rbx
 2487              		.cfi_def_cfa_offset 48
 2488 008c 5D       		popq	%rbp
 2489              		.cfi_def_cfa_offset 40
 2490              	.LVL215:
 483:fltk-1.3.4-1/png/pngset.c **** #  endif
 2491              		.loc 1 483 1 view .LVU661
 2492 008d 415C     		popq	%r12
 2493              		.cfi_def_cfa_offset 32
 2494 008f 415D     		popq	%r13
 2495              		.cfi_def_cfa_offset 24
 2496 0091 415E     		popq	%r14
 2497              		.cfi_def_cfa_offset 16
 2498 0093 415F     		popq	%r15
 2499              		.cfi_def_cfa_offset 8
 2500 0095 C3       		ret
 2501              	.LVL216:
 2502 0096 662E0F1F 		.p2align 4,,10
 2502      84000000 
 2502      0000
 2503              		.p2align 3
 2504              	.L179:
 2505              		.cfi_restore_state
 470:fltk-1.3.4-1/png/pngset.c **** 
 2506              		.loc 1 470 7 is_stmt 1 view .LVU662
 2507 00a0 488D3500 		leaq	.LC27(%rip), %rsi
 2507      000000
 2508              	.LVL217:
 470:fltk-1.3.4-1/png/pngset.c **** 
 2509              		.loc 1 470 7 is_stmt 0 view .LVU663
 2510 00a7 E8000000 		call	png_warning@PLT
 2510      00
 2511              	.LVL218:
 470:fltk-1.3.4-1/png/pngset.c **** 
 2512              		.loc 1 470 7 view .LVU664
 2513 00ac EBC9     		jmp	.L172
 2514              	.LVL219:
 2515 00ae 6690     		.p2align 4,,10
 2516              		.p2align 3
 2517              	.L178:
 467:fltk-1.3.4-1/png/pngset.c **** 
 2518              		.loc 1 467 7 is_stmt 1 view .LVU665
 2519 00b0 488D3500 		leaq	.LC26(%rip), %rsi
 2519      000000
 2520              	.LVL220:
 467:fltk-1.3.4-1/png/pngset.c **** 
 2521              		.loc 1 467 7 is_stmt 0 view .LVU666
 2522 00b7 E8000000 		call	png_warning@PLT
 2522      00
 2523              	.LVL221:
 467:fltk-1.3.4-1/png/pngset.c **** 
 2524              		.loc 1 467 7 view .LVU667
 2525 00bc EBB9     		jmp	.L172
 2526              	.L180:
 483:fltk-1.3.4-1/png/pngset.c **** #  endif
 2527              		.loc 1 483 1 view .LVU668
 2528 00be E8000000 		call	__stack_chk_fail@PLT
 2528      00
 2529              	.LVL222:
 2530              		.cfi_endproc
 2531              	.LFE54:
 2533              		.section	.text.png_set_pHYs,"ax",@progbits
 2534              		.p2align 4
 2535              		.globl	png_set_pHYs
 2537              	png_set_pHYs:
 2538              	.LVL223:
 2539              	.LFB55:
 491:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "pHYs");
 2540              		.loc 1 491 1 is_stmt 1 view -0
 2541              		.cfi_startproc
 491:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "pHYs");
 2542              		.loc 1 491 1 is_stmt 0 view .LVU670
 2543 0000 F30F1EFA 		endbr64
 492:fltk-1.3.4-1/png/pngset.c **** 
 2544              		.loc 1 492 4 is_stmt 1 view .LVU671
 494:fltk-1.3.4-1/png/pngset.c ****       return;
 2545              		.loc 1 494 4 view .LVU672
 494:fltk-1.3.4-1/png/pngset.c ****       return;
 2546              		.loc 1 494 7 is_stmt 0 view .LVU673
 2547 0004 4885FF   		testq	%rdi, %rdi
 2548 0007 741F     		je	.L181
 2549 0009 4885F6   		testq	%rsi, %rsi
 2550 000c 741A     		je	.L181
 497:fltk-1.3.4-1/png/pngset.c ****    info_ptr->y_pixels_per_unit = res_y;
 2551              		.loc 1 497 4 is_stmt 1 view .LVU674
 500:fltk-1.3.4-1/png/pngset.c **** }
 2552              		.loc 1 500 20 is_stmt 0 view .LVU675
 2553 000e 814E0880 		orl	$128, 8(%rsi)
 2553      000000
 497:fltk-1.3.4-1/png/pngset.c ****    info_ptr->y_pixels_per_unit = res_y;
 2554              		.loc 1 497 32 view .LVU676
 2555 0015 8996E000 		movl	%edx, 224(%rsi)
 2555      0000
 498:fltk-1.3.4-1/png/pngset.c ****    info_ptr->phys_unit_type = (png_byte)unit_type;
 2556              		.loc 1 498 4 is_stmt 1 view .LVU677
 498:fltk-1.3.4-1/png/pngset.c ****    info_ptr->phys_unit_type = (png_byte)unit_type;
 2557              		.loc 1 498 32 is_stmt 0 view .LVU678
 2558 001b 898EE400 		movl	%ecx, 228(%rsi)
 2558      0000
 499:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_pHYs;
 2559              		.loc 1 499 4 is_stmt 1 view .LVU679
 499:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_pHYs;
 2560              		.loc 1 499 31 is_stmt 0 view .LVU680
 2561 0021 448886E8 		movb	%r8b, 232(%rsi)
 2561      000000
 500:fltk-1.3.4-1/png/pngset.c **** }
 2562              		.loc 1 500 4 is_stmt 1 view .LVU681
 2563              	.L181:
 501:fltk-1.3.4-1/png/pngset.c **** #endif
 2564              		.loc 1 501 1 is_stmt 0 view .LVU682
 2565 0028 C3       		ret
 2566              		.cfi_endproc
 2567              	.LFE55:
 2569              		.section	.rodata.png_set_PLTE.str1.1,"aMS",@progbits,1
 2570              	.LC28:
 2571 0000 496E7661 		.string	"Invalid palette length"
 2571      6C696420 
 2571      70616C65 
 2571      74746520 
 2571      6C656E67 
 2572              	.LC29:
 2573 0017 496E7661 		.string	"Invalid palette"
 2573      6C696420 
 2573      70616C65 
 2573      74746500 
 2574              		.section	.text.png_set_PLTE,"ax",@progbits
 2575              		.p2align 4
 2576              		.globl	png_set_PLTE
 2578              	png_set_PLTE:
 2579              	.LVL224:
 2580              	.LFB56:
 507:fltk-1.3.4-1/png/pngset.c **** 
 2581              		.loc 1 507 1 is_stmt 1 view -0
 2582              		.cfi_startproc
 507:fltk-1.3.4-1/png/pngset.c **** 
 2583              		.loc 1 507 1 is_stmt 0 view .LVU684
 2584 0000 F30F1EFA 		endbr64
 509:fltk-1.3.4-1/png/pngset.c **** 
 2585              		.loc 1 509 4 is_stmt 1 view .LVU685
 511:fltk-1.3.4-1/png/pngset.c ****       return;
 2586              		.loc 1 511 4 view .LVU686
 511:fltk-1.3.4-1/png/pngset.c ****       return;
 2587              		.loc 1 511 7 is_stmt 0 view .LVU687
 2588 0004 4885FF   		testq	%rdi, %rdi
 2589 0007 0F84BB00 		je	.L204
 2589      0000
 507:fltk-1.3.4-1/png/pngset.c **** 
 2590              		.loc 1 507 1 view .LVU688
 2591 000d 4155     		pushq	%r13
 2592              		.cfi_def_cfa_offset 16
 2593              		.cfi_offset 13, -16
 2594 000f 4154     		pushq	%r12
 2595              		.cfi_def_cfa_offset 24
 2596              		.cfi_offset 12, -24
 2597 0011 55       		pushq	%rbp
 2598              		.cfi_def_cfa_offset 32
 2599              		.cfi_offset 6, -32
 2600 0012 53       		pushq	%rbx
 2601              		.cfi_def_cfa_offset 40
 2602              		.cfi_offset 3, -40
 2603 0013 4889F3   		movq	%rsi, %rbx
 2604 0016 4883EC08 		subq	$8, %rsp
 2605              		.cfi_def_cfa_offset 48
 511:fltk-1.3.4-1/png/pngset.c ****       return;
 2606              		.loc 1 511 7 view .LVU689
 2607 001a 4885F6   		testq	%rsi, %rsi
 2608 001d 0F849300 		je	.L183
 2608      0000
 2609 0023 4989FD   		movq	%rdi, %r13
 2610 0026 89CD     		movl	%ecx, %ebp
 514:fltk-1.3.4-1/png/pngset.c ****    {
 2611              		.loc 1 514 4 is_stmt 1 view .LVU690
 514:fltk-1.3.4-1/png/pngset.c ****    {
 2612              		.loc 1 514 7 is_stmt 0 view .LVU691
 2613 0028 81F90001 		cmpl	$256, %ecx
 2613      0000
 2614 002e 7620     		jbe	.L185
 516:fltk-1.3.4-1/png/pngset.c ****          png_error(png_ptr, "Invalid palette length");
 2615              		.loc 1 516 7 is_stmt 1 view .LVU692
 516:fltk-1.3.4-1/png/pngset.c ****          png_error(png_ptr, "Invalid palette length");
 2616              		.loc 1 516 10 is_stmt 0 view .LVU693
 2617 0030 807B2503 		cmpb	$3, 37(%rbx)
 517:fltk-1.3.4-1/png/pngset.c **** 
 2618              		.loc 1 517 10 view .LVU694
 2619 0034 488D3500 		leaq	.LC28(%rip), %rsi
 2619      000000
 2620              	.LVL225:
 516:fltk-1.3.4-1/png/pngset.c ****          png_error(png_ptr, "Invalid palette length");
 2621              		.loc 1 516 10 view .LVU695
 2622 003b 0F844C01 		je	.L207
 2622      0000
 521:fltk-1.3.4-1/png/pngset.c ****          return;
 2623              		.loc 1 521 10 is_stmt 1 view .LVU696
 561:fltk-1.3.4-1/png/pngset.c **** 
 2624              		.loc 1 561 1 is_stmt 0 view .LVU697
 2625 0041 4883C408 		addq	$8, %rsp
 2626              		.cfi_remember_state
 2627              		.cfi_def_cfa_offset 40
 2628 0045 5B       		popq	%rbx
 2629              		.cfi_restore 3
 2630              		.cfi_def_cfa_offset 32
 2631              	.LVL226:
 561:fltk-1.3.4-1/png/pngset.c **** 
 2632              		.loc 1 561 1 view .LVU698
 2633 0046 5D       		popq	%rbp
 2634              		.cfi_restore 6
 2635              		.cfi_def_cfa_offset 24
 2636 0047 415C     		popq	%r12
 2637              		.cfi_restore 12
 2638              		.cfi_def_cfa_offset 16
 2639 0049 415D     		popq	%r13
 2640              		.cfi_restore 13
 2641              		.cfi_def_cfa_offset 8
 521:fltk-1.3.4-1/png/pngset.c ****          return;
 2642              		.loc 1 521 10 view .LVU699
 2643 004b E9000000 		jmp	png_warning@PLT
 2643      00
 2644              	.LVL227:
 2645              		.p2align 4,,10
 2646              		.p2align 3
 2647              	.L185:
 2648              		.cfi_restore_state
 521:fltk-1.3.4-1/png/pngset.c ****          return;
 2649              		.loc 1 521 10 view .LVU700
 2650 0050 4989D4   		movq	%rdx, %r12
 526:fltk-1.3.4-1/png/pngset.c ****       (num_palette == 0
 2651              		.loc 1 526 4 is_stmt 1 view .LVU701
 526:fltk-1.3.4-1/png/pngset.c ****       (num_palette == 0
 2652              		.loc 1 526 7 is_stmt 0 view .LVU702
 2653 0053 85C9     		testl	%ecx, %ecx
 2654 0055 7E09     		jle	.L196
 526:fltk-1.3.4-1/png/pngset.c ****       (num_palette == 0
 2655              		.loc 1 526 7 view .LVU703
 2656 0057 4885D2   		testq	%rdx, %rdx
 2657 005a 0F841E01 		je	.L187
 2657      0000
 2658              	.L196:
 526:fltk-1.3.4-1/png/pngset.c ****       (num_palette == 0
 2659              		.loc 1 526 45 discriminator 1 view .LVU704
 2660 0060 85ED     		testl	%ebp, %ebp
 2661 0062 756C     		jne	.L189
 529:fltk-1.3.4-1/png/pngset.c **** #        endif
 2662              		.loc 1 529 13 view .LVU705
 2663 0064 41F68518 		testb	$1, 1048(%r13)
 2663      04000001 
 2664 006c 0F840C01 		je	.L187
 2664      0000
 544:fltk-1.3.4-1/png/pngset.c **** 
 2665              		.loc 1 544 4 is_stmt 1 view .LVU706
 2666 0072 31C9     		xorl	%ecx, %ecx
 2667              	.LVL228:
 544:fltk-1.3.4-1/png/pngset.c **** 
 2668              		.loc 1 544 4 is_stmt 0 view .LVU707
 2669 0074 BA001000 		movl	$4096, %edx
 2669      00
 2670              	.LVL229:
 544:fltk-1.3.4-1/png/pngset.c **** 
 2671              		.loc 1 544 4 view .LVU708
 2672 0079 4889DE   		movq	%rbx, %rsi
 2673 007c 4C89EF   		movq	%r13, %rdi
 2674              	.LVL230:
 544:fltk-1.3.4-1/png/pngset.c **** 
 2675              		.loc 1 544 4 view .LVU709
 2676 007f E8000000 		call	png_free_data@PLT
 2676      00
 2677              	.LVL231:
 550:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_color))));
 2678              		.loc 1 550 4 is_stmt 1 view .LVU710
 550:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_color))));
 2679              		.loc 1 550 23 is_stmt 0 view .LVU711
 2680 0084 BE000300 		movl	$768, %esi
 2680      00
 2681 0089 4C89EF   		movq	%r13, %rdi
 2682 008c E8000000 		call	png_calloc@PLT
 2682      00
 2683              	.LVL232:
 550:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_color))));
 2684              		.loc 1 550 21 view .LVU712
 2685 0091 49898560 		movq	%rax, 608(%r13)
 2685      020000
 553:fltk-1.3.4-1/png/pngset.c ****       memcpy(png_ptr->palette, palette, num_palette * (sizeof (png_color)));
 2686              		.loc 1 553 4 is_stmt 1 view .LVU713
 2687              	.L195:
 555:fltk-1.3.4-1/png/pngset.c ****    info_ptr->num_palette = png_ptr->num_palette = (png_uint_16)num_palette;
 2688              		.loc 1 555 4 view .LVU714
 558:fltk-1.3.4-1/png/pngset.c **** 
 2689              		.loc 1 558 22 is_stmt 0 view .LVU715
 2690 0098 818B1C01 		orl	$4096, 284(%rbx)
 2690      00000010 
 2690      0000
 560:fltk-1.3.4-1/png/pngset.c **** }
 2691              		.loc 1 560 20 view .LVU716
 2692 00a2 834B0808 		orl	$8, 8(%rbx)
 555:fltk-1.3.4-1/png/pngset.c ****    info_ptr->num_palette = png_ptr->num_palette = (png_uint_16)num_palette;
 2693              		.loc 1 555 22 view .LVU717
 2694 00a6 48894318 		movq	%rax, 24(%rbx)
 556:fltk-1.3.4-1/png/pngset.c **** 
 2695              		.loc 1 556 4 is_stmt 1 view .LVU718
 556:fltk-1.3.4-1/png/pngset.c **** 
 2696              		.loc 1 556 49 is_stmt 0 view .LVU719
 2697 00aa 664189AD 		movw	%bp, 616(%r13)
 2697      68020000 
 556:fltk-1.3.4-1/png/pngset.c **** 
 2698              		.loc 1 556 26 view .LVU720
 2699 00b2 66896B20 		movw	%bp, 32(%rbx)
 558:fltk-1.3.4-1/png/pngset.c **** 
 2700              		.loc 1 558 4 is_stmt 1 view .LVU721
 560:fltk-1.3.4-1/png/pngset.c **** }
 2701              		.loc 1 560 4 view .LVU722
 2702              	.LVL233:
 2703              	.L183:
 561:fltk-1.3.4-1/png/pngset.c **** 
 2704              		.loc 1 561 1 is_stmt 0 view .LVU723
 2705 00b6 4883C408 		addq	$8, %rsp
 2706              		.cfi_def_cfa_offset 40
 2707 00ba 5B       		popq	%rbx
 2708              		.cfi_def_cfa_offset 32
 2709              	.LVL234:
 561:fltk-1.3.4-1/png/pngset.c **** 
 2710              		.loc 1 561 1 view .LVU724
 2711 00bb 5D       		popq	%rbp
 2712              		.cfi_def_cfa_offset 24
 2713 00bc 415C     		popq	%r12
 2714              		.cfi_def_cfa_offset 16
 2715 00be 415D     		popq	%r13
 2716              		.cfi_def_cfa_offset 8
 2717 00c0 C3       		ret
 2718              	.LVL235:
 2719              		.p2align 4,,10
 2720 00c1 0F1F8000 		.p2align 3
 2720      000000
 2721              	.L204:
 2722              		.cfi_restore 3
 2723              		.cfi_restore 6
 2724              		.cfi_restore 12
 2725              		.cfi_restore 13
 561:fltk-1.3.4-1/png/pngset.c **** 
 2726              		.loc 1 561 1 view .LVU725
 2727 00c8 C3       		ret
 2728              	.LVL236:
 2729 00c9 0F1F8000 		.p2align 4,,10
 2729      000000
 2730              		.p2align 3
 2731              	.L189:
 2732              		.cfi_def_cfa_offset 48
 2733              		.cfi_offset 3, -40
 2734              		.cfi_offset 6, -32
 2735              		.cfi_offset 12, -24
 2736              		.cfi_offset 13, -16
 544:fltk-1.3.4-1/png/pngset.c **** 
 2737              		.loc 1 544 4 is_stmt 1 view .LVU726
 2738 00d0 BA001000 		movl	$4096, %edx
 2738      00
 2739              	.LVL237:
 544:fltk-1.3.4-1/png/pngset.c **** 
 2740              		.loc 1 544 4 is_stmt 0 view .LVU727
 2741 00d5 31C9     		xorl	%ecx, %ecx
 2742              	.LVL238:
 544:fltk-1.3.4-1/png/pngset.c **** 
 2743              		.loc 1 544 4 view .LVU728
 2744 00d7 4889DE   		movq	%rbx, %rsi
 2745 00da 4C89EF   		movq	%r13, %rdi
 2746              	.LVL239:
 544:fltk-1.3.4-1/png/pngset.c **** 
 2747              		.loc 1 544 4 view .LVU729
 2748 00dd E8000000 		call	png_free_data@PLT
 2748      00
 2749              	.LVL240:
 550:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_color))));
 2750              		.loc 1 550 4 is_stmt 1 view .LVU730
 550:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_color))));
 2751              		.loc 1 550 23 is_stmt 0 view .LVU731
 2752 00e2 BE000300 		movl	$768, %esi
 2752      00
 2753 00e7 4C89EF   		movq	%r13, %rdi
 2754 00ea E8000000 		call	png_calloc@PLT
 2754      00
 2755              	.LVL241:
 554:fltk-1.3.4-1/png/pngset.c ****    info_ptr->palette = png_ptr->palette;
 2756              		.loc 1 554 7 view .LVU732
 2757 00ef 4863D5   		movslq	%ebp, %rdx
 2758 00f2 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 550:fltk-1.3.4-1/png/pngset.c ****        PNG_MAX_PALETTE_LENGTH * (sizeof (png_color))));
 2759              		.loc 1 550 21 view .LVU733
 2760 00f6 49898560 		movq	%rax, 608(%r13)
 2760      020000
 553:fltk-1.3.4-1/png/pngset.c ****       memcpy(png_ptr->palette, palette, num_palette * (sizeof (png_color)));
 2761              		.loc 1 553 4 is_stmt 1 view .LVU734
 554:fltk-1.3.4-1/png/pngset.c ****    info_ptr->palette = png_ptr->palette;
 2762              		.loc 1 554 7 view .LVU735
 2763              	.LVL242:
 2764              	.LBB153:
 2765              	.LBI153:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 2766              		.loc 2 31 1 view .LVU736
 2767              	.LBB154:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2768              		.loc 2 34 3 view .LVU737
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2769              		.loc 2 34 10 is_stmt 0 view .LVU738
 2770 00fd 83FA08   		cmpl	$8, %edx
 2771 0100 732E     		jnb	.L191
 2772 0102 F6C204   		testb	$4, %dl
 2773 0105 7561     		jne	.L208
 2774 0107 85D2     		testl	%edx, %edx
 2775 0109 748D     		je	.L195
 2776 010b 410FB60C 		movzbl	(%r12), %ecx
 2776      24
 2777 0110 8808     		movb	%cl, (%rax)
 2778 0112 F6C202   		testb	$2, %dl
 2779 0115 7481     		je	.L195
 2780 0117 89D2     		movl	%edx, %edx
 2781 0119 410FB74C 		movzwl	-2(%r12,%rdx), %ecx
 2781      14FE
 2782 011f 66894C10 		movw	%cx, -2(%rax,%rdx)
 2782      FE
 2783 0124 E96FFFFF 		jmp	.L195
 2783      FF
 2784 0129 0F1F8000 		.p2align 4,,10
 2784      000000
 2785              		.p2align 3
 2786              	.L191:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2787              		.loc 2 34 10 view .LVU739
 2788 0130 498B0C24 		movq	(%r12), %rcx
 2789 0134 488D7808 		leaq	8(%rax), %rdi
 2790 0138 4883E7F8 		andq	$-8, %rdi
 2791 013c 488908   		movq	%rcx, (%rax)
 2792 013f 89D1     		movl	%edx, %ecx
 2793 0141 498B740C 		movq	-8(%r12,%rcx), %rsi
 2793      F8
 2794 0146 48897408 		movq	%rsi, -8(%rax,%rcx)
 2794      F8
 2795 014b 4889C1   		movq	%rax, %rcx
 2796 014e 4C89E6   		movq	%r12, %rsi
 2797 0151 4829F9   		subq	%rdi, %rcx
 2798 0154 4829CE   		subq	%rcx, %rsi
 2799 0157 01D1     		addl	%edx, %ecx
 2800 0159 89CA     		movl	%ecx, %edx
 2801 015b C1EA03   		shrl	$3, %edx
 2802 015e 89D1     		movl	%edx, %ecx
 2803 0160 F348A5   		rep movsq
 2804 0163 E930FFFF 		jmp	.L195
 2804      FF
 2805              	.L208:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2806              		.loc 2 34 10 view .LVU740
 2807 0168 418B0C24 		movl	(%r12), %ecx
 2808 016c 89D2     		movl	%edx, %edx
 2809 016e 8908     		movl	%ecx, (%rax)
 2810 0170 418B4C14 		movl	-4(%r12,%rdx), %ecx
 2810      FC
 2811 0175 894C10FC 		movl	%ecx, -4(%rax,%rdx)
 2812 0179 E91AFFFF 		jmp	.L195
 2812      FF
 2813              	.LVL243:
 2814              	.L187:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 2815              		.loc 2 34 10 view .LVU741
 2816              	.LBE154:
 2817              	.LBE153:
 533:fltk-1.3.4-1/png/pngset.c ****       return;
 2818              		.loc 1 533 7 is_stmt 1 view .LVU742
 2819 017e 488D3500 		leaq	.LC29(%rip), %rsi
 2819      000000
 2820 0185 4C89EF   		movq	%r13, %rdi
 2821              	.LVL244:
 533:fltk-1.3.4-1/png/pngset.c ****       return;
 2822              		.loc 1 533 7 is_stmt 0 view .LVU743
 2823 0188 E8000000 		call	png_error@PLT
 2823      00
 2824              	.LVL245:
 2825              	.L207:
 517:fltk-1.3.4-1/png/pngset.c **** 
 2826              		.loc 1 517 10 is_stmt 1 view .LVU744
 2827 018d E8000000 		call	png_error@PLT
 2827      00
 2828              	.LVL246:
 517:fltk-1.3.4-1/png/pngset.c **** 
 2829              		.loc 1 517 10 is_stmt 0 view .LVU745
 2830              		.cfi_endproc
 2831              	.LFE56:
 2833              		.section	.text.png_set_sBIT,"ax",@progbits
 2834              		.p2align 4
 2835              		.globl	png_set_sBIT
 2837              	png_set_sBIT:
 2838              	.LVL247:
 2839              	.LFB57:
 567:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sBIT");
 2840              		.loc 1 567 1 is_stmt 1 view -0
 2841              		.cfi_startproc
 567:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sBIT");
 2842              		.loc 1 567 1 is_stmt 0 view .LVU747
 2843 0000 F30F1EFA 		endbr64
 568:fltk-1.3.4-1/png/pngset.c **** 
 2844              		.loc 1 568 4 is_stmt 1 view .LVU748
 570:fltk-1.3.4-1/png/pngset.c ****       return;
 2845              		.loc 1 570 4 view .LVU749
 570:fltk-1.3.4-1/png/pngset.c ****       return;
 2846              		.loc 1 570 36 is_stmt 0 view .LVU750
 2847 0004 4885F6   		testq	%rsi, %rsi
 2848 0007 0F94C1   		sete	%cl
 570:fltk-1.3.4-1/png/pngset.c ****       return;
 2849              		.loc 1 570 44 view .LVU751
 2850 000a 4885D2   		testq	%rdx, %rdx
 2851 000d 0F94C0   		sete	%al
 2852 0010 08C1     		orb	%al, %cl
 2853 0012 751B     		jne	.L209
 2854 0014 4885FF   		testq	%rdi, %rdi
 2855 0017 7416     		je	.L209
 573:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_sBIT;
 2856              		.loc 1 573 4 is_stmt 1 view .LVU752
 573:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_sBIT;
 2857              		.loc 1 573 22 is_stmt 0 view .LVU753
 2858 0019 8B02     		movl	(%rdx), %eax
 574:fltk-1.3.4-1/png/pngset.c **** }
 2859              		.loc 1 574 20 view .LVU754
 2860 001b 834E0802 		orl	$2, 8(%rsi)
 573:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_sBIT;
 2861              		.loc 1 573 22 view .LVU755
 2862 001f 8986B000 		movl	%eax, 176(%rsi)
 2862      0000
 2863 0025 0FB64204 		movzbl	4(%rdx), %eax
 2864 0029 8886B400 		movb	%al, 180(%rsi)
 2864      0000
 574:fltk-1.3.4-1/png/pngset.c **** }
 2865              		.loc 1 574 4 is_stmt 1 view .LVU756
 2866              	.L209:
 575:fltk-1.3.4-1/png/pngset.c **** #endif
 2867              		.loc 1 575 1 is_stmt 0 view .LVU757
 2868 002f C3       		ret
 2869              		.cfi_endproc
 2870              	.LFE57:
 2872              		.section	.text.png_set_sRGB,"ax",@progbits
 2873              		.p2align 4
 2874              		.globl	png_set_sRGB
 2876              	png_set_sRGB:
 2877              	.LVL248:
 2878              	.LFB58:
 581:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB");
 2879              		.loc 1 581 1 is_stmt 1 view -0
 2880              		.cfi_startproc
 581:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB");
 2881              		.loc 1 581 1 is_stmt 0 view .LVU759
 2882 0000 F30F1EFA 		endbr64
 582:fltk-1.3.4-1/png/pngset.c **** 
 2883              		.loc 1 582 4 is_stmt 1 view .LVU760
 584:fltk-1.3.4-1/png/pngset.c ****       return;
 2884              		.loc 1 584 4 view .LVU761
 584:fltk-1.3.4-1/png/pngset.c ****       return;
 2885              		.loc 1 584 7 is_stmt 0 view .LVU762
 2886 0004 4885FF   		testq	%rdi, %rdi
 2887 0007 7447     		je	.L214
 581:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB");
 2888              		.loc 1 581 1 view .LVU763
 2889 0009 4154     		pushq	%r12
 2890              		.cfi_def_cfa_offset 16
 2891              		.cfi_offset 12, -16
 2892 000b 4989F4   		movq	%rsi, %r12
 2893 000e 55       		pushq	%rbp
 2894              		.cfi_def_cfa_offset 24
 2895              		.cfi_offset 6, -24
 2896 000f 4883EC08 		subq	$8, %rsp
 2897              		.cfi_def_cfa_offset 32
 584:fltk-1.3.4-1/png/pngset.c ****       return;
 2898              		.loc 1 584 7 view .LVU764
 2899 0013 4885F6   		testq	%rsi, %rsi
 2900 0016 7428     		je	.L211
 587:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 2901              		.loc 1 587 43 view .LVU765
 2902 0018 488D7634 		leaq	52(%rsi), %rsi
 2903              	.LVL249:
 587:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 2904              		.loc 1 587 43 view .LVU766
 2905 001c 4889FD   		movq	%rdi, %rbp
 587:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 2906              		.loc 1 587 4 is_stmt 1 view .LVU767
 587:fltk-1.3.4-1/png/pngset.c ****    png_colorspace_sync_info(png_ptr, info_ptr);
 2907              		.loc 1 587 10 is_stmt 0 view .LVU768
 2908 001f E8000000 		call	png_colorspace_set_sRGB@PLT
 2908      00
 2909              	.LVL250:
 588:fltk-1.3.4-1/png/pngset.c **** }
 2910              		.loc 1 588 4 is_stmt 1 view .LVU769
 589:fltk-1.3.4-1/png/pngset.c **** 
 2911              		.loc 1 589 1 is_stmt 0 view .LVU770
 2912 0024 4883C408 		addq	$8, %rsp
 2913              		.cfi_remember_state
 2914              		.cfi_def_cfa_offset 24
 588:fltk-1.3.4-1/png/pngset.c **** }
 2915              		.loc 1 588 4 view .LVU771
 2916 0028 4C89E6   		movq	%r12, %rsi
 2917 002b 4889EF   		movq	%rbp, %rdi
 589:fltk-1.3.4-1/png/pngset.c **** 
 2918              		.loc 1 589 1 view .LVU772
 2919 002e 5D       		popq	%rbp
 2920              		.cfi_restore 6
 2921              		.cfi_def_cfa_offset 16
 2922              	.LVL251:
 589:fltk-1.3.4-1/png/pngset.c **** 
 2923              		.loc 1 589 1 view .LVU773
 2924 002f 415C     		popq	%r12
 2925              		.cfi_restore 12
 2926              		.cfi_def_cfa_offset 8
 2927              	.LVL252:
 588:fltk-1.3.4-1/png/pngset.c **** }
 2928              		.loc 1 588 4 view .LVU774
 2929 0031 E9000000 		jmp	png_colorspace_sync_info@PLT
 2929      00
 2930              	.LVL253:
 2931 0036 662E0F1F 		.p2align 4,,10
 2931      84000000 
 2931      0000
 2932              		.p2align 3
 2933              	.L211:
 2934              		.cfi_restore_state
 589:fltk-1.3.4-1/png/pngset.c **** 
 2935              		.loc 1 589 1 view .LVU775
 2936 0040 4883C408 		addq	$8, %rsp
 2937              		.cfi_def_cfa_offset 24
 2938 0044 5D       		popq	%rbp
 2939              		.cfi_def_cfa_offset 16
 2940 0045 415C     		popq	%r12
 2941              		.cfi_def_cfa_offset 8
 2942 0047 C3       		ret
 2943 0048 0F1F8400 		.p2align 4,,10
 2943      00000000 
 2944              		.p2align 3
 2945              	.L214:
 2946              		.cfi_restore 6
 2947              		.cfi_restore 12
 2948 0050 C3       		ret
 2949              		.cfi_endproc
 2950              	.LFE58:
 2952              		.section	.text.png_set_sRGB_gAMA_and_cHRM,"ax",@progbits
 2953              		.p2align 4
 2954              		.globl	png_set_sRGB_gAMA_and_cHRM
 2956              	png_set_sRGB_gAMA_and_cHRM:
 2957              	.LVL254:
 2958              	.LFB59:
 594:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB_gAMA_and_cHRM");
 2959              		.loc 1 594 1 is_stmt 1 view -0
 2960              		.cfi_startproc
 594:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB_gAMA_and_cHRM");
 2961              		.loc 1 594 1 is_stmt 0 view .LVU777
 2962 0000 F30F1EFA 		endbr64
 595:fltk-1.3.4-1/png/pngset.c **** 
 2963              		.loc 1 595 4 is_stmt 1 view .LVU778
 597:fltk-1.3.4-1/png/pngset.c ****       return;
 2964              		.loc 1 597 4 view .LVU779
 597:fltk-1.3.4-1/png/pngset.c ****       return;
 2965              		.loc 1 597 7 is_stmt 0 view .LVU780
 2966 0004 4885FF   		testq	%rdi, %rdi
 2967 0007 7447     		je	.L224
 594:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "sRGB_gAMA_and_cHRM");
 2968              		.loc 1 594 1 view .LVU781
 2969 0009 4154     		pushq	%r12
 2970              		.cfi_def_cfa_offset 16
 2971              		.cfi_offset 12, -16
 2972 000b 55       		pushq	%rbp
 2973              		.cfi_def_cfa_offset 24
 2974              		.cfi_offset 6, -24
 2975 000c 4889F5   		movq	%rsi, %rbp
 2976 000f 4883EC08 		subq	$8, %rsp
 2977              		.cfi_def_cfa_offset 32
 597:fltk-1.3.4-1/png/pngset.c ****       return;
 2978              		.loc 1 597 7 view .LVU782
 2979 0013 4885F6   		testq	%rsi, %rsi
 2980 0016 7428     		je	.L217
 600:fltk-1.3.4-1/png/pngset.c ****        srgb_intent) != 0)
 2981              		.loc 1 600 41 view .LVU783
 2982 0018 488D7634 		leaq	52(%rsi), %rsi
 2983              	.LVL255:
 600:fltk-1.3.4-1/png/pngset.c ****        srgb_intent) != 0)
 2984              		.loc 1 600 41 view .LVU784
 2985 001c 4989FC   		movq	%rdi, %r12
 600:fltk-1.3.4-1/png/pngset.c ****        srgb_intent) != 0)
 2986              		.loc 1 600 4 is_stmt 1 view .LVU785
 600:fltk-1.3.4-1/png/pngset.c ****        srgb_intent) != 0)
 2987              		.loc 1 600 8 is_stmt 0 view .LVU786
 2988 001f E8000000 		call	png_colorspace_set_sRGB@PLT
 2988      00
 2989              	.LVL256:
 600:fltk-1.3.4-1/png/pngset.c ****        srgb_intent) != 0)
 2990              		.loc 1 600 7 view .LVU787
 2991 0024 85C0     		testl	%eax, %eax
 2992 0026 7405     		je	.L219
 604:fltk-1.3.4-1/png/pngset.c ****          PNG_COLORSPACE_FROM_gAMA|PNG_COLORSPACE_FROM_cHRM;
 2993              		.loc 1 604 7 is_stmt 1 view .LVU788
 604:fltk-1.3.4-1/png/pngset.c ****          PNG_COLORSPACE_FROM_gAMA|PNG_COLORSPACE_FROM_cHRM;
 2994              		.loc 1 604 34 is_stmt 0 view .LVU789
 2995 0028 66834D7E 		orw	$24, 126(%rbp)
 2995      18
 2996              	.L219:
 608:fltk-1.3.4-1/png/pngset.c **** }
 2997              		.loc 1 608 4 is_stmt 1 view .LVU790
 609:fltk-1.3.4-1/png/pngset.c **** #endif /* sRGB */
 2998              		.loc 1 609 1 is_stmt 0 view .LVU791
 2999 002d 4883C408 		addq	$8, %rsp
 3000              		.cfi_remember_state
 3001              		.cfi_def_cfa_offset 24
 608:fltk-1.3.4-1/png/pngset.c **** }
 3002              		.loc 1 608 4 view .LVU792
 3003 0031 4889EE   		movq	%rbp, %rsi
 3004 0034 4C89E7   		movq	%r12, %rdi
 609:fltk-1.3.4-1/png/pngset.c **** #endif /* sRGB */
 3005              		.loc 1 609 1 view .LVU793
 3006 0037 5D       		popq	%rbp
 3007              		.cfi_restore 6
 3008              		.cfi_def_cfa_offset 16
 3009              	.LVL257:
 609:fltk-1.3.4-1/png/pngset.c **** #endif /* sRGB */
 3010              		.loc 1 609 1 view .LVU794
 3011 0038 415C     		popq	%r12
 3012              		.cfi_restore 12
 3013              		.cfi_def_cfa_offset 8
 3014              	.LVL258:
 608:fltk-1.3.4-1/png/pngset.c **** }
 3015              		.loc 1 608 4 view .LVU795
 3016 003a E9000000 		jmp	png_colorspace_sync_info@PLT
 3016      00
 3017              	.LVL259:
 3018 003f 90       		.p2align 4,,10
 3019              		.p2align 3
 3020              	.L217:
 3021              		.cfi_restore_state
 609:fltk-1.3.4-1/png/pngset.c **** #endif /* sRGB */
 3022              		.loc 1 609 1 view .LVU796
 3023 0040 4883C408 		addq	$8, %rsp
 3024              		.cfi_def_cfa_offset 24
 3025 0044 5D       		popq	%rbp
 3026              		.cfi_def_cfa_offset 16
 3027 0045 415C     		popq	%r12
 3028              		.cfi_def_cfa_offset 8
 3029 0047 C3       		ret
 3030 0048 0F1F8400 		.p2align 4,,10
 3030      00000000 
 3031              		.p2align 3
 3032              	.L224:
 3033              		.cfi_restore 6
 3034              		.cfi_restore 12
 3035 0050 C3       		ret
 3036              		.cfi_endproc
 3037              	.LFE59:
 3039              		.section	.rodata.png_set_iCCP.str1.8,"aMS",@progbits,1
 3040              		.align 8
 3041              	.LC30:
 3042 0000 496E7661 		.string	"Invalid iCCP compression method"
 3042      6C696420 
 3042      69434350 
 3042      20636F6D 
 3042      70726573 
 3043              		.align 8
 3044              	.LC31:
 3045 0020 496E7375 		.string	"Insufficient memory to process iCCP chunk"
 3045      66666963 
 3045      69656E74 
 3045      206D656D 
 3045      6F727920 
 3046 004a 00000000 		.align 8
 3046      0000
 3047              	.LC32:
 3048 0050 496E7375 		.string	"Insufficient memory to process iCCP profile"
 3048      66666963 
 3048      69656E74 
 3048      206D656D 
 3048      6F727920 
 3049              		.section	.text.png_set_iCCP,"ax",@progbits
 3050              		.p2align 4
 3051              		.globl	png_set_iCCP
 3053              	png_set_iCCP:
 3054              	.LVL260:
 3055              	.LFB60:
 618:fltk-1.3.4-1/png/pngset.c ****    png_charp new_iccp_name;
 3056              		.loc 1 618 1 is_stmt 1 view -0
 3057              		.cfi_startproc
 618:fltk-1.3.4-1/png/pngset.c ****    png_charp new_iccp_name;
 3058              		.loc 1 618 1 is_stmt 0 view .LVU798
 3059 0000 F30F1EFA 		endbr64
 619:fltk-1.3.4-1/png/pngset.c ****    png_bytep new_iccp_profile;
 3060              		.loc 1 619 4 is_stmt 1 view .LVU799
 620:fltk-1.3.4-1/png/pngset.c ****    png_size_t length;
 3061              		.loc 1 620 4 view .LVU800
 621:fltk-1.3.4-1/png/pngset.c **** 
 3062              		.loc 1 621 4 view .LVU801
 623:fltk-1.3.4-1/png/pngset.c **** 
 3063              		.loc 1 623 4 view .LVU802
 625:fltk-1.3.4-1/png/pngset.c ****       return;
 3064              		.loc 1 625 4 view .LVU803
 625:fltk-1.3.4-1/png/pngset.c ****       return;
 3065              		.loc 1 625 7 is_stmt 0 view .LVU804
 3066 0004 4885FF   		testq	%rdi, %rdi
 3067 0007 0F842301 		je	.L242
 3067      0000
 618:fltk-1.3.4-1/png/pngset.c ****    png_charp new_iccp_name;
 3068              		.loc 1 618 1 view .LVU805
 3069 000d 4157     		pushq	%r15
 3070              		.cfi_def_cfa_offset 16
 3071              		.cfi_offset 15, -16
 3072 000f 4156     		pushq	%r14
 3073              		.cfi_def_cfa_offset 24
 3074              		.cfi_offset 14, -24
 3075 0011 4155     		pushq	%r13
 3076              		.cfi_def_cfa_offset 32
 3077              		.cfi_offset 13, -32
 3078 0013 4154     		pushq	%r12
 3079              		.cfi_def_cfa_offset 40
 3080              		.cfi_offset 12, -40
 3081 0015 55       		pushq	%rbp
 3082              		.cfi_def_cfa_offset 48
 3083              		.cfi_offset 6, -48
 3084 0016 53       		pushq	%rbx
 3085              		.cfi_def_cfa_offset 56
 3086              		.cfi_offset 3, -56
 3087 0017 4889F3   		movq	%rsi, %rbx
 3088 001a 4883EC18 		subq	$24, %rsp
 3089              		.cfi_def_cfa_offset 80
 625:fltk-1.3.4-1/png/pngset.c ****       return;
 3090              		.loc 1 625 7 view .LVU806
 3091 001e 4885F6   		testq	%rsi, %rsi
 3092 0021 0F84F400 		je	.L227
 3092      0000
 3093 0027 4989D4   		movq	%rdx, %r12
 625:fltk-1.3.4-1/png/pngset.c ****       return;
 3094              		.loc 1 625 60 discriminator 1 view .LVU807
 3095 002a 4885D2   		testq	%rdx, %rdx
 3096 002d 0F84E800 		je	.L227
 3096      0000
 3097 0033 4D89C5   		movq	%r8, %r13
 3098 0036 4D85C0   		testq	%r8, %r8
 3099 0039 0F84DC00 		je	.L227
 3099      0000
 3100 003f 4889FD   		movq	%rdi, %rbp
 3101 0042 4589CE   		movl	%r9d, %r14d
 628:fltk-1.3.4-1/png/pngset.c ****       png_app_error(png_ptr, "Invalid iCCP compression method");
 3102              		.loc 1 628 4 is_stmt 1 view .LVU808
 628:fltk-1.3.4-1/png/pngset.c ****       png_app_error(png_ptr, "Invalid iCCP compression method");
 3103              		.loc 1 628 7 is_stmt 0 view .LVU809
 3104 0045 85C9     		testl	%ecx, %ecx
 3105 0047 0F85EB00 		jne	.L246
 3105      0000
 3106              	.LVL261:
 3107              	.L232:
 3108              	.LBB155:
 638:fltk-1.3.4-1/png/pngset.c ****          proflen, profile, info_ptr->color_type);
 3109              		.loc 1 638 7 is_stmt 1 view .LVU810
 638:fltk-1.3.4-1/png/pngset.c ****          proflen, profile, info_ptr->color_type);
 3110              		.loc 1 638 20 is_stmt 0 view .LVU811
 3111 004d 440FB64B 		movzbl	37(%rbx), %r9d
 3111      25
 638:fltk-1.3.4-1/png/pngset.c ****          proflen, profile, info_ptr->color_type);
 3112              		.loc 1 638 52 view .LVU812
 3113 0052 488D7334 		leaq	52(%rbx), %rsi
 638:fltk-1.3.4-1/png/pngset.c ****          proflen, profile, info_ptr->color_type);
 3114              		.loc 1 638 20 view .LVU813
 3115 0056 4889EF   		movq	%rbp, %rdi
 3116 0059 4D89E8   		movq	%r13, %r8
 3117 005c 4489F1   		movl	%r14d, %ecx
 3118 005f 4C89E2   		movq	%r12, %rdx
 3119 0062 E8000000 		call	png_colorspace_set_ICC@PLT
 3119      00
 3120              	.LVL262:
 641:fltk-1.3.4-1/png/pngset.c **** 
 3121              		.loc 1 641 7 view .LVU814
 3122 0067 4889DE   		movq	%rbx, %rsi
 3123 006a 4889EF   		movq	%rbp, %rdi
 638:fltk-1.3.4-1/png/pngset.c ****          proflen, profile, info_ptr->color_type);
 3124              		.loc 1 638 20 view .LVU815
 3125 006d 4189C7   		movl	%eax, %r15d
 3126              	.LVL263:
 641:fltk-1.3.4-1/png/pngset.c **** 
 3127              		.loc 1 641 7 is_stmt 1 view .LVU816
 3128 0070 E8000000 		call	png_colorspace_sync_info@PLT
 3128      00
 3129              	.LVL264:
 644:fltk-1.3.4-1/png/pngset.c ****          return;
 3130              		.loc 1 644 7 view .LVU817
 644:fltk-1.3.4-1/png/pngset.c ****          return;
 3131              		.loc 1 644 10 is_stmt 0 view .LVU818
 3132 0075 4585FF   		testl	%r15d, %r15d
 3133 0078 0F849D00 		je	.L227
 3133      0000
 648:fltk-1.3.4-1/png/pngset.c ****          PNG_COLORSPACE_FROM_gAMA|PNG_COLORSPACE_FROM_cHRM;
 3134              		.loc 1 648 7 is_stmt 1 view .LVU819
 648:fltk-1.3.4-1/png/pngset.c ****          PNG_COLORSPACE_FROM_gAMA|PNG_COLORSPACE_FROM_cHRM;
 3135              		.loc 1 648 34 is_stmt 0 view .LVU820
 3136 007e 66834B7E 		orw	$24, 126(%rbx)
 3136      18
 3137              	.LBE155:
 652:fltk-1.3.4-1/png/pngset.c ****    new_iccp_name = png_voidcast(png_charp, png_malloc_warn(png_ptr, length));
 3138              		.loc 1 652 4 is_stmt 1 view .LVU821
 652:fltk-1.3.4-1/png/pngset.c ****    new_iccp_name = png_voidcast(png_charp, png_malloc_warn(png_ptr, length));
 3139              		.loc 1 652 13 is_stmt 0 view .LVU822
 3140 0083 4C89E7   		movq	%r12, %rdi
 3141 0086 E8000000 		call	strlen@PLT
 3141      00
 3142              	.LVL265:
 653:fltk-1.3.4-1/png/pngset.c **** 
 3143              		.loc 1 653 20 view .LVU823
 3144 008b 4889EF   		movq	%rbp, %rdi
 652:fltk-1.3.4-1/png/pngset.c ****    new_iccp_name = png_voidcast(png_charp, png_malloc_warn(png_ptr, length));
 3145              		.loc 1 652 11 view .LVU824
 3146 008e 488D5001 		leaq	1(%rax), %rdx
 3147              	.LVL266:
 653:fltk-1.3.4-1/png/pngset.c **** 
 3148              		.loc 1 653 4 is_stmt 1 view .LVU825
 653:fltk-1.3.4-1/png/pngset.c **** 
 3149              		.loc 1 653 20 is_stmt 0 view .LVU826
 3150 0092 4889D6   		movq	%rdx, %rsi
 3151 0095 48895424 		movq	%rdx, 8(%rsp)
 3151      08
 3152 009a E8000000 		call	png_malloc_warn@PLT
 3152      00
 3153              	.LVL267:
 655:fltk-1.3.4-1/png/pngset.c ****    {
 3154              		.loc 1 655 7 view .LVU827
 3155 009f 488B5424 		movq	8(%rsp), %rdx
 3155      08
 3156 00a4 4885C0   		testq	%rax, %rax
 653:fltk-1.3.4-1/png/pngset.c **** 
 3157              		.loc 1 653 20 view .LVU828
 3158 00a7 4989C7   		movq	%rax, %r15
 3159              	.LVL268:
 655:fltk-1.3.4-1/png/pngset.c ****    {
 3160              		.loc 1 655 4 is_stmt 1 view .LVU829
 655:fltk-1.3.4-1/png/pngset.c ****    {
 3161              		.loc 1 655 7 is_stmt 0 view .LVU830
 3162 00aa 0F84C100 		je	.L247
 3162      0000
 661:fltk-1.3.4-1/png/pngset.c ****    new_iccp_profile = png_voidcast(png_bytep,
 3163              		.loc 1 661 4 is_stmt 1 view .LVU831
 3164              	.LVL269:
 3165              	.LBB156:
 3166              	.LBI156:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3167              		.loc 2 31 1 view .LVU832
 3168              	.LBB157:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3169              		.loc 2 34 3 view .LVU833
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3170              		.loc 2 34 10 is_stmt 0 view .LVU834
 3171 00b0 4C89E6   		movq	%r12, %rsi
 3172 00b3 4889C7   		movq	%rax, %rdi
 3173 00b6 E8000000 		call	memcpy@PLT
 3173      00
 3174              	.LVL270:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3175              		.loc 2 34 10 view .LVU835
 3176              	.LBE157:
 3177              	.LBE156:
 662:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, proflen));
 3178              		.loc 1 662 4 is_stmt 1 view .LVU836
 662:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, proflen));
 3179              		.loc 1 662 23 is_stmt 0 view .LVU837
 3180 00bb 4489F2   		movl	%r14d, %edx
 3181 00be 4889EF   		movq	%rbp, %rdi
 3182 00c1 4889D6   		movq	%rdx, %rsi
 3183 00c4 48895424 		movq	%rdx, 8(%rsp)
 3183      08
 3184              	.LVL271:
 662:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, proflen));
 3185              		.loc 1 662 23 view .LVU838
 3186 00c9 E8000000 		call	png_malloc_warn@PLT
 3186      00
 3187              	.LVL272:
 665:fltk-1.3.4-1/png/pngset.c ****    {
 3188              		.loc 1 665 7 view .LVU839
 3189 00ce 488B5424 		movq	8(%rsp), %rdx
 3189      08
 3190 00d3 4885C0   		testq	%rax, %rax
 662:fltk-1.3.4-1/png/pngset.c ****       png_malloc_warn(png_ptr, proflen));
 3191              		.loc 1 662 23 view .LVU840
 3192 00d6 4989C4   		movq	%rax, %r12
 3193              	.LVL273:
 665:fltk-1.3.4-1/png/pngset.c ****    {
 3194              		.loc 1 665 4 is_stmt 1 view .LVU841
 665:fltk-1.3.4-1/png/pngset.c ****    {
 3195              		.loc 1 665 7 is_stmt 0 view .LVU842
 3196 00d9 746E     		je	.L248
 674:fltk-1.3.4-1/png/pngset.c **** 
 3197              		.loc 1 674 4 is_stmt 1 view .LVU843
 3198              	.LVL274:
 3199              	.LBB158:
 3200              	.LBI158:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3201              		.loc 2 31 1 view .LVU844
 3202              	.LBB159:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3203              		.loc 2 34 3 view .LVU845
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3204              		.loc 2 34 10 is_stmt 0 view .LVU846
 3205 00db 4C89EE   		movq	%r13, %rsi
 3206 00de 4889C7   		movq	%rax, %rdi
 3207 00e1 E8000000 		call	memcpy@PLT
 3207      00
 3208              	.LVL275:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3209              		.loc 2 34 10 view .LVU847
 3210              	.LBE159:
 3211              	.LBE158:
 676:fltk-1.3.4-1/png/pngset.c **** 
 3212              		.loc 1 676 4 is_stmt 1 view .LVU848
 3213 00e6 31C9     		xorl	%ecx, %ecx
 3214 00e8 BA100000 		movl	$16, %edx
 3214      00
 3215 00ed 4889DE   		movq	%rbx, %rsi
 3216 00f0 4889EF   		movq	%rbp, %rdi
 3217 00f3 E8000000 		call	png_free_data@PLT
 3217      00
 3218              	.LVL276:
 678:fltk-1.3.4-1/png/pngset.c ****    info_ptr->iccp_name = new_iccp_name;
 3219              		.loc 1 678 4 view .LVU849
 681:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_iCCP;
 3220              		.loc 1 681 22 is_stmt 0 view .LVU850
 3221 00f8 838B1C01 		orl	$16, 284(%rbx)
 3221      000010
 682:fltk-1.3.4-1/png/pngset.c **** }
 3222              		.loc 1 682 20 view .LVU851
 3223 00ff 814B0800 		orl	$4096, 8(%rbx)
 3223      100000
 678:fltk-1.3.4-1/png/pngset.c ****    info_ptr->iccp_name = new_iccp_name;
 3224              		.loc 1 678 27 view .LVU852
 3225 0106 4489B390 		movl	%r14d, 144(%rbx)
 3225      000000
 679:fltk-1.3.4-1/png/pngset.c ****    info_ptr->iccp_profile = new_iccp_profile;
 3226              		.loc 1 679 4 is_stmt 1 view .LVU853
 679:fltk-1.3.4-1/png/pngset.c ****    info_ptr->iccp_profile = new_iccp_profile;
 3227              		.loc 1 679 24 is_stmt 0 view .LVU854
 3228 010d 4C89BB80 		movq	%r15, 128(%rbx)
 3228      000000
 680:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_ICCP;
 3229              		.loc 1 680 4 is_stmt 1 view .LVU855
 680:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_ICCP;
 3230              		.loc 1 680 27 is_stmt 0 view .LVU856
 3231 0114 4C89A388 		movq	%r12, 136(%rbx)
 3231      000000
 681:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_iCCP;
 3232              		.loc 1 681 4 is_stmt 1 view .LVU857
 682:fltk-1.3.4-1/png/pngset.c **** }
 3233              		.loc 1 682 4 view .LVU858
 3234              	.LVL277:
 3235              	.L227:
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3236              		.loc 1 683 1 is_stmt 0 view .LVU859
 3237 011b 4883C418 		addq	$24, %rsp
 3238              		.cfi_def_cfa_offset 56
 3239 011f 5B       		popq	%rbx
 3240              		.cfi_def_cfa_offset 48
 3241              	.LVL278:
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3242              		.loc 1 683 1 view .LVU860
 3243 0120 5D       		popq	%rbp
 3244              		.cfi_def_cfa_offset 40
 3245 0121 415C     		popq	%r12
 3246              		.cfi_def_cfa_offset 32
 3247 0123 415D     		popq	%r13
 3248              		.cfi_def_cfa_offset 24
 3249 0125 415E     		popq	%r14
 3250              		.cfi_def_cfa_offset 16
 3251 0127 415F     		popq	%r15
 3252              		.cfi_def_cfa_offset 8
 3253 0129 C3       		ret
 3254              	.LVL279:
 3255 012a 660F1F44 		.p2align 4,,10
 3255      0000
 3256              		.p2align 3
 3257              	.L242:
 3258              		.cfi_restore 3
 3259              		.cfi_restore 6
 3260              		.cfi_restore 12
 3261              		.cfi_restore 13
 3262              		.cfi_restore 14
 3263              		.cfi_restore 15
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3264              		.loc 1 683 1 view .LVU861
 3265 0130 C3       		ret
 3266              	.LVL280:
 3267              		.p2align 4,,10
 3268 0131 0F1F8000 		.p2align 3
 3268      000000
 3269              	.L246:
 3270              		.cfi_def_cfa_offset 80
 3271              		.cfi_offset 3, -56
 3272              		.cfi_offset 6, -48
 3273              		.cfi_offset 12, -40
 3274              		.cfi_offset 13, -32
 3275              		.cfi_offset 14, -24
 3276              		.cfi_offset 15, -16
 629:fltk-1.3.4-1/png/pngset.c **** 
 3277              		.loc 1 629 7 is_stmt 1 view .LVU862
 3278 0138 488D3500 		leaq	.LC30(%rip), %rsi
 3278      000000
 3279 013f E8000000 		call	png_app_error@PLT
 3279      00
 3280              	.LVL281:
 629:fltk-1.3.4-1/png/pngset.c **** 
 3281              		.loc 1 629 7 is_stmt 0 view .LVU863
 3282 0144 E904FFFF 		jmp	.L232
 3282      FF
 3283              	.LVL282:
 3284              	.L248:
 667:fltk-1.3.4-1/png/pngset.c ****       new_iccp_name = NULL;
 3285              		.loc 1 667 7 is_stmt 1 view .LVU864
 3286 0149 4C89FE   		movq	%r15, %rsi
 3287 014c 4889EF   		movq	%rbp, %rdi
 3288 014f E8000000 		call	png_free@PLT
 3288      00
 3289              	.LVL283:
 668:fltk-1.3.4-1/png/pngset.c ****       png_benign_error(png_ptr,
 3290              		.loc 1 668 7 view .LVU865
 669:fltk-1.3.4-1/png/pngset.c ****           "Insufficient memory to process iCCP profile");
 3291              		.loc 1 669 7 view .LVU866
 3292 0154 488D3500 		leaq	.LC32(%rip), %rsi
 3292      000000
 3293              	.LVL284:
 3294              	.L245:
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3295              		.loc 1 683 1 is_stmt 0 view .LVU867
 3296 015b 4883C418 		addq	$24, %rsp
 3297              		.cfi_remember_state
 3298              		.cfi_def_cfa_offset 56
 669:fltk-1.3.4-1/png/pngset.c ****           "Insufficient memory to process iCCP profile");
 3299              		.loc 1 669 7 view .LVU868
 3300 015f 4889EF   		movq	%rbp, %rdi
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3301              		.loc 1 683 1 view .LVU869
 3302 0162 5B       		popq	%rbx
 3303              		.cfi_restore 3
 3304              		.cfi_def_cfa_offset 48
 3305              	.LVL285:
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3306              		.loc 1 683 1 view .LVU870
 3307 0163 5D       		popq	%rbp
 3308              		.cfi_restore 6
 3309              		.cfi_def_cfa_offset 40
 3310              	.LVL286:
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3311              		.loc 1 683 1 view .LVU871
 3312 0164 415C     		popq	%r12
 3313              		.cfi_restore 12
 3314              		.cfi_def_cfa_offset 32
 3315 0166 415D     		popq	%r13
 3316              		.cfi_restore 13
 3317              		.cfi_def_cfa_offset 24
 3318              	.LVL287:
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3319              		.loc 1 683 1 view .LVU872
 3320 0168 415E     		popq	%r14
 3321              		.cfi_restore 14
 3322              		.cfi_def_cfa_offset 16
 3323              	.LVL288:
 683:fltk-1.3.4-1/png/pngset.c **** #endif
 3324              		.loc 1 683 1 view .LVU873
 3325 016a 415F     		popq	%r15
 3326              		.cfi_restore 15
 3327              		.cfi_def_cfa_offset 8
 669:fltk-1.3.4-1/png/pngset.c ****           "Insufficient memory to process iCCP profile");
 3328              		.loc 1 669 7 view .LVU874
 3329 016c E9000000 		jmp	png_benign_error@PLT
 3329      00
 3330              	.LVL289:
 3331              	.L247:
 3332              		.cfi_restore_state
 657:fltk-1.3.4-1/png/pngset.c ****       return;
 3333              		.loc 1 657 7 is_stmt 1 view .LVU875
 3334 0171 488D3500 		leaq	.LC31(%rip), %rsi
 3334      000000
 3335 0178 EBE1     		jmp	.L245
 3336              		.cfi_endproc
 3337              	.LFE60:
 3339              		.section	.rodata.png_set_text_2.str1.1,"aMS",@progbits,1
 3340              	.LC33:
 3341 0000 746F6F20 		.string	"too many text chunks"
 3341      6D616E79 
 3341      20746578 
 3341      74206368 
 3341      756E6B73 
 3342              		.section	.rodata.png_set_text_2.str1.8,"aMS",@progbits,1
 3343              		.align 8
 3344              	.LC34:
 3345 0000 74657874 		.string	"text compression mode is out of range"
 3345      20636F6D 
 3345      70726573 
 3345      73696F6E 
 3345      206D6F64 
 3346              		.section	.rodata.png_set_text_2.str1.1
 3347              	.LC35:
 3348 0015 74657874 		.string	"text chunk: out of memory"
 3348      20636875 
 3348      6E6B3A20 
 3348      6F757420 
 3348      6F66206D 
 3349              		.section	.text.png_set_text_2,"ax",@progbits
 3350              		.p2align 4
 3351              		.globl	png_set_text_2
 3353              	png_set_text_2:
 3354              	.LVL290:
 3355              	.LFB62:
 701:fltk-1.3.4-1/png/pngset.c ****    int i;
 3356              		.loc 1 701 1 view -0
 3357              		.cfi_startproc
 701:fltk-1.3.4-1/png/pngset.c ****    int i;
 3358              		.loc 1 701 1 is_stmt 0 view .LVU877
 3359 0000 F30F1EFA 		endbr64
 702:fltk-1.3.4-1/png/pngset.c **** 
 3360              		.loc 1 702 4 is_stmt 1 view .LVU878
 704:fltk-1.3.4-1/png/pngset.c ****       (unsigned long)png_ptr->chunk_name);
 3361              		.loc 1 704 4 view .LVU879
 707:fltk-1.3.4-1/png/pngset.c ****       return(0);
 3362              		.loc 1 707 4 view .LVU880
 701:fltk-1.3.4-1/png/pngset.c ****    int i;
 3363              		.loc 1 701 1 is_stmt 0 view .LVU881
 3364 0004 4157     		pushq	%r15
 3365              		.cfi_def_cfa_offset 16
 3366              		.cfi_offset 15, -16
 3367 0006 4156     		pushq	%r14
 3368              		.cfi_def_cfa_offset 24
 3369              		.cfi_offset 14, -24
 3370 0008 4155     		pushq	%r13
 3371              		.cfi_def_cfa_offset 32
 3372              		.cfi_offset 13, -32
 3373 000a 4154     		pushq	%r12
 3374              		.cfi_def_cfa_offset 40
 3375              		.cfi_offset 12, -40
 3376 000c 55       		pushq	%rbp
 3377              		.cfi_def_cfa_offset 48
 3378              		.cfi_offset 6, -48
 3379 000d 53       		pushq	%rbx
 3380              		.cfi_def_cfa_offset 56
 3381              		.cfi_offset 3, -56
 3382 000e 4883EC38 		subq	$56, %rsp
 3383              		.cfi_def_cfa_offset 112
 701:fltk-1.3.4-1/png/pngset.c ****    int i;
 3384              		.loc 1 701 1 view .LVU882
 3385 0012 48897C24 		movq	%rdi, 32(%rsp)
 3385      20
 3386 0017 894C241C 		movl	%ecx, 28(%rsp)
 707:fltk-1.3.4-1/png/pngset.c ****       return(0);
 3387              		.loc 1 707 7 view .LVU883
 3388 001b 4885FF   		testq	%rdi, %rdi
 3389 001e 0F842C02 		je	.L250
 3389      0000
 3390 0024 4889F5   		movq	%rsi, %rbp
 3391 0027 4885F6   		testq	%rsi, %rsi
 3392 002a 0F842002 		je	.L250
 3392      0000
 707:fltk-1.3.4-1/png/pngset.c ****       return(0);
 3393              		.loc 1 707 61 discriminator 1 view .LVU884
 3394 0030 85C9     		testl	%ecx, %ecx
 3395 0032 0F8E1802 		jle	.L250
 3395      0000
 3396 0038 4989D5   		movq	%rdx, %r13
 3397 003b 4885D2   		testq	%rdx, %rdx
 3398 003e 0F840C02 		je	.L250
 3398      0000
 3399              	.LVL291:
 3400              	.LBB172:
 3401              	.LBI172:
 699:fltk-1.3.4-1/png/pngset.c ****     png_const_textp text_ptr, int num_text)
 3402              		.loc 1 699 1 is_stmt 1 view .LVU885
 3403              	.LBB173:
 715:fltk-1.3.4-1/png/pngset.c ****    {
 3404              		.loc 1 715 4 view .LVU886
 715:fltk-1.3.4-1/png/pngset.c ****    {
 3405              		.loc 1 715 48 is_stmt 0 view .LVU887
 3406 0044 8B969400 		movl	148(%rsi), %edx
 3406      0000
 3407              	.LVL292:
 715:fltk-1.3.4-1/png/pngset.c ****    {
 3408              		.loc 1 715 38 view .LVU888
 3409 004a 8B869800 		movl	152(%rsi), %eax
 3409      0000
 3410 0050 29D0     		subl	%edx, %eax
 715:fltk-1.3.4-1/png/pngset.c ****    {
 3411              		.loc 1 715 7 view .LVU889
 3412 0052 39C1     		cmpl	%eax, %ecx
 3413 0054 0F8F8E02 		jg	.L251
 3413      0000
 3414 005a 488B9EA0 		movq	160(%rsi), %rbx
 3414      000000
 3415              	.LVL293:
 3416              	.L252:
 3417              	.LBB174:
 732:fltk-1.3.4-1/png/pngset.c **** 
 3418              		.loc 1 732 22 view .LVU890
 3419 0061 4531E4   		xorl	%r12d, %r12d
 3420 0064 EB6A     		jmp	.L269
 3421              	.LVL294:
 3422 0066 662E0F1F 		.p2align 4,,10
 3422      84000000 
 3422      0000
 3423              		.p2align 3
 3424              	.L264:
 732:fltk-1.3.4-1/png/pngset.c **** 
 3425              		.loc 1 732 22 view .LVU891
 3426              	.LBE174:
 3427              	.LBB175:
 858:fltk-1.3.4-1/png/pngset.c ****          textp->lang_key=NULL;
 3428              		.loc 1 858 10 is_stmt 1 view .LVU892
 858:fltk-1.3.4-1/png/pngset.c ****          textp->lang_key=NULL;
 3429              		.loc 1 858 21 is_stmt 0 view .LVU893
 3430 0070 49C74628 		movq	$0, 40(%r14)
 3430      00000000 
 859:fltk-1.3.4-1/png/pngset.c ****          textp->text = textp->key + key_len + 1;
 3431              		.loc 1 859 10 is_stmt 1 view .LVU894
 859:fltk-1.3.4-1/png/pngset.c ****          textp->text = textp->key + key_len + 1;
 3432              		.loc 1 859 25 is_stmt 0 view .LVU895
 3433 0078 49C74630 		movq	$0, 48(%r14)
 3433      00000000 
 860:fltk-1.3.4-1/png/pngset.c ****       }
 3434              		.loc 1 860 10 is_stmt 1 view .LVU896
 860:fltk-1.3.4-1/png/pngset.c ****       }
 3435              		.loc 1 860 22 is_stmt 0 view .LVU897
 3436 0080 49897E10 		movq	%rdi, 16(%r14)
 863:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->text, text_ptr[i].text, text_length);
 3437              		.loc 1 863 7 is_stmt 1 view .LVU898
 863:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->text, text_ptr[i].text, text_length);
 3438              		.loc 1 863 10 is_stmt 0 view .LVU899
 3439 0084 4D85FF   		testq	%r15, %r15
 3440 0087 0F858E01 		jne	.L298
 3440      0000
 3441              	.LVL295:
 3442              	.L266:
 866:fltk-1.3.4-1/png/pngset.c **** 
 3443              		.loc 1 866 7 is_stmt 1 view .LVU900
 866:fltk-1.3.4-1/png/pngset.c **** 
 3444              		.loc 1 866 36 is_stmt 0 view .LVU901
 3445 008d 42C6043F 		movb	$0, (%rdi,%r15)
 3445      00
 869:fltk-1.3.4-1/png/pngset.c ****       {
 3446              		.loc 1 869 7 is_stmt 1 view .LVU902
 869:fltk-1.3.4-1/png/pngset.c ****       {
 3447              		.loc 1 869 10 is_stmt 0 view .LVU903
 3448 0092 418B06   		movl	(%r14), %eax
 3449 0095 85C0     		testl	%eax, %eax
 3450 0097 0F8E9E01 		jle	.L267
 3450      0000
 3451              	.L301:
 871:fltk-1.3.4-1/png/pngset.c ****          textp->itxt_length = text_length;
 3452              		.loc 1 871 10 is_stmt 1 view .LVU904
 871:fltk-1.3.4-1/png/pngset.c ****          textp->itxt_length = text_length;
 3453              		.loc 1 871 29 is_stmt 0 view .LVU905
 3454 009d 49C74618 		movq	$0, 24(%r14)
 3454      00000000 
 872:fltk-1.3.4-1/png/pngset.c ****       }
 3455              		.loc 1 872 10 is_stmt 1 view .LVU906
 872:fltk-1.3.4-1/png/pngset.c ****       }
 3456              		.loc 1 872 29 is_stmt 0 view .LVU907
 3457 00a5 4D897E20 		movq	%r15, 32(%r14)
 3458              	.L268:
 882:fltk-1.3.4-1/png/pngset.c ****       png_debug1(3, "transferred text chunk %d", info_ptr->num_text);
 3459              		.loc 1 882 7 is_stmt 1 view .LVU908
 882:fltk-1.3.4-1/png/pngset.c ****       png_debug1(3, "transferred text chunk %d", info_ptr->num_text);
 3460              		.loc 1 882 25 is_stmt 0 view .LVU909
 3461 00a9 83859400 		addl	$1, 148(%rbp)
 3461      000001
 3462              	.LVL296:
 3463              	.L257:
 883:fltk-1.3.4-1/png/pngset.c ****    }
 3464              		.loc 1 883 7 is_stmt 1 view .LVU910
 3465              	.LBE175:
 759:fltk-1.3.4-1/png/pngset.c ****    {
 3466              		.loc 1 759 30 view .LVU911
 759:fltk-1.3.4-1/png/pngset.c ****    {
 3467              		.loc 1 759 31 is_stmt 0 view .LVU912
 3468 00b0 4183C401 		addl	$1, %r12d
 3469              	.LVL297:
 759:fltk-1.3.4-1/png/pngset.c ****    {
 3470              		.loc 1 759 16 is_stmt 1 view .LVU913
 3471 00b4 4983C538 		addq	$56, %r13
 759:fltk-1.3.4-1/png/pngset.c ****    {
 3472              		.loc 1 759 4 is_stmt 0 view .LVU914
 3473 00b8 44396424 		cmpl	%r12d, 28(%rsp)
 3473      1C
 3474 00bd 0F8E8D01 		jle	.L250
 3474      0000
 3475 00c3 488B9DA0 		movq	160(%rbp), %rbx
 3475      000000
 3476 00ca 8B959400 		movl	148(%rbp), %edx
 3476      0000
 3477              	.LVL298:
 3478              	.L269:
 3479              	.LBB188:
 761:fltk-1.3.4-1/png/pngset.c ****       size_t lang_len, lang_key_len;
 3480              		.loc 1 761 7 is_stmt 1 view .LVU915
 762:fltk-1.3.4-1/png/pngset.c ****       png_textp textp = &(info_ptr->text[info_ptr->num_text]);
 3481              		.loc 1 762 7 view .LVU916
 763:fltk-1.3.4-1/png/pngset.c **** 
 3482              		.loc 1 763 7 view .LVU917
 765:fltk-1.3.4-1/png/pngset.c ****           continue;
 3483              		.loc 1 765 7 view .LVU918
 765:fltk-1.3.4-1/png/pngset.c ****           continue;
 3484              		.loc 1 765 22 is_stmt 0 view .LVU919
 3485 00d0 498B7D08 		movq	8(%r13), %rdi
 765:fltk-1.3.4-1/png/pngset.c ****           continue;
 3486              		.loc 1 765 10 view .LVU920
 3487 00d4 4885FF   		testq	%rdi, %rdi
 3488 00d7 74D7     		je	.L257
 768:fltk-1.3.4-1/png/pngset.c ****           text_ptr[i].compression >= PNG_TEXT_COMPRESSION_LAST)
 3489              		.loc 1 768 7 is_stmt 1 view .LVU921
 768:fltk-1.3.4-1/png/pngset.c ****           text_ptr[i].compression >= PNG_TEXT_COMPRESSION_LAST)
 3490              		.loc 1 768 22 is_stmt 0 view .LVU922
 3491 00d9 418B4500 		movl	0(%r13), %eax
 3492 00dd 89442418 		movl	%eax, 24(%rsp)
 768:fltk-1.3.4-1/png/pngset.c ****           text_ptr[i].compression >= PNG_TEXT_COMPRESSION_LAST)
 3493              		.loc 1 768 63 view .LVU923
 3494 00e1 83C001   		addl	$1, %eax
 768:fltk-1.3.4-1/png/pngset.c ****           text_ptr[i].compression >= PNG_TEXT_COMPRESSION_LAST)
 3495              		.loc 1 768 10 view .LVU924
 3496 00e4 83F803   		cmpl	$3, %eax
 3497 00e7 0F87DB01 		ja	.L299
 3497      0000
 763:fltk-1.3.4-1/png/pngset.c **** 
 3498              		.loc 1 763 50 view .LVU925
 3499 00ed 4863F2   		movslq	%edx, %rsi
 3500              	.LVL299:
 763:fltk-1.3.4-1/png/pngset.c **** 
 3501              		.loc 1 763 41 view .LVU926
 3502 00f0 488D14F5 		leaq	0(,%rsi,8), %rdx
 3502      00000000 
 3503 00f8 4829F2   		subq	%rsi, %rdx
 763:fltk-1.3.4-1/png/pngset.c **** 
 3504              		.loc 1 763 17 view .LVU927
 3505 00fb 4C8D34D3 		leaq	(%rbx,%rdx,8), %r14
 776:fltk-1.3.4-1/png/pngset.c **** 
 3506              		.loc 1 776 7 is_stmt 1 view .LVU928
 776:fltk-1.3.4-1/png/pngset.c **** 
 3507              		.loc 1 776 17 is_stmt 0 view .LVU929
 3508 00ff E8000000 		call	strlen@PLT
 3508      00
 3509              	.LVL300:
 778:fltk-1.3.4-1/png/pngset.c ****       {
 3510              		.loc 1 778 10 view .LVU930
 3511 0104 8B4C2418 		movl	24(%rsp), %ecx
 3512 0108 4D8B4D10 		movq	16(%r13), %r9
 776:fltk-1.3.4-1/png/pngset.c **** 
 3513              		.loc 1 776 17 view .LVU931
 3514 010c 4889C3   		movq	%rax, %rbx
 3515              	.LVL301:
 778:fltk-1.3.4-1/png/pngset.c ****       {
 3516              		.loc 1 778 7 is_stmt 1 view .LVU932
 778:fltk-1.3.4-1/png/pngset.c ****       {
 3517              		.loc 1 778 10 is_stmt 0 view .LVU933
 3518 010f 85C9     		testl	%ecx, %ecx
 3519 0111 0F8E5101 		jle	.L259
 3519      0000
 789:fltk-1.3.4-1/png/pngset.c ****             lang_len = strlen(text_ptr[i].lang);
 3520              		.loc 1 789 10 is_stmt 1 view .LVU934
 793:fltk-1.3.4-1/png/pngset.c **** 
 3521              		.loc 1 793 22 is_stmt 0 view .LVU935
 3522 0117 48C74424 		movq	$0, 8(%rsp)
 3522      08000000 
 3522      00
 789:fltk-1.3.4-1/png/pngset.c ****             lang_len = strlen(text_ptr[i].lang);
 3523              		.loc 1 789 25 view .LVU936
 3524 0120 498B7D28 		movq	40(%r13), %rdi
 789:fltk-1.3.4-1/png/pngset.c ****             lang_len = strlen(text_ptr[i].lang);
 3525              		.loc 1 789 13 view .LVU937
 3526 0124 4885FF   		testq	%rdi, %rdi
 3527 0127 7414     		je	.L260
 3528 0129 4C894C24 		movq	%r9, 16(%rsp)
 3528      10
 790:fltk-1.3.4-1/png/pngset.c **** 
 3529              		.loc 1 790 13 is_stmt 1 view .LVU938
 790:fltk-1.3.4-1/png/pngset.c **** 
 3530              		.loc 1 790 24 is_stmt 0 view .LVU939
 3531 012e E8000000 		call	strlen@PLT
 3531      00
 3532              	.LVL302:
 790:fltk-1.3.4-1/png/pngset.c **** 
 3533              		.loc 1 790 24 view .LVU940
 3534 0133 4C8B4C24 		movq	16(%rsp), %r9
 3534      10
 3535              	.LVL303:
 790:fltk-1.3.4-1/png/pngset.c **** 
 3536              		.loc 1 790 24 view .LVU941
 3537 0138 48894424 		movq	%rax, 8(%rsp)
 3537      08
 3538              	.LVL304:
 3539              	.L260:
 795:fltk-1.3.4-1/png/pngset.c ****             lang_key_len = strlen(text_ptr[i].lang_key);
 3540              		.loc 1 795 10 is_stmt 1 view .LVU942
 799:fltk-1.3.4-1/png/pngset.c ****       }
 3541              		.loc 1 799 26 is_stmt 0 view .LVU943
 3542 013d 48C74424 		movq	$0, 16(%rsp)
 3542      10000000 
 3542      00
 795:fltk-1.3.4-1/png/pngset.c ****             lang_key_len = strlen(text_ptr[i].lang_key);
 3543              		.loc 1 795 25 view .LVU944
 3544 0146 498B7D30 		movq	48(%r13), %rdi
 795:fltk-1.3.4-1/png/pngset.c ****             lang_key_len = strlen(text_ptr[i].lang_key);
 3545              		.loc 1 795 13 view .LVU945
 3546 014a 4885FF   		testq	%rdi, %rdi
 3547 014d 7414     		je	.L261
 3548 014f 4C894C24 		movq	%r9, 40(%rsp)
 3548      28
 796:fltk-1.3.4-1/png/pngset.c **** 
 3549              		.loc 1 796 13 is_stmt 1 view .LVU946
 796:fltk-1.3.4-1/png/pngset.c **** 
 3550              		.loc 1 796 28 is_stmt 0 view .LVU947
 3551 0154 E8000000 		call	strlen@PLT
 3551      00
 3552              	.LVL305:
 3553 0159 4C8B4C24 		movq	40(%rsp), %r9
 3553      28
 3554 015e 48894424 		movq	%rax, 16(%rsp)
 3554      10
 3555              	.LVL306:
 3556              	.L261:
 809:fltk-1.3.4-1/png/pngset.c ****       {
 3557              		.loc 1 809 7 is_stmt 1 view .LVU948
 809:fltk-1.3.4-1/png/pngset.c ****       {
 3558              		.loc 1 809 10 is_stmt 0 view .LVU949
 3559 0163 4D85C9   		testq	%r9, %r9
 3560 0166 740A     		je	.L270
 809:fltk-1.3.4-1/png/pngset.c ****       {
 3561              		.loc 1 809 36 view .LVU950
 3562 0168 41803900 		cmpb	$0, (%r9)
 3563 016c 0F851301 		jne	.L274
 3563      0000
 3564              	.L270:
 3565              	.LVL307:
 814:fltk-1.3.4-1/png/pngset.c **** 
 3566              		.loc 1 814 13 is_stmt 1 view .LVU951
 814:fltk-1.3.4-1/png/pngset.c **** 
 3567              		.loc 1 814 32 is_stmt 0 view .LVU952
 3568 0172 41C70601 		movl	$1, (%r14)
 3568      000000
 811:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_iTXt_SUPPORTED
 3569              		.loc 1 811 22 view .LVU953
 3570 0179 4531FF   		xorl	%r15d, %r15d
 3571              	.LVL308:
 3572              	.L262:
 827:fltk-1.3.4-1/png/pngset.c ****           key_len + text_length + lang_len + lang_key_len + 4));
 3573              		.loc 1 827 7 is_stmt 1 view .LVU954
 827:fltk-1.3.4-1/png/pngset.c ****           key_len + text_length + lang_len + lang_key_len + 4));
 3574              		.loc 1 827 20 is_stmt 0 view .LVU955
 3575 017c 488B7C24 		movq	32(%rsp), %rdi
 3575      20
 3576 0181 498D741F 		leaq	4(%r15,%rbx), %rsi
 3576      04
 3577 0186 48037424 		addq	16(%rsp), %rsi
 3577      10
 3578 018b 48037424 		addq	8(%rsp), %rsi
 3578      08
 3579 0190 E8000000 		call	png_malloc_base@PLT
 3579      00
 3580              	.LVL309:
 827:fltk-1.3.4-1/png/pngset.c ****           key_len + text_length + lang_len + lang_key_len + 4));
 3581              		.loc 1 827 18 view .LVU956
 3582 0195 49894608 		movq	%rax, 8(%r14)
 827:fltk-1.3.4-1/png/pngset.c ****           key_len + text_length + lang_len + lang_key_len + 4));
 3583              		.loc 1 827 20 view .LVU957
 3584 0199 4889C7   		movq	%rax, %rdi
 830:fltk-1.3.4-1/png/pngset.c ****       {
 3585              		.loc 1 830 7 is_stmt 1 view .LVU958
 830:fltk-1.3.4-1/png/pngset.c ****       {
 3586              		.loc 1 830 10 is_stmt 0 view .LVU959
 3587 019c 4885C0   		testq	%rax, %rax
 3588 019f 0F84E401 		je	.L300
 3588      0000
 837:fltk-1.3.4-1/png/pngset.c ****           (unsigned long)(png_uint_32)
 3589              		.loc 1 837 7 is_stmt 1 view .LVU960
 842:fltk-1.3.4-1/png/pngset.c ****       *(textp->key + key_len) = '\0';
 3590              		.loc 1 842 7 view .LVU961
 3591              	.LVL310:
 3592              	.LBB176:
 3593              	.LBI176:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3594              		.loc 2 31 1 view .LVU962
 3595              	.LBB177:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3596              		.loc 2 34 3 view .LVU963
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3597              		.loc 2 34 10 is_stmt 0 view .LVU964
 3598 01a5 498B7508 		movq	8(%r13), %rsi
 3599 01a9 4889DA   		movq	%rbx, %rdx
 3600 01ac E8000000 		call	memcpy@PLT
 3600      00
 3601              	.LVL311:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3602              		.loc 2 34 10 view .LVU965
 3603              	.LBE177:
 3604              	.LBE176:
 843:fltk-1.3.4-1/png/pngset.c **** 
 3605              		.loc 1 843 7 is_stmt 1 view .LVU966
 845:fltk-1.3.4-1/png/pngset.c ****       {
 3606              		.loc 1 845 10 is_stmt 0 view .LVU967
 3607 01b1 418B5500 		movl	0(%r13), %edx
 843:fltk-1.3.4-1/png/pngset.c **** 
 3608              		.loc 1 843 31 view .LVU968
 3609 01b5 C6041800 		movb	$0, (%rax,%rbx)
 845:fltk-1.3.4-1/png/pngset.c ****       {
 3610              		.loc 1 845 7 is_stmt 1 view .LVU969
 3611 01b9 488D7C18 		leaq	1(%rax,%rbx), %rdi
 3611      01
 845:fltk-1.3.4-1/png/pngset.c ****       {
 3612              		.loc 1 845 10 is_stmt 0 view .LVU970
 3613 01be 85D2     		testl	%edx, %edx
 3614 01c0 0F8EAAFE 		jle	.L264
 3614      FFFF
 847:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->lang, text_ptr[i].lang, lang_len);
 3615              		.loc 1 847 10 is_stmt 1 view .LVU971
 3616              	.LBB178:
 3617              	.LBB179:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3618              		.loc 2 34 10 is_stmt 0 view .LVU972
 3619 01c6 488B5C24 		movq	8(%rsp), %rbx
 3619      08
 3620              	.LVL312:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3621              		.loc 2 34 10 view .LVU973
 3622              	.LBE179:
 3623              	.LBE178:
 847:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->lang, text_ptr[i].lang, lang_len);
 3624              		.loc 1 847 22 view .LVU974
 3625 01cb 49897E28 		movq	%rdi, 40(%r14)
 848:fltk-1.3.4-1/png/pngset.c ****          *(textp->lang + lang_len) = '\0';
 3626              		.loc 1 848 10 is_stmt 1 view .LVU975
 3627              	.LVL313:
 3628              	.LBB181:
 3629              	.LBI178:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3630              		.loc 2 31 1 view .LVU976
 3631              	.LBB180:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3632              		.loc 2 34 3 view .LVU977
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3633              		.loc 2 34 10 is_stmt 0 view .LVU978
 3634 01cf 498B7528 		movq	40(%r13), %rsi
 3635 01d3 4889DA   		movq	%rbx, %rdx
 3636 01d6 E8000000 		call	memcpy@PLT
 3636      00
 3637              	.LVL314:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3638              		.loc 2 34 10 view .LVU979
 3639              	.LBE180:
 3640              	.LBE181:
 849:fltk-1.3.4-1/png/pngset.c ****          textp->lang_key = textp->lang + lang_len + 1;
 3641              		.loc 1 849 10 is_stmt 1 view .LVU980
 849:fltk-1.3.4-1/png/pngset.c ****          textp->lang_key = textp->lang + lang_len + 1;
 3642              		.loc 1 849 36 is_stmt 0 view .LVU981
 3643 01db C6041800 		movb	$0, (%rax,%rbx)
 850:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->lang_key, text_ptr[i].lang_key, lang_key_len);
 3644              		.loc 1 850 10 is_stmt 1 view .LVU982
 850:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->lang_key, text_ptr[i].lang_key, lang_key_len);
 3645              		.loc 1 850 51 is_stmt 0 view .LVU983
 3646 01df 498B4628 		movq	40(%r14), %rax
 3647 01e3 488D7C18 		leaq	1(%rax,%rbx), %rdi
 3647      01
 3648              	.LBB182:
 3649              	.LBB183:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3650              		.loc 2 34 10 view .LVU984
 3651 01e8 488B5C24 		movq	16(%rsp), %rbx
 3651      10
 3652              	.LBE183:
 3653              	.LBE182:
 850:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->lang_key, text_ptr[i].lang_key, lang_key_len);
 3654              		.loc 1 850 26 view .LVU985
 3655 01ed 49897E30 		movq	%rdi, 48(%r14)
 851:fltk-1.3.4-1/png/pngset.c ****          *(textp->lang_key + lang_key_len) = '\0';
 3656              		.loc 1 851 10 is_stmt 1 view .LVU986
 3657              	.LVL315:
 3658              	.LBB185:
 3659              	.LBI182:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3660              		.loc 2 31 1 view .LVU987
 3661              	.LBB184:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3662              		.loc 2 34 3 view .LVU988
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3663              		.loc 2 34 10 is_stmt 0 view .LVU989
 3664 01f1 498B7530 		movq	48(%r13), %rsi
 3665 01f5 4889DA   		movq	%rbx, %rdx
 3666 01f8 E8000000 		call	memcpy@PLT
 3666      00
 3667              	.LVL316:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3668              		.loc 2 34 10 view .LVU990
 3669              	.LBE184:
 3670              	.LBE185:
 852:fltk-1.3.4-1/png/pngset.c ****          textp->text = textp->lang_key + lang_key_len + 1;
 3671              		.loc 1 852 10 is_stmt 1 view .LVU991
 852:fltk-1.3.4-1/png/pngset.c ****          textp->text = textp->lang_key + lang_key_len + 1;
 3672              		.loc 1 852 44 is_stmt 0 view .LVU992
 3673 01fd 498B4630 		movq	48(%r14), %rax
 3674 0201 C6041800 		movb	$0, (%rax,%rbx)
 853:fltk-1.3.4-1/png/pngset.c ****       }
 3675              		.loc 1 853 10 is_stmt 1 view .LVU993
 853:fltk-1.3.4-1/png/pngset.c ****       }
 3676              		.loc 1 853 55 is_stmt 0 view .LVU994
 3677 0205 498B4630 		movq	48(%r14), %rax
 3678 0209 488D7C18 		leaq	1(%rax,%rbx), %rdi
 3678      01
 853:fltk-1.3.4-1/png/pngset.c ****       }
 3679              		.loc 1 853 22 view .LVU995
 3680 020e 49897E10 		movq	%rdi, 16(%r14)
 863:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->text, text_ptr[i].text, text_length);
 3681              		.loc 1 863 7 is_stmt 1 view .LVU996
 863:fltk-1.3.4-1/png/pngset.c ****          memcpy(textp->text, text_ptr[i].text, text_length);
 3682              		.loc 1 863 10 is_stmt 0 view .LVU997
 3683 0212 4D85FF   		testq	%r15, %r15
 3684 0215 0F8472FE 		je	.L266
 3684      FFFF
 3685              	.L298:
 864:fltk-1.3.4-1/png/pngset.c **** 
 3686              		.loc 1 864 10 is_stmt 1 view .LVU998
 3687              	.LVL317:
 3688              	.LBB186:
 3689              	.LBI186:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 3690              		.loc 2 31 1 view .LVU999
 3691              	.LBB187:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3692              		.loc 2 34 3 view .LVU1000
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3693              		.loc 2 34 10 is_stmt 0 view .LVU1001
 3694 021b 498B7510 		movq	16(%r13), %rsi
 3695 021f 4C89FA   		movq	%r15, %rdx
 3696 0222 E8000000 		call	memcpy@PLT
 3696      00
 3697              	.LVL318:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3698              		.loc 2 34 10 view .LVU1002
 3699 0227 498B7E10 		movq	16(%r14), %rdi
 3700              	.LVL319:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 3701              		.loc 2 34 10 view .LVU1003
 3702              	.LBE187:
 3703              	.LBE186:
 866:fltk-1.3.4-1/png/pngset.c **** 
 3704              		.loc 1 866 7 is_stmt 1 view .LVU1004
 866:fltk-1.3.4-1/png/pngset.c **** 
 3705              		.loc 1 866 36 is_stmt 0 view .LVU1005
 3706 022b 42C6043F 		movb	$0, (%rdi,%r15)
 3706      00
 869:fltk-1.3.4-1/png/pngset.c ****       {
 3707              		.loc 1 869 7 is_stmt 1 view .LVU1006
 869:fltk-1.3.4-1/png/pngset.c ****       {
 3708              		.loc 1 869 10 is_stmt 0 view .LVU1007
 3709 0230 418B06   		movl	(%r14), %eax
 3710 0233 85C0     		testl	%eax, %eax
 3711 0235 0F8F62FE 		jg	.L301
 3711      FFFF
 3712              	.L267:
 878:fltk-1.3.4-1/png/pngset.c ****          textp->itxt_length = 0;
 3713              		.loc 1 878 10 is_stmt 1 view .LVU1008
 878:fltk-1.3.4-1/png/pngset.c ****          textp->itxt_length = 0;
 3714              		.loc 1 878 29 is_stmt 0 view .LVU1009
 3715 023b 4D897E18 		movq	%r15, 24(%r14)
 879:fltk-1.3.4-1/png/pngset.c ****       }
 3716              		.loc 1 879 10 is_stmt 1 view .LVU1010
 879:fltk-1.3.4-1/png/pngset.c ****       }
 3717              		.loc 1 879 29 is_stmt 0 view .LVU1011
 3718 023f 49C74620 		movq	$0, 32(%r14)
 3718      00000000 
 3719 0247 E95DFEFF 		jmp	.L268
 3719      FF
 3720              	.LVL320:
 3721 024c 0F1F4000 		.p2align 4,,10
 3722              		.p2align 3
 3723              	.L250:
 879:fltk-1.3.4-1/png/pngset.c ****       }
 3724              		.loc 1 879 29 view .LVU1012
 3725              	.LBE188:
 3726              	.LBE173:
 3727              	.LBE172:
 708:fltk-1.3.4-1/png/pngset.c **** 
 3728              		.loc 1 708 13 view .LVU1013
 3729 0250 31C0     		xorl	%eax, %eax
 3730              	.L249:
 887:fltk-1.3.4-1/png/pngset.c **** #endif
 3731              		.loc 1 887 1 view .LVU1014
 3732 0252 4883C438 		addq	$56, %rsp
 3733              		.cfi_remember_state
 3734              		.cfi_def_cfa_offset 56
 3735 0256 5B       		popq	%rbx
 3736              		.cfi_def_cfa_offset 48
 3737 0257 5D       		popq	%rbp
 3738              		.cfi_def_cfa_offset 40
 3739 0258 415C     		popq	%r12
 3740              		.cfi_def_cfa_offset 32
 3741 025a 415D     		popq	%r13
 3742              		.cfi_def_cfa_offset 24
 3743 025c 415E     		popq	%r14
 3744              		.cfi_def_cfa_offset 16
 3745 025e 415F     		popq	%r15
 3746              		.cfi_def_cfa_offset 8
 3747 0260 C3       		ret
 3748              	.LVL321:
 3749              		.p2align 4,,10
 3750 0261 0F1F8000 		.p2align 3
 3750      000000
 3751              	.L259:
 3752              		.cfi_restore_state
 3753              	.LBB193:
 3754              	.LBB192:
 3755              	.LBB189:
 809:fltk-1.3.4-1/png/pngset.c ****       {
 3756              		.loc 1 809 7 is_stmt 1 view .LVU1015
 809:fltk-1.3.4-1/png/pngset.c ****       {
 3757              		.loc 1 809 10 is_stmt 0 view .LVU1016
 3758 0268 4D85C9   		testq	%r9, %r9
 3759 026b 7433     		je	.L272
 809:fltk-1.3.4-1/png/pngset.c ****       {
 3760              		.loc 1 809 36 view .LVU1017
 3761 026d 41803900 		cmpb	$0, (%r9)
 3762 0271 742D     		je	.L272
 780:fltk-1.3.4-1/png/pngset.c ****          lang_key_len = 0;
 3763              		.loc 1 780 19 view .LVU1018
 3764 0273 48C74424 		movq	$0, 8(%rsp)
 3764      08000000 
 3764      00
 781:fltk-1.3.4-1/png/pngset.c ****       }
 3765              		.loc 1 781 23 view .LVU1019
 3766 027c 48C74424 		movq	$0, 16(%rsp)
 3766      10000000 
 3766      00
 3767              	.LVL322:
 3768              	.L274:
 823:fltk-1.3.4-1/png/pngset.c ****          textp->compression = text_ptr[i].compression;
 3769              		.loc 1 823 10 is_stmt 1 view .LVU1020
 823:fltk-1.3.4-1/png/pngset.c ****          textp->compression = text_ptr[i].compression;
 3770              		.loc 1 823 24 is_stmt 0 view .LVU1021
 3771 0285 4C89CF   		movq	%r9, %rdi
 3772 0288 E8000000 		call	strlen@PLT
 3772      00
 3773              	.LVL323:
 3774 028d 4989C7   		movq	%rax, %r15
 3775              	.LVL324:
 824:fltk-1.3.4-1/png/pngset.c ****       }
 3776              		.loc 1 824 10 is_stmt 1 view .LVU1022
 824:fltk-1.3.4-1/png/pngset.c ****       }
 3777              		.loc 1 824 29 is_stmt 0 view .LVU1023
 3778 0290 8B442418 		movl	24(%rsp), %eax
 3779              	.LVL325:
 824:fltk-1.3.4-1/png/pngset.c ****       }
 3780              		.loc 1 824 29 view .LVU1024
 3781 0294 418906   		movl	%eax, (%r14)
 3782 0297 E9E0FEFF 		jmp	.L262
 3782      FF
 3783              	.LVL326:
 3784 029c 0F1F4000 		.p2align 4,,10
 3785              		.p2align 3
 3786              	.L272:
 818:fltk-1.3.4-1/png/pngset.c ****       }
 3787              		.loc 1 818 13 is_stmt 1 view .LVU1025
 818:fltk-1.3.4-1/png/pngset.c ****       }
 3788              		.loc 1 818 32 is_stmt 0 view .LVU1026
 3789 02a0 41C706FF 		movl	$-1, (%r14)
 3789      FFFFFF
 811:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_iTXt_SUPPORTED
 3790              		.loc 1 811 22 view .LVU1027
 3791 02a7 4531FF   		xorl	%r15d, %r15d
 818:fltk-1.3.4-1/png/pngset.c ****       }
 3792              		.loc 1 818 32 view .LVU1028
 3793 02aa 48C74424 		movq	$0, 16(%rsp)
 3793      10000000 
 3793      00
 3794 02b3 48C74424 		movq	$0, 8(%rsp)
 3794      08000000 
 3794      00
 3795 02bc E9BBFEFF 		jmp	.L262
 3795      FF
 3796              	.LVL327:
 3797              		.p2align 4,,10
 3798 02c1 0F1F8000 		.p2align 3
 3798      000000
 3799              	.L299:
 771:fltk-1.3.4-1/png/pngset.c ****             PNG_CHUNK_WRITE_ERROR);
 3800              		.loc 1 771 10 is_stmt 1 view .LVU1029
 3801 02c8 488B7C24 		movq	32(%rsp), %rdi
 3801      20
 3802 02cd BA010000 		movl	$1, %edx
 3802      00
 3803              	.LVL328:
 771:fltk-1.3.4-1/png/pngset.c ****             PNG_CHUNK_WRITE_ERROR);
 3804              		.loc 1 771 10 is_stmt 0 view .LVU1030
 3805 02d2 488D3500 		leaq	.LC34(%rip), %rsi
 3805      000000
 3806 02d9 E8000000 		call	png_chunk_report@PLT
 3806      00
 3807              	.LVL329:
 773:fltk-1.3.4-1/png/pngset.c ****       }
 3808              		.loc 1 773 10 is_stmt 1 view .LVU1031
 3809 02de E9CDFDFF 		jmp	.L257
 3809      FF
 3810              	.LVL330:
 3811              		.p2align 4,,10
 3812 02e3 0F1F4400 		.p2align 3
 3812      00
 3813              	.L251:
 773:fltk-1.3.4-1/png/pngset.c ****       }
 3814              		.loc 1 773 10 is_stmt 0 view .LVU1032
 3815              	.LBE189:
 3816              	.LBB190:
 717:fltk-1.3.4-1/png/pngset.c ****       int max_text;
 3817              		.loc 1 717 7 is_stmt 1 view .LVU1033
 718:fltk-1.3.4-1/png/pngset.c ****       png_textp new_text = NULL;
 3818              		.loc 1 718 7 view .LVU1034
 719:fltk-1.3.4-1/png/pngset.c **** 
 3819              		.loc 1 719 7 view .LVU1035
 722:fltk-1.3.4-1/png/pngset.c ****       if (num_text <= INT_MAX - max_text)
 3820              		.loc 1 722 7 view .LVU1036
 723:fltk-1.3.4-1/png/pngset.c ****       {
 3821              		.loc 1 723 7 view .LVU1037
 723:fltk-1.3.4-1/png/pngset.c ****       {
 3822              		.loc 1 723 31 is_stmt 0 view .LVU1038
 3823 02e8 B9FFFFFF 		movl	$2147483647, %ecx
 3823      7F
 3824              	.LVL331:
 723:fltk-1.3.4-1/png/pngset.c ****       {
 3825              		.loc 1 723 31 view .LVU1039
 3826 02ed 29D1     		subl	%edx, %ecx
 723:fltk-1.3.4-1/png/pngset.c ****       {
 3827              		.loc 1 723 10 view .LVU1040
 3828 02ef 394C241C 		cmpl	%ecx, 28(%rsp)
 3829 02f3 7F74     		jg	.L256
 725:fltk-1.3.4-1/png/pngset.c **** 
 3830              		.loc 1 725 10 is_stmt 1 view .LVU1041
 725:fltk-1.3.4-1/png/pngset.c **** 
 3831              		.loc 1 725 19 is_stmt 0 view .LVU1042
 3832 02f5 8B44241C 		movl	28(%rsp), %eax
 732:fltk-1.3.4-1/png/pngset.c **** 
 3833              		.loc 1 732 22 view .LVU1043
 3834 02f9 41BCFFFF 		movl	$2147483647, %r12d
 3834      FF7F
 725:fltk-1.3.4-1/png/pngset.c **** 
 3835              		.loc 1 725 19 view .LVU1044
 3836 02ff 01D0     		addl	%edx, %eax
 3837              	.LVL332:
 728:fltk-1.3.4-1/png/pngset.c ****             max_text = (max_text + 8) & ~0x7;
 3838              		.loc 1 728 10 is_stmt 1 view .LVU1045
 728:fltk-1.3.4-1/png/pngset.c ****             max_text = (max_text + 8) & ~0x7;
 3839              		.loc 1 728 13 is_stmt 0 view .LVU1046
 3840 0301 3DF6FFFF 		cmpl	$2147483638, %eax
 3840      7F
 3841 0306 7F0D     		jg	.L255
 729:fltk-1.3.4-1/png/pngset.c **** 
 3842              		.loc 1 729 13 is_stmt 1 view .LVU1047
 729:fltk-1.3.4-1/png/pngset.c **** 
 3843              		.loc 1 729 34 is_stmt 0 view .LVU1048
 3844 0308 448D6008 		leal	8(%rax), %r12d
 729:fltk-1.3.4-1/png/pngset.c **** 
 3845              		.loc 1 729 22 view .LVU1049
 3846 030c 4183E4F8 		andl	$-8, %r12d
 3847              	.LVL333:
 729:fltk-1.3.4-1/png/pngset.c **** 
 3848              		.loc 1 729 22 view .LVU1050
 3849 0310 4489E1   		movl	%r12d, %ecx
 3850 0313 29D1     		subl	%edx, %ecx
 3851              	.LVL334:
 3852              	.L255:
 737:fltk-1.3.4-1/png/pngset.c ****             info_ptr->text, old_num_text, max_text-old_num_text,
 3853              		.loc 1 737 10 is_stmt 1 view .LVU1051
 737:fltk-1.3.4-1/png/pngset.c ****             info_ptr->text, old_num_text, max_text-old_num_text,
 3854              		.loc 1 737 21 is_stmt 0 view .LVU1052
 3855 0315 4C8B7C24 		movq	32(%rsp), %r15
 3855      20
 3856 031a 488BB5A0 		movq	160(%rbp), %rsi
 3856      000000
 3857              	.LVL335:
 737:fltk-1.3.4-1/png/pngset.c ****             info_ptr->text, old_num_text, max_text-old_num_text,
 3858              		.loc 1 737 21 view .LVU1053
 3859 0321 41B83800 		movl	$56, %r8d
 3859      0000
 3860 0327 4C89FF   		movq	%r15, %rdi
 3861              	.LVL336:
 737:fltk-1.3.4-1/png/pngset.c ****             info_ptr->text, old_num_text, max_text-old_num_text,
 3862              		.loc 1 737 21 view .LVU1054
 3863 032a E8000000 		call	png_realloc_array@PLT
 3863      00
 3864              	.LVL337:
 737:fltk-1.3.4-1/png/pngset.c ****             info_ptr->text, old_num_text, max_text-old_num_text,
 3865              		.loc 1 737 21 view .LVU1055
 3866 032f 4889C3   		movq	%rax, %rbx
 3867              	.LVL338:
 742:fltk-1.3.4-1/png/pngset.c ****       {
 3868              		.loc 1 742 7 is_stmt 1 view .LVU1056
 742:fltk-1.3.4-1/png/pngset.c ****       {
 3869              		.loc 1 742 10 is_stmt 0 view .LVU1057
 3870 0332 4885C0   		testq	%rax, %rax
 3871 0335 7432     		je	.L256
 749:fltk-1.3.4-1/png/pngset.c **** 
 3872              		.loc 1 749 7 is_stmt 1 view .LVU1058
 3873 0337 488BB5A0 		movq	160(%rbp), %rsi
 3873      000000
 3874 033e 4C89FF   		movq	%r15, %rdi
 3875 0341 E8000000 		call	png_free@PLT
 3875      00
 3876              	.LVL339:
 751:fltk-1.3.4-1/png/pngset.c ****       info_ptr->free_me |= PNG_FREE_TEXT;
 3877              		.loc 1 751 7 view .LVU1059
 751:fltk-1.3.4-1/png/pngset.c ****       info_ptr->free_me |= PNG_FREE_TEXT;
 3878              		.loc 1 751 22 is_stmt 0 view .LVU1060
 3879 0346 48899DA0 		movq	%rbx, 160(%rbp)
 3879      000000
 752:fltk-1.3.4-1/png/pngset.c ****       info_ptr->max_text = max_text;
 3880              		.loc 1 752 7 is_stmt 1 view .LVU1061
 3881 034d 8B959400 		movl	148(%rbp), %edx
 3881      0000
 752:fltk-1.3.4-1/png/pngset.c ****       info_ptr->max_text = max_text;
 3882              		.loc 1 752 25 is_stmt 0 view .LVU1062
 3883 0353 818D1C01 		orl	$16384, 284(%rbp)
 3883      00000040 
 3883      0000
 753:fltk-1.3.4-1/png/pngset.c ****       /* num_text is adjusted below as the entries are copied in */
 3884              		.loc 1 753 7 is_stmt 1 view .LVU1063
 753:fltk-1.3.4-1/png/pngset.c ****       /* num_text is adjusted below as the entries are copied in */
 3885              		.loc 1 753 26 is_stmt 0 view .LVU1064
 3886 035d 4489A598 		movl	%r12d, 152(%rbp)
 3886      000000
 3887 0364 E9F8FCFF 		jmp	.L252
 3887      FF
 3888              	.LVL340:
 3889              	.L256:
 744:fltk-1.3.4-1/png/pngset.c ****             PNG_CHUNK_WRITE_ERROR);
 3890              		.loc 1 744 10 is_stmt 1 view .LVU1065
 3891 0369 488B7C24 		movq	32(%rsp), %rdi
 3891      20
 3892 036e BA010000 		movl	$1, %edx
 3892      00
 3893 0373 488D3500 		leaq	.LC33(%rip), %rsi
 3893      000000
 3894 037a E8000000 		call	png_chunk_report@PLT
 3894      00
 3895              	.LVL341:
 746:fltk-1.3.4-1/png/pngset.c ****       }
 3896              		.loc 1 746 10 view .LVU1066
 746:fltk-1.3.4-1/png/pngset.c ****       }
 3897              		.loc 1 746 17 is_stmt 0 view .LVU1067
 3898 037f B8010000 		movl	$1, %eax
 3898      00
 3899 0384 E9C9FEFF 		jmp	.L249
 3899      FF
 3900              	.LVL342:
 3901              	.L300:
 746:fltk-1.3.4-1/png/pngset.c ****       }
 3902              		.loc 1 746 17 view .LVU1068
 3903              	.LBE190:
 3904              	.LBB191:
 832:fltk-1.3.4-1/png/pngset.c ****                PNG_CHUNK_WRITE_ERROR);
 3905              		.loc 1 832 10 is_stmt 1 view .LVU1069
 3906 0389 488B7C24 		movq	32(%rsp), %rdi
 3906      20
 3907 038e BA010000 		movl	$1, %edx
 3907      00
 3908 0393 488D3500 		leaq	.LC35(%rip), %rsi
 3908      000000
 3909 039a E8000000 		call	png_chunk_report@PLT
 3909      00
 3910              	.LVL343:
 834:fltk-1.3.4-1/png/pngset.c ****       }
 3911              		.loc 1 834 10 view .LVU1070
 834:fltk-1.3.4-1/png/pngset.c ****       }
 3912              		.loc 1 834 17 is_stmt 0 view .LVU1071
 3913 039f B8010000 		movl	$1, %eax
 3913      00
 3914 03a4 E9A9FEFF 		jmp	.L249
 3914      FF
 3915              	.LBE191:
 3916              	.LBE192:
 3917              	.LBE193:
 3918              		.cfi_endproc
 3919              	.LFE62:
 3921              		.section	.rodata.png_set_text.str1.8,"aMS",@progbits,1
 3922              		.align 8
 3923              	.LC36:
 3924 0000 496E7375 		.string	"Insufficient memory to store text"
 3924      66666963 
 3924      69656E74 
 3924      206D656D 
 3924      6F727920 
 3925              		.section	.text.png_set_text,"ax",@progbits
 3926              		.p2align 4
 3927              		.globl	png_set_text
 3929              	png_set_text:
 3930              	.LVL344:
 3931              	.LFB61:
 690:fltk-1.3.4-1/png/pngset.c ****    int ret;
 3932              		.loc 1 690 1 is_stmt 1 view -0
 3933              		.cfi_startproc
 690:fltk-1.3.4-1/png/pngset.c ****    int ret;
 3934              		.loc 1 690 1 is_stmt 0 view .LVU1073
 3935 0000 F30F1EFA 		endbr64
 691:fltk-1.3.4-1/png/pngset.c ****    ret = png_set_text_2(png_ptr, info_ptr, text_ptr, num_text);
 3936              		.loc 1 691 4 is_stmt 1 view .LVU1074
 692:fltk-1.3.4-1/png/pngset.c **** 
 3937              		.loc 1 692 4 view .LVU1075
 690:fltk-1.3.4-1/png/pngset.c ****    int ret;
 3938              		.loc 1 690 1 is_stmt 0 view .LVU1076
 3939 0004 55       		pushq	%rbp
 3940              		.cfi_def_cfa_offset 16
 3941              		.cfi_offset 6, -16
 690:fltk-1.3.4-1/png/pngset.c ****    int ret;
 3942              		.loc 1 690 1 view .LVU1077
 3943 0005 4889FD   		movq	%rdi, %rbp
 692:fltk-1.3.4-1/png/pngset.c **** 
 3944              		.loc 1 692 10 view .LVU1078
 3945 0008 E8000000 		call	png_set_text_2
 3945      00
 3946              	.LVL345:
 694:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Insufficient memory to store text");
 3947              		.loc 1 694 4 is_stmt 1 view .LVU1079
 694:fltk-1.3.4-1/png/pngset.c ****       png_error(png_ptr, "Insufficient memory to store text");
 3948              		.loc 1 694 7 is_stmt 0 view .LVU1080
 3949 000d 85C0     		testl	%eax, %eax
 3950 000f 7502     		jne	.L305
 696:fltk-1.3.4-1/png/pngset.c **** 
 3951              		.loc 1 696 1 view .LVU1081
 3952 0011 5D       		popq	%rbp
 3953              		.cfi_remember_state
 3954              		.cfi_def_cfa_offset 8
 3955              	.LVL346:
 696:fltk-1.3.4-1/png/pngset.c **** 
 3956              		.loc 1 696 1 view .LVU1082
 3957 0012 C3       		ret
 3958              	.LVL347:
 3959              	.L305:
 3960              		.cfi_restore_state
 695:fltk-1.3.4-1/png/pngset.c **** }
 3961              		.loc 1 695 7 is_stmt 1 view .LVU1083
 3962 0013 488D3500 		leaq	.LC36(%rip), %rsi
 3962      000000
 3963 001a 4889EF   		movq	%rbp, %rdi
 3964 001d E8000000 		call	png_error@PLT
 3964      00
 3965              	.LVL348:
 695:fltk-1.3.4-1/png/pngset.c **** }
 3966              		.loc 1 695 7 is_stmt 0 view .LVU1084
 3967              		.cfi_endproc
 3968              	.LFE61:
 3970              		.section	.rodata.png_set_tIME.str1.1,"aMS",@progbits,1
 3971              	.LC37:
 3972 0000 49676E6F 		.string	"Ignoring invalid time value"
 3972      72696E67 
 3972      20696E76 
 3972      616C6964 
 3972      2074696D 
 3973              		.section	.text.png_set_tIME,"ax",@progbits
 3974              		.p2align 4
 3975              		.globl	png_set_tIME
 3977              	png_set_tIME:
 3978              	.LVL349:
 3979              	.LFB63:
 894:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "tIME");
 3980              		.loc 1 894 1 is_stmt 1 view -0
 3981              		.cfi_startproc
 894:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "tIME");
 3982              		.loc 1 894 1 is_stmt 0 view .LVU1086
 3983 0000 F30F1EFA 		endbr64
 895:fltk-1.3.4-1/png/pngset.c **** 
 3984              		.loc 1 895 4 is_stmt 1 view .LVU1087
 897:fltk-1.3.4-1/png/pngset.c ****        (png_ptr->mode & PNG_WROTE_tIME) != 0)
 3985              		.loc 1 897 4 view .LVU1088
 897:fltk-1.3.4-1/png/pngset.c ****        (png_ptr->mode & PNG_WROTE_tIME) != 0)
 3986              		.loc 1 897 36 is_stmt 0 view .LVU1089
 3987 0004 4885F6   		testq	%rsi, %rsi
 3988 0007 0F94C1   		sete	%cl
 897:fltk-1.3.4-1/png/pngset.c ****        (png_ptr->mode & PNG_WROTE_tIME) != 0)
 3989              		.loc 1 897 44 view .LVU1090
 3990 000a 4885D2   		testq	%rdx, %rdx
 3991 000d 0F94C0   		sete	%al
 3992 0010 08C1     		orb	%al, %cl
 3993 0012 7557     		jne	.L306
 3994 0014 4885FF   		testq	%rdi, %rdi
 3995 0017 7452     		je	.L306
 897:fltk-1.3.4-1/png/pngset.c ****        (png_ptr->mode & PNG_WROTE_tIME) != 0)
 3996              		.loc 1 897 64 discriminator 2 view .LVU1091
 3997 0019 F6872D01 		testb	$2, 301(%rdi)
 3997      000002
 3998 0020 7549     		jne	.L306
 901:fltk-1.3.4-1/png/pngset.c ****        mod_time->day   == 0   || mod_time->day   > 31  ||
 3999              		.loc 1 901 4 is_stmt 1 view .LVU1092
 901:fltk-1.3.4-1/png/pngset.c ****        mod_time->day   == 0   || mod_time->day   > 31  ||
 4000              		.loc 1 901 31 is_stmt 0 view .LVU1093
 4001 0022 0FB64202 		movzbl	2(%rdx), %eax
 4002 0026 83E801   		subl	$1, %eax
 901:fltk-1.3.4-1/png/pngset.c ****        mod_time->day   == 0   || mod_time->day   > 31  ||
 4003              		.loc 1 901 7 view .LVU1094
 4004 0029 3C0B     		cmpb	$11, %al
 4005 002b 770B     		ja	.L308
 902:fltk-1.3.4-1/png/pngset.c ****        mod_time->hour  > 23   || mod_time->minute > 59 ||
 4006              		.loc 1 902 31 discriminator 1 view .LVU1095
 4007 002d 0FB64203 		movzbl	3(%rdx), %eax
 4008 0031 83E801   		subl	$1, %eax
 4009 0034 3C1E     		cmpb	$30, %al
 4010 0036 7610     		jbe	.L310
 4011              	.L308:
 906:fltk-1.3.4-1/png/pngset.c ****       return;
 4012              		.loc 1 906 7 is_stmt 1 view .LVU1096
 4013 0038 488D3500 		leaq	.LC37(%rip), %rsi
 4013      000000
 4014              	.LVL350:
 906:fltk-1.3.4-1/png/pngset.c ****       return;
 4015              		.loc 1 906 7 is_stmt 0 view .LVU1097
 4016 003f E9000000 		jmp	png_warning@PLT
 4016      00
 4017              	.LVL351:
 4018              		.p2align 4,,10
 4019 0044 0F1F4000 		.p2align 3
 4020              	.L310:
 902:fltk-1.3.4-1/png/pngset.c ****        mod_time->hour  > 23   || mod_time->minute > 59 ||
 4021              		.loc 1 902 56 discriminator 1 view .LVU1098
 4022 0048 807A0417 		cmpb	$23, 4(%rdx)
 4023 004c 77EA     		ja	.L308
 903:fltk-1.3.4-1/png/pngset.c ****        mod_time->second > 60)
 4024              		.loc 1 903 31 view .LVU1099
 4025 004e 807A053B 		cmpb	$59, 5(%rdx)
 4026 0052 77E4     		ja	.L308
 903:fltk-1.3.4-1/png/pngset.c ****        mod_time->second > 60)
 4027              		.loc 1 903 56 discriminator 1 view .LVU1100
 4028 0054 807A063C 		cmpb	$60, 6(%rdx)
 4029 0058 77DE     		ja	.L308
 910:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_tIME;
 4030              		.loc 1 910 4 is_stmt 1 view .LVU1101
 910:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_tIME;
 4031              		.loc 1 910 23 is_stmt 0 view .LVU1102
 4032 005a 488B02   		movq	(%rdx), %rax
 911:fltk-1.3.4-1/png/pngset.c **** }
 4033              		.loc 1 911 20 view .LVU1103
 4034 005d 814E0800 		orl	$512, 8(%rsi)
 4034      020000
 910:fltk-1.3.4-1/png/pngset.c ****    info_ptr->valid |= PNG_INFO_tIME;
 4035              		.loc 1 910 23 view .LVU1104
 4036 0064 488986A8 		movq	%rax, 168(%rsi)
 4036      000000
 911:fltk-1.3.4-1/png/pngset.c **** }
 4037              		.loc 1 911 4 is_stmt 1 view .LVU1105
 4038              	.L306:
 912:fltk-1.3.4-1/png/pngset.c **** #endif
 4039              		.loc 1 912 1 is_stmt 0 view .LVU1106
 4040 006b C3       		ret
 4041              		.cfi_endproc
 4042              	.LFE63:
 4044              		.section	.rodata.png_set_tRNS.str1.8,"aMS",@progbits,1
 4045              		.align 8
 4046              	.LC38:
 4047 0000 74524E53 		.string	"tRNS chunk has out-of-range samples for bit_depth"
 4047      20636875 
 4047      6E6B2068 
 4047      6173206F 
 4047      75742D6F 
 4048              		.section	.text.png_set_tRNS,"ax",@progbits
 4049              		.p2align 4
 4050              		.globl	png_set_tRNS
 4052              	png_set_tRNS:
 4053              	.LVL352:
 4054              	.LFB64:
 919:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "tRNS");
 4055              		.loc 1 919 1 is_stmt 1 view -0
 4056              		.cfi_startproc
 919:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "tRNS");
 4057              		.loc 1 919 1 is_stmt 0 view .LVU1108
 4058 0000 F30F1EFA 		endbr64
 920:fltk-1.3.4-1/png/pngset.c **** 
 4059              		.loc 1 920 4 is_stmt 1 view .LVU1109
 922:fltk-1.3.4-1/png/pngset.c ****       return;
 4060              		.loc 1 922 4 view .LVU1110
 922:fltk-1.3.4-1/png/pngset.c ****       return;
 4061              		.loc 1 922 7 is_stmt 0 view .LVU1111
 4062 0004 4885FF   		testq	%rdi, %rdi
 4063 0007 0F846301 		je	.L347
 4063      0000
 919:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "tRNS");
 4064              		.loc 1 919 1 view .LVU1112
 4065 000d 4156     		pushq	%r14
 4066              		.cfi_def_cfa_offset 16
 4067              		.cfi_offset 14, -16
 4068 000f 4155     		pushq	%r13
 4069              		.cfi_def_cfa_offset 24
 4070              		.cfi_offset 13, -24
 4071 0011 4154     		pushq	%r12
 4072              		.cfi_def_cfa_offset 32
 4073              		.cfi_offset 12, -32
 4074 0013 55       		pushq	%rbp
 4075              		.cfi_def_cfa_offset 40
 4076              		.cfi_offset 6, -40
 4077 0014 53       		pushq	%rbx
 4078              		.cfi_def_cfa_offset 48
 4079              		.cfi_offset 3, -48
 4080 0015 4889F3   		movq	%rsi, %rbx
 922:fltk-1.3.4-1/png/pngset.c ****       return;
 4081              		.loc 1 922 7 view .LVU1113
 4082 0018 4885F6   		testq	%rsi, %rsi
 4083 001b 0F84A200 		je	.L311
 4083      0000
 4084 0021 4889FD   		movq	%rdi, %rbp
 4085 0024 4989D6   		movq	%rdx, %r14
 4086 0027 4189CD   		movl	%ecx, %r13d
 4087 002a 4D89C4   		movq	%r8, %r12
 925:fltk-1.3.4-1/png/pngset.c ****    {
 4088              		.loc 1 925 4 is_stmt 1 view .LVU1114
 925:fltk-1.3.4-1/png/pngset.c ****    {
 4089              		.loc 1 925 7 is_stmt 0 view .LVU1115
 4090 002d 4885D2   		testq	%rdx, %rdx
 4091 0030 7437     		je	.L315
 936:fltk-1.3.4-1/png/pngset.c **** 
 4092              		.loc 1 936 8 is_stmt 1 view .LVU1116
 4093 0032 BA002000 		movl	$8192, %edx
 4093      00
 4094              	.LVL353:
 936:fltk-1.3.4-1/png/pngset.c **** 
 4095              		.loc 1 936 8 is_stmt 0 view .LVU1117
 4096 0037 31C9     		xorl	%ecx, %ecx
 4097              	.LVL354:
 936:fltk-1.3.4-1/png/pngset.c **** 
 4098              		.loc 1 936 8 view .LVU1118
 4099 0039 E8000000 		call	png_free_data@PLT
 4099      00
 4100              	.LVL355:
 939:fltk-1.3.4-1/png/pngset.c ****          png_malloc(png_ptr, PNG_MAX_PALETTE_LENGTH));
 4101              		.loc 1 939 8 is_stmt 1 view .LVU1119
 939:fltk-1.3.4-1/png/pngset.c ****          png_malloc(png_ptr, PNG_MAX_PALETTE_LENGTH));
 4102              		.loc 1 939 55 is_stmt 0 view .LVU1120
 4103 003e BE000100 		movl	$256, %esi
 4103      00
 4104 0043 4889EF   		movq	%rbp, %rdi
 4105 0046 E8000000 		call	png_malloc@PLT
 4105      00
 4106              	.LVL356:
 942:fltk-1.3.4-1/png/pngset.c ****           memcpy(info_ptr->trans_alpha, trans_alpha, (png_size_t)num_trans);
 4107              		.loc 1 942 26 view .LVU1121
 4108 004b 418D55FF 		leal	-1(%r13), %edx
 939:fltk-1.3.4-1/png/pngset.c ****          png_malloc(png_ptr, PNG_MAX_PALETTE_LENGTH));
 4109              		.loc 1 939 53 view .LVU1122
 4110 004f 488983B8 		movq	%rax, 184(%rbx)
 4110      000000
 939:fltk-1.3.4-1/png/pngset.c ****          png_malloc(png_ptr, PNG_MAX_PALETTE_LENGTH));
 4111              		.loc 1 939 29 view .LVU1123
 4112 0056 488985F8 		movq	%rax, 760(%rbp)
 4112      020000
 942:fltk-1.3.4-1/png/pngset.c ****           memcpy(info_ptr->trans_alpha, trans_alpha, (png_size_t)num_trans);
 4113              		.loc 1 942 8 is_stmt 1 view .LVU1124
 942:fltk-1.3.4-1/png/pngset.c ****           memcpy(info_ptr->trans_alpha, trans_alpha, (png_size_t)num_trans);
 4114              		.loc 1 942 11 is_stmt 0 view .LVU1125
 4115 005d 81FAFF00 		cmpl	$255, %edx
 4115      0000
 4116 0063 0F86B700 		jbe	.L351
 4116      0000
 4117              	.L315:
 946:fltk-1.3.4-1/png/pngset.c ****    {
 4118              		.loc 1 946 4 is_stmt 1 view .LVU1126
 946:fltk-1.3.4-1/png/pngset.c ****    {
 4119              		.loc 1 946 7 is_stmt 0 view .LVU1127
 4120 0069 4D85E4   		testq	%r12, %r12
 4121 006c 7462     		je	.L352
 4122              	.L323:
 4123              	.LBB194:
 948:fltk-1.3.4-1/png/pngset.c **** 
 4124              		.loc 1 948 7 is_stmt 1 view .LVU1128
 948:fltk-1.3.4-1/png/pngset.c **** 
 4125              		.loc 1 948 38 is_stmt 0 view .LVU1129
 4126 006e 0FB64B24 		movzbl	36(%rbx), %ecx
 950:fltk-1.3.4-1/png/pngset.c ****           trans_color->gray > sample_max) ||
 4127              		.loc 1 950 20 view .LVU1130
 4128 0072 0FB65325 		movzbl	37(%rbx), %edx
 948:fltk-1.3.4-1/png/pngset.c **** 
 4129              		.loc 1 948 11 view .LVU1131
 4130 0076 B8010000 		movl	$1, %eax
 4130      00
 4131 007b D3E0     		sall	%cl, %eax
 4132              	.LVL357:
 950:fltk-1.3.4-1/png/pngset.c ****           trans_color->gray > sample_max) ||
 4133              		.loc 1 950 7 is_stmt 1 view .LVU1132
 950:fltk-1.3.4-1/png/pngset.c ****           trans_color->gray > sample_max) ||
 4134              		.loc 1 950 10 is_stmt 0 view .LVU1133
 4135 007d 84D2     		testb	%dl, %dl
 4136 007f 7567     		jne	.L353
 951:fltk-1.3.4-1/png/pngset.c ****           (info_ptr->color_type == PNG_COLOR_TYPE_RGB &&
 4137              		.loc 1 951 22 discriminator 1 view .LVU1134
 4138 0081 410FB754 		movzwl	8(%r12), %edx
 4138      2408
 950:fltk-1.3.4-1/png/pngset.c ****           trans_color->gray > sample_max) ||
 4139              		.loc 1 950 56 discriminator 1 view .LVU1135
 4140 0087 39C2     		cmpl	%eax, %edx
 4141 0089 7F7D     		jg	.L325
 4142              	.LVL358:
 4143              	.L326:
 959:fltk-1.3.4-1/png/pngset.c **** 
 4144              		.loc 1 959 7 is_stmt 1 view .LVU1136
 959:fltk-1.3.4-1/png/pngset.c **** 
 4145              		.loc 1 959 29 is_stmt 0 view .LVU1137
 4146 008b 498B0424 		movq	(%r12), %rax
 4147 008f 488983C0 		movq	%rax, 192(%rbx)
 4147      000000
 4148 0096 410FB744 		movzwl	8(%r12), %eax
 4148      2408
 4149 009c 668983C8 		movw	%ax, 200(%rbx)
 4149      000000
 961:fltk-1.3.4-1/png/pngset.c ****          num_trans = 1;
 4150              		.loc 1 961 7 is_stmt 1 view .LVU1138
 961:fltk-1.3.4-1/png/pngset.c ****          num_trans = 1;
 4151              		.loc 1 961 10 is_stmt 0 view .LVU1139
 4152 00a3 4585ED   		testl	%r13d, %r13d
 4153 00a6 0F85B400 		jne	.L320
 4153      0000
 962:fltk-1.3.4-1/png/pngset.c ****    }
 4154              		.loc 1 962 10 is_stmt 1 view .LVU1140
 4155              	.LVL359:
 962:fltk-1.3.4-1/png/pngset.c ****    }
 4156              		.loc 1 962 10 is_stmt 0 view .LVU1141
 4157              	.LBE194:
 965:fltk-1.3.4-1/png/pngset.c **** 
 4158              		.loc 1 965 4 is_stmt 1 view .LVU1142
 965:fltk-1.3.4-1/png/pngset.c **** 
 4159              		.loc 1 965 24 is_stmt 0 view .LVU1143
 4160 00ac B8010000 		movl	$1, %eax
 4160      00
 4161 00b1 66894322 		movw	%ax, 34(%rbx)
 967:fltk-1.3.4-1/png/pngset.c ****    {
 4162              		.loc 1 967 4 is_stmt 1 view .LVU1144
 4163              	.LVL360:
 4164              	.L327:
 969:fltk-1.3.4-1/png/pngset.c ****       info_ptr->free_me |= PNG_FREE_TRNS;
 4165              		.loc 1 969 7 view .LVU1145
 969:fltk-1.3.4-1/png/pngset.c ****       info_ptr->free_me |= PNG_FREE_TRNS;
 4166              		.loc 1 969 23 is_stmt 0 view .LVU1146
 4167 00b5 834B0810 		orl	$16, 8(%rbx)
 970:fltk-1.3.4-1/png/pngset.c ****    }
 4168              		.loc 1 970 7 is_stmt 1 view .LVU1147
 970:fltk-1.3.4-1/png/pngset.c ****    }
 4169              		.loc 1 970 25 is_stmt 0 view .LVU1148
 4170 00b9 818B1C01 		orl	$8192, 284(%rbx)
 4170      00000020 
 4170      0000
 4171              	.LVL361:
 4172              	.L311:
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4173              		.loc 1 972 1 view .LVU1149
 4174 00c3 5B       		popq	%rbx
 4175              		.cfi_remember_state
 4176              		.cfi_def_cfa_offset 40
 4177              	.LVL362:
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4178              		.loc 1 972 1 view .LVU1150
 4179 00c4 5D       		popq	%rbp
 4180              		.cfi_def_cfa_offset 32
 4181 00c5 415C     		popq	%r12
 4182              		.cfi_def_cfa_offset 24
 4183 00c7 415D     		popq	%r13
 4184              		.cfi_def_cfa_offset 16
 4185 00c9 415E     		popq	%r14
 4186              		.cfi_def_cfa_offset 8
 4187 00cb C3       		ret
 4188              	.LVL363:
 4189 00cc 0F1F4000 		.p2align 4,,10
 4190              		.p2align 3
 4191              	.L352:
 4192              		.cfi_restore_state
 965:fltk-1.3.4-1/png/pngset.c **** 
 4193              		.loc 1 965 4 is_stmt 1 view .LVU1151
 965:fltk-1.3.4-1/png/pngset.c **** 
 4194              		.loc 1 965 26 is_stmt 0 view .LVU1152
 4195 00d0 6644896B 		movw	%r13w, 34(%rbx)
 4195      22
 967:fltk-1.3.4-1/png/pngset.c ****    {
 4196              		.loc 1 967 4 is_stmt 1 view .LVU1153
 967:fltk-1.3.4-1/png/pngset.c ****    {
 4197              		.loc 1 967 7 is_stmt 0 view .LVU1154
 4198 00d5 4585ED   		testl	%r13d, %r13d
 4199 00d8 75DB     		jne	.L327
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4200              		.loc 1 972 1 view .LVU1155
 4201 00da 5B       		popq	%rbx
 4202              		.cfi_remember_state
 4203              		.cfi_def_cfa_offset 40
 4204              	.LVL364:
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4205              		.loc 1 972 1 view .LVU1156
 4206 00db 5D       		popq	%rbp
 4207              		.cfi_def_cfa_offset 32
 4208              	.LVL365:
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4209              		.loc 1 972 1 view .LVU1157
 4210 00dc 415C     		popq	%r12
 4211              		.cfi_def_cfa_offset 24
 4212              	.LVL366:
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4213              		.loc 1 972 1 view .LVU1158
 4214 00de 415D     		popq	%r13
 4215              		.cfi_def_cfa_offset 16
 4216              	.LVL367:
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4217              		.loc 1 972 1 view .LVU1159
 4218 00e0 415E     		popq	%r14
 4219              		.cfi_def_cfa_offset 8
 4220              	.LVL368:
 972:fltk-1.3.4-1/png/pngset.c **** #endif
 4221              		.loc 1 972 1 view .LVU1160
 4222 00e2 C3       		ret
 4223              	.LVL369:
 4224              		.p2align 4,,10
 4225 00e3 0F1F4400 		.p2align 3
 4225      00
 4226              	.L353:
 4227              		.cfi_restore_state
 4228              	.LBB195:
 951:fltk-1.3.4-1/png/pngset.c ****           (info_ptr->color_type == PNG_COLOR_TYPE_RGB &&
 4229              		.loc 1 951 43 view .LVU1161
 4230 00e8 80FA02   		cmpb	$2, %dl
 4231 00eb 759E     		jne	.L326
 953:fltk-1.3.4-1/png/pngset.c ****           trans_color->green > sample_max ||
 4232              		.loc 1 953 23 view .LVU1162
 4233 00ed 410FB754 		movzwl	2(%r12), %edx
 4233      2402
 952:fltk-1.3.4-1/png/pngset.c ****           (trans_color->red > sample_max ||
 4234              		.loc 1 952 55 view .LVU1163
 4235 00f3 39C2     		cmpl	%eax, %edx
 4236 00f5 7F11     		jg	.L325
 954:fltk-1.3.4-1/png/pngset.c ****           trans_color->blue > sample_max)))
 4237              		.loc 1 954 22 view .LVU1164
 4238 00f7 410FB754 		movzwl	4(%r12), %edx
 4238      2404
 953:fltk-1.3.4-1/png/pngset.c ****           trans_color->green > sample_max ||
 4239              		.loc 1 953 42 view .LVU1165
 4240 00fd 39C2     		cmpl	%eax, %edx
 4241 00ff 0F8EAB00 		jle	.L354
 4241      0000
 4242              		.p2align 4,,10
 4243 0105 0F1F00   		.p2align 3
 4244              	.L325:
 956:fltk-1.3.4-1/png/pngset.c ****             "tRNS chunk has out-of-range samples for bit_depth");
 4245              		.loc 1 956 10 is_stmt 1 view .LVU1166
 4246 0108 488D3500 		leaq	.LC38(%rip), %rsi
 4246      000000
 4247 010f 4889EF   		movq	%rbp, %rdi
 4248 0112 E8000000 		call	png_warning@PLT
 4248      00
 4249              	.LVL370:
 956:fltk-1.3.4-1/png/pngset.c ****             "tRNS chunk has out-of-range samples for bit_depth");
 4250              		.loc 1 956 10 is_stmt 0 view .LVU1167
 4251 0117 E96FFFFF 		jmp	.L326
 4251      FF
 4252 011c 0F1F4000 		.p2align 4,,10
 4253              		.p2align 3
 4254              	.L351:
 956:fltk-1.3.4-1/png/pngset.c ****             "tRNS chunk has out-of-range samples for bit_depth");
 4255              		.loc 1 956 10 view .LVU1168
 4256              	.LBE195:
 943:fltk-1.3.4-1/png/pngset.c ****    }
 4257              		.loc 1 943 11 is_stmt 1 view .LVU1169
 4258              	.LVL371:
 4259              	.LBB196:
 4260              	.LBI196:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4261              		.loc 2 31 1 view .LVU1170
 4262              	.LBB197:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4263              		.loc 2 34 3 view .LVU1171
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4264              		.loc 2 34 10 is_stmt 0 view .LVU1172
 4265 0120 4183FD08 		cmpl	$8, %r13d
 4266 0124 7352     		jnb	.L316
 4267 0126 41F6C504 		testb	$4, %r13b
 4268 012a 0F859300 		jne	.L355
 4268      0000
 4269 0130 4585ED   		testl	%r13d, %r13d
 4270 0133 741B     		je	.L317
 4271 0135 410FB616 		movzbl	(%r14), %edx
 4272 0139 8810     		movb	%dl, (%rax)
 4273 013b 41F6C502 		testb	$2, %r13b
 4274 013f 740F     		je	.L317
 4275 0141 4489EA   		movl	%r13d, %edx
 4276 0144 410FB74C 		movzwl	-2(%r14,%rdx), %ecx
 4276      16FE
 4277 014a 66894C10 		movw	%cx, -2(%rax,%rdx)
 4277      FE
 4278              	.LVL372:
 4279 014f 90       		.p2align 4,,10
 4280              		.p2align 3
 4281              	.L317:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4282              		.loc 2 34 10 view .LVU1173
 4283              	.LBE197:
 4284              	.LBE196:
 946:fltk-1.3.4-1/png/pngset.c ****    {
 4285              		.loc 1 946 4 is_stmt 1 view .LVU1174
 946:fltk-1.3.4-1/png/pngset.c ****    {
 4286              		.loc 1 946 7 is_stmt 0 view .LVU1175
 4287 0150 4D85E4   		testq	%r12, %r12
 4288 0153 0F8515FF 		jne	.L323
 4288      FFFF
 4289 0159 0F1F8000 		.p2align 4,,10
 4289      000000
 4290              		.p2align 3
 4291              	.L320:
 965:fltk-1.3.4-1/png/pngset.c **** 
 4292              		.loc 1 965 4 is_stmt 1 view .LVU1176
 965:fltk-1.3.4-1/png/pngset.c **** 
 4293              		.loc 1 965 26 is_stmt 0 view .LVU1177
 4294 0160 6644896B 		movw	%r13w, 34(%rbx)
 4294      22
 967:fltk-1.3.4-1/png/pngset.c ****    {
 4295              		.loc 1 967 4 is_stmt 1 view .LVU1178
 4296 0165 E94BFFFF 		jmp	.L327
 4296      FF
 4297              	.LVL373:
 4298 016a 660F1F44 		.p2align 4,,10
 4298      0000
 4299              		.p2align 3
 4300              	.L347:
 4301              		.cfi_def_cfa_offset 8
 4302              		.cfi_restore 3
 4303              		.cfi_restore 6
 4304              		.cfi_restore 12
 4305              		.cfi_restore 13
 4306              		.cfi_restore 14
 967:fltk-1.3.4-1/png/pngset.c ****    {
 4307              		.loc 1 967 4 is_stmt 0 view .LVU1179
 4308 0170 C3       		ret
 4309              	.LVL374:
 4310              		.p2align 4,,10
 4311 0171 0F1F8000 		.p2align 3
 4311      000000
 4312              	.L316:
 4313              		.cfi_def_cfa_offset 48
 4314              		.cfi_offset 3, -48
 4315              		.cfi_offset 6, -40
 4316              		.cfi_offset 12, -32
 4317              		.cfi_offset 13, -24
 4318              		.cfi_offset 14, -16
 4319              	.LBB200:
 4320              	.LBB198:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4321              		.loc 2 34 10 view .LVU1180
 4322 0178 498B16   		movq	(%r14), %rdx
 4323 017b 488D7808 		leaq	8(%rax), %rdi
 4324 017f 4C89F6   		movq	%r14, %rsi
 4325 0182 4883E7F8 		andq	$-8, %rdi
 4326 0186 488910   		movq	%rdx, (%rax)
 4327 0189 4489EA   		movl	%r13d, %edx
 4328 018c 498B4C16 		movq	-8(%r14,%rdx), %rcx
 4328      F8
 4329 0191 48894C10 		movq	%rcx, -8(%rax,%rdx)
 4329      F8
 4330 0196 4829F8   		subq	%rdi, %rax
 4331              	.LVL375:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4332              		.loc 2 34 10 view .LVU1181
 4333 0199 4829C6   		subq	%rax, %rsi
 4334 019c 4401E8   		addl	%r13d, %eax
 4335 019f C1E803   		shrl	$3, %eax
 4336 01a2 89C1     		movl	%eax, %ecx
 4337 01a4 F348A5   		rep movsq
 4338 01a7 EBA7     		jmp	.L317
 4339              	.LVL376:
 4340 01a9 0F1F8000 		.p2align 4,,10
 4340      000000
 4341              		.p2align 3
 4342              	.L354:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4343              		.loc 2 34 10 view .LVU1182
 4344              	.LBE198:
 4345              	.LBE200:
 4346              	.LBB201:
 955:fltk-1.3.4-1/png/pngset.c ****          png_warning(png_ptr,
 4347              		.loc 1 955 22 view .LVU1183
 4348 01b0 410FB754 		movzwl	6(%r12), %edx
 4348      2406
 954:fltk-1.3.4-1/png/pngset.c ****           trans_color->blue > sample_max)))
 4349              		.loc 1 954 43 view .LVU1184
 4350 01b6 39C2     		cmpl	%eax, %edx
 4351 01b8 0F8ECDFE 		jle	.L326
 4351      FFFF
 4352 01be E945FFFF 		jmp	.L325
 4352      FF
 4353              	.LVL377:
 4354              	.L355:
 954:fltk-1.3.4-1/png/pngset.c ****           trans_color->blue > sample_max)))
 4355              		.loc 1 954 43 view .LVU1185
 4356              	.LBE201:
 4357              	.LBB202:
 4358              	.LBB199:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4359              		.loc 2 34 10 view .LVU1186
 4360 01c3 418B16   		movl	(%r14), %edx
 4361 01c6 8910     		movl	%edx, (%rax)
 4362 01c8 4489EA   		movl	%r13d, %edx
 4363 01cb 418B4C16 		movl	-4(%r14,%rdx), %ecx
 4363      FC
 4364 01d0 894C10FC 		movl	%ecx, -4(%rax,%rdx)
 4365 01d4 E977FFFF 		jmp	.L317
 4365      FF
 4366              	.LBE199:
 4367              	.LBE202:
 4368              		.cfi_endproc
 4369              	.LFE64:
 4371              		.section	.rodata.png_set_sPLT.str1.1,"aMS",@progbits,1
 4372              	.LC39:
 4373 0000 746F6F20 		.string	"too many sPLT chunks"
 4373      6D616E79 
 4373      2073504C 
 4373      54206368 
 4373      756E6B73 
 4374              	.LC40:
 4375 0015 706E675F 		.string	"png_set_sPLT: invalid sPLT"
 4375      7365745F 
 4375      73504C54 
 4375      3A20696E 
 4375      76616C69 
 4376              	.LC41:
 4377 0030 73504C54 		.string	"sPLT out of memory"
 4377      206F7574 
 4377      206F6620 
 4377      6D656D6F 
 4377      727900
 4378              		.section	.text.png_set_sPLT,"ax",@progbits
 4379              		.p2align 4
 4380              		.globl	png_set_sPLT
 4382              	png_set_sPLT:
 4383              	.LVL378:
 4384              	.LFB65:
 987:fltk-1.3.4-1/png/pngset.c ****    png_sPLT_tp np;
 4385              		.loc 1 987 1 is_stmt 1 view -0
 4386              		.cfi_startproc
 987:fltk-1.3.4-1/png/pngset.c ****    png_sPLT_tp np;
 4387              		.loc 1 987 1 is_stmt 0 view .LVU1188
 4388 0000 F30F1EFA 		endbr64
 988:fltk-1.3.4-1/png/pngset.c **** 
 4389              		.loc 1 988 4 is_stmt 1 view .LVU1189
 990:fltk-1.3.4-1/png/pngset.c ****       return;
 4390              		.loc 1 990 4 view .LVU1190
 990:fltk-1.3.4-1/png/pngset.c ****       return;
 4391              		.loc 1 990 7 is_stmt 0 view .LVU1191
 4392 0004 4885FF   		testq	%rdi, %rdi
 4393 0007 0F846B01 		je	.L373
 4393      0000
 987:fltk-1.3.4-1/png/pngset.c ****    png_sPLT_tp np;
 4394              		.loc 1 987 1 view .LVU1192
 4395 000d 4157     		pushq	%r15
 4396              		.cfi_def_cfa_offset 16
 4397              		.cfi_offset 15, -16
 4398 000f 4156     		pushq	%r14
 4399              		.cfi_def_cfa_offset 24
 4400              		.cfi_offset 14, -24
 4401 0011 4155     		pushq	%r13
 4402              		.cfi_def_cfa_offset 32
 4403              		.cfi_offset 13, -32
 4404 0013 4154     		pushq	%r12
 4405              		.cfi_def_cfa_offset 40
 4406              		.cfi_offset 12, -40
 4407 0015 4989F4   		movq	%rsi, %r12
 4408 0018 55       		pushq	%rbp
 4409              		.cfi_def_cfa_offset 48
 4410              		.cfi_offset 6, -48
 4411 0019 53       		pushq	%rbx
 4412              		.cfi_def_cfa_offset 56
 4413              		.cfi_offset 3, -56
 4414 001a 4883EC08 		subq	$8, %rsp
 4415              		.cfi_def_cfa_offset 64
 990:fltk-1.3.4-1/png/pngset.c ****       return;
 4416              		.loc 1 990 7 view .LVU1193
 4417 001e 4885F6   		testq	%rsi, %rsi
 4418 0021 0F843C01 		je	.L356
 4418      0000
 4419 0027 4189CE   		movl	%ecx, %r14d
 990:fltk-1.3.4-1/png/pngset.c ****       return;
 4420              		.loc 1 990 61 discriminator 1 view .LVU1194
 4421 002a 85C9     		testl	%ecx, %ecx
 4422 002c 0F8E3101 		jle	.L356
 4422      0000
 4423 0032 4889D3   		movq	%rdx, %rbx
 4424 0035 4885D2   		testq	%rdx, %rdx
 4425 0038 0F842501 		je	.L356
 4425      0000
 996:fltk-1.3.4-1/png/pngset.c ****       info_ptr->splt_palettes, info_ptr->splt_palettes_num, nentries,
 4426              		.loc 1 996 9 view .LVU1195
 4427 003e 8B963801 		movl	312(%rsi), %edx
 4427      0000
 4428              	.LVL379:
 996:fltk-1.3.4-1/png/pngset.c ****       info_ptr->splt_palettes, info_ptr->splt_palettes_num, nentries,
 4429              		.loc 1 996 9 view .LVU1196
 4430 0044 488BB630 		movq	304(%rsi), %rsi
 4430      010000
 4431              	.LVL380:
 996:fltk-1.3.4-1/png/pngset.c ****       info_ptr->splt_palettes, info_ptr->splt_palettes_num, nentries,
 4432              		.loc 1 996 9 view .LVU1197
 4433 004b 41B82000 		movl	$32, %r8d
 4433      0000
 4434 0051 4989FD   		movq	%rdi, %r13
 996:fltk-1.3.4-1/png/pngset.c ****       info_ptr->splt_palettes, info_ptr->splt_palettes_num, nentries,
 4435              		.loc 1 996 4 is_stmt 1 view .LVU1198
 996:fltk-1.3.4-1/png/pngset.c ****       info_ptr->splt_palettes, info_ptr->splt_palettes_num, nentries,
 4436              		.loc 1 996 9 is_stmt 0 view .LVU1199
 4437 0054 E8000000 		call	png_realloc_array@PLT
 4437      00
 4438              	.LVL381:
 996:fltk-1.3.4-1/png/pngset.c ****       info_ptr->splt_palettes, info_ptr->splt_palettes_num, nentries,
 4439              		.loc 1 996 9 view .LVU1200
 4440 0059 4989C7   		movq	%rax, %r15
 4441              	.LVL382:
1000:fltk-1.3.4-1/png/pngset.c ****    {
 4442              		.loc 1 1000 4 is_stmt 1 view .LVU1201
1000:fltk-1.3.4-1/png/pngset.c ****    {
 4443              		.loc 1 1000 7 is_stmt 0 view .LVU1202
 4444 005c 4885C0   		testq	%rax, %rax
 4445 005f 0F844A01 		je	.L377
 4445      0000
1007:fltk-1.3.4-1/png/pngset.c ****    info_ptr->splt_palettes = np;
 4446              		.loc 1 1007 4 is_stmt 1 view .LVU1203
 4447 0065 498BB424 		movq	304(%r12), %rsi
 4447      30010000 
 4448 006d 4C89EF   		movq	%r13, %rdi
 4449 0070 4183EE01 		subl	$1, %r14d
 4450              	.LVL383:
1007:fltk-1.3.4-1/png/pngset.c ****    info_ptr->splt_palettes = np;
 4451              		.loc 1 1007 4 is_stmt 0 view .LVU1204
 4452 0074 4983C601 		addq	$1, %r14
 4453 0078 E8000000 		call	png_free@PLT
 4453      00
 4454              	.LVL384:
1008:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_SPLT;
 4455              		.loc 1 1008 4 is_stmt 1 view .LVU1205
1011:fltk-1.3.4-1/png/pngset.c **** 
 4456              		.loc 1 1011 18 is_stmt 0 view .LVU1206
 4457 007d 4963AC24 		movslq	312(%r12), %rbp
 4457      38010000 
 4458 0085 49C1E605 		salq	$5, %r14
1009:fltk-1.3.4-1/png/pngset.c **** 
 4459              		.loc 1 1009 22 view .LVU1207
 4460 0089 41838C24 		orl	$32, 284(%r12)
 4460      1C010000 
 4460      20
1008:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_SPLT;
 4461              		.loc 1 1008 28 view .LVU1208
 4462 0092 4D89BC24 		movq	%r15, 304(%r12)
 4462      30010000 
1009:fltk-1.3.4-1/png/pngset.c **** 
 4463              		.loc 1 1009 4 is_stmt 1 view .LVU1209
1011:fltk-1.3.4-1/png/pngset.c **** 
 4464              		.loc 1 1011 4 view .LVU1210
 4465 009a 4901DE   		addq	%rbx, %r14
1011:fltk-1.3.4-1/png/pngset.c **** 
 4466              		.loc 1 1011 7 is_stmt 0 view .LVU1211
 4467 009d 48C1E505 		salq	$5, %rbp
 4468 00a1 4C01FD   		addq	%r15, %rbp
 4469              	.LVL385:
1011:fltk-1.3.4-1/png/pngset.c **** 
 4470              		.loc 1 1011 7 view .LVU1212
 4471 00a4 E98F0000 		jmp	.L364
 4471      00
 4472              	.LVL386:
 4473 00a9 0F1F8000 		.p2align 4,,10
 4473      000000
 4474              		.p2align 3
 4475              	.L360:
 4476              	.LBB203:
1026:fltk-1.3.4-1/png/pngset.c **** 
 4477              		.loc 1 1026 7 is_stmt 1 view .LVU1213
1026:fltk-1.3.4-1/png/pngset.c **** 
 4478              		.loc 1 1026 17 is_stmt 0 view .LVU1214
 4479 00b0 0FB64308 		movzbl	8(%rbx), %eax
 4480 00b4 884508   		movb	%al, 8(%rbp)
1031:fltk-1.3.4-1/png/pngset.c ****       np->name = png_voidcast(png_charp, png_malloc_base(png_ptr, length));
 4481              		.loc 1 1031 7 is_stmt 1 view .LVU1215
1031:fltk-1.3.4-1/png/pngset.c ****       np->name = png_voidcast(png_charp, png_malloc_base(png_ptr, length));
 4482              		.loc 1 1031 16 is_stmt 0 view .LVU1216
 4483 00b7 E8000000 		call	strlen@PLT
 4483      00
 4484              	.LVL387:
1032:fltk-1.3.4-1/png/pngset.c **** 
 4485              		.loc 1 1032 18 view .LVU1217
 4486 00bc 4C89EF   		movq	%r13, %rdi
1031:fltk-1.3.4-1/png/pngset.c ****       np->name = png_voidcast(png_charp, png_malloc_base(png_ptr, length));
 4487              		.loc 1 1031 14 view .LVU1218
 4488 00bf 4C8D7801 		leaq	1(%rax), %r15
 4489              	.LVL388:
1032:fltk-1.3.4-1/png/pngset.c **** 
 4490              		.loc 1 1032 7 is_stmt 1 view .LVU1219
1032:fltk-1.3.4-1/png/pngset.c **** 
 4491              		.loc 1 1032 18 is_stmt 0 view .LVU1220
 4492 00c3 4C89FE   		movq	%r15, %rsi
 4493 00c6 E8000000 		call	png_malloc_base@PLT
 4493      00
 4494              	.LVL389:
1032:fltk-1.3.4-1/png/pngset.c **** 
 4495              		.loc 1 1032 16 view .LVU1221
 4496 00cb 48894500 		movq	%rax, 0(%rbp)
1034:fltk-1.3.4-1/png/pngset.c ****          break;
 4497              		.loc 1 1034 7 is_stmt 1 view .LVU1222
1032:fltk-1.3.4-1/png/pngset.c **** 
 4498              		.loc 1 1032 18 is_stmt 0 view .LVU1223
 4499 00cf 4889C7   		movq	%rax, %rdi
1034:fltk-1.3.4-1/png/pngset.c ****          break;
 4500              		.loc 1 1034 10 view .LVU1224
 4501 00d2 4885C0   		testq	%rax, %rax
 4502 00d5 0F84B200 		je	.L362
 4502      0000
1037:fltk-1.3.4-1/png/pngset.c **** 
 4503              		.loc 1 1037 7 is_stmt 1 view .LVU1225
 4504              	.LVL390:
 4505              	.LBB204:
 4506              	.LBI204:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4507              		.loc 2 31 1 view .LVU1226
 4508              	.LBB205:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4509              		.loc 2 34 3 view .LVU1227
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4510              		.loc 2 34 10 is_stmt 0 view .LVU1228
 4511 00db 488B33   		movq	(%rbx), %rsi
 4512 00de 4C89FA   		movq	%r15, %rdx
 4513 00e1 E8000000 		call	memcpy@PLT
 4513      00
 4514              	.LVL391:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4515              		.loc 2 34 10 view .LVU1229
 4516              	.LBE205:
 4517              	.LBE204:
1043:fltk-1.3.4-1/png/pngset.c ****           entries->nentries, sizeof (png_sPLT_entry)));
 4518              		.loc 1 1043 7 is_stmt 1 view .LVU1230
1043:fltk-1.3.4-1/png/pngset.c ****           entries->nentries, sizeof (png_sPLT_entry)));
 4519              		.loc 1 1043 21 is_stmt 0 view .LVU1231
 4520 00e6 8B7318   		movl	24(%rbx), %esi
 4521 00e9 4C89EF   		movq	%r13, %rdi
 4522 00ec BA0A0000 		movl	$10, %edx
 4522      00
 4523 00f1 E8000000 		call	png_malloc_array@PLT
 4523      00
 4524              	.LVL392:
1043:fltk-1.3.4-1/png/pngset.c ****           entries->nentries, sizeof (png_sPLT_entry)));
 4525              		.loc 1 1043 19 view .LVU1232
 4526 00f6 48894510 		movq	%rax, 16(%rbp)
1046:fltk-1.3.4-1/png/pngset.c ****       {
 4527              		.loc 1 1046 7 is_stmt 1 view .LVU1233
1043:fltk-1.3.4-1/png/pngset.c ****           entries->nentries, sizeof (png_sPLT_entry)));
 4528              		.loc 1 1043 21 is_stmt 0 view .LVU1234
 4529 00fa 4889C7   		movq	%rax, %rdi
1046:fltk-1.3.4-1/png/pngset.c ****       {
 4530              		.loc 1 1046 10 view .LVU1235
 4531 00fd 4885C0   		testq	%rax, %rax
 4532 0100 7477     		je	.L378
1053:fltk-1.3.4-1/png/pngset.c ****       /* This multiply can't overflow because png_malloc_array has already
 4533              		.loc 1 1053 7 is_stmt 1 view .LVU1236
1053:fltk-1.3.4-1/png/pngset.c ****       /* This multiply can't overflow because png_malloc_array has already
 4534              		.loc 1 1053 29 is_stmt 0 view .LVU1237
 4535 0102 48634318 		movslq	24(%rbx), %rax
 4536              	.LBB206:
 4537              	.LBB207:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4538              		.loc 2 34 10 view .LVU1238
 4539 0106 488B7310 		movq	16(%rbx), %rsi
 4540              	.LBE207:
 4541              	.LBE206:
 4542              	.LBE203:
1067:fltk-1.3.4-1/png/pngset.c **** 
 4543              		.loc 1 1067 11 view .LVU1239
 4544 010a 4883C320 		addq	$32, %rbx
 4545              	.LVL393:
 4546              	.LBB212:
1065:fltk-1.3.4-1/png/pngset.c ****    }
 4547              		.loc 1 1065 7 view .LVU1240
 4548 010e 4883C520 		addq	$32, %rbp
 4549              	.LVL394:
1053:fltk-1.3.4-1/png/pngset.c ****       /* This multiply can't overflow because png_malloc_array has already
 4550              		.loc 1 1053 20 view .LVU1241
 4551 0112 8945F8   		movl	%eax, -8(%rbp)
1057:fltk-1.3.4-1/png/pngset.c ****          entries->nentries * sizeof (png_sPLT_entry));
 4552              		.loc 1 1057 7 is_stmt 1 view .LVU1242
 4553              	.LVL395:
 4554              	.LBB210:
 4555              	.LBI206:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4556              		.loc 2 31 1 view .LVU1243
 4557              	.LBB208:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4558              		.loc 2 34 3 view .LVU1244
 4559              	.LBE208:
 4560              	.LBE210:
1057:fltk-1.3.4-1/png/pngset.c ****          entries->nentries * sizeof (png_sPLT_entry));
 4561              		.loc 1 1057 7 is_stmt 0 view .LVU1245
 4562 0115 488D1480 		leaq	(%rax,%rax,4), %rdx
 4563 0119 4801D2   		addq	%rdx, %rdx
 4564              	.LBB211:
 4565              	.LBB209:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4566              		.loc 2 34 10 view .LVU1246
 4567 011c E8000000 		call	memcpy@PLT
 4567      00
 4568              	.LVL396:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4569              		.loc 2 34 10 view .LVU1247
 4570              	.LBE209:
 4571              	.LBE211:
1063:fltk-1.3.4-1/png/pngset.c ****       ++(info_ptr->splt_palettes_num);
 4572              		.loc 1 1063 7 is_stmt 1 view .LVU1248
1063:fltk-1.3.4-1/png/pngset.c ****       ++(info_ptr->splt_palettes_num);
 4573              		.loc 1 1063 23 is_stmt 0 view .LVU1249
 4574 0121 41814C24 		orl	$8192, 8(%r12)
 4574      08002000 
 4574      00
1064:fltk-1.3.4-1/png/pngset.c ****       ++np;
 4575              		.loc 1 1064 7 is_stmt 1 view .LVU1250
 4576 012a 41838424 		addl	$1, 312(%r12)
 4576      38010000 
 4576      01
1065:fltk-1.3.4-1/png/pngset.c ****    }
 4577              		.loc 1 1065 7 view .LVU1251
 4578              	.LVL397:
1065:fltk-1.3.4-1/png/pngset.c ****    }
 4579              		.loc 1 1065 7 is_stmt 0 view .LVU1252
 4580              	.LBE212:
1067:fltk-1.3.4-1/png/pngset.c **** 
 4581              		.loc 1 1067 10 is_stmt 1 view .LVU1253
1067:fltk-1.3.4-1/png/pngset.c **** 
 4582              		.loc 1 1067 4 is_stmt 0 view .LVU1254
 4583 0133 4939DE   		cmpq	%rbx, %r14
 4584 0136 742B     		je	.L356
 4585              	.LVL398:
 4586              	.L364:
1013:fltk-1.3.4-1/png/pngset.c ****    {
 4587              		.loc 1 1013 4 is_stmt 1 view .LVU1255
 4588              	.LBB213:
1015:fltk-1.3.4-1/png/pngset.c **** 
 4589              		.loc 1 1015 7 view .LVU1256
1018:fltk-1.3.4-1/png/pngset.c ****       {
 4590              		.loc 1 1018 7 view .LVU1257
1018:fltk-1.3.4-1/png/pngset.c ****       {
 4591              		.loc 1 1018 18 is_stmt 0 view .LVU1258
 4592 0138 488B3B   		movq	(%rbx), %rdi
1018:fltk-1.3.4-1/png/pngset.c ****       {
 4593              		.loc 1 1018 10 view .LVU1259
 4594 013b 4885FF   		testq	%rdi, %rdi
 4595 013e 740B     		je	.L359
1018:fltk-1.3.4-1/png/pngset.c ****       {
 4596              		.loc 1 1018 33 discriminator 1 view .LVU1260
 4597 0140 48837B10 		cmpq	$0, 16(%rbx)
 4597      00
 4598 0145 0F8565FF 		jne	.L360
 4598      FFFF
 4599              	.L359:
1021:fltk-1.3.4-1/png/pngset.c ****          /* Just skip the invalid entry */
 4600              		.loc 1 1021 10 is_stmt 1 view .LVU1261
 4601 014b 488D3500 		leaq	.LC40(%rip), %rsi
 4601      000000
 4602 0152 4C89EF   		movq	%r13, %rdi
 4603              	.LBE213:
1067:fltk-1.3.4-1/png/pngset.c **** 
 4604              		.loc 1 1067 11 is_stmt 0 view .LVU1262
 4605 0155 4883C320 		addq	$32, %rbx
 4606              	.LVL399:
 4607              	.LBB214:
1021:fltk-1.3.4-1/png/pngset.c ****          /* Just skip the invalid entry */
 4608              		.loc 1 1021 10 view .LVU1263
 4609 0159 E8000000 		call	png_app_error@PLT
 4609      00
 4610              	.LVL400:
1023:fltk-1.3.4-1/png/pngset.c ****       }
 4611              		.loc 1 1023 10 is_stmt 1 view .LVU1264
1023:fltk-1.3.4-1/png/pngset.c ****       }
 4612              		.loc 1 1023 10 is_stmt 0 view .LVU1265
 4613              	.LBE214:
1067:fltk-1.3.4-1/png/pngset.c **** 
 4614              		.loc 1 1067 10 is_stmt 1 view .LVU1266
1067:fltk-1.3.4-1/png/pngset.c **** 
 4615              		.loc 1 1067 4 is_stmt 0 view .LVU1267
 4616 015e 4939DE   		cmpq	%rbx, %r14
 4617 0161 75D5     		jne	.L364
 4618              	.LVL401:
 4619              	.L356:
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4620              		.loc 1 1071 1 view .LVU1268
 4621 0163 4883C408 		addq	$8, %rsp
 4622              		.cfi_def_cfa_offset 56
 4623 0167 5B       		popq	%rbx
 4624              		.cfi_def_cfa_offset 48
 4625 0168 5D       		popq	%rbp
 4626              		.cfi_def_cfa_offset 40
 4627 0169 415C     		popq	%r12
 4628              		.cfi_def_cfa_offset 32
 4629              	.LVL402:
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4630              		.loc 1 1071 1 view .LVU1269
 4631 016b 415D     		popq	%r13
 4632              		.cfi_def_cfa_offset 24
 4633 016d 415E     		popq	%r14
 4634              		.cfi_def_cfa_offset 16
 4635 016f 415F     		popq	%r15
 4636              		.cfi_def_cfa_offset 8
 4637 0171 C3       		ret
 4638              	.LVL403:
 4639              		.p2align 4,,10
 4640 0172 660F1F44 		.p2align 3
 4640      0000
 4641              	.L373:
 4642              		.cfi_restore 3
 4643              		.cfi_restore 6
 4644              		.cfi_restore 12
 4645              		.cfi_restore 13
 4646              		.cfi_restore 14
 4647              		.cfi_restore 15
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4648              		.loc 1 1071 1 view .LVU1270
 4649 0178 C3       		ret
 4650              	.LVL404:
 4651              	.L378:
 4652              		.cfi_def_cfa_offset 64
 4653              		.cfi_offset 3, -56
 4654              		.cfi_offset 6, -48
 4655              		.cfi_offset 12, -40
 4656              		.cfi_offset 13, -32
 4657              		.cfi_offset 14, -24
 4658              		.cfi_offset 15, -16
 4659              	.LBB215:
1048:fltk-1.3.4-1/png/pngset.c ****          np->name = NULL;
 4660              		.loc 1 1048 10 is_stmt 1 view .LVU1271
 4661 0179 488B7500 		movq	0(%rbp), %rsi
 4662 017d 4C89EF   		movq	%r13, %rdi
 4663 0180 E8000000 		call	png_free@PLT
 4663      00
 4664              	.LVL405:
1049:fltk-1.3.4-1/png/pngset.c ****          break;
 4665              		.loc 1 1049 10 view .LVU1272
1049:fltk-1.3.4-1/png/pngset.c ****          break;
 4666              		.loc 1 1049 19 is_stmt 0 view .LVU1273
 4667 0185 48C74500 		movq	$0, 0(%rbp)
 4667      00000000 
1050:fltk-1.3.4-1/png/pngset.c ****       }
 4668              		.loc 1 1050 10 is_stmt 1 view .LVU1274
 4669              	.L362:
1050:fltk-1.3.4-1/png/pngset.c ****       }
 4670              		.loc 1 1050 10 is_stmt 0 view .LVU1275
 4671              	.LBE215:
1069:fltk-1.3.4-1/png/pngset.c ****       png_chunk_report(png_ptr, "sPLT out of memory", PNG_CHUNK_WRITE_ERROR);
 4672              		.loc 1 1069 4 is_stmt 1 view .LVU1276
1070:fltk-1.3.4-1/png/pngset.c **** }
 4673              		.loc 1 1070 7 view .LVU1277
 4674 018d BA010000 		movl	$1, %edx
 4674      00
 4675 0192 488D3500 		leaq	.LC41(%rip), %rsi
 4675      000000
 4676              	.LVL406:
 4677              	.L376:
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4678              		.loc 1 1071 1 is_stmt 0 view .LVU1278
 4679 0199 4883C408 		addq	$8, %rsp
 4680              		.cfi_remember_state
 4681              		.cfi_def_cfa_offset 56
1070:fltk-1.3.4-1/png/pngset.c **** }
 4682              		.loc 1 1070 7 view .LVU1279
 4683 019d 4C89EF   		movq	%r13, %rdi
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4684              		.loc 1 1071 1 view .LVU1280
 4685 01a0 5B       		popq	%rbx
 4686              		.cfi_restore 3
 4687              		.cfi_def_cfa_offset 48
 4688              	.LVL407:
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4689              		.loc 1 1071 1 view .LVU1281
 4690 01a1 5D       		popq	%rbp
 4691              		.cfi_restore 6
 4692              		.cfi_def_cfa_offset 40
 4693 01a2 415C     		popq	%r12
 4694              		.cfi_restore 12
 4695              		.cfi_def_cfa_offset 32
 4696              	.LVL408:
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4697              		.loc 1 1071 1 view .LVU1282
 4698 01a4 415D     		popq	%r13
 4699              		.cfi_restore 13
 4700              		.cfi_def_cfa_offset 24
 4701              	.LVL409:
1071:fltk-1.3.4-1/png/pngset.c **** #endif /* sPLT */
 4702              		.loc 1 1071 1 view .LVU1283
 4703 01a6 415E     		popq	%r14
 4704              		.cfi_restore 14
 4705              		.cfi_def_cfa_offset 16
 4706 01a8 415F     		popq	%r15
 4707              		.cfi_restore 15
 4708              		.cfi_def_cfa_offset 8
1070:fltk-1.3.4-1/png/pngset.c **** }
 4709              		.loc 1 1070 7 view .LVU1284
 4710 01aa E9000000 		jmp	png_chunk_report@PLT
 4710      00
 4711              	.LVL410:
 4712              	.L377:
 4713              		.cfi_restore_state
1003:fltk-1.3.4-1/png/pngset.c ****       return;
 4714              		.loc 1 1003 7 is_stmt 1 view .LVU1285
 4715 01af BA010000 		movl	$1, %edx
 4715      00
 4716 01b4 488D3500 		leaq	.LC39(%rip), %rsi
 4716      000000
 4717 01bb EBDC     		jmp	.L376
 4718              		.cfi_endproc
 4719              	.LFE65:
 4721              		.section	.rodata.png_set_unknown_chunks.str1.1,"aMS",@progbits,1
 4722              	.LC42:
 4723 0000 746F6F20 		.string	"too many unknown chunks"
 4723      6D616E79 
 4723      20756E6B 
 4723      6E6F776E 
 4723      20636875 
 4724              	.LC43:
 4725 0018 756E6B6E 		.string	"unknown chunk: out of memory"
 4725      6F776E20 
 4725      6368756E 
 4725      6B3A206F 
 4725      7574206F 
 4726              		.section	.text.png_set_unknown_chunks,"ax",@progbits
 4727              		.p2align 4
 4728              		.globl	png_set_unknown_chunks
 4730              	png_set_unknown_chunks:
 4731              	.LVL411:
 4732              	.LFB67:
1111:fltk-1.3.4-1/png/pngset.c **** 
1112:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1113:fltk-1.3.4-1/png/pngset.c **** png_set_unknown_chunks(png_const_structrp png_ptr,
1114:fltk-1.3.4-1/png/pngset.c ****    png_inforp info_ptr, png_const_unknown_chunkp unknowns, int num_unknowns)
1115:fltk-1.3.4-1/png/pngset.c **** {
 4733              		.loc 1 1115 1 view -0
 4734              		.cfi_startproc
 4735              		.loc 1 1115 1 is_stmt 0 view .LVU1287
 4736 0000 F30F1EFA 		endbr64
1116:fltk-1.3.4-1/png/pngset.c ****    png_unknown_chunkp np;
 4737              		.loc 1 1116 4 is_stmt 1 view .LVU1288
1117:fltk-1.3.4-1/png/pngset.c **** 
1118:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL || num_unknowns <= 0 ||
 4738              		.loc 1 1118 4 view .LVU1289
 4739              		.loc 1 1118 7 is_stmt 0 view .LVU1290
 4740 0004 4885FF   		testq	%rdi, %rdi
 4741 0007 0F843301 		je	.L389
 4741      0000
1115:fltk-1.3.4-1/png/pngset.c ****    png_unknown_chunkp np;
 4742              		.loc 1 1115 1 view .LVU1291
 4743 000d 4157     		pushq	%r15
 4744              		.cfi_def_cfa_offset 16
 4745              		.cfi_offset 15, -16
 4746 000f 4156     		pushq	%r14
 4747              		.cfi_def_cfa_offset 24
 4748              		.cfi_offset 14, -24
 4749 0011 4155     		pushq	%r13
 4750              		.cfi_def_cfa_offset 32
 4751              		.cfi_offset 13, -32
 4752 0013 4154     		pushq	%r12
 4753              		.cfi_def_cfa_offset 40
 4754              		.cfi_offset 12, -40
 4755 0015 4989F4   		movq	%rsi, %r12
 4756 0018 55       		pushq	%rbp
 4757              		.cfi_def_cfa_offset 48
 4758              		.cfi_offset 6, -48
 4759 0019 53       		pushq	%rbx
 4760              		.cfi_def_cfa_offset 56
 4761              		.cfi_offset 3, -56
 4762 001a 4883EC08 		subq	$8, %rsp
 4763              		.cfi_def_cfa_offset 64
 4764              		.loc 1 1118 7 view .LVU1292
 4765 001e 4885F6   		testq	%rsi, %rsi
 4766 0021 0F840101 		je	.L379
 4766      0000
 4767 0027 4189CE   		movl	%ecx, %r14d
 4768              		.loc 1 1118 65 discriminator 1 view .LVU1293
 4769 002a 85C9     		testl	%ecx, %ecx
 4770 002c 0F8EF600 		jle	.L379
 4770      0000
 4771 0032 4889D3   		movq	%rdx, %rbx
 4772 0035 4885D2   		testq	%rdx, %rdx
 4773 0038 0F84EA00 		je	.L379
 4773      0000
1119:fltk-1.3.4-1/png/pngset.c ****       unknowns == NULL)
1120:fltk-1.3.4-1/png/pngset.c ****       return;
1121:fltk-1.3.4-1/png/pngset.c **** 
1122:fltk-1.3.4-1/png/pngset.c ****    /* Check for the failure cases where support has been disabled at compile
1123:fltk-1.3.4-1/png/pngset.c ****     * time.  This code is hardly ever compiled - it's here because
1124:fltk-1.3.4-1/png/pngset.c ****     * STORE_UNKNOWN_CHUNKS is set by both read and write code (compiling in this
1125:fltk-1.3.4-1/png/pngset.c ****     * code) but may be meaningless if the read or write handling of unknown
1126:fltk-1.3.4-1/png/pngset.c ****     * chunks is not compiled in.
1127:fltk-1.3.4-1/png/pngset.c ****     */
1128:fltk-1.3.4-1/png/pngset.c **** #  if !defined(PNG_READ_UNKNOWN_CHUNKS_SUPPORTED) && \
1129:fltk-1.3.4-1/png/pngset.c ****       defined(PNG_READ_SUPPORTED)
1130:fltk-1.3.4-1/png/pngset.c ****       if ((png_ptr->mode & PNG_IS_READ_STRUCT) != 0)
1131:fltk-1.3.4-1/png/pngset.c ****       {
1132:fltk-1.3.4-1/png/pngset.c ****          png_app_error(png_ptr, "no unknown chunk support on read");
1133:fltk-1.3.4-1/png/pngset.c ****          return;
1134:fltk-1.3.4-1/png/pngset.c ****       }
1135:fltk-1.3.4-1/png/pngset.c **** #  endif
1136:fltk-1.3.4-1/png/pngset.c **** #  if !defined(PNG_WRITE_UNKNOWN_CHUNKS_SUPPORTED) && \
1137:fltk-1.3.4-1/png/pngset.c ****       defined(PNG_WRITE_SUPPORTED)
1138:fltk-1.3.4-1/png/pngset.c ****       if ((png_ptr->mode & PNG_IS_READ_STRUCT) == 0)
1139:fltk-1.3.4-1/png/pngset.c ****       {
1140:fltk-1.3.4-1/png/pngset.c ****          png_app_error(png_ptr, "no unknown chunk support on write");
1141:fltk-1.3.4-1/png/pngset.c ****          return;
1142:fltk-1.3.4-1/png/pngset.c ****       }
1143:fltk-1.3.4-1/png/pngset.c **** #  endif
1144:fltk-1.3.4-1/png/pngset.c **** 
1145:fltk-1.3.4-1/png/pngset.c ****    /* Prior to 1.6.0 this code used png_malloc_warn; however, this meant that
1146:fltk-1.3.4-1/png/pngset.c ****     * unknown critical chunks could be lost with just a warning resulting in
1147:fltk-1.3.4-1/png/pngset.c ****     * undefined behavior.  Now png_chunk_report is used to provide behavior
1148:fltk-1.3.4-1/png/pngset.c ****     * appropriate to read or write.
1149:fltk-1.3.4-1/png/pngset.c ****     */
1150:fltk-1.3.4-1/png/pngset.c ****    np = png_voidcast(png_unknown_chunkp, png_realloc_array(png_ptr,
 4774              		.loc 1 1150 9 view .LVU1294
 4775 003e 8B962801 		movl	296(%rsi), %edx
 4775      0000
 4776              	.LVL412:
 4777              		.loc 1 1150 9 view .LVU1295
 4778 0044 488BB620 		movq	288(%rsi), %rsi
 4778      010000
 4779              	.LVL413:
 4780              		.loc 1 1150 9 view .LVU1296
 4781 004b 41B82000 		movl	$32, %r8d
 4781      0000
 4782 0051 4989FD   		movq	%rdi, %r13
 4783              		.loc 1 1150 4 is_stmt 1 view .LVU1297
 4784              		.loc 1 1150 9 is_stmt 0 view .LVU1298
 4785 0054 E8000000 		call	png_realloc_array@PLT
 4785      00
 4786              	.LVL414:
 4787              		.loc 1 1150 9 view .LVU1299
 4788 0059 4989C7   		movq	%rax, %r15
 4789              	.LVL415:
1151:fltk-1.3.4-1/png/pngset.c ****          info_ptr->unknown_chunks, info_ptr->unknown_chunks_num, num_unknowns,
1152:fltk-1.3.4-1/png/pngset.c ****          sizeof *np));
1153:fltk-1.3.4-1/png/pngset.c **** 
1154:fltk-1.3.4-1/png/pngset.c ****    if (np == NULL)
 4790              		.loc 1 1154 4 is_stmt 1 view .LVU1300
 4791              		.loc 1 1154 7 is_stmt 0 view .LVU1301
 4792 005c 4885C0   		testq	%rax, %rax
 4793 005f 0F84F500 		je	.L392
 4793      0000
1155:fltk-1.3.4-1/png/pngset.c ****    {
1156:fltk-1.3.4-1/png/pngset.c ****       png_chunk_report(png_ptr, "too many unknown chunks",
1157:fltk-1.3.4-1/png/pngset.c ****          PNG_CHUNK_WRITE_ERROR);
1158:fltk-1.3.4-1/png/pngset.c ****       return;
1159:fltk-1.3.4-1/png/pngset.c ****    }
1160:fltk-1.3.4-1/png/pngset.c **** 
1161:fltk-1.3.4-1/png/pngset.c ****    png_free(png_ptr, info_ptr->unknown_chunks);
 4794              		.loc 1 1161 4 is_stmt 1 view .LVU1302
 4795 0065 498BB424 		movq	288(%r12), %rsi
 4795      20010000 
 4796 006d 4C89EF   		movq	%r13, %rdi
 4797 0070 4183EE01 		subl	$1, %r14d
 4798              	.LVL416:
 4799              		.loc 1 1161 4 is_stmt 0 view .LVU1303
 4800 0074 4983C601 		addq	$1, %r14
 4801 0078 E8000000 		call	png_free@PLT
 4801      00
 4802              	.LVL417:
1162:fltk-1.3.4-1/png/pngset.c ****    info_ptr->unknown_chunks = np; /* safe because it is initialized */
 4803              		.loc 1 1162 4 is_stmt 1 view .LVU1304
1163:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_UNKN;
1164:fltk-1.3.4-1/png/pngset.c **** 
1165:fltk-1.3.4-1/png/pngset.c ****    np += info_ptr->unknown_chunks_num;
 4804              		.loc 1 1165 18 is_stmt 0 view .LVU1305
 4805 007d 4963AC24 		movslq	296(%r12), %rbp
 4805      28010000 
 4806 0085 49C1E605 		salq	$5, %r14
1163:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_UNKN;
 4807              		.loc 1 1163 22 view .LVU1306
 4808 0089 41818C24 		orl	$512, 284(%r12)
 4808      1C010000 
 4808      00020000 
1162:fltk-1.3.4-1/png/pngset.c ****    info_ptr->unknown_chunks = np; /* safe because it is initialized */
 4809              		.loc 1 1162 29 view .LVU1307
 4810 0095 4D89BC24 		movq	%r15, 288(%r12)
 4810      20010000 
1163:fltk-1.3.4-1/png/pngset.c ****    info_ptr->free_me |= PNG_FREE_UNKN;
 4811              		.loc 1 1163 4 is_stmt 1 view .LVU1308
 4812              		.loc 1 1165 4 view .LVU1309
 4813 009d 4901DE   		addq	%rbx, %r14
 4814              		.loc 1 1165 7 is_stmt 0 view .LVU1310
 4815 00a0 48C1E505 		salq	$5, %rbp
 4816 00a4 4C01FD   		addq	%r15, %rbp
 4817              	.LVL418:
1166:fltk-1.3.4-1/png/pngset.c **** 
1167:fltk-1.3.4-1/png/pngset.c ****    /* Increment unknown_chunks_num each time round the loop to protect the
1168:fltk-1.3.4-1/png/pngset.c ****     * just-allocated chunk data.
1169:fltk-1.3.4-1/png/pngset.c ****     */
1170:fltk-1.3.4-1/png/pngset.c ****    for (; num_unknowns > 0; --num_unknowns, ++unknowns)
 4818              		.loc 1 1170 4 is_stmt 1 view .LVU1311
 4819              		.loc 1 1170 11 view .LVU1312
 4820 00a7 EB2D     		jmp	.L386
 4821 00a9 0F1F8000 		.p2align 4,,10
 4821      000000
 4822              		.p2align 3
 4823              	.L393:
1171:fltk-1.3.4-1/png/pngset.c ****    {
1172:fltk-1.3.4-1/png/pngset.c ****       memcpy(np->name, unknowns->name, (sizeof np->name));
1173:fltk-1.3.4-1/png/pngset.c ****       np->name[(sizeof np->name)-1] = '\0';
1174:fltk-1.3.4-1/png/pngset.c ****       np->location = check_location(png_ptr, unknowns->location);
1175:fltk-1.3.4-1/png/pngset.c **** 
1176:fltk-1.3.4-1/png/pngset.c ****       if (unknowns->size == 0)
1177:fltk-1.3.4-1/png/pngset.c ****       {
1178:fltk-1.3.4-1/png/pngset.c ****          np->data = NULL;
 4824              		.loc 1 1178 10 view .LVU1313
 4825              		.loc 1 1178 19 is_stmt 0 view .LVU1314
 4826 00b0 48C74508 		movq	$0, 8(%rbp)
 4826      00000000 
1179:fltk-1.3.4-1/png/pngset.c ****          np->size = 0;
 4827              		.loc 1 1179 10 is_stmt 1 view .LVU1315
 4828              		.loc 1 1179 19 is_stmt 0 view .LVU1316
 4829 00b8 48C74510 		movq	$0, 16(%rbp)
 4829      00000000 
 4830              	.L383:
1180:fltk-1.3.4-1/png/pngset.c ****       }
1181:fltk-1.3.4-1/png/pngset.c **** 
1182:fltk-1.3.4-1/png/pngset.c ****       else
1183:fltk-1.3.4-1/png/pngset.c ****       {
1184:fltk-1.3.4-1/png/pngset.c ****          np->data = png_voidcast(png_bytep,
1185:fltk-1.3.4-1/png/pngset.c ****             png_malloc_base(png_ptr, unknowns->size));
1186:fltk-1.3.4-1/png/pngset.c **** 
1187:fltk-1.3.4-1/png/pngset.c ****          if (np->data == NULL)
1188:fltk-1.3.4-1/png/pngset.c ****          {
1189:fltk-1.3.4-1/png/pngset.c ****             png_chunk_report(png_ptr, "unknown chunk: out of memory",
1190:fltk-1.3.4-1/png/pngset.c ****                PNG_CHUNK_WRITE_ERROR);
1191:fltk-1.3.4-1/png/pngset.c ****             /* But just skip storing the unknown chunk */
1192:fltk-1.3.4-1/png/pngset.c ****             continue;
1193:fltk-1.3.4-1/png/pngset.c ****          }
1194:fltk-1.3.4-1/png/pngset.c **** 
1195:fltk-1.3.4-1/png/pngset.c ****          memcpy(np->data, unknowns->data, unknowns->size);
1196:fltk-1.3.4-1/png/pngset.c ****          np->size = unknowns->size;
1197:fltk-1.3.4-1/png/pngset.c ****       }
1198:fltk-1.3.4-1/png/pngset.c **** 
1199:fltk-1.3.4-1/png/pngset.c ****       /* These increments are skipped on out-of-memory for the data - the
1200:fltk-1.3.4-1/png/pngset.c ****        * unknown chunk entry gets overwritten if the png_chunk_report returns.
1201:fltk-1.3.4-1/png/pngset.c ****        * This is correct in the read case (the chunk is just dropped.)
1202:fltk-1.3.4-1/png/pngset.c ****        */
1203:fltk-1.3.4-1/png/pngset.c ****       ++np;
 4831              		.loc 1 1203 7 is_stmt 1 view .LVU1317
1204:fltk-1.3.4-1/png/pngset.c ****       ++(info_ptr->unknown_chunks_num);
 4832              		.loc 1 1204 7 is_stmt 0 view .LVU1318
 4833 00c0 41838424 		addl	$1, 296(%r12)
 4833      28010000 
 4833      01
1203:fltk-1.3.4-1/png/pngset.c ****       ++(info_ptr->unknown_chunks_num);
 4834              		.loc 1 1203 7 view .LVU1319
 4835 00c9 4883C520 		addq	$32, %rbp
 4836              	.LVL419:
 4837              		.loc 1 1204 7 is_stmt 1 view .LVU1320
 4838              	.L385:
1170:fltk-1.3.4-1/png/pngset.c ****    {
 4839              		.loc 1 1170 29 view .LVU1321
1170:fltk-1.3.4-1/png/pngset.c ****    {
 4840              		.loc 1 1170 45 is_stmt 0 view .LVU1322
 4841 00cd 4883C320 		addq	$32, %rbx
 4842              	.LVL420:
1170:fltk-1.3.4-1/png/pngset.c ****    {
 4843              		.loc 1 1170 11 is_stmt 1 view .LVU1323
1170:fltk-1.3.4-1/png/pngset.c ****    {
 4844              		.loc 1 1170 4 is_stmt 0 view .LVU1324
 4845 00d1 4C39F3   		cmpq	%r14, %rbx
 4846 00d4 7452     		je	.L379
 4847              	.L386:
1172:fltk-1.3.4-1/png/pngset.c ****       np->name[(sizeof np->name)-1] = '\0';
 4848              		.loc 1 1172 7 is_stmt 1 view .LVU1325
 4849              	.LVL421:
 4850              	.LBB216:
 4851              	.LBI216:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4852              		.loc 2 31 1 view .LVU1326
 4853              	.LBB217:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4854              		.loc 2 34 3 view .LVU1327
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4855              		.loc 2 34 10 is_stmt 0 view .LVU1328
 4856 00d6 8B03     		movl	(%rbx), %eax
 4857              	.LBE217:
 4858              	.LBE216:
1174:fltk-1.3.4-1/png/pngset.c **** 
 4859              		.loc 1 1174 22 view .LVU1329
 4860 00d8 0FB67318 		movzbl	24(%rbx), %esi
1173:fltk-1.3.4-1/png/pngset.c ****       np->location = check_location(png_ptr, unknowns->location);
 4861              		.loc 1 1173 37 view .LVU1330
 4862 00dc C6450400 		movb	$0, 4(%rbp)
1174:fltk-1.3.4-1/png/pngset.c **** 
 4863              		.loc 1 1174 22 view .LVU1331
 4864 00e0 4C89EF   		movq	%r13, %rdi
 4865              	.LBB219:
 4866              	.LBB218:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4867              		.loc 2 34 10 view .LVU1332
 4868 00e3 894500   		movl	%eax, 0(%rbp)
 4869              	.LVL422:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4870              		.loc 2 34 10 view .LVU1333
 4871              	.LBE218:
 4872              	.LBE219:
1173:fltk-1.3.4-1/png/pngset.c ****       np->location = check_location(png_ptr, unknowns->location);
 4873              		.loc 1 1173 7 is_stmt 1 view .LVU1334
1174:fltk-1.3.4-1/png/pngset.c **** 
 4874              		.loc 1 1174 7 view .LVU1335
1174:fltk-1.3.4-1/png/pngset.c **** 
 4875              		.loc 1 1174 22 is_stmt 0 view .LVU1336
 4876 00e6 E8000000 		call	check_location
 4876      00
 4877              	.LVL423:
1176:fltk-1.3.4-1/png/pngset.c ****       {
 4878              		.loc 1 1176 19 view .LVU1337
 4879 00eb 488B7310 		movq	16(%rbx), %rsi
1174:fltk-1.3.4-1/png/pngset.c **** 
 4880              		.loc 1 1174 20 view .LVU1338
 4881 00ef 884518   		movb	%al, 24(%rbp)
1176:fltk-1.3.4-1/png/pngset.c ****       {
 4882              		.loc 1 1176 7 is_stmt 1 view .LVU1339
1176:fltk-1.3.4-1/png/pngset.c ****       {
 4883              		.loc 1 1176 10 is_stmt 0 view .LVU1340
 4884 00f2 4885F6   		testq	%rsi, %rsi
 4885 00f5 74B9     		je	.L393
1184:fltk-1.3.4-1/png/pngset.c ****             png_malloc_base(png_ptr, unknowns->size));
 4886              		.loc 1 1184 10 is_stmt 1 view .LVU1341
1184:fltk-1.3.4-1/png/pngset.c ****             png_malloc_base(png_ptr, unknowns->size));
 4887              		.loc 1 1184 21 is_stmt 0 view .LVU1342
 4888 00f7 4C89EF   		movq	%r13, %rdi
 4889 00fa E8000000 		call	png_malloc_base@PLT
 4889      00
 4890              	.LVL424:
1184:fltk-1.3.4-1/png/pngset.c ****             png_malloc_base(png_ptr, unknowns->size));
 4891              		.loc 1 1184 19 view .LVU1343
 4892 00ff 48894508 		movq	%rax, 8(%rbp)
1187:fltk-1.3.4-1/png/pngset.c ****          {
 4893              		.loc 1 1187 10 is_stmt 1 view .LVU1344
1184:fltk-1.3.4-1/png/pngset.c ****             png_malloc_base(png_ptr, unknowns->size));
 4894              		.loc 1 1184 21 is_stmt 0 view .LVU1345
 4895 0103 4889C7   		movq	%rax, %rdi
1187:fltk-1.3.4-1/png/pngset.c ****          {
 4896              		.loc 1 1187 13 view .LVU1346
 4897 0106 4885C0   		testq	%rax, %rax
 4898 0109 7436     		je	.L394
1195:fltk-1.3.4-1/png/pngset.c ****          np->size = unknowns->size;
 4899              		.loc 1 1195 10 is_stmt 1 view .LVU1347
 4900 010b 4C8B7B10 		movq	16(%rbx), %r15
 4901              	.LVL425:
 4902              	.LBB220:
 4903              	.LBI220:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 4904              		.loc 2 31 1 view .LVU1348
 4905              	.LBB221:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4906              		.loc 2 34 3 view .LVU1349
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4907              		.loc 2 34 10 is_stmt 0 view .LVU1350
 4908 010f 488B7308 		movq	8(%rbx), %rsi
 4909 0113 4C89FA   		movq	%r15, %rdx
 4910 0116 E8000000 		call	memcpy@PLT
 4910      00
 4911              	.LVL426:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 4912              		.loc 2 34 10 view .LVU1351
 4913              	.LBE221:
 4914              	.LBE220:
1196:fltk-1.3.4-1/png/pngset.c ****       }
 4915              		.loc 1 1196 10 is_stmt 1 view .LVU1352
1196:fltk-1.3.4-1/png/pngset.c ****       }
 4916              		.loc 1 1196 19 is_stmt 0 view .LVU1353
 4917 011b 4C897D10 		movq	%r15, 16(%rbp)
 4918 011f EB9F     		jmp	.L383
 4919              	.LVL427:
 4920              		.p2align 4,,10
 4921 0121 0F1F8000 		.p2align 3
 4921      000000
 4922              	.L379:
1205:fltk-1.3.4-1/png/pngset.c ****    }
1206:fltk-1.3.4-1/png/pngset.c **** }
 4923              		.loc 1 1206 1 view .LVU1354
 4924 0128 4883C408 		addq	$8, %rsp
 4925              		.cfi_def_cfa_offset 56
 4926 012c 5B       		popq	%rbx
 4927              		.cfi_def_cfa_offset 48
 4928 012d 5D       		popq	%rbp
 4929              		.cfi_def_cfa_offset 40
 4930 012e 415C     		popq	%r12
 4931              		.cfi_def_cfa_offset 32
 4932              	.LVL428:
 4933              		.loc 1 1206 1 view .LVU1355
 4934 0130 415D     		popq	%r13
 4935              		.cfi_def_cfa_offset 24
 4936 0132 415E     		popq	%r14
 4937              		.cfi_def_cfa_offset 16
 4938 0134 415F     		popq	%r15
 4939              		.cfi_def_cfa_offset 8
 4940 0136 C3       		ret
 4941              	.LVL429:
 4942 0137 660F1F84 		.p2align 4,,10
 4942      00000000 
 4942      00
 4943              		.p2align 3
 4944              	.L389:
 4945              		.cfi_restore 3
 4946              		.cfi_restore 6
 4947              		.cfi_restore 12
 4948              		.cfi_restore 13
 4949              		.cfi_restore 14
 4950              		.cfi_restore 15
 4951              		.loc 1 1206 1 view .LVU1356
 4952 0140 C3       		ret
 4953              	.LVL430:
 4954              	.L394:
 4955              		.cfi_def_cfa_offset 64
 4956              		.cfi_offset 3, -56
 4957              		.cfi_offset 6, -48
 4958              		.cfi_offset 12, -40
 4959              		.cfi_offset 13, -32
 4960              		.cfi_offset 14, -24
 4961              		.cfi_offset 15, -16
1189:fltk-1.3.4-1/png/pngset.c ****                PNG_CHUNK_WRITE_ERROR);
 4962              		.loc 1 1189 13 is_stmt 1 view .LVU1357
 4963 0141 BA010000 		movl	$1, %edx
 4963      00
 4964 0146 488D3500 		leaq	.LC43(%rip), %rsi
 4964      000000
 4965 014d 4C89EF   		movq	%r13, %rdi
 4966 0150 E8000000 		call	png_chunk_report@PLT
 4966      00
 4967              	.LVL431:
1192:fltk-1.3.4-1/png/pngset.c ****          }
 4968              		.loc 1 1192 13 view .LVU1358
 4969 0155 E973FFFF 		jmp	.L385
 4969      FF
 4970              	.LVL432:
 4971              	.L392:
1156:fltk-1.3.4-1/png/pngset.c ****          PNG_CHUNK_WRITE_ERROR);
 4972              		.loc 1 1156 7 view .LVU1359
 4973              		.loc 1 1206 1 is_stmt 0 view .LVU1360
 4974 015a 58       		popq	%rax
 4975              		.cfi_def_cfa_offset 56
 4976              	.LVL433:
1156:fltk-1.3.4-1/png/pngset.c ****          PNG_CHUNK_WRITE_ERROR);
 4977              		.loc 1 1156 7 view .LVU1361
 4978 015b 4C89EF   		movq	%r13, %rdi
 4979              		.loc 1 1206 1 view .LVU1362
 4980 015e 5B       		popq	%rbx
 4981              		.cfi_restore 3
 4982              		.cfi_def_cfa_offset 48
 4983              	.LVL434:
1156:fltk-1.3.4-1/png/pngset.c ****          PNG_CHUNK_WRITE_ERROR);
 4984              		.loc 1 1156 7 view .LVU1363
 4985 015f BA010000 		movl	$1, %edx
 4985      00
 4986              		.loc 1 1206 1 view .LVU1364
 4987 0164 5D       		popq	%rbp
 4988              		.cfi_restore 6
 4989              		.cfi_def_cfa_offset 40
1156:fltk-1.3.4-1/png/pngset.c ****          PNG_CHUNK_WRITE_ERROR);
 4990              		.loc 1 1156 7 view .LVU1365
 4991 0165 488D3500 		leaq	.LC42(%rip), %rsi
 4991      000000
 4992              		.loc 1 1206 1 view .LVU1366
 4993 016c 415C     		popq	%r12
 4994              		.cfi_restore 12
 4995              		.cfi_def_cfa_offset 32
 4996              	.LVL435:
 4997              		.loc 1 1206 1 view .LVU1367
 4998 016e 415D     		popq	%r13
 4999              		.cfi_restore 13
 5000              		.cfi_def_cfa_offset 24
 5001              	.LVL436:
 5002              		.loc 1 1206 1 view .LVU1368
 5003 0170 415E     		popq	%r14
 5004              		.cfi_restore 14
 5005              		.cfi_def_cfa_offset 16
 5006              	.LVL437:
 5007              		.loc 1 1206 1 view .LVU1369
 5008 0172 415F     		popq	%r15
 5009              		.cfi_restore 15
 5010              		.cfi_def_cfa_offset 8
 5011              	.LVL438:
1156:fltk-1.3.4-1/png/pngset.c ****          PNG_CHUNK_WRITE_ERROR);
 5012              		.loc 1 1156 7 view .LVU1370
 5013 0174 E9000000 		jmp	png_chunk_report@PLT
 5013      00
 5014              	.LVL439:
1156:fltk-1.3.4-1/png/pngset.c ****          PNG_CHUNK_WRITE_ERROR);
 5015              		.loc 1 1156 7 view .LVU1371
 5016              		.cfi_endproc
 5017              	.LFE67:
 5019              		.section	.rodata.png_set_unknown_chunk_location.str1.8,"aMS",@progbits,1
 5020              		.align 8
 5021              	.LC44:
 5022 0000 696E7661 		.string	"invalid unknown chunk location"
 5022      6C696420 
 5022      756E6B6E 
 5022      6F776E20 
 5022      6368756E 
 5023              		.section	.text.png_set_unknown_chunk_location,"ax",@progbits
 5024              		.p2align 4
 5025              		.globl	png_set_unknown_chunk_location
 5027              	png_set_unknown_chunk_location:
 5028              	.LVL440:
 5029              	.LFB68:
1207:fltk-1.3.4-1/png/pngset.c **** 
1208:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1209:fltk-1.3.4-1/png/pngset.c **** png_set_unknown_chunk_location(png_const_structrp png_ptr, png_inforp info_ptr,
1210:fltk-1.3.4-1/png/pngset.c ****     int chunk, int location)
1211:fltk-1.3.4-1/png/pngset.c **** {
 5030              		.loc 1 1211 1 is_stmt 1 view -0
 5031              		.cfi_startproc
 5032              		.loc 1 1211 1 is_stmt 0 view .LVU1373
 5033 0000 F30F1EFA 		endbr64
1212:fltk-1.3.4-1/png/pngset.c ****    /* This API is pretty pointless in 1.6.0 because the location can be set
1213:fltk-1.3.4-1/png/pngset.c ****     * before the call to png_set_unknown_chunks.
1214:fltk-1.3.4-1/png/pngset.c ****     *
1215:fltk-1.3.4-1/png/pngset.c ****     * TODO: add a png_app_warning in 1.7
1216:fltk-1.3.4-1/png/pngset.c ****     */
1217:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr != NULL && info_ptr != NULL && chunk >= 0 &&
 5034              		.loc 1 1217 4 is_stmt 1 view .LVU1374
1211:fltk-1.3.4-1/png/pngset.c ****    /* This API is pretty pointless in 1.6.0 because the location can be set
 5035              		.loc 1 1211 1 is_stmt 0 view .LVU1375
 5036 0004 55       		pushq	%rbp
 5037              		.cfi_def_cfa_offset 16
 5038              		.cfi_offset 6, -16
 5039 0005 53       		pushq	%rbx
 5040              		.cfi_def_cfa_offset 24
 5041              		.cfi_offset 3, -24
 5042 0006 4863DA   		movslq	%edx, %rbx
 5043              		.loc 1 1217 44 view .LVU1376
 5044 0009 89D8     		movl	%ebx, %eax
 5045 000b F7D0     		notl	%eax
1211:fltk-1.3.4-1/png/pngset.c ****    /* This API is pretty pointless in 1.6.0 because the location can be set
 5046              		.loc 1 1211 1 view .LVU1377
 5047 000d 4883EC18 		subq	$24, %rsp
 5048              		.cfi_def_cfa_offset 48
 5049              		.loc 1 1217 36 view .LVU1378
 5050 0011 4885F6   		testq	%rsi, %rsi
 5051 0014 0F95C2   		setne	%dl
 5052              	.LVL441:
 5053              		.loc 1 1217 44 view .LVU1379
 5054 0017 C1E81F   		shrl	$31, %eax
 5055 001a 84C2     		testb	%al, %dl
 5056 001c 7405     		je	.L395
 5057 001e 4885FF   		testq	%rdi, %rdi
 5058 0021 750D     		jne	.L406
 5059              	.L395:
1218:fltk-1.3.4-1/png/pngset.c ****       chunk < info_ptr->unknown_chunks_num)
1219:fltk-1.3.4-1/png/pngset.c ****    {
1220:fltk-1.3.4-1/png/pngset.c ****       if ((location & (PNG_HAVE_IHDR|PNG_HAVE_PLTE|PNG_AFTER_IDAT)) == 0)
1221:fltk-1.3.4-1/png/pngset.c ****       {
1222:fltk-1.3.4-1/png/pngset.c ****          png_app_error(png_ptr, "invalid unknown chunk location");
1223:fltk-1.3.4-1/png/pngset.c ****          /* Fake out the pre 1.6.0 behavior: */
1224:fltk-1.3.4-1/png/pngset.c ****          if ((location & PNG_HAVE_IDAT) != 0) /* undocumented! */
1225:fltk-1.3.4-1/png/pngset.c ****             location = PNG_AFTER_IDAT;
1226:fltk-1.3.4-1/png/pngset.c **** 
1227:fltk-1.3.4-1/png/pngset.c ****          else
1228:fltk-1.3.4-1/png/pngset.c ****             location = PNG_HAVE_IHDR; /* also undocumented */
1229:fltk-1.3.4-1/png/pngset.c ****       }
1230:fltk-1.3.4-1/png/pngset.c **** 
1231:fltk-1.3.4-1/png/pngset.c ****       info_ptr->unknown_chunks[chunk].location =
1232:fltk-1.3.4-1/png/pngset.c ****          check_location(png_ptr, location);
1233:fltk-1.3.4-1/png/pngset.c ****    }
1234:fltk-1.3.4-1/png/pngset.c **** }
 5060              		.loc 1 1234 1 view .LVU1380
 5061 0023 4883C418 		addq	$24, %rsp
 5062              		.cfi_remember_state
 5063              		.cfi_def_cfa_offset 24
 5064 0027 5B       		popq	%rbx
 5065              		.cfi_def_cfa_offset 16
 5066              	.LVL442:
 5067              		.loc 1 1234 1 view .LVU1381
 5068 0028 5D       		popq	%rbp
 5069              		.cfi_def_cfa_offset 8
 5070 0029 C3       		ret
 5071 002a 660F1F44 		.p2align 4,,10
 5071      0000
 5072              		.p2align 3
 5073              	.L406:
 5074              		.cfi_restore_state
 5075 0030 4889F5   		movq	%rsi, %rbp
1217:fltk-1.3.4-1/png/pngset.c ****       chunk < info_ptr->unknown_chunks_num)
 5076              		.loc 1 1217 58 discriminator 2 view .LVU1382
 5077 0033 399E2801 		cmpl	%ebx, 296(%rsi)
 5077      0000
 5078 0039 7EE8     		jle	.L395
1220:fltk-1.3.4-1/png/pngset.c ****       {
 5079              		.loc 1 1220 7 is_stmt 1 view .LVU1383
1220:fltk-1.3.4-1/png/pngset.c ****       {
 5080              		.loc 1 1220 10 is_stmt 0 view .LVU1384
 5081 003b F6C10B   		testb	$11, %cl
 5082 003e 7420     		je	.L407
 5083              	.LVL443:
 5084              	.L397:
1231:fltk-1.3.4-1/png/pngset.c ****          check_location(png_ptr, location);
 5085              		.loc 1 1231 7 is_stmt 1 view .LVU1385
1232:fltk-1.3.4-1/png/pngset.c ****    }
 5086              		.loc 1 1232 10 is_stmt 0 view .LVU1386
 5087 0040 89CE     		movl	%ecx, %esi
1231:fltk-1.3.4-1/png/pngset.c ****          check_location(png_ptr, location);
 5088              		.loc 1 1231 31 view .LVU1387
 5089 0042 48C1E305 		salq	$5, %rbx
 5090 0046 48039D20 		addq	288(%rbp), %rbx
 5090      010000
1232:fltk-1.3.4-1/png/pngset.c ****    }
 5091              		.loc 1 1232 10 view .LVU1388
 5092 004d E8000000 		call	check_location
 5092      00
 5093              	.LVL444:
1231:fltk-1.3.4-1/png/pngset.c ****          check_location(png_ptr, location);
 5094              		.loc 1 1231 48 view .LVU1389
 5095 0052 884318   		movb	%al, 24(%rbx)
 5096              		.loc 1 1234 1 view .LVU1390
 5097 0055 4883C418 		addq	$24, %rsp
 5098              		.cfi_remember_state
 5099              		.cfi_def_cfa_offset 24
 5100 0059 5B       		popq	%rbx
 5101              		.cfi_def_cfa_offset 16
 5102 005a 5D       		popq	%rbp
 5103              		.cfi_def_cfa_offset 8
 5104              	.LVL445:
 5105              		.loc 1 1234 1 view .LVU1391
 5106 005b C3       		ret
 5107              	.LVL446:
 5108 005c 0F1F4000 		.p2align 4,,10
 5109              		.p2align 3
 5110              	.L407:
 5111              		.cfi_restore_state
1222:fltk-1.3.4-1/png/pngset.c ****          /* Fake out the pre 1.6.0 behavior: */
 5112              		.loc 1 1222 10 view .LVU1392
 5113 0060 488D3500 		leaq	.LC44(%rip), %rsi
 5113      000000
 5114              	.LVL447:
1222:fltk-1.3.4-1/png/pngset.c ****          /* Fake out the pre 1.6.0 behavior: */
 5115              		.loc 1 1222 10 view .LVU1393
 5116 0067 894C240C 		movl	%ecx, 12(%rsp)
1222:fltk-1.3.4-1/png/pngset.c ****          /* Fake out the pre 1.6.0 behavior: */
 5117              		.loc 1 1222 10 is_stmt 1 view .LVU1394
 5118 006b 48893C24 		movq	%rdi, (%rsp)
 5119 006f E8000000 		call	png_app_error@PLT
 5119      00
 5120              	.LVL448:
1224:fltk-1.3.4-1/png/pngset.c ****             location = PNG_AFTER_IDAT;
 5121              		.loc 1 1224 10 view .LVU1395
1224:fltk-1.3.4-1/png/pngset.c ****             location = PNG_AFTER_IDAT;
 5122              		.loc 1 1224 24 is_stmt 0 view .LVU1396
 5123 0074 8B4C240C 		movl	12(%rsp), %ecx
1228:fltk-1.3.4-1/png/pngset.c ****       }
 5124              		.loc 1 1228 22 view .LVU1397
 5125 0078 488B3C24 		movq	(%rsp), %rdi
1224:fltk-1.3.4-1/png/pngset.c ****             location = PNG_AFTER_IDAT;
 5126              		.loc 1 1224 24 view .LVU1398
 5127 007c 83E104   		andl	$4, %ecx
1228:fltk-1.3.4-1/png/pngset.c ****       }
 5128              		.loc 1 1228 22 view .LVU1399
 5129 007f 83F901   		cmpl	$1, %ecx
 5130 0082 19C9     		sbbl	%ecx, %ecx
 5131 0084 83E1F9   		andl	$-7, %ecx
 5132 0087 83C108   		addl	$8, %ecx
 5133 008a EBB4     		jmp	.L397
 5134              		.cfi_endproc
 5135              	.LFE68:
 5137              		.section	.text.png_permit_mng_features,"ax",@progbits
 5138              		.p2align 4
 5139              		.globl	png_permit_mng_features
 5141              	png_permit_mng_features:
 5142              	.LVL449:
 5143              	.LFB69:
1235:fltk-1.3.4-1/png/pngset.c **** #endif
1236:fltk-1.3.4-1/png/pngset.c **** 
1237:fltk-1.3.4-1/png/pngset.c **** 
1238:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
1239:fltk-1.3.4-1/png/pngset.c **** png_uint_32 PNGAPI
1240:fltk-1.3.4-1/png/pngset.c **** png_permit_mng_features (png_structrp png_ptr, png_uint_32 mng_features)
1241:fltk-1.3.4-1/png/pngset.c **** {
 5144              		.loc 1 1241 1 is_stmt 1 view -0
 5145              		.cfi_startproc
 5146              		.loc 1 1241 1 is_stmt 0 view .LVU1401
 5147 0000 F30F1EFA 		endbr64
1242:fltk-1.3.4-1/png/pngset.c ****    png_debug(1, "in png_permit_mng_features");
 5148              		.loc 1 1242 4 is_stmt 1 view .LVU1402
1243:fltk-1.3.4-1/png/pngset.c **** 
1244:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL)
 5149              		.loc 1 1244 4 view .LVU1403
1241:fltk-1.3.4-1/png/pngset.c ****    png_debug(1, "in png_permit_mng_features");
 5150              		.loc 1 1241 1 is_stmt 0 view .LVU1404
 5151 0004 89F0     		movl	%esi, %eax
 5152              		.loc 1 1244 7 view .LVU1405
 5153 0006 4885FF   		testq	%rdi, %rdi
 5154 0009 740D     		je	.L410
1245:fltk-1.3.4-1/png/pngset.c ****       return 0;
1246:fltk-1.3.4-1/png/pngset.c **** 
1247:fltk-1.3.4-1/png/pngset.c ****    png_ptr->mng_features_permitted = mng_features & PNG_ALL_MNG_FEATURES;
 5155              		.loc 1 1247 4 is_stmt 1 view .LVU1406
 5156              		.loc 1 1247 51 is_stmt 0 view .LVU1407
 5157 000b 83E005   		andl	$5, %eax
 5158              		.loc 1 1247 36 view .LVU1408
 5159 000e 89871804 		movl	%eax, 1048(%rdi)
 5159      0000
1248:fltk-1.3.4-1/png/pngset.c **** 
1249:fltk-1.3.4-1/png/pngset.c ****    return png_ptr->mng_features_permitted;
 5160              		.loc 1 1249 4 is_stmt 1 view .LVU1409
 5161              		.loc 1 1249 18 is_stmt 0 view .LVU1410
 5162 0014 C3       		ret
 5163              	.LVL450:
 5164              		.p2align 4,,10
 5165 0015 0F1F00   		.p2align 3
 5166              	.L410:
1245:fltk-1.3.4-1/png/pngset.c ****       return 0;
 5167              		.loc 1 1245 14 view .LVU1411
 5168 0018 31C0     		xorl	%eax, %eax
 5169              	.LVL451:
1250:fltk-1.3.4-1/png/pngset.c **** }
 5170              		.loc 1 1250 1 view .LVU1412
 5171 001a C3       		ret
 5172              		.cfi_endproc
 5173              	.LFE69:
 5175              		.section	.rodata.png_set_keep_unknown_chunks.str1.8,"aMS",@progbits,1
 5176              		.align 8
 5177              	.LC45:
 5178 0000 706E675F 		.string	"png_set_keep_unknown_chunks: invalid keep"
 5178      7365745F 
 5178      6B656570 
 5178      5F756E6B 
 5178      6E6F776E 
 5179 002a 00000000 		.align 8
 5179      0000
 5180              	.LC46:
 5181 0030 706E675F 		.string	"png_set_keep_unknown_chunks: no chunk list"
 5181      7365745F 
 5181      6B656570 
 5181      5F756E6B 
 5181      6E6F776E 
 5182 005b 00000000 		.align 8
 5182      00
 5183              	.LC47:
 5184 0060 706E675F 		.string	"png_set_keep_unknown_chunks: too many chunks"
 5184      7365745F 
 5184      6B656570 
 5184      5F756E6B 
 5184      6E6F776E 
 5185              		.section	.text.png_set_keep_unknown_chunks,"ax",@progbits
 5186              		.p2align 4
 5187              		.globl	png_set_keep_unknown_chunks
 5189              	png_set_keep_unknown_chunks:
 5190              	.LVL452:
 5191              	.LFB71:
1251:fltk-1.3.4-1/png/pngset.c **** #endif
1252:fltk-1.3.4-1/png/pngset.c **** 
1253:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
1254:fltk-1.3.4-1/png/pngset.c **** static unsigned int
1255:fltk-1.3.4-1/png/pngset.c **** add_one_chunk(png_bytep list, unsigned int count, png_const_bytep add, int keep)
1256:fltk-1.3.4-1/png/pngset.c **** {
1257:fltk-1.3.4-1/png/pngset.c ****    unsigned int i;
1258:fltk-1.3.4-1/png/pngset.c **** 
1259:fltk-1.3.4-1/png/pngset.c ****    /* Utility function: update the 'keep' state of a chunk if it is already in
1260:fltk-1.3.4-1/png/pngset.c ****     * the list, otherwise add it to the list.
1261:fltk-1.3.4-1/png/pngset.c ****     */
1262:fltk-1.3.4-1/png/pngset.c ****    for (i=0; i<count; ++i, list += 5)
1263:fltk-1.3.4-1/png/pngset.c ****    {
1264:fltk-1.3.4-1/png/pngset.c ****       if (memcmp(list, add, 4) == 0)
1265:fltk-1.3.4-1/png/pngset.c ****       {
1266:fltk-1.3.4-1/png/pngset.c ****          list[4] = (png_byte)keep;
1267:fltk-1.3.4-1/png/pngset.c ****          return count;
1268:fltk-1.3.4-1/png/pngset.c ****       }
1269:fltk-1.3.4-1/png/pngset.c ****    }
1270:fltk-1.3.4-1/png/pngset.c **** 
1271:fltk-1.3.4-1/png/pngset.c ****    if (keep != PNG_HANDLE_CHUNK_AS_DEFAULT)
1272:fltk-1.3.4-1/png/pngset.c ****    {
1273:fltk-1.3.4-1/png/pngset.c ****       ++count;
1274:fltk-1.3.4-1/png/pngset.c ****       memcpy(list, add, 4);
1275:fltk-1.3.4-1/png/pngset.c ****       list[4] = (png_byte)keep;
1276:fltk-1.3.4-1/png/pngset.c ****    }
1277:fltk-1.3.4-1/png/pngset.c **** 
1278:fltk-1.3.4-1/png/pngset.c ****    return count;
1279:fltk-1.3.4-1/png/pngset.c **** }
1280:fltk-1.3.4-1/png/pngset.c **** 
1281:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1282:fltk-1.3.4-1/png/pngset.c **** png_set_keep_unknown_chunks(png_structrp png_ptr, int keep,
1283:fltk-1.3.4-1/png/pngset.c ****     png_const_bytep chunk_list, int num_chunks_in)
1284:fltk-1.3.4-1/png/pngset.c **** {
 5192              		.loc 1 1284 1 is_stmt 1 view -0
 5193              		.cfi_startproc
 5194              		.loc 1 1284 1 is_stmt 0 view .LVU1414
 5195 0000 F30F1EFA 		endbr64
1285:fltk-1.3.4-1/png/pngset.c ****    png_bytep new_list;
 5196              		.loc 1 1285 4 is_stmt 1 view .LVU1415
1286:fltk-1.3.4-1/png/pngset.c ****    unsigned int num_chunks, old_num_chunks;
 5197              		.loc 1 1286 4 view .LVU1416
1287:fltk-1.3.4-1/png/pngset.c **** 
1288:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL)
 5198              		.loc 1 1288 4 view .LVU1417
 5199              		.loc 1 1288 7 is_stmt 0 view .LVU1418
 5200 0004 4885FF   		testq	%rdi, %rdi
 5201 0007 0F844B02 		je	.L465
 5201      0000
1284:fltk-1.3.4-1/png/pngset.c ****    png_bytep new_list;
 5202              		.loc 1 1284 1 view .LVU1419
 5203 000d 4157     		pushq	%r15
 5204              		.cfi_def_cfa_offset 16
 5205              		.cfi_offset 15, -16
 5206 000f 4156     		pushq	%r14
 5207              		.cfi_def_cfa_offset 24
 5208              		.cfi_offset 14, -24
 5209 0011 4155     		pushq	%r13
 5210              		.cfi_def_cfa_offset 32
 5211              		.cfi_offset 13, -32
 5212 0013 4154     		pushq	%r12
 5213              		.cfi_def_cfa_offset 40
 5214              		.cfi_offset 12, -40
 5215 0015 4189F4   		movl	%esi, %r12d
1289:fltk-1.3.4-1/png/pngset.c ****       return;
1290:fltk-1.3.4-1/png/pngset.c **** 
1291:fltk-1.3.4-1/png/pngset.c ****    if (keep < 0 || keep >= PNG_HANDLE_CHUNK_LAST)
 5216              		.loc 1 1291 4 is_stmt 1 view .LVU1420
1292:fltk-1.3.4-1/png/pngset.c ****    {
1293:fltk-1.3.4-1/png/pngset.c ****       png_app_error(png_ptr, "png_set_keep_unknown_chunks: invalid keep");
 5217              		.loc 1 1293 7 is_stmt 0 view .LVU1421
 5218 0018 488D3500 		leaq	.LC45(%rip), %rsi
 5218      000000
 5219              	.LVL453:
1284:fltk-1.3.4-1/png/pngset.c ****    png_bytep new_list;
 5220              		.loc 1 1284 1 view .LVU1422
 5221 001f 55       		pushq	%rbp
 5222              		.cfi_def_cfa_offset 48
 5223              		.cfi_offset 6, -48
 5224 0020 4889FD   		movq	%rdi, %rbp
 5225 0023 53       		pushq	%rbx
 5226              		.cfi_def_cfa_offset 56
 5227              		.cfi_offset 3, -56
 5228 0024 4883EC08 		subq	$8, %rsp
 5229              		.cfi_def_cfa_offset 64
1291:fltk-1.3.4-1/png/pngset.c ****    {
 5230              		.loc 1 1291 7 view .LVU1423
 5231 0028 4183FC03 		cmpl	$3, %r12d
 5232 002c 0F876D01 		ja	.L468
 5232      0000
1294:fltk-1.3.4-1/png/pngset.c ****       return;
1295:fltk-1.3.4-1/png/pngset.c ****    }
1296:fltk-1.3.4-1/png/pngset.c **** 
1297:fltk-1.3.4-1/png/pngset.c ****    if (num_chunks_in <= 0)
 5233              		.loc 1 1297 4 is_stmt 1 view .LVU1424
 5234              		.loc 1 1297 7 is_stmt 0 view .LVU1425
 5235 0032 85C9     		testl	%ecx, %ecx
 5236 0034 0F8E2601 		jle	.L469
 5236      0000
 5237 003a 4989D6   		movq	%rdx, %r14
1298:fltk-1.3.4-1/png/pngset.c ****    {
1299:fltk-1.3.4-1/png/pngset.c ****       png_ptr->unknown_default = keep;
1300:fltk-1.3.4-1/png/pngset.c **** 
1301:fltk-1.3.4-1/png/pngset.c ****       /* '0' means just set the flags, so stop here */
1302:fltk-1.3.4-1/png/pngset.c ****       if (num_chunks_in == 0)
1303:fltk-1.3.4-1/png/pngset.c ****         return;
1304:fltk-1.3.4-1/png/pngset.c ****    }
1305:fltk-1.3.4-1/png/pngset.c **** 
1306:fltk-1.3.4-1/png/pngset.c ****    if (num_chunks_in < 0)
1307:fltk-1.3.4-1/png/pngset.c ****    {
1308:fltk-1.3.4-1/png/pngset.c ****       /* Ignore all unknown chunks and all chunks recognized by
1309:fltk-1.3.4-1/png/pngset.c ****        * libpng except for IHDR, PLTE, tRNS, IDAT, and IEND
1310:fltk-1.3.4-1/png/pngset.c ****        */
1311:fltk-1.3.4-1/png/pngset.c ****       static PNG_CONST png_byte chunks_to_ignore[] = {
1312:fltk-1.3.4-1/png/pngset.c ****          98,  75,  71,  68, '\0',  /* bKGD */
1313:fltk-1.3.4-1/png/pngset.c ****          99,  72,  82,  77, '\0',  /* cHRM */
1314:fltk-1.3.4-1/png/pngset.c ****         103,  65,  77,  65, '\0',  /* gAMA */
1315:fltk-1.3.4-1/png/pngset.c ****         104,  73,  83,  84, '\0',  /* hIST */
1316:fltk-1.3.4-1/png/pngset.c ****         105,  67,  67,  80, '\0',  /* iCCP */
1317:fltk-1.3.4-1/png/pngset.c ****         105,  84,  88, 116, '\0',  /* iTXt */
1318:fltk-1.3.4-1/png/pngset.c ****         111,  70,  70, 115, '\0',  /* oFFs */
1319:fltk-1.3.4-1/png/pngset.c ****         112,  67,  65,  76, '\0',  /* pCAL */
1320:fltk-1.3.4-1/png/pngset.c ****         112,  72,  89, 115, '\0',  /* pHYs */
1321:fltk-1.3.4-1/png/pngset.c ****         115,  66,  73,  84, '\0',  /* sBIT */
1322:fltk-1.3.4-1/png/pngset.c ****         115,  67,  65,  76, '\0',  /* sCAL */
1323:fltk-1.3.4-1/png/pngset.c ****         115,  80,  76,  84, '\0',  /* sPLT */
1324:fltk-1.3.4-1/png/pngset.c ****         115,  84,  69,  82, '\0',  /* sTER */
1325:fltk-1.3.4-1/png/pngset.c ****         115,  82,  71,  66, '\0',  /* sRGB */
1326:fltk-1.3.4-1/png/pngset.c ****         116,  69,  88, 116, '\0',  /* tEXt */
1327:fltk-1.3.4-1/png/pngset.c ****         116,  73,  77,  69, '\0',  /* tIME */
1328:fltk-1.3.4-1/png/pngset.c ****         122,  84,  88, 116, '\0'   /* zTXt */
1329:fltk-1.3.4-1/png/pngset.c ****       };
1330:fltk-1.3.4-1/png/pngset.c **** 
1331:fltk-1.3.4-1/png/pngset.c ****       chunk_list = chunks_to_ignore;
1332:fltk-1.3.4-1/png/pngset.c ****       num_chunks = (unsigned int)/*SAFE*/(sizeof chunks_to_ignore)/5U;
1333:fltk-1.3.4-1/png/pngset.c ****    }
1334:fltk-1.3.4-1/png/pngset.c **** 
1335:fltk-1.3.4-1/png/pngset.c ****    else /* num_chunks_in > 0 */
1336:fltk-1.3.4-1/png/pngset.c ****    {
1337:fltk-1.3.4-1/png/pngset.c ****       if (chunk_list == NULL)
 5238              		.loc 1 1337 7 is_stmt 1 view .LVU1426
1338:fltk-1.3.4-1/png/pngset.c ****       {
1339:fltk-1.3.4-1/png/pngset.c ****          /* Prior to 1.6.0 this was silently ignored, now it is an app_error
1340:fltk-1.3.4-1/png/pngset.c ****           * which can be switched off.
1341:fltk-1.3.4-1/png/pngset.c ****           */
1342:fltk-1.3.4-1/png/pngset.c ****          png_app_error(png_ptr, "png_set_keep_unknown_chunks: no chunk list");
 5239              		.loc 1 1342 10 is_stmt 0 view .LVU1427
 5240 003d 488D3500 		leaq	.LC46(%rip), %rsi
 5240      000000
1337:fltk-1.3.4-1/png/pngset.c ****       {
 5241              		.loc 1 1337 10 view .LVU1428
 5242 0044 4885D2   		testq	%rdx, %rdx
 5243 0047 0F845201 		je	.L468
 5243      0000
1343:fltk-1.3.4-1/png/pngset.c ****          return;
1344:fltk-1.3.4-1/png/pngset.c ****       }
1345:fltk-1.3.4-1/png/pngset.c **** 
1346:fltk-1.3.4-1/png/pngset.c ****       num_chunks = num_chunks_in;
 5244              		.loc 1 1346 7 is_stmt 1 view .LVU1429
1347:fltk-1.3.4-1/png/pngset.c ****    }
1348:fltk-1.3.4-1/png/pngset.c **** 
1349:fltk-1.3.4-1/png/pngset.c ****    old_num_chunks = png_ptr->num_chunk_list;
1350:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr->chunk_list == NULL)
 5245              		.loc 1 1350 15 is_stmt 0 view .LVU1430
 5246 004d 4C8BAF08 		movq	1032(%rdi), %r13
 5246      040000
1346:fltk-1.3.4-1/png/pngset.c ****    }
 5247              		.loc 1 1346 18 view .LVU1431
 5248 0054 89CB     		movl	%ecx, %ebx
 5249              	.LVL454:
1349:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr->chunk_list == NULL)
 5250              		.loc 1 1349 4 is_stmt 1 view .LVU1432
 5251              		.loc 1 1350 4 view .LVU1433
 5252              		.loc 1 1350 7 is_stmt 0 view .LVU1434
 5253 0056 4D85ED   		testq	%r13, %r13
 5254 0059 0F843101 		je	.L420
 5254      0000
1349:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr->chunk_list == NULL)
 5255              		.loc 1 1349 19 view .LVU1435
 5256 005f 448BBF04 		movl	1028(%rdi), %r15d
 5256      040000
 5257              	.LVL455:
 5258              	.L421:
1351:fltk-1.3.4-1/png/pngset.c ****       old_num_chunks = 0;
1352:fltk-1.3.4-1/png/pngset.c **** 
1353:fltk-1.3.4-1/png/pngset.c ****    /* Since num_chunks is always restricted to UINT_MAX/5 this can't overflow.
1354:fltk-1.3.4-1/png/pngset.c ****     */
1355:fltk-1.3.4-1/png/pngset.c ****    if (num_chunks + old_num_chunks > UINT_MAX/5)
 5259              		.loc 1 1355 4 is_stmt 1 view .LVU1436
 5260              		.loc 1 1355 19 is_stmt 0 view .LVU1437
 5261 0066 428D043B 		leal	(%rbx,%r15), %eax
 5262              		.loc 1 1355 7 view .LVU1438
 5263 006a 3D333333 		cmpl	$858993459, %eax
 5263      33
 5264 006f 0F872301 		ja	.L424
 5264      0000
1356:fltk-1.3.4-1/png/pngset.c ****    {
1357:fltk-1.3.4-1/png/pngset.c ****       png_app_error(png_ptr, "png_set_keep_unknown_chunks: too many chunks");
1358:fltk-1.3.4-1/png/pngset.c ****       return;
1359:fltk-1.3.4-1/png/pngset.c ****    }
1360:fltk-1.3.4-1/png/pngset.c **** 
1361:fltk-1.3.4-1/png/pngset.c ****    /* If these chunks are being reset to the default then no more memory is
1362:fltk-1.3.4-1/png/pngset.c ****     * required because add_one_chunk above doesn't extend the list if the 'keep'
1363:fltk-1.3.4-1/png/pngset.c ****     * parameter is the default.
1364:fltk-1.3.4-1/png/pngset.c ****     */
1365:fltk-1.3.4-1/png/pngset.c ****    if (keep != 0)
 5265              		.loc 1 1365 4 is_stmt 1 view .LVU1439
 5266              		.loc 1 1365 7 is_stmt 0 view .LVU1440
 5267 0075 4585E4   		testl	%r12d, %r12d
 5268 0078 0F853A01 		jne	.L470
 5268      0000
1366:fltk-1.3.4-1/png/pngset.c ****    {
1367:fltk-1.3.4-1/png/pngset.c ****       new_list = png_voidcast(png_bytep, png_malloc(png_ptr,
1368:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
1369:fltk-1.3.4-1/png/pngset.c **** 
1370:fltk-1.3.4-1/png/pngset.c ****       if (old_num_chunks > 0)
1371:fltk-1.3.4-1/png/pngset.c ****          memcpy(new_list, png_ptr->chunk_list, 5*old_num_chunks);
1372:fltk-1.3.4-1/png/pngset.c ****    }
1373:fltk-1.3.4-1/png/pngset.c **** 
1374:fltk-1.3.4-1/png/pngset.c ****    else if (old_num_chunks > 0)
 5269              		.loc 1 1374 9 is_stmt 1 view .LVU1441
 5270              		.loc 1 1374 12 is_stmt 0 view .LVU1442
 5271 007e 4585FF   		testl	%r15d, %r15d
 5272 0081 0F849101 		je	.L429
 5272      0000
 5273              	.LVL456:
 5274              	.L427:
 5275              	.LBB232:
1375:fltk-1.3.4-1/png/pngset.c ****       new_list = png_ptr->chunk_list;
1376:fltk-1.3.4-1/png/pngset.c **** 
1377:fltk-1.3.4-1/png/pngset.c ****    else
1378:fltk-1.3.4-1/png/pngset.c ****       new_list = NULL;
1379:fltk-1.3.4-1/png/pngset.c **** 
1380:fltk-1.3.4-1/png/pngset.c ****    /* Add the new chunks together with each one's handling code.  If the chunk
1381:fltk-1.3.4-1/png/pngset.c ****     * already exists the code is updated, otherwise the chunk is added to the
1382:fltk-1.3.4-1/png/pngset.c ****     * end.  (In libpng 1.6.0 order no longer matters because this code enforces
1383:fltk-1.3.4-1/png/pngset.c ****     * the earlier convention that the last setting is the one that is used.)
1384:fltk-1.3.4-1/png/pngset.c ****     */
1385:fltk-1.3.4-1/png/pngset.c ****    if (new_list != NULL)
1386:fltk-1.3.4-1/png/pngset.c ****    {
1387:fltk-1.3.4-1/png/pngset.c ****       png_const_bytep inlist;
1388:fltk-1.3.4-1/png/pngset.c ****       png_bytep outlist;
1389:fltk-1.3.4-1/png/pngset.c ****       unsigned int i;
1390:fltk-1.3.4-1/png/pngset.c **** 
1391:fltk-1.3.4-1/png/pngset.c ****       for (i=0; i<num_chunks; ++i)
 5276              		.loc 1 1391 13 view .LVU1443
 5277 0087 31D2     		xorl	%edx, %edx
 5278 0089 0F1F8000 		.p2align 4,,10
 5278      000000
 5279              		.p2align 3
 5280              	.L434:
 5281              	.LVL457:
1392:fltk-1.3.4-1/png/pngset.c ****       {
1393:fltk-1.3.4-1/png/pngset.c ****          old_num_chunks = add_one_chunk(new_list, old_num_chunks,
 5282              		.loc 1 1393 10 is_stmt 1 discriminator 3 view .LVU1444
1394:fltk-1.3.4-1/png/pngset.c ****             chunk_list+5*i, keep);
 5283              		.loc 1 1394 25 is_stmt 0 discriminator 3 view .LVU1445
 5284 0090 8D0C92   		leal	(%rdx,%rdx,4), %ecx
1393:fltk-1.3.4-1/png/pngset.c ****             chunk_list+5*i, keep);
 5285              		.loc 1 1393 27 discriminator 3 view .LVU1446
 5286 0093 4C01F1   		addq	%r14, %rcx
 5287              	.LVL458:
 5288              	.LBB233:
 5289              	.LBI233:
1255:fltk-1.3.4-1/png/pngset.c **** {
 5290              		.loc 1 1255 1 is_stmt 1 discriminator 3 view .LVU1447
 5291              	.LBB234:
1257:fltk-1.3.4-1/png/pngset.c **** 
 5292              		.loc 1 1257 4 discriminator 3 view .LVU1448
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5293              		.loc 1 1262 4 discriminator 3 view .LVU1449
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5294              		.loc 1 1262 14 discriminator 3 view .LVU1450
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5295              		.loc 1 1262 4 is_stmt 0 discriminator 3 view .LVU1451
 5296 0096 4585FF   		testl	%r15d, %r15d
 5297 0099 0F849101 		je	.L446
 5297      0000
 5298 009f 418D47FF 		leal	-1(%r15), %eax
 5299 00a3 8B39     		movl	(%rcx), %edi
 5300 00a5 488D7480 		leaq	5(%rax,%rax,4), %rsi
 5300      05
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5301              		.loc 1 1262 4 view .LVU1452
 5302 00aa 4C89E8   		movq	%r13, %rax
 5303 00ad 4C01EE   		addq	%r13, %rsi
 5304 00b0 EB13     		jmp	.L433
 5305              	.LVL459:
 5306              		.p2align 4,,10
 5307 00b2 660F1F44 		.p2align 3
 5307      0000
 5308              	.L431:
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5309              		.loc 1 1262 23 is_stmt 1 view .LVU1453
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5310              		.loc 1 1262 33 is_stmt 0 view .LVU1454
 5311 00b8 4883C005 		addq	$5, %rax
 5312              	.LVL460:
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5313              		.loc 1 1262 14 is_stmt 1 view .LVU1455
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5314              		.loc 1 1262 4 is_stmt 0 view .LVU1456
 5315 00bc 4839F0   		cmpq	%rsi, %rax
 5316 00bf 0F847301 		je	.L430
 5316      0000
 5317              	.L433:
1264:fltk-1.3.4-1/png/pngset.c ****       {
 5318              		.loc 1 1264 7 is_stmt 1 view .LVU1457
1264:fltk-1.3.4-1/png/pngset.c ****       {
 5319              		.loc 1 1264 10 is_stmt 0 view .LVU1458
 5320 00c5 3B38     		cmpl	(%rax), %edi
 5321 00c7 75EF     		jne	.L431
1266:fltk-1.3.4-1/png/pngset.c ****          return count;
 5322              		.loc 1 1266 10 is_stmt 1 view .LVU1459
1266:fltk-1.3.4-1/png/pngset.c ****          return count;
 5323              		.loc 1 1266 20 is_stmt 0 view .LVU1460
 5324 00c9 44886004 		movb	%r12b, 4(%rax)
1267:fltk-1.3.4-1/png/pngset.c ****       }
 5325              		.loc 1 1267 10 is_stmt 1 view .LVU1461
 5326              	.LVL461:
 5327              	.L432:
1267:fltk-1.3.4-1/png/pngset.c ****       }
 5328              		.loc 1 1267 10 is_stmt 0 view .LVU1462
 5329              	.LBE234:
 5330              	.LBE233:
1391:fltk-1.3.4-1/png/pngset.c ****       {
 5331              		.loc 1 1391 31 is_stmt 1 view .LVU1463
 5332 00cd 83C201   		addl	$1, %edx
 5333              	.LVL462:
1391:fltk-1.3.4-1/png/pngset.c ****       {
 5334              		.loc 1 1391 17 view .LVU1464
1391:fltk-1.3.4-1/png/pngset.c ****       {
 5335              		.loc 1 1391 7 is_stmt 0 view .LVU1465
 5336 00d0 39DA     		cmpl	%ebx, %edx
 5337 00d2 72BC     		jb	.L434
 5338              	.LVL463:
1395:fltk-1.3.4-1/png/pngset.c ****       }
1396:fltk-1.3.4-1/png/pngset.c **** 
1397:fltk-1.3.4-1/png/pngset.c ****       /* Now remove any spurious 'default' entries. */
1398:fltk-1.3.4-1/png/pngset.c ****       num_chunks = 0;
1399:fltk-1.3.4-1/png/pngset.c ****       for (i=0, inlist=outlist=new_list; i<old_num_chunks; ++i, inlist += 5)
 5339              		.loc 1 1399 42 is_stmt 1 view .LVU1466
 5340              		.loc 1 1399 7 is_stmt 0 view .LVU1467
 5341 00d4 4585FF   		testl	%r15d, %r15d
 5342 00d7 0F848301 		je	.L435
 5342      0000
 5343              		.loc 1 1399 7 view .LVU1468
 5344 00dd 418D47FF 		leal	-1(%r15), %eax
 5345 00e1 4C89EA   		movq	%r13, %rdx
1398:fltk-1.3.4-1/png/pngset.c ****       for (i=0, inlist=outlist=new_list; i<old_num_chunks; ++i, inlist += 5)
 5346              		.loc 1 1398 18 view .LVU1469
 5347 00e4 31C9     		xorl	%ecx, %ecx
 5348 00e6 488D7480 		leaq	5(%rax,%rax,4), %rsi
 5348      05
 5349              		.loc 1 1399 7 view .LVU1470
 5350 00eb 4C89E8   		movq	%r13, %rax
 5351 00ee 4C01EE   		addq	%r13, %rsi
 5352              	.LVL464:
 5353              		.p2align 4,,10
 5354 00f1 0F1F8000 		.p2align 3
 5354      000000
 5355              	.L438:
1400:fltk-1.3.4-1/png/pngset.c ****       {
1401:fltk-1.3.4-1/png/pngset.c ****          if (inlist[4])
 5356              		.loc 1 1401 10 is_stmt 1 view .LVU1471
 5357              		.loc 1 1401 13 is_stmt 0 view .LVU1472
 5358 00f8 80780400 		cmpb	$0, 4(%rax)
 5359 00fc 7418     		je	.L436
1402:fltk-1.3.4-1/png/pngset.c ****          {
1403:fltk-1.3.4-1/png/pngset.c ****             if (outlist != inlist)
 5360              		.loc 1 1403 13 is_stmt 1 view .LVU1473
 5361              		.loc 1 1403 16 is_stmt 0 view .LVU1474
 5362 00fe 4839C2   		cmpq	%rax, %rdx
 5363 0101 740C     		je	.L437
1404:fltk-1.3.4-1/png/pngset.c ****                memcpy(outlist, inlist, 5);
 5364              		.loc 1 1404 16 is_stmt 1 view .LVU1475
 5365              	.LVL465:
 5366              	.LBB240:
 5367              	.LBI240:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5368              		.loc 2 31 1 view .LVU1476
 5369              	.LBB241:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5370              		.loc 2 34 3 view .LVU1477
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5371              		.loc 2 34 10 is_stmt 0 view .LVU1478
 5372 0103 8B38     		movl	(%rax), %edi
 5373 0105 893A     		movl	%edi, (%rdx)
 5374 0107 0FB67804 		movzbl	4(%rax), %edi
 5375 010b 40887A04 		movb	%dil, 4(%rdx)
 5376              	.LVL466:
 5377              	.L437:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5378              		.loc 2 34 10 view .LVU1479
 5379              	.LBE241:
 5380              	.LBE240:
1405:fltk-1.3.4-1/png/pngset.c ****             outlist += 5;
 5381              		.loc 1 1405 13 is_stmt 1 view .LVU1480
 5382              		.loc 1 1405 21 is_stmt 0 view .LVU1481
 5383 010f 4883C205 		addq	$5, %rdx
 5384              	.LVL467:
1406:fltk-1.3.4-1/png/pngset.c ****             ++num_chunks;
 5385              		.loc 1 1406 13 is_stmt 1 view .LVU1482
 5386 0113 83C101   		addl	$1, %ecx
 5387              	.LVL468:
 5388              	.L436:
1399:fltk-1.3.4-1/png/pngset.c ****       {
 5389              		.loc 1 1399 60 discriminator 2 view .LVU1483
1399:fltk-1.3.4-1/png/pngset.c ****       {
 5390              		.loc 1 1399 72 is_stmt 0 discriminator 2 view .LVU1484
 5391 0116 4883C005 		addq	$5, %rax
 5392              	.LVL469:
1399:fltk-1.3.4-1/png/pngset.c ****       {
 5393              		.loc 1 1399 42 is_stmt 1 discriminator 2 view .LVU1485
1399:fltk-1.3.4-1/png/pngset.c ****       {
 5394              		.loc 1 1399 7 is_stmt 0 discriminator 2 view .LVU1486
 5395 011a 4839C6   		cmpq	%rax, %rsi
 5396 011d 75D9     		jne	.L438
1407:fltk-1.3.4-1/png/pngset.c ****          }
1408:fltk-1.3.4-1/png/pngset.c ****       }
1409:fltk-1.3.4-1/png/pngset.c **** 
1410:fltk-1.3.4-1/png/pngset.c ****       /* This means the application has removed all the specialized handling. */
1411:fltk-1.3.4-1/png/pngset.c ****       if (num_chunks == 0)
 5397              		.loc 1 1411 7 is_stmt 1 view .LVU1487
 5398 011f 488BB508 		movq	1032(%rbp), %rsi
 5398      040000
 5399              		.loc 1 1411 10 is_stmt 0 view .LVU1488
 5400 0126 85C9     		testl	%ecx, %ecx
 5401 0128 0F843901 		je	.L440
 5401      0000
 5402              	.LVL470:
 5403              	.L423:
 5404              		.loc 1 1411 10 view .LVU1489
 5405              	.LBE232:
1412:fltk-1.3.4-1/png/pngset.c ****       {
1413:fltk-1.3.4-1/png/pngset.c ****          if (png_ptr->chunk_list != new_list)
1414:fltk-1.3.4-1/png/pngset.c ****             png_free(png_ptr, new_list);
1415:fltk-1.3.4-1/png/pngset.c **** 
1416:fltk-1.3.4-1/png/pngset.c ****          new_list = NULL;
1417:fltk-1.3.4-1/png/pngset.c ****       }
1418:fltk-1.3.4-1/png/pngset.c ****    }
1419:fltk-1.3.4-1/png/pngset.c **** 
1420:fltk-1.3.4-1/png/pngset.c ****    else
1421:fltk-1.3.4-1/png/pngset.c ****       num_chunks = 0;
1422:fltk-1.3.4-1/png/pngset.c **** 
1423:fltk-1.3.4-1/png/pngset.c ****    png_ptr->num_chunk_list = num_chunks;
 5406              		.loc 1 1423 4 is_stmt 1 view .LVU1490
 5407              		.loc 1 1423 28 is_stmt 0 view .LVU1491
 5408 012e 898D0404 		movl	%ecx, 1028(%rbp)
 5408      0000
1424:fltk-1.3.4-1/png/pngset.c **** 
1425:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr->chunk_list != new_list)
 5409              		.loc 1 1425 4 is_stmt 1 view .LVU1492
 5410              		.loc 1 1425 7 is_stmt 0 view .LVU1493
 5411 0134 4939F5   		cmpq	%rsi, %r13
 5412 0137 7414     		je	.L411
 5413              	.LVL471:
 5414              	.L443:
1426:fltk-1.3.4-1/png/pngset.c ****    {
1427:fltk-1.3.4-1/png/pngset.c ****       if (png_ptr->chunk_list != NULL)
 5415              		.loc 1 1427 7 is_stmt 1 view .LVU1494
 5416              		.loc 1 1427 10 is_stmt 0 view .LVU1495
 5417 0139 4885F6   		testq	%rsi, %rsi
 5418 013c 7408     		je	.L441
1428:fltk-1.3.4-1/png/pngset.c ****          png_free(png_ptr, png_ptr->chunk_list);
 5419              		.loc 1 1428 10 is_stmt 1 view .LVU1496
 5420 013e 4889EF   		movq	%rbp, %rdi
 5421 0141 E8000000 		call	png_free@PLT
 5421      00
 5422              	.LVL472:
 5423              	.L441:
1429:fltk-1.3.4-1/png/pngset.c **** 
1430:fltk-1.3.4-1/png/pngset.c ****       png_ptr->chunk_list = new_list;
 5424              		.loc 1 1430 7 view .LVU1497
 5425              		.loc 1 1430 27 is_stmt 0 view .LVU1498
 5426 0146 4C89AD08 		movq	%r13, 1032(%rbp)
 5426      040000
 5427              	.LVL473:
 5428              	.L411:
1431:fltk-1.3.4-1/png/pngset.c ****    }
1432:fltk-1.3.4-1/png/pngset.c **** }
 5429              		.loc 1 1432 1 view .LVU1499
 5430 014d 4883C408 		addq	$8, %rsp
 5431              		.cfi_remember_state
 5432              		.cfi_def_cfa_offset 56
 5433 0151 5B       		popq	%rbx
 5434              		.cfi_def_cfa_offset 48
 5435 0152 5D       		popq	%rbp
 5436              		.cfi_def_cfa_offset 40
 5437              	.LVL474:
 5438              		.loc 1 1432 1 view .LVU1500
 5439 0153 415C     		popq	%r12
 5440              		.cfi_def_cfa_offset 32
 5441              	.LVL475:
 5442              		.loc 1 1432 1 view .LVU1501
 5443 0155 415D     		popq	%r13
 5444              		.cfi_def_cfa_offset 24
 5445 0157 415E     		popq	%r14
 5446              		.cfi_def_cfa_offset 16
 5447 0159 415F     		popq	%r15
 5448              		.cfi_def_cfa_offset 8
 5449 015b C3       		ret
 5450              	.LVL476:
 5451 015c 0F1F4000 		.p2align 4,,10
 5452              		.p2align 3
 5453              	.L469:
 5454              		.cfi_restore_state
1299:fltk-1.3.4-1/png/pngset.c **** 
 5455              		.loc 1 1299 7 is_stmt 1 view .LVU1502
1299:fltk-1.3.4-1/png/pngset.c **** 
 5456              		.loc 1 1299 32 is_stmt 0 view .LVU1503
 5457 0160 4489A700 		movl	%r12d, 1024(%rdi)
 5457      040000
1302:fltk-1.3.4-1/png/pngset.c ****         return;
 5458              		.loc 1 1302 7 is_stmt 1 view .LVU1504
1302:fltk-1.3.4-1/png/pngset.c ****         return;
 5459              		.loc 1 1302 10 is_stmt 0 view .LVU1505
 5460 0167 74E4     		je	.L411
1306:fltk-1.3.4-1/png/pngset.c ****    {
 5461              		.loc 1 1306 4 is_stmt 1 view .LVU1506
 5462              	.LVL477:
1349:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr->chunk_list == NULL)
 5463              		.loc 1 1349 4 view .LVU1507
1350:fltk-1.3.4-1/png/pngset.c ****       old_num_chunks = 0;
 5464              		.loc 1 1350 4 view .LVU1508
1350:fltk-1.3.4-1/png/pngset.c ****       old_num_chunks = 0;
 5465              		.loc 1 1350 15 is_stmt 0 view .LVU1509
 5466 0169 4C8BAF08 		movq	1032(%rdi), %r13
 5466      040000
1350:fltk-1.3.4-1/png/pngset.c ****       old_num_chunks = 0;
 5467              		.loc 1 1350 7 view .LVU1510
 5468 0170 4D85ED   		testq	%r13, %r13
 5469 0173 747B     		je	.L471
1349:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr->chunk_list == NULL)
 5470              		.loc 1 1349 19 view .LVU1511
 5471 0175 448BBF04 		movl	1028(%rdi), %r15d
 5471      040000
 5472              	.LBB243:
1332:fltk-1.3.4-1/png/pngset.c ****    }
 5473              		.loc 1 1332 18 view .LVU1512
 5474 017c BB110000 		movl	$17, %ebx
 5474      00
1331:fltk-1.3.4-1/png/pngset.c ****       num_chunks = (unsigned int)/*SAFE*/(sizeof chunks_to_ignore)/5U;
 5475              		.loc 1 1331 18 view .LVU1513
 5476 0181 4C8D3500 		leaq	chunks_to_ignore.7077(%rip), %r14
 5476      000000
 5477 0188 E9D9FEFF 		jmp	.L421
 5477      FF
 5478              	.LVL478:
 5479 018d 0F1F00   		.p2align 4,,10
 5480              		.p2align 3
 5481              	.L420:
1331:fltk-1.3.4-1/png/pngset.c ****       num_chunks = (unsigned int)/*SAFE*/(sizeof chunks_to_ignore)/5U;
 5482              		.loc 1 1331 18 view .LVU1514
 5483              	.LBE243:
1351:fltk-1.3.4-1/png/pngset.c **** 
 5484              		.loc 1 1351 7 is_stmt 1 view .LVU1515
1355:fltk-1.3.4-1/png/pngset.c ****    {
 5485              		.loc 1 1355 4 view .LVU1516
1355:fltk-1.3.4-1/png/pngset.c ****    {
 5486              		.loc 1 1355 7 is_stmt 0 view .LVU1517
 5487 0190 81F93333 		cmpl	$858993459, %ecx
 5487      3333
 5488 0196 7E64     		jle	.L417
 5489              	.LVL479:
 5490              	.L424:
1357:fltk-1.3.4-1/png/pngset.c ****       return;
 5491              		.loc 1 1357 7 is_stmt 1 view .LVU1518
 5492 0198 488D3500 		leaq	.LC47(%rip), %rsi
 5492      000000
 5493              	.L468:
 5494              		.loc 1 1432 1 is_stmt 0 view .LVU1519
 5495 019f 4883C408 		addq	$8, %rsp
 5496              		.cfi_remember_state
 5497              		.cfi_def_cfa_offset 56
1357:fltk-1.3.4-1/png/pngset.c ****       return;
 5498              		.loc 1 1357 7 view .LVU1520
 5499 01a3 4889EF   		movq	%rbp, %rdi
 5500              	.LVL480:
 5501              		.loc 1 1432 1 view .LVU1521
 5502 01a6 5B       		popq	%rbx
 5503              		.cfi_restore 3
 5504              		.cfi_def_cfa_offset 48
 5505 01a7 5D       		popq	%rbp
 5506              		.cfi_restore 6
 5507              		.cfi_def_cfa_offset 40
 5508              	.LVL481:
 5509              		.loc 1 1432 1 view .LVU1522
 5510 01a8 415C     		popq	%r12
 5511              		.cfi_restore 12
 5512              		.cfi_def_cfa_offset 32
 5513              	.LVL482:
 5514              		.loc 1 1432 1 view .LVU1523
 5515 01aa 415D     		popq	%r13
 5516              		.cfi_restore 13
 5517              		.cfi_def_cfa_offset 24
 5518 01ac 415E     		popq	%r14
 5519              		.cfi_restore 14
 5520              		.cfi_def_cfa_offset 16
 5521 01ae 415F     		popq	%r15
 5522              		.cfi_restore 15
 5523              		.cfi_def_cfa_offset 8
1357:fltk-1.3.4-1/png/pngset.c ****       return;
 5524              		.loc 1 1357 7 view .LVU1524
 5525 01b0 E9000000 		jmp	png_app_error@PLT
 5525      00
 5526              	.LVL483:
 5527              		.p2align 4,,10
 5528 01b5 0F1F00   		.p2align 3
 5529              	.L470:
 5530              		.cfi_restore_state
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5531              		.loc 1 1367 7 is_stmt 1 view .LVU1525
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5532              		.loc 1 1367 18 is_stmt 0 view .LVU1526
 5533 01b8 8D3480   		leal	(%rax,%rax,4), %esi
 5534 01bb 4889EF   		movq	%rbp, %rdi
 5535              	.LVL484:
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5536              		.loc 1 1367 18 view .LVU1527
 5537 01be E8000000 		call	png_malloc@PLT
 5537      00
 5538              	.LVL485:
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5539              		.loc 1 1367 18 view .LVU1528
 5540 01c3 4989C5   		movq	%rax, %r13
 5541              	.LVL486:
1370:fltk-1.3.4-1/png/pngset.c ****          memcpy(new_list, png_ptr->chunk_list, 5*old_num_chunks);
 5542              		.loc 1 1370 7 is_stmt 1 view .LVU1529
1370:fltk-1.3.4-1/png/pngset.c ****          memcpy(new_list, png_ptr->chunk_list, 5*old_num_chunks);
 5543              		.loc 1 1370 10 is_stmt 0 view .LVU1530
 5544 01c6 4585FF   		testl	%r15d, %r15d
 5545 01c9 0F85C100 		jne	.L426
 5545      0000
 5546              	.LVL487:
 5547              	.L442:
1385:fltk-1.3.4-1/png/pngset.c ****    {
 5548              		.loc 1 1385 4 is_stmt 1 view .LVU1531
1385:fltk-1.3.4-1/png/pngset.c ****    {
 5549              		.loc 1 1385 7 is_stmt 0 view .LVU1532
 5550 01cf 4D85ED   		testq	%r13, %r13
 5551 01d2 0F85EB00 		jne	.L445
 5551      0000
1385:fltk-1.3.4-1/png/pngset.c ****    {
 5552              		.loc 1 1385 7 view .LVU1533
 5553 01d8 488BB508 		movq	1032(%rbp), %rsi
 5553      040000
1421:fltk-1.3.4-1/png/pngset.c **** 
 5554              		.loc 1 1421 18 view .LVU1534
 5555 01df 31C9     		xorl	%ecx, %ecx
 5556 01e1 E948FFFF 		jmp	.L423
 5556      FF
 5557              	.LVL488:
 5558 01e6 662E0F1F 		.p2align 4,,10
 5558      84000000 
 5558      0000
 5559              		.p2align 3
 5560              	.L471:
 5561              	.LBB244:
1332:fltk-1.3.4-1/png/pngset.c ****    }
 5562              		.loc 1 1332 18 view .LVU1535
 5563 01f0 BB110000 		movl	$17, %ebx
 5563      00
1331:fltk-1.3.4-1/png/pngset.c ****       num_chunks = (unsigned int)/*SAFE*/(sizeof chunks_to_ignore)/5U;
 5564              		.loc 1 1331 18 view .LVU1536
 5565 01f5 4C8D3500 		leaq	chunks_to_ignore.7077(%rip), %r14
 5565      000000
 5566              	.LVL489:
 5567              	.L417:
1331:fltk-1.3.4-1/png/pngset.c ****       num_chunks = (unsigned int)/*SAFE*/(sizeof chunks_to_ignore)/5U;
 5568              		.loc 1 1331 18 view .LVU1537
 5569              	.LBE244:
1365:fltk-1.3.4-1/png/pngset.c ****    {
 5570              		.loc 1 1365 4 is_stmt 1 view .LVU1538
1365:fltk-1.3.4-1/png/pngset.c ****    {
 5571              		.loc 1 1365 7 is_stmt 0 view .LVU1539
 5572 01fc 4585E4   		testl	%r12d, %r12d
 5573 01ff 0F85AB00 		jne	.L422
 5573      0000
 5574 0205 31F6     		xorl	%esi, %esi
1421:fltk-1.3.4-1/png/pngset.c **** 
 5575              		.loc 1 1421 18 view .LVU1540
 5576 0207 31C9     		xorl	%ecx, %ecx
 5577              	.LVL490:
1378:fltk-1.3.4-1/png/pngset.c **** 
 5578              		.loc 1 1378 16 view .LVU1541
 5579 0209 4531ED   		xorl	%r13d, %r13d
 5580 020c E91DFFFF 		jmp	.L423
 5580      FF
 5581              	.LVL491:
 5582              		.p2align 4,,10
 5583 0211 0F1F8000 		.p2align 3
 5583      000000
 5584              	.L429:
1423:fltk-1.3.4-1/png/pngset.c **** 
 5585              		.loc 1 1423 4 is_stmt 1 view .LVU1542
1423:fltk-1.3.4-1/png/pngset.c **** 
 5586              		.loc 1 1423 28 is_stmt 0 view .LVU1543
 5587 0218 C7850404 		movl	$0, 1028(%rbp)
 5587      00000000 
 5587      0000
1425:fltk-1.3.4-1/png/pngset.c ****    {
 5588              		.loc 1 1425 4 is_stmt 1 view .LVU1544
1423:fltk-1.3.4-1/png/pngset.c **** 
 5589              		.loc 1 1423 28 is_stmt 0 view .LVU1545
 5590 0222 4C89EE   		movq	%r13, %rsi
 5591 0225 4531ED   		xorl	%r13d, %r13d
 5592 0228 E90CFFFF 		jmp	.L443
 5592      FF
 5593              	.LVL492:
 5594 022d 0F1F00   		.p2align 4,,10
 5595              		.p2align 3
 5596              	.L446:
 5597              	.LBB245:
 5598              	.LBB242:
 5599              	.LBB239:
1262:fltk-1.3.4-1/png/pngset.c ****    {
 5600              		.loc 1 1262 4 view .LVU1546
 5601 0230 4C89EE   		movq	%r13, %rsi
 5602              	.LVL493:
 5603              		.p2align 4,,10
 5604 0233 0F1F4400 		.p2align 3
 5604      00
 5605              	.L430:
1271:fltk-1.3.4-1/png/pngset.c ****    {
 5606              		.loc 1 1271 4 is_stmt 1 view .LVU1547
1271:fltk-1.3.4-1/png/pngset.c ****    {
 5607              		.loc 1 1271 7 is_stmt 0 view .LVU1548
 5608 0238 4585E4   		testl	%r12d, %r12d
 5609 023b 0F848CFE 		je	.L432
 5609      FFFF
1273:fltk-1.3.4-1/png/pngset.c ****       memcpy(list, add, 4);
 5610              		.loc 1 1273 7 is_stmt 1 view .LVU1549
 5611 0241 8B01     		movl	(%rcx), %eax
 5612 0243 4183C701 		addl	$1, %r15d
 5613              	.LVL494:
1274:fltk-1.3.4-1/png/pngset.c ****       list[4] = (png_byte)keep;
 5614              		.loc 1 1274 7 view .LVU1550
 5615              	.LBB235:
 5616              	.LBI235:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5617              		.loc 2 31 1 view .LVU1551
 5618              	.LBB236:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5619              		.loc 2 34 3 view .LVU1552
 5620              	.LBE236:
 5621              	.LBE235:
1275:fltk-1.3.4-1/png/pngset.c ****    }
 5622              		.loc 1 1275 17 is_stmt 0 view .LVU1553
 5623 0247 44886604 		movb	%r12b, 4(%rsi)
 5624              	.LBB238:
 5625              	.LBB237:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5626              		.loc 2 34 10 view .LVU1554
 5627 024b 8906     		movl	%eax, (%rsi)
 5628              	.LVL495:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5629              		.loc 2 34 10 view .LVU1555
 5630              	.LBE237:
 5631              	.LBE238:
1275:fltk-1.3.4-1/png/pngset.c ****    }
 5632              		.loc 1 1275 7 is_stmt 1 view .LVU1556
 5633 024d E97BFEFF 		jmp	.L432
 5633      FF
 5634              	.LVL496:
 5635              		.p2align 4,,10
 5636 0252 660F1F44 		.p2align 3
 5636      0000
 5637              	.L465:
 5638              		.cfi_def_cfa_offset 8
 5639              		.cfi_restore 3
 5640              		.cfi_restore 6
 5641              		.cfi_restore 12
 5642              		.cfi_restore 13
 5643              		.cfi_restore 14
 5644              		.cfi_restore 15
1275:fltk-1.3.4-1/png/pngset.c ****    }
 5645              		.loc 1 1275 7 is_stmt 0 view .LVU1557
 5646 0258 C3       		ret
 5647              	.LVL497:
 5648 0259 0F1F8000 		.p2align 4,,10
 5648      000000
 5649              		.p2align 3
 5650              	.L435:
 5651              		.cfi_def_cfa_offset 64
 5652              		.cfi_offset 3, -56
 5653              		.cfi_offset 6, -48
 5654              		.cfi_offset 12, -40
 5655              		.cfi_offset 13, -32
 5656              		.cfi_offset 14, -24
 5657              		.cfi_offset 15, -16
1275:fltk-1.3.4-1/png/pngset.c ****    }
 5658              		.loc 1 1275 7 view .LVU1558
 5659              	.LBE239:
 5660              	.LBE242:
1411:fltk-1.3.4-1/png/pngset.c ****       {
 5661              		.loc 1 1411 7 is_stmt 1 view .LVU1559
 5662 0260 488BB508 		movq	1032(%rbp), %rsi
 5662      040000
 5663              	.L440:
1413:fltk-1.3.4-1/png/pngset.c ****             png_free(png_ptr, new_list);
 5664              		.loc 1 1413 10 view .LVU1560
1413:fltk-1.3.4-1/png/pngset.c ****             png_free(png_ptr, new_list);
 5665              		.loc 1 1413 13 is_stmt 0 view .LVU1561
 5666 0267 4C39EE   		cmpq	%r13, %rsi
 5667 026a 74AC     		je	.L429
1414:fltk-1.3.4-1/png/pngset.c **** 
 5668              		.loc 1 1414 13 is_stmt 1 view .LVU1562
 5669 026c 4C89EE   		movq	%r13, %rsi
 5670 026f 4889EF   		movq	%rbp, %rdi
1416:fltk-1.3.4-1/png/pngset.c ****       }
 5671              		.loc 1 1416 19 is_stmt 0 view .LVU1563
 5672 0272 4531ED   		xorl	%r13d, %r13d
1414:fltk-1.3.4-1/png/pngset.c **** 
 5673              		.loc 1 1414 13 view .LVU1564
 5674 0275 E8000000 		call	png_free@PLT
 5674      00
 5675              	.LVL498:
 5676 027a 488BB508 		movq	1032(%rbp), %rsi
 5676      040000
 5677 0281 31C9     		xorl	%ecx, %ecx
 5678 0283 E9A6FEFF 		jmp	.L423
 5678      FF
 5679              	.LVL499:
 5680 0288 0F1F8400 		.p2align 4,,10
 5680      00000000 
 5681              		.p2align 3
 5682              	.L426:
1414:fltk-1.3.4-1/png/pngset.c **** 
 5683              		.loc 1 1414 13 view .LVU1565
 5684              	.LBE245:
1371:fltk-1.3.4-1/png/pngset.c ****    }
 5685              		.loc 1 1371 10 is_stmt 1 view .LVU1566
 5686              	.LBB246:
 5687              	.LBI246:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5688              		.loc 2 31 1 view .LVU1567
 5689              	.LBB247:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5690              		.loc 2 34 3 view .LVU1568
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5691              		.loc 2 34 10 is_stmt 0 view .LVU1569
 5692 0290 488BB508 		movq	1032(%rbp), %rsi
 5692      040000
 5693              	.LBE247:
 5694              	.LBE246:
1371:fltk-1.3.4-1/png/pngset.c ****    }
 5695              		.loc 1 1371 10 view .LVU1570
 5696 0297 438D14BF 		leal	(%r15,%r15,4), %edx
 5697              	.LBB249:
 5698              	.LBB248:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5699              		.loc 2 34 10 view .LVU1571
 5700 029b 4889C7   		movq	%rax, %rdi
 5701 029e E8000000 		call	memcpy@PLT
 5701      00
 5702              	.LVL500:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5703              		.loc 2 34 10 view .LVU1572
 5704 02a3 E9DFFDFF 		jmp	.L427
 5704      FF
 5705              	.LVL501:
 5706 02a8 0F1F8400 		.p2align 4,,10
 5706      00000000 
 5707              		.p2align 3
 5708              	.L422:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 5709              		.loc 2 34 10 view .LVU1573
 5710              	.LBE248:
 5711              	.LBE249:
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5712              		.loc 1 1367 7 is_stmt 1 view .LVU1574
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5713              		.loc 1 1367 18 is_stmt 0 view .LVU1575
 5714 02b0 8D349B   		leal	(%rbx,%rbx,4), %esi
 5715 02b3 4889EF   		movq	%rbp, %rdi
 5716              	.LVL502:
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5717              		.loc 1 1367 18 view .LVU1576
 5718 02b6 E8000000 		call	png_malloc@PLT
 5718      00
 5719              	.LVL503:
1367:fltk-1.3.4-1/png/pngset.c ****           5 * (num_chunks + old_num_chunks)));
 5720              		.loc 1 1367 18 view .LVU1577
 5721 02bb 4989C5   		movq	%rax, %r13
 5722              	.LVL504:
1370:fltk-1.3.4-1/png/pngset.c ****          memcpy(new_list, png_ptr->chunk_list, 5*old_num_chunks);
 5723              		.loc 1 1370 7 is_stmt 1 view .LVU1578
 5724 02be E90CFFFF 		jmp	.L442
 5724      FF
 5725              	.L445:
1370:fltk-1.3.4-1/png/pngset.c ****          memcpy(new_list, png_ptr->chunk_list, 5*old_num_chunks);
 5726              		.loc 1 1370 7 is_stmt 0 view .LVU1579
 5727 02c3 4531FF   		xorl	%r15d, %r15d
 5728 02c6 E9BCFDFF 		jmp	.L427
 5728      FF
 5729              		.cfi_endproc
 5730              	.LFE71:
 5732              		.section	.text.png_set_read_user_chunk_fn,"ax",@progbits
 5733              		.p2align 4
 5734              		.globl	png_set_read_user_chunk_fn
 5736              	png_set_read_user_chunk_fn:
 5737              	.LVL505:
 5738              	.LFB72:
1433:fltk-1.3.4-1/png/pngset.c **** #endif
1434:fltk-1.3.4-1/png/pngset.c **** 
1435:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_READ_USER_CHUNKS_SUPPORTED
1436:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1437:fltk-1.3.4-1/png/pngset.c **** png_set_read_user_chunk_fn(png_structrp png_ptr, png_voidp user_chunk_ptr,
1438:fltk-1.3.4-1/png/pngset.c ****     png_user_chunk_ptr read_user_chunk_fn)
1439:fltk-1.3.4-1/png/pngset.c **** {
 5739              		.loc 1 1439 1 is_stmt 1 view -0
 5740              		.cfi_startproc
 5741              		.loc 1 1439 1 is_stmt 0 view .LVU1581
 5742 0000 F30F1EFA 		endbr64
1440:fltk-1.3.4-1/png/pngset.c ****    png_debug(1, "in png_set_read_user_chunk_fn");
 5743              		.loc 1 1440 4 is_stmt 1 view .LVU1582
1441:fltk-1.3.4-1/png/pngset.c **** 
1442:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL)
 5744              		.loc 1 1442 4 view .LVU1583
 5745              		.loc 1 1442 7 is_stmt 0 view .LVU1584
 5746 0004 4885FF   		testq	%rdi, %rdi
 5747 0007 740E     		je	.L472
1443:fltk-1.3.4-1/png/pngset.c ****       return;
1444:fltk-1.3.4-1/png/pngset.c **** 
1445:fltk-1.3.4-1/png/pngset.c ****    png_ptr->read_user_chunk_fn = read_user_chunk_fn;
 5748              		.loc 1 1445 4 is_stmt 1 view .LVU1585
 5749              		.loc 1 1445 32 is_stmt 0 view .LVU1586
 5750 0009 488997F8 		movq	%rdx, 1016(%rdi)
 5750      030000
1446:fltk-1.3.4-1/png/pngset.c ****    png_ptr->user_chunk_ptr = user_chunk_ptr;
 5751              		.loc 1 1446 4 is_stmt 1 view .LVU1587
 5752              		.loc 1 1446 28 is_stmt 0 view .LVU1588
 5753 0010 4889B7F0 		movq	%rsi, 1008(%rdi)
 5753      030000
 5754              	.L472:
1447:fltk-1.3.4-1/png/pngset.c **** }
 5755              		.loc 1 1447 1 view .LVU1589
 5756 0017 C3       		ret
 5757              		.cfi_endproc
 5758              	.LFE72:
 5760              		.section	.text.png_set_rows,"ax",@progbits
 5761              		.p2align 4
 5762              		.globl	png_set_rows
 5764              	png_set_rows:
 5765              	.LVL506:
 5766              	.LFB73:
1448:fltk-1.3.4-1/png/pngset.c **** #endif
1449:fltk-1.3.4-1/png/pngset.c **** 
1450:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_INFO_IMAGE_SUPPORTED
1451:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1452:fltk-1.3.4-1/png/pngset.c **** png_set_rows(png_const_structrp png_ptr, png_inforp info_ptr,
1453:fltk-1.3.4-1/png/pngset.c ****     png_bytepp row_pointers)
1454:fltk-1.3.4-1/png/pngset.c **** {
 5767              		.loc 1 1454 1 is_stmt 1 view -0
 5768              		.cfi_startproc
 5769              		.loc 1 1454 1 is_stmt 0 view .LVU1591
 5770 0000 F30F1EFA 		endbr64
1455:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "rows");
 5771              		.loc 1 1455 4 is_stmt 1 view .LVU1592
1456:fltk-1.3.4-1/png/pngset.c **** 
1457:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL || info_ptr == NULL)
 5772              		.loc 1 1457 4 view .LVU1593
 5773              		.loc 1 1457 7 is_stmt 0 view .LVU1594
 5774 0004 4885FF   		testq	%rdi, %rdi
 5775 0007 744F     		je	.L489
1454:fltk-1.3.4-1/png/pngset.c ****    png_debug1(1, "in %s storage function", "rows");
 5776              		.loc 1 1454 1 view .LVU1595
 5777 0009 55       		pushq	%rbp
 5778              		.cfi_def_cfa_offset 16
 5779              		.cfi_offset 6, -16
 5780 000a 53       		pushq	%rbx
 5781              		.cfi_def_cfa_offset 24
 5782              		.cfi_offset 3, -24
 5783 000b 4889F3   		movq	%rsi, %rbx
 5784 000e 4883EC08 		subq	$8, %rsp
 5785              		.cfi_def_cfa_offset 32
 5786              		.loc 1 1457 7 view .LVU1596
 5787 0012 4885F6   		testq	%rsi, %rsi
 5788 0015 7433     		je	.L477
1458:fltk-1.3.4-1/png/pngset.c ****       return;
1459:fltk-1.3.4-1/png/pngset.c **** 
1460:fltk-1.3.4-1/png/pngset.c ****    if (info_ptr->row_pointers != NULL &&
 5789              		.loc 1 1460 16 view .LVU1597
 5790 0017 488B8650 		movq	336(%rsi), %rax
 5790      010000
 5791 001e 4889D5   		movq	%rdx, %rbp
 5792              		.loc 1 1460 4 is_stmt 1 view .LVU1598
 5793              		.loc 1 1460 7 is_stmt 0 view .LVU1599
 5794 0021 4885C0   		testq	%rax, %rax
 5795 0024 7411     		je	.L481
 5796              		.loc 1 1460 39 discriminator 1 view .LVU1600
 5797 0026 4839D0   		cmpq	%rdx, %rax
 5798 0029 7418     		je	.L483
1461:fltk-1.3.4-1/png/pngset.c ****        (info_ptr->row_pointers != row_pointers))
1462:fltk-1.3.4-1/png/pngset.c ****       png_free_data(png_ptr, info_ptr, PNG_FREE_ROWS, 0);
 5799              		.loc 1 1462 7 is_stmt 1 view .LVU1601
 5800 002b 31C9     		xorl	%ecx, %ecx
 5801 002d BA400000 		movl	$64, %edx
 5801      00
 5802              	.LVL507:
 5803              		.loc 1 1462 7 is_stmt 0 view .LVU1602
 5804 0032 E8000000 		call	png_free_data@PLT
 5804      00
 5805              	.LVL508:
 5806              	.L481:
1463:fltk-1.3.4-1/png/pngset.c **** 
1464:fltk-1.3.4-1/png/pngset.c ****    info_ptr->row_pointers = row_pointers;
 5807              		.loc 1 1464 4 is_stmt 1 view .LVU1603
 5808              		.loc 1 1464 27 is_stmt 0 view .LVU1604
 5809 0037 4889AB50 		movq	%rbp, 336(%rbx)
 5809      010000
1465:fltk-1.3.4-1/png/pngset.c **** 
1466:fltk-1.3.4-1/png/pngset.c ****    if (row_pointers != NULL)
 5810              		.loc 1 1466 4 is_stmt 1 view .LVU1605
 5811              		.loc 1 1466 7 is_stmt 0 view .LVU1606
 5812 003e 4885ED   		testq	%rbp, %rbp
 5813 0041 7407     		je	.L477
 5814              	.L483:
1467:fltk-1.3.4-1/png/pngset.c ****       info_ptr->valid |= PNG_INFO_IDAT;
 5815              		.loc 1 1467 7 is_stmt 1 view .LVU1607
 5816              		.loc 1 1467 23 is_stmt 0 view .LVU1608
 5817 0043 814B0800 		orl	$32768, 8(%rbx)
 5817      800000
 5818              	.LVL509:
 5819              	.L477:
1468:fltk-1.3.4-1/png/pngset.c **** }
 5820              		.loc 1 1468 1 view .LVU1609
 5821 004a 4883C408 		addq	$8, %rsp
 5822              		.cfi_def_cfa_offset 24
 5823 004e 5B       		popq	%rbx
 5824              		.cfi_def_cfa_offset 16
 5825              	.LVL510:
 5826              		.loc 1 1468 1 view .LVU1610
 5827 004f 5D       		popq	%rbp
 5828              		.cfi_def_cfa_offset 8
 5829 0050 C3       		ret
 5830              	.LVL511:
 5831              		.p2align 4,,10
 5832 0051 0F1F8000 		.p2align 3
 5832      000000
 5833              	.L489:
 5834              		.cfi_restore 3
 5835              		.cfi_restore 6
 5836              		.loc 1 1468 1 view .LVU1611
 5837 0058 C3       		ret
 5838              		.cfi_endproc
 5839              	.LFE73:
 5841              		.section	.rodata.png_set_compression_buffer_size.str1.8,"aMS",@progbits,1
 5842              		.align 8
 5843              	.LC48:
 5844 0000 696E7661 		.string	"invalid compression buffer size"
 5844      6C696420 
 5844      636F6D70 
 5844      72657373 
 5844      696F6E20 
 5845              		.align 8
 5846              	.LC49:
 5847 0020 436F6D70 		.string	"Compression buffer size cannot be changed because it is in use"
 5847      72657373 
 5847      696F6E20 
 5847      62756666 
 5847      65722073 
 5848 005f 00       		.align 8
 5849              	.LC50:
 5850 0060 436F6D70 		.string	"Compression buffer size cannot be reduced below 6"
 5850      72657373 
 5850      696F6E20 
 5850      62756666 
 5850      65722073 
 5851              		.section	.text.png_set_compression_buffer_size,"ax",@progbits
 5852              		.p2align 4
 5853              		.globl	png_set_compression_buffer_size
 5855              	png_set_compression_buffer_size:
 5856              	.LVL512:
 5857              	.LFB74:
1469:fltk-1.3.4-1/png/pngset.c **** #endif
1470:fltk-1.3.4-1/png/pngset.c **** 
1471:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1472:fltk-1.3.4-1/png/pngset.c **** png_set_compression_buffer_size(png_structrp png_ptr, png_size_t size)
1473:fltk-1.3.4-1/png/pngset.c **** {
 5858              		.loc 1 1473 1 is_stmt 1 view -0
 5859              		.cfi_startproc
 5860              		.loc 1 1473 1 is_stmt 0 view .LVU1613
 5861 0000 F30F1EFA 		endbr64
1474:fltk-1.3.4-1/png/pngset.c ****     if (png_ptr == NULL)
 5862              		.loc 1 1474 5 is_stmt 1 view .LVU1614
 5863              		.loc 1 1474 8 is_stmt 0 view .LVU1615
 5864 0004 4885FF   		testq	%rdi, %rdi
 5865 0007 0F849300 		je	.L502
 5865      0000
1473:fltk-1.3.4-1/png/pngset.c ****     if (png_ptr == NULL)
 5866              		.loc 1 1473 1 view .LVU1616
 5867 000d 53       		pushq	%rbx
 5868              		.cfi_def_cfa_offset 16
 5869              		.cfi_offset 3, -16
1475:fltk-1.3.4-1/png/pngset.c ****        return;
1476:fltk-1.3.4-1/png/pngset.c **** 
1477:fltk-1.3.4-1/png/pngset.c ****     if (size == 0 || size > PNG_UINT_31_MAX)
 5870              		.loc 1 1477 19 view .LVU1617
 5871 000e 488D46FF 		leaq	-1(%rsi), %rax
 5872 0012 4889F3   		movq	%rsi, %rbx
 5873              		.loc 1 1477 5 is_stmt 1 view .LVU1618
1473:fltk-1.3.4-1/png/pngset.c ****     if (png_ptr == NULL)
 5874              		.loc 1 1473 1 is_stmt 0 view .LVU1619
 5875 0015 4883EC10 		subq	$16, %rsp
 5876              		.cfi_def_cfa_offset 32
 5877              		.loc 1 1477 8 view .LVU1620
 5878 0019 483DFEFF 		cmpq	$2147483646, %rax
 5878      FF7F
 5879 001f 0F879400 		ja	.L505
 5879      0000
1478:fltk-1.3.4-1/png/pngset.c ****        png_error(png_ptr, "invalid compression buffer size");
1479:fltk-1.3.4-1/png/pngset.c **** 
1480:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_SEQUENTIAL_READ_SUPPORTED
1481:fltk-1.3.4-1/png/pngset.c ****       if ((png_ptr->mode & PNG_IS_READ_STRUCT) != 0)
 5880              		.loc 1 1481 7 is_stmt 1 view .LVU1621
 5881              		.loc 1 1481 10 is_stmt 0 view .LVU1622
 5882 0025 F6872D01 		testb	$-128, 301(%rdi)
 5882      000080
 5883 002c 7522     		jne	.L506
1482:fltk-1.3.4-1/png/pngset.c ****       {
1483:fltk-1.3.4-1/png/pngset.c ****          png_ptr->IDAT_read_size = (png_uint_32)size; /* checked above */
1484:fltk-1.3.4-1/png/pngset.c ****          return;
1485:fltk-1.3.4-1/png/pngset.c ****       }
1486:fltk-1.3.4-1/png/pngset.c **** #  endif
1487:fltk-1.3.4-1/png/pngset.c **** 
1488:fltk-1.3.4-1/png/pngset.c **** #  ifdef PNG_WRITE_SUPPORTED
1489:fltk-1.3.4-1/png/pngset.c ****       if ((png_ptr->mode & PNG_IS_READ_STRUCT) == 0)
 5884              		.loc 1 1489 7 is_stmt 1 view .LVU1623
1490:fltk-1.3.4-1/png/pngset.c ****       {
1491:fltk-1.3.4-1/png/pngset.c ****          if (png_ptr->zowner != 0)
 5885              		.loc 1 1491 10 view .LVU1624
 5886              		.loc 1 1491 13 is_stmt 0 view .LVU1625
 5887 002e 8B873801 		movl	312(%rdi), %eax
 5887      0000
 5888 0034 85C0     		testl	%eax, %eax
 5889 0036 7550     		jne	.L507
1492:fltk-1.3.4-1/png/pngset.c ****          {
1493:fltk-1.3.4-1/png/pngset.c ****             png_warning(png_ptr,
1494:fltk-1.3.4-1/png/pngset.c ****               "Compression buffer size cannot be changed because it is in use");
1495:fltk-1.3.4-1/png/pngset.c ****             return;
1496:fltk-1.3.4-1/png/pngset.c ****          }
1497:fltk-1.3.4-1/png/pngset.c **** 
1498:fltk-1.3.4-1/png/pngset.c ****          if (size > ZLIB_IO_MAX)
 5890              		.loc 1 1498 10 is_stmt 1 view .LVU1626
1499:fltk-1.3.4-1/png/pngset.c ****          {
1500:fltk-1.3.4-1/png/pngset.c ****             png_warning(png_ptr,
1501:fltk-1.3.4-1/png/pngset.c ****                "Compression buffer size limited to system maximum");
1502:fltk-1.3.4-1/png/pngset.c ****             size = ZLIB_IO_MAX; /* must fit */
1503:fltk-1.3.4-1/png/pngset.c ****          }
1504:fltk-1.3.4-1/png/pngset.c **** 
1505:fltk-1.3.4-1/png/pngset.c ****          else if (size < 6)
 5891              		.loc 1 1505 15 view .LVU1627
 5892              		.loc 1 1505 18 is_stmt 0 view .LVU1628
 5893 0038 4883FE05 		cmpq	$5, %rsi
 5894 003c 766A     		jbe	.L508
1506:fltk-1.3.4-1/png/pngset.c ****          {
1507:fltk-1.3.4-1/png/pngset.c ****             /* Deflate will potentially go into an infinite loop on a SYNC_FLUSH
1508:fltk-1.3.4-1/png/pngset.c ****              * if this is permitted.
1509:fltk-1.3.4-1/png/pngset.c ****              */
1510:fltk-1.3.4-1/png/pngset.c ****             png_warning(png_ptr,
1511:fltk-1.3.4-1/png/pngset.c ****                "Compression buffer size cannot be reduced below 6");
1512:fltk-1.3.4-1/png/pngset.c ****             return;
1513:fltk-1.3.4-1/png/pngset.c ****          }
1514:fltk-1.3.4-1/png/pngset.c **** 
1515:fltk-1.3.4-1/png/pngset.c ****          if (png_ptr->zbuffer_size != size)
 5895              		.loc 1 1515 10 is_stmt 1 view .LVU1629
 5896              		.loc 1 1515 21 is_stmt 0 view .LVU1630
 5897 003e 8B87B801 		movl	440(%rdi), %eax
 5897      0000
 5898              		.loc 1 1515 13 view .LVU1631
 5899 0044 4839F0   		cmpq	%rsi, %rax
 5900 0047 7517     		jne	.L509
1516:fltk-1.3.4-1/png/pngset.c ****          {
1517:fltk-1.3.4-1/png/pngset.c ****             png_free_buffer_list(png_ptr, &png_ptr->zbuffer_list);
1518:fltk-1.3.4-1/png/pngset.c ****             png_ptr->zbuffer_size = (uInt)size;
1519:fltk-1.3.4-1/png/pngset.c ****          }
1520:fltk-1.3.4-1/png/pngset.c ****       }
1521:fltk-1.3.4-1/png/pngset.c **** #  endif
1522:fltk-1.3.4-1/png/pngset.c **** }
 5901              		.loc 1 1522 1 view .LVU1632
 5902 0049 4883C410 		addq	$16, %rsp
 5903              		.cfi_remember_state
 5904              		.cfi_def_cfa_offset 16
 5905 004d 5B       		popq	%rbx
 5906              		.cfi_def_cfa_offset 8
 5907 004e C3       		ret
 5908              	.LVL513:
 5909 004f 90       		.p2align 4,,10
 5910              		.p2align 3
 5911              	.L506:
 5912              		.cfi_restore_state
1483:fltk-1.3.4-1/png/pngset.c ****          return;
 5913              		.loc 1 1483 10 is_stmt 1 view .LVU1633
1483:fltk-1.3.4-1/png/pngset.c ****          return;
 5914              		.loc 1 1483 36 is_stmt 0 view .LVU1634
 5915 0050 89B7A804 		movl	%esi, 1192(%rdi)
 5915      0000
1484:fltk-1.3.4-1/png/pngset.c ****       }
 5916              		.loc 1 1484 10 is_stmt 1 view .LVU1635
 5917              		.loc 1 1522 1 is_stmt 0 view .LVU1636
 5918 0056 4883C410 		addq	$16, %rsp
 5919              		.cfi_remember_state
 5920              		.cfi_def_cfa_offset 16
 5921 005a 5B       		popq	%rbx
 5922              		.cfi_def_cfa_offset 8
 5923              	.LVL514:
 5924              		.loc 1 1522 1 view .LVU1637
 5925 005b C3       		ret
 5926              	.LVL515:
 5927 005c 0F1F4000 		.p2align 4,,10
 5928              		.p2align 3
 5929              	.L509:
 5930              		.cfi_restore_state
1517:fltk-1.3.4-1/png/pngset.c ****             png_ptr->zbuffer_size = (uInt)size;
 5931              		.loc 1 1517 13 is_stmt 1 view .LVU1638
 5932 0060 488DB7B0 		leaq	432(%rdi), %rsi
 5932      010000
 5933 0067 48897C24 		movq	%rdi, 8(%rsp)
 5933      08
 5934 006c E8000000 		call	png_free_buffer_list@PLT
 5934      00
 5935              	.LVL516:
1518:fltk-1.3.4-1/png/pngset.c ****          }
 5936              		.loc 1 1518 13 view .LVU1639
1518:fltk-1.3.4-1/png/pngset.c ****          }
 5937              		.loc 1 1518 37 is_stmt 0 view .LVU1640
 5938 0071 488B7C24 		movq	8(%rsp), %rdi
 5938      08
 5939 0076 899FB801 		movl	%ebx, 440(%rdi)
 5939      0000
 5940              		.loc 1 1522 1 view .LVU1641
 5941 007c 4883C410 		addq	$16, %rsp
 5942              		.cfi_remember_state
 5943              		.cfi_def_cfa_offset 16
 5944 0080 5B       		popq	%rbx
 5945              		.cfi_def_cfa_offset 8
 5946              	.LVL517:
 5947              		.loc 1 1522 1 view .LVU1642
 5948 0081 C3       		ret
 5949              	.LVL518:
 5950              		.p2align 4,,10
 5951 0082 660F1F44 		.p2align 3
 5951      0000
 5952              	.L507:
 5953              		.cfi_restore_state
1493:fltk-1.3.4-1/png/pngset.c ****               "Compression buffer size cannot be changed because it is in use");
 5954              		.loc 1 1493 13 is_stmt 1 view .LVU1643
 5955              		.loc 1 1522 1 is_stmt 0 view .LVU1644
 5956 0088 4883C410 		addq	$16, %rsp
 5957              		.cfi_def_cfa_offset 16
1493:fltk-1.3.4-1/png/pngset.c ****               "Compression buffer size cannot be changed because it is in use");
 5958              		.loc 1 1493 13 view .LVU1645
 5959 008c 488D3500 		leaq	.LC49(%rip), %rsi
 5959      000000
 5960              		.loc 1 1522 1 view .LVU1646
 5961 0093 5B       		popq	%rbx
 5962              		.cfi_restore 3
 5963              		.cfi_def_cfa_offset 8
 5964              	.LVL519:
1493:fltk-1.3.4-1/png/pngset.c ****               "Compression buffer size cannot be changed because it is in use");
 5965              		.loc 1 1493 13 view .LVU1647
 5966 0094 E9000000 		jmp	png_warning@PLT
 5966      00
 5967              	.LVL520:
 5968 0099 0F1F8000 		.p2align 4,,10
 5968      000000
 5969              		.p2align 3
 5970              	.L502:
1493:fltk-1.3.4-1/png/pngset.c ****               "Compression buffer size cannot be changed because it is in use");
 5971              		.loc 1 1493 13 view .LVU1648
 5972 00a0 C3       		ret
 5973              	.LVL521:
 5974              		.p2align 4,,10
 5975 00a1 0F1F8000 		.p2align 3
 5975      000000
 5976              	.L508:
 5977              		.cfi_def_cfa_offset 32
 5978              		.cfi_offset 3, -16
1510:fltk-1.3.4-1/png/pngset.c ****                "Compression buffer size cannot be reduced below 6");
 5979              		.loc 1 1510 13 is_stmt 1 view .LVU1649
 5980              		.loc 1 1522 1 is_stmt 0 view .LVU1650
 5981 00a8 4883C410 		addq	$16, %rsp
 5982              		.cfi_remember_state
 5983              		.cfi_def_cfa_offset 16
1510:fltk-1.3.4-1/png/pngset.c ****                "Compression buffer size cannot be reduced below 6");
 5984              		.loc 1 1510 13 view .LVU1651
 5985 00ac 488D3500 		leaq	.LC50(%rip), %rsi
 5985      000000
 5986              		.loc 1 1522 1 view .LVU1652
 5987 00b3 5B       		popq	%rbx
 5988              		.cfi_restore 3
 5989              		.cfi_def_cfa_offset 8
 5990              	.LVL522:
1510:fltk-1.3.4-1/png/pngset.c ****                "Compression buffer size cannot be reduced below 6");
 5991              		.loc 1 1510 13 view .LVU1653
 5992 00b4 E9000000 		jmp	png_warning@PLT
 5992      00
 5993              	.LVL523:
 5994              	.L505:
 5995              		.cfi_restore_state
1478:fltk-1.3.4-1/png/pngset.c **** 
 5996              		.loc 1 1478 8 is_stmt 1 view .LVU1654
 5997 00b9 488D3500 		leaq	.LC48(%rip), %rsi
 5997      000000
 5998 00c0 E8000000 		call	png_error@PLT
 5998      00
 5999              	.LVL524:
1478:fltk-1.3.4-1/png/pngset.c **** 
 6000              		.loc 1 1478 8 is_stmt 0 view .LVU1655
 6001              		.cfi_endproc
 6002              	.LFE74:
 6004              		.section	.text.png_set_invalid,"ax",@progbits
 6005              		.p2align 4
 6006              		.globl	png_set_invalid
 6008              	png_set_invalid:
 6009              	.LVL525:
 6010              	.LFB75:
1523:fltk-1.3.4-1/png/pngset.c **** 
1524:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1525:fltk-1.3.4-1/png/pngset.c **** png_set_invalid(png_const_structrp png_ptr, png_inforp info_ptr, int mask)
1526:fltk-1.3.4-1/png/pngset.c **** {
 6011              		.loc 1 1526 1 is_stmt 1 view -0
 6012              		.cfi_startproc
 6013              		.loc 1 1526 1 is_stmt 0 view .LVU1657
 6014 0000 F30F1EFA 		endbr64
1527:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr != NULL && info_ptr != NULL)
 6015              		.loc 1 1527 4 is_stmt 1 view .LVU1658
 6016              		.loc 1 1527 7 is_stmt 0 view .LVU1659
 6017 0004 4885FF   		testq	%rdi, %rdi
 6018 0007 740A     		je	.L510
 6019 0009 4885F6   		testq	%rsi, %rsi
 6020 000c 7405     		je	.L510
1528:fltk-1.3.4-1/png/pngset.c ****       info_ptr->valid &= ~mask;
 6021              		.loc 1 1528 7 is_stmt 1 view .LVU1660
 6022              		.loc 1 1528 26 is_stmt 0 view .LVU1661
 6023 000e F7D2     		notl	%edx
 6024              	.LVL526:
 6025              		.loc 1 1528 23 view .LVU1662
 6026 0010 215608   		andl	%edx, 8(%rsi)
 6027              	.LVL527:
 6028              	.L510:
1529:fltk-1.3.4-1/png/pngset.c **** }
 6029              		.loc 1 1529 1 view .LVU1663
 6030 0013 C3       		ret
 6031              		.cfi_endproc
 6032              	.LFE75:
 6034              		.section	.text.png_set_user_limits,"ax",@progbits
 6035              		.p2align 4
 6036              		.globl	png_set_user_limits
 6038              	png_set_user_limits:
 6039              	.LVL528:
 6040              	.LFB76:
1530:fltk-1.3.4-1/png/pngset.c **** 
1531:fltk-1.3.4-1/png/pngset.c **** 
1532:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_SET_USER_LIMITS_SUPPORTED
1533:fltk-1.3.4-1/png/pngset.c **** /* This function was added to libpng 1.2.6 */
1534:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1535:fltk-1.3.4-1/png/pngset.c **** png_set_user_limits (png_structrp png_ptr, png_uint_32 user_width_max,
1536:fltk-1.3.4-1/png/pngset.c ****     png_uint_32 user_height_max)
1537:fltk-1.3.4-1/png/pngset.c **** {
 6041              		.loc 1 1537 1 is_stmt 1 view -0
 6042              		.cfi_startproc
 6043              		.loc 1 1537 1 is_stmt 0 view .LVU1665
 6044 0000 F30F1EFA 		endbr64
1538:fltk-1.3.4-1/png/pngset.c ****    /* Images with dimensions larger than these limits will be
1539:fltk-1.3.4-1/png/pngset.c ****     * rejected by png_set_IHDR().  To accept any PNG datastream
1540:fltk-1.3.4-1/png/pngset.c ****     * regardless of dimensions, set both limits to 0x7ffffffL.
1541:fltk-1.3.4-1/png/pngset.c ****     */
1542:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr == NULL)
 6045              		.loc 1 1542 4 is_stmt 1 view .LVU1666
 6046              		.loc 1 1542 7 is_stmt 0 view .LVU1667
 6047 0004 4885FF   		testq	%rdi, %rdi
 6048 0007 740C     		je	.L518
1543:fltk-1.3.4-1/png/pngset.c ****       return;
1544:fltk-1.3.4-1/png/pngset.c **** 
1545:fltk-1.3.4-1/png/pngset.c ****    png_ptr->user_width_max = user_width_max;
 6049              		.loc 1 1545 4 is_stmt 1 view .LVU1668
 6050              		.loc 1 1545 28 is_stmt 0 view .LVU1669
 6051 0009 89B75C04 		movl	%esi, 1116(%rdi)
 6051      0000
1546:fltk-1.3.4-1/png/pngset.c ****    png_ptr->user_height_max = user_height_max;
 6052              		.loc 1 1546 4 is_stmt 1 view .LVU1670
 6053              		.loc 1 1546 29 is_stmt 0 view .LVU1671
 6054 000f 89976004 		movl	%edx, 1120(%rdi)
 6054      0000
 6055              	.L518:
1547:fltk-1.3.4-1/png/pngset.c **** }
 6056              		.loc 1 1547 1 view .LVU1672
 6057 0015 C3       		ret
 6058              		.cfi_endproc
 6059              	.LFE76:
 6061              		.section	.text.png_set_chunk_cache_max,"ax",@progbits
 6062              		.p2align 4
 6063              		.globl	png_set_chunk_cache_max
 6065              	png_set_chunk_cache_max:
 6066              	.LVL529:
 6067              	.LFB77:
1548:fltk-1.3.4-1/png/pngset.c **** 
1549:fltk-1.3.4-1/png/pngset.c **** /* This function was added to libpng 1.4.0 */
1550:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1551:fltk-1.3.4-1/png/pngset.c **** png_set_chunk_cache_max (png_structrp png_ptr, png_uint_32 user_chunk_cache_max)
1552:fltk-1.3.4-1/png/pngset.c **** {
 6068              		.loc 1 1552 1 is_stmt 1 view -0
 6069              		.cfi_startproc
 6070              		.loc 1 1552 1 is_stmt 0 view .LVU1674
 6071 0000 F30F1EFA 		endbr64
1553:fltk-1.3.4-1/png/pngset.c ****     if (png_ptr != NULL)
 6072              		.loc 1 1553 5 is_stmt 1 view .LVU1675
 6073              		.loc 1 1553 8 is_stmt 0 view .LVU1676
 6074 0004 4885FF   		testq	%rdi, %rdi
 6075 0007 7406     		je	.L523
1554:fltk-1.3.4-1/png/pngset.c ****        png_ptr->user_chunk_cache_max = user_chunk_cache_max;
 6076              		.loc 1 1554 8 is_stmt 1 view .LVU1677
 6077              		.loc 1 1554 38 is_stmt 0 view .LVU1678
 6078 0009 89B76404 		movl	%esi, 1124(%rdi)
 6078      0000
 6079              	.L523:
1555:fltk-1.3.4-1/png/pngset.c **** }
 6080              		.loc 1 1555 1 view .LVU1679
 6081 000f C3       		ret
 6082              		.cfi_endproc
 6083              	.LFE77:
 6085              		.section	.text.png_set_chunk_malloc_max,"ax",@progbits
 6086              		.p2align 4
 6087              		.globl	png_set_chunk_malloc_max
 6089              	png_set_chunk_malloc_max:
 6090              	.LVL530:
 6091              	.LFB78:
1556:fltk-1.3.4-1/png/pngset.c **** 
1557:fltk-1.3.4-1/png/pngset.c **** /* This function was added to libpng 1.4.1 */
1558:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1559:fltk-1.3.4-1/png/pngset.c **** png_set_chunk_malloc_max (png_structrp png_ptr,
1560:fltk-1.3.4-1/png/pngset.c ****     png_alloc_size_t user_chunk_malloc_max)
1561:fltk-1.3.4-1/png/pngset.c **** {
 6092              		.loc 1 1561 1 is_stmt 1 view -0
 6093              		.cfi_startproc
 6094              		.loc 1 1561 1 is_stmt 0 view .LVU1681
 6095 0000 F30F1EFA 		endbr64
1562:fltk-1.3.4-1/png/pngset.c ****    if (png_ptr != NULL)
 6096              		.loc 1 1562 4 is_stmt 1 view .LVU1682
 6097              		.loc 1 1562 7 is_stmt 0 view .LVU1683
 6098 0004 4885FF   		testq	%rdi, %rdi
 6099 0007 7407     		je	.L528
1563:fltk-1.3.4-1/png/pngset.c ****       png_ptr->user_chunk_malloc_max = user_chunk_malloc_max;
 6100              		.loc 1 1563 7 is_stmt 1 view .LVU1684
 6101              		.loc 1 1563 38 is_stmt 0 view .LVU1685
 6102 0009 4889B768 		movq	%rsi, 1128(%rdi)
 6102      040000
 6103              	.L528:
1564:fltk-1.3.4-1/png/pngset.c **** }
 6104              		.loc 1 1564 1 view .LVU1686
 6105 0010 C3       		ret
 6106              		.cfi_endproc
 6107              	.LFE78:
 6109              		.section	.text.png_set_benign_errors,"ax",@progbits
 6110              		.p2align 4
 6111              		.globl	png_set_benign_errors
 6113              	png_set_benign_errors:
 6114              	.LVL531:
 6115              	.LFB79:
1565:fltk-1.3.4-1/png/pngset.c **** #endif /* ?SET_USER_LIMITS */
1566:fltk-1.3.4-1/png/pngset.c **** 
1567:fltk-1.3.4-1/png/pngset.c **** 
1568:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_BENIGN_ERRORS_SUPPORTED
1569:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1570:fltk-1.3.4-1/png/pngset.c **** png_set_benign_errors(png_structrp png_ptr, int allowed)
1571:fltk-1.3.4-1/png/pngset.c **** {
 6116              		.loc 1 1571 1 is_stmt 1 view -0
 6117              		.cfi_startproc
 6118              		.loc 1 1571 1 is_stmt 0 view .LVU1688
 6119 0000 F30F1EFA 		endbr64
1572:fltk-1.3.4-1/png/pngset.c ****    png_debug(1, "in png_set_benign_errors");
 6120              		.loc 1 1572 4 is_stmt 1 view .LVU1689
1573:fltk-1.3.4-1/png/pngset.c **** 
1574:fltk-1.3.4-1/png/pngset.c ****    /* If allowed is 1, png_benign_error() is treated as a warning.
1575:fltk-1.3.4-1/png/pngset.c ****     *
1576:fltk-1.3.4-1/png/pngset.c ****     * If allowed is 0, png_benign_error() is treated as an error (which
1577:fltk-1.3.4-1/png/pngset.c ****     * is the default behavior if png_set_benign_errors() is not called).
1578:fltk-1.3.4-1/png/pngset.c ****     */
1579:fltk-1.3.4-1/png/pngset.c **** 
1580:fltk-1.3.4-1/png/pngset.c ****    if (allowed != 0)
 6121              		.loc 1 1580 4 view .LVU1690
 6122 0004 8B873001 		movl	304(%rdi), %eax
 6122      0000
1581:fltk-1.3.4-1/png/pngset.c ****       png_ptr->flags |= PNG_FLAG_BENIGN_ERRORS_WARN |
 6123              		.loc 1 1581 22 is_stmt 0 view .LVU1691
 6124 000a 89C2     		movl	%eax, %edx
 6125 000c 25FFFF8F 		andl	$-7340033, %eax
 6125      FF
 6126 0011 81CA0000 		orl	$7340032, %edx
 6126      7000
 6127 0017 85F6     		testl	%esi, %esi
 6128 0019 0F45C2   		cmovne	%edx, %eax
 6129 001c 89873001 		movl	%eax, 304(%rdi)
 6129      0000
1582:fltk-1.3.4-1/png/pngset.c ****          PNG_FLAG_APP_WARNINGS_WARN | PNG_FLAG_APP_ERRORS_WARN;
1583:fltk-1.3.4-1/png/pngset.c **** 
1584:fltk-1.3.4-1/png/pngset.c ****    else
1585:fltk-1.3.4-1/png/pngset.c ****       png_ptr->flags &= ~(PNG_FLAG_BENIGN_ERRORS_WARN |
1586:fltk-1.3.4-1/png/pngset.c ****          PNG_FLAG_APP_WARNINGS_WARN | PNG_FLAG_APP_ERRORS_WARN);
1587:fltk-1.3.4-1/png/pngset.c **** }
 6130              		.loc 1 1587 1 view .LVU1692
 6131 0022 C3       		ret
 6132              		.cfi_endproc
 6133              	.LFE79:
 6135              		.section	.text.png_set_check_for_invalid_index,"ax",@progbits
 6136              		.p2align 4
 6137              		.globl	png_set_check_for_invalid_index
 6139              	png_set_check_for_invalid_index:
 6140              	.LVL532:
 6141              	.LFB80:
1588:fltk-1.3.4-1/png/pngset.c **** #endif /* BENIGN_ERRORS */
1589:fltk-1.3.4-1/png/pngset.c **** 
1590:fltk-1.3.4-1/png/pngset.c **** #ifdef PNG_CHECK_FOR_INVALID_INDEX_SUPPORTED
1591:fltk-1.3.4-1/png/pngset.c ****    /* Whether to report invalid palette index; added at libng-1.5.10.
1592:fltk-1.3.4-1/png/pngset.c ****     * It is possible for an indexed (color-type==3) PNG file to contain
1593:fltk-1.3.4-1/png/pngset.c ****     * pixels with invalid (out-of-range) indexes if the PLTE chunk has
1594:fltk-1.3.4-1/png/pngset.c ****     * fewer entries than the image's bit-depth would allow. We recover
1595:fltk-1.3.4-1/png/pngset.c ****     * from this gracefully by filling any incomplete palette with zeros
1596:fltk-1.3.4-1/png/pngset.c ****     * (opaque black).  By default, when this occurs libpng will issue
1597:fltk-1.3.4-1/png/pngset.c ****     * a benign error.  This API can be used to override that behavior.
1598:fltk-1.3.4-1/png/pngset.c ****     */
1599:fltk-1.3.4-1/png/pngset.c **** void PNGAPI
1600:fltk-1.3.4-1/png/pngset.c **** png_set_check_for_invalid_index(png_structrp png_ptr, int allowed)
1601:fltk-1.3.4-1/png/pngset.c **** {
 6142              		.loc 1 1601 1 is_stmt 1 view -0
 6143              		.cfi_startproc
 6144              		.loc 1 1601 1 is_stmt 0 view .LVU1694
 6145 0000 F30F1EFA 		endbr64
1602:fltk-1.3.4-1/png/pngset.c ****    png_debug(1, "in png_set_check_for_invalid_index");
 6146              		.loc 1 1602 4 is_stmt 1 view .LVU1695
1603:fltk-1.3.4-1/png/pngset.c **** 
1604:fltk-1.3.4-1/png/pngset.c ****    if (allowed > 0)
 6147              		.loc 1 1604 4 view .LVU1696
 6148              		.loc 1 1604 7 is_stmt 0 view .LVU1697
 6149 0004 31C0     		xorl	%eax, %eax
 6150 0006 85F6     		testl	%esi, %esi
 6151 0008 0F9EC0   		setle	%al
 6152 000b F7D8     		negl	%eax
 6153 000d 89876C02 		movl	%eax, 620(%rdi)
 6153      0000
1605:fltk-1.3.4-1/png/pngset.c ****       png_ptr->num_palette_max = 0;
1606:fltk-1.3.4-1/png/pngset.c **** 
1607:fltk-1.3.4-1/png/pngset.c ****    else
1608:fltk-1.3.4-1/png/pngset.c ****       png_ptr->num_palette_max = -1;
1609:fltk-1.3.4-1/png/pngset.c **** }
 6154              		.loc 1 1609 1 view .LVU1698
 6155 0013 C3       		ret
 6156              		.cfi_endproc
 6157              	.LFE80:
 6159              		.section	.rodata.chunks_to_ignore.7077,"a"
 6160              		.align 32
 6163              	chunks_to_ignore.7077:
 6164 0000 624B4744 		.string	"bKGD"
 6164      00
 6165 0005 6348524D 		.string	"cHRM"
 6165      00
 6166 000a 67414D41 		.string	"gAMA"
 6166      00
 6167 000f 68495354 		.string	"hIST"
 6167      00
 6168 0014 69434350 		.string	"iCCP"
 6168      00
 6169 0019 69545874 		.string	"iTXt"
 6169      00
 6170 001e 6F464673 		.string	"oFFs"
 6170      00
 6171 0023 7043414C 		.string	"pCAL"
 6171      00
 6172 0028 70485973 		.string	"pHYs"
 6172      00
 6173 002d 73424954 		.string	"sBIT"
 6173      00
 6174 0032 7343414C 		.string	"sCAL"
 6174      00
 6175 0037 73504C54 		.string	"sPLT"
 6175      00
 6176 003c 73544552 		.string	"sTER"
 6176      00
 6177 0041 73524742 		.string	"sRGB"
 6177      00
 6178 0046 74455874 		.string	"tEXt"
 6178      00
 6179 004b 74494D45 		.string	"tIME"
 6179      00
 6180 0050 7A545874 		.string	"zTXt"
 6180      00
 6181              		.text
 6182              	.Letext0:
 6183              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 6184              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 6185              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 6186              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 6187              		.file 7 "/usr/include/stdio.h"
 6188              		.file 8 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 6189              		.file 9 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 6190              		.file 10 "/usr/include/setjmp.h"
 6191              		.file 11 "/usr/include/time.h"
 6192              		.file 12 "fltk-1.3.4-1/png/pngconf.h"
 6193              		.file 13 "fltk-1.3.4-1/png/png.h"
 6194              		.file 14 "fltk-1.3.4-1/png/pngstruct.h"
 6195              		.file 15 "fltk-1.3.4-1/png/pnginfo.h"
 6196              		.file 16 "/usr/include/zconf.h"
 6197              		.file 17 "/usr/include/unistd.h"
 6198              		.file 18 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 6199              		.file 19 "/usr/include/zlib.h"
 6200              		.file 20 "fltk-1.3.4-1/png/pngpriv.h"
 6201              		.file 21 "/usr/include/string.h"
 6202              		.file 22 "<built-in>"
 39257              		.section	.note.gnu.property,"a"
 39258              		.align 8
 39259 0000 04000000 		.long	 1f - 0f
 39260 0004 10000000 		.long	 4f - 1f
 39261 0008 05000000 		.long	 5
 39262              	0:
 39263 000c 474E5500 		.string	 "GNU"
 39264              	1:
 39265              		.align 8
 39266 0010 020000C0 		.long	 0xc0000002
 39267 0014 04000000 		.long	 3f - 2f
 39268              	2:
 39269 0018 03000000 		.long	 0x3
 39270              	3:
 39271 001c 00000000 		.align 8
 39272              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngset.c
     /tmp/ccnoGui4.s:14     .text.check_location:0000000000000000 check_location
     /tmp/ccnoGui4.s:127    .text.png_set_bKGD:0000000000000000 png_set_bKGD
     /tmp/ccnoGui4.s:166    .text.png_set_cHRM_fixed:0000000000000000 png_set_cHRM_fixed
     /tmp/ccnoGui4.s:288    .text.png_set_cHRM_XYZ_fixed:0000000000000000 png_set_cHRM_XYZ_fixed
     /tmp/ccnoGui4.s:431    .text.png_set_cHRM:0000000000000000 png_set_cHRM
     /tmp/ccnoGui4.s:655    .text.png_set_cHRM_XYZ:0000000000000000 png_set_cHRM_XYZ
     /tmp/ccnoGui4.s:891    .text.png_set_gAMA_fixed:0000000000000000 png_set_gAMA_fixed
     /tmp/ccnoGui4.s:992    .text.png_set_gAMA:0000000000000000 png_set_gAMA
     /tmp/ccnoGui4.s:1115   .text.png_set_hIST:0000000000000000 png_set_hIST
     /tmp/ccnoGui4.s:1264   .text.png_set_IHDR:0000000000000000 png_set_IHDR
     /tmp/ccnoGui4.s:1441   .text.png_set_oFFs:0000000000000000 png_set_oFFs
     /tmp/ccnoGui4.s:1498   .text.png_set_pCAL:0000000000000000 png_set_pCAL
     /tmp/ccnoGui4.s:1960   .text.png_set_sCAL_s:0000000000000000 png_set_sCAL_s
     /tmp/ccnoGui4.s:2263   .text.png_set_sCAL:0000000000000000 png_set_sCAL
     /tmp/ccnoGui4.s:2401   .text.png_set_sCAL_fixed:0000000000000000 png_set_sCAL_fixed
     /tmp/ccnoGui4.s:2537   .text.png_set_pHYs:0000000000000000 png_set_pHYs
     /tmp/ccnoGui4.s:2578   .text.png_set_PLTE:0000000000000000 png_set_PLTE
     /tmp/ccnoGui4.s:2837   .text.png_set_sBIT:0000000000000000 png_set_sBIT
     /tmp/ccnoGui4.s:2876   .text.png_set_sRGB:0000000000000000 png_set_sRGB
     /tmp/ccnoGui4.s:2956   .text.png_set_sRGB_gAMA_and_cHRM:0000000000000000 png_set_sRGB_gAMA_and_cHRM
     /tmp/ccnoGui4.s:3053   .text.png_set_iCCP:0000000000000000 png_set_iCCP
     /tmp/ccnoGui4.s:3353   .text.png_set_text_2:0000000000000000 png_set_text_2
     /tmp/ccnoGui4.s:3929   .text.png_set_text:0000000000000000 png_set_text
     /tmp/ccnoGui4.s:3977   .text.png_set_tIME:0000000000000000 png_set_tIME
     /tmp/ccnoGui4.s:4052   .text.png_set_tRNS:0000000000000000 png_set_tRNS
     /tmp/ccnoGui4.s:4382   .text.png_set_sPLT:0000000000000000 png_set_sPLT
     /tmp/ccnoGui4.s:4730   .text.png_set_unknown_chunks:0000000000000000 png_set_unknown_chunks
     /tmp/ccnoGui4.s:5027   .text.png_set_unknown_chunk_location:0000000000000000 png_set_unknown_chunk_location
     /tmp/ccnoGui4.s:5141   .text.png_permit_mng_features:0000000000000000 png_permit_mng_features
     /tmp/ccnoGui4.s:5189   .text.png_set_keep_unknown_chunks:0000000000000000 png_set_keep_unknown_chunks
     /tmp/ccnoGui4.s:6163   .rodata.chunks_to_ignore.7077:0000000000000000 chunks_to_ignore.7077
     /tmp/ccnoGui4.s:5736   .text.png_set_read_user_chunk_fn:0000000000000000 png_set_read_user_chunk_fn
     /tmp/ccnoGui4.s:5764   .text.png_set_rows:0000000000000000 png_set_rows
     /tmp/ccnoGui4.s:5855   .text.png_set_compression_buffer_size:0000000000000000 png_set_compression_buffer_size
     /tmp/ccnoGui4.s:6008   .text.png_set_invalid:0000000000000000 png_set_invalid
     /tmp/ccnoGui4.s:6038   .text.png_set_user_limits:0000000000000000 png_set_user_limits
     /tmp/ccnoGui4.s:6065   .text.png_set_chunk_cache_max:0000000000000000 png_set_chunk_cache_max
     /tmp/ccnoGui4.s:6089   .text.png_set_chunk_malloc_max:0000000000000000 png_set_chunk_malloc_max
     /tmp/ccnoGui4.s:6113   .text.png_set_benign_errors:0000000000000000 png_set_benign_errors
     /tmp/ccnoGui4.s:6139   .text.png_set_check_for_invalid_index:0000000000000000 png_set_check_for_invalid_index
     /tmp/ccnoGui4.s:9      .rodata.check_location.str1.8:0000000000000038 .LC1
     /tmp/ccnoGui4.s:6      .rodata.check_location.str1.8:0000000000000000 .LC0
     /tmp/ccnoGui4.s:411    .rodata.png_set_cHRM.str1.1:0000000000000000 .LC2
     /tmp/ccnoGui4.s:413    .rodata.png_set_cHRM.str1.1:000000000000000c .LC3
     /tmp/ccnoGui4.s:415    .rodata.png_set_cHRM.str1.1:0000000000000018 .LC4
     /tmp/ccnoGui4.s:417    .rodata.png_set_cHRM.str1.1:0000000000000025 .LC5
     /tmp/ccnoGui4.s:419    .rodata.png_set_cHRM.str1.1:0000000000000032 .LC6
     /tmp/ccnoGui4.s:421    .rodata.png_set_cHRM.str1.1:000000000000003d .LC7
     /tmp/ccnoGui4.s:423    .rodata.png_set_cHRM.str1.1:0000000000000048 .LC8
     /tmp/ccnoGui4.s:425    .rodata.png_set_cHRM.str1.1:0000000000000055 .LC9
     /tmp/ccnoGui4.s:649    .rodata.png_set_cHRM_XYZ.str1.1:0000000000000000 .LC10
     /tmp/ccnoGui4.s:986    .rodata.png_set_gAMA.str1.1:0000000000000000 .LC11
     /tmp/ccnoGui4.s:1106   .rodata.png_set_hIST.str1.8:0000000000000000 .LC12
     /tmp/ccnoGui4.s:1109   .rodata.png_set_hIST.str1.8:0000000000000030 .LC13
     /tmp/ccnoGui4.s:1492   .rodata.png_set_pCAL.str1.8:00000000000000a0 .LC20
     /tmp/ccnoGui4.s:1480   .rodata.png_set_pCAL.str1.8:0000000000000000 .LC16
     /tmp/ccnoGui4.s:1474   .rodata.png_set_pCAL.str1.1:0000000000000000 .LC14
     /tmp/ccnoGui4.s:1476   .rodata.png_set_pCAL.str1.1:000000000000001b .LC15
     /tmp/ccnoGui4.s:1486   .rodata.png_set_pCAL.str1.8:0000000000000050 .LC18
     /tmp/ccnoGui4.s:1489   .rodata.png_set_pCAL.str1.8:0000000000000078 .LC19
     /tmp/ccnoGui4.s:1483   .rodata.png_set_pCAL.str1.8:0000000000000028 .LC17
     /tmp/ccnoGui4.s:1948   .rodata.png_set_sCAL_s.str1.1:0000000000000012 .LC22
     /tmp/ccnoGui4.s:1950   .rodata.png_set_sCAL_s.str1.1:0000000000000025 .LC23
     /tmp/ccnoGui4.s:1954   .rodata.png_set_sCAL_s.str1.8:0000000000000000 .LC24
     /tmp/ccnoGui4.s:1946   .rodata.png_set_sCAL_s.str1.1:0000000000000000 .LC21
     /tmp/ccnoGui4.s:2257   .rodata.png_set_sCAL.str1.1:000000000000001b .LC27
     /tmp/ccnoGui4.s:2255   .rodata.png_set_sCAL.str1.1:0000000000000000 .LC26
     /tmp/ccnoGui4.s:2570   .rodata.png_set_PLTE.str1.1:0000000000000000 .LC28
     /tmp/ccnoGui4.s:2572   .rodata.png_set_PLTE.str1.1:0000000000000017 .LC29
     /tmp/ccnoGui4.s:3041   .rodata.png_set_iCCP.str1.8:0000000000000000 .LC30
     /tmp/ccnoGui4.s:3047   .rodata.png_set_iCCP.str1.8:0000000000000050 .LC32
     /tmp/ccnoGui4.s:3044   .rodata.png_set_iCCP.str1.8:0000000000000020 .LC31
     /tmp/ccnoGui4.s:3344   .rodata.png_set_text_2.str1.8:0000000000000000 .LC34
     /tmp/ccnoGui4.s:3340   .rodata.png_set_text_2.str1.1:0000000000000000 .LC33
     /tmp/ccnoGui4.s:3347   .rodata.png_set_text_2.str1.1:0000000000000015 .LC35
     /tmp/ccnoGui4.s:3923   .rodata.png_set_text.str1.8:0000000000000000 .LC36
     /tmp/ccnoGui4.s:3971   .rodata.png_set_tIME.str1.1:0000000000000000 .LC37
     /tmp/ccnoGui4.s:4046   .rodata.png_set_tRNS.str1.8:0000000000000000 .LC38
     /tmp/ccnoGui4.s:4374   .rodata.png_set_sPLT.str1.1:0000000000000015 .LC40
     /tmp/ccnoGui4.s:4376   .rodata.png_set_sPLT.str1.1:0000000000000030 .LC41
     /tmp/ccnoGui4.s:4372   .rodata.png_set_sPLT.str1.1:0000000000000000 .LC39
     /tmp/ccnoGui4.s:4724   .rodata.png_set_unknown_chunks.str1.1:0000000000000018 .LC43
     /tmp/ccnoGui4.s:4722   .rodata.png_set_unknown_chunks.str1.1:0000000000000000 .LC42
     /tmp/ccnoGui4.s:5021   .rodata.png_set_unknown_chunk_location.str1.8:0000000000000000 .LC44
     /tmp/ccnoGui4.s:5177   .rodata.png_set_keep_unknown_chunks.str1.8:0000000000000000 .LC45
     /tmp/ccnoGui4.s:5180   .rodata.png_set_keep_unknown_chunks.str1.8:0000000000000030 .LC46
     /tmp/ccnoGui4.s:5183   .rodata.png_set_keep_unknown_chunks.str1.8:0000000000000060 .LC47
     /tmp/ccnoGui4.s:5846   .rodata.png_set_compression_buffer_size.str1.8:0000000000000020 .LC49
     /tmp/ccnoGui4.s:5849   .rodata.png_set_compression_buffer_size.str1.8:0000000000000060 .LC50
     /tmp/ccnoGui4.s:5843   .rodata.png_set_compression_buffer_size.str1.8:0000000000000000 .LC48
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
png_error
png_app_warning
png_colorspace_set_chromaticities
png_colorspace_sync_info
__stack_chk_fail
png_colorspace_set_endpoints
png_fixed
png_colorspace_set_gamma
png_free_data
png_malloc_warn
png_warning
png_check_IHDR
strlen
png_check_fp_string
memcpy
png_free
png_ascii_from_fp
png_ascii_from_fixed
png_calloc
png_colorspace_set_sRGB
png_colorspace_set_ICC
png_app_error
png_benign_error
png_malloc_base
png_chunk_report
png_realloc_array
png_malloc
png_malloc_array
png_free_buffer_list
