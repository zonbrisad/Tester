   1              		.file	"pngerror.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.png_format_buffer.isra.0,"ax",@progbits
   5              		.p2align 4
   7              	png_format_buffer.isra.0:
   8              	.LVL0:
   9              	.LFB68:
  10              		.file 1 "fltk-1.3.4-1/png/pngerror.c"
   1:fltk-1.3.4-1/png/pngerror.c **** 
   2:fltk-1.3.4-1/png/pngerror.c **** /* pngerror.c - stub functions for i/o and memory allocation
   3:fltk-1.3.4-1/png/pngerror.c ****  *
   4:fltk-1.3.4-1/png/pngerror.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngerror.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngerror.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngerror.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngerror.c ****  *
   9:fltk-1.3.4-1/png/pngerror.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngerror.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngerror.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngerror.c ****  *
  13:fltk-1.3.4-1/png/pngerror.c ****  * This file provides a location for all error handling.  Users who
  14:fltk-1.3.4-1/png/pngerror.c ****  * need special error handling are expected to write replacement functions
  15:fltk-1.3.4-1/png/pngerror.c ****  * and use png_set_error_fn() to use those functions.  See the instructions
  16:fltk-1.3.4-1/png/pngerror.c ****  * at each function.
  17:fltk-1.3.4-1/png/pngerror.c ****  */
  18:fltk-1.3.4-1/png/pngerror.c **** 
  19:fltk-1.3.4-1/png/pngerror.c **** #include "pngpriv.h"
  20:fltk-1.3.4-1/png/pngerror.c **** 
  21:fltk-1.3.4-1/png/pngerror.c **** #if defined(PNG_READ_SUPPORTED) || defined(PNG_WRITE_SUPPORTED)
  22:fltk-1.3.4-1/png/pngerror.c **** 
  23:fltk-1.3.4-1/png/pngerror.c **** static PNG_FUNCTION(void, png_default_error,PNGARG((png_const_structrp png_ptr,
  24:fltk-1.3.4-1/png/pngerror.c ****     png_const_charp error_message)),PNG_NORETURN);
  25:fltk-1.3.4-1/png/pngerror.c **** 
  26:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_WARNINGS_SUPPORTED
  27:fltk-1.3.4-1/png/pngerror.c **** static void /* PRIVATE */
  28:fltk-1.3.4-1/png/pngerror.c **** png_default_warning PNGARG((png_const_structrp png_ptr,
  29:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp warning_message));
  30:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
  31:fltk-1.3.4-1/png/pngerror.c **** 
  32:fltk-1.3.4-1/png/pngerror.c **** /* This function is called whenever there is a fatal error.  This function
  33:fltk-1.3.4-1/png/pngerror.c ****  * should not be changed.  If there is a need to handle errors differently,
  34:fltk-1.3.4-1/png/pngerror.c ****  * you should supply a replacement error function and use png_set_error_fn()
  35:fltk-1.3.4-1/png/pngerror.c ****  * to replace the error function at run-time.
  36:fltk-1.3.4-1/png/pngerror.c ****  */
  37:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_TEXT_SUPPORTED
  38:fltk-1.3.4-1/png/pngerror.c **** PNG_FUNCTION(void,PNGAPI
  39:fltk-1.3.4-1/png/pngerror.c **** png_error,(png_const_structrp png_ptr, png_const_charp error_message),
  40:fltk-1.3.4-1/png/pngerror.c ****    PNG_NORETURN)
  41:fltk-1.3.4-1/png/pngerror.c **** {
  42:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
  43:fltk-1.3.4-1/png/pngerror.c ****    char msg[16];
  44:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
  45:fltk-1.3.4-1/png/pngerror.c ****    {
  46:fltk-1.3.4-1/png/pngerror.c ****       if ((png_ptr->flags &
  47:fltk-1.3.4-1/png/pngerror.c ****          (PNG_FLAG_STRIP_ERROR_NUMBERS|PNG_FLAG_STRIP_ERROR_TEXT)) != 0
  48:fltk-1.3.4-1/png/pngerror.c ****       {
  49:fltk-1.3.4-1/png/pngerror.c ****          if (*error_message == PNG_LITERAL_SHARP)
  50:fltk-1.3.4-1/png/pngerror.c ****          {
  51:fltk-1.3.4-1/png/pngerror.c ****             /* Strip "#nnnn " from beginning of error message. */
  52:fltk-1.3.4-1/png/pngerror.c ****             int offset;
  53:fltk-1.3.4-1/png/pngerror.c ****             for (offset = 1; offset<15; offset++)
  54:fltk-1.3.4-1/png/pngerror.c ****                if (error_message[offset] == ' ')
  55:fltk-1.3.4-1/png/pngerror.c ****                   break;
  56:fltk-1.3.4-1/png/pngerror.c **** 
  57:fltk-1.3.4-1/png/pngerror.c ****             if ((png_ptr->flags & PNG_FLAG_STRIP_ERROR_TEXT) != 0)
  58:fltk-1.3.4-1/png/pngerror.c ****             {
  59:fltk-1.3.4-1/png/pngerror.c ****                int i;
  60:fltk-1.3.4-1/png/pngerror.c ****                for (i = 0; i < offset - 1; i++)
  61:fltk-1.3.4-1/png/pngerror.c ****                   msg[i] = error_message[i + 1];
  62:fltk-1.3.4-1/png/pngerror.c ****                msg[i - 1] = '\0';
  63:fltk-1.3.4-1/png/pngerror.c ****                error_message = msg;
  64:fltk-1.3.4-1/png/pngerror.c ****             }
  65:fltk-1.3.4-1/png/pngerror.c **** 
  66:fltk-1.3.4-1/png/pngerror.c ****             else
  67:fltk-1.3.4-1/png/pngerror.c ****                error_message += offset;
  68:fltk-1.3.4-1/png/pngerror.c ****       }
  69:fltk-1.3.4-1/png/pngerror.c **** 
  70:fltk-1.3.4-1/png/pngerror.c ****       else
  71:fltk-1.3.4-1/png/pngerror.c ****       {
  72:fltk-1.3.4-1/png/pngerror.c ****          if ((png_ptr->flags & PNG_FLAG_STRIP_ERROR_TEXT) != 0)
  73:fltk-1.3.4-1/png/pngerror.c ****          {
  74:fltk-1.3.4-1/png/pngerror.c ****             msg[0] = '0';
  75:fltk-1.3.4-1/png/pngerror.c ****             msg[1] = '\0';
  76:fltk-1.3.4-1/png/pngerror.c ****             error_message = msg;
  77:fltk-1.3.4-1/png/pngerror.c ****          }
  78:fltk-1.3.4-1/png/pngerror.c ****        }
  79:fltk-1.3.4-1/png/pngerror.c ****      }
  80:fltk-1.3.4-1/png/pngerror.c ****    }
  81:fltk-1.3.4-1/png/pngerror.c **** #endif
  82:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL && png_ptr->error_fn != NULL)
  83:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->error_fn))(png_constcast(png_structrp,png_ptr),
  84:fltk-1.3.4-1/png/pngerror.c ****           error_message);
  85:fltk-1.3.4-1/png/pngerror.c **** 
  86:fltk-1.3.4-1/png/pngerror.c ****    /* If the custom handler doesn't exist, or if it returns,
  87:fltk-1.3.4-1/png/pngerror.c ****       use the default handler, which will not return. */
  88:fltk-1.3.4-1/png/pngerror.c ****    png_default_error(png_ptr, error_message);
  89:fltk-1.3.4-1/png/pngerror.c **** }
  90:fltk-1.3.4-1/png/pngerror.c **** #else
  91:fltk-1.3.4-1/png/pngerror.c **** PNG_FUNCTION(void,PNGAPI
  92:fltk-1.3.4-1/png/pngerror.c **** png_err,(png_const_structrp png_ptr),PNG_NORETURN)
  93:fltk-1.3.4-1/png/pngerror.c **** {
  94:fltk-1.3.4-1/png/pngerror.c ****    /* Prior to 1.5.2 the error_fn received a NULL pointer, expressed
  95:fltk-1.3.4-1/png/pngerror.c ****     * erroneously as '\0', instead of the empty string "".  This was
  96:fltk-1.3.4-1/png/pngerror.c ****     * apparently an error, introduced in libpng-1.2.20, and png_default_error
  97:fltk-1.3.4-1/png/pngerror.c ****     * will crash in this case.
  98:fltk-1.3.4-1/png/pngerror.c ****     */
  99:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL && png_ptr->error_fn != NULL)
 100:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->error_fn))(png_constcast(png_structrp,png_ptr), "");
 101:fltk-1.3.4-1/png/pngerror.c **** 
 102:fltk-1.3.4-1/png/pngerror.c ****    /* If the custom handler doesn't exist, or if it returns,
 103:fltk-1.3.4-1/png/pngerror.c ****       use the default handler, which will not return. */
 104:fltk-1.3.4-1/png/pngerror.c ****    png_default_error(png_ptr, "");
 105:fltk-1.3.4-1/png/pngerror.c **** }
 106:fltk-1.3.4-1/png/pngerror.c **** #endif /* ERROR_TEXT */
 107:fltk-1.3.4-1/png/pngerror.c **** 
 108:fltk-1.3.4-1/png/pngerror.c **** /* Utility to safely appends strings to a buffer.  This never errors out so
 109:fltk-1.3.4-1/png/pngerror.c ****  * error checking is not required in the caller.
 110:fltk-1.3.4-1/png/pngerror.c ****  */
 111:fltk-1.3.4-1/png/pngerror.c **** size_t
 112:fltk-1.3.4-1/png/pngerror.c **** png_safecat(png_charp buffer, size_t bufsize, size_t pos,
 113:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 114:fltk-1.3.4-1/png/pngerror.c **** {
 115:fltk-1.3.4-1/png/pngerror.c ****    if (buffer != NULL && pos < bufsize)
 116:fltk-1.3.4-1/png/pngerror.c ****    {
 117:fltk-1.3.4-1/png/pngerror.c ****       if (string != NULL)
 118:fltk-1.3.4-1/png/pngerror.c ****          while (*string != '\0' && pos < bufsize-1)
 119:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 120:fltk-1.3.4-1/png/pngerror.c **** 
 121:fltk-1.3.4-1/png/pngerror.c ****       buffer[pos] = '\0';
 122:fltk-1.3.4-1/png/pngerror.c ****    }
 123:fltk-1.3.4-1/png/pngerror.c **** 
 124:fltk-1.3.4-1/png/pngerror.c ****    return pos;
 125:fltk-1.3.4-1/png/pngerror.c **** }
 126:fltk-1.3.4-1/png/pngerror.c **** 
 127:fltk-1.3.4-1/png/pngerror.c **** #if defined(PNG_WARNINGS_SUPPORTED) || defined(PNG_TIME_RFC1123_SUPPORTED)
 128:fltk-1.3.4-1/png/pngerror.c **** /* Utility to dump an unsigned value into a buffer, given a start pointer and
 129:fltk-1.3.4-1/png/pngerror.c ****  * and end pointer (which should point just *beyond* the end of the buffer!)
 130:fltk-1.3.4-1/png/pngerror.c ****  * Returns the pointer to the start of the formatted string.
 131:fltk-1.3.4-1/png/pngerror.c ****  */
 132:fltk-1.3.4-1/png/pngerror.c **** png_charp
 133:fltk-1.3.4-1/png/pngerror.c **** png_format_number(png_const_charp start, png_charp end, int format,
 134:fltk-1.3.4-1/png/pngerror.c ****    png_alloc_size_t number)
 135:fltk-1.3.4-1/png/pngerror.c **** {
 136:fltk-1.3.4-1/png/pngerror.c ****    int count = 0;    /* number of digits output */
 137:fltk-1.3.4-1/png/pngerror.c ****    int mincount = 1; /* minimum number required */
 138:fltk-1.3.4-1/png/pngerror.c ****    int output = 0;   /* digit output (for the fixed point format) */
 139:fltk-1.3.4-1/png/pngerror.c **** 
 140:fltk-1.3.4-1/png/pngerror.c ****    *--end = '\0';
 141:fltk-1.3.4-1/png/pngerror.c **** 
 142:fltk-1.3.4-1/png/pngerror.c ****    /* This is written so that the loop always runs at least once, even with
 143:fltk-1.3.4-1/png/pngerror.c ****     * number zero.
 144:fltk-1.3.4-1/png/pngerror.c ****     */
 145:fltk-1.3.4-1/png/pngerror.c ****    while (end > start && (number != 0 || count < mincount))
 146:fltk-1.3.4-1/png/pngerror.c ****    {
 147:fltk-1.3.4-1/png/pngerror.c **** 
 148:fltk-1.3.4-1/png/pngerror.c ****       static const char digits[] = "0123456789ABCDEF";
 149:fltk-1.3.4-1/png/pngerror.c **** 
 150:fltk-1.3.4-1/png/pngerror.c ****       switch (format)
 151:fltk-1.3.4-1/png/pngerror.c ****       {
 152:fltk-1.3.4-1/png/pngerror.c ****          case PNG_NUMBER_FORMAT_fixed:
 153:fltk-1.3.4-1/png/pngerror.c ****             /* Needs five digits (the fraction) */
 154:fltk-1.3.4-1/png/pngerror.c ****             mincount = 5;
 155:fltk-1.3.4-1/png/pngerror.c ****             if (output != 0 || number % 10 != 0)
 156:fltk-1.3.4-1/png/pngerror.c ****             {
 157:fltk-1.3.4-1/png/pngerror.c ****                *--end = digits[number % 10];
 158:fltk-1.3.4-1/png/pngerror.c ****                output = 1;
 159:fltk-1.3.4-1/png/pngerror.c ****             }
 160:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 161:fltk-1.3.4-1/png/pngerror.c ****             break;
 162:fltk-1.3.4-1/png/pngerror.c **** 
 163:fltk-1.3.4-1/png/pngerror.c ****          case PNG_NUMBER_FORMAT_02u:
 164:fltk-1.3.4-1/png/pngerror.c ****             /* Expects at least 2 digits. */
 165:fltk-1.3.4-1/png/pngerror.c ****             mincount = 2;
 166:fltk-1.3.4-1/png/pngerror.c ****             /* FALL THROUGH */
 167:fltk-1.3.4-1/png/pngerror.c **** 
 168:fltk-1.3.4-1/png/pngerror.c ****          case PNG_NUMBER_FORMAT_u:
 169:fltk-1.3.4-1/png/pngerror.c ****             *--end = digits[number % 10];
 170:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 171:fltk-1.3.4-1/png/pngerror.c ****             break;
 172:fltk-1.3.4-1/png/pngerror.c **** 
 173:fltk-1.3.4-1/png/pngerror.c ****          case PNG_NUMBER_FORMAT_02x:
 174:fltk-1.3.4-1/png/pngerror.c ****             /* This format expects at least two digits */
 175:fltk-1.3.4-1/png/pngerror.c ****             mincount = 2;
 176:fltk-1.3.4-1/png/pngerror.c ****             /* FALL THROUGH */
 177:fltk-1.3.4-1/png/pngerror.c **** 
 178:fltk-1.3.4-1/png/pngerror.c ****          case PNG_NUMBER_FORMAT_x:
 179:fltk-1.3.4-1/png/pngerror.c ****             *--end = digits[number & 0xf];
 180:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 181:fltk-1.3.4-1/png/pngerror.c ****             break;
 182:fltk-1.3.4-1/png/pngerror.c **** 
 183:fltk-1.3.4-1/png/pngerror.c ****          default: /* an error */
 184:fltk-1.3.4-1/png/pngerror.c ****             number = 0;
 185:fltk-1.3.4-1/png/pngerror.c ****             break;
 186:fltk-1.3.4-1/png/pngerror.c ****       }
 187:fltk-1.3.4-1/png/pngerror.c **** 
 188:fltk-1.3.4-1/png/pngerror.c ****       /* Keep track of the number of digits added */
 189:fltk-1.3.4-1/png/pngerror.c ****       ++count;
 190:fltk-1.3.4-1/png/pngerror.c **** 
 191:fltk-1.3.4-1/png/pngerror.c ****       /* Float a fixed number here: */
 192:fltk-1.3.4-1/png/pngerror.c ****       if ((format == PNG_NUMBER_FORMAT_fixed) && (count == 5) && (end > start))
 193:fltk-1.3.4-1/png/pngerror.c ****       {
 194:fltk-1.3.4-1/png/pngerror.c ****          /* End of the fraction, but maybe nothing was output?  In that case
 195:fltk-1.3.4-1/png/pngerror.c ****           * drop the decimal point.  If the number is a true zero handle that
 196:fltk-1.3.4-1/png/pngerror.c ****           * here.
 197:fltk-1.3.4-1/png/pngerror.c ****           */
 198:fltk-1.3.4-1/png/pngerror.c ****          if (output != 0)
 199:fltk-1.3.4-1/png/pngerror.c ****             *--end = '.';
 200:fltk-1.3.4-1/png/pngerror.c ****          else if (number == 0) /* and !output */
 201:fltk-1.3.4-1/png/pngerror.c ****             *--end = '0';
 202:fltk-1.3.4-1/png/pngerror.c ****       }
 203:fltk-1.3.4-1/png/pngerror.c ****    }
 204:fltk-1.3.4-1/png/pngerror.c **** 
 205:fltk-1.3.4-1/png/pngerror.c ****    return end;
 206:fltk-1.3.4-1/png/pngerror.c **** }
 207:fltk-1.3.4-1/png/pngerror.c **** #endif
 208:fltk-1.3.4-1/png/pngerror.c **** 
 209:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_WARNINGS_SUPPORTED
 210:fltk-1.3.4-1/png/pngerror.c **** /* This function is called whenever there is a non-fatal error.  This function
 211:fltk-1.3.4-1/png/pngerror.c ****  * should not be changed.  If there is a need to handle warnings differently,
 212:fltk-1.3.4-1/png/pngerror.c ****  * you should supply a replacement warning function and use
 213:fltk-1.3.4-1/png/pngerror.c ****  * png_set_error_fn() to replace the warning function at run-time.
 214:fltk-1.3.4-1/png/pngerror.c ****  */
 215:fltk-1.3.4-1/png/pngerror.c **** void PNGAPI
 216:fltk-1.3.4-1/png/pngerror.c **** png_warning(png_const_structrp png_ptr, png_const_charp warning_message)
 217:fltk-1.3.4-1/png/pngerror.c **** {
 218:fltk-1.3.4-1/png/pngerror.c ****    int offset = 0;
 219:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 220:fltk-1.3.4-1/png/pngerror.c ****    {
 221:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
 222:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags &
 223:fltk-1.3.4-1/png/pngerror.c ****        (PNG_FLAG_STRIP_ERROR_NUMBERS|PNG_FLAG_STRIP_ERROR_TEXT)) != 0)
 224:fltk-1.3.4-1/png/pngerror.c **** #endif
 225:fltk-1.3.4-1/png/pngerror.c ****       {
 226:fltk-1.3.4-1/png/pngerror.c ****          if (*warning_message == PNG_LITERAL_SHARP)
 227:fltk-1.3.4-1/png/pngerror.c ****          {
 228:fltk-1.3.4-1/png/pngerror.c ****             for (offset = 1; offset < 15; offset++)
 229:fltk-1.3.4-1/png/pngerror.c ****                if (warning_message[offset] == ' ')
 230:fltk-1.3.4-1/png/pngerror.c ****                   break;
 231:fltk-1.3.4-1/png/pngerror.c ****          }
 232:fltk-1.3.4-1/png/pngerror.c ****       }
 233:fltk-1.3.4-1/png/pngerror.c ****    }
 234:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL && png_ptr->warning_fn != NULL)
 235:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 236:fltk-1.3.4-1/png/pngerror.c ****          warning_message + offset);
 237:fltk-1.3.4-1/png/pngerror.c ****    else
 238:fltk-1.3.4-1/png/pngerror.c ****       png_default_warning(png_ptr, warning_message + offset);
 239:fltk-1.3.4-1/png/pngerror.c **** }
 240:fltk-1.3.4-1/png/pngerror.c **** 
 241:fltk-1.3.4-1/png/pngerror.c **** /* These functions support 'formatted' warning messages with up to
 242:fltk-1.3.4-1/png/pngerror.c ****  * PNG_WARNING_PARAMETER_COUNT parameters.  In the format string the parameter
 243:fltk-1.3.4-1/png/pngerror.c ****  * is introduced by @<number>, where 'number' starts at 1.  This follows the
 244:fltk-1.3.4-1/png/pngerror.c ****  * standard established by X/Open for internationalizable error messages.
 245:fltk-1.3.4-1/png/pngerror.c ****  */
 246:fltk-1.3.4-1/png/pngerror.c **** void
 247:fltk-1.3.4-1/png/pngerror.c **** png_warning_parameter(png_warning_parameters p, int number,
 248:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 249:fltk-1.3.4-1/png/pngerror.c **** {
 250:fltk-1.3.4-1/png/pngerror.c ****    if (number > 0 && number <= PNG_WARNING_PARAMETER_COUNT)
 251:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 252:fltk-1.3.4-1/png/pngerror.c **** }
 253:fltk-1.3.4-1/png/pngerror.c **** 
 254:fltk-1.3.4-1/png/pngerror.c **** void
 255:fltk-1.3.4-1/png/pngerror.c **** png_warning_parameter_unsigned(png_warning_parameters p, int number, int format,
 256:fltk-1.3.4-1/png/pngerror.c ****    png_alloc_size_t value)
 257:fltk-1.3.4-1/png/pngerror.c **** {
 258:fltk-1.3.4-1/png/pngerror.c ****    char buffer[PNG_NUMBER_BUFFER_SIZE];
 259:fltk-1.3.4-1/png/pngerror.c ****    png_warning_parameter(p, number, PNG_FORMAT_NUMBER(buffer, format, value));
 260:fltk-1.3.4-1/png/pngerror.c **** }
 261:fltk-1.3.4-1/png/pngerror.c **** 
 262:fltk-1.3.4-1/png/pngerror.c **** void
 263:fltk-1.3.4-1/png/pngerror.c **** png_warning_parameter_signed(png_warning_parameters p, int number, int format,
 264:fltk-1.3.4-1/png/pngerror.c ****    png_int_32 value)
 265:fltk-1.3.4-1/png/pngerror.c **** {
 266:fltk-1.3.4-1/png/pngerror.c ****    png_alloc_size_t u;
 267:fltk-1.3.4-1/png/pngerror.c ****    png_charp str;
 268:fltk-1.3.4-1/png/pngerror.c ****    char buffer[PNG_NUMBER_BUFFER_SIZE];
 269:fltk-1.3.4-1/png/pngerror.c **** 
 270:fltk-1.3.4-1/png/pngerror.c ****    /* Avoid overflow by doing the negate in a png_alloc_size_t: */
 271:fltk-1.3.4-1/png/pngerror.c ****    u = (png_alloc_size_t)value;
 272:fltk-1.3.4-1/png/pngerror.c ****    if (value < 0)
 273:fltk-1.3.4-1/png/pngerror.c ****       u = ~u + 1;
 274:fltk-1.3.4-1/png/pngerror.c **** 
 275:fltk-1.3.4-1/png/pngerror.c ****    str = PNG_FORMAT_NUMBER(buffer, format, u);
 276:fltk-1.3.4-1/png/pngerror.c **** 
 277:fltk-1.3.4-1/png/pngerror.c ****    if (value < 0 && str > buffer)
 278:fltk-1.3.4-1/png/pngerror.c ****       *--str = '-';
 279:fltk-1.3.4-1/png/pngerror.c **** 
 280:fltk-1.3.4-1/png/pngerror.c ****    png_warning_parameter(p, number, str);
 281:fltk-1.3.4-1/png/pngerror.c **** }
 282:fltk-1.3.4-1/png/pngerror.c **** 
 283:fltk-1.3.4-1/png/pngerror.c **** void
 284:fltk-1.3.4-1/png/pngerror.c **** png_formatted_warning(png_const_structrp png_ptr, png_warning_parameters p,
 285:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp message)
 286:fltk-1.3.4-1/png/pngerror.c **** {
 287:fltk-1.3.4-1/png/pngerror.c ****    /* The internal buffer is just 192 bytes - enough for all our messages,
 288:fltk-1.3.4-1/png/pngerror.c ****     * overflow doesn't happen because this code checks!  If someone figures
 289:fltk-1.3.4-1/png/pngerror.c ****     * out how to send us a message longer than 192 bytes, all that will
 290:fltk-1.3.4-1/png/pngerror.c ****     * happen is that the message will be truncated appropriately.
 291:fltk-1.3.4-1/png/pngerror.c ****     */
 292:fltk-1.3.4-1/png/pngerror.c ****    size_t i = 0; /* Index in the msg[] buffer: */
 293:fltk-1.3.4-1/png/pngerror.c ****    char msg[192];
 294:fltk-1.3.4-1/png/pngerror.c **** 
 295:fltk-1.3.4-1/png/pngerror.c ****    /* Each iteration through the following loop writes at most one character
 296:fltk-1.3.4-1/png/pngerror.c ****     * to msg[i++] then returns here to validate that there is still space for
 297:fltk-1.3.4-1/png/pngerror.c ****     * the trailing '\0'.  It may (in the case of a parameter) read more than
 298:fltk-1.3.4-1/png/pngerror.c ****     * one character from message[]; it must check for '\0' and continue to the
 299:fltk-1.3.4-1/png/pngerror.c ****     * test if it finds the end of string.
 300:fltk-1.3.4-1/png/pngerror.c ****     */
 301:fltk-1.3.4-1/png/pngerror.c ****    while (i<(sizeof msg)-1 && *message != '\0')
 302:fltk-1.3.4-1/png/pngerror.c ****    {
 303:fltk-1.3.4-1/png/pngerror.c ****       /* '@' at end of string is now just printed (previously it was skipped);
 304:fltk-1.3.4-1/png/pngerror.c ****        * it is an error in the calling code to terminate the string with @.
 305:fltk-1.3.4-1/png/pngerror.c ****        */
 306:fltk-1.3.4-1/png/pngerror.c ****       if (p != NULL && *message == '@' && message[1] != '\0')
 307:fltk-1.3.4-1/png/pngerror.c ****       {
 308:fltk-1.3.4-1/png/pngerror.c ****          int parameter_char = *++message; /* Consume the '@' */
 309:fltk-1.3.4-1/png/pngerror.c ****          static const char valid_parameters[] = "123456789";
 310:fltk-1.3.4-1/png/pngerror.c ****          int parameter = 0;
 311:fltk-1.3.4-1/png/pngerror.c **** 
 312:fltk-1.3.4-1/png/pngerror.c ****          /* Search for the parameter digit, the index in the string is the
 313:fltk-1.3.4-1/png/pngerror.c ****           * parameter to use.
 314:fltk-1.3.4-1/png/pngerror.c ****           */
 315:fltk-1.3.4-1/png/pngerror.c ****          while (valid_parameters[parameter] != parameter_char &&
 316:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 317:fltk-1.3.4-1/png/pngerror.c ****             ++parameter;
 318:fltk-1.3.4-1/png/pngerror.c **** 
 319:fltk-1.3.4-1/png/pngerror.c ****          /* If the parameter digit is out of range it will just get printed. */
 320:fltk-1.3.4-1/png/pngerror.c ****          if (parameter < PNG_WARNING_PARAMETER_COUNT)
 321:fltk-1.3.4-1/png/pngerror.c ****          {
 322:fltk-1.3.4-1/png/pngerror.c ****             /* Append this parameter */
 323:fltk-1.3.4-1/png/pngerror.c ****             png_const_charp parm = p[parameter];
 324:fltk-1.3.4-1/png/pngerror.c ****             png_const_charp pend = p[parameter] + (sizeof p[parameter]);
 325:fltk-1.3.4-1/png/pngerror.c **** 
 326:fltk-1.3.4-1/png/pngerror.c ****             /* No need to copy the trailing '\0' here, but there is no guarantee
 327:fltk-1.3.4-1/png/pngerror.c ****              * that parm[] has been initialized, so there is no guarantee of a
 328:fltk-1.3.4-1/png/pngerror.c ****              * trailing '\0':
 329:fltk-1.3.4-1/png/pngerror.c ****              */
 330:fltk-1.3.4-1/png/pngerror.c ****             while (i<(sizeof msg)-1 && *parm != '\0' && parm < pend)
 331:fltk-1.3.4-1/png/pngerror.c ****                msg[i++] = *parm++;
 332:fltk-1.3.4-1/png/pngerror.c **** 
 333:fltk-1.3.4-1/png/pngerror.c ****             /* Consume the parameter digit too: */
 334:fltk-1.3.4-1/png/pngerror.c ****             ++message;
 335:fltk-1.3.4-1/png/pngerror.c ****             continue;
 336:fltk-1.3.4-1/png/pngerror.c ****          }
 337:fltk-1.3.4-1/png/pngerror.c **** 
 338:fltk-1.3.4-1/png/pngerror.c ****          /* else not a parameter and there is a character after the @ sign; just
 339:fltk-1.3.4-1/png/pngerror.c ****           * copy that.  This is known not to be '\0' because of the test above.
 340:fltk-1.3.4-1/png/pngerror.c ****           */
 341:fltk-1.3.4-1/png/pngerror.c ****       }
 342:fltk-1.3.4-1/png/pngerror.c **** 
 343:fltk-1.3.4-1/png/pngerror.c ****       /* At this point *message can't be '\0', even in the bad parameter case
 344:fltk-1.3.4-1/png/pngerror.c ****        * above where there is a lone '@' at the end of the message string.
 345:fltk-1.3.4-1/png/pngerror.c ****        */
 346:fltk-1.3.4-1/png/pngerror.c ****       msg[i++] = *message++;
 347:fltk-1.3.4-1/png/pngerror.c ****    }
 348:fltk-1.3.4-1/png/pngerror.c **** 
 349:fltk-1.3.4-1/png/pngerror.c ****    /* i is always less than (sizeof msg), so: */
 350:fltk-1.3.4-1/png/pngerror.c ****    msg[i] = '\0';
 351:fltk-1.3.4-1/png/pngerror.c **** 
 352:fltk-1.3.4-1/png/pngerror.c ****    /* And this is the formatted message. It may be larger than
 353:fltk-1.3.4-1/png/pngerror.c ****     * PNG_MAX_ERROR_TEXT, but that is only used for 'chunk' errors and these
 354:fltk-1.3.4-1/png/pngerror.c ****     * are not (currently) formatted.
 355:fltk-1.3.4-1/png/pngerror.c ****     */
 356:fltk-1.3.4-1/png/pngerror.c ****    png_warning(png_ptr, msg);
 357:fltk-1.3.4-1/png/pngerror.c **** }
 358:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
 359:fltk-1.3.4-1/png/pngerror.c **** 
 360:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_BENIGN_ERRORS_SUPPORTED
 361:fltk-1.3.4-1/png/pngerror.c **** void PNGAPI
 362:fltk-1.3.4-1/png/pngerror.c **** png_benign_error(png_const_structrp png_ptr, png_const_charp error_message)
 363:fltk-1.3.4-1/png/pngerror.c **** {
 364:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 365:fltk-1.3.4-1/png/pngerror.c ****    {
 366:fltk-1.3.4-1/png/pngerror.c **** #     ifdef PNG_READ_SUPPORTED
 367:fltk-1.3.4-1/png/pngerror.c ****          if ((png_ptr->mode & PNG_IS_READ_STRUCT) != 0 &&
 368:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 369:fltk-1.3.4-1/png/pngerror.c ****             png_chunk_warning(png_ptr, error_message);
 370:fltk-1.3.4-1/png/pngerror.c ****          else
 371:fltk-1.3.4-1/png/pngerror.c **** #     endif
 372:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, error_message);
 373:fltk-1.3.4-1/png/pngerror.c ****    }
 374:fltk-1.3.4-1/png/pngerror.c **** 
 375:fltk-1.3.4-1/png/pngerror.c ****    else
 376:fltk-1.3.4-1/png/pngerror.c ****    {
 377:fltk-1.3.4-1/png/pngerror.c **** #     ifdef PNG_READ_SUPPORTED
 378:fltk-1.3.4-1/png/pngerror.c ****          if ((png_ptr->mode & PNG_IS_READ_STRUCT) != 0 &&
 379:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 380:fltk-1.3.4-1/png/pngerror.c ****             png_chunk_error(png_ptr, error_message);
 381:fltk-1.3.4-1/png/pngerror.c ****          else
 382:fltk-1.3.4-1/png/pngerror.c **** #     endif
 383:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, error_message);
 384:fltk-1.3.4-1/png/pngerror.c ****    }
 385:fltk-1.3.4-1/png/pngerror.c **** 
 386:fltk-1.3.4-1/png/pngerror.c **** #  ifndef PNG_ERROR_TEXT_SUPPORTED
 387:fltk-1.3.4-1/png/pngerror.c ****       PNG_UNUSED(error_message)
 388:fltk-1.3.4-1/png/pngerror.c **** #  endif
 389:fltk-1.3.4-1/png/pngerror.c **** }
 390:fltk-1.3.4-1/png/pngerror.c **** 
 391:fltk-1.3.4-1/png/pngerror.c **** void /* PRIVATE */
 392:fltk-1.3.4-1/png/pngerror.c **** png_app_warning(png_const_structrp png_ptr, png_const_charp error_message)
 393:fltk-1.3.4-1/png/pngerror.c **** {
 394:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_WARNINGS_WARN) != 0)
 395:fltk-1.3.4-1/png/pngerror.c ****      png_warning(png_ptr, error_message);
 396:fltk-1.3.4-1/png/pngerror.c ****   else
 397:fltk-1.3.4-1/png/pngerror.c ****      png_error(png_ptr, error_message);
 398:fltk-1.3.4-1/png/pngerror.c **** 
 399:fltk-1.3.4-1/png/pngerror.c **** #  ifndef PNG_ERROR_TEXT_SUPPORTED
 400:fltk-1.3.4-1/png/pngerror.c ****       PNG_UNUSED(error_message)
 401:fltk-1.3.4-1/png/pngerror.c **** #  endif
 402:fltk-1.3.4-1/png/pngerror.c **** }
 403:fltk-1.3.4-1/png/pngerror.c **** 
 404:fltk-1.3.4-1/png/pngerror.c **** void /* PRIVATE */
 405:fltk-1.3.4-1/png/pngerror.c **** png_app_error(png_const_structrp png_ptr, png_const_charp error_message)
 406:fltk-1.3.4-1/png/pngerror.c **** {
 407:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_ERRORS_WARN) != 0)
 408:fltk-1.3.4-1/png/pngerror.c ****      png_warning(png_ptr, error_message);
 409:fltk-1.3.4-1/png/pngerror.c ****   else
 410:fltk-1.3.4-1/png/pngerror.c ****      png_error(png_ptr, error_message);
 411:fltk-1.3.4-1/png/pngerror.c **** 
 412:fltk-1.3.4-1/png/pngerror.c **** #  ifndef PNG_ERROR_TEXT_SUPPORTED
 413:fltk-1.3.4-1/png/pngerror.c ****       PNG_UNUSED(error_message)
 414:fltk-1.3.4-1/png/pngerror.c **** #  endif
 415:fltk-1.3.4-1/png/pngerror.c **** }
 416:fltk-1.3.4-1/png/pngerror.c **** #endif /* BENIGN_ERRORS */
 417:fltk-1.3.4-1/png/pngerror.c **** 
 418:fltk-1.3.4-1/png/pngerror.c **** #define PNG_MAX_ERROR_TEXT 196 /* Currently limited by profile_error in png.c */
 419:fltk-1.3.4-1/png/pngerror.c **** #if defined(PNG_WARNINGS_SUPPORTED) || \
 420:fltk-1.3.4-1/png/pngerror.c ****    (defined(PNG_READ_SUPPORTED) && defined(PNG_ERROR_TEXT_SUPPORTED))
 421:fltk-1.3.4-1/png/pngerror.c **** /* These utilities are used internally to build an error message that relates
 422:fltk-1.3.4-1/png/pngerror.c ****  * to the current chunk.  The chunk name comes from png_ptr->chunk_name,
 423:fltk-1.3.4-1/png/pngerror.c ****  * which is used to prefix the message.  The message is limited in length
 424:fltk-1.3.4-1/png/pngerror.c ****  * to 63 bytes. The name characters are output as hex digits wrapped in []
 425:fltk-1.3.4-1/png/pngerror.c ****  * if the character is invalid.
 426:fltk-1.3.4-1/png/pngerror.c ****  */
 427:fltk-1.3.4-1/png/pngerror.c **** #define isnonalpha(c) ((c) < 65 || (c) > 122 || ((c) > 90 && (c) < 97))
 428:fltk-1.3.4-1/png/pngerror.c **** static PNG_CONST char png_digit[16] = {
 429:fltk-1.3.4-1/png/pngerror.c ****    '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',
 430:fltk-1.3.4-1/png/pngerror.c ****    'A', 'B', 'C', 'D', 'E', 'F'
 431:fltk-1.3.4-1/png/pngerror.c **** };
 432:fltk-1.3.4-1/png/pngerror.c **** 
 433:fltk-1.3.4-1/png/pngerror.c **** static void /* PRIVATE */
 434:fltk-1.3.4-1/png/pngerror.c **** png_format_buffer(png_const_structrp png_ptr, png_charp buffer, png_const_charp
  11              		.loc 1 434 1 view -0
  12              		.cfi_startproc
 435:fltk-1.3.4-1/png/pngerror.c ****     error_message)
 436:fltk-1.3.4-1/png/pngerror.c **** {
 437:fltk-1.3.4-1/png/pngerror.c ****    png_uint_32 chunk_name = png_ptr->chunk_name;
 438:fltk-1.3.4-1/png/pngerror.c ****    int iout = 0, ishift = 24;
 439:fltk-1.3.4-1/png/pngerror.c **** 
 440:fltk-1.3.4-1/png/pngerror.c ****    while (ishift >= 0)
  13              		.loc 1 440 10 view .LVU1
 434:fltk-1.3.4-1/png/pngerror.c ****     error_message)
  14              		.loc 1 434 1 is_stmt 0 view .LVU2
  15 0000 4154     		pushq	%r12
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 12, -16
 438:fltk-1.3.4-1/png/pngerror.c **** 
  18              		.loc 1 438 8 view .LVU3
  19 0002 4531C0   		xorl	%r8d, %r8d
 438:fltk-1.3.4-1/png/pngerror.c **** 
  20              		.loc 1 438 18 view .LVU4
  21 0005 B9180000 		movl	$24, %ecx
  21      00
 434:fltk-1.3.4-1/png/pngerror.c ****     error_message)
  22              		.loc 1 434 1 view .LVU5
  23 000a 55       		pushq	%rbp
  24              		.cfi_def_cfa_offset 24
  25              		.cfi_offset 6, -24
  26              	.LBB35:
 441:fltk-1.3.4-1/png/pngerror.c ****    {
 442:fltk-1.3.4-1/png/pngerror.c ****       int c = (int)(chunk_name >> ishift) & 0xff;
 443:fltk-1.3.4-1/png/pngerror.c **** 
 444:fltk-1.3.4-1/png/pngerror.c ****       ishift -= 8;
 445:fltk-1.3.4-1/png/pngerror.c ****       if (isnonalpha(c) != 0)
 446:fltk-1.3.4-1/png/pngerror.c ****       {
 447:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_LEFT_SQUARE_BRACKET;
 448:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[(c & 0xf0) >> 4];
  27              		.loc 1 448 36 view .LVU6
  28 000b 488D2D00 		leaq	png_digit(%rip), %rbp
  28      000000
  29              	.LBE35:
 434:fltk-1.3.4-1/png/pngerror.c ****     error_message)
  30              		.loc 1 434 1 view .LVU7
  31 0012 53       		pushq	%rbx
  32              		.cfi_def_cfa_offset 32
  33              		.cfi_offset 3, -32
  34              	.LVL1:
  35              	.L5:
  36              	.LBB36:
 442:fltk-1.3.4-1/png/pngerror.c **** 
  37              		.loc 1 442 7 is_stmt 1 view .LVU8
 442:fltk-1.3.4-1/png/pngerror.c **** 
  38              		.loc 1 442 32 is_stmt 0 view .LVU9
  39 0013 4189FB   		movl	%edi, %r11d
  40 0016 418D5801 		leal	1(%r8), %ebx
  41 001a 4D63D0   		movslq	%r8d, %r10
  42 001d 41D3EB   		shrl	%cl, %r11d
  43 0020 4C63CB   		movslq	%ebx, %r9
 444:fltk-1.3.4-1/png/pngerror.c ****       if (isnonalpha(c) != 0)
  44              		.loc 1 444 14 view .LVU10
  45 0023 83E908   		subl	$8, %ecx
  46              	.LVL2:
 444:fltk-1.3.4-1/png/pngerror.c ****       if (isnonalpha(c) != 0)
  47              		.loc 1 444 14 view .LVU11
  48 0026 4901F2   		addq	%rsi, %r10
 442:fltk-1.3.4-1/png/pngerror.c **** 
  49              		.loc 1 442 11 view .LVU12
  50 0029 410FB6C3 		movzbl	%r11b, %eax
  51              	.LVL3:
 444:fltk-1.3.4-1/png/pngerror.c ****       if (isnonalpha(c) != 0)
  52              		.loc 1 444 7 is_stmt 1 view .LVU13
 445:fltk-1.3.4-1/png/pngerror.c ****       {
  53              		.loc 1 445 7 view .LVU14
  54 002d 4901F1   		addq	%rsi, %r9
 445:fltk-1.3.4-1/png/pngerror.c ****       {
  55              		.loc 1 445 11 is_stmt 0 view .LVU15
  56 0030 448D60BF 		leal	-65(%rax), %r12d
 445:fltk-1.3.4-1/png/pngerror.c ****       {
  57              		.loc 1 445 10 view .LVU16
  58 0034 4183FC39 		cmpl	$57, %r12d
  59 0038 777E     		ja	.L11
 445:fltk-1.3.4-1/png/pngerror.c ****       {
  60              		.loc 1 445 11 view .LVU17
  61 003a 448D60A5 		leal	-91(%rax), %r12d
 445:fltk-1.3.4-1/png/pngerror.c ****       {
  62              		.loc 1 445 10 view .LVU18
  63 003e 4183FC05 		cmpl	$5, %r12d
  64 0042 7674     		jbe	.L11
 449:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[c & 0x0f];
 450:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_RIGHT_SQUARE_BRACKET;
 451:fltk-1.3.4-1/png/pngerror.c ****       }
 452:fltk-1.3.4-1/png/pngerror.c **** 
 453:fltk-1.3.4-1/png/pngerror.c ****       else
 454:fltk-1.3.4-1/png/pngerror.c ****       {
 455:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = (char)c;
  65              		.loc 1 455 10 is_stmt 1 view .LVU19
  66              		.loc 1 455 27 is_stmt 0 view .LVU20
  67 0044 45881A   		movb	%r11b, (%r10)
  68              	.LVL4:
  69              		.loc 1 455 21 view .LVU21
  70 0047 4189D8   		movl	%ebx, %r8d
  71              	.LVL5:
  72              	.L4:
  73              		.loc 1 455 21 view .LVU22
  74              	.LBE36:
 440:fltk-1.3.4-1/png/pngerror.c ****    {
  75              		.loc 1 440 10 is_stmt 1 view .LVU23
  76 004a 83F9F8   		cmpl	$-8, %ecx
  77 004d 75C4     		jne	.L5
 456:fltk-1.3.4-1/png/pngerror.c ****       }
 457:fltk-1.3.4-1/png/pngerror.c ****    }
 458:fltk-1.3.4-1/png/pngerror.c **** 
 459:fltk-1.3.4-1/png/pngerror.c ****    if (error_message == NULL)
  78              		.loc 1 459 4 view .LVU24
  79              		.loc 1 459 7 is_stmt 0 view .LVU25
  80 004f 4885D2   		testq	%rdx, %rdx
  81 0052 0F84A800 		je	.L16
  81      0000
  82              	.LBB37:
 460:fltk-1.3.4-1/png/pngerror.c ****       buffer[iout] = '\0';
 461:fltk-1.3.4-1/png/pngerror.c **** 
 462:fltk-1.3.4-1/png/pngerror.c ****    else
 463:fltk-1.3.4-1/png/pngerror.c ****    {
 464:fltk-1.3.4-1/png/pngerror.c ****       int iin = 0;
  83              		.loc 1 464 7 is_stmt 1 view .LVU26
  84              	.LVL6:
 465:fltk-1.3.4-1/png/pngerror.c **** 
 466:fltk-1.3.4-1/png/pngerror.c ****       buffer[iout++] = ':';
  85              		.loc 1 466 7 view .LVU27
  86              		.loc 1 466 18 is_stmt 0 view .LVU28
  87 0058 418D4001 		leal	1(%r8), %eax
 467:fltk-1.3.4-1/png/pngerror.c ****       buffer[iout++] = ' ';
  88              		.loc 1 467 18 view .LVU29
  89 005c 418D4802 		leal	2(%r8), %ecx
  90              	.LVL7:
 466:fltk-1.3.4-1/png/pngerror.c ****       buffer[iout++] = ' ';
  91              		.loc 1 466 22 view .LVU30
  92 0060 41C6013A 		movb	$58, (%r9)
  93              		.loc 1 467 7 is_stmt 1 view .LVU31
  94              		.loc 1 467 18 is_stmt 0 view .LVU32
  95 0064 4898     		cltq
  96 0066 4863C9   		movslq	%ecx, %rcx
  97              		.loc 1 467 22 view .LVU33
  98 0069 C6040620 		movb	$32, (%rsi,%rax)
 468:fltk-1.3.4-1/png/pngerror.c **** 
 469:fltk-1.3.4-1/png/pngerror.c ****       while (iin < PNG_MAX_ERROR_TEXT-1 && error_message[iin] != '\0')
  99              		.loc 1 469 7 is_stmt 1 view .LVU34
 100              		.loc 1 469 13 view .LVU35
 101 006d 418D4003 		leal	3(%r8), %eax
 102 0071 4D63C0   		movslq	%r8d, %r8
 103 0074 4801F1   		addq	%rsi, %rcx
 104 0077 4898     		cltq
 105 0079 4D8D88C6 		leaq	198(%r8), %r9
 105      000000
 106              		.loc 1 469 57 is_stmt 0 view .LVU36
 107 0080 4C29C2   		subq	%r8, %rdx
 108              	.LVL8:
 109              		.loc 1 469 57 view .LVU37
 110 0083 EB16     		jmp	.L8
 111              	.LVL9:
 112              		.p2align 4,,10
 113 0085 0F1F00   		.p2align 3
 114              	.L10:
 470:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = error_message[iin++];
 115              		.loc 1 470 10 is_stmt 1 view .LVU38
 116              		.loc 1 470 21 is_stmt 0 view .LVU39
 117 0088 4189C2   		movl	%eax, %r10d
 118              	.LVL10:
 119              		.loc 1 470 21 view .LVU40
 120 008b 4883C001 		addq	$1, %rax
 121              	.LVL11:
 122              		.loc 1 470 25 view .LVU41
 123 008f 408839   		movb	%dil, (%rcx)
 124              	.LVL12:
 469:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = error_message[iin++];
 125              		.loc 1 469 13 is_stmt 1 view .LVU42
 126 0092 498D4801 		leaq	1(%r8), %rcx
 127 0096 4939C1   		cmpq	%rax, %r9
 128 0099 7475     		je	.L17
 129              	.L8:
 130              	.LVL13:
 469:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = error_message[iin++];
 131              		.loc 1 469 57 is_stmt 0 view .LVU43
 132 009b 0FB67C02 		movzbl	-3(%rdx,%rax), %edi
 132      FD
 133 00a0 4989C8   		movq	%rcx, %r8
 469:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = error_message[iin++];
 134              		.loc 1 469 41 view .LVU44
 135 00a3 4084FF   		testb	%dil, %dil
 136 00a6 75E0     		jne	.L10
 137              	.LVL14:
 138              	.L9:
 471:fltk-1.3.4-1/png/pngerror.c **** 
 472:fltk-1.3.4-1/png/pngerror.c ****       /* iin < PNG_MAX_ERROR_TEXT, so the following is safe: */
 473:fltk-1.3.4-1/png/pngerror.c ****       buffer[iout] = '\0';
 139              		.loc 1 473 7 is_stmt 1 view .LVU45
 140              		.loc 1 473 20 is_stmt 0 view .LVU46
 141 00a8 41C60000 		movb	$0, (%r8)
 142              	.LBE37:
 474:fltk-1.3.4-1/png/pngerror.c ****    }
 475:fltk-1.3.4-1/png/pngerror.c **** }
 143              		.loc 1 475 1 view .LVU47
 144 00ac 5B       		popq	%rbx
 145              		.cfi_remember_state
 146              		.cfi_def_cfa_offset 24
 147 00ad 5D       		popq	%rbp
 148              		.cfi_def_cfa_offset 16
 149 00ae 415C     		popq	%r12
 150              		.cfi_def_cfa_offset 8
 151 00b0 C3       		ret
 152              	.LVL15:
 153              		.p2align 4,,10
 154 00b1 0F1F8000 		.p2align 3
 154      000000
 155              	.L11:
 156              		.cfi_restore_state
 157              	.LBB38:
 447:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[(c & 0xf0) >> 4];
 158              		.loc 1 447 10 is_stmt 1 view .LVU48
 448:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[c & 0x0f];
 159              		.loc 1 448 48 is_stmt 0 view .LVU49
 160 00b8 C1F804   		sarl	$4, %eax
 161              	.LVL16:
 449:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_RIGHT_SQUARE_BRACKET;
 162              		.loc 1 449 36 view .LVU50
 163 00bb 4183E30F 		andl	$15, %r11d
 164              	.LVL17:
 447:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[(c & 0xf0) >> 4];
 165              		.loc 1 447 25 view .LVU51
 166 00bf 41C6025B 		movb	$91, (%r10)
 448:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[c & 0x0f];
 167              		.loc 1 448 10 is_stmt 1 view .LVU52
 448:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[c & 0x0f];
 168              		.loc 1 448 36 is_stmt 0 view .LVU53
 169 00c3 4898     		cltq
 449:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_RIGHT_SQUARE_BRACKET;
 170              		.loc 1 449 25 view .LVU54
 171 00c5 460FB654 		movzbl	0(%rbp,%r11), %r10d
 171      1D00
 448:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[c & 0x0f];
 172              		.loc 1 448 25 view .LVU55
 173 00cb 0FB64405 		movzbl	0(%rbp,%rax), %eax
 173      00
 174 00d0 418801   		movb	%al, (%r9)
 449:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_RIGHT_SQUARE_BRACKET;
 175              		.loc 1 449 10 is_stmt 1 view .LVU56
 448:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = png_digit[c & 0x0f];
 176              		.loc 1 448 21 is_stmt 0 view .LVU57
 177 00d3 458D4802 		leal	2(%r8), %r9d
 449:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_RIGHT_SQUARE_BRACKET;
 178              		.loc 1 449 21 view .LVU58
 179 00d7 418D4003 		leal	3(%r8), %eax
 180              	.LVL18:
 450:fltk-1.3.4-1/png/pngerror.c ****       }
 181              		.loc 1 450 21 view .LVU59
 182 00db 4183C004 		addl	$4, %r8d
 449:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_RIGHT_SQUARE_BRACKET;
 183              		.loc 1 449 21 view .LVU60
 184 00df 4D63C9   		movslq	%r9d, %r9
 450:fltk-1.3.4-1/png/pngerror.c ****       }
 185              		.loc 1 450 21 view .LVU61
 186 00e2 4898     		cltq
 449:fltk-1.3.4-1/png/pngerror.c ****          buffer[iout++] = PNG_LITERAL_RIGHT_SQUARE_BRACKET;
 187              		.loc 1 449 25 view .LVU62
 188 00e4 4688140E 		movb	%r10b, (%rsi,%r9)
 450:fltk-1.3.4-1/png/pngerror.c ****       }
 189              		.loc 1 450 10 is_stmt 1 view .LVU63
 190              	.LVL19:
 450:fltk-1.3.4-1/png/pngerror.c ****       }
 191              		.loc 1 450 10 is_stmt 0 view .LVU64
 192 00e8 4D63C8   		movslq	%r8d, %r9
 450:fltk-1.3.4-1/png/pngerror.c ****       }
 193              		.loc 1 450 25 view .LVU65
 194 00eb C604065D 		movb	$93, (%rsi,%rax)
 195 00ef 4901F1   		addq	%rsi, %r9
 196 00f2 E953FFFF 		jmp	.L4
 196      FF
 197 00f7 660F1F84 		.p2align 4,,10
 197      00000000 
 197      00
 198              		.p2align 3
 199              	.L16:
 450:fltk-1.3.4-1/png/pngerror.c ****       }
 200              		.loc 1 450 25 view .LVU66
 201              	.LBE38:
 460:fltk-1.3.4-1/png/pngerror.c **** 
 202              		.loc 1 460 7 is_stmt 1 view .LVU67
 460:fltk-1.3.4-1/png/pngerror.c **** 
 203              		.loc 1 460 20 is_stmt 0 view .LVU68
 204 0100 41C60100 		movb	$0, (%r9)
 205              		.loc 1 475 1 view .LVU69
 206 0104 5B       		popq	%rbx
 207              		.cfi_remember_state
 208              		.cfi_def_cfa_offset 24
 209 0105 5D       		popq	%rbp
 210              		.cfi_def_cfa_offset 16
 211 0106 415C     		popq	%r12
 212              		.cfi_def_cfa_offset 8
 213 0108 C3       		ret
 214              	.LVL20:
 215 0109 0F1F8000 		.p2align 4,,10
 215      000000
 216              		.p2align 3
 217              	.L17:
 218              		.cfi_restore_state
 219              		.loc 1 475 1 view .LVU70
 220 0110 4D63C2   		movslq	%r10d, %r8
 221 0113 4901F0   		addq	%rsi, %r8
 222 0116 EB90     		jmp	.L9
 223              		.cfi_endproc
 224              	.LFE68:
 226              		.section	.rodata.png_default_warning.isra.0.str1.1,"aMS",@progbits,1
 227              	.LC0:
 228 0000 6C696270 		.string	"libpng warning: %s"
 228      6E672077 
 228      61726E69 
 228      6E673A20 
 228      257300
 229              		.section	.text.png_default_warning.isra.0,"ax",@progbits
 230              		.p2align 4
 232              	png_default_warning.isra.0:
 233              	.LVL21:
 234              	.LFB69:
 476:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS || ERROR_TEXT */
 477:fltk-1.3.4-1/png/pngerror.c **** 
 478:fltk-1.3.4-1/png/pngerror.c **** #if defined(PNG_READ_SUPPORTED) && defined(PNG_ERROR_TEXT_SUPPORTED)
 479:fltk-1.3.4-1/png/pngerror.c **** PNG_FUNCTION(void,PNGAPI
 480:fltk-1.3.4-1/png/pngerror.c **** png_chunk_error,(png_const_structrp png_ptr, png_const_charp error_message),
 481:fltk-1.3.4-1/png/pngerror.c ****    PNG_NORETURN)
 482:fltk-1.3.4-1/png/pngerror.c **** {
 483:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 484:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr == NULL)
 485:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, error_message);
 486:fltk-1.3.4-1/png/pngerror.c **** 
 487:fltk-1.3.4-1/png/pngerror.c ****    else
 488:fltk-1.3.4-1/png/pngerror.c ****    {
 489:fltk-1.3.4-1/png/pngerror.c ****       png_format_buffer(png_ptr, msg, error_message);
 490:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, msg);
 491:fltk-1.3.4-1/png/pngerror.c ****    }
 492:fltk-1.3.4-1/png/pngerror.c **** }
 493:fltk-1.3.4-1/png/pngerror.c **** #endif /* READ && ERROR_TEXT */
 494:fltk-1.3.4-1/png/pngerror.c **** 
 495:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_WARNINGS_SUPPORTED
 496:fltk-1.3.4-1/png/pngerror.c **** void PNGAPI
 497:fltk-1.3.4-1/png/pngerror.c **** png_chunk_warning(png_const_structrp png_ptr, png_const_charp warning_message)
 498:fltk-1.3.4-1/png/pngerror.c **** {
 499:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 500:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr == NULL)
 501:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, warning_message);
 502:fltk-1.3.4-1/png/pngerror.c **** 
 503:fltk-1.3.4-1/png/pngerror.c ****    else
 504:fltk-1.3.4-1/png/pngerror.c ****    {
 505:fltk-1.3.4-1/png/pngerror.c ****       png_format_buffer(png_ptr, msg, warning_message);
 506:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, msg);
 507:fltk-1.3.4-1/png/pngerror.c ****    }
 508:fltk-1.3.4-1/png/pngerror.c **** }
 509:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
 510:fltk-1.3.4-1/png/pngerror.c **** 
 511:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_READ_SUPPORTED
 512:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_BENIGN_ERRORS_SUPPORTED
 513:fltk-1.3.4-1/png/pngerror.c **** void PNGAPI
 514:fltk-1.3.4-1/png/pngerror.c **** png_chunk_benign_error(png_const_structrp png_ptr, png_const_charp
 515:fltk-1.3.4-1/png/pngerror.c ****     error_message)
 516:fltk-1.3.4-1/png/pngerror.c **** {
 517:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 518:fltk-1.3.4-1/png/pngerror.c ****       png_chunk_warning(png_ptr, error_message);
 519:fltk-1.3.4-1/png/pngerror.c **** 
 520:fltk-1.3.4-1/png/pngerror.c ****    else
 521:fltk-1.3.4-1/png/pngerror.c ****       png_chunk_error(png_ptr, error_message);
 522:fltk-1.3.4-1/png/pngerror.c **** 
 523:fltk-1.3.4-1/png/pngerror.c **** #  ifndef PNG_ERROR_TEXT_SUPPORTED
 524:fltk-1.3.4-1/png/pngerror.c ****       PNG_UNUSED(error_message)
 525:fltk-1.3.4-1/png/pngerror.c **** #  endif
 526:fltk-1.3.4-1/png/pngerror.c **** }
 527:fltk-1.3.4-1/png/pngerror.c **** #endif
 528:fltk-1.3.4-1/png/pngerror.c **** #endif /* READ */
 529:fltk-1.3.4-1/png/pngerror.c **** 
 530:fltk-1.3.4-1/png/pngerror.c **** void /* PRIVATE */
 531:fltk-1.3.4-1/png/pngerror.c **** png_chunk_report(png_const_structrp png_ptr, png_const_charp message, int error)
 532:fltk-1.3.4-1/png/pngerror.c **** {
 533:fltk-1.3.4-1/png/pngerror.c **** #  ifndef PNG_WARNINGS_SUPPORTED
 534:fltk-1.3.4-1/png/pngerror.c ****       PNG_UNUSED(message)
 535:fltk-1.3.4-1/png/pngerror.c **** #  endif
 536:fltk-1.3.4-1/png/pngerror.c **** 
 537:fltk-1.3.4-1/png/pngerror.c ****    /* This is always supported, but for just read or just write it
 538:fltk-1.3.4-1/png/pngerror.c ****     * unconditionally does the right thing.
 539:fltk-1.3.4-1/png/pngerror.c ****     */
 540:fltk-1.3.4-1/png/pngerror.c **** #  if defined(PNG_READ_SUPPORTED) && defined(PNG_WRITE_SUPPORTED)
 541:fltk-1.3.4-1/png/pngerror.c ****       if ((png_ptr->mode & PNG_IS_READ_STRUCT) != 0)
 542:fltk-1.3.4-1/png/pngerror.c **** #  endif
 543:fltk-1.3.4-1/png/pngerror.c **** 
 544:fltk-1.3.4-1/png/pngerror.c **** #  ifdef PNG_READ_SUPPORTED
 545:fltk-1.3.4-1/png/pngerror.c ****       {
 546:fltk-1.3.4-1/png/pngerror.c ****          if (error < PNG_CHUNK_ERROR)
 547:fltk-1.3.4-1/png/pngerror.c ****             png_chunk_warning(png_ptr, message);
 548:fltk-1.3.4-1/png/pngerror.c **** 
 549:fltk-1.3.4-1/png/pngerror.c ****          else
 550:fltk-1.3.4-1/png/pngerror.c ****             png_chunk_benign_error(png_ptr, message);
 551:fltk-1.3.4-1/png/pngerror.c ****       }
 552:fltk-1.3.4-1/png/pngerror.c **** #  endif
 553:fltk-1.3.4-1/png/pngerror.c **** 
 554:fltk-1.3.4-1/png/pngerror.c **** #  if defined(PNG_READ_SUPPORTED) && defined(PNG_WRITE_SUPPORTED)
 555:fltk-1.3.4-1/png/pngerror.c ****       else if ((png_ptr->mode & PNG_IS_READ_STRUCT) == 0)
 556:fltk-1.3.4-1/png/pngerror.c **** #  endif
 557:fltk-1.3.4-1/png/pngerror.c **** 
 558:fltk-1.3.4-1/png/pngerror.c **** #  ifdef PNG_WRITE_SUPPORTED
 559:fltk-1.3.4-1/png/pngerror.c ****       {
 560:fltk-1.3.4-1/png/pngerror.c ****          if (error < PNG_CHUNK_WRITE_ERROR)
 561:fltk-1.3.4-1/png/pngerror.c ****             png_app_warning(png_ptr, message);
 562:fltk-1.3.4-1/png/pngerror.c **** 
 563:fltk-1.3.4-1/png/pngerror.c ****          else
 564:fltk-1.3.4-1/png/pngerror.c ****             png_app_error(png_ptr, message);
 565:fltk-1.3.4-1/png/pngerror.c ****       }
 566:fltk-1.3.4-1/png/pngerror.c **** #  endif
 567:fltk-1.3.4-1/png/pngerror.c **** }
 568:fltk-1.3.4-1/png/pngerror.c **** 
 569:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_TEXT_SUPPORTED
 570:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_FLOATING_POINT_SUPPORTED
 571:fltk-1.3.4-1/png/pngerror.c **** PNG_FUNCTION(void,
 572:fltk-1.3.4-1/png/pngerror.c **** png_fixed_error,(png_const_structrp png_ptr, png_const_charp name),PNG_NORETURN)
 573:fltk-1.3.4-1/png/pngerror.c **** {
 574:fltk-1.3.4-1/png/pngerror.c **** #  define fixed_message "fixed point overflow in "
 575:fltk-1.3.4-1/png/pngerror.c **** #  define fixed_message_ln ((sizeof fixed_message)-1)
 576:fltk-1.3.4-1/png/pngerror.c ****    int  iin;
 577:fltk-1.3.4-1/png/pngerror.c ****    char msg[fixed_message_ln+PNG_MAX_ERROR_TEXT];
 578:fltk-1.3.4-1/png/pngerror.c ****    memcpy(msg, fixed_message, fixed_message_ln);
 579:fltk-1.3.4-1/png/pngerror.c ****    iin = 0;
 580:fltk-1.3.4-1/png/pngerror.c ****    if (name != NULL)
 581:fltk-1.3.4-1/png/pngerror.c ****       while (iin < (PNG_MAX_ERROR_TEXT-1) && name[iin] != 0)
 582:fltk-1.3.4-1/png/pngerror.c ****       {
 583:fltk-1.3.4-1/png/pngerror.c ****          msg[fixed_message_ln + iin] = name[iin];
 584:fltk-1.3.4-1/png/pngerror.c ****          ++iin;
 585:fltk-1.3.4-1/png/pngerror.c ****       }
 586:fltk-1.3.4-1/png/pngerror.c ****    msg[fixed_message_ln + iin] = 0;
 587:fltk-1.3.4-1/png/pngerror.c ****    png_error(png_ptr, msg);
 588:fltk-1.3.4-1/png/pngerror.c **** }
 589:fltk-1.3.4-1/png/pngerror.c **** #endif
 590:fltk-1.3.4-1/png/pngerror.c **** #endif
 591:fltk-1.3.4-1/png/pngerror.c **** 
 592:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_SETJMP_SUPPORTED
 593:fltk-1.3.4-1/png/pngerror.c **** /* This API only exists if ANSI-C style error handling is used,
 594:fltk-1.3.4-1/png/pngerror.c ****  * otherwise it is necessary for png_default_error to be overridden.
 595:fltk-1.3.4-1/png/pngerror.c ****  */
 596:fltk-1.3.4-1/png/pngerror.c **** jmp_buf* PNGAPI
 597:fltk-1.3.4-1/png/pngerror.c **** png_set_longjmp_fn(png_structrp png_ptr, png_longjmp_ptr longjmp_fn,
 598:fltk-1.3.4-1/png/pngerror.c ****     size_t jmp_buf_size)
 599:fltk-1.3.4-1/png/pngerror.c **** {
 600:fltk-1.3.4-1/png/pngerror.c ****    /* From libpng 1.6.0 the app gets one chance to set a 'jmpbuf_size' value
 601:fltk-1.3.4-1/png/pngerror.c ****     * and it must not change after that.  Libpng doesn't care how big the
 602:fltk-1.3.4-1/png/pngerror.c ****     * buffer is, just that it doesn't change.
 603:fltk-1.3.4-1/png/pngerror.c ****     *
 604:fltk-1.3.4-1/png/pngerror.c ****     * If the buffer size is no *larger* than the size of jmp_buf when libpng is
 605:fltk-1.3.4-1/png/pngerror.c ****     * compiled a built in jmp_buf is returned; this preserves the pre-1.6.0
 606:fltk-1.3.4-1/png/pngerror.c ****     * semantics that this call will not fail.  If the size is larger, however,
 607:fltk-1.3.4-1/png/pngerror.c ****     * the buffer is allocated and this may fail, causing the function to return
 608:fltk-1.3.4-1/png/pngerror.c ****     * NULL.
 609:fltk-1.3.4-1/png/pngerror.c ****     */
 610:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr == NULL)
 611:fltk-1.3.4-1/png/pngerror.c ****       return NULL;
 612:fltk-1.3.4-1/png/pngerror.c **** 
 613:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr->jmp_buf_ptr == NULL)
 614:fltk-1.3.4-1/png/pngerror.c ****    {
 615:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->jmp_buf_size = 0; /* not allocated */
 616:fltk-1.3.4-1/png/pngerror.c **** 
 617:fltk-1.3.4-1/png/pngerror.c ****       if (jmp_buf_size <= (sizeof png_ptr->jmp_buf_local))
 618:fltk-1.3.4-1/png/pngerror.c ****          png_ptr->jmp_buf_ptr = &png_ptr->jmp_buf_local;
 619:fltk-1.3.4-1/png/pngerror.c **** 
 620:fltk-1.3.4-1/png/pngerror.c ****       else
 621:fltk-1.3.4-1/png/pngerror.c ****       {
 622:fltk-1.3.4-1/png/pngerror.c ****          png_ptr->jmp_buf_ptr = png_voidcast(jmp_buf *,
 623:fltk-1.3.4-1/png/pngerror.c ****             png_malloc_warn(png_ptr, jmp_buf_size));
 624:fltk-1.3.4-1/png/pngerror.c **** 
 625:fltk-1.3.4-1/png/pngerror.c ****          if (png_ptr->jmp_buf_ptr == NULL)
 626:fltk-1.3.4-1/png/pngerror.c ****             return NULL; /* new NULL return on OOM */
 627:fltk-1.3.4-1/png/pngerror.c **** 
 628:fltk-1.3.4-1/png/pngerror.c ****          png_ptr->jmp_buf_size = jmp_buf_size;
 629:fltk-1.3.4-1/png/pngerror.c ****       }
 630:fltk-1.3.4-1/png/pngerror.c ****    }
 631:fltk-1.3.4-1/png/pngerror.c **** 
 632:fltk-1.3.4-1/png/pngerror.c ****    else /* Already allocated: check the size */
 633:fltk-1.3.4-1/png/pngerror.c ****    {
 634:fltk-1.3.4-1/png/pngerror.c ****       size_t size = png_ptr->jmp_buf_size;
 635:fltk-1.3.4-1/png/pngerror.c **** 
 636:fltk-1.3.4-1/png/pngerror.c ****       if (size == 0)
 637:fltk-1.3.4-1/png/pngerror.c ****       {
 638:fltk-1.3.4-1/png/pngerror.c ****          size = (sizeof png_ptr->jmp_buf_local);
 639:fltk-1.3.4-1/png/pngerror.c ****          if (png_ptr->jmp_buf_ptr != &png_ptr->jmp_buf_local)
 640:fltk-1.3.4-1/png/pngerror.c ****          {
 641:fltk-1.3.4-1/png/pngerror.c ****             /* This is an internal error in libpng: somehow we have been left
 642:fltk-1.3.4-1/png/pngerror.c ****              * with a stack allocated jmp_buf when the application regained
 643:fltk-1.3.4-1/png/pngerror.c ****              * control.  It's always possible to fix this up, but for the moment
 644:fltk-1.3.4-1/png/pngerror.c ****              * this is a png_error because that makes it easy to detect.
 645:fltk-1.3.4-1/png/pngerror.c ****              */
 646:fltk-1.3.4-1/png/pngerror.c ****             png_error(png_ptr, "Libpng jmp_buf still allocated");
 647:fltk-1.3.4-1/png/pngerror.c ****             /* png_ptr->jmp_buf_ptr = &png_ptr->jmp_buf_local; */
 648:fltk-1.3.4-1/png/pngerror.c ****          }
 649:fltk-1.3.4-1/png/pngerror.c ****       }
 650:fltk-1.3.4-1/png/pngerror.c **** 
 651:fltk-1.3.4-1/png/pngerror.c ****       if (size != jmp_buf_size)
 652:fltk-1.3.4-1/png/pngerror.c ****       {
 653:fltk-1.3.4-1/png/pngerror.c ****          png_warning(png_ptr, "Application jmp_buf size changed");
 654:fltk-1.3.4-1/png/pngerror.c ****          return NULL; /* caller will probably crash: no choice here */
 655:fltk-1.3.4-1/png/pngerror.c ****       }
 656:fltk-1.3.4-1/png/pngerror.c ****    }
 657:fltk-1.3.4-1/png/pngerror.c **** 
 658:fltk-1.3.4-1/png/pngerror.c ****    /* Finally fill in the function, now we have a satisfactory buffer. It is
 659:fltk-1.3.4-1/png/pngerror.c ****     * valid to change the function on every call.
 660:fltk-1.3.4-1/png/pngerror.c ****     */
 661:fltk-1.3.4-1/png/pngerror.c ****    png_ptr->longjmp_fn = longjmp_fn;
 662:fltk-1.3.4-1/png/pngerror.c ****    return png_ptr->jmp_buf_ptr;
 663:fltk-1.3.4-1/png/pngerror.c **** }
 664:fltk-1.3.4-1/png/pngerror.c **** 
 665:fltk-1.3.4-1/png/pngerror.c **** void /* PRIVATE */
 666:fltk-1.3.4-1/png/pngerror.c **** png_free_jmpbuf(png_structrp png_ptr)
 667:fltk-1.3.4-1/png/pngerror.c **** {
 668:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 669:fltk-1.3.4-1/png/pngerror.c ****    {
 670:fltk-1.3.4-1/png/pngerror.c ****       jmp_buf *jb = png_ptr->jmp_buf_ptr;
 671:fltk-1.3.4-1/png/pngerror.c **** 
 672:fltk-1.3.4-1/png/pngerror.c ****       /* A size of 0 is used to indicate a local, stack, allocation of the
 673:fltk-1.3.4-1/png/pngerror.c ****        * pointer; used here and in png.c
 674:fltk-1.3.4-1/png/pngerror.c ****        */
 675:fltk-1.3.4-1/png/pngerror.c ****       if (jb != NULL && png_ptr->jmp_buf_size > 0)
 676:fltk-1.3.4-1/png/pngerror.c ****       {
 677:fltk-1.3.4-1/png/pngerror.c **** 
 678:fltk-1.3.4-1/png/pngerror.c ****          /* This stuff is so that a failure to free the error control structure
 679:fltk-1.3.4-1/png/pngerror.c ****           * does not leave libpng in a state with no valid error handling: the
 680:fltk-1.3.4-1/png/pngerror.c ****           * free always succeeds, if there is an error it gets ignored.
 681:fltk-1.3.4-1/png/pngerror.c ****           */
 682:fltk-1.3.4-1/png/pngerror.c ****          if (jb != &png_ptr->jmp_buf_local)
 683:fltk-1.3.4-1/png/pngerror.c ****          {
 684:fltk-1.3.4-1/png/pngerror.c ****             /* Make an internal, libpng, jmp_buf to return here */
 685:fltk-1.3.4-1/png/pngerror.c ****             jmp_buf free_jmp_buf;
 686:fltk-1.3.4-1/png/pngerror.c **** 
 687:fltk-1.3.4-1/png/pngerror.c ****             if (!setjmp(free_jmp_buf))
 688:fltk-1.3.4-1/png/pngerror.c ****             {
 689:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->jmp_buf_ptr = &free_jmp_buf; /* come back here */
 690:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->jmp_buf_size = 0; /* stack allocation */
 691:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->longjmp_fn = longjmp;
 692:fltk-1.3.4-1/png/pngerror.c ****                png_free(png_ptr, jb); /* Return to setjmp on error */
 693:fltk-1.3.4-1/png/pngerror.c ****             }
 694:fltk-1.3.4-1/png/pngerror.c ****          }
 695:fltk-1.3.4-1/png/pngerror.c ****       }
 696:fltk-1.3.4-1/png/pngerror.c **** 
 697:fltk-1.3.4-1/png/pngerror.c ****       /* *Always* cancel everything out: */
 698:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->jmp_buf_size = 0;
 699:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->jmp_buf_ptr = NULL;
 700:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->longjmp_fn = 0;
 701:fltk-1.3.4-1/png/pngerror.c ****    }
 702:fltk-1.3.4-1/png/pngerror.c **** }
 703:fltk-1.3.4-1/png/pngerror.c **** #endif
 704:fltk-1.3.4-1/png/pngerror.c **** 
 705:fltk-1.3.4-1/png/pngerror.c **** /* This is the default error handling function.  Note that replacements for
 706:fltk-1.3.4-1/png/pngerror.c ****  * this function MUST NOT RETURN, or the program will likely crash.  This
 707:fltk-1.3.4-1/png/pngerror.c ****  * function is used by default, or if the program supplies NULL for the
 708:fltk-1.3.4-1/png/pngerror.c ****  * error function pointer in png_set_error_fn().
 709:fltk-1.3.4-1/png/pngerror.c ****  */
 710:fltk-1.3.4-1/png/pngerror.c **** static PNG_FUNCTION(void /* PRIVATE */,
 711:fltk-1.3.4-1/png/pngerror.c **** png_default_error,(png_const_structrp png_ptr, png_const_charp error_message),
 712:fltk-1.3.4-1/png/pngerror.c ****    PNG_NORETURN)
 713:fltk-1.3.4-1/png/pngerror.c **** {
 714:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_CONSOLE_IO_SUPPORTED
 715:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
 716:fltk-1.3.4-1/png/pngerror.c ****    /* Check on NULL only added in 1.5.4 */
 717:fltk-1.3.4-1/png/pngerror.c ****    if (error_message != NULL && *error_message == PNG_LITERAL_SHARP)
 718:fltk-1.3.4-1/png/pngerror.c ****    {
 719:fltk-1.3.4-1/png/pngerror.c ****       /* Strip "#nnnn " from beginning of error message. */
 720:fltk-1.3.4-1/png/pngerror.c ****       int offset;
 721:fltk-1.3.4-1/png/pngerror.c ****       char error_number[16];
 722:fltk-1.3.4-1/png/pngerror.c ****       for (offset = 0; offset<15; offset++)
 723:fltk-1.3.4-1/png/pngerror.c ****       {
 724:fltk-1.3.4-1/png/pngerror.c ****          error_number[offset] = error_message[offset + 1];
 725:fltk-1.3.4-1/png/pngerror.c ****          if (error_message[offset] == ' ')
 726:fltk-1.3.4-1/png/pngerror.c ****             break;
 727:fltk-1.3.4-1/png/pngerror.c ****       }
 728:fltk-1.3.4-1/png/pngerror.c **** 
 729:fltk-1.3.4-1/png/pngerror.c ****       if ((offset > 1) && (offset < 15))
 730:fltk-1.3.4-1/png/pngerror.c ****       {
 731:fltk-1.3.4-1/png/pngerror.c ****          error_number[offset - 1] = '\0';
 732:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, "libpng error no. %s: %s",
 733:fltk-1.3.4-1/png/pngerror.c ****              error_number, error_message + offset + 1);
 734:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, PNG_STRING_NEWLINE);
 735:fltk-1.3.4-1/png/pngerror.c ****       }
 736:fltk-1.3.4-1/png/pngerror.c **** 
 737:fltk-1.3.4-1/png/pngerror.c ****       else
 738:fltk-1.3.4-1/png/pngerror.c ****       {
 739:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, "libpng error: %s, offset=%d",
 740:fltk-1.3.4-1/png/pngerror.c ****              error_message, offset);
 741:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, PNG_STRING_NEWLINE);
 742:fltk-1.3.4-1/png/pngerror.c ****       }
 743:fltk-1.3.4-1/png/pngerror.c ****    }
 744:fltk-1.3.4-1/png/pngerror.c ****    else
 745:fltk-1.3.4-1/png/pngerror.c **** #endif
 746:fltk-1.3.4-1/png/pngerror.c ****    {
 747:fltk-1.3.4-1/png/pngerror.c ****       fprintf(stderr, "libpng error: %s", error_message ? error_message :
 748:fltk-1.3.4-1/png/pngerror.c ****          "undefined");
 749:fltk-1.3.4-1/png/pngerror.c ****       fprintf(stderr, PNG_STRING_NEWLINE);
 750:fltk-1.3.4-1/png/pngerror.c ****    }
 751:fltk-1.3.4-1/png/pngerror.c **** #else
 752:fltk-1.3.4-1/png/pngerror.c ****    PNG_UNUSED(error_message) /* Make compiler happy */
 753:fltk-1.3.4-1/png/pngerror.c **** #endif
 754:fltk-1.3.4-1/png/pngerror.c ****    png_longjmp(png_ptr, 1);
 755:fltk-1.3.4-1/png/pngerror.c **** }
 756:fltk-1.3.4-1/png/pngerror.c **** 
 757:fltk-1.3.4-1/png/pngerror.c **** PNG_FUNCTION(void,PNGAPI
 758:fltk-1.3.4-1/png/pngerror.c **** png_longjmp,(png_const_structrp png_ptr, int val),PNG_NORETURN)
 759:fltk-1.3.4-1/png/pngerror.c **** {
 760:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_SETJMP_SUPPORTED
 761:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL && png_ptr->longjmp_fn != NULL &&
 762:fltk-1.3.4-1/png/pngerror.c ****        png_ptr->jmp_buf_ptr != NULL)
 763:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->longjmp_fn(*png_ptr->jmp_buf_ptr, val);
 764:fltk-1.3.4-1/png/pngerror.c **** #else
 765:fltk-1.3.4-1/png/pngerror.c ****    PNG_UNUSED(png_ptr)
 766:fltk-1.3.4-1/png/pngerror.c ****    PNG_UNUSED(val)
 767:fltk-1.3.4-1/png/pngerror.c **** #endif
 768:fltk-1.3.4-1/png/pngerror.c **** 
 769:fltk-1.3.4-1/png/pngerror.c ****    /* If control reaches this point, png_longjmp() must not return. The only
 770:fltk-1.3.4-1/png/pngerror.c ****     * choice is to terminate the whole process (or maybe the thread); to do
 771:fltk-1.3.4-1/png/pngerror.c ****     * this the ANSI-C abort() function is used unless a different method is 
 772:fltk-1.3.4-1/png/pngerror.c ****     * implemented by overriding the default configuration setting for
 773:fltk-1.3.4-1/png/pngerror.c ****     * PNG_ABORT().
 774:fltk-1.3.4-1/png/pngerror.c ****     */
 775:fltk-1.3.4-1/png/pngerror.c ****    PNG_ABORT();
 776:fltk-1.3.4-1/png/pngerror.c **** }
 777:fltk-1.3.4-1/png/pngerror.c **** 
 778:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_WARNINGS_SUPPORTED
 779:fltk-1.3.4-1/png/pngerror.c **** /* This function is called when there is a warning, but the library thinks
 780:fltk-1.3.4-1/png/pngerror.c ****  * it can continue anyway.  Replacement functions don't have to do anything
 781:fltk-1.3.4-1/png/pngerror.c ****  * here if you don't want them to.  In the default configuration, png_ptr is
 782:fltk-1.3.4-1/png/pngerror.c ****  * not used, but it is passed in case it may be useful.
 783:fltk-1.3.4-1/png/pngerror.c ****  */
 784:fltk-1.3.4-1/png/pngerror.c **** static void /* PRIVATE */
 785:fltk-1.3.4-1/png/pngerror.c **** png_default_warning(png_const_structrp png_ptr, png_const_charp warning_message)
 235              		.loc 1 785 1 is_stmt 1 view -0
 236              		.cfi_startproc
 786:fltk-1.3.4-1/png/pngerror.c **** {
 787:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_CONSOLE_IO_SUPPORTED
 788:fltk-1.3.4-1/png/pngerror.c **** #  ifdef PNG_ERROR_NUMBERS_SUPPORTED
 789:fltk-1.3.4-1/png/pngerror.c ****    if (*warning_message == PNG_LITERAL_SHARP)
 790:fltk-1.3.4-1/png/pngerror.c ****    {
 791:fltk-1.3.4-1/png/pngerror.c ****       int offset;
 792:fltk-1.3.4-1/png/pngerror.c ****       char warning_number[16];
 793:fltk-1.3.4-1/png/pngerror.c ****       for (offset = 0; offset < 15; offset++)
 794:fltk-1.3.4-1/png/pngerror.c ****       {
 795:fltk-1.3.4-1/png/pngerror.c ****          warning_number[offset] = warning_message[offset + 1];
 796:fltk-1.3.4-1/png/pngerror.c ****          if (warning_message[offset] == ' ')
 797:fltk-1.3.4-1/png/pngerror.c ****             break;
 798:fltk-1.3.4-1/png/pngerror.c ****       }
 799:fltk-1.3.4-1/png/pngerror.c **** 
 800:fltk-1.3.4-1/png/pngerror.c ****       if ((offset > 1) && (offset < 15))
 801:fltk-1.3.4-1/png/pngerror.c ****       {
 802:fltk-1.3.4-1/png/pngerror.c ****          warning_number[offset + 1] = '\0';
 803:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, "libpng warning no. %s: %s",
 804:fltk-1.3.4-1/png/pngerror.c ****              warning_number, warning_message + offset);
 805:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, PNG_STRING_NEWLINE);
 806:fltk-1.3.4-1/png/pngerror.c ****       }
 807:fltk-1.3.4-1/png/pngerror.c **** 
 808:fltk-1.3.4-1/png/pngerror.c ****       else
 809:fltk-1.3.4-1/png/pngerror.c ****       {
 810:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, "libpng warning: %s",
 811:fltk-1.3.4-1/png/pngerror.c ****              warning_message);
 812:fltk-1.3.4-1/png/pngerror.c ****          fprintf(stderr, PNG_STRING_NEWLINE);
 813:fltk-1.3.4-1/png/pngerror.c ****       }
 814:fltk-1.3.4-1/png/pngerror.c ****    }
 815:fltk-1.3.4-1/png/pngerror.c ****    else
 816:fltk-1.3.4-1/png/pngerror.c **** #  endif
 817:fltk-1.3.4-1/png/pngerror.c **** 
 818:fltk-1.3.4-1/png/pngerror.c ****    {
 819:fltk-1.3.4-1/png/pngerror.c ****       fprintf(stderr, "libpng warning: %s", warning_message);
 237              		.loc 1 819 7 view .LVU72
 238              	.LBB39:
 239              	.LBI39:
 240              		.file 2 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
 241              		.loc 2 98 1 view .LVU73
 242              	.LBB40:
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 243              		.loc 2 100 3 view .LVU74
 244              	.LBE40:
 245              	.LBE39:
 785:fltk-1.3.4-1/png/pngerror.c **** {
 246              		.loc 1 785 1 is_stmt 0 view .LVU75
 247 0000 4883EC08 		subq	$8, %rsp
 248              		.cfi_def_cfa_offset 16
 785:fltk-1.3.4-1/png/pngerror.c **** {
 249              		.loc 1 785 1 view .LVU76
 250 0004 4889F9   		movq	%rdi, %rcx
 251              	.LBB42:
 252              	.LBB41:
 253              		.loc 2 100 10 view .LVU77
 254 0007 488B3D00 		movq	stderr(%rip), %rdi
 254      000000
 255              	.LVL22:
 256              		.loc 2 100 10 view .LVU78
 257 000e 31C0     		xorl	%eax, %eax
 258 0010 BE010000 		movl	$1, %esi
 258      00
 259 0015 488D1500 		leaq	.LC0(%rip), %rdx
 259      000000
 260 001c E8000000 		call	__fprintf_chk@PLT
 260      00
 261              	.LVL23:
 262              		.loc 2 100 10 view .LVU79
 263              	.LBE41:
 264              	.LBE42:
 820:fltk-1.3.4-1/png/pngerror.c ****       fprintf(stderr, PNG_STRING_NEWLINE);
 265              		.loc 1 820 7 is_stmt 1 view .LVU80
 266              	.LBB43:
 267              	.LBI43:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 268              		.loc 2 98 1 view .LVU81
 269              	.LBB44:
 270              		.loc 2 100 3 view .LVU82
 271              		.loc 2 100 10 is_stmt 0 view .LVU83
 272 0021 488B3500 		movq	stderr(%rip), %rsi
 272      000000
 273 0028 BF0A0000 		movl	$10, %edi
 273      00
 274              	.LBE44:
 275              	.LBE43:
 821:fltk-1.3.4-1/png/pngerror.c ****    }
 822:fltk-1.3.4-1/png/pngerror.c **** #else
 823:fltk-1.3.4-1/png/pngerror.c ****    PNG_UNUSED(warning_message) /* Make compiler happy */
 824:fltk-1.3.4-1/png/pngerror.c **** #endif
 825:fltk-1.3.4-1/png/pngerror.c ****    PNG_UNUSED(png_ptr) /* Make compiler happy */
 826:fltk-1.3.4-1/png/pngerror.c **** }
 276              		.loc 1 826 1 view .LVU84
 277 002d 4883C408 		addq	$8, %rsp
 278              		.cfi_def_cfa_offset 8
 279              	.LBB46:
 280              	.LBB45:
 281              		.loc 2 100 10 view .LVU85
 282 0031 E9000000 		jmp	fputc@PLT
 282      00
 283              	.LVL24:
 284              		.loc 2 100 10 view .LVU86
 285              	.LBE45:
 286              	.LBE46:
 287              		.cfi_endproc
 288              	.LFE69:
 290              		.section	.text.png_safecat.part.0,"ax",@progbits
 291              		.p2align 4
 293              	png_safecat.part.0:
 294              	.LVL25:
 295              	.LFB70:
 112:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 296              		.loc 1 112 1 is_stmt 1 view -0
 297              		.cfi_startproc
 117:fltk-1.3.4-1/png/pngerror.c ****          while (*string != '\0' && pos < bufsize-1)
 298              		.loc 1 117 7 view .LVU88
 299 0000 4889D0   		movq	%rdx, %rax
 117:fltk-1.3.4-1/png/pngerror.c ****          while (*string != '\0' && pos < bufsize-1)
 300              		.loc 1 117 10 is_stmt 0 view .LVU89
 301 0003 4885C9   		testq	%rcx, %rcx
 302 0006 742D     		je	.L21
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 303              		.loc 1 118 16 is_stmt 1 view .LVU90
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 304              		.loc 1 118 17 is_stmt 0 view .LVU91
 305 0008 0FB611   		movzbl	(%rcx), %edx
 306              	.LVL26:
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 307              		.loc 1 118 16 view .LVU92
 308 000b 84D2     		testb	%dl, %dl
 309 000d 7426     		je	.L21
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 310              		.loc 1 118 49 view .LVU93
 311 000f 4883EE01 		subq	$1, %rsi
 312              	.LVL27:
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 313              		.loc 1 118 33 view .LVU94
 314 0013 4839C6   		cmpq	%rax, %rsi
 315 0016 761D     		jbe	.L21
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 316              		.loc 1 118 17 view .LVU95
 317 0018 4829C1   		subq	%rax, %rcx
 318              	.LVL28:
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 319              		.loc 1 118 17 view .LVU96
 320 001b EB08     		jmp	.L22
 321              	.LVL29:
 322 001d 0F1F00   		.p2align 4,,10
 323              		.p2align 3
 324              	.L31:
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 325              		.loc 1 118 33 view .LVU97
 326 0020 4839F0   		cmpq	%rsi, %rax
 327 0023 7310     		jnb	.L21
 328              	.LVL30:
 329              	.L22:
 119:fltk-1.3.4-1/png/pngerror.c **** 
 330              		.loc 1 119 12 is_stmt 1 view .LVU98
 119:fltk-1.3.4-1/png/pngerror.c **** 
 331              		.loc 1 119 22 is_stmt 0 view .LVU99
 332 0025 4883C001 		addq	$1, %rax
 333              	.LVL31:
 119:fltk-1.3.4-1/png/pngerror.c **** 
 334              		.loc 1 119 26 view .LVU100
 335 0029 885407FF 		movb	%dl, -1(%rdi,%rax)
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 336              		.loc 1 118 16 is_stmt 1 view .LVU101
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 337              		.loc 1 118 17 is_stmt 0 view .LVU102
 338 002d 0FB61401 		movzbl	(%rcx,%rax), %edx
 118:fltk-1.3.4-1/png/pngerror.c ****            buffer[pos++] = *string++;
 339              		.loc 1 118 16 view .LVU103
 340 0031 84D2     		testb	%dl, %dl
 341 0033 75EB     		jne	.L31
 342              	.LVL32:
 343              	.L21:
 121:fltk-1.3.4-1/png/pngerror.c ****    }
 344              		.loc 1 121 7 is_stmt 1 view .LVU104
 121:fltk-1.3.4-1/png/pngerror.c ****    }
 345              		.loc 1 121 19 is_stmt 0 view .LVU105
 346 0035 C6040700 		movb	$0, (%rdi,%rax)
 124:fltk-1.3.4-1/png/pngerror.c **** }
 347              		.loc 1 124 4 is_stmt 1 view .LVU106
 125:fltk-1.3.4-1/png/pngerror.c **** 
 348              		.loc 1 125 1 is_stmt 0 view .LVU107
 349 0039 C3       		ret
 350              		.cfi_endproc
 351              	.LFE70:
 353              		.section	.text.png_warning_parameter.part.0,"ax",@progbits
 354              		.p2align 4
 356              	png_warning_parameter.part.0:
 357              	.LVL33:
 358              	.LFB71:
 247:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 359              		.loc 1 247 1 is_stmt 1 view -0
 360              		.cfi_startproc
 251:fltk-1.3.4-1/png/pngerror.c **** }
 361              		.loc 1 251 7 view .LVU109
 251:fltk-1.3.4-1/png/pngerror.c **** }
 362              		.loc 1 251 26 is_stmt 0 view .LVU110
 363 0000 4863F6   		movslq	%esi, %rsi
 247:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 364              		.loc 1 247 1 view .LVU111
 365 0003 4889D1   		movq	%rdx, %rcx
 251:fltk-1.3.4-1/png/pngerror.c **** }
 366              		.loc 1 251 26 view .LVU112
 367 0006 48C1E605 		salq	$5, %rsi
 368              	.LVL34:
 251:fltk-1.3.4-1/png/pngerror.c **** }
 369              		.loc 1 251 26 view .LVU113
 370 000a 488D7C3E 		leaq	-32(%rsi,%rdi), %rdi
 370      E0
 371              	.LVL35:
 372              	.LBB47:
 373              	.LBI47:
 112:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 374              		.loc 1 112 1 is_stmt 1 view .LVU114
 375              	.LBB48:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 376              		.loc 1 115 4 view .LVU115
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 377              		.loc 1 115 7 is_stmt 0 view .LVU116
 378 000f 4885FF   		testq	%rdi, %rdi
 379 0012 740C     		je	.L32
 380 0014 31D2     		xorl	%edx, %edx
 381              	.LVL36:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 382              		.loc 1 115 7 view .LVU117
 383 0016 BE200000 		movl	$32, %esi
 383      00
 384 001b E9000000 		jmp	png_safecat.part.0
 384      00
 385              	.LVL37:
 386              		.p2align 4,,10
 387              		.p2align 3
 388              	.L32:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 389              		.loc 1 115 7 view .LVU118
 390              	.LBE48:
 391              	.LBE47:
 252:fltk-1.3.4-1/png/pngerror.c **** 
 392              		.loc 1 252 1 view .LVU119
 393 0020 C3       		ret
 394              		.cfi_endproc
 395              	.LFE71:
 397              		.section	.text.png_safecat,"ax",@progbits
 398              		.p2align 4
 399              		.globl	png_safecat
 401              	png_safecat:
 402              	.LVL38:
 403              	.LFB42:
 114:fltk-1.3.4-1/png/pngerror.c ****    if (buffer != NULL && pos < bufsize)
 404              		.loc 1 114 1 is_stmt 1 view -0
 405              		.cfi_startproc
 114:fltk-1.3.4-1/png/pngerror.c ****    if (buffer != NULL && pos < bufsize)
 406              		.loc 1 114 1 is_stmt 0 view .LVU121
 407 0000 F30F1EFA 		endbr64
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 408              		.loc 1 115 4 is_stmt 1 view .LVU122
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 409              		.loc 1 115 7 is_stmt 0 view .LVU123
 410 0004 4885FF   		testq	%rdi, %rdi
 411 0007 740F     		je	.L35
 412 0009 4839F2   		cmpq	%rsi, %rdx
 413 000c 730A     		jnb	.L35
 414 000e E9000000 		jmp	png_safecat.part.0
 414      00
 415              	.LVL39:
 416              		.p2align 4,,10
 417 0013 0F1F4400 		.p2align 3
 417      00
 418              	.L35:
 124:fltk-1.3.4-1/png/pngerror.c **** }
 419              		.loc 1 124 4 is_stmt 1 view .LVU124
 125:fltk-1.3.4-1/png/pngerror.c **** 
 420              		.loc 1 125 1 is_stmt 0 view .LVU125
 421 0018 4889D0   		movq	%rdx, %rax
 422 001b C3       		ret
 423              		.cfi_endproc
 424              	.LFE42:
 426              		.section	.text.png_format_number,"ax",@progbits
 427              		.p2align 4
 428              		.globl	png_format_number
 430              	png_format_number:
 431              	.LVL40:
 432              	.LFB43:
 135:fltk-1.3.4-1/png/pngerror.c ****    int count = 0;    /* number of digits output */
 433              		.loc 1 135 1 is_stmt 1 view -0
 434              		.cfi_startproc
 135:fltk-1.3.4-1/png/pngerror.c ****    int count = 0;    /* number of digits output */
 435              		.loc 1 135 1 is_stmt 0 view .LVU127
 436 0000 F30F1EFA 		endbr64
 136:fltk-1.3.4-1/png/pngerror.c ****    int mincount = 1; /* minimum number required */
 437              		.loc 1 136 4 is_stmt 1 view .LVU128
 438              	.LVL41:
 137:fltk-1.3.4-1/png/pngerror.c ****    int output = 0;   /* digit output (for the fixed point format) */
 439              		.loc 1 137 4 view .LVU129
 138:fltk-1.3.4-1/png/pngerror.c **** 
 440              		.loc 1 138 4 view .LVU130
 140:fltk-1.3.4-1/png/pngerror.c **** 
 441              		.loc 1 140 4 view .LVU131
 140:fltk-1.3.4-1/png/pngerror.c **** 
 442              		.loc 1 140 11 is_stmt 0 view .LVU132
 443 0004 4C8D46FF 		leaq	-1(%rsi), %r8
 444              	.LVL42:
 140:fltk-1.3.4-1/png/pngerror.c **** 
 445              		.loc 1 140 11 view .LVU133
 446 0008 C646FF00 		movb	$0, -1(%rsi)
 145:fltk-1.3.4-1/png/pngerror.c ****    {
 447              		.loc 1 145 4 is_stmt 1 view .LVU134
 145:fltk-1.3.4-1/png/pngerror.c ****    {
 448              		.loc 1 145 10 view .LVU135
 449 000c 4939F8   		cmpq	%rdi, %r8
 450 000f 0F866501 		jbe	.L73
 450      0000
 135:fltk-1.3.4-1/png/pngerror.c ****    int count = 0;    /* number of digits output */
 451              		.loc 1 135 1 is_stmt 0 view .LVU136
 452 0015 4155     		pushq	%r13
 453              		.cfi_def_cfa_offset 16
 454              		.cfi_offset 13, -16
 455 0017 4189D1   		movl	%edx, %r9d
 138:fltk-1.3.4-1/png/pngerror.c **** 
 456              		.loc 1 138 8 view .LVU137
 457 001a 4531ED   		xorl	%r13d, %r13d
 136:fltk-1.3.4-1/png/pngerror.c ****    int mincount = 1; /* minimum number required */
 458              		.loc 1 136 8 view .LVU138
 459 001d 31F6     		xorl	%esi, %esi
 135:fltk-1.3.4-1/png/pngerror.c ****    int count = 0;    /* number of digits output */
 460              		.loc 1 135 1 view .LVU139
 461 001f 4154     		pushq	%r12
 462              		.cfi_def_cfa_offset 24
 463              		.cfi_offset 12, -24
 464 0021 4189D3   		movl	%edx, %r11d
 465 0024 4C8D1500 		leaq	.L46(%rip), %r10
 465      000000
 466              	.LBB49:
 169:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 467              		.loc 1 169 36 view .LVU140
 468 002b 49BCCDCC 		movabsq	$-3689348814741910323, %r12
 468      CCCCCCCC 
 468      CCCC
 469              	.LBE49:
 135:fltk-1.3.4-1/png/pngerror.c ****    int count = 0;    /* number of digits output */
 470              		.loc 1 135 1 view .LVU141
 471 0035 55       		pushq	%rbp
 472              		.cfi_def_cfa_offset 32
 473              		.cfi_offset 6, -32
 474              	.LBB50:
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 475              		.loc 1 179 28 view .LVU142
 476 0036 488D2D00 		leaq	digits.6828(%rip), %rbp
 476      000000
 477              	.LBE50:
 135:fltk-1.3.4-1/png/pngerror.c ****    int count = 0;    /* number of digits output */
 478              		.loc 1 135 1 view .LVU143
 479 003d 53       		pushq	%rbx
 480              		.cfi_def_cfa_offset 40
 481              		.cfi_offset 3, -40
 137:fltk-1.3.4-1/png/pngerror.c ****    int output = 0;   /* digit output (for the fixed point format) */
 482              		.loc 1 137 8 view .LVU144
 483 003e BB010000 		movl	$1, %ebx
 483      00
 484              	.LVL43:
 485              		.p2align 4,,10
 486 0043 0F1F4400 		.p2align 3
 486      00
 487              	.L57:
 488              	.LBB51:
 148:fltk-1.3.4-1/png/pngerror.c **** 
 489              		.loc 1 148 7 is_stmt 1 view .LVU145
 150:fltk-1.3.4-1/png/pngerror.c ****       {
 490              		.loc 1 150 7 view .LVU146
 491 0048 83C601   		addl	$1, %esi
 492              	.LVL44:
 150:fltk-1.3.4-1/png/pngerror.c ****       {
 493              		.loc 1 150 7 is_stmt 0 view .LVU147
 494 004b 4183F905 		cmpl	$5, %r9d
 495 004f 0F872901 		ja	.L58
 495      0000
 150:fltk-1.3.4-1/png/pngerror.c ****       {
 496              		.loc 1 150 7 view .LVU148
 497 0055 4B63049A 		movslq	(%r10,%r11,4), %rax
 498 0059 4C01D0   		addq	%r10, %rax
 499 005c 3EFFE0   		notrack jmp	*%rax
 500              		.section	.rodata.png_format_number,"a",@progbits
 501              		.align 4
 502              		.align 4
 503              	.L46:
 504 0000 00000000 		.long	.L58-.L46
 505 0004 00000000 		.long	.L50-.L46
 506 0008 00000000 		.long	.L49-.L46
 507 000c 00000000 		.long	.L48-.L46
 508 0010 00000000 		.long	.L47-.L46
 509 0014 00000000 		.long	.L45-.L46
 510              		.section	.text.png_format_number
 511 005f 90       		.p2align 4,,10
 512              		.p2align 3
 513              	.L47:
 514              	.LVL45:
 175:fltk-1.3.4-1/png/pngerror.c ****             /* FALL THROUGH */
 515              		.loc 1 175 22 view .LVU149
 516 0060 BB020000 		movl	$2, %ebx
 516      00
 517              	.LVL46:
 518              	.L48:
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 519              		.loc 1 179 13 is_stmt 1 view .LVU150
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 520              		.loc 1 179 36 is_stmt 0 view .LVU151
 521 0065 4889C8   		movq	%rcx, %rax
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 522              		.loc 1 179 20 view .LVU152
 523 0068 4983E801 		subq	$1, %r8
 524              	.LVL47:
 180:fltk-1.3.4-1/png/pngerror.c ****             break;
 525              		.loc 1 180 20 view .LVU153
 526 006c 48C1E904 		shrq	$4, %rcx
 527              	.LVL48:
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 528              		.loc 1 179 36 view .LVU154
 529 0070 83E00F   		andl	$15, %eax
 530              	.LVL49:
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 531              		.loc 1 179 20 view .LVU155
 532 0073 0FB64405 		movzbl	0(%rbp,%rax), %eax
 532      00
 533 0078 418800   		movb	%al, (%r8)
 180:fltk-1.3.4-1/png/pngerror.c ****             break;
 534              		.loc 1 180 13 is_stmt 1 view .LVU156
 535              	.LVL50:
 181:fltk-1.3.4-1/png/pngerror.c **** 
 536              		.loc 1 181 13 view .LVU157
 537              	.L53:
 189:fltk-1.3.4-1/png/pngerror.c **** 
 538              		.loc 1 189 7 view .LVU158
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 539              		.loc 1 192 7 view .LVU159
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 540              		.loc 1 192 10 is_stmt 0 view .LVU160
 541 007b 4183F905 		cmpl	$5, %r9d
 542 007f 754F     		jne	.L44
 543              	.LVL51:
 544              	.L77:
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 545              		.loc 1 192 10 view .LVU161
 546 0081 83FE05   		cmpl	$5, %esi
 547 0084 754A     		jne	.L44
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 548              		.loc 1 192 63 discriminator 1 view .LVU162
 549 0086 4939F8   		cmpq	%rdi, %r8
 550 0089 0F87B100 		ja	.L76
 550      0000
 551              	.L42:
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 552              		.loc 1 192 63 discriminator 1 view .LVU163
 553              	.LBE51:
 206:fltk-1.3.4-1/png/pngerror.c **** #endif
 554              		.loc 1 206 1 view .LVU164
 555 008f 5B       		popq	%rbx
 556              		.cfi_remember_state
 557              		.cfi_def_cfa_offset 32
 558 0090 4C89C0   		movq	%r8, %rax
 559 0093 5D       		popq	%rbp
 560              		.cfi_def_cfa_offset 24
 561 0094 415C     		popq	%r12
 562              		.cfi_def_cfa_offset 16
 563 0096 415D     		popq	%r13
 564              		.cfi_def_cfa_offset 8
 565              	.LVL52:
 206:fltk-1.3.4-1/png/pngerror.c **** #endif
 566              		.loc 1 206 1 view .LVU165
 567 0098 C3       		ret
 568              	.LVL53:
 569 0099 0F1F8000 		.p2align 4,,10
 569      000000
 570              		.p2align 3
 571              	.L49:
 572              		.cfi_restore_state
 573              	.LBB52:
 165:fltk-1.3.4-1/png/pngerror.c ****             /* FALL THROUGH */
 574              		.loc 1 165 22 view .LVU166
 575 00a0 4489CB   		movl	%r9d, %ebx
 576              	.LVL54:
 577              	.L50:
 169:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 578              		.loc 1 169 13 is_stmt 1 view .LVU167
 169:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 579              		.loc 1 169 36 is_stmt 0 view .LVU168
 580 00a3 4889C8   		movq	%rcx, %rax
 169:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 581              		.loc 1 169 20 view .LVU169
 582 00a6 4983E801 		subq	$1, %r8
 583              	.LVL55:
 169:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 584              		.loc 1 169 36 view .LVU170
 585 00aa 49F7E4   		mulq	%r12
 586 00ad 48C1EA03 		shrq	$3, %rdx
 587 00b1 488D0492 		leaq	(%rdx,%rdx,4), %rax
 588 00b5 4801C0   		addq	%rax, %rax
 589 00b8 4829C1   		subq	%rax, %rcx
 590              	.LVL56:
 169:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 591              		.loc 1 169 20 view .LVU171
 592 00bb 0FB6440D 		movzbl	0(%rbp,%rcx), %eax
 592      00
 170:fltk-1.3.4-1/png/pngerror.c ****             break;
 593              		.loc 1 170 20 view .LVU172
 594 00c0 4889D1   		movq	%rdx, %rcx
 169:fltk-1.3.4-1/png/pngerror.c ****             number /= 10;
 595              		.loc 1 169 20 view .LVU173
 596 00c3 418800   		movb	%al, (%r8)
 170:fltk-1.3.4-1/png/pngerror.c ****             break;
 597              		.loc 1 170 13 is_stmt 1 view .LVU174
 598              	.LVL57:
 171:fltk-1.3.4-1/png/pngerror.c **** 
 599              		.loc 1 171 13 view .LVU175
 189:fltk-1.3.4-1/png/pngerror.c **** 
 600              		.loc 1 189 7 view .LVU176
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 601              		.loc 1 192 7 view .LVU177
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 602              		.loc 1 192 10 is_stmt 0 view .LVU178
 603 00c6 4183F905 		cmpl	$5, %r9d
 604 00ca 74B5     		je	.L77
 605              	.LVL58:
 606 00cc 0F1F4000 		.p2align 4,,10
 607              		.p2align 3
 608              	.L44:
 192:fltk-1.3.4-1/png/pngerror.c ****       {
 609              		.loc 1 192 10 view .LVU179
 610              	.LBE52:
 145:fltk-1.3.4-1/png/pngerror.c ****    {
 611              		.loc 1 145 10 is_stmt 1 view .LVU180
 612 00d0 4939F8   		cmpq	%rdi, %r8
 613 00d3 76BA     		jbe	.L42
 145:fltk-1.3.4-1/png/pngerror.c ****    {
 614              		.loc 1 145 23 is_stmt 0 discriminator 1 view .LVU181
 615 00d5 4885C9   		testq	%rcx, %rcx
 616 00d8 0F856AFF 		jne	.L57
 616      FFFF
 617 00de 39F3     		cmpl	%esi, %ebx
 618 00e0 0F8F62FF 		jg	.L57
 618      FFFF
 619 00e6 EBA7     		jmp	.L42
 620              	.LVL59:
 621 00e8 0F1F8400 		.p2align 4,,10
 621      00000000 
 622              		.p2align 3
 623              	.L45:
 624              	.LBB53:
 154:fltk-1.3.4-1/png/pngerror.c ****             if (output != 0 || number % 10 != 0)
 625              		.loc 1 154 13 is_stmt 1 view .LVU182
 155:fltk-1.3.4-1/png/pngerror.c ****             {
 626              		.loc 1 155 13 view .LVU183
 627 00f0 4889C8   		movq	%rcx, %rax
 628 00f3 49F7E4   		mulq	%r12
 629 00f6 48C1EA03 		shrq	$3, %rdx
 630 00fa 488D0492 		leaq	(%rdx,%rdx,4), %rax
 631 00fe 4889CA   		movq	%rcx, %rdx
 632 0101 4801C0   		addq	%rax, %rax
 633 0104 4829C2   		subq	%rax, %rdx
 155:fltk-1.3.4-1/png/pngerror.c ****             {
 634              		.loc 1 155 16 is_stmt 0 view .LVU184
 635 0107 4585ED   		testl	%r13d, %r13d
 636 010a 7505     		jne	.L51
 155:fltk-1.3.4-1/png/pngerror.c ****             {
 637              		.loc 1 155 29 discriminator 1 view .LVU185
 638 010c 4885D2   		testq	%rdx, %rdx
 639 010f 7412     		je	.L52
 640              	.L51:
 157:fltk-1.3.4-1/png/pngerror.c ****                output = 1;
 641              		.loc 1 157 16 is_stmt 1 view .LVU186
 642              	.LVL60:
 157:fltk-1.3.4-1/png/pngerror.c ****                output = 1;
 643              		.loc 1 157 23 is_stmt 0 view .LVU187
 644 0111 0FB64415 		movzbl	0(%rbp,%rdx), %eax
 644      00
 645 0116 4983E801 		subq	$1, %r8
 646              	.LVL61:
 158:fltk-1.3.4-1/png/pngerror.c ****             }
 647              		.loc 1 158 23 view .LVU188
 648 011a 41BD0100 		movl	$1, %r13d
 648      0000
 649              	.LVL62:
 157:fltk-1.3.4-1/png/pngerror.c ****                output = 1;
 650              		.loc 1 157 23 view .LVU189
 651 0120 418800   		movb	%al, (%r8)
 158:fltk-1.3.4-1/png/pngerror.c ****             }
 652              		.loc 1 158 16 is_stmt 1 view .LVU190
 653              	.LVL63:
 654              	.L52:
 160:fltk-1.3.4-1/png/pngerror.c ****             break;
 655              		.loc 1 160 13 view .LVU191
 160:fltk-1.3.4-1/png/pngerror.c ****             break;
 656              		.loc 1 160 20 is_stmt 0 view .LVU192
 657 0123 4889C8   		movq	%rcx, %rax
 154:fltk-1.3.4-1/png/pngerror.c ****             if (output != 0 || number % 10 != 0)
 658              		.loc 1 154 22 view .LVU193
 659 0126 4489CB   		movl	%r9d, %ebx
 160:fltk-1.3.4-1/png/pngerror.c ****             break;
 660              		.loc 1 160 20 view .LVU194
 661 0129 49F7E4   		mulq	%r12
 662              	.LVL64:
 160:fltk-1.3.4-1/png/pngerror.c ****             break;
 663              		.loc 1 160 20 view .LVU195
 664 012c 4889D1   		movq	%rdx, %rcx
 665 012f 48C1E903 		shrq	$3, %rcx
 666              	.LVL65:
 161:fltk-1.3.4-1/png/pngerror.c **** 
 667              		.loc 1 161 13 is_stmt 1 view .LVU196
 668 0133 E943FFFF 		jmp	.L53
 668      FF
 669              	.LVL66:
 670 0138 0F1F8400 		.p2align 4,,10
 670      00000000 
 671              		.p2align 3
 672              	.L76:
 198:fltk-1.3.4-1/png/pngerror.c ****             *--end = '.';
 673              		.loc 1 198 10 view .LVU197
 198:fltk-1.3.4-1/png/pngerror.c ****             *--end = '.';
 674              		.loc 1 198 13 is_stmt 0 view .LVU198
 675 0140 4585ED   		testl	%r13d, %r13d
 676 0143 740B     		je	.L54
 199:fltk-1.3.4-1/png/pngerror.c ****          else if (number == 0) /* and !output */
 677              		.loc 1 199 13 is_stmt 1 view .LVU199
 678              	.LVL67:
 199:fltk-1.3.4-1/png/pngerror.c ****          else if (number == 0) /* and !output */
 679              		.loc 1 199 20 is_stmt 0 view .LVU200
 680 0145 41C640FF 		movb	$46, -1(%r8)
 680      2E
 681 014a 4983E801 		subq	$1, %r8
 682              	.LVL68:
 199:fltk-1.3.4-1/png/pngerror.c ****          else if (number == 0) /* and !output */
 683              		.loc 1 199 20 view .LVU201
 684 014e EB80     		jmp	.L44
 685              		.p2align 4,,10
 686              		.p2align 3
 687              	.L54:
 200:fltk-1.3.4-1/png/pngerror.c ****             *--end = '0';
 688              		.loc 1 200 15 is_stmt 1 view .LVU202
 200:fltk-1.3.4-1/png/pngerror.c ****             *--end = '0';
 689              		.loc 1 200 18 is_stmt 0 view .LVU203
 690 0150 4885C9   		testq	%rcx, %rcx
 691 0153 751B     		jne	.L59
 201:fltk-1.3.4-1/png/pngerror.c ****       }
 692              		.loc 1 201 13 is_stmt 1 view .LVU204
 693              	.LVL69:
 201:fltk-1.3.4-1/png/pngerror.c ****       }
 694              		.loc 1 201 20 is_stmt 0 view .LVU205
 695 0155 41C640FF 		movb	$48, -1(%r8)
 695      30
 696              	.LVL70:
 201:fltk-1.3.4-1/png/pngerror.c ****       }
 697              		.loc 1 201 20 view .LVU206
 698              	.LBE53:
 145:fltk-1.3.4-1/png/pngerror.c ****    {
 699              		.loc 1 145 10 is_stmt 1 view .LVU207
 700              	.LBB54:
 201:fltk-1.3.4-1/png/pngerror.c ****       }
 701              		.loc 1 201 20 is_stmt 0 view .LVU208
 702 015a 4983E801 		subq	$1, %r8
 703              	.LVL71:
 201:fltk-1.3.4-1/png/pngerror.c ****       }
 704              		.loc 1 201 20 view .LVU209
 705              	.LBE54:
 206:fltk-1.3.4-1/png/pngerror.c **** #endif
 706              		.loc 1 206 1 view .LVU210
 707 015e 5B       		popq	%rbx
 708              		.cfi_remember_state
 709              		.cfi_def_cfa_offset 32
 710 015f 4C89C0   		movq	%r8, %rax
 711 0162 5D       		popq	%rbp
 712              		.cfi_def_cfa_offset 24
 713 0163 415C     		popq	%r12
 714              		.cfi_def_cfa_offset 16
 715 0165 415D     		popq	%r13
 716              		.cfi_def_cfa_offset 8
 717 0167 C3       		ret
 718              	.LVL72:
 719 0168 0F1F8400 		.p2align 4,,10
 719      00000000 
 720              		.p2align 3
 721              	.L59:
 722              		.cfi_restore_state
 723              	.LBB55:
 189:fltk-1.3.4-1/png/pngerror.c **** 
 724              		.loc 1 189 7 view .LVU211
 725 0170 BE050000 		movl	$5, %esi
 725      00
 726              	.LVL73:
 189:fltk-1.3.4-1/png/pngerror.c **** 
 727              		.loc 1 189 7 view .LVU212
 728 0175 E9CEFEFF 		jmp	.L57
 728      FF
 729              	.LVL74:
 730              	.L73:
 731              		.cfi_def_cfa_offset 8
 732              		.cfi_restore 3
 733              		.cfi_restore 6
 734              		.cfi_restore 12
 735              		.cfi_restore 13
 189:fltk-1.3.4-1/png/pngerror.c **** 
 736              		.loc 1 189 7 view .LVU213
 737              	.LBE55:
 206:fltk-1.3.4-1/png/pngerror.c **** #endif
 738              		.loc 1 206 1 view .LVU214
 739 017a 4C89C0   		movq	%r8, %rax
 740 017d C3       		ret
 741              	.LVL75:
 742              	.L58:
 743              		.cfi_def_cfa_offset 40
 744              		.cfi_offset 3, -40
 745              		.cfi_offset 6, -32
 746              		.cfi_offset 12, -24
 747              		.cfi_offset 13, -16
 748              	.LBB56:
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 749              		.loc 1 179 20 view .LVU215
 750 017e 31C9     		xorl	%ecx, %ecx
 751              	.LVL76:
 179:fltk-1.3.4-1/png/pngerror.c ****             number >>= 4;
 752              		.loc 1 179 20 view .LVU216
 753 0180 E94BFFFF 		jmp	.L44
 753      FF
 754              	.LBE56:
 755              		.cfi_endproc
 756              	.LFE43:
 758              		.section	.text.png_warning,"ax",@progbits
 759              		.p2align 4
 760              		.globl	png_warning
 762              	png_warning:
 763              	.LVL77:
 764              	.LFB44:
 217:fltk-1.3.4-1/png/pngerror.c ****    int offset = 0;
 765              		.loc 1 217 1 is_stmt 1 view -0
 766              		.cfi_startproc
 217:fltk-1.3.4-1/png/pngerror.c ****    int offset = 0;
 767              		.loc 1 217 1 is_stmt 0 view .LVU218
 768 0000 F30F1EFA 		endbr64
 218:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 769              		.loc 1 218 4 is_stmt 1 view .LVU219
 770              	.LVL78:
 219:fltk-1.3.4-1/png/pngerror.c ****    {
 771              		.loc 1 219 4 view .LVU220
 219:fltk-1.3.4-1/png/pngerror.c ****    {
 772              		.loc 1 219 7 is_stmt 0 view .LVU221
 773 0004 4885FF   		testq	%rdi, %rdi
 774 0007 7444     		je	.L79
 226:fltk-1.3.4-1/png/pngerror.c ****          {
 775              		.loc 1 226 10 is_stmt 1 view .LVU222
 226:fltk-1.3.4-1/png/pngerror.c ****          {
 776              		.loc 1 226 13 is_stmt 0 view .LVU223
 777 0009 803E23   		cmpb	$35, (%rsi)
 778 000c 7412     		je	.L89
 779              	.LVL79:
 780              	.L80:
 234:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 781              		.loc 1 234 4 is_stmt 1 view .LVU224
 234:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 782              		.loc 1 234 34 is_stmt 0 view .LVU225
 783 000e 488B87E8 		movq	232(%rdi), %rax
 783      000000
 234:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 784              		.loc 1 234 24 view .LVU226
 785 0015 4885C0   		testq	%rax, %rax
 786 0018 7433     		je	.L79
 787              	.L82:
 235:fltk-1.3.4-1/png/pngerror.c ****          warning_message + offset);
 788              		.loc 1 235 7 is_stmt 1 view .LVU227
 235:fltk-1.3.4-1/png/pngerror.c ****          warning_message + offset);
 789              		.loc 1 235 8 is_stmt 0 view .LVU228
 790 001a FFE0     		jmp	*%rax
 791              	.LVL80:
 792 001c 0F1F4000 		.p2align 4,,10
 793              		.p2align 3
 794              	.L89:
 235:fltk-1.3.4-1/png/pngerror.c ****          warning_message + offset);
 795              		.loc 1 235 8 view .LVU229
 796 0020 488D4601 		leaq	1(%rsi), %rax
 797 0024 4883C60F 		addq	$15, %rsi
 798              	.LVL81:
 229:fltk-1.3.4-1/png/pngerror.c ****                   break;
 799              		.loc 1 229 16 is_stmt 1 view .LVU230
 229:fltk-1.3.4-1/png/pngerror.c ****                   break;
 800              		.loc 1 229 19 is_stmt 0 view .LVU231
 801 0028 803820   		cmpb	$32, (%rax)
 802 002b 7411     		je	.L83
 803              	.LVL82:
 804 002d 0F1F00   		.p2align 4,,10
 805              		.p2align 3
 806              	.L90:
 228:fltk-1.3.4-1/png/pngerror.c ****                if (warning_message[offset] == ' ')
 807              		.loc 1 228 43 is_stmt 1 discriminator 2 view .LVU232
 228:fltk-1.3.4-1/png/pngerror.c ****                if (warning_message[offset] == ' ')
 808              		.loc 1 228 30 discriminator 2 view .LVU233
 809 0030 4883C001 		addq	$1, %rax
 810              	.LVL83:
 228:fltk-1.3.4-1/png/pngerror.c ****                if (warning_message[offset] == ' ')
 811              		.loc 1 228 13 is_stmt 0 discriminator 2 view .LVU234
 812 0034 4839C6   		cmpq	%rax, %rsi
 813 0037 74D5     		je	.L80
 814              	.LVL84:
 229:fltk-1.3.4-1/png/pngerror.c ****                   break;
 815              		.loc 1 229 16 is_stmt 1 view .LVU235
 229:fltk-1.3.4-1/png/pngerror.c ****                   break;
 816              		.loc 1 229 19 is_stmt 0 view .LVU236
 817 0039 803820   		cmpb	$32, (%rax)
 818 003c 75F2     		jne	.L90
 819              	.LVL85:
 820              	.L83:
 229:fltk-1.3.4-1/png/pngerror.c ****                   break;
 821              		.loc 1 229 19 view .LVU237
 822 003e 4889C6   		movq	%rax, %rsi
 823              	.LVL86:
 234:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 824              		.loc 1 234 4 is_stmt 1 view .LVU238
 234:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 825              		.loc 1 234 34 is_stmt 0 view .LVU239
 826 0041 488B87E8 		movq	232(%rdi), %rax
 826      000000
 234:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 827              		.loc 1 234 24 view .LVU240
 828 0048 4885C0   		testq	%rax, %rax
 829 004b 75CD     		jne	.L82
 830              	.L79:
 238:fltk-1.3.4-1/png/pngerror.c **** }
 831              		.loc 1 238 7 is_stmt 1 view .LVU241
 832 004d 4889F7   		movq	%rsi, %rdi
 833              	.LVL87:
 238:fltk-1.3.4-1/png/pngerror.c **** }
 834              		.loc 1 238 7 is_stmt 0 view .LVU242
 835 0050 E9000000 		jmp	png_default_warning.isra.0
 835      00
 836              	.LVL88:
 837              		.cfi_endproc
 838              	.LFE44:
 840              		.section	.text.png_warning_parameter,"ax",@progbits
 841              		.p2align 4
 842              		.globl	png_warning_parameter
 844              	png_warning_parameter:
 845              	.LVL89:
 846              	.LFB45:
 249:fltk-1.3.4-1/png/pngerror.c ****    if (number > 0 && number <= PNG_WARNING_PARAMETER_COUNT)
 847              		.loc 1 249 1 is_stmt 1 view -0
 848              		.cfi_startproc
 249:fltk-1.3.4-1/png/pngerror.c ****    if (number > 0 && number <= PNG_WARNING_PARAMETER_COUNT)
 849              		.loc 1 249 1 is_stmt 0 view .LVU244
 850 0000 F30F1EFA 		endbr64
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 851              		.loc 1 250 4 is_stmt 1 view .LVU245
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 852              		.loc 1 250 19 is_stmt 0 view .LVU246
 853 0004 8D46FF   		leal	-1(%rsi), %eax
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 854              		.loc 1 250 7 view .LVU247
 855 0007 83F807   		cmpl	$7, %eax
 856 000a 770C     		ja	.L91
 857 000c E9000000 		jmp	png_warning_parameter.part.0
 857      00
 858              	.LVL90:
 859              		.p2align 4,,10
 860 0011 0F1F8000 		.p2align 3
 860      000000
 861              	.L91:
 252:fltk-1.3.4-1/png/pngerror.c **** 
 862              		.loc 1 252 1 view .LVU248
 863 0018 C3       		ret
 864              		.cfi_endproc
 865              	.LFE45:
 867              		.section	.text.png_warning_parameter_unsigned,"ax",@progbits
 868              		.p2align 4
 869              		.globl	png_warning_parameter_unsigned
 871              	png_warning_parameter_unsigned:
 872              	.LVL91:
 873              	.LFB46:
 257:fltk-1.3.4-1/png/pngerror.c ****    char buffer[PNG_NUMBER_BUFFER_SIZE];
 874              		.loc 1 257 1 is_stmt 1 view -0
 875              		.cfi_startproc
 257:fltk-1.3.4-1/png/pngerror.c ****    char buffer[PNG_NUMBER_BUFFER_SIZE];
 876              		.loc 1 257 1 is_stmt 0 view .LVU250
 877 0000 F30F1EFA 		endbr64
 878 0004 4154     		pushq	%r12
 879              		.cfi_def_cfa_offset 16
 880              		.cfi_offset 12, -16
 881 0006 4989FC   		movq	%rdi, %r12
 882 0009 55       		pushq	%rbp
 883              		.cfi_def_cfa_offset 24
 884              		.cfi_offset 6, -24
 885 000a 89F5     		movl	%esi, %ebp
 886 000c 4883EC28 		subq	$40, %rsp
 887              		.cfi_def_cfa_offset 64
 257:fltk-1.3.4-1/png/pngerror.c ****    char buffer[PNG_NUMBER_BUFFER_SIZE];
 888              		.loc 1 257 1 view .LVU251
 889 0010 64488B04 		movq	%fs:40, %rax
 889      25280000 
 889      00
 890 0019 48894424 		movq	%rax, 24(%rsp)
 890      18
 891 001e 31C0     		xorl	%eax, %eax
 258:fltk-1.3.4-1/png/pngerror.c ****    png_warning_parameter(p, number, PNG_FORMAT_NUMBER(buffer, format, value));
 892              		.loc 1 258 4 is_stmt 1 view .LVU252
 259:fltk-1.3.4-1/png/pngerror.c **** }
 893              		.loc 1 259 4 view .LVU253
 259:fltk-1.3.4-1/png/pngerror.c **** }
 894              		.loc 1 259 37 is_stmt 0 view .LVU254
 895 0020 4889E7   		movq	%rsp, %rdi
 896              	.LVL92:
 259:fltk-1.3.4-1/png/pngerror.c **** }
 897              		.loc 1 259 37 view .LVU255
 898 0023 488D7424 		leaq	24(%rsp), %rsi
 898      18
 899              	.LVL93:
 259:fltk-1.3.4-1/png/pngerror.c **** }
 900              		.loc 1 259 37 view .LVU256
 901 0028 E8000000 		call	png_format_number
 901      00
 902              	.LVL94:
 259:fltk-1.3.4-1/png/pngerror.c **** }
 903              		.loc 1 259 37 view .LVU257
 904 002d 4889C2   		movq	%rax, %rdx
 905              	.LVL95:
 906              	.LBB57:
 907              	.LBI57:
 247:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 908              		.loc 1 247 1 is_stmt 1 view .LVU258
 909              	.LBB58:
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 910              		.loc 1 250 4 view .LVU259
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 911              		.loc 1 250 19 is_stmt 0 view .LVU260
 912 0030 8D45FF   		leal	-1(%rbp), %eax
 913              	.LVL96:
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 914              		.loc 1 250 7 view .LVU261
 915 0033 83F807   		cmpl	$7, %eax
 916 0036 770A     		ja	.L93
 917 0038 89EE     		movl	%ebp, %esi
 918 003a 4C89E7   		movq	%r12, %rdi
 919 003d E8000000 		call	png_warning_parameter.part.0
 919      00
 920              	.LVL97:
 921              	.L93:
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 922              		.loc 1 250 7 view .LVU262
 923              	.LBE58:
 924              	.LBE57:
 260:fltk-1.3.4-1/png/pngerror.c **** 
 925              		.loc 1 260 1 view .LVU263
 926 0042 488B4424 		movq	24(%rsp), %rax
 926      18
 927 0047 64483304 		xorq	%fs:40, %rax
 927      25280000 
 927      00
 928 0050 7508     		jne	.L97
 929 0052 4883C428 		addq	$40, %rsp
 930              		.cfi_remember_state
 931              		.cfi_def_cfa_offset 24
 932 0056 5D       		popq	%rbp
 933              		.cfi_def_cfa_offset 16
 934              	.LVL98:
 260:fltk-1.3.4-1/png/pngerror.c **** 
 935              		.loc 1 260 1 view .LVU264
 936 0057 415C     		popq	%r12
 937              		.cfi_def_cfa_offset 8
 938              	.LVL99:
 260:fltk-1.3.4-1/png/pngerror.c **** 
 939              		.loc 1 260 1 view .LVU265
 940 0059 C3       		ret
 941              	.LVL100:
 942              	.L97:
 943              		.cfi_restore_state
 260:fltk-1.3.4-1/png/pngerror.c **** 
 944              		.loc 1 260 1 view .LVU266
 945 005a E8000000 		call	__stack_chk_fail@PLT
 945      00
 946              	.LVL101:
 947              		.cfi_endproc
 948              	.LFE46:
 950              		.section	.text.png_warning_parameter_signed,"ax",@progbits
 951              		.p2align 4
 952              		.globl	png_warning_parameter_signed
 954              	png_warning_parameter_signed:
 955              	.LVL102:
 956              	.LFB47:
 265:fltk-1.3.4-1/png/pngerror.c ****    png_alloc_size_t u;
 957              		.loc 1 265 1 is_stmt 1 view -0
 958              		.cfi_startproc
 265:fltk-1.3.4-1/png/pngerror.c ****    png_alloc_size_t u;
 959              		.loc 1 265 1 is_stmt 0 view .LVU268
 960 0000 F30F1EFA 		endbr64
 961 0004 4154     		pushq	%r12
 962              		.cfi_def_cfa_offset 16
 963              		.cfi_offset 12, -16
 271:fltk-1.3.4-1/png/pngerror.c ****    if (value < 0)
 964              		.loc 1 271 6 view .LVU269
 965 0006 4C63C1   		movslq	%ecx, %r8
 265:fltk-1.3.4-1/png/pngerror.c ****    png_alloc_size_t u;
 966              		.loc 1 265 1 view .LVU270
 967 0009 4189F4   		movl	%esi, %r12d
 968 000c 55       		pushq	%rbp
 969              		.cfi_def_cfa_offset 24
 970              		.cfi_offset 6, -24
 971 000d 4889FD   		movq	%rdi, %rbp
 972 0010 4883EC28 		subq	$40, %rsp
 973              		.cfi_def_cfa_offset 64
 265:fltk-1.3.4-1/png/pngerror.c ****    png_alloc_size_t u;
 974              		.loc 1 265 1 view .LVU271
 975 0014 64488B04 		movq	%fs:40, %rax
 975      25280000 
 975      00
 976 001d 48894424 		movq	%rax, 24(%rsp)
 976      18
 977 0022 31C0     		xorl	%eax, %eax
 266:fltk-1.3.4-1/png/pngerror.c ****    png_charp str;
 978              		.loc 1 266 4 is_stmt 1 view .LVU272
 267:fltk-1.3.4-1/png/pngerror.c ****    char buffer[PNG_NUMBER_BUFFER_SIZE];
 979              		.loc 1 267 4 view .LVU273
 268:fltk-1.3.4-1/png/pngerror.c **** 
 980              		.loc 1 268 4 view .LVU274
 271:fltk-1.3.4-1/png/pngerror.c ****    if (value < 0)
 981              		.loc 1 271 4 view .LVU275
 982              	.LVL103:
 272:fltk-1.3.4-1/png/pngerror.c ****       u = ~u + 1;
 983              		.loc 1 272 4 view .LVU276
 272:fltk-1.3.4-1/png/pngerror.c ****       u = ~u + 1;
 984              		.loc 1 272 7 is_stmt 0 view .LVU277
 985 0024 85C9     		testl	%ecx, %ecx
 986 0026 7848     		js	.L104
 275:fltk-1.3.4-1/png/pngerror.c **** 
 987              		.loc 1 275 4 is_stmt 1 view .LVU278
 275:fltk-1.3.4-1/png/pngerror.c **** 
 988              		.loc 1 275 10 is_stmt 0 view .LVU279
 989 0028 4889E7   		movq	%rsp, %rdi
 990              	.LVL104:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 991              		.loc 1 275 10 view .LVU280
 992 002b 488D7424 		leaq	24(%rsp), %rsi
 992      18
 993              	.LVL105:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 994              		.loc 1 275 10 view .LVU281
 995 0030 4C89C1   		movq	%r8, %rcx
 996              	.LVL106:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 997              		.loc 1 275 10 view .LVU282
 998 0033 E8000000 		call	png_format_number
 998      00
 999              	.LVL107:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 1000              		.loc 1 275 10 view .LVU283
 1001 0038 4889C2   		movq	%rax, %rdx
 1002              	.LVL108:
 277:fltk-1.3.4-1/png/pngerror.c ****       *--str = '-';
 1003              		.loc 1 277 4 is_stmt 1 view .LVU284
 1004              	.L100:
 280:fltk-1.3.4-1/png/pngerror.c **** }
 1005              		.loc 1 280 4 view .LVU285
 1006              	.LBB59:
 1007              	.LBI59:
 247:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 1008              		.loc 1 247 1 view .LVU286
 1009              	.LBB60:
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 1010              		.loc 1 250 4 view .LVU287
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 1011              		.loc 1 250 19 is_stmt 0 view .LVU288
 1012 003b 418D4424 		leal	-1(%r12), %eax
 1012      FF
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 1013              		.loc 1 250 7 view .LVU289
 1014 0040 83F807   		cmpl	$7, %eax
 1015 0043 770B     		ja	.L98
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 1016              		.loc 1 250 7 view .LVU290
 1017 0045 4489E6   		movl	%r12d, %esi
 1018 0048 4889EF   		movq	%rbp, %rdi
 1019 004b E8000000 		call	png_warning_parameter.part.0
 1019      00
 1020              	.LVL109:
 1021              	.L98:
 250:fltk-1.3.4-1/png/pngerror.c ****       (void)png_safecat(p[number-1], (sizeof p[number-1]), 0, string);
 1022              		.loc 1 250 7 view .LVU291
 1023              	.LBE60:
 1024              	.LBE59:
 281:fltk-1.3.4-1/png/pngerror.c **** 
 1025              		.loc 1 281 1 view .LVU292
 1026 0050 488B4424 		movq	24(%rsp), %rax
 1026      18
 1027 0055 64483304 		xorq	%fs:40, %rax
 1027      25280000 
 1027      00
 1028 005e 7535     		jne	.L105
 1029 0060 4883C428 		addq	$40, %rsp
 1030              		.cfi_remember_state
 1031              		.cfi_def_cfa_offset 24
 1032 0064 5D       		popq	%rbp
 1033              		.cfi_def_cfa_offset 16
 1034              	.LVL110:
 281:fltk-1.3.4-1/png/pngerror.c **** 
 1035              		.loc 1 281 1 view .LVU293
 1036 0065 415C     		popq	%r12
 1037              		.cfi_def_cfa_offset 8
 1038              	.LVL111:
 281:fltk-1.3.4-1/png/pngerror.c **** 
 1039              		.loc 1 281 1 view .LVU294
 1040 0067 C3       		ret
 1041              	.LVL112:
 1042 0068 0F1F8400 		.p2align 4,,10
 1042      00000000 
 1043              		.p2align 3
 1044              	.L104:
 1045              		.cfi_restore_state
 273:fltk-1.3.4-1/png/pngerror.c **** 
 1046              		.loc 1 273 7 is_stmt 1 view .LVU295
 275:fltk-1.3.4-1/png/pngerror.c **** 
 1047              		.loc 1 275 4 view .LVU296
 273:fltk-1.3.4-1/png/pngerror.c **** 
 1048              		.loc 1 273 9 is_stmt 0 view .LVU297
 1049 0070 4C89C1   		movq	%r8, %rcx
 1050              	.LVL113:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 1051              		.loc 1 275 10 view .LVU298
 1052 0073 4889E7   		movq	%rsp, %rdi
 1053              	.LVL114:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 1054              		.loc 1 275 10 view .LVU299
 1055 0076 488D7424 		leaq	24(%rsp), %rsi
 1055      18
 1056              	.LVL115:
 273:fltk-1.3.4-1/png/pngerror.c **** 
 1057              		.loc 1 273 9 view .LVU300
 1058 007b 48F7D9   		negq	%rcx
 1059              	.LVL116:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 1060              		.loc 1 275 10 view .LVU301
 1061 007e E8000000 		call	png_format_number
 1061      00
 1062              	.LVL117:
 275:fltk-1.3.4-1/png/pngerror.c **** 
 1063              		.loc 1 275 10 view .LVU302
 1064 0083 4889C2   		movq	%rax, %rdx
 1065              	.LVL118:
 277:fltk-1.3.4-1/png/pngerror.c ****       *--str = '-';
 1066              		.loc 1 277 4 is_stmt 1 view .LVU303
 277:fltk-1.3.4-1/png/pngerror.c ****       *--str = '-';
 1067              		.loc 1 277 18 is_stmt 0 view .LVU304
 1068 0086 4839F8   		cmpq	%rdi, %rax
 1069 0089 76B0     		jbe	.L100
 278:fltk-1.3.4-1/png/pngerror.c **** 
 1070              		.loc 1 278 7 is_stmt 1 view .LVU305
 1071              	.LVL119:
 278:fltk-1.3.4-1/png/pngerror.c **** 
 1072              		.loc 1 278 14 is_stmt 0 view .LVU306
 1073 008b C640FF2D 		movb	$45, -1(%rax)
 1074 008f 4883EA01 		subq	$1, %rdx
 1075              	.LVL120:
 278:fltk-1.3.4-1/png/pngerror.c **** 
 1076              		.loc 1 278 14 view .LVU307
 1077 0093 EBA6     		jmp	.L100
 1078              	.LVL121:
 1079              	.L105:
 281:fltk-1.3.4-1/png/pngerror.c **** 
 1080              		.loc 1 281 1 view .LVU308
 1081 0095 E8000000 		call	__stack_chk_fail@PLT
 1081      00
 1082              	.LVL122:
 1083              		.cfi_endproc
 1084              	.LFE47:
 1086              		.section	.text.png_formatted_warning,"ax",@progbits
 1087              		.p2align 4
 1088              		.globl	png_formatted_warning
 1090              	png_formatted_warning:
 1091              	.LVL123:
 1092              	.LFB48:
 286:fltk-1.3.4-1/png/pngerror.c ****    /* The internal buffer is just 192 bytes - enough for all our messages,
 1093              		.loc 1 286 1 is_stmt 1 view -0
 1094              		.cfi_startproc
 286:fltk-1.3.4-1/png/pngerror.c ****    /* The internal buffer is just 192 bytes - enough for all our messages,
 1095              		.loc 1 286 1 is_stmt 0 view .LVU310
 1096 0000 F30F1EFA 		endbr64
 1097 0004 53       		pushq	%rbx
 1098              		.cfi_def_cfa_offset 16
 1099              		.cfi_offset 3, -16
 292:fltk-1.3.4-1/png/pngerror.c ****    char msg[192];
 1100              		.loc 1 292 11 view .LVU311
 1101 0005 31C9     		xorl	%ecx, %ecx
 1102 0007 4C8D1D00 		leaq	valid_parameters.6876(%rip), %r11
 1102      000000
 286:fltk-1.3.4-1/png/pngerror.c ****    /* The internal buffer is just 192 bytes - enough for all our messages,
 1103              		.loc 1 286 1 view .LVU312
 1104 000e 4881ECD0 		subq	$208, %rsp
 1104      000000
 1105              		.cfi_def_cfa_offset 224
 286:fltk-1.3.4-1/png/pngerror.c ****    /* The internal buffer is just 192 bytes - enough for all our messages,
 1106              		.loc 1 286 1 view .LVU313
 1107 0015 64488B04 		movq	%fs:40, %rax
 1107      25280000 
 1107      00
 1108 001e 48898424 		movq	%rax, 200(%rsp)
 1108      C8000000 
 1109 0026 31C0     		xorl	%eax, %eax
 292:fltk-1.3.4-1/png/pngerror.c ****    char msg[192];
 1110              		.loc 1 292 4 is_stmt 1 view .LVU314
 1111              	.LVL124:
 293:fltk-1.3.4-1/png/pngerror.c **** 
 1112              		.loc 1 293 4 view .LVU315
 301:fltk-1.3.4-1/png/pngerror.c ****    {
 1113              		.loc 1 301 4 view .LVU316
 301:fltk-1.3.4-1/png/pngerror.c ****    {
 1114              		.loc 1 301 10 view .LVU317
 1115              	.LBB61:
 1116              	.LBB62:
 331:fltk-1.3.4-1/png/pngerror.c **** 
 1117              		.loc 1 331 25 is_stmt 0 view .LVU318
 1118 0028 488D5C24 		leaq	-1(%rsp), %rbx
 1118      FF
 1119 002d EB14     		jmp	.L107
 1120              	.LVL125:
 1121 002f 90       		.p2align 4,,10
 1122              		.p2align 3
 1123              	.L108:
 331:fltk-1.3.4-1/png/pngerror.c **** 
 1124              		.loc 1 331 25 view .LVU319
 1125              	.LBE62:
 1126              	.LBE61:
 346:fltk-1.3.4-1/png/pngerror.c ****    }
 1127              		.loc 1 346 7 is_stmt 1 view .LVU320
 346:fltk-1.3.4-1/png/pngerror.c ****    }
 1128              		.loc 1 346 16 is_stmt 0 view .LVU321
 1129 0030 88040C   		movb	%al, (%rsp,%rcx)
 346:fltk-1.3.4-1/png/pngerror.c ****    }
 1130              		.loc 1 346 26 view .LVU322
 1131 0033 4C89C2   		movq	%r8, %rdx
 346:fltk-1.3.4-1/png/pngerror.c ****    }
 1132              		.loc 1 346 12 view .LVU323
 1133 0036 4883C101 		addq	$1, %rcx
 1134              	.LVL126:
 1135              	.L117:
 301:fltk-1.3.4-1/png/pngerror.c ****    {
 1136              		.loc 1 301 10 is_stmt 1 view .LVU324
 1137 003a 4881F9BE 		cmpq	$190, %rcx
 1137      000000
 1138 0041 772D     		ja	.L118
 1139              	.LVL127:
 1140              	.L107:
 301:fltk-1.3.4-1/png/pngerror.c ****    {
 1141              		.loc 1 301 31 is_stmt 0 discriminator 1 view .LVU325
 1142 0043 0FB602   		movzbl	(%rdx), %eax
 301:fltk-1.3.4-1/png/pngerror.c ****    {
 1143              		.loc 1 301 28 discriminator 1 view .LVU326
 1144 0046 84C0     		testb	%al, %al
 1145 0048 7426     		je	.L118
 306:fltk-1.3.4-1/png/pngerror.c ****       {
 1146              		.loc 1 306 7 is_stmt 1 discriminator 1 view .LVU327
 1147 004a 4C8D4201 		leaq	1(%rdx), %r8
 306:fltk-1.3.4-1/png/pngerror.c ****       {
 1148              		.loc 1 306 21 is_stmt 0 discriminator 1 view .LVU328
 1149 004e 3C40     		cmpb	$64, %al
 1150 0050 75DE     		jne	.L108
 1151 0052 4885F6   		testq	%rsi, %rsi
 1152 0055 74D9     		je	.L108
 306:fltk-1.3.4-1/png/pngerror.c ****       {
 1153              		.loc 1 306 50 discriminator 2 view .LVU329
 1154 0057 0FB64201 		movzbl	1(%rdx), %eax
 306:fltk-1.3.4-1/png/pngerror.c ****       {
 1155              		.loc 1 306 40 discriminator 2 view .LVU330
 1156 005b 84C0     		testb	%al, %al
 1157 005d 7541     		jne	.L142
 1158              	.LBB64:
 1159 005f B8400000 		movl	$64, %eax
 1159      00
 1160 0064 EBCA     		jmp	.L108
 1161 0066 662E0F1F 		.p2align 4,,10
 1161      84000000 
 1161      0000
 1162              		.p2align 3
 1163              	.L118:
 306:fltk-1.3.4-1/png/pngerror.c ****       {
 1164              		.loc 1 306 40 discriminator 2 view .LVU331
 1165              	.LBE64:
 350:fltk-1.3.4-1/png/pngerror.c **** 
 1166              		.loc 1 350 4 is_stmt 1 view .LVU332
 356:fltk-1.3.4-1/png/pngerror.c **** }
 1167              		.loc 1 356 4 is_stmt 0 view .LVU333
 1168 0070 4889E6   		movq	%rsp, %rsi
 1169              	.LVL128:
 350:fltk-1.3.4-1/png/pngerror.c **** 
 1170              		.loc 1 350 11 view .LVU334
 1171 0073 C6040C00 		movb	$0, (%rsp,%rcx)
 356:fltk-1.3.4-1/png/pngerror.c **** }
 1172              		.loc 1 356 4 is_stmt 1 view .LVU335
 1173 0077 E8000000 		call	png_warning
 1173      00
 1174              	.LVL129:
 357:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
 1175              		.loc 1 357 1 is_stmt 0 view .LVU336
 1176 007c 488B8424 		movq	200(%rsp), %rax
 1176      C8000000 
 1177 0084 64483304 		xorq	%fs:40, %rax
 1177      25280000 
 1177      00
 1178 008d 0F859900 		jne	.L143
 1178      0000
 1179 0093 4881C4D0 		addq	$208, %rsp
 1179      000000
 1180              		.cfi_remember_state
 1181              		.cfi_def_cfa_offset 16
 1182 009a 5B       		popq	%rbx
 1183              		.cfi_def_cfa_offset 8
 1184 009b C3       		ret
 1185              	.LVL130:
 1186 009c 0F1F4000 		.p2align 4,,10
 1187              		.p2align 3
 1188              	.L142:
 1189              		.cfi_restore_state
 1190              	.LBB65:
 308:fltk-1.3.4-1/png/pngerror.c ****          static const char valid_parameters[] = "123456789";
 1191              		.loc 1 308 10 is_stmt 1 view .LVU337
 309:fltk-1.3.4-1/png/pngerror.c ****          int parameter = 0;
 1192              		.loc 1 309 10 view .LVU338
 310:fltk-1.3.4-1/png/pngerror.c **** 
 1193              		.loc 1 310 10 view .LVU339
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1194              		.loc 1 315 10 view .LVU340
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1195              		.loc 1 315 16 view .LVU341
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1196              		.loc 1 315 63 is_stmt 0 view .LVU342
 1197 00a0 3C31     		cmpb	$49, %al
 1198 00a2 7439     		je	.L122
 1199 00a4 41B80100 		movl	$1, %r8d
 1199      0000
 1200 00aa 41B93200 		movl	$50, %r9d
 1200      0000
 1201 00b0 EB10     		jmp	.L111
 1202              	.LVL131:
 1203              		.p2align 4,,10
 1204 00b2 660F1F44 		.p2align 3
 1204      0000
 1205              	.L144:
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1206              		.loc 1 315 63 view .LVU343
 1207 00b8 4438C8   		cmpb	%r9b, %al
 1208 00bb 7411     		je	.L110
 1209 00bd 470FB60C 		movzbl	(%r11,%r8), %r9d
 1209      03
 1210              	.LVL132:
 1211              	.L111:
 317:fltk-1.3.4-1/png/pngerror.c **** 
 1212              		.loc 1 317 13 is_stmt 1 view .LVU344
 1213 00c2 4589C2   		movl	%r8d, %r10d
 1214              	.LVL133:
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1215              		.loc 1 315 16 view .LVU345
 1216 00c5 4983C001 		addq	$1, %r8
 1217              	.LVL134:
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1218              		.loc 1 315 63 is_stmt 0 view .LVU346
 1219 00c9 4584C9   		testb	%r9b, %r9b
 1220 00cc 75EA     		jne	.L144
 1221              	.L110:
 320:fltk-1.3.4-1/png/pngerror.c ****          {
 1222              		.loc 1 320 10 is_stmt 1 view .LVU347
 320:fltk-1.3.4-1/png/pngerror.c ****          {
 1223              		.loc 1 320 13 is_stmt 0 view .LVU348
 1224 00ce 4183FA07 		cmpl	$7, %r10d
 1225 00d2 7E48     		jle	.L112
 1226 00d4 4C8D4202 		leaq	2(%rdx), %r8
 1227 00d8 E953FFFF 		jmp	.L108
 1227      FF
 1228              	.LVL135:
 1229              	.L122:
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1230              		.loc 1 315 63 view .LVU349
 1231 00dd 4889F0   		movq	%rsi, %rax
 1232              	.LVL136:
 315:fltk-1.3.4-1/png/pngerror.c ****             valid_parameters[parameter] != '\0')
 1233              		.loc 1 315 63 view .LVU350
 1234 00e0 41B92000 		movl	$32, %r9d
 1234      0000
 1235              	.LVL137:
 1236              	.L109:
 1237              	.LBB63:
 323:fltk-1.3.4-1/png/pngerror.c ****             png_const_charp pend = p[parameter] + (sizeof p[parameter]);
 1238              		.loc 1 323 13 is_stmt 1 view .LVU351
 324:fltk-1.3.4-1/png/pngerror.c **** 
 1239              		.loc 1 324 13 view .LVU352
 324:fltk-1.3.4-1/png/pngerror.c **** 
 1240              		.loc 1 324 29 is_stmt 0 view .LVU353
 1241 00e6 4901F1   		addq	%rsi, %r9
 1242              	.LVL138:
 330:fltk-1.3.4-1/png/pngerror.c ****                msg[i++] = *parm++;
 1243              		.loc 1 330 13 is_stmt 1 view .LVU354
 330:fltk-1.3.4-1/png/pngerror.c ****                msg[i++] = *parm++;
 1244              		.loc 1 330 19 view .LVU355
 1245 00e9 0F1F8000 		.p2align 4,,10
 1245      000000
 1246              		.p2align 3
 1247              	.L113:
 330:fltk-1.3.4-1/png/pngerror.c ****                msg[i++] = *parm++;
 1248              		.loc 1 330 40 is_stmt 0 discriminator 1 view .LVU356
 1249 00f0 440FB600 		movzbl	(%rax), %r8d
 330:fltk-1.3.4-1/png/pngerror.c ****                msg[i++] = *parm++;
 1250              		.loc 1 330 54 discriminator 1 view .LVU357
 1251 00f4 4939C1   		cmpq	%rax, %r9
 1252 00f7 761A     		jbe	.L114
 330:fltk-1.3.4-1/png/pngerror.c ****                msg[i++] = *parm++;
 1253              		.loc 1 330 54 discriminator 1 view .LVU358
 1254 00f9 4584C0   		testb	%r8b, %r8b
 1255 00fc 7415     		je	.L114
 331:fltk-1.3.4-1/png/pngerror.c **** 
 1256              		.loc 1 331 16 is_stmt 1 view .LVU359
 331:fltk-1.3.4-1/png/pngerror.c **** 
 1257              		.loc 1 331 21 is_stmt 0 view .LVU360
 1258 00fe 4883C101 		addq	$1, %rcx
 1259              	.LVL139:
 331:fltk-1.3.4-1/png/pngerror.c **** 
 1260              		.loc 1 331 32 view .LVU361
 1261 0102 4883C001 		addq	$1, %rax
 1262              	.LVL140:
 331:fltk-1.3.4-1/png/pngerror.c **** 
 1263              		.loc 1 331 25 view .LVU362
 1264 0106 4488040B 		movb	%r8b, (%rbx,%rcx)
 330:fltk-1.3.4-1/png/pngerror.c ****                msg[i++] = *parm++;
 1265              		.loc 1 330 19 is_stmt 1 view .LVU363
 1266 010a 4881F9BF 		cmpq	$191, %rcx
 1266      000000
 1267 0111 75DD     		jne	.L113
 1268              	.L114:
 334:fltk-1.3.4-1/png/pngerror.c ****             continue;
 1269              		.loc 1 334 13 view .LVU364
 1270 0113 4883C202 		addq	$2, %rdx
 1271              	.LVL141:
 335:fltk-1.3.4-1/png/pngerror.c ****          }
 1272              		.loc 1 335 13 view .LVU365
 1273 0117 E91EFFFF 		jmp	.L117
 1273      FF
 1274              	.LVL142:
 1275              	.L112:
 335:fltk-1.3.4-1/png/pngerror.c ****          }
 1276              		.loc 1 335 13 is_stmt 0 view .LVU366
 1277 011c 4963C2   		movslq	%r10d, %rax
 1278              	.LVL143:
 335:fltk-1.3.4-1/png/pngerror.c ****          }
 1279              		.loc 1 335 13 view .LVU367
 1280 011f 48C1E005 		salq	$5, %rax
 1281 0123 4C8D4820 		leaq	32(%rax), %r9
 1282 0127 4801F0   		addq	%rsi, %rax
 1283 012a EBBA     		jmp	.L109
 1284              	.LVL144:
 1285              	.L143:
 335:fltk-1.3.4-1/png/pngerror.c ****          }
 1286              		.loc 1 335 13 view .LVU368
 1287              	.LBE63:
 1288              	.LBE65:
 357:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
 1289              		.loc 1 357 1 view .LVU369
 1290 012c E8000000 		call	__stack_chk_fail@PLT
 1290      00
 1291              	.LVL145:
 1292              		.cfi_endproc
 1293              	.LFE48:
 1295              		.section	.text.png_chunk_warning,"ax",@progbits
 1296              		.p2align 4
 1297              		.globl	png_chunk_warning
 1299              	png_chunk_warning:
 1300              	.LVL146:
 1301              	.LFB54:
 498:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 1302              		.loc 1 498 1 is_stmt 1 view -0
 1303              		.cfi_startproc
 498:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 1304              		.loc 1 498 1 is_stmt 0 view .LVU371
 1305 0000 F30F1EFA 		endbr64
 1306 0004 55       		pushq	%rbp
 1307              		.cfi_def_cfa_offset 16
 1308              		.cfi_offset 6, -16
 1309 0005 4889F2   		movq	%rsi, %rdx
 1310 0008 4881ECE0 		subq	$224, %rsp
 1310      000000
 1311              		.cfi_def_cfa_offset 240
 498:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 1312              		.loc 1 498 1 view .LVU372
 1313 000f 64488B04 		movq	%fs:40, %rax
 1313      25280000 
 1313      00
 1314 0018 48898424 		movq	%rax, 216(%rsp)
 1314      D8000000 
 1315 0020 31C0     		xorl	%eax, %eax
 499:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr == NULL)
 1316              		.loc 1 499 4 is_stmt 1 view .LVU373
 500:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, warning_message);
 1317              		.loc 1 500 4 view .LVU374
 500:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, warning_message);
 1318              		.loc 1 500 7 is_stmt 0 view .LVU375
 1319 0022 4885FF   		testq	%rdi, %rdi
 1320 0025 7439     		je	.L150
 1321 0027 4889FD   		movq	%rdi, %rbp
 505:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, msg);
 1322              		.loc 1 505 7 is_stmt 1 view .LVU376
 1323 002a 8BBF1802 		movl	536(%rdi), %edi
 1323      0000
 1324              	.LVL147:
 505:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, msg);
 1325              		.loc 1 505 7 is_stmt 0 view .LVU377
 1326 0030 4889E6   		movq	%rsp, %rsi
 1327              	.LVL148:
 505:fltk-1.3.4-1/png/pngerror.c ****       png_warning(png_ptr, msg);
 1328              		.loc 1 505 7 view .LVU378
 1329 0033 E8000000 		call	png_format_buffer.isra.0
 1329      00
 1330              	.LVL149:
 506:fltk-1.3.4-1/png/pngerror.c ****    }
 1331              		.loc 1 506 7 is_stmt 1 view .LVU379
 1332 0038 4889EF   		movq	%rbp, %rdi
 1333 003b E8000000 		call	png_warning
 1333      00
 1334              	.LVL150:
 1335              	.L145:
 508:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
 1336              		.loc 1 508 1 is_stmt 0 view .LVU380
 1337 0040 488B8424 		movq	216(%rsp), %rax
 1337      D8000000 
 1338 0048 64483304 		xorq	%fs:40, %rax
 1338      25280000 
 1338      00
 1339 0051 7517     		jne	.L151
 1340 0053 4881C4E0 		addq	$224, %rsp
 1340      000000
 1341              		.cfi_remember_state
 1342              		.cfi_def_cfa_offset 16
 1343 005a 5D       		popq	%rbp
 1344              		.cfi_def_cfa_offset 8
 1345 005b C3       		ret
 1346              	.LVL151:
 1347 005c 0F1F4000 		.p2align 4,,10
 1348              		.p2align 3
 1349              	.L150:
 1350              		.cfi_restore_state
 501:fltk-1.3.4-1/png/pngerror.c **** 
 1351              		.loc 1 501 7 is_stmt 1 view .LVU381
 1352              	.LBB68:
 1353              	.LBI68:
 216:fltk-1.3.4-1/png/pngerror.c **** {
 1354              		.loc 1 216 1 view .LVU382
 1355              	.LBB69:
 218:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 1356              		.loc 1 218 4 view .LVU383
 219:fltk-1.3.4-1/png/pngerror.c ****    {
 1357              		.loc 1 219 4 view .LVU384
 234:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->warning_fn))(png_constcast(png_structrp,png_ptr),
 1358              		.loc 1 234 4 view .LVU385
 238:fltk-1.3.4-1/png/pngerror.c **** }
 1359              		.loc 1 238 7 view .LVU386
 1360 0060 4889F7   		movq	%rsi, %rdi
 1361              	.LVL152:
 238:fltk-1.3.4-1/png/pngerror.c **** }
 1362              		.loc 1 238 7 is_stmt 0 view .LVU387
 1363 0063 E8000000 		call	png_default_warning.isra.0
 1363      00
 1364              	.LVL153:
 238:fltk-1.3.4-1/png/pngerror.c **** }
 1365              		.loc 1 238 7 view .LVU388
 1366 0068 EBD6     		jmp	.L145
 1367              	.LVL154:
 1368              	.L151:
 238:fltk-1.3.4-1/png/pngerror.c **** }
 1369              		.loc 1 238 7 view .LVU389
 1370              	.LBE69:
 1371              	.LBE68:
 508:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
 1372              		.loc 1 508 1 view .LVU390
 1373 006a E8000000 		call	__stack_chk_fail@PLT
 1373      00
 1374              	.LVL155:
 1375              		.cfi_endproc
 1376              	.LFE54:
 1378              		.section	.text.png_free_jmpbuf,"ax",@progbits
 1379              		.p2align 4
 1380              		.globl	png_free_jmpbuf
 1382              	png_free_jmpbuf:
 1383              	.LVL156:
 1384              	.LFB59:
 667:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 1385              		.loc 1 667 1 is_stmt 1 view -0
 1386              		.cfi_startproc
 667:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 1387              		.loc 1 667 1 is_stmt 0 view .LVU392
 1388 0000 F30F1EFA 		endbr64
 1389 0004 4881ECE8 		subq	$232, %rsp
 1389      000000
 1390              		.cfi_def_cfa_offset 240
 667:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 1391              		.loc 1 667 1 view .LVU393
 1392 000b 48893C24 		movq	%rdi, (%rsp)
 1393 000f 64488B0C 		movq	%fs:40, %rcx
 1393      25280000 
 1393      00
 1394 0018 48898C24 		movq	%rcx, 216(%rsp)
 1394      D8000000 
 1395 0020 31C9     		xorl	%ecx, %ecx
 668:fltk-1.3.4-1/png/pngerror.c ****    {
 1396              		.loc 1 668 4 is_stmt 1 view .LVU394
 668:fltk-1.3.4-1/png/pngerror.c ****    {
 1397              		.loc 1 668 7 is_stmt 0 view .LVU395
 1398 0022 4885FF   		testq	%rdi, %rdi
 1399 0025 745E     		je	.L152
 1400              	.LBB70:
 670:fltk-1.3.4-1/png/pngerror.c **** 
 1401              		.loc 1 670 7 is_stmt 1 view .LVU396
 670:fltk-1.3.4-1/png/pngerror.c **** 
 1402              		.loc 1 670 16 is_stmt 0 view .LVU397
 1403 0027 488B97D0 		movq	208(%rdi), %rdx
 1403      000000
 1404 002e 48895424 		movq	%rdx, 8(%rsp)
 1404      08
 1405              	.LVL157:
 675:fltk-1.3.4-1/png/pngerror.c ****       {
 1406              		.loc 1 675 7 is_stmt 1 view .LVU398
 675:fltk-1.3.4-1/png/pngerror.c ****       {
 1407              		.loc 1 675 10 is_stmt 0 view .LVU399
 1408 0033 4885D2   		testq	%rdx, %rdx
 1409 0036 7428     		je	.L154
 675:fltk-1.3.4-1/png/pngerror.c ****       {
 1410              		.loc 1 675 22 discriminator 1 view .LVU400
 1411 0038 4883BFD8 		cmpq	$0, 216(%rdi)
 1411      00000000 
 1412 0040 741E     		je	.L154
 682:fltk-1.3.4-1/png/pngerror.c ****          {
 1413              		.loc 1 682 10 is_stmt 1 view .LVU401
 682:fltk-1.3.4-1/png/pngerror.c ****          {
 1414              		.loc 1 682 13 is_stmt 0 view .LVU402
 1415 0042 4839D7   		cmpq	%rdx, %rdi
 1416 0045 7419     		je	.L154
 1417              	.LBB71:
 687:fltk-1.3.4-1/png/pngerror.c ****             {
 1418              		.loc 1 687 18 view .LVU403
 1419 0047 488D7C24 		leaq	16(%rsp), %rdi
 1419      10
 1420              	.LVL158:
 687:fltk-1.3.4-1/png/pngerror.c ****             {
 1421              		.loc 1 687 18 view .LVU404
 1422 004c E8000000 		call	_setjmp@PLT
 1422      00
 1423              	.LVL159:
 1424 0051 F30F1EFA 		endbr64
 1425              	.LVL160:
 687:fltk-1.3.4-1/png/pngerror.c ****             {
 1426              		.loc 1 687 16 view .LVU405
 1427 0055 85C0     		testl	%eax, %eax
 1428 0057 7447     		je	.L160
 1429 0059 0F1F8000 		.p2align 4,,10
 1429      000000
 1430              		.p2align 3
 1431              	.L154:
 1432              	.LBE71:
 698:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->jmp_buf_ptr = NULL;
 1433              		.loc 1 698 7 is_stmt 1 view .LVU406
 698:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->jmp_buf_ptr = NULL;
 1434              		.loc 1 698 29 is_stmt 0 view .LVU407
 1435 0060 488B0424 		movq	(%rsp), %rax
 1436 0064 48C780D8 		movq	$0, 216(%rax)
 1436      00000000 
 1436      000000
 699:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->longjmp_fn = 0;
 1437              		.loc 1 699 7 is_stmt 1 view .LVU408
 699:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->longjmp_fn = 0;
 1438              		.loc 1 699 28 is_stmt 0 view .LVU409
 1439 006f 48C780D0 		movq	$0, 208(%rax)
 1439      00000000 
 1439      000000
 700:fltk-1.3.4-1/png/pngerror.c ****    }
 1440              		.loc 1 700 7 is_stmt 1 view .LVU410
 700:fltk-1.3.4-1/png/pngerror.c ****    }
 1441              		.loc 1 700 27 is_stmt 0 view .LVU411
 1442 007a 48C780C8 		movq	$0, 200(%rax)
 1442      00000000 
 1442      000000
 1443              	.LVL161:
 1444              	.L152:
 700:fltk-1.3.4-1/png/pngerror.c ****    }
 1445              		.loc 1 700 27 view .LVU412
 1446              	.LBE70:
 702:fltk-1.3.4-1/png/pngerror.c **** #endif
 1447              		.loc 1 702 1 view .LVU413
 1448 0085 488B8424 		movq	216(%rsp), %rax
 1448      D8000000 
 1449 008d 64483304 		xorq	%fs:40, %rax
 1449      25280000 
 1449      00
 1450 0096 753D     		jne	.L161
 1451 0098 4881C4E8 		addq	$232, %rsp
 1451      000000
 1452              		.cfi_remember_state
 1453              		.cfi_def_cfa_offset 8
 1454              	.LVL162:
 702:fltk-1.3.4-1/png/pngerror.c **** #endif
 1455              		.loc 1 702 1 view .LVU414
 1456 009f C3       		ret
 1457              	.LVL163:
 1458              		.p2align 4,,10
 1459              		.p2align 3
 1460              	.L160:
 1461              		.cfi_restore_state
 1462              	.LBB73:
 1463              	.LBB72:
 689:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->jmp_buf_size = 0; /* stack allocation */
 1464              		.loc 1 689 16 is_stmt 1 view .LVU415
 689:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->jmp_buf_size = 0; /* stack allocation */
 1465              		.loc 1 689 37 is_stmt 0 view .LVU416
 1466 00a0 488B3C24 		movq	(%rsp), %rdi
 1467 00a4 488D4424 		leaq	16(%rsp), %rax
 1467      10
 692:fltk-1.3.4-1/png/pngerror.c ****             }
 1468              		.loc 1 692 16 view .LVU417
 1469 00a9 488B7424 		movq	8(%rsp), %rsi
 1469      08
 689:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->jmp_buf_size = 0; /* stack allocation */
 1470              		.loc 1 689 37 view .LVU418
 1471 00ae 488987D0 		movq	%rax, 208(%rdi)
 1471      000000
 690:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->longjmp_fn = longjmp;
 1472              		.loc 1 690 16 is_stmt 1 view .LVU419
 691:fltk-1.3.4-1/png/pngerror.c ****                png_free(png_ptr, jb); /* Return to setjmp on error */
 1473              		.loc 1 691 36 is_stmt 0 view .LVU420
 1474 00b5 488B0500 		movq	__longjmp_chk@GOTPCREL(%rip), %rax
 1474      000000
 690:fltk-1.3.4-1/png/pngerror.c ****                png_ptr->longjmp_fn = longjmp;
 1475              		.loc 1 690 38 view .LVU421
 1476 00bc 48C787D8 		movq	$0, 216(%rdi)
 1476      00000000 
 1476      000000
 691:fltk-1.3.4-1/png/pngerror.c ****                png_free(png_ptr, jb); /* Return to setjmp on error */
 1477              		.loc 1 691 16 is_stmt 1 view .LVU422
 691:fltk-1.3.4-1/png/pngerror.c ****                png_free(png_ptr, jb); /* Return to setjmp on error */
 1478              		.loc 1 691 36 is_stmt 0 view .LVU423
 1479 00c7 488987C8 		movq	%rax, 200(%rdi)
 1479      000000
 692:fltk-1.3.4-1/png/pngerror.c ****             }
 1480              		.loc 1 692 16 is_stmt 1 view .LVU424
 1481 00ce E8000000 		call	png_free@PLT
 1481      00
 1482              	.LVL164:
 1483 00d3 EB8B     		jmp	.L154
 1484              	.LVL165:
 1485              	.L161:
 692:fltk-1.3.4-1/png/pngerror.c ****             }
 1486              		.loc 1 692 16 is_stmt 0 view .LVU425
 1487              	.LBE72:
 1488              	.LBE73:
 702:fltk-1.3.4-1/png/pngerror.c **** #endif
 1489              		.loc 1 702 1 view .LVU426
 1490 00d5 E8000000 		call	__stack_chk_fail@PLT
 1490      00
 1491              	.LVL166:
 1492              		.cfi_endproc
 1493              	.LFE59:
 1495              		.section	.text.unlikely.png_longjmp,"ax",@progbits
 1496              	.LCOLDB1:
 1497              		.section	.text.png_longjmp,"ax",@progbits
 1498              	.LHOTB1:
 1499              		.p2align 4
 1500              		.section	.text.unlikely.png_longjmp
 1501              	.Ltext_cold0:
 1502              		.section	.text.png_longjmp
 1503              		.globl	png_longjmp
 1505              	png_longjmp:
 1506              	.LVL167:
 1507              	.LFB61:
 759:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_SETJMP_SUPPORTED
 1508              		.loc 1 759 1 is_stmt 1 view -0
 1509              		.cfi_startproc
 759:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_SETJMP_SUPPORTED
 1510              		.loc 1 759 1 is_stmt 0 view .LVU428
 1511 0000 F30F1EFA 		endbr64
 1512 0004 50       		pushq	%rax
 1513              		.cfi_def_cfa_offset 16
 1514 0005 58       		popq	%rax
 1515              		.cfi_def_cfa_offset 8
 761:fltk-1.3.4-1/png/pngerror.c ****        png_ptr->jmp_buf_ptr != NULL)
 1516              		.loc 1 761 4 is_stmt 1 view .LVU429
 759:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_SETJMP_SUPPORTED
 1517              		.loc 1 759 1 is_stmt 0 view .LVU430
 1518 0006 4883EC08 		subq	$8, %rsp
 1519              		.cfi_def_cfa_offset 16
 761:fltk-1.3.4-1/png/pngerror.c ****        png_ptr->jmp_buf_ptr != NULL)
 1520              		.loc 1 761 7 view .LVU431
 1521 000a 4885FF   		testq	%rdi, %rdi
 1522 000d 0F840000 		je	.L163
 1522      0000
 761:fltk-1.3.4-1/png/pngerror.c ****        png_ptr->jmp_buf_ptr != NULL)
 1523              		.loc 1 761 34 discriminator 1 view .LVU432
 1524 0013 488B87C8 		movq	200(%rdi), %rax
 1524      000000
 761:fltk-1.3.4-1/png/pngerror.c ****        png_ptr->jmp_buf_ptr != NULL)
 1525              		.loc 1 761 24 discriminator 1 view .LVU433
 1526 001a 4885C0   		testq	%rax, %rax
 1527 001d 0F840000 		je	.L163
 1527      0000
 762:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->longjmp_fn(*png_ptr->jmp_buf_ptr, val);
 1528              		.loc 1 762 15 discriminator 2 view .LVU434
 1529 0023 488BBFD0 		movq	208(%rdi), %rdi
 1529      000000
 1530              	.LVL168:
 761:fltk-1.3.4-1/png/pngerror.c ****        png_ptr->jmp_buf_ptr != NULL)
 1531              		.loc 1 761 55 discriminator 2 view .LVU435
 1532 002a 4885FF   		testq	%rdi, %rdi
 1533 002d 0F840000 		je	.L163
 1533      0000
 763:fltk-1.3.4-1/png/pngerror.c **** #else
 1534              		.loc 1 763 7 is_stmt 1 view .LVU436
 1535 0033 FFD0     		call	*%rax
 1536              	.LVL169:
 763:fltk-1.3.4-1/png/pngerror.c **** #else
 1537              		.loc 1 763 7 is_stmt 0 view .LVU437
 1538 0035 E9000000 		jmp	.L163
 1538      00
 1539              		.cfi_endproc
 1540              		.section	.text.unlikely.png_longjmp
 1541              		.cfi_startproc
 1543              	png_longjmp.cold:
 1544              	.LFSB61:
 1545              	.L163:
 1546              		.cfi_def_cfa_offset 16
 775:fltk-1.3.4-1/png/pngerror.c **** }
 1547              		.loc 1 775 4 is_stmt 1 view -0
 1548 0000 E8000000 		call	abort@PLT
 1548      00
 1549              	.LVL170:
 1550              		.cfi_endproc
 1551              	.LFE61:
 1552              		.section	.text.png_longjmp
 1554              		.section	.text.unlikely.png_longjmp
 1556              	.LCOLDE1:
 1557              		.section	.text.png_longjmp
 1558              	.LHOTE1:
 1559              		.section	.rodata.png_default_error.str1.1,"aMS",@progbits,1
 1560              	.LC2:
 1561 0000 756E6465 		.string	"undefined"
 1561      66696E65 
 1561      6400
 1562              	.LC3:
 1563 000a 6C696270 		.string	"libpng error: %s"
 1563      6E672065 
 1563      72726F72 
 1563      3A202573 
 1563      00
 1564              		.section	.text.png_default_error,"ax",@progbits
 1565              		.p2align 4
 1567              	png_default_error:
 1568              	.LVL171:
 1569              	.LFB60:
 713:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_CONSOLE_IO_SUPPORTED
 1570              		.loc 1 713 1 view -0
 1571              		.cfi_startproc
 747:fltk-1.3.4-1/png/pngerror.c ****          "undefined");
 1572              		.loc 1 747 7 view .LVU440
 1573 0000 4885F6   		testq	%rsi, %rsi
 713:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_CONSOLE_IO_SUPPORTED
 1574              		.loc 1 713 1 is_stmt 0 view .LVU441
 1575 0003 55       		pushq	%rbp
 1576              		.cfi_def_cfa_offset 16
 1577              		.cfi_offset 6, -16
 713:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_CONSOLE_IO_SUPPORTED
 1578              		.loc 1 713 1 view .LVU442
 1579 0004 4889F1   		movq	%rsi, %rcx
 747:fltk-1.3.4-1/png/pngerror.c ****          "undefined");
 1580              		.loc 1 747 7 view .LVU443
 1581 0007 488D0500 		leaq	.LC2(%rip), %rax
 1581      000000
 1582 000e 480F44C8 		cmove	%rax, %rcx
 1583              	.LVL172:
 1584              	.LBB74:
 1585              	.LBI74:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 1586              		.loc 2 98 1 is_stmt 1 view .LVU444
 1587              	.LBB75:
 1588              		.loc 2 100 3 view .LVU445
 1589              	.LBE75:
 1590              	.LBE74:
 713:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_CONSOLE_IO_SUPPORTED
 1591              		.loc 1 713 1 is_stmt 0 view .LVU446
 1592 0012 4889FD   		movq	%rdi, %rbp
 1593              	.LBB77:
 1594              	.LBB76:
 1595              		.loc 2 100 10 view .LVU447
 1596 0015 BE010000 		movl	$1, %esi
 1596      00
 1597              	.LVL173:
 1598              		.loc 2 100 10 view .LVU448
 1599 001a 31C0     		xorl	%eax, %eax
 1600 001c 488B3D00 		movq	stderr(%rip), %rdi
 1600      000000
 1601              	.LVL174:
 1602              		.loc 2 100 10 view .LVU449
 1603 0023 488D1500 		leaq	.LC3(%rip), %rdx
 1603      000000
 1604 002a E8000000 		call	__fprintf_chk@PLT
 1604      00
 1605              	.LVL175:
 1606              		.loc 2 100 10 view .LVU450
 1607              	.LBE76:
 1608              	.LBE77:
 749:fltk-1.3.4-1/png/pngerror.c ****    }
 1609              		.loc 1 749 7 is_stmt 1 view .LVU451
 1610              	.LBB78:
 1611              	.LBI78:
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 1612              		.loc 2 98 1 view .LVU452
 1613              	.LBB79:
 1614              		.loc 2 100 3 view .LVU453
 1615              		.loc 2 100 10 is_stmt 0 view .LVU454
 1616 002f 488B3500 		movq	stderr(%rip), %rsi
 1616      000000
 1617 0036 BF0A0000 		movl	$10, %edi
 1617      00
 1618 003b E8000000 		call	fputc@PLT
 1618      00
 1619              	.LVL176:
 1620              		.loc 2 100 10 view .LVU455
 1621              	.LBE79:
 1622              	.LBE78:
 754:fltk-1.3.4-1/png/pngerror.c **** }
 1623              		.loc 1 754 4 is_stmt 1 view .LVU456
 1624 0040 BE010000 		movl	$1, %esi
 1624      00
 1625 0045 4889EF   		movq	%rbp, %rdi
 1626 0048 E8000000 		call	png_longjmp
 1626      00
 1627              	.LVL177:
 1628              		.cfi_endproc
 1629              	.LFE60:
 1631              		.section	.text.png_error,"ax",@progbits
 1632              		.p2align 4
 1633              		.globl	png_error
 1635              	png_error:
 1636              	.LVL178:
 1637              	.LFB41:
  41:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
 1638              		.loc 1 41 1 view -0
 1639              		.cfi_startproc
  41:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
 1640              		.loc 1 41 1 is_stmt 0 view .LVU458
 1641 0000 F30F1EFA 		endbr64
  82:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->error_fn))(png_constcast(png_structrp,png_ptr),
 1642              		.loc 1 82 4 is_stmt 1 view .LVU459
  41:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
 1643              		.loc 1 41 1 is_stmt 0 view .LVU460
 1644 0004 4154     		pushq	%r12
 1645              		.cfi_def_cfa_offset 16
 1646              		.cfi_offset 12, -16
 1647 0006 4989F4   		movq	%rsi, %r12
 1648 0009 55       		pushq	%rbp
 1649              		.cfi_def_cfa_offset 24
 1650              		.cfi_offset 6, -24
 1651 000a 4889FD   		movq	%rdi, %rbp
 1652 000d 4883EC08 		subq	$8, %rsp
 1653              		.cfi_def_cfa_offset 32
  82:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->error_fn))(png_constcast(png_structrp,png_ptr),
 1654              		.loc 1 82 7 view .LVU461
 1655 0011 4885FF   		testq	%rdi, %rdi
 1656 0014 740E     		je	.L178
  82:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->error_fn))(png_constcast(png_structrp,png_ptr),
 1657              		.loc 1 82 34 discriminator 1 view .LVU462
 1658 0016 488B87E0 		movq	224(%rdi), %rax
 1658      000000
  82:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->error_fn))(png_constcast(png_structrp,png_ptr),
 1659              		.loc 1 82 24 discriminator 1 view .LVU463
 1660 001d 4885C0   		testq	%rax, %rax
 1661 0020 7402     		je	.L178
  83:fltk-1.3.4-1/png/pngerror.c ****           error_message);
 1662              		.loc 1 83 7 is_stmt 1 view .LVU464
  83:fltk-1.3.4-1/png/pngerror.c ****           error_message);
 1663              		.loc 1 83 8 is_stmt 0 view .LVU465
 1664 0022 FFD0     		call	*%rax
 1665              	.LVL179:
 1666              	.L178:
  88:fltk-1.3.4-1/png/pngerror.c **** }
 1667              		.loc 1 88 4 is_stmt 1 view .LVU466
 1668 0024 4C89E6   		movq	%r12, %rsi
 1669 0027 4889EF   		movq	%rbp, %rdi
 1670 002a E8000000 		call	png_default_error
 1670      00
 1671              	.LVL180:
 1672              		.cfi_endproc
 1673              	.LFE41:
 1675              		.section	.text.png_app_warning,"ax",@progbits
 1676              		.p2align 4
 1677              		.globl	png_app_warning
 1679              	png_app_warning:
 1680              	.LVL181:
 1681              	.LFB50:
 393:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_WARNINGS_WARN) != 0)
 1682              		.loc 1 393 1 view -0
 1683              		.cfi_startproc
 393:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_WARNINGS_WARN) != 0)
 1684              		.loc 1 393 1 is_stmt 0 view .LVU468
 1685 0000 F30F1EFA 		endbr64
 394:fltk-1.3.4-1/png/pngerror.c ****      png_warning(png_ptr, error_message);
 1686              		.loc 1 394 3 is_stmt 1 view .LVU469
 394:fltk-1.3.4-1/png/pngerror.c ****      png_warning(png_ptr, error_message);
 1687              		.loc 1 394 6 is_stmt 0 view .LVU470
 1688 0004 F6873201 		testb	$32, 306(%rdi)
 1688      000020
 1689 000b 7405     		je	.L187
 395:fltk-1.3.4-1/png/pngerror.c ****   else
 1690              		.loc 1 395 6 is_stmt 1 view .LVU471
 1691 000d E9000000 		jmp	png_warning
 1691      00
 1692              	.LVL182:
 1693              	.L187:
 397:fltk-1.3.4-1/png/pngerror.c **** 
 1694              		.loc 1 397 6 view .LVU472
 393:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_WARNINGS_WARN) != 0)
 1695              		.loc 1 393 1 is_stmt 0 view .LVU473
 1696 0012 50       		pushq	%rax
 1697              		.cfi_def_cfa_offset 16
 397:fltk-1.3.4-1/png/pngerror.c **** 
 1698              		.loc 1 397 6 view .LVU474
 1699 0013 E8000000 		call	png_error
 1699      00
 1700              	.LVL183:
 397:fltk-1.3.4-1/png/pngerror.c **** 
 1701              		.loc 1 397 6 view .LVU475
 1702              		.cfi_endproc
 1703              	.LFE50:
 1705              		.section	.text.png_app_error,"ax",@progbits
 1706              		.p2align 4
 1707              		.globl	png_app_error
 1709              	png_app_error:
 1710              	.LVL184:
 1711              	.LFB51:
 406:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_ERRORS_WARN) != 0)
 1712              		.loc 1 406 1 is_stmt 1 view -0
 1713              		.cfi_startproc
 406:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_ERRORS_WARN) != 0)
 1714              		.loc 1 406 1 is_stmt 0 view .LVU477
 1715 0000 F30F1EFA 		endbr64
 407:fltk-1.3.4-1/png/pngerror.c ****      png_warning(png_ptr, error_message);
 1716              		.loc 1 407 3 is_stmt 1 view .LVU478
 407:fltk-1.3.4-1/png/pngerror.c ****      png_warning(png_ptr, error_message);
 1717              		.loc 1 407 6 is_stmt 0 view .LVU479
 1718 0004 F6873201 		testb	$64, 306(%rdi)
 1718      000040
 1719 000b 7405     		je	.L191
 408:fltk-1.3.4-1/png/pngerror.c ****   else
 1720              		.loc 1 408 6 is_stmt 1 view .LVU480
 1721 000d E9000000 		jmp	png_warning
 1721      00
 1722              	.LVL185:
 1723              	.L191:
 410:fltk-1.3.4-1/png/pngerror.c **** 
 1724              		.loc 1 410 6 view .LVU481
 406:fltk-1.3.4-1/png/pngerror.c ****   if ((png_ptr->flags & PNG_FLAG_APP_ERRORS_WARN) != 0)
 1725              		.loc 1 406 1 is_stmt 0 view .LVU482
 1726 0012 50       		pushq	%rax
 1727              		.cfi_def_cfa_offset 16
 410:fltk-1.3.4-1/png/pngerror.c **** 
 1728              		.loc 1 410 6 view .LVU483
 1729 0013 E8000000 		call	png_error
 1729      00
 1730              	.LVL186:
 410:fltk-1.3.4-1/png/pngerror.c **** 
 1731              		.loc 1 410 6 view .LVU484
 1732              		.cfi_endproc
 1733              	.LFE51:
 1735              		.section	.text.png_fixed_error,"ax",@progbits
 1736              		.p2align 4
 1737              		.globl	png_fixed_error
 1739              	png_fixed_error:
 1740              	.LVL187:
 1741              	.LFB57:
 573:fltk-1.3.4-1/png/pngerror.c **** #  define fixed_message "fixed point overflow in "
 1742              		.loc 1 573 1 is_stmt 1 view -0
 1743              		.cfi_startproc
 573:fltk-1.3.4-1/png/pngerror.c **** #  define fixed_message "fixed point overflow in "
 1744              		.loc 1 573 1 is_stmt 0 view .LVU486
 1745 0000 F30F1EFA 		endbr64
 1746 0004 50       		pushq	%rax
 1747              		.cfi_def_cfa_offset 16
 1748 0005 58       		popq	%rax
 1749              		.cfi_def_cfa_offset 8
 579:fltk-1.3.4-1/png/pngerror.c ****    if (name != NULL)
 1750              		.loc 1 579 8 view .LVU487
 1751 0006 31C9     		xorl	%ecx, %ecx
 573:fltk-1.3.4-1/png/pngerror.c **** #  define fixed_message "fixed point overflow in "
 1752              		.loc 1 573 1 view .LVU488
 1753 0008 4881ECF8 		subq	$248, %rsp
 1753      000000
 1754              		.cfi_def_cfa_offset 256
 1755              	.LBB80:
 1756              	.LBB81:
 1757              		.file 3 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 1758              		.loc 3 34 10 view .LVU489
 1759 000f 660F6F05 		movdqa	.LC4(%rip), %xmm0
 1759      00000000 
 1760              	.LBE81:
 1761              	.LBE80:
 573:fltk-1.3.4-1/png/pngerror.c **** #  define fixed_message "fixed point overflow in "
 1762              		.loc 1 573 1 view .LVU490
 1763 0017 64488B04 		movq	%fs:40, %rax
 1763      25280000 
 1763      00
 1764 0020 48898424 		movq	%rax, 232(%rsp)
 1764      E8000000 
 1765 0028 31C0     		xorl	%eax, %eax
 576:fltk-1.3.4-1/png/pngerror.c ****    char msg[fixed_message_ln+PNG_MAX_ERROR_TEXT];
 1766              		.loc 1 576 4 is_stmt 1 view .LVU491
 577:fltk-1.3.4-1/png/pngerror.c ****    memcpy(msg, fixed_message, fixed_message_ln);
 1767              		.loc 1 577 4 view .LVU492
 578:fltk-1.3.4-1/png/pngerror.c ****    iin = 0;
 1768              		.loc 1 578 4 view .LVU493
 1769              	.LVL188:
 1770              	.LBB84:
 1771              	.LBI80:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 1772              		.loc 3 31 1 view .LVU494
 1773              	.LBB82:
 1774              		.loc 3 34 3 view .LVU495
 1775              		.loc 3 34 10 is_stmt 0 view .LVU496
 1776 002a 48B8666C 		movabsq	$2336920844815527014, %rax
 1776      6F772069 
 1776      6E20
 1777 0034 48894424 		movq	%rax, 16(%rsp)
 1777      10
 1778              	.LVL189:
 1779              		.loc 3 34 10 view .LVU497
 1780              	.LBE82:
 1781              	.LBE84:
 579:fltk-1.3.4-1/png/pngerror.c ****    if (name != NULL)
 1782              		.loc 1 579 4 is_stmt 1 view .LVU498
 580:fltk-1.3.4-1/png/pngerror.c ****       while (iin < (PNG_MAX_ERROR_TEXT-1) && name[iin] != 0)
 1783              		.loc 1 580 4 view .LVU499
 1784              	.LBB85:
 1785              	.LBB83:
 1786              		.loc 3 34 10 is_stmt 0 view .LVU500
 1787 0039 0F290424 		movaps	%xmm0, (%rsp)
 1788              	.LBE83:
 1789              	.LBE85:
 580:fltk-1.3.4-1/png/pngerror.c ****       while (iin < (PNG_MAX_ERROR_TEXT-1) && name[iin] != 0)
 1790              		.loc 1 580 7 view .LVU501
 1791 003d 4885F6   		testq	%rsi, %rsi
 1792 0040 7429     		je	.L196
 1793 0042 31C0     		xorl	%eax, %eax
 1794 0044 4C8D4424 		leaq	24(%rsp), %r8
 1794      18
 1795 0049 EB15     		jmp	.L195
 1796              	.LVL190:
 1797 004b 0F1F4400 		.p2align 4,,10
 1797      00
 1798              		.p2align 3
 1799              	.L197:
 583:fltk-1.3.4-1/png/pngerror.c ****          ++iin;
 1800              		.loc 1 583 10 is_stmt 1 view .LVU502
 583:fltk-1.3.4-1/png/pngerror.c ****          ++iin;
 1801              		.loc 1 583 38 is_stmt 0 view .LVU503
 1802 0050 41881400 		movb	%dl, (%r8,%rax)
 584:fltk-1.3.4-1/png/pngerror.c ****       }
 1803              		.loc 1 584 10 is_stmt 1 view .LVU504
 1804              	.LVL191:
 581:fltk-1.3.4-1/png/pngerror.c ****       {
 1805              		.loc 1 581 13 view .LVU505
 1806 0054 4883C001 		addq	$1, %rax
 1807              	.LVL192:
 581:fltk-1.3.4-1/png/pngerror.c ****       {
 1808              		.loc 1 581 13 is_stmt 0 view .LVU506
 1809 0058 483DC300 		cmpq	$195, %rax
 1809      0000
 1810 005e 7418     		je	.L200
 1811              	.LVL193:
 1812              	.L195:
 581:fltk-1.3.4-1/png/pngerror.c ****       {
 1813              		.loc 1 581 50 discriminator 1 view .LVU507
 1814 0060 0FB61406 		movzbl	(%rsi,%rax), %edx
 1815 0064 4863C8   		movslq	%eax, %rcx
 1816              	.LVL194:
 581:fltk-1.3.4-1/png/pngerror.c ****       {
 1817              		.loc 1 581 43 discriminator 1 view .LVU508
 1818 0067 84D2     		testb	%dl, %dl
 1819 0069 75E5     		jne	.L197
 1820              	.LVL195:
 1821              	.L196:
 586:fltk-1.3.4-1/png/pngerror.c ****    png_error(png_ptr, msg);
 1822              		.loc 1 586 4 is_stmt 1 view .LVU509
 587:fltk-1.3.4-1/png/pngerror.c **** }
 1823              		.loc 1 587 4 is_stmt 0 view .LVU510
 1824 006b 4889E6   		movq	%rsp, %rsi
 1825              	.LVL196:
 586:fltk-1.3.4-1/png/pngerror.c ****    png_error(png_ptr, msg);
 1826              		.loc 1 586 32 view .LVU511
 1827 006e C6440C18 		movb	$0, 24(%rsp,%rcx)
 1827      00
 587:fltk-1.3.4-1/png/pngerror.c **** }
 1828              		.loc 1 587 4 is_stmt 1 view .LVU512
 1829 0073 E8000000 		call	png_error
 1829      00
 1830              	.LVL197:
 1831              	.L200:
 587:fltk-1.3.4-1/png/pngerror.c **** }
 1832              		.loc 1 587 4 is_stmt 0 view .LVU513
 1833 0078 B9C30000 		movl	$195, %ecx
 1833      00
 1834              	.LVL198:
 587:fltk-1.3.4-1/png/pngerror.c **** }
 1835              		.loc 1 587 4 view .LVU514
 1836 007d EBEC     		jmp	.L196
 1837              		.cfi_endproc
 1838              	.LFE57:
 1840              		.section	.rodata.png_set_longjmp_fn.str1.8,"aMS",@progbits,1
 1841              		.align 8
 1842              	.LC5:
 1843 0000 4C696270 		.string	"Libpng jmp_buf still allocated"
 1843      6E67206A 
 1843      6D705F62 
 1843      75662073 
 1843      74696C6C 
 1844 001f 00       		.align 8
 1845              	.LC6:
 1846 0020 4170706C 		.string	"Application jmp_buf size changed"
 1846      69636174 
 1846      696F6E20 
 1846      6A6D705F 
 1846      62756620 
 1847              		.section	.text.png_set_longjmp_fn,"ax",@progbits
 1848              		.p2align 4
 1849              		.globl	png_set_longjmp_fn
 1851              	png_set_longjmp_fn:
 1852              	.LVL199:
 1853              	.LFB58:
 599:fltk-1.3.4-1/png/pngerror.c ****    /* From libpng 1.6.0 the app gets one chance to set a 'jmpbuf_size' value
 1854              		.loc 1 599 1 is_stmt 1 view -0
 1855              		.cfi_startproc
 599:fltk-1.3.4-1/png/pngerror.c ****    /* From libpng 1.6.0 the app gets one chance to set a 'jmpbuf_size' value
 1856              		.loc 1 599 1 is_stmt 0 view .LVU516
 1857 0000 F30F1EFA 		endbr64
 610:fltk-1.3.4-1/png/pngerror.c ****       return NULL;
 1858              		.loc 1 610 4 is_stmt 1 view .LVU517
 610:fltk-1.3.4-1/png/pngerror.c ****       return NULL;
 1859              		.loc 1 610 7 is_stmt 0 view .LVU518
 1860 0004 4885FF   		testq	%rdi, %rdi
 1861 0007 0F84C300 		je	.L220
 1861      0000
 599:fltk-1.3.4-1/png/pngerror.c ****    /* From libpng 1.6.0 the app gets one chance to set a 'jmpbuf_size' value
 1862              		.loc 1 599 1 view .LVU519
 1863 000d 4154     		pushq	%r12
 1864              		.cfi_def_cfa_offset 16
 1865              		.cfi_offset 12, -16
 1866 000f 4989F4   		movq	%rsi, %r12
 1867 0012 53       		pushq	%rbx
 1868              		.cfi_def_cfa_offset 24
 1869              		.cfi_offset 3, -24
 1870 0013 4889D3   		movq	%rdx, %rbx
 613:fltk-1.3.4-1/png/pngerror.c ****    {
 1871              		.loc 1 613 4 is_stmt 1 view .LVU520
 599:fltk-1.3.4-1/png/pngerror.c ****    /* From libpng 1.6.0 the app gets one chance to set a 'jmpbuf_size' value
 1872              		.loc 1 599 1 is_stmt 0 view .LVU521
 1873 0016 4883EC18 		subq	$24, %rsp
 1874              		.cfi_def_cfa_offset 48
 613:fltk-1.3.4-1/png/pngerror.c ****    {
 1875              		.loc 1 613 15 view .LVU522
 1876 001a 488B87D0 		movq	208(%rdi), %rax
 1876      000000
 613:fltk-1.3.4-1/png/pngerror.c ****    {
 1877              		.loc 1 613 7 view .LVU523
 1878 0021 4885C0   		testq	%rax, %rax
 1879 0024 7452     		je	.L221
 1880              	.LBB86:
 634:fltk-1.3.4-1/png/pngerror.c **** 
 1881              		.loc 1 634 7 is_stmt 1 view .LVU524
 634:fltk-1.3.4-1/png/pngerror.c **** 
 1882              		.loc 1 634 14 is_stmt 0 view .LVU525
 1883 0026 488B97D8 		movq	216(%rdi), %rdx
 1883      000000
 1884              	.LVL200:
 636:fltk-1.3.4-1/png/pngerror.c ****       {
 1885              		.loc 1 636 7 is_stmt 1 view .LVU526
 636:fltk-1.3.4-1/png/pngerror.c ****       {
 1886              		.loc 1 636 10 is_stmt 0 view .LVU527
 1887 002d 4885D2   		testq	%rdx, %rdx
 1888 0030 741E     		je	.L222
 651:fltk-1.3.4-1/png/pngerror.c ****       {
 1889              		.loc 1 651 7 is_stmt 1 view .LVU528
 651:fltk-1.3.4-1/png/pngerror.c ****       {
 1890              		.loc 1 651 10 is_stmt 0 view .LVU529
 1891 0032 4839DA   		cmpq	%rbx, %rdx
 1892 0035 7528     		jne	.L223
 1893              	.LVL201:
 1894              	.L209:
 651:fltk-1.3.4-1/png/pngerror.c ****       {
 1895              		.loc 1 651 10 view .LVU530
 1896              	.LBE86:
 661:fltk-1.3.4-1/png/pngerror.c ****    return png_ptr->jmp_buf_ptr;
 1897              		.loc 1 661 4 is_stmt 1 view .LVU531
 661:fltk-1.3.4-1/png/pngerror.c ****    return png_ptr->jmp_buf_ptr;
 1898              		.loc 1 661 24 is_stmt 0 view .LVU532
 1899 0037 4C89A7C8 		movq	%r12, 200(%rdi)
 1899      000000
 662:fltk-1.3.4-1/png/pngerror.c **** }
 1900              		.loc 1 662 4 is_stmt 1 view .LVU533
 663:fltk-1.3.4-1/png/pngerror.c **** 
 1901              		.loc 1 663 1 is_stmt 0 view .LVU534
 1902 003e 4883C418 		addq	$24, %rsp
 1903              		.cfi_remember_state
 1904              		.cfi_def_cfa_offset 24
 1905 0042 5B       		popq	%rbx
 1906              		.cfi_def_cfa_offset 16
 1907              	.LVL202:
 663:fltk-1.3.4-1/png/pngerror.c **** 
 1908              		.loc 1 663 1 view .LVU535
 1909 0043 415C     		popq	%r12
 1910              		.cfi_def_cfa_offset 8
 1911              	.LVL203:
 663:fltk-1.3.4-1/png/pngerror.c **** 
 1912              		.loc 1 663 1 view .LVU536
 1913 0045 C3       		ret
 1914              	.LVL204:
 1915 0046 662E0F1F 		.p2align 4,,10
 1915      84000000 
 1915      0000
 1916              		.p2align 3
 1917              	.L222:
 1918              		.cfi_restore_state
 1919              	.LBB87:
 638:fltk-1.3.4-1/png/pngerror.c ****          if (png_ptr->jmp_buf_ptr != &png_ptr->jmp_buf_local)
 1920              		.loc 1 638 10 is_stmt 1 view .LVU537
 639:fltk-1.3.4-1/png/pngerror.c ****          {
 1921              		.loc 1 639 10 view .LVU538
 639:fltk-1.3.4-1/png/pngerror.c ****          {
 1922              		.loc 1 639 13 is_stmt 0 view .LVU539
 1923 0050 4839F8   		cmpq	%rdi, %rax
 1924 0053 757E     		jne	.L224
 638:fltk-1.3.4-1/png/pngerror.c ****          if (png_ptr->jmp_buf_ptr != &png_ptr->jmp_buf_local)
 1925              		.loc 1 638 15 view .LVU540
 1926 0055 BAC80000 		movl	$200, %edx
 1926      00
 1927              	.LVL205:
 651:fltk-1.3.4-1/png/pngerror.c ****       {
 1928              		.loc 1 651 7 is_stmt 1 view .LVU541
 651:fltk-1.3.4-1/png/pngerror.c ****       {
 1929              		.loc 1 651 10 is_stmt 0 view .LVU542
 1930 005a 4839DA   		cmpq	%rbx, %rdx
 1931 005d 74D8     		je	.L209
 1932              	.L223:
 653:fltk-1.3.4-1/png/pngerror.c ****          return NULL; /* caller will probably crash: no choice here */
 1933              		.loc 1 653 10 is_stmt 1 view .LVU543
 1934 005f 488D3500 		leaq	.LC6(%rip), %rsi
 1934      000000
 1935              	.LVL206:
 653:fltk-1.3.4-1/png/pngerror.c ****          return NULL; /* caller will probably crash: no choice here */
 1936              		.loc 1 653 10 is_stmt 0 view .LVU544
 1937 0066 E8000000 		call	png_warning
 1937      00
 1938              	.LVL207:
 1939              	.L219:
 654:fltk-1.3.4-1/png/pngerror.c ****       }
 1940              		.loc 1 654 10 is_stmt 1 view .LVU545
 1941              	.LBE87:
 663:fltk-1.3.4-1/png/pngerror.c **** 
 1942              		.loc 1 663 1 is_stmt 0 view .LVU546
 1943 006b 4883C418 		addq	$24, %rsp
 1944              		.cfi_remember_state
 1945              		.cfi_def_cfa_offset 24
 1946              	.LBB88:
 654:fltk-1.3.4-1/png/pngerror.c ****       }
 1947              		.loc 1 654 17 view .LVU547
 1948 006f 31C0     		xorl	%eax, %eax
 1949              	.LBE88:
 663:fltk-1.3.4-1/png/pngerror.c **** 
 1950              		.loc 1 663 1 view .LVU548
 1951 0071 5B       		popq	%rbx
 1952              		.cfi_def_cfa_offset 16
 1953              	.LVL208:
 663:fltk-1.3.4-1/png/pngerror.c **** 
 1954              		.loc 1 663 1 view .LVU549
 1955 0072 415C     		popq	%r12
 1956              		.cfi_def_cfa_offset 8
 1957              	.LVL209:
 663:fltk-1.3.4-1/png/pngerror.c **** 
 1958              		.loc 1 663 1 view .LVU550
 1959 0074 C3       		ret
 1960              	.LVL210:
 1961              		.p2align 4,,10
 1962 0075 0F1F00   		.p2align 3
 1963              	.L221:
 1964              		.cfi_restore_state
 615:fltk-1.3.4-1/png/pngerror.c **** 
 1965              		.loc 1 615 7 is_stmt 1 view .LVU551
 615:fltk-1.3.4-1/png/pngerror.c **** 
 1966              		.loc 1 615 29 is_stmt 0 view .LVU552
 1967 0078 48C787D8 		movq	$0, 216(%rdi)
 1967      00000000 
 1967      000000
 617:fltk-1.3.4-1/png/pngerror.c ****          png_ptr->jmp_buf_ptr = &png_ptr->jmp_buf_local;
 1968              		.loc 1 617 7 is_stmt 1 view .LVU553
 617:fltk-1.3.4-1/png/pngerror.c ****          png_ptr->jmp_buf_ptr = &png_ptr->jmp_buf_local;
 1969              		.loc 1 617 10 is_stmt 0 view .LVU554
 1970 0083 4881FAC8 		cmpq	$200, %rdx
 1970      000000
 1971 008a 7714     		ja	.L208
 618:fltk-1.3.4-1/png/pngerror.c **** 
 1972              		.loc 1 618 10 is_stmt 1 view .LVU555
 618:fltk-1.3.4-1/png/pngerror.c **** 
 1973              		.loc 1 618 31 is_stmt 0 view .LVU556
 1974 008c 4889BFD0 		movq	%rdi, 208(%rdi)
 1974      000000
 618:fltk-1.3.4-1/png/pngerror.c **** 
 1975              		.loc 1 618 33 view .LVU557
 1976 0093 4889F8   		movq	%rdi, %rax
 1977 0096 EB9F     		jmp	.L209
 1978 0098 0F1F8400 		.p2align 4,,10
 1978      00000000 
 1979              		.p2align 3
 1980              	.L208:
 622:fltk-1.3.4-1/png/pngerror.c ****             png_malloc_warn(png_ptr, jmp_buf_size));
 1981              		.loc 1 622 10 is_stmt 1 view .LVU558
 622:fltk-1.3.4-1/png/pngerror.c ****             png_malloc_warn(png_ptr, jmp_buf_size));
 1982              		.loc 1 622 33 is_stmt 0 view .LVU559
 1983 00a0 4889D6   		movq	%rdx, %rsi
 1984              	.LVL211:
 622:fltk-1.3.4-1/png/pngerror.c ****             png_malloc_warn(png_ptr, jmp_buf_size));
 1985              		.loc 1 622 33 view .LVU560
 1986 00a3 48897C24 		movq	%rdi, 8(%rsp)
 1986      08
 1987 00a8 E8000000 		call	png_malloc_warn@PLT
 1987      00
 1988              	.LVL212:
 622:fltk-1.3.4-1/png/pngerror.c ****             png_malloc_warn(png_ptr, jmp_buf_size));
 1989              		.loc 1 622 31 view .LVU561
 1990 00ad 488B7C24 		movq	8(%rsp), %rdi
 1990      08
 1991 00b2 488987D0 		movq	%rax, 208(%rdi)
 1991      000000
 625:fltk-1.3.4-1/png/pngerror.c ****             return NULL; /* new NULL return on OOM */
 1992              		.loc 1 625 10 is_stmt 1 view .LVU562
 625:fltk-1.3.4-1/png/pngerror.c ****             return NULL; /* new NULL return on OOM */
 1993              		.loc 1 625 13 is_stmt 0 view .LVU563
 1994 00b9 4885C0   		testq	%rax, %rax
 1995 00bc 74AD     		je	.L219
 628:fltk-1.3.4-1/png/pngerror.c ****       }
 1996              		.loc 1 628 10 is_stmt 1 view .LVU564
 628:fltk-1.3.4-1/png/pngerror.c ****       }
 1997              		.loc 1 628 32 is_stmt 0 view .LVU565
 1998 00be 48899FD8 		movq	%rbx, 216(%rdi)
 1998      000000
 1999 00c5 E96DFFFF 		jmp	.L209
 1999      FF
 2000              	.LVL213:
 2001 00ca 660F1F44 		.p2align 4,,10
 2001      0000
 2002              		.p2align 3
 2003              	.L220:
 2004              		.cfi_def_cfa_offset 8
 2005              		.cfi_restore 3
 2006              		.cfi_restore 12
 611:fltk-1.3.4-1/png/pngerror.c **** 
 2007              		.loc 1 611 14 view .LVU566
 2008 00d0 31C0     		xorl	%eax, %eax
 663:fltk-1.3.4-1/png/pngerror.c **** 
 2009              		.loc 1 663 1 view .LVU567
 2010 00d2 C3       		ret
 2011              	.LVL214:
 2012              	.L224:
 2013              		.cfi_def_cfa_offset 48
 2014              		.cfi_offset 3, -24
 2015              		.cfi_offset 12, -16
 2016              	.LBB89:
 646:fltk-1.3.4-1/png/pngerror.c ****             /* png_ptr->jmp_buf_ptr = &png_ptr->jmp_buf_local; */
 2017              		.loc 1 646 13 is_stmt 1 view .LVU568
 2018 00d3 488D3500 		leaq	.LC5(%rip), %rsi
 2018      000000
 2019              	.LVL215:
 646:fltk-1.3.4-1/png/pngerror.c ****             /* png_ptr->jmp_buf_ptr = &png_ptr->jmp_buf_local; */
 2020              		.loc 1 646 13 is_stmt 0 view .LVU569
 2021 00da E8000000 		call	png_error
 2021      00
 2022              	.LVL216:
 646:fltk-1.3.4-1/png/pngerror.c ****             /* png_ptr->jmp_buf_ptr = &png_ptr->jmp_buf_local; */
 2023              		.loc 1 646 13 view .LVU570
 2024              	.LBE89:
 2025              		.cfi_endproc
 2026              	.LFE58:
 2028              		.section	.text.png_chunk_error,"ax",@progbits
 2029              		.p2align 4
 2030              		.globl	png_chunk_error
 2032              	png_chunk_error:
 2033              	.LVL217:
 2034              	.LFB53:
 482:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 2035              		.loc 1 482 1 is_stmt 1 view -0
 2036              		.cfi_startproc
 482:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 2037              		.loc 1 482 1 is_stmt 0 view .LVU572
 2038 0000 F30F1EFA 		endbr64
 2039 0004 55       		pushq	%rbp
 2040              		.cfi_def_cfa_offset 16
 2041              		.cfi_offset 6, -16
 2042 0005 4889F2   		movq	%rsi, %rdx
 2043 0008 4881ECE0 		subq	$224, %rsp
 2043      000000
 2044              		.cfi_def_cfa_offset 240
 482:fltk-1.3.4-1/png/pngerror.c ****    char msg[18+PNG_MAX_ERROR_TEXT];
 2045              		.loc 1 482 1 view .LVU573
 2046 000f 64488B04 		movq	%fs:40, %rax
 2046      25280000 
 2046      00
 2047 0018 48898424 		movq	%rax, 216(%rsp)
 2047      D8000000 
 2048 0020 31C0     		xorl	%eax, %eax
 483:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr == NULL)
 2049              		.loc 1 483 4 is_stmt 1 view .LVU574
 484:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, error_message);
 2050              		.loc 1 484 4 view .LVU575
 484:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, error_message);
 2051              		.loc 1 484 7 is_stmt 0 view .LVU576
 2052 0022 4885FF   		testq	%rdi, %rdi
 2053 0025 7419     		je	.L229
 2054 0027 4889FD   		movq	%rdi, %rbp
 489:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, msg);
 2055              		.loc 1 489 7 is_stmt 1 view .LVU577
 2056 002a 8BBF1802 		movl	536(%rdi), %edi
 2056      0000
 2057              	.LVL218:
 489:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, msg);
 2058              		.loc 1 489 7 is_stmt 0 view .LVU578
 2059 0030 4889E6   		movq	%rsp, %rsi
 2060              	.LVL219:
 489:fltk-1.3.4-1/png/pngerror.c ****       png_error(png_ptr, msg);
 2061              		.loc 1 489 7 view .LVU579
 2062 0033 E8000000 		call	png_format_buffer.isra.0
 2062      00
 2063              	.LVL220:
 490:fltk-1.3.4-1/png/pngerror.c ****    }
 2064              		.loc 1 490 7 is_stmt 1 view .LVU580
 2065 0038 4889EF   		movq	%rbp, %rdi
 2066 003b E8000000 		call	png_error
 2066      00
 2067              	.LVL221:
 2068              	.L229:
 485:fltk-1.3.4-1/png/pngerror.c **** 
 2069              		.loc 1 485 7 view .LVU581
 2070              	.LBB92:
 2071              	.LBI92:
  38:fltk-1.3.4-1/png/pngerror.c **** png_error,(png_const_structrp png_ptr, png_const_charp error_message),
 2072              		.loc 1 38 1 view .LVU582
 2073              	.LBB93:
  82:fltk-1.3.4-1/png/pngerror.c ****       (*(png_ptr->error_fn))(png_constcast(png_structrp,png_ptr),
 2074              		.loc 1 82 4 view .LVU583
  88:fltk-1.3.4-1/png/pngerror.c **** }
 2075              		.loc 1 88 4 view .LVU584
 2076 0040 31FF     		xorl	%edi, %edi
 2077              	.LVL222:
  88:fltk-1.3.4-1/png/pngerror.c **** }
 2078              		.loc 1 88 4 is_stmt 0 view .LVU585
 2079 0042 E8000000 		call	png_default_error
 2079      00
 2080              	.LVL223:
  88:fltk-1.3.4-1/png/pngerror.c **** }
 2081              		.loc 1 88 4 view .LVU586
 2082              	.LBE93:
 2083              	.LBE92:
 2084              		.cfi_endproc
 2085              	.LFE53:
 2087              		.section	.text.png_chunk_benign_error,"ax",@progbits
 2088              		.p2align 4
 2089              		.globl	png_chunk_benign_error
 2091              	png_chunk_benign_error:
 2092              	.LVL224:
 2093              	.LFB55:
 516:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 2094              		.loc 1 516 1 is_stmt 1 view -0
 2095              		.cfi_startproc
 516:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 2096              		.loc 1 516 1 is_stmt 0 view .LVU588
 2097 0000 F30F1EFA 		endbr64
 517:fltk-1.3.4-1/png/pngerror.c ****       png_chunk_warning(png_ptr, error_message);
 2098              		.loc 1 517 4 is_stmt 1 view .LVU589
 517:fltk-1.3.4-1/png/pngerror.c ****       png_chunk_warning(png_ptr, error_message);
 2099              		.loc 1 517 7 is_stmt 0 view .LVU590
 2100 0004 F6873201 		testb	$16, 306(%rdi)
 2100      000010
 2101 000b 7405     		je	.L231
 518:fltk-1.3.4-1/png/pngerror.c **** 
 2102              		.loc 1 518 7 is_stmt 1 view .LVU591
 2103 000d E9000000 		jmp	png_chunk_warning
 2103      00
 2104              	.LVL225:
 2105              	.L231:
 521:fltk-1.3.4-1/png/pngerror.c **** 
 2106              		.loc 1 521 7 view .LVU592
 516:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 2107              		.loc 1 516 1 is_stmt 0 view .LVU593
 2108 0012 50       		pushq	%rax
 2109              		.cfi_def_cfa_offset 16
 521:fltk-1.3.4-1/png/pngerror.c **** 
 2110              		.loc 1 521 7 view .LVU594
 2111 0013 E8000000 		call	png_chunk_error
 2111      00
 2112              	.LVL226:
 521:fltk-1.3.4-1/png/pngerror.c **** 
 2113              		.loc 1 521 7 view .LVU595
 2114              		.cfi_endproc
 2115              	.LFE55:
 2117              		.section	.text.png_chunk_report,"ax",@progbits
 2118              		.p2align 4
 2119              		.globl	png_chunk_report
 2121              	png_chunk_report:
 2122              	.LVL227:
 2123              	.LFB56:
 532:fltk-1.3.4-1/png/pngerror.c **** #  ifndef PNG_WARNINGS_SUPPORTED
 2124              		.loc 1 532 1 is_stmt 1 view -0
 2125              		.cfi_startproc
 532:fltk-1.3.4-1/png/pngerror.c **** #  ifndef PNG_WARNINGS_SUPPORTED
 2126              		.loc 1 532 1 is_stmt 0 view .LVU597
 2127 0000 F30F1EFA 		endbr64
 541:fltk-1.3.4-1/png/pngerror.c **** #  endif
 2128              		.loc 1 541 7 is_stmt 1 view .LVU598
 541:fltk-1.3.4-1/png/pngerror.c **** #  endif
 2129              		.loc 1 541 10 is_stmt 0 view .LVU599
 2130 0004 F6872D01 		testb	$-128, 301(%rdi)
 2130      000080
 2131 000b 7413     		je	.L235
 546:fltk-1.3.4-1/png/pngerror.c ****             png_chunk_warning(png_ptr, message);
 2132              		.loc 1 546 10 is_stmt 1 view .LVU600
 546:fltk-1.3.4-1/png/pngerror.c ****             png_chunk_warning(png_ptr, message);
 2133              		.loc 1 546 13 is_stmt 0 view .LVU601
 2134 000d 83FA01   		cmpl	$1, %edx
 2135 0010 7E26     		jle	.L238
 550:fltk-1.3.4-1/png/pngerror.c ****       }
 2136              		.loc 1 550 13 is_stmt 1 view .LVU602
 2137 0012 E9000000 		jmp	png_chunk_benign_error
 2137      00
 2138              	.LVL228:
 2139 0017 660F1F84 		.p2align 4,,10
 2139      00000000 
 2139      00
 2140              		.p2align 3
 2141              	.L235:
 555:fltk-1.3.4-1/png/pngerror.c **** #  endif
 2142              		.loc 1 555 12 view .LVU603
 560:fltk-1.3.4-1/png/pngerror.c ****             png_app_warning(png_ptr, message);
 2143              		.loc 1 560 10 view .LVU604
 560:fltk-1.3.4-1/png/pngerror.c ****             png_app_warning(png_ptr, message);
 2144              		.loc 1 560 13 is_stmt 0 view .LVU605
 2145 0020 85D2     		testl	%edx, %edx
 2146 0022 7E0C     		jle	.L239
 564:fltk-1.3.4-1/png/pngerror.c ****       }
 2147              		.loc 1 564 13 is_stmt 1 view .LVU606
 2148 0024 E9000000 		jmp	png_app_error
 2148      00
 2149              	.LVL229:
 2150 0029 0F1F8000 		.p2align 4,,10
 2150      000000
 2151              		.p2align 3
 2152              	.L239:
 561:fltk-1.3.4-1/png/pngerror.c **** 
 2153              		.loc 1 561 13 view .LVU607
 2154 0030 E9000000 		jmp	png_app_warning
 2154      00
 2155              	.LVL230:
 2156              		.p2align 4,,10
 2157 0035 0F1F00   		.p2align 3
 2158              	.L238:
 547:fltk-1.3.4-1/png/pngerror.c **** 
 2159              		.loc 1 547 13 view .LVU608
 2160 0038 E9000000 		jmp	png_chunk_warning
 2160      00
 2161              	.LVL231:
 547:fltk-1.3.4-1/png/pngerror.c **** 
 2162              		.loc 1 547 13 is_stmt 0 view .LVU609
 2163              		.cfi_endproc
 2164              	.LFE56:
 2166              		.section	.text.png_benign_error,"ax",@progbits
 2167              		.p2align 4
 2168              		.globl	png_benign_error
 2170              	png_benign_error:
 2171              	.LVL232:
 2172              	.LFB49:
 363:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 2173              		.loc 1 363 1 is_stmt 1 view -0
 2174              		.cfi_startproc
 363:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 2175              		.loc 1 363 1 is_stmt 0 view .LVU611
 2176 0000 F30F1EFA 		endbr64
 364:fltk-1.3.4-1/png/pngerror.c ****    {
 2177              		.loc 1 364 4 is_stmt 1 view .LVU612
 2178 0004 8B872C01 		movl	300(%rdi), %eax
 2178      0000
 2179 000a 25008000 		andl	$32768, %eax
 2179      00
 364:fltk-1.3.4-1/png/pngerror.c ****    {
 2180              		.loc 1 364 7 is_stmt 0 view .LVU613
 2181 000f F6873201 		testb	$16, 306(%rdi)
 2181      000010
 2182 0016 7418     		je	.L241
 367:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 2183              		.loc 1 367 10 is_stmt 1 view .LVU614
 367:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 2184              		.loc 1 367 13 is_stmt 0 view .LVU615
 2185 0018 85C0     		testl	%eax, %eax
 2186 001a 740A     		je	.L242
 367:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 2187              		.loc 1 367 56 discriminator 1 view .LVU616
 2188 001c 8B971802 		movl	536(%rdi), %edx
 2188      0000
 2189 0022 85D2     		testl	%edx, %edx
 2190 0024 7532     		jne	.L252
 2191              	.L242:
 372:fltk-1.3.4-1/png/pngerror.c ****    }
 2192              		.loc 1 372 7 is_stmt 1 view .LVU617
 2193 0026 E9000000 		jmp	png_warning
 2193      00
 2194              	.LVL233:
 2195 002b 0F1F4400 		.p2align 4,,10
 2195      00
 2196              		.p2align 3
 2197              	.L241:
 378:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 2198              		.loc 1 378 10 view .LVU618
 363:fltk-1.3.4-1/png/pngerror.c ****    if ((png_ptr->flags & PNG_FLAG_BENIGN_ERRORS_WARN) != 0)
 2199              		.loc 1 363 1 is_stmt 0 view .LVU619
 2200 0030 4883EC08 		subq	$8, %rsp
 2201              		.cfi_def_cfa_offset 16
 378:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 2202              		.loc 1 378 13 view .LVU620
 2203 0034 85C0     		testl	%eax, %eax
 2204 0036 740A     		je	.L243
 378:fltk-1.3.4-1/png/pngerror.c ****             png_ptr->chunk_name != 0)
 2205              		.loc 1 378 56 discriminator 1 view .LVU621
 2206 0038 8B871802 		movl	536(%rdi), %eax
 2206      0000
 2207 003e 85C0     		testl	%eax, %eax
 2208 0040 750E     		jne	.L253
 2209              	.L243:
 383:fltk-1.3.4-1/png/pngerror.c ****    }
 2210              		.loc 1 383 7 is_stmt 1 view .LVU622
 2211 0042 E8000000 		call	png_error
 2211      00
 2212              	.LVL234:
 2213 0047 660F1F84 		.p2align 4,,10
 2213      00000000 
 2213      00
 2214              		.p2align 3
 2215              	.L253:
 380:fltk-1.3.4-1/png/pngerror.c ****          else
 2216              		.loc 1 380 13 view .LVU623
 2217 0050 E8000000 		call	png_chunk_error
 2217      00
 2218              	.LVL235:
 2219              		.p2align 4,,10
 2220 0055 0F1F00   		.p2align 3
 2221              	.L252:
 2222              		.cfi_def_cfa_offset 8
 369:fltk-1.3.4-1/png/pngerror.c ****          else
 2223              		.loc 1 369 13 view .LVU624
 2224 0058 E9000000 		jmp	png_chunk_warning
 2224      00
 2225              	.LVL236:
 369:fltk-1.3.4-1/png/pngerror.c ****          else
 2226              		.loc 1 369 13 is_stmt 0 view .LVU625
 2227              		.cfi_endproc
 2228              	.LFE49:
 2230              		.section	.text.png_set_error_fn,"ax",@progbits
 2231              		.p2align 4
 2232              		.globl	png_set_error_fn
 2234              	png_set_error_fn:
 2235              	.LVL237:
 2236              	.LFB63:
 827:fltk-1.3.4-1/png/pngerror.c **** #endif /* WARNINGS */
 828:fltk-1.3.4-1/png/pngerror.c **** 
 829:fltk-1.3.4-1/png/pngerror.c **** /* This function is called when the application wants to use another method
 830:fltk-1.3.4-1/png/pngerror.c ****  * of handling errors and warnings.  Note that the error function MUST NOT
 831:fltk-1.3.4-1/png/pngerror.c ****  * return to the calling routine or serious problems will occur.  The return
 832:fltk-1.3.4-1/png/pngerror.c ****  * method used in the default routine calls longjmp(png_ptr->jmp_buf_ptr, 1)
 833:fltk-1.3.4-1/png/pngerror.c ****  */
 834:fltk-1.3.4-1/png/pngerror.c **** void PNGAPI
 835:fltk-1.3.4-1/png/pngerror.c **** png_set_error_fn(png_structrp png_ptr, png_voidp error_ptr,
 836:fltk-1.3.4-1/png/pngerror.c ****     png_error_ptr error_fn, png_error_ptr warning_fn)
 837:fltk-1.3.4-1/png/pngerror.c **** {
 2237              		.loc 1 837 1 is_stmt 1 view -0
 2238              		.cfi_startproc
 2239              		.loc 1 837 1 is_stmt 0 view .LVU627
 2240 0000 F30F1EFA 		endbr64
 838:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr == NULL)
 2241              		.loc 1 838 4 is_stmt 1 view .LVU628
 2242              		.loc 1 838 7 is_stmt 0 view .LVU629
 2243 0004 4885FF   		testq	%rdi, %rdi
 2244 0007 7415     		je	.L254
 839:fltk-1.3.4-1/png/pngerror.c ****       return;
 840:fltk-1.3.4-1/png/pngerror.c **** 
 841:fltk-1.3.4-1/png/pngerror.c ****    png_ptr->error_ptr = error_ptr;
 2245              		.loc 1 841 4 is_stmt 1 view .LVU630
 2246              		.loc 1 841 23 is_stmt 0 view .LVU631
 2247 0009 4889B7F0 		movq	%rsi, 240(%rdi)
 2247      000000
 842:fltk-1.3.4-1/png/pngerror.c ****    png_ptr->error_fn = error_fn;
 2248              		.loc 1 842 4 is_stmt 1 view .LVU632
 2249              		.loc 1 842 22 is_stmt 0 view .LVU633
 2250 0010 488997E0 		movq	%rdx, 224(%rdi)
 2250      000000
 843:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_WARNINGS_SUPPORTED
 844:fltk-1.3.4-1/png/pngerror.c ****    png_ptr->warning_fn = warning_fn;
 2251              		.loc 1 844 4 is_stmt 1 view .LVU634
 2252              		.loc 1 844 24 is_stmt 0 view .LVU635
 2253 0017 48898FE8 		movq	%rcx, 232(%rdi)
 2253      000000
 2254              	.L254:
 845:fltk-1.3.4-1/png/pngerror.c **** #else
 846:fltk-1.3.4-1/png/pngerror.c ****    PNG_UNUSED(warning_fn)
 847:fltk-1.3.4-1/png/pngerror.c **** #endif
 848:fltk-1.3.4-1/png/pngerror.c **** }
 2255              		.loc 1 848 1 view .LVU636
 2256 001e C3       		ret
 2257              		.cfi_endproc
 2258              	.LFE63:
 2260              		.section	.text.png_get_error_ptr,"ax",@progbits
 2261              		.p2align 4
 2262              		.globl	png_get_error_ptr
 2264              	png_get_error_ptr:
 2265              	.LVL238:
 2266              	.LFB64:
 849:fltk-1.3.4-1/png/pngerror.c **** 
 850:fltk-1.3.4-1/png/pngerror.c **** 
 851:fltk-1.3.4-1/png/pngerror.c **** /* This function returns a pointer to the error_ptr associated with the user
 852:fltk-1.3.4-1/png/pngerror.c ****  * functions.  The application should free any memory associated with this
 853:fltk-1.3.4-1/png/pngerror.c ****  * pointer before png_write_destroy and png_read_destroy are called.
 854:fltk-1.3.4-1/png/pngerror.c ****  */
 855:fltk-1.3.4-1/png/pngerror.c **** png_voidp PNGAPI
 856:fltk-1.3.4-1/png/pngerror.c **** png_get_error_ptr(png_const_structrp png_ptr)
 857:fltk-1.3.4-1/png/pngerror.c **** {
 2267              		.loc 1 857 1 is_stmt 1 view -0
 2268              		.cfi_startproc
 2269              		.loc 1 857 1 is_stmt 0 view .LVU638
 2270 0000 F30F1EFA 		endbr64
 858:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr == NULL)
 2271              		.loc 1 858 4 is_stmt 1 view .LVU639
 2272              		.loc 1 858 7 is_stmt 0 view .LVU640
 2273 0004 4885FF   		testq	%rdi, %rdi
 2274 0007 740F     		je	.L261
 859:fltk-1.3.4-1/png/pngerror.c ****       return NULL;
 860:fltk-1.3.4-1/png/pngerror.c **** 
 861:fltk-1.3.4-1/png/pngerror.c ****    return ((png_voidp)png_ptr->error_ptr);
 2275              		.loc 1 861 4 is_stmt 1 view .LVU641
 2276              		.loc 1 861 12 is_stmt 0 view .LVU642
 2277 0009 488B87F0 		movq	240(%rdi), %rax
 2277      000000
 2278 0010 C3       		ret
 2279              		.p2align 4,,10
 2280 0011 0F1F8000 		.p2align 3
 2280      000000
 2281              	.L261:
 859:fltk-1.3.4-1/png/pngerror.c ****       return NULL;
 2282              		.loc 1 859 14 view .LVU643
 2283 0018 31C0     		xorl	%eax, %eax
 862:fltk-1.3.4-1/png/pngerror.c **** }
 2284              		.loc 1 862 1 view .LVU644
 2285 001a C3       		ret
 2286              		.cfi_endproc
 2287              	.LFE64:
 2289              		.section	.rodata.png_safe_error.str1.1,"aMS",@progbits,1
 2290              	.LC7:
 2291 0000 62616420 		.string	"bad longjmp: "
 2291      6C6F6E67 
 2291      6A6D703A 
 2291      2000
 2292              		.section	.text.unlikely.png_safe_error,"ax",@progbits
 2293              	.LCOLDB8:
 2294              		.section	.text.png_safe_error,"ax",@progbits
 2295              	.LHOTB8:
 2296              		.p2align 4
 2297              		.globl	png_safe_error
 2299              	png_safe_error:
 2300              	.LVL239:
 2301              	.LFB65:
 863:fltk-1.3.4-1/png/pngerror.c **** 
 864:fltk-1.3.4-1/png/pngerror.c **** 
 865:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_ERROR_NUMBERS_SUPPORTED
 866:fltk-1.3.4-1/png/pngerror.c **** void PNGAPI
 867:fltk-1.3.4-1/png/pngerror.c **** png_set_strip_error_numbers(png_structrp png_ptr, png_uint_32 strip_mode)
 868:fltk-1.3.4-1/png/pngerror.c **** {
 869:fltk-1.3.4-1/png/pngerror.c ****    if (png_ptr != NULL)
 870:fltk-1.3.4-1/png/pngerror.c ****    {
 871:fltk-1.3.4-1/png/pngerror.c ****       png_ptr->flags &=
 872:fltk-1.3.4-1/png/pngerror.c ****          ((~(PNG_FLAG_STRIP_ERROR_NUMBERS |
 873:fltk-1.3.4-1/png/pngerror.c ****          PNG_FLAG_STRIP_ERROR_TEXT))&strip_mode);
 874:fltk-1.3.4-1/png/pngerror.c ****    }
 875:fltk-1.3.4-1/png/pngerror.c **** }
 876:fltk-1.3.4-1/png/pngerror.c **** #endif
 877:fltk-1.3.4-1/png/pngerror.c **** 
 878:fltk-1.3.4-1/png/pngerror.c **** #if defined(PNG_SIMPLIFIED_READ_SUPPORTED) ||\
 879:fltk-1.3.4-1/png/pngerror.c ****    defined(PNG_SIMPLIFIED_WRITE_SUPPORTED)
 880:fltk-1.3.4-1/png/pngerror.c ****    /* Currently the above both depend on SETJMP_SUPPORTED, however it would be
 881:fltk-1.3.4-1/png/pngerror.c ****     * possible to implement without setjmp support just so long as there is some
 882:fltk-1.3.4-1/png/pngerror.c ****     * way to handle the error return here:
 883:fltk-1.3.4-1/png/pngerror.c ****     */
 884:fltk-1.3.4-1/png/pngerror.c **** PNG_FUNCTION(void /* PRIVATE */, (PNGCBAPI
 885:fltk-1.3.4-1/png/pngerror.c **** png_safe_error),(png_structp png_nonconst_ptr, png_const_charp error_message),
 886:fltk-1.3.4-1/png/pngerror.c ****    PNG_NORETURN)
 887:fltk-1.3.4-1/png/pngerror.c **** {
 2302              		.loc 1 887 1 is_stmt 1 view -0
 2303              		.cfi_startproc
 2304              		.loc 1 887 1 is_stmt 0 view .LVU646
 2305 0000 F30F1EFA 		endbr64
 2306 0004 50       		pushq	%rax
 2307              		.cfi_def_cfa_offset 16
 2308 0005 58       		popq	%rax
 2309              		.cfi_def_cfa_offset 8
 888:fltk-1.3.4-1/png/pngerror.c ****    const png_const_structrp png_ptr = png_nonconst_ptr;
 2310              		.loc 1 888 4 is_stmt 1 view .LVU647
 2311              	.LVL240:
 889:fltk-1.3.4-1/png/pngerror.c ****    png_imagep image = png_voidcast(png_imagep, png_ptr->error_ptr);
 2312              		.loc 1 889 4 view .LVU648
 887:fltk-1.3.4-1/png/pngerror.c ****    const png_const_structrp png_ptr = png_nonconst_ptr;
 2313              		.loc 1 887 1 is_stmt 0 view .LVU649
 2314 0006 4883EC08 		subq	$8, %rsp
 2315              		.cfi_def_cfa_offset 16
 2316              		.loc 1 889 15 view .LVU650
 2317 000a 4C8B87F0 		movq	240(%rdi), %r8
 2317      000000
 2318              	.LVL241:
 890:fltk-1.3.4-1/png/pngerror.c **** 
 891:fltk-1.3.4-1/png/pngerror.c ****    /* An error is always logged here, overwriting anything (typically a warning)
 892:fltk-1.3.4-1/png/pngerror.c ****     * that is already there:
 893:fltk-1.3.4-1/png/pngerror.c ****     */
 894:fltk-1.3.4-1/png/pngerror.c ****    if (image != NULL)
 2319              		.loc 1 894 4 is_stmt 1 view .LVU651
 2320              		.loc 1 894 7 is_stmt 0 view .LVU652
 2321 0011 4D85C0   		testq	%r8, %r8
 2322 0014 0F840000 		je	.L264
 2322      0000
 895:fltk-1.3.4-1/png/pngerror.c ****    {
 896:fltk-1.3.4-1/png/pngerror.c ****       png_safecat(image->message, (sizeof image->message), 0, error_message);
 2323              		.loc 1 896 24 view .LVU653
 2324 001a 4D8D5024 		leaq	36(%r8), %r10
 2325 001e 4989F1   		movq	%rsi, %r9
 2326              		.loc 1 896 7 is_stmt 1 view .LVU654
 2327              	.LVL242:
 2328              	.LBB94:
 2329              	.LBI94:
 112:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 2330              		.loc 1 112 1 view .LVU655
 2331              	.LBB95:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2332              		.loc 1 115 4 view .LVU656
 2333 0021 4889F1   		movq	%rsi, %rcx
 2334 0024 31D2     		xorl	%edx, %edx
 2335 0026 BE400000 		movl	$64, %esi
 2335      00
 2336              	.LVL243:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2337              		.loc 1 115 4 is_stmt 0 view .LVU657
 2338 002b 4C89D7   		movq	%r10, %rdi
 2339              	.LVL244:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2340              		.loc 1 115 4 view .LVU658
 2341 002e E8000000 		call	png_safecat.part.0
 2341      00
 2342              	.LVL245:
 124:fltk-1.3.4-1/png/pngerror.c **** }
 2343              		.loc 1 124 4 is_stmt 1 view .LVU659
 124:fltk-1.3.4-1/png/pngerror.c **** }
 2344              		.loc 1 124 4 is_stmt 0 view .LVU660
 2345              	.LBE95:
 2346              	.LBE94:
 897:fltk-1.3.4-1/png/pngerror.c ****       image->warning_or_error |= PNG_IMAGE_ERROR;
 2347              		.loc 1 897 7 is_stmt 1 view .LVU661
 898:fltk-1.3.4-1/png/pngerror.c **** 
 899:fltk-1.3.4-1/png/pngerror.c ****       /* Retrieve the jmp_buf from within the png_control, making this work for
 900:fltk-1.3.4-1/png/pngerror.c ****        * C++ compilation too is pretty tricky: C++ wants a pointer to the first
 901:fltk-1.3.4-1/png/pngerror.c ****        * element of a jmp_buf, but C doesn't tell us the type of that.
 902:fltk-1.3.4-1/png/pngerror.c ****        */
 903:fltk-1.3.4-1/png/pngerror.c ****       if (image->opaque != NULL && image->opaque->error_buf != NULL)
 2348              		.loc 1 903 16 is_stmt 0 view .LVU662
 2349 0033 498B00   		movq	(%r8), %rax
 897:fltk-1.3.4-1/png/pngerror.c ****       image->warning_or_error |= PNG_IMAGE_ERROR;
 2350              		.loc 1 897 31 view .LVU663
 2351 0036 41834820 		orl	$2, 32(%r8)
 2351      02
 2352              		.loc 1 903 7 is_stmt 1 view .LVU664
 2353              		.loc 1 903 10 is_stmt 0 view .LVU665
 2354 003b 4885C0   		testq	%rax, %rax
 2355 003e 7413     		je	.L265
 2356              		.loc 1 903 49 discriminator 1 view .LVU666
 2357 0040 488B7810 		movq	16(%rax), %rdi
 2358              		.loc 1 903 33 discriminator 1 view .LVU667
 2359 0044 4885FF   		testq	%rdi, %rdi
 2360 0047 740A     		je	.L265
 904:fltk-1.3.4-1/png/pngerror.c ****          longjmp(png_control_jmp_buf(image->opaque), 1);
 2361              		.loc 1 904 10 is_stmt 1 view .LVU668
 2362 0049 BE010000 		movl	$1, %esi
 2362      00
 2363 004e E8000000 		call	__longjmp_chk@PLT
 2363      00
 2364              	.LVL246:
 2365              	.L265:
 2366              	.LBB96:
 905:fltk-1.3.4-1/png/pngerror.c **** 
 906:fltk-1.3.4-1/png/pngerror.c ****       /* Missing longjmp buffer, the following is to help debugging: */
 907:fltk-1.3.4-1/png/pngerror.c ****       {
 908:fltk-1.3.4-1/png/pngerror.c ****          size_t pos = png_safecat(image->message, (sizeof image->message), 0,
 2367              		.loc 1 908 10 view .LVU669
 2368              	.LBB97:
 2369              	.LBI97:
 112:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 2370              		.loc 1 112 1 view .LVU670
 2371              	.LBB98:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2372              		.loc 1 115 4 view .LVU671
 2373 0053 31D2     		xorl	%edx, %edx
 2374 0055 488D0D00 		leaq	.LC7(%rip), %rcx
 2374      000000
 2375 005c BE400000 		movl	$64, %esi
 2375      00
 2376 0061 4C89D7   		movq	%r10, %rdi
 2377 0064 E8000000 		call	png_safecat.part.0
 2377      00
 2378              	.LVL247:
 2379 0069 4889C2   		movq	%rax, %rdx
 2380              	.LVL248:
 124:fltk-1.3.4-1/png/pngerror.c **** }
 2381              		.loc 1 124 4 view .LVU672
 124:fltk-1.3.4-1/png/pngerror.c **** }
 2382              		.loc 1 124 4 is_stmt 0 view .LVU673
 2383              	.LBE98:
 2384              	.LBE97:
 909:fltk-1.3.4-1/png/pngerror.c ****             "bad longjmp: ");
 910:fltk-1.3.4-1/png/pngerror.c ****          png_safecat(image->message, (sizeof image->message), pos,
 2385              		.loc 1 910 10 is_stmt 1 view .LVU674
 2386              	.LBB99:
 2387              	.LBI99:
 112:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 2388              		.loc 1 112 1 view .LVU675
 2389              	.LBB100:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2390              		.loc 1 115 4 view .LVU676
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2391              		.loc 1 115 7 is_stmt 0 view .LVU677
 2392 006c 4883F83F 		cmpq	$63, %rax
 2393 0070 0F870000 		ja	.L264
 2393      0000
 2394              	.LVL249:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2395              		.loc 1 115 7 view .LVU678
 2396 0076 4C89C9   		movq	%r9, %rcx
 2397 0079 BE400000 		movl	$64, %esi
 2397      00
 2398 007e E8000000 		call	png_safecat.part.0
 2398      00
 2399              	.LVL250:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2400              		.loc 1 115 7 view .LVU679
 2401 0083 E9000000 		jmp	.L264
 2401      00
 2402              	.LVL251:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2403              		.loc 1 115 7 view .LVU680
 2404              	.LBE100:
 2405              	.LBE99:
 2406              	.LBE96:
 2407              		.cfi_endproc
 2408              		.section	.text.unlikely.png_safe_error
 2409              		.cfi_startproc
 2411              	png_safe_error.cold:
 2412              	.LFSB65:
 2413              	.LBB103:
 2414              	.LBB102:
 2415              	.LBB101:
 2416              	.L264:
 2417              		.cfi_def_cfa_offset 16
 2418              	.LBE101:
 2419              	.LBE102:
 2420              	.LBE103:
 911:fltk-1.3.4-1/png/pngerror.c ****              error_message);
 912:fltk-1.3.4-1/png/pngerror.c ****       }
 913:fltk-1.3.4-1/png/pngerror.c ****    }
 914:fltk-1.3.4-1/png/pngerror.c **** 
 915:fltk-1.3.4-1/png/pngerror.c ****    /* Here on an internal programming error. */
 916:fltk-1.3.4-1/png/pngerror.c ****    abort();
 2421              		.loc 1 916 4 is_stmt 1 view -0
 2422 0000 E8000000 		call	abort@PLT
 2422      00
 2423              	.LVL252:
 2424              		.loc 1 916 4 is_stmt 0 view .LVU682
 2425              		.cfi_endproc
 2426              	.LFE65:
 2427              		.section	.text.png_safe_error
 2429              		.section	.text.unlikely.png_safe_error
 2431              	.LCOLDE8:
 2432              		.section	.text.png_safe_error
 2433              	.LHOTE8:
 2434              		.section	.text.png_safe_warning,"ax",@progbits
 2435              		.p2align 4
 2436              		.globl	png_safe_warning
 2438              	png_safe_warning:
 2439              	.LVL253:
 2440              	.LFB66:
 917:fltk-1.3.4-1/png/pngerror.c **** }
 918:fltk-1.3.4-1/png/pngerror.c **** 
 919:fltk-1.3.4-1/png/pngerror.c **** #ifdef PNG_WARNINGS_SUPPORTED
 920:fltk-1.3.4-1/png/pngerror.c **** void /* PRIVATE */ PNGCBAPI
 921:fltk-1.3.4-1/png/pngerror.c **** png_safe_warning(png_structp png_nonconst_ptr, png_const_charp warning_message)
 922:fltk-1.3.4-1/png/pngerror.c **** {
 2441              		.loc 1 922 1 is_stmt 1 view -0
 2442              		.cfi_startproc
 2443              		.loc 1 922 1 is_stmt 0 view .LVU684
 2444 0000 F30F1EFA 		endbr64
 923:fltk-1.3.4-1/png/pngerror.c ****    const png_const_structrp png_ptr = png_nonconst_ptr;
 2445              		.loc 1 923 4 is_stmt 1 view .LVU685
 2446              	.LVL254:
 924:fltk-1.3.4-1/png/pngerror.c ****    png_imagep image = png_voidcast(png_imagep, png_ptr->error_ptr);
 2447              		.loc 1 924 4 view .LVU686
 2448              		.loc 1 924 15 is_stmt 0 view .LVU687
 2449 0004 4C8B87F0 		movq	240(%rdi), %r8
 2449      000000
 2450              	.LVL255:
 925:fltk-1.3.4-1/png/pngerror.c **** 
 926:fltk-1.3.4-1/png/pngerror.c ****    /* A warning is only logged if there is no prior warning or error. */
 927:fltk-1.3.4-1/png/pngerror.c ****    if (image->warning_or_error == 0)
 2451              		.loc 1 927 4 is_stmt 1 view .LVU688
 2452              		.loc 1 927 7 is_stmt 0 view .LVU689
 2453 000b 418B4020 		movl	32(%r8), %eax
 2454 000f 85C0     		testl	%eax, %eax
 2455 0011 7405     		je	.L276
 928:fltk-1.3.4-1/png/pngerror.c ****    {
 929:fltk-1.3.4-1/png/pngerror.c ****       png_safecat(image->message, (sizeof image->message), 0, warning_message);
 930:fltk-1.3.4-1/png/pngerror.c ****       image->warning_or_error |= PNG_IMAGE_WARNING;
 931:fltk-1.3.4-1/png/pngerror.c ****    }
 932:fltk-1.3.4-1/png/pngerror.c **** }
 2456              		.loc 1 932 1 view .LVU690
 2457 0013 C3       		ret
 2458              		.p2align 4,,10
 2459 0014 0F1F4000 		.p2align 3
 2460              	.L276:
 929:fltk-1.3.4-1/png/pngerror.c ****       image->warning_or_error |= PNG_IMAGE_WARNING;
 2461              		.loc 1 929 7 is_stmt 1 view .LVU691
 2462              	.LVL256:
 2463              	.LBB104:
 2464              	.LBI104:
 112:fltk-1.3.4-1/png/pngerror.c ****    png_const_charp string)
 2465              		.loc 1 112 1 view .LVU692
 2466              	.LBB105:
 115:fltk-1.3.4-1/png/pngerror.c ****    {
 2467              		.loc 1 115 4 view .LVU693
 2468 0018 4889F1   		movq	%rsi, %rcx
 2469              	.LBE105:
 2470              	.LBE104:
 929:fltk-1.3.4-1/png/pngerror.c ****       image->warning_or_error |= PNG_IMAGE_WARNING;
 2471              		.loc 1 929 24 is_stmt 0 view .LVU694
 2472 001b 498D7824 		leaq	36(%r8), %rdi
 2473              	.LVL257:
 2474              	.LBB107:
 2475              	.LBB106:
 929:fltk-1.3.4-1/png/pngerror.c ****       image->warning_or_error |= PNG_IMAGE_WARNING;
 2476              		.loc 1 929 24 view .LVU695
 2477 001f 31D2     		xorl	%edx, %edx
 2478 0021 BE400000 		movl	$64, %esi
 2478      00
 2479              	.LVL258:
 929:fltk-1.3.4-1/png/pngerror.c ****       image->warning_or_error |= PNG_IMAGE_WARNING;
 2480              		.loc 1 929 24 view .LVU696
 2481 0026 E8000000 		call	png_safecat.part.0
 2481      00
 2482              	.LVL259:
 124:fltk-1.3.4-1/png/pngerror.c **** }
 2483              		.loc 1 124 4 is_stmt 1 view .LVU697
 124:fltk-1.3.4-1/png/pngerror.c **** }
 2484              		.loc 1 124 4 is_stmt 0 view .LVU698
 2485              	.LBE106:
 2486              	.LBE107:
 930:fltk-1.3.4-1/png/pngerror.c ****    }
 2487              		.loc 1 930 7 is_stmt 1 view .LVU699
 930:fltk-1.3.4-1/png/pngerror.c ****    }
 2488              		.loc 1 930 31 is_stmt 0 view .LVU700
 2489 002b 41834820 		orl	$1, 32(%r8)
 2489      01
 2490              		.loc 1 932 1 view .LVU701
 2491 0030 C3       		ret
 2492              		.cfi_endproc
 2493              	.LFE66:
 2495              		.section	.text.png_safe_execute,"ax",@progbits
 2496              		.p2align 4
 2497              		.globl	png_safe_execute
 2499              	png_safe_execute:
 2500              	.LVL260:
 2501              	.LFB67:
 933:fltk-1.3.4-1/png/pngerror.c **** #endif
 934:fltk-1.3.4-1/png/pngerror.c **** 
 935:fltk-1.3.4-1/png/pngerror.c **** int /* PRIVATE */
 936:fltk-1.3.4-1/png/pngerror.c **** png_safe_execute(png_imagep image_in, int (*function)(png_voidp), png_voidp arg)
 937:fltk-1.3.4-1/png/pngerror.c **** {
 2502              		.loc 1 937 1 is_stmt 1 view -0
 2503              		.cfi_startproc
 2504              		.loc 1 937 1 is_stmt 0 view .LVU703
 2505 0000 F30F1EFA 		endbr64
 2506 0004 4881EC08 		subq	$264, %rsp
 2506      010000
 2507              		.cfi_def_cfa_offset 272
 2508              		.loc 1 937 1 view .LVU704
 2509 000b 48893424 		movq	%rsi, (%rsp)
 2510 000f 48895424 		movq	%rdx, 8(%rsp)
 2510      08
 2511 0014 64488B0C 		movq	%fs:40, %rcx
 2511      25280000 
 2511      00
 2512 001d 48898C24 		movq	%rcx, 248(%rsp)
 2512      F8000000 
 2513 0025 31C9     		xorl	%ecx, %ecx
 938:fltk-1.3.4-1/png/pngerror.c ****    volatile png_imagep image = image_in;
 2514              		.loc 1 938 4 is_stmt 1 view .LVU705
 2515              		.loc 1 938 24 is_stmt 0 view .LVU706
 2516 0027 48897C24 		movq	%rdi, 32(%rsp)
 2516      20
 939:fltk-1.3.4-1/png/pngerror.c ****    volatile int result;
 2517              		.loc 1 939 4 is_stmt 1 view .LVU707
 940:fltk-1.3.4-1/png/pngerror.c ****    volatile png_voidp saved_error_buf;
 2518              		.loc 1 940 4 view .LVU708
 941:fltk-1.3.4-1/png/pngerror.c ****    jmp_buf safe_jmpbuf;
 2519              		.loc 1 941 4 view .LVU709
 942:fltk-1.3.4-1/png/pngerror.c **** 
 943:fltk-1.3.4-1/png/pngerror.c ****    /* Safely execute function(arg) with png_error returning to this function. */
 944:fltk-1.3.4-1/png/pngerror.c ****    saved_error_buf = image->opaque->error_buf;
 2520              		.loc 1 944 4 view .LVU710
 945:fltk-1.3.4-1/png/pngerror.c ****    result = setjmp(safe_jmpbuf) == 0;
 2521              		.loc 1 945 13 is_stmt 0 view .LVU711
 2522 002c 488D7C24 		leaq	48(%rsp), %rdi
 2522      30
 2523              	.LVL261:
 944:fltk-1.3.4-1/png/pngerror.c ****    result = setjmp(safe_jmpbuf) == 0;
 2524              		.loc 1 944 27 view .LVU712
 2525 0031 488B4424 		movq	32(%rsp), %rax
 2525      20
 944:fltk-1.3.4-1/png/pngerror.c ****    result = setjmp(safe_jmpbuf) == 0;
 2526              		.loc 1 944 35 view .LVU713
 2527 0036 488B00   		movq	(%rax), %rax
 2528 0039 488B4010 		movq	16(%rax), %rax
 944:fltk-1.3.4-1/png/pngerror.c ****    result = setjmp(safe_jmpbuf) == 0;
 2529              		.loc 1 944 20 view .LVU714
 2530 003d 48894424 		movq	%rax, 40(%rsp)
 2530      28
 2531              	.LVL262:
 2532              		.loc 1 945 4 is_stmt 1 view .LVU715
 2533              		.loc 1 945 13 is_stmt 0 view .LVU716
 2534 0042 E8000000 		call	_setjmp@PLT
 2534      00
 2535              	.LVL263:
 2536 0047 F30F1EFA 		endbr64
 2537              	.LVL264:
 2538              		.loc 1 945 33 view .LVU717
 2539 004b 85C0     		testl	%eax, %eax
 2540 004d 0F94C0   		sete	%al
 2541 0050 0FB6C0   		movzbl	%al, %eax
 2542              		.loc 1 945 11 view .LVU718
 2543 0053 8944241C 		movl	%eax, 28(%rsp)
 946:fltk-1.3.4-1/png/pngerror.c **** 
 947:fltk-1.3.4-1/png/pngerror.c ****    if (result != 0)
 2544              		.loc 1 947 4 is_stmt 1 view .LVU719
 2545              		.loc 1 947 15 is_stmt 0 view .LVU720
 2546 0057 8B44241C 		movl	28(%rsp), %eax
 2547              		.loc 1 947 7 view .LVU721
 2548 005b 85C0     		testl	%eax, %eax
 2549 005d 7420     		je	.L279
 948:fltk-1.3.4-1/png/pngerror.c ****    {
 949:fltk-1.3.4-1/png/pngerror.c **** 
 950:fltk-1.3.4-1/png/pngerror.c ****       image->opaque->error_buf = safe_jmpbuf;
 2550              		.loc 1 950 7 is_stmt 1 view .LVU722
 2551              		.loc 1 950 12 is_stmt 0 view .LVU723
 2552 005f 488B4424 		movq	32(%rsp), %rax
 2552      20
 2553              		.loc 1 950 32 view .LVU724
 2554 0064 488D5424 		leaq	48(%rsp), %rdx
 2554      30
 951:fltk-1.3.4-1/png/pngerror.c ****       result = function(arg);
 2555              		.loc 1 951 16 view .LVU725
 2556 0069 488B7C24 		movq	8(%rsp), %rdi
 2556      08
 950:fltk-1.3.4-1/png/pngerror.c ****       result = function(arg);
 2557              		.loc 1 950 12 view .LVU726
 2558 006e 488B00   		movq	(%rax), %rax
 950:fltk-1.3.4-1/png/pngerror.c ****       result = function(arg);
 2559              		.loc 1 950 32 view .LVU727
 2560 0071 48895010 		movq	%rdx, 16(%rax)
 2561              		.loc 1 951 7 is_stmt 1 view .LVU728
 2562              		.loc 1 951 16 is_stmt 0 view .LVU729
 2563 0075 488B0424 		movq	(%rsp), %rax
 2564 0079 FFD0     		call	*%rax
 2565              	.LVL265:
 2566              		.loc 1 951 14 view .LVU730
 2567 007b 8944241C 		movl	%eax, 28(%rsp)
 2568              	.L279:
 952:fltk-1.3.4-1/png/pngerror.c ****    }
 953:fltk-1.3.4-1/png/pngerror.c **** 
 954:fltk-1.3.4-1/png/pngerror.c ****    image->opaque->error_buf = saved_error_buf;
 2569              		.loc 1 954 4 is_stmt 1 view .LVU731
 2570              		.loc 1 954 9 is_stmt 0 view .LVU732
 2571 007f 488B4424 		movq	32(%rsp), %rax
 2571      20
 2572              		.loc 1 954 29 view .LVU733
 2573 0084 488B5424 		movq	40(%rsp), %rdx
 2573      28
 2574              		.loc 1 954 9 view .LVU734
 2575 0089 488B00   		movq	(%rax), %rax
 2576              		.loc 1 954 29 view .LVU735
 2577 008c 48895010 		movq	%rdx, 16(%rax)
 955:fltk-1.3.4-1/png/pngerror.c **** 
 956:fltk-1.3.4-1/png/pngerror.c ****    /* And do the cleanup prior to any failure return. */
 957:fltk-1.3.4-1/png/pngerror.c ****    if (result == 0)
 2578              		.loc 1 957 4 is_stmt 1 view .LVU736
 2579              		.loc 1 957 15 is_stmt 0 view .LVU737
 2580 0090 8B44241C 		movl	28(%rsp), %eax
 2581              		.loc 1 957 7 view .LVU738
 2582 0094 85C0     		testl	%eax, %eax
 2583 0096 7428     		je	.L280
 2584              	.L281:
 958:fltk-1.3.4-1/png/pngerror.c ****       png_image_free(image);
 959:fltk-1.3.4-1/png/pngerror.c **** 
 960:fltk-1.3.4-1/png/pngerror.c ****    return result;
 2585              		.loc 1 960 4 is_stmt 1 view .LVU739
 2586              		.loc 1 960 11 is_stmt 0 view .LVU740
 2587 0098 8B44241C 		movl	28(%rsp), %eax
 961:fltk-1.3.4-1/png/pngerror.c **** }
 2588              		.loc 1 961 1 view .LVU741
 2589 009c 488B8C24 		movq	248(%rsp), %rcx
 2589      F8000000 
 2590 00a4 6448330C 		xorq	%fs:40, %rcx
 2590      25280000 
 2590      00
 2591 00ad 751D     		jne	.L285
 2592 00af 4881C408 		addq	$264, %rsp
 2592      010000
 2593              		.cfi_remember_state
 2594              		.cfi_def_cfa_offset 8
 2595              	.LVL266:
 2596              		.loc 1 961 1 view .LVU742
 2597 00b6 C3       		ret
 2598              	.LVL267:
 2599 00b7 660F1F84 		.p2align 4,,10
 2599      00000000 
 2599      00
 2600              		.p2align 3
 2601              	.L280:
 2602              		.cfi_restore_state
 958:fltk-1.3.4-1/png/pngerror.c ****       png_image_free(image);
 2603              		.loc 1 958 7 is_stmt 1 view .LVU743
 2604 00c0 488B7C24 		movq	32(%rsp), %rdi
 2604      20
 2605 00c5 E8000000 		call	png_image_free@PLT
 2605      00
 2606              	.LVL268:
 2607 00ca EBCC     		jmp	.L281
 2608              	.L285:
 2609              		.loc 1 961 1 is_stmt 0 view .LVU744
 2610 00cc E8000000 		call	__stack_chk_fail@PLT
 2610      00
 2611              	.LVL269:
 2612              		.cfi_endproc
 2613              	.LFE67:
 2615              		.section	.rodata.valid_parameters.6876,"a"
 2616              		.align 8
 2619              	valid_parameters.6876:
 2620 0000 31323334 		.string	"123456789"
 2620      35363738 
 2620      3900
 2621              		.section	.rodata.digits.6828,"a"
 2622              		.align 16
 2625              	digits.6828:
 2626 0000 30313233 		.string	"0123456789ABCDEF"
 2626      34353637 
 2626      38394142 
 2626      43444546 
 2626      00
 2627              		.section	.rodata.png_digit,"a"
 2628              		.align 16
 2631              	png_digit:
 2632 0000 30313233 		.ascii	"0123456789ABCDEF"
 2632      34353637 
 2632      38394142 
 2632      43444546 
 2633              		.section	.rodata.cst16,"aM",@progbits,16
 2634              		.align 16
 2635              	.LC4:
 2636 0000 66697865 		.quad	8029953751172802918
 2636      6420706F 
 2637 0008 696E7420 		.quad	8243124912629509737
 2637      6F766572 
 2638              		.text
 2639              	.Letext0:
 2640              		.section	.text.unlikely.png_longjmp
 2641              	.Letext_cold0:
 2642              		.file 4 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 2643              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types.h"
 2644              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 2645              		.file 7 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 2646              		.file 8 "/usr/include/stdio.h"
 2647              		.file 9 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 2648              		.file 10 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 2649              		.file 11 "/usr/include/setjmp.h"
 2650              		.file 12 "/usr/include/time.h"
 2651              		.file 13 "fltk-1.3.4-1/png/pngconf.h"
 2652              		.file 14 "fltk-1.3.4-1/png/png.h"
 2653              		.file 15 "fltk-1.3.4-1/png/pngstruct.h"
 2654              		.file 16 "fltk-1.3.4-1/png/pnginfo.h"
 2655              		.file 17 "fltk-1.3.4-1/png/pngpriv.h"
 2656              		.file 18 "/usr/include/zconf.h"
 2657              		.file 19 "/usr/include/unistd.h"
 2658              		.file 20 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 2659              		.file 21 "/usr/include/zlib.h"
 2660              		.file 22 "/usr/include/x86_64-linux-gnu/bits/setjmp2.h"
 2661              		.file 23 "/usr/include/stdlib.h"
 2662              		.file 24 "<built-in>"
 27945              		.section	.note.gnu.property,"a"
 27946              		.align 8
 27947 0000 04000000 		.long	 1f - 0f
 27948 0004 10000000 		.long	 4f - 1f
 27949 0008 05000000 		.long	 5
 27950              	0:
 27951 000c 474E5500 		.string	 "GNU"
 27952              	1:
 27953              		.align 8
 27954 0010 020000C0 		.long	 0xc0000002
 27955 0014 04000000 		.long	 3f - 2f
 27956              	2:
 27957 0018 03000000 		.long	 0x3
 27958              	3:
 27959 001c 00000000 		.align 8
 27960              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngerror.c
     /tmp/cckJJCTv.s:7      .text.png_format_buffer.isra.0:0000000000000000 png_format_buffer.isra.0
     /tmp/cckJJCTv.s:2631   .rodata.png_digit:0000000000000000 png_digit
     /tmp/cckJJCTv.s:232    .text.png_default_warning.isra.0:0000000000000000 png_default_warning.isra.0
     /tmp/cckJJCTv.s:293    .text.png_safecat.part.0:0000000000000000 png_safecat.part.0
     /tmp/cckJJCTv.s:356    .text.png_warning_parameter.part.0:0000000000000000 png_warning_parameter.part.0
     /tmp/cckJJCTv.s:401    .text.png_safecat:0000000000000000 png_safecat
     /tmp/cckJJCTv.s:430    .text.png_format_number:0000000000000000 png_format_number
     /tmp/cckJJCTv.s:2625   .rodata.digits.6828:0000000000000000 digits.6828
     /tmp/cckJJCTv.s:762    .text.png_warning:0000000000000000 png_warning
     /tmp/cckJJCTv.s:844    .text.png_warning_parameter:0000000000000000 png_warning_parameter
     /tmp/cckJJCTv.s:871    .text.png_warning_parameter_unsigned:0000000000000000 png_warning_parameter_unsigned
     /tmp/cckJJCTv.s:954    .text.png_warning_parameter_signed:0000000000000000 png_warning_parameter_signed
     /tmp/cckJJCTv.s:1090   .text.png_formatted_warning:0000000000000000 png_formatted_warning
     /tmp/cckJJCTv.s:2619   .rodata.valid_parameters.6876:0000000000000000 valid_parameters.6876
     /tmp/cckJJCTv.s:1299   .text.png_chunk_warning:0000000000000000 png_chunk_warning
     /tmp/cckJJCTv.s:1382   .text.png_free_jmpbuf:0000000000000000 png_free_jmpbuf
     /tmp/cckJJCTv.s:1505   .text.png_longjmp:0000000000000000 png_longjmp
     /tmp/cckJJCTv.s:1543   .text.unlikely.png_longjmp:0000000000000000 png_longjmp.cold
     /tmp/cckJJCTv.s:1567   .text.png_default_error:0000000000000000 png_default_error
     /tmp/cckJJCTv.s:1635   .text.png_error:0000000000000000 png_error
     /tmp/cckJJCTv.s:1679   .text.png_app_warning:0000000000000000 png_app_warning
     /tmp/cckJJCTv.s:1709   .text.png_app_error:0000000000000000 png_app_error
     /tmp/cckJJCTv.s:1739   .text.png_fixed_error:0000000000000000 png_fixed_error
     /tmp/cckJJCTv.s:1851   .text.png_set_longjmp_fn:0000000000000000 png_set_longjmp_fn
     /tmp/cckJJCTv.s:2032   .text.png_chunk_error:0000000000000000 png_chunk_error
     /tmp/cckJJCTv.s:2091   .text.png_chunk_benign_error:0000000000000000 png_chunk_benign_error
     /tmp/cckJJCTv.s:2121   .text.png_chunk_report:0000000000000000 png_chunk_report
     /tmp/cckJJCTv.s:2170   .text.png_benign_error:0000000000000000 png_benign_error
     /tmp/cckJJCTv.s:2234   .text.png_set_error_fn:0000000000000000 png_set_error_fn
     /tmp/cckJJCTv.s:2264   .text.png_get_error_ptr:0000000000000000 png_get_error_ptr
     /tmp/cckJJCTv.s:2299   .text.png_safe_error:0000000000000000 png_safe_error
     /tmp/cckJJCTv.s:2411   .text.unlikely.png_safe_error:0000000000000000 png_safe_error.cold
     /tmp/cckJJCTv.s:2438   .text.png_safe_warning:0000000000000000 png_safe_warning
     /tmp/cckJJCTv.s:2499   .text.png_safe_execute:0000000000000000 png_safe_execute
     /tmp/cckJJCTv.s:227    .rodata.png_default_warning.isra.0.str1.1:0000000000000000 .LC0
     /tmp/cckJJCTv.s:1560   .rodata.png_default_error.str1.1:0000000000000000 .LC2
     /tmp/cckJJCTv.s:1562   .rodata.png_default_error.str1.1:000000000000000a .LC3
     /tmp/cckJJCTv.s:2635   .rodata.cst16:0000000000000000 .LC4
     /tmp/cckJJCTv.s:1845   .rodata.png_set_longjmp_fn.str1.8:0000000000000020 .LC6
     /tmp/cckJJCTv.s:1842   .rodata.png_set_longjmp_fn.str1.8:0000000000000000 .LC5
     /tmp/cckJJCTv.s:2290   .rodata.png_safe_error.str1.1:0000000000000000 .LC7
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8

UNDEFINED SYMBOLS
stderr
_GLOBAL_OFFSET_TABLE_
__fprintf_chk
fputc
__stack_chk_fail
_setjmp
__longjmp_chk
png_free
abort
png_malloc_warn
png_image_free
