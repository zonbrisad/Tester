   1              		.file	"pngmem.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.png_free.part.0,"ax",@progbits
   5              		.p2align 4
   7              	png_free.part.0:
   8              	.LVL0:
   9              	.LFB54:
  10              		.file 1 "fltk-1.3.4-1/png/pngmem.c"
   1:fltk-1.3.4-1/png/pngmem.c **** 
   2:fltk-1.3.4-1/png/pngmem.c **** /* pngmem.c - stub functions for memory allocation
   3:fltk-1.3.4-1/png/pngmem.c ****  *
   4:fltk-1.3.4-1/png/pngmem.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngmem.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngmem.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngmem.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngmem.c ****  *
   9:fltk-1.3.4-1/png/pngmem.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngmem.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngmem.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngmem.c ****  *
  13:fltk-1.3.4-1/png/pngmem.c ****  * This file provides a location for all memory allocation.  Users who
  14:fltk-1.3.4-1/png/pngmem.c ****  * need special memory handling are expected to supply replacement
  15:fltk-1.3.4-1/png/pngmem.c ****  * functions for png_malloc() and png_free(), and to use
  16:fltk-1.3.4-1/png/pngmem.c ****  * png_create_read_struct_2() and png_create_write_struct_2() to
  17:fltk-1.3.4-1/png/pngmem.c ****  * identify the replacement functions.
  18:fltk-1.3.4-1/png/pngmem.c ****  */
  19:fltk-1.3.4-1/png/pngmem.c **** 
  20:fltk-1.3.4-1/png/pngmem.c **** #include "pngpriv.h"
  21:fltk-1.3.4-1/png/pngmem.c **** 
  22:fltk-1.3.4-1/png/pngmem.c **** #if defined(PNG_READ_SUPPORTED) || defined(PNG_WRITE_SUPPORTED)
  23:fltk-1.3.4-1/png/pngmem.c **** /* Free a png_struct */
  24:fltk-1.3.4-1/png/pngmem.c **** void /* PRIVATE */
  25:fltk-1.3.4-1/png/pngmem.c **** png_destroy_png_struct(png_structrp png_ptr)
  26:fltk-1.3.4-1/png/pngmem.c **** {
  27:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
  28:fltk-1.3.4-1/png/pngmem.c ****    {
  29:fltk-1.3.4-1/png/pngmem.c ****       /* png_free might call png_error and may certainly call
  30:fltk-1.3.4-1/png/pngmem.c ****        * png_get_mem_ptr, so fake a temporary png_struct to support this.
  31:fltk-1.3.4-1/png/pngmem.c ****        */
  32:fltk-1.3.4-1/png/pngmem.c ****       png_struct dummy_struct = *png_ptr;
  33:fltk-1.3.4-1/png/pngmem.c ****       memset(png_ptr, 0, (sizeof *png_ptr));
  34:fltk-1.3.4-1/png/pngmem.c ****       png_free(&dummy_struct, png_ptr);
  35:fltk-1.3.4-1/png/pngmem.c **** 
  36:fltk-1.3.4-1/png/pngmem.c **** #     ifdef PNG_SETJMP_SUPPORTED
  37:fltk-1.3.4-1/png/pngmem.c ****          /* We may have a jmp_buf left to deallocate. */
  38:fltk-1.3.4-1/png/pngmem.c ****          png_free_jmpbuf(&dummy_struct);
  39:fltk-1.3.4-1/png/pngmem.c **** #     endif
  40:fltk-1.3.4-1/png/pngmem.c ****    }
  41:fltk-1.3.4-1/png/pngmem.c **** }
  42:fltk-1.3.4-1/png/pngmem.c **** 
  43:fltk-1.3.4-1/png/pngmem.c **** /* Allocate memory.  For reasonable files, size should never exceed
  44:fltk-1.3.4-1/png/pngmem.c ****  * 64K.  However, zlib may allocate more then 64K if you don't tell
  45:fltk-1.3.4-1/png/pngmem.c ****  * it not to.  See zconf.h and png.h for more information.  zlib does
  46:fltk-1.3.4-1/png/pngmem.c ****  * need to allocate exactly 64K, so whatever you call here must
  47:fltk-1.3.4-1/png/pngmem.c ****  * have the ability to do that.
  48:fltk-1.3.4-1/png/pngmem.c ****  */
  49:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(png_voidp,PNGAPI
  50:fltk-1.3.4-1/png/pngmem.c **** png_calloc,(png_const_structrp png_ptr, png_alloc_size_t size),PNG_ALLOCATED)
  51:fltk-1.3.4-1/png/pngmem.c **** {
  52:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
  53:fltk-1.3.4-1/png/pngmem.c **** 
  54:fltk-1.3.4-1/png/pngmem.c ****    ret = png_malloc(png_ptr, size);
  55:fltk-1.3.4-1/png/pngmem.c **** 
  56:fltk-1.3.4-1/png/pngmem.c ****    if (ret != NULL)
  57:fltk-1.3.4-1/png/pngmem.c ****       memset(ret, 0, size);
  58:fltk-1.3.4-1/png/pngmem.c **** 
  59:fltk-1.3.4-1/png/pngmem.c ****    return ret;
  60:fltk-1.3.4-1/png/pngmem.c **** }
  61:fltk-1.3.4-1/png/pngmem.c **** 
  62:fltk-1.3.4-1/png/pngmem.c **** /* png_malloc_base, an internal function added at libpng 1.6.0, does the work of
  63:fltk-1.3.4-1/png/pngmem.c ****  * allocating memory, taking into account limits and PNG_USER_MEM_SUPPORTED.
  64:fltk-1.3.4-1/png/pngmem.c ****  * Checking and error handling must happen outside this routine; it returns NULL
  65:fltk-1.3.4-1/png/pngmem.c ****  * if the allocation cannot be done (for any reason.)
  66:fltk-1.3.4-1/png/pngmem.c ****  */
  67:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(png_voidp /* PRIVATE */,
  68:fltk-1.3.4-1/png/pngmem.c **** png_malloc_base,(png_const_structrp png_ptr, png_alloc_size_t size),
  69:fltk-1.3.4-1/png/pngmem.c ****    PNG_ALLOCATED)
  70:fltk-1.3.4-1/png/pngmem.c **** {
  71:fltk-1.3.4-1/png/pngmem.c ****    /* Moved to png_malloc_base from png_malloc_default in 1.6.0; the DOS
  72:fltk-1.3.4-1/png/pngmem.c ****     * allocators have also been removed in 1.6.0, so any 16-bit system now has
  73:fltk-1.3.4-1/png/pngmem.c ****     * to implement a user memory handler.  This checks to be sure it isn't
  74:fltk-1.3.4-1/png/pngmem.c ****     * called with big numbers.
  75:fltk-1.3.4-1/png/pngmem.c ****     */
  76:fltk-1.3.4-1/png/pngmem.c **** #ifndef PNG_USER_MEM_SUPPORTED
  77:fltk-1.3.4-1/png/pngmem.c ****    PNG_UNUSED(png_ptr)
  78:fltk-1.3.4-1/png/pngmem.c **** #endif
  79:fltk-1.3.4-1/png/pngmem.c **** 
  80:fltk-1.3.4-1/png/pngmem.c ****    if (size > 0 && size <= PNG_SIZE_MAX
  81:fltk-1.3.4-1/png/pngmem.c **** #     ifdef PNG_MAX_MALLOC_64K
  82:fltk-1.3.4-1/png/pngmem.c ****          && size <= 65536U
  83:fltk-1.3.4-1/png/pngmem.c **** #     endif
  84:fltk-1.3.4-1/png/pngmem.c ****       )
  85:fltk-1.3.4-1/png/pngmem.c ****    {
  86:fltk-1.3.4-1/png/pngmem.c **** #ifdef PNG_USER_MEM_SUPPORTED
  87:fltk-1.3.4-1/png/pngmem.c ****       if (png_ptr != NULL && png_ptr->malloc_fn != NULL)
  88:fltk-1.3.4-1/png/pngmem.c ****          return png_ptr->malloc_fn(png_constcast(png_structrp,png_ptr), size);
  89:fltk-1.3.4-1/png/pngmem.c **** 
  90:fltk-1.3.4-1/png/pngmem.c ****       else
  91:fltk-1.3.4-1/png/pngmem.c **** #endif
  92:fltk-1.3.4-1/png/pngmem.c ****          return malloc((size_t)size); /* checked for truncation above */
  93:fltk-1.3.4-1/png/pngmem.c ****    }
  94:fltk-1.3.4-1/png/pngmem.c **** 
  95:fltk-1.3.4-1/png/pngmem.c ****    else
  96:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
  97:fltk-1.3.4-1/png/pngmem.c **** }
  98:fltk-1.3.4-1/png/pngmem.c **** 
  99:fltk-1.3.4-1/png/pngmem.c **** #if defined(PNG_TEXT_SUPPORTED) || defined(PNG_sPLT_SUPPORTED) ||\
 100:fltk-1.3.4-1/png/pngmem.c ****    defined(PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED)
 101:fltk-1.3.4-1/png/pngmem.c **** /* This is really here only to work round a spurious warning in GCC 4.6 and 4.7
 102:fltk-1.3.4-1/png/pngmem.c ****  * that arises because of the checks in png_realloc_array that are repeated in
 103:fltk-1.3.4-1/png/pngmem.c ****  * png_malloc_array.
 104:fltk-1.3.4-1/png/pngmem.c ****  */
 105:fltk-1.3.4-1/png/pngmem.c **** static png_voidp
 106:fltk-1.3.4-1/png/pngmem.c **** png_malloc_array_checked(png_const_structrp png_ptr, int nelements,
 107:fltk-1.3.4-1/png/pngmem.c ****    size_t element_size)
 108:fltk-1.3.4-1/png/pngmem.c **** {
 109:fltk-1.3.4-1/png/pngmem.c ****    png_alloc_size_t req = nelements; /* known to be > 0 */
 110:fltk-1.3.4-1/png/pngmem.c **** 
 111:fltk-1.3.4-1/png/pngmem.c ****    if (req <= PNG_SIZE_MAX/element_size)
 112:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 113:fltk-1.3.4-1/png/pngmem.c **** 
 114:fltk-1.3.4-1/png/pngmem.c ****    /* The failure case when the request is too large */
 115:fltk-1.3.4-1/png/pngmem.c ****    return NULL;
 116:fltk-1.3.4-1/png/pngmem.c **** }
 117:fltk-1.3.4-1/png/pngmem.c **** 
 118:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(png_voidp /* PRIVATE */,
 119:fltk-1.3.4-1/png/pngmem.c **** png_malloc_array,(png_const_structrp png_ptr, int nelements,
 120:fltk-1.3.4-1/png/pngmem.c ****    size_t element_size),PNG_ALLOCATED)
 121:fltk-1.3.4-1/png/pngmem.c **** {
 122:fltk-1.3.4-1/png/pngmem.c ****    if (nelements <= 0 || element_size == 0)
 123:fltk-1.3.4-1/png/pngmem.c ****       png_error(png_ptr, "internal error: array alloc");
 124:fltk-1.3.4-1/png/pngmem.c **** 
 125:fltk-1.3.4-1/png/pngmem.c ****    return png_malloc_array_checked(png_ptr, nelements, element_size);
 126:fltk-1.3.4-1/png/pngmem.c **** }
 127:fltk-1.3.4-1/png/pngmem.c **** 
 128:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(png_voidp /* PRIVATE */,
 129:fltk-1.3.4-1/png/pngmem.c **** png_realloc_array,(png_const_structrp png_ptr, png_const_voidp old_array,
 130:fltk-1.3.4-1/png/pngmem.c ****    int old_elements, int add_elements, size_t element_size),PNG_ALLOCATED)
 131:fltk-1.3.4-1/png/pngmem.c **** {
 132:fltk-1.3.4-1/png/pngmem.c ****    /* These are internal errors: */
 133:fltk-1.3.4-1/png/pngmem.c ****    if (add_elements <= 0 || element_size == 0 || old_elements < 0 ||
 134:fltk-1.3.4-1/png/pngmem.c ****       (old_array == NULL && old_elements > 0))
 135:fltk-1.3.4-1/png/pngmem.c ****       png_error(png_ptr, "internal error: array realloc");
 136:fltk-1.3.4-1/png/pngmem.c **** 
 137:fltk-1.3.4-1/png/pngmem.c ****    /* Check for overflow on the elements count (so the caller does not have to
 138:fltk-1.3.4-1/png/pngmem.c ****     * check.)
 139:fltk-1.3.4-1/png/pngmem.c ****     */
 140:fltk-1.3.4-1/png/pngmem.c ****    if (add_elements <= INT_MAX - old_elements)
 141:fltk-1.3.4-1/png/pngmem.c ****    {
 142:fltk-1.3.4-1/png/pngmem.c ****       png_voidp new_array = png_malloc_array_checked(png_ptr,
 143:fltk-1.3.4-1/png/pngmem.c ****          old_elements+add_elements, element_size);
 144:fltk-1.3.4-1/png/pngmem.c **** 
 145:fltk-1.3.4-1/png/pngmem.c ****       if (new_array != NULL)
 146:fltk-1.3.4-1/png/pngmem.c ****       {
 147:fltk-1.3.4-1/png/pngmem.c ****          /* Because png_malloc_array worked the size calculations below cannot
 148:fltk-1.3.4-1/png/pngmem.c ****           * overflow.
 149:fltk-1.3.4-1/png/pngmem.c ****           */
 150:fltk-1.3.4-1/png/pngmem.c ****          if (old_elements > 0)
 151:fltk-1.3.4-1/png/pngmem.c ****             memcpy(new_array, old_array, element_size*(unsigned)old_elements);
 152:fltk-1.3.4-1/png/pngmem.c **** 
 153:fltk-1.3.4-1/png/pngmem.c ****          memset((char*)new_array + element_size*(unsigned)old_elements, 0,
 154:fltk-1.3.4-1/png/pngmem.c ****             element_size*(unsigned)add_elements);
 155:fltk-1.3.4-1/png/pngmem.c **** 
 156:fltk-1.3.4-1/png/pngmem.c ****          return new_array;
 157:fltk-1.3.4-1/png/pngmem.c ****       }
 158:fltk-1.3.4-1/png/pngmem.c ****    }
 159:fltk-1.3.4-1/png/pngmem.c **** 
 160:fltk-1.3.4-1/png/pngmem.c ****    return NULL; /* error */
 161:fltk-1.3.4-1/png/pngmem.c **** }
 162:fltk-1.3.4-1/png/pngmem.c **** #endif /* TEXT || sPLT || STORE_UNKNOWN_CHUNKS */
 163:fltk-1.3.4-1/png/pngmem.c **** 
 164:fltk-1.3.4-1/png/pngmem.c **** /* Various functions that have different error handling are derived from this.
 165:fltk-1.3.4-1/png/pngmem.c ****  * png_malloc always exists, but if PNG_USER_MEM_SUPPORTED is defined a separate
 166:fltk-1.3.4-1/png/pngmem.c ****  * function png_malloc_default is also provided.
 167:fltk-1.3.4-1/png/pngmem.c ****  */
 168:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(png_voidp,PNGAPI
 169:fltk-1.3.4-1/png/pngmem.c **** png_malloc,(png_const_structrp png_ptr, png_alloc_size_t size),PNG_ALLOCATED)
 170:fltk-1.3.4-1/png/pngmem.c **** {
 171:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 172:fltk-1.3.4-1/png/pngmem.c **** 
 173:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL)
 174:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 175:fltk-1.3.4-1/png/pngmem.c **** 
 176:fltk-1.3.4-1/png/pngmem.c ****    ret = png_malloc_base(png_ptr, size);
 177:fltk-1.3.4-1/png/pngmem.c **** 
 178:fltk-1.3.4-1/png/pngmem.c ****    if (ret == NULL)
 179:fltk-1.3.4-1/png/pngmem.c ****        png_error(png_ptr, "Out of memory"); /* 'm' means png_malloc */
 180:fltk-1.3.4-1/png/pngmem.c **** 
 181:fltk-1.3.4-1/png/pngmem.c ****    return ret;
 182:fltk-1.3.4-1/png/pngmem.c **** }
 183:fltk-1.3.4-1/png/pngmem.c **** 
 184:fltk-1.3.4-1/png/pngmem.c **** #ifdef PNG_USER_MEM_SUPPORTED
 185:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(png_voidp,PNGAPI
 186:fltk-1.3.4-1/png/pngmem.c **** png_malloc_default,(png_const_structrp png_ptr, png_alloc_size_t size),
 187:fltk-1.3.4-1/png/pngmem.c ****    PNG_ALLOCATED PNG_DEPRECATED)
 188:fltk-1.3.4-1/png/pngmem.c **** {
 189:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 190:fltk-1.3.4-1/png/pngmem.c **** 
 191:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL)
 192:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 193:fltk-1.3.4-1/png/pngmem.c **** 
 194:fltk-1.3.4-1/png/pngmem.c ****    /* Passing 'NULL' here bypasses the application provided memory handler. */
 195:fltk-1.3.4-1/png/pngmem.c ****    ret = png_malloc_base(NULL/*use malloc*/, size);
 196:fltk-1.3.4-1/png/pngmem.c **** 
 197:fltk-1.3.4-1/png/pngmem.c ****    if (ret == NULL)
 198:fltk-1.3.4-1/png/pngmem.c ****       png_error(png_ptr, "Out of Memory"); /* 'M' means png_malloc_default */
 199:fltk-1.3.4-1/png/pngmem.c **** 
 200:fltk-1.3.4-1/png/pngmem.c ****    return ret;
 201:fltk-1.3.4-1/png/pngmem.c **** }
 202:fltk-1.3.4-1/png/pngmem.c **** #endif /* USER_MEM */
 203:fltk-1.3.4-1/png/pngmem.c **** 
 204:fltk-1.3.4-1/png/pngmem.c **** /* This function was added at libpng version 1.2.3.  The png_malloc_warn()
 205:fltk-1.3.4-1/png/pngmem.c ****  * function will issue a png_warning and return NULL instead of issuing a
 206:fltk-1.3.4-1/png/pngmem.c ****  * png_error, if it fails to allocate the requested memory.
 207:fltk-1.3.4-1/png/pngmem.c ****  */
 208:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(png_voidp,PNGAPI
 209:fltk-1.3.4-1/png/pngmem.c **** png_malloc_warn,(png_const_structrp png_ptr, png_alloc_size_t size),
 210:fltk-1.3.4-1/png/pngmem.c ****    PNG_ALLOCATED)
 211:fltk-1.3.4-1/png/pngmem.c **** {
 212:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
 213:fltk-1.3.4-1/png/pngmem.c ****    {
 214:fltk-1.3.4-1/png/pngmem.c ****       png_voidp ret = png_malloc_base(png_ptr, size);
 215:fltk-1.3.4-1/png/pngmem.c **** 
 216:fltk-1.3.4-1/png/pngmem.c ****       if (ret != NULL)
 217:fltk-1.3.4-1/png/pngmem.c ****          return ret;
 218:fltk-1.3.4-1/png/pngmem.c **** 
 219:fltk-1.3.4-1/png/pngmem.c ****       png_warning(png_ptr, "Out of memory");
 220:fltk-1.3.4-1/png/pngmem.c ****    }
 221:fltk-1.3.4-1/png/pngmem.c **** 
 222:fltk-1.3.4-1/png/pngmem.c ****    return NULL;
 223:fltk-1.3.4-1/png/pngmem.c **** }
 224:fltk-1.3.4-1/png/pngmem.c **** 
 225:fltk-1.3.4-1/png/pngmem.c **** /* Free a pointer allocated by png_malloc().  If ptr is NULL, return
 226:fltk-1.3.4-1/png/pngmem.c ****  * without taking any action.
 227:fltk-1.3.4-1/png/pngmem.c ****  */
 228:fltk-1.3.4-1/png/pngmem.c **** void PNGAPI
 229:fltk-1.3.4-1/png/pngmem.c **** png_free(png_const_structrp png_ptr, png_voidp ptr)
  11              		.loc 1 229 1 view -0
  12              		.cfi_startproc
 230:fltk-1.3.4-1/png/pngmem.c **** {
 231:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL || ptr == NULL)
 232:fltk-1.3.4-1/png/pngmem.c ****       return;
 233:fltk-1.3.4-1/png/pngmem.c **** 
 234:fltk-1.3.4-1/png/pngmem.c **** #ifdef PNG_USER_MEM_SUPPORTED
 235:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr->free_fn != NULL)
  13              		.loc 1 235 4 view .LVU1
  14              		.loc 1 235 15 is_stmt 0 view .LVU2
  15 0000 488B8730 		movq	1072(%rdi), %rax
  15      040000
  16              		.loc 1 235 7 view .LVU3
  17 0007 4885C0   		testq	%rax, %rax
  18 000a 7404     		je	.L2
 236:fltk-1.3.4-1/png/pngmem.c ****       png_ptr->free_fn(png_constcast(png_structrp,png_ptr), ptr);
  19              		.loc 1 236 7 is_stmt 1 view .LVU4
  20 000c FFE0     		jmp	*%rax
  21              	.LVL1:
  22 000e 6690     		.p2align 4,,10
  23              		.p2align 3
  24              	.L2:
 237:fltk-1.3.4-1/png/pngmem.c **** 
 238:fltk-1.3.4-1/png/pngmem.c ****    else
 239:fltk-1.3.4-1/png/pngmem.c ****       png_free_default(png_ptr, ptr);
  25              		.loc 1 239 7 view .LVU5
  26              	.LBB32:
  27              	.LBI32:
 240:fltk-1.3.4-1/png/pngmem.c **** }
 241:fltk-1.3.4-1/png/pngmem.c **** 
 242:fltk-1.3.4-1/png/pngmem.c **** PNG_FUNCTION(void,PNGAPI
  28              		.loc 1 242 1 view .LVU6
  29              	.LBB33:
 243:fltk-1.3.4-1/png/pngmem.c **** png_free_default,(png_const_structrp png_ptr, png_voidp ptr),PNG_DEPRECATED)
 244:fltk-1.3.4-1/png/pngmem.c **** {
 245:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL || ptr == NULL)
  30              		.loc 1 245 4 view .LVU7
 246:fltk-1.3.4-1/png/pngmem.c ****       return;
 247:fltk-1.3.4-1/png/pngmem.c **** #endif /* USER_MEM */
 248:fltk-1.3.4-1/png/pngmem.c **** 
 249:fltk-1.3.4-1/png/pngmem.c ****    free(ptr);
  31              		.loc 1 249 4 view .LVU8
  32 0010 4889F7   		movq	%rsi, %rdi
  33              	.LVL2:
  34              		.loc 1 249 4 is_stmt 0 view .LVU9
  35 0013 E9000000 		jmp	free@PLT
  35      00
  36              	.LVL3:
  37              		.loc 1 249 4 view .LVU10
  38              	.LBE33:
  39              	.LBE32:
  40              		.cfi_endproc
  41              	.LFE54:
  43              		.section	.text.png_destroy_png_struct,"ax",@progbits
  44              		.p2align 4
  45              		.globl	png_destroy_png_struct
  47              	png_destroy_png_struct:
  48              	.LVL4:
  49              	.LFB41:
  26:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
  50              		.loc 1 26 1 is_stmt 1 view -0
  51              		.cfi_startproc
  26:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
  52              		.loc 1 26 1 is_stmt 0 view .LVU12
  53 0000 F30F1EFA 		endbr64
  54 0004 55       		pushq	%rbp
  55              		.cfi_def_cfa_offset 16
  56              		.cfi_offset 6, -16
  57 0005 4881EC30 		subq	$1328, %rsp
  57      050000
  58              		.cfi_def_cfa_offset 1344
  26:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
  59              		.loc 1 26 1 view .LVU13
  60 000c 64488B04 		movq	%fs:40, %rax
  60      25280000 
  60      00
  61 0015 48898424 		movq	%rax, 1320(%rsp)
  61      28050000 
  62 001d 31C0     		xorl	%eax, %eax
  27:fltk-1.3.4-1/png/pngmem.c ****    {
  63              		.loc 1 27 4 is_stmt 1 view .LVU14
  27:fltk-1.3.4-1/png/pngmem.c ****    {
  64              		.loc 1 27 7 is_stmt 0 view .LVU15
  65 001f 4885FF   		testq	%rdi, %rdi
  66 0022 7459     		je	.L4
  67 0024 4989F8   		movq	%rdi, %r8
  68              	.LBB34:
  32:fltk-1.3.4-1/png/pngmem.c ****       memset(png_ptr, 0, (sizeof *png_ptr));
  69              		.loc 1 32 7 is_stmt 1 view .LVU16
  32:fltk-1.3.4-1/png/pngmem.c ****       memset(png_ptr, 0, (sizeof *png_ptr));
  70              		.loc 1 32 18 is_stmt 0 view .LVU17
  71 0027 B8A50000 		movl	$165, %eax
  71      00
  72 002c 4889E7   		movq	%rsp, %rdi
  73              	.LVL5:
  74              	.LBB35:
  75              	.LBB36:
  32:fltk-1.3.4-1/png/pngmem.c ****       memset(png_ptr, 0, (sizeof *png_ptr));
  76              		.loc 1 32 18 view .LVU18
  77 002f 4889E5   		movq	%rsp, %rbp
  78              	.LBE36:
  79              	.LBE35:
  80 0032 4C89C6   		movq	%r8, %rsi
  81 0035 4889C1   		movq	%rax, %rcx
  82 0038 F348A5   		rep movsq
  83              	.LBB39:
  84              	.LBB40:
  85              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
  86              		.loc 2 71 10 view .LVU19
  87 003b 498D7808 		leaq	8(%r8), %rdi
  88 003f 49C70000 		movq	$0, (%r8)
  88      000000
  89              	.LBE40:
  90              	.LBE39:
  91              	.LBB43:
  92              	.LBB37:
  93 0046 4C89C6   		movq	%r8, %rsi
  94              	.LBE37:
  95              	.LBE43:
  96              	.LBB44:
  97              	.LBB41:
  98 0049 49C78020 		movq	$0, 1312(%r8)
  98      05000000 
  98      000000
  99 0054 4883E7F8 		andq	$-8, %rdi
 100              	.LBE41:
 101              	.LBE44:
  32:fltk-1.3.4-1/png/pngmem.c ****       memset(png_ptr, 0, (sizeof *png_ptr));
 102              		.loc 1 32 18 view .LVU20
 103 0058 4889C8   		movq	%rcx, %rax
  33:fltk-1.3.4-1/png/pngmem.c ****       png_free(&dummy_struct, png_ptr);
 104              		.loc 1 33 7 is_stmt 1 view .LVU21
 105              	.LVL6:
 106              	.LBB45:
 107              	.LBI39:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 108              		.loc 2 59 1 view .LVU22
 109              	.LBB42:
 110              		.loc 2 71 3 view .LVU23
 111              		.loc 2 71 10 is_stmt 0 view .LVU24
 112 005b 4C89C1   		movq	%r8, %rcx
 113 005e 4829F9   		subq	%rdi, %rcx
 114 0061 81C12805 		addl	$1320, %ecx
 114      0000
 115 0067 C1E903   		shrl	$3, %ecx
 116 006a F348AB   		rep stosq
 117              	.LVL7:
 118              		.loc 2 71 10 view .LVU25
 119              	.LBE42:
 120              	.LBE45:
  34:fltk-1.3.4-1/png/pngmem.c **** 
 121              		.loc 1 34 7 is_stmt 1 view .LVU26
 122              	.LBB46:
 123              	.LBI35:
 229:fltk-1.3.4-1/png/pngmem.c **** {
 124              		.loc 1 229 1 view .LVU27
 125              	.LBB38:
 231:fltk-1.3.4-1/png/pngmem.c ****       return;
 126              		.loc 1 231 4 view .LVU28
 127 006d 4889EF   		movq	%rbp, %rdi
 128 0070 E8000000 		call	png_free.part.0
 128      00
 129              	.LVL8:
 231:fltk-1.3.4-1/png/pngmem.c ****       return;
 130              		.loc 1 231 4 is_stmt 0 view .LVU29
 131              	.LBE38:
 132              	.LBE46:
  38:fltk-1.3.4-1/png/pngmem.c **** #     endif
 133              		.loc 1 38 10 is_stmt 1 view .LVU30
 134 0075 4889EF   		movq	%rbp, %rdi
 135 0078 E8000000 		call	png_free_jmpbuf@PLT
 135      00
 136              	.LVL9:
 137              	.L4:
 138              	.LBE34:
  41:fltk-1.3.4-1/png/pngmem.c **** 
 139              		.loc 1 41 1 is_stmt 0 view .LVU31
 140 007d 488B8424 		movq	1320(%rsp), %rax
 140      28050000 
 141 0085 64483304 		xorq	%fs:40, %rax
 141      25280000 
 141      00
 142 008e 7509     		jne	.L11
 143 0090 4881C430 		addq	$1328, %rsp
 143      050000
 144              		.cfi_remember_state
 145              		.cfi_def_cfa_offset 16
 146 0097 5D       		popq	%rbp
 147              		.cfi_def_cfa_offset 8
 148 0098 C3       		ret
 149              	.L11:
 150              		.cfi_restore_state
 151 0099 E8000000 		call	__stack_chk_fail@PLT
 151      00
 152              	.LVL10:
 153              		.cfi_endproc
 154              	.LFE41:
 156              		.section	.text.png_malloc_base,"ax",@progbits
 157              		.p2align 4
 158              		.globl	png_malloc_base
 160              	png_malloc_base:
 161              	.LVL11:
 162              	.LFB43:
  70:fltk-1.3.4-1/png/pngmem.c ****    /* Moved to png_malloc_base from png_malloc_default in 1.6.0; the DOS
 163              		.loc 1 70 1 is_stmt 1 view -0
 164              		.cfi_startproc
  70:fltk-1.3.4-1/png/pngmem.c ****    /* Moved to png_malloc_base from png_malloc_default in 1.6.0; the DOS
 165              		.loc 1 70 1 is_stmt 0 view .LVU33
 166 0000 F30F1EFA 		endbr64
  80:fltk-1.3.4-1/png/pngmem.c **** #     ifdef PNG_MAX_MALLOC_64K
 167              		.loc 1 80 4 is_stmt 1 view .LVU34
  80:fltk-1.3.4-1/png/pngmem.c **** #     ifdef PNG_MAX_MALLOC_64K
 168              		.loc 1 80 7 is_stmt 0 view .LVU35
 169 0004 4885F6   		testq	%rsi, %rsi
 170 0007 7427     		je	.L13
  87:fltk-1.3.4-1/png/pngmem.c ****          return png_ptr->malloc_fn(png_constcast(png_structrp,png_ptr), size);
 171              		.loc 1 87 7 is_stmt 1 view .LVU36
  87:fltk-1.3.4-1/png/pngmem.c ****          return png_ptr->malloc_fn(png_constcast(png_structrp,png_ptr), size);
 172              		.loc 1 87 10 is_stmt 0 view .LVU37
 173 0009 4885FF   		testq	%rdi, %rdi
 174 000c 7412     		je	.L14
  87:fltk-1.3.4-1/png/pngmem.c ****          return png_ptr->malloc_fn(png_constcast(png_structrp,png_ptr), size);
 175              		.loc 1 87 37 discriminator 1 view .LVU38
 176 000e 488B8728 		movq	1064(%rdi), %rax
 176      040000
  87:fltk-1.3.4-1/png/pngmem.c ****          return png_ptr->malloc_fn(png_constcast(png_structrp,png_ptr), size);
 177              		.loc 1 87 27 discriminator 1 view .LVU39
 178 0015 4885C0   		testq	%rax, %rax
 179 0018 7406     		je	.L14
  88:fltk-1.3.4-1/png/pngmem.c **** 
 180              		.loc 1 88 10 is_stmt 1 view .LVU40
  88:fltk-1.3.4-1/png/pngmem.c **** 
 181              		.loc 1 88 17 is_stmt 0 view .LVU41
 182 001a FFE0     		jmp	*%rax
 183              	.LVL12:
 184 001c 0F1F4000 		.p2align 4,,10
 185              		.p2align 3
 186              	.L14:
  92:fltk-1.3.4-1/png/pngmem.c ****    }
 187              		.loc 1 92 10 is_stmt 1 view .LVU42
  92:fltk-1.3.4-1/png/pngmem.c ****    }
 188              		.loc 1 92 17 is_stmt 0 view .LVU43
 189 0020 4889F7   		movq	%rsi, %rdi
 190              	.LVL13:
  92:fltk-1.3.4-1/png/pngmem.c ****    }
 191              		.loc 1 92 17 view .LVU44
 192 0023 E9000000 		jmp	malloc@PLT
 192      00
 193              	.LVL14:
 194 0028 0F1F8400 		.p2align 4,,10
 194      00000000 
 195              		.p2align 3
 196              	.L13:
  97:fltk-1.3.4-1/png/pngmem.c **** 
 197              		.loc 1 97 1 view .LVU45
 198 0030 31C0     		xorl	%eax, %eax
 199 0032 C3       		ret
 200              		.cfi_endproc
 201              	.LFE43:
 203              		.section	.rodata.png_malloc_array.str1.1,"aMS",@progbits,1
 204              	.LC0:
 205 0000 696E7465 		.string	"internal error: array alloc"
 205      726E616C 
 205      20657272 
 205      6F723A20 
 205      61727261 
 206              		.section	.text.png_malloc_array,"ax",@progbits
 207              		.p2align 4
 208              		.globl	png_malloc_array
 210              	png_malloc_array:
 211              	.LVL15:
 212              	.LFB45:
 121:fltk-1.3.4-1/png/pngmem.c ****    if (nelements <= 0 || element_size == 0)
 213              		.loc 1 121 1 is_stmt 1 view -0
 214              		.cfi_startproc
 121:fltk-1.3.4-1/png/pngmem.c ****    if (nelements <= 0 || element_size == 0)
 215              		.loc 1 121 1 is_stmt 0 view .LVU47
 216 0000 F30F1EFA 		endbr64
 122:fltk-1.3.4-1/png/pngmem.c ****       png_error(png_ptr, "internal error: array alloc");
 217              		.loc 1 122 4 is_stmt 1 view .LVU48
 122:fltk-1.3.4-1/png/pngmem.c ****       png_error(png_ptr, "internal error: array alloc");
 218              		.loc 1 122 7 is_stmt 0 view .LVU49
 219 0004 85F6     		testl	%esi, %esi
 220 0006 7E1B     		jle	.L27
 221 0008 4885D2   		testq	%rdx, %rdx
 222 000b 7416     		je	.L27
 125:fltk-1.3.4-1/png/pngmem.c **** }
 223              		.loc 1 125 4 is_stmt 1 view .LVU50
 224              	.LVL16:
 225              	.LBB47:
 226              	.LBI47:
 106:fltk-1.3.4-1/png/pngmem.c ****    size_t element_size)
 227              		.loc 1 106 1 view .LVU51
 228              	.LBB48:
 109:fltk-1.3.4-1/png/pngmem.c **** 
 229              		.loc 1 109 4 view .LVU52
 109:fltk-1.3.4-1/png/pngmem.c **** 
 230              		.loc 1 109 21 is_stmt 0 view .LVU53
 231 000d 4863F6   		movslq	%esi, %rsi
 232              	.LVL17:
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 233              		.loc 1 111 4 is_stmt 1 view .LVU54
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 234              		.loc 1 111 12 is_stmt 0 view .LVU55
 235 0010 4889F0   		movq	%rsi, %rax
 236 0013 48F7E2   		mulq	%rdx
 237              	.LVL18:
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 238              		.loc 1 111 12 view .LVU56
 239 0016 4889C6   		movq	%rax, %rsi
 240              	.LVL19:
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 241              		.loc 1 111 12 view .LVU57
 242 0019 7005     		jo	.L25
 112:fltk-1.3.4-1/png/pngmem.c **** 
 243              		.loc 1 112 7 is_stmt 1 view .LVU58
 112:fltk-1.3.4-1/png/pngmem.c **** 
 244              		.loc 1 112 14 is_stmt 0 view .LVU59
 245 001b E9000000 		jmp	png_malloc_base
 245      00
 246              	.LVL20:
 247              	.L25:
 112:fltk-1.3.4-1/png/pngmem.c **** 
 248              		.loc 1 112 14 view .LVU60
 249              	.LBE48:
 250              	.LBE47:
 126:fltk-1.3.4-1/png/pngmem.c **** 
 251              		.loc 1 126 1 view .LVU61
 252 0020 31C0     		xorl	%eax, %eax
 253 0022 C3       		ret
 254              	.LVL21:
 255              	.L27:
 123:fltk-1.3.4-1/png/pngmem.c **** 
 256              		.loc 1 123 7 is_stmt 1 view .LVU62
 121:fltk-1.3.4-1/png/pngmem.c ****    if (nelements <= 0 || element_size == 0)
 257              		.loc 1 121 1 is_stmt 0 view .LVU63
 258 0023 50       		pushq	%rax
 259              		.cfi_def_cfa_offset 16
 123:fltk-1.3.4-1/png/pngmem.c **** 
 260              		.loc 1 123 7 view .LVU64
 261 0024 488D3500 		leaq	.LC0(%rip), %rsi
 261      000000
 262              	.LVL22:
 123:fltk-1.3.4-1/png/pngmem.c **** 
 263              		.loc 1 123 7 view .LVU65
 264 002b E8000000 		call	png_error@PLT
 264      00
 265              	.LVL23:
 123:fltk-1.3.4-1/png/pngmem.c **** 
 266              		.loc 1 123 7 view .LVU66
 267              		.cfi_endproc
 268              	.LFE45:
 270              		.section	.rodata.png_realloc_array.str1.1,"aMS",@progbits,1
 271              	.LC1:
 272 0000 696E7465 		.string	"internal error: array realloc"
 272      726E616C 
 272      20657272 
 272      6F723A20 
 272      61727261 
 273              		.section	.text.png_realloc_array,"ax",@progbits
 274              		.p2align 4
 275              		.globl	png_realloc_array
 277              	png_realloc_array:
 278              	.LVL24:
 279              	.LFB46:
 131:fltk-1.3.4-1/png/pngmem.c ****    /* These are internal errors: */
 280              		.loc 1 131 1 is_stmt 1 view -0
 281              		.cfi_startproc
 131:fltk-1.3.4-1/png/pngmem.c ****    /* These are internal errors: */
 282              		.loc 1 131 1 is_stmt 0 view .LVU68
 283 0000 F30F1EFA 		endbr64
 133:fltk-1.3.4-1/png/pngmem.c ****       (old_array == NULL && old_elements > 0))
 284              		.loc 1 133 4 is_stmt 1 view .LVU69
 131:fltk-1.3.4-1/png/pngmem.c ****    /* These are internal errors: */
 285              		.loc 1 131 1 is_stmt 0 view .LVU70
 286 0004 4157     		pushq	%r15
 287              		.cfi_def_cfa_offset 16
 288              		.cfi_offset 15, -16
 289 0006 4156     		pushq	%r14
 290              		.cfi_def_cfa_offset 24
 291              		.cfi_offset 14, -24
 292 0008 4155     		pushq	%r13
 293              		.cfi_def_cfa_offset 32
 294              		.cfi_offset 13, -32
 295 000a 4154     		pushq	%r12
 296              		.cfi_def_cfa_offset 40
 297              		.cfi_offset 12, -40
 298 000c 4189D4   		movl	%edx, %r12d
 299 000f 55       		pushq	%rbp
 300              		.cfi_def_cfa_offset 48
 301              		.cfi_offset 6, -48
 302 0010 53       		pushq	%rbx
 303              		.cfi_def_cfa_offset 56
 304              		.cfi_offset 3, -56
 305 0011 4883EC08 		subq	$8, %rsp
 306              		.cfi_def_cfa_offset 64
 133:fltk-1.3.4-1/png/pngmem.c ****       (old_array == NULL && old_elements > 0))
 307              		.loc 1 133 21 view .LVU71
 308 0015 85C9     		testl	%ecx, %ecx
 309 0017 0F9EC2   		setle	%dl
 310              	.LVL25:
 133:fltk-1.3.4-1/png/pngmem.c ****       (old_array == NULL && old_elements > 0))
 311              		.loc 1 133 42 view .LVU72
 312 001a 4D85C0   		testq	%r8, %r8
 313 001d 0F94C0   		sete	%al
 133:fltk-1.3.4-1/png/pngmem.c ****       (old_array == NULL && old_elements > 0))
 314              		.loc 1 133 47 view .LVU73
 315 0020 08C2     		orb	%al, %dl
 316 0022 0F859000 		jne	.L31
 316      0000
 317 0028 4585E4   		testl	%r12d, %r12d
 318 002b 0F888700 		js	.L31
 318      0000
 319 0031 4989F6   		movq	%rsi, %r14
 320 0034 89CB     		movl	%ecx, %ebx
 321 0036 4C89C5   		movq	%r8, %rbp
 133:fltk-1.3.4-1/png/pngmem.c ****       (old_array == NULL && old_elements > 0))
 322              		.loc 1 133 67 discriminator 2 view .LVU74
 323 0039 4885F6   		testq	%rsi, %rsi
 324 003c 7505     		jne	.L32
 325 003e 4585E4   		testl	%r12d, %r12d
 326 0041 7F75     		jg	.L31
 327              	.L32:
 140:fltk-1.3.4-1/png/pngmem.c ****    {
 328              		.loc 1 140 4 is_stmt 1 view .LVU75
 140:fltk-1.3.4-1/png/pngmem.c ****    {
 329              		.loc 1 140 32 is_stmt 0 view .LVU76
 330 0043 B8FFFFFF 		movl	$2147483647, %eax
 330      7F
 331 0048 4429E0   		subl	%r12d, %eax
 140:fltk-1.3.4-1/png/pngmem.c ****    {
 332              		.loc 1 140 7 view .LVU77
 333 004b 39D8     		cmpl	%ebx, %eax
 334 004d 7C41     		jl	.L37
 335              	.LBB49:
 142:fltk-1.3.4-1/png/pngmem.c ****          old_elements+add_elements, element_size);
 336              		.loc 1 142 7 is_stmt 1 view .LVU78
 337              	.LVL26:
 338              	.LBB50:
 339              	.LBI50:
 106:fltk-1.3.4-1/png/pngmem.c ****    size_t element_size)
 340              		.loc 1 106 1 view .LVU79
 341              	.LBB51:
 109:fltk-1.3.4-1/png/pngmem.c **** 
 342              		.loc 1 109 4 view .LVU80
 343              	.LBE51:
 344              	.LBE50:
 142:fltk-1.3.4-1/png/pngmem.c ****          old_elements+add_elements, element_size);
 345              		.loc 1 142 29 is_stmt 0 view .LVU81
 346 004f 428D0423 		leal	(%rbx,%r12), %eax
 347              	.LBB53:
 348              	.LBB52:
 109:fltk-1.3.4-1/png/pngmem.c **** 
 349              		.loc 1 109 21 view .LVU82
 350 0053 4898     		cltq
 351              	.LVL27:
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 352              		.loc 1 111 4 is_stmt 1 view .LVU83
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 353              		.loc 1 111 12 is_stmt 0 view .LVU84
 354 0055 48F7E5   		mulq	%rbp
 355              	.LVL28:
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 356              		.loc 1 111 12 view .LVU85
 357 0058 4889C6   		movq	%rax, %rsi
 358              	.LVL29:
 111:fltk-1.3.4-1/png/pngmem.c ****       return png_malloc_base(png_ptr, req * element_size);
 359              		.loc 1 111 12 view .LVU86
 360 005b 7033     		jo	.L37
 112:fltk-1.3.4-1/png/pngmem.c **** 
 361              		.loc 1 112 7 is_stmt 1 view .LVU87
 112:fltk-1.3.4-1/png/pngmem.c **** 
 362              		.loc 1 112 14 is_stmt 0 view .LVU88
 363 005d E8000000 		call	png_malloc_base
 363      00
 364              	.LVL30:
 112:fltk-1.3.4-1/png/pngmem.c **** 
 365              		.loc 1 112 14 view .LVU89
 366 0062 4989C5   		movq	%rax, %r13
 367              	.LVL31:
 112:fltk-1.3.4-1/png/pngmem.c **** 
 368              		.loc 1 112 14 view .LVU90
 369              	.LBE52:
 370              	.LBE53:
 145:fltk-1.3.4-1/png/pngmem.c ****       {
 371              		.loc 1 145 7 is_stmt 1 view .LVU91
 145:fltk-1.3.4-1/png/pngmem.c ****       {
 372              		.loc 1 145 10 is_stmt 0 view .LVU92
 373 0065 4885C0   		testq	%rax, %rax
 374 0068 7426     		je	.L37
 150:fltk-1.3.4-1/png/pngmem.c ****             memcpy(new_array, old_array, element_size*(unsigned)old_elements);
 375              		.loc 1 150 10 is_stmt 1 view .LVU93
 376 006a 4D63FC   		movslq	%r12d, %r15
 377 006d 4C0FAFFD 		imulq	%rbp, %r15
 150:fltk-1.3.4-1/png/pngmem.c ****             memcpy(new_array, old_array, element_size*(unsigned)old_elements);
 378              		.loc 1 150 13 is_stmt 0 view .LVU94
 379 0071 4585E4   		testl	%r12d, %r12d
 380 0074 7532     		jne	.L52
 381              	.LVL32:
 382              	.L38:
 153:fltk-1.3.4-1/png/pngmem.c ****             element_size*(unsigned)add_elements);
 383              		.loc 1 153 10 is_stmt 1 view .LVU95
 384              	.LBB54:
 385              	.LBI54:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 386              		.loc 2 59 1 view .LVU96
 387              	.LBB55:
 388              		.loc 2 71 3 view .LVU97
 389              	.LBE55:
 390              	.LBE54:
 154:fltk-1.3.4-1/png/pngmem.c **** 
 391              		.loc 1 154 26 is_stmt 0 view .LVU98
 392 0076 4863D3   		movslq	%ebx, %rdx
 153:fltk-1.3.4-1/png/pngmem.c ****             element_size*(unsigned)add_elements);
 393              		.loc 1 153 10 view .LVU99
 394 0079 4B8D7C3D 		leaq	0(%r13,%r15), %rdi
 394      00
 395              	.LVL33:
 396              	.LBB58:
 397              	.LBB56:
 398              		.loc 2 71 10 view .LVU100
 399 007e 31F6     		xorl	%esi, %esi
 400              	.LBE56:
 401              	.LBE58:
 153:fltk-1.3.4-1/png/pngmem.c ****             element_size*(unsigned)add_elements);
 402              		.loc 1 153 10 view .LVU101
 403 0080 480FAFD5 		imulq	%rbp, %rdx
 404              	.LVL34:
 405              	.LBB59:
 406              	.LBB57:
 407              		.loc 2 71 10 view .LVU102
 408 0084 E8000000 		call	memset@PLT
 408      00
 409              	.LVL35:
 410              		.loc 2 71 10 view .LVU103
 411              	.LBE57:
 412              	.LBE59:
 156:fltk-1.3.4-1/png/pngmem.c ****       }
 413              		.loc 1 156 10 is_stmt 1 view .LVU104
 156:fltk-1.3.4-1/png/pngmem.c ****       }
 414              		.loc 1 156 17 is_stmt 0 view .LVU105
 415 0089 EB08     		jmp	.L30
 416 008b 0F1F4400 		.p2align 4,,10
 416      00
 417              		.p2align 3
 418              	.L37:
 156:fltk-1.3.4-1/png/pngmem.c ****       }
 419              		.loc 1 156 17 view .LVU106
 420              	.LBE49:
 160:fltk-1.3.4-1/png/pngmem.c **** }
 421              		.loc 1 160 11 view .LVU107
 422 0090 4531ED   		xorl	%r13d, %r13d
 423              	.L30:
 161:fltk-1.3.4-1/png/pngmem.c **** #endif /* TEXT || sPLT || STORE_UNKNOWN_CHUNKS */
 424              		.loc 1 161 1 view .LVU108
 425 0093 4883C408 		addq	$8, %rsp
 426              		.cfi_remember_state
 427              		.cfi_def_cfa_offset 56
 428 0097 4C89E8   		movq	%r13, %rax
 429 009a 5B       		popq	%rbx
 430              		.cfi_def_cfa_offset 48
 431              	.LVL36:
 161:fltk-1.3.4-1/png/pngmem.c **** #endif /* TEXT || sPLT || STORE_UNKNOWN_CHUNKS */
 432              		.loc 1 161 1 view .LVU109
 433 009b 5D       		popq	%rbp
 434              		.cfi_def_cfa_offset 40
 435              	.LVL37:
 161:fltk-1.3.4-1/png/pngmem.c **** #endif /* TEXT || sPLT || STORE_UNKNOWN_CHUNKS */
 436              		.loc 1 161 1 view .LVU110
 437 009c 415C     		popq	%r12
 438              		.cfi_def_cfa_offset 32
 439              	.LVL38:
 161:fltk-1.3.4-1/png/pngmem.c **** #endif /* TEXT || sPLT || STORE_UNKNOWN_CHUNKS */
 440              		.loc 1 161 1 view .LVU111
 441 009e 415D     		popq	%r13
 442              		.cfi_def_cfa_offset 24
 443 00a0 415E     		popq	%r14
 444              		.cfi_def_cfa_offset 16
 445              	.LVL39:
 161:fltk-1.3.4-1/png/pngmem.c **** #endif /* TEXT || sPLT || STORE_UNKNOWN_CHUNKS */
 446              		.loc 1 161 1 view .LVU112
 447 00a2 415F     		popq	%r15
 448              		.cfi_def_cfa_offset 8
 449 00a4 C3       		ret
 450              	.LVL40:
 451              		.p2align 4,,10
 452 00a5 0F1F00   		.p2align 3
 453              	.L52:
 454              		.cfi_restore_state
 455              	.LBB62:
 151:fltk-1.3.4-1/png/pngmem.c **** 
 456              		.loc 1 151 13 is_stmt 1 view .LVU113
 457              	.LBB60:
 458              	.LBI60:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 459              		.loc 2 31 1 view .LVU114
 460              	.LBB61:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 461              		.loc 2 34 3 view .LVU115
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 462              		.loc 2 34 10 is_stmt 0 view .LVU116
 463 00a8 4C89FA   		movq	%r15, %rdx
 464 00ab 4C89F6   		movq	%r14, %rsi
 465 00ae 4889C7   		movq	%rax, %rdi
 466 00b1 E8000000 		call	memcpy@PLT
 466      00
 467              	.LVL41:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 468              		.loc 2 34 10 view .LVU117
 469 00b6 EBBE     		jmp	.L38
 470              	.LVL42:
 471              	.L31:
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
 472              		.loc 2 34 10 view .LVU118
 473              	.LBE61:
 474              	.LBE60:
 475              	.LBE62:
 135:fltk-1.3.4-1/png/pngmem.c **** 
 476              		.loc 1 135 7 is_stmt 1 view .LVU119
 477 00b8 488D3500 		leaq	.LC1(%rip), %rsi
 477      000000
 478              	.LVL43:
 135:fltk-1.3.4-1/png/pngmem.c **** 
 479              		.loc 1 135 7 is_stmt 0 view .LVU120
 480 00bf E8000000 		call	png_error@PLT
 480      00
 481              	.LVL44:
 135:fltk-1.3.4-1/png/pngmem.c **** 
 482              		.loc 1 135 7 view .LVU121
 483              		.cfi_endproc
 484              	.LFE46:
 486              		.section	.rodata.png_malloc.str1.1,"aMS",@progbits,1
 487              	.LC2:
 488 0000 4F757420 		.string	"Out of memory"
 488      6F66206D 
 488      656D6F72 
 488      7900
 489              		.section	.text.png_malloc,"ax",@progbits
 490              		.p2align 4
 491              		.globl	png_malloc
 493              	png_malloc:
 494              	.LVL45:
 495              	.LFB47:
 170:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 496              		.loc 1 170 1 is_stmt 1 view -0
 497              		.cfi_startproc
 170:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 498              		.loc 1 170 1 is_stmt 0 view .LVU123
 499 0000 F30F1EFA 		endbr64
 171:fltk-1.3.4-1/png/pngmem.c **** 
 500              		.loc 1 171 4 is_stmt 1 view .LVU124
 173:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 501              		.loc 1 173 4 view .LVU125
 173:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 502              		.loc 1 173 7 is_stmt 0 view .LVU126
 503 0004 4885FF   		testq	%rdi, %rdi
 504 0007 7417     		je	.L55
 170:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 505              		.loc 1 170 1 view .LVU127
 506 0009 55       		pushq	%rbp
 507              		.cfi_def_cfa_offset 16
 508              		.cfi_offset 6, -16
 509 000a 4889FD   		movq	%rdi, %rbp
 176:fltk-1.3.4-1/png/pngmem.c **** 
 510              		.loc 1 176 4 is_stmt 1 view .LVU128
 176:fltk-1.3.4-1/png/pngmem.c **** 
 511              		.loc 1 176 10 is_stmt 0 view .LVU129
 512 000d E8000000 		call	png_malloc_base
 512      00
 513              	.LVL46:
 178:fltk-1.3.4-1/png/pngmem.c ****        png_error(png_ptr, "Out of memory"); /* 'm' means png_malloc */
 514              		.loc 1 178 4 is_stmt 1 view .LVU130
 178:fltk-1.3.4-1/png/pngmem.c ****        png_error(png_ptr, "Out of memory"); /* 'm' means png_malloc */
 515              		.loc 1 178 7 is_stmt 0 view .LVU131
 516 0012 4885C0   		testq	%rax, %rax
 517 0015 740C     		je	.L60
 182:fltk-1.3.4-1/png/pngmem.c **** 
 518              		.loc 1 182 1 view .LVU132
 519 0017 5D       		popq	%rbp
 520              		.cfi_def_cfa_offset 8
 521              	.LVL47:
 182:fltk-1.3.4-1/png/pngmem.c **** 
 522              		.loc 1 182 1 view .LVU133
 523 0018 C3       		ret
 524              	.LVL48:
 525 0019 0F1F8000 		.p2align 4,,10
 525      000000
 526              		.p2align 3
 527              	.L55:
 528              		.cfi_restore 6
 174:fltk-1.3.4-1/png/pngmem.c **** 
 529              		.loc 1 174 14 view .LVU134
 530 0020 31C0     		xorl	%eax, %eax
 182:fltk-1.3.4-1/png/pngmem.c **** 
 531              		.loc 1 182 1 view .LVU135
 532 0022 C3       		ret
 533              	.LVL49:
 534              	.L60:
 535              		.cfi_def_cfa_offset 16
 536              		.cfi_offset 6, -16
 179:fltk-1.3.4-1/png/pngmem.c **** 
 537              		.loc 1 179 8 is_stmt 1 view .LVU136
 538 0023 488D3500 		leaq	.LC2(%rip), %rsi
 538      000000
 539 002a 4889EF   		movq	%rbp, %rdi
 540 002d E8000000 		call	png_error@PLT
 540      00
 541              	.LVL50:
 179:fltk-1.3.4-1/png/pngmem.c **** 
 542              		.loc 1 179 8 is_stmt 0 view .LVU137
 543              		.cfi_endproc
 544              	.LFE47:
 546              		.section	.text.png_calloc,"ax",@progbits
 547              		.p2align 4
 548              		.globl	png_calloc
 550              	png_calloc:
 551              	.LVL51:
 552              	.LFB42:
  51:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 553              		.loc 1 51 1 is_stmt 1 view -0
 554              		.cfi_startproc
  51:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 555              		.loc 1 51 1 is_stmt 0 view .LVU139
 556 0000 F30F1EFA 		endbr64
  52:fltk-1.3.4-1/png/pngmem.c **** 
 557              		.loc 1 52 4 is_stmt 1 view .LVU140
  54:fltk-1.3.4-1/png/pngmem.c **** 
 558              		.loc 1 54 4 view .LVU141
  51:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 559              		.loc 1 51 1 is_stmt 0 view .LVU142
 560 0004 4154     		pushq	%r12
 561              		.cfi_def_cfa_offset 16
 562              		.cfi_offset 12, -16
  51:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 563              		.loc 1 51 1 view .LVU143
 564 0006 4989F4   		movq	%rsi, %r12
  54:fltk-1.3.4-1/png/pngmem.c **** 
 565              		.loc 1 54 10 view .LVU144
 566 0009 E8000000 		call	png_malloc
 566      00
 567              	.LVL52:
  54:fltk-1.3.4-1/png/pngmem.c **** 
 568              		.loc 1 54 10 view .LVU145
 569 000e 4989C0   		movq	%rax, %r8
 570              	.LVL53:
  56:fltk-1.3.4-1/png/pngmem.c ****       memset(ret, 0, size);
 571              		.loc 1 56 4 is_stmt 1 view .LVU146
  56:fltk-1.3.4-1/png/pngmem.c ****       memset(ret, 0, size);
 572              		.loc 1 56 7 is_stmt 0 view .LVU147
 573 0011 4885C0   		testq	%rax, %rax
 574 0014 7410     		je	.L61
  57:fltk-1.3.4-1/png/pngmem.c **** 
 575              		.loc 1 57 7 is_stmt 1 view .LVU148
 576              	.LVL54:
 577              	.LBB63:
 578              	.LBI63:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 579              		.loc 2 59 1 view .LVU149
 580              	.LBB64:
 581              		.loc 2 71 3 view .LVU150
 582              		.loc 2 71 10 is_stmt 0 view .LVU151
 583 0016 4C89E2   		movq	%r12, %rdx
 584 0019 31F6     		xorl	%esi, %esi
 585 001b 4889C7   		movq	%rax, %rdi
 586 001e E8000000 		call	memset@PLT
 586      00
 587              	.LVL55:
 588              		.loc 2 71 10 view .LVU152
 589 0023 4989C0   		movq	%rax, %r8
 590              	.LVL56:
 591              		.loc 2 71 10 view .LVU153
 592              	.LBE64:
 593              	.LBE63:
  59:fltk-1.3.4-1/png/pngmem.c **** }
 594              		.loc 1 59 4 is_stmt 1 view .LVU154
 595              	.L61:
  60:fltk-1.3.4-1/png/pngmem.c **** 
 596              		.loc 1 60 1 is_stmt 0 view .LVU155
 597 0026 4C89C0   		movq	%r8, %rax
 598 0029 415C     		popq	%r12
 599              		.cfi_def_cfa_offset 8
 600              	.LVL57:
  60:fltk-1.3.4-1/png/pngmem.c **** 
 601              		.loc 1 60 1 view .LVU156
 602 002b C3       		ret
 603              		.cfi_endproc
 604              	.LFE42:
 606              		.section	.rodata.png_malloc_default.str1.1,"aMS",@progbits,1
 607              	.LC3:
 608 0000 4F757420 		.string	"Out of Memory"
 608      6F66204D 
 608      656D6F72 
 608      7900
 609              		.section	.text.png_malloc_default,"ax",@progbits
 610              		.p2align 4
 611              		.globl	png_malloc_default
 613              	png_malloc_default:
 614              	.LVL58:
 615              	.LFB48:
 188:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 616              		.loc 1 188 1 is_stmt 1 view -0
 617              		.cfi_startproc
 188:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 618              		.loc 1 188 1 is_stmt 0 view .LVU158
 619 0000 F30F1EFA 		endbr64
 189:fltk-1.3.4-1/png/pngmem.c **** 
 620              		.loc 1 189 4 is_stmt 1 view .LVU159
 191:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 621              		.loc 1 191 4 view .LVU160
 188:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 622              		.loc 1 188 1 is_stmt 0 view .LVU161
 623 0004 55       		pushq	%rbp
 624              		.cfi_def_cfa_offset 16
 625              		.cfi_offset 6, -16
 188:fltk-1.3.4-1/png/pngmem.c ****    png_voidp ret;
 626              		.loc 1 188 1 view .LVU162
 627 0005 4889FD   		movq	%rdi, %rbp
 191:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 628              		.loc 1 191 7 view .LVU163
 629 0008 4885FF   		testq	%rdi, %rdi
 630 000b 7433     		je	.L71
 631 000d 4889F7   		movq	%rsi, %rdi
 632              	.LVL59:
 195:fltk-1.3.4-1/png/pngmem.c **** 
 633              		.loc 1 195 4 is_stmt 1 view .LVU164
 634              	.LBB65:
 635              	.LBI65:
  67:fltk-1.3.4-1/png/pngmem.c **** png_malloc_base,(png_const_structrp png_ptr, png_alloc_size_t size),
 636              		.loc 1 67 1 view .LVU165
 637              	.LBB66:
  80:fltk-1.3.4-1/png/pngmem.c **** #     ifdef PNG_MAX_MALLOC_64K
 638              		.loc 1 80 4 view .LVU166
  80:fltk-1.3.4-1/png/pngmem.c **** #     ifdef PNG_MAX_MALLOC_64K
 639              		.loc 1 80 7 is_stmt 0 view .LVU167
 640 0010 4885F6   		testq	%rsi, %rsi
 641 0013 7413     		je	.L70
  87:fltk-1.3.4-1/png/pngmem.c ****          return png_ptr->malloc_fn(png_constcast(png_structrp,png_ptr), size);
 642              		.loc 1 87 7 is_stmt 1 view .LVU168
  92:fltk-1.3.4-1/png/pngmem.c ****    }
 643              		.loc 1 92 10 view .LVU169
  92:fltk-1.3.4-1/png/pngmem.c ****    }
 644              		.loc 1 92 17 is_stmt 0 view .LVU170
 645 0015 E8000000 		call	malloc@PLT
 645      00
 646              	.LVL60:
  92:fltk-1.3.4-1/png/pngmem.c ****    }
 647              		.loc 1 92 17 view .LVU171
 648              	.LBE66:
 649              	.LBE65:
 197:fltk-1.3.4-1/png/pngmem.c ****       png_error(png_ptr, "Out of Memory"); /* 'M' means png_malloc_default */
 650              		.loc 1 197 4 is_stmt 1 view .LVU172
 197:fltk-1.3.4-1/png/pngmem.c ****       png_error(png_ptr, "Out of Memory"); /* 'M' means png_malloc_default */
 651              		.loc 1 197 7 is_stmt 0 view .LVU173
 652 001a 4885C0   		testq	%rax, %rax
 653 001d 7409     		je	.L70
 201:fltk-1.3.4-1/png/pngmem.c **** #endif /* USER_MEM */
 654              		.loc 1 201 1 view .LVU174
 655 001f 5D       		popq	%rbp
 656              		.cfi_remember_state
 657              		.cfi_def_cfa_offset 8
 658              	.LVL61:
 201:fltk-1.3.4-1/png/pngmem.c **** #endif /* USER_MEM */
 659              		.loc 1 201 1 view .LVU175
 660 0020 C3       		ret
 661              	.LVL62:
 662              		.p2align 4,,10
 663 0021 0F1F8000 		.p2align 3
 663      000000
 664              	.L70:
 665              		.cfi_restore_state
 198:fltk-1.3.4-1/png/pngmem.c **** 
 666              		.loc 1 198 7 is_stmt 1 view .LVU176
 667 0028 488D3500 		leaq	.LC3(%rip), %rsi
 667      000000
 668 002f 4889EF   		movq	%rbp, %rdi
 669 0032 E8000000 		call	png_error@PLT
 669      00
 670              	.LVL63:
 671 0037 660F1F84 		.p2align 4,,10
 671      00000000 
 671      00
 672              		.p2align 3
 673              	.L71:
 192:fltk-1.3.4-1/png/pngmem.c **** 
 674              		.loc 1 192 14 is_stmt 0 view .LVU177
 675 0040 31C0     		xorl	%eax, %eax
 201:fltk-1.3.4-1/png/pngmem.c **** #endif /* USER_MEM */
 676              		.loc 1 201 1 view .LVU178
 677 0042 5D       		popq	%rbp
 678              		.cfi_def_cfa_offset 8
 679 0043 C3       		ret
 680              		.cfi_endproc
 681              	.LFE48:
 683              		.section	.text.png_malloc_warn,"ax",@progbits
 684              		.p2align 4
 685              		.globl	png_malloc_warn
 687              	png_malloc_warn:
 688              	.LVL64:
 689              	.LFB49:
 211:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
 690              		.loc 1 211 1 is_stmt 1 view -0
 691              		.cfi_startproc
 211:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
 692              		.loc 1 211 1 is_stmt 0 view .LVU180
 693 0000 F30F1EFA 		endbr64
 212:fltk-1.3.4-1/png/pngmem.c ****    {
 694              		.loc 1 212 4 is_stmt 1 view .LVU181
 222:fltk-1.3.4-1/png/pngmem.c **** }
 695              		.loc 1 222 11 is_stmt 0 view .LVU182
 696 0004 31C0     		xorl	%eax, %eax
 212:fltk-1.3.4-1/png/pngmem.c ****    {
 697              		.loc 1 212 7 view .LVU183
 698 0006 4885FF   		testq	%rdi, %rdi
 699 0009 741D     		je	.L81
 211:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
 700              		.loc 1 211 1 view .LVU184
 701 000b 55       		pushq	%rbp
 702              		.cfi_def_cfa_offset 16
 703              		.cfi_offset 6, -16
 704 000c 4889FD   		movq	%rdi, %rbp
 705              	.LBB67:
 214:fltk-1.3.4-1/png/pngmem.c **** 
 706              		.loc 1 214 7 is_stmt 1 view .LVU185
 707              	.LBE67:
 211:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
 708              		.loc 1 211 1 is_stmt 0 view .LVU186
 709 000f 4883EC10 		subq	$16, %rsp
 710              		.cfi_def_cfa_offset 32
 711              	.LBB68:
 214:fltk-1.3.4-1/png/pngmem.c **** 
 712              		.loc 1 214 23 view .LVU187
 713 0013 E8000000 		call	png_malloc_base
 713      00
 714              	.LVL65:
 216:fltk-1.3.4-1/png/pngmem.c ****          return ret;
 715              		.loc 1 216 7 is_stmt 1 view .LVU188
 216:fltk-1.3.4-1/png/pngmem.c ****          return ret;
 716              		.loc 1 216 10 is_stmt 0 view .LVU189
 717 0018 4885C0   		testq	%rax, %rax
 718 001b 740C     		je	.L84
 719              	.LVL66:
 720              	.L76:
 216:fltk-1.3.4-1/png/pngmem.c ****          return ret;
 721              		.loc 1 216 10 view .LVU190
 722              	.LBE68:
 223:fltk-1.3.4-1/png/pngmem.c **** 
 723              		.loc 1 223 1 view .LVU191
 724 001d 4883C410 		addq	$16, %rsp
 725              		.cfi_def_cfa_offset 16
 726 0021 5D       		popq	%rbp
 727              		.cfi_def_cfa_offset 8
 728              	.LVL67:
 223:fltk-1.3.4-1/png/pngmem.c **** 
 729              		.loc 1 223 1 view .LVU192
 730 0022 C3       		ret
 731              	.LVL68:
 732              		.p2align 4,,10
 733 0023 0F1F4400 		.p2align 3
 733      00
 734              	.L81:
 735              		.cfi_restore 6
 223:fltk-1.3.4-1/png/pngmem.c **** 
 736              		.loc 1 223 1 view .LVU193
 737 0028 C3       		ret
 738              	.LVL69:
 739              	.L84:
 740              		.cfi_def_cfa_offset 32
 741              		.cfi_offset 6, -16
 742              	.LBB69:
 219:fltk-1.3.4-1/png/pngmem.c ****    }
 743              		.loc 1 219 7 view .LVU194
 744 0029 488D3500 		leaq	.LC2(%rip), %rsi
 744      000000
 745 0030 4889EF   		movq	%rbp, %rdi
 746 0033 48894424 		movq	%rax, 8(%rsp)
 746      08
 219:fltk-1.3.4-1/png/pngmem.c ****    }
 747              		.loc 1 219 7 is_stmt 1 view .LVU195
 748 0038 E8000000 		call	png_warning@PLT
 748      00
 749              	.LVL70:
 219:fltk-1.3.4-1/png/pngmem.c ****    }
 750              		.loc 1 219 7 is_stmt 0 view .LVU196
 751 003d 488B4424 		movq	8(%rsp), %rax
 751      08
 752 0042 EBD9     		jmp	.L76
 753              	.LBE69:
 754              		.cfi_endproc
 755              	.LFE49:
 757              		.section	.text.png_free,"ax",@progbits
 758              		.p2align 4
 759              		.globl	png_free
 761              	png_free:
 762              	.LVL71:
 763              	.LFB50:
 230:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL || ptr == NULL)
 764              		.loc 1 230 1 is_stmt 1 view -0
 765              		.cfi_startproc
 230:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL || ptr == NULL)
 766              		.loc 1 230 1 is_stmt 0 view .LVU198
 767 0000 F30F1EFA 		endbr64
 231:fltk-1.3.4-1/png/pngmem.c ****       return;
 768              		.loc 1 231 4 is_stmt 1 view .LVU199
 231:fltk-1.3.4-1/png/pngmem.c ****       return;
 769              		.loc 1 231 7 is_stmt 0 view .LVU200
 770 0004 4885FF   		testq	%rdi, %rdi
 771 0007 740F     		je	.L85
 772 0009 4885F6   		testq	%rsi, %rsi
 773 000c 740A     		je	.L85
 774 000e E9000000 		jmp	png_free.part.0
 774      00
 775              	.LVL72:
 776              		.p2align 4,,10
 777 0013 0F1F4400 		.p2align 3
 777      00
 778              	.L85:
 240:fltk-1.3.4-1/png/pngmem.c **** 
 779              		.loc 1 240 1 view .LVU201
 780 0018 C3       		ret
 781              		.cfi_endproc
 782              	.LFE50:
 784              		.section	.text.png_free_default,"ax",@progbits
 785              		.p2align 4
 786              		.globl	png_free_default
 788              	png_free_default:
 789              	.LVL73:
 790              	.LFB51:
 244:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL || ptr == NULL)
 791              		.loc 1 244 1 is_stmt 1 view -0
 792              		.cfi_startproc
 244:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL || ptr == NULL)
 793              		.loc 1 244 1 is_stmt 0 view .LVU203
 794 0000 F30F1EFA 		endbr64
 245:fltk-1.3.4-1/png/pngmem.c ****       return;
 795              		.loc 1 245 4 is_stmt 1 view .LVU204
 244:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL || ptr == NULL)
 796              		.loc 1 244 1 is_stmt 0 view .LVU205
 797 0004 4989F8   		movq	%rdi, %r8
 798 0007 4889F7   		movq	%rsi, %rdi
 799              	.LVL74:
 245:fltk-1.3.4-1/png/pngmem.c ****       return;
 800              		.loc 1 245 7 view .LVU206
 801 000a 4D85C0   		testq	%r8, %r8
 802 000d 7411     		je	.L87
 803 000f 4885F6   		testq	%rsi, %rsi
 804 0012 740C     		je	.L87
 805              		.loc 1 249 4 is_stmt 1 view .LVU207
 806 0014 E9000000 		jmp	free@PLT
 806      00
 807              	.LVL75:
 808 0019 0F1F8000 		.p2align 4,,10
 808      000000
 809              		.p2align 3
 810              	.L87:
 250:fltk-1.3.4-1/png/pngmem.c **** }
 811              		.loc 1 250 1 is_stmt 0 view .LVU208
 812 0020 C3       		ret
 813              		.cfi_endproc
 814              	.LFE51:
 816              		.section	.text.png_set_mem_fn,"ax",@progbits
 817              		.p2align 4
 818              		.globl	png_set_mem_fn
 820              	png_set_mem_fn:
 821              	.LVL76:
 822              	.LFB52:
 251:fltk-1.3.4-1/png/pngmem.c **** 
 252:fltk-1.3.4-1/png/pngmem.c **** #ifdef PNG_USER_MEM_SUPPORTED
 253:fltk-1.3.4-1/png/pngmem.c **** /* This function is called when the application wants to use another method
 254:fltk-1.3.4-1/png/pngmem.c ****  * of allocating and freeing memory.
 255:fltk-1.3.4-1/png/pngmem.c ****  */
 256:fltk-1.3.4-1/png/pngmem.c **** void PNGAPI
 257:fltk-1.3.4-1/png/pngmem.c **** png_set_mem_fn(png_structrp png_ptr, png_voidp mem_ptr, png_malloc_ptr
 258:fltk-1.3.4-1/png/pngmem.c ****   malloc_fn, png_free_ptr free_fn)
 259:fltk-1.3.4-1/png/pngmem.c **** {
 823              		.loc 1 259 1 is_stmt 1 view -0
 824              		.cfi_startproc
 825              		.loc 1 259 1 is_stmt 0 view .LVU210
 826 0000 F30F1EFA 		endbr64
 260:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr != NULL)
 827              		.loc 1 260 4 is_stmt 1 view .LVU211
 828              		.loc 1 260 7 is_stmt 0 view .LVU212
 829 0004 4885FF   		testq	%rdi, %rdi
 830 0007 7415     		je	.L89
 261:fltk-1.3.4-1/png/pngmem.c ****    {
 262:fltk-1.3.4-1/png/pngmem.c ****       png_ptr->mem_ptr = mem_ptr;
 831              		.loc 1 262 7 is_stmt 1 view .LVU213
 832              		.loc 1 262 24 is_stmt 0 view .LVU214
 833 0009 4889B720 		movq	%rsi, 1056(%rdi)
 833      040000
 263:fltk-1.3.4-1/png/pngmem.c ****       png_ptr->malloc_fn = malloc_fn;
 834              		.loc 1 263 7 is_stmt 1 view .LVU215
 835              		.loc 1 263 26 is_stmt 0 view .LVU216
 836 0010 48899728 		movq	%rdx, 1064(%rdi)
 836      040000
 264:fltk-1.3.4-1/png/pngmem.c ****       png_ptr->free_fn = free_fn;
 837              		.loc 1 264 7 is_stmt 1 view .LVU217
 838              		.loc 1 264 24 is_stmt 0 view .LVU218
 839 0017 48898F30 		movq	%rcx, 1072(%rdi)
 839      040000
 840              	.L89:
 265:fltk-1.3.4-1/png/pngmem.c ****    }
 266:fltk-1.3.4-1/png/pngmem.c **** }
 841              		.loc 1 266 1 view .LVU219
 842 001e C3       		ret
 843              		.cfi_endproc
 844              	.LFE52:
 846              		.section	.text.png_get_mem_ptr,"ax",@progbits
 847              		.p2align 4
 848              		.globl	png_get_mem_ptr
 850              	png_get_mem_ptr:
 851              	.LVL77:
 852              	.LFB53:
 267:fltk-1.3.4-1/png/pngmem.c **** 
 268:fltk-1.3.4-1/png/pngmem.c **** /* This function returns a pointer to the mem_ptr associated with the user
 269:fltk-1.3.4-1/png/pngmem.c ****  * functions.  The application should free any memory associated with this
 270:fltk-1.3.4-1/png/pngmem.c ****  * pointer before png_write_destroy and png_read_destroy are called.
 271:fltk-1.3.4-1/png/pngmem.c ****  */
 272:fltk-1.3.4-1/png/pngmem.c **** png_voidp PNGAPI
 273:fltk-1.3.4-1/png/pngmem.c **** png_get_mem_ptr(png_const_structrp png_ptr)
 274:fltk-1.3.4-1/png/pngmem.c **** {
 853              		.loc 1 274 1 is_stmt 1 view -0
 854              		.cfi_startproc
 855              		.loc 1 274 1 is_stmt 0 view .LVU221
 856 0000 F30F1EFA 		endbr64
 275:fltk-1.3.4-1/png/pngmem.c ****    if (png_ptr == NULL)
 857              		.loc 1 275 4 is_stmt 1 view .LVU222
 858              		.loc 1 275 7 is_stmt 0 view .LVU223
 859 0004 4885FF   		testq	%rdi, %rdi
 860 0007 740F     		je	.L96
 276:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 277:fltk-1.3.4-1/png/pngmem.c **** 
 278:fltk-1.3.4-1/png/pngmem.c ****    return png_ptr->mem_ptr;
 861              		.loc 1 278 4 is_stmt 1 view .LVU224
 862              		.loc 1 278 18 is_stmt 0 view .LVU225
 863 0009 488B8720 		movq	1056(%rdi), %rax
 863      040000
 864 0010 C3       		ret
 865              		.p2align 4,,10
 866 0011 0F1F8000 		.p2align 3
 866      000000
 867              	.L96:
 276:fltk-1.3.4-1/png/pngmem.c ****       return NULL;
 868              		.loc 1 276 14 view .LVU226
 869 0018 31C0     		xorl	%eax, %eax
 279:fltk-1.3.4-1/png/pngmem.c **** }
 870              		.loc 1 279 1 view .LVU227
 871 001a C3       		ret
 872              		.cfi_endproc
 873              	.LFE53:
 875              		.text
 876              	.Letext0:
 877              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 878              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 879              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 880              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 881              		.file 7 "/usr/include/stdio.h"
 882              		.file 8 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 883              		.file 9 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 884              		.file 10 "/usr/include/setjmp.h"
 885              		.file 11 "/usr/include/time.h"
 886              		.file 12 "fltk-1.3.4-1/png/pngconf.h"
 887              		.file 13 "fltk-1.3.4-1/png/png.h"
 888              		.file 14 "fltk-1.3.4-1/png/pngstruct.h"
 889              		.file 15 "fltk-1.3.4-1/png/pnginfo.h"
 890              		.file 16 "/usr/include/zconf.h"
 891              		.file 17 "/usr/include/unistd.h"
 892              		.file 18 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 893              		.file 19 "/usr/include/zlib.h"
 894              		.file 20 "fltk-1.3.4-1/png/pngpriv.h"
 895              		.file 21 "/usr/include/stdlib.h"
 896              		.file 22 "<built-in>"
 21579              		.section	.note.gnu.property,"a"
 21580              		.align 8
 21581 0000 04000000 		.long	 1f - 0f
 21582 0004 10000000 		.long	 4f - 1f
 21583 0008 05000000 		.long	 5
 21584              	0:
 21585 000c 474E5500 		.string	 "GNU"
 21586              	1:
 21587              		.align 8
 21588 0010 020000C0 		.long	 0xc0000002
 21589 0014 04000000 		.long	 3f - 2f
 21590              	2:
 21591 0018 03000000 		.long	 0x3
 21592              	3:
 21593 001c 00000000 		.align 8
 21594              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngmem.c
     /tmp/ccIQTIiT.s:7      .text.png_free.part.0:0000000000000000 png_free.part.0
     /tmp/ccIQTIiT.s:47     .text.png_destroy_png_struct:0000000000000000 png_destroy_png_struct
     /tmp/ccIQTIiT.s:160    .text.png_malloc_base:0000000000000000 png_malloc_base
     /tmp/ccIQTIiT.s:210    .text.png_malloc_array:0000000000000000 png_malloc_array
     /tmp/ccIQTIiT.s:277    .text.png_realloc_array:0000000000000000 png_realloc_array
     /tmp/ccIQTIiT.s:493    .text.png_malloc:0000000000000000 png_malloc
     /tmp/ccIQTIiT.s:550    .text.png_calloc:0000000000000000 png_calloc
     /tmp/ccIQTIiT.s:613    .text.png_malloc_default:0000000000000000 png_malloc_default
     /tmp/ccIQTIiT.s:687    .text.png_malloc_warn:0000000000000000 png_malloc_warn
     /tmp/ccIQTIiT.s:761    .text.png_free:0000000000000000 png_free
     /tmp/ccIQTIiT.s:788    .text.png_free_default:0000000000000000 png_free_default
     /tmp/ccIQTIiT.s:820    .text.png_set_mem_fn:0000000000000000 png_set_mem_fn
     /tmp/ccIQTIiT.s:850    .text.png_get_mem_ptr:0000000000000000 png_get_mem_ptr
     /tmp/ccIQTIiT.s:204    .rodata.png_malloc_array.str1.1:0000000000000000 .LC0
     /tmp/ccIQTIiT.s:271    .rodata.png_realloc_array.str1.1:0000000000000000 .LC1
     /tmp/ccIQTIiT.s:487    .rodata.png_malloc.str1.1:0000000000000000 .LC2
     /tmp/ccIQTIiT.s:607    .rodata.png_malloc_default.str1.1:0000000000000000 .LC3
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
free
png_free_jmpbuf
__stack_chk_fail
malloc
png_error
memset
memcpy
png_warning
