   1              		.file	"pngrutil.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.png_read_filter_row_sub,"ax",@progbits
   5              		.p2align 4
   7              	png_read_filter_row_sub:
   8              	.LVL0:
   9              	.LFB81:
  10              		.file 1 "fltk-1.3.4-1/png/pngrutil.c"
   1:fltk-1.3.4-1/png/pngrutil.c **** 
   2:fltk-1.3.4-1/png/pngrutil.c **** /* pngrutil.c - utilities to read a PNG file
   3:fltk-1.3.4-1/png/pngrutil.c ****  *
   4:fltk-1.3.4-1/png/pngrutil.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngrutil.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngrutil.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngrutil.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngrutil.c ****  *
   9:fltk-1.3.4-1/png/pngrutil.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngrutil.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngrutil.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngrutil.c ****  *
  13:fltk-1.3.4-1/png/pngrutil.c ****  * This file contains routines that are only called from within
  14:fltk-1.3.4-1/png/pngrutil.c ****  * libpng itself during the course of reading an image.
  15:fltk-1.3.4-1/png/pngrutil.c ****  */
  16:fltk-1.3.4-1/png/pngrutil.c **** 
  17:fltk-1.3.4-1/png/pngrutil.c **** #include "pngpriv.h"
  18:fltk-1.3.4-1/png/pngrutil.c **** 
  19:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_SUPPORTED
  20:fltk-1.3.4-1/png/pngrutil.c **** 
  21:fltk-1.3.4-1/png/pngrutil.c **** png_uint_32 PNGAPI
  22:fltk-1.3.4-1/png/pngrutil.c **** png_get_uint_31(png_const_structrp png_ptr, png_const_bytep buf)
  23:fltk-1.3.4-1/png/pngrutil.c **** {
  24:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
  25:fltk-1.3.4-1/png/pngrutil.c **** 
  26:fltk-1.3.4-1/png/pngrutil.c ****    if (uval > PNG_UINT_31_MAX)
  27:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "PNG unsigned integer out of range");
  28:fltk-1.3.4-1/png/pngrutil.c **** 
  29:fltk-1.3.4-1/png/pngrutil.c ****    return (uval);
  30:fltk-1.3.4-1/png/pngrutil.c **** }
  31:fltk-1.3.4-1/png/pngrutil.c **** 
  32:fltk-1.3.4-1/png/pngrutil.c **** #if defined(PNG_READ_gAMA_SUPPORTED) || defined(PNG_READ_cHRM_SUPPORTED)
  33:fltk-1.3.4-1/png/pngrutil.c **** /* The following is a variation on the above for use with the fixed
  34:fltk-1.3.4-1/png/pngrutil.c ****  * point values used for gAMA and cHRM.  Instead of png_error it
  35:fltk-1.3.4-1/png/pngrutil.c ****  * issues a warning and returns (-1) - an invalid value because both
  36:fltk-1.3.4-1/png/pngrutil.c ****  * gAMA and cHRM use *unsigned* integers for fixed point values.
  37:fltk-1.3.4-1/png/pngrutil.c ****  */
  38:fltk-1.3.4-1/png/pngrutil.c **** #define PNG_FIXED_ERROR (-1)
  39:fltk-1.3.4-1/png/pngrutil.c **** 
  40:fltk-1.3.4-1/png/pngrutil.c **** static png_fixed_point /* PRIVATE */
  41:fltk-1.3.4-1/png/pngrutil.c **** png_get_fixed_point(png_structrp png_ptr, png_const_bytep buf)
  42:fltk-1.3.4-1/png/pngrutil.c **** {
  43:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
  44:fltk-1.3.4-1/png/pngrutil.c **** 
  45:fltk-1.3.4-1/png/pngrutil.c ****    if (uval <= PNG_UINT_31_MAX)
  46:fltk-1.3.4-1/png/pngrutil.c ****       return (png_fixed_point)uval; /* known to be in range */
  47:fltk-1.3.4-1/png/pngrutil.c **** 
  48:fltk-1.3.4-1/png/pngrutil.c ****    /* The caller can turn off the warning by passing NULL. */
  49:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr != NULL)
  50:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "PNG fixed point integer out of range");
  51:fltk-1.3.4-1/png/pngrutil.c **** 
  52:fltk-1.3.4-1/png/pngrutil.c ****    return PNG_FIXED_ERROR;
  53:fltk-1.3.4-1/png/pngrutil.c **** }
  54:fltk-1.3.4-1/png/pngrutil.c **** #endif
  55:fltk-1.3.4-1/png/pngrutil.c **** 
  56:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_INT_FUNCTIONS_SUPPORTED
  57:fltk-1.3.4-1/png/pngrutil.c **** /* NOTE: the read macros will obscure these definitions, so that if
  58:fltk-1.3.4-1/png/pngrutil.c ****  * PNG_USE_READ_MACROS is set the library will not use them internally,
  59:fltk-1.3.4-1/png/pngrutil.c ****  * but the APIs will still be available externally.
  60:fltk-1.3.4-1/png/pngrutil.c ****  *
  61:fltk-1.3.4-1/png/pngrutil.c ****  * The parentheses around "PNGAPI function_name" in the following three
  62:fltk-1.3.4-1/png/pngrutil.c ****  * functions are necessary because they allow the macros to co-exist with
  63:fltk-1.3.4-1/png/pngrutil.c ****  * these (unused but exported) functions.
  64:fltk-1.3.4-1/png/pngrutil.c ****  */
  65:fltk-1.3.4-1/png/pngrutil.c **** 
  66:fltk-1.3.4-1/png/pngrutil.c **** /* Grab an unsigned 32-bit integer from a buffer in big-endian format. */
  67:fltk-1.3.4-1/png/pngrutil.c **** png_uint_32 (PNGAPI
  68:fltk-1.3.4-1/png/pngrutil.c **** png_get_uint_32)(png_const_bytep buf)
  69:fltk-1.3.4-1/png/pngrutil.c **** {
  70:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval =
  71:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf    )) << 24) +
  72:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 1)) << 16) +
  73:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 2)) <<  8) +
  74:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 3))      ) ;
  75:fltk-1.3.4-1/png/pngrutil.c **** 
  76:fltk-1.3.4-1/png/pngrutil.c ****    return uval;
  77:fltk-1.3.4-1/png/pngrutil.c **** }
  78:fltk-1.3.4-1/png/pngrutil.c **** 
  79:fltk-1.3.4-1/png/pngrutil.c **** /* Grab a signed 32-bit integer from a buffer in big-endian format.  The
  80:fltk-1.3.4-1/png/pngrutil.c ****  * data is stored in the PNG file in two's complement format and there
  81:fltk-1.3.4-1/png/pngrutil.c ****  * is no guarantee that a 'png_int_32' is exactly 32 bits, therefore
  82:fltk-1.3.4-1/png/pngrutil.c ****  * the following code does a two's complement to native conversion.
  83:fltk-1.3.4-1/png/pngrutil.c ****  */
  84:fltk-1.3.4-1/png/pngrutil.c **** png_int_32 (PNGAPI
  85:fltk-1.3.4-1/png/pngrutil.c **** png_get_int_32)(png_const_bytep buf)
  86:fltk-1.3.4-1/png/pngrutil.c **** {
  87:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
  88:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
  89:fltk-1.3.4-1/png/pngrutil.c ****       return uval;
  90:fltk-1.3.4-1/png/pngrutil.c **** 
  91:fltk-1.3.4-1/png/pngrutil.c ****    uval = (uval ^ 0xffffffff) + 1;  /* 2's complement: -x = ~x+1 */
  92:fltk-1.3.4-1/png/pngrutil.c ****    return -(png_int_32)uval;
  93:fltk-1.3.4-1/png/pngrutil.c **** }
  94:fltk-1.3.4-1/png/pngrutil.c **** 
  95:fltk-1.3.4-1/png/pngrutil.c **** /* Grab an unsigned 16-bit integer from a buffer in big-endian format. */
  96:fltk-1.3.4-1/png/pngrutil.c **** png_uint_16 (PNGAPI
  97:fltk-1.3.4-1/png/pngrutil.c **** png_get_uint_16)(png_const_bytep buf)
  98:fltk-1.3.4-1/png/pngrutil.c **** {
  99:fltk-1.3.4-1/png/pngrutil.c ****    /* ANSI-C requires an int value to accomodate at least 16 bits so this
 100:fltk-1.3.4-1/png/pngrutil.c ****     * works and allows the compiler not to worry about possible narrowing
 101:fltk-1.3.4-1/png/pngrutil.c ****     * on 32 bit systems.  (Pre-ANSI systems did not make integers smaller
 102:fltk-1.3.4-1/png/pngrutil.c ****     * than 16 bits either.)
 103:fltk-1.3.4-1/png/pngrutil.c ****     */
 104:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int val =
 105:fltk-1.3.4-1/png/pngrutil.c ****        ((unsigned int)(*buf) << 8) +
 106:fltk-1.3.4-1/png/pngrutil.c ****        ((unsigned int)(*(buf + 1)));
 107:fltk-1.3.4-1/png/pngrutil.c **** 
 108:fltk-1.3.4-1/png/pngrutil.c ****    return (png_uint_16)val;
 109:fltk-1.3.4-1/png/pngrutil.c **** }
 110:fltk-1.3.4-1/png/pngrutil.c **** 
 111:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_INT_FUNCTIONS */
 112:fltk-1.3.4-1/png/pngrutil.c **** 
 113:fltk-1.3.4-1/png/pngrutil.c **** /* Read and check the PNG file signature */
 114:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
 115:fltk-1.3.4-1/png/pngrutil.c **** png_read_sig(png_structrp png_ptr, png_inforp info_ptr)
 116:fltk-1.3.4-1/png/pngrutil.c **** {
 117:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t num_checked, num_to_check;
 118:fltk-1.3.4-1/png/pngrutil.c **** 
 119:fltk-1.3.4-1/png/pngrutil.c ****    /* Exit if the user application does not expect a signature. */
 120:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->sig_bytes >= 8)
 121:fltk-1.3.4-1/png/pngrutil.c ****       return;
 122:fltk-1.3.4-1/png/pngrutil.c **** 
 123:fltk-1.3.4-1/png/pngrutil.c ****    num_checked = png_ptr->sig_bytes;
 124:fltk-1.3.4-1/png/pngrutil.c ****    num_to_check = 8 - num_checked;
 125:fltk-1.3.4-1/png/pngrutil.c **** 
 126:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_IO_STATE_SUPPORTED
 127:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->io_state = PNG_IO_READING | PNG_IO_SIGNATURE;
 128:fltk-1.3.4-1/png/pngrutil.c **** #endif
 129:fltk-1.3.4-1/png/pngrutil.c **** 
 130:fltk-1.3.4-1/png/pngrutil.c ****    /* The signature must be serialized in a single I/O call. */
 131:fltk-1.3.4-1/png/pngrutil.c ****    png_read_data(png_ptr, &(info_ptr->signature[num_checked]), num_to_check);
 132:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->sig_bytes = 8;
 133:fltk-1.3.4-1/png/pngrutil.c **** 
 134:fltk-1.3.4-1/png/pngrutil.c ****    if (png_sig_cmp(info_ptr->signature, num_checked, num_to_check) != 0)
 135:fltk-1.3.4-1/png/pngrutil.c ****    {
 136:fltk-1.3.4-1/png/pngrutil.c ****       if (num_checked < 4 &&
 137:fltk-1.3.4-1/png/pngrutil.c ****           png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4))
 138:fltk-1.3.4-1/png/pngrutil.c ****          png_error(png_ptr, "Not a PNG file");
 139:fltk-1.3.4-1/png/pngrutil.c ****       else
 140:fltk-1.3.4-1/png/pngrutil.c ****          png_error(png_ptr, "PNG file corrupted by ASCII conversion");
 141:fltk-1.3.4-1/png/pngrutil.c ****    }
 142:fltk-1.3.4-1/png/pngrutil.c ****    if (num_checked < 3)
 143:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_HAVE_PNG_SIGNATURE;
 144:fltk-1.3.4-1/png/pngrutil.c **** }
 145:fltk-1.3.4-1/png/pngrutil.c **** 
 146:fltk-1.3.4-1/png/pngrutil.c **** /* Read the chunk header (length + type name).
 147:fltk-1.3.4-1/png/pngrutil.c ****  * Put the type name into png_ptr->chunk_name, and return the length.
 148:fltk-1.3.4-1/png/pngrutil.c ****  */
 149:fltk-1.3.4-1/png/pngrutil.c **** png_uint_32 /* PRIVATE */
 150:fltk-1.3.4-1/png/pngrutil.c **** png_read_chunk_header(png_structrp png_ptr)
 151:fltk-1.3.4-1/png/pngrutil.c **** {
 152:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[8];
 153:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 length;
 154:fltk-1.3.4-1/png/pngrutil.c **** 
 155:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_IO_STATE_SUPPORTED
 156:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->io_state = PNG_IO_READING | PNG_IO_CHUNK_HDR;
 157:fltk-1.3.4-1/png/pngrutil.c **** #endif
 158:fltk-1.3.4-1/png/pngrutil.c **** 
 159:fltk-1.3.4-1/png/pngrutil.c ****    /* Read the length and the chunk name.
 160:fltk-1.3.4-1/png/pngrutil.c ****     * This must be performed in a single I/O call.
 161:fltk-1.3.4-1/png/pngrutil.c ****     */
 162:fltk-1.3.4-1/png/pngrutil.c ****    png_read_data(png_ptr, buf, 8);
 163:fltk-1.3.4-1/png/pngrutil.c ****    length = png_get_uint_31(png_ptr, buf);
 164:fltk-1.3.4-1/png/pngrutil.c **** 
 165:fltk-1.3.4-1/png/pngrutil.c ****    /* Put the chunk name into png_ptr->chunk_name. */
 166:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->chunk_name = PNG_CHUNK_FROM_STRING(buf+4);
 167:fltk-1.3.4-1/png/pngrutil.c **** 
 168:fltk-1.3.4-1/png/pngrutil.c ****    png_debug2(0, "Reading %lx chunk, length = %lu",
 169:fltk-1.3.4-1/png/pngrutil.c ****        (unsigned long)png_ptr->chunk_name, (unsigned long)length);
 170:fltk-1.3.4-1/png/pngrutil.c **** 
 171:fltk-1.3.4-1/png/pngrutil.c ****    /* Reset the crc and run it over the chunk name. */
 172:fltk-1.3.4-1/png/pngrutil.c ****    png_reset_crc(png_ptr);
 173:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf + 4, 4);
 174:fltk-1.3.4-1/png/pngrutil.c **** 
 175:fltk-1.3.4-1/png/pngrutil.c ****    /* Check to see if chunk name is valid. */
 176:fltk-1.3.4-1/png/pngrutil.c ****    png_check_chunk_name(png_ptr, png_ptr->chunk_name);
 177:fltk-1.3.4-1/png/pngrutil.c **** 
 178:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_IO_STATE_SUPPORTED
 179:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->io_state = PNG_IO_READING | PNG_IO_CHUNK_DATA;
 180:fltk-1.3.4-1/png/pngrutil.c **** #endif
 181:fltk-1.3.4-1/png/pngrutil.c **** 
 182:fltk-1.3.4-1/png/pngrutil.c ****    return length;
 183:fltk-1.3.4-1/png/pngrutil.c **** }
 184:fltk-1.3.4-1/png/pngrutil.c **** 
 185:fltk-1.3.4-1/png/pngrutil.c **** /* Read data, and (optionally) run it through the CRC. */
 186:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
 187:fltk-1.3.4-1/png/pngrutil.c **** png_crc_read(png_structrp png_ptr, png_bytep buf, png_uint_32 length)
 188:fltk-1.3.4-1/png/pngrutil.c **** {
 189:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr == NULL)
 190:fltk-1.3.4-1/png/pngrutil.c ****       return;
 191:fltk-1.3.4-1/png/pngrutil.c **** 
 192:fltk-1.3.4-1/png/pngrutil.c ****    png_read_data(png_ptr, buf, length);
 193:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf, length);
 194:fltk-1.3.4-1/png/pngrutil.c **** }
 195:fltk-1.3.4-1/png/pngrutil.c **** 
 196:fltk-1.3.4-1/png/pngrutil.c **** /* Optionally skip data and then check the CRC.  Depending on whether we
 197:fltk-1.3.4-1/png/pngrutil.c ****  * are reading an ancillary or critical chunk, and how the program has set
 198:fltk-1.3.4-1/png/pngrutil.c ****  * things up, we may calculate the CRC on the data and print a message.
 199:fltk-1.3.4-1/png/pngrutil.c ****  * Returns '1' if there was a CRC error, '0' otherwise.
 200:fltk-1.3.4-1/png/pngrutil.c ****  */
 201:fltk-1.3.4-1/png/pngrutil.c **** int /* PRIVATE */
 202:fltk-1.3.4-1/png/pngrutil.c **** png_crc_finish(png_structrp png_ptr, png_uint_32 skip)
 203:fltk-1.3.4-1/png/pngrutil.c **** {
 204:fltk-1.3.4-1/png/pngrutil.c ****    /* The size of the local buffer for inflate is a good guess as to a
 205:fltk-1.3.4-1/png/pngrutil.c ****     * reasonable size to use for buffering reads from the application.
 206:fltk-1.3.4-1/png/pngrutil.c ****     */
 207:fltk-1.3.4-1/png/pngrutil.c ****    while (skip > 0)
 208:fltk-1.3.4-1/png/pngrutil.c ****    {
 209:fltk-1.3.4-1/png/pngrutil.c ****       png_uint_32 len;
 210:fltk-1.3.4-1/png/pngrutil.c ****       png_byte tmpbuf[PNG_INFLATE_BUF_SIZE];
 211:fltk-1.3.4-1/png/pngrutil.c **** 
 212:fltk-1.3.4-1/png/pngrutil.c ****       len = (sizeof tmpbuf);
 213:fltk-1.3.4-1/png/pngrutil.c ****       if (len > skip)
 214:fltk-1.3.4-1/png/pngrutil.c ****          len = skip;
 215:fltk-1.3.4-1/png/pngrutil.c ****       skip -= len;
 216:fltk-1.3.4-1/png/pngrutil.c **** 
 217:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, tmpbuf, len);
 218:fltk-1.3.4-1/png/pngrutil.c ****    }
 219:fltk-1.3.4-1/png/pngrutil.c **** 
 220:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_error(png_ptr) != 0)
 221:fltk-1.3.4-1/png/pngrutil.c ****    {
 222:fltk-1.3.4-1/png/pngrutil.c ****       if (PNG_CHUNK_ANCILLARY(png_ptr->chunk_name) != 0 ?
 223:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_NOWARN) == 0 :
 224:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->flags & PNG_FLAG_CRC_CRITICAL_USE) != 0)
 225:fltk-1.3.4-1/png/pngrutil.c ****       {
 226:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_warning(png_ptr, "CRC error");
 227:fltk-1.3.4-1/png/pngrutil.c ****       }
 228:fltk-1.3.4-1/png/pngrutil.c **** 
 229:fltk-1.3.4-1/png/pngrutil.c ****       else
 230:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "CRC error");
 231:fltk-1.3.4-1/png/pngrutil.c **** 
 232:fltk-1.3.4-1/png/pngrutil.c ****       return (1);
 233:fltk-1.3.4-1/png/pngrutil.c ****    }
 234:fltk-1.3.4-1/png/pngrutil.c **** 
 235:fltk-1.3.4-1/png/pngrutil.c ****    return (0);
 236:fltk-1.3.4-1/png/pngrutil.c **** }
 237:fltk-1.3.4-1/png/pngrutil.c **** 
 238:fltk-1.3.4-1/png/pngrutil.c **** /* Compare the CRC stored in the PNG file with that calculated by libpng from
 239:fltk-1.3.4-1/png/pngrutil.c ****  * the data it has read thus far.
 240:fltk-1.3.4-1/png/pngrutil.c ****  */
 241:fltk-1.3.4-1/png/pngrutil.c **** int /* PRIVATE */
 242:fltk-1.3.4-1/png/pngrutil.c **** png_crc_error(png_structrp png_ptr)
 243:fltk-1.3.4-1/png/pngrutil.c **** {
 244:fltk-1.3.4-1/png/pngrutil.c ****    png_byte crc_bytes[4];
 245:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 crc;
 246:fltk-1.3.4-1/png/pngrutil.c ****    int need_crc = 1;
 247:fltk-1.3.4-1/png/pngrutil.c **** 
 248:fltk-1.3.4-1/png/pngrutil.c ****    if (PNG_CHUNK_ANCILLARY(png_ptr->chunk_name) != 0)
 249:fltk-1.3.4-1/png/pngrutil.c ****    {
 250:fltk-1.3.4-1/png/pngrutil.c ****       if ((png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_MASK) ==
 251:fltk-1.3.4-1/png/pngrutil.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 252:fltk-1.3.4-1/png/pngrutil.c ****          need_crc = 0;
 253:fltk-1.3.4-1/png/pngrutil.c ****    }
 254:fltk-1.3.4-1/png/pngrutil.c **** 
 255:fltk-1.3.4-1/png/pngrutil.c ****    else /* critical */
 256:fltk-1.3.4-1/png/pngrutil.c ****    {
 257:fltk-1.3.4-1/png/pngrutil.c ****       if ((png_ptr->flags & PNG_FLAG_CRC_CRITICAL_IGNORE) != 0)
 258:fltk-1.3.4-1/png/pngrutil.c ****          need_crc = 0;
 259:fltk-1.3.4-1/png/pngrutil.c ****    }
 260:fltk-1.3.4-1/png/pngrutil.c **** 
 261:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_IO_STATE_SUPPORTED
 262:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->io_state = PNG_IO_READING | PNG_IO_CHUNK_CRC;
 263:fltk-1.3.4-1/png/pngrutil.c **** #endif
 264:fltk-1.3.4-1/png/pngrutil.c **** 
 265:fltk-1.3.4-1/png/pngrutil.c ****    /* The chunk CRC must be serialized in a single I/O call. */
 266:fltk-1.3.4-1/png/pngrutil.c ****    png_read_data(png_ptr, crc_bytes, 4);
 267:fltk-1.3.4-1/png/pngrutil.c **** 
 268:fltk-1.3.4-1/png/pngrutil.c ****    if (need_crc != 0)
 269:fltk-1.3.4-1/png/pngrutil.c ****    {
 270:fltk-1.3.4-1/png/pngrutil.c ****       crc = png_get_uint_32(crc_bytes);
 271:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 272:fltk-1.3.4-1/png/pngrutil.c ****    }
 273:fltk-1.3.4-1/png/pngrutil.c **** 
 274:fltk-1.3.4-1/png/pngrutil.c ****    else
 275:fltk-1.3.4-1/png/pngrutil.c ****       return (0);
 276:fltk-1.3.4-1/png/pngrutil.c **** }
 277:fltk-1.3.4-1/png/pngrutil.c **** 
 278:fltk-1.3.4-1/png/pngrutil.c **** #if defined(PNG_READ_iCCP_SUPPORTED) || defined(PNG_READ_iTXt_SUPPORTED) ||\
 279:fltk-1.3.4-1/png/pngrutil.c ****     defined(PNG_READ_pCAL_SUPPORTED) || defined(PNG_READ_sCAL_SUPPORTED) ||\
 280:fltk-1.3.4-1/png/pngrutil.c ****     defined(PNG_READ_sPLT_SUPPORTED) || defined(PNG_READ_tEXt_SUPPORTED) ||\
 281:fltk-1.3.4-1/png/pngrutil.c ****     defined(PNG_READ_zTXt_SUPPORTED) || defined(PNG_SEQUENTIAL_READ_SUPPORTED)
 282:fltk-1.3.4-1/png/pngrutil.c **** /* Manage the read buffer; this simply reallocates the buffer if it is not small
 283:fltk-1.3.4-1/png/pngrutil.c ****  * enough (or if it is not allocated).  The routine returns a pointer to the
 284:fltk-1.3.4-1/png/pngrutil.c ****  * buffer; if an error occurs and 'warn' is set the routine returns NULL, else
 285:fltk-1.3.4-1/png/pngrutil.c ****  * it will call png_error (via png_malloc) on failure.  (warn == 2 means
 286:fltk-1.3.4-1/png/pngrutil.c ****  * 'silent').
 287:fltk-1.3.4-1/png/pngrutil.c ****  */
 288:fltk-1.3.4-1/png/pngrutil.c **** static png_bytep
 289:fltk-1.3.4-1/png/pngrutil.c **** png_read_buffer(png_structrp png_ptr, png_alloc_size_t new_size, int warn)
 290:fltk-1.3.4-1/png/pngrutil.c **** {
 291:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer = png_ptr->read_buffer;
 292:fltk-1.3.4-1/png/pngrutil.c **** 
 293:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer != NULL && new_size > png_ptr->read_buffer_size)
 294:fltk-1.3.4-1/png/pngrutil.c ****    {
 295:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer = NULL;
 296:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer = NULL;
 297:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer_size = 0;
 298:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, buffer);
 299:fltk-1.3.4-1/png/pngrutil.c ****       buffer = NULL;
 300:fltk-1.3.4-1/png/pngrutil.c ****    }
 301:fltk-1.3.4-1/png/pngrutil.c **** 
 302:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
 303:fltk-1.3.4-1/png/pngrutil.c ****    {
 304:fltk-1.3.4-1/png/pngrutil.c ****       buffer = png_voidcast(png_bytep, png_malloc_base(png_ptr, new_size));
 305:fltk-1.3.4-1/png/pngrutil.c **** 
 306:fltk-1.3.4-1/png/pngrutil.c ****       if (buffer != NULL)
 307:fltk-1.3.4-1/png/pngrutil.c ****       {
 308:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->read_buffer = buffer;
 309:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->read_buffer_size = new_size;
 310:fltk-1.3.4-1/png/pngrutil.c ****       }
 311:fltk-1.3.4-1/png/pngrutil.c **** 
 312:fltk-1.3.4-1/png/pngrutil.c ****       else if (warn < 2) /* else silent */
 313:fltk-1.3.4-1/png/pngrutil.c ****       {
 314:fltk-1.3.4-1/png/pngrutil.c ****          if (warn != 0)
 315:fltk-1.3.4-1/png/pngrutil.c ****              png_chunk_warning(png_ptr, "insufficient memory to read chunk");
 316:fltk-1.3.4-1/png/pngrutil.c **** 
 317:fltk-1.3.4-1/png/pngrutil.c ****          else
 318:fltk-1.3.4-1/png/pngrutil.c ****              png_chunk_error(png_ptr, "insufficient memory to read chunk");
 319:fltk-1.3.4-1/png/pngrutil.c ****       }
 320:fltk-1.3.4-1/png/pngrutil.c ****    }
 321:fltk-1.3.4-1/png/pngrutil.c **** 
 322:fltk-1.3.4-1/png/pngrutil.c ****    return buffer;
 323:fltk-1.3.4-1/png/pngrutil.c **** }
 324:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 325:fltk-1.3.4-1/png/pngrutil.c **** 
 326:fltk-1.3.4-1/png/pngrutil.c **** /* png_inflate_claim: claim the zstream for some nefarious purpose that involves
 327:fltk-1.3.4-1/png/pngrutil.c ****  * decompression.  Returns Z_OK on success, else a zlib error code.  It checks
 328:fltk-1.3.4-1/png/pngrutil.c ****  * the owner but, in final release builds, just issues a warning if some other
 329:fltk-1.3.4-1/png/pngrutil.c ****  * chunk apparently owns the stream.  Prior to release it does a png_error.
 330:fltk-1.3.4-1/png/pngrutil.c ****  */
 331:fltk-1.3.4-1/png/pngrutil.c **** static int
 332:fltk-1.3.4-1/png/pngrutil.c **** png_inflate_claim(png_structrp png_ptr, png_uint_32 owner)
 333:fltk-1.3.4-1/png/pngrutil.c **** {
 334:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->zowner != 0)
 335:fltk-1.3.4-1/png/pngrutil.c ****    {
 336:fltk-1.3.4-1/png/pngrutil.c ****       char msg[64];
 337:fltk-1.3.4-1/png/pngrutil.c **** 
 338:fltk-1.3.4-1/png/pngrutil.c ****       PNG_STRING_FROM_CHUNK(msg, png_ptr->zowner);
 339:fltk-1.3.4-1/png/pngrutil.c ****       /* So the message that results is "<chunk> using zstream"; this is an
 340:fltk-1.3.4-1/png/pngrutil.c ****        * internal error, but is very useful for debugging.  i18n requirements
 341:fltk-1.3.4-1/png/pngrutil.c ****        * are minimal.
 342:fltk-1.3.4-1/png/pngrutil.c ****        */
 343:fltk-1.3.4-1/png/pngrutil.c ****       (void)png_safecat(msg, (sizeof msg), 4, " using zstream");
 344:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_LIBPNG_BUILD_BASE_TYPE >= PNG_LIBPNG_BUILD_RC
 345:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_warning(png_ptr, msg);
 346:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zowner = 0;
 347:fltk-1.3.4-1/png/pngrutil.c **** #else
 348:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, msg);
 349:fltk-1.3.4-1/png/pngrutil.c **** #endif
 350:fltk-1.3.4-1/png/pngrutil.c ****    }
 351:fltk-1.3.4-1/png/pngrutil.c **** 
 352:fltk-1.3.4-1/png/pngrutil.c ****    /* Implementation note: unlike 'png_deflate_claim' this internal function
 353:fltk-1.3.4-1/png/pngrutil.c ****     * does not take the size of the data as an argument.  Some efficiency could
 354:fltk-1.3.4-1/png/pngrutil.c ****     * be gained by using this when it is known *if* the zlib stream itself does
 355:fltk-1.3.4-1/png/pngrutil.c ****     * not record the number; however, this is an illusion: the original writer
 356:fltk-1.3.4-1/png/pngrutil.c ****     * of the PNG may have selected a lower window size, and we really must
 357:fltk-1.3.4-1/png/pngrutil.c ****     * follow that because, for systems with with limited capabilities, we
 358:fltk-1.3.4-1/png/pngrutil.c ****     * would otherwise reject the application's attempts to use a smaller window
 359:fltk-1.3.4-1/png/pngrutil.c ****     * size (zlib doesn't have an interface to say "this or lower"!).
 360:fltk-1.3.4-1/png/pngrutil.c ****     *
 361:fltk-1.3.4-1/png/pngrutil.c ****     * inflateReset2 was added to zlib 1.2.4; before this the window could not be
 362:fltk-1.3.4-1/png/pngrutil.c ****     * reset, therefore it is necessary to always allocate the maximum window
 363:fltk-1.3.4-1/png/pngrutil.c ****     * size with earlier zlibs just in case later compressed chunks need it.
 364:fltk-1.3.4-1/png/pngrutil.c ****     */
 365:fltk-1.3.4-1/png/pngrutil.c ****    {
 366:fltk-1.3.4-1/png/pngrutil.c ****       int ret; /* zlib return code */
 367:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_ZLIB_VERNUM >= 0x1240
 368:fltk-1.3.4-1/png/pngrutil.c **** 
 369:fltk-1.3.4-1/png/pngrutil.c **** # if defined(PNG_SET_OPTION_SUPPORTED) && defined(PNG_MAXIMUM_INFLATE_WINDOW)
 370:fltk-1.3.4-1/png/pngrutil.c ****       int window_bits;
 371:fltk-1.3.4-1/png/pngrutil.c **** 
 372:fltk-1.3.4-1/png/pngrutil.c ****       if (((png_ptr->options >> PNG_MAXIMUM_INFLATE_WINDOW) & 3) ==
 373:fltk-1.3.4-1/png/pngrutil.c ****           PNG_OPTION_ON)
 374:fltk-1.3.4-1/png/pngrutil.c ****          window_bits = 15;
 375:fltk-1.3.4-1/png/pngrutil.c **** 
 376:fltk-1.3.4-1/png/pngrutil.c ****       else
 377:fltk-1.3.4-1/png/pngrutil.c ****          window_bits = 0;
 378:fltk-1.3.4-1/png/pngrutil.c **** # else
 379:fltk-1.3.4-1/png/pngrutil.c **** #   define window_bits 0
 380:fltk-1.3.4-1/png/pngrutil.c **** # endif
 381:fltk-1.3.4-1/png/pngrutil.c **** #endif
 382:fltk-1.3.4-1/png/pngrutil.c **** 
 383:fltk-1.3.4-1/png/pngrutil.c ****       /* Set this for safety, just in case the previous owner left pointers to
 384:fltk-1.3.4-1/png/pngrutil.c ****        * memory allocations.
 385:fltk-1.3.4-1/png/pngrutil.c ****        */
 386:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_in = NULL;
 387:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_in = 0;
 388:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_out = NULL;
 389:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0;
 390:fltk-1.3.4-1/png/pngrutil.c **** 
 391:fltk-1.3.4-1/png/pngrutil.c ****       if ((png_ptr->flags & PNG_FLAG_ZSTREAM_INITIALIZED) != 0)
 392:fltk-1.3.4-1/png/pngrutil.c ****       {
 393:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_ZLIB_VERNUM < 0x1240
 394:fltk-1.3.4-1/png/pngrutil.c ****          ret = inflateReset(&png_ptr->zstream);
 395:fltk-1.3.4-1/png/pngrutil.c **** #else
 396:fltk-1.3.4-1/png/pngrutil.c ****          ret = inflateReset2(&png_ptr->zstream, window_bits);
 397:fltk-1.3.4-1/png/pngrutil.c **** #endif
 398:fltk-1.3.4-1/png/pngrutil.c ****       }
 399:fltk-1.3.4-1/png/pngrutil.c **** 
 400:fltk-1.3.4-1/png/pngrutil.c ****       else
 401:fltk-1.3.4-1/png/pngrutil.c ****       {
 402:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_ZLIB_VERNUM < 0x1240
 403:fltk-1.3.4-1/png/pngrutil.c ****          ret = inflateInit(&png_ptr->zstream);
 404:fltk-1.3.4-1/png/pngrutil.c **** #else
 405:fltk-1.3.4-1/png/pngrutil.c ****          ret = inflateInit2(&png_ptr->zstream, window_bits);
 406:fltk-1.3.4-1/png/pngrutil.c **** #endif
 407:fltk-1.3.4-1/png/pngrutil.c **** 
 408:fltk-1.3.4-1/png/pngrutil.c ****          if (ret == Z_OK)
 409:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->flags |= PNG_FLAG_ZSTREAM_INITIALIZED;
 410:fltk-1.3.4-1/png/pngrutil.c ****       }
 411:fltk-1.3.4-1/png/pngrutil.c **** 
 412:fltk-1.3.4-1/png/pngrutil.c ****       if (ret == Z_OK)
 413:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zowner = owner;
 414:fltk-1.3.4-1/png/pngrutil.c **** 
 415:fltk-1.3.4-1/png/pngrutil.c ****       else
 416:fltk-1.3.4-1/png/pngrutil.c ****          png_zstream_error(png_ptr, ret);
 417:fltk-1.3.4-1/png/pngrutil.c **** 
 418:fltk-1.3.4-1/png/pngrutil.c ****       return ret;
 419:fltk-1.3.4-1/png/pngrutil.c ****    }
 420:fltk-1.3.4-1/png/pngrutil.c **** 
 421:fltk-1.3.4-1/png/pngrutil.c **** #ifdef window_bits
 422:fltk-1.3.4-1/png/pngrutil.c **** # undef window_bits
 423:fltk-1.3.4-1/png/pngrutil.c **** #endif
 424:fltk-1.3.4-1/png/pngrutil.c **** }
 425:fltk-1.3.4-1/png/pngrutil.c **** 
 426:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_COMPRESSED_TEXT_SUPPORTED
 427:fltk-1.3.4-1/png/pngrutil.c **** /* png_inflate now returns zlib error codes including Z_OK and Z_STREAM_END to
 428:fltk-1.3.4-1/png/pngrutil.c ****  * allow the caller to do multiple calls if required.  If the 'finish' flag is
 429:fltk-1.3.4-1/png/pngrutil.c ****  * set Z_FINISH will be passed to the final inflate() call and Z_STREAM_END must
 430:fltk-1.3.4-1/png/pngrutil.c ****  * be returned or there has been a problem, otherwise Z_SYNC_FLUSH is used and
 431:fltk-1.3.4-1/png/pngrutil.c ****  * Z_OK or Z_STREAM_END will be returned on success.
 432:fltk-1.3.4-1/png/pngrutil.c ****  *
 433:fltk-1.3.4-1/png/pngrutil.c ****  * The input and output sizes are updated to the actual amounts of data consumed
 434:fltk-1.3.4-1/png/pngrutil.c ****  * or written, not the amount available (as in a z_stream).  The data pointers
 435:fltk-1.3.4-1/png/pngrutil.c ****  * are not changed, so the next input is (data+input_size) and the next
 436:fltk-1.3.4-1/png/pngrutil.c ****  * available output is (output+output_size).
 437:fltk-1.3.4-1/png/pngrutil.c ****  */
 438:fltk-1.3.4-1/png/pngrutil.c **** static int
 439:fltk-1.3.4-1/png/pngrutil.c **** png_inflate(png_structrp png_ptr, png_uint_32 owner, int finish,
 440:fltk-1.3.4-1/png/pngrutil.c ****     /* INPUT: */ png_const_bytep input, png_uint_32p input_size_ptr,
 441:fltk-1.3.4-1/png/pngrutil.c ****     /* OUTPUT: */ png_bytep output, png_alloc_size_t *output_size_ptr)
 442:fltk-1.3.4-1/png/pngrutil.c **** {
 443:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->zowner == owner) /* Else not claimed */
 444:fltk-1.3.4-1/png/pngrutil.c ****    {
 445:fltk-1.3.4-1/png/pngrutil.c ****       int ret;
 446:fltk-1.3.4-1/png/pngrutil.c ****       png_alloc_size_t avail_out = *output_size_ptr;
 447:fltk-1.3.4-1/png/pngrutil.c ****       png_uint_32 avail_in = *input_size_ptr;
 448:fltk-1.3.4-1/png/pngrutil.c **** 
 449:fltk-1.3.4-1/png/pngrutil.c ****       /* zlib can't necessarily handle more than 65535 bytes at once (i.e. it
 450:fltk-1.3.4-1/png/pngrutil.c ****        * can't even necessarily handle 65536 bytes) because the type uInt is
 451:fltk-1.3.4-1/png/pngrutil.c ****        * "16 bits or more".  Consequently it is necessary to chunk the input to
 452:fltk-1.3.4-1/png/pngrutil.c ****        * zlib.  This code uses ZLIB_IO_MAX, from pngpriv.h, as the maximum (the
 453:fltk-1.3.4-1/png/pngrutil.c ****        * maximum value that can be stored in a uInt.)  It is possible to set
 454:fltk-1.3.4-1/png/pngrutil.c ****        * ZLIB_IO_MAX to a lower value in pngpriv.h and this may sometimes have
 455:fltk-1.3.4-1/png/pngrutil.c ****        * a performance advantage, because it reduces the amount of data accessed
 456:fltk-1.3.4-1/png/pngrutil.c ****        * at each step and that may give the OS more time to page it in.
 457:fltk-1.3.4-1/png/pngrutil.c ****        */
 458:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_in = PNGZ_INPUT_CAST(input);
 459:fltk-1.3.4-1/png/pngrutil.c ****       /* avail_in and avail_out are set below from 'size' */
 460:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_in = 0;
 461:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0;
 462:fltk-1.3.4-1/png/pngrutil.c **** 
 463:fltk-1.3.4-1/png/pngrutil.c ****       /* Read directly into the output if it is available (this is set to
 464:fltk-1.3.4-1/png/pngrutil.c ****        * a local buffer below if output is NULL).
 465:fltk-1.3.4-1/png/pngrutil.c ****        */
 466:fltk-1.3.4-1/png/pngrutil.c ****       if (output != NULL)
 467:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = output;
 468:fltk-1.3.4-1/png/pngrutil.c **** 
 469:fltk-1.3.4-1/png/pngrutil.c ****       do
 470:fltk-1.3.4-1/png/pngrutil.c ****       {
 471:fltk-1.3.4-1/png/pngrutil.c ****          uInt avail;
 472:fltk-1.3.4-1/png/pngrutil.c ****          Byte local_buffer[PNG_INFLATE_BUF_SIZE];
 473:fltk-1.3.4-1/png/pngrutil.c **** 
 474:fltk-1.3.4-1/png/pngrutil.c ****          /* zlib INPUT BUFFER */
 475:fltk-1.3.4-1/png/pngrutil.c ****          /* The setting of 'avail_in' used to be outside the loop; by setting it
 476:fltk-1.3.4-1/png/pngrutil.c ****           * inside it is possible to chunk the input to zlib and simply rely on
 477:fltk-1.3.4-1/png/pngrutil.c ****           * zlib to advance the 'next_in' pointer.  This allows arbitrary
 478:fltk-1.3.4-1/png/pngrutil.c ****           * amounts of data to be passed through zlib at the unavoidable cost of
 479:fltk-1.3.4-1/png/pngrutil.c ****           * requiring a window save (memcpy of up to 32768 output bytes)
 480:fltk-1.3.4-1/png/pngrutil.c ****           * every ZLIB_IO_MAX input bytes.
 481:fltk-1.3.4-1/png/pngrutil.c ****           */
 482:fltk-1.3.4-1/png/pngrutil.c ****          avail_in += png_ptr->zstream.avail_in; /* not consumed last time */
 483:fltk-1.3.4-1/png/pngrutil.c **** 
 484:fltk-1.3.4-1/png/pngrutil.c ****          avail = ZLIB_IO_MAX;
 485:fltk-1.3.4-1/png/pngrutil.c **** 
 486:fltk-1.3.4-1/png/pngrutil.c ****          if (avail_in < avail)
 487:fltk-1.3.4-1/png/pngrutil.c ****             avail = (uInt)avail_in; /* safe: < than ZLIB_IO_MAX */
 488:fltk-1.3.4-1/png/pngrutil.c **** 
 489:fltk-1.3.4-1/png/pngrutil.c ****          avail_in -= avail;
 490:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail;
 491:fltk-1.3.4-1/png/pngrutil.c **** 
 492:fltk-1.3.4-1/png/pngrutil.c ****          /* zlib OUTPUT BUFFER */
 493:fltk-1.3.4-1/png/pngrutil.c ****          avail_out += png_ptr->zstream.avail_out; /* not written last time */
 494:fltk-1.3.4-1/png/pngrutil.c **** 
 495:fltk-1.3.4-1/png/pngrutil.c ****          avail = ZLIB_IO_MAX; /* maximum zlib can process */
 496:fltk-1.3.4-1/png/pngrutil.c **** 
 497:fltk-1.3.4-1/png/pngrutil.c ****          if (output == NULL)
 498:fltk-1.3.4-1/png/pngrutil.c ****          {
 499:fltk-1.3.4-1/png/pngrutil.c ****             /* Reset the output buffer each time round if output is NULL and
 500:fltk-1.3.4-1/png/pngrutil.c ****              * make available the full buffer, up to 'remaining_space'
 501:fltk-1.3.4-1/png/pngrutil.c ****              */
 502:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->zstream.next_out = local_buffer;
 503:fltk-1.3.4-1/png/pngrutil.c ****             if ((sizeof local_buffer) < avail)
 504:fltk-1.3.4-1/png/pngrutil.c ****                avail = (sizeof local_buffer);
 505:fltk-1.3.4-1/png/pngrutil.c ****          }
 506:fltk-1.3.4-1/png/pngrutil.c **** 
 507:fltk-1.3.4-1/png/pngrutil.c ****          if (avail_out < avail)
 508:fltk-1.3.4-1/png/pngrutil.c ****             avail = (uInt)avail_out; /* safe: < ZLIB_IO_MAX */
 509:fltk-1.3.4-1/png/pngrutil.c **** 
 510:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_out = avail;
 511:fltk-1.3.4-1/png/pngrutil.c ****          avail_out -= avail;
 512:fltk-1.3.4-1/png/pngrutil.c **** 
 513:fltk-1.3.4-1/png/pngrutil.c ****          /* zlib inflate call */
 514:fltk-1.3.4-1/png/pngrutil.c ****          /* In fact 'avail_out' may be 0 at this point, that happens at the end
 515:fltk-1.3.4-1/png/pngrutil.c ****           * of the read when the final LZ end code was not passed at the end of
 516:fltk-1.3.4-1/png/pngrutil.c ****           * the previous chunk of input data.  Tell zlib if we have reached the
 517:fltk-1.3.4-1/png/pngrutil.c ****           * end of the output buffer.
 518:fltk-1.3.4-1/png/pngrutil.c ****           */
 519:fltk-1.3.4-1/png/pngrutil.c ****          ret = inflate(&png_ptr->zstream, avail_out > 0 ? Z_NO_FLUSH :
 520:fltk-1.3.4-1/png/pngrutil.c ****              (finish ? Z_FINISH : Z_SYNC_FLUSH));
 521:fltk-1.3.4-1/png/pngrutil.c ****       } while (ret == Z_OK);
 522:fltk-1.3.4-1/png/pngrutil.c **** 
 523:fltk-1.3.4-1/png/pngrutil.c ****       /* For safety kill the local buffer pointer now */
 524:fltk-1.3.4-1/png/pngrutil.c ****       if (output == NULL)
 525:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = NULL;
 526:fltk-1.3.4-1/png/pngrutil.c **** 
 527:fltk-1.3.4-1/png/pngrutil.c ****       /* Claw back the 'size' and 'remaining_space' byte counts. */
 528:fltk-1.3.4-1/png/pngrutil.c ****       avail_in += png_ptr->zstream.avail_in;
 529:fltk-1.3.4-1/png/pngrutil.c ****       avail_out += png_ptr->zstream.avail_out;
 530:fltk-1.3.4-1/png/pngrutil.c **** 
 531:fltk-1.3.4-1/png/pngrutil.c ****       /* Update the input and output sizes; the updated values are the amount
 532:fltk-1.3.4-1/png/pngrutil.c ****        * consumed or written, effectively the inverse of what zlib uses.
 533:fltk-1.3.4-1/png/pngrutil.c ****        */
 534:fltk-1.3.4-1/png/pngrutil.c ****       if (avail_out > 0)
 535:fltk-1.3.4-1/png/pngrutil.c ****          *output_size_ptr -= avail_out;
 536:fltk-1.3.4-1/png/pngrutil.c **** 
 537:fltk-1.3.4-1/png/pngrutil.c ****       if (avail_in > 0)
 538:fltk-1.3.4-1/png/pngrutil.c ****          *input_size_ptr -= avail_in;
 539:fltk-1.3.4-1/png/pngrutil.c **** 
 540:fltk-1.3.4-1/png/pngrutil.c ****       /* Ensure png_ptr->zstream.msg is set (even in the success case!) */
 541:fltk-1.3.4-1/png/pngrutil.c ****       png_zstream_error(png_ptr, ret);
 542:fltk-1.3.4-1/png/pngrutil.c ****       return ret;
 543:fltk-1.3.4-1/png/pngrutil.c ****    }
 544:fltk-1.3.4-1/png/pngrutil.c **** 
 545:fltk-1.3.4-1/png/pngrutil.c ****    else
 546:fltk-1.3.4-1/png/pngrutil.c ****    {
 547:fltk-1.3.4-1/png/pngrutil.c ****       /* This is a bad internal error.  The recovery assigns to the zstream msg
 548:fltk-1.3.4-1/png/pngrutil.c ****        * pointer, which is not owned by the caller, but this is safe; it's only
 549:fltk-1.3.4-1/png/pngrutil.c ****        * used on errors!
 550:fltk-1.3.4-1/png/pngrutil.c ****        */
 551:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.msg = PNGZ_MSG_CAST("zstream unclaimed");
 552:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 553:fltk-1.3.4-1/png/pngrutil.c ****    }
 554:fltk-1.3.4-1/png/pngrutil.c **** }
 555:fltk-1.3.4-1/png/pngrutil.c **** 
 556:fltk-1.3.4-1/png/pngrutil.c **** /*
 557:fltk-1.3.4-1/png/pngrutil.c ****  * Decompress trailing data in a chunk.  The assumption is that read_buffer
 558:fltk-1.3.4-1/png/pngrutil.c ****  * points at an allocated area holding the contents of a chunk with a
 559:fltk-1.3.4-1/png/pngrutil.c ****  * trailing compressed part.  What we get back is an allocated area
 560:fltk-1.3.4-1/png/pngrutil.c ****  * holding the original prefix part and an uncompressed version of the
 561:fltk-1.3.4-1/png/pngrutil.c ****  * trailing part (the malloc area passed in is freed).
 562:fltk-1.3.4-1/png/pngrutil.c ****  */
 563:fltk-1.3.4-1/png/pngrutil.c **** static int
 564:fltk-1.3.4-1/png/pngrutil.c **** png_decompress_chunk(png_structrp png_ptr,
 565:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 chunklength, png_uint_32 prefix_size,
 566:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t *newlength /* must be initialized to the maximum! */,
 567:fltk-1.3.4-1/png/pngrutil.c ****    int terminate /*add a '\0' to the end of the uncompressed data*/)
 568:fltk-1.3.4-1/png/pngrutil.c **** {
 569:fltk-1.3.4-1/png/pngrutil.c ****    /* TODO: implement different limits for different types of chunk.
 570:fltk-1.3.4-1/png/pngrutil.c ****     *
 571:fltk-1.3.4-1/png/pngrutil.c ****     * The caller supplies *newlength set to the maximum length of the
 572:fltk-1.3.4-1/png/pngrutil.c ****     * uncompressed data, but this routine allocates space for the prefix and
 573:fltk-1.3.4-1/png/pngrutil.c ****     * maybe a '\0' terminator too.  We have to assume that 'prefix_size' is
 574:fltk-1.3.4-1/png/pngrutil.c ****     * limited only by the maximum chunk size.
 575:fltk-1.3.4-1/png/pngrutil.c ****     */
 576:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t limit = PNG_SIZE_MAX;
 577:fltk-1.3.4-1/png/pngrutil.c **** 
 578:fltk-1.3.4-1/png/pngrutil.c **** # ifdef PNG_SET_CHUNK_MALLOC_LIMIT_SUPPORTED
 579:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->user_chunk_malloc_max > 0 &&
 580:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr->user_chunk_malloc_max < limit)
 581:fltk-1.3.4-1/png/pngrutil.c ****       limit = png_ptr->user_chunk_malloc_max;
 582:fltk-1.3.4-1/png/pngrutil.c **** # elif PNG_USER_CHUNK_MALLOC_MAX > 0
 583:fltk-1.3.4-1/png/pngrutil.c ****    if (PNG_USER_CHUNK_MALLOC_MAX < limit)
 584:fltk-1.3.4-1/png/pngrutil.c ****       limit = PNG_USER_CHUNK_MALLOC_MAX;
 585:fltk-1.3.4-1/png/pngrutil.c **** # endif
 586:fltk-1.3.4-1/png/pngrutil.c **** 
 587:fltk-1.3.4-1/png/pngrutil.c ****    if (limit >= prefix_size + (terminate != 0))
 588:fltk-1.3.4-1/png/pngrutil.c ****    {
 589:fltk-1.3.4-1/png/pngrutil.c ****       int ret;
 590:fltk-1.3.4-1/png/pngrutil.c **** 
 591:fltk-1.3.4-1/png/pngrutil.c ****       limit -= prefix_size + (terminate != 0);
 592:fltk-1.3.4-1/png/pngrutil.c **** 
 593:fltk-1.3.4-1/png/pngrutil.c ****       if (limit < *newlength)
 594:fltk-1.3.4-1/png/pngrutil.c ****          *newlength = limit;
 595:fltk-1.3.4-1/png/pngrutil.c **** 
 596:fltk-1.3.4-1/png/pngrutil.c ****       /* Now try to claim the stream. */
 597:fltk-1.3.4-1/png/pngrutil.c ****       ret = png_inflate_claim(png_ptr, png_ptr->chunk_name);
 598:fltk-1.3.4-1/png/pngrutil.c **** 
 599:fltk-1.3.4-1/png/pngrutil.c ****       if (ret == Z_OK)
 600:fltk-1.3.4-1/png/pngrutil.c ****       {
 601:fltk-1.3.4-1/png/pngrutil.c ****          png_uint_32 lzsize = chunklength - prefix_size;
 602:fltk-1.3.4-1/png/pngrutil.c **** 
 603:fltk-1.3.4-1/png/pngrutil.c ****          ret = png_inflate(png_ptr, png_ptr->chunk_name, 1/*finish*/,
 604:fltk-1.3.4-1/png/pngrutil.c ****             /* input: */ png_ptr->read_buffer + prefix_size, &lzsize,
 605:fltk-1.3.4-1/png/pngrutil.c ****             /* output: */ NULL, newlength);
 606:fltk-1.3.4-1/png/pngrutil.c **** 
 607:fltk-1.3.4-1/png/pngrutil.c ****          if (ret == Z_STREAM_END)
 608:fltk-1.3.4-1/png/pngrutil.c ****          {
 609:fltk-1.3.4-1/png/pngrutil.c ****             /* Use 'inflateReset' here, not 'inflateReset2' because this
 610:fltk-1.3.4-1/png/pngrutil.c ****              * preserves the previously decided window size (otherwise it would
 611:fltk-1.3.4-1/png/pngrutil.c ****              * be necessary to store the previous window size.)  In practice
 612:fltk-1.3.4-1/png/pngrutil.c ****              * this doesn't matter anyway, because png_inflate will call inflate
 613:fltk-1.3.4-1/png/pngrutil.c ****              * with Z_FINISH in almost all cases, so the window will not be
 614:fltk-1.3.4-1/png/pngrutil.c ****              * maintained.
 615:fltk-1.3.4-1/png/pngrutil.c ****              */
 616:fltk-1.3.4-1/png/pngrutil.c ****             if (inflateReset(&png_ptr->zstream) == Z_OK)
 617:fltk-1.3.4-1/png/pngrutil.c ****             {
 618:fltk-1.3.4-1/png/pngrutil.c ****                /* Because of the limit checks above we know that the new,
 619:fltk-1.3.4-1/png/pngrutil.c ****                 * expanded, size will fit in a size_t (let alone an
 620:fltk-1.3.4-1/png/pngrutil.c ****                 * png_alloc_size_t).  Use png_malloc_base here to avoid an
 621:fltk-1.3.4-1/png/pngrutil.c ****                 * extra OOM message.
 622:fltk-1.3.4-1/png/pngrutil.c ****                 */
 623:fltk-1.3.4-1/png/pngrutil.c ****                png_alloc_size_t new_size = *newlength;
 624:fltk-1.3.4-1/png/pngrutil.c ****                png_alloc_size_t buffer_size = prefix_size + new_size +
 625:fltk-1.3.4-1/png/pngrutil.c ****                   (terminate != 0);
 626:fltk-1.3.4-1/png/pngrutil.c ****                png_bytep text = png_voidcast(png_bytep, png_malloc_base(png_ptr,
 627:fltk-1.3.4-1/png/pngrutil.c ****                   buffer_size));
 628:fltk-1.3.4-1/png/pngrutil.c **** 
 629:fltk-1.3.4-1/png/pngrutil.c ****                if (text != NULL)
 630:fltk-1.3.4-1/png/pngrutil.c ****                {
 631:fltk-1.3.4-1/png/pngrutil.c ****                   ret = png_inflate(png_ptr, png_ptr->chunk_name, 1/*finish*/,
 632:fltk-1.3.4-1/png/pngrutil.c ****                      png_ptr->read_buffer + prefix_size, &lzsize,
 633:fltk-1.3.4-1/png/pngrutil.c ****                      text + prefix_size, newlength);
 634:fltk-1.3.4-1/png/pngrutil.c **** 
 635:fltk-1.3.4-1/png/pngrutil.c ****                   if (ret == Z_STREAM_END)
 636:fltk-1.3.4-1/png/pngrutil.c ****                   {
 637:fltk-1.3.4-1/png/pngrutil.c ****                      if (new_size == *newlength)
 638:fltk-1.3.4-1/png/pngrutil.c ****                      {
 639:fltk-1.3.4-1/png/pngrutil.c ****                         if (terminate != 0)
 640:fltk-1.3.4-1/png/pngrutil.c ****                            text[prefix_size + *newlength] = 0;
 641:fltk-1.3.4-1/png/pngrutil.c **** 
 642:fltk-1.3.4-1/png/pngrutil.c ****                         if (prefix_size > 0)
 643:fltk-1.3.4-1/png/pngrutil.c ****                            memcpy(text, png_ptr->read_buffer, prefix_size);
 644:fltk-1.3.4-1/png/pngrutil.c **** 
 645:fltk-1.3.4-1/png/pngrutil.c ****                         {
 646:fltk-1.3.4-1/png/pngrutil.c ****                            png_bytep old_ptr = png_ptr->read_buffer;
 647:fltk-1.3.4-1/png/pngrutil.c **** 
 648:fltk-1.3.4-1/png/pngrutil.c ****                            png_ptr->read_buffer = text;
 649:fltk-1.3.4-1/png/pngrutil.c ****                            png_ptr->read_buffer_size = buffer_size;
 650:fltk-1.3.4-1/png/pngrutil.c ****                            text = old_ptr; /* freed below */
 651:fltk-1.3.4-1/png/pngrutil.c ****                         }
 652:fltk-1.3.4-1/png/pngrutil.c ****                      }
 653:fltk-1.3.4-1/png/pngrutil.c **** 
 654:fltk-1.3.4-1/png/pngrutil.c ****                      else
 655:fltk-1.3.4-1/png/pngrutil.c ****                      {
 656:fltk-1.3.4-1/png/pngrutil.c ****                         /* The size changed on the second read, there can be no
 657:fltk-1.3.4-1/png/pngrutil.c ****                          * guarantee that anything is correct at this point.
 658:fltk-1.3.4-1/png/pngrutil.c ****                          * The 'msg' pointer has been set to "unexpected end of
 659:fltk-1.3.4-1/png/pngrutil.c ****                          * LZ stream", which is fine, but return an error code
 660:fltk-1.3.4-1/png/pngrutil.c ****                          * that the caller won't accept.
 661:fltk-1.3.4-1/png/pngrutil.c ****                          */
 662:fltk-1.3.4-1/png/pngrutil.c ****                         ret = PNG_UNEXPECTED_ZLIB_RETURN;
 663:fltk-1.3.4-1/png/pngrutil.c ****                      }
 664:fltk-1.3.4-1/png/pngrutil.c ****                   }
 665:fltk-1.3.4-1/png/pngrutil.c **** 
 666:fltk-1.3.4-1/png/pngrutil.c ****                   else if (ret == Z_OK)
 667:fltk-1.3.4-1/png/pngrutil.c ****                      ret = PNG_UNEXPECTED_ZLIB_RETURN; /* for safety */
 668:fltk-1.3.4-1/png/pngrutil.c **** 
 669:fltk-1.3.4-1/png/pngrutil.c ****                   /* Free the text pointer (this is the old read_buffer on
 670:fltk-1.3.4-1/png/pngrutil.c ****                    * success)
 671:fltk-1.3.4-1/png/pngrutil.c ****                    */
 672:fltk-1.3.4-1/png/pngrutil.c ****                   png_free(png_ptr, text);
 673:fltk-1.3.4-1/png/pngrutil.c ****                   text = NULL;
 674:fltk-1.3.4-1/png/pngrutil.c **** 
 675:fltk-1.3.4-1/png/pngrutil.c ****                   /* This really is very benign, but it's still an error because
 676:fltk-1.3.4-1/png/pngrutil.c ****                    * the extra space may otherwise be used as a Trojan Horse.
 677:fltk-1.3.4-1/png/pngrutil.c ****                    */
 678:fltk-1.3.4-1/png/pngrutil.c ****                   if (ret == Z_STREAM_END &&
 679:fltk-1.3.4-1/png/pngrutil.c ****                      chunklength - prefix_size != lzsize)
 680:fltk-1.3.4-1/png/pngrutil.c ****                      png_chunk_benign_error(png_ptr, "extra compressed data");
 681:fltk-1.3.4-1/png/pngrutil.c ****                }
 682:fltk-1.3.4-1/png/pngrutil.c **** 
 683:fltk-1.3.4-1/png/pngrutil.c ****                else
 684:fltk-1.3.4-1/png/pngrutil.c ****                {
 685:fltk-1.3.4-1/png/pngrutil.c ****                   /* Out of memory allocating the buffer */
 686:fltk-1.3.4-1/png/pngrutil.c ****                   ret = Z_MEM_ERROR;
 687:fltk-1.3.4-1/png/pngrutil.c ****                   png_zstream_error(png_ptr, Z_MEM_ERROR);
 688:fltk-1.3.4-1/png/pngrutil.c ****                }
 689:fltk-1.3.4-1/png/pngrutil.c ****             }
 690:fltk-1.3.4-1/png/pngrutil.c **** 
 691:fltk-1.3.4-1/png/pngrutil.c ****             else
 692:fltk-1.3.4-1/png/pngrutil.c ****             {
 693:fltk-1.3.4-1/png/pngrutil.c ****                /* inflateReset failed, store the error message */
 694:fltk-1.3.4-1/png/pngrutil.c ****                png_zstream_error(png_ptr, ret);
 695:fltk-1.3.4-1/png/pngrutil.c **** 
 696:fltk-1.3.4-1/png/pngrutil.c ****                if (ret == Z_STREAM_END)
 697:fltk-1.3.4-1/png/pngrutil.c ****                   ret = PNG_UNEXPECTED_ZLIB_RETURN;
 698:fltk-1.3.4-1/png/pngrutil.c ****             }
 699:fltk-1.3.4-1/png/pngrutil.c ****          }
 700:fltk-1.3.4-1/png/pngrutil.c **** 
 701:fltk-1.3.4-1/png/pngrutil.c ****          else if (ret == Z_OK)
 702:fltk-1.3.4-1/png/pngrutil.c ****             ret = PNG_UNEXPECTED_ZLIB_RETURN;
 703:fltk-1.3.4-1/png/pngrutil.c **** 
 704:fltk-1.3.4-1/png/pngrutil.c ****          /* Release the claimed stream */
 705:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zowner = 0;
 706:fltk-1.3.4-1/png/pngrutil.c ****       }
 707:fltk-1.3.4-1/png/pngrutil.c **** 
 708:fltk-1.3.4-1/png/pngrutil.c ****       else /* the claim failed */ if (ret == Z_STREAM_END) /* impossible! */
 709:fltk-1.3.4-1/png/pngrutil.c ****          ret = PNG_UNEXPECTED_ZLIB_RETURN;
 710:fltk-1.3.4-1/png/pngrutil.c **** 
 711:fltk-1.3.4-1/png/pngrutil.c ****       return ret;
 712:fltk-1.3.4-1/png/pngrutil.c ****    }
 713:fltk-1.3.4-1/png/pngrutil.c **** 
 714:fltk-1.3.4-1/png/pngrutil.c ****    else
 715:fltk-1.3.4-1/png/pngrutil.c ****    {
 716:fltk-1.3.4-1/png/pngrutil.c ****       /* Application/configuration limits exceeded */
 717:fltk-1.3.4-1/png/pngrutil.c ****       png_zstream_error(png_ptr, Z_MEM_ERROR);
 718:fltk-1.3.4-1/png/pngrutil.c ****       return Z_MEM_ERROR;
 719:fltk-1.3.4-1/png/pngrutil.c ****    }
 720:fltk-1.3.4-1/png/pngrutil.c **** }
 721:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_COMPRESSED_TEXT */
 722:fltk-1.3.4-1/png/pngrutil.c **** 
 723:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_iCCP_SUPPORTED
 724:fltk-1.3.4-1/png/pngrutil.c **** /* Perform a partial read and decompress, producing 'avail_out' bytes and
 725:fltk-1.3.4-1/png/pngrutil.c ****  * reading from the current chunk as required.
 726:fltk-1.3.4-1/png/pngrutil.c ****  */
 727:fltk-1.3.4-1/png/pngrutil.c **** static int
 728:fltk-1.3.4-1/png/pngrutil.c **** png_inflate_read(png_structrp png_ptr, png_bytep read_buffer, uInt read_size,
 729:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size,
 730:fltk-1.3.4-1/png/pngrutil.c ****    int finish)
 731:fltk-1.3.4-1/png/pngrutil.c **** {
 732:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->zowner == png_ptr->chunk_name)
 733:fltk-1.3.4-1/png/pngrutil.c ****    {
 734:fltk-1.3.4-1/png/pngrutil.c ****       int ret;
 735:fltk-1.3.4-1/png/pngrutil.c **** 
 736:fltk-1.3.4-1/png/pngrutil.c ****       /* next_in and avail_in must have been initialized by the caller. */
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_out = next_out;
 738:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 739:fltk-1.3.4-1/png/pngrutil.c **** 
 740:fltk-1.3.4-1/png/pngrutil.c ****       do
 741:fltk-1.3.4-1/png/pngrutil.c ****       {
 742:fltk-1.3.4-1/png/pngrutil.c ****          if (png_ptr->zstream.avail_in == 0)
 743:fltk-1.3.4-1/png/pngrutil.c ****          {
 744:fltk-1.3.4-1/png/pngrutil.c ****             if (read_size > *chunk_bytes)
 745:fltk-1.3.4-1/png/pngrutil.c ****                read_size = (uInt)*chunk_bytes;
 746:fltk-1.3.4-1/png/pngrutil.c ****             *chunk_bytes -= read_size;
 747:fltk-1.3.4-1/png/pngrutil.c **** 
 748:fltk-1.3.4-1/png/pngrutil.c ****             if (read_size > 0)
 749:fltk-1.3.4-1/png/pngrutil.c ****                png_crc_read(png_ptr, read_buffer, read_size);
 750:fltk-1.3.4-1/png/pngrutil.c **** 
 751:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->zstream.next_in = read_buffer;
 752:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->zstream.avail_in = read_size;
 753:fltk-1.3.4-1/png/pngrutil.c ****          }
 754:fltk-1.3.4-1/png/pngrutil.c **** 
 755:fltk-1.3.4-1/png/pngrutil.c ****          if (png_ptr->zstream.avail_out == 0)
 756:fltk-1.3.4-1/png/pngrutil.c ****          {
 757:fltk-1.3.4-1/png/pngrutil.c ****             uInt avail = ZLIB_IO_MAX;
 758:fltk-1.3.4-1/png/pngrutil.c ****             if (avail > *out_size)
 759:fltk-1.3.4-1/png/pngrutil.c ****                avail = (uInt)*out_size;
 760:fltk-1.3.4-1/png/pngrutil.c ****             *out_size -= avail;
 761:fltk-1.3.4-1/png/pngrutil.c **** 
 762:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->zstream.avail_out = avail;
 763:fltk-1.3.4-1/png/pngrutil.c ****          }
 764:fltk-1.3.4-1/png/pngrutil.c **** 
 765:fltk-1.3.4-1/png/pngrutil.c ****          /* Use Z_SYNC_FLUSH when there is no more chunk data to ensure that all
 766:fltk-1.3.4-1/png/pngrutil.c ****           * the available output is produced; this allows reading of truncated
 767:fltk-1.3.4-1/png/pngrutil.c ****           * streams.
 768:fltk-1.3.4-1/png/pngrutil.c ****           */
 769:fltk-1.3.4-1/png/pngrutil.c ****          ret = inflate(&png_ptr->zstream,
 770:fltk-1.3.4-1/png/pngrutil.c ****             *chunk_bytes > 0 ? Z_NO_FLUSH : (finish ? Z_FINISH : Z_SYNC_FLUSH));
 771:fltk-1.3.4-1/png/pngrutil.c ****       }
 772:fltk-1.3.4-1/png/pngrutil.c ****       while (ret == Z_OK && (*out_size > 0 || png_ptr->zstream.avail_out > 0));
 773:fltk-1.3.4-1/png/pngrutil.c **** 
 774:fltk-1.3.4-1/png/pngrutil.c ****       *out_size += png_ptr->zstream.avail_out;
 775:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* Should not be required, but is safe */
 776:fltk-1.3.4-1/png/pngrutil.c **** 
 777:fltk-1.3.4-1/png/pngrutil.c ****       /* Ensure the error message pointer is always set: */
 778:fltk-1.3.4-1/png/pngrutil.c ****       png_zstream_error(png_ptr, ret);
 779:fltk-1.3.4-1/png/pngrutil.c ****       return ret;
 780:fltk-1.3.4-1/png/pngrutil.c ****    }
 781:fltk-1.3.4-1/png/pngrutil.c **** 
 782:fltk-1.3.4-1/png/pngrutil.c ****    else
 783:fltk-1.3.4-1/png/pngrutil.c ****    {
 784:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.msg = PNGZ_MSG_CAST("zstream unclaimed");
 785:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 786:fltk-1.3.4-1/png/pngrutil.c ****    }
 787:fltk-1.3.4-1/png/pngrutil.c **** }
 788:fltk-1.3.4-1/png/pngrutil.c **** #endif
 789:fltk-1.3.4-1/png/pngrutil.c **** 
 790:fltk-1.3.4-1/png/pngrutil.c **** /* Read and check the IDHR chunk */
 791:fltk-1.3.4-1/png/pngrutil.c **** 
 792:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
 793:fltk-1.3.4-1/png/pngrutil.c **** png_handle_IHDR(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
 794:fltk-1.3.4-1/png/pngrutil.c **** {
 795:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[13];
 796:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 width, height;
 797:fltk-1.3.4-1/png/pngrutil.c ****    int bit_depth, color_type, compression_type, filter_type;
 798:fltk-1.3.4-1/png/pngrutil.c ****    int interlace_type;
 799:fltk-1.3.4-1/png/pngrutil.c **** 
 800:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_IHDR");
 801:fltk-1.3.4-1/png/pngrutil.c **** 
 802:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) != 0)
 803:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "out of place");
 804:fltk-1.3.4-1/png/pngrutil.c **** 
 805:fltk-1.3.4-1/png/pngrutil.c ****    /* Check the length */
 806:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 13)
 807:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "invalid");
 808:fltk-1.3.4-1/png/pngrutil.c **** 
 809:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->mode |= PNG_HAVE_IHDR;
 810:fltk-1.3.4-1/png/pngrutil.c **** 
 811:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, 13);
 812:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_finish(png_ptr, 0);
 813:fltk-1.3.4-1/png/pngrutil.c **** 
 814:fltk-1.3.4-1/png/pngrutil.c ****    width = png_get_uint_31(png_ptr, buf);
 815:fltk-1.3.4-1/png/pngrutil.c ****    height = png_get_uint_31(png_ptr, buf + 4);
 816:fltk-1.3.4-1/png/pngrutil.c ****    bit_depth = buf[8];
 817:fltk-1.3.4-1/png/pngrutil.c ****    color_type = buf[9];
 818:fltk-1.3.4-1/png/pngrutil.c ****    compression_type = buf[10];
 819:fltk-1.3.4-1/png/pngrutil.c ****    filter_type = buf[11];
 820:fltk-1.3.4-1/png/pngrutil.c ****    interlace_type = buf[12];
 821:fltk-1.3.4-1/png/pngrutil.c **** 
 822:fltk-1.3.4-1/png/pngrutil.c ****    /* Set internal variables */
 823:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->width = width;
 824:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->height = height;
 825:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->bit_depth = (png_byte)bit_depth;
 826:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->interlaced = (png_byte)interlace_type;
 827:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->color_type = (png_byte)color_type;
 828:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
 829:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->filter_type = (png_byte)filter_type;
 830:fltk-1.3.4-1/png/pngrutil.c **** #endif
 831:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->compression_type = (png_byte)compression_type;
 832:fltk-1.3.4-1/png/pngrutil.c **** 
 833:fltk-1.3.4-1/png/pngrutil.c ****    /* Find number of channels */
 834:fltk-1.3.4-1/png/pngrutil.c ****    switch (png_ptr->color_type)
 835:fltk-1.3.4-1/png/pngrutil.c ****    {
 836:fltk-1.3.4-1/png/pngrutil.c ****       default: /* invalid, png_set_IHDR calls png_error */
 837:fltk-1.3.4-1/png/pngrutil.c ****       case PNG_COLOR_TYPE_GRAY:
 838:fltk-1.3.4-1/png/pngrutil.c ****       case PNG_COLOR_TYPE_PALETTE:
 839:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->channels = 1;
 840:fltk-1.3.4-1/png/pngrutil.c ****          break;
 841:fltk-1.3.4-1/png/pngrutil.c **** 
 842:fltk-1.3.4-1/png/pngrutil.c ****       case PNG_COLOR_TYPE_RGB:
 843:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->channels = 3;
 844:fltk-1.3.4-1/png/pngrutil.c ****          break;
 845:fltk-1.3.4-1/png/pngrutil.c **** 
 846:fltk-1.3.4-1/png/pngrutil.c ****       case PNG_COLOR_TYPE_GRAY_ALPHA:
 847:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->channels = 2;
 848:fltk-1.3.4-1/png/pngrutil.c ****          break;
 849:fltk-1.3.4-1/png/pngrutil.c **** 
 850:fltk-1.3.4-1/png/pngrutil.c ****       case PNG_COLOR_TYPE_RGB_ALPHA:
 851:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->channels = 4;
 852:fltk-1.3.4-1/png/pngrutil.c ****          break;
 853:fltk-1.3.4-1/png/pngrutil.c ****    }
 854:fltk-1.3.4-1/png/pngrutil.c **** 
 855:fltk-1.3.4-1/png/pngrutil.c ****    /* Set up other useful info */
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->pixel_depth = (png_byte)(png_ptr->bit_depth * png_ptr->channels);
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 858:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 859:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "channels = %d", png_ptr->channels);
 860:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "rowbytes = %lu", (unsigned long)png_ptr->rowbytes);
 861:fltk-1.3.4-1/png/pngrutil.c ****    png_set_IHDR(png_ptr, info_ptr, width, height, bit_depth,
 862:fltk-1.3.4-1/png/pngrutil.c ****        color_type, interlace_type, compression_type, filter_type);
 863:fltk-1.3.4-1/png/pngrutil.c **** }
 864:fltk-1.3.4-1/png/pngrutil.c **** 
 865:fltk-1.3.4-1/png/pngrutil.c **** /* Read and check the palette */
 866:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
 867:fltk-1.3.4-1/png/pngrutil.c **** png_handle_PLTE(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
 868:fltk-1.3.4-1/png/pngrutil.c **** {
 869:fltk-1.3.4-1/png/pngrutil.c ****    png_color palette[PNG_MAX_PALETTE_LENGTH];
 870:fltk-1.3.4-1/png/pngrutil.c ****    int num, i;
 871:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_POINTER_INDEXING_SUPPORTED
 872:fltk-1.3.4-1/png/pngrutil.c ****    png_colorp pal_ptr;
 873:fltk-1.3.4-1/png/pngrutil.c **** #endif
 874:fltk-1.3.4-1/png/pngrutil.c **** 
 875:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_PLTE");
 876:fltk-1.3.4-1/png/pngrutil.c **** 
 877:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
 878:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 879:fltk-1.3.4-1/png/pngrutil.c **** 
 880:fltk-1.3.4-1/png/pngrutil.c ****    /* Moved to before the 'after IDAT' check below because otherwise duplicate
 881:fltk-1.3.4-1/png/pngrutil.c ****     * PLTE chunks are potentially ignored (the spec says there shall not be more
 882:fltk-1.3.4-1/png/pngrutil.c ****     * than one PLTE, the error is not treated as benign, so this check trumps
 883:fltk-1.3.4-1/png/pngrutil.c ****     * the requirement that PLTE appears before IDAT.)
 884:fltk-1.3.4-1/png/pngrutil.c ****     */
 885:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_PLTE) != 0)
 886:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "duplicate");
 887:fltk-1.3.4-1/png/pngrutil.c **** 
 888:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
 889:fltk-1.3.4-1/png/pngrutil.c ****    {
 890:fltk-1.3.4-1/png/pngrutil.c ****       /* This is benign because the non-benign error happened before, when an
 891:fltk-1.3.4-1/png/pngrutil.c ****        * IDAT was encountered in a color-mapped image with no PLTE.
 892:fltk-1.3.4-1/png/pngrutil.c ****        */
 893:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 894:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 895:fltk-1.3.4-1/png/pngrutil.c ****       return;
 896:fltk-1.3.4-1/png/pngrutil.c ****    }
 897:fltk-1.3.4-1/png/pngrutil.c **** 
 898:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->mode |= PNG_HAVE_PLTE;
 899:fltk-1.3.4-1/png/pngrutil.c **** 
 900:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->color_type & PNG_COLOR_MASK_COLOR) == 0)
 901:fltk-1.3.4-1/png/pngrutil.c ****    {
 902:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 903:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "ignored in grayscale PNG");
 904:fltk-1.3.4-1/png/pngrutil.c ****       return;
 905:fltk-1.3.4-1/png/pngrutil.c ****    }
 906:fltk-1.3.4-1/png/pngrutil.c **** 
 907:fltk-1.3.4-1/png/pngrutil.c **** #ifndef PNG_READ_OPT_PLTE_SUPPORTED
 908:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->color_type != PNG_COLOR_TYPE_PALETTE)
 909:fltk-1.3.4-1/png/pngrutil.c ****    {
 910:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 911:fltk-1.3.4-1/png/pngrutil.c ****       return;
 912:fltk-1.3.4-1/png/pngrutil.c ****    }
 913:fltk-1.3.4-1/png/pngrutil.c **** #endif
 914:fltk-1.3.4-1/png/pngrutil.c **** 
 915:fltk-1.3.4-1/png/pngrutil.c ****    if (length > 3*PNG_MAX_PALETTE_LENGTH || length % 3)
 916:fltk-1.3.4-1/png/pngrutil.c ****    {
 917:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 918:fltk-1.3.4-1/png/pngrutil.c **** 
 919:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->color_type != PNG_COLOR_TYPE_PALETTE)
 920:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
 921:fltk-1.3.4-1/png/pngrutil.c **** 
 922:fltk-1.3.4-1/png/pngrutil.c ****       else
 923:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "invalid");
 924:fltk-1.3.4-1/png/pngrutil.c **** 
 925:fltk-1.3.4-1/png/pngrutil.c ****       return;
 926:fltk-1.3.4-1/png/pngrutil.c ****    }
 927:fltk-1.3.4-1/png/pngrutil.c **** 
 928:fltk-1.3.4-1/png/pngrutil.c ****    /* The cast is safe because 'length' is less than 3*PNG_MAX_PALETTE_LENGTH */
 929:fltk-1.3.4-1/png/pngrutil.c ****    num = (int)length / 3;
 930:fltk-1.3.4-1/png/pngrutil.c **** 
 931:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_POINTER_INDEXING_SUPPORTED
 932:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0, pal_ptr = palette; i < num; i++, pal_ptr++)
 933:fltk-1.3.4-1/png/pngrutil.c ****    {
 934:fltk-1.3.4-1/png/pngrutil.c ****       png_byte buf[3];
 935:fltk-1.3.4-1/png/pngrutil.c **** 
 936:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, buf, 3);
 937:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->red = buf[0];
 938:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->green = buf[1];
 939:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->blue = buf[2];
 940:fltk-1.3.4-1/png/pngrutil.c ****    }
 941:fltk-1.3.4-1/png/pngrutil.c **** #else
 942:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < num; i++)
 943:fltk-1.3.4-1/png/pngrutil.c ****    {
 944:fltk-1.3.4-1/png/pngrutil.c ****       png_byte buf[3];
 945:fltk-1.3.4-1/png/pngrutil.c **** 
 946:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, buf, 3);
 947:fltk-1.3.4-1/png/pngrutil.c ****       /* Don't depend upon png_color being any order */
 948:fltk-1.3.4-1/png/pngrutil.c ****       palette[i].red = buf[0];
 949:fltk-1.3.4-1/png/pngrutil.c ****       palette[i].green = buf[1];
 950:fltk-1.3.4-1/png/pngrutil.c ****       palette[i].blue = buf[2];
 951:fltk-1.3.4-1/png/pngrutil.c ****    }
 952:fltk-1.3.4-1/png/pngrutil.c **** #endif
 953:fltk-1.3.4-1/png/pngrutil.c **** 
 954:fltk-1.3.4-1/png/pngrutil.c ****    /* If we actually need the PLTE chunk (ie for a paletted image), we do
 955:fltk-1.3.4-1/png/pngrutil.c ****     * whatever the normal CRC configuration tells us.  However, if we
 956:fltk-1.3.4-1/png/pngrutil.c ****     * have an RGB image, the PLTE can be considered ancillary, so
 957:fltk-1.3.4-1/png/pngrutil.c ****     * we will act as though it is.
 958:fltk-1.3.4-1/png/pngrutil.c ****     */
 959:fltk-1.3.4-1/png/pngrutil.c **** #ifndef PNG_READ_OPT_PLTE_SUPPORTED
 960:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 961:fltk-1.3.4-1/png/pngrutil.c **** #endif
 962:fltk-1.3.4-1/png/pngrutil.c ****    {
 963:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, 0);
 964:fltk-1.3.4-1/png/pngrutil.c ****    }
 965:fltk-1.3.4-1/png/pngrutil.c **** 
 966:fltk-1.3.4-1/png/pngrutil.c **** #ifndef PNG_READ_OPT_PLTE_SUPPORTED
 967:fltk-1.3.4-1/png/pngrutil.c ****    else if (png_crc_error(png_ptr) != 0)  /* Only if we have a CRC error */
 968:fltk-1.3.4-1/png/pngrutil.c ****    {
 969:fltk-1.3.4-1/png/pngrutil.c ****       /* If we don't want to use the data from an ancillary chunk,
 970:fltk-1.3.4-1/png/pngrutil.c ****        * we have two options: an error abort, or a warning and we
 971:fltk-1.3.4-1/png/pngrutil.c ****        * ignore the data in this chunk (which should be OK, since
 972:fltk-1.3.4-1/png/pngrutil.c ****        * it's considered ancillary for a RGB or RGBA image).
 973:fltk-1.3.4-1/png/pngrutil.c ****        *
 974:fltk-1.3.4-1/png/pngrutil.c ****        * IMPLEMENTATION NOTE: this is only here because png_crc_finish uses the
 975:fltk-1.3.4-1/png/pngrutil.c ****        * chunk type to determine whether to check the ancillary or the critical
 976:fltk-1.3.4-1/png/pngrutil.c ****        * flags.
 977:fltk-1.3.4-1/png/pngrutil.c ****        */
 978:fltk-1.3.4-1/png/pngrutil.c ****       if ((png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_USE) == 0)
 979:fltk-1.3.4-1/png/pngrutil.c ****       {
 980:fltk-1.3.4-1/png/pngrutil.c ****          if ((png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_NOWARN) != 0)
 981:fltk-1.3.4-1/png/pngrutil.c ****             return;
 982:fltk-1.3.4-1/png/pngrutil.c **** 
 983:fltk-1.3.4-1/png/pngrutil.c ****          else
 984:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_error(png_ptr, "CRC error");
 985:fltk-1.3.4-1/png/pngrutil.c ****       }
 986:fltk-1.3.4-1/png/pngrutil.c **** 
 987:fltk-1.3.4-1/png/pngrutil.c ****       /* Otherwise, we (optionally) emit a warning and use the chunk. */
 988:fltk-1.3.4-1/png/pngrutil.c ****       else if ((png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_NOWARN) == 0)
 989:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_warning(png_ptr, "CRC error");
 990:fltk-1.3.4-1/png/pngrutil.c ****    }
 991:fltk-1.3.4-1/png/pngrutil.c **** #endif
 992:fltk-1.3.4-1/png/pngrutil.c **** 
 993:fltk-1.3.4-1/png/pngrutil.c ****    /* TODO: png_set_PLTE has the side effect of setting png_ptr->palette to its
 994:fltk-1.3.4-1/png/pngrutil.c ****     * own copy of the palette.  This has the side effect that when png_start_row
 995:fltk-1.3.4-1/png/pngrutil.c ****     * is called (this happens after any call to png_read_update_info) the
 996:fltk-1.3.4-1/png/pngrutil.c ****     * info_ptr palette gets changed.  This is extremely unexpected and
 997:fltk-1.3.4-1/png/pngrutil.c ****     * confusing.
 998:fltk-1.3.4-1/png/pngrutil.c ****     *
 999:fltk-1.3.4-1/png/pngrutil.c ****     * Fix this by not sharing the palette in this way.
1000:fltk-1.3.4-1/png/pngrutil.c ****     */
1001:fltk-1.3.4-1/png/pngrutil.c ****    png_set_PLTE(png_ptr, info_ptr, palette, num);
1002:fltk-1.3.4-1/png/pngrutil.c **** 
1003:fltk-1.3.4-1/png/pngrutil.c ****    /* The three chunks, bKGD, hIST and tRNS *must* appear after PLTE and before
1004:fltk-1.3.4-1/png/pngrutil.c ****     * IDAT.  Prior to 1.6.0 this was not checked; instead the code merely
1005:fltk-1.3.4-1/png/pngrutil.c ****     * checked the apparent validity of a tRNS chunk inserted before PLTE on a
1006:fltk-1.3.4-1/png/pngrutil.c ****     * palette PNG.  1.6.0 attempts to rigorously follow the standard and
1007:fltk-1.3.4-1/png/pngrutil.c ****     * therefore does a benign error if the erroneous condition is detected *and*
1008:fltk-1.3.4-1/png/pngrutil.c ****     * cancels the tRNS if the benign error returns.  The alternative is to
1009:fltk-1.3.4-1/png/pngrutil.c ****     * amend the standard since it would be rather hypocritical of the standards
1010:fltk-1.3.4-1/png/pngrutil.c ****     * maintainers to ignore it.
1011:fltk-1.3.4-1/png/pngrutil.c ****     */
1012:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_tRNS_SUPPORTED
1013:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->num_trans > 0 ||
1014:fltk-1.3.4-1/png/pngrutil.c ****        (info_ptr != NULL && (info_ptr->valid & PNG_INFO_tRNS) != 0))
1015:fltk-1.3.4-1/png/pngrutil.c ****    {
1016:fltk-1.3.4-1/png/pngrutil.c ****       /* Cancel this because otherwise it would be used if the transforms
1017:fltk-1.3.4-1/png/pngrutil.c ****        * require it.  Don't cancel the 'valid' flag because this would prevent
1018:fltk-1.3.4-1/png/pngrutil.c ****        * detection of duplicate chunks.
1019:fltk-1.3.4-1/png/pngrutil.c ****        */
1020:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = 0;
1021:fltk-1.3.4-1/png/pngrutil.c **** 
1022:fltk-1.3.4-1/png/pngrutil.c ****       if (info_ptr != NULL)
1023:fltk-1.3.4-1/png/pngrutil.c ****          info_ptr->num_trans = 0;
1024:fltk-1.3.4-1/png/pngrutil.c **** 
1025:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "tRNS must be after");
1026:fltk-1.3.4-1/png/pngrutil.c ****    }
1027:fltk-1.3.4-1/png/pngrutil.c **** #endif
1028:fltk-1.3.4-1/png/pngrutil.c **** 
1029:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_hIST_SUPPORTED
1030:fltk-1.3.4-1/png/pngrutil.c ****    if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_hIST) != 0)
1031:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "hIST must be after");
1032:fltk-1.3.4-1/png/pngrutil.c **** #endif
1033:fltk-1.3.4-1/png/pngrutil.c **** 
1034:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_bKGD_SUPPORTED
1035:fltk-1.3.4-1/png/pngrutil.c ****    if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_bKGD) != 0)
1036:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "bKGD must be after");
1037:fltk-1.3.4-1/png/pngrutil.c **** #endif
1038:fltk-1.3.4-1/png/pngrutil.c **** }
1039:fltk-1.3.4-1/png/pngrutil.c **** 
1040:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1041:fltk-1.3.4-1/png/pngrutil.c **** png_handle_IEND(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1042:fltk-1.3.4-1/png/pngrutil.c **** {
1043:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_IEND");
1044:fltk-1.3.4-1/png/pngrutil.c **** 
1045:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0 ||
1046:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_IDAT) == 0)
1047:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "out of place");
1048:fltk-1.3.4-1/png/pngrutil.c **** 
1049:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->mode |= (PNG_AFTER_IDAT | PNG_HAVE_IEND);
1050:fltk-1.3.4-1/png/pngrutil.c **** 
1051:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_finish(png_ptr, length);
1052:fltk-1.3.4-1/png/pngrutil.c **** 
1053:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 0)
1054:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
1055:fltk-1.3.4-1/png/pngrutil.c **** 
1056:fltk-1.3.4-1/png/pngrutil.c ****    PNG_UNUSED(info_ptr)
1057:fltk-1.3.4-1/png/pngrutil.c **** }
1058:fltk-1.3.4-1/png/pngrutil.c **** 
1059:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_gAMA_SUPPORTED
1060:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1061:fltk-1.3.4-1/png/pngrutil.c **** png_handle_gAMA(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1062:fltk-1.3.4-1/png/pngrutil.c **** {
1063:fltk-1.3.4-1/png/pngrutil.c ****    png_fixed_point igamma;
1064:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[4];
1065:fltk-1.3.4-1/png/pngrutil.c **** 
1066:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_gAMA");
1067:fltk-1.3.4-1/png/pngrutil.c **** 
1068:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1069:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1070:fltk-1.3.4-1/png/pngrutil.c **** 
1071:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & (PNG_HAVE_IDAT|PNG_HAVE_PLTE)) != 0)
1072:fltk-1.3.4-1/png/pngrutil.c ****    {
1073:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1074:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1075:fltk-1.3.4-1/png/pngrutil.c ****       return;
1076:fltk-1.3.4-1/png/pngrutil.c ****    }
1077:fltk-1.3.4-1/png/pngrutil.c **** 
1078:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 4)
1079:fltk-1.3.4-1/png/pngrutil.c ****    {
1080:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1081:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
1082:fltk-1.3.4-1/png/pngrutil.c ****       return;
1083:fltk-1.3.4-1/png/pngrutil.c ****    }
1084:fltk-1.3.4-1/png/pngrutil.c **** 
1085:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, 4);
1086:fltk-1.3.4-1/png/pngrutil.c **** 
1087:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
1088:fltk-1.3.4-1/png/pngrutil.c ****       return;
1089:fltk-1.3.4-1/png/pngrutil.c **** 
1090:fltk-1.3.4-1/png/pngrutil.c ****    igamma = png_get_fixed_point(NULL, buf);
1091:fltk-1.3.4-1/png/pngrutil.c **** 
1092:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_set_gamma(png_ptr, &png_ptr->colorspace, igamma);
1093:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
1094:fltk-1.3.4-1/png/pngrutil.c **** }
1095:fltk-1.3.4-1/png/pngrutil.c **** #endif
1096:fltk-1.3.4-1/png/pngrutil.c **** 
1097:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_sBIT_SUPPORTED
1098:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1099:fltk-1.3.4-1/png/pngrutil.c **** png_handle_sBIT(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1100:fltk-1.3.4-1/png/pngrutil.c **** {
1101:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen, i;
1102:fltk-1.3.4-1/png/pngrutil.c ****    png_byte sample_depth;
1103:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[4];
1104:fltk-1.3.4-1/png/pngrutil.c **** 
1105:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_sBIT");
1106:fltk-1.3.4-1/png/pngrutil.c **** 
1107:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1108:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1109:fltk-1.3.4-1/png/pngrutil.c **** 
1110:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & (PNG_HAVE_IDAT|PNG_HAVE_PLTE)) != 0)
1111:fltk-1.3.4-1/png/pngrutil.c ****    {
1112:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1113:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1114:fltk-1.3.4-1/png/pngrutil.c ****       return;
1115:fltk-1.3.4-1/png/pngrutil.c ****    }
1116:fltk-1.3.4-1/png/pngrutil.c **** 
1117:fltk-1.3.4-1/png/pngrutil.c ****    if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_sBIT) != 0)
1118:fltk-1.3.4-1/png/pngrutil.c ****    {
1119:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1120:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
1121:fltk-1.3.4-1/png/pngrutil.c ****       return;
1122:fltk-1.3.4-1/png/pngrutil.c ****    }
1123:fltk-1.3.4-1/png/pngrutil.c **** 
1124:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
1125:fltk-1.3.4-1/png/pngrutil.c ****    {
1126:fltk-1.3.4-1/png/pngrutil.c ****       truelen = 3;
1127:fltk-1.3.4-1/png/pngrutil.c ****       sample_depth = 8;
1128:fltk-1.3.4-1/png/pngrutil.c ****    }
1129:fltk-1.3.4-1/png/pngrutil.c **** 
1130:fltk-1.3.4-1/png/pngrutil.c ****    else
1131:fltk-1.3.4-1/png/pngrutil.c ****    {
1132:fltk-1.3.4-1/png/pngrutil.c ****       truelen = png_ptr->channels;
1133:fltk-1.3.4-1/png/pngrutil.c ****       sample_depth = png_ptr->bit_depth;
1134:fltk-1.3.4-1/png/pngrutil.c ****    }
1135:fltk-1.3.4-1/png/pngrutil.c **** 
1136:fltk-1.3.4-1/png/pngrutil.c ****    if (length != truelen || length > 4)
1137:fltk-1.3.4-1/png/pngrutil.c ****    {
1138:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
1139:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1140:fltk-1.3.4-1/png/pngrutil.c ****       return;
1141:fltk-1.3.4-1/png/pngrutil.c ****    }
1142:fltk-1.3.4-1/png/pngrutil.c **** 
1143:fltk-1.3.4-1/png/pngrutil.c ****    buf[0] = buf[1] = buf[2] = buf[3] = sample_depth;
1144:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
1145:fltk-1.3.4-1/png/pngrutil.c **** 
1146:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
1147:fltk-1.3.4-1/png/pngrutil.c ****       return;
1148:fltk-1.3.4-1/png/pngrutil.c **** 
1149:fltk-1.3.4-1/png/pngrutil.c ****    for (i=0; i<truelen; ++i)
1150:fltk-1.3.4-1/png/pngrutil.c ****       if (buf[i] == 0 || buf[i] > sample_depth)
1151:fltk-1.3.4-1/png/pngrutil.c ****       {
1152:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
1153:fltk-1.3.4-1/png/pngrutil.c ****          return;
1154:fltk-1.3.4-1/png/pngrutil.c ****       }
1155:fltk-1.3.4-1/png/pngrutil.c **** 
1156:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->color_type & PNG_COLOR_MASK_COLOR) != 0)
1157:fltk-1.3.4-1/png/pngrutil.c ****    {
1158:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.red = buf[0];
1159:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.green = buf[1];
1160:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.blue = buf[2];
1161:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.alpha = buf[3];
1162:fltk-1.3.4-1/png/pngrutil.c ****    }
1163:fltk-1.3.4-1/png/pngrutil.c **** 
1164:fltk-1.3.4-1/png/pngrutil.c ****    else
1165:fltk-1.3.4-1/png/pngrutil.c ****    {
1166:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.gray = buf[0];
1167:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.red = buf[0];
1168:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.green = buf[0];
1169:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.blue = buf[0];
1170:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.alpha = buf[1];
1171:fltk-1.3.4-1/png/pngrutil.c ****    }
1172:fltk-1.3.4-1/png/pngrutil.c **** 
1173:fltk-1.3.4-1/png/pngrutil.c ****    png_set_sBIT(png_ptr, info_ptr, &(png_ptr->sig_bit));
1174:fltk-1.3.4-1/png/pngrutil.c **** }
1175:fltk-1.3.4-1/png/pngrutil.c **** #endif
1176:fltk-1.3.4-1/png/pngrutil.c **** 
1177:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_cHRM_SUPPORTED
1178:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1179:fltk-1.3.4-1/png/pngrutil.c **** png_handle_cHRM(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1180:fltk-1.3.4-1/png/pngrutil.c **** {
1181:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[32];
1182:fltk-1.3.4-1/png/pngrutil.c ****    png_xy xy;
1183:fltk-1.3.4-1/png/pngrutil.c **** 
1184:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_cHRM");
1185:fltk-1.3.4-1/png/pngrutil.c **** 
1186:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1187:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1188:fltk-1.3.4-1/png/pngrutil.c **** 
1189:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & (PNG_HAVE_IDAT|PNG_HAVE_PLTE)) != 0)
1190:fltk-1.3.4-1/png/pngrutil.c ****    {
1191:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1192:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1193:fltk-1.3.4-1/png/pngrutil.c ****       return;
1194:fltk-1.3.4-1/png/pngrutil.c ****    }
1195:fltk-1.3.4-1/png/pngrutil.c **** 
1196:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 32)
1197:fltk-1.3.4-1/png/pngrutil.c ****    {
1198:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1199:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
1200:fltk-1.3.4-1/png/pngrutil.c ****       return;
1201:fltk-1.3.4-1/png/pngrutil.c ****    }
1202:fltk-1.3.4-1/png/pngrutil.c **** 
1203:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, 32);
1204:fltk-1.3.4-1/png/pngrutil.c **** 
1205:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
1206:fltk-1.3.4-1/png/pngrutil.c ****       return;
1207:fltk-1.3.4-1/png/pngrutil.c **** 
1208:fltk-1.3.4-1/png/pngrutil.c ****    xy.whitex = png_get_fixed_point(NULL, buf);
1209:fltk-1.3.4-1/png/pngrutil.c ****    xy.whitey = png_get_fixed_point(NULL, buf + 4);
1210:fltk-1.3.4-1/png/pngrutil.c ****    xy.redx   = png_get_fixed_point(NULL, buf + 8);
1211:fltk-1.3.4-1/png/pngrutil.c ****    xy.redy   = png_get_fixed_point(NULL, buf + 12);
1212:fltk-1.3.4-1/png/pngrutil.c ****    xy.greenx = png_get_fixed_point(NULL, buf + 16);
1213:fltk-1.3.4-1/png/pngrutil.c ****    xy.greeny = png_get_fixed_point(NULL, buf + 20);
1214:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluex  = png_get_fixed_point(NULL, buf + 24);
1215:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluey  = png_get_fixed_point(NULL, buf + 28);
1216:fltk-1.3.4-1/png/pngrutil.c **** 
1217:fltk-1.3.4-1/png/pngrutil.c ****    if (xy.whitex == PNG_FIXED_ERROR ||
1218:fltk-1.3.4-1/png/pngrutil.c ****        xy.whitey == PNG_FIXED_ERROR ||
1219:fltk-1.3.4-1/png/pngrutil.c ****        xy.redx   == PNG_FIXED_ERROR ||
1220:fltk-1.3.4-1/png/pngrutil.c ****        xy.redy   == PNG_FIXED_ERROR ||
1221:fltk-1.3.4-1/png/pngrutil.c ****        xy.greenx == PNG_FIXED_ERROR ||
1222:fltk-1.3.4-1/png/pngrutil.c ****        xy.greeny == PNG_FIXED_ERROR ||
1223:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluex  == PNG_FIXED_ERROR ||
1224:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluey  == PNG_FIXED_ERROR)
1225:fltk-1.3.4-1/png/pngrutil.c ****    {
1226:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid values");
1227:fltk-1.3.4-1/png/pngrutil.c ****       return;
1228:fltk-1.3.4-1/png/pngrutil.c ****    }
1229:fltk-1.3.4-1/png/pngrutil.c **** 
1230:fltk-1.3.4-1/png/pngrutil.c ****    /* If a colorspace error has already been output skip this chunk */
1231:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) != 0)
1232:fltk-1.3.4-1/png/pngrutil.c ****       return;
1233:fltk-1.3.4-1/png/pngrutil.c **** 
1234:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_FROM_cHRM) != 0)
1235:fltk-1.3.4-1/png/pngrutil.c ****    {
1236:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->colorspace.flags |= PNG_COLORSPACE_INVALID;
1237:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
1238:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
1239:fltk-1.3.4-1/png/pngrutil.c ****       return;
1240:fltk-1.3.4-1/png/pngrutil.c ****    }
1241:fltk-1.3.4-1/png/pngrutil.c **** 
1242:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->colorspace.flags |= PNG_COLORSPACE_FROM_cHRM;
1243:fltk-1.3.4-1/png/pngrutil.c ****    (void)png_colorspace_set_chromaticities(png_ptr, &png_ptr->colorspace, &xy,
1244:fltk-1.3.4-1/png/pngrutil.c ****       1/*prefer cHRM values*/);
1245:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
1246:fltk-1.3.4-1/png/pngrutil.c **** }
1247:fltk-1.3.4-1/png/pngrutil.c **** #endif
1248:fltk-1.3.4-1/png/pngrutil.c **** 
1249:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_sRGB_SUPPORTED
1250:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1251:fltk-1.3.4-1/png/pngrutil.c **** png_handle_sRGB(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1252:fltk-1.3.4-1/png/pngrutil.c **** {
1253:fltk-1.3.4-1/png/pngrutil.c ****    png_byte intent;
1254:fltk-1.3.4-1/png/pngrutil.c **** 
1255:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_sRGB");
1256:fltk-1.3.4-1/png/pngrutil.c **** 
1257:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1258:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1259:fltk-1.3.4-1/png/pngrutil.c **** 
1260:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & (PNG_HAVE_IDAT|PNG_HAVE_PLTE)) != 0)
1261:fltk-1.3.4-1/png/pngrutil.c ****    {
1262:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1263:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1264:fltk-1.3.4-1/png/pngrutil.c ****       return;
1265:fltk-1.3.4-1/png/pngrutil.c ****    }
1266:fltk-1.3.4-1/png/pngrutil.c **** 
1267:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 1)
1268:fltk-1.3.4-1/png/pngrutil.c ****    {
1269:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1270:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
1271:fltk-1.3.4-1/png/pngrutil.c ****       return;
1272:fltk-1.3.4-1/png/pngrutil.c ****    }
1273:fltk-1.3.4-1/png/pngrutil.c **** 
1274:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, &intent, 1);
1275:fltk-1.3.4-1/png/pngrutil.c **** 
1276:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
1277:fltk-1.3.4-1/png/pngrutil.c ****       return;
1278:fltk-1.3.4-1/png/pngrutil.c **** 
1279:fltk-1.3.4-1/png/pngrutil.c ****    /* If a colorspace error has already been output skip this chunk */
1280:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) != 0)
1281:fltk-1.3.4-1/png/pngrutil.c ****       return;
1282:fltk-1.3.4-1/png/pngrutil.c **** 
1283:fltk-1.3.4-1/png/pngrutil.c ****    /* Only one sRGB or iCCP chunk is allowed, use the HAVE_INTENT flag to detect
1284:fltk-1.3.4-1/png/pngrutil.c ****     * this.
1285:fltk-1.3.4-1/png/pngrutil.c ****     */
1286:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_INTENT) != 0)
1287:fltk-1.3.4-1/png/pngrutil.c ****    {
1288:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->colorspace.flags |= PNG_COLORSPACE_INVALID;
1289:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
1290:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "too many profiles");
1291:fltk-1.3.4-1/png/pngrutil.c ****       return;
1292:fltk-1.3.4-1/png/pngrutil.c ****    }
1293:fltk-1.3.4-1/png/pngrutil.c **** 
1294:fltk-1.3.4-1/png/pngrutil.c ****    (void)png_colorspace_set_sRGB(png_ptr, &png_ptr->colorspace, intent);
1295:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
1296:fltk-1.3.4-1/png/pngrutil.c **** }
1297:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sRGB */
1298:fltk-1.3.4-1/png/pngrutil.c **** 
1299:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_iCCP_SUPPORTED
1300:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1301:fltk-1.3.4-1/png/pngrutil.c **** png_handle_iCCP(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1302:fltk-1.3.4-1/png/pngrutil.c **** /* Note: this does not properly handle profiles that are > 64K under DOS */
1303:fltk-1.3.4-1/png/pngrutil.c **** {
1304:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL; /* error message output, or no error */
1305:fltk-1.3.4-1/png/pngrutil.c ****    int finished = 0; /* crc checked */
1306:fltk-1.3.4-1/png/pngrutil.c **** 
1307:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_iCCP");
1308:fltk-1.3.4-1/png/pngrutil.c **** 
1309:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1310:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1311:fltk-1.3.4-1/png/pngrutil.c **** 
1312:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & (PNG_HAVE_IDAT|PNG_HAVE_PLTE)) != 0)
1313:fltk-1.3.4-1/png/pngrutil.c ****    {
1314:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1315:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1316:fltk-1.3.4-1/png/pngrutil.c ****       return;
1317:fltk-1.3.4-1/png/pngrutil.c ****    }
1318:fltk-1.3.4-1/png/pngrutil.c **** 
1319:fltk-1.3.4-1/png/pngrutil.c ****    /* Consistent with all the above colorspace handling an obviously *invalid*
1320:fltk-1.3.4-1/png/pngrutil.c ****     * chunk is just ignored, so does not invalidate the color space.  An
1321:fltk-1.3.4-1/png/pngrutil.c ****     * alternative is to set the 'invalid' flags at the start of this routine
1322:fltk-1.3.4-1/png/pngrutil.c ****     * and only clear them in they were not set before and all the tests pass.
1323:fltk-1.3.4-1/png/pngrutil.c ****     * The minimum 'deflate' stream is assumed to be just the 2 byte header and
1324:fltk-1.3.4-1/png/pngrutil.c ****     * 4 byte checksum.  The keyword must be at least one character and there is
1325:fltk-1.3.4-1/png/pngrutil.c ****     * a terminator (0) byte and the compression method.
1326:fltk-1.3.4-1/png/pngrutil.c ****     */
1327:fltk-1.3.4-1/png/pngrutil.c ****    if (length < 9)
1328:fltk-1.3.4-1/png/pngrutil.c ****    {
1329:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1330:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "too short");
1331:fltk-1.3.4-1/png/pngrutil.c ****       return;
1332:fltk-1.3.4-1/png/pngrutil.c ****    }
1333:fltk-1.3.4-1/png/pngrutil.c **** 
1334:fltk-1.3.4-1/png/pngrutil.c ****    /* If a colorspace error has already been output skip this chunk */
1335:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_INVALID) != 0)
1336:fltk-1.3.4-1/png/pngrutil.c ****    {
1337:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1338:fltk-1.3.4-1/png/pngrutil.c ****       return;
1339:fltk-1.3.4-1/png/pngrutil.c ****    }
1340:fltk-1.3.4-1/png/pngrutil.c **** 
1341:fltk-1.3.4-1/png/pngrutil.c ****    /* Only one sRGB or iCCP chunk is allowed, use the HAVE_INTENT flag to detect
1342:fltk-1.3.4-1/png/pngrutil.c ****     * this.
1343:fltk-1.3.4-1/png/pngrutil.c ****     */
1344:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->colorspace.flags & PNG_COLORSPACE_HAVE_INTENT) == 0)
1345:fltk-1.3.4-1/png/pngrutil.c ****    {
1346:fltk-1.3.4-1/png/pngrutil.c ****       uInt read_length, keyword_length;
1347:fltk-1.3.4-1/png/pngrutil.c ****       char keyword[81];
1348:fltk-1.3.4-1/png/pngrutil.c **** 
1349:fltk-1.3.4-1/png/pngrutil.c ****       /* Find the keyword; the keyword plus separator and compression method
1350:fltk-1.3.4-1/png/pngrutil.c ****        * bytes can be at most 81 characters long.
1351:fltk-1.3.4-1/png/pngrutil.c ****        */
1352:fltk-1.3.4-1/png/pngrutil.c ****       read_length = 81; /* maximum */
1353:fltk-1.3.4-1/png/pngrutil.c ****       if (read_length > length)
1354:fltk-1.3.4-1/png/pngrutil.c ****          read_length = (uInt)length;
1355:fltk-1.3.4-1/png/pngrutil.c **** 
1356:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, (png_bytep)keyword, read_length);
1357:fltk-1.3.4-1/png/pngrutil.c ****       length -= read_length;
1358:fltk-1.3.4-1/png/pngrutil.c **** 
1359:fltk-1.3.4-1/png/pngrutil.c ****       keyword_length = 0;
1360:fltk-1.3.4-1/png/pngrutil.c ****       while (keyword_length < 80 && keyword_length < read_length &&
1361:fltk-1.3.4-1/png/pngrutil.c ****          keyword[keyword_length] != 0)
1362:fltk-1.3.4-1/png/pngrutil.c ****          ++keyword_length;
1363:fltk-1.3.4-1/png/pngrutil.c **** 
1364:fltk-1.3.4-1/png/pngrutil.c ****       /* TODO: make the keyword checking common */
1365:fltk-1.3.4-1/png/pngrutil.c ****       if (keyword_length >= 1 && keyword_length <= 79)
1366:fltk-1.3.4-1/png/pngrutil.c ****       {
1367:fltk-1.3.4-1/png/pngrutil.c ****          /* We only understand '0' compression - deflate - so if we get a
1368:fltk-1.3.4-1/png/pngrutil.c ****           * different value we can't safely decode the chunk.
1369:fltk-1.3.4-1/png/pngrutil.c ****           */
1370:fltk-1.3.4-1/png/pngrutil.c ****          if (keyword_length+1 < read_length &&
1371:fltk-1.3.4-1/png/pngrutil.c ****             keyword[keyword_length+1] == PNG_COMPRESSION_TYPE_BASE)
1372:fltk-1.3.4-1/png/pngrutil.c ****          {
1373:fltk-1.3.4-1/png/pngrutil.c ****             read_length -= keyword_length+2;
1374:fltk-1.3.4-1/png/pngrutil.c **** 
1375:fltk-1.3.4-1/png/pngrutil.c ****             if (png_inflate_claim(png_ptr, png_iCCP) == Z_OK)
1376:fltk-1.3.4-1/png/pngrutil.c ****             {
1377:fltk-1.3.4-1/png/pngrutil.c ****                Byte profile_header[132];
1378:fltk-1.3.4-1/png/pngrutil.c ****                Byte local_buffer[PNG_INFLATE_BUF_SIZE];
1379:fltk-1.3.4-1/png/pngrutil.c ****                png_alloc_size_t size = (sizeof profile_header);
1380:fltk-1.3.4-1/png/pngrutil.c **** 
1381:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->zstream.next_in = (Bytef*)keyword + (keyword_length+2);
1382:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->zstream.avail_in = read_length;
1383:fltk-1.3.4-1/png/pngrutil.c ****                (void)png_inflate_read(png_ptr, local_buffer,
1384:fltk-1.3.4-1/png/pngrutil.c ****                   (sizeof local_buffer), &length, profile_header, &size,
1385:fltk-1.3.4-1/png/pngrutil.c ****                   0/*finish: don't, because the output is too small*/);
1386:fltk-1.3.4-1/png/pngrutil.c **** 
1387:fltk-1.3.4-1/png/pngrutil.c ****                if (size == 0)
1388:fltk-1.3.4-1/png/pngrutil.c ****                {
1389:fltk-1.3.4-1/png/pngrutil.c ****                   /* We have the ICC profile header; do the basic header checks.
1390:fltk-1.3.4-1/png/pngrutil.c ****                    */
1391:fltk-1.3.4-1/png/pngrutil.c ****                   const png_uint_32 profile_length =
1392:fltk-1.3.4-1/png/pngrutil.c ****                      png_get_uint_32(profile_header);
1393:fltk-1.3.4-1/png/pngrutil.c **** 
1394:fltk-1.3.4-1/png/pngrutil.c ****                   if (png_icc_check_length(png_ptr, &png_ptr->colorspace,
1395:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
1396:fltk-1.3.4-1/png/pngrutil.c ****                   {
1397:fltk-1.3.4-1/png/pngrutil.c ****                      /* The length is apparently ok, so we can check the 132
1398:fltk-1.3.4-1/png/pngrutil.c ****                       * byte header.
1399:fltk-1.3.4-1/png/pngrutil.c ****                       */
1400:fltk-1.3.4-1/png/pngrutil.c ****                      if (png_icc_check_header(png_ptr, &png_ptr->colorspace,
1401:fltk-1.3.4-1/png/pngrutil.c ****                         keyword, profile_length, profile_header,
1402:fltk-1.3.4-1/png/pngrutil.c ****                         png_ptr->color_type) != 0)
1403:fltk-1.3.4-1/png/pngrutil.c ****                      {
1404:fltk-1.3.4-1/png/pngrutil.c ****                         /* Now read the tag table; a variable size buffer is
1405:fltk-1.3.4-1/png/pngrutil.c ****                          * needed at this point, allocate one for the whole
1406:fltk-1.3.4-1/png/pngrutil.c ****                          * profile.  The header check has already validated
1407:fltk-1.3.4-1/png/pngrutil.c ****                          * that none of these stuff will overflow.
1408:fltk-1.3.4-1/png/pngrutil.c ****                          */
1409:fltk-1.3.4-1/png/pngrutil.c ****                         const png_uint_32 tag_count = png_get_uint_32(
1410:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
1411:fltk-1.3.4-1/png/pngrutil.c ****                         png_bytep profile = png_read_buffer(png_ptr,
1412:fltk-1.3.4-1/png/pngrutil.c ****                            profile_length, 2/*silent*/);
1413:fltk-1.3.4-1/png/pngrutil.c **** 
1414:fltk-1.3.4-1/png/pngrutil.c ****                         if (profile != NULL)
1415:fltk-1.3.4-1/png/pngrutil.c ****                         {
1416:fltk-1.3.4-1/png/pngrutil.c ****                            memcpy(profile, profile_header,
1417:fltk-1.3.4-1/png/pngrutil.c ****                               (sizeof profile_header));
1418:fltk-1.3.4-1/png/pngrutil.c **** 
1419:fltk-1.3.4-1/png/pngrutil.c ****                            size = 12 * tag_count;
1420:fltk-1.3.4-1/png/pngrutil.c **** 
1421:fltk-1.3.4-1/png/pngrutil.c ****                            (void)png_inflate_read(png_ptr, local_buffer,
1422:fltk-1.3.4-1/png/pngrutil.c ****                               (sizeof local_buffer), &length,
1423:fltk-1.3.4-1/png/pngrutil.c ****                               profile + (sizeof profile_header), &size, 0);
1424:fltk-1.3.4-1/png/pngrutil.c **** 
1425:fltk-1.3.4-1/png/pngrutil.c ****                            /* Still expect a buffer error because we expect
1426:fltk-1.3.4-1/png/pngrutil.c ****                             * there to be some tag data!
1427:fltk-1.3.4-1/png/pngrutil.c ****                             */
1428:fltk-1.3.4-1/png/pngrutil.c ****                            if (size == 0)
1429:fltk-1.3.4-1/png/pngrutil.c ****                            {
1430:fltk-1.3.4-1/png/pngrutil.c ****                               if (png_icc_check_tag_table(png_ptr,
1431:fltk-1.3.4-1/png/pngrutil.c ****                                  &png_ptr->colorspace, keyword, profile_length,
1432:fltk-1.3.4-1/png/pngrutil.c ****                                  profile) != 0)
1433:fltk-1.3.4-1/png/pngrutil.c ****                               {
1434:fltk-1.3.4-1/png/pngrutil.c ****                                  /* The profile has been validated for basic
1435:fltk-1.3.4-1/png/pngrutil.c ****                                   * security issues, so read the whole thing in.
1436:fltk-1.3.4-1/png/pngrutil.c ****                                   */
1437:fltk-1.3.4-1/png/pngrutil.c ****                                  size = profile_length - (sizeof profile_header)
1438:fltk-1.3.4-1/png/pngrutil.c ****                                     - 12 * tag_count;
1439:fltk-1.3.4-1/png/pngrutil.c **** 
1440:fltk-1.3.4-1/png/pngrutil.c ****                                  (void)png_inflate_read(png_ptr, local_buffer,
1441:fltk-1.3.4-1/png/pngrutil.c ****                                     (sizeof local_buffer), &length,
1442:fltk-1.3.4-1/png/pngrutil.c ****                                     profile + (sizeof profile_header) +
1443:fltk-1.3.4-1/png/pngrutil.c ****                                     12 * tag_count, &size, 1/*finish*/);
1444:fltk-1.3.4-1/png/pngrutil.c **** 
1445:fltk-1.3.4-1/png/pngrutil.c ****                                  if (length > 0 && !(png_ptr->flags &
1446:fltk-1.3.4-1/png/pngrutil.c ****                                        PNG_FLAG_BENIGN_ERRORS_WARN))
1447:fltk-1.3.4-1/png/pngrutil.c ****                                     errmsg = "extra compressed data";
1448:fltk-1.3.4-1/png/pngrutil.c **** 
1449:fltk-1.3.4-1/png/pngrutil.c ****                                  /* But otherwise allow extra data: */
1450:fltk-1.3.4-1/png/pngrutil.c ****                                  else if (size == 0)
1451:fltk-1.3.4-1/png/pngrutil.c ****                                  {
1452:fltk-1.3.4-1/png/pngrutil.c ****                                     if (length > 0)
1453:fltk-1.3.4-1/png/pngrutil.c ****                                     {
1454:fltk-1.3.4-1/png/pngrutil.c ****                                        /* This can be handled completely, so
1455:fltk-1.3.4-1/png/pngrutil.c ****                                         * keep going.
1456:fltk-1.3.4-1/png/pngrutil.c ****                                         */
1457:fltk-1.3.4-1/png/pngrutil.c ****                                        png_chunk_warning(png_ptr,
1458:fltk-1.3.4-1/png/pngrutil.c ****                                           "extra compressed data");
1459:fltk-1.3.4-1/png/pngrutil.c ****                                     }
1460:fltk-1.3.4-1/png/pngrutil.c **** 
1461:fltk-1.3.4-1/png/pngrutil.c ****                                     png_crc_finish(png_ptr, length);
1462:fltk-1.3.4-1/png/pngrutil.c ****                                     finished = 1;
1463:fltk-1.3.4-1/png/pngrutil.c **** 
1464:fltk-1.3.4-1/png/pngrutil.c **** #                                   ifdef PNG_sRGB_SUPPORTED
1465:fltk-1.3.4-1/png/pngrutil.c ****                                        /* Check for a match against sRGB */
1466:fltk-1.3.4-1/png/pngrutil.c ****                                        png_icc_set_sRGB(png_ptr,
1467:fltk-1.3.4-1/png/pngrutil.c ****                                           &png_ptr->colorspace, profile,
1468:fltk-1.3.4-1/png/pngrutil.c ****                                           png_ptr->zstream.adler);
1469:fltk-1.3.4-1/png/pngrutil.c **** #                                   endif
1470:fltk-1.3.4-1/png/pngrutil.c **** 
1471:fltk-1.3.4-1/png/pngrutil.c ****                                     /* Steal the profile for info_ptr. */
1472:fltk-1.3.4-1/png/pngrutil.c ****                                     if (info_ptr != NULL)
1473:fltk-1.3.4-1/png/pngrutil.c ****                                     {
1474:fltk-1.3.4-1/png/pngrutil.c ****                                        png_free_data(png_ptr, info_ptr,
1475:fltk-1.3.4-1/png/pngrutil.c ****                                           PNG_FREE_ICCP, 0);
1476:fltk-1.3.4-1/png/pngrutil.c **** 
1477:fltk-1.3.4-1/png/pngrutil.c ****                                        info_ptr->iccp_name = png_voidcast(char*,
1478:fltk-1.3.4-1/png/pngrutil.c ****                                           png_malloc_base(png_ptr,
1479:fltk-1.3.4-1/png/pngrutil.c ****                                           keyword_length+1));
1480:fltk-1.3.4-1/png/pngrutil.c ****                                        if (info_ptr->iccp_name != NULL)
1481:fltk-1.3.4-1/png/pngrutil.c ****                                        {
1482:fltk-1.3.4-1/png/pngrutil.c ****                                           memcpy(info_ptr->iccp_name, keyword,
1483:fltk-1.3.4-1/png/pngrutil.c ****                                              keyword_length+1);
1484:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->iccp_proflen =
1485:fltk-1.3.4-1/png/pngrutil.c ****                                              profile_length;
1486:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->iccp_profile = profile;
1487:fltk-1.3.4-1/png/pngrutil.c ****                                           png_ptr->read_buffer = NULL; /*steal*/
1488:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->free_me |= PNG_FREE_ICCP;
1489:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->valid |= PNG_INFO_iCCP;
1490:fltk-1.3.4-1/png/pngrutil.c ****                                        }
1491:fltk-1.3.4-1/png/pngrutil.c **** 
1492:fltk-1.3.4-1/png/pngrutil.c ****                                        else
1493:fltk-1.3.4-1/png/pngrutil.c ****                                        {
1494:fltk-1.3.4-1/png/pngrutil.c ****                                           png_ptr->colorspace.flags |=
1495:fltk-1.3.4-1/png/pngrutil.c ****                                              PNG_COLORSPACE_INVALID;
1496:fltk-1.3.4-1/png/pngrutil.c ****                                           errmsg = "out of memory";
1497:fltk-1.3.4-1/png/pngrutil.c ****                                        }
1498:fltk-1.3.4-1/png/pngrutil.c ****                                     }
1499:fltk-1.3.4-1/png/pngrutil.c **** 
1500:fltk-1.3.4-1/png/pngrutil.c ****                                     /* else the profile remains in the read
1501:fltk-1.3.4-1/png/pngrutil.c ****                                      * buffer which gets reused for subsequent
1502:fltk-1.3.4-1/png/pngrutil.c ****                                      * chunks.
1503:fltk-1.3.4-1/png/pngrutil.c ****                                      */
1504:fltk-1.3.4-1/png/pngrutil.c **** 
1505:fltk-1.3.4-1/png/pngrutil.c ****                                     if (info_ptr != NULL)
1506:fltk-1.3.4-1/png/pngrutil.c ****                                        png_colorspace_sync(png_ptr, info_ptr);
1507:fltk-1.3.4-1/png/pngrutil.c **** 
1508:fltk-1.3.4-1/png/pngrutil.c ****                                     if (errmsg == NULL)
1509:fltk-1.3.4-1/png/pngrutil.c ****                                     {
1510:fltk-1.3.4-1/png/pngrutil.c ****                                        png_ptr->zowner = 0;
1511:fltk-1.3.4-1/png/pngrutil.c ****                                        return;
1512:fltk-1.3.4-1/png/pngrutil.c ****                                     }
1513:fltk-1.3.4-1/png/pngrutil.c ****                                  }
1514:fltk-1.3.4-1/png/pngrutil.c **** 
1515:fltk-1.3.4-1/png/pngrutil.c ****                                  else if (size > 0)
1516:fltk-1.3.4-1/png/pngrutil.c ****                                     errmsg = "truncated";
1517:fltk-1.3.4-1/png/pngrutil.c **** 
1518:fltk-1.3.4-1/png/pngrutil.c ****                                  else
1519:fltk-1.3.4-1/png/pngrutil.c ****                                     errmsg = png_ptr->zstream.msg;
1520:fltk-1.3.4-1/png/pngrutil.c ****                               }
1521:fltk-1.3.4-1/png/pngrutil.c **** 
1522:fltk-1.3.4-1/png/pngrutil.c ****                               /* else png_icc_check_tag_table output an error */
1523:fltk-1.3.4-1/png/pngrutil.c ****                            }
1524:fltk-1.3.4-1/png/pngrutil.c **** 
1525:fltk-1.3.4-1/png/pngrutil.c ****                            else /* profile truncated */
1526:fltk-1.3.4-1/png/pngrutil.c ****                               errmsg = png_ptr->zstream.msg;
1527:fltk-1.3.4-1/png/pngrutil.c ****                         }
1528:fltk-1.3.4-1/png/pngrutil.c **** 
1529:fltk-1.3.4-1/png/pngrutil.c ****                         else
1530:fltk-1.3.4-1/png/pngrutil.c ****                            errmsg = "out of memory";
1531:fltk-1.3.4-1/png/pngrutil.c ****                      }
1532:fltk-1.3.4-1/png/pngrutil.c **** 
1533:fltk-1.3.4-1/png/pngrutil.c ****                      /* else png_icc_check_header output an error */
1534:fltk-1.3.4-1/png/pngrutil.c ****                   }
1535:fltk-1.3.4-1/png/pngrutil.c **** 
1536:fltk-1.3.4-1/png/pngrutil.c ****                   /* else png_icc_check_length output an error */
1537:fltk-1.3.4-1/png/pngrutil.c ****                }
1538:fltk-1.3.4-1/png/pngrutil.c **** 
1539:fltk-1.3.4-1/png/pngrutil.c ****                else /* profile truncated */
1540:fltk-1.3.4-1/png/pngrutil.c ****                   errmsg = png_ptr->zstream.msg;
1541:fltk-1.3.4-1/png/pngrutil.c **** 
1542:fltk-1.3.4-1/png/pngrutil.c ****                /* Release the stream */
1543:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->zowner = 0;
1544:fltk-1.3.4-1/png/pngrutil.c ****             }
1545:fltk-1.3.4-1/png/pngrutil.c **** 
1546:fltk-1.3.4-1/png/pngrutil.c ****             else /* png_inflate_claim failed */
1547:fltk-1.3.4-1/png/pngrutil.c ****                errmsg = png_ptr->zstream.msg;
1548:fltk-1.3.4-1/png/pngrutil.c ****          }
1549:fltk-1.3.4-1/png/pngrutil.c **** 
1550:fltk-1.3.4-1/png/pngrutil.c ****          else
1551:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "bad compression method"; /* or missing */
1552:fltk-1.3.4-1/png/pngrutil.c ****       }
1553:fltk-1.3.4-1/png/pngrutil.c **** 
1554:fltk-1.3.4-1/png/pngrutil.c ****       else
1555:fltk-1.3.4-1/png/pngrutil.c ****          errmsg = "bad keyword";
1556:fltk-1.3.4-1/png/pngrutil.c ****    }
1557:fltk-1.3.4-1/png/pngrutil.c **** 
1558:fltk-1.3.4-1/png/pngrutil.c ****    else
1559:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "too many profiles";
1560:fltk-1.3.4-1/png/pngrutil.c **** 
1561:fltk-1.3.4-1/png/pngrutil.c ****    /* Failure: the reason is in 'errmsg' */
1562:fltk-1.3.4-1/png/pngrutil.c ****    if (finished == 0)
1563:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1564:fltk-1.3.4-1/png/pngrutil.c **** 
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->colorspace.flags |= PNG_COLORSPACE_INVALID;
1566:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
1567:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
1568:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
1569:fltk-1.3.4-1/png/pngrutil.c **** }
1570:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP */
1571:fltk-1.3.4-1/png/pngrutil.c **** 
1572:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_sPLT_SUPPORTED
1573:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1574:fltk-1.3.4-1/png/pngrutil.c **** png_handle_sPLT(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1575:fltk-1.3.4-1/png/pngrutil.c **** /* Note: this does not properly handle chunks that are > 64K under DOS */
1576:fltk-1.3.4-1/png/pngrutil.c **** {
1577:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep entry_start, buffer;
1578:fltk-1.3.4-1/png/pngrutil.c ****    png_sPLT_t new_palette;
1579:fltk-1.3.4-1/png/pngrutil.c ****    png_sPLT_entryp pp;
1580:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 data_length;
1581:fltk-1.3.4-1/png/pngrutil.c ****    int entry_size, i;
1582:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 skip = 0;
1583:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 dl;
1584:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t max_dl;
1585:fltk-1.3.4-1/png/pngrutil.c **** 
1586:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_sPLT");
1587:fltk-1.3.4-1/png/pngrutil.c **** 
1588:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_USER_LIMITS_SUPPORTED
1589:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->user_chunk_cache_max != 0)
1590:fltk-1.3.4-1/png/pngrutil.c ****    {
1591:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->user_chunk_cache_max == 1)
1592:fltk-1.3.4-1/png/pngrutil.c ****       {
1593:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
1594:fltk-1.3.4-1/png/pngrutil.c ****          return;
1595:fltk-1.3.4-1/png/pngrutil.c ****       }
1596:fltk-1.3.4-1/png/pngrutil.c **** 
1597:fltk-1.3.4-1/png/pngrutil.c ****       if (--png_ptr->user_chunk_cache_max == 1)
1598:fltk-1.3.4-1/png/pngrutil.c ****       {
1599:fltk-1.3.4-1/png/pngrutil.c ****          png_warning(png_ptr, "No space in chunk cache for sPLT");
1600:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
1601:fltk-1.3.4-1/png/pngrutil.c ****          return;
1602:fltk-1.3.4-1/png/pngrutil.c ****       }
1603:fltk-1.3.4-1/png/pngrutil.c ****    }
1604:fltk-1.3.4-1/png/pngrutil.c **** #endif
1605:fltk-1.3.4-1/png/pngrutil.c **** 
1606:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1607:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1608:fltk-1.3.4-1/png/pngrutil.c **** 
1609:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
1610:fltk-1.3.4-1/png/pngrutil.c ****    {
1611:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1612:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1613:fltk-1.3.4-1/png/pngrutil.c ****       return;
1614:fltk-1.3.4-1/png/pngrutil.c ****    }
1615:fltk-1.3.4-1/png/pngrutil.c **** 
1616:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_MAX_MALLOC_64K
1617:fltk-1.3.4-1/png/pngrutil.c ****    if (length > 65535U)
1618:fltk-1.3.4-1/png/pngrutil.c ****    {
1619:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1620:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "too large to fit in memory");
1621:fltk-1.3.4-1/png/pngrutil.c ****       return;
1622:fltk-1.3.4-1/png/pngrutil.c ****    }
1623:fltk-1.3.4-1/png/pngrutil.c **** #endif
1624:fltk-1.3.4-1/png/pngrutil.c **** 
1625:fltk-1.3.4-1/png/pngrutil.c ****    buffer = png_read_buffer(png_ptr, length+1, 2/*silent*/);
1626:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
1627:fltk-1.3.4-1/png/pngrutil.c ****    {
1628:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1629:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
1630:fltk-1.3.4-1/png/pngrutil.c ****       return;
1631:fltk-1.3.4-1/png/pngrutil.c ****    }
1632:fltk-1.3.4-1/png/pngrutil.c **** 
1633:fltk-1.3.4-1/png/pngrutil.c **** 
1634:fltk-1.3.4-1/png/pngrutil.c ****    /* WARNING: this may break if size_t is less than 32 bits; it is assumed
1635:fltk-1.3.4-1/png/pngrutil.c ****     * that the PNG_MAX_MALLOC_64K test is enabled in this case, but this is a
1636:fltk-1.3.4-1/png/pngrutil.c ****     * potential breakage point if the types in pngconf.h aren't exactly right.
1637:fltk-1.3.4-1/png/pngrutil.c ****     */
1638:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buffer, length);
1639:fltk-1.3.4-1/png/pngrutil.c **** 
1640:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, skip) != 0)
1641:fltk-1.3.4-1/png/pngrutil.c ****       return;
1642:fltk-1.3.4-1/png/pngrutil.c **** 
1643:fltk-1.3.4-1/png/pngrutil.c ****    buffer[length] = 0;
1644:fltk-1.3.4-1/png/pngrutil.c **** 
1645:fltk-1.3.4-1/png/pngrutil.c ****    for (entry_start = buffer; *entry_start; entry_start++)
1646:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
1647:fltk-1.3.4-1/png/pngrutil.c **** 
1648:fltk-1.3.4-1/png/pngrutil.c ****    ++entry_start;
1649:fltk-1.3.4-1/png/pngrutil.c **** 
1650:fltk-1.3.4-1/png/pngrutil.c ****    /* A sample depth should follow the separator, and we should be on it  */
1651:fltk-1.3.4-1/png/pngrutil.c ****    if (entry_start > buffer + length - 2)
1652:fltk-1.3.4-1/png/pngrutil.c ****    {
1653:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "malformed sPLT chunk");
1654:fltk-1.3.4-1/png/pngrutil.c ****       return;
1655:fltk-1.3.4-1/png/pngrutil.c ****    }
1656:fltk-1.3.4-1/png/pngrutil.c **** 
1657:fltk-1.3.4-1/png/pngrutil.c ****    new_palette.depth = *entry_start++;
1658:fltk-1.3.4-1/png/pngrutil.c ****    entry_size = (new_palette.depth == 8 ? 6 : 10);
1659:fltk-1.3.4-1/png/pngrutil.c ****    /* This must fit in a png_uint_32 because it is derived from the original
1660:fltk-1.3.4-1/png/pngrutil.c ****     * chunk data length.
1661:fltk-1.3.4-1/png/pngrutil.c ****     */
1662:fltk-1.3.4-1/png/pngrutil.c ****    data_length = length - (png_uint_32)(entry_start - buffer);
1663:fltk-1.3.4-1/png/pngrutil.c **** 
1664:fltk-1.3.4-1/png/pngrutil.c ****    /* Integrity-check the data length */
1665:fltk-1.3.4-1/png/pngrutil.c ****    if ((data_length % entry_size) != 0)
1666:fltk-1.3.4-1/png/pngrutil.c ****    {
1667:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "sPLT chunk has bad length");
1668:fltk-1.3.4-1/png/pngrutil.c ****       return;
1669:fltk-1.3.4-1/png/pngrutil.c ****    }
1670:fltk-1.3.4-1/png/pngrutil.c **** 
1671:fltk-1.3.4-1/png/pngrutil.c ****    dl = (png_int_32)(data_length / entry_size);
1672:fltk-1.3.4-1/png/pngrutil.c ****    max_dl = PNG_SIZE_MAX / (sizeof (png_sPLT_entry));
1673:fltk-1.3.4-1/png/pngrutil.c **** 
1674:fltk-1.3.4-1/png/pngrutil.c ****    if (dl > max_dl)
1675:fltk-1.3.4-1/png/pngrutil.c ****    {
1676:fltk-1.3.4-1/png/pngrutil.c ****        png_warning(png_ptr, "sPLT chunk too long");
1677:fltk-1.3.4-1/png/pngrutil.c ****        return;
1678:fltk-1.3.4-1/png/pngrutil.c ****    }
1679:fltk-1.3.4-1/png/pngrutil.c **** 
1680:fltk-1.3.4-1/png/pngrutil.c ****    new_palette.nentries = (png_int_32)(data_length / entry_size);
1681:fltk-1.3.4-1/png/pngrutil.c **** 
1682:fltk-1.3.4-1/png/pngrutil.c ****    new_palette.entries = (png_sPLT_entryp)png_malloc_warn(
1683:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr, new_palette.nentries * (sizeof (png_sPLT_entry)));
1684:fltk-1.3.4-1/png/pngrutil.c **** 
1685:fltk-1.3.4-1/png/pngrutil.c ****    if (new_palette.entries == NULL)
1686:fltk-1.3.4-1/png/pngrutil.c ****    {
1687:fltk-1.3.4-1/png/pngrutil.c ****        png_warning(png_ptr, "sPLT chunk requires too much memory");
1688:fltk-1.3.4-1/png/pngrutil.c ****        return;
1689:fltk-1.3.4-1/png/pngrutil.c ****    }
1690:fltk-1.3.4-1/png/pngrutil.c **** 
1691:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_POINTER_INDEXING_SUPPORTED
1692:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < new_palette.nentries; i++)
1693:fltk-1.3.4-1/png/pngrutil.c ****    {
1694:fltk-1.3.4-1/png/pngrutil.c ****       pp = new_palette.entries + i;
1695:fltk-1.3.4-1/png/pngrutil.c **** 
1696:fltk-1.3.4-1/png/pngrutil.c ****       if (new_palette.depth == 8)
1697:fltk-1.3.4-1/png/pngrutil.c ****       {
1698:fltk-1.3.4-1/png/pngrutil.c ****          pp->red = *entry_start++;
1699:fltk-1.3.4-1/png/pngrutil.c ****          pp->green = *entry_start++;
1700:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue = *entry_start++;
1701:fltk-1.3.4-1/png/pngrutil.c ****          pp->alpha = *entry_start++;
1702:fltk-1.3.4-1/png/pngrutil.c ****       }
1703:fltk-1.3.4-1/png/pngrutil.c **** 
1704:fltk-1.3.4-1/png/pngrutil.c ****       else
1705:fltk-1.3.4-1/png/pngrutil.c ****       {
1706:fltk-1.3.4-1/png/pngrutil.c ****          pp->red   = png_get_uint_16(entry_start); entry_start += 2;
1707:fltk-1.3.4-1/png/pngrutil.c ****          pp->green = png_get_uint_16(entry_start); entry_start += 2;
1708:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue  = png_get_uint_16(entry_start); entry_start += 2;
1709:fltk-1.3.4-1/png/pngrutil.c ****          pp->alpha = png_get_uint_16(entry_start); entry_start += 2;
1710:fltk-1.3.4-1/png/pngrutil.c ****       }
1711:fltk-1.3.4-1/png/pngrutil.c **** 
1712:fltk-1.3.4-1/png/pngrutil.c ****       pp->frequency = png_get_uint_16(entry_start); entry_start += 2;
1713:fltk-1.3.4-1/png/pngrutil.c ****    }
1714:fltk-1.3.4-1/png/pngrutil.c **** #else
1715:fltk-1.3.4-1/png/pngrutil.c ****    pp = new_palette.entries;
1716:fltk-1.3.4-1/png/pngrutil.c **** 
1717:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < new_palette.nentries; i++)
1718:fltk-1.3.4-1/png/pngrutil.c ****    {
1719:fltk-1.3.4-1/png/pngrutil.c **** 
1720:fltk-1.3.4-1/png/pngrutil.c ****       if (new_palette.depth == 8)
1721:fltk-1.3.4-1/png/pngrutil.c ****       {
1722:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].red   = *entry_start++;
1723:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].green = *entry_start++;
1724:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].blue  = *entry_start++;
1725:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].alpha = *entry_start++;
1726:fltk-1.3.4-1/png/pngrutil.c ****       }
1727:fltk-1.3.4-1/png/pngrutil.c **** 
1728:fltk-1.3.4-1/png/pngrutil.c ****       else
1729:fltk-1.3.4-1/png/pngrutil.c ****       {
1730:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].red   = png_get_uint_16(entry_start); entry_start += 2;
1731:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].green = png_get_uint_16(entry_start); entry_start += 2;
1732:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].blue  = png_get_uint_16(entry_start); entry_start += 2;
1733:fltk-1.3.4-1/png/pngrutil.c ****          pp[i].alpha = png_get_uint_16(entry_start); entry_start += 2;
1734:fltk-1.3.4-1/png/pngrutil.c ****       }
1735:fltk-1.3.4-1/png/pngrutil.c **** 
1736:fltk-1.3.4-1/png/pngrutil.c ****       pp[i].frequency = png_get_uint_16(entry_start); entry_start += 2;
1737:fltk-1.3.4-1/png/pngrutil.c ****    }
1738:fltk-1.3.4-1/png/pngrutil.c **** #endif
1739:fltk-1.3.4-1/png/pngrutil.c **** 
1740:fltk-1.3.4-1/png/pngrutil.c ****    /* Discard all chunk data except the name and stash that */
1741:fltk-1.3.4-1/png/pngrutil.c ****    new_palette.name = (png_charp)buffer;
1742:fltk-1.3.4-1/png/pngrutil.c **** 
1743:fltk-1.3.4-1/png/pngrutil.c ****    png_set_sPLT(png_ptr, info_ptr, &new_palette, 1);
1744:fltk-1.3.4-1/png/pngrutil.c **** 
1745:fltk-1.3.4-1/png/pngrutil.c ****    png_free(png_ptr, new_palette.entries);
1746:fltk-1.3.4-1/png/pngrutil.c **** }
1747:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sPLT */
1748:fltk-1.3.4-1/png/pngrutil.c **** 
1749:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_tRNS_SUPPORTED
1750:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1751:fltk-1.3.4-1/png/pngrutil.c **** png_handle_tRNS(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1752:fltk-1.3.4-1/png/pngrutil.c **** {
1753:fltk-1.3.4-1/png/pngrutil.c ****    png_byte readbuf[PNG_MAX_PALETTE_LENGTH];
1754:fltk-1.3.4-1/png/pngrutil.c **** 
1755:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_tRNS");
1756:fltk-1.3.4-1/png/pngrutil.c **** 
1757:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1758:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1759:fltk-1.3.4-1/png/pngrutil.c **** 
1760:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
1761:fltk-1.3.4-1/png/pngrutil.c ****    {
1762:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1763:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1764:fltk-1.3.4-1/png/pngrutil.c ****       return;
1765:fltk-1.3.4-1/png/pngrutil.c ****    }
1766:fltk-1.3.4-1/png/pngrutil.c **** 
1767:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_tRNS) != 0)
1768:fltk-1.3.4-1/png/pngrutil.c ****    {
1769:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1770:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
1771:fltk-1.3.4-1/png/pngrutil.c ****       return;
1772:fltk-1.3.4-1/png/pngrutil.c ****    }
1773:fltk-1.3.4-1/png/pngrutil.c **** 
1774:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_GRAY)
1775:fltk-1.3.4-1/png/pngrutil.c ****    {
1776:fltk-1.3.4-1/png/pngrutil.c ****       png_byte buf[2];
1777:fltk-1.3.4-1/png/pngrutil.c **** 
1778:fltk-1.3.4-1/png/pngrutil.c ****       if (length != 2)
1779:fltk-1.3.4-1/png/pngrutil.c ****       {
1780:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
1781:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
1782:fltk-1.3.4-1/png/pngrutil.c ****          return;
1783:fltk-1.3.4-1/png/pngrutil.c ****       }
1784:fltk-1.3.4-1/png/pngrutil.c **** 
1785:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, buf, 2);
1786:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = 1;
1787:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.gray = png_get_uint_16(buf);
1788:fltk-1.3.4-1/png/pngrutil.c ****    }
1789:fltk-1.3.4-1/png/pngrutil.c **** 
1790:fltk-1.3.4-1/png/pngrutil.c ****    else if (png_ptr->color_type == PNG_COLOR_TYPE_RGB)
1791:fltk-1.3.4-1/png/pngrutil.c ****    {
1792:fltk-1.3.4-1/png/pngrutil.c ****       png_byte buf[6];
1793:fltk-1.3.4-1/png/pngrutil.c **** 
1794:fltk-1.3.4-1/png/pngrutil.c ****       if (length != 6)
1795:fltk-1.3.4-1/png/pngrutil.c ****       {
1796:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
1797:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
1798:fltk-1.3.4-1/png/pngrutil.c ****          return;
1799:fltk-1.3.4-1/png/pngrutil.c ****       }
1800:fltk-1.3.4-1/png/pngrutil.c **** 
1801:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, buf, length);
1802:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = 1;
1803:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.red = png_get_uint_16(buf);
1804:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.green = png_get_uint_16(buf + 2);
1805:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.blue = png_get_uint_16(buf + 4);
1806:fltk-1.3.4-1/png/pngrutil.c ****    }
1807:fltk-1.3.4-1/png/pngrutil.c **** 
1808:fltk-1.3.4-1/png/pngrutil.c ****    else if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
1809:fltk-1.3.4-1/png/pngrutil.c ****    {
1810:fltk-1.3.4-1/png/pngrutil.c ****       if ((png_ptr->mode & PNG_HAVE_PLTE) == 0)
1811:fltk-1.3.4-1/png/pngrutil.c ****       {
1812:fltk-1.3.4-1/png/pngrutil.c ****          /* TODO: is this actually an error in the ISO spec? */
1813:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
1814:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "out of place");
1815:fltk-1.3.4-1/png/pngrutil.c ****          return;
1816:fltk-1.3.4-1/png/pngrutil.c ****       }
1817:fltk-1.3.4-1/png/pngrutil.c **** 
1818:fltk-1.3.4-1/png/pngrutil.c ****       if (length > png_ptr->num_palette || length > PNG_MAX_PALETTE_LENGTH ||
1819:fltk-1.3.4-1/png/pngrutil.c ****          length == 0)
1820:fltk-1.3.4-1/png/pngrutil.c ****       {
1821:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
1822:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
1823:fltk-1.3.4-1/png/pngrutil.c ****          return;
1824:fltk-1.3.4-1/png/pngrutil.c ****       }
1825:fltk-1.3.4-1/png/pngrutil.c **** 
1826:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, readbuf, length);
1827:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = (png_uint_16)length;
1828:fltk-1.3.4-1/png/pngrutil.c ****    }
1829:fltk-1.3.4-1/png/pngrutil.c **** 
1830:fltk-1.3.4-1/png/pngrutil.c ****    else
1831:fltk-1.3.4-1/png/pngrutil.c ****    {
1832:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1833:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid with alpha channel");
1834:fltk-1.3.4-1/png/pngrutil.c ****       return;
1835:fltk-1.3.4-1/png/pngrutil.c ****    }
1836:fltk-1.3.4-1/png/pngrutil.c **** 
1837:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
1838:fltk-1.3.4-1/png/pngrutil.c ****    {
1839:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = 0;
1840:fltk-1.3.4-1/png/pngrutil.c ****       return;
1841:fltk-1.3.4-1/png/pngrutil.c ****    }
1842:fltk-1.3.4-1/png/pngrutil.c **** 
1843:fltk-1.3.4-1/png/pngrutil.c ****    /* TODO: this is a horrible side effect in the palette case because the
1844:fltk-1.3.4-1/png/pngrutil.c ****     * png_struct ends up with a pointer to the tRNS buffer owned by the
1845:fltk-1.3.4-1/png/pngrutil.c ****     * png_info.  Fix this.
1846:fltk-1.3.4-1/png/pngrutil.c ****     */
1847:fltk-1.3.4-1/png/pngrutil.c ****    png_set_tRNS(png_ptr, info_ptr, readbuf, png_ptr->num_trans,
1848:fltk-1.3.4-1/png/pngrutil.c ****        &(png_ptr->trans_color));
1849:fltk-1.3.4-1/png/pngrutil.c **** }
1850:fltk-1.3.4-1/png/pngrutil.c **** #endif
1851:fltk-1.3.4-1/png/pngrutil.c **** 
1852:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_bKGD_SUPPORTED
1853:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1854:fltk-1.3.4-1/png/pngrutil.c **** png_handle_bKGD(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1855:fltk-1.3.4-1/png/pngrutil.c **** {
1856:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen;
1857:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[6];
1858:fltk-1.3.4-1/png/pngrutil.c ****    png_color_16 background;
1859:fltk-1.3.4-1/png/pngrutil.c **** 
1860:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_bKGD");
1861:fltk-1.3.4-1/png/pngrutil.c **** 
1862:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1863:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1864:fltk-1.3.4-1/png/pngrutil.c **** 
1865:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0 ||
1866:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE &&
1867:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_PLTE) == 0))
1868:fltk-1.3.4-1/png/pngrutil.c ****    {
1869:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1870:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1871:fltk-1.3.4-1/png/pngrutil.c ****       return;
1872:fltk-1.3.4-1/png/pngrutil.c ****    }
1873:fltk-1.3.4-1/png/pngrutil.c **** 
1874:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_bKGD) != 0)
1875:fltk-1.3.4-1/png/pngrutil.c ****    {
1876:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1877:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
1878:fltk-1.3.4-1/png/pngrutil.c ****       return;
1879:fltk-1.3.4-1/png/pngrutil.c ****    }
1880:fltk-1.3.4-1/png/pngrutil.c **** 
1881:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
1882:fltk-1.3.4-1/png/pngrutil.c ****       truelen = 1;
1883:fltk-1.3.4-1/png/pngrutil.c **** 
1884:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->color_type & PNG_COLOR_MASK_COLOR) != 0)
1885:fltk-1.3.4-1/png/pngrutil.c ****       truelen = 6;
1886:fltk-1.3.4-1/png/pngrutil.c **** 
1887:fltk-1.3.4-1/png/pngrutil.c ****    else
1888:fltk-1.3.4-1/png/pngrutil.c ****       truelen = 2;
1889:fltk-1.3.4-1/png/pngrutil.c **** 
1890:fltk-1.3.4-1/png/pngrutil.c ****    if (length != truelen)
1891:fltk-1.3.4-1/png/pngrutil.c ****    {
1892:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1893:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
1894:fltk-1.3.4-1/png/pngrutil.c ****       return;
1895:fltk-1.3.4-1/png/pngrutil.c ****    }
1896:fltk-1.3.4-1/png/pngrutil.c **** 
1897:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
1898:fltk-1.3.4-1/png/pngrutil.c **** 
1899:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
1900:fltk-1.3.4-1/png/pngrutil.c ****       return;
1901:fltk-1.3.4-1/png/pngrutil.c **** 
1902:fltk-1.3.4-1/png/pngrutil.c ****    /* We convert the index value into RGB components so that we can allow
1903:fltk-1.3.4-1/png/pngrutil.c ****     * arbitrary RGB values for background when we have transparency, and
1904:fltk-1.3.4-1/png/pngrutil.c ****     * so it is easy to determine the RGB values of the background color
1905:fltk-1.3.4-1/png/pngrutil.c ****     * from the info_ptr struct.
1906:fltk-1.3.4-1/png/pngrutil.c ****     */
1907:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
1908:fltk-1.3.4-1/png/pngrutil.c ****    {
1909:fltk-1.3.4-1/png/pngrutil.c ****       background.index = buf[0];
1910:fltk-1.3.4-1/png/pngrutil.c **** 
1911:fltk-1.3.4-1/png/pngrutil.c ****       if (info_ptr != NULL && info_ptr->num_palette != 0)
1912:fltk-1.3.4-1/png/pngrutil.c ****       {
1913:fltk-1.3.4-1/png/pngrutil.c ****          if (buf[0] >= info_ptr->num_palette)
1914:fltk-1.3.4-1/png/pngrutil.c ****          {
1915:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_benign_error(png_ptr, "invalid index");
1916:fltk-1.3.4-1/png/pngrutil.c ****             return;
1917:fltk-1.3.4-1/png/pngrutil.c ****          }
1918:fltk-1.3.4-1/png/pngrutil.c **** 
1919:fltk-1.3.4-1/png/pngrutil.c ****          background.red = (png_uint_16)png_ptr->palette[buf[0]].red;
1920:fltk-1.3.4-1/png/pngrutil.c ****          background.green = (png_uint_16)png_ptr->palette[buf[0]].green;
1921:fltk-1.3.4-1/png/pngrutil.c ****          background.blue = (png_uint_16)png_ptr->palette[buf[0]].blue;
1922:fltk-1.3.4-1/png/pngrutil.c ****       }
1923:fltk-1.3.4-1/png/pngrutil.c **** 
1924:fltk-1.3.4-1/png/pngrutil.c ****       else
1925:fltk-1.3.4-1/png/pngrutil.c ****          background.red = background.green = background.blue = 0;
1926:fltk-1.3.4-1/png/pngrutil.c **** 
1927:fltk-1.3.4-1/png/pngrutil.c ****       background.gray = 0;
1928:fltk-1.3.4-1/png/pngrutil.c ****    }
1929:fltk-1.3.4-1/png/pngrutil.c **** 
1930:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->color_type & PNG_COLOR_MASK_COLOR) == 0) /* GRAY */
1931:fltk-1.3.4-1/png/pngrutil.c ****    {
1932:fltk-1.3.4-1/png/pngrutil.c ****       background.index = 0;
1933:fltk-1.3.4-1/png/pngrutil.c ****       background.red =
1934:fltk-1.3.4-1/png/pngrutil.c ****       background.green =
1935:fltk-1.3.4-1/png/pngrutil.c ****       background.blue =
1936:fltk-1.3.4-1/png/pngrutil.c ****       background.gray = png_get_uint_16(buf);
1937:fltk-1.3.4-1/png/pngrutil.c ****    }
1938:fltk-1.3.4-1/png/pngrutil.c **** 
1939:fltk-1.3.4-1/png/pngrutil.c ****    else
1940:fltk-1.3.4-1/png/pngrutil.c ****    {
1941:fltk-1.3.4-1/png/pngrutil.c ****       background.index = 0;
1942:fltk-1.3.4-1/png/pngrutil.c ****       background.red = png_get_uint_16(buf);
1943:fltk-1.3.4-1/png/pngrutil.c ****       background.green = png_get_uint_16(buf + 2);
1944:fltk-1.3.4-1/png/pngrutil.c ****       background.blue = png_get_uint_16(buf + 4);
1945:fltk-1.3.4-1/png/pngrutil.c ****       background.gray = 0;
1946:fltk-1.3.4-1/png/pngrutil.c ****    }
1947:fltk-1.3.4-1/png/pngrutil.c **** 
1948:fltk-1.3.4-1/png/pngrutil.c ****    png_set_bKGD(png_ptr, info_ptr, &background);
1949:fltk-1.3.4-1/png/pngrutil.c **** }
1950:fltk-1.3.4-1/png/pngrutil.c **** #endif
1951:fltk-1.3.4-1/png/pngrutil.c **** 
1952:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_hIST_SUPPORTED
1953:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
1954:fltk-1.3.4-1/png/pngrutil.c **** png_handle_hIST(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
1955:fltk-1.3.4-1/png/pngrutil.c **** {
1956:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int num, i;
1957:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_16 readbuf[PNG_MAX_PALETTE_LENGTH];
1958:fltk-1.3.4-1/png/pngrutil.c **** 
1959:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_hIST");
1960:fltk-1.3.4-1/png/pngrutil.c **** 
1961:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
1962:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
1963:fltk-1.3.4-1/png/pngrutil.c **** 
1964:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0 ||
1965:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_PLTE) == 0)
1966:fltk-1.3.4-1/png/pngrutil.c ****    {
1967:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1968:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
1969:fltk-1.3.4-1/png/pngrutil.c ****       return;
1970:fltk-1.3.4-1/png/pngrutil.c ****    }
1971:fltk-1.3.4-1/png/pngrutil.c **** 
1972:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_hIST) != 0)
1973:fltk-1.3.4-1/png/pngrutil.c ****    {
1974:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1975:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
1976:fltk-1.3.4-1/png/pngrutil.c ****       return;
1977:fltk-1.3.4-1/png/pngrutil.c ****    }
1978:fltk-1.3.4-1/png/pngrutil.c **** 
1979:fltk-1.3.4-1/png/pngrutil.c ****    num = length / 2 ;
1980:fltk-1.3.4-1/png/pngrutil.c **** 
1981:fltk-1.3.4-1/png/pngrutil.c ****    if (num != png_ptr->num_palette || num > PNG_MAX_PALETTE_LENGTH)
1982:fltk-1.3.4-1/png/pngrutil.c ****    {
1983:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
1984:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
1985:fltk-1.3.4-1/png/pngrutil.c ****       return;
1986:fltk-1.3.4-1/png/pngrutil.c ****    }
1987:fltk-1.3.4-1/png/pngrutil.c **** 
1988:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < num; i++)
1989:fltk-1.3.4-1/png/pngrutil.c ****    {
1990:fltk-1.3.4-1/png/pngrutil.c ****       png_byte buf[2];
1991:fltk-1.3.4-1/png/pngrutil.c **** 
1992:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_read(png_ptr, buf, 2);
1993:fltk-1.3.4-1/png/pngrutil.c ****       readbuf[i] = png_get_uint_16(buf);
1994:fltk-1.3.4-1/png/pngrutil.c ****    }
1995:fltk-1.3.4-1/png/pngrutil.c **** 
1996:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
1997:fltk-1.3.4-1/png/pngrutil.c ****       return;
1998:fltk-1.3.4-1/png/pngrutil.c **** 
1999:fltk-1.3.4-1/png/pngrutil.c ****    png_set_hIST(png_ptr, info_ptr, readbuf);
2000:fltk-1.3.4-1/png/pngrutil.c **** }
2001:fltk-1.3.4-1/png/pngrutil.c **** #endif
2002:fltk-1.3.4-1/png/pngrutil.c **** 
2003:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_pHYs_SUPPORTED
2004:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2005:fltk-1.3.4-1/png/pngrutil.c **** png_handle_pHYs(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2006:fltk-1.3.4-1/png/pngrutil.c **** {
2007:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
2008:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 res_x, res_y;
2009:fltk-1.3.4-1/png/pngrutil.c ****    int unit_type;
2010:fltk-1.3.4-1/png/pngrutil.c **** 
2011:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_pHYs");
2012:fltk-1.3.4-1/png/pngrutil.c **** 
2013:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2014:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2015:fltk-1.3.4-1/png/pngrutil.c **** 
2016:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2017:fltk-1.3.4-1/png/pngrutil.c ****    {
2018:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2019:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
2020:fltk-1.3.4-1/png/pngrutil.c ****       return;
2021:fltk-1.3.4-1/png/pngrutil.c ****    }
2022:fltk-1.3.4-1/png/pngrutil.c **** 
2023:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_pHYs) != 0)
2024:fltk-1.3.4-1/png/pngrutil.c ****    {
2025:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2026:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
2027:fltk-1.3.4-1/png/pngrutil.c ****       return;
2028:fltk-1.3.4-1/png/pngrutil.c ****    }
2029:fltk-1.3.4-1/png/pngrutil.c **** 
2030:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 9)
2031:fltk-1.3.4-1/png/pngrutil.c ****    {
2032:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2033:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
2034:fltk-1.3.4-1/png/pngrutil.c ****       return;
2035:fltk-1.3.4-1/png/pngrutil.c ****    }
2036:fltk-1.3.4-1/png/pngrutil.c **** 
2037:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, 9);
2038:fltk-1.3.4-1/png/pngrutil.c **** 
2039:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
2040:fltk-1.3.4-1/png/pngrutil.c ****       return;
2041:fltk-1.3.4-1/png/pngrutil.c **** 
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_x = png_get_uint_32(buf);
2043:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
2044:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
2045:fltk-1.3.4-1/png/pngrutil.c ****    png_set_pHYs(png_ptr, info_ptr, res_x, res_y, unit_type);
2046:fltk-1.3.4-1/png/pngrutil.c **** }
2047:fltk-1.3.4-1/png/pngrutil.c **** #endif
2048:fltk-1.3.4-1/png/pngrutil.c **** 
2049:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_oFFs_SUPPORTED
2050:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2051:fltk-1.3.4-1/png/pngrutil.c **** png_handle_oFFs(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2052:fltk-1.3.4-1/png/pngrutil.c **** {
2053:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
2054:fltk-1.3.4-1/png/pngrutil.c ****    png_int_32 offset_x, offset_y;
2055:fltk-1.3.4-1/png/pngrutil.c ****    int unit_type;
2056:fltk-1.3.4-1/png/pngrutil.c **** 
2057:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_oFFs");
2058:fltk-1.3.4-1/png/pngrutil.c **** 
2059:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2060:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2061:fltk-1.3.4-1/png/pngrutil.c **** 
2062:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2063:fltk-1.3.4-1/png/pngrutil.c ****    {
2064:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2065:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
2066:fltk-1.3.4-1/png/pngrutil.c ****       return;
2067:fltk-1.3.4-1/png/pngrutil.c ****    }
2068:fltk-1.3.4-1/png/pngrutil.c **** 
2069:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_oFFs) != 0)
2070:fltk-1.3.4-1/png/pngrutil.c ****    {
2071:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2072:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
2073:fltk-1.3.4-1/png/pngrutil.c ****       return;
2074:fltk-1.3.4-1/png/pngrutil.c ****    }
2075:fltk-1.3.4-1/png/pngrutil.c **** 
2076:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 9)
2077:fltk-1.3.4-1/png/pngrutil.c ****    {
2078:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2079:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
2080:fltk-1.3.4-1/png/pngrutil.c ****       return;
2081:fltk-1.3.4-1/png/pngrutil.c ****    }
2082:fltk-1.3.4-1/png/pngrutil.c **** 
2083:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, 9);
2084:fltk-1.3.4-1/png/pngrutil.c **** 
2085:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
2086:fltk-1.3.4-1/png/pngrutil.c ****       return;
2087:fltk-1.3.4-1/png/pngrutil.c **** 
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_x = png_get_int_32(buf);
2089:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
2090:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
2091:fltk-1.3.4-1/png/pngrutil.c ****    png_set_oFFs(png_ptr, info_ptr, offset_x, offset_y, unit_type);
2092:fltk-1.3.4-1/png/pngrutil.c **** }
2093:fltk-1.3.4-1/png/pngrutil.c **** #endif
2094:fltk-1.3.4-1/png/pngrutil.c **** 
2095:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_pCAL_SUPPORTED
2096:fltk-1.3.4-1/png/pngrutil.c **** /* Read the pCAL chunk (described in the PNG Extensions document) */
2097:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2098:fltk-1.3.4-1/png/pngrutil.c **** png_handle_pCAL(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2099:fltk-1.3.4-1/png/pngrutil.c **** {
2100:fltk-1.3.4-1/png/pngrutil.c ****    png_int_32 X0, X1;
2101:fltk-1.3.4-1/png/pngrutil.c ****    png_byte type, nparams;
2102:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer, buf, units, endptr;
2103:fltk-1.3.4-1/png/pngrutil.c ****    png_charpp params;
2104:fltk-1.3.4-1/png/pngrutil.c ****    int i;
2105:fltk-1.3.4-1/png/pngrutil.c **** 
2106:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_pCAL");
2107:fltk-1.3.4-1/png/pngrutil.c **** 
2108:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2109:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2110:fltk-1.3.4-1/png/pngrutil.c **** 
2111:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2112:fltk-1.3.4-1/png/pngrutil.c ****    {
2113:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2114:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
2115:fltk-1.3.4-1/png/pngrutil.c ****       return;
2116:fltk-1.3.4-1/png/pngrutil.c ****    }
2117:fltk-1.3.4-1/png/pngrutil.c **** 
2118:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_pCAL) != 0)
2119:fltk-1.3.4-1/png/pngrutil.c ****    {
2120:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2121:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
2122:fltk-1.3.4-1/png/pngrutil.c ****       return;
2123:fltk-1.3.4-1/png/pngrutil.c ****    }
2124:fltk-1.3.4-1/png/pngrutil.c **** 
2125:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(2, "Allocating and reading pCAL chunk data (%u bytes)",
2126:fltk-1.3.4-1/png/pngrutil.c ****        length + 1);
2127:fltk-1.3.4-1/png/pngrutil.c **** 
2128:fltk-1.3.4-1/png/pngrutil.c ****    buffer = png_read_buffer(png_ptr, length+1, 2/*silent*/);
2129:fltk-1.3.4-1/png/pngrutil.c **** 
2130:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
2131:fltk-1.3.4-1/png/pngrutil.c ****    {
2132:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2133:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
2134:fltk-1.3.4-1/png/pngrutil.c ****       return;
2135:fltk-1.3.4-1/png/pngrutil.c ****    }
2136:fltk-1.3.4-1/png/pngrutil.c **** 
2137:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buffer, length);
2138:fltk-1.3.4-1/png/pngrutil.c **** 
2139:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
2140:fltk-1.3.4-1/png/pngrutil.c ****       return;
2141:fltk-1.3.4-1/png/pngrutil.c **** 
2142:fltk-1.3.4-1/png/pngrutil.c ****    buffer[length] = 0; /* Null terminate the last string */
2143:fltk-1.3.4-1/png/pngrutil.c **** 
2144:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(3, "Finding end of pCAL purpose string");
2145:fltk-1.3.4-1/png/pngrutil.c ****    for (buf = buffer; *buf; buf++)
2146:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
2147:fltk-1.3.4-1/png/pngrutil.c **** 
2148:fltk-1.3.4-1/png/pngrutil.c ****    endptr = buffer + length;
2149:fltk-1.3.4-1/png/pngrutil.c **** 
2150:fltk-1.3.4-1/png/pngrutil.c ****    /* We need to have at least 12 bytes after the purpose string
2151:fltk-1.3.4-1/png/pngrutil.c ****     * in order to get the parameter information.
2152:fltk-1.3.4-1/png/pngrutil.c ****     */
2153:fltk-1.3.4-1/png/pngrutil.c ****    if (endptr <= buf + 12)
2154:fltk-1.3.4-1/png/pngrutil.c ****    {
2155:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
2156:fltk-1.3.4-1/png/pngrutil.c ****       return;
2157:fltk-1.3.4-1/png/pngrutil.c ****    }
2158:fltk-1.3.4-1/png/pngrutil.c **** 
2159:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(3, "Reading pCAL X0, X1, type, nparams, and units");
2160:fltk-1.3.4-1/png/pngrutil.c ****    X0 = png_get_int_32((png_bytep)buf+1);
2161:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
2162:fltk-1.3.4-1/png/pngrutil.c ****    type = buf[9];
2163:fltk-1.3.4-1/png/pngrutil.c ****    nparams = buf[10];
2164:fltk-1.3.4-1/png/pngrutil.c ****    units = buf + 11;
2165:fltk-1.3.4-1/png/pngrutil.c **** 
2166:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(3, "Checking pCAL equation type and number of parameters");
2167:fltk-1.3.4-1/png/pngrutil.c ****    /* Check that we have the right number of parameters for known
2168:fltk-1.3.4-1/png/pngrutil.c ****     * equation types.
2169:fltk-1.3.4-1/png/pngrutil.c ****     */
2170:fltk-1.3.4-1/png/pngrutil.c ****    if ((type == PNG_EQUATION_LINEAR && nparams != 2) ||
2171:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_BASE_E && nparams != 3) ||
2172:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_ARBITRARY && nparams != 3) ||
2173:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_HYPERBOLIC && nparams != 4))
2174:fltk-1.3.4-1/png/pngrutil.c ****    {
2175:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid parameter count");
2176:fltk-1.3.4-1/png/pngrutil.c ****       return;
2177:fltk-1.3.4-1/png/pngrutil.c ****    }
2178:fltk-1.3.4-1/png/pngrutil.c **** 
2179:fltk-1.3.4-1/png/pngrutil.c ****    else if (type >= PNG_EQUATION_LAST)
2180:fltk-1.3.4-1/png/pngrutil.c ****    {
2181:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "unrecognized equation type");
2182:fltk-1.3.4-1/png/pngrutil.c ****    }
2183:fltk-1.3.4-1/png/pngrutil.c **** 
2184:fltk-1.3.4-1/png/pngrutil.c ****    for (buf = units; *buf; buf++)
2185:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
2186:fltk-1.3.4-1/png/pngrutil.c **** 
2187:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(3, "Allocating pCAL parameters array");
2188:fltk-1.3.4-1/png/pngrutil.c **** 
2189:fltk-1.3.4-1/png/pngrutil.c ****    params = png_voidcast(png_charpp, png_malloc_warn(png_ptr,
2190:fltk-1.3.4-1/png/pngrutil.c ****        nparams * (sizeof (png_charp))));
2191:fltk-1.3.4-1/png/pngrutil.c **** 
2192:fltk-1.3.4-1/png/pngrutil.c ****    if (params == NULL)
2193:fltk-1.3.4-1/png/pngrutil.c ****    {
2194:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
2195:fltk-1.3.4-1/png/pngrutil.c ****       return;
2196:fltk-1.3.4-1/png/pngrutil.c ****    }
2197:fltk-1.3.4-1/png/pngrutil.c **** 
2198:fltk-1.3.4-1/png/pngrutil.c ****    /* Get pointers to the start of each parameter string. */
2199:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < nparams; i++)
2200:fltk-1.3.4-1/png/pngrutil.c ****    {
2201:fltk-1.3.4-1/png/pngrutil.c ****       buf++; /* Skip the null string terminator from previous parameter. */
2202:fltk-1.3.4-1/png/pngrutil.c **** 
2203:fltk-1.3.4-1/png/pngrutil.c ****       png_debug1(3, "Reading pCAL parameter %d", i);
2204:fltk-1.3.4-1/png/pngrutil.c **** 
2205:fltk-1.3.4-1/png/pngrutil.c ****       for (params[i] = (png_charp)buf; buf <= endptr && *buf != 0; buf++)
2206:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
2207:fltk-1.3.4-1/png/pngrutil.c **** 
2208:fltk-1.3.4-1/png/pngrutil.c ****       /* Make sure we haven't run out of data yet */
2209:fltk-1.3.4-1/png/pngrutil.c ****       if (buf > endptr)
2210:fltk-1.3.4-1/png/pngrutil.c ****       {
2211:fltk-1.3.4-1/png/pngrutil.c ****          png_free(png_ptr, params);
2212:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid data");
2213:fltk-1.3.4-1/png/pngrutil.c ****          return;
2214:fltk-1.3.4-1/png/pngrutil.c ****       }
2215:fltk-1.3.4-1/png/pngrutil.c ****    }
2216:fltk-1.3.4-1/png/pngrutil.c **** 
2217:fltk-1.3.4-1/png/pngrutil.c ****    png_set_pCAL(png_ptr, info_ptr, (png_charp)buffer, X0, X1, type, nparams,
2218:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
2219:fltk-1.3.4-1/png/pngrutil.c **** 
2220:fltk-1.3.4-1/png/pngrutil.c ****    png_free(png_ptr, params);
2221:fltk-1.3.4-1/png/pngrutil.c **** }
2222:fltk-1.3.4-1/png/pngrutil.c **** #endif
2223:fltk-1.3.4-1/png/pngrutil.c **** 
2224:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_sCAL_SUPPORTED
2225:fltk-1.3.4-1/png/pngrutil.c **** /* Read the sCAL chunk */
2226:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2227:fltk-1.3.4-1/png/pngrutil.c **** png_handle_sCAL(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2228:fltk-1.3.4-1/png/pngrutil.c **** {
2229:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
2230:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t i;
2231:fltk-1.3.4-1/png/pngrutil.c ****    int state;
2232:fltk-1.3.4-1/png/pngrutil.c **** 
2233:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_sCAL");
2234:fltk-1.3.4-1/png/pngrutil.c **** 
2235:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2236:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2237:fltk-1.3.4-1/png/pngrutil.c **** 
2238:fltk-1.3.4-1/png/pngrutil.c ****    else if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2239:fltk-1.3.4-1/png/pngrutil.c ****    {
2240:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2241:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
2242:fltk-1.3.4-1/png/pngrutil.c ****       return;
2243:fltk-1.3.4-1/png/pngrutil.c ****    }
2244:fltk-1.3.4-1/png/pngrutil.c **** 
2245:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_sCAL) != 0)
2246:fltk-1.3.4-1/png/pngrutil.c ****    {
2247:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2248:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
2249:fltk-1.3.4-1/png/pngrutil.c ****       return;
2250:fltk-1.3.4-1/png/pngrutil.c ****    }
2251:fltk-1.3.4-1/png/pngrutil.c **** 
2252:fltk-1.3.4-1/png/pngrutil.c ****    /* Need unit type, width, \0, height: minimum 4 bytes */
2253:fltk-1.3.4-1/png/pngrutil.c ****    else if (length < 4)
2254:fltk-1.3.4-1/png/pngrutil.c ****    {
2255:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2256:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
2257:fltk-1.3.4-1/png/pngrutil.c ****       return;
2258:fltk-1.3.4-1/png/pngrutil.c ****    }
2259:fltk-1.3.4-1/png/pngrutil.c **** 
2260:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(2, "Allocating and reading sCAL chunk data (%u bytes)",
2261:fltk-1.3.4-1/png/pngrutil.c ****       length + 1);
2262:fltk-1.3.4-1/png/pngrutil.c **** 
2263:fltk-1.3.4-1/png/pngrutil.c ****    buffer = png_read_buffer(png_ptr, length+1, 2/*silent*/);
2264:fltk-1.3.4-1/png/pngrutil.c **** 
2265:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
2266:fltk-1.3.4-1/png/pngrutil.c ****    {
2267:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
2268:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2269:fltk-1.3.4-1/png/pngrutil.c ****       return;
2270:fltk-1.3.4-1/png/pngrutil.c ****    }
2271:fltk-1.3.4-1/png/pngrutil.c **** 
2272:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buffer, length);
2273:fltk-1.3.4-1/png/pngrutil.c ****    buffer[length] = 0; /* Null terminate the last string */
2274:fltk-1.3.4-1/png/pngrutil.c **** 
2275:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
2276:fltk-1.3.4-1/png/pngrutil.c ****       return;
2277:fltk-1.3.4-1/png/pngrutil.c **** 
2278:fltk-1.3.4-1/png/pngrutil.c ****    /* Validate the unit. */
2279:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer[0] != 1 && buffer[0] != 2)
2280:fltk-1.3.4-1/png/pngrutil.c ****    {
2281:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid unit");
2282:fltk-1.3.4-1/png/pngrutil.c ****       return;
2283:fltk-1.3.4-1/png/pngrutil.c ****    }
2284:fltk-1.3.4-1/png/pngrutil.c **** 
2285:fltk-1.3.4-1/png/pngrutil.c ****    /* Validate the ASCII numbers, need two ASCII numbers separated by
2286:fltk-1.3.4-1/png/pngrutil.c ****     * a '\0' and they need to fit exactly in the chunk data.
2287:fltk-1.3.4-1/png/pngrutil.c ****     */
2288:fltk-1.3.4-1/png/pngrutil.c ****    i = 1;
2289:fltk-1.3.4-1/png/pngrutil.c ****    state = 0;
2290:fltk-1.3.4-1/png/pngrutil.c **** 
2291:fltk-1.3.4-1/png/pngrutil.c ****    if (png_check_fp_number((png_const_charp)buffer, length, &state, &i) == 0 ||
2292:fltk-1.3.4-1/png/pngrutil.c ****        i >= length || buffer[i++] != 0)
2293:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "bad width format");
2294:fltk-1.3.4-1/png/pngrutil.c **** 
2295:fltk-1.3.4-1/png/pngrutil.c ****    else if (PNG_FP_IS_POSITIVE(state) == 0)
2296:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "non-positive width");
2297:fltk-1.3.4-1/png/pngrutil.c **** 
2298:fltk-1.3.4-1/png/pngrutil.c ****    else
2299:fltk-1.3.4-1/png/pngrutil.c ****    {
2300:fltk-1.3.4-1/png/pngrutil.c ****       png_size_t heighti = i;
2301:fltk-1.3.4-1/png/pngrutil.c **** 
2302:fltk-1.3.4-1/png/pngrutil.c ****       state = 0;
2303:fltk-1.3.4-1/png/pngrutil.c ****       if (png_check_fp_number((png_const_charp)buffer, length,
2304:fltk-1.3.4-1/png/pngrutil.c ****           &state, &i) == 0 || i != length)
2305:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "bad height format");
2306:fltk-1.3.4-1/png/pngrutil.c **** 
2307:fltk-1.3.4-1/png/pngrutil.c ****       else if (PNG_FP_IS_POSITIVE(state) == 0)
2308:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "non-positive height");
2309:fltk-1.3.4-1/png/pngrutil.c **** 
2310:fltk-1.3.4-1/png/pngrutil.c ****       else
2311:fltk-1.3.4-1/png/pngrutil.c ****          /* This is the (only) success case. */
2312:fltk-1.3.4-1/png/pngrutil.c ****          png_set_sCAL_s(png_ptr, info_ptr, buffer[0],
2313:fltk-1.3.4-1/png/pngrutil.c ****             (png_charp)buffer+1, (png_charp)buffer+heighti);
2314:fltk-1.3.4-1/png/pngrutil.c ****    }
2315:fltk-1.3.4-1/png/pngrutil.c **** }
2316:fltk-1.3.4-1/png/pngrutil.c **** #endif
2317:fltk-1.3.4-1/png/pngrutil.c **** 
2318:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_tIME_SUPPORTED
2319:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2320:fltk-1.3.4-1/png/pngrutil.c **** png_handle_tIME(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2321:fltk-1.3.4-1/png/pngrutil.c **** {
2322:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[7];
2323:fltk-1.3.4-1/png/pngrutil.c ****    png_time mod_time;
2324:fltk-1.3.4-1/png/pngrutil.c **** 
2325:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_tIME");
2326:fltk-1.3.4-1/png/pngrutil.c **** 
2327:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2328:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2329:fltk-1.3.4-1/png/pngrutil.c **** 
2330:fltk-1.3.4-1/png/pngrutil.c ****    else if (info_ptr != NULL && (info_ptr->valid & PNG_INFO_tIME) != 0)
2331:fltk-1.3.4-1/png/pngrutil.c ****    {
2332:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2333:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
2334:fltk-1.3.4-1/png/pngrutil.c ****       return;
2335:fltk-1.3.4-1/png/pngrutil.c ****    }
2336:fltk-1.3.4-1/png/pngrutil.c **** 
2337:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2338:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
2339:fltk-1.3.4-1/png/pngrutil.c **** 
2340:fltk-1.3.4-1/png/pngrutil.c ****    if (length != 7)
2341:fltk-1.3.4-1/png/pngrutil.c ****    {
2342:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2343:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
2344:fltk-1.3.4-1/png/pngrutil.c ****       return;
2345:fltk-1.3.4-1/png/pngrutil.c ****    }
2346:fltk-1.3.4-1/png/pngrutil.c **** 
2347:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, 7);
2348:fltk-1.3.4-1/png/pngrutil.c **** 
2349:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
2350:fltk-1.3.4-1/png/pngrutil.c ****       return;
2351:fltk-1.3.4-1/png/pngrutil.c **** 
2352:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.second = buf[6];
2353:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.minute = buf[5];
2354:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.hour = buf[4];
2355:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.day = buf[3];
2356:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.month = buf[2];
2357:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.year = png_get_uint_16(buf);
2358:fltk-1.3.4-1/png/pngrutil.c **** 
2359:fltk-1.3.4-1/png/pngrutil.c ****    png_set_tIME(png_ptr, info_ptr, &mod_time);
2360:fltk-1.3.4-1/png/pngrutil.c **** }
2361:fltk-1.3.4-1/png/pngrutil.c **** #endif
2362:fltk-1.3.4-1/png/pngrutil.c **** 
2363:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_tEXt_SUPPORTED
2364:fltk-1.3.4-1/png/pngrutil.c **** /* Note: this does not properly handle chunks that are > 64K under DOS */
2365:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2366:fltk-1.3.4-1/png/pngrutil.c **** png_handle_tEXt(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2367:fltk-1.3.4-1/png/pngrutil.c **** {
2368:fltk-1.3.4-1/png/pngrutil.c ****    png_text  text_info;
2369:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
2370:fltk-1.3.4-1/png/pngrutil.c ****    png_charp key;
2371:fltk-1.3.4-1/png/pngrutil.c ****    png_charp text;
2372:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 skip = 0;
2373:fltk-1.3.4-1/png/pngrutil.c **** 
2374:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_tEXt");
2375:fltk-1.3.4-1/png/pngrutil.c **** 
2376:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_USER_LIMITS_SUPPORTED
2377:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->user_chunk_cache_max != 0)
2378:fltk-1.3.4-1/png/pngrutil.c ****    {
2379:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->user_chunk_cache_max == 1)
2380:fltk-1.3.4-1/png/pngrutil.c ****       {
2381:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
2382:fltk-1.3.4-1/png/pngrutil.c ****          return;
2383:fltk-1.3.4-1/png/pngrutil.c ****       }
2384:fltk-1.3.4-1/png/pngrutil.c **** 
2385:fltk-1.3.4-1/png/pngrutil.c ****       if (--png_ptr->user_chunk_cache_max == 1)
2386:fltk-1.3.4-1/png/pngrutil.c ****       {
2387:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
2388:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
2389:fltk-1.3.4-1/png/pngrutil.c ****          return;
2390:fltk-1.3.4-1/png/pngrutil.c ****       }
2391:fltk-1.3.4-1/png/pngrutil.c ****    }
2392:fltk-1.3.4-1/png/pngrutil.c **** #endif
2393:fltk-1.3.4-1/png/pngrutil.c **** 
2394:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2395:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2396:fltk-1.3.4-1/png/pngrutil.c **** 
2397:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2398:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
2399:fltk-1.3.4-1/png/pngrutil.c **** 
2400:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_MAX_MALLOC_64K
2401:fltk-1.3.4-1/png/pngrutil.c ****    if (length > 65535U)
2402:fltk-1.3.4-1/png/pngrutil.c ****    {
2403:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2404:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "too large to fit in memory");
2405:fltk-1.3.4-1/png/pngrutil.c ****       return;
2406:fltk-1.3.4-1/png/pngrutil.c ****    }
2407:fltk-1.3.4-1/png/pngrutil.c **** #endif
2408:fltk-1.3.4-1/png/pngrutil.c **** 
2409:fltk-1.3.4-1/png/pngrutil.c ****    buffer = png_read_buffer(png_ptr, length+1, 1/*warn*/);
2410:fltk-1.3.4-1/png/pngrutil.c **** 
2411:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
2412:fltk-1.3.4-1/png/pngrutil.c ****    {
2413:fltk-1.3.4-1/png/pngrutil.c ****      png_chunk_benign_error(png_ptr, "out of memory");
2414:fltk-1.3.4-1/png/pngrutil.c ****      return;
2415:fltk-1.3.4-1/png/pngrutil.c ****    }
2416:fltk-1.3.4-1/png/pngrutil.c **** 
2417:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buffer, length);
2418:fltk-1.3.4-1/png/pngrutil.c **** 
2419:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, skip) != 0)
2420:fltk-1.3.4-1/png/pngrutil.c ****       return;
2421:fltk-1.3.4-1/png/pngrutil.c **** 
2422:fltk-1.3.4-1/png/pngrutil.c ****    key = (png_charp)buffer;
2423:fltk-1.3.4-1/png/pngrutil.c ****    key[length] = 0;
2424:fltk-1.3.4-1/png/pngrutil.c **** 
2425:fltk-1.3.4-1/png/pngrutil.c ****    for (text = key; *text; text++)
2426:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
2427:fltk-1.3.4-1/png/pngrutil.c **** 
2428:fltk-1.3.4-1/png/pngrutil.c ****    if (text != key + length)
2429:fltk-1.3.4-1/png/pngrutil.c ****       text++;
2430:fltk-1.3.4-1/png/pngrutil.c **** 
2431:fltk-1.3.4-1/png/pngrutil.c ****    text_info.compression = PNG_TEXT_COMPRESSION_NONE;
2432:fltk-1.3.4-1/png/pngrutil.c ****    text_info.key = key;
2433:fltk-1.3.4-1/png/pngrutil.c ****    text_info.lang = NULL;
2434:fltk-1.3.4-1/png/pngrutil.c ****    text_info.lang_key = NULL;
2435:fltk-1.3.4-1/png/pngrutil.c ****    text_info.itxt_length = 0;
2436:fltk-1.3.4-1/png/pngrutil.c ****    text_info.text = text;
2437:fltk-1.3.4-1/png/pngrutil.c ****    text_info.text_length = strlen(text);
2438:fltk-1.3.4-1/png/pngrutil.c **** 
2439:fltk-1.3.4-1/png/pngrutil.c ****    if (png_set_text_2(png_ptr, info_ptr, &text_info, 1) != 0)
2440:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "Insufficient memory to process text chunk");
2441:fltk-1.3.4-1/png/pngrutil.c **** }
2442:fltk-1.3.4-1/png/pngrutil.c **** #endif
2443:fltk-1.3.4-1/png/pngrutil.c **** 
2444:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_zTXt_SUPPORTED
2445:fltk-1.3.4-1/png/pngrutil.c **** /* Note: this does not correctly handle chunks that are > 64K under DOS */
2446:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2447:fltk-1.3.4-1/png/pngrutil.c **** png_handle_zTXt(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2448:fltk-1.3.4-1/png/pngrutil.c **** {
2449:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
2450:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep       buffer;
2451:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32     keyword_length;
2452:fltk-1.3.4-1/png/pngrutil.c **** 
2453:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_zTXt");
2454:fltk-1.3.4-1/png/pngrutil.c **** 
2455:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_USER_LIMITS_SUPPORTED
2456:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->user_chunk_cache_max != 0)
2457:fltk-1.3.4-1/png/pngrutil.c ****    {
2458:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->user_chunk_cache_max == 1)
2459:fltk-1.3.4-1/png/pngrutil.c ****       {
2460:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
2461:fltk-1.3.4-1/png/pngrutil.c ****          return;
2462:fltk-1.3.4-1/png/pngrutil.c ****       }
2463:fltk-1.3.4-1/png/pngrutil.c **** 
2464:fltk-1.3.4-1/png/pngrutil.c ****       if (--png_ptr->user_chunk_cache_max == 1)
2465:fltk-1.3.4-1/png/pngrutil.c ****       {
2466:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
2467:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
2468:fltk-1.3.4-1/png/pngrutil.c ****          return;
2469:fltk-1.3.4-1/png/pngrutil.c ****       }
2470:fltk-1.3.4-1/png/pngrutil.c ****    }
2471:fltk-1.3.4-1/png/pngrutil.c **** #endif
2472:fltk-1.3.4-1/png/pngrutil.c **** 
2473:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2474:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2475:fltk-1.3.4-1/png/pngrutil.c **** 
2476:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2477:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
2478:fltk-1.3.4-1/png/pngrutil.c **** 
2479:fltk-1.3.4-1/png/pngrutil.c ****    buffer = png_read_buffer(png_ptr, length, 2/*silent*/);
2480:fltk-1.3.4-1/png/pngrutil.c **** 
2481:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
2482:fltk-1.3.4-1/png/pngrutil.c ****    {
2483:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2484:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
2485:fltk-1.3.4-1/png/pngrutil.c ****       return;
2486:fltk-1.3.4-1/png/pngrutil.c ****    }
2487:fltk-1.3.4-1/png/pngrutil.c **** 
2488:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buffer, length);
2489:fltk-1.3.4-1/png/pngrutil.c **** 
2490:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
2491:fltk-1.3.4-1/png/pngrutil.c ****       return;
2492:fltk-1.3.4-1/png/pngrutil.c **** 
2493:fltk-1.3.4-1/png/pngrutil.c ****    /* TODO: also check that the keyword contents match the spec! */
2494:fltk-1.3.4-1/png/pngrutil.c ****    for (keyword_length = 0;
2495:fltk-1.3.4-1/png/pngrutil.c ****       keyword_length < length && buffer[keyword_length] != 0;
2496:fltk-1.3.4-1/png/pngrutil.c ****       ++keyword_length)
2497:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
2498:fltk-1.3.4-1/png/pngrutil.c **** 
2499:fltk-1.3.4-1/png/pngrutil.c ****    if (keyword_length > 79 || keyword_length < 1)
2500:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "bad keyword";
2501:fltk-1.3.4-1/png/pngrutil.c **** 
2502:fltk-1.3.4-1/png/pngrutil.c ****    /* zTXt must have some LZ data after the keyword, although it may expand to
2503:fltk-1.3.4-1/png/pngrutil.c ****     * zero bytes; we need a '\0' at the end of the keyword, the compression type
2504:fltk-1.3.4-1/png/pngrutil.c ****     * then the LZ data:
2505:fltk-1.3.4-1/png/pngrutil.c ****     */
2506:fltk-1.3.4-1/png/pngrutil.c ****    else if (keyword_length + 3 > length)
2507:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
2508:fltk-1.3.4-1/png/pngrutil.c **** 
2509:fltk-1.3.4-1/png/pngrutil.c ****    else if (buffer[keyword_length+1] != PNG_COMPRESSION_TYPE_BASE)
2510:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "unknown compression type";
2511:fltk-1.3.4-1/png/pngrutil.c **** 
2512:fltk-1.3.4-1/png/pngrutil.c ****    else
2513:fltk-1.3.4-1/png/pngrutil.c ****    {
2514:fltk-1.3.4-1/png/pngrutil.c ****       png_alloc_size_t uncompressed_length = PNG_SIZE_MAX;
2515:fltk-1.3.4-1/png/pngrutil.c **** 
2516:fltk-1.3.4-1/png/pngrutil.c ****       /* TODO: at present png_decompress_chunk imposes a single application
2517:fltk-1.3.4-1/png/pngrutil.c ****        * level memory limit, this should be split to different values for iCCP
2518:fltk-1.3.4-1/png/pngrutil.c ****        * and text chunks.
2519:fltk-1.3.4-1/png/pngrutil.c ****        */
2520:fltk-1.3.4-1/png/pngrutil.c ****       if (png_decompress_chunk(png_ptr, length, keyword_length+2,
2521:fltk-1.3.4-1/png/pngrutil.c ****          &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
2522:fltk-1.3.4-1/png/pngrutil.c ****       {
2523:fltk-1.3.4-1/png/pngrutil.c ****          png_text text;
2524:fltk-1.3.4-1/png/pngrutil.c **** 
2525:fltk-1.3.4-1/png/pngrutil.c ****          /* It worked; png_ptr->read_buffer now looks like a tEXt chunk except
2526:fltk-1.3.4-1/png/pngrutil.c ****           * for the extra compression type byte and the fact that it isn't
2527:fltk-1.3.4-1/png/pngrutil.c ****           * necessarily '\0' terminated.
2528:fltk-1.3.4-1/png/pngrutil.c ****           */
2529:fltk-1.3.4-1/png/pngrutil.c ****          buffer = png_ptr->read_buffer;
2530:fltk-1.3.4-1/png/pngrutil.c ****          buffer[uncompressed_length+(keyword_length+2)] = 0;
2531:fltk-1.3.4-1/png/pngrutil.c **** 
2532:fltk-1.3.4-1/png/pngrutil.c ****          text.compression = PNG_TEXT_COMPRESSION_zTXt;
2533:fltk-1.3.4-1/png/pngrutil.c ****          text.key = (png_charp)buffer;
2534:fltk-1.3.4-1/png/pngrutil.c ****          text.text = (png_charp)(buffer + keyword_length+2);
2535:fltk-1.3.4-1/png/pngrutil.c ****          text.text_length = uncompressed_length;
2536:fltk-1.3.4-1/png/pngrutil.c ****          text.itxt_length = 0;
2537:fltk-1.3.4-1/png/pngrutil.c ****          text.lang = NULL;
2538:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = NULL;
2539:fltk-1.3.4-1/png/pngrutil.c **** 
2540:fltk-1.3.4-1/png/pngrutil.c ****          if (png_set_text_2(png_ptr, info_ptr, &text, 1) != 0)
2541:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
2542:fltk-1.3.4-1/png/pngrutil.c ****       }
2543:fltk-1.3.4-1/png/pngrutil.c **** 
2544:fltk-1.3.4-1/png/pngrutil.c ****       else
2545:fltk-1.3.4-1/png/pngrutil.c ****          errmsg = png_ptr->zstream.msg;
2546:fltk-1.3.4-1/png/pngrutil.c ****    }
2547:fltk-1.3.4-1/png/pngrutil.c **** 
2548:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL)
2549:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
2550:fltk-1.3.4-1/png/pngrutil.c **** }
2551:fltk-1.3.4-1/png/pngrutil.c **** #endif
2552:fltk-1.3.4-1/png/pngrutil.c **** 
2553:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_iTXt_SUPPORTED
2554:fltk-1.3.4-1/png/pngrutil.c **** /* Note: this does not correctly handle chunks that are > 64K under DOS */
2555:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2556:fltk-1.3.4-1/png/pngrutil.c **** png_handle_iTXt(png_structrp png_ptr, png_inforp info_ptr, png_uint_32 length)
2557:fltk-1.3.4-1/png/pngrutil.c **** {
2558:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
2559:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
2560:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 prefix_length;
2561:fltk-1.3.4-1/png/pngrutil.c **** 
2562:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_iTXt");
2563:fltk-1.3.4-1/png/pngrutil.c **** 
2564:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_USER_LIMITS_SUPPORTED
2565:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->user_chunk_cache_max != 0)
2566:fltk-1.3.4-1/png/pngrutil.c ****    {
2567:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->user_chunk_cache_max == 1)
2568:fltk-1.3.4-1/png/pngrutil.c ****       {
2569:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
2570:fltk-1.3.4-1/png/pngrutil.c ****          return;
2571:fltk-1.3.4-1/png/pngrutil.c ****       }
2572:fltk-1.3.4-1/png/pngrutil.c **** 
2573:fltk-1.3.4-1/png/pngrutil.c ****       if (--png_ptr->user_chunk_cache_max == 1)
2574:fltk-1.3.4-1/png/pngrutil.c ****       {
2575:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
2576:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
2577:fltk-1.3.4-1/png/pngrutil.c ****          return;
2578:fltk-1.3.4-1/png/pngrutil.c ****       }
2579:fltk-1.3.4-1/png/pngrutil.c ****    }
2580:fltk-1.3.4-1/png/pngrutil.c **** #endif
2581:fltk-1.3.4-1/png/pngrutil.c **** 
2582:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IHDR) == 0)
2583:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
2584:fltk-1.3.4-1/png/pngrutil.c **** 
2585:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->mode & PNG_HAVE_IDAT) != 0)
2586:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
2587:fltk-1.3.4-1/png/pngrutil.c **** 
2588:fltk-1.3.4-1/png/pngrutil.c ****    buffer = png_read_buffer(png_ptr, length+1, 1/*warn*/);
2589:fltk-1.3.4-1/png/pngrutil.c **** 
2590:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
2591:fltk-1.3.4-1/png/pngrutil.c ****    {
2592:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2593:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
2594:fltk-1.3.4-1/png/pngrutil.c ****       return;
2595:fltk-1.3.4-1/png/pngrutil.c ****    }
2596:fltk-1.3.4-1/png/pngrutil.c **** 
2597:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buffer, length);
2598:fltk-1.3.4-1/png/pngrutil.c **** 
2599:fltk-1.3.4-1/png/pngrutil.c ****    if (png_crc_finish(png_ptr, 0) != 0)
2600:fltk-1.3.4-1/png/pngrutil.c ****       return;
2601:fltk-1.3.4-1/png/pngrutil.c **** 
2602:fltk-1.3.4-1/png/pngrutil.c ****    /* First the keyword. */
2603:fltk-1.3.4-1/png/pngrutil.c ****    for (prefix_length=0;
2604:fltk-1.3.4-1/png/pngrutil.c ****       prefix_length < length && buffer[prefix_length] != 0;
2605:fltk-1.3.4-1/png/pngrutil.c ****       ++prefix_length)
2606:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
2607:fltk-1.3.4-1/png/pngrutil.c **** 
2608:fltk-1.3.4-1/png/pngrutil.c ****    /* Perform a basic check on the keyword length here. */
2609:fltk-1.3.4-1/png/pngrutil.c ****    if (prefix_length > 79 || prefix_length < 1)
2610:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "bad keyword";
2611:fltk-1.3.4-1/png/pngrutil.c **** 
2612:fltk-1.3.4-1/png/pngrutil.c ****    /* Expect keyword, compression flag, compression type, language, translated
2613:fltk-1.3.4-1/png/pngrutil.c ****     * keyword (both may be empty but are 0 terminated) then the text, which may
2614:fltk-1.3.4-1/png/pngrutil.c ****     * be empty.
2615:fltk-1.3.4-1/png/pngrutil.c ****     */
2616:fltk-1.3.4-1/png/pngrutil.c ****    else if (prefix_length + 5 > length)
2617:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
2618:fltk-1.3.4-1/png/pngrutil.c **** 
2619:fltk-1.3.4-1/png/pngrutil.c ****    else if (buffer[prefix_length+1] == 0 ||
2620:fltk-1.3.4-1/png/pngrutil.c ****       (buffer[prefix_length+1] == 1 &&
2621:fltk-1.3.4-1/png/pngrutil.c ****       buffer[prefix_length+2] == PNG_COMPRESSION_TYPE_BASE))
2622:fltk-1.3.4-1/png/pngrutil.c ****    {
2623:fltk-1.3.4-1/png/pngrutil.c ****       int compressed = buffer[prefix_length+1] != 0;
2624:fltk-1.3.4-1/png/pngrutil.c ****       png_uint_32 language_offset, translated_keyword_offset;
2625:fltk-1.3.4-1/png/pngrutil.c ****       png_alloc_size_t uncompressed_length = 0;
2626:fltk-1.3.4-1/png/pngrutil.c **** 
2627:fltk-1.3.4-1/png/pngrutil.c ****       /* Now the language tag */
2628:fltk-1.3.4-1/png/pngrutil.c ****       prefix_length += 3;
2629:fltk-1.3.4-1/png/pngrutil.c ****       language_offset = prefix_length;
2630:fltk-1.3.4-1/png/pngrutil.c **** 
2631:fltk-1.3.4-1/png/pngrutil.c ****       for (; prefix_length < length && buffer[prefix_length] != 0;
2632:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
2633:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop */ ;
2634:fltk-1.3.4-1/png/pngrutil.c **** 
2635:fltk-1.3.4-1/png/pngrutil.c ****       /* WARNING: the length may be invalid here, this is checked below. */
2636:fltk-1.3.4-1/png/pngrutil.c ****       translated_keyword_offset = ++prefix_length;
2637:fltk-1.3.4-1/png/pngrutil.c **** 
2638:fltk-1.3.4-1/png/pngrutil.c ****       for (; prefix_length < length && buffer[prefix_length] != 0;
2639:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
2640:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop */ ;
2641:fltk-1.3.4-1/png/pngrutil.c **** 
2642:fltk-1.3.4-1/png/pngrutil.c ****       /* prefix_length should now be at the trailing '\0' of the translated
2643:fltk-1.3.4-1/png/pngrutil.c ****        * keyword, but it may already be over the end.  None of this arithmetic
2644:fltk-1.3.4-1/png/pngrutil.c ****        * can overflow because chunks are at most 2^31 bytes long, but on 16-bit
2645:fltk-1.3.4-1/png/pngrutil.c ****        * systems the available allocation may overflow.
2646:fltk-1.3.4-1/png/pngrutil.c ****        */
2647:fltk-1.3.4-1/png/pngrutil.c ****       ++prefix_length;
2648:fltk-1.3.4-1/png/pngrutil.c **** 
2649:fltk-1.3.4-1/png/pngrutil.c ****       if (compressed == 0 && prefix_length <= length)
2650:fltk-1.3.4-1/png/pngrutil.c ****          uncompressed_length = length - prefix_length;
2651:fltk-1.3.4-1/png/pngrutil.c **** 
2652:fltk-1.3.4-1/png/pngrutil.c ****       else if (compressed != 0 && prefix_length < length)
2653:fltk-1.3.4-1/png/pngrutil.c ****       {
2654:fltk-1.3.4-1/png/pngrutil.c ****          uncompressed_length = PNG_SIZE_MAX;
2655:fltk-1.3.4-1/png/pngrutil.c **** 
2656:fltk-1.3.4-1/png/pngrutil.c ****          /* TODO: at present png_decompress_chunk imposes a single application
2657:fltk-1.3.4-1/png/pngrutil.c ****           * level memory limit, this should be split to different values for
2658:fltk-1.3.4-1/png/pngrutil.c ****           * iCCP and text chunks.
2659:fltk-1.3.4-1/png/pngrutil.c ****           */
2660:fltk-1.3.4-1/png/pngrutil.c ****          if (png_decompress_chunk(png_ptr, length, prefix_length,
2661:fltk-1.3.4-1/png/pngrutil.c ****             &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
2662:fltk-1.3.4-1/png/pngrutil.c ****             buffer = png_ptr->read_buffer;
2663:fltk-1.3.4-1/png/pngrutil.c **** 
2664:fltk-1.3.4-1/png/pngrutil.c ****          else
2665:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = png_ptr->zstream.msg;
2666:fltk-1.3.4-1/png/pngrutil.c ****       }
2667:fltk-1.3.4-1/png/pngrutil.c **** 
2668:fltk-1.3.4-1/png/pngrutil.c ****       else
2669:fltk-1.3.4-1/png/pngrutil.c ****          errmsg = "truncated";
2670:fltk-1.3.4-1/png/pngrutil.c **** 
2671:fltk-1.3.4-1/png/pngrutil.c ****       if (errmsg == NULL)
2672:fltk-1.3.4-1/png/pngrutil.c ****       {
2673:fltk-1.3.4-1/png/pngrutil.c ****          png_text text;
2674:fltk-1.3.4-1/png/pngrutil.c **** 
2675:fltk-1.3.4-1/png/pngrutil.c ****          buffer[uncompressed_length+prefix_length] = 0;
2676:fltk-1.3.4-1/png/pngrutil.c **** 
2677:fltk-1.3.4-1/png/pngrutil.c ****          if (compressed == 0)
2678:fltk-1.3.4-1/png/pngrutil.c ****             text.compression = PNG_ITXT_COMPRESSION_NONE;
2679:fltk-1.3.4-1/png/pngrutil.c **** 
2680:fltk-1.3.4-1/png/pngrutil.c ****          else
2681:fltk-1.3.4-1/png/pngrutil.c ****             text.compression = PNG_ITXT_COMPRESSION_zTXt;
2682:fltk-1.3.4-1/png/pngrutil.c **** 
2683:fltk-1.3.4-1/png/pngrutil.c ****          text.key = (png_charp)buffer;
2684:fltk-1.3.4-1/png/pngrutil.c ****          text.lang = (png_charp)buffer + language_offset;
2685:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = (png_charp)buffer + translated_keyword_offset;
2686:fltk-1.3.4-1/png/pngrutil.c ****          text.text = (png_charp)buffer + prefix_length;
2687:fltk-1.3.4-1/png/pngrutil.c ****          text.text_length = 0;
2688:fltk-1.3.4-1/png/pngrutil.c ****          text.itxt_length = uncompressed_length;
2689:fltk-1.3.4-1/png/pngrutil.c **** 
2690:fltk-1.3.4-1/png/pngrutil.c ****          if (png_set_text_2(png_ptr, info_ptr, &text, 1) != 0)
2691:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
2692:fltk-1.3.4-1/png/pngrutil.c ****       }
2693:fltk-1.3.4-1/png/pngrutil.c ****    }
2694:fltk-1.3.4-1/png/pngrutil.c **** 
2695:fltk-1.3.4-1/png/pngrutil.c ****    else
2696:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "bad compression info";
2697:fltk-1.3.4-1/png/pngrutil.c **** 
2698:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL)
2699:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
2700:fltk-1.3.4-1/png/pngrutil.c **** }
2701:fltk-1.3.4-1/png/pngrutil.c **** #endif
2702:fltk-1.3.4-1/png/pngrutil.c **** 
2703:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_UNKNOWN_CHUNKS_SUPPORTED
2704:fltk-1.3.4-1/png/pngrutil.c **** /* Utility function for png_handle_unknown; set up png_ptr::unknown_chunk */
2705:fltk-1.3.4-1/png/pngrutil.c **** static int
2706:fltk-1.3.4-1/png/pngrutil.c **** png_cache_unknown_chunk(png_structrp png_ptr, png_uint_32 length)
2707:fltk-1.3.4-1/png/pngrutil.c **** {
2708:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t limit = PNG_SIZE_MAX;
2709:fltk-1.3.4-1/png/pngrutil.c **** 
2710:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->unknown_chunk.data != NULL)
2711:fltk-1.3.4-1/png/pngrutil.c ****    {
2712:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
2713:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->unknown_chunk.data = NULL;
2714:fltk-1.3.4-1/png/pngrutil.c ****    }
2715:fltk-1.3.4-1/png/pngrutil.c **** 
2716:fltk-1.3.4-1/png/pngrutil.c **** #  ifdef PNG_SET_CHUNK_MALLOC_LIMIT_SUPPORTED
2717:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->user_chunk_malloc_max > 0 &&
2718:fltk-1.3.4-1/png/pngrutil.c ****           png_ptr->user_chunk_malloc_max < limit)
2719:fltk-1.3.4-1/png/pngrutil.c ****          limit = png_ptr->user_chunk_malloc_max;
2720:fltk-1.3.4-1/png/pngrutil.c **** 
2721:fltk-1.3.4-1/png/pngrutil.c **** #  elif PNG_USER_CHUNK_MALLOC_MAX > 0
2722:fltk-1.3.4-1/png/pngrutil.c ****       if (PNG_USER_CHUNK_MALLOC_MAX < limit)
2723:fltk-1.3.4-1/png/pngrutil.c ****          limit = PNG_USER_CHUNK_MALLOC_MAX;
2724:fltk-1.3.4-1/png/pngrutil.c **** #  endif
2725:fltk-1.3.4-1/png/pngrutil.c **** 
2726:fltk-1.3.4-1/png/pngrutil.c ****    if (length <= limit)
2727:fltk-1.3.4-1/png/pngrutil.c ****    {
2728:fltk-1.3.4-1/png/pngrutil.c ****       PNG_CSTRING_FROM_CHUNK(png_ptr->unknown_chunk.name, png_ptr->chunk_name);
2729:fltk-1.3.4-1/png/pngrutil.c ****       /* The following is safe because of the PNG_SIZE_MAX init above */
2730:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->unknown_chunk.size = (png_size_t)length/*SAFE*/;
2731:fltk-1.3.4-1/png/pngrutil.c ****       /* 'mode' is a flag array, only the bottom four bits matter here */
2732:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->unknown_chunk.location = (png_byte)png_ptr->mode/*SAFE*/;
2733:fltk-1.3.4-1/png/pngrutil.c **** 
2734:fltk-1.3.4-1/png/pngrutil.c ****       if (length == 0)
2735:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->unknown_chunk.data = NULL;
2736:fltk-1.3.4-1/png/pngrutil.c **** 
2737:fltk-1.3.4-1/png/pngrutil.c ****       else
2738:fltk-1.3.4-1/png/pngrutil.c ****       {
2739:fltk-1.3.4-1/png/pngrutil.c ****          /* Do a 'warn' here - it is handled below. */
2740:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->unknown_chunk.data = png_voidcast(png_bytep,
2741:fltk-1.3.4-1/png/pngrutil.c ****             png_malloc_warn(png_ptr, length));
2742:fltk-1.3.4-1/png/pngrutil.c ****       }
2743:fltk-1.3.4-1/png/pngrutil.c ****    }
2744:fltk-1.3.4-1/png/pngrutil.c **** 
2745:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->unknown_chunk.data == NULL && length > 0)
2746:fltk-1.3.4-1/png/pngrutil.c ****    {
2747:fltk-1.3.4-1/png/pngrutil.c ****       /* This is benign because we clean up correctly */
2748:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
2749:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "unknown chunk exceeds memory limits");
2750:fltk-1.3.4-1/png/pngrutil.c ****       return 0;
2751:fltk-1.3.4-1/png/pngrutil.c ****    }
2752:fltk-1.3.4-1/png/pngrutil.c **** 
2753:fltk-1.3.4-1/png/pngrutil.c ****    else
2754:fltk-1.3.4-1/png/pngrutil.c ****    {
2755:fltk-1.3.4-1/png/pngrutil.c ****       if (length > 0)
2756:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_read(png_ptr, png_ptr->unknown_chunk.data, length);
2757:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, 0);
2758:fltk-1.3.4-1/png/pngrutil.c ****       return 1;
2759:fltk-1.3.4-1/png/pngrutil.c ****    }
2760:fltk-1.3.4-1/png/pngrutil.c **** }
2761:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
2762:fltk-1.3.4-1/png/pngrutil.c **** 
2763:fltk-1.3.4-1/png/pngrutil.c **** /* Handle an unknown, or known but disabled, chunk */
2764:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2765:fltk-1.3.4-1/png/pngrutil.c **** png_handle_unknown(png_structrp png_ptr, png_inforp info_ptr,
2766:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 length, int keep)
2767:fltk-1.3.4-1/png/pngrutil.c **** {
2768:fltk-1.3.4-1/png/pngrutil.c ****    int handled = 0; /* the chunk was handled */
2769:fltk-1.3.4-1/png/pngrutil.c **** 
2770:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_unknown");
2771:fltk-1.3.4-1/png/pngrutil.c **** 
2772:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_UNKNOWN_CHUNKS_SUPPORTED
2773:fltk-1.3.4-1/png/pngrutil.c ****    /* NOTE: this code is based on the code in libpng-1.4.12 except for fixing
2774:fltk-1.3.4-1/png/pngrutil.c ****     * the bug which meant that setting a non-default behavior for a specific
2775:fltk-1.3.4-1/png/pngrutil.c ****     * chunk would be ignored (the default was always used unless a user
2776:fltk-1.3.4-1/png/pngrutil.c ****     * callback was installed).
2777:fltk-1.3.4-1/png/pngrutil.c ****     *
2778:fltk-1.3.4-1/png/pngrutil.c ****     * 'keep' is the value from the png_chunk_unknown_handling, the setting for
2779:fltk-1.3.4-1/png/pngrutil.c ****     * this specific chunk_name, if PNG_HANDLE_AS_UNKNOWN_SUPPORTED, if not it
2780:fltk-1.3.4-1/png/pngrutil.c ****     * will always be PNG_HANDLE_CHUNK_AS_DEFAULT and it needs to be set here.
2781:fltk-1.3.4-1/png/pngrutil.c ****     * This is just an optimization to avoid multiple calls to the lookup
2782:fltk-1.3.4-1/png/pngrutil.c ****     * function.
2783:fltk-1.3.4-1/png/pngrutil.c ****     */
2784:fltk-1.3.4-1/png/pngrutil.c **** #  ifndef PNG_HANDLE_AS_UNKNOWN_SUPPORTED
2785:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_SET_UNKNOWN_CHUNKS_SUPPORTED
2786:fltk-1.3.4-1/png/pngrutil.c ****          keep = png_chunk_unknown_handling(png_ptr, png_ptr->chunk_name);
2787:fltk-1.3.4-1/png/pngrutil.c **** #     endif
2788:fltk-1.3.4-1/png/pngrutil.c **** #  endif
2789:fltk-1.3.4-1/png/pngrutil.c **** 
2790:fltk-1.3.4-1/png/pngrutil.c ****    /* One of the following methods will read the chunk or skip it (at least one
2791:fltk-1.3.4-1/png/pngrutil.c ****     * of these is always defined because this is the only way to switch on
2792:fltk-1.3.4-1/png/pngrutil.c ****     * PNG_READ_UNKNOWN_CHUNKS_SUPPORTED)
2793:fltk-1.3.4-1/png/pngrutil.c ****     */
2794:fltk-1.3.4-1/png/pngrutil.c **** #  ifdef PNG_READ_USER_CHUNKS_SUPPORTED
2795:fltk-1.3.4-1/png/pngrutil.c ****       /* The user callback takes precedence over the chunk keep value, but the
2796:fltk-1.3.4-1/png/pngrutil.c ****        * keep value is still required to validate a save of a critical chunk.
2797:fltk-1.3.4-1/png/pngrutil.c ****        */
2798:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->read_user_chunk_fn != NULL)
2799:fltk-1.3.4-1/png/pngrutil.c ****       {
2800:fltk-1.3.4-1/png/pngrutil.c ****          if (png_cache_unknown_chunk(png_ptr, length) != 0)
2801:fltk-1.3.4-1/png/pngrutil.c ****          {
2802:fltk-1.3.4-1/png/pngrutil.c ****             /* Callback to user unknown chunk handler */
2803:fltk-1.3.4-1/png/pngrutil.c ****             int ret = (*(png_ptr->read_user_chunk_fn))(png_ptr,
2804:fltk-1.3.4-1/png/pngrutil.c ****                &png_ptr->unknown_chunk);
2805:fltk-1.3.4-1/png/pngrutil.c **** 
2806:fltk-1.3.4-1/png/pngrutil.c ****             /* ret is:
2807:fltk-1.3.4-1/png/pngrutil.c ****              * negative: An error occured, png_chunk_error will be called.
2808:fltk-1.3.4-1/png/pngrutil.c ****              *     zero: The chunk was not handled, the chunk will be discarded
2809:fltk-1.3.4-1/png/pngrutil.c ****              *           unless png_set_keep_unknown_chunks has been used to set
2810:fltk-1.3.4-1/png/pngrutil.c ****              *           a 'keep' behavior for this particular chunk, in which
2811:fltk-1.3.4-1/png/pngrutil.c ****              *           case that will be used.  A critical chunk will cause an
2812:fltk-1.3.4-1/png/pngrutil.c ****              *           error at this point unless it is to be saved.
2813:fltk-1.3.4-1/png/pngrutil.c ****              * positive: The chunk was handled, libpng will ignore/discard it.
2814:fltk-1.3.4-1/png/pngrutil.c ****              */
2815:fltk-1.3.4-1/png/pngrutil.c ****             if (ret < 0)
2816:fltk-1.3.4-1/png/pngrutil.c ****                png_chunk_error(png_ptr, "error in user chunk");
2817:fltk-1.3.4-1/png/pngrutil.c **** 
2818:fltk-1.3.4-1/png/pngrutil.c ****             else if (ret == 0)
2819:fltk-1.3.4-1/png/pngrutil.c ****             {
2820:fltk-1.3.4-1/png/pngrutil.c ****                /* If the keep value is 'default' or 'never' override it, but
2821:fltk-1.3.4-1/png/pngrutil.c ****                 * still error out on critical chunks unless the keep value is
2822:fltk-1.3.4-1/png/pngrutil.c ****                 * 'always'  While this is weird it is the behavior in 1.4.12.
2823:fltk-1.3.4-1/png/pngrutil.c ****                 * A possible improvement would be to obey the value set for the
2824:fltk-1.3.4-1/png/pngrutil.c ****                 * chunk, but this would be an API change that would probably
2825:fltk-1.3.4-1/png/pngrutil.c ****                 * damage some applications.
2826:fltk-1.3.4-1/png/pngrutil.c ****                 *
2827:fltk-1.3.4-1/png/pngrutil.c ****                 * The png_app_warning below catches the case that matters, where
2828:fltk-1.3.4-1/png/pngrutil.c ****                 * the application has not set specific save or ignore for this
2829:fltk-1.3.4-1/png/pngrutil.c ****                 * chunk or global save or ignore.
2830:fltk-1.3.4-1/png/pngrutil.c ****                 */
2831:fltk-1.3.4-1/png/pngrutil.c ****                if (keep < PNG_HANDLE_CHUNK_IF_SAFE)
2832:fltk-1.3.4-1/png/pngrutil.c ****                {
2833:fltk-1.3.4-1/png/pngrutil.c **** #                 ifdef PNG_SET_UNKNOWN_CHUNKS_SUPPORTED
2834:fltk-1.3.4-1/png/pngrutil.c ****                      if (png_ptr->unknown_default < PNG_HANDLE_CHUNK_IF_SAFE)
2835:fltk-1.3.4-1/png/pngrutil.c ****                      {
2836:fltk-1.3.4-1/png/pngrutil.c ****                         png_chunk_warning(png_ptr, "Saving unknown chunk:");
2837:fltk-1.3.4-1/png/pngrutil.c ****                         png_app_warning(png_ptr,
2838:fltk-1.3.4-1/png/pngrutil.c ****                            "forcing save of an unhandled chunk;"
2839:fltk-1.3.4-1/png/pngrutil.c ****                            " please call png_set_keep_unknown_chunks");
2840:fltk-1.3.4-1/png/pngrutil.c ****                            /* with keep = PNG_HANDLE_CHUNK_IF_SAFE */
2841:fltk-1.3.4-1/png/pngrutil.c ****                      }
2842:fltk-1.3.4-1/png/pngrutil.c **** #                 endif
2843:fltk-1.3.4-1/png/pngrutil.c ****                   keep = PNG_HANDLE_CHUNK_IF_SAFE;
2844:fltk-1.3.4-1/png/pngrutil.c ****                }
2845:fltk-1.3.4-1/png/pngrutil.c ****             }
2846:fltk-1.3.4-1/png/pngrutil.c **** 
2847:fltk-1.3.4-1/png/pngrutil.c ****             else /* chunk was handled */
2848:fltk-1.3.4-1/png/pngrutil.c ****             {
2849:fltk-1.3.4-1/png/pngrutil.c ****                handled = 1;
2850:fltk-1.3.4-1/png/pngrutil.c ****                /* Critical chunks can be safely discarded at this point. */
2851:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
2852:fltk-1.3.4-1/png/pngrutil.c ****             }
2853:fltk-1.3.4-1/png/pngrutil.c ****          }
2854:fltk-1.3.4-1/png/pngrutil.c **** 
2855:fltk-1.3.4-1/png/pngrutil.c ****          else
2856:fltk-1.3.4-1/png/pngrutil.c ****             keep = PNG_HANDLE_CHUNK_NEVER; /* insufficient memory */
2857:fltk-1.3.4-1/png/pngrutil.c ****       }
2858:fltk-1.3.4-1/png/pngrutil.c **** 
2859:fltk-1.3.4-1/png/pngrutil.c ****       else
2860:fltk-1.3.4-1/png/pngrutil.c ****          /* Use the SAVE_UNKNOWN_CHUNKS code or skip the chunk */
2861:fltk-1.3.4-1/png/pngrutil.c **** #  endif /* READ_USER_CHUNKS */
2862:fltk-1.3.4-1/png/pngrutil.c **** 
2863:fltk-1.3.4-1/png/pngrutil.c **** #  ifdef PNG_SAVE_UNKNOWN_CHUNKS_SUPPORTED
2864:fltk-1.3.4-1/png/pngrutil.c ****       {
2865:fltk-1.3.4-1/png/pngrutil.c ****          /* keep is currently just the per-chunk setting, if there was no
2866:fltk-1.3.4-1/png/pngrutil.c ****           * setting change it to the global default now (not that this may
2867:fltk-1.3.4-1/png/pngrutil.c ****           * still be AS_DEFAULT) then obtain the cache of the chunk if required,
2868:fltk-1.3.4-1/png/pngrutil.c ****           * if not simply skip the chunk.
2869:fltk-1.3.4-1/png/pngrutil.c ****           */
2870:fltk-1.3.4-1/png/pngrutil.c ****          if (keep == PNG_HANDLE_CHUNK_AS_DEFAULT)
2871:fltk-1.3.4-1/png/pngrutil.c ****             keep = png_ptr->unknown_default;
2872:fltk-1.3.4-1/png/pngrutil.c **** 
2873:fltk-1.3.4-1/png/pngrutil.c ****          if (keep == PNG_HANDLE_CHUNK_ALWAYS ||
2874:fltk-1.3.4-1/png/pngrutil.c ****             (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
2875:fltk-1.3.4-1/png/pngrutil.c ****              PNG_CHUNK_ANCILLARY(png_ptr->chunk_name)))
2876:fltk-1.3.4-1/png/pngrutil.c ****          {
2877:fltk-1.3.4-1/png/pngrutil.c ****             if (png_cache_unknown_chunk(png_ptr, length) == 0)
2878:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
2879:fltk-1.3.4-1/png/pngrutil.c ****          }
2880:fltk-1.3.4-1/png/pngrutil.c **** 
2881:fltk-1.3.4-1/png/pngrutil.c ****          else
2882:fltk-1.3.4-1/png/pngrutil.c ****             png_crc_finish(png_ptr, length);
2883:fltk-1.3.4-1/png/pngrutil.c ****       }
2884:fltk-1.3.4-1/png/pngrutil.c **** #  else
2885:fltk-1.3.4-1/png/pngrutil.c **** #     ifndef PNG_READ_USER_CHUNKS_SUPPORTED
2886:fltk-1.3.4-1/png/pngrutil.c **** #        error no method to support READ_UNKNOWN_CHUNKS
2887:fltk-1.3.4-1/png/pngrutil.c **** #     endif
2888:fltk-1.3.4-1/png/pngrutil.c **** 
2889:fltk-1.3.4-1/png/pngrutil.c ****       {
2890:fltk-1.3.4-1/png/pngrutil.c ****          /* If here there is no read callback pointer set and no support is
2891:fltk-1.3.4-1/png/pngrutil.c ****           * compiled in to just save the unknown chunks, so simply skip this
2892:fltk-1.3.4-1/png/pngrutil.c ****           * chunk.  If 'keep' is something other than AS_DEFAULT or NEVER then
2893:fltk-1.3.4-1/png/pngrutil.c ****           * the app has erroneously asked for unknown chunk saving when there
2894:fltk-1.3.4-1/png/pngrutil.c ****           * is no support.
2895:fltk-1.3.4-1/png/pngrutil.c ****           */
2896:fltk-1.3.4-1/png/pngrutil.c ****          if (keep > PNG_HANDLE_CHUNK_NEVER)
2897:fltk-1.3.4-1/png/pngrutil.c ****             png_app_error(png_ptr, "no unknown chunk support available");
2898:fltk-1.3.4-1/png/pngrutil.c **** 
2899:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
2900:fltk-1.3.4-1/png/pngrutil.c ****       }
2901:fltk-1.3.4-1/png/pngrutil.c **** #  endif
2902:fltk-1.3.4-1/png/pngrutil.c **** 
2903:fltk-1.3.4-1/png/pngrutil.c **** #  ifdef PNG_STORE_UNKNOWN_CHUNKS_SUPPORTED
2904:fltk-1.3.4-1/png/pngrutil.c ****       /* Now store the chunk in the chunk list if appropriate, and if the limits
2905:fltk-1.3.4-1/png/pngrutil.c ****        * permit it.
2906:fltk-1.3.4-1/png/pngrutil.c ****        */
2907:fltk-1.3.4-1/png/pngrutil.c ****       if (keep == PNG_HANDLE_CHUNK_ALWAYS ||
2908:fltk-1.3.4-1/png/pngrutil.c ****          (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
2909:fltk-1.3.4-1/png/pngrutil.c ****           PNG_CHUNK_ANCILLARY(png_ptr->chunk_name)))
2910:fltk-1.3.4-1/png/pngrutil.c ****       {
2911:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_USER_LIMITS_SUPPORTED
2912:fltk-1.3.4-1/png/pngrutil.c ****          switch (png_ptr->user_chunk_cache_max)
2913:fltk-1.3.4-1/png/pngrutil.c ****          {
2914:fltk-1.3.4-1/png/pngrutil.c ****             case 2:
2915:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->user_chunk_cache_max = 1;
2916:fltk-1.3.4-1/png/pngrutil.c ****                png_chunk_benign_error(png_ptr, "no space in chunk cache");
2917:fltk-1.3.4-1/png/pngrutil.c ****                /* FALL THROUGH */
2918:fltk-1.3.4-1/png/pngrutil.c ****             case 1:
2919:fltk-1.3.4-1/png/pngrutil.c ****                /* NOTE: prior to 1.6.0 this case resulted in an unknown critical
2920:fltk-1.3.4-1/png/pngrutil.c ****                 * chunk being skipped, now there will be a hard error below.
2921:fltk-1.3.4-1/png/pngrutil.c ****                 */
2922:fltk-1.3.4-1/png/pngrutil.c ****                break;
2923:fltk-1.3.4-1/png/pngrutil.c **** 
2924:fltk-1.3.4-1/png/pngrutil.c ****             default: /* not at limit */
2925:fltk-1.3.4-1/png/pngrutil.c ****                --(png_ptr->user_chunk_cache_max);
2926:fltk-1.3.4-1/png/pngrutil.c ****                /* FALL THROUGH */
2927:fltk-1.3.4-1/png/pngrutil.c ****             case 0: /* no limit */
2928:fltk-1.3.4-1/png/pngrutil.c **** #     endif /* USER_LIMITS */
2929:fltk-1.3.4-1/png/pngrutil.c ****                /* Here when the limit isn't reached or when limits are compiled
2930:fltk-1.3.4-1/png/pngrutil.c ****                 * out; store the chunk.
2931:fltk-1.3.4-1/png/pngrutil.c ****                 */
2932:fltk-1.3.4-1/png/pngrutil.c ****                png_set_unknown_chunks(png_ptr, info_ptr,
2933:fltk-1.3.4-1/png/pngrutil.c ****                   &png_ptr->unknown_chunk, 1);
2934:fltk-1.3.4-1/png/pngrutil.c ****                handled = 1;
2935:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_USER_LIMITS_SUPPORTED
2936:fltk-1.3.4-1/png/pngrutil.c ****                break;
2937:fltk-1.3.4-1/png/pngrutil.c ****          }
2938:fltk-1.3.4-1/png/pngrutil.c **** #     endif
2939:fltk-1.3.4-1/png/pngrutil.c ****       }
2940:fltk-1.3.4-1/png/pngrutil.c **** #  else /* no store support: the chunk must be handled by the user callback */
2941:fltk-1.3.4-1/png/pngrutil.c ****       PNG_UNUSED(info_ptr)
2942:fltk-1.3.4-1/png/pngrutil.c **** #  endif
2943:fltk-1.3.4-1/png/pngrutil.c **** 
2944:fltk-1.3.4-1/png/pngrutil.c ****    /* Regardless of the error handling below the cached data (if any) can be
2945:fltk-1.3.4-1/png/pngrutil.c ****     * freed now.  Notice that the data is not freed if there is a png_error, but
2946:fltk-1.3.4-1/png/pngrutil.c ****     * it will be freed by destroy_read_struct.
2947:fltk-1.3.4-1/png/pngrutil.c ****     */
2948:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->unknown_chunk.data != NULL)
2949:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
2950:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->unknown_chunk.data = NULL;
2951:fltk-1.3.4-1/png/pngrutil.c **** 
2952:fltk-1.3.4-1/png/pngrutil.c **** #else /* !PNG_READ_UNKNOWN_CHUNKS_SUPPORTED */
2953:fltk-1.3.4-1/png/pngrutil.c ****    /* There is no support to read an unknown chunk, so just skip it. */
2954:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_finish(png_ptr, length);
2955:fltk-1.3.4-1/png/pngrutil.c ****    PNG_UNUSED(info_ptr)
2956:fltk-1.3.4-1/png/pngrutil.c ****    PNG_UNUSED(keep)
2957:fltk-1.3.4-1/png/pngrutil.c **** #endif /* !READ_UNKNOWN_CHUNKS */
2958:fltk-1.3.4-1/png/pngrutil.c **** 
2959:fltk-1.3.4-1/png/pngrutil.c ****    /* Check for unhandled critical chunks */
2960:fltk-1.3.4-1/png/pngrutil.c ****    if (handled == 0 && PNG_CHUNK_CRITICAL(png_ptr->chunk_name))
2961:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "unhandled critical chunk");
2962:fltk-1.3.4-1/png/pngrutil.c **** }
2963:fltk-1.3.4-1/png/pngrutil.c **** 
2964:fltk-1.3.4-1/png/pngrutil.c **** /* This function is called to verify that a chunk name is valid.
2965:fltk-1.3.4-1/png/pngrutil.c ****  * This function can't have the "critical chunk check" incorporated
2966:fltk-1.3.4-1/png/pngrutil.c ****  * into it, since in the future we will need to be able to call user
2967:fltk-1.3.4-1/png/pngrutil.c ****  * functions to handle unknown critical chunks after we check that
2968:fltk-1.3.4-1/png/pngrutil.c ****  * the chunk name itself is valid.
2969:fltk-1.3.4-1/png/pngrutil.c ****  */
2970:fltk-1.3.4-1/png/pngrutil.c **** 
2971:fltk-1.3.4-1/png/pngrutil.c **** /* Bit hacking: the test for an invalid byte in the 4 byte chunk name is:
2972:fltk-1.3.4-1/png/pngrutil.c ****  *
2973:fltk-1.3.4-1/png/pngrutil.c ****  * ((c) < 65 || (c) > 122 || ((c) > 90 && (c) < 97))
2974:fltk-1.3.4-1/png/pngrutil.c ****  */
2975:fltk-1.3.4-1/png/pngrutil.c **** 
2976:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
2977:fltk-1.3.4-1/png/pngrutil.c **** png_check_chunk_name(png_structrp png_ptr, png_uint_32 chunk_name)
2978:fltk-1.3.4-1/png/pngrutil.c **** {
2979:fltk-1.3.4-1/png/pngrutil.c ****    int i;
2980:fltk-1.3.4-1/png/pngrutil.c **** 
2981:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_check_chunk_name");
2982:fltk-1.3.4-1/png/pngrutil.c **** 
2983:fltk-1.3.4-1/png/pngrutil.c ****    for (i=1; i<=4; ++i)
2984:fltk-1.3.4-1/png/pngrutil.c ****    {
2985:fltk-1.3.4-1/png/pngrutil.c ****       int c = chunk_name & 0xff;
2986:fltk-1.3.4-1/png/pngrutil.c **** 
2987:fltk-1.3.4-1/png/pngrutil.c ****       if (c < 65 || c > 122 || (c > 90 && c < 97))
2988:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "invalid chunk type");
2989:fltk-1.3.4-1/png/pngrutil.c **** 
2990:fltk-1.3.4-1/png/pngrutil.c ****       chunk_name >>= 8;
2991:fltk-1.3.4-1/png/pngrutil.c ****    }
2992:fltk-1.3.4-1/png/pngrutil.c **** }
2993:fltk-1.3.4-1/png/pngrutil.c **** 
2994:fltk-1.3.4-1/png/pngrutil.c **** /* Combines the row recently read in with the existing pixels in the row.  This
2995:fltk-1.3.4-1/png/pngrutil.c ****  * routine takes care of alpha and transparency if requested.  This routine also
2996:fltk-1.3.4-1/png/pngrutil.c ****  * handles the two methods of progressive display of interlaced images,
2997:fltk-1.3.4-1/png/pngrutil.c ****  * depending on the 'display' value; if 'display' is true then the whole row
2998:fltk-1.3.4-1/png/pngrutil.c ****  * (dp) is filled from the start by replicating the available pixels.  If
2999:fltk-1.3.4-1/png/pngrutil.c ****  * 'display' is false only those pixels present in the pass are filled in.
3000:fltk-1.3.4-1/png/pngrutil.c ****  */
3001:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
3002:fltk-1.3.4-1/png/pngrutil.c **** png_combine_row(png_const_structrp png_ptr, png_bytep dp, int display)
3003:fltk-1.3.4-1/png/pngrutil.c **** {
3004:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int pixel_depth = png_ptr->transformed_pixel_depth;
3005:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep sp = png_ptr->row_buf + 1;
3006:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t row_width = png_ptr->width;
3007:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int pass = png_ptr->pass;
3008:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep end_ptr = 0;
3009:fltk-1.3.4-1/png/pngrutil.c ****    png_byte end_byte = 0;
3010:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int end_mask;
3011:fltk-1.3.4-1/png/pngrutil.c **** 
3012:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_combine_row");
3013:fltk-1.3.4-1/png/pngrutil.c **** 
3014:fltk-1.3.4-1/png/pngrutil.c ****    /* Added in 1.5.6: it should not be possible to enter this routine until at
3015:fltk-1.3.4-1/png/pngrutil.c ****     * least one row has been read from the PNG data and transformed.
3016:fltk-1.3.4-1/png/pngrutil.c ****     */
3017:fltk-1.3.4-1/png/pngrutil.c ****    if (pixel_depth == 0)
3018:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row logic error");
3019:fltk-1.3.4-1/png/pngrutil.c **** 
3020:fltk-1.3.4-1/png/pngrutil.c ****    /* Added in 1.5.4: the pixel depth should match the information returned by
3021:fltk-1.3.4-1/png/pngrutil.c ****     * any call to png_read_update_info at this point.  Do not continue if we got
3022:fltk-1.3.4-1/png/pngrutil.c ****     * this wrong.
3023:fltk-1.3.4-1/png/pngrutil.c ****     */
3024:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->info_rowbytes != 0 && png_ptr->info_rowbytes !=
3025:fltk-1.3.4-1/png/pngrutil.c ****           PNG_ROWBYTES(pixel_depth, row_width))
3026:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row size calculation error");
3027:fltk-1.3.4-1/png/pngrutil.c **** 
3028:fltk-1.3.4-1/png/pngrutil.c ****    /* Don't expect this to ever happen: */
3029:fltk-1.3.4-1/png/pngrutil.c ****    if (row_width == 0)
3030:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row width error");
3031:fltk-1.3.4-1/png/pngrutil.c **** 
3032:fltk-1.3.4-1/png/pngrutil.c ****    /* Preserve the last byte in cases where only part of it will be overwritten,
3033:fltk-1.3.4-1/png/pngrutil.c ****     * the multiply below may overflow, we don't care because ANSI-C guarantees
3034:fltk-1.3.4-1/png/pngrutil.c ****     * we get the low bits.
3035:fltk-1.3.4-1/png/pngrutil.c ****     */
3036:fltk-1.3.4-1/png/pngrutil.c ****    end_mask = (pixel_depth * row_width) & 7;
3037:fltk-1.3.4-1/png/pngrutil.c ****    if (end_mask != 0)
3038:fltk-1.3.4-1/png/pngrutil.c ****    {
3039:fltk-1.3.4-1/png/pngrutil.c ****       /* end_ptr == NULL is a flag to say do nothing */
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_ptr = dp + PNG_ROWBYTES(pixel_depth, row_width) - 1;
3041:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
3042:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_READ_PACKSWAP_SUPPORTED
3043:fltk-1.3.4-1/png/pngrutil.c ****          if ((png_ptr->transformations & PNG_PACKSWAP) != 0)
3044:fltk-1.3.4-1/png/pngrutil.c ****             /* little-endian byte */
3045:fltk-1.3.4-1/png/pngrutil.c ****             end_mask = 0xff << end_mask;
3046:fltk-1.3.4-1/png/pngrutil.c **** 
3047:fltk-1.3.4-1/png/pngrutil.c ****          else /* big-endian byte */
3048:fltk-1.3.4-1/png/pngrutil.c **** #     endif
3049:fltk-1.3.4-1/png/pngrutil.c ****          end_mask = 0xff >> end_mask;
3050:fltk-1.3.4-1/png/pngrutil.c ****       /* end_mask is now the bits to *keep* from the destination row */
3051:fltk-1.3.4-1/png/pngrutil.c ****    }
3052:fltk-1.3.4-1/png/pngrutil.c **** 
3053:fltk-1.3.4-1/png/pngrutil.c ****    /* For non-interlaced images this reduces to a memcpy(). A memcpy()
3054:fltk-1.3.4-1/png/pngrutil.c ****     * will also happen if interlacing isn't supported or if the application
3055:fltk-1.3.4-1/png/pngrutil.c ****     * does not call png_set_interlace_handling().  In the latter cases the
3056:fltk-1.3.4-1/png/pngrutil.c ****     * caller just gets a sequence of the unexpanded rows from each interlace
3057:fltk-1.3.4-1/png/pngrutil.c ****     * pass.
3058:fltk-1.3.4-1/png/pngrutil.c ****     */
3059:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_INTERLACING_SUPPORTED
3060:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->interlaced != 0 &&
3061:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0 &&
3062:fltk-1.3.4-1/png/pngrutil.c ****        pass < 6 && (display == 0 ||
3063:fltk-1.3.4-1/png/pngrutil.c ****        /* The following copies everything for 'display' on passes 0, 2 and 4. */
3064:fltk-1.3.4-1/png/pngrutil.c ****        (display == 1 && (pass & 1) != 0)))
3065:fltk-1.3.4-1/png/pngrutil.c ****    {
3066:fltk-1.3.4-1/png/pngrutil.c ****       /* Narrow images may have no bits in a pass; the caller should handle
3067:fltk-1.3.4-1/png/pngrutil.c ****        * this, but this test is cheap:
3068:fltk-1.3.4-1/png/pngrutil.c ****        */
3069:fltk-1.3.4-1/png/pngrutil.c ****       if (row_width <= PNG_PASS_START_COL(pass))
3070:fltk-1.3.4-1/png/pngrutil.c ****          return;
3071:fltk-1.3.4-1/png/pngrutil.c **** 
3072:fltk-1.3.4-1/png/pngrutil.c ****       if (pixel_depth < 8)
3073:fltk-1.3.4-1/png/pngrutil.c ****       {
3074:fltk-1.3.4-1/png/pngrutil.c ****          /* For pixel depths up to 4 bpp the 8-pixel mask can be expanded to fit
3075:fltk-1.3.4-1/png/pngrutil.c ****           * into 32 bits, then a single loop over the bytes using the four byte
3076:fltk-1.3.4-1/png/pngrutil.c ****           * values in the 32-bit mask can be used.  For the 'display' option the
3077:fltk-1.3.4-1/png/pngrutil.c ****           * expanded mask may also not require any masking within a byte.  To
3078:fltk-1.3.4-1/png/pngrutil.c ****           * make this work the PACKSWAP option must be taken into account - it
3079:fltk-1.3.4-1/png/pngrutil.c ****           * simply requires the pixels to be reversed in each byte.
3080:fltk-1.3.4-1/png/pngrutil.c ****           *
3081:fltk-1.3.4-1/png/pngrutil.c ****           * The 'regular' case requires a mask for each of the first 6 passes,
3082:fltk-1.3.4-1/png/pngrutil.c ****           * the 'display' case does a copy for the even passes in the range
3083:fltk-1.3.4-1/png/pngrutil.c ****           * 0..6.  This has already been handled in the test above.
3084:fltk-1.3.4-1/png/pngrutil.c ****           *
3085:fltk-1.3.4-1/png/pngrutil.c ****           * The masks are arranged as four bytes with the first byte to use in
3086:fltk-1.3.4-1/png/pngrutil.c ****           * the lowest bits (little-endian) regardless of the order (PACKSWAP or
3087:fltk-1.3.4-1/png/pngrutil.c ****           * not) of the pixels in each byte.
3088:fltk-1.3.4-1/png/pngrutil.c ****           *
3089:fltk-1.3.4-1/png/pngrutil.c ****           * NOTE: the whole of this logic depends on the caller of this function
3090:fltk-1.3.4-1/png/pngrutil.c ****           * only calling it on rows appropriate to the pass.  This function only
3091:fltk-1.3.4-1/png/pngrutil.c ****           * understands the 'x' logic; the 'y' logic is handled by the caller.
3092:fltk-1.3.4-1/png/pngrutil.c ****           *
3093:fltk-1.3.4-1/png/pngrutil.c ****           * The following defines allow generation of compile time constant bit
3094:fltk-1.3.4-1/png/pngrutil.c ****           * masks for each pixel depth and each possibility of swapped or not
3095:fltk-1.3.4-1/png/pngrutil.c ****           * swapped bytes.  Pass 'p' is in the range 0..6; 'x', a pixel index,
3096:fltk-1.3.4-1/png/pngrutil.c ****           * is in the range 0..7; and the result is 1 if the pixel is to be
3097:fltk-1.3.4-1/png/pngrutil.c ****           * copied in the pass, 0 if not.  'S' is for the sparkle method, 'B'
3098:fltk-1.3.4-1/png/pngrutil.c ****           * for the block method.
3099:fltk-1.3.4-1/png/pngrutil.c ****           *
3100:fltk-1.3.4-1/png/pngrutil.c ****           * With some compilers a compile time expression of the general form:
3101:fltk-1.3.4-1/png/pngrutil.c ****           *
3102:fltk-1.3.4-1/png/pngrutil.c ****           *    (shift >= 32) ? (a >> (shift-32)) : (b >> shift)
3103:fltk-1.3.4-1/png/pngrutil.c ****           *
3104:fltk-1.3.4-1/png/pngrutil.c ****           * Produces warnings with values of 'shift' in the range 33 to 63
3105:fltk-1.3.4-1/png/pngrutil.c ****           * because the right hand side of the ?: expression is evaluated by
3106:fltk-1.3.4-1/png/pngrutil.c ****           * the compiler even though it isn't used.  Microsoft Visual C (various
3107:fltk-1.3.4-1/png/pngrutil.c ****           * versions) and the Intel C compiler are known to do this.  To avoid
3108:fltk-1.3.4-1/png/pngrutil.c ****           * this the following macros are used in 1.5.6.  This is a temporary
3109:fltk-1.3.4-1/png/pngrutil.c ****           * solution to avoid destabilizing the code during the release process.
3110:fltk-1.3.4-1/png/pngrutil.c ****           */
3111:fltk-1.3.4-1/png/pngrutil.c **** #        if PNG_USE_COMPILE_TIME_MASKS
3112:fltk-1.3.4-1/png/pngrutil.c **** #           define PNG_LSR(x,s) ((x)>>((s) & 0x1f))
3113:fltk-1.3.4-1/png/pngrutil.c **** #           define PNG_LSL(x,s) ((x)<<((s) & 0x1f))
3114:fltk-1.3.4-1/png/pngrutil.c **** #        else
3115:fltk-1.3.4-1/png/pngrutil.c **** #           define PNG_LSR(x,s) ((x)>>(s))
3116:fltk-1.3.4-1/png/pngrutil.c **** #           define PNG_LSL(x,s) ((x)<<(s))
3117:fltk-1.3.4-1/png/pngrutil.c **** #        endif
3118:fltk-1.3.4-1/png/pngrutil.c **** #        define S_COPY(p,x) (((p)<4 ? PNG_LSR(0x80088822,(3-(p))*8+(7-(x))) :\
3119:fltk-1.3.4-1/png/pngrutil.c ****            PNG_LSR(0xaa55ff00,(7-(p))*8+(7-(x)))) & 1)
3120:fltk-1.3.4-1/png/pngrutil.c **** #        define B_COPY(p,x) (((p)<4 ? PNG_LSR(0xff0fff33,(3-(p))*8+(7-(x))) :\
3121:fltk-1.3.4-1/png/pngrutil.c ****            PNG_LSR(0xff55ff00,(7-(p))*8+(7-(x)))) & 1)
3122:fltk-1.3.4-1/png/pngrutil.c **** 
3123:fltk-1.3.4-1/png/pngrutil.c ****          /* Return a mask for pass 'p' pixel 'x' at depth 'd'.  The mask is
3124:fltk-1.3.4-1/png/pngrutil.c ****           * little endian - the first pixel is at bit 0 - however the extra
3125:fltk-1.3.4-1/png/pngrutil.c ****           * parameter 's' can be set to cause the mask position to be swapped
3126:fltk-1.3.4-1/png/pngrutil.c ****           * within each byte, to match the PNG format.  This is done by XOR of
3127:fltk-1.3.4-1/png/pngrutil.c ****           * the shift with 7, 6 or 4 for bit depths 1, 2 and 4.
3128:fltk-1.3.4-1/png/pngrutil.c ****           */
3129:fltk-1.3.4-1/png/pngrutil.c **** #        define PIXEL_MASK(p,x,d,s) \
3130:fltk-1.3.4-1/png/pngrutil.c ****             (PNG_LSL(((PNG_LSL(1U,(d)))-1),(((x)*(d))^((s)?8-(d):0))))
3131:fltk-1.3.4-1/png/pngrutil.c **** 
3132:fltk-1.3.4-1/png/pngrutil.c ****          /* Hence generate the appropriate 'block' or 'sparkle' pixel copy mask.
3133:fltk-1.3.4-1/png/pngrutil.c ****           */
3134:fltk-1.3.4-1/png/pngrutil.c **** #        define S_MASKx(p,x,d,s) (S_COPY(p,x)?PIXEL_MASK(p,x,d,s):0)
3135:fltk-1.3.4-1/png/pngrutil.c **** #        define B_MASKx(p,x,d,s) (B_COPY(p,x)?PIXEL_MASK(p,x,d,s):0)
3136:fltk-1.3.4-1/png/pngrutil.c **** 
3137:fltk-1.3.4-1/png/pngrutil.c ****          /* Combine 8 of these to get the full mask.  For the 1-bpp and 2-bpp
3138:fltk-1.3.4-1/png/pngrutil.c ****           * cases the result needs replicating, for the 4-bpp case the above
3139:fltk-1.3.4-1/png/pngrutil.c ****           * generates a full 32 bits.
3140:fltk-1.3.4-1/png/pngrutil.c ****           */
3141:fltk-1.3.4-1/png/pngrutil.c **** #        define MASK_EXPAND(m,d) ((m)*((d)==1?0x01010101:((d)==2?0x00010001:1)))
3142:fltk-1.3.4-1/png/pngrutil.c **** 
3143:fltk-1.3.4-1/png/pngrutil.c **** #        define S_MASK(p,d,s) MASK_EXPAND(S_MASKx(p,0,d,s) + S_MASKx(p,1,d,s) +\
3144:fltk-1.3.4-1/png/pngrutil.c ****             S_MASKx(p,2,d,s) + S_MASKx(p,3,d,s) + S_MASKx(p,4,d,s) +\
3145:fltk-1.3.4-1/png/pngrutil.c ****             S_MASKx(p,5,d,s) + S_MASKx(p,6,d,s) + S_MASKx(p,7,d,s), d)
3146:fltk-1.3.4-1/png/pngrutil.c **** 
3147:fltk-1.3.4-1/png/pngrutil.c **** #        define B_MASK(p,d,s) MASK_EXPAND(B_MASKx(p,0,d,s) + B_MASKx(p,1,d,s) +\
3148:fltk-1.3.4-1/png/pngrutil.c ****             B_MASKx(p,2,d,s) + B_MASKx(p,3,d,s) + B_MASKx(p,4,d,s) +\
3149:fltk-1.3.4-1/png/pngrutil.c ****             B_MASKx(p,5,d,s) + B_MASKx(p,6,d,s) + B_MASKx(p,7,d,s), d)
3150:fltk-1.3.4-1/png/pngrutil.c **** 
3151:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_USE_COMPILE_TIME_MASKS
3152:fltk-1.3.4-1/png/pngrutil.c ****          /* Utility macros to construct all the masks for a depth/swap
3153:fltk-1.3.4-1/png/pngrutil.c ****           * combination.  The 's' parameter says whether the format is PNG
3154:fltk-1.3.4-1/png/pngrutil.c ****           * (big endian bytes) or not.  Only the three odd-numbered passes are
3155:fltk-1.3.4-1/png/pngrutil.c ****           * required for the display/block algorithm.
3156:fltk-1.3.4-1/png/pngrutil.c ****           */
3157:fltk-1.3.4-1/png/pngrutil.c **** #        define S_MASKS(d,s) { S_MASK(0,d,s), S_MASK(1,d,s), S_MASK(2,d,s),\
3158:fltk-1.3.4-1/png/pngrutil.c ****             S_MASK(3,d,s), S_MASK(4,d,s), S_MASK(5,d,s) }
3159:fltk-1.3.4-1/png/pngrutil.c **** 
3160:fltk-1.3.4-1/png/pngrutil.c **** #        define B_MASKS(d,s) { B_MASK(1,d,s), B_MASK(3,d,s), B_MASK(5,d,s) }
3161:fltk-1.3.4-1/png/pngrutil.c **** 
3162:fltk-1.3.4-1/png/pngrutil.c **** #        define DEPTH_INDEX(d) ((d)==1?0:((d)==2?1:2))
3163:fltk-1.3.4-1/png/pngrutil.c **** 
3164:fltk-1.3.4-1/png/pngrutil.c ****          /* Hence the pre-compiled masks indexed by PACKSWAP (or not), depth and
3165:fltk-1.3.4-1/png/pngrutil.c ****           * then pass:
3166:fltk-1.3.4-1/png/pngrutil.c ****           */
3167:fltk-1.3.4-1/png/pngrutil.c ****          static PNG_CONST png_uint_32 row_mask[2/*PACKSWAP*/][3/*depth*/][6] =
3168:fltk-1.3.4-1/png/pngrutil.c ****          {
3169:fltk-1.3.4-1/png/pngrutil.c ****             /* Little-endian byte masks for PACKSWAP */
3170:fltk-1.3.4-1/png/pngrutil.c ****             { S_MASKS(1,0), S_MASKS(2,0), S_MASKS(4,0) },
3171:fltk-1.3.4-1/png/pngrutil.c ****             /* Normal (big-endian byte) masks - PNG format */
3172:fltk-1.3.4-1/png/pngrutil.c ****             { S_MASKS(1,1), S_MASKS(2,1), S_MASKS(4,1) }
3173:fltk-1.3.4-1/png/pngrutil.c ****          };
3174:fltk-1.3.4-1/png/pngrutil.c **** 
3175:fltk-1.3.4-1/png/pngrutil.c ****          /* display_mask has only three entries for the odd passes, so index by
3176:fltk-1.3.4-1/png/pngrutil.c ****           * pass>>1.
3177:fltk-1.3.4-1/png/pngrutil.c ****           */
3178:fltk-1.3.4-1/png/pngrutil.c ****          static PNG_CONST png_uint_32 display_mask[2][3][3] =
3179:fltk-1.3.4-1/png/pngrutil.c ****          {
3180:fltk-1.3.4-1/png/pngrutil.c ****             /* Little-endian byte masks for PACKSWAP */
3181:fltk-1.3.4-1/png/pngrutil.c ****             { B_MASKS(1,0), B_MASKS(2,0), B_MASKS(4,0) },
3182:fltk-1.3.4-1/png/pngrutil.c ****             /* Normal (big-endian byte) masks - PNG format */
3183:fltk-1.3.4-1/png/pngrutil.c ****             { B_MASKS(1,1), B_MASKS(2,1), B_MASKS(4,1) }
3184:fltk-1.3.4-1/png/pngrutil.c ****          };
3185:fltk-1.3.4-1/png/pngrutil.c **** 
3186:fltk-1.3.4-1/png/pngrutil.c **** #        define MASK(pass,depth,display,png)\
3187:fltk-1.3.4-1/png/pngrutil.c ****             ((display)?display_mask[png][DEPTH_INDEX(depth)][pass>>1]:\
3188:fltk-1.3.4-1/png/pngrutil.c ****                row_mask[png][DEPTH_INDEX(depth)][pass])
3189:fltk-1.3.4-1/png/pngrutil.c **** 
3190:fltk-1.3.4-1/png/pngrutil.c **** #else /* !PNG_USE_COMPILE_TIME_MASKS */
3191:fltk-1.3.4-1/png/pngrutil.c ****          /* This is the runtime alternative: it seems unlikely that this will
3192:fltk-1.3.4-1/png/pngrutil.c ****           * ever be either smaller or faster than the compile time approach.
3193:fltk-1.3.4-1/png/pngrutil.c ****           */
3194:fltk-1.3.4-1/png/pngrutil.c **** #        define MASK(pass,depth,display,png)\
3195:fltk-1.3.4-1/png/pngrutil.c ****             ((display)?B_MASK(pass,depth,png):S_MASK(pass,depth,png))
3196:fltk-1.3.4-1/png/pngrutil.c **** #endif /* !USE_COMPILE_TIME_MASKS */
3197:fltk-1.3.4-1/png/pngrutil.c **** 
3198:fltk-1.3.4-1/png/pngrutil.c ****          /* Use the appropriate mask to copy the required bits.  In some cases
3199:fltk-1.3.4-1/png/pngrutil.c ****           * the byte mask will be 0 or 0xff; optimize these cases.  row_width is
3200:fltk-1.3.4-1/png/pngrutil.c ****           * the number of pixels, but the code copies bytes, so it is necessary
3201:fltk-1.3.4-1/png/pngrutil.c ****           * to special case the end.
3202:fltk-1.3.4-1/png/pngrutil.c ****           */
3203:fltk-1.3.4-1/png/pngrutil.c ****          png_uint_32 pixels_per_byte = 8 / pixel_depth;
3204:fltk-1.3.4-1/png/pngrutil.c ****          png_uint_32 mask;
3205:fltk-1.3.4-1/png/pngrutil.c **** 
3206:fltk-1.3.4-1/png/pngrutil.c **** #        ifdef PNG_READ_PACKSWAP_SUPPORTED
3207:fltk-1.3.4-1/png/pngrutil.c ****             if ((png_ptr->transformations & PNG_PACKSWAP) != 0)
3208:fltk-1.3.4-1/png/pngrutil.c ****                mask = MASK(pass, pixel_depth, display, 0);
3209:fltk-1.3.4-1/png/pngrutil.c **** 
3210:fltk-1.3.4-1/png/pngrutil.c ****             else
3211:fltk-1.3.4-1/png/pngrutil.c **** #        endif
3212:fltk-1.3.4-1/png/pngrutil.c ****             mask = MASK(pass, pixel_depth, display, 1);
3213:fltk-1.3.4-1/png/pngrutil.c **** 
3214:fltk-1.3.4-1/png/pngrutil.c ****          for (;;)
3215:fltk-1.3.4-1/png/pngrutil.c ****          {
3216:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 m;
3217:fltk-1.3.4-1/png/pngrutil.c **** 
3218:fltk-1.3.4-1/png/pngrutil.c ****             /* It doesn't matter in the following if png_uint_32 has more than
3219:fltk-1.3.4-1/png/pngrutil.c ****              * 32 bits because the high bits always match those in m<<24; it is,
3220:fltk-1.3.4-1/png/pngrutil.c ****              * however, essential to use OR here, not +, because of this.
3221:fltk-1.3.4-1/png/pngrutil.c ****              */
3222:fltk-1.3.4-1/png/pngrutil.c ****             m = mask;
3223:fltk-1.3.4-1/png/pngrutil.c ****             mask = (m >> 8) | (m << 24); /* rotate right to good compilers */
3224:fltk-1.3.4-1/png/pngrutil.c ****             m &= 0xff;
3225:fltk-1.3.4-1/png/pngrutil.c **** 
3226:fltk-1.3.4-1/png/pngrutil.c ****             if (m != 0) /* something to copy */
3227:fltk-1.3.4-1/png/pngrutil.c ****             {
3228:fltk-1.3.4-1/png/pngrutil.c ****                if (m != 0xff)
3229:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)((*dp & ~m) | (*sp & m));
3230:fltk-1.3.4-1/png/pngrutil.c ****                else
3231:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = *sp;
3232:fltk-1.3.4-1/png/pngrutil.c ****             }
3233:fltk-1.3.4-1/png/pngrutil.c **** 
3234:fltk-1.3.4-1/png/pngrutil.c ****             /* NOTE: this may overwrite the last byte with garbage if the image
3235:fltk-1.3.4-1/png/pngrutil.c ****              * is not an exact number of bytes wide; libpng has always done
3236:fltk-1.3.4-1/png/pngrutil.c ****              * this.
3237:fltk-1.3.4-1/png/pngrutil.c ****              */
3238:fltk-1.3.4-1/png/pngrutil.c ****             if (row_width <= pixels_per_byte)
3239:fltk-1.3.4-1/png/pngrutil.c ****                break; /* May need to restore part of the last byte */
3240:fltk-1.3.4-1/png/pngrutil.c **** 
3241:fltk-1.3.4-1/png/pngrutil.c ****             row_width -= pixels_per_byte;
3242:fltk-1.3.4-1/png/pngrutil.c ****             ++dp;
3243:fltk-1.3.4-1/png/pngrutil.c ****             ++sp;
3244:fltk-1.3.4-1/png/pngrutil.c ****          }
3245:fltk-1.3.4-1/png/pngrutil.c ****       }
3246:fltk-1.3.4-1/png/pngrutil.c **** 
3247:fltk-1.3.4-1/png/pngrutil.c ****       else /* pixel_depth >= 8 */
3248:fltk-1.3.4-1/png/pngrutil.c ****       {
3249:fltk-1.3.4-1/png/pngrutil.c ****          unsigned int bytes_to_copy, bytes_to_jump;
3250:fltk-1.3.4-1/png/pngrutil.c **** 
3251:fltk-1.3.4-1/png/pngrutil.c ****          /* Validate the depth - it must be a multiple of 8 */
3252:fltk-1.3.4-1/png/pngrutil.c ****          if (pixel_depth & 7)
3253:fltk-1.3.4-1/png/pngrutil.c ****             png_error(png_ptr, "invalid user transform pixel depth");
3254:fltk-1.3.4-1/png/pngrutil.c **** 
3255:fltk-1.3.4-1/png/pngrutil.c ****          pixel_depth >>= 3; /* now in bytes */
3256:fltk-1.3.4-1/png/pngrutil.c ****          row_width *= pixel_depth;
3257:fltk-1.3.4-1/png/pngrutil.c **** 
3258:fltk-1.3.4-1/png/pngrutil.c ****          /* Regardless of pass number the Adam 7 interlace always results in a
3259:fltk-1.3.4-1/png/pngrutil.c ****           * fixed number of pixels to copy then to skip.  There may be a
3260:fltk-1.3.4-1/png/pngrutil.c ****           * different number of pixels to skip at the start though.
3261:fltk-1.3.4-1/png/pngrutil.c ****           */
3262:fltk-1.3.4-1/png/pngrutil.c ****          {
3263:fltk-1.3.4-1/png/pngrutil.c ****             unsigned int offset = PNG_PASS_START_COL(pass) * pixel_depth;
3264:fltk-1.3.4-1/png/pngrutil.c **** 
3265:fltk-1.3.4-1/png/pngrutil.c ****             row_width -= offset;
3266:fltk-1.3.4-1/png/pngrutil.c ****             dp += offset;
3267:fltk-1.3.4-1/png/pngrutil.c ****             sp += offset;
3268:fltk-1.3.4-1/png/pngrutil.c ****          }
3269:fltk-1.3.4-1/png/pngrutil.c **** 
3270:fltk-1.3.4-1/png/pngrutil.c ****          /* Work out the bytes to copy. */
3271:fltk-1.3.4-1/png/pngrutil.c ****          if (display != 0)
3272:fltk-1.3.4-1/png/pngrutil.c ****          {
3273:fltk-1.3.4-1/png/pngrutil.c ****             /* When doing the 'block' algorithm the pixel in the pass gets
3274:fltk-1.3.4-1/png/pngrutil.c ****              * replicated to adjacent pixels.  This is why the even (0,2,4,6)
3275:fltk-1.3.4-1/png/pngrutil.c ****              * passes are skipped above - the entire expanded row is copied.
3276:fltk-1.3.4-1/png/pngrutil.c ****              */
3277:fltk-1.3.4-1/png/pngrutil.c ****             bytes_to_copy = (1<<((6-pass)>>1)) * pixel_depth;
3278:fltk-1.3.4-1/png/pngrutil.c **** 
3279:fltk-1.3.4-1/png/pngrutil.c ****             /* But don't allow this number to exceed the actual row width. */
3280:fltk-1.3.4-1/png/pngrutil.c ****             if (bytes_to_copy > row_width)
3281:fltk-1.3.4-1/png/pngrutil.c ****                bytes_to_copy = (unsigned int)/*SAFE*/row_width;
3282:fltk-1.3.4-1/png/pngrutil.c ****          }
3283:fltk-1.3.4-1/png/pngrutil.c **** 
3284:fltk-1.3.4-1/png/pngrutil.c ****          else /* normal row; Adam7 only ever gives us one pixel to copy. */
3285:fltk-1.3.4-1/png/pngrutil.c ****             bytes_to_copy = pixel_depth;
3286:fltk-1.3.4-1/png/pngrutil.c **** 
3287:fltk-1.3.4-1/png/pngrutil.c ****          /* In Adam7 there is a constant offset between where the pixels go. */
3288:fltk-1.3.4-1/png/pngrutil.c ****          bytes_to_jump = PNG_PASS_COL_OFFSET(pass) * pixel_depth;
3289:fltk-1.3.4-1/png/pngrutil.c **** 
3290:fltk-1.3.4-1/png/pngrutil.c ****          /* And simply copy these bytes.  Some optimization is possible here,
3291:fltk-1.3.4-1/png/pngrutil.c ****           * depending on the value of 'bytes_to_copy'.  Special case the low
3292:fltk-1.3.4-1/png/pngrutil.c ****           * byte counts, which we know to be frequent.
3293:fltk-1.3.4-1/png/pngrutil.c ****           *
3294:fltk-1.3.4-1/png/pngrutil.c ****           * Notice that these cases all 'return' rather than 'break' - this
3295:fltk-1.3.4-1/png/pngrutil.c ****           * avoids an unnecessary test on whether to restore the last byte
3296:fltk-1.3.4-1/png/pngrutil.c ****           * below.
3297:fltk-1.3.4-1/png/pngrutil.c ****           */
3298:fltk-1.3.4-1/png/pngrutil.c ****          switch (bytes_to_copy)
3299:fltk-1.3.4-1/png/pngrutil.c ****          {
3300:fltk-1.3.4-1/png/pngrutil.c ****             case 1:
3301:fltk-1.3.4-1/png/pngrutil.c ****                for (;;)
3302:fltk-1.3.4-1/png/pngrutil.c ****                {
3303:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = *sp;
3304:fltk-1.3.4-1/png/pngrutil.c **** 
3305:fltk-1.3.4-1/png/pngrutil.c ****                   if (row_width <= bytes_to_jump)
3306:fltk-1.3.4-1/png/pngrutil.c ****                      return;
3307:fltk-1.3.4-1/png/pngrutil.c **** 
3308:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
3309:fltk-1.3.4-1/png/pngrutil.c ****                   sp += bytes_to_jump;
3310:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
3311:fltk-1.3.4-1/png/pngrutil.c ****                }
3312:fltk-1.3.4-1/png/pngrutil.c **** 
3313:fltk-1.3.4-1/png/pngrutil.c ****             case 2:
3314:fltk-1.3.4-1/png/pngrutil.c ****                /* There is a possibility of a partial copy at the end here; this
3315:fltk-1.3.4-1/png/pngrutil.c ****                 * slows the code down somewhat.
3316:fltk-1.3.4-1/png/pngrutil.c ****                 */
3317:fltk-1.3.4-1/png/pngrutil.c ****                do
3318:fltk-1.3.4-1/png/pngrutil.c ****                {
3319:fltk-1.3.4-1/png/pngrutil.c ****                   dp[0] = sp[0], dp[1] = sp[1];
3320:fltk-1.3.4-1/png/pngrutil.c **** 
3321:fltk-1.3.4-1/png/pngrutil.c ****                   if (row_width <= bytes_to_jump)
3322:fltk-1.3.4-1/png/pngrutil.c ****                      return;
3323:fltk-1.3.4-1/png/pngrutil.c **** 
3324:fltk-1.3.4-1/png/pngrutil.c ****                   sp += bytes_to_jump;
3325:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
3326:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
3327:fltk-1.3.4-1/png/pngrutil.c ****                }
3328:fltk-1.3.4-1/png/pngrutil.c ****                while (row_width > 1);
3329:fltk-1.3.4-1/png/pngrutil.c **** 
3330:fltk-1.3.4-1/png/pngrutil.c ****                /* And there can only be one byte left at this point: */
3331:fltk-1.3.4-1/png/pngrutil.c ****                *dp = *sp;
3332:fltk-1.3.4-1/png/pngrutil.c ****                return;
3333:fltk-1.3.4-1/png/pngrutil.c **** 
3334:fltk-1.3.4-1/png/pngrutil.c ****             case 3:
3335:fltk-1.3.4-1/png/pngrutil.c ****                /* This can only be the RGB case, so each copy is exactly one
3336:fltk-1.3.4-1/png/pngrutil.c ****                 * pixel and it is not necessary to check for a partial copy.
3337:fltk-1.3.4-1/png/pngrutil.c ****                 */
3338:fltk-1.3.4-1/png/pngrutil.c ****                for (;;)
3339:fltk-1.3.4-1/png/pngrutil.c ****                {
3340:fltk-1.3.4-1/png/pngrutil.c ****                   dp[0] = sp[0], dp[1] = sp[1], dp[2] = sp[2];
3341:fltk-1.3.4-1/png/pngrutil.c **** 
3342:fltk-1.3.4-1/png/pngrutil.c ****                   if (row_width <= bytes_to_jump)
3343:fltk-1.3.4-1/png/pngrutil.c ****                      return;
3344:fltk-1.3.4-1/png/pngrutil.c **** 
3345:fltk-1.3.4-1/png/pngrutil.c ****                   sp += bytes_to_jump;
3346:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
3347:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
3348:fltk-1.3.4-1/png/pngrutil.c ****                }
3349:fltk-1.3.4-1/png/pngrutil.c **** 
3350:fltk-1.3.4-1/png/pngrutil.c ****             default:
3351:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_ALIGN_TYPE != PNG_ALIGN_NONE
3352:fltk-1.3.4-1/png/pngrutil.c ****                /* Check for double byte alignment and, if possible, use a
3353:fltk-1.3.4-1/png/pngrutil.c ****                 * 16-bit copy.  Don't attempt this for narrow images - ones that
3354:fltk-1.3.4-1/png/pngrutil.c ****                 * are less than an interlace panel wide.  Don't attempt it for
3355:fltk-1.3.4-1/png/pngrutil.c ****                 * wide bytes_to_copy either - use the memcpy there.
3356:fltk-1.3.4-1/png/pngrutil.c ****                 */
3357:fltk-1.3.4-1/png/pngrutil.c ****                if (bytes_to_copy < 16 /*else use memcpy*/ &&
3358:fltk-1.3.4-1/png/pngrutil.c ****                    png_isaligned(dp, png_uint_16) &&
3359:fltk-1.3.4-1/png/pngrutil.c ****                    png_isaligned(sp, png_uint_16) &&
3360:fltk-1.3.4-1/png/pngrutil.c ****                    bytes_to_copy % (sizeof (png_uint_16)) == 0 &&
3361:fltk-1.3.4-1/png/pngrutil.c ****                    bytes_to_jump % (sizeof (png_uint_16)) == 0)
3362:fltk-1.3.4-1/png/pngrutil.c ****                {
3363:fltk-1.3.4-1/png/pngrutil.c ****                   /* Everything is aligned for png_uint_16 copies, but try for
3364:fltk-1.3.4-1/png/pngrutil.c ****                    * png_uint_32 first.
3365:fltk-1.3.4-1/png/pngrutil.c ****                    */
3366:fltk-1.3.4-1/png/pngrutil.c ****                   if (png_isaligned(dp, png_uint_32) != 0 &&
3367:fltk-1.3.4-1/png/pngrutil.c ****                       png_isaligned(sp, png_uint_32) != 0 &&
3368:fltk-1.3.4-1/png/pngrutil.c ****                       bytes_to_copy % (sizeof (png_uint_32)) == 0 &&
3369:fltk-1.3.4-1/png/pngrutil.c ****                       bytes_to_jump % (sizeof (png_uint_32)) == 0)
3370:fltk-1.3.4-1/png/pngrutil.c ****                   {
3371:fltk-1.3.4-1/png/pngrutil.c ****                      png_uint_32p dp32 = png_aligncast(png_uint_32p,dp);
3372:fltk-1.3.4-1/png/pngrutil.c ****                      png_const_uint_32p sp32 = png_aligncastconst(
3373:fltk-1.3.4-1/png/pngrutil.c ****                          png_const_uint_32p, sp);
3374:fltk-1.3.4-1/png/pngrutil.c ****                      size_t skip = (bytes_to_jump-bytes_to_copy) /
3375:fltk-1.3.4-1/png/pngrutil.c ****                          (sizeof (png_uint_32));
3376:fltk-1.3.4-1/png/pngrutil.c **** 
3377:fltk-1.3.4-1/png/pngrutil.c ****                      do
3378:fltk-1.3.4-1/png/pngrutil.c ****                      {
3379:fltk-1.3.4-1/png/pngrutil.c ****                         size_t c = bytes_to_copy;
3380:fltk-1.3.4-1/png/pngrutil.c ****                         do
3381:fltk-1.3.4-1/png/pngrutil.c ****                         {
3382:fltk-1.3.4-1/png/pngrutil.c ****                            *dp32++ = *sp32++;
3383:fltk-1.3.4-1/png/pngrutil.c ****                            c -= (sizeof (png_uint_32));
3384:fltk-1.3.4-1/png/pngrutil.c ****                         }
3385:fltk-1.3.4-1/png/pngrutil.c ****                         while (c > 0);
3386:fltk-1.3.4-1/png/pngrutil.c **** 
3387:fltk-1.3.4-1/png/pngrutil.c ****                         if (row_width <= bytes_to_jump)
3388:fltk-1.3.4-1/png/pngrutil.c ****                            return;
3389:fltk-1.3.4-1/png/pngrutil.c **** 
3390:fltk-1.3.4-1/png/pngrutil.c ****                         dp32 += skip;
3391:fltk-1.3.4-1/png/pngrutil.c ****                         sp32 += skip;
3392:fltk-1.3.4-1/png/pngrutil.c ****                         row_width -= bytes_to_jump;
3393:fltk-1.3.4-1/png/pngrutil.c ****                      }
3394:fltk-1.3.4-1/png/pngrutil.c ****                      while (bytes_to_copy <= row_width);
3395:fltk-1.3.4-1/png/pngrutil.c **** 
3396:fltk-1.3.4-1/png/pngrutil.c ****                      /* Get to here when the row_width truncates the final copy.
3397:fltk-1.3.4-1/png/pngrutil.c ****                       * There will be 1-3 bytes left to copy, so don't try the
3398:fltk-1.3.4-1/png/pngrutil.c ****                       * 16-bit loop below.
3399:fltk-1.3.4-1/png/pngrutil.c ****                       */
3400:fltk-1.3.4-1/png/pngrutil.c ****                      dp = (png_bytep)dp32;
3401:fltk-1.3.4-1/png/pngrutil.c ****                      sp = (png_const_bytep)sp32;
3402:fltk-1.3.4-1/png/pngrutil.c ****                      do
3403:fltk-1.3.4-1/png/pngrutil.c ****                         *dp++ = *sp++;
3404:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
3405:fltk-1.3.4-1/png/pngrutil.c ****                      return;
3406:fltk-1.3.4-1/png/pngrutil.c ****                   }
3407:fltk-1.3.4-1/png/pngrutil.c **** 
3408:fltk-1.3.4-1/png/pngrutil.c ****                   /* Else do it in 16-bit quantities, but only if the size is
3409:fltk-1.3.4-1/png/pngrutil.c ****                    * not too large.
3410:fltk-1.3.4-1/png/pngrutil.c ****                    */
3411:fltk-1.3.4-1/png/pngrutil.c ****                   else
3412:fltk-1.3.4-1/png/pngrutil.c ****                   {
3413:fltk-1.3.4-1/png/pngrutil.c ****                      png_uint_16p dp16 = png_aligncast(png_uint_16p, dp);
3414:fltk-1.3.4-1/png/pngrutil.c ****                      png_const_uint_16p sp16 = png_aligncastconst(
3415:fltk-1.3.4-1/png/pngrutil.c ****                         png_const_uint_16p, sp);
3416:fltk-1.3.4-1/png/pngrutil.c ****                      size_t skip = (bytes_to_jump-bytes_to_copy) /
3417:fltk-1.3.4-1/png/pngrutil.c ****                         (sizeof (png_uint_16));
3418:fltk-1.3.4-1/png/pngrutil.c **** 
3419:fltk-1.3.4-1/png/pngrutil.c ****                      do
3420:fltk-1.3.4-1/png/pngrutil.c ****                      {
3421:fltk-1.3.4-1/png/pngrutil.c ****                         size_t c = bytes_to_copy;
3422:fltk-1.3.4-1/png/pngrutil.c ****                         do
3423:fltk-1.3.4-1/png/pngrutil.c ****                         {
3424:fltk-1.3.4-1/png/pngrutil.c ****                            *dp16++ = *sp16++;
3425:fltk-1.3.4-1/png/pngrutil.c ****                            c -= (sizeof (png_uint_16));
3426:fltk-1.3.4-1/png/pngrutil.c ****                         }
3427:fltk-1.3.4-1/png/pngrutil.c ****                         while (c > 0);
3428:fltk-1.3.4-1/png/pngrutil.c **** 
3429:fltk-1.3.4-1/png/pngrutil.c ****                         if (row_width <= bytes_to_jump)
3430:fltk-1.3.4-1/png/pngrutil.c ****                            return;
3431:fltk-1.3.4-1/png/pngrutil.c **** 
3432:fltk-1.3.4-1/png/pngrutil.c ****                         dp16 += skip;
3433:fltk-1.3.4-1/png/pngrutil.c ****                         sp16 += skip;
3434:fltk-1.3.4-1/png/pngrutil.c ****                         row_width -= bytes_to_jump;
3435:fltk-1.3.4-1/png/pngrutil.c ****                      }
3436:fltk-1.3.4-1/png/pngrutil.c ****                      while (bytes_to_copy <= row_width);
3437:fltk-1.3.4-1/png/pngrutil.c **** 
3438:fltk-1.3.4-1/png/pngrutil.c ****                      /* End of row - 1 byte left, bytes_to_copy > row_width: */
3439:fltk-1.3.4-1/png/pngrutil.c ****                      dp = (png_bytep)dp16;
3440:fltk-1.3.4-1/png/pngrutil.c ****                      sp = (png_const_bytep)sp16;
3441:fltk-1.3.4-1/png/pngrutil.c ****                      do
3442:fltk-1.3.4-1/png/pngrutil.c ****                         *dp++ = *sp++;
3443:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
3444:fltk-1.3.4-1/png/pngrutil.c ****                      return;
3445:fltk-1.3.4-1/png/pngrutil.c ****                   }
3446:fltk-1.3.4-1/png/pngrutil.c ****                }
3447:fltk-1.3.4-1/png/pngrutil.c **** #endif /* ALIGN_TYPE code */
3448:fltk-1.3.4-1/png/pngrutil.c **** 
3449:fltk-1.3.4-1/png/pngrutil.c ****                /* The true default - use a memcpy: */
3450:fltk-1.3.4-1/png/pngrutil.c ****                for (;;)
3451:fltk-1.3.4-1/png/pngrutil.c ****                {
3452:fltk-1.3.4-1/png/pngrutil.c ****                   memcpy(dp, sp, bytes_to_copy);
3453:fltk-1.3.4-1/png/pngrutil.c **** 
3454:fltk-1.3.4-1/png/pngrutil.c ****                   if (row_width <= bytes_to_jump)
3455:fltk-1.3.4-1/png/pngrutil.c ****                      return;
3456:fltk-1.3.4-1/png/pngrutil.c **** 
3457:fltk-1.3.4-1/png/pngrutil.c ****                   sp += bytes_to_jump;
3458:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
3459:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
3460:fltk-1.3.4-1/png/pngrutil.c ****                   if (bytes_to_copy > row_width)
3461:fltk-1.3.4-1/png/pngrutil.c ****                      bytes_to_copy = (unsigned int)/*SAFE*/row_width;
3462:fltk-1.3.4-1/png/pngrutil.c ****                }
3463:fltk-1.3.4-1/png/pngrutil.c ****          }
3464:fltk-1.3.4-1/png/pngrutil.c **** 
3465:fltk-1.3.4-1/png/pngrutil.c ****          /* NOT REACHED*/
3466:fltk-1.3.4-1/png/pngrutil.c ****       } /* pixel_depth >= 8 */
3467:fltk-1.3.4-1/png/pngrutil.c **** 
3468:fltk-1.3.4-1/png/pngrutil.c ****       /* Here if pixel_depth < 8 to check 'end_ptr' below. */
3469:fltk-1.3.4-1/png/pngrutil.c ****    }
3470:fltk-1.3.4-1/png/pngrutil.c ****    else
3471:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_INTERLACING */
3472:fltk-1.3.4-1/png/pngrutil.c **** 
3473:fltk-1.3.4-1/png/pngrutil.c ****    /* If here then the switch above wasn't used so just memcpy the whole row
3474:fltk-1.3.4-1/png/pngrutil.c ****     * from the temporary row buffer (notice that this overwrites the end of the
3475:fltk-1.3.4-1/png/pngrutil.c ****     * destination row if it is a partial byte.)
3476:fltk-1.3.4-1/png/pngrutil.c ****     */
3477:fltk-1.3.4-1/png/pngrutil.c ****    memcpy(dp, sp, PNG_ROWBYTES(pixel_depth, row_width));
3478:fltk-1.3.4-1/png/pngrutil.c **** 
3479:fltk-1.3.4-1/png/pngrutil.c ****    /* Restore the overwritten bits from the last byte if necessary. */
3480:fltk-1.3.4-1/png/pngrutil.c ****    if (end_ptr != NULL)
3481:fltk-1.3.4-1/png/pngrutil.c ****       *end_ptr = (png_byte)((end_byte & end_mask) | (*end_ptr & ~end_mask));
3482:fltk-1.3.4-1/png/pngrutil.c **** }
3483:fltk-1.3.4-1/png/pngrutil.c **** 
3484:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_INTERLACING_SUPPORTED
3485:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
3486:fltk-1.3.4-1/png/pngrutil.c **** png_do_read_interlace(png_row_infop row_info, png_bytep row, int pass,
3487:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 transformations /* Because these may affect the byte layout */)
3488:fltk-1.3.4-1/png/pngrutil.c **** {
3489:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
3490:fltk-1.3.4-1/png/pngrutil.c ****    /* Offset to next interlace block */
3491:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST int png_pass_inc[7] = {8, 8, 4, 4, 2, 2, 1};
3492:fltk-1.3.4-1/png/pngrutil.c **** 
3493:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_do_read_interlace");
3494:fltk-1.3.4-1/png/pngrutil.c ****    if (row != NULL && row_info != NULL)
3495:fltk-1.3.4-1/png/pngrutil.c ****    {
3496:fltk-1.3.4-1/png/pngrutil.c ****       png_uint_32 final_width;
3497:fltk-1.3.4-1/png/pngrutil.c **** 
3498:fltk-1.3.4-1/png/pngrutil.c ****       final_width = row_info->width * png_pass_inc[pass];
3499:fltk-1.3.4-1/png/pngrutil.c **** 
3500:fltk-1.3.4-1/png/pngrutil.c ****       switch (row_info->pixel_depth)
3501:fltk-1.3.4-1/png/pngrutil.c ****       {
3502:fltk-1.3.4-1/png/pngrutil.c ****          case 1:
3503:fltk-1.3.4-1/png/pngrutil.c ****          {
3504:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep sp = row + (png_size_t)((row_info->width - 1) >> 3);
3505:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 3);
3506:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
3507:fltk-1.3.4-1/png/pngrutil.c ****             int s_start, s_end, s_inc;
3508:fltk-1.3.4-1/png/pngrutil.c ****             int jstop = png_pass_inc[pass];
3509:fltk-1.3.4-1/png/pngrutil.c ****             png_byte v;
3510:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
3511:fltk-1.3.4-1/png/pngrutil.c ****             int j;
3512:fltk-1.3.4-1/png/pngrutil.c **** 
3513:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_PACKSWAP_SUPPORTED
3514:fltk-1.3.4-1/png/pngrutil.c ****             if ((transformations & PNG_PACKSWAP) != 0)
3515:fltk-1.3.4-1/png/pngrutil.c ****             {
3516:fltk-1.3.4-1/png/pngrutil.c ****                 sshift = (int)((row_info->width + 7) & 0x07);
3517:fltk-1.3.4-1/png/pngrutil.c ****                 dshift = (int)((final_width + 7) & 0x07);
3518:fltk-1.3.4-1/png/pngrutil.c ****                 s_start = 7;
3519:fltk-1.3.4-1/png/pngrutil.c ****                 s_end = 0;
3520:fltk-1.3.4-1/png/pngrutil.c ****                 s_inc = -1;
3521:fltk-1.3.4-1/png/pngrutil.c ****             }
3522:fltk-1.3.4-1/png/pngrutil.c **** 
3523:fltk-1.3.4-1/png/pngrutil.c ****             else
3524:fltk-1.3.4-1/png/pngrutil.c **** #endif
3525:fltk-1.3.4-1/png/pngrutil.c ****             {
3526:fltk-1.3.4-1/png/pngrutil.c ****                 sshift = 7 - (int)((row_info->width + 7) & 0x07);
3527:fltk-1.3.4-1/png/pngrutil.c ****                 dshift = 7 - (int)((final_width + 7) & 0x07);
3528:fltk-1.3.4-1/png/pngrutil.c ****                 s_start = 0;
3529:fltk-1.3.4-1/png/pngrutil.c ****                 s_end = 7;
3530:fltk-1.3.4-1/png/pngrutil.c ****                 s_inc = 1;
3531:fltk-1.3.4-1/png/pngrutil.c ****             }
3532:fltk-1.3.4-1/png/pngrutil.c **** 
3533:fltk-1.3.4-1/png/pngrutil.c ****             for (i = 0; i < row_info->width; i++)
3534:fltk-1.3.4-1/png/pngrutil.c ****             {
3535:fltk-1.3.4-1/png/pngrutil.c ****                v = (png_byte)((*sp >> sshift) & 0x01);
3536:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
3537:fltk-1.3.4-1/png/pngrutil.c ****                {
3538:fltk-1.3.4-1/png/pngrutil.c ****                   unsigned int tmp = *dp & (0x7f7f >> (7 - dshift));
3539:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
3540:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
3541:fltk-1.3.4-1/png/pngrutil.c **** 
3542:fltk-1.3.4-1/png/pngrutil.c ****                   if (dshift == s_end)
3543:fltk-1.3.4-1/png/pngrutil.c ****                   {
3544:fltk-1.3.4-1/png/pngrutil.c ****                      dshift = s_start;
3545:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
3546:fltk-1.3.4-1/png/pngrutil.c ****                   }
3547:fltk-1.3.4-1/png/pngrutil.c **** 
3548:fltk-1.3.4-1/png/pngrutil.c ****                   else
3549:fltk-1.3.4-1/png/pngrutil.c ****                      dshift += s_inc;
3550:fltk-1.3.4-1/png/pngrutil.c ****                }
3551:fltk-1.3.4-1/png/pngrutil.c **** 
3552:fltk-1.3.4-1/png/pngrutil.c ****                if (sshift == s_end)
3553:fltk-1.3.4-1/png/pngrutil.c ****                {
3554:fltk-1.3.4-1/png/pngrutil.c ****                   sshift = s_start;
3555:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
3556:fltk-1.3.4-1/png/pngrutil.c ****                }
3557:fltk-1.3.4-1/png/pngrutil.c **** 
3558:fltk-1.3.4-1/png/pngrutil.c ****                else
3559:fltk-1.3.4-1/png/pngrutil.c ****                   sshift += s_inc;
3560:fltk-1.3.4-1/png/pngrutil.c ****             }
3561:fltk-1.3.4-1/png/pngrutil.c ****             break;
3562:fltk-1.3.4-1/png/pngrutil.c ****          }
3563:fltk-1.3.4-1/png/pngrutil.c **** 
3564:fltk-1.3.4-1/png/pngrutil.c ****          case 2:
3565:fltk-1.3.4-1/png/pngrutil.c ****          {
3566:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep sp = row + (png_uint_32)((row_info->width - 1) >> 2);
3567:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_uint_32)((final_width - 1) >> 2);
3568:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
3569:fltk-1.3.4-1/png/pngrutil.c ****             int s_start, s_end, s_inc;
3570:fltk-1.3.4-1/png/pngrutil.c ****             int jstop = png_pass_inc[pass];
3571:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
3572:fltk-1.3.4-1/png/pngrutil.c **** 
3573:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_PACKSWAP_SUPPORTED
3574:fltk-1.3.4-1/png/pngrutil.c ****             if ((transformations & PNG_PACKSWAP) != 0)
3575:fltk-1.3.4-1/png/pngrutil.c ****             {
3576:fltk-1.3.4-1/png/pngrutil.c ****                sshift = (int)(((row_info->width + 3) & 0x03) << 1);
3577:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 3) & 0x03) << 1);
3578:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 6;
3579:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 0;
3580:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = -2;
3581:fltk-1.3.4-1/png/pngrutil.c ****             }
3582:fltk-1.3.4-1/png/pngrutil.c **** 
3583:fltk-1.3.4-1/png/pngrutil.c ****             else
3584:fltk-1.3.4-1/png/pngrutil.c **** #endif
3585:fltk-1.3.4-1/png/pngrutil.c ****             {
3586:fltk-1.3.4-1/png/pngrutil.c ****                sshift = (int)((3 - ((row_info->width + 3) & 0x03)) << 1);
3587:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((3 - ((final_width + 3) & 0x03)) << 1);
3588:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
3589:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 6;
3590:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = 2;
3591:fltk-1.3.4-1/png/pngrutil.c ****             }
3592:fltk-1.3.4-1/png/pngrutil.c **** 
3593:fltk-1.3.4-1/png/pngrutil.c ****             for (i = 0; i < row_info->width; i++)
3594:fltk-1.3.4-1/png/pngrutil.c ****             {
3595:fltk-1.3.4-1/png/pngrutil.c ****                png_byte v;
3596:fltk-1.3.4-1/png/pngrutil.c ****                int j;
3597:fltk-1.3.4-1/png/pngrutil.c **** 
3598:fltk-1.3.4-1/png/pngrutil.c ****                v = (png_byte)((*sp >> sshift) & 0x03);
3599:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
3600:fltk-1.3.4-1/png/pngrutil.c ****                {
3601:fltk-1.3.4-1/png/pngrutil.c ****                   unsigned int tmp = *dp & (0x3f3f >> (6 - dshift));
3602:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
3603:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
3604:fltk-1.3.4-1/png/pngrutil.c **** 
3605:fltk-1.3.4-1/png/pngrutil.c ****                   if (dshift == s_end)
3606:fltk-1.3.4-1/png/pngrutil.c ****                   {
3607:fltk-1.3.4-1/png/pngrutil.c ****                      dshift = s_start;
3608:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
3609:fltk-1.3.4-1/png/pngrutil.c ****                   }
3610:fltk-1.3.4-1/png/pngrutil.c **** 
3611:fltk-1.3.4-1/png/pngrutil.c ****                   else
3612:fltk-1.3.4-1/png/pngrutil.c ****                      dshift += s_inc;
3613:fltk-1.3.4-1/png/pngrutil.c ****                }
3614:fltk-1.3.4-1/png/pngrutil.c **** 
3615:fltk-1.3.4-1/png/pngrutil.c ****                if (sshift == s_end)
3616:fltk-1.3.4-1/png/pngrutil.c ****                {
3617:fltk-1.3.4-1/png/pngrutil.c ****                   sshift = s_start;
3618:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
3619:fltk-1.3.4-1/png/pngrutil.c ****                }
3620:fltk-1.3.4-1/png/pngrutil.c **** 
3621:fltk-1.3.4-1/png/pngrutil.c ****                else
3622:fltk-1.3.4-1/png/pngrutil.c ****                   sshift += s_inc;
3623:fltk-1.3.4-1/png/pngrutil.c ****             }
3624:fltk-1.3.4-1/png/pngrutil.c ****             break;
3625:fltk-1.3.4-1/png/pngrutil.c ****          }
3626:fltk-1.3.4-1/png/pngrutil.c **** 
3627:fltk-1.3.4-1/png/pngrutil.c ****          case 4:
3628:fltk-1.3.4-1/png/pngrutil.c ****          {
3629:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep sp = row + (png_size_t)((row_info->width - 1) >> 1);
3630:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 1);
3631:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
3632:fltk-1.3.4-1/png/pngrutil.c ****             int s_start, s_end, s_inc;
3633:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
3634:fltk-1.3.4-1/png/pngrutil.c ****             int jstop = png_pass_inc[pass];
3635:fltk-1.3.4-1/png/pngrutil.c **** 
3636:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_PACKSWAP_SUPPORTED
3637:fltk-1.3.4-1/png/pngrutil.c ****             if ((transformations & PNG_PACKSWAP) != 0)
3638:fltk-1.3.4-1/png/pngrutil.c ****             {
3639:fltk-1.3.4-1/png/pngrutil.c ****                sshift = (int)(((row_info->width + 1) & 0x01) << 2);
3640:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 1) & 0x01) << 2);
3641:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 4;
3642:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 0;
3643:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = -4;
3644:fltk-1.3.4-1/png/pngrutil.c ****             }
3645:fltk-1.3.4-1/png/pngrutil.c **** 
3646:fltk-1.3.4-1/png/pngrutil.c ****             else
3647:fltk-1.3.4-1/png/pngrutil.c **** #endif
3648:fltk-1.3.4-1/png/pngrutil.c ****             {
3649:fltk-1.3.4-1/png/pngrutil.c ****                sshift = (int)((1 - ((row_info->width + 1) & 0x01)) << 2);
3650:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((1 - ((final_width + 1) & 0x01)) << 2);
3651:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
3652:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 4;
3653:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = 4;
3654:fltk-1.3.4-1/png/pngrutil.c ****             }
3655:fltk-1.3.4-1/png/pngrutil.c **** 
3656:fltk-1.3.4-1/png/pngrutil.c ****             for (i = 0; i < row_info->width; i++)
3657:fltk-1.3.4-1/png/pngrutil.c ****             {
3658:fltk-1.3.4-1/png/pngrutil.c ****                png_byte v = (png_byte)((*sp >> sshift) & 0x0f);
3659:fltk-1.3.4-1/png/pngrutil.c ****                int j;
3660:fltk-1.3.4-1/png/pngrutil.c **** 
3661:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
3662:fltk-1.3.4-1/png/pngrutil.c ****                {
3663:fltk-1.3.4-1/png/pngrutil.c ****                   unsigned int tmp = *dp & (0xf0f >> (4 - dshift));
3664:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
3665:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
3666:fltk-1.3.4-1/png/pngrutil.c **** 
3667:fltk-1.3.4-1/png/pngrutil.c ****                   if (dshift == s_end)
3668:fltk-1.3.4-1/png/pngrutil.c ****                   {
3669:fltk-1.3.4-1/png/pngrutil.c ****                      dshift = s_start;
3670:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
3671:fltk-1.3.4-1/png/pngrutil.c ****                   }
3672:fltk-1.3.4-1/png/pngrutil.c **** 
3673:fltk-1.3.4-1/png/pngrutil.c ****                   else
3674:fltk-1.3.4-1/png/pngrutil.c ****                      dshift += s_inc;
3675:fltk-1.3.4-1/png/pngrutil.c ****                }
3676:fltk-1.3.4-1/png/pngrutil.c **** 
3677:fltk-1.3.4-1/png/pngrutil.c ****                if (sshift == s_end)
3678:fltk-1.3.4-1/png/pngrutil.c ****                {
3679:fltk-1.3.4-1/png/pngrutil.c ****                   sshift = s_start;
3680:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
3681:fltk-1.3.4-1/png/pngrutil.c ****                }
3682:fltk-1.3.4-1/png/pngrutil.c **** 
3683:fltk-1.3.4-1/png/pngrutil.c ****                else
3684:fltk-1.3.4-1/png/pngrutil.c ****                   sshift += s_inc;
3685:fltk-1.3.4-1/png/pngrutil.c ****             }
3686:fltk-1.3.4-1/png/pngrutil.c ****             break;
3687:fltk-1.3.4-1/png/pngrutil.c ****          }
3688:fltk-1.3.4-1/png/pngrutil.c **** 
3689:fltk-1.3.4-1/png/pngrutil.c ****          default:
3690:fltk-1.3.4-1/png/pngrutil.c ****          {
3691:fltk-1.3.4-1/png/pngrutil.c ****             png_size_t pixel_bytes = (row_info->pixel_depth >> 3);
3692:fltk-1.3.4-1/png/pngrutil.c **** 
3693:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep sp = row + (png_size_t)(row_info->width - 1)
3694:fltk-1.3.4-1/png/pngrutil.c ****                 * pixel_bytes;
3695:fltk-1.3.4-1/png/pngrutil.c **** 
3696:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)(final_width - 1) * pixel_bytes;
3697:fltk-1.3.4-1/png/pngrutil.c **** 
3698:fltk-1.3.4-1/png/pngrutil.c ****             int jstop = png_pass_inc[pass];
3699:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
3700:fltk-1.3.4-1/png/pngrutil.c **** 
3701:fltk-1.3.4-1/png/pngrutil.c ****             for (i = 0; i < row_info->width; i++)
3702:fltk-1.3.4-1/png/pngrutil.c ****             {
3703:fltk-1.3.4-1/png/pngrutil.c ****                png_byte v[8]; /* SAFE; pixel_depth does not exceed 64 */
3704:fltk-1.3.4-1/png/pngrutil.c ****                int j;
3705:fltk-1.3.4-1/png/pngrutil.c **** 
3706:fltk-1.3.4-1/png/pngrutil.c ****                memcpy(v, sp, pixel_bytes);
3707:fltk-1.3.4-1/png/pngrutil.c **** 
3708:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
3709:fltk-1.3.4-1/png/pngrutil.c ****                {
3710:fltk-1.3.4-1/png/pngrutil.c ****                   memcpy(dp, v, pixel_bytes);
3711:fltk-1.3.4-1/png/pngrutil.c ****                   dp -= pixel_bytes;
3712:fltk-1.3.4-1/png/pngrutil.c ****                }
3713:fltk-1.3.4-1/png/pngrutil.c **** 
3714:fltk-1.3.4-1/png/pngrutil.c ****                sp -= pixel_bytes;
3715:fltk-1.3.4-1/png/pngrutil.c ****             }
3716:fltk-1.3.4-1/png/pngrutil.c ****             break;
3717:fltk-1.3.4-1/png/pngrutil.c ****          }
3718:fltk-1.3.4-1/png/pngrutil.c ****       }
3719:fltk-1.3.4-1/png/pngrutil.c **** 
3720:fltk-1.3.4-1/png/pngrutil.c ****       row_info->width = final_width;
3721:fltk-1.3.4-1/png/pngrutil.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, final_width);
3722:fltk-1.3.4-1/png/pngrutil.c ****    }
3723:fltk-1.3.4-1/png/pngrutil.c **** #ifndef PNG_READ_PACKSWAP_SUPPORTED
3724:fltk-1.3.4-1/png/pngrutil.c ****    PNG_UNUSED(transformations)  /* Silence compiler warning */
3725:fltk-1.3.4-1/png/pngrutil.c **** #endif
3726:fltk-1.3.4-1/png/pngrutil.c **** }
3727:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_INTERLACING */
3728:fltk-1.3.4-1/png/pngrutil.c **** 
3729:fltk-1.3.4-1/png/pngrutil.c **** static void
3730:fltk-1.3.4-1/png/pngrutil.c **** png_read_filter_row_sub(png_row_infop row_info, png_bytep row,
3731:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep prev_row)
3732:fltk-1.3.4-1/png/pngrutil.c **** {
  11              		.loc 1 3732 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 3732 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
3733:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t i;
  15              		.loc 1 3733 4 is_stmt 1 view .LVU2
3734:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t istop = row_info->rowbytes;
  16              		.loc 1 3734 4 view .LVU3
3735:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int bpp = (row_info->pixel_depth + 7) >> 3;
  17              		.loc 1 3735 32 is_stmt 0 view .LVU4
  18 0004 0FB65713 		movzbl	19(%rdi), %edx
  19              	.LVL1:
3734:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t istop = row_info->rowbytes;
  20              		.loc 1 3734 15 view .LVU5
  21 0008 4C8B4708 		movq	8(%rdi), %r8
  22              	.LVL2:
  23              		.loc 1 3735 4 is_stmt 1 view .LVU6
3736:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep rp = row + bpp;
  24              		.loc 1 3736 4 view .LVU7
3735:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int bpp = (row_info->pixel_depth + 7) >> 3;
  25              		.loc 1 3735 46 is_stmt 0 view .LVU8
  26 000c 83C207   		addl	$7, %edx
3735:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int bpp = (row_info->pixel_depth + 7) >> 3;
  27              		.loc 1 3735 51 view .LVU9
  28 000f C1FA03   		sarl	$3, %edx
  29              		.loc 1 3736 23 view .LVU10
  30 0012 4863D2   		movslq	%edx, %rdx
  31 0015 4889D1   		movq	%rdx, %rcx
  32              		.loc 1 3736 14 view .LVU11
  33 0018 488D0416 		leaq	(%rsi,%rdx), %rax
  34              	.LVL3:
3737:fltk-1.3.4-1/png/pngrutil.c **** 
3738:fltk-1.3.4-1/png/pngrutil.c ****    PNG_UNUSED(prev_row)
  35              		.loc 1 3738 4 is_stmt 1 view .LVU12
3739:fltk-1.3.4-1/png/pngrutil.c **** 
3740:fltk-1.3.4-1/png/pngrutil.c ****    for (i = bpp; i < istop; i++)
  36              		.loc 1 3740 4 view .LVU13
  37              		.loc 1 3740 18 view .LVU14
  38 001c 4C01C6   		addq	%r8, %rsi
  39              	.LVL4:
  40              		.loc 1 3740 18 is_stmt 0 view .LVU15
  41 001f 48F7D9   		negq	%rcx
  42              		.loc 1 3740 4 view .LVU16
  43 0022 4C39C2   		cmpq	%r8, %rdx
  44 0025 7318     		jnb	.L1
  45              	.LVL5:
  46 0027 660F1F84 		.p2align 4,,10
  46      00000000 
  46      00
  47              		.p2align 3
  48              	.L3:
3741:fltk-1.3.4-1/png/pngrutil.c ****    {
3742:fltk-1.3.4-1/png/pngrutil.c ****       *rp = (png_byte)(((int)(*rp) + (int)(*(rp-bpp))) & 0xff);
  49              		.loc 1 3742 7 is_stmt 1 discriminator 3 view .LVU17
  50              		.loc 1 3742 36 is_stmt 0 discriminator 3 view .LVU18
  51 0030 0FB61408 		movzbl	(%rax,%rcx), %edx
  52 0034 0010     		addb	%dl, (%rax)
3743:fltk-1.3.4-1/png/pngrutil.c ****       rp++;
  53              		.loc 1 3743 7 is_stmt 1 discriminator 3 view .LVU19
  54              		.loc 1 3743 9 is_stmt 0 discriminator 3 view .LVU20
  55 0036 4883C001 		addq	$1, %rax
  56              	.LVL6:
3740:fltk-1.3.4-1/png/pngrutil.c ****    {
  57              		.loc 1 3740 29 is_stmt 1 discriminator 3 view .LVU21
3740:fltk-1.3.4-1/png/pngrutil.c ****    {
  58              		.loc 1 3740 18 discriminator 3 view .LVU22
3740:fltk-1.3.4-1/png/pngrutil.c ****    {
  59              		.loc 1 3740 4 is_stmt 0 discriminator 3 view .LVU23
  60 003a 4839F0   		cmpq	%rsi, %rax
  61 003d 75F1     		jne	.L3
  62              	.L1:
3744:fltk-1.3.4-1/png/pngrutil.c ****    }
3745:fltk-1.3.4-1/png/pngrutil.c **** }
  63              		.loc 1 3745 1 view .LVU24
  64 003f C3       		ret
  65              		.cfi_endproc
  66              	.LFE81:
  68              		.section	.text.png_read_filter_row_up,"ax",@progbits
  69              		.p2align 4
  71              	png_read_filter_row_up:
  72              	.LVL7:
  73              	.LFB82:
3746:fltk-1.3.4-1/png/pngrutil.c **** 
3747:fltk-1.3.4-1/png/pngrutil.c **** static void
3748:fltk-1.3.4-1/png/pngrutil.c **** png_read_filter_row_up(png_row_infop row_info, png_bytep row,
3749:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep prev_row)
3750:fltk-1.3.4-1/png/pngrutil.c **** {
  74              		.loc 1 3750 1 is_stmt 1 view -0
  75              		.cfi_startproc
  76              		.loc 1 3750 1 is_stmt 0 view .LVU26
  77 0000 F30F1EFA 		endbr64
3751:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t i;
  78              		.loc 1 3751 4 is_stmt 1 view .LVU27
3752:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t istop = row_info->rowbytes;
  79              		.loc 1 3752 4 view .LVU28
  80              		.loc 1 3752 15 is_stmt 0 view .LVU29
  81 0004 488B7F08 		movq	8(%rdi), %rdi
  82              	.LVL8:
3753:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep rp = row;
  83              		.loc 1 3753 4 is_stmt 1 view .LVU30
3754:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep pp = prev_row;
  84              		.loc 1 3754 4 view .LVU31
3755:fltk-1.3.4-1/png/pngrutil.c **** 
3756:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < istop; i++)
  85              		.loc 1 3756 4 view .LVU32
  86              		.loc 1 3756 16 view .LVU33
  87              		.loc 1 3756 4 is_stmt 0 view .LVU34
  88 0008 4885FF   		testq	%rdi, %rdi
  89 000b 7413     		je	.L8
  90              		.loc 1 3756 11 view .LVU35
  91 000d 31C0     		xorl	%eax, %eax
  92              	.LVL9:
  93 000f 90       		.p2align 4,,10
  94              		.p2align 3
  95              	.L10:
3757:fltk-1.3.4-1/png/pngrutil.c ****    {
3758:fltk-1.3.4-1/png/pngrutil.c ****       *rp = (png_byte)(((int)(*rp) + (int)(*pp++)) & 0xff);
  96              		.loc 1 3758 7 is_stmt 1 discriminator 3 view .LVU36
  97              		.loc 1 3758 36 is_stmt 0 discriminator 3 view .LVU37
  98 0010 0FB60C02 		movzbl	(%rdx,%rax), %ecx
  99 0014 000C06   		addb	%cl, (%rsi,%rax)
3759:fltk-1.3.4-1/png/pngrutil.c ****       rp++;
 100              		.loc 1 3759 7 is_stmt 1 discriminator 3 view .LVU38
 101              	.LVL10:
3756:fltk-1.3.4-1/png/pngrutil.c ****    {
 102              		.loc 1 3756 27 discriminator 3 view .LVU39
3756:fltk-1.3.4-1/png/pngrutil.c ****    {
 103              		.loc 1 3756 28 is_stmt 0 discriminator 3 view .LVU40
 104 0017 4883C001 		addq	$1, %rax
 105              	.LVL11:
3756:fltk-1.3.4-1/png/pngrutil.c ****    {
 106              		.loc 1 3756 16 is_stmt 1 discriminator 3 view .LVU41
3756:fltk-1.3.4-1/png/pngrutil.c ****    {
 107              		.loc 1 3756 4 is_stmt 0 discriminator 3 view .LVU42
 108 001b 4839C7   		cmpq	%rax, %rdi
 109 001e 75F0     		jne	.L10
 110              	.LVL12:
 111              	.L8:
3760:fltk-1.3.4-1/png/pngrutil.c ****    }
3761:fltk-1.3.4-1/png/pngrutil.c **** }
 112              		.loc 1 3761 1 view .LVU43
 113 0020 C3       		ret
 114              		.cfi_endproc
 115              	.LFE82:
 117              		.section	.text.png_read_filter_row_avg,"ax",@progbits
 118              		.p2align 4
 120              	png_read_filter_row_avg:
 121              	.LVL13:
 122              	.LFB83:
3762:fltk-1.3.4-1/png/pngrutil.c **** 
3763:fltk-1.3.4-1/png/pngrutil.c **** static void
3764:fltk-1.3.4-1/png/pngrutil.c **** png_read_filter_row_avg(png_row_infop row_info, png_bytep row,
3765:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep prev_row)
3766:fltk-1.3.4-1/png/pngrutil.c **** {
 123              		.loc 1 3766 1 is_stmt 1 view -0
 124              		.cfi_startproc
 125              		.loc 1 3766 1 is_stmt 0 view .LVU45
 126 0000 F30F1EFA 		endbr64
3767:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t i;
 127              		.loc 1 3767 4 is_stmt 1 view .LVU46
3768:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep rp = row;
 128              		.loc 1 3768 4 view .LVU47
 129              	.LVL14:
3769:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep pp = prev_row;
 130              		.loc 1 3769 4 view .LVU48
3770:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int bpp = (row_info->pixel_depth + 7) >> 3;
 131              		.loc 1 3770 4 view .LVU49
 132              		.loc 1 3770 32 is_stmt 0 view .LVU50
 133 0004 0FB64713 		movzbl	19(%rdi), %eax
3771:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t istop = row_info->rowbytes - bpp;
 134              		.loc 1 3771 15 view .LVU51
 135 0008 4C8B4F08 		movq	8(%rdi), %r9
3770:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int bpp = (row_info->pixel_depth + 7) >> 3;
 136              		.loc 1 3770 46 view .LVU52
 137 000c 83C007   		addl	$7, %eax
3770:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int bpp = (row_info->pixel_depth + 7) >> 3;
 138              		.loc 1 3770 51 view .LVU53
 139 000f C1F803   		sarl	$3, %eax
 140              	.LVL15:
 141              		.loc 1 3771 4 is_stmt 1 view .LVU54
 142              		.loc 1 3771 42 is_stmt 0 view .LVU55
 143 0012 4C63C0   		movslq	%eax, %r8
 144              		.loc 1 3771 15 view .LVU56
 145 0015 4D29C1   		subq	%r8, %r9
 146              	.LVL16:
3772:fltk-1.3.4-1/png/pngrutil.c **** 
3773:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < bpp; i++)
 147              		.loc 1 3773 4 is_stmt 1 view .LVU57
 148              		.loc 1 3773 16 view .LVU58
 149              		.loc 1 3773 4 is_stmt 0 view .LVU59
 150 0018 85C0     		testl	%eax, %eax
 151 001a 741C     		je	.L16
 152              		.loc 1 3773 11 view .LVU60
 153 001c 31C0     		xorl	%eax, %eax
 154              	.LVL17:
 155 001e 6690     		.p2align 4,,10
 156              		.p2align 3
 157              	.L17:
3774:fltk-1.3.4-1/png/pngrutil.c ****    {
3775:fltk-1.3.4-1/png/pngrutil.c ****       *rp = (png_byte)(((int)(*rp) +
 158              		.loc 1 3775 7 is_stmt 1 discriminator 3 view .LVU61
 159              		.loc 1 3775 13 is_stmt 0 discriminator 3 view .LVU62
 160 0020 0FB60C02 		movzbl	(%rdx,%rax), %ecx
 161 0024 D0E9     		shrb	%cl
 162              		.loc 1 3775 36 discriminator 3 view .LVU63
 163 0026 000C06   		addb	%cl, (%rsi,%rax)
3776:fltk-1.3.4-1/png/pngrutil.c ****          ((int)(*pp++) / 2 )) & 0xff);
3777:fltk-1.3.4-1/png/pngrutil.c **** 
3778:fltk-1.3.4-1/png/pngrutil.c ****       rp++;
 164              		.loc 1 3778 7 is_stmt 1 discriminator 3 view .LVU64
 165              	.LVL18:
3773:fltk-1.3.4-1/png/pngrutil.c ****    {
 166              		.loc 1 3773 25 discriminator 3 view .LVU65
3773:fltk-1.3.4-1/png/pngrutil.c ****    {
 167              		.loc 1 3773 26 is_stmt 0 discriminator 3 view .LVU66
 168 0029 4883C001 		addq	$1, %rax
 169              	.LVL19:
3773:fltk-1.3.4-1/png/pngrutil.c ****    {
 170              		.loc 1 3773 16 is_stmt 1 discriminator 3 view .LVU67
3773:fltk-1.3.4-1/png/pngrutil.c ****    {
 171              		.loc 1 3773 4 is_stmt 0 discriminator 3 view .LVU68
 172 002d 4939C0   		cmpq	%rax, %r8
 173 0030 75EE     		jne	.L17
 174 0032 4C01C2   		addq	%r8, %rdx
 175              	.LVL20:
3773:fltk-1.3.4-1/png/pngrutil.c ****    {
 176              		.loc 1 3773 4 discriminator 3 view .LVU69
 177 0035 4C01C6   		addq	%r8, %rsi
 178              	.LVL21:
 179              	.L16:
3779:fltk-1.3.4-1/png/pngrutil.c ****    }
3780:fltk-1.3.4-1/png/pngrutil.c **** 
3781:fltk-1.3.4-1/png/pngrutil.c ****    for (i = 0; i < istop; i++)
 180              		.loc 1 3781 16 is_stmt 1 view .LVU70
 181 0038 4889F7   		movq	%rsi, %rdi
 182              	.LVL22:
 183              		.loc 1 3781 11 is_stmt 0 view .LVU71
 184 003b 31C0     		xorl	%eax, %eax
 185 003d 4C29C7   		subq	%r8, %rdi
 186 0040 4989F8   		movq	%rdi, %r8
 187              	.LVL23:
 188              		.loc 1 3781 4 view .LVU72
 189 0043 4D85C9   		testq	%r9, %r9
 190 0046 7421     		je	.L15
 191              	.LVL24:
 192 0048 0F1F8400 		.p2align 4,,10
 192      00000000 
 193              		.p2align 3
 194              	.L19:
3782:fltk-1.3.4-1/png/pngrutil.c ****    {
3783:fltk-1.3.4-1/png/pngrutil.c ****       *rp = (png_byte)(((int)(*rp) +
 195              		.loc 1 3783 7 is_stmt 1 discriminator 3 view .LVU73
3784:fltk-1.3.4-1/png/pngrutil.c ****          (int)(*pp++ + *(rp-bpp)) / 2 ) & 0xff);
 196              		.loc 1 3784 24 is_stmt 0 discriminator 3 view .LVU74
 197 0050 410FB60C 		movzbl	(%r8,%rax), %ecx
 197      00
 198              		.loc 1 3784 16 discriminator 3 view .LVU75
 199 0055 0FB63C02 		movzbl	(%rdx,%rax), %edi
 200              		.loc 1 3784 10 discriminator 3 view .LVU76
 201 0059 01F9     		addl	%edi, %ecx
 202              		.loc 1 3784 35 discriminator 3 view .LVU77
 203 005b D1F9     		sarl	%ecx
3783:fltk-1.3.4-1/png/pngrutil.c ****          (int)(*pp++ + *(rp-bpp)) / 2 ) & 0xff);
 204              		.loc 1 3783 36 discriminator 3 view .LVU78
 205 005d 000C06   		addb	%cl, (%rsi,%rax)
3785:fltk-1.3.4-1/png/pngrutil.c **** 
3786:fltk-1.3.4-1/png/pngrutil.c ****       rp++;
 206              		.loc 1 3786 7 is_stmt 1 discriminator 3 view .LVU79
 207              	.LVL25:
3781:fltk-1.3.4-1/png/pngrutil.c ****    {
 208              		.loc 1 3781 27 discriminator 3 view .LVU80
3781:fltk-1.3.4-1/png/pngrutil.c ****    {
 209              		.loc 1 3781 28 is_stmt 0 discriminator 3 view .LVU81
 210 0060 4883C001 		addq	$1, %rax
 211              	.LVL26:
3781:fltk-1.3.4-1/png/pngrutil.c ****    {
 212              		.loc 1 3781 16 is_stmt 1 discriminator 3 view .LVU82
3781:fltk-1.3.4-1/png/pngrutil.c ****    {
 213              		.loc 1 3781 4 is_stmt 0 discriminator 3 view .LVU83
 214 0064 4939C1   		cmpq	%rax, %r9
 215 0067 75E7     		jne	.L19
 216              	.LVL27:
 217              	.L15:
3787:fltk-1.3.4-1/png/pngrutil.c ****    }
3788:fltk-1.3.4-1/png/pngrutil.c **** }
 218              		.loc 1 3788 1 view .LVU84
 219 0069 C3       		ret
 220              		.cfi_endproc
 221              	.LFE83:
 223              		.section	.text.png_read_filter_row_paeth_1byte_pixel,"ax",@progbits
 224              		.p2align 4
 226              	png_read_filter_row_paeth_1byte_pixel:
 227              	.LVL28:
 228              	.LFB84:
3789:fltk-1.3.4-1/png/pngrutil.c **** 
3790:fltk-1.3.4-1/png/pngrutil.c **** static void
3791:fltk-1.3.4-1/png/pngrutil.c **** png_read_filter_row_paeth_1byte_pixel(png_row_infop row_info, png_bytep row,
3792:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep prev_row)
3793:fltk-1.3.4-1/png/pngrutil.c **** {
 229              		.loc 1 3793 1 is_stmt 1 view -0
 230              		.cfi_startproc
 231              		.loc 1 3793 1 is_stmt 0 view .LVU86
 232 0000 F30F1EFA 		endbr64
3794:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep rp_end = row + row_info->rowbytes;
 233              		.loc 1 3794 4 is_stmt 1 view .LVU87
3793:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep rp_end = row + row_info->rowbytes;
 234              		.loc 1 3793 1 is_stmt 0 view .LVU88
 235 0004 55       		pushq	%rbp
 236              		.cfi_def_cfa_offset 16
 237              		.cfi_offset 6, -16
3795:fltk-1.3.4-1/png/pngrutil.c ****    int a, c;
3796:fltk-1.3.4-1/png/pngrutil.c **** 
3797:fltk-1.3.4-1/png/pngrutil.c ****    /* First pixel/byte */
3798:fltk-1.3.4-1/png/pngrutil.c ****    c = *prev_row++;
 238              		.loc 1 3798 17 view .LVU89
 239 0005 4C8D5A01 		leaq	1(%rdx), %r11
3793:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep rp_end = row + row_info->rowbytes;
 240              		.loc 1 3793 1 view .LVU90
 241 0009 53       		pushq	%rbx
 242              		.cfi_def_cfa_offset 24
 243              		.cfi_offset 3, -24
 244              		.loc 1 3798 8 view .LVU91
 245 000a 440FB612 		movzbl	(%rdx), %r10d
3799:fltk-1.3.4-1/png/pngrutil.c ****    a = *row + c;
 246              		.loc 1 3799 8 view .LVU92
 247 000e 0FB616   		movzbl	(%rsi), %edx
 248              	.LVL29:
3794:fltk-1.3.4-1/png/pngrutil.c ****    int a, c;
 249              		.loc 1 3794 14 view .LVU93
 250 0011 488B5F08 		movq	8(%rdi), %rbx
3800:fltk-1.3.4-1/png/pngrutil.c ****    *row++ = (png_byte)a;
 251              		.loc 1 3800 8 view .LVU94
 252 0015 488D7E01 		leaq	1(%rsi), %rdi
 253              	.LVL30:
3798:fltk-1.3.4-1/png/pngrutil.c ****    a = *row + c;
 254              		.loc 1 3798 8 view .LVU95
 255 0019 4489D0   		movl	%r10d, %eax
3799:fltk-1.3.4-1/png/pngrutil.c ****    *row++ = (png_byte)a;
 256              		.loc 1 3799 8 view .LVU96
 257 001c 89D1     		movl	%edx, %ecx
3794:fltk-1.3.4-1/png/pngrutil.c ****    int a, c;
 258              		.loc 1 3794 14 view .LVU97
 259 001e 4801F3   		addq	%rsi, %rbx
 260              	.LVL31:
3795:fltk-1.3.4-1/png/pngrutil.c **** 
 261              		.loc 1 3795 4 is_stmt 1 view .LVU98
3798:fltk-1.3.4-1/png/pngrutil.c ****    a = *row + c;
 262              		.loc 1 3798 4 view .LVU99
3799:fltk-1.3.4-1/png/pngrutil.c ****    *row++ = (png_byte)a;
 263              		.loc 1 3799 4 view .LVU100
3799:fltk-1.3.4-1/png/pngrutil.c ****    *row++ = (png_byte)a;
 264              		.loc 1 3799 6 is_stmt 0 view .LVU101
 265 0021 4401D2   		addl	%r10d, %edx
 266              	.LVL32:
 267              		.loc 1 3800 4 is_stmt 1 view .LVU102
 268              		.loc 1 3800 13 is_stmt 0 view .LVU103
 269 0024 01C8     		addl	%ecx, %eax
 270              	.LVL33:
 271              		.loc 1 3800 13 view .LVU104
 272 0026 8806     		movb	%al, (%rsi)
3801:fltk-1.3.4-1/png/pngrutil.c **** 
3802:fltk-1.3.4-1/png/pngrutil.c ****    /* Remainder */
3803:fltk-1.3.4-1/png/pngrutil.c ****    while (row < rp_end)
 273              		.loc 1 3803 4 is_stmt 1 view .LVU105
 274              		.loc 1 3803 10 view .LVU106
 275 0028 4839FB   		cmpq	%rdi, %rbx
 276 002b 7666     		jbe	.L27
 277 002d 0F1F00   		.p2align 4,,10
 278              		.p2align 3
 279              	.L31:
 280              	.LBB153:
3804:fltk-1.3.4-1/png/pngrutil.c ****    {
3805:fltk-1.3.4-1/png/pngrutil.c ****       int b, pa, pb, pc, p;
 281              		.loc 1 3805 7 view .LVU107
3806:fltk-1.3.4-1/png/pngrutil.c **** 
3807:fltk-1.3.4-1/png/pngrutil.c ****       a &= 0xff; /* From previous iteration or start */
 282              		.loc 1 3807 7 view .LVU108
3808:fltk-1.3.4-1/png/pngrutil.c ****       b = *prev_row++;
 283              		.loc 1 3808 20 is_stmt 0 view .LVU109
 284 0030 4983C301 		addq	$1, %r11
 285              	.LVL34:
 286              		.loc 1 3808 20 view .LVU110
 287 0034 4589D0   		movl	%r10d, %r8d
3807:fltk-1.3.4-1/png/pngrutil.c ****       b = *prev_row++;
 288              		.loc 1 3807 9 view .LVU111
 289 0037 0FB6D2   		movzbl	%dl, %edx
 290              	.LVL35:
 291              		.loc 1 3808 7 is_stmt 1 view .LVU112
 292              		.loc 1 3808 9 is_stmt 0 view .LVU113
 293 003a 450FB653 		movzbl	-1(%r11), %r10d
 293      FF
 294              	.LVL36:
3809:fltk-1.3.4-1/png/pngrutil.c **** 
3810:fltk-1.3.4-1/png/pngrutil.c ****       p = b - c;
 295              		.loc 1 3810 7 is_stmt 1 view .LVU114
3811:fltk-1.3.4-1/png/pngrutil.c ****       pc = a - c;
 296              		.loc 1 3811 10 is_stmt 0 view .LVU115
 297 003f 4189D1   		movl	%edx, %r9d
 298 0042 4529C1   		subl	%r8d, %r9d
3810:fltk-1.3.4-1/png/pngrutil.c ****       pc = a - c;
 299              		.loc 1 3810 9 view .LVU116
 300 0045 4489D0   		movl	%r10d, %eax
3812:fltk-1.3.4-1/png/pngrutil.c **** 
3813:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_USE_ABS
3814:fltk-1.3.4-1/png/pngrutil.c ****          pa = abs(p);
3815:fltk-1.3.4-1/png/pngrutil.c ****          pb = abs(pc);
3816:fltk-1.3.4-1/png/pngrutil.c ****          pc = abs(p + pc);
3817:fltk-1.3.4-1/png/pngrutil.c **** #     else
3818:fltk-1.3.4-1/png/pngrutil.c ****          pa = p < 0 ? -p : p;
3819:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 301              		.loc 1 3819 13 view .LVU117
 302 0048 4489CD   		movl	%r9d, %ebp
3810:fltk-1.3.4-1/png/pngrutil.c ****       pc = a - c;
 303              		.loc 1 3810 9 view .LVU118
 304 004b 4429C0   		subl	%r8d, %eax
 305              	.LVL37:
3811:fltk-1.3.4-1/png/pngrutil.c **** 
 306              		.loc 1 3811 7 is_stmt 1 view .LVU119
3818:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 307              		.loc 1 3818 10 view .LVU120
 308              		.loc 1 3819 13 is_stmt 0 view .LVU121
 309 004e C1FD1F   		sarl	$31, %ebp
 310              	.LVL38:
3818:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 311              		.loc 1 3818 13 view .LVU122
 312 0051 89C6     		movl	%eax, %esi
 313 0053 C1FE1F   		sarl	$31, %esi
 314 0056 89F1     		movl	%esi, %ecx
 315 0058 31C1     		xorl	%eax, %ecx
3820:fltk-1.3.4-1/png/pngrutil.c ****          pc = (p + pc) < 0 ? -(p + pc) : p + pc;
 316              		.loc 1 3820 44 view .LVU123
 317 005a 4401C8   		addl	%r9d, %eax
 318              	.LVL39:
3818:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 319              		.loc 1 3818 13 view .LVU124
 320 005d 29F1     		subl	%esi, %ecx
 321              	.LVL40:
3819:fltk-1.3.4-1/png/pngrutil.c ****          pc = (p + pc) < 0 ? -(p + pc) : p + pc;
 322              		.loc 1 3819 10 is_stmt 1 view .LVU125
3819:fltk-1.3.4-1/png/pngrutil.c ****          pc = (p + pc) < 0 ? -(p + pc) : p + pc;
 323              		.loc 1 3819 13 is_stmt 0 view .LVU126
 324 005f 89EE     		movl	%ebp, %esi
 325 0061 4431CE   		xorl	%r9d, %esi
 326              		.loc 1 3820 13 view .LVU127
 327 0064 4189C1   		movl	%eax, %r9d
 328              	.LVL41:
 329              		.loc 1 3820 13 view .LVU128
 330 0067 41C1F91F 		sarl	$31, %r9d
3819:fltk-1.3.4-1/png/pngrutil.c ****          pc = (p + pc) < 0 ? -(p + pc) : p + pc;
 331              		.loc 1 3819 13 view .LVU129
 332 006b 29EE     		subl	%ebp, %esi
 333              	.LVL42:
 334              		.loc 1 3820 10 is_stmt 1 view .LVU130
 335              		.loc 1 3820 13 is_stmt 0 view .LVU131
 336 006d 4431C8   		xorl	%r9d, %eax
 337 0070 4429C8   		subl	%r9d, %eax
 338              	.LVL43:
3821:fltk-1.3.4-1/png/pngrutil.c **** #     endif
3822:fltk-1.3.4-1/png/pngrutil.c **** 
3823:fltk-1.3.4-1/png/pngrutil.c ****       /* Find the best predictor, the least of pa, pb, pc favoring the earlier
3824:fltk-1.3.4-1/png/pngrutil.c ****        * ones in the case of a tie.
3825:fltk-1.3.4-1/png/pngrutil.c ****        */
3826:fltk-1.3.4-1/png/pngrutil.c ****       if (pb < pa) pa = pb, a = b;
 339              		.loc 1 3826 7 is_stmt 1 view .LVU132
 340              		.loc 1 3826 10 is_stmt 0 view .LVU133
 341 0073 39F1     		cmpl	%esi, %ecx
 342 0075 7E05     		jle	.L29
 343              		.loc 1 3826 10 view .LVU134
 344 0077 89F1     		movl	%esi, %ecx
 345              	.LVL44:
 346              		.loc 1 3826 31 view .LVU135
 347 0079 4489D2   		movl	%r10d, %edx
 348              	.LVL45:
 349              	.L29:
3827:fltk-1.3.4-1/png/pngrutil.c ****       if (pc < pa) a = c;
 350              		.loc 1 3827 7 is_stmt 1 view .LVU136
 351              		.loc 1 3827 10 is_stmt 0 view .LVU137
 352 007c 39C1     		cmpl	%eax, %ecx
3828:fltk-1.3.4-1/png/pngrutil.c **** 
3829:fltk-1.3.4-1/png/pngrutil.c ****       /* Calculate the current pixel in a, and move the previous row pixel to c
3830:fltk-1.3.4-1/png/pngrutil.c ****        * for the next time round the loop
3831:fltk-1.3.4-1/png/pngrutil.c ****        */
3832:fltk-1.3.4-1/png/pngrutil.c ****       c = b;
3833:fltk-1.3.4-1/png/pngrutil.c ****       a += *row;
 353              		.loc 1 3833 12 view .LVU138
 354 007e 0FB607   		movzbl	(%rdi), %eax
 355              	.LVL46:
3827:fltk-1.3.4-1/png/pngrutil.c ****       if (pc < pa) a = c;
 356              		.loc 1 3827 10 view .LVU139
 357 0081 410F4FD0 		cmovg	%r8d, %edx
 358              	.LVL47:
3832:fltk-1.3.4-1/png/pngrutil.c ****       a += *row;
 359              		.loc 1 3832 7 is_stmt 1 view .LVU140
 360              		.loc 1 3833 7 view .LVU141
3834:fltk-1.3.4-1/png/pngrutil.c ****       *row++ = (png_byte)a;
 361              		.loc 1 3834 11 is_stmt 0 view .LVU142
 362 0085 4883C701 		addq	$1, %rdi
 363              	.LVL48:
3833:fltk-1.3.4-1/png/pngrutil.c ****       *row++ = (png_byte)a;
 364              		.loc 1 3833 9 view .LVU143
 365 0089 01C2     		addl	%eax, %edx
 366              	.LVL49:
 367              		.loc 1 3834 7 is_stmt 1 view .LVU144
 368              		.loc 1 3834 16 is_stmt 0 view .LVU145
 369 008b 8857FF   		movb	%dl, -1(%rdi)
 370              		.loc 1 3834 16 view .LVU146
 371              	.LBE153:
3803:fltk-1.3.4-1/png/pngrutil.c ****    {
 372              		.loc 1 3803 10 is_stmt 1 view .LVU147
 373 008e 4839FB   		cmpq	%rdi, %rbx
 374 0091 759D     		jne	.L31
 375              	.LVL50:
 376              	.L27:
3835:fltk-1.3.4-1/png/pngrutil.c ****    }
3836:fltk-1.3.4-1/png/pngrutil.c **** }
 377              		.loc 1 3836 1 is_stmt 0 view .LVU148
 378 0093 5B       		popq	%rbx
 379              		.cfi_def_cfa_offset 16
 380              	.LVL51:
 381              		.loc 1 3836 1 view .LVU149
 382 0094 5D       		popq	%rbp
 383              		.cfi_def_cfa_offset 8
 384 0095 C3       		ret
 385              		.cfi_endproc
 386              	.LFE84:
 388              		.section	.text.png_read_filter_row_paeth_multibyte_pixel,"ax",@progbits
 389              		.p2align 4
 391              	png_read_filter_row_paeth_multibyte_pixel:
 392              	.LVL52:
 393              	.LFB85:
3837:fltk-1.3.4-1/png/pngrutil.c **** 
3838:fltk-1.3.4-1/png/pngrutil.c **** static void
3839:fltk-1.3.4-1/png/pngrutil.c **** png_read_filter_row_paeth_multibyte_pixel(png_row_infop row_info, png_bytep row,
3840:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep prev_row)
3841:fltk-1.3.4-1/png/pngrutil.c **** {
 394              		.loc 1 3841 1 is_stmt 1 view -0
 395              		.cfi_startproc
 396              		.loc 1 3841 1 is_stmt 0 view .LVU151
 397 0000 F30F1EFA 		endbr64
3842:fltk-1.3.4-1/png/pngrutil.c ****    int bpp = (row_info->pixel_depth + 7) >> 3;
 398              		.loc 1 3842 4 is_stmt 1 view .LVU152
 399              	.LVL53:
3843:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep rp_end = row + bpp;
 400              		.loc 1 3843 4 view .LVU153
3841:fltk-1.3.4-1/png/pngrutil.c ****    int bpp = (row_info->pixel_depth + 7) >> 3;
 401              		.loc 1 3841 1 is_stmt 0 view .LVU154
 402 0004 4154     		pushq	%r12
 403              		.cfi_def_cfa_offset 16
 404              		.cfi_offset 12, -16
 405              	.LVL54:
3841:fltk-1.3.4-1/png/pngrutil.c ****    int bpp = (row_info->pixel_depth + 7) >> 3;
 406              		.loc 1 3841 1 view .LVU155
 407 0006 55       		pushq	%rbp
 408              		.cfi_def_cfa_offset 24
 409              		.cfi_offset 6, -24
 410 0007 53       		pushq	%rbx
 411              		.cfi_def_cfa_offset 32
 412              		.cfi_offset 3, -32
3842:fltk-1.3.4-1/png/pngrutil.c ****    int bpp = (row_info->pixel_depth + 7) >> 3;
 413              		.loc 1 3842 23 view .LVU156
 414 0008 440FB65F 		movzbl	19(%rdi), %r11d
 414      13
3842:fltk-1.3.4-1/png/pngrutil.c ****    int bpp = (row_info->pixel_depth + 7) >> 3;
 415              		.loc 1 3842 37 view .LVU157
 416 000d 4183C307 		addl	$7, %r11d
3842:fltk-1.3.4-1/png/pngrutil.c ****    int bpp = (row_info->pixel_depth + 7) >> 3;
 417              		.loc 1 3842 8 view .LVU158
 418 0011 41C1FB03 		sarl	$3, %r11d
 419              		.loc 1 3843 27 view .LVU159
 420 0015 4D63DB   		movslq	%r11d, %r11
 421              		.loc 1 3843 14 view .LVU160
 422 0018 4E8D041E 		leaq	(%rsi,%r11), %r8
 423              	.LVL55:
3844:fltk-1.3.4-1/png/pngrutil.c **** 
3845:fltk-1.3.4-1/png/pngrutil.c ****    /* Process the first pixel in the row completely (this is the same as 'up'
3846:fltk-1.3.4-1/png/pngrutil.c ****     * because there is only one candidate predictor for the first row).
3847:fltk-1.3.4-1/png/pngrutil.c ****     */
3848:fltk-1.3.4-1/png/pngrutil.c ****    while (row < rp_end)
 424              		.loc 1 3848 4 is_stmt 1 view .LVU161
 425              		.loc 1 3848 10 view .LVU162
 426 001c 4C39C6   		cmpq	%r8, %rsi
 427 001f 0F83AB00 		jnb	.L42
 427      0000
 428 0025 4A8D0C1A 		leaq	(%rdx,%r11), %rcx
 429 0029 4889F0   		movq	%rsi, %rax
 430              	.LVL56:
 431 002c 0F1F4000 		.p2align 4,,10
 432              		.p2align 3
 433              	.L36:
 434              	.LBB154:
3849:fltk-1.3.4-1/png/pngrutil.c ****    {
3850:fltk-1.3.4-1/png/pngrutil.c ****       int a = *row + *prev_row++;
 435              		.loc 1 3850 7 view .LVU163
 436              		.loc 1 3850 31 is_stmt 0 view .LVU164
 437 0030 4883C201 		addq	$1, %rdx
 438              	.LVL57:
 439              		.loc 1 3850 15 view .LVU165
 440 0034 440FB608 		movzbl	(%rax), %r9d
 441              	.LVL58:
3851:fltk-1.3.4-1/png/pngrutil.c ****       *row++ = (png_byte)a;
 442              		.loc 1 3851 7 is_stmt 1 view .LVU166
 443              		.loc 1 3851 11 is_stmt 0 view .LVU167
 444 0038 4883C001 		addq	$1, %rax
 445              	.LVL59:
 446              		.loc 1 3851 16 view .LVU168
 447 003c 44024AFF 		addb	-1(%rdx), %r9b
 448              	.LVL60:
 449              		.loc 1 3851 14 view .LVU169
 450 0040 448848FF 		movb	%r9b, -1(%rax)
 451              	.LVL61:
 452              		.loc 1 3851 14 view .LVU170
 453              	.LBE154:
3848:fltk-1.3.4-1/png/pngrutil.c ****    {
 454              		.loc 1 3848 10 is_stmt 1 view .LVU171
 455 0044 4839CA   		cmpq	%rcx, %rdx
 456 0047 75E7     		jne	.L36
 457              	.LVL62:
 458              	.L35:
3852:fltk-1.3.4-1/png/pngrutil.c ****    }
3853:fltk-1.3.4-1/png/pngrutil.c **** 
3854:fltk-1.3.4-1/png/pngrutil.c ****    /* Remainder */
3855:fltk-1.3.4-1/png/pngrutil.c ****    rp_end += row_info->rowbytes - bpp;
 459              		.loc 1 3855 4 view .LVU172
 460              		.loc 1 3855 11 is_stmt 0 view .LVU173
 461 0049 48037708 		addq	8(%rdi), %rsi
 462              	.LVL63:
3856:fltk-1.3.4-1/png/pngrutil.c **** 
3857:fltk-1.3.4-1/png/pngrutil.c ****    while (row < rp_end)
 463              		.loc 1 3857 4 is_stmt 1 view .LVU174
 464              		.loc 1 3857 10 view .LVU175
 465 004d 49F7DB   		negq	%r11
 466 0050 4889F3   		movq	%rsi, %rbx
 467 0053 4C29C3   		subq	%r8, %rbx
 468 0056 4801CB   		addq	%rcx, %rbx
 469 0059 4C39C6   		cmpq	%r8, %rsi
 470 005c 766A     		jbe	.L34
 471              	.LVL64:
 472 005e 6690     		.p2align 4,,10
 473              		.p2align 3
 474              	.L40:
 475              	.LBB155:
3858:fltk-1.3.4-1/png/pngrutil.c ****    {
3859:fltk-1.3.4-1/png/pngrutil.c ****       int a, b, c, pa, pb, pc, p;
 476              		.loc 1 3859 7 view .LVU176
3860:fltk-1.3.4-1/png/pngrutil.c **** 
3861:fltk-1.3.4-1/png/pngrutil.c ****       c = *(prev_row - bpp);
 477              		.loc 1 3861 7 view .LVU177
 478              		.loc 1 3861 9 is_stmt 0 view .LVU178
 479 0060 460FB60C 		movzbl	(%rcx,%r11), %r9d
 479      19
 480              	.LVL65:
3862:fltk-1.3.4-1/png/pngrutil.c ****       a = *(row - bpp);
 481              		.loc 1 3862 7 is_stmt 1 view .LVU179
3863:fltk-1.3.4-1/png/pngrutil.c ****       b = *prev_row++;
 482              		.loc 1 3863 9 is_stmt 0 view .LVU180
 483 0065 440FB621 		movzbl	(%rcx), %r12d
 484              		.loc 1 3863 20 view .LVU181
 485 0069 4883C101 		addq	$1, %rcx
 486              	.LVL66:
3862:fltk-1.3.4-1/png/pngrutil.c ****       a = *(row - bpp);
 487              		.loc 1 3862 9 view .LVU182
 488 006d 430FB614 		movzbl	(%r8,%r11), %edx
 488      18
 489              	.LVL67:
 490              		.loc 1 3863 7 is_stmt 1 view .LVU183
3864:fltk-1.3.4-1/png/pngrutil.c **** 
3865:fltk-1.3.4-1/png/pngrutil.c ****       p = b - c;
 491              		.loc 1 3865 7 view .LVU184
 492              		.loc 1 3865 9 is_stmt 0 view .LVU185
 493 0072 4489E0   		movl	%r12d, %eax
 494 0075 4429C8   		subl	%r9d, %eax
 495              	.LVL68:
3866:fltk-1.3.4-1/png/pngrutil.c ****       pc = a - c;
 496              		.loc 1 3866 7 is_stmt 1 view .LVU186
 497              		.loc 1 3866 10 is_stmt 0 view .LVU187
 498 0078 4189D2   		movl	%edx, %r10d
3867:fltk-1.3.4-1/png/pngrutil.c **** 
3868:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_USE_ABS
3869:fltk-1.3.4-1/png/pngrutil.c ****          pa = abs(p);
3870:fltk-1.3.4-1/png/pngrutil.c ****          pb = abs(pc);
3871:fltk-1.3.4-1/png/pngrutil.c ****          pc = abs(p + pc);
3872:fltk-1.3.4-1/png/pngrutil.c **** #     else
3873:fltk-1.3.4-1/png/pngrutil.c ****          pa = p < 0 ? -p : p;
 499              		.loc 1 3873 13 view .LVU188
 500 007b 89C7     		movl	%eax, %edi
3866:fltk-1.3.4-1/png/pngrutil.c ****       pc = a - c;
 501              		.loc 1 3866 10 view .LVU189
 502 007d 4529CA   		subl	%r9d, %r10d
 503              	.LVL69:
 504              		.loc 1 3873 10 is_stmt 1 view .LVU190
 505              		.loc 1 3873 13 is_stmt 0 view .LVU191
 506 0080 C1FF1F   		sarl	$31, %edi
3874:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 507              		.loc 1 3874 13 view .LVU192
 508 0083 4489D5   		movl	%r10d, %ebp
3873:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 509              		.loc 1 3873 13 view .LVU193
 510 0086 89FE     		movl	%edi, %esi
 511              		.loc 1 3874 13 view .LVU194
 512 0088 C1FD1F   		sarl	$31, %ebp
3873:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 513              		.loc 1 3873 13 view .LVU195
 514 008b 31C6     		xorl	%eax, %esi
3875:fltk-1.3.4-1/png/pngrutil.c ****          pc = (p + pc) < 0 ? -(p + pc) : p + pc;
 515              		.loc 1 3875 44 view .LVU196
 516 008d 4401D0   		addl	%r10d, %eax
 517              	.LVL70:
3873:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 518              		.loc 1 3873 13 view .LVU197
 519 0090 29FE     		subl	%edi, %esi
 520              	.LVL71:
3874:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 521              		.loc 1 3874 10 is_stmt 1 view .LVU198
3874:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 522              		.loc 1 3874 13 is_stmt 0 view .LVU199
 523 0092 89EF     		movl	%ebp, %edi
 524 0094 4431D7   		xorl	%r10d, %edi
 525              		.loc 1 3875 13 view .LVU200
 526 0097 4189C2   		movl	%eax, %r10d
 527              	.LVL72:
 528              		.loc 1 3875 13 view .LVU201
 529 009a 41C1FA1F 		sarl	$31, %r10d
3874:fltk-1.3.4-1/png/pngrutil.c ****          pb = pc < 0 ? -pc : pc;
 530              		.loc 1 3874 13 view .LVU202
 531 009e 29EF     		subl	%ebp, %edi
 532              	.LVL73:
 533              		.loc 1 3875 10 is_stmt 1 view .LVU203
 534              		.loc 1 3875 13 is_stmt 0 view .LVU204
 535 00a0 4431D0   		xorl	%r10d, %eax
 536 00a3 4429D0   		subl	%r10d, %eax
 537              	.LVL74:
3876:fltk-1.3.4-1/png/pngrutil.c **** #     endif
3877:fltk-1.3.4-1/png/pngrutil.c **** 
3878:fltk-1.3.4-1/png/pngrutil.c ****       if (pb < pa) pa = pb, a = b;
 538              		.loc 1 3878 7 is_stmt 1 view .LVU205
 539              		.loc 1 3878 10 is_stmt 0 view .LVU206
 540 00a6 39FE     		cmpl	%edi, %esi
 541 00a8 7E05     		jle	.L38
 542              		.loc 1 3878 10 view .LVU207
 543 00aa 89FE     		movl	%edi, %esi
 544              	.LVL75:
 545              		.loc 1 3878 31 view .LVU208
 546 00ac 4489E2   		movl	%r12d, %edx
 547              	.LVL76:
 548              	.L38:
3879:fltk-1.3.4-1/png/pngrutil.c ****       if (pc < pa) a = c;
 549              		.loc 1 3879 7 is_stmt 1 view .LVU209
 550              		.loc 1 3879 22 is_stmt 0 view .LVU210
 551 00af 39C6     		cmpl	%eax, %esi
3880:fltk-1.3.4-1/png/pngrutil.c **** 
3881:fltk-1.3.4-1/png/pngrutil.c ****       a += *row;
 552              		.loc 1 3881 12 view .LVU211
 553 00b1 410FB600 		movzbl	(%r8), %eax
 554              	.LVL77:
3879:fltk-1.3.4-1/png/pngrutil.c ****       if (pc < pa) a = c;
 555              		.loc 1 3879 22 view .LVU212
 556 00b5 410F4FD1 		cmovg	%r9d, %edx
 557              	.LVL78:
 558              		.loc 1 3881 7 is_stmt 1 view .LVU213
3882:fltk-1.3.4-1/png/pngrutil.c ****       *row++ = (png_byte)a;
 559              		.loc 1 3882 11 is_stmt 0 view .LVU214
 560 00b9 4983C001 		addq	$1, %r8
 561              	.LVL79:
3881:fltk-1.3.4-1/png/pngrutil.c ****       *row++ = (png_byte)a;
 562              		.loc 1 3881 9 view .LVU215
 563 00bd 01C2     		addl	%eax, %edx
 564              	.LVL80:
 565              		.loc 1 3882 7 is_stmt 1 view .LVU216
 566              		.loc 1 3882 16 is_stmt 0 view .LVU217
 567 00bf 418850FF 		movb	%dl, -1(%r8)
 568              	.LVL81:
 569              		.loc 1 3882 16 view .LVU218
 570              	.LBE155:
3857:fltk-1.3.4-1/png/pngrutil.c ****    {
 571              		.loc 1 3857 10 is_stmt 1 view .LVU219
 572 00c3 4839D9   		cmpq	%rbx, %rcx
 573 00c6 7598     		jne	.L40
 574              	.LVL82:
 575              	.L34:
3883:fltk-1.3.4-1/png/pngrutil.c ****    }
3884:fltk-1.3.4-1/png/pngrutil.c **** }
 576              		.loc 1 3884 1 is_stmt 0 view .LVU220
 577 00c8 5B       		popq	%rbx
 578              		.cfi_remember_state
 579              		.cfi_def_cfa_offset 24
 580 00c9 5D       		popq	%rbp
 581              		.cfi_def_cfa_offset 16
 582 00ca 415C     		popq	%r12
 583              		.cfi_def_cfa_offset 8
 584 00cc C3       		ret
 585              	.LVL83:
 586 00cd 0F1F00   		.p2align 4,,10
 587              		.p2align 3
 588              	.L42:
 589              		.cfi_restore_state
3848:fltk-1.3.4-1/png/pngrutil.c ****    {
 590              		.loc 1 3848 10 view .LVU221
 591 00d0 4889D1   		movq	%rdx, %rcx
 592 00d3 4989F0   		movq	%rsi, %r8
 593              	.LVL84:
3848:fltk-1.3.4-1/png/pngrutil.c ****    {
 594              		.loc 1 3848 10 view .LVU222
 595 00d6 E96EFFFF 		jmp	.L35
 595      FF
 596              		.cfi_endproc
 597              	.LFE85:
 599              		.section	.rodata.png_inflate_claim.str1.1,"aMS",@progbits,1
 600              	.LC0:
 601 0000 20757369 		.string	" using zstream"
 601      6E67207A 
 601      73747265 
 601      616D00
 602              	.LC1:
 603 000f 312E322E 		.string	"1.2.11"
 603      313100
 604              		.section	.text.png_inflate_claim,"ax",@progbits
 605              		.p2align 4
 607              	png_inflate_claim:
 608              	.LVL85:
 609              	.LFB52:
 333:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->zowner != 0)
 610              		.loc 1 333 1 is_stmt 1 view -0
 611              		.cfi_startproc
 333:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->zowner != 0)
 612              		.loc 1 333 1 is_stmt 0 view .LVU224
 613 0000 4154     		pushq	%r12
 614              		.cfi_def_cfa_offset 16
 615              		.cfi_offset 12, -16
 616 0002 55       		pushq	%rbp
 617              		.cfi_def_cfa_offset 24
 618              		.cfi_offset 6, -24
 619 0003 4889FD   		movq	%rdi, %rbp
 620 0006 53       		pushq	%rbx
 621              		.cfi_def_cfa_offset 32
 622              		.cfi_offset 3, -32
 623 0007 89F3     		movl	%esi, %ebx
 624 0009 4883EC60 		subq	$96, %rsp
 625              		.cfi_def_cfa_offset 128
 334:fltk-1.3.4-1/png/pngrutil.c ****    {
 626              		.loc 1 334 7 view .LVU225
 627 000d 8B973801 		movl	312(%rdi), %edx
 627      0000
 333:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->zowner != 0)
 628              		.loc 1 333 1 view .LVU226
 629 0013 64488B04 		movq	%fs:40, %rax
 629      25280000 
 629      00
 630 001c 48894424 		movq	%rax, 88(%rsp)
 630      58
 631 0021 31C0     		xorl	%eax, %eax
 334:fltk-1.3.4-1/png/pngrutil.c ****    {
 632              		.loc 1 334 4 is_stmt 1 view .LVU227
 633 0023 8B873801 		movl	312(%rdi), %eax
 633      0000
 334:fltk-1.3.4-1/png/pngrutil.c ****    {
 634              		.loc 1 334 7 is_stmt 0 view .LVU228
 635 0029 85D2     		testl	%edx, %edx
 636 002b 0F85A700 		jne	.L58
 636      0000
 637              	.LVL86:
 638              	.L48:
 639              	.LBB156:
 366:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_ZLIB_VERNUM >= 0x1240
 640              		.loc 1 366 7 is_stmt 1 view .LVU229
 386:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_in = 0;
 641              		.loc 1 386 7 view .LVU230
 386:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_in = 0;
 642              		.loc 1 386 32 is_stmt 0 view .LVU231
 643 0031 48C78540 		movq	$0, 320(%rbp)
 643      01000000 
 643      000000
 387:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_out = NULL;
 644              		.loc 1 387 7 is_stmt 1 view .LVU232
 645 003c 488DBD40 		leaq	320(%rbp), %rdi
 645      010000
 387:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_out = NULL;
 646              		.loc 1 387 33 is_stmt 0 view .LVU233
 647 0043 C7854801 		movl	$0, 328(%rbp)
 647      00000000 
 647      0000
 388:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0;
 648              		.loc 1 388 7 is_stmt 1 view .LVU234
 388:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0;
 649              		.loc 1 388 33 is_stmt 0 view .LVU235
 650 004d 48C78558 		movq	$0, 344(%rbp)
 650      01000000 
 650      000000
 389:fltk-1.3.4-1/png/pngrutil.c **** 
 651              		.loc 1 389 7 is_stmt 1 view .LVU236
 389:fltk-1.3.4-1/png/pngrutil.c **** 
 652              		.loc 1 389 34 is_stmt 0 view .LVU237
 653 0058 C7856001 		movl	$0, 352(%rbp)
 653      00000000 
 653      0000
 391:fltk-1.3.4-1/png/pngrutil.c ****       {
 654              		.loc 1 391 7 is_stmt 1 view .LVU238
 391:fltk-1.3.4-1/png/pngrutil.c ****       {
 655              		.loc 1 391 10 is_stmt 0 view .LVU239
 656 0062 F6853001 		testb	$2, 304(%rbp)
 656      000002
 657 0069 7435     		je	.L49
 394:fltk-1.3.4-1/png/pngrutil.c **** #else
 658              		.loc 1 394 10 is_stmt 1 view .LVU240
 394:fltk-1.3.4-1/png/pngrutil.c **** #else
 659              		.loc 1 394 16 is_stmt 0 view .LVU241
 660 006b E8000000 		call	inflateReset@PLT
 660      00
 661              	.LVL87:
 412:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zowner = owner;
 662              		.loc 1 412 7 is_stmt 1 view .LVU242
 412:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zowner = owner;
 663              		.loc 1 412 10 is_stmt 0 view .LVU243
 664 0070 85C0     		testl	%eax, %eax
 665 0072 754C     		jne	.L51
 666              	.LVL88:
 667              	.L50:
 413:fltk-1.3.4-1/png/pngrutil.c **** 
 668              		.loc 1 413 10 is_stmt 1 view .LVU244
 413:fltk-1.3.4-1/png/pngrutil.c **** 
 669              		.loc 1 413 26 is_stmt 0 view .LVU245
 670 0074 899D3801 		movl	%ebx, 312(%rbp)
 670      0000
 671 007a 31C0     		xorl	%eax, %eax
 672              	.L47:
 413:fltk-1.3.4-1/png/pngrutil.c **** 
 673              		.loc 1 413 26 view .LVU246
 674              	.LBE156:
 424:fltk-1.3.4-1/png/pngrutil.c **** 
 675              		.loc 1 424 1 view .LVU247
 676 007c 488B4C24 		movq	88(%rsp), %rcx
 676      58
 677 0081 6448330C 		xorq	%fs:40, %rcx
 677      25280000 
 677      00
 678 008a 0F858600 		jne	.L59
 678      0000
 679 0090 4883C460 		addq	$96, %rsp
 680              		.cfi_remember_state
 681              		.cfi_def_cfa_offset 32
 682 0094 5B       		popq	%rbx
 683              		.cfi_def_cfa_offset 24
 684              	.LVL89:
 424:fltk-1.3.4-1/png/pngrutil.c **** 
 685              		.loc 1 424 1 view .LVU248
 686 0095 5D       		popq	%rbp
 687              		.cfi_def_cfa_offset 16
 688              	.LVL90:
 424:fltk-1.3.4-1/png/pngrutil.c **** 
 689              		.loc 1 424 1 view .LVU249
 690 0096 415C     		popq	%r12
 691              		.cfi_def_cfa_offset 8
 692 0098 C3       		ret
 693              	.LVL91:
 694 0099 0F1F8000 		.p2align 4,,10
 694      000000
 695              		.p2align 3
 696              	.L49:
 697              		.cfi_restore_state
 698              	.LBB157:
 403:fltk-1.3.4-1/png/pngrutil.c **** #else
 699              		.loc 1 403 10 is_stmt 1 view .LVU250
 403:fltk-1.3.4-1/png/pngrutil.c **** #else
 700              		.loc 1 403 16 is_stmt 0 view .LVU251
 701 00a0 BA700000 		movl	$112, %edx
 701      00
 702 00a5 488D3500 		leaq	.LC1(%rip), %rsi
 702      000000
 703 00ac E8000000 		call	inflateInit_@PLT
 703      00
 704              	.LVL92:
 408:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->flags |= PNG_FLAG_ZSTREAM_INITIALIZED;
 705              		.loc 1 408 10 is_stmt 1 view .LVU252
 408:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->flags |= PNG_FLAG_ZSTREAM_INITIALIZED;
 706              		.loc 1 408 13 is_stmt 0 view .LVU253
 707 00b1 85C0     		testl	%eax, %eax
 708 00b3 750B     		jne	.L51
 409:fltk-1.3.4-1/png/pngrutil.c ****       }
 709              		.loc 1 409 13 is_stmt 1 view .LVU254
 409:fltk-1.3.4-1/png/pngrutil.c ****       }
 710              		.loc 1 409 28 is_stmt 0 view .LVU255
 711 00b5 838D3001 		orl	$2, 304(%rbp)
 711      000002
 712              	.LVL93:
 412:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zowner = owner;
 713              		.loc 1 412 7 is_stmt 1 view .LVU256
 714 00bc EBB6     		jmp	.L50
 715              	.LVL94:
 716 00be 6690     		.p2align 4,,10
 717              		.p2align 3
 718              	.L51:
 416:fltk-1.3.4-1/png/pngrutil.c **** 
 719              		.loc 1 416 10 view .LVU257
 720 00c0 89C6     		movl	%eax, %esi
 721 00c2 4889EF   		movq	%rbp, %rdi
 722 00c5 8944240C 		movl	%eax, 12(%rsp)
 723 00c9 E8000000 		call	png_zstream_error@PLT
 723      00
 724              	.LVL95:
 416:fltk-1.3.4-1/png/pngrutil.c **** 
 725              		.loc 1 416 10 is_stmt 0 view .LVU258
 726 00ce 8B44240C 		movl	12(%rsp), %eax
 418:fltk-1.3.4-1/png/pngrutil.c ****    }
 727              		.loc 1 418 7 is_stmt 1 view .LVU259
 418:fltk-1.3.4-1/png/pngrutil.c ****    }
 728              		.loc 1 418 14 is_stmt 0 view .LVU260
 729 00d2 EBA8     		jmp	.L47
 730              	.LVL96:
 731              		.p2align 4,,10
 732 00d4 0F1F4000 		.p2align 3
 733              	.L58:
 418:fltk-1.3.4-1/png/pngrutil.c ****    }
 734              		.loc 1 418 14 view .LVU261
 735              	.LBE157:
 736              	.LBB158:
 343:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_LIBPNG_BUILD_BASE_TYPE >= PNG_LIBPNG_BUILD_RC
 737              		.loc 1 343 13 view .LVU262
 738 00d8 4C8D6424 		leaq	16(%rsp), %r12
 738      10
 739 00dd 488D0D00 		leaq	.LC0(%rip), %rcx
 739      000000
 740 00e4 BA040000 		movl	$4, %edx
 740      00
 741 00e9 BE400000 		movl	$64, %esi
 741      00
 742 00ee 4C89E7   		movq	%r12, %rdi
 743              	.LVL97:
 343:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_LIBPNG_BUILD_BASE_TYPE >= PNG_LIBPNG_BUILD_RC
 744              		.loc 1 343 13 view .LVU263
 745 00f1 0FC8     		bswap	%eax
 336:fltk-1.3.4-1/png/pngrutil.c **** 
 746              		.loc 1 336 7 is_stmt 1 view .LVU264
 338:fltk-1.3.4-1/png/pngrutil.c ****       /* So the message that results is "<chunk> using zstream"; this is an
 747              		.loc 1 338 7 view .LVU265
 748 00f3 89442410 		movl	%eax, 16(%rsp)
 343:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_LIBPNG_BUILD_BASE_TYPE >= PNG_LIBPNG_BUILD_RC
 749              		.loc 1 343 7 view .LVU266
 343:fltk-1.3.4-1/png/pngrutil.c **** #if PNG_LIBPNG_BUILD_BASE_TYPE >= PNG_LIBPNG_BUILD_RC
 750              		.loc 1 343 13 is_stmt 0 view .LVU267
 751 00f7 E8000000 		call	png_safecat@PLT
 751      00
 752              	.LVL98:
 345:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zowner = 0;
 753              		.loc 1 345 7 is_stmt 1 view .LVU268
 754 00fc 4C89E6   		movq	%r12, %rsi
 755 00ff 4889EF   		movq	%rbp, %rdi
 756 0102 E8000000 		call	png_chunk_warning@PLT
 756      00
 757              	.LVL99:
 346:fltk-1.3.4-1/png/pngrutil.c **** #else
 758              		.loc 1 346 7 view .LVU269
 346:fltk-1.3.4-1/png/pngrutil.c **** #else
 759              		.loc 1 346 23 is_stmt 0 view .LVU270
 760 0107 C7853801 		movl	$0, 312(%rbp)
 760      00000000 
 760      0000
 761 0111 E91BFFFF 		jmp	.L48
 761      FF
 762              	.L59:
 346:fltk-1.3.4-1/png/pngrutil.c **** #else
 763              		.loc 1 346 23 view .LVU271
 764              	.LBE158:
 424:fltk-1.3.4-1/png/pngrutil.c **** 
 765              		.loc 1 424 1 view .LVU272
 766 0116 E8000000 		call	__stack_chk_fail@PLT
 766      00
 767              	.LVL100:
 768              		.cfi_endproc
 769              	.LFE52:
 771              		.section	.rodata.png_read_buffer.str1.8,"aMS",@progbits,1
 772              		.align 8
 773              	.LC2:
 774 0000 696E7375 		.string	"insufficient memory to read chunk"
 774      66666963 
 774      69656E74 
 774      206D656D 
 774      6F727920 
 775              		.section	.text.png_read_buffer,"ax",@progbits
 776              		.p2align 4
 778              	png_read_buffer:
 779              	.LVL101:
 780              	.LFB51:
 290:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer = png_ptr->read_buffer;
 781              		.loc 1 290 1 is_stmt 1 view -0
 782              		.cfi_startproc
 290:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer = png_ptr->read_buffer;
 783              		.loc 1 290 1 is_stmt 0 view .LVU274
 784 0000 4154     		pushq	%r12
 785              		.cfi_def_cfa_offset 16
 786              		.cfi_offset 12, -16
 787 0002 4189D4   		movl	%edx, %r12d
 788 0005 55       		pushq	%rbp
 789              		.cfi_def_cfa_offset 24
 790              		.cfi_offset 6, -24
 791 0006 4889FD   		movq	%rdi, %rbp
 291:fltk-1.3.4-1/png/pngrutil.c **** 
 792              		.loc 1 291 4 is_stmt 1 view .LVU275
 290:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer = png_ptr->read_buffer;
 793              		.loc 1 290 1 is_stmt 0 view .LVU276
 794 0009 53       		pushq	%rbx
 795              		.cfi_def_cfa_offset 32
 796              		.cfi_offset 3, -32
 797 000a 4889F3   		movq	%rsi, %rbx
 798 000d 4883EC10 		subq	$16, %rsp
 799              		.cfi_def_cfa_offset 48
 291:fltk-1.3.4-1/png/pngrutil.c **** 
 800              		.loc 1 291 14 view .LVU277
 801 0011 488B8798 		movq	1176(%rdi), %rax
 801      040000
 802              	.LVL102:
 293:fltk-1.3.4-1/png/pngrutil.c ****    {
 803              		.loc 1 293 4 is_stmt 1 view .LVU278
 293:fltk-1.3.4-1/png/pngrutil.c ****    {
 804              		.loc 1 293 7 is_stmt 0 view .LVU279
 805 0018 4885C0   		testq	%rax, %rax
 806 001b 7431     		je	.L61
 293:fltk-1.3.4-1/png/pngrutil.c ****    {
 807              		.loc 1 293 23 discriminator 1 view .LVU280
 808 001d 4839B7A0 		cmpq	%rsi, 1184(%rdi)
 808      040000
 809 0024 720A     		jb	.L72
 810              	.LVL103:
 811              	.L60:
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 812              		.loc 1 323 1 view .LVU281
 813 0026 4883C410 		addq	$16, %rsp
 814              		.cfi_remember_state
 815              		.cfi_def_cfa_offset 32
 816 002a 5B       		popq	%rbx
 817              		.cfi_def_cfa_offset 24
 818              	.LVL104:
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 819              		.loc 1 323 1 view .LVU282
 820 002b 5D       		popq	%rbp
 821              		.cfi_def_cfa_offset 16
 822              	.LVL105:
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 823              		.loc 1 323 1 view .LVU283
 824 002c 415C     		popq	%r12
 825              		.cfi_def_cfa_offset 8
 826              	.LVL106:
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 827              		.loc 1 323 1 view .LVU284
 828 002e C3       		ret
 829              	.LVL107:
 830 002f 90       		.p2align 4,,10
 831              		.p2align 3
 832              	.L72:
 833              		.cfi_restore_state
 295:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer = NULL;
 834              		.loc 1 295 7 is_stmt 1 view .LVU285
 295:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer = NULL;
 835              		.loc 1 295 28 is_stmt 0 view .LVU286
 836 0030 48C78798 		movq	$0, 1176(%rdi)
 836      04000000 
 836      000000
 296:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer_size = 0;
 837              		.loc 1 296 7 is_stmt 1 view .LVU287
 297:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, buffer);
 838              		.loc 1 297 7 view .LVU288
 298:fltk-1.3.4-1/png/pngrutil.c ****       buffer = NULL;
 839              		.loc 1 298 7 is_stmt 0 view .LVU289
 840 003b 4889C6   		movq	%rax, %rsi
 297:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, buffer);
 841              		.loc 1 297 33 view .LVU290
 842 003e 48C787A0 		movq	$0, 1184(%rdi)
 842      04000000 
 842      000000
 298:fltk-1.3.4-1/png/pngrutil.c ****       buffer = NULL;
 843              		.loc 1 298 7 is_stmt 1 view .LVU291
 844 0049 E8000000 		call	png_free@PLT
 844      00
 845              	.LVL108:
 299:fltk-1.3.4-1/png/pngrutil.c ****    }
 846              		.loc 1 299 7 view .LVU292
 302:fltk-1.3.4-1/png/pngrutil.c ****    {
 847              		.loc 1 302 4 view .LVU293
 848              	.L61:
 304:fltk-1.3.4-1/png/pngrutil.c **** 
 849              		.loc 1 304 7 view .LVU294
 304:fltk-1.3.4-1/png/pngrutil.c **** 
 850              		.loc 1 304 16 is_stmt 0 view .LVU295
 851 004e 4889DE   		movq	%rbx, %rsi
 852 0051 4889EF   		movq	%rbp, %rdi
 853 0054 E8000000 		call	png_malloc_base@PLT
 853      00
 854              	.LVL109:
 306:fltk-1.3.4-1/png/pngrutil.c ****       {
 855              		.loc 1 306 7 is_stmt 1 view .LVU296
 306:fltk-1.3.4-1/png/pngrutil.c ****       {
 856              		.loc 1 306 10 is_stmt 0 view .LVU297
 857 0059 4885C0   		testq	%rax, %rax
 858 005c 7417     		je	.L63
 308:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->read_buffer_size = new_size;
 859              		.loc 1 308 10 is_stmt 1 view .LVU298
 309:fltk-1.3.4-1/png/pngrutil.c ****       }
 860              		.loc 1 309 36 is_stmt 0 view .LVU299
 861 005e 48899DA0 		movq	%rbx, 1184(%rbp)
 861      040000
 308:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->read_buffer_size = new_size;
 862              		.loc 1 308 31 view .LVU300
 863 0065 48898598 		movq	%rax, 1176(%rbp)
 863      040000
 309:fltk-1.3.4-1/png/pngrutil.c ****       }
 864              		.loc 1 309 10 is_stmt 1 view .LVU301
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 865              		.loc 1 323 1 is_stmt 0 view .LVU302
 866 006c 4883C410 		addq	$16, %rsp
 867              		.cfi_remember_state
 868              		.cfi_def_cfa_offset 32
 869 0070 5B       		popq	%rbx
 870              		.cfi_def_cfa_offset 24
 871              	.LVL110:
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 872              		.loc 1 323 1 view .LVU303
 873 0071 5D       		popq	%rbp
 874              		.cfi_def_cfa_offset 16
 875              	.LVL111:
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 876              		.loc 1 323 1 view .LVU304
 877 0072 415C     		popq	%r12
 878              		.cfi_def_cfa_offset 8
 879              	.LVL112:
 323:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP|iTXt|pCAL|sCAL|sPLT|tEXt|zTXt|SEQUENTIAL_READ */
 880              		.loc 1 323 1 view .LVU305
 881 0074 C3       		ret
 882              	.LVL113:
 883              	.L63:
 884              		.cfi_restore_state
 312:fltk-1.3.4-1/png/pngrutil.c ****       {
 885              		.loc 1 312 12 is_stmt 1 view .LVU306
 312:fltk-1.3.4-1/png/pngrutil.c ****       {
 886              		.loc 1 312 15 is_stmt 0 view .LVU307
 887 0075 4183FC02 		cmpl	$2, %r12d
 888 0079 74AB     		je	.L60
 889 007b 48894424 		movq	%rax, 8(%rsp)
 889      08
 890              	.LVL114:
 891              	.LBB161:
 892              	.LBI161:
 289:fltk-1.3.4-1/png/pngrutil.c **** {
 893              		.loc 1 289 1 is_stmt 1 view .LVU308
 894              	.LBB162:
 314:fltk-1.3.4-1/png/pngrutil.c ****              png_chunk_warning(png_ptr, "insufficient memory to read chunk");
 895              		.loc 1 314 10 view .LVU309
 315:fltk-1.3.4-1/png/pngrutil.c **** 
 896              		.loc 1 315 14 is_stmt 0 view .LVU310
 897 0080 488D3500 		leaq	.LC2(%rip), %rsi
 897      000000
 898 0087 4889EF   		movq	%rbp, %rdi
 314:fltk-1.3.4-1/png/pngrutil.c ****              png_chunk_warning(png_ptr, "insufficient memory to read chunk");
 899              		.loc 1 314 13 view .LVU311
 900 008a 4585E4   		testl	%r12d, %r12d
 901 008d 740C     		je	.L64
 902              	.LVL115:
 315:fltk-1.3.4-1/png/pngrutil.c **** 
 903              		.loc 1 315 14 is_stmt 1 view .LVU312
 904 008f E8000000 		call	png_chunk_warning@PLT
 904      00
 905              	.LVL116:
 322:fltk-1.3.4-1/png/pngrutil.c **** }
 906              		.loc 1 322 4 view .LVU313
 322:fltk-1.3.4-1/png/pngrutil.c **** }
 907              		.loc 1 322 4 is_stmt 0 view .LVU314
 908 0094 488B4424 		movq	8(%rsp), %rax
 908      08
 909 0099 EB8B     		jmp	.L60
 910              	.LVL117:
 911              	.L64:
 318:fltk-1.3.4-1/png/pngrutil.c ****       }
 912              		.loc 1 318 14 is_stmt 1 view .LVU315
 913 009b E8000000 		call	png_chunk_error@PLT
 913      00
 914              	.LVL118:
 318:fltk-1.3.4-1/png/pngrutil.c ****       }
 915              		.loc 1 318 14 is_stmt 0 view .LVU316
 916              	.LBE162:
 917              	.LBE161:
 918              		.cfi_endproc
 919              	.LFE51:
 921              		.section	.text.png_crc_read.part.0,"ax",@progbits
 922              		.p2align 4
 924              	png_crc_read.part.0:
 925              	.LVL119:
 926              	.LFB94:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 927              		.loc 1 187 1 is_stmt 1 view -0
 928              		.cfi_startproc
 192:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf, length);
 929              		.loc 1 192 4 view .LVU318
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 930              		.loc 1 187 1 is_stmt 0 view .LVU319
 931 0000 4155     		pushq	%r13
 932              		.cfi_def_cfa_offset 16
 933              		.cfi_offset 13, -16
 192:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf, length);
 934              		.loc 1 192 4 view .LVU320
 935 0002 4189D5   		movl	%edx, %r13d
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 936              		.loc 1 187 1 view .LVU321
 937 0005 4154     		pushq	%r12
 938              		.cfi_def_cfa_offset 24
 939              		.cfi_offset 12, -24
 192:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf, length);
 940              		.loc 1 192 4 view .LVU322
 941 0007 4C89EA   		movq	%r13, %rdx
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 942              		.loc 1 187 1 view .LVU323
 943 000a 4989F4   		movq	%rsi, %r12
 944 000d 55       		pushq	%rbp
 945              		.cfi_def_cfa_offset 32
 946              		.cfi_offset 6, -32
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 947              		.loc 1 187 1 view .LVU324
 948 000e 4889FD   		movq	%rdi, %rbp
 192:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf, length);
 949              		.loc 1 192 4 view .LVU325
 950 0011 E8000000 		call	png_read_data@PLT
 950      00
 951              	.LVL120:
 193:fltk-1.3.4-1/png/pngrutil.c **** }
 952              		.loc 1 193 4 is_stmt 1 view .LVU326
 953 0016 4C89EA   		movq	%r13, %rdx
 954 0019 4C89E6   		movq	%r12, %rsi
 955 001c 4889EF   		movq	%rbp, %rdi
 194:fltk-1.3.4-1/png/pngrutil.c **** 
 956              		.loc 1 194 1 is_stmt 0 view .LVU327
 957 001f 5D       		popq	%rbp
 958              		.cfi_def_cfa_offset 24
 959              	.LVL121:
 194:fltk-1.3.4-1/png/pngrutil.c **** 
 960              		.loc 1 194 1 view .LVU328
 961 0020 415C     		popq	%r12
 962              		.cfi_def_cfa_offset 16
 963              	.LVL122:
 194:fltk-1.3.4-1/png/pngrutil.c **** 
 964              		.loc 1 194 1 view .LVU329
 965 0022 415D     		popq	%r13
 966              		.cfi_def_cfa_offset 8
 967              	.LVL123:
 193:fltk-1.3.4-1/png/pngrutil.c **** }
 968              		.loc 1 193 4 view .LVU330
 969 0024 E9000000 		jmp	png_calculate_crc@PLT
 969      00
 970              	.LVL124:
 193:fltk-1.3.4-1/png/pngrutil.c **** }
 971              		.loc 1 193 4 view .LVU331
 972              		.cfi_endproc
 973              	.LFE94:
 975              		.section	.text.png_inflate_read.part.0.constprop.0,"ax",@progbits
 976              		.p2align 4
 978              	png_inflate_read.part.0.constprop.0:
 979              	.LVL125:
 980              	.LFB102:
 728:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size,
 981              		.loc 1 728 1 is_stmt 1 view -0
 982              		.cfi_startproc
 728:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size,
 983              		.loc 1 728 1 is_stmt 0 view .LVU333
 984 0000 4157     		pushq	%r15
 985              		.cfi_def_cfa_offset 16
 986              		.cfi_offset 15, -16
 987 0002 4989FF   		movq	%rdi, %r15
 988 0005 4156     		pushq	%r14
 989              		.cfi_def_cfa_offset 24
 990              		.cfi_offset 14, -24
 991 0007 4989D6   		movq	%rdx, %r14
 992 000a 4155     		pushq	%r13
 993              		.cfi_def_cfa_offset 32
 994              		.cfi_offset 13, -32
 995 000c 41BD0004 		movl	$1024, %r13d
 995      0000
 996 0012 4154     		pushq	%r12
 997              		.cfi_def_cfa_offset 40
 998              		.cfi_offset 12, -40
 999 0014 4989F4   		movq	%rsi, %r12
 1000 0017 55       		pushq	%rbp
 1001              		.cfi_def_cfa_offset 48
 1002              		.cfi_offset 6, -48
 1003 0018 488DAF40 		leaq	320(%rdi), %rbp
 1003      010000
 1004 001f 53       		pushq	%rbx
 1005              		.cfi_def_cfa_offset 56
 1006              		.cfi_offset 3, -56
 1007 0020 4889CB   		movq	%rcx, %rbx
 1008 0023 4883EC18 		subq	$24, %rsp
 1009              		.cfi_def_cfa_offset 80
 728:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size,
 1010              		.loc 1 728 1 view .LVU334
 1011 0027 44894424 		movl	%r8d, 12(%rsp)
 1011      0C
 1012              	.LVL126:
 1013 002c 0F1F4000 		.p2align 4,,10
 1014              		.p2align 3
 1015              	.L76:
 1016              	.LBB163:
 740:fltk-1.3.4-1/png/pngrutil.c ****       {
 1017              		.loc 1 740 7 is_stmt 1 view .LVU335
 742:fltk-1.3.4-1/png/pngrutil.c ****          {
 1018              		.loc 1 742 10 view .LVU336
 742:fltk-1.3.4-1/png/pngrutil.c ****          {
 1019              		.loc 1 742 13 is_stmt 0 view .LVU337
 1020 0030 418B8F48 		movl	328(%r15), %ecx
 1020      010000
 1021 0037 85C9     		testl	%ecx, %ecx
 1022 0039 7527     		jne	.L77
 744:fltk-1.3.4-1/png/pngrutil.c ****                read_size = (uInt)*chunk_bytes;
 1023              		.loc 1 744 13 is_stmt 1 view .LVU338
 744:fltk-1.3.4-1/png/pngrutil.c ****                read_size = (uInt)*chunk_bytes;
 1024              		.loc 1 744 29 is_stmt 0 view .LVU339
 1025 003b 418B06   		movl	(%r14), %eax
 1026 003e 4139C5   		cmpl	%eax, %r13d
 1027 0041 440F47E8 		cmova	%eax, %r13d
 1028              	.LVL127:
 746:fltk-1.3.4-1/png/pngrutil.c **** 
 1029              		.loc 1 746 13 is_stmt 1 view .LVU340
 746:fltk-1.3.4-1/png/pngrutil.c **** 
 1030              		.loc 1 746 26 is_stmt 0 view .LVU341
 1031 0045 4429E8   		subl	%r13d, %eax
 1032 0048 418906   		movl	%eax, (%r14)
 748:fltk-1.3.4-1/png/pngrutil.c ****                png_crc_read(png_ptr, read_buffer, read_size);
 1033              		.loc 1 748 13 is_stmt 1 view .LVU342
 748:fltk-1.3.4-1/png/pngrutil.c ****                png_crc_read(png_ptr, read_buffer, read_size);
 1034              		.loc 1 748 16 is_stmt 0 view .LVU343
 1035 004b 4585ED   		testl	%r13d, %r13d
 1036 004e 0F85BC00 		jne	.L92
 1036      0000
 1037              	.L78:
 751:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->zstream.avail_in = read_size;
 1038              		.loc 1 751 13 is_stmt 1 view .LVU344
 751:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->zstream.avail_in = read_size;
 1039              		.loc 1 751 38 is_stmt 0 view .LVU345
 1040 0054 4D89A740 		movq	%r12, 320(%r15)
 1040      010000
 752:fltk-1.3.4-1/png/pngrutil.c ****          }
 1041              		.loc 1 752 13 is_stmt 1 view .LVU346
 752:fltk-1.3.4-1/png/pngrutil.c ****          }
 1042              		.loc 1 752 39 is_stmt 0 view .LVU347
 1043 005b 4589AF48 		movl	%r13d, 328(%r15)
 1043      010000
 1044              	.L77:
 755:fltk-1.3.4-1/png/pngrutil.c ****          {
 1045              		.loc 1 755 10 is_stmt 1 view .LVU348
 755:fltk-1.3.4-1/png/pngrutil.c ****          {
 1046              		.loc 1 755 13 is_stmt 0 view .LVU349
 1047 0062 418B9760 		movl	352(%r15), %edx
 1047      010000
 1048 0069 85D2     		testl	%edx, %edx
 1049 006b 752C     		jne	.L79
 1050              	.LBB164:
 757:fltk-1.3.4-1/png/pngrutil.c ****             if (avail > *out_size)
 1051              		.loc 1 757 13 is_stmt 1 view .LVU350
 1052              	.LVL128:
 758:fltk-1.3.4-1/png/pngrutil.c ****                avail = (uInt)*out_size;
 1053              		.loc 1 758 13 view .LVU351
 758:fltk-1.3.4-1/png/pngrutil.c ****                avail = (uInt)*out_size;
 1054              		.loc 1 758 25 is_stmt 0 view .LVU352
 1055 006d 488B03   		movq	(%rbx), %rax
 758:fltk-1.3.4-1/png/pngrutil.c ****                avail = (uInt)*out_size;
 1056              		.loc 1 758 16 view .LVU353
 1057 0070 BAFEFFFF 		movl	$4294967294, %edx
 1057      FF
 1058 0075 31C9     		xorl	%ecx, %ecx
 1059 0077 4839D0   		cmpq	%rdx, %rax
 1060 007a 7613     		jbe	.L81
 1061 007c 48BA0100 		movabsq	$-4294967295, %rdx
 1061      0000FFFF 
 1061      FFFF
 1062 0086 488D0C10 		leaq	(%rax,%rdx), %rcx
 1063 008a B8FFFFFF 		movl	$-1, %eax
 1063      FF
 1064              	.L81:
 1065              	.LVL129:
 760:fltk-1.3.4-1/png/pngrutil.c **** 
 1066              		.loc 1 760 13 is_stmt 1 view .LVU354
 760:fltk-1.3.4-1/png/pngrutil.c **** 
 1067              		.loc 1 760 23 is_stmt 0 view .LVU355
 1068 008f 48890B   		movq	%rcx, (%rbx)
 762:fltk-1.3.4-1/png/pngrutil.c ****          }
 1069              		.loc 1 762 13 is_stmt 1 view .LVU356
 762:fltk-1.3.4-1/png/pngrutil.c ****          }
 1070              		.loc 1 762 40 is_stmt 0 view .LVU357
 1071 0092 41898760 		movl	%eax, 352(%r15)
 1071      010000
 1072              	.L79:
 762:fltk-1.3.4-1/png/pngrutil.c ****          }
 1073              		.loc 1 762 40 view .LVU358
 1074              	.LBE164:
 769:fltk-1.3.4-1/png/pngrutil.c ****             *chunk_bytes > 0 ? Z_NO_FLUSH : (finish ? Z_FINISH : Z_SYNC_FLUSH));
 1075              		.loc 1 769 10 is_stmt 1 view .LVU359
 769:fltk-1.3.4-1/png/pngrutil.c ****             *chunk_bytes > 0 ? Z_NO_FLUSH : (finish ? Z_FINISH : Z_SYNC_FLUSH));
 1076              		.loc 1 769 16 is_stmt 0 view .LVU360
 1077 0099 418B06   		movl	(%r14), %eax
 1078 009c 31F6     		xorl	%esi, %esi
 1079 009e 85C0     		testl	%eax, %eax
 1080 00a0 750D     		jne	.L82
 770:fltk-1.3.4-1/png/pngrutil.c ****       }
 1081              		.loc 1 770 64 view .LVU361
 1082 00a2 837C240C 		cmpl	$1, 12(%rsp)
 1082      01
 1083 00a7 19F6     		sbbl	%esi, %esi
 1084 00a9 83E6FE   		andl	$-2, %esi
 1085 00ac 83C604   		addl	$4, %esi
 1086              	.L82:
 769:fltk-1.3.4-1/png/pngrutil.c ****             *chunk_bytes > 0 ? Z_NO_FLUSH : (finish ? Z_FINISH : Z_SYNC_FLUSH));
 1087              		.loc 1 769 16 view .LVU362
 1088 00af 4889EF   		movq	%rbp, %rdi
 1089 00b2 E8000000 		call	inflate@PLT
 1089      00
 1090              	.LVL130:
 772:fltk-1.3.4-1/png/pngrutil.c **** 
 1091              		.loc 1 772 13 is_stmt 1 view .LVU363
 772:fltk-1.3.4-1/png/pngrutil.c **** 
 1092              		.loc 1 772 30 is_stmt 0 view .LVU364
 1093 00b7 488B0B   		movq	(%rbx), %rcx
 772:fltk-1.3.4-1/png/pngrutil.c **** 
 1094              		.loc 1 772 7 view .LVU365
 1095 00ba 85C0     		testl	%eax, %eax
 1096 00bc 756A     		jne	.L93
 772:fltk-1.3.4-1/png/pngrutil.c **** 
 1097              		.loc 1 772 26 view .LVU366
 1098 00be 4885C9   		testq	%rcx, %rcx
 1099 00c1 0F8569FF 		jne	.L76
 1099      FFFF
 772:fltk-1.3.4-1/png/pngrutil.c **** 
 1100              		.loc 1 772 63 view .LVU367
 1101 00c7 418BB760 		movl	352(%r15), %esi
 1101      010000
 772:fltk-1.3.4-1/png/pngrutil.c **** 
 1102              		.loc 1 772 44 view .LVU368
 1103 00ce 85F6     		testl	%esi, %esi
 1104 00d0 0F855AFF 		jne	.L76
 1104      FFFF
 1105              	.L84:
 774:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* Should not be required, but is safe */
 1106              		.loc 1 774 7 is_stmt 1 view .LVU369
 774:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* Should not be required, but is safe */
 1107              		.loc 1 774 17 is_stmt 0 view .LVU370
 1108 00d6 4801F1   		addq	%rsi, %rcx
 778:fltk-1.3.4-1/png/pngrutil.c ****       return ret;
 1109              		.loc 1 778 7 view .LVU371
 1110 00d9 4C89FF   		movq	%r15, %rdi
 1111 00dc 89C6     		movl	%eax, %esi
 1112 00de 8944240C 		movl	%eax, 12(%rsp)
 1113              	.LVL131:
 774:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* Should not be required, but is safe */
 1114              		.loc 1 774 17 view .LVU372
 1115 00e2 48890B   		movq	%rcx, (%rbx)
 775:fltk-1.3.4-1/png/pngrutil.c **** 
 1116              		.loc 1 775 7 is_stmt 1 view .LVU373
 775:fltk-1.3.4-1/png/pngrutil.c **** 
 1117              		.loc 1 775 34 is_stmt 0 view .LVU374
 1118 00e5 41C78760 		movl	$0, 352(%r15)
 1118      01000000 
 1118      000000
 778:fltk-1.3.4-1/png/pngrutil.c ****       return ret;
 1119              		.loc 1 778 7 is_stmt 1 view .LVU375
 1120 00f0 E8000000 		call	png_zstream_error@PLT
 1120      00
 1121              	.LVL132:
 779:fltk-1.3.4-1/png/pngrutil.c ****    }
 1122              		.loc 1 779 7 view .LVU376
 1123              	.LBE163:
 787:fltk-1.3.4-1/png/pngrutil.c **** #endif
 1124              		.loc 1 787 1 is_stmt 0 view .LVU377
 1125 00f5 8B44240C 		movl	12(%rsp), %eax
 1126 00f9 4883C418 		addq	$24, %rsp
 1127              		.cfi_remember_state
 1128              		.cfi_def_cfa_offset 56
 1129 00fd 5B       		popq	%rbx
 1130              		.cfi_def_cfa_offset 48
 1131              	.LVL133:
 787:fltk-1.3.4-1/png/pngrutil.c **** #endif
 1132              		.loc 1 787 1 view .LVU378
 1133 00fe 5D       		popq	%rbp
 1134              		.cfi_def_cfa_offset 40
 1135 00ff 415C     		popq	%r12
 1136              		.cfi_def_cfa_offset 32
 1137              	.LVL134:
 787:fltk-1.3.4-1/png/pngrutil.c **** #endif
 1138              		.loc 1 787 1 view .LVU379
 1139 0101 415D     		popq	%r13
 1140              		.cfi_def_cfa_offset 24
 1141              	.LVL135:
 787:fltk-1.3.4-1/png/pngrutil.c **** #endif
 1142              		.loc 1 787 1 view .LVU380
 1143 0103 415E     		popq	%r14
 1144              		.cfi_def_cfa_offset 16
 1145              	.LVL136:
 787:fltk-1.3.4-1/png/pngrutil.c **** #endif
 1146              		.loc 1 787 1 view .LVU381
 1147 0105 415F     		popq	%r15
 1148              		.cfi_def_cfa_offset 8
 1149              	.LVL137:
 787:fltk-1.3.4-1/png/pngrutil.c **** #endif
 1150              		.loc 1 787 1 view .LVU382
 1151 0107 C3       		ret
 1152              	.LVL138:
 1153 0108 0F1F8400 		.p2align 4,,10
 1153      00000000 
 1154              		.p2align 3
 1155              	.L92:
 1156              		.cfi_restore_state
 1157              	.LBB167:
 749:fltk-1.3.4-1/png/pngrutil.c **** 
 1158              		.loc 1 749 16 is_stmt 1 view .LVU383
 1159              	.LBB165:
 1160              	.LBI165:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 1161              		.loc 1 187 1 view .LVU384
 1162              	.LBB166:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 1163              		.loc 1 189 4 view .LVU385
 1164 0110 4489EA   		movl	%r13d, %edx
 1165 0113 4C89E6   		movq	%r12, %rsi
 1166 0116 4C89FF   		movq	%r15, %rdi
 1167 0119 E8000000 		call	png_crc_read.part.0
 1167      00
 1168              	.LVL139:
 1169 011e E931FFFF 		jmp	.L78
 1169      FF
 1170              	.LVL140:
 1171              		.p2align 4,,10
 1172 0123 0F1F4400 		.p2align 3
 1172      00
 1173              	.L93:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 1174              		.loc 1 189 4 is_stmt 0 view .LVU386
 1175 0128 418BB760 		movl	352(%r15), %esi
 1175      010000
 1176 012f EBA5     		jmp	.L84
 1177              	.LBE166:
 1178              	.LBE165:
 1179              	.LBE167:
 1180              		.cfi_endproc
 1181              	.LFE102:
 1183              		.section	.rodata.png_inflate.constprop.0.str1.1,"aMS",@progbits,1
 1184              	.LC3:
 1185 0000 7A737472 		.string	"zstream unclaimed"
 1185      65616D20 
 1185      756E636C 
 1185      61696D65 
 1185      6400
 1186              		.section	.text.png_inflate.constprop.0,"ax",@progbits
 1187              		.p2align 4
 1189              	png_inflate.constprop.0:
 1190              	.LVL141:
 1191              	.LFB100:
 439:fltk-1.3.4-1/png/pngrutil.c ****     /* INPUT: */ png_const_bytep input, png_uint_32p input_size_ptr,
 1192              		.loc 1 439 1 is_stmt 1 view -0
 1193              		.cfi_startproc
 439:fltk-1.3.4-1/png/pngrutil.c ****     /* INPUT: */ png_const_bytep input, png_uint_32p input_size_ptr,
 1194              		.loc 1 439 1 is_stmt 0 view .LVU388
 1195 0000 4157     		pushq	%r15
 1196              		.cfi_def_cfa_offset 16
 1197              		.cfi_offset 15, -16
 1198 0002 4989FF   		movq	%rdi, %r15
 1199 0005 4156     		pushq	%r14
 1200              		.cfi_def_cfa_offset 24
 1201              		.cfi_offset 14, -24
 1202 0007 4155     		pushq	%r13
 1203              		.cfi_def_cfa_offset 32
 1204              		.cfi_offset 13, -32
 1205 0009 4154     		pushq	%r12
 1206              		.cfi_def_cfa_offset 40
 1207              		.cfi_offset 12, -40
 1208 000b 55       		pushq	%rbp
 1209              		.cfi_def_cfa_offset 48
 1210              		.cfi_offset 6, -48
 1211 000c 53       		pushq	%rbx
 1212              		.cfi_def_cfa_offset 56
 1213              		.cfi_offset 3, -56
 1214 000d 4881EC38 		subq	$1080, %rsp
 1214      040000
 1215              		.cfi_def_cfa_offset 1136
 439:fltk-1.3.4-1/png/pngrutil.c ****     /* INPUT: */ png_const_bytep input, png_uint_32p input_size_ptr,
 1216              		.loc 1 439 1 view .LVU389
 1217 0014 48894C24 		movq	%rcx, 16(%rsp)
 1217      10
 1218 0019 4C894C24 		movq	%r9, 24(%rsp)
 1218      18
 1219 001e 64488B04 		movq	%fs:40, %rax
 1219      25280000 
 1219      00
 1220 0027 48898424 		movq	%rax, 1064(%rsp)
 1220      28040000 
 1221 002f 31C0     		xorl	%eax, %eax
 1222              	.LVL142:
 443:fltk-1.3.4-1/png/pngrutil.c ****    {
 1223              		.loc 1 443 4 is_stmt 1 view .LVU390
 443:fltk-1.3.4-1/png/pngrutil.c ****    {
 1224              		.loc 1 443 7 is_stmt 0 view .LVU391
 1225 0031 39B73801 		cmpl	%esi, 312(%rdi)
 1225      0000
 1226 0037 0F853001 		jne	.L95
 1226      0000
 1227              	.LBB168:
 446:fltk-1.3.4-1/png/pngrutil.c ****       png_uint_32 avail_in = *input_size_ptr;
 1228              		.loc 1 446 24 view .LVU392
 1229 003d 498B19   		movq	(%r9), %rbx
 447:fltk-1.3.4-1/png/pngrutil.c **** 
 1230              		.loc 1 447 19 view .LVU393
 1231 0040 8B09     		movl	(%rcx), %ecx
 1232              	.LVL143:
 458:fltk-1.3.4-1/png/pngrutil.c ****       /* avail_in and avail_out are set below from 'size' */
 1233              		.loc 1 458 32 view .LVU394
 1234 0042 48899740 		movq	%rdx, 320(%rdi)
 1234      010000
 1235 0049 4C89C5   		movq	%r8, %rbp
 445:fltk-1.3.4-1/png/pngrutil.c ****       png_alloc_size_t avail_out = *output_size_ptr;
 1236              		.loc 1 445 7 is_stmt 1 view .LVU395
 446:fltk-1.3.4-1/png/pngrutil.c ****       png_uint_32 avail_in = *input_size_ptr;
 1237              		.loc 1 446 7 view .LVU396
 1238              	.LVL144:
 447:fltk-1.3.4-1/png/pngrutil.c **** 
 1239              		.loc 1 447 7 view .LVU397
 458:fltk-1.3.4-1/png/pngrutil.c ****       /* avail_in and avail_out are set below from 'size' */
 1240              		.loc 1 458 7 view .LVU398
 460:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0;
 1241              		.loc 1 460 7 view .LVU399
 461:fltk-1.3.4-1/png/pngrutil.c **** 
 1242              		.loc 1 461 7 view .LVU400
 466:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = output;
 1243              		.loc 1 466 7 view .LVU401
 466:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = output;
 1244              		.loc 1 466 10 is_stmt 0 view .LVU402
 1245 004c 4D85C0   		testq	%r8, %r8
 1246 004f 7407     		je	.L96
 467:fltk-1.3.4-1/png/pngrutil.c **** 
 1247              		.loc 1 467 10 is_stmt 1 view .LVU403
 467:fltk-1.3.4-1/png/pngrutil.c **** 
 1248              		.loc 1 467 36 is_stmt 0 view .LVU404
 1249 0051 4D898758 		movq	%r8, 344(%r15)
 1249      010000
 1250              	.LVL145:
 1251              	.L96:
 467:fltk-1.3.4-1/png/pngrutil.c **** 
 1252              		.loc 1 467 36 view .LVU405
 1253 0058 4883FD01 		cmpq	$1, %rbp
 1254              	.LBB169:
 502:fltk-1.3.4-1/png/pngrutil.c ****             if ((sizeof local_buffer) < avail)
 1255              		.loc 1 502 39 view .LVU406
 1256 005c 488D7C24 		leaq	32(%rsp), %rdi
 1256      20
 1257              	.LVL146:
 502:fltk-1.3.4-1/png/pngrutil.c ****             if ((sizeof local_buffer) < avail)
 1258              		.loc 1 502 39 view .LVU407
 1259 0061 4D8DB740 		leaq	320(%r15), %r14
 1259      010000
 1260 0068 4519ED   		sbbl	%r13d, %r13d
 1261 006b 48897C24 		movq	%rdi, 8(%rsp)
 1261      08
 507:fltk-1.3.4-1/png/pngrutil.c ****             avail = (uInt)avail_out; /* safe: < ZLIB_IO_MAX */
 1262              		.loc 1 507 24 view .LVU408
 1263 0070 31C0     		xorl	%eax, %eax
 1264 0072 31D2     		xorl	%edx, %edx
 1265              	.LVL147:
 507:fltk-1.3.4-1/png/pngrutil.c ****             avail = (uInt)avail_out; /* safe: < ZLIB_IO_MAX */
 1266              		.loc 1 507 24 view .LVU409
 1267 0074 4181E501 		andl	$1025, %r13d
 1267      040000
 1268 007b 458D65FF 		leal	-1(%r13), %r12d
 1269 007f 4D89E5   		movq	%r12, %r13
 1270 0082 EB38     		jmp	.L101
 1271              	.LVL148:
 1272              		.p2align 4,,10
 1273 0084 0F1F4000 		.p2align 3
 1274              	.L120:
 508:fltk-1.3.4-1/png/pngrutil.c **** 
 1275              		.loc 1 508 13 is_stmt 1 view .LVU410
 508:fltk-1.3.4-1/png/pngrutil.c **** 
 1276              		.loc 1 508 19 is_stmt 0 view .LVU411
 1277 0088 89DA     		movl	%ebx, %edx
 1278              	.LVL149:
 508:fltk-1.3.4-1/png/pngrutil.c **** 
 1279              		.loc 1 508 19 view .LVU412
 1280 008a 4889D8   		movq	%rbx, %rax
 1281              	.L98:
 510:fltk-1.3.4-1/png/pngrutil.c ****          avail_out -= avail;
 1282              		.loc 1 510 10 is_stmt 1 view .LVU413
 520:fltk-1.3.4-1/png/pngrutil.c ****       } while (ret == Z_OK);
 1283              		.loc 1 520 33 is_stmt 0 view .LVU414
 1284 008d 31F6     		xorl	%esi, %esi
 510:fltk-1.3.4-1/png/pngrutil.c ****          avail_out -= avail;
 1285              		.loc 1 510 37 view .LVU415
 1286 008f 41899760 		movl	%edx, 352(%r15)
 1286      010000
 511:fltk-1.3.4-1/png/pngrutil.c **** 
 1287              		.loc 1 511 10 is_stmt 1 view .LVU416
 1288              	.LVL150:
 519:fltk-1.3.4-1/png/pngrutil.c ****              (finish ? Z_FINISH : Z_SYNC_FLUSH));
 1289              		.loc 1 519 10 view .LVU417
 520:fltk-1.3.4-1/png/pngrutil.c ****       } while (ret == Z_OK);
 1290              		.loc 1 520 33 is_stmt 0 view .LVU418
 1291 0096 4829C3   		subq	%rax, %rbx
 1292              	.LVL151:
 519:fltk-1.3.4-1/png/pngrutil.c ****              (finish ? Z_FINISH : Z_SYNC_FLUSH));
 1293              		.loc 1 519 16 view .LVU419
 1294 0099 4C89F7   		movq	%r14, %rdi
 520:fltk-1.3.4-1/png/pngrutil.c ****       } while (ret == Z_OK);
 1295              		.loc 1 520 33 view .LVU420
 1296 009c 400F94C6 		sete	%sil
 1297 00a0 C1E602   		sall	$2, %esi
 519:fltk-1.3.4-1/png/pngrutil.c ****              (finish ? Z_FINISH : Z_SYNC_FLUSH));
 1298              		.loc 1 519 16 view .LVU421
 1299 00a3 E8000000 		call	inflate@PLT
 1299      00
 1300              	.LVL152:
 519:fltk-1.3.4-1/png/pngrutil.c ****              (finish ? Z_FINISH : Z_SYNC_FLUSH));
 1301              		.loc 1 519 16 view .LVU422
 1302              	.LBE169:
 521:fltk-1.3.4-1/png/pngrutil.c **** 
 1303              		.loc 1 521 15 is_stmt 1 view .LVU423
 521:fltk-1.3.4-1/png/pngrutil.c **** 
 1304              		.loc 1 521 7 is_stmt 0 view .LVU424
 1305 00a8 85C0     		testl	%eax, %eax
 1306 00aa 7544     		jne	.L100
 1307 00ac 418B9748 		movl	328(%r15), %edx
 1307      010000
 1308 00b3 418B8760 		movl	352(%r15), %eax
 1308      010000
 1309              	.LVL153:
 1310              	.LBB170:
 489:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail;
 1311              		.loc 1 489 19 view .LVU425
 1312 00ba 31C9     		xorl	%ecx, %ecx
 1313              	.LVL154:
 1314              	.L101:
 489:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail;
 1315              		.loc 1 489 19 view .LVU426
 1316              	.LBE170:
 469:fltk-1.3.4-1/png/pngrutil.c ****       {
 1317              		.loc 1 469 7 is_stmt 1 view .LVU427
 1318              	.LBB171:
 471:fltk-1.3.4-1/png/pngrutil.c ****          Byte local_buffer[PNG_INFLATE_BUF_SIZE];
 1319              		.loc 1 471 10 view .LVU428
 472:fltk-1.3.4-1/png/pngrutil.c **** 
 1320              		.loc 1 472 10 view .LVU429
 482:fltk-1.3.4-1/png/pngrutil.c **** 
 1321              		.loc 1 482 10 view .LVU430
 484:fltk-1.3.4-1/png/pngrutil.c **** 
 1322              		.loc 1 484 10 view .LVU431
 486:fltk-1.3.4-1/png/pngrutil.c ****             avail = (uInt)avail_in; /* safe: < than ZLIB_IO_MAX */
 1323              		.loc 1 486 10 view .LVU432
 489:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail;
 1324              		.loc 1 489 10 view .LVU433
 490:fltk-1.3.4-1/png/pngrutil.c **** 
 1325              		.loc 1 490 10 view .LVU434
 482:fltk-1.3.4-1/png/pngrutil.c **** 
 1326              		.loc 1 482 19 is_stmt 0 view .LVU435
 1327 00bc 01D1     		addl	%edx, %ecx
 1328              	.LVL155:
 493:fltk-1.3.4-1/png/pngrutil.c **** 
 1329              		.loc 1 493 20 view .LVU436
 1330 00be 4801C3   		addq	%rax, %rbx
 1331              	.LVL156:
 482:fltk-1.3.4-1/png/pngrutil.c **** 
 1332              		.loc 1 482 19 view .LVU437
 1333 00c1 41898F48 		movl	%ecx, 328(%r15)
 1333      010000
 493:fltk-1.3.4-1/png/pngrutil.c **** 
 1334              		.loc 1 493 10 is_stmt 1 view .LVU438
 1335              	.LVL157:
 495:fltk-1.3.4-1/png/pngrutil.c **** 
 1336              		.loc 1 495 10 view .LVU439
 497:fltk-1.3.4-1/png/pngrutil.c ****          {
 1337              		.loc 1 497 10 view .LVU440
 497:fltk-1.3.4-1/png/pngrutil.c ****          {
 1338              		.loc 1 497 13 is_stmt 0 view .LVU441
 1339 00c8 4885ED   		testq	%rbp, %rbp
 1340 00cb 7413     		je	.L119
 1341              	.LVL158:
 1342              	.L97:
 507:fltk-1.3.4-1/png/pngrutil.c ****             avail = (uInt)avail_out; /* safe: < ZLIB_IO_MAX */
 1343              		.loc 1 507 10 is_stmt 1 view .LVU442
 507:fltk-1.3.4-1/png/pngrutil.c ****             avail = (uInt)avail_out; /* safe: < ZLIB_IO_MAX */
 1344              		.loc 1 507 13 is_stmt 0 view .LVU443
 1345 00cd 4C39E3   		cmpq	%r12, %rbx
 1346 00d0 72B6     		jb	.L120
 1347 00d2 4C89E0   		movq	%r12, %rax
 1348 00d5 4489EA   		movl	%r13d, %edx
 1349 00d8 EBB3     		jmp	.L98
 1350              	.LVL159:
 1351 00da 660F1F44 		.p2align 4,,10
 1351      0000
 1352              		.p2align 3
 1353              	.L119:
 502:fltk-1.3.4-1/png/pngrutil.c ****             if ((sizeof local_buffer) < avail)
 1354              		.loc 1 502 13 is_stmt 1 view .LVU444
 502:fltk-1.3.4-1/png/pngrutil.c ****             if ((sizeof local_buffer) < avail)
 1355              		.loc 1 502 39 is_stmt 0 view .LVU445
 1356 00e0 488B4424 		movq	8(%rsp), %rax
 1356      08
 1357 00e5 49898758 		movq	%rax, 344(%r15)
 1357      010000
 503:fltk-1.3.4-1/png/pngrutil.c ****                avail = (sizeof local_buffer);
 1358              		.loc 1 503 13 is_stmt 1 view .LVU446
 504:fltk-1.3.4-1/png/pngrutil.c ****          }
 1359              		.loc 1 504 16 view .LVU447
 1360              	.LVL160:
 504:fltk-1.3.4-1/png/pngrutil.c ****          }
 1361              		.loc 1 504 16 is_stmt 0 view .LVU448
 1362 00ec EBDF     		jmp	.L97
 1363              	.LVL161:
 1364 00ee 6690     		.p2align 4,,10
 1365              		.p2align 3
 1366              	.L100:
 504:fltk-1.3.4-1/png/pngrutil.c ****          }
 1367              		.loc 1 504 16 view .LVU449
 1368              	.LBE171:
 524:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = NULL;
 1369              		.loc 1 524 7 is_stmt 1 view .LVU450
 524:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = NULL;
 1370              		.loc 1 524 10 is_stmt 0 view .LVU451
 1371 00f0 4885ED   		testq	%rbp, %rbp
 1372 00f3 746B     		je	.L121
 1373              	.L102:
 528:fltk-1.3.4-1/png/pngrutil.c ****       avail_out += png_ptr->zstream.avail_out;
 1374              		.loc 1 528 7 is_stmt 1 view .LVU452
 529:fltk-1.3.4-1/png/pngrutil.c **** 
 1375              		.loc 1 529 36 is_stmt 0 view .LVU453
 1376 00f5 418B9760 		movl	352(%r15), %edx
 1376      010000
 528:fltk-1.3.4-1/png/pngrutil.c ****       avail_out += png_ptr->zstream.avail_out;
 1377              		.loc 1 528 35 view .LVU454
 1378 00fc 418B8F48 		movl	328(%r15), %ecx
 1378      010000
 1379              	.LVL162:
 529:fltk-1.3.4-1/png/pngrutil.c **** 
 1380              		.loc 1 529 7 is_stmt 1 view .LVU455
 534:fltk-1.3.4-1/png/pngrutil.c ****          *output_size_ptr -= avail_out;
 1381              		.loc 1 534 7 view .LVU456
 534:fltk-1.3.4-1/png/pngrutil.c ****          *output_size_ptr -= avail_out;
 1382              		.loc 1 534 10 is_stmt 0 view .LVU457
 1383 0103 4801D3   		addq	%rdx, %rbx
 1384              	.LVL163:
 534:fltk-1.3.4-1/png/pngrutil.c ****          *output_size_ptr -= avail_out;
 1385              		.loc 1 534 10 view .LVU458
 1386 0106 7408     		je	.L103
 535:fltk-1.3.4-1/png/pngrutil.c **** 
 1387              		.loc 1 535 10 is_stmt 1 view .LVU459
 535:fltk-1.3.4-1/png/pngrutil.c **** 
 1388              		.loc 1 535 27 is_stmt 0 view .LVU460
 1389 0108 488B7C24 		movq	24(%rsp), %rdi
 1389      18
 1390 010d 48291F   		subq	%rbx, (%rdi)
 1391              	.L103:
 537:fltk-1.3.4-1/png/pngrutil.c ****          *input_size_ptr -= avail_in;
 1392              		.loc 1 537 7 is_stmt 1 view .LVU461
 537:fltk-1.3.4-1/png/pngrutil.c ****          *input_size_ptr -= avail_in;
 1393              		.loc 1 537 10 is_stmt 0 view .LVU462
 1394 0110 85C9     		testl	%ecx, %ecx
 1395 0112 753C     		jne	.L122
 1396              	.L104:
 541:fltk-1.3.4-1/png/pngrutil.c ****       return ret;
 1397              		.loc 1 541 7 is_stmt 1 view .LVU463
 1398 0114 89C6     		movl	%eax, %esi
 1399 0116 4C89FF   		movq	%r15, %rdi
 1400 0119 89442408 		movl	%eax, 8(%rsp)
 1401 011d E8000000 		call	png_zstream_error@PLT
 1401      00
 1402              	.LVL164:
 542:fltk-1.3.4-1/png/pngrutil.c ****    }
 1403              		.loc 1 542 7 view .LVU464
 542:fltk-1.3.4-1/png/pngrutil.c ****    }
 1404              		.loc 1 542 14 is_stmt 0 view .LVU465
 1405 0122 8B442408 		movl	8(%rsp), %eax
 1406              	.LVL165:
 1407              	.L94:
 542:fltk-1.3.4-1/png/pngrutil.c ****    }
 1408              		.loc 1 542 14 view .LVU466
 1409              	.LBE168:
 554:fltk-1.3.4-1/png/pngrutil.c **** 
 1410              		.loc 1 554 1 view .LVU467
 1411 0126 488BBC24 		movq	1064(%rsp), %rdi
 1411      28040000 
 1412 012e 6448333C 		xorq	%fs:40, %rdi
 1412      25280000 
 1412      00
 1413 0137 7549     		jne	.L123
 1414 0139 4881C438 		addq	$1080, %rsp
 1414      040000
 1415              		.cfi_remember_state
 1416              		.cfi_def_cfa_offset 56
 1417 0140 5B       		popq	%rbx
 1418              		.cfi_def_cfa_offset 48
 1419 0141 5D       		popq	%rbp
 1420              		.cfi_def_cfa_offset 40
 1421 0142 415C     		popq	%r12
 1422              		.cfi_def_cfa_offset 32
 1423 0144 415D     		popq	%r13
 1424              		.cfi_def_cfa_offset 24
 1425 0146 415E     		popq	%r14
 1426              		.cfi_def_cfa_offset 16
 1427 0148 415F     		popq	%r15
 1428              		.cfi_def_cfa_offset 8
 1429              	.LVL166:
 554:fltk-1.3.4-1/png/pngrutil.c **** 
 1430              		.loc 1 554 1 view .LVU468
 1431 014a C3       		ret
 1432              	.LVL167:
 1433 014b 0F1F4400 		.p2align 4,,10
 1433      00
 1434              		.p2align 3
 1435              	.L122:
 1436              		.cfi_restore_state
 1437              	.LBB172:
 538:fltk-1.3.4-1/png/pngrutil.c **** 
 1438              		.loc 1 538 10 is_stmt 1 view .LVU469
 538:fltk-1.3.4-1/png/pngrutil.c **** 
 1439              		.loc 1 538 26 is_stmt 0 view .LVU470
 1440 0150 488B7C24 		movq	16(%rsp), %rdi
 1440      10
 1441 0155 290F     		subl	%ecx, (%rdi)
 1442 0157 EBBB     		jmp	.L104
 1443              	.LVL168:
 1444 0159 0F1F8000 		.p2align 4,,10
 1444      000000
 1445              		.p2align 3
 1446              	.L121:
 525:fltk-1.3.4-1/png/pngrutil.c **** 
 1447              		.loc 1 525 10 is_stmt 1 view .LVU471
 525:fltk-1.3.4-1/png/pngrutil.c **** 
 1448              		.loc 1 525 36 is_stmt 0 view .LVU472
 1449 0160 49C78758 		movq	$0, 344(%r15)
 1449      01000000 
 1449      000000
 1450 016b EB88     		jmp	.L102
 1451              	.LVL169:
 1452              	.L95:
 525:fltk-1.3.4-1/png/pngrutil.c **** 
 1453              		.loc 1 525 36 view .LVU473
 1454              	.LBE172:
 551:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 1455              		.loc 1 551 7 is_stmt 1 view .LVU474
 551:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 1456              		.loc 1 551 28 is_stmt 0 view .LVU475
 1457 016d 488D0500 		leaq	.LC3(%rip), %rax
 1457      000000
 1458 0174 48898770 		movq	%rax, 368(%rdi)
 1458      010000
 552:fltk-1.3.4-1/png/pngrutil.c ****    }
 1459              		.loc 1 552 7 is_stmt 1 view .LVU476
 552:fltk-1.3.4-1/png/pngrutil.c ****    }
 1460              		.loc 1 552 14 is_stmt 0 view .LVU477
 1461 017b B8FEFFFF 		movl	$-2, %eax
 1461      FF
 1462 0180 EBA4     		jmp	.L94
 1463              	.LVL170:
 1464              	.L123:
 554:fltk-1.3.4-1/png/pngrutil.c **** 
 1465              		.loc 1 554 1 view .LVU478
 1466 0182 E8000000 		call	__stack_chk_fail@PLT
 1466      00
 1467              	.LVL171:
 1468              		.cfi_endproc
 1469              	.LFE100:
 1471              		.section	.rodata.png_decompress_chunk.constprop.0.str1.1,"aMS",@progbits,1
 1472              	.LC4:
 1473 0000 65787472 		.string	"extra compressed data"
 1473      6120636F 
 1473      6D707265 
 1473      73736564 
 1473      20646174 
 1474              		.section	.text.png_decompress_chunk.constprop.0,"ax",@progbits
 1475              		.p2align 4
 1477              	png_decompress_chunk.constprop.0:
 1478              	.LVL172:
 1479              	.LFB101:
 564:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 chunklength, png_uint_32 prefix_size,
 1480              		.loc 1 564 1 is_stmt 1 view -0
 1481              		.cfi_startproc
 564:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 chunklength, png_uint_32 prefix_size,
 1482              		.loc 1 564 1 is_stmt 0 view .LVU480
 1483 0000 4157     		pushq	%r15
 1484              		.cfi_def_cfa_offset 16
 1485              		.cfi_offset 15, -16
 1486 0002 4156     		pushq	%r14
 1487              		.cfi_def_cfa_offset 24
 1488              		.cfi_offset 14, -24
 1489 0004 4989FE   		movq	%rdi, %r14
 1490 0007 4155     		pushq	%r13
 1491              		.cfi_def_cfa_offset 32
 1492              		.cfi_offset 13, -32
 1493 0009 4154     		pushq	%r12
 1494              		.cfi_def_cfa_offset 40
 1495              		.cfi_offset 12, -40
 1496 000b 4989CC   		movq	%rcx, %r12
 1497 000e 55       		pushq	%rbp
 1498              		.cfi_def_cfa_offset 48
 1499              		.cfi_offset 6, -48
 1500 000f 89F5     		movl	%esi, %ebp
 1501 0011 53       		pushq	%rbx
 1502              		.cfi_def_cfa_offset 56
 1503              		.cfi_offset 3, -56
 1504 0012 89D3     		movl	%edx, %ebx
 1505 0014 83C201   		addl	$1, %edx
 1506              	.LVL173:
 564:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 chunklength, png_uint_32 prefix_size,
 1507              		.loc 1 564 1 view .LVU481
 1508 0017 4883EC38 		subq	$56, %rsp
 1509              		.cfi_def_cfa_offset 112
 564:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 chunklength, png_uint_32 prefix_size,
 1510              		.loc 1 564 1 view .LVU482
 1511 001b 64488B04 		movq	%fs:40, %rax
 1511      25280000 
 1511      00
 1512 0024 48894424 		movq	%rax, 40(%rsp)
 1512      28
 1513 0029 31C0     		xorl	%eax, %eax
 1514              	.LVL174:
 576:fltk-1.3.4-1/png/pngrutil.c **** 
 1515              		.loc 1 576 4 is_stmt 1 view .LVU483
 579:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr->user_chunk_malloc_max < limit)
 1516              		.loc 1 579 4 view .LVU484
 579:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr->user_chunk_malloc_max < limit)
 1517              		.loc 1 579 15 is_stmt 0 view .LVU485
 1518 002b 488B8768 		movq	1128(%rdi), %rax
 1518      040000
 579:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr->user_chunk_malloc_max < limit)
 1519              		.loc 1 579 43 view .LVU486
 1520 0032 488D48FF 		leaq	-1(%rax), %rcx
 1521              	.LVL175:
 579:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr->user_chunk_malloc_max < limit)
 1522              		.loc 1 579 43 view .LVU487
 1523 0036 4883F9FD 		cmpq	$-3, %rcx
 1524 003a 7664     		jbe	.L149
 1525 003c 48C7C0FF 		movq	$-1, %rax
 1525      FFFFFF
 1526              	.LVL176:
 1527              	.L125:
 1528              	.LBB173:
 589:fltk-1.3.4-1/png/pngrutil.c **** 
 1529              		.loc 1 589 7 is_stmt 1 view .LVU488
 591:fltk-1.3.4-1/png/pngrutil.c **** 
 1530              		.loc 1 591 7 view .LVU489
 591:fltk-1.3.4-1/png/pngrutil.c **** 
 1531              		.loc 1 591 13 is_stmt 0 view .LVU490
 1532 0043 4829D0   		subq	%rdx, %rax
 1533              	.LVL177:
 593:fltk-1.3.4-1/png/pngrutil.c ****          *newlength = limit;
 1534              		.loc 1 593 7 is_stmt 1 view .LVU491
 593:fltk-1.3.4-1/png/pngrutil.c ****          *newlength = limit;
 1535              		.loc 1 593 10 is_stmt 0 view .LVU492
 1536 0046 4883F8FF 		cmpq	$-1, %rax
 1537 004a 754C     		jne	.L150
 1538              	.L127:
 597:fltk-1.3.4-1/png/pngrutil.c **** 
 1539              		.loc 1 597 7 is_stmt 1 view .LVU493
 597:fltk-1.3.4-1/png/pngrutil.c **** 
 1540              		.loc 1 597 13 is_stmt 0 view .LVU494
 1541 004c 418BB618 		movl	536(%r14), %esi
 1541      020000
 1542              	.LVL178:
 597:fltk-1.3.4-1/png/pngrutil.c **** 
 1543              		.loc 1 597 13 view .LVU495
 1544 0053 4C89F7   		movq	%r14, %rdi
 1545              	.LVL179:
 597:fltk-1.3.4-1/png/pngrutil.c **** 
 1546              		.loc 1 597 13 view .LVU496
 1547 0056 E8000000 		call	png_inflate_claim
 1547      00
 1548              	.LVL180:
 597:fltk-1.3.4-1/png/pngrutil.c **** 
 1549              		.loc 1 597 13 view .LVU497
 1550 005b 4189C1   		movl	%eax, %r9d
 1551              	.LVL181:
 599:fltk-1.3.4-1/png/pngrutil.c ****       {
 1552              		.loc 1 599 7 is_stmt 1 view .LVU498
 599:fltk-1.3.4-1/png/pngrutil.c ****       {
 1553              		.loc 1 599 10 is_stmt 0 view .LVU499
 1554 005e 85C0     		testl	%eax, %eax
 1555 0060 745E     		je	.L151
 708:fltk-1.3.4-1/png/pngrutil.c ****          ret = PNG_UNEXPECTED_ZLIB_RETURN;
 1556              		.loc 1 708 35 is_stmt 1 view .LVU500
 709:fltk-1.3.4-1/png/pngrutil.c **** 
 1557              		.loc 1 709 14 is_stmt 0 view .LVU501
 1558 0062 83F801   		cmpl	$1, %eax
 1559 0065 B8F9FFFF 		movl	$-7, %eax
 1559      FF
 1560              	.LVL182:
 709:fltk-1.3.4-1/png/pngrutil.c **** 
 1561              		.loc 1 709 14 view .LVU502
 1562 006a 440F44C8 		cmove	%eax, %r9d
 1563              	.LVL183:
 1564              	.L124:
 709:fltk-1.3.4-1/png/pngrutil.c **** 
 1565              		.loc 1 709 14 view .LVU503
 1566              	.LBE173:
 720:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_COMPRESSED_TEXT */
 1567              		.loc 1 720 1 view .LVU504
 1568 006e 488B4424 		movq	40(%rsp), %rax
 1568      28
 1569 0073 64483304 		xorq	%fs:40, %rax
 1569      25280000 
 1569      00
 1570 007c 0F85F901 		jne	.L152
 1570      0000
 1571 0082 4883C438 		addq	$56, %rsp
 1572              		.cfi_remember_state
 1573              		.cfi_def_cfa_offset 56
 1574 0086 4489C8   		movl	%r9d, %eax
 1575 0089 5B       		popq	%rbx
 1576              		.cfi_def_cfa_offset 48
 1577              	.LVL184:
 720:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_COMPRESSED_TEXT */
 1578              		.loc 1 720 1 view .LVU505
 1579 008a 5D       		popq	%rbp
 1580              		.cfi_def_cfa_offset 40
 1581 008b 415C     		popq	%r12
 1582              		.cfi_def_cfa_offset 32
 1583              	.LVL185:
 720:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_COMPRESSED_TEXT */
 1584              		.loc 1 720 1 view .LVU506
 1585 008d 415D     		popq	%r13
 1586              		.cfi_def_cfa_offset 24
 1587 008f 415E     		popq	%r14
 1588              		.cfi_def_cfa_offset 16
 1589              	.LVL186:
 720:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_COMPRESSED_TEXT */
 1590              		.loc 1 720 1 view .LVU507
 1591 0091 415F     		popq	%r15
 1592              		.cfi_def_cfa_offset 8
 1593 0093 C3       		ret
 1594              	.LVL187:
 1595              		.p2align 4,,10
 1596 0094 0F1F4000 		.p2align 3
 1597              	.L150:
 1598              		.cfi_restore_state
 1599              	.LBB186:
 594:fltk-1.3.4-1/png/pngrutil.c **** 
 1600              		.loc 1 594 10 is_stmt 1 view .LVU508
 594:fltk-1.3.4-1/png/pngrutil.c **** 
 1601              		.loc 1 594 21 is_stmt 0 view .LVU509
 1602 0098 49890424 		movq	%rax, (%r12)
 1603 009c EBAE     		jmp	.L127
 1604              	.LVL188:
 1605 009e 6690     		.p2align 4,,10
 1606              		.p2align 3
 1607              	.L149:
 594:fltk-1.3.4-1/png/pngrutil.c **** 
 1608              		.loc 1 594 21 view .LVU510
 1609              	.LBE186:
 581:fltk-1.3.4-1/png/pngrutil.c **** # elif PNG_USER_CHUNK_MALLOC_MAX > 0
 1610              		.loc 1 581 7 is_stmt 1 view .LVU511
 587:fltk-1.3.4-1/png/pngrutil.c ****    {
 1611              		.loc 1 587 4 view .LVU512
 587:fltk-1.3.4-1/png/pngrutil.c ****    {
 1612              		.loc 1 587 7 is_stmt 0 view .LVU513
 1613 00a0 4839D0   		cmpq	%rdx, %rax
 1614 00a3 739E     		jnb	.L125
 717:fltk-1.3.4-1/png/pngrutil.c ****       return Z_MEM_ERROR;
 1615              		.loc 1 717 7 is_stmt 1 view .LVU514
 1616 00a5 BEFCFFFF 		movl	$-4, %esi
 1616      FF
 1617              	.LVL189:
 717:fltk-1.3.4-1/png/pngrutil.c ****       return Z_MEM_ERROR;
 1618              		.loc 1 717 7 is_stmt 0 view .LVU515
 1619 00aa E8000000 		call	png_zstream_error@PLT
 1619      00
 1620              	.LVL190:
 718:fltk-1.3.4-1/png/pngrutil.c ****    }
 1621              		.loc 1 718 7 is_stmt 1 view .LVU516
 718:fltk-1.3.4-1/png/pngrutil.c ****    }
 1622              		.loc 1 718 14 is_stmt 0 view .LVU517
 1623 00af 41B9FCFF 		movl	$-4, %r9d
 1623      FFFF
 1624 00b5 EBB7     		jmp	.L124
 1625              	.LVL191:
 1626 00b7 660F1F84 		.p2align 4,,10
 1626      00000000 
 1626      00
 1627              		.p2align 3
 1628              	.L151:
 1629              	.LBB187:
 1630              	.LBB174:
 601:fltk-1.3.4-1/png/pngrutil.c **** 
 1631              		.loc 1 601 10 is_stmt 1 view .LVU518
 604:fltk-1.3.4-1/png/pngrutil.c ****             /* output: */ NULL, newlength);
 1632              		.loc 1 604 47 is_stmt 0 view .LVU519
 1633 00c0 498B9698 		movq	1176(%r14), %rdx
 1633      040000
 603:fltk-1.3.4-1/png/pngrutil.c ****             /* input: */ png_ptr->read_buffer + prefix_size, &lzsize,
 1634              		.loc 1 603 16 view .LVU520
 1635 00c7 4189DD   		movl	%ebx, %r13d
 1636 00ca 4D89E1   		movq	%r12, %r9
 601:fltk-1.3.4-1/png/pngrutil.c **** 
 1637              		.loc 1 601 43 view .LVU521
 1638 00cd 29DD     		subl	%ebx, %ebp
 1639              	.LVL192:
 603:fltk-1.3.4-1/png/pngrutil.c ****             /* input: */ png_ptr->read_buffer + prefix_size, &lzsize,
 1640              		.loc 1 603 16 view .LVU522
 1641 00cf 4C8D7C24 		leaq	36(%rsp), %r15
 1641      24
 1642 00d4 4531C0   		xorl	%r8d, %r8d
 1643 00d7 4C89F7   		movq	%r14, %rdi
 601:fltk-1.3.4-1/png/pngrutil.c **** 
 1644              		.loc 1 601 22 view .LVU523
 1645 00da 896C2424 		movl	%ebp, 36(%rsp)
 603:fltk-1.3.4-1/png/pngrutil.c ****             /* input: */ png_ptr->read_buffer + prefix_size, &lzsize,
 1646              		.loc 1 603 10 is_stmt 1 view .LVU524
 603:fltk-1.3.4-1/png/pngrutil.c ****             /* input: */ png_ptr->read_buffer + prefix_size, &lzsize,
 1647              		.loc 1 603 16 is_stmt 0 view .LVU525
 1648 00de 418BB618 		movl	536(%r14), %esi
 1648      020000
 604:fltk-1.3.4-1/png/pngrutil.c ****             /* output: */ NULL, newlength);
 1649              		.loc 1 604 47 view .LVU526
 1650 00e5 4C01EA   		addq	%r13, %rdx
 603:fltk-1.3.4-1/png/pngrutil.c ****             /* input: */ png_ptr->read_buffer + prefix_size, &lzsize,
 1651              		.loc 1 603 16 view .LVU527
 1652 00e8 4C89F9   		movq	%r15, %rcx
 1653 00eb E8000000 		call	png_inflate.constprop.0
 1653      00
 1654              	.LVL193:
 603:fltk-1.3.4-1/png/pngrutil.c ****             /* input: */ png_ptr->read_buffer + prefix_size, &lzsize,
 1655              		.loc 1 603 16 view .LVU528
 1656 00f0 4189C1   		movl	%eax, %r9d
 1657              	.LVL194:
 607:fltk-1.3.4-1/png/pngrutil.c ****          {
 1658              		.loc 1 607 10 is_stmt 1 view .LVU529
 607:fltk-1.3.4-1/png/pngrutil.c ****          {
 1659              		.loc 1 607 13 is_stmt 0 view .LVU530
 1660 00f3 83F801   		cmpl	$1, %eax
 1661 00f6 7420     		je	.L153
 701:fltk-1.3.4-1/png/pngrutil.c ****             ret = PNG_UNEXPECTED_ZLIB_RETURN;
 1662              		.loc 1 701 15 is_stmt 1 view .LVU531
 702:fltk-1.3.4-1/png/pngrutil.c **** 
 1663              		.loc 1 702 17 is_stmt 0 view .LVU532
 1664 00f8 85C0     		testl	%eax, %eax
 1665 00fa B8F9FFFF 		movl	$-7, %eax
 1665      FF
 1666              	.LVL195:
 702:fltk-1.3.4-1/png/pngrutil.c **** 
 1667              		.loc 1 702 17 view .LVU533
 1668 00ff 440F44C8 		cmove	%eax, %r9d
 1669              	.LVL196:
 1670              	.L134:
 705:fltk-1.3.4-1/png/pngrutil.c ****       }
 1671              		.loc 1 705 10 is_stmt 1 view .LVU534
 705:fltk-1.3.4-1/png/pngrutil.c ****       }
 1672              		.loc 1 705 26 is_stmt 0 view .LVU535
 1673 0103 41C78638 		movl	$0, 312(%r14)
 1673      01000000 
 1673      000000
 1674              	.LBE174:
 1675 010e E95BFFFF 		jmp	.L124
 1675      FF
 1676              	.LVL197:
 1677              		.p2align 4,,10
 1678 0113 0F1F4400 		.p2align 3
 1678      00
 1679              	.L153:
 1680              	.LBB184:
 616:fltk-1.3.4-1/png/pngrutil.c ****             {
 1681              		.loc 1 616 13 is_stmt 1 view .LVU536
 616:fltk-1.3.4-1/png/pngrutil.c ****             {
 1682              		.loc 1 616 17 is_stmt 0 view .LVU537
 1683 0118 498DBE40 		leaq	320(%r14), %rdi
 1683      010000
 1684 011f E8000000 		call	inflateReset@PLT
 1684      00
 1685              	.LVL198:
 616:fltk-1.3.4-1/png/pngrutil.c ****             {
 1686              		.loc 1 616 16 view .LVU538
 1687 0124 85C0     		testl	%eax, %eax
 1688 0126 0F858400 		jne	.L130
 1688      0000
 1689              	.LBB175:
 623:fltk-1.3.4-1/png/pngrutil.c ****                png_alloc_size_t buffer_size = prefix_size + new_size +
 1690              		.loc 1 623 16 is_stmt 1 view .LVU539
 623:fltk-1.3.4-1/png/pngrutil.c ****                png_alloc_size_t buffer_size = prefix_size + new_size +
 1691              		.loc 1 623 33 is_stmt 0 view .LVU540
 1692 012c 498B0424 		movq	(%r12), %rax
 626:fltk-1.3.4-1/png/pngrutil.c ****                   buffer_size));
 1693              		.loc 1 626 33 view .LVU541
 1694 0130 4C89F7   		movq	%r14, %rdi
 623:fltk-1.3.4-1/png/pngrutil.c ****                png_alloc_size_t buffer_size = prefix_size + new_size +
 1695              		.loc 1 623 33 view .LVU542
 1696 0133 48894424 		movq	%rax, 16(%rsp)
 1696      10
 1697              	.LVL199:
 624:fltk-1.3.4-1/png/pngrutil.c ****                   (terminate != 0);
 1698              		.loc 1 624 16 is_stmt 1 view .LVU543
 624:fltk-1.3.4-1/png/pngrutil.c ****                   (terminate != 0);
 1699              		.loc 1 624 33 is_stmt 0 view .LVU544
 1700 0138 498D4405 		leaq	1(%r13,%rax), %rax
 1700      01
 1701              	.LVL200:
 626:fltk-1.3.4-1/png/pngrutil.c ****                   buffer_size));
 1702              		.loc 1 626 33 view .LVU545
 1703 013d 4889C6   		movq	%rax, %rsi
 624:fltk-1.3.4-1/png/pngrutil.c ****                   (terminate != 0);
 1704              		.loc 1 624 33 view .LVU546
 1705 0140 48894424 		movq	%rax, 24(%rsp)
 1705      18
 1706              	.LVL201:
 626:fltk-1.3.4-1/png/pngrutil.c ****                   buffer_size));
 1707              		.loc 1 626 16 is_stmt 1 view .LVU547
 626:fltk-1.3.4-1/png/pngrutil.c ****                   buffer_size));
 1708              		.loc 1 626 33 is_stmt 0 view .LVU548
 1709 0145 E8000000 		call	png_malloc_base@PLT
 1709      00
 1710              	.LVL202:
 629:fltk-1.3.4-1/png/pngrutil.c ****                {
 1711              		.loc 1 629 16 is_stmt 1 view .LVU549
 629:fltk-1.3.4-1/png/pngrutil.c ****                {
 1712              		.loc 1 629 19 is_stmt 0 view .LVU550
 1713 014a 4885C0   		testq	%rax, %rax
 1714 014d 0F842D01 		je	.L131
 1714      0000
 631:fltk-1.3.4-1/png/pngrutil.c ****                      png_ptr->read_buffer + prefix_size, &lzsize,
 1715              		.loc 1 631 19 is_stmt 1 view .LVU551
 632:fltk-1.3.4-1/png/pngrutil.c ****                      text + prefix_size, newlength);
 1716              		.loc 1 632 43 is_stmt 0 view .LVU552
 1717 0153 498B9698 		movq	1176(%r14), %rdx
 1717      040000
 631:fltk-1.3.4-1/png/pngrutil.c ****                      png_ptr->read_buffer + prefix_size, &lzsize,
 1718              		.loc 1 631 25 view .LVU553
 1719 015a 4D89E1   		movq	%r12, %r9
 1720 015d 4C89F9   		movq	%r15, %rcx
 1721 0160 4C89F7   		movq	%r14, %rdi
 1722 0163 418BB618 		movl	536(%r14), %esi
 1722      020000
 1723 016a 4E8D0428 		leaq	(%rax,%r13), %r8
 1724 016e 48894424 		movq	%rax, 8(%rsp)
 1724      08
 632:fltk-1.3.4-1/png/pngrutil.c ****                      text + prefix_size, newlength);
 1725              		.loc 1 632 43 view .LVU554
 1726 0173 4C01EA   		addq	%r13, %rdx
 631:fltk-1.3.4-1/png/pngrutil.c ****                      png_ptr->read_buffer + prefix_size, &lzsize,
 1727              		.loc 1 631 25 view .LVU555
 1728 0176 4C890424 		movq	%r8, (%rsp)
 1729 017a E8000000 		call	png_inflate.constprop.0
 1729      00
 1730              	.LVL203:
 635:fltk-1.3.4-1/png/pngrutil.c ****                   {
 1731              		.loc 1 635 22 view .LVU556
 1732 017f 4C8B0424 		movq	(%rsp), %r8
 1733 0183 4C8B5C24 		movq	8(%rsp), %r11
 1733      08
 1734 0188 83F801   		cmpl	$1, %eax
 631:fltk-1.3.4-1/png/pngrutil.c ****                      png_ptr->read_buffer + prefix_size, &lzsize,
 1735              		.loc 1 631 25 view .LVU557
 1736 018b 4189C1   		movl	%eax, %r9d
 1737              	.LVL204:
 635:fltk-1.3.4-1/png/pngrutil.c ****                   {
 1738              		.loc 1 635 19 is_stmt 1 view .LVU558
 635:fltk-1.3.4-1/png/pngrutil.c ****                   {
 1739              		.loc 1 635 22 is_stmt 0 view .LVU559
 1740 018e 7460     		je	.L154
 666:fltk-1.3.4-1/png/pngrutil.c ****                      ret = PNG_UNEXPECTED_ZLIB_RETURN; /* for safety */
 1741              		.loc 1 666 24 is_stmt 1 view .LVU560
 666:fltk-1.3.4-1/png/pngrutil.c ****                      ret = PNG_UNEXPECTED_ZLIB_RETURN; /* for safety */
 1742              		.loc 1 666 27 is_stmt 0 view .LVU561
 1743 0190 85C0     		testl	%eax, %eax
 1744 0192 743C     		je	.L148
 672:fltk-1.3.4-1/png/pngrutil.c ****                   text = NULL;
 1745              		.loc 1 672 19 view .LVU562
 1746 0194 4C89DE   		movq	%r11, %rsi
 1747 0197 4C89F7   		movq	%r14, %rdi
 1748 019a 890424   		movl	%eax, (%rsp)
 1749              	.LVL205:
 672:fltk-1.3.4-1/png/pngrutil.c ****                   text = NULL;
 1750              		.loc 1 672 19 is_stmt 1 view .LVU563
 1751 019d E8000000 		call	png_free@PLT
 1751      00
 1752              	.LVL206:
 673:fltk-1.3.4-1/png/pngrutil.c **** 
 1753              		.loc 1 673 19 view .LVU564
 678:fltk-1.3.4-1/png/pngrutil.c ****                      chunklength - prefix_size != lzsize)
 1754              		.loc 1 678 19 view .LVU565
 1755 01a2 448B0C24 		movl	(%rsp), %r9d
 1756 01a6 E958FFFF 		jmp	.L134
 1756      FF
 1757              	.LVL207:
 1758 01ab 0F1F4400 		.p2align 4,,10
 1758      00
 1759              		.p2align 3
 1760              	.L130:
 678:fltk-1.3.4-1/png/pngrutil.c ****                      chunklength - prefix_size != lzsize)
 1761              		.loc 1 678 19 is_stmt 0 view .LVU566
 1762              	.LBE175:
 694:fltk-1.3.4-1/png/pngrutil.c **** 
 1763              		.loc 1 694 16 is_stmt 1 view .LVU567
 1764 01b0 BE010000 		movl	$1, %esi
 1764      00
 1765 01b5 4C89F7   		movq	%r14, %rdi
 1766 01b8 E8000000 		call	png_zstream_error@PLT
 1766      00
 1767              	.LVL208:
 696:fltk-1.3.4-1/png/pngrutil.c ****                   ret = PNG_UNEXPECTED_ZLIB_RETURN;
 1768              		.loc 1 696 16 view .LVU568
 697:fltk-1.3.4-1/png/pngrutil.c ****             }
 1769              		.loc 1 697 19 view .LVU569
 697:fltk-1.3.4-1/png/pngrutil.c ****             }
 1770              		.loc 1 697 23 is_stmt 0 view .LVU570
 1771 01bd 41B9F9FF 		movl	$-7, %r9d
 1771      FFFF
 1772 01c3 E93BFFFF 		jmp	.L134
 1772      FF
 1773              	.LVL209:
 1774 01c8 0F1F8400 		.p2align 4,,10
 1774      00000000 
 1775              		.p2align 3
 1776              	.L148:
 1777              	.LBB182:
 667:fltk-1.3.4-1/png/pngrutil.c **** 
 1778              		.loc 1 667 22 is_stmt 1 view .LVU571
 672:fltk-1.3.4-1/png/pngrutil.c ****                   text = NULL;
 1779              		.loc 1 672 19 view .LVU572
 1780 01d0 4C89DE   		movq	%r11, %rsi
 1781 01d3 4C89F7   		movq	%r14, %rdi
 1782 01d6 E8000000 		call	png_free@PLT
 1782      00
 1783              	.LVL210:
 673:fltk-1.3.4-1/png/pngrutil.c **** 
 1784              		.loc 1 673 19 view .LVU573
 678:fltk-1.3.4-1/png/pngrutil.c ****                      chunklength - prefix_size != lzsize)
 1785              		.loc 1 678 19 view .LVU574
 667:fltk-1.3.4-1/png/pngrutil.c **** 
 1786              		.loc 1 667 26 is_stmt 0 view .LVU575
 1787 01db 41B9F9FF 		movl	$-7, %r9d
 1787      FFFF
 1788 01e1 E91DFFFF 		jmp	.L134
 1788      FF
 1789              	.LVL211:
 1790 01e6 662E0F1F 		.p2align 4,,10
 1790      84000000 
 1790      0000
 1791              		.p2align 3
 1792              	.L154:
 637:fltk-1.3.4-1/png/pngrutil.c ****                      {
 1793              		.loc 1 637 22 is_stmt 1 view .LVU576
 637:fltk-1.3.4-1/png/pngrutil.c ****                      {
 1794              		.loc 1 637 25 is_stmt 0 view .LVU577
 1795 01f0 488B4424 		movq	16(%rsp), %rax
 1795      10
 1796              	.LVL212:
 637:fltk-1.3.4-1/png/pngrutil.c ****                      {
 1797              		.loc 1 637 25 view .LVU578
 1798 01f5 493B0424 		cmpq	(%r12), %rax
 1799 01f9 75D5     		jne	.L148
 639:fltk-1.3.4-1/png/pngrutil.c ****                            text[prefix_size + *newlength] = 0;
 1800              		.loc 1 639 25 is_stmt 1 view .LVU579
 640:fltk-1.3.4-1/png/pngrutil.c **** 
 1801              		.loc 1 640 28 view .LVU580
 640:fltk-1.3.4-1/png/pngrutil.c **** 
 1802              		.loc 1 640 59 is_stmt 0 view .LVU581
 1803 01fb 488B4424 		movq	16(%rsp), %rax
 1803      10
 1804 0200 498BB698 		movq	1176(%r14), %rsi
 1804      040000
 1805 0207 41C60400 		movb	$0, (%r8,%rax)
 1805      00
 642:fltk-1.3.4-1/png/pngrutil.c ****                            memcpy(text, png_ptr->read_buffer, prefix_size);
 1806              		.loc 1 642 25 is_stmt 1 view .LVU582
 642:fltk-1.3.4-1/png/pngrutil.c ****                            memcpy(text, png_ptr->read_buffer, prefix_size);
 1807              		.loc 1 642 28 is_stmt 0 view .LVU583
 1808 020c 85DB     		testl	%ebx, %ebx
 1809 020e 7549     		jne	.L155
 1810              	.LVL213:
 1811              	.L135:
 1812              	.LBB176:
 649:fltk-1.3.4-1/png/pngrutil.c ****                            text = old_ptr; /* freed below */
 1813              		.loc 1 649 54 view .LVU584
 1814 0210 488B4424 		movq	24(%rsp), %rax
 1814      18
 648:fltk-1.3.4-1/png/pngrutil.c ****                            png_ptr->read_buffer_size = buffer_size;
 1815              		.loc 1 648 49 view .LVU585
 1816 0215 4D899E98 		movq	%r11, 1176(%r14)
 1816      040000
 1817              	.LBE176:
 672:fltk-1.3.4-1/png/pngrutil.c ****                   text = NULL;
 1818              		.loc 1 672 19 view .LVU586
 1819 021c 4C89F7   		movq	%r14, %rdi
 1820 021f 44890C24 		movl	%r9d, (%rsp)
 1821              	.LBB177:
 646:fltk-1.3.4-1/png/pngrutil.c **** 
 1822              		.loc 1 646 28 is_stmt 1 view .LVU587
 1823              	.LVL214:
 648:fltk-1.3.4-1/png/pngrutil.c ****                            png_ptr->read_buffer_size = buffer_size;
 1824              		.loc 1 648 28 view .LVU588
 649:fltk-1.3.4-1/png/pngrutil.c ****                            text = old_ptr; /* freed below */
 1825              		.loc 1 649 28 view .LVU589
 649:fltk-1.3.4-1/png/pngrutil.c ****                            text = old_ptr; /* freed below */
 1826              		.loc 1 649 54 is_stmt 0 view .LVU590
 1827 0223 498986A0 		movq	%rax, 1184(%r14)
 1827      040000
 650:fltk-1.3.4-1/png/pngrutil.c ****                         }
 1828              		.loc 1 650 28 is_stmt 1 view .LVU591
 1829              	.LVL215:
 650:fltk-1.3.4-1/png/pngrutil.c ****                         }
 1830              		.loc 1 650 28 is_stmt 0 view .LVU592
 1831              	.LBE177:
 672:fltk-1.3.4-1/png/pngrutil.c ****                   text = NULL;
 1832              		.loc 1 672 19 is_stmt 1 view .LVU593
 1833 022a E8000000 		call	png_free@PLT
 1833      00
 1834              	.LVL216:
 673:fltk-1.3.4-1/png/pngrutil.c **** 
 1835              		.loc 1 673 19 view .LVU594
 678:fltk-1.3.4-1/png/pngrutil.c ****                      chunklength - prefix_size != lzsize)
 1836              		.loc 1 678 19 view .LVU595
 678:fltk-1.3.4-1/png/pngrutil.c ****                      chunklength - prefix_size != lzsize)
 1837              		.loc 1 678 43 is_stmt 0 view .LVU596
 1838 022f 3B6C2424 		cmpl	36(%rsp), %ebp
 1839 0233 448B0C24 		movl	(%rsp), %r9d
 1840 0237 0F84C6FE 		je	.L134
 1840      FFFF
 680:fltk-1.3.4-1/png/pngrutil.c ****                }
 1841              		.loc 1 680 22 view .LVU597
 1842 023d 488D3500 		leaq	.LC4(%rip), %rsi
 1842      000000
 1843 0244 4C89F7   		movq	%r14, %rdi
 1844 0247 44890C24 		movl	%r9d, (%rsp)
 680:fltk-1.3.4-1/png/pngrutil.c ****                }
 1845              		.loc 1 680 22 is_stmt 1 view .LVU598
 1846 024b E8000000 		call	png_chunk_benign_error@PLT
 1846      00
 1847              	.LVL217:
 1848 0250 448B0C24 		movl	(%rsp), %r9d
 1849 0254 E9AAFEFF 		jmp	.L134
 1849      FF
 1850              	.LVL218:
 1851              	.L155:
 1852              	.LBB178:
 1853              	.LBB179:
 1854              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 1855              		.loc 2 34 10 is_stmt 0 view .LVU599
 1856 0259 4C89DF   		movq	%r11, %rdi
 1857 025c 4C89EA   		movq	%r13, %rdx
 1858 025f 44894C24 		movl	%r9d, 8(%rsp)
 1858      08
 1859              	.LVL219:
 1860              		.loc 2 34 10 view .LVU600
 1861              	.LBE179:
 1862              	.LBE178:
 643:fltk-1.3.4-1/png/pngrutil.c **** 
 1863              		.loc 1 643 28 is_stmt 1 view .LVU601
 1864              	.LBB181:
 1865              	.LBI178:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 1866              		.loc 2 31 1 view .LVU602
 1867              	.LBB180:
 1868              		.loc 2 34 3 view .LVU603
 1869              		.loc 2 34 10 is_stmt 0 view .LVU604
 1870 0264 48893424 		movq	%rsi, (%rsp)
 1871 0268 E8000000 		call	memcpy@PLT
 1871      00
 1872              	.LVL220:
 1873              		.loc 2 34 10 view .LVU605
 1874 026d 448B4C24 		movl	8(%rsp), %r9d
 1874      08
 1875 0272 488B3424 		movq	(%rsp), %rsi
 1876 0276 4989C3   		movq	%rax, %r11
 1877 0279 EB95     		jmp	.L135
 1878              	.LVL221:
 1879              	.L152:
 1880              		.loc 2 34 10 view .LVU606
 1881              	.LBE180:
 1882              	.LBE181:
 1883              	.LBE182:
 1884              	.LBE184:
 1885              	.LBE187:
 720:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_COMPRESSED_TEXT */
 1886              		.loc 1 720 1 view .LVU607
 1887 027b E8000000 		call	__stack_chk_fail@PLT
 1887      00
 1888              	.LVL222:
 1889              	.L131:
 1890              	.LBB188:
 1891              	.LBB185:
 1892              	.LBB183:
 686:fltk-1.3.4-1/png/pngrutil.c ****                   png_zstream_error(png_ptr, Z_MEM_ERROR);
 1893              		.loc 1 686 19 is_stmt 1 view .LVU608
 687:fltk-1.3.4-1/png/pngrutil.c ****                }
 1894              		.loc 1 687 19 view .LVU609
 1895 0280 BEFCFFFF 		movl	$-4, %esi
 1895      FF
 1896 0285 4C89F7   		movq	%r14, %rdi
 1897 0288 E8000000 		call	png_zstream_error@PLT
 1897      00
 1898              	.LVL223:
 686:fltk-1.3.4-1/png/pngrutil.c ****                   png_zstream_error(png_ptr, Z_MEM_ERROR);
 1899              		.loc 1 686 23 is_stmt 0 view .LVU610
 1900 028d 41B9FCFF 		movl	$-4, %r9d
 1900      FFFF
 1901 0293 E96BFEFF 		jmp	.L134
 1901      FF
 1902              	.LBE183:
 1903              	.LBE185:
 1904              	.LBE188:
 1905              		.cfi_endproc
 1906              	.LFE101:
 1908              		.section	.text.png_get_fixed_point.constprop.0,"ax",@progbits
 1909              		.p2align 4
 1911              	png_get_fixed_point.constprop.0:
 1912              	.LVL224:
 1913              	.LFB99:
  41:fltk-1.3.4-1/png/pngrutil.c **** {
 1914              		.loc 1 41 1 is_stmt 1 view -0
 1915              		.cfi_startproc
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1916              		.loc 1 43 4 view .LVU612
  45:fltk-1.3.4-1/png/pngrutil.c ****       return (png_fixed_point)uval; /* known to be in range */
 1917              		.loc 1 45 4 view .LVU613
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1918              		.loc 1 43 23 is_stmt 0 view .LVU614
 1919 0000 0FB607   		movzbl	(%rdi), %eax
 1920              	.LVL225:
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1921              		.loc 1 43 23 view .LVU615
 1922 0003 0FB65703 		movzbl	3(%rdi), %edx
 1923 0007 C1E018   		sall	$24, %eax
 1924              	.LVL226:
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1925              		.loc 1 43 23 view .LVU616
 1926 000a 89C1     		movl	%eax, %ecx
 1927 000c 0FB64701 		movzbl	1(%rdi), %eax
 1928 0010 C1E010   		sall	$16, %eax
 1929 0013 01C8     		addl	%ecx, %eax
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1930              		.loc 1 43 16 view .LVU617
 1931 0015 01C2     		addl	%eax, %edx
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1932              		.loc 1 43 23 view .LVU618
 1933 0017 0FB64702 		movzbl	2(%rdi), %eax
 1934              	.LVL227:
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1935              		.loc 1 43 23 view .LVU619
 1936 001b C1E008   		sall	$8, %eax
 1937              	.LVL228:
  43:fltk-1.3.4-1/png/pngrutil.c **** 
 1938              		.loc 1 43 23 view .LVU620
 1939 001e 01D0     		addl	%edx, %eax
 1940 0020 BAFFFFFF 		movl	$-1, %edx
 1940      FF
 1941 0025 0F48C2   		cmovs	%edx, %eax
  53:fltk-1.3.4-1/png/pngrutil.c **** #endif
 1942              		.loc 1 53 1 view .LVU621
 1943 0028 C3       		ret
 1944              		.cfi_endproc
 1945              	.LFE99:
 1947              		.section	.rodata.png_get_uint_31.str1.8,"aMS",@progbits,1
 1948              		.align 8
 1949              	.LC5:
 1950 0000 504E4720 		.string	"PNG unsigned integer out of range"
 1950      756E7369 
 1950      676E6564 
 1950      20696E74 
 1950      65676572 
 1951              		.section	.text.png_get_uint_31,"ax",@progbits
 1952              		.p2align 4
 1953              		.globl	png_get_uint_31
 1955              	png_get_uint_31:
 1956              	.LVL229:
 1957              	.LFB41:
  23:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
 1958              		.loc 1 23 1 is_stmt 1 view -0
 1959              		.cfi_startproc
  23:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
 1960              		.loc 1 23 1 is_stmt 0 view .LVU623
 1961 0000 F30F1EFA 		endbr64
  24:fltk-1.3.4-1/png/pngrutil.c **** 
 1962              		.loc 1 24 4 is_stmt 1 view .LVU624
  24:fltk-1.3.4-1/png/pngrutil.c **** 
 1963              		.loc 1 24 23 is_stmt 0 view .LVU625
 1964 0004 0FB606   		movzbl	(%rsi), %eax
 1965 0007 C1E018   		sall	$24, %eax
 1966 000a 89C2     		movl	%eax, %edx
 1967 000c 0FB64601 		movzbl	1(%rsi), %eax
 1968 0010 C1E010   		sall	$16, %eax
 1969 0013 01D0     		addl	%edx, %eax
 1970 0015 0FB65603 		movzbl	3(%rsi), %edx
  24:fltk-1.3.4-1/png/pngrutil.c **** 
 1971              		.loc 1 24 16 view .LVU626
 1972 0019 01D0     		addl	%edx, %eax
  24:fltk-1.3.4-1/png/pngrutil.c **** 
 1973              		.loc 1 24 23 view .LVU627
 1974 001b 0FB65602 		movzbl	2(%rsi), %edx
 1975 001f C1E208   		sall	$8, %edx
 1976              	.LVL230:
  26:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "PNG unsigned integer out of range");
 1977              		.loc 1 26 4 is_stmt 1 view .LVU628
  26:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "PNG unsigned integer out of range");
 1978              		.loc 1 26 7 is_stmt 0 view .LVU629
 1979 0022 01D0     		addl	%edx, %eax
 1980              	.LVL231:
  26:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "PNG unsigned integer out of range");
 1981              		.loc 1 26 7 view .LVU630
 1982 0024 7801     		js	.L162
  30:fltk-1.3.4-1/png/pngrutil.c **** 
 1983              		.loc 1 30 1 view .LVU631
 1984 0026 C3       		ret
 1985              	.L162:
  27:fltk-1.3.4-1/png/pngrutil.c **** 
 1986              		.loc 1 27 7 is_stmt 1 view .LVU632
 1987              	.LVL232:
  23:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
 1988              		.loc 1 23 1 is_stmt 0 view .LVU633
 1989 0027 50       		pushq	%rax
 1990              		.cfi_def_cfa_offset 16
 1991              	.LVL233:
  27:fltk-1.3.4-1/png/pngrutil.c **** 
 1992              		.loc 1 27 7 view .LVU634
 1993 0028 488D3500 		leaq	.LC5(%rip), %rsi
 1993      000000
 1994              	.LVL234:
  27:fltk-1.3.4-1/png/pngrutil.c **** 
 1995              		.loc 1 27 7 view .LVU635
 1996 002f E8000000 		call	png_error@PLT
 1996      00
 1997              	.LVL235:
  27:fltk-1.3.4-1/png/pngrutil.c **** 
 1998              		.loc 1 27 7 view .LVU636
 1999              		.cfi_endproc
 2000              	.LFE41:
 2002              		.section	.text.png_get_uint_32,"ax",@progbits
 2003              		.p2align 4
 2004              		.globl	png_get_uint_32
 2006              	png_get_uint_32:
 2007              	.LVL236:
 2008              	.LFB43:
  69:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval =
 2009              		.loc 1 69 1 is_stmt 1 view -0
 2010              		.cfi_startproc
  69:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval =
 2011              		.loc 1 69 1 is_stmt 0 view .LVU638
 2012 0000 F30F1EFA 		endbr64
  70:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf    )) << 24) +
 2013              		.loc 1 70 4 is_stmt 1 view .LVU639
 2014              	.LVL237:
  76:fltk-1.3.4-1/png/pngrutil.c **** }
 2015              		.loc 1 76 4 view .LVU640
  71:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 1)) << 16) +
 2016              		.loc 1 71 9 is_stmt 0 view .LVU641
 2017 0004 0FB607   		movzbl	(%rdi), %eax
 2018              	.LVL238:
  74:fltk-1.3.4-1/png/pngrutil.c **** 
 2019              		.loc 1 74 9 view .LVU642
 2020 0007 0FB65703 		movzbl	3(%rdi), %edx
  71:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 1)) << 16) +
 2021              		.loc 1 71 35 view .LVU643
 2022 000b C1E018   		sall	$24, %eax
 2023              	.LVL239:
  71:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 1)) << 16) +
 2024              		.loc 1 71 35 view .LVU644
 2025 000e 89C1     		movl	%eax, %ecx
  72:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 2)) <<  8) +
 2026              		.loc 1 72 9 view .LVU645
 2027 0010 0FB64701 		movzbl	1(%rdi), %eax
  72:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 2)) <<  8) +
 2028              		.loc 1 72 35 view .LVU646
 2029 0014 C1E010   		sall	$16, %eax
  71:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 1)) << 16) +
 2030              		.loc 1 71 42 view .LVU647
 2031 0017 01C8     		addl	%ecx, %eax
  70:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf    )) << 24) +
 2032              		.loc 1 70 16 view .LVU648
 2033 0019 01C2     		addl	%eax, %edx
  73:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 3))      ) ;
 2034              		.loc 1 73 9 view .LVU649
 2035 001b 0FB64702 		movzbl	2(%rdi), %eax
 2036              	.LVL240:
  73:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf + 3))      ) ;
 2037              		.loc 1 73 35 view .LVU650
 2038 001f C1E008   		sall	$8, %eax
 2039              	.LVL241:
  70:fltk-1.3.4-1/png/pngrutil.c ****        ((png_uint_32)(*(buf    )) << 24) +
 2040              		.loc 1 70 16 view .LVU651
 2041 0022 01D0     		addl	%edx, %eax
  77:fltk-1.3.4-1/png/pngrutil.c **** 
 2042              		.loc 1 77 1 view .LVU652
 2043 0024 C3       		ret
 2044              		.cfi_endproc
 2045              	.LFE43:
 2047              		.section	.text.png_get_int_32,"ax",@progbits
 2048              		.p2align 4
 2049              		.globl	png_get_int_32
 2051              	png_get_int_32:
 2052              	.LVL242:
 2053              	.LFB44:
  86:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
 2054              		.loc 1 86 1 is_stmt 1 view -0
 2055              		.cfi_startproc
  86:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 uval = png_get_uint_32(buf);
 2056              		.loc 1 86 1 is_stmt 0 view .LVU654
 2057 0000 F30F1EFA 		endbr64
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2058              		.loc 1 87 4 is_stmt 1 view .LVU655
 2059              	.LVL243:
  88:fltk-1.3.4-1/png/pngrutil.c ****       return uval;
 2060              		.loc 1 88 4 view .LVU656
  91:fltk-1.3.4-1/png/pngrutil.c ****    return -(png_int_32)uval;
 2061              		.loc 1 91 4 view .LVU657
  92:fltk-1.3.4-1/png/pngrutil.c **** }
 2062              		.loc 1 92 4 view .LVU658
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2063              		.loc 1 87 23 is_stmt 0 view .LVU659
 2064 0004 0FB607   		movzbl	(%rdi), %eax
 2065              	.LVL244:
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2066              		.loc 1 87 23 view .LVU660
 2067 0007 0FB65703 		movzbl	3(%rdi), %edx
 2068 000b C1E018   		sall	$24, %eax
 2069              	.LVL245:
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2070              		.loc 1 87 23 view .LVU661
 2071 000e 89C1     		movl	%eax, %ecx
 2072 0010 0FB64701 		movzbl	1(%rdi), %eax
 2073 0014 C1E010   		sall	$16, %eax
 2074 0017 01C8     		addl	%ecx, %eax
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2075              		.loc 1 87 16 view .LVU662
 2076 0019 01C2     		addl	%eax, %edx
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2077              		.loc 1 87 23 view .LVU663
 2078 001b 0FB64702 		movzbl	2(%rdi), %eax
 2079              	.LVL246:
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2080              		.loc 1 87 23 view .LVU664
 2081 001f C1E008   		sall	$8, %eax
 2082              	.LVL247:
  87:fltk-1.3.4-1/png/pngrutil.c ****    if ((uval & 0x80000000) == 0) /* non-negative */
 2083              		.loc 1 87 16 view .LVU665
 2084 0022 01D0     		addl	%edx, %eax
  93:fltk-1.3.4-1/png/pngrutil.c **** 
 2085              		.loc 1 93 1 view .LVU666
 2086 0024 C3       		ret
 2087              		.cfi_endproc
 2088              	.LFE44:
 2090              		.section	.text.png_get_uint_16,"ax",@progbits
 2091              		.p2align 4
 2092              		.globl	png_get_uint_16
 2094              	png_get_uint_16:
 2095              	.LVL248:
 2096              	.LFB45:
  98:fltk-1.3.4-1/png/pngrutil.c ****    /* ANSI-C requires an int value to accomodate at least 16 bits so this
 2097              		.loc 1 98 1 is_stmt 1 view -0
 2098              		.cfi_startproc
  98:fltk-1.3.4-1/png/pngrutil.c ****    /* ANSI-C requires an int value to accomodate at least 16 bits so this
 2099              		.loc 1 98 1 is_stmt 0 view .LVU668
 2100 0000 F30F1EFA 		endbr64
 104:fltk-1.3.4-1/png/pngrutil.c ****        ((unsigned int)(*buf) << 8) +
 2101              		.loc 1 104 4 is_stmt 1 view .LVU669
 2102              	.LVL249:
 108:fltk-1.3.4-1/png/pngrutil.c **** }
 2103              		.loc 1 108 4 view .LVU670
 105:fltk-1.3.4-1/png/pngrutil.c ****        ((unsigned int)(*(buf + 1)));
 2104              		.loc 1 105 9 is_stmt 0 view .LVU671
 2105 0004 0FB607   		movzbl	(%rdi), %eax
 106:fltk-1.3.4-1/png/pngrutil.c **** 
 2106              		.loc 1 106 9 view .LVU672
 2107 0007 0FB65701 		movzbl	1(%rdi), %edx
 105:fltk-1.3.4-1/png/pngrutil.c ****        ((unsigned int)(*(buf + 1)));
 2108              		.loc 1 105 30 view .LVU673
 2109 000b C1E008   		sall	$8, %eax
 104:fltk-1.3.4-1/png/pngrutil.c ****        ((unsigned int)(*buf) << 8) +
 2110              		.loc 1 104 17 view .LVU674
 2111 000e 01D0     		addl	%edx, %eax
 2112              	.LVL250:
 109:fltk-1.3.4-1/png/pngrutil.c **** 
 2113              		.loc 1 109 1 view .LVU675
 2114 0010 C3       		ret
 2115              		.cfi_endproc
 2116              	.LFE45:
 2118              		.section	.rodata.png_read_sig.str1.1,"aMS",@progbits,1
 2119              	.LC6:
 2120 0000 4E6F7420 		.string	"Not a PNG file"
 2120      6120504E 
 2120      47206669 
 2120      6C6500
 2121              		.section	.rodata.png_read_sig.str1.8,"aMS",@progbits,1
 2122              		.align 8
 2123              	.LC7:
 2124 0000 504E4720 		.string	"PNG file corrupted by ASCII conversion"
 2124      66696C65 
 2124      20636F72 
 2124      72757074 
 2124      65642062 
 2125              		.section	.text.png_read_sig,"ax",@progbits
 2126              		.p2align 4
 2127              		.globl	png_read_sig
 2129              	png_read_sig:
 2130              	.LVL251:
 2131              	.LFB46:
 116:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t num_checked, num_to_check;
 2132              		.loc 1 116 1 is_stmt 1 view -0
 2133              		.cfi_startproc
 116:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t num_checked, num_to_check;
 2134              		.loc 1 116 1 is_stmt 0 view .LVU677
 2135 0000 F30F1EFA 		endbr64
 117:fltk-1.3.4-1/png/pngrutil.c **** 
 2136              		.loc 1 117 4 is_stmt 1 view .LVU678
 120:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2137              		.loc 1 120 4 view .LVU679
 116:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t num_checked, num_to_check;
 2138              		.loc 1 116 1 is_stmt 0 view .LVU680
 2139 0004 4157     		pushq	%r15
 2140              		.cfi_def_cfa_offset 16
 2141              		.cfi_offset 15, -16
 2142 0006 4156     		pushq	%r14
 2143              		.cfi_def_cfa_offset 24
 2144              		.cfi_offset 14, -24
 2145 0008 4155     		pushq	%r13
 2146              		.cfi_def_cfa_offset 32
 2147              		.cfi_offset 13, -32
 2148 000a 4154     		pushq	%r12
 2149              		.cfi_def_cfa_offset 40
 2150              		.cfi_offset 12, -40
 2151 000c 55       		pushq	%rbp
 2152              		.cfi_def_cfa_offset 48
 2153              		.cfi_offset 6, -48
 120:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2154              		.loc 1 120 15 view .LVU681
 2155 000d 440FB6AF 		movzbl	637(%rdi), %r13d
 2155      7D020000 
 120:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2156              		.loc 1 120 7 view .LVU682
 2157 0015 4180FD07 		cmpb	$7, %r13b
 2158 0019 760D     		jbe	.L176
 2159              	.LVL252:
 2160              	.L166:
 144:fltk-1.3.4-1/png/pngrutil.c **** 
 2161              		.loc 1 144 1 view .LVU683
 2162 001b 5D       		popq	%rbp
 2163              		.cfi_remember_state
 2164              		.cfi_def_cfa_offset 40
 2165 001c 415C     		popq	%r12
 2166              		.cfi_def_cfa_offset 32
 2167 001e 415D     		popq	%r13
 2168              		.cfi_def_cfa_offset 24
 2169 0020 415E     		popq	%r14
 2170              		.cfi_def_cfa_offset 16
 2171 0022 415F     		popq	%r15
 2172              		.cfi_def_cfa_offset 8
 2173 0024 C3       		ret
 2174              	.LVL253:
 2175              		.p2align 4,,10
 2176 0025 0F1F00   		.p2align 3
 2177              	.L176:
 2178              		.cfi_restore_state
 123:fltk-1.3.4-1/png/pngrutil.c ****    num_to_check = 8 - num_checked;
 2179              		.loc 1 123 16 view .LVU684
 2180 0028 450FB6F5 		movzbl	%r13b, %r14d
 124:fltk-1.3.4-1/png/pngrutil.c **** 
 2181              		.loc 1 124 17 view .LVU685
 2182 002c 41BF0800 		movl	$8, %r15d
 2182      0000
 2183 0032 4889FD   		movq	%rdi, %rbp
 2184 0035 4989F4   		movq	%rsi, %r12
 123:fltk-1.3.4-1/png/pngrutil.c ****    num_to_check = 8 - num_checked;
 2185              		.loc 1 123 4 is_stmt 1 view .LVU686
 2186              	.LVL254:
 124:fltk-1.3.4-1/png/pngrutil.c **** 
 2187              		.loc 1 124 4 view .LVU687
 124:fltk-1.3.4-1/png/pngrutil.c **** 
 2188              		.loc 1 124 17 is_stmt 0 view .LVU688
 2189 0038 4D29F7   		subq	%r14, %r15
 2190              	.LVL255:
 127:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2191              		.loc 1 127 4 is_stmt 1 view .LVU689
 131:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->sig_bytes = 8;
 2192              		.loc 1 131 4 is_stmt 0 view .LVU690
 2193 003b 4A8D7436 		leaq	44(%rsi,%r14), %rsi
 2193      2C
 2194              	.LVL256:
 134:fltk-1.3.4-1/png/pngrutil.c ****    {
 2195              		.loc 1 134 28 view .LVU691
 2196 0040 4983C42C 		addq	$44, %r12
 2197              	.LVL257:
 127:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2198              		.loc 1 127 22 view .LVU692
 2199 0044 C787AC04 		movl	$17, 1196(%rdi)
 2199      00001100 
 2199      0000
 131:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->sig_bytes = 8;
 2200              		.loc 1 131 4 is_stmt 1 view .LVU693
 2201 004e 4C89FA   		movq	%r15, %rdx
 2202 0051 E8000000 		call	png_read_data@PLT
 2202      00
 2203              	.LVL258:
 132:fltk-1.3.4-1/png/pngrutil.c **** 
 2204              		.loc 1 132 4 view .LVU694
 134:fltk-1.3.4-1/png/pngrutil.c ****    {
 2205              		.loc 1 134 8 is_stmt 0 view .LVU695
 2206 0056 4C89FA   		movq	%r15, %rdx
 2207 0059 4C89F6   		movq	%r14, %rsi
 2208 005c 4C89E7   		movq	%r12, %rdi
 132:fltk-1.3.4-1/png/pngrutil.c **** 
 2209              		.loc 1 132 23 view .LVU696
 2210 005f C6857D02 		movb	$8, 637(%rbp)
 2210      000008
 134:fltk-1.3.4-1/png/pngrutil.c ****    {
 2211              		.loc 1 134 4 is_stmt 1 view .LVU697
 134:fltk-1.3.4-1/png/pngrutil.c ****    {
 2212              		.loc 1 134 8 is_stmt 0 view .LVU698
 2213 0066 E8000000 		call	png_sig_cmp@PLT
 2213      00
 2214              	.LVL259:
 134:fltk-1.3.4-1/png/pngrutil.c ****    {
 2215              		.loc 1 134 7 view .LVU699
 2216 006b 85C0     		testl	%eax, %eax
 2217 006d 7431     		je	.L169
 136:fltk-1.3.4-1/png/pngrutil.c ****           png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4))
 2218              		.loc 1 136 7 is_stmt 1 view .LVU700
 136:fltk-1.3.4-1/png/pngrutil.c ****           png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4))
 2219              		.loc 1 136 10 is_stmt 0 view .LVU701
 2220 006f 4180FD03 		cmpb	$3, %r13b
 2221 0073 7717     		ja	.L170
 137:fltk-1.3.4-1/png/pngrutil.c ****          png_error(png_ptr, "Not a PNG file");
 2222              		.loc 1 137 11 discriminator 1 view .LVU702
 2223 0075 BA040000 		movl	$4, %edx
 2223      00
 2224 007a 4C89F6   		movq	%r14, %rsi
 2225 007d 4C89E7   		movq	%r12, %rdi
 2226 0080 4C29F2   		subq	%r14, %rdx
 2227 0083 E8000000 		call	png_sig_cmp@PLT
 2227      00
 2228              	.LVL260:
 136:fltk-1.3.4-1/png/pngrutil.c ****           png_sig_cmp(info_ptr->signature, num_checked, num_to_check - 4))
 2229              		.loc 1 136 27 discriminator 1 view .LVU703
 2230 0088 85C0     		testl	%eax, %eax
 2231 008a 7534     		jne	.L177
 2232              	.L170:
 140:fltk-1.3.4-1/png/pngrutil.c ****    }
 2233              		.loc 1 140 10 is_stmt 1 view .LVU704
 2234 008c 488D3500 		leaq	.LC7(%rip), %rsi
 2234      000000
 2235 0093 4889EF   		movq	%rbp, %rdi
 2236 0096 E8000000 		call	png_error@PLT
 2236      00
 2237              	.LVL261:
 2238 009b 0F1F4400 		.p2align 4,,10
 2238      00
 2239              		.p2align 3
 2240              	.L169:
 142:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_HAVE_PNG_SIGNATURE;
 2241              		.loc 1 142 4 view .LVU705
 142:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_HAVE_PNG_SIGNATURE;
 2242              		.loc 1 142 7 is_stmt 0 view .LVU706
 2243 00a0 4180FD02 		cmpb	$2, %r13b
 2244 00a4 0F8771FF 		ja	.L166
 2244      FFFF
 143:fltk-1.3.4-1/png/pngrutil.c **** }
 2245              		.loc 1 143 7 is_stmt 1 view .LVU707
 143:fltk-1.3.4-1/png/pngrutil.c **** }
 2246              		.loc 1 143 21 is_stmt 0 view .LVU708
 2247 00aa 818D2C01 		orl	$4096, 300(%rbp)
 2247      00000010 
 2247      0000
 144:fltk-1.3.4-1/png/pngrutil.c **** 
 2248              		.loc 1 144 1 view .LVU709
 2249 00b4 5D       		popq	%rbp
 2250              		.cfi_remember_state
 2251              		.cfi_def_cfa_offset 40
 2252              	.LVL262:
 144:fltk-1.3.4-1/png/pngrutil.c **** 
 2253              		.loc 1 144 1 view .LVU710
 2254 00b5 415C     		popq	%r12
 2255              		.cfi_def_cfa_offset 32
 2256              	.LVL263:
 144:fltk-1.3.4-1/png/pngrutil.c **** 
 2257              		.loc 1 144 1 view .LVU711
 2258 00b7 415D     		popq	%r13
 2259              		.cfi_def_cfa_offset 24
 2260 00b9 415E     		popq	%r14
 2261              		.cfi_def_cfa_offset 16
 2262              	.LVL264:
 144:fltk-1.3.4-1/png/pngrutil.c **** 
 2263              		.loc 1 144 1 view .LVU712
 2264 00bb 415F     		popq	%r15
 2265              		.cfi_def_cfa_offset 8
 2266              	.LVL265:
 144:fltk-1.3.4-1/png/pngrutil.c **** 
 2267              		.loc 1 144 1 view .LVU713
 2268 00bd C3       		ret
 2269              	.LVL266:
 2270 00be 6690     		.p2align 4,,10
 2271              		.p2align 3
 2272              	.L177:
 2273              		.cfi_restore_state
 138:fltk-1.3.4-1/png/pngrutil.c ****       else
 2274              		.loc 1 138 10 is_stmt 1 view .LVU714
 2275 00c0 488D3500 		leaq	.LC6(%rip), %rsi
 2275      000000
 2276 00c7 4889EF   		movq	%rbp, %rdi
 2277 00ca E8000000 		call	png_error@PLT
 2277      00
 2278              	.LVL267:
 2279              		.cfi_endproc
 2280              	.LFE46:
 2282              		.section	.text.png_crc_read,"ax",@progbits
 2283              		.p2align 4
 2284              		.globl	png_crc_read
 2286              	png_crc_read:
 2287              	.LVL268:
 2288              	.LFB48:
 188:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr == NULL)
 2289              		.loc 1 188 1 view -0
 2290              		.cfi_startproc
 188:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr == NULL)
 2291              		.loc 1 188 1 is_stmt 0 view .LVU716
 2292 0000 F30F1EFA 		endbr64
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2293              		.loc 1 189 4 is_stmt 1 view .LVU717
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2294              		.loc 1 189 7 is_stmt 0 view .LVU718
 2295 0004 4885FF   		testq	%rdi, %rdi
 2296 0007 7407     		je	.L178
 2297 0009 E9000000 		jmp	png_crc_read.part.0
 2297      00
 2298              	.LVL269:
 2299 000e 6690     		.p2align 4,,10
 2300              		.p2align 3
 2301              	.L178:
 194:fltk-1.3.4-1/png/pngrutil.c **** 
 2302              		.loc 1 194 1 view .LVU719
 2303 0010 C3       		ret
 2304              		.cfi_endproc
 2305              	.LFE48:
 2307              		.section	.text.png_crc_error,"ax",@progbits
 2308              		.p2align 4
 2309              		.globl	png_crc_error
 2311              	png_crc_error:
 2312              	.LVL270:
 2313              	.LFB50:
 243:fltk-1.3.4-1/png/pngrutil.c ****    png_byte crc_bytes[4];
 2314              		.loc 1 243 1 is_stmt 1 view -0
 2315              		.cfi_startproc
 243:fltk-1.3.4-1/png/pngrutil.c ****    png_byte crc_bytes[4];
 2316              		.loc 1 243 1 is_stmt 0 view .LVU721
 2317 0000 F30F1EFA 		endbr64
 2318 0004 55       		pushq	%rbp
 2319              		.cfi_def_cfa_offset 16
 2320              		.cfi_offset 6, -16
 2321 0005 4889FD   		movq	%rdi, %rbp
 2322 0008 4883EC10 		subq	$16, %rsp
 2323              		.cfi_def_cfa_offset 32
 243:fltk-1.3.4-1/png/pngrutil.c ****    png_byte crc_bytes[4];
 2324              		.loc 1 243 1 view .LVU722
 2325 000c 64488B04 		movq	%fs:40, %rax
 2325      25280000 
 2325      00
 2326 0015 48894424 		movq	%rax, 8(%rsp)
 2326      08
 2327 001a 31C0     		xorl	%eax, %eax
 244:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 crc;
 2328              		.loc 1 244 4 is_stmt 1 view .LVU723
 245:fltk-1.3.4-1/png/pngrutil.c ****    int need_crc = 1;
 2329              		.loc 1 245 4 view .LVU724
 246:fltk-1.3.4-1/png/pngrutil.c **** 
 2330              		.loc 1 246 4 view .LVU725
 2331              	.LVL271:
 248:fltk-1.3.4-1/png/pngrutil.c ****    {
 2332              		.loc 1 248 4 view .LVU726
 2333 001c 8B873001 		movl	304(%rdi), %eax
 2333      0000
 248:fltk-1.3.4-1/png/pngrutil.c ****    {
 2334              		.loc 1 248 7 is_stmt 0 view .LVU727
 2335 0022 F6871B02 		testb	$32, 539(%rdi)
 2335      000020
 2336 0029 7475     		je	.L181
 250:fltk-1.3.4-1/png/pngrutil.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 2337              		.loc 1 250 7 is_stmt 1 view .LVU728
 250:fltk-1.3.4-1/png/pngrutil.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 2338              		.loc 1 250 27 is_stmt 0 view .LVU729
 2339 002b 25000300 		andl	$768, %eax
 2339      00
 250:fltk-1.3.4-1/png/pngrutil.c ****           (PNG_FLAG_CRC_ANCILLARY_USE | PNG_FLAG_CRC_ANCILLARY_NOWARN))
 2340              		.loc 1 250 10 view .LVU730
 2341 0030 3D000300 		cmpl	$768, %eax
 2341      00
 2342 0035 746E     		je	.L182
 2343              	.L184:
 262:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2344              		.loc 1 262 4 is_stmt 1 view .LVU731
 266:fltk-1.3.4-1/png/pngrutil.c **** 
 2345              		.loc 1 266 4 is_stmt 0 view .LVU732
 2346 0037 BA040000 		movl	$4, %edx
 2346      00
 2347 003c 488D7424 		leaq	4(%rsp), %rsi
 2347      04
 2348 0041 4889EF   		movq	%rbp, %rdi
 2349              	.LVL272:
 262:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2350              		.loc 1 262 22 view .LVU733
 2351 0044 C785AC04 		movl	$129, 1196(%rbp)
 2351      00008100 
 2351      0000
 266:fltk-1.3.4-1/png/pngrutil.c **** 
 2352              		.loc 1 266 4 is_stmt 1 view .LVU734
 2353 004e E8000000 		call	png_read_data@PLT
 2353      00
 2354              	.LVL273:
 268:fltk-1.3.4-1/png/pngrutil.c ****    {
 2355              		.loc 1 268 4 view .LVU735
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2356              		.loc 1 270 7 view .LVU736
 271:fltk-1.3.4-1/png/pngrutil.c ****    }
 2357              		.loc 1 271 7 view .LVU737
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2358              		.loc 1 270 13 is_stmt 0 view .LVU738
 2359 0053 0FB64424 		movzbl	4(%rsp), %eax
 2359      04
 2360              	.LVL274:
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2361              		.loc 1 270 13 view .LVU739
 2362 0058 0FB65424 		movzbl	7(%rsp), %edx
 2362      07
 2363 005d C1E018   		sall	$24, %eax
 2364              	.LVL275:
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2365              		.loc 1 270 13 view .LVU740
 2366 0060 89C1     		movl	%eax, %ecx
 2367 0062 0FB64424 		movzbl	5(%rsp), %eax
 2367      05
 2368 0067 C1E010   		sall	$16, %eax
 2369 006a 01C8     		addl	%ecx, %eax
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2370              		.loc 1 270 11 view .LVU741
 2371 006c 01C2     		addl	%eax, %edx
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2372              		.loc 1 270 13 view .LVU742
 2373 006e 0FB64424 		movzbl	6(%rsp), %eax
 2373      06
 2374              	.LVL276:
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2375              		.loc 1 270 13 view .LVU743
 2376 0073 C1E008   		sall	$8, %eax
 2377              	.LVL277:
 270:fltk-1.3.4-1/png/pngrutil.c ****       return ((int)(crc != png_ptr->crc));
 2378              		.loc 1 270 11 view .LVU744
 2379 0076 01D0     		addl	%edx, %eax
 271:fltk-1.3.4-1/png/pngrutil.c ****    }
 2380              		.loc 1 271 15 view .LVU745
 2381 0078 3B855C02 		cmpl	604(%rbp), %eax
 2381      0000
 2382 007e 0F95C0   		setne	%al
 2383 0081 0FB6C0   		movzbl	%al, %eax
 2384              	.LVL278:
 2385              	.L180:
 276:fltk-1.3.4-1/png/pngrutil.c **** 
 2386              		.loc 1 276 1 view .LVU746
 2387 0084 488B4C24 		movq	8(%rsp), %rcx
 2387      08
 2388 0089 6448330C 		xorq	%fs:40, %rcx
 2388      25280000 
 2388      00
 2389 0092 7531     		jne	.L190
 2390 0094 4883C410 		addq	$16, %rsp
 2391              		.cfi_remember_state
 2392              		.cfi_def_cfa_offset 16
 2393 0098 5D       		popq	%rbp
 2394              		.cfi_def_cfa_offset 8
 2395              	.LVL279:
 276:fltk-1.3.4-1/png/pngrutil.c **** 
 2396              		.loc 1 276 1 view .LVU747
 2397 0099 C3       		ret
 2398              	.LVL280:
 2399 009a 660F1F44 		.p2align 4,,10
 2399      0000
 2400              		.p2align 3
 2401              	.L181:
 2402              		.cfi_restore_state
 257:fltk-1.3.4-1/png/pngrutil.c ****          need_crc = 0;
 2403              		.loc 1 257 7 is_stmt 1 view .LVU748
 257:fltk-1.3.4-1/png/pngrutil.c ****          need_crc = 0;
 2404              		.loc 1 257 10 is_stmt 0 view .LVU749
 2405 00a0 F6C408   		testb	$8, %ah
 2406 00a3 7492     		je	.L184
 2407              	.L182:
 252:fltk-1.3.4-1/png/pngrutil.c ****    }
 2408              		.loc 1 252 10 is_stmt 1 view .LVU750
 2409              	.LVL281:
 262:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2410              		.loc 1 262 4 view .LVU751
 266:fltk-1.3.4-1/png/pngrutil.c **** 
 2411              		.loc 1 266 4 is_stmt 0 view .LVU752
 2412 00a5 488D7424 		leaq	4(%rsp), %rsi
 2412      04
 2413 00aa BA040000 		movl	$4, %edx
 2413      00
 2414 00af 4889EF   		movq	%rbp, %rdi
 2415              	.LVL282:
 262:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2416              		.loc 1 262 22 view .LVU753
 2417 00b2 C785AC04 		movl	$129, 1196(%rbp)
 2417      00008100 
 2417      0000
 266:fltk-1.3.4-1/png/pngrutil.c **** 
 2418              		.loc 1 266 4 is_stmt 1 view .LVU754
 2419 00bc E8000000 		call	png_read_data@PLT
 2419      00
 2420              	.LVL283:
 268:fltk-1.3.4-1/png/pngrutil.c ****    {
 2421              		.loc 1 268 4 view .LVU755
 275:fltk-1.3.4-1/png/pngrutil.c **** }
 2422              		.loc 1 275 14 is_stmt 0 view .LVU756
 2423 00c1 31C0     		xorl	%eax, %eax
 2424 00c3 EBBF     		jmp	.L180
 2425              	.LVL284:
 2426              	.L190:
 276:fltk-1.3.4-1/png/pngrutil.c **** 
 2427              		.loc 1 276 1 view .LVU757
 2428 00c5 E8000000 		call	__stack_chk_fail@PLT
 2428      00
 2429              	.LVL285:
 2430              		.cfi_endproc
 2431              	.LFE50:
 2433              		.section	.rodata.png_crc_finish.str1.1,"aMS",@progbits,1
 2434              	.LC8:
 2435 0000 43524320 		.string	"CRC error"
 2435      6572726F 
 2435      7200
 2436              		.section	.text.png_crc_finish,"ax",@progbits
 2437              		.p2align 4
 2438              		.globl	png_crc_finish
 2440              	png_crc_finish:
 2441              	.LVL286:
 2442              	.LFB49:
 203:fltk-1.3.4-1/png/pngrutil.c ****    /* The size of the local buffer for inflate is a good guess as to a
 2443              		.loc 1 203 1 is_stmt 1 view -0
 2444              		.cfi_startproc
 203:fltk-1.3.4-1/png/pngrutil.c ****    /* The size of the local buffer for inflate is a good guess as to a
 2445              		.loc 1 203 1 is_stmt 0 view .LVU759
 2446 0000 F30F1EFA 		endbr64
 2447 0004 4154     		pushq	%r12
 2448              		.cfi_def_cfa_offset 16
 2449              		.cfi_offset 12, -16
 2450 0006 55       		pushq	%rbp
 2451              		.cfi_def_cfa_offset 24
 2452              		.cfi_offset 6, -24
 2453 0007 4889FD   		movq	%rdi, %rbp
 2454 000a 53       		pushq	%rbx
 2455              		.cfi_def_cfa_offset 32
 2456              		.cfi_offset 3, -32
 2457 000b 4881EC10 		subq	$1040, %rsp
 2457      040000
 2458              		.cfi_def_cfa_offset 1072
 203:fltk-1.3.4-1/png/pngrutil.c ****    /* The size of the local buffer for inflate is a good guess as to a
 2459              		.loc 1 203 1 view .LVU760
 2460 0012 64488B04 		movq	%fs:40, %rax
 2460      25280000 
 2460      00
 2461 001b 48898424 		movq	%rax, 1032(%rsp)
 2461      08040000 
 2462 0023 31C0     		xorl	%eax, %eax
 207:fltk-1.3.4-1/png/pngrutil.c ****    {
 2463              		.loc 1 207 4 is_stmt 1 view .LVU761
 207:fltk-1.3.4-1/png/pngrutil.c ****    {
 2464              		.loc 1 207 10 view .LVU762
 2465 0025 85F6     		testl	%esi, %esi
 2466 0027 744C     		je	.L193
 2467 0029 4189F4   		movl	%esi, %r12d
 2468 002c 4889E3   		movq	%rsp, %rbx
 2469 002f EB28     		jmp	.L192
 2470              	.LVL287:
 2471              		.p2align 4,,10
 2472 0031 0F1F8000 		.p2align 3
 2472      000000
 2473              	.L215:
 2474              	.LBB199:
 215:fltk-1.3.4-1/png/pngrutil.c **** 
 2475              		.loc 1 215 7 view .LVU763
 215:fltk-1.3.4-1/png/pngrutil.c **** 
 2476              		.loc 1 215 12 is_stmt 0 view .LVU764
 2477 0038 4181EC00 		subl	$1024, %r12d
 2477      040000
 2478              	.LVL288:
 217:fltk-1.3.4-1/png/pngrutil.c ****    }
 2479              		.loc 1 217 7 is_stmt 1 view .LVU765
 2480              	.LBB200:
 2481              	.LBI200:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 2482              		.loc 1 187 1 view .LVU766
 2483              	.LBB201:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2484              		.loc 1 189 4 view .LVU767
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2485              		.loc 1 189 7 is_stmt 0 view .LVU768
 2486 003f 4885ED   		testq	%rbp, %rbp
 2487 0042 7410     		je	.L195
 2488 0044 BA000400 		movl	$1024, %edx
 2488      00
 2489 0049 4889DE   		movq	%rbx, %rsi
 2490 004c 4889EF   		movq	%rbp, %rdi
 2491 004f E8000000 		call	png_crc_read.part.0
 2491      00
 2492              	.LVL289:
 2493              	.L195:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2494              		.loc 1 189 7 view .LVU769
 2495              	.LBE201:
 2496              	.LBE200:
 2497              	.LBE199:
 207:fltk-1.3.4-1/png/pngrutil.c ****    {
 2498              		.loc 1 207 10 is_stmt 1 view .LVU770
 2499 0054 4585E4   		testl	%r12d, %r12d
 2500 0057 741C     		je	.L193
 2501              	.LVL290:
 2502              	.L192:
 2503              	.LBB204:
 209:fltk-1.3.4-1/png/pngrutil.c ****       png_byte tmpbuf[PNG_INFLATE_BUF_SIZE];
 2504              		.loc 1 209 7 view .LVU771
 210:fltk-1.3.4-1/png/pngrutil.c **** 
 2505              		.loc 1 210 7 view .LVU772
 212:fltk-1.3.4-1/png/pngrutil.c ****       if (len > skip)
 2506              		.loc 1 212 7 view .LVU773
 213:fltk-1.3.4-1/png/pngrutil.c ****          len = skip;
 2507              		.loc 1 213 7 view .LVU774
 213:fltk-1.3.4-1/png/pngrutil.c ****          len = skip;
 2508              		.loc 1 213 10 is_stmt 0 view .LVU775
 2509 0059 4181FCFF 		cmpl	$1023, %r12d
 2509      030000
 2510 0060 77D6     		ja	.L215
 2511              	.LVL291:
 215:fltk-1.3.4-1/png/pngrutil.c **** 
 2512              		.loc 1 215 7 is_stmt 1 view .LVU776
 217:fltk-1.3.4-1/png/pngrutil.c ****    }
 2513              		.loc 1 217 7 view .LVU777
 2514              	.LBB203:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 2515              		.loc 1 187 1 view .LVU778
 2516              	.LBB202:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2517              		.loc 1 189 4 view .LVU779
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2518              		.loc 1 189 7 is_stmt 0 view .LVU780
 2519 0062 4885ED   		testq	%rbp, %rbp
 2520 0065 740E     		je	.L193
 2521 0067 4889E6   		movq	%rsp, %rsi
 2522 006a 4489E2   		movl	%r12d, %edx
 2523 006d 4889EF   		movq	%rbp, %rdi
 2524 0070 E8000000 		call	png_crc_read.part.0
 2524      00
 2525              	.LVL292:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2526              		.loc 1 189 7 view .LVU781
 2527              	.LBE202:
 2528              	.LBE203:
 2529              	.LBE204:
 207:fltk-1.3.4-1/png/pngrutil.c ****    {
 2530              		.loc 1 207 10 is_stmt 1 view .LVU782
 2531              	.L193:
 220:fltk-1.3.4-1/png/pngrutil.c ****    {
 2532              		.loc 1 220 4 view .LVU783
 220:fltk-1.3.4-1/png/pngrutil.c ****    {
 2533              		.loc 1 220 8 is_stmt 0 view .LVU784
 2534 0075 4889EF   		movq	%rbp, %rdi
 2535 0078 E8000000 		call	png_crc_error
 2535      00
 2536              	.LVL293:
 220:fltk-1.3.4-1/png/pngrutil.c ****    {
 2537              		.loc 1 220 7 view .LVU785
 2538 007d 85C0     		testl	%eax, %eax
 2539 007f 742D     		je	.L191
 2540              	.LVL294:
 2541              	.LBB205:
 2542              	.LBI205:
 202:fltk-1.3.4-1/png/pngrutil.c **** {
 2543              		.loc 1 202 1 is_stmt 1 view .LVU786
 2544              	.LBB206:
 222:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_NOWARN) == 0 :
 2545              		.loc 1 222 7 view .LVU787
 2546 0081 8B853001 		movl	304(%rbp), %eax
 2546      0000
 222:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_NOWARN) == 0 :
 2547              		.loc 1 222 11 is_stmt 0 view .LVU788
 2548 0087 F6851B02 		testb	$32, 539(%rbp)
 2548      000020
 2549 008e 7540     		jne	.L216
 2550 0090 C1E80A   		shrl	$10, %eax
 2551 0093 83E001   		andl	$1, %eax
 2552              	.L199:
 226:fltk-1.3.4-1/png/pngrutil.c ****       }
 2553              		.loc 1 226 10 view .LVU789
 2554 0096 488D3500 		leaq	.LC8(%rip), %rsi
 2554      000000
 2555 009d 4889EF   		movq	%rbp, %rdi
 222:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_NOWARN) == 0 :
 2556              		.loc 1 222 10 view .LVU790
 2557 00a0 84C0     		testb	%al, %al
 2558 00a2 7437     		je	.L200
 2559              	.LVL295:
 226:fltk-1.3.4-1/png/pngrutil.c ****       }
 2560              		.loc 1 226 10 is_stmt 1 view .LVU791
 2561 00a4 E8000000 		call	png_chunk_warning@PLT
 2561      00
 2562              	.LVL296:
 232:fltk-1.3.4-1/png/pngrutil.c ****    }
 2563              		.loc 1 232 7 view .LVU792
 226:fltk-1.3.4-1/png/pngrutil.c ****       }
 2564              		.loc 1 226 10 is_stmt 0 view .LVU793
 2565 00a9 B8010000 		movl	$1, %eax
 2565      00
 2566              	.L191:
 226:fltk-1.3.4-1/png/pngrutil.c ****       }
 2567              		.loc 1 226 10 view .LVU794
 2568              	.LBE206:
 2569              	.LBE205:
 236:fltk-1.3.4-1/png/pngrutil.c **** 
 2570              		.loc 1 236 1 view .LVU795
 2571 00ae 488B8C24 		movq	1032(%rsp), %rcx
 2571      08040000 
 2572 00b6 6448330C 		xorq	%fs:40, %rcx
 2572      25280000 
 2572      00
 2573 00bf 751F     		jne	.L217
 2574 00c1 4881C410 		addq	$1040, %rsp
 2574      040000
 2575              		.cfi_remember_state
 2576              		.cfi_def_cfa_offset 32
 2577 00c8 5B       		popq	%rbx
 2578              		.cfi_def_cfa_offset 24
 2579 00c9 5D       		popq	%rbp
 2580              		.cfi_def_cfa_offset 16
 2581              	.LVL297:
 236:fltk-1.3.4-1/png/pngrutil.c **** 
 2582              		.loc 1 236 1 view .LVU796
 2583 00ca 415C     		popq	%r12
 2584              		.cfi_def_cfa_offset 8
 2585 00cc C3       		ret
 2586              	.LVL298:
 2587 00cd 0F1F00   		.p2align 4,,10
 2588              		.p2align 3
 2589              	.L216:
 2590              		.cfi_restore_state
 2591              	.LBB208:
 2592              	.LBB207:
 222:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->flags & PNG_FLAG_CRC_ANCILLARY_NOWARN) == 0 :
 2593              		.loc 1 222 11 view .LVU797
 2594 00d0 C1E809   		shrl	$9, %eax
 2595 00d3 83F001   		xorl	$1, %eax
 2596 00d6 83E001   		andl	$1, %eax
 2597 00d9 EBBB     		jmp	.L199
 2598              	.LVL299:
 2599              	.L200:
 230:fltk-1.3.4-1/png/pngrutil.c **** 
 2600              		.loc 1 230 10 is_stmt 1 view .LVU798
 2601 00db E8000000 		call	png_chunk_error@PLT
 2601      00
 2602              	.LVL300:
 2603              	.L217:
 230:fltk-1.3.4-1/png/pngrutil.c **** 
 2604              		.loc 1 230 10 is_stmt 0 view .LVU799
 2605              	.LBE207:
 2606              	.LBE208:
 236:fltk-1.3.4-1/png/pngrutil.c **** 
 2607              		.loc 1 236 1 view .LVU800
 2608 00e0 E8000000 		call	__stack_chk_fail@PLT
 2608      00
 2609              	.LVL301:
 2610              		.cfi_endproc
 2611              	.LFE49:
 2613              		.section	.rodata.png_cache_unknown_chunk.str1.8,"aMS",@progbits,1
 2614              		.align 8
 2615              	.LC9:
 2616 0000 756E6B6E 		.string	"unknown chunk exceeds memory limits"
 2616      6F776E20 
 2616      6368756E 
 2616      6B206578 
 2616      63656564 
 2617              		.section	.text.png_cache_unknown_chunk,"ax",@progbits
 2618              		.p2align 4
 2620              	png_cache_unknown_chunk:
 2621              	.LVL302:
 2622              	.LFB76:
2707:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t limit = PNG_SIZE_MAX;
 2623              		.loc 1 2707 1 is_stmt 1 view -0
 2624              		.cfi_startproc
2708:fltk-1.3.4-1/png/pngrutil.c **** 
 2625              		.loc 1 2708 4 view .LVU802
2710:fltk-1.3.4-1/png/pngrutil.c ****    {
 2626              		.loc 1 2710 4 view .LVU803
2707:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t limit = PNG_SIZE_MAX;
 2627              		.loc 1 2707 1 is_stmt 0 view .LVU804
 2628 0000 4154     		pushq	%r12
 2629              		.cfi_def_cfa_offset 16
 2630              		.cfi_offset 12, -16
 2631 0002 4189F4   		movl	%esi, %r12d
 2632 0005 55       		pushq	%rbp
 2633              		.cfi_def_cfa_offset 24
 2634              		.cfi_offset 6, -24
 2635 0006 4889FD   		movq	%rdi, %rbp
 2636 0009 4883EC08 		subq	$8, %rsp
 2637              		.cfi_def_cfa_offset 32
2710:fltk-1.3.4-1/png/pngrutil.c ****    {
 2638              		.loc 1 2710 30 view .LVU805
 2639 000d 488BB778 		movq	1144(%rdi), %rsi
 2639      040000
 2640              	.LVL303:
2710:fltk-1.3.4-1/png/pngrutil.c ****    {
 2641              		.loc 1 2710 7 view .LVU806
 2642 0014 4885F6   		testq	%rsi, %rsi
 2643 0017 7410     		je	.L219
2712:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->unknown_chunk.data = NULL;
 2644              		.loc 1 2712 7 is_stmt 1 view .LVU807
 2645 0019 E8000000 		call	png_free@PLT
 2645      00
 2646              	.LVL304:
2713:fltk-1.3.4-1/png/pngrutil.c ****    }
 2647              		.loc 1 2713 7 view .LVU808
2713:fltk-1.3.4-1/png/pngrutil.c ****    }
 2648              		.loc 1 2713 35 is_stmt 0 view .LVU809
 2649 001e 48C78578 		movq	$0, 1144(%rbp)
 2649      04000000 
 2649      000000
 2650              	.L219:
2717:fltk-1.3.4-1/png/pngrutil.c ****           png_ptr->user_chunk_malloc_max < limit)
 2651              		.loc 1 2717 7 is_stmt 1 view .LVU810
2717:fltk-1.3.4-1/png/pngrutil.c ****           png_ptr->user_chunk_malloc_max < limit)
 2652              		.loc 1 2717 18 is_stmt 0 view .LVU811
 2653 0029 488B8568 		movq	1128(%rbp), %rax
 2653      040000
 2654 0030 4489E6   		movl	%r12d, %esi
2717:fltk-1.3.4-1/png/pngrutil.c ****           png_ptr->user_chunk_malloc_max < limit)
 2655              		.loc 1 2717 46 view .LVU812
 2656 0033 488D50FF 		leaq	-1(%rax), %rdx
 2657 0037 4883FAFD 		cmpq	$-3, %rdx
 2658 003b 7653     		jbe	.L235
 2659              	.LVL305:
 2660              	.L220:
2728:fltk-1.3.4-1/png/pngrutil.c ****       /* The following is safe because of the PNG_SIZE_MAX init above */
 2661              		.loc 1 2728 7 is_stmt 1 view .LVU813
 2662 003d 8B851802 		movl	536(%rbp), %eax
 2662      0000
 2663 0043 C6857404 		movb	$0, 1140(%rbp)
 2663      000000
2730:fltk-1.3.4-1/png/pngrutil.c ****       /* 'mode' is a flag array, only the bottom four bits matter here */
 2664              		.loc 1 2730 7 view .LVU814
2730:fltk-1.3.4-1/png/pngrutil.c ****       /* 'mode' is a flag array, only the bottom four bits matter here */
 2665              		.loc 1 2730 35 is_stmt 0 view .LVU815
 2666 004a 4889B580 		movq	%rsi, 1152(%rbp)
 2666      040000
2732:fltk-1.3.4-1/png/pngrutil.c **** 
 2667              		.loc 1 2732 7 is_stmt 1 view .LVU816
 2668 0051 0FC8     		bswap	%eax
2728:fltk-1.3.4-1/png/pngrutil.c ****       /* The following is safe because of the PNG_SIZE_MAX init above */
 2669              		.loc 1 2728 7 is_stmt 0 view .LVU817
 2670 0053 89857004 		movl	%eax, 1136(%rbp)
 2670      0000
2732:fltk-1.3.4-1/png/pngrutil.c **** 
 2671              		.loc 1 2732 41 view .LVU818
 2672 0059 8B852C01 		movl	300(%rbp), %eax
 2672      0000
 2673 005f 88858804 		movb	%al, 1160(%rbp)
 2673      0000
2734:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->unknown_chunk.data = NULL;
 2674              		.loc 1 2734 7 is_stmt 1 view .LVU819
2734:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->unknown_chunk.data = NULL;
 2675              		.loc 1 2734 10 is_stmt 0 view .LVU820
 2676 0065 4585E4   		testl	%r12d, %r12d
 2677 0068 7556     		jne	.L222
2735:fltk-1.3.4-1/png/pngrutil.c **** 
 2678              		.loc 1 2735 10 is_stmt 1 view .LVU821
2735:fltk-1.3.4-1/png/pngrutil.c **** 
 2679              		.loc 1 2735 38 is_stmt 0 view .LVU822
 2680 006a 48C78578 		movq	$0, 1144(%rbp)
 2680      04000000 
 2680      000000
2745:fltk-1.3.4-1/png/pngrutil.c ****    {
 2681              		.loc 1 2745 4 is_stmt 1 view .LVU823
 2682              	.L223:
2757:fltk-1.3.4-1/png/pngrutil.c ****       return 1;
 2683              		.loc 1 2757 7 view .LVU824
 2684 0075 4889EF   		movq	%rbp, %rdi
 2685 0078 31F6     		xorl	%esi, %esi
 2686 007a E8000000 		call	png_crc_finish
 2686      00
 2687              	.LVL306:
2758:fltk-1.3.4-1/png/pngrutil.c ****    }
 2688              		.loc 1 2758 7 view .LVU825
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2689              		.loc 1 2760 1 is_stmt 0 view .LVU826
 2690 007f 4883C408 		addq	$8, %rsp
 2691              		.cfi_remember_state
 2692              		.cfi_def_cfa_offset 24
2758:fltk-1.3.4-1/png/pngrutil.c ****    }
 2693              		.loc 1 2758 14 view .LVU827
 2694 0083 B8010000 		movl	$1, %eax
 2694      00
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2695              		.loc 1 2760 1 view .LVU828
 2696 0088 5D       		popq	%rbp
 2697              		.cfi_def_cfa_offset 16
 2698              	.LVL307:
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2699              		.loc 1 2760 1 view .LVU829
 2700 0089 415C     		popq	%r12
 2701              		.cfi_def_cfa_offset 8
 2702              	.LVL308:
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2703              		.loc 1 2760 1 view .LVU830
 2704 008b C3       		ret
 2705              	.LVL309:
 2706 008c 0F1F4000 		.p2align 4,,10
 2707              		.p2align 3
 2708              	.L235:
 2709              		.cfi_restore_state
2719:fltk-1.3.4-1/png/pngrutil.c **** 
 2710              		.loc 1 2719 10 is_stmt 1 view .LVU831
2726:fltk-1.3.4-1/png/pngrutil.c ****    {
 2711              		.loc 1 2726 4 view .LVU832
2726:fltk-1.3.4-1/png/pngrutil.c ****    {
 2712              		.loc 1 2726 7 is_stmt 0 view .LVU833
 2713 0090 4839F0   		cmpq	%rsi, %rax
 2714 0093 73A8     		jnb	.L220
2745:fltk-1.3.4-1/png/pngrutil.c ****    {
 2715              		.loc 1 2745 4 is_stmt 1 view .LVU834
2745:fltk-1.3.4-1/png/pngrutil.c ****    {
 2716              		.loc 1 2745 30 is_stmt 0 view .LVU835
 2717 0095 488BB578 		movq	1144(%rbp), %rsi
 2717      040000
2745:fltk-1.3.4-1/png/pngrutil.c ****    {
 2718              		.loc 1 2745 7 view .LVU836
 2719 009c 4885F6   		testq	%rsi, %rsi
 2720 009f 7417     		je	.L236
2755:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_read(png_ptr, png_ptr->unknown_chunk.data, length);
 2721              		.loc 1 2755 7 is_stmt 1 view .LVU837
2755:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_read(png_ptr, png_ptr->unknown_chunk.data, length);
 2722              		.loc 1 2755 10 is_stmt 0 view .LVU838
 2723 00a1 4585E4   		testl	%r12d, %r12d
 2724 00a4 74CF     		je	.L223
 2725              	.LVL310:
 2726              	.L224:
2756:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, 0);
 2727              		.loc 1 2756 10 is_stmt 1 view .LVU839
 2728              	.LBB209:
 2729              	.LBI209:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 2730              		.loc 1 187 1 view .LVU840
 2731              	.LBB210:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2732              		.loc 1 189 4 view .LVU841
 2733 00a6 4489E2   		movl	%r12d, %edx
 2734 00a9 4889EF   		movq	%rbp, %rdi
 2735 00ac E8000000 		call	png_crc_read.part.0
 2735      00
 2736              	.LVL311:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2737              		.loc 1 189 4 is_stmt 0 view .LVU842
 2738 00b1 EBC2     		jmp	.L223
 2739              	.LVL312:
 2740              		.p2align 4,,10
 2741 00b3 0F1F4400 		.p2align 3
 2741      00
 2742              	.L236:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2743              		.loc 1 189 4 view .LVU843
 2744              	.LBE210:
 2745              	.LBE209:
2745:fltk-1.3.4-1/png/pngrutil.c ****    {
 2746              		.loc 1 2745 44 discriminator 1 view .LVU844
 2747 00b8 4585E4   		testl	%r12d, %r12d
 2748 00bb 74B8     		je	.L223
 2749 00bd EB18     		jmp	.L227
 2750              	.LVL313:
 2751 00bf 90       		.p2align 4,,10
 2752              		.p2align 3
 2753              	.L222:
2740:fltk-1.3.4-1/png/pngrutil.c ****             png_malloc_warn(png_ptr, length));
 2754              		.loc 1 2740 10 is_stmt 1 view .LVU845
2740:fltk-1.3.4-1/png/pngrutil.c ****             png_malloc_warn(png_ptr, length));
 2755              		.loc 1 2740 40 is_stmt 0 view .LVU846
 2756 00c0 4889EF   		movq	%rbp, %rdi
 2757 00c3 E8000000 		call	png_malloc_warn@PLT
 2757      00
 2758              	.LVL314:
2740:fltk-1.3.4-1/png/pngrutil.c ****             png_malloc_warn(png_ptr, length));
 2759              		.loc 1 2740 38 view .LVU847
 2760 00c8 48898578 		movq	%rax, 1144(%rbp)
 2760      040000
2745:fltk-1.3.4-1/png/pngrutil.c ****    {
 2761              		.loc 1 2745 4 is_stmt 1 view .LVU848
2740:fltk-1.3.4-1/png/pngrutil.c ****             png_malloc_warn(png_ptr, length));
 2762              		.loc 1 2740 40 is_stmt 0 view .LVU849
 2763 00cf 4889C6   		movq	%rax, %rsi
2745:fltk-1.3.4-1/png/pngrutil.c ****    {
 2764              		.loc 1 2745 7 view .LVU850
 2765 00d2 4885C0   		testq	%rax, %rax
 2766 00d5 75CF     		jne	.L224
 2767              	.L227:
2748:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "unknown chunk exceeds memory limits");
 2768              		.loc 1 2748 7 is_stmt 1 view .LVU851
 2769 00d7 4489E6   		movl	%r12d, %esi
 2770 00da 4889EF   		movq	%rbp, %rdi
 2771 00dd E8000000 		call	png_crc_finish
 2771      00
 2772              	.LVL315:
2749:fltk-1.3.4-1/png/pngrutil.c ****       return 0;
 2773              		.loc 1 2749 7 view .LVU852
 2774 00e2 4889EF   		movq	%rbp, %rdi
 2775 00e5 488D3500 		leaq	.LC9(%rip), %rsi
 2775      000000
 2776 00ec E8000000 		call	png_chunk_benign_error@PLT
 2776      00
 2777              	.LVL316:
2750:fltk-1.3.4-1/png/pngrutil.c ****    }
 2778              		.loc 1 2750 7 view .LVU853
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2779              		.loc 1 2760 1 is_stmt 0 view .LVU854
 2780 00f1 4883C408 		addq	$8, %rsp
 2781              		.cfi_def_cfa_offset 24
2750:fltk-1.3.4-1/png/pngrutil.c ****    }
 2782              		.loc 1 2750 14 view .LVU855
 2783 00f5 31C0     		xorl	%eax, %eax
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2784              		.loc 1 2760 1 view .LVU856
 2785 00f7 5D       		popq	%rbp
 2786              		.cfi_def_cfa_offset 16
 2787              	.LVL317:
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2788              		.loc 1 2760 1 view .LVU857
 2789 00f8 415C     		popq	%r12
 2790              		.cfi_def_cfa_offset 8
 2791              	.LVL318:
2760:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_UNKNOWN_CHUNKS */
 2792              		.loc 1 2760 1 view .LVU858
 2793 00fa C3       		ret
 2794              		.cfi_endproc
 2795              	.LFE76:
 2797              		.section	.rodata.png_handle_IHDR.str1.1,"aMS",@progbits,1
 2798              	.LC10:
 2799 0000 6F757420 		.string	"out of place"
 2799      6F662070 
 2799      6C616365 
 2799      00
 2800              	.LC11:
 2801 000d 696E7661 		.string	"invalid"
 2801      6C696400 
 2802              		.section	.text.png_handle_IHDR,"ax",@progbits
 2803              		.p2align 4
 2804              		.globl	png_handle_IHDR
 2806              	png_handle_IHDR:
 2807              	.LVL319:
 2808              	.LFB56:
 794:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[13];
 2809              		.loc 1 794 1 is_stmt 1 view -0
 2810              		.cfi_startproc
 794:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[13];
 2811              		.loc 1 794 1 is_stmt 0 view .LVU860
 2812 0000 F30F1EFA 		endbr64
 2813 0004 4157     		pushq	%r15
 2814              		.cfi_def_cfa_offset 16
 2815              		.cfi_offset 15, -16
 2816 0006 4156     		pushq	%r14
 2817              		.cfi_def_cfa_offset 24
 2818              		.cfi_offset 14, -24
 2819 0008 4155     		pushq	%r13
 2820              		.cfi_def_cfa_offset 32
 2821              		.cfi_offset 13, -32
 2822 000a 4154     		pushq	%r12
 2823              		.cfi_def_cfa_offset 40
 2824              		.cfi_offset 12, -40
 2825 000c 55       		pushq	%rbp
 2826              		.cfi_def_cfa_offset 48
 2827              		.cfi_offset 6, -48
 2828 000d 4889FD   		movq	%rdi, %rbp
 2829 0010 53       		pushq	%rbx
 2830              		.cfi_def_cfa_offset 56
 2831              		.cfi_offset 3, -56
 2832 0011 4883EC28 		subq	$40, %rsp
 2833              		.cfi_def_cfa_offset 96
 794:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[13];
 2834              		.loc 1 794 1 view .LVU861
 2835 0015 64488B04 		movq	%fs:40, %rax
 2835      25280000 
 2835      00
 2836 001e 48894424 		movq	%rax, 24(%rsp)
 2836      18
 2837 0023 31C0     		xorl	%eax, %eax
 795:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 width, height;
 2838              		.loc 1 795 4 is_stmt 1 view .LVU862
 796:fltk-1.3.4-1/png/pngrutil.c ****    int bit_depth, color_type, compression_type, filter_type;
 2839              		.loc 1 796 4 view .LVU863
 797:fltk-1.3.4-1/png/pngrutil.c ****    int interlace_type;
 2840              		.loc 1 797 4 view .LVU864
 798:fltk-1.3.4-1/png/pngrutil.c **** 
 2841              		.loc 1 798 4 view .LVU865
 800:fltk-1.3.4-1/png/pngrutil.c **** 
 2842              		.loc 1 800 4 view .LVU866
 802:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "out of place");
 2843              		.loc 1 802 4 view .LVU867
 802:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "out of place");
 2844              		.loc 1 802 16 is_stmt 0 view .LVU868
 2845 0025 8B872C01 		movl	300(%rdi), %eax
 2845      0000
 802:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "out of place");
 2846              		.loc 1 802 7 view .LVU869
 2847 002b A801     		testb	$1, %al
 2848 002d 0F85C001 		jne	.L248
 2848      0000
 806:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "invalid");
 2849              		.loc 1 806 4 is_stmt 1 view .LVU870
 806:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "invalid");
 2850              		.loc 1 806 7 is_stmt 0 view .LVU871
 2851 0033 83FA0D   		cmpl	$13, %edx
 2852 0036 0F85AB01 		jne	.L249
 2852      0000
 809:fltk-1.3.4-1/png/pngrutil.c **** 
 2853              		.loc 1 809 18 view .LVU872
 2854 003c 83C801   		orl	$1, %eax
 2855              	.LBB211:
 2856              	.LBB212:
 2857 003f 4C8D6C24 		leaq	11(%rsp), %r13
 2857      0B
 2858 0044 BA0D0000 		movl	$13, %edx
 2858      00
 2859              	.LVL320:
 809:fltk-1.3.4-1/png/pngrutil.c **** 
 2860              		.loc 1 809 18 view .LVU873
 2861 0049 4989F4   		movq	%rsi, %r12
 2862              	.LBE212:
 2863              	.LBE211:
 809:fltk-1.3.4-1/png/pngrutil.c **** 
 2864              		.loc 1 809 4 is_stmt 1 view .LVU874
 809:fltk-1.3.4-1/png/pngrutil.c **** 
 2865              		.loc 1 809 18 is_stmt 0 view .LVU875
 2866 004c 89872C01 		movl	%eax, 300(%rdi)
 2866      0000
 811:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_finish(png_ptr, 0);
 2867              		.loc 1 811 4 is_stmt 1 view .LVU876
 2868              	.LVL321:
 2869              	.LBB214:
 2870              	.LBI211:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 2871              		.loc 1 187 1 view .LVU877
 2872              	.LBB213:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2873              		.loc 1 189 4 view .LVU878
 2874 0052 4C89EE   		movq	%r13, %rsi
 2875              	.LVL322:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2876              		.loc 1 189 4 is_stmt 0 view .LVU879
 2877 0055 E8000000 		call	png_crc_read.part.0
 2877      00
 2878              	.LVL323:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 2879              		.loc 1 189 4 view .LVU880
 2880              	.LBE213:
 2881              	.LBE214:
 812:fltk-1.3.4-1/png/pngrutil.c **** 
 2882              		.loc 1 812 4 is_stmt 1 view .LVU881
 2883 005a 31F6     		xorl	%esi, %esi
 2884 005c 4889EF   		movq	%rbp, %rdi
 2885 005f E8000000 		call	png_crc_finish
 2885      00
 2886              	.LVL324:
 814:fltk-1.3.4-1/png/pngrutil.c ****    height = png_get_uint_31(png_ptr, buf + 4);
 2887              		.loc 1 814 4 view .LVU882
 814:fltk-1.3.4-1/png/pngrutil.c ****    height = png_get_uint_31(png_ptr, buf + 4);
 2888              		.loc 1 814 12 is_stmt 0 view .LVU883
 2889 0064 4C89EE   		movq	%r13, %rsi
 2890 0067 4889EF   		movq	%rbp, %rdi
 2891 006a E8000000 		call	png_get_uint_31
 2891      00
 2892              	.LVL325:
 815:fltk-1.3.4-1/png/pngrutil.c ****    bit_depth = buf[8];
 2893              		.loc 1 815 13 view .LVU884
 2894 006f 488D7424 		leaq	15(%rsp), %rsi
 2894      0F
 2895 0074 4889EF   		movq	%rbp, %rdi
 814:fltk-1.3.4-1/png/pngrutil.c ****    height = png_get_uint_31(png_ptr, buf + 4);
 2896              		.loc 1 814 12 view .LVU885
 2897 0077 4189C5   		movl	%eax, %r13d
 2898              	.LVL326:
 815:fltk-1.3.4-1/png/pngrutil.c ****    bit_depth = buf[8];
 2899              		.loc 1 815 4 is_stmt 1 view .LVU886
 815:fltk-1.3.4-1/png/pngrutil.c ****    bit_depth = buf[8];
 2900              		.loc 1 815 13 is_stmt 0 view .LVU887
 2901 007a E8000000 		call	png_get_uint_31
 2901      00
 2902              	.LVL327:
 815:fltk-1.3.4-1/png/pngrutil.c ****    bit_depth = buf[8];
 2903              		.loc 1 815 13 view .LVU888
 2904 007f 440FB75C 		movzwl	19(%rsp), %r11d
 2904      2413
 816:fltk-1.3.4-1/png/pngrutil.c ****    color_type = buf[9];
 2905              		.loc 1 816 19 view .LVU889
 2906 0085 440FB644 		movzbl	19(%rsp), %r8d
 2906      2413
 823:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->height = height;
 2907              		.loc 1 823 19 view .LVU890
 2908 008b 4489ADF8 		movl	%r13d, 504(%rbp)
 2908      010000
 815:fltk-1.3.4-1/png/pngrutil.c ****    bit_depth = buf[8];
 2909              		.loc 1 815 13 view .LVU891
 2910 0092 89C1     		movl	%eax, %ecx
 2911              	.LVL328:
 816:fltk-1.3.4-1/png/pngrutil.c ****    color_type = buf[9];
 2912              		.loc 1 816 4 is_stmt 1 view .LVU892
 818:fltk-1.3.4-1/png/pngrutil.c ****    filter_type = buf[11];
 2913              		.loc 1 818 26 is_stmt 0 view .LVU893
 2914 0094 0FB65424 		movzbl	21(%rsp), %edx
 2914      15
 819:fltk-1.3.4-1/png/pngrutil.c ****    interlace_type = buf[12];
 2915              		.loc 1 819 21 view .LVU894
 2916 0099 0FB67C24 		movzbl	22(%rsp), %edi
 2916      16
 820:fltk-1.3.4-1/png/pngrutil.c **** 
 2917              		.loc 1 820 24 view .LVU895
 2918 009e 0FB64424 		movzbl	23(%rsp), %eax
 2918      17
 2919              	.LVL329:
 817:fltk-1.3.4-1/png/pngrutil.c ****    compression_type = buf[10];
 2920              		.loc 1 817 20 view .LVU896
 2921 00a3 440FB64C 		movzbl	20(%rsp), %r9d
 2921      2414
 2922 00a9 6641C1C3 		rolw	$8, %r11w
 2922      08
 816:fltk-1.3.4-1/png/pngrutil.c ****    color_type = buf[9];
 2923              		.loc 1 816 19 view .LVU897
 2924 00ae 4489C6   		movl	%r8d, %esi
 2925              	.LVL330:
 817:fltk-1.3.4-1/png/pngrutil.c ****    compression_type = buf[10];
 2926              		.loc 1 817 4 is_stmt 1 view .LVU898
 818:fltk-1.3.4-1/png/pngrutil.c ****    filter_type = buf[11];
 2927              		.loc 1 818 4 view .LVU899
 819:fltk-1.3.4-1/png/pngrutil.c ****    interlace_type = buf[12];
 2928              		.loc 1 819 4 view .LVU900
 820:fltk-1.3.4-1/png/pngrutil.c **** 
 2929              		.loc 1 820 4 view .LVU901
 823:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->height = height;
 2930              		.loc 1 823 4 view .LVU902
 824:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->bit_depth = (png_byte)bit_depth;
 2931              		.loc 1 824 4 view .LVU903
 824:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->bit_depth = (png_byte)bit_depth;
 2932              		.loc 1 824 20 is_stmt 0 view .LVU904
 2933 00b1 898DFC01 		movl	%ecx, 508(%rbp)
 2933      0000
 825:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->interlaced = (png_byte)interlace_type;
 2934              		.loc 1 825 4 is_stmt 1 view .LVU905
 826:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->color_type = (png_byte)color_type;
 2935              		.loc 1 826 4 view .LVU906
 826:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->color_type = (png_byte)color_type;
 2936              		.loc 1 826 24 is_stmt 0 view .LVU907
 2937 00b7 88857402 		movb	%al, 628(%rbp)
 2937      0000
 827:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
 2938              		.loc 1 827 4 is_stmt 1 view .LVU908
 827:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_MNG_FEATURES_SUPPORTED
 2939              		.loc 1 827 24 is_stmt 0 view .LVU909
 2940 00bd 6644899D 		movw	%r11w, 631(%rbp)
 2940      77020000 
 829:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2941              		.loc 1 829 4 is_stmt 1 view .LVU910
 829:fltk-1.3.4-1/png/pngrutil.c **** #endif
 2942              		.loc 1 829 25 is_stmt 0 view .LVU911
 2943 00c5 4088BD1C 		movb	%dil, 1052(%rbp)
 2943      040000
 831:fltk-1.3.4-1/png/pngrutil.c **** 
 2944              		.loc 1 831 4 is_stmt 1 view .LVU912
 831:fltk-1.3.4-1/png/pngrutil.c **** 
 2945              		.loc 1 831 30 is_stmt 0 view .LVU913
 2946 00cc 88955804 		movb	%dl, 1112(%rbp)
 2946      0000
 834:fltk-1.3.4-1/png/pngrutil.c ****    {
 2947              		.loc 1 834 4 is_stmt 1 view .LVU914
 2948 00d2 4180F904 		cmpb	$4, %r9b
 2949 00d6 0F84E400 		je	.L240
 2949      0000
 2950 00dc 4180F906 		cmpb	$6, %r9b
 2951 00e0 0F84B200 		je	.L241
 2951      0000
 2952 00e6 4180F902 		cmpb	$2, %r9b
 2953 00ea 0F848000 		je	.L242
 2953      0000
 839:fltk-1.3.4-1/png/pngrutil.c ****          break;
 2954              		.loc 1 839 10 view .LVU915
 839:fltk-1.3.4-1/png/pngrutil.c ****          break;
 2955              		.loc 1 839 28 is_stmt 0 view .LVU916
 2956 00f0 C6857B02 		movb	$1, 635(%rbp)
 2956      000001
 840:fltk-1.3.4-1/png/pngrutil.c **** 
 2957              		.loc 1 840 10 is_stmt 1 view .LVU917
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 2958              		.loc 1 856 4 view .LVU918
 2959 00f7 4589EA   		movl	%r13d, %r10d
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 2960              		.loc 1 856 25 is_stmt 0 view .LVU919
 2961 00fa 4088B57A 		movb	%sil, 634(%rbp)
 2961      020000
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 2962              		.loc 1 857 4 is_stmt 1 view .LVU920
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 2963              		.loc 1 857 24 is_stmt 0 view .LVU921
 2964 0101 4080FE07 		cmpb	$7, %sil
 2965 0105 7759     		ja	.L250
 2966              	.LVL331:
 2967              	.L244:
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 2968              		.loc 1 857 24 discriminator 2 view .LVU922
 2969 0107 400FB6F6 		movzbl	%sil, %esi
 2970 010b 490FAFF2 		imulq	%r10, %rsi
 2971 010f 4883C607 		addq	$7, %rsi
 2972 0113 48C1EE03 		shrq	$3, %rsi
 2973              	.L245:
 861:fltk-1.3.4-1/png/pngrutil.c ****        color_type, interlace_type, compression_type, filter_type);
 2974              		.loc 1 861 4 discriminator 4 view .LVU923
 2975 0117 4883EC08 		subq	$8, %rsp
 2976              		.cfi_def_cfa_offset 104
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 2977              		.loc 1 857 22 discriminator 4 view .LVU924
 2978 011b 4889B508 		movq	%rsi, 520(%rbp)
 2978      020000
 858:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "channels = %d", png_ptr->channels);
 2979              		.loc 1 858 4 is_stmt 1 discriminator 4 view .LVU925
 859:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "rowbytes = %lu", (unsigned long)png_ptr->rowbytes);
 2980              		.loc 1 859 4 discriminator 4 view .LVU926
 860:fltk-1.3.4-1/png/pngrutil.c ****    png_set_IHDR(png_ptr, info_ptr, width, height, bit_depth,
 2981              		.loc 1 860 4 discriminator 4 view .LVU927
 861:fltk-1.3.4-1/png/pngrutil.c ****        color_type, interlace_type, compression_type, filter_type);
 2982              		.loc 1 861 4 discriminator 4 view .LVU928
 2983 0122 4C89E6   		movq	%r12, %rsi
 2984 0125 57       		pushq	%rdi
 2985              		.cfi_def_cfa_offset 112
 2986 0126 4889EF   		movq	%rbp, %rdi
 2987              	.LVL332:
 861:fltk-1.3.4-1/png/pngrutil.c ****        color_type, interlace_type, compression_type, filter_type);
 2988              		.loc 1 861 4 is_stmt 0 discriminator 4 view .LVU929
 2989 0129 52       		pushq	%rdx
 2990              		.cfi_def_cfa_offset 120
 2991              	.LVL333:
 861:fltk-1.3.4-1/png/pngrutil.c ****        color_type, interlace_type, compression_type, filter_type);
 2992              		.loc 1 861 4 discriminator 4 view .LVU930
 2993 012a 4489EA   		movl	%r13d, %edx
 2994              	.LVL334:
 861:fltk-1.3.4-1/png/pngrutil.c ****        color_type, interlace_type, compression_type, filter_type);
 2995              		.loc 1 861 4 discriminator 4 view .LVU931
 2996 012d 50       		pushq	%rax
 2997              		.cfi_def_cfa_offset 128
 2998              	.LVL335:
 861:fltk-1.3.4-1/png/pngrutil.c ****        color_type, interlace_type, compression_type, filter_type);
 2999              		.loc 1 861 4 discriminator 4 view .LVU932
 3000 012e E8000000 		call	png_set_IHDR@PLT
 3000      00
 3001              	.LVL336:
 863:fltk-1.3.4-1/png/pngrutil.c **** 
 3002              		.loc 1 863 1 discriminator 4 view .LVU933
 3003 0133 4883C420 		addq	$32, %rsp
 3004              		.cfi_def_cfa_offset 96
 3005 0137 488B4424 		movq	24(%rsp), %rax
 3005      18
 3006 013c 64483304 		xorq	%fs:40, %rax
 3006      25280000 
 3006      00
 3007 0145 0F859700 		jne	.L251
 3007      0000
 863:fltk-1.3.4-1/png/pngrutil.c **** 
 3008              		.loc 1 863 1 view .LVU934
 3009 014b 4883C428 		addq	$40, %rsp
 3010              		.cfi_remember_state
 3011              		.cfi_def_cfa_offset 56
 3012 014f 5B       		popq	%rbx
 3013              		.cfi_def_cfa_offset 48
 3014 0150 5D       		popq	%rbp
 3015              		.cfi_def_cfa_offset 40
 3016              	.LVL337:
 863:fltk-1.3.4-1/png/pngrutil.c **** 
 3017              		.loc 1 863 1 view .LVU935
 3018 0151 415C     		popq	%r12
 3019              		.cfi_def_cfa_offset 32
 3020              	.LVL338:
 863:fltk-1.3.4-1/png/pngrutil.c **** 
 3021              		.loc 1 863 1 view .LVU936
 3022 0153 415D     		popq	%r13
 3023              		.cfi_def_cfa_offset 24
 3024              	.LVL339:
 863:fltk-1.3.4-1/png/pngrutil.c **** 
 3025              		.loc 1 863 1 view .LVU937
 3026 0155 415E     		popq	%r14
 3027              		.cfi_def_cfa_offset 16
 3028 0157 415F     		popq	%r15
 3029              		.cfi_def_cfa_offset 8
 3030 0159 C3       		ret
 3031              	.LVL340:
 3032 015a 660F1F44 		.p2align 4,,10
 3032      0000
 3033              		.p2align 3
 3034              	.L250:
 3035              		.cfi_restore_state
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 3036              		.loc 1 857 24 discriminator 1 view .LVU938
 3037 0160 40C0EE03 		shrb	$3, %sil
 3038 0164 400FB6F6 		movzbl	%sil, %esi
 3039 0168 490FAFF2 		imulq	%r10, %rsi
 3040 016c EBA9     		jmp	.L245
 3041              	.LVL341:
 3042 016e 6690     		.p2align 4,,10
 3043              		.p2align 3
 3044              	.L242:
 843:fltk-1.3.4-1/png/pngrutil.c ****          break;
 3045              		.loc 1 843 10 is_stmt 1 view .LVU939
 3046 0170 438D3440 		leal	(%r8,%r8,2), %esi
 3047              	.LVL342:
 843:fltk-1.3.4-1/png/pngrutil.c ****          break;
 3048              		.loc 1 843 28 is_stmt 0 view .LVU940
 3049 0174 C6857B02 		movb	$3, 635(%rbp)
 3049      000003
 844:fltk-1.3.4-1/png/pngrutil.c **** 
 3050              		.loc 1 844 10 is_stmt 1 view .LVU941
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 3051              		.loc 1 856 4 view .LVU942
 3052 017b 4589EA   		movl	%r13d, %r10d
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 3053              		.loc 1 856 25 is_stmt 0 view .LVU943
 3054 017e 4088B57A 		movb	%sil, 634(%rbp)
 3054      020000
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 3055              		.loc 1 857 4 is_stmt 1 view .LVU944
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 3056              		.loc 1 857 24 is_stmt 0 view .LVU945
 3057 0185 4080FE07 		cmpb	$7, %sil
 3058 0189 0F8678FF 		jbe	.L244
 3058      FFFF
 3059 018f EBCF     		jmp	.L250
 3060              	.LVL343:
 3061              		.p2align 4,,10
 3062 0191 0F1F8000 		.p2align 3
 3062      000000
 3063              	.L241:
 851:fltk-1.3.4-1/png/pngrutil.c ****          break;
 3064              		.loc 1 851 10 is_stmt 1 view .LVU946
 3065 0198 C1E602   		sall	$2, %esi
 3066              	.LVL344:
 851:fltk-1.3.4-1/png/pngrutil.c ****          break;
 3067              		.loc 1 851 28 is_stmt 0 view .LVU947
 3068 019b C6857B02 		movb	$4, 635(%rbp)
 3068      000004
 852:fltk-1.3.4-1/png/pngrutil.c ****    }
 3069              		.loc 1 852 10 is_stmt 1 view .LVU948
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 3070              		.loc 1 856 4 view .LVU949
 3071 01a2 4589EA   		movl	%r13d, %r10d
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 3072              		.loc 1 856 25 is_stmt 0 view .LVU950
 3073 01a5 4088B57A 		movb	%sil, 634(%rbp)
 3073      020000
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 3074              		.loc 1 857 4 is_stmt 1 view .LVU951
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 3075              		.loc 1 857 24 is_stmt 0 view .LVU952
 3076 01ac 4080FE07 		cmpb	$7, %sil
 3077 01b0 0F8651FF 		jbe	.L244
 3077      FFFF
 3078 01b6 EBA8     		jmp	.L250
 3079              	.LVL345:
 3080 01b8 0F1F8400 		.p2align 4,,10
 3080      00000000 
 3081              		.p2align 3
 3082              	.L240:
 847:fltk-1.3.4-1/png/pngrutil.c ****          break;
 3083              		.loc 1 847 10 is_stmt 1 view .LVU953
 3084 01c0 01F6     		addl	%esi, %esi
 3085              	.LVL346:
 847:fltk-1.3.4-1/png/pngrutil.c ****          break;
 3086              		.loc 1 847 28 is_stmt 0 view .LVU954
 3087 01c2 C6857B02 		movb	$2, 635(%rbp)
 3087      000002
 848:fltk-1.3.4-1/png/pngrutil.c **** 
 3088              		.loc 1 848 10 is_stmt 1 view .LVU955
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 3089              		.loc 1 856 4 view .LVU956
 3090 01c9 4589EA   		movl	%r13d, %r10d
 856:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->rowbytes = PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->width);
 3091              		.loc 1 856 25 is_stmt 0 view .LVU957
 3092 01cc 4088B57A 		movb	%sil, 634(%rbp)
 3092      020000
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 3093              		.loc 1 857 4 is_stmt 1 view .LVU958
 857:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "bit_depth = %d", png_ptr->bit_depth);
 3094              		.loc 1 857 24 is_stmt 0 view .LVU959
 3095 01d3 4080FE07 		cmpb	$7, %sil
 3096 01d7 0F862AFF 		jbe	.L244
 3096      FFFF
 3097 01dd E97EFFFF 		jmp	.L250
 3097      FF
 3098              	.LVL347:
 3099              	.L251:
 863:fltk-1.3.4-1/png/pngrutil.c **** 
 3100              		.loc 1 863 1 view .LVU960
 3101 01e2 E8000000 		call	__stack_chk_fail@PLT
 3101      00
 3102              	.LVL348:
 3103              	.L249:
 807:fltk-1.3.4-1/png/pngrutil.c **** 
 3104              		.loc 1 807 7 is_stmt 1 view .LVU961
 3105 01e7 488D3500 		leaq	.LC11(%rip), %rsi
 3105      000000
 3106              	.LVL349:
 807:fltk-1.3.4-1/png/pngrutil.c **** 
 3107              		.loc 1 807 7 is_stmt 0 view .LVU962
 3108 01ee E8000000 		call	png_chunk_error@PLT
 3108      00
 3109              	.LVL350:
 3110              	.L248:
 803:fltk-1.3.4-1/png/pngrutil.c **** 
 3111              		.loc 1 803 7 is_stmt 1 view .LVU963
 3112 01f3 488D3500 		leaq	.LC10(%rip), %rsi
 3112      000000
 3113              	.LVL351:
 803:fltk-1.3.4-1/png/pngrutil.c **** 
 3114              		.loc 1 803 7 is_stmt 0 view .LVU964
 3115 01fa E8000000 		call	png_chunk_error@PLT
 3115      00
 3116              	.LVL352:
 803:fltk-1.3.4-1/png/pngrutil.c **** 
 3117              		.loc 1 803 7 view .LVU965
 3118              		.cfi_endproc
 3119              	.LFE56:
 3121              		.section	.rodata.png_handle_PLTE.str1.1,"aMS",@progbits,1
 3122              	.LC12:
 3123 0000 6D697373 		.string	"missing IHDR"
 3123      696E6720 
 3123      49484452 
 3123      00
 3124              	.LC13:
 3125 000d 6475706C 		.string	"duplicate"
 3125      69636174 
 3125      6500
 3126              	.LC14:
 3127 0017 69676E6F 		.string	"ignored in grayscale PNG"
 3127      72656420 
 3127      696E2067 
 3127      72617973 
 3127      63616C65 
 3128              	.LC15:
 3129 0030 74524E53 		.string	"tRNS must be after"
 3129      206D7573 
 3129      74206265 
 3129      20616674 
 3129      657200
 3130              	.LC16:
 3131 0043 68495354 		.string	"hIST must be after"
 3131      206D7573 
 3131      74206265 
 3131      20616674 
 3131      657200
 3132              	.LC17:
 3133 0056 624B4744 		.string	"bKGD must be after"
 3133      206D7573 
 3133      74206265 
 3133      20616674 
 3133      657200
 3134              		.section	.text.png_handle_PLTE,"ax",@progbits
 3135              		.p2align 4
 3136              		.globl	png_handle_PLTE
 3138              	png_handle_PLTE:
 3139              	.LVL353:
 3140              	.LFB57:
 868:fltk-1.3.4-1/png/pngrutil.c ****    png_color palette[PNG_MAX_PALETTE_LENGTH];
 3141              		.loc 1 868 1 is_stmt 1 view -0
 3142              		.cfi_startproc
 868:fltk-1.3.4-1/png/pngrutil.c ****    png_color palette[PNG_MAX_PALETTE_LENGTH];
 3143              		.loc 1 868 1 is_stmt 0 view .LVU967
 3144 0000 F30F1EFA 		endbr64
 3145 0004 4157     		pushq	%r15
 3146              		.cfi_def_cfa_offset 16
 3147              		.cfi_offset 15, -16
 3148 0006 4156     		pushq	%r14
 3149              		.cfi_def_cfa_offset 24
 3150              		.cfi_offset 14, -24
 3151 0008 4155     		pushq	%r13
 3152              		.cfi_def_cfa_offset 32
 3153              		.cfi_offset 13, -32
 3154 000a 4154     		pushq	%r12
 3155              		.cfi_def_cfa_offset 40
 3156              		.cfi_offset 12, -40
 3157 000c 55       		pushq	%rbp
 3158              		.cfi_def_cfa_offset 48
 3159              		.cfi_offset 6, -48
 3160 000d 4889FD   		movq	%rdi, %rbp
 3161 0010 53       		pushq	%rbx
 3162              		.cfi_def_cfa_offset 56
 3163              		.cfi_offset 3, -56
 3164 0011 4881EC28 		subq	$808, %rsp
 3164      030000
 3165              		.cfi_def_cfa_offset 864
 868:fltk-1.3.4-1/png/pngrutil.c ****    png_color palette[PNG_MAX_PALETTE_LENGTH];
 3166              		.loc 1 868 1 view .LVU968
 3167 0018 64488B04 		movq	%fs:40, %rax
 3167      25280000 
 3167      00
 3168 0021 48898424 		movq	%rax, 792(%rsp)
 3168      18030000 
 3169 0029 31C0     		xorl	%eax, %eax
 869:fltk-1.3.4-1/png/pngrutil.c ****    int num, i;
 3170              		.loc 1 869 4 is_stmt 1 view .LVU969
 870:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_POINTER_INDEXING_SUPPORTED
 3171              		.loc 1 870 4 view .LVU970
 872:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3172              		.loc 1 872 4 view .LVU971
 875:fltk-1.3.4-1/png/pngrutil.c **** 
 3173              		.loc 1 875 4 view .LVU972
 877:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3174              		.loc 1 877 4 view .LVU973
 877:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3175              		.loc 1 877 16 is_stmt 0 view .LVU974
 3176 002b 8B872C01 		movl	300(%rdi), %eax
 3176      0000
 877:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3177              		.loc 1 877 7 view .LVU975
 3178 0031 A801     		testb	$1, %al
 3179 0033 0F842702 		je	.L285
 3179      0000
 885:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "duplicate");
 3180              		.loc 1 885 9 is_stmt 1 view .LVU976
 885:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "duplicate");
 3181              		.loc 1 885 12 is_stmt 0 view .LVU977
 3182 0039 A802     		testb	$2, %al
 3183 003b 0F851302 		jne	.L286
 3183      0000
 3184 0041 4989F4   		movq	%rsi, %r12
 3185 0044 89D6     		movl	%edx, %esi
 3186              	.LVL354:
 888:fltk-1.3.4-1/png/pngrutil.c ****    {
 3187              		.loc 1 888 9 is_stmt 1 view .LVU978
 888:fltk-1.3.4-1/png/pngrutil.c ****    {
 3188              		.loc 1 888 12 is_stmt 0 view .LVU979
 3189 0046 A804     		testb	$4, %al
 3190 0048 0F856A01 		jne	.L287
 3190      0000
 898:fltk-1.3.4-1/png/pngrutil.c **** 
 3191              		.loc 1 898 4 is_stmt 1 view .LVU980
 898:fltk-1.3.4-1/png/pngrutil.c **** 
 3192              		.loc 1 898 18 is_stmt 0 view .LVU981
 3193 004e 83C802   		orl	$2, %eax
 3194 0051 89872C01 		movl	%eax, 300(%rdi)
 3194      0000
 900:fltk-1.3.4-1/png/pngrutil.c ****    {
 3195              		.loc 1 900 4 is_stmt 1 view .LVU982
 900:fltk-1.3.4-1/png/pngrutil.c ****    {
 3196              		.loc 1 900 7 is_stmt 0 view .LVU983
 3197 0057 F6877702 		testb	$2, 631(%rdi)
 3197      000002
 3198 005e 0F846C01 		je	.L288
 3198      0000
 915:fltk-1.3.4-1/png/pngrutil.c ****    {
 3199              		.loc 1 915 4 is_stmt 1 view .LVU984
 915:fltk-1.3.4-1/png/pngrutil.c ****    {
 3200              		.loc 1 915 7 is_stmt 0 view .LVU985
 3201 0064 81FA0003 		cmpl	$768, %edx
 3201      0000
 3202 006a 0F87F800 		ja	.L258
 3202      0000
 3203 0070 69C2ABAA 		imull	$-1431655765, %edx, %eax
 3203      AAAA
 915:fltk-1.3.4-1/png/pngrutil.c ****    {
 3204              		.loc 1 915 42 discriminator 1 view .LVU986
 3205 0076 3D555555 		cmpl	$1431655765, %eax
 3205      55
 3206 007b 0F87E700 		ja	.L258
 3206      0000
 929:fltk-1.3.4-1/png/pngrutil.c **** 
 3207              		.loc 1 929 4 is_stmt 1 view .LVU987
 929:fltk-1.3.4-1/png/pngrutil.c **** 
 3208              		.loc 1 929 8 is_stmt 0 view .LVU988
 3209 0081 4189D5   		movl	%edx, %r13d
 3210 0084 B8ABAAAA 		movl	$2863311531, %eax
 3210      AA
 3211 0089 4C0FAFE8 		imulq	%rax, %r13
 3212 008d 49C1ED21 		shrq	$33, %r13
 3213              	.LVL355:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3214              		.loc 1 932 4 is_stmt 1 view .LVU989
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3215              		.loc 1 932 35 view .LVU990
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3216              		.loc 1 932 4 is_stmt 0 view .LVU991
 3217 0091 83FA02   		cmpl	$2, %edx
 3218 0094 0F867601 		jbe	.L289
 3218      0000
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3219              		.loc 1 932 24 view .LVU992
 3220 009a 488D5C24 		leaq	16(%rsp), %rbx
 3220      10
 3221              	.LVL356:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3222              		.loc 1 932 11 view .LVU993
 3223 009f 4531FF   		xorl	%r15d, %r15d
 3224 00a2 4C8DB424 		leaq	789(%rsp), %r14
 3224      15030000 
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3225              		.loc 1 932 24 view .LVU994
 3226 00aa 48895C24 		movq	%rbx, 8(%rsp)
 3226      08
 3227              	.LVL357:
 3228 00af 90       		.p2align 4,,10
 3229              		.p2align 3
 3230              	.L261:
 3231              	.LBB215:
 934:fltk-1.3.4-1/png/pngrutil.c **** 
 3232              		.loc 1 934 7 is_stmt 1 view .LVU995
 936:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->red = buf[0];
 3233              		.loc 1 936 7 view .LVU996
 3234              	.LBB216:
 3235              	.LBI216:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 3236              		.loc 1 187 1 view .LVU997
 3237              	.LBB217:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3238              		.loc 1 189 4 view .LVU998
 3239 00b0 BA030000 		movl	$3, %edx
 3239      00
 3240 00b5 4C89F6   		movq	%r14, %rsi
 3241 00b8 4889EF   		movq	%rbp, %rdi
 3242              	.LBE217:
 3243              	.LBE216:
 3244              	.LBE215:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3245              		.loc 1 932 45 is_stmt 0 view .LVU999
 3246 00bb 4183C701 		addl	$1, %r15d
 3247              	.LVL358:
 3248              	.LBB220:
 3249              	.LBB219:
 3250              	.LBB218:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3251              		.loc 1 932 45 view .LVU1000
 3252 00bf E8000000 		call	png_crc_read.part.0
 3252      00
 3253              	.LVL359:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3254              		.loc 1 932 45 view .LVU1001
 3255              	.LBE218:
 3256              	.LBE219:
 937:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->green = buf[1];
 3257              		.loc 1 937 7 is_stmt 1 view .LVU1002
 937:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->green = buf[1];
 3258              		.loc 1 937 20 is_stmt 0 view .LVU1003
 3259 00c4 0FB69424 		movzbl	789(%rsp), %edx
 3259      15030000 
 3260              	.LBE220:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3261              		.loc 1 932 56 view .LVU1004
 3262 00cc 4883C303 		addq	$3, %rbx
 3263              	.LVL360:
 3264              	.LBB221:
 937:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->green = buf[1];
 3265              		.loc 1 937 20 view .LVU1005
 3266 00d0 8853FD   		movb	%dl, -3(%rbx)
 938:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->blue = buf[2];
 3267              		.loc 1 938 7 is_stmt 1 view .LVU1006
 938:fltk-1.3.4-1/png/pngrutil.c ****       pal_ptr->blue = buf[2];
 3268              		.loc 1 938 22 is_stmt 0 view .LVU1007
 3269 00d3 0FB69424 		movzbl	790(%rsp), %edx
 3269      16030000 
 3270 00db 8853FE   		movb	%dl, -2(%rbx)
 939:fltk-1.3.4-1/png/pngrutil.c ****    }
 3271              		.loc 1 939 7 is_stmt 1 view .LVU1008
 939:fltk-1.3.4-1/png/pngrutil.c ****    }
 3272              		.loc 1 939 21 is_stmt 0 view .LVU1009
 3273 00de 0FB69424 		movzbl	791(%rsp), %edx
 3273      17030000 
 3274 00e6 8853FF   		movb	%dl, -1(%rbx)
 3275              	.LBE221:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3276              		.loc 1 932 44 is_stmt 1 view .LVU1010
 3277              	.LVL361:
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3278              		.loc 1 932 35 view .LVU1011
 932:fltk-1.3.4-1/png/pngrutil.c ****    {
 3279              		.loc 1 932 4 is_stmt 0 view .LVU1012
 3280 00e9 4539FD   		cmpl	%r15d, %r13d
 3281 00ec 7FC2     		jg	.L261
 3282              	.LVL362:
 3283              	.L264:
 963:fltk-1.3.4-1/png/pngrutil.c ****    }
 3284              		.loc 1 963 7 is_stmt 1 view .LVU1013
 3285 00ee 31F6     		xorl	%esi, %esi
 3286 00f0 4889EF   		movq	%rbp, %rdi
 3287 00f3 E8000000 		call	png_crc_finish
 3287      00
 3288              	.LVL363:
1001:fltk-1.3.4-1/png/pngrutil.c **** 
 3289              		.loc 1 1001 4 view .LVU1014
 3290 00f8 488B5424 		movq	8(%rsp), %rdx
 3290      08
 3291 00fd 4489E9   		movl	%r13d, %ecx
 3292 0100 4C89E6   		movq	%r12, %rsi
 3293 0103 4889EF   		movq	%rbp, %rdi
 3294 0106 E8000000 		call	png_set_PLTE@PLT
 3294      00
 3295              	.LVL364:
1013:fltk-1.3.4-1/png/pngrutil.c ****        (info_ptr != NULL && (info_ptr->valid & PNG_INFO_tRNS) != 0))
 3296              		.loc 1 1013 4 view .LVU1015
1013:fltk-1.3.4-1/png/pngrutil.c ****        (info_ptr != NULL && (info_ptr->valid & PNG_INFO_tRNS) != 0))
 3297              		.loc 1 1013 7 is_stmt 0 view .LVU1016
 3298 010b 6683BD70 		cmpw	$0, 624(%rbp)
 3298      02000000 
 3299 0113 0F84D700 		je	.L290
 3299      0000
1020:fltk-1.3.4-1/png/pngrutil.c **** 
 3300              		.loc 1 1020 7 is_stmt 1 view .LVU1017
1020:fltk-1.3.4-1/png/pngrutil.c **** 
 3301              		.loc 1 1020 26 is_stmt 0 view .LVU1018
 3302 0119 31C0     		xorl	%eax, %eax
 3303 011b 66898570 		movw	%ax, 624(%rbp)
 3303      020000
1022:fltk-1.3.4-1/png/pngrutil.c ****          info_ptr->num_trans = 0;
 3304              		.loc 1 1022 7 is_stmt 1 view .LVU1019
1022:fltk-1.3.4-1/png/pngrutil.c ****          info_ptr->num_trans = 0;
 3305              		.loc 1 1022 10 is_stmt 0 view .LVU1020
 3306 0122 4D85E4   		testq	%r12, %r12
 3307 0125 0F841501 		je	.L291
 3307      0000
 3308              	.L267:
1023:fltk-1.3.4-1/png/pngrutil.c **** 
 3309              		.loc 1 1023 10 is_stmt 1 view .LVU1021
1023:fltk-1.3.4-1/png/pngrutil.c **** 
 3310              		.loc 1 1023 30 is_stmt 0 view .LVU1022
 3311 012b 31D2     		xorl	%edx, %edx
1025:fltk-1.3.4-1/png/pngrutil.c ****    }
 3312              		.loc 1 1025 7 view .LVU1023
 3313 012d 488D3500 		leaq	.LC15(%rip), %rsi
 3313      000000
 3314 0134 4889EF   		movq	%rbp, %rdi
1023:fltk-1.3.4-1/png/pngrutil.c **** 
 3315              		.loc 1 1023 30 view .LVU1024
 3316 0137 66418954 		movw	%dx, 34(%r12)
 3316      2422
1025:fltk-1.3.4-1/png/pngrutil.c ****    }
 3317              		.loc 1 1025 7 is_stmt 1 view .LVU1025
 3318 013d E8000000 		call	png_chunk_benign_error@PLT
 3318      00
 3319              	.LVL365:
1030:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "hIST must be after");
 3320              		.loc 1 1030 4 view .LVU1026
 3321 0142 418B4424 		movl	8(%r12), %eax
 3321      08
 3322              	.L266:
1030:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "hIST must be after");
 3323              		.loc 1 1030 25 is_stmt 0 discriminator 1 view .LVU1027
 3324 0147 A840     		testb	$64, %al
 3325 0149 0F85D100 		jne	.L292
 3325      0000
 3326              	.L269:
1035:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "bKGD must be after");
 3327              		.loc 1 1035 4 is_stmt 1 view .LVU1028
1035:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "bKGD must be after");
 3328              		.loc 1 1035 25 is_stmt 0 view .LVU1029
 3329 014f A820     		testb	$32, %al
 3330 0151 7439     		je	.L252
1036:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3331              		.loc 1 1036 7 is_stmt 1 view .LVU1030
 3332 0153 488D3500 		leaq	.LC17(%rip), %rsi
 3332      000000
 3333 015a 4889EF   		movq	%rbp, %rdi
 3334 015d E8000000 		call	png_chunk_benign_error@PLT
 3334      00
 3335              	.LVL366:
 3336 0162 EB28     		jmp	.L252
 3337              	.LVL367:
 3338              		.p2align 4,,10
 3339 0164 0F1F4000 		.p2align 3
 3340              	.L258:
 917:fltk-1.3.4-1/png/pngrutil.c **** 
 3341              		.loc 1 917 7 view .LVU1031
 3342 0168 4889EF   		movq	%rbp, %rdi
 3343              	.LVL368:
 917:fltk-1.3.4-1/png/pngrutil.c **** 
 3344              		.loc 1 917 7 is_stmt 0 view .LVU1032
 3345 016b E8000000 		call	png_crc_finish
 3345      00
 3346              	.LVL369:
 919:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
 3347              		.loc 1 919 7 is_stmt 1 view .LVU1033
 919:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
 3348              		.loc 1 919 10 is_stmt 0 view .LVU1034
 3349 0170 80BD7702 		cmpb	$3, 631(%rbp)
 3349      000003
 920:fltk-1.3.4-1/png/pngrutil.c **** 
 3350              		.loc 1 920 10 view .LVU1035
 3351 0177 488D3500 		leaq	.LC11(%rip), %rsi
 3351      000000
 3352 017e 4889EF   		movq	%rbp, %rdi
 919:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
 3353              		.loc 1 919 10 view .LVU1036
 3354 0181 0F84E500 		je	.L260
 3354      0000
 3355              	.LVL370:
 3356              	.L284:
1025:fltk-1.3.4-1/png/pngrutil.c ****    }
 3357              		.loc 1 1025 7 view .LVU1037
 3358 0187 E8000000 		call	png_chunk_benign_error@PLT
 3358      00
 3359              	.LVL371:
1030:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "hIST must be after");
 3360              		.loc 1 1030 4 is_stmt 1 view .LVU1038
 3361              	.L252:
1038:fltk-1.3.4-1/png/pngrutil.c **** 
 3362              		.loc 1 1038 1 is_stmt 0 view .LVU1039
 3363 018c 488B8424 		movq	792(%rsp), %rax
 3363      18030000 
 3364 0194 64483304 		xorq	%fs:40, %rax
 3364      25280000 
 3364      00
 3365 019d 0F85AC00 		jne	.L293
 3365      0000
 3366 01a3 4881C428 		addq	$808, %rsp
 3366      030000
 3367              		.cfi_remember_state
 3368              		.cfi_def_cfa_offset 56
 3369 01aa 5B       		popq	%rbx
 3370              		.cfi_def_cfa_offset 48
 3371 01ab 5D       		popq	%rbp
 3372              		.cfi_def_cfa_offset 40
 3373              	.LVL372:
1038:fltk-1.3.4-1/png/pngrutil.c **** 
 3374              		.loc 1 1038 1 view .LVU1040
 3375 01ac 415C     		popq	%r12
 3376              		.cfi_def_cfa_offset 32
 3377              	.LVL373:
1038:fltk-1.3.4-1/png/pngrutil.c **** 
 3378              		.loc 1 1038 1 view .LVU1041
 3379 01ae 415D     		popq	%r13
 3380              		.cfi_def_cfa_offset 24
 3381 01b0 415E     		popq	%r14
 3382              		.cfi_def_cfa_offset 16
 3383 01b2 415F     		popq	%r15
 3384              		.cfi_def_cfa_offset 8
 3385 01b4 C3       		ret
 3386              	.LVL374:
 3387              		.p2align 4,,10
 3388 01b5 0F1F00   		.p2align 3
 3389              	.L287:
 3390              		.cfi_restore_state
 893:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 3391              		.loc 1 893 7 is_stmt 1 view .LVU1042
 3392 01b8 E8000000 		call	png_crc_finish
 3392      00
 3393              	.LVL375:
 894:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3394              		.loc 1 894 7 view .LVU1043
 3395 01bd 488D3500 		leaq	.LC10(%rip), %rsi
 3395      000000
 3396 01c4 4889EF   		movq	%rbp, %rdi
 3397 01c7 E8000000 		call	png_chunk_benign_error@PLT
 3397      00
 3398              	.LVL376:
 895:fltk-1.3.4-1/png/pngrutil.c ****    }
 3399              		.loc 1 895 7 view .LVU1044
 3400 01cc EBBE     		jmp	.L252
 3401              	.LVL377:
 3402 01ce 6690     		.p2align 4,,10
 3403              		.p2align 3
 3404              	.L288:
 902:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "ignored in grayscale PNG");
 3405              		.loc 1 902 7 view .LVU1045
 3406 01d0 E8000000 		call	png_crc_finish
 3406      00
 3407              	.LVL378:
 903:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3408              		.loc 1 903 7 view .LVU1046
 3409 01d5 488D3500 		leaq	.LC14(%rip), %rsi
 3409      000000
 3410 01dc 4889EF   		movq	%rbp, %rdi
 3411 01df E8000000 		call	png_chunk_benign_error@PLT
 3411      00
 3412              	.LVL379:
 904:fltk-1.3.4-1/png/pngrutil.c ****    }
 3413              		.loc 1 904 7 view .LVU1047
 3414 01e4 EBA6     		jmp	.L252
 3415              	.LVL380:
 3416 01e6 662E0F1F 		.p2align 4,,10
 3416      84000000 
 3416      0000
 3417              		.p2align 3
 3418              	.L290:
1013:fltk-1.3.4-1/png/pngrutil.c ****        (info_ptr != NULL && (info_ptr->valid & PNG_INFO_tRNS) != 0))
 3419              		.loc 1 1013 31 is_stmt 0 discriminator 1 view .LVU1048
 3420 01f0 4D85E4   		testq	%r12, %r12
 3421 01f3 7497     		je	.L252
1014:fltk-1.3.4-1/png/pngrutil.c ****    {
 3422              		.loc 1 1014 38 view .LVU1049
 3423 01f5 418B4424 		movl	8(%r12), %eax
 3423      08
1014:fltk-1.3.4-1/png/pngrutil.c ****    {
 3424              		.loc 1 1014 26 view .LVU1050
 3425 01fa A810     		testb	$16, %al
 3426 01fc 0F8445FF 		je	.L266
 3426      FFFF
 3427 0202 E924FFFF 		jmp	.L267
 3427      FF
 3428              	.LVL381:
 3429 0207 660F1F84 		.p2align 4,,10
 3429      00000000 
 3429      00
 3430              		.p2align 3
 3431              	.L289:
1014:fltk-1.3.4-1/png/pngrutil.c ****    {
 3432              		.loc 1 1014 26 view .LVU1051
 3433 0210 488D4424 		leaq	16(%rsp), %rax
 3433      10
 3434              	.LVL382:
1014:fltk-1.3.4-1/png/pngrutil.c ****    {
 3435              		.loc 1 1014 26 view .LVU1052
 3436 0215 48894424 		movq	%rax, 8(%rsp)
 3436      08
 3437 021a E9CFFEFF 		jmp	.L264
 3437      FF
 3438              	.LVL383:
 3439 021f 90       		.p2align 4,,10
 3440              		.p2align 3
 3441              	.L292:
1031:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3442              		.loc 1 1031 7 is_stmt 1 view .LVU1053
 3443 0220 488D3500 		leaq	.LC16(%rip), %rsi
 3443      000000
 3444 0227 4889EF   		movq	%rbp, %rdi
 3445 022a E8000000 		call	png_chunk_benign_error@PLT
 3445      00
 3446              	.LVL384:
 3447 022f 418B4424 		movl	8(%r12), %eax
 3447      08
 3448 0234 E916FFFF 		jmp	.L269
 3448      FF
 3449 0239 0F1F8000 		.p2align 4,,10
 3449      000000
 3450              		.p2align 3
 3451              	.L291:
1025:fltk-1.3.4-1/png/pngrutil.c ****    }
 3452              		.loc 1 1025 7 view .LVU1054
 3453 0240 488D3500 		leaq	.LC15(%rip), %rsi
 3453      000000
 3454 0247 4889EF   		movq	%rbp, %rdi
 3455 024a E938FFFF 		jmp	.L284
 3455      FF
 3456              	.LVL385:
 3457              	.L293:
1038:fltk-1.3.4-1/png/pngrutil.c **** 
 3458              		.loc 1 1038 1 is_stmt 0 view .LVU1055
 3459 024f E8000000 		call	__stack_chk_fail@PLT
 3459      00
 3460              	.LVL386:
 3461              	.L286:
 886:fltk-1.3.4-1/png/pngrutil.c **** 
 3462              		.loc 1 886 7 is_stmt 1 view .LVU1056
 3463 0254 488D3500 		leaq	.LC13(%rip), %rsi
 3463      000000
 3464              	.LVL387:
 886:fltk-1.3.4-1/png/pngrutil.c **** 
 3465              		.loc 1 886 7 is_stmt 0 view .LVU1057
 3466 025b E8000000 		call	png_chunk_error@PLT
 3466      00
 3467              	.LVL388:
 3468              	.L285:
 878:fltk-1.3.4-1/png/pngrutil.c **** 
 3469              		.loc 1 878 7 is_stmt 1 view .LVU1058
 3470 0260 488D3500 		leaq	.LC12(%rip), %rsi
 3470      000000
 3471              	.LVL389:
 878:fltk-1.3.4-1/png/pngrutil.c **** 
 3472              		.loc 1 878 7 is_stmt 0 view .LVU1059
 3473 0267 E8000000 		call	png_chunk_error@PLT
 3473      00
 3474              	.LVL390:
 3475              	.L260:
 923:fltk-1.3.4-1/png/pngrutil.c **** 
 3476              		.loc 1 923 10 is_stmt 1 view .LVU1060
 3477 026c E8000000 		call	png_chunk_error@PLT
 3477      00
 3478              	.LVL391:
 923:fltk-1.3.4-1/png/pngrutil.c **** 
 3479              		.loc 1 923 10 is_stmt 0 view .LVU1061
 3480              		.cfi_endproc
 3481              	.LFE57:
 3483              		.section	.text.png_handle_IEND,"ax",@progbits
 3484              		.p2align 4
 3485              		.globl	png_handle_IEND
 3487              	png_handle_IEND:
 3488              	.LVL392:
 3489              	.LFB58:
1042:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_IEND");
 3490              		.loc 1 1042 1 is_stmt 1 view -0
 3491              		.cfi_startproc
1042:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_IEND");
 3492              		.loc 1 1042 1 is_stmt 0 view .LVU1063
 3493 0000 F30F1EFA 		endbr64
1043:fltk-1.3.4-1/png/pngrutil.c **** 
 3494              		.loc 1 1043 4 is_stmt 1 view .LVU1064
1045:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_IDAT) == 0)
 3495              		.loc 1 1045 4 view .LVU1065
1042:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_handle_IEND");
 3496              		.loc 1 1042 1 is_stmt 0 view .LVU1066
 3497 0004 55       		pushq	%rbp
 3498              		.cfi_def_cfa_offset 16
 3499              		.cfi_offset 6, -16
 3500 0005 4889FD   		movq	%rdi, %rbp
 3501 0008 53       		pushq	%rbx
 3502              		.cfi_def_cfa_offset 24
 3503              		.cfi_offset 3, -24
 3504 0009 89D3     		movl	%edx, %ebx
 3505 000b 4883EC08 		subq	$8, %rsp
 3506              		.cfi_def_cfa_offset 32
1045:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_IDAT) == 0)
 3507              		.loc 1 1045 45 view .LVU1067
 3508 000f 8B872C01 		movl	300(%rdi), %eax
 3508      0000
 3509 0015 89C2     		movl	%eax, %edx
 3510              	.LVL393:
1045:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_IDAT) == 0)
 3511              		.loc 1 1045 45 view .LVU1068
 3512 0017 83E205   		andl	$5, %edx
1045:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_IDAT) == 0)
 3513              		.loc 1 1045 7 view .LVU1069
 3514 001a 83FA05   		cmpl	$5, %edx
 3515 001d 7536     		jne	.L298
1049:fltk-1.3.4-1/png/pngrutil.c **** 
 3516              		.loc 1 1049 4 is_stmt 1 view .LVU1070
1049:fltk-1.3.4-1/png/pngrutil.c **** 
 3517              		.loc 1 1049 18 is_stmt 0 view .LVU1071
 3518 001f 83C818   		orl	$24, %eax
1051:fltk-1.3.4-1/png/pngrutil.c **** 
 3519              		.loc 1 1051 4 view .LVU1072
 3520 0022 89DE     		movl	%ebx, %esi
 3521              	.LVL394:
1049:fltk-1.3.4-1/png/pngrutil.c **** 
 3522              		.loc 1 1049 18 view .LVU1073
 3523 0024 89872C01 		movl	%eax, 300(%rdi)
 3523      0000
1051:fltk-1.3.4-1/png/pngrutil.c **** 
 3524              		.loc 1 1051 4 is_stmt 1 view .LVU1074
 3525 002a E8000000 		call	png_crc_finish
 3525      00
 3526              	.LVL395:
1053:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 3527              		.loc 1 1053 4 view .LVU1075
1053:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 3528              		.loc 1 1053 7 is_stmt 0 view .LVU1076
 3529 002f 85DB     		testl	%ebx, %ebx
 3530 0031 750D     		jne	.L299
1057:fltk-1.3.4-1/png/pngrutil.c **** 
 3531              		.loc 1 1057 1 view .LVU1077
 3532 0033 4883C408 		addq	$8, %rsp
 3533              		.cfi_remember_state
 3534              		.cfi_def_cfa_offset 24
 3535 0037 5B       		popq	%rbx
 3536              		.cfi_def_cfa_offset 16
 3537              	.LVL396:
1057:fltk-1.3.4-1/png/pngrutil.c **** 
 3538              		.loc 1 1057 1 view .LVU1078
 3539 0038 5D       		popq	%rbp
 3540              		.cfi_def_cfa_offset 8
 3541              	.LVL397:
1057:fltk-1.3.4-1/png/pngrutil.c **** 
 3542              		.loc 1 1057 1 view .LVU1079
 3543 0039 C3       		ret
 3544              	.LVL398:
 3545 003a 660F1F44 		.p2align 4,,10
 3545      0000
 3546              		.p2align 3
 3547              	.L299:
 3548              		.cfi_restore_state
1054:fltk-1.3.4-1/png/pngrutil.c **** 
 3549              		.loc 1 1054 7 is_stmt 1 view .LVU1080
1057:fltk-1.3.4-1/png/pngrutil.c **** 
 3550              		.loc 1 1057 1 is_stmt 0 view .LVU1081
 3551 0040 4883C408 		addq	$8, %rsp
 3552              		.cfi_remember_state
 3553              		.cfi_def_cfa_offset 24
1054:fltk-1.3.4-1/png/pngrutil.c **** 
 3554              		.loc 1 1054 7 view .LVU1082
 3555 0044 4889EF   		movq	%rbp, %rdi
 3556 0047 488D3500 		leaq	.LC11(%rip), %rsi
 3556      000000
1057:fltk-1.3.4-1/png/pngrutil.c **** 
 3557              		.loc 1 1057 1 view .LVU1083
 3558 004e 5B       		popq	%rbx
 3559              		.cfi_def_cfa_offset 16
 3560              	.LVL399:
1057:fltk-1.3.4-1/png/pngrutil.c **** 
 3561              		.loc 1 1057 1 view .LVU1084
 3562 004f 5D       		popq	%rbp
 3563              		.cfi_def_cfa_offset 8
 3564              	.LVL400:
1054:fltk-1.3.4-1/png/pngrutil.c **** 
 3565              		.loc 1 1054 7 view .LVU1085
 3566 0050 E9000000 		jmp	png_chunk_benign_error@PLT
 3566      00
 3567              	.LVL401:
 3568              	.L298:
 3569              		.cfi_restore_state
1047:fltk-1.3.4-1/png/pngrutil.c **** 
 3570              		.loc 1 1047 7 is_stmt 1 view .LVU1086
 3571 0055 488D3500 		leaq	.LC10(%rip), %rsi
 3571      000000
 3572              	.LVL402:
1047:fltk-1.3.4-1/png/pngrutil.c **** 
 3573              		.loc 1 1047 7 is_stmt 0 view .LVU1087
 3574 005c E8000000 		call	png_chunk_error@PLT
 3574      00
 3575              	.LVL403:
1047:fltk-1.3.4-1/png/pngrutil.c **** 
 3576              		.loc 1 1047 7 view .LVU1088
 3577              		.cfi_endproc
 3578              	.LFE58:
 3580              		.section	.text.png_handle_gAMA,"ax",@progbits
 3581              		.p2align 4
 3582              		.globl	png_handle_gAMA
 3584              	png_handle_gAMA:
 3585              	.LVL404:
 3586              	.LFB59:
1062:fltk-1.3.4-1/png/pngrutil.c ****    png_fixed_point igamma;
 3587              		.loc 1 1062 1 is_stmt 1 view -0
 3588              		.cfi_startproc
1062:fltk-1.3.4-1/png/pngrutil.c ****    png_fixed_point igamma;
 3589              		.loc 1 1062 1 is_stmt 0 view .LVU1090
 3590 0000 F30F1EFA 		endbr64
 3591 0004 4155     		pushq	%r13
 3592              		.cfi_def_cfa_offset 16
 3593              		.cfi_offset 13, -16
 3594 0006 4154     		pushq	%r12
 3595              		.cfi_def_cfa_offset 24
 3596              		.cfi_offset 12, -24
 3597 0008 55       		pushq	%rbp
 3598              		.cfi_def_cfa_offset 32
 3599              		.cfi_offset 6, -32
 3600 0009 4889FD   		movq	%rdi, %rbp
 3601 000c 4883EC10 		subq	$16, %rsp
 3602              		.cfi_def_cfa_offset 48
1062:fltk-1.3.4-1/png/pngrutil.c ****    png_fixed_point igamma;
 3603              		.loc 1 1062 1 view .LVU1091
 3604 0010 64488B04 		movq	%fs:40, %rax
 3604      25280000 
 3604      00
 3605 0019 48894424 		movq	%rax, 8(%rsp)
 3605      08
 3606 001e 31C0     		xorl	%eax, %eax
1063:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[4];
 3607              		.loc 1 1063 4 is_stmt 1 view .LVU1092
1064:fltk-1.3.4-1/png/pngrutil.c **** 
 3608              		.loc 1 1064 4 view .LVU1093
1066:fltk-1.3.4-1/png/pngrutil.c **** 
 3609              		.loc 1 1066 4 view .LVU1094
1068:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3610              		.loc 1 1068 4 view .LVU1095
1068:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3611              		.loc 1 1068 16 is_stmt 0 view .LVU1096
 3612 0020 8B872C01 		movl	300(%rdi), %eax
 3612      0000
1068:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3613              		.loc 1 1068 7 view .LVU1097
 3614 0026 A801     		testb	$1, %al
 3615 0028 0F84AD00 		je	.L308
 3615      0000
 3616 002e 4989F4   		movq	%rsi, %r12
 3617 0031 89D6     		movl	%edx, %esi
 3618              	.LVL405:
1071:fltk-1.3.4-1/png/pngrutil.c ****    {
 3619              		.loc 1 1071 9 is_stmt 1 view .LVU1098
1071:fltk-1.3.4-1/png/pngrutil.c ****    {
 3620              		.loc 1 1071 12 is_stmt 0 view .LVU1099
 3621 0033 A806     		testb	$6, %al
 3622 0035 0F858500 		jne	.L309
 3622      0000
1078:fltk-1.3.4-1/png/pngrutil.c ****    {
 3623              		.loc 1 1078 4 is_stmt 1 view .LVU1100
1078:fltk-1.3.4-1/png/pngrutil.c ****    {
 3624              		.loc 1 1078 7 is_stmt 0 view .LVU1101
 3625 003b 83FA04   		cmpl	$4, %edx
 3626 003e 7568     		jne	.L310
1085:fltk-1.3.4-1/png/pngrutil.c **** 
 3627              		.loc 1 1085 4 is_stmt 1 view .LVU1102
 3628              	.LVL406:
 3629              	.LBB222:
 3630              	.LBI222:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 3631              		.loc 1 187 1 view .LVU1103
 3632              	.LBB223:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3633              		.loc 1 189 4 view .LVU1104
 3634 0040 4C8D6C24 		leaq	4(%rsp), %r13
 3634      04
 3635              	.LVL407:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3636              		.loc 1 189 4 is_stmt 0 view .LVU1105
 3637 0045 BA040000 		movl	$4, %edx
 3637      00
 3638              	.LVL408:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3639              		.loc 1 189 4 view .LVU1106
 3640 004a 4C89EE   		movq	%r13, %rsi
 3641              	.LVL409:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3642              		.loc 1 189 4 view .LVU1107
 3643 004d E8000000 		call	png_crc_read.part.0
 3643      00
 3644              	.LVL410:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3645              		.loc 1 189 4 view .LVU1108
 3646              	.LBE223:
 3647              	.LBE222:
1087:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3648              		.loc 1 1087 4 is_stmt 1 view .LVU1109
1087:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3649              		.loc 1 1087 8 is_stmt 0 view .LVU1110
 3650 0052 31F6     		xorl	%esi, %esi
 3651 0054 4889EF   		movq	%rbp, %rdi
 3652 0057 E8000000 		call	png_crc_finish
 3652      00
 3653              	.LVL411:
1087:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3654              		.loc 1 1087 7 view .LVU1111
 3655 005c 85C0     		testl	%eax, %eax
 3656 005e 7528     		jne	.L300
1090:fltk-1.3.4-1/png/pngrutil.c **** 
 3657              		.loc 1 1090 4 is_stmt 1 view .LVU1112
1090:fltk-1.3.4-1/png/pngrutil.c **** 
 3658              		.loc 1 1090 13 is_stmt 0 view .LVU1113
 3659 0060 4C89EF   		movq	%r13, %rdi
 3660 0063 E8000000 		call	png_get_fixed_point.constprop.0
 3660      00
 3661              	.LVL412:
1092:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 3662              		.loc 1 1092 38 view .LVU1114
 3663 0068 488DB5D8 		leaq	1240(%rbp), %rsi
 3663      040000
1092:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 3664              		.loc 1 1092 4 view .LVU1115
 3665 006f 4889EF   		movq	%rbp, %rdi
1090:fltk-1.3.4-1/png/pngrutil.c **** 
 3666              		.loc 1 1090 13 view .LVU1116
 3667 0072 89C2     		movl	%eax, %edx
 3668              	.LVL413:
1092:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 3669              		.loc 1 1092 4 is_stmt 1 view .LVU1117
 3670 0074 E8000000 		call	png_colorspace_set_gamma@PLT
 3670      00
 3671              	.LVL414:
1093:fltk-1.3.4-1/png/pngrutil.c **** }
 3672              		.loc 1 1093 4 view .LVU1118
 3673 0079 4C89E6   		movq	%r12, %rsi
 3674 007c 4889EF   		movq	%rbp, %rdi
 3675 007f E8000000 		call	png_colorspace_sync@PLT
 3675      00
 3676              	.LVL415:
 3677              		.p2align 4,,10
 3678 0084 0F1F4000 		.p2align 3
 3679              	.L300:
1094:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3680              		.loc 1 1094 1 is_stmt 0 view .LVU1119
 3681 0088 488B4424 		movq	8(%rsp), %rax
 3681      08
 3682 008d 64483304 		xorq	%fs:40, %rax
 3682      25280000 
 3682      00
 3683 0096 753E     		jne	.L311
 3684 0098 4883C410 		addq	$16, %rsp
 3685              		.cfi_remember_state
 3686              		.cfi_def_cfa_offset 32
 3687 009c 5D       		popq	%rbp
 3688              		.cfi_def_cfa_offset 24
 3689              	.LVL416:
1094:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3690              		.loc 1 1094 1 view .LVU1120
 3691 009d 415C     		popq	%r12
 3692              		.cfi_def_cfa_offset 16
 3693              	.LVL417:
1094:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3694              		.loc 1 1094 1 view .LVU1121
 3695 009f 415D     		popq	%r13
 3696              		.cfi_def_cfa_offset 8
 3697 00a1 C3       		ret
 3698              	.LVL418:
 3699              		.p2align 4,,10
 3700 00a2 660F1F44 		.p2align 3
 3700      0000
 3701              	.L310:
 3702              		.cfi_restore_state
1080:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 3703              		.loc 1 1080 7 is_stmt 1 view .LVU1122
 3704 00a8 E8000000 		call	png_crc_finish
 3704      00
 3705              	.LVL419:
1081:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3706              		.loc 1 1081 7 view .LVU1123
 3707 00ad 488D3500 		leaq	.LC11(%rip), %rsi
 3707      000000
 3708 00b4 4889EF   		movq	%rbp, %rdi
 3709 00b7 E8000000 		call	png_chunk_benign_error@PLT
 3709      00
 3710              	.LVL420:
1082:fltk-1.3.4-1/png/pngrutil.c ****    }
 3711              		.loc 1 1082 7 view .LVU1124
 3712 00bc EBCA     		jmp	.L300
 3713              	.LVL421:
 3714 00be 6690     		.p2align 4,,10
 3715              		.p2align 3
 3716              	.L309:
1073:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 3717              		.loc 1 1073 7 view .LVU1125
 3718 00c0 E8000000 		call	png_crc_finish
 3718      00
 3719              	.LVL422:
1074:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3720              		.loc 1 1074 7 view .LVU1126
 3721 00c5 488D3500 		leaq	.LC10(%rip), %rsi
 3721      000000
 3722 00cc 4889EF   		movq	%rbp, %rdi
 3723 00cf E8000000 		call	png_chunk_benign_error@PLT
 3723      00
 3724              	.LVL423:
1075:fltk-1.3.4-1/png/pngrutil.c ****    }
 3725              		.loc 1 1075 7 view .LVU1127
 3726 00d4 EBB2     		jmp	.L300
 3727              	.L311:
1094:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3728              		.loc 1 1094 1 is_stmt 0 view .LVU1128
 3729 00d6 E8000000 		call	__stack_chk_fail@PLT
 3729      00
 3730              	.LVL424:
 3731              	.L308:
1069:fltk-1.3.4-1/png/pngrutil.c **** 
 3732              		.loc 1 1069 7 is_stmt 1 view .LVU1129
 3733 00db 488D3500 		leaq	.LC12(%rip), %rsi
 3733      000000
 3734              	.LVL425:
1069:fltk-1.3.4-1/png/pngrutil.c **** 
 3735              		.loc 1 1069 7 is_stmt 0 view .LVU1130
 3736 00e2 E8000000 		call	png_chunk_error@PLT
 3736      00
 3737              	.LVL426:
1069:fltk-1.3.4-1/png/pngrutil.c **** 
 3738              		.loc 1 1069 7 view .LVU1131
 3739              		.cfi_endproc
 3740              	.LFE59:
 3742              		.section	.text.png_handle_sBIT,"ax",@progbits
 3743              		.p2align 4
 3744              		.globl	png_handle_sBIT
 3746              	png_handle_sBIT:
 3747              	.LVL427:
 3748              	.LFB60:
1100:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen, i;
 3749              		.loc 1 1100 1 is_stmt 1 view -0
 3750              		.cfi_startproc
1100:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen, i;
 3751              		.loc 1 1100 1 is_stmt 0 view .LVU1133
 3752 0000 F30F1EFA 		endbr64
 3753 0004 4157     		pushq	%r15
 3754              		.cfi_def_cfa_offset 16
 3755              		.cfi_offset 15, -16
 3756 0006 4156     		pushq	%r14
 3757              		.cfi_def_cfa_offset 24
 3758              		.cfi_offset 14, -24
 3759 0008 4155     		pushq	%r13
 3760              		.cfi_def_cfa_offset 32
 3761              		.cfi_offset 13, -32
 3762 000a 4154     		pushq	%r12
 3763              		.cfi_def_cfa_offset 40
 3764              		.cfi_offset 12, -40
 3765 000c 55       		pushq	%rbp
 3766              		.cfi_def_cfa_offset 48
 3767              		.cfi_offset 6, -48
 3768 000d 4889FD   		movq	%rdi, %rbp
 3769 0010 53       		pushq	%rbx
 3770              		.cfi_def_cfa_offset 56
 3771              		.cfi_offset 3, -56
 3772 0011 4883EC18 		subq	$24, %rsp
 3773              		.cfi_def_cfa_offset 80
1100:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen, i;
 3774              		.loc 1 1100 1 view .LVU1134
 3775 0015 64488B04 		movq	%fs:40, %rax
 3775      25280000 
 3775      00
 3776 001e 48894424 		movq	%rax, 8(%rsp)
 3776      08
 3777 0023 31C0     		xorl	%eax, %eax
1101:fltk-1.3.4-1/png/pngrutil.c ****    png_byte sample_depth;
 3778              		.loc 1 1101 4 is_stmt 1 view .LVU1135
1102:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[4];
 3779              		.loc 1 1102 4 view .LVU1136
1103:fltk-1.3.4-1/png/pngrutil.c **** 
 3780              		.loc 1 1103 4 view .LVU1137
1105:fltk-1.3.4-1/png/pngrutil.c **** 
 3781              		.loc 1 1105 4 view .LVU1138
1107:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3782              		.loc 1 1107 4 view .LVU1139
1107:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3783              		.loc 1 1107 16 is_stmt 0 view .LVU1140
 3784 0025 8B872C01 		movl	300(%rdi), %eax
 3784      0000
1107:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 3785              		.loc 1 1107 7 view .LVU1141
 3786 002b A801     		testb	$1, %al
 3787 002d 0F84DD01 		je	.L342
 3787      0000
 3788 0033 4189D5   		movl	%edx, %r13d
1110:fltk-1.3.4-1/png/pngrutil.c ****    {
 3789              		.loc 1 1110 9 is_stmt 1 view .LVU1142
1110:fltk-1.3.4-1/png/pngrutil.c ****    {
 3790              		.loc 1 1110 12 is_stmt 0 view .LVU1143
 3791 0036 A806     		testb	$6, %al
 3792 0038 0F852201 		jne	.L343
 3792      0000
 3793 003e 4989F7   		movq	%rsi, %r15
1117:fltk-1.3.4-1/png/pngrutil.c ****    {
 3794              		.loc 1 1117 4 is_stmt 1 view .LVU1144
1117:fltk-1.3.4-1/png/pngrutil.c ****    {
 3795              		.loc 1 1117 7 is_stmt 0 view .LVU1145
 3796 0041 4885F6   		testq	%rsi, %rsi
 3797 0044 740A     		je	.L316
1117:fltk-1.3.4-1/png/pngrutil.c ****    {
 3798              		.loc 1 1117 25 discriminator 1 view .LVU1146
 3799 0046 F6460802 		testb	$2, 8(%rsi)
 3800 004a 0F853001 		jne	.L344
 3800      0000
 3801              	.L316:
1124:fltk-1.3.4-1/png/pngrutil.c ****    {
 3802              		.loc 1 1124 4 is_stmt 1 view .LVU1147
1124:fltk-1.3.4-1/png/pngrutil.c ****    {
 3803              		.loc 1 1124 7 is_stmt 0 view .LVU1148
 3804 0050 80BD7702 		cmpb	$3, 631(%rbp)
 3804      000003
 3805 0057 0F84CB00 		je	.L328
 3805      0000
1132:fltk-1.3.4-1/png/pngrutil.c ****       sample_depth = png_ptr->bit_depth;
 3806              		.loc 1 1132 7 is_stmt 1 view .LVU1149
1132:fltk-1.3.4-1/png/pngrutil.c ****       sample_depth = png_ptr->bit_depth;
 3807              		.loc 1 1132 15 is_stmt 0 view .LVU1150
 3808 005d 440FB6B5 		movzbl	635(%rbp), %r14d
 3808      7B020000 
 3809              	.LVL428:
1133:fltk-1.3.4-1/png/pngrutil.c ****    }
 3810              		.loc 1 1133 7 is_stmt 1 view .LVU1151
1133:fltk-1.3.4-1/png/pngrutil.c ****    }
 3811              		.loc 1 1133 20 is_stmt 0 view .LVU1152
 3812 0065 440FB6A5 		movzbl	632(%rbp), %r12d
 3812      78020000 
 3813              	.LVL429:
1136:fltk-1.3.4-1/png/pngrutil.c ****    {
 3814              		.loc 1 1136 4 is_stmt 1 view .LVU1153
1136:fltk-1.3.4-1/png/pngrutil.c ****    {
 3815              		.loc 1 1136 7 is_stmt 0 view .LVU1154
 3816 006d 4539EE   		cmpl	%r13d, %r14d
 3817 0070 0F85CA00 		jne	.L329
 3817      0000
 3818              	.L347:
1136:fltk-1.3.4-1/png/pngrutil.c ****    {
 3819              		.loc 1 1136 7 view .LVU1155
 3820 0076 4183FD04 		cmpl	$4, %r13d
 3821 007a 0F87C000 		ja	.L329
 3821      0000
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3822              		.loc 1 1143 4 is_stmt 1 view .LVU1156
 3823              	.LBB224:
 3824              	.LBB225:
 3825 0080 488D5C24 		leaq	4(%rsp), %rbx
 3825      04
 3826 0085 4889EF   		movq	%rbp, %rdi
 3827              	.LVL430:
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3828              		.loc 1 1143 4 is_stmt 0 view .LVU1157
 3829 0088 4489F2   		movl	%r14d, %edx
 3830              	.LVL431:
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3831              		.loc 1 1143 4 view .LVU1158
 3832              	.LBE225:
 3833              	.LBE224:
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3834              		.loc 1 1143 38 view .LVU1159
 3835 008b 44886424 		movb	%r12b, 7(%rsp)
 3835      07
 3836              	.LBB228:
 3837              	.LBB226:
 3838 0090 4889DE   		movq	%rbx, %rsi
 3839              	.LVL432:
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3840              		.loc 1 1143 38 view .LVU1160
 3841              	.LBE226:
 3842              	.LBE228:
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3843              		.loc 1 1143 29 view .LVU1161
 3844 0093 44886424 		movb	%r12b, 6(%rsp)
 3844      06
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3845              		.loc 1 1143 20 view .LVU1162
 3846 0098 44886424 		movb	%r12b, 5(%rsp)
 3846      05
1143:fltk-1.3.4-1/png/pngrutil.c ****    png_crc_read(png_ptr, buf, truelen);
 3847              		.loc 1 1143 11 view .LVU1163
 3848 009d 44886424 		movb	%r12b, 4(%rsp)
 3848      04
1144:fltk-1.3.4-1/png/pngrutil.c **** 
 3849              		.loc 1 1144 4 is_stmt 1 view .LVU1164
 3850              	.LVL433:
 3851              	.LBB229:
 3852              	.LBI224:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 3853              		.loc 1 187 1 view .LVU1165
 3854              	.LBB227:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3855              		.loc 1 189 4 view .LVU1166
 3856 00a2 E8000000 		call	png_crc_read.part.0
 3856      00
 3857              	.LVL434:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3858              		.loc 1 189 4 is_stmt 0 view .LVU1167
 3859              	.LBE227:
 3860              	.LBE229:
1146:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3861              		.loc 1 1146 4 is_stmt 1 view .LVU1168
1146:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3862              		.loc 1 1146 8 is_stmt 0 view .LVU1169
 3863 00a7 31F6     		xorl	%esi, %esi
 3864 00a9 4889EF   		movq	%rbp, %rdi
 3865 00ac E8000000 		call	png_crc_finish
 3865      00
 3866              	.LVL435:
1146:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3867              		.loc 1 1146 7 view .LVU1170
 3868 00b1 85C0     		testl	%eax, %eax
 3869 00b3 754B     		jne	.L312
 3870              	.LVL436:
1149:fltk-1.3.4-1/png/pngrutil.c ****       if (buf[i] == 0 || buf[i] > sample_depth)
 3871              		.loc 1 1149 14 is_stmt 1 view .LVU1171
1149:fltk-1.3.4-1/png/pngrutil.c ****       if (buf[i] == 0 || buf[i] > sample_depth)
 3872              		.loc 1 1149 4 is_stmt 0 view .LVU1172
 3873 00b5 4585F6   		testl	%r14d, %r14d
 3874 00b8 0F84E200 		je	.L320
 3874      0000
 3875 00be 418D56FF 		leal	-1(%r14), %edx
 3876 00c2 4889D8   		movq	%rbx, %rax
 3877 00c5 488D4C14 		leaq	5(%rsp,%rdx), %rcx
 3877      05
 3878 00ca EB16     		jmp	.L323
 3879              	.LVL437:
 3880 00cc 0F1F4000 		.p2align 4,,10
 3881              		.p2align 3
 3882              	.L345:
1150:fltk-1.3.4-1/png/pngrutil.c ****       {
 3883              		.loc 1 1150 23 view .LVU1173
 3884 00d0 4438E2   		cmpb	%r12b, %dl
 3885 00d3 7714     		ja	.L330
1149:fltk-1.3.4-1/png/pngrutil.c ****       if (buf[i] == 0 || buf[i] > sample_depth)
 3886              		.loc 1 1149 25 is_stmt 1 discriminator 2 view .LVU1174
 3887              	.LVL438:
1149:fltk-1.3.4-1/png/pngrutil.c ****       if (buf[i] == 0 || buf[i] > sample_depth)
 3888              		.loc 1 1149 14 discriminator 2 view .LVU1175
 3889 00d5 4883C001 		addq	$1, %rax
 3890              	.LVL439:
1149:fltk-1.3.4-1/png/pngrutil.c ****       if (buf[i] == 0 || buf[i] > sample_depth)
 3891              		.loc 1 1149 4 is_stmt 0 discriminator 2 view .LVU1176
 3892 00d9 4839C1   		cmpq	%rax, %rcx
 3893 00dc 0F84BE00 		je	.L320
 3893      0000
 3894              	.L323:
 3895              	.LVL440:
1150:fltk-1.3.4-1/png/pngrutil.c ****       {
 3896              		.loc 1 1150 7 is_stmt 1 view .LVU1177
1150:fltk-1.3.4-1/png/pngrutil.c ****       {
 3897              		.loc 1 1150 14 is_stmt 0 view .LVU1178
 3898 00e2 0FB610   		movzbl	(%rax), %edx
1150:fltk-1.3.4-1/png/pngrutil.c ****       {
 3899              		.loc 1 1150 23 view .LVU1179
 3900 00e5 84D2     		testb	%dl, %dl
 3901 00e7 75E7     		jne	.L345
 3902              	.L330:
1152:fltk-1.3.4-1/png/pngrutil.c ****          return;
 3903              		.loc 1 1152 10 is_stmt 1 view .LVU1180
 3904 00e9 488D3500 		leaq	.LC11(%rip), %rsi
 3904      000000
 3905 00f0 4889EF   		movq	%rbp, %rdi
 3906 00f3 E8000000 		call	png_chunk_benign_error@PLT
 3906      00
 3907              	.LVL441:
1153:fltk-1.3.4-1/png/pngrutil.c ****       }
 3908              		.loc 1 1153 10 view .LVU1181
 3909 00f8 0F1F8400 		.p2align 4,,10
 3909      00000000 
 3910              		.p2align 3
 3911              	.L312:
1174:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3912              		.loc 1 1174 1 is_stmt 0 view .LVU1182
 3913 0100 488B4424 		movq	8(%rsp), %rax
 3913      08
 3914 0105 64483304 		xorq	%fs:40, %rax
 3914      25280000 
 3914      00
 3915 010e 0F850801 		jne	.L346
 3915      0000
 3916 0114 4883C418 		addq	$24, %rsp
 3917              		.cfi_remember_state
 3918              		.cfi_def_cfa_offset 56
 3919 0118 5B       		popq	%rbx
 3920              		.cfi_def_cfa_offset 48
 3921 0119 5D       		popq	%rbp
 3922              		.cfi_def_cfa_offset 40
 3923              	.LVL442:
1174:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3924              		.loc 1 1174 1 view .LVU1183
 3925 011a 415C     		popq	%r12
 3926              		.cfi_def_cfa_offset 32
 3927 011c 415D     		popq	%r13
 3928              		.cfi_def_cfa_offset 24
 3929              	.LVL443:
1174:fltk-1.3.4-1/png/pngrutil.c **** #endif
 3930              		.loc 1 1174 1 view .LVU1184
 3931 011e 415E     		popq	%r14
 3932              		.cfi_def_cfa_offset 16
 3933 0120 415F     		popq	%r15
 3934              		.cfi_def_cfa_offset 8
 3935 0122 C3       		ret
 3936              	.LVL444:
 3937              		.p2align 4,,10
 3938 0123 0F1F4400 		.p2align 3
 3938      00
 3939              	.L328:
 3940              		.cfi_restore_state
1126:fltk-1.3.4-1/png/pngrutil.c ****       sample_depth = 8;
 3941              		.loc 1 1126 15 view .LVU1185
 3942 0128 41BE0300 		movl	$3, %r14d
 3942      0000
1127:fltk-1.3.4-1/png/pngrutil.c ****    }
 3943              		.loc 1 1127 20 view .LVU1186
 3944 012e 41BC0800 		movl	$8, %r12d
 3944      0000
 3945              	.LVL445:
1136:fltk-1.3.4-1/png/pngrutil.c ****    {
 3946              		.loc 1 1136 4 is_stmt 1 view .LVU1187
1136:fltk-1.3.4-1/png/pngrutil.c ****    {
 3947              		.loc 1 1136 7 is_stmt 0 view .LVU1188
 3948 0134 4539EE   		cmpl	%r13d, %r14d
 3949 0137 0F8439FF 		je	.L347
 3949      FFFF
 3950 013d 0F1F00   		.p2align 4,,10
 3951              		.p2align 3
 3952              	.L329:
1138:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 3953              		.loc 1 1138 7 is_stmt 1 view .LVU1189
 3954 0140 4889EF   		movq	%rbp, %rdi
 3955              	.LVL446:
1138:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 3956              		.loc 1 1138 7 is_stmt 0 view .LVU1190
 3957 0143 488D3500 		leaq	.LC11(%rip), %rsi
 3957      000000
 3958              	.LVL447:
1138:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 3959              		.loc 1 1138 7 view .LVU1191
 3960 014a E8000000 		call	png_chunk_benign_error@PLT
 3960      00
 3961              	.LVL448:
1139:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3962              		.loc 1 1139 7 is_stmt 1 view .LVU1192
 3963 014f 4489EE   		movl	%r13d, %esi
 3964 0152 4889EF   		movq	%rbp, %rdi
 3965 0155 E8000000 		call	png_crc_finish
 3965      00
 3966              	.LVL449:
1140:fltk-1.3.4-1/png/pngrutil.c ****    }
 3967              		.loc 1 1140 7 view .LVU1193
 3968 015a EBA4     		jmp	.L312
 3969              	.LVL450:
 3970 015c 0F1F4000 		.p2align 4,,10
 3971              		.p2align 3
 3972              	.L343:
1112:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 3973              		.loc 1 1112 7 view .LVU1194
 3974 0160 89D6     		movl	%edx, %esi
 3975              	.LVL451:
1112:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 3976              		.loc 1 1112 7 is_stmt 0 view .LVU1195
 3977 0162 E8000000 		call	png_crc_finish
 3977      00
 3978              	.LVL452:
1113:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3979              		.loc 1 1113 7 is_stmt 1 view .LVU1196
 3980 0167 488D3500 		leaq	.LC10(%rip), %rsi
 3980      000000
 3981 016e 4889EF   		movq	%rbp, %rdi
 3982 0171 E8000000 		call	png_chunk_benign_error@PLT
 3982      00
 3983              	.LVL453:
1114:fltk-1.3.4-1/png/pngrutil.c ****    }
 3984              		.loc 1 1114 7 view .LVU1197
 3985 0176 EB88     		jmp	.L312
 3986              	.LVL454:
 3987 0178 0F1F8400 		.p2align 4,,10
 3987      00000000 
 3988              		.p2align 3
 3989              	.L344:
1119:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 3990              		.loc 1 1119 7 view .LVU1198
 3991 0180 89D6     		movl	%edx, %esi
 3992              	.LVL455:
1119:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 3993              		.loc 1 1119 7 is_stmt 0 view .LVU1199
 3994 0182 E8000000 		call	png_crc_finish
 3994      00
 3995              	.LVL456:
1120:fltk-1.3.4-1/png/pngrutil.c ****       return;
 3996              		.loc 1 1120 7 is_stmt 1 view .LVU1200
 3997 0187 488D3500 		leaq	.LC13(%rip), %rsi
 3997      000000
 3998 018e 4889EF   		movq	%rbp, %rdi
 3999 0191 E8000000 		call	png_chunk_benign_error@PLT
 3999      00
 4000              	.LVL457:
1121:fltk-1.3.4-1/png/pngrutil.c ****    }
 4001              		.loc 1 1121 7 view .LVU1201
 4002 0196 E965FFFF 		jmp	.L312
 4002      FF
 4003              	.LVL458:
 4004 019b 0F1F4400 		.p2align 4,,10
 4004      00
 4005              		.p2align 3
 4006              	.L320:
1156:fltk-1.3.4-1/png/pngrutil.c ****    {
 4007              		.loc 1 1156 4 view .LVU1202
 4008 01a0 0FB64424 		movzbl	4(%rsp), %eax
 4008      04
 4009 01a5 0FB65424 		movzbl	5(%rsp), %edx
 4009      05
1156:fltk-1.3.4-1/png/pngrutil.c ****    {
 4010              		.loc 1 1156 7 is_stmt 0 view .LVU1203
 4011 01aa F6857702 		testb	$2, 631(%rbp)
 4011      000002
 4012 01b1 743D     		je	.L324
1158:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.green = buf[1];
 4013              		.loc 1 1158 7 is_stmt 1 view .LVU1204
1158:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.green = buf[1];
 4014              		.loc 1 1158 28 is_stmt 0 view .LVU1205
 4015 01b3 8885E802 		movb	%al, 744(%rbp)
 4015      0000
1159:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.blue = buf[2];
 4016              		.loc 1 1159 7 is_stmt 1 view .LVU1206
1160:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.alpha = buf[3];
 4017              		.loc 1 1160 29 is_stmt 0 view .LVU1207
 4018 01b9 0FB64424 		movzbl	6(%rsp), %eax
 4018      06
1159:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.blue = buf[2];
 4019              		.loc 1 1159 30 view .LVU1208
 4020 01be 8895E902 		movb	%dl, 745(%rbp)
 4020      0000
1160:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.alpha = buf[3];
 4021              		.loc 1 1160 7 is_stmt 1 view .LVU1209
1160:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.alpha = buf[3];
 4022              		.loc 1 1160 29 is_stmt 0 view .LVU1210
 4023 01c4 8885EA02 		movb	%al, 746(%rbp)
 4023      0000
1161:fltk-1.3.4-1/png/pngrutil.c ****    }
 4024              		.loc 1 1161 7 is_stmt 1 view .LVU1211
1161:fltk-1.3.4-1/png/pngrutil.c ****    }
 4025              		.loc 1 1161 30 is_stmt 0 view .LVU1212
 4026 01ca 0FB64424 		movzbl	7(%rsp), %eax
 4026      07
 4027 01cf 8885EC02 		movb	%al, 748(%rbp)
 4027      0000
 4028              	.L325:
1173:fltk-1.3.4-1/png/pngrutil.c **** }
 4029              		.loc 1 1173 4 is_stmt 1 view .LVU1213
1173:fltk-1.3.4-1/png/pngrutil.c **** }
 4030              		.loc 1 1173 36 is_stmt 0 view .LVU1214
 4031 01d5 488D95E8 		leaq	744(%rbp), %rdx
 4031      020000
1173:fltk-1.3.4-1/png/pngrutil.c **** }
 4032              		.loc 1 1173 4 view .LVU1215
 4033 01dc 4C89FE   		movq	%r15, %rsi
 4034 01df 4889EF   		movq	%rbp, %rdi
 4035 01e2 E8000000 		call	png_set_sBIT@PLT
 4035      00
 4036              	.LVL459:
 4037 01e7 E914FFFF 		jmp	.L312
 4037      FF
 4038 01ec 0F1F4000 		.p2align 4,,10
 4039              		.p2align 3
 4040              	.L324:
1166:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.red = buf[0];
 4041              		.loc 1 1166 7 is_stmt 1 view .LVU1216
1166:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.red = buf[0];
 4042              		.loc 1 1166 29 is_stmt 0 view .LVU1217
 4043 01f0 8885EB02 		movb	%al, 747(%rbp)
 4043      0000
1167:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.green = buf[0];
 4044              		.loc 1 1167 7 is_stmt 1 view .LVU1218
1167:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.green = buf[0];
 4045              		.loc 1 1167 28 is_stmt 0 view .LVU1219
 4046 01f6 8885E802 		movb	%al, 744(%rbp)
 4046      0000
1168:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.blue = buf[0];
 4047              		.loc 1 1168 7 is_stmt 1 view .LVU1220
1168:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.blue = buf[0];
 4048              		.loc 1 1168 30 is_stmt 0 view .LVU1221
 4049 01fc 8885E902 		movb	%al, 745(%rbp)
 4049      0000
1169:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.alpha = buf[1];
 4050              		.loc 1 1169 7 is_stmt 1 view .LVU1222
1169:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->sig_bit.alpha = buf[1];
 4051              		.loc 1 1169 29 is_stmt 0 view .LVU1223
 4052 0202 8885EA02 		movb	%al, 746(%rbp)
 4052      0000
1170:fltk-1.3.4-1/png/pngrutil.c ****    }
 4053              		.loc 1 1170 7 is_stmt 1 view .LVU1224
1170:fltk-1.3.4-1/png/pngrutil.c ****    }
 4054              		.loc 1 1170 30 is_stmt 0 view .LVU1225
 4055 0208 8895EC02 		movb	%dl, 748(%rbp)
 4055      0000
 4056 020e EBC5     		jmp	.L325
 4057              	.LVL460:
 4058              	.L342:
1108:fltk-1.3.4-1/png/pngrutil.c **** 
 4059              		.loc 1 1108 7 is_stmt 1 view .LVU1226
 4060 0210 488D3500 		leaq	.LC12(%rip), %rsi
 4060      000000
 4061              	.LVL461:
1108:fltk-1.3.4-1/png/pngrutil.c **** 
 4062              		.loc 1 1108 7 is_stmt 0 view .LVU1227
 4063 0217 E8000000 		call	png_chunk_error@PLT
 4063      00
 4064              	.LVL462:
 4065              	.L346:
1174:fltk-1.3.4-1/png/pngrutil.c **** #endif
 4066              		.loc 1 1174 1 view .LVU1228
 4067 021c E8000000 		call	__stack_chk_fail@PLT
 4067      00
 4068              	.LVL463:
 4069              		.cfi_endproc
 4070              	.LFE60:
 4072              		.section	.rodata.png_handle_cHRM.str1.1,"aMS",@progbits,1
 4073              	.LC18:
 4074 0000 696E7661 		.string	"invalid values"
 4074      6C696420 
 4074      76616C75 
 4074      657300
 4075              		.section	.text.png_handle_cHRM,"ax",@progbits
 4076              		.p2align 4
 4077              		.globl	png_handle_cHRM
 4079              	png_handle_cHRM:
 4080              	.LVL464:
 4081              	.LFB61:
1180:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[32];
 4082              		.loc 1 1180 1 is_stmt 1 view -0
 4083              		.cfi_startproc
1180:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[32];
 4084              		.loc 1 1180 1 is_stmt 0 view .LVU1230
 4085 0000 F30F1EFA 		endbr64
 4086 0004 4155     		pushq	%r13
 4087              		.cfi_def_cfa_offset 16
 4088              		.cfi_offset 13, -16
 4089 0006 4154     		pushq	%r12
 4090              		.cfi_def_cfa_offset 24
 4091              		.cfi_offset 12, -24
 4092 0008 55       		pushq	%rbp
 4093              		.cfi_def_cfa_offset 32
 4094              		.cfi_offset 6, -32
 4095 0009 4889FD   		movq	%rdi, %rbp
 4096 000c 53       		pushq	%rbx
 4097              		.cfi_def_cfa_offset 40
 4098              		.cfi_offset 3, -40
 4099 000d 4883EC58 		subq	$88, %rsp
 4100              		.cfi_def_cfa_offset 128
1180:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[32];
 4101              		.loc 1 1180 1 view .LVU1231
 4102 0011 64488B04 		movq	%fs:40, %rax
 4102      25280000 
 4102      00
 4103 001a 48894424 		movq	%rax, 72(%rsp)
 4103      48
 4104 001f 31C0     		xorl	%eax, %eax
1181:fltk-1.3.4-1/png/pngrutil.c ****    png_xy xy;
 4105              		.loc 1 1181 4 is_stmt 1 view .LVU1232
1182:fltk-1.3.4-1/png/pngrutil.c **** 
 4106              		.loc 1 1182 4 view .LVU1233
1184:fltk-1.3.4-1/png/pngrutil.c **** 
 4107              		.loc 1 1184 4 view .LVU1234
1186:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4108              		.loc 1 1186 4 view .LVU1235
1186:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4109              		.loc 1 1186 16 is_stmt 0 view .LVU1236
 4110 0021 8B872C01 		movl	300(%rdi), %eax
 4110      0000
1186:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4111              		.loc 1 1186 7 view .LVU1237
 4112 0027 A801     		testb	$1, %al
 4113 0029 0F84E501 		je	.L361
 4113      0000
 4114 002f 4989F4   		movq	%rsi, %r12
 4115 0032 89D6     		movl	%edx, %esi
 4116              	.LVL465:
1189:fltk-1.3.4-1/png/pngrutil.c ****    {
 4117              		.loc 1 1189 9 is_stmt 1 view .LVU1238
1189:fltk-1.3.4-1/png/pngrutil.c ****    {
 4118              		.loc 1 1189 12 is_stmt 0 view .LVU1239
 4119 0034 A806     		testb	$6, %al
 4120 0036 7568     		jne	.L362
1196:fltk-1.3.4-1/png/pngrutil.c ****    {
 4121              		.loc 1 1196 4 is_stmt 1 view .LVU1240
1196:fltk-1.3.4-1/png/pngrutil.c ****    {
 4122              		.loc 1 1196 7 is_stmt 0 view .LVU1241
 4123 0038 83FA20   		cmpl	$32, %edx
 4124 003b 7543     		jne	.L363
1203:fltk-1.3.4-1/png/pngrutil.c **** 
 4125              		.loc 1 1203 4 is_stmt 1 view .LVU1242
 4126              	.LVL466:
 4127              	.LBB230:
 4128              	.LBI230:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 4129              		.loc 1 187 1 view .LVU1243
 4130              	.LBB231:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4131              		.loc 1 189 4 view .LVU1244
 4132 003d 4C8D6C24 		leaq	32(%rsp), %r13
 4132      20
 4133              	.LVL467:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4134              		.loc 1 189 4 is_stmt 0 view .LVU1245
 4135 0042 BA200000 		movl	$32, %edx
 4135      00
 4136              	.LVL468:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4137              		.loc 1 189 4 view .LVU1246
 4138 0047 4C89EE   		movq	%r13, %rsi
 4139              	.LVL469:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4140              		.loc 1 189 4 view .LVU1247
 4141 004a E8000000 		call	png_crc_read.part.0
 4141      00
 4142              	.LVL470:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4143              		.loc 1 189 4 view .LVU1248
 4144              	.LBE231:
 4145              	.LBE230:
1205:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4146              		.loc 1 1205 4 is_stmt 1 view .LVU1249
1205:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4147              		.loc 1 1205 8 is_stmt 0 view .LVU1250
 4148 004f 31F6     		xorl	%esi, %esi
 4149 0051 4889EF   		movq	%rbp, %rdi
 4150 0054 E8000000 		call	png_crc_finish
 4150      00
 4151              	.LVL471:
1205:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4152              		.loc 1 1205 7 view .LVU1251
 4153 0059 85C0     		testl	%eax, %eax
 4154 005b 7463     		je	.L364
 4155              	.L348:
1246:fltk-1.3.4-1/png/pngrutil.c **** #endif
 4156              		.loc 1 1246 1 view .LVU1252
 4157 005d 488B4424 		movq	72(%rsp), %rax
 4157      48
 4158 0062 64483304 		xorq	%fs:40, %rax
 4158      25280000 
 4158      00
 4159 006b 0F859E01 		jne	.L365
 4159      0000
 4160 0071 4883C458 		addq	$88, %rsp
 4161              		.cfi_remember_state
 4162              		.cfi_def_cfa_offset 40
 4163 0075 5B       		popq	%rbx
 4164              		.cfi_def_cfa_offset 32
 4165 0076 5D       		popq	%rbp
 4166              		.cfi_def_cfa_offset 24
 4167              	.LVL472:
1246:fltk-1.3.4-1/png/pngrutil.c **** #endif
 4168              		.loc 1 1246 1 view .LVU1253
 4169 0077 415C     		popq	%r12
 4170              		.cfi_def_cfa_offset 16
 4171              	.LVL473:
1246:fltk-1.3.4-1/png/pngrutil.c **** #endif
 4172              		.loc 1 1246 1 view .LVU1254
 4173 0079 415D     		popq	%r13
 4174              		.cfi_def_cfa_offset 8
 4175 007b C3       		ret
 4176              	.LVL474:
 4177 007c 0F1F4000 		.p2align 4,,10
 4178              		.p2align 3
 4179              	.L363:
 4180              		.cfi_restore_state
1198:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 4181              		.loc 1 1198 7 is_stmt 1 view .LVU1255
 4182 0080 E8000000 		call	png_crc_finish
 4182      00
 4183              	.LVL475:
1199:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4184              		.loc 1 1199 7 view .LVU1256
 4185 0085 488D3500 		leaq	.LC11(%rip), %rsi
 4185      000000
 4186 008c 4889EF   		movq	%rbp, %rdi
 4187 008f E8000000 		call	png_chunk_benign_error@PLT
 4187      00
 4188              	.LVL476:
1200:fltk-1.3.4-1/png/pngrutil.c ****    }
 4189              		.loc 1 1200 7 view .LVU1257
 4190 0094 EBC7     		jmp	.L348
 4191              	.LVL477:
 4192 0096 662E0F1F 		.p2align 4,,10
 4192      84000000 
 4192      0000
 4193              		.p2align 3
 4194              	.L362:
1191:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 4195              		.loc 1 1191 7 view .LVU1258
 4196 00a0 E8000000 		call	png_crc_finish
 4196      00
 4197              	.LVL478:
1192:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4198              		.loc 1 1192 7 view .LVU1259
 4199 00a5 488D3500 		leaq	.LC10(%rip), %rsi
 4199      000000
 4200 00ac 4889EF   		movq	%rbp, %rdi
 4201 00af E8000000 		call	png_chunk_benign_error@PLT
 4201      00
 4202              	.LVL479:
1193:fltk-1.3.4-1/png/pngrutil.c ****    }
 4203              		.loc 1 1193 7 view .LVU1260
 4204 00b4 EBA7     		jmp	.L348
 4205 00b6 662E0F1F 		.p2align 4,,10
 4205      84000000 
 4205      0000
 4206              		.p2align 3
 4207              	.L364:
1208:fltk-1.3.4-1/png/pngrutil.c ****    xy.whitey = png_get_fixed_point(NULL, buf + 4);
 4208              		.loc 1 1208 4 view .LVU1261
1208:fltk-1.3.4-1/png/pngrutil.c ****    xy.whitey = png_get_fixed_point(NULL, buf + 4);
 4209              		.loc 1 1208 16 is_stmt 0 view .LVU1262
 4210 00c0 4C89EF   		movq	%r13, %rdi
 4211 00c3 E8000000 		call	png_get_fixed_point.constprop.0
 4211      00
 4212              	.LVL480:
1209:fltk-1.3.4-1/png/pngrutil.c ****    xy.redx   = png_get_fixed_point(NULL, buf + 8);
 4213              		.loc 1 1209 16 view .LVU1263
 4214 00c8 488D7C24 		leaq	36(%rsp), %rdi
 4214      24
1208:fltk-1.3.4-1/png/pngrutil.c ****    xy.whitey = png_get_fixed_point(NULL, buf + 4);
 4215              		.loc 1 1208 16 view .LVU1264
 4216 00cd 89C3     		movl	%eax, %ebx
1208:fltk-1.3.4-1/png/pngrutil.c ****    xy.whitey = png_get_fixed_point(NULL, buf + 4);
 4217              		.loc 1 1208 14 view .LVU1265
 4218 00cf 89442418 		movl	%eax, 24(%rsp)
1209:fltk-1.3.4-1/png/pngrutil.c ****    xy.redx   = png_get_fixed_point(NULL, buf + 8);
 4219              		.loc 1 1209 4 is_stmt 1 view .LVU1266
1209:fltk-1.3.4-1/png/pngrutil.c ****    xy.redx   = png_get_fixed_point(NULL, buf + 8);
 4220              		.loc 1 1209 16 is_stmt 0 view .LVU1267
 4221 00d3 E8000000 		call	png_get_fixed_point.constprop.0
 4221      00
 4222              	.LVL481:
1210:fltk-1.3.4-1/png/pngrutil.c ****    xy.redy   = png_get_fixed_point(NULL, buf + 12);
 4223              		.loc 1 1210 16 view .LVU1268
 4224 00d8 488D7C24 		leaq	40(%rsp), %rdi
 4224      28
1209:fltk-1.3.4-1/png/pngrutil.c ****    xy.redx   = png_get_fixed_point(NULL, buf + 8);
 4225              		.loc 1 1209 16 view .LVU1269
 4226 00dd 4189C5   		movl	%eax, %r13d
1209:fltk-1.3.4-1/png/pngrutil.c ****    xy.redx   = png_get_fixed_point(NULL, buf + 8);
 4227              		.loc 1 1209 14 view .LVU1270
 4228 00e0 8944241C 		movl	%eax, 28(%rsp)
1210:fltk-1.3.4-1/png/pngrutil.c ****    xy.redy   = png_get_fixed_point(NULL, buf + 12);
 4229              		.loc 1 1210 4 is_stmt 1 view .LVU1271
1210:fltk-1.3.4-1/png/pngrutil.c ****    xy.redy   = png_get_fixed_point(NULL, buf + 12);
 4230              		.loc 1 1210 16 is_stmt 0 view .LVU1272
 4231 00e4 E8000000 		call	png_get_fixed_point.constprop.0
 4231      00
 4232              	.LVL482:
1211:fltk-1.3.4-1/png/pngrutil.c ****    xy.greenx = png_get_fixed_point(NULL, buf + 16);
 4233              		.loc 1 1211 16 view .LVU1273
 4234 00e9 488D7C24 		leaq	44(%rsp), %rdi
 4234      2C
1210:fltk-1.3.4-1/png/pngrutil.c ****    xy.redy   = png_get_fixed_point(NULL, buf + 12);
 4235              		.loc 1 1210 16 view .LVU1274
 4236 00ee 4189C3   		movl	%eax, %r11d
1210:fltk-1.3.4-1/png/pngrutil.c ****    xy.redy   = png_get_fixed_point(NULL, buf + 12);
 4237              		.loc 1 1210 14 view .LVU1275
 4238 00f1 890424   		movl	%eax, (%rsp)
1211:fltk-1.3.4-1/png/pngrutil.c ****    xy.greenx = png_get_fixed_point(NULL, buf + 16);
 4239              		.loc 1 1211 4 is_stmt 1 view .LVU1276
1211:fltk-1.3.4-1/png/pngrutil.c ****    xy.greenx = png_get_fixed_point(NULL, buf + 16);
 4240              		.loc 1 1211 16 is_stmt 0 view .LVU1277
 4241 00f4 E8000000 		call	png_get_fixed_point.constprop.0
 4241      00
 4242              	.LVL483:
1212:fltk-1.3.4-1/png/pngrutil.c ****    xy.greeny = png_get_fixed_point(NULL, buf + 20);
 4243              		.loc 1 1212 16 view .LVU1278
 4244 00f9 488D7C24 		leaq	48(%rsp), %rdi
 4244      30
1211:fltk-1.3.4-1/png/pngrutil.c ****    xy.greenx = png_get_fixed_point(NULL, buf + 16);
 4245              		.loc 1 1211 16 view .LVU1279
 4246 00fe 4189C2   		movl	%eax, %r10d
1211:fltk-1.3.4-1/png/pngrutil.c ****    xy.greenx = png_get_fixed_point(NULL, buf + 16);
 4247              		.loc 1 1211 14 view .LVU1280
 4248 0101 89442404 		movl	%eax, 4(%rsp)
1212:fltk-1.3.4-1/png/pngrutil.c ****    xy.greeny = png_get_fixed_point(NULL, buf + 20);
 4249              		.loc 1 1212 4 is_stmt 1 view .LVU1281
1212:fltk-1.3.4-1/png/pngrutil.c ****    xy.greeny = png_get_fixed_point(NULL, buf + 20);
 4250              		.loc 1 1212 16 is_stmt 0 view .LVU1282
 4251 0105 E8000000 		call	png_get_fixed_point.constprop.0
 4251      00
 4252              	.LVL484:
1213:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluex  = png_get_fixed_point(NULL, buf + 24);
 4253              		.loc 1 1213 16 view .LVU1283
 4254 010a 488D7C24 		leaq	52(%rsp), %rdi
 4254      34
1212:fltk-1.3.4-1/png/pngrutil.c ****    xy.greeny = png_get_fixed_point(NULL, buf + 20);
 4255              		.loc 1 1212 16 view .LVU1284
 4256 010f 4189C1   		movl	%eax, %r9d
1212:fltk-1.3.4-1/png/pngrutil.c ****    xy.greeny = png_get_fixed_point(NULL, buf + 20);
 4257              		.loc 1 1212 14 view .LVU1285
 4258 0112 89442408 		movl	%eax, 8(%rsp)
1213:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluex  = png_get_fixed_point(NULL, buf + 24);
 4259              		.loc 1 1213 4 is_stmt 1 view .LVU1286
1213:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluex  = png_get_fixed_point(NULL, buf + 24);
 4260              		.loc 1 1213 16 is_stmt 0 view .LVU1287
 4261 0116 E8000000 		call	png_get_fixed_point.constprop.0
 4261      00
 4262              	.LVL485:
1214:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluey  = png_get_fixed_point(NULL, buf + 28);
 4263              		.loc 1 1214 16 view .LVU1288
 4264 011b 488D7C24 		leaq	56(%rsp), %rdi
 4264      38
1213:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluex  = png_get_fixed_point(NULL, buf + 24);
 4265              		.loc 1 1213 16 view .LVU1289
 4266 0120 4189C0   		movl	%eax, %r8d
1213:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluex  = png_get_fixed_point(NULL, buf + 24);
 4267              		.loc 1 1213 14 view .LVU1290
 4268 0123 8944240C 		movl	%eax, 12(%rsp)
1214:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluey  = png_get_fixed_point(NULL, buf + 28);
 4269              		.loc 1 1214 4 is_stmt 1 view .LVU1291
1214:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluey  = png_get_fixed_point(NULL, buf + 28);
 4270              		.loc 1 1214 16 is_stmt 0 view .LVU1292
 4271 0127 E8000000 		call	png_get_fixed_point.constprop.0
 4271      00
 4272              	.LVL486:
1215:fltk-1.3.4-1/png/pngrutil.c **** 
 4273              		.loc 1 1215 16 view .LVU1293
 4274 012c 488D7C24 		leaq	60(%rsp), %rdi
 4274      3C
1214:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluey  = png_get_fixed_point(NULL, buf + 28);
 4275              		.loc 1 1214 16 view .LVU1294
 4276 0131 89C6     		movl	%eax, %esi
1214:fltk-1.3.4-1/png/pngrutil.c ****    xy.bluey  = png_get_fixed_point(NULL, buf + 28);
 4277              		.loc 1 1214 14 view .LVU1295
 4278 0133 89442410 		movl	%eax, 16(%rsp)
1215:fltk-1.3.4-1/png/pngrutil.c **** 
 4279              		.loc 1 1215 4 is_stmt 1 view .LVU1296
1215:fltk-1.3.4-1/png/pngrutil.c **** 
 4280              		.loc 1 1215 16 is_stmt 0 view .LVU1297
 4281 0137 E8000000 		call	png_get_fixed_point.constprop.0
 4281      00
 4282              	.LVL487:
1217:fltk-1.3.4-1/png/pngrutil.c ****        xy.whitey == PNG_FIXED_ERROR ||
 4283              		.loc 1 1217 7 view .LVU1298
 4284 013c 83FBFF   		cmpl	$-1, %ebx
 4285 013f 0F94C2   		sete	%dl
1217:fltk-1.3.4-1/png/pngrutil.c ****        xy.whitey == PNG_FIXED_ERROR ||
 4286              		.loc 1 1217 37 view .LVU1299
 4287 0142 4183FDFF 		cmpl	$-1, %r13d
1215:fltk-1.3.4-1/png/pngrutil.c **** 
 4288              		.loc 1 1215 14 view .LVU1300
 4289 0146 89442414 		movl	%eax, 20(%rsp)
1217:fltk-1.3.4-1/png/pngrutil.c ****        xy.whitey == PNG_FIXED_ERROR ||
 4290              		.loc 1 1217 4 is_stmt 1 view .LVU1301
1217:fltk-1.3.4-1/png/pngrutil.c ****        xy.whitey == PNG_FIXED_ERROR ||
 4291              		.loc 1 1217 37 is_stmt 0 view .LVU1302
 4292 014a 0F94C1   		sete	%cl
1223:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluey  == PNG_FIXED_ERROR)
 4293              		.loc 1 1223 37 view .LVU1303
 4294 014d 09CA     		orl	%ecx, %edx
1218:fltk-1.3.4-1/png/pngrutil.c ****        xy.redx   == PNG_FIXED_ERROR ||
 4295              		.loc 1 1218 37 view .LVU1304
 4296 014f 4183FBFF 		cmpl	$-1, %r11d
 4297 0153 0F94C1   		sete	%cl
1223:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluey  == PNG_FIXED_ERROR)
 4298              		.loc 1 1223 37 view .LVU1305
 4299 0156 09CA     		orl	%ecx, %edx
1219:fltk-1.3.4-1/png/pngrutil.c ****        xy.redy   == PNG_FIXED_ERROR ||
 4300              		.loc 1 1219 37 view .LVU1306
 4301 0158 4183FAFF 		cmpl	$-1, %r10d
 4302 015c 0F94C1   		sete	%cl
1223:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluey  == PNG_FIXED_ERROR)
 4303              		.loc 1 1223 37 view .LVU1307
 4304 015f 09CA     		orl	%ecx, %edx
1220:fltk-1.3.4-1/png/pngrutil.c ****        xy.greenx == PNG_FIXED_ERROR ||
 4305              		.loc 1 1220 37 view .LVU1308
 4306 0161 4183F9FF 		cmpl	$-1, %r9d
 4307 0165 0F94C1   		sete	%cl
1223:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluey  == PNG_FIXED_ERROR)
 4308              		.loc 1 1223 37 view .LVU1309
 4309 0168 09CA     		orl	%ecx, %edx
1221:fltk-1.3.4-1/png/pngrutil.c ****        xy.greeny == PNG_FIXED_ERROR ||
 4310              		.loc 1 1221 37 view .LVU1310
 4311 016a 4183F8FF 		cmpl	$-1, %r8d
 4312 016e 0F94C1   		sete	%cl
1223:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluey  == PNG_FIXED_ERROR)
 4313              		.loc 1 1223 37 view .LVU1311
 4314 0171 09CA     		orl	%ecx, %edx
1222:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluex  == PNG_FIXED_ERROR ||
 4315              		.loc 1 1222 37 view .LVU1312
 4316 0173 83FEFF   		cmpl	$-1, %esi
 4317 0176 0F94C1   		sete	%cl
1223:fltk-1.3.4-1/png/pngrutil.c ****        xy.bluey  == PNG_FIXED_ERROR)
 4318              		.loc 1 1223 37 view .LVU1313
 4319 0179 08CA     		orb	%cl, %dl
 4320 017b 7505     		jne	.L359
 4321 017d 83F8FF   		cmpl	$-1, %eax
 4322 0180 751E     		jne	.L354
 4323              	.L359:
1226:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4324              		.loc 1 1226 7 is_stmt 1 view .LVU1314
 4325 0182 488D3500 		leaq	.LC18(%rip), %rsi
 4325      000000
 4326 0189 4889EF   		movq	%rbp, %rdi
 4327 018c E8000000 		call	png_chunk_benign_error@PLT
 4327      00
 4328              	.LVL488:
1227:fltk-1.3.4-1/png/pngrutil.c ****    }
 4329              		.loc 1 1227 7 view .LVU1315
 4330 0191 E9C7FEFF 		jmp	.L348
 4330      FF
 4331 0196 662E0F1F 		.p2align 4,,10
 4331      84000000 
 4331      0000
 4332              		.p2align 3
 4333              	.L354:
1231:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4334              		.loc 1 1231 4 view .LVU1316
1231:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4335              		.loc 1 1231 28 is_stmt 0 view .LVU1317
 4336 01a0 0FB78522 		movzwl	1314(%rbp), %eax
 4336      050000
1231:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4337              		.loc 1 1231 7 view .LVU1318
 4338 01a7 6685C0   		testw	%ax, %ax
 4339 01aa 0F88ADFE 		js	.L348
 4339      FFFF
1234:fltk-1.3.4-1/png/pngrutil.c ****    {
 4340              		.loc 1 1234 4 is_stmt 1 view .LVU1319
1234:fltk-1.3.4-1/png/pngrutil.c ****    {
 4341              		.loc 1 1234 7 is_stmt 0 view .LVU1320
 4342 01b0 A810     		testb	$16, %al
 4343 01b2 7531     		jne	.L366
1242:fltk-1.3.4-1/png/pngrutil.c ****    (void)png_colorspace_set_chromaticities(png_ptr, &png_ptr->colorspace, &xy,
 4344              		.loc 1 1242 4 is_stmt 1 view .LVU1321
1242:fltk-1.3.4-1/png/pngrutil.c ****    (void)png_colorspace_set_chromaticities(png_ptr, &png_ptr->colorspace, &xy,
 4345              		.loc 1 1242 30 is_stmt 0 view .LVU1322
 4346 01b4 83C810   		orl	$16, %eax
1243:fltk-1.3.4-1/png/pngrutil.c ****       1/*prefer cHRM values*/);
 4347              		.loc 1 1243 53 view .LVU1323
 4348 01b7 488DB5D8 		leaq	1240(%rbp), %rsi
 4348      040000
1243:fltk-1.3.4-1/png/pngrutil.c ****       1/*prefer cHRM values*/);
 4349              		.loc 1 1243 10 view .LVU1324
 4350 01be 4889EF   		movq	%rbp, %rdi
 4351 01c1 4889E2   		movq	%rsp, %rdx
1242:fltk-1.3.4-1/png/pngrutil.c ****    (void)png_colorspace_set_chromaticities(png_ptr, &png_ptr->colorspace, &xy,
 4352              		.loc 1 1242 30 view .LVU1325
 4353 01c4 66898522 		movw	%ax, 1314(%rbp)
 4353      050000
1243:fltk-1.3.4-1/png/pngrutil.c ****       1/*prefer cHRM values*/);
 4354              		.loc 1 1243 4 is_stmt 1 view .LVU1326
1243:fltk-1.3.4-1/png/pngrutil.c ****       1/*prefer cHRM values*/);
 4355              		.loc 1 1243 10 is_stmt 0 view .LVU1327
 4356 01cb B9010000 		movl	$1, %ecx
 4356      00
 4357 01d0 E8000000 		call	png_colorspace_set_chromaticities@PLT
 4357      00
 4358              	.LVL489:
1245:fltk-1.3.4-1/png/pngrutil.c **** }
 4359              		.loc 1 1245 4 is_stmt 1 view .LVU1328
 4360 01d5 4C89E6   		movq	%r12, %rsi
 4361 01d8 4889EF   		movq	%rbp, %rdi
 4362 01db E8000000 		call	png_colorspace_sync@PLT
 4362      00
 4363              	.LVL490:
 4364 01e0 E978FEFF 		jmp	.L348
 4364      FF
 4365              	.L366:
1236:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
 4366              		.loc 1 1236 7 view .LVU1329
1236:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
 4367              		.loc 1 1236 33 is_stmt 0 view .LVU1330
 4368 01e5 660D0080 		orw	$-32768, %ax
1237:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 4369              		.loc 1 1237 7 view .LVU1331
 4370 01e9 4C89E6   		movq	%r12, %rsi
 4371 01ec 4889EF   		movq	%rbp, %rdi
1236:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
 4372              		.loc 1 1236 33 view .LVU1332
 4373 01ef 66898522 		movw	%ax, 1314(%rbp)
 4373      050000
1237:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 4374              		.loc 1 1237 7 is_stmt 1 view .LVU1333
 4375 01f6 E8000000 		call	png_colorspace_sync@PLT
 4375      00
 4376              	.LVL491:
1238:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4377              		.loc 1 1238 7 view .LVU1334
 4378 01fb 488D3500 		leaq	.LC13(%rip), %rsi
 4378      000000
 4379 0202 4889EF   		movq	%rbp, %rdi
 4380 0205 E8000000 		call	png_chunk_benign_error@PLT
 4380      00
 4381              	.LVL492:
1239:fltk-1.3.4-1/png/pngrutil.c ****    }
 4382              		.loc 1 1239 7 view .LVU1335
 4383 020a E94EFEFF 		jmp	.L348
 4383      FF
 4384              	.L365:
1246:fltk-1.3.4-1/png/pngrutil.c **** #endif
 4385              		.loc 1 1246 1 is_stmt 0 view .LVU1336
 4386 020f E8000000 		call	__stack_chk_fail@PLT
 4386      00
 4387              	.LVL493:
 4388              	.L361:
1187:fltk-1.3.4-1/png/pngrutil.c **** 
 4389              		.loc 1 1187 7 is_stmt 1 view .LVU1337
 4390 0214 488D3500 		leaq	.LC12(%rip), %rsi
 4390      000000
 4391              	.LVL494:
1187:fltk-1.3.4-1/png/pngrutil.c **** 
 4392              		.loc 1 1187 7 is_stmt 0 view .LVU1338
 4393 021b E8000000 		call	png_chunk_error@PLT
 4393      00
 4394              	.LVL495:
1187:fltk-1.3.4-1/png/pngrutil.c **** 
 4395              		.loc 1 1187 7 view .LVU1339
 4396              		.cfi_endproc
 4397              	.LFE61:
 4399              		.section	.rodata.png_handle_sRGB.str1.1,"aMS",@progbits,1
 4400              	.LC19:
 4401 0000 746F6F20 		.string	"too many profiles"
 4401      6D616E79 
 4401      2070726F 
 4401      66696C65 
 4401      7300
 4402              		.section	.text.png_handle_sRGB,"ax",@progbits
 4403              		.p2align 4
 4404              		.globl	png_handle_sRGB
 4406              	png_handle_sRGB:
 4407              	.LVL496:
 4408              	.LFB62:
1252:fltk-1.3.4-1/png/pngrutil.c ****    png_byte intent;
 4409              		.loc 1 1252 1 is_stmt 1 view -0
 4410              		.cfi_startproc
1252:fltk-1.3.4-1/png/pngrutil.c ****    png_byte intent;
 4411              		.loc 1 1252 1 is_stmt 0 view .LVU1341
 4412 0000 F30F1EFA 		endbr64
 4413 0004 4154     		pushq	%r12
 4414              		.cfi_def_cfa_offset 16
 4415              		.cfi_offset 12, -16
 4416 0006 55       		pushq	%rbp
 4417              		.cfi_def_cfa_offset 24
 4418              		.cfi_offset 6, -24
 4419 0007 4889FD   		movq	%rdi, %rbp
 4420 000a 4883EC18 		subq	$24, %rsp
 4421              		.cfi_def_cfa_offset 48
1252:fltk-1.3.4-1/png/pngrutil.c ****    png_byte intent;
 4422              		.loc 1 1252 1 view .LVU1342
 4423 000e 64488B04 		movq	%fs:40, %rax
 4423      25280000 
 4423      00
 4424 0017 48894424 		movq	%rax, 8(%rsp)
 4424      08
 4425 001c 31C0     		xorl	%eax, %eax
1253:fltk-1.3.4-1/png/pngrutil.c **** 
 4426              		.loc 1 1253 4 is_stmt 1 view .LVU1343
1255:fltk-1.3.4-1/png/pngrutil.c **** 
 4427              		.loc 1 1255 4 view .LVU1344
1257:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4428              		.loc 1 1257 4 view .LVU1345
1257:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4429              		.loc 1 1257 16 is_stmt 0 view .LVU1346
 4430 001e 8B872C01 		movl	300(%rdi), %eax
 4430      0000
1257:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4431              		.loc 1 1257 7 view .LVU1347
 4432 0024 A801     		testb	$1, %al
 4433 0026 0F84DE00 		je	.L376
 4433      0000
 4434 002c 4989F4   		movq	%rsi, %r12
 4435 002f 89D6     		movl	%edx, %esi
 4436              	.LVL497:
1260:fltk-1.3.4-1/png/pngrutil.c ****    {
 4437              		.loc 1 1260 9 is_stmt 1 view .LVU1348
1260:fltk-1.3.4-1/png/pngrutil.c ****    {
 4438              		.loc 1 1260 12 is_stmt 0 view .LVU1349
 4439 0031 A806     		testb	$6, %al
 4440 0033 0F858700 		jne	.L377
 4440      0000
1267:fltk-1.3.4-1/png/pngrutil.c ****    {
 4441              		.loc 1 1267 4 is_stmt 1 view .LVU1350
1267:fltk-1.3.4-1/png/pngrutil.c ****    {
 4442              		.loc 1 1267 7 is_stmt 0 view .LVU1351
 4443 0039 83FA01   		cmpl	$1, %edx
 4444 003c 7432     		je	.L371
1269:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 4445              		.loc 1 1269 7 is_stmt 1 view .LVU1352
 4446 003e E8000000 		call	png_crc_finish
 4446      00
 4447              	.LVL498:
1270:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4448              		.loc 1 1270 7 view .LVU1353
 4449 0043 488D3500 		leaq	.LC11(%rip), %rsi
 4449      000000
 4450 004a 4889EF   		movq	%rbp, %rdi
 4451 004d E8000000 		call	png_chunk_benign_error@PLT
 4451      00
 4452              	.LVL499:
1271:fltk-1.3.4-1/png/pngrutil.c ****    }
 4453              		.loc 1 1271 7 view .LVU1354
 4454              	.L367:
1296:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sRGB */
 4455              		.loc 1 1296 1 is_stmt 0 view .LVU1355
 4456 0052 488B4424 		movq	8(%rsp), %rax
 4456      08
 4457 0057 64483304 		xorq	%fs:40, %rax
 4457      25280000 
 4457      00
 4458 0060 0F85B000 		jne	.L378
 4458      0000
 4459 0066 4883C418 		addq	$24, %rsp
 4460              		.cfi_remember_state
 4461              		.cfi_def_cfa_offset 24
 4462 006a 5D       		popq	%rbp
 4463              		.cfi_def_cfa_offset 16
 4464              	.LVL500:
1296:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sRGB */
 4465              		.loc 1 1296 1 view .LVU1356
 4466 006b 415C     		popq	%r12
 4467              		.cfi_def_cfa_offset 8
 4468              	.LVL501:
1296:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sRGB */
 4469              		.loc 1 1296 1 view .LVU1357
 4470 006d C3       		ret
 4471              	.LVL502:
 4472 006e 6690     		.p2align 4,,10
 4473              		.p2align 3
 4474              	.L371:
 4475              		.cfi_restore_state
1274:fltk-1.3.4-1/png/pngrutil.c **** 
 4476              		.loc 1 1274 4 is_stmt 1 view .LVU1358
 4477              	.LBB232:
 4478              	.LBI232:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 4479              		.loc 1 187 1 view .LVU1359
 4480              	.LBB233:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4481              		.loc 1 189 4 view .LVU1360
 4482 0070 488D7424 		leaq	7(%rsp), %rsi
 4482      07
 4483              	.LVL503:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4484              		.loc 1 189 4 is_stmt 0 view .LVU1361
 4485 0075 BA010000 		movl	$1, %edx
 4485      00
 4486              	.LVL504:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4487              		.loc 1 189 4 view .LVU1362
 4488 007a E8000000 		call	png_crc_read.part.0
 4488      00
 4489              	.LVL505:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4490              		.loc 1 189 4 view .LVU1363
 4491              	.LBE233:
 4492              	.LBE232:
1276:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4493              		.loc 1 1276 4 is_stmt 1 view .LVU1364
1276:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4494              		.loc 1 1276 8 is_stmt 0 view .LVU1365
 4495 007f 31F6     		xorl	%esi, %esi
 4496 0081 4889EF   		movq	%rbp, %rdi
 4497 0084 E8000000 		call	png_crc_finish
 4497      00
 4498              	.LVL506:
1276:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4499              		.loc 1 1276 7 view .LVU1366
 4500 0089 85C0     		testl	%eax, %eax
 4501 008b 75C5     		jne	.L367
1280:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4502              		.loc 1 1280 4 is_stmt 1 view .LVU1367
1280:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4503              		.loc 1 1280 28 is_stmt 0 view .LVU1368
 4504 008d 0FB78522 		movzwl	1314(%rbp), %eax
 4504      050000
1280:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4505              		.loc 1 1280 7 view .LVU1369
 4506 0094 6685C0   		testw	%ax, %ax
 4507 0097 78B9     		js	.L367
1286:fltk-1.3.4-1/png/pngrutil.c ****    {
 4508              		.loc 1 1286 4 is_stmt 1 view .LVU1370
1286:fltk-1.3.4-1/png/pngrutil.c ****    {
 4509              		.loc 1 1286 7 is_stmt 0 view .LVU1371
 4510 0099 A804     		testb	$4, %al
 4511 009b 7543     		jne	.L379
1294:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4512              		.loc 1 1294 4 is_stmt 1 view .LVU1372
1294:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4513              		.loc 1 1294 10 is_stmt 0 view .LVU1373
 4514 009d 0FB65424 		movzbl	7(%rsp), %edx
 4514      07
1294:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4515              		.loc 1 1294 43 view .LVU1374
 4516 00a2 488DB5D8 		leaq	1240(%rbp), %rsi
 4516      040000
1294:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4517              		.loc 1 1294 10 view .LVU1375
 4518 00a9 4889EF   		movq	%rbp, %rdi
 4519 00ac E8000000 		call	png_colorspace_set_sRGB@PLT
 4519      00
 4520              	.LVL507:
1295:fltk-1.3.4-1/png/pngrutil.c **** }
 4521              		.loc 1 1295 4 is_stmt 1 view .LVU1376
 4522 00b1 4C89E6   		movq	%r12, %rsi
 4523 00b4 4889EF   		movq	%rbp, %rdi
 4524 00b7 E8000000 		call	png_colorspace_sync@PLT
 4524      00
 4525              	.LVL508:
 4526 00bc EB94     		jmp	.L367
 4527              	.LVL509:
 4528 00be 6690     		.p2align 4,,10
 4529              		.p2align 3
 4530              	.L377:
1262:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 4531              		.loc 1 1262 7 view .LVU1377
 4532 00c0 E8000000 		call	png_crc_finish
 4532      00
 4533              	.LVL510:
1263:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4534              		.loc 1 1263 7 view .LVU1378
 4535 00c5 488D3500 		leaq	.LC10(%rip), %rsi
 4535      000000
 4536 00cc 4889EF   		movq	%rbp, %rdi
 4537 00cf E8000000 		call	png_chunk_benign_error@PLT
 4537      00
 4538              	.LVL511:
1264:fltk-1.3.4-1/png/pngrutil.c ****    }
 4539              		.loc 1 1264 7 view .LVU1379
 4540 00d4 E979FFFF 		jmp	.L367
 4540      FF
 4541 00d9 0F1F8000 		.p2align 4,,10
 4541      000000
 4542              		.p2align 3
 4543              	.L379:
1288:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
 4544              		.loc 1 1288 7 view .LVU1380
1288:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
 4545              		.loc 1 1288 33 is_stmt 0 view .LVU1381
 4546 00e0 660D0080 		orw	$-32768, %ax
1289:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "too many profiles");
 4547              		.loc 1 1289 7 view .LVU1382
 4548 00e4 4C89E6   		movq	%r12, %rsi
 4549 00e7 4889EF   		movq	%rbp, %rdi
1288:fltk-1.3.4-1/png/pngrutil.c ****       png_colorspace_sync(png_ptr, info_ptr);
 4550              		.loc 1 1288 33 view .LVU1383
 4551 00ea 66898522 		movw	%ax, 1314(%rbp)
 4551      050000
1289:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "too many profiles");
 4552              		.loc 1 1289 7 is_stmt 1 view .LVU1384
 4553 00f1 E8000000 		call	png_colorspace_sync@PLT
 4553      00
 4554              	.LVL512:
1290:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4555              		.loc 1 1290 7 view .LVU1385
 4556 00f6 488D3500 		leaq	.LC19(%rip), %rsi
 4556      000000
 4557 00fd 4889EF   		movq	%rbp, %rdi
 4558 0100 E8000000 		call	png_chunk_benign_error@PLT
 4558      00
 4559              	.LVL513:
1291:fltk-1.3.4-1/png/pngrutil.c ****    }
 4560              		.loc 1 1291 7 view .LVU1386
 4561 0105 E948FFFF 		jmp	.L367
 4561      FF
 4562              	.LVL514:
 4563              	.L376:
1258:fltk-1.3.4-1/png/pngrutil.c **** 
 4564              		.loc 1 1258 7 view .LVU1387
 4565 010a 488D3500 		leaq	.LC12(%rip), %rsi
 4565      000000
 4566              	.LVL515:
1258:fltk-1.3.4-1/png/pngrutil.c **** 
 4567              		.loc 1 1258 7 is_stmt 0 view .LVU1388
 4568 0111 E8000000 		call	png_chunk_error@PLT
 4568      00
 4569              	.LVL516:
 4570              	.L378:
1296:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sRGB */
 4571              		.loc 1 1296 1 view .LVU1389
 4572 0116 E8000000 		call	__stack_chk_fail@PLT
 4572      00
 4573              	.LVL517:
 4574              		.cfi_endproc
 4575              	.LFE62:
 4577              		.section	.rodata.png_handle_iCCP.str1.1,"aMS",@progbits,1
 4578              	.LC20:
 4579 0000 6F757420 		.string	"out of memory"
 4579      6F66206D 
 4579      656D6F72 
 4579      7900
 4580              	.LC21:
 4581 000e 7472756E 		.string	"truncated"
 4581      63617465 
 4581      6400
 4582              	.LC22:
 4583 0018 62616420 		.string	"bad keyword"
 4583      6B657977 
 4583      6F726400 
 4584              	.LC23:
 4585 0024 62616420 		.string	"bad compression method"
 4585      636F6D70 
 4585      72657373 
 4585      696F6E20 
 4585      6D657468 
 4586              	.LC24:
 4587 003b 746F6F20 		.string	"too short"
 4587      73686F72 
 4587      7400
 4588              		.section	.text.png_handle_iCCP,"ax",@progbits
 4589              		.p2align 4
 4590              		.globl	png_handle_iCCP
 4592              	png_handle_iCCP:
 4593              	.LVL518:
 4594              	.LFB63:
1303:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL; /* error message output, or no error */
 4595              		.loc 1 1303 1 is_stmt 1 view -0
 4596              		.cfi_startproc
1303:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL; /* error message output, or no error */
 4597              		.loc 1 1303 1 is_stmt 0 view .LVU1391
 4598 0000 F30F1EFA 		endbr64
 4599 0004 4157     		pushq	%r15
 4600              		.cfi_def_cfa_offset 16
 4601              		.cfi_offset 15, -16
 4602 0006 4156     		pushq	%r14
 4603              		.cfi_def_cfa_offset 24
 4604              		.cfi_offset 14, -24
 4605 0008 4155     		pushq	%r13
 4606              		.cfi_def_cfa_offset 32
 4607              		.cfi_offset 13, -32
 4608 000a 4154     		pushq	%r12
 4609              		.cfi_def_cfa_offset 40
 4610              		.cfi_offset 12, -40
 4611 000c 55       		pushq	%rbp
 4612              		.cfi_def_cfa_offset 48
 4613              		.cfi_offset 6, -48
 4614 000d 4889FD   		movq	%rdi, %rbp
 4615 0010 53       		pushq	%rbx
 4616              		.cfi_def_cfa_offset 56
 4617              		.cfi_offset 3, -56
 4618 0011 4881EC58 		subq	$1368, %rsp
 4618      050000
 4619              		.cfi_def_cfa_offset 1424
1309:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4620              		.loc 1 1309 16 view .LVU1392
 4621 0018 448BAF2C 		movl	300(%rdi), %r13d
 4621      010000
1303:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL; /* error message output, or no error */
 4622              		.loc 1 1303 1 view .LVU1393
 4623 001f 8954243C 		movl	%edx, 60(%rsp)
 4624 0023 64488B04 		movq	%fs:40, %rax
 4624      25280000 
 4624      00
 4625 002c 48898424 		movq	%rax, 1352(%rsp)
 4625      48050000 
 4626 0034 31C0     		xorl	%eax, %eax
1304:fltk-1.3.4-1/png/pngrutil.c ****    int finished = 0; /* crc checked */
 4627              		.loc 1 1304 4 is_stmt 1 view .LVU1394
 4628              	.LVL519:
1305:fltk-1.3.4-1/png/pngrutil.c **** 
 4629              		.loc 1 1305 4 view .LVU1395
1307:fltk-1.3.4-1/png/pngrutil.c **** 
 4630              		.loc 1 1307 4 view .LVU1396
1309:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4631              		.loc 1 1309 4 view .LVU1397
1309:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 4632              		.loc 1 1309 7 is_stmt 0 view .LVU1398
 4633 0036 41F6C501 		testb	$1, %r13b
 4634 003a 0F84AC04 		je	.L440
 4634      0000
 4635 0040 4989F4   		movq	%rsi, %r12
1312:fltk-1.3.4-1/png/pngrutil.c ****    {
 4636              		.loc 1 1312 9 is_stmt 1 view .LVU1399
 4637 0043 8B74243C 		movl	60(%rsp), %esi
 4638              	.LVL520:
1312:fltk-1.3.4-1/png/pngrutil.c ****    {
 4639              		.loc 1 1312 12 is_stmt 0 view .LVU1400
 4640 0047 4183E506 		andl	$6, %r13d
 4641 004b 0F859F00 		jne	.L441
 4641      0000
1327:fltk-1.3.4-1/png/pngrutil.c ****    {
 4642              		.loc 1 1327 4 is_stmt 1 view .LVU1401
1327:fltk-1.3.4-1/png/pngrutil.c ****    {
 4643              		.loc 1 1327 7 is_stmt 0 view .LVU1402
 4644 0051 83FE08   		cmpl	$8, %esi
 4645 0054 0F861601 		jbe	.L442
 4645      0000
1335:fltk-1.3.4-1/png/pngrutil.c ****    {
 4646              		.loc 1 1335 4 is_stmt 1 view .LVU1403
1335:fltk-1.3.4-1/png/pngrutil.c ****    {
 4647              		.loc 1 1335 28 is_stmt 0 view .LVU1404
 4648 005a 0FB78722 		movzwl	1314(%rdi), %eax
 4648      050000
1335:fltk-1.3.4-1/png/pngrutil.c ****    {
 4649              		.loc 1 1335 7 view .LVU1405
 4650 0061 6685C0   		testw	%ax, %ax
 4651 0064 0F882601 		js	.L443
 4651      0000
1344:fltk-1.3.4-1/png/pngrutil.c ****    {
 4652              		.loc 1 1344 4 is_stmt 1 view .LVU1406
1344:fltk-1.3.4-1/png/pngrutil.c ****    {
 4653              		.loc 1 1344 7 is_stmt 0 view .LVU1407
 4654 006a A804     		testb	$4, %al
 4655 006c 0F85EE00 		jne	.L416
 4655      0000
 4656              	.LBB234:
1346:fltk-1.3.4-1/png/pngrutil.c ****       char keyword[81];
 4657              		.loc 1 1346 7 is_stmt 1 view .LVU1408
1347:fltk-1.3.4-1/png/pngrutil.c **** 
 4658              		.loc 1 1347 7 view .LVU1409
1352:fltk-1.3.4-1/png/pngrutil.c ****       if (read_length > length)
 4659              		.loc 1 1352 7 view .LVU1410
 4660              	.LVL521:
1353:fltk-1.3.4-1/png/pngrutil.c ****          read_length = (uInt)length;
 4661              		.loc 1 1353 7 view .LVU1411
1353:fltk-1.3.4-1/png/pngrutil.c ****          read_length = (uInt)length;
 4662              		.loc 1 1353 10 is_stmt 0 view .LVU1412
 4663 0072 83FE50   		cmpl	$80, %esi
 4664 0075 41BE5100 		movl	$81, %r14d
 4664      0000
 4665              	.LBB235:
 4666              	.LBB236:
 4667 007b 4C8D7C24 		leaq	80(%rsp), %r15
 4667      50
 4668              	.LBE236:
 4669              	.LBE235:
 4670 0080 440F46F6 		cmovbe	%esi, %r14d
 4671              	.LVL522:
1356:fltk-1.3.4-1/png/pngrutil.c ****       length -= read_length;
 4672              		.loc 1 1356 7 is_stmt 1 view .LVU1413
 4673              	.LBB238:
 4674              	.LBI235:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 4675              		.loc 1 187 1 view .LVU1414
 4676              	.LBB237:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4677              		.loc 1 189 4 view .LVU1415
 4678 0084 4C89FE   		movq	%r15, %rsi
 4679 0087 4489F2   		movl	%r14d, %edx
 4680              	.LVL523:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4681              		.loc 1 189 4 is_stmt 0 view .LVU1416
 4682 008a E8000000 		call	png_crc_read.part.0
 4682      00
 4683              	.LVL524:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4684              		.loc 1 189 4 view .LVU1417
 4685              	.LBE237:
 4686              	.LBE238:
1357:fltk-1.3.4-1/png/pngrutil.c **** 
 4687              		.loc 1 1357 7 is_stmt 1 view .LVU1418
1357:fltk-1.3.4-1/png/pngrutil.c **** 
 4688              		.loc 1 1357 14 is_stmt 0 view .LVU1419
 4689 008f 8B74243C 		movl	60(%rsp), %esi
 4690 0093 4C89F8   		movq	%r15, %rax
 4691 0096 4429F6   		subl	%r14d, %esi
 4692 0099 8974243C 		movl	%esi, 60(%rsp)
1359:fltk-1.3.4-1/png/pngrutil.c ****       while (keyword_length < 80 && keyword_length < read_length &&
 4693              		.loc 1 1359 7 is_stmt 1 view .LVU1420
 4694              	.LVL525:
1360:fltk-1.3.4-1/png/pngrutil.c ****          keyword[keyword_length] != 0)
 4695              		.loc 1 1360 7 view .LVU1421
1360:fltk-1.3.4-1/png/pngrutil.c ****          keyword[keyword_length] != 0)
 4696              		.loc 1 1360 13 view .LVU1422
 4697 009d EB16     		jmp	.L388
 4698              	.LVL526:
 4699 009f 90       		.p2align 4,,10
 4700              		.p2align 3
 4701              	.L390:
1362:fltk-1.3.4-1/png/pngrutil.c **** 
 4702              		.loc 1 1362 10 view .LVU1423
 4703 00a0 418D5D01 		leal	1(%r13), %ebx
 4704              	.LVL527:
1360:fltk-1.3.4-1/png/pngrutil.c ****          keyword[keyword_length] != 0)
 4705              		.loc 1 1360 13 view .LVU1424
 4706 00a4 4883C001 		addq	$1, %rax
 4707 00a8 83FB4F   		cmpl	$79, %ebx
 4708 00ab 7714     		ja	.L389
 4709 00ad 4139DE   		cmpl	%ebx, %r14d
 4710 00b0 760F     		jbe	.L389
 4711 00b2 4189DD   		movl	%ebx, %r13d
 4712              	.LVL528:
 4713              	.L388:
1360:fltk-1.3.4-1/png/pngrutil.c ****          keyword[keyword_length] != 0)
 4714              		.loc 1 1360 66 is_stmt 0 discriminator 1 view .LVU1425
 4715 00b5 803800   		cmpb	$0, (%rax)
 4716 00b8 75E6     		jne	.L390
1360:fltk-1.3.4-1/png/pngrutil.c ****          keyword[keyword_length] != 0)
 4717              		.loc 1 1360 66 view .LVU1426
 4718 00ba 4489EB   		movl	%r13d, %ebx
 4719 00bd 4183ED01 		subl	$1, %r13d
 4720              	.LVL529:
 4721              	.L389:
1365:fltk-1.3.4-1/png/pngrutil.c ****       {
 4722              		.loc 1 1365 7 is_stmt 1 view .LVU1427
1365:fltk-1.3.4-1/png/pngrutil.c ****       {
 4723              		.loc 1 1365 10 is_stmt 0 view .LVU1428
 4724 00c1 4183FD4E 		cmpl	$78, %r13d
 4725 00c5 7769     		ja	.L391
1370:fltk-1.3.4-1/png/pngrutil.c ****             keyword[keyword_length+1] == PNG_COMPRESSION_TYPE_BASE)
 4726              		.loc 1 1370 10 is_stmt 1 view .LVU1429
1370:fltk-1.3.4-1/png/pngrutil.c ****             keyword[keyword_length+1] == PNG_COMPRESSION_TYPE_BASE)
 4727              		.loc 1 1370 28 is_stmt 0 view .LVU1430
 4728 00c7 448D5B01 		leal	1(%rbx), %r11d
1370:fltk-1.3.4-1/png/pngrutil.c ****             keyword[keyword_length+1] == PNG_COMPRESSION_TYPE_BASE)
 4729              		.loc 1 1370 13 view .LVU1431
 4730 00cb 4539F3   		cmpl	%r14d, %r11d
 4731 00ce 730F     		jnb	.L439
1371:fltk-1.3.4-1/png/pngrutil.c ****          {
 4732              		.loc 1 1371 20 discriminator 1 view .LVU1432
 4733 00d0 4589DD   		movl	%r11d, %r13d
1370:fltk-1.3.4-1/png/pngrutil.c ****             keyword[keyword_length+1] == PNG_COMPRESSION_TYPE_BASE)
 4734              		.loc 1 1370 45 discriminator 1 view .LVU1433
 4735 00d3 42807C2C 		cmpb	$0, 80(%rsp,%r13)
 4735      5000
 4736 00d9 0F84BB00 		je	.L393
 4736      0000
 4737              	.L439:
 4738              	.LVL530:
1370:fltk-1.3.4-1/png/pngrutil.c ****             keyword[keyword_length+1] == PNG_COMPRESSION_TYPE_BASE)
 4739              		.loc 1 1370 45 discriminator 1 view .LVU1434
 4740              	.LBE234:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 4741              		.loc 1 1562 4 is_stmt 1 view .LVU1435
 4742              	.LBB291:
1551:fltk-1.3.4-1/png/pngrutil.c ****       }
 4743              		.loc 1 1551 20 is_stmt 0 view .LVU1436
 4744 00df 4C8D2D00 		leaq	.LC23(%rip), %r13
 4744      000000
 4745 00e6 EB4F     		jmp	.L386
 4746              	.LVL531:
 4747 00e8 0F1F8400 		.p2align 4,,10
 4747      00000000 
 4748              		.p2align 3
 4749              	.L441:
1551:fltk-1.3.4-1/png/pngrutil.c ****       }
 4750              		.loc 1 1551 20 view .LVU1437
 4751              	.LBE291:
1314:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 4752              		.loc 1 1314 7 is_stmt 1 view .LVU1438
 4753 00f0 E8000000 		call	png_crc_finish
 4753      00
 4754              	.LVL532:
1315:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4755              		.loc 1 1315 7 view .LVU1439
 4756 00f5 488D3500 		leaq	.LC10(%rip), %rsi
 4756      000000
 4757 00fc 4889EF   		movq	%rbp, %rdi
 4758 00ff E8000000 		call	png_chunk_benign_error@PLT
 4758      00
 4759              	.LVL533:
1316:fltk-1.3.4-1/png/pngrutil.c ****    }
 4760              		.loc 1 1316 7 view .LVU1440
 4761              	.L380:
1569:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP */
 4762              		.loc 1 1569 1 is_stmt 0 view .LVU1441
 4763 0104 488B8424 		movq	1352(%rsp), %rax
 4763      48050000 
 4764 010c 64483304 		xorq	%fs:40, %rax
 4764      25280000 
 4764      00
 4765 0115 0F85DD03 		jne	.L444
 4765      0000
 4766 011b 4881C458 		addq	$1368, %rsp
 4766      050000
 4767              		.cfi_remember_state
 4768              		.cfi_def_cfa_offset 56
 4769 0122 5B       		popq	%rbx
 4770              		.cfi_def_cfa_offset 48
 4771 0123 5D       		popq	%rbp
 4772              		.cfi_def_cfa_offset 40
 4773              	.LVL534:
1569:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP */
 4774              		.loc 1 1569 1 view .LVU1442
 4775 0124 415C     		popq	%r12
 4776              		.cfi_def_cfa_offset 32
 4777              	.LVL535:
1569:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP */
 4778              		.loc 1 1569 1 view .LVU1443
 4779 0126 415D     		popq	%r13
 4780              		.cfi_def_cfa_offset 24
 4781 0128 415E     		popq	%r14
 4782              		.cfi_def_cfa_offset 16
 4783 012a 415F     		popq	%r15
 4784              		.cfi_def_cfa_offset 8
 4785 012c C3       		ret
 4786              	.LVL536:
 4787 012d 0F1F00   		.p2align 4,,10
 4788              		.p2align 3
 4789              	.L391:
 4790              		.cfi_restore_state
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 4791              		.loc 1 1562 4 is_stmt 1 view .LVU1444
 4792              	.LBB292:
1555:fltk-1.3.4-1/png/pngrutil.c ****    }
 4793              		.loc 1 1555 17 is_stmt 0 view .LVU1445
 4794 0130 4C8D2D00 		leaq	.LC22(%rip), %r13
 4794      000000
 4795              	.LVL537:
 4796              	.L386:
1555:fltk-1.3.4-1/png/pngrutil.c ****    }
 4797              		.loc 1 1555 17 view .LVU1446
 4798              	.LBE292:
1563:fltk-1.3.4-1/png/pngrutil.c **** 
 4799              		.loc 1 1563 7 is_stmt 1 view .LVU1447
 4800 0137 4889EF   		movq	%rbp, %rdi
 4801 013a E8000000 		call	png_crc_finish
 4801      00
 4802              	.LVL538:
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4803              		.loc 1 1565 4 view .LVU1448
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 4804              		.loc 1 1566 4 is_stmt 0 view .LVU1449
 4805 013f 4C89E6   		movq	%r12, %rsi
 4806 0142 4889EF   		movq	%rbp, %rdi
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4807              		.loc 1 1565 30 view .LVU1450
 4808 0145 66818D22 		orw	$-32768, 1314(%rbp)
 4808      05000000 
 4808      80
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 4809              		.loc 1 1566 4 is_stmt 1 view .LVU1451
 4810 014e E8000000 		call	png_colorspace_sync@PLT
 4810      00
 4811              	.LVL539:
1567:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
 4812              		.loc 1 1567 4 view .LVU1452
 4813              	.L410:
1568:fltk-1.3.4-1/png/pngrutil.c **** }
 4814              		.loc 1 1568 7 view .LVU1453
 4815 0153 4C89EE   		movq	%r13, %rsi
 4816 0156 4889EF   		movq	%rbp, %rdi
 4817 0159 E8000000 		call	png_chunk_benign_error@PLT
 4817      00
 4818              	.LVL540:
 4819 015e EBA4     		jmp	.L380
 4820              	.LVL541:
 4821              		.p2align 4,,10
 4822              		.p2align 3
 4823              	.L416:
1559:fltk-1.3.4-1/png/pngrutil.c **** 
 4824              		.loc 1 1559 14 is_stmt 0 view .LVU1454
 4825 0160 4C8D2D00 		leaq	.LC19(%rip), %r13
 4825      000000
 4826 0167 EBCE     		jmp	.L386
 4827 0169 0F1F8000 		.p2align 4,,10
 4827      000000
 4828              		.p2align 3
 4829              	.L442:
1329:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "too short");
 4830              		.loc 1 1329 7 is_stmt 1 view .LVU1455
 4831 0170 E8000000 		call	png_crc_finish
 4831      00
 4832              	.LVL542:
1330:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4833              		.loc 1 1330 7 view .LVU1456
 4834 0175 488D3500 		leaq	.LC24(%rip), %rsi
 4834      000000
 4835 017c 4889EF   		movq	%rbp, %rdi
 4836 017f E8000000 		call	png_chunk_benign_error@PLT
 4836      00
 4837              	.LVL543:
1331:fltk-1.3.4-1/png/pngrutil.c ****    }
 4838              		.loc 1 1331 7 view .LVU1457
 4839 0184 E97BFFFF 		jmp	.L380
 4839      FF
 4840              	.LVL544:
 4841 0189 0F1F8000 		.p2align 4,,10
 4841      000000
 4842              		.p2align 3
 4843              	.L443:
1337:fltk-1.3.4-1/png/pngrutil.c ****       return;
 4844              		.loc 1 1337 7 view .LVU1458
 4845 0190 E8000000 		call	png_crc_finish
 4845      00
 4846              	.LVL545:
1338:fltk-1.3.4-1/png/pngrutil.c ****    }
 4847              		.loc 1 1338 7 view .LVU1459
 4848 0195 E96AFFFF 		jmp	.L380
 4848      FF
 4849              	.LVL546:
 4850              	.L393:
 4851              	.LBB293:
1373:fltk-1.3.4-1/png/pngrutil.c **** 
 4852              		.loc 1 1373 13 view .LVU1460
1375:fltk-1.3.4-1/png/pngrutil.c ****             {
 4853              		.loc 1 1375 13 view .LVU1461
1375:fltk-1.3.4-1/png/pngrutil.c ****             {
 4854              		.loc 1 1375 17 is_stmt 0 view .LVU1462
 4855 019a BE504343 		movl	$1766015824, %esi
 4855      69
 4856 019f 4889EF   		movq	%rbp, %rdi
 4857 01a2 E8000000 		call	png_inflate_claim
 4857      00
 4858              	.LVL547:
1375:fltk-1.3.4-1/png/pngrutil.c ****             {
 4859              		.loc 1 1375 16 view .LVU1463
 4860 01a7 85C0     		testl	%eax, %eax
 4861 01a9 0F85C900 		jne	.L394
 4861      0000
 4862              	.LBB239:
1377:fltk-1.3.4-1/png/pngrutil.c ****                Byte local_buffer[PNG_INFLATE_BUF_SIZE];
 4863              		.loc 1 1377 16 is_stmt 1 view .LVU1464
1378:fltk-1.3.4-1/png/pngrutil.c ****                png_alloc_size_t size = (sizeof profile_header);
 4864              		.loc 1 1378 16 view .LVU1465
1379:fltk-1.3.4-1/png/pngrutil.c **** 
 4865              		.loc 1 1379 16 view .LVU1466
1379:fltk-1.3.4-1/png/pngrutil.c **** 
 4866              		.loc 1 1379 33 is_stmt 0 view .LVU1467
 4867 01af 48C74424 		movq	$132, 72(%rsp)
 4867      48840000 
 4867      00
1381:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->zstream.avail_in = read_length;
 4868              		.loc 1 1381 16 is_stmt 1 view .LVU1468
1381:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->zstream.avail_in = read_length;
 4869              		.loc 1 1381 76 is_stmt 0 view .LVU1469
 4870 01b8 8D4302   		leal	2(%rbx), %eax
 4871 01bb 4183EE02 		subl	$2, %r14d
 4872              	.LVL548:
1381:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->zstream.avail_in = read_length;
 4873              		.loc 1 1381 59 view .LVU1470
 4874 01bf 4C01F8   		addq	%r15, %rax
 4875              	.LBE239:
1373:fltk-1.3.4-1/png/pngrutil.c **** 
 4876              		.loc 1 1373 25 view .LVU1471
 4877 01c2 4129DE   		subl	%ebx, %r14d
 4878              	.LVL549:
 4879              	.LBB282:
1381:fltk-1.3.4-1/png/pngrutil.c ****                png_ptr->zstream.avail_in = read_length;
 4880              		.loc 1 1381 59 view .LVU1472
 4881 01c5 48898540 		movq	%rax, 320(%rbp)
 4881      010000
1382:fltk-1.3.4-1/png/pngrutil.c ****                (void)png_inflate_read(png_ptr, local_buffer,
 4882              		.loc 1 1382 16 is_stmt 1 view .LVU1473
 4883              	.LBB240:
 4884              	.LBB241:
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 4885              		.loc 1 732 7 is_stmt 0 view .LVU1474
 4886 01cc 8B851802 		movl	536(%rbp), %eax
 4886      0000
 4887              	.LBE241:
 4888              	.LBE240:
 4889              	.LBE282:
1373:fltk-1.3.4-1/png/pngrutil.c **** 
 4890              		.loc 1 1373 25 view .LVU1475
 4891 01d2 4489B548 		movl	%r14d, 328(%rbp)
 4891      010000
 4892              	.LBB283:
1383:fltk-1.3.4-1/png/pngrutil.c ****                   (sizeof local_buffer), &length, profile_header, &size,
 4893              		.loc 1 1383 16 is_stmt 1 view .LVU1476
 4894              	.LVL550:
 4895              	.LBB247:
 4896              	.LBI240:
 728:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size,
 4897              		.loc 1 728 1 view .LVU1477
 4898              	.LBB245:
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 4899              		.loc 1 732 4 view .LVU1478
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 4900              		.loc 1 732 7 is_stmt 0 view .LVU1479
 4901 01d9 39853801 		cmpl	%eax, 312(%rbp)
 4901      0000
 4902 01df 0F85DA02 		jne	.L395
 4902      0000
 4903              	.LBB242:
 734:fltk-1.3.4-1/png/pngrutil.c **** 
 4904              		.loc 1 734 7 is_stmt 1 view .LVU1480
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4905              		.loc 1 737 7 view .LVU1481
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4906              		.loc 1 737 33 is_stmt 0 view .LVU1482
 4907 01e5 488D8424 		leaq	176(%rsp), %rax
 4907      B0000000 
 4908              	.LVL551:
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4909              		.loc 1 737 33 view .LVU1483
 4910              	.LBE242:
 4911 01ed 488D5C24 		leaq	72(%rsp), %rbx
 4911      48
 4912              	.LVL552:
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4913              		.loc 1 737 33 view .LVU1484
 4914 01f2 4531C0   		xorl	%r8d, %r8d
 4915              	.LBB243:
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 4916              		.loc 1 738 34 view .LVU1485
 4917 01f5 C7856001 		movl	$0, 352(%rbp)
 4917      00000000 
 4917      0000
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4918              		.loc 1 737 33 view .LVU1486
 4919 01ff 48898558 		movq	%rax, 344(%rbp)
 4919      010000
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 4920              		.loc 1 738 7 is_stmt 1 view .LVU1487
 4921              	.LBE243:
 4922 0206 4C8DB424 		leaq	320(%rsp), %r14
 4922      40010000 
 4923              	.LVL553:
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 4924              		.loc 1 738 7 is_stmt 0 view .LVU1488
 4925 020e 4889D9   		movq	%rbx, %rcx
 4926 0211 4889EF   		movq	%rbp, %rdi
 4927              	.LBB244:
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4928              		.loc 1 737 33 view .LVU1489
 4929 0214 48894424 		movq	%rax, 16(%rsp)
 4929      10
 4930              	.LBE244:
 4931 0219 488D4424 		leaq	60(%rsp), %rax
 4931      3C
 4932              	.LVL554:
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4933              		.loc 1 737 33 view .LVU1490
 4934 021e 4C89F6   		movq	%r14, %rsi
 4935 0221 4889C2   		movq	%rax, %rdx
 4936 0224 48894424 		movq	%rax, 24(%rsp)
 4936      18
 4937 0229 E8000000 		call	png_inflate_read.part.0.constprop.0
 4937      00
 4938              	.LVL555:
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 4939              		.loc 1 737 33 view .LVU1491
 4940              	.LBE245:
 4941              	.LBE247:
1387:fltk-1.3.4-1/png/pngrutil.c ****                {
 4942              		.loc 1 1387 16 is_stmt 1 view .LVU1492
1387:fltk-1.3.4-1/png/pngrutil.c ****                {
 4943              		.loc 1 1387 19 is_stmt 0 view .LVU1493
 4944 022e 48837C24 		cmpq	$0, 72(%rsp)
 4944      4800
 4945 0234 744B     		je	.L445
 4946              	.L397:
1540:fltk-1.3.4-1/png/pngrutil.c **** 
 4947              		.loc 1 1540 19 is_stmt 1 view .LVU1494
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 4948              		.loc 1 1543 32 is_stmt 0 view .LVU1495
 4949 0236 C7853801 		movl	$0, 312(%rbp)
 4949      00000000 
 4949      0000
1540:fltk-1.3.4-1/png/pngrutil.c **** 
 4950              		.loc 1 1540 26 view .LVU1496
 4951 0240 4C8BAD70 		movq	368(%rbp), %r13
 4951      010000
 4952              	.LVL556:
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 4953              		.loc 1 1543 16 is_stmt 1 view .LVU1497
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 4954              		.loc 1 1543 16 is_stmt 0 view .LVU1498
 4955              	.LBE283:
 4956              	.LBE293:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 4957              		.loc 1 1562 4 is_stmt 1 view .LVU1499
 4958              	.L411:
1563:fltk-1.3.4-1/png/pngrutil.c **** 
 4959              		.loc 1 1563 7 view .LVU1500
 4960 0247 8B74243C 		movl	60(%rsp), %esi
 4961 024b 4889EF   		movq	%rbp, %rdi
 4962 024e E8000000 		call	png_crc_finish
 4962      00
 4963              	.LVL557:
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4964              		.loc 1 1565 4 view .LVU1501
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 4965              		.loc 1 1566 4 is_stmt 0 view .LVU1502
 4966 0253 4C89E6   		movq	%r12, %rsi
 4967 0256 4889EF   		movq	%rbp, %rdi
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 4968              		.loc 1 1565 30 view .LVU1503
 4969 0259 66818D22 		orw	$-32768, 1314(%rbp)
 4969      05000000 
 4969      80
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 4970              		.loc 1 1566 4 is_stmt 1 view .LVU1504
 4971 0262 E8000000 		call	png_colorspace_sync@PLT
 4971      00
 4972              	.LVL558:
1567:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
 4973              		.loc 1 1567 4 view .LVU1505
1567:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
 4974              		.loc 1 1567 7 is_stmt 0 view .LVU1506
 4975 0267 4D85ED   		testq	%r13, %r13
 4976 026a 0F8494FE 		je	.L380
 4976      FFFF
 4977 0270 E9DEFEFF 		jmp	.L410
 4977      FF
 4978              	.LVL559:
 4979              		.p2align 4,,10
 4980 0275 0F1F00   		.p2align 3
 4981              	.L394:
 4982              	.LBB294:
1547:fltk-1.3.4-1/png/pngrutil.c ****          }
 4983              		.loc 1 1547 16 is_stmt 1 view .LVU1507
1547:fltk-1.3.4-1/png/pngrutil.c ****          }
 4984              		.loc 1 1547 23 is_stmt 0 view .LVU1508
 4985 0278 4C8BAD70 		movq	368(%rbp), %r13
 4985      010000
 4986              	.LVL560:
1547:fltk-1.3.4-1/png/pngrutil.c ****          }
 4987              		.loc 1 1547 23 view .LVU1509
 4988              	.LBE294:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 4989              		.loc 1 1562 4 is_stmt 1 view .LVU1510
 4990 027f EBC6     		jmp	.L411
 4991              	.LVL561:
 4992              	.L445:
 4993              	.LBB295:
 4994              	.LBB284:
 4995              	.LBB248:
1391:fltk-1.3.4-1/png/pngrutil.c ****                      png_get_uint_32(profile_header);
 4996              		.loc 1 1391 19 view .LVU1511
1392:fltk-1.3.4-1/png/pngrutil.c **** 
 4997              		.loc 1 1392 22 is_stmt 0 view .LVU1512
 4998 0281 0FB68424 		movzbl	176(%rsp), %eax
 4998      B0000000 
 4999 0289 0FB69424 		movzbl	177(%rsp), %edx
 4999      B1000000 
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5000              		.loc 1 1394 23 view .LVU1513
 5001 0291 4889EF   		movq	%rbp, %rdi
1392:fltk-1.3.4-1/png/pngrutil.c **** 
 5002              		.loc 1 1392 22 view .LVU1514
 5003 0294 C1E210   		sall	$16, %edx
 5004 0297 C1E018   		sall	$24, %eax
 5005 029a 01D0     		addl	%edx, %eax
 5006 029c 0FB69424 		movzbl	179(%rsp), %edx
 5006      B3000000 
1391:fltk-1.3.4-1/png/pngrutil.c ****                      png_get_uint_32(profile_header);
 5007              		.loc 1 1391 37 view .LVU1515
 5008 02a4 01D0     		addl	%edx, %eax
1392:fltk-1.3.4-1/png/pngrutil.c **** 
 5009              		.loc 1 1392 22 view .LVU1516
 5010 02a6 0FB69424 		movzbl	178(%rsp), %edx
 5010      B2000000 
 5011 02ae C1E208   		sall	$8, %edx
1391:fltk-1.3.4-1/png/pngrutil.c ****                      png_get_uint_32(profile_header);
 5012              		.loc 1 1391 37 view .LVU1517
 5013 02b1 8D0C10   		leal	(%rax,%rdx), %ecx
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5014              		.loc 1 1394 53 view .LVU1518
 5015 02b4 488D85D8 		leaq	1240(%rbp), %rax
 5015      040000
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5016              		.loc 1 1394 23 view .LVU1519
 5017 02bb 4C89FA   		movq	%r15, %rdx
 5018 02be 4889C6   		movq	%rax, %rsi
1391:fltk-1.3.4-1/png/pngrutil.c ****                      png_get_uint_32(profile_header);
 5019              		.loc 1 1391 37 view .LVU1520
 5020 02c1 894C2428 		movl	%ecx, 40(%rsp)
 5021              	.LVL562:
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5022              		.loc 1 1394 19 is_stmt 1 view .LVU1521
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5023              		.loc 1 1394 53 is_stmt 0 view .LVU1522
 5024 02c5 48894424 		movq	%rax, 32(%rsp)
 5024      20
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5025              		.loc 1 1394 23 view .LVU1523
 5026 02ca E8000000 		call	png_icc_check_length@PLT
 5026      00
 5027              	.LVL563:
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5028              		.loc 1 1394 22 view .LVU1524
 5029 02cf 85C0     		testl	%eax, %eax
 5030 02d1 752F     		jne	.L398
 5031              	.L399:
1394:fltk-1.3.4-1/png/pngrutil.c ****                      keyword, profile_length) != 0)
 5032              		.loc 1 1394 22 view .LVU1525
 5033              	.LBE248:
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5034              		.loc 1 1543 16 is_stmt 1 view .LVU1526
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5035              		.loc 1 1543 32 is_stmt 0 view .LVU1527
 5036 02d3 C7853801 		movl	$0, 312(%rbp)
 5036      00000000 
 5036      0000
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5037              		.loc 1 1543 32 view .LVU1528
 5038              	.LBE284:
 5039              	.LBE295:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 5040              		.loc 1 1562 4 is_stmt 1 view .LVU1529
 5041              	.LVL564:
1563:fltk-1.3.4-1/png/pngrutil.c **** 
 5042              		.loc 1 1563 7 view .LVU1530
 5043 02dd 8B74243C 		movl	60(%rsp), %esi
 5044 02e1 4889EF   		movq	%rbp, %rdi
 5045 02e4 E8000000 		call	png_crc_finish
 5045      00
 5046              	.LVL565:
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 5047              		.loc 1 1565 4 view .LVU1531
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 5048              		.loc 1 1566 4 is_stmt 0 view .LVU1532
 5049 02e9 4C89E6   		movq	%r12, %rsi
 5050 02ec 4889EF   		movq	%rbp, %rdi
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 5051              		.loc 1 1565 30 view .LVU1533
 5052 02ef 66818D22 		orw	$-32768, 1314(%rbp)
 5052      05000000 
 5052      80
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 5053              		.loc 1 1566 4 is_stmt 1 view .LVU1534
 5054 02f8 E8000000 		call	png_colorspace_sync@PLT
 5054      00
 5055              	.LVL566:
1567:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
 5056              		.loc 1 1567 4 view .LVU1535
 5057 02fd E902FEFF 		jmp	.L380
 5057      FF
 5058              	.LVL567:
 5059              	.L398:
 5060              	.LBB296:
 5061              	.LBB285:
 5062              	.LBB276:
1400:fltk-1.3.4-1/png/pngrutil.c ****                         keyword, profile_length, profile_header,
 5063              		.loc 1 1400 22 view .LVU1536
1400:fltk-1.3.4-1/png/pngrutil.c ****                         keyword, profile_length, profile_header,
 5064              		.loc 1 1400 26 is_stmt 0 view .LVU1537
 5065 0302 4C8B4424 		movq	16(%rsp), %r8
 5065      10
 5066 0307 8B4C2428 		movl	40(%rsp), %ecx
 5067 030b 4C89FA   		movq	%r15, %rdx
 5068 030e 4889EF   		movq	%rbp, %rdi
 5069 0311 440FB68D 		movzbl	631(%rbp), %r9d
 5069      77020000 
 5070 0319 488B7424 		movq	32(%rsp), %rsi
 5070      20
 5071 031e E8000000 		call	png_icc_check_header@PLT
 5071      00
 5072              	.LVL568:
1400:fltk-1.3.4-1/png/pngrutil.c ****                         keyword, profile_length, profile_header,
 5073              		.loc 1 1400 25 view .LVU1538
 5074 0323 85C0     		testl	%eax, %eax
 5075 0325 74AC     		je	.L399
 5076              	.LBB249:
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5077              		.loc 1 1409 25 is_stmt 1 view .LVU1539
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5078              		.loc 1 1409 55 is_stmt 0 view .LVU1540
 5079 0327 0FB68424 		movzbl	304(%rsp), %eax
 5079      30010000 
1411:fltk-1.3.4-1/png/pngrutil.c ****                            profile_length, 2/*silent*/);
 5080              		.loc 1 1411 45 view .LVU1541
 5081 032f BA020000 		movl	$2, %edx
 5081      00
 5082 0334 4889EF   		movq	%rbp, %rdi
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5083              		.loc 1 1409 55 view .LVU1542
 5084 0337 8844242C 		movb	%al, 44(%rsp)
 5085 033b 0FB68424 		movzbl	305(%rsp), %eax
 5085      31010000 
 5086 0343 88442439 		movb	%al, 57(%rsp)
 5087 0347 0FB68424 		movzbl	306(%rsp), %eax
 5087      32010000 
 5088 034f 8844243A 		movb	%al, 58(%rsp)
 5089 0353 0FB68424 		movzbl	307(%rsp), %eax
 5089      33010000 
 5090 035b 8844243B 		movb	%al, 59(%rsp)
 5091              	.LVL569:
1411:fltk-1.3.4-1/png/pngrutil.c ****                            profile_length, 2/*silent*/);
 5092              		.loc 1 1411 25 is_stmt 1 view .LVU1543
1411:fltk-1.3.4-1/png/pngrutil.c ****                            profile_length, 2/*silent*/);
 5093              		.loc 1 1411 45 is_stmt 0 view .LVU1544
 5094 035f 8B442428 		movl	40(%rsp), %eax
 5095              	.LVL570:
1411:fltk-1.3.4-1/png/pngrutil.c ****                            profile_length, 2/*silent*/);
 5096              		.loc 1 1411 45 view .LVU1545
 5097 0363 4889C6   		movq	%rax, %rsi
 5098 0366 48894424 		movq	%rax, 48(%rsp)
 5098      30
 5099 036b E8000000 		call	png_read_buffer
 5099      00
 5100              	.LVL571:
1411:fltk-1.3.4-1/png/pngrutil.c ****                            profile_length, 2/*silent*/);
 5101              		.loc 1 1411 45 view .LVU1546
 5102 0370 48894424 		movq	%rax, 8(%rsp)
 5102      08
 5103              	.LVL572:
1414:fltk-1.3.4-1/png/pngrutil.c ****                         {
 5104              		.loc 1 1414 25 is_stmt 1 view .LVU1547
1414:fltk-1.3.4-1/png/pngrutil.c ****                         {
 5105              		.loc 1 1414 28 is_stmt 0 view .LVU1548
 5106 0375 4885C0   		testq	%rax, %rax
 5107 0378 0F845401 		je	.L446
 5107      0000
1416:fltk-1.3.4-1/png/pngrutil.c ****                               (sizeof profile_header));
 5108              		.loc 1 1416 28 is_stmt 1 view .LVU1549
 5109              	.LVL573:
 5110              	.LBB250:
 5111              	.LBI250:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5112              		.loc 2 31 1 view .LVU1550
 5113              	.LBB251:
 5114              		.loc 2 34 3 view .LVU1551
 5115              	.LBE251:
 5116              	.LBE250:
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5117              		.loc 1 1409 55 is_stmt 0 view .LVU1552
 5118 037e 8B54242C 		movl	44(%rsp), %edx
 5119 0382 0FB64424 		movzbl	57(%rsp), %eax
 5119      39
 5120              	.LVL574:
 5121              	.LBB253:
 5122              	.LBB252:
 5123              		.loc 2 34 10 view .LVU1553
 5124 0387 B9210000 		movl	$33, %ecx
 5124      00
 5125 038c 488B7424 		movq	16(%rsp), %rsi
 5125      10
 5126 0391 488B7C24 		movq	8(%rsp), %rdi
 5126      08
 5127 0396 F3A5     		rep movsl
 5128              	.LVL575:
 5129              		.loc 2 34 10 view .LVU1554
 5130              	.LBE252:
 5131              	.LBE253:
1419:fltk-1.3.4-1/png/pngrutil.c **** 
 5132              		.loc 1 1419 28 is_stmt 1 view .LVU1555
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5133              		.loc 1 1409 55 is_stmt 0 view .LVU1556
 5134 0398 C1E010   		sall	$16, %eax
 5135 039b C1E218   		sall	$24, %edx
1421:fltk-1.3.4-1/png/pngrutil.c ****                               (sizeof local_buffer), &length,
 5136              		.loc 1 1421 34 view .LVU1557
 5137 039e 488B7C24 		movq	8(%rsp), %rdi
 5137      08
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5138              		.loc 1 1409 55 view .LVU1558
 5139 03a3 01C2     		addl	%eax, %edx
 5140 03a5 0FB64424 		movzbl	59(%rsp), %eax
 5140      3B
 5141              	.LBB254:
 5142              	.LBB255:
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 5143              		.loc 1 732 7 view .LVU1559
 5144 03aa 8B8D1802 		movl	536(%rbp), %ecx
 5144      0000
 5145              	.LBE255:
 5146              	.LBE254:
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5147              		.loc 1 1409 43 view .LVU1560
 5148 03b0 01C2     		addl	%eax, %edx
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5149              		.loc 1 1409 55 view .LVU1561
 5150 03b2 0FB64424 		movzbl	58(%rsp), %eax
 5150      3A
 5151 03b7 C1E008   		sall	$8, %eax
1409:fltk-1.3.4-1/png/pngrutil.c ****                            profile_header+128);
 5152              		.loc 1 1409 43 view .LVU1562
 5153 03ba 01D0     		addl	%edx, %eax
1419:fltk-1.3.4-1/png/pngrutil.c **** 
 5154              		.loc 1 1419 38 view .LVU1563
 5155 03bc 6BC00C   		imull	$12, %eax, %eax
 5156 03bf 48894424 		movq	%rax, 16(%rsp)
 5156      10
1419:fltk-1.3.4-1/png/pngrutil.c **** 
 5157              		.loc 1 1419 33 view .LVU1564
 5158 03c4 48894424 		movq	%rax, 72(%rsp)
 5158      48
1421:fltk-1.3.4-1/png/pngrutil.c ****                               (sizeof local_buffer), &length,
 5159              		.loc 1 1421 28 is_stmt 1 view .LVU1565
1421:fltk-1.3.4-1/png/pngrutil.c ****                               (sizeof local_buffer), &length,
 5160              		.loc 1 1421 34 is_stmt 0 view .LVU1566
 5161 03c9 488D8784 		leaq	132(%rdi), %rax
 5161      000000
 5162              	.LVL576:
 5163              	.LBB260:
 5164              	.LBI254:
 728:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size,
 5165              		.loc 1 728 1 is_stmt 1 view .LVU1567
 5166              	.LBB258:
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 5167              		.loc 1 732 4 view .LVU1568
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 5168              		.loc 1 732 7 is_stmt 0 view .LVU1569
 5169 03d0 398D3801 		cmpl	%ecx, 312(%rbp)
 5169      0000
 5170 03d6 0F851402 		jne	.L401
 5170      0000
 5171              	.LBB256:
 734:fltk-1.3.4-1/png/pngrutil.c **** 
 5172              		.loc 1 734 7 is_stmt 1 view .LVU1570
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 5173              		.loc 1 737 7 view .LVU1571
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 5174              		.loc 1 737 33 is_stmt 0 view .LVU1572
 5175 03dc 48898558 		movq	%rax, 344(%rbp)
 5175      010000
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 5176              		.loc 1 738 7 is_stmt 1 view .LVU1573
 5177              	.LBE256:
 5178 03e3 4531C0   		xorl	%r8d, %r8d
 5179 03e6 4889D9   		movq	%rbx, %rcx
 5180 03e9 4C89F6   		movq	%r14, %rsi
 5181              	.LBB257:
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 5182              		.loc 1 738 34 is_stmt 0 view .LVU1574
 5183 03ec C7856001 		movl	$0, 352(%rbp)
 5183      00000000 
 5183      0000
 5184              	.LBE257:
 5185 03f6 488B5424 		movq	24(%rsp), %rdx
 5185      18
 5186 03fb 4889EF   		movq	%rbp, %rdi
 5187 03fe E8000000 		call	png_inflate_read.part.0.constprop.0
 5187      00
 5188              	.LVL577:
 5189              	.L402:
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 5190              		.loc 1 738 34 view .LVU1575
 5191              	.LBE258:
 5192              	.LBE260:
1428:fltk-1.3.4-1/png/pngrutil.c ****                            {
 5193              		.loc 1 1428 28 is_stmt 1 view .LVU1576
1428:fltk-1.3.4-1/png/pngrutil.c ****                            {
 5194              		.loc 1 1428 31 is_stmt 0 view .LVU1577
 5195 0403 48837C24 		cmpq	$0, 72(%rsp)
 5195      4800
 5196 0409 0F8527FE 		jne	.L397
 5196      FFFF
1430:fltk-1.3.4-1/png/pngrutil.c ****                                  &png_ptr->colorspace, keyword, profile_length,
 5197              		.loc 1 1430 31 is_stmt 1 view .LVU1578
1430:fltk-1.3.4-1/png/pngrutil.c ****                                  &png_ptr->colorspace, keyword, profile_length,
 5198              		.loc 1 1430 35 is_stmt 0 view .LVU1579
 5199 040f 4C8B4424 		movq	8(%rsp), %r8
 5199      08
 5200 0414 8B4C2428 		movl	40(%rsp), %ecx
 5201 0418 4C89FA   		movq	%r15, %rdx
 5202 041b 4889EF   		movq	%rbp, %rdi
 5203 041e 488B7424 		movq	32(%rsp), %rsi
 5203      20
 5204 0423 E8000000 		call	png_icc_check_tag_table@PLT
 5204      00
 5205              	.LVL578:
1430:fltk-1.3.4-1/png/pngrutil.c ****                                  &png_ptr->colorspace, keyword, profile_length,
 5206              		.loc 1 1430 34 view .LVU1580
 5207 0428 85C0     		testl	%eax, %eax
 5208 042a 0F84A3FE 		je	.L399
 5208      FFFF
1437:fltk-1.3.4-1/png/pngrutil.c ****                                     - 12 * tag_count;
 5209              		.loc 1 1437 34 is_stmt 1 view .LVU1581
1438:fltk-1.3.4-1/png/pngrutil.c **** 
 5210              		.loc 1 1438 37 is_stmt 0 view .LVU1582
 5211 0430 488B4424 		movq	48(%rsp), %rax
 5211      30
 5212 0435 488B4C24 		movq	16(%rsp), %rcx
 5212      10
 5213 043a 482D8400 		subq	$132, %rax
 5213      0000
 5214 0440 4829C8   		subq	%rcx, %rax
 5215 0443 48894424 		movq	%rax, 72(%rsp)
 5215      48
1440:fltk-1.3.4-1/png/pngrutil.c ****                                     (sizeof local_buffer), &length,
 5216              		.loc 1 1440 34 is_stmt 1 view .LVU1583
1440:fltk-1.3.4-1/png/pngrutil.c ****                                     (sizeof local_buffer), &length,
 5217              		.loc 1 1440 40 is_stmt 0 view .LVU1584
 5218 0448 488B4424 		movq	8(%rsp), %rax
 5218      08
 5219 044d 488D8408 		leaq	132(%rax,%rcx), %rax
 5219      84000000 
 5220              	.LVL579:
 5221              	.LBB261:
 5222              	.LBI261:
 728:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32p chunk_bytes, png_bytep next_out, png_alloc_size_t *out_size,
 5223              		.loc 1 728 1 is_stmt 1 view .LVU1585
 5224              	.LBB262:
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 5225              		.loc 1 732 4 view .LVU1586
 732:fltk-1.3.4-1/png/pngrutil.c ****    {
 5226              		.loc 1 732 7 is_stmt 0 view .LVU1587
 5227 0455 8B8D1802 		movl	536(%rbp), %ecx
 5227      0000
 5228 045b 398D3801 		cmpl	%ecx, 312(%rbp)
 5228      0000
 5229 0461 0F859C01 		jne	.L404
 5229      0000
 5230              	.LBB263:
 734:fltk-1.3.4-1/png/pngrutil.c **** 
 5231              		.loc 1 734 7 is_stmt 1 view .LVU1588
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 5232              		.loc 1 737 7 view .LVU1589
 737:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0; /* set in the loop */
 5233              		.loc 1 737 33 is_stmt 0 view .LVU1590
 5234 0467 48898558 		movq	%rax, 344(%rbp)
 5234      010000
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 5235              		.loc 1 738 7 is_stmt 1 view .LVU1591
 5236              	.LBE263:
 5237 046e 4889D9   		movq	%rbx, %rcx
 5238 0471 4C89F6   		movq	%r14, %rsi
 5239 0474 4889EF   		movq	%rbp, %rdi
 5240              	.LBB264:
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 5241              		.loc 1 738 34 is_stmt 0 view .LVU1592
 5242 0477 C7856001 		movl	$0, 352(%rbp)
 5242      00000000 
 5242      0000
 5243              	.LBE264:
 5244 0481 488B5424 		movq	24(%rsp), %rdx
 5244      18
 5245 0486 41B80100 		movl	$1, %r8d
 5245      0000
 5246 048c E8000000 		call	png_inflate_read.part.0.constprop.0
 5246      00
 5247              	.LVL580:
 5248              	.L405:
 738:fltk-1.3.4-1/png/pngrutil.c **** 
 5249              		.loc 1 738 34 view .LVU1593
 5250              	.LBE262:
 5251              	.LBE261:
1445:fltk-1.3.4-1/png/pngrutil.c ****                                        PNG_FLAG_BENIGN_ERRORS_WARN))
 5252              		.loc 1 1445 34 is_stmt 1 view .LVU1594
1445:fltk-1.3.4-1/png/pngrutil.c ****                                        PNG_FLAG_BENIGN_ERRORS_WARN))
 5253              		.loc 1 1445 45 is_stmt 0 view .LVU1595
 5254 0491 8B74243C 		movl	60(%rsp), %esi
 5255 0495 4189F0   		movl	%esi, %r8d
1445:fltk-1.3.4-1/png/pngrutil.c ****                                        PNG_FLAG_BENIGN_ERRORS_WARN))
 5256              		.loc 1 1445 37 view .LVU1596
 5257 0498 85F6     		testl	%esi, %esi
 5258 049a 7461     		je	.L406
1445:fltk-1.3.4-1/png/pngrutil.c ****                                        PNG_FLAG_BENIGN_ERRORS_WARN))
 5259              		.loc 1 1445 49 discriminator 1 view .LVU1597
 5260 049c F6853201 		testb	$16, 306(%rbp)
 5260      000010
 5261 04a3 0F852601 		jne	.L407
 5261      0000
 5262              	.LVL581:
1445:fltk-1.3.4-1/png/pngrutil.c ****                                        PNG_FLAG_BENIGN_ERRORS_WARN))
 5263              		.loc 1 1445 49 discriminator 1 view .LVU1598
 5264              	.LBE249:
 5265              	.LBE276:
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5266              		.loc 1 1543 16 is_stmt 1 view .LVU1599
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5267              		.loc 1 1543 32 is_stmt 0 view .LVU1600
 5268 04a9 C7853801 		movl	$0, 312(%rbp)
 5268      00000000 
 5268      0000
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5269              		.loc 1 1543 32 view .LVU1601
 5270              	.LBE285:
 5271              	.LBE296:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 5272              		.loc 1 1562 4 is_stmt 1 view .LVU1602
 5273              	.LBB297:
 5274              	.LBB286:
 5275              	.LBB277:
 5276              	.LBB272:
1447:fltk-1.3.4-1/png/pngrutil.c **** 
 5277              		.loc 1 1447 44 is_stmt 0 view .LVU1603
 5278 04b3 4C8D2D00 		leaq	.LC4(%rip), %r13
 5278      000000
 5279              	.LVL582:
1447:fltk-1.3.4-1/png/pngrutil.c **** 
 5280              		.loc 1 1447 44 view .LVU1604
 5281 04ba E978FCFF 		jmp	.L386
 5281      FF
 5282              	.LVL583:
 5283              	.L395:
1447:fltk-1.3.4-1/png/pngrutil.c **** 
 5284              		.loc 1 1447 44 view .LVU1605
 5285              	.LBE272:
 5286              	.LBE277:
 5287              	.LBB278:
 5288              	.LBB246:
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5289              		.loc 1 784 7 is_stmt 1 view .LVU1606
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5290              		.loc 1 784 28 is_stmt 0 view .LVU1607
 5291 04bf 488D0500 		leaq	.LC3(%rip), %rax
 5291      000000
 5292 04c6 48898570 		movq	%rax, 368(%rbp)
 5292      010000
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5293              		.loc 1 785 7 is_stmt 1 view .LVU1608
 5294              	.LVL584:
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5295              		.loc 1 785 7 is_stmt 0 view .LVU1609
 5296              	.LBE246:
 5297              	.LBE278:
1387:fltk-1.3.4-1/png/pngrutil.c ****                {
 5298              		.loc 1 1387 16 is_stmt 1 view .LVU1610
 5299 04cd E964FDFF 		jmp	.L397
 5299      FF
 5300              	.LVL585:
 5301              	.L446:
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5302              		.loc 1 1543 16 view .LVU1611
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5303              		.loc 1 1543 32 is_stmt 0 view .LVU1612
 5304 04d2 C7853801 		movl	$0, 312(%rbp)
 5304      00000000 
 5304      0000
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5305              		.loc 1 1543 32 view .LVU1613
 5306              	.LBE286:
 5307              	.LBE297:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 5308              		.loc 1 1562 4 is_stmt 1 view .LVU1614
 5309 04dc 8B74243C 		movl	60(%rsp), %esi
 5310              	.LBB298:
 5311              	.LBB287:
 5312              	.LBB279:
 5313              	.LBB273:
1530:fltk-1.3.4-1/png/pngrutil.c ****                      }
 5314              		.loc 1 1530 35 is_stmt 0 view .LVU1615
 5315 04e0 4C8D2D00 		leaq	.LC20(%rip), %r13
 5315      000000
 5316              	.LVL586:
1530:fltk-1.3.4-1/png/pngrutil.c ****                      }
 5317              		.loc 1 1530 35 view .LVU1616
 5318 04e7 E94BFCFF 		jmp	.L386
 5318      FF
 5319              	.LVL587:
 5320              	.L440:
1530:fltk-1.3.4-1/png/pngrutil.c ****                      }
 5321              		.loc 1 1530 35 view .LVU1617
 5322              	.LBE273:
 5323              	.LBE279:
 5324              	.LBE287:
 5325              	.LBE298:
1310:fltk-1.3.4-1/png/pngrutil.c **** 
 5326              		.loc 1 1310 7 is_stmt 1 view .LVU1618
 5327 04ec 488D3500 		leaq	.LC12(%rip), %rsi
 5327      000000
 5328              	.LVL588:
1310:fltk-1.3.4-1/png/pngrutil.c **** 
 5329              		.loc 1 1310 7 is_stmt 0 view .LVU1619
 5330 04f3 E8000000 		call	png_chunk_error@PLT
 5330      00
 5331              	.LVL589:
 5332              	.L444:
1569:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_iCCP */
 5333              		.loc 1 1569 1 view .LVU1620
 5334 04f8 E8000000 		call	__stack_chk_fail@PLT
 5334      00
 5335              	.LVL590:
 5336              	.L406:
 5337              	.LBB299:
 5338              	.LBB288:
 5339              	.LBB280:
 5340              	.LBB274:
1450:fltk-1.3.4-1/png/pngrutil.c ****                                  {
 5341              		.loc 1 1450 39 is_stmt 1 view .LVU1621
1450:fltk-1.3.4-1/png/pngrutil.c ****                                  {
 5342              		.loc 1 1450 42 is_stmt 0 view .LVU1622
 5343 04fd 48837C24 		cmpq	$0, 72(%rsp)
 5343      4800
 5344 0503 0F85B000 		jne	.L413
 5344      0000
 5345              	.L412:
1461:fltk-1.3.4-1/png/pngrutil.c ****                                     finished = 1;
 5346              		.loc 1 1461 37 is_stmt 1 view .LVU1623
 5347 0509 4489C6   		movl	%r8d, %esi
 5348 050c 4889EF   		movq	%rbp, %rdi
 5349 050f E8000000 		call	png_crc_finish
 5349      00
 5350              	.LVL591:
1462:fltk-1.3.4-1/png/pngrutil.c **** 
 5351              		.loc 1 1462 37 view .LVU1624
1466:fltk-1.3.4-1/png/pngrutil.c ****                                           &png_ptr->colorspace, profile,
 5352              		.loc 1 1466 40 view .LVU1625
 5353 0514 488B5C24 		movq	8(%rsp), %rbx
 5353      08
 5354 0519 488B7424 		movq	32(%rsp), %rsi
 5354      20
 5355 051e 4889EF   		movq	%rbp, %rdi
 5356 0521 488B8DA0 		movq	416(%rbp), %rcx
 5356      010000
 5357 0528 4889DA   		movq	%rbx, %rdx
 5358 052b E8000000 		call	png_icc_set_sRGB@PLT
 5358      00
 5359              	.LVL592:
1472:fltk-1.3.4-1/png/pngrutil.c ****                                     {
 5360              		.loc 1 1472 37 view .LVU1626
1472:fltk-1.3.4-1/png/pngrutil.c ****                                     {
 5361              		.loc 1 1472 40 is_stmt 0 view .LVU1627
 5362 0530 4D85E4   		testq	%r12, %r12
 5363 0533 7475     		je	.L408
1474:fltk-1.3.4-1/png/pngrutil.c ****                                           PNG_FREE_ICCP, 0);
 5364              		.loc 1 1474 40 is_stmt 1 view .LVU1628
 5365 0535 31C9     		xorl	%ecx, %ecx
 5366 0537 BA100000 		movl	$16, %edx
 5366      00
 5367 053c 4C89E6   		movq	%r12, %rsi
 5368 053f 4889EF   		movq	%rbp, %rdi
 5369 0542 E8000000 		call	png_free_data@PLT
 5369      00
 5370              	.LVL593:
1477:fltk-1.3.4-1/png/pngrutil.c ****                                           png_malloc_base(png_ptr,
 5371              		.loc 1 1477 40 view .LVU1629
1477:fltk-1.3.4-1/png/pngrutil.c ****                                           png_malloc_base(png_ptr,
 5372              		.loc 1 1477 62 is_stmt 0 view .LVU1630
 5373 0547 4C89EE   		movq	%r13, %rsi
 5374 054a 4889EF   		movq	%rbp, %rdi
 5375 054d E8000000 		call	png_malloc_base@PLT
 5375      00
 5376              	.LVL594:
1477:fltk-1.3.4-1/png/pngrutil.c ****                                           png_malloc_base(png_ptr,
 5377              		.loc 1 1477 60 view .LVU1631
 5378 0552 49898424 		movq	%rax, 128(%r12)
 5378      80000000 
1480:fltk-1.3.4-1/png/pngrutil.c ****                                        {
 5379              		.loc 1 1480 40 is_stmt 1 view .LVU1632
1480:fltk-1.3.4-1/png/pngrutil.c ****                                        {
 5380              		.loc 1 1480 43 is_stmt 0 view .LVU1633
 5381 055a 4885C0   		testq	%rax, %rax
 5382 055d 0F84B300 		je	.L409
 5382      0000
1482:fltk-1.3.4-1/png/pngrutil.c ****                                              keyword_length+1);
 5383              		.loc 1 1482 43 is_stmt 1 view .LVU1634
 5384              	.LVL595:
 5385              	.LBB266:
 5386              	.LBI266:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 5387              		.loc 2 31 1 view .LVU1635
 5388              	.LBB267:
 5389              		.loc 2 34 3 view .LVU1636
 5390              		.loc 2 34 10 is_stmt 0 view .LVU1637
 5391 0563 4889C7   		movq	%rax, %rdi
 5392 0566 4C89FE   		movq	%r15, %rsi
 5393 0569 4C89E9   		movq	%r13, %rcx
 5394              	.LBE267:
 5395              	.LBE266:
1484:fltk-1.3.4-1/png/pngrutil.c ****                                              profile_length;
 5396              		.loc 1 1484 66 view .LVU1638
 5397 056c 8B442428 		movl	40(%rsp), %eax
 5398              	.LVL596:
 5399              	.LBB269:
 5400              	.LBB268:
 5401              		.loc 2 34 10 view .LVU1639
 5402 0570 F3A4     		rep movsb
 5403              	.LVL597:
 5404              		.loc 2 34 10 view .LVU1640
 5405              	.LBE268:
 5406              	.LBE269:
1484:fltk-1.3.4-1/png/pngrutil.c ****                                              profile_length;
 5407              		.loc 1 1484 43 is_stmt 1 view .LVU1641
1506:fltk-1.3.4-1/png/pngrutil.c **** 
 5408              		.loc 1 1506 40 is_stmt 0 view .LVU1642
 5409 0572 4C89E6   		movq	%r12, %rsi
 5410 0575 4889EF   		movq	%rbp, %rdi
1488:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->valid |= PNG_INFO_iCCP;
 5411              		.loc 1 1488 61 view .LVU1643
 5412 0578 41838C24 		orl	$16, 284(%r12)
 5412      1C010000 
 5412      10
1489:fltk-1.3.4-1/png/pngrutil.c ****                                        }
 5413              		.loc 1 1489 59 view .LVU1644
 5414 0581 41814C24 		orl	$4096, 8(%r12)
 5414      08001000 
 5414      00
1484:fltk-1.3.4-1/png/pngrutil.c ****                                              profile_length;
 5415              		.loc 1 1484 66 view .LVU1645
 5416 058a 41898424 		movl	%eax, 144(%r12)
 5416      90000000 
1486:fltk-1.3.4-1/png/pngrutil.c ****                                           png_ptr->read_buffer = NULL; /*steal*/
 5417              		.loc 1 1486 43 is_stmt 1 view .LVU1646
1486:fltk-1.3.4-1/png/pngrutil.c ****                                           png_ptr->read_buffer = NULL; /*steal*/
 5418              		.loc 1 1486 66 is_stmt 0 view .LVU1647
 5419 0592 49899C24 		movq	%rbx, 136(%r12)
 5419      88000000 
1487:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->free_me |= PNG_FREE_ICCP;
 5420              		.loc 1 1487 43 is_stmt 1 view .LVU1648
1487:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->free_me |= PNG_FREE_ICCP;
 5421              		.loc 1 1487 64 is_stmt 0 view .LVU1649
 5422 059a 48C78598 		movq	$0, 1176(%rbp)
 5422      04000000 
 5422      000000
1488:fltk-1.3.4-1/png/pngrutil.c ****                                           info_ptr->valid |= PNG_INFO_iCCP;
 5423              		.loc 1 1488 43 is_stmt 1 view .LVU1650
1489:fltk-1.3.4-1/png/pngrutil.c ****                                        }
 5424              		.loc 1 1489 43 view .LVU1651
1505:fltk-1.3.4-1/png/pngrutil.c ****                                        png_colorspace_sync(png_ptr, info_ptr);
 5425              		.loc 1 1505 37 view .LVU1652
1506:fltk-1.3.4-1/png/pngrutil.c **** 
 5426              		.loc 1 1506 40 view .LVU1653
 5427 05a5 E8000000 		call	png_colorspace_sync@PLT
 5427      00
 5428              	.LVL598:
1508:fltk-1.3.4-1/png/pngrutil.c ****                                     {
 5429              		.loc 1 1508 37 view .LVU1654
 5430              	.L408:
1510:fltk-1.3.4-1/png/pngrutil.c ****                                        return;
 5431              		.loc 1 1510 40 view .LVU1655
1510:fltk-1.3.4-1/png/pngrutil.c ****                                        return;
 5432              		.loc 1 1510 56 is_stmt 0 view .LVU1656
 5433 05aa C7853801 		movl	$0, 312(%rbp)
 5433      00000000 
 5433      0000
1511:fltk-1.3.4-1/png/pngrutil.c ****                                     }
 5434              		.loc 1 1511 40 is_stmt 1 view .LVU1657
 5435 05b4 E94BFBFF 		jmp	.L380
 5435      FF
 5436              	.LVL599:
 5437              	.L413:
1511:fltk-1.3.4-1/png/pngrutil.c ****                                     }
 5438              		.loc 1 1511 40 is_stmt 0 view .LVU1658
 5439              	.LBE274:
 5440              	.LBE280:
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5441              		.loc 1 1543 16 is_stmt 1 view .LVU1659
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5442              		.loc 1 1543 32 is_stmt 0 view .LVU1660
 5443 05b9 C7853801 		movl	$0, 312(%rbp)
 5443      00000000 
 5443      0000
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5444              		.loc 1 1543 32 view .LVU1661
 5445              	.LBE288:
 5446              	.LBE299:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 5447              		.loc 1 1562 4 is_stmt 1 view .LVU1662
 5448              	.LBB300:
 5449              	.LBB289:
 5450              	.LBB281:
 5451              	.LBB275:
1516:fltk-1.3.4-1/png/pngrutil.c **** 
 5452              		.loc 1 1516 44 is_stmt 0 view .LVU1663
 5453 05c3 4C8D2D00 		leaq	.LC21(%rip), %r13
 5453      000000
 5454              	.LVL600:
1516:fltk-1.3.4-1/png/pngrutil.c **** 
 5455              		.loc 1 1516 44 view .LVU1664
 5456 05ca E968FBFF 		jmp	.L386
 5456      FF
 5457              	.LVL601:
 5458              	.L407:
1450:fltk-1.3.4-1/png/pngrutil.c ****                                  {
 5459              		.loc 1 1450 39 is_stmt 1 view .LVU1665
1450:fltk-1.3.4-1/png/pngrutil.c ****                                  {
 5460              		.loc 1 1450 42 is_stmt 0 view .LVU1666
 5461 05cf 48837C24 		cmpq	$0, 72(%rsp)
 5461      4800
 5462 05d5 75E2     		jne	.L413
1457:fltk-1.3.4-1/png/pngrutil.c ****                                           "extra compressed data");
 5463              		.loc 1 1457 40 is_stmt 1 view .LVU1667
 5464 05d7 488D3500 		leaq	.LC4(%rip), %rsi
 5464      000000
 5465 05de 4889EF   		movq	%rbp, %rdi
 5466 05e1 E8000000 		call	png_chunk_warning@PLT
 5466      00
 5467              	.LVL602:
 5468 05e6 448B4424 		movl	60(%rsp), %r8d
 5468      3C
 5469 05eb E919FFFF 		jmp	.L412
 5469      FF
 5470              	.LVL603:
 5471              	.L401:
 5472              	.LBB270:
 5473              	.LBB259:
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5474              		.loc 1 784 7 view .LVU1668
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5475              		.loc 1 784 28 is_stmt 0 view .LVU1669
 5476 05f0 488D0500 		leaq	.LC3(%rip), %rax
 5476      000000
 5477              	.LVL604:
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5478              		.loc 1 784 28 view .LVU1670
 5479 05f7 48898570 		movq	%rax, 368(%rbp)
 5479      010000
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5480              		.loc 1 785 7 is_stmt 1 view .LVU1671
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5481              		.loc 1 785 14 is_stmt 0 view .LVU1672
 5482 05fe E900FEFF 		jmp	.L402
 5482      FF
 5483              	.LVL605:
 5484              	.L404:
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5485              		.loc 1 785 14 view .LVU1673
 5486              	.LBE259:
 5487              	.LBE270:
 5488              	.LBB271:
 5489              	.LBB265:
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5490              		.loc 1 784 7 is_stmt 1 view .LVU1674
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5491              		.loc 1 784 28 is_stmt 0 view .LVU1675
 5492 0603 488D0500 		leaq	.LC3(%rip), %rax
 5492      000000
 5493              	.LVL606:
 784:fltk-1.3.4-1/png/pngrutil.c ****       return Z_STREAM_ERROR;
 5494              		.loc 1 784 28 view .LVU1676
 5495 060a 48898570 		movq	%rax, 368(%rbp)
 5495      010000
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5496              		.loc 1 785 7 is_stmt 1 view .LVU1677
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5497              		.loc 1 785 14 is_stmt 0 view .LVU1678
 5498 0611 E97BFEFF 		jmp	.L405
 5498      FF
 5499              	.LVL607:
 5500              	.L409:
 785:fltk-1.3.4-1/png/pngrutil.c ****    }
 5501              		.loc 1 785 14 view .LVU1679
 5502              	.LBE265:
 5503              	.LBE271:
1494:fltk-1.3.4-1/png/pngrutil.c ****                                              PNG_COLORSPACE_INVALID;
 5504              		.loc 1 1494 43 is_stmt 1 view .LVU1680
1494:fltk-1.3.4-1/png/pngrutil.c ****                                              PNG_COLORSPACE_INVALID;
 5505              		.loc 1 1494 69 is_stmt 0 view .LVU1681
 5506 0616 66818D22 		orw	$-32768, 1314(%rbp)
 5506      05000000 
 5506      80
1496:fltk-1.3.4-1/png/pngrutil.c ****                                        }
 5507              		.loc 1 1496 43 is_stmt 1 view .LVU1682
 5508              	.LVL608:
1505:fltk-1.3.4-1/png/pngrutil.c ****                                        png_colorspace_sync(png_ptr, info_ptr);
 5509              		.loc 1 1505 37 view .LVU1683
1506:fltk-1.3.4-1/png/pngrutil.c **** 
 5510              		.loc 1 1506 40 view .LVU1684
 5511 061f 4C89E6   		movq	%r12, %rsi
 5512 0622 4889EF   		movq	%rbp, %rdi
1496:fltk-1.3.4-1/png/pngrutil.c ****                                        }
 5513              		.loc 1 1496 50 is_stmt 0 view .LVU1685
 5514 0625 4C8D2D00 		leaq	.LC20(%rip), %r13
 5514      000000
 5515              	.LVL609:
1506:fltk-1.3.4-1/png/pngrutil.c **** 
 5516              		.loc 1 1506 40 view .LVU1686
 5517 062c E8000000 		call	png_colorspace_sync@PLT
 5517      00
 5518              	.LVL610:
1508:fltk-1.3.4-1/png/pngrutil.c ****                                     {
 5519              		.loc 1 1508 37 is_stmt 1 view .LVU1687
1508:fltk-1.3.4-1/png/pngrutil.c ****                                     {
 5520              		.loc 1 1508 37 is_stmt 0 view .LVU1688
 5521              	.LBE275:
 5522              	.LBE281:
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5523              		.loc 1 1543 16 is_stmt 1 view .LVU1689
 5524              	.LBE289:
 5525              	.LBE300:
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 5526              		.loc 1 1566 4 is_stmt 0 view .LVU1690
 5527 0631 4C89E6   		movq	%r12, %rsi
 5528 0634 4889EF   		movq	%rbp, %rdi
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 5529              		.loc 1 1565 30 view .LVU1691
 5530 0637 66818D22 		orw	$-32768, 1314(%rbp)
 5530      05000000 
 5530      80
 5531              	.LBB301:
 5532              	.LBB290:
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5533              		.loc 1 1543 32 view .LVU1692
 5534 0640 C7853801 		movl	$0, 312(%rbp)
 5534      00000000 
 5534      0000
1543:fltk-1.3.4-1/png/pngrutil.c ****             }
 5535              		.loc 1 1543 32 view .LVU1693
 5536              	.LBE290:
 5537              	.LBE301:
1562:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 5538              		.loc 1 1562 4 is_stmt 1 view .LVU1694
1565:fltk-1.3.4-1/png/pngrutil.c ****    png_colorspace_sync(png_ptr, info_ptr);
 5539              		.loc 1 1565 4 view .LVU1695
1566:fltk-1.3.4-1/png/pngrutil.c ****    if (errmsg != NULL) /* else already output */
 5540              		.loc 1 1566 4 view .LVU1696
 5541 064a E8000000 		call	png_colorspace_sync@PLT
 5541      00
 5542              	.LVL611:
1567:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
 5543              		.loc 1 1567 4 view .LVU1697
 5544 064f E9FFFAFF 		jmp	.L410
 5544      FF
 5545              		.cfi_endproc
 5546              	.LFE63:
 5548              		.section	.rodata.png_handle_sPLT.str1.8,"aMS",@progbits,1
 5549              		.align 8
 5550              	.LC25:
 5551 0000 4E6F2073 		.string	"No space in chunk cache for sPLT"
 5551      70616365 
 5551      20696E20 
 5551      6368756E 
 5551      6B206361 
 5552              		.section	.rodata.png_handle_sPLT.str1.1,"aMS",@progbits,1
 5553              	.LC26:
 5554 0000 6D616C66 		.string	"malformed sPLT chunk"
 5554      6F726D65 
 5554      64207350 
 5554      4C542063 
 5554      68756E6B 
 5555              	.LC27:
 5556 0015 73504C54 		.string	"sPLT chunk has bad length"
 5556      20636875 
 5556      6E6B2068 
 5556      61732062 
 5556      6164206C 
 5557              		.section	.rodata.png_handle_sPLT.str1.8
 5558 0021 00000000 		.align 8
 5558      000000
 5559              	.LC28:
 5560 0028 73504C54 		.string	"sPLT chunk requires too much memory"
 5560      20636875 
 5560      6E6B2072 
 5560      65717569 
 5560      72657320 
 5561              		.section	.text.png_handle_sPLT,"ax",@progbits
 5562              		.p2align 4
 5563              		.globl	png_handle_sPLT
 5565              	png_handle_sPLT:
 5566              	.LVL612:
 5567              	.LFB64:
1576:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep entry_start, buffer;
 5568              		.loc 1 1576 1 view -0
 5569              		.cfi_startproc
1576:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep entry_start, buffer;
 5570              		.loc 1 1576 1 is_stmt 0 view .LVU1699
 5571 0000 F30F1EFA 		endbr64
 5572 0004 4157     		pushq	%r15
 5573              		.cfi_def_cfa_offset 16
 5574              		.cfi_offset 15, -16
 5575 0006 4189D7   		movl	%edx, %r15d
 5576 0009 4156     		pushq	%r14
 5577              		.cfi_def_cfa_offset 24
 5578              		.cfi_offset 14, -24
 5579 000b 4155     		pushq	%r13
 5580              		.cfi_def_cfa_offset 32
 5581              		.cfi_offset 13, -32
 5582 000d 4154     		pushq	%r12
 5583              		.cfi_def_cfa_offset 40
 5584              		.cfi_offset 12, -40
 5585 000f 4989FC   		movq	%rdi, %r12
 5586 0012 55       		pushq	%rbp
 5587              		.cfi_def_cfa_offset 48
 5588              		.cfi_offset 6, -48
 5589 0013 4889F5   		movq	%rsi, %rbp
 5590 0016 53       		pushq	%rbx
 5591              		.cfi_def_cfa_offset 56
 5592              		.cfi_offset 3, -56
 5593 0017 4883EC38 		subq	$56, %rsp
 5594              		.cfi_def_cfa_offset 112
1576:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep entry_start, buffer;
 5595              		.loc 1 1576 1 view .LVU1700
 5596 001b 64488B04 		movq	%fs:40, %rax
 5596      25280000 
 5596      00
 5597 0024 48894424 		movq	%rax, 40(%rsp)
 5597      28
 5598 0029 31C0     		xorl	%eax, %eax
1577:fltk-1.3.4-1/png/pngrutil.c ****    png_sPLT_t new_palette;
 5599              		.loc 1 1577 4 is_stmt 1 view .LVU1701
1578:fltk-1.3.4-1/png/pngrutil.c ****    png_sPLT_entryp pp;
 5600              		.loc 1 1578 4 view .LVU1702
1579:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 data_length;
 5601              		.loc 1 1579 4 view .LVU1703
1580:fltk-1.3.4-1/png/pngrutil.c ****    int entry_size, i;
 5602              		.loc 1 1580 4 view .LVU1704
1581:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 skip = 0;
 5603              		.loc 1 1581 4 view .LVU1705
1582:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 dl;
 5604              		.loc 1 1582 4 view .LVU1706
 5605              	.LVL613:
1583:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t max_dl;
 5606              		.loc 1 1583 4 view .LVU1707
1584:fltk-1.3.4-1/png/pngrutil.c **** 
 5607              		.loc 1 1584 4 view .LVU1708
1586:fltk-1.3.4-1/png/pngrutil.c **** 
 5608              		.loc 1 1586 4 view .LVU1709
1589:fltk-1.3.4-1/png/pngrutil.c ****    {
 5609              		.loc 1 1589 4 view .LVU1710
1589:fltk-1.3.4-1/png/pngrutil.c ****    {
 5610              		.loc 1 1589 15 is_stmt 0 view .LVU1711
 5611 002b 8B876404 		movl	1124(%rdi), %eax
 5611      0000
1589:fltk-1.3.4-1/png/pngrutil.c ****    {
 5612              		.loc 1 1589 7 view .LVU1712
 5613 0031 85C0     		testl	%eax, %eax
 5614 0033 741B     		je	.L448
1591:fltk-1.3.4-1/png/pngrutil.c ****       {
 5615              		.loc 1 1591 7 is_stmt 1 view .LVU1713
1591:fltk-1.3.4-1/png/pngrutil.c ****       {
 5616              		.loc 1 1591 10 is_stmt 0 view .LVU1714
 5617 0035 83F801   		cmpl	$1, %eax
 5618 0038 0F845602 		je	.L475
 5618      0000
1597:fltk-1.3.4-1/png/pngrutil.c ****       {
 5619              		.loc 1 1597 7 is_stmt 1 view .LVU1715
1597:fltk-1.3.4-1/png/pngrutil.c ****       {
 5620              		.loc 1 1597 11 is_stmt 0 view .LVU1716
 5621 003e 83E801   		subl	$1, %eax
1597:fltk-1.3.4-1/png/pngrutil.c ****       {
 5622              		.loc 1 1597 10 view .LVU1717
 5623 0041 89876404 		movl	%eax, 1124(%rdi)
 5623      0000
 5624 0047 83F801   		cmpl	$1, %eax
 5625 004a 0F843802 		je	.L476
 5625      0000
 5626              	.L448:
1606:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 5627              		.loc 1 1606 4 is_stmt 1 view .LVU1718
1606:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 5628              		.loc 1 1606 16 is_stmt 0 view .LVU1719
 5629 0050 418B8424 		movl	300(%r12), %eax
 5629      2C010000 
1606:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 5630              		.loc 1 1606 7 view .LVU1720
 5631 0058 A801     		testb	$1, %al
 5632 005a 0F845C02 		je	.L477
 5632      0000
1609:fltk-1.3.4-1/png/pngrutil.c ****    {
 5633              		.loc 1 1609 9 is_stmt 1 view .LVU1721
1609:fltk-1.3.4-1/png/pngrutil.c ****    {
 5634              		.loc 1 1609 12 is_stmt 0 view .LVU1722
 5635 0060 A804     		testb	$4, %al
 5636 0062 0F85C801 		jne	.L478
 5636      0000
1625:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
 5637              		.loc 1 1625 4 is_stmt 1 view .LVU1723
1625:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
 5638              		.loc 1 1625 13 is_stmt 0 view .LVU1724
 5639 0068 418D7701 		leal	1(%r15), %esi
 5640              	.LVL614:
1625:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
 5641              		.loc 1 1625 13 view .LVU1725
 5642 006c BA020000 		movl	$2, %edx
 5642      00
 5643              	.LVL615:
1625:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
 5644              		.loc 1 1625 13 view .LVU1726
 5645 0071 4C89E7   		movq	%r12, %rdi
 5646              	.LVL616:
1625:fltk-1.3.4-1/png/pngrutil.c ****    if (buffer == NULL)
 5647              		.loc 1 1625 13 view .LVU1727
 5648 0074 E8000000 		call	png_read_buffer
 5648      00
 5649              	.LVL617:
 5650 0079 4989C6   		movq	%rax, %r14
 5651              	.LVL618:
1626:fltk-1.3.4-1/png/pngrutil.c ****    {
 5652              		.loc 1 1626 4 is_stmt 1 view .LVU1728
1626:fltk-1.3.4-1/png/pngrutil.c ****    {
 5653              		.loc 1 1626 7 is_stmt 0 view .LVU1729
 5654 007c 4885C0   		testq	%rax, %rax
 5655 007f 0F84CB01 		je	.L479
 5655      0000
1638:fltk-1.3.4-1/png/pngrutil.c **** 
 5656              		.loc 1 1638 4 is_stmt 1 view .LVU1730
 5657              	.LVL619:
 5658              	.LBB302:
 5659              	.LBI302:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 5660              		.loc 1 187 1 view .LVU1731
 5661              	.LBB303:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5662              		.loc 1 189 4 view .LVU1732
 5663 0085 4889C6   		movq	%rax, %rsi
 5664 0088 4489FA   		movl	%r15d, %edx
 5665 008b 4C89E7   		movq	%r12, %rdi
 5666 008e E8000000 		call	png_crc_read.part.0
 5666      00
 5667              	.LVL620:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5668              		.loc 1 189 4 is_stmt 0 view .LVU1733
 5669              	.LBE303:
 5670              	.LBE302:
1640:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5671              		.loc 1 1640 4 is_stmt 1 view .LVU1734
1640:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5672              		.loc 1 1640 8 is_stmt 0 view .LVU1735
 5673 0093 31F6     		xorl	%esi, %esi
 5674 0095 4C89E7   		movq	%r12, %rdi
 5675 0098 E8000000 		call	png_crc_finish
 5675      00
 5676              	.LVL621:
 5677 009d 4189C5   		movl	%eax, %r13d
1640:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5678              		.loc 1 1640 7 view .LVU1736
 5679 00a0 85C0     		testl	%eax, %eax
 5680 00a2 0F856001 		jne	.L447
 5680      0000
1643:fltk-1.3.4-1/png/pngrutil.c **** 
 5681              		.loc 1 1643 4 is_stmt 1 view .LVU1737
1643:fltk-1.3.4-1/png/pngrutil.c **** 
 5682              		.loc 1 1643 10 is_stmt 0 view .LVU1738
 5683 00a8 4489F8   		movl	%r15d, %eax
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5684              		.loc 1 1645 4 view .LVU1739
 5685 00ab 4C89F1   		movq	%r14, %rcx
1643:fltk-1.3.4-1/png/pngrutil.c **** 
 5686              		.loc 1 1643 19 view .LVU1740
 5687 00ae 41C60406 		movb	$0, (%r14,%rax)
 5687      00
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5688              		.loc 1 1645 4 is_stmt 1 view .LVU1741
 5689              	.LVL622:
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5690              		.loc 1 1645 31 view .LVU1742
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5691              		.loc 1 1645 4 is_stmt 0 view .LVU1743
 5692 00b3 41803E00 		cmpb	$0, (%r14)
 5693 00b7 7410     		je	.L454
 5694              	.LVL623:
 5695 00b9 0F1F8000 		.p2align 4,,10
 5695      000000
 5696              		.p2align 3
 5697              	.L455:
1646:fltk-1.3.4-1/png/pngrutil.c **** 
 5698              		.loc 1 1646 44 is_stmt 1 discriminator 3 view .LVU1744
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5699              		.loc 1 1645 45 discriminator 3 view .LVU1745
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5700              		.loc 1 1645 56 is_stmt 0 discriminator 3 view .LVU1746
 5701 00c0 4883C101 		addq	$1, %rcx
 5702              	.LVL624:
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5703              		.loc 1 1645 31 is_stmt 1 discriminator 3 view .LVU1747
1645:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 5704              		.loc 1 1645 4 is_stmt 0 discriminator 3 view .LVU1748
 5705 00c4 803900   		cmpb	$0, (%rcx)
 5706 00c7 75F7     		jne	.L455
 5707              	.L454:
1648:fltk-1.3.4-1/png/pngrutil.c **** 
 5708              		.loc 1 1648 4 is_stmt 1 view .LVU1749
 5709              	.LVL625:
1651:fltk-1.3.4-1/png/pngrutil.c ****    {
 5710              		.loc 1 1651 4 view .LVU1750
1651:fltk-1.3.4-1/png/pngrutil.c ****    {
 5711              		.loc 1 1651 38 is_stmt 0 view .LVU1751
 5712 00c9 498D5406 		leaq	-2(%r14,%rax), %rdx
 5712      FE
1648:fltk-1.3.4-1/png/pngrutil.c **** 
 5713              		.loc 1 1648 4 view .LVU1752
 5714 00ce 488D4101 		leaq	1(%rcx), %rax
 5715              	.LVL626:
1651:fltk-1.3.4-1/png/pngrutil.c ****    {
 5716              		.loc 1 1651 7 view .LVU1753
 5717 00d2 4839C2   		cmpq	%rax, %rdx
 5718 00d5 0F82CD01 		jb	.L480
 5718      0000
1657:fltk-1.3.4-1/png/pngrutil.c ****    entry_size = (new_palette.depth == 8 ? 6 : 10);
 5719              		.loc 1 1657 4 is_stmt 1 view .LVU1754
1657:fltk-1.3.4-1/png/pngrutil.c ****    entry_size = (new_palette.depth == 8 ? 6 : 10);
 5720              		.loc 1 1657 24 is_stmt 0 view .LVU1755
 5721 00db 0FB64101 		movzbl	1(%rcx), %eax
 5722              	.LVL627:
1657:fltk-1.3.4-1/png/pngrutil.c ****    entry_size = (new_palette.depth == 8 ? 6 : 10);
 5723              		.loc 1 1657 36 view .LVU1756
 5724 00df 488D5902 		leaq	2(%rcx), %rbx
 5725              	.LVL628:
1658:fltk-1.3.4-1/png/pngrutil.c ****    /* This must fit in a png_uint_32 because it is derived from the original
 5726              		.loc 1 1658 45 view .LVU1757
 5727 00e3 31C9     		xorl	%ecx, %ecx
1657:fltk-1.3.4-1/png/pngrutil.c ****    entry_size = (new_palette.depth == 8 ? 6 : 10);
 5728              		.loc 1 1657 22 view .LVU1758
 5729 00e5 88442408 		movb	%al, 8(%rsp)
1658:fltk-1.3.4-1/png/pngrutil.c ****    /* This must fit in a png_uint_32 because it is derived from the original
 5730              		.loc 1 1658 4 is_stmt 1 view .LVU1759
1658:fltk-1.3.4-1/png/pngrutil.c ****    /* This must fit in a png_uint_32 because it is derived from the original
 5731              		.loc 1 1658 45 is_stmt 0 view .LVU1760
 5732 00e9 3C08     		cmpb	$8, %al
1662:fltk-1.3.4-1/png/pngrutil.c **** 
 5733              		.loc 1 1662 53 view .LVU1761
 5734 00eb 4889D8   		movq	%rbx, %rax
1658:fltk-1.3.4-1/png/pngrutil.c ****    /* This must fit in a png_uint_32 because it is derived from the original
 5735              		.loc 1 1658 45 view .LVU1762
 5736 00ee 0F95C1   		setne	%cl
1662:fltk-1.3.4-1/png/pngrutil.c **** 
 5737              		.loc 1 1662 53 view .LVU1763
 5738 00f1 4C29F0   		subq	%r14, %rax
 5739 00f4 31D2     		xorl	%edx, %edx
1662:fltk-1.3.4-1/png/pngrutil.c **** 
 5740              		.loc 1 1662 16 view .LVU1764
 5741 00f6 4129C7   		subl	%eax, %r15d
 5742              	.LVL629:
1658:fltk-1.3.4-1/png/pngrutil.c ****    /* This must fit in a png_uint_32 because it is derived from the original
 5743              		.loc 1 1658 45 view .LVU1765
 5744 00f9 8D0C8D06 		leal	6(,%rcx,4), %ecx
 5744      000000
1662:fltk-1.3.4-1/png/pngrutil.c **** 
 5745              		.loc 1 1662 4 is_stmt 1 view .LVU1766
1665:fltk-1.3.4-1/png/pngrutil.c ****    {
 5746              		.loc 1 1665 4 view .LVU1767
1662:fltk-1.3.4-1/png/pngrutil.c **** 
 5747              		.loc 1 1662 16 is_stmt 0 view .LVU1768
 5748 0100 4489F8   		movl	%r15d, %eax
 5749 0103 F7F1     		divl	%ecx
1665:fltk-1.3.4-1/png/pngrutil.c ****    {
 5750              		.loc 1 1665 7 view .LVU1769
 5751 0105 85D2     		testl	%edx, %edx
 5752 0107 0F856301 		jne	.L481
 5752      0000
1671:fltk-1.3.4-1/png/pngrutil.c ****    max_dl = PNG_SIZE_MAX / (sizeof (png_sPLT_entry));
 5753              		.loc 1 1671 4 is_stmt 1 view .LVU1770
 5754              	.LVL630:
1672:fltk-1.3.4-1/png/pngrutil.c **** 
 5755              		.loc 1 1672 4 view .LVU1771
1674:fltk-1.3.4-1/png/pngrutil.c ****    {
 5756              		.loc 1 1674 4 view .LVU1772
1680:fltk-1.3.4-1/png/pngrutil.c **** 
 5757              		.loc 1 1680 4 view .LVU1773
1680:fltk-1.3.4-1/png/pngrutil.c **** 
 5758              		.loc 1 1680 25 is_stmt 0 view .LVU1774
 5759 010d 89442418 		movl	%eax, 24(%rsp)
1682:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr, new_palette.nentries * (sizeof (png_sPLT_entry)));
 5760              		.loc 1 1682 4 is_stmt 1 view .LVU1775
1683:fltk-1.3.4-1/png/pngrutil.c **** 
 5761              		.loc 1 1683 28 is_stmt 0 view .LVU1776
 5762 0111 89C0     		movl	%eax, %eax
 5763              	.LVL631:
1682:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr, new_palette.nentries * (sizeof (png_sPLT_entry)));
 5764              		.loc 1 1682 43 view .LVU1777
 5765 0113 4C89E7   		movq	%r12, %rdi
 5766 0116 488D3480 		leaq	(%rax,%rax,4), %rsi
 5767 011a 4801F6   		addq	%rsi, %rsi
 5768 011d E8000000 		call	png_malloc_warn@PLT
 5768      00
 5769              	.LVL632:
1682:fltk-1.3.4-1/png/pngrutil.c ****        png_ptr, new_palette.nentries * (sizeof (png_sPLT_entry)));
 5770              		.loc 1 1682 24 view .LVU1778
 5771 0122 48894424 		movq	%rax, 16(%rsp)
 5771      10
1685:fltk-1.3.4-1/png/pngrutil.c ****    {
 5772              		.loc 1 1685 4 is_stmt 1 view .LVU1779
1685:fltk-1.3.4-1/png/pngrutil.c ****    {
 5773              		.loc 1 1685 7 is_stmt 0 view .LVU1780
 5774 0127 4885C0   		testq	%rax, %rax
 5775 012a 0F84A001 		je	.L459
 5775      0000
 5776              	.LVL633:
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5777              		.loc 1 1692 16 is_stmt 1 view .LVU1781
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5778              		.loc 1 1692 4 is_stmt 0 view .LVU1782
 5779 0130 8B542418 		movl	24(%rsp), %edx
 5780 0134 31F6     		xorl	%esi, %esi
 5781 0136 85D2     		testl	%edx, %edx
 5782 0138 7F71     		jg	.L460
 5783 013a E9A10000 		jmp	.L461
 5783      00
 5784              	.LVL634:
 5785 013f 90       		.p2align 4,,10
 5786              		.p2align 3
 5787              	.L462:
1706:fltk-1.3.4-1/png/pngrutil.c ****          pp->green = png_get_uint_16(entry_start); entry_start += 2;
 5788              		.loc 1 1706 10 is_stmt 1 view .LVU1783
1706:fltk-1.3.4-1/png/pngrutil.c ****          pp->green = png_get_uint_16(entry_start); entry_start += 2;
 5789              		.loc 1 1706 22 is_stmt 0 view .LVU1784
 5790 0140 0FB64B01 		movzbl	1(%rbx), %ecx
 5791 0144 C1E208   		sall	$8, %edx
 5792 0147 01CA     		addl	%ecx, %edx
 5793 0149 668910   		movw	%dx, (%rax)
1706:fltk-1.3.4-1/png/pngrutil.c ****          pp->green = png_get_uint_16(entry_start); entry_start += 2;
 5794              		.loc 1 1706 52 is_stmt 1 view .LVU1785
 5795              	.LVL635:
1707:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue  = png_get_uint_16(entry_start); entry_start += 2;
 5796              		.loc 1 1707 10 view .LVU1786
1707:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue  = png_get_uint_16(entry_start); entry_start += 2;
 5797              		.loc 1 1707 22 is_stmt 0 view .LVU1787
 5798 014c 0FB65302 		movzbl	2(%rbx), %edx
 5799 0150 0FB64B03 		movzbl	3(%rbx), %ecx
 5800 0154 C1E208   		sall	$8, %edx
 5801 0157 01CA     		addl	%ecx, %edx
 5802 0159 66895002 		movw	%dx, 2(%rax)
1707:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue  = png_get_uint_16(entry_start); entry_start += 2;
 5803              		.loc 1 1707 52 is_stmt 1 view .LVU1788
 5804              	.LVL636:
1708:fltk-1.3.4-1/png/pngrutil.c ****          pp->alpha = png_get_uint_16(entry_start); entry_start += 2;
 5805              		.loc 1 1708 10 view .LVU1789
1708:fltk-1.3.4-1/png/pngrutil.c ****          pp->alpha = png_get_uint_16(entry_start); entry_start += 2;
 5806              		.loc 1 1708 22 is_stmt 0 view .LVU1790
 5807 015d 0FB65304 		movzbl	4(%rbx), %edx
 5808 0161 0FB64B05 		movzbl	5(%rbx), %ecx
 5809 0165 C1E208   		sall	$8, %edx
 5810 0168 01CA     		addl	%ecx, %edx
 5811 016a 66895004 		movw	%dx, 4(%rax)
1708:fltk-1.3.4-1/png/pngrutil.c ****          pp->alpha = png_get_uint_16(entry_start); entry_start += 2;
 5812              		.loc 1 1708 52 is_stmt 1 view .LVU1791
 5813              	.LVL637:
1709:fltk-1.3.4-1/png/pngrutil.c ****       }
 5814              		.loc 1 1709 10 view .LVU1792
1709:fltk-1.3.4-1/png/pngrutil.c ****       }
 5815              		.loc 1 1709 22 is_stmt 0 view .LVU1793
 5816 016e 0FB65306 		movzbl	6(%rbx), %edx
 5817 0172 0FB64B07 		movzbl	7(%rbx), %ecx
 5818 0176 C1E208   		sall	$8, %edx
 5819 0179 01CA     		addl	%ecx, %edx
1709:fltk-1.3.4-1/png/pngrutil.c ****       }
 5820              		.loc 1 1709 64 view .LVU1794
 5821 017b 488D4B08 		leaq	8(%rbx), %rcx
1709:fltk-1.3.4-1/png/pngrutil.c ****       }
 5822              		.loc 1 1709 22 view .LVU1795
 5823 017f 66895006 		movw	%dx, 6(%rax)
1709:fltk-1.3.4-1/png/pngrutil.c ****       }
 5824              		.loc 1 1709 52 is_stmt 1 view .LVU1796
 5825              	.LVL638:
 5826              	.L463:
1712:fltk-1.3.4-1/png/pngrutil.c ****    }
 5827              		.loc 1 1712 7 discriminator 2 view .LVU1797
1712:fltk-1.3.4-1/png/pngrutil.c ****    }
 5828              		.loc 1 1712 23 is_stmt 0 discriminator 2 view .LVU1798
 5829 0183 0FB611   		movzbl	(%rcx), %edx
 5830 0186 0FB67901 		movzbl	1(%rcx), %edi
1712:fltk-1.3.4-1/png/pngrutil.c ****    }
 5831              		.loc 1 1712 65 discriminator 2 view .LVU1799
 5832 018a 488D5902 		leaq	2(%rcx), %rbx
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5833              		.loc 1 1692 43 discriminator 2 view .LVU1800
 5834 018e 4183C501 		addl	$1, %r13d
 5835              	.LVL639:
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5836              		.loc 1 1692 43 discriminator 2 view .LVU1801
 5837 0192 4883C60A 		addq	$10, %rsi
1712:fltk-1.3.4-1/png/pngrutil.c ****    }
 5838              		.loc 1 1712 23 discriminator 2 view .LVU1802
 5839 0196 C1E208   		sall	$8, %edx
 5840 0199 01FA     		addl	%edi, %edx
 5841 019b 66895008 		movw	%dx, 8(%rax)
1712:fltk-1.3.4-1/png/pngrutil.c ****    }
 5842              		.loc 1 1712 53 is_stmt 1 discriminator 2 view .LVU1803
 5843              	.LVL640:
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5844              		.loc 1 1692 42 discriminator 2 view .LVU1804
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5845              		.loc 1 1692 16 discriminator 2 view .LVU1805
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5846              		.loc 1 1692 4 is_stmt 0 discriminator 2 view .LVU1806
 5847 019f 44396C24 		cmpl	%r13d, 24(%rsp)
 5847      18
 5848 01a4 7E3A     		jle	.L461
1692:fltk-1.3.4-1/png/pngrutil.c ****    {
 5849              		.loc 1 1692 4 discriminator 2 view .LVU1807
 5850 01a6 488B4424 		movq	16(%rsp), %rax
 5850      10
 5851              	.LVL641:
 5852              	.L460:
1694:fltk-1.3.4-1/png/pngrutil.c **** 
 5853              		.loc 1 1694 7 is_stmt 1 view .LVU1808
1694:fltk-1.3.4-1/png/pngrutil.c **** 
 5854              		.loc 1 1694 10 is_stmt 0 view .LVU1809
 5855 01ab 4801F0   		addq	%rsi, %rax
 5856              	.LVL642:
1696:fltk-1.3.4-1/png/pngrutil.c ****       {
 5857              		.loc 1 1696 7 is_stmt 1 view .LVU1810
1696:fltk-1.3.4-1/png/pngrutil.c ****       {
 5858              		.loc 1 1696 10 is_stmt 0 view .LVU1811
 5859 01ae 807C2408 		cmpb	$8, 8(%rsp)
 5859      08
 5860 01b3 0FB613   		movzbl	(%rbx), %edx
 5861 01b6 7588     		jne	.L462
1698:fltk-1.3.4-1/png/pngrutil.c ****          pp->green = *entry_start++;
 5862              		.loc 1 1698 10 is_stmt 1 view .LVU1812
 5863              	.LVL643:
1698:fltk-1.3.4-1/png/pngrutil.c ****          pp->green = *entry_start++;
 5864              		.loc 1 1698 18 is_stmt 0 view .LVU1813
 5865 01b8 668910   		movw	%dx, (%rax)
1699:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue = *entry_start++;
 5866              		.loc 1 1699 10 is_stmt 1 view .LVU1814
 5867              	.LVL644:
1699:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue = *entry_start++;
 5868              		.loc 1 1699 22 is_stmt 0 view .LVU1815
 5869 01bb 0FB65301 		movzbl	1(%rbx), %edx
1701:fltk-1.3.4-1/png/pngrutil.c ****       }
 5870              		.loc 1 1701 34 view .LVU1816
 5871 01bf 488D4B04 		leaq	4(%rbx), %rcx
1699:fltk-1.3.4-1/png/pngrutil.c ****          pp->blue = *entry_start++;
 5872              		.loc 1 1699 22 view .LVU1817
 5873 01c3 66895002 		movw	%dx, 2(%rax)
1700:fltk-1.3.4-1/png/pngrutil.c ****          pp->alpha = *entry_start++;
 5874              		.loc 1 1700 10 is_stmt 1 view .LVU1818
 5875              	.LVL645:
1700:fltk-1.3.4-1/png/pngrutil.c ****          pp->alpha = *entry_start++;
 5876              		.loc 1 1700 21 is_stmt 0 view .LVU1819
 5877 01c7 0FB65302 		movzbl	2(%rbx), %edx
 5878 01cb 66895004 		movw	%dx, 4(%rax)
1701:fltk-1.3.4-1/png/pngrutil.c ****       }
 5879              		.loc 1 1701 10 is_stmt 1 view .LVU1820
 5880              	.LVL646:
1701:fltk-1.3.4-1/png/pngrutil.c ****       }
 5881              		.loc 1 1701 22 is_stmt 0 view .LVU1821
 5882 01cf 0FB65303 		movzbl	3(%rbx), %edx
 5883 01d3 66895006 		movw	%dx, 6(%rax)
 5884 01d7 EBAA     		jmp	.L463
 5885              	.LVL647:
 5886 01d9 0F1F8000 		.p2align 4,,10
 5886      000000
 5887              		.p2align 3
 5888              	.L461:
1741:fltk-1.3.4-1/png/pngrutil.c **** 
 5889              		.loc 1 1741 4 is_stmt 1 view .LVU1822
1743:fltk-1.3.4-1/png/pngrutil.c **** 
 5890              		.loc 1 1743 4 is_stmt 0 view .LVU1823
 5891 01e0 4889EE   		movq	%rbp, %rsi
 5892 01e3 4C89E7   		movq	%r12, %rdi
 5893 01e6 4889E2   		movq	%rsp, %rdx
 5894 01e9 B9010000 		movl	$1, %ecx
 5894      00
1741:fltk-1.3.4-1/png/pngrutil.c **** 
 5895              		.loc 1 1741 21 view .LVU1824
 5896 01ee 4C893424 		movq	%r14, (%rsp)
1743:fltk-1.3.4-1/png/pngrutil.c **** 
 5897              		.loc 1 1743 4 is_stmt 1 view .LVU1825
 5898 01f2 E8000000 		call	png_set_sPLT@PLT
 5898      00
 5899              	.LVL648:
1745:fltk-1.3.4-1/png/pngrutil.c **** }
 5900              		.loc 1 1745 4 view .LVU1826
 5901 01f7 488B7424 		movq	16(%rsp), %rsi
 5901      10
 5902 01fc 4C89E7   		movq	%r12, %rdi
 5903 01ff E8000000 		call	png_free@PLT
 5903      00
 5904              	.LVL649:
 5905              		.p2align 4,,10
 5906 0204 0F1F4000 		.p2align 3
 5907              	.L447:
1746:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sPLT */
 5908              		.loc 1 1746 1 is_stmt 0 view .LVU1827
 5909 0208 488B4424 		movq	40(%rsp), %rax
 5909      28
 5910 020d 64483304 		xorq	%fs:40, %rax
 5910      25280000 
 5910      00
 5911 0216 0F85AF00 		jne	.L482
 5911      0000
 5912 021c 4883C438 		addq	$56, %rsp
 5913              		.cfi_remember_state
 5914              		.cfi_def_cfa_offset 56
 5915 0220 5B       		popq	%rbx
 5916              		.cfi_def_cfa_offset 48
 5917 0221 5D       		popq	%rbp
 5918              		.cfi_def_cfa_offset 40
 5919              	.LVL650:
1746:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sPLT */
 5920              		.loc 1 1746 1 view .LVU1828
 5921 0222 415C     		popq	%r12
 5922              		.cfi_def_cfa_offset 32
 5923              	.LVL651:
1746:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sPLT */
 5924              		.loc 1 1746 1 view .LVU1829
 5925 0224 415D     		popq	%r13
 5926              		.cfi_def_cfa_offset 24
 5927 0226 415E     		popq	%r14
 5928              		.cfi_def_cfa_offset 16
 5929 0228 415F     		popq	%r15
 5930              		.cfi_def_cfa_offset 8
 5931 022a C3       		ret
 5932              	.LVL652:
 5933 022b 0F1F4400 		.p2align 4,,10
 5933      00
 5934              		.p2align 3
 5935              	.L478:
 5936              		.cfi_restore_state
1611:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 5937              		.loc 1 1611 7 is_stmt 1 view .LVU1830
 5938 0230 4489FE   		movl	%r15d, %esi
 5939              	.LVL653:
1611:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 5940              		.loc 1 1611 7 is_stmt 0 view .LVU1831
 5941 0233 4C89E7   		movq	%r12, %rdi
 5942              	.LVL654:
1611:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 5943              		.loc 1 1611 7 view .LVU1832
 5944 0236 E8000000 		call	png_crc_finish
 5944      00
 5945              	.LVL655:
1612:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5946              		.loc 1 1612 7 is_stmt 1 view .LVU1833
 5947 023b 488D3500 		leaq	.LC10(%rip), %rsi
 5947      000000
 5948 0242 4C89E7   		movq	%r12, %rdi
 5949 0245 E8000000 		call	png_chunk_benign_error@PLT
 5949      00
 5950              	.LVL656:
1613:fltk-1.3.4-1/png/pngrutil.c ****    }
 5951              		.loc 1 1613 7 view .LVU1834
 5952 024a EBBC     		jmp	.L447
 5953              	.LVL657:
 5954 024c 0F1F4000 		.p2align 4,,10
 5955              		.p2align 3
 5956              	.L479:
1628:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
 5957              		.loc 1 1628 7 view .LVU1835
 5958 0250 4489FE   		movl	%r15d, %esi
 5959 0253 4C89E7   		movq	%r12, %rdi
 5960 0256 E8000000 		call	png_crc_finish
 5960      00
 5961              	.LVL658:
1629:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5962              		.loc 1 1629 7 view .LVU1836
 5963 025b 488D3500 		leaq	.LC20(%rip), %rsi
 5963      000000
 5964 0262 4C89E7   		movq	%r12, %rdi
 5965 0265 E8000000 		call	png_chunk_benign_error@PLT
 5965      00
 5966              	.LVL659:
1630:fltk-1.3.4-1/png/pngrutil.c ****    }
 5967              		.loc 1 1630 7 view .LVU1837
 5968 026a EB9C     		jmp	.L447
 5969              	.LVL660:
 5970 026c 0F1F4000 		.p2align 4,,10
 5971              		.p2align 3
 5972              	.L481:
1667:fltk-1.3.4-1/png/pngrutil.c ****       return;
 5973              		.loc 1 1667 7 view .LVU1838
 5974 0270 488D3500 		leaq	.LC27(%rip), %rsi
 5974      000000
 5975 0277 4C89E7   		movq	%r12, %rdi
 5976 027a E8000000 		call	png_warning@PLT
 5976      00
 5977              	.LVL661:
1668:fltk-1.3.4-1/png/pngrutil.c ****    }
 5978              		.loc 1 1668 7 view .LVU1839
 5979 027f EB87     		jmp	.L447
 5980              	.LVL662:
 5981              		.p2align 4,,10
 5982 0281 0F1F8000 		.p2align 3
 5982      000000
 5983              	.L476:
1599:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
 5984              		.loc 1 1599 10 view .LVU1840
 5985 0288 488D3500 		leaq	.LC25(%rip), %rsi
 5985      000000
 5986              	.LVL663:
1599:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_finish(png_ptr, length);
 5987              		.loc 1 1599 10 is_stmt 0 view .LVU1841
 5988 028f E8000000 		call	png_warning@PLT
 5988      00
 5989              	.LVL664:
 5990              	.L475:
1600:fltk-1.3.4-1/png/pngrutil.c ****          return;
 5991              		.loc 1 1600 10 is_stmt 1 view .LVU1842
 5992 0294 4489FE   		movl	%r15d, %esi
 5993 0297 4C89E7   		movq	%r12, %rdi
 5994 029a E8000000 		call	png_crc_finish
 5994      00
 5995              	.LVL665:
1601:fltk-1.3.4-1/png/pngrutil.c ****       }
 5996              		.loc 1 1601 10 view .LVU1843
 5997 029f E964FFFF 		jmp	.L447
 5997      FF
 5998              	.LVL666:
 5999              		.p2align 4,,10
 6000 02a4 0F1F4000 		.p2align 3
 6001              	.L480:
1653:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6002              		.loc 1 1653 7 view .LVU1844
 6003 02a8 488D3500 		leaq	.LC26(%rip), %rsi
 6003      000000
 6004 02af 4C89E7   		movq	%r12, %rdi
 6005 02b2 E8000000 		call	png_warning@PLT
 6005      00
 6006              	.LVL667:
1654:fltk-1.3.4-1/png/pngrutil.c ****    }
 6007              		.loc 1 1654 7 view .LVU1845
 6008 02b7 E94CFFFF 		jmp	.L447
 6008      FF
 6009              	.LVL668:
 6010              	.L477:
1607:fltk-1.3.4-1/png/pngrutil.c **** 
 6011              		.loc 1 1607 7 view .LVU1846
 6012 02bc 488D3500 		leaq	.LC12(%rip), %rsi
 6012      000000
 6013              	.LVL669:
1607:fltk-1.3.4-1/png/pngrutil.c **** 
 6014              		.loc 1 1607 7 is_stmt 0 view .LVU1847
 6015 02c3 4C89E7   		movq	%r12, %rdi
 6016              	.LVL670:
1607:fltk-1.3.4-1/png/pngrutil.c **** 
 6017              		.loc 1 1607 7 view .LVU1848
 6018 02c6 E8000000 		call	png_chunk_error@PLT
 6018      00
 6019              	.LVL671:
 6020              	.L482:
1746:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_sPLT */
 6021              		.loc 1 1746 1 view .LVU1849
 6022 02cb E8000000 		call	__stack_chk_fail@PLT
 6022      00
 6023              	.LVL672:
 6024              	.L459:
1687:fltk-1.3.4-1/png/pngrutil.c ****        return;
 6025              		.loc 1 1687 8 is_stmt 1 view .LVU1850
 6026 02d0 488D3500 		leaq	.LC28(%rip), %rsi
 6026      000000
 6027 02d7 4C89E7   		movq	%r12, %rdi
 6028 02da E8000000 		call	png_warning@PLT
 6028      00
 6029              	.LVL673:
1688:fltk-1.3.4-1/png/pngrutil.c ****    }
 6030              		.loc 1 1688 8 view .LVU1851
 6031 02df E924FFFF 		jmp	.L447
 6031      FF
 6032              		.cfi_endproc
 6033              	.LFE64:
 6035              		.section	.rodata.png_handle_tRNS.str1.1,"aMS",@progbits,1
 6036              	.LC29:
 6037 0000 696E7661 		.string	"invalid with alpha channel"
 6037      6C696420 
 6037      77697468 
 6037      20616C70 
 6037      68612063 
 6038              		.section	.text.png_handle_tRNS,"ax",@progbits
 6039              		.p2align 4
 6040              		.globl	png_handle_tRNS
 6042              	png_handle_tRNS:
 6043              	.LVL674:
 6044              	.LFB65:
1752:fltk-1.3.4-1/png/pngrutil.c ****    png_byte readbuf[PNG_MAX_PALETTE_LENGTH];
 6045              		.loc 1 1752 1 view -0
 6046              		.cfi_startproc
1752:fltk-1.3.4-1/png/pngrutil.c ****    png_byte readbuf[PNG_MAX_PALETTE_LENGTH];
 6047              		.loc 1 1752 1 is_stmt 0 view .LVU1853
 6048 0000 F30F1EFA 		endbr64
 6049 0004 4156     		pushq	%r14
 6050              		.cfi_def_cfa_offset 16
 6051              		.cfi_offset 14, -16
 6052 0006 4155     		pushq	%r13
 6053              		.cfi_def_cfa_offset 24
 6054              		.cfi_offset 13, -24
 6055 0008 4154     		pushq	%r12
 6056              		.cfi_def_cfa_offset 32
 6057              		.cfi_offset 12, -32
 6058 000a 55       		pushq	%rbp
 6059              		.cfi_def_cfa_offset 40
 6060              		.cfi_offset 6, -40
 6061 000b 4889FD   		movq	%rdi, %rbp
 6062 000e 4881EC18 		subq	$280, %rsp
 6062      010000
 6063              		.cfi_def_cfa_offset 320
1752:fltk-1.3.4-1/png/pngrutil.c ****    png_byte readbuf[PNG_MAX_PALETTE_LENGTH];
 6064              		.loc 1 1752 1 view .LVU1854
 6065 0015 64488B04 		movq	%fs:40, %rax
 6065      25280000 
 6065      00
 6066 001e 48898424 		movq	%rax, 264(%rsp)
 6066      08010000 
 6067 0026 31C0     		xorl	%eax, %eax
1753:fltk-1.3.4-1/png/pngrutil.c **** 
 6068              		.loc 1 1753 4 is_stmt 1 view .LVU1855
1755:fltk-1.3.4-1/png/pngrutil.c **** 
 6069              		.loc 1 1755 4 view .LVU1856
1757:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6070              		.loc 1 1757 4 view .LVU1857
1757:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6071              		.loc 1 1757 16 is_stmt 0 view .LVU1858
 6072 0028 8B872C01 		movl	300(%rdi), %eax
 6072      0000
1757:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6073              		.loc 1 1757 7 view .LVU1859
 6074 002e A801     		testb	$1, %al
 6075 0030 0F842802 		je	.L511
 6075      0000
 6076 0036 4189D5   		movl	%edx, %r13d
1760:fltk-1.3.4-1/png/pngrutil.c ****    {
 6077              		.loc 1 1760 9 is_stmt 1 view .LVU1860
1760:fltk-1.3.4-1/png/pngrutil.c ****    {
 6078              		.loc 1 1760 12 is_stmt 0 view .LVU1861
 6079 0039 A804     		testb	$4, %al
 6080 003b 0F85FF00 		jne	.L494
 6080      0000
 6081 0041 4989F4   		movq	%rsi, %r12
1767:fltk-1.3.4-1/png/pngrutil.c ****    {
 6082              		.loc 1 1767 9 is_stmt 1 view .LVU1862
1767:fltk-1.3.4-1/png/pngrutil.c ****    {
 6083              		.loc 1 1767 12 is_stmt 0 view .LVU1863
 6084 0044 4885F6   		testq	%rsi, %rsi
 6085 0047 740A     		je	.L487
1767:fltk-1.3.4-1/png/pngrutil.c ****    {
 6086              		.loc 1 1767 30 discriminator 1 view .LVU1864
 6087 0049 F6460810 		testb	$16, 8(%rsi)
 6088 004d 0F850D01 		jne	.L512
 6088      0000
 6089              	.L487:
1774:fltk-1.3.4-1/png/pngrutil.c ****    {
 6090              		.loc 1 1774 4 is_stmt 1 view .LVU1865
1774:fltk-1.3.4-1/png/pngrutil.c ****    {
 6091              		.loc 1 1774 15 is_stmt 0 view .LVU1866
 6092 0053 0FB69577 		movzbl	631(%rbp), %edx
 6092      020000
 6093              	.LVL675:
1774:fltk-1.3.4-1/png/pngrutil.c ****    {
 6094              		.loc 1 1774 7 view .LVU1867
 6095 005a 84D2     		testb	%dl, %dl
 6096 005c 0F847E00 		je	.L513
 6096      0000
1790:fltk-1.3.4-1/png/pngrutil.c ****    {
 6097              		.loc 1 1790 9 is_stmt 1 view .LVU1868
1790:fltk-1.3.4-1/png/pngrutil.c ****    {
 6098              		.loc 1 1790 12 is_stmt 0 view .LVU1869
 6099 0062 80FA02   		cmpb	$2, %dl
 6100 0065 0F845D01 		je	.L514
 6100      0000
1808:fltk-1.3.4-1/png/pngrutil.c ****    {
 6101              		.loc 1 1808 9 is_stmt 1 view .LVU1870
1808:fltk-1.3.4-1/png/pngrutil.c ****    {
 6102              		.loc 1 1808 12 is_stmt 0 view .LVU1871
 6103 006b 80FA03   		cmpb	$3, %dl
 6104 006e 0F850C01 		jne	.L493
 6104      0000
1810:fltk-1.3.4-1/png/pngrutil.c ****       {
 6105              		.loc 1 1810 7 is_stmt 1 view .LVU1872
1810:fltk-1.3.4-1/png/pngrutil.c ****       {
 6106              		.loc 1 1810 10 is_stmt 0 view .LVU1873
 6107 0074 A802     		testb	$2, %al
 6108 0076 0F84C400 		je	.L494
 6108      0000
1818:fltk-1.3.4-1/png/pngrutil.c ****          length == 0)
 6109              		.loc 1 1818 7 is_stmt 1 view .LVU1874
1818:fltk-1.3.4-1/png/pngrutil.c ****          length == 0)
 6110              		.loc 1 1818 27 is_stmt 0 view .LVU1875
 6111 007c 0FB78568 		movzwl	616(%rbp), %eax
 6111      020000
1818:fltk-1.3.4-1/png/pngrutil.c ****          length == 0)
 6112              		.loc 1 1818 10 view .LVU1876
 6113 0083 4439E8   		cmpl	%r13d, %eax
 6114 0086 7218     		jb	.L495
1818:fltk-1.3.4-1/png/pngrutil.c ****          length == 0)
 6115              		.loc 1 1818 76 discriminator 1 view .LVU1877
 6116 0088 418D45FF 		leal	-1(%r13), %eax
 6117 008c 3DFF0000 		cmpl	$255, %eax
 6117      00
 6118 0091 0F86A901 		jbe	.L496
 6118      0000
 6119 0097 660F1F84 		.p2align 4,,10
 6119      00000000 
 6119      00
 6120              		.p2align 3
 6121              	.L495:
1821:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
 6122              		.loc 1 1821 10 is_stmt 1 view .LVU1878
 6123 00a0 4489EE   		movl	%r13d, %esi
 6124              	.LVL676:
1821:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
 6125              		.loc 1 1821 10 is_stmt 0 view .LVU1879
 6126 00a3 4889EF   		movq	%rbp, %rdi
 6127              	.LVL677:
1821:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid");
 6128              		.loc 1 1821 10 view .LVU1880
 6129 00a6 E8000000 		call	png_crc_finish
 6129      00
 6130              	.LVL678:
1822:fltk-1.3.4-1/png/pngrutil.c ****          return;
 6131              		.loc 1 1822 10 is_stmt 1 view .LVU1881
 6132 00ab 488D3500 		leaq	.LC11(%rip), %rsi
 6132      000000
 6133 00b2 4889EF   		movq	%rbp, %rdi
 6134 00b5 E8000000 		call	png_chunk_benign_error@PLT
 6134      00
 6135              	.LVL679:
1823:fltk-1.3.4-1/png/pngrutil.c ****       }
 6136              		.loc 1 1823 10 view .LVU1882
 6137              	.L483:
1849:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6138              		.loc 1 1849 1 is_stmt 0 view .LVU1883
 6139 00ba 488B8424 		movq	264(%rsp), %rax
 6139      08010000 
 6140 00c2 64483304 		xorq	%fs:40, %rax
 6140      25280000 
 6140      00
 6141 00cb 0F859901 		jne	.L515
 6141      0000
 6142 00d1 4881C418 		addq	$280, %rsp
 6142      010000
 6143              		.cfi_remember_state
 6144              		.cfi_def_cfa_offset 40
 6145 00d8 5D       		popq	%rbp
 6146              		.cfi_def_cfa_offset 32
 6147              	.LVL680:
1849:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6148              		.loc 1 1849 1 view .LVU1884
 6149 00d9 415C     		popq	%r12
 6150              		.cfi_def_cfa_offset 24
 6151 00db 415D     		popq	%r13
 6152              		.cfi_def_cfa_offset 16
 6153              	.LVL681:
1849:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6154              		.loc 1 1849 1 view .LVU1885
 6155 00dd 415E     		popq	%r14
 6156              		.cfi_def_cfa_offset 8
 6157 00df C3       		ret
 6158              	.LVL682:
 6159              		.p2align 4,,10
 6160              		.p2align 3
 6161              	.L513:
 6162              		.cfi_restore_state
 6163              	.LBB304:
1776:fltk-1.3.4-1/png/pngrutil.c **** 
 6164              		.loc 1 1776 7 is_stmt 1 view .LVU1886
1778:fltk-1.3.4-1/png/pngrutil.c ****       {
 6165              		.loc 1 1778 7 view .LVU1887
1778:fltk-1.3.4-1/png/pngrutil.c ****       {
 6166              		.loc 1 1778 10 is_stmt 0 view .LVU1888
 6167 00e0 4183FD02 		cmpl	$2, %r13d
 6168 00e4 75BA     		jne	.L495
1785:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = 1;
 6169              		.loc 1 1785 7 is_stmt 1 view .LVU1889
 6170              	.LVL683:
 6171              	.LBB305:
 6172              	.LBI305:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 6173              		.loc 1 187 1 view .LVU1890
 6174              	.LBB306:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6175              		.loc 1 189 4 view .LVU1891
 6176 00e6 4989E6   		movq	%rsp, %r14
 6177 00e9 BA020000 		movl	$2, %edx
 6177      00
 6178 00ee 4889EF   		movq	%rbp, %rdi
 6179              	.LVL684:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6180              		.loc 1 189 4 is_stmt 0 view .LVU1892
 6181 00f1 4C89F6   		movq	%r14, %rsi
 6182              	.LVL685:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6183              		.loc 1 189 4 view .LVU1893
 6184 00f4 E8000000 		call	png_crc_read.part.0
 6184      00
 6185              	.LVL686:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6186              		.loc 1 189 4 view .LVU1894
 6187              	.LBE306:
 6188              	.LBE305:
1786:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.gray = png_get_uint_16(buf);
 6189              		.loc 1 1786 7 is_stmt 1 view .LVU1895
1787:fltk-1.3.4-1/png/pngrutil.c ****    }
 6190              		.loc 1 1787 35 is_stmt 0 view .LVU1896
 6191 00f9 0FB60424 		movzbl	(%rsp), %eax
 6192 00fd 0FB65424 		movzbl	1(%rsp), %edx
 6192      01
1786:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.gray = png_get_uint_16(buf);
 6193              		.loc 1 1786 26 view .LVU1897
 6194 0102 B9010000 		movl	$1, %ecx
 6194      00
 6195 0107 66898D70 		movw	%cx, 624(%rbp)
 6195      020000
1787:fltk-1.3.4-1/png/pngrutil.c ****    }
 6196              		.loc 1 1787 7 is_stmt 1 view .LVU1898
1787:fltk-1.3.4-1/png/pngrutil.c ****    }
 6197              		.loc 1 1787 35 is_stmt 0 view .LVU1899
 6198 010e C1E008   		sall	$8, %eax
 6199 0111 01D0     		addl	%edx, %eax
 6200 0113 66898508 		movw	%ax, 776(%rbp)
 6200      030000
 6201              	.L490:
1787:fltk-1.3.4-1/png/pngrutil.c ****    }
 6202              		.loc 1 1787 35 view .LVU1900
 6203              	.LBE304:
1837:fltk-1.3.4-1/png/pngrutil.c ****    {
 6204              		.loc 1 1837 4 is_stmt 1 view .LVU1901
1837:fltk-1.3.4-1/png/pngrutil.c ****    {
 6205              		.loc 1 1837 8 is_stmt 0 view .LVU1902
 6206 011a 31F6     		xorl	%esi, %esi
 6207 011c 4889EF   		movq	%rbp, %rdi
 6208 011f E8000000 		call	png_crc_finish
 6208      00
 6209              	.LVL687:
1837:fltk-1.3.4-1/png/pngrutil.c ****    {
 6210              		.loc 1 1837 7 view .LVU1903
 6211 0124 85C0     		testl	%eax, %eax
 6212 0126 7478     		je	.L497
1839:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6213              		.loc 1 1839 7 is_stmt 1 view .LVU1904
1839:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6214              		.loc 1 1839 26 is_stmt 0 view .LVU1905
 6215 0128 31C0     		xorl	%eax, %eax
 6216 012a 66898570 		movw	%ax, 624(%rbp)
 6216      020000
1840:fltk-1.3.4-1/png/pngrutil.c ****    }
 6217              		.loc 1 1840 7 is_stmt 1 view .LVU1906
 6218 0131 E984FFFF 		jmp	.L483
 6218      FF
 6219              	.LVL688:
 6220 0136 662E0F1F 		.p2align 4,,10
 6220      84000000 
 6220      0000
 6221              		.p2align 3
 6222              	.L494:
1762:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 6223              		.loc 1 1762 7 view .LVU1907
 6224 0140 4489EE   		movl	%r13d, %esi
 6225              	.LVL689:
1762:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 6226              		.loc 1 1762 7 is_stmt 0 view .LVU1908
 6227 0143 4889EF   		movq	%rbp, %rdi
 6228              	.LVL690:
1762:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 6229              		.loc 1 1762 7 view .LVU1909
 6230 0146 E8000000 		call	png_crc_finish
 6230      00
 6231              	.LVL691:
1763:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6232              		.loc 1 1763 7 is_stmt 1 view .LVU1910
 6233 014b 488D3500 		leaq	.LC10(%rip), %rsi
 6233      000000
 6234 0152 4889EF   		movq	%rbp, %rdi
 6235 0155 E8000000 		call	png_chunk_benign_error@PLT
 6235      00
 6236              	.LVL692:
1764:fltk-1.3.4-1/png/pngrutil.c ****    }
 6237              		.loc 1 1764 7 view .LVU1911
 6238 015a E95BFFFF 		jmp	.L483
 6238      FF
 6239              	.LVL693:
 6240 015f 90       		.p2align 4,,10
 6241              		.p2align 3
 6242              	.L512:
1769:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 6243              		.loc 1 1769 7 view .LVU1912
 6244 0160 89D6     		movl	%edx, %esi
 6245              	.LVL694:
1769:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 6246              		.loc 1 1769 7 is_stmt 0 view .LVU1913
 6247 0162 E8000000 		call	png_crc_finish
 6247      00
 6248              	.LVL695:
1770:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6249              		.loc 1 1770 7 is_stmt 1 view .LVU1914
 6250 0167 488D3500 		leaq	.LC13(%rip), %rsi
 6250      000000
 6251 016e 4889EF   		movq	%rbp, %rdi
 6252 0171 E8000000 		call	png_chunk_benign_error@PLT
 6252      00
 6253              	.LVL696:
1771:fltk-1.3.4-1/png/pngrutil.c ****    }
 6254              		.loc 1 1771 7 view .LVU1915
 6255 0176 E93FFFFF 		jmp	.L483
 6255      FF
 6256              	.LVL697:
 6257 017b 0F1F4400 		.p2align 4,,10
 6257      00
 6258              		.p2align 3
 6259              	.L493:
1832:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid with alpha channel");
 6260              		.loc 1 1832 7 view .LVU1916
 6261 0180 4489EE   		movl	%r13d, %esi
 6262              	.LVL698:
1832:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid with alpha channel");
 6263              		.loc 1 1832 7 is_stmt 0 view .LVU1917
 6264 0183 4889EF   		movq	%rbp, %rdi
 6265              	.LVL699:
1832:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid with alpha channel");
 6266              		.loc 1 1832 7 view .LVU1918
 6267 0186 E8000000 		call	png_crc_finish
 6267      00
 6268              	.LVL700:
1833:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6269              		.loc 1 1833 7 is_stmt 1 view .LVU1919
 6270 018b 488D3500 		leaq	.LC29(%rip), %rsi
 6270      000000
 6271 0192 4889EF   		movq	%rbp, %rdi
 6272 0195 E8000000 		call	png_chunk_benign_error@PLT
 6272      00
 6273              	.LVL701:
1834:fltk-1.3.4-1/png/pngrutil.c ****    }
 6274              		.loc 1 1834 7 view .LVU1920
 6275 019a E91BFFFF 		jmp	.L483
 6275      FF
 6276 019f 90       		.p2align 4,,10
 6277              		.p2align 3
 6278              	.L497:
1847:fltk-1.3.4-1/png/pngrutil.c ****        &(png_ptr->trans_color));
 6279              		.loc 1 1847 4 view .LVU1921
 6280 01a0 0FB78D70 		movzwl	624(%rbp), %ecx
 6280      020000
 6281 01a7 4C89F2   		movq	%r14, %rdx
 6282 01aa 4C89E6   		movq	%r12, %rsi
 6283 01ad 4889EF   		movq	%rbp, %rdi
 6284 01b0 4C8D8500 		leaq	768(%rbp), %r8
 6284      030000
 6285 01b7 E8000000 		call	png_set_tRNS@PLT
 6285      00
 6286              	.LVL702:
 6287 01bc E9F9FEFF 		jmp	.L483
 6287      FF
 6288              	.LVL703:
 6289              		.p2align 4,,10
 6290 01c1 0F1F8000 		.p2align 3
 6290      000000
 6291              	.L514:
 6292              	.LBB307:
1792:fltk-1.3.4-1/png/pngrutil.c **** 
 6293              		.loc 1 1792 7 view .LVU1922
1794:fltk-1.3.4-1/png/pngrutil.c ****       {
 6294              		.loc 1 1794 7 view .LVU1923
1794:fltk-1.3.4-1/png/pngrutil.c ****       {
 6295              		.loc 1 1794 10 is_stmt 0 view .LVU1924
 6296 01c8 4183FD06 		cmpl	$6, %r13d
 6297 01cc 0F85CEFE 		jne	.L495
 6297      FFFF
1801:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = 1;
 6298              		.loc 1 1801 7 is_stmt 1 view .LVU1925
 6299              	.LVL704:
 6300              	.LBB308:
 6301              	.LBI308:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 6302              		.loc 1 187 1 view .LVU1926
 6303              	.LBB309:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6304              		.loc 1 189 4 view .LVU1927
 6305 01d2 4989E6   		movq	%rsp, %r14
 6306 01d5 BA060000 		movl	$6, %edx
 6306      00
 6307 01da 4889EF   		movq	%rbp, %rdi
 6308              	.LVL705:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6309              		.loc 1 189 4 is_stmt 0 view .LVU1928
 6310 01dd 4C89F6   		movq	%r14, %rsi
 6311              	.LVL706:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6312              		.loc 1 189 4 view .LVU1929
 6313 01e0 E8000000 		call	png_crc_read.part.0
 6313      00
 6314              	.LVL707:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6315              		.loc 1 189 4 view .LVU1930
 6316              	.LBE309:
 6317              	.LBE308:
1802:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.red = png_get_uint_16(buf);
 6318              		.loc 1 1802 7 is_stmt 1 view .LVU1931
1802:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.red = png_get_uint_16(buf);
 6319              		.loc 1 1802 26 is_stmt 0 view .LVU1932
 6320 01e5 BA010000 		movl	$1, %edx
 6320      00
1803:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.green = png_get_uint_16(buf + 2);
 6321              		.loc 1 1803 34 view .LVU1933
 6322 01ea 0FB60424 		movzbl	(%rsp), %eax
1802:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.red = png_get_uint_16(buf);
 6323              		.loc 1 1802 26 view .LVU1934
 6324 01ee 66899570 		movw	%dx, 624(%rbp)
 6324      020000
1803:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.green = png_get_uint_16(buf + 2);
 6325              		.loc 1 1803 7 is_stmt 1 view .LVU1935
1803:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.green = png_get_uint_16(buf + 2);
 6326              		.loc 1 1803 34 is_stmt 0 view .LVU1936
 6327 01f5 0FB65424 		movzbl	1(%rsp), %edx
 6327      01
 6328 01fa C1E008   		sall	$8, %eax
 6329 01fd 01D0     		addl	%edx, %eax
1804:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.blue = png_get_uint_16(buf + 4);
 6330              		.loc 1 1804 36 view .LVU1937
 6331 01ff 0FB65424 		movzbl	3(%rsp), %edx
 6331      03
1803:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.green = png_get_uint_16(buf + 2);
 6332              		.loc 1 1803 34 view .LVU1938
 6333 0204 66898502 		movw	%ax, 770(%rbp)
 6333      030000
1804:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.blue = png_get_uint_16(buf + 4);
 6334              		.loc 1 1804 7 is_stmt 1 view .LVU1939
1804:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.blue = png_get_uint_16(buf + 4);
 6335              		.loc 1 1804 36 is_stmt 0 view .LVU1940
 6336 020b 0FB64424 		movzbl	2(%rsp), %eax
 6336      02
 6337 0210 C1E008   		sall	$8, %eax
 6338 0213 01D0     		addl	%edx, %eax
1805:fltk-1.3.4-1/png/pngrutil.c ****    }
 6339              		.loc 1 1805 35 view .LVU1941
 6340 0215 0FB65424 		movzbl	5(%rsp), %edx
 6340      05
1804:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->trans_color.blue = png_get_uint_16(buf + 4);
 6341              		.loc 1 1804 36 view .LVU1942
 6342 021a 66898504 		movw	%ax, 772(%rbp)
 6342      030000
1805:fltk-1.3.4-1/png/pngrutil.c ****    }
 6343              		.loc 1 1805 7 is_stmt 1 view .LVU1943
1805:fltk-1.3.4-1/png/pngrutil.c ****    }
 6344              		.loc 1 1805 35 is_stmt 0 view .LVU1944
 6345 0221 0FB64424 		movzbl	4(%rsp), %eax
 6345      04
 6346 0226 C1E008   		sall	$8, %eax
 6347 0229 01D0     		addl	%edx, %eax
 6348 022b 66898506 		movw	%ax, 774(%rbp)
 6348      030000
 6349              	.LBE307:
 6350 0232 E9E3FEFF 		jmp	.L490
 6350      FF
 6351              	.LVL708:
 6352 0237 660F1F84 		.p2align 4,,10
 6352      00000000 
 6352      00
 6353              		.p2align 3
 6354              	.L496:
1826:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_trans = (png_uint_16)length;
 6355              		.loc 1 1826 7 is_stmt 1 view .LVU1945
 6356              	.LBB310:
 6357              	.LBI310:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 6358              		.loc 1 187 1 view .LVU1946
 6359              	.LBB311:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6360              		.loc 1 189 4 view .LVU1947
 6361 0240 4989E6   		movq	%rsp, %r14
 6362 0243 4489EA   		movl	%r13d, %edx
 6363 0246 4889EF   		movq	%rbp, %rdi
 6364              	.LVL709:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6365              		.loc 1 189 4 is_stmt 0 view .LVU1948
 6366 0249 4C89F6   		movq	%r14, %rsi
 6367              	.LVL710:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6368              		.loc 1 189 4 view .LVU1949
 6369 024c E8000000 		call	png_crc_read.part.0
 6369      00
 6370              	.LVL711:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6371              		.loc 1 189 4 view .LVU1950
 6372              	.LBE311:
 6373              	.LBE310:
1827:fltk-1.3.4-1/png/pngrutil.c ****    }
 6374              		.loc 1 1827 7 is_stmt 1 view .LVU1951
1827:fltk-1.3.4-1/png/pngrutil.c ****    }
 6375              		.loc 1 1827 28 is_stmt 0 view .LVU1952
 6376 0251 664489AD 		movw	%r13w, 624(%rbp)
 6376      70020000 
 6377 0259 E9BCFEFF 		jmp	.L490
 6377      FF
 6378              	.LVL712:
 6379              	.L511:
1758:fltk-1.3.4-1/png/pngrutil.c **** 
 6380              		.loc 1 1758 7 is_stmt 1 view .LVU1953
 6381 025e 488D3500 		leaq	.LC12(%rip), %rsi
 6381      000000
 6382              	.LVL713:
1758:fltk-1.3.4-1/png/pngrutil.c **** 
 6383              		.loc 1 1758 7 is_stmt 0 view .LVU1954
 6384 0265 E8000000 		call	png_chunk_error@PLT
 6384      00
 6385              	.LVL714:
 6386              	.L515:
1849:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6387              		.loc 1 1849 1 view .LVU1955
 6388 026a E8000000 		call	__stack_chk_fail@PLT
 6388      00
 6389              	.LVL715:
 6390              		.cfi_endproc
 6391              	.LFE65:
 6393              		.section	.rodata.png_handle_bKGD.str1.1,"aMS",@progbits,1
 6394              	.LC30:
 6395 0000 696E7661 		.string	"invalid index"
 6395      6C696420 
 6395      696E6465 
 6395      7800
 6396              		.section	.text.png_handle_bKGD,"ax",@progbits
 6397              		.p2align 4
 6398              		.globl	png_handle_bKGD
 6400              	png_handle_bKGD:
 6401              	.LVL716:
 6402              	.LFB66:
1855:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen;
 6403              		.loc 1 1855 1 is_stmt 1 view -0
 6404              		.cfi_startproc
1855:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen;
 6405              		.loc 1 1855 1 is_stmt 0 view .LVU1957
 6406 0000 F30F1EFA 		endbr64
 6407 0004 4154     		pushq	%r12
 6408              		.cfi_def_cfa_offset 16
 6409              		.cfi_offset 12, -16
 6410 0006 4989F4   		movq	%rsi, %r12
 6411 0009 89D6     		movl	%edx, %esi
 6412              	.LVL717:
1855:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen;
 6413              		.loc 1 1855 1 view .LVU1958
 6414 000b 55       		pushq	%rbp
 6415              		.cfi_def_cfa_offset 24
 6416              		.cfi_offset 6, -24
 6417 000c 4889FD   		movq	%rdi, %rbp
 6418 000f 4883EC28 		subq	$40, %rsp
 6419              		.cfi_def_cfa_offset 64
1855:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int truelen;
 6420              		.loc 1 1855 1 view .LVU1959
 6421 0013 64488B04 		movq	%fs:40, %rax
 6421      25280000 
 6421      00
 6422 001c 48894424 		movq	%rax, 24(%rsp)
 6422      18
 6423 0021 31C0     		xorl	%eax, %eax
1856:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[6];
 6424              		.loc 1 1856 4 is_stmt 1 view .LVU1960
1857:fltk-1.3.4-1/png/pngrutil.c ****    png_color_16 background;
 6425              		.loc 1 1857 4 view .LVU1961
1858:fltk-1.3.4-1/png/pngrutil.c **** 
 6426              		.loc 1 1858 4 view .LVU1962
1860:fltk-1.3.4-1/png/pngrutil.c **** 
 6427              		.loc 1 1860 4 view .LVU1963
1862:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6428              		.loc 1 1862 4 view .LVU1964
1862:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6429              		.loc 1 1862 16 is_stmt 0 view .LVU1965
 6430 0023 8B872C01 		movl	300(%rdi), %eax
 6430      0000
1862:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6431              		.loc 1 1862 7 view .LVU1966
 6432 0029 89C2     		movl	%eax, %edx
 6433              	.LVL718:
1862:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6434              		.loc 1 1862 7 view .LVU1967
 6435 002b 83E201   		andl	$1, %edx
 6436 002e 0F84F601 		je	.L547
 6436      0000
1865:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE &&
 6437              		.loc 1 1865 9 is_stmt 1 view .LVU1968
1865:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE &&
 6438              		.loc 1 1865 12 is_stmt 0 view .LVU1969
 6439 0034 A804     		testb	$4, %al
 6440 0036 0F85E800 		jne	.L518
 6440      0000
1866:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_PLTE) == 0))
 6441              		.loc 1 1866 16 discriminator 1 view .LVU1970
 6442 003c 0FB68F77 		movzbl	631(%rdi), %ecx
 6442      020000
1865:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE &&
 6443              		.loc 1 1865 50 discriminator 1 view .LVU1971
 6444 0043 80F903   		cmpb	$3, %cl
 6445 0046 0F84D400 		je	.L548
 6445      0000
1874:fltk-1.3.4-1/png/pngrutil.c ****    {
 6446              		.loc 1 1874 9 is_stmt 1 view .LVU1972
1874:fltk-1.3.4-1/png/pngrutil.c ****    {
 6447              		.loc 1 1874 12 is_stmt 0 view .LVU1973
 6448 004c 4D85E4   		testq	%r12, %r12
 6449 004f 740C     		je	.L532
1874:fltk-1.3.4-1/png/pngrutil.c ****    {
 6450              		.loc 1 1874 30 view .LVU1974
 6451 0051 41F64424 		testb	$32, 8(%r12)
 6451      0820
 6452 0057 0F85FB00 		jne	.L533
 6452      0000
 6453              	.L532:
1884:fltk-1.3.4-1/png/pngrutil.c ****       truelen = 6;
 6454              		.loc 1 1884 9 is_stmt 1 view .LVU1975
1884:fltk-1.3.4-1/png/pngrutil.c ****       truelen = 6;
 6455              		.loc 1 1884 12 is_stmt 0 view .LVU1976
 6456 005d 83E102   		andl	$2, %ecx
1888:fltk-1.3.4-1/png/pngrutil.c **** 
 6457              		.loc 1 1888 15 view .LVU1977
 6458 0060 80F901   		cmpb	$1, %cl
 6459 0063 19D2     		sbbl	%edx, %edx
 6460 0065 83E2FC   		andl	$-4, %edx
 6461 0068 83C206   		addl	$6, %edx
 6462              	.L522:
 6463              	.LVL719:
1890:fltk-1.3.4-1/png/pngrutil.c ****    {
 6464              		.loc 1 1890 4 is_stmt 1 view .LVU1978
1890:fltk-1.3.4-1/png/pngrutil.c ****    {
 6465              		.loc 1 1890 7 is_stmt 0 view .LVU1979
 6466 006b 39F2     		cmpl	%esi, %edx
 6467 006d 7439     		je	.L523
1892:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 6468              		.loc 1 1892 7 is_stmt 1 view .LVU1980
 6469 006f 4889EF   		movq	%rbp, %rdi
 6470              	.LVL720:
1892:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 6471              		.loc 1 1892 7 is_stmt 0 view .LVU1981
 6472 0072 E8000000 		call	png_crc_finish
 6472      00
 6473              	.LVL721:
1893:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6474              		.loc 1 1893 7 is_stmt 1 view .LVU1982
 6475 0077 488D3500 		leaq	.LC11(%rip), %rsi
 6475      000000
 6476 007e 4889EF   		movq	%rbp, %rdi
 6477 0081 E8000000 		call	png_chunk_benign_error@PLT
 6477      00
 6478              	.LVL722:
1894:fltk-1.3.4-1/png/pngrutil.c ****    }
 6479              		.loc 1 1894 7 view .LVU1983
 6480              	.L516:
1949:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6481              		.loc 1 1949 1 is_stmt 0 view .LVU1984
 6482 0086 488B4424 		movq	24(%rsp), %rax
 6482      18
 6483 008b 64483304 		xorq	%fs:40, %rax
 6483      25280000 
 6483      00
 6484 0094 0F858B01 		jne	.L549
 6484      0000
 6485 009a 4883C428 		addq	$40, %rsp
 6486              		.cfi_remember_state
 6487              		.cfi_def_cfa_offset 24
 6488 009e 5D       		popq	%rbp
 6489              		.cfi_def_cfa_offset 16
 6490              	.LVL723:
1949:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6491              		.loc 1 1949 1 view .LVU1985
 6492 009f 415C     		popq	%r12
 6493              		.cfi_def_cfa_offset 8
 6494              	.LVL724:
1949:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6495              		.loc 1 1949 1 view .LVU1986
 6496 00a1 C3       		ret
 6497              	.LVL725:
 6498              		.p2align 4,,10
 6499 00a2 660F1F44 		.p2align 3
 6499      0000
 6500              	.L523:
 6501              		.cfi_restore_state
1897:fltk-1.3.4-1/png/pngrutil.c **** 
 6502              		.loc 1 1897 4 is_stmt 1 view .LVU1987
 6503              	.LBB312:
 6504              	.LBI312:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 6505              		.loc 1 187 1 view .LVU1988
 6506              	.LBB313:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6507              		.loc 1 189 4 view .LVU1989
 6508 00a8 488D7424 		leaq	18(%rsp), %rsi
 6508      12
 6509              	.LVL726:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6510              		.loc 1 189 4 is_stmt 0 view .LVU1990
 6511 00ad 4889EF   		movq	%rbp, %rdi
 6512              	.LVL727:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6513              		.loc 1 189 4 view .LVU1991
 6514 00b0 E8000000 		call	png_crc_read.part.0
 6514      00
 6515              	.LVL728:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6516              		.loc 1 189 4 view .LVU1992
 6517              	.LBE313:
 6518              	.LBE312:
1899:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6519              		.loc 1 1899 4 is_stmt 1 view .LVU1993
1899:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6520              		.loc 1 1899 8 is_stmt 0 view .LVU1994
 6521 00b5 31F6     		xorl	%esi, %esi
 6522 00b7 4889EF   		movq	%rbp, %rdi
 6523 00ba E8000000 		call	png_crc_finish
 6523      00
 6524              	.LVL729:
1899:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6525              		.loc 1 1899 7 view .LVU1995
 6526 00bf 85C0     		testl	%eax, %eax
 6527 00c1 75C3     		jne	.L516
1907:fltk-1.3.4-1/png/pngrutil.c ****    {
 6528              		.loc 1 1907 4 is_stmt 1 view .LVU1996
1907:fltk-1.3.4-1/png/pngrutil.c ****    {
 6529              		.loc 1 1907 15 is_stmt 0 view .LVU1997
 6530 00c3 0FB69577 		movzbl	631(%rbp), %edx
 6530      020000
 6531 00ca 0FB64424 		movzbl	18(%rsp), %eax
 6531      12
1907:fltk-1.3.4-1/png/pngrutil.c ****    {
 6532              		.loc 1 1907 7 view .LVU1998
 6533 00cf 80FA03   		cmpb	$3, %dl
 6534 00d2 0F84A000 		je	.L550
 6534      0000
1930:fltk-1.3.4-1/png/pngrutil.c ****    {
 6535              		.loc 1 1930 9 is_stmt 1 view .LVU1999
 6536 00d8 0FB64C24 		movzbl	19(%rsp), %ecx
 6536      13
 6537 00dd C1E008   		sall	$8, %eax
1932:fltk-1.3.4-1/png/pngrutil.c ****       background.red =
 6538              		.loc 1 1932 24 is_stmt 0 view .LVU2000
 6539 00e0 C6442408 		movb	$0, 8(%rsp)
 6539      00
 6540 00e5 01C8     		addl	%ecx, %eax
1930:fltk-1.3.4-1/png/pngrutil.c ****    {
 6541              		.loc 1 1930 12 view .LVU2001
 6542 00e7 83E202   		andl	$2, %edx
 6543 00ea 0F85D000 		jne	.L529
 6543      0000
1932:fltk-1.3.4-1/png/pngrutil.c ****       background.red =
 6544              		.loc 1 1932 7 is_stmt 1 view .LVU2002
1933:fltk-1.3.4-1/png/pngrutil.c ****       background.green =
 6545              		.loc 1 1933 7 view .LVU2003
1936:fltk-1.3.4-1/png/pngrutil.c ****    }
 6546              		.loc 1 1936 23 is_stmt 0 view .LVU2004
 6547 00f0 66894424 		movw	%ax, 16(%rsp)
 6547      10
1935:fltk-1.3.4-1/png/pngrutil.c ****       background.gray = png_get_uint_16(buf);
 6548              		.loc 1 1935 23 view .LVU2005
 6549 00f5 66894424 		movw	%ax, 14(%rsp)
 6549      0E
1934:fltk-1.3.4-1/png/pngrutil.c ****       background.blue =
 6550              		.loc 1 1934 24 view .LVU2006
 6551 00fa 66894424 		movw	%ax, 12(%rsp)
 6551      0C
1933:fltk-1.3.4-1/png/pngrutil.c ****       background.green =
 6552              		.loc 1 1933 22 view .LVU2007
 6553 00ff 66894424 		movw	%ax, 10(%rsp)
 6553      0A
 6554              	.L528:
1948:fltk-1.3.4-1/png/pngrutil.c **** }
 6555              		.loc 1 1948 4 is_stmt 1 view .LVU2008
 6556 0104 488D5424 		leaq	8(%rsp), %rdx
 6556      08
 6557 0109 4C89E6   		movq	%r12, %rsi
 6558 010c 4889EF   		movq	%rbp, %rdi
 6559 010f E8000000 		call	png_set_bKGD@PLT
 6559      00
 6560              	.LVL730:
 6561 0114 E96DFFFF 		jmp	.L516
 6561      FF
 6562              	.LVL731:
 6563 0119 0F1F8000 		.p2align 4,,10
 6563      000000
 6564              		.p2align 3
 6565              	.L548:
1866:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_PLTE) == 0))
 6566              		.loc 1 1866 55 is_stmt 0 view .LVU2009
 6567 0120 A802     		testb	$2, %al
 6568 0122 751C     		jne	.L520
 6569              	.L518:
1869:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 6570              		.loc 1 1869 7 is_stmt 1 view .LVU2010
 6571 0124 4889EF   		movq	%rbp, %rdi
 6572              	.LVL732:
1869:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 6573              		.loc 1 1869 7 is_stmt 0 view .LVU2011
 6574 0127 E8000000 		call	png_crc_finish
 6574      00
 6575              	.LVL733:
1870:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6576              		.loc 1 1870 7 is_stmt 1 view .LVU2012
 6577 012c 488D3500 		leaq	.LC10(%rip), %rsi
 6577      000000
 6578 0133 4889EF   		movq	%rbp, %rdi
 6579 0136 E8000000 		call	png_chunk_benign_error@PLT
 6579      00
 6580              	.LVL734:
1871:fltk-1.3.4-1/png/pngrutil.c ****    }
 6581              		.loc 1 1871 7 view .LVU2013
 6582 013b E946FFFF 		jmp	.L516
 6582      FF
 6583              	.LVL735:
 6584              		.p2align 4,,10
 6585              		.p2align 3
 6586              	.L520:
1874:fltk-1.3.4-1/png/pngrutil.c ****    {
 6587              		.loc 1 1874 9 view .LVU2014
1874:fltk-1.3.4-1/png/pngrutil.c ****    {
 6588              		.loc 1 1874 12 is_stmt 0 view .LVU2015
 6589 0140 4D85E4   		testq	%r12, %r12
 6590 0143 0F8422FF 		je	.L522
 6590      FFFF
1874:fltk-1.3.4-1/png/pngrutil.c ****    {
 6591              		.loc 1 1874 30 view .LVU2016
 6592 0149 41F64424 		testb	$32, 8(%r12)
 6592      0820
 6593 014f 0F8416FF 		je	.L522
 6593      FFFF
 6594              		.p2align 4,,10
 6595 0155 0F1F00   		.p2align 3
 6596              	.L533:
1876:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 6597              		.loc 1 1876 7 is_stmt 1 view .LVU2017
 6598 0158 4889EF   		movq	%rbp, %rdi
 6599              	.LVL736:
1876:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 6600              		.loc 1 1876 7 is_stmt 0 view .LVU2018
 6601 015b E8000000 		call	png_crc_finish
 6601      00
 6602              	.LVL737:
1877:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6603              		.loc 1 1877 7 is_stmt 1 view .LVU2019
 6604 0160 488D3500 		leaq	.LC13(%rip), %rsi
 6604      000000
 6605 0167 4889EF   		movq	%rbp, %rdi
 6606 016a E8000000 		call	png_chunk_benign_error@PLT
 6606      00
 6607              	.LVL738:
1878:fltk-1.3.4-1/png/pngrutil.c ****    }
 6608              		.loc 1 1878 7 view .LVU2020
 6609 016f E912FFFF 		jmp	.L516
 6609      FF
 6610              		.p2align 4,,10
 6611 0174 0F1F4000 		.p2align 3
 6612              	.L550:
1909:fltk-1.3.4-1/png/pngrutil.c **** 
 6613              		.loc 1 1909 7 view .LVU2021
1909:fltk-1.3.4-1/png/pngrutil.c **** 
 6614              		.loc 1 1909 24 is_stmt 0 view .LVU2022
 6615 0178 88442408 		movb	%al, 8(%rsp)
1911:fltk-1.3.4-1/png/pngrutil.c ****       {
 6616              		.loc 1 1911 7 is_stmt 1 view .LVU2023
1911:fltk-1.3.4-1/png/pngrutil.c ****       {
 6617              		.loc 1 1911 10 is_stmt 0 view .LVU2024
 6618 017c 4D85E4   		testq	%r12, %r12
 6619 017f 747F     		je	.L525
1911:fltk-1.3.4-1/png/pngrutil.c ****       {
 6620              		.loc 1 1911 39 discriminator 1 view .LVU2025
 6621 0181 410FB754 		movzwl	32(%r12), %edx
 6621      2420
1911:fltk-1.3.4-1/png/pngrutil.c ****       {
 6622              		.loc 1 1911 28 discriminator 1 view .LVU2026
 6623 0187 6685D2   		testw	%dx, %dx
 6624 018a 7474     		je	.L525
1913:fltk-1.3.4-1/png/pngrutil.c ****          {
 6625              		.loc 1 1913 10 is_stmt 1 view .LVU2027
1913:fltk-1.3.4-1/png/pngrutil.c ****          {
 6626              		.loc 1 1913 17 is_stmt 0 view .LVU2028
 6627 018c 0FB6C8   		movzbl	%al, %ecx
1913:fltk-1.3.4-1/png/pngrutil.c ****          {
 6628              		.loc 1 1913 13 view .LVU2029
 6629 018f 6639CA   		cmpw	%cx, %dx
 6630 0192 767D     		jbe	.L551
1919:fltk-1.3.4-1/png/pngrutil.c ****          background.green = (png_uint_16)png_ptr->palette[buf[0]].green;
 6631              		.loc 1 1919 10 is_stmt 1 view .LVU2030
1919:fltk-1.3.4-1/png/pngrutil.c ****          background.green = (png_uint_16)png_ptr->palette[buf[0]].green;
 6632              		.loc 1 1919 56 is_stmt 0 view .LVU2031
 6633 0194 488D0440 		leaq	(%rax,%rax,2), %rax
 6634 0198 48038560 		addq	608(%rbp), %rax
 6634      020000
1919:fltk-1.3.4-1/png/pngrutil.c ****          background.green = (png_uint_16)png_ptr->palette[buf[0]].green;
 6635              		.loc 1 1919 27 view .LVU2032
 6636 019f 0FB610   		movzbl	(%rax), %edx
 6637 01a2 66895424 		movw	%dx, 10(%rsp)
 6637      0A
1920:fltk-1.3.4-1/png/pngrutil.c ****          background.blue = (png_uint_16)png_ptr->palette[buf[0]].blue;
 6638              		.loc 1 1920 10 is_stmt 1 view .LVU2033
1920:fltk-1.3.4-1/png/pngrutil.c ****          background.blue = (png_uint_16)png_ptr->palette[buf[0]].blue;
 6639              		.loc 1 1920 29 is_stmt 0 view .LVU2034
 6640 01a7 0FB65001 		movzbl	1(%rax), %edx
 6641 01ab 66895424 		movw	%dx, 12(%rsp)
 6641      0C
1921:fltk-1.3.4-1/png/pngrutil.c ****       }
 6642              		.loc 1 1921 10 is_stmt 1 view .LVU2035
1921:fltk-1.3.4-1/png/pngrutil.c ****       }
 6643              		.loc 1 1921 28 is_stmt 0 view .LVU2036
 6644 01b0 0FB64002 		movzbl	2(%rax), %eax
 6645 01b4 66894424 		movw	%ax, 14(%rsp)
 6645      0E
1921:fltk-1.3.4-1/png/pngrutil.c ****       }
 6646              		.loc 1 1921 26 view .LVU2037
 6647 01b9 EB32     		jmp	.L546
 6648 01bb 0F1F4400 		.p2align 4,,10
 6648      00
 6649              		.p2align 3
 6650              	.L529:
1941:fltk-1.3.4-1/png/pngrutil.c ****       background.red = png_get_uint_16(buf);
 6651              		.loc 1 1941 7 is_stmt 1 view .LVU2038
1942:fltk-1.3.4-1/png/pngrutil.c ****       background.green = png_get_uint_16(buf + 2);
 6652              		.loc 1 1942 7 view .LVU2039
1942:fltk-1.3.4-1/png/pngrutil.c ****       background.green = png_get_uint_16(buf + 2);
 6653              		.loc 1 1942 22 is_stmt 0 view .LVU2040
 6654 01c0 66894424 		movw	%ax, 10(%rsp)
 6654      0A
1943:fltk-1.3.4-1/png/pngrutil.c ****       background.blue = png_get_uint_16(buf + 4);
 6655              		.loc 1 1943 7 is_stmt 1 view .LVU2041
1943:fltk-1.3.4-1/png/pngrutil.c ****       background.blue = png_get_uint_16(buf + 4);
 6656              		.loc 1 1943 26 is_stmt 0 view .LVU2042
 6657 01c5 0FB64424 		movzbl	20(%rsp), %eax
 6657      14
 6658 01ca 0FB65424 		movzbl	21(%rsp), %edx
 6658      15
 6659 01cf C1E008   		sall	$8, %eax
 6660 01d2 01D0     		addl	%edx, %eax
1944:fltk-1.3.4-1/png/pngrutil.c ****       background.gray = 0;
 6661              		.loc 1 1944 25 view .LVU2043
 6662 01d4 0FB65424 		movzbl	23(%rsp), %edx
 6662      17
1943:fltk-1.3.4-1/png/pngrutil.c ****       background.blue = png_get_uint_16(buf + 4);
 6663              		.loc 1 1943 26 view .LVU2044
 6664 01d9 66894424 		movw	%ax, 12(%rsp)
 6664      0C
1944:fltk-1.3.4-1/png/pngrutil.c ****       background.gray = 0;
 6665              		.loc 1 1944 7 is_stmt 1 view .LVU2045
1944:fltk-1.3.4-1/png/pngrutil.c ****       background.gray = 0;
 6666              		.loc 1 1944 25 is_stmt 0 view .LVU2046
 6667 01de 0FB64424 		movzbl	22(%rsp), %eax
 6667      16
 6668 01e3 C1E008   		sall	$8, %eax
 6669 01e6 01D0     		addl	%edx, %eax
 6670 01e8 66894424 		movw	%ax, 14(%rsp)
 6670      0E
 6671              	.L546:
1945:fltk-1.3.4-1/png/pngrutil.c ****    }
 6672              		.loc 1 1945 7 is_stmt 1 view .LVU2047
1945:fltk-1.3.4-1/png/pngrutil.c ****    }
 6673              		.loc 1 1945 23 is_stmt 0 view .LVU2048
 6674 01ed 31C0     		xorl	%eax, %eax
 6675 01ef 66894424 		movw	%ax, 16(%rsp)
 6675      10
 6676 01f4 E90BFFFF 		jmp	.L528
 6676      FF
 6677 01f9 0F1F8000 		.p2align 4,,10
 6677      000000
 6678              		.p2align 3
 6679              	.L525:
1925:fltk-1.3.4-1/png/pngrutil.c **** 
 6680              		.loc 1 1925 10 is_stmt 1 view .LVU2049
1925:fltk-1.3.4-1/png/pngrutil.c **** 
 6681              		.loc 1 1925 62 is_stmt 0 view .LVU2050
 6682 0200 31D2     		xorl	%edx, %edx
1925:fltk-1.3.4-1/png/pngrutil.c **** 
 6683              		.loc 1 1925 25 view .LVU2051
 6684 0202 C744240A 		movl	$0, 10(%rsp)
 6684      00000000 
1925:fltk-1.3.4-1/png/pngrutil.c **** 
 6685              		.loc 1 1925 62 view .LVU2052
 6686 020a 66895424 		movw	%dx, 14(%rsp)
 6686      0E
1927:fltk-1.3.4-1/png/pngrutil.c ****    }
 6687              		.loc 1 1927 7 is_stmt 1 view .LVU2053
 6688 020f EBDC     		jmp	.L546
 6689              	.L551:
1915:fltk-1.3.4-1/png/pngrutil.c ****             return;
 6690              		.loc 1 1915 13 view .LVU2054
 6691 0211 488D3500 		leaq	.LC30(%rip), %rsi
 6691      000000
 6692 0218 4889EF   		movq	%rbp, %rdi
 6693 021b E8000000 		call	png_chunk_benign_error@PLT
 6693      00
 6694              	.LVL739:
1916:fltk-1.3.4-1/png/pngrutil.c ****          }
 6695              		.loc 1 1916 13 view .LVU2055
 6696 0220 E961FEFF 		jmp	.L516
 6696      FF
 6697              	.L549:
1949:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6698              		.loc 1 1949 1 is_stmt 0 view .LVU2056
 6699 0225 E8000000 		call	__stack_chk_fail@PLT
 6699      00
 6700              	.LVL740:
 6701              	.L547:
1863:fltk-1.3.4-1/png/pngrutil.c **** 
 6702              		.loc 1 1863 7 is_stmt 1 view .LVU2057
 6703 022a 488D3500 		leaq	.LC12(%rip), %rsi
 6703      000000
 6704              	.LVL741:
1863:fltk-1.3.4-1/png/pngrutil.c **** 
 6705              		.loc 1 1863 7 is_stmt 0 view .LVU2058
 6706 0231 E8000000 		call	png_chunk_error@PLT
 6706      00
 6707              	.LVL742:
1863:fltk-1.3.4-1/png/pngrutil.c **** 
 6708              		.loc 1 1863 7 view .LVU2059
 6709              		.cfi_endproc
 6710              	.LFE66:
 6712              		.section	.text.png_handle_hIST,"ax",@progbits
 6713              		.p2align 4
 6714              		.globl	png_handle_hIST
 6716              	png_handle_hIST:
 6717              	.LVL743:
 6718              	.LFB67:
1955:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int num, i;
 6719              		.loc 1 1955 1 is_stmt 1 view -0
 6720              		.cfi_startproc
1955:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int num, i;
 6721              		.loc 1 1955 1 is_stmt 0 view .LVU2061
 6722 0000 F30F1EFA 		endbr64
 6723 0004 4156     		pushq	%r14
 6724              		.cfi_def_cfa_offset 16
 6725              		.cfi_offset 14, -16
 6726 0006 4155     		pushq	%r13
 6727              		.cfi_def_cfa_offset 24
 6728              		.cfi_offset 13, -24
 6729 0008 4989FD   		movq	%rdi, %r13
 6730 000b 4154     		pushq	%r12
 6731              		.cfi_def_cfa_offset 32
 6732              		.cfi_offset 12, -32
 6733 000d 55       		pushq	%rbp
 6734              		.cfi_def_cfa_offset 40
 6735              		.cfi_offset 6, -40
 6736 000e 53       		pushq	%rbx
 6737              		.cfi_def_cfa_offset 48
 6738              		.cfi_offset 3, -48
 6739 000f 4881EC10 		subq	$528, %rsp
 6739      020000
 6740              		.cfi_def_cfa_offset 576
1955:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int num, i;
 6741              		.loc 1 1955 1 view .LVU2062
 6742 0016 64488B04 		movq	%fs:40, %rax
 6742      25280000 
 6742      00
 6743 001f 48898424 		movq	%rax, 520(%rsp)
 6743      08020000 
 6744 0027 31C0     		xorl	%eax, %eax
1956:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_16 readbuf[PNG_MAX_PALETTE_LENGTH];
 6745              		.loc 1 1956 4 is_stmt 1 view .LVU2063
1957:fltk-1.3.4-1/png/pngrutil.c **** 
 6746              		.loc 1 1957 4 view .LVU2064
1959:fltk-1.3.4-1/png/pngrutil.c **** 
 6747              		.loc 1 1959 4 view .LVU2065
1961:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6748              		.loc 1 1961 4 view .LVU2066
1961:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6749              		.loc 1 1961 16 is_stmt 0 view .LVU2067
 6750 0029 8B872C01 		movl	300(%rdi), %eax
 6750      0000
1961:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6751              		.loc 1 1961 7 view .LVU2068
 6752 002f A801     		testb	$1, %al
 6753 0031 0F841F01 		je	.L571
 6753      0000
1964:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_PLTE) == 0)
 6754              		.loc 1 1964 50 view .LVU2069
 6755 0037 83E006   		andl	$6, %eax
 6756 003a 4889F5   		movq	%rsi, %rbp
 6757 003d 89D6     		movl	%edx, %esi
 6758              	.LVL744:
1964:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_PLTE) == 0)
 6759              		.loc 1 1964 9 is_stmt 1 view .LVU2070
1964:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->mode & PNG_HAVE_PLTE) == 0)
 6760              		.loc 1 1964 12 is_stmt 0 view .LVU2071
 6761 003f 83F802   		cmpl	$2, %eax
 6762 0042 0F85E000 		jne	.L572
 6762      0000
1972:fltk-1.3.4-1/png/pngrutil.c ****    {
 6763              		.loc 1 1972 9 is_stmt 1 view .LVU2072
1972:fltk-1.3.4-1/png/pngrutil.c ****    {
 6764              		.loc 1 1972 12 is_stmt 0 view .LVU2073
 6765 0048 4885ED   		testq	%rbp, %rbp
 6766 004b 740A     		je	.L556
1972:fltk-1.3.4-1/png/pngrutil.c ****    {
 6767              		.loc 1 1972 30 discriminator 1 view .LVU2074
 6768 004d F6450840 		testb	$64, 8(%rbp)
 6769 0051 0F85E900 		jne	.L573
 6769      0000
 6770              	.L556:
1979:fltk-1.3.4-1/png/pngrutil.c **** 
 6771              		.loc 1 1979 4 is_stmt 1 view .LVU2075
1979:fltk-1.3.4-1/png/pngrutil.c **** 
 6772              		.loc 1 1979 8 is_stmt 0 view .LVU2076
 6773 0057 89F0     		movl	%esi, %eax
1981:fltk-1.3.4-1/png/pngrutil.c ****    {
 6774              		.loc 1 1981 22 view .LVU2077
 6775 0059 410FB795 		movzwl	616(%r13), %edx
 6775      68020000 
 6776              	.LVL745:
1979:fltk-1.3.4-1/png/pngrutil.c **** 
 6777              		.loc 1 1979 8 view .LVU2078
 6778 0061 D1E8     		shrl	%eax
 6779              	.LVL746:
1981:fltk-1.3.4-1/png/pngrutil.c ****    {
 6780              		.loc 1 1981 4 is_stmt 1 view .LVU2079
1981:fltk-1.3.4-1/png/pngrutil.c ****    {
 6781              		.loc 1 1981 36 is_stmt 0 view .LVU2080
 6782 0063 39C2     		cmpl	%eax, %edx
 6783 0065 0F857D00 		jne	.L557
 6783      0000
 6784 006b 81FE0102 		cmpl	$513, %esi
 6784      0000
 6785 0071 7775     		ja	.L557
 6786              	.LVL747:
1988:fltk-1.3.4-1/png/pngrutil.c ****    {
 6787              		.loc 1 1988 16 is_stmt 1 view .LVU2081
1988:fltk-1.3.4-1/png/pngrutil.c ****    {
 6788              		.loc 1 1988 4 is_stmt 0 view .LVU2082
 6789 0073 85C0     		testl	%eax, %eax
 6790 0075 744C     		je	.L559
 6791 0077 83E801   		subl	$1, %eax
 6792              	.LVL748:
1988:fltk-1.3.4-1/png/pngrutil.c ****    {
 6793              		.loc 1 1988 4 view .LVU2083
 6794 007a 4989E6   		movq	%rsp, %r14
 6795 007d 488D9C24 		leaq	518(%rsp), %rbx
 6795      06020000 
 6796 0085 4C8D6444 		leaq	2(%rsp,%rax,2), %r12
 6796      02
 6797              	.LVL749:
 6798 008a 660F1F44 		.p2align 4,,10
 6798      0000
 6799              		.p2align 3
 6800              	.L560:
 6801              	.LBB314:
1990:fltk-1.3.4-1/png/pngrutil.c **** 
 6802              		.loc 1 1990 7 is_stmt 1 view .LVU2084
1992:fltk-1.3.4-1/png/pngrutil.c ****       readbuf[i] = png_get_uint_16(buf);
 6803              		.loc 1 1992 7 view .LVU2085
 6804              	.LBB315:
 6805              	.LBI315:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 6806              		.loc 1 187 1 view .LVU2086
 6807              	.LBB316:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6808              		.loc 1 189 4 view .LVU2087
 6809 0090 BA020000 		movl	$2, %edx
 6809      00
 6810 0095 4889DE   		movq	%rbx, %rsi
 6811 0098 4C89EF   		movq	%r13, %rdi
 6812 009b 4983C602 		addq	$2, %r14
 6813 009f E8000000 		call	png_crc_read.part.0
 6813      00
 6814              	.LVL750:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6815              		.loc 1 189 4 is_stmt 0 view .LVU2088
 6816              	.LBE316:
 6817              	.LBE315:
1993:fltk-1.3.4-1/png/pngrutil.c ****    }
 6818              		.loc 1 1993 7 is_stmt 1 view .LVU2089
1993:fltk-1.3.4-1/png/pngrutil.c ****    }
 6819              		.loc 1 1993 20 is_stmt 0 view .LVU2090
 6820 00a4 0FB68424 		movzbl	518(%rsp), %eax
 6820      06020000 
 6821 00ac 0FB69424 		movzbl	519(%rsp), %edx
 6821      07020000 
 6822 00b4 C1E008   		sall	$8, %eax
 6823 00b7 01D0     		addl	%edx, %eax
 6824 00b9 66418946 		movw	%ax, -2(%r14)
 6824      FE
 6825              	.LBE314:
1988:fltk-1.3.4-1/png/pngrutil.c ****    {
 6826              		.loc 1 1988 25 is_stmt 1 view .LVU2091
1988:fltk-1.3.4-1/png/pngrutil.c ****    {
 6827              		.loc 1 1988 16 view .LVU2092
1988:fltk-1.3.4-1/png/pngrutil.c ****    {
 6828              		.loc 1 1988 4 is_stmt 0 view .LVU2093
 6829 00be 4D39E6   		cmpq	%r12, %r14
 6830 00c1 75CD     		jne	.L560
 6831              	.L559:
1996:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6832              		.loc 1 1996 4 is_stmt 1 view .LVU2094
1996:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6833              		.loc 1 1996 8 is_stmt 0 view .LVU2095
 6834 00c3 31F6     		xorl	%esi, %esi
 6835 00c5 4C89EF   		movq	%r13, %rdi
 6836 00c8 E8000000 		call	png_crc_finish
 6836      00
 6837              	.LVL751:
1996:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6838              		.loc 1 1996 7 view .LVU2096
 6839 00cd 85C0     		testl	%eax, %eax
 6840 00cf 752E     		jne	.L552
1999:fltk-1.3.4-1/png/pngrutil.c **** }
 6841              		.loc 1 1999 4 is_stmt 1 view .LVU2097
 6842 00d1 4889E2   		movq	%rsp, %rdx
 6843 00d4 4889EE   		movq	%rbp, %rsi
 6844 00d7 4C89EF   		movq	%r13, %rdi
 6845 00da E8000000 		call	png_set_hIST@PLT
 6845      00
 6846              	.LVL752:
 6847 00df EB1E     		jmp	.L552
 6848              	.LVL753:
 6849              		.p2align 4,,10
 6850 00e1 0F1F8000 		.p2align 3
 6850      000000
 6851              	.L557:
1983:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 6852              		.loc 1 1983 7 view .LVU2098
 6853 00e8 4C89EF   		movq	%r13, %rdi
 6854              	.LVL754:
1983:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 6855              		.loc 1 1983 7 is_stmt 0 view .LVU2099
 6856 00eb E8000000 		call	png_crc_finish
 6856      00
 6857              	.LVL755:
1984:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6858              		.loc 1 1984 7 is_stmt 1 view .LVU2100
 6859 00f0 488D3500 		leaq	.LC11(%rip), %rsi
 6859      000000
 6860 00f7 4C89EF   		movq	%r13, %rdi
 6861 00fa E8000000 		call	png_chunk_benign_error@PLT
 6861      00
 6862              	.LVL756:
1985:fltk-1.3.4-1/png/pngrutil.c ****    }
 6863              		.loc 1 1985 7 view .LVU2101
 6864              	.L552:
2000:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6865              		.loc 1 2000 1 is_stmt 0 view .LVU2102
 6866 00ff 488B8424 		movq	520(%rsp), %rax
 6866      08020000 
 6867 0107 64483304 		xorq	%fs:40, %rax
 6867      25280000 
 6867      00
 6868 0110 7550     		jne	.L574
 6869 0112 4881C410 		addq	$528, %rsp
 6869      020000
 6870              		.cfi_remember_state
 6871              		.cfi_def_cfa_offset 48
 6872 0119 5B       		popq	%rbx
 6873              		.cfi_def_cfa_offset 40
 6874 011a 5D       		popq	%rbp
 6875              		.cfi_def_cfa_offset 32
 6876              	.LVL757:
2000:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6877              		.loc 1 2000 1 view .LVU2103
 6878 011b 415C     		popq	%r12
 6879              		.cfi_def_cfa_offset 24
 6880 011d 415D     		popq	%r13
 6881              		.cfi_def_cfa_offset 16
 6882              	.LVL758:
2000:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6883              		.loc 1 2000 1 view .LVU2104
 6884 011f 415E     		popq	%r14
 6885              		.cfi_def_cfa_offset 8
 6886 0121 C3       		ret
 6887              	.LVL759:
 6888              		.p2align 4,,10
 6889 0122 660F1F44 		.p2align 3
 6889      0000
 6890              	.L572:
 6891              		.cfi_restore_state
1967:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 6892              		.loc 1 1967 7 is_stmt 1 view .LVU2105
 6893 0128 E8000000 		call	png_crc_finish
 6893      00
 6894              	.LVL760:
1968:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6895              		.loc 1 1968 7 view .LVU2106
 6896 012d 488D3500 		leaq	.LC10(%rip), %rsi
 6896      000000
 6897 0134 4C89EF   		movq	%r13, %rdi
 6898 0137 E8000000 		call	png_chunk_benign_error@PLT
 6898      00
 6899              	.LVL761:
1969:fltk-1.3.4-1/png/pngrutil.c ****    }
 6900              		.loc 1 1969 7 view .LVU2107
 6901 013c EBC1     		jmp	.L552
 6902              	.LVL762:
 6903 013e 6690     		.p2align 4,,10
 6904              		.p2align 3
 6905              	.L573:
1974:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 6906              		.loc 1 1974 7 view .LVU2108
 6907 0140 E8000000 		call	png_crc_finish
 6907      00
 6908              	.LVL763:
1975:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6909              		.loc 1 1975 7 view .LVU2109
 6910 0145 488D3500 		leaq	.LC13(%rip), %rsi
 6910      000000
 6911 014c 4C89EF   		movq	%r13, %rdi
 6912 014f E8000000 		call	png_chunk_benign_error@PLT
 6912      00
 6913              	.LVL764:
1976:fltk-1.3.4-1/png/pngrutil.c ****    }
 6914              		.loc 1 1976 7 view .LVU2110
 6915 0154 EBA9     		jmp	.L552
 6916              	.LVL765:
 6917              	.L571:
1962:fltk-1.3.4-1/png/pngrutil.c **** 
 6918              		.loc 1 1962 7 view .LVU2111
 6919 0156 488D3500 		leaq	.LC12(%rip), %rsi
 6919      000000
 6920              	.LVL766:
1962:fltk-1.3.4-1/png/pngrutil.c **** 
 6921              		.loc 1 1962 7 is_stmt 0 view .LVU2112
 6922 015d E8000000 		call	png_chunk_error@PLT
 6922      00
 6923              	.LVL767:
 6924              	.L574:
2000:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6925              		.loc 1 2000 1 view .LVU2113
 6926 0162 E8000000 		call	__stack_chk_fail@PLT
 6926      00
 6927              	.LVL768:
 6928              		.cfi_endproc
 6929              	.LFE67:
 6931              		.section	.text.png_handle_pHYs,"ax",@progbits
 6932              		.p2align 4
 6933              		.globl	png_handle_pHYs
 6935              	png_handle_pHYs:
 6936              	.LVL769:
 6937              	.LFB68:
2006:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
 6938              		.loc 1 2006 1 is_stmt 1 view -0
 6939              		.cfi_startproc
2006:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
 6940              		.loc 1 2006 1 is_stmt 0 view .LVU2115
 6941 0000 F30F1EFA 		endbr64
 6942 0004 4154     		pushq	%r12
 6943              		.cfi_def_cfa_offset 16
 6944              		.cfi_offset 12, -16
 6945 0006 55       		pushq	%rbp
 6946              		.cfi_def_cfa_offset 24
 6947              		.cfi_offset 6, -24
 6948 0007 4889FD   		movq	%rdi, %rbp
 6949 000a 4883EC28 		subq	$40, %rsp
 6950              		.cfi_def_cfa_offset 64
2006:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
 6951              		.loc 1 2006 1 view .LVU2116
 6952 000e 64488B04 		movq	%fs:40, %rax
 6952      25280000 
 6952      00
 6953 0017 48894424 		movq	%rax, 24(%rsp)
 6953      18
 6954 001c 31C0     		xorl	%eax, %eax
2007:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 res_x, res_y;
 6955              		.loc 1 2007 4 is_stmt 1 view .LVU2117
2008:fltk-1.3.4-1/png/pngrutil.c ****    int unit_type;
 6956              		.loc 1 2008 4 view .LVU2118
2009:fltk-1.3.4-1/png/pngrutil.c **** 
 6957              		.loc 1 2009 4 view .LVU2119
2011:fltk-1.3.4-1/png/pngrutil.c **** 
 6958              		.loc 1 2011 4 view .LVU2120
2013:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6959              		.loc 1 2013 4 view .LVU2121
2013:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6960              		.loc 1 2013 16 is_stmt 0 view .LVU2122
 6961 001e 8B872C01 		movl	300(%rdi), %eax
 6961      0000
2013:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 6962              		.loc 1 2013 7 view .LVU2123
 6963 0024 A801     		testb	$1, %al
 6964 0026 0F841D01 		je	.L590
 6964      0000
 6965 002c 4989F4   		movq	%rsi, %r12
 6966 002f 89D6     		movl	%edx, %esi
 6967              	.LVL770:
2016:fltk-1.3.4-1/png/pngrutil.c ****    {
 6968              		.loc 1 2016 9 is_stmt 1 view .LVU2124
2016:fltk-1.3.4-1/png/pngrutil.c ****    {
 6969              		.loc 1 2016 12 is_stmt 0 view .LVU2125
 6970 0031 A804     		testb	$4, %al
 6971 0033 0F85D700 		jne	.L591
 6971      0000
2023:fltk-1.3.4-1/png/pngrutil.c ****    {
 6972              		.loc 1 2023 9 is_stmt 1 view .LVU2126
2023:fltk-1.3.4-1/png/pngrutil.c ****    {
 6973              		.loc 1 2023 12 is_stmt 0 view .LVU2127
 6974 0039 4D85E4   		testq	%r12, %r12
 6975 003c 740C     		je	.L579
2023:fltk-1.3.4-1/png/pngrutil.c ****    {
 6976              		.loc 1 2023 30 discriminator 1 view .LVU2128
 6977 003e 41F64424 		testb	$-128, 8(%r12)
 6977      0880
 6978 0044 0F85E600 		jne	.L592
 6978      0000
 6979              	.L579:
2030:fltk-1.3.4-1/png/pngrutil.c ****    {
 6980              		.loc 1 2030 4 is_stmt 1 view .LVU2129
2030:fltk-1.3.4-1/png/pngrutil.c ****    {
 6981              		.loc 1 2030 7 is_stmt 0 view .LVU2130
 6982 004a 83FE09   		cmpl	$9, %esi
 6983 004d 7439     		je	.L580
2032:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 6984              		.loc 1 2032 7 is_stmt 1 view .LVU2131
 6985 004f 4889EF   		movq	%rbp, %rdi
 6986              	.LVL771:
2032:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 6987              		.loc 1 2032 7 is_stmt 0 view .LVU2132
 6988 0052 E8000000 		call	png_crc_finish
 6988      00
 6989              	.LVL772:
2033:fltk-1.3.4-1/png/pngrutil.c ****       return;
 6990              		.loc 1 2033 7 is_stmt 1 view .LVU2133
 6991 0057 488D3500 		leaq	.LC11(%rip), %rsi
 6991      000000
 6992 005e 4889EF   		movq	%rbp, %rdi
 6993 0061 E8000000 		call	png_chunk_benign_error@PLT
 6993      00
 6994              	.LVL773:
2034:fltk-1.3.4-1/png/pngrutil.c ****    }
 6995              		.loc 1 2034 7 view .LVU2134
 6996              	.L575:
2046:fltk-1.3.4-1/png/pngrutil.c **** #endif
 6997              		.loc 1 2046 1 is_stmt 0 view .LVU2135
 6998 0066 488B4424 		movq	24(%rsp), %rax
 6998      18
 6999 006b 64483304 		xorq	%fs:40, %rax
 6999      25280000 
 6999      00
 7000 0074 0F85DB00 		jne	.L593
 7000      0000
 7001 007a 4883C428 		addq	$40, %rsp
 7002              		.cfi_remember_state
 7003              		.cfi_def_cfa_offset 24
 7004 007e 5D       		popq	%rbp
 7005              		.cfi_def_cfa_offset 16
 7006              	.LVL774:
2046:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7007              		.loc 1 2046 1 view .LVU2136
 7008 007f 415C     		popq	%r12
 7009              		.cfi_def_cfa_offset 8
 7010              	.LVL775:
2046:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7011              		.loc 1 2046 1 view .LVU2137
 7012 0081 C3       		ret
 7013              	.LVL776:
 7014              		.p2align 4,,10
 7015 0082 660F1F44 		.p2align 3
 7015      0000
 7016              	.L580:
 7017              		.cfi_restore_state
2037:fltk-1.3.4-1/png/pngrutil.c **** 
 7018              		.loc 1 2037 4 is_stmt 1 view .LVU2138
 7019              	.LBB317:
 7020              	.LBI317:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 7021              		.loc 1 187 1 view .LVU2139
 7022              	.LBB318:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7023              		.loc 1 189 4 view .LVU2140
 7024 0088 488D7424 		leaq	15(%rsp), %rsi
 7024      0F
 7025              	.LVL777:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7026              		.loc 1 189 4 is_stmt 0 view .LVU2141
 7027 008d 4889EF   		movq	%rbp, %rdi
 7028              	.LVL778:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7029              		.loc 1 189 4 view .LVU2142
 7030 0090 BA090000 		movl	$9, %edx
 7030      00
 7031              	.LVL779:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7032              		.loc 1 189 4 view .LVU2143
 7033 0095 E8000000 		call	png_crc_read.part.0
 7033      00
 7034              	.LVL780:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7035              		.loc 1 189 4 view .LVU2144
 7036              	.LBE318:
 7037              	.LBE317:
2039:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7038              		.loc 1 2039 4 is_stmt 1 view .LVU2145
2039:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7039              		.loc 1 2039 8 is_stmt 0 view .LVU2146
 7040 009a 31F6     		xorl	%esi, %esi
 7041 009c 4889EF   		movq	%rbp, %rdi
 7042 009f E8000000 		call	png_crc_finish
 7042      00
 7043              	.LVL781:
2039:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7044              		.loc 1 2039 7 view .LVU2147
 7045 00a4 85C0     		testl	%eax, %eax
 7046 00a6 75BE     		jne	.L575
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7047              		.loc 1 2042 4 is_stmt 1 view .LVU2148
 7048              	.LVL782:
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7049              		.loc 1 2043 4 view .LVU2149
2044:fltk-1.3.4-1/png/pngrutil.c ****    png_set_pHYs(png_ptr, info_ptr, res_x, res_y, unit_type);
 7050              		.loc 1 2044 4 view .LVU2150
2045:fltk-1.3.4-1/png/pngrutil.c **** }
 7051              		.loc 1 2045 4 view .LVU2151
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7052              		.loc 1 2043 12 is_stmt 0 view .LVU2152
 7053 00a8 0FB64C24 		movzbl	19(%rsp), %ecx
 7053      13
 7054              	.LVL783:
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7055              		.loc 1 2042 12 view .LVU2153
 7056 00ad 0FB65424 		movzbl	15(%rsp), %edx
 7056      0F
 7057              	.LVL784:
2045:fltk-1.3.4-1/png/pngrutil.c **** }
 7058              		.loc 1 2045 4 view .LVU2154
 7059 00b2 4C89E6   		movq	%r12, %rsi
 7060 00b5 4889EF   		movq	%rbp, %rdi
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7061              		.loc 1 2043 12 view .LVU2155
 7062 00b8 440FB64C 		movzbl	22(%rsp), %r9d
 7062      2416
2045:fltk-1.3.4-1/png/pngrutil.c **** }
 7063              		.loc 1 2045 4 view .LVU2156
 7064 00be 440FB644 		movzbl	23(%rsp), %r8d
 7064      2417
 7065              	.LVL785:
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7066              		.loc 1 2043 12 view .LVU2157
 7067 00c4 89C8     		movl	%ecx, %eax
 7068 00c6 0FB64C24 		movzbl	20(%rsp), %ecx
 7068      14
 7069              	.LVL786:
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7070              		.loc 1 2043 12 view .LVU2158
 7071 00cb C1E018   		sall	$24, %eax
 7072              	.LVL787:
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7073              		.loc 1 2043 12 view .LVU2159
 7074 00ce C1E110   		sall	$16, %ecx
 7075 00d1 01C1     		addl	%eax, %ecx
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7076              		.loc 1 2042 12 view .LVU2160
 7077 00d3 0FB64424 		movzbl	18(%rsp), %eax
 7077      12
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7078              		.loc 1 2043 10 view .LVU2161
 7079 00d8 4401C9   		addl	%r9d, %ecx
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7080              		.loc 1 2043 12 view .LVU2162
 7081 00db 440FB64C 		movzbl	21(%rsp), %r9d
 7081      2415
 7082              	.LVL788:
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7083              		.loc 1 2043 12 view .LVU2163
 7084 00e1 41C1E108 		sall	$8, %r9d
 7085              	.LVL789:
2043:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7086              		.loc 1 2043 10 view .LVU2164
 7087 00e5 4101C9   		addl	%ecx, %r9d
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7088              		.loc 1 2042 12 view .LVU2165
 7089 00e8 89D1     		movl	%edx, %ecx
 7090 00ea 0FB65424 		movzbl	16(%rsp), %edx
 7090      10
 7091              	.LVL790:
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7092              		.loc 1 2042 12 view .LVU2166
 7093 00ef C1E118   		sall	$24, %ecx
 7094              	.LVL791:
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7095              		.loc 1 2042 12 view .LVU2167
 7096 00f2 C1E210   		sall	$16, %edx
 7097 00f5 01CA     		addl	%ecx, %edx
2045:fltk-1.3.4-1/png/pngrutil.c **** }
 7098              		.loc 1 2045 4 view .LVU2168
 7099 00f7 4489C9   		movl	%r9d, %ecx
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7100              		.loc 1 2042 10 view .LVU2169
 7101 00fa 01D0     		addl	%edx, %eax
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7102              		.loc 1 2042 12 view .LVU2170
 7103 00fc 0FB65424 		movzbl	17(%rsp), %edx
 7103      11
 7104              	.LVL792:
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7105              		.loc 1 2042 12 view .LVU2171
 7106 0101 C1E208   		sall	$8, %edx
 7107              	.LVL793:
2042:fltk-1.3.4-1/png/pngrutil.c ****    res_y = png_get_uint_32(buf + 4);
 7108              		.loc 1 2042 10 view .LVU2172
 7109 0104 01C2     		addl	%eax, %edx
2045:fltk-1.3.4-1/png/pngrutil.c **** }
 7110              		.loc 1 2045 4 view .LVU2173
 7111 0106 E8000000 		call	png_set_pHYs@PLT
 7111      00
 7112              	.LVL794:
2045:fltk-1.3.4-1/png/pngrutil.c **** }
 7113              		.loc 1 2045 4 view .LVU2174
 7114 010b E956FFFF 		jmp	.L575
 7114      FF
 7115              	.LVL795:
 7116              		.p2align 4,,10
 7117              		.p2align 3
 7118              	.L591:
2018:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 7119              		.loc 1 2018 7 is_stmt 1 view .LVU2175
 7120 0110 E8000000 		call	png_crc_finish
 7120      00
 7121              	.LVL796:
2019:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7122              		.loc 1 2019 7 view .LVU2176
 7123 0115 488D3500 		leaq	.LC10(%rip), %rsi
 7123      000000
 7124 011c 4889EF   		movq	%rbp, %rdi
 7125 011f E8000000 		call	png_chunk_benign_error@PLT
 7125      00
 7126              	.LVL797:
2020:fltk-1.3.4-1/png/pngrutil.c ****    }
 7127              		.loc 1 2020 7 view .LVU2177
 7128 0124 E93DFFFF 		jmp	.L575
 7128      FF
 7129              	.LVL798:
 7130 0129 0F1F8000 		.p2align 4,,10
 7130      000000
 7131              		.p2align 3
 7132              	.L592:
2025:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 7133              		.loc 1 2025 7 view .LVU2178
 7134 0130 E8000000 		call	png_crc_finish
 7134      00
 7135              	.LVL799:
2026:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7136              		.loc 1 2026 7 view .LVU2179
 7137 0135 488D3500 		leaq	.LC13(%rip), %rsi
 7137      000000
 7138 013c 4889EF   		movq	%rbp, %rdi
 7139 013f E8000000 		call	png_chunk_benign_error@PLT
 7139      00
 7140              	.LVL800:
2027:fltk-1.3.4-1/png/pngrutil.c ****    }
 7141              		.loc 1 2027 7 view .LVU2180
 7142 0144 E91DFFFF 		jmp	.L575
 7142      FF
 7143              	.LVL801:
 7144              	.L590:
2014:fltk-1.3.4-1/png/pngrutil.c **** 
 7145              		.loc 1 2014 7 view .LVU2181
 7146 0149 488D3500 		leaq	.LC12(%rip), %rsi
 7146      000000
 7147              	.LVL802:
2014:fltk-1.3.4-1/png/pngrutil.c **** 
 7148              		.loc 1 2014 7 is_stmt 0 view .LVU2182
 7149 0150 E8000000 		call	png_chunk_error@PLT
 7149      00
 7150              	.LVL803:
 7151              	.L593:
2046:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7152              		.loc 1 2046 1 view .LVU2183
 7153 0155 E8000000 		call	__stack_chk_fail@PLT
 7153      00
 7154              	.LVL804:
 7155              		.cfi_endproc
 7156              	.LFE68:
 7158              		.section	.text.png_handle_oFFs,"ax",@progbits
 7159              		.p2align 4
 7160              		.globl	png_handle_oFFs
 7162              	png_handle_oFFs:
 7163              	.LVL805:
 7164              	.LFB69:
2052:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
 7165              		.loc 1 2052 1 is_stmt 1 view -0
 7166              		.cfi_startproc
2052:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
 7167              		.loc 1 2052 1 is_stmt 0 view .LVU2185
 7168 0000 F30F1EFA 		endbr64
 7169 0004 4154     		pushq	%r12
 7170              		.cfi_def_cfa_offset 16
 7171              		.cfi_offset 12, -16
 7172 0006 55       		pushq	%rbp
 7173              		.cfi_def_cfa_offset 24
 7174              		.cfi_offset 6, -24
 7175 0007 4889FD   		movq	%rdi, %rbp
 7176 000a 4883EC28 		subq	$40, %rsp
 7177              		.cfi_def_cfa_offset 64
2052:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[9];
 7178              		.loc 1 2052 1 view .LVU2186
 7179 000e 64488B04 		movq	%fs:40, %rax
 7179      25280000 
 7179      00
 7180 0017 48894424 		movq	%rax, 24(%rsp)
 7180      18
 7181 001c 31C0     		xorl	%eax, %eax
2053:fltk-1.3.4-1/png/pngrutil.c ****    png_int_32 offset_x, offset_y;
 7182              		.loc 1 2053 4 is_stmt 1 view .LVU2187
2054:fltk-1.3.4-1/png/pngrutil.c ****    int unit_type;
 7183              		.loc 1 2054 4 view .LVU2188
2055:fltk-1.3.4-1/png/pngrutil.c **** 
 7184              		.loc 1 2055 4 view .LVU2189
2057:fltk-1.3.4-1/png/pngrutil.c **** 
 7185              		.loc 1 2057 4 view .LVU2190
2059:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7186              		.loc 1 2059 4 view .LVU2191
2059:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7187              		.loc 1 2059 16 is_stmt 0 view .LVU2192
 7188 001e 8B872C01 		movl	300(%rdi), %eax
 7188      0000
2059:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7189              		.loc 1 2059 7 view .LVU2193
 7190 0024 A801     		testb	$1, %al
 7191 0026 0F841D01 		je	.L609
 7191      0000
 7192 002c 4989F4   		movq	%rsi, %r12
 7193 002f 89D6     		movl	%edx, %esi
 7194              	.LVL806:
2062:fltk-1.3.4-1/png/pngrutil.c ****    {
 7195              		.loc 1 2062 9 is_stmt 1 view .LVU2194
2062:fltk-1.3.4-1/png/pngrutil.c ****    {
 7196              		.loc 1 2062 12 is_stmt 0 view .LVU2195
 7197 0031 A804     		testb	$4, %al
 7198 0033 0F85D700 		jne	.L610
 7198      0000
2069:fltk-1.3.4-1/png/pngrutil.c ****    {
 7199              		.loc 1 2069 9 is_stmt 1 view .LVU2196
2069:fltk-1.3.4-1/png/pngrutil.c ****    {
 7200              		.loc 1 2069 12 is_stmt 0 view .LVU2197
 7201 0039 4D85E4   		testq	%r12, %r12
 7202 003c 740C     		je	.L598
2069:fltk-1.3.4-1/png/pngrutil.c ****    {
 7203              		.loc 1 2069 30 discriminator 1 view .LVU2198
 7204 003e 41F64424 		testb	$1, 9(%r12)
 7204      0901
 7205 0044 0F85E600 		jne	.L611
 7205      0000
 7206              	.L598:
2076:fltk-1.3.4-1/png/pngrutil.c ****    {
 7207              		.loc 1 2076 4 is_stmt 1 view .LVU2199
2076:fltk-1.3.4-1/png/pngrutil.c ****    {
 7208              		.loc 1 2076 7 is_stmt 0 view .LVU2200
 7209 004a 83FE09   		cmpl	$9, %esi
 7210 004d 7439     		je	.L599
2078:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 7211              		.loc 1 2078 7 is_stmt 1 view .LVU2201
 7212 004f 4889EF   		movq	%rbp, %rdi
 7213              	.LVL807:
2078:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 7214              		.loc 1 2078 7 is_stmt 0 view .LVU2202
 7215 0052 E8000000 		call	png_crc_finish
 7215      00
 7216              	.LVL808:
2079:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7217              		.loc 1 2079 7 is_stmt 1 view .LVU2203
 7218 0057 488D3500 		leaq	.LC11(%rip), %rsi
 7218      000000
 7219 005e 4889EF   		movq	%rbp, %rdi
 7220 0061 E8000000 		call	png_chunk_benign_error@PLT
 7220      00
 7221              	.LVL809:
2080:fltk-1.3.4-1/png/pngrutil.c ****    }
 7222              		.loc 1 2080 7 view .LVU2204
 7223              	.L594:
2092:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7224              		.loc 1 2092 1 is_stmt 0 view .LVU2205
 7225 0066 488B4424 		movq	24(%rsp), %rax
 7225      18
 7226 006b 64483304 		xorq	%fs:40, %rax
 7226      25280000 
 7226      00
 7227 0074 0F85DB00 		jne	.L612
 7227      0000
 7228 007a 4883C428 		addq	$40, %rsp
 7229              		.cfi_remember_state
 7230              		.cfi_def_cfa_offset 24
 7231 007e 5D       		popq	%rbp
 7232              		.cfi_def_cfa_offset 16
 7233              	.LVL810:
2092:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7234              		.loc 1 2092 1 view .LVU2206
 7235 007f 415C     		popq	%r12
 7236              		.cfi_def_cfa_offset 8
 7237              	.LVL811:
2092:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7238              		.loc 1 2092 1 view .LVU2207
 7239 0081 C3       		ret
 7240              	.LVL812:
 7241              		.p2align 4,,10
 7242 0082 660F1F44 		.p2align 3
 7242      0000
 7243              	.L599:
 7244              		.cfi_restore_state
2083:fltk-1.3.4-1/png/pngrutil.c **** 
 7245              		.loc 1 2083 4 is_stmt 1 view .LVU2208
 7246              	.LBB319:
 7247              	.LBI319:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 7248              		.loc 1 187 1 view .LVU2209
 7249              	.LBB320:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7250              		.loc 1 189 4 view .LVU2210
 7251 0088 488D7424 		leaq	15(%rsp), %rsi
 7251      0F
 7252              	.LVL813:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7253              		.loc 1 189 4 is_stmt 0 view .LVU2211
 7254 008d 4889EF   		movq	%rbp, %rdi
 7255              	.LVL814:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7256              		.loc 1 189 4 view .LVU2212
 7257 0090 BA090000 		movl	$9, %edx
 7257      00
 7258              	.LVL815:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7259              		.loc 1 189 4 view .LVU2213
 7260 0095 E8000000 		call	png_crc_read.part.0
 7260      00
 7261              	.LVL816:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7262              		.loc 1 189 4 view .LVU2214
 7263              	.LBE320:
 7264              	.LBE319:
2085:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7265              		.loc 1 2085 4 is_stmt 1 view .LVU2215
2085:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7266              		.loc 1 2085 8 is_stmt 0 view .LVU2216
 7267 009a 31F6     		xorl	%esi, %esi
 7268 009c 4889EF   		movq	%rbp, %rdi
 7269 009f E8000000 		call	png_crc_finish
 7269      00
 7270              	.LVL817:
2085:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7271              		.loc 1 2085 7 view .LVU2217
 7272 00a4 85C0     		testl	%eax, %eax
 7273 00a6 75BE     		jne	.L594
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7274              		.loc 1 2088 4 is_stmt 1 view .LVU2218
 7275              	.LVL818:
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7276              		.loc 1 2089 4 view .LVU2219
2090:fltk-1.3.4-1/png/pngrutil.c ****    png_set_oFFs(png_ptr, info_ptr, offset_x, offset_y, unit_type);
 7277              		.loc 1 2090 4 view .LVU2220
2091:fltk-1.3.4-1/png/pngrutil.c **** }
 7278              		.loc 1 2091 4 view .LVU2221
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7279              		.loc 1 2089 15 is_stmt 0 view .LVU2222
 7280 00a8 0FB64C24 		movzbl	19(%rsp), %ecx
 7280      13
 7281              	.LVL819:
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7282              		.loc 1 2088 15 view .LVU2223
 7283 00ad 0FB65424 		movzbl	15(%rsp), %edx
 7283      0F
 7284              	.LVL820:
2091:fltk-1.3.4-1/png/pngrutil.c **** }
 7285              		.loc 1 2091 4 view .LVU2224
 7286 00b2 4C89E6   		movq	%r12, %rsi
 7287 00b5 4889EF   		movq	%rbp, %rdi
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7288              		.loc 1 2089 15 view .LVU2225
 7289 00b8 440FB64C 		movzbl	22(%rsp), %r9d
 7289      2416
2091:fltk-1.3.4-1/png/pngrutil.c **** }
 7290              		.loc 1 2091 4 view .LVU2226
 7291 00be 440FB644 		movzbl	23(%rsp), %r8d
 7291      2417
 7292              	.LVL821:
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7293              		.loc 1 2089 15 view .LVU2227
 7294 00c4 89C8     		movl	%ecx, %eax
 7295 00c6 0FB64C24 		movzbl	20(%rsp), %ecx
 7295      14
 7296              	.LVL822:
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7297              		.loc 1 2089 15 view .LVU2228
 7298 00cb C1E018   		sall	$24, %eax
 7299              	.LVL823:
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7300              		.loc 1 2089 15 view .LVU2229
 7301 00ce C1E110   		sall	$16, %ecx
 7302 00d1 01C1     		addl	%eax, %ecx
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7303              		.loc 1 2088 15 view .LVU2230
 7304 00d3 0FB64424 		movzbl	18(%rsp), %eax
 7304      12
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7305              		.loc 1 2089 15 view .LVU2231
 7306 00d8 4401C9   		addl	%r9d, %ecx
 7307 00db 440FB64C 		movzbl	21(%rsp), %r9d
 7307      2415
 7308              	.LVL824:
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7309              		.loc 1 2089 15 view .LVU2232
 7310 00e1 41C1E108 		sall	$8, %r9d
 7311              	.LVL825:
2089:fltk-1.3.4-1/png/pngrutil.c ****    unit_type = buf[8];
 7312              		.loc 1 2089 15 view .LVU2233
 7313 00e5 4101C9   		addl	%ecx, %r9d
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7314              		.loc 1 2088 15 view .LVU2234
 7315 00e8 89D1     		movl	%edx, %ecx
 7316 00ea 0FB65424 		movzbl	16(%rsp), %edx
 7316      10
 7317              	.LVL826:
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7318              		.loc 1 2088 15 view .LVU2235
 7319 00ef C1E118   		sall	$24, %ecx
 7320              	.LVL827:
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7321              		.loc 1 2088 15 view .LVU2236
 7322 00f2 C1E210   		sall	$16, %edx
 7323 00f5 01CA     		addl	%ecx, %edx
2091:fltk-1.3.4-1/png/pngrutil.c **** }
 7324              		.loc 1 2091 4 view .LVU2237
 7325 00f7 4489C9   		movl	%r9d, %ecx
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7326              		.loc 1 2088 15 view .LVU2238
 7327 00fa 01D0     		addl	%edx, %eax
 7328 00fc 0FB65424 		movzbl	17(%rsp), %edx
 7328      11
 7329              	.LVL828:
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7330              		.loc 1 2088 15 view .LVU2239
 7331 0101 C1E208   		sall	$8, %edx
 7332              	.LVL829:
2088:fltk-1.3.4-1/png/pngrutil.c ****    offset_y = png_get_int_32(buf + 4);
 7333              		.loc 1 2088 15 view .LVU2240
 7334 0104 01C2     		addl	%eax, %edx
2091:fltk-1.3.4-1/png/pngrutil.c **** }
 7335              		.loc 1 2091 4 view .LVU2241
 7336 0106 E8000000 		call	png_set_oFFs@PLT
 7336      00
 7337              	.LVL830:
2091:fltk-1.3.4-1/png/pngrutil.c **** }
 7338              		.loc 1 2091 4 view .LVU2242
 7339 010b E956FFFF 		jmp	.L594
 7339      FF
 7340              	.LVL831:
 7341              		.p2align 4,,10
 7342              		.p2align 3
 7343              	.L610:
2064:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 7344              		.loc 1 2064 7 is_stmt 1 view .LVU2243
 7345 0110 E8000000 		call	png_crc_finish
 7345      00
 7346              	.LVL832:
2065:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7347              		.loc 1 2065 7 view .LVU2244
 7348 0115 488D3500 		leaq	.LC10(%rip), %rsi
 7348      000000
 7349 011c 4889EF   		movq	%rbp, %rdi
 7350 011f E8000000 		call	png_chunk_benign_error@PLT
 7350      00
 7351              	.LVL833:
2066:fltk-1.3.4-1/png/pngrutil.c ****    }
 7352              		.loc 1 2066 7 view .LVU2245
 7353 0124 E93DFFFF 		jmp	.L594
 7353      FF
 7354              	.LVL834:
 7355 0129 0F1F8000 		.p2align 4,,10
 7355      000000
 7356              		.p2align 3
 7357              	.L611:
2071:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 7358              		.loc 1 2071 7 view .LVU2246
 7359 0130 E8000000 		call	png_crc_finish
 7359      00
 7360              	.LVL835:
2072:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7361              		.loc 1 2072 7 view .LVU2247
 7362 0135 488D3500 		leaq	.LC13(%rip), %rsi
 7362      000000
 7363 013c 4889EF   		movq	%rbp, %rdi
 7364 013f E8000000 		call	png_chunk_benign_error@PLT
 7364      00
 7365              	.LVL836:
2073:fltk-1.3.4-1/png/pngrutil.c ****    }
 7366              		.loc 1 2073 7 view .LVU2248
 7367 0144 E91DFFFF 		jmp	.L594
 7367      FF
 7368              	.LVL837:
 7369              	.L609:
2060:fltk-1.3.4-1/png/pngrutil.c **** 
 7370              		.loc 1 2060 7 view .LVU2249
 7371 0149 488D3500 		leaq	.LC12(%rip), %rsi
 7371      000000
 7372              	.LVL838:
2060:fltk-1.3.4-1/png/pngrutil.c **** 
 7373              		.loc 1 2060 7 is_stmt 0 view .LVU2250
 7374 0150 E8000000 		call	png_chunk_error@PLT
 7374      00
 7375              	.LVL839:
 7376              	.L612:
2092:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7377              		.loc 1 2092 1 view .LVU2251
 7378 0155 E8000000 		call	__stack_chk_fail@PLT
 7378      00
 7379              	.LVL840:
 7380              		.cfi_endproc
 7381              	.LFE69:
 7383              		.section	.rodata.png_handle_pCAL.str1.1,"aMS",@progbits,1
 7384              	.LC31:
 7385 0000 696E7661 		.string	"invalid parameter count"
 7385      6C696420 
 7385      70617261 
 7385      6D657465 
 7385      7220636F 
 7386              	.LC32:
 7387 0018 756E7265 		.string	"unrecognized equation type"
 7387      636F676E 
 7387      697A6564 
 7387      20657175 
 7387      6174696F 
 7388              	.LC33:
 7389 0033 696E7661 		.string	"invalid data"
 7389      6C696420 
 7389      64617461 
 7389      00
 7390              		.section	.text.png_handle_pCAL,"ax",@progbits
 7391              		.p2align 4
 7392              		.globl	png_handle_pCAL
 7394              	png_handle_pCAL:
 7395              	.LVL841:
 7396              	.LFB70:
2099:fltk-1.3.4-1/png/pngrutil.c ****    png_int_32 X0, X1;
 7397              		.loc 1 2099 1 is_stmt 1 view -0
 7398              		.cfi_startproc
2099:fltk-1.3.4-1/png/pngrutil.c ****    png_int_32 X0, X1;
 7399              		.loc 1 2099 1 is_stmt 0 view .LVU2253
 7400 0000 F30F1EFA 		endbr64
2100:fltk-1.3.4-1/png/pngrutil.c ****    png_byte type, nparams;
 7401              		.loc 1 2100 4 is_stmt 1 view .LVU2254
2101:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer, buf, units, endptr;
 7402              		.loc 1 2101 4 view .LVU2255
2102:fltk-1.3.4-1/png/pngrutil.c ****    png_charpp params;
 7403              		.loc 1 2102 4 view .LVU2256
2103:fltk-1.3.4-1/png/pngrutil.c ****    int i;
 7404              		.loc 1 2103 4 view .LVU2257
2104:fltk-1.3.4-1/png/pngrutil.c **** 
 7405              		.loc 1 2104 4 view .LVU2258
2106:fltk-1.3.4-1/png/pngrutil.c **** 
 7406              		.loc 1 2106 4 view .LVU2259
2108:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7407              		.loc 1 2108 4 view .LVU2260
2099:fltk-1.3.4-1/png/pngrutil.c ****    png_int_32 X0, X1;
 7408              		.loc 1 2099 1 is_stmt 0 view .LVU2261
 7409 0004 4157     		pushq	%r15
 7410              		.cfi_def_cfa_offset 16
 7411              		.cfi_offset 15, -16
 7412 0006 4156     		pushq	%r14
 7413              		.cfi_def_cfa_offset 24
 7414              		.cfi_offset 14, -24
 7415 0008 4989FE   		movq	%rdi, %r14
 7416 000b 4155     		pushq	%r13
 7417              		.cfi_def_cfa_offset 32
 7418              		.cfi_offset 13, -32
 7419 000d 4154     		pushq	%r12
 7420              		.cfi_def_cfa_offset 40
 7421              		.cfi_offset 12, -40
 7422 000f 55       		pushq	%rbp
 7423              		.cfi_def_cfa_offset 48
 7424              		.cfi_offset 6, -48
 7425 0010 53       		pushq	%rbx
 7426              		.cfi_def_cfa_offset 56
 7427              		.cfi_offset 3, -56
 7428 0011 4883EC28 		subq	$40, %rsp
 7429              		.cfi_def_cfa_offset 96
2108:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7430              		.loc 1 2108 16 view .LVU2262
 7431 0015 8B872C01 		movl	300(%rdi), %eax
 7431      0000
2108:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7432              		.loc 1 2108 7 view .LVU2263
 7433 001b A801     		testb	$1, %al
 7434 001d 0F84C402 		je	.L666
 7434      0000
 7435 0023 89D5     		movl	%edx, %ebp
2111:fltk-1.3.4-1/png/pngrutil.c ****    {
 7436              		.loc 1 2111 9 is_stmt 1 view .LVU2264
2111:fltk-1.3.4-1/png/pngrutil.c ****    {
 7437              		.loc 1 2111 12 is_stmt 0 view .LVU2265
 7438 0025 A804     		testb	$4, %al
 7439 0027 0F85C300 		jne	.L667
 7439      0000
 7440 002d 4989F4   		movq	%rsi, %r12
2118:fltk-1.3.4-1/png/pngrutil.c ****    {
 7441              		.loc 1 2118 9 is_stmt 1 view .LVU2266
2118:fltk-1.3.4-1/png/pngrutil.c ****    {
 7442              		.loc 1 2118 12 is_stmt 0 view .LVU2267
 7443 0030 4885F6   		testq	%rsi, %rsi
 7444 0033 740A     		je	.L616
2118:fltk-1.3.4-1/png/pngrutil.c ****    {
 7445              		.loc 1 2118 30 discriminator 1 view .LVU2268
 7446 0035 F6460904 		testb	$4, 9(%rsi)
 7447 0039 0F854102 		jne	.L668
 7447      0000
 7448              	.L616:
2125:fltk-1.3.4-1/png/pngrutil.c ****        length + 1);
 7449              		.loc 1 2125 4 is_stmt 1 view .LVU2269
2128:fltk-1.3.4-1/png/pngrutil.c **** 
 7450              		.loc 1 2128 4 view .LVU2270
2128:fltk-1.3.4-1/png/pngrutil.c **** 
 7451              		.loc 1 2128 13 is_stmt 0 view .LVU2271
 7452 003f 8D7501   		leal	1(%rbp), %esi
 7453              	.LVL842:
2128:fltk-1.3.4-1/png/pngrutil.c **** 
 7454              		.loc 1 2128 13 view .LVU2272
 7455 0042 BA020000 		movl	$2, %edx
 7455      00
 7456              	.LVL843:
2128:fltk-1.3.4-1/png/pngrutil.c **** 
 7457              		.loc 1 2128 13 view .LVU2273
 7458 0047 4C89F7   		movq	%r14, %rdi
 7459              	.LVL844:
2128:fltk-1.3.4-1/png/pngrutil.c **** 
 7460              		.loc 1 2128 13 view .LVU2274
 7461 004a E8000000 		call	png_read_buffer
 7461      00
 7462              	.LVL845:
 7463 004f 4989C7   		movq	%rax, %r15
 7464              	.LVL846:
2130:fltk-1.3.4-1/png/pngrutil.c ****    {
 7465              		.loc 1 2130 4 is_stmt 1 view .LVU2275
2130:fltk-1.3.4-1/png/pngrutil.c ****    {
 7466              		.loc 1 2130 7 is_stmt 0 view .LVU2276
 7467 0052 4885C0   		testq	%rax, %rax
 7468 0055 0F843D02 		je	.L669
 7468      0000
2137:fltk-1.3.4-1/png/pngrutil.c **** 
 7469              		.loc 1 2137 4 is_stmt 1 view .LVU2277
 7470              	.LVL847:
 7471              	.LBB321:
 7472              	.LBI321:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 7473              		.loc 1 187 1 view .LVU2278
 7474              	.LBB322:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7475              		.loc 1 189 4 view .LVU2279
 7476 005b 4889C6   		movq	%rax, %rsi
 7477 005e 4C89F7   		movq	%r14, %rdi
 7478 0061 89EA     		movl	%ebp, %edx
 7479 0063 E8000000 		call	png_crc_read.part.0
 7479      00
 7480              	.LVL848:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7481              		.loc 1 189 4 is_stmt 0 view .LVU2280
 7482              	.LBE322:
 7483              	.LBE321:
2139:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7484              		.loc 1 2139 4 is_stmt 1 view .LVU2281
2139:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7485              		.loc 1 2139 8 is_stmt 0 view .LVU2282
 7486 0068 31F6     		xorl	%esi, %esi
 7487 006a 4C89F7   		movq	%r14, %rdi
 7488 006d E8000000 		call	png_crc_finish
 7488      00
 7489              	.LVL849:
2139:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7490              		.loc 1 2139 7 view .LVU2283
 7491 0072 85C0     		testl	%eax, %eax
 7492 0074 0F858600 		jne	.L613
 7492      0000
2142:fltk-1.3.4-1/png/pngrutil.c **** 
 7493              		.loc 1 2142 4 is_stmt 1 view .LVU2284
2142:fltk-1.3.4-1/png/pngrutil.c **** 
 7494              		.loc 1 2142 10 is_stmt 0 view .LVU2285
 7495 007a 4C01FD   		addq	%r15, %rbp
 7496              	.LVL850:
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7497              		.loc 1 2145 4 view .LVU2286
 7498 007d 4C89FB   		movq	%r15, %rbx
2142:fltk-1.3.4-1/png/pngrutil.c **** 
 7499              		.loc 1 2142 19 view .LVU2287
 7500 0080 C6450000 		movb	$0, 0(%rbp)
2144:fltk-1.3.4-1/png/pngrutil.c ****    for (buf = buffer; *buf; buf++)
 7501              		.loc 1 2144 4 is_stmt 1 view .LVU2288
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7502              		.loc 1 2145 4 view .LVU2289
 7503              	.LVL851:
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7504              		.loc 1 2145 23 view .LVU2290
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7505              		.loc 1 2145 4 is_stmt 0 view .LVU2291
 7506 0084 41803F00 		cmpb	$0, (%r15)
 7507 0088 740F     		je	.L619
 7508              	.LVL852:
 7509 008a 660F1F44 		.p2align 4,,10
 7509      0000
 7510              		.p2align 3
 7511              	.L620:
2146:fltk-1.3.4-1/png/pngrutil.c **** 
 7512              		.loc 1 2146 24 is_stmt 1 discriminator 3 view .LVU2292
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7513              		.loc 1 2145 29 discriminator 3 view .LVU2293
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7514              		.loc 1 2145 32 is_stmt 0 discriminator 3 view .LVU2294
 7515 0090 4883C301 		addq	$1, %rbx
 7516              	.LVL853:
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7517              		.loc 1 2145 23 is_stmt 1 discriminator 3 view .LVU2295
2145:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 7518              		.loc 1 2145 4 is_stmt 0 discriminator 3 view .LVU2296
 7519 0094 803B00   		cmpb	$0, (%rbx)
 7520 0097 75F7     		jne	.L620
 7521              	.L619:
2148:fltk-1.3.4-1/png/pngrutil.c **** 
 7522              		.loc 1 2148 4 is_stmt 1 view .LVU2297
 7523              	.LVL854:
2153:fltk-1.3.4-1/png/pngrutil.c ****    {
 7524              		.loc 1 2153 4 view .LVU2298
2153:fltk-1.3.4-1/png/pngrutil.c ****    {
 7525              		.loc 1 2153 22 is_stmt 0 view .LVU2299
 7526 0099 488D430C 		leaq	12(%rbx), %rax
2155:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7527              		.loc 1 2155 7 view .LVU2300
 7528 009d 488D3500 		leaq	.LC11(%rip), %rsi
 7528      000000
2153:fltk-1.3.4-1/png/pngrutil.c ****    {
 7529              		.loc 1 2153 7 view .LVU2301
 7530 00a4 4839C5   		cmpq	%rax, %rbp
 7531 00a7 7627     		jbe	.L665
2159:fltk-1.3.4-1/png/pngrutil.c ****    X0 = png_get_int_32((png_bytep)buf+1);
 7532              		.loc 1 2159 4 is_stmt 1 view .LVU2302
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7533              		.loc 1 2160 4 view .LVU2303
 7534              	.LVL855:
2161:fltk-1.3.4-1/png/pngrutil.c ****    type = buf[9];
 7535              		.loc 1 2161 4 view .LVU2304
2162:fltk-1.3.4-1/png/pngrutil.c ****    nparams = buf[10];
 7536              		.loc 1 2162 4 view .LVU2305
2162:fltk-1.3.4-1/png/pngrutil.c ****    nparams = buf[10];
 7537              		.loc 1 2162 9 is_stmt 0 view .LVU2306
 7538 00a9 440FB66B 		movzbl	9(%rbx), %r13d
 7538      09
 7539              	.LVL856:
2163:fltk-1.3.4-1/png/pngrutil.c ****    units = buf + 11;
 7540              		.loc 1 2163 4 is_stmt 1 view .LVU2307
2163:fltk-1.3.4-1/png/pngrutil.c ****    units = buf + 11;
 7541              		.loc 1 2163 12 is_stmt 0 view .LVU2308
 7542 00ae 0FB64B0A 		movzbl	10(%rbx), %ecx
 7543              	.LVL857:
2164:fltk-1.3.4-1/png/pngrutil.c **** 
 7544              		.loc 1 2164 4 is_stmt 1 view .LVU2309
2166:fltk-1.3.4-1/png/pngrutil.c ****    /* Check that we have the right number of parameters for known
 7545              		.loc 1 2166 4 view .LVU2310
2170:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_BASE_E && nparams != 3) ||
 7546              		.loc 1 2170 4 view .LVU2311
2170:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_BASE_E && nparams != 3) ||
 7547              		.loc 1 2170 7 is_stmt 0 view .LVU2312
 7548 00b2 4584ED   		testb	%r13b, %r13b
 7549 00b5 7505     		jne	.L639
 7550 00b7 80F902   		cmpb	$2, %cl
 7551 00ba 750D     		jne	.L622
 7552              	.L639:
2171:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_ARBITRARY && nparams != 3) ||
 7553              		.loc 1 2171 14 discriminator 1 view .LVU2313
 7554 00bc 418D45FF 		leal	-1(%r13), %eax
2171:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_ARBITRARY && nparams != 3) ||
 7555              		.loc 1 2171 54 discriminator 1 view .LVU2314
 7556 00c0 3C01     		cmpb	$1, %al
 7557 00c2 774C     		ja	.L640
 7558 00c4 80F903   		cmpb	$3, %cl
 7559 00c7 7447     		je	.L640
 7560              	.L622:
2175:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7561              		.loc 1 2175 7 is_stmt 1 view .LVU2315
 7562 00c9 488D3500 		leaq	.LC31(%rip), %rsi
 7562      000000
 7563              	.LVL858:
 7564              	.L665:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7565              		.loc 1 2221 1 is_stmt 0 view .LVU2316
 7566 00d0 4883C428 		addq	$40, %rsp
 7567              		.cfi_remember_state
 7568              		.cfi_def_cfa_offset 56
2121:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7569              		.loc 1 2121 7 view .LVU2317
 7570 00d4 4C89F7   		movq	%r14, %rdi
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7571              		.loc 1 2221 1 view .LVU2318
 7572 00d7 5B       		popq	%rbx
 7573              		.cfi_def_cfa_offset 48
 7574 00d8 5D       		popq	%rbp
 7575              		.cfi_def_cfa_offset 40
 7576 00d9 415C     		popq	%r12
 7577              		.cfi_def_cfa_offset 32
 7578 00db 415D     		popq	%r13
 7579              		.cfi_def_cfa_offset 24
 7580 00dd 415E     		popq	%r14
 7581              		.cfi_def_cfa_offset 16
 7582              	.LVL859:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7583              		.loc 1 2221 1 view .LVU2319
 7584 00df 415F     		popq	%r15
 7585              		.cfi_def_cfa_offset 8
2121:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7586              		.loc 1 2121 7 view .LVU2320
 7587 00e1 E9000000 		jmp	png_chunk_benign_error@PLT
 7587      00
 7588              	.LVL860:
 7589 00e6 662E0F1F 		.p2align 4,,10
 7589      84000000 
 7589      0000
 7590              		.p2align 3
 7591              	.L667:
 7592              		.cfi_restore_state
2113:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 7593              		.loc 1 2113 7 is_stmt 1 view .LVU2321
 7594 00f0 89EE     		movl	%ebp, %esi
 7595              	.LVL861:
2113:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 7596              		.loc 1 2113 7 is_stmt 0 view .LVU2322
 7597 00f2 E8000000 		call	png_crc_finish
 7597      00
 7598              	.LVL862:
2114:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7599              		.loc 1 2114 7 is_stmt 1 view .LVU2323
 7600 00f7 488D3500 		leaq	.LC10(%rip), %rsi
 7600      000000
 7601 00fe EBD0     		jmp	.L665
 7602              	.LVL863:
 7603              		.p2align 4,,10
 7604              		.p2align 3
 7605              	.L613:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7606              		.loc 1 2221 1 is_stmt 0 view .LVU2324
 7607 0100 4883C428 		addq	$40, %rsp
 7608              		.cfi_remember_state
 7609              		.cfi_def_cfa_offset 56
 7610 0104 5B       		popq	%rbx
 7611              		.cfi_def_cfa_offset 48
 7612 0105 5D       		popq	%rbp
 7613              		.cfi_def_cfa_offset 40
 7614              	.LVL864:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7615              		.loc 1 2221 1 view .LVU2325
 7616 0106 415C     		popq	%r12
 7617              		.cfi_def_cfa_offset 32
 7618              	.LVL865:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7619              		.loc 1 2221 1 view .LVU2326
 7620 0108 415D     		popq	%r13
 7621              		.cfi_def_cfa_offset 24
 7622 010a 415E     		popq	%r14
 7623              		.cfi_def_cfa_offset 16
 7624              	.LVL866:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7625              		.loc 1 2221 1 view .LVU2327
 7626 010c 415F     		popq	%r15
 7627              		.cfi_def_cfa_offset 8
 7628              	.LVL867:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7629              		.loc 1 2221 1 view .LVU2328
 7630 010e C3       		ret
 7631              	.LVL868:
 7632 010f 90       		.p2align 4,,10
 7633              		.p2align 3
 7634              	.L640:
 7635              		.cfi_restore_state
2172:fltk-1.3.4-1/png/pngrutil.c ****        (type == PNG_EQUATION_HYPERBOLIC && nparams != 4))
 7636              		.loc 1 2172 57 view .LVU2329
 7637 0110 4180FD03 		cmpb	$3, %r13b
 7638 0114 7505     		jne	.L625
 7639 0116 80F904   		cmpb	$4, %cl
 7640 0119 75AE     		jne	.L622
 7641              	.L625:
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7642              		.loc 1 2160 9 view .LVU2330
 7643 011b 0FB64301 		movzbl	1(%rbx), %eax
 7644 011f 88442410 		movb	%al, 16(%rsp)
 7645 0123 0FB64302 		movzbl	2(%rbx), %eax
 7646 0127 88442416 		movb	%al, 22(%rsp)
 7647 012b 0FB64303 		movzbl	3(%rbx), %eax
 7648 012f 88442417 		movb	%al, 23(%rsp)
 7649 0133 0FB64304 		movzbl	4(%rbx), %eax
 7650 0137 8844241C 		movb	%al, 28(%rsp)
2161:fltk-1.3.4-1/png/pngrutil.c ****    type = buf[9];
 7651              		.loc 1 2161 9 view .LVU2331
 7652 013b 0FB64305 		movzbl	5(%rbx), %eax
 7653 013f 88442418 		movb	%al, 24(%rsp)
 7654 0143 0FB64306 		movzbl	6(%rbx), %eax
 7655 0147 8844241D 		movb	%al, 29(%rsp)
 7656 014b 0FB64307 		movzbl	7(%rbx), %eax
 7657 014f 8844241E 		movb	%al, 30(%rsp)
 7658 0153 0FB64308 		movzbl	8(%rbx), %eax
 7659 0157 8844241F 		movb	%al, 31(%rsp)
2179:fltk-1.3.4-1/png/pngrutil.c ****    {
 7660              		.loc 1 2179 9 is_stmt 1 view .LVU2332
2179:fltk-1.3.4-1/png/pngrutil.c ****    {
 7661              		.loc 1 2179 12 is_stmt 0 view .LVU2333
 7662 015b 4180FD03 		cmpb	$3, %r13b
 7663 015f 0F874901 		ja	.L670
 7663      0000
 7664              	.LVL869:
 7665              	.L626:
2164:fltk-1.3.4-1/png/pngrutil.c **** 
 7666              		.loc 1 2164 10 view .LVU2334
 7667 0165 488D530B 		leaq	11(%rbx), %rdx
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7668              		.loc 1 2184 4 is_stmt 1 view .LVU2335
 7669              	.LVL870:
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7670              		.loc 1 2184 22 view .LVU2336
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7671              		.loc 1 2184 4 is_stmt 0 view .LVU2337
 7672 0169 807B0B00 		cmpb	$0, 11(%rbx)
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7673              		.loc 1 2184 13 view .LVU2338
 7674 016d 4889D3   		movq	%rdx, %rbx
 7675              	.LVL871:
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7676              		.loc 1 2184 4 view .LVU2339
 7677 0170 740F     		je	.L627
 7678              	.LVL872:
 7679              		.p2align 4,,10
 7680 0172 660F1F44 		.p2align 3
 7680      0000
 7681              	.L628:
2185:fltk-1.3.4-1/png/pngrutil.c **** 
 7682              		.loc 1 2185 55 is_stmt 1 discriminator 3 view .LVU2340
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7683              		.loc 1 2184 28 discriminator 3 view .LVU2341
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7684              		.loc 1 2184 31 is_stmt 0 discriminator 3 view .LVU2342
 7685 0178 4883C301 		addq	$1, %rbx
 7686              	.LVL873:
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7687              		.loc 1 2184 22 is_stmt 1 discriminator 3 view .LVU2343
2184:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to move past the units string. */ ;
 7688              		.loc 1 2184 4 is_stmt 0 discriminator 3 view .LVU2344
 7689 017c 803B00   		cmpb	$0, (%rbx)
 7690 017f 75F7     		jne	.L628
 7691              	.LVL874:
 7692              	.L627:
2189:fltk-1.3.4-1/png/pngrutil.c ****        nparams * (sizeof (png_charp))));
 7693              		.loc 1 2189 13 view .LVU2345
 7694 0181 0FB6F1   		movzbl	%cl, %esi
 7695 0184 4C89F7   		movq	%r14, %rdi
 7696 0187 48895424 		movq	%rdx, 8(%rsp)
 7696      08
2187:fltk-1.3.4-1/png/pngrutil.c **** 
 7697              		.loc 1 2187 4 is_stmt 1 view .LVU2346
2189:fltk-1.3.4-1/png/pngrutil.c ****        nparams * (sizeof (png_charp))));
 7698              		.loc 1 2189 4 view .LVU2347
2189:fltk-1.3.4-1/png/pngrutil.c ****        nparams * (sizeof (png_charp))));
 7699              		.loc 1 2189 13 is_stmt 0 view .LVU2348
 7700 018c 48C1E603 		salq	$3, %rsi
 7701 0190 880C24   		movb	%cl, (%rsp)
 7702 0193 E8000000 		call	png_malloc_warn@PLT
 7702      00
 7703              	.LVL875:
2189:fltk-1.3.4-1/png/pngrutil.c ****        nparams * (sizeof (png_charp))));
 7704              		.loc 1 2189 13 view .LVU2349
 7705 0198 4989C3   		movq	%rax, %r11
 7706              	.LVL876:
2192:fltk-1.3.4-1/png/pngrutil.c ****    {
 7707              		.loc 1 2192 4 is_stmt 1 view .LVU2350
2192:fltk-1.3.4-1/png/pngrutil.c ****    {
 7708              		.loc 1 2192 7 is_stmt 0 view .LVU2351
 7709 019b 4885C0   		testq	%rax, %rax
 7710 019e 0F844F01 		je	.L629
 7710      0000
 7711              	.LVL877:
2199:fltk-1.3.4-1/png/pngrutil.c ****    {
 7712              		.loc 1 2199 16 is_stmt 1 view .LVU2352
2199:fltk-1.3.4-1/png/pngrutil.c ****    {
 7713              		.loc 1 2199 18 is_stmt 0 view .LVU2353
 7714 01a4 0FB63424 		movzbl	(%rsp), %esi
2199:fltk-1.3.4-1/png/pngrutil.c ****    {
 7715              		.loc 1 2199 4 view .LVU2354
 7716 01a8 488B5424 		movq	8(%rsp), %rdx
 7716      08
 7717 01ad 85F6     		testl	%esi, %esi
 7718 01af 744B     		je	.L631
 7719 01b1 4889C1   		movq	%rax, %rcx
 7720 01b4 8D46FF   		leal	-1(%rsi), %eax
 7721              	.LVL878:
2199:fltk-1.3.4-1/png/pngrutil.c ****    {
 7722              		.loc 1 2199 4 view .LVU2355
 7723 01b7 4D8D44C3 		leaq	8(%r11,%rax,8), %r8
 7723      08
 7724 01bc 488D4501 		leaq	1(%rbp), %rax
 7725              	.LVL879:
 7726              		.p2align 4,,10
 7727              		.p2align 3
 7728              	.L636:
2201:fltk-1.3.4-1/png/pngrutil.c **** 
 7729              		.loc 1 2201 7 is_stmt 1 view .LVU2356
2201:fltk-1.3.4-1/png/pngrutil.c **** 
 7730              		.loc 1 2201 10 is_stmt 0 view .LVU2357
 7731 01c0 4883C301 		addq	$1, %rbx
 7732              	.LVL880:
2203:fltk-1.3.4-1/png/pngrutil.c **** 
 7733              		.loc 1 2203 7 is_stmt 1 view .LVU2358
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7734              		.loc 1 2205 7 view .LVU2359
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7735              		.loc 1 2205 22 is_stmt 0 view .LVU2360
 7736 01c4 488919   		movq	%rbx, (%rcx)
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7737              		.loc 1 2205 40 is_stmt 1 view .LVU2361
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7738              		.loc 1 2205 7 is_stmt 0 view .LVU2362
 7739 01c7 4839DD   		cmpq	%rbx, %rbp
 7740 01ca 7319     		jnb	.L633
 7741 01cc E9FF0000 		jmp	.L632
 7741      00
 7742              		.p2align 4,,10
 7743 01d1 0F1F8000 		.p2align 3
 7743      000000
 7744              	.L634:
2206:fltk-1.3.4-1/png/pngrutil.c **** 
 7745              		.loc 1 2206 62 is_stmt 1 discriminator 4 view .LVU2363
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7746              		.loc 1 2205 68 discriminator 4 view .LVU2364
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7747              		.loc 1 2205 71 is_stmt 0 discriminator 4 view .LVU2365
 7748 01d8 4883C301 		addq	$1, %rbx
 7749              	.LVL881:
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7750              		.loc 1 2205 40 is_stmt 1 discriminator 4 view .LVU2366
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7751              		.loc 1 2205 7 is_stmt 0 discriminator 4 view .LVU2367
 7752 01dc 4839D8   		cmpq	%rbx, %rax
 7753 01df 0F84EB00 		je	.L632
 7753      0000
 7754              	.L633:
2205:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop to move past each parameter string */ ;
 7755              		.loc 1 2205 54 discriminator 3 view .LVU2368
 7756 01e5 803B00   		cmpb	$0, (%rbx)
 7757 01e8 75EE     		jne	.L634
2209:fltk-1.3.4-1/png/pngrutil.c ****       {
 7758              		.loc 1 2209 7 is_stmt 1 view .LVU2369
2209:fltk-1.3.4-1/png/pngrutil.c ****       {
 7759              		.loc 1 2209 10 is_stmt 0 view .LVU2370
 7760 01ea 4839DD   		cmpq	%rbx, %rbp
 7761 01ed 0F82DD00 		jb	.L632
 7761      0000
2199:fltk-1.3.4-1/png/pngrutil.c ****    {
 7762              		.loc 1 2199 29 is_stmt 1 discriminator 2 view .LVU2371
2199:fltk-1.3.4-1/png/pngrutil.c ****    {
 7763              		.loc 1 2199 16 discriminator 2 view .LVU2372
 7764 01f3 4883C108 		addq	$8, %rcx
2199:fltk-1.3.4-1/png/pngrutil.c ****    {
 7765              		.loc 1 2199 4 is_stmt 0 discriminator 2 view .LVU2373
 7766 01f7 4C39C1   		cmpq	%r8, %rcx
 7767 01fa 75C4     		jne	.L636
 7768              	.L631:
2217:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
 7769              		.loc 1 2217 4 is_stmt 1 view .LVU2374
2161:fltk-1.3.4-1/png/pngrutil.c ****    type = buf[9];
 7770              		.loc 1 2161 9 is_stmt 0 view .LVU2375
 7771 01fc 8B4C2418 		movl	24(%rsp), %ecx
 7772 0200 0FB64424 		movzbl	29(%rsp), %eax
 7772      1D
2217:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
 7773              		.loc 1 2217 4 view .LVU2376
 7774 0205 4883EC08 		subq	$8, %rsp
 7775              		.cfi_def_cfa_offset 104
 7776 0209 4C89F7   		movq	%r14, %rdi
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7777              		.loc 1 2160 9 view .LVU2377
 7778 020c 8B6C2418 		movl	24(%rsp), %ebp
 7779              	.LVL882:
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7780              		.loc 1 2160 9 view .LVU2378
 7781 0210 0FB65C24 		movzbl	36(%rsp), %ebx
 7781      24
 7782              	.LVL883:
2217:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
 7783              		.loc 1 2217 4 view .LVU2379
 7784 0215 450FB6CD 		movzbl	%r13b, %r9d
2161:fltk-1.3.4-1/png/pngrutil.c ****    type = buf[9];
 7785              		.loc 1 2161 9 view .LVU2380
 7786 0219 C1E118   		sall	$24, %ecx
 7787 021c C1E010   		sall	$16, %eax
 7788 021f 440FB644 		movzbl	38(%rsp), %r8d
 7788      2426
 7789 0225 01C8     		addl	%ecx, %eax
 7790 0227 0FB64C24 		movzbl	39(%rsp), %ecx
 7790      27
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7791              		.loc 1 2160 9 view .LVU2381
 7792 022c C1E518   		sall	$24, %ebp
2161:fltk-1.3.4-1/png/pngrutil.c ****    type = buf[9];
 7793              		.loc 1 2161 9 view .LVU2382
 7794 022f 41C1E008 		sall	$8, %r8d
 7795 0233 01C8     		addl	%ecx, %eax
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7796              		.loc 1 2160 9 view .LVU2383
 7797 0235 0FB64C24 		movzbl	30(%rsp), %ecx
 7797      1E
2217:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
 7798              		.loc 1 2217 4 view .LVU2384
 7799 023a 4101C0   		addl	%eax, %r8d
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7800              		.loc 1 2160 9 view .LVU2385
 7801 023d C1E110   		sall	$16, %ecx
 7802 0240 01E9     		addl	%ebp, %ecx
 7803 0242 01CB     		addl	%ecx, %ebx
 7804 0244 0FB64C24 		movzbl	31(%rsp), %ecx
 7804      1F
2217:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
 7805              		.loc 1 2217 4 view .LVU2386
 7806 0249 4153     		pushq	%r11
 7807              		.cfi_def_cfa_offset 112
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7808              		.loc 1 2160 9 view .LVU2387
 7809 024b C1E108   		sall	$8, %ecx
2217:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
 7810              		.loc 1 2217 4 view .LVU2388
 7811 024e 4C895C24 		movq	%r11, 16(%rsp)
 7811      10
2160:fltk-1.3.4-1/png/pngrutil.c ****    X1 = png_get_int_32((png_bytep)buf+5);
 7812              		.loc 1 2160 9 view .LVU2389
 7813 0253 01D9     		addl	%ebx, %ecx
2217:fltk-1.3.4-1/png/pngrutil.c ****       (png_charp)units, params);
 7814              		.loc 1 2217 4 view .LVU2390
 7815 0255 52       		pushq	%rdx
 7816              		.cfi_def_cfa_offset 120
 7817 0256 4C89FA   		movq	%r15, %rdx
 7818 0259 56       		pushq	%rsi
 7819              		.cfi_def_cfa_offset 128
 7820 025a 4C89E6   		movq	%r12, %rsi
 7821 025d E8000000 		call	png_set_pCAL@PLT
 7821      00
 7822              	.LVL884:
2220:fltk-1.3.4-1/png/pngrutil.c **** }
 7823              		.loc 1 2220 4 is_stmt 1 view .LVU2391
 7824 0262 4C8B5C24 		movq	32(%rsp), %r11
 7824      20
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7825              		.loc 1 2221 1 is_stmt 0 view .LVU2392
 7826 0267 4883C448 		addq	$72, %rsp
 7827              		.cfi_def_cfa_offset 56
2220:fltk-1.3.4-1/png/pngrutil.c **** }
 7828              		.loc 1 2220 4 view .LVU2393
 7829 026b 4C89F7   		movq	%r14, %rdi
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7830              		.loc 1 2221 1 view .LVU2394
 7831 026e 5B       		popq	%rbx
 7832              		.cfi_def_cfa_offset 48
 7833 026f 5D       		popq	%rbp
 7834              		.cfi_def_cfa_offset 40
2220:fltk-1.3.4-1/png/pngrutil.c **** }
 7835              		.loc 1 2220 4 view .LVU2395
 7836 0270 4C89DE   		movq	%r11, %rsi
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7837              		.loc 1 2221 1 view .LVU2396
 7838 0273 415C     		popq	%r12
 7839              		.cfi_def_cfa_offset 32
 7840              	.LVL885:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7841              		.loc 1 2221 1 view .LVU2397
 7842 0275 415D     		popq	%r13
 7843              		.cfi_def_cfa_offset 24
 7844              	.LVL886:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7845              		.loc 1 2221 1 view .LVU2398
 7846 0277 415E     		popq	%r14
 7847              		.cfi_def_cfa_offset 16
 7848              	.LVL887:
2221:fltk-1.3.4-1/png/pngrutil.c **** #endif
 7849              		.loc 1 2221 1 view .LVU2399
 7850 0279 415F     		popq	%r15
 7851              		.cfi_def_cfa_offset 8
 7852              	.LVL888:
2220:fltk-1.3.4-1/png/pngrutil.c **** }
 7853              		.loc 1 2220 4 view .LVU2400
 7854 027b E9000000 		jmp	png_free@PLT
 7854      00
 7855              	.LVL889:
 7856              		.p2align 4,,10
 7857              		.p2align 3
 7858              	.L668:
 7859              		.cfi_def_cfa_offset 96
2120:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 7860              		.loc 1 2120 7 is_stmt 1 view .LVU2401
 7861 0280 89EE     		movl	%ebp, %esi
 7862              	.LVL890:
2120:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 7863              		.loc 1 2120 7 is_stmt 0 view .LVU2402
 7864 0282 E8000000 		call	png_crc_finish
 7864      00
 7865              	.LVL891:
2121:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7866              		.loc 1 2121 7 is_stmt 1 view .LVU2403
 7867 0287 488D3500 		leaq	.LC13(%rip), %rsi
 7867      000000
 7868 028e E93DFEFF 		jmp	.L665
 7868      FF
 7869              	.LVL892:
 7870              		.p2align 4,,10
 7871 0293 0F1F4400 		.p2align 3
 7871      00
 7872              	.L669:
2132:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
 7873              		.loc 1 2132 7 view .LVU2404
 7874 0298 89EE     		movl	%ebp, %esi
 7875 029a 4C89F7   		movq	%r14, %rdi
 7876 029d E8000000 		call	png_crc_finish
 7876      00
 7877              	.LVL893:
2133:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7878              		.loc 1 2133 7 view .LVU2405
 7879 02a2 488D3500 		leaq	.LC20(%rip), %rsi
 7879      000000
 7880 02a9 E922FEFF 		jmp	.L665
 7880      FF
 7881              	.LVL894:
 7882              	.L670:
2181:fltk-1.3.4-1/png/pngrutil.c ****    }
 7883              		.loc 1 2181 7 is_stmt 0 view .LVU2406
 7884 02ae 488D3500 		leaq	.LC32(%rip), %rsi
 7884      000000
 7885 02b5 4C89F7   		movq	%r14, %rdi
 7886 02b8 880C24   		movb	%cl, (%rsp)
2181:fltk-1.3.4-1/png/pngrutil.c ****    }
 7887              		.loc 1 2181 7 is_stmt 1 view .LVU2407
 7888 02bb E8000000 		call	png_chunk_benign_error@PLT
 7888      00
 7889              	.LVL895:
2181:fltk-1.3.4-1/png/pngrutil.c ****    }
 7890              		.loc 1 2181 7 is_stmt 0 view .LVU2408
 7891 02c0 0FB60C24 		movzbl	(%rsp), %ecx
 7892 02c4 E99CFEFF 		jmp	.L626
 7892      FF
 7893              	.LVL896:
 7894 02c9 0F1F8000 		.p2align 4,,10
 7894      000000
 7895              		.p2align 3
 7896              	.L632:
2211:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "invalid data");
 7897              		.loc 1 2211 10 is_stmt 1 view .LVU2409
 7898 02d0 4C89DE   		movq	%r11, %rsi
 7899 02d3 4C89F7   		movq	%r14, %rdi
 7900 02d6 E8000000 		call	png_free@PLT
 7900      00
 7901              	.LVL897:
2212:fltk-1.3.4-1/png/pngrutil.c ****          return;
 7902              		.loc 1 2212 10 view .LVU2410
 7903 02db 488D3500 		leaq	.LC33(%rip), %rsi
 7903      000000
 7904 02e2 E9E9FDFF 		jmp	.L665
 7904      FF
 7905              	.LVL898:
 7906              	.L666:
2109:fltk-1.3.4-1/png/pngrutil.c **** 
 7907              		.loc 1 2109 7 view .LVU2411
 7908 02e7 488D3500 		leaq	.LC12(%rip), %rsi
 7908      000000
 7909              	.LVL899:
2109:fltk-1.3.4-1/png/pngrutil.c **** 
 7910              		.loc 1 2109 7 is_stmt 0 view .LVU2412
 7911 02ee E8000000 		call	png_chunk_error@PLT
 7911      00
 7912              	.LVL900:
 7913              	.L629:
2194:fltk-1.3.4-1/png/pngrutil.c ****       return;
 7914              		.loc 1 2194 7 is_stmt 1 view .LVU2413
 7915 02f3 488D3500 		leaq	.LC20(%rip), %rsi
 7915      000000
 7916 02fa E9D1FDFF 		jmp	.L665
 7916      FF
 7917              		.cfi_endproc
 7918              	.LFE70:
 7920              		.section	.rodata.png_handle_sCAL.str1.1,"aMS",@progbits,1
 7921              	.LC34:
 7922 0000 696E7661 		.string	"invalid unit"
 7922      6C696420 
 7922      756E6974 
 7922      00
 7923              	.LC35:
 7924 000d 62616420 		.string	"bad width format"
 7924      77696474 
 7924      6820666F 
 7924      726D6174 
 7924      00
 7925              	.LC36:
 7926 001e 6E6F6E2D 		.string	"non-positive width"
 7926      706F7369 
 7926      74697665 
 7926      20776964 
 7926      746800
 7927              	.LC37:
 7928 0031 62616420 		.string	"bad height format"
 7928      68656967 
 7928      68742066 
 7928      6F726D61 
 7928      7400
 7929              	.LC38:
 7930 0043 6E6F6E2D 		.string	"non-positive height"
 7930      706F7369 
 7930      74697665 
 7930      20686569 
 7930      67687400 
 7931              		.section	.text.png_handle_sCAL,"ax",@progbits
 7932              		.p2align 4
 7933              		.globl	png_handle_sCAL
 7935              	png_handle_sCAL:
 7936              	.LVL901:
 7937              	.LFB71:
2228:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
 7938              		.loc 1 2228 1 view -0
 7939              		.cfi_startproc
2228:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
 7940              		.loc 1 2228 1 is_stmt 0 view .LVU2415
 7941 0000 F30F1EFA 		endbr64
 7942 0004 4157     		pushq	%r15
 7943              		.cfi_def_cfa_offset 16
 7944              		.cfi_offset 15, -16
 7945 0006 4156     		pushq	%r14
 7946              		.cfi_def_cfa_offset 24
 7947              		.cfi_offset 14, -24
 7948 0008 4155     		pushq	%r13
 7949              		.cfi_def_cfa_offset 32
 7950              		.cfi_offset 13, -32
 7951 000a 4154     		pushq	%r12
 7952              		.cfi_def_cfa_offset 40
 7953              		.cfi_offset 12, -40
 7954 000c 55       		pushq	%rbp
 7955              		.cfi_def_cfa_offset 48
 7956              		.cfi_offset 6, -48
 7957 000d 4889FD   		movq	%rdi, %rbp
 7958 0010 53       		pushq	%rbx
 7959              		.cfi_def_cfa_offset 56
 7960              		.cfi_offset 3, -56
 7961 0011 4883EC38 		subq	$56, %rsp
 7962              		.cfi_def_cfa_offset 112
2228:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
 7963              		.loc 1 2228 1 view .LVU2416
 7964 0015 64488B04 		movq	%fs:40, %rax
 7964      25280000 
 7964      00
 7965 001e 48894424 		movq	%rax, 40(%rsp)
 7965      28
 7966 0023 31C0     		xorl	%eax, %eax
2229:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t i;
 7967              		.loc 1 2229 4 is_stmt 1 view .LVU2417
2230:fltk-1.3.4-1/png/pngrutil.c ****    int state;
 7968              		.loc 1 2230 4 view .LVU2418
2231:fltk-1.3.4-1/png/pngrutil.c **** 
 7969              		.loc 1 2231 4 view .LVU2419
2233:fltk-1.3.4-1/png/pngrutil.c **** 
 7970              		.loc 1 2233 4 view .LVU2420
2235:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7971              		.loc 1 2235 4 view .LVU2421
2235:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7972              		.loc 1 2235 16 is_stmt 0 view .LVU2422
 7973 0025 8B872C01 		movl	300(%rdi), %eax
 7973      0000
2235:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 7974              		.loc 1 2235 7 view .LVU2423
 7975 002b A801     		testb	$1, %al
 7976 002d 0F844402 		je	.L696
 7976      0000
 7977 0033 4189D4   		movl	%edx, %r12d
2238:fltk-1.3.4-1/png/pngrutil.c ****    {
 7978              		.loc 1 2238 9 is_stmt 1 view .LVU2424
2238:fltk-1.3.4-1/png/pngrutil.c ****    {
 7979              		.loc 1 2238 12 is_stmt 0 view .LVU2425
 7980 0036 A804     		testb	$4, %al
 7981 0038 0F852A01 		jne	.L697
 7981      0000
 7982 003e 4989F5   		movq	%rsi, %r13
2245:fltk-1.3.4-1/png/pngrutil.c ****    {
 7983              		.loc 1 2245 9 is_stmt 1 view .LVU2426
2245:fltk-1.3.4-1/png/pngrutil.c ****    {
 7984              		.loc 1 2245 12 is_stmt 0 view .LVU2427
 7985 0041 4885F6   		testq	%rsi, %rsi
 7986 0044 740A     		je	.L675
2245:fltk-1.3.4-1/png/pngrutil.c ****    {
 7987              		.loc 1 2245 30 discriminator 1 view .LVU2428
 7988 0046 F6460940 		testb	$64, 9(%rsi)
 7989 004a 0F853801 		jne	.L698
 7989      0000
 7990              	.L675:
2253:fltk-1.3.4-1/png/pngrutil.c ****    {
 7991              		.loc 1 2253 9 is_stmt 1 view .LVU2429
2253:fltk-1.3.4-1/png/pngrutil.c ****    {
 7992              		.loc 1 2253 12 is_stmt 0 view .LVU2430
 7993 0050 4183FC03 		cmpl	$3, %r12d
 7994 0054 0F86CE00 		jbe	.L699
 7994      0000
2260:fltk-1.3.4-1/png/pngrutil.c ****       length + 1);
 7995              		.loc 1 2260 4 is_stmt 1 view .LVU2431
2263:fltk-1.3.4-1/png/pngrutil.c **** 
 7996              		.loc 1 2263 4 view .LVU2432
2263:fltk-1.3.4-1/png/pngrutil.c **** 
 7997              		.loc 1 2263 13 is_stmt 0 view .LVU2433
 7998 005a 418D7424 		leal	1(%r12), %esi
 7998      01
 7999              	.LVL902:
2263:fltk-1.3.4-1/png/pngrutil.c **** 
 8000              		.loc 1 2263 13 view .LVU2434
 8001 005f BA020000 		movl	$2, %edx
 8001      00
 8002              	.LVL903:
2263:fltk-1.3.4-1/png/pngrutil.c **** 
 8003              		.loc 1 2263 13 view .LVU2435
 8004 0064 4889EF   		movq	%rbp, %rdi
 8005              	.LVL904:
2263:fltk-1.3.4-1/png/pngrutil.c **** 
 8006              		.loc 1 2263 13 view .LVU2436
 8007 0067 E8000000 		call	png_read_buffer
 8007      00
 8008              	.LVL905:
 8009 006c 4889C3   		movq	%rax, %rbx
 8010              	.LVL906:
2265:fltk-1.3.4-1/png/pngrutil.c ****    {
 8011              		.loc 1 2265 4 is_stmt 1 view .LVU2437
2265:fltk-1.3.4-1/png/pngrutil.c ****    {
 8012              		.loc 1 2265 7 is_stmt 0 view .LVU2438
 8013 006f 4885C0   		testq	%rax, %rax
 8014 0072 0F846001 		je	.L700
 8014      0000
2272:fltk-1.3.4-1/png/pngrutil.c ****    buffer[length] = 0; /* Null terminate the last string */
 8015              		.loc 1 2272 4 is_stmt 1 view .LVU2439
 8016              	.LVL907:
 8017              	.LBB323:
 8018              	.LBI323:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 8019              		.loc 1 187 1 view .LVU2440
 8020              	.LBB324:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8021              		.loc 1 189 4 view .LVU2441
 8022 0078 4889C6   		movq	%rax, %rsi
 8023 007b 4889EF   		movq	%rbp, %rdi
 8024 007e 4489E2   		movl	%r12d, %edx
 8025 0081 E8000000 		call	png_crc_read.part.0
 8025      00
 8026              	.LVL908:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8027              		.loc 1 189 4 is_stmt 0 view .LVU2442
 8028              	.LBE324:
 8029              	.LBE323:
2273:fltk-1.3.4-1/png/pngrutil.c **** 
 8030              		.loc 1 2273 4 is_stmt 1 view .LVU2443
2273:fltk-1.3.4-1/png/pngrutil.c **** 
 8031              		.loc 1 2273 19 is_stmt 0 view .LVU2444
 8032 0086 42C60423 		movb	$0, (%rbx,%r12)
 8032      00
2275:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8033              		.loc 1 2275 4 is_stmt 1 view .LVU2445
2275:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8034              		.loc 1 2275 8 is_stmt 0 view .LVU2446
 8035 008b 31F6     		xorl	%esi, %esi
 8036 008d 4889EF   		movq	%rbp, %rdi
 8037 0090 E8000000 		call	png_crc_finish
 8037      00
 8038              	.LVL909:
2275:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8039              		.loc 1 2275 7 view .LVU2447
 8040 0095 85C0     		testl	%eax, %eax
 8041 0097 0F85A500 		jne	.L671
 8041      0000
2279:fltk-1.3.4-1/png/pngrutil.c ****    {
 8042              		.loc 1 2279 4 is_stmt 1 view .LVU2448
2279:fltk-1.3.4-1/png/pngrutil.c ****    {
 8043              		.loc 1 2279 23 is_stmt 0 view .LVU2449
 8044 009d 0FB603   		movzbl	(%rbx), %eax
 8045 00a0 83E801   		subl	$1, %eax
2279:fltk-1.3.4-1/png/pngrutil.c ****    {
 8046              		.loc 1 2279 7 view .LVU2450
 8047 00a3 3C01     		cmpb	$1, %al
 8048 00a5 0F87FD00 		ja	.L701
 8048      0000
2288:fltk-1.3.4-1/png/pngrutil.c ****    state = 0;
 8049              		.loc 1 2288 4 is_stmt 1 view .LVU2451
2291:fltk-1.3.4-1/png/pngrutil.c ****        i >= length || buffer[i++] != 0)
 8050              		.loc 1 2291 8 is_stmt 0 view .LVU2452
 8051 00ab 4C8D7C24 		leaq	32(%rsp), %r15
 8051      20
 8052 00b0 4C8D7424 		leaq	28(%rsp), %r14
 8052      1C
 8053 00b5 4C89E6   		movq	%r12, %rsi
 8054 00b8 4889DF   		movq	%rbx, %rdi
 8055 00bb 4C89F9   		movq	%r15, %rcx
 8056 00be 4C89F2   		movq	%r14, %rdx
2288:fltk-1.3.4-1/png/pngrutil.c ****    state = 0;
 8057              		.loc 1 2288 6 view .LVU2453
 8058 00c1 48C74424 		movq	$1, 32(%rsp)
 8058      20010000 
 8058      00
2289:fltk-1.3.4-1/png/pngrutil.c **** 
 8059              		.loc 1 2289 4 is_stmt 1 view .LVU2454
2289:fltk-1.3.4-1/png/pngrutil.c **** 
 8060              		.loc 1 2289 10 is_stmt 0 view .LVU2455
 8061 00ca C744241C 		movl	$0, 28(%rsp)
 8061      00000000 
2291:fltk-1.3.4-1/png/pngrutil.c ****        i >= length || buffer[i++] != 0)
 8062              		.loc 1 2291 4 is_stmt 1 view .LVU2456
2291:fltk-1.3.4-1/png/pngrutil.c ****        i >= length || buffer[i++] != 0)
 8063              		.loc 1 2291 8 is_stmt 0 view .LVU2457
 8064 00d2 E8000000 		call	png_check_fp_number@PLT
 8064      00
 8065              	.LVL910:
2291:fltk-1.3.4-1/png/pngrutil.c ****        i >= length || buffer[i++] != 0)
 8066              		.loc 1 2291 7 view .LVU2458
 8067 00d7 85C0     		testl	%eax, %eax
 8068 00d9 0F84E100 		je	.L680
 8068      0000
2292:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "bad width format");
 8069              		.loc 1 2292 10 discriminator 1 view .LVU2459
 8070 00df 488B4424 		movq	32(%rsp), %rax
 8070      20
2291:fltk-1.3.4-1/png/pngrutil.c ****        i >= length || buffer[i++] != 0)
 8071              		.loc 1 2291 78 discriminator 1 view .LVU2460
 8072 00e4 4939C4   		cmpq	%rax, %r12
 8073 00e7 0F86D300 		jbe	.L680
 8073      0000
2292:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "bad width format");
 8074              		.loc 1 2292 31 view .LVU2461
 8075 00ed 4C8D4001 		leaq	1(%rax), %r8
 8076 00f1 4C894424 		movq	%r8, 32(%rsp)
 8076      20
2292:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "bad width format");
 8077              		.loc 1 2292 20 view .LVU2462
 8078 00f6 803C0300 		cmpb	$0, (%rbx,%rax)
 8079 00fa 0F85C000 		jne	.L680
 8079      0000
2295:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "non-positive width");
 8080              		.loc 1 2295 9 is_stmt 1 view .LVU2463
2295:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "non-positive width");
 8081              		.loc 1 2295 13 is_stmt 0 view .LVU2464
 8082 0100 8B44241C 		movl	28(%rsp), %eax
 8083 0104 25880100 		andl	$392, %eax
 8083      00
2295:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "non-positive width");
 8084              		.loc 1 2295 12 view .LVU2465
 8085 0109 3D080100 		cmpl	$264, %eax
 8085      00
 8086 010e 0F84E300 		je	.L681
 8086      0000
2296:fltk-1.3.4-1/png/pngrutil.c **** 
 8087              		.loc 1 2296 7 is_stmt 1 view .LVU2466
 8088 0114 488D3500 		leaq	.LC36(%rip), %rsi
 8088      000000
 8089 011b 4889EF   		movq	%rbp, %rdi
 8090 011e E8000000 		call	png_chunk_benign_error@PLT
 8090      00
 8091              	.LVL911:
 8092 0123 EB1D     		jmp	.L671
 8093              	.LVL912:
 8094              		.p2align 4,,10
 8095 0125 0F1F00   		.p2align 3
 8096              	.L699:
2255:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 8097              		.loc 1 2255 7 view .LVU2467
 8098 0128 4489E6   		movl	%r12d, %esi
 8099              	.LVL913:
2255:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 8100              		.loc 1 2255 7 is_stmt 0 view .LVU2468
 8101 012b 4889EF   		movq	%rbp, %rdi
 8102              	.LVL914:
2255:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 8103              		.loc 1 2255 7 view .LVU2469
 8104 012e E8000000 		call	png_crc_finish
 8104      00
 8105              	.LVL915:
2256:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8106              		.loc 1 2256 7 is_stmt 1 view .LVU2470
 8107 0133 488D3500 		leaq	.LC11(%rip), %rsi
 8107      000000
 8108 013a 4889EF   		movq	%rbp, %rdi
 8109 013d E8000000 		call	png_chunk_benign_error@PLT
 8109      00
 8110              	.LVL916:
2257:fltk-1.3.4-1/png/pngrutil.c ****    }
 8111              		.loc 1 2257 7 view .LVU2471
 8112              	.L671:
2315:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8113              		.loc 1 2315 1 is_stmt 0 view .LVU2472
 8114 0142 488B4424 		movq	40(%rsp), %rax
 8114      28
 8115 0147 64483304 		xorq	%fs:40, %rax
 8115      25280000 
 8115      00
 8116 0150 0F852D01 		jne	.L702
 8116      0000
 8117 0156 4883C438 		addq	$56, %rsp
 8118              		.cfi_remember_state
 8119              		.cfi_def_cfa_offset 56
 8120 015a 5B       		popq	%rbx
 8121              		.cfi_def_cfa_offset 48
 8122 015b 5D       		popq	%rbp
 8123              		.cfi_def_cfa_offset 40
 8124              	.LVL917:
2315:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8125              		.loc 1 2315 1 view .LVU2473
 8126 015c 415C     		popq	%r12
 8127              		.cfi_def_cfa_offset 32
 8128              	.LVL918:
2315:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8129              		.loc 1 2315 1 view .LVU2474
 8130 015e 415D     		popq	%r13
 8131              		.cfi_def_cfa_offset 24
 8132 0160 415E     		popq	%r14
 8133              		.cfi_def_cfa_offset 16
 8134 0162 415F     		popq	%r15
 8135              		.cfi_def_cfa_offset 8
 8136 0164 C3       		ret
 8137              	.LVL919:
 8138              		.p2align 4,,10
 8139 0165 0F1F00   		.p2align 3
 8140              	.L697:
 8141              		.cfi_restore_state
2240:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 8142              		.loc 1 2240 7 is_stmt 1 view .LVU2475
 8143 0168 4489E6   		movl	%r12d, %esi
 8144              	.LVL920:
2240:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of place");
 8145              		.loc 1 2240 7 is_stmt 0 view .LVU2476
 8146 016b E8000000 		call	png_crc_finish
 8146      00
 8147              	.LVL921:
2241:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8148              		.loc 1 2241 7 is_stmt 1 view .LVU2477
 8149 0170 488D3500 		leaq	.LC10(%rip), %rsi
 8149      000000
 8150 0177 4889EF   		movq	%rbp, %rdi
 8151 017a E8000000 		call	png_chunk_benign_error@PLT
 8151      00
 8152              	.LVL922:
2242:fltk-1.3.4-1/png/pngrutil.c ****    }
 8153              		.loc 1 2242 7 view .LVU2478
 8154 017f EBC1     		jmp	.L671
 8155              	.LVL923:
 8156              		.p2align 4,,10
 8157 0181 0F1F8000 		.p2align 3
 8157      000000
 8158              	.L698:
2247:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 8159              		.loc 1 2247 7 view .LVU2479
 8160 0188 4489E6   		movl	%r12d, %esi
 8161              	.LVL924:
2247:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 8162              		.loc 1 2247 7 is_stmt 0 view .LVU2480
 8163 018b E8000000 		call	png_crc_finish
 8163      00
 8164              	.LVL925:
2248:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8165              		.loc 1 2248 7 is_stmt 1 view .LVU2481
 8166 0190 488D3500 		leaq	.LC13(%rip), %rsi
 8166      000000
 8167 0197 4889EF   		movq	%rbp, %rdi
 8168 019a E8000000 		call	png_chunk_benign_error@PLT
 8168      00
 8169              	.LVL926:
2249:fltk-1.3.4-1/png/pngrutil.c ****    }
 8170              		.loc 1 2249 7 view .LVU2482
 8171 019f EBA1     		jmp	.L671
 8172              	.LVL927:
 8173              		.p2align 4,,10
 8174 01a1 0F1F8000 		.p2align 3
 8174      000000
 8175              	.L701:
2281:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8176              		.loc 1 2281 7 view .LVU2483
 8177 01a8 488D3500 		leaq	.LC34(%rip), %rsi
 8177      000000
 8178 01af 4889EF   		movq	%rbp, %rdi
 8179 01b2 E8000000 		call	png_chunk_benign_error@PLT
 8179      00
 8180              	.LVL928:
2282:fltk-1.3.4-1/png/pngrutil.c ****    }
 8181              		.loc 1 2282 7 view .LVU2484
 8182 01b7 EB89     		jmp	.L671
 8183 01b9 0F1F8000 		.p2align 4,,10
 8183      000000
 8184              		.p2align 3
 8185              	.L680:
2293:fltk-1.3.4-1/png/pngrutil.c **** 
 8186              		.loc 1 2293 7 view .LVU2485
 8187 01c0 488D3500 		leaq	.LC35(%rip), %rsi
 8187      000000
 8188 01c7 4889EF   		movq	%rbp, %rdi
 8189 01ca E8000000 		call	png_chunk_benign_error@PLT
 8189      00
 8190              	.LVL929:
 8191 01cf E96EFFFF 		jmp	.L671
 8191      FF
 8192              	.LVL930:
 8193              		.p2align 4,,10
 8194 01d4 0F1F4000 		.p2align 3
 8195              	.L700:
2267:fltk-1.3.4-1/png/pngrutil.c ****       png_crc_finish(png_ptr, length);
 8196              		.loc 1 2267 7 view .LVU2486
 8197 01d8 4889EF   		movq	%rbp, %rdi
 8198 01db 488D3500 		leaq	.LC20(%rip), %rsi
 8198      000000
 8199 01e2 E8000000 		call	png_chunk_benign_error@PLT
 8199      00
 8200              	.LVL931:
2268:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8201              		.loc 1 2268 7 view .LVU2487
 8202 01e7 4489E6   		movl	%r12d, %esi
 8203 01ea 4889EF   		movq	%rbp, %rdi
 8204 01ed E8000000 		call	png_crc_finish
 8204      00
 8205              	.LVL932:
2269:fltk-1.3.4-1/png/pngrutil.c ****    }
 8206              		.loc 1 2269 7 view .LVU2488
 8207 01f2 E94BFFFF 		jmp	.L671
 8207      FF
 8208              	.L681:
 8209              	.LBB325:
2303:fltk-1.3.4-1/png/pngrutil.c ****           &state, &i) == 0 || i != length)
 8210              		.loc 1 2303 11 is_stmt 0 view .LVU2489
 8211 01f7 4C89F9   		movq	%r15, %rcx
 8212 01fa 4C89F2   		movq	%r14, %rdx
 8213 01fd 4C89E6   		movq	%r12, %rsi
 8214 0200 4889DF   		movq	%rbx, %rdi
 8215 0203 4C894424 		movq	%r8, 8(%rsp)
 8215      08
2300:fltk-1.3.4-1/png/pngrutil.c **** 
 8216              		.loc 1 2300 7 is_stmt 1 view .LVU2490
 8217              	.LVL933:
2302:fltk-1.3.4-1/png/pngrutil.c ****       if (png_check_fp_number((png_const_charp)buffer, length,
 8218              		.loc 1 2302 7 view .LVU2491
2302:fltk-1.3.4-1/png/pngrutil.c ****       if (png_check_fp_number((png_const_charp)buffer, length,
 8219              		.loc 1 2302 13 is_stmt 0 view .LVU2492
 8220 0208 C744241C 		movl	$0, 28(%rsp)
 8220      00000000 
2303:fltk-1.3.4-1/png/pngrutil.c ****           &state, &i) == 0 || i != length)
 8221              		.loc 1 2303 7 is_stmt 1 view .LVU2493
2303:fltk-1.3.4-1/png/pngrutil.c ****           &state, &i) == 0 || i != length)
 8222              		.loc 1 2303 11 is_stmt 0 view .LVU2494
 8223 0210 E8000000 		call	png_check_fp_number@PLT
 8223      00
 8224              	.LVL934:
2303:fltk-1.3.4-1/png/pngrutil.c ****           &state, &i) == 0 || i != length)
 8225              		.loc 1 2303 10 view .LVU2495
 8226 0215 85C0     		testl	%eax, %eax
 8227 0217 740C     		je	.L682
2304:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "bad height format");
 8228              		.loc 1 2304 28 view .LVU2496
 8229 0219 4C3B6424 		cmpq	32(%rsp), %r12
 8229      20
 8230 021e 4C8B4424 		movq	8(%rsp), %r8
 8230      08
 8231 0223 7414     		je	.L683
 8232              	.L682:
2305:fltk-1.3.4-1/png/pngrutil.c **** 
 8233              		.loc 1 2305 10 is_stmt 1 view .LVU2497
 8234 0225 488D3500 		leaq	.LC37(%rip), %rsi
 8234      000000
 8235 022c 4889EF   		movq	%rbp, %rdi
 8236 022f E8000000 		call	png_chunk_benign_error@PLT
 8236      00
 8237              	.LVL935:
 8238 0234 E909FFFF 		jmp	.L671
 8238      FF
 8239              	.L683:
2307:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "non-positive height");
 8240              		.loc 1 2307 12 view .LVU2498
2307:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "non-positive height");
 8241              		.loc 1 2307 16 is_stmt 0 view .LVU2499
 8242 0239 8B44241C 		movl	28(%rsp), %eax
 8243 023d 25880100 		andl	$392, %eax
 8243      00
2307:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "non-positive height");
 8244              		.loc 1 2307 15 view .LVU2500
 8245 0242 3D080100 		cmpl	$264, %eax
 8245      00
 8246 0247 7414     		je	.L684
2308:fltk-1.3.4-1/png/pngrutil.c **** 
 8247              		.loc 1 2308 10 is_stmt 1 view .LVU2501
 8248 0249 488D3500 		leaq	.LC38(%rip), %rsi
 8248      000000
 8249 0250 4889EF   		movq	%rbp, %rdi
 8250 0253 E8000000 		call	png_chunk_benign_error@PLT
 8250      00
 8251              	.LVL936:
 8252 0258 E9E5FEFF 		jmp	.L671
 8252      FF
 8253              	.L684:
2312:fltk-1.3.4-1/png/pngrutil.c ****             (png_charp)buffer+1, (png_charp)buffer+heighti);
 8254              		.loc 1 2312 10 view .LVU2502
 8255 025d 0FB613   		movzbl	(%rbx), %edx
 8256 0260 488D4B01 		leaq	1(%rbx), %rcx
 8257 0264 4901D8   		addq	%rbx, %r8
 8258 0267 4C89EE   		movq	%r13, %rsi
 8259 026a 4889EF   		movq	%rbp, %rdi
 8260 026d E8000000 		call	png_set_sCAL_s@PLT
 8260      00
 8261              	.LVL937:
 8262 0272 E9CBFEFF 		jmp	.L671
 8262      FF
 8263              	.LVL938:
 8264              	.L696:
2312:fltk-1.3.4-1/png/pngrutil.c ****             (png_charp)buffer+1, (png_charp)buffer+heighti);
 8265              		.loc 1 2312 10 is_stmt 0 view .LVU2503
 8266              	.LBE325:
2236:fltk-1.3.4-1/png/pngrutil.c **** 
 8267              		.loc 1 2236 7 is_stmt 1 view .LVU2504
 8268 0277 488D3500 		leaq	.LC12(%rip), %rsi
 8268      000000
 8269              	.LVL939:
2236:fltk-1.3.4-1/png/pngrutil.c **** 
 8270              		.loc 1 2236 7 is_stmt 0 view .LVU2505
 8271 027e E8000000 		call	png_chunk_error@PLT
 8271      00
 8272              	.LVL940:
 8273              	.L702:
2315:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8274              		.loc 1 2315 1 view .LVU2506
 8275 0283 E8000000 		call	__stack_chk_fail@PLT
 8275      00
 8276              	.LVL941:
 8277              		.cfi_endproc
 8278              	.LFE71:
 8280              		.section	.text.png_handle_tIME,"ax",@progbits
 8281              		.p2align 4
 8282              		.globl	png_handle_tIME
 8284              	png_handle_tIME:
 8285              	.LVL942:
 8286              	.LFB72:
2321:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[7];
 8287              		.loc 1 2321 1 is_stmt 1 view -0
 8288              		.cfi_startproc
2321:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[7];
 8289              		.loc 1 2321 1 is_stmt 0 view .LVU2508
 8290 0000 F30F1EFA 		endbr64
 8291 0004 4154     		pushq	%r12
 8292              		.cfi_def_cfa_offset 16
 8293              		.cfi_offset 12, -16
 8294 0006 55       		pushq	%rbp
 8295              		.cfi_def_cfa_offset 24
 8296              		.cfi_offset 6, -24
 8297 0007 4889FD   		movq	%rdi, %rbp
 8298 000a 4883EC28 		subq	$40, %rsp
 8299              		.cfi_def_cfa_offset 64
2321:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[7];
 8300              		.loc 1 2321 1 view .LVU2509
 8301 000e 64488B04 		movq	%fs:40, %rax
 8301      25280000 
 8301      00
 8302 0017 48894424 		movq	%rax, 24(%rsp)
 8302      18
 8303 001c 31C0     		xorl	%eax, %eax
2322:fltk-1.3.4-1/png/pngrutil.c ****    png_time mod_time;
 8304              		.loc 1 2322 4 is_stmt 1 view .LVU2510
2323:fltk-1.3.4-1/png/pngrutil.c **** 
 8305              		.loc 1 2323 4 view .LVU2511
2325:fltk-1.3.4-1/png/pngrutil.c **** 
 8306              		.loc 1 2325 4 view .LVU2512
2327:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8307              		.loc 1 2327 4 view .LVU2513
2327:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8308              		.loc 1 2327 16 is_stmt 0 view .LVU2514
 8309 001e 8B872C01 		movl	300(%rdi), %eax
 8309      0000
2327:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8310              		.loc 1 2327 7 view .LVU2515
 8311 0024 A801     		testb	$1, %al
 8312 0026 0F84D700 		je	.L721
 8312      0000
 8313 002c 4989F4   		movq	%rsi, %r12
 8314 002f 89D6     		movl	%edx, %esi
 8315              	.LVL943:
2330:fltk-1.3.4-1/png/pngrutil.c ****    {
 8316              		.loc 1 2330 9 is_stmt 1 view .LVU2516
2330:fltk-1.3.4-1/png/pngrutil.c ****    {
 8317              		.loc 1 2330 12 is_stmt 0 view .LVU2517
 8318 0031 4D85E4   		testq	%r12, %r12
 8319 0034 740C     		je	.L705
2330:fltk-1.3.4-1/png/pngrutil.c ****    {
 8320              		.loc 1 2330 30 discriminator 1 view .LVU2518
 8321 0036 41F64424 		testb	$2, 9(%r12)
 8321      0902
 8322 003c 0F85A600 		jne	.L722
 8322      0000
 8323              	.L705:
2337:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 8324              		.loc 1 2337 4 is_stmt 1 view .LVU2519
2337:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 8325              		.loc 1 2337 7 is_stmt 0 view .LVU2520
 8326 0042 A804     		testb	$4, %al
 8327 0044 7409     		je	.L707
2338:fltk-1.3.4-1/png/pngrutil.c **** 
 8328              		.loc 1 2338 7 is_stmt 1 view .LVU2521
2338:fltk-1.3.4-1/png/pngrutil.c **** 
 8329              		.loc 1 2338 21 is_stmt 0 view .LVU2522
 8330 0046 83C808   		orl	$8, %eax
 8331 0049 89852C01 		movl	%eax, 300(%rbp)
 8331      0000
 8332              	.L707:
2340:fltk-1.3.4-1/png/pngrutil.c ****    {
 8333              		.loc 1 2340 4 is_stmt 1 view .LVU2523
2340:fltk-1.3.4-1/png/pngrutil.c ****    {
 8334              		.loc 1 2340 7 is_stmt 0 view .LVU2524
 8335 004f 83FE07   		cmpl	$7, %esi
 8336 0052 7574     		jne	.L723
2347:fltk-1.3.4-1/png/pngrutil.c **** 
 8337              		.loc 1 2347 4 is_stmt 1 view .LVU2525
 8338              	.LVL944:
 8339              	.LBB326:
 8340              	.LBI326:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 8341              		.loc 1 187 1 view .LVU2526
 8342              	.LBB327:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8343              		.loc 1 189 4 view .LVU2527
 8344 0054 488D7424 		leaq	17(%rsp), %rsi
 8344      11
 8345              	.LVL945:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8346              		.loc 1 189 4 is_stmt 0 view .LVU2528
 8347 0059 4889EF   		movq	%rbp, %rdi
 8348              	.LVL946:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8349              		.loc 1 189 4 view .LVU2529
 8350 005c BA070000 		movl	$7, %edx
 8350      00
 8351              	.LVL947:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8352              		.loc 1 189 4 view .LVU2530
 8353 0061 E8000000 		call	png_crc_read.part.0
 8353      00
 8354              	.LVL948:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8355              		.loc 1 189 4 view .LVU2531
 8356              	.LBE327:
 8357              	.LBE326:
2349:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8358              		.loc 1 2349 4 is_stmt 1 view .LVU2532
2349:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8359              		.loc 1 2349 8 is_stmt 0 view .LVU2533
 8360 0066 31F6     		xorl	%esi, %esi
 8361 0068 4889EF   		movq	%rbp, %rdi
 8362 006b E8000000 		call	png_crc_finish
 8362      00
 8363              	.LVL949:
2349:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8364              		.loc 1 2349 7 view .LVU2534
 8365 0070 85C0     		testl	%eax, %eax
 8366 0072 7535     		jne	.L703
2352:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.minute = buf[5];
 8367              		.loc 1 2352 4 is_stmt 1 view .LVU2535
2353:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.hour = buf[4];
 8368              		.loc 1 2353 4 view .LVU2536
2354:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.day = buf[3];
 8369              		.loc 1 2354 4 view .LVU2537
2355:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.month = buf[2];
 8370              		.loc 1 2355 4 view .LVU2538
2356:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.year = png_get_uint_16(buf);
 8371              		.loc 1 2356 4 view .LVU2539
2356:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.year = png_get_uint_16(buf);
 8372              		.loc 1 2356 19 is_stmt 0 view .LVU2540
 8373 0074 8B442413 		movl	19(%rsp), %eax
2357:fltk-1.3.4-1/png/pngrutil.c **** 
 8374              		.loc 1 2357 20 view .LVU2541
 8375 0078 0FB65424 		movzbl	18(%rsp), %edx
 8375      12
2359:fltk-1.3.4-1/png/pngrutil.c **** }
 8376              		.loc 1 2359 4 view .LVU2542
 8377 007d 4C89E6   		movq	%r12, %rsi
 8378 0080 4889EF   		movq	%rbp, %rdi
2356:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.year = png_get_uint_16(buf);
 8379              		.loc 1 2356 19 view .LVU2543
 8380 0083 8944240A 		movl	%eax, 10(%rsp)
2352:fltk-1.3.4-1/png/pngrutil.c ****    mod_time.minute = buf[5];
 8381              		.loc 1 2352 20 view .LVU2544
 8382 0087 0FB64424 		movzbl	23(%rsp), %eax
 8382      17
 8383 008c 8844240E 		movb	%al, 14(%rsp)
2357:fltk-1.3.4-1/png/pngrutil.c **** 
 8384              		.loc 1 2357 4 is_stmt 1 view .LVU2545
2357:fltk-1.3.4-1/png/pngrutil.c **** 
 8385              		.loc 1 2357 20 is_stmt 0 view .LVU2546
 8386 0090 0FB64424 		movzbl	17(%rsp), %eax
 8386      11
 8387 0095 C1E008   		sall	$8, %eax
 8388 0098 01D0     		addl	%edx, %eax
2359:fltk-1.3.4-1/png/pngrutil.c **** }
 8389              		.loc 1 2359 4 view .LVU2547
 8390 009a 488D5424 		leaq	8(%rsp), %rdx
 8390      08
2357:fltk-1.3.4-1/png/pngrutil.c **** 
 8391              		.loc 1 2357 20 view .LVU2548
 8392 009f 66894424 		movw	%ax, 8(%rsp)
 8392      08
2359:fltk-1.3.4-1/png/pngrutil.c **** }
 8393              		.loc 1 2359 4 is_stmt 1 view .LVU2549
 8394 00a4 E8000000 		call	png_set_tIME@PLT
 8394      00
 8395              	.LVL950:
 8396              	.L703:
2360:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8397              		.loc 1 2360 1 is_stmt 0 view .LVU2550
 8398 00a9 488B4424 		movq	24(%rsp), %rax
 8398      18
 8399 00ae 64483304 		xorq	%fs:40, %rax
 8399      25280000 
 8399      00
 8400 00b7 7545     		jne	.L724
 8401 00b9 4883C428 		addq	$40, %rsp
 8402              		.cfi_remember_state
 8403              		.cfi_def_cfa_offset 24
 8404 00bd 5D       		popq	%rbp
 8405              		.cfi_def_cfa_offset 16
 8406              	.LVL951:
2360:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8407              		.loc 1 2360 1 view .LVU2551
 8408 00be 415C     		popq	%r12
 8409              		.cfi_def_cfa_offset 8
 8410              	.LVL952:
2360:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8411              		.loc 1 2360 1 view .LVU2552
 8412 00c0 C3       		ret
 8413              	.LVL953:
 8414              		.p2align 4,,10
 8415 00c1 0F1F8000 		.p2align 3
 8415      000000
 8416              	.L723:
 8417              		.cfi_restore_state
2342:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 8418              		.loc 1 2342 7 is_stmt 1 view .LVU2553
 8419 00c8 4889EF   		movq	%rbp, %rdi
 8420              	.LVL954:
2342:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "invalid");
 8421              		.loc 1 2342 7 is_stmt 0 view .LVU2554
 8422 00cb E8000000 		call	png_crc_finish
 8422      00
 8423              	.LVL955:
2343:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8424              		.loc 1 2343 7 is_stmt 1 view .LVU2555
 8425 00d0 488D3500 		leaq	.LC11(%rip), %rsi
 8425      000000
 8426 00d7 4889EF   		movq	%rbp, %rdi
 8427 00da E8000000 		call	png_chunk_benign_error@PLT
 8427      00
 8428              	.LVL956:
2344:fltk-1.3.4-1/png/pngrutil.c ****    }
 8429              		.loc 1 2344 7 view .LVU2556
 8430 00df EBC8     		jmp	.L703
 8431              	.LVL957:
 8432              		.p2align 4,,10
 8433 00e1 0F1F8000 		.p2align 3
 8433      000000
 8434              	.L722:
2332:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "duplicate");
 8435              		.loc 1 2332 7 view .LVU2557
 8436 00e8 E8000000 		call	png_crc_finish
 8436      00
 8437              	.LVL958:
2333:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8438              		.loc 1 2333 7 view .LVU2558
 8439 00ed 488D3500 		leaq	.LC13(%rip), %rsi
 8439      000000
 8440 00f4 4889EF   		movq	%rbp, %rdi
 8441 00f7 E8000000 		call	png_chunk_benign_error@PLT
 8441      00
 8442              	.LVL959:
2334:fltk-1.3.4-1/png/pngrutil.c ****    }
 8443              		.loc 1 2334 7 view .LVU2559
 8444 00fc EBAB     		jmp	.L703
 8445              	.L724:
2360:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8446              		.loc 1 2360 1 is_stmt 0 view .LVU2560
 8447 00fe E8000000 		call	__stack_chk_fail@PLT
 8447      00
 8448              	.LVL960:
 8449              	.L721:
2328:fltk-1.3.4-1/png/pngrutil.c **** 
 8450              		.loc 1 2328 7 is_stmt 1 view .LVU2561
 8451 0103 488D3500 		leaq	.LC12(%rip), %rsi
 8451      000000
 8452              	.LVL961:
2328:fltk-1.3.4-1/png/pngrutil.c **** 
 8453              		.loc 1 2328 7 is_stmt 0 view .LVU2562
 8454 010a E8000000 		call	png_chunk_error@PLT
 8454      00
 8455              	.LVL962:
2328:fltk-1.3.4-1/png/pngrutil.c **** 
 8456              		.loc 1 2328 7 view .LVU2563
 8457              		.cfi_endproc
 8458              	.LFE72:
 8460              		.section	.rodata.png_handle_tEXt.str1.1,"aMS",@progbits,1
 8461              	.LC39:
 8462 0000 6E6F2073 		.string	"no space in chunk cache"
 8462      70616365 
 8462      20696E20 
 8462      6368756E 
 8462      6B206361 
 8463              		.section	.rodata.png_handle_tEXt.str1.8,"aMS",@progbits,1
 8464              		.align 8
 8465              	.LC40:
 8466 0000 496E7375 		.string	"Insufficient memory to process text chunk"
 8466      66666963 
 8466      69656E74 
 8466      206D656D 
 8466      6F727920 
 8467              		.section	.text.png_handle_tEXt,"ax",@progbits
 8468              		.p2align 4
 8469              		.globl	png_handle_tEXt
 8471              	png_handle_tEXt:
 8472              	.LVL963:
 8473              	.LFB73:
2367:fltk-1.3.4-1/png/pngrutil.c ****    png_text  text_info;
 8474              		.loc 1 2367 1 is_stmt 1 view -0
 8475              		.cfi_startproc
2367:fltk-1.3.4-1/png/pngrutil.c ****    png_text  text_info;
 8476              		.loc 1 2367 1 is_stmt 0 view .LVU2565
 8477 0000 F30F1EFA 		endbr64
 8478 0004 4155     		pushq	%r13
 8479              		.cfi_def_cfa_offset 16
 8480              		.cfi_offset 13, -16
 8481 0006 4989F5   		movq	%rsi, %r13
 8482 0009 4154     		pushq	%r12
 8483              		.cfi_def_cfa_offset 24
 8484              		.cfi_offset 12, -24
 8485 000b 4189D4   		movl	%edx, %r12d
 8486 000e 55       		pushq	%rbp
 8487              		.cfi_def_cfa_offset 32
 8488              		.cfi_offset 6, -32
 8489 000f 4889FD   		movq	%rdi, %rbp
 8490 0012 53       		pushq	%rbx
 8491              		.cfi_def_cfa_offset 40
 8492              		.cfi_offset 3, -40
 8493 0013 4883EC48 		subq	$72, %rsp
 8494              		.cfi_def_cfa_offset 112
2367:fltk-1.3.4-1/png/pngrutil.c ****    png_text  text_info;
 8495              		.loc 1 2367 1 view .LVU2566
 8496 0017 64488B04 		movq	%fs:40, %rax
 8496      25280000 
 8496      00
 8497 0020 48894424 		movq	%rax, 56(%rsp)
 8497      38
 8498 0025 31C0     		xorl	%eax, %eax
2368:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
 8499              		.loc 1 2368 4 is_stmt 1 view .LVU2567
2369:fltk-1.3.4-1/png/pngrutil.c ****    png_charp key;
 8500              		.loc 1 2369 4 view .LVU2568
2370:fltk-1.3.4-1/png/pngrutil.c ****    png_charp text;
 8501              		.loc 1 2370 4 view .LVU2569
2371:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 skip = 0;
 8502              		.loc 1 2371 4 view .LVU2570
2372:fltk-1.3.4-1/png/pngrutil.c **** 
 8503              		.loc 1 2372 4 view .LVU2571
 8504              	.LVL964:
2374:fltk-1.3.4-1/png/pngrutil.c **** 
 8505              		.loc 1 2374 4 view .LVU2572
2377:fltk-1.3.4-1/png/pngrutil.c ****    {
 8506              		.loc 1 2377 4 view .LVU2573
2377:fltk-1.3.4-1/png/pngrutil.c ****    {
 8507              		.loc 1 2377 15 is_stmt 0 view .LVU2574
 8508 0027 8B876404 		movl	1124(%rdi), %eax
 8508      0000
2377:fltk-1.3.4-1/png/pngrutil.c ****    {
 8509              		.loc 1 2377 7 view .LVU2575
 8510 002d 85C0     		testl	%eax, %eax
 8511 002f 741B     		je	.L726
2379:fltk-1.3.4-1/png/pngrutil.c ****       {
 8512              		.loc 1 2379 7 is_stmt 1 view .LVU2576
2379:fltk-1.3.4-1/png/pngrutil.c ****       {
 8513              		.loc 1 2379 10 is_stmt 0 view .LVU2577
 8514 0031 83F801   		cmpl	$1, %eax
 8515 0034 0F841E01 		je	.L749
 8515      0000
2385:fltk-1.3.4-1/png/pngrutil.c ****       {
 8516              		.loc 1 2385 7 is_stmt 1 view .LVU2578
2385:fltk-1.3.4-1/png/pngrutil.c ****       {
 8517              		.loc 1 2385 11 is_stmt 0 view .LVU2579
 8518 003a 83E801   		subl	$1, %eax
2385:fltk-1.3.4-1/png/pngrutil.c ****       {
 8519              		.loc 1 2385 10 view .LVU2580
 8520 003d 89876404 		movl	%eax, 1124(%rdi)
 8520      0000
 8521 0043 83F801   		cmpl	$1, %eax
 8522 0046 0F841C01 		je	.L750
 8522      0000
 8523              	.L726:
2394:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8524              		.loc 1 2394 4 is_stmt 1 view .LVU2581
2394:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8525              		.loc 1 2394 16 is_stmt 0 view .LVU2582
 8526 004c 8B852C01 		movl	300(%rbp), %eax
 8526      0000
2394:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8527              		.loc 1 2394 7 view .LVU2583
 8528 0052 A801     		testb	$1, %al
 8529 0054 0F844201 		je	.L751
 8529      0000
2397:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 8530              		.loc 1 2397 4 is_stmt 1 view .LVU2584
2397:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 8531              		.loc 1 2397 7 is_stmt 0 view .LVU2585
 8532 005a A804     		testb	$4, %al
 8533 005c 0F85CE00 		jne	.L752
 8533      0000
 8534              	.L730:
2409:fltk-1.3.4-1/png/pngrutil.c **** 
 8535              		.loc 1 2409 4 is_stmt 1 view .LVU2586
2409:fltk-1.3.4-1/png/pngrutil.c **** 
 8536              		.loc 1 2409 13 is_stmt 0 view .LVU2587
 8537 0062 418D7424 		leal	1(%r12), %esi
 8537      01
 8538              	.LVL965:
2409:fltk-1.3.4-1/png/pngrutil.c **** 
 8539              		.loc 1 2409 13 view .LVU2588
 8540 0067 BA010000 		movl	$1, %edx
 8540      00
 8541              	.LVL966:
2409:fltk-1.3.4-1/png/pngrutil.c **** 
 8542              		.loc 1 2409 13 view .LVU2589
 8543 006c 4889EF   		movq	%rbp, %rdi
 8544              	.LVL967:
2409:fltk-1.3.4-1/png/pngrutil.c **** 
 8545              		.loc 1 2409 13 view .LVU2590
 8546 006f E8000000 		call	png_read_buffer
 8546      00
 8547              	.LVL968:
 8548 0074 4889C3   		movq	%rax, %rbx
 8549              	.LVL969:
2411:fltk-1.3.4-1/png/pngrutil.c ****    {
 8550              		.loc 1 2411 4 is_stmt 1 view .LVU2591
2411:fltk-1.3.4-1/png/pngrutil.c ****    {
 8551              		.loc 1 2411 7 is_stmt 0 view .LVU2592
 8552 0077 4885C0   		testq	%rax, %rax
 8553 007a 0F840801 		je	.L753
 8553      0000
2417:fltk-1.3.4-1/png/pngrutil.c **** 
 8554              		.loc 1 2417 4 is_stmt 1 view .LVU2593
 8555              	.LVL970:
 8556              	.LBB328:
 8557              	.LBI328:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 8558              		.loc 1 187 1 view .LVU2594
 8559              	.LBB329:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8560              		.loc 1 189 4 view .LVU2595
 8561 0080 4889C6   		movq	%rax, %rsi
 8562 0083 4889EF   		movq	%rbp, %rdi
 8563 0086 4489E2   		movl	%r12d, %edx
 8564 0089 E8000000 		call	png_crc_read.part.0
 8564      00
 8565              	.LVL971:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8566              		.loc 1 189 4 is_stmt 0 view .LVU2596
 8567              	.LBE329:
 8568              	.LBE328:
2419:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8569              		.loc 1 2419 4 is_stmt 1 view .LVU2597
2419:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8570              		.loc 1 2419 8 is_stmt 0 view .LVU2598
 8571 008e 31F6     		xorl	%esi, %esi
 8572 0090 4889EF   		movq	%rbp, %rdi
 8573 0093 E8000000 		call	png_crc_finish
 8573      00
 8574              	.LVL972:
2419:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8575              		.loc 1 2419 7 view .LVU2599
 8576 0098 85C0     		testl	%eax, %eax
 8577 009a 7575     		jne	.L725
2422:fltk-1.3.4-1/png/pngrutil.c ****    key[length] = 0;
 8578              		.loc 1 2422 4 is_stmt 1 view .LVU2600
 8579              	.LVL973:
2423:fltk-1.3.4-1/png/pngrutil.c **** 
 8580              		.loc 1 2423 4 view .LVU2601
2423:fltk-1.3.4-1/png/pngrutil.c **** 
 8581              		.loc 1 2423 7 is_stmt 0 view .LVU2602
 8582 009c 4901DC   		addq	%rbx, %r12
 8583              	.LVL974:
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8584              		.loc 1 2425 4 view .LVU2603
 8585 009f 4889DF   		movq	%rbx, %rdi
2423:fltk-1.3.4-1/png/pngrutil.c **** 
 8586              		.loc 1 2423 16 view .LVU2604
 8587 00a2 41C60424 		movb	$0, (%r12)
 8587      00
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8588              		.loc 1 2425 4 is_stmt 1 view .LVU2605
 8589              	.LVL975:
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8590              		.loc 1 2425 21 view .LVU2606
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8591              		.loc 1 2425 4 is_stmt 0 view .LVU2607
 8592 00a7 803B00   		cmpb	$0, (%rbx)
 8593 00aa 740D     		je	.L733
 8594              	.LVL976:
 8595 00ac 0F1F4000 		.p2align 4,,10
 8596              		.p2align 3
 8597              	.L734:
2426:fltk-1.3.4-1/png/pngrutil.c **** 
 8598              		.loc 1 2426 43 is_stmt 1 discriminator 3 view .LVU2608
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8599              		.loc 1 2425 28 discriminator 3 view .LVU2609
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8600              		.loc 1 2425 32 is_stmt 0 discriminator 3 view .LVU2610
 8601 00b0 4883C701 		addq	$1, %rdi
 8602              	.LVL977:
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8603              		.loc 1 2425 21 is_stmt 1 discriminator 3 view .LVU2611
2425:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of key */ ;
 8604              		.loc 1 2425 4 is_stmt 0 discriminator 3 view .LVU2612
 8605 00b4 803F00   		cmpb	$0, (%rdi)
 8606 00b7 75F7     		jne	.L734
 8607              	.L733:
2428:fltk-1.3.4-1/png/pngrutil.c ****       text++;
 8608              		.loc 1 2428 4 is_stmt 1 view .LVU2613
2429:fltk-1.3.4-1/png/pngrutil.c **** 
 8609              		.loc 1 2429 11 is_stmt 0 view .LVU2614
 8610 00b9 31C0     		xorl	%eax, %eax
 8611 00bb 4939FC   		cmpq	%rdi, %r12
2431:fltk-1.3.4-1/png/pngrutil.c ****    text_info.key = key;
 8612              		.loc 1 2431 26 view .LVU2615
 8613 00be C70424FF 		movl	$-1, (%rsp)
 8613      FFFFFF
2429:fltk-1.3.4-1/png/pngrutil.c **** 
 8614              		.loc 1 2429 11 view .LVU2616
 8615 00c5 0F95C0   		setne	%al
2432:fltk-1.3.4-1/png/pngrutil.c ****    text_info.lang = NULL;
 8616              		.loc 1 2432 18 view .LVU2617
 8617 00c8 48895C24 		movq	%rbx, 8(%rsp)
 8617      08
2433:fltk-1.3.4-1/png/pngrutil.c ****    text_info.lang_key = NULL;
 8618              		.loc 1 2433 19 view .LVU2618
 8619 00cd 48C74424 		movq	$0, 40(%rsp)
 8619      28000000 
 8619      00
2429:fltk-1.3.4-1/png/pngrutil.c **** 
 8620              		.loc 1 2429 11 view .LVU2619
 8621 00d6 4801C7   		addq	%rax, %rdi
 8622              	.LVL978:
2431:fltk-1.3.4-1/png/pngrutil.c ****    text_info.key = key;
 8623              		.loc 1 2431 4 is_stmt 1 view .LVU2620
2432:fltk-1.3.4-1/png/pngrutil.c ****    text_info.lang = NULL;
 8624              		.loc 1 2432 4 view .LVU2621
2433:fltk-1.3.4-1/png/pngrutil.c ****    text_info.lang_key = NULL;
 8625              		.loc 1 2433 4 view .LVU2622
2434:fltk-1.3.4-1/png/pngrutil.c ****    text_info.itxt_length = 0;
 8626              		.loc 1 2434 4 view .LVU2623
2436:fltk-1.3.4-1/png/pngrutil.c ****    text_info.text_length = strlen(text);
 8627              		.loc 1 2436 19 is_stmt 0 view .LVU2624
 8628 00d9 48897C24 		movq	%rdi, 16(%rsp)
 8628      10
2434:fltk-1.3.4-1/png/pngrutil.c ****    text_info.itxt_length = 0;
 8629              		.loc 1 2434 23 view .LVU2625
 8630 00de 48C74424 		movq	$0, 48(%rsp)
 8630      30000000 
 8630      00
2435:fltk-1.3.4-1/png/pngrutil.c ****    text_info.text = text;
 8631              		.loc 1 2435 4 is_stmt 1 view .LVU2626
2435:fltk-1.3.4-1/png/pngrutil.c ****    text_info.text = text;
 8632              		.loc 1 2435 26 is_stmt 0 view .LVU2627
 8633 00e7 48C74424 		movq	$0, 32(%rsp)
 8633      20000000 
 8633      00
2436:fltk-1.3.4-1/png/pngrutil.c ****    text_info.text_length = strlen(text);
 8634              		.loc 1 2436 4 is_stmt 1 view .LVU2628
2437:fltk-1.3.4-1/png/pngrutil.c **** 
 8635              		.loc 1 2437 4 view .LVU2629
2437:fltk-1.3.4-1/png/pngrutil.c **** 
 8636              		.loc 1 2437 28 is_stmt 0 view .LVU2630
 8637 00f0 E8000000 		call	strlen@PLT
 8637      00
 8638              	.LVL979:
2439:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "Insufficient memory to process text chunk");
 8639              		.loc 1 2439 8 view .LVU2631
 8640 00f5 4889E2   		movq	%rsp, %rdx
 8641 00f8 B9010000 		movl	$1, %ecx
 8641      00
 8642 00fd 4C89EE   		movq	%r13, %rsi
 8643 0100 4889EF   		movq	%rbp, %rdi
2437:fltk-1.3.4-1/png/pngrutil.c **** 
 8644              		.loc 1 2437 26 view .LVU2632
 8645 0103 48894424 		movq	%rax, 24(%rsp)
 8645      18
2439:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "Insufficient memory to process text chunk");
 8646              		.loc 1 2439 4 is_stmt 1 view .LVU2633
2439:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "Insufficient memory to process text chunk");
 8647              		.loc 1 2439 8 is_stmt 0 view .LVU2634
 8648 0108 E8000000 		call	png_set_text_2@PLT
 8648      00
 8649              	.LVL980:
2439:fltk-1.3.4-1/png/pngrutil.c ****       png_warning(png_ptr, "Insufficient memory to process text chunk");
 8650              		.loc 1 2439 7 view .LVU2635
 8651 010d 85C0     		testl	%eax, %eax
 8652 010f 752F     		jne	.L754
 8653              	.LVL981:
 8654              	.L725:
2441:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8655              		.loc 1 2441 1 view .LVU2636
 8656 0111 488B4424 		movq	56(%rsp), %rax
 8656      38
 8657 0116 64483304 		xorq	%fs:40, %rax
 8657      25280000 
 8657      00
 8658 011f 0F858600 		jne	.L755
 8658      0000
 8659 0125 4883C448 		addq	$72, %rsp
 8660              		.cfi_remember_state
 8661              		.cfi_def_cfa_offset 40
 8662 0129 5B       		popq	%rbx
 8663              		.cfi_def_cfa_offset 32
 8664 012a 5D       		popq	%rbp
 8665              		.cfi_def_cfa_offset 24
 8666              	.LVL982:
2441:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8667              		.loc 1 2441 1 view .LVU2637
 8668 012b 415C     		popq	%r12
 8669              		.cfi_def_cfa_offset 16
 8670 012d 415D     		popq	%r13
 8671              		.cfi_def_cfa_offset 8
 8672              	.LVL983:
2441:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8673              		.loc 1 2441 1 view .LVU2638
 8674 012f C3       		ret
 8675              	.LVL984:
 8676              		.p2align 4,,10
 8677              		.p2align 3
 8678              	.L752:
 8679              		.cfi_restore_state
2398:fltk-1.3.4-1/png/pngrutil.c **** 
 8680              		.loc 1 2398 7 is_stmt 1 view .LVU2639
2398:fltk-1.3.4-1/png/pngrutil.c **** 
 8681              		.loc 1 2398 21 is_stmt 0 view .LVU2640
 8682 0130 83C808   		orl	$8, %eax
 8683 0133 89852C01 		movl	%eax, 300(%rbp)
 8683      0000
 8684 0139 E924FFFF 		jmp	.L730
 8684      FF
 8685              	.LVL985:
 8686 013e 6690     		.p2align 4,,10
 8687              		.p2align 3
 8688              	.L754:
2440:fltk-1.3.4-1/png/pngrutil.c **** }
 8689              		.loc 1 2440 7 is_stmt 1 view .LVU2641
 8690 0140 488D3500 		leaq	.LC40(%rip), %rsi
 8690      000000
 8691 0147 4889EF   		movq	%rbp, %rdi
 8692 014a E8000000 		call	png_warning@PLT
 8692      00
 8693              	.LVL986:
 8694 014f EBC0     		jmp	.L725
 8695              	.LVL987:
 8696              		.p2align 4,,10
 8697 0151 0F1F8000 		.p2align 3
 8697      000000
 8698              	.L749:
2381:fltk-1.3.4-1/png/pngrutil.c ****          return;
 8699              		.loc 1 2381 10 view .LVU2642
 8700 0158 4489E6   		movl	%r12d, %esi
 8701              	.LVL988:
2381:fltk-1.3.4-1/png/pngrutil.c ****          return;
 8702              		.loc 1 2381 10 is_stmt 0 view .LVU2643
 8703 015b E8000000 		call	png_crc_finish
 8703      00
 8704              	.LVL989:
2382:fltk-1.3.4-1/png/pngrutil.c ****       }
 8705              		.loc 1 2382 10 is_stmt 1 view .LVU2644
 8706 0160 EBAF     		jmp	.L725
 8707              	.LVL990:
 8708              		.p2align 4,,10
 8709 0162 660F1F44 		.p2align 3
 8709      0000
 8710              	.L750:
2387:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
 8711              		.loc 1 2387 10 view .LVU2645
 8712 0168 4489E6   		movl	%r12d, %esi
 8713              	.LVL991:
2387:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
 8714              		.loc 1 2387 10 is_stmt 0 view .LVU2646
 8715 016b E8000000 		call	png_crc_finish
 8715      00
 8716              	.LVL992:
2388:fltk-1.3.4-1/png/pngrutil.c ****          return;
 8717              		.loc 1 2388 10 is_stmt 1 view .LVU2647
 8718 0170 488D3500 		leaq	.LC39(%rip), %rsi
 8718      000000
 8719 0177 4889EF   		movq	%rbp, %rdi
 8720 017a E8000000 		call	png_chunk_benign_error@PLT
 8720      00
 8721              	.LVL993:
2389:fltk-1.3.4-1/png/pngrutil.c ****       }
 8722              		.loc 1 2389 10 view .LVU2648
 8723 017f EB90     		jmp	.L725
 8724              	.LVL994:
 8725              		.p2align 4,,10
 8726 0181 0F1F8000 		.p2align 3
 8726      000000
 8727              	.L753:
2413:fltk-1.3.4-1/png/pngrutil.c ****      return;
 8728              		.loc 1 2413 6 view .LVU2649
 8729 0188 488D3500 		leaq	.LC20(%rip), %rsi
 8729      000000
 8730 018f 4889EF   		movq	%rbp, %rdi
 8731 0192 E8000000 		call	png_chunk_benign_error@PLT
 8731      00
 8732              	.LVL995:
2414:fltk-1.3.4-1/png/pngrutil.c ****    }
 8733              		.loc 1 2414 6 view .LVU2650
 8734 0197 E975FFFF 		jmp	.L725
 8734      FF
 8735              	.LVL996:
 8736              	.L751:
2395:fltk-1.3.4-1/png/pngrutil.c **** 
 8737              		.loc 1 2395 7 view .LVU2651
 8738 019c 488D3500 		leaq	.LC12(%rip), %rsi
 8738      000000
 8739              	.LVL997:
2395:fltk-1.3.4-1/png/pngrutil.c **** 
 8740              		.loc 1 2395 7 is_stmt 0 view .LVU2652
 8741 01a3 4889EF   		movq	%rbp, %rdi
 8742              	.LVL998:
2395:fltk-1.3.4-1/png/pngrutil.c **** 
 8743              		.loc 1 2395 7 view .LVU2653
 8744 01a6 E8000000 		call	png_chunk_error@PLT
 8744      00
 8745              	.LVL999:
 8746              	.L755:
2441:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8747              		.loc 1 2441 1 view .LVU2654
 8748 01ab E8000000 		call	__stack_chk_fail@PLT
 8748      00
 8749              	.LVL1000:
 8750              		.cfi_endproc
 8751              	.LFE73:
 8753              		.section	.rodata.png_handle_zTXt.str1.1,"aMS",@progbits,1
 8754              	.LC41:
 8755 0000 756E6B6E 		.string	"unknown compression type"
 8755      6F776E20 
 8755      636F6D70 
 8755      72657373 
 8755      696F6E20 
 8756              	.LC42:
 8757 0019 696E7375 		.string	"insufficient memory"
 8757      66666963 
 8757      69656E74 
 8757      206D656D 
 8757      6F727900 
 8758              		.section	.text.png_handle_zTXt,"ax",@progbits
 8759              		.p2align 4
 8760              		.globl	png_handle_zTXt
 8762              	png_handle_zTXt:
 8763              	.LVL1001:
 8764              	.LFB74:
2448:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
 8765              		.loc 1 2448 1 is_stmt 1 view -0
 8766              		.cfi_startproc
2448:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
 8767              		.loc 1 2448 1 is_stmt 0 view .LVU2656
 8768 0000 F30F1EFA 		endbr64
 8769 0004 4156     		pushq	%r14
 8770              		.cfi_def_cfa_offset 16
 8771              		.cfi_offset 14, -16
 8772 0006 4155     		pushq	%r13
 8773              		.cfi_def_cfa_offset 24
 8774              		.cfi_offset 13, -24
 8775 0008 4989F5   		movq	%rsi, %r13
 8776 000b 4154     		pushq	%r12
 8777              		.cfi_def_cfa_offset 32
 8778              		.cfi_offset 12, -32
 8779 000d 4189D4   		movl	%edx, %r12d
 8780 0010 55       		pushq	%rbp
 8781              		.cfi_def_cfa_offset 40
 8782              		.cfi_offset 6, -40
 8783 0011 4889FD   		movq	%rdi, %rbp
 8784 0014 53       		pushq	%rbx
 8785              		.cfi_def_cfa_offset 48
 8786              		.cfi_offset 3, -48
 8787 0015 4883EC50 		subq	$80, %rsp
 8788              		.cfi_def_cfa_offset 128
2448:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
 8789              		.loc 1 2448 1 view .LVU2657
 8790 0019 64488B04 		movq	%fs:40, %rax
 8790      25280000 
 8790      00
 8791 0022 48894424 		movq	%rax, 72(%rsp)
 8791      48
 8792 0027 31C0     		xorl	%eax, %eax
2449:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep       buffer;
 8793              		.loc 1 2449 4 is_stmt 1 view .LVU2658
 8794              	.LVL1002:
2450:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32     keyword_length;
 8795              		.loc 1 2450 4 view .LVU2659
2451:fltk-1.3.4-1/png/pngrutil.c **** 
 8796              		.loc 1 2451 4 view .LVU2660
2453:fltk-1.3.4-1/png/pngrutil.c **** 
 8797              		.loc 1 2453 4 view .LVU2661
2456:fltk-1.3.4-1/png/pngrutil.c ****    {
 8798              		.loc 1 2456 4 view .LVU2662
2456:fltk-1.3.4-1/png/pngrutil.c ****    {
 8799              		.loc 1 2456 15 is_stmt 0 view .LVU2663
 8800 0029 8B876404 		movl	1124(%rdi), %eax
 8800      0000
2456:fltk-1.3.4-1/png/pngrutil.c ****    {
 8801              		.loc 1 2456 7 view .LVU2664
 8802 002f 85C0     		testl	%eax, %eax
 8803 0031 741B     		je	.L757
2458:fltk-1.3.4-1/png/pngrutil.c ****       {
 8804              		.loc 1 2458 7 is_stmt 1 view .LVU2665
2458:fltk-1.3.4-1/png/pngrutil.c ****       {
 8805              		.loc 1 2458 10 is_stmt 0 view .LVU2666
 8806 0033 83F801   		cmpl	$1, %eax
 8807 0036 0F845401 		je	.L786
 8807      0000
2464:fltk-1.3.4-1/png/pngrutil.c ****       {
 8808              		.loc 1 2464 7 is_stmt 1 view .LVU2667
2464:fltk-1.3.4-1/png/pngrutil.c ****       {
 8809              		.loc 1 2464 11 is_stmt 0 view .LVU2668
 8810 003c 83E801   		subl	$1, %eax
2464:fltk-1.3.4-1/png/pngrutil.c ****       {
 8811              		.loc 1 2464 10 view .LVU2669
 8812 003f 89876404 		movl	%eax, 1124(%rdi)
 8812      0000
 8813 0045 83F801   		cmpl	$1, %eax
 8814 0048 0F845201 		je	.L787
 8814      0000
 8815              	.L757:
2473:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8816              		.loc 1 2473 4 is_stmt 1 view .LVU2670
2473:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8817              		.loc 1 2473 16 is_stmt 0 view .LVU2671
 8818 004e 8B852C01 		movl	300(%rbp), %eax
 8818      0000
2473:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 8819              		.loc 1 2473 7 view .LVU2672
 8820 0054 A801     		testb	$1, %al
 8821 0056 0F84FC01 		je	.L788
 8821      0000
2476:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 8822              		.loc 1 2476 4 is_stmt 1 view .LVU2673
2476:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 8823              		.loc 1 2476 7 is_stmt 0 view .LVU2674
 8824 005c A804     		testb	$4, %al
 8825 005e 0F85B400 		jne	.L789
 8825      0000
 8826              	.L761:
2479:fltk-1.3.4-1/png/pngrutil.c **** 
 8827              		.loc 1 2479 4 is_stmt 1 view .LVU2675
2479:fltk-1.3.4-1/png/pngrutil.c **** 
 8828              		.loc 1 2479 13 is_stmt 0 view .LVU2676
 8829 0064 4489E6   		movl	%r12d, %esi
 8830              	.LVL1003:
2479:fltk-1.3.4-1/png/pngrutil.c **** 
 8831              		.loc 1 2479 13 view .LVU2677
 8832 0067 BA020000 		movl	$2, %edx
 8832      00
 8833              	.LVL1004:
2479:fltk-1.3.4-1/png/pngrutil.c **** 
 8834              		.loc 1 2479 13 view .LVU2678
 8835 006c 4889EF   		movq	%rbp, %rdi
 8836              	.LVL1005:
2479:fltk-1.3.4-1/png/pngrutil.c **** 
 8837              		.loc 1 2479 13 view .LVU2679
 8838 006f E8000000 		call	png_read_buffer
 8838      00
 8839              	.LVL1006:
 8840 0074 4889C3   		movq	%rax, %rbx
 8841              	.LVL1007:
2481:fltk-1.3.4-1/png/pngrutil.c ****    {
 8842              		.loc 1 2481 4 is_stmt 1 view .LVU2680
2481:fltk-1.3.4-1/png/pngrutil.c ****    {
 8843              		.loc 1 2481 7 is_stmt 0 view .LVU2681
 8844 0077 4885C0   		testq	%rax, %rax
 8845 007a 0F844001 		je	.L790
 8845      0000
2488:fltk-1.3.4-1/png/pngrutil.c **** 
 8846              		.loc 1 2488 4 is_stmt 1 view .LVU2682
 8847              	.LVL1008:
 8848              	.LBB330:
 8849              	.LBI330:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 8850              		.loc 1 187 1 view .LVU2683
 8851              	.LBB331:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8852              		.loc 1 189 4 view .LVU2684
 8853 0080 4889C6   		movq	%rax, %rsi
 8854 0083 4889EF   		movq	%rbp, %rdi
 8855 0086 4489E2   		movl	%r12d, %edx
 8856 0089 E8000000 		call	png_crc_read.part.0
 8856      00
 8857              	.LVL1009:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8858              		.loc 1 189 4 is_stmt 0 view .LVU2685
 8859              	.LBE331:
 8860              	.LBE330:
2490:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8861              		.loc 1 2490 4 is_stmt 1 view .LVU2686
2490:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8862              		.loc 1 2490 8 is_stmt 0 view .LVU2687
 8863 008e 31F6     		xorl	%esi, %esi
 8864 0090 4889EF   		movq	%rbp, %rdi
 8865 0093 E8000000 		call	png_crc_finish
 8865      00
 8866              	.LVL1010:
2490:fltk-1.3.4-1/png/pngrutil.c ****       return;
 8867              		.loc 1 2490 7 view .LVU2688
 8868 0098 85C0     		testl	%eax, %eax
 8869 009a 7554     		jne	.L756
 8870              	.LVL1011:
2495:fltk-1.3.4-1/png/pngrutil.c ****       ++keyword_length)
 8871              		.loc 1 2495 7 is_stmt 1 view .LVU2689
2494:fltk-1.3.4-1/png/pngrutil.c ****       keyword_length < length && buffer[keyword_length] != 0;
 8872              		.loc 1 2494 4 is_stmt 0 view .LVU2690
 8873 009c 4585E4   		testl	%r12d, %r12d
 8874 009f 0F848B00 		je	.L773
 8874      0000
 8875 00a5 418D7424 		leal	-1(%r12), %esi
 8875      FF
 8876 00aa 31C0     		xorl	%eax, %eax
 8877 00ac EB12     		jmp	.L765
 8878              	.LVL1012:
 8879 00ae 6690     		.p2align 4,,10
 8880              		.p2align 3
 8881              	.L767:
2497:fltk-1.3.4-1/png/pngrutil.c **** 
 8882              		.loc 1 2497 44 is_stmt 1 view .LVU2691
2496:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop to find end of name */ ;
 8883              		.loc 1 2496 7 view .LVU2692
 8884 00b0 448D7001 		leal	1(%rax), %r14d
 8885              	.LVL1013:
2495:fltk-1.3.4-1/png/pngrutil.c ****       ++keyword_length)
 8886              		.loc 1 2495 7 view .LVU2693
 8887 00b4 488D5001 		leaq	1(%rax), %rdx
2494:fltk-1.3.4-1/png/pngrutil.c ****       keyword_length < length && buffer[keyword_length] != 0;
 8888              		.loc 1 2494 4 is_stmt 0 view .LVU2694
 8889 00b8 4839F0   		cmpq	%rsi, %rax
 8890 00bb 7411     		je	.L766
 8891 00bd 4889D0   		movq	%rdx, %rax
 8892              	.LVL1014:
 8893              	.L765:
2495:fltk-1.3.4-1/png/pngrutil.c ****       ++keyword_length)
 8894              		.loc 1 2495 31 view .LVU2695
 8895 00c0 803C0300 		cmpb	$0, (%rbx,%rax)
 8896 00c4 89C1     		movl	%eax, %ecx
 8897              	.LVL1015:
2495:fltk-1.3.4-1/png/pngrutil.c ****       ++keyword_length)
 8898              		.loc 1 2495 31 view .LVU2696
 8899 00c6 75E8     		jne	.L767
 8900 00c8 4189C6   		movl	%eax, %r14d
 8901 00cb 83E901   		subl	$1, %ecx
 8902              	.LVL1016:
 8903              	.L766:
2499:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "bad keyword";
 8904              		.loc 1 2499 4 is_stmt 1 view .LVU2697
2499:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "bad keyword";
 8905              		.loc 1 2499 7 is_stmt 0 view .LVU2698
 8906 00ce 83F94E   		cmpl	$78, %ecx
 8907 00d1 775D     		ja	.L773
2506:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
 8908              		.loc 1 2506 9 is_stmt 1 view .LVU2699
2506:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
 8909              		.loc 1 2506 28 is_stmt 0 view .LVU2700
 8910 00d3 418D4603 		leal	3(%r14), %eax
2506:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
 8911              		.loc 1 2506 12 view .LVU2701
 8912 00d7 4439E0   		cmpl	%r12d, %eax
 8913 00da 766C     		jbe	.L791
2507:fltk-1.3.4-1/png/pngrutil.c **** 
 8914              		.loc 1 2507 14 view .LVU2702
 8915 00dc 488D3500 		leaq	.LC21(%rip), %rsi
 8915      000000
 8916              	.LVL1017:
2549:fltk-1.3.4-1/png/pngrutil.c **** }
 8917              		.loc 1 2549 7 is_stmt 1 view .LVU2703
 8918 00e3 4889EF   		movq	%rbp, %rdi
 8919 00e6 E8000000 		call	png_chunk_benign_error@PLT
 8919      00
 8920              	.LVL1018:
 8921 00eb 0F1F4400 		.p2align 4,,10
 8921      00
 8922              		.p2align 3
 8923              	.L756:
2550:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8924              		.loc 1 2550 1 is_stmt 0 view .LVU2704
 8925 00f0 488B4424 		movq	72(%rsp), %rax
 8925      48
 8926 00f5 64483304 		xorq	%fs:40, %rax
 8926      25280000 
 8926      00
 8927 00fe 0F856301 		jne	.L792
 8927      0000
 8928 0104 4883C450 		addq	$80, %rsp
 8929              		.cfi_remember_state
 8930              		.cfi_def_cfa_offset 48
 8931 0108 5B       		popq	%rbx
 8932              		.cfi_def_cfa_offset 40
 8933 0109 5D       		popq	%rbp
 8934              		.cfi_def_cfa_offset 32
 8935              	.LVL1019:
2550:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8936              		.loc 1 2550 1 view .LVU2705
 8937 010a 415C     		popq	%r12
 8938              		.cfi_def_cfa_offset 24
 8939              	.LVL1020:
2550:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8940              		.loc 1 2550 1 view .LVU2706
 8941 010c 415D     		popq	%r13
 8942              		.cfi_def_cfa_offset 16
 8943              	.LVL1021:
2550:fltk-1.3.4-1/png/pngrutil.c **** #endif
 8944              		.loc 1 2550 1 view .LVU2707
 8945 010e 415E     		popq	%r14
 8946              		.cfi_def_cfa_offset 8
 8947 0110 C3       		ret
 8948              	.LVL1022:
 8949              		.p2align 4,,10
 8950 0111 0F1F8000 		.p2align 3
 8950      000000
 8951              	.L789:
 8952              		.cfi_restore_state
2477:fltk-1.3.4-1/png/pngrutil.c **** 
 8953              		.loc 1 2477 7 is_stmt 1 view .LVU2708
2477:fltk-1.3.4-1/png/pngrutil.c **** 
 8954              		.loc 1 2477 21 is_stmt 0 view .LVU2709
 8955 0118 83C808   		orl	$8, %eax
 8956 011b 89852C01 		movl	%eax, 300(%rbp)
 8956      0000
 8957 0121 E93EFFFF 		jmp	.L761
 8957      FF
 8958              	.LVL1023:
 8959 0126 662E0F1F 		.p2align 4,,10
 8959      84000000 
 8959      0000
 8960              		.p2align 3
 8961              	.L773:
2500:fltk-1.3.4-1/png/pngrutil.c **** 
 8962              		.loc 1 2500 14 view .LVU2710
 8963 0130 488D3500 		leaq	.LC22(%rip), %rsi
 8963      000000
 8964              	.LVL1024:
 8965              	.L764:
2549:fltk-1.3.4-1/png/pngrutil.c **** }
 8966              		.loc 1 2549 7 is_stmt 1 view .LVU2711
 8967 0137 4889EF   		movq	%rbp, %rdi
 8968 013a E8000000 		call	png_chunk_benign_error@PLT
 8968      00
 8969              	.LVL1025:
2549:fltk-1.3.4-1/png/pngrutil.c **** }
 8970              		.loc 1 2549 7 is_stmt 0 view .LVU2712
 8971 013f EBAF     		jmp	.L756
 8972              	.LVL1026:
 8973              		.p2align 4,,10
 8974 0141 0F1F8000 		.p2align 3
 8974      000000
 8975              	.L791:
2509:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "unknown compression type";
 8976              		.loc 1 2509 9 is_stmt 1 view .LVU2713
2509:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "unknown compression type";
 8977              		.loc 1 2509 34 is_stmt 0 view .LVU2714
 8978 0148 418D4601 		leal	1(%r14), %eax
2510:fltk-1.3.4-1/png/pngrutil.c **** 
 8979              		.loc 1 2510 14 view .LVU2715
 8980 014c 488D3500 		leaq	.LC41(%rip), %rsi
 8980      000000
2509:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "unknown compression type";
 8981              		.loc 1 2509 12 view .LVU2716
 8982 0153 803C0300 		cmpb	$0, (%rbx,%rax)
 8983 0157 75DE     		jne	.L764
 8984              	.LBB332:
2514:fltk-1.3.4-1/png/pngrutil.c **** 
 8985              		.loc 1 2514 7 is_stmt 1 view .LVU2717
2520:fltk-1.3.4-1/png/pngrutil.c ****          &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 8986              		.loc 1 2520 11 is_stmt 0 view .LVU2718
 8987 0159 418D5E02 		leal	2(%r14), %ebx
 8988              	.LVL1027:
2520:fltk-1.3.4-1/png/pngrutil.c ****          &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 8989              		.loc 1 2520 11 view .LVU2719
 8990 015d 488D4C24 		leaq	8(%rsp), %rcx
 8990      08
 8991 0162 4489E6   		movl	%r12d, %esi
 8992 0165 4889EF   		movq	%rbp, %rdi
2514:fltk-1.3.4-1/png/pngrutil.c **** 
 8993              		.loc 1 2514 24 view .LVU2720
 8994 0168 48C74424 		movq	$-1, 8(%rsp)
 8994      08FFFFFF 
 8994      FF
2520:fltk-1.3.4-1/png/pngrutil.c ****          &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 8995              		.loc 1 2520 7 is_stmt 1 view .LVU2721
2520:fltk-1.3.4-1/png/pngrutil.c ****          &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 8996              		.loc 1 2520 11 is_stmt 0 view .LVU2722
 8997 0171 89DA     		movl	%ebx, %edx
 8998 0173 E8000000 		call	png_decompress_chunk.constprop.0
 8998      00
 8999              	.LVL1028:
2520:fltk-1.3.4-1/png/pngrutil.c ****          &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 9000              		.loc 1 2520 10 view .LVU2723
 9001 0178 83F801   		cmpl	$1, %eax
 9002 017b 7462     		je	.L793
2545:fltk-1.3.4-1/png/pngrutil.c ****    }
 9003              		.loc 1 2545 10 is_stmt 1 view .LVU2724
2545:fltk-1.3.4-1/png/pngrutil.c ****    }
 9004              		.loc 1 2545 17 is_stmt 0 view .LVU2725
 9005 017d 488BB570 		movq	368(%rbp), %rsi
 9005      010000
 9006              	.LVL1029:
2545:fltk-1.3.4-1/png/pngrutil.c ****    }
 9007              		.loc 1 2545 17 view .LVU2726
 9008              	.LBE332:
2548:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
 9009              		.loc 1 2548 4 is_stmt 1 view .LVU2727
2548:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, errmsg);
 9010              		.loc 1 2548 7 is_stmt 0 view .LVU2728
 9011 0184 4885F6   		testq	%rsi, %rsi
 9012 0187 0F8463FF 		je	.L756
 9012      FFFF
 9013 018d EBA8     		jmp	.L764
 9014              	.LVL1030:
 9015 018f 90       		.p2align 4,,10
 9016              		.p2align 3
 9017              	.L786:
2460:fltk-1.3.4-1/png/pngrutil.c ****          return;
 9018              		.loc 1 2460 10 is_stmt 1 view .LVU2729
 9019 0190 89D6     		movl	%edx, %esi
 9020              	.LVL1031:
2460:fltk-1.3.4-1/png/pngrutil.c ****          return;
 9021              		.loc 1 2460 10 is_stmt 0 view .LVU2730
 9022 0192 E8000000 		call	png_crc_finish
 9022      00
 9023              	.LVL1032:
2461:fltk-1.3.4-1/png/pngrutil.c ****       }
 9024              		.loc 1 2461 10 is_stmt 1 view .LVU2731
 9025 0197 E954FFFF 		jmp	.L756
 9025      FF
 9026              	.LVL1033:
 9027 019c 0F1F4000 		.p2align 4,,10
 9028              		.p2align 3
 9029              	.L787:
2466:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
 9030              		.loc 1 2466 10 view .LVU2732
 9031 01a0 89D6     		movl	%edx, %esi
 9032              	.LVL1034:
2466:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
 9033              		.loc 1 2466 10 is_stmt 0 view .LVU2733
 9034 01a2 E8000000 		call	png_crc_finish
 9034      00
 9035              	.LVL1035:
2467:fltk-1.3.4-1/png/pngrutil.c ****          return;
 9036              		.loc 1 2467 10 is_stmt 1 view .LVU2734
 9037 01a7 488D3500 		leaq	.LC39(%rip), %rsi
 9037      000000
 9038 01ae 4889EF   		movq	%rbp, %rdi
 9039 01b1 E8000000 		call	png_chunk_benign_error@PLT
 9039      00
 9040              	.LVL1036:
2468:fltk-1.3.4-1/png/pngrutil.c ****       }
 9041              		.loc 1 2468 10 view .LVU2735
 9042 01b6 E935FFFF 		jmp	.L756
 9042      FF
 9043              	.LVL1037:
 9044 01bb 0F1F4400 		.p2align 4,,10
 9044      00
 9045              		.p2align 3
 9046              	.L790:
2483:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
 9047              		.loc 1 2483 7 view .LVU2736
 9048 01c0 4489E6   		movl	%r12d, %esi
 9049 01c3 4889EF   		movq	%rbp, %rdi
 9050 01c6 E8000000 		call	png_crc_finish
 9050      00
 9051              	.LVL1038:
2484:fltk-1.3.4-1/png/pngrutil.c ****       return;
 9052              		.loc 1 2484 7 view .LVU2737
 9053 01cb 488D3500 		leaq	.LC20(%rip), %rsi
 9053      000000
 9054 01d2 4889EF   		movq	%rbp, %rdi
 9055 01d5 E8000000 		call	png_chunk_benign_error@PLT
 9055      00
 9056              	.LVL1039:
2485:fltk-1.3.4-1/png/pngrutil.c ****    }
 9057              		.loc 1 2485 7 view .LVU2738
 9058 01da E911FFFF 		jmp	.L756
 9058      FF
 9059              	.LVL1040:
 9060              	.L793:
 9061              	.LBB334:
 9062              	.LBB333:
2523:fltk-1.3.4-1/png/pngrutil.c **** 
 9063              		.loc 1 2523 10 view .LVU2739
2529:fltk-1.3.4-1/png/pngrutil.c ****          buffer[uncompressed_length+(keyword_length+2)] = 0;
 9064              		.loc 1 2529 10 view .LVU2740
2529:fltk-1.3.4-1/png/pngrutil.c ****          buffer[uncompressed_length+(keyword_length+2)] = 0;
 9065              		.loc 1 2529 17 is_stmt 0 view .LVU2741
 9066 01df 488B9598 		movq	1176(%rbp), %rdx
 9066      040000
 9067              	.LVL1041:
2530:fltk-1.3.4-1/png/pngrutil.c **** 
 9068              		.loc 1 2530 10 is_stmt 1 view .LVU2742
2530:fltk-1.3.4-1/png/pngrutil.c **** 
 9069              		.loc 1 2530 52 is_stmt 0 view .LVU2743
 9070 01e6 89D8     		movl	%ebx, %eax
2540:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9071              		.loc 1 2540 14 view .LVU2744
 9072 01e8 4C89EE   		movq	%r13, %rsi
 9073 01eb 4889EF   		movq	%rbp, %rdi
 9074 01ee B9010000 		movl	$1, %ecx
 9074      00
2530:fltk-1.3.4-1/png/pngrutil.c **** 
 9075              		.loc 1 2530 57 view .LVU2745
 9076 01f3 4801D0   		addq	%rdx, %rax
 9077 01f6 48034424 		addq	8(%rsp), %rax
 9077      08
 9078 01fb C60000   		movb	$0, (%rax)
2532:fltk-1.3.4-1/png/pngrutil.c ****          text.key = (png_charp)buffer;
 9079              		.loc 1 2532 10 is_stmt 1 view .LVU2746
2534:fltk-1.3.4-1/png/pngrutil.c ****          text.text_length = uncompressed_length;
 9080              		.loc 1 2534 57 is_stmt 0 view .LVU2747
 9081 01fe 4A8D4432 		leaq	2(%rdx,%r14), %rax
 9081      02
 9082 0203 48894424 		movq	%rax, 32(%rsp)
 9082      20
2535:fltk-1.3.4-1/png/pngrutil.c ****          text.itxt_length = 0;
 9083              		.loc 1 2535 27 view .LVU2748
 9084 0208 488B4424 		movq	8(%rsp), %rax
 9084      08
2533:fltk-1.3.4-1/png/pngrutil.c ****          text.text = (png_charp)(buffer + keyword_length+2);
 9085              		.loc 1 2533 19 view .LVU2749
 9086 020d 48895424 		movq	%rdx, 24(%rsp)
 9086      18
2540:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9087              		.loc 1 2540 14 view .LVU2750
 9088 0212 488D5424 		leaq	16(%rsp), %rdx
 9088      10
 9089              	.LVL1042:
2532:fltk-1.3.4-1/png/pngrutil.c ****          text.key = (png_charp)buffer;
 9090              		.loc 1 2532 27 view .LVU2751
 9091 0217 C7442410 		movl	$0, 16(%rsp)
 9091      00000000 
2533:fltk-1.3.4-1/png/pngrutil.c ****          text.text = (png_charp)(buffer + keyword_length+2);
 9092              		.loc 1 2533 10 is_stmt 1 view .LVU2752
2534:fltk-1.3.4-1/png/pngrutil.c ****          text.text_length = uncompressed_length;
 9093              		.loc 1 2534 10 view .LVU2753
2535:fltk-1.3.4-1/png/pngrutil.c ****          text.itxt_length = 0;
 9094              		.loc 1 2535 10 view .LVU2754
2535:fltk-1.3.4-1/png/pngrutil.c ****          text.itxt_length = 0;
 9095              		.loc 1 2535 27 is_stmt 0 view .LVU2755
 9096 021f 48894424 		movq	%rax, 40(%rsp)
 9096      28
2536:fltk-1.3.4-1/png/pngrutil.c ****          text.lang = NULL;
 9097              		.loc 1 2536 10 is_stmt 1 view .LVU2756
2536:fltk-1.3.4-1/png/pngrutil.c ****          text.lang = NULL;
 9098              		.loc 1 2536 27 is_stmt 0 view .LVU2757
 9099 0224 48C74424 		movq	$0, 48(%rsp)
 9099      30000000 
 9099      00
2537:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = NULL;
 9100              		.loc 1 2537 10 is_stmt 1 view .LVU2758
2537:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = NULL;
 9101              		.loc 1 2537 20 is_stmt 0 view .LVU2759
 9102 022d 48C74424 		movq	$0, 56(%rsp)
 9102      38000000 
 9102      00
2538:fltk-1.3.4-1/png/pngrutil.c **** 
 9103              		.loc 1 2538 10 is_stmt 1 view .LVU2760
2538:fltk-1.3.4-1/png/pngrutil.c **** 
 9104              		.loc 1 2538 24 is_stmt 0 view .LVU2761
 9105 0236 48C74424 		movq	$0, 64(%rsp)
 9105      40000000 
 9105      00
2540:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9106              		.loc 1 2540 10 is_stmt 1 view .LVU2762
2540:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9107              		.loc 1 2540 14 is_stmt 0 view .LVU2763
 9108 023f E8000000 		call	png_set_text_2@PLT
 9108      00
 9109              	.LVL1043:
2541:fltk-1.3.4-1/png/pngrutil.c ****       }
 9110              		.loc 1 2541 20 view .LVU2764
 9111 0244 488D3500 		leaq	.LC42(%rip), %rsi
 9111      000000
2540:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9112              		.loc 1 2540 13 view .LVU2765
 9113 024b 85C0     		testl	%eax, %eax
 9114 024d 0F85E4FE 		jne	.L764
 9114      FFFF
 9115 0253 E998FEFF 		jmp	.L756
 9115      FF
 9116              	.LVL1044:
 9117              	.L788:
2540:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9118              		.loc 1 2540 13 view .LVU2766
 9119              	.LBE333:
 9120              	.LBE334:
2474:fltk-1.3.4-1/png/pngrutil.c **** 
 9121              		.loc 1 2474 7 is_stmt 1 view .LVU2767
 9122 0258 488D3500 		leaq	.LC12(%rip), %rsi
 9122      000000
 9123              	.LVL1045:
2474:fltk-1.3.4-1/png/pngrutil.c **** 
 9124              		.loc 1 2474 7 is_stmt 0 view .LVU2768
 9125 025f 4889EF   		movq	%rbp, %rdi
 9126              	.LVL1046:
2474:fltk-1.3.4-1/png/pngrutil.c **** 
 9127              		.loc 1 2474 7 view .LVU2769
 9128 0262 E8000000 		call	png_chunk_error@PLT
 9128      00
 9129              	.LVL1047:
 9130              	.L792:
2550:fltk-1.3.4-1/png/pngrutil.c **** #endif
 9131              		.loc 1 2550 1 view .LVU2770
 9132 0267 E8000000 		call	__stack_chk_fail@PLT
 9132      00
 9133              	.LVL1048:
 9134              		.cfi_endproc
 9135              	.LFE74:
 9137              		.section	.rodata.png_handle_iTXt.str1.1,"aMS",@progbits,1
 9138              	.LC43:
 9139 0000 62616420 		.string	"bad compression info"
 9139      636F6D70 
 9139      72657373 
 9139      696F6E20 
 9139      696E666F 
 9140              		.section	.text.png_handle_iTXt,"ax",@progbits
 9141              		.p2align 4
 9142              		.globl	png_handle_iTXt
 9144              	png_handle_iTXt:
 9145              	.LVL1049:
 9146              	.LFB75:
2557:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
 9147              		.loc 1 2557 1 is_stmt 1 view -0
 9148              		.cfi_startproc
2557:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
 9149              		.loc 1 2557 1 is_stmt 0 view .LVU2772
 9150 0000 F30F1EFA 		endbr64
 9151 0004 4157     		pushq	%r15
 9152              		.cfi_def_cfa_offset 16
 9153              		.cfi_offset 15, -16
 9154 0006 4156     		pushq	%r14
 9155              		.cfi_def_cfa_offset 24
 9156              		.cfi_offset 14, -24
 9157 0008 4155     		pushq	%r13
 9158              		.cfi_def_cfa_offset 32
 9159              		.cfi_offset 13, -32
 9160 000a 4189D5   		movl	%edx, %r13d
 9161 000d 4154     		pushq	%r12
 9162              		.cfi_def_cfa_offset 40
 9163              		.cfi_offset 12, -40
 9164 000f 4989F4   		movq	%rsi, %r12
 9165 0012 55       		pushq	%rbp
 9166              		.cfi_def_cfa_offset 48
 9167              		.cfi_offset 6, -48
 9168 0013 4889FD   		movq	%rdi, %rbp
 9169 0016 53       		pushq	%rbx
 9170              		.cfi_def_cfa_offset 56
 9171              		.cfi_offset 3, -56
 9172 0017 4883EC68 		subq	$104, %rsp
 9173              		.cfi_def_cfa_offset 160
2557:fltk-1.3.4-1/png/pngrutil.c ****    png_const_charp errmsg = NULL;
 9174              		.loc 1 2557 1 view .LVU2773
 9175 001b 64488B04 		movq	%fs:40, %rax
 9175      25280000 
 9175      00
 9176 0024 48894424 		movq	%rax, 88(%rsp)
 9176      58
 9177 0029 31C0     		xorl	%eax, %eax
2558:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep buffer;
 9178              		.loc 1 2558 4 is_stmt 1 view .LVU2774
 9179              	.LVL1050:
2559:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 prefix_length;
 9180              		.loc 1 2559 4 view .LVU2775
2560:fltk-1.3.4-1/png/pngrutil.c **** 
 9181              		.loc 1 2560 4 view .LVU2776
2562:fltk-1.3.4-1/png/pngrutil.c **** 
 9182              		.loc 1 2562 4 view .LVU2777
2565:fltk-1.3.4-1/png/pngrutil.c ****    {
 9183              		.loc 1 2565 4 view .LVU2778
2565:fltk-1.3.4-1/png/pngrutil.c ****    {
 9184              		.loc 1 2565 15 is_stmt 0 view .LVU2779
 9185 002b 8B876404 		movl	1124(%rdi), %eax
 9185      0000
2565:fltk-1.3.4-1/png/pngrutil.c ****    {
 9186              		.loc 1 2565 7 view .LVU2780
 9187 0031 85C0     		testl	%eax, %eax
 9188 0033 741B     		je	.L795
2567:fltk-1.3.4-1/png/pngrutil.c ****       {
 9189              		.loc 1 2567 7 is_stmt 1 view .LVU2781
2567:fltk-1.3.4-1/png/pngrutil.c ****       {
 9190              		.loc 1 2567 10 is_stmt 0 view .LVU2782
 9191 0035 83F801   		cmpl	$1, %eax
 9192 0038 0F843A02 		je	.L853
 9192      0000
2573:fltk-1.3.4-1/png/pngrutil.c ****       {
 9193              		.loc 1 2573 7 is_stmt 1 view .LVU2783
2573:fltk-1.3.4-1/png/pngrutil.c ****       {
 9194              		.loc 1 2573 11 is_stmt 0 view .LVU2784
 9195 003e 83E801   		subl	$1, %eax
2573:fltk-1.3.4-1/png/pngrutil.c ****       {
 9196              		.loc 1 2573 10 view .LVU2785
 9197 0041 89876404 		movl	%eax, 1124(%rdi)
 9197      0000
 9198 0047 83F801   		cmpl	$1, %eax
 9199 004a 0F843802 		je	.L854
 9199      0000
 9200              	.L795:
2582:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 9201              		.loc 1 2582 4 is_stmt 1 view .LVU2786
2582:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 9202              		.loc 1 2582 16 is_stmt 0 view .LVU2787
 9203 0050 8B852C01 		movl	300(%rbp), %eax
 9203      0000
2582:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "missing IHDR");
 9204              		.loc 1 2582 7 view .LVU2788
 9205 0056 A801     		testb	$1, %al
 9206 0058 0F84F102 		je	.L855
 9206      0000
2585:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 9207              		.loc 1 2585 4 is_stmt 1 view .LVU2789
2585:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->mode |= PNG_AFTER_IDAT;
 9208              		.loc 1 2585 7 is_stmt 0 view .LVU2790
 9209 005e A804     		testb	$4, %al
 9210 0060 0F85D201 		jne	.L856
 9210      0000
 9211              	.L799:
2588:fltk-1.3.4-1/png/pngrutil.c **** 
 9212              		.loc 1 2588 4 is_stmt 1 view .LVU2791
2588:fltk-1.3.4-1/png/pngrutil.c **** 
 9213              		.loc 1 2588 13 is_stmt 0 view .LVU2792
 9214 0066 418D7501 		leal	1(%r13), %esi
 9215              	.LVL1051:
2588:fltk-1.3.4-1/png/pngrutil.c **** 
 9216              		.loc 1 2588 13 view .LVU2793
 9217 006a BA010000 		movl	$1, %edx
 9217      00
 9218              	.LVL1052:
2588:fltk-1.3.4-1/png/pngrutil.c **** 
 9219              		.loc 1 2588 13 view .LVU2794
 9220 006f 4889EF   		movq	%rbp, %rdi
 9221              	.LVL1053:
2588:fltk-1.3.4-1/png/pngrutil.c **** 
 9222              		.loc 1 2588 13 view .LVU2795
 9223 0072 E8000000 		call	png_read_buffer
 9223      00
 9224              	.LVL1054:
 9225 0077 4889C3   		movq	%rax, %rbx
 9226              	.LVL1055:
2590:fltk-1.3.4-1/png/pngrutil.c ****    {
 9227              		.loc 1 2590 4 is_stmt 1 view .LVU2796
2590:fltk-1.3.4-1/png/pngrutil.c ****    {
 9228              		.loc 1 2590 7 is_stmt 0 view .LVU2797
 9229 007a 4885C0   		testq	%rax, %rax
 9230 007d 0F842502 		je	.L857
 9230      0000
2597:fltk-1.3.4-1/png/pngrutil.c **** 
 9231              		.loc 1 2597 4 is_stmt 1 view .LVU2798
 9232              	.LVL1056:
 9233              	.LBB335:
 9234              	.LBI335:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 9235              		.loc 1 187 1 view .LVU2799
 9236              	.LBB336:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 9237              		.loc 1 189 4 view .LVU2800
 9238 0083 4889C6   		movq	%rax, %rsi
 9239 0086 4889EF   		movq	%rbp, %rdi
 9240 0089 4489EA   		movl	%r13d, %edx
 9241 008c E8000000 		call	png_crc_read.part.0
 9241      00
 9242              	.LVL1057:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 9243              		.loc 1 189 4 is_stmt 0 view .LVU2801
 9244              	.LBE336:
 9245              	.LBE335:
2599:fltk-1.3.4-1/png/pngrutil.c ****       return;
 9246              		.loc 1 2599 4 is_stmt 1 view .LVU2802
2599:fltk-1.3.4-1/png/pngrutil.c ****       return;
 9247              		.loc 1 2599 8 is_stmt 0 view .LVU2803
 9248 0091 31F6     		xorl	%esi, %esi
 9249 0093 4889EF   		movq	%rbp, %rdi
 9250 0096 E8000000 		call	png_crc_finish
 9250      00
 9251              	.LVL1058:
2599:fltk-1.3.4-1/png/pngrutil.c ****       return;
 9252              		.loc 1 2599 7 view .LVU2804
 9253 009b 85C0     		testl	%eax, %eax
 9254 009d 0F856D01 		jne	.L794
 9254      0000
 9255              	.LVL1059:
2604:fltk-1.3.4-1/png/pngrutil.c ****       ++prefix_length)
 9256              		.loc 1 2604 7 is_stmt 1 view .LVU2805
2603:fltk-1.3.4-1/png/pngrutil.c ****       prefix_length < length && buffer[prefix_length] != 0;
 9257              		.loc 1 2603 4 is_stmt 0 view .LVU2806
 9258 00a3 4585ED   		testl	%r13d, %r13d
 9259 00a6 0F84A401 		je	.L821
 9259      0000
 9260 00ac 418D7DFF 		leal	-1(%r13), %edi
 9261 00b0 31C0     		xorl	%eax, %eax
 9262 00b2 EB13     		jmp	.L802
 9263              	.LVL1060:
 9264              		.p2align 4,,10
 9265 00b4 0F1F4000 		.p2align 3
 9266              	.L804:
2606:fltk-1.3.4-1/png/pngrutil.c **** 
 9267              		.loc 1 2606 24 is_stmt 1 view .LVU2807
2605:fltk-1.3.4-1/png/pngrutil.c ****       /* Empty loop */ ;
 9268              		.loc 1 2605 7 view .LVU2808
 9269 00b8 8D7001   		leal	1(%rax), %esi
 9270              	.LVL1061:
2604:fltk-1.3.4-1/png/pngrutil.c ****       ++prefix_length)
 9271              		.loc 1 2604 7 view .LVU2809
 9272 00bb 488D5001 		leaq	1(%rax), %rdx
2603:fltk-1.3.4-1/png/pngrutil.c ****       prefix_length < length && buffer[prefix_length] != 0;
 9273              		.loc 1 2603 4 is_stmt 0 view .LVU2810
 9274 00bf 4839F8   		cmpq	%rdi, %rax
 9275 00c2 7410     		je	.L803
 9276 00c4 4889D0   		movq	%rdx, %rax
 9277              	.LVL1062:
 9278              	.L802:
2604:fltk-1.3.4-1/png/pngrutil.c ****       ++prefix_length)
 9279              		.loc 1 2604 30 view .LVU2811
 9280 00c7 803C0300 		cmpb	$0, (%rbx,%rax)
 9281 00cb 89C1     		movl	%eax, %ecx
 9282              	.LVL1063:
2604:fltk-1.3.4-1/png/pngrutil.c ****       ++prefix_length)
 9283              		.loc 1 2604 30 view .LVU2812
 9284 00cd 75E9     		jne	.L804
 9285 00cf 89C6     		movl	%eax, %esi
 9286 00d1 83E901   		subl	$1, %ecx
 9287              	.LVL1064:
 9288              	.L803:
2609:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "bad keyword";
 9289              		.loc 1 2609 4 is_stmt 1 view .LVU2813
2609:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "bad keyword";
 9290              		.loc 1 2609 7 is_stmt 0 view .LVU2814
 9291 00d4 83F94E   		cmpl	$78, %ecx
 9292 00d7 0F877301 		ja	.L821
 9292      0000
2616:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
 9293              		.loc 1 2616 9 is_stmt 1 view .LVU2815
2616:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
 9294              		.loc 1 2616 27 is_stmt 0 view .LVU2816
 9295 00dd 448D7605 		leal	5(%rsi), %r14d
2616:fltk-1.3.4-1/png/pngrutil.c ****       errmsg = "truncated";
 9296              		.loc 1 2616 12 view .LVU2817
 9297 00e1 4539EE   		cmpl	%r13d, %r14d
 9298 00e4 0F877E01 		ja	.L822
 9298      0000
2619:fltk-1.3.4-1/png/pngrutil.c ****       (buffer[prefix_length+1] == 1 &&
 9299              		.loc 1 2619 9 is_stmt 1 view .LVU2818
2619:fltk-1.3.4-1/png/pngrutil.c ****       (buffer[prefix_length+1] == 1 &&
 9300              		.loc 1 2619 33 is_stmt 0 view .LVU2819
 9301 00ea 8D4601   		leal	1(%rsi), %eax
2619:fltk-1.3.4-1/png/pngrutil.c ****       (buffer[prefix_length+1] == 1 &&
 9302              		.loc 1 2619 19 view .LVU2820
 9303 00ed 0FB60C03 		movzbl	(%rbx,%rax), %ecx
2619:fltk-1.3.4-1/png/pngrutil.c ****       (buffer[prefix_length+1] == 1 &&
 9304              		.loc 1 2619 12 view .LVU2821
 9305 00f1 84C9     		testb	%cl, %cl
 9306 00f3 7423     		je	.L805
2696:fltk-1.3.4-1/png/pngrutil.c **** 
 9307              		.loc 1 2696 14 discriminator 1 view .LVU2822
 9308 00f5 4C8D0D00 		leaq	.LC43(%rip), %r9
 9308      000000
2619:fltk-1.3.4-1/png/pngrutil.c ****       (buffer[prefix_length+1] == 1 &&
 9309              		.loc 1 2619 42 discriminator 1 view .LVU2823
 9310 00fc 80F901   		cmpb	$1, %cl
 9311 00ff 0F855201 		jne	.L801
 9311      0000
2621:fltk-1.3.4-1/png/pngrutil.c ****    {
 9312              		.loc 1 2621 27 view .LVU2824
 9313 0105 8D4602   		leal	2(%rsi), %eax
2620:fltk-1.3.4-1/png/pngrutil.c ****       buffer[prefix_length+2] == PNG_COMPRESSION_TYPE_BASE))
 9314              		.loc 1 2620 37 view .LVU2825
 9315 0108 803C0300 		cmpb	$0, (%rbx,%rax)
 9316 010c 0F854501 		jne	.L801
 9316      0000
 9317              		.p2align 4,,10
 9318 0112 660F1F44 		.p2align 3
 9318      0000
 9319              	.L805:
 9320              	.LBB337:
2623:fltk-1.3.4-1/png/pngrutil.c ****       png_uint_32 language_offset, translated_keyword_offset;
 9321              		.loc 1 2623 7 is_stmt 1 view .LVU2826
 9322              	.LVL1065:
2624:fltk-1.3.4-1/png/pngrutil.c ****       png_alloc_size_t uncompressed_length = 0;
 9323              		.loc 1 2624 7 view .LVU2827
2625:fltk-1.3.4-1/png/pngrutil.c **** 
 9324              		.loc 1 2625 7 view .LVU2828
2625:fltk-1.3.4-1/png/pngrutil.c **** 
 9325              		.loc 1 2625 24 is_stmt 0 view .LVU2829
 9326 0118 48C74424 		movq	$0, 24(%rsp)
 9326      18000000 
 9326      00
2628:fltk-1.3.4-1/png/pngrutil.c ****       language_offset = prefix_length;
 9327              		.loc 1 2628 7 is_stmt 1 view .LVU2830
2628:fltk-1.3.4-1/png/pngrutil.c ****       language_offset = prefix_length;
 9328              		.loc 1 2628 21 is_stmt 0 view .LVU2831
 9329 0121 8D4603   		leal	3(%rsi), %eax
 9330 0124 4989C0   		movq	%rax, %r8
 9331              	.LVL1066:
2629:fltk-1.3.4-1/png/pngrutil.c **** 
 9332              		.loc 1 2629 7 is_stmt 1 view .LVU2832
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9333              		.loc 1 2631 7 view .LVU2833
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9334              		.loc 1 2631 14 view .LVU2834
 9335 0127 4801D8   		addq	%rbx, %rax
 9336              	.LVL1067:
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9337              		.loc 1 2631 7 is_stmt 0 view .LVU2835
 9338 012a 4589C7   		movl	%r8d, %r15d
 9339 012d 4539C5   		cmpl	%r8d, %r13d
 9340 0130 771B     		ja	.L808
 9341 0132 E90A0200 		jmp	.L858
 9341      00
 9342              	.LVL1068:
 9343 0137 660F1F84 		.p2align 4,,10
 9343      00000000 
 9343      00
 9344              		.p2align 3
 9345              	.L809:
2633:fltk-1.3.4-1/png/pngrutil.c **** 
 9346              		.loc 1 2633 27 is_stmt 1 view .LVU2836
2632:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop */ ;
 9347              		.loc 1 2632 10 view .LVU2837
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9348              		.loc 1 2631 14 view .LVU2838
 9349 0140 4883C001 		addq	$1, %rax
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9350              		.loc 1 2631 7 is_stmt 0 view .LVU2839
 9351 0144 4539FD   		cmpl	%r15d, %r13d
 9352 0147 0F86DF01 		jbe	.L859
 9352      0000
 9353              	.LVL1069:
 9354              	.L808:
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9355              		.loc 1 2631 7 view .LVU2840
 9356 014d 4489FA   		movl	%r15d, %edx
 9357 0150 4183C701 		addl	$1, %r15d
 9358              	.LVL1070:
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9359              		.loc 1 2631 37 discriminator 1 view .LVU2841
 9360 0154 803800   		cmpb	$0, (%rax)
 9361 0157 448D7202 		leal	2(%rdx), %r14d
 9362 015b 75E3     		jne	.L809
 9363              	.LVL1071:
 9364              	.L807:
2636:fltk-1.3.4-1/png/pngrutil.c **** 
 9365              		.loc 1 2636 7 is_stmt 1 view .LVU2842
2638:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9366              		.loc 1 2638 7 view .LVU2843
2638:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9367              		.loc 1 2638 14 view .LVU2844
2638:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9368              		.loc 1 2638 7 is_stmt 0 view .LVU2845
 9369 015d 4539FD   		cmpl	%r15d, %r13d
 9370 0160 7627     		jbe	.L811
 9371 0162 4489F8   		movl	%r15d, %eax
 9372 0165 4589FE   		movl	%r15d, %r14d
 9373 0168 4801D8   		addq	%rbx, %rax
 9374 016b EB10     		jmp	.L812
 9375              	.LVL1072:
 9376 016d 0F1F00   		.p2align 4,,10
 9377              		.p2align 3
 9378              	.L813:
2640:fltk-1.3.4-1/png/pngrutil.c **** 
 9379              		.loc 1 2640 27 is_stmt 1 view .LVU2846
2639:fltk-1.3.4-1/png/pngrutil.c ****          /* Empty loop */ ;
 9380              		.loc 1 2639 10 view .LVU2847
2638:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9381              		.loc 1 2638 14 view .LVU2848
 9382 0170 4883C001 		addq	$1, %rax
2638:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9383              		.loc 1 2638 7 is_stmt 0 view .LVU2849
 9384 0174 4539F5   		cmpl	%r14d, %r13d
 9385 0177 0F84A601 		je	.L860
 9385      0000
 9386              	.LVL1073:
 9387              	.L812:
2638:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9388              		.loc 1 2638 7 view .LVU2850
 9389 017d 4489F2   		movl	%r14d, %edx
 9390 0180 4183C601 		addl	$1, %r14d
 9391              	.LVL1074:
2638:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9392              		.loc 1 2638 37 discriminator 1 view .LVU2851
 9393 0184 803800   		cmpb	$0, (%rax)
 9394 0187 75E7     		jne	.L813
 9395              	.LVL1075:
 9396              	.L811:
2647:fltk-1.3.4-1/png/pngrutil.c **** 
 9397              		.loc 1 2647 7 is_stmt 1 view .LVU2852
2649:fltk-1.3.4-1/png/pngrutil.c ****          uncompressed_length = length - prefix_length;
 9398              		.loc 1 2649 7 view .LVU2853
2649:fltk-1.3.4-1/png/pngrutil.c ****          uncompressed_length = length - prefix_length;
 9399              		.loc 1 2649 10 is_stmt 0 view .LVU2854
 9400 0189 84C9     		testb	%cl, %cl
 9401 018b 0F853A01 		jne	.L850
 9401      0000
 9402 0191 4539F5   		cmpl	%r14d, %r13d
 9403 0194 0F822D01 		jb	.L814
 9403      0000
2650:fltk-1.3.4-1/png/pngrutil.c **** 
 9404              		.loc 1 2650 10 is_stmt 1 view .LVU2855
2650:fltk-1.3.4-1/png/pngrutil.c **** 
 9405              		.loc 1 2650 39 is_stmt 0 view .LVU2856
 9406 019a 4529F5   		subl	%r14d, %r13d
 9407              	.LVL1076:
 9408              	.LBB338:
2678:fltk-1.3.4-1/png/pngrutil.c **** 
 9409              		.loc 1 2678 30 view .LVU2857
 9410 019d B8010000 		movl	$1, %eax
 9410      00
 9411              	.LBE338:
2650:fltk-1.3.4-1/png/pngrutil.c **** 
 9412              		.loc 1 2650 30 view .LVU2858
 9413 01a2 4C896C24 		movq	%r13, 24(%rsp)
 9413      18
2671:fltk-1.3.4-1/png/pngrutil.c ****       {
 9414              		.loc 1 2671 7 is_stmt 1 view .LVU2859
 9415              	.LBB339:
2673:fltk-1.3.4-1/png/pngrutil.c **** 
 9416              		.loc 1 2673 10 view .LVU2860
2675:fltk-1.3.4-1/png/pngrutil.c **** 
 9417              		.loc 1 2675 10 view .LVU2861
2675:fltk-1.3.4-1/png/pngrutil.c **** 
 9418              		.loc 1 2675 52 is_stmt 0 view .LVU2862
 9419 01a7 4901DD   		addq	%rbx, %r13
 9420 01aa 43C64435 		movb	$0, 0(%r13,%r14)
 9420      0000
2677:fltk-1.3.4-1/png/pngrutil.c ****             text.compression = PNG_ITXT_COMPRESSION_NONE;
 9421              		.loc 1 2677 10 is_stmt 1 view .LVU2863
 9422 01b0 4901DE   		addq	%rbx, %r14
 9423              	.LVL1077:
 9424              	.L815:
2677:fltk-1.3.4-1/png/pngrutil.c ****             text.compression = PNG_ITXT_COMPRESSION_NONE;
 9425              		.loc 1 2677 10 is_stmt 0 view .LVU2864
 9426 01b3 89442420 		movl	%eax, 32(%rsp)
2683:fltk-1.3.4-1/png/pngrutil.c ****          text.lang = (png_charp)buffer + language_offset;
 9427              		.loc 1 2683 10 is_stmt 1 view .LVU2865
2684:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = (png_charp)buffer + translated_keyword_offset;
 9428              		.loc 1 2684 40 is_stmt 0 view .LVU2866
 9429 01b7 4489C0   		movl	%r8d, %eax
2690:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9430              		.loc 1 2690 14 view .LVU2867
 9431 01ba 488D5424 		leaq	32(%rsp), %rdx
 9431      20
 9432 01bf 4C89E6   		movq	%r12, %rsi
2684:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = (png_charp)buffer + translated_keyword_offset;
 9433              		.loc 1 2684 40 view .LVU2868
 9434 01c2 4801D8   		addq	%rbx, %rax
2683:fltk-1.3.4-1/png/pngrutil.c ****          text.lang = (png_charp)buffer + language_offset;
 9435              		.loc 1 2683 19 view .LVU2869
 9436 01c5 48895C24 		movq	%rbx, 40(%rsp)
 9436      28
2684:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = (png_charp)buffer + translated_keyword_offset;
 9437              		.loc 1 2684 10 is_stmt 1 view .LVU2870
2690:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9438              		.loc 1 2690 14 is_stmt 0 view .LVU2871
 9439 01ca B9010000 		movl	$1, %ecx
 9439      00
2685:fltk-1.3.4-1/png/pngrutil.c ****          text.text = (png_charp)buffer + prefix_length;
 9440              		.loc 1 2685 44 view .LVU2872
 9441 01cf 4C01FB   		addq	%r15, %rbx
 9442              	.LVL1078:
2684:fltk-1.3.4-1/png/pngrutil.c ****          text.lang_key = (png_charp)buffer + translated_keyword_offset;
 9443              		.loc 1 2684 40 view .LVU2873
 9444 01d2 48894424 		movq	%rax, 72(%rsp)
 9444      48
2685:fltk-1.3.4-1/png/pngrutil.c ****          text.text = (png_charp)buffer + prefix_length;
 9445              		.loc 1 2685 10 is_stmt 1 view .LVU2874
2688:fltk-1.3.4-1/png/pngrutil.c **** 
 9446              		.loc 1 2688 27 is_stmt 0 view .LVU2875
 9447 01d7 488B4424 		movq	24(%rsp), %rax
 9447      18
2690:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9448              		.loc 1 2690 14 view .LVU2876
 9449 01dc 4889EF   		movq	%rbp, %rdi
2685:fltk-1.3.4-1/png/pngrutil.c ****          text.text = (png_charp)buffer + prefix_length;
 9450              		.loc 1 2685 44 view .LVU2877
 9451 01df 48895C24 		movq	%rbx, 80(%rsp)
 9451      50
2686:fltk-1.3.4-1/png/pngrutil.c ****          text.text_length = 0;
 9452              		.loc 1 2686 10 is_stmt 1 view .LVU2878
2686:fltk-1.3.4-1/png/pngrutil.c ****          text.text_length = 0;
 9453              		.loc 1 2686 40 is_stmt 0 view .LVU2879
 9454 01e4 4C897424 		movq	%r14, 48(%rsp)
 9454      30
2687:fltk-1.3.4-1/png/pngrutil.c ****          text.itxt_length = uncompressed_length;
 9455              		.loc 1 2687 10 is_stmt 1 view .LVU2880
2687:fltk-1.3.4-1/png/pngrutil.c ****          text.itxt_length = uncompressed_length;
 9456              		.loc 1 2687 27 is_stmt 0 view .LVU2881
 9457 01e9 48C74424 		movq	$0, 56(%rsp)
 9457      38000000 
 9457      00
2688:fltk-1.3.4-1/png/pngrutil.c **** 
 9458              		.loc 1 2688 10 is_stmt 1 view .LVU2882
2688:fltk-1.3.4-1/png/pngrutil.c **** 
 9459              		.loc 1 2688 27 is_stmt 0 view .LVU2883
 9460 01f2 48894424 		movq	%rax, 64(%rsp)
 9460      40
2690:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9461              		.loc 1 2690 10 is_stmt 1 view .LVU2884
2690:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9462              		.loc 1 2690 14 is_stmt 0 view .LVU2885
 9463 01f7 E8000000 		call	png_set_text_2@PLT
 9463      00
 9464              	.LVL1079:
2691:fltk-1.3.4-1/png/pngrutil.c ****       }
 9465              		.loc 1 2691 20 view .LVU2886
 9466 01fc 4C8D0D00 		leaq	.LC42(%rip), %r9
 9466      000000
2690:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9467              		.loc 1 2690 13 view .LVU2887
 9468 0203 85C0     		testl	%eax, %eax
 9469 0205 7550     		jne	.L801
 9470 0207 660F1F84 		.p2align 4,,10
 9470      00000000 
 9470      00
 9471              		.p2align 3
 9472              	.L794:
2690:fltk-1.3.4-1/png/pngrutil.c ****             errmsg = "insufficient memory";
 9473              		.loc 1 2690 13 view .LVU2888
 9474              	.LBE339:
 9475              	.LBE337:
2700:fltk-1.3.4-1/png/pngrutil.c **** #endif
 9476              		.loc 1 2700 1 view .LVU2889
 9477 0210 488B4424 		movq	88(%rsp), %rax
 9477      58
 9478 0215 64483304 		xorq	%fs:40, %rax
 9478      25280000 
 9478      00
 9479 021e 0F852601 		jne	.L861
 9479      0000
 9480 0224 4883C468 		addq	$104, %rsp
 9481              		.cfi_remember_state
 9482              		.cfi_def_cfa_offset 56
 9483 0228 5B       		popq	%rbx
 9484              		.cfi_def_cfa_offset 48
 9485 0229 5D       		popq	%rbp
 9486              		.cfi_def_cfa_offset 40
 9487              	.LVL1080:
2700:fltk-1.3.4-1/png/pngrutil.c **** #endif
 9488              		.loc 1 2700 1 view .LVU2890
 9489 022a 415C     		popq	%r12
 9490              		.cfi_def_cfa_offset 32
 9491              	.LVL1081:
2700:fltk-1.3.4-1/png/pngrutil.c **** #endif
 9492              		.loc 1 2700 1 view .LVU2891
 9493 022c 415D     		popq	%r13
 9494              		.cfi_def_cfa_offset 24
 9495 022e 415E     		popq	%r14
 9496              		.cfi_def_cfa_offset 16
 9497 0230 415F     		popq	%r15
 9498              		.cfi_def_cfa_offset 8
 9499 0232 C3       		ret
 9500              	.LVL1082:
 9501              		.p2align 4,,10
 9502 0233 0F1F4400 		.p2align 3
 9502      00
 9503              	.L856:
 9504              		.cfi_restore_state
2586:fltk-1.3.4-1/png/pngrutil.c **** 
 9505              		.loc 1 2586 7 is_stmt 1 view .LVU2892
2586:fltk-1.3.4-1/png/pngrutil.c **** 
 9506              		.loc 1 2586 21 is_stmt 0 view .LVU2893
 9507 0238 83C808   		orl	$8, %eax
 9508 023b 89852C01 		movl	%eax, 300(%rbp)
 9508      0000
 9509 0241 E920FEFF 		jmp	.L799
 9509      FF
 9510              	.LVL1083:
 9511 0246 662E0F1F 		.p2align 4,,10
 9511      84000000 
 9511      0000
 9512              		.p2align 3
 9513              	.L821:
2610:fltk-1.3.4-1/png/pngrutil.c **** 
 9514              		.loc 1 2610 14 view .LVU2894
 9515 0250 4C8D0D00 		leaq	.LC22(%rip), %r9
 9515      000000
 9516              	.LVL1084:
 9517              	.L801:
2699:fltk-1.3.4-1/png/pngrutil.c **** }
 9518              		.loc 1 2699 7 is_stmt 1 view .LVU2895
 9519 0257 4C89CE   		movq	%r9, %rsi
 9520 025a 4889EF   		movq	%rbp, %rdi
 9521 025d E8000000 		call	png_chunk_benign_error@PLT
 9521      00
 9522              	.LVL1085:
2699:fltk-1.3.4-1/png/pngrutil.c **** }
 9523              		.loc 1 2699 7 is_stmt 0 view .LVU2896
 9524 0262 EBAC     		jmp	.L794
 9525              	.LVL1086:
 9526              		.p2align 4,,10
 9527 0264 0F1F4000 		.p2align 3
 9528              	.L822:
2617:fltk-1.3.4-1/png/pngrutil.c **** 
 9529              		.loc 1 2617 14 view .LVU2897
 9530 0268 4C8D0D00 		leaq	.LC21(%rip), %r9
 9530      000000
 9531 026f EBE6     		jmp	.L801
 9532              	.LVL1087:
 9533              		.p2align 4,,10
 9534 0271 0F1F8000 		.p2align 3
 9534      000000
 9535              	.L853:
2569:fltk-1.3.4-1/png/pngrutil.c ****          return;
 9536              		.loc 1 2569 10 is_stmt 1 view .LVU2898
 9537 0278 89D6     		movl	%edx, %esi
 9538              	.LVL1088:
2569:fltk-1.3.4-1/png/pngrutil.c ****          return;
 9539              		.loc 1 2569 10 is_stmt 0 view .LVU2899
 9540 027a E8000000 		call	png_crc_finish
 9540      00
 9541              	.LVL1089:
2570:fltk-1.3.4-1/png/pngrutil.c ****       }
 9542              		.loc 1 2570 10 is_stmt 1 view .LVU2900
 9543 027f EB8F     		jmp	.L794
 9544              	.LVL1090:
 9545              		.p2align 4,,10
 9546 0281 0F1F8000 		.p2align 3
 9546      000000
 9547              	.L854:
2575:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
 9548              		.loc 1 2575 10 view .LVU2901
 9549 0288 89D6     		movl	%edx, %esi
 9550              	.LVL1091:
2575:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "no space in chunk cache");
 9551              		.loc 1 2575 10 is_stmt 0 view .LVU2902
 9552 028a E8000000 		call	png_crc_finish
 9552      00
 9553              	.LVL1092:
2576:fltk-1.3.4-1/png/pngrutil.c ****          return;
 9554              		.loc 1 2576 10 is_stmt 1 view .LVU2903
 9555 028f 488D3500 		leaq	.LC39(%rip), %rsi
 9555      000000
 9556 0296 4889EF   		movq	%rbp, %rdi
 9557 0299 E8000000 		call	png_chunk_benign_error@PLT
 9557      00
 9558              	.LVL1093:
2577:fltk-1.3.4-1/png/pngrutil.c ****       }
 9559              		.loc 1 2577 10 view .LVU2904
 9560 029e E96DFFFF 		jmp	.L794
 9560      FF
 9561              	.LVL1094:
 9562              		.p2align 4,,10
 9563 02a3 0F1F4400 		.p2align 3
 9563      00
 9564              	.L857:
2592:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_benign_error(png_ptr, "out of memory");
 9565              		.loc 1 2592 7 view .LVU2905
 9566 02a8 4489EE   		movl	%r13d, %esi
 9567 02ab 4889EF   		movq	%rbp, %rdi
 9568 02ae E8000000 		call	png_crc_finish
 9568      00
 9569              	.LVL1095:
2593:fltk-1.3.4-1/png/pngrutil.c ****       return;
 9570              		.loc 1 2593 7 view .LVU2906
 9571 02b3 488D3500 		leaq	.LC20(%rip), %rsi
 9571      000000
 9572 02ba 4889EF   		movq	%rbp, %rdi
 9573 02bd E8000000 		call	png_chunk_benign_error@PLT
 9573      00
 9574              	.LVL1096:
2594:fltk-1.3.4-1/png/pngrutil.c ****    }
 9575              		.loc 1 2594 7 view .LVU2907
 9576 02c2 E949FFFF 		jmp	.L794
 9576      FF
 9577              	.LVL1097:
 9578              	.L814:
 9579              	.LBB342:
2652:fltk-1.3.4-1/png/pngrutil.c ****       {
 9580              		.loc 1 2652 12 view .LVU2908
2652:fltk-1.3.4-1/png/pngrutil.c ****       {
 9581              		.loc 1 2652 15 is_stmt 0 view .LVU2909
 9582 02c7 84C9     		testb	%cl, %cl
 9583 02c9 749D     		je	.L822
 9584              	.L850:
2652:fltk-1.3.4-1/png/pngrutil.c ****       {
 9585              		.loc 1 2652 15 view .LVU2910
 9586 02cb 44894424 		movl	%r8d, 12(%rsp)
 9586      0C
 9587 02d0 4539F5   		cmpl	%r14d, %r13d
 9588 02d3 7693     		jbe	.L822
2654:fltk-1.3.4-1/png/pngrutil.c **** 
 9589              		.loc 1 2654 10 is_stmt 1 view .LVU2911
2660:fltk-1.3.4-1/png/pngrutil.c ****             &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 9590              		.loc 1 2660 14 is_stmt 0 view .LVU2912
 9591 02d5 488D4C24 		leaq	24(%rsp), %rcx
 9591      18
 9592              	.LVL1098:
2660:fltk-1.3.4-1/png/pngrutil.c ****             &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 9593              		.loc 1 2660 14 view .LVU2913
 9594 02da 4489F2   		movl	%r14d, %edx
 9595 02dd 4489EE   		movl	%r13d, %esi
 9596 02e0 4889EF   		movq	%rbp, %rdi
2654:fltk-1.3.4-1/png/pngrutil.c **** 
 9597              		.loc 1 2654 30 view .LVU2914
 9598 02e3 48C74424 		movq	$-1, 24(%rsp)
 9598      18FFFFFF 
 9598      FF
2660:fltk-1.3.4-1/png/pngrutil.c ****             &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 9599              		.loc 1 2660 10 is_stmt 1 view .LVU2915
2660:fltk-1.3.4-1/png/pngrutil.c ****             &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 9600              		.loc 1 2660 14 is_stmt 0 view .LVU2916
 9601 02ec E8000000 		call	png_decompress_chunk.constprop.0
 9601      00
 9602              	.LVL1099:
2660:fltk-1.3.4-1/png/pngrutil.c ****             &uncompressed_length, 1/*terminate*/) == Z_STREAM_END)
 9603              		.loc 1 2660 13 view .LVU2917
 9604 02f1 448B4424 		movl	12(%rsp), %r8d
 9604      0C
 9605 02f6 83F801   		cmpl	$1, %eax
 9606 02f9 743D     		je	.L862
2665:fltk-1.3.4-1/png/pngrutil.c ****       }
 9607              		.loc 1 2665 13 is_stmt 1 view .LVU2918
2665:fltk-1.3.4-1/png/pngrutil.c ****       }
 9608              		.loc 1 2665 20 is_stmt 0 view .LVU2919
 9609 02fb 4C8B8D70 		movq	368(%rbp), %r9
 9609      010000
 9610              	.LVL1100:
2671:fltk-1.3.4-1/png/pngrutil.c ****       {
 9611              		.loc 1 2671 7 is_stmt 1 view .LVU2920
2671:fltk-1.3.4-1/png/pngrutil.c ****       {
 9612              		.loc 1 2671 10 is_stmt 0 view .LVU2921
 9613 0302 4D85C9   		testq	%r9, %r9
 9614 0305 0F854CFF 		jne	.L801
 9614      FFFF
 9615              	.LVL1101:
 9616              	.L852:
 9617              	.LBB340:
2673:fltk-1.3.4-1/png/pngrutil.c **** 
 9618              		.loc 1 2673 10 is_stmt 1 view .LVU2922
2675:fltk-1.3.4-1/png/pngrutil.c **** 
 9619              		.loc 1 2675 10 view .LVU2923
2675:fltk-1.3.4-1/png/pngrutil.c **** 
 9620              		.loc 1 2675 52 is_stmt 0 view .LVU2924
 9621 030b 488B4424 		movq	24(%rsp), %rax
 9621      18
 9622 0310 4901DE   		addq	%rbx, %r14
 9623 0313 4C01F0   		addq	%r14, %rax
 9624 0316 C60000   		movb	$0, (%rax)
2677:fltk-1.3.4-1/png/pngrutil.c ****             text.compression = PNG_ITXT_COMPRESSION_NONE;
 9625              		.loc 1 2677 10 is_stmt 1 view .LVU2925
2681:fltk-1.3.4-1/png/pngrutil.c **** 
 9626              		.loc 1 2681 30 is_stmt 0 view .LVU2926
 9627 0319 B8020000 		movl	$2, %eax
 9627      00
 9628 031e E990FEFF 		jmp	.L815
 9628      FF
 9629              	.LVL1102:
 9630              	.L860:
2681:fltk-1.3.4-1/png/pngrutil.c **** 
 9631              		.loc 1 2681 30 view .LVU2927
 9632 0323 448D7202 		leal	2(%rdx), %r14d
 9633 0327 E95DFEFF 		jmp	.L811
 9633      FF
 9634              	.L859:
2681:fltk-1.3.4-1/png/pngrutil.c **** 
 9635              		.loc 1 2681 30 view .LVU2928
 9636              	.LBE340:
2631:fltk-1.3.4-1/png/pngrutil.c ****          ++prefix_length)
 9637              		.loc 1 2631 7 view .LVU2929
 9638 032c 4589F7   		movl	%r14d, %r15d
 9639 032f 448D7203 		leal	3(%rdx), %r14d
 9640 0333 E925FEFF 		jmp	.L807
 9640      FF
 9641              	.LVL1103:
 9642              	.L862:
2662:fltk-1.3.4-1/png/pngrutil.c **** 
 9643              		.loc 1 2662 13 is_stmt 1 view .LVU2930
2662:fltk-1.3.4-1/png/pngrutil.c **** 
 9644              		.loc 1 2662 20 is_stmt 0 view .LVU2931
 9645 0338 488B9D98 		movq	1176(%rbp), %rbx
 9645      040000
 9646              	.LVL1104:
2671:fltk-1.3.4-1/png/pngrutil.c ****       {
 9647              		.loc 1 2671 7 is_stmt 1 view .LVU2932
 9648              	.LBB341:
2673:fltk-1.3.4-1/png/pngrutil.c **** 
 9649              		.loc 1 2673 10 view .LVU2933
2675:fltk-1.3.4-1/png/pngrutil.c **** 
 9650              		.loc 1 2675 10 view .LVU2934
 9651 033f EBCA     		jmp	.L852
 9652              	.LVL1105:
 9653              	.L858:
2675:fltk-1.3.4-1/png/pngrutil.c **** 
 9654              		.loc 1 2675 10 is_stmt 0 view .LVU2935
 9655 0341 448D7E04 		leal	4(%rsi), %r15d
 9656 0345 E913FEFF 		jmp	.L807
 9656      FF
 9657              	.LVL1106:
 9658              	.L861:
2675:fltk-1.3.4-1/png/pngrutil.c **** 
 9659              		.loc 1 2675 10 view .LVU2936
 9660              	.LBE341:
 9661              	.LBE342:
2700:fltk-1.3.4-1/png/pngrutil.c **** #endif
 9662              		.loc 1 2700 1 view .LVU2937
 9663 034a E8000000 		call	__stack_chk_fail@PLT
 9663      00
 9664              	.LVL1107:
 9665              	.L855:
2583:fltk-1.3.4-1/png/pngrutil.c **** 
 9666              		.loc 1 2583 7 is_stmt 1 view .LVU2938
 9667 034f 488D3500 		leaq	.LC12(%rip), %rsi
 9667      000000
 9668              	.LVL1108:
2583:fltk-1.3.4-1/png/pngrutil.c **** 
 9669              		.loc 1 2583 7 is_stmt 0 view .LVU2939
 9670 0356 4889EF   		movq	%rbp, %rdi
 9671              	.LVL1109:
2583:fltk-1.3.4-1/png/pngrutil.c **** 
 9672              		.loc 1 2583 7 view .LVU2940
 9673 0359 E8000000 		call	png_chunk_error@PLT
 9673      00
 9674              	.LVL1110:
2583:fltk-1.3.4-1/png/pngrutil.c **** 
 9675              		.loc 1 2583 7 view .LVU2941
 9676              		.cfi_endproc
 9677              	.LFE75:
 9679              		.section	.rodata.png_handle_unknown.str1.1,"aMS",@progbits,1
 9680              	.LC44:
 9681 0000 6572726F 		.string	"error in user chunk"
 9681      7220696E 
 9681      20757365 
 9681      72206368 
 9681      756E6B00 
 9682              	.LC45:
 9683 0014 53617669 		.string	"Saving unknown chunk:"
 9683      6E672075 
 9683      6E6B6E6F 
 9683      776E2063 
 9683      68756E6B 
 9684              		.section	.rodata.png_handle_unknown.str1.8,"aMS",@progbits,1
 9685              		.align 8
 9686              	.LC46:
 9687 0000 666F7263 		.string	"forcing save of an unhandled chunk; please call png_set_keep_unknown_chunks"
 9687      696E6720 
 9687      73617665 
 9687      206F6620 
 9687      616E2075 
 9688              		.section	.rodata.png_handle_unknown.str1.1
 9689              	.LC47:
 9690 002a 756E6861 		.string	"unhandled critical chunk"
 9690      6E646C65 
 9690      64206372 
 9690      69746963 
 9690      616C2063 
 9691              		.section	.text.png_handle_unknown,"ax",@progbits
 9692              		.p2align 4
 9693              		.globl	png_handle_unknown
 9695              	png_handle_unknown:
 9696              	.LVL1111:
 9697              	.LFB77:
2767:fltk-1.3.4-1/png/pngrutil.c ****    int handled = 0; /* the chunk was handled */
 9698              		.loc 1 2767 1 is_stmt 1 view -0
 9699              		.cfi_startproc
2767:fltk-1.3.4-1/png/pngrutil.c ****    int handled = 0; /* the chunk was handled */
 9700              		.loc 1 2767 1 is_stmt 0 view .LVU2943
 9701 0000 F30F1EFA 		endbr64
2768:fltk-1.3.4-1/png/pngrutil.c **** 
 9702              		.loc 1 2768 4 is_stmt 1 view .LVU2944
 9703              	.LVL1112:
2770:fltk-1.3.4-1/png/pngrutil.c **** 
 9704              		.loc 1 2770 4 view .LVU2945
2798:fltk-1.3.4-1/png/pngrutil.c ****       {
 9705              		.loc 1 2798 7 view .LVU2946
2767:fltk-1.3.4-1/png/pngrutil.c ****    int handled = 0; /* the chunk was handled */
 9706              		.loc 1 2767 1 is_stmt 0 view .LVU2947
 9707 0004 4154     		pushq	%r12
 9708              		.cfi_def_cfa_offset 16
 9709              		.cfi_offset 12, -16
 9710 0006 4989F4   		movq	%rsi, %r12
 9711 0009 89D6     		movl	%edx, %esi
 9712              	.LVL1113:
2767:fltk-1.3.4-1/png/pngrutil.c ****    int handled = 0; /* the chunk was handled */
 9713              		.loc 1 2767 1 view .LVU2948
 9714 000b 55       		pushq	%rbp
 9715              		.cfi_def_cfa_offset 24
 9716              		.cfi_offset 6, -24
 9717 000c 4889FD   		movq	%rdi, %rbp
 9718 000f 53       		pushq	%rbx
 9719              		.cfi_def_cfa_offset 32
 9720              		.cfi_offset 3, -32
2798:fltk-1.3.4-1/png/pngrutil.c ****       {
 9721              		.loc 1 2798 10 view .LVU2949
 9722 0010 4883BFF8 		cmpq	$0, 1016(%rdi)
 9722      03000000 
2767:fltk-1.3.4-1/png/pngrutil.c ****    int handled = 0; /* the chunk was handled */
 9723              		.loc 1 2767 1 view .LVU2950
 9724 0018 89CB     		movl	%ecx, %ebx
2798:fltk-1.3.4-1/png/pngrutil.c ****       {
 9725              		.loc 1 2798 10 view .LVU2951
 9726 001a 0F84F000 		je	.L864
 9726      0000
2800:fltk-1.3.4-1/png/pngrutil.c ****          {
 9727              		.loc 1 2800 10 is_stmt 1 view .LVU2952
2800:fltk-1.3.4-1/png/pngrutil.c ****          {
 9728              		.loc 1 2800 14 is_stmt 0 view .LVU2953
 9729 0020 E8000000 		call	png_cache_unknown_chunk
 9729      00
 9730              	.LVL1114:
2800:fltk-1.3.4-1/png/pngrutil.c ****          {
 9731              		.loc 1 2800 13 view .LVU2954
 9732 0025 85C0     		testl	%eax, %eax
 9733 0027 0F84AB00 		je	.L882
 9733      0000
 9734              	.LBB343:
2803:fltk-1.3.4-1/png/pngrutil.c ****                &png_ptr->unknown_chunk);
 9735              		.loc 1 2803 13 is_stmt 1 view .LVU2955
2803:fltk-1.3.4-1/png/pngrutil.c ****                &png_ptr->unknown_chunk);
 9736              		.loc 1 2803 24 is_stmt 0 view .LVU2956
 9737 002d 488DB570 		leaq	1136(%rbp), %rsi
 9737      040000
 9738 0034 4889EF   		movq	%rbp, %rdi
 9739 0037 FF95F803 		call	*1016(%rbp)
 9739      0000
 9740              	.LVL1115:
2815:fltk-1.3.4-1/png/pngrutil.c ****                png_chunk_error(png_ptr, "error in user chunk");
 9741              		.loc 1 2815 13 is_stmt 1 view .LVU2957
2815:fltk-1.3.4-1/png/pngrutil.c ****                png_chunk_error(png_ptr, "error in user chunk");
 9742              		.loc 1 2815 16 is_stmt 0 view .LVU2958
 9743 003d 85C0     		testl	%eax, %eax
 9744 003f 0F887301 		js	.L907
 9744      0000
2818:fltk-1.3.4-1/png/pngrutil.c ****             {
 9745              		.loc 1 2818 18 is_stmt 1 view .LVU2959
2818:fltk-1.3.4-1/png/pngrutil.c ****             {
 9746              		.loc 1 2818 21 is_stmt 0 view .LVU2960
 9747 0045 7546     		jne	.L867
2831:fltk-1.3.4-1/png/pngrutil.c ****                {
 9748              		.loc 1 2831 16 is_stmt 1 view .LVU2961
2831:fltk-1.3.4-1/png/pngrutil.c ****                {
 9749              		.loc 1 2831 19 is_stmt 0 view .LVU2962
 9750 0047 83FB01   		cmpl	$1, %ebx
 9751 004a 0F8E3001 		jle	.L908
 9751      0000
2831:fltk-1.3.4-1/png/pngrutil.c ****                {
 9752              		.loc 1 2831 19 view .LVU2963
 9753              	.LBE343:
2907:fltk-1.3.4-1/png/pngrutil.c ****          (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
 9754              		.loc 1 2907 7 is_stmt 1 view .LVU2964
2907:fltk-1.3.4-1/png/pngrutil.c ****          (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
 9755              		.loc 1 2907 10 is_stmt 0 view .LVU2965
 9756 0050 83FB03   		cmpl	$3, %ebx
 9757 0053 0F85EC00 		jne	.L875
 9757      0000
 9758              	.LVL1116:
 9759              	.L881:
2912:fltk-1.3.4-1/png/pngrutil.c ****          {
 9760              		.loc 1 2912 10 is_stmt 1 view .LVU2966
2912:fltk-1.3.4-1/png/pngrutil.c ****          {
 9761              		.loc 1 2912 25 is_stmt 0 view .LVU2967
 9762 0059 8B856404 		movl	1124(%rbp), %eax
 9762      0000
2912:fltk-1.3.4-1/png/pngrutil.c ****          {
 9763              		.loc 1 2912 10 view .LVU2968
 9764 005f 83F801   		cmpl	$1, %eax
 9765 0062 7474     		je	.L882
 9766 0064 83F802   		cmpl	$2, %eax
 9767 0067 744F     		je	.L877
 9768 0069 85C0     		testl	%eax, %eax
 9769 006b 7409     		je	.L878
2925:fltk-1.3.4-1/png/pngrutil.c ****                /* FALL THROUGH */
 9770              		.loc 1 2925 16 is_stmt 1 view .LVU2969
 9771 006d 83E801   		subl	$1, %eax
 9772 0070 89856404 		movl	%eax, 1124(%rbp)
 9772      0000
 9773              	.L878:
2932:fltk-1.3.4-1/png/pngrutil.c ****                   &png_ptr->unknown_chunk, 1);
 9774              		.loc 1 2932 16 view .LVU2970
2933:fltk-1.3.4-1/png/pngrutil.c ****                handled = 1;
 9775              		.loc 1 2933 19 is_stmt 0 view .LVU2971
 9776 0076 488D9570 		leaq	1136(%rbp), %rdx
 9776      040000
2932:fltk-1.3.4-1/png/pngrutil.c ****                   &png_ptr->unknown_chunk, 1);
 9777              		.loc 1 2932 16 view .LVU2972
 9778 007d B9010000 		movl	$1, %ecx
 9778      00
 9779 0082 4C89E6   		movq	%r12, %rsi
 9780 0085 4889EF   		movq	%rbp, %rdi
 9781 0088 E8000000 		call	png_set_unknown_chunks@PLT
 9781      00
 9782              	.LVL1117:
2934:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_USER_LIMITS_SUPPORTED
 9783              		.loc 1 2934 16 is_stmt 1 view .LVU2973
2936:fltk-1.3.4-1/png/pngrutil.c ****          }
 9784              		.loc 1 2936 16 view .LVU2974
 9785              	.L867:
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9786              		.loc 1 2948 4 view .LVU2975
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9787              		.loc 1 2948 30 is_stmt 0 view .LVU2976
 9788 008d 488BB578 		movq	1144(%rbp), %rsi
 9788      040000
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9789              		.loc 1 2948 7 view .LVU2977
 9790 0094 4885F6   		testq	%rsi, %rsi
 9791 0097 746B     		je	.L863
2949:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->unknown_chunk.data = NULL;
 9792              		.loc 1 2949 7 is_stmt 1 view .LVU2978
 9793 0099 4889EF   		movq	%rbp, %rdi
 9794 009c E8000000 		call	png_free@PLT
 9794      00
 9795              	.LVL1118:
2950:fltk-1.3.4-1/png/pngrutil.c **** 
 9796              		.loc 1 2950 4 view .LVU2979
2962:fltk-1.3.4-1/png/pngrutil.c **** 
 9797              		.loc 1 2962 1 is_stmt 0 view .LVU2980
 9798 00a1 5B       		popq	%rbx
 9799              		.cfi_remember_state
 9800              		.cfi_def_cfa_offset 24
2950:fltk-1.3.4-1/png/pngrutil.c **** 
 9801              		.loc 1 2950 32 view .LVU2981
 9802 00a2 48C78578 		movq	$0, 1144(%rbp)
 9802      04000000 
 9802      000000
2960:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "unhandled critical chunk");
 9803              		.loc 1 2960 4 is_stmt 1 view .LVU2982
2962:fltk-1.3.4-1/png/pngrutil.c **** 
 9804              		.loc 1 2962 1 is_stmt 0 view .LVU2983
 9805 00ad 5D       		popq	%rbp
 9806              		.cfi_def_cfa_offset 16
 9807              	.LVL1119:
2962:fltk-1.3.4-1/png/pngrutil.c **** 
 9808              		.loc 1 2962 1 view .LVU2984
 9809 00ae 415C     		popq	%r12
 9810              		.cfi_def_cfa_offset 8
 9811              	.LVL1120:
2962:fltk-1.3.4-1/png/pngrutil.c **** 
 9812              		.loc 1 2962 1 view .LVU2985
 9813 00b0 C3       		ret
 9814              	.LVL1121:
 9815              		.p2align 4,,10
 9816 00b1 0F1F8000 		.p2align 3
 9816      000000
 9817              	.L877:
 9818              		.cfi_restore_state
2915:fltk-1.3.4-1/png/pngrutil.c ****                png_chunk_benign_error(png_ptr, "no space in chunk cache");
 9819              		.loc 1 2915 16 is_stmt 1 view .LVU2986
2915:fltk-1.3.4-1/png/pngrutil.c ****                png_chunk_benign_error(png_ptr, "no space in chunk cache");
 9820              		.loc 1 2915 46 is_stmt 0 view .LVU2987
 9821 00b8 C7856404 		movl	$1, 1124(%rbp)
 9821      00000100 
 9821      0000
2916:fltk-1.3.4-1/png/pngrutil.c ****                /* FALL THROUGH */
 9822              		.loc 1 2916 16 is_stmt 1 view .LVU2988
 9823 00c2 488D3500 		leaq	.LC39(%rip), %rsi
 9823      000000
 9824 00c9 4889EF   		movq	%rbp, %rdi
 9825 00cc E8000000 		call	png_chunk_benign_error@PLT
 9825      00
 9826              	.LVL1122:
 9827              		.p2align 4,,10
 9828 00d1 0F1F8000 		.p2align 3
 9828      000000
 9829              	.L882:
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9830              		.loc 1 2948 4 view .LVU2989
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9831              		.loc 1 2948 30 is_stmt 0 view .LVU2990
 9832 00d8 488BB578 		movq	1144(%rbp), %rsi
 9832      040000
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9833              		.loc 1 2948 7 view .LVU2991
 9834 00df 4885F6   		testq	%rsi, %rsi
 9835 00e2 7413     		je	.L884
 9836              	.L883:
2949:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->unknown_chunk.data = NULL;
 9837              		.loc 1 2949 7 is_stmt 1 view .LVU2992
 9838 00e4 4889EF   		movq	%rbp, %rdi
 9839 00e7 E8000000 		call	png_free@PLT
 9839      00
 9840              	.LVL1123:
2950:fltk-1.3.4-1/png/pngrutil.c **** 
 9841              		.loc 1 2950 4 view .LVU2993
2950:fltk-1.3.4-1/png/pngrutil.c **** 
 9842              		.loc 1 2950 32 is_stmt 0 view .LVU2994
 9843 00ec 48C78578 		movq	$0, 1144(%rbp)
 9843      04000000 
 9843      000000
2960:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "unhandled critical chunk");
 9844              		.loc 1 2960 4 is_stmt 1 view .LVU2995
 9845              	.L884:
2960:fltk-1.3.4-1/png/pngrutil.c ****       png_chunk_error(png_ptr, "unhandled critical chunk");
 9846              		.loc 1 2960 21 is_stmt 0 discriminator 1 view .LVU2996
 9847 00f7 F6851B02 		testb	$32, 539(%rbp)
 9847      000020
 9848 00fe 0F84A500 		je	.L909
 9848      0000
 9849              	.LVL1124:
 9850              	.L863:
2962:fltk-1.3.4-1/png/pngrutil.c **** 
 9851              		.loc 1 2962 1 view .LVU2997
 9852 0104 5B       		popq	%rbx
 9853              		.cfi_remember_state
 9854              		.cfi_def_cfa_offset 24
 9855 0105 5D       		popq	%rbp
 9856              		.cfi_def_cfa_offset 16
 9857              	.LVL1125:
2962:fltk-1.3.4-1/png/pngrutil.c **** 
 9858              		.loc 1 2962 1 view .LVU2998
 9859 0106 415C     		popq	%r12
 9860              		.cfi_def_cfa_offset 8
 9861              	.LVL1126:
2962:fltk-1.3.4-1/png/pngrutil.c **** 
 9862              		.loc 1 2962 1 view .LVU2999
 9863 0108 C3       		ret
 9864              	.LVL1127:
 9865 0109 0F1F8000 		.p2align 4,,10
 9865      000000
 9866              		.p2align 3
 9867              	.L864:
 9868              		.cfi_restore_state
2870:fltk-1.3.4-1/png/pngrutil.c ****             keep = png_ptr->unknown_default;
 9869              		.loc 1 2870 10 is_stmt 1 view .LVU3000
2870:fltk-1.3.4-1/png/pngrutil.c ****             keep = png_ptr->unknown_default;
 9870              		.loc 1 2870 13 is_stmt 0 view .LVU3001
 9871 0110 85C9     		testl	%ecx, %ecx
 9872 0112 7506     		jne	.L871
2871:fltk-1.3.4-1/png/pngrutil.c **** 
 9873              		.loc 1 2871 13 is_stmt 1 view .LVU3002
2871:fltk-1.3.4-1/png/pngrutil.c **** 
 9874              		.loc 1 2871 18 is_stmt 0 view .LVU3003
 9875 0114 8B9F0004 		movl	1024(%rdi), %ebx
 9875      0000
 9876              	.LVL1128:
 9877              	.L871:
2873:fltk-1.3.4-1/png/pngrutil.c ****             (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
 9878              		.loc 1 2873 10 is_stmt 1 view .LVU3004
2877:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
 9879              		.loc 1 2877 17 is_stmt 0 view .LVU3005
 9880 011a 4889EF   		movq	%rbp, %rdi
 9881              	.LVL1129:
2873:fltk-1.3.4-1/png/pngrutil.c ****             (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
 9882              		.loc 1 2873 13 view .LVU3006
 9883 011d 83FB03   		cmpl	$3, %ebx
 9884 0120 7446     		je	.L872
 9885              	.LVL1130:
2873:fltk-1.3.4-1/png/pngrutil.c ****             (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
 9886              		.loc 1 2873 46 discriminator 1 view .LVU3007
 9887 0122 83FB02   		cmpl	$2, %ebx
 9888 0125 7519     		jne	.L873
2874:fltk-1.3.4-1/png/pngrutil.c ****              PNG_CHUNK_ANCILLARY(png_ptr->chunk_name)))
 9889              		.loc 1 2874 47 view .LVU3008
 9890 0127 F6851B02 		testb	$32, 539(%rbp)
 9890      000020
 9891 012e 7410     		je	.L873
2877:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
 9892              		.loc 1 2877 13 is_stmt 1 view .LVU3009
2877:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
 9893              		.loc 1 2877 17 is_stmt 0 view .LVU3010
 9894 0130 E8000000 		call	png_cache_unknown_chunk
 9894      00
 9895              	.LVL1131:
2877:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
 9896              		.loc 1 2877 16 view .LVU3011
 9897 0135 85C0     		testl	%eax, %eax
 9898 0137 749F     		je	.L882
 9899 0139 EB0F     		jmp	.L870
 9900              	.LVL1132:
 9901 013b 0F1F4400 		.p2align 4,,10
 9901      00
 9902              		.p2align 3
 9903              	.L873:
2882:fltk-1.3.4-1/png/pngrutil.c ****       }
 9904              		.loc 1 2882 13 is_stmt 1 view .LVU3012
 9905 0140 E8000000 		call	png_crc_finish
 9905      00
 9906              	.LVL1133:
2907:fltk-1.3.4-1/png/pngrutil.c ****          (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
 9907              		.loc 1 2907 7 view .LVU3013
 9908              	.L875:
2907:fltk-1.3.4-1/png/pngrutil.c ****          (keep == PNG_HANDLE_CHUNK_IF_SAFE &&
 9909              		.loc 1 2907 43 is_stmt 0 view .LVU3014
 9910 0145 83FB02   		cmpl	$2, %ebx
 9911 0148 758E     		jne	.L882
 9912              	.L870:
2908:fltk-1.3.4-1/png/pngrutil.c ****           PNG_CHUNK_ANCILLARY(png_ptr->chunk_name)))
 9913              		.loc 1 2908 44 view .LVU3015
 9914 014a F6851B02 		testb	$32, 539(%rbp)
 9914      000020
 9915 0151 0F8502FF 		jne	.L881
 9915      FFFF
 9916              	.LVL1134:
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9917              		.loc 1 2948 4 is_stmt 1 view .LVU3016
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9918              		.loc 1 2948 30 is_stmt 0 view .LVU3017
 9919 0157 488BB578 		movq	1144(%rbp), %rsi
 9919      040000
2948:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, png_ptr->unknown_chunk.data);
 9920              		.loc 1 2948 7 view .LVU3018
 9921 015e 4885F6   		testq	%rsi, %rsi
 9922 0161 7581     		jne	.L883
 9923 0163 EB92     		jmp	.L884
 9924              	.LVL1135:
 9925              		.p2align 4,,10
 9926 0165 0F1F00   		.p2align 3
 9927              	.L872:
2877:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
 9928              		.loc 1 2877 13 is_stmt 1 view .LVU3019
2877:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
 9929              		.loc 1 2877 17 is_stmt 0 view .LVU3020
 9930 0168 E8000000 		call	png_cache_unknown_chunk
 9930      00
 9931              	.LVL1136:
2877:fltk-1.3.4-1/png/pngrutil.c ****                keep = PNG_HANDLE_CHUNK_NEVER;
 9932              		.loc 1 2877 16 view .LVU3021
 9933 016d 85C0     		testl	%eax, %eax
 9934 016f 0F85E4FE 		jne	.L881
 9934      FFFF
 9935 0175 E95EFFFF 		jmp	.L882
 9935      FF
 9936              	.LVL1137:
 9937 017a 660F1F44 		.p2align 4,,10
 9937      0000
 9938              		.p2align 3
 9939              	.L908:
 9940              	.LBB344:
2834:fltk-1.3.4-1/png/pngrutil.c ****                      {
 9941              		.loc 1 2834 22 is_stmt 1 view .LVU3022
2834:fltk-1.3.4-1/png/pngrutil.c ****                      {
 9942              		.loc 1 2834 25 is_stmt 0 view .LVU3023
 9943 0180 83BD0004 		cmpl	$1, 1024(%rbp)
 9943      000001
 9944 0187 7FC1     		jg	.L870
2836:fltk-1.3.4-1/png/pngrutil.c ****                         png_app_warning(png_ptr,
 9945              		.loc 1 2836 25 is_stmt 1 view .LVU3024
 9946 0189 4889EF   		movq	%rbp, %rdi
 9947 018c 488D3500 		leaq	.LC45(%rip), %rsi
 9947      000000
 9948 0193 E8000000 		call	png_chunk_warning@PLT
 9948      00
 9949              	.LVL1138:
2837:fltk-1.3.4-1/png/pngrutil.c ****                            "forcing save of an unhandled chunk;"
 9950              		.loc 1 2837 25 view .LVU3025
 9951 0198 488D3500 		leaq	.LC46(%rip), %rsi
 9951      000000
 9952 019f 4889EF   		movq	%rbp, %rdi
 9953 01a2 E8000000 		call	png_app_warning@PLT
 9953      00
 9954              	.LVL1139:
2837:fltk-1.3.4-1/png/pngrutil.c ****                            "forcing save of an unhandled chunk;"
 9955              		.loc 1 2837 25 is_stmt 0 view .LVU3026
 9956 01a7 EBA1     		jmp	.L870
 9957              	.LVL1140:
 9958              	.L909:
2837:fltk-1.3.4-1/png/pngrutil.c ****                            "forcing save of an unhandled chunk;"
 9959              		.loc 1 2837 25 view .LVU3027
 9960              	.LBE344:
2961:fltk-1.3.4-1/png/pngrutil.c **** }
 9961              		.loc 1 2961 7 is_stmt 1 view .LVU3028
 9962 01a9 488D3500 		leaq	.LC47(%rip), %rsi
 9962      000000
 9963 01b0 4889EF   		movq	%rbp, %rdi
 9964 01b3 E8000000 		call	png_chunk_error@PLT
 9964      00
 9965              	.LVL1141:
 9966              	.L907:
 9967              	.LBB345:
2816:fltk-1.3.4-1/png/pngrutil.c **** 
 9968              		.loc 1 2816 16 view .LVU3029
 9969 01b8 488D3500 		leaq	.LC44(%rip), %rsi
 9969      000000
 9970 01bf 4889EF   		movq	%rbp, %rdi
 9971 01c2 E8000000 		call	png_chunk_error@PLT
 9971      00
 9972              	.LVL1142:
2816:fltk-1.3.4-1/png/pngrutil.c **** 
 9973              		.loc 1 2816 16 is_stmt 0 view .LVU3030
 9974              	.LBE345:
 9975              		.cfi_endproc
 9976              	.LFE77:
 9978              		.section	.rodata.png_check_chunk_name.str1.1,"aMS",@progbits,1
 9979              	.LC48:
 9980 0000 696E7661 		.string	"invalid chunk type"
 9980      6C696420 
 9980      6368756E 
 9980      6B207479 
 9980      706500
 9981              		.section	.text.png_check_chunk_name,"ax",@progbits
 9982              		.p2align 4
 9983              		.globl	png_check_chunk_name
 9985              	png_check_chunk_name:
 9986              	.LVL1143:
 9987              	.LFB78:
2978:fltk-1.3.4-1/png/pngrutil.c ****    int i;
 9988              		.loc 1 2978 1 is_stmt 1 view -0
 9989              		.cfi_startproc
2978:fltk-1.3.4-1/png/pngrutil.c ****    int i;
 9990              		.loc 1 2978 1 is_stmt 0 view .LVU3032
 9991 0000 F30F1EFA 		endbr64
2979:fltk-1.3.4-1/png/pngrutil.c **** 
 9992              		.loc 1 2979 4 is_stmt 1 view .LVU3033
2981:fltk-1.3.4-1/png/pngrutil.c **** 
 9993              		.loc 1 2981 4 view .LVU3034
2983:fltk-1.3.4-1/png/pngrutil.c ****    {
 9994              		.loc 1 2983 4 view .LVU3035
 9995              	.LVL1144:
2983:fltk-1.3.4-1/png/pngrutil.c ****    {
 9996              		.loc 1 2983 14 view .LVU3036
2978:fltk-1.3.4-1/png/pngrutil.c ****    int i;
 9997              		.loc 1 2978 1 is_stmt 0 view .LVU3037
 9998 0004 BA040000 		movl	$4, %edx
 9998      00
 9999              	.LVL1145:
 10000              	.L913:
 10001              	.LBB346:
2985:fltk-1.3.4-1/png/pngrutil.c **** 
 10002              		.loc 1 2985 7 is_stmt 1 view .LVU3038
2987:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "invalid chunk type");
 10003              		.loc 1 2987 7 view .LVU3039
2985:fltk-1.3.4-1/png/pngrutil.c **** 
 10004              		.loc 1 2985 11 is_stmt 0 view .LVU3040
 10005 0009 400FB6C6 		movzbl	%sil, %eax
2987:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "invalid chunk type");
 10006              		.loc 1 2987 18 view .LVU3041
 10007 000d 8D48BF   		leal	-65(%rax), %ecx
2987:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "invalid chunk type");
 10008              		.loc 1 2987 10 view .LVU3042
 10009 0010 83F939   		cmpl	$57, %ecx
 10010 0013 7711     		ja	.L914
2987:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "invalid chunk type");
 10011              		.loc 1 2987 40 view .LVU3043
 10012 0015 83E85B   		subl	$91, %eax
2987:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_error(png_ptr, "invalid chunk type");
 10013              		.loc 1 2987 10 view .LVU3044
 10014 0018 83F805   		cmpl	$5, %eax
 10015 001b 7609     		jbe	.L914
2990:fltk-1.3.4-1/png/pngrutil.c ****    }
 10016              		.loc 1 2990 7 is_stmt 1 discriminator 2 view .LVU3045
2990:fltk-1.3.4-1/png/pngrutil.c ****    }
 10017              		.loc 1 2990 18 is_stmt 0 discriminator 2 view .LVU3046
 10018 001d C1EE08   		shrl	$8, %esi
 10019              	.LVL1146:
2990:fltk-1.3.4-1/png/pngrutil.c ****    }
 10020              		.loc 1 2990 18 discriminator 2 view .LVU3047
 10021              	.LBE346:
2983:fltk-1.3.4-1/png/pngrutil.c ****    {
 10022              		.loc 1 2983 20 is_stmt 1 discriminator 2 view .LVU3048
2983:fltk-1.3.4-1/png/pngrutil.c ****    {
 10023              		.loc 1 2983 14 discriminator 2 view .LVU3049
2983:fltk-1.3.4-1/png/pngrutil.c ****    {
 10024              		.loc 1 2983 4 is_stmt 0 discriminator 2 view .LVU3050
 10025 0020 83EA01   		subl	$1, %edx
 10026              	.LVL1147:
2983:fltk-1.3.4-1/png/pngrutil.c ****    {
 10027              		.loc 1 2983 4 discriminator 2 view .LVU3051
 10028 0023 75E4     		jne	.L913
 10029 0025 C3       		ret
 10030              	.LVL1148:
 10031              	.L914:
 10032              	.LBB347:
2988:fltk-1.3.4-1/png/pngrutil.c **** 
 10033              		.loc 1 2988 10 is_stmt 1 view .LVU3052
 10034              	.LBE347:
2978:fltk-1.3.4-1/png/pngrutil.c ****    int i;
 10035              		.loc 1 2978 1 is_stmt 0 view .LVU3053
 10036 0026 4883EC08 		subq	$8, %rsp
 10037              		.cfi_def_cfa_offset 16
 10038              	.LBB348:
2988:fltk-1.3.4-1/png/pngrutil.c **** 
 10039              		.loc 1 2988 10 view .LVU3054
 10040 002a 488D3500 		leaq	.LC48(%rip), %rsi
 10040      000000
 10041              	.LVL1149:
2988:fltk-1.3.4-1/png/pngrutil.c **** 
 10042              		.loc 1 2988 10 view .LVU3055
 10043 0031 E8000000 		call	png_chunk_error@PLT
 10043      00
 10044              	.LVL1150:
2988:fltk-1.3.4-1/png/pngrutil.c **** 
 10045              		.loc 1 2988 10 view .LVU3056
 10046              	.LBE348:
 10047              		.cfi_endproc
 10048              	.LFE78:
 10050              		.section	.text.png_read_chunk_header,"ax",@progbits
 10051              		.p2align 4
 10052              		.globl	png_read_chunk_header
 10054              	png_read_chunk_header:
 10055              	.LVL1151:
 10056              	.LFB47:
 151:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[8];
 10057              		.loc 1 151 1 is_stmt 1 view -0
 10058              		.cfi_startproc
 151:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[8];
 10059              		.loc 1 151 1 is_stmt 0 view .LVU3058
 10060 0000 F30F1EFA 		endbr64
 10061 0004 4154     		pushq	%r12
 10062              		.cfi_def_cfa_offset 16
 10063              		.cfi_offset 12, -16
 162:fltk-1.3.4-1/png/pngrutil.c ****    length = png_get_uint_31(png_ptr, buf);
 10064              		.loc 1 162 4 view .LVU3059
 10065 0006 BA080000 		movl	$8, %edx
 10065      00
 151:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[8];
 10066              		.loc 1 151 1 view .LVU3060
 10067 000b 53       		pushq	%rbx
 10068              		.cfi_def_cfa_offset 24
 10069              		.cfi_offset 3, -24
 10070 000c 4889FB   		movq	%rdi, %rbx
 10071 000f 4883EC18 		subq	$24, %rsp
 10072              		.cfi_def_cfa_offset 48
 151:fltk-1.3.4-1/png/pngrutil.c ****    png_byte buf[8];
 10073              		.loc 1 151 1 view .LVU3061
 10074 0013 64488B04 		movq	%fs:40, %rax
 10074      25280000 
 10074      00
 10075 001c 48894424 		movq	%rax, 8(%rsp)
 10075      08
 10076 0021 31C0     		xorl	%eax, %eax
 152:fltk-1.3.4-1/png/pngrutil.c ****    png_uint_32 length;
 10077              		.loc 1 152 4 is_stmt 1 view .LVU3062
 153:fltk-1.3.4-1/png/pngrutil.c **** 
 10078              		.loc 1 153 4 view .LVU3063
 156:fltk-1.3.4-1/png/pngrutil.c **** #endif
 10079              		.loc 1 156 4 view .LVU3064
 162:fltk-1.3.4-1/png/pngrutil.c ****    length = png_get_uint_31(png_ptr, buf);
 10080              		.loc 1 162 4 is_stmt 0 view .LVU3065
 10081 0023 4989E4   		movq	%rsp, %r12
 156:fltk-1.3.4-1/png/pngrutil.c **** #endif
 10082              		.loc 1 156 22 view .LVU3066
 10083 0026 C787AC04 		movl	$33, 1196(%rdi)
 10083      00002100 
 10083      0000
 162:fltk-1.3.4-1/png/pngrutil.c ****    length = png_get_uint_31(png_ptr, buf);
 10084              		.loc 1 162 4 is_stmt 1 view .LVU3067
 10085 0030 4C89E6   		movq	%r12, %rsi
 10086 0033 E8000000 		call	png_read_data@PLT
 10086      00
 10087              	.LVL1152:
 163:fltk-1.3.4-1/png/pngrutil.c **** 
 10088              		.loc 1 163 4 view .LVU3068
 163:fltk-1.3.4-1/png/pngrutil.c **** 
 10089              		.loc 1 163 13 is_stmt 0 view .LVU3069
 10090 0038 4C89E6   		movq	%r12, %rsi
 10091 003b 4889DF   		movq	%rbx, %rdi
 10092 003e E8000000 		call	png_get_uint_31
 10092      00
 10093              	.LVL1153:
 10094 0043 8B542404 		movl	4(%rsp), %edx
 172:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf + 4, 4);
 10095              		.loc 1 172 4 view .LVU3070
 10096 0047 4889DF   		movq	%rbx, %rdi
 163:fltk-1.3.4-1/png/pngrutil.c **** 
 10097              		.loc 1 163 13 view .LVU3071
 10098 004a 4189C4   		movl	%eax, %r12d
 10099              	.LVL1154:
 166:fltk-1.3.4-1/png/pngrutil.c **** 
 10100              		.loc 1 166 4 is_stmt 1 view .LVU3072
 10101 004d 0FCA     		bswap	%edx
 166:fltk-1.3.4-1/png/pngrutil.c **** 
 10102              		.loc 1 166 24 is_stmt 0 view .LVU3073
 10103 004f 89931802 		movl	%edx, 536(%rbx)
 10103      0000
 168:fltk-1.3.4-1/png/pngrutil.c ****        (unsigned long)png_ptr->chunk_name, (unsigned long)length);
 10104              		.loc 1 168 4 is_stmt 1 view .LVU3074
 172:fltk-1.3.4-1/png/pngrutil.c ****    png_calculate_crc(png_ptr, buf + 4, 4);
 10105              		.loc 1 172 4 view .LVU3075
 10106 0055 E8000000 		call	png_reset_crc@PLT
 10106      00
 10107              	.LVL1155:
 173:fltk-1.3.4-1/png/pngrutil.c **** 
 10108              		.loc 1 173 4 view .LVU3076
 10109 005a 488D7424 		leaq	4(%rsp), %rsi
 10109      04
 10110 005f BA040000 		movl	$4, %edx
 10110      00
 10111 0064 4889DF   		movq	%rbx, %rdi
 10112 0067 E8000000 		call	png_calculate_crc@PLT
 10112      00
 10113              	.LVL1156:
 176:fltk-1.3.4-1/png/pngrutil.c **** 
 10114              		.loc 1 176 4 view .LVU3077
 10115 006c 8BB31802 		movl	536(%rbx), %esi
 10115      0000
 10116 0072 4889DF   		movq	%rbx, %rdi
 10117 0075 E8000000 		call	png_check_chunk_name
 10117      00
 10118              	.LVL1157:
 179:fltk-1.3.4-1/png/pngrutil.c **** #endif
 10119              		.loc 1 179 4 view .LVU3078
 179:fltk-1.3.4-1/png/pngrutil.c **** #endif
 10120              		.loc 1 179 22 is_stmt 0 view .LVU3079
 10121 007a C783AC04 		movl	$65, 1196(%rbx)
 10121      00004100 
 10121      0000
 182:fltk-1.3.4-1/png/pngrutil.c **** }
 10122              		.loc 1 182 4 is_stmt 1 view .LVU3080
 183:fltk-1.3.4-1/png/pngrutil.c **** 
 10123              		.loc 1 183 1 is_stmt 0 view .LVU3081
 10124 0084 488B4424 		movq	8(%rsp), %rax
 10124      08
 10125 0089 64483304 		xorq	%fs:40, %rax
 10125      25280000 
 10125      00
 10126 0092 750B     		jne	.L921
 10127 0094 4883C418 		addq	$24, %rsp
 10128              		.cfi_remember_state
 10129              		.cfi_def_cfa_offset 24
 10130 0098 4489E0   		movl	%r12d, %eax
 10131 009b 5B       		popq	%rbx
 10132              		.cfi_def_cfa_offset 16
 10133              	.LVL1158:
 183:fltk-1.3.4-1/png/pngrutil.c **** 
 10134              		.loc 1 183 1 view .LVU3082
 10135 009c 415C     		popq	%r12
 10136              		.cfi_def_cfa_offset 8
 10137              	.LVL1159:
 183:fltk-1.3.4-1/png/pngrutil.c **** 
 10138              		.loc 1 183 1 view .LVU3083
 10139 009e C3       		ret
 10140              	.LVL1160:
 10141              	.L921:
 10142              		.cfi_restore_state
 183:fltk-1.3.4-1/png/pngrutil.c **** 
 10143              		.loc 1 183 1 view .LVU3084
 10144 009f E8000000 		call	__stack_chk_fail@PLT
 10144      00
 10145              	.LVL1161:
 10146              		.cfi_endproc
 10147              	.LFE47:
 10149              		.section	.rodata.png_combine_row.str1.1,"aMS",@progbits,1
 10150              	.LC49:
 10151 0000 696E7465 		.string	"internal row logic error"
 10151      726E616C 
 10151      20726F77 
 10151      206C6F67 
 10151      69632065 
 10152              		.section	.rodata.png_combine_row.str1.8,"aMS",@progbits,1
 10153              		.align 8
 10154              	.LC50:
 10155 0000 696E7465 		.string	"internal row size calculation error"
 10155      726E616C 
 10155      20726F77 
 10155      2073697A 
 10155      65206361 
 10156              		.section	.rodata.png_combine_row.str1.1
 10157              	.LC51:
 10158 0019 696E7465 		.string	"internal row width error"
 10158      726E616C 
 10158      20726F77 
 10158      20776964 
 10158      74682065 
 10159              		.section	.rodata.png_combine_row.str1.8
 10160 0024 00000000 		.align 8
 10161              	.LC52:
 10162 0028 696E7661 		.string	"invalid user transform pixel depth"
 10162      6C696420 
 10162      75736572 
 10162      20747261 
 10162      6E73666F 
 10163              		.section	.text.png_combine_row,"ax",@progbits
 10164              		.p2align 4
 10165              		.globl	png_combine_row
 10167              	png_combine_row:
 10168              	.LVL1162:
 10169              	.LFB79:
3003:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int pixel_depth = png_ptr->transformed_pixel_depth;
 10170              		.loc 1 3003 1 is_stmt 1 view -0
 10171              		.cfi_startproc
3003:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int pixel_depth = png_ptr->transformed_pixel_depth;
 10172              		.loc 1 3003 1 is_stmt 0 view .LVU3086
 10173 0000 F30F1EFA 		endbr64
3004:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep sp = png_ptr->row_buf + 1;
 10174              		.loc 1 3004 4 is_stmt 1 view .LVU3087
3003:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int pixel_depth = png_ptr->transformed_pixel_depth;
 10175              		.loc 1 3003 1 is_stmt 0 view .LVU3088
 10176 0004 4157     		pushq	%r15
 10177              		.cfi_def_cfa_offset 16
 10178              		.cfi_offset 15, -16
 10179 0006 4989F0   		movq	%rsi, %r8
 10180 0009 4156     		pushq	%r14
 10181              		.cfi_def_cfa_offset 24
 10182              		.cfi_offset 14, -24
 10183 000b 4155     		pushq	%r13
 10184              		.cfi_def_cfa_offset 32
 10185              		.cfi_offset 13, -32
 10186 000d 4154     		pushq	%r12
 10187              		.cfi_def_cfa_offset 40
 10188              		.cfi_offset 12, -40
 10189 000f 55       		pushq	%rbp
 10190              		.cfi_def_cfa_offset 48
 10191              		.cfi_offset 6, -48
 10192 0010 53       		pushq	%rbx
 10193              		.cfi_def_cfa_offset 56
 10194              		.cfi_offset 3, -56
 10195 0011 4883EC18 		subq	$24, %rsp
 10196              		.cfi_def_cfa_offset 80
3004:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep sp = png_ptr->row_buf + 1;
 10197              		.loc 1 3004 38 view .LVU3089
 10198 0015 0FB6B77F 		movzbl	639(%rdi), %esi
 10198      020000
 10199              	.LVL1163:
3005:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t row_width = png_ptr->width;
 10200              		.loc 1 3005 4 is_stmt 1 view .LVU3090
3005:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t row_width = png_ptr->width;
 10201              		.loc 1 3005 32 is_stmt 0 view .LVU3091
 10202 001c 4C8B9F28 		movq	552(%rdi), %r11
 10202      020000
 10203              	.LVL1164:
3006:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int pass = png_ptr->pass;
 10204              		.loc 1 3006 4 is_stmt 1 view .LVU3092
3006:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int pass = png_ptr->pass;
 10205              		.loc 1 3006 40 is_stmt 0 view .LVU3093
 10206 0023 448B8FF8 		movl	504(%rdi), %r9d
 10206      010000
 10207              	.LVL1165:
3007:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep end_ptr = 0;
 10208              		.loc 1 3007 4 is_stmt 1 view .LVU3094
3008:fltk-1.3.4-1/png/pngrutil.c ****    png_byte end_byte = 0;
 10209              		.loc 1 3008 4 view .LVU3095
3009:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int end_mask;
 10210              		.loc 1 3009 4 view .LVU3096
3010:fltk-1.3.4-1/png/pngrutil.c **** 
 10211              		.loc 1 3010 4 view .LVU3097
3012:fltk-1.3.4-1/png/pngrutil.c **** 
 10212              		.loc 1 3012 4 view .LVU3098
3017:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row logic error");
 10213              		.loc 1 3017 4 view .LVU3099
3017:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row logic error");
 10214              		.loc 1 3017 7 is_stmt 0 view .LVU3100
 10215 002a 85F6     		testl	%esi, %esi
 10216 002c 0F844A05 		je	.L1028
 10216      0000
3024:fltk-1.3.4-1/png/pngrutil.c ****           PNG_ROWBYTES(pixel_depth, row_width))
 10217              		.loc 1 3024 15 view .LVU3101
 10218 0032 488B9F50 		movq	592(%rdi), %rbx
 10218      020000
 10219 0039 4189D2   		movl	%edx, %r10d
 10220 003c 89F0     		movl	%esi, %eax
 10221 003e 4D8D7B01 		leaq	1(%r11), %r15
 10222              	.LVL1166:
3024:fltk-1.3.4-1/png/pngrutil.c ****           PNG_ROWBYTES(pixel_depth, row_width))
 10223              		.loc 1 3024 15 view .LVU3102
 10224 0042 4C89CA   		movq	%r9, %rdx
 10225              	.LVL1167:
3024:fltk-1.3.4-1/png/pngrutil.c ****           PNG_ROWBYTES(pixel_depth, row_width))
 10226              		.loc 1 3024 4 is_stmt 1 view .LVU3103
3024:fltk-1.3.4-1/png/pngrutil.c ****           PNG_ROWBYTES(pixel_depth, row_width))
 10227              		.loc 1 3024 7 is_stmt 0 view .LVU3104
 10228 0045 4885DB   		testq	%rbx, %rbx
 10229 0048 741B     		je	.L924
3025:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row size calculation error");
 10230              		.loc 1 3025 11 discriminator 1 view .LVU3105
 10231 004a 83FE07   		cmpl	$7, %esi
 10232 004d 0F86ED01 		jbe	.L925
 10232      0000
 10233 0053 89F1     		movl	%esi, %ecx
 10234 0055 C1E903   		shrl	$3, %ecx
 10235 0058 490FAFC9 		imulq	%r9, %rcx
 10236              	.L926:
3024:fltk-1.3.4-1/png/pngrutil.c ****           PNG_ROWBYTES(pixel_depth, row_width))
 10237              		.loc 1 3024 36 view .LVU3106
 10238 005c 4839CB   		cmpq	%rcx, %rbx
 10239 005f 0F853302 		jne	.L1029
 10239      0000
 10240              	.L924:
3029:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row width error");
 10241              		.loc 1 3029 4 is_stmt 1 view .LVU3107
3029:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row width error");
 10242              		.loc 1 3029 7 is_stmt 0 view .LVU3108
 10243 0065 4D85C9   		testq	%r9, %r9
 10244 0068 0F840205 		je	.L1030
 10244      0000
3036:fltk-1.3.4-1/png/pngrutil.c ****    if (end_mask != 0)
 10245              		.loc 1 3036 4 is_stmt 1 view .LVU3109
3036:fltk-1.3.4-1/png/pngrutil.c ****    if (end_mask != 0)
 10246              		.loc 1 3036 41 is_stmt 0 view .LVU3110
 10247 006e 89D5     		movl	%edx, %ebp
 10248 0070 0FAFEE   		imull	%esi, %ebp
 10249              	.LVL1168:
3037:fltk-1.3.4-1/png/pngrutil.c ****    {
 10250              		.loc 1 3037 4 is_stmt 1 view .LVU3111
3037:fltk-1.3.4-1/png/pngrutil.c ****    {
 10251              		.loc 1 3037 7 is_stmt 0 view .LVU3112
 10252 0073 83E507   		andl	$7, %ebp
 10253              	.LVL1169:
3037:fltk-1.3.4-1/png/pngrutil.c ****    {
 10254              		.loc 1 3037 7 view .LVU3113
 10255 0076 0F848400 		je	.L975
 10255      0000
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
 10256              		.loc 1 3040 7 is_stmt 1 view .LVU3114
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
 10257              		.loc 1 3040 59 is_stmt 0 view .LVU3115
 10258 007c 83FE07   		cmpl	$7, %esi
 10259 007f 0F86E301 		jbe	.L929
 10259      0000
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
 10260              		.loc 1 3040 22 discriminator 1 view .LVU3116
 10261 0085 89F3     		movl	%esi, %ebx
 10262 0087 C1EB03   		shrl	$3, %ebx
 10263 008a 490FAFD9 		imulq	%r9, %rbx
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
 10264              		.loc 1 3040 59 discriminator 1 view .LVU3117
 10265 008e 4883EB01 		subq	$1, %rbx
 10266              	.L930:
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
 10267              		.loc 1 3040 15 discriminator 4 view .LVU3118
 10268 0092 4C01C3   		addq	%r8, %rbx
 10269              	.LVL1170:
3041:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_READ_PACKSWAP_SUPPORTED
 10270              		.loc 1 3041 7 is_stmt 1 discriminator 4 view .LVU3119
3045:fltk-1.3.4-1/png/pngrutil.c **** 
 10271              		.loc 1 3045 22 is_stmt 0 discriminator 4 view .LVU3120
 10272 0095 41BDFF00 		movl	$255, %r13d
 10272      0000
 10273 009b 89E9     		movl	%ebp, %ecx
3041:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_READ_PACKSWAP_SUPPORTED
 10274              		.loc 1 3041 16 discriminator 4 view .LVU3121
 10275 009d 440FB623 		movzbl	(%rbx), %r12d
 10276              	.LVL1171:
3043:fltk-1.3.4-1/png/pngrutil.c ****             /* little-endian byte */
 10277              		.loc 1 3043 10 is_stmt 1 discriminator 4 view .LVU3122
3043:fltk-1.3.4-1/png/pngrutil.c ****             /* little-endian byte */
 10278              		.loc 1 3043 13 is_stmt 0 discriminator 4 view .LVU3123
 10279 00a1 F6873601 		testb	$1, 310(%rdi)
 10279      000001
 10280 00a8 0F84AA01 		je	.L931
 10280      0000
3045:fltk-1.3.4-1/png/pngrutil.c **** 
 10281              		.loc 1 3045 13 is_stmt 1 view .LVU3124
3045:fltk-1.3.4-1/png/pngrutil.c **** 
 10282              		.loc 1 3045 22 is_stmt 0 view .LVU3125
 10283 00ae 41D3E5   		sall	%cl, %r13d
3060:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0 &&
 10284              		.loc 1 3060 7 view .LVU3126
 10285 00b1 80BF7402 		cmpb	$0, 628(%rdi)
 10285      000000
3045:fltk-1.3.4-1/png/pngrutil.c **** 
 10286              		.loc 1 3045 22 view .LVU3127
 10287 00b8 4489ED   		movl	%r13d, %ebp
 10288              	.LVL1172:
3060:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0 &&
 10289              		.loc 1 3060 4 is_stmt 1 view .LVU3128
3060:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0 &&
 10290              		.loc 1 3060 7 is_stmt 0 view .LVU3129
 10291 00bb 7551     		jne	.L1031
 10292 00bd 0F1F00   		.p2align 4,,10
 10293              		.p2align 3
 10294              	.L932:
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10295              		.loc 1 3477 4 is_stmt 1 view .LVU3130
 10296 00c0 83FE07   		cmpl	$7, %esi
 10297 00c3 0F865701 		jbe	.L973
 10297      0000
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10298              		.loc 1 3477 19 is_stmt 0 discriminator 1 view .LVU3131
 10299 00c9 C1EE03   		shrl	$3, %esi
 10300              	.LVL1173:
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10301              		.loc 1 3477 19 discriminator 1 view .LVU3132
 10302 00cc 89F2     		movl	%esi, %edx
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10303              		.loc 1 3477 4 discriminator 1 view .LVU3133
 10304 00ce 490FAFD1 		imulq	%r9, %rdx
 10305              	.LVL1174:
 10306              	.L974:
 10307              	.LBB349:
 10308              	.LBI349:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 10309              		.loc 2 31 1 is_stmt 1 discriminator 4 view .LVU3134
 10310              	.LBB350:
 10311              		.loc 2 34 3 discriminator 4 view .LVU3135
 10312              		.loc 2 34 10 is_stmt 0 discriminator 4 view .LVU3136
 10313 00d2 4C89FE   		movq	%r15, %rsi
 10314 00d5 4C89C7   		movq	%r8, %rdi
 10315              	.LVL1175:
 10316              		.loc 2 34 10 discriminator 4 view .LVU3137
 10317 00d8 E8000000 		call	memcpy@PLT
 10317      00
 10318              	.LVL1176:
 10319              	.L948:
 10320              		.loc 2 34 10 discriminator 4 view .LVU3138
 10321              	.LBE350:
 10322              	.LBE349:
3480:fltk-1.3.4-1/png/pngrutil.c ****       *end_ptr = (png_byte)((end_byte & end_mask) | (*end_ptr & ~end_mask));
 10323              		.loc 1 3480 4 is_stmt 1 view .LVU3139
3480:fltk-1.3.4-1/png/pngrutil.c ****       *end_ptr = (png_byte)((end_byte & end_mask) | (*end_ptr & ~end_mask));
 10324              		.loc 1 3480 7 is_stmt 0 view .LVU3140
 10325 00dd 4885DB   		testq	%rbx, %rbx
 10326 00e0 740C     		je	.L922
3481:fltk-1.3.4-1/png/pngrutil.c **** }
 10327              		.loc 1 3481 7 is_stmt 1 view .LVU3141
3481:fltk-1.3.4-1/png/pngrutil.c **** }
 10328              		.loc 1 3481 18 is_stmt 0 view .LVU3142
 10329 00e2 443223   		xorb	(%rbx), %r12b
 10330              	.LVL1177:
3481:fltk-1.3.4-1/png/pngrutil.c **** }
 10331              		.loc 1 3481 18 view .LVU3143
 10332 00e5 4421E5   		andl	%r12d, %ebp
 10333              	.LVL1178:
3481:fltk-1.3.4-1/png/pngrutil.c **** }
 10334              		.loc 1 3481 18 view .LVU3144
 10335 00e8 40322B   		xorb	(%rbx), %bpl
 10336 00eb 40882B   		movb	%bpl, (%rbx)
 10337              	.L922:
3482:fltk-1.3.4-1/png/pngrutil.c **** 
 10338              		.loc 1 3482 1 view .LVU3145
 10339 00ee 4883C418 		addq	$24, %rsp
 10340              		.cfi_remember_state
 10341              		.cfi_def_cfa_offset 56
 10342 00f2 5B       		popq	%rbx
 10343              		.cfi_def_cfa_offset 48
 10344              	.LVL1179:
3482:fltk-1.3.4-1/png/pngrutil.c **** 
 10345              		.loc 1 3482 1 view .LVU3146
 10346 00f3 5D       		popq	%rbp
 10347              		.cfi_def_cfa_offset 40
 10348 00f4 415C     		popq	%r12
 10349              		.cfi_def_cfa_offset 32
 10350 00f6 415D     		popq	%r13
 10351              		.cfi_def_cfa_offset 24
 10352 00f8 415E     		popq	%r14
 10353              		.cfi_def_cfa_offset 16
 10354 00fa 415F     		popq	%r15
 10355              		.cfi_def_cfa_offset 8
 10356 00fc C3       		ret
 10357              	.LVL1180:
 10358 00fd 0F1F00   		.p2align 4,,10
 10359              		.p2align 3
 10360              	.L975:
 10361              		.cfi_restore_state
3009:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int end_mask;
 10362              		.loc 1 3009 13 view .LVU3147
 10363 0100 4531E4   		xorl	%r12d, %r12d
3008:fltk-1.3.4-1/png/pngrutil.c ****    png_byte end_byte = 0;
 10364              		.loc 1 3008 14 view .LVU3148
 10365 0103 31DB     		xorl	%ebx, %ebx
 10366              	.LVL1181:
 10367              	.L928:
3060:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0 &&
 10368              		.loc 1 3060 4 is_stmt 1 view .LVU3149
3060:fltk-1.3.4-1/png/pngrutil.c ****        (png_ptr->transformations & PNG_INTERLACE) != 0 &&
 10369              		.loc 1 3060 7 is_stmt 0 view .LVU3150
 10370 0105 80BF7402 		cmpb	$0, 628(%rdi)
 10370      000000
 10371 010c 74B2     		je	.L932
 10372              	.L1031:
3007:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep end_ptr = 0;
 10373              		.loc 1 3007 31 discriminator 1 view .LVU3151
 10374 010e 440FB6B7 		movzbl	629(%rdi), %r14d
 10374      75020000 
3061:fltk-1.3.4-1/png/pngrutil.c ****        pass < 6 && (display == 0 ||
 10375              		.loc 1 3061 16 discriminator 1 view .LVU3152
 10376 0116 448BAF34 		movl	308(%rdi), %r13d
 10376      010000
3007:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep end_ptr = 0;
 10377              		.loc 1 3007 17 discriminator 1 view .LVU3153
 10378 011d 44897424 		movl	%r14d, 8(%rsp)
 10378      08
3007:fltk-1.3.4-1/png/pngrutil.c ****    png_bytep end_ptr = 0;
 10379              		.loc 1 3007 31 discriminator 1 view .LVU3154
 10380 0122 4489F1   		movl	%r14d, %ecx
3061:fltk-1.3.4-1/png/pngrutil.c ****        pass < 6 && (display == 0 ||
 10381              		.loc 1 3061 56 discriminator 1 view .LVU3155
 10382 0125 41F6C502 		testb	$2, %r13b
 10383 0129 7495     		je	.L932
 10384 012b 4183FE05 		cmpl	$5, %r14d
 10385 012f 778F     		ja	.L932
3062:fltk-1.3.4-1/png/pngrutil.c ****        /* The following copies everything for 'display' on passes 0, 2 and 4. */
 10386              		.loc 1 3062 17 view .LVU3156
 10387 0131 4585D2   		testl	%r10d, %r10d
 10388 0134 0F854601 		jne	.L933
 10388      0000
 10389 013a 83E101   		andl	$1, %ecx
 10390              	.L934:
3069:fltk-1.3.4-1/png/pngrutil.c ****          return;
 10391              		.loc 1 3069 7 is_stmt 1 view .LVU3157
3069:fltk-1.3.4-1/png/pngrutil.c ****          return;
 10392              		.loc 1 3069 24 is_stmt 0 view .LVU3158
 10393 013d 0FB6C9   		movzbl	%cl, %ecx
 10394 0140 894C240C 		movl	%ecx, 12(%rsp)
 10395 0144 8B4C2408 		movl	8(%rsp), %ecx
 10396 0148 83C101   		addl	$1, %ecx
 10397 014b D1E9     		shrl	%ecx
 10398 014d 4189CE   		movl	%ecx, %r14d
 10399 0150 B9030000 		movl	$3, %ecx
 10399      00
 10400 0155 4429F1   		subl	%r14d, %ecx
 10401 0158 448B7424 		movl	12(%rsp), %r14d
 10401      0C
 10402 015d 41D3E6   		sall	%cl, %r14d
 10403 0160 4489F1   		movl	%r14d, %ecx
 10404 0163 83E107   		andl	$7, %ecx
3069:fltk-1.3.4-1/png/pngrutil.c ****          return;
 10405              		.loc 1 3069 10 view .LVU3159
 10406 0166 39CA     		cmpl	%ecx, %edx
 10407 0168 7684     		jbe	.L922
3072:fltk-1.3.4-1/png/pngrutil.c ****       {
 10408              		.loc 1 3072 7 is_stmt 1 view .LVU3160
3072:fltk-1.3.4-1/png/pngrutil.c ****       {
 10409              		.loc 1 3072 10 is_stmt 0 view .LVU3161
 10410 016a 83FE07   		cmpl	$7, %esi
 10411 016d 0F873501 		ja	.L937
 10411      0000
 10412              	.LBB351:
3167:fltk-1.3.4-1/png/pngrutil.c ****          {
 10413              		.loc 1 3167 10 is_stmt 1 view .LVU3162
3178:fltk-1.3.4-1/png/pngrutil.c ****          {
 10414              		.loc 1 3178 10 view .LVU3163
3203:fltk-1.3.4-1/png/pngrutil.c ****          png_uint_32 mask;
 10415              		.loc 1 3203 10 view .LVU3164
3203:fltk-1.3.4-1/png/pngrutil.c ****          png_uint_32 mask;
 10416              		.loc 1 3203 22 is_stmt 0 view .LVU3165
 10417 0173 31D2     		xorl	%edx, %edx
 10418              	.LVL1182:
3203:fltk-1.3.4-1/png/pngrutil.c ****          png_uint_32 mask;
 10419              		.loc 1 3203 22 view .LVU3166
 10420 0175 B8080000 		movl	$8, %eax
 10420      00
 10421              	.LVL1183:
3203:fltk-1.3.4-1/png/pngrutil.c ****          png_uint_32 mask;
 10422              		.loc 1 3203 22 view .LVU3167
 10423 017a F7F6     		divl	%esi
 10424              	.LVL1184:
3204:fltk-1.3.4-1/png/pngrutil.c **** 
 10425              		.loc 1 3204 10 is_stmt 1 view .LVU3168
3207:fltk-1.3.4-1/png/pngrutil.c ****                mask = MASK(pass, pixel_depth, display, 0);
 10426              		.loc 1 3207 13 view .LVU3169
3207:fltk-1.3.4-1/png/pngrutil.c ****                mask = MASK(pass, pixel_depth, display, 0);
 10427              		.loc 1 3207 16 is_stmt 0 view .LVU3170
 10428 017c 4181E500 		andl	$65536, %r13d
 10428      000100
 10429 0183 0F848702 		je	.L938
 10429      0000
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10430              		.loc 1 3208 16 is_stmt 1 view .LVU3171
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10431              		.loc 1 3208 23 is_stmt 0 view .LVU3172
 10432 0189 4585D2   		testl	%r10d, %r10d
 10433 018c 0F84EE02 		je	.L939
 10433      0000
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10434              		.loc 1 3208 23 discriminator 1 view .LVU3173
 10435 0192 31D2     		xorl	%edx, %edx
 10436 0194 83FE01   		cmpl	$1, %esi
 10437 0197 740B     		je	.L940
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10438              		.loc 1 3208 23 discriminator 3 view .LVU3174
 10439 0199 31D2     		xorl	%edx, %edx
 10440 019b 83FE02   		cmpl	$2, %esi
 10441 019e 0F95C2   		setne	%dl
 10442 01a1 83C201   		addl	$1, %edx
 10443              	.L940:
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10444              		.loc 1 3208 23 discriminator 10 view .LVU3175
 10445 01a4 448B7424 		movl	8(%rsp), %r14d
 10445      08
 10446 01a9 4863D2   		movslq	%edx, %rdx
 10447 01ac 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 10448 01b0 41D1EE   		shrl	%r14d
 10449 01b3 4489F1   		movl	%r14d, %ecx
 10450 01b6 4801CA   		addq	%rcx, %rdx
 10451 01b9 488D0D00 		leaq	display_mask.7195(%rip), %rcx
 10451      000000
 10452 01c0 8B1491   		movl	(%rcx,%rdx,4), %edx
 10453              	.LVL1185:
 10454              	.L941:
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10455              		.loc 1 3208 23 discriminator 10 view .LVU3176
 10456 01c3 89C0     		movl	%eax, %eax
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10457              		.loc 1 3212 20 view .LVU3177
 10458 01c5 31F6     		xorl	%esi, %esi
 10459              	.LVL1186:
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10460              		.loc 1 3212 20 view .LVU3178
 10461 01c7 EB27     		jmp	.L949
 10462              	.LVL1187:
 10463 01c9 0F1F8000 		.p2align 4,,10
 10463      000000
 10464              		.p2align 3
 10465              	.L1032:
 10466              	.LBB352:
3229:fltk-1.3.4-1/png/pngrutil.c ****                else
 10467              		.loc 1 3229 19 is_stmt 1 view .LVU3179
3229:fltk-1.3.4-1/png/pngrutil.c ****                else
 10468              		.loc 1 3229 25 is_stmt 0 view .LVU3180
 10469 01d0 41320C30 		xorb	(%r8,%rsi), %cl
 10470 01d4 21CA     		andl	%ecx, %edx
 10471              	.LVL1188:
3229:fltk-1.3.4-1/png/pngrutil.c ****                else
 10472              		.loc 1 3229 25 view .LVU3181
 10473 01d6 41321430 		xorb	(%r8,%rsi), %dl
 10474 01da 41881430 		movb	%dl, (%r8,%rsi)
 10475              	.L946:
3238:fltk-1.3.4-1/png/pngrutil.c ****                break; /* May need to restore part of the last byte */
 10476              		.loc 1 3238 13 is_stmt 1 view .LVU3182
 10477 01de 4883C601 		addq	$1, %rsi
 10478              	.LVL1189:
3238:fltk-1.3.4-1/png/pngrutil.c ****                break; /* May need to restore part of the last byte */
 10479              		.loc 1 3238 16 is_stmt 0 view .LVU3183
 10480 01e2 4939C1   		cmpq	%rax, %r9
 10481 01e5 0F86F2FE 		jbe	.L948
 10481      FFFF
3241:fltk-1.3.4-1/png/pngrutil.c ****             ++dp;
 10482              		.loc 1 3241 13 is_stmt 1 view .LVU3184
3241:fltk-1.3.4-1/png/pngrutil.c ****             ++dp;
 10483              		.loc 1 3241 23 is_stmt 0 view .LVU3185
 10484 01eb 4929C1   		subq	%rax, %r9
 10485              	.LVL1190:
3242:fltk-1.3.4-1/png/pngrutil.c ****             ++sp;
 10486              		.loc 1 3242 13 is_stmt 1 view .LVU3186
3243:fltk-1.3.4-1/png/pngrutil.c ****          }
 10487              		.loc 1 3243 13 view .LVU3187
3243:fltk-1.3.4-1/png/pngrutil.c ****          }
 10488              		.loc 1 3243 13 is_stmt 0 view .LVU3188
 10489              	.LBE352:
3214:fltk-1.3.4-1/png/pngrutil.c ****          {
 10490              		.loc 1 3214 16 is_stmt 1 view .LVU3189
 10491              	.LBB353:
3223:fltk-1.3.4-1/png/pngrutil.c ****             m &= 0xff;
 10492              		.loc 1 3223 18 is_stmt 0 view .LVU3190
 10493 01ee 89FA     		movl	%edi, %edx
 10494              	.LVL1191:
 10495              	.L949:
3223:fltk-1.3.4-1/png/pngrutil.c ****             m &= 0xff;
 10496              		.loc 1 3223 18 view .LVU3191
 10497              	.LBE353:
3214:fltk-1.3.4-1/png/pngrutil.c ****          {
 10498              		.loc 1 3214 10 is_stmt 1 view .LVU3192
 10499              	.LBB354:
3216:fltk-1.3.4-1/png/pngrutil.c **** 
 10500              		.loc 1 3216 13 view .LVU3193
3222:fltk-1.3.4-1/png/pngrutil.c ****             mask = (m >> 8) | (m << 24); /* rotate right to good compilers */
 10501              		.loc 1 3222 13 view .LVU3194
3223:fltk-1.3.4-1/png/pngrutil.c ****             m &= 0xff;
 10502              		.loc 1 3223 13 view .LVU3195
3223:fltk-1.3.4-1/png/pngrutil.c ****             m &= 0xff;
 10503              		.loc 1 3223 18 is_stmt 0 view .LVU3196
 10504 01f0 89D7     		movl	%edx, %edi
3226:fltk-1.3.4-1/png/pngrutil.c ****             {
 10505              		.loc 1 3226 16 view .LVU3197
 10506 01f2 4189D2   		movl	%edx, %r10d
3223:fltk-1.3.4-1/png/pngrutil.c ****             m &= 0xff;
 10507              		.loc 1 3223 18 view .LVU3198
 10508 01f5 C1CF08   		rorl	$8, %edi
 10509              	.LVL1192:
3224:fltk-1.3.4-1/png/pngrutil.c **** 
 10510              		.loc 1 3224 13 is_stmt 1 view .LVU3199
3226:fltk-1.3.4-1/png/pngrutil.c ****             {
 10511              		.loc 1 3226 13 view .LVU3200
3226:fltk-1.3.4-1/png/pngrutil.c ****             {
 10512              		.loc 1 3226 16 is_stmt 0 view .LVU3201
 10513 01f8 4181E2FF 		andl	$255, %r10d
 10513      000000
 10514 01ff 74DD     		je	.L946
3228:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)((*dp & ~m) | (*sp & m));
 10515              		.loc 1 3228 16 is_stmt 1 view .LVU3202
 10516 0201 410FB64C 		movzbl	1(%r11,%rsi), %ecx
 10516      3301
3228:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)((*dp & ~m) | (*sp & m));
 10517              		.loc 1 3228 19 is_stmt 0 view .LVU3203
 10518 0207 4181FAFF 		cmpl	$255, %r10d
 10518      000000
 10519 020e 75C0     		jne	.L1032
3231:fltk-1.3.4-1/png/pngrutil.c ****             }
 10520              		.loc 1 3231 19 is_stmt 1 view .LVU3204
3231:fltk-1.3.4-1/png/pngrutil.c ****             }
 10521              		.loc 1 3231 23 is_stmt 0 view .LVU3205
 10522 0210 41880C30 		movb	%cl, (%r8,%rsi)
 10523 0214 EBC8     		jmp	.L946
 10524              	.LVL1193:
 10525 0216 662E0F1F 		.p2align 4,,10
 10525      84000000 
 10525      0000
 10526              		.p2align 3
 10527              	.L973:
3231:fltk-1.3.4-1/png/pngrutil.c ****             }
 10528              		.loc 1 3231 23 view .LVU3206
 10529              	.LBE354:
 10530              	.LBE351:
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10531              		.loc 1 3477 19 discriminator 2 view .LVU3207
 10532 0220 0FB6D0   		movzbl	%al, %edx
 10533              	.LVL1194:
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10534              		.loc 1 3477 19 discriminator 2 view .LVU3208
 10535 0223 4C0FAFCA 		imulq	%rdx, %r9
 10536              	.LVL1195:
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10537              		.loc 1 3477 19 discriminator 2 view .LVU3209
 10538 0227 4983C107 		addq	$7, %r9
3477:fltk-1.3.4-1/png/pngrutil.c **** 
 10539              		.loc 1 3477 4 discriminator 2 view .LVU3210
 10540 022b 4C89CA   		movq	%r9, %rdx
 10541 022e 48C1EA03 		shrq	$3, %rdx
 10542 0232 E99BFEFF 		jmp	.L974
 10542      FF
 10543              	.LVL1196:
 10544 0237 660F1F84 		.p2align 4,,10
 10544      00000000 
 10544      00
 10545              		.p2align 3
 10546              	.L925:
3025:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "internal row size calculation error");
 10547              		.loc 1 3025 11 discriminator 2 view .LVU3211
 10548 0240 400FB6CE 		movzbl	%sil, %ecx
 10549 0244 490FAFC9 		imulq	%r9, %rcx
 10550 0248 4883C107 		addq	$7, %rcx
 10551 024c 48C1E903 		shrq	$3, %rcx
 10552 0250 E907FEFF 		jmp	.L926
 10552      FF
 10553              	.LVL1197:
 10554              		.p2align 4,,10
 10555 0255 0F1F00   		.p2align 3
 10556              	.L931:
3049:fltk-1.3.4-1/png/pngrutil.c ****       /* end_mask is now the bits to *keep* from the destination row */
 10557              		.loc 1 3049 10 is_stmt 1 view .LVU3212
3049:fltk-1.3.4-1/png/pngrutil.c ****       /* end_mask is now the bits to *keep* from the destination row */
 10558              		.loc 1 3049 19 is_stmt 0 view .LVU3213
 10559 0258 41D3FD   		sarl	%cl, %r13d
 10560 025b 4489ED   		movl	%r13d, %ebp
 10561              	.LVL1198:
3049:fltk-1.3.4-1/png/pngrutil.c ****       /* end_mask is now the bits to *keep* from the destination row */
 10562              		.loc 1 3049 19 view .LVU3214
 10563 025e E9A2FEFF 		jmp	.L928
 10563      FF
 10564              	.LVL1199:
 10565              		.p2align 4,,10
 10566 0263 0F1F4400 		.p2align 3
 10566      00
 10567              	.L929:
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
 10568              		.loc 1 3040 22 discriminator 2 view .LVU3215
 10569 0268 0FB6D8   		movzbl	%al, %ebx
 10570 026b 490FAFD9 		imulq	%r9, %rbx
 10571 026f 4883C307 		addq	$7, %rbx
 10572 0273 48C1EB03 		shrq	$3, %rbx
3040:fltk-1.3.4-1/png/pngrutil.c ****       end_byte = *end_ptr;
 10573              		.loc 1 3040 59 discriminator 2 view .LVU3216
 10574 0277 4883EB01 		subq	$1, %rbx
 10575 027b E912FEFF 		jmp	.L930
 10575      FF
 10576              	.LVL1200:
 10577              		.p2align 4,,10
 10578              		.p2align 3
 10579              	.L933:
3062:fltk-1.3.4-1/png/pngrutil.c ****        /* The following copies everything for 'display' on passes 0, 2 and 4. */
 10580              		.loc 1 3062 34 discriminator 1 view .LVU3217
 10581 0280 4183FA01 		cmpl	$1, %r10d
 10582 0284 0F8536FE 		jne	.L932
 10582      FFFF
3064:fltk-1.3.4-1/png/pngrutil.c ****    {
 10583              		.loc 1 3064 22 view .LVU3218
 10584 028a 83E101   		andl	$1, %ecx
 10585 028d 0F842DFE 		je	.L932
 10585      FFFF
 10586 0293 E9A5FEFF 		jmp	.L934
 10586      FF
 10587              	.LVL1201:
 10588              	.L1029:
3026:fltk-1.3.4-1/png/pngrutil.c **** 
 10589              		.loc 1 3026 7 is_stmt 1 view .LVU3219
 10590 0298 488D3500 		leaq	.LC50(%rip), %rsi
 10590      000000
 10591 029f E8000000 		call	png_error@PLT
 10591      00
 10592              	.LVL1202:
 10593              		.p2align 4,,10
 10594 02a4 0F1F4000 		.p2align 3
 10595              	.L937:
 10596              	.LBB355:
3249:fltk-1.3.4-1/png/pngrutil.c **** 
 10597              		.loc 1 3249 10 view .LVU3220
3252:fltk-1.3.4-1/png/pngrutil.c ****             png_error(png_ptr, "invalid user transform pixel depth");
 10598              		.loc 1 3252 10 view .LVU3221
3252:fltk-1.3.4-1/png/pngrutil.c ****             png_error(png_ptr, "invalid user transform pixel depth");
 10599              		.loc 1 3252 13 is_stmt 0 view .LVU3222
 10600 02a8 A807     		testb	$7, %al
 10601 02aa 0F853203 		jne	.L1033
 10601      0000
3255:fltk-1.3.4-1/png/pngrutil.c ****          row_width *= pixel_depth;
 10602              		.loc 1 3255 10 is_stmt 1 view .LVU3223
3255:fltk-1.3.4-1/png/pngrutil.c ****          row_width *= pixel_depth;
 10603              		.loc 1 3255 22 is_stmt 0 view .LVU3224
 10604 02b0 C1EE03   		shrl	$3, %esi
 10605              	.LVL1203:
3256:fltk-1.3.4-1/png/pngrutil.c **** 
 10606              		.loc 1 3256 10 is_stmt 1 view .LVU3225
3256:fltk-1.3.4-1/png/pngrutil.c **** 
 10607              		.loc 1 3256 20 is_stmt 0 view .LVU3226
 10608 02b3 89F2     		movl	%esi, %edx
 10609              	.LVL1204:
 10610              	.LBB356:
3263:fltk-1.3.4-1/png/pngrutil.c **** 
 10611              		.loc 1 3263 26 view .LVU3227
 10612 02b5 0FAFCE   		imull	%esi, %ecx
 10613              	.LBE356:
3256:fltk-1.3.4-1/png/pngrutil.c **** 
 10614              		.loc 1 3256 20 view .LVU3228
 10615 02b8 4C0FAFCA 		imulq	%rdx, %r9
 10616              	.LVL1205:
 10617              	.LBB357:
3263:fltk-1.3.4-1/png/pngrutil.c **** 
 10618              		.loc 1 3263 13 is_stmt 1 view .LVU3229
3265:fltk-1.3.4-1/png/pngrutil.c ****             dp += offset;
 10619              		.loc 1 3265 13 view .LVU3230
 10620              	.LBE357:
3285:fltk-1.3.4-1/png/pngrutil.c **** 
 10621              		.loc 1 3285 27 is_stmt 0 view .LVU3231
 10622 02bc 89F2     		movl	%esi, %edx
 10623              	.LBB358:
3266:fltk-1.3.4-1/png/pngrutil.c ****             sp += offset;
 10624              		.loc 1 3266 16 view .LVU3232
 10625 02be 4901C8   		addq	%rcx, %r8
 10626              	.LVL1206:
3267:fltk-1.3.4-1/png/pngrutil.c ****          }
 10627              		.loc 1 3267 16 view .LVU3233
 10628 02c1 4901CF   		addq	%rcx, %r15
 10629              	.LVL1207:
3265:fltk-1.3.4-1/png/pngrutil.c ****             dp += offset;
 10630              		.loc 1 3265 23 view .LVU3234
 10631 02c4 4929C9   		subq	%rcx, %r9
 10632              	.LVL1208:
3266:fltk-1.3.4-1/png/pngrutil.c ****             sp += offset;
 10633              		.loc 1 3266 13 is_stmt 1 view .LVU3235
3267:fltk-1.3.4-1/png/pngrutil.c ****          }
 10634              		.loc 1 3267 13 view .LVU3236
3267:fltk-1.3.4-1/png/pngrutil.c ****          }
 10635              		.loc 1 3267 13 is_stmt 0 view .LVU3237
 10636              	.LBE358:
3271:fltk-1.3.4-1/png/pngrutil.c ****          {
 10637              		.loc 1 3271 10 is_stmt 1 view .LVU3238
3271:fltk-1.3.4-1/png/pngrutil.c ****          {
 10638              		.loc 1 3271 13 is_stmt 0 view .LVU3239
 10639 02c7 4585D2   		testl	%r10d, %r10d
 10640 02ca 7417     		je	.L951
3277:fltk-1.3.4-1/png/pngrutil.c **** 
 10641              		.loc 1 3277 13 is_stmt 1 view .LVU3240
3277:fltk-1.3.4-1/png/pngrutil.c **** 
 10642              		.loc 1 3277 36 is_stmt 0 view .LVU3241
 10643 02cc B9060000 		movl	$6, %ecx
 10643      00
 10644 02d1 2B4C2408 		subl	8(%rsp), %ecx
3277:fltk-1.3.4-1/png/pngrutil.c **** 
 10645              		.loc 1 3277 42 view .LVU3242
 10646 02d5 D1E9     		shrl	%ecx
3277:fltk-1.3.4-1/png/pngrutil.c **** 
 10647              		.loc 1 3277 27 view .LVU3243
 10648 02d7 D3E2     		sall	%cl, %edx
 10649              	.LVL1209:
3280:fltk-1.3.4-1/png/pngrutil.c ****                bytes_to_copy = (unsigned int)/*SAFE*/row_width;
 10650              		.loc 1 3280 13 is_stmt 1 view .LVU3244
3280:fltk-1.3.4-1/png/pngrutil.c ****                bytes_to_copy = (unsigned int)/*SAFE*/row_width;
 10651              		.loc 1 3280 31 is_stmt 0 view .LVU3245
 10652 02d9 4189D2   		movl	%edx, %r10d
 10653              	.LVL1210:
3281:fltk-1.3.4-1/png/pngrutil.c ****          }
 10654              		.loc 1 3281 30 view .LVU3246
 10655 02dc 4D39CA   		cmpq	%r9, %r10
 10656 02df 410F47D1 		cmova	%r9d, %edx
 10657              	.LVL1211:
 10658              	.L951:
3288:fltk-1.3.4-1/png/pngrutil.c **** 
 10659              		.loc 1 3288 10 is_stmt 1 view .LVU3247
3288:fltk-1.3.4-1/png/pngrutil.c **** 
 10660              		.loc 1 3288 26 is_stmt 0 view .LVU3248
 10661 02e3 B9070000 		movl	$7, %ecx
 10661      00
 10662 02e8 2B4C2408 		subl	8(%rsp), %ecx
 10663 02ec D1E9     		shrl	%ecx
3288:fltk-1.3.4-1/png/pngrutil.c **** 
 10664              		.loc 1 3288 24 view .LVU3249
 10665 02ee D3E6     		sall	%cl, %esi
 10666              	.LVL1212:
3298:fltk-1.3.4-1/png/pngrutil.c ****          {
 10667              		.loc 1 3298 10 is_stmt 1 view .LVU3250
 10668 02f0 89F0     		movl	%esi, %eax
 10669              	.LVL1213:
3298:fltk-1.3.4-1/png/pngrutil.c ****          {
 10670              		.loc 1 3298 10 is_stmt 0 view .LVU3251
 10671 02f2 83FA02   		cmpl	$2, %edx
 10672 02f5 0F84AD00 		je	.L952
 10672      0000
 10673 02fb 83FA03   		cmpl	$3, %edx
 10674 02fe 0F84E500 		je	.L953
 10674      0000
 10675 0304 83FA01   		cmpl	$1, %edx
 10676 0307 0F84A501 		je	.L1034
 10676      0000
3357:fltk-1.3.4-1/png/pngrutil.c ****                    png_isaligned(dp, png_uint_16) &&
 10677              		.loc 1 3357 16 is_stmt 1 view .LVU3252
3357:fltk-1.3.4-1/png/pngrutil.c ****                    png_isaligned(dp, png_uint_16) &&
 10678              		.loc 1 3357 19 is_stmt 0 view .LVU3253
 10679 030d 83FA0F   		cmpl	$15, %edx
 10680 0310 770F     		ja	.L958
 10681 0312 4C89C1   		movq	%r8, %rcx
 10682 0315 4C09F9   		orq	%r15, %rcx
3358:fltk-1.3.4-1/png/pngrutil.c ****                    png_isaligned(sp, png_uint_16) &&
 10683              		.loc 1 3358 51 discriminator 1 view .LVU3254
 10684 0318 F6C101   		testb	$1, %cl
 10685 031b 0F84D501 		je	.L959
 10685      0000
 10686              	.LVL1214:
 10687              	.L958:
3358:fltk-1.3.4-1/png/pngrutil.c ****                    png_isaligned(sp, png_uint_16) &&
 10688              		.loc 1 3358 51 discriminator 1 view .LVU3255
 10689 0321 4929C1   		subq	%rax, %r9
 10690              	.LVL1215:
3358:fltk-1.3.4-1/png/pngrutil.c ****                    png_isaligned(sp, png_uint_16) &&
 10691              		.loc 1 3358 51 discriminator 1 view .LVU3256
 10692 0324 4189D2   		movl	%edx, %r10d
 10693 0327 EB45     		jmp	.L960
 10694              	.LVL1216:
 10695 0329 0F1F8000 		.p2align 4,,10
 10695      000000
 10696              		.p2align 3
 10697              	.L1037:
 10698              	.LBB359:
 10699              	.LBB360:
 10700              		.loc 2 34 10 view .LVU3257
 10701 0330 F6C204   		testb	$4, %dl
 10702 0333 0F85A801 		jne	.L1035
 10702      0000
 10703 0339 85D2     		testl	%edx, %edx
 10704 033b 7410     		je	.L969
 10705 033d 410FB60F 		movzbl	(%r15), %ecx
 10706 0341 418808   		movb	%cl, (%r8)
 10707 0344 F6C202   		testb	$2, %dl
 10708 0347 0F851202 		jne	.L1036
 10708      0000
 10709              	.L969:
 10710              	.LVL1217:
 10711              		.loc 2 34 10 view .LVU3258
 10712              	.LBE360:
 10713              	.LBE359:
3454:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10714              		.loc 1 3454 19 is_stmt 1 view .LVU3259
3454:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10715              		.loc 1 3454 22 is_stmt 0 view .LVU3260
 10716 034d 4A8D0C08 		leaq	(%rax,%r9), %rcx
 10717 0351 4839C8   		cmpq	%rcx, %rax
 10718 0354 0F8394FD 		jnb	.L922
 10718      FFFF
3457:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
 10719              		.loc 1 3457 19 is_stmt 1 view .LVU3261
3457:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
 10720              		.loc 1 3457 22 is_stmt 0 view .LVU3262
 10721 035a 4901C7   		addq	%rax, %r15
 10722              	.LVL1218:
3458:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
 10723              		.loc 1 3458 19 is_stmt 1 view .LVU3263
3458:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
 10724              		.loc 1 3458 22 is_stmt 0 view .LVU3264
 10725 035d 4901C0   		addq	%rax, %r8
 10726              	.LVL1219:
3459:fltk-1.3.4-1/png/pngrutil.c ****                   if (bytes_to_copy > row_width)
 10727              		.loc 1 3459 19 is_stmt 1 view .LVU3265
3460:fltk-1.3.4-1/png/pngrutil.c ****                      bytes_to_copy = (unsigned int)/*SAFE*/row_width;
 10728              		.loc 1 3460 19 view .LVU3266
3460:fltk-1.3.4-1/png/pngrutil.c ****                      bytes_to_copy = (unsigned int)/*SAFE*/row_width;
 10729              		.loc 1 3460 22 is_stmt 0 view .LVU3267
 10730 0360 4D39D1   		cmpq	%r10, %r9
 10731 0363 7306     		jnb	.L972
3461:fltk-1.3.4-1/png/pngrutil.c ****                }
 10732              		.loc 1 3461 22 is_stmt 1 view .LVU3268
 10733              	.LVL1220:
3461:fltk-1.3.4-1/png/pngrutil.c ****                }
 10734              		.loc 1 3461 22 is_stmt 0 view .LVU3269
 10735 0365 4589CA   		movl	%r9d, %r10d
 10736 0368 4C89D2   		movq	%r10, %rdx
 10737              	.LVL1221:
 10738              	.L972:
3461:fltk-1.3.4-1/png/pngrutil.c ****                }
 10739              		.loc 1 3461 22 view .LVU3270
 10740 036b 4929C1   		subq	%rax, %r9
 10741              	.LVL1222:
 10742              	.L960:
3450:fltk-1.3.4-1/png/pngrutil.c ****                {
 10743              		.loc 1 3450 16 is_stmt 1 view .LVU3271
3452:fltk-1.3.4-1/png/pngrutil.c **** 
 10744              		.loc 1 3452 19 view .LVU3272
 10745              	.LBB364:
 10746              	.LBI359:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 10747              		.loc 2 31 1 view .LVU3273
 10748              	.LBB361:
 10749              		.loc 2 34 3 view .LVU3274
 10750              		.loc 2 34 10 is_stmt 0 view .LVU3275
 10751 036e 83FA08   		cmpl	$8, %edx
 10752 0371 72BD     		jb	.L1037
 10753              		.loc 2 34 10 view .LVU3276
 10754 0373 498B0F   		movq	(%r15), %rcx
 10755 0376 498D7808 		leaq	8(%r8), %rdi
 10756 037a 4C89FE   		movq	%r15, %rsi
 10757 037d 4883E7F8 		andq	$-8, %rdi
 10758 0381 498908   		movq	%rcx, (%r8)
 10759 0384 4B8B4C17 		movq	-8(%r15,%r10), %rcx
 10759      F8
 10760 0389 4B894C10 		movq	%rcx, -8(%r8,%r10)
 10760      F8
 10761 038e 4C89C1   		movq	%r8, %rcx
 10762 0391 4829F9   		subq	%rdi, %rcx
 10763 0394 4829CE   		subq	%rcx, %rsi
 10764 0397 01D1     		addl	%edx, %ecx
 10765 0399 C1E903   		shrl	$3, %ecx
 10766 039c F348A5   		rep movsq
 10767 039f EBAC     		jmp	.L969
 10768              	.LVL1223:
 10769              		.p2align 4,,10
 10770 03a1 0F1F8000 		.p2align 3
 10770      000000
 10771              	.L952:
 10772              		.loc 2 34 10 view .LVU3277
 10773              	.LBE361:
 10774              	.LBE364:
3317:fltk-1.3.4-1/png/pngrutil.c ****                {
 10775              		.loc 1 3317 16 is_stmt 1 view .LVU3278
3319:fltk-1.3.4-1/png/pngrutil.c **** 
 10776              		.loc 1 3319 19 view .LVU3279
3319:fltk-1.3.4-1/png/pngrutil.c **** 
 10777              		.loc 1 3319 29 is_stmt 0 view .LVU3280
 10778 03a8 410FB617 		movzbl	(%r15), %edx
3319:fltk-1.3.4-1/png/pngrutil.c **** 
 10779              		.loc 1 3319 25 view .LVU3281
 10780 03ac 418810   		movb	%dl, (%r8)
3319:fltk-1.3.4-1/png/pngrutil.c **** 
 10781              		.loc 1 3319 40 view .LVU3282
 10782 03af 410FB657 		movzbl	1(%r15), %edx
 10782      01
 10783 03b4 41885001 		movb	%dl, 1(%r8)
3321:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10784              		.loc 1 3321 19 is_stmt 1 view .LVU3283
3321:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10785              		.loc 1 3321 22 is_stmt 0 view .LVU3284
 10786 03b8 4C39C8   		cmpq	%r9, %rax
 10787 03bb 0F832DFD 		jnb	.L922
 10787      FFFF
3324:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
 10788              		.loc 1 3324 19 is_stmt 1 view .LVU3285
3326:fltk-1.3.4-1/png/pngrutil.c ****                }
 10789              		.loc 1 3326 29 is_stmt 0 view .LVU3286
 10790 03c1 4929C1   		subq	%rax, %r9
 10791              	.LVL1224:
3324:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
 10792              		.loc 1 3324 22 view .LVU3287
 10793 03c4 4901C7   		addq	%rax, %r15
 10794              	.LVL1225:
3325:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
 10795              		.loc 1 3325 19 is_stmt 1 view .LVU3288
3325:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
 10796              		.loc 1 3325 22 is_stmt 0 view .LVU3289
 10797 03c7 4901C0   		addq	%rax, %r8
 10798              	.LVL1226:
3326:fltk-1.3.4-1/png/pngrutil.c ****                }
 10799              		.loc 1 3326 19 is_stmt 1 view .LVU3290
3328:fltk-1.3.4-1/png/pngrutil.c **** 
 10800              		.loc 1 3328 22 view .LVU3291
3328:fltk-1.3.4-1/png/pngrutil.c **** 
 10801              		.loc 1 3328 16 is_stmt 0 view .LVU3292
 10802 03ca 4983F901 		cmpq	$1, %r9
 10803 03ce 75D8     		jne	.L952
3331:fltk-1.3.4-1/png/pngrutil.c ****                return;
 10804              		.loc 1 3331 16 is_stmt 1 view .LVU3293
3331:fltk-1.3.4-1/png/pngrutil.c ****                return;
 10805              		.loc 1 3331 22 is_stmt 0 view .LVU3294
 10806 03d0 410FB607 		movzbl	(%r15), %eax
3331:fltk-1.3.4-1/png/pngrutil.c ****                return;
 10807              		.loc 1 3331 20 view .LVU3295
 10808 03d4 418800   		movb	%al, (%r8)
3332:fltk-1.3.4-1/png/pngrutil.c **** 
 10809              		.loc 1 3332 16 is_stmt 1 view .LVU3296
 10810 03d7 E912FDFF 		jmp	.L922
 10810      FF
 10811 03dc 0F1F4000 		.p2align 4,,10
 10812              		.p2align 3
 10813              	.L1038:
3345:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
 10814              		.loc 1 3345 19 view .LVU3297
3345:fltk-1.3.4-1/png/pngrutil.c ****                   dp += bytes_to_jump;
 10815              		.loc 1 3345 22 is_stmt 0 view .LVU3298
 10816 03e0 4901C7   		addq	%rax, %r15
 10817              	.LVL1227:
3346:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
 10818              		.loc 1 3346 19 is_stmt 1 view .LVU3299
3346:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
 10819              		.loc 1 3346 22 is_stmt 0 view .LVU3300
 10820 03e3 4901C0   		addq	%rax, %r8
 10821              	.LVL1228:
3347:fltk-1.3.4-1/png/pngrutil.c ****                }
 10822              		.loc 1 3347 19 is_stmt 1 view .LVU3301
3347:fltk-1.3.4-1/png/pngrutil.c ****                }
 10823              		.loc 1 3347 29 is_stmt 0 view .LVU3302
 10824 03e6 4929C1   		subq	%rax, %r9
 10825              	.LVL1229:
3338:fltk-1.3.4-1/png/pngrutil.c ****                {
 10826              		.loc 1 3338 22 is_stmt 1 view .LVU3303
3338:fltk-1.3.4-1/png/pngrutil.c ****                {
 10827              		.loc 1 3338 16 view .LVU3304
3340:fltk-1.3.4-1/png/pngrutil.c **** 
 10828              		.loc 1 3340 19 view .LVU3305
 10829              	.L953:
3338:fltk-1.3.4-1/png/pngrutil.c ****                {
 10830              		.loc 1 3338 16 view .LVU3306
3340:fltk-1.3.4-1/png/pngrutil.c **** 
 10831              		.loc 1 3340 19 view .LVU3307
3340:fltk-1.3.4-1/png/pngrutil.c **** 
 10832              		.loc 1 3340 29 is_stmt 0 view .LVU3308
 10833 03e9 410FB617 		movzbl	(%r15), %edx
3340:fltk-1.3.4-1/png/pngrutil.c **** 
 10834              		.loc 1 3340 25 view .LVU3309
 10835 03ed 418810   		movb	%dl, (%r8)
3340:fltk-1.3.4-1/png/pngrutil.c **** 
 10836              		.loc 1 3340 40 view .LVU3310
 10837 03f0 410FB657 		movzbl	1(%r15), %edx
 10837      01
 10838 03f5 41885001 		movb	%dl, 1(%r8)
3340:fltk-1.3.4-1/png/pngrutil.c **** 
 10839              		.loc 1 3340 55 view .LVU3311
 10840 03f9 410FB657 		movzbl	2(%r15), %edx
 10840      02
 10841 03fe 41885002 		movb	%dl, 2(%r8)
3342:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10842              		.loc 1 3342 19 is_stmt 1 view .LVU3312
3342:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10843              		.loc 1 3342 22 is_stmt 0 view .LVU3313
 10844 0402 4C39C8   		cmpq	%r9, %rax
 10845 0405 72D9     		jb	.L1038
3342:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10846              		.loc 1 3342 22 view .LVU3314
 10847 0407 E9E2FCFF 		jmp	.L922
 10847      FF
 10848              	.LVL1230:
 10849 040c 0F1F4000 		.p2align 4,,10
 10850              		.p2align 3
 10851              	.L938:
3342:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10852              		.loc 1 3342 22 view .LVU3315
 10853              	.LBE355:
 10854              	.LBB377:
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10855              		.loc 1 3212 13 is_stmt 1 view .LVU3316
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10856              		.loc 1 3212 20 is_stmt 0 view .LVU3317
 10857 0410 4585D2   		testl	%r10d, %r10d
 10858 0413 7438     		je	.L943
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10859              		.loc 1 3212 20 discriminator 1 view .LVU3318
 10860 0415 31D2     		xorl	%edx, %edx
 10861 0417 83FE01   		cmpl	$1, %esi
 10862 041a 740B     		je	.L944
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10863              		.loc 1 3212 20 discriminator 3 view .LVU3319
 10864 041c 31D2     		xorl	%edx, %edx
 10865 041e 83FE02   		cmpl	$2, %esi
 10866 0421 0F95C2   		setne	%dl
 10867 0424 83C201   		addl	$1, %edx
 10868              	.L944:
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10869              		.loc 1 3212 20 discriminator 10 view .LVU3320
 10870 0427 448B7424 		movl	8(%rsp), %r14d
 10870      08
 10871 042c 4863D2   		movslq	%edx, %rdx
 10872 042f 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 10873 0433 41D1EE   		shrl	%r14d
 10874 0436 4489F1   		movl	%r14d, %ecx
 10875 0439 488D4C11 		leaq	9(%rcx,%rdx), %rcx
 10875      09
 10876 043e 488D1500 		leaq	display_mask.7195(%rip), %rdx
 10876      000000
 10877 0445 8B148A   		movl	(%rdx,%rcx,4), %edx
 10878 0448 E976FDFF 		jmp	.L941
 10878      FF
 10879              	.L943:
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10880              		.loc 1 3212 20 discriminator 2 view .LVU3321
 10881 044d 83FE01   		cmpl	$1, %esi
 10882 0450 740E     		je	.L945
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10883              		.loc 1 3212 20 discriminator 12 view .LVU3322
 10884 0452 4531D2   		xorl	%r10d, %r10d
 10885              	.LVL1231:
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10886              		.loc 1 3212 20 discriminator 12 view .LVU3323
 10887 0455 83FE02   		cmpl	$2, %esi
 10888 0458 410F95C2 		setne	%r10b
 10889 045c 4183C201 		addl	$1, %r10d
 10890              	.L945:
3212:fltk-1.3.4-1/png/pngrutil.c **** 
 10891              		.loc 1 3212 20 discriminator 19 view .LVU3324
 10892 0460 448B7424 		movl	8(%rsp), %r14d
 10892      08
 10893 0465 4D63D2   		movslq	%r10d, %r10
 10894 0468 4B8D1452 		leaq	(%r10,%r10,2), %rdx
 10895 046c 498D4C56 		leaq	18(%r14,%rdx,2), %rcx
 10895      12
 10896 0471 488D1500 		leaq	row_mask.7194(%rip), %rdx
 10896      000000
 10897 0478 8B148A   		movl	(%rdx,%rcx,4), %edx
 10898 047b E943FDFF 		jmp	.L941
 10898      FF
 10899              	.LVL1232:
 10900              	.L939:
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10901              		.loc 1 3208 23 discriminator 2 view .LVU3325
 10902 0480 83FE01   		cmpl	$1, %esi
 10903 0483 740E     		je	.L942
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10904              		.loc 1 3208 23 discriminator 12 view .LVU3326
 10905 0485 4531D2   		xorl	%r10d, %r10d
 10906              	.LVL1233:
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10907              		.loc 1 3208 23 discriminator 12 view .LVU3327
 10908 0488 83FE02   		cmpl	$2, %esi
 10909 048b 410F95C2 		setne	%r10b
 10910 048f 4183C201 		addl	$1, %r10d
 10911              	.L942:
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10912              		.loc 1 3208 23 discriminator 19 view .LVU3328
 10913 0493 448B7424 		movl	8(%rsp), %r14d
 10913      08
 10914 0498 4D63D2   		movslq	%r10d, %r10
 10915 049b 4B8D1452 		leaq	(%r10,%r10,2), %rdx
 10916 049f 498D0C56 		leaq	(%r14,%rdx,2), %rcx
 10917 04a3 488D1500 		leaq	row_mask.7194(%rip), %rdx
 10917      000000
 10918 04aa 8B148A   		movl	(%rdx,%rcx,4), %edx
 10919 04ad E911FDFF 		jmp	.L941
 10919      FF
 10920              	.LVL1234:
 10921              	.L1034:
3208:fltk-1.3.4-1/png/pngrutil.c **** 
 10922              		.loc 1 3208 23 discriminator 19 view .LVU3329
 10923              	.LBE377:
 10924              	.LBB378:
3301:fltk-1.3.4-1/png/pngrutil.c ****                {
 10925              		.loc 1 3301 16 is_stmt 1 view .LVU3330
3303:fltk-1.3.4-1/png/pngrutil.c **** 
 10926              		.loc 1 3303 19 view .LVU3331
3303:fltk-1.3.4-1/png/pngrutil.c **** 
 10927              		.loc 1 3303 25 is_stmt 0 view .LVU3332
 10928 04b2 410FB617 		movzbl	(%r15), %edx
3303:fltk-1.3.4-1/png/pngrutil.c **** 
 10929              		.loc 1 3303 23 view .LVU3333
 10930 04b6 418810   		movb	%dl, (%r8)
3305:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10931              		.loc 1 3305 19 is_stmt 1 view .LVU3334
3305:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10932              		.loc 1 3305 22 is_stmt 0 view .LVU3335
 10933 04b9 4C39C8   		cmpq	%r9, %rax
 10934 04bc 0F832CFC 		jnb	.L922
 10934      FFFF
 10935 04c2 4889C2   		movq	%rax, %rdx
 10936              	.LVL1235:
 10937              		.p2align 4,,10
 10938 04c5 0F1F00   		.p2align 3
 10939              	.L956:
3308:fltk-1.3.4-1/png/pngrutil.c ****                   sp += bytes_to_jump;
 10940              		.loc 1 3308 19 is_stmt 1 view .LVU3336
3309:fltk-1.3.4-1/png/pngrutil.c ****                   row_width -= bytes_to_jump;
 10941              		.loc 1 3309 19 view .LVU3337
3310:fltk-1.3.4-1/png/pngrutil.c ****                }
 10942              		.loc 1 3310 19 view .LVU3338
3303:fltk-1.3.4-1/png/pngrutil.c **** 
 10943              		.loc 1 3303 25 is_stmt 0 view .LVU3339
 10944 04c8 410FB60C 		movzbl	(%r15,%rdx), %ecx
 10944      17
3310:fltk-1.3.4-1/png/pngrutil.c ****                }
 10945              		.loc 1 3310 29 view .LVU3340
 10946 04cd 4929C1   		subq	%rax, %r9
 10947              	.LVL1236:
3301:fltk-1.3.4-1/png/pngrutil.c ****                {
 10948              		.loc 1 3301 22 is_stmt 1 view .LVU3341
3301:fltk-1.3.4-1/png/pngrutil.c ****                {
 10949              		.loc 1 3301 16 view .LVU3342
3303:fltk-1.3.4-1/png/pngrutil.c **** 
 10950              		.loc 1 3303 19 view .LVU3343
3303:fltk-1.3.4-1/png/pngrutil.c **** 
 10951              		.loc 1 3303 23 is_stmt 0 view .LVU3344
 10952 04d0 41880C10 		movb	%cl, (%r8,%rdx)
3305:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10953              		.loc 1 3305 19 is_stmt 1 view .LVU3345
 10954 04d4 4801C2   		addq	%rax, %rdx
 10955              	.LVL1237:
3305:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 10956              		.loc 1 3305 22 is_stmt 0 view .LVU3346
 10957 04d7 4C39C8   		cmpq	%r9, %rax
 10958 04da 72EC     		jb	.L956
 10959 04dc E90DFCFF 		jmp	.L922
 10959      FF
 10960              	.LVL1238:
 10961              	.L1035:
 10962              	.LBB365:
 10963              	.LBB362:
 10964              		.loc 2 34 10 view .LVU3347
 10965 04e1 418B0F   		movl	(%r15), %ecx
 10966 04e4 418908   		movl	%ecx, (%r8)
 10967 04e7 438B4C17 		movl	-4(%r15,%r10), %ecx
 10967      FC
 10968 04ec 43894C10 		movl	%ecx, -4(%r8,%r10)
 10968      FC
 10969 04f1 E957FEFF 		jmp	.L969
 10969      FF
 10970              	.LVL1239:
 10971              	.L959:
 10972              		.loc 2 34 10 view .LVU3348
 10973 04f6 89D7     		movl	%edx, %edi
 10974              	.LVL1240:
 10975              		.loc 2 34 10 view .LVU3349
 10976 04f8 09F7     		orl	%esi, %edi
 10977              	.LBE362:
 10978              	.LBE365:
3360:fltk-1.3.4-1/png/pngrutil.c ****                    bytes_to_jump % (sizeof (png_uint_16)) == 0)
 10979              		.loc 1 3360 64 view .LVU3350
 10980 04fa 40F6C701 		testb	$1, %dil
 10981 04fe 0F851DFE 		jne	.L958
 10981      FFFF
3366:fltk-1.3.4-1/png/pngrutil.c ****                       png_isaligned(sp, png_uint_32) != 0 &&
 10982              		.loc 1 3366 19 is_stmt 1 view .LVU3351
 10983 0504 29D6     		subl	%edx, %esi
 10984              	.LVL1241:
3366:fltk-1.3.4-1/png/pngrutil.c ****                       png_isaligned(sp, png_uint_32) != 0 &&
 10985              		.loc 1 3366 59 is_stmt 0 view .LVU3352
 10986 0506 80E103   		andb	$3, %cl
 10987 0509 747D     		je	.L1039
 10988              	.L961:
 10989              	.LBB366:
3413:fltk-1.3.4-1/png/pngrutil.c ****                      png_const_uint_16p sp16 = png_aligncastconst(
 10990              		.loc 1 3413 22 is_stmt 1 view .LVU3353
 10991              	.LVL1242:
3414:fltk-1.3.4-1/png/pngrutil.c ****                         png_const_uint_16p, sp);
 10992              		.loc 1 3414 22 view .LVU3354
3416:fltk-1.3.4-1/png/pngrutil.c ****                         (sizeof (png_uint_16));
 10993              		.loc 1 3416 22 view .LVU3355
3416:fltk-1.3.4-1/png/pngrutil.c ****                         (sizeof (png_uint_16));
 10994              		.loc 1 3416 66 is_stmt 0 view .LVU3356
 10995 050b D1EE     		shrl	%esi
 10996              	.LVL1243:
3416:fltk-1.3.4-1/png/pngrutil.c ****                         (sizeof (png_uint_16));
 10997              		.loc 1 3416 66 view .LVU3357
 10998 050d 89D2     		movl	%edx, %edx
3416:fltk-1.3.4-1/png/pngrutil.c ****                         (sizeof (png_uint_16));
 10999              		.loc 1 3416 29 view .LVU3358
 11000 050f 4189F2   		movl	%esi, %r10d
 11001              	.LVL1244:
3416:fltk-1.3.4-1/png/pngrutil.c ****                         (sizeof (png_uint_16));
 11002              		.loc 1 3416 29 view .LVU3359
 11003 0512 4C89FE   		movq	%r15, %rsi
 11004              	.LBB367:
3432:fltk-1.3.4-1/png/pngrutil.c ****                         sp16 += skip;
 11005              		.loc 1 3432 30 view .LVU3360
 11006 0515 4D01D2   		addq	%r10, %r10
 11007              	.LVL1245:
 11008              	.L966:
3432:fltk-1.3.4-1/png/pngrutil.c ****                         sp16 += skip;
 11009              		.loc 1 3432 30 view .LVU3361
 11010              	.LBE367:
3419:fltk-1.3.4-1/png/pngrutil.c ****                      {
 11011              		.loc 1 3419 22 is_stmt 1 view .LVU3362
 11012              	.LBB368:
3421:fltk-1.3.4-1/png/pngrutil.c ****                         do
 11013              		.loc 1 3421 25 view .LVU3363
3421:fltk-1.3.4-1/png/pngrutil.c ****                         do
 11014              		.loc 1 3421 25 is_stmt 0 view .LVU3364
 11015              	.LBE368:
 11016              	.LBE366:
 11017              	.LBB370:
 11018              	.LBB371:
3379:fltk-1.3.4-1/png/pngrutil.c ****                         do
 11019              		.loc 1 3379 32 view .LVU3365
 11020 0518 4C89C7   		movq	%r8, %rdi
 11021              	.LVL1246:
 11022 051b 0F1F4400 		.p2align 4,,10
 11022      00
 11023              		.p2align 3
 11024              	.L965:
3379:fltk-1.3.4-1/png/pngrutil.c ****                         do
 11025              		.loc 1 3379 32 view .LVU3366
 11026              	.LBE371:
 11027              	.LBE370:
 11028              	.LBB374:
 11029              	.LBB369:
3422:fltk-1.3.4-1/png/pngrutil.c ****                         {
 11030              		.loc 1 3422 25 is_stmt 1 discriminator 1 view .LVU3367
3424:fltk-1.3.4-1/png/pngrutil.c ****                            c -= (sizeof (png_uint_16));
 11031              		.loc 1 3424 28 discriminator 1 view .LVU3368
3424:fltk-1.3.4-1/png/pngrutil.c ****                            c -= (sizeof (png_uint_16));
 11032              		.loc 1 3424 36 is_stmt 0 discriminator 1 view .LVU3369
 11033 0520 66A5     		movsw
 11034              	.LVL1247:
3425:fltk-1.3.4-1/png/pngrutil.c ****                         }
 11035              		.loc 1 3425 28 is_stmt 1 discriminator 1 view .LVU3370
3427:fltk-1.3.4-1/png/pngrutil.c **** 
 11036              		.loc 1 3427 31 discriminator 1 view .LVU3371
 11037 0522 4889D1   		movq	%rdx, %rcx
 11038 0525 4829F9   		subq	%rdi, %rcx
3427:fltk-1.3.4-1/png/pngrutil.c **** 
 11039              		.loc 1 3427 25 is_stmt 0 discriminator 1 view .LVU3372
 11040 0528 4C01C1   		addq	%r8, %rcx
 11041 052b 75F3     		jne	.L965
3429:fltk-1.3.4-1/png/pngrutil.c ****                            return;
 11042              		.loc 1 3429 25 is_stmt 1 view .LVU3373
3429:fltk-1.3.4-1/png/pngrutil.c ****                            return;
 11043              		.loc 1 3429 28 is_stmt 0 view .LVU3374
 11044 052d 4C39C8   		cmpq	%r9, %rax
 11045 0530 0F83B8FB 		jnb	.L922
 11045      FFFF
3432:fltk-1.3.4-1/png/pngrutil.c ****                         sp16 += skip;
 11046              		.loc 1 3432 25 is_stmt 1 view .LVU3375
3434:fltk-1.3.4-1/png/pngrutil.c ****                      }
 11047              		.loc 1 3434 35 is_stmt 0 view .LVU3376
 11048 0536 4929C1   		subq	%rax, %r9
 11049              	.LVL1248:
3432:fltk-1.3.4-1/png/pngrutil.c ****                         sp16 += skip;
 11050              		.loc 1 3432 30 view .LVU3377
 11051 0539 4E8D0417 		leaq	(%rdi,%r10), %r8
 11052              	.LVL1249:
3433:fltk-1.3.4-1/png/pngrutil.c ****                         row_width -= bytes_to_jump;
 11053              		.loc 1 3433 25 is_stmt 1 view .LVU3378
3433:fltk-1.3.4-1/png/pngrutil.c ****                         row_width -= bytes_to_jump;
 11054              		.loc 1 3433 30 is_stmt 0 view .LVU3379
 11055 053d 4C01D6   		addq	%r10, %rsi
 11056              	.LVL1250:
3434:fltk-1.3.4-1/png/pngrutil.c ****                      }
 11057              		.loc 1 3434 25 is_stmt 1 view .LVU3380
3434:fltk-1.3.4-1/png/pngrutil.c ****                      }
 11058              		.loc 1 3434 25 is_stmt 0 view .LVU3381
 11059              	.LBE369:
3436:fltk-1.3.4-1/png/pngrutil.c **** 
 11060              		.loc 1 3436 28 is_stmt 1 view .LVU3382
3436:fltk-1.3.4-1/png/pngrutil.c **** 
 11061              		.loc 1 3436 22 is_stmt 0 view .LVU3383
 11062 0540 4C39CA   		cmpq	%r9, %rdx
 11063 0543 76D3     		jbe	.L966
 11064 0545 4989F7   		movq	%rsi, %r15
 11065              	.LVL1251:
 11066              	.L967:
3441:fltk-1.3.4-1/png/pngrutil.c ****                         *dp++ = *sp++;
 11067              		.loc 1 3441 22 is_stmt 1 discriminator 1 view .LVU3384
3442:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
 11068              		.loc 1 3442 25 discriminator 1 view .LVU3385
3442:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
 11069              		.loc 1 3442 33 is_stmt 0 discriminator 1 view .LVU3386
 11070 0548 410FB604 		movzbl	(%r15,%rcx), %eax
 11070      0F
3442:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
 11071              		.loc 1 3442 31 discriminator 1 view .LVU3387
 11072 054d 41880408 		movb	%al, (%r8,%rcx)
3443:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11073              		.loc 1 3443 28 is_stmt 1 discriminator 1 view .LVU3388
 11074              	.LVL1252:
3443:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11075              		.loc 1 3443 28 is_stmt 0 discriminator 1 view .LVU3389
 11076 0551 4883C101 		addq	$1, %rcx
 11077              	.LVL1253:
3443:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11078              		.loc 1 3443 22 discriminator 1 view .LVU3390
 11079 0555 4939C9   		cmpq	%rcx, %r9
 11080 0558 75EE     		jne	.L967
 11081 055a E98FFBFF 		jmp	.L922
 11081      FF
 11082              	.LVL1254:
 11083              	.L1036:
3443:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11084              		.loc 1 3443 22 discriminator 1 view .LVU3391
 11085              	.LBE374:
 11086              	.LBB375:
 11087              	.LBB363:
 11088              		.loc 2 34 10 view .LVU3392
 11089 055f 430FB74C 		movzwl	-2(%r15,%r10), %ecx
 11089      17FE
 11090 0565 6643894C 		movw	%cx, -2(%r8,%r10)
 11090      10FE
 11091 056b E9DDFDFF 		jmp	.L969
 11091      FF
 11092              	.LVL1255:
 11093              	.L1030:
 11094              		.loc 2 34 10 view .LVU3393
 11095              	.LBE363:
 11096              	.LBE375:
 11097              	.LBE378:
3030:fltk-1.3.4-1/png/pngrutil.c **** 
 11098              		.loc 1 3030 7 is_stmt 1 view .LVU3394
 11099 0570 488D3500 		leaq	.LC51(%rip), %rsi
 11099      000000
 11100 0577 E8000000 		call	png_error@PLT
 11100      00
 11101              	.LVL1256:
 11102              	.L1028:
3018:fltk-1.3.4-1/png/pngrutil.c **** 
 11103              		.loc 1 3018 7 view .LVU3395
 11104 057c 488D3500 		leaq	.LC49(%rip), %rsi
 11104      000000
 11105              	.LVL1257:
3018:fltk-1.3.4-1/png/pngrutil.c **** 
 11106              		.loc 1 3018 7 is_stmt 0 view .LVU3396
 11107 0583 E8000000 		call	png_error@PLT
 11107      00
 11108              	.LVL1258:
 11109              	.L1039:
 11110              	.LBB379:
3368:fltk-1.3.4-1/png/pngrutil.c ****                       bytes_to_jump % (sizeof (png_uint_32)) == 0)
 11111              		.loc 1 3368 67 view .LVU3397
 11112 0588 4080E703 		andb	$3, %dil
 11113 058c 0F8579FF 		jne	.L961
 11113      FFFF
 11114              	.LBB376:
3371:fltk-1.3.4-1/png/pngrutil.c ****                      png_const_uint_32p sp32 = png_aligncastconst(
 11115              		.loc 1 3371 22 is_stmt 1 view .LVU3398
 11116              	.LVL1259:
3372:fltk-1.3.4-1/png/pngrutil.c ****                          png_const_uint_32p, sp);
 11117              		.loc 1 3372 22 view .LVU3399
3374:fltk-1.3.4-1/png/pngrutil.c ****                          (sizeof (png_uint_32));
 11118              		.loc 1 3374 22 view .LVU3400
3374:fltk-1.3.4-1/png/pngrutil.c ****                          (sizeof (png_uint_32));
 11119              		.loc 1 3374 66 is_stmt 0 view .LVU3401
 11120 0592 89F1     		movl	%esi, %ecx
 11121 0594 4189D2   		movl	%edx, %r10d
 11122 0597 4C89FE   		movq	%r15, %rsi
 11123              	.LVL1260:
3374:fltk-1.3.4-1/png/pngrutil.c ****                          (sizeof (png_uint_32));
 11124              		.loc 1 3374 66 view .LVU3402
 11125 059a C1E902   		shrl	$2, %ecx
 11126              	.LVL1261:
 11127              	.LBB372:
3390:fltk-1.3.4-1/png/pngrutil.c ****                         sp32 += skip;
 11128              		.loc 1 3390 30 view .LVU3403
 11129 059d 48C1E102 		salq	$2, %rcx
 11130              	.LVL1262:
 11131              	.L963:
3390:fltk-1.3.4-1/png/pngrutil.c ****                         sp32 += skip;
 11132              		.loc 1 3390 30 view .LVU3404
 11133              	.LBE372:
3377:fltk-1.3.4-1/png/pngrutil.c ****                      {
 11134              		.loc 1 3377 22 is_stmt 1 view .LVU3405
 11135              	.LBB373:
3379:fltk-1.3.4-1/png/pngrutil.c ****                         do
 11136              		.loc 1 3379 25 view .LVU3406
3379:fltk-1.3.4-1/png/pngrutil.c ****                         do
 11137              		.loc 1 3379 32 is_stmt 0 view .LVU3407
 11138 05a1 4C89C7   		movq	%r8, %rdi
 11139              	.LVL1263:
 11140              	.L962:
3380:fltk-1.3.4-1/png/pngrutil.c ****                         {
 11141              		.loc 1 3380 25 is_stmt 1 discriminator 1 view .LVU3408
3382:fltk-1.3.4-1/png/pngrutil.c ****                            c -= (sizeof (png_uint_32));
 11142              		.loc 1 3382 28 discriminator 1 view .LVU3409
3382:fltk-1.3.4-1/png/pngrutil.c ****                            c -= (sizeof (png_uint_32));
 11143              		.loc 1 3382 36 is_stmt 0 discriminator 1 view .LVU3410
 11144 05a4 A5       		movsl
 11145              	.LVL1264:
3383:fltk-1.3.4-1/png/pngrutil.c ****                         }
 11146              		.loc 1 3383 28 is_stmt 1 discriminator 1 view .LVU3411
3385:fltk-1.3.4-1/png/pngrutil.c **** 
 11147              		.loc 1 3385 31 discriminator 1 view .LVU3412
 11148 05a5 4C89D2   		movq	%r10, %rdx
 11149 05a8 4829FA   		subq	%rdi, %rdx
3385:fltk-1.3.4-1/png/pngrutil.c **** 
 11150              		.loc 1 3385 25 is_stmt 0 discriminator 1 view .LVU3413
 11151 05ab 4C01C2   		addq	%r8, %rdx
 11152 05ae 75F4     		jne	.L962
3387:fltk-1.3.4-1/png/pngrutil.c ****                            return;
 11153              		.loc 1 3387 25 is_stmt 1 view .LVU3414
3387:fltk-1.3.4-1/png/pngrutil.c ****                            return;
 11154              		.loc 1 3387 28 is_stmt 0 view .LVU3415
 11155 05b0 4C39C8   		cmpq	%r9, %rax
 11156 05b3 0F8335FB 		jnb	.L922
 11156      FFFF
3390:fltk-1.3.4-1/png/pngrutil.c ****                         sp32 += skip;
 11157              		.loc 1 3390 25 is_stmt 1 view .LVU3416
3392:fltk-1.3.4-1/png/pngrutil.c ****                      }
 11158              		.loc 1 3392 35 is_stmt 0 view .LVU3417
 11159 05b9 4929C1   		subq	%rax, %r9
 11160              	.LVL1265:
3390:fltk-1.3.4-1/png/pngrutil.c ****                         sp32 += skip;
 11161              		.loc 1 3390 30 view .LVU3418
 11162 05bc 4C8D040F 		leaq	(%rdi,%rcx), %r8
 11163              	.LVL1266:
3391:fltk-1.3.4-1/png/pngrutil.c ****                         row_width -= bytes_to_jump;
 11164              		.loc 1 3391 25 is_stmt 1 view .LVU3419
3391:fltk-1.3.4-1/png/pngrutil.c ****                         row_width -= bytes_to_jump;
 11165              		.loc 1 3391 30 is_stmt 0 view .LVU3420
 11166 05c0 4801CE   		addq	%rcx, %rsi
 11167              	.LVL1267:
3392:fltk-1.3.4-1/png/pngrutil.c ****                      }
 11168              		.loc 1 3392 25 is_stmt 1 view .LVU3421
3392:fltk-1.3.4-1/png/pngrutil.c ****                      }
 11169              		.loc 1 3392 25 is_stmt 0 view .LVU3422
 11170              	.LBE373:
3394:fltk-1.3.4-1/png/pngrutil.c **** 
 11171              		.loc 1 3394 28 is_stmt 1 view .LVU3423
3394:fltk-1.3.4-1/png/pngrutil.c **** 
 11172              		.loc 1 3394 22 is_stmt 0 view .LVU3424
 11173 05c3 4D39CA   		cmpq	%r9, %r10
 11174 05c6 76D9     		jbe	.L963
 11175 05c8 4989F7   		movq	%rsi, %r15
 11176              	.LVL1268:
 11177              	.L964:
3402:fltk-1.3.4-1/png/pngrutil.c ****                         *dp++ = *sp++;
 11178              		.loc 1 3402 22 is_stmt 1 discriminator 1 view .LVU3425
3403:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
 11179              		.loc 1 3403 25 discriminator 1 view .LVU3426
3403:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
 11180              		.loc 1 3403 33 is_stmt 0 discriminator 1 view .LVU3427
 11181 05cb 410FB604 		movzbl	(%r15,%rdx), %eax
 11181      17
3403:fltk-1.3.4-1/png/pngrutil.c ****                      while (--row_width > 0);
 11182              		.loc 1 3403 31 discriminator 1 view .LVU3428
 11183 05d0 41880410 		movb	%al, (%r8,%rdx)
3404:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11184              		.loc 1 3404 28 is_stmt 1 discriminator 1 view .LVU3429
 11185              	.LVL1269:
3404:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11186              		.loc 1 3404 28 is_stmt 0 discriminator 1 view .LVU3430
 11187 05d4 4883C201 		addq	$1, %rdx
 11188              	.LVL1270:
3404:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11189              		.loc 1 3404 22 discriminator 1 view .LVU3431
 11190 05d8 4939D1   		cmpq	%rdx, %r9
 11191 05db 75EE     		jne	.L964
 11192 05dd E90CFBFF 		jmp	.L922
 11192      FF
 11193              	.LVL1271:
 11194              	.L1033:
3404:fltk-1.3.4-1/png/pngrutil.c ****                      return;
 11195              		.loc 1 3404 22 discriminator 1 view .LVU3432
 11196              	.LBE376:
3253:fltk-1.3.4-1/png/pngrutil.c **** 
 11197              		.loc 1 3253 13 is_stmt 1 view .LVU3433
 11198 05e2 488D3500 		leaq	.LC52(%rip), %rsi
 11198      000000
 11199 05e9 E8000000 		call	png_error@PLT
 11199      00
 11200              	.LVL1272:
3253:fltk-1.3.4-1/png/pngrutil.c **** 
 11201              		.loc 1 3253 13 is_stmt 0 view .LVU3434
 11202              	.LBE379:
 11203              		.cfi_endproc
 11204              	.LFE79:
 11206              		.section	.text.png_do_read_interlace,"ax",@progbits
 11207              		.p2align 4
 11208              		.globl	png_do_read_interlace
 11210              	png_do_read_interlace:
 11211              	.LVL1273:
 11212              	.LFB80:
3488:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
 11213              		.loc 1 3488 1 is_stmt 1 view -0
 11214              		.cfi_startproc
3488:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
 11215              		.loc 1 3488 1 is_stmt 0 view .LVU3436
 11216 0000 F30F1EFA 		endbr64
 11217 0004 4157     		pushq	%r15
 11218              		.cfi_def_cfa_offset 16
 11219              		.cfi_offset 15, -16
 11220 0006 4156     		pushq	%r14
 11221              		.cfi_def_cfa_offset 24
 11222              		.cfi_offset 14, -24
 11223 0008 4155     		pushq	%r13
 11224              		.cfi_def_cfa_offset 32
 11225              		.cfi_offset 13, -32
 11226 000a 4154     		pushq	%r12
 11227              		.cfi_def_cfa_offset 40
 11228              		.cfi_offset 12, -40
 11229 000c 55       		pushq	%rbp
 11230              		.cfi_def_cfa_offset 48
 11231              		.cfi_offset 6, -48
 11232 000d 53       		pushq	%rbx
 11233              		.cfi_def_cfa_offset 56
 11234              		.cfi_offset 3, -56
 11235 000e 4883EC48 		subq	$72, %rsp
 11236              		.cfi_def_cfa_offset 128
3488:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
 11237              		.loc 1 3488 1 view .LVU3437
 11238 0012 48893C24 		movq	%rdi, (%rsp)
 11239 0016 64488B04 		movq	%fs:40, %rax
 11239      25280000 
 11239      00
 11240 001f 48894424 		movq	%rax, 56(%rsp)
 11240      38
 11241 0024 31C0     		xorl	%eax, %eax
3491:fltk-1.3.4-1/png/pngrutil.c **** 
 11242              		.loc 1 3491 4 is_stmt 1 view .LVU3438
3493:fltk-1.3.4-1/png/pngrutil.c ****    if (row != NULL && row_info != NULL)
 11243              		.loc 1 3493 4 view .LVU3439
3494:fltk-1.3.4-1/png/pngrutil.c ****    {
 11244              		.loc 1 3494 4 view .LVU3440
3494:fltk-1.3.4-1/png/pngrutil.c ****    {
 11245              		.loc 1 3494 7 is_stmt 0 view .LVU3441
 11246 0026 4885F6   		testq	%rsi, %rsi
 11247 0029 0F845701 		je	.L1040
 11247      0000
 11248 002f 4885FF   		testq	%rdi, %rdi
 11249 0032 0F844E01 		je	.L1040
 11249      0000
 11250              	.LBB380:
3496:fltk-1.3.4-1/png/pngrutil.c **** 
 11251              		.loc 1 3496 7 is_stmt 1 view .LVU3442
3498:fltk-1.3.4-1/png/pngrutil.c **** 
 11252              		.loc 1 3498 7 view .LVU3443
3498:fltk-1.3.4-1/png/pngrutil.c **** 
 11253              		.loc 1 3498 29 is_stmt 0 view .LVU3444
 11254 0038 448B07   		movl	(%rdi), %r8d
3498:fltk-1.3.4-1/png/pngrutil.c **** 
 11255              		.loc 1 3498 51 view .LVU3445
 11256 003b 4863D2   		movslq	%edx, %rdx
3498:fltk-1.3.4-1/png/pngrutil.c **** 
 11257              		.loc 1 3498 51 view .LVU3446
 11258 003e 488D0500 		leaq	png_pass_inc.7239(%rip), %rax
 11258      000000
3500:fltk-1.3.4-1/png/pngrutil.c ****       {
 11259              		.loc 1 3500 23 view .LVU3447
 11260 0045 0FB67F13 		movzbl	19(%rdi), %edi
 11261              	.LVL1274:
3498:fltk-1.3.4-1/png/pngrutil.c **** 
 11262              		.loc 1 3498 51 view .LVU3448
 11263 0049 8B1C90   		movl	(%rax,%rdx,4), %ebx
3498:fltk-1.3.4-1/png/pngrutil.c **** 
 11264              		.loc 1 3498 19 view .LVU3449
 11265 004c 4489C0   		movl	%r8d, %eax
 11266 004f 418D50FF 		leal	-1(%r8), %edx
 11267              	.LVL1275:
3498:fltk-1.3.4-1/png/pngrutil.c **** 
 11268              		.loc 1 3498 19 view .LVU3450
 11269 0053 0FAFC3   		imull	%ebx, %eax
 11270 0056 89442424 		movl	%eax, 36(%rsp)
 11271              	.LVL1276:
3500:fltk-1.3.4-1/png/pngrutil.c ****       {
 11272              		.loc 1 3500 7 is_stmt 1 view .LVU3451
 11273 005a 83E801   		subl	$1, %eax
 11274              	.LVL1277:
3500:fltk-1.3.4-1/png/pngrutil.c ****       {
 11275              		.loc 1 3500 7 is_stmt 0 view .LVU3452
 11276 005d 4080FF02 		cmpb	$2, %dil
 11277 0061 0F84D903 		je	.L1042
 11277      0000
 11278 0067 4080FF04 		cmpb	$4, %dil
 11279 006b 0F84DF02 		je	.L1043
 11279      0000
 11280 0071 4080FF01 		cmpb	$1, %dil
 11281 0075 0F84E501 		je	.L1121
 11281      0000
 11282              	.LBB381:
3691:fltk-1.3.4-1/png/pngrutil.c **** 
 11283              		.loc 1 3691 13 is_stmt 1 view .LVU3453
3691:fltk-1.3.4-1/png/pngrutil.c **** 
 11284              		.loc 1 3691 61 is_stmt 0 view .LVU3454
 11285 007b 89FD     		movl	%edi, %ebp
 11286 007d 40C0ED03 		shrb	$3, %bpl
3691:fltk-1.3.4-1/png/pngrutil.c **** 
 11287              		.loc 1 3691 24 view .LVU3455
 11288 0081 400FB6ED 		movzbl	%bpl, %ebp
 11289              	.LVL1278:
3693:fltk-1.3.4-1/png/pngrutil.c ****                 * pixel_bytes;
 11290              		.loc 1 3693 13 is_stmt 1 view .LVU3456
3696:fltk-1.3.4-1/png/pngrutil.c **** 
 11291              		.loc 1 3696 64 is_stmt 0 view .LVU3457
 11292 0085 480FAFC5 		imulq	%rbp, %rax
3694:fltk-1.3.4-1/png/pngrutil.c **** 
 11293              		.loc 1 3694 17 view .LVU3458
 11294 0089 480FAFD5 		imulq	%rbp, %rdx
3696:fltk-1.3.4-1/png/pngrutil.c **** 
 11295              		.loc 1 3696 23 view .LVU3459
 11296 008d 4801F0   		addq	%rsi, %rax
 11297 0090 48894424 		movq	%rax, 24(%rsp)
 11297      18
3693:fltk-1.3.4-1/png/pngrutil.c ****                 * pixel_bytes;
 11298              		.loc 1 3693 23 view .LVU3460
 11299 0095 4C8D3C16 		leaq	(%rsi,%rdx), %r15
 11300              	.LVL1279:
3696:fltk-1.3.4-1/png/pngrutil.c **** 
 11301              		.loc 1 3696 13 is_stmt 1 view .LVU3461
3698:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
 11302              		.loc 1 3698 13 view .LVU3462
3699:fltk-1.3.4-1/png/pngrutil.c **** 
 11303              		.loc 1 3699 13 view .LVU3463
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11304              		.loc 1 3701 13 view .LVU3464
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11305              		.loc 1 3701 25 view .LVU3465
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11306              		.loc 1 3701 13 is_stmt 0 view .LVU3466
 11307 0099 4585C0   		testl	%r8d, %r8d
 11308 009c 0F84C000 		je	.L1055
 11308      0000
 11309 00a2 4989EC   		movq	%rbp, %r12
 11310 00a5 8D43FF   		leal	-1(%rbx), %eax
 11311              	.LVL1280:
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11312              		.loc 1 3701 13 view .LVU3467
 11313 00a8 4C8D4424 		leaq	48(%rsp), %r8
 11313      30
 11314              	.LBB382:
 11315              	.LBB383:
 11316              	.LBB384:
 11317              		.loc 2 34 10 view .LVU3468
 11318 00ad 4189ED   		movl	%ebp, %r13d
 11319 00b0 49F7DC   		negq	%r12
 11320 00b3 4883C001 		addq	$1, %rax
 11321              	.LBE384:
 11322              	.LBE383:
 11323              	.LBE382:
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11324              		.loc 1 3701 20 view .LVU3469
 11325 00b7 C7442414 		movl	$0, 20(%rsp)
 11325      00000000 
 11326              	.LBB395:
 11327              	.LBB389:
 11328              	.LBB385:
 11329              		.loc 2 34 10 view .LVU3470
 11330 00bf 4183E504 		andl	$4, %r13d
 11331 00c3 490FAFC4 		imulq	%r12, %rax
 11332 00c7 48894424 		movq	%rax, 40(%rsp)
 11332      28
 11333 00cc 89E8     		movl	%ebp, %eax
 11334 00ce 83E002   		andl	$2, %eax
 11335 00d1 89442420 		movl	%eax, 32(%rsp)
 11336              	.LVL1281:
 11337              		.p2align 4,,10
 11338 00d5 0F1F00   		.p2align 3
 11339              	.L1083:
 11340              		.loc 2 34 10 view .LVU3471
 11341              	.LBE385:
 11342              	.LBE389:
3703:fltk-1.3.4-1/png/pngrutil.c ****                int j;
 11343              		.loc 1 3703 16 is_stmt 1 view .LVU3472
3704:fltk-1.3.4-1/png/pngrutil.c **** 
 11344              		.loc 1 3704 16 view .LVU3473
3706:fltk-1.3.4-1/png/pngrutil.c **** 
 11345              		.loc 1 3706 16 view .LVU3474
 11346              	.LBB390:
 11347              	.LBI390:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 11348              		.loc 2 31 1 view .LVU3475
 11349              	.LBB391:
 11350              		.loc 2 34 3 view .LVU3476
 11351              		.loc 2 34 10 is_stmt 0 view .LVU3477
 11352 00d8 4C89C7   		movq	%r8, %rdi
 11353 00db B9080000 		movl	$8, %ecx
 11353      00
 11354 00e0 4889EA   		movq	%rbp, %rdx
 11355 00e3 4C89FE   		movq	%r15, %rsi
 11356 00e6 E8000000 		call	__memcpy_chk@PLT
 11356      00
 11357              	.LVL1282:
 11358 00eb 4989C0   		movq	%rax, %r8
 11359              	.LVL1283:
 11360              		.loc 2 34 10 view .LVU3478
 11361              	.LBE391:
 11362              	.LBE390:
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11363              		.loc 1 3708 16 is_stmt 1 view .LVU3479
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11364              		.loc 1 3708 28 view .LVU3480
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11365              		.loc 1 3708 16 is_stmt 0 view .LVU3481
 11366 00ee 85DB     		testl	%ebx, %ebx
 11367 00f0 7E54     		jle	.L1075
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11368              		.loc 1 3708 16 view .LVU3482
 11369 00f2 488B4C24 		movq	24(%rsp), %rcx
 11369      18
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11370              		.loc 1 3708 23 view .LVU3483
 11371 00f7 4531C9   		xorl	%r9d, %r9d
 11372              	.LBB392:
 11373              	.LBB386:
 11374              		.loc 2 34 10 view .LVU3484
 11375 00fa 4189EE   		movl	%ebp, %r14d
 11376 00fd 4C8D1C28 		leaq	(%rax,%rbp), %r11
 11377              	.LVL1284:
 11378              		.p2align 4,,10
 11379 0101 0F1F8000 		.p2align 3
 11379      000000
 11380              	.L1082:
 11381              		.loc 2 34 10 view .LVU3485
 11382              	.LBE386:
 11383              	.LBE392:
3710:fltk-1.3.4-1/png/pngrutil.c ****                   dp -= pixel_bytes;
 11384              		.loc 1 3710 19 is_stmt 1 view .LVU3486
 11385              	.LBB393:
 11386              	.LBI383:
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
 11387              		.loc 2 31 1 view .LVU3487
 11388              	.LBB387:
 11389              		.loc 2 34 3 view .LVU3488
 11390              		.loc 2 34 10 is_stmt 0 view .LVU3489
 11391 0108 83FD08   		cmpl	$8, %ebp
 11392 010b 0F83BF00 		jnb	.L1076
 11392      0000
 11393              		.loc 2 34 10 view .LVU3490
 11394 0111 4585ED   		testl	%r13d, %r13d
 11395 0114 0F851601 		jne	.L1122
 11395      0000
 11396 011a 85ED     		testl	%ebp, %ebp
 11397 011c 7412     		je	.L1077
 11398 011e 410FB600 		movzbl	(%r8), %eax
 11399 0122 8801     		movb	%al, (%rcx)
 11400 0124 8B442420 		movl	32(%rsp), %eax
 11401 0128 85C0     		testl	%eax, %eax
 11402 012a 0F851801 		jne	.L1123
 11402      0000
 11403              	.LVL1285:
 11404              	.L1077:
 11405              		.loc 2 34 10 view .LVU3491
 11406              	.LBE387:
 11407              	.LBE393:
3711:fltk-1.3.4-1/png/pngrutil.c ****                }
 11408              		.loc 1 3711 19 is_stmt 1 view .LVU3492
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11409              		.loc 1 3708 40 is_stmt 0 view .LVU3493
 11410 0130 4183C101 		addl	$1, %r9d
 11411              	.LVL1286:
3711:fltk-1.3.4-1/png/pngrutil.c ****                }
 11412              		.loc 1 3711 22 view .LVU3494
 11413 0134 4C01E1   		addq	%r12, %rcx
 11414              	.LVL1287:
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11415              		.loc 1 3708 39 is_stmt 1 view .LVU3495
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11416              		.loc 1 3708 28 view .LVU3496
3708:fltk-1.3.4-1/png/pngrutil.c ****                {
 11417              		.loc 1 3708 16 is_stmt 0 view .LVU3497
 11418 0137 4439CB   		cmpl	%r9d, %ebx
 11419 013a 75CC     		jne	.L1082
 11420 013c 488B7C24 		movq	40(%rsp), %rdi
 11420      28
 11421 0141 48017C24 		addq	%rdi, 24(%rsp)
 11421      18
 11422              	.LVL1288:
 11423              	.L1075:
3714:fltk-1.3.4-1/png/pngrutil.c ****             }
 11424              		.loc 1 3714 16 is_stmt 1 discriminator 2 view .LVU3498
 11425              	.LBE395:
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11426              		.loc 1 3701 13 is_stmt 0 discriminator 2 view .LVU3499
 11427 0146 488B3C24 		movq	(%rsp), %rdi
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11428              		.loc 1 3701 47 discriminator 2 view .LVU3500
 11429 014a 83442414 		addl	$1, 20(%rsp)
 11429      01
 11430              	.LBB396:
3714:fltk-1.3.4-1/png/pngrutil.c ****             }
 11431              		.loc 1 3714 19 discriminator 2 view .LVU3501
 11432 014f 4D01E7   		addq	%r12, %r15
 11433              	.LVL1289:
3714:fltk-1.3.4-1/png/pngrutil.c ****             }
 11434              		.loc 1 3714 19 discriminator 2 view .LVU3502
 11435              	.LBE396:
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11436              		.loc 1 3701 46 is_stmt 1 discriminator 2 view .LVU3503
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11437              		.loc 1 3701 47 is_stmt 0 discriminator 2 view .LVU3504
 11438 0152 8B442414 		movl	20(%rsp), %eax
 11439              	.LVL1290:
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11440              		.loc 1 3701 25 is_stmt 1 discriminator 2 view .LVU3505
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11441              		.loc 1 3701 13 is_stmt 0 discriminator 2 view .LVU3506
 11442 0156 3907     		cmpl	%eax, (%rdi)
 11443 0158 0F877AFF 		ja	.L1083
 11443      FFFF
 11444              	.LVL1291:
 11445              	.L1120:
3701:fltk-1.3.4-1/png/pngrutil.c ****             {
 11446              		.loc 1 3701 13 discriminator 2 view .LVU3507
 11447 015e 0FB67F13 		movzbl	19(%rdi), %edi
 11448              	.L1055:
 11449              	.LBE381:
3720:fltk-1.3.4-1/png/pngrutil.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, final_width);
 11450              		.loc 1 3720 7 is_stmt 1 view .LVU3508
3720:fltk-1.3.4-1/png/pngrutil.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, final_width);
 11451              		.loc 1 3720 23 is_stmt 0 view .LVU3509
 11452 0162 488B1C24 		movq	(%rsp), %rbx
 11453 0166 8B442424 		movl	36(%rsp), %eax
 11454 016a 8903     		movl	%eax, (%rbx)
3721:fltk-1.3.4-1/png/pngrutil.c ****    }
 11455              		.loc 1 3721 7 is_stmt 1 view .LVU3510
3721:fltk-1.3.4-1/png/pngrutil.c ****    }
 11456              		.loc 1 3721 28 is_stmt 0 view .LVU3511
 11457 016c 4080FF07 		cmpb	$7, %dil
 11458 0170 7646     		jbe	.L1084
3721:fltk-1.3.4-1/png/pngrutil.c ****    }
 11459              		.loc 1 3721 28 discriminator 1 view .LVU3512
 11460 0172 40C0EF03 		shrb	$3, %dil
 11461 0176 400FB6FF 		movzbl	%dil, %edi
 11462 017a 480FAFF8 		imulq	%rax, %rdi
 11463              	.L1085:
3721:fltk-1.3.4-1/png/pngrutil.c ****    }
 11464              		.loc 1 3721 26 discriminator 4 view .LVU3513
 11465 017e 488B0424 		movq	(%rsp), %rax
 11466 0182 48897808 		movq	%rdi, 8(%rax)
 11467              	.L1040:
3721:fltk-1.3.4-1/png/pngrutil.c ****    }
 11468              		.loc 1 3721 26 discriminator 4 view .LVU3514
 11469              	.LBE380:
3726:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_INTERLACING */
 11470              		.loc 1 3726 1 view .LVU3515
 11471 0186 488B4424 		movq	56(%rsp), %rax
 11471      38
 11472 018b 64483304 		xorq	%fs:40, %rax
 11472      25280000 
 11472      00
 11473 0194 0F850004 		jne	.L1124
 11473      0000
 11474 019a 4883C448 		addq	$72, %rsp
 11475              		.cfi_remember_state
 11476              		.cfi_def_cfa_offset 56
 11477 019e 5B       		popq	%rbx
 11478              		.cfi_def_cfa_offset 48
 11479 019f 5D       		popq	%rbp
 11480              		.cfi_def_cfa_offset 40
 11481 01a0 415C     		popq	%r12
 11482              		.cfi_def_cfa_offset 32
 11483 01a2 415D     		popq	%r13
 11484              		.cfi_def_cfa_offset 24
 11485 01a4 415E     		popq	%r14
 11486              		.cfi_def_cfa_offset 16
 11487 01a6 415F     		popq	%r15
 11488              		.cfi_def_cfa_offset 8
 11489 01a8 C3       		ret
 11490              	.LVL1292:
 11491              	.L1047:
 11492              		.cfi_restore_state
 11493              	.LBB423:
3720:fltk-1.3.4-1/png/pngrutil.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, final_width);
 11494              		.loc 1 3720 7 is_stmt 1 view .LVU3516
3720:fltk-1.3.4-1/png/pngrutil.c ****       row_info->rowbytes = PNG_ROWBYTES(row_info->pixel_depth, final_width);
 11495              		.loc 1 3720 23 is_stmt 0 view .LVU3517
 11496 01a9 488B1C24 		movq	(%rsp), %rbx
 11497 01ad 8B442424 		movl	36(%rsp), %eax
 11498 01b1 8903     		movl	%eax, (%rbx)
3721:fltk-1.3.4-1/png/pngrutil.c ****    }
 11499              		.loc 1 3721 7 is_stmt 1 view .LVU3518
 11500              	.LVL1293:
 11501              		.p2align 4,,10
 11502 01b3 0F1F4400 		.p2align 3
 11502      00
 11503              	.L1084:
3721:fltk-1.3.4-1/png/pngrutil.c ****    }
 11504              		.loc 1 3721 28 is_stmt 0 discriminator 2 view .LVU3519
 11505 01b8 480FAFF8 		imulq	%rax, %rdi
 11506 01bc 4883C707 		addq	$7, %rdi
 11507 01c0 48C1EF03 		shrq	$3, %rdi
 11508 01c4 EBB8     		jmp	.L1085
 11509              	.LVL1294:
 11510 01c6 662E0F1F 		.p2align 4,,10
 11510      84000000 
 11510      0000
 11511              		.p2align 3
 11512              	.L1076:
 11513              	.LBB398:
 11514              	.LBB397:
 11515              	.LBB394:
 11516              	.LBB388:
 11517              		.loc 2 34 10 view .LVU3520
 11518 01d0 498B00   		movq	(%r8), %rax
 11519 01d3 488D7908 		leaq	8(%rcx), %rdi
 11520 01d7 4D89C2   		movq	%r8, %r10
 11521 01da 4883E7F8 		andq	$-8, %rdi
 11522 01de 488901   		movq	%rax, (%rcx)
 11523 01e1 498B43F8 		movq	-8(%r11), %rax
 11524 01e5 4A894431 		movq	%rax, -8(%rcx,%r14)
 11524      F8
 11525 01ea 4889C8   		movq	%rcx, %rax
 11526 01ed 4829F8   		subq	%rdi, %rax
 11527 01f0 4929C2   		subq	%rax, %r10
 11528 01f3 01E8     		addl	%ebp, %eax
 11529 01f5 83E0F8   		andl	$-8, %eax
 11530 01f8 83F808   		cmpl	$8, %eax
 11531 01fb 0F822FFF 		jb	.L1077
 11531      FFFF
 11532 0201 48894C24 		movq	%rcx, 8(%rsp)
 11532      08
 11533 0206 83E0F8   		andl	$-8, %eax
 11534 0209 31D2     		xorl	%edx, %edx
 11535              	.LVL1295:
 11536              	.L1080:
 11537              		.loc 2 34 10 view .LVU3521
 11538 020b 89D6     		movl	%edx, %esi
 11539 020d 83C208   		addl	$8, %edx
 11540 0210 498B0C32 		movq	(%r10,%rsi), %rcx
 11541 0214 48890C37 		movq	%rcx, (%rdi,%rsi)
 11542 0218 39C2     		cmpl	%eax, %edx
 11543 021a 72EF     		jb	.L1080
 11544 021c 488B4C24 		movq	8(%rsp), %rcx
 11544      08
 11545 0221 E90AFFFF 		jmp	.L1077
 11545      FF
 11546              	.LVL1296:
 11547 0226 662E0F1F 		.p2align 4,,10
 11547      84000000 
 11547      0000
 11548              		.p2align 3
 11549              	.L1122:
 11550              		.loc 2 34 10 view .LVU3522
 11551 0230 418B00   		movl	(%r8), %eax
 11552 0233 8901     		movl	%eax, (%rcx)
 11553 0235 418B43FC 		movl	-4(%r11), %eax
 11554 0239 42894431 		movl	%eax, -4(%rcx,%r14)
 11554      FC
 11555 023e E9EDFEFF 		jmp	.L1077
 11555      FF
 11556              		.p2align 4,,10
 11557 0243 0F1F4400 		.p2align 3
 11557      00
 11558              	.L1123:
 11559              		.loc 2 34 10 view .LVU3523
 11560 0248 410FB743 		movzwl	-2(%r11), %eax
 11560      FE
 11561 024d 66428944 		movw	%ax, -2(%rcx,%r14)
 11561      31FE
 11562 0253 E9D8FEFF 		jmp	.L1077
 11562      FF
 11563              	.LVL1297:
 11564 0258 0F1F8400 		.p2align 4,,10
 11564      00000000 
 11565              		.p2align 3
 11566              	.L1121:
 11567              		.loc 2 34 10 view .LVU3524
 11568              	.LBE388:
 11569              	.LBE394:
 11570              	.LBE397:
 11571              	.LBE398:
 11572              	.LBB399:
3504:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 3);
 11573              		.loc 1 3504 13 is_stmt 1 view .LVU3525
3504:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 3);
 11574              		.loc 1 3504 69 is_stmt 0 view .LVU3526
 11575 0260 C1EA03   		shrl	$3, %edx
3505:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 11576              		.loc 1 3505 65 view .LVU3527
 11577 0263 C1E803   		shrl	$3, %eax
 11578 0266 458D6007 		leal	7(%r8), %r12d
3504:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 3);
 11579              		.loc 1 3504 34 view .LVU3528
 11580 026a 89D5     		movl	%edx, %ebp
3504:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 3);
 11581              		.loc 1 3504 23 view .LVU3529
 11582 026c 4801F5   		addq	%rsi, %rbp
 11583              	.LVL1298:
3505:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 11584              		.loc 1 3505 13 is_stmt 1 view .LVU3530
3505:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 11585              		.loc 1 3505 23 is_stmt 0 view .LVU3531
 11586 026f 4801C6   		addq	%rax, %rsi
 11587              	.LVL1299:
3506:fltk-1.3.4-1/png/pngrutil.c ****             int s_start, s_end, s_inc;
 11588              		.loc 1 3506 13 is_stmt 1 view .LVU3532
3507:fltk-1.3.4-1/png/pngrutil.c ****             int jstop = png_pass_inc[pass];
 11589              		.loc 1 3507 13 view .LVU3533
3508:fltk-1.3.4-1/png/pngrutil.c ****             png_byte v;
 11590              		.loc 1 3508 13 view .LVU3534
3509:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
 11591              		.loc 1 3509 13 view .LVU3535
3510:fltk-1.3.4-1/png/pngrutil.c ****             int j;
 11592              		.loc 1 3510 13 view .LVU3536
3511:fltk-1.3.4-1/png/pngrutil.c **** 
 11593              		.loc 1 3511 13 view .LVU3537
3514:fltk-1.3.4-1/png/pngrutil.c ****             {
 11594              		.loc 1 3514 13 view .LVU3538
 11595 0272 8B442424 		movl	36(%rsp), %eax
 11596 0276 83C007   		addl	$7, %eax
3514:fltk-1.3.4-1/png/pngrutil.c ****             {
 11597              		.loc 1 3514 16 is_stmt 0 view .LVU3539
 11598 0279 81E10000 		andl	$65536, %ecx
 11598      0100
 11599              	.LVL1300:
3514:fltk-1.3.4-1/png/pngrutil.c ****             {
 11600              		.loc 1 3514 16 view .LVU3540
 11601 027f 0F84F502 		je	.L1045
 11601      0000
3516:fltk-1.3.4-1/png/pngrutil.c ****                 dshift = (int)((final_width + 7) & 0x07);
 11602              		.loc 1 3516 17 is_stmt 1 view .LVU3541
3516:fltk-1.3.4-1/png/pngrutil.c ****                 dshift = (int)((final_width + 7) & 0x07);
 11603              		.loc 1 3516 24 is_stmt 0 view .LVU3542
 11604 0285 4183E407 		andl	$7, %r12d
 11605              	.LVL1301:
3517:fltk-1.3.4-1/png/pngrutil.c ****                 s_start = 7;
 11606              		.loc 1 3517 17 is_stmt 1 view .LVU3543
3517:fltk-1.3.4-1/png/pngrutil.c ****                 s_start = 7;
 11607              		.loc 1 3517 24 is_stmt 0 view .LVU3544
 11608 0289 83E007   		andl	$7, %eax
 11609              	.LVL1302:
3518:fltk-1.3.4-1/png/pngrutil.c ****                 s_end = 0;
 11610              		.loc 1 3518 17 is_stmt 1 view .LVU3545
3519:fltk-1.3.4-1/png/pngrutil.c ****                 s_inc = -1;
 11611              		.loc 1 3519 17 view .LVU3546
3520:fltk-1.3.4-1/png/pngrutil.c ****             }
 11612              		.loc 1 3520 17 view .LVU3547
3520:fltk-1.3.4-1/png/pngrutil.c ****             }
 11613              		.loc 1 3520 23 is_stmt 0 view .LVU3548
 11614 028c 41BBFFFF 		movl	$-1, %r11d
 11614      FFFF
3519:fltk-1.3.4-1/png/pngrutil.c ****                 s_inc = -1;
 11615              		.loc 1 3519 23 view .LVU3549
 11616 0292 4531C9   		xorl	%r9d, %r9d
3518:fltk-1.3.4-1/png/pngrutil.c ****                 s_end = 0;
 11617              		.loc 1 3518 25 view .LVU3550
 11618 0295 41BD0700 		movl	$7, %r13d
 11618      0000
 11619              	.LVL1303:
 11620              	.L1046:
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11621              		.loc 1 3533 13 is_stmt 1 view .LVU3551
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11622              		.loc 1 3533 25 view .LVU3552
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11623              		.loc 1 3533 13 is_stmt 0 view .LVU3553
 11624 029b 4585C0   		testl	%r8d, %r8d
 11625 029e 0F8405FF 		je	.L1047
 11625      FFFF
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11626              		.loc 1 3533 20 view .LVU3554
 11627 02a4 4531FF   		xorl	%r15d, %r15d
 11628              	.LBB400:
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11629              		.loc 1 3538 58 view .LVU3555
 11630 02a7 41BE0700 		movl	$7, %r14d
 11630      0000
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11631              		.loc 1 3538 52 view .LVU3556
 11632 02ad 41BA7F7F 		movl	$32639, %r10d
 11632      0000
 11633              	.LVL1304:
 11634              		.p2align 4,,10
 11635 02b3 0F1F4400 		.p2align 3
 11635      00
 11636              	.L1054:
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11637              		.loc 1 3538 52 view .LVU3557
 11638              	.LBE400:
3535:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 11639              		.loc 1 3535 16 is_stmt 1 view .LVU3558
3535:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 11640              		.loc 1 3535 32 is_stmt 0 view .LVU3559
 11641 02b8 440FB645 		movzbl	0(%rbp), %r8d
 11641      00
3535:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 11642              		.loc 1 3535 36 view .LVU3560
 11643 02bd 4489E1   		movl	%r12d, %ecx
 11644 02c0 41D3F8   		sarl	%cl, %r8d
3535:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 11645              		.loc 1 3535 18 view .LVU3561
 11646 02c3 4183E001 		andl	$1, %r8d
 11647              	.LVL1305:
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11648              		.loc 1 3536 16 is_stmt 1 view .LVU3562
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11649              		.loc 1 3536 28 view .LVU3563
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11650              		.loc 1 3536 16 is_stmt 0 view .LVU3564
 11651 02c7 85DB     		testl	%ebx, %ebx
 11652 02c9 7E53     		jle	.L1048
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11653              		.loc 1 3536 23 view .LVU3565
 11654 02cb 48896C24 		movq	%rbp, 8(%rsp)
 11654      08
 11655 02d0 450FB6C0 		movzbl	%r8b, %r8d
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11656              		.loc 1 3536 23 view .LVU3566
 11657 02d4 31FF     		xorl	%edi, %edi
 11658 02d6 EB12     		jmp	.L1051
 11659              	.LVL1306:
 11660 02d8 0F1F8400 		.p2align 4,,10
 11660      00000000 
 11661              		.p2align 3
 11662              	.L1049:
 11663              	.LBB401:
3549:fltk-1.3.4-1/png/pngrutil.c ****                }
 11664              		.loc 1 3549 22 is_stmt 1 view .LVU3567
 11665              	.LBE401:
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11666              		.loc 1 3536 40 is_stmt 0 view .LVU3568
 11667 02e0 83C701   		addl	$1, %edi
 11668              	.LVL1307:
 11669              	.LBB402:
3549:fltk-1.3.4-1/png/pngrutil.c ****                }
 11670              		.loc 1 3549 29 view .LVU3569
 11671 02e3 4401D8   		addl	%r11d, %eax
 11672              	.LVL1308:
3549:fltk-1.3.4-1/png/pngrutil.c ****                }
 11673              		.loc 1 3549 29 view .LVU3570
 11674              	.LBE402:
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11675              		.loc 1 3536 39 is_stmt 1 view .LVU3571
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11676              		.loc 1 3536 28 view .LVU3572
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11677              		.loc 1 3536 16 is_stmt 0 view .LVU3573
 11678 02e6 39FB     		cmpl	%edi, %ebx
 11679 02e8 742F     		je	.L1125
 11680              	.LVL1309:
 11681              	.L1051:
 11682              	.LBB403:
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11683              		.loc 1 3538 19 is_stmt 1 view .LVU3574
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11684              		.loc 1 3538 58 is_stmt 0 view .LVU3575
 11685 02ea 4489F1   		movl	%r14d, %ecx
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11686              		.loc 1 3538 52 view .LVU3576
 11687 02ed 4489D2   		movl	%r10d, %edx
3539:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11688              		.loc 1 3539 28 view .LVU3577
 11689 02f0 4489C5   		movl	%r8d, %ebp
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11690              		.loc 1 3538 58 view .LVU3578
 11691 02f3 29C1     		subl	%eax, %ecx
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11692              		.loc 1 3538 52 view .LVU3579
 11693 02f5 D3FA     		sarl	%cl, %edx
 11694 02f7 89D1     		movl	%edx, %ecx
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11695              		.loc 1 3538 38 view .LVU3580
 11696 02f9 0FB616   		movzbl	(%rsi), %edx
3538:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11697              		.loc 1 3538 42 view .LVU3581
 11698 02fc 21CA     		andl	%ecx, %edx
 11699              	.LVL1310:
3539:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11700              		.loc 1 3539 19 is_stmt 1 view .LVU3582
3540:fltk-1.3.4-1/png/pngrutil.c **** 
 11701              		.loc 1 3540 19 view .LVU3583
3539:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11702              		.loc 1 3539 28 is_stmt 0 view .LVU3584
 11703 02fe 89C1     		movl	%eax, %ecx
 11704 0300 D3E5     		sall	%cl, %ebp
 11705              	.LVL1311:
3539:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11706              		.loc 1 3539 23 view .LVU3585
 11707 0302 09EA     		orl	%ebp, %edx
 11708              	.LVL1312:
3540:fltk-1.3.4-1/png/pngrutil.c **** 
 11709              		.loc 1 3540 25 view .LVU3586
 11710 0304 8816     		movb	%dl, (%rsi)
 11711              	.LVL1313:
3542:fltk-1.3.4-1/png/pngrutil.c ****                   {
 11712              		.loc 1 3542 19 is_stmt 1 view .LVU3587
3542:fltk-1.3.4-1/png/pngrutil.c ****                   {
 11713              		.loc 1 3542 22 is_stmt 0 view .LVU3588
 11714 0306 4139C1   		cmpl	%eax, %r9d
 11715 0309 75D5     		jne	.L1049
3544:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 11716              		.loc 1 3544 22 is_stmt 1 view .LVU3589
 11717              	.LVL1314:
3545:fltk-1.3.4-1/png/pngrutil.c ****                   }
 11718              		.loc 1 3545 22 view .LVU3590
 11719              	.LBE403:
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11720              		.loc 1 3536 40 is_stmt 0 view .LVU3591
 11721 030b 83C701   		addl	$1, %edi
 11722              	.LVL1315:
 11723              	.LBB404:
3545:fltk-1.3.4-1/png/pngrutil.c ****                   }
 11724              		.loc 1 3545 24 view .LVU3592
 11725 030e 4883EE01 		subq	$1, %rsi
 11726              	.LVL1316:
3544:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 11727              		.loc 1 3544 29 view .LVU3593
 11728 0312 4489E8   		movl	%r13d, %eax
3544:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 11729              		.loc 1 3544 29 view .LVU3594
 11730              	.LBE404:
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11731              		.loc 1 3536 39 is_stmt 1 view .LVU3595
 11732              	.LVL1317:
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11733              		.loc 1 3536 28 view .LVU3596
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11734              		.loc 1 3536 16 is_stmt 0 view .LVU3597
 11735 0315 39FB     		cmpl	%edi, %ebx
 11736 0317 75D1     		jne	.L1051
 11737              	.LVL1318:
 11738              	.L1125:
3536:fltk-1.3.4-1/png/pngrutil.c ****                {
 11739              		.loc 1 3536 16 view .LVU3598
 11740 0319 488B6C24 		movq	8(%rsp), %rbp
 11740      08
 11741              	.LVL1319:
 11742              	.L1048:
3552:fltk-1.3.4-1/png/pngrutil.c ****                {
 11743              		.loc 1 3552 16 is_stmt 1 view .LVU3599
3552:fltk-1.3.4-1/png/pngrutil.c ****                {
 11744              		.loc 1 3552 19 is_stmt 0 view .LVU3600
 11745 031e 4539E1   		cmpl	%r12d, %r9d
 11746 0321 741D     		je	.L1126
3559:fltk-1.3.4-1/png/pngrutil.c ****             }
 11747              		.loc 1 3559 19 is_stmt 1 view .LVU3601
3559:fltk-1.3.4-1/png/pngrutil.c ****             }
 11748              		.loc 1 3559 26 is_stmt 0 view .LVU3602
 11749 0323 4501DC   		addl	%r11d, %r12d
 11750              	.LVL1320:
 11751              	.L1053:
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11752              		.loc 1 3533 46 is_stmt 1 discriminator 2 view .LVU3603
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11753              		.loc 1 3533 13 is_stmt 0 discriminator 2 view .LVU3604
 11754 0326 488B3C24 		movq	(%rsp), %rdi
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11755              		.loc 1 3533 47 discriminator 2 view .LVU3605
 11756 032a 4183C701 		addl	$1, %r15d
 11757              	.LVL1321:
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11758              		.loc 1 3533 25 is_stmt 1 discriminator 2 view .LVU3606
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11759              		.loc 1 3533 13 is_stmt 0 discriminator 2 view .LVU3607
 11760 032e 44393F   		cmpl	%r15d, (%rdi)
 11761 0331 7785     		ja	.L1054
3533:fltk-1.3.4-1/png/pngrutil.c ****             {
 11762              		.loc 1 3533 13 discriminator 2 view .LVU3608
 11763 0333 E926FEFF 		jmp	.L1120
 11763      FF
 11764              	.LVL1322:
 11765 0338 0F1F8400 		.p2align 4,,10
 11765      00000000 
 11766              		.p2align 3
 11767              	.L1126:
3554:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 11768              		.loc 1 3554 19 is_stmt 1 view .LVU3609
3555:fltk-1.3.4-1/png/pngrutil.c ****                }
 11769              		.loc 1 3555 19 view .LVU3610
3555:fltk-1.3.4-1/png/pngrutil.c ****                }
 11770              		.loc 1 3555 21 is_stmt 0 view .LVU3611
 11771 0340 4883ED01 		subq	$1, %rbp
 11772              	.LVL1323:
3554:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 11773              		.loc 1 3554 26 view .LVU3612
 11774 0344 4589EC   		movl	%r13d, %r12d
 11775 0347 EBDD     		jmp	.L1053
 11776              	.LVL1324:
 11777 0349 0F1F8000 		.p2align 4,,10
 11777      000000
 11778              		.p2align 3
 11779              	.L1043:
3554:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 11780              		.loc 1 3554 26 view .LVU3613
 11781              	.LBE399:
 11782              	.LBB405:
3629:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 1);
 11783              		.loc 1 3629 13 is_stmt 1 view .LVU3614
3629:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 1);
 11784              		.loc 1 3629 69 is_stmt 0 view .LVU3615
 11785 0350 D1EA     		shrl	%edx
3630:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 11786              		.loc 1 3630 65 view .LVU3616
 11787 0352 D1E8     		shrl	%eax
3629:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 1);
 11788              		.loc 1 3629 34 view .LVU3617
 11789 0354 4189D2   		movl	%edx, %r10d
 11790 0357 8B542424 		movl	36(%rsp), %edx
3630:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 11791              		.loc 1 3630 23 view .LVU3618
 11792 035b 4801F0   		addq	%rsi, %rax
3629:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_size_t)((final_width - 1) >> 1);
 11793              		.loc 1 3629 23 view .LVU3619
 11794 035e 4901F2   		addq	%rsi, %r10
 11795              	.LVL1325:
3630:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 11796              		.loc 1 3630 13 is_stmt 1 view .LVU3620
3631:fltk-1.3.4-1/png/pngrutil.c ****             int s_start, s_end, s_inc;
 11797              		.loc 1 3631 13 view .LVU3621
3632:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
 11798              		.loc 1 3632 13 view .LVU3622
3633:fltk-1.3.4-1/png/pngrutil.c ****             int jstop = png_pass_inc[pass];
 11799              		.loc 1 3633 13 view .LVU3623
3634:fltk-1.3.4-1/png/pngrutil.c **** 
 11800              		.loc 1 3634 13 view .LVU3624
3637:fltk-1.3.4-1/png/pngrutil.c ****             {
 11801              		.loc 1 3637 13 view .LVU3625
 11802 0361 418D7001 		leal	1(%r8), %esi
 11803              	.LVL1326:
3637:fltk-1.3.4-1/png/pngrutil.c ****             {
 11804              		.loc 1 3637 13 is_stmt 0 view .LVU3626
 11805 0365 83C201   		addl	$1, %edx
3637:fltk-1.3.4-1/png/pngrutil.c ****             {
 11806              		.loc 1 3637 16 view .LVU3627
 11807 0368 81E10000 		andl	$65536, %ecx
 11807      0100
 11808              	.LVL1327:
3637:fltk-1.3.4-1/png/pngrutil.c ****             {
 11809              		.loc 1 3637 16 view .LVU3628
 11810 036e 0F84D901 		je	.L1065
 11810      0000
3639:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 1) & 0x01) << 2);
 11811              		.loc 1 3639 16 is_stmt 1 view .LVU3629
3639:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 1) & 0x01) << 2);
 11812              		.loc 1 3639 62 is_stmt 0 view .LVU3630
 11813 0374 448D2CB5 		leal	0(,%rsi,4), %r13d
 11813      00000000 
3640:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 4;
 11814              		.loc 1 3640 58 view .LVU3631
 11815 037c C1E202   		sall	$2, %edx
3643:fltk-1.3.4-1/png/pngrutil.c ****             }
 11816              		.loc 1 3643 22 view .LVU3632
 11817 037f 41BCFCFF 		movl	$-4, %r12d
 11817      FFFF
3642:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = -4;
 11818              		.loc 1 3642 22 view .LVU3633
 11819 0385 4531C9   		xorl	%r9d, %r9d
3639:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 1) & 0x01) << 2);
 11820              		.loc 1 3639 23 view .LVU3634
 11821 0388 4183E504 		andl	$4, %r13d
 11822              	.LVL1328:
3640:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 4;
 11823              		.loc 1 3640 16 is_stmt 1 view .LVU3635
3640:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 4;
 11824              		.loc 1 3640 23 is_stmt 0 view .LVU3636
 11825 038c 83E204   		andl	$4, %edx
 11826              	.LVL1329:
3641:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 0;
 11827              		.loc 1 3641 16 is_stmt 1 view .LVU3637
3642:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = -4;
 11828              		.loc 1 3642 16 view .LVU3638
3643:fltk-1.3.4-1/png/pngrutil.c ****             }
 11829              		.loc 1 3643 16 view .LVU3639
3641:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 0;
 11830              		.loc 1 3641 24 is_stmt 0 view .LVU3640
 11831 038f 41BE0400 		movl	$4, %r14d
 11831      0000
 11832              	.LVL1330:
 11833              	.L1066:
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11834              		.loc 1 3656 13 is_stmt 1 view .LVU3641
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11835              		.loc 1 3656 25 view .LVU3642
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11836              		.loc 1 3656 13 is_stmt 0 view .LVU3643
 11837 0395 4585C0   		testl	%r8d, %r8d
 11838 0398 0F840BFE 		je	.L1047
 11838      FFFF
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11839              		.loc 1 3656 20 view .LVU3644
 11840 039e 4531FF   		xorl	%r15d, %r15d
 11841              	.LBB406:
 11842              	.LBB407:
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11843              		.loc 1 3663 57 view .LVU3645
 11844 03a1 BD040000 		movl	$4, %ebp
 11844      00
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11845              		.loc 1 3663 51 view .LVU3646
 11846 03a6 41BB0F0F 		movl	$3855, %r11d
 11846      0000
 11847              	.LVL1331:
 11848 03ac 0F1F4000 		.p2align 4,,10
 11849              		.p2align 3
 11850              	.L1074:
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11851              		.loc 1 3663 51 view .LVU3647
 11852              	.LBE407:
3658:fltk-1.3.4-1/png/pngrutil.c ****                int j;
 11853              		.loc 1 3658 16 is_stmt 1 view .LVU3648
3658:fltk-1.3.4-1/png/pngrutil.c ****                int j;
 11854              		.loc 1 3658 41 is_stmt 0 view .LVU3649
 11855 03b0 450FB602 		movzbl	(%r10), %r8d
3658:fltk-1.3.4-1/png/pngrutil.c ****                int j;
 11856              		.loc 1 3658 45 view .LVU3650
 11857 03b4 4489E9   		movl	%r13d, %ecx
 11858 03b7 41D3F8   		sarl	%cl, %r8d
3658:fltk-1.3.4-1/png/pngrutil.c ****                int j;
 11859              		.loc 1 3658 25 view .LVU3651
 11860 03ba 4183E00F 		andl	$15, %r8d
 11861              	.LVL1332:
3659:fltk-1.3.4-1/png/pngrutil.c **** 
 11862              		.loc 1 3659 16 is_stmt 1 view .LVU3652
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11863              		.loc 1 3661 16 view .LVU3653
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11864              		.loc 1 3661 28 view .LVU3654
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11865              		.loc 1 3661 16 is_stmt 0 view .LVU3655
 11866 03be 85DB     		testl	%ebx, %ebx
 11867 03c0 7E4D     		jle	.L1068
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11868              		.loc 1 3661 23 view .LVU3656
 11869 03c2 4C895424 		movq	%r10, 8(%rsp)
 11869      08
 11870 03c7 450FB6C0 		movzbl	%r8b, %r8d
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11871              		.loc 1 3661 23 view .LVU3657
 11872 03cb 31FF     		xorl	%edi, %edi
 11873 03cd EB0B     		jmp	.L1071
 11874              	.LVL1333:
 11875 03cf 90       		.p2align 4,,10
 11876              		.p2align 3
 11877              	.L1069:
 11878              	.LBB408:
3674:fltk-1.3.4-1/png/pngrutil.c ****                }
 11879              		.loc 1 3674 22 is_stmt 1 view .LVU3658
 11880              	.LBE408:
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11881              		.loc 1 3661 40 is_stmt 0 view .LVU3659
 11882 03d0 83C701   		addl	$1, %edi
 11883              	.LVL1334:
 11884              	.LBB409:
3674:fltk-1.3.4-1/png/pngrutil.c ****                }
 11885              		.loc 1 3674 29 view .LVU3660
 11886 03d3 4401E2   		addl	%r12d, %edx
 11887              	.LVL1335:
3674:fltk-1.3.4-1/png/pngrutil.c ****                }
 11888              		.loc 1 3674 29 view .LVU3661
 11889              	.LBE409:
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11890              		.loc 1 3661 39 is_stmt 1 view .LVU3662
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11891              		.loc 1 3661 28 view .LVU3663
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11892              		.loc 1 3661 16 is_stmt 0 view .LVU3664
 11893 03d6 39FB     		cmpl	%edi, %ebx
 11894 03d8 7430     		je	.L1127
 11895              	.LVL1336:
 11896              	.L1071:
 11897              	.LBB410:
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11898              		.loc 1 3663 19 is_stmt 1 view .LVU3665
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11899              		.loc 1 3663 57 is_stmt 0 view .LVU3666
 11900 03da 89E9     		movl	%ebp, %ecx
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11901              		.loc 1 3663 51 view .LVU3667
 11902 03dc 4489DE   		movl	%r11d, %esi
3664:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11903              		.loc 1 3664 28 view .LVU3668
 11904 03df 4589C2   		movl	%r8d, %r10d
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11905              		.loc 1 3663 57 view .LVU3669
 11906 03e2 29D1     		subl	%edx, %ecx
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11907              		.loc 1 3663 51 view .LVU3670
 11908 03e4 D3FE     		sarl	%cl, %esi
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11909              		.loc 1 3663 38 view .LVU3671
 11910 03e6 0FB608   		movzbl	(%rax), %ecx
3663:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 11911              		.loc 1 3663 42 view .LVU3672
 11912 03e9 21CE     		andl	%ecx, %esi
 11913              	.LVL1337:
3664:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11914              		.loc 1 3664 19 is_stmt 1 view .LVU3673
3665:fltk-1.3.4-1/png/pngrutil.c **** 
 11915              		.loc 1 3665 19 view .LVU3674
3664:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11916              		.loc 1 3664 28 is_stmt 0 view .LVU3675
 11917 03eb 89D1     		movl	%edx, %ecx
 11918 03ed 41D3E2   		sall	%cl, %r10d
 11919              	.LVL1338:
3664:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11920              		.loc 1 3664 28 view .LVU3676
 11921 03f0 4489D1   		movl	%r10d, %ecx
3664:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 11922              		.loc 1 3664 23 view .LVU3677
 11923 03f3 09F1     		orl	%esi, %ecx
3665:fltk-1.3.4-1/png/pngrutil.c **** 
 11924              		.loc 1 3665 25 view .LVU3678
 11925 03f5 8808     		movb	%cl, (%rax)
3667:fltk-1.3.4-1/png/pngrutil.c ****                   {
 11926              		.loc 1 3667 19 is_stmt 1 view .LVU3679
3667:fltk-1.3.4-1/png/pngrutil.c ****                   {
 11927              		.loc 1 3667 22 is_stmt 0 view .LVU3680
 11928 03f7 4139D1   		cmpl	%edx, %r9d
 11929 03fa 75D4     		jne	.L1069
3669:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 11930              		.loc 1 3669 22 is_stmt 1 view .LVU3681
 11931              	.LVL1339:
3670:fltk-1.3.4-1/png/pngrutil.c ****                   }
 11932              		.loc 1 3670 22 view .LVU3682
 11933              	.LBE410:
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11934              		.loc 1 3661 40 is_stmt 0 view .LVU3683
 11935 03fc 83C701   		addl	$1, %edi
 11936              	.LVL1340:
 11937              	.LBB411:
3670:fltk-1.3.4-1/png/pngrutil.c ****                   }
 11938              		.loc 1 3670 24 view .LVU3684
 11939 03ff 4883E801 		subq	$1, %rax
 11940              	.LVL1341:
3669:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 11941              		.loc 1 3669 29 view .LVU3685
 11942 0403 4489F2   		movl	%r14d, %edx
 11943              	.LVL1342:
3669:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 11944              		.loc 1 3669 29 view .LVU3686
 11945              	.LBE411:
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11946              		.loc 1 3661 39 is_stmt 1 view .LVU3687
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11947              		.loc 1 3661 28 view .LVU3688
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11948              		.loc 1 3661 16 is_stmt 0 view .LVU3689
 11949 0406 39FB     		cmpl	%edi, %ebx
 11950 0408 75D0     		jne	.L1071
 11951              	.LVL1343:
 11952              	.L1127:
3661:fltk-1.3.4-1/png/pngrutil.c ****                {
 11953              		.loc 1 3661 16 view .LVU3690
 11954 040a 4C8B5424 		movq	8(%rsp), %r10
 11954      08
 11955              	.LVL1344:
 11956              	.L1068:
3677:fltk-1.3.4-1/png/pngrutil.c ****                {
 11957              		.loc 1 3677 16 is_stmt 1 view .LVU3691
3677:fltk-1.3.4-1/png/pngrutil.c ****                {
 11958              		.loc 1 3677 19 is_stmt 0 view .LVU3692
 11959 040f 4539E9   		cmpl	%r13d, %r9d
 11960 0412 741C     		je	.L1128
3684:fltk-1.3.4-1/png/pngrutil.c ****             }
 11961              		.loc 1 3684 19 is_stmt 1 view .LVU3693
3684:fltk-1.3.4-1/png/pngrutil.c ****             }
 11962              		.loc 1 3684 26 is_stmt 0 view .LVU3694
 11963 0414 4501E5   		addl	%r12d, %r13d
 11964              	.LVL1345:
 11965              	.L1073:
3684:fltk-1.3.4-1/png/pngrutil.c ****             }
 11966              		.loc 1 3684 26 view .LVU3695
 11967              	.LBE406:
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11968              		.loc 1 3656 46 is_stmt 1 discriminator 2 view .LVU3696
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11969              		.loc 1 3656 13 is_stmt 0 discriminator 2 view .LVU3697
 11970 0417 488B3C24 		movq	(%rsp), %rdi
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11971              		.loc 1 3656 47 discriminator 2 view .LVU3698
 11972 041b 4183C701 		addl	$1, %r15d
 11973              	.LVL1346:
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11974              		.loc 1 3656 25 is_stmt 1 discriminator 2 view .LVU3699
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11975              		.loc 1 3656 13 is_stmt 0 discriminator 2 view .LVU3700
 11976 041f 44393F   		cmpl	%r15d, (%rdi)
 11977 0422 778C     		ja	.L1074
3656:fltk-1.3.4-1/png/pngrutil.c ****             {
 11978              		.loc 1 3656 13 discriminator 2 view .LVU3701
 11979 0424 E935FDFF 		jmp	.L1120
 11979      FF
 11980              	.LVL1347:
 11981 0429 0F1F8000 		.p2align 4,,10
 11981      000000
 11982              		.p2align 3
 11983              	.L1128:
 11984              	.LBB412:
3679:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 11985              		.loc 1 3679 19 is_stmt 1 view .LVU3702
3680:fltk-1.3.4-1/png/pngrutil.c ****                }
 11986              		.loc 1 3680 19 view .LVU3703
3680:fltk-1.3.4-1/png/pngrutil.c ****                }
 11987              		.loc 1 3680 21 is_stmt 0 view .LVU3704
 11988 0430 4983EA01 		subq	$1, %r10
 11989              	.LVL1348:
3679:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 11990              		.loc 1 3679 26 view .LVU3705
 11991 0434 4589F5   		movl	%r14d, %r13d
 11992 0437 EBDE     		jmp	.L1073
 11993              	.LVL1349:
 11994 0439 0F1F8000 		.p2align 4,,10
 11994      000000
 11995              		.p2align 3
 11996              	.L1042:
3679:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 11997              		.loc 1 3679 26 view .LVU3706
 11998              	.LBE412:
 11999              	.LBE405:
 12000              	.LBB413:
3566:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_uint_32)((final_width - 1) >> 2);
 12001              		.loc 1 3566 13 is_stmt 1 view .LVU3707
3566:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_uint_32)((final_width - 1) >> 2);
 12002              		.loc 1 3566 70 is_stmt 0 view .LVU3708
 12003 0440 C1EA02   		shrl	$2, %edx
3567:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 12004              		.loc 1 3567 66 view .LVU3709
 12005 0443 C1E802   		shrl	$2, %eax
3566:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_uint_32)((final_width - 1) >> 2);
 12006              		.loc 1 3566 34 view .LVU3710
 12007 0446 4189D3   		movl	%edx, %r11d
 12008 0449 8B542424 		movl	36(%rsp), %edx
3567:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 12009              		.loc 1 3567 23 view .LVU3711
 12010 044d 4801F0   		addq	%rsi, %rax
3566:fltk-1.3.4-1/png/pngrutil.c ****             png_bytep dp = row + (png_uint_32)((final_width - 1) >> 2);
 12011              		.loc 1 3566 23 view .LVU3712
 12012 0450 4901F3   		addq	%rsi, %r11
 12013              	.LVL1350:
3567:fltk-1.3.4-1/png/pngrutil.c ****             int sshift, dshift;
 12014              		.loc 1 3567 13 is_stmt 1 view .LVU3713
3568:fltk-1.3.4-1/png/pngrutil.c ****             int s_start, s_end, s_inc;
 12015              		.loc 1 3568 13 view .LVU3714
3569:fltk-1.3.4-1/png/pngrutil.c ****             int jstop = png_pass_inc[pass];
 12016              		.loc 1 3569 13 view .LVU3715
3570:fltk-1.3.4-1/png/pngrutil.c ****             png_uint_32 i;
 12017              		.loc 1 3570 13 view .LVU3716
3571:fltk-1.3.4-1/png/pngrutil.c **** 
 12018              		.loc 1 3571 13 view .LVU3717
3574:fltk-1.3.4-1/png/pngrutil.c ****             {
 12019              		.loc 1 3574 13 view .LVU3718
 12020 0453 418D7003 		leal	3(%r8), %esi
 12021              	.LVL1351:
3574:fltk-1.3.4-1/png/pngrutil.c ****             {
 12022              		.loc 1 3574 13 is_stmt 0 view .LVU3719
 12023 0457 83C203   		addl	$3, %edx
3574:fltk-1.3.4-1/png/pngrutil.c ****             {
 12024              		.loc 1 3574 16 view .LVU3720
 12025 045a 81E10000 		andl	$65536, %ecx
 12025      0100
 12026              	.LVL1352:
3574:fltk-1.3.4-1/png/pngrutil.c ****             {
 12027              		.loc 1 3574 16 view .LVU3721
 12028 0460 0F84C300 		je	.L1056
 12028      0000
3576:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 3) & 0x03) << 1);
 12029              		.loc 1 3576 16 is_stmt 1 view .LVU3722
3576:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 3) & 0x03) << 1);
 12030              		.loc 1 3576 62 is_stmt 0 view .LVU3723
 12031 0466 448D2436 		leal	(%rsi,%rsi), %r12d
3577:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 6;
 12032              		.loc 1 3577 58 view .LVU3724
 12033 046a 01D2     		addl	%edx, %edx
3580:fltk-1.3.4-1/png/pngrutil.c ****             }
 12034              		.loc 1 3580 22 view .LVU3725
 12035 046c BDFEFFFF 		movl	$-2, %ebp
 12035      FF
3579:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = -2;
 12036              		.loc 1 3579 22 view .LVU3726
 12037 0471 4531C9   		xorl	%r9d, %r9d
3576:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)(((final_width + 3) & 0x03) << 1);
 12038              		.loc 1 3576 23 view .LVU3727
 12039 0474 4183E406 		andl	$6, %r12d
 12040              	.LVL1353:
3577:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 6;
 12041              		.loc 1 3577 16 is_stmt 1 view .LVU3728
3577:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 6;
 12042              		.loc 1 3577 23 is_stmt 0 view .LVU3729
 12043 0478 83E206   		andl	$6, %edx
 12044              	.LVL1354:
3578:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 0;
 12045              		.loc 1 3578 16 is_stmt 1 view .LVU3730
3579:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = -2;
 12046              		.loc 1 3579 16 view .LVU3731
3580:fltk-1.3.4-1/png/pngrutil.c ****             }
 12047              		.loc 1 3580 16 view .LVU3732
3578:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 0;
 12048              		.loc 1 3578 24 is_stmt 0 view .LVU3733
 12049 047b 41BD0600 		movl	$6, %r13d
 12049      0000
 12050              	.LVL1355:
 12051              	.L1057:
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12052              		.loc 1 3593 13 is_stmt 1 view .LVU3734
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12053              		.loc 1 3593 25 view .LVU3735
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12054              		.loc 1 3593 13 is_stmt 0 view .LVU3736
 12055 0481 4585C0   		testl	%r8d, %r8d
 12056 0484 0F841FFD 		je	.L1047
 12056      FFFF
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12057              		.loc 1 3593 20 view .LVU3737
 12058 048a 4531FF   		xorl	%r15d, %r15d
 12059              	.LBB414:
 12060              	.LBB415:
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12061              		.loc 1 3601 58 view .LVU3738
 12062 048d 41BE0600 		movl	$6, %r14d
 12062      0000
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12063              		.loc 1 3601 52 view .LVU3739
 12064 0493 41BA3F3F 		movl	$16191, %r10d
 12064      0000
 12065              	.LVL1356:
 12066 0499 0F1F8000 		.p2align 4,,10
 12066      000000
 12067              		.p2align 3
 12068              	.L1064:
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12069              		.loc 1 3601 52 view .LVU3740
 12070              	.LBE415:
3595:fltk-1.3.4-1/png/pngrutil.c ****                int j;
 12071              		.loc 1 3595 16 is_stmt 1 view .LVU3741
3596:fltk-1.3.4-1/png/pngrutil.c **** 
 12072              		.loc 1 3596 16 view .LVU3742
3598:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 12073              		.loc 1 3598 16 view .LVU3743
3598:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 12074              		.loc 1 3598 32 is_stmt 0 view .LVU3744
 12075 04a0 450FB603 		movzbl	(%r11), %r8d
3598:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 12076              		.loc 1 3598 36 view .LVU3745
 12077 04a4 4489E1   		movl	%r12d, %ecx
 12078 04a7 41D3F8   		sarl	%cl, %r8d
3598:fltk-1.3.4-1/png/pngrutil.c ****                for (j = 0; j < jstop; j++)
 12079              		.loc 1 3598 18 view .LVU3746
 12080 04aa 4183E003 		andl	$3, %r8d
 12081              	.LVL1357:
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12082              		.loc 1 3599 16 is_stmt 1 view .LVU3747
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12083              		.loc 1 3599 28 view .LVU3748
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12084              		.loc 1 3599 16 is_stmt 0 view .LVU3749
 12085 04ae 85DB     		testl	%ebx, %ebx
 12086 04b0 7E4D     		jle	.L1058
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12087              		.loc 1 3599 23 view .LVU3750
 12088 04b2 4C895C24 		movq	%r11, 8(%rsp)
 12088      08
 12089 04b7 450FB6C0 		movzbl	%r8b, %r8d
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12090              		.loc 1 3599 23 view .LVU3751
 12091 04bb 31FF     		xorl	%edi, %edi
 12092 04bd EB0A     		jmp	.L1061
 12093              	.LVL1358:
 12094 04bf 90       		.p2align 4,,10
 12095              		.p2align 3
 12096              	.L1059:
 12097              	.LBB416:
3612:fltk-1.3.4-1/png/pngrutil.c ****                }
 12098              		.loc 1 3612 22 is_stmt 1 view .LVU3752
 12099              	.LBE416:
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12100              		.loc 1 3599 40 is_stmt 0 view .LVU3753
 12101 04c0 83C701   		addl	$1, %edi
 12102              	.LVL1359:
 12103              	.LBB417:
3612:fltk-1.3.4-1/png/pngrutil.c ****                }
 12104              		.loc 1 3612 29 view .LVU3754
 12105 04c3 01EA     		addl	%ebp, %edx
 12106              	.LVL1360:
3612:fltk-1.3.4-1/png/pngrutil.c ****                }
 12107              		.loc 1 3612 29 view .LVU3755
 12108              	.LBE417:
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12109              		.loc 1 3599 39 is_stmt 1 view .LVU3756
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12110              		.loc 1 3599 28 view .LVU3757
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12111              		.loc 1 3599 16 is_stmt 0 view .LVU3758
 12112 04c5 39FB     		cmpl	%edi, %ebx
 12113 04c7 7431     		je	.L1129
 12114              	.LVL1361:
 12115              	.L1061:
 12116              	.LBB418:
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12117              		.loc 1 3601 19 is_stmt 1 view .LVU3759
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12118              		.loc 1 3601 58 is_stmt 0 view .LVU3760
 12119 04c9 4489F1   		movl	%r14d, %ecx
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12120              		.loc 1 3601 52 view .LVU3761
 12121 04cc 4489D6   		movl	%r10d, %esi
3602:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 12122              		.loc 1 3602 28 view .LVU3762
 12123 04cf 4589C3   		movl	%r8d, %r11d
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12124              		.loc 1 3601 58 view .LVU3763
 12125 04d2 29D1     		subl	%edx, %ecx
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12126              		.loc 1 3601 52 view .LVU3764
 12127 04d4 D3FE     		sarl	%cl, %esi
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12128              		.loc 1 3601 38 view .LVU3765
 12129 04d6 0FB608   		movzbl	(%rax), %ecx
3601:fltk-1.3.4-1/png/pngrutil.c ****                   tmp |= v << dshift;
 12130              		.loc 1 3601 42 view .LVU3766
 12131 04d9 21CE     		andl	%ecx, %esi
 12132              	.LVL1362:
3602:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 12133              		.loc 1 3602 19 is_stmt 1 view .LVU3767
3603:fltk-1.3.4-1/png/pngrutil.c **** 
 12134              		.loc 1 3603 19 view .LVU3768
3602:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 12135              		.loc 1 3602 28 is_stmt 0 view .LVU3769
 12136 04db 89D1     		movl	%edx, %ecx
 12137 04dd 41D3E3   		sall	%cl, %r11d
 12138              	.LVL1363:
3602:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 12139              		.loc 1 3602 28 view .LVU3770
 12140 04e0 4489D9   		movl	%r11d, %ecx
3602:fltk-1.3.4-1/png/pngrutil.c ****                   *dp = (png_byte)(tmp & 0xff);
 12141              		.loc 1 3602 23 view .LVU3771
 12142 04e3 09F1     		orl	%esi, %ecx
3603:fltk-1.3.4-1/png/pngrutil.c **** 
 12143              		.loc 1 3603 25 view .LVU3772
 12144 04e5 8808     		movb	%cl, (%rax)
3605:fltk-1.3.4-1/png/pngrutil.c ****                   {
 12145              		.loc 1 3605 19 is_stmt 1 view .LVU3773
3605:fltk-1.3.4-1/png/pngrutil.c ****                   {
 12146              		.loc 1 3605 22 is_stmt 0 view .LVU3774
 12147 04e7 4139D1   		cmpl	%edx, %r9d
 12148 04ea 75D4     		jne	.L1059
3607:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 12149              		.loc 1 3607 22 is_stmt 1 view .LVU3775
 12150              	.LVL1364:
3608:fltk-1.3.4-1/png/pngrutil.c ****                   }
 12151              		.loc 1 3608 22 view .LVU3776
 12152              	.LBE418:
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12153              		.loc 1 3599 40 is_stmt 0 view .LVU3777
 12154 04ec 83C701   		addl	$1, %edi
 12155              	.LVL1365:
 12156              	.LBB419:
3608:fltk-1.3.4-1/png/pngrutil.c ****                   }
 12157              		.loc 1 3608 24 view .LVU3778
 12158 04ef 4883E801 		subq	$1, %rax
 12159              	.LVL1366:
3607:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 12160              		.loc 1 3607 29 view .LVU3779
 12161 04f3 4489EA   		movl	%r13d, %edx
 12162              	.LVL1367:
3607:fltk-1.3.4-1/png/pngrutil.c ****                      dp--;
 12163              		.loc 1 3607 29 view .LVU3780
 12164              	.LBE419:
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12165              		.loc 1 3599 39 is_stmt 1 view .LVU3781
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12166              		.loc 1 3599 28 view .LVU3782
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12167              		.loc 1 3599 16 is_stmt 0 view .LVU3783
 12168 04f6 39FB     		cmpl	%edi, %ebx
 12169 04f8 75CF     		jne	.L1061
 12170              	.LVL1368:
 12171              	.L1129:
3599:fltk-1.3.4-1/png/pngrutil.c ****                {
 12172              		.loc 1 3599 16 view .LVU3784
 12173 04fa 4C8B5C24 		movq	8(%rsp), %r11
 12173      08
 12174              	.LVL1369:
 12175              	.L1058:
3615:fltk-1.3.4-1/png/pngrutil.c ****                {
 12176              		.loc 1 3615 16 is_stmt 1 view .LVU3785
3615:fltk-1.3.4-1/png/pngrutil.c ****                {
 12177              		.loc 1 3615 19 is_stmt 0 view .LVU3786
 12178 04ff 4539E1   		cmpl	%r12d, %r9d
 12179 0502 741C     		je	.L1130
3622:fltk-1.3.4-1/png/pngrutil.c ****             }
 12180              		.loc 1 3622 19 is_stmt 1 view .LVU3787
3622:fltk-1.3.4-1/png/pngrutil.c ****             }
 12181              		.loc 1 3622 26 is_stmt 0 view .LVU3788
 12182 0504 4101EC   		addl	%ebp, %r12d
 12183              	.LVL1370:
 12184              	.L1063:
3622:fltk-1.3.4-1/png/pngrutil.c ****             }
 12185              		.loc 1 3622 26 view .LVU3789
 12186              	.LBE414:
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12187              		.loc 1 3593 46 is_stmt 1 discriminator 2 view .LVU3790
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12188              		.loc 1 3593 13 is_stmt 0 discriminator 2 view .LVU3791
 12189 0507 488B3C24 		movq	(%rsp), %rdi
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12190              		.loc 1 3593 47 discriminator 2 view .LVU3792
 12191 050b 4183C701 		addl	$1, %r15d
 12192              	.LVL1371:
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12193              		.loc 1 3593 25 is_stmt 1 discriminator 2 view .LVU3793
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12194              		.loc 1 3593 13 is_stmt 0 discriminator 2 view .LVU3794
 12195 050f 44393F   		cmpl	%r15d, (%rdi)
 12196 0512 778C     		ja	.L1064
3593:fltk-1.3.4-1/png/pngrutil.c ****             {
 12197              		.loc 1 3593 13 discriminator 2 view .LVU3795
 12198 0514 E945FCFF 		jmp	.L1120
 12198      FF
 12199              	.LVL1372:
 12200 0519 0F1F8000 		.p2align 4,,10
 12200      000000
 12201              		.p2align 3
 12202              	.L1130:
 12203              	.LBB420:
3617:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 12204              		.loc 1 3617 19 is_stmt 1 view .LVU3796
3618:fltk-1.3.4-1/png/pngrutil.c ****                }
 12205              		.loc 1 3618 19 view .LVU3797
3618:fltk-1.3.4-1/png/pngrutil.c ****                }
 12206              		.loc 1 3618 21 is_stmt 0 view .LVU3798
 12207 0520 4983EB01 		subq	$1, %r11
 12208              	.LVL1373:
3617:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 12209              		.loc 1 3617 26 view .LVU3799
 12210 0524 4589EC   		movl	%r13d, %r12d
 12211 0527 EBDE     		jmp	.L1063
 12212              	.LVL1374:
 12213              	.L1056:
3617:fltk-1.3.4-1/png/pngrutil.c ****                   sp--;
 12214              		.loc 1 3617 26 view .LVU3800
 12215              	.LBE420:
3586:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((3 - ((final_width + 3) & 0x03)) << 1);
 12216              		.loc 1 3586 16 is_stmt 1 view .LVU3801
3586:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((3 - ((final_width + 3) & 0x03)) << 1);
 12217              		.loc 1 3586 34 is_stmt 0 view .LVU3802
 12218 0529 F7D6     		notl	%esi
3587:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
 12219              		.loc 1 3587 34 view .LVU3803
 12220 052b F7D2     		notl	%edx
3590:fltk-1.3.4-1/png/pngrutil.c ****             }
 12221              		.loc 1 3590 22 view .LVU3804
 12222 052d BD020000 		movl	$2, %ebp
 12222      00
3589:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = 2;
 12223              		.loc 1 3589 22 view .LVU3805
 12224 0532 41B90600 		movl	$6, %r9d
 12224      0000
3586:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((3 - ((final_width + 3) & 0x03)) << 1);
 12225              		.loc 1 3586 68 view .LVU3806
 12226 0538 448D2436 		leal	(%rsi,%rsi), %r12d
3587:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
 12227              		.loc 1 3587 64 view .LVU3807
 12228 053c 01D2     		addl	%edx, %edx
3588:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 6;
 12229              		.loc 1 3588 24 view .LVU3808
 12230 053e 4531ED   		xorl	%r13d, %r13d
3586:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((3 - ((final_width + 3) & 0x03)) << 1);
 12231              		.loc 1 3586 23 view .LVU3809
 12232 0541 4183E406 		andl	$6, %r12d
 12233              	.LVL1375:
3587:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
 12234              		.loc 1 3587 16 is_stmt 1 view .LVU3810
3587:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
 12235              		.loc 1 3587 23 is_stmt 0 view .LVU3811
 12236 0545 83E206   		andl	$6, %edx
 12237              	.LVL1376:
3588:fltk-1.3.4-1/png/pngrutil.c ****                s_end = 6;
 12238              		.loc 1 3588 16 is_stmt 1 view .LVU3812
3589:fltk-1.3.4-1/png/pngrutil.c ****                s_inc = 2;
 12239              		.loc 1 3589 16 view .LVU3813
3590:fltk-1.3.4-1/png/pngrutil.c ****             }
 12240              		.loc 1 3590 16 view .LVU3814
3590:fltk-1.3.4-1/png/pngrutil.c ****             }
 12241              		.loc 1 3590 16 is_stmt 0 view .LVU3815
 12242 0548 E934FFFF 		jmp	.L1057
 12242      FF
 12243              	.LVL1377:
 12244              	.L1065:
3590:fltk-1.3.4-1/png/pngrutil.c ****             }
 12245              		.loc 1 3590 16 view .LVU3816
 12246              	.LBE413:
 12247              	.LBB421:
3649:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((1 - ((final_width + 1) & 0x01)) << 2);
 12248              		.loc 1 3649 16 is_stmt 1 view .LVU3817
3649:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((1 - ((final_width + 1) & 0x01)) << 2);
 12249              		.loc 1 3649 25 is_stmt 0 view .LVU3818
 12250 054d 4531ED   		xorl	%r13d, %r13d
 12251 0550 83E601   		andl	$1, %esi
3653:fltk-1.3.4-1/png/pngrutil.c ****             }
 12252              		.loc 1 3653 22 view .LVU3819
 12253 0553 41BC0400 		movl	$4, %r12d
 12253      0000
 12254 0559 41B90400 		movl	$4, %r9d
 12254      0000
3649:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((1 - ((final_width + 1) & 0x01)) << 2);
 12255              		.loc 1 3649 25 view .LVU3820
 12256 055f 410F94C5 		sete	%r13b
3650:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
 12257              		.loc 1 3650 34 view .LVU3821
 12258 0563 83E201   		andl	$1, %edx
3653:fltk-1.3.4-1/png/pngrutil.c ****             }
 12259              		.loc 1 3653 22 view .LVU3822
 12260 0566 4531F6   		xorl	%r14d, %r14d
3649:fltk-1.3.4-1/png/pngrutil.c ****                dshift = (int)((1 - ((final_width + 1) & 0x01)) << 2);
 12261              		.loc 1 3649 25 view .LVU3823
 12262 0569 41C1E502 		sall	$2, %r13d
 12263              	.LVL1378:
3650:fltk-1.3.4-1/png/pngrutil.c ****                s_start = 0;
 12264              		.loc 1 3650 16 is_stmt 1 view .LVU3824
3653:fltk-1.3.4-1/png/pngrutil.c ****             }
 12265              		.loc 1 3653 22 is_stmt 0 view .LVU3825
 12266 056d 83FA01   		cmpl	$1, %edx
 12267 0570 19D2     		sbbl	%edx, %edx
 12268 0572 83E204   		andl	$4, %edx
 12269 0575 E91BFEFF 		jmp	.L1066
 12269      FF
 12270              	.LVL1379:
 12271              	.L1045:
3653:fltk-1.3.4-1/png/pngrutil.c ****             }
 12272              		.loc 1 3653 22 view .LVU3826
 12273              	.LBE421:
 12274              	.LBB422:
3526:fltk-1.3.4-1/png/pngrutil.c ****                 dshift = 7 - (int)((final_width + 7) & 0x07);
 12275              		.loc 1 3526 17 is_stmt 1 view .LVU3827
3526:fltk-1.3.4-1/png/pngrutil.c ****                 dshift = 7 - (int)((final_width + 7) & 0x07);
 12276              		.loc 1 3526 28 is_stmt 0 view .LVU3828
 12277 057a 41F7D4   		notl	%r12d
3527:fltk-1.3.4-1/png/pngrutil.c ****                 s_start = 0;
 12278              		.loc 1 3527 28 view .LVU3829
 12279 057d F7D0     		notl	%eax
3530:fltk-1.3.4-1/png/pngrutil.c ****             }
 12280              		.loc 1 3530 23 view .LVU3830
 12281 057f 41BB0100 		movl	$1, %r11d
 12281      0000
3528:fltk-1.3.4-1/png/pngrutil.c ****                 s_end = 7;
 12282              		.loc 1 3528 25 view .LVU3831
 12283 0585 4531ED   		xorl	%r13d, %r13d
3526:fltk-1.3.4-1/png/pngrutil.c ****                 dshift = 7 - (int)((final_width + 7) & 0x07);
 12284              		.loc 1 3526 24 view .LVU3832
 12285 0588 4183E407 		andl	$7, %r12d
 12286              	.LVL1380:
3527:fltk-1.3.4-1/png/pngrutil.c ****                 s_start = 0;
 12287              		.loc 1 3527 17 is_stmt 1 view .LVU3833
3527:fltk-1.3.4-1/png/pngrutil.c ****                 s_start = 0;
 12288              		.loc 1 3527 24 is_stmt 0 view .LVU3834
 12289 058c 83E007   		andl	$7, %eax
 12290              	.LVL1381:
3528:fltk-1.3.4-1/png/pngrutil.c ****                 s_end = 7;
 12291              		.loc 1 3528 17 is_stmt 1 view .LVU3835
3529:fltk-1.3.4-1/png/pngrutil.c ****                 s_inc = 1;
 12292              		.loc 1 3529 17 view .LVU3836
3530:fltk-1.3.4-1/png/pngrutil.c ****             }
 12293              		.loc 1 3530 17 view .LVU3837
3529:fltk-1.3.4-1/png/pngrutil.c ****                 s_inc = 1;
 12294              		.loc 1 3529 23 is_stmt 0 view .LVU3838
 12295 058f 41B90700 		movl	$7, %r9d
 12295      0000
 12296 0595 E901FDFF 		jmp	.L1046
 12296      FF
 12297              	.LVL1382:
 12298              	.L1124:
3529:fltk-1.3.4-1/png/pngrutil.c ****                 s_inc = 1;
 12299              		.loc 1 3529 23 view .LVU3839
 12300              	.LBE422:
 12301              	.LBE423:
3726:fltk-1.3.4-1/png/pngrutil.c **** #endif /* READ_INTERLACING */
 12302              		.loc 1 3726 1 view .LVU3840
 12303 059a E8000000 		call	__stack_chk_fail@PLT
 12303      00
 12304              	.LVL1383:
 12305              		.cfi_endproc
 12306              	.LFE80:
 12308              		.section	.text.png_read_filter_row,"ax",@progbits
 12309              		.p2align 4
 12310              		.globl	png_read_filter_row
 12312              	png_read_filter_row:
 12313              	.LVL1384:
 12314              	.LFB87:
3885:fltk-1.3.4-1/png/pngrutil.c **** 
3886:fltk-1.3.4-1/png/pngrutil.c **** static void
3887:fltk-1.3.4-1/png/pngrutil.c **** png_init_filter_functions(png_structrp pp)
3888:fltk-1.3.4-1/png/pngrutil.c ****    /* This function is called once for every PNG image (except for PNG images
3889:fltk-1.3.4-1/png/pngrutil.c ****     * that only use PNG_FILTER_VALUE_NONE for all rows) to set the
3890:fltk-1.3.4-1/png/pngrutil.c ****     * implementations required to reverse the filtering of PNG rows.  Reversing
3891:fltk-1.3.4-1/png/pngrutil.c ****     * the filter is the first transformation performed on the row data.  It is
3892:fltk-1.3.4-1/png/pngrutil.c ****     * performed in place, therefore an implementation can be selected based on
3893:fltk-1.3.4-1/png/pngrutil.c ****     * the image pixel format.  If the implementation depends on image width then
3894:fltk-1.3.4-1/png/pngrutil.c ****     * take care to ensure that it works correctly if the image is interlaced -
3895:fltk-1.3.4-1/png/pngrutil.c ****     * interlacing causes the actual row width to vary.
3896:fltk-1.3.4-1/png/pngrutil.c ****     */
3897:fltk-1.3.4-1/png/pngrutil.c **** {
3898:fltk-1.3.4-1/png/pngrutil.c ****    unsigned int bpp = (pp->pixel_depth + 7) >> 3;
3899:fltk-1.3.4-1/png/pngrutil.c **** 
3900:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_SUB-1] = png_read_filter_row_sub;
3901:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_UP-1] = png_read_filter_row_up;
3902:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_AVG-1] = png_read_filter_row_avg;
3903:fltk-1.3.4-1/png/pngrutil.c ****    if (bpp == 1)
3904:fltk-1.3.4-1/png/pngrutil.c ****       pp->read_filter[PNG_FILTER_VALUE_PAETH-1] =
3905:fltk-1.3.4-1/png/pngrutil.c ****          png_read_filter_row_paeth_1byte_pixel;
3906:fltk-1.3.4-1/png/pngrutil.c ****    else
3907:fltk-1.3.4-1/png/pngrutil.c ****       pp->read_filter[PNG_FILTER_VALUE_PAETH-1] =
3908:fltk-1.3.4-1/png/pngrutil.c ****          png_read_filter_row_paeth_multibyte_pixel;
3909:fltk-1.3.4-1/png/pngrutil.c **** 
3910:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_FILTER_OPTIMIZATIONS
3911:fltk-1.3.4-1/png/pngrutil.c ****    /* To use this define PNG_FILTER_OPTIMIZATIONS as the name of a function to
3912:fltk-1.3.4-1/png/pngrutil.c ****     * call to install hardware optimizations for the above functions; simply
3913:fltk-1.3.4-1/png/pngrutil.c ****     * replace whatever elements of the pp->read_filter[] array with a hardware
3914:fltk-1.3.4-1/png/pngrutil.c ****     * specific (or, for that matter, generic) optimization.
3915:fltk-1.3.4-1/png/pngrutil.c ****     *
3916:fltk-1.3.4-1/png/pngrutil.c ****     * To see an example of this examine what configure.ac does when
3917:fltk-1.3.4-1/png/pngrutil.c ****     * --enable-arm-neon is specified on the command line.
3918:fltk-1.3.4-1/png/pngrutil.c ****     */
3919:fltk-1.3.4-1/png/pngrutil.c ****    PNG_FILTER_OPTIMIZATIONS(pp, bpp);
3920:fltk-1.3.4-1/png/pngrutil.c **** #endif
3921:fltk-1.3.4-1/png/pngrutil.c **** }
3922:fltk-1.3.4-1/png/pngrutil.c **** 
3923:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
3924:fltk-1.3.4-1/png/pngrutil.c **** png_read_filter_row(png_structrp pp, png_row_infop row_info, png_bytep row,
3925:fltk-1.3.4-1/png/pngrutil.c ****    png_const_bytep prev_row, int filter)
3926:fltk-1.3.4-1/png/pngrutil.c **** {
 12315              		.loc 1 3926 1 is_stmt 1 view -0
 12316              		.cfi_startproc
 12317              		.loc 1 3926 1 is_stmt 0 view .LVU3842
 12318 0000 F30F1EFA 		endbr64
3927:fltk-1.3.4-1/png/pngrutil.c ****    /* OPTIMIZATION: DO NOT MODIFY THIS FUNCTION, instead #define
3928:fltk-1.3.4-1/png/pngrutil.c ****     * PNG_FILTER_OPTIMIZATIONS to a function that overrides the generic
3929:fltk-1.3.4-1/png/pngrutil.c ****     * implementations.  See png_init_filter_functions above.
3930:fltk-1.3.4-1/png/pngrutil.c ****     */
3931:fltk-1.3.4-1/png/pngrutil.c ****    if (filter > PNG_FILTER_VALUE_NONE && filter < PNG_FILTER_VALUE_LAST)
 12319              		.loc 1 3931 4 is_stmt 1 view .LVU3843
 12320              		.loc 1 3931 39 is_stmt 0 view .LVU3844
 12321 0004 4183E801 		subl	$1, %r8d
 12322              	.LVL1385:
3926:fltk-1.3.4-1/png/pngrutil.c ****    /* OPTIMIZATION: DO NOT MODIFY THIS FUNCTION, instead #define
 12323              		.loc 1 3926 1 view .LVU3845
 12324 0008 4989F1   		movq	%rsi, %r9
 12325 000b 4889D6   		movq	%rdx, %rsi
 12326              	.LVL1386:
3926:fltk-1.3.4-1/png/pngrutil.c ****    /* OPTIMIZATION: DO NOT MODIFY THIS FUNCTION, instead #define
 12327              		.loc 1 3926 1 view .LVU3846
 12328 000e 4889CA   		movq	%rcx, %rdx
 12329              	.LVL1387:
 12330              		.loc 1 3931 7 view .LVU3847
 12331 0011 4183F803 		cmpl	$3, %r8d
 12332 0015 7721     		ja	.L1131
3932:fltk-1.3.4-1/png/pngrutil.c ****    {
3933:fltk-1.3.4-1/png/pngrutil.c ****       if (pp->read_filter[0] == NULL)
 12333              		.loc 1 3933 7 is_stmt 1 view .LVU3848
 12334              		.loc 1 3933 10 is_stmt 0 view .LVU3849
 12335 0017 4883BFB8 		cmpq	$0, 1208(%rdi)
 12335      04000000 
 12336 001f 741F     		je	.L1135
3934:fltk-1.3.4-1/png/pngrutil.c ****          png_init_filter_functions(pp);
3935:fltk-1.3.4-1/png/pngrutil.c **** 
3936:fltk-1.3.4-1/png/pngrutil.c ****       pp->read_filter[filter-1](row_info, row, prev_row);
 12337              		.loc 1 3936 7 is_stmt 1 view .LVU3850
 12338              		.loc 1 3936 22 is_stmt 0 view .LVU3851
 12339 0021 4D63C0   		movslq	%r8d, %r8
 12340              		.loc 1 3936 7 view .LVU3852
 12341 0024 4A8B84C7 		movq	1208(%rdi,%r8,8), %rax
 12341      B8040000 
 12342 002c 4C89CF   		movq	%r9, %rdi
 12343              	.LVL1388:
 12344              		.loc 1 3936 7 view .LVU3853
 12345 002f FFE0     		jmp	*%rax
 12346              	.LVL1389:
 12347              		.p2align 4,,10
 12348 0031 0F1F8000 		.p2align 3
 12348      000000
 12349              	.L1131:
3937:fltk-1.3.4-1/png/pngrutil.c ****    }
3938:fltk-1.3.4-1/png/pngrutil.c **** }
 12350              		.loc 1 3938 1 view .LVU3854
 12351 0038 C3       		ret
 12352 0039 0F1F8000 		.p2align 4,,10
 12352      000000
 12353              		.p2align 3
 12354              	.L1135:
3934:fltk-1.3.4-1/png/pngrutil.c ****          png_init_filter_functions(pp);
 12355              		.loc 1 3934 10 is_stmt 1 view .LVU3855
 12356              	.LVL1390:
 12357              	.LBB424:
 12358              	.LBI424:
3887:fltk-1.3.4-1/png/pngrutil.c ****    /* This function is called once for every PNG image (except for PNG images
 12359              		.loc 1 3887 1 view .LVU3856
 12360              	.LBB425:
3898:fltk-1.3.4-1/png/pngrutil.c **** 
 12361              		.loc 1 3898 4 view .LVU3857
3898:fltk-1.3.4-1/png/pngrutil.c **** 
 12362              		.loc 1 3898 26 is_stmt 0 view .LVU3858
 12363 0040 0FB6877A 		movzbl	634(%rdi), %eax
 12363      020000
3900:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_UP-1] = png_read_filter_row_up;
 12364              		.loc 1 3900 44 view .LVU3859
 12365 0047 488D0D00 		leaq	png_read_filter_row_sub(%rip), %rcx
 12365      000000
 12366              	.LBE425:
 12367              	.LBE424:
3936:fltk-1.3.4-1/png/pngrutil.c ****    }
 12368              		.loc 1 3936 22 view .LVU3860
 12369 004e 4D63C0   		movslq	%r8d, %r8
 12370              	.LBB427:
 12371              	.LBB426:
3900:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_UP-1] = png_read_filter_row_up;
 12372              		.loc 1 3900 44 view .LVU3861
 12373 0051 48898FB8 		movq	%rcx, 1208(%rdi)
 12373      040000
3901:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_AVG-1] = png_read_filter_row_avg;
 12374              		.loc 1 3901 43 view .LVU3862
 12375 0058 488D0D00 		leaq	png_read_filter_row_up(%rip), %rcx
 12375      000000
3898:fltk-1.3.4-1/png/pngrutil.c **** 
 12376              		.loc 1 3898 40 view .LVU3863
 12377 005f 83C007   		addl	$7, %eax
3901:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_AVG-1] = png_read_filter_row_avg;
 12378              		.loc 1 3901 43 view .LVU3864
 12379 0062 48898FC0 		movq	%rcx, 1216(%rdi)
 12379      040000
3902:fltk-1.3.4-1/png/pngrutil.c ****    if (bpp == 1)
 12380              		.loc 1 3902 44 view .LVU3865
 12381 0069 488D0D00 		leaq	png_read_filter_row_avg(%rip), %rcx
 12381      000000
3898:fltk-1.3.4-1/png/pngrutil.c **** 
 12382              		.loc 1 3898 45 view .LVU3866
 12383 0070 C1F803   		sarl	$3, %eax
 12384              	.LVL1391:
3900:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_UP-1] = png_read_filter_row_up;
 12385              		.loc 1 3900 4 is_stmt 1 view .LVU3867
3901:fltk-1.3.4-1/png/pngrutil.c ****    pp->read_filter[PNG_FILTER_VALUE_AVG-1] = png_read_filter_row_avg;
 12386              		.loc 1 3901 4 view .LVU3868
3902:fltk-1.3.4-1/png/pngrutil.c ****    if (bpp == 1)
 12387              		.loc 1 3902 4 view .LVU3869
3902:fltk-1.3.4-1/png/pngrutil.c ****    if (bpp == 1)
 12388              		.loc 1 3902 44 is_stmt 0 view .LVU3870
 12389 0073 48898FC8 		movq	%rcx, 1224(%rdi)
 12389      040000
3903:fltk-1.3.4-1/png/pngrutil.c ****       pp->read_filter[PNG_FILTER_VALUE_PAETH-1] =
 12390              		.loc 1 3903 4 is_stmt 1 view .LVU3871
3904:fltk-1.3.4-1/png/pngrutil.c ****          png_read_filter_row_paeth_1byte_pixel;
 12391              		.loc 1 3904 49 is_stmt 0 view .LVU3872
 12392 007a 488D0D00 		leaq	png_read_filter_row_paeth_multibyte_pixel(%rip), %rcx
 12392      000000
 12393 0081 83F801   		cmpl	$1, %eax
 12394 0084 488D0500 		leaq	png_read_filter_row_paeth_1byte_pixel(%rip), %rax
 12394      000000
 12395              	.LVL1392:
3904:fltk-1.3.4-1/png/pngrutil.c ****          png_read_filter_row_paeth_1byte_pixel;
 12396              		.loc 1 3904 49 view .LVU3873
 12397 008b 480F45C1 		cmovne	%rcx, %rax
 12398 008f 488987D0 		movq	%rax, 1232(%rdi)
 12398      040000
 12399              	.LVL1393:
3904:fltk-1.3.4-1/png/pngrutil.c ****          png_read_filter_row_paeth_1byte_pixel;
 12400              		.loc 1 3904 49 view .LVU3874
 12401              	.LBE426:
 12402              	.LBE427:
3936:fltk-1.3.4-1/png/pngrutil.c ****    }
 12403              		.loc 1 3936 7 is_stmt 1 view .LVU3875
 12404 0096 4A8B84C7 		movq	1208(%rdi,%r8,8), %rax
 12404      B8040000 
 12405 009e 4C89CF   		movq	%r9, %rdi
 12406              	.LVL1394:
3936:fltk-1.3.4-1/png/pngrutil.c ****    }
 12407              		.loc 1 3936 7 is_stmt 0 view .LVU3876
 12408 00a1 FFE0     		jmp	*%rax
 12409              	.LVL1395:
3936:fltk-1.3.4-1/png/pngrutil.c ****    }
 12410              		.loc 1 3936 7 view .LVU3877
 12411              		.cfi_endproc
 12412              	.LFE87:
 12414              		.section	.rodata.png_read_IDAT_data.str1.1,"aMS",@progbits,1
 12415              	.LC53:
 12416 0000 4E6F7420 		.string	"Not enough image data"
 12416      656E6F75 
 12416      67682069 
 12416      6D616765 
 12416      20646174 
 12417              	.LC54:
 12418 0016 45787472 		.string	"Extra compressed data"
 12418      6120636F 
 12418      6D707265 
 12418      73736564 
 12418      20646174 
 12419              	.LC55:
 12420 002c 546F6F20 		.string	"Too much image data"
 12420      6D756368 
 12420      20696D61 
 12420      67652064 
 12420      61746100 
 12421              		.section	.text.png_read_IDAT_data,"ax",@progbits
 12422              		.p2align 4
 12423              		.globl	png_read_IDAT_data
 12425              	png_read_IDAT_data:
 12426              	.LVL1396:
 12427              	.LFB88:
3939:fltk-1.3.4-1/png/pngrutil.c **** 
3940:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_SEQUENTIAL_READ_SUPPORTED
3941:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
3942:fltk-1.3.4-1/png/pngrutil.c **** png_read_IDAT_data(png_structrp png_ptr, png_bytep output,
3943:fltk-1.3.4-1/png/pngrutil.c ****    png_alloc_size_t avail_out)
3944:fltk-1.3.4-1/png/pngrutil.c **** {
 12428              		.loc 1 3944 1 is_stmt 1 view -0
 12429              		.cfi_startproc
 12430              		.loc 1 3944 1 is_stmt 0 view .LVU3879
 12431 0000 F30F1EFA 		endbr64
 12432 0004 4157     		pushq	%r15
 12433              		.cfi_def_cfa_offset 16
 12434              		.cfi_offset 15, -16
 12435 0006 4989FF   		movq	%rdi, %r15
 12436 0009 4156     		pushq	%r14
 12437              		.cfi_def_cfa_offset 24
 12438              		.cfi_offset 14, -24
 12439 000b 4C8DB740 		leaq	320(%rdi), %r14
 12439      010000
 12440 0012 4155     		pushq	%r13
 12441              		.cfi_def_cfa_offset 32
 12442              		.cfi_offset 13, -32
 12443 0014 4154     		pushq	%r12
 12444              		.cfi_def_cfa_offset 40
 12445              		.cfi_offset 12, -40
 12446 0016 4989F4   		movq	%rsi, %r12
 12447 0019 55       		pushq	%rbp
 12448              		.cfi_def_cfa_offset 48
 12449              		.cfi_offset 6, -48
 12450              	.LBB428:
 12451              	.LBB429:
3945:fltk-1.3.4-1/png/pngrutil.c ****    /* Loop reading IDATs and decompressing the result into output[avail_out] */
3946:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->zstream.next_out = output;
3947:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->zstream.avail_out = 0; /* safety: set below */
3948:fltk-1.3.4-1/png/pngrutil.c **** 
3949:fltk-1.3.4-1/png/pngrutil.c ****    if (output == NULL)
3950:fltk-1.3.4-1/png/pngrutil.c ****       avail_out = 0;
3951:fltk-1.3.4-1/png/pngrutil.c **** 
3952:fltk-1.3.4-1/png/pngrutil.c ****    do
3953:fltk-1.3.4-1/png/pngrutil.c ****    {
3954:fltk-1.3.4-1/png/pngrutil.c ****       int ret;
3955:fltk-1.3.4-1/png/pngrutil.c ****       png_byte tmpbuf[PNG_INFLATE_BUF_SIZE];
3956:fltk-1.3.4-1/png/pngrutil.c **** 
3957:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->zstream.avail_in == 0)
3958:fltk-1.3.4-1/png/pngrutil.c ****       {
3959:fltk-1.3.4-1/png/pngrutil.c ****          uInt avail_in;
3960:fltk-1.3.4-1/png/pngrutil.c ****          png_bytep buffer;
3961:fltk-1.3.4-1/png/pngrutil.c **** 
3962:fltk-1.3.4-1/png/pngrutil.c ****          while (png_ptr->idat_size == 0)
3963:fltk-1.3.4-1/png/pngrutil.c ****          {
3964:fltk-1.3.4-1/png/pngrutil.c ****             png_crc_finish(png_ptr, 0);
3965:fltk-1.3.4-1/png/pngrutil.c **** 
3966:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->idat_size = png_read_chunk_header(png_ptr);
3967:fltk-1.3.4-1/png/pngrutil.c ****             /* This is an error even in the 'check' case because the code just
3968:fltk-1.3.4-1/png/pngrutil.c ****              * consumed a non-IDAT header.
3969:fltk-1.3.4-1/png/pngrutil.c ****              */
3970:fltk-1.3.4-1/png/pngrutil.c ****             if (png_ptr->chunk_name != png_IDAT)
3971:fltk-1.3.4-1/png/pngrutil.c ****                png_error(png_ptr, "Not enough image data");
3972:fltk-1.3.4-1/png/pngrutil.c ****          }
3973:fltk-1.3.4-1/png/pngrutil.c **** 
3974:fltk-1.3.4-1/png/pngrutil.c ****          avail_in = png_ptr->IDAT_read_size;
3975:fltk-1.3.4-1/png/pngrutil.c **** 
3976:fltk-1.3.4-1/png/pngrutil.c ****          if (avail_in > png_ptr->idat_size)
3977:fltk-1.3.4-1/png/pngrutil.c ****             avail_in = (uInt)png_ptr->idat_size;
3978:fltk-1.3.4-1/png/pngrutil.c **** 
3979:fltk-1.3.4-1/png/pngrutil.c ****          /* A PNG with a gradually increasing IDAT size will defeat this attempt
3980:fltk-1.3.4-1/png/pngrutil.c ****           * to minimize memory usage by causing lots of re-allocs, but
3981:fltk-1.3.4-1/png/pngrutil.c ****           * realistically doing IDAT_read_size re-allocs is not likely to be a
3982:fltk-1.3.4-1/png/pngrutil.c ****           * big problem.
3983:fltk-1.3.4-1/png/pngrutil.c ****           */
3984:fltk-1.3.4-1/png/pngrutil.c ****          buffer = png_read_buffer(png_ptr, avail_in, 0/*error*/);
3985:fltk-1.3.4-1/png/pngrutil.c **** 
3986:fltk-1.3.4-1/png/pngrutil.c ****          png_crc_read(png_ptr, buffer, avail_in);
3987:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->idat_size -= avail_in;
3988:fltk-1.3.4-1/png/pngrutil.c **** 
3989:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_in = buffer;
3990:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail_in;
3991:fltk-1.3.4-1/png/pngrutil.c ****       }
3992:fltk-1.3.4-1/png/pngrutil.c **** 
3993:fltk-1.3.4-1/png/pngrutil.c ****       /* And set up the output side. */
3994:fltk-1.3.4-1/png/pngrutil.c ****       if (output != NULL) /* standard read */
3995:fltk-1.3.4-1/png/pngrutil.c ****       {
3996:fltk-1.3.4-1/png/pngrutil.c ****          uInt out = ZLIB_IO_MAX;
3997:fltk-1.3.4-1/png/pngrutil.c **** 
3998:fltk-1.3.4-1/png/pngrutil.c ****          if (out > avail_out)
 12452              		.loc 1 3998 13 view .LVU3880
 12453 001a BDFEFFFF 		movl	$4294967294, %ebp
 12453      FF
 12454              	.LBE429:
 12455              	.LBE428:
3944:fltk-1.3.4-1/png/pngrutil.c ****    /* Loop reading IDATs and decompressing the result into output[avail_out] */
 12456              		.loc 1 3944 1 view .LVU3881
 12457 001f 53       		pushq	%rbx
 12458              		.cfi_def_cfa_offset 56
 12459              		.cfi_offset 3, -56
 12460 0020 4889D3   		movq	%rdx, %rbx
 12461 0023 4881EC28 		subq	$1064, %rsp
 12461      040000
 12462              		.cfi_def_cfa_offset 1120
3944:fltk-1.3.4-1/png/pngrutil.c ****    /* Loop reading IDATs and decompressing the result into output[avail_out] */
 12463              		.loc 1 3944 1 view .LVU3882
 12464 002a 64488B04 		movq	%fs:40, %rax
 12464      25280000 
 12464      00
 12465 0033 48898424 		movq	%rax, 1048(%rsp)
 12465      18040000 
 12466 003b 31C0     		xorl	%eax, %eax
3946:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->zstream.avail_out = 0; /* safety: set below */
 12467              		.loc 1 3946 4 is_stmt 1 view .LVU3883
3950:fltk-1.3.4-1/png/pngrutil.c **** 
 12468              		.loc 1 3950 17 is_stmt 0 view .LVU3884
 12469 003d 4885F6   		testq	%rsi, %rsi
3946:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->zstream.avail_out = 0; /* safety: set below */
 12470              		.loc 1 3946 30 view .LVU3885
 12471 0040 4889B758 		movq	%rsi, 344(%rdi)
 12471      010000
3947:fltk-1.3.4-1/png/pngrutil.c **** 
 12472              		.loc 1 3947 4 is_stmt 1 view .LVU3886
3947:fltk-1.3.4-1/png/pngrutil.c **** 
 12473              		.loc 1 3947 31 is_stmt 0 view .LVU3887
 12474 0047 C7876001 		movl	$0, 352(%rdi)
 12474      00000000 
 12474      0000
3949:fltk-1.3.4-1/png/pngrutil.c ****       avail_out = 0;
 12475              		.loc 1 3949 4 is_stmt 1 view .LVU3888
3950:fltk-1.3.4-1/png/pngrutil.c **** 
 12476              		.loc 1 3950 17 is_stmt 0 view .LVU3889
 12477 0051 480F44D8 		cmove	%rax, %rbx
 12478              	.LBB437:
3999:fltk-1.3.4-1/png/pngrutil.c ****             out = (uInt)avail_out;
4000:fltk-1.3.4-1/png/pngrutil.c **** 
4001:fltk-1.3.4-1/png/pngrutil.c ****          avail_out -= out;
4002:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_out = out;
4003:fltk-1.3.4-1/png/pngrutil.c ****       }
4004:fltk-1.3.4-1/png/pngrutil.c **** 
4005:fltk-1.3.4-1/png/pngrutil.c ****       else /* after last row, checking for end */
4006:fltk-1.3.4-1/png/pngrutil.c ****       {
4007:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = tmpbuf;
 12479              		.loc 1 4007 36 view .LVU3890
 12480 0055 488D4424 		leaq	16(%rsp), %rax
 12480      10
 12481 005a 48894424 		movq	%rax, 8(%rsp)
 12481      08
 12482 005f EB5B     		jmp	.L1151
 12483              	.LVL1397:
 12484              		.p2align 4,,10
 12485 0061 0F1F8000 		.p2align 3
 12485      000000
 12486              	.L1166:
 12487              	.LBB430:
3996:fltk-1.3.4-1/png/pngrutil.c **** 
 12488              		.loc 1 3996 10 is_stmt 1 view .LVU3891
3998:fltk-1.3.4-1/png/pngrutil.c ****             out = (uInt)avail_out;
 12489              		.loc 1 3998 10 view .LVU3892
 12490 0068 4839EB   		cmpq	%rbp, %rbx
 12491 006b B8FFFFFF 		movl	$-1, %eax
 12491      FF
 12492 0070 41BDFFFF 		movl	$4294967295, %r13d
 12492      FFFF
 12493              	.LBE430:
4008:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_out = (sizeof tmpbuf);
4009:fltk-1.3.4-1/png/pngrutil.c ****       }
4010:fltk-1.3.4-1/png/pngrutil.c **** 
4011:fltk-1.3.4-1/png/pngrutil.c ****       /* Use NO_FLUSH; this gives zlib the maximum opportunity to optimize the
4012:fltk-1.3.4-1/png/pngrutil.c ****        * process.  If the LZ stream is truncated the sequential reader will
4013:fltk-1.3.4-1/png/pngrutil.c ****        * terminally damage the stream, above, by reading the chunk header of the
4014:fltk-1.3.4-1/png/pngrutil.c ****        * following chunk (it then exits with png_error).
4015:fltk-1.3.4-1/png/pngrutil.c ****        *
4016:fltk-1.3.4-1/png/pngrutil.c ****        * TODO: deal more elegantly with truncated IDAT lists.
4017:fltk-1.3.4-1/png/pngrutil.c ****        */
4018:fltk-1.3.4-1/png/pngrutil.c ****       ret = inflate(&png_ptr->zstream, Z_NO_FLUSH);
 12494              		.loc 1 4018 13 is_stmt 0 view .LVU3893
 12495 0076 4C89F7   		movq	%r14, %rdi
 12496 0079 0F46C3   		cmovbe	%ebx, %eax
 12497 007c 4C0F46EB 		cmovbe	%rbx, %r13
 12498              	.LVL1398:
 12499              	.LBB431:
4001:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_out = out;
 12500              		.loc 1 4001 10 is_stmt 1 view .LVU3894
4002:fltk-1.3.4-1/png/pngrutil.c ****       }
 12501              		.loc 1 4002 10 view .LVU3895
 12502              	.LBE431:
 12503              		.loc 1 4018 13 is_stmt 0 view .LVU3896
 12504 0080 31F6     		xorl	%esi, %esi
 12505              	.LBB432:
4002:fltk-1.3.4-1/png/pngrutil.c ****       }
 12506              		.loc 1 4002 37 view .LVU3897
 12507 0082 41898760 		movl	%eax, 352(%r15)
 12507      010000
4002:fltk-1.3.4-1/png/pngrutil.c ****       }
 12508              		.loc 1 4002 37 view .LVU3898
 12509              	.LBE432:
 12510              		.loc 1 4018 7 is_stmt 1 view .LVU3899
 12511              		.loc 1 4018 13 is_stmt 0 view .LVU3900
 12512 0089 E8000000 		call	inflate@PLT
 12512      00
 12513              	.LVL1399:
4019:fltk-1.3.4-1/png/pngrutil.c **** 
4020:fltk-1.3.4-1/png/pngrutil.c ****       /* Take the unconsumed output back. */
4021:fltk-1.3.4-1/png/pngrutil.c ****       if (output != NULL)
 12514              		.loc 1 4021 7 is_stmt 1 view .LVU3901
4022:fltk-1.3.4-1/png/pngrutil.c ****          avail_out += png_ptr->zstream.avail_out;
 12515              		.loc 1 4022 10 view .LVU3902
 12516              		.loc 1 4022 39 is_stmt 0 view .LVU3903
 12517 008e 418B9760 		movl	352(%r15), %edx
 12517      010000
4023:fltk-1.3.4-1/png/pngrutil.c **** 
4024:fltk-1.3.4-1/png/pngrutil.c ****       else /* avail_out counts the extra bytes */
4025:fltk-1.3.4-1/png/pngrutil.c ****          avail_out += (sizeof tmpbuf) - png_ptr->zstream.avail_out;
4026:fltk-1.3.4-1/png/pngrutil.c **** 
4027:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_out = 0;
 12518              		.loc 1 4027 34 view .LVU3904
 12519 0095 41C78760 		movl	$0, 352(%r15)
 12519      01000000 
 12519      000000
 12520 00a0 4801D3   		addq	%rdx, %rbx
 12521              	.LVL1400:
4022:fltk-1.3.4-1/png/pngrutil.c ****          avail_out += png_ptr->zstream.avail_out;
 12522              		.loc 1 4022 20 view .LVU3905
 12523 00a3 4C29EB   		subq	%r13, %rbx
 12524              	.LVL1401:
 12525              		.loc 1 4027 7 is_stmt 1 view .LVU3906
4028:fltk-1.3.4-1/png/pngrutil.c **** 
4029:fltk-1.3.4-1/png/pngrutil.c ****       if (ret == Z_STREAM_END)
 12526              		.loc 1 4029 7 view .LVU3907
 12527              		.loc 1 4029 10 is_stmt 0 view .LVU3908
 12528 00a6 83F801   		cmpl	$1, %eax
 12529 00a9 7467     		je	.L1163
 12530              	.LVL1402:
 12531              	.L1145:
4030:fltk-1.3.4-1/png/pngrutil.c ****       {
4031:fltk-1.3.4-1/png/pngrutil.c ****          /* Do this for safety; we won't read any more into this row. */
4032:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.next_out = NULL;
4033:fltk-1.3.4-1/png/pngrutil.c **** 
4034:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->mode |= PNG_AFTER_IDAT;
4035:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->flags |= PNG_FLAG_ZSTREAM_ENDED;
4036:fltk-1.3.4-1/png/pngrutil.c **** 
4037:fltk-1.3.4-1/png/pngrutil.c ****          if (png_ptr->zstream.avail_in > 0 || png_ptr->idat_size > 0)
4038:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_benign_error(png_ptr, "Extra compressed data");
4039:fltk-1.3.4-1/png/pngrutil.c ****          break;
4040:fltk-1.3.4-1/png/pngrutil.c ****       }
4041:fltk-1.3.4-1/png/pngrutil.c **** 
4042:fltk-1.3.4-1/png/pngrutil.c ****       if (ret != Z_OK)
 12532              		.loc 1 4042 7 is_stmt 1 view .LVU3909
 12533              		.loc 1 4042 10 is_stmt 0 view .LVU3910
 12534 00ab 85C0     		testl	%eax, %eax
 12535 00ad 0F858201 		jne	.L1164
 12535      0000
 12536              		.loc 1 4042 10 view .LVU3911
 12537              	.LBE437:
4043:fltk-1.3.4-1/png/pngrutil.c ****       {
4044:fltk-1.3.4-1/png/pngrutil.c ****          png_zstream_error(png_ptr, ret);
4045:fltk-1.3.4-1/png/pngrutil.c **** 
4046:fltk-1.3.4-1/png/pngrutil.c ****          if (output != NULL)
4047:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_error(png_ptr, png_ptr->zstream.msg);
4048:fltk-1.3.4-1/png/pngrutil.c **** 
4049:fltk-1.3.4-1/png/pngrutil.c ****          else /* checking */
4050:fltk-1.3.4-1/png/pngrutil.c ****          {
4051:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_benign_error(png_ptr, png_ptr->zstream.msg);
4052:fltk-1.3.4-1/png/pngrutil.c ****             return;
4053:fltk-1.3.4-1/png/pngrutil.c ****          }
4054:fltk-1.3.4-1/png/pngrutil.c ****       }
4055:fltk-1.3.4-1/png/pngrutil.c ****    } while (avail_out > 0);
 12538              		.loc 1 4055 12 is_stmt 1 view .LVU3912
 12539              		.loc 1 4055 4 is_stmt 0 view .LVU3913
 12540 00b3 4885DB   		testq	%rbx, %rbx
 12541 00b6 0F84AD00 		je	.L1136
 12541      0000
 12542              	.LVL1403:
 12543              	.L1151:
3952:fltk-1.3.4-1/png/pngrutil.c ****    {
 12544              		.loc 1 3952 4 is_stmt 1 view .LVU3914
 12545              	.LBB438:
3954:fltk-1.3.4-1/png/pngrutil.c ****       png_byte tmpbuf[PNG_INFLATE_BUF_SIZE];
 12546              		.loc 1 3954 7 view .LVU3915
3955:fltk-1.3.4-1/png/pngrutil.c **** 
 12547              		.loc 1 3955 7 view .LVU3916
3957:fltk-1.3.4-1/png/pngrutil.c ****       {
 12548              		.loc 1 3957 7 view .LVU3917
3957:fltk-1.3.4-1/png/pngrutil.c ****       {
 12549              		.loc 1 3957 10 is_stmt 0 view .LVU3918
 12550 00bc 418B8F48 		movl	328(%r15), %ecx
 12550      010000
 12551 00c3 85C9     		testl	%ecx, %ecx
 12552 00c5 0F84CD00 		je	.L1165
 12552      0000
 12553              	.L1139:
3994:fltk-1.3.4-1/png/pngrutil.c ****       {
 12554              		.loc 1 3994 7 is_stmt 1 view .LVU3919
3994:fltk-1.3.4-1/png/pngrutil.c ****       {
 12555              		.loc 1 3994 10 is_stmt 0 view .LVU3920
 12556 00cb 4D85E4   		testq	%r12, %r12
 12557 00ce 7598     		jne	.L1166
4007:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_out = (sizeof tmpbuf);
 12558              		.loc 1 4007 10 is_stmt 1 view .LVU3921
4007:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_out = (sizeof tmpbuf);
 12559              		.loc 1 4007 36 is_stmt 0 view .LVU3922
 12560 00d0 488B4424 		movq	8(%rsp), %rax
 12560      08
4018:fltk-1.3.4-1/png/pngrutil.c **** 
 12561              		.loc 1 4018 13 view .LVU3923
 12562 00d5 31F6     		xorl	%esi, %esi
 12563 00d7 4C89F7   		movq	%r14, %rdi
4008:fltk-1.3.4-1/png/pngrutil.c ****       }
 12564              		.loc 1 4008 37 view .LVU3924
 12565 00da 41C78760 		movl	$1024, 352(%r15)
 12565      01000000 
 12565      040000
4007:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_out = (sizeof tmpbuf);
 12566              		.loc 1 4007 36 view .LVU3925
 12567 00e5 49898758 		movq	%rax, 344(%r15)
 12567      010000
4008:fltk-1.3.4-1/png/pngrutil.c ****       }
 12568              		.loc 1 4008 10 is_stmt 1 view .LVU3926
4018:fltk-1.3.4-1/png/pngrutil.c **** 
 12569              		.loc 1 4018 7 view .LVU3927
4018:fltk-1.3.4-1/png/pngrutil.c **** 
 12570              		.loc 1 4018 13 is_stmt 0 view .LVU3928
 12571 00ec E8000000 		call	inflate@PLT
 12571      00
 12572              	.LVL1404:
4021:fltk-1.3.4-1/png/pngrutil.c ****          avail_out += png_ptr->zstream.avail_out;
 12573              		.loc 1 4021 7 is_stmt 1 view .LVU3929
4025:fltk-1.3.4-1/png/pngrutil.c **** 
 12574              		.loc 1 4025 10 view .LVU3930
4025:fltk-1.3.4-1/png/pngrutil.c **** 
 12575              		.loc 1 4025 57 is_stmt 0 view .LVU3931
 12576 00f1 418B9760 		movl	352(%r15), %edx
 12576      010000
4027:fltk-1.3.4-1/png/pngrutil.c **** 
 12577              		.loc 1 4027 34 view .LVU3932
 12578 00f8 41C78760 		movl	$0, 352(%r15)
 12578      01000000 
 12578      000000
4025:fltk-1.3.4-1/png/pngrutil.c **** 
 12579              		.loc 1 4025 20 view .LVU3933
 12580 0103 4829D3   		subq	%rdx, %rbx
 12581              	.LVL1405:
4025:fltk-1.3.4-1/png/pngrutil.c **** 
 12582              		.loc 1 4025 20 view .LVU3934
 12583 0106 4881C300 		addq	$1024, %rbx
 12583      040000
 12584              	.LVL1406:
4027:fltk-1.3.4-1/png/pngrutil.c **** 
 12585              		.loc 1 4027 7 is_stmt 1 view .LVU3935
4029:fltk-1.3.4-1/png/pngrutil.c ****       {
 12586              		.loc 1 4029 7 view .LVU3936
4029:fltk-1.3.4-1/png/pngrutil.c ****       {
 12587              		.loc 1 4029 10 is_stmt 0 view .LVU3937
 12588 010d 83F801   		cmpl	$1, %eax
 12589 0110 7599     		jne	.L1145
 12590              	.L1163:
4032:fltk-1.3.4-1/png/pngrutil.c **** 
 12591              		.loc 1 4032 10 is_stmt 1 view .LVU3938
4037:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_benign_error(png_ptr, "Extra compressed data");
 12592              		.loc 1 4037 13 is_stmt 0 view .LVU3939
 12593 0112 418B9748 		movl	328(%r15), %edx
 12593      010000
4034:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->flags |= PNG_FLAG_ZSTREAM_ENDED;
 12594              		.loc 1 4034 24 view .LVU3940
 12595 0119 48B80800 		movabsq	$34359738376, %rax
 12595      00000800 
 12595      0000
 12596              	.LVL1407:
4032:fltk-1.3.4-1/png/pngrutil.c **** 
 12597              		.loc 1 4032 36 view .LVU3941
 12598 0123 49C78758 		movq	$0, 344(%r15)
 12598      01000000 
 12598      000000
4034:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->flags |= PNG_FLAG_ZSTREAM_ENDED;
 12599              		.loc 1 4034 10 is_stmt 1 view .LVU3942
4035:fltk-1.3.4-1/png/pngrutil.c **** 
 12600              		.loc 1 4035 10 view .LVU3943
4034:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->flags |= PNG_FLAG_ZSTREAM_ENDED;
 12601              		.loc 1 4034 24 is_stmt 0 view .LVU3944
 12602 012e 4909872C 		orq	%rax, 300(%r15)
 12602      010000
4037:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_benign_error(png_ptr, "Extra compressed data");
 12603              		.loc 1 4037 10 is_stmt 1 view .LVU3945
4037:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_benign_error(png_ptr, "Extra compressed data");
 12604              		.loc 1 4037 13 is_stmt 0 view .LVU3946
 12605 0135 85D2     		testl	%edx, %edx
 12606 0137 0F85E400 		jne	.L1146
 12606      0000
4037:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_benign_error(png_ptr, "Extra compressed data");
 12607              		.loc 1 4037 44 discriminator 1 view .LVU3947
 12608 013d 418B8758 		movl	600(%r15), %eax
 12608      020000
 12609 0144 85C0     		testl	%eax, %eax
 12610 0146 0F85D500 		jne	.L1146
 12610      0000
 12611              	.L1147:
4039:fltk-1.3.4-1/png/pngrutil.c ****       }
 12612              		.loc 1 4039 10 is_stmt 1 view .LVU3948
 12613              	.LBE438:
4056:fltk-1.3.4-1/png/pngrutil.c **** 
4057:fltk-1.3.4-1/png/pngrutil.c ****    if (avail_out > 0)
 12614              		.loc 1 4057 4 view .LVU3949
 12615              		.loc 1 4057 7 is_stmt 0 view .LVU3950
 12616 014c 4885DB   		testq	%rbx, %rbx
 12617 014f 7418     		je	.L1136
4058:fltk-1.3.4-1/png/pngrutil.c ****    {
4059:fltk-1.3.4-1/png/pngrutil.c ****       /* The stream ended before the image; this is the same as too few IDATs so
4060:fltk-1.3.4-1/png/pngrutil.c ****        * should be handled the same way.
4061:fltk-1.3.4-1/png/pngrutil.c ****        */
4062:fltk-1.3.4-1/png/pngrutil.c ****       if (output != NULL)
 12618              		.loc 1 4062 7 is_stmt 1 view .LVU3951
 12619              		.loc 1 4062 10 is_stmt 0 view .LVU3952
 12620 0151 4D85E4   		testq	%r12, %r12
 12621 0154 0F850601 		jne	.L1153
 12621      0000
4063:fltk-1.3.4-1/png/pngrutil.c ****          png_error(png_ptr, "Not enough image data");
4064:fltk-1.3.4-1/png/pngrutil.c **** 
4065:fltk-1.3.4-1/png/pngrutil.c ****       else /* the deflate stream contained extra data */
4066:fltk-1.3.4-1/png/pngrutil.c ****          png_chunk_benign_error(png_ptr, "Too much image data");
 12622              		.loc 1 4066 10 is_stmt 1 view .LVU3953
 12623 015a 488D3500 		leaq	.LC55(%rip), %rsi
 12623      000000
 12624 0161 4C89FF   		movq	%r15, %rdi
 12625              	.LVL1408:
 12626              	.L1162:
 12627              		.loc 1 4066 10 is_stmt 0 view .LVU3954
 12628 0164 E8000000 		call	png_chunk_benign_error@PLT
 12628      00
 12629              	.LVL1409:
 12630              	.L1136:
4067:fltk-1.3.4-1/png/pngrutil.c ****    }
4068:fltk-1.3.4-1/png/pngrutil.c **** }
 12631              		.loc 1 4068 1 view .LVU3955
 12632 0169 488B8424 		movq	1048(%rsp), %rax
 12632      18040000 
 12633 0171 64483304 		xorq	%fs:40, %rax
 12633      25280000 
 12633      00
 12634 017a 0F85EF00 		jne	.L1167
 12634      0000
 12635 0180 4881C428 		addq	$1064, %rsp
 12635      040000
 12636              		.cfi_remember_state
 12637              		.cfi_def_cfa_offset 56
 12638 0187 5B       		popq	%rbx
 12639              		.cfi_def_cfa_offset 48
 12640              	.LVL1410:
 12641              		.loc 1 4068 1 view .LVU3956
 12642 0188 5D       		popq	%rbp
 12643              		.cfi_def_cfa_offset 40
 12644 0189 415C     		popq	%r12
 12645              		.cfi_def_cfa_offset 32
 12646              	.LVL1411:
 12647              		.loc 1 4068 1 view .LVU3957
 12648 018b 415D     		popq	%r13
 12649              		.cfi_def_cfa_offset 24
 12650 018d 415E     		popq	%r14
 12651              		.cfi_def_cfa_offset 16
 12652 018f 415F     		popq	%r15
 12653              		.cfi_def_cfa_offset 8
 12654              	.LVL1412:
 12655              		.loc 1 4068 1 view .LVU3958
 12656 0191 C3       		ret
 12657              	.LVL1413:
 12658              		.p2align 4,,10
 12659 0192 660F1F44 		.p2align 3
 12659      0000
 12660              	.L1165:
 12661              		.cfi_restore_state
 12662              		.loc 1 4068 1 view .LVU3959
 12663 0198 418B8758 		movl	600(%r15), %eax
 12663      020000
 12664 019f EB31     		jmp	.L1140
 12665              		.p2align 4,,10
 12666 01a1 0F1F8000 		.p2align 3
 12666      000000
 12667              	.L1141:
 12668              	.LBB439:
 12669              	.LBB433:
3964:fltk-1.3.4-1/png/pngrutil.c **** 
 12670              		.loc 1 3964 13 is_stmt 1 view .LVU3960
 12671 01a8 31F6     		xorl	%esi, %esi
 12672 01aa 4C89FF   		movq	%r15, %rdi
 12673 01ad E8000000 		call	png_crc_finish
 12673      00
 12674              	.LVL1414:
3966:fltk-1.3.4-1/png/pngrutil.c ****             /* This is an error even in the 'check' case because the code just
 12675              		.loc 1 3966 13 view .LVU3961
3966:fltk-1.3.4-1/png/pngrutil.c ****             /* This is an error even in the 'check' case because the code just
 12676              		.loc 1 3966 34 is_stmt 0 view .LVU3962
 12677 01b2 4C89FF   		movq	%r15, %rdi
 12678 01b5 E8000000 		call	png_read_chunk_header
 12678      00
 12679              	.LVL1415:
3970:fltk-1.3.4-1/png/pngrutil.c ****                png_error(png_ptr, "Not enough image data");
 12680              		.loc 1 3970 16 view .LVU3963
 12681 01ba 4181BF18 		cmpl	$1229209940, 536(%r15)
 12681      02000054 
 12681      414449
3966:fltk-1.3.4-1/png/pngrutil.c ****             /* This is an error even in the 'check' case because the code just
 12682              		.loc 1 3966 32 view .LVU3964
 12683 01c5 41898758 		movl	%eax, 600(%r15)
 12683      020000
3970:fltk-1.3.4-1/png/pngrutil.c ****                png_error(png_ptr, "Not enough image data");
 12684              		.loc 1 3970 13 is_stmt 1 view .LVU3965
3970:fltk-1.3.4-1/png/pngrutil.c ****                png_error(png_ptr, "Not enough image data");
 12685              		.loc 1 3970 16 is_stmt 0 view .LVU3966
 12686 01cc 0F858E00 		jne	.L1153
 12686      0000
 12687              	.L1140:
3962:fltk-1.3.4-1/png/pngrutil.c ****          {
 12688              		.loc 1 3962 16 is_stmt 1 view .LVU3967
 12689 01d2 85C0     		testl	%eax, %eax
 12690 01d4 74D2     		je	.L1141
3974:fltk-1.3.4-1/png/pngrutil.c **** 
 12691              		.loc 1 3974 10 view .LVU3968
3974:fltk-1.3.4-1/png/pngrutil.c **** 
 12692              		.loc 1 3974 19 is_stmt 0 view .LVU3969
 12693 01d6 458BAFA8 		movl	1192(%r15), %r13d
 12693      040000
 12694              	.LVL1416:
3976:fltk-1.3.4-1/png/pngrutil.c ****             avail_in = (uInt)png_ptr->idat_size;
 12695              		.loc 1 3976 10 is_stmt 1 view .LVU3970
3984:fltk-1.3.4-1/png/pngrutil.c **** 
 12696              		.loc 1 3984 19 is_stmt 0 view .LVU3971
 12697 01dd 4C89FF   		movq	%r15, %rdi
 12698 01e0 4139C5   		cmpl	%eax, %r13d
 12699 01e3 440F47E8 		cmova	%eax, %r13d
 12700              	.LVL1417:
3984:fltk-1.3.4-1/png/pngrutil.c **** 
 12701              		.loc 1 3984 10 is_stmt 1 view .LVU3972
3984:fltk-1.3.4-1/png/pngrutil.c **** 
 12702              		.loc 1 3984 19 is_stmt 0 view .LVU3973
 12703 01e7 31D2     		xorl	%edx, %edx
 12704 01e9 4489EE   		movl	%r13d, %esi
 12705 01ec E8000000 		call	png_read_buffer
 12705      00
 12706              	.LVL1418:
3986:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->idat_size -= avail_in;
 12707              		.loc 1 3986 10 is_stmt 1 view .LVU3974
 12708              	.LBB434:
 12709              	.LBI434:
 187:fltk-1.3.4-1/png/pngrutil.c **** {
 12710              		.loc 1 187 1 view .LVU3975
 12711              	.LBB435:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 12712              		.loc 1 189 4 view .LVU3976
 12713 01f1 4489EA   		movl	%r13d, %edx
 12714 01f4 4C89FF   		movq	%r15, %rdi
 12715 01f7 4889C6   		movq	%rax, %rsi
 12716 01fa 48890424 		movq	%rax, (%rsp)
 12717 01fe E8000000 		call	png_crc_read.part.0
 12717      00
 12718              	.LVL1419:
 189:fltk-1.3.4-1/png/pngrutil.c ****       return;
 12719              		.loc 1 189 4 is_stmt 0 view .LVU3977
 12720              	.LBE435:
 12721              	.LBE434:
3987:fltk-1.3.4-1/png/pngrutil.c **** 
 12722              		.loc 1 3987 10 is_stmt 1 view .LVU3978
3989:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail_in;
 12723              		.loc 1 3989 35 is_stmt 0 view .LVU3979
 12724 0203 488B0424 		movq	(%rsp), %rax
3987:fltk-1.3.4-1/png/pngrutil.c **** 
 12725              		.loc 1 3987 29 view .LVU3980
 12726 0207 4529AF58 		subl	%r13d, 600(%r15)
 12726      020000
3989:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail_in;
 12727              		.loc 1 3989 10 is_stmt 1 view .LVU3981
3990:fltk-1.3.4-1/png/pngrutil.c ****       }
 12728              		.loc 1 3990 36 is_stmt 0 view .LVU3982
 12729 020e 4589AF48 		movl	%r13d, 328(%r15)
 12729      010000
3989:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->zstream.avail_in = avail_in;
 12730              		.loc 1 3989 35 view .LVU3983
 12731 0215 49898740 		movq	%rax, 320(%r15)
 12731      010000
3990:fltk-1.3.4-1/png/pngrutil.c ****       }
 12732              		.loc 1 3990 10 is_stmt 1 view .LVU3984
 12733 021c E9AAFEFF 		jmp	.L1139
 12733      FF
 12734              	.LVL1420:
 12735              	.L1146:
3990:fltk-1.3.4-1/png/pngrutil.c ****       }
 12736              		.loc 1 3990 10 is_stmt 0 view .LVU3985
 12737              	.LBE433:
4038:fltk-1.3.4-1/png/pngrutil.c ****          break;
 12738              		.loc 1 4038 13 is_stmt 1 view .LVU3986
 12739 0221 488D3500 		leaq	.LC54(%rip), %rsi
 12739      000000
 12740 0228 4C89FF   		movq	%r15, %rdi
 12741 022b E8000000 		call	png_chunk_benign_error@PLT
 12741      00
 12742              	.LVL1421:
 12743 0230 E917FFFF 		jmp	.L1147
 12743      FF
 12744              	.LVL1422:
 12745              	.L1164:
4044:fltk-1.3.4-1/png/pngrutil.c **** 
 12746              		.loc 1 4044 10 view .LVU3987
 12747 0235 89C6     		movl	%eax, %esi
 12748 0237 4C89FF   		movq	%r15, %rdi
 12749 023a E8000000 		call	png_zstream_error@PLT
 12749      00
 12750              	.LVL1423:
4046:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_error(png_ptr, png_ptr->zstream.msg);
 12751              		.loc 1 4046 10 view .LVU3988
4047:fltk-1.3.4-1/png/pngrutil.c **** 
 12752              		.loc 1 4047 13 is_stmt 0 view .LVU3989
 12753 023f 498BB770 		movq	368(%r15), %rsi
 12753      010000
 12754 0246 4C89FF   		movq	%r15, %rdi
4046:fltk-1.3.4-1/png/pngrutil.c ****             png_chunk_error(png_ptr, png_ptr->zstream.msg);
 12755              		.loc 1 4046 13 view .LVU3990
 12756 0249 4D85E4   		testq	%r12, %r12
 12757 024c 0F8412FF 		je	.L1162
 12757      FFFF
 12758              	.LVL1424:
4047:fltk-1.3.4-1/png/pngrutil.c **** 
 12759              		.loc 1 4047 13 is_stmt 1 view .LVU3991
 12760 0252 E8000000 		call	png_chunk_error@PLT
 12760      00
 12761              	.LVL1425:
 12762 0257 660F1F84 		.p2align 4,,10
 12762      00000000 
 12762      00
 12763              		.p2align 3
 12764              	.L1153:
 12765              	.LBB436:
3971:fltk-1.3.4-1/png/pngrutil.c ****          }
 12766              		.loc 1 3971 16 view .LVU3992
 12767 0260 488D3500 		leaq	.LC53(%rip), %rsi
 12767      000000
 12768 0267 4C89FF   		movq	%r15, %rdi
 12769 026a E8000000 		call	png_error@PLT
 12769      00
 12770              	.LVL1426:
 12771              	.L1167:
3971:fltk-1.3.4-1/png/pngrutil.c ****          }
 12772              		.loc 1 3971 16 is_stmt 0 view .LVU3993
 12773              	.LBE436:
 12774              	.LBE439:
 12775              		.loc 1 4068 1 view .LVU3994
 12776 026f E8000000 		call	__stack_chk_fail@PLT
 12776      00
 12777              	.LVL1427:
 12778              		.cfi_endproc
 12779              	.LFE88:
 12781              		.section	.text.png_read_finish_IDAT,"ax",@progbits
 12782              		.p2align 4
 12783              		.globl	png_read_finish_IDAT
 12785              	png_read_finish_IDAT:
 12786              	.LVL1428:
 12787              	.LFB89:
4069:fltk-1.3.4-1/png/pngrutil.c **** 
4070:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
4071:fltk-1.3.4-1/png/pngrutil.c **** png_read_finish_IDAT(png_structrp png_ptr)
4072:fltk-1.3.4-1/png/pngrutil.c **** {
 12788              		.loc 1 4072 1 is_stmt 1 view -0
 12789              		.cfi_startproc
 12790              		.loc 1 4072 1 is_stmt 0 view .LVU3996
 12791 0000 F30F1EFA 		endbr64
4073:fltk-1.3.4-1/png/pngrutil.c ****    /* We don't need any more data and the stream should have ended, however the
4074:fltk-1.3.4-1/png/pngrutil.c ****     * LZ end code may actually not have been processed.  In this case we must
4075:fltk-1.3.4-1/png/pngrutil.c ****     * read it otherwise stray unread IDAT data or, more likely, an IDAT chunk
4076:fltk-1.3.4-1/png/pngrutil.c ****     * may still remain to be consumed.
4077:fltk-1.3.4-1/png/pngrutil.c ****     */
4078:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->flags & PNG_FLAG_ZSTREAM_ENDED) == 0)
 12792              		.loc 1 4078 4 is_stmt 1 view .LVU3997
4072:fltk-1.3.4-1/png/pngrutil.c ****    /* We don't need any more data and the stream should have ended, however the
 12793              		.loc 1 4072 1 is_stmt 0 view .LVU3998
 12794 0004 55       		pushq	%rbp
 12795              		.cfi_def_cfa_offset 16
 12796              		.cfi_offset 6, -16
4072:fltk-1.3.4-1/png/pngrutil.c ****    /* We don't need any more data and the stream should have ended, however the
 12797              		.loc 1 4072 1 view .LVU3999
 12798 0005 4889FD   		movq	%rdi, %rbp
 12799              		.loc 1 4078 7 view .LVU4000
 12800 0008 F6873001 		testb	$8, 304(%rdi)
 12800      000008
 12801 000f 740F     		je	.L1174
 12802              	.LVL1429:
 12803              	.L1170:
4079:fltk-1.3.4-1/png/pngrutil.c ****    {
4080:fltk-1.3.4-1/png/pngrutil.c ****       /* The NULL causes png_read_IDAT_data to swallow any remaining bytes in
4081:fltk-1.3.4-1/png/pngrutil.c ****        * the compressed stream, but the stream may be damaged too, so even after
4082:fltk-1.3.4-1/png/pngrutil.c ****        * this call we may need to terminate the zstream ownership.
4083:fltk-1.3.4-1/png/pngrutil.c ****        */
4084:fltk-1.3.4-1/png/pngrutil.c ****       png_read_IDAT_data(png_ptr, NULL, 0);
4085:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_out = NULL; /* safety */
4086:fltk-1.3.4-1/png/pngrutil.c **** 
4087:fltk-1.3.4-1/png/pngrutil.c ****       /* Now clear everything out for safety; the following may not have been
4088:fltk-1.3.4-1/png/pngrutil.c ****        * done.
4089:fltk-1.3.4-1/png/pngrutil.c ****        */
4090:fltk-1.3.4-1/png/pngrutil.c ****       if ((png_ptr->flags & PNG_FLAG_ZSTREAM_ENDED) == 0)
4091:fltk-1.3.4-1/png/pngrutil.c ****       {
4092:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->mode |= PNG_AFTER_IDAT;
4093:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->flags |= PNG_FLAG_ZSTREAM_ENDED;
4094:fltk-1.3.4-1/png/pngrutil.c ****       }
4095:fltk-1.3.4-1/png/pngrutil.c ****    }
4096:fltk-1.3.4-1/png/pngrutil.c **** 
4097:fltk-1.3.4-1/png/pngrutil.c ****    /* If the zstream has not been released do it now *and* terminate the reading
4098:fltk-1.3.4-1/png/pngrutil.c ****     * of the final IDAT chunk.
4099:fltk-1.3.4-1/png/pngrutil.c ****     */
4100:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->zowner == png_IDAT)
 12804              		.loc 1 4100 4 is_stmt 1 view .LVU4001
 12805              		.loc 1 4100 7 is_stmt 0 view .LVU4002
 12806 0011 81BD3801 		cmpl	$1229209940, 312(%rbp)
 12806      00005441 
 12806      4449
 12807 001b 743D     		je	.L1175
 12808              	.L1168:
4101:fltk-1.3.4-1/png/pngrutil.c ****    {
4102:fltk-1.3.4-1/png/pngrutil.c ****       /* Always do this; the pointers otherwise point into the read buffer. */
4103:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_in = NULL;
4104:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_in = 0;
4105:fltk-1.3.4-1/png/pngrutil.c **** 
4106:fltk-1.3.4-1/png/pngrutil.c ****       /* Now we no longer own the zstream. */
4107:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zowner = 0;
4108:fltk-1.3.4-1/png/pngrutil.c **** 
4109:fltk-1.3.4-1/png/pngrutil.c ****       /* The slightly weird semantics of the sequential IDAT reading is that we
4110:fltk-1.3.4-1/png/pngrutil.c ****        * are always in or at the end of an IDAT chunk, so we always need to do a
4111:fltk-1.3.4-1/png/pngrutil.c ****        * crc_finish here.  If idat_size is non-zero we also need to read the
4112:fltk-1.3.4-1/png/pngrutil.c ****        * spurious bytes at the end of the chunk now.
4113:fltk-1.3.4-1/png/pngrutil.c ****        */
4114:fltk-1.3.4-1/png/pngrutil.c ****       (void)png_crc_finish(png_ptr, png_ptr->idat_size);
4115:fltk-1.3.4-1/png/pngrutil.c ****    }
4116:fltk-1.3.4-1/png/pngrutil.c **** }
 12809              		.loc 1 4116 1 view .LVU4003
 12810 001d 5D       		popq	%rbp
 12811              		.cfi_remember_state
 12812              		.cfi_def_cfa_offset 8
 12813              	.LVL1430:
 12814              		.loc 1 4116 1 view .LVU4004
 12815 001e C3       		ret
 12816              	.LVL1431:
 12817 001f 90       		.p2align 4,,10
 12818              		.p2align 3
 12819              	.L1174:
 12820              		.cfi_restore_state
4084:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.next_out = NULL; /* safety */
 12821              		.loc 1 4084 7 is_stmt 1 view .LVU4005
 12822 0020 31D2     		xorl	%edx, %edx
 12823 0022 31F6     		xorl	%esi, %esi
 12824 0024 E8000000 		call	png_read_IDAT_data
 12824      00
 12825              	.LVL1432:
4085:fltk-1.3.4-1/png/pngrutil.c **** 
 12826              		.loc 1 4085 7 view .LVU4006
4085:fltk-1.3.4-1/png/pngrutil.c **** 
 12827              		.loc 1 4085 33 is_stmt 0 view .LVU4007
 12828 0029 48C78558 		movq	$0, 344(%rbp)
 12828      01000000 
 12828      000000
4090:fltk-1.3.4-1/png/pngrutil.c ****       {
 12829              		.loc 1 4090 7 is_stmt 1 view .LVU4008
4090:fltk-1.3.4-1/png/pngrutil.c ****       {
 12830              		.loc 1 4090 10 is_stmt 0 view .LVU4009
 12831 0034 F6853001 		testb	$8, 304(%rbp)
 12831      000008
 12832 003b 75D4     		jne	.L1170
4092:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->flags |= PNG_FLAG_ZSTREAM_ENDED;
 12833              		.loc 1 4092 10 is_stmt 1 view .LVU4010
4093:fltk-1.3.4-1/png/pngrutil.c ****       }
 12834              		.loc 1 4093 10 view .LVU4011
4092:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->flags |= PNG_FLAG_ZSTREAM_ENDED;
 12835              		.loc 1 4092 24 is_stmt 0 view .LVU4012
 12836 003d 48B80800 		movabsq	$34359738376, %rax
 12836      00000800 
 12836      0000
 12837 0047 4809852C 		orq	%rax, 300(%rbp)
 12837      010000
4100:fltk-1.3.4-1/png/pngrutil.c ****    {
 12838              		.loc 1 4100 4 is_stmt 1 view .LVU4013
4100:fltk-1.3.4-1/png/pngrutil.c ****    {
 12839              		.loc 1 4100 7 is_stmt 0 view .LVU4014
 12840 004e 81BD3801 		cmpl	$1229209940, 312(%rbp)
 12840      00005441 
 12840      4449
 12841 0058 75C3     		jne	.L1168
 12842              	.L1175:
 12843              	.LVL1433:
 12844              	.LBB442:
 12845              	.LBI442:
4071:fltk-1.3.4-1/png/pngrutil.c **** {
 12846              		.loc 1 4071 1 is_stmt 1 view .LVU4015
 12847              	.LBB443:
4103:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_in = 0;
 12848              		.loc 1 4103 7 view .LVU4016
4103:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->zstream.avail_in = 0;
 12849              		.loc 1 4103 32 is_stmt 0 view .LVU4017
 12850 005a 48C78540 		movq	$0, 320(%rbp)
 12850      01000000 
 12850      000000
4104:fltk-1.3.4-1/png/pngrutil.c **** 
 12851              		.loc 1 4104 7 is_stmt 1 view .LVU4018
4114:fltk-1.3.4-1/png/pngrutil.c ****    }
 12852              		.loc 1 4114 13 is_stmt 0 view .LVU4019
 12853 0065 8BB55802 		movl	600(%rbp), %esi
 12853      0000
 12854 006b 4889EF   		movq	%rbp, %rdi
4104:fltk-1.3.4-1/png/pngrutil.c **** 
 12855              		.loc 1 4104 33 view .LVU4020
 12856 006e C7854801 		movl	$0, 328(%rbp)
 12856      00000000 
 12856      0000
4107:fltk-1.3.4-1/png/pngrutil.c **** 
 12857              		.loc 1 4107 7 is_stmt 1 view .LVU4021
4107:fltk-1.3.4-1/png/pngrutil.c **** 
 12858              		.loc 1 4107 23 is_stmt 0 view .LVU4022
 12859 0078 C7853801 		movl	$0, 312(%rbp)
 12859      00000000 
 12859      0000
4114:fltk-1.3.4-1/png/pngrutil.c ****    }
 12860              		.loc 1 4114 7 is_stmt 1 view .LVU4023
 12861              	.LBE443:
 12862              	.LBE442:
 12863              		.loc 1 4116 1 is_stmt 0 view .LVU4024
 12864 0082 5D       		popq	%rbp
 12865              		.cfi_def_cfa_offset 8
 12866              	.LVL1434:
 12867              	.LBB445:
 12868              	.LBB444:
4114:fltk-1.3.4-1/png/pngrutil.c ****    }
 12869              		.loc 1 4114 13 view .LVU4025
 12870 0083 E9000000 		jmp	png_crc_finish
 12870      00
 12871              	.LVL1435:
4114:fltk-1.3.4-1/png/pngrutil.c ****    }
 12872              		.loc 1 4114 13 view .LVU4026
 12873              	.LBE444:
 12874              	.LBE445:
 12875              		.cfi_endproc
 12876              	.LFE89:
 12878              		.section	.text.png_read_finish_row,"ax",@progbits
 12879              		.p2align 4
 12880              		.globl	png_read_finish_row
 12882              	png_read_finish_row:
 12883              	.LVL1436:
 12884              	.LFB90:
4117:fltk-1.3.4-1/png/pngrutil.c **** 
4118:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
4119:fltk-1.3.4-1/png/pngrutil.c **** png_read_finish_row(png_structrp png_ptr)
4120:fltk-1.3.4-1/png/pngrutil.c **** {
 12885              		.loc 1 4120 1 is_stmt 1 view -0
 12886              		.cfi_startproc
 12887              		.loc 1 4120 1 is_stmt 0 view .LVU4028
 12888 0000 F30F1EFA 		endbr64
4121:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
4122:fltk-1.3.4-1/png/pngrutil.c **** 
4123:fltk-1.3.4-1/png/pngrutil.c ****    /* Start of interlace block */
4124:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_start[7] = {0, 4, 0, 2, 0, 1, 0};
 12889              		.loc 1 4124 4 is_stmt 1 view .LVU4029
4125:fltk-1.3.4-1/png/pngrutil.c **** 
4126:fltk-1.3.4-1/png/pngrutil.c ****    /* Offset to next interlace block */
4127:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_inc[7] = {8, 8, 4, 4, 2, 2, 1};
 12890              		.loc 1 4127 4 view .LVU4030
4128:fltk-1.3.4-1/png/pngrutil.c **** 
4129:fltk-1.3.4-1/png/pngrutil.c ****    /* Start of interlace block in the y direction */
4130:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_ystart[7] = {0, 0, 4, 0, 2, 0, 1};
 12891              		.loc 1 4130 4 view .LVU4031
4131:fltk-1.3.4-1/png/pngrutil.c **** 
4132:fltk-1.3.4-1/png/pngrutil.c ****    /* Offset to next interlace block in the y direction */
4133:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_yinc[7] = {8, 8, 8, 4, 4, 2, 2};
 12892              		.loc 1 4133 4 view .LVU4032
4134:fltk-1.3.4-1/png/pngrutil.c **** 
4135:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_read_finish_row");
 12893              		.loc 1 4135 4 view .LVU4033
4136:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->row_number++;
 12894              		.loc 1 4136 4 view .LVU4034
 12895              		.loc 1 4136 23 is_stmt 0 view .LVU4035
 12896 0004 8B871402 		movl	532(%rdi), %eax
 12896      0000
 12897 000a 83C001   		addl	$1, %eax
 12898 000d 89871402 		movl	%eax, 532(%rdi)
 12898      0000
4137:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->row_number < png_ptr->num_rows)
 12899              		.loc 1 4137 4 is_stmt 1 view .LVU4036
 12900              		.loc 1 4137 7 is_stmt 0 view .LVU4037
 12901 0013 3B870002 		cmpl	512(%rdi), %eax
 12901      0000
 12902 0019 0F820101 		jb	.L1184
 12902      0000
4120:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
 12903              		.loc 1 4120 1 view .LVU4038
 12904 001f 4155     		pushq	%r13
 12905              		.cfi_def_cfa_offset 16
 12906              		.cfi_offset 13, -16
 12907 0021 4154     		pushq	%r12
 12908              		.cfi_def_cfa_offset 24
 12909              		.cfi_offset 12, -24
 12910 0023 55       		pushq	%rbp
 12911              		.cfi_def_cfa_offset 32
 12912              		.cfi_offset 6, -32
 12913 0024 4889FD   		movq	%rdi, %rbp
4138:fltk-1.3.4-1/png/pngrutil.c ****       return;
4139:fltk-1.3.4-1/png/pngrutil.c **** 
4140:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->interlaced != 0)
 12914              		.loc 1 4140 4 is_stmt 1 view .LVU4039
4120:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
 12915              		.loc 1 4120 1 is_stmt 0 view .LVU4040
 12916 0027 53       		pushq	%rbx
 12917              		.cfi_def_cfa_offset 40
 12918              		.cfi_offset 3, -40
 12919 0028 4883EC08 		subq	$8, %rsp
 12920              		.cfi_def_cfa_offset 48
 12921              		.loc 1 4140 7 view .LVU4041
 12922 002c 80BF7402 		cmpb	$0, 628(%rdi)
 12922      000000
 12923 0033 0F84CD00 		je	.L1178
 12923      0000
4141:fltk-1.3.4-1/png/pngrutil.c ****    {
4142:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->row_number = 0;
 12924              		.loc 1 4142 7 is_stmt 1 view .LVU4042
4143:fltk-1.3.4-1/png/pngrutil.c **** 
4144:fltk-1.3.4-1/png/pngrutil.c ****       /* TO DO: don't do this if prev_row isn't needed (requires
4145:fltk-1.3.4-1/png/pngrutil.c ****        * read-ahead of the next row's filter byte.
4146:fltk-1.3.4-1/png/pngrutil.c ****        */
4147:fltk-1.3.4-1/png/pngrutil.c ****       memset(png_ptr->prev_row, 0, png_ptr->rowbytes + 1);
 12925              		.loc 1 4147 7 is_stmt 0 view .LVU4043
 12926 0039 488B8708 		movq	520(%rdi), %rax
 12926      020000
 12927              	.LBB446:
 12928              	.LBB447:
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 12929              		.loc 2 71 10 view .LVU4044
 12930 0040 31F6     		xorl	%esi, %esi
 12931              	.LBE447:
 12932              	.LBE446:
4142:fltk-1.3.4-1/png/pngrutil.c **** 
 12933              		.loc 1 4142 27 view .LVU4045
 12934 0042 C7871402 		movl	$0, 532(%rdi)
 12934      00000000 
 12934      0000
 12935              		.loc 1 4147 7 is_stmt 1 view .LVU4046
 12936              	.LVL1437:
 12937              	.LBB451:
 12938              	.LBI446:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 12939              		.loc 2 59 1 view .LVU4047
 12940              	.LBB448:
 12941              		.loc 2 71 3 view .LVU4048
 12942              	.LBE448:
 12943              	.LBE451:
4148:fltk-1.3.4-1/png/pngrutil.c **** 
4149:fltk-1.3.4-1/png/pngrutil.c ****       do
4150:fltk-1.3.4-1/png/pngrutil.c ****       {
4151:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->pass++;
4152:fltk-1.3.4-1/png/pngrutil.c **** 
4153:fltk-1.3.4-1/png/pngrutil.c ****          if (png_ptr->pass >= 7)
4154:fltk-1.3.4-1/png/pngrutil.c ****             break;
4155:fltk-1.3.4-1/png/pngrutil.c **** 
4156:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->iwidth = (png_ptr->width +
4157:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass] - 1 -
4158:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_start[png_ptr->pass]) /
4159:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass];
4160:fltk-1.3.4-1/png/pngrutil.c **** 
4161:fltk-1.3.4-1/png/pngrutil.c ****          if ((png_ptr->transformations & PNG_INTERLACE) == 0)
4162:fltk-1.3.4-1/png/pngrutil.c ****          {
4163:fltk-1.3.4-1/png/pngrutil.c ****             png_ptr->num_rows = (png_ptr->height +
4164:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_yinc[png_ptr->pass] - 1 -
 12944              		.loc 1 4164 30 is_stmt 0 view .LVU4049
 12945 004c 4C8D2D00 		leaq	png_pass_yinc.7425(%rip), %r13
 12945      000000
 12946              	.LBB452:
 12947              	.LBB449:
 12948              		.loc 2 71 10 view .LVU4050
 12949 0053 488BBF20 		movq	544(%rdi), %rdi
 12949      020000
 12950              	.LVL1438:
 12951              		.loc 2 71 10 view .LVU4051
 12952              	.LBE449:
 12953              	.LBE452:
4165:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_ystart[png_ptr->pass]) /
 12954              		.loc 1 4165 32 view .LVU4052
 12955 005a 4C8D2500 		leaq	png_pass_ystart.7424(%rip), %r12
 12955      000000
4147:fltk-1.3.4-1/png/pngrutil.c **** 
 12956              		.loc 1 4147 7 view .LVU4053
 12957 0061 488D5001 		leaq	1(%rax), %rdx
 12958              	.LVL1439:
 12959              	.LBB453:
 12960              	.LBB450:
 12961              		.loc 2 71 10 view .LVU4054
 12962 0065 E8000000 		call	memset@PLT
 12962      00
 12963              	.LVL1440:
 12964              		.loc 2 71 10 view .LVU4055
 12965 006a 0FB68575 		movzbl	629(%rbp), %eax
 12965      020000
 12966              	.LBE450:
 12967              	.LBE453:
4157:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_start[png_ptr->pass]) /
 12968              		.loc 1 4157 25 view .LVU4056
 12969 0071 4C8D1D00 		leaq	png_pass_inc.7423(%rip), %r11
 12969      000000
4158:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass];
 12970              		.loc 1 4158 27 view .LVU4057
 12971 0078 4C8D1500 		leaq	png_pass_start.7422(%rip), %r10
 12971      000000
 12972 007f 8D4801   		leal	1(%rax), %ecx
 12973 0082 0FB6C9   		movzbl	%cl, %ecx
 12974              	.LVL1441:
 12975              		.p2align 4,,10
 12976 0085 0F1F00   		.p2align 3
 12977              	.L1182:
4149:fltk-1.3.4-1/png/pngrutil.c ****       {
 12978              		.loc 1 4149 7 is_stmt 1 view .LVU4058
4151:fltk-1.3.4-1/png/pngrutil.c **** 
 12979              		.loc 1 4151 10 view .LVU4059
 12980 0088 89CB     		movl	%ecx, %ebx
4153:fltk-1.3.4-1/png/pngrutil.c ****             break;
 12981              		.loc 1 4153 10 view .LVU4060
4153:fltk-1.3.4-1/png/pngrutil.c ****             break;
 12982              		.loc 1 4153 13 is_stmt 0 view .LVU4061
 12983 008a 80F906   		cmpb	$6, %cl
 12984 008d 7771     		ja	.L1179
4156:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass] - 1 -
 12985              		.loc 1 4156 10 is_stmt 1 view .LVU4062
4157:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_start[png_ptr->pass]) /
 12986              		.loc 1 4157 25 is_stmt 0 view .LVU4063
 12987 008f 450FB60C 		movzbl	(%r11,%rcx), %r9d
 12987      0B
4157:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_start[png_ptr->pass]) /
 12988              		.loc 1 4157 45 view .LVU4064
 12989 0094 8B85F801 		movl	504(%rbp), %eax
 12989      0000
4158:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass];
 12990              		.loc 1 4158 44 view .LVU4065
 12991 009a 31D2     		xorl	%edx, %edx
4157:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_start[png_ptr->pass]) /
 12992              		.loc 1 4157 45 view .LVU4066
 12993 009c 418D7C01 		leal	-1(%r9,%rax), %edi
 12993      FF
4158:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass];
 12994              		.loc 1 4158 27 view .LVU4067
 12995 00a1 410FB604 		movzbl	(%r10,%rcx), %eax
 12995      0A
4157:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_start[png_ptr->pass]) /
 12996              		.loc 1 4157 45 view .LVU4068
 12997 00a6 29C7     		subl	%eax, %edi
4158:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass];
 12998              		.loc 1 4158 44 view .LVU4069
 12999 00a8 89F8     		movl	%edi, %eax
 13000 00aa 41F7F1   		divl	%r9d
4156:fltk-1.3.4-1/png/pngrutil.c ****             png_pass_inc[png_ptr->pass] - 1 -
 13001              		.loc 1 4156 26 view .LVU4070
 13002 00ad 89851002 		movl	%eax, 528(%rbp)
 13002      0000
4161:fltk-1.3.4-1/png/pngrutil.c ****          {
 13003              		.loc 1 4161 10 is_stmt 1 view .LVU4071
4161:fltk-1.3.4-1/png/pngrutil.c ****          {
 13004              		.loc 1 4161 13 is_stmt 0 view .LVU4072
 13005 00b3 F6853401 		testb	$2, 308(%rbp)
 13005      000002
 13006 00ba 756C     		jne	.L1187
4163:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_yinc[png_ptr->pass] - 1 -
 13007              		.loc 1 4163 13 is_stmt 1 view .LVU4073
4164:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_ystart[png_ptr->pass]) /
 13008              		.loc 1 4164 30 is_stmt 0 view .LVU4074
 13009 00bc 450FB644 		movzbl	0(%r13,%rcx), %r8d
 13009      0D00
4164:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_ystart[png_ptr->pass]) /
 13010              		.loc 1 4164 50 view .LVU4075
 13011 00c2 8B85FC01 		movl	508(%rbp), %eax
 13011      0000
 13012              		.loc 1 4165 49 view .LVU4076
 13013 00c8 31D2     		xorl	%edx, %edx
4164:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_ystart[png_ptr->pass]) /
 13014              		.loc 1 4164 50 view .LVU4077
 13015 00ca 418D7400 		leal	-1(%r8,%rax), %esi
 13015      FF
 13016              		.loc 1 4165 32 view .LVU4078
 13017 00cf 410FB604 		movzbl	(%r12,%rcx), %eax
 13017      0C
 13018 00d4 4883C101 		addq	$1, %rcx
4164:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_ystart[png_ptr->pass]) /
 13019              		.loc 1 4164 50 view .LVU4079
 13020 00d8 29C6     		subl	%eax, %esi
 13021              		.loc 1 4165 49 view .LVU4080
 13022 00da 89F0     		movl	%esi, %eax
 13023 00dc 41F7F0   		divl	%r8d
4163:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_yinc[png_ptr->pass] - 1 -
 13024              		.loc 1 4163 31 view .LVU4081
 13025 00df 89850002 		movl	%eax, 512(%rbp)
 13025      0000
4166:fltk-1.3.4-1/png/pngrutil.c ****                 png_pass_yinc[png_ptr->pass];
4167:fltk-1.3.4-1/png/pngrutil.c ****          }
4168:fltk-1.3.4-1/png/pngrutil.c **** 
4169:fltk-1.3.4-1/png/pngrutil.c ****          else  /* if (png_ptr->transformations & PNG_INTERLACE) */
4170:fltk-1.3.4-1/png/pngrutil.c ****             break; /* libpng deinterlacing sees every row */
4171:fltk-1.3.4-1/png/pngrutil.c **** 
4172:fltk-1.3.4-1/png/pngrutil.c ****       } while (png_ptr->num_rows == 0 || png_ptr->iwidth == 0);
 13026              		.loc 1 4172 15 is_stmt 1 view .LVU4082
 13027              		.loc 1 4172 39 is_stmt 0 view .LVU4083
 13028 00e5 4139F0   		cmpl	%esi, %r8d
 13029 00e8 779E     		ja	.L1182
 13030 00ea 4139F9   		cmpl	%edi, %r9d
 13031 00ed 7799     		ja	.L1182
 13032 00ef 889D7502 		movb	%bl, 629(%rbp)
 13032      0000
4173:fltk-1.3.4-1/png/pngrutil.c **** 
4174:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->pass < 7)
4175:fltk-1.3.4-1/png/pngrutil.c ****          return;
4176:fltk-1.3.4-1/png/pngrutil.c ****    }
4177:fltk-1.3.4-1/png/pngrutil.c **** 
4178:fltk-1.3.4-1/png/pngrutil.c ****    /* Here after at the end of the last row of the last pass. */
4179:fltk-1.3.4-1/png/pngrutil.c ****    png_read_finish_IDAT(png_ptr);
4180:fltk-1.3.4-1/png/pngrutil.c **** }
 13033              		.loc 1 4180 1 view .LVU4084
 13034 00f5 4883C408 		addq	$8, %rsp
 13035              		.cfi_remember_state
 13036              		.cfi_def_cfa_offset 40
 13037 00f9 5B       		popq	%rbx
 13038              		.cfi_def_cfa_offset 32
 13039 00fa 5D       		popq	%rbp
 13040              		.cfi_def_cfa_offset 24
 13041              	.LVL1442:
 13042              		.loc 1 4180 1 view .LVU4085
 13043 00fb 415C     		popq	%r12
 13044              		.cfi_def_cfa_offset 16
 13045 00fd 415D     		popq	%r13
 13046              		.cfi_def_cfa_offset 8
 13047 00ff C3       		ret
 13048              	.LVL1443:
 13049              		.p2align 4,,10
 13050              		.p2align 3
 13051              	.L1179:
 13052              		.cfi_restore_state
 13053              		.loc 1 4180 1 view .LVU4086
 13054 0100 888D7502 		movb	%cl, 629(%rbp)
 13054      0000
 13055              	.L1178:
4179:fltk-1.3.4-1/png/pngrutil.c **** }
 13056              		.loc 1 4179 4 is_stmt 1 view .LVU4087
 13057              		.loc 1 4180 1 is_stmt 0 view .LVU4088
 13058 0106 4883C408 		addq	$8, %rsp
 13059              		.cfi_def_cfa_offset 40
4179:fltk-1.3.4-1/png/pngrutil.c **** }
 13060              		.loc 1 4179 4 view .LVU4089
 13061 010a 4889EF   		movq	%rbp, %rdi
 13062              		.loc 1 4180 1 view .LVU4090
 13063 010d 5B       		popq	%rbx
 13064              		.cfi_restore 3
 13065              		.cfi_def_cfa_offset 32
 13066 010e 5D       		popq	%rbp
 13067              		.cfi_restore 6
 13068              		.cfi_def_cfa_offset 24
 13069              	.LVL1444:
 13070              		.loc 1 4180 1 view .LVU4091
 13071 010f 415C     		popq	%r12
 13072              		.cfi_restore 12
 13073              		.cfi_def_cfa_offset 16
 13074 0111 415D     		popq	%r13
 13075              		.cfi_restore 13
 13076              		.cfi_def_cfa_offset 8
4179:fltk-1.3.4-1/png/pngrutil.c **** }
 13077              		.loc 1 4179 4 view .LVU4092
 13078 0113 E9000000 		jmp	png_read_finish_IDAT
 13078      00
 13079              	.LVL1445:
 13080 0118 0F1F8400 		.p2align 4,,10
 13080      00000000 
 13081              		.p2align 3
 13082              	.L1184:
4179:fltk-1.3.4-1/png/pngrutil.c **** }
 13083              		.loc 1 4179 4 view .LVU4093
 13084 0120 C3       		ret
 13085              	.LVL1446:
 13086              		.p2align 4,,10
 13087 0121 0F1F8000 		.p2align 3
 13087      000000
 13088              	.L1187:
 13089              		.cfi_def_cfa_offset 48
 13090              		.cfi_offset 3, -40
 13091              		.cfi_offset 6, -32
 13092              		.cfi_offset 12, -24
 13093              		.cfi_offset 13, -16
4179:fltk-1.3.4-1/png/pngrutil.c **** }
 13094              		.loc 1 4179 4 view .LVU4094
 13095 0128 888D7502 		movb	%cl, 629(%rbp)
 13095      0000
 13096              		.loc 1 4180 1 view .LVU4095
 13097 012e 4883C408 		addq	$8, %rsp
 13098              		.cfi_def_cfa_offset 40
 13099 0132 5B       		popq	%rbx
 13100              		.cfi_def_cfa_offset 32
 13101 0133 5D       		popq	%rbp
 13102              		.cfi_def_cfa_offset 24
 13103              	.LVL1447:
 13104              		.loc 1 4180 1 view .LVU4096
 13105 0134 415C     		popq	%r12
 13106              		.cfi_def_cfa_offset 16
 13107 0136 415D     		popq	%r13
 13108              		.cfi_def_cfa_offset 8
 13109 0138 C3       		ret
 13110              		.cfi_endproc
 13111              	.LFE90:
 13113              		.section	.rodata.png_read_start_row.str1.8,"aMS",@progbits,1
 13114              		.align 8
 13115              	.LC56:
 13116 0000 526F7720 		.string	"Row has too many bytes to allocate in memory"
 13116      68617320 
 13116      746F6F20 
 13116      6D616E79 
 13116      20627974 
 13117              		.section	.text.png_read_start_row,"ax",@progbits
 13118              		.p2align 4
 13119              		.globl	png_read_start_row
 13121              	png_read_start_row:
 13122              	.LVL1448:
 13123              	.LFB91:
4181:fltk-1.3.4-1/png/pngrutil.c **** #endif /* SEQUENTIAL_READ */
4182:fltk-1.3.4-1/png/pngrutil.c **** 
4183:fltk-1.3.4-1/png/pngrutil.c **** void /* PRIVATE */
4184:fltk-1.3.4-1/png/pngrutil.c **** png_read_start_row(png_structrp png_ptr)
4185:fltk-1.3.4-1/png/pngrutil.c **** {
 13124              		.loc 1 4185 1 is_stmt 1 view -0
 13125              		.cfi_startproc
 13126              		.loc 1 4185 1 is_stmt 0 view .LVU4098
 13127 0000 F30F1EFA 		endbr64
4186:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
4187:fltk-1.3.4-1/png/pngrutil.c **** 
4188:fltk-1.3.4-1/png/pngrutil.c ****    /* Start of interlace block */
4189:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_start[7] = {0, 4, 0, 2, 0, 1, 0};
 13128              		.loc 1 4189 4 is_stmt 1 view .LVU4099
4190:fltk-1.3.4-1/png/pngrutil.c **** 
4191:fltk-1.3.4-1/png/pngrutil.c ****    /* Offset to next interlace block */
4192:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_inc[7] = {8, 8, 4, 4, 2, 2, 1};
 13129              		.loc 1 4192 4 view .LVU4100
4193:fltk-1.3.4-1/png/pngrutil.c **** 
4194:fltk-1.3.4-1/png/pngrutil.c ****    /* Start of interlace block in the y direction */
4195:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_ystart[7] = {0, 0, 4, 0, 2, 0, 1};
 13130              		.loc 1 4195 4 view .LVU4101
4196:fltk-1.3.4-1/png/pngrutil.c **** 
4197:fltk-1.3.4-1/png/pngrutil.c ****    /* Offset to next interlace block in the y direction */
4198:fltk-1.3.4-1/png/pngrutil.c ****    static PNG_CONST png_byte png_pass_yinc[7] = {8, 8, 8, 4, 4, 2, 2};
 13131              		.loc 1 4198 4 view .LVU4102
4199:fltk-1.3.4-1/png/pngrutil.c **** 
4200:fltk-1.3.4-1/png/pngrutil.c ****    int max_pixel_depth;
 13132              		.loc 1 4200 4 view .LVU4103
4201:fltk-1.3.4-1/png/pngrutil.c ****    png_size_t row_bytes;
 13133              		.loc 1 4201 4 view .LVU4104
4202:fltk-1.3.4-1/png/pngrutil.c **** 
4203:fltk-1.3.4-1/png/pngrutil.c ****    png_debug(1, "in png_read_start_row");
 13134              		.loc 1 4203 4 view .LVU4105
4204:fltk-1.3.4-1/png/pngrutil.c **** 
4205:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_TRANSFORMS_SUPPORTED
4206:fltk-1.3.4-1/png/pngrutil.c ****    png_init_read_transformations(png_ptr);
 13135              		.loc 1 4206 4 view .LVU4106
4185:fltk-1.3.4-1/png/pngrutil.c ****    /* Arrays to facilitate easy interlacing - use pass (0 - 6) as index */
 13136              		.loc 1 4185 1 is_stmt 0 view .LVU4107
 13137 0004 55       		pushq	%rbp
 13138              		.cfi_def_cfa_offset 16
 13139              		.cfi_offset 6, -16
 13140 0005 4889FD   		movq	%rdi, %rbp
 13141 0008 53       		pushq	%rbx
 13142              		.cfi_def_cfa_offset 24
 13143              		.cfi_offset 3, -24
 13144 0009 4883EC08 		subq	$8, %rsp
 13145              		.cfi_def_cfa_offset 32
 13146              		.loc 1 4206 4 view .LVU4108
 13147 000d E8000000 		call	png_init_read_transformations@PLT
 13147      00
 13148              	.LVL1449:
4207:fltk-1.3.4-1/png/pngrutil.c **** #endif
4208:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->interlaced != 0)
 13149              		.loc 1 4208 4 is_stmt 1 view .LVU4109
 13150              		.loc 1 4208 7 is_stmt 0 view .LVU4110
 13151 0012 80BD7402 		cmpb	$0, 628(%rbp)
 13151      000000
 13152 0019 0F842103 		je	.L1189
 13152      0000
4209:fltk-1.3.4-1/png/pngrutil.c ****    {
4210:fltk-1.3.4-1/png/pngrutil.c ****       if ((png_ptr->transformations & PNG_INTERLACE) == 0)
 13153              		.loc 1 4210 7 is_stmt 1 view .LVU4111
 13154 001f 8B85FC01 		movl	508(%rbp), %eax
 13154      0000
 13155              		.loc 1 4210 19 is_stmt 0 view .LVU4112
 13156 0025 8BB53401 		movl	308(%rbp), %esi
 13156      0000
4211:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->num_rows = (png_ptr->height + png_pass_yinc[0] - 1 -
4212:fltk-1.3.4-1/png/pngrutil.c ****              png_pass_ystart[0]) / png_pass_yinc[0];
4213:fltk-1.3.4-1/png/pngrutil.c **** 
4214:fltk-1.3.4-1/png/pngrutil.c ****       else
4215:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->num_rows = png_ptr->height;
4216:fltk-1.3.4-1/png/pngrutil.c **** 
4217:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->iwidth = (png_ptr->width +
4218:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_inc[png_ptr->pass] - 1 -
4219:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_start[png_ptr->pass]) /
 13157              		.loc 1 4219 25 view .LVU4113
 13158 002b 4C8D0500 		leaq	png_pass_start.7431(%rip), %r8
 13158      000000
4217:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_inc[png_ptr->pass] - 1 -
 13159              		.loc 1 4217 33 view .LVU4114
 13160 0032 8B8DF801 		movl	504(%rbp), %ecx
 13160      0000
4212:fltk-1.3.4-1/png/pngrutil.c **** 
 13161              		.loc 1 4212 34 view .LVU4115
 13162 0038 8D5007   		leal	7(%rax), %edx
 13163 003b C1EA03   		shrl	$3, %edx
 13164 003e 40F6C602 		testb	$2, %sil
 13165 0042 0F44C2   		cmove	%edx, %eax
4218:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_start[png_ptr->pass]) /
 13166              		.loc 1 4218 23 view .LVU4116
 13167 0045 0FB69575 		movzbl	629(%rbp), %edx
 13167      020000
 13168 004c 89850002 		movl	%eax, 512(%rbp)
 13168      0000
4217:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_inc[png_ptr->pass] - 1 -
 13169              		.loc 1 4217 7 is_stmt 1 view .LVU4117
4218:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_start[png_ptr->pass]) /
 13170              		.loc 1 4218 23 is_stmt 0 view .LVU4118
 13171 0052 488D0500 		leaq	png_pass_inc.7432(%rip), %rax
 13171      000000
 13172 0059 0FB63C10 		movzbl	(%rax,%rdx), %edi
 13173              		.loc 1 4219 25 view .LVU4119
 13174 005d 410FB614 		movzbl	(%r8,%rdx), %edx
 13174      10
4218:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_start[png_ptr->pass]) /
 13175              		.loc 1 4218 43 view .LVU4120
 13176 0062 8D4439FF 		leal	-1(%rcx,%rdi), %eax
 13177 0066 29D0     		subl	%edx, %eax
 13178              		.loc 1 4219 42 view .LVU4121
 13179 0068 31D2     		xorl	%edx, %edx
 13180 006a F7F7     		divl	%edi
4217:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_inc[png_ptr->pass] - 1 -
 13181              		.loc 1 4217 23 view .LVU4122
 13182 006c 89851002 		movl	%eax, 528(%rbp)
 13182      0000
 13183              	.L1191:
4220:fltk-1.3.4-1/png/pngrutil.c ****           png_pass_inc[png_ptr->pass];
4221:fltk-1.3.4-1/png/pngrutil.c ****    }
4222:fltk-1.3.4-1/png/pngrutil.c **** 
4223:fltk-1.3.4-1/png/pngrutil.c ****    else
4224:fltk-1.3.4-1/png/pngrutil.c ****    {
4225:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->num_rows = png_ptr->height;
4226:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->iwidth = png_ptr->width;
4227:fltk-1.3.4-1/png/pngrutil.c ****    }
4228:fltk-1.3.4-1/png/pngrutil.c **** 
4229:fltk-1.3.4-1/png/pngrutil.c ****    max_pixel_depth = png_ptr->pixel_depth;
 13184              		.loc 1 4229 4 is_stmt 1 view .LVU4123
 13185              		.loc 1 4229 20 is_stmt 0 view .LVU4124
 13186 0072 0FB6857A 		movzbl	634(%rbp), %eax
 13186      020000
 13187              	.LVL1450:
4230:fltk-1.3.4-1/png/pngrutil.c **** 
4231:fltk-1.3.4-1/png/pngrutil.c ****    /* WARNING: * png_read_transform_info (pngrtran.c) performs a simpler set of
4232:fltk-1.3.4-1/png/pngrutil.c ****     * calculations to calculate the final pixel depth, then
4233:fltk-1.3.4-1/png/pngrutil.c ****     * png_do_read_transforms actually does the transforms.  This means that the
4234:fltk-1.3.4-1/png/pngrutil.c ****     * code which effectively calculates this value is actually repeated in three
4235:fltk-1.3.4-1/png/pngrutil.c ****     * separate places.  They must all match.  Innocent changes to the order of
4236:fltk-1.3.4-1/png/pngrutil.c ****     * transformations can and will break libpng in a way that causes memory
4237:fltk-1.3.4-1/png/pngrutil.c ****     * overwrites.
4238:fltk-1.3.4-1/png/pngrutil.c ****     *
4239:fltk-1.3.4-1/png/pngrutil.c ****     * TODO: fix this.
4240:fltk-1.3.4-1/png/pngrutil.c ****     */
4241:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_PACK_SUPPORTED
4242:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->transformations & PNG_PACK) != 0 && png_ptr->bit_depth < 8)
 13188              		.loc 1 4242 4 is_stmt 1 view .LVU4125
 13189              		.loc 1 4242 7 is_stmt 0 view .LVU4126
 13190 0079 40F6C604 		testb	$4, %sil
 13191 007d 740F     		je	.L1192
4243:fltk-1.3.4-1/png/pngrutil.c ****       max_pixel_depth = 8;
 13192              		.loc 1 4243 23 discriminator 1 view .LVU4127
 13193 007f 80BD7802 		cmpb	$7, 632(%rbp)
 13193      000007
 13194 0086 BA080000 		movl	$8, %edx
 13194      00
 13195 008b 0F46C2   		cmovbe	%edx, %eax
 13196              	.LVL1451:
 13197              	.L1192:
4244:fltk-1.3.4-1/png/pngrutil.c **** #endif
4245:fltk-1.3.4-1/png/pngrutil.c **** 
4246:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
4247:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->transformations & PNG_EXPAND) != 0)
 13198              		.loc 1 4247 4 is_stmt 1 view .LVU4128
 13199 008e 89F2     		movl	%esi, %edx
 13200 0090 81E20002 		andl	$512, %edx
 13200      0000
 13201              		.loc 1 4247 7 is_stmt 0 view .LVU4129
 13202 0096 F7C60010 		testl	$4096, %esi
 13202      0000
 13203 009c 7442     		je	.L1193
4248:fltk-1.3.4-1/png/pngrutil.c ****    {
4249:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 13204              		.loc 1 4249 7 is_stmt 1 view .LVU4130
 13205              		.loc 1 4249 18 is_stmt 0 view .LVU4131
 13206 009e 0FB6BD77 		movzbl	631(%rbp), %edi
 13206      020000
 13207              		.loc 1 4249 10 view .LVU4132
 13208 00a5 4080FF03 		cmpb	$3, %dil
 13209 00a9 0F844103 		je	.L1248
 13209      0000
4250:fltk-1.3.4-1/png/pngrutil.c ****       {
4251:fltk-1.3.4-1/png/pngrutil.c ****          if (png_ptr->num_trans != 0)
4252:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 32;
4253:fltk-1.3.4-1/png/pngrutil.c **** 
4254:fltk-1.3.4-1/png/pngrutil.c ****          else
4255:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 24;
4256:fltk-1.3.4-1/png/pngrutil.c ****       }
4257:fltk-1.3.4-1/png/pngrutil.c **** 
4258:fltk-1.3.4-1/png/pngrutil.c ****       else if (png_ptr->color_type == PNG_COLOR_TYPE_GRAY)
 13210              		.loc 1 4258 12 is_stmt 1 view .LVU4133
 13211              		.loc 1 4258 15 is_stmt 0 view .LVU4134
 13212 00af 4084FF   		testb	%dil, %dil
 13213 00b2 0F856803 		jne	.L1196
 13213      0000
4259:fltk-1.3.4-1/png/pngrutil.c ****       {
4260:fltk-1.3.4-1/png/pngrutil.c ****          if (max_pixel_depth < 8)
 13214              		.loc 1 4260 10 is_stmt 1 view .LVU4135
 13215 00b8 83F808   		cmpl	$8, %eax
 13216 00bb BF080000 		movl	$8, %edi
 13216      00
 13217 00c0 0F4CC7   		cmovl	%edi, %eax
 13218              	.LVL1452:
4261:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 8;
4262:fltk-1.3.4-1/png/pngrutil.c **** 
4263:fltk-1.3.4-1/png/pngrutil.c ****          if (png_ptr->num_trans != 0)
 13219              		.loc 1 4263 10 view .LVU4136
 13220              		.loc 1 4263 13 is_stmt 0 view .LVU4137
 13221 00c3 6683BD70 		cmpw	$0, 624(%rbp)
 13221      02000000 
 13222 00cb 0F842F03 		je	.L1195
 13222      0000
4264:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth *= 2;
 13223              		.loc 1 4264 13 is_stmt 1 view .LVU4138
 13224              		.loc 1 4264 29 is_stmt 0 view .LVU4139
 13225 00d1 01C0     		addl	%eax, %eax
 13226              	.LVL1453:
 13227              		.loc 1 4264 29 view .LVU4140
 13228 00d3 E9280300 		jmp	.L1195
 13228      00
 13229 00d8 0F1F8400 		.p2align 4,,10
 13229      00000000 
 13230              		.p2align 3
 13231              	.L1193:
4265:fltk-1.3.4-1/png/pngrutil.c ****       }
4266:fltk-1.3.4-1/png/pngrutil.c **** 
4267:fltk-1.3.4-1/png/pngrutil.c ****       else if (png_ptr->color_type == PNG_COLOR_TYPE_RGB)
4268:fltk-1.3.4-1/png/pngrutil.c ****       {
4269:fltk-1.3.4-1/png/pngrutil.c ****          if (png_ptr->num_trans != 0)
4270:fltk-1.3.4-1/png/pngrutil.c ****          {
4271:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth *= 4;
4272:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth /= 3;
4273:fltk-1.3.4-1/png/pngrutil.c ****          }
4274:fltk-1.3.4-1/png/pngrutil.c ****       }
4275:fltk-1.3.4-1/png/pngrutil.c ****    }
4276:fltk-1.3.4-1/png/pngrutil.c **** #endif
4277:fltk-1.3.4-1/png/pngrutil.c **** 
4278:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_EXPAND_16_SUPPORTED
4279:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->transformations & PNG_EXPAND_16) != 0)
 13232              		.loc 1 4279 4 is_stmt 1 view .LVU4141
 13233              		.loc 1 4279 7 is_stmt 0 view .LVU4142
 13234 00e0 85D2     		testl	%edx, %edx
 13235 00e2 0F852002 		jne	.L1220
 13235      0000
 13236              	.L1197:
4280:fltk-1.3.4-1/png/pngrutil.c ****    {
4281:fltk-1.3.4-1/png/pngrutil.c **** #     ifdef PNG_READ_EXPAND_SUPPORTED
4282:fltk-1.3.4-1/png/pngrutil.c ****          /* In fact it is an error if it isn't supported, but checking is
4283:fltk-1.3.4-1/png/pngrutil.c ****           * the safe way.
4284:fltk-1.3.4-1/png/pngrutil.c ****           */
4285:fltk-1.3.4-1/png/pngrutil.c ****          if ((png_ptr->transformations & PNG_EXPAND) != 0)
4286:fltk-1.3.4-1/png/pngrutil.c ****          {
4287:fltk-1.3.4-1/png/pngrutil.c ****             if (png_ptr->bit_depth < 16)
4288:fltk-1.3.4-1/png/pngrutil.c ****                max_pixel_depth *= 2;
4289:fltk-1.3.4-1/png/pngrutil.c ****          }
4290:fltk-1.3.4-1/png/pngrutil.c ****          else
4291:fltk-1.3.4-1/png/pngrutil.c **** #     endif
4292:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->transformations &= ~PNG_EXPAND_16;
4293:fltk-1.3.4-1/png/pngrutil.c ****    }
4294:fltk-1.3.4-1/png/pngrutil.c **** #endif
4295:fltk-1.3.4-1/png/pngrutil.c **** 
4296:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_FILLER_SUPPORTED
4297:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->transformations & (PNG_FILLER)) != 0)
 13237              		.loc 1 4297 4 is_stmt 1 view .LVU4143
 13238              		.loc 1 4297 7 is_stmt 0 view .LVU4144
 13239 00e8 89F7     		movl	%esi, %edi
 13240 00ea 81E70080 		andl	$32768, %edi
 13240      0000
 13241 00f0 741F     		je	.L1198
4298:fltk-1.3.4-1/png/pngrutil.c ****    {
4299:fltk-1.3.4-1/png/pngrutil.c ****       if (png_ptr->color_type == PNG_COLOR_TYPE_GRAY)
 13242              		.loc 1 4299 7 is_stmt 1 view .LVU4145
 13243              		.loc 1 4299 18 is_stmt 0 view .LVU4146
 13244 00f2 0FB69577 		movzbl	631(%rbp), %edx
 13244      020000
 13245              		.loc 1 4299 10 view .LVU4147
 13246 00f9 84D2     		testb	%dl, %dl
 13247 00fb 0F85DF01 		jne	.L1199
 13247      0000
4300:fltk-1.3.4-1/png/pngrutil.c ****       {
4301:fltk-1.3.4-1/png/pngrutil.c ****          if (max_pixel_depth <= 8)
 13248              		.loc 1 4301 10 is_stmt 1 view .LVU4148
4302:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 16;
4303:fltk-1.3.4-1/png/pngrutil.c **** 
4304:fltk-1.3.4-1/png/pngrutil.c ****          else
4305:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 32;
 13249              		.loc 1 4305 29 is_stmt 0 view .LVU4149
 13250 0101 83F809   		cmpl	$9, %eax
 13251 0104 BA100000 		movl	$16, %edx
 13251      00
 13252 0109 B8200000 		movl	$32, %eax
 13252      00
 13253              	.LVL1454:
 13254              		.loc 1 4305 29 view .LVU4150
 13255 010e 0F4CC2   		cmovl	%edx, %eax
 13256              	.L1198:
 13257              	.LVL1455:
4306:fltk-1.3.4-1/png/pngrutil.c ****       }
4307:fltk-1.3.4-1/png/pngrutil.c **** 
4308:fltk-1.3.4-1/png/pngrutil.c ****       else if (png_ptr->color_type == PNG_COLOR_TYPE_RGB ||
4309:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
4310:fltk-1.3.4-1/png/pngrutil.c ****       {
4311:fltk-1.3.4-1/png/pngrutil.c ****          if (max_pixel_depth <= 32)
4312:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 32;
4313:fltk-1.3.4-1/png/pngrutil.c **** 
4314:fltk-1.3.4-1/png/pngrutil.c ****          else
4315:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 64;
4316:fltk-1.3.4-1/png/pngrutil.c ****       }
4317:fltk-1.3.4-1/png/pngrutil.c ****    }
4318:fltk-1.3.4-1/png/pngrutil.c **** #endif
4319:fltk-1.3.4-1/png/pngrutil.c **** 
4320:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_GRAY_TO_RGB_SUPPORTED
4321:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->transformations & PNG_GRAY_TO_RGB) != 0)
 13258              		.loc 1 4321 4 is_stmt 1 view .LVU4151
 13259              		.loc 1 4321 7 is_stmt 0 view .LVU4152
 13260 0111 F7C60040 		testl	$16384, %esi
 13260      0000
 13261 0117 0F840301 		je	.L1200
 13261      0000
4322:fltk-1.3.4-1/png/pngrutil.c ****    {
4323:fltk-1.3.4-1/png/pngrutil.c ****       if (
 13262              		.loc 1 4323 7 is_stmt 1 view .LVU4153
 13263              		.loc 1 4323 10 is_stmt 0 view .LVU4154
 13264 011d 6683BD70 		cmpw	$0, 624(%rbp)
 13264      02000000 
 13265 0125 0F845D01 		je	.L1201
 13265      0000
4324:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_EXPAND_SUPPORTED
4325:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->num_trans != 0 &&
 13266              		.loc 1 4325 36 view .LVU4155
 13267 012b F7C60010 		testl	$4096, %esi
 13267      0000
 13268 0131 0F845101 		je	.L1201
 13268      0000
 13269              	.L1202:
4326:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->transformations & PNG_EXPAND) != 0) ||
4327:fltk-1.3.4-1/png/pngrutil.c **** #endif
4328:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_READ_FILLER_SUPPORTED
4329:fltk-1.3.4-1/png/pngrutil.c ****           (png_ptr->transformations & (PNG_FILLER)) != 0 ||
4330:fltk-1.3.4-1/png/pngrutil.c **** #endif
4331:fltk-1.3.4-1/png/pngrutil.c ****           png_ptr->color_type == PNG_COLOR_TYPE_GRAY_ALPHA)
4332:fltk-1.3.4-1/png/pngrutil.c ****       {
4333:fltk-1.3.4-1/png/pngrutil.c ****          if (max_pixel_depth <= 16)
 13270              		.loc 1 4333 10 is_stmt 1 view .LVU4156
 13271              		.loc 1 4333 13 is_stmt 0 view .LVU4157
 13272 0137 83F810   		cmpl	$16, %eax
 13273 013a 0F8FE001 		jg	.L1204
 13273      0000
 13274              	.L1208:
 13275              	.LVL1456:
4334:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 32;
4335:fltk-1.3.4-1/png/pngrutil.c **** 
4336:fltk-1.3.4-1/png/pngrutil.c ****          else
4337:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 64;
4338:fltk-1.3.4-1/png/pngrutil.c ****       }
4339:fltk-1.3.4-1/png/pngrutil.c **** 
4340:fltk-1.3.4-1/png/pngrutil.c ****       else
4341:fltk-1.3.4-1/png/pngrutil.c ****       {
4342:fltk-1.3.4-1/png/pngrutil.c ****          if (max_pixel_depth <= 8)
4343:fltk-1.3.4-1/png/pngrutil.c ****          {
4344:fltk-1.3.4-1/png/pngrutil.c ****             if (png_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
4345:fltk-1.3.4-1/png/pngrutil.c ****                max_pixel_depth = 32;
4346:fltk-1.3.4-1/png/pngrutil.c **** 
4347:fltk-1.3.4-1/png/pngrutil.c ****             else
4348:fltk-1.3.4-1/png/pngrutil.c ****                max_pixel_depth = 24;
4349:fltk-1.3.4-1/png/pngrutil.c ****          }
4350:fltk-1.3.4-1/png/pngrutil.c **** 
4351:fltk-1.3.4-1/png/pngrutil.c ****          else if (png_ptr->color_type == PNG_COLOR_TYPE_RGB_ALPHA)
4352:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 64;
4353:fltk-1.3.4-1/png/pngrutil.c **** 
4354:fltk-1.3.4-1/png/pngrutil.c ****          else
4355:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 48;
4356:fltk-1.3.4-1/png/pngrutil.c ****       }
4357:fltk-1.3.4-1/png/pngrutil.c ****    }
4358:fltk-1.3.4-1/png/pngrutil.c **** #endif
4359:fltk-1.3.4-1/png/pngrutil.c **** 
4360:fltk-1.3.4-1/png/pngrutil.c **** #if defined(PNG_READ_USER_TRANSFORM_SUPPORTED) && \
4361:fltk-1.3.4-1/png/pngrutil.c **** defined(PNG_USER_TRANSFORM_PTR_SUPPORTED)
4362:fltk-1.3.4-1/png/pngrutil.c ****    if ((png_ptr->transformations & PNG_USER_TRANSFORM) != 0)
 13276              		.loc 1 4362 4 is_stmt 1 view .LVU4158
 13277              		.loc 1 4362 7 is_stmt 0 view .LVU4159
 13278 0140 81E60000 		andl	$1048576, %esi
 13278      1000
 13279 0146 0F841403 		je	.L1249
 13279      0000
4345:fltk-1.3.4-1/png/pngrutil.c **** 
 13280              		.loc 1 4345 32 view .LVU4160
 13281 014c B8200000 		movl	$32, %eax
 13281      00
 13282              	.LVL1457:
 13283              	.L1205:
 13284              	.LBB454:
4363:fltk-1.3.4-1/png/pngrutil.c ****    {
4364:fltk-1.3.4-1/png/pngrutil.c ****       int user_pixel_depth = png_ptr->user_transform_depth *
 13285              		.loc 1 4364 7 is_stmt 1 view .LVU4161
4365:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->user_transform_channels;
4366:fltk-1.3.4-1/png/pngrutil.c **** 
4367:fltk-1.3.4-1/png/pngrutil.c ****       if (user_pixel_depth > max_pixel_depth)
 13286              		.loc 1 4367 7 view .LVU4162
4364:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->user_transform_channels;
 13287              		.loc 1 4364 37 is_stmt 0 view .LVU4163
 13288 0151 0FB69528 		movzbl	296(%rbp), %edx
 13288      010000
4365:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->user_transform_channels;
 13289              		.loc 1 4365 17 view .LVU4164
 13290 0158 0FB6B529 		movzbl	297(%rbp), %esi
 13290      010000
4364:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->user_transform_channels;
 13291              		.loc 1 4364 11 view .LVU4165
 13292 015f 0FAFD6   		imull	%esi, %edx
 13293              	.LVL1458:
4364:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->user_transform_channels;
 13294              		.loc 1 4364 11 view .LVU4166
 13295 0162 39D0     		cmpl	%edx, %eax
 13296 0164 0F4CC2   		cmovl	%edx, %eax
 13297              	.LVL1459:
 13298              	.L1210:
4364:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->user_transform_channels;
 13299              		.loc 1 4364 11 view .LVU4167
 13300              	.LBE454:
4368:fltk-1.3.4-1/png/pngrutil.c ****          max_pixel_depth = user_pixel_depth;
4369:fltk-1.3.4-1/png/pngrutil.c ****    }
4370:fltk-1.3.4-1/png/pngrutil.c **** #endif
4371:fltk-1.3.4-1/png/pngrutil.c **** 
4372:fltk-1.3.4-1/png/pngrutil.c ****    /* This value is stored in png_struct and double checked in the row read
4373:fltk-1.3.4-1/png/pngrutil.c ****     * code.
4374:fltk-1.3.4-1/png/pngrutil.c ****     */
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->maximum_pixel_depth = (png_byte)max_pixel_depth;
 13301              		.loc 1 4375 4 is_stmt 1 view .LVU4168
4376:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
4377:fltk-1.3.4-1/png/pngrutil.c **** 
4378:fltk-1.3.4-1/png/pngrutil.c ****    /* Align the width on the next larger 8 pixels.  Mainly used
4379:fltk-1.3.4-1/png/pngrutil.c ****     * for interlacing
4380:fltk-1.3.4-1/png/pngrutil.c ****     */
4381:fltk-1.3.4-1/png/pngrutil.c ****    row_bytes = ((png_ptr->width + 7) & ~((png_uint_32)7));
 13302              		.loc 1 4381 33 is_stmt 0 view .LVU4169
 13303 0167 83C107   		addl	$7, %ecx
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13304              		.loc 1 4375 35 view .LVU4170
 13305 016a 88857E02 		movb	%al, 638(%rbp)
 13305      0000
4376:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13306              		.loc 1 4376 4 is_stmt 1 view .LVU4171
 13307 0170 4863D0   		movslq	%eax, %rdx
4376:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13308              		.loc 1 4376 37 is_stmt 0 view .LVU4172
 13309 0173 C6857F02 		movb	$0, 639(%rbp)
 13309      000000
 13310              		.loc 1 4381 4 is_stmt 1 view .LVU4173
 13311              		.loc 1 4381 14 is_stmt 0 view .LVU4174
 13312 017a 83E1F8   		andl	$-8, %ecx
 13313              	.LVL1460:
4382:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
4383:fltk-1.3.4-1/png/pngrutil.c ****     * for safety's sake
4384:fltk-1.3.4-1/png/pngrutil.c ****     */
4385:fltk-1.3.4-1/png/pngrutil.c ****    row_bytes = PNG_ROWBYTES(max_pixel_depth, row_bytes) +
 13314              		.loc 1 4385 4 is_stmt 1 view .LVU4175
 13315              		.loc 1 4385 57 is_stmt 0 view .LVU4176
 13316 017d 83F807   		cmpl	$7, %eax
 13317 0180 0F8FEA00 		jg	.L1206
 13317      0000
 13318              		.loc 1 4385 16 discriminator 2 view .LVU4177
 13319 0186 480FAFCA 		imulq	%rdx, %rcx
 13320              	.LVL1461:
 13321              		.loc 1 4385 16 discriminator 2 view .LVU4178
 13322 018a 48C1E903 		shrq	$3, %rcx
 13323              		.loc 1 4385 57 discriminator 2 view .LVU4179
 13324 018e 4883C101 		addq	$1, %rcx
 13325              	.LVL1462:
 13326              	.L1212:
4386:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
4387:fltk-1.3.4-1/png/pngrutil.c **** 
4388:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_MAX_MALLOC_64K
4389:fltk-1.3.4-1/png/pngrutil.c ****    if (row_bytes > (png_uint_32)65536L)
4390:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "This image requires a row greater than 64KB");
4391:fltk-1.3.4-1/png/pngrutil.c **** #endif
4392:fltk-1.3.4-1/png/pngrutil.c **** 
4393:fltk-1.3.4-1/png/pngrutil.c ****    if (row_bytes + 48 > png_ptr->old_big_row_buf_size)
 13327              		.loc 1 4393 4 is_stmt 1 view .LVU4180
4386:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13328              		.loc 1 4386 30 is_stmt 0 view .LVU4181
 13329 0192 83C007   		addl	$7, %eax
 13330              	.LVL1463:
4386:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13331              		.loc 1 4386 35 view .LVU4182
 13332 0195 C1F803   		sarl	$3, %eax
 13333              	.LVL1464:
4386:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13334              		.loc 1 4386 35 view .LVU4183
 13335 0198 4898     		cltq
 13336              	.LVL1465:
 13337              		.loc 1 4393 18 view .LVU4184
 13338 019a 488D5C01 		leaq	48(%rcx,%rax), %rbx
 13338      30
 13339              		.loc 1 4393 7 view .LVU4185
 13340 019f 483B9D90 		cmpq	1168(%rbp), %rbx
 13340      040000
 13341 01a6 0F87BC01 		ja	.L1250
 13341      0000
 13342              	.LVL1466:
 13343              	.L1213:
4394:fltk-1.3.4-1/png/pngrutil.c ****    {
4395:fltk-1.3.4-1/png/pngrutil.c ****      png_free(png_ptr, png_ptr->big_row_buf);
4396:fltk-1.3.4-1/png/pngrutil.c ****      png_free(png_ptr, png_ptr->big_prev_row);
4397:fltk-1.3.4-1/png/pngrutil.c **** 
4398:fltk-1.3.4-1/png/pngrutil.c ****      if (png_ptr->interlaced != 0)
4399:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->big_row_buf = (png_bytep)png_calloc(png_ptr,
4400:fltk-1.3.4-1/png/pngrutil.c ****             row_bytes + 48);
4401:fltk-1.3.4-1/png/pngrutil.c **** 
4402:fltk-1.3.4-1/png/pngrutil.c ****      else
4403:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->big_row_buf = (png_bytep)png_malloc(png_ptr, row_bytes + 48);
4404:fltk-1.3.4-1/png/pngrutil.c **** 
4405:fltk-1.3.4-1/png/pngrutil.c ****      png_ptr->big_prev_row = (png_bytep)png_malloc(png_ptr, row_bytes + 48);
4406:fltk-1.3.4-1/png/pngrutil.c **** 
4407:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_ALIGNED_MEMORY_SUPPORTED
4408:fltk-1.3.4-1/png/pngrutil.c ****      /* Use 16-byte aligned memory for row_buf with at least 16 bytes
4409:fltk-1.3.4-1/png/pngrutil.c ****       * of padding before and after row_buf; treat prev_row similarly.
4410:fltk-1.3.4-1/png/pngrutil.c ****       * NOTE: the alignment is to the start of the pixels, one beyond the start
4411:fltk-1.3.4-1/png/pngrutil.c ****       * of the buffer, because of the filter byte.  Prior to libpng 1.5.6 this
4412:fltk-1.3.4-1/png/pngrutil.c ****       * was incorrect; the filter byte was aligned, which had the exact
4413:fltk-1.3.4-1/png/pngrutil.c ****       * opposite effect of that intended.
4414:fltk-1.3.4-1/png/pngrutil.c ****       */
4415:fltk-1.3.4-1/png/pngrutil.c ****      {
4416:fltk-1.3.4-1/png/pngrutil.c ****         png_bytep temp = png_ptr->big_row_buf + 32;
4417:fltk-1.3.4-1/png/pngrutil.c ****         int extra = (int)((temp - (png_bytep)0) & 0x0f);
4418:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->row_buf = temp - extra - 1/*filter byte*/;
4419:fltk-1.3.4-1/png/pngrutil.c **** 
4420:fltk-1.3.4-1/png/pngrutil.c ****         temp = png_ptr->big_prev_row + 32;
4421:fltk-1.3.4-1/png/pngrutil.c ****         extra = (int)((temp - (png_bytep)0) & 0x0f);
4422:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->prev_row = temp - extra - 1/*filter byte*/;
4423:fltk-1.3.4-1/png/pngrutil.c ****      }
4424:fltk-1.3.4-1/png/pngrutil.c **** 
4425:fltk-1.3.4-1/png/pngrutil.c **** #else
4426:fltk-1.3.4-1/png/pngrutil.c ****      /* Use 31 bytes of padding before and 17 bytes after row_buf. */
4427:fltk-1.3.4-1/png/pngrutil.c ****      png_ptr->row_buf = png_ptr->big_row_buf + 31;
4428:fltk-1.3.4-1/png/pngrutil.c ****      png_ptr->prev_row = png_ptr->big_prev_row + 31;
4429:fltk-1.3.4-1/png/pngrutil.c **** #endif
4430:fltk-1.3.4-1/png/pngrutil.c ****      png_ptr->old_big_row_buf_size = row_bytes + 48;
4431:fltk-1.3.4-1/png/pngrutil.c ****    }
4432:fltk-1.3.4-1/png/pngrutil.c **** 
4433:fltk-1.3.4-1/png/pngrutil.c **** #ifdef PNG_MAX_MALLOC_64K
4434:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->rowbytes > 65535)
4435:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "This image requires a row greater than 64KB");
4436:fltk-1.3.4-1/png/pngrutil.c **** 
4437:fltk-1.3.4-1/png/pngrutil.c **** #endif
4438:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->rowbytes > (PNG_SIZE_MAX - 1))
 13344              		.loc 1 4438 4 is_stmt 1 view .LVU4186
 13345              		.loc 1 4438 15 is_stmt 0 view .LVU4187
 13346 01ac 488B9508 		movq	520(%rbp), %rdx
 13346      020000
 13347              		.loc 1 4438 7 view .LVU4188
 13348 01b3 4883FAFF 		cmpq	$-1, %rdx
 13349 01b7 0F842C03 		je	.L1251
 13349      0000
4439:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, "Row has too many bytes to allocate in memory");
4440:fltk-1.3.4-1/png/pngrutil.c **** 
4441:fltk-1.3.4-1/png/pngrutil.c ****    memset(png_ptr->prev_row, 0, png_ptr->rowbytes + 1);
 13350              		.loc 1 4441 4 is_stmt 1 view .LVU4189
 13351              	.LVL1467:
 13352              	.LBB455:
 13353              	.LBI455:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 13354              		.loc 2 59 1 view .LVU4190
 13355              	.LBB456:
 13356              		.loc 2 71 3 view .LVU4191
 13357              		.loc 2 71 10 is_stmt 0 view .LVU4192
 13358 01bd 488BBD20 		movq	544(%rbp), %rdi
 13358      020000
 13359 01c4 31F6     		xorl	%esi, %esi
 13360              	.LBE456:
 13361              	.LBE455:
 13362              		.loc 1 4441 4 view .LVU4193
 13363 01c6 4883C201 		addq	$1, %rdx
 13364              	.LVL1468:
 13365              	.LBB458:
 13366              	.LBB457:
 13367              		.loc 2 71 10 view .LVU4194
 13368 01ca E8000000 		call	memset@PLT
 13368      00
 13369              	.LVL1469:
 13370              		.loc 2 71 10 view .LVU4195
 13371              	.LBE457:
 13372              	.LBE458:
4442:fltk-1.3.4-1/png/pngrutil.c **** 
4443:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "width = %u,", png_ptr->width);
 13373              		.loc 1 4443 4 is_stmt 1 view .LVU4196
4444:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "height = %u,", png_ptr->height);
 13374              		.loc 1 4444 4 view .LVU4197
4445:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "iwidth = %u,", png_ptr->iwidth);
 13375              		.loc 1 4445 4 view .LVU4198
4446:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "num_rows = %u,", png_ptr->num_rows);
 13376              		.loc 1 4446 4 view .LVU4199
4447:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "rowbytes = %lu,", (unsigned long)png_ptr->rowbytes);
 13377              		.loc 1 4447 4 view .LVU4200
4448:fltk-1.3.4-1/png/pngrutil.c ****    png_debug1(3, "irowbytes = %lu",
 13378              		.loc 1 4448 4 view .LVU4201
4449:fltk-1.3.4-1/png/pngrutil.c ****        (unsigned long)PNG_ROWBYTES(png_ptr->pixel_depth, png_ptr->iwidth) + 1);
4450:fltk-1.3.4-1/png/pngrutil.c **** 
4451:fltk-1.3.4-1/png/pngrutil.c ****    /* The sequential reader needs a buffer for IDAT, but the progressive reader
4452:fltk-1.3.4-1/png/pngrutil.c ****     * does not, so free the read buffer now regardless; the sequential reader
4453:fltk-1.3.4-1/png/pngrutil.c ****     * reallocates it on demand.
4454:fltk-1.3.4-1/png/pngrutil.c ****     */
4455:fltk-1.3.4-1/png/pngrutil.c ****    if (png_ptr->read_buffer != 0)
 13379              		.loc 1 4455 4 view .LVU4202
 13380              		.loc 1 4455 15 is_stmt 0 view .LVU4203
 13381 01cf 488BB598 		movq	1176(%rbp), %rsi
 13381      040000
 13382              		.loc 1 4455 7 view .LVU4204
 13383 01d6 4885F6   		testq	%rsi, %rsi
 13384 01d9 741E     		je	.L1217
 13385              	.LBB459:
4456:fltk-1.3.4-1/png/pngrutil.c ****    {
4457:fltk-1.3.4-1/png/pngrutil.c ****       png_bytep buffer = png_ptr->read_buffer;
 13386              		.loc 1 4457 7 is_stmt 1 view .LVU4205
 13387              	.LVL1470:
4458:fltk-1.3.4-1/png/pngrutil.c **** 
4459:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer_size = 0;
 13388              		.loc 1 4459 7 view .LVU4206
 13389              		.loc 1 4459 33 is_stmt 0 view .LVU4207
 13390 01db 48C785A0 		movq	$0, 1184(%rbp)
 13390      04000000 
 13390      000000
4460:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer = NULL;
 13391              		.loc 1 4460 7 is_stmt 1 view .LVU4208
4461:fltk-1.3.4-1/png/pngrutil.c ****       png_free(png_ptr, buffer);
 13392              		.loc 1 4461 7 is_stmt 0 view .LVU4209
 13393 01e6 4889EF   		movq	%rbp, %rdi
4460:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->read_buffer = NULL;
 13394              		.loc 1 4460 28 view .LVU4210
 13395 01e9 48C78598 		movq	$0, 1176(%rbp)
 13395      04000000 
 13395      000000
 13396              		.loc 1 4461 7 is_stmt 1 view .LVU4211
 13397 01f4 E8000000 		call	png_free@PLT
 13397      00
 13398              	.LVL1471:
 13399              	.L1217:
 13400              		.loc 1 4461 7 is_stmt 0 view .LVU4212
 13401              	.LBE459:
4462:fltk-1.3.4-1/png/pngrutil.c ****    }
4463:fltk-1.3.4-1/png/pngrutil.c **** 
4464:fltk-1.3.4-1/png/pngrutil.c ****    /* Finally claim the zstream for the inflate of the IDAT data, use the bits
4465:fltk-1.3.4-1/png/pngrutil.c ****     * value from the stream (note that this will result in a fatal error if the
4466:fltk-1.3.4-1/png/pngrutil.c ****     * IDAT stream has a bogus deflate header window_bits value, but this should
4467:fltk-1.3.4-1/png/pngrutil.c ****     * not be happening any longer!)
4468:fltk-1.3.4-1/png/pngrutil.c ****     */
4469:fltk-1.3.4-1/png/pngrutil.c ****    if (png_inflate_claim(png_ptr, png_IDAT) != Z_OK)
 13402              		.loc 1 4469 4 is_stmt 1 view .LVU4213
 13403              		.loc 1 4469 8 is_stmt 0 view .LVU4214
 13404 01f9 BE544144 		movl	$1229209940, %esi
 13404      49
 13405 01fe 4889EF   		movq	%rbp, %rdi
 13406 0201 E8000000 		call	png_inflate_claim
 13406      00
 13407              	.LVL1472:
 13408              		.loc 1 4469 7 view .LVU4215
 13409 0206 85C0     		testl	%eax, %eax
 13410 0208 0F85CC02 		jne	.L1252
 13410      0000
4470:fltk-1.3.4-1/png/pngrutil.c ****       png_error(png_ptr, png_ptr->zstream.msg);
4471:fltk-1.3.4-1/png/pngrutil.c **** 
4472:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->flags |= PNG_FLAG_ROW_INIT;
 13411              		.loc 1 4472 4 is_stmt 1 view .LVU4216
 13412              		.loc 1 4472 19 is_stmt 0 view .LVU4217
 13413 020e 838D3001 		orl	$64, 304(%rbp)
 13413      000040
4473:fltk-1.3.4-1/png/pngrutil.c **** }
 13414              		.loc 1 4473 1 view .LVU4218
 13415 0215 4883C408 		addq	$8, %rsp
 13416              		.cfi_remember_state
 13417              		.cfi_def_cfa_offset 24
 13418 0219 5B       		popq	%rbx
 13419              		.cfi_def_cfa_offset 16
 13420 021a 5D       		popq	%rbp
 13421              		.cfi_def_cfa_offset 8
 13422              	.LVL1473:
 13423              		.loc 1 4473 1 view .LVU4219
 13424 021b C3       		ret
 13425              	.LVL1474:
 13426 021c 0F1F4000 		.p2align 4,,10
 13427              		.p2align 3
 13428              	.L1200:
 13429              		.cfi_restore_state
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13430              		.loc 1 4362 4 is_stmt 1 view .LVU4220
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13431              		.loc 1 4362 7 is_stmt 0 view .LVU4221
 13432 0220 81E60000 		andl	$1048576, %esi
 13432      1000
 13433 0226 0F843BFF 		je	.L1210
 13433      FFFF
 13434 022c E920FFFF 		jmp	.L1205
 13434      FF
 13435              		.p2align 4,,10
 13436 0231 0F1F8000 		.p2align 3
 13436      000000
 13437              	.L1207:
4351:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 64;
 13438              		.loc 1 4351 15 is_stmt 1 view .LVU4222
4351:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 64;
 13439              		.loc 1 4351 18 is_stmt 0 view .LVU4223
 13440 0238 80FA06   		cmpb	$6, %dl
 13441 023b 0F84DF00 		je	.L1204
 13441      0000
 13442              	.LVL1475:
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13443              		.loc 1 4362 4 is_stmt 1 view .LVU4224
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13444              		.loc 1 4362 7 is_stmt 0 view .LVU4225
 13445 0241 81E60000 		andl	$1048576, %esi
 13445      1000
 13446 0247 0F857302 		jne	.L1229
 13446      0000
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13447              		.loc 1 4375 4 is_stmt 1 view .LVU4226
4376:fltk-1.3.4-1/png/pngrutil.c **** 
 13448              		.loc 1 4376 4 view .LVU4227
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13449              		.loc 1 4375 33 is_stmt 0 view .LVU4228
 13450 024d B8300000 		movl	$48, %eax
 13450      00
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13451              		.loc 1 4381 33 view .LVU4229
 13452 0252 83C107   		addl	$7, %ecx
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13453              		.loc 1 4381 14 view .LVU4230
 13454 0255 BA300000 		movl	$48, %edx
 13454      00
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13455              		.loc 1 4375 33 view .LVU4231
 13456 025a 6689857E 		movw	%ax, 638(%rbp)
 13456      020000
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13457              		.loc 1 4381 4 is_stmt 1 view .LVU4232
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13458              		.loc 1 4381 14 is_stmt 0 view .LVU4233
 13459 0261 83E1F8   		andl	$-8, %ecx
 13460              	.LVL1476:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13461              		.loc 1 4385 4 is_stmt 1 view .LVU4234
4355:fltk-1.3.4-1/png/pngrutil.c ****       }
 13462              		.loc 1 4355 29 is_stmt 0 view .LVU4235
 13463 0264 B8300000 		movl	$48, %eax
 13463      00
 13464              	.LVL1477:
 13465 0269 0F1F8000 		.p2align 4,,10
 13465      000000
 13466              		.p2align 3
 13467              	.L1206:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13468              		.loc 1 4385 16 discriminator 1 view .LVU4236
 13469 0270 48C1EA03 		shrq	$3, %rdx
 13470 0274 480FAFCA 		imulq	%rdx, %rcx
 13471              	.LVL1478:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13472              		.loc 1 4385 57 discriminator 1 view .LVU4237
 13473 0278 4883C101 		addq	$1, %rcx
 13474 027c E911FFFF 		jmp	.L1212
 13474      FF
 13475              	.LVL1479:
 13476              		.p2align 4,,10
 13477 0281 0F1F8000 		.p2align 3
 13477      000000
 13478              	.L1201:
4326:fltk-1.3.4-1/png/pngrutil.c **** #endif
 13479              		.loc 1 4326 57 view .LVU4238
 13480 0288 85FF     		testl	%edi, %edi
 13481 028a 0F85A7FE 		jne	.L1202
 13481      FFFF
4331:fltk-1.3.4-1/png/pngrutil.c ****       {
 13482              		.loc 1 4331 18 view .LVU4239
 13483 0290 0FB69577 		movzbl	631(%rbp), %edx
 13483      020000
4329:fltk-1.3.4-1/png/pngrutil.c **** #endif
 13484              		.loc 1 4329 58 view .LVU4240
 13485 0297 80FA04   		cmpb	$4, %dl
 13486 029a 0F8497FE 		je	.L1202
 13486      FFFF
4342:fltk-1.3.4-1/png/pngrutil.c ****          {
 13487              		.loc 1 4342 10 is_stmt 1 view .LVU4241
4342:fltk-1.3.4-1/png/pngrutil.c ****          {
 13488              		.loc 1 4342 13 is_stmt 0 view .LVU4242
 13489 02a0 83F808   		cmpl	$8, %eax
 13490 02a3 7F93     		jg	.L1207
4344:fltk-1.3.4-1/png/pngrutil.c ****                max_pixel_depth = 32;
 13491              		.loc 1 4344 13 is_stmt 1 view .LVU4243
4344:fltk-1.3.4-1/png/pngrutil.c ****                max_pixel_depth = 32;
 13492              		.loc 1 4344 16 is_stmt 0 view .LVU4244
 13493 02a5 80FA06   		cmpb	$6, %dl
 13494 02a8 0F8492FE 		je	.L1208
 13494      FFFF
 13495              	.LVL1480:
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13496              		.loc 1 4362 4 is_stmt 1 view .LVU4245
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13497              		.loc 1 4362 7 is_stmt 0 view .LVU4246
 13498 02ae 81E60000 		andl	$1048576, %esi
 13498      1000
 13499 02b4 0F851602 		jne	.L1225
 13499      0000
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13500              		.loc 1 4375 4 is_stmt 1 view .LVU4247
4376:fltk-1.3.4-1/png/pngrutil.c **** 
 13501              		.loc 1 4376 4 view .LVU4248
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13502              		.loc 1 4375 33 is_stmt 0 view .LVU4249
 13503 02ba BF180000 		movl	$24, %edi
 13503      00
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13504              		.loc 1 4381 33 view .LVU4250
 13505 02bf 83C107   		addl	$7, %ecx
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13506              		.loc 1 4381 14 view .LVU4251
 13507 02c2 BA180000 		movl	$24, %edx
 13507      00
4348:fltk-1.3.4-1/png/pngrutil.c ****          }
 13508              		.loc 1 4348 32 view .LVU4252
 13509 02c7 B8180000 		movl	$24, %eax
 13509      00
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13510              		.loc 1 4375 33 view .LVU4253
 13511 02cc 6689BD7E 		movw	%di, 638(%rbp)
 13511      020000
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13512              		.loc 1 4381 4 is_stmt 1 view .LVU4254
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13513              		.loc 1 4381 14 is_stmt 0 view .LVU4255
 13514 02d3 83E1F8   		andl	$-8, %ecx
 13515              	.LVL1481:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13516              		.loc 1 4385 4 is_stmt 1 view .LVU4256
 13517 02d6 EB98     		jmp	.L1206
 13518              	.LVL1482:
 13519 02d8 0F1F8400 		.p2align 4,,10
 13519      00000000 
 13520              		.p2align 3
 13521              	.L1199:
4308:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 13522              		.loc 1 4308 12 view .LVU4257
4308:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 13523              		.loc 1 4308 58 is_stmt 0 view .LVU4258
 13524 02e0 83EA02   		subl	$2, %edx
4308:fltk-1.3.4-1/png/pngrutil.c ****          png_ptr->color_type == PNG_COLOR_TYPE_PALETTE)
 13525              		.loc 1 4308 15 view .LVU4259
 13526 02e3 80FA01   		cmpb	$1, %dl
 13527 02e6 0F8725FE 		ja	.L1198
 13527      FFFF
4311:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 32;
 13528              		.loc 1 4311 10 is_stmt 1 view .LVU4260
4305:fltk-1.3.4-1/png/pngrutil.c ****       }
 13529              		.loc 1 4305 29 is_stmt 0 view .LVU4261
 13530 02ec 83F820   		cmpl	$32, %eax
 13531 02ef BA400000 		movl	$64, %edx
 13531      00
 13532 02f4 B8200000 		movl	$32, %eax
 13532      00
 13533              	.LVL1483:
4305:fltk-1.3.4-1/png/pngrutil.c ****       }
 13534              		.loc 1 4305 29 view .LVU4262
 13535 02f9 0F4FC2   		cmovg	%edx, %eax
 13536 02fc E910FEFF 		jmp	.L1198
 13536      FF
 13537              	.LVL1484:
 13538              		.p2align 4,,10
 13539 0301 0F1F8000 		.p2align 3
 13539      000000
 13540              	.L1220:
4285:fltk-1.3.4-1/png/pngrutil.c ****          {
 13541              		.loc 1 4285 10 is_stmt 1 view .LVU4263
4292:fltk-1.3.4-1/png/pngrutil.c ****    }
 13542              		.loc 1 4292 10 view .LVU4264
4292:fltk-1.3.4-1/png/pngrutil.c ****    }
 13543              		.loc 1 4292 35 is_stmt 0 view .LVU4265
 13544 0308 81E6FFFD 		andl	$-513, %esi
 13544      FFFF
 13545 030e 89B53401 		movl	%esi, 308(%rbp)
 13545      0000
 13546 0314 E9CFFDFF 		jmp	.L1197
 13546      FF
 13547 0319 0F1F8000 		.p2align 4,,10
 13547      000000
 13548              		.p2align 3
 13549              	.L1204:
 13550              	.LVL1485:
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13551              		.loc 1 4362 4 is_stmt 1 view .LVU4266
4362:fltk-1.3.4-1/png/pngrutil.c ****    {
 13552              		.loc 1 4362 7 is_stmt 0 view .LVU4267
 13553 0320 81E60000 		andl	$1048576, %esi
 13553      1000
 13554 0326 0F846401 		je	.L1253
 13554      0000
4337:fltk-1.3.4-1/png/pngrutil.c ****       }
 13555              		.loc 1 4337 29 view .LVU4268
 13556 032c B8400000 		movl	$64, %eax
 13556      00
 13557 0331 E91BFEFF 		jmp	.L1205
 13557      FF
 13558              	.LVL1486:
 13559 0336 662E0F1F 		.p2align 4,,10
 13559      84000000 
 13559      0000
 13560              		.p2align 3
 13561              	.L1189:
4225:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->iwidth = png_ptr->width;
 13562              		.loc 1 4225 7 is_stmt 1 view .LVU4269
4225:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->iwidth = png_ptr->width;
 13563              		.loc 1 4225 25 is_stmt 0 view .LVU4270
 13564 0340 8B85FC01 		movl	508(%rbp), %eax
 13564      0000
4226:fltk-1.3.4-1/png/pngrutil.c ****    }
 13565              		.loc 1 4226 32 view .LVU4271
 13566 0346 8B8DF801 		movl	504(%rbp), %ecx
 13566      0000
 13567 034c 8BB53401 		movl	308(%rbp), %esi
 13567      0000
4225:fltk-1.3.4-1/png/pngrutil.c ****       png_ptr->iwidth = png_ptr->width;
 13568              		.loc 1 4225 25 view .LVU4272
 13569 0352 89850002 		movl	%eax, 512(%rbp)
 13569      0000
4226:fltk-1.3.4-1/png/pngrutil.c ****    }
 13570              		.loc 1 4226 7 is_stmt 1 view .LVU4273
4226:fltk-1.3.4-1/png/pngrutil.c ****    }
 13571              		.loc 1 4226 23 is_stmt 0 view .LVU4274
 13572 0358 898D1002 		movl	%ecx, 528(%rbp)
 13572      0000
 13573 035e E90FFDFF 		jmp	.L1191
 13573      FF
 13574              	.LVL1487:
 13575              		.p2align 4,,10
 13576 0363 0F1F4400 		.p2align 3
 13576      00
 13577              	.L1250:
4395:fltk-1.3.4-1/png/pngrutil.c ****      png_free(png_ptr, png_ptr->big_prev_row);
 13578              		.loc 1 4395 6 is_stmt 1 view .LVU4275
 13579 0368 488BB538 		movq	1080(%rbp), %rsi
 13579      040000
 13580 036f 4889EF   		movq	%rbp, %rdi
 13581 0372 E8000000 		call	png_free@PLT
 13581      00
 13582              	.LVL1488:
4396:fltk-1.3.4-1/png/pngrutil.c **** 
 13583              		.loc 1 4396 6 view .LVU4276
 13584 0377 488BB5B0 		movq	1200(%rbp), %rsi
 13584      040000
 13585 037e 4889EF   		movq	%rbp, %rdi
 13586 0381 E8000000 		call	png_free@PLT
 13586      00
 13587              	.LVL1489:
4398:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->big_row_buf = (png_bytep)png_calloc(png_ptr,
 13588              		.loc 1 4398 6 view .LVU4277
4398:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->big_row_buf = (png_bytep)png_calloc(png_ptr,
 13589              		.loc 1 4398 9 is_stmt 0 view .LVU4278
 13590 0386 80BD7402 		cmpb	$0, 628(%rbp)
 13590      000000
4399:fltk-1.3.4-1/png/pngrutil.c ****             row_bytes + 48);
 13591              		.loc 1 4399 43 view .LVU4279
 13592 038d 4889DE   		movq	%rbx, %rsi
 13593 0390 4889EF   		movq	%rbp, %rdi
4398:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->big_row_buf = (png_bytep)png_calloc(png_ptr,
 13594              		.loc 1 4398 9 view .LVU4280
 13595 0393 0F85AF00 		jne	.L1254
 13595      0000
 13596              	.LVL1490:
4403:fltk-1.3.4-1/png/pngrutil.c **** 
 13597              		.loc 1 4403 9 is_stmt 1 view .LVU4281
4403:fltk-1.3.4-1/png/pngrutil.c **** 
 13598              		.loc 1 4403 43 is_stmt 0 view .LVU4282
 13599 0399 E8000000 		call	png_malloc@PLT
 13599      00
 13600              	.LVL1491:
4403:fltk-1.3.4-1/png/pngrutil.c **** 
 13601              		.loc 1 4403 30 view .LVU4283
 13602 039e 48898538 		movq	%rax, 1080(%rbp)
 13602      040000
 13603              	.L1215:
4405:fltk-1.3.4-1/png/pngrutil.c **** 
 13604              		.loc 1 4405 6 is_stmt 1 view .LVU4284
4405:fltk-1.3.4-1/png/pngrutil.c **** 
 13605              		.loc 1 4405 41 is_stmt 0 view .LVU4285
 13606 03a5 4889DE   		movq	%rbx, %rsi
 13607 03a8 4889EF   		movq	%rbp, %rdi
 13608 03ab E8000000 		call	png_malloc@PLT
 13608      00
 13609              	.LVL1492:
 13610              	.LBB460:
4418:fltk-1.3.4-1/png/pngrutil.c **** 
 13611              		.loc 1 4418 41 view .LVU4286
 13612 03b0 488B9538 		movq	1080(%rbp), %rdx
 13612      040000
 13613              	.LBE460:
4430:fltk-1.3.4-1/png/pngrutil.c ****    }
 13614              		.loc 1 4430 36 view .LVU4287
 13615 03b7 48899D90 		movq	%rbx, 1168(%rbp)
 13615      040000
4405:fltk-1.3.4-1/png/pngrutil.c **** 
 13616              		.loc 1 4405 28 view .LVU4288
 13617 03be 488985B0 		movq	%rax, 1200(%rbp)
 13617      040000
 13618              	.LBB461:
4416:fltk-1.3.4-1/png/pngrutil.c ****         int extra = (int)((temp - (png_bytep)0) & 0x0f);
 13619              		.loc 1 4416 9 is_stmt 1 view .LVU4289
 13620              	.LVL1493:
4417:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->row_buf = temp - extra - 1/*filter byte*/;
 13621              		.loc 1 4417 9 view .LVU4290
4418:fltk-1.3.4-1/png/pngrutil.c **** 
 13622              		.loc 1 4418 9 view .LVU4291
4422:fltk-1.3.4-1/png/pngrutil.c ****      }
 13623              		.loc 1 4422 42 is_stmt 0 view .LVU4292
 13624 03c5 4883E0F0 		andq	$-16, %rax
4418:fltk-1.3.4-1/png/pngrutil.c **** 
 13625              		.loc 1 4418 41 view .LVU4293
 13626 03c9 4883E2F0 		andq	$-16, %rdx
 13627              	.LVL1494:
4422:fltk-1.3.4-1/png/pngrutil.c ****      }
 13628              		.loc 1 4422 42 view .LVU4294
 13629 03cd 4883C01F 		addq	$31, %rax
4418:fltk-1.3.4-1/png/pngrutil.c **** 
 13630              		.loc 1 4418 41 view .LVU4295
 13631 03d1 4883C21F 		addq	$31, %rdx
4422:fltk-1.3.4-1/png/pngrutil.c ****      }
 13632              		.loc 1 4422 42 view .LVU4296
 13633 03d5 48898520 		movq	%rax, 544(%rbp)
 13633      020000
4418:fltk-1.3.4-1/png/pngrutil.c **** 
 13634              		.loc 1 4418 41 view .LVU4297
 13635 03dc 48899528 		movq	%rdx, 552(%rbp)
 13635      020000
4420:fltk-1.3.4-1/png/pngrutil.c ****         extra = (int)((temp - (png_bytep)0) & 0x0f);
 13636              		.loc 1 4420 9 is_stmt 1 view .LVU4298
 13637              	.LVL1495:
4421:fltk-1.3.4-1/png/pngrutil.c ****         png_ptr->prev_row = temp - extra - 1/*filter byte*/;
 13638              		.loc 1 4421 9 view .LVU4299
4422:fltk-1.3.4-1/png/pngrutil.c ****      }
 13639              		.loc 1 4422 9 view .LVU4300
 13640              	.LBE461:
4430:fltk-1.3.4-1/png/pngrutil.c ****    }
 13641              		.loc 1 4430 6 view .LVU4301
 13642 03e3 E9C4FDFF 		jmp	.L1213
 13642      FF
 13643              	.LVL1496:
 13644 03e8 0F1F8400 		.p2align 4,,10
 13644      00000000 
 13645              		.p2align 3
 13646              	.L1248:
4251:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth = 32;
 13647              		.loc 1 4251 10 view .LVU4302
4255:fltk-1.3.4-1/png/pngrutil.c ****       }
 13648              		.loc 1 4255 29 is_stmt 0 view .LVU4303
 13649 03f0 6683BD70 		cmpw	$1, 624(%rbp)
 13649      02000001 
 13650 03f8 19C0     		sbbl	%eax, %eax
 13651              	.LVL1497:
4255:fltk-1.3.4-1/png/pngrutil.c ****       }
 13652              		.loc 1 4255 29 view .LVU4304
 13653 03fa 83E0F8   		andl	$-8, %eax
 13654 03fd 83C020   		addl	$32, %eax
 13655              	.L1195:
 13656              	.LVL1498:
4279:fltk-1.3.4-1/png/pngrutil.c ****    {
 13657              		.loc 1 4279 4 is_stmt 1 view .LVU4305
4279:fltk-1.3.4-1/png/pngrutil.c ****    {
 13658              		.loc 1 4279 7 is_stmt 0 view .LVU4306
 13659 0400 85D2     		testl	%edx, %edx
 13660 0402 0F84E0FC 		je	.L1197
 13660      FFFF
4285:fltk-1.3.4-1/png/pngrutil.c ****          {
 13661              		.loc 1 4285 10 is_stmt 1 view .LVU4307
4287:fltk-1.3.4-1/png/pngrutil.c ****                max_pixel_depth *= 2;
 13662              		.loc 1 4287 13 view .LVU4308
4287:fltk-1.3.4-1/png/pngrutil.c ****                max_pixel_depth *= 2;
 13663              		.loc 1 4287 16 is_stmt 0 view .LVU4309
 13664 0408 80BD7802 		cmpb	$15, 632(%rbp)
 13664      00000F
 13665 040f 0F87D3FC 		ja	.L1197
 13665      FFFF
4288:fltk-1.3.4-1/png/pngrutil.c ****          }
 13666              		.loc 1 4288 16 is_stmt 1 view .LVU4310
4288:fltk-1.3.4-1/png/pngrutil.c ****          }
 13667              		.loc 1 4288 32 is_stmt 0 view .LVU4311
 13668 0415 01C0     		addl	%eax, %eax
 13669              	.LVL1499:
4288:fltk-1.3.4-1/png/pngrutil.c ****          }
 13670              		.loc 1 4288 32 view .LVU4312
 13671 0417 E9CCFCFF 		jmp	.L1197
 13671      FF
 13672 041c 0F1F4000 		.p2align 4,,10
 13673              		.p2align 3
 13674              	.L1196:
4267:fltk-1.3.4-1/png/pngrutil.c ****       {
 13675              		.loc 1 4267 12 is_stmt 1 view .LVU4313
4267:fltk-1.3.4-1/png/pngrutil.c ****       {
 13676              		.loc 1 4267 15 is_stmt 0 view .LVU4314
 13677 0420 4080FF02 		cmpb	$2, %dil
 13678 0424 75DA     		jne	.L1195
4269:fltk-1.3.4-1/png/pngrutil.c ****          {
 13679              		.loc 1 4269 10 is_stmt 1 view .LVU4315
4269:fltk-1.3.4-1/png/pngrutil.c ****          {
 13680              		.loc 1 4269 13 is_stmt 0 view .LVU4316
 13681 0426 6683BD70 		cmpw	$0, 624(%rbp)
 13681      02000000 
 13682 042e 74D0     		je	.L1195
4271:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth /= 3;
 13683              		.loc 1 4271 13 is_stmt 1 view .LVU4317
4271:fltk-1.3.4-1/png/pngrutil.c ****             max_pixel_depth /= 3;
 13684              		.loc 1 4271 29 is_stmt 0 view .LVU4318
 13685 0430 C1E002   		sall	$2, %eax
 13686              	.LVL1500:
4272:fltk-1.3.4-1/png/pngrutil.c ****          }
 13687              		.loc 1 4272 13 is_stmt 1 view .LVU4319
4272:fltk-1.3.4-1/png/pngrutil.c ****          }
 13688              		.loc 1 4272 29 is_stmt 0 view .LVU4320
 13689 0433 BFABAAAA 		movl	$2863311531, %edi
 13689      AA
 13690 0438 480FAFC7 		imulq	%rdi, %rax
 13691              	.LVL1501:
4272:fltk-1.3.4-1/png/pngrutil.c ****          }
 13692              		.loc 1 4272 29 view .LVU4321
 13693 043c 48C1E821 		shrq	$33, %rax
 13694              	.LVL1502:
4272:fltk-1.3.4-1/png/pngrutil.c ****          }
 13695              		.loc 1 4272 29 view .LVU4322
 13696 0440 EBBE     		jmp	.L1195
 13697              	.LVL1503:
 13698              		.p2align 4,,10
 13699 0442 660F1F44 		.p2align 3
 13699      0000
 13700              	.L1254:
4399:fltk-1.3.4-1/png/pngrutil.c ****             row_bytes + 48);
 13701              		.loc 1 4399 9 is_stmt 1 view .LVU4323
4399:fltk-1.3.4-1/png/pngrutil.c ****             row_bytes + 48);
 13702              		.loc 1 4399 43 is_stmt 0 view .LVU4324
 13703 0448 E8000000 		call	png_calloc@PLT
 13703      00
 13704              	.LVL1504:
4399:fltk-1.3.4-1/png/pngrutil.c ****             row_bytes + 48);
 13705              		.loc 1 4399 30 view .LVU4325
 13706 044d 48898538 		movq	%rax, 1080(%rbp)
 13706      040000
 13707 0454 E94CFFFF 		jmp	.L1215
 13707      FF
 13708              	.LVL1505:
 13709 0459 0F1F8000 		.p2align 4,,10
 13709      000000
 13710              		.p2align 3
 13711              	.L1249:
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13712              		.loc 1 4375 4 is_stmt 1 view .LVU4326
4376:fltk-1.3.4-1/png/pngrutil.c **** 
 13713              		.loc 1 4376 4 view .LVU4327
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13714              		.loc 1 4375 33 is_stmt 0 view .LVU4328
 13715 0460 BA200000 		movl	$32, %edx
 13715      00
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13716              		.loc 1 4381 33 view .LVU4329
 13717 0465 83C107   		addl	$7, %ecx
4345:fltk-1.3.4-1/png/pngrutil.c **** 
 13718              		.loc 1 4345 32 view .LVU4330
 13719 0468 B8200000 		movl	$32, %eax
 13719      00
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13720              		.loc 1 4375 33 view .LVU4331
 13721 046d 6689957E 		movw	%dx, 638(%rbp)
 13721      020000
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13722              		.loc 1 4381 4 is_stmt 1 view .LVU4332
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13723              		.loc 1 4381 14 is_stmt 0 view .LVU4333
 13724 0474 BA200000 		movl	$32, %edx
 13724      00
 13725 0479 83E1F8   		andl	$-8, %ecx
 13726              	.LVL1506:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13727              		.loc 1 4385 4 is_stmt 1 view .LVU4334
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13728              		.loc 1 4385 16 is_stmt 0 view .LVU4335
 13729 047c 48C1EA03 		shrq	$3, %rdx
 13730 0480 480FAFCA 		imulq	%rdx, %rcx
 13731              	.LVL1507:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13732              		.loc 1 4385 57 view .LVU4336
 13733 0484 4883C101 		addq	$1, %rcx
 13734 0488 E905FDFF 		jmp	.L1212
 13734      FF
 13735              	.LVL1508:
 13736 048d 0F1F00   		.p2align 4,,10
 13737              		.p2align 3
 13738              	.L1253:
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13739              		.loc 1 4375 4 is_stmt 1 view .LVU4337
4376:fltk-1.3.4-1/png/pngrutil.c **** 
 13740              		.loc 1 4376 4 view .LVU4338
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13741              		.loc 1 4381 33 is_stmt 0 view .LVU4339
 13742 0490 83C107   		addl	$7, %ecx
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13743              		.loc 1 4381 14 view .LVU4340
 13744 0493 BA400000 		movl	$64, %edx
 13744      00
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13745              		.loc 1 4375 33 view .LVU4341
 13746 0498 BE400000 		movl	$64, %esi
 13746      00
4337:fltk-1.3.4-1/png/pngrutil.c ****       }
 13747              		.loc 1 4337 29 view .LVU4342
 13748 049d B8400000 		movl	$64, %eax
 13748      00
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13749              		.loc 1 4381 14 view .LVU4343
 13750 04a2 83E1F8   		andl	$-8, %ecx
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13751              		.loc 1 4385 16 view .LVU4344
 13752 04a5 48C1EA03 		shrq	$3, %rdx
4375:fltk-1.3.4-1/png/pngrutil.c ****    png_ptr->transformed_pixel_depth = 0; /* calculated on demand */
 13753              		.loc 1 4375 33 view .LVU4345
 13754 04a9 6689B57E 		movw	%si, 638(%rbp)
 13754      020000
4381:fltk-1.3.4-1/png/pngrutil.c ****    /* Calculate the maximum bytes needed, adding a byte and a pixel
 13755              		.loc 1 4381 4 is_stmt 1 view .LVU4346
 13756              	.LVL1509:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13757              		.loc 1 4385 4 view .LVU4347
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13758              		.loc 1 4385 16 is_stmt 0 view .LVU4348
 13759 04b0 480FAFCA 		imulq	%rdx, %rcx
 13760              	.LVL1510:
4385:fltk-1.3.4-1/png/pngrutil.c ****        1 + ((max_pixel_depth + 7) >> 3);
 13761              		.loc 1 4385 57 view .LVU4349
 13762 04b4 4883C101 		addq	$1, %rcx
 13763 04b8 E9D5FCFF 		jmp	.L1212
 13763      FF
 13764              	.LVL1511:
 13765 04bd 0F1F00   		.p2align 4,,10
 13766              		.p2align 3
 13767              	.L1229:
4355:fltk-1.3.4-1/png/pngrutil.c ****       }
 13768              		.loc 1 4355 29 view .LVU4350
 13769 04c0 B8300000 		movl	$48, %eax
 13769      00
 13770 04c5 E987FCFF 		jmp	.L1205
 13770      FF
 13771              	.LVL1512:
 13772 04ca 660F1F44 		.p2align 4,,10
 13772      0000
 13773              		.p2align 3
 13774              	.L1225:
4348:fltk-1.3.4-1/png/pngrutil.c ****          }
 13775              		.loc 1 4348 32 view .LVU4351
 13776 04d0 B8180000 		movl	$24, %eax
 13776      00
 13777 04d5 E977FCFF 		jmp	.L1205
 13777      FF
 13778              	.LVL1513:
 13779              	.L1252:
4470:fltk-1.3.4-1/png/pngrutil.c **** 
 13780              		.loc 1 4470 7 is_stmt 1 view .LVU4352
 13781 04da 488BB570 		movq	368(%rbp), %rsi
 13781      010000
 13782 04e1 4889EF   		movq	%rbp, %rdi
 13783 04e4 E8000000 		call	png_error@PLT
 13783      00
 13784              	.LVL1514:
 13785              	.L1251:
4439:fltk-1.3.4-1/png/pngrutil.c **** 
 13786              		.loc 1 4439 7 view .LVU4353
 13787 04e9 488D3500 		leaq	.LC56(%rip), %rsi
 13787      000000
 13788 04f0 4889EF   		movq	%rbp, %rdi
 13789 04f3 E8000000 		call	png_error@PLT
 13789      00
 13790              	.LVL1515:
 13791              		.cfi_endproc
 13792              	.LFE91:
 13794              		.section	.rodata.png_pass_ystart.7424,"a"
 13797              	png_pass_ystart.7424:
 13798 0000 00       		.string	""
 13799 0001 00       		.string	""
 13800 0002 0400     		.string	"\004"
 13801 0004 0200     		.string	"\002"
 13802 0006 01       		.ascii	"\001"
 13803              		.section	.rodata.png_pass_yinc.7425,"a"
 13806              	png_pass_yinc.7425:
 13807 0000 08080804 		.ascii	"\b\b\b\004\004\002\002"
 13807      040202
 13808              		.section	.rodata.png_pass_start.7422,"a"
 13811              	png_pass_start.7422:
 13812 0000 00       		.string	""
 13813 0001 0400     		.string	"\004"
 13814 0003 0200     		.string	"\002"
 13815 0005 0100     		.string	"\001"
 13816              		.set	png_pass_start.7431,png_pass_start.7422
 13817              		.section	.rodata.png_pass_inc.7423,"a"
 13820              	png_pass_inc.7423:
 13821 0000 08080404 		.ascii	"\b\b\004\004\002\002\001"
 13821      020201
 13822              		.set	png_pass_inc.7432,png_pass_inc.7423
 13823              		.section	.rodata.png_pass_inc.7239,"a"
 13824              		.align 16
 13827              	png_pass_inc.7239:
 13828 0000 08000000 		.long	8
 13829 0004 08000000 		.long	8
 13830 0008 04000000 		.long	4
 13831 000c 04000000 		.long	4
 13832 0010 02000000 		.long	2
 13833 0014 02000000 		.long	2
 13834 0018 01000000 		.long	1
 13835              		.section	.rodata.row_mask.7194,"a"
 13836              		.align 32
 13839              	row_mask.7194:
 13840 0000 01010101 		.long	16843009
 13841 0004 10101010 		.long	269488144
 13842 0008 11111111 		.long	286331153
 13843 000c 44444444 		.long	1145324612
 13844 0010 55555555 		.long	1431655765
 13845 0014 AAAAAAAA 		.long	-1431655766
 13846 0018 03000300 		.long	196611
 13847 001c 00030003 		.long	50332416
 13848 0020 03030303 		.long	50529027
 13849 0024 30303030 		.long	808464432
 13850 0028 33333333 		.long	858993459
 13851 002c CCCCCCCC 		.long	-858993460
 13852 0030 0F000000 		.long	15
 13853 0034 00000F00 		.long	983040
 13854 0038 0F000F00 		.long	983055
 13855 003c 000F000F 		.long	251662080
 13856 0040 0F0F0F0F 		.long	252645135
 13857 0044 F0F0F0F0 		.long	-252645136
 13858 0048 80808080 		.long	-2139062144
 13859 004c 08080808 		.long	134744072
 13860 0050 88888888 		.long	-2004318072
 13861 0054 22222222 		.long	572662306
 13862 0058 AAAAAAAA 		.long	-1431655766
 13863 005c 55555555 		.long	1431655765
 13864 0060 C000C000 		.long	12583104
 13865 0064 00C000C0 		.long	-1073692672
 13866 0068 C0C0C0C0 		.long	-1061109568
 13867 006c 0C0C0C0C 		.long	202116108
 13868 0070 CCCCCCCC 		.long	-858993460
 13869 0074 33333333 		.long	858993459
 13870 0078 F0000000 		.long	240
 13871 007c 0000F000 		.long	15728640
 13872 0080 F000F000 		.long	15728880
 13873 0084 00F000F0 		.long	-268374016
 13874 0088 F0F0F0F0 		.long	-252645136
 13875 008c 0F0F0F0F 		.long	252645135
 13876              		.section	.rodata.display_mask.7195,"a"
 13877              		.align 32
 13880              	display_mask.7195:
 13881 0000 F0F0F0F0 		.long	-252645136
 13882 0004 CCCCCCCC 		.long	-858993460
 13883 0008 AAAAAAAA 		.long	-1431655766
 13884 000c 00FF00FF 		.long	-16711936
 13885 0010 F0F0F0F0 		.long	-252645136
 13886 0014 CCCCCCCC 		.long	-858993460
 13887 0018 0000FFFF 		.long	-65536
 13888 001c 00FF00FF 		.long	-16711936
 13889 0020 F0F0F0F0 		.long	-252645136
 13890 0024 0F0F0F0F 		.long	252645135
 13891 0028 33333333 		.long	858993459
 13892 002c 55555555 		.long	1431655765
 13893 0030 00FF00FF 		.long	-16711936
 13894 0034 0F0F0F0F 		.long	252645135
 13895 0038 33333333 		.long	858993459
 13896 003c 0000FFFF 		.long	-65536
 13897 0040 00FF00FF 		.long	-16711936
 13898 0044 0F0F0F0F 		.long	252645135
 13899              		.text
 13900              	.Letext0:
 13901              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 13902              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 13903              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 13904              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 13905              		.file 7 "/usr/include/stdio.h"
 13906              		.file 8 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 13907              		.file 9 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 13908              		.file 10 "/usr/include/setjmp.h"
 13909              		.file 11 "/usr/include/time.h"
 13910              		.file 12 "fltk-1.3.4-1/png/pngconf.h"
 13911              		.file 13 "fltk-1.3.4-1/png/png.h"
 13912              		.file 14 "fltk-1.3.4-1/png/pngstruct.h"
 13913              		.file 15 "fltk-1.3.4-1/png/pnginfo.h"
 13914              		.file 16 "/usr/include/zconf.h"
 13915              		.file 17 "/usr/include/unistd.h"
 13916              		.file 18 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 13917              		.file 19 "/usr/include/zlib.h"
 13918              		.file 20 "fltk-1.3.4-1/png/pngpriv.h"
 13919              		.file 21 "<built-in>"
 13920              		.file 22 "/usr/include/string.h"
 64159              		.section	.note.gnu.property,"a"
 64160              		.align 8
 64161 0000 04000000 		.long	 1f - 0f
 64162 0004 10000000 		.long	 4f - 1f
 64163 0008 05000000 		.long	 5
 64164              	0:
 64165 000c 474E5500 		.string	 "GNU"
 64166              	1:
 64167              		.align 8
 64168 0010 020000C0 		.long	 0xc0000002
 64169 0014 04000000 		.long	 3f - 2f
 64170              	2:
 64171 0018 03000000 		.long	 0x3
 64172              	3:
 64173 001c 00000000 		.align 8
 64174              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngrutil.c
     /tmp/cc8LmSaV.s:7      .text.png_read_filter_row_sub:0000000000000000 png_read_filter_row_sub
     /tmp/cc8LmSaV.s:71     .text.png_read_filter_row_up:0000000000000000 png_read_filter_row_up
     /tmp/cc8LmSaV.s:120    .text.png_read_filter_row_avg:0000000000000000 png_read_filter_row_avg
     /tmp/cc8LmSaV.s:226    .text.png_read_filter_row_paeth_1byte_pixel:0000000000000000 png_read_filter_row_paeth_1byte_pixel
     /tmp/cc8LmSaV.s:391    .text.png_read_filter_row_paeth_multibyte_pixel:0000000000000000 png_read_filter_row_paeth_multibyte_pixel
     /tmp/cc8LmSaV.s:607    .text.png_inflate_claim:0000000000000000 png_inflate_claim
     /tmp/cc8LmSaV.s:778    .text.png_read_buffer:0000000000000000 png_read_buffer
     /tmp/cc8LmSaV.s:924    .text.png_crc_read.part.0:0000000000000000 png_crc_read.part.0
     /tmp/cc8LmSaV.s:978    .text.png_inflate_read.part.0.constprop.0:0000000000000000 png_inflate_read.part.0.constprop.0
     /tmp/cc8LmSaV.s:1189   .text.png_inflate.constprop.0:0000000000000000 png_inflate.constprop.0
     /tmp/cc8LmSaV.s:1477   .text.png_decompress_chunk.constprop.0:0000000000000000 png_decompress_chunk.constprop.0
     /tmp/cc8LmSaV.s:1911   .text.png_get_fixed_point.constprop.0:0000000000000000 png_get_fixed_point.constprop.0
     /tmp/cc8LmSaV.s:1955   .text.png_get_uint_31:0000000000000000 png_get_uint_31
     /tmp/cc8LmSaV.s:2006   .text.png_get_uint_32:0000000000000000 png_get_uint_32
     /tmp/cc8LmSaV.s:2051   .text.png_get_int_32:0000000000000000 png_get_int_32
     /tmp/cc8LmSaV.s:2094   .text.png_get_uint_16:0000000000000000 png_get_uint_16
     /tmp/cc8LmSaV.s:2129   .text.png_read_sig:0000000000000000 png_read_sig
     /tmp/cc8LmSaV.s:2286   .text.png_crc_read:0000000000000000 png_crc_read
     /tmp/cc8LmSaV.s:2311   .text.png_crc_error:0000000000000000 png_crc_error
     /tmp/cc8LmSaV.s:2440   .text.png_crc_finish:0000000000000000 png_crc_finish
     /tmp/cc8LmSaV.s:2620   .text.png_cache_unknown_chunk:0000000000000000 png_cache_unknown_chunk
     /tmp/cc8LmSaV.s:2806   .text.png_handle_IHDR:0000000000000000 png_handle_IHDR
     /tmp/cc8LmSaV.s:3138   .text.png_handle_PLTE:0000000000000000 png_handle_PLTE
     /tmp/cc8LmSaV.s:3487   .text.png_handle_IEND:0000000000000000 png_handle_IEND
     /tmp/cc8LmSaV.s:3584   .text.png_handle_gAMA:0000000000000000 png_handle_gAMA
     /tmp/cc8LmSaV.s:3746   .text.png_handle_sBIT:0000000000000000 png_handle_sBIT
     /tmp/cc8LmSaV.s:4079   .text.png_handle_cHRM:0000000000000000 png_handle_cHRM
     /tmp/cc8LmSaV.s:4406   .text.png_handle_sRGB:0000000000000000 png_handle_sRGB
     /tmp/cc8LmSaV.s:4592   .text.png_handle_iCCP:0000000000000000 png_handle_iCCP
     /tmp/cc8LmSaV.s:5565   .text.png_handle_sPLT:0000000000000000 png_handle_sPLT
     /tmp/cc8LmSaV.s:6042   .text.png_handle_tRNS:0000000000000000 png_handle_tRNS
     /tmp/cc8LmSaV.s:6400   .text.png_handle_bKGD:0000000000000000 png_handle_bKGD
     /tmp/cc8LmSaV.s:6716   .text.png_handle_hIST:0000000000000000 png_handle_hIST
     /tmp/cc8LmSaV.s:6935   .text.png_handle_pHYs:0000000000000000 png_handle_pHYs
     /tmp/cc8LmSaV.s:7162   .text.png_handle_oFFs:0000000000000000 png_handle_oFFs
     /tmp/cc8LmSaV.s:7394   .text.png_handle_pCAL:0000000000000000 png_handle_pCAL
     /tmp/cc8LmSaV.s:7935   .text.png_handle_sCAL:0000000000000000 png_handle_sCAL
     /tmp/cc8LmSaV.s:8284   .text.png_handle_tIME:0000000000000000 png_handle_tIME
     /tmp/cc8LmSaV.s:8471   .text.png_handle_tEXt:0000000000000000 png_handle_tEXt
     /tmp/cc8LmSaV.s:8762   .text.png_handle_zTXt:0000000000000000 png_handle_zTXt
     /tmp/cc8LmSaV.s:9144   .text.png_handle_iTXt:0000000000000000 png_handle_iTXt
     /tmp/cc8LmSaV.s:9695   .text.png_handle_unknown:0000000000000000 png_handle_unknown
     /tmp/cc8LmSaV.s:9985   .text.png_check_chunk_name:0000000000000000 png_check_chunk_name
     /tmp/cc8LmSaV.s:10054  .text.png_read_chunk_header:0000000000000000 png_read_chunk_header
     /tmp/cc8LmSaV.s:10167  .text.png_combine_row:0000000000000000 png_combine_row
     /tmp/cc8LmSaV.s:13880  .rodata.display_mask.7195:0000000000000000 display_mask.7195
     /tmp/cc8LmSaV.s:13839  .rodata.row_mask.7194:0000000000000000 row_mask.7194
     /tmp/cc8LmSaV.s:11210  .text.png_do_read_interlace:0000000000000000 png_do_read_interlace
     /tmp/cc8LmSaV.s:13827  .rodata.png_pass_inc.7239:0000000000000000 png_pass_inc.7239
     /tmp/cc8LmSaV.s:12312  .text.png_read_filter_row:0000000000000000 png_read_filter_row
     /tmp/cc8LmSaV.s:12425  .text.png_read_IDAT_data:0000000000000000 png_read_IDAT_data
     /tmp/cc8LmSaV.s:12785  .text.png_read_finish_IDAT:0000000000000000 png_read_finish_IDAT
     /tmp/cc8LmSaV.s:12882  .text.png_read_finish_row:0000000000000000 png_read_finish_row
     /tmp/cc8LmSaV.s:13806  .rodata.png_pass_yinc.7425:0000000000000000 png_pass_yinc.7425
     /tmp/cc8LmSaV.s:13797  .rodata.png_pass_ystart.7424:0000000000000000 png_pass_ystart.7424
     /tmp/cc8LmSaV.s:13820  .rodata.png_pass_inc.7423:0000000000000000 png_pass_inc.7423
     /tmp/cc8LmSaV.s:13811  .rodata.png_pass_start.7422:0000000000000000 png_pass_start.7422
     /tmp/cc8LmSaV.s:13121  .text.png_read_start_row:0000000000000000 png_read_start_row
     /tmp/cc8LmSaV.s:13811  .rodata.png_pass_start.7422:0000000000000000 png_pass_start.7431
     /tmp/cc8LmSaV.s:13820  .rodata.png_pass_inc.7423:0000000000000000 png_pass_inc.7432
     /tmp/cc8LmSaV.s:602    .rodata.png_inflate_claim.str1.1:000000000000000f .LC1
     /tmp/cc8LmSaV.s:600    .rodata.png_inflate_claim.str1.1:0000000000000000 .LC0
     /tmp/cc8LmSaV.s:773    .rodata.png_read_buffer.str1.8:0000000000000000 .LC2
     /tmp/cc8LmSaV.s:1184   .rodata.png_inflate.constprop.0.str1.1:0000000000000000 .LC3
     /tmp/cc8LmSaV.s:1472   .rodata.png_decompress_chunk.constprop.0.str1.1:0000000000000000 .LC4
     /tmp/cc8LmSaV.s:1949   .rodata.png_get_uint_31.str1.8:0000000000000000 .LC5
     /tmp/cc8LmSaV.s:2123   .rodata.png_read_sig.str1.8:0000000000000000 .LC7
     /tmp/cc8LmSaV.s:2119   .rodata.png_read_sig.str1.1:0000000000000000 .LC6
     /tmp/cc8LmSaV.s:2434   .rodata.png_crc_finish.str1.1:0000000000000000 .LC8
     /tmp/cc8LmSaV.s:2615   .rodata.png_cache_unknown_chunk.str1.8:0000000000000000 .LC9
     /tmp/cc8LmSaV.s:2800   .rodata.png_handle_IHDR.str1.1:000000000000000d .LC11
     /tmp/cc8LmSaV.s:2798   .rodata.png_handle_IHDR.str1.1:0000000000000000 .LC10
     /tmp/cc8LmSaV.s:3128   .rodata.png_handle_PLTE.str1.1:0000000000000030 .LC15
     /tmp/cc8LmSaV.s:3132   .rodata.png_handle_PLTE.str1.1:0000000000000056 .LC17
     /tmp/cc8LmSaV.s:3126   .rodata.png_handle_PLTE.str1.1:0000000000000017 .LC14
     /tmp/cc8LmSaV.s:3130   .rodata.png_handle_PLTE.str1.1:0000000000000043 .LC16
     /tmp/cc8LmSaV.s:3124   .rodata.png_handle_PLTE.str1.1:000000000000000d .LC13
     /tmp/cc8LmSaV.s:3122   .rodata.png_handle_PLTE.str1.1:0000000000000000 .LC12
     /tmp/cc8LmSaV.s:4073   .rodata.png_handle_cHRM.str1.1:0000000000000000 .LC18
     /tmp/cc8LmSaV.s:4400   .rodata.png_handle_sRGB.str1.1:0000000000000000 .LC19
     /tmp/cc8LmSaV.s:4584   .rodata.png_handle_iCCP.str1.1:0000000000000024 .LC23
     /tmp/cc8LmSaV.s:4582   .rodata.png_handle_iCCP.str1.1:0000000000000018 .LC22
     /tmp/cc8LmSaV.s:4586   .rodata.png_handle_iCCP.str1.1:000000000000003b .LC24
     /tmp/cc8LmSaV.s:4578   .rodata.png_handle_iCCP.str1.1:0000000000000000 .LC20
     /tmp/cc8LmSaV.s:4580   .rodata.png_handle_iCCP.str1.1:000000000000000e .LC21
     /tmp/cc8LmSaV.s:5555   .rodata.png_handle_sPLT.str1.1:0000000000000015 .LC27
     /tmp/cc8LmSaV.s:5550   .rodata.png_handle_sPLT.str1.8:0000000000000000 .LC25
     /tmp/cc8LmSaV.s:5553   .rodata.png_handle_sPLT.str1.1:0000000000000000 .LC26
     /tmp/cc8LmSaV.s:5559   .rodata.png_handle_sPLT.str1.8:0000000000000028 .LC28
     /tmp/cc8LmSaV.s:6036   .rodata.png_handle_tRNS.str1.1:0000000000000000 .LC29
     /tmp/cc8LmSaV.s:6394   .rodata.png_handle_bKGD.str1.1:0000000000000000 .LC30
     /tmp/cc8LmSaV.s:7384   .rodata.png_handle_pCAL.str1.1:0000000000000000 .LC31
     /tmp/cc8LmSaV.s:7386   .rodata.png_handle_pCAL.str1.1:0000000000000018 .LC32
     /tmp/cc8LmSaV.s:7388   .rodata.png_handle_pCAL.str1.1:0000000000000033 .LC33
     /tmp/cc8LmSaV.s:7925   .rodata.png_handle_sCAL.str1.1:000000000000001e .LC36
     /tmp/cc8LmSaV.s:7921   .rodata.png_handle_sCAL.str1.1:0000000000000000 .LC34
     /tmp/cc8LmSaV.s:7923   .rodata.png_handle_sCAL.str1.1:000000000000000d .LC35
     /tmp/cc8LmSaV.s:7927   .rodata.png_handle_sCAL.str1.1:0000000000000031 .LC37
     /tmp/cc8LmSaV.s:7929   .rodata.png_handle_sCAL.str1.1:0000000000000043 .LC38
     /tmp/cc8LmSaV.s:8465   .rodata.png_handle_tEXt.str1.8:0000000000000000 .LC40
     /tmp/cc8LmSaV.s:8461   .rodata.png_handle_tEXt.str1.1:0000000000000000 .LC39
     /tmp/cc8LmSaV.s:8754   .rodata.png_handle_zTXt.str1.1:0000000000000000 .LC41
     /tmp/cc8LmSaV.s:8756   .rodata.png_handle_zTXt.str1.1:0000000000000019 .LC42
     /tmp/cc8LmSaV.s:9138   .rodata.png_handle_iTXt.str1.1:0000000000000000 .LC43
     /tmp/cc8LmSaV.s:9682   .rodata.png_handle_unknown.str1.1:0000000000000014 .LC45
     /tmp/cc8LmSaV.s:9686   .rodata.png_handle_unknown.str1.8:0000000000000000 .LC46
     /tmp/cc8LmSaV.s:9689   .rodata.png_handle_unknown.str1.1:000000000000002a .LC47
     /tmp/cc8LmSaV.s:9680   .rodata.png_handle_unknown.str1.1:0000000000000000 .LC44
     /tmp/cc8LmSaV.s:9979   .rodata.png_check_chunk_name.str1.1:0000000000000000 .LC48
     /tmp/cc8LmSaV.s:10154  .rodata.png_combine_row.str1.8:0000000000000000 .LC50
     /tmp/cc8LmSaV.s:10157  .rodata.png_combine_row.str1.1:0000000000000019 .LC51
     /tmp/cc8LmSaV.s:10150  .rodata.png_combine_row.str1.1:0000000000000000 .LC49
     /tmp/cc8LmSaV.s:10161  .rodata.png_combine_row.str1.8:0000000000000028 .LC52
     /tmp/cc8LmSaV.s:12419  .rodata.png_read_IDAT_data.str1.1:000000000000002c .LC55
     /tmp/cc8LmSaV.s:12417  .rodata.png_read_IDAT_data.str1.1:0000000000000016 .LC54
     /tmp/cc8LmSaV.s:12415  .rodata.png_read_IDAT_data.str1.1:0000000000000000 .LC53
     /tmp/cc8LmSaV.s:13115  .rodata.png_read_start_row.str1.8:0000000000000000 .LC56
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
inflateReset
inflateInit_
png_zstream_error
png_safecat
png_chunk_warning
__stack_chk_fail
png_free
png_malloc_base
png_chunk_error
png_read_data
png_calculate_crc
inflate
png_chunk_benign_error
memcpy
png_error
png_sig_cmp
png_malloc_warn
png_set_IHDR
png_set_PLTE
png_colorspace_set_gamma
png_colorspace_sync
png_set_sBIT
png_colorspace_set_chromaticities
png_colorspace_set_sRGB
png_icc_check_length
png_icc_check_header
png_icc_check_tag_table
png_icc_set_sRGB
png_free_data
png_set_sPLT
png_warning
png_set_tRNS
png_set_bKGD
png_set_hIST
png_set_pHYs
png_set_oFFs
png_set_pCAL
png_check_fp_number
png_set_sCAL_s
png_set_tIME
strlen
png_set_text_2
png_set_unknown_chunks
png_app_warning
png_reset_crc
__memcpy_chk
memset
png_init_read_transformations
png_malloc
png_calloc
