   1              		.file	"pngrio.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.rodata.png_default_read_data.str1.1,"aMS",@progbits,1
   5              	.LC0:
   6 0000 52656164 		.string	"Read Error"
   6      20457272 
   6      6F7200
   7              		.section	.text.png_default_read_data,"ax",@progbits
   8              		.p2align 4
   9              		.globl	png_default_read_data
  11              	png_default_read_data:
  12              	.LVL0:
  13              	.LFB42:
  14              		.file 1 "fltk-1.3.4-1/png/pngrio.c"
   1:fltk-1.3.4-1/png/pngrio.c **** 
   2:fltk-1.3.4-1/png/pngrio.c **** /* pngrio.c - functions for data input
   3:fltk-1.3.4-1/png/pngrio.c ****  *
   4:fltk-1.3.4-1/png/pngrio.c ****  * Last changed in libpng 1.6.15 [November 20, 2014]
   5:fltk-1.3.4-1/png/pngrio.c ****  * Copyright (c) 1998-2014 Glenn Randers-Pehrson
   6:fltk-1.3.4-1/png/pngrio.c ****  * (Version 0.96 Copyright (c) 1996, 1997 Andreas Dilger)
   7:fltk-1.3.4-1/png/pngrio.c ****  * (Version 0.88 Copyright (c) 1995, 1996 Guy Eric Schalnat, Group 42, Inc.)
   8:fltk-1.3.4-1/png/pngrio.c ****  *
   9:fltk-1.3.4-1/png/pngrio.c ****  * This code is released under the libpng license.
  10:fltk-1.3.4-1/png/pngrio.c ****  * For conditions of distribution and use, see the disclaimer
  11:fltk-1.3.4-1/png/pngrio.c ****  * and license in png.h
  12:fltk-1.3.4-1/png/pngrio.c ****  *
  13:fltk-1.3.4-1/png/pngrio.c ****  * This file provides a location for all input.  Users who need
  14:fltk-1.3.4-1/png/pngrio.c ****  * special handling are expected to write a function that has the same
  15:fltk-1.3.4-1/png/pngrio.c ****  * arguments as this and performs a similar function, but that possibly
  16:fltk-1.3.4-1/png/pngrio.c ****  * has a different input method.  Note that you shouldn't change this
  17:fltk-1.3.4-1/png/pngrio.c ****  * function, but rather write a replacement function and then make
  18:fltk-1.3.4-1/png/pngrio.c ****  * libpng use it at run time with png_set_read_fn(...).
  19:fltk-1.3.4-1/png/pngrio.c ****  */
  20:fltk-1.3.4-1/png/pngrio.c **** 
  21:fltk-1.3.4-1/png/pngrio.c **** #include "pngpriv.h"
  22:fltk-1.3.4-1/png/pngrio.c **** 
  23:fltk-1.3.4-1/png/pngrio.c **** #ifdef PNG_READ_SUPPORTED
  24:fltk-1.3.4-1/png/pngrio.c **** 
  25:fltk-1.3.4-1/png/pngrio.c **** /* Read the data from whatever input you are using.  The default routine
  26:fltk-1.3.4-1/png/pngrio.c ****  * reads from a file pointer.  Note that this routine sometimes gets called
  27:fltk-1.3.4-1/png/pngrio.c ****  * with very small lengths, so you should implement some kind of simple
  28:fltk-1.3.4-1/png/pngrio.c ****  * buffering if you are using unbuffered reads.  This should never be asked
  29:fltk-1.3.4-1/png/pngrio.c ****  * to read more then 64K on a 16 bit machine.
  30:fltk-1.3.4-1/png/pngrio.c ****  */
  31:fltk-1.3.4-1/png/pngrio.c **** void /* PRIVATE */
  32:fltk-1.3.4-1/png/pngrio.c **** png_read_data(png_structrp png_ptr, png_bytep data, png_size_t length)
  33:fltk-1.3.4-1/png/pngrio.c **** {
  34:fltk-1.3.4-1/png/pngrio.c ****    png_debug1(4, "reading %d bytes", (int)length);
  35:fltk-1.3.4-1/png/pngrio.c **** 
  36:fltk-1.3.4-1/png/pngrio.c ****    if (png_ptr->read_data_fn != NULL)
  37:fltk-1.3.4-1/png/pngrio.c ****       (*(png_ptr->read_data_fn))(png_ptr, data, length);
  38:fltk-1.3.4-1/png/pngrio.c **** 
  39:fltk-1.3.4-1/png/pngrio.c ****    else
  40:fltk-1.3.4-1/png/pngrio.c ****       png_error(png_ptr, "Call to NULL read function");
  41:fltk-1.3.4-1/png/pngrio.c **** }
  42:fltk-1.3.4-1/png/pngrio.c **** 
  43:fltk-1.3.4-1/png/pngrio.c **** #ifdef PNG_STDIO_SUPPORTED
  44:fltk-1.3.4-1/png/pngrio.c **** /* This is the function that does the actual reading of data.  If you are
  45:fltk-1.3.4-1/png/pngrio.c ****  * not reading from a standard C stream, you should create a replacement
  46:fltk-1.3.4-1/png/pngrio.c ****  * read_data function and use it at run time with png_set_read_fn(), rather
  47:fltk-1.3.4-1/png/pngrio.c ****  * than changing the library.
  48:fltk-1.3.4-1/png/pngrio.c ****  */
  49:fltk-1.3.4-1/png/pngrio.c **** void PNGCBAPI
  50:fltk-1.3.4-1/png/pngrio.c **** png_default_read_data(png_structp png_ptr, png_bytep data, png_size_t length)
  51:fltk-1.3.4-1/png/pngrio.c **** {
  15              		.loc 1 51 1 view -0
  16              		.cfi_startproc
  17              		.loc 1 51 1 is_stmt 0 view .LVU1
  18 0000 F30F1EFA 		endbr64
  52:fltk-1.3.4-1/png/pngrio.c ****    png_size_t check;
  19              		.loc 1 52 4 is_stmt 1 view .LVU2
  53:fltk-1.3.4-1/png/pngrio.c **** 
  54:fltk-1.3.4-1/png/pngrio.c ****    if (png_ptr == NULL)
  20              		.loc 1 54 4 view .LVU3
  51:fltk-1.3.4-1/png/pngrio.c ****    png_size_t check;
  21              		.loc 1 51 1 is_stmt 0 view .LVU4
  22 0004 55       		pushq	%rbp
  23              		.cfi_def_cfa_offset 16
  24              		.cfi_offset 6, -16
  25 0005 4889FD   		movq	%rdi, %rbp
  26 0008 53       		pushq	%rbx
  27              		.cfi_def_cfa_offset 24
  28              		.cfi_offset 3, -24
  29 0009 4883EC08 		subq	$8, %rsp
  30              		.cfi_def_cfa_offset 32
  31              		.loc 1 54 7 view .LVU5
  32 000d 4885FF   		testq	%rdi, %rdi
  33 0010 741C     		je	.L1
  34              	.LBB4:
  35              	.LBB5:
  36              		.file 2 "/usr/include/x86_64-linux-gnu/bits/stdio2.h"
   1:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** /* Checking macros for stdio functions.
   2:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Copyright (C) 2004-2020 Free Software Foundation, Inc.
   3:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    This file is part of the GNU C Library.
   4:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
   5:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is free software; you can redistribute it and/or
   6:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    modify it under the terms of the GNU Lesser General Public
   7:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License as published by the Free Software Foundation; either
   8:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    version 2.1 of the License, or (at your option) any later version.
   9:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  10:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    The GNU C Library is distributed in the hope that it will be useful,
  11:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  13:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    Lesser General Public License for more details.
  14:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  15:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    You should have received a copy of the GNU Lesser General Public
  16:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    License along with the GNU C Library; if not, see
  17:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****    <https://www.gnu.org/licenses/>.  */
  18:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  19:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _BITS_STDIO2_H
  20:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #define _BITS_STDIO2_H 1
  21:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifndef _STDIO_H
  23:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # error "Never include <bits/stdio2.h> directly; use <stdio.h> instead."
  24:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  25:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  26:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __sprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  27:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...) __THROW;
  28:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsprintf_chk (char *__restrict __s, int __flag, size_t __slen,
  29:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format,
  30:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __gnuc_va_list __ap) __THROW;
  31:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  32:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __va_arg_pack
  33:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  34:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (sprintf (char *__restrict __s, const char *__restrict __fmt, ...))
  35:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  36:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___sprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  37:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __bos (__s), __fmt, __va_arg_pack ());
  38:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  39:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #elif !defined __cplusplus
  40:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # define sprintf(str, ...) \
  41:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___sprintf_chk (str, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  42:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   __VA_ARGS__)
  43:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  44:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  45:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  46:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsprintf (char *__restrict __s, const char *__restrict __fmt,
  47:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 __gnuc_va_list __ap))
  48:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  49:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsprintf_chk (__s, __USE_FORTIFY_LEVEL - 1,
  50:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __ap);
  51:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  52:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if defined __USE_ISOC99 || defined __USE_UNIX98
  54:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  55:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __snprintf_chk (char *__restrict __s, size_t __n, int __flag,
  56:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __slen, const char *__restrict __format,
  57:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   ...) __THROW;
  58:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vsnprintf_chk (char *__restrict __s, size_t __n, int __flag,
  59:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    size_t __slen, const char *__restrict __format,
  60:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __gnuc_va_list __ap) __THROW;
  61:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  63:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  64:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (snprintf (char *__restrict __s, size_t __n,
  65:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		 const char *__restrict __fmt, ...))
  66:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___snprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  68:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				   __bos (__s), __fmt, __va_arg_pack ());
  69:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  70:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
  71:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define snprintf(str, len, ...) \
  72:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __builtin___snprintf_chk (str, len, __USE_FORTIFY_LEVEL - 1, __bos (str), \
  73:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    __VA_ARGS__)
  74:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
  75:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  76:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  77:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vsnprintf (char *__restrict __s, size_t __n,
  78:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  const char *__restrict __fmt, __gnuc_va_list __ap))
  79:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __builtin___vsnprintf_chk (__s, __n, __USE_FORTIFY_LEVEL - 1,
  81:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				    __bos (__s), __fmt, __ap);
  82:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
  83:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  84:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
  85:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  86:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __USE_FORTIFY_LEVEL > 1
  87:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  88:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __fprintf_chk (FILE *__restrict __stream, int __flag,
  89:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  const char *__restrict __format, ...);
  90:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __printf_chk (int __flag, const char *__restrict __format, ...);
  91:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vfprintf_chk (FILE *__restrict __stream, int __flag,
  92:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __format, __gnuc_va_list __ap);
  93:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vprintf_chk (int __flag, const char *__restrict __format,
  94:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __gnuc_va_list __ap);
  95:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
  96:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __va_arg_pack
  97:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
  98:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fprintf (FILE *__restrict __stream, const char *__restrict __fmt, ...)
  99:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 100:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt,
 101:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 102:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 103:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 104:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 105:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** printf (const char *__restrict __fmt, ...)
 106:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 107:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __printf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __va_arg_pack ());
 108:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 109:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # elif !defined __cplusplus
 110:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define printf(...) \
 111:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __printf_chk (__USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
 112:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  define fprintf(stream, ...) \
 113:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __fprintf_chk (stream, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
 114:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
 115:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 116:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 117:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** vprintf (const char *__restrict __fmt, __gnuc_va_list __ap)
 118:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 119:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #ifdef __USE_EXTERN_INLINES
 120:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __vfprintf_chk (stdout, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
 121:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #else
 122:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __vprintf_chk (__USE_FORTIFY_LEVEL - 1, __fmt, __ap);
 123:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
 124:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 125:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 126:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 127:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** vfprintf (FILE *__restrict __stream,
 128:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 	  const char *__restrict __fmt, __gnuc_va_list __ap)
 129:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 130:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __vfprintf_chk (__stream, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
 131:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 132:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 133:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __USE_XOPEN2K8
 134:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __dprintf_chk (int __fd, int __flag, const char *__restrict __fmt,
 135:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  ...) __attribute__ ((__format__ (__printf__, 3, 4)));
 136:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vdprintf_chk (int __fd, int __flag,
 137:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __fmt, __gnuc_va_list __arg)
 138:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __attribute__ ((__format__ (__printf__, 3, 0)));
 139:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 140:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  ifdef __va_arg_pack
 141:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 142:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** dprintf (int __fd, const char *__restrict __fmt, ...)
 143:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 144:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __dprintf_chk (__fd, __USE_FORTIFY_LEVEL - 1, __fmt,
 145:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			__va_arg_pack ());
 146:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 147:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  elif !defined __cplusplus
 148:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #   define dprintf(fd, ...) \
 149:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __dprintf_chk (fd, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
 150:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  endif
 151:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 152:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 153:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** vdprintf (int __fd, const char *__restrict __fmt, __gnuc_va_list __ap)
 154:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 155:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __vdprintf_chk (__fd, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
 156:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 157:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
 158:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 159:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # ifdef __USE_GNU
 160:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 161:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __asprintf_chk (char **__restrict __ptr, int __flag,
 162:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   const char *__restrict __fmt, ...)
 163:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __THROW __attribute__ ((__format__ (__printf__, 3, 4))) __wur;
 164:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __vasprintf_chk (char **__restrict __ptr, int __flag,
 165:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			    const char *__restrict __fmt, __gnuc_va_list __arg)
 166:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __THROW __attribute__ ((__format__ (__printf__, 3, 0))) __wur;
 167:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __obstack_printf_chk (struct obstack *__restrict __obstack,
 168:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				 int __flag, const char *__restrict __format,
 169:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				 ...)
 170:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __THROW __attribute__ ((__format__ (__printf__, 3, 4)));
 171:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern int __obstack_vprintf_chk (struct obstack *__restrict __obstack,
 172:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  int __flag,
 173:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  const char *__restrict __format,
 174:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				  __gnuc_va_list __args)
 175:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __THROW __attribute__ ((__format__ (__printf__, 3, 0)));
 176:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 177:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  ifdef __va_arg_pack
 178:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 179:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (asprintf (char **__restrict __ptr, const char *__restrict __fmt, ...))
 180:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 181:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __asprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt,
 182:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			 __va_arg_pack ());
 183:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 184:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 185:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 186:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (__asprintf (char **__restrict __ptr, const char *__restrict __fmt,
 187:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		   ...))
 188:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 189:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __asprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt,
 190:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			 __va_arg_pack ());
 191:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 192:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 193:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 194:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (obstack_printf (struct obstack *__restrict __obstack,
 195:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		       const char *__restrict __fmt, ...))
 196:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 197:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __obstack_printf_chk (__obstack, __USE_FORTIFY_LEVEL - 1, __fmt,
 198:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			       __va_arg_pack ());
 199:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 200:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  elif !defined __cplusplus
 201:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #   define asprintf(ptr, ...) \
 202:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __asprintf_chk (ptr, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
 203:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #   define __asprintf(ptr, ...) \
 204:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __asprintf_chk (ptr, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
 205:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #   define obstack_printf(obstack, ...) \
 206:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   __obstack_printf_chk (obstack, __USE_FORTIFY_LEVEL - 1, __VA_ARGS__)
 207:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #  endif
 208:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 209:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 210:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (vasprintf (char **__restrict __ptr, const char *__restrict __fmt,
 211:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		  __gnuc_va_list __ap))
 212:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 213:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __vasprintf_chk (__ptr, __USE_FORTIFY_LEVEL - 1, __fmt, __ap);
 214:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 215:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 216:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function int
 217:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __NTH (obstack_vprintf (struct obstack *__restrict __obstack,
 218:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			const char *__restrict __fmt, __gnuc_va_list __ap))
 219:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 220:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __obstack_vprintf_chk (__obstack, __USE_FORTIFY_LEVEL - 1, __fmt,
 221:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 				__ap);
 222:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 223:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 224:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** # endif
 225:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 226:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
 227:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 228:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #if __GLIBC_USE (DEPRECATED_GETS)
 229:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern char *__gets_chk (char *__str, size_t) __wur;
 230:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern char *__REDIRECT (__gets_warn, (char *__str), gets)
 231:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __wur __warnattr ("please use fgets or getline instead, gets can't "
 232:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		       "specify buffer size");
 233:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 234:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function __wur char *
 235:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** gets (char *__str)
 236:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 237:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   if (__bos (__str) != (size_t) -1)
 238:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****     return __gets_chk (__str, __bos (__str));
 239:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __gets_warn (__str);
 240:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 241:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** #endif
 242:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 243:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern char *__fgets_chk (char *__restrict __s, size_t __size, int __n,
 244:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  FILE *__restrict __stream) __wur;
 245:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern char *__REDIRECT (__fgets_alias,
 246:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			 (char *__restrict __s, int __n,
 247:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  FILE *__restrict __stream), fgets) __wur;
 248:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern char *__REDIRECT (__fgets_chk_warn,
 249:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			 (char *__restrict __s, size_t __size, int __n,
 250:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  FILE *__restrict __stream), __fgets_chk)
 251:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __wur __warnattr ("fgets called with bigger size than length "
 252:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		       "of destination buffer");
 253:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 254:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function __wur char *
 255:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fgets (char *__restrict __s, int __n, FILE *__restrict __stream)
 256:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 257:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   if (__bos (__s) != (size_t) -1)
 258:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****     {
 259:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****       if (!__builtin_constant_p (__n) || __n <= 0)
 260:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 	return __fgets_chk (__s, __bos (__s), __n, __stream);
 261:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 262:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****       if ((size_t) __n > __bos (__s))
 263:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 	return __fgets_chk_warn (__s, __bos (__s), __n, __stream);
 264:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****     }
 265:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fgets_alias (__s, __n, __stream);
 266:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** }
 267:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 268:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern size_t __fread_chk (void *__restrict __ptr, size_t __ptrlen,
 269:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __size, size_t __n,
 270:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   FILE *__restrict __stream) __wur;
 271:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern size_t __REDIRECT (__fread_alias,
 272:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  (void *__restrict __ptr, size_t __size,
 273:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __n, FILE *__restrict __stream),
 274:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  fread) __wur;
 275:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** extern size_t __REDIRECT (__fread_chk_warn,
 276:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  (void *__restrict __ptr, size_t __ptrlen,
 277:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   size_t __size, size_t __n,
 278:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			   FILE *__restrict __stream),
 279:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 			  __fread_chk)
 280:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****      __wur __warnattr ("fread called with bigger size * nmemb than length "
 281:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 		       "of destination buffer");
 282:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 283:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** __fortify_function __wur size_t
 284:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** fread (void *__restrict __ptr, size_t __size, size_t __n,
 285:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****        FILE *__restrict __stream)
 286:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** {
 287:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   if (__bos0 (__ptr) != (size_t) -1)
 288:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****     {
 289:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****       if (!__builtin_constant_p (__size)
 290:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 	  || !__builtin_constant_p (__n)
 291:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 	  || (__size | __n) >= (((size_t) 1) << (8 * sizeof (size_t) / 2)))
 292:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 	return __fread_chk (__ptr, __bos0 (__ptr), __size, __n, __stream);
 293:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 
 294:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****       if (__size * __n > __bos0 (__ptr))
 295:/usr/include/x86_64-linux-gnu/bits/stdio2.h **** 	return __fread_chk_warn (__ptr, __bos0 (__ptr), __size, __n, __stream);
 296:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****     }
 297:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****   return __fread_alias (__ptr, __size, __n, __stream);
  37              		.loc 2 297 10 view .LVU6
  38 0012 488B8D08 		movq	264(%rbp), %rcx
  38      010000
  39 0019 4889F7   		movq	%rsi, %rdi
  40              	.LVL1:
  41              		.loc 2 297 10 view .LVU7
  42 001c BE010000 		movl	$1, %esi
  42      00
  43              	.LVL2:
  44              		.loc 2 297 10 view .LVU8
  45 0021 4889D3   		movq	%rdx, %rbx
  46              	.LBE5:
  47              	.LBE4:
  55:fltk-1.3.4-1/png/pngrio.c ****       return;
  56:fltk-1.3.4-1/png/pngrio.c **** 
  57:fltk-1.3.4-1/png/pngrio.c ****    /* fread() returns 0 on error, so it is OK to store this in a png_size_t
  58:fltk-1.3.4-1/png/pngrio.c ****     * instead of an int, which is what fread() actually returns.
  59:fltk-1.3.4-1/png/pngrio.c ****     */
  60:fltk-1.3.4-1/png/pngrio.c ****    check = fread(data, 1, length, png_voidcast(png_FILE_p, png_ptr->io_ptr));
  48              		.loc 1 60 4 is_stmt 1 view .LVU9
  49              	.LVL3:
  50              	.LBB7:
  51              	.LBI4:
 284:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****        FILE *__restrict __stream)
  52              		.loc 2 284 1 view .LVU10
  53              	.LBB6:
 287:/usr/include/x86_64-linux-gnu/bits/stdio2.h ****     {
  54              		.loc 2 287 3 view .LVU11
  55              		.loc 2 297 3 view .LVU12
  56              		.loc 2 297 10 is_stmt 0 view .LVU13
  57 0024 E8000000 		call	fread@PLT
  57      00
  58              	.LVL4:
  59              		.loc 2 297 10 view .LVU14
  60              	.LBE6:
  61              	.LBE7:
  61:fltk-1.3.4-1/png/pngrio.c **** 
  62:fltk-1.3.4-1/png/pngrio.c ****    if (check != length)
  62              		.loc 1 62 4 is_stmt 1 view .LVU15
  63              		.loc 1 62 7 is_stmt 0 view .LVU16
  64 0029 4839C3   		cmpq	%rax, %rbx
  65 002c 7507     		jne	.L8
  66              	.LVL5:
  67              	.L1:
  63:fltk-1.3.4-1/png/pngrio.c ****       png_error(png_ptr, "Read Error");
  64:fltk-1.3.4-1/png/pngrio.c **** }
  68              		.loc 1 64 1 view .LVU17
  69 002e 4883C408 		addq	$8, %rsp
  70              		.cfi_remember_state
  71              		.cfi_def_cfa_offset 24
  72 0032 5B       		popq	%rbx
  73              		.cfi_def_cfa_offset 16
  74 0033 5D       		popq	%rbp
  75              		.cfi_def_cfa_offset 8
  76              	.LVL6:
  77              		.loc 1 64 1 view .LVU18
  78 0034 C3       		ret
  79              	.LVL7:
  80              	.L8:
  81              		.cfi_restore_state
  63:fltk-1.3.4-1/png/pngrio.c ****       png_error(png_ptr, "Read Error");
  82              		.loc 1 63 7 is_stmt 1 view .LVU19
  83 0035 488D3500 		leaq	.LC0(%rip), %rsi
  83      000000
  84 003c 4889EF   		movq	%rbp, %rdi
  85 003f E8000000 		call	png_error@PLT
  85      00
  86              	.LVL8:
  63:fltk-1.3.4-1/png/pngrio.c ****       png_error(png_ptr, "Read Error");
  87              		.loc 1 63 7 is_stmt 0 view .LVU20
  88              		.cfi_endproc
  89              	.LFE42:
  91              		.section	.rodata.png_read_data.str1.1,"aMS",@progbits,1
  92              	.LC1:
  93 0000 43616C6C 		.string	"Call to NULL read function"
  93      20746F20 
  93      4E554C4C 
  93      20726561 
  93      64206675 
  94              		.section	.text.png_read_data,"ax",@progbits
  95              		.p2align 4
  96              		.globl	png_read_data
  98              	png_read_data:
  99              	.LVL9:
 100              	.LFB41:
  33:fltk-1.3.4-1/png/pngrio.c ****    png_debug1(4, "reading %d bytes", (int)length);
 101              		.loc 1 33 1 is_stmt 1 view -0
 102              		.cfi_startproc
  33:fltk-1.3.4-1/png/pngrio.c ****    png_debug1(4, "reading %d bytes", (int)length);
 103              		.loc 1 33 1 is_stmt 0 view .LVU22
 104 0000 F30F1EFA 		endbr64
  34:fltk-1.3.4-1/png/pngrio.c **** 
 105              		.loc 1 34 4 is_stmt 1 view .LVU23
  36:fltk-1.3.4-1/png/pngrio.c ****       (*(png_ptr->read_data_fn))(png_ptr, data, length);
 106              		.loc 1 36 4 view .LVU24
  36:fltk-1.3.4-1/png/pngrio.c ****       (*(png_ptr->read_data_fn))(png_ptr, data, length);
 107              		.loc 1 36 15 is_stmt 0 view .LVU25
 108 0004 488B8700 		movq	256(%rdi), %rax
 108      010000
  36:fltk-1.3.4-1/png/pngrio.c ****       (*(png_ptr->read_data_fn))(png_ptr, data, length);
 109              		.loc 1 36 7 view .LVU26
 110 000b 4885C0   		testq	%rax, %rax
 111 000e 7402     		je	.L10
  37:fltk-1.3.4-1/png/pngrio.c **** 
 112              		.loc 1 37 7 is_stmt 1 view .LVU27
  37:fltk-1.3.4-1/png/pngrio.c **** 
 113              		.loc 1 37 8 is_stmt 0 view .LVU28
 114 0010 FFE0     		jmp	*%rax
 115              	.LVL10:
 116              	.L10:
  40:fltk-1.3.4-1/png/pngrio.c **** }
 117              		.loc 1 40 7 is_stmt 1 view .LVU29
  33:fltk-1.3.4-1/png/pngrio.c ****    png_debug1(4, "reading %d bytes", (int)length);
 118              		.loc 1 33 1 is_stmt 0 view .LVU30
 119 0012 50       		pushq	%rax
 120              		.cfi_def_cfa_offset 16
  40:fltk-1.3.4-1/png/pngrio.c **** }
 121              		.loc 1 40 7 view .LVU31
 122 0013 488D3500 		leaq	.LC1(%rip), %rsi
 122      000000
 123              	.LVL11:
  40:fltk-1.3.4-1/png/pngrio.c **** }
 124              		.loc 1 40 7 view .LVU32
 125 001a E8000000 		call	png_error@PLT
 125      00
 126              	.LVL12:
  40:fltk-1.3.4-1/png/pngrio.c **** }
 127              		.loc 1 40 7 view .LVU33
 128              		.cfi_endproc
 129              	.LFE41:
 131              		.section	.rodata.png_set_read_fn.str1.8,"aMS",@progbits,1
 132              		.align 8
 133              	.LC2:
 134 0000 43616E27 		.string	"Can't set both read_data_fn and write_data_fn in the same structure"
 134      74207365 
 134      7420626F 
 134      74682072 
 134      6561645F 
 135              		.section	.text.png_set_read_fn,"ax",@progbits
 136              		.p2align 4
 137              		.globl	png_set_read_fn
 139              	png_set_read_fn:
 140              	.LVL13:
 141              	.LFB43:
  65:fltk-1.3.4-1/png/pngrio.c **** #endif
  66:fltk-1.3.4-1/png/pngrio.c **** 
  67:fltk-1.3.4-1/png/pngrio.c **** /* This function allows the application to supply a new input function
  68:fltk-1.3.4-1/png/pngrio.c ****  * for libpng if standard C streams aren't being used.
  69:fltk-1.3.4-1/png/pngrio.c ****  *
  70:fltk-1.3.4-1/png/pngrio.c ****  * This function takes as its arguments:
  71:fltk-1.3.4-1/png/pngrio.c ****  *
  72:fltk-1.3.4-1/png/pngrio.c ****  * png_ptr      - pointer to a png input data structure
  73:fltk-1.3.4-1/png/pngrio.c ****  *
  74:fltk-1.3.4-1/png/pngrio.c ****  * io_ptr       - pointer to user supplied structure containing info about
  75:fltk-1.3.4-1/png/pngrio.c ****  *                the input functions.  May be NULL.
  76:fltk-1.3.4-1/png/pngrio.c ****  *
  77:fltk-1.3.4-1/png/pngrio.c ****  * read_data_fn - pointer to a new input function that takes as its
  78:fltk-1.3.4-1/png/pngrio.c ****  *                arguments a pointer to a png_struct, a pointer to
  79:fltk-1.3.4-1/png/pngrio.c ****  *                a location where input data can be stored, and a 32-bit
  80:fltk-1.3.4-1/png/pngrio.c ****  *                unsigned int that is the number of bytes to be read.
  81:fltk-1.3.4-1/png/pngrio.c ****  *                To exit and output any fatal error messages the new write
  82:fltk-1.3.4-1/png/pngrio.c ****  *                function should call png_error(png_ptr, "Error msg").
  83:fltk-1.3.4-1/png/pngrio.c ****  *                May be NULL, in which case libpng's default function will
  84:fltk-1.3.4-1/png/pngrio.c ****  *                be used.
  85:fltk-1.3.4-1/png/pngrio.c ****  */
  86:fltk-1.3.4-1/png/pngrio.c **** void PNGAPI
  87:fltk-1.3.4-1/png/pngrio.c **** png_set_read_fn(png_structrp png_ptr, png_voidp io_ptr,
  88:fltk-1.3.4-1/png/pngrio.c ****    png_rw_ptr read_data_fn)
  89:fltk-1.3.4-1/png/pngrio.c **** {
 142              		.loc 1 89 1 is_stmt 1 view -0
 143              		.cfi_startproc
 144              		.loc 1 89 1 is_stmt 0 view .LVU35
 145 0000 F30F1EFA 		endbr64
  90:fltk-1.3.4-1/png/pngrio.c ****    if (png_ptr == NULL)
 146              		.loc 1 90 4 is_stmt 1 view .LVU36
 147              		.loc 1 90 7 is_stmt 0 view .LVU37
 148 0004 4885FF   		testq	%rdi, %rdi
 149 0007 7457     		je	.L22
  91:fltk-1.3.4-1/png/pngrio.c ****       return;
  92:fltk-1.3.4-1/png/pngrio.c **** 
  93:fltk-1.3.4-1/png/pngrio.c ****    png_ptr->io_ptr = io_ptr;
  94:fltk-1.3.4-1/png/pngrio.c **** 
  95:fltk-1.3.4-1/png/pngrio.c **** #ifdef PNG_STDIO_SUPPORTED
  96:fltk-1.3.4-1/png/pngrio.c ****    if (read_data_fn != NULL)
  97:fltk-1.3.4-1/png/pngrio.c ****       png_ptr->read_data_fn = read_data_fn;
  98:fltk-1.3.4-1/png/pngrio.c **** 
  99:fltk-1.3.4-1/png/pngrio.c ****    else
 100:fltk-1.3.4-1/png/pngrio.c ****       png_ptr->read_data_fn = png_default_read_data;
 150              		.loc 1 100 29 view .LVU38
 151 0009 4885D2   		testq	%rdx, %rdx
 152 000c 488D0500 		leaq	png_default_read_data(%rip), %rax
 152      000000
  89:fltk-1.3.4-1/png/pngrio.c ****    if (png_ptr == NULL)
 153              		.loc 1 89 1 view .LVU39
 154 0013 53       		pushq	%rbx
 155              		.cfi_def_cfa_offset 16
 156              		.cfi_offset 3, -16
 157 0014 4889FB   		movq	%rdi, %rbx
  93:fltk-1.3.4-1/png/pngrio.c **** 
 158              		.loc 1 93 4 is_stmt 1 view .LVU40
 159              		.loc 1 100 29 is_stmt 0 view .LVU41
 160 0017 480F44D0 		cmove	%rax, %rdx
 161              	.LVL14:
 101:fltk-1.3.4-1/png/pngrio.c **** #else
 102:fltk-1.3.4-1/png/pngrio.c ****    png_ptr->read_data_fn = read_data_fn;
 103:fltk-1.3.4-1/png/pngrio.c **** #endif
 104:fltk-1.3.4-1/png/pngrio.c **** 
 105:fltk-1.3.4-1/png/pngrio.c **** #ifdef PNG_WRITE_SUPPORTED
 106:fltk-1.3.4-1/png/pngrio.c ****    /* It is an error to write to a read device */
 107:fltk-1.3.4-1/png/pngrio.c ****    if (png_ptr->write_data_fn != NULL)
 162              		.loc 1 107 7 view .LVU42
 163 001b 4883BFF8 		cmpq	$0, 248(%rdi)
 163      00000000 
  93:fltk-1.3.4-1/png/pngrio.c **** 
 164              		.loc 1 93 20 view .LVU43
 165 0023 4889B708 		movq	%rsi, 264(%rdi)
 165      010000
  96:fltk-1.3.4-1/png/pngrio.c ****       png_ptr->read_data_fn = read_data_fn;
 166              		.loc 1 96 4 is_stmt 1 view .LVU44
 167 002a 48899700 		movq	%rdx, 256(%rdi)
 167      010000
 168              		.loc 1 107 4 view .LVU45
 169              		.loc 1 107 7 is_stmt 0 view .LVU46
 170 0031 7417     		je	.L16
 108:fltk-1.3.4-1/png/pngrio.c ****    {
 109:fltk-1.3.4-1/png/pngrio.c ****       png_ptr->write_data_fn = NULL;
 171              		.loc 1 109 7 is_stmt 1 view .LVU47
 172              		.loc 1 109 30 is_stmt 0 view .LVU48
 173 0033 48C787F8 		movq	$0, 248(%rdi)
 173      00000000 
 173      000000
 110:fltk-1.3.4-1/png/pngrio.c ****       png_warning(png_ptr,
 174              		.loc 1 110 7 is_stmt 1 view .LVU49
 175 003e 488D3500 		leaq	.LC2(%rip), %rsi
 175      000000
 176              	.LVL15:
 177              		.loc 1 110 7 is_stmt 0 view .LVU50
 178 0045 E8000000 		call	png_warning@PLT
 178      00
 179              	.LVL16:
 180              	.L16:
 111:fltk-1.3.4-1/png/pngrio.c ****           "Can't set both read_data_fn and write_data_fn in the"
 112:fltk-1.3.4-1/png/pngrio.c ****           " same structure");
 113:fltk-1.3.4-1/png/pngrio.c ****    }
 114:fltk-1.3.4-1/png/pngrio.c **** #endif
 115:fltk-1.3.4-1/png/pngrio.c **** 
 116:fltk-1.3.4-1/png/pngrio.c **** #ifdef PNG_WRITE_FLUSH_SUPPORTED
 117:fltk-1.3.4-1/png/pngrio.c ****    png_ptr->output_flush_fn = NULL;
 181              		.loc 1 117 4 is_stmt 1 view .LVU51
 182              		.loc 1 117 29 is_stmt 0 view .LVU52
 183 004a 48C783A0 		movq	$0, 672(%rbx)
 183      02000000 
 183      000000
 118:fltk-1.3.4-1/png/pngrio.c **** #endif
 119:fltk-1.3.4-1/png/pngrio.c **** }
 184              		.loc 1 119 1 view .LVU53
 185 0055 5B       		popq	%rbx
 186              		.cfi_def_cfa_offset 8
 187              	.LVL17:
 188              		.loc 1 119 1 view .LVU54
 189 0056 C3       		ret
 190              	.LVL18:
 191 0057 660F1F84 		.p2align 4,,10
 191      00000000 
 191      00
 192              		.p2align 3
 193              	.L22:
 194              		.cfi_restore 3
 195              		.loc 1 119 1 view .LVU55
 196 0060 C3       		ret
 197              		.cfi_endproc
 198              	.LFE43:
 200              		.text
 201              	.Letext0:
 202              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 203              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 204              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 205              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 206              		.file 7 "/usr/include/stdio.h"
 207              		.file 8 "/usr/include/x86_64-linux-gnu/bits/setjmp.h"
 208              		.file 9 "/usr/include/x86_64-linux-gnu/bits/types/__sigset_t.h"
 209              		.file 10 "/usr/include/setjmp.h"
 210              		.file 11 "/usr/include/time.h"
 211              		.file 12 "fltk-1.3.4-1/png/pngconf.h"
 212              		.file 13 "fltk-1.3.4-1/png/png.h"
 213              		.file 14 "fltk-1.3.4-1/png/pngstruct.h"
 214              		.file 15 "fltk-1.3.4-1/png/pnginfo.h"
 215              		.file 16 "/usr/include/zconf.h"
 216              		.file 17 "/usr/include/unistd.h"
 217              		.file 18 "/usr/include/x86_64-linux-gnu/bits/getopt_core.h"
 218              		.file 19 "/usr/include/zlib.h"
 219              		.file 20 "fltk-1.3.4-1/png/pngpriv.h"
 18422              		.section	.note.gnu.property,"a"
 18423              		.align 8
 18424 0000 04000000 		.long	 1f - 0f
 18425 0004 10000000 		.long	 4f - 1f
 18426 0008 05000000 		.long	 5
 18427              	0:
 18428 000c 474E5500 		.string	 "GNU"
 18429              	1:
 18430              		.align 8
 18431 0010 020000C0 		.long	 0xc0000002
 18432 0014 04000000 		.long	 3f - 2f
 18433              	2:
 18434 0018 03000000 		.long	 0x3
 18435              	3:
 18436 001c 00000000 		.align 8
 18437              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 pngrio.c
     /tmp/cc1Vwbzu.s:11     .text.png_default_read_data:0000000000000000 png_default_read_data
     /tmp/cc1Vwbzu.s:98     .text.png_read_data:0000000000000000 png_read_data
     /tmp/cc1Vwbzu.s:139    .text.png_set_read_fn:0000000000000000 png_set_read_fn
     /tmp/cc1Vwbzu.s:5      .rodata.png_default_read_data.str1.1:0000000000000000 .LC0
     /tmp/cc1Vwbzu.s:92     .rodata.png_read_data.str1.1:0000000000000000 .LC1
     /tmp/cc1Vwbzu.s:133    .rodata.png_set_read_fn.str1.8:0000000000000000 .LC2
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.pngpriv.h.26.ca3d1719773cd86007410b516123e125
                           .group:0000000000000000 wm4.features.h.19.320b3bf3f3d04eccd55afd968f1ea5b2
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.39700ac5536cfafa1b6db501afc46864
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.pnglibconf.h.15.30e2eea90e566ac06da4f4de487193d7
                           .group:0000000000000000 wm4.pngpriv.h.130.f65d93453b5b5837849611ffe82d627a
                           .group:0000000000000000 wm4.png.h.412.12a95b2193a7d0bc2282b72c70a28ce1
                           .group:0000000000000000 wm4.limits.h.23.3c23ae3e8f372a0298be6ce978307bc7
                           .group:0000000000000000 wm4.limits.h.32.6a1c51cbc8834927c9b529a347d7b23f
                           .group:0000000000000000 wm4.posix1_lim.h.32.858fce26e105c5c0f681b222378d5883
                           .group:0000000000000000 wm4.local_lim.h.25.97ee4129efb08ad296101237bcd3401b
                           .group:0000000000000000 wm4.limits.h.3.0a3ae0fffe30e22dfdd77ac2c1b1fbdd
                           .group:0000000000000000 wm4.local_lim.h.42.9dc3935e0e3b94e23cda247e4e39bd8b
                           .group:0000000000000000 wm4.posix2_lim.h.23.56b9c4f885cbac0b652f53ee56b244b1
                           .group:0000000000000000 wm4.limits.h.60.eb7066f861c8b8edc7a0a399744b0335
                           .group:0000000000000000 wm4.stddef.h.39.1bfffcccc3897d82880a055878218da6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.155.ba788add86a0e365f264484f110c3c29
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.93.0122ffbd02ddfe34dfaf44a2e3561c5b
                           .group:0000000000000000 wm4.stdio_lim.h.19.86760ef34d2b7513aac6ce30cb73c6f8
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.38f8a7cea5a7dfe0d9ad992f7c8483f3
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.setjmp.h.62.5655e5632e7855e400222c83408ceb1d
                           .group:0000000000000000 wm4.time.h.23.18ede267f3a48794bef4705df80339de
                           .group:0000000000000000 wm4.time.h.24.57e6945634c11c9a0e367d020f81b7cf
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.pngconf.h.86.6636b2584cb7be1618479e118d71e58c
                           .group:0000000000000000 wm4.png.h.506.fa53b6434c0b20c8e63094b04d7940c5
                           .group:0000000000000000 wm4.pngpriv.h.298.dc2c896ce0eddc5cfadee24e76e3c417
                           .group:0000000000000000 wm4.float.h.29.cae0b78251c51e3ff449cb238a29ed5b
                           .group:0000000000000000 wm4.math.h.26.671af5ac9cd425a35e0730f7b6d7cde2
                           .group:0000000000000000 wm4.math.h.24.808d6e83a8b3b11b5fa9117392e0d6ca
                           .group:0000000000000000 wm4.libmsimddeclstubs.h.34.4541d7d9ef23fb8c722872ed06b4fd48
                           .group:0000000000000000 wm4.math.h.48.5dafc6157c80230c0414aa9de5e109ba
                           .group:0000000000000000 wm4.fplogb.h.23.f264b61801f4cf347bed2d0fad7232d9
                           .group:0000000000000000 wm4.math.h.193.2a53c39a04fb9ee53d2145d0dd51922b
                           .group:0000000000000000 wm4.math.h.262.a3ec711e4bc2a8e48d58e73f7b61f7e6
                           .group:0000000000000000 wm4.math.h.291.31c5ea429e9ba79c95bf28566b299669
                           .group:0000000000000000 wm4.math.h.308.057dcf159b5c763b6f753ad19bd78a7c
                           .group:0000000000000000 wm4.math.h.351.d4dfe6acabbee9531318a05b7f2a0ebb
                           .group:0000000000000000 wm4.math.h.425.dd23fd9bd1a8b67c9cdacb96d25aa4cb
                           .group:0000000000000000 wm4.math.h.30.7cada3efe024725df2da4c705b6566be
                           .group:0000000000000000 wm4.pngpriv.h.481.f98e7c29eaaa759546a3f9808bc25c74
                           .group:0000000000000000 wm4.pngstruct.h.22.7b9573417641055ab8f42438aa8afadf
                           .group:0000000000000000 wm4.zconf.h.9.5d696d5ff537aa9e4334014200af587a
                           .group:0000000000000000 wm4.zconf.h.252.d660ed3b0952e518b3e109403eef37af
                           .group:0000000000000000 wm4.zconf.h.420.b3ba5ae58b852c80eba061279e8960fb
                           .group:0000000000000000 wm4.types.h.23.ad09b9000f4b9223ee132237184eff7f
                           .group:0000000000000000 wm4.types.h.171.9aecc81dc8df45ffba0c25c0647ef29f
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.stdarg.h.31.250806951830a1b6a3066ee41cf22414
                           .group:0000000000000000 wm4.unistd.h.23.9eac1fbc6e0a9aafe6a69df62b992db8
                           .group:0000000000000000 wm4.posix_opt.h.20.25edad97e3613a63f1969894ab33449b
                           .group:0000000000000000 wm4.unistd.h.210.b40c6c15db1d0b653f8dce03f258da9c
                           .group:0000000000000000 wm4.unistd.h.281.99c6c81af9cf38eab36ea34a36ce096b
                           .group:0000000000000000 wm4.confname.h.27.6b00117a32f457cc72e5ac810a9adade
                           .group:0000000000000000 wm4.zconf.h.480.490915782eb343cae7cfb06f78d23c62
                           .group:0000000000000000 wm4.zlib.h.40.096e6fa45bd4a30b5bc135e17c50b44d
                           .group:0000000000000000 wm4.pngstruct.h.44.bc957704556ff8ddcb697678a008ffae
                           .group:0000000000000000 wm4.pngpriv.h.853.4585af3e74cfb155d8486c5333b94adf
                           .group:0000000000000000 wm4.pngdebug.h.36.e9c57d5f35e3128225fb629498ec6fc8

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
fread
png_error
png_warning
