   1              		.file	"jdapimin.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely.jpeg_CreateDecompress,"ax",@progbits
   5              	.LCOLDB0:
   6              		.section	.text.jpeg_CreateDecompress,"ax",@progbits
   7              	.LHOTB0:
   8              		.p2align 4,,15
   9              		.section	.text.unlikely.jpeg_CreateDecompress
  10              	.Ltext_cold0:
  11              		.section	.text.jpeg_CreateDecompress
  12              		.globl	jpeg_CreateDecompress
  14              	jpeg_CreateDecompress:
  15              	.LFB61:
  16              		.file 1 "fltk-1.3.4-1/jpeg/jdapimin.c"
   1:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
   2:fltk-1.3.4-1/jpeg/jdapimin.c ****  * jdapimin.c
   3:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
   4:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Copyright (C) 1994-1998, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Modified 2009-2013 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jdapimin.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jdapimin.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
   9:fltk-1.3.4-1/jpeg/jdapimin.c ****  * This file contains application interface code for the decompression half
  10:fltk-1.3.4-1/jpeg/jdapimin.c ****  * of the JPEG library.  These are the "minimum" API routines that may be
  11:fltk-1.3.4-1/jpeg/jdapimin.c ****  * needed in either the normal full-decompression case or the
  12:fltk-1.3.4-1/jpeg/jdapimin.c ****  * transcoding-only case.
  13:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
  14:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Most of the routines intended to be called directly by an application
  15:fltk-1.3.4-1/jpeg/jdapimin.c ****  * are in this file or in jdapistd.c.  But also see jcomapi.c for routines
  16:fltk-1.3.4-1/jpeg/jdapimin.c ****  * shared by compression and decompression, and jdtrans.c for the transcoding
  17:fltk-1.3.4-1/jpeg/jdapimin.c ****  * case.
  18:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
  19:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  20:fltk-1.3.4-1/jpeg/jdapimin.c **** #define JPEG_INTERNALS
  21:fltk-1.3.4-1/jpeg/jdapimin.c **** #include "jinclude.h"
  22:fltk-1.3.4-1/jpeg/jdapimin.c **** #include "jpeglib.h"
  23:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  24:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  25:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
  26:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Initialization of a JPEG decompression object.
  27:fltk-1.3.4-1/jpeg/jdapimin.c ****  * The error manager must already be set up (in case memory manager fails).
  28:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
  29:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  30:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(void)
  31:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_CreateDecompress (j_decompress_ptr cinfo, int version, size_t structsize)
  32:fltk-1.3.4-1/jpeg/jdapimin.c **** {
  17              		.loc 1 32 0
  18              		.cfi_startproc
  19              	.LVL0:
  20 0000 55       		pushq	%rbp
  21              		.cfi_def_cfa_offset 16
  22              		.cfi_offset 6, -16
  23 0001 53       		pushq	%rbx
  24              		.cfi_def_cfa_offset 24
  25              		.cfi_offset 3, -24
  26 0002 4889D5   		movq	%rdx, %rbp
  27 0005 4889FB   		movq	%rdi, %rbx
  28 0008 4883EC08 		subq	$8, %rsp
  29              		.cfi_def_cfa_offset 32
  33:fltk-1.3.4-1/jpeg/jdapimin.c ****   int i;
  34:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  35:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Guard against version mismatches between library and caller. */
  36:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->mem = NULL;		/* so jpeg_destroy knows mem mgr not called */
  37:fltk-1.3.4-1/jpeg/jdapimin.c ****   if (version != JPEG_LIB_VERSION)
  30              		.loc 1 37 0
  31 000c 83FE5A   		cmpl	$90, %esi
  36:fltk-1.3.4-1/jpeg/jdapimin.c ****   if (version != JPEG_LIB_VERSION)
  32              		.loc 1 36 0
  33 000f 48C74708 		movq	$0, 8(%rdi)
  33      00000000 
  34              		.loc 1 37 0
  35 0017 741F     		je	.L2
  38:fltk-1.3.4-1/jpeg/jdapimin.c ****     ERREXIT2(cinfo, JERR_BAD_LIB_VERSION, JPEG_LIB_VERSION, version);
  36              		.loc 1 38 0
  37 0019 488B07   		movq	(%rdi), %rax
  38 001c C740280D 		movl	$13, 40(%rax)
  38      000000
  39 0023 488B07   		movq	(%rdi), %rax
  40 0026 C7402C5A 		movl	$90, 44(%rax)
  40      000000
  41 002d 488B07   		movq	(%rdi), %rax
  42 0030 897030   		movl	%esi, 48(%rax)
  43 0033 488B07   		movq	(%rdi), %rax
  44 0036 FF10     		call	*(%rax)
  45              	.LVL1:
  46              	.L2:
  39:fltk-1.3.4-1/jpeg/jdapimin.c ****   if (structsize != SIZEOF(struct jpeg_decompress_struct))
  47              		.loc 1 39 0
  48 0038 4881FD98 		cmpq	$664, %rbp
  48      020000
  49 003f 7422     		je	.L3
  40:fltk-1.3.4-1/jpeg/jdapimin.c ****     ERREXIT2(cinfo, JERR_BAD_STRUCT_SIZE, 
  50              		.loc 1 40 0
  51 0041 488B03   		movq	(%rbx), %rax
  52 0044 4889DF   		movq	%rbx, %rdi
  53 0047 C7402816 		movl	$22, 40(%rax)
  53      000000
  54 004e 488B03   		movq	(%rbx), %rax
  55 0051 C7402C98 		movl	$664, 44(%rax)
  55      020000
  56 0058 488B03   		movq	(%rbx), %rax
  57 005b 896830   		movl	%ebp, 48(%rax)
  58 005e 488B03   		movq	(%rbx), %rax
  59 0061 FF10     		call	*(%rax)
  60              	.LVL2:
  61              	.L3:
  62              	.LBB5:
  63              	.LBB6:
  64              	.LBB7:
  65              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string3.h"
   1:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* Copyright (C) 2004-2016 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string3.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string3.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string3.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string3.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string3.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string3.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string3.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string3.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string3.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string3.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string3.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string3.h ****    <http://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifndef _STRING_H
  19:/usr/include/x86_64-linux-gnu/bits/string3.h **** # error "Never use <bits/string3.h> directly; include <string.h> instead."
  20:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  21:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/string3.h **** #if !__GNUC_PREREQ (5,0)
  23:/usr/include/x86_64-linux-gnu/bits/string3.h **** __warndecl (__warn_memset_zero_len,
  24:/usr/include/x86_64-linux-gnu/bits/string3.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  25:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  26:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  27:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifndef __cplusplus
  28:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* XXX This is temporarily.  We should not redefine any of the symbols
  29:/usr/include/x86_64-linux-gnu/bits/string3.h ****    and instead integrate the error checking into the original
  30:/usr/include/x86_64-linux-gnu/bits/string3.h ****    definitions.  */
  31:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memcpy
  32:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memmove
  33:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memset
  34:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strcat
  35:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strcpy
  36:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strncat
  37:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strncpy
  38:/usr/include/x86_64-linux-gnu/bits/string3.h **** # ifdef __USE_GNU
  39:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef mempcpy
  40:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef stpcpy
  41:/usr/include/x86_64-linux-gnu/bits/string3.h **** # endif
  42:/usr/include/x86_64-linux-gnu/bits/string3.h **** # ifdef __USE_MISC
  43:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef bcopy
  44:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef bzero
  45:/usr/include/x86_64-linux-gnu/bits/string3.h **** # endif
  46:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  47:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  48:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  49:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  50:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  51:/usr/include/x86_64-linux-gnu/bits/string3.h **** 	       size_t __len))
  52:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  53:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  54:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  55:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  56:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  57:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  58:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  59:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  60:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  61:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifdef __USE_GNU
  63:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  64:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  65:/usr/include/x86_64-linux-gnu/bits/string3.h **** 		size_t __len))
  66:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  68:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  69:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  70:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  71:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  72:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* The first two tests here help to catch a somewhat common problem
  73:/usr/include/x86_64-linux-gnu/bits/string3.h ****    where the second and third parameter are transposed.  This is
  74:/usr/include/x86_64-linux-gnu/bits/string3.h ****    especially problematic if the intended fill value is zero.  In this
  75:/usr/include/x86_64-linux-gnu/bits/string3.h ****    case no work is done at all.  We detect these problems by referring
  76:/usr/include/x86_64-linux-gnu/bits/string3.h ****    non-existing functions.  */
  77:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  78:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  79:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/string3.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  81:/usr/include/x86_64-linux-gnu/bits/string3.h ****      need them here.  */
  82:/usr/include/x86_64-linux-gnu/bits/string3.h **** #if !__GNUC_PREREQ (5,0)
  83:/usr/include/x86_64-linux-gnu/bits/string3.h ****   if (__builtin_constant_p (__len) && __len == 0
  84:/usr/include/x86_64-linux-gnu/bits/string3.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  85:/usr/include/x86_64-linux-gnu/bits/string3.h ****     {
  86:/usr/include/x86_64-linux-gnu/bits/string3.h ****       __warn_memset_zero_len ();
  87:/usr/include/x86_64-linux-gnu/bits/string3.h ****       return __dest;
  88:/usr/include/x86_64-linux-gnu/bits/string3.h ****     }
  89:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  90:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
  66              		.loc 2 90 0
  67 0063 488D7B08 		leaq	8(%rbx), %rdi
  68 0067 4889D9   		movq	%rbx, %rcx
  69 006a 31C0     		xorl	%eax, %eax
  70              	.LBE7:
  71              	.LBE6:
  41:fltk-1.3.4-1/jpeg/jdapimin.c **** 	     (int) SIZEOF(struct jpeg_decompress_struct), (int) structsize);
  42:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  43:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* For debugging purposes, we zero the whole master structure.
  44:fltk-1.3.4-1/jpeg/jdapimin.c ****    * But the application has already set the err pointer, and may have set
  45:fltk-1.3.4-1/jpeg/jdapimin.c ****    * client_data, so we have to save and restore those fields.
  46:fltk-1.3.4-1/jpeg/jdapimin.c ****    * Note: if application hasn't set client_data, tools like Purify may
  47:fltk-1.3.4-1/jpeg/jdapimin.c ****    * complain here.
  48:fltk-1.3.4-1/jpeg/jdapimin.c ****    */
  49:fltk-1.3.4-1/jpeg/jdapimin.c ****   {
  50:fltk-1.3.4-1/jpeg/jdapimin.c ****     struct jpeg_error_mgr * err = cinfo->err;
  72              		.loc 1 50 0
  73 006c 488B33   		movq	(%rbx), %rsi
  74              	.LVL3:
  51:fltk-1.3.4-1/jpeg/jdapimin.c ****     void * client_data = cinfo->client_data; /* ignore Purify complaint here */
  75              		.loc 1 51 0
  76 006f 488B5318 		movq	24(%rbx), %rdx
  77              	.LVL4:
  78              	.LBB9:
  79              	.LBB8:
  80              		.loc 2 90 0
  81 0073 4883E7F8 		andq	$-8, %rdi
  82 0077 48C78390 		movq	$0, 656(%rbx)
  82      02000000 
  82      000000
  83 0082 4829F9   		subq	%rdi, %rcx
  84              	.LVL5:
  85 0085 81C19802 		addl	$664, %ecx
  85      0000
  86 008b C1E903   		shrl	$3, %ecx
  87 008e F348AB   		rep stosq
  88              	.LVL6:
  89              	.LBE8:
  90              	.LBE9:
  52:fltk-1.3.4-1/jpeg/jdapimin.c ****     MEMZERO(cinfo, SIZEOF(struct jpeg_decompress_struct));
  53:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->err = err;
  91              		.loc 1 53 0
  92 0091 488933   		movq	%rsi, (%rbx)
  54:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->client_data = client_data;
  93              		.loc 1 54 0
  94 0094 48895318 		movq	%rdx, 24(%rbx)
  95              	.LBE5:
  55:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
  56:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->is_decompressor = TRUE;
  57:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  58:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Initialize a memory manager instance for this object */
  59:fltk-1.3.4-1/jpeg/jdapimin.c ****   jinit_memory_mgr((j_common_ptr) cinfo);
  96              		.loc 1 59 0
  97 0098 4889DF   		movq	%rbx, %rdi
  56:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  98              		.loc 1 56 0
  99 009b C7432001 		movl	$1, 32(%rbx)
  99      000000
 100              		.loc 1 59 0
 101 00a2 E8000000 		call	jinit_memory_mgr
 101      00
 102              	.LVL7:
  60:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  61:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Zero out pointers to permanent structures. */
  62:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->progress = NULL;
  63:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->src = NULL;
  64:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  65:fltk-1.3.4-1/jpeg/jdapimin.c ****   for (i = 0; i < NUM_QUANT_TBLS; i++)
  66:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->quant_tbl_ptrs[i] = NULL;
  67:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  68:fltk-1.3.4-1/jpeg/jdapimin.c ****   for (i = 0; i < NUM_HUFF_TBLS; i++) {
  69:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->dc_huff_tbl_ptrs[i] = NULL;
  70:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->ac_huff_tbl_ptrs[i] = NULL;
  71:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
  72:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  73:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Initialize marker processor so application can override methods
  74:fltk-1.3.4-1/jpeg/jdapimin.c ****    * for COM, APPn markers before calling jpeg_read_header.
  75:fltk-1.3.4-1/jpeg/jdapimin.c ****    */
  76:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->marker_list = NULL;
  77:fltk-1.3.4-1/jpeg/jdapimin.c ****   jinit_marker_reader(cinfo);
 103              		.loc 1 77 0
 104 00a7 4889DF   		movq	%rbx, %rdi
  62:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->src = NULL;
 105              		.loc 1 62 0
 106 00aa 48C74310 		movq	$0, 16(%rbx)
 106      00000000 
  63:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 107              		.loc 1 63 0
 108 00b2 48C74328 		movq	$0, 40(%rbx)
 108      00000000 
 109              	.LVL8:
  66:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 110              		.loc 1 66 0
 111 00ba 48C783C8 		movq	$0, 200(%rbx)
 111      00000000 
 111      000000
 112              	.LVL9:
 113 00c5 48C783D0 		movq	$0, 208(%rbx)
 113      00000000 
 113      000000
 114              	.LVL10:
 115 00d0 48C783D8 		movq	$0, 216(%rbx)
 115      00000000 
 115      000000
 116              	.LVL11:
 117 00db 48C783E0 		movq	$0, 224(%rbx)
 117      00000000 
 117      000000
 118              	.LVL12:
  69:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->ac_huff_tbl_ptrs[i] = NULL;
 119              		.loc 1 69 0
 120 00e6 48C783E8 		movq	$0, 232(%rbx)
 120      00000000 
 120      000000
  70:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 121              		.loc 1 70 0
 122 00f1 48C78308 		movq	$0, 264(%rbx)
 122      01000000 
 122      000000
 123              	.LVL13:
  69:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->ac_huff_tbl_ptrs[i] = NULL;
 124              		.loc 1 69 0
 125 00fc 48C783F0 		movq	$0, 240(%rbx)
 125      00000000 
 125      000000
  70:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 126              		.loc 1 70 0
 127 0107 48C78310 		movq	$0, 272(%rbx)
 127      01000000 
 127      000000
 128              	.LVL14:
  69:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->ac_huff_tbl_ptrs[i] = NULL;
 129              		.loc 1 69 0
 130 0112 48C783F8 		movq	$0, 248(%rbx)
 130      00000000 
 130      000000
  70:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 131              		.loc 1 70 0
 132 011d 48C78318 		movq	$0, 280(%rbx)
 132      01000000 
 132      000000
 133              	.LVL15:
  69:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->ac_huff_tbl_ptrs[i] = NULL;
 134              		.loc 1 69 0
 135 0128 48C78300 		movq	$0, 256(%rbx)
 135      01000000 
 135      000000
  70:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 136              		.loc 1 70 0
 137 0133 48C78320 		movq	$0, 288(%rbx)
 137      01000000 
 137      000000
 138              	.LVL16:
  76:fltk-1.3.4-1/jpeg/jdapimin.c ****   jinit_marker_reader(cinfo);
 139              		.loc 1 76 0
 140 013e 48C78398 		movq	$0, 408(%rbx)
 140      01000000 
 140      000000
 141              		.loc 1 77 0
 142 0149 E8000000 		call	jinit_marker_reader
 142      00
 143              	.LVL17:
  78:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  79:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* And initialize the overall input controller. */
  80:fltk-1.3.4-1/jpeg/jdapimin.c ****   jinit_input_controller(cinfo);
 144              		.loc 1 80 0
 145 014e 4889DF   		movq	%rbx, %rdi
 146 0151 E8000000 		call	jinit_input_controller
 146      00
 147              	.LVL18:
  81:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  82:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* OK, I'm ready */
  83:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->global_state = DSTATE_START;
 148              		.loc 1 83 0
 149 0156 C74324C8 		movl	$200, 36(%rbx)
 149      000000
  84:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 150              		.loc 1 84 0
 151 015d 4883C408 		addq	$8, %rsp
 152              		.cfi_def_cfa_offset 24
 153 0161 5B       		popq	%rbx
 154              		.cfi_def_cfa_offset 16
 155              	.LVL19:
 156 0162 5D       		popq	%rbp
 157              		.cfi_def_cfa_offset 8
 158              	.LVL20:
 159 0163 C3       		ret
 160              		.cfi_endproc
 161              	.LFE61:
 163              		.section	.text.unlikely.jpeg_CreateDecompress
 164              	.LCOLDE0:
 165              		.section	.text.jpeg_CreateDecompress
 166              	.LHOTE0:
 167              		.section	.text.unlikely.jpeg_destroy_decompress,"ax",@progbits
 168              	.LCOLDB1:
 169              		.section	.text.jpeg_destroy_decompress,"ax",@progbits
 170              	.LHOTB1:
 171              		.p2align 4,,15
 172              		.globl	jpeg_destroy_decompress
 174              	jpeg_destroy_decompress:
 175              	.LFB62:
  85:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  86:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  87:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
  88:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Destruction of a JPEG decompression object
  89:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
  90:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  91:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(void)
  92:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_destroy_decompress (j_decompress_ptr cinfo)
  93:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 176              		.loc 1 93 0
 177              		.cfi_startproc
 178              	.LVL21:
  94:fltk-1.3.4-1/jpeg/jdapimin.c ****   jpeg_destroy((j_common_ptr) cinfo); /* use common routine */
 179              		.loc 1 94 0
 180 0000 E9000000 		jmp	jpeg_destroy
 180      00
 181              	.LVL22:
 182              		.cfi_endproc
 183              	.LFE62:
 185              		.section	.text.unlikely.jpeg_destroy_decompress
 186              	.LCOLDE1:
 187              		.section	.text.jpeg_destroy_decompress
 188              	.LHOTE1:
 189              		.section	.text.unlikely.jpeg_abort_decompress,"ax",@progbits
 190              	.LCOLDB2:
 191              		.section	.text.jpeg_abort_decompress,"ax",@progbits
 192              	.LHOTB2:
 193              		.p2align 4,,15
 194              		.globl	jpeg_abort_decompress
 196              	jpeg_abort_decompress:
 197              	.LFB63:
  95:fltk-1.3.4-1/jpeg/jdapimin.c **** }
  96:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  97:fltk-1.3.4-1/jpeg/jdapimin.c **** 
  98:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
  99:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Abort processing of a JPEG decompression operation,
 100:fltk-1.3.4-1/jpeg/jdapimin.c ****  * but don't destroy the object itself.
 101:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
 102:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 103:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(void)
 104:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_abort_decompress (j_decompress_ptr cinfo)
 105:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 198              		.loc 1 105 0
 199              		.cfi_startproc
 200              	.LVL23:
 106:fltk-1.3.4-1/jpeg/jdapimin.c ****   jpeg_abort((j_common_ptr) cinfo); /* use common routine */
 201              		.loc 1 106 0
 202 0000 E9000000 		jmp	jpeg_abort
 202      00
 203              	.LVL24:
 204              		.cfi_endproc
 205              	.LFE63:
 207              		.section	.text.unlikely.jpeg_abort_decompress
 208              	.LCOLDE2:
 209              		.section	.text.jpeg_abort_decompress
 210              	.LHOTE2:
 211              		.section	.text.unlikely.jpeg_consume_input,"ax",@progbits
 212              	.LCOLDB4:
 213              		.section	.text.jpeg_consume_input,"ax",@progbits
 214              	.LHOTB4:
 215              		.p2align 4,,15
 216              		.globl	jpeg_consume_input
 218              	jpeg_consume_input:
 219              	.LFB66:
 107:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 108:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 109:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 110:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
 111:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Set default decompression parameters.
 112:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
 113:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 114:fltk-1.3.4-1/jpeg/jdapimin.c **** LOCAL(void)
 115:fltk-1.3.4-1/jpeg/jdapimin.c **** default_decompress_parms (j_decompress_ptr cinfo)
 116:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 117:fltk-1.3.4-1/jpeg/jdapimin.c ****   int cid0, cid1, cid2;
 118:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 119:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Guess the input colorspace, and set output colorspace accordingly. */
 120:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Note application may override our guesses. */
 121:fltk-1.3.4-1/jpeg/jdapimin.c ****   switch (cinfo->num_components) {
 122:fltk-1.3.4-1/jpeg/jdapimin.c ****   case 1:
 123:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->jpeg_color_space = JCS_GRAYSCALE;
 124:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->out_color_space = JCS_GRAYSCALE;
 125:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 126:fltk-1.3.4-1/jpeg/jdapimin.c ****     
 127:fltk-1.3.4-1/jpeg/jdapimin.c ****   case 3:
 128:fltk-1.3.4-1/jpeg/jdapimin.c ****     cid0 = cinfo->comp_info[0].component_id;
 129:fltk-1.3.4-1/jpeg/jdapimin.c ****     cid1 = cinfo->comp_info[1].component_id;
 130:fltk-1.3.4-1/jpeg/jdapimin.c ****     cid2 = cinfo->comp_info[2].component_id;
 131:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 132:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* First try to guess from the component IDs */
 133:fltk-1.3.4-1/jpeg/jdapimin.c ****     if      (cid0 == 0x01 && cid1 == 0x02 && cid2 == 0x03)
 134:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_YCbCr;
 135:fltk-1.3.4-1/jpeg/jdapimin.c ****     else if (cid0 == 0x01 && cid1 == 0x22 && cid2 == 0x23)
 136:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_BG_YCC;
 137:fltk-1.3.4-1/jpeg/jdapimin.c ****     else if (cid0 == 0x52 && cid1 == 0x47 && cid2 == 0x42)
 138:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_RGB;	/* ASCII 'R', 'G', 'B' */
 139:fltk-1.3.4-1/jpeg/jdapimin.c ****     else if (cid0 == 0x72 && cid1 == 0x67 && cid2 == 0x62)
 140:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_BG_RGB;	/* ASCII 'r', 'g', 'b' */
 141:fltk-1.3.4-1/jpeg/jdapimin.c ****     else if (cinfo->saw_JFIF_marker)
 142:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_YCbCr;	/* assume it's YCbCr */
 143:fltk-1.3.4-1/jpeg/jdapimin.c ****     else if (cinfo->saw_Adobe_marker) {
 144:fltk-1.3.4-1/jpeg/jdapimin.c ****       switch (cinfo->Adobe_transform) {
 145:fltk-1.3.4-1/jpeg/jdapimin.c ****       case 0:
 146:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_RGB;
 147:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 148:fltk-1.3.4-1/jpeg/jdapimin.c ****       case 1:
 149:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_YCbCr;
 150:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 151:fltk-1.3.4-1/jpeg/jdapimin.c ****       default:
 152:fltk-1.3.4-1/jpeg/jdapimin.c **** 	WARNMS1(cinfo, JWRN_ADOBE_XFORM, cinfo->Adobe_transform);
 153:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_YCbCr;	/* assume it's YCbCr */
 154:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 155:fltk-1.3.4-1/jpeg/jdapimin.c ****       }
 156:fltk-1.3.4-1/jpeg/jdapimin.c ****     } else {
 157:fltk-1.3.4-1/jpeg/jdapimin.c ****       TRACEMS3(cinfo, 1, JTRC_UNKNOWN_IDS, cid0, cid1, cid2);
 158:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_YCbCr;	/* assume it's YCbCr */
 159:fltk-1.3.4-1/jpeg/jdapimin.c ****     }
 160:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Always guess RGB is proper output colorspace. */
 161:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->out_color_space = JCS_RGB;
 162:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 163:fltk-1.3.4-1/jpeg/jdapimin.c ****     
 164:fltk-1.3.4-1/jpeg/jdapimin.c ****   case 4:
 165:fltk-1.3.4-1/jpeg/jdapimin.c ****     if (cinfo->saw_Adobe_marker) {
 166:fltk-1.3.4-1/jpeg/jdapimin.c ****       switch (cinfo->Adobe_transform) {
 167:fltk-1.3.4-1/jpeg/jdapimin.c ****       case 0:
 168:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_CMYK;
 169:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 170:fltk-1.3.4-1/jpeg/jdapimin.c ****       case 2:
 171:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_YCCK;
 172:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 173:fltk-1.3.4-1/jpeg/jdapimin.c ****       default:
 174:fltk-1.3.4-1/jpeg/jdapimin.c **** 	WARNMS1(cinfo, JWRN_ADOBE_XFORM, cinfo->Adobe_transform);
 175:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_YCCK;	/* assume it's YCCK */
 176:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 177:fltk-1.3.4-1/jpeg/jdapimin.c ****       }
 178:fltk-1.3.4-1/jpeg/jdapimin.c ****     } else {
 179:fltk-1.3.4-1/jpeg/jdapimin.c ****       /* No special markers, assume straight CMYK. */
 180:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_CMYK;
 181:fltk-1.3.4-1/jpeg/jdapimin.c ****     }
 182:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->out_color_space = JCS_CMYK;
 183:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 184:fltk-1.3.4-1/jpeg/jdapimin.c ****     
 185:fltk-1.3.4-1/jpeg/jdapimin.c ****   default:
 186:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->jpeg_color_space = JCS_UNKNOWN;
 187:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->out_color_space = JCS_UNKNOWN;
 188:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 189:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 190:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 191:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Set defaults for other decompression parameters. */
 192:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->scale_num = cinfo->block_size;		/* 1:1 scaling */
 193:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->scale_denom = cinfo->block_size;
 194:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->output_gamma = 1.0;
 195:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->buffered_image = FALSE;
 196:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->raw_data_out = FALSE;
 197:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->dct_method = JDCT_DEFAULT;
 198:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->do_fancy_upsampling = TRUE;
 199:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->do_block_smoothing = TRUE;
 200:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->quantize_colors = FALSE;
 201:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* We set these in case application only sets quantize_colors. */
 202:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->dither_mode = JDITHER_FS;
 203:fltk-1.3.4-1/jpeg/jdapimin.c **** #ifdef QUANT_2PASS_SUPPORTED
 204:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->two_pass_quantize = TRUE;
 205:fltk-1.3.4-1/jpeg/jdapimin.c **** #else
 206:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->two_pass_quantize = FALSE;
 207:fltk-1.3.4-1/jpeg/jdapimin.c **** #endif
 208:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->desired_number_of_colors = 256;
 209:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->colormap = NULL;
 210:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Initialize for no mode change in buffered-image mode. */
 211:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->enable_1pass_quant = FALSE;
 212:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->enable_external_quant = FALSE;
 213:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->enable_2pass_quant = FALSE;
 214:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 215:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 216:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 217:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
 218:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Decompression startup: read start of JPEG datastream to see what's there.
 219:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Need only initialize JPEG object and supply a data source before calling.
 220:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
 221:fltk-1.3.4-1/jpeg/jdapimin.c ****  * This routine will read as far as the first SOS marker (ie, actual start of
 222:fltk-1.3.4-1/jpeg/jdapimin.c ****  * compressed data), and will save all tables and parameters in the JPEG
 223:fltk-1.3.4-1/jpeg/jdapimin.c ****  * object.  It will also initialize the decompression parameters to default
 224:fltk-1.3.4-1/jpeg/jdapimin.c ****  * values, and finally return JPEG_HEADER_OK.  On return, the application may
 225:fltk-1.3.4-1/jpeg/jdapimin.c ****  * adjust the decompression parameters and then call jpeg_start_decompress.
 226:fltk-1.3.4-1/jpeg/jdapimin.c ****  * (Or, if the application only wanted to determine the image parameters,
 227:fltk-1.3.4-1/jpeg/jdapimin.c ****  * the data need not be decompressed.  In that case, call jpeg_abort or
 228:fltk-1.3.4-1/jpeg/jdapimin.c ****  * jpeg_destroy to release any temporary space.)
 229:fltk-1.3.4-1/jpeg/jdapimin.c ****  * If an abbreviated (tables only) datastream is presented, the routine will
 230:fltk-1.3.4-1/jpeg/jdapimin.c ****  * return JPEG_HEADER_TABLES_ONLY upon reaching EOI.  The application may then
 231:fltk-1.3.4-1/jpeg/jdapimin.c ****  * re-use the JPEG object to read the abbreviated image datastream(s).
 232:fltk-1.3.4-1/jpeg/jdapimin.c ****  * It is unnecessary (but OK) to call jpeg_abort in this case.
 233:fltk-1.3.4-1/jpeg/jdapimin.c ****  * The JPEG_SUSPENDED return code only occurs if the data source module
 234:fltk-1.3.4-1/jpeg/jdapimin.c ****  * requests suspension of the decompressor.  In this case the application
 235:fltk-1.3.4-1/jpeg/jdapimin.c ****  * should load more source data and then re-call jpeg_read_header to resume
 236:fltk-1.3.4-1/jpeg/jdapimin.c ****  * processing.
 237:fltk-1.3.4-1/jpeg/jdapimin.c ****  * If a non-suspending data source is used and require_image is TRUE, then the
 238:fltk-1.3.4-1/jpeg/jdapimin.c ****  * return code need not be inspected since only JPEG_HEADER_OK is possible.
 239:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
 240:fltk-1.3.4-1/jpeg/jdapimin.c ****  * This routine is now just a front end to jpeg_consume_input, with some
 241:fltk-1.3.4-1/jpeg/jdapimin.c ****  * extra error checking.
 242:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
 243:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 244:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(int)
 245:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_read_header (j_decompress_ptr cinfo, boolean require_image)
 246:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 247:fltk-1.3.4-1/jpeg/jdapimin.c ****   int retcode;
 248:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 249:fltk-1.3.4-1/jpeg/jdapimin.c ****   if (cinfo->global_state != DSTATE_START &&
 250:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->global_state != DSTATE_INHEADER)
 251:fltk-1.3.4-1/jpeg/jdapimin.c ****     ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
 252:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 253:fltk-1.3.4-1/jpeg/jdapimin.c ****   retcode = jpeg_consume_input(cinfo);
 254:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 255:fltk-1.3.4-1/jpeg/jdapimin.c ****   switch (retcode) {
 256:fltk-1.3.4-1/jpeg/jdapimin.c ****   case JPEG_REACHED_SOS:
 257:fltk-1.3.4-1/jpeg/jdapimin.c ****     retcode = JPEG_HEADER_OK;
 258:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 259:fltk-1.3.4-1/jpeg/jdapimin.c ****   case JPEG_REACHED_EOI:
 260:fltk-1.3.4-1/jpeg/jdapimin.c ****     if (require_image)		/* Complain if application wanted an image */
 261:fltk-1.3.4-1/jpeg/jdapimin.c ****       ERREXIT(cinfo, JERR_NO_IMAGE);
 262:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Reset to start state; it would be safer to require the application to
 263:fltk-1.3.4-1/jpeg/jdapimin.c ****      * call jpeg_abort, but we can't change it now for compatibility reasons.
 264:fltk-1.3.4-1/jpeg/jdapimin.c ****      * A side effect is to free any temporary memory (there shouldn't be any).
 265:fltk-1.3.4-1/jpeg/jdapimin.c ****      */
 266:fltk-1.3.4-1/jpeg/jdapimin.c ****     jpeg_abort((j_common_ptr) cinfo); /* sets state = DSTATE_START */
 267:fltk-1.3.4-1/jpeg/jdapimin.c ****     retcode = JPEG_HEADER_TABLES_ONLY;
 268:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 269:fltk-1.3.4-1/jpeg/jdapimin.c ****   case JPEG_SUSPENDED:
 270:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* no work */
 271:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 272:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 273:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 274:fltk-1.3.4-1/jpeg/jdapimin.c ****   return retcode;
 275:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 276:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 277:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 278:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
 279:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Consume data in advance of what the decompressor requires.
 280:fltk-1.3.4-1/jpeg/jdapimin.c ****  * This can be called at any time once the decompressor object has
 281:fltk-1.3.4-1/jpeg/jdapimin.c ****  * been created and a data source has been set up.
 282:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
 283:fltk-1.3.4-1/jpeg/jdapimin.c ****  * This routine is essentially a state machine that handles a couple
 284:fltk-1.3.4-1/jpeg/jdapimin.c ****  * of critical state-transition actions, namely initial setup and
 285:fltk-1.3.4-1/jpeg/jdapimin.c ****  * transition from header scanning to ready-for-start_decompress.
 286:fltk-1.3.4-1/jpeg/jdapimin.c ****  * All the actual input is done via the input controller's consume_input
 287:fltk-1.3.4-1/jpeg/jdapimin.c ****  * method.
 288:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
 289:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 290:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(int)
 291:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_consume_input (j_decompress_ptr cinfo)
 292:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 220              		.loc 1 292 0
 221              		.cfi_startproc
 222              	.LVL25:
 223 0000 53       		pushq	%rbx
 224              		.cfi_def_cfa_offset 16
 225              		.cfi_offset 3, -16
 226 0001 4889FB   		movq	%rdi, %rbx
 227 0004 4883EC10 		subq	$16, %rsp
 228              		.cfi_def_cfa_offset 32
 293:fltk-1.3.4-1/jpeg/jdapimin.c ****   int retcode = JPEG_SUSPENDED;
 294:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 295:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* NB: every possible DSTATE value should be listed in this switch */
 296:fltk-1.3.4-1/jpeg/jdapimin.c ****   switch (cinfo->global_state) {
 229              		.loc 1 296 0
 230 0008 8B4724   		movl	36(%rdi), %eax
 231 000b 2DC80000 		subl	$200, %eax
 231      00
 232 0010 83F80A   		cmpl	$10, %eax
 233 0013 776B     		ja	.L15
 234 0015 FF24C500 		jmp	*.L17(,%rax,8)
 234      000000
 235              		.section	.rodata.jpeg_consume_input,"a",@progbits
 236              		.align 8
 237              		.align 4
 238              	.L17:
 239 0000 00000000 		.quad	.L16
 239      00000000 
 240 0008 00000000 		.quad	.L18
 240      00000000 
 241 0010 00000000 		.quad	.L41
 241      00000000 
 242 0018 00000000 		.quad	.L20
 242      00000000 
 243 0020 00000000 		.quad	.L20
 243      00000000 
 244 0028 00000000 		.quad	.L20
 244      00000000 
 245 0030 00000000 		.quad	.L20
 245      00000000 
 246 0038 00000000 		.quad	.L20
 246      00000000 
 247 0040 00000000 		.quad	.L20
 247      00000000 
 248 0048 00000000 		.quad	.L15
 248      00000000 
 249 0050 00000000 		.quad	.L20
 249      00000000 
 250              		.section	.text.jpeg_consume_input
 251 001c 0F1F4000 		.p2align 4,,10
 252              		.p2align 3
 253              	.L16:
 297:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_START:
 298:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Start-of-datastream actions: reset appropriate modules */
 299:fltk-1.3.4-1/jpeg/jdapimin.c ****     (*cinfo->inputctl->reset_input_controller) (cinfo);
 254              		.loc 1 299 0
 255 0020 488B8760 		movq	608(%rdi), %rax
 255      020000
 256 0027 FF5008   		call	*8(%rax)
 257              	.LVL26:
 300:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Initialize application's data source module */
 301:fltk-1.3.4-1/jpeg/jdapimin.c ****     (*cinfo->src->init_source) (cinfo);
 258              		.loc 1 301 0
 259 002a 488B4328 		movq	40(%rbx), %rax
 260 002e 4889DF   		movq	%rbx, %rdi
 261 0031 FF5010   		call	*16(%rax)
 262              	.LVL27:
 302:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->global_state = DSTATE_INHEADER;
 263              		.loc 1 302 0
 264 0034 C74324C9 		movl	$201, 36(%rbx)
 264      000000
 265              	.L18:
 303:fltk-1.3.4-1/jpeg/jdapimin.c ****     /*FALLTHROUGH*/
 304:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_INHEADER:
 305:fltk-1.3.4-1/jpeg/jdapimin.c ****     retcode = (*cinfo->inputctl->consume_input) (cinfo);
 266              		.loc 1 305 0
 267 003b 488B8360 		movq	608(%rbx), %rax
 267      020000
 268 0042 4889DF   		movq	%rbx, %rdi
 269 0045 FF10     		call	*(%rax)
 270              	.LVL28:
 306:fltk-1.3.4-1/jpeg/jdapimin.c ****     if (retcode == JPEG_REACHED_SOS) { /* Found SOS, prepare to decompress */
 271              		.loc 1 306 0
 272 0047 83F801   		cmpl	$1, %eax
 273 004a 745C     		je	.L72
 274              	.LVL29:
 275              	.L19:
 307:fltk-1.3.4-1/jpeg/jdapimin.c ****       /* Set up default parameters based on header data */
 308:fltk-1.3.4-1/jpeg/jdapimin.c ****       default_decompress_parms(cinfo);
 309:fltk-1.3.4-1/jpeg/jdapimin.c ****       /* Set global state: ready for start_decompress */
 310:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->global_state = DSTATE_READY;
 311:fltk-1.3.4-1/jpeg/jdapimin.c ****     }
 312:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 313:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_READY:
 314:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Can't advance past first SOS until start_decompress is called */
 315:fltk-1.3.4-1/jpeg/jdapimin.c ****     retcode = JPEG_REACHED_SOS;
 316:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 317:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_PRELOAD:
 318:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_PRESCAN:
 319:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_SCANNING:
 320:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_RAW_OK:
 321:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_BUFIMAGE:
 322:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_BUFPOST:
 323:fltk-1.3.4-1/jpeg/jdapimin.c ****   case DSTATE_STOPPING:
 324:fltk-1.3.4-1/jpeg/jdapimin.c ****     retcode = (*cinfo->inputctl->consume_input) (cinfo);
 325:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 326:fltk-1.3.4-1/jpeg/jdapimin.c ****   default:
 327:fltk-1.3.4-1/jpeg/jdapimin.c ****     ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
 328:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 329:fltk-1.3.4-1/jpeg/jdapimin.c ****   return retcode;
 330:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 276              		.loc 1 330 0
 277 004c 4883C410 		addq	$16, %rsp
 278              		.cfi_remember_state
 279              		.cfi_def_cfa_offset 16
 280 0050 5B       		popq	%rbx
 281              		.cfi_def_cfa_offset 8
 282              	.LVL30:
 283 0051 C3       		ret
 284              	.LVL31:
 285              		.p2align 4,,10
 286 0052 660F1F44 		.p2align 3
 286      0000
 287              	.L41:
 288              		.cfi_restore_state
 289 0058 4883C410 		addq	$16, %rsp
 290              		.cfi_remember_state
 291              		.cfi_def_cfa_offset 16
 315:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 292              		.loc 1 315 0
 293 005c B8010000 		movl	$1, %eax
 293      00
 294              	.LVL32:
 295              		.loc 1 330 0
 296 0061 5B       		popq	%rbx
 297              		.cfi_def_cfa_offset 8
 298              	.LVL33:
 299 0062 C3       		ret
 300              	.LVL34:
 301              		.p2align 4,,10
 302 0063 0F1F4400 		.p2align 3
 302      00
 303              	.L20:
 304              		.cfi_restore_state
 324:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 305              		.loc 1 324 0
 306 0068 488B8760 		movq	608(%rdi), %rax
 306      020000
 307 006f 488B00   		movq	(%rax), %rax
 308              		.loc 1 330 0
 309 0072 4883C410 		addq	$16, %rsp
 310              		.cfi_remember_state
 311              		.cfi_def_cfa_offset 16
 312 0076 5B       		popq	%rbx
 313              		.cfi_def_cfa_offset 8
 314              	.LVL35:
 324:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 315              		.loc 1 324 0
 316 0077 FFE0     		jmp	*%rax
 317              	.LVL36:
 318 0079 0F1F8000 		.p2align 4,,10
 318      000000
 319              		.p2align 3
 320              	.L15:
 321              		.cfi_restore_state
 327:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 322              		.loc 1 327 0
 323 0080 488B03   		movq	(%rbx), %rax
 324 0083 4889DF   		movq	%rbx, %rdi
 325 0086 C7402815 		movl	$21, 40(%rax)
 325      000000
 326 008d 488B03   		movq	(%rbx), %rax
 327 0090 8B5324   		movl	36(%rbx), %edx
 328 0093 89502C   		movl	%edx, 44(%rax)
 329 0096 488B03   		movq	(%rbx), %rax
 330 0099 FF10     		call	*(%rax)
 331              	.LVL37:
 332              		.loc 1 330 0
 333 009b 4883C410 		addq	$16, %rsp
 334              		.cfi_remember_state
 335              		.cfi_def_cfa_offset 16
 293:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 336              		.loc 1 293 0
 337 009f 31C0     		xorl	%eax, %eax
 338              	.LVL38:
 339              		.loc 1 330 0
 340 00a1 5B       		popq	%rbx
 341              		.cfi_def_cfa_offset 8
 342              	.LVL39:
 343 00a2 C3       		ret
 344              	.LVL40:
 345              		.p2align 4,,10
 346 00a3 0F1F4400 		.p2align 3
 346      00
 347              	.L72:
 348              		.cfi_restore_state
 349              	.LBB13:
 350              	.LBB14:
 121:fltk-1.3.4-1/jpeg/jdapimin.c ****   case 1:
 351              		.loc 1 121 0
 352 00a8 8B5338   		movl	56(%rbx), %edx
 353 00ab 83FA03   		cmpl	$3, %edx
 354 00ae 0F84AC00 		je	.L22
 354      0000
 355 00b4 83FA04   		cmpl	$4, %edx
 356 00b7 0F84B301 		je	.L23
 356      0000
 357 00bd 83FA01   		cmpl	$1, %edx
 358 00c0 0F848E01 		je	.L73
 358      0000
 186:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->out_color_space = JCS_UNKNOWN;
 359              		.loc 1 186 0
 360 00c6 C7433C00 		movl	$0, 60(%rbx)
 360      000000
 187:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 361              		.loc 1 187 0
 362 00cd C7434000 		movl	$0, 64(%rbx)
 362      000000
 363              	.LVL41:
 364              	.L25:
 192:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->scale_denom = cinfo->block_size;
 365              		.loc 1 192 0
 366 00d4 8B932C02 		movl	556(%rbx), %edx
 366      0000
 194:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->buffered_image = FALSE;
 367              		.loc 1 194 0
 368 00da F20F1005 		movsd	.LC3(%rip), %xmm0
 368      00000000 
 195:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->raw_data_out = FALSE;
 369              		.loc 1 195 0
 370 00e2 C7435800 		movl	$0, 88(%rbx)
 370      000000
 196:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->dct_method = JDCT_DEFAULT;
 371              		.loc 1 196 0
 372 00e9 C7435C00 		movl	$0, 92(%rbx)
 372      000000
 194:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->buffered_image = FALSE;
 373              		.loc 1 194 0
 374 00f0 F20F1143 		movsd	%xmm0, 80(%rbx)
 374      50
 197:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->do_fancy_upsampling = TRUE;
 375              		.loc 1 197 0
 376 00f5 C7436000 		movl	$0, 96(%rbx)
 376      000000
 198:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->do_block_smoothing = TRUE;
 377              		.loc 1 198 0
 378 00fc C7436401 		movl	$1, 100(%rbx)
 378      000000
 192:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->scale_denom = cinfo->block_size;
 379              		.loc 1 192 0
 380 0103 895344   		movl	%edx, 68(%rbx)
 193:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->output_gamma = 1.0;
 381              		.loc 1 193 0
 382 0106 895348   		movl	%edx, 72(%rbx)
 199:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->quantize_colors = FALSE;
 383              		.loc 1 199 0
 384 0109 C7436801 		movl	$1, 104(%rbx)
 384      000000
 200:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* We set these in case application only sets quantize_colors. */
 385              		.loc 1 200 0
 386 0110 C7436C00 		movl	$0, 108(%rbx)
 386      000000
 202:fltk-1.3.4-1/jpeg/jdapimin.c **** #ifdef QUANT_2PASS_SUPPORTED
 387              		.loc 1 202 0
 388 0117 C7437002 		movl	$2, 112(%rbx)
 388      000000
 204:fltk-1.3.4-1/jpeg/jdapimin.c **** #else
 389              		.loc 1 204 0
 390 011e C7437401 		movl	$1, 116(%rbx)
 390      000000
 208:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->colormap = NULL;
 391              		.loc 1 208 0
 392 0125 C7437800 		movl	$256, 120(%rbx)
 392      010000
 209:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Initialize for no mode change in buffered-image mode. */
 393              		.loc 1 209 0
 394 012c 48C783A0 		movq	$0, 160(%rbx)
 394      00000000 
 394      000000
 211:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->enable_external_quant = FALSE;
 395              		.loc 1 211 0
 396 0137 C7437C00 		movl	$0, 124(%rbx)
 396      000000
 212:fltk-1.3.4-1/jpeg/jdapimin.c ****   cinfo->enable_2pass_quant = FALSE;
 397              		.loc 1 212 0
 398 013e C7838000 		movl	$0, 128(%rbx)
 398      00000000 
 398      0000
 213:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 399              		.loc 1 213 0
 400 0148 C7838400 		movl	$0, 132(%rbx)
 400      00000000 
 400      0000
 401              	.LVL42:
 402              	.LBE14:
 403              	.LBE13:
 310:fltk-1.3.4-1/jpeg/jdapimin.c ****     }
 404              		.loc 1 310 0
 405 0152 C74324CA 		movl	$202, 36(%rbx)
 405      000000
 406 0159 E9EEFEFF 		jmp	.L19
 406      FF
 407              	.LVL43:
 408 015e 6690     		.p2align 4,,10
 409              		.p2align 3
 410              	.L22:
 411              	.LBB17:
 412              	.LBB16:
 128:fltk-1.3.4-1/jpeg/jdapimin.c ****     cid1 = cinfo->comp_info[1].component_id;
 413              		.loc 1 128 0
 414 0160 488B8B30 		movq	304(%rbx), %rcx
 414      010000
 415 0167 8B31     		movl	(%rcx), %esi
 416              	.LVL44:
 129:fltk-1.3.4-1/jpeg/jdapimin.c ****     cid2 = cinfo->comp_info[2].component_id;
 417              		.loc 1 129 0
 418 0169 8B5160   		movl	96(%rcx), %edx
 419              	.LVL45:
 130:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 420              		.loc 1 130 0
 421 016c 8B89C000 		movl	192(%rcx), %ecx
 421      0000
 422              	.LVL46:
 133:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_YCbCr;
 423              		.loc 1 133 0
 424 0172 83FE01   		cmpl	$1, %esi
 425 0175 400F94C7 		sete	%dil
 426 0179 83FA02   		cmpl	$2, %edx
 427 017c 410F94C0 		sete	%r8b
 428 0180 4184F8   		testb	%dil, %r8b
 429 0183 7409     		je	.L26
 430 0185 83F903   		cmpl	$3, %ecx
 431 0188 0F841F01 		je	.L35
 431      0000
 432              	.L26:
 135:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_BG_YCC;
 433              		.loc 1 135 0
 434 018e 83FA22   		cmpl	$34, %edx
 435 0191 410F94C0 		sete	%r8b
 436 0195 4184F8   		testb	%dil, %r8b
 437 0198 7409     		je	.L28
 438 019a 83F923   		cmpl	$35, %ecx
 439 019d 0F845501 		je	.L74
 439      0000
 440              	.L28:
 137:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_RGB;	/* ASCII 'R', 'G', 'B' */
 441              		.loc 1 137 0
 442 01a3 83FE52   		cmpl	$82, %esi
 443 01a6 410F94C0 		sete	%r8b
 444 01aa 83FA47   		cmpl	$71, %edx
 445 01ad 400F94C7 		sete	%dil
 446 01b1 4184F8   		testb	%dil, %r8b
 447 01b4 7409     		je	.L29
 448 01b6 83F942   		cmpl	$66, %ecx
 449 01b9 0F842D01 		je	.L34
 449      0000
 450              	.L29:
 139:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_BG_RGB;	/* ASCII 'r', 'g', 'b' */
 451              		.loc 1 139 0
 452 01bf 83FE72   		cmpl	$114, %esi
 453 01c2 410F94C0 		sete	%r8b
 454 01c6 83FA67   		cmpl	$103, %edx
 455 01c9 400F94C7 		sete	%dil
 456 01cd 4184F8   		testb	%dil, %r8b
 457 01d0 7409     		je	.L30
 458 01d2 83F962   		cmpl	$98, %ecx
 459 01d5 0F842901 		je	.L75
 459      0000
 460              	.L30:
 141:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_YCbCr;	/* assume it's YCbCr */
 461              		.loc 1 141 0
 462 01db 448B8378 		movl	376(%rbx), %r8d
 462      010000
 463 01e2 4585C0   		testl	%r8d, %r8d
 464 01e5 0F85C200 		jne	.L35
 464      0000
 143:fltk-1.3.4-1/jpeg/jdapimin.c ****       switch (cinfo->Adobe_transform) {
 465              		.loc 1 143 0
 466 01eb 8BBB8401 		movl	388(%rbx), %edi
 466      0000
 467 01f1 85FF     		testl	%edi, %edi
 468 01f3 0F841701 		je	.L32
 468      0000
 144:fltk-1.3.4-1/jpeg/jdapimin.c ****       case 0:
 469              		.loc 1 144 0
 470 01f9 0FB69388 		movzbl	392(%rbx), %edx
 470      010000
 471              	.LVL47:
 472 0200 84D2     		testb	%dl, %dl
 473 0202 0F84E400 		je	.L34
 473      0000
 474 0208 80FA01   		cmpb	$1, %dl
 475 020b 0F849C00 		je	.L35
 475      0000
 152:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_YCbCr;	/* assume it's YCbCr */
 476              		.loc 1 152 0
 477 0211 488B13   		movq	(%rbx), %rdx
 478 0214 8944240C 		movl	%eax, 12(%rsp)
 479 0218 83CEFF   		orl	$-1, %esi
 480              	.LVL48:
 481 021b 4889DF   		movq	%rbx, %rdi
 482 021e C7422874 		movl	$116, 40(%rdx)
 482      000000
 483              	.LVL49:
 484 0225 0FB68B88 		movzbl	392(%rbx), %ecx
 484      010000
 485              	.LVL50:
 486 022c 488B13   		movq	(%rbx), %rdx
 487 022f 894A2C   		movl	%ecx, 44(%rdx)
 488 0232 488B13   		movq	(%rbx), %rdx
 489 0235 FF5208   		call	*8(%rdx)
 490              	.LVL51:
 491 0238 8B44240C 		movl	12(%rsp), %eax
 153:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 492              		.loc 1 153 0
 493 023c C7433C03 		movl	$3, 60(%rbx)
 493      000000
 494              	.LVL52:
 495              		.p2align 4,,10
 496 0243 0F1F4400 		.p2align 3
 496      00
 497              	.L27:
 161:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 498              		.loc 1 161 0
 499 0248 C7434002 		movl	$2, 64(%rbx)
 499      000000
 500 024f E980FEFF 		jmp	.L25
 500      FF
 501              	.LVL53:
 502              	.L73:
 123:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->out_color_space = JCS_GRAYSCALE;
 503              		.loc 1 123 0
 504 0254 C7433C01 		movl	$1, 60(%rbx)
 504      000000
 124:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 505              		.loc 1 124 0
 506 025b C7434001 		movl	$1, 64(%rbx)
 506      000000
 507 0262 E96DFEFF 		jmp	.L25
 507      FF
 508 0267 660F1F84 		.p2align 4,,10
 508      00000000 
 508      00
 509              		.p2align 3
 510              	.L23:
 165:fltk-1.3.4-1/jpeg/jdapimin.c ****       switch (cinfo->Adobe_transform) {
 511              		.loc 1 165 0
 512 0270 8B938401 		movl	388(%rbx), %edx
 512      0000
 513 0276 85D2     		testl	%edx, %edx
 514 0278 742A     		je	.L36
 166:fltk-1.3.4-1/jpeg/jdapimin.c ****       case 0:
 515              		.loc 1 166 0
 516 027a 0FB69388 		movzbl	392(%rbx), %edx
 516      010000
 517 0281 84D2     		testb	%dl, %dl
 518 0283 741F     		je	.L36
 519 0285 80FA02   		cmpb	$2, %dl
 520 0288 752C     		jne	.L71
 171:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 521              		.loc 1 171 0
 522 028a C7433C05 		movl	$5, 60(%rbx)
 522      000000
 523              	.LVL54:
 524              		.p2align 4,,10
 525 0291 0F1F8000 		.p2align 3
 525      000000
 526              	.L40:
 182:fltk-1.3.4-1/jpeg/jdapimin.c ****     break;
 527              		.loc 1 182 0
 528 0298 C7434004 		movl	$4, 64(%rbx)
 528      000000
 529 029f E930FEFF 		jmp	.L25
 529      FF
 530              	.LVL55:
 531              	.L36:
 180:fltk-1.3.4-1/jpeg/jdapimin.c ****     }
 532              		.loc 1 180 0
 533 02a4 C7433C04 		movl	$4, 60(%rbx)
 533      000000
 534 02ab EBEB     		jmp	.L40
 535              	.LVL56:
 536              	.L35:
 149:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 537              		.loc 1 149 0
 538 02ad C7433C03 		movl	$3, 60(%rbx)
 538      000000
 539              	.LVL57:
 540 02b4 EB92     		jmp	.L27
 541              	.LVL58:
 542              	.L71:
 174:fltk-1.3.4-1/jpeg/jdapimin.c **** 	cinfo->jpeg_color_space = JCS_YCCK;	/* assume it's YCCK */
 543              		.loc 1 174 0
 544 02b6 488B13   		movq	(%rbx), %rdx
 545 02b9 8944240C 		movl	%eax, 12(%rsp)
 546 02bd BEFFFFFF 		movl	$-1, %esi
 546      FF
 547 02c2 4889DF   		movq	%rbx, %rdi
 548 02c5 C7422874 		movl	$116, 40(%rdx)
 548      000000
 549 02cc 0FB68B88 		movzbl	392(%rbx), %ecx
 549      010000
 550 02d3 488B13   		movq	(%rbx), %rdx
 551 02d6 894A2C   		movl	%ecx, 44(%rdx)
 552 02d9 488B13   		movq	(%rbx), %rdx
 553 02dc FF5208   		call	*8(%rdx)
 554              	.LVL59:
 175:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 555              		.loc 1 175 0
 556 02df C7433C05 		movl	$5, 60(%rbx)
 556      000000
 557 02e6 8B44240C 		movl	12(%rsp), %eax
 558 02ea EBAC     		jmp	.L40
 559              	.LVL60:
 560              	.L34:
 146:fltk-1.3.4-1/jpeg/jdapimin.c **** 	break;
 561              		.loc 1 146 0
 562 02ec C7433C02 		movl	$2, 60(%rbx)
 562      000000
 563              	.LVL61:
 564 02f3 E950FFFF 		jmp	.L27
 564      FF
 565              	.LVL62:
 566              	.L74:
 136:fltk-1.3.4-1/jpeg/jdapimin.c ****     else if (cid0 == 0x52 && cid1 == 0x47 && cid2 == 0x42)
 567              		.loc 1 136 0
 568 02f8 C7433C07 		movl	$7, 60(%rbx)
 568      000000
 569 02ff E944FFFF 		jmp	.L27
 569      FF
 570              	.L75:
 140:fltk-1.3.4-1/jpeg/jdapimin.c ****     else if (cinfo->saw_JFIF_marker)
 571              		.loc 1 140 0
 572 0304 C7433C06 		movl	$6, 60(%rbx)
 572      000000
 573 030b E938FFFF 		jmp	.L27
 573      FF
 574              	.L32:
 575              	.LBB15:
 157:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->jpeg_color_space = JCS_YCbCr;	/* assume it's YCbCr */
 576              		.loc 1 157 0
 577 0310 488B3B   		movq	(%rbx), %rdi
 578              	.LVL63:
 579 0313 8944240C 		movl	%eax, 12(%rsp)
 580 0317 89772C   		movl	%esi, 44(%rdi)
 581 031a 895730   		movl	%edx, 48(%rdi)
 582 031d BE010000 		movl	$1, %esi
 582      00
 583              	.LVL64:
 584 0322 894F34   		movl	%ecx, 52(%rdi)
 585 0325 488B13   		movq	(%rbx), %rdx
 586              	.LVL65:
 587 0328 4889DF   		movq	%rbx, %rdi
 588              	.LVL66:
 589 032b C7422871 		movl	$113, 40(%rdx)
 589      000000
 590 0332 488B13   		movq	(%rbx), %rdx
 591 0335 FF5208   		call	*8(%rdx)
 592              	.LVL67:
 593              	.LBE15:
 158:fltk-1.3.4-1/jpeg/jdapimin.c ****     }
 594              		.loc 1 158 0
 595 0338 C7433C03 		movl	$3, 60(%rbx)
 595      000000
 596 033f 8B44240C 		movl	12(%rsp), %eax
 597 0343 E900FFFF 		jmp	.L27
 597      FF
 598              	.LBE16:
 599              	.LBE17:
 600              		.cfi_endproc
 601              	.LFE66:
 603              		.section	.text.unlikely.jpeg_consume_input
 604              	.LCOLDE4:
 605              		.section	.text.jpeg_consume_input
 606              	.LHOTE4:
 607              		.section	.text.unlikely.jpeg_read_header,"ax",@progbits
 608              	.LCOLDB5:
 609              		.section	.text.jpeg_read_header,"ax",@progbits
 610              	.LHOTB5:
 611              		.p2align 4,,15
 612              		.globl	jpeg_read_header
 614              	jpeg_read_header:
 615              	.LFB65:
 246:fltk-1.3.4-1/jpeg/jdapimin.c ****   int retcode;
 616              		.loc 1 246 0
 617              		.cfi_startproc
 618              	.LVL68:
 619 0000 55       		pushq	%rbp
 620              		.cfi_def_cfa_offset 16
 621              		.cfi_offset 6, -16
 622 0001 53       		pushq	%rbx
 623              		.cfi_def_cfa_offset 24
 624              		.cfi_offset 3, -24
 625 0002 89F5     		movl	%esi, %ebp
 626 0004 4889FB   		movq	%rdi, %rbx
 627 0007 4883EC18 		subq	$24, %rsp
 628              		.cfi_def_cfa_offset 48
 249:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->global_state != DSTATE_INHEADER)
 629              		.loc 1 249 0
 630 000b 8B4724   		movl	36(%rdi), %eax
 631 000e 2DC80000 		subl	$200, %eax
 631      00
 632 0013 83F801   		cmpl	$1, %eax
 633 0016 7618     		jbe	.L77
 251:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 634              		.loc 1 251 0
 635 0018 488B07   		movq	(%rdi), %rax
 636 001b C7402815 		movl	$21, 40(%rax)
 636      000000
 637 0022 488B07   		movq	(%rdi), %rax
 638 0025 8B5724   		movl	36(%rdi), %edx
 639 0028 89502C   		movl	%edx, 44(%rax)
 640 002b 488B07   		movq	(%rdi), %rax
 641 002e FF10     		call	*(%rax)
 642              	.LVL69:
 643              	.L77:
 253:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 644              		.loc 1 253 0
 645 0030 4889DF   		movq	%rbx, %rdi
 646 0033 E8000000 		call	jpeg_consume_input
 646      00
 647              	.LVL70:
 255:fltk-1.3.4-1/jpeg/jdapimin.c ****   case JPEG_REACHED_SOS:
 648              		.loc 1 255 0
 649 0038 83F802   		cmpl	$2, %eax
 650 003b 740B     		je	.L85
 275:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 651              		.loc 1 275 0
 652 003d 4883C418 		addq	$24, %rsp
 653              		.cfi_remember_state
 654              		.cfi_def_cfa_offset 24
 655 0041 5B       		popq	%rbx
 656              		.cfi_def_cfa_offset 16
 657              	.LVL71:
 658 0042 5D       		popq	%rbp
 659              		.cfi_def_cfa_offset 8
 660              	.LVL72:
 661 0043 C3       		ret
 662              	.LVL73:
 663              		.p2align 4,,10
 664 0044 0F1F4000 		.p2align 3
 665              	.L85:
 666              		.cfi_restore_state
 260:fltk-1.3.4-1/jpeg/jdapimin.c ****       ERREXIT(cinfo, JERR_NO_IMAGE);
 667              		.loc 1 260 0
 668 0048 85ED     		testl	%ebp, %ebp
 669 004a 751C     		jne	.L86
 670              	.LVL74:
 671              	.L80:
 266:fltk-1.3.4-1/jpeg/jdapimin.c ****     retcode = JPEG_HEADER_TABLES_ONLY;
 672              		.loc 1 266 0
 673 004c 4889DF   		movq	%rbx, %rdi
 674 004f 8944240C 		movl	%eax, 12(%rsp)
 675 0053 E8000000 		call	jpeg_abort
 675      00
 676              	.LVL75:
 677 0058 8B44240C 		movl	12(%rsp), %eax
 678              	.LVL76:
 275:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 679              		.loc 1 275 0
 680 005c 4883C418 		addq	$24, %rsp
 681              		.cfi_remember_state
 682              		.cfi_def_cfa_offset 24
 683 0060 5B       		popq	%rbx
 684              		.cfi_def_cfa_offset 16
 685              	.LVL77:
 686 0061 5D       		popq	%rbp
 687              		.cfi_def_cfa_offset 8
 688              	.LVL78:
 689 0062 C3       		ret
 690              	.LVL79:
 691              		.p2align 4,,10
 692 0063 0F1F4400 		.p2align 3
 692      00
 693              	.L86:
 694              		.cfi_restore_state
 261:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Reset to start state; it would be safer to require the application to
 695              		.loc 1 261 0
 696 0068 488B13   		movq	(%rbx), %rdx
 697 006b 8944240C 		movl	%eax, 12(%rsp)
 698 006f 4889DF   		movq	%rbx, %rdi
 699 0072 C7422835 		movl	$53, 40(%rdx)
 699      000000
 700 0079 488B13   		movq	(%rbx), %rdx
 701 007c FF12     		call	*(%rdx)
 702              	.LVL80:
 703 007e 8B44240C 		movl	12(%rsp), %eax
 704 0082 EBC8     		jmp	.L80
 705              		.cfi_endproc
 706              	.LFE65:
 708              		.section	.text.unlikely.jpeg_read_header
 709              	.LCOLDE5:
 710              		.section	.text.jpeg_read_header
 711              	.LHOTE5:
 712              		.section	.text.unlikely.jpeg_input_complete,"ax",@progbits
 713              	.LCOLDB6:
 714              		.section	.text.jpeg_input_complete,"ax",@progbits
 715              	.LHOTB6:
 716              		.p2align 4,,15
 717              		.globl	jpeg_input_complete
 719              	jpeg_input_complete:
 720              	.LFB67:
 331:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 332:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 333:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
 334:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Have we finished reading the input file?
 335:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
 336:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 337:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(boolean)
 338:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_input_complete (j_decompress_ptr cinfo)
 339:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 721              		.loc 1 339 0
 722              		.cfi_startproc
 723              	.LVL81:
 340:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Check for valid jpeg object */
 341:fltk-1.3.4-1/jpeg/jdapimin.c ****   if (cinfo->global_state < DSTATE_START ||
 724              		.loc 1 341 0
 725 0000 8B4724   		movl	36(%rdi), %eax
 339:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Check for valid jpeg object */
 726              		.loc 1 339 0
 727 0003 53       		pushq	%rbx
 728              		.cfi_def_cfa_offset 16
 729              		.cfi_offset 3, -16
 339:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Check for valid jpeg object */
 730              		.loc 1 339 0
 731 0004 4889FB   		movq	%rdi, %rbx
 732              		.loc 1 341 0
 733 0007 2DC80000 		subl	$200, %eax
 733      00
 734 000c 83F80A   		cmpl	$10, %eax
 735 000f 7618     		jbe	.L88
 342:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->global_state > DSTATE_STOPPING)
 343:fltk-1.3.4-1/jpeg/jdapimin.c ****     ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
 736              		.loc 1 343 0
 737 0011 488B07   		movq	(%rdi), %rax
 738 0014 C7402815 		movl	$21, 40(%rax)
 738      000000
 739 001b 488B07   		movq	(%rdi), %rax
 740 001e 8B5724   		movl	36(%rdi), %edx
 741 0021 89502C   		movl	%edx, 44(%rax)
 742 0024 488B07   		movq	(%rdi), %rax
 743 0027 FF10     		call	*(%rax)
 744              	.LVL82:
 745              	.L88:
 344:fltk-1.3.4-1/jpeg/jdapimin.c ****   return cinfo->inputctl->eoi_reached;
 746              		.loc 1 344 0
 747 0029 488B8360 		movq	608(%rbx), %rax
 747      020000
 345:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 748              		.loc 1 345 0
 749 0030 5B       		popq	%rbx
 750              		.cfi_def_cfa_offset 8
 751              	.LVL83:
 344:fltk-1.3.4-1/jpeg/jdapimin.c ****   return cinfo->inputctl->eoi_reached;
 752              		.loc 1 344 0
 753 0031 8B4024   		movl	36(%rax), %eax
 754              		.loc 1 345 0
 755 0034 C3       		ret
 756              		.cfi_endproc
 757              	.LFE67:
 759              		.section	.text.unlikely.jpeg_input_complete
 760              	.LCOLDE6:
 761              		.section	.text.jpeg_input_complete
 762              	.LHOTE6:
 763              		.section	.text.unlikely.jpeg_has_multiple_scans,"ax",@progbits
 764              	.LCOLDB7:
 765              		.section	.text.jpeg_has_multiple_scans,"ax",@progbits
 766              	.LHOTB7:
 767              		.p2align 4,,15
 768              		.globl	jpeg_has_multiple_scans
 770              	jpeg_has_multiple_scans:
 771              	.LFB68:
 346:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 347:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 348:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
 349:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Is there more than one scan?
 350:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
 351:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 352:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(boolean)
 353:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_has_multiple_scans (j_decompress_ptr cinfo)
 354:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 772              		.loc 1 354 0
 773              		.cfi_startproc
 774              	.LVL84:
 355:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Only valid after jpeg_read_header completes */
 356:fltk-1.3.4-1/jpeg/jdapimin.c ****   if (cinfo->global_state < DSTATE_READY ||
 775              		.loc 1 356 0
 776 0000 8B4724   		movl	36(%rdi), %eax
 354:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Only valid after jpeg_read_header completes */
 777              		.loc 1 354 0
 778 0003 53       		pushq	%rbx
 779              		.cfi_def_cfa_offset 16
 780              		.cfi_offset 3, -16
 354:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Only valid after jpeg_read_header completes */
 781              		.loc 1 354 0
 782 0004 4889FB   		movq	%rdi, %rbx
 783              		.loc 1 356 0
 784 0007 2DCA0000 		subl	$202, %eax
 784      00
 785 000c 83F808   		cmpl	$8, %eax
 786 000f 7618     		jbe	.L91
 357:fltk-1.3.4-1/jpeg/jdapimin.c ****       cinfo->global_state > DSTATE_STOPPING)
 358:fltk-1.3.4-1/jpeg/jdapimin.c ****     ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
 787              		.loc 1 358 0
 788 0011 488B07   		movq	(%rdi), %rax
 789 0014 C7402815 		movl	$21, 40(%rax)
 789      000000
 790 001b 488B07   		movq	(%rdi), %rax
 791 001e 8B5724   		movl	36(%rdi), %edx
 792 0021 89502C   		movl	%edx, 44(%rax)
 793 0024 488B07   		movq	(%rdi), %rax
 794 0027 FF10     		call	*(%rax)
 795              	.LVL85:
 796              	.L91:
 359:fltk-1.3.4-1/jpeg/jdapimin.c ****   return cinfo->inputctl->has_multiple_scans;
 797              		.loc 1 359 0
 798 0029 488B8360 		movq	608(%rbx), %rax
 798      020000
 360:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 799              		.loc 1 360 0
 800 0030 5B       		popq	%rbx
 801              		.cfi_def_cfa_offset 8
 802              	.LVL86:
 359:fltk-1.3.4-1/jpeg/jdapimin.c ****   return cinfo->inputctl->has_multiple_scans;
 803              		.loc 1 359 0
 804 0031 8B4020   		movl	32(%rax), %eax
 805              		.loc 1 360 0
 806 0034 C3       		ret
 807              		.cfi_endproc
 808              	.LFE68:
 810              		.section	.text.unlikely.jpeg_has_multiple_scans
 811              	.LCOLDE7:
 812              		.section	.text.jpeg_has_multiple_scans
 813              	.LHOTE7:
 814              		.section	.text.unlikely.jpeg_finish_decompress,"ax",@progbits
 815              	.LCOLDB8:
 816              		.section	.text.jpeg_finish_decompress,"ax",@progbits
 817              	.LHOTB8:
 818              		.p2align 4,,15
 819              		.globl	jpeg_finish_decompress
 821              	jpeg_finish_decompress:
 822              	.LFB69:
 361:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 362:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 363:fltk-1.3.4-1/jpeg/jdapimin.c **** /*
 364:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Finish JPEG decompression.
 365:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
 366:fltk-1.3.4-1/jpeg/jdapimin.c ****  * This will normally just verify the file trailer and release temp storage.
 367:fltk-1.3.4-1/jpeg/jdapimin.c ****  *
 368:fltk-1.3.4-1/jpeg/jdapimin.c ****  * Returns FALSE if suspended.  The return value need be inspected only if
 369:fltk-1.3.4-1/jpeg/jdapimin.c ****  * a suspending data source is used.
 370:fltk-1.3.4-1/jpeg/jdapimin.c ****  */
 371:fltk-1.3.4-1/jpeg/jdapimin.c **** 
 372:fltk-1.3.4-1/jpeg/jdapimin.c **** GLOBAL(boolean)
 373:fltk-1.3.4-1/jpeg/jdapimin.c **** jpeg_finish_decompress (j_decompress_ptr cinfo)
 374:fltk-1.3.4-1/jpeg/jdapimin.c **** {
 823              		.loc 1 374 0
 824              		.cfi_startproc
 825              	.LVL87:
 826 0000 55       		pushq	%rbp
 827              		.cfi_def_cfa_offset 16
 828              		.cfi_offset 6, -16
 829 0001 53       		pushq	%rbx
 830              		.cfi_def_cfa_offset 24
 831              		.cfi_offset 3, -24
 832 0002 4889FB   		movq	%rdi, %rbx
 833 0005 4883EC08 		subq	$8, %rsp
 834              		.cfi_def_cfa_offset 32
 375:fltk-1.3.4-1/jpeg/jdapimin.c ****   if ((cinfo->global_state == DSTATE_SCANNING ||
 835              		.loc 1 375 0
 836 0009 8B4724   		movl	36(%rdi), %eax
 837 000c 8D9033FF 		leal	-205(%rax), %edx
 837      FFFF
 838 0012 83FA01   		cmpl	$1, %edx
 839 0015 7669     		jbe	.L109
 376:fltk-1.3.4-1/jpeg/jdapimin.c ****        cinfo->global_state == DSTATE_RAW_OK) && ! cinfo->buffered_image) {
 377:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Terminate final pass of non-buffered mode */
 378:fltk-1.3.4-1/jpeg/jdapimin.c ****     if (cinfo->output_scanline < cinfo->output_height)
 379:fltk-1.3.4-1/jpeg/jdapimin.c ****       ERREXIT(cinfo, JERR_TOO_LITTLE_DATA);
 380:fltk-1.3.4-1/jpeg/jdapimin.c ****     (*cinfo->master->finish_output_pass) (cinfo);
 381:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->global_state = DSTATE_STOPPING;
 382:fltk-1.3.4-1/jpeg/jdapimin.c ****   } else if (cinfo->global_state == DSTATE_BUFIMAGE) {
 840              		.loc 1 382 0
 841 0017 3DCF0000 		cmpl	$207, %eax
 841      00
 842 001c 7452     		je	.L110
 383:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Finishing after a buffered-image operation */
 384:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->global_state = DSTATE_STOPPING;
 385:fltk-1.3.4-1/jpeg/jdapimin.c ****   } else if (cinfo->global_state != DSTATE_STOPPING) {
 843              		.loc 1 385 0
 844 001e 3DD20000 		cmpl	$210, %eax
 844      00
 845 0023 7414     		je	.L97
 846 0025 EB60     		jmp	.L95
 847              	.LVL88:
 848 0027 660F1F84 		.p2align 4,,10
 848      00000000 
 848      00
 849              		.p2align 3
 850              	.L101:
 386:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* STOPPING = repeat call after a suspension, anything else is error */
 387:fltk-1.3.4-1/jpeg/jdapimin.c ****     ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);
 388:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 389:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Read until EOI */
 390:fltk-1.3.4-1/jpeg/jdapimin.c ****   while (! cinfo->inputctl->eoi_reached) {
 391:fltk-1.3.4-1/jpeg/jdapimin.c ****     if ((*cinfo->inputctl->consume_input) (cinfo) == JPEG_SUSPENDED)
 851              		.loc 1 391 0
 852 0030 4889DF   		movq	%rbx, %rdi
 853 0033 FF10     		call	*(%rax)
 854              	.LVL89:
 855 0035 85C0     		testl	%eax, %eax
 856 0037 7425     		je	.L100
 857              	.L97:
 390:fltk-1.3.4-1/jpeg/jdapimin.c ****     if ((*cinfo->inputctl->consume_input) (cinfo) == JPEG_SUSPENDED)
 858              		.loc 1 390 0
 859 0039 488B8360 		movq	608(%rbx), %rax
 859      020000
 860 0040 8B6824   		movl	36(%rax), %ebp
 861 0043 85ED     		testl	%ebp, %ebp
 862 0045 74E9     		je	.L101
 392:fltk-1.3.4-1/jpeg/jdapimin.c ****       return FALSE;		/* Suspend, come back later */
 393:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 394:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* Do final cleanup */
 395:fltk-1.3.4-1/jpeg/jdapimin.c ****   (*cinfo->src->term_source) (cinfo);
 863              		.loc 1 395 0
 864 0047 488B4328 		movq	40(%rbx), %rax
 865 004b 4889DF   		movq	%rbx, %rdi
 396:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* We can use jpeg_abort to release memory and reset global_state */
 397:fltk-1.3.4-1/jpeg/jdapimin.c ****   jpeg_abort((j_common_ptr) cinfo);
 398:fltk-1.3.4-1/jpeg/jdapimin.c ****   return TRUE;
 866              		.loc 1 398 0
 867 004e BD010000 		movl	$1, %ebp
 867      00
 395:fltk-1.3.4-1/jpeg/jdapimin.c ****   /* We can use jpeg_abort to release memory and reset global_state */
 868              		.loc 1 395 0
 869 0053 FF5030   		call	*48(%rax)
 870              	.LVL90:
 397:fltk-1.3.4-1/jpeg/jdapimin.c ****   return TRUE;
 871              		.loc 1 397 0
 872 0056 4889DF   		movq	%rbx, %rdi
 873 0059 E8000000 		call	jpeg_abort
 873      00
 874              	.LVL91:
 875              	.L100:
 399:fltk-1.3.4-1/jpeg/jdapimin.c **** }
 876              		.loc 1 399 0
 877 005e 4883C408 		addq	$8, %rsp
 878              		.cfi_remember_state
 879              		.cfi_def_cfa_offset 24
 880 0062 89E8     		movl	%ebp, %eax
 881 0064 5B       		popq	%rbx
 882              		.cfi_def_cfa_offset 16
 883              	.LVL92:
 884 0065 5D       		popq	%rbp
 885              		.cfi_def_cfa_offset 8
 886 0066 C3       		ret
 887              	.LVL93:
 888 0067 660F1F84 		.p2align 4,,10
 888      00000000 
 888      00
 889              		.p2align 3
 890              	.L110:
 891              		.cfi_restore_state
 384:fltk-1.3.4-1/jpeg/jdapimin.c ****   } else if (cinfo->global_state != DSTATE_STOPPING) {
 892              		.loc 1 384 0
 893 0070 C74724D2 		movl	$210, 36(%rdi)
 893      000000
 894 0077 EBC0     		jmp	.L97
 895 0079 0F1F8000 		.p2align 4,,10
 895      000000
 896              		.p2align 3
 897              	.L109:
 376:fltk-1.3.4-1/jpeg/jdapimin.c ****     /* Terminate final pass of non-buffered mode */
 898              		.loc 1 376 0
 899 0080 8B4758   		movl	88(%rdi), %eax
 900 0083 85C0     		testl	%eax, %eax
 901 0085 7421     		je	.L111
 902              	.L95:
 387:fltk-1.3.4-1/jpeg/jdapimin.c ****   }
 903              		.loc 1 387 0
 904 0087 488B03   		movq	(%rbx), %rax
 905 008a 4889DF   		movq	%rbx, %rdi
 906 008d C7402815 		movl	$21, 40(%rax)
 906      000000
 907 0094 488B03   		movq	(%rbx), %rax
 908 0097 8B5324   		movl	36(%rbx), %edx
 909 009a 89502C   		movl	%edx, 44(%rax)
 910 009d 488B03   		movq	(%rbx), %rax
 911 00a0 FF10     		call	*(%rax)
 912              	.LVL94:
 913 00a2 EB95     		jmp	.L97
 914              		.p2align 4,,10
 915 00a4 0F1F4000 		.p2align 3
 916              	.L111:
 378:fltk-1.3.4-1/jpeg/jdapimin.c ****       ERREXIT(cinfo, JERR_TOO_LITTLE_DATA);
 917              		.loc 1 378 0
 918 00a8 8B878C00 		movl	140(%rdi), %eax
 918      0000
 919 00ae 3987A800 		cmpl	%eax, 168(%rdi)
 919      0000
 920 00b4 7219     		jb	.L112
 921              	.L96:
 380:fltk-1.3.4-1/jpeg/jdapimin.c ****     cinfo->global_state = DSTATE_STOPPING;
 922              		.loc 1 380 0
 923 00b6 488B8340 		movq	576(%rbx), %rax
 923      020000
 924 00bd 4889DF   		movq	%rbx, %rdi
 925 00c0 FF5008   		call	*8(%rax)
 926              	.LVL95:
 381:fltk-1.3.4-1/jpeg/jdapimin.c ****   } else if (cinfo->global_state == DSTATE_BUFIMAGE) {
 927              		.loc 1 381 0
 928 00c3 C74324D2 		movl	$210, 36(%rbx)
 928      000000
 929 00ca E96AFFFF 		jmp	.L97
 929      FF
 930              	.L112:
 379:fltk-1.3.4-1/jpeg/jdapimin.c ****     (*cinfo->master->finish_output_pass) (cinfo);
 931              		.loc 1 379 0
 932 00cf 488B07   		movq	(%rdi), %rax
 933 00d2 C7402845 		movl	$69, 40(%rax)
 933      000000
 934 00d9 488B07   		movq	(%rdi), %rax
 935 00dc FF10     		call	*(%rax)
 936              	.LVL96:
 937 00de EBD6     		jmp	.L96
 938              		.cfi_endproc
 939              	.LFE69:
 941              		.section	.text.unlikely.jpeg_finish_decompress
 942              	.LCOLDE8:
 943              		.section	.text.jpeg_finish_decompress
 944              	.LHOTE8:
 945              		.section	.rodata.cst8,"aM",@progbits,8
 946              		.align 8
 947              	.LC3:
 948 0000 00000000 		.long	0
 949 0004 0000F03F 		.long	1072693248
 950              		.text
 951              	.Letext0:
 952              		.section	.text.unlikely.jpeg_CreateDecompress
 953              	.Letext_cold0:
 954              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 955              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 956              		.file 5 "/usr/include/libio.h"
 957              		.file 6 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 958              		.file 7 "fltk-1.3.4-1/jpeg/jpeglib.h"
 959              		.file 8 "fltk-1.3.4-1/jpeg/jpegint.h"
 960              		.file 9 "fltk-1.3.4-1/jpeg/jerror.h"
 961              		.file 10 "/usr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jdapimin.c
     /tmp/ccFTs3u6.s:14     .text.jpeg_CreateDecompress:0000000000000000 jpeg_CreateDecompress
     /tmp/ccFTs3u6.s:174    .text.jpeg_destroy_decompress:0000000000000000 jpeg_destroy_decompress
     /tmp/ccFTs3u6.s:196    .text.jpeg_abort_decompress:0000000000000000 jpeg_abort_decompress
     /tmp/ccFTs3u6.s:218    .text.jpeg_consume_input:0000000000000000 jpeg_consume_input
     /tmp/ccFTs3u6.s:614    .text.jpeg_read_header:0000000000000000 jpeg_read_header
     /tmp/ccFTs3u6.s:719    .text.jpeg_input_complete:0000000000000000 jpeg_input_complete
     /tmp/ccFTs3u6.s:770    .text.jpeg_has_multiple_scans:0000000000000000 jpeg_has_multiple_scans
     /tmp/ccFTs3u6.s:821    .text.jpeg_finish_decompress:0000000000000000 jpeg_finish_decompress
     /tmp/ccFTs3u6.s:947    .rodata.cst8:0000000000000000 .LC3
                           .group:0000000000000000 wm4.0.cf9695abff4f49bdfe00dc4091904acd
                           .group:0000000000000000 wm4.stdcpredef.h.19.bf2bf6c5fb087dfb5ef2d2297c2795de
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.24da27e0a4d0d521fd057013d982b8b5
                           .group:0000000000000000 wm4.cdefs.h.19.56613e71f285ebad825b69b151170a81
                           .group:0000000000000000 wm4.wordsize.h.4.256e8fdbd37801980286acdbc40d0280
                           .group:0000000000000000 wm4.cdefs.h.432.619afd0aac7c4b439843706c1b28ddea
                           .group:0000000000000000 wm4.stubs64.h.10.918ceb5fa58268542bf143e4c1efbcf3
                           .group:0000000000000000 wm4.stdlib.h.27.59e2586c75bdbcb991b248ad7257b993
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.waitflags.h.25.e401b8bcfee800b540b27abd7cc78de9
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.endian.h.19.ff00c9c0f5e9f9a9719c5de76ace57b4
                           .group:0000000000000000 wm4.endian.h.41.24cced64aef71195a51d4daa8e4f4a95
                           .group:0000000000000000 wm4.types.h.89.468e2451361e3b92f048f6cad51690ff
                           .group:0000000000000000 wm4.typesizes.h.24.40eb69a6270178f15d1bf3d7b6635a8b
                           .group:0000000000000000 wm4.byteswap.h.38.11ee5fdc0f6cc53a16c505b9233cecef
                           .group:0000000000000000 wm4.endian.h.63.97272d7c64d5db8020003b32e9289502
                           .group:0000000000000000 wm4.waitstatus.h.99.408b6270fa6eb71377201a241ef15f79
                           .group:0000000000000000 wm4.stdlib.h.50.84aeca2ac6f37d40e1e9b3cef757ba2d
                           .group:0000000000000000 wm4.types.h.23.f6dcbaa72f8f71361acef09804d45a5e
                           .group:0000000000000000 wm4.time.h.53.beb46e650cd406cb917b6b96b45e640a
                           .group:0000000000000000 wm4.stddef.h.238.847b6907dabda77be90a9ab7ad789e2e
                           .group:0000000000000000 wm4.types.h.187.bd5a05039b505b3620e6973f1b2ffeb1
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.sigset.h.20.f36413b6d2364ad847d3db53fb03e683
                           .group:0000000000000000 wm4.select.h.36.f76c3b9e55c871743863013cc4cc14c9
                           .group:0000000000000000 wm4.time.h.66.e70ce69790c975f0efb369340c432e0b
                           .group:0000000000000000 wm4.time.h.25.ae5284cdff565e87a9198d819340325d
                           .group:0000000000000000 wm4.select.h.49.e9d2041e5035cc68ebd1a20f7dbc8514
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.sysmacros.h.20.8a0c33ff175cd9b434a86c0aaa36f0a2
                           .group:0000000000000000 wm4.types.h.229.67b3f66bd74b06b451caec392a72a945
                           .group:0000000000000000 wm4.pthreadtypes.h.25.6892b1493314fcf446bbc76e7362acba
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.26.4719156f1aea2bb9662fd6c582dc9a4c
                           .group:0000000000000000 wm4.stddef.h.238.04cc7214bceba497b20d15c10fd97511
                           .group:0000000000000000 wm4.stdio.h.36.2dd12c1fd035242ad5cfd0152a01be5a
                           .group:0000000000000000 wm4._G_config.h.5.b0f37d9e474454cf6e459063458db32f
                           .group:0000000000000000 wm4.wchar.h.80.eea3eba2d2a17aace9470a8e0d8218dc
                           .group:0000000000000000 wm4._G_config.h.46.5187c97b14fd664662cb32e6b94fc49e
                           .group:0000000000000000 wm4.libio.h.33.a775b9ecae273f33bc59931e9891e4ca
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.libio.h.51.dab170798ec1df48c625aea7c30e1b63
                           .group:0000000000000000 wm4.stdio.h.80.17b7dd1ca72d8a61987532cb1d80194a
                           .group:0000000000000000 wm4.stdio_lim.h.23.557290a6cddeba0587f574f29e3a5fb9
                           .group:0000000000000000 wm4.stdio.h.172.df21df34a7396d7da2e08f9b617d582f
                           .group:0000000000000000 wm4.stdio.h.26.cae64f7ada9bb8327a89dba6a5e93655
                           .group:0000000000000000 wm4.string.h.23.8394011d5995a16f15d67d04e84a1d69
                           .group:0000000000000000 wm4.string.h.24.1b0dc67418e7128d207285861439c2f8
                           .group:0000000000000000 wm4.string2.h.45.00535b99420fc3014c2da41d6645330d
                           .group:0000000000000000 wm4.string3.h.31.0c4b9301b754a2db05eaafef869657d2
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
jinit_memory_mgr
jinit_marker_reader
jinit_input_controller
jpeg_destroy
jpeg_abort
