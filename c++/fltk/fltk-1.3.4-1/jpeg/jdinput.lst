   1              		.file	"jdinput.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.finish_input_pass,"ax",@progbits
   5              		.p2align 4
   7              	finish_input_pass:
   8              	.LVL0:
   9              	.LFB56:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jdinput.c"
   1:fltk-1.3.4-1/jpeg/jdinput.c **** /*
   2:fltk-1.3.4-1/jpeg/jdinput.c ****  * jdinput.c
   3:fltk-1.3.4-1/jpeg/jdinput.c ****  *
   4:fltk-1.3.4-1/jpeg/jdinput.c ****  * Copyright (C) 1991-1997, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jdinput.c ****  * Modified 2002-2013 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jdinput.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jdinput.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jdinput.c ****  *
   9:fltk-1.3.4-1/jpeg/jdinput.c ****  * This file contains input control logic for the JPEG decompressor.
  10:fltk-1.3.4-1/jpeg/jdinput.c ****  * These routines are concerned with controlling the decompressor's input
  11:fltk-1.3.4-1/jpeg/jdinput.c ****  * processing (marker reading and coefficient decoding).  The actual input
  12:fltk-1.3.4-1/jpeg/jdinput.c ****  * reading is done in jdmarker.c, jdhuff.c, and jdarith.c.
  13:fltk-1.3.4-1/jpeg/jdinput.c ****  */
  14:fltk-1.3.4-1/jpeg/jdinput.c **** 
  15:fltk-1.3.4-1/jpeg/jdinput.c **** #define JPEG_INTERNALS
  16:fltk-1.3.4-1/jpeg/jdinput.c **** #include "jinclude.h"
  17:fltk-1.3.4-1/jpeg/jdinput.c **** #include "jpeglib.h"
  18:fltk-1.3.4-1/jpeg/jdinput.c **** 
  19:fltk-1.3.4-1/jpeg/jdinput.c **** 
  20:fltk-1.3.4-1/jpeg/jdinput.c **** /* Private state */
  21:fltk-1.3.4-1/jpeg/jdinput.c **** 
  22:fltk-1.3.4-1/jpeg/jdinput.c **** typedef struct {
  23:fltk-1.3.4-1/jpeg/jdinput.c ****   struct jpeg_input_controller pub; /* public fields */
  24:fltk-1.3.4-1/jpeg/jdinput.c **** 
  25:fltk-1.3.4-1/jpeg/jdinput.c ****   int inheaders;		/* Nonzero until first SOS is reached */
  26:fltk-1.3.4-1/jpeg/jdinput.c **** } my_input_controller;
  27:fltk-1.3.4-1/jpeg/jdinput.c **** 
  28:fltk-1.3.4-1/jpeg/jdinput.c **** typedef my_input_controller * my_inputctl_ptr;
  29:fltk-1.3.4-1/jpeg/jdinput.c **** 
  30:fltk-1.3.4-1/jpeg/jdinput.c **** 
  31:fltk-1.3.4-1/jpeg/jdinput.c **** /* Forward declarations */
  32:fltk-1.3.4-1/jpeg/jdinput.c **** METHODDEF(int) consume_markers JPP((j_decompress_ptr cinfo));
  33:fltk-1.3.4-1/jpeg/jdinput.c **** 
  34:fltk-1.3.4-1/jpeg/jdinput.c **** 
  35:fltk-1.3.4-1/jpeg/jdinput.c **** /*
  36:fltk-1.3.4-1/jpeg/jdinput.c ****  * Routines to calculate various quantities related to the size of the image.
  37:fltk-1.3.4-1/jpeg/jdinput.c ****  */
  38:fltk-1.3.4-1/jpeg/jdinput.c **** 
  39:fltk-1.3.4-1/jpeg/jdinput.c **** 
  40:fltk-1.3.4-1/jpeg/jdinput.c **** /*
  41:fltk-1.3.4-1/jpeg/jdinput.c ****  * Compute output image dimensions and related values.
  42:fltk-1.3.4-1/jpeg/jdinput.c ****  * NOTE: this is exported for possible use by application.
  43:fltk-1.3.4-1/jpeg/jdinput.c ****  * Hence it mustn't do anything that can't be done twice.
  44:fltk-1.3.4-1/jpeg/jdinput.c ****  */
  45:fltk-1.3.4-1/jpeg/jdinput.c **** 
  46:fltk-1.3.4-1/jpeg/jdinput.c **** GLOBAL(void)
  47:fltk-1.3.4-1/jpeg/jdinput.c **** jpeg_core_output_dimensions (j_decompress_ptr cinfo)
  48:fltk-1.3.4-1/jpeg/jdinput.c **** /* Do computations that are needed before master selection phase.
  49:fltk-1.3.4-1/jpeg/jdinput.c ****  * This function is used for transcoding and full decompression.
  50:fltk-1.3.4-1/jpeg/jdinput.c ****  */
  51:fltk-1.3.4-1/jpeg/jdinput.c **** {
  52:fltk-1.3.4-1/jpeg/jdinput.c **** #ifdef IDCT_SCALING_SUPPORTED
  53:fltk-1.3.4-1/jpeg/jdinput.c ****   int ci;
  54:fltk-1.3.4-1/jpeg/jdinput.c ****   jpeg_component_info *compptr;
  55:fltk-1.3.4-1/jpeg/jdinput.c **** 
  56:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Compute actual output image dimensions and DCT scaling choices. */
  57:fltk-1.3.4-1/jpeg/jdinput.c ****   if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom) {
  58:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 1/block_size scaling */
  59:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
  60:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width, (long) cinfo->block_size);
  61:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
  62:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height, (long) cinfo->block_size);
  63:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 1;
  64:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 1;
  65:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 2) {
  66:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 2/block_size scaling */
  67:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
  68:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 2L, (long) cinfo->block_size);
  69:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
  70:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 2L, (long) cinfo->block_size);
  71:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 2;
  72:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 2;
  73:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 3) {
  74:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 3/block_size scaling */
  75:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
  76:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 3L, (long) cinfo->block_size);
  77:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
  78:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 3L, (long) cinfo->block_size);
  79:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 3;
  80:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 3;
  81:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 4) {
  82:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 4/block_size scaling */
  83:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
  84:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 4L, (long) cinfo->block_size);
  85:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
  86:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 4L, (long) cinfo->block_size);
  87:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 4;
  88:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 4;
  89:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 5) {
  90:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 5/block_size scaling */
  91:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
  92:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 5L, (long) cinfo->block_size);
  93:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
  94:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 5L, (long) cinfo->block_size);
  95:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 5;
  96:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 5;
  97:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 6) {
  98:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 6/block_size scaling */
  99:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 100:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 6L, (long) cinfo->block_size);
 101:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 102:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 6L, (long) cinfo->block_size);
 103:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 6;
 104:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 6;
 105:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 7) {
 106:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 7/block_size scaling */
 107:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 108:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 7L, (long) cinfo->block_size);
 109:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 110:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 7L, (long) cinfo->block_size);
 111:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 7;
 112:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 7;
 113:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 8) {
 114:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 8/block_size scaling */
 115:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 116:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 8L, (long) cinfo->block_size);
 117:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 118:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 8L, (long) cinfo->block_size);
 119:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 8;
 120:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 8;
 121:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 9) {
 122:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 9/block_size scaling */
 123:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 124:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 9L, (long) cinfo->block_size);
 125:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 126:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 9L, (long) cinfo->block_size);
 127:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 9;
 128:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 9;
 129:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 10) {
 130:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 10/block_size scaling */
 131:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 132:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 10L, (long) cinfo->block_size);
 133:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 134:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 10L, (long) cinfo->block_size);
 135:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 10;
 136:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 10;
 137:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 11) {
 138:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 11/block_size scaling */
 139:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 140:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 11L, (long) cinfo->block_size);
 141:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 142:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 11L, (long) cinfo->block_size);
 143:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 11;
 144:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 11;
 145:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 12) {
 146:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 12/block_size scaling */
 147:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 148:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 12L, (long) cinfo->block_size);
 149:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 150:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 12L, (long) cinfo->block_size);
 151:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 12;
 152:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 12;
 153:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 13) {
 154:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 13/block_size scaling */
 155:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 156:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 13L, (long) cinfo->block_size);
 157:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 158:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 13L, (long) cinfo->block_size);
 159:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 13;
 160:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 13;
 161:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 14) {
 162:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 14/block_size scaling */
 163:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 164:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 14L, (long) cinfo->block_size);
 165:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 166:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 14L, (long) cinfo->block_size);
 167:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 14;
 168:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 14;
 169:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 15) {
 170:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 15/block_size scaling */
 171:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 172:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 15L, (long) cinfo->block_size);
 173:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 174:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 15L, (long) cinfo->block_size);
 175:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 15;
 176:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 15;
 177:fltk-1.3.4-1/jpeg/jdinput.c ****   } else {
 178:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 16/block_size scaling */
 179:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_width = (JDIMENSION)
 180:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 16L, (long) cinfo->block_size);
 181:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 182:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 16L, (long) cinfo->block_size);
 183:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 16;
 184:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 16;
 185:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 186:fltk-1.3.4-1/jpeg/jdinput.c **** 
 187:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Recompute dimensions of components */
 188:fltk-1.3.4-1/jpeg/jdinput.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 189:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 190:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->min_DCT_h_scaled_size;
 191:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_v_scaled_size = cinfo->min_DCT_v_scaled_size;
 192:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 193:fltk-1.3.4-1/jpeg/jdinput.c **** 
 194:fltk-1.3.4-1/jpeg/jdinput.c **** #else /* !IDCT_SCALING_SUPPORTED */
 195:fltk-1.3.4-1/jpeg/jdinput.c **** 
 196:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Hardwire it to "no scaling" */
 197:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->output_width = cinfo->image_width;
 198:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->output_height = cinfo->image_height;
 199:fltk-1.3.4-1/jpeg/jdinput.c ****   /* initial_setup has already initialized DCT_scaled_size,
 200:fltk-1.3.4-1/jpeg/jdinput.c ****    * and has computed unscaled downsampled_width and downsampled_height.
 201:fltk-1.3.4-1/jpeg/jdinput.c ****    */
 202:fltk-1.3.4-1/jpeg/jdinput.c **** 
 203:fltk-1.3.4-1/jpeg/jdinput.c **** #endif /* IDCT_SCALING_SUPPORTED */
 204:fltk-1.3.4-1/jpeg/jdinput.c **** }
 205:fltk-1.3.4-1/jpeg/jdinput.c **** 
 206:fltk-1.3.4-1/jpeg/jdinput.c **** 
 207:fltk-1.3.4-1/jpeg/jdinput.c **** LOCAL(void)
 208:fltk-1.3.4-1/jpeg/jdinput.c **** initial_setup (j_decompress_ptr cinfo)
 209:fltk-1.3.4-1/jpeg/jdinput.c **** /* Called once, when first SOS marker is reached */
 210:fltk-1.3.4-1/jpeg/jdinput.c **** {
 211:fltk-1.3.4-1/jpeg/jdinput.c ****   int ci;
 212:fltk-1.3.4-1/jpeg/jdinput.c ****   jpeg_component_info *compptr;
 213:fltk-1.3.4-1/jpeg/jdinput.c **** 
 214:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Make sure image isn't bigger than I can handle */
 215:fltk-1.3.4-1/jpeg/jdinput.c ****   if ((long) cinfo->image_height > (long) JPEG_MAX_DIMENSION ||
 216:fltk-1.3.4-1/jpeg/jdinput.c ****       (long) cinfo->image_width > (long) JPEG_MAX_DIMENSION)
 217:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT1(cinfo, JERR_IMAGE_TOO_BIG, (unsigned int) JPEG_MAX_DIMENSION);
 218:fltk-1.3.4-1/jpeg/jdinput.c **** 
 219:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Only 8 to 12 bits data precision are supported for DCT based JPEG */
 220:fltk-1.3.4-1/jpeg/jdinput.c ****   if (cinfo->data_precision < 8 || cinfo->data_precision > 12)
 221:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);
 222:fltk-1.3.4-1/jpeg/jdinput.c **** 
 223:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Check that number of components won't exceed internal array sizes */
 224:fltk-1.3.4-1/jpeg/jdinput.c ****   if (cinfo->num_components > MAX_COMPONENTS)
 225:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 226:fltk-1.3.4-1/jpeg/jdinput.c **** 	     MAX_COMPONENTS);
 227:fltk-1.3.4-1/jpeg/jdinput.c **** 
 228:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Compute maximum sampling factors; check factor validity */
 229:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->max_h_samp_factor = 1;
 230:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->max_v_samp_factor = 1;
 231:fltk-1.3.4-1/jpeg/jdinput.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 232:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 233:fltk-1.3.4-1/jpeg/jdinput.c ****     if (compptr->h_samp_factor<=0 || compptr->h_samp_factor>MAX_SAMP_FACTOR ||
 234:fltk-1.3.4-1/jpeg/jdinput.c **** 	compptr->v_samp_factor<=0 || compptr->v_samp_factor>MAX_SAMP_FACTOR)
 235:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT(cinfo, JERR_BAD_SAMPLING);
 236:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->max_h_samp_factor = MAX(cinfo->max_h_samp_factor,
 237:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->h_samp_factor);
 238:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->max_v_samp_factor = MAX(cinfo->max_v_samp_factor,
 239:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->v_samp_factor);
 240:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 241:fltk-1.3.4-1/jpeg/jdinput.c **** 
 242:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Derive block_size, natural_order, and lim_Se */
 243:fltk-1.3.4-1/jpeg/jdinput.c ****   if (cinfo->is_baseline || (cinfo->progressive_mode &&
 244:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->comps_in_scan)) { /* no pseudo SOS marker */
 245:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->block_size = DCTSIZE;
 246:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->natural_order = jpeg_natural_order;
 247:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->lim_Se = DCTSIZE2-1;
 248:fltk-1.3.4-1/jpeg/jdinput.c ****   } else
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     switch (cinfo->Se) {
 250:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 251:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 1;
 252:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order; /* not needed */
 253:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 254:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 255:fltk-1.3.4-1/jpeg/jdinput.c ****     case (2*2-1):
 256:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 2;
 257:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order2;
 258:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 259:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 260:fltk-1.3.4-1/jpeg/jdinput.c ****     case (3*3-1):
 261:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 3;
 262:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order3;
 263:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 264:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 265:fltk-1.3.4-1/jpeg/jdinput.c ****     case (4*4-1):
 266:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 4;
 267:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order4;
 268:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 269:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 270:fltk-1.3.4-1/jpeg/jdinput.c ****     case (5*5-1):
 271:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 5;
 272:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order5;
 273:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 274:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 275:fltk-1.3.4-1/jpeg/jdinput.c ****     case (6*6-1):
 276:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 6;
 277:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order6;
 278:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 279:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 280:fltk-1.3.4-1/jpeg/jdinput.c ****     case (7*7-1):
 281:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 7;
 282:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order7;
 283:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 284:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 285:fltk-1.3.4-1/jpeg/jdinput.c ****     case (8*8-1):
 286:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 8;
 287:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 288:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 289:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 290:fltk-1.3.4-1/jpeg/jdinput.c ****     case (9*9-1):
 291:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 9;
 292:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 293:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 294:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 295:fltk-1.3.4-1/jpeg/jdinput.c ****     case (10*10-1):
 296:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 10;
 297:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 298:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 299:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 300:fltk-1.3.4-1/jpeg/jdinput.c ****     case (11*11-1):
 301:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 11;
 302:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 303:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 304:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 305:fltk-1.3.4-1/jpeg/jdinput.c ****     case (12*12-1):
 306:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 12;
 307:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 308:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 309:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 310:fltk-1.3.4-1/jpeg/jdinput.c ****     case (13*13-1):
 311:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 13;
 312:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 313:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 314:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 315:fltk-1.3.4-1/jpeg/jdinput.c ****     case (14*14-1):
 316:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 14;
 317:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 318:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 319:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 320:fltk-1.3.4-1/jpeg/jdinput.c ****     case (15*15-1):
 321:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 15;
 322:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 323:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 324:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 325:fltk-1.3.4-1/jpeg/jdinput.c ****     case (16*16-1):
 326:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->block_size = 16;
 327:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 328:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 329:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 330:fltk-1.3.4-1/jpeg/jdinput.c ****     default:
 331:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT4(cinfo, JERR_BAD_PROGRESSION,
 332:fltk-1.3.4-1/jpeg/jdinput.c **** 	       cinfo->Ss, cinfo->Se, cinfo->Ah, cinfo->Al);
 333:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 334:fltk-1.3.4-1/jpeg/jdinput.c ****     }
 335:fltk-1.3.4-1/jpeg/jdinput.c **** 
 336:fltk-1.3.4-1/jpeg/jdinput.c ****   /* We initialize DCT_scaled_size and min_DCT_scaled_size to block_size.
 337:fltk-1.3.4-1/jpeg/jdinput.c ****    * In the full decompressor,
 338:fltk-1.3.4-1/jpeg/jdinput.c ****    * this will be overridden by jpeg_calc_output_dimensions in jdmaster.c;
 339:fltk-1.3.4-1/jpeg/jdinput.c ****    * but in the transcoder,
 340:fltk-1.3.4-1/jpeg/jdinput.c ****    * jpeg_calc_output_dimensions is not used, so we must do it here.
 341:fltk-1.3.4-1/jpeg/jdinput.c ****    */
 342:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->min_DCT_h_scaled_size = cinfo->block_size;
 343:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->min_DCT_v_scaled_size = cinfo->block_size;
 344:fltk-1.3.4-1/jpeg/jdinput.c **** 
 345:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Compute dimensions of components */
 346:fltk-1.3.4-1/jpeg/jdinput.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 347:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 348:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->block_size;
 349:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_v_scaled_size = cinfo->block_size;
 350:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Size in DCT blocks */
 351:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->width_in_blocks = (JDIMENSION)
 352:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * (long) compptr->h_samp_factor,
 353:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 354:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->height_in_blocks = (JDIMENSION)
 355:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * (long) compptr->v_samp_factor,
 356:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 357:fltk-1.3.4-1/jpeg/jdinput.c ****     /* downsampled_width and downsampled_height will also be overridden by
 358:fltk-1.3.4-1/jpeg/jdinput.c ****      * jdmaster.c if we are doing full decompression.  The transcoder library
 359:fltk-1.3.4-1/jpeg/jdinput.c ****      * doesn't use these values, but the calling application might.
 360:fltk-1.3.4-1/jpeg/jdinput.c ****      */
 361:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Size in samples */
 362:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->downsampled_width = (JDIMENSION)
 363:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * (long) compptr->h_samp_factor,
 364:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_h_samp_factor);
 365:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->downsampled_height = (JDIMENSION)
 366:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * (long) compptr->v_samp_factor,
 367:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_v_samp_factor);
 368:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Mark component needed, until color conversion says otherwise */
 369:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->component_needed = TRUE;
 370:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Mark no quantization table yet saved for component */
 371:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->quant_table = NULL;
 372:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 373:fltk-1.3.4-1/jpeg/jdinput.c **** 
 374:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Compute number of fully interleaved MCU rows. */
 375:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->total_iMCU_rows = (JDIMENSION)
 376:fltk-1.3.4-1/jpeg/jdinput.c ****     jdiv_round_up((long) cinfo->image_height,
 377:fltk-1.3.4-1/jpeg/jdinput.c **** 	          (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 378:fltk-1.3.4-1/jpeg/jdinput.c **** 
 379:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Decide whether file contains multiple scans */
 380:fltk-1.3.4-1/jpeg/jdinput.c ****   if (cinfo->comps_in_scan < cinfo->num_components || cinfo->progressive_mode)
 381:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->inputctl->has_multiple_scans = TRUE;
 382:fltk-1.3.4-1/jpeg/jdinput.c ****   else
 383:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->inputctl->has_multiple_scans = FALSE;
 384:fltk-1.3.4-1/jpeg/jdinput.c **** }
 385:fltk-1.3.4-1/jpeg/jdinput.c **** 
 386:fltk-1.3.4-1/jpeg/jdinput.c **** 
 387:fltk-1.3.4-1/jpeg/jdinput.c **** LOCAL(void)
 388:fltk-1.3.4-1/jpeg/jdinput.c **** per_scan_setup (j_decompress_ptr cinfo)
 389:fltk-1.3.4-1/jpeg/jdinput.c **** /* Do computations that are needed before processing a JPEG scan */
 390:fltk-1.3.4-1/jpeg/jdinput.c **** /* cinfo->comps_in_scan and cinfo->cur_comp_info[] were set from SOS marker */
 391:fltk-1.3.4-1/jpeg/jdinput.c **** {
 392:fltk-1.3.4-1/jpeg/jdinput.c ****   int ci, mcublks, tmp;
 393:fltk-1.3.4-1/jpeg/jdinput.c ****   jpeg_component_info *compptr;
 394:fltk-1.3.4-1/jpeg/jdinput.c ****   
 395:fltk-1.3.4-1/jpeg/jdinput.c ****   if (cinfo->comps_in_scan == 1) {
 396:fltk-1.3.4-1/jpeg/jdinput.c ****     
 397:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Noninterleaved (single-component) scan */
 398:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[0];
 399:fltk-1.3.4-1/jpeg/jdinput.c ****     
 400:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Overall image size in MCUs */
 401:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCUs_per_row = compptr->width_in_blocks;
 402:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_rows_in_scan = compptr->height_in_blocks;
 403:fltk-1.3.4-1/jpeg/jdinput.c ****     
 404:fltk-1.3.4-1/jpeg/jdinput.c ****     /* For noninterleaved scan, always one block per MCU */
 405:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_width = 1;
 406:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_height = 1;
 407:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_blocks = 1;
 408:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_sample_width = compptr->DCT_h_scaled_size;
 409:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->last_col_width = 1;
 410:fltk-1.3.4-1/jpeg/jdinput.c ****     /* For noninterleaved scans, it is convenient to define last_row_height
 411:fltk-1.3.4-1/jpeg/jdinput.c ****      * as the number of block rows present in the last iMCU row.
 412:fltk-1.3.4-1/jpeg/jdinput.c ****      */
 413:fltk-1.3.4-1/jpeg/jdinput.c ****     tmp = (int) (compptr->height_in_blocks % compptr->v_samp_factor);
 414:fltk-1.3.4-1/jpeg/jdinput.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 415:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->last_row_height = tmp;
 416:fltk-1.3.4-1/jpeg/jdinput.c ****     
 417:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Prepare array describing MCU composition */
 418:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->blocks_in_MCU = 1;
 419:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_membership[0] = 0;
 420:fltk-1.3.4-1/jpeg/jdinput.c ****     
 421:fltk-1.3.4-1/jpeg/jdinput.c ****   } else {
 422:fltk-1.3.4-1/jpeg/jdinput.c ****     
 423:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Interleaved (multi-component) scan */
 424:fltk-1.3.4-1/jpeg/jdinput.c ****     if (cinfo->comps_in_scan <= 0 || cinfo->comps_in_scan > MAX_COMPS_IN_SCAN)
 425:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->comps_in_scan,
 426:fltk-1.3.4-1/jpeg/jdinput.c **** 	       MAX_COMPS_IN_SCAN);
 427:fltk-1.3.4-1/jpeg/jdinput.c ****     
 428:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Overall image size in MCUs */
 429:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCUs_per_row = (JDIMENSION)
 430:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width,
 431:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 432:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_rows_in_scan = (JDIMENSION)
 433:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height,
 434:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 435:fltk-1.3.4-1/jpeg/jdinput.c ****     
 436:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->blocks_in_MCU = 0;
 437:fltk-1.3.4-1/jpeg/jdinput.c ****     
 438:fltk-1.3.4-1/jpeg/jdinput.c ****     for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 439:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 440:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Sampling factors give # of blocks of component in each MCU */
 441:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_width = compptr->h_samp_factor;
 442:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_height = compptr->v_samp_factor;
 443:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_blocks = compptr->MCU_width * compptr->MCU_height;
 444:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 445:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 446:fltk-1.3.4-1/jpeg/jdinput.c ****       tmp = (int) (compptr->width_in_blocks % compptr->MCU_width);
 447:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 448:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->last_col_width = tmp;
 449:fltk-1.3.4-1/jpeg/jdinput.c ****       tmp = (int) (compptr->height_in_blocks % compptr->MCU_height);
 450:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 451:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->last_row_height = tmp;
 452:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Prepare array describing MCU composition */
 453:fltk-1.3.4-1/jpeg/jdinput.c ****       mcublks = compptr->MCU_blocks;
 454:fltk-1.3.4-1/jpeg/jdinput.c ****       if (cinfo->blocks_in_MCU + mcublks > D_MAX_BLOCKS_IN_MCU)
 455:fltk-1.3.4-1/jpeg/jdinput.c **** 	ERREXIT(cinfo, JERR_BAD_MCU_SIZE);
 456:fltk-1.3.4-1/jpeg/jdinput.c ****       while (mcublks-- > 0) {
 457:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 458:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 459:fltk-1.3.4-1/jpeg/jdinput.c ****     }
 460:fltk-1.3.4-1/jpeg/jdinput.c ****     
 461:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 462:fltk-1.3.4-1/jpeg/jdinput.c **** }
 463:fltk-1.3.4-1/jpeg/jdinput.c **** 
 464:fltk-1.3.4-1/jpeg/jdinput.c **** 
 465:fltk-1.3.4-1/jpeg/jdinput.c **** /*
 466:fltk-1.3.4-1/jpeg/jdinput.c ****  * Save away a copy of the Q-table referenced by each component present
 467:fltk-1.3.4-1/jpeg/jdinput.c ****  * in the current scan, unless already saved during a prior scan.
 468:fltk-1.3.4-1/jpeg/jdinput.c ****  *
 469:fltk-1.3.4-1/jpeg/jdinput.c ****  * In a multiple-scan JPEG file, the encoder could assign different components
 470:fltk-1.3.4-1/jpeg/jdinput.c ****  * the same Q-table slot number, but change table definitions between scans
 471:fltk-1.3.4-1/jpeg/jdinput.c ****  * so that each component uses a different Q-table.  (The IJG encoder is not
 472:fltk-1.3.4-1/jpeg/jdinput.c ****  * currently capable of doing this, but other encoders might.)  Since we want
 473:fltk-1.3.4-1/jpeg/jdinput.c ****  * to be able to dequantize all the components at the end of the file, this
 474:fltk-1.3.4-1/jpeg/jdinput.c ****  * means that we have to save away the table actually used for each component.
 475:fltk-1.3.4-1/jpeg/jdinput.c ****  * We do this by copying the table at the start of the first scan containing
 476:fltk-1.3.4-1/jpeg/jdinput.c ****  * the component.
 477:fltk-1.3.4-1/jpeg/jdinput.c ****  * The JPEG spec prohibits the encoder from changing the contents of a Q-table
 478:fltk-1.3.4-1/jpeg/jdinput.c ****  * slot between scans of a component using that slot.  If the encoder does so
 479:fltk-1.3.4-1/jpeg/jdinput.c ****  * anyway, this decoder will simply use the Q-table values that were current
 480:fltk-1.3.4-1/jpeg/jdinput.c ****  * at the start of the first scan for the component.
 481:fltk-1.3.4-1/jpeg/jdinput.c ****  *
 482:fltk-1.3.4-1/jpeg/jdinput.c ****  * The decompressor output side looks only at the saved quant tables,
 483:fltk-1.3.4-1/jpeg/jdinput.c ****  * not at the current Q-table slots.
 484:fltk-1.3.4-1/jpeg/jdinput.c ****  */
 485:fltk-1.3.4-1/jpeg/jdinput.c **** 
 486:fltk-1.3.4-1/jpeg/jdinput.c **** LOCAL(void)
 487:fltk-1.3.4-1/jpeg/jdinput.c **** latch_quant_tables (j_decompress_ptr cinfo)
 488:fltk-1.3.4-1/jpeg/jdinput.c **** {
 489:fltk-1.3.4-1/jpeg/jdinput.c ****   int ci, qtblno;
 490:fltk-1.3.4-1/jpeg/jdinput.c ****   jpeg_component_info *compptr;
 491:fltk-1.3.4-1/jpeg/jdinput.c ****   JQUANT_TBL * qtbl;
 492:fltk-1.3.4-1/jpeg/jdinput.c **** 
 493:fltk-1.3.4-1/jpeg/jdinput.c ****   for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 494:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[ci];
 495:fltk-1.3.4-1/jpeg/jdinput.c ****     /* No work if we already saved Q-table for this component */
 496:fltk-1.3.4-1/jpeg/jdinput.c ****     if (compptr->quant_table != NULL)
 497:fltk-1.3.4-1/jpeg/jdinput.c ****       continue;
 498:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Make sure specified quantization table is present */
 499:fltk-1.3.4-1/jpeg/jdinput.c ****     qtblno = compptr->quant_tbl_no;
 500:fltk-1.3.4-1/jpeg/jdinput.c ****     if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
 501:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->quant_tbl_ptrs[qtblno] == NULL)
 502:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT1(cinfo, JERR_NO_QUANT_TABLE, qtblno);
 503:fltk-1.3.4-1/jpeg/jdinput.c ****     /* OK, save away the quantization table */
 504:fltk-1.3.4-1/jpeg/jdinput.c ****     qtbl = (JQUANT_TBL *)
 505:fltk-1.3.4-1/jpeg/jdinput.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 506:fltk-1.3.4-1/jpeg/jdinput.c **** 				  SIZEOF(JQUANT_TBL));
 507:fltk-1.3.4-1/jpeg/jdinput.c ****     MEMCOPY(qtbl, cinfo->quant_tbl_ptrs[qtblno], SIZEOF(JQUANT_TBL));
 508:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->quant_table = qtbl;
 509:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 510:fltk-1.3.4-1/jpeg/jdinput.c **** }
 511:fltk-1.3.4-1/jpeg/jdinput.c **** 
 512:fltk-1.3.4-1/jpeg/jdinput.c **** 
 513:fltk-1.3.4-1/jpeg/jdinput.c **** /*
 514:fltk-1.3.4-1/jpeg/jdinput.c ****  * Initialize the input modules to read a scan of compressed data.
 515:fltk-1.3.4-1/jpeg/jdinput.c ****  * The first call to this is done by jdmaster.c after initializing
 516:fltk-1.3.4-1/jpeg/jdinput.c ****  * the entire decompressor (during jpeg_start_decompress).
 517:fltk-1.3.4-1/jpeg/jdinput.c ****  * Subsequent calls come from consume_markers, below.
 518:fltk-1.3.4-1/jpeg/jdinput.c ****  */
 519:fltk-1.3.4-1/jpeg/jdinput.c **** 
 520:fltk-1.3.4-1/jpeg/jdinput.c **** METHODDEF(void)
 521:fltk-1.3.4-1/jpeg/jdinput.c **** start_input_pass (j_decompress_ptr cinfo)
 522:fltk-1.3.4-1/jpeg/jdinput.c **** {
 523:fltk-1.3.4-1/jpeg/jdinput.c ****   per_scan_setup(cinfo);
 524:fltk-1.3.4-1/jpeg/jdinput.c ****   latch_quant_tables(cinfo);
 525:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->entropy->start_pass) (cinfo);
 526:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->coef->start_input_pass) (cinfo);
 527:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->inputctl->consume_input = cinfo->coef->consume_data;
 528:fltk-1.3.4-1/jpeg/jdinput.c **** }
 529:fltk-1.3.4-1/jpeg/jdinput.c **** 
 530:fltk-1.3.4-1/jpeg/jdinput.c **** 
 531:fltk-1.3.4-1/jpeg/jdinput.c **** /*
 532:fltk-1.3.4-1/jpeg/jdinput.c ****  * Finish up after inputting a compressed-data scan.
 533:fltk-1.3.4-1/jpeg/jdinput.c ****  * This is called by the coefficient controller after it's read all
 534:fltk-1.3.4-1/jpeg/jdinput.c ****  * the expected data of the scan.
 535:fltk-1.3.4-1/jpeg/jdinput.c ****  */
 536:fltk-1.3.4-1/jpeg/jdinput.c **** 
 537:fltk-1.3.4-1/jpeg/jdinput.c **** METHODDEF(void)
 538:fltk-1.3.4-1/jpeg/jdinput.c **** finish_input_pass (j_decompress_ptr cinfo)
 539:fltk-1.3.4-1/jpeg/jdinput.c **** {
  11              		.loc 1 539 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 539 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
 540:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->entropy->finish_pass) (cinfo);
  15              		.loc 1 540 3 is_stmt 1 view .LVU2
  16              		.loc 1 540 4 is_stmt 0 view .LVU3
  17 0004 488B8770 		movq	624(%rdi), %rax
  17      020000
 539:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->entropy->finish_pass) (cinfo);
  18              		.loc 1 539 1 view .LVU4
  19 000b 53       		pushq	%rbx
  20              		.cfi_def_cfa_offset 16
  21              		.cfi_offset 3, -16
 539:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->entropy->finish_pass) (cinfo);
  22              		.loc 1 539 1 view .LVU5
  23 000c 4889FB   		movq	%rdi, %rbx
  24              		.loc 1 540 4 view .LVU6
  25 000f FF5010   		call	*16(%rax)
  26              	.LVL1:
 541:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->inputctl->consume_input = consume_markers;
  27              		.loc 1 541 3 is_stmt 1 view .LVU7
  28              		.loc 1 541 8 is_stmt 0 view .LVU8
  29 0012 488B8360 		movq	608(%rbx), %rax
  29      020000
  30              		.loc 1 541 34 view .LVU9
  31 0019 488D1500 		leaq	consume_markers(%rip), %rdx
  31      000000
  32 0020 488910   		movq	%rdx, (%rax)
 542:fltk-1.3.4-1/jpeg/jdinput.c **** }
  33              		.loc 1 542 1 view .LVU10
  34 0023 5B       		popq	%rbx
  35              		.cfi_def_cfa_offset 8
  36              	.LVL2:
  37              		.loc 1 542 1 view .LVU11
  38 0024 C3       		ret
  39              		.cfi_endproc
  40              	.LFE56:
  42              		.section	.text.reset_input_controller,"ax",@progbits
  43              		.p2align 4
  45              	reset_input_controller:
  46              	.LVL3:
  47              	.LFB58:
 543:fltk-1.3.4-1/jpeg/jdinput.c **** 
 544:fltk-1.3.4-1/jpeg/jdinput.c **** 
 545:fltk-1.3.4-1/jpeg/jdinput.c **** /*
 546:fltk-1.3.4-1/jpeg/jdinput.c ****  * Read JPEG markers before, between, or after compressed-data scans.
 547:fltk-1.3.4-1/jpeg/jdinput.c ****  * Change state as necessary when a new scan is reached.
 548:fltk-1.3.4-1/jpeg/jdinput.c ****  * Return value is JPEG_SUSPENDED, JPEG_REACHED_SOS, or JPEG_REACHED_EOI.
 549:fltk-1.3.4-1/jpeg/jdinput.c ****  *
 550:fltk-1.3.4-1/jpeg/jdinput.c ****  * The consume_input method pointer points either here or to the
 551:fltk-1.3.4-1/jpeg/jdinput.c ****  * coefficient controller's consume_data routine, depending on whether
 552:fltk-1.3.4-1/jpeg/jdinput.c ****  * we are reading a compressed data segment or inter-segment markers.
 553:fltk-1.3.4-1/jpeg/jdinput.c ****  *
 554:fltk-1.3.4-1/jpeg/jdinput.c ****  * Note: This function should NOT return a pseudo SOS marker (with zero
 555:fltk-1.3.4-1/jpeg/jdinput.c ****  * component number) to the caller.  A pseudo marker received by
 556:fltk-1.3.4-1/jpeg/jdinput.c ****  * read_markers is processed and then skipped for other markers.
 557:fltk-1.3.4-1/jpeg/jdinput.c ****  */
 558:fltk-1.3.4-1/jpeg/jdinput.c **** 
 559:fltk-1.3.4-1/jpeg/jdinput.c **** METHODDEF(int)
 560:fltk-1.3.4-1/jpeg/jdinput.c **** consume_markers (j_decompress_ptr cinfo)
 561:fltk-1.3.4-1/jpeg/jdinput.c **** {
 562:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
 563:fltk-1.3.4-1/jpeg/jdinput.c ****   int val;
 564:fltk-1.3.4-1/jpeg/jdinput.c **** 
 565:fltk-1.3.4-1/jpeg/jdinput.c ****   if (inputctl->pub.eoi_reached) /* After hitting EOI, read no further */
 566:fltk-1.3.4-1/jpeg/jdinput.c ****     return JPEG_REACHED_EOI;
 567:fltk-1.3.4-1/jpeg/jdinput.c **** 
 568:fltk-1.3.4-1/jpeg/jdinput.c ****   for (;;) {			/* Loop to pass pseudo SOS marker */
 569:fltk-1.3.4-1/jpeg/jdinput.c ****     val = (*cinfo->marker->read_markers) (cinfo);
 570:fltk-1.3.4-1/jpeg/jdinput.c **** 
 571:fltk-1.3.4-1/jpeg/jdinput.c ****     switch (val) {
 572:fltk-1.3.4-1/jpeg/jdinput.c ****     case JPEG_REACHED_SOS:	/* Found SOS */
 573:fltk-1.3.4-1/jpeg/jdinput.c ****       if (inputctl->inheaders) { /* 1st SOS */
 574:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (inputctl->inheaders == 1)
 575:fltk-1.3.4-1/jpeg/jdinput.c **** 	  initial_setup(cinfo);
 576:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->comps_in_scan == 0) { /* pseudo SOS marker */
 577:fltk-1.3.4-1/jpeg/jdinput.c **** 	  inputctl->inheaders = 2;
 578:fltk-1.3.4-1/jpeg/jdinput.c **** 	  break;
 579:fltk-1.3.4-1/jpeg/jdinput.c **** 	}
 580:fltk-1.3.4-1/jpeg/jdinput.c **** 	inputctl->inheaders = 0;
 581:fltk-1.3.4-1/jpeg/jdinput.c **** 	/* Note: start_input_pass must be called by jdmaster.c
 582:fltk-1.3.4-1/jpeg/jdinput.c **** 	 * before any more input can be consumed.  jdapimin.c is
 583:fltk-1.3.4-1/jpeg/jdinput.c **** 	 * responsible for enforcing this sequencing.
 584:fltk-1.3.4-1/jpeg/jdinput.c **** 	 */
 585:fltk-1.3.4-1/jpeg/jdinput.c ****       } else {			/* 2nd or later SOS marker */
 586:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (! inputctl->pub.has_multiple_scans)
 587:fltk-1.3.4-1/jpeg/jdinput.c **** 	  ERREXIT(cinfo, JERR_EOI_EXPECTED); /* Oops, I wasn't expecting this! */
 588:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->comps_in_scan == 0) /* unexpected pseudo SOS marker */
 589:fltk-1.3.4-1/jpeg/jdinput.c **** 	  break;
 590:fltk-1.3.4-1/jpeg/jdinput.c **** 	start_input_pass(cinfo);
 591:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 592:fltk-1.3.4-1/jpeg/jdinput.c ****       return val;
 593:fltk-1.3.4-1/jpeg/jdinput.c ****     case JPEG_REACHED_EOI:	/* Found EOI */
 594:fltk-1.3.4-1/jpeg/jdinput.c ****       inputctl->pub.eoi_reached = TRUE;
 595:fltk-1.3.4-1/jpeg/jdinput.c ****       if (inputctl->inheaders) { /* Tables-only datastream, apparently */
 596:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->marker->saw_SOF)
 597:fltk-1.3.4-1/jpeg/jdinput.c **** 	  ERREXIT(cinfo, JERR_SOF_NO_SOS);
 598:fltk-1.3.4-1/jpeg/jdinput.c ****       } else {
 599:fltk-1.3.4-1/jpeg/jdinput.c **** 	/* Prevent infinite loop in coef ctlr's decompress_data routine
 600:fltk-1.3.4-1/jpeg/jdinput.c **** 	 * if user set output_scan_number larger than number of scans.
 601:fltk-1.3.4-1/jpeg/jdinput.c **** 	 */
 602:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->output_scan_number > cinfo->input_scan_number)
 603:fltk-1.3.4-1/jpeg/jdinput.c **** 	  cinfo->output_scan_number = cinfo->input_scan_number;
 604:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 605:fltk-1.3.4-1/jpeg/jdinput.c ****       return val;
 606:fltk-1.3.4-1/jpeg/jdinput.c ****     case JPEG_SUSPENDED:
 607:fltk-1.3.4-1/jpeg/jdinput.c ****       return val;
 608:fltk-1.3.4-1/jpeg/jdinput.c ****     default:
 609:fltk-1.3.4-1/jpeg/jdinput.c ****       return val;
 610:fltk-1.3.4-1/jpeg/jdinput.c ****     }
 611:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 612:fltk-1.3.4-1/jpeg/jdinput.c **** }
 613:fltk-1.3.4-1/jpeg/jdinput.c **** 
 614:fltk-1.3.4-1/jpeg/jdinput.c **** 
 615:fltk-1.3.4-1/jpeg/jdinput.c **** /*
 616:fltk-1.3.4-1/jpeg/jdinput.c ****  * Reset state to begin a fresh datastream.
 617:fltk-1.3.4-1/jpeg/jdinput.c ****  */
 618:fltk-1.3.4-1/jpeg/jdinput.c **** 
 619:fltk-1.3.4-1/jpeg/jdinput.c **** METHODDEF(void)
 620:fltk-1.3.4-1/jpeg/jdinput.c **** reset_input_controller (j_decompress_ptr cinfo)
 621:fltk-1.3.4-1/jpeg/jdinput.c **** {
  48              		.loc 1 621 1 is_stmt 1 view -0
  49              		.cfi_startproc
  50              		.loc 1 621 1 is_stmt 0 view .LVU13
  51 0000 F30F1EFA 		endbr64
 622:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
  52              		.loc 1 622 3 is_stmt 1 view .LVU14
 621:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
  53              		.loc 1 621 1 is_stmt 0 view .LVU15
  54 0004 53       		pushq	%rbx
  55              		.cfi_def_cfa_offset 16
  56              		.cfi_offset 3, -16
  57              		.loc 1 622 19 view .LVU16
  58 0005 488B8760 		movq	608(%rdi), %rax
  58      020000
  59              	.LVL4:
 623:fltk-1.3.4-1/jpeg/jdinput.c **** 
 624:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.consume_input = consume_markers;
  60              		.loc 1 624 3 is_stmt 1 view .LVU17
  61              		.loc 1 624 31 is_stmt 0 view .LVU18
  62 000c 488D1500 		leaq	consume_markers(%rip), %rdx
  62      000000
 621:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
  63              		.loc 1 621 1 view .LVU19
  64 0013 4889FB   		movq	%rdi, %rbx
  65              		.loc 1 624 31 view .LVU20
  66 0016 488910   		movq	%rdx, (%rax)
 625:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.has_multiple_scans = FALSE; /* "unknown" would be better */
  67              		.loc 1 625 3 is_stmt 1 view .LVU21
 626:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.eoi_reached = FALSE;
  68              		.loc 1 626 3 view .LVU22
 627:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->inheaders = 1;
  69              		.loc 1 627 3 view .LVU23
 625:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.has_multiple_scans = FALSE; /* "unknown" would be better */
  70              		.loc 1 625 36 is_stmt 0 view .LVU24
  71 0019 48C74020 		movq	$0, 32(%rax)
  71      00000000 
  72              		.loc 1 627 23 view .LVU25
  73 0021 C7402801 		movl	$1, 40(%rax)
  73      000000
 628:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Reset other modules */
 629:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->err->reset_error_mgr) ((j_common_ptr) cinfo);
  74              		.loc 1 629 3 is_stmt 1 view .LVU26
  75              		.loc 1 629 4 is_stmt 0 view .LVU27
  76 0028 488B07   		movq	(%rdi), %rax
  77              	.LVL5:
  78              		.loc 1 629 4 view .LVU28
  79 002b FF5020   		call	*32(%rax)
  80              	.LVL6:
 630:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->marker->reset_marker_reader) (cinfo);
  81              		.loc 1 630 3 is_stmt 1 view .LVU29
  82              		.loc 1 630 4 is_stmt 0 view .LVU30
  83 002e 488B8368 		movq	616(%rbx), %rax
  83      020000
  84 0035 4889DF   		movq	%rbx, %rdi
  85 0038 FF10     		call	*(%rax)
  86              	.LVL7:
 631:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Reset progression state -- would be cleaner if entropy decoder did this */
 632:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->coef_bits = NULL;
  87              		.loc 1 632 3 is_stmt 1 view .LVU31
  88              		.loc 1 632 20 is_stmt 0 view .LVU32
  89 003a 48C783C0 		movq	$0, 192(%rbx)
  89      00000000 
  89      000000
 633:fltk-1.3.4-1/jpeg/jdinput.c **** }
  90              		.loc 1 633 1 view .LVU33
  91 0045 5B       		popq	%rbx
  92              		.cfi_def_cfa_offset 8
  93              	.LVL8:
  94              		.loc 1 633 1 view .LVU34
  95 0046 C3       		ret
  96              		.cfi_endproc
  97              	.LFE58:
  99              		.section	.text.start_input_pass,"ax",@progbits
 100              		.p2align 4
 102              	start_input_pass:
 103              	.LVL9:
 104              	.LFB55:
 522:fltk-1.3.4-1/jpeg/jdinput.c ****   per_scan_setup(cinfo);
 105              		.loc 1 522 1 is_stmt 1 view -0
 106              		.cfi_startproc
 522:fltk-1.3.4-1/jpeg/jdinput.c ****   per_scan_setup(cinfo);
 107              		.loc 1 522 1 is_stmt 0 view .LVU36
 108 0000 F30F1EFA 		endbr64
 523:fltk-1.3.4-1/jpeg/jdinput.c ****   latch_quant_tables(cinfo);
 109              		.loc 1 523 3 is_stmt 1 view .LVU37
 110              	.LVL10:
 111              	.LBB10:
 112              	.LBI10:
 388:fltk-1.3.4-1/jpeg/jdinput.c **** /* Do computations that are needed before processing a JPEG scan */
 113              		.loc 1 388 1 view .LVU38
 114              	.LBB11:
 392:fltk-1.3.4-1/jpeg/jdinput.c ****   jpeg_component_info *compptr;
 115              		.loc 1 392 3 view .LVU39
 393:fltk-1.3.4-1/jpeg/jdinput.c ****   
 116              		.loc 1 393 3 view .LVU40
 395:fltk-1.3.4-1/jpeg/jdinput.c ****     
 117              		.loc 1 395 3 view .LVU41
 118              	.LBE11:
 119              	.LBE10:
 522:fltk-1.3.4-1/jpeg/jdinput.c ****   per_scan_setup(cinfo);
 120              		.loc 1 522 1 is_stmt 0 view .LVU42
 121 0004 4156     		pushq	%r14
 122              		.cfi_def_cfa_offset 16
 123              		.cfi_offset 14, -16
 124 0006 4155     		pushq	%r13
 125              		.cfi_def_cfa_offset 24
 126              		.cfi_offset 13, -24
 127 0008 4154     		pushq	%r12
 128              		.cfi_def_cfa_offset 32
 129              		.cfi_offset 12, -32
 130 000a 55       		pushq	%rbp
 131              		.cfi_def_cfa_offset 40
 132              		.cfi_offset 6, -40
 133 000b 53       		pushq	%rbx
 134              		.cfi_def_cfa_offset 48
 135              		.cfi_offset 3, -48
 136              	.LBB15:
 137              	.LBB12:
 395:fltk-1.3.4-1/jpeg/jdinput.c ****     
 138              		.loc 1 395 12 view .LVU43
 139 000c 8B87C001 		movl	448(%rdi), %eax
 139      0000
 140              	.LBE12:
 141              	.LBE15:
 522:fltk-1.3.4-1/jpeg/jdinput.c ****   per_scan_setup(cinfo);
 142              		.loc 1 522 1 view .LVU44
 143 0012 4889FB   		movq	%rdi, %rbx
 144              	.LBB16:
 145              	.LBB13:
 395:fltk-1.3.4-1/jpeg/jdinput.c ****     
 146              		.loc 1 395 6 view .LVU45
 147 0015 83F801   		cmpl	$1, %eax
 148 0018 0F847202 		je	.L31
 148      0000
 424:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->comps_in_scan,
 149              		.loc 1 424 5 is_stmt 1 view .LVU46
 424:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->comps_in_scan,
 150              		.loc 1 424 35 is_stmt 0 view .LVU47
 151 001e 83E801   		subl	$1, %eax
 424:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->comps_in_scan,
 152              		.loc 1 424 8 view .LVU48
 153 0021 83F803   		cmpl	$3, %eax
 154 0024 0F873602 		ja	.L32
 154      0000
 155              	.LVL11:
 156              	.L10:
 429:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width,
 157              		.loc 1 429 5 is_stmt 1 view .LVU49
 431:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_rows_in_scan = (JDIMENSION)
 158              		.loc 1 431 40 is_stmt 0 view .LVU50
 159 002a 8BB3A001 		movl	416(%rbx), %esi
 159      0000
 160 0030 0FAFB32C 		imull	556(%rbx), %esi
 160      020000
 430:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 161              		.loc 1 430 7 view .LVU51
 162 0037 8B7B30   		movl	48(%rbx), %edi
 163 003a 4863F6   		movslq	%esi, %rsi
 164 003d E8000000 		call	jdiv_round_up@PLT
 164      00
 165              	.LVL12:
 434:fltk-1.3.4-1/jpeg/jdinput.c ****     
 166              		.loc 1 434 40 view .LVU52
 167 0042 8BB3A401 		movl	420(%rbx), %esi
 167      0000
 433:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 168              		.loc 1 433 7 view .LVU53
 169 0048 8B7B34   		movl	52(%rbx), %edi
 434:fltk-1.3.4-1/jpeg/jdinput.c ****     
 170              		.loc 1 434 40 view .LVU54
 171 004b 0FAFB32C 		imull	556(%rbx), %esi
 171      020000
 429:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width,
 172              		.loc 1 429 27 view .LVU55
 173 0052 8983E801 		movl	%eax, 488(%rbx)
 173      0000
 432:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height,
 174              		.loc 1 432 5 is_stmt 1 view .LVU56
 433:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 175              		.loc 1 433 7 is_stmt 0 view .LVU57
 176 0058 4863F6   		movslq	%esi, %rsi
 177 005b E8000000 		call	jdiv_round_up@PLT
 177      00
 178              	.LVL13:
 436:fltk-1.3.4-1/jpeg/jdinput.c ****     
 179              		.loc 1 436 26 view .LVU58
 180 0060 C783F001 		movl	$0, 496(%rbx)
 180      00000000 
 180      0000
 432:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height,
 181              		.loc 1 432 31 view .LVU59
 182 006a 8983EC01 		movl	%eax, 492(%rbx)
 182      0000
 436:fltk-1.3.4-1/jpeg/jdinput.c ****     
 183              		.loc 1 436 5 is_stmt 1 view .LVU60
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 184              		.loc 1 438 5 view .LVU61
 185              	.LVL14:
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 186              		.loc 1 438 18 view .LVU62
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 187              		.loc 1 438 5 is_stmt 0 view .LVU63
 188 0070 8B83C001 		movl	448(%rbx), %eax
 188      0000
 189 0076 85C0     		testl	%eax, %eax
 190 0078 0F8EED00 		jle	.L11
 190      0000
 191 007e 31ED     		xorl	%ebp, %ebp
 192 0080 4C8D6304 		leaq	4(%rbx), %r12
 193              	.LVL15:
 194              		.p2align 4,,10
 195 0084 0F1F4000 		.p2align 3
 196              	.L17:
 439:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Sampling factors give # of blocks of component in each MCU */
 197              		.loc 1 439 15 view .LVU64
 198 0088 488B8CEB 		movq	456(%rbx,%rbp,8), %rcx
 198      C8010000 
 446:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 199              		.loc 1 446 45 view .LVU65
 200 0090 31D2     		xorl	%edx, %edx
 201 0092 4189EE   		movl	%ebp, %r14d
 202              	.LVL16:
 439:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Sampling factors give # of blocks of component in each MCU */
 203              		.loc 1 439 7 is_stmt 1 view .LVU66
 441:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_height = compptr->v_samp_factor;
 204              		.loc 1 441 7 view .LVU67
 441:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_height = compptr->v_samp_factor;
 205              		.loc 1 441 35 is_stmt 0 view .LVU68
 206 0095 8B7108   		movl	8(%rcx), %esi
 444:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 207              		.loc 1 444 54 view .LVU69
 208 0098 8B4124   		movl	36(%rcx), %eax
 442:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_blocks = compptr->MCU_width * compptr->MCU_height;
 209              		.loc 1 442 36 view .LVU70
 210 009b 8B790C   		movl	12(%rcx), %edi
 444:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 211              		.loc 1 444 54 view .LVU71
 212 009e 0FAFC6   		imull	%esi, %eax
 443:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 213              		.loc 1 443 48 view .LVU72
 214 00a1 4189F5   		movl	%esi, %r13d
 441:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_height = compptr->v_samp_factor;
 215              		.loc 1 441 26 view .LVU73
 216 00a4 897138   		movl	%esi, 56(%rcx)
 442:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_blocks = compptr->MCU_width * compptr->MCU_height;
 217              		.loc 1 442 7 is_stmt 1 view .LVU74
 443:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 218              		.loc 1 443 48 is_stmt 0 view .LVU75
 219 00a7 440FAFEF 		imull	%edi, %r13d
 442:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_blocks = compptr->MCU_width * compptr->MCU_height;
 220              		.loc 1 442 27 view .LVU76
 221 00ab 89793C   		movl	%edi, 60(%rcx)
 443:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 222              		.loc 1 443 7 is_stmt 1 view .LVU77
 444:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 223              		.loc 1 444 33 is_stmt 0 view .LVU78
 224 00ae 894144   		movl	%eax, 68(%rcx)
 446:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 225              		.loc 1 446 45 view .LVU79
 226 00b1 8B411C   		movl	28(%rcx), %eax
 443:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->MCU_sample_width = compptr->MCU_width * compptr->DCT_h_scaled_size;
 227              		.loc 1 443 27 view .LVU80
 228 00b4 44896940 		movl	%r13d, 64(%rcx)
 444:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Figure number of non-dummy blocks in last MCU column & row */
 229              		.loc 1 444 7 is_stmt 1 view .LVU81
 446:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 230              		.loc 1 446 7 view .LVU82
 446:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_width;
 231              		.loc 1 446 45 is_stmt 0 view .LVU83
 232 00b8 F7F6     		divl	%esi
 233              	.LVL17:
 447:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->last_col_width = tmp;
 234              		.loc 1 447 7 is_stmt 1 view .LVU84
 449:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 235              		.loc 1 449 46 is_stmt 0 view .LVU85
 236 00ba 8B4120   		movl	32(%rcx), %eax
 447:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->last_col_width = tmp;
 237              		.loc 1 447 25 view .LVU86
 238 00bd 85D2     		testl	%edx, %edx
 239 00bf 0F44D6   		cmove	%esi, %edx
 240              	.LVL18:
 448:fltk-1.3.4-1/jpeg/jdinput.c ****       tmp = (int) (compptr->height_in_blocks % compptr->MCU_height);
 241              		.loc 1 448 7 is_stmt 1 view .LVU87
 448:fltk-1.3.4-1/jpeg/jdinput.c ****       tmp = (int) (compptr->height_in_blocks % compptr->MCU_height);
 242              		.loc 1 448 31 is_stmt 0 view .LVU88
 243 00c2 895148   		movl	%edx, 72(%rcx)
 449:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 244              		.loc 1 449 7 is_stmt 1 view .LVU89
 449:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 245              		.loc 1 449 46 is_stmt 0 view .LVU90
 246 00c5 31D2     		xorl	%edx, %edx
 247              	.LVL19:
 449:fltk-1.3.4-1/jpeg/jdinput.c ****       if (tmp == 0) tmp = compptr->MCU_height;
 248              		.loc 1 449 46 view .LVU91
 249 00c7 F7F7     		divl	%edi
 250              	.LVL20:
 450:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->last_row_height = tmp;
 251              		.loc 1 450 7 is_stmt 1 view .LVU92
 450:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr->last_row_height = tmp;
 252              		.loc 1 450 25 is_stmt 0 view .LVU93
 253 00c9 85D2     		testl	%edx, %edx
 254 00cb 0F44D7   		cmove	%edi, %edx
 255              	.LVL21:
 451:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Prepare array describing MCU composition */
 256              		.loc 1 451 7 is_stmt 1 view .LVU94
 451:fltk-1.3.4-1/jpeg/jdinput.c ****       /* Prepare array describing MCU composition */
 257              		.loc 1 451 32 is_stmt 0 view .LVU95
 258 00ce 89514C   		movl	%edx, 76(%rcx)
 453:fltk-1.3.4-1/jpeg/jdinput.c ****       if (cinfo->blocks_in_MCU + mcublks > D_MAX_BLOCKS_IN_MCU)
 259              		.loc 1 453 7 is_stmt 1 view .LVU96
 260              	.LVL22:
 454:fltk-1.3.4-1/jpeg/jdinput.c **** 	ERREXIT(cinfo, JERR_BAD_MCU_SIZE);
 261              		.loc 1 454 7 view .LVU97
 454:fltk-1.3.4-1/jpeg/jdinput.c **** 	ERREXIT(cinfo, JERR_BAD_MCU_SIZE);
 262              		.loc 1 454 32 is_stmt 0 view .LVU98
 263 00d1 8B83F001 		movl	496(%rbx), %eax
 263      0000
 264 00d7 4401E8   		addl	%r13d, %eax
 454:fltk-1.3.4-1/jpeg/jdinput.c **** 	ERREXIT(cinfo, JERR_BAD_MCU_SIZE);
 265              		.loc 1 454 10 view .LVU99
 266 00da 83F80A   		cmpl	$10, %eax
 267 00dd 7E12     		jle	.L14
 455:fltk-1.3.4-1/jpeg/jdinput.c ****       while (mcublks-- > 0) {
 268              		.loc 1 455 2 is_stmt 1 view .LVU100
 269 00df 488B03   		movq	(%rbx), %rax
 270 00e2 4889DF   		movq	%rbx, %rdi
 271 00e5 C740280E 		movl	$14, 40(%rax)
 271      000000
 272 00ec 488B03   		movq	(%rbx), %rax
 273 00ef FF10     		call	*(%rax)
 274              	.LVL23:
 275              	.L14:
 456:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 276              		.loc 1 456 13 view .LVU101
 456:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 277              		.loc 1 456 21 is_stmt 0 view .LVU102
 278 00f1 418D4DFF 		leal	-1(%r13), %ecx
 279              	.LVL24:
 456:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 280              		.loc 1 456 13 view .LVU103
 281 00f5 4585ED   		testl	%r13d, %r13d
 282 00f8 7E38     		jle	.L15
 283 00fa 4863BBF0 		movslq	496(%rbx), %rdi
 283      010000
 284 0101 89CA     		movl	%ecx, %edx
 285 0103 4801FA   		addq	%rdi, %rdx
 286 0106 4889FE   		movq	%rdi, %rsi
 287 0109 488D04BB 		leaq	(%rbx,%rdi,4), %rax
 288 010d 498D1494 		leaq	(%r12,%rdx,4), %rdx
 289              	.LVL25:
 290              		.p2align 4,,10
 291 0111 0F1F8000 		.p2align 3
 291      000000
 292              	.L16:
 457:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 293              		.loc 1 457 2 is_stmt 1 view .LVU104
 457:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 294              		.loc 1 457 48 is_stmt 0 view .LVU105
 295 0118 4489B0F4 		movl	%r14d, 500(%rax)
 295      010000
 456:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 296              		.loc 1 456 13 is_stmt 1 view .LVU106
 297 011f 4883C004 		addq	$4, %rax
 298 0123 4839C2   		cmpq	%rax, %rdx
 299 0126 75F0     		jne	.L16
 456:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->MCU_membership[cinfo->blocks_in_MCU++] = ci;
 300              		.loc 1 456 13 is_stmt 0 view .LVU107
 301 0128 8D440E01 		leal	1(%rsi,%rcx), %eax
 302 012c 8983F001 		movl	%eax, 496(%rbx)
 302      0000
 303              	.L15:
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 304              		.loc 1 438 45 is_stmt 1 view .LVU108
 305              	.LVL26:
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 306              		.loc 1 438 18 view .LVU109
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 307              		.loc 1 438 28 is_stmt 0 view .LVU110
 308 0132 8B83C001 		movl	448(%rbx), %eax
 308      0000
 309 0138 4883C501 		addq	$1, %rbp
 310              	.LVL27:
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 311              		.loc 1 438 5 view .LVU111
 312 013c 39E8     		cmpl	%ebp, %eax
 313 013e 0F8F44FF 		jg	.L17
 313      FFFF
 314              	.LVL28:
 315              	.L18:
 438:fltk-1.3.4-1/jpeg/jdinput.c ****       compptr = cinfo->cur_comp_info[ci];
 316              		.loc 1 438 5 view .LVU112
 317              	.LBE13:
 318              	.LBE16:
 319              	.LBB17:
 320              	.LBB18:
 493:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[ci];
 321              		.loc 1 493 16 is_stmt 1 view .LVU113
 493:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[ci];
 322              		.loc 1 493 3 is_stmt 0 view .LVU114
 323 0144 31ED     		xorl	%ebp, %ebp
 324 0146 85C0     		testl	%eax, %eax
 325 0148 7E21     		jle	.L11
 326              	.LVL29:
 327 014a 660F1F44 		.p2align 4,,10
 327      0000
 328              		.p2align 3
 329              	.L9:
 494:fltk-1.3.4-1/jpeg/jdinput.c ****     /* No work if we already saved Q-table for this component */
 330              		.loc 1 494 5 is_stmt 1 view .LVU115
 494:fltk-1.3.4-1/jpeg/jdinput.c ****     /* No work if we already saved Q-table for this component */
 331              		.loc 1 494 13 is_stmt 0 view .LVU116
 332 0150 4C8BACEB 		movq	456(%rbx,%rbp,8), %r13
 332      C8010000 
 333              	.LVL30:
 496:fltk-1.3.4-1/jpeg/jdinput.c ****       continue;
 334              		.loc 1 496 5 is_stmt 1 view .LVU117
 496:fltk-1.3.4-1/jpeg/jdinput.c ****       continue;
 335              		.loc 1 496 8 is_stmt 0 view .LVU118
 336 0158 49837D50 		cmpq	$0, 80(%r13)
 336      00
 337 015d 7449     		je	.L33
 338              	.L19:
 493:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[ci];
 339              		.loc 1 493 43 is_stmt 1 view .LVU119
 340              	.LVL31:
 493:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[ci];
 341              		.loc 1 493 16 view .LVU120
 342 015f 4883C501 		addq	$1, %rbp
 343              	.LVL32:
 493:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[ci];
 344              		.loc 1 493 3 is_stmt 0 view .LVU121
 345 0163 39ABC001 		cmpl	%ebp, 448(%rbx)
 345      0000
 346 0169 7FE5     		jg	.L9
 347              	.LVL33:
 348              	.L11:
 493:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr = cinfo->cur_comp_info[ci];
 349              		.loc 1 493 3 view .LVU122
 350              	.LBE18:
 351              	.LBE17:
 525:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->coef->start_input_pass) (cinfo);
 352              		.loc 1 525 3 is_stmt 1 view .LVU123
 525:fltk-1.3.4-1/jpeg/jdinput.c ****   (*cinfo->coef->start_input_pass) (cinfo);
 353              		.loc 1 525 4 is_stmt 0 view .LVU124
 354 016b 488B8370 		movq	624(%rbx), %rax
 354      020000
 355 0172 4889DF   		movq	%rbx, %rdi
 356 0175 FF10     		call	*(%rax)
 357              	.LVL34:
 526:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->inputctl->consume_input = cinfo->coef->consume_data;
 358              		.loc 1 526 3 is_stmt 1 view .LVU125
 526:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->inputctl->consume_input = cinfo->coef->consume_data;
 359              		.loc 1 526 4 is_stmt 0 view .LVU126
 360 0177 488B8350 		movq	592(%rbx), %rax
 360      020000
 361 017e 4889DF   		movq	%rbx, %rdi
 362 0181 FF10     		call	*(%rax)
 363              	.LVL35:
 527:fltk-1.3.4-1/jpeg/jdinput.c **** }
 364              		.loc 1 527 3 is_stmt 1 view .LVU127
 527:fltk-1.3.4-1/jpeg/jdinput.c **** }
 365              		.loc 1 527 47 is_stmt 0 view .LVU128
 366 0183 488B9350 		movq	592(%rbx), %rdx
 366      020000
 527:fltk-1.3.4-1/jpeg/jdinput.c **** }
 367              		.loc 1 527 8 view .LVU129
 368 018a 488B8360 		movq	608(%rbx), %rax
 368      020000
 527:fltk-1.3.4-1/jpeg/jdinput.c **** }
 369              		.loc 1 527 47 view .LVU130
 370 0191 488B5208 		movq	8(%rdx), %rdx
 527:fltk-1.3.4-1/jpeg/jdinput.c **** }
 371              		.loc 1 527 34 view .LVU131
 372 0195 488910   		movq	%rdx, (%rax)
 528:fltk-1.3.4-1/jpeg/jdinput.c **** 
 373              		.loc 1 528 1 view .LVU132
 374 0198 5B       		popq	%rbx
 375              		.cfi_remember_state
 376              		.cfi_def_cfa_offset 40
 377              	.LVL36:
 528:fltk-1.3.4-1/jpeg/jdinput.c **** 
 378              		.loc 1 528 1 view .LVU133
 379 0199 5D       		popq	%rbp
 380              		.cfi_def_cfa_offset 32
 381 019a 415C     		popq	%r12
 382              		.cfi_def_cfa_offset 24
 383 019c 415D     		popq	%r13
 384              		.cfi_def_cfa_offset 16
 385 019e 415E     		popq	%r14
 386              		.cfi_def_cfa_offset 8
 387 01a0 C3       		ret
 388              	.LVL37:
 389              		.p2align 4,,10
 390 01a1 0F1F8000 		.p2align 3
 390      000000
 391              	.L33:
 392              		.cfi_restore_state
 393              	.LBB22:
 394              	.LBB21:
 499:fltk-1.3.4-1/jpeg/jdinput.c ****     if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
 395              		.loc 1 499 5 is_stmt 1 view .LVU134
 499:fltk-1.3.4-1/jpeg/jdinput.c ****     if (qtblno < 0 || qtblno >= NUM_QUANT_TBLS ||
 396              		.loc 1 499 12 is_stmt 0 view .LVU135
 397 01a8 418B4510 		movl	16(%r13), %eax
 398              	.LVL38:
 500:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->quant_tbl_ptrs[qtblno] == NULL)
 399              		.loc 1 500 5 is_stmt 1 view .LVU136
 400 01ac 4C63E0   		movslq	%eax, %r12
 500:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->quant_tbl_ptrs[qtblno] == NULL)
 401              		.loc 1 500 8 is_stmt 0 view .LVU137
 402 01af 83F803   		cmpl	$3, %eax
 403 01b2 0F878800 		ja	.L20
 403      0000
 500:fltk-1.3.4-1/jpeg/jdinput.c **** 	cinfo->quant_tbl_ptrs[qtblno] == NULL)
 404              		.loc 1 500 48 view .LVU138
 405 01b8 4A83BCE3 		cmpq	$0, 200(%rbx,%r12,8)
 405      C8000000 
 405      00
 406 01c1 747D     		je	.L20
 407              	.LVL39:
 408              	.L21:
 504:fltk-1.3.4-1/jpeg/jdinput.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 409              		.loc 1 504 5 is_stmt 1 view .LVU139
 505:fltk-1.3.4-1/jpeg/jdinput.c **** 				  SIZEOF(JQUANT_TBL));
 410              		.loc 1 505 8 is_stmt 0 view .LVU140
 411 01c3 488B4308 		movq	8(%rbx), %rax
 412 01c7 BA840000 		movl	$132, %edx
 412      00
 413 01cc BE010000 		movl	$1, %esi
 413      00
 414 01d1 4889DF   		movq	%rbx, %rdi
 415 01d4 FF10     		call	*(%rax)
 416              	.LVL40:
 507:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->quant_table = qtbl;
 417              		.loc 1 507 5 is_stmt 1 view .LVU141
 418              	.LBB19:
 419              	.LBI19:
 420              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 421              		.loc 2 31 1 view .LVU142
 422              	.LBB20:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 423              		.loc 2 34 3 view .LVU143
 424              		.loc 2 34 10 is_stmt 0 view .LVU144
 425 01d6 4A8B94E3 		movq	200(%rbx,%r12,8), %rdx
 425      C8000000 
 426 01de F30F6F02 		movdqu	(%rdx), %xmm0
 427 01e2 0F1100   		movups	%xmm0, (%rax)
 428              	.LVL41:
 429              		.loc 2 34 10 view .LVU145
 430 01e5 F30F6F4A 		movdqu	16(%rdx), %xmm1
 430      10
 431 01ea 0F114810 		movups	%xmm1, 16(%rax)
 432 01ee F30F6F52 		movdqu	32(%rdx), %xmm2
 432      20
 433 01f3 0F115020 		movups	%xmm2, 32(%rax)
 434 01f7 F30F6F5A 		movdqu	48(%rdx), %xmm3
 434      30
 435 01fc 0F115830 		movups	%xmm3, 48(%rax)
 436 0200 F30F6F62 		movdqu	64(%rdx), %xmm4
 436      40
 437 0205 0F116040 		movups	%xmm4, 64(%rax)
 438 0209 F30F6F6A 		movdqu	80(%rdx), %xmm5
 438      50
 439 020e 0F116850 		movups	%xmm5, 80(%rax)
 440 0212 F30F6F72 		movdqu	96(%rdx), %xmm6
 440      60
 441 0217 0F117060 		movups	%xmm6, 96(%rax)
 442 021b F30F6F7A 		movdqu	112(%rdx), %xmm7
 442      70
 443 0220 0F117870 		movups	%xmm7, 112(%rax)
 444 0224 8B928000 		movl	128(%rdx), %edx
 444      0000
 445 022a 89908000 		movl	%edx, 128(%rax)
 445      0000
 446              	.LVL42:
 447              		.loc 2 34 10 view .LVU146
 448              	.LBE20:
 449              	.LBE19:
 508:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 450              		.loc 1 508 5 is_stmt 1 view .LVU147
 508:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 451              		.loc 1 508 26 is_stmt 0 view .LVU148
 452 0230 49894550 		movq	%rax, 80(%r13)
 453 0234 E926FFFF 		jmp	.L19
 453      FF
 454              	.LVL43:
 455 0239 0F1F8000 		.p2align 4,,10
 455      000000
 456              		.p2align 3
 457              	.L20:
 502:fltk-1.3.4-1/jpeg/jdinput.c ****     /* OK, save away the quantization table */
 458              		.loc 1 502 7 is_stmt 1 view .LVU149
 459 0240 488B13   		movq	(%rbx), %rdx
 460 0243 4889DF   		movq	%rbx, %rdi
 461 0246 C7422836 		movl	$54, 40(%rdx)
 461      000000
 462 024d 488B13   		movq	(%rbx), %rdx
 463 0250 89422C   		movl	%eax, 44(%rdx)
 464 0253 488B03   		movq	(%rbx), %rax
 465              	.LVL44:
 502:fltk-1.3.4-1/jpeg/jdinput.c ****     /* OK, save away the quantization table */
 466              		.loc 1 502 7 is_stmt 0 view .LVU150
 467 0256 FF10     		call	*(%rax)
 468              	.LVL45:
 502:fltk-1.3.4-1/jpeg/jdinput.c ****     /* OK, save away the quantization table */
 469              		.loc 1 502 7 view .LVU151
 470 0258 E966FFFF 		jmp	.L21
 470      FF
 471              	.LVL46:
 472 025d 0F1F00   		.p2align 4,,10
 473              		.p2align 3
 474              	.L32:
 502:fltk-1.3.4-1/jpeg/jdinput.c ****     /* OK, save away the quantization table */
 475              		.loc 1 502 7 view .LVU152
 476              	.LBE21:
 477              	.LBE22:
 478              	.LBB23:
 479              	.LBB14:
 425:fltk-1.3.4-1/jpeg/jdinput.c **** 	       MAX_COMPS_IN_SCAN);
 480              		.loc 1 425 7 is_stmt 1 view .LVU153
 481 0260 488B07   		movq	(%rdi), %rax
 482 0263 C740281B 		movl	$27, 40(%rax)
 482      000000
 483 026a 488B07   		movq	(%rdi), %rax
 484 026d 8B97C001 		movl	448(%rdi), %edx
 484      0000
 485 0273 89502C   		movl	%edx, 44(%rax)
 486 0276 488B07   		movq	(%rdi), %rax
 487 0279 C7403004 		movl	$4, 48(%rax)
 487      000000
 488 0280 488B07   		movq	(%rdi), %rax
 489 0283 FF10     		call	*(%rax)
 490              	.LVL47:
 491 0285 E9A0FDFF 		jmp	.L10
 491      FF
 492 028a 660F1F44 		.p2align 4,,10
 492      0000
 493              		.p2align 3
 494              	.L31:
 398:fltk-1.3.4-1/jpeg/jdinput.c ****     
 495              		.loc 1 398 5 view .LVU154
 398:fltk-1.3.4-1/jpeg/jdinput.c ****     
 496              		.loc 1 398 13 is_stmt 0 view .LVU155
 497 0290 488B8FC8 		movq	456(%rdi), %rcx
 497      010000
 498              	.LVL48:
 401:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_rows_in_scan = compptr->height_in_blocks;
 499              		.loc 1 401 5 is_stmt 1 view .LVU156
 405:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_height = 1;
 500              		.loc 1 405 24 is_stmt 0 view .LVU157
 501 0297 48BE0100 		movabsq	$4294967297, %rsi
 501      00000100 
 501      0000
 401:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_rows_in_scan = compptr->height_in_blocks;
 502              		.loc 1 401 34 view .LVU158
 503 02a1 8B411C   		movl	28(%rcx), %eax
 401:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_rows_in_scan = compptr->height_in_blocks;
 504              		.loc 1 401 25 view .LVU159
 505 02a4 8987E801 		movl	%eax, 488(%rdi)
 505      0000
 402:fltk-1.3.4-1/jpeg/jdinput.c ****     
 506              		.loc 1 402 5 is_stmt 1 view .LVU160
 402:fltk-1.3.4-1/jpeg/jdinput.c ****     
 507              		.loc 1 402 38 is_stmt 0 view .LVU161
 508 02aa 8B4120   		movl	32(%rcx), %eax
 402:fltk-1.3.4-1/jpeg/jdinput.c ****     
 509              		.loc 1 402 29 view .LVU162
 510 02ad 8987EC01 		movl	%eax, 492(%rdi)
 510      0000
 405:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_height = 1;
 511              		.loc 1 405 5 is_stmt 1 view .LVU163
 406:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_blocks = 1;
 512              		.loc 1 406 5 view .LVU164
 407:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_sample_width = compptr->DCT_h_scaled_size;
 513              		.loc 1 407 5 view .LVU165
 408:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->last_col_width = 1;
 514              		.loc 1 408 31 is_stmt 0 view .LVU166
 515 02b3 8B5124   		movl	36(%rcx), %edx
 405:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_height = 1;
 516              		.loc 1 405 24 view .LVU167
 517 02b6 48897138 		movq	%rsi, 56(%rcx)
 413:fltk-1.3.4-1/jpeg/jdinput.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 518              		.loc 1 413 53 view .LVU168
 519 02ba 8B710C   		movl	12(%rcx), %esi
 408:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->last_col_width = 1;
 520              		.loc 1 408 31 view .LVU169
 521 02bd 895144   		movl	%edx, 68(%rcx)
 413:fltk-1.3.4-1/jpeg/jdinput.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 522              		.loc 1 413 44 view .LVU170
 523 02c0 31D2     		xorl	%edx, %edx
 524 02c2 F7F6     		divl	%esi
 407:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->MCU_sample_width = compptr->DCT_h_scaled_size;
 525              		.loc 1 407 25 view .LVU171
 526 02c4 C7414001 		movl	$1, 64(%rcx)
 526      000000
 408:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->last_col_width = 1;
 527              		.loc 1 408 5 is_stmt 1 view .LVU172
 409:fltk-1.3.4-1/jpeg/jdinput.c ****     /* For noninterleaved scans, it is convenient to define last_row_height
 528              		.loc 1 409 5 view .LVU173
 409:fltk-1.3.4-1/jpeg/jdinput.c ****     /* For noninterleaved scans, it is convenient to define last_row_height
 529              		.loc 1 409 29 is_stmt 0 view .LVU174
 530 02cb C7414801 		movl	$1, 72(%rcx)
 530      000000
 413:fltk-1.3.4-1/jpeg/jdinput.c ****     if (tmp == 0) tmp = compptr->v_samp_factor;
 531              		.loc 1 413 5 is_stmt 1 view .LVU175
 532              	.LVL49:
 414:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->last_row_height = tmp;
 533              		.loc 1 414 5 view .LVU176
 414:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->last_row_height = tmp;
 534              		.loc 1 414 23 is_stmt 0 view .LVU177
 535 02d2 85D2     		testl	%edx, %edx
 536 02d4 0F44D6   		cmove	%esi, %edx
 537              	.LVL50:
 415:fltk-1.3.4-1/jpeg/jdinput.c ****     
 538              		.loc 1 415 5 is_stmt 1 view .LVU178
 415:fltk-1.3.4-1/jpeg/jdinput.c ****     
 539              		.loc 1 415 30 is_stmt 0 view .LVU179
 540 02d7 89514C   		movl	%edx, 76(%rcx)
 418:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_membership[0] = 0;
 541              		.loc 1 418 5 is_stmt 1 view .LVU180
 419:fltk-1.3.4-1/jpeg/jdinput.c ****     
 542              		.loc 1 419 5 view .LVU181
 543 02da 8B87C001 		movl	448(%rdi), %eax
 543      0000
 418:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->MCU_membership[0] = 0;
 544              		.loc 1 418 26 is_stmt 0 view .LVU182
 545 02e0 48C787F0 		movq	$1, 496(%rdi)
 545      01000001 
 545      000000
 546 02eb E954FEFF 		jmp	.L18
 546      FF
 547              	.LBE14:
 548              	.LBE23:
 549              		.cfi_endproc
 550              	.LFE55:
 552              		.section	.text.consume_markers,"ax",@progbits
 553              		.p2align 4
 555              	consume_markers:
 556              	.LVL51:
 557              	.LFB57:
 561:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
 558              		.loc 1 561 1 is_stmt 1 view -0
 559              		.cfi_startproc
 561:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
 560              		.loc 1 561 1 is_stmt 0 view .LVU184
 561 0000 F30F1EFA 		endbr64
 562:fltk-1.3.4-1/jpeg/jdinput.c ****   int val;
 562              		.loc 1 562 3 is_stmt 1 view .LVU185
 561:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
 563              		.loc 1 561 1 is_stmt 0 view .LVU186
 564 0004 4157     		pushq	%r15
 565              		.cfi_def_cfa_offset 16
 566              		.cfi_offset 15, -16
 567 0006 4156     		pushq	%r14
 568              		.cfi_def_cfa_offset 24
 569              		.cfi_offset 14, -24
 570 0008 4155     		pushq	%r13
 571              		.cfi_def_cfa_offset 32
 572              		.cfi_offset 13, -32
 573              	.LBB26:
 574              	.LBB27:
 229:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->max_v_samp_factor = 1;
 575              		.loc 1 229 28 view .LVU187
 576 000a 49BD0100 		movabsq	$4294967297, %r13
 576      00000100 
 576      0000
 577              	.LBE27:
 578              	.LBE26:
 561:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl = (my_inputctl_ptr) cinfo->inputctl;
 579              		.loc 1 561 1 view .LVU188
 580 0014 4154     		pushq	%r12
 581              		.cfi_def_cfa_offset 40
 582              		.cfi_offset 12, -40
 583 0016 4C8D2500 		leaq	.L57(%rip), %r12
 583      000000
 584 001d 55       		pushq	%rbp
 585              		.cfi_def_cfa_offset 48
 586              		.cfi_offset 6, -48
 587 001e 4889FD   		movq	%rdi, %rbp
 588 0021 53       		pushq	%rbx
 589              		.cfi_def_cfa_offset 56
 590              		.cfi_offset 3, -56
 591 0022 4883EC18 		subq	$24, %rsp
 592              		.cfi_def_cfa_offset 80
 562:fltk-1.3.4-1/jpeg/jdinput.c ****   int val;
 593              		.loc 1 562 19 view .LVU189
 594 0026 488B9F60 		movq	608(%rdi), %rbx
 594      020000
 595              	.LVL52:
 563:fltk-1.3.4-1/jpeg/jdinput.c **** 
 596              		.loc 1 563 3 is_stmt 1 view .LVU190
 565:fltk-1.3.4-1/jpeg/jdinput.c ****     return JPEG_REACHED_EOI;
 597              		.loc 1 565 3 view .LVU191
 565:fltk-1.3.4-1/jpeg/jdinput.c ****     return JPEG_REACHED_EOI;
 598              		.loc 1 565 6 is_stmt 0 view .LVU192
 599 002d 448B7B24 		movl	36(%rbx), %r15d
 600 0031 4585FF   		testl	%r15d, %r15d
 601 0034 756A     		jne	.L83
 602              	.LVL53:
 603              	.L35:
 568:fltk-1.3.4-1/jpeg/jdinput.c ****     val = (*cinfo->marker->read_markers) (cinfo);
 604              		.loc 1 568 3 is_stmt 1 view .LVU193
 569:fltk-1.3.4-1/jpeg/jdinput.c **** 
 605              		.loc 1 569 5 view .LVU194
 569:fltk-1.3.4-1/jpeg/jdinput.c **** 
 606              		.loc 1 569 12 is_stmt 0 view .LVU195
 607 0036 488B8568 		movq	616(%rbp), %rax
 607      020000
 608 003d 4889EF   		movq	%rbp, %rdi
 609 0040 FF5008   		call	*8(%rax)
 610              	.LVL54:
 611 0043 4189C7   		movl	%eax, %r15d
 612              	.LVL55:
 571:fltk-1.3.4-1/jpeg/jdinput.c ****     case JPEG_REACHED_SOS:	/* Found SOS */
 613              		.loc 1 571 5 is_stmt 1 view .LVU196
 614 0046 83F801   		cmpl	$1, %eax
 615 0049 7465     		je	.L37
 616 004b 83F802   		cmpl	$2, %eax
 617 004e 7534     		jne	.L34
 594:fltk-1.3.4-1/jpeg/jdinput.c ****       if (inputctl->inheaders) { /* Tables-only datastream, apparently */
 618              		.loc 1 594 7 view .LVU197
 595:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->marker->saw_SOF)
 619              		.loc 1 595 10 is_stmt 0 view .LVU198
 620 0050 8B5328   		movl	40(%rbx), %edx
 594:fltk-1.3.4-1/jpeg/jdinput.c ****       if (inputctl->inheaders) { /* Tables-only datastream, apparently */
 621              		.loc 1 594 33 view .LVU199
 622 0053 C7432401 		movl	$1, 36(%rbx)
 622      000000
 595:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->marker->saw_SOF)
 623              		.loc 1 595 7 is_stmt 1 view .LVU200
 595:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->marker->saw_SOF)
 624              		.loc 1 595 10 is_stmt 0 view .LVU201
 625 005a 85D2     		testl	%edx, %edx
 626 005c 0F84BE00 		je	.L82
 626      0000
 596:fltk-1.3.4-1/jpeg/jdinput.c **** 	  ERREXIT(cinfo, JERR_SOF_NO_SOS);
 627              		.loc 1 596 2 is_stmt 1 view .LVU202
 596:fltk-1.3.4-1/jpeg/jdinput.c **** 	  ERREXIT(cinfo, JERR_SOF_NO_SOS);
 628              		.loc 1 596 19 is_stmt 0 view .LVU203
 629 0062 488B8568 		movq	616(%rbp), %rax
 629      020000
 630              	.LVL56:
 596:fltk-1.3.4-1/jpeg/jdinput.c **** 	  ERREXIT(cinfo, JERR_SOF_NO_SOS);
 631              		.loc 1 596 5 view .LVU204
 632 0069 8B401C   		movl	28(%rax), %eax
 633 006c 85C0     		testl	%eax, %eax
 634 006e 7430     		je	.L83
 597:fltk-1.3.4-1/jpeg/jdinput.c ****       } else {
 635              		.loc 1 597 4 is_stmt 1 view .LVU205
 636 0070 488B4500 		movq	0(%rbp), %rax
 637 0074 4889EF   		movq	%rbp, %rdi
 638 0077 C740283E 		movl	$62, 40(%rax)
 638      000000
 639 007e 488B4500 		movq	0(%rbp), %rax
 640 0082 FF10     		call	*(%rax)
 641              	.LVL57:
 642              	.L34:
 612:fltk-1.3.4-1/jpeg/jdinput.c **** 
 643              		.loc 1 612 1 is_stmt 0 view .LVU206
 644 0084 4883C418 		addq	$24, %rsp
 645              		.cfi_remember_state
 646              		.cfi_def_cfa_offset 56
 647 0088 4489F8   		movl	%r15d, %eax
 648 008b 5B       		popq	%rbx
 649              		.cfi_def_cfa_offset 48
 650              	.LVL58:
 612:fltk-1.3.4-1/jpeg/jdinput.c **** 
 651              		.loc 1 612 1 view .LVU207
 652 008c 5D       		popq	%rbp
 653              		.cfi_def_cfa_offset 40
 654              	.LVL59:
 612:fltk-1.3.4-1/jpeg/jdinput.c **** 
 655              		.loc 1 612 1 view .LVU208
 656 008d 415C     		popq	%r12
 657              		.cfi_def_cfa_offset 32
 658 008f 415D     		popq	%r13
 659              		.cfi_def_cfa_offset 24
 660 0091 415E     		popq	%r14
 661              		.cfi_def_cfa_offset 16
 662 0093 415F     		popq	%r15
 663              		.cfi_def_cfa_offset 8
 664 0095 C3       		ret
 665              	.LVL60:
 666 0096 662E0F1F 		.p2align 4,,10
 666      84000000 
 666      0000
 667              		.p2align 3
 668              	.L83:
 669              		.cfi_restore_state
 566:fltk-1.3.4-1/jpeg/jdinput.c **** 
 670              		.loc 1 566 12 view .LVU209
 671 00a0 41BF0200 		movl	$2, %r15d
 671      0000
 672 00a6 EBDC     		jmp	.L34
 673              	.LVL61:
 674 00a8 0F1F8400 		.p2align 4,,10
 674      00000000 
 675              		.p2align 3
 676              	.L37:
 573:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (inputctl->inheaders == 1)
 677              		.loc 1 573 7 is_stmt 1 view .LVU210
 573:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (inputctl->inheaders == 1)
 678              		.loc 1 573 19 is_stmt 0 view .LVU211
 679 00b0 8B7328   		movl	40(%rbx), %esi
 573:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (inputctl->inheaders == 1)
 680              		.loc 1 573 10 view .LVU212
 681 00b3 85F6     		testl	%esi, %esi
 682 00b5 7429     		je	.L39
 574:fltk-1.3.4-1/jpeg/jdinput.c **** 	  initial_setup(cinfo);
 683              		.loc 1 574 2 is_stmt 1 view .LVU213
 574:fltk-1.3.4-1/jpeg/jdinput.c **** 	  initial_setup(cinfo);
 684              		.loc 1 574 5 is_stmt 0 view .LVU214
 685 00b7 83FE01   		cmpl	$1, %esi
 686 00ba 0F848000 		je	.L90
 686      0000
 687              	.LVL62:
 688              	.L40:
 576:fltk-1.3.4-1/jpeg/jdinput.c **** 	  inputctl->inheaders = 2;
 689              		.loc 1 576 2 is_stmt 1 view .LVU215
 576:fltk-1.3.4-1/jpeg/jdinput.c **** 	  inputctl->inheaders = 2;
 690              		.loc 1 576 5 is_stmt 0 view .LVU216
 691 00c0 8BBDC001 		movl	448(%rbp), %edi
 691      0000
 692 00c6 85FF     		testl	%edi, %edi
 693 00c8 0F85D705 		jne	.L79
 693      0000
 577:fltk-1.3.4-1/jpeg/jdinput.c **** 	  break;
 694              		.loc 1 577 4 is_stmt 1 view .LVU217
 577:fltk-1.3.4-1/jpeg/jdinput.c **** 	  break;
 695              		.loc 1 577 24 is_stmt 0 view .LVU218
 696 00ce C7432802 		movl	$2, 40(%rbx)
 696      000000
 578:fltk-1.3.4-1/jpeg/jdinput.c **** 	}
 697              		.loc 1 578 4 is_stmt 1 view .LVU219
 698 00d5 E95CFFFF 		jmp	.L35
 698      FF
 699              	.LVL63:
 700 00da 660F1F44 		.p2align 4,,10
 700      0000
 701              		.p2align 3
 702              	.L39:
 586:fltk-1.3.4-1/jpeg/jdinput.c **** 	  ERREXIT(cinfo, JERR_EOI_EXPECTED); /* Oops, I wasn't expecting this! */
 703              		.loc 1 586 2 view .LVU220
 586:fltk-1.3.4-1/jpeg/jdinput.c **** 	  ERREXIT(cinfo, JERR_EOI_EXPECTED); /* Oops, I wasn't expecting this! */
 704              		.loc 1 586 5 is_stmt 0 view .LVU221
 705 00e0 8B7320   		movl	32(%rbx), %esi
 706 00e3 85F6     		testl	%esi, %esi
 707 00e5 7514     		jne	.L81
 587:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->comps_in_scan == 0) /* unexpected pseudo SOS marker */
 708              		.loc 1 587 4 is_stmt 1 view .LVU222
 709 00e7 488B4500 		movq	0(%rbp), %rax
 710              	.LVL64:
 587:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->comps_in_scan == 0) /* unexpected pseudo SOS marker */
 711              		.loc 1 587 4 is_stmt 0 view .LVU223
 712 00eb 4889EF   		movq	%rbp, %rdi
 713 00ee C7402824 		movl	$36, 40(%rax)
 713      000000
 714 00f5 488B4500 		movq	0(%rbp), %rax
 715 00f9 FF10     		call	*(%rax)
 716              	.LVL65:
 717              	.L81:
 588:fltk-1.3.4-1/jpeg/jdinput.c **** 	  break;
 718              		.loc 1 588 2 is_stmt 1 view .LVU224
 588:fltk-1.3.4-1/jpeg/jdinput.c **** 	  break;
 719              		.loc 1 588 5 is_stmt 0 view .LVU225
 720 00fb 8B8DC001 		movl	448(%rbp), %ecx
 720      0000
 721 0101 85C9     		testl	%ecx, %ecx
 722 0103 0F842DFF 		je	.L35
 722      FFFF
 590:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 723              		.loc 1 590 2 is_stmt 1 view .LVU226
 724 0109 4889EF   		movq	%rbp, %rdi
 725 010c E8000000 		call	start_input_pass
 725      00
 726              	.LVL66:
 727 0111 E96EFFFF 		jmp	.L34
 727      FF
 728              	.LVL67:
 729 0116 662E0F1F 		.p2align 4,,10
 729      84000000 
 729      0000
 730              		.p2align 3
 731              	.L82:
 602:fltk-1.3.4-1/jpeg/jdinput.c **** 	  cinfo->output_scan_number = cinfo->input_scan_number;
 732              		.loc 1 602 2 view .LVU227
 602:fltk-1.3.4-1/jpeg/jdinput.c **** 	  cinfo->output_scan_number = cinfo->input_scan_number;
 733              		.loc 1 602 39 is_stmt 0 view .LVU228
 734 0120 8B85AC00 		movl	172(%rbp), %eax
 734      0000
 735              	.LVL68:
 602:fltk-1.3.4-1/jpeg/jdinput.c **** 	  cinfo->output_scan_number = cinfo->input_scan_number;
 736              		.loc 1 602 5 view .LVU229
 737 0126 3985B400 		cmpl	%eax, 180(%rbp)
 737      0000
 738 012c 0F8E6EFF 		jle	.L83
 738      FFFF
 603:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 739              		.loc 1 603 4 is_stmt 1 view .LVU230
 603:fltk-1.3.4-1/jpeg/jdinput.c ****       }
 740              		.loc 1 603 30 is_stmt 0 view .LVU231
 741 0132 8985B400 		movl	%eax, 180(%rbp)
 741      0000
 742 0138 E947FFFF 		jmp	.L34
 742      FF
 743              	.LVL69:
 744 013d 0F1F00   		.p2align 4,,10
 745              		.p2align 3
 746              	.L90:
 575:fltk-1.3.4-1/jpeg/jdinput.c **** 	if (cinfo->comps_in_scan == 0) { /* pseudo SOS marker */
 747              		.loc 1 575 4 is_stmt 1 view .LVU232
 748              	.LBB30:
 749              	.LBI26:
 208:fltk-1.3.4-1/jpeg/jdinput.c **** /* Called once, when first SOS marker is reached */
 750              		.loc 1 208 1 view .LVU233
 751              	.LBB28:
 211:fltk-1.3.4-1/jpeg/jdinput.c ****   jpeg_component_info *compptr;
 752              		.loc 1 211 3 view .LVU234
 212:fltk-1.3.4-1/jpeg/jdinput.c **** 
 753              		.loc 1 212 3 view .LVU235
 215:fltk-1.3.4-1/jpeg/jdinput.c ****       (long) cinfo->image_width > (long) JPEG_MAX_DIMENSION)
 754              		.loc 1 215 3 view .LVU236
 215:fltk-1.3.4-1/jpeg/jdinput.c ****       (long) cinfo->image_width > (long) JPEG_MAX_DIMENSION)
 755              		.loc 1 215 6 is_stmt 0 view .LVU237
 756 0140 817D34DC 		cmpl	$65500, 52(%rbp)
 756      FF0000
 757 0147 7709     		ja	.L41
 215:fltk-1.3.4-1/jpeg/jdinput.c ****       (long) cinfo->image_width > (long) JPEG_MAX_DIMENSION)
 758              		.loc 1 215 62 view .LVU238
 759 0149 817D30DC 		cmpl	$65500, 48(%rbp)
 759      FF0000
 760 0150 7625     		jbe	.L42
 761              	.L41:
 217:fltk-1.3.4-1/jpeg/jdinput.c **** 
 762              		.loc 1 217 5 view .LVU239
 763 0152 488B4500 		movq	0(%rbp), %rax
 764              	.LVL70:
 217:fltk-1.3.4-1/jpeg/jdinput.c **** 
 765              		.loc 1 217 5 view .LVU240
 766 0156 893424   		movl	%esi, (%rsp)
 217:fltk-1.3.4-1/jpeg/jdinput.c **** 
 767              		.loc 1 217 5 is_stmt 1 view .LVU241
 768 0159 4889EF   		movq	%rbp, %rdi
 769 015c C740282A 		movl	$42, 40(%rax)
 769      000000
 770 0163 488B4500 		movq	0(%rbp), %rax
 771 0167 C7402CDC 		movl	$65500, 44(%rax)
 771      FF0000
 772 016e 488B4500 		movq	0(%rbp), %rax
 773 0172 FF10     		call	*(%rax)
 774              	.LVL71:
 775 0174 8B3424   		movl	(%rsp), %esi
 776              	.L42:
 220:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);
 777              		.loc 1 220 3 view .LVU242
 220:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);
 778              		.loc 1 220 33 is_stmt 0 view .LVU243
 779 0177 8B852801 		movl	296(%rbp), %eax
 779      0000
 780 017d 83E808   		subl	$8, %eax
 220:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT1(cinfo, JERR_BAD_PRECISION, cinfo->data_precision);
 781              		.loc 1 220 6 view .LVU244
 782 0180 83F804   		cmpl	$4, %eax
 783 0183 7627     		jbe	.L43
 221:fltk-1.3.4-1/jpeg/jdinput.c **** 
 784              		.loc 1 221 5 view .LVU245
 785 0185 488B4500 		movq	0(%rbp), %rax
 786 0189 893424   		movl	%esi, (%rsp)
 221:fltk-1.3.4-1/jpeg/jdinput.c **** 
 787              		.loc 1 221 5 is_stmt 1 view .LVU246
 788 018c 4889EF   		movq	%rbp, %rdi
 789 018f C7402810 		movl	$16, 40(%rax)
 789      000000
 790 0196 488B4500 		movq	0(%rbp), %rax
 791 019a 8B952801 		movl	296(%rbp), %edx
 791      0000
 792 01a0 89502C   		movl	%edx, 44(%rax)
 793 01a3 488B4500 		movq	0(%rbp), %rax
 794 01a7 FF10     		call	*(%rax)
 795              	.LVL72:
 796 01a9 8B3424   		movl	(%rsp), %esi
 797              	.L43:
 224:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 798              		.loc 1 224 3 view .LVU247
 224:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 799              		.loc 1 224 12 is_stmt 0 view .LVU248
 800 01ac 8B4538   		movl	56(%rbp), %eax
 224:fltk-1.3.4-1/jpeg/jdinput.c ****     ERREXIT2(cinfo, JERR_COMPONENT_COUNT, cinfo->num_components,
 801              		.loc 1 224 6 view .LVU249
 802 01af 83F80A   		cmpl	$10, %eax
 803 01b2 7E32     		jle	.L44
 225:fltk-1.3.4-1/jpeg/jdinput.c **** 	     MAX_COMPONENTS);
 804              		.loc 1 225 5 view .LVU250
 805 01b4 488B4500 		movq	0(%rbp), %rax
 806 01b8 893424   		movl	%esi, (%rsp)
 225:fltk-1.3.4-1/jpeg/jdinput.c **** 	     MAX_COMPONENTS);
 807              		.loc 1 225 5 is_stmt 1 view .LVU251
 808 01bb 4889EF   		movq	%rbp, %rdi
 809 01be C740281B 		movl	$27, 40(%rax)
 809      000000
 810 01c5 488B4500 		movq	0(%rbp), %rax
 811 01c9 8B5538   		movl	56(%rbp), %edx
 812 01cc 89502C   		movl	%edx, 44(%rax)
 813 01cf 488B4500 		movq	0(%rbp), %rax
 814 01d3 C740300A 		movl	$10, 48(%rax)
 814      000000
 815 01da 488B4500 		movq	0(%rbp), %rax
 816 01de FF10     		call	*(%rax)
 817              	.LVL73:
 818 01e0 8B4538   		movl	56(%rbp), %eax
 819 01e3 8B3424   		movl	(%rsp), %esi
 820              	.L44:
 229:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->max_v_samp_factor = 1;
 821              		.loc 1 229 3 view .LVU252
 230:fltk-1.3.4-1/jpeg/jdinput.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 822              		.loc 1 230 3 view .LVU253
 229:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->max_v_samp_factor = 1;
 823              		.loc 1 229 28 is_stmt 0 view .LVU254
 824 01e6 4C89ADA0 		movq	%r13, 416(%rbp)
 824      010000
 231:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 825              		.loc 1 231 3 is_stmt 1 view .LVU255
 826              	.LVL74:
 231:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 827              		.loc 1 231 24 is_stmt 0 view .LVU256
 828 01ed 488B9530 		movq	304(%rbp), %rdx
 828      010000
 829              	.LVL75:
 231:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 830              		.loc 1 231 44 is_stmt 1 view .LVU257
 231:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 831              		.loc 1 231 11 is_stmt 0 view .LVU258
 832 01f4 4531F6   		xorl	%r14d, %r14d
 231:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 833              		.loc 1 231 3 view .LVU259
 834 01f7 85C0     		testl	%eax, %eax
 835 01f9 7E76     		jle	.L50
 836              	.LVL76:
 837 01fb 0F1F4400 		.p2align 4,,10
 837      00
 838              		.p2align 3
 839              	.L45:
 233:fltk-1.3.4-1/jpeg/jdinput.c **** 	compptr->v_samp_factor<=0 || compptr->v_samp_factor>MAX_SAMP_FACTOR)
 840              		.loc 1 233 5 is_stmt 1 view .LVU260
 233:fltk-1.3.4-1/jpeg/jdinput.c **** 	compptr->v_samp_factor<=0 || compptr->v_samp_factor>MAX_SAMP_FACTOR)
 841              		.loc 1 233 16 is_stmt 0 view .LVU261
 842 0200 8B4208   		movl	8(%rdx), %eax
 233:fltk-1.3.4-1/jpeg/jdinput.c **** 	compptr->v_samp_factor<=0 || compptr->v_samp_factor>MAX_SAMP_FACTOR)
 843              		.loc 1 233 35 view .LVU262
 844 0203 8D78FF   		leal	-1(%rax), %edi
 233:fltk-1.3.4-1/jpeg/jdinput.c **** 	compptr->v_samp_factor<=0 || compptr->v_samp_factor>MAX_SAMP_FACTOR)
 845              		.loc 1 233 8 view .LVU263
 846 0206 83FF03   		cmpl	$3, %edi
 847 0209 770B     		ja	.L48
 234:fltk-1.3.4-1/jpeg/jdinput.c ****       ERREXIT(cinfo, JERR_BAD_SAMPLING);
 848              		.loc 1 234 28 view .LVU264
 849 020b 8B4A0C   		movl	12(%rdx), %ecx
 850 020e 8D79FF   		leal	-1(%rcx), %edi
 851 0211 83FF03   		cmpl	$3, %edi
 852 0214 7627     		jbe	.L49
 853              	.L48:
 235:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->max_h_samp_factor = MAX(cinfo->max_h_samp_factor,
 854              		.loc 1 235 7 view .LVU265
 855 0216 488B4500 		movq	0(%rbp), %rax
 856 021a 8974240C 		movl	%esi, 12(%rsp)
 857 021e 4889EF   		movq	%rbp, %rdi
 858 0221 48891424 		movq	%rdx, (%rsp)
 235:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->max_h_samp_factor = MAX(cinfo->max_h_samp_factor,
 859              		.loc 1 235 7 is_stmt 1 view .LVU266
 860 0225 C7402813 		movl	$19, 40(%rax)
 860      000000
 861 022c 488B4500 		movq	0(%rbp), %rax
 862 0230 FF10     		call	*(%rax)
 863              	.LVL77:
 235:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->max_h_samp_factor = MAX(cinfo->max_h_samp_factor,
 864              		.loc 1 235 7 is_stmt 0 view .LVU267
 865 0232 488B1424 		movq	(%rsp), %rdx
 866 0236 8B74240C 		movl	12(%rsp), %esi
 867 023a 8B4208   		movl	8(%rdx), %eax
 868              	.LVL78:
 869              	.L49:
 236:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->h_samp_factor);
 870              		.loc 1 236 5 is_stmt 1 view .LVU268
 236:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->h_samp_factor);
 871              		.loc 1 236 32 is_stmt 0 view .LVU269
 872 023d 3985A001 		cmpl	%eax, 416(%rbp)
 872      0000
 873 0243 0F4D85A0 		cmovge	416(%rbp), %eax
 873      010000
 236:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->h_samp_factor);
 874              		.loc 1 236 30 view .LVU270
 875 024a 8985A001 		movl	%eax, 416(%rbp)
 875      0000
 238:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->v_samp_factor);
 876              		.loc 1 238 5 is_stmt 1 view .LVU271
 238:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->v_samp_factor);
 877              		.loc 1 238 32 is_stmt 0 view .LVU272
 878 0250 8B85A401 		movl	420(%rbp), %eax
 878      0000
 879 0256 39420C   		cmpl	%eax, 12(%rdx)
 880 0259 0F4D420C 		cmovge	12(%rdx), %eax
 232:fltk-1.3.4-1/jpeg/jdinput.c ****     if (compptr->h_samp_factor<=0 || compptr->h_samp_factor>MAX_SAMP_FACTOR ||
 881              		.loc 1 232 10 view .LVU273
 882 025d 4183C601 		addl	$1, %r14d
 883              	.LVL79:
 232:fltk-1.3.4-1/jpeg/jdinput.c ****     if (compptr->h_samp_factor<=0 || compptr->h_samp_factor>MAX_SAMP_FACTOR ||
 884              		.loc 1 232 21 view .LVU274
 885 0261 4883C260 		addq	$96, %rdx
 238:fltk-1.3.4-1/jpeg/jdinput.c **** 				   compptr->v_samp_factor);
 886              		.loc 1 238 30 view .LVU275
 887 0265 8985A401 		movl	%eax, 420(%rbp)
 887      0000
 232:fltk-1.3.4-1/jpeg/jdinput.c ****     if (compptr->h_samp_factor<=0 || compptr->h_samp_factor>MAX_SAMP_FACTOR ||
 888              		.loc 1 232 8 is_stmt 1 view .LVU276
 889              	.LVL80:
 231:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 890              		.loc 1 231 44 view .LVU277
 231:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 891              		.loc 1 231 3 is_stmt 0 view .LVU278
 892 026b 443B7538 		cmpl	56(%rbp), %r14d
 893 026f 7C8F     		jl	.L45
 894              	.LVL81:
 895              	.L50:
 243:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->comps_in_scan)) { /* no pseudo SOS marker */
 896              		.loc 1 243 3 is_stmt 1 view .LVU279
 243:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->comps_in_scan)) { /* no pseudo SOS marker */
 897              		.loc 1 243 6 is_stmt 0 view .LVU280
 898 0271 448BB538 		movl	312(%rbp), %r14d
 898      010000
 899 0278 4585F6   		testl	%r14d, %r14d
 900 027b 7540     		jne	.L56
 243:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->comps_in_scan)) { /* no pseudo SOS marker */
 901              		.loc 1 243 26 view .LVU281
 902 027d 448B9D3C 		movl	316(%rbp), %r11d
 902      010000
 903 0284 4585DB   		testl	%r11d, %r11d
 904 0287 740C     		je	.L51
 243:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->comps_in_scan)) { /* no pseudo SOS marker */
 905              		.loc 1 243 54 view .LVU282
 906 0289 448B95C0 		movl	448(%rbp), %r10d
 906      010000
 907 0290 4585D2   		testl	%r10d, %r10d
 908 0293 7528     		jne	.L56
 909              	.L51:
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 910              		.loc 1 249 5 is_stmt 1 view .LVU283
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 911              		.loc 1 249 18 is_stmt 0 view .LVU284
 912 0295 8B852002 		movl	544(%rbp), %eax
 912      0000
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 913              		.loc 1 249 5 view .LVU285
 914 029b 83F850   		cmpl	$80, %eax
 915 029e 0F843904 		je	.L53
 915      0000
 916 02a4 0F8FFA02 		jg	.L54
 916      0000
 917 02aa 83F83F   		cmpl	$63, %eax
 918 02ad 0F878E02 		ja	.L55
 918      0000
 919 02b3 49630484 		movslq	(%r12,%rax,4), %rax
 920 02b7 4C01E0   		addq	%r12, %rax
 921 02ba 3EFFE0   		notrack jmp	*%rax
 922              		.section	.rodata.consume_markers,"a",@progbits
 923              		.align 4
 924              		.align 4
 925              	.L57:
 926 0000 00000000 		.long	.L64-.L57
 927 0004 00000000 		.long	.L55-.L57
 928 0008 00000000 		.long	.L55-.L57
 929 000c 00000000 		.long	.L63-.L57
 930 0010 00000000 		.long	.L55-.L57
 931 0014 00000000 		.long	.L55-.L57
 932 0018 00000000 		.long	.L55-.L57
 933 001c 00000000 		.long	.L55-.L57
 934 0020 00000000 		.long	.L62-.L57
 935 0024 00000000 		.long	.L55-.L57
 936 0028 00000000 		.long	.L55-.L57
 937 002c 00000000 		.long	.L55-.L57
 938 0030 00000000 		.long	.L55-.L57
 939 0034 00000000 		.long	.L55-.L57
 940 0038 00000000 		.long	.L55-.L57
 941 003c 00000000 		.long	.L61-.L57
 942 0040 00000000 		.long	.L55-.L57
 943 0044 00000000 		.long	.L55-.L57
 944 0048 00000000 		.long	.L55-.L57
 945 004c 00000000 		.long	.L55-.L57
 946 0050 00000000 		.long	.L55-.L57
 947 0054 00000000 		.long	.L55-.L57
 948 0058 00000000 		.long	.L55-.L57
 949 005c 00000000 		.long	.L55-.L57
 950 0060 00000000 		.long	.L60-.L57
 951 0064 00000000 		.long	.L55-.L57
 952 0068 00000000 		.long	.L55-.L57
 953 006c 00000000 		.long	.L55-.L57
 954 0070 00000000 		.long	.L55-.L57
 955 0074 00000000 		.long	.L55-.L57
 956 0078 00000000 		.long	.L55-.L57
 957 007c 00000000 		.long	.L55-.L57
 958 0080 00000000 		.long	.L55-.L57
 959 0084 00000000 		.long	.L55-.L57
 960 0088 00000000 		.long	.L55-.L57
 961 008c 00000000 		.long	.L59-.L57
 962 0090 00000000 		.long	.L55-.L57
 963 0094 00000000 		.long	.L55-.L57
 964 0098 00000000 		.long	.L55-.L57
 965 009c 00000000 		.long	.L55-.L57
 966 00a0 00000000 		.long	.L55-.L57
 967 00a4 00000000 		.long	.L55-.L57
 968 00a8 00000000 		.long	.L55-.L57
 969 00ac 00000000 		.long	.L55-.L57
 970 00b0 00000000 		.long	.L55-.L57
 971 00b4 00000000 		.long	.L55-.L57
 972 00b8 00000000 		.long	.L55-.L57
 973 00bc 00000000 		.long	.L55-.L57
 974 00c0 00000000 		.long	.L58-.L57
 975 00c4 00000000 		.long	.L55-.L57
 976 00c8 00000000 		.long	.L55-.L57
 977 00cc 00000000 		.long	.L55-.L57
 978 00d0 00000000 		.long	.L55-.L57
 979 00d4 00000000 		.long	.L55-.L57
 980 00d8 00000000 		.long	.L55-.L57
 981 00dc 00000000 		.long	.L55-.L57
 982 00e0 00000000 		.long	.L55-.L57
 983 00e4 00000000 		.long	.L55-.L57
 984 00e8 00000000 		.long	.L55-.L57
 985 00ec 00000000 		.long	.L55-.L57
 986 00f0 00000000 		.long	.L55-.L57
 987 00f4 00000000 		.long	.L55-.L57
 988 00f8 00000000 		.long	.L55-.L57
 989 00fc 00000000 		.long	.L56-.L57
 990              		.section	.text.consume_markers
 991              	.L56:
 286:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 992              		.loc 1 286 7 is_stmt 1 view .LVU286
 287:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 993              		.loc 1 287 28 is_stmt 0 view .LVU287
 994 02bd 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 994      000000
 289:fltk-1.3.4-1/jpeg/jdinput.c ****     case (9*9-1):
 995              		.loc 1 289 7 view .LVU288
 996 02c4 BE080000 		movl	$8, %esi
 996      00
 286:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 997              		.loc 1 286 25 view .LVU289
 998 02c9 C7852C02 		movl	$8, 556(%rbp)
 998      00000800 
 998      0000
 287:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 999              		.loc 1 287 7 is_stmt 1 view .LVU290
 287:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1000              		.loc 1 287 28 is_stmt 0 view .LVU291
 1001 02d3 48898530 		movq	%rax, 560(%rbp)
 1001      020000
 288:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1002              		.loc 1 288 7 is_stmt 1 view .LVU292
 288:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1003              		.loc 1 288 21 is_stmt 0 view .LVU293
 1004 02da C7853802 		movl	$63, 568(%rbp)
 1004      00003F00 
 1004      0000
 289:fltk-1.3.4-1/jpeg/jdinput.c ****     case (9*9-1):
 1005              		.loc 1 289 7 is_stmt 1 view .LVU294
 1006              	.LVL82:
 1007              	.L52:
 342:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->min_DCT_v_scaled_size = cinfo->block_size;
 1008              		.loc 1 342 3 view .LVU295
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1009              		.loc 1 346 3 is_stmt 0 view .LVU296
 1010 02e4 448B4D38 		movl	56(%rbp), %r9d
 342:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->min_DCT_v_scaled_size = cinfo->block_size;
 1011              		.loc 1 342 32 view .LVU297
 1012 02e8 89B5A801 		movl	%esi, 424(%rbp)
 1012      0000
 343:fltk-1.3.4-1/jpeg/jdinput.c **** 
 1013              		.loc 1 343 3 is_stmt 1 view .LVU298
 343:fltk-1.3.4-1/jpeg/jdinput.c **** 
 1014              		.loc 1 343 32 is_stmt 0 view .LVU299
 1015 02ee 89B5AC01 		movl	%esi, 428(%rbp)
 1015      0000
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1016              		.loc 1 346 3 is_stmt 1 view .LVU300
 1017              	.LVL83:
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1018              		.loc 1 346 24 is_stmt 0 view .LVU301
 1019 02f4 4C8BB530 		movq	304(%rbp), %r14
 1019      010000
 1020              	.LVL84:
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1021              		.loc 1 346 44 is_stmt 1 view .LVU302
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1022              		.loc 1 346 3 is_stmt 0 view .LVU303
 1023 02fb 4585C9   		testl	%r9d, %r9d
 1024 02fe 0F8EC400 		jle	.L73
 1024      0000
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1025              		.loc 1 346 11 view .LVU304
 1026 0304 31C9     		xorl	%ecx, %ecx
 1027              	.LVL85:
 1028 0306 662E0F1F 		.p2align 4,,10
 1028      84000000 
 1028      0000
 1029              		.p2align 3
 1030              	.L75:
 348:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_v_scaled_size = cinfo->block_size;
 1031              		.loc 1 348 32 view .LVU305
 1032 0310 41897624 		movl	%esi, 36(%r14)
 349:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Size in DCT blocks */
 1033              		.loc 1 349 39 view .LVU306
 1034 0314 8B852C02 		movl	556(%rbp), %eax
 1034      0000
 347:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->block_size;
 1035              		.loc 1 347 21 view .LVU307
 1036 031a 4983C660 		addq	$96, %r14
 1037              	.LVL86:
 347:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->block_size;
 1038              		.loc 1 347 21 view .LVU308
 1039 031e 890C24   		movl	%ecx, (%rsp)
 1040              	.LVL87:
 348:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_v_scaled_size = cinfo->block_size;
 1041              		.loc 1 348 5 is_stmt 1 view .LVU309
 349:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Size in DCT blocks */
 1042              		.loc 1 349 5 view .LVU310
 349:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Size in DCT blocks */
 1043              		.loc 1 349 32 is_stmt 0 view .LVU311
 1044 0321 418946C8 		movl	%eax, -56(%r14)
 351:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * (long) compptr->h_samp_factor,
 1045              		.loc 1 351 5 is_stmt 1 view .LVU312
 352:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 1046              		.loc 1 352 49 is_stmt 0 view .LVU313
 1047 0325 496346A8 		movslq	-88(%r14), %rax
 352:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 1048              		.loc 1 352 21 view .LVU314
 1049 0329 8B7D30   		movl	48(%rbp), %edi
 353:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->height_in_blocks = (JDIMENSION)
 1050              		.loc 1 353 40 view .LVU315
 1051 032c 8BB5A001 		movl	416(%rbp), %esi
 1051      0000
 1052 0332 0FAFB52C 		imull	556(%rbp), %esi
 1052      020000
 352:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_h_samp_factor * cinfo->block_size));
 1053              		.loc 1 352 7 view .LVU316
 1054 0339 480FAFF8 		imulq	%rax, %rdi
 1055 033d 4863F6   		movslq	%esi, %rsi
 1056 0340 E8000000 		call	jdiv_round_up@PLT
 1056      00
 1057              	.LVL88:
 351:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * (long) compptr->h_samp_factor,
 1058              		.loc 1 351 32 view .LVU317
 1059 0345 418946BC 		movl	%eax, -68(%r14)
 354:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * (long) compptr->v_samp_factor,
 1060              		.loc 1 354 5 is_stmt 1 view .LVU318
 355:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 1061              		.loc 1 355 50 is_stmt 0 view .LVU319
 1062 0349 496346AC 		movslq	-84(%r14), %rax
 355:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 1063              		.loc 1 355 21 view .LVU320
 1064 034d 8B7D34   		movl	52(%rbp), %edi
 356:fltk-1.3.4-1/jpeg/jdinput.c ****     /* downsampled_width and downsampled_height will also be overridden by
 1065              		.loc 1 356 40 view .LVU321
 1066 0350 8BB5A401 		movl	420(%rbp), %esi
 1066      0000
 1067 0356 0FAFB52C 		imull	556(%rbp), %esi
 1067      020000
 355:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 1068              		.loc 1 355 7 view .LVU322
 1069 035d 480FAFF8 		imulq	%rax, %rdi
 1070 0361 4863F6   		movslq	%esi, %rsi
 1071 0364 E8000000 		call	jdiv_round_up@PLT
 1071      00
 1072              	.LVL89:
 354:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * (long) compptr->v_samp_factor,
 1073              		.loc 1 354 33 view .LVU323
 1074 0369 418946C0 		movl	%eax, -64(%r14)
 362:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * (long) compptr->h_samp_factor,
 1075              		.loc 1 362 5 is_stmt 1 view .LVU324
 363:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_h_samp_factor);
 1076              		.loc 1 363 49 is_stmt 0 view .LVU325
 1077 036d 496346A8 		movslq	-88(%r14), %rax
 363:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_h_samp_factor);
 1078              		.loc 1 363 21 view .LVU326
 1079 0371 8B7D30   		movl	48(%rbp), %edi
 363:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_h_samp_factor);
 1080              		.loc 1 363 7 view .LVU327
 1081 0374 4863B5A0 		movslq	416(%rbp), %rsi
 1081      010000
 1082 037b 480FAFF8 		imulq	%rax, %rdi
 1083 037f E8000000 		call	jdiv_round_up@PLT
 1083      00
 1084              	.LVL90:
 362:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * (long) compptr->h_samp_factor,
 1085              		.loc 1 362 34 view .LVU328
 1086 0384 418946CC 		movl	%eax, -52(%r14)
 365:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * (long) compptr->v_samp_factor,
 1087              		.loc 1 365 5 is_stmt 1 view .LVU329
 366:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_v_samp_factor);
 1088              		.loc 1 366 50 is_stmt 0 view .LVU330
 1089 0388 496346AC 		movslq	-84(%r14), %rax
 366:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_v_samp_factor);
 1090              		.loc 1 366 21 view .LVU331
 1091 038c 8B7D34   		movl	52(%rbp), %edi
 366:fltk-1.3.4-1/jpeg/jdinput.c **** 		    (long) cinfo->max_v_samp_factor);
 1092              		.loc 1 366 7 view .LVU332
 1093 038f 4863B5A4 		movslq	420(%rbp), %rsi
 1093      010000
 1094 0396 480FAFF8 		imulq	%rax, %rdi
 1095 039a E8000000 		call	jdiv_round_up@PLT
 1095      00
 1096              	.LVL91:
 347:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->block_size;
 1097              		.loc 1 347 10 view .LVU333
 1098 039f 8B0C24   		movl	(%rsp), %ecx
 369:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Mark no quantization table yet saved for component */
 1099              		.loc 1 369 31 view .LVU334
 1100 03a2 41C746D4 		movl	$1, -44(%r14)
 1100      01000000 
 365:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * (long) compptr->v_samp_factor,
 1101              		.loc 1 365 35 view .LVU335
 1102 03aa 418946D0 		movl	%eax, -48(%r14)
 369:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Mark no quantization table yet saved for component */
 1103              		.loc 1 369 5 is_stmt 1 view .LVU336
 371:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 1104              		.loc 1 371 5 view .LVU337
 371:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 1105              		.loc 1 371 26 is_stmt 0 view .LVU338
 1106 03ae 49C746F0 		movq	$0, -16(%r14)
 1106      00000000 
 347:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->block_size;
 1107              		.loc 1 347 8 is_stmt 1 view .LVU339
 347:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->block_size;
 1108              		.loc 1 347 10 is_stmt 0 view .LVU340
 1109 03b6 83C101   		addl	$1, %ecx
 1110              	.LVL92:
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1111              		.loc 1 346 44 is_stmt 1 view .LVU341
 346:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1112              		.loc 1 346 3 is_stmt 0 view .LVU342
 1113 03b9 3B4D38   		cmpl	56(%rbp), %ecx
 1114 03bc 8BB52C02 		movl	556(%rbp), %esi
 1114      0000
 1115 03c2 0F8C48FF 		jl	.L75
 1115      FFFF
 1116              	.LVL93:
 1117              	.L73:
 375:fltk-1.3.4-1/jpeg/jdinput.c ****     jdiv_round_up((long) cinfo->image_height,
 1118              		.loc 1 375 3 is_stmt 1 view .LVU343
 377:fltk-1.3.4-1/jpeg/jdinput.c **** 
 1119              		.loc 1 377 45 is_stmt 0 view .LVU344
 1120 03c8 0FAFB5A4 		imull	420(%rbp), %esi
 1120      010000
 376:fltk-1.3.4-1/jpeg/jdinput.c **** 	          (long) (cinfo->max_v_samp_factor * cinfo->block_size));
 1121              		.loc 1 376 5 view .LVU345
 1122 03cf 8B7D34   		movl	52(%rbp), %edi
 1123 03d2 4863F6   		movslq	%esi, %rsi
 1124 03d5 E8000000 		call	jdiv_round_up@PLT
 1124      00
 1125              	.LVL94:
 375:fltk-1.3.4-1/jpeg/jdinput.c ****     jdiv_round_up((long) cinfo->image_height,
 1126              		.loc 1 375 28 view .LVU346
 1127 03da 8985B001 		movl	%eax, 432(%rbp)
 1127      0000
 380:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->inputctl->has_multiple_scans = TRUE;
 1128              		.loc 1 380 3 is_stmt 1 view .LVU347
 380:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->inputctl->has_multiple_scans = TRUE;
 1129              		.loc 1 380 6 is_stmt 0 view .LVU348
 1130 03e0 8B4538   		movl	56(%rbp), %eax
 1131 03e3 3985C001 		cmpl	%eax, 448(%rbp)
 1131      0000
 1132 03e9 488B8560 		movq	608(%rbp), %rax
 1132      020000
 1133 03f0 0F8CA201 		jl	.L77
 1133      0000
 380:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->inputctl->has_multiple_scans = TRUE;
 1134              		.loc 1 380 52 view .LVU349
 1135 03f6 448B853C 		movl	316(%rbp), %r8d
 1135      010000
 1136 03fd 4585C0   		testl	%r8d, %r8d
 1137 0400 0F859201 		jne	.L77
 1137      0000
 383:fltk-1.3.4-1/jpeg/jdinput.c **** }
 1138              		.loc 1 383 5 is_stmt 1 view .LVU350
 383:fltk-1.3.4-1/jpeg/jdinput.c **** }
 1139              		.loc 1 383 41 is_stmt 0 view .LVU351
 1140 0406 C7402000 		movl	$0, 32(%rax)
 1140      000000
 1141 040d E9AEFCFF 		jmp	.L40
 1141      FF
 1142              	.LVL95:
 1143              	.L58:
 281:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order7;
 1144              		.loc 1 281 7 is_stmt 1 view .LVU352
 282:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1145              		.loc 1 282 28 is_stmt 0 view .LVU353
 1146 0412 488D0500 		leaq	jpeg_natural_order7(%rip), %rax
 1146      000000
 284:fltk-1.3.4-1/jpeg/jdinput.c ****     case (8*8-1):
 1147              		.loc 1 284 7 view .LVU354
 1148 0419 BE070000 		movl	$7, %esi
 1148      00
 281:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order7;
 1149              		.loc 1 281 25 view .LVU355
 1150 041e C7852C02 		movl	$7, 556(%rbp)
 1150      00000700 
 1150      0000
 282:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1151              		.loc 1 282 7 is_stmt 1 view .LVU356
 282:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1152              		.loc 1 282 28 is_stmt 0 view .LVU357
 1153 0428 48898530 		movq	%rax, 560(%rbp)
 1153      020000
 283:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1154              		.loc 1 283 7 is_stmt 1 view .LVU358
 283:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1155              		.loc 1 283 21 is_stmt 0 view .LVU359
 1156 042f C7853802 		movl	$48, 568(%rbp)
 1156      00003000 
 1156      0000
 284:fltk-1.3.4-1/jpeg/jdinput.c ****     case (8*8-1):
 1157              		.loc 1 284 7 is_stmt 1 view .LVU360
 1158 0439 E9A6FEFF 		jmp	.L52
 1158      FF
 1159              	.L59:
 276:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order6;
 1160              		.loc 1 276 7 view .LVU361
 277:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1161              		.loc 1 277 28 is_stmt 0 view .LVU362
 1162 043e 488D0500 		leaq	jpeg_natural_order6(%rip), %rax
 1162      000000
 279:fltk-1.3.4-1/jpeg/jdinput.c ****     case (7*7-1):
 1163              		.loc 1 279 7 view .LVU363
 1164 0445 BE060000 		movl	$6, %esi
 1164      00
 276:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order6;
 1165              		.loc 1 276 25 view .LVU364
 1166 044a C7852C02 		movl	$6, 556(%rbp)
 1166      00000600 
 1166      0000
 277:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1167              		.loc 1 277 7 is_stmt 1 view .LVU365
 277:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1168              		.loc 1 277 28 is_stmt 0 view .LVU366
 1169 0454 48898530 		movq	%rax, 560(%rbp)
 1169      020000
 278:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1170              		.loc 1 278 7 is_stmt 1 view .LVU367
 278:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1171              		.loc 1 278 21 is_stmt 0 view .LVU368
 1172 045b C7853802 		movl	$35, 568(%rbp)
 1172      00002300 
 1172      0000
 279:fltk-1.3.4-1/jpeg/jdinput.c ****     case (7*7-1):
 1173              		.loc 1 279 7 is_stmt 1 view .LVU369
 1174 0465 E97AFEFF 		jmp	.L52
 1174      FF
 1175              	.L60:
 271:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order5;
 1176              		.loc 1 271 7 view .LVU370
 272:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1177              		.loc 1 272 28 is_stmt 0 view .LVU371
 1178 046a 488D0500 		leaq	jpeg_natural_order5(%rip), %rax
 1178      000000
 274:fltk-1.3.4-1/jpeg/jdinput.c ****     case (6*6-1):
 1179              		.loc 1 274 7 view .LVU372
 1180 0471 BE050000 		movl	$5, %esi
 1180      00
 271:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order5;
 1181              		.loc 1 271 25 view .LVU373
 1182 0476 C7852C02 		movl	$5, 556(%rbp)
 1182      00000500 
 1182      0000
 272:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1183              		.loc 1 272 7 is_stmt 1 view .LVU374
 272:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1184              		.loc 1 272 28 is_stmt 0 view .LVU375
 1185 0480 48898530 		movq	%rax, 560(%rbp)
 1185      020000
 273:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1186              		.loc 1 273 7 is_stmt 1 view .LVU376
 273:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1187              		.loc 1 273 21 is_stmt 0 view .LVU377
 1188 0487 C7853802 		movl	$24, 568(%rbp)
 1188      00001800 
 1188      0000
 274:fltk-1.3.4-1/jpeg/jdinput.c ****     case (6*6-1):
 1189              		.loc 1 274 7 is_stmt 1 view .LVU378
 1190 0491 E94EFEFF 		jmp	.L52
 1190      FF
 1191              	.L61:
 266:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order4;
 1192              		.loc 1 266 7 view .LVU379
 267:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1193              		.loc 1 267 28 is_stmt 0 view .LVU380
 1194 0496 488D0500 		leaq	jpeg_natural_order4(%rip), %rax
 1194      000000
 269:fltk-1.3.4-1/jpeg/jdinput.c ****     case (5*5-1):
 1195              		.loc 1 269 7 view .LVU381
 1196 049d BE040000 		movl	$4, %esi
 1196      00
 266:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order4;
 1197              		.loc 1 266 25 view .LVU382
 1198 04a2 C7852C02 		movl	$4, 556(%rbp)
 1198      00000400 
 1198      0000
 267:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1199              		.loc 1 267 7 is_stmt 1 view .LVU383
 267:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1200              		.loc 1 267 28 is_stmt 0 view .LVU384
 1201 04ac 48898530 		movq	%rax, 560(%rbp)
 1201      020000
 268:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1202              		.loc 1 268 7 is_stmt 1 view .LVU385
 268:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1203              		.loc 1 268 21 is_stmt 0 view .LVU386
 1204 04b3 C7853802 		movl	$15, 568(%rbp)
 1204      00000F00 
 1204      0000
 269:fltk-1.3.4-1/jpeg/jdinput.c ****     case (5*5-1):
 1205              		.loc 1 269 7 is_stmt 1 view .LVU387
 1206 04bd E922FEFF 		jmp	.L52
 1206      FF
 1207              	.L62:
 261:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order3;
 1208              		.loc 1 261 7 view .LVU388
 262:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1209              		.loc 1 262 28 is_stmt 0 view .LVU389
 1210 04c2 488D0500 		leaq	jpeg_natural_order3(%rip), %rax
 1210      000000
 264:fltk-1.3.4-1/jpeg/jdinput.c ****     case (4*4-1):
 1211              		.loc 1 264 7 view .LVU390
 1212 04c9 BE030000 		movl	$3, %esi
 1212      00
 261:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order3;
 1213              		.loc 1 261 25 view .LVU391
 1214 04ce C7852C02 		movl	$3, 556(%rbp)
 1214      00000300 
 1214      0000
 262:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1215              		.loc 1 262 7 is_stmt 1 view .LVU392
 262:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1216              		.loc 1 262 28 is_stmt 0 view .LVU393
 1217 04d8 48898530 		movq	%rax, 560(%rbp)
 1217      020000
 263:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1218              		.loc 1 263 7 is_stmt 1 view .LVU394
 263:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1219              		.loc 1 263 21 is_stmt 0 view .LVU395
 1220 04df C7853802 		movl	$8, 568(%rbp)
 1220      00000800 
 1220      0000
 264:fltk-1.3.4-1/jpeg/jdinput.c ****     case (4*4-1):
 1221              		.loc 1 264 7 is_stmt 1 view .LVU396
 1222 04e9 E9F6FDFF 		jmp	.L52
 1222      FF
 1223              	.L63:
 256:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order2;
 1224              		.loc 1 256 7 view .LVU397
 257:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1225              		.loc 1 257 28 is_stmt 0 view .LVU398
 1226 04ee 488D0500 		leaq	jpeg_natural_order2(%rip), %rax
 1226      000000
 259:fltk-1.3.4-1/jpeg/jdinput.c ****     case (3*3-1):
 1227              		.loc 1 259 7 view .LVU399
 1228 04f5 BE020000 		movl	$2, %esi
 1228      00
 256:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order2;
 1229              		.loc 1 256 25 view .LVU400
 1230 04fa C7852C02 		movl	$2, 556(%rbp)
 1230      00000200 
 1230      0000
 257:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1231              		.loc 1 257 7 is_stmt 1 view .LVU401
 257:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1232              		.loc 1 257 28 is_stmt 0 view .LVU402
 1233 0504 48898530 		movq	%rax, 560(%rbp)
 1233      020000
 258:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1234              		.loc 1 258 7 is_stmt 1 view .LVU403
 258:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1235              		.loc 1 258 21 is_stmt 0 view .LVU404
 1236 050b C7853802 		movl	$3, 568(%rbp)
 1236      00000300 
 1236      0000
 259:fltk-1.3.4-1/jpeg/jdinput.c ****     case (3*3-1):
 1237              		.loc 1 259 7 is_stmt 1 view .LVU405
 1238 0515 E9CAFDFF 		jmp	.L52
 1238      FF
 1239              	.L64:
 251:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order; /* not needed */
 1240              		.loc 1 251 7 view .LVU406
 252:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1241              		.loc 1 252 28 is_stmt 0 view .LVU407
 1242 051a 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1242      000000
 251:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order; /* not needed */
 1243              		.loc 1 251 25 view .LVU408
 1244 0521 C7852C02 		movl	$1, 556(%rbp)
 1244      00000100 
 1244      0000
 252:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1245              		.loc 1 252 7 is_stmt 1 view .LVU409
 252:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = cinfo->Se;
 1246              		.loc 1 252 28 is_stmt 0 view .LVU410
 1247 052b 48898530 		movq	%rax, 560(%rbp)
 1247      020000
 253:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1248              		.loc 1 253 7 is_stmt 1 view .LVU411
 253:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1249              		.loc 1 253 21 is_stmt 0 view .LVU412
 1250 0532 C7853802 		movl	$0, 568(%rbp)
 1250      00000000 
 1250      0000
 254:fltk-1.3.4-1/jpeg/jdinput.c ****     case (2*2-1):
 1251              		.loc 1 254 7 is_stmt 1 view .LVU413
 1252 053c E9A3FDFF 		jmp	.L52
 1252      FF
 1253              	.L55:
 331:fltk-1.3.4-1/jpeg/jdinput.c **** 	       cinfo->Ss, cinfo->Se, cinfo->Ah, cinfo->Al);
 1254              		.loc 1 331 7 view .LVU414
 1255 0541 488B4500 		movq	0(%rbp), %rax
 1256 0545 4889EF   		movq	%rbp, %rdi
 1257 0548 C7402811 		movl	$17, 40(%rax)
 1257      000000
 1258 054f 488B4500 		movq	0(%rbp), %rax
 1259 0553 8B951C02 		movl	540(%rbp), %edx
 1259      0000
 1260              	.LVL96:
 331:fltk-1.3.4-1/jpeg/jdinput.c **** 	       cinfo->Ss, cinfo->Se, cinfo->Ah, cinfo->Al);
 1261              		.loc 1 331 7 is_stmt 0 view .LVU415
 1262 0559 89502C   		movl	%edx, 44(%rax)
 1263 055c 488B4500 		movq	0(%rbp), %rax
 1264 0560 8B952002 		movl	544(%rbp), %edx
 1264      0000
 1265 0566 895030   		movl	%edx, 48(%rax)
 1266 0569 488B4500 		movq	0(%rbp), %rax
 1267 056d 8B952402 		movl	548(%rbp), %edx
 1267      0000
 1268 0573 895034   		movl	%edx, 52(%rax)
 1269 0576 488B4500 		movq	0(%rbp), %rax
 1270 057a 8B952802 		movl	552(%rbp), %edx
 1270      0000
 1271 0580 895038   		movl	%edx, 56(%rax)
 1272 0583 488B4500 		movq	0(%rbp), %rax
 1273 0587 FF10     		call	*(%rax)
 1274              	.LVL97:
 333:fltk-1.3.4-1/jpeg/jdinput.c ****     }
 1275              		.loc 1 333 7 is_stmt 1 view .LVU416
 1276 0589 8BB52C02 		movl	556(%rbp), %esi
 1276      0000
 1277 058f E950FDFF 		jmp	.L52
 1277      FF
 1278              	.LVL98:
 1279              		.p2align 4,,10
 1280 0594 0F1F4000 		.p2align 3
 1281              	.L77:
 381:fltk-1.3.4-1/jpeg/jdinput.c ****   else
 1282              		.loc 1 381 5 view .LVU417
 381:fltk-1.3.4-1/jpeg/jdinput.c ****   else
 1283              		.loc 1 381 41 is_stmt 0 view .LVU418
 1284 0598 C7402001 		movl	$1, 32(%rax)
 1284      000000
 1285 059f E91CFBFF 		jmp	.L40
 1285      FF
 1286              	.LVL99:
 1287              	.L54:
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 1288              		.loc 1 249 5 view .LVU419
 1289 05a4 3DA80000 		cmpl	$168, %eax
 1289      00
 1290 05a9 0F845A01 		je	.L65
 1290      0000
 1291 05af 7E3F     		jle	.L91
 1292 05b1 3DE00000 		cmpl	$224, %eax
 1292      00
 1293 05b6 0F847901 		je	.L70
 1293      0000
 1294 05bc 3DFF0000 		cmpl	$255, %eax
 1294      00
 1295 05c1 756D     		jne	.L92
 326:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1296              		.loc 1 326 7 is_stmt 1 view .LVU420
 327:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1297              		.loc 1 327 28 is_stmt 0 view .LVU421
 1298 05c3 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1298      000000
 329:fltk-1.3.4-1/jpeg/jdinput.c ****     default:
 1299              		.loc 1 329 7 view .LVU422
 1300 05ca BE100000 		movl	$16, %esi
 1300      00
 326:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1301              		.loc 1 326 25 view .LVU423
 1302 05cf C7852C02 		movl	$16, 556(%rbp)
 1302      00001000 
 1302      0000
 327:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1303              		.loc 1 327 7 is_stmt 1 view .LVU424
 327:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1304              		.loc 1 327 28 is_stmt 0 view .LVU425
 1305 05d9 48898530 		movq	%rax, 560(%rbp)
 1305      020000
 328:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1306              		.loc 1 328 7 is_stmt 1 view .LVU426
 328:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1307              		.loc 1 328 21 is_stmt 0 view .LVU427
 1308 05e0 C7853802 		movl	$63, 568(%rbp)
 1308      00003F00 
 1308      0000
 329:fltk-1.3.4-1/jpeg/jdinput.c ****     default:
 1309              		.loc 1 329 7 is_stmt 1 view .LVU428
 1310 05ea E9F5FCFF 		jmp	.L52
 1310      FF
 1311 05ef 90       		.p2align 4,,10
 1312              		.p2align 3
 1313              	.L91:
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 1314              		.loc 1 249 5 is_stmt 0 view .LVU429
 1315 05f0 83F878   		cmpl	$120, %eax
 1316 05f3 0F84B800 		je	.L67
 1316      0000
 1317 05f9 3D8F0000 		cmpl	$143, %eax
 1317      00
 1318 05fe 7570     		jne	.L93
 306:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1319              		.loc 1 306 7 is_stmt 1 view .LVU430
 307:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1320              		.loc 1 307 28 is_stmt 0 view .LVU431
 1321 0600 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1321      000000
 309:fltk-1.3.4-1/jpeg/jdinput.c ****     case (13*13-1):
 1322              		.loc 1 309 7 view .LVU432
 1323 0607 BE0C0000 		movl	$12, %esi
 1323      00
 306:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1324              		.loc 1 306 25 view .LVU433
 1325 060c C7852C02 		movl	$12, 556(%rbp)
 1325      00000C00 
 1325      0000
 307:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1326              		.loc 1 307 7 is_stmt 1 view .LVU434
 307:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1327              		.loc 1 307 28 is_stmt 0 view .LVU435
 1328 0616 48898530 		movq	%rax, 560(%rbp)
 1328      020000
 308:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1329              		.loc 1 308 7 is_stmt 1 view .LVU436
 308:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1330              		.loc 1 308 21 is_stmt 0 view .LVU437
 1331 061d C7853802 		movl	$63, 568(%rbp)
 1331      00003F00 
 1331      0000
 309:fltk-1.3.4-1/jpeg/jdinput.c ****     case (13*13-1):
 1332              		.loc 1 309 7 is_stmt 1 view .LVU438
 1333 0627 E9B8FCFF 		jmp	.L52
 1333      FF
 1334 062c 0F1F4000 		.p2align 4,,10
 1335              		.p2align 3
 1336              	.L92:
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 1337              		.loc 1 249 5 is_stmt 0 view .LVU439
 1338 0630 3DC30000 		cmpl	$195, %eax
 1338      00
 1339 0635 0F8506FF 		jne	.L55
 1339      FFFF
 316:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1340              		.loc 1 316 7 is_stmt 1 view .LVU440
 317:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1341              		.loc 1 317 28 is_stmt 0 view .LVU441
 1342 063b 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1342      000000
 319:fltk-1.3.4-1/jpeg/jdinput.c ****     case (15*15-1):
 1343              		.loc 1 319 7 view .LVU442
 1344 0642 BE0E0000 		movl	$14, %esi
 1344      00
 316:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1345              		.loc 1 316 25 view .LVU443
 1346 0647 C7852C02 		movl	$14, 556(%rbp)
 1346      00000E00 
 1346      0000
 317:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1347              		.loc 1 317 7 is_stmt 1 view .LVU444
 317:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1348              		.loc 1 317 28 is_stmt 0 view .LVU445
 1349 0651 48898530 		movq	%rax, 560(%rbp)
 1349      020000
 318:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1350              		.loc 1 318 7 is_stmt 1 view .LVU446
 318:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1351              		.loc 1 318 21 is_stmt 0 view .LVU447
 1352 0658 C7853802 		movl	$63, 568(%rbp)
 1352      00003F00 
 1352      0000
 319:fltk-1.3.4-1/jpeg/jdinput.c ****     case (15*15-1):
 1353              		.loc 1 319 7 is_stmt 1 view .LVU448
 1354 0662 E97DFCFF 		jmp	.L52
 1354      FF
 1355 0667 660F1F84 		.p2align 4,,10
 1355      00000000 
 1355      00
 1356              		.p2align 3
 1357              	.L93:
 249:fltk-1.3.4-1/jpeg/jdinput.c ****     case (1*1-1):
 1358              		.loc 1 249 5 is_stmt 0 view .LVU449
 1359 0670 83F863   		cmpl	$99, %eax
 1360 0673 0F85C8FE 		jne	.L55
 1360      FFFF
 296:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1361              		.loc 1 296 7 is_stmt 1 view .LVU450
 297:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1362              		.loc 1 297 28 is_stmt 0 view .LVU451
 1363 0679 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1363      000000
 299:fltk-1.3.4-1/jpeg/jdinput.c ****     case (11*11-1):
 1364              		.loc 1 299 7 view .LVU452
 1365 0680 BE0A0000 		movl	$10, %esi
 1365      00
 296:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1366              		.loc 1 296 25 view .LVU453
 1367 0685 C7852C02 		movl	$10, 556(%rbp)
 1367      00000A00 
 1367      0000
 297:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1368              		.loc 1 297 7 is_stmt 1 view .LVU454
 297:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1369              		.loc 1 297 28 is_stmt 0 view .LVU455
 1370 068f 48898530 		movq	%rax, 560(%rbp)
 1370      020000
 298:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1371              		.loc 1 298 7 is_stmt 1 view .LVU456
 298:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1372              		.loc 1 298 21 is_stmt 0 view .LVU457
 1373 0696 C7853802 		movl	$63, 568(%rbp)
 1373      00003F00 
 1373      0000
 299:fltk-1.3.4-1/jpeg/jdinput.c ****     case (11*11-1):
 1374              		.loc 1 299 7 is_stmt 1 view .LVU458
 1375 06a0 E93FFCFF 		jmp	.L52
 1375      FF
 1376              	.LVL100:
 1377              	.L79:
 299:fltk-1.3.4-1/jpeg/jdinput.c ****     case (11*11-1):
 1378              		.loc 1 299 7 is_stmt 0 view .LVU459
 1379              	.LBE28:
 1380              	.LBE30:
 580:fltk-1.3.4-1/jpeg/jdinput.c **** 	/* Note: start_input_pass must be called by jdmaster.c
 1381              		.loc 1 580 2 is_stmt 1 view .LVU460
 580:fltk-1.3.4-1/jpeg/jdinput.c **** 	/* Note: start_input_pass must be called by jdmaster.c
 1382              		.loc 1 580 22 is_stmt 0 view .LVU461
 1383 06a5 C7432800 		movl	$0, 40(%rbx)
 1383      000000
 1384 06ac E9D3F9FF 		jmp	.L34
 1384      FF
 1385              	.LVL101:
 1386              	.L67:
 1387              	.LBB31:
 1388              	.LBB29:
 301:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1389              		.loc 1 301 7 is_stmt 1 view .LVU462
 302:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1390              		.loc 1 302 28 is_stmt 0 view .LVU463
 1391 06b1 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1391      000000
 304:fltk-1.3.4-1/jpeg/jdinput.c ****     case (12*12-1):
 1392              		.loc 1 304 7 view .LVU464
 1393 06b8 BE0B0000 		movl	$11, %esi
 1393      00
 301:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1394              		.loc 1 301 25 view .LVU465
 1395 06bd C7852C02 		movl	$11, 556(%rbp)
 1395      00000B00 
 1395      0000
 302:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1396              		.loc 1 302 7 is_stmt 1 view .LVU466
 302:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1397              		.loc 1 302 28 is_stmt 0 view .LVU467
 1398 06c7 48898530 		movq	%rax, 560(%rbp)
 1398      020000
 303:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1399              		.loc 1 303 7 is_stmt 1 view .LVU468
 303:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1400              		.loc 1 303 21 is_stmt 0 view .LVU469
 1401 06ce C7853802 		movl	$63, 568(%rbp)
 1401      00003F00 
 1401      0000
 304:fltk-1.3.4-1/jpeg/jdinput.c ****     case (12*12-1):
 1402              		.loc 1 304 7 is_stmt 1 view .LVU470
 1403 06d8 E907FCFF 		jmp	.L52
 1403      FF
 1404              	.L53:
 291:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1405              		.loc 1 291 7 view .LVU471
 292:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1406              		.loc 1 292 28 is_stmt 0 view .LVU472
 1407 06dd 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1407      000000
 294:fltk-1.3.4-1/jpeg/jdinput.c ****     case (10*10-1):
 1408              		.loc 1 294 7 view .LVU473
 1409 06e4 BE090000 		movl	$9, %esi
 1409      00
 291:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1410              		.loc 1 291 25 view .LVU474
 1411 06e9 C7852C02 		movl	$9, 556(%rbp)
 1411      00000900 
 1411      0000
 292:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1412              		.loc 1 292 7 is_stmt 1 view .LVU475
 292:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1413              		.loc 1 292 28 is_stmt 0 view .LVU476
 1414 06f3 48898530 		movq	%rax, 560(%rbp)
 1414      020000
 293:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1415              		.loc 1 293 7 is_stmt 1 view .LVU477
 293:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1416              		.loc 1 293 21 is_stmt 0 view .LVU478
 1417 06fa C7853802 		movl	$63, 568(%rbp)
 1417      00003F00 
 1417      0000
 294:fltk-1.3.4-1/jpeg/jdinput.c ****     case (10*10-1):
 1418              		.loc 1 294 7 is_stmt 1 view .LVU479
 1419 0704 E9DBFBFF 		jmp	.L52
 1419      FF
 1420              	.L65:
 311:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1421              		.loc 1 311 7 view .LVU480
 312:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1422              		.loc 1 312 28 is_stmt 0 view .LVU481
 1423 0709 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1423      000000
 314:fltk-1.3.4-1/jpeg/jdinput.c ****     case (14*14-1):
 1424              		.loc 1 314 7 view .LVU482
 1425 0710 BE0D0000 		movl	$13, %esi
 1425      00
 311:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1426              		.loc 1 311 25 view .LVU483
 1427 0715 C7852C02 		movl	$13, 556(%rbp)
 1427      00000D00 
 1427      0000
 312:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1428              		.loc 1 312 7 is_stmt 1 view .LVU484
 312:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1429              		.loc 1 312 28 is_stmt 0 view .LVU485
 1430 071f 48898530 		movq	%rax, 560(%rbp)
 1430      020000
 313:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1431              		.loc 1 313 7 is_stmt 1 view .LVU486
 313:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1432              		.loc 1 313 21 is_stmt 0 view .LVU487
 1433 0726 C7853802 		movl	$63, 568(%rbp)
 1433      00003F00 
 1433      0000
 314:fltk-1.3.4-1/jpeg/jdinput.c ****     case (14*14-1):
 1434              		.loc 1 314 7 is_stmt 1 view .LVU488
 1435 0730 E9AFFBFF 		jmp	.L52
 1435      FF
 1436              	.L70:
 321:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1437              		.loc 1 321 7 view .LVU489
 322:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1438              		.loc 1 322 28 is_stmt 0 view .LVU490
 1439 0735 488D0500 		leaq	jpeg_natural_order(%rip), %rax
 1439      000000
 324:fltk-1.3.4-1/jpeg/jdinput.c ****     case (16*16-1):
 1440              		.loc 1 324 7 view .LVU491
 1441 073c BE0F0000 		movl	$15, %esi
 1441      00
 321:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->natural_order = jpeg_natural_order;
 1442              		.loc 1 321 25 view .LVU492
 1443 0741 C7852C02 		movl	$15, 556(%rbp)
 1443      00000F00 
 1443      0000
 322:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1444              		.loc 1 322 7 is_stmt 1 view .LVU493
 322:fltk-1.3.4-1/jpeg/jdinput.c ****       cinfo->lim_Se = DCTSIZE2-1;
 1445              		.loc 1 322 28 is_stmt 0 view .LVU494
 1446 074b 48898530 		movq	%rax, 560(%rbp)
 1446      020000
 323:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1447              		.loc 1 323 7 is_stmt 1 view .LVU495
 323:fltk-1.3.4-1/jpeg/jdinput.c ****       break;
 1448              		.loc 1 323 21 is_stmt 0 view .LVU496
 1449 0752 C7853802 		movl	$63, 568(%rbp)
 1449      00003F00 
 1449      0000
 324:fltk-1.3.4-1/jpeg/jdinput.c ****     case (16*16-1):
 1450              		.loc 1 324 7 is_stmt 1 view .LVU497
 1451 075c E983FBFF 		jmp	.L52
 1451      FF
 1452              	.LBE29:
 1453              	.LBE31:
 1454              		.cfi_endproc
 1455              	.LFE57:
 1457              		.section	.text.jpeg_core_output_dimensions,"ax",@progbits
 1458              		.p2align 4
 1459              		.globl	jpeg_core_output_dimensions
 1461              	jpeg_core_output_dimensions:
 1462              	.LVL102:
 1463              	.LFB51:
  51:fltk-1.3.4-1/jpeg/jdinput.c **** #ifdef IDCT_SCALING_SUPPORTED
 1464              		.loc 1 51 1 view -0
 1465              		.cfi_startproc
  51:fltk-1.3.4-1/jpeg/jdinput.c **** #ifdef IDCT_SCALING_SUPPORTED
 1466              		.loc 1 51 1 is_stmt 0 view .LVU499
 1467 0000 F30F1EFA 		endbr64
  53:fltk-1.3.4-1/jpeg/jdinput.c ****   jpeg_component_info *compptr;
 1468              		.loc 1 53 3 is_stmt 1 view .LVU500
  54:fltk-1.3.4-1/jpeg/jdinput.c **** 
 1469              		.loc 1 54 3 view .LVU501
  57:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 1/block_size scaling */
 1470              		.loc 1 57 3 view .LVU502
  51:fltk-1.3.4-1/jpeg/jdinput.c **** #ifdef IDCT_SCALING_SUPPORTED
 1471              		.loc 1 51 1 is_stmt 0 view .LVU503
 1472 0004 53       		pushq	%rbx
 1473              		.cfi_def_cfa_offset 16
 1474              		.cfi_offset 3, -16
  57:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 1/block_size scaling */
 1475              		.loc 1 57 31 view .LVU504
 1476 0005 4863B72C 		movslq	556(%rdi), %rsi
 1476      020000
  51:fltk-1.3.4-1/jpeg/jdinput.c **** #ifdef IDCT_SCALING_SUPPORTED
 1477              		.loc 1 51 1 view .LVU505
 1478 000c 4889FB   		movq	%rdi, %rbx
  57:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 1/block_size scaling */
 1479              		.loc 1 57 24 view .LVU506
 1480 000f 8B4744   		movl	68(%rdi), %eax
  57:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 1/block_size scaling */
 1481              		.loc 1 57 52 view .LVU507
 1482 0012 8B5748   		movl	72(%rdi), %edx
 1483 0015 8B7F30   		movl	48(%rdi), %edi
 1484              	.LVL103:
  57:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 1/block_size scaling */
 1485              		.loc 1 57 24 view .LVU508
 1486 0018 0FAFC6   		imull	%esi, %eax
  57:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 1/block_size scaling */
 1487              		.loc 1 57 6 view .LVU509
 1488 001b 39D0     		cmpl	%edx, %eax
 1489 001d 0F866D01 		jbe	.L117
 1489      0000
  65:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 2/block_size scaling */
 1490              		.loc 1 65 10 is_stmt 1 view .LVU510
  65:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 2/block_size scaling */
 1491              		.loc 1 65 73 is_stmt 0 view .LVU511
 1492 0023 8D0C12   		leal	(%rdx,%rdx), %ecx
  65:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 2/block_size scaling */
 1493              		.loc 1 65 13 view .LVU512
 1494 0026 39C8     		cmpl	%ecx, %eax
 1495 0028 0F86F200 		jbe	.L118
 1495      0000
  73:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 3/block_size scaling */
 1496              		.loc 1 73 10 is_stmt 1 view .LVU513
  73:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 3/block_size scaling */
 1497              		.loc 1 73 73 is_stmt 0 view .LVU514
 1498 002e 01D1     		addl	%edx, %ecx
  73:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 3/block_size scaling */
 1499              		.loc 1 73 13 view .LVU515
 1500 0030 39C8     		cmpl	%ecx, %eax
 1501 0032 0F86D001 		jbe	.L119
 1501      0000
  81:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 4/block_size scaling */
 1502              		.loc 1 81 10 is_stmt 1 view .LVU516
  81:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 4/block_size scaling */
 1503              		.loc 1 81 73 is_stmt 0 view .LVU517
 1504 0038 448D0495 		leal	0(,%rdx,4), %r8d
 1504      00000000 
  81:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 4/block_size scaling */
 1505              		.loc 1 81 13 view .LVU518
 1506 0040 4439C0   		cmpl	%r8d, %eax
 1507 0043 0F860702 		jbe	.L120
 1507      0000
  89:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 5/block_size scaling */
 1508              		.loc 1 89 10 is_stmt 1 view .LVU519
  89:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 5/block_size scaling */
 1509              		.loc 1 89 73 is_stmt 0 view .LVU520
 1510 0049 4101D0   		addl	%edx, %r8d
  89:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 5/block_size scaling */
 1511              		.loc 1 89 13 view .LVU521
 1512 004c 4439C0   		cmpl	%r8d, %eax
 1513 004f 0F866E01 		jbe	.L121
 1513      0000
  97:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 6/block_size scaling */
 1514              		.loc 1 97 10 is_stmt 1 view .LVU522
  97:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 6/block_size scaling */
 1515              		.loc 1 97 73 is_stmt 0 view .LVU523
 1516 0055 01C9     		addl	%ecx, %ecx
  97:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 6/block_size scaling */
 1517              		.loc 1 97 13 view .LVU524
 1518 0057 39C8     		cmpl	%ecx, %eax
 1519 0059 0F866D02 		jbe	.L122
 1519      0000
 105:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 7/block_size scaling */
 1520              		.loc 1 105 10 is_stmt 1 view .LVU525
 105:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 7/block_size scaling */
 1521              		.loc 1 105 73 is_stmt 0 view .LVU526
 1522 005f 8D0CD500 		leal	0(,%rdx,8), %ecx
 1522      000000
 1523 0066 4189C9   		movl	%ecx, %r9d
 1524 0069 4129D1   		subl	%edx, %r9d
 105:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 7/block_size scaling */
 1525              		.loc 1 105 13 view .LVU527
 1526 006c 4439C8   		cmpl	%r9d, %eax
 1527 006f 0F869B02 		jbe	.L123
 1527      0000
 113:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 8/block_size scaling */
 1528              		.loc 1 113 10 is_stmt 1 view .LVU528
 113:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 8/block_size scaling */
 1529              		.loc 1 113 13 is_stmt 0 view .LVU529
 1530 0075 39C8     		cmpl	%ecx, %eax
 1531 0077 0F861102 		jbe	.L124
 1531      0000
 121:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 9/block_size scaling */
 1532              		.loc 1 121 10 is_stmt 1 view .LVU530
 121:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 9/block_size scaling */
 1533              		.loc 1 121 73 is_stmt 0 view .LVU531
 1534 007d 01D1     		addl	%edx, %ecx
 121:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 9/block_size scaling */
 1535              		.loc 1 121 13 view .LVU532
 1536 007f 39C8     		cmpl	%ecx, %eax
 1537 0081 0F86D802 		jbe	.L125
 1537      0000
 129:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 10/block_size scaling */
 1538              		.loc 1 129 10 is_stmt 1 view .LVU533
 129:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 10/block_size scaling */
 1539              		.loc 1 129 73 is_stmt 0 view .LVU534
 1540 0087 4501C0   		addl	%r8d, %r8d
 129:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 10/block_size scaling */
 1541              		.loc 1 129 13 view .LVU535
 1542 008a 4439C0   		cmpl	%r8d, %eax
 1543 008d 0F860A03 		jbe	.L126
 1543      0000
 137:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 11/block_size scaling */
 1544              		.loc 1 137 10 is_stmt 1 view .LVU536
 137:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 11/block_size scaling */
 1545              		.loc 1 137 73 is_stmt 0 view .LVU537
 1546 0093 8D0C92   		leal	(%rdx,%rdx,4), %ecx
 1547 0096 8D0C4A   		leal	(%rdx,%rcx,2), %ecx
 137:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 11/block_size scaling */
 1548              		.loc 1 137 13 view .LVU538
 1549 0099 39C8     		cmpl	%ecx, %eax
 1550 009b 0F864003 		jbe	.L127
 1550      0000
 145:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 12/block_size scaling */
 1551              		.loc 1 145 10 is_stmt 1 view .LVU539
 145:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 12/block_size scaling */
 1552              		.loc 1 145 73 is_stmt 0 view .LVU540
 1553 00a1 8D0C52   		leal	(%rdx,%rdx,2), %ecx
 1554 00a4 C1E102   		sall	$2, %ecx
 145:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 12/block_size scaling */
 1555              		.loc 1 145 13 view .LVU541
 1556 00a7 39C8     		cmpl	%ecx, %eax
 1557 00a9 0F867803 		jbe	.L128
 1557      0000
 153:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 13/block_size scaling */
 1558              		.loc 1 153 10 is_stmt 1 view .LVU542
 153:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 13/block_size scaling */
 1559              		.loc 1 153 73 is_stmt 0 view .LVU543
 1560 00af 01D1     		addl	%edx, %ecx
 153:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 13/block_size scaling */
 1561              		.loc 1 153 13 view .LVU544
 1562 00b1 39C8     		cmpl	%ecx, %eax
 1563 00b3 0F86B403 		jbe	.L129
 1563      0000
 161:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 14/block_size scaling */
 1564              		.loc 1 161 10 is_stmt 1 view .LVU545
 161:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 14/block_size scaling */
 1565              		.loc 1 161 73 is_stmt 0 view .LVU546
 1566 00b9 6BCA0E   		imull	$14, %edx, %ecx
 161:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 14/block_size scaling */
 1567              		.loc 1 161 13 view .LVU547
 1568 00bc 39C8     		cmpl	%ecx, %eax
 1569 00be 0F862D04 		jbe	.L130
 1569      0000
 169:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 15/block_size scaling */
 1570              		.loc 1 169 10 is_stmt 1 view .LVU548
 169:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 15/block_size scaling */
 1571              		.loc 1 169 73 is_stmt 0 view .LVU549
 1572 00c4 89D1     		movl	%edx, %ecx
 1573 00c6 C1E104   		sall	$4, %ecx
 1574 00c9 29D1     		subl	%edx, %ecx
 169:fltk-1.3.4-1/jpeg/jdinput.c ****     /* Provide 15/block_size scaling */
 1575              		.loc 1 169 13 view .LVU550
 1576 00cb 39C8     		cmpl	%ecx, %eax
 1577 00cd 0F87E003 		ja	.L110
 1577      0000
 171:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 15L, (long) cinfo->block_size);
 1578              		.loc 1 171 5 is_stmt 1 view .LVU551
 172:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1579              		.loc 1 172 7 is_stmt 0 view .LVU552
 1580 00d3 4889F8   		movq	%rdi, %rax
 1581 00d6 48C1E004 		salq	$4, %rax
 1582 00da 4829F8   		subq	%rdi, %rax
 1583 00dd 4889C7   		movq	%rax, %rdi
 1584 00e0 E8000000 		call	jdiv_round_up@PLT
 1584      00
 1585              	.LVL104:
 174:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 15;
 1586              		.loc 1 174 7 view .LVU553
 1587 00e5 4863B32C 		movslq	556(%rbx), %rsi
 1587      020000
 171:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 15L, (long) cinfo->block_size);
 1588              		.loc 1 171 27 view .LVU554
 1589 00ec 89838800 		movl	%eax, 136(%rbx)
 1589      0000
 173:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 15L, (long) cinfo->block_size);
 1590              		.loc 1 173 5 is_stmt 1 view .LVU555
 174:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 15;
 1591              		.loc 1 174 21 is_stmt 0 view .LVU556
 1592 00f2 8B4334   		movl	52(%rbx), %eax
 174:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 15;
 1593              		.loc 1 174 7 view .LVU557
 1594 00f5 4889C7   		movq	%rax, %rdi
 1595 00f8 48C1E704 		salq	$4, %rdi
 1596 00fc 4829C7   		subq	%rax, %rdi
 1597 00ff E8000000 		call	jdiv_round_up@PLT
 1597      00
 1598              	.LVL105:
 173:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 15L, (long) cinfo->block_size);
 1599              		.loc 1 173 28 view .LVU558
 1600 0104 89838C00 		movl	%eax, 140(%rbx)
 1600      0000
 175:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 15;
 1601              		.loc 1 175 5 is_stmt 1 view .LVU559
 176:fltk-1.3.4-1/jpeg/jdinput.c ****   } else {
 1602              		.loc 1 176 5 view .LVU560
 175:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 15;
 1603              		.loc 1 175 34 is_stmt 0 view .LVU561
 1604 010a 48B80F00 		movabsq	$64424509455, %rax
 1604      00000F00 
 1604      0000
 1605 0114 488983A8 		movq	%rax, 424(%rbx)
 1605      010000
 1606 011b EB3A     		jmp	.L96
 1607 011d 0F1F00   		.p2align 4,,10
 1608              		.p2align 3
 1609              	.L118:
  67:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 2L, (long) cinfo->block_size);
 1610              		.loc 1 67 5 is_stmt 1 view .LVU562
  68:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1611              		.loc 1 68 7 is_stmt 0 view .LVU563
 1612 0120 4801FF   		addq	%rdi, %rdi
 1613 0123 E8000000 		call	jdiv_round_up@PLT
 1613      00
 1614              	.LVL106:
  70:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 2;
 1615              		.loc 1 70 21 view .LVU564
 1616 0128 8B7B34   		movl	52(%rbx), %edi
  70:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 2;
 1617              		.loc 1 70 7 view .LVU565
 1618 012b 4863B32C 		movslq	556(%rbx), %rsi
 1618      020000
  67:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 2L, (long) cinfo->block_size);
 1619              		.loc 1 67 27 view .LVU566
 1620 0132 89838800 		movl	%eax, 136(%rbx)
 1620      0000
  69:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 2L, (long) cinfo->block_size);
 1621              		.loc 1 69 5 is_stmt 1 view .LVU567
  70:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 2;
 1622              		.loc 1 70 7 is_stmt 0 view .LVU568
 1623 0138 4801FF   		addq	%rdi, %rdi
 1624 013b E8000000 		call	jdiv_round_up@PLT
 1624      00
 1625              	.LVL107:
  69:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 2L, (long) cinfo->block_size);
 1626              		.loc 1 69 28 view .LVU569
 1627 0140 89838C00 		movl	%eax, 140(%rbx)
 1627      0000
  71:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 2;
 1628              		.loc 1 71 5 is_stmt 1 view .LVU570
  72:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 3) {
 1629              		.loc 1 72 5 view .LVU571
  71:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 2;
 1630              		.loc 1 71 34 is_stmt 0 view .LVU572
 1631 0146 48B80200 		movabsq	$8589934594, %rax
 1631      00000200 
 1631      0000
 1632 0150 488983A8 		movq	%rax, 424(%rbx)
 1632      010000
 1633              	.L96:
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1634              		.loc 1 188 3 is_stmt 1 view .LVU573
 1635              	.LVL108:
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1636              		.loc 1 188 3 is_stmt 0 view .LVU574
 1637 0157 8B4B38   		movl	56(%rbx), %ecx
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1638              		.loc 1 188 24 view .LVU575
 1639 015a 488B8330 		movq	304(%rbx), %rax
 1639      010000
 1640              	.LVL109:
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1641              		.loc 1 188 44 is_stmt 1 view .LVU576
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1642              		.loc 1 188 11 is_stmt 0 view .LVU577
 1643 0161 31D2     		xorl	%edx, %edx
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1644              		.loc 1 188 3 view .LVU578
 1645 0163 85C9     		testl	%ecx, %ecx
 1646 0165 7E27     		jle	.L94
 1647              	.LVL110:
 1648 0167 660F1F84 		.p2align 4,,10
 1648      00000000 
 1648      00
 1649              		.p2align 3
 1650              	.L111:
 190:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_v_scaled_size = cinfo->min_DCT_v_scaled_size;
 1651              		.loc 1 190 5 is_stmt 1 view .LVU579
 190:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_v_scaled_size = cinfo->min_DCT_v_scaled_size;
 1652              		.loc 1 190 39 is_stmt 0 view .LVU580
 1653 0170 8B8BA801 		movl	424(%rbx), %ecx
 1653      0000
 189:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->min_DCT_h_scaled_size;
 1654              		.loc 1 189 10 view .LVU581
 1655 0176 83C201   		addl	$1, %edx
 1656              	.LVL111:
 189:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->min_DCT_h_scaled_size;
 1657              		.loc 1 189 21 view .LVU582
 1658 0179 4883C060 		addq	$96, %rax
 1659              	.LVL112:
 190:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_v_scaled_size = cinfo->min_DCT_v_scaled_size;
 1660              		.loc 1 190 32 view .LVU583
 1661 017d 8948C4   		movl	%ecx, -60(%rax)
 191:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 1662              		.loc 1 191 5 is_stmt 1 view .LVU584
 191:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 1663              		.loc 1 191 39 is_stmt 0 view .LVU585
 1664 0180 8B8BAC01 		movl	428(%rbx), %ecx
 1664      0000
 191:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 1665              		.loc 1 191 32 view .LVU586
 1666 0186 8948C8   		movl	%ecx, -56(%rax)
 189:fltk-1.3.4-1/jpeg/jdinput.c ****     compptr->DCT_h_scaled_size = cinfo->min_DCT_h_scaled_size;
 1667              		.loc 1 189 8 is_stmt 1 view .LVU587
 1668              	.LVL113:
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1669              		.loc 1 188 44 view .LVU588
 188:fltk-1.3.4-1/jpeg/jdinput.c ****        ci++, compptr++) {
 1670              		.loc 1 188 3 is_stmt 0 view .LVU589
 1671 0189 395338   		cmpl	%edx, 56(%rbx)
 1672 018c 7FE2     		jg	.L111
 1673              	.LVL114:
 1674              	.L94:
 204:fltk-1.3.4-1/jpeg/jdinput.c **** 
 1675              		.loc 1 204 1 view .LVU590
 1676 018e 5B       		popq	%rbx
 1677              		.cfi_remember_state
 1678              		.cfi_def_cfa_offset 8
 1679              	.LVL115:
 204:fltk-1.3.4-1/jpeg/jdinput.c **** 
 1680              		.loc 1 204 1 view .LVU591
 1681 018f C3       		ret
 1682              	.LVL116:
 1683              		.p2align 4,,10
 1684              		.p2align 3
 1685              	.L117:
 1686              		.cfi_restore_state
  59:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width, (long) cinfo->block_size);
 1687              		.loc 1 59 5 is_stmt 1 view .LVU592
  60:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1688              		.loc 1 60 7 is_stmt 0 view .LVU593
 1689 0190 E8000000 		call	jdiv_round_up@PLT
 1689      00
 1690              	.LVL117:
  62:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 1;
 1691              		.loc 1 62 7 view .LVU594
 1692 0195 4863B32C 		movslq	556(%rbx), %rsi
 1692      020000
 1693 019c 8B7B34   		movl	52(%rbx), %edi
  59:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width, (long) cinfo->block_size);
 1694              		.loc 1 59 27 view .LVU595
 1695 019f 89838800 		movl	%eax, 136(%rbx)
 1695      0000
  61:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height, (long) cinfo->block_size);
 1696              		.loc 1 61 5 is_stmt 1 view .LVU596
  62:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 1;
 1697              		.loc 1 62 7 is_stmt 0 view .LVU597
 1698 01a5 E8000000 		call	jdiv_round_up@PLT
 1698      00
 1699              	.LVL118:
  61:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height, (long) cinfo->block_size);
 1700              		.loc 1 61 28 view .LVU598
 1701 01aa 89838C00 		movl	%eax, 140(%rbx)
 1701      0000
  63:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 1;
 1702              		.loc 1 63 5 is_stmt 1 view .LVU599
  64:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 2) {
 1703              		.loc 1 64 5 view .LVU600
  63:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 1;
 1704              		.loc 1 63 34 is_stmt 0 view .LVU601
 1705 01b0 48B80100 		movabsq	$4294967297, %rax
 1705      00000100 
 1705      0000
 1706 01ba 488983A8 		movq	%rax, 424(%rbx)
 1706      010000
 1707 01c1 EB94     		jmp	.L96
 1708              	.L121:
  91:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 5L, (long) cinfo->block_size);
 1709              		.loc 1 91 5 is_stmt 1 view .LVU602
  92:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1710              		.loc 1 92 7 is_stmt 0 view .LVU603
 1711 01c3 488D3CBF 		leaq	(%rdi,%rdi,4), %rdi
 1712 01c7 E8000000 		call	jdiv_round_up@PLT
 1712      00
 1713              	.LVL119:
  94:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 5;
 1714              		.loc 1 94 7 view .LVU604
 1715 01cc 4863B32C 		movslq	556(%rbx), %rsi
 1715      020000
  91:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 5L, (long) cinfo->block_size);
 1716              		.loc 1 91 27 view .LVU605
 1717 01d3 89838800 		movl	%eax, 136(%rbx)
 1717      0000
  93:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 5L, (long) cinfo->block_size);
 1718              		.loc 1 93 5 is_stmt 1 view .LVU606
  94:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 5;
 1719              		.loc 1 94 21 is_stmt 0 view .LVU607
 1720 01d9 8B4334   		movl	52(%rbx), %eax
  94:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 5;
 1721              		.loc 1 94 7 view .LVU608
 1722 01dc 488D3C80 		leaq	(%rax,%rax,4), %rdi
 1723 01e0 E8000000 		call	jdiv_round_up@PLT
 1723      00
 1724              	.LVL120:
  93:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 5L, (long) cinfo->block_size);
 1725              		.loc 1 93 28 view .LVU609
 1726 01e5 89838C00 		movl	%eax, 140(%rbx)
 1726      0000
  95:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 5;
 1727              		.loc 1 95 5 is_stmt 1 view .LVU610
  96:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 6) {
 1728              		.loc 1 96 5 view .LVU611
  95:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 5;
 1729              		.loc 1 95 34 is_stmt 0 view .LVU612
 1730 01eb 48B80500 		movabsq	$21474836485, %rax
 1730      00000500 
 1730      0000
 1731 01f5 488983A8 		movq	%rax, 424(%rbx)
 1731      010000
 1732 01fc E956FFFF 		jmp	.L96
 1732      FF
 1733              		.p2align 4,,10
 1734 0201 0F1F8000 		.p2align 3
 1734      000000
 1735              	.L119:
  75:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 3L, (long) cinfo->block_size);
 1736              		.loc 1 75 5 is_stmt 1 view .LVU613
  76:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1737              		.loc 1 76 7 is_stmt 0 view .LVU614
 1738 0208 488D3C7F 		leaq	(%rdi,%rdi,2), %rdi
 1739 020c E8000000 		call	jdiv_round_up@PLT
 1739      00
 1740              	.LVL121:
  78:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 3;
 1741              		.loc 1 78 7 view .LVU615
 1742 0211 4863B32C 		movslq	556(%rbx), %rsi
 1742      020000
  75:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 3L, (long) cinfo->block_size);
 1743              		.loc 1 75 27 view .LVU616
 1744 0218 89838800 		movl	%eax, 136(%rbx)
 1744      0000
  77:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 3L, (long) cinfo->block_size);
 1745              		.loc 1 77 5 is_stmt 1 view .LVU617
  78:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 3;
 1746              		.loc 1 78 21 is_stmt 0 view .LVU618
 1747 021e 8B4334   		movl	52(%rbx), %eax
  78:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 3;
 1748              		.loc 1 78 7 view .LVU619
 1749 0221 488D3C40 		leaq	(%rax,%rax,2), %rdi
 1750 0225 E8000000 		call	jdiv_round_up@PLT
 1750      00
 1751              	.LVL122:
  77:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 3L, (long) cinfo->block_size);
 1752              		.loc 1 77 28 view .LVU620
 1753 022a 89838C00 		movl	%eax, 140(%rbx)
 1753      0000
  79:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 3;
 1754              		.loc 1 79 5 is_stmt 1 view .LVU621
  80:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 4) {
 1755              		.loc 1 80 5 view .LVU622
  79:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 3;
 1756              		.loc 1 79 34 is_stmt 0 view .LVU623
 1757 0230 48B80300 		movabsq	$12884901891, %rax
 1757      00000300 
 1757      0000
 1758 023a 488983A8 		movq	%rax, 424(%rbx)
 1758      010000
 1759 0241 E911FFFF 		jmp	.L96
 1759      FF
 1760 0246 662E0F1F 		.p2align 4,,10
 1760      84000000 
 1760      0000
 1761              		.p2align 3
 1762              	.L120:
  83:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 4L, (long) cinfo->block_size);
 1763              		.loc 1 83 5 is_stmt 1 view .LVU624
  84:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1764              		.loc 1 84 7 is_stmt 0 view .LVU625
 1765 0250 48C1E702 		salq	$2, %rdi
 1766 0254 E8000000 		call	jdiv_round_up@PLT
 1766      00
 1767              	.LVL123:
  86:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 4;
 1768              		.loc 1 86 21 view .LVU626
 1769 0259 8B7B34   		movl	52(%rbx), %edi
  86:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 4;
 1770              		.loc 1 86 7 view .LVU627
 1771 025c 4863B32C 		movslq	556(%rbx), %rsi
 1771      020000
  83:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 4L, (long) cinfo->block_size);
 1772              		.loc 1 83 27 view .LVU628
 1773 0263 89838800 		movl	%eax, 136(%rbx)
 1773      0000
  85:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 4L, (long) cinfo->block_size);
 1774              		.loc 1 85 5 is_stmt 1 view .LVU629
  86:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 4;
 1775              		.loc 1 86 7 is_stmt 0 view .LVU630
 1776 0269 48C1E702 		salq	$2, %rdi
 1777 026d E8000000 		call	jdiv_round_up@PLT
 1777      00
 1778              	.LVL124:
  85:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 4L, (long) cinfo->block_size);
 1779              		.loc 1 85 28 view .LVU631
 1780 0272 89838C00 		movl	%eax, 140(%rbx)
 1780      0000
  87:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 4;
 1781              		.loc 1 87 5 is_stmt 1 view .LVU632
  88:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 5) {
 1782              		.loc 1 88 5 view .LVU633
  87:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 4;
 1783              		.loc 1 87 34 is_stmt 0 view .LVU634
 1784 0278 48B80400 		movabsq	$17179869188, %rax
 1784      00000400 
 1784      0000
 1785 0282 488983A8 		movq	%rax, 424(%rbx)
 1785      010000
 1786 0289 E9C9FEFF 		jmp	.L96
 1786      FF
 1787              	.L124:
 115:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 8L, (long) cinfo->block_size);
 1788              		.loc 1 115 5 is_stmt 1 view .LVU635
 116:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1789              		.loc 1 116 7 is_stmt 0 view .LVU636
 1790 028e 48C1E703 		salq	$3, %rdi
 1791 0292 E8000000 		call	jdiv_round_up@PLT
 1791      00
 1792              	.LVL125:
 118:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 8;
 1793              		.loc 1 118 21 view .LVU637
 1794 0297 8B7B34   		movl	52(%rbx), %edi
 118:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 8;
 1795              		.loc 1 118 7 view .LVU638
 1796 029a 4863B32C 		movslq	556(%rbx), %rsi
 1796      020000
 115:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 8L, (long) cinfo->block_size);
 1797              		.loc 1 115 27 view .LVU639
 1798 02a1 89838800 		movl	%eax, 136(%rbx)
 1798      0000
 117:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 8L, (long) cinfo->block_size);
 1799              		.loc 1 117 5 is_stmt 1 view .LVU640
 118:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 8;
 1800              		.loc 1 118 7 is_stmt 0 view .LVU641
 1801 02a7 48C1E703 		salq	$3, %rdi
 1802 02ab E8000000 		call	jdiv_round_up@PLT
 1802      00
 1803              	.LVL126:
 117:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 8L, (long) cinfo->block_size);
 1804              		.loc 1 117 28 view .LVU642
 1805 02b0 89838C00 		movl	%eax, 140(%rbx)
 1805      0000
 119:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 8;
 1806              		.loc 1 119 5 is_stmt 1 view .LVU643
 120:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 9) {
 1807              		.loc 1 120 5 view .LVU644
 119:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 8;
 1808              		.loc 1 119 34 is_stmt 0 view .LVU645
 1809 02b6 48B80800 		movabsq	$34359738376, %rax
 1809      00000800 
 1809      0000
 1810 02c0 488983A8 		movq	%rax, 424(%rbx)
 1810      010000
 1811 02c7 E98BFEFF 		jmp	.L96
 1811      FF
 1812              	.L122:
  99:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 6L, (long) cinfo->block_size);
 1813              		.loc 1 99 5 is_stmt 1 view .LVU646
 100:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1814              		.loc 1 100 7 is_stmt 0 view .LVU647
 1815 02cc 488D3C7F 		leaq	(%rdi,%rdi,2), %rdi
 1816 02d0 4801FF   		addq	%rdi, %rdi
 1817 02d3 E8000000 		call	jdiv_round_up@PLT
 1817      00
 1818              	.LVL127:
 102:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 6;
 1819              		.loc 1 102 7 view .LVU648
 1820 02d8 4863B32C 		movslq	556(%rbx), %rsi
 1820      020000
  99:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 6L, (long) cinfo->block_size);
 1821              		.loc 1 99 27 view .LVU649
 1822 02df 89838800 		movl	%eax, 136(%rbx)
 1822      0000
 101:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 6L, (long) cinfo->block_size);
 1823              		.loc 1 101 5 is_stmt 1 view .LVU650
 102:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 6;
 1824              		.loc 1 102 21 is_stmt 0 view .LVU651
 1825 02e5 8B4334   		movl	52(%rbx), %eax
 102:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 6;
 1826              		.loc 1 102 7 view .LVU652
 1827 02e8 488D3C40 		leaq	(%rax,%rax,2), %rdi
 1828 02ec 4801FF   		addq	%rdi, %rdi
 1829 02ef E8000000 		call	jdiv_round_up@PLT
 1829      00
 1830              	.LVL128:
 101:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 6L, (long) cinfo->block_size);
 1831              		.loc 1 101 28 view .LVU653
 1832 02f4 89838C00 		movl	%eax, 140(%rbx)
 1832      0000
 103:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 6;
 1833              		.loc 1 103 5 is_stmt 1 view .LVU654
 104:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 7) {
 1834              		.loc 1 104 5 view .LVU655
 103:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 6;
 1835              		.loc 1 103 34 is_stmt 0 view .LVU656
 1836 02fa 48B80600 		movabsq	$25769803782, %rax
 1836      00000600 
 1836      0000
 1837 0304 488983A8 		movq	%rax, 424(%rbx)
 1837      010000
 1838 030b E947FEFF 		jmp	.L96
 1838      FF
 1839              	.L123:
 107:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 7L, (long) cinfo->block_size);
 1840              		.loc 1 107 5 is_stmt 1 view .LVU657
 108:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1841              		.loc 1 108 7 is_stmt 0 view .LVU658
 1842 0310 488D04FD 		leaq	0(,%rdi,8), %rax
 1842      00000000 
 1843 0318 4829F8   		subq	%rdi, %rax
 1844 031b 4889C7   		movq	%rax, %rdi
 1845 031e E8000000 		call	jdiv_round_up@PLT
 1845      00
 1846              	.LVL129:
 110:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 7;
 1847              		.loc 1 110 7 view .LVU659
 1848 0323 4863B32C 		movslq	556(%rbx), %rsi
 1848      020000
 107:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 7L, (long) cinfo->block_size);
 1849              		.loc 1 107 27 view .LVU660
 1850 032a 89838800 		movl	%eax, 136(%rbx)
 1850      0000
 109:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 7L, (long) cinfo->block_size);
 1851              		.loc 1 109 5 is_stmt 1 view .LVU661
 110:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 7;
 1852              		.loc 1 110 21 is_stmt 0 view .LVU662
 1853 0330 8B4334   		movl	52(%rbx), %eax
 110:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 7;
 1854              		.loc 1 110 7 view .LVU663
 1855 0333 488D3CC5 		leaq	0(,%rax,8), %rdi
 1855      00000000 
 1856 033b 4829C7   		subq	%rax, %rdi
 1857 033e E8000000 		call	jdiv_round_up@PLT
 1857      00
 1858              	.LVL130:
 109:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 7L, (long) cinfo->block_size);
 1859              		.loc 1 109 28 view .LVU664
 1860 0343 89838C00 		movl	%eax, 140(%rbx)
 1860      0000
 111:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 7;
 1861              		.loc 1 111 5 is_stmt 1 view .LVU665
 112:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 8) {
 1862              		.loc 1 112 5 view .LVU666
 111:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 7;
 1863              		.loc 1 111 34 is_stmt 0 view .LVU667
 1864 0349 48B80700 		movabsq	$30064771079, %rax
 1864      00000700 
 1864      0000
 1865 0353 488983A8 		movq	%rax, 424(%rbx)
 1865      010000
 1866 035a E9F8FDFF 		jmp	.L96
 1866      FF
 1867              	.L125:
 123:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 9L, (long) cinfo->block_size);
 1868              		.loc 1 123 5 is_stmt 1 view .LVU668
 124:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1869              		.loc 1 124 7 is_stmt 0 view .LVU669
 1870 035f 488D3CFF 		leaq	(%rdi,%rdi,8), %rdi
 1871 0363 E8000000 		call	jdiv_round_up@PLT
 1871      00
 1872              	.LVL131:
 126:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 9;
 1873              		.loc 1 126 7 view .LVU670
 1874 0368 4863B32C 		movslq	556(%rbx), %rsi
 1874      020000
 123:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 9L, (long) cinfo->block_size);
 1875              		.loc 1 123 27 view .LVU671
 1876 036f 89838800 		movl	%eax, 136(%rbx)
 1876      0000
 125:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 9L, (long) cinfo->block_size);
 1877              		.loc 1 125 5 is_stmt 1 view .LVU672
 126:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 9;
 1878              		.loc 1 126 21 is_stmt 0 view .LVU673
 1879 0375 8B4334   		movl	52(%rbx), %eax
 126:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 9;
 1880              		.loc 1 126 7 view .LVU674
 1881 0378 488D3CC0 		leaq	(%rax,%rax,8), %rdi
 1882 037c E8000000 		call	jdiv_round_up@PLT
 1882      00
 1883              	.LVL132:
 125:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 9L, (long) cinfo->block_size);
 1884              		.loc 1 125 28 view .LVU675
 1885 0381 89838C00 		movl	%eax, 140(%rbx)
 1885      0000
 127:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 9;
 1886              		.loc 1 127 5 is_stmt 1 view .LVU676
 128:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 10) {
 1887              		.loc 1 128 5 view .LVU677
 127:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 9;
 1888              		.loc 1 127 34 is_stmt 0 view .LVU678
 1889 0387 48B80900 		movabsq	$38654705673, %rax
 1889      00000900 
 1889      0000
 1890 0391 488983A8 		movq	%rax, 424(%rbx)
 1890      010000
 1891 0398 E9BAFDFF 		jmp	.L96
 1891      FF
 1892              	.L126:
 131:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 10L, (long) cinfo->block_size);
 1893              		.loc 1 131 5 is_stmt 1 view .LVU679
 132:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1894              		.loc 1 132 7 is_stmt 0 view .LVU680
 1895 039d 488D3CBF 		leaq	(%rdi,%rdi,4), %rdi
 1896 03a1 4801FF   		addq	%rdi, %rdi
 1897 03a4 E8000000 		call	jdiv_round_up@PLT
 1897      00
 1898              	.LVL133:
 134:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 10;
 1899              		.loc 1 134 7 view .LVU681
 1900 03a9 4863B32C 		movslq	556(%rbx), %rsi
 1900      020000
 131:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 10L, (long) cinfo->block_size);
 1901              		.loc 1 131 27 view .LVU682
 1902 03b0 89838800 		movl	%eax, 136(%rbx)
 1902      0000
 133:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 10L, (long) cinfo->block_size);
 1903              		.loc 1 133 5 is_stmt 1 view .LVU683
 134:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 10;
 1904              		.loc 1 134 21 is_stmt 0 view .LVU684
 1905 03b6 8B4334   		movl	52(%rbx), %eax
 134:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 10;
 1906              		.loc 1 134 7 view .LVU685
 1907 03b9 488D3C80 		leaq	(%rax,%rax,4), %rdi
 1908 03bd 4801FF   		addq	%rdi, %rdi
 1909 03c0 E8000000 		call	jdiv_round_up@PLT
 1909      00
 1910              	.LVL134:
 133:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 10L, (long) cinfo->block_size);
 1911              		.loc 1 133 28 view .LVU686
 1912 03c5 89838C00 		movl	%eax, 140(%rbx)
 1912      0000
 135:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 10;
 1913              		.loc 1 135 5 is_stmt 1 view .LVU687
 136:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 11) {
 1914              		.loc 1 136 5 view .LVU688
 135:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 10;
 1915              		.loc 1 135 34 is_stmt 0 view .LVU689
 1916 03cb 48B80A00 		movabsq	$42949672970, %rax
 1916      00000A00 
 1916      0000
 1917 03d5 488983A8 		movq	%rax, 424(%rbx)
 1917      010000
 1918 03dc E976FDFF 		jmp	.L96
 1918      FF
 1919              	.L127:
 139:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 11L, (long) cinfo->block_size);
 1920              		.loc 1 139 5 is_stmt 1 view .LVU690
 140:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1921              		.loc 1 140 7 is_stmt 0 view .LVU691
 1922 03e1 488D04BF 		leaq	(%rdi,%rdi,4), %rax
 1923 03e5 488D3C47 		leaq	(%rdi,%rax,2), %rdi
 1924 03e9 E8000000 		call	jdiv_round_up@PLT
 1924      00
 1925              	.LVL135:
 142:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 11;
 1926              		.loc 1 142 7 view .LVU692
 1927 03ee 4863B32C 		movslq	556(%rbx), %rsi
 1927      020000
 139:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 11L, (long) cinfo->block_size);
 1928              		.loc 1 139 27 view .LVU693
 1929 03f5 89838800 		movl	%eax, 136(%rbx)
 1929      0000
 141:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 11L, (long) cinfo->block_size);
 1930              		.loc 1 141 5 is_stmt 1 view .LVU694
 142:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 11;
 1931              		.loc 1 142 21 is_stmt 0 view .LVU695
 1932 03fb 8B4334   		movl	52(%rbx), %eax
 142:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 11;
 1933              		.loc 1 142 7 view .LVU696
 1934 03fe 488D1480 		leaq	(%rax,%rax,4), %rdx
 1935 0402 488D3C50 		leaq	(%rax,%rdx,2), %rdi
 1936 0406 E8000000 		call	jdiv_round_up@PLT
 1936      00
 1937              	.LVL136:
 141:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 11L, (long) cinfo->block_size);
 1938              		.loc 1 141 28 view .LVU697
 1939 040b 89838C00 		movl	%eax, 140(%rbx)
 1939      0000
 143:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 11;
 1940              		.loc 1 143 5 is_stmt 1 view .LVU698
 144:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 12) {
 1941              		.loc 1 144 5 view .LVU699
 143:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 11;
 1942              		.loc 1 143 34 is_stmt 0 view .LVU700
 1943 0411 48B80B00 		movabsq	$47244640267, %rax
 1943      00000B00 
 1943      0000
 1944 041b 488983A8 		movq	%rax, 424(%rbx)
 1944      010000
 1945 0422 E930FDFF 		jmp	.L96
 1945      FF
 1946              	.L128:
 147:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 12L, (long) cinfo->block_size);
 1947              		.loc 1 147 5 is_stmt 1 view .LVU701
 148:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1948              		.loc 1 148 7 is_stmt 0 view .LVU702
 1949 0427 488D3C7F 		leaq	(%rdi,%rdi,2), %rdi
 1950 042b 48C1E702 		salq	$2, %rdi
 1951 042f E8000000 		call	jdiv_round_up@PLT
 1951      00
 1952              	.LVL137:
 150:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 12;
 1953              		.loc 1 150 7 view .LVU703
 1954 0434 4863B32C 		movslq	556(%rbx), %rsi
 1954      020000
 147:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 12L, (long) cinfo->block_size);
 1955              		.loc 1 147 27 view .LVU704
 1956 043b 89838800 		movl	%eax, 136(%rbx)
 1956      0000
 149:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 12L, (long) cinfo->block_size);
 1957              		.loc 1 149 5 is_stmt 1 view .LVU705
 150:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 12;
 1958              		.loc 1 150 21 is_stmt 0 view .LVU706
 1959 0441 8B4334   		movl	52(%rbx), %eax
 150:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 12;
 1960              		.loc 1 150 7 view .LVU707
 1961 0444 488D3C40 		leaq	(%rax,%rax,2), %rdi
 1962 0448 48C1E702 		salq	$2, %rdi
 1963 044c E8000000 		call	jdiv_round_up@PLT
 1963      00
 1964              	.LVL138:
 149:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 12L, (long) cinfo->block_size);
 1965              		.loc 1 149 28 view .LVU708
 1966 0451 89838C00 		movl	%eax, 140(%rbx)
 1966      0000
 151:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 12;
 1967              		.loc 1 151 5 is_stmt 1 view .LVU709
 152:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 13) {
 1968              		.loc 1 152 5 view .LVU710
 151:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 12;
 1969              		.loc 1 151 34 is_stmt 0 view .LVU711
 1970 0457 48B80C00 		movabsq	$51539607564, %rax
 1970      00000C00 
 1970      0000
 1971 0461 488983A8 		movq	%rax, 424(%rbx)
 1971      010000
 1972 0468 E9EAFCFF 		jmp	.L96
 1972      FF
 1973              	.L129:
 155:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 13L, (long) cinfo->block_size);
 1974              		.loc 1 155 5 is_stmt 1 view .LVU712
 156:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 1975              		.loc 1 156 7 is_stmt 0 view .LVU713
 1976 046d 488D047F 		leaq	(%rdi,%rdi,2), %rax
 1977 0471 488D3C87 		leaq	(%rdi,%rax,4), %rdi
 1978 0475 E8000000 		call	jdiv_round_up@PLT
 1978      00
 1979              	.LVL139:
 158:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 13;
 1980              		.loc 1 158 7 view .LVU714
 1981 047a 4863B32C 		movslq	556(%rbx), %rsi
 1981      020000
 155:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 13L, (long) cinfo->block_size);
 1982              		.loc 1 155 27 view .LVU715
 1983 0481 89838800 		movl	%eax, 136(%rbx)
 1983      0000
 157:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 13L, (long) cinfo->block_size);
 1984              		.loc 1 157 5 is_stmt 1 view .LVU716
 158:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 13;
 1985              		.loc 1 158 21 is_stmt 0 view .LVU717
 1986 0487 8B4334   		movl	52(%rbx), %eax
 158:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 13;
 1987              		.loc 1 158 7 view .LVU718
 1988 048a 488D1440 		leaq	(%rax,%rax,2), %rdx
 1989 048e 488D3C90 		leaq	(%rax,%rdx,4), %rdi
 1990 0492 E8000000 		call	jdiv_round_up@PLT
 1990      00
 1991              	.LVL140:
 157:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 13L, (long) cinfo->block_size);
 1992              		.loc 1 157 28 view .LVU719
 1993 0497 89838C00 		movl	%eax, 140(%rbx)
 1993      0000
 159:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 13;
 1994              		.loc 1 159 5 is_stmt 1 view .LVU720
 160:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 14) {
 1995              		.loc 1 160 5 view .LVU721
 159:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 13;
 1996              		.loc 1 159 34 is_stmt 0 view .LVU722
 1997 049d 48B80D00 		movabsq	$55834574861, %rax
 1997      00000D00 
 1997      0000
 1998 04a7 488983A8 		movq	%rax, 424(%rbx)
 1998      010000
 1999 04ae E9A4FCFF 		jmp	.L96
 1999      FF
 2000              	.L110:
 179:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 16L, (long) cinfo->block_size);
 2001              		.loc 1 179 5 is_stmt 1 view .LVU723
 180:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 2002              		.loc 1 180 7 is_stmt 0 view .LVU724
 2003 04b3 48C1E704 		salq	$4, %rdi
 2004 04b7 E8000000 		call	jdiv_round_up@PLT
 2004      00
 2005              	.LVL141:
 182:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 16;
 2006              		.loc 1 182 21 view .LVU725
 2007 04bc 8B7B34   		movl	52(%rbx), %edi
 182:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 16;
 2008              		.loc 1 182 7 view .LVU726
 2009 04bf 4863B32C 		movslq	556(%rbx), %rsi
 2009      020000
 179:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 16L, (long) cinfo->block_size);
 2010              		.loc 1 179 27 view .LVU727
 2011 04c6 89838800 		movl	%eax, 136(%rbx)
 2011      0000
 181:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 16L, (long) cinfo->block_size);
 2012              		.loc 1 181 5 is_stmt 1 view .LVU728
 182:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 16;
 2013              		.loc 1 182 7 is_stmt 0 view .LVU729
 2014 04cc 48C1E704 		salq	$4, %rdi
 2015 04d0 E8000000 		call	jdiv_round_up@PLT
 2015      00
 2016              	.LVL142:
 181:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 16L, (long) cinfo->block_size);
 2017              		.loc 1 181 28 view .LVU730
 2018 04d5 89838C00 		movl	%eax, 140(%rbx)
 2018      0000
 183:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 16;
 2019              		.loc 1 183 5 is_stmt 1 view .LVU731
 184:fltk-1.3.4-1/jpeg/jdinput.c ****   }
 2020              		.loc 1 184 5 view .LVU732
 183:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 16;
 2021              		.loc 1 183 34 is_stmt 0 view .LVU733
 2022 04db 48B81000 		movabsq	$68719476752, %rax
 2022      00001000 
 2022      0000
 2023 04e5 488983A8 		movq	%rax, 424(%rbx)
 2023      010000
 2024 04ec E966FCFF 		jmp	.L96
 2024      FF
 2025              	.L130:
 163:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 14L, (long) cinfo->block_size);
 2026              		.loc 1 163 5 is_stmt 1 view .LVU734
 164:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->output_height = (JDIMENSION)
 2027              		.loc 1 164 7 is_stmt 0 view .LVU735
 2028 04f1 488D04FD 		leaq	0(,%rdi,8), %rax
 2028      00000000 
 2029 04f9 4829F8   		subq	%rdi, %rax
 2030 04fc 488D3C00 		leaq	(%rax,%rax), %rdi
 2031 0500 E8000000 		call	jdiv_round_up@PLT
 2031      00
 2032              	.LVL143:
 166:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 14;
 2033              		.loc 1 166 7 view .LVU736
 2034 0505 4863B32C 		movslq	556(%rbx), %rsi
 2034      020000
 163:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_width * 14L, (long) cinfo->block_size);
 2035              		.loc 1 163 27 view .LVU737
 2036 050c 89838800 		movl	%eax, 136(%rbx)
 2036      0000
 165:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 14L, (long) cinfo->block_size);
 2037              		.loc 1 165 5 is_stmt 1 view .LVU738
 166:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 14;
 2038              		.loc 1 166 21 is_stmt 0 view .LVU739
 2039 0512 8B4334   		movl	52(%rbx), %eax
 166:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_h_scaled_size = 14;
 2040              		.loc 1 166 7 view .LVU740
 2041 0515 488D3CC5 		leaq	0(,%rax,8), %rdi
 2041      00000000 
 2042 051d 4829C7   		subq	%rax, %rdi
 2043 0520 4801FF   		addq	%rdi, %rdi
 2044 0523 E8000000 		call	jdiv_round_up@PLT
 2044      00
 2045              	.LVL144:
 165:fltk-1.3.4-1/jpeg/jdinput.c ****       jdiv_round_up((long) cinfo->image_height * 14L, (long) cinfo->block_size);
 2046              		.loc 1 165 28 view .LVU741
 2047 0528 89838C00 		movl	%eax, 140(%rbx)
 2047      0000
 167:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 14;
 2048              		.loc 1 167 5 is_stmt 1 view .LVU742
 168:fltk-1.3.4-1/jpeg/jdinput.c ****   } else if (cinfo->scale_num * cinfo->block_size <= cinfo->scale_denom * 15) {
 2049              		.loc 1 168 5 view .LVU743
 167:fltk-1.3.4-1/jpeg/jdinput.c ****     cinfo->min_DCT_v_scaled_size = 14;
 2050              		.loc 1 167 34 is_stmt 0 view .LVU744
 2051 052e 48B80E00 		movabsq	$60129542158, %rax
 2051      00000E00 
 2051      0000
 2052 0538 488983A8 		movq	%rax, 424(%rbx)
 2052      010000
 2053 053f E913FCFF 		jmp	.L96
 2053      FF
 2054              		.cfi_endproc
 2055              	.LFE51:
 2057              		.section	.text.jinit_input_controller,"ax",@progbits
 2058              		.p2align 4
 2059              		.globl	jinit_input_controller
 2061              	jinit_input_controller:
 2062              	.LVL145:
 2063              	.LFB59:
 634:fltk-1.3.4-1/jpeg/jdinput.c **** 
 635:fltk-1.3.4-1/jpeg/jdinput.c **** 
 636:fltk-1.3.4-1/jpeg/jdinput.c **** /*
 637:fltk-1.3.4-1/jpeg/jdinput.c ****  * Initialize the input controller module.
 638:fltk-1.3.4-1/jpeg/jdinput.c ****  * This is called only once, when the decompression object is created.
 639:fltk-1.3.4-1/jpeg/jdinput.c ****  */
 640:fltk-1.3.4-1/jpeg/jdinput.c **** 
 641:fltk-1.3.4-1/jpeg/jdinput.c **** GLOBAL(void)
 642:fltk-1.3.4-1/jpeg/jdinput.c **** jinit_input_controller (j_decompress_ptr cinfo)
 643:fltk-1.3.4-1/jpeg/jdinput.c **** {
 2064              		.loc 1 643 1 is_stmt 1 view -0
 2065              		.cfi_startproc
 2066              		.loc 1 643 1 is_stmt 0 view .LVU746
 2067 0000 F30F1EFA 		endbr64
 644:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl;
 2068              		.loc 1 644 3 is_stmt 1 view .LVU747
 645:fltk-1.3.4-1/jpeg/jdinput.c **** 
 646:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Create subobject in permanent pool */
 647:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl = (my_inputctl_ptr)
 2069              		.loc 1 647 3 view .LVU748
 648:fltk-1.3.4-1/jpeg/jdinput.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
 2070              		.loc 1 648 6 is_stmt 0 view .LVU749
 2071 0004 488B4708 		movq	8(%rdi), %rax
 643:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl;
 2072              		.loc 1 643 1 view .LVU750
 2073 0008 53       		pushq	%rbx
 2074              		.cfi_def_cfa_offset 16
 2075              		.cfi_offset 3, -16
 2076              		.loc 1 648 6 view .LVU751
 2077 0009 BA300000 		movl	$48, %edx
 2077      00
 643:fltk-1.3.4-1/jpeg/jdinput.c ****   my_inputctl_ptr inputctl;
 2078              		.loc 1 643 1 view .LVU752
 2079 000e 4889FB   		movq	%rdi, %rbx
 2080              		.loc 1 648 6 view .LVU753
 2081 0011 31F6     		xorl	%esi, %esi
 2082 0013 FF10     		call	*(%rax)
 2083              	.LVL146:
 649:fltk-1.3.4-1/jpeg/jdinput.c **** 				SIZEOF(my_input_controller));
 650:fltk-1.3.4-1/jpeg/jdinput.c ****   cinfo->inputctl = &inputctl->pub;
 2084              		.loc 1 650 3 is_stmt 1 view .LVU754
 651:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Initialize method pointers */
 652:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.consume_input = consume_markers;
 2085              		.loc 1 652 31 is_stmt 0 view .LVU755
 2086 0015 488D0D00 		leaq	consume_markers(%rip), %rcx
 2086      000000
 653:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.reset_input_controller = reset_input_controller;
 2087              		.loc 1 653 40 view .LVU756
 2088 001c 488D1500 		leaq	reset_input_controller(%rip), %rdx
 2088      000000
 650:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Initialize method pointers */
 2089              		.loc 1 650 19 view .LVU757
 2090 0023 48898360 		movq	%rax, 608(%rbx)
 2090      020000
 652:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.reset_input_controller = reset_input_controller;
 2091              		.loc 1 652 3 is_stmt 1 view .LVU758
 654:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.start_input_pass = start_input_pass;
 2092              		.loc 1 654 34 is_stmt 0 view .LVU759
 2093 002a 488D3500 		leaq	start_input_pass(%rip), %rsi
 2093      000000
 652:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.reset_input_controller = reset_input_controller;
 2094              		.loc 1 652 31 view .LVU760
 2095 0031 488908   		movq	%rcx, (%rax)
 653:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.start_input_pass = start_input_pass;
 2096              		.loc 1 653 3 is_stmt 1 view .LVU761
 655:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.finish_input_pass = finish_input_pass;
 2097              		.loc 1 655 35 is_stmt 0 view .LVU762
 2098 0034 488D0D00 		leaq	finish_input_pass(%rip), %rcx
 2098      000000
 653:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.start_input_pass = start_input_pass;
 2099              		.loc 1 653 40 view .LVU763
 2100 003b 48895008 		movq	%rdx, 8(%rax)
 654:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.start_input_pass = start_input_pass;
 2101              		.loc 1 654 3 is_stmt 1 view .LVU764
 654:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.start_input_pass = start_input_pass;
 2102              		.loc 1 654 34 is_stmt 0 view .LVU765
 2103 003f 48897010 		movq	%rsi, 16(%rax)
 2104              		.loc 1 655 3 is_stmt 1 view .LVU766
 2105              		.loc 1 655 35 is_stmt 0 view .LVU767
 2106 0043 48894818 		movq	%rcx, 24(%rax)
 656:fltk-1.3.4-1/jpeg/jdinput.c ****   /* Initialize state: can't use reset_input_controller since we don't
 657:fltk-1.3.4-1/jpeg/jdinput.c ****    * want to try to reset other modules yet.
 658:fltk-1.3.4-1/jpeg/jdinput.c ****    */
 659:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.has_multiple_scans = FALSE; /* "unknown" would be better */
 2107              		.loc 1 659 3 is_stmt 1 view .LVU768
 660:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.eoi_reached = FALSE;
 2108              		.loc 1 660 3 view .LVU769
 661:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->inheaders = 1;
 2109              		.loc 1 661 3 view .LVU770
 659:fltk-1.3.4-1/jpeg/jdinput.c ****   inputctl->pub.eoi_reached = FALSE;
 2110              		.loc 1 659 36 is_stmt 0 view .LVU771
 2111 0047 48C74020 		movq	$0, 32(%rax)
 2111      00000000 
 2112              		.loc 1 661 23 view .LVU772
 2113 004f C7402801 		movl	$1, 40(%rax)
 2113      000000
 662:fltk-1.3.4-1/jpeg/jdinput.c **** }
 2114              		.loc 1 662 1 view .LVU773
 2115 0056 5B       		popq	%rbx
 2116              		.cfi_def_cfa_offset 8
 2117              	.LVL147:
 2118              		.loc 1 662 1 view .LVU774
 2119 0057 C3       		ret
 2120              		.cfi_endproc
 2121              	.LFE59:
 2123              		.text
 2124              	.Letext0:
 2125              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 2126              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 2127              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 2128              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 2129              		.file 7 "/usr/include/stdio.h"
 2130              		.file 8 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 2131              		.file 9 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 2132              		.file 10 "fltk-1.3.4-1/jpeg/jpeglib.h"
 2133              		.file 11 "fltk-1.3.4-1/jpeg/jpegint.h"
 2134              		.file 12 "fltk-1.3.4-1/jpeg/jerror.h"
 14777              		.section	.note.gnu.property,"a"
 14778              		.align 8
 14779 0000 04000000 		.long	 1f - 0f
 14780 0004 10000000 		.long	 4f - 1f
 14781 0008 05000000 		.long	 5
 14782              	0:
 14783 000c 474E5500 		.string	 "GNU"
 14784              	1:
 14785              		.align 8
 14786 0010 020000C0 		.long	 0xc0000002
 14787 0014 04000000 		.long	 3f - 2f
 14788              	2:
 14789 0018 03000000 		.long	 0x3
 14790              	3:
 14791 001c 00000000 		.align 8
 14792              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jdinput.c
     /tmp/ccP79Aj3.s:7      .text.finish_input_pass:0000000000000000 finish_input_pass
     /tmp/ccP79Aj3.s:555    .text.consume_markers:0000000000000000 consume_markers
     /tmp/ccP79Aj3.s:45     .text.reset_input_controller:0000000000000000 reset_input_controller
     /tmp/ccP79Aj3.s:102    .text.start_input_pass:0000000000000000 start_input_pass
     /tmp/ccP79Aj3.s:1461   .text.jpeg_core_output_dimensions:0000000000000000 jpeg_core_output_dimensions
     /tmp/ccP79Aj3.s:2061   .text.jinit_input_controller:0000000000000000 jinit_input_controller
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
jdiv_round_up
jpeg_natural_order
jpeg_natural_order7
jpeg_natural_order6
jpeg_natural_order5
jpeg_natural_order4
jpeg_natural_order3
jpeg_natural_order2
