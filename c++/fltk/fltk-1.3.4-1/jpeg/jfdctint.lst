   1              		.file	"jfdctint.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely.jpeg_fdct_islow,"ax",@progbits
   5              	.LCOLDB0:
   6              		.section	.text.jpeg_fdct_islow,"ax",@progbits
   7              	.LHOTB0:
   8              		.p2align 4,,15
   9              		.section	.text.unlikely.jpeg_fdct_islow
  10              	.Ltext_cold0:
  11              		.section	.text.jpeg_fdct_islow
  12              		.globl	jpeg_fdct_islow
  14              	jpeg_fdct_islow:
  15              	.LFB61:
  16              		.file 1 "fltk-1.3.4-1/jpeg/jfdctint.c"
   1:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
   2:fltk-1.3.4-1/jpeg/jfdctint.c ****  * jfdctint.c
   3:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
   4:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Copyright (C) 1991-1996, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Modification developed 2003-2013 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jfdctint.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jfdctint.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
   9:fltk-1.3.4-1/jpeg/jfdctint.c ****  * This file contains a slow-but-accurate integer implementation of the
  10:fltk-1.3.4-1/jpeg/jfdctint.c ****  * forward DCT (Discrete Cosine Transform).
  11:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  12:fltk-1.3.4-1/jpeg/jfdctint.c ****  * A 2-D DCT can be done by 1-D DCT on each row followed by 1-D DCT
  13:fltk-1.3.4-1/jpeg/jfdctint.c ****  * on each column.  Direct algorithms are also available, but they are
  14:fltk-1.3.4-1/jpeg/jfdctint.c ****  * much more complex and seem not to be any faster when reduced to code.
  15:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  16:fltk-1.3.4-1/jpeg/jfdctint.c ****  * This implementation is based on an algorithm described in
  17:fltk-1.3.4-1/jpeg/jfdctint.c ****  *   C. Loeffler, A. Ligtenberg and G. Moschytz, "Practical Fast 1-D DCT
  18:fltk-1.3.4-1/jpeg/jfdctint.c ****  *   Algorithms with 11 Multiplications", Proc. Int'l. Conf. on Acoustics,
  19:fltk-1.3.4-1/jpeg/jfdctint.c ****  *   Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.
  20:fltk-1.3.4-1/jpeg/jfdctint.c ****  * The primary algorithm described there uses 11 multiplies and 29 adds.
  21:fltk-1.3.4-1/jpeg/jfdctint.c ****  * We use their alternate method with 12 multiplies and 32 adds.
  22:fltk-1.3.4-1/jpeg/jfdctint.c ****  * The advantage of this method is that no data path contains more than one
  23:fltk-1.3.4-1/jpeg/jfdctint.c ****  * multiplication; this allows a very simple and accurate implementation in
  24:fltk-1.3.4-1/jpeg/jfdctint.c ****  * scaled fixed-point arithmetic, with a minimal number of shifts.
  25:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  26:fltk-1.3.4-1/jpeg/jfdctint.c ****  * We also provide FDCT routines with various input sample block sizes for
  27:fltk-1.3.4-1/jpeg/jfdctint.c ****  * direct resolution reduction or enlargement and for direct resolving the
  28:fltk-1.3.4-1/jpeg/jfdctint.c ****  * common 2x1 and 1x2 subsampling cases without additional resampling: NxN
  29:fltk-1.3.4-1/jpeg/jfdctint.c ****  * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 output DCT block.
  30:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  31:fltk-1.3.4-1/jpeg/jfdctint.c ****  * For N<8 we fill the remaining block coefficients with zero.
  32:fltk-1.3.4-1/jpeg/jfdctint.c ****  * For N>8 we apply a partial N-point FDCT on the input samples, computing
  33:fltk-1.3.4-1/jpeg/jfdctint.c ****  * just the lower 8 frequency coefficients and discarding the rest.
  34:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  35:fltk-1.3.4-1/jpeg/jfdctint.c ****  * We must scale the output coefficients of the N-point FDCT appropriately
  36:fltk-1.3.4-1/jpeg/jfdctint.c ****  * to the standard 8-point FDCT level by 8/N per 1-D pass.  This scaling
  37:fltk-1.3.4-1/jpeg/jfdctint.c ****  * is folded into the constant multipliers (pass 2) and/or final/initial
  38:fltk-1.3.4-1/jpeg/jfdctint.c ****  * shifting.
  39:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  40:fltk-1.3.4-1/jpeg/jfdctint.c ****  * CAUTION: We rely on the FIX() macro except for the N=1,2,4,8 cases
  41:fltk-1.3.4-1/jpeg/jfdctint.c ****  * since there would be too many additional constants to pre-calculate.
  42:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
  43:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  44:fltk-1.3.4-1/jpeg/jfdctint.c **** #define JPEG_INTERNALS
  45:fltk-1.3.4-1/jpeg/jfdctint.c **** #include "jinclude.h"
  46:fltk-1.3.4-1/jpeg/jfdctint.c **** #include "jpeglib.h"
  47:fltk-1.3.4-1/jpeg/jfdctint.c **** #include "jdct.h"		/* Private declarations for DCT subsystem */
  48:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  49:fltk-1.3.4-1/jpeg/jfdctint.c **** #ifdef DCT_ISLOW_SUPPORTED
  50:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  51:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  52:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
  53:fltk-1.3.4-1/jpeg/jfdctint.c ****  * This module is specialized to the case DCTSIZE = 8.
  54:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
  55:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  56:fltk-1.3.4-1/jpeg/jfdctint.c **** #if DCTSIZE != 8
  57:fltk-1.3.4-1/jpeg/jfdctint.c ****   Sorry, this code only copes with 8x8 DCT blocks. /* deliberate syntax err */
  58:fltk-1.3.4-1/jpeg/jfdctint.c **** #endif
  59:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  60:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  61:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
  62:fltk-1.3.4-1/jpeg/jfdctint.c ****  * The poop on this scaling stuff is as follows:
  63:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  64:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Each 1-D DCT step produces outputs which are a factor of sqrt(N)
  65:fltk-1.3.4-1/jpeg/jfdctint.c ****  * larger than the true DCT outputs.  The final outputs are therefore
  66:fltk-1.3.4-1/jpeg/jfdctint.c ****  * a factor of N larger than desired; since N=8 this can be cured by
  67:fltk-1.3.4-1/jpeg/jfdctint.c ****  * a simple right shift at the end of the algorithm.  The advantage of
  68:fltk-1.3.4-1/jpeg/jfdctint.c ****  * this arrangement is that we save two multiplications per 1-D DCT,
  69:fltk-1.3.4-1/jpeg/jfdctint.c ****  * because the y0 and y4 outputs need not be divided by sqrt(N).
  70:fltk-1.3.4-1/jpeg/jfdctint.c ****  * In the IJG code, this factor of 8 is removed by the quantization step
  71:fltk-1.3.4-1/jpeg/jfdctint.c ****  * (in jcdctmgr.c), NOT in this module.
  72:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  73:fltk-1.3.4-1/jpeg/jfdctint.c ****  * We have to do addition and subtraction of the integer inputs, which
  74:fltk-1.3.4-1/jpeg/jfdctint.c ****  * is no problem, and multiplication by fractional constants, which is
  75:fltk-1.3.4-1/jpeg/jfdctint.c ****  * a problem to do in integer arithmetic.  We multiply all the constants
  76:fltk-1.3.4-1/jpeg/jfdctint.c ****  * by CONST_SCALE and convert them to integer constants (thus retaining
  77:fltk-1.3.4-1/jpeg/jfdctint.c ****  * CONST_BITS bits of precision in the constants).  After doing a
  78:fltk-1.3.4-1/jpeg/jfdctint.c ****  * multiplication we have to divide the product by CONST_SCALE, with proper
  79:fltk-1.3.4-1/jpeg/jfdctint.c ****  * rounding, to produce the correct output.  This division can be done
  80:fltk-1.3.4-1/jpeg/jfdctint.c ****  * cheaply as a right shift of CONST_BITS bits.  We postpone shifting
  81:fltk-1.3.4-1/jpeg/jfdctint.c ****  * as long as possible so that partial sums can be added together with
  82:fltk-1.3.4-1/jpeg/jfdctint.c ****  * full fractional precision.
  83:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  84:fltk-1.3.4-1/jpeg/jfdctint.c ****  * The outputs of the first pass are scaled up by PASS1_BITS bits so that
  85:fltk-1.3.4-1/jpeg/jfdctint.c ****  * they are represented to better-than-integral precision.  These outputs
  86:fltk-1.3.4-1/jpeg/jfdctint.c ****  * require BITS_IN_JSAMPLE + PASS1_BITS + 3 bits; this fits in a 16-bit word
  87:fltk-1.3.4-1/jpeg/jfdctint.c ****  * with the recommended scaling.  (For 12-bit sample data, the intermediate
  88:fltk-1.3.4-1/jpeg/jfdctint.c ****  * array is INT32 anyway.)
  89:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
  90:fltk-1.3.4-1/jpeg/jfdctint.c ****  * To avoid overflow of the 32-bit intermediate results in pass 2, we must
  91:fltk-1.3.4-1/jpeg/jfdctint.c ****  * have BITS_IN_JSAMPLE + CONST_BITS + PASS1_BITS <= 26.  Error analysis
  92:fltk-1.3.4-1/jpeg/jfdctint.c ****  * shows that the values given below are the most effective.
  93:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
  94:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  95:fltk-1.3.4-1/jpeg/jfdctint.c **** #if BITS_IN_JSAMPLE == 8
  96:fltk-1.3.4-1/jpeg/jfdctint.c **** #define CONST_BITS  13
  97:fltk-1.3.4-1/jpeg/jfdctint.c **** #define PASS1_BITS  2
  98:fltk-1.3.4-1/jpeg/jfdctint.c **** #else
  99:fltk-1.3.4-1/jpeg/jfdctint.c **** #define CONST_BITS  13
 100:fltk-1.3.4-1/jpeg/jfdctint.c **** #define PASS1_BITS  1		/* lose a little precision to avoid overflow */
 101:fltk-1.3.4-1/jpeg/jfdctint.c **** #endif
 102:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 103:fltk-1.3.4-1/jpeg/jfdctint.c **** /* Some C compilers fail to reduce "FIX(constant)" at compile time, thus
 104:fltk-1.3.4-1/jpeg/jfdctint.c ****  * causing a lot of useless floating-point operations at run time.
 105:fltk-1.3.4-1/jpeg/jfdctint.c ****  * To get around this we use the following pre-calculated constants.
 106:fltk-1.3.4-1/jpeg/jfdctint.c ****  * If you change CONST_BITS you may want to add appropriate values.
 107:fltk-1.3.4-1/jpeg/jfdctint.c ****  * (With a reasonable C compiler, you can just rely on the FIX() macro...)
 108:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 109:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 110:fltk-1.3.4-1/jpeg/jfdctint.c **** #if CONST_BITS == 13
 111:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_298631336  ((INT32)  2446)	/* FIX(0.298631336) */
 112:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_390180644  ((INT32)  3196)	/* FIX(0.390180644) */
 113:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_541196100  ((INT32)  4433)	/* FIX(0.541196100) */
 114:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_765366865  ((INT32)  6270)	/* FIX(0.765366865) */
 115:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_899976223  ((INT32)  7373)	/* FIX(0.899976223) */
 116:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_175875602  ((INT32)  9633)	/* FIX(1.175875602) */
 117:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_501321110  ((INT32)  12299)	/* FIX(1.501321110) */
 118:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_847759065  ((INT32)  15137)	/* FIX(1.847759065) */
 119:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_961570560  ((INT32)  16069)	/* FIX(1.961570560) */
 120:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_2_053119869  ((INT32)  16819)	/* FIX(2.053119869) */
 121:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_2_562915447  ((INT32)  20995)	/* FIX(2.562915447) */
 122:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_3_072711026  ((INT32)  25172)	/* FIX(3.072711026) */
 123:fltk-1.3.4-1/jpeg/jfdctint.c **** #else
 124:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_298631336  FIX(0.298631336)
 125:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_390180644  FIX(0.390180644)
 126:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_541196100  FIX(0.541196100)
 127:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_765366865  FIX(0.765366865)
 128:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_0_899976223  FIX(0.899976223)
 129:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_175875602  FIX(1.175875602)
 130:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_501321110  FIX(1.501321110)
 131:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_847759065  FIX(1.847759065)
 132:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_1_961570560  FIX(1.961570560)
 133:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_2_053119869  FIX(2.053119869)
 134:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_2_562915447  FIX(2.562915447)
 135:fltk-1.3.4-1/jpeg/jfdctint.c **** #define FIX_3_072711026  FIX(3.072711026)
 136:fltk-1.3.4-1/jpeg/jfdctint.c **** #endif
 137:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 138:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 139:fltk-1.3.4-1/jpeg/jfdctint.c **** /* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.
 140:fltk-1.3.4-1/jpeg/jfdctint.c ****  * For 8-bit samples with the recommended scaling, all the variable
 141:fltk-1.3.4-1/jpeg/jfdctint.c ****  * and constant values involved are no more than 16 bits wide, so a
 142:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 16x16->32 bit multiply can be used instead of a full 32x32 multiply.
 143:fltk-1.3.4-1/jpeg/jfdctint.c ****  * For 12-bit samples, a full 32-bit multiplication will be needed.
 144:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 145:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 146:fltk-1.3.4-1/jpeg/jfdctint.c **** #if BITS_IN_JSAMPLE == 8
 147:fltk-1.3.4-1/jpeg/jfdctint.c **** #define MULTIPLY(var,const)  MULTIPLY16C16(var,const)
 148:fltk-1.3.4-1/jpeg/jfdctint.c **** #else
 149:fltk-1.3.4-1/jpeg/jfdctint.c **** #define MULTIPLY(var,const)  ((var) * (const))
 150:fltk-1.3.4-1/jpeg/jfdctint.c **** #endif
 151:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 152:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 153:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 154:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on one block of samples.
 155:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 156:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 157:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 158:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_islow (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 159:fltk-1.3.4-1/jpeg/jfdctint.c **** {
  17              		.loc 1 159 0
  18              		.cfi_startproc
  19              	.LVL0:
  20 0000 4157     		pushq	%r15
  21              		.cfi_def_cfa_offset 16
  22              		.cfi_offset 15, -16
  23 0002 4156     		pushq	%r14
  24              		.cfi_def_cfa_offset 24
  25              		.cfi_offset 14, -24
  26 0004 89D0     		movl	%edx, %eax
  27 0006 4155     		pushq	%r13
  28              		.cfi_def_cfa_offset 32
  29              		.cfi_offset 13, -32
  30 0008 4154     		pushq	%r12
  31              		.cfi_def_cfa_offset 40
  32              		.cfi_offset 12, -40
 160:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
 161:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13;
 162:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1;
 163:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
 164:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 165:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
 166:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
 167:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 168:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 169:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
 170:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
 171:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16).
 172:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 173:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 174:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
  33              		.loc 1 174 0
  34 000a 4989FA   		movq	%rdi, %r10
 159:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
  35              		.loc 1 159 0
  36 000d 55       		pushq	%rbp
  37              		.cfi_def_cfa_offset 48
  38              		.cfi_offset 6, -48
  39 000e 53       		pushq	%rbx
  40              		.cfi_def_cfa_offset 56
  41              		.cfi_offset 3, -56
  42 000f 4889F3   		movq	%rsi, %rbx
  43 0012 48894424 		movq	%rax, -16(%rsp)
  43      F0
  44 0017 488D8700 		leaq	256(%rdi), %rax
  44      010000
  45              		.loc 1 174 0
  46 001e 48897C24 		movq	%rdi, -8(%rsp)
  46      F8
  47 0023 48894424 		movq	%rax, -24(%rsp)
  47      E8
  48              	.LVL1:
  49 0028 0F1F8400 		.p2align 4,,10
  49      00000000 
  50              		.p2align 3
  51              	.L2:
 175:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
 176:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
  52              		.loc 1 176 0 discriminator 3
  53 0030 4C8B4C24 		movq	-16(%rsp), %r9
  53      F0
  54 0035 4C030B   		addq	(%rbx), %r9
  55              	.LVL2:
 177:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 178:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
 179:fltk-1.3.4-1/jpeg/jfdctint.c ****      * rotator "c1" should be "c6".
 180:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
 181:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 182:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[7]);
 183:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 185:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
  56              		.loc 1 185 0 discriminator 3
  57 0038 410FB669 		movzbl	4(%r9), %ebp
  57      04
 182:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
  58              		.loc 1 182 0 discriminator 3
  59 003d 410FB631 		movzbl	(%r9), %esi
  60 0041 450FB671 		movzbl	7(%r9), %r14d
  60      07
 183:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
  61              		.loc 1 183 0 discriminator 3
  62 0046 410FB649 		movzbl	1(%r9), %ecx
  62      01
  63 004b 450FB669 		movzbl	6(%r9), %r13d
  63      06
 184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
  64              		.loc 1 184 0 discriminator 3
  65 0050 410FB651 		movzbl	2(%r9), %edx
  65      02
  66 0055 450FB661 		movzbl	5(%r9), %r12d
  66      05
  67              		.loc 1 185 0 discriminator 3
  68 005a 410FB641 		movzbl	3(%r9), %eax
  68      03
 182:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
  69              		.loc 1 182 0 discriminator 3
  70 005f 428D3C36 		leal	(%rsi,%r14), %edi
 186:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 187:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp3;
 188:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 189:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 190:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 191:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
  71              		.loc 1 192 0 discriminator 3
  72 0063 4429F6   		subl	%r14d, %esi
 183:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
  73              		.loc 1 183 0 discriminator 3
  74 0066 468D0429 		leal	(%rcx,%r13), %r8d
 193:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
  75              		.loc 1 193 0 discriminator 3
  76 006a 4429E9   		subl	%r13d, %ecx
 192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
  77              		.loc 1 192 0 discriminator 3
  78 006d 4863F6   		movslq	%esi, %rsi
 185:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  79              		.loc 1 185 0 discriminator 3
  80 0070 448D3C28 		leal	(%rax,%rbp), %r15d
 184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
  81              		.loc 1 184 0 discriminator 3
  82 0074 468D1C22 		leal	(%rdx,%r12), %r11d
 182:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
  83              		.loc 1 182 0 discriminator 3
  84 0078 4863FF   		movslq	%edi, %rdi
  85              	.LVL3:
 183:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
  86              		.loc 1 183 0 discriminator 3
  87 007b 4D63C0   		movslq	%r8d, %r8
  88              	.LVL4:
 194:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
 195:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
  89              		.loc 1 195 0 discriminator 3
  90 007e 29E8     		subl	%ebp, %eax
 194:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
  91              		.loc 1 194 0 discriminator 3
  92 0080 4429E2   		subl	%r12d, %edx
 184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
  93              		.loc 1 184 0 discriminator 3
  94 0083 4D63DB   		movslq	%r11d, %r11
  95              	.LVL5:
 185:fltk-1.3.4-1/jpeg/jfdctint.c **** 
  96              		.loc 1 185 0 discriminator 3
  97 0086 4D63FF   		movslq	%r15d, %r15
  98              	.LVL6:
 193:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
  99              		.loc 1 193 0 discriminator 3
 100 0089 4863C9   		movslq	%ecx, %rcx
 187:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 101              		.loc 1 187 0 discriminator 3
 102 008c 4E8D0C3F 		leaq	(%rdi,%r15), %r9
 103              	.LVL7:
 188:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 104              		.loc 1 188 0 discriminator 3
 105 0090 4C29FF   		subq	%r15, %rdi
 106              	.LVL8:
 189:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 107              		.loc 1 189 0 discriminator 3
 108 0093 4F8D3C18 		leaq	(%r8,%r11), %r15
 109              	.LVL9:
 190:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 110              		.loc 1 190 0 discriminator 3
 111 0097 4D29D8   		subq	%r11, %r8
 112              	.LVL10:
 194:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 113              		.loc 1 194 0 discriminator 3
 114 009a 4863D2   		movslq	%edx, %rdx
 115              	.LVL11:
 116              		.loc 1 195 0 discriminator 3
 117 009d 4898     		cltq
 118              	.LVL12:
 196:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 197:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 198:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM) ((tmp10 + tmp11 - 8 * CENTERJSAMPLE) << PASS1_BITS);
 119              		.loc 1 198 0 discriminator 3
 120 009f 4F8D9C39 		leaq	-1024(%r9,%r15), %r11
 120      00FCFFFF 
 199:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << PASS1_BITS);
 121              		.loc 1 199 0 discriminator 3
 122 00a7 4D29F9   		subq	%r15, %r9
 123              	.LVL13:
 124 00aa 49C1E102 		salq	$2, %r9
 125 00ae 45894A10 		movl	%r9d, 16(%r10)
 126              	.LVL14:
 200:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 201:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_541196100);       /* c6 */
 127              		.loc 1 201 0 discriminator 3
 128 00b2 4E8D0C07 		leaq	(%rdi,%r8), %r9
 198:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << PASS1_BITS);
 129              		.loc 1 198 0 discriminator 3
 130 00b6 49C1E302 		salq	$2, %r11
 202:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 203:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
 204:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 205:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 206:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 207:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS);
 208:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 131              		.loc 1 208 0 discriminator 3
 132 00ba 4D69C0DF 		imulq	$-15137, %r8, %r8
 132      C4FFFF
 133              	.LVL15:
 198:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << PASS1_BITS);
 134              		.loc 1 198 0 discriminator 3
 135 00c1 45891A   		movl	%r11d, (%r10)
 209:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 210:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS);
 211:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 212:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part per figure 8 --- note paper omits factor of sqrt(2).
 213:fltk-1.3.4-1/jpeg/jfdctint.c ****      * i0..i3 in the paper are tmp0..tmp3 here.
 214:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
 215:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 216:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 + tmp2;
 217:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 218:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 219:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_1_175875602);       /*  c3 */
 220:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 221:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
 222:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 223:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);          /* -c3+c5 */
 224:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
 225:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 226:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 227:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 228:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223);       /* -c3+c7 */
 229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
 231:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
 232:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += z1 + tmp13;
 233:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 234:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447);       /* -c1-c3 */
 136              		.loc 1 234 0 discriminator 3
 137 00c4 4C8D1C11 		leaq	(%rcx,%rdx), %r11
 201:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 138              		.loc 1 201 0 discriminator 3
 139 00c8 4D69C951 		imulq	$4433, %r9, %r9
 139      110000
 140              	.LVL16:
 205:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 141              		.loc 1 205 0 discriminator 3
 142 00cf 4869FF7E 		imulq	$6270, %rdi, %rdi
 142      180000
 143              	.LVL17:
 203:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 144              		.loc 1 203 0 discriminator 3
 145 00d6 4981C100 		addq	$1024, %r9
 145      040000
 146              	.LVL18:
 205:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 147              		.loc 1 205 0 discriminator 3
 148 00dd 4C01CF   		addq	%r9, %rdi
 208:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 149              		.loc 1 208 0 discriminator 3
 150 00e0 4D01C1   		addq	%r8, %r9
 151              	.LVL19:
 216:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 152              		.loc 1 216 0 discriminator 3
 153 00e3 4C8D0416 		leaq	(%rsi,%rdx), %r8
 154              	.LVL20:
 208:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 155              		.loc 1 208 0 discriminator 3
 156 00e7 49C1F90B 		sarq	$11, %r9
 205:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 157              		.loc 1 205 0 discriminator 3
 158 00eb 48C1FF0B 		sarq	$11, %rdi
 208:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 159              		.loc 1 208 0 discriminator 3
 160 00ef 45894A18 		movl	%r9d, 24(%r10)
 217:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 161              		.loc 1 217 0 discriminator 3
 162 00f3 4C8D0C01 		leaq	(%rcx,%rax), %r9
 163              	.LVL21:
 205:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 164              		.loc 1 205 0 discriminator 3
 165 00f7 41897A08 		movl	%edi, 8(%r10)
 166              		.loc 1 234 0 discriminator 3
 167 00fb 4D69DBFD 		imulq	$-20995, %r11, %r11
 167      ADFFFF
 219:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 168              		.loc 1 219 0 discriminator 3
 169 0102 4B8D3C08 		leaq	(%r8,%r9), %rdi
 224:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 170              		.loc 1 224 0 discriminator 3
 171 0106 4D69C93B 		imulq	$-16069, %r9, %r9
 171      C1FFFF
 172              	.LVL22:
 219:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 173              		.loc 1 219 0 discriminator 3
 174 010d 4869FFA1 		imulq	$9633, %rdi, %rdi
 174      250000
 175              	.LVL23:
 223:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
 176              		.loc 1 223 0 discriminator 3
 177 0114 4D69C084 		imulq	$-3196, %r8, %r8
 177      F3FFFF
 178              	.LVL24:
 221:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 179              		.loc 1 221 0 discriminator 3
 180 011b 4881C700 		addq	$1024, %rdi
 180      040000
 181              	.LVL25:
 225:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 182              		.loc 1 225 0 discriminator 3
 183 0122 4901F8   		addq	%rdi, %r8
 184              	.LVL26:
 226:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 185              		.loc 1 226 0 discriminator 3
 186 0125 4C01CF   		addq	%r9, %rdi
 187              	.LVL27:
 228:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 188              		.loc 1 228 0 discriminator 3
 189 0128 4C8D0C06 		leaq	(%rsi,%rax), %r9
 229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
 190              		.loc 1 229 0 discriminator 3
 191 012c 4869F60B 		imulq	$12299, %rsi, %rsi
 191      300000
 192              	.LVL28:
 228:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 193              		.loc 1 228 0 discriminator 3
 194 0133 4D69C933 		imulq	$-7373, %r9, %r9
 194      E3FFFF
 195              	.LVL29:
 235:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);              /*  c1+c3+c5-c7 */
 196              		.loc 1 235 0 discriminator 3
 197 013a 4869C954 		imulq	$25172, %rcx, %rcx
 197      620000
 198              	.LVL30:
 236:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
 237:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
 238:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += z1 + tmp12;
 239:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 240:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) RIGHT_SHIFT(tmp0, CONST_BITS-PASS1_BITS);
 199              		.loc 1 240 0 discriminator 3
 200 0141 4B8D2C08 		leaq	(%r8,%r9), %rbp
 230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
 201              		.loc 1 230 0 discriminator 3
 202 0145 4869C08E 		imulq	$2446, %rax, %rax
 202      090000
 203              	.LVL31:
 204              		.loc 1 240 0 discriminator 3
 205 014c 4801EE   		addq	%rbp, %rsi
 206              	.LVL32:
 207 014f 48C1FE0B 		sarq	$11, %rsi
 208              	.LVL33:
 209 0153 41897204 		movl	%esi, 4(%r10)
 241:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS-PASS1_BITS);
 210              		.loc 1 241 0 discriminator 3
 211 0157 4A8D341F 		leaq	(%rdi,%r11), %rsi
 236:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
 212              		.loc 1 236 0 discriminator 3
 213 015b 4869D2B3 		imulq	$16819, %rdx, %rdx
 213      410000
 214              	.LVL34:
 215              		.loc 1 241 0 discriminator 3
 216 0162 4801F1   		addq	%rsi, %rcx
 217              	.LVL35:
 242:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 218              		.loc 1 242 0 discriminator 3
 219 0165 4D01D8   		addq	%r11, %r8
 220              	.LVL36:
 243:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS);
 221              		.loc 1 243 0 discriminator 3
 222 0168 4C01CF   		addq	%r9, %rdi
 223              	.LVL37:
 224 016b 4801C7   		addq	%rax, %rdi
 225              	.LVL38:
 241:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS-PASS1_BITS);
 226              		.loc 1 241 0 discriminator 3
 227 016e 48C1F90B 		sarq	$11, %rcx
 228              	.LVL39:
 244:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 245:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 229              		.loc 1 245 0 discriminator 3
 230 0172 4983C220 		addq	$32, %r10
 231              	.LVL40:
 243:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS);
 232              		.loc 1 243 0 discriminator 3
 233 0176 48C1FF0B 		sarq	$11, %rdi
 234              	.LVL41:
 241:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 235              		.loc 1 241 0 discriminator 3
 236 017a 41894AEC 		movl	%ecx, -20(%r10)
 237 017e 4883C308 		addq	$8, %rbx
 242:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS);
 238              		.loc 1 242 0 discriminator 3
 239 0182 4C01C2   		addq	%r8, %rdx
 240              	.LVL42:
 243:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 241              		.loc 1 243 0 discriminator 3
 242 0185 41897AFC 		movl	%edi, -4(%r10)
 242:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS);
 243              		.loc 1 242 0 discriminator 3
 244 0189 48C1FA0B 		sarq	$11, %rdx
 245              	.LVL43:
 246 018d 418952F4 		movl	%edx, -12(%r10)
 247              	.LVL44:
 175:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 248              		.loc 1 175 0 discriminator 3
 249 0191 4C3B5424 		cmpq	-24(%rsp), %r10
 249      E8
 250 0196 0F8594FE 		jne	.L2
 250      FFFF
 251 019c 488B7C24 		movq	-8(%rsp), %rdi
 251      F8
 252 01a1 4C8D4720 		leaq	32(%rdi), %r8
 253              	.LVL45:
 254              		.p2align 4,,10
 255 01a5 0F1F00   		.p2align 3
 256              	.L3:
 246:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 247:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 248:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
 249:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
 250:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
 251:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16).
 252:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 253:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 254:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 255:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 256:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
 257:fltk-1.3.4-1/jpeg/jfdctint.c ****      * rotator "c1" should be "c6".
 258:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
 259:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 260:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*7];
 257              		.loc 1 260 0 discriminator 3
 258 01a8 448B97E0 		movl	224(%rdi), %r10d
 258      000000
 259 01af 8B37     		movl	(%rdi), %esi
 261:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 260              		.loc 1 261 0 discriminator 3
 261 01b1 8B4F20   		movl	32(%rdi), %ecx
 262 01b4 448BB7C0 		movl	192(%rdi), %r14d
 262      000000
 262:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 263              		.loc 1 262 0 discriminator 3
 264 01bb 8B5740   		movl	64(%rdi), %edx
 265 01be 448BAFA0 		movl	160(%rdi), %r13d
 265      000000
 263:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 266              		.loc 1 263 0 discriminator 3
 267 01c5 8B4760   		movl	96(%rdi), %eax
 268 01c8 448BA780 		movl	128(%rdi), %r12d
 268      000000
 260:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 269              		.loc 1 260 0 discriminator 3
 270 01cf 468D0C16 		leal	(%rsi,%r10), %r9d
 261:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 271              		.loc 1 261 0 discriminator 3
 272 01d3 468D1C31 		leal	(%rcx,%r14), %r11d
 264:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 265:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 266:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp3 + (ONE << (PASS1_BITS-1));
 267:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 268:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 269:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 270:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 271:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*7];
 273              		.loc 1 271 0 discriminator 3
 274 01d7 4429D6   		subl	%r10d, %esi
 272:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 275              		.loc 1 272 0 discriminator 3
 276 01da 4429F1   		subl	%r14d, %ecx
 262:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 277              		.loc 1 262 0 discriminator 3
 278 01dd 468D3C2A 		leal	(%rdx,%r13), %r15d
 260:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 279              		.loc 1 260 0 discriminator 3
 280 01e1 4D63C9   		movslq	%r9d, %r9
 281              	.LVL46:
 273:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 282              		.loc 1 273 0 discriminator 3
 283 01e4 4429EA   		subl	%r13d, %edx
 263:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 284              		.loc 1 263 0 discriminator 3
 285 01e7 428D2C20 		leal	(%rax,%r12), %ebp
 261:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 286              		.loc 1 261 0 discriminator 3
 287 01eb 4D63DB   		movslq	%r11d, %r11
 288              	.LVL47:
 274:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 289              		.loc 1 274 0 discriminator 3
 290 01ee 4429E0   		subl	%r12d, %eax
 262:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 291              		.loc 1 262 0 discriminator 3
 292 01f1 4D63FF   		movslq	%r15d, %r15
 293              	.LVL48:
 271:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 294              		.loc 1 271 0 discriminator 3
 295 01f4 4863F6   		movslq	%esi, %rsi
 272:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 296              		.loc 1 272 0 discriminator 3
 297 01f7 4863C9   		movslq	%ecx, %rcx
 263:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 298              		.loc 1 263 0 discriminator 3
 299 01fa 4863ED   		movslq	%ebp, %rbp
 300              	.LVL49:
 273:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 301              		.loc 1 273 0 discriminator 3
 302 01fd 4863D2   		movslq	%edx, %rdx
 303              		.loc 1 274 0 discriminator 3
 304 0200 4898     		cltq
 266:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 305              		.loc 1 266 0 discriminator 3
 306 0202 498D5C29 		leaq	2(%r9,%rbp), %rbx
 306      02
 307              	.LVL50:
 267:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 308              		.loc 1 267 0 discriminator 3
 309 0207 4929E9   		subq	%rbp, %r9
 310              	.LVL51:
 268:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 311              		.loc 1 268 0 discriminator 3
 312 020a 4B8D2C3B 		leaq	(%r11,%r15), %rbp
 313              	.LVL52:
 269:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 314              		.loc 1 269 0 discriminator 3
 315 020e 4D29FB   		subq	%r15, %r11
 316              	.LVL53:
 275:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 276:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM) RIGHT_SHIFT(tmp10 + tmp11, PASS1_BITS);
 317              		.loc 1 276 0 discriminator 3
 318 0211 4C8D142B 		leaq	(%rbx,%rbp), %r10
 277:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 319              		.loc 1 277 0 discriminator 3
 320 0215 4829EB   		subq	%rbp, %rbx
 321              	.LVL54:
 322 0218 48C1FB02 		sarq	$2, %rbx
 276:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 323              		.loc 1 276 0 discriminator 3
 324 021c 49C1FA02 		sarq	$2, %r10
 325              		.loc 1 277 0 discriminator 3
 326 0220 899F8000 		movl	%ebx, 128(%rdi)
 326      0000
 278:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 279:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_541196100);       /* c6 */
 280:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 281:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS+PASS1_BITS-1);
 282:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 283:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 284:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 285:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
 286:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
 287:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 288:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
 289:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 290:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part per figure 8 --- note paper omits factor of sqrt(2).
 291:fltk-1.3.4-1/jpeg/jfdctint.c ****      * i0..i3 in the paper are tmp0..tmp3 here.
 292:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
 293:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 294:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 + tmp2;
 295:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 296:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 297:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_1_175875602);       /*  c3 */
 298:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 299:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS+PASS1_BITS-1);
 300:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 301:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);          /* -c3+c5 */
 302:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
 303:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 304:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 305:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 306:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223);       /* -c3+c7 */
 307:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 308:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
 309:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
 310:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += z1 + tmp13;
 311:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 312:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447);       /* -c1-c3 */
 327              		.loc 1 312 0 discriminator 3
 328 0226 488D1C11 		leaq	(%rcx,%rdx), %rbx
 276:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 329              		.loc 1 276 0 discriminator 3
 330 022a 448917   		movl	%r10d, (%rdi)
 331              	.LVL55:
 279:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 332              		.loc 1 279 0 discriminator 3
 333 022d 4F8D1419 		leaq	(%r9,%r11), %r10
 286:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 334              		.loc 1 286 0 discriminator 3
 335 0231 4D69DBDF 		imulq	$-15137, %r11, %r11
 335      C4FFFF
 336              	.LVL56:
 279:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 337              		.loc 1 279 0 discriminator 3
 338 0238 4D69D251 		imulq	$4433, %r10, %r10
 338      110000
 339              	.LVL57:
 283:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 340              		.loc 1 283 0 discriminator 3
 341 023f 4D69C97E 		imulq	$6270, %r9, %r9
 341      180000
 342              	.LVL58:
 281:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 343              		.loc 1 281 0 discriminator 3
 344 0246 4981C200 		addq	$16384, %r10
 344      400000
 345              	.LVL59:
 283:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 346              		.loc 1 283 0 discriminator 3
 347 024d 4D01D1   		addq	%r10, %r9
 286:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 348              		.loc 1 286 0 discriminator 3
 349 0250 4D01DA   		addq	%r11, %r10
 350              	.LVL60:
 283:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 351              		.loc 1 283 0 discriminator 3
 352 0253 49C1F90F 		sarq	$15, %r9
 286:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 353              		.loc 1 286 0 discriminator 3
 354 0257 49C1FA0F 		sarq	$15, %r10
 283:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 355              		.loc 1 283 0 discriminator 3
 356 025b 44894F40 		movl	%r9d, 64(%rdi)
 286:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 357              		.loc 1 286 0 discriminator 3
 358 025f 448997C0 		movl	%r10d, 192(%rdi)
 358      000000
 295:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 359              		.loc 1 295 0 discriminator 3
 360 0266 4C8D0C01 		leaq	(%rcx,%rax), %r9
 294:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 361              		.loc 1 294 0 discriminator 3
 362 026a 4C8D1416 		leaq	(%rsi,%rdx), %r10
 363              	.LVL61:
 364              		.loc 1 312 0 discriminator 3
 365 026e 4869DBFD 		imulq	$-20995, %rbx, %rbx
 365      ADFFFF
 297:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 366              		.loc 1 297 0 discriminator 3
 367 0275 4F8D1C0A 		leaq	(%r10,%r9), %r11
 301:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
 368              		.loc 1 301 0 discriminator 3
 369 0279 4D69D284 		imulq	$-3196, %r10, %r10
 369      F3FFFF
 370              	.LVL62:
 297:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 371              		.loc 1 297 0 discriminator 3
 372 0280 4D69DBA1 		imulq	$9633, %r11, %r11
 372      250000
 373              	.LVL63:
 302:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 374              		.loc 1 302 0 discriminator 3
 375 0287 4D69C93B 		imulq	$-16069, %r9, %r9
 375      C1FFFF
 376              	.LVL64:
 299:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 377              		.loc 1 299 0 discriminator 3
 378 028e 4981C300 		addq	$16384, %r11
 378      400000
 379              	.LVL65:
 303:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 380              		.loc 1 303 0 discriminator 3
 381 0295 4D01DA   		addq	%r11, %r10
 382              	.LVL66:
 304:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 383              		.loc 1 304 0 discriminator 3
 384 0298 4D01D9   		addq	%r11, %r9
 385              	.LVL67:
 306:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 386              		.loc 1 306 0 discriminator 3
 387 029b 4C8D1C06 		leaq	(%rsi,%rax), %r11
 388              	.LVL68:
 307:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
 389              		.loc 1 307 0 discriminator 3
 390 029f 4869F60B 		imulq	$12299, %rsi, %rsi
 390      300000
 391              	.LVL69:
 306:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 392              		.loc 1 306 0 discriminator 3
 393 02a6 4D69DB33 		imulq	$-7373, %r11, %r11
 393      E3FFFF
 394              	.LVL70:
 313:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);              /*  c1+c3+c5-c7 */
 395              		.loc 1 313 0 discriminator 3
 396 02ad 4869C954 		imulq	$25172, %rcx, %rcx
 396      620000
 397              	.LVL71:
 314:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
 315:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
 316:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += z1 + tmp12;
 317:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 318:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) RIGHT_SHIFT(tmp0, CONST_BITS+PASS1_BITS);
 398              		.loc 1 318 0 discriminator 3
 399 02b4 4B8D2C1A 		leaq	(%r10,%r11), %rbp
 400              	.LVL72:
 308:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
 401              		.loc 1 308 0 discriminator 3
 402 02b8 4869C08E 		imulq	$2446, %rax, %rax
 402      090000
 403              	.LVL73:
 404              		.loc 1 318 0 discriminator 3
 405 02bf 4801EE   		addq	%rbp, %rsi
 406              	.LVL74:
 407 02c2 48C1FE0F 		sarq	$15, %rsi
 408              	.LVL75:
 409 02c6 897720   		movl	%esi, 32(%rdi)
 410              	.LVL76:
 319:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS+PASS1_BITS);
 411              		.loc 1 319 0 discriminator 3
 412 02c9 498D3419 		leaq	(%r9,%rbx), %rsi
 314:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
 413              		.loc 1 314 0 discriminator 3
 414 02cd 4869D2B3 		imulq	$16819, %rdx, %rdx
 414      410000
 415              	.LVL77:
 416              		.loc 1 319 0 discriminator 3
 417 02d4 4801F1   		addq	%rsi, %rcx
 418              	.LVL78:
 419 02d7 48C1F90F 		sarq	$15, %rcx
 420              	.LVL79:
 320:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS+PASS1_BITS);
 421              		.loc 1 320 0 discriminator 3
 422 02db 4901DA   		addq	%rbx, %r10
 423              	.LVL80:
 321:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 424              		.loc 1 321 0 discriminator 3
 425 02de 4D01D9   		addq	%r11, %r9
 426              	.LVL81:
 427 02e1 4901C1   		addq	%rax, %r9
 428              	.LVL82:
 319:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS+PASS1_BITS);
 429              		.loc 1 319 0 discriminator 3
 430 02e4 894F60   		movl	%ecx, 96(%rdi)
 322:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 323:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 431              		.loc 1 323 0 discriminator 3
 432 02e7 4883C704 		addq	$4, %rdi
 433              	.LVL83:
 320:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 434              		.loc 1 320 0 discriminator 3
 435 02eb 4901D2   		addq	%rdx, %r10
 436              	.LVL84:
 321:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 437              		.loc 1 321 0 discriminator 3
 438 02ee 49C1F90F 		sarq	$15, %r9
 439              	.LVL85:
 320:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 440              		.loc 1 320 0 discriminator 3
 441 02f2 49C1FA0F 		sarq	$15, %r10
 442              	.LVL86:
 321:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 443              		.loc 1 321 0 discriminator 3
 444 02f6 44898FDC 		movl	%r9d, 220(%rdi)
 444      000000
 320:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 445              		.loc 1 320 0 discriminator 3
 446 02fd 4489979C 		movl	%r10d, 156(%rdi)
 446      000000
 447              	.LVL87:
 255:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
 448              		.loc 1 255 0 discriminator 3
 449 0304 4C39C7   		cmpq	%r8, %rdi
 450 0307 0F859BFE 		jne	.L3
 450      FFFF
 324:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 325:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 451              		.loc 1 325 0
 452 030d 5B       		popq	%rbx
 453              		.cfi_def_cfa_offset 48
 454              	.LVL88:
 455 030e 5D       		popq	%rbp
 456              		.cfi_def_cfa_offset 40
 457 030f 415C     		popq	%r12
 458              		.cfi_def_cfa_offset 32
 459 0311 415D     		popq	%r13
 460              		.cfi_def_cfa_offset 24
 461 0313 415E     		popq	%r14
 462              		.cfi_def_cfa_offset 16
 463 0315 415F     		popq	%r15
 464              		.cfi_def_cfa_offset 8
 465 0317 C3       		ret
 466              		.cfi_endproc
 467              	.LFE61:
 469              		.section	.text.unlikely.jpeg_fdct_islow
 470              	.LCOLDE0:
 471              		.section	.text.jpeg_fdct_islow
 472              	.LHOTE0:
 473              		.section	.text.unlikely.jpeg_fdct_7x7,"ax",@progbits
 474              	.LCOLDB1:
 475              		.section	.text.jpeg_fdct_7x7,"ax",@progbits
 476              	.LHOTB1:
 477              		.p2align 4,,15
 478              		.globl	jpeg_fdct_7x7
 480              	jpeg_fdct_7x7:
 481              	.LFB62:
 326:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 327:fltk-1.3.4-1/jpeg/jfdctint.c **** #ifdef DCT_SCALING_SUPPORTED
 328:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 329:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 330:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 331:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 7x7 sample block.
 332:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 333:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 334:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 335:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_7x7 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 336:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 482              		.loc 1 336 0
 483              		.cfi_startproc
 484              	.LVL89:
 485 0000 4157     		pushq	%r15
 486              		.cfi_def_cfa_offset 16
 487              		.cfi_offset 15, -16
 488 0002 4989F8   		movq	%rdi, %r8
 489 0005 4156     		pushq	%r14
 490              		.cfi_def_cfa_offset 24
 491              		.cfi_offset 14, -24
 492              	.LBB44:
 493              	.LBB45:
 494              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string3.h"
   1:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* Copyright (C) 2004-2016 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string3.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string3.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string3.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string3.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string3.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string3.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string3.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string3.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string3.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string3.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string3.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string3.h ****    <http://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifndef _STRING_H
  19:/usr/include/x86_64-linux-gnu/bits/string3.h **** # error "Never use <bits/string3.h> directly; include <string.h> instead."
  20:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  21:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  22:/usr/include/x86_64-linux-gnu/bits/string3.h **** #if !__GNUC_PREREQ (5,0)
  23:/usr/include/x86_64-linux-gnu/bits/string3.h **** __warndecl (__warn_memset_zero_len,
  24:/usr/include/x86_64-linux-gnu/bits/string3.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  25:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  26:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  27:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifndef __cplusplus
  28:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* XXX This is temporarily.  We should not redefine any of the symbols
  29:/usr/include/x86_64-linux-gnu/bits/string3.h ****    and instead integrate the error checking into the original
  30:/usr/include/x86_64-linux-gnu/bits/string3.h ****    definitions.  */
  31:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memcpy
  32:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memmove
  33:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef memset
  34:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strcat
  35:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strcpy
  36:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strncat
  37:/usr/include/x86_64-linux-gnu/bits/string3.h **** # undef strncpy
  38:/usr/include/x86_64-linux-gnu/bits/string3.h **** # ifdef __USE_GNU
  39:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef mempcpy
  40:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef stpcpy
  41:/usr/include/x86_64-linux-gnu/bits/string3.h **** # endif
  42:/usr/include/x86_64-linux-gnu/bits/string3.h **** # ifdef __USE_MISC
  43:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef bcopy
  44:/usr/include/x86_64-linux-gnu/bits/string3.h **** #  undef bzero
  45:/usr/include/x86_64-linux-gnu/bits/string3.h **** # endif
  46:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  47:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  48:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  49:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  50:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  51:/usr/include/x86_64-linux-gnu/bits/string3.h **** 	       size_t __len))
  52:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  53:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  54:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  55:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  56:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  57:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  58:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  59:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  60:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  61:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  62:/usr/include/x86_64-linux-gnu/bits/string3.h **** #ifdef __USE_GNU
  63:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  64:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  65:/usr/include/x86_64-linux-gnu/bits/string3.h **** 		size_t __len))
  66:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  67:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  68:/usr/include/x86_64-linux-gnu/bits/string3.h **** }
  69:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  70:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  71:/usr/include/x86_64-linux-gnu/bits/string3.h **** 
  72:/usr/include/x86_64-linux-gnu/bits/string3.h **** /* The first two tests here help to catch a somewhat common problem
  73:/usr/include/x86_64-linux-gnu/bits/string3.h ****    where the second and third parameter are transposed.  This is
  74:/usr/include/x86_64-linux-gnu/bits/string3.h ****    especially problematic if the intended fill value is zero.  In this
  75:/usr/include/x86_64-linux-gnu/bits/string3.h ****    case no work is done at all.  We detect these problems by referring
  76:/usr/include/x86_64-linux-gnu/bits/string3.h ****    non-existing functions.  */
  77:/usr/include/x86_64-linux-gnu/bits/string3.h **** __fortify_function void *
  78:/usr/include/x86_64-linux-gnu/bits/string3.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
  79:/usr/include/x86_64-linux-gnu/bits/string3.h **** {
  80:/usr/include/x86_64-linux-gnu/bits/string3.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  81:/usr/include/x86_64-linux-gnu/bits/string3.h ****      need them here.  */
  82:/usr/include/x86_64-linux-gnu/bits/string3.h **** #if !__GNUC_PREREQ (5,0)
  83:/usr/include/x86_64-linux-gnu/bits/string3.h ****   if (__builtin_constant_p (__len) && __len == 0
  84:/usr/include/x86_64-linux-gnu/bits/string3.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  85:/usr/include/x86_64-linux-gnu/bits/string3.h ****     {
  86:/usr/include/x86_64-linux-gnu/bits/string3.h ****       __warn_memset_zero_len ();
  87:/usr/include/x86_64-linux-gnu/bits/string3.h ****       return __dest;
  88:/usr/include/x86_64-linux-gnu/bits/string3.h ****     }
  89:/usr/include/x86_64-linux-gnu/bits/string3.h **** #endif
  90:/usr/include/x86_64-linux-gnu/bits/string3.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 495              		.loc 2 90 0
 496 0007 488D7F08 		leaq	8(%rdi), %rdi
 497              	.LVL90:
 498              	.LBE45:
 499              	.LBE44:
 500              		.loc 1 336 0
 501 000b 4155     		pushq	%r13
 502              		.cfi_def_cfa_offset 32
 503              		.cfi_offset 13, -32
 504 000d 4154     		pushq	%r12
 505              		.cfi_def_cfa_offset 40
 506              		.cfi_offset 12, -40
 507 000f 55       		pushq	%rbp
 508              		.cfi_def_cfa_offset 48
 509              		.cfi_offset 6, -48
 510 0010 53       		pushq	%rbx
 511              		.cfi_def_cfa_offset 56
 512              		.cfi_offset 3, -56
 513              	.LBB47:
 514              	.LBB46:
 515              		.loc 2 90 0
 516 0011 4C89C1   		movq	%r8, %rcx
 517 0014 48C747F8 		movq	$0, -8(%rdi)
 517      00000000 
 518 001c 48C787F0 		movq	$0, 240(%rdi)
 518      00000000 
 518      000000
 519 0027 4883E7F8 		andq	$-8, %rdi
 520 002b 4829F9   		subq	%rdi, %rcx
 521 002e 31C0     		xorl	%eax, %eax
 522 0030 498D98E0 		leaq	224(%r8), %rbx
 522      000000
 523 0037 81C10001 		addl	$256, %ecx
 523      0000
 524 003d 89D2     		movl	%edx, %edx
 525 003f 4D89C3   		movq	%r8, %r11
 526 0042 C1E903   		shrl	$3, %ecx
 527 0045 F348AB   		rep stosq
 528              	.LVL91:
 529 0048 0F1F8400 		.p2align 4,,10
 529      00000000 
 530              		.p2align 3
 531              	.L9:
 532              	.LBE46:
 533              	.LBE47:
 337:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
 338:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12;
 339:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1, z2, z3;
 340:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
 341:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 342:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
 343:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
 344:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 345:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
 346:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
 347:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 348:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 349:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
 350:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
 351:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/14).
 352:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 353:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 354:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 355:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 7; ctr++) {
 356:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 534              		.loc 1 356 0 discriminator 3
 535 0050 4989D6   		movq	%rdx, %r14
 536 0053 4C0336   		addq	(%rsi), %r14
 537              	.LVL92:
 357:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 358:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 359:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 360:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[6]);
 538              		.loc 1 360 0 discriminator 3
 539 0056 450FB67E 		movzbl	6(%r14), %r15d
 539      06
 361:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 362:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[4]);
 540              		.loc 1 362 0 discriminator 3
 541 005b 450FB64E 		movzbl	4(%r14), %r9d
 541      04
 360:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 542              		.loc 1 360 0 discriminator 3
 543 0060 410FB606 		movzbl	(%r14), %eax
 544              		.loc 1 362 0 discriminator 3
 545 0064 450FB656 		movzbl	2(%r14), %r10d
 545      02
 361:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 546              		.loc 1 361 0 discriminator 3
 547 0069 450FB66E 		movzbl	5(%r14), %r13d
 547      05
 548 006e 410FB64E 		movzbl	1(%r14), %ecx
 548      01
 363:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
 549              		.loc 1 363 0 discriminator 3
 550 0073 450FB676 		movzbl	3(%r14), %r14d
 550      03
 551              	.LVL93:
 360:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 552              		.loc 1 360 0 discriminator 3
 553 0078 428D2C38 		leal	(%rax,%r15), %ebp
 362:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
 554              		.loc 1 362 0 discriminator 3
 555 007c 478D240A 		leal	(%r10,%r9), %r12d
 364:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 365:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[6]);
 366:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[5]);
 367:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[4]);
 556              		.loc 1 367 0 discriminator 3
 557 0080 4529CA   		subl	%r9d, %r10d
 361:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[4]);
 558              		.loc 1 361 0 discriminator 3
 559 0083 428D3C29 		leal	(%rcx,%r13), %edi
 366:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[4]);
 560              		.loc 1 366 0 discriminator 3
 561 0087 4429E9   		subl	%r13d, %ecx
 365:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[5]);
 562              		.loc 1 365 0 discriminator 3
 563 008a 4429F8   		subl	%r15d, %eax
 362:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
 564              		.loc 1 362 0 discriminator 3
 565 008d 4D63E4   		movslq	%r12d, %r12
 360:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 566              		.loc 1 360 0 discriminator 3
 567 0090 4863ED   		movslq	%ebp, %rbp
 568              	.LVL94:
 365:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[5]);
 569              		.loc 1 365 0 discriminator 3
 570 0093 4898     		cltq
 368:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 369:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp2;
 571              		.loc 1 369 0 discriminator 3
 572 0095 4E8D4C25 		leaq	0(%rbp,%r12), %r9
 572      00
 361:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[4]);
 573              		.loc 1 361 0 discriminator 3
 574 009a 4863FF   		movslq	%edi, %rdi
 575              	.LVL95:
 366:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[4]);
 576              		.loc 1 366 0 discriminator 3
 577 009d 4863C9   		movslq	%ecx, %rcx
 578              	.LVL96:
 370:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 371:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 372:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 373:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp3;
 374:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 375:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 376:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.353553391));                /* (c2+c6-c4)/2 */
 377:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(0.920609002));       /* (c2+c4-c6)/2 */
 378:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
 579              		.loc 1 378 0 discriminator 3
 580 00a0 4989FF   		movq	%rdi, %r15
 367:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 581              		.loc 1 367 0 discriminator 3
 582 00a3 4D63D2   		movslq	%r10d, %r10
 583              	.LVL97:
 371:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 584              		.loc 1 371 0 discriminator 3
 585 00a6 4E8D2C0F 		leaq	(%rdi,%r9), %r13
 586              		.loc 1 378 0 discriminator 3
 587 00aa 4D29E7   		subq	%r12, %r15
 371:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 588              		.loc 1 371 0 discriminator 3
 589 00ad 4F8DAC2E 		leaq	-896(%r14,%r13), %r13
 589      80FCFFFF 
 373:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 590              		.loc 1 373 0 discriminator 3
 591 00b5 4D01F6   		addq	%r14, %r14
 592              	.LVL98:
 374:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 593              		.loc 1 374 0 discriminator 3
 594 00b8 4D29F1   		subq	%r14, %r9
 595              	.LVL99:
 371:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 596              		.loc 1 371 0 discriminator 3
 597 00bb 49C1E502 		salq	$2, %r13
 375:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.353553391));                /* (c2+c6-c4)/2 */
 598              		.loc 1 375 0 discriminator 3
 599 00bf 4D29F1   		subq	%r14, %r9
 600              	.LVL100:
 371:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 601              		.loc 1 371 0 discriminator 3
 602 00c2 45892B   		movl	%r13d, (%r11)
 603              	.LVL101:
 377:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
 604              		.loc 1 377 0 discriminator 3
 605 00c5 4989ED   		movq	%rbp, %r13
 379:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS-PASS1_BITS);
 380:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 381:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(0.881747734));       /* c4 */
 606              		.loc 1 381 0 discriminator 3
 607 00c8 4829FD   		subq	%rdi, %rbp
 608              	.LVL102:
 377:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
 609              		.loc 1 377 0 discriminator 3
 610 00cb 4D29E5   		subq	%r12, %r13
 611              	.LVL103:
 382:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 612              		.loc 1 382 0 discriminator 3
 613 00ce 4C29F7   		subq	%r14, %rdi
 614              	.LVL104:
 376:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(0.920609002));       /* (c2+c4-c6)/2 */
 615              		.loc 1 376 0 discriminator 3
 616 00d1 4D69C950 		imulq	$2896, %r9, %r9
 616      0B0000
 617              	.LVL105:
 377:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
 618              		.loc 1 377 0 discriminator 3
 619 00d8 4D69ED76 		imulq	$7542, %r13, %r13
 619      1D0000
 620              	.LVL106:
 378:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS-PASS1_BITS);
 621              		.loc 1 378 0 discriminator 3
 622 00df 4D69E712 		imulq	$2578, %r15, %r12
 622      0A0000
 623              	.LVL107:
 379:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 624              		.loc 1 379 0 discriminator 3
 625 00e6 4F8D3C29 		leaq	(%r9,%r13), %r15
 383:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 384:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
 385:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) DESCALE(z1 + z2, CONST_BITS-PASS1_BITS);
 626              		.loc 1 385 0 discriminator 3
 627 00ea 4D29E9   		subq	%r13, %r9
 628              	.LVL108:
 381:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 629              		.loc 1 381 0 discriminator 3
 630 00ed 4869ED37 		imulq	$7223, %rbp, %rbp
 630      1C0000
 382:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 631              		.loc 1 382 0 discriminator 3
 632 00f4 4869FF5F 		imulq	$-5793, %rdi, %rdi
 632      E9FFFF
 379:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 633              		.loc 1 379 0 discriminator 3
 634 00fb 4F8DBC3C 		leaq	1024(%r12,%r15), %r15
 634      00040000 
 635 0103 49C1FF0B 		sarq	$11, %r15
 382:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 636              		.loc 1 382 0 discriminator 3
 637 0107 4901EC   		addq	%rbp, %r12
 638              	.LVL109:
 379:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 639              		.loc 1 379 0 discriminator 3
 640 010a 45897B08 		movl	%r15d, 8(%r11)
 641              	.LVL110:
 382:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 642              		.loc 1 382 0 discriminator 3
 643 010e 4A8DBC27 		leaq	1024(%rdi,%r12), %rdi
 643      00040000 
 644 0116 48C1FF0B 		sarq	$11, %rdi
 645 011a 41897B10 		movl	%edi, 16(%r11)
 646              		.loc 1 385 0 discriminator 3
 647 011e 4A8DBC0D 		leaq	1024(%rbp,%r9), %rdi
 647      00040000 
 386:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 387:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 388:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 389:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(0.935414347));   /* (c3+c1-c5)/2 */
 390:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.170262339));   /* (c3+c5-c1)/2 */
 648              		.loc 1 390 0 discriminator 3
 649 0126 4989C1   		movq	%rax, %r9
 650 0129 4929C9   		subq	%rcx, %r9
 385:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 651              		.loc 1 385 0 discriminator 3
 652 012c 48C1FF0B 		sarq	$11, %rdi
 653 0130 41897B18 		movl	%edi, 24(%r11)
 389:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.170262339));   /* (c3+c5-c1)/2 */
 654              		.loc 1 389 0 discriminator 3
 655 0134 488D3C08 		leaq	(%rax,%rcx), %rdi
 391:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
 392:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 393:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.378756276)); /* -c1 */
 656              		.loc 1 393 0 discriminator 3
 657 0138 4C01D1   		addq	%r10, %rcx
 658              	.LVL111:
 394:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 395:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp12, FIX(0.613604268));   /* c5 */
 659              		.loc 1 395 0 discriminator 3
 660 013b 4C01D0   		addq	%r10, %rax
 661              	.LVL112:
 389:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.170262339));   /* (c3+c5-c1)/2 */
 662              		.loc 1 389 0 discriminator 3
 663 013e 4869EFEF 		imulq	$7663, %rdi, %rbp
 663      1D0000
 664              	.LVL113:
 390:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
 665              		.loc 1 390 0 discriminator 3
 666 0145 4969F973 		imulq	$1395, %r9, %rdi
 666      050000
 667              	.LVL114:
 393:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 668              		.loc 1 393 0 discriminator 3
 669 014c 4869C9E1 		imulq	$-11295, %rcx, %rcx
 669      D3FFFF
 391:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 670              		.loc 1 391 0 discriminator 3
 671 0153 4989E9   		movq	%rbp, %r9
 672 0156 4929F9   		subq	%rdi, %r9
 673              	.LVL115:
 392:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.378756276)); /* -c1 */
 674              		.loc 1 392 0 discriminator 3
 675 0159 4801EF   		addq	%rbp, %rdi
 676              	.LVL116:
 677              		.loc 1 395 0 discriminator 3
 678 015c 4869C0A3 		imulq	$5027, %rax, %rax
 678      130000
 679              	.LVL117:
 396:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += tmp3;
 397:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp3 + MULTIPLY(tmp12, FIX(1.870828693));   /* c3+c1-c5 */
 398:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 399:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp0, CONST_BITS-PASS1_BITS);
 400:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 680              		.loc 1 400 0 discriminator 3
 681 0163 488DBC0F 		leaq	1024(%rdi,%rcx), %rdi
 681      00040000 
 682              	.LVL118:
 399:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 683              		.loc 1 399 0 discriminator 3
 684 016b 4D8D8C01 		leaq	1024(%r9,%rax), %r9
 684      00040000 
 685              	.LVL119:
 686 0173 49C1F90B 		sarq	$11, %r9
 687              		.loc 1 400 0 discriminator 3
 688 0177 48C1FF0B 		sarq	$11, %rdi
 401:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 402:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 403:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 689              		.loc 1 403 0 discriminator 3
 690 017b 4983C320 		addq	$32, %r11
 691              	.LVL120:
 401:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 692              		.loc 1 401 0 discriminator 3
 693 017f 4D69D2DE 		imulq	$15326, %r10, %r10
 693      3B0000
 694              	.LVL121:
 399:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 695              		.loc 1 399 0 discriminator 3
 696 0186 45894BE4 		movl	%r9d, -28(%r11)
 400:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 697              		.loc 1 400 0 discriminator 3
 698 018a 41897BEC 		movl	%edi, -20(%r11)
 699 018e 4883C608 		addq	$8, %rsi
 401:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 700              		.loc 1 401 0 discriminator 3
 701 0192 4C01D0   		addq	%r10, %rax
 702              	.LVL122:
 703 0195 488D8401 		leaq	1024(%rcx,%rax), %rax
 703      00040000 
 704 019d 48C1F80B 		sarq	$11, %rax
 705 01a1 418943F4 		movl	%eax, -12(%r11)
 706              	.LVL123:
 355:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 707              		.loc 1 355 0 discriminator 3
 708 01a5 4939DB   		cmpq	%rbx, %r11
 709 01a8 0F85A2FE 		jne	.L9
 709      FFFF
 710 01ae 498D781C 		leaq	28(%r8), %rdi
 711              	.LVL124:
 712              		.p2align 4,,10
 713 01b2 660F1F44 		.p2align 3
 713      0000
 714              	.L10:
 404:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 405:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 406:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
 407:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
 408:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
 409:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/7)**2 = 64/49, which we fold
 410:fltk-1.3.4-1/jpeg/jfdctint.c ****    * into the constant multipliers:
 411:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/14) * 64/49.
 412:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 413:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 414:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 415:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 7; ctr++) {
 416:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 417:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 418:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*6];
 715              		.loc 1 418 0 discriminator 3
 716 01b8 458BA0C0 		movl	192(%r8), %r12d
 716      000000
 419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*4];
 717              		.loc 1 420 0 discriminator 3
 718 01bf 418B8880 		movl	128(%r8), %ecx
 718      000000
 418:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 719              		.loc 1 418 0 discriminator 3
 720 01c6 418B00   		movl	(%r8), %eax
 721              		.loc 1 420 0 discriminator 3
 722 01c9 458B4840 		movl	64(%r8), %r9d
 419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 723              		.loc 1 419 0 discriminator 3
 724 01cd 418BB0A0 		movl	160(%r8), %esi
 724      000000
 725 01d4 418B5020 		movl	32(%r8), %edx
 421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3];
 726              		.loc 1 421 0 discriminator 3
 727 01d8 49636860 		movslq	96(%r8), %rbp
 418:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 728              		.loc 1 418 0 discriminator 3
 729 01dc 468D1C20 		leal	(%rax,%r12), %r11d
 420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3];
 730              		.loc 1 420 0 discriminator 3
 731 01e0 418D1C09 		leal	(%r9,%rcx), %ebx
 422:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*6];
 424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*5];
 425:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*4];
 732              		.loc 1 425 0 discriminator 3
 733 01e4 4129C9   		subl	%ecx, %r9d
 419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*4];
 734              		.loc 1 419 0 discriminator 3
 735 01e7 448D1432 		leal	(%rdx,%rsi), %r10d
 424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*4];
 736              		.loc 1 424 0 discriminator 3
 737 01eb 29F2     		subl	%esi, %edx
 423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*5];
 738              		.loc 1 423 0 discriminator 3
 739 01ed 4429E0   		subl	%r12d, %eax
 420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3];
 740              		.loc 1 420 0 discriminator 3
 741 01f0 4863DB   		movslq	%ebx, %rbx
 418:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 742              		.loc 1 418 0 discriminator 3
 743 01f3 4D63DB   		movslq	%r11d, %r11
 744              	.LVL125:
 423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*5];
 745              		.loc 1 423 0 discriminator 3
 746 01f6 4898     		cltq
 426:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 427:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp2;
 747              		.loc 1 427 0 discriminator 3
 748 01f8 498D0C1B 		leaq	(%r11,%rbx), %rcx
 419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*4];
 749              		.loc 1 419 0 discriminator 3
 750 01fc 4D63D2   		movslq	%r10d, %r10
 751              	.LVL126:
 428:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 429:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
 430:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 431:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp3;
 432:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 433:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 434:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.461784020));                /* (c2+c6-c4)/2 */
 435:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(1.202428084));       /* (c2+c4-c6)/2 */
 752              		.loc 1 435 0 discriminator 3
 753 01ff 4D89DC   		movq	%r11, %r12
 754 0202 4929DC   		subq	%rbx, %r12
 436:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.411026446));       /* c6 */
 437:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS+PASS1_BITS);
 438:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 439:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(1.151670509));       /* c4 */
 755              		.loc 1 439 0 discriminator 3
 756 0205 4D29D3   		subq	%r10, %r11
 757              	.LVL127:
 424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*4];
 758              		.loc 1 424 0 discriminator 3
 759 0208 4863D2   		movslq	%edx, %rdx
 760              	.LVL128:
 428:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 761              		.loc 1 428 0 discriminator 3
 762 020b 498D340A 		leaq	(%r10,%rcx), %rsi
 425:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 763              		.loc 1 425 0 discriminator 3
 764 020f 4D63C9   		movslq	%r9d, %r9
 765              	.LVL129:
 435:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.411026446));       /* c6 */
 766              		.loc 1 435 0 discriminator 3
 767 0212 4D69E47A 		imulq	$9850, %r12, %r12
 767      260000
 428:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
 768              		.loc 1 428 0 discriminator 3
 769 0219 4801EE   		addq	%rbp, %rsi
 431:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 770              		.loc 1 431 0 discriminator 3
 771 021c 4801ED   		addq	%rbp, %rbp
 772              	.LVL130:
 428:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
 773              		.loc 1 428 0 discriminator 3
 774 021f 4869F6CC 		imulq	$10700, %rsi, %rsi
 774      290000
 432:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 775              		.loc 1 432 0 discriminator 3
 776 0226 4829E9   		subq	%rbp, %rcx
 777              	.LVL131:
 433:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.461784020));                /* (c2+c6-c4)/2 */
 778              		.loc 1 433 0 discriminator 3
 779 0229 4829E9   		subq	%rbp, %rcx
 780              	.LVL132:
 434:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(1.202428084));       /* (c2+c4-c6)/2 */
 781              		.loc 1 434 0 discriminator 3
 782 022c 4869C9C7 		imulq	$3783, %rcx, %rcx
 782      0E0000
 783              	.LVL133:
 428:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
 784              		.loc 1 428 0 discriminator 3
 785 0233 4881C600 		addq	$16384, %rsi
 785      400000
 786 023a 48C1FE0F 		sarq	$15, %rsi
 787 023e 418930   		movl	%esi, (%r8)
 788              	.LVL134:
 436:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS+PASS1_BITS);
 789              		.loc 1 436 0 discriminator 3
 790 0241 4C89D6   		movq	%r10, %rsi
 440:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 791              		.loc 1 440 0 discriminator 3
 792 0244 4929EA   		subq	%rbp, %r10
 793              	.LVL135:
 436:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS+PASS1_BITS);
 794              		.loc 1 436 0 discriminator 3
 795 0247 4829DE   		subq	%rbx, %rsi
 796              	.LVL136:
 797 024a 4869DE27 		imulq	$3367, %rsi, %rbx
 797      0D0000
 798              	.LVL137:
 437:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 799              		.loc 1 437 0 discriminator 3
 800 0251 4A8D3421 		leaq	(%rcx,%r12), %rsi
 441:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 442:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 443:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM) DESCALE(z1 + z2, CONST_BITS+PASS1_BITS);
 801              		.loc 1 443 0 discriminator 3
 802 0255 4C29E1   		subq	%r12, %rcx
 803              	.LVL138:
 440:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 804              		.loc 1 440 0 discriminator 3
 805 0258 4D69D272 		imulq	$-7566, %r10, %r10
 805      E2FFFF
 437:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 806              		.loc 1 437 0 discriminator 3
 807 025f 488DB433 		leaq	16384(%rbx,%rsi), %rsi
 807      00400000 
 808 0267 48C1FE0F 		sarq	$15, %rsi
 809 026b 41897040 		movl	%esi, 64(%r8)
 810              	.LVL139:
 439:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 811              		.loc 1 439 0 discriminator 3
 812 026f 4969F3DA 		imulq	$9434, %r11, %rsi
 812      240000
 813              	.LVL140:
 814              		.loc 1 443 0 discriminator 3
 815 0276 488D8C0E 		leaq	16384(%rsi,%rcx), %rcx
 815      00400000 
 440:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 816              		.loc 1 440 0 discriminator 3
 817 027e 4801F3   		addq	%rsi, %rbx
 818              	.LVL141:
 444:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 445:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 446:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 447:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(1.221765677));   /* (c3+c1-c5)/2 */
 448:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.222383464));   /* (c3+c5-c1)/2 */
 819              		.loc 1 448 0 discriminator 3
 820 0281 4889C6   		movq	%rax, %rsi
 821              	.LVL142:
 440:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 822              		.loc 1 440 0 discriminator 3
 823 0284 4D8D941A 		leaq	16384(%r10,%rbx), %r10
 823      00400000 
 824              		.loc 1 448 0 discriminator 3
 825 028c 4829D6   		subq	%rdx, %rsi
 443:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 826              		.loc 1 443 0 discriminator 3
 827 028f 48C1F90F 		sarq	$15, %rcx
 828 0293 418988C0 		movl	%ecx, 192(%r8)
 828      000000
 447:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.222383464));   /* (c3+c5-c1)/2 */
 829              		.loc 1 447 0 discriminator 3
 830 029a 488D0C10 		leaq	(%rax,%rdx), %rcx
 440:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 831              		.loc 1 440 0 discriminator 3
 832 029e 49C1FA0F 		sarq	$15, %r10
 833 02a2 45899080 		movl	%r10d, 128(%r8)
 833      000000
 449:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
 450:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 451:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.800824523)); /* -c1 */
 834              		.loc 1 451 0 discriminator 3
 835 02a9 4C01CA   		addq	%r9, %rdx
 836              	.LVL143:
 452:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 453:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp12, FIX(0.801442310));   /* c5 */
 837              		.loc 1 453 0 discriminator 3
 838 02ac 4C01C8   		addq	%r9, %rax
 839              	.LVL144:
 447:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.222383464));   /* (c3+c5-c1)/2 */
 840              		.loc 1 447 0 discriminator 3
 841 02af 4C69D119 		imulq	$10009, %rcx, %r10
 841      270000
 842              	.LVL145:
 448:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
 843              		.loc 1 448 0 discriminator 3
 844 02b6 4869CE1E 		imulq	$1822, %rsi, %rcx
 844      070000
 845              	.LVL146:
 451:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 846              		.loc 1 451 0 discriminator 3
 847 02bd 4869D260 		imulq	$-14752, %rdx, %rdx
 847      C6FFFF
 449:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 848              		.loc 1 449 0 discriminator 3
 849 02c4 4C89D6   		movq	%r10, %rsi
 850 02c7 4829CE   		subq	%rcx, %rsi
 851              	.LVL147:
 450:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.800824523)); /* -c1 */
 852              		.loc 1 450 0 discriminator 3
 853 02ca 4C01D1   		addq	%r10, %rcx
 854              	.LVL148:
 855              		.loc 1 453 0 discriminator 3
 856 02cd 4869C0A5 		imulq	$6565, %rax, %rax
 856      190000
 857              	.LVL149:
 454:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += tmp3;
 455:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp3 + MULTIPLY(tmp12, FIX(2.443531355));   /* c3+c1-c5 */
 456:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp0, CONST_BITS+PASS1_BITS);
 458:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS);
 858              		.loc 1 458 0 discriminator 3
 859 02d4 488D8C11 		leaq	16384(%rcx,%rdx), %rcx
 859      00400000 
 860              	.LVL150:
 459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS);
 460:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 461:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 861              		.loc 1 461 0 discriminator 3
 862 02dc 4983C004 		addq	$4, %r8
 863              	.LVL151:
 459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS);
 864              		.loc 1 459 0 discriminator 3
 865 02e0 4D69C931 		imulq	$20017, %r9, %r9
 865      4E0000
 866              	.LVL152:
 458:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS);
 867              		.loc 1 458 0 discriminator 3
 868 02e7 48C1F90F 		sarq	$15, %rcx
 869 02eb 4189485C 		movl	%ecx, 92(%r8)
 457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS);
 870              		.loc 1 457 0 discriminator 3
 871 02ef 488DB406 		leaq	16384(%rsi,%rax), %rsi
 871      00400000 
 872              	.LVL153:
 459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS);
 873              		.loc 1 459 0 discriminator 3
 874 02f7 4C01C8   		addq	%r9, %rax
 875              	.LVL154:
 876 02fa 488D8402 		leaq	16384(%rdx,%rax), %rax
 876      00400000 
 457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS);
 877              		.loc 1 457 0 discriminator 3
 878 0302 48C1FE0F 		sarq	$15, %rsi
 879 0306 4189701C 		movl	%esi, 28(%r8)
 880              	.LVL155:
 459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS);
 881              		.loc 1 459 0 discriminator 3
 882 030a 48C1F80F 		sarq	$15, %rax
 883 030e 4189809C 		movl	%eax, 156(%r8)
 883      000000
 884              	.LVL156:
 415:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 885              		.loc 1 415 0 discriminator 3
 886 0315 4939F8   		cmpq	%rdi, %r8
 887 0318 0F859AFE 		jne	.L10
 887      FFFF
 462:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 463:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 888              		.loc 1 463 0
 889 031e 5B       		popq	%rbx
 890              		.cfi_def_cfa_offset 48
 891 031f 5D       		popq	%rbp
 892              		.cfi_def_cfa_offset 40
 893 0320 415C     		popq	%r12
 894              		.cfi_def_cfa_offset 32
 895 0322 415D     		popq	%r13
 896              		.cfi_def_cfa_offset 24
 897 0324 415E     		popq	%r14
 898              		.cfi_def_cfa_offset 16
 899 0326 415F     		popq	%r15
 900              		.cfi_def_cfa_offset 8
 901 0328 C3       		ret
 902              		.cfi_endproc
 903              	.LFE62:
 905              		.section	.text.unlikely.jpeg_fdct_7x7
 906              	.LCOLDE1:
 907              		.section	.text.jpeg_fdct_7x7
 908              	.LHOTE1:
 909              		.section	.text.unlikely.jpeg_fdct_6x6,"ax",@progbits
 910              	.LCOLDB2:
 911              		.section	.text.jpeg_fdct_6x6,"ax",@progbits
 912              	.LHOTB2:
 913              		.p2align 4,,15
 914              		.globl	jpeg_fdct_6x6
 916              	jpeg_fdct_6x6:
 917              	.LFB63:
 464:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 465:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 466:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 467:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 6x6 sample block.
 468:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 469:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 470:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 471:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_6x6 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 472:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 918              		.loc 1 472 0
 919              		.cfi_startproc
 920              	.LVL157:
 921 0000 4157     		pushq	%r15
 922              		.cfi_def_cfa_offset 16
 923              		.cfi_offset 15, -16
 924 0002 4989F8   		movq	%rdi, %r8
 925 0005 4156     		pushq	%r14
 926              		.cfi_def_cfa_offset 24
 927              		.cfi_offset 14, -24
 928              	.LBB48:
 929              	.LBB49:
 930              		.loc 2 90 0
 931 0007 488D7F08 		leaq	8(%rdi), %rdi
 932              	.LVL158:
 933              	.LBE49:
 934              	.LBE48:
 935              		.loc 1 472 0
 936 000b 4155     		pushq	%r13
 937              		.cfi_def_cfa_offset 32
 938              		.cfi_offset 13, -32
 939 000d 4154     		pushq	%r12
 940              		.cfi_def_cfa_offset 40
 941              		.cfi_offset 12, -40
 942 000f 55       		pushq	%rbp
 943              		.cfi_def_cfa_offset 48
 944              		.cfi_offset 6, -48
 945 0010 53       		pushq	%rbx
 946              		.cfi_def_cfa_offset 56
 947              		.cfi_offset 3, -56
 948              	.LBB51:
 949              	.LBB50:
 950              		.loc 2 90 0
 951 0011 4C89C1   		movq	%r8, %rcx
 952 0014 48C747F8 		movq	$0, -8(%rdi)
 952      00000000 
 953 001c 48C787F0 		movq	$0, 240(%rdi)
 953      00000000 
 953      000000
 954 0027 4883E7F8 		andq	$-8, %rdi
 955 002b 4829F9   		subq	%rdi, %rcx
 956 002e 31C0     		xorl	%eax, %eax
 957 0030 498DA8C0 		leaq	192(%r8), %rbp
 957      000000
 958 0037 81C10001 		addl	$256, %ecx
 958      0000
 959 003d 89D2     		movl	%edx, %edx
 960 003f C1E903   		shrl	$3, %ecx
 961 0042 F348AB   		rep stosq
 962              	.LVL159:
 963 0045 4C89C1   		movq	%r8, %rcx
 964              	.LVL160:
 965 0048 0F1F8400 		.p2align 4,,10
 965      00000000 
 966              		.p2align 3
 967              	.L15:
 968              	.LBE50:
 969              	.LBE51:
 473:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2;
 474:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12;
 475:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
 476:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 477:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
 478:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
 479:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 480:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
 481:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
 482:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 483:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 484:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
 485:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
 486:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/12).
 487:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 488:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 489:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 490:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
 491:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 970              		.loc 1 491 0 discriminator 3
 971 0050 4889D0   		movq	%rdx, %rax
 972 0053 480306   		addq	(%rsi), %rax
 973              	.LVL161:
 492:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 493:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 494:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[5]);
 496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 497:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 498:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 499:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp2;
 500:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 501:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[5]);
 503:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
 504:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[3]);
 505:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 506:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 507:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 508:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
 509:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 510:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 511:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
 512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 513:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 514:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
 515:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 516:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 517:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 518:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = DESCALE(MULTIPLY(tmp0 + tmp2, FIX(0.366025404)),     /* c5 */
 519:fltk-1.3.4-1/jpeg/jfdctint.c **** 		    CONST_BITS-PASS1_BITS);
 520:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 521:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) (tmp10 + ((tmp0 + tmp1) << PASS1_BITS));
 522:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 523:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << PASS1_BITS));
 524:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 525:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 974              		.loc 1 525 0 discriminator 3
 975 0056 4883C120 		addq	$32, %rcx
 976              	.LVL162:
 977 005a 4883C608 		addq	$8, %rsi
 495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 978              		.loc 1 495 0 discriminator 3
 979 005e 0FB67805 		movzbl	5(%rax), %edi
 497:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 980              		.loc 1 497 0 discriminator 3
 981 0062 0FB65803 		movzbl	3(%rax), %ebx
 495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 982              		.loc 1 495 0 discriminator 3
 983 0066 440FB610 		movzbl	(%rax), %r10d
 497:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 984              		.loc 1 497 0 discriminator 3
 985 006a 440FB648 		movzbl	2(%rax), %r9d
 985      02
 496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 986              		.loc 1 496 0 discriminator 3
 987 006f 440FB678 		movzbl	4(%rax), %r15d
 987      04
 988 0074 440FB658 		movzbl	1(%rax), %r11d
 988      01
 495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 989              		.loc 1 495 0 discriminator 3
 990 0079 458D243A 		leal	(%r10,%rdi), %r12d
 497:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 991              		.loc 1 497 0 discriminator 3
 992 007d 458D3419 		leal	(%r9,%rbx), %r14d
 502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
 993              		.loc 1 502 0 discriminator 3
 994 0081 4129FA   		subl	%edi, %r10d
 496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 995              		.loc 1 496 0 discriminator 3
 996 0084 478D2C3B 		leal	(%r11,%r15), %r13d
 503:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[3]);
 997              		.loc 1 503 0 discriminator 3
 998 0088 4529FB   		subl	%r15d, %r11d
 504:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 999              		.loc 1 504 0 discriminator 3
 1000 008b 4129D9   		subl	%ebx, %r9d
 495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 1001              		.loc 1 495 0 discriminator 3
 1002 008e 4D63E4   		movslq	%r12d, %r12
 1003              	.LVL163:
 497:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1004              		.loc 1 497 0 discriminator 3
 1005 0091 4D63F6   		movslq	%r14d, %r14
 502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
 1006              		.loc 1 502 0 discriminator 3
 1007 0094 4963FA   		movslq	%r10d, %rdi
 499:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 1008              		.loc 1 499 0 discriminator 3
 1009 0097 4B8D0434 		leaq	(%r12,%r14), %rax
 1010              	.LVL164:
 496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 1011              		.loc 1 496 0 discriminator 3
 1012 009b 4D63ED   		movslq	%r13d, %r13
 1013              	.LVL165:
 504:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1014              		.loc 1 504 0 discriminator 3
 1015 009e 4963D9   		movslq	%r9d, %rbx
 1016              	.LVL166:
 509:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 1017              		.loc 1 509 0 discriminator 3
 1018 00a1 4D29F4   		subq	%r14, %r12
 1019              	.LVL167:
 521:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 1020              		.loc 1 521 0 discriminator 3
 1021 00a4 4501DA   		addl	%r11d, %r10d
 523:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1022              		.loc 1 523 0 discriminator 3
 1023 00a7 4529D9   		subl	%r11d, %r9d
 507:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
 1024              		.loc 1 507 0 discriminator 3
 1025 00aa 4D8DBC05 		leaq	-768(%r13,%rax), %r15
 1025      00FDFFFF 
 512:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 1026              		.loc 1 512 0 discriminator 3
 1027 00b2 4C29E8   		subq	%r13, %rax
 1028              	.LVL168:
 1029 00b5 4C29E8   		subq	%r13, %rax
 1030 00b8 4869C0A1 		imulq	$5793, %rax, %rax
 1030      160000
 507:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
 1031              		.loc 1 507 0 discriminator 3
 1032 00bf 49C1E702 		salq	$2, %r15
 509:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 1033              		.loc 1 509 0 discriminator 3
 1034 00c3 4D69E431 		imulq	$10033, %r12, %r12
 1034      270000
 1035              	.LVL169:
 507:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
 1036              		.loc 1 507 0 discriminator 3
 1037 00ca 448979E0 		movl	%r15d, -32(%rcx)
 1038              	.LVL170:
 512:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 1039              		.loc 1 512 0 discriminator 3
 1040 00ce 48050004 		addq	$1024, %rax
 1040      0000
 1041 00d4 48C1F80B 		sarq	$11, %rax
 509:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 1042              		.loc 1 509 0 discriminator 3
 1043 00d8 4981C400 		addq	$1024, %r12
 1043      040000
 512:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 1044              		.loc 1 512 0 discriminator 3
 1045 00df 8941F0   		movl	%eax, -16(%rcx)
 1046              	.LVL171:
 521:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 1047              		.loc 1 521 0 discriminator 3
 1048 00e2 488D041F 		leaq	(%rdi,%rbx), %rax
 509:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 1049              		.loc 1 509 0 discriminator 3
 1050 00e6 49C1FC0B 		sarq	$11, %r12
 1051 00ea 448961E8 		movl	%r12d, -24(%rcx)
 521:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 1052              		.loc 1 521 0 discriminator 3
 1053 00ee 4869C0B6 		imulq	$2998, %rax, %rax
 1053      0B0000
 1054 00f5 48050004 		addq	$1024, %rax
 1054      0000
 1055 00fb 48C1F80B 		sarq	$11, %rax
 1056              	.LVL172:
 1057 00ff 468D1490 		leal	(%rax,%r10,4), %r10d
 523:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1058              		.loc 1 523 0 discriminator 3
 1059 0103 428D0488 		leal	(%rax,%r9,4), %eax
 1060              	.LVL173:
 521:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 1061              		.loc 1 521 0 discriminator 3
 1062 0107 448951E4 		movl	%r10d, -28(%rcx)
 522:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << PASS1_BITS));
 1063              		.loc 1 522 0 discriminator 3
 1064 010b 4D63D3   		movslq	%r11d, %r10
 1065              	.LVL174:
 523:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1066              		.loc 1 523 0 discriminator 3
 1067 010e 8941F4   		movl	%eax, -12(%rcx)
 522:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << PASS1_BITS));
 1068              		.loc 1 522 0 discriminator 3
 1069 0111 4C29D7   		subq	%r10, %rdi
 1070              	.LVL175:
 1071 0114 4829DF   		subq	%rbx, %rdi
 1072 0117 48C1E702 		salq	$2, %rdi
 1073 011b 8979EC   		movl	%edi, -20(%rcx)
 1074              	.LVL176:
 490:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 1075              		.loc 1 490 0 discriminator 3
 1076 011e 4839E9   		cmpq	%rbp, %rcx
 1077 0121 0F8529FF 		jne	.L15
 1077      FFFF
 1078 0127 498D7818 		leaq	24(%r8), %rdi
 1079              	.LVL177:
 1080 012b 0F1F4400 		.p2align 4,,10
 1080      00
 1081              		.p2align 3
 1082              	.L16:
 526:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 527:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 528:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
 529:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
 530:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
 531:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/6)**2 = 16/9, which we fold
 532:fltk-1.3.4-1/jpeg/jfdctint.c ****    * into the constant multipliers:
 533:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/12) * 16/9.
 534:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 535:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 536:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 537:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
 538:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 539:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*5];
 541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 542:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 1083              		.loc 1 542 0 discriminator 3
 1084 0130 458B5060 		movl	96(%r8), %r10d
 540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 1085              		.loc 1 540 0 discriminator 3
 1086 0134 418B00   		movl	(%r8), %eax
 543:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 544:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp2;
 545:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 546:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*5];
 548:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
 549:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
 550:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 551:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 552:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 553:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 554:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 555:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
 556:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 557:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 558:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
 559:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 560:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 561:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 562:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 563:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp0 + tmp2, FIX(0.650711829));             /* c5 */
 564:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 565:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 566:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 567:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 568:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
 569:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 570:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 571:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
 572:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 573:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 574:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 575:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 1087              		.loc 1 575 0 discriminator 3
 1088 0137 4983C004 		addq	$4, %r8
 1089              	.LVL178:
 540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 1090              		.loc 1 540 0 discriminator 3
 1091 013b 458BA09C 		movl	156(%r8), %r12d
 1091      000000
 542:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1092              		.loc 1 542 0 discriminator 3
 1093 0142 418B503C 		movl	60(%r8), %edx
 541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 1094              		.loc 1 541 0 discriminator 3
 1095 0146 418B701C 		movl	28(%r8), %esi
 1096 014a 418B687C 		movl	124(%r8), %ebp
 542:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1097              		.loc 1 542 0 discriminator 3
 1098 014e 428D1C12 		leal	(%rdx,%r10), %ebx
 540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 1099              		.loc 1 540 0 discriminator 3
 1100 0152 468D0C20 		leal	(%rax,%r12), %r9d
 549:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1101              		.loc 1 549 0 discriminator 3
 1102 0156 4429D2   		subl	%r10d, %edx
 541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 1103              		.loc 1 541 0 discriminator 3
 1104 0159 448D1C2E 		leal	(%rsi,%rbp), %r11d
 547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
 1105              		.loc 1 547 0 discriminator 3
 1106 015d 4429E0   		subl	%r12d, %eax
 548:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
 1107              		.loc 1 548 0 discriminator 3
 1108 0160 29EE     		subl	%ebp, %esi
 540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 1109              		.loc 1 540 0 discriminator 3
 1110 0162 4D63C9   		movslq	%r9d, %r9
 1111              	.LVL179:
 542:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1112              		.loc 1 542 0 discriminator 3
 1113 0165 4863DB   		movslq	%ebx, %rbx
 547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
 1114              		.loc 1 547 0 discriminator 3
 1115 0168 4898     		cltq
 544:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 1116              		.loc 1 544 0 discriminator 3
 1117 016a 498D0C19 		leaq	(%r9,%rbx), %rcx
 541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 1118              		.loc 1 541 0 discriminator 3
 1119 016e 4D63DB   		movslq	%r11d, %r11
 1120              	.LVL180:
 554:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
 1121              		.loc 1 554 0 discriminator 3
 1122 0171 4929D9   		subq	%rbx, %r9
 1123              	.LVL181:
 1124 0174 4D69C9AD 		imulq	$17837, %r9, %r9
 1124      450000
 1125              	.LVL182:
 548:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
 1126              		.loc 1 548 0 discriminator 3
 1127 017b 4863F6   		movslq	%esi, %rsi
 1128              	.LVL183:
 549:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1129              		.loc 1 549 0 discriminator 3
 1130 017e 4863D2   		movslq	%edx, %rdx
 1131              	.LVL184:
 551:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 1132              		.loc 1 551 0 discriminator 3
 1133 0181 4D8D140B 		leaq	(%r11,%rcx), %r10
 557:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
 1134              		.loc 1 557 0 discriminator 3
 1135 0185 4C29D9   		subq	%r11, %rcx
 1136              	.LVL185:
 1137 0188 4C29D9   		subq	%r11, %rcx
 1138 018b 4869C93A 		imulq	$10298, %rcx, %rcx
 1138      280000
 554:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
 1139              		.loc 1 554 0 discriminator 3
 1140 0192 4981C100 		addq	$16384, %r9
 1140      400000
 1141 0199 49C1F90F 		sarq	$15, %r9
 1142 019d 4589483C 		movl	%r9d, 60(%r8)
 565:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 1143              		.loc 1 565 0 discriminator 3
 1144 01a1 4C8D0C30 		leaq	(%rax,%rsi), %r9
 557:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
 1145              		.loc 1 557 0 discriminator 3
 1146 01a5 4881C100 		addq	$16384, %rcx
 1146      400000
 1147 01ac 48C1F90F 		sarq	$15, %rcx
 1148 01b0 4189487C 		movl	%ecx, 124(%r8)
 563:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1149              		.loc 1 563 0 discriminator 3
 1150 01b4 488D0C10 		leaq	(%rax,%rdx), %rcx
 568:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 1151              		.loc 1 568 0 discriminator 3
 1152 01b8 4829F0   		subq	%rsi, %rax
 1153              	.LVL186:
 1154 01bb 4829D0   		subq	%rdx, %rax
 571:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 1155              		.loc 1 571 0 discriminator 3
 1156 01be 4829F2   		subq	%rsi, %rdx
 1157              	.LVL187:
 568:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 1158              		.loc 1 568 0 discriminator 3
 1159 01c1 4869C0E4 		imulq	$14564, %rax, %rax
 1159      380000
 563:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1160              		.loc 1 563 0 discriminator 3
 1161 01c8 4869C9D3 		imulq	$5331, %rcx, %rcx
 1161      140000
 1162              	.LVL188:
 565:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 1163              		.loc 1 565 0 discriminator 3
 1164 01cf 4D69C9E4 		imulq	$14564, %r9, %r9
 1164      380000
 568:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 1165              		.loc 1 568 0 discriminator 3
 1166 01d6 48050040 		addq	$16384, %rax
 1166      0000
 1167 01dc 48C1F80F 		sarq	$15, %rax
 571:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 1168              		.loc 1 571 0 discriminator 3
 1169 01e0 4869D2E4 		imulq	$14564, %rdx, %rdx
 1169      380000
 568:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 1170              		.loc 1 568 0 discriminator 3
 1171 01e7 4189405C 		movl	%eax, 92(%r8)
 565:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 1172              		.loc 1 565 0 discriminator 3
 1173 01eb 4E8D8C09 		leaq	16384(%rcx,%r9), %r9
 1173      00400000 
 551:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 1174              		.loc 1 551 0 discriminator 3
 1175 01f3 4D69D2E4 		imulq	$14564, %r10, %r10
 1175      380000
 565:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 1176              		.loc 1 565 0 discriminator 3
 1177 01fa 49C1F90F 		sarq	$15, %r9
 1178 01fe 4589481C 		movl	%r9d, 28(%r8)
 571:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 1179              		.loc 1 571 0 discriminator 3
 1180 0202 488D8411 		leaq	16384(%rcx,%rdx), %rax
 1180      00400000 
 551:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 1181              		.loc 1 551 0 discriminator 3
 1182 020a 4981C200 		addq	$16384, %r10
 1182      400000
 1183 0211 49C1FA0F 		sarq	$15, %r10
 571:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 1184              		.loc 1 571 0 discriminator 3
 1185 0215 48C1F80F 		sarq	$15, %rax
 551:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 1186              		.loc 1 551 0 discriminator 3
 1187 0219 458950FC 		movl	%r10d, -4(%r8)
 1188              	.LVL189:
 571:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 1189              		.loc 1 571 0 discriminator 3
 1190 021d 4189809C 		movl	%eax, 156(%r8)
 1190      000000
 1191              	.LVL190:
 537:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 1192              		.loc 1 537 0 discriminator 3
 1193 0224 4939F8   		cmpq	%rdi, %r8
 1194 0227 0F8503FF 		jne	.L16
 1194      FFFF
 576:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 577:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 1195              		.loc 1 577 0
 1196 022d 5B       		popq	%rbx
 1197              		.cfi_def_cfa_offset 48
 1198 022e 5D       		popq	%rbp
 1199              		.cfi_def_cfa_offset 40
 1200 022f 415C     		popq	%r12
 1201              		.cfi_def_cfa_offset 32
 1202 0231 415D     		popq	%r13
 1203              		.cfi_def_cfa_offset 24
 1204 0233 415E     		popq	%r14
 1205              		.cfi_def_cfa_offset 16
 1206 0235 415F     		popq	%r15
 1207              		.cfi_def_cfa_offset 8
 1208 0237 C3       		ret
 1209              		.cfi_endproc
 1210              	.LFE63:
 1212              		.section	.text.unlikely.jpeg_fdct_6x6
 1213              	.LCOLDE2:
 1214              		.section	.text.jpeg_fdct_6x6
 1215              	.LHOTE2:
 1216              		.section	.text.unlikely.jpeg_fdct_5x5,"ax",@progbits
 1217              	.LCOLDB3:
 1218              		.section	.text.jpeg_fdct_5x5,"ax",@progbits
 1219              	.LHOTB3:
 1220              		.p2align 4,,15
 1221              		.globl	jpeg_fdct_5x5
 1223              	jpeg_fdct_5x5:
 1224              	.LFB64:
 578:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 579:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 580:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 581:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 5x5 sample block.
 582:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 583:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 584:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 585:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_5x5 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 586:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 1225              		.loc 1 586 0
 1226              		.cfi_startproc
 1227              	.LVL191:
 1228 0000 4155     		pushq	%r13
 1229              		.cfi_def_cfa_offset 16
 1230              		.cfi_offset 13, -16
 1231 0002 4989F8   		movq	%rdi, %r8
 1232 0005 4154     		pushq	%r12
 1233              		.cfi_def_cfa_offset 24
 1234              		.cfi_offset 12, -24
 1235              	.LBB52:
 1236              	.LBB53:
 1237              		.loc 2 90 0
 1238 0007 488D7F08 		leaq	8(%rdi), %rdi
 1239              	.LVL192:
 1240              	.LBE53:
 1241              	.LBE52:
 1242              		.loc 1 586 0
 1243 000b 55       		pushq	%rbp
 1244              		.cfi_def_cfa_offset 32
 1245              		.cfi_offset 6, -32
 1246 000c 53       		pushq	%rbx
 1247              		.cfi_def_cfa_offset 40
 1248              		.cfi_offset 3, -40
 1249              	.LBB55:
 1250              	.LBB54:
 1251              		.loc 2 90 0
 1252 000d 48C747F8 		movq	$0, -8(%rdi)
 1252      00000000 
 1253 0015 48C787F0 		movq	$0, 240(%rdi)
 1253      00000000 
 1253      000000
 1254 0020 4C89C1   		movq	%r8, %rcx
 1255 0023 4883E7F8 		andq	$-8, %rdi
 1256 0027 31C0     		xorl	%eax, %eax
 1257 0029 4D8D90A0 		leaq	160(%r8), %r10
 1257      000000
 1258 0030 4829F9   		subq	%rdi, %rcx
 1259 0033 89D2     		movl	%edx, %edx
 1260 0035 4D89C1   		movq	%r8, %r9
 1261 0038 81C10001 		addl	$256, %ecx
 1261      0000
 1262 003e C1E903   		shrl	$3, %ecx
 1263 0041 F348AB   		rep stosq
 1264              	.LVL193:
 1265              	.L21:
 1266              	.LBE54:
 1267              	.LBE55:
 587:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2;
 588:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11;
 589:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
 590:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 591:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
 592:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
 593:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 594:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
 595:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
 596:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 597:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 598:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
 599:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
 600:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We scale the results further by 2 as part of output adaption
 601:fltk-1.3.4-1/jpeg/jfdctint.c ****    * scaling for different DCT size.
 602:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/10).
 603:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 604:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 605:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 606:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 5; ctr++) {
 607:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 1268              		.loc 1 607 0 discriminator 3
 1269 0044 4889D1   		movq	%rdx, %rcx
 1270 0047 48030E   		addq	(%rsi), %rcx
 1271              	.LVL194:
 608:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 609:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 610:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 611:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[4]);
 612:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
 613:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
 614:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 615:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp1;
 616:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
 617:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 618:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[4]);
 619:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[3]);
 620:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 621:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 622:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 623:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << (PASS1_BITS+1));
 624:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.790569415));          /* (c2+c4)/2 */
 625:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
 626:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.353553391));          /* (c2-c4)/2 */
 627:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS-PASS1_BITS-1);
 628:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS-1);
 629:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 630:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 631:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp0 + tmp1, FIX(0.831253876));    /* c3 */
 633:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 634:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 635:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 636:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-1);
 637:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
 638:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 639:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-1);
 640:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 641:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 1272              		.loc 1 641 0 discriminator 3
 1273 004a 4983C120 		addq	$32, %r9
 1274              	.LVL195:
 1275 004e 4883C608 		addq	$8, %rsi
 611:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
 1276              		.loc 1 611 0 discriminator 3
 1277 0052 440FB619 		movzbl	(%rcx), %r11d
 1278 0056 440FB669 		movzbl	4(%rcx), %r13d
 1278      04
 612:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
 1279              		.loc 1 612 0 discriminator 3
 1280 005b 0FB67901 		movzbl	1(%rcx), %edi
 1281 005f 440FB661 		movzbl	3(%rcx), %r12d
 1281      03
 613:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1282              		.loc 1 613 0 discriminator 3
 1283 0064 0FB65902 		movzbl	2(%rcx), %ebx
 611:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
 1284              		.loc 1 611 0 discriminator 3
 1285 0068 438D042B 		leal	(%r11,%r13), %eax
 618:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[3]);
 1286              		.loc 1 618 0 discriminator 3
 1287 006c 4529EB   		subl	%r13d, %r11d
 612:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
 1288              		.loc 1 612 0 discriminator 3
 1289 006f 428D2C27 		leal	(%rdi,%r12), %ebp
 619:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1290              		.loc 1 619 0 discriminator 3
 1291 0073 4429E7   		subl	%r12d, %edi
 618:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[3]);
 1292              		.loc 1 618 0 discriminator 3
 1293 0076 4D63DB   		movslq	%r11d, %r11
 611:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
 1294              		.loc 1 611 0 discriminator 3
 1295 0079 4898     		cltq
 1296              	.LVL196:
 619:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1297              		.loc 1 619 0 discriminator 3
 1298 007b 4863FF   		movslq	%edi, %rdi
 612:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
 1299              		.loc 1 612 0 discriminator 3
 1300 007e 4863ED   		movslq	%ebp, %rbp
 1301              	.LVL197:
 615:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
 1302              		.loc 1 615 0 discriminator 3
 1303 0081 488D0C28 		leaq	(%rax,%rbp), %rcx
 1304              	.LVL198:
 616:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1305              		.loc 1 616 0 discriminator 3
 1306 0085 4829E8   		subq	%rbp, %rax
 1307              	.LVL199:
 624:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
 1308              		.loc 1 624 0 discriminator 3
 1309 0088 4869C04C 		imulq	$6476, %rax, %rax
 1309      190000
 1310              	.LVL200:
 622:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << (PASS1_BITS+1));
 1311              		.loc 1 622 0 discriminator 3
 1312 008f 488DAC0B 		leaq	-640(%rbx,%rcx), %rbp
 1312      80FDFFFF 
 625:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.353553391));          /* (c2-c4)/2 */
 1313              		.loc 1 625 0 discriminator 3
 1314 0097 48C1E302 		salq	$2, %rbx
 1315              	.LVL201:
 1316 009b 4829D9   		subq	%rbx, %rcx
 1317              	.LVL202:
 622:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << (PASS1_BITS+1));
 1318              		.loc 1 622 0 discriminator 3
 1319 009e 48C1E503 		salq	$3, %rbp
 626:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS-PASS1_BITS-1);
 1320              		.loc 1 626 0 discriminator 3
 1321 00a2 4869C950 		imulq	$2896, %rcx, %rcx
 1321      0B0000
 1322              	.LVL203:
 622:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << (PASS1_BITS+1));
 1323              		.loc 1 622 0 discriminator 3
 1324 00a9 418969E0 		movl	%ebp, -32(%r9)
 1325              	.LVL204:
 627:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS-1);
 1326              		.loc 1 627 0 discriminator 3
 1327 00ad 488D9C08 		leaq	512(%rax,%rcx), %rbx
 1327      00020000 
 628:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1328              		.loc 1 628 0 discriminator 3
 1329 00b5 4829C8   		subq	%rcx, %rax
 1330              	.LVL205:
 1331 00b8 48050002 		addq	$512, %rax
 1331      0000
 1332 00be 48C1F80A 		sarq	$10, %rax
 627:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS-1);
 1333              		.loc 1 627 0 discriminator 3
 1334 00c2 48C1FB0A 		sarq	$10, %rbx
 628:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1335              		.loc 1 628 0 discriminator 3
 1336 00c6 418941F0 		movl	%eax, -16(%r9)
 632:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1337              		.loc 1 632 0 discriminator 3
 1338 00ca 498D043B 		leaq	(%r11,%rdi), %rax
 627:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS-1);
 1339              		.loc 1 627 0 discriminator 3
 1340 00ce 418959E8 		movl	%ebx, -24(%r9)
 634:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 1341              		.loc 1 634 0 discriminator 3
 1342 00d2 4D69DB71 		imulq	$4209, %r11, %r11
 1342      100000
 1343              	.LVL206:
 632:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1344              		.loc 1 632 0 discriminator 3
 1345 00d9 4869C09A 		imulq	$6810, %rax, %rax
 1345      1A0000
 1346              	.LVL207:
 637:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 1347              		.loc 1 637 0 discriminator 3
 1348 00e0 4869FF5C 		imulq	$-17828, %rdi, %rdi
 1348      BAFFFF
 1349              	.LVL208:
 634:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 1350              		.loc 1 634 0 discriminator 3
 1351 00e7 4A8D8C18 		leaq	512(%rax,%r11), %rcx
 1351      00020000 
 637:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 1352              		.loc 1 637 0 discriminator 3
 1353 00ef 488D8438 		leaq	512(%rax,%rdi), %rax
 1353      00020000 
 1354              	.LVL209:
 634:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 1355              		.loc 1 634 0 discriminator 3
 1356 00f7 48C1F90A 		sarq	$10, %rcx
 637:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 1357              		.loc 1 637 0 discriminator 3
 1358 00fb 48C1F80A 		sarq	$10, %rax
 634:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 1359              		.loc 1 634 0 discriminator 3
 1360 00ff 418949E4 		movl	%ecx, -28(%r9)
 637:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 1361              		.loc 1 637 0 discriminator 3
 1362 0103 418941EC 		movl	%eax, -20(%r9)
 1363              	.LVL210:
 606:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 1364              		.loc 1 606 0 discriminator 3
 1365 0107 4D39D1   		cmpq	%r10, %r9
 1366 010a 0F8534FF 		jne	.L21
 1366      FFFF
 1367 0110 498D7814 		leaq	20(%r8), %rdi
 1368              	.LVL211:
 1369              	.L22:
 642:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 643:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 644:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
 645:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
 646:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
 647:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/5)**2 = 64/25, which we partially
 648:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers (other part was done in pass 1):
 649:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/10) * 32/25.
 650:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 651:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 652:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 653:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 5; ctr++) {
 654:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 655:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 656:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*4];
 1370              		.loc 1 656 0 discriminator 3
 1371 0114 458B08   		movl	(%r8), %r9d
 1372 0117 418B9880 		movl	128(%r8), %ebx
 1372      000000
 657:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
 658:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2];
 659:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 660:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp1;
 661:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
 662:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 663:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*4];
 664:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*3];
 665:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 666:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 667:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
 668:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 669:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(1.011928851));          /* (c2+c4)/2 */
 670:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
 671:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.452548340));          /* (c2-c4)/2 */
 672:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS+PASS1_BITS);
 673:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
 674:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 675:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 676:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 677:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp0 + tmp1, FIX(1.064004961));    /* c3 */
 678:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 679:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 680:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 681:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 682:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
 683:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 684:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 685:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 686:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 1373              		.loc 1 686 0 discriminator 3
 1374 011e 4983C004 		addq	$4, %r8
 1375              	.LVL212:
 657:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
 1376              		.loc 1 657 0 discriminator 3
 1377 0122 418B501C 		movl	28(%r8), %edx
 1378 0126 458B585C 		movl	92(%r8), %r11d
 658:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1379              		.loc 1 658 0 discriminator 3
 1380 012a 4D63503C 		movslq	60(%r8), %r10
 656:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
 1381              		.loc 1 656 0 discriminator 3
 1382 012e 418D0419 		leal	(%r9,%rbx), %eax
 663:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*3];
 1383              		.loc 1 663 0 discriminator 3
 1384 0132 4129D9   		subl	%ebx, %r9d
 657:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2];
 1385              		.loc 1 657 0 discriminator 3
 1386 0135 428D341A 		leal	(%rdx,%r11), %esi
 664:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1387              		.loc 1 664 0 discriminator 3
 1388 0139 4429DA   		subl	%r11d, %edx
 663:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*3];
 1389              		.loc 1 663 0 discriminator 3
 1390 013c 4D63C9   		movslq	%r9d, %r9
 656:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
 1391              		.loc 1 656 0 discriminator 3
 1392 013f 4898     		cltq
 1393              	.LVL213:
 664:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1394              		.loc 1 664 0 discriminator 3
 1395 0141 4863D2   		movslq	%edx, %rdx
 657:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2];
 1396              		.loc 1 657 0 discriminator 3
 1397 0144 4863F6   		movslq	%esi, %rsi
 1398              	.LVL214:
 660:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
 1399              		.loc 1 660 0 discriminator 3
 1400 0147 488D0C30 		leaq	(%rax,%rsi), %rcx
 1401              	.LVL215:
 661:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1402              		.loc 1 661 0 discriminator 3
 1403 014b 4829F0   		subq	%rsi, %rax
 1404              	.LVL216:
 669:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
 1405              		.loc 1 669 0 discriminator 3
 1406 014e 4869C062 		imulq	$8290, %rax, %rax
 1406      200000
 1407              	.LVL217:
 666:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
 1408              		.loc 1 666 0 discriminator 3
 1409 0155 498D340A 		leaq	(%r10,%rcx), %rsi
 670:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.452548340));          /* (c2-c4)/2 */
 1410              		.loc 1 670 0 discriminator 3
 1411 0159 49C1E202 		salq	$2, %r10
 1412              	.LVL218:
 1413 015d 4C29D1   		subq	%r10, %rcx
 1414              	.LVL219:
 666:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
 1415              		.loc 1 666 0 discriminator 3
 1416 0160 4869F6F6 		imulq	$10486, %rsi, %rsi
 1416      280000
 671:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS+PASS1_BITS);
 1417              		.loc 1 671 0 discriminator 3
 1418 0167 4869C97B 		imulq	$3707, %rcx, %rcx
 1418      0E0000
 1419              	.LVL220:
 666:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
 1420              		.loc 1 666 0 discriminator 3
 1421 016e 4881C600 		addq	$16384, %rsi
 1421      400000
 1422 0175 48C1FE0F 		sarq	$15, %rsi
 1423 0179 418970FC 		movl	%esi, -4(%r8)
 672:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
 1424              		.loc 1 672 0 discriminator 3
 1425 017d 488DB408 		leaq	16384(%rax,%rcx), %rsi
 1425      00400000 
 673:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1426              		.loc 1 673 0 discriminator 3
 1427 0185 4829C8   		subq	%rcx, %rax
 1428              	.LVL221:
 1429 0188 48050040 		addq	$16384, %rax
 1429      0000
 1430 018e 48C1F80F 		sarq	$15, %rax
 672:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
 1431              		.loc 1 672 0 discriminator 3
 1432 0192 48C1FE0F 		sarq	$15, %rsi
 673:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1433              		.loc 1 673 0 discriminator 3
 1434 0196 4189407C 		movl	%eax, 124(%r8)
 677:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1435              		.loc 1 677 0 discriminator 3
 1436 019a 498D0411 		leaq	(%r9,%rdx), %rax
 672:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
 1437              		.loc 1 672 0 discriminator 3
 1438 019e 4189703C 		movl	%esi, 60(%r8)
 1439              	.LVL222:
 679:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 1440              		.loc 1 679 0 discriminator 3
 1441 01a2 4D69C90B 		imulq	$5387, %r9, %r9
 1441      150000
 1442              	.LVL223:
 677:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1443              		.loc 1 677 0 discriminator 3
 1444 01a9 4869C00C 		imulq	$8716, %rax, %rax
 1444      220000
 1445              	.LVL224:
 682:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 1446              		.loc 1 682 0 discriminator 3
 1447 01b0 4869D2DC 		imulq	$-22820, %rdx, %rdx
 1447      A6FFFF
 1448              	.LVL225:
 679:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 1449              		.loc 1 679 0 discriminator 3
 1450 01b7 4A8D8C08 		leaq	16384(%rax,%r9), %rcx
 1450      00400000 
 682:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 1451              		.loc 1 682 0 discriminator 3
 1452 01bf 488D8410 		leaq	16384(%rax,%rdx), %rax
 1452      00400000 
 1453              	.LVL226:
 679:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 1454              		.loc 1 679 0 discriminator 3
 1455 01c7 48C1F90F 		sarq	$15, %rcx
 682:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 1456              		.loc 1 682 0 discriminator 3
 1457 01cb 48C1F80F 		sarq	$15, %rax
 679:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 1458              		.loc 1 679 0 discriminator 3
 1459 01cf 4189481C 		movl	%ecx, 28(%r8)
 1460              	.LVL227:
 682:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 1461              		.loc 1 682 0 discriminator 3
 1462 01d3 4189405C 		movl	%eax, 92(%r8)
 1463              	.LVL228:
 653:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 1464              		.loc 1 653 0 discriminator 3
 1465 01d7 4939F8   		cmpq	%rdi, %r8
 1466 01da 0F8534FF 		jne	.L22
 1466      FFFF
 687:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 688:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 1467              		.loc 1 688 0
 1468 01e0 5B       		popq	%rbx
 1469              		.cfi_def_cfa_offset 32
 1470 01e1 5D       		popq	%rbp
 1471              		.cfi_def_cfa_offset 24
 1472 01e2 415C     		popq	%r12
 1473              		.cfi_def_cfa_offset 16
 1474 01e4 415D     		popq	%r13
 1475              		.cfi_def_cfa_offset 8
 1476 01e6 C3       		ret
 1477              		.cfi_endproc
 1478              	.LFE64:
 1480              		.section	.text.unlikely.jpeg_fdct_5x5
 1481              	.LCOLDE3:
 1482              		.section	.text.jpeg_fdct_5x5
 1483              	.LHOTE3:
 1484              		.section	.text.unlikely.jpeg_fdct_4x4,"ax",@progbits
 1485              	.LCOLDB4:
 1486              		.section	.text.jpeg_fdct_4x4,"ax",@progbits
 1487              	.LHOTB4:
 1488              		.p2align 4,,15
 1489              		.globl	jpeg_fdct_4x4
 1491              	jpeg_fdct_4x4:
 1492              	.LFB65:
 689:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 690:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 691:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 692:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 4x4 sample block.
 693:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 694:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 695:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 696:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_4x4 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 697:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 1493              		.loc 1 697 0
 1494              		.cfi_startproc
 1495              	.LVL229:
 1496 0000 53       		pushq	%rbx
 1497              		.cfi_def_cfa_offset 16
 1498              		.cfi_offset 3, -16
 1499              		.loc 1 697 0
 1500 0001 4989F8   		movq	%rdi, %r8
 1501              	.LBB56:
 1502              	.LBB57:
 1503              		.loc 2 90 0
 1504 0004 48C70700 		movq	$0, (%rdi)
 1504      000000
 1505 000b 48C787F8 		movq	$0, 248(%rdi)
 1505      00000000 
 1505      000000
 1506 0016 488D7F08 		leaq	8(%rdi), %rdi
 1507              	.LVL230:
 1508 001a 4C89C1   		movq	%r8, %rcx
 1509 001d 31C0     		xorl	%eax, %eax
 1510 001f 89D2     		movl	%edx, %edx
 1511 0021 4531C9   		xorl	%r9d, %r9d
 1512 0024 4883E7F8 		andq	$-8, %rdi
 1513 0028 4829F9   		subq	%rdi, %rcx
 1514 002b 81C10001 		addl	$256, %ecx
 1514      0000
 1515 0031 C1E903   		shrl	$3, %ecx
 1516 0034 F348AB   		rep stosq
 1517              	.LVL231:
 1518              	.L27:
 1519              	.LBE57:
 1520              	.LBE56:
 698:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1;
 699:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11;
 700:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
 701:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 702:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
 703:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
 704:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 705:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
 706:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
 707:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 708:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 709:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
 710:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
 711:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/4)**2 = 2**2, which we add here.
 712:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point FDCT].
 713:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 714:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 715:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 716:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
 717:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 1521              		.loc 1 717 0 discriminator 3
 1522 0037 4889D0   		movq	%rdx, %rax
 1523 003a 4A03040E 		addq	(%rsi,%r9), %rax
 1524              	.LVL232:
 718:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 719:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 720:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 721:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[3]);
 1525              		.loc 1 721 0 discriminator 3
 1526 003e 0FB608   		movzbl	(%rax), %ecx
 1527 0041 0FB65803 		movzbl	3(%rax), %ebx
 722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 1528              		.loc 1 722 0 discriminator 3
 1529 0045 440FB650 		movzbl	1(%rax), %r10d
 1529      01
 1530 004a 0FB64002 		movzbl	2(%rax), %eax
 1531              	.LVL233:
 721:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 1532              		.loc 1 721 0 discriminator 3
 1533 004e 8D3C19   		leal	(%rcx,%rbx), %edi
 723:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 724:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[3]);
 1534              		.loc 1 724 0 discriminator 3
 1535 0051 29D9     		subl	%ebx, %ecx
 722:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1536              		.loc 1 722 0 discriminator 3
 1537 0053 458D1C02 		leal	(%r10,%rax), %r11d
 725:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[2]);
 1538              		.loc 1 725 0 discriminator 3
 1539 0057 4129C2   		subl	%eax, %r10d
 724:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[2]);
 1540              		.loc 1 724 0 discriminator 3
 1541 005a 4863C9   		movslq	%ecx, %rcx
 721:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 1542              		.loc 1 721 0 discriminator 3
 1543 005d 4863FF   		movslq	%edi, %rdi
 1544              	.LVL234:
 1545              		.loc 1 725 0 discriminator 3
 1546 0060 4D63D2   		movslq	%r10d, %r10
 722:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1547              		.loc 1 722 0 discriminator 3
 1548 0063 4D63DB   		movslq	%r11d, %r11
 1549              	.LVL235:
 726:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 727:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 728:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 1550              		.loc 1 728 0 discriminator 3
 1551 0066 4A8D841F 		leaq	-512(%rdi,%r11), %rax
 1551      00FEFFFF 
 729:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+2));
 730:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) ((tmp0 - tmp1) << (PASS1_BITS+2));
 1552              		.loc 1 730 0 discriminator 3
 1553 006e 4C29DF   		subq	%r11, %rdi
 1554              	.LVL236:
 1555 0071 48C1E704 		salq	$4, %rdi
 728:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+2));
 1556              		.loc 1 728 0 discriminator 3
 1557 0075 48C1E004 		salq	$4, %rax
 1558              		.loc 1 730 0 discriminator 3
 1559 0079 43897C88 		movl	%edi, 8(%r8,%r9,4)
 1559      08
 1560              	.LVL237:
 728:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+2));
 1561              		.loc 1 728 0 discriminator 3
 1562 007e 43890488 		movl	%eax, (%r8,%r9,4)
 731:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 732:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 733:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 734:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp11, FIX_0_541196100);       /* c6 */
 1563              		.loc 1 734 0 discriminator 3
 1564 0082 4A8D0411 		leaq	(%rcx,%r10), %rax
 735:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 736:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-3);
 737:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 738:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 1565              		.loc 1 738 0 discriminator 3
 1566 0086 4869C97E 		imulq	$6270, %rcx, %rcx
 1566      180000
 1567              	.LVL238:
 734:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 1568              		.loc 1 734 0 discriminator 3
 1569 008d 4869C051 		imulq	$4433, %rax, %rax
 1569      110000
 1570              	.LVL239:
 739:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 740:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-2);
 741:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
 1571              		.loc 1 741 0 discriminator 3
 1572 0094 4D69D2DF 		imulq	$-15137, %r10, %r10
 1572      C4FFFF
 1573              	.LVL240:
 736:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1574              		.loc 1 736 0 discriminator 3
 1575 009b 48050001 		addq	$256, %rax
 1575      0000
 1576              	.LVL241:
 738:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 1577              		.loc 1 738 0 discriminator 3
 1578 00a1 4801C1   		addq	%rax, %rcx
 1579              		.loc 1 741 0 discriminator 3
 1580 00a4 4C01D0   		addq	%r10, %rax
 1581              	.LVL242:
 738:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 1582              		.loc 1 738 0 discriminator 3
 1583 00a7 48C1F909 		sarq	$9, %rcx
 1584              		.loc 1 741 0 discriminator 3
 1585 00ab 48C1F809 		sarq	$9, %rax
 738:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 1586              		.loc 1 738 0 discriminator 3
 1587 00af 43894C88 		movl	%ecx, 4(%r8,%r9,4)
 1587      04
 1588              		.loc 1 741 0 discriminator 3
 1589 00b4 43894488 		movl	%eax, 12(%r8,%r9,4)
 1589      0C
 1590              	.LVL243:
 1591 00b9 4983C108 		addq	$8, %r9
 1592              	.LVL244:
 716:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 1593              		.loc 1 716 0 discriminator 3
 1594 00bd 4983F920 		cmpq	$32, %r9
 1595 00c1 0F8570FF 		jne	.L27
 1595      FFFF
 1596 00c7 498D7010 		leaq	16(%r8), %rsi
 1597              	.LVL245:
 1598              	.L28:
 742:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 743:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-2);
 744:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 745:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 746:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 747:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 748:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
 749:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
 750:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
 751:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point FDCT].
 752:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 753:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 754:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 755:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
 756:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 757:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 758:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 759:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*3] + (ONE << (PASS1_BITS-1));
 1599              		.loc 1 759 0 discriminator 3
 1600 00cb 418B00   		movl	(%r8), %eax
 1601 00ce 458B5060 		movl	96(%r8), %r10d
 760:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 761:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 762:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*3];
 763:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
 764:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 765:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM) RIGHT_SHIFT(tmp0 + tmp1, PASS1_BITS);
 766:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
 767:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 768:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 769:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 770:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp11, FIX_0_541196100);       /* c6 */
 771:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 772:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += ONE << (CONST_BITS+PASS1_BITS-1);
 773:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 774:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 775:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 776:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
 777:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
 778:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 779:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
 780:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 781:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 1602              		.loc 1 781 0 discriminator 3
 1603 00d2 4983C004 		addq	$4, %r8
 1604              	.LVL246:
 760:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 1605              		.loc 1 760 0 discriminator 3
 1606 00d6 458B483C 		movl	60(%r8), %r9d
 1607 00da 418B501C 		movl	28(%r8), %edx
 759:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 1608              		.loc 1 759 0 discriminator 3
 1609 00de 428D0C10 		leal	(%rax,%r10), %ecx
 762:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
 1610              		.loc 1 762 0 discriminator 3
 1611 00e2 4429D0   		subl	%r10d, %eax
 760:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 1612              		.loc 1 760 0 discriminator 3
 1613 00e5 428D3C0A 		leal	(%rdx,%r9), %edi
 763:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1614              		.loc 1 763 0 discriminator 3
 1615 00e9 4429CA   		subl	%r9d, %edx
 762:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
 1616              		.loc 1 762 0 discriminator 3
 1617 00ec 4898     		cltq
 759:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 1618              		.loc 1 759 0 discriminator 3
 1619 00ee 4863C9   		movslq	%ecx, %rcx
 763:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1620              		.loc 1 763 0 discriminator 3
 1621 00f1 4C63CA   		movslq	%edx, %r9
 759:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 1622              		.loc 1 759 0 discriminator 3
 1623 00f4 4883C102 		addq	$2, %rcx
 1624              	.LVL247:
 760:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1625              		.loc 1 760 0 discriminator 3
 1626 00f8 4863FF   		movslq	%edi, %rdi
 1627              	.LVL248:
 765:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
 1628              		.loc 1 765 0 discriminator 3
 1629 00fb 488D1439 		leaq	(%rcx,%rdi), %rdx
 766:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1630              		.loc 1 766 0 discriminator 3
 1631 00ff 4829F9   		subq	%rdi, %rcx
 1632              	.LVL249:
 1633 0102 48C1F902 		sarq	$2, %rcx
 765:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
 1634              		.loc 1 765 0 discriminator 3
 1635 0106 48C1FA02 		sarq	$2, %rdx
 766:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1636              		.loc 1 766 0 discriminator 3
 1637 010a 4189483C 		movl	%ecx, 60(%r8)
 765:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
 1638              		.loc 1 765 0 discriminator 3
 1639 010e 418950FC 		movl	%edx, -4(%r8)
 1640              	.LVL250:
 770:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 1641              		.loc 1 770 0 discriminator 3
 1642 0112 4A8D1408 		leaq	(%rax,%r9), %rdx
 774:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 1643              		.loc 1 774 0 discriminator 3
 1644 0116 4869C07E 		imulq	$6270, %rax, %rax
 1644      180000
 1645              	.LVL251:
 770:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 1646              		.loc 1 770 0 discriminator 3
 1647 011d 4869D251 		imulq	$4433, %rdx, %rdx
 1647      110000
 1648              	.LVL252:
 772:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1649              		.loc 1 772 0 discriminator 3
 1650 0124 4881C200 		addq	$16384, %rdx
 1650      400000
 1651              	.LVL253:
 774:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 1652              		.loc 1 774 0 discriminator 3
 1653 012b 4801D0   		addq	%rdx, %rax
 1654 012e 48C1F80F 		sarq	$15, %rax
 1655 0132 4189401C 		movl	%eax, 28(%r8)
 777:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 1656              		.loc 1 777 0 discriminator 3
 1657 0136 4969C1DF 		imulq	$-15137, %r9, %rax
 1657      C4FFFF
 1658 013d 4801C2   		addq	%rax, %rdx
 1659              	.LVL254:
 1660 0140 48C1FA0F 		sarq	$15, %rdx
 1661 0144 4189505C 		movl	%edx, 92(%r8)
 1662              	.LVL255:
 755:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 1663              		.loc 1 755 0 discriminator 3
 1664 0148 4939F0   		cmpq	%rsi, %r8
 1665 014b 0F857AFF 		jne	.L28
 1665      FFFF
 782:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 783:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 1666              		.loc 1 783 0
 1667 0151 5B       		popq	%rbx
 1668              		.cfi_def_cfa_offset 8
 1669 0152 C3       		ret
 1670              		.cfi_endproc
 1671              	.LFE65:
 1673              		.section	.text.unlikely.jpeg_fdct_4x4
 1674              	.LCOLDE4:
 1675              		.section	.text.jpeg_fdct_4x4
 1676              	.LHOTE4:
 1677              		.section	.text.unlikely.jpeg_fdct_3x3,"ax",@progbits
 1678              	.LCOLDB5:
 1679              		.section	.text.jpeg_fdct_3x3,"ax",@progbits
 1680              	.LHOTB5:
 1681              		.p2align 4,,15
 1682              		.globl	jpeg_fdct_3x3
 1684              	jpeg_fdct_3x3:
 1685              	.LFB66:
 784:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 785:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 786:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 787:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 3x3 sample block.
 788:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 789:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 790:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 791:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_3x3 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 792:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 1686              		.loc 1 792 0
 1687              		.cfi_startproc
 1688              	.LVL256:
 1689              	.LBB58:
 1690              	.LBB59:
 1691              		.loc 2 90 0
 1692 0000 48C70700 		movq	$0, (%rdi)
 1692      000000
 1693 0007 48C787F8 		movq	$0, 248(%rdi)
 1693      00000000 
 1693      000000
 1694              	.LBE59:
 1695              	.LBE58:
 1696              		.loc 1 792 0
 1697 0012 4989F8   		movq	%rdi, %r8
 1698              	.LBB61:
 1699              	.LBB60:
 1700              		.loc 2 90 0
 1701 0015 488D7F08 		leaq	8(%rdi), %rdi
 1702              	.LVL257:
 1703 0019 4C89C1   		movq	%r8, %rcx
 1704 001c 31C0     		xorl	%eax, %eax
 1705 001e 89D2     		movl	%edx, %edx
 1706 0020 4883E7F8 		andq	$-8, %rdi
 1707 0024 4829F9   		subq	%rdi, %rcx
 1708 0027 81C10001 		addl	$256, %ecx
 1708      0000
 1709 002d C1E903   		shrl	$3, %ecx
 1710 0030 F348AB   		rep stosq
 1711              	.LVL258:
 1712 0033 31FF     		xorl	%edi, %edi
 1713              	.LVL259:
 1714              	.L33:
 1715              	.LBE60:
 1716              	.LBE61:
 793:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2;
 794:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
 795:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 796:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
 797:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
 798:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 799:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
 800:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
 801:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 802:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 803:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
 804:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
 805:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We scale the results further by 2**2 as part of output adaption
 806:fltk-1.3.4-1/jpeg/jfdctint.c ****    * scaling for different DCT size.
 807:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/6).
 808:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 809:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 810:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 811:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 3; ctr++) {
 812:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 1717              		.loc 1 812 0 discriminator 3
 1718 0035 4989D1   		movq	%rdx, %r9
 1719 0038 4C030C3E 		addq	(%rsi,%rdi), %r9
 1720              	.LVL260:
 813:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 814:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 815:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 816:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[2]);
 1721              		.loc 1 816 0 discriminator 3
 1722 003c 410FB609 		movzbl	(%r9), %ecx
 1723 0040 450FB659 		movzbl	2(%r9), %r11d
 1723      02
 817:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
 1724              		.loc 1 817 0 discriminator 3
 1725 0045 450FB649 		movzbl	1(%r9), %r9d
 1725      01
 1726              	.LVL261:
 816:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
 1727              		.loc 1 816 0 discriminator 3
 1728 004a 428D0419 		leal	(%rcx,%r11), %eax
 818:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 819:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[2]);
 820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 821:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 822:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 823:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+2));
 824:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 825:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 826:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-2);
 827:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 828:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 829:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 830:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 1729              		.loc 1 830 0 discriminator 3
 1730 004e 4429D9   		subl	%r11d, %ecx
 1731 0051 4863C9   		movslq	%ecx, %rcx
 816:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
 1732              		.loc 1 816 0 discriminator 3
 1733 0054 4898     		cltq
 1734              	.LVL262:
 822:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+2));
 1735              		.loc 1 822 0 discriminator 3
 1736 0056 4E8D9408 		leaq	-384(%rax,%r9), %r10
 1736      80FEFFFF 
 824:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 1737              		.loc 1 824 0 discriminator 3
 1738 005e 4C29C8   		subq	%r9, %rax
 1739              	.LVL263:
 1740 0061 4C29C8   		subq	%r9, %rax
 1741 0064 4869C0A1 		imulq	$5793, %rax, %rax
 1741      160000
 822:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+2));
 1742              		.loc 1 822 0 discriminator 3
 1743 006b 49C1E204 		salq	$4, %r10
 1744              		.loc 1 830 0 discriminator 3
 1745 006f 4869C931 		imulq	$10033, %rcx, %rcx
 1745      270000
 822:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+2));
 1746              		.loc 1 822 0 discriminator 3
 1747 0076 458914B8 		movl	%r10d, (%r8,%rdi,4)
 1748              	.LVL264:
 824:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 1749              		.loc 1 824 0 discriminator 3
 1750 007a 48050001 		addq	$256, %rax
 1750      0000
 1751              		.loc 1 830 0 discriminator 3
 1752 0080 4881C100 		addq	$256, %rcx
 1752      010000
 824:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 1753              		.loc 1 824 0 discriminator 3
 1754 0087 48C1F809 		sarq	$9, %rax
 1755              		.loc 1 830 0 discriminator 3
 1756 008b 48C1F909 		sarq	$9, %rcx
 824:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 1757              		.loc 1 824 0 discriminator 3
 1758 008f 418944B8 		movl	%eax, 8(%r8,%rdi,4)
 1758      08
 1759              		.loc 1 830 0 discriminator 3
 1760 0094 41894CB8 		movl	%ecx, 4(%r8,%rdi,4)
 1760      04
 1761              	.LVL265:
 1762 0099 4883C708 		addq	$8, %rdi
 1763              	.LVL266:
 811:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 1764              		.loc 1 811 0 discriminator 3
 1765 009d 4883FF18 		cmpq	$24, %rdi
 1766 00a1 7592     		jne	.L33
 1767 00a3 498D480C 		leaq	12(%r8), %rcx
 1768              	.LVL267:
 1769              	.L34:
 831:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(1.224744871)),               /* c1 */
 832:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-2);
 833:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 834:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 835:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 836:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 837:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
 838:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
 839:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
 840:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/3)**2 = 64/9, which we partially
 841:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers (other part was done in pass 1):
 842:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/6) * 16/9.
 843:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 844:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 845:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 846:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 3; ctr++) {
 847:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 848:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 849:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*2];
 1770              		.loc 1 849 0 discriminator 3
 1771 00a7 418B10   		movl	(%r8), %edx
 1772 00aa 418B7840 		movl	64(%r8), %edi
 850:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 851:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 852:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*2];
 853:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 854:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 856:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 857:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 858:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 859:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 860:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 861:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 862:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 863:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 864:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 865:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
 866:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 867:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 1773              		.loc 1 867 0 discriminator 3
 1774 00ae 4983C004 		addq	$4, %r8
 1775              	.LVL268:
 850:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 1776              		.loc 1 850 0 discriminator 3
 1777 00b2 4D63481C 		movslq	28(%r8), %r9
 1778              	.LVL269:
 849:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 1779              		.loc 1 849 0 discriminator 3
 1780 00b6 8D043A   		leal	(%rdx,%rdi), %eax
 863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 1781              		.loc 1 863 0 discriminator 3
 1782 00b9 29FA     		subl	%edi, %edx
 1783 00bb 4863D2   		movslq	%edx, %rdx
 849:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 1784              		.loc 1 849 0 discriminator 3
 1785 00be 4898     		cltq
 1786              	.LVL270:
 854:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 1787              		.loc 1 854 0 discriminator 3
 1788 00c0 4A8D3408 		leaq	(%rax,%r9), %rsi
 857:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 1789              		.loc 1 857 0 discriminator 3
 1790 00c4 4C29C8   		subq	%r9, %rax
 1791              	.LVL271:
 1792 00c7 4C29C8   		subq	%r9, %rax
 854:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 1793              		.loc 1 854 0 discriminator 3
 1794 00ca 4869F6E4 		imulq	$14564, %rsi, %rsi
 1794      380000
 857:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 1795              		.loc 1 857 0 discriminator 3
 1796 00d1 4869C03A 		imulq	$10298, %rax, %rax
 1796      280000
 863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 1797              		.loc 1 863 0 discriminator 3
 1798 00d8 4869D2AD 		imulq	$17837, %rdx, %rdx
 1798      450000
 854:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 1799              		.loc 1 854 0 discriminator 3
 1800 00df 4881C600 		addq	$16384, %rsi
 1800      400000
 857:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 1801              		.loc 1 857 0 discriminator 3
 1802 00e6 48050040 		addq	$16384, %rax
 1802      0000
 854:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 1803              		.loc 1 854 0 discriminator 3
 1804 00ec 48C1FE0F 		sarq	$15, %rsi
 863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 1805              		.loc 1 863 0 discriminator 3
 1806 00f0 4881C200 		addq	$16384, %rdx
 1806      400000
 857:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 1807              		.loc 1 857 0 discriminator 3
 1808 00f7 48C1F80F 		sarq	$15, %rax
 854:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 1809              		.loc 1 854 0 discriminator 3
 1810 00fb 418970FC 		movl	%esi, -4(%r8)
 1811              	.LVL272:
 863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 1812              		.loc 1 863 0 discriminator 3
 1813 00ff 48C1FA0F 		sarq	$15, %rdx
 857:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 1814              		.loc 1 857 0 discriminator 3
 1815 0103 4189403C 		movl	%eax, 60(%r8)
 863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 1816              		.loc 1 863 0 discriminator 3
 1817 0107 4189501C 		movl	%edx, 28(%r8)
 1818              	.LVL273:
 846:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 1819              		.loc 1 846 0 discriminator 3
 1820 010b 4939C8   		cmpq	%rcx, %r8
 1821 010e 7597     		jne	.L34
 868:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 869:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 1822              		.loc 1 869 0
 1823 0110 F3C3     		rep ret
 1824              		.cfi_endproc
 1825              	.LFE66:
 1827              		.section	.text.unlikely.jpeg_fdct_3x3
 1828              	.LCOLDE5:
 1829              		.section	.text.jpeg_fdct_3x3
 1830              	.LHOTE5:
 1831              		.section	.text.unlikely.jpeg_fdct_2x2,"ax",@progbits
 1832              	.LCOLDB6:
 1833              		.section	.text.jpeg_fdct_2x2,"ax",@progbits
 1834              	.LHOTB6:
 1835              		.p2align 4,,15
 1836              		.globl	jpeg_fdct_2x2
 1838              	jpeg_fdct_2x2:
 1839              	.LFB67:
 870:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 871:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 872:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 873:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 2x2 sample block.
 874:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 875:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 876:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 877:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_2x2 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 878:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 1840              		.loc 1 878 0
 1841              		.cfi_startproc
 1842              	.LVL274:
 1843              	.LBB62:
 1844              	.LBB63:
 1845              		.loc 2 90 0
 1846 0000 48C70700 		movq	$0, (%rdi)
 1846      000000
 1847 0007 48C787F8 		movq	$0, 248(%rdi)
 1847      00000000 
 1847      000000
 1848              	.LBE63:
 1849              	.LBE62:
 1850              		.loc 1 878 0
 1851 0012 4989F8   		movq	%rdi, %r8
 1852              	.LBB66:
 1853              	.LBB64:
 1854              		.loc 2 90 0
 1855 0015 488D7F08 		leaq	8(%rdi), %rdi
 1856              	.LVL275:
 1857 0019 4C89C1   		movq	%r8, %rcx
 1858 001c 31C0     		xorl	%eax, %eax
 1859              	.LBE64:
 1860              	.LBE66:
 879:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
 880:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 881:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 882:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
 883:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
 884:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 885:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 886:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT.
 887:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 888:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 889:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Row 0 */
 890:fltk-1.3.4-1/jpeg/jfdctint.c ****   elemptr = sample_data[0] + start_col;
 1861              		.loc 1 890 0
 1862 001e 89D2     		movl	%edx, %edx
 1863              	.LBB67:
 1864              	.LBB65:
 1865              		.loc 2 90 0
 1866 0020 4883E7F8 		andq	$-8, %rdi
 1867 0024 4829F9   		subq	%rdi, %rcx
 1868 0027 81C10001 		addl	$256, %ecx
 1868      0000
 1869 002d C1E903   		shrl	$3, %ecx
 1870 0030 F348AB   		rep stosq
 1871              	.LVL276:
 1872              	.LBE65:
 1873              	.LBE67:
 1874              		.loc 1 890 0
 1875 0033 4889D1   		movq	%rdx, %rcx
 1876 0036 48030E   		addq	(%rsi), %rcx
 1877              	.LVL277:
 891:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 892:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[1]);
 893:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp1 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[1]);
 894:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 895:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Row 1 */
 896:fltk-1.3.4-1/jpeg/jfdctint.c ****   elemptr = sample_data[1] + start_col;
 1878              		.loc 1 896 0
 1879 0039 48035608 		addq	8(%rsi), %rdx
 1880              	.LVL278:
 892:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp1 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[1]);
 1881              		.loc 1 892 0
 1882 003d 0FB67901 		movzbl	1(%rcx), %edi
 1883 0041 0FB601   		movzbl	(%rcx), %eax
 1884              		.loc 1 896 0
 1885 0044 4889D6   		movq	%rdx, %rsi
 1886              	.LVL279:
 897:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 898:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp2 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[1]);
 1887              		.loc 1 898 0
 1888 0047 0FB612   		movzbl	(%rdx), %edx
 892:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp1 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[1]);
 1889              		.loc 1 892 0
 1890 004a 8D0C38   		leal	(%rax,%rdi), %ecx
 1891              	.LVL280:
 893:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1892              		.loc 1 893 0
 1893 004d 29F8     		subl	%edi, %eax
 1894              		.loc 1 898 0
 1895 004f 0FB67E01 		movzbl	1(%rsi), %edi
 893:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 1896              		.loc 1 893 0
 1897 0053 4898     		cltq
 892:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp1 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[1]);
 1898              		.loc 1 892 0
 1899 0055 4863C9   		movslq	%ecx, %rcx
 1900              	.LVL281:
 1901              		.loc 1 898 0
 1902 0058 8D343A   		leal	(%rdx,%rdi), %esi
 899:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp3 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[1]);
 1903              		.loc 1 899 0
 1904 005b 29FA     		subl	%edi, %edx
 1905 005d 4863D2   		movslq	%edx, %rdx
 898:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp3 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[1]);
 1906              		.loc 1 898 0
 1907 0060 4863F6   		movslq	%esi, %rsi
 1908              	.LVL282:
 900:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 901:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
 902:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
 903:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/2)**2 = 2**4.
 904:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 905:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 906:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Column 0 */
 907:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Apply unsigned->signed conversion */
 908:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*0] = (DCTELEM) ((tmp0 + tmp2 - 4 * CENTERJSAMPLE) << 4);
 1909              		.loc 1 908 0
 1910 0063 488DBC31 		leaq	-512(%rcx,%rsi), %rdi
 1910      00FEFFFF 
 909:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*1] = (DCTELEM) ((tmp0 - tmp2) << 4);
 1911              		.loc 1 909 0
 1912 006b 4829F1   		subq	%rsi, %rcx
 1913              	.LVL283:
 1914 006e 48C1E104 		salq	$4, %rcx
 1915 0072 41894820 		movl	%ecx, 32(%r8)
 1916              	.LVL284:
 910:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 911:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Column 1 */
 912:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*0+1] = (DCTELEM) ((tmp1 + tmp3) << 4);
 1917              		.loc 1 912 0
 1918 0076 488D0C10 		leaq	(%rax,%rdx), %rcx
 913:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*1+1] = (DCTELEM) ((tmp1 - tmp3) << 4);
 1919              		.loc 1 913 0
 1920 007a 4829D0   		subq	%rdx, %rax
 1921              	.LVL285:
 908:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*1] = (DCTELEM) ((tmp0 - tmp2) << 4);
 1922              		.loc 1 908 0
 1923 007d 48C1E704 		salq	$4, %rdi
 1924              		.loc 1 913 0
 1925 0081 48C1E004 		salq	$4, %rax
 912:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*1+1] = (DCTELEM) ((tmp1 - tmp3) << 4);
 1926              		.loc 1 912 0
 1927 0085 48C1E104 		salq	$4, %rcx
 908:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*1] = (DCTELEM) ((tmp0 - tmp2) << 4);
 1928              		.loc 1 908 0
 1929 0089 418938   		movl	%edi, (%r8)
 1930              		.loc 1 913 0
 1931 008c 41894024 		movl	%eax, 36(%r8)
 912:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*1+1] = (DCTELEM) ((tmp1 - tmp3) << 4);
 1932              		.loc 1 912 0
 1933 0090 41894804 		movl	%ecx, 4(%r8)
 1934              		.loc 1 913 0
 1935 0094 C3       		ret
 1936              		.cfi_endproc
 1937              	.LFE67:
 1939              		.section	.text.unlikely.jpeg_fdct_2x2
 1940              	.LCOLDE6:
 1941              		.section	.text.jpeg_fdct_2x2
 1942              	.LHOTE6:
 1943              		.section	.text.unlikely.jpeg_fdct_1x1,"ax",@progbits
 1944              	.LCOLDB7:
 1945              		.section	.text.jpeg_fdct_1x1,"ax",@progbits
 1946              	.LHOTB7:
 1947              		.p2align 4,,15
 1948              		.globl	jpeg_fdct_1x1
 1950              	jpeg_fdct_1x1:
 1951              	.LFB68:
 914:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 915:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 916:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 917:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 918:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 1x1 sample block.
 919:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 920:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 921:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 922:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_1x1 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 923:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 1952              		.loc 1 923 0
 1953              		.cfi_startproc
 1954              	.LVL286:
 1955              	.LBB68:
 1956              	.LBB69:
 1957              		.loc 2 90 0
 1958 0000 48C70700 		movq	$0, (%rdi)
 1958      000000
 1959 0007 48C787F8 		movq	$0, 248(%rdi)
 1959      00000000 
 1959      000000
 1960              	.LBE69:
 1961              	.LBE68:
 1962              		.loc 1 923 0
 1963 0012 4989F8   		movq	%rdi, %r8
 1964              	.LBB72:
 1965              	.LBB70:
 1966              		.loc 2 90 0
 1967 0015 488D7F08 		leaq	8(%rdi), %rdi
 1968              	.LVL287:
 1969 0019 4C89C1   		movq	%r8, %rcx
 1970 001c 31C0     		xorl	%eax, %eax
 1971              	.LBE70:
 1972              	.LBE72:
 924:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
 925:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
 926:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 927:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* We leave the result scaled up by an overall factor of 8. */
 928:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* We must also scale the output by (8/1)**2 = 2**6. */
 929:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Apply unsigned->signed conversion */
 930:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[0] = (DCTELEM)
 931:fltk-1.3.4-1/jpeg/jfdctint.c ****     ((GETJSAMPLE(sample_data[0][start_col]) - CENTERJSAMPLE) << 6);
 1973              		.loc 1 931 0
 1974 001e 89D2     		movl	%edx, %edx
 1975              	.LBB73:
 1976              	.LBB71:
 1977              		.loc 2 90 0
 1978 0020 4883E7F8 		andq	$-8, %rdi
 1979 0024 4829F9   		subq	%rdi, %rcx
 1980 0027 81C10001 		addl	$256, %ecx
 1980      0000
 1981 002d C1E903   		shrl	$3, %ecx
 1982 0030 F348AB   		rep stosq
 1983              	.LVL288:
 1984              	.LBE71:
 1985              	.LBE73:
 1986              		.loc 1 931 0
 1987 0033 488B06   		movq	(%rsi), %rax
 930:fltk-1.3.4-1/jpeg/jfdctint.c ****     ((GETJSAMPLE(sample_data[0][start_col]) - CENTERJSAMPLE) << 6);
 1988              		.loc 1 930 0
 1989 0036 0FB60410 		movzbl	(%rax,%rdx), %eax
 1990 003a 83C080   		addl	$-128, %eax
 1991 003d C1E006   		sall	$6, %eax
 1992 0040 418900   		movl	%eax, (%r8)
 1993 0043 C3       		ret
 1994              		.cfi_endproc
 1995              	.LFE68:
 1997              		.section	.text.unlikely.jpeg_fdct_1x1
 1998              	.LCOLDE7:
 1999              		.section	.text.jpeg_fdct_1x1
 2000              	.LHOTE7:
 2001              		.section	.text.unlikely.jpeg_fdct_9x9,"ax",@progbits
 2002              	.LCOLDB8:
 2003              		.section	.text.jpeg_fdct_9x9,"ax",@progbits
 2004              	.LHOTB8:
 2005              		.p2align 4,,15
 2006              		.globl	jpeg_fdct_9x9
 2008              	jpeg_fdct_9x9:
 2009              	.LFB69:
 932:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 933:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 934:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 935:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
 936:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 9x9 sample block.
 937:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
 938:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 939:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
 940:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_9x9 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
 941:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 2010              		.loc 1 941 0
 2011              		.cfi_startproc
 2012              	.LVL289:
 2013 0000 4157     		pushq	%r15
 2014              		.cfi_def_cfa_offset 16
 2015              		.cfi_offset 15, -16
 2016 0002 4156     		pushq	%r14
 2017              		.cfi_def_cfa_offset 24
 2018              		.cfi_offset 14, -24
 942:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 943:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13;
 944:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1, z2;
 945:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8];
 946:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
 947:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
 948:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
 949:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
 950:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
 951:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 952:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
 953:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
 954:fltk-1.3.4-1/jpeg/jfdctint.c ****    * we scale the results further by 2 as part of output adaption
 955:fltk-1.3.4-1/jpeg/jfdctint.c ****    * scaling for different DCT size.
 956:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/18).
 957:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
 958:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 959:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 2019              		.loc 1 959 0
 2020 0004 4989FB   		movq	%rdi, %r11
 941:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 2021              		.loc 1 941 0
 2022 0007 4155     		pushq	%r13
 2023              		.cfi_def_cfa_offset 32
 2024              		.cfi_offset 13, -32
 2025 0009 4154     		pushq	%r12
 2026              		.cfi_def_cfa_offset 40
 2027              		.cfi_offset 12, -40
 960:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 2028              		.loc 1 960 0
 2029 000b 4531FF   		xorl	%r15d, %r15d
 941:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 2030              		.loc 1 941 0
 2031 000e 55       		pushq	%rbp
 2032              		.cfi_def_cfa_offset 48
 2033              		.cfi_offset 6, -48
 2034 000f 53       		pushq	%rbx
 2035              		.cfi_def_cfa_offset 56
 2036              		.cfi_offset 3, -56
 2037 0010 4883EC58 		subq	$88, %rsp
 2038              		.cfi_def_cfa_offset 144
 941:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 2039              		.loc 1 941 0
 2040 0014 64488B04 		movq	%fs:40, %rax
 2040      25280000 
 2040      00
 2041 001d 48894424 		movq	%rax, 72(%rsp)
 2041      48
 2042 0022 31C0     		xorl	%eax, %eax
 2043              	.LVL290:
 2044 0024 89D0     		movl	%edx, %eax
 2045 0026 48897424 		movq	%rsi, 16(%rsp)
 2045      10
 2046 002b 48897C24 		movq	%rdi, 24(%rsp)
 2046      18
 2047 0030 48894424 		movq	%rax, 8(%rsp)
 2047      08
 2048 0035 EB0D     		jmp	.L40
 2049              	.LVL291:
 2050 0037 660F1F84 		.p2align 4,,10
 2050      00000000 
 2050      00
 2051              		.p2align 3
 2052              	.L48:
 961:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
 962:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 963:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 964:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 965:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 966:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[8]);
 967:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[7]);
 968:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[6]);
 969:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[5]);
 970:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]);
 971:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 972:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[8]);
 973:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[7]);
 974:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[6]);
 975:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[5]);
 976:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 977:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp2 + tmp3;
 978:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp4;
 979:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 980:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM) ((z1 + z2 - 9 * CENTERJSAMPLE) << 1);
 981:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 982:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(0.707106781)),  /* c6 */
 983:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
 984:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 - tmp2, FIX(1.328926049));        /* c2 */
 985:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp4 - tmp4, FIX(0.707106781)); /* c6 */
 986:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 987:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.083350441))    /* c4 */
 988:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + z1 + z2, CONST_BITS-1);
 989:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 990:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp3 - tmp0, FIX(0.245575608))    /* c8 */
 991:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + z1 - z2, CONST_BITS-1);
 992:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 993:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
 994:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 995:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
 996:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12 - tmp13, FIX(1.224744871)), /* c3 */
 997:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
 998:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 999:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(1.224744871));        /* c3 */
1000:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp12, FIX(0.909038955)); /* c5 */
1001:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp13, FIX(0.483689525)); /* c7 */
1002:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1003:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp11 + tmp0 + tmp1, CONST_BITS-1);
1004:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1005:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp12 - tmp13, FIX(1.392728481)); /* c1 */
1006:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1007:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp0 - tmp11 - tmp2, CONST_BITS-1);
1008:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS-1);
1009:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1010:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
1011:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1012:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
1013:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 9)
1014:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
1015:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 2053              		.loc 1 1015 0
 2054 0040 4983C320 		addq	$32, %r11
 2055              	.LVL292:
 2056              	.L40:
 962:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2057              		.loc 1 962 0
 2058 0044 488B5C24 		movq	16(%rsp), %rbx
 2058      10
 2059 0049 4963C7   		movslq	%r15d, %rax
 2060 004c 4C8B4C24 		movq	8(%rsp), %r9
 2060      08
 2061 0051 4C030CC3 		addq	(%rbx,%rax,8), %r9
 2062              	.LVL293:
 968:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[5]);
 2063              		.loc 1 968 0
 2064 0055 450FB661 		movzbl	6(%r9), %r12d
 2064      06
 966:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[7]);
 2065              		.loc 1 966 0
 2066 005a 410FB601 		movzbl	(%r9), %eax
 2067 005e 450FB671 		movzbl	8(%r9), %r14d
 2067      08
 968:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[5]);
 2068              		.loc 1 968 0
 2069 0063 410FB651 		movzbl	2(%r9), %edx
 2069      02
 967:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[6]);
 2070              		.loc 1 967 0
 2071 0068 450FB669 		movzbl	7(%r9), %r13d
 2071      07
 2072 006d 410FB679 		movzbl	1(%r9), %edi
 2072      01
 969:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]);
 2073              		.loc 1 969 0
 2074 0072 410FB669 		movzbl	5(%r9), %ebp
 2074      05
 2075 0077 450FB651 		movzbl	3(%r9), %r10d
 2075      03
 970:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2076              		.loc 1 970 0
 2077 007c 450FB649 		movzbl	4(%r9), %r9d
 2077      04
 2078              	.LVL294:
 968:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[5]);
 2079              		.loc 1 968 0
 2080 0081 428D3422 		leal	(%rdx,%r12), %esi
 966:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[7]);
 2081              		.loc 1 966 0
 2082 0085 428D1C30 		leal	(%rax,%r14), %ebx
 2083              	.LVL295:
 974:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[5]);
 2084              		.loc 1 974 0
 2085 0089 4429E2   		subl	%r12d, %edx
 967:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[6]);
 2086              		.loc 1 967 0
 2087 008c 428D0C2F 		leal	(%rdi,%r13), %ecx
 973:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[6]);
 2088              		.loc 1 973 0
 2089 0090 4429EF   		subl	%r13d, %edi
 972:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[7]);
 2090              		.loc 1 972 0
 2091 0093 4429F0   		subl	%r14d, %eax
 966:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[7]);
 2092              		.loc 1 966 0
 2093 0096 4863DB   		movslq	%ebx, %rbx
 2094              	.LVL296:
 968:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[5]);
 2095              		.loc 1 968 0
 2096 0099 4863F6   		movslq	%esi, %rsi
 969:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]);
 2097              		.loc 1 969 0
 2098 009c 458D042A 		leal	(%r10,%rbp), %r8d
 967:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[6]);
 2099              		.loc 1 967 0
 2100 00a0 4863C9   		movslq	%ecx, %rcx
 2101              	.LVL297:
 975:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2102              		.loc 1 975 0
 2103 00a3 4129EA   		subl	%ebp, %r10d
 977:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp4;
 2104              		.loc 1 977 0
 2105 00a6 488D2C33 		leaq	(%rbx,%rsi), %rbp
 978:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 2106              		.loc 1 978 0
 2107 00aa 4E8D2409 		leaq	(%rcx,%r9), %r12
 969:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]);
 2108              		.loc 1 969 0
 2109 00ae 4D63C0   		movslq	%r8d, %r8
 2110              	.LVL298:
 985:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 2111              		.loc 1 985 0
 2112 00b1 4C29C9   		subq	%r9, %rcx
 2113              	.LVL299:
 977:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp4;
 2114              		.loc 1 977 0
 2115 00b4 4C01C5   		addq	%r8, %rbp
 985:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 2116              		.loc 1 985 0
 2117 00b7 4C29C9   		subq	%r9, %rcx
 972:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[7]);
 2118              		.loc 1 972 0
 2119 00ba 4898     		cltq
 2120              	.LVL300:
 980:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 2121              		.loc 1 980 0
 2122 00bc 4E8DAC25 		leaq	-1152(%rbp,%r12), %r13
 2122      80FBFFFF 
 2123              	.LVL301:
 981:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(0.707106781)),  /* c6 */
 2124              		.loc 1 981 0
 2125 00c4 4C29E5   		subq	%r12, %rbp
 974:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[5]);
 2126              		.loc 1 974 0
 2127 00c7 4863D2   		movslq	%edx, %rdx
 981:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(0.707106781)),  /* c6 */
 2128              		.loc 1 981 0
 2129 00ca 4C29E5   		subq	%r12, %rbp
 975:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2130              		.loc 1 975 0
 2131 00cd 4D63D2   		movslq	%r10d, %r10
 973:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[6]);
 2132              		.loc 1 973 0
 2133 00d0 4863FF   		movslq	%edi, %rdi
 2134              	.LVL302:
 981:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(0.707106781)),  /* c6 */
 2135              		.loc 1 981 0
 2136 00d3 4869EDA1 		imulq	$5793, %rbp, %rbp
 2136      160000
 980:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 2137              		.loc 1 980 0
 2138 00da 4D01ED   		addq	%r13, %r13
 985:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 2139              		.loc 1 985 0
 2140 00dd 4869C9A1 		imulq	$5793, %rcx, %rcx
 2140      160000
 980:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 2141              		.loc 1 980 0
 2142 00e4 45892B   		movl	%r13d, (%r11)
 2143              	.LVL303:
 999:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp12, FIX(0.909038955)); /* c5 */
 2144              		.loc 1 999 0
 2145 00e7 4869FF31 		imulq	$10033, %rdi, %rdi
 2145      270000
 2146              	.LVL304:
 981:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(0.707106781)),  /* c6 */
 2147              		.loc 1 981 0
 2148 00ee 4881C500 		addq	$2048, %rbp
 2148      080000
 2149 00f5 48C1FD0C 		sarq	$12, %rbp
 2150 00f9 41896B18 		movl	%ebp, 24(%r11)
 984:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp4 - tmp4, FIX(0.707106781)); /* c6 */
 2151              		.loc 1 984 0
 2152 00fd 4889DD   		movq	%rbx, %rbp
 2153 0100 4829F5   		subq	%rsi, %rbp
 986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.083350441))    /* c4 */
 2154              		.loc 1 986 0
 2155 0103 4C29C6   		subq	%r8, %rsi
 2156              	.LVL305:
 989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp3 - tmp0, FIX(0.245575608))    /* c8 */
 2157              		.loc 1 989 0
 2158 0106 4929D8   		subq	%rbx, %r8
 2159              	.LVL306:
 984:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp4 - tmp4, FIX(0.707106781)); /* c6 */
 2160              		.loc 1 984 0
 2161 0109 4869ED87 		imulq	$10887, %rbp, %rbp
 2161      2A0000
 2162              	.LVL307:
 986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.083350441))    /* c4 */
 2163              		.loc 1 986 0
 2164 0110 4869F6AB 		imulq	$8875, %rsi, %rsi
 2164      220000
 989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp3 - tmp0, FIX(0.245575608))    /* c8 */
 2165              		.loc 1 989 0
 2166 0117 4D69C0DC 		imulq	$2012, %r8, %r8
 2166      070000
 986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.083350441))    /* c4 */
 2167              		.loc 1 986 0
 2168 011e 4801EE   		addq	%rbp, %rsi
 989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp3 - tmp0, FIX(0.245575608))    /* c8 */
 2169              		.loc 1 989 0
 2170 0121 4829CD   		subq	%rcx, %rbp
 2171              	.LVL308:
 986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.083350441))    /* c4 */
 2172              		.loc 1 986 0
 2173 0124 488DB431 		leaq	2048(%rcx,%rsi), %rsi
 2173      00080000 
 989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp3 - tmp0, FIX(0.245575608))    /* c8 */
 2174              		.loc 1 989 0
 2175 012c 4A8D8C05 		leaq	2048(%rbp,%r8), %rcx
 2175      00080000 
 2176              	.LVL309:
 2177 0134 48C1F90C 		sarq	$12, %rcx
 986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.083350441))    /* c4 */
 2178              		.loc 1 986 0
 2179 0138 48C1FE0C 		sarq	$12, %rsi
 989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp3 - tmp0, FIX(0.245575608))    /* c8 */
 2180              		.loc 1 989 0
 2181 013c 41894B10 		movl	%ecx, 16(%r11)
 995:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12 - tmp13, FIX(1.224744871)), /* c3 */
 2182              		.loc 1 995 0
 2183 0140 4889C1   		movq	%rax, %rcx
 986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.083350441))    /* c4 */
 2184              		.loc 1 986 0
 2185 0143 41897308 		movl	%esi, 8(%r11)
 995:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12 - tmp13, FIX(1.224744871)), /* c3 */
 2186              		.loc 1 995 0
 2187 0147 4829D1   		subq	%rdx, %rcx
 2188 014a 4C29D1   		subq	%r10, %rcx
 2189 014d 4869C931 		imulq	$10033, %rcx, %rcx
 2189      270000
 2190 0154 4881C100 		addq	$2048, %rcx
 2190      080000
 2191 015b 48C1F90C 		sarq	$12, %rcx
 2192 015f 41894B0C 		movl	%ecx, 12(%r11)
1000:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp13, FIX(0.483689525)); /* c7 */
 2193              		.loc 1 1000 0
 2194 0163 488D0C10 		leaq	(%rax,%rdx), %rcx
 2195 0167 4869C917 		imulq	$7447, %rcx, %rcx
 2195      1D0000
 2196              	.LVL310:
1001:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2197              		.loc 1 1001 0
 2198 016e 4C01D0   		addq	%r10, %rax
 2199              	.LVL311:
1005:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2200              		.loc 1 1005 0
 2201 0171 4C29D2   		subq	%r10, %rdx
 2202              	.LVL312:
1001:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2203              		.loc 1 1001 0
 2204 0174 4869C07A 		imulq	$3962, %rax, %rax
 2204      0F0000
 2205              	.LVL313:
1010:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2206              		.loc 1 1010 0
 2207 017b 4183C701 		addl	$1, %r15d
 2208              	.LVL314:
1005:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2209              		.loc 1 1005 0
 2210 017f 4869D291 		imulq	$11409, %rdx, %rdx
 2210      2C0000
 2211              	.LVL315:
1003:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2212              		.loc 1 1003 0
 2213 0186 488D340F 		leaq	(%rdi,%rcx), %rsi
1007:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS-1);
 2214              		.loc 1 1007 0
 2215 018a 4829F9   		subq	%rdi, %rcx
 2216              	.LVL316:
1003:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2217              		.loc 1 1003 0
 2218 018d 488DB430 		leaq	2048(%rax,%rsi), %rsi
 2218      00080000 
1008:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2219              		.loc 1 1008 0
 2220 0195 4829F8   		subq	%rdi, %rax
 2221              	.LVL317:
1007:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS-1);
 2222              		.loc 1 1007 0
 2223 0198 4829D1   		subq	%rdx, %rcx
1008:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2224              		.loc 1 1008 0
 2225 019b 488D8402 		leaq	2048(%rdx,%rax), %rax
 2225      00080000 
1007:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS-1);
 2226              		.loc 1 1007 0
 2227 01a3 4881C100 		addq	$2048, %rcx
 2227      080000
1003:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2228              		.loc 1 1003 0
 2229 01aa 48C1FE0C 		sarq	$12, %rsi
1007:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS-1);
 2230              		.loc 1 1007 0
 2231 01ae 48C1F90C 		sarq	$12, %rcx
1008:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2232              		.loc 1 1008 0
 2233 01b2 48C1F80C 		sarq	$12, %rax
1012:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 9)
 2234              		.loc 1 1012 0
 2235 01b6 4183FF08 		cmpl	$8, %r15d
1003:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2236              		.loc 1 1003 0
 2237 01ba 41897304 		movl	%esi, 4(%r11)
1007:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS-1);
 2238              		.loc 1 1007 0
 2239 01be 41894B14 		movl	%ecx, 20(%r11)
1008:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2240              		.loc 1 1008 0
 2241 01c2 4189431C 		movl	%eax, 28(%r11)
1012:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 9)
 2242              		.loc 1 1012 0
 2243 01c6 0F84C901 		je	.L44
 2243      0000
1013:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 2244              		.loc 1 1013 0
 2245 01cc 4183FF09 		cmpl	$9, %r15d
 2246 01d0 0F856AFE 		jne	.L48
 2246      FFFF
 2247 01d6 488B7C24 		movq	24(%rsp), %rdi
 2247      18
 2248              	.LVL318:
 2249 01db 488D5C24 		leaq	32(%rsp), %rbx
 2249      20
1016:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
1017:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
1018:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1019:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1020:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
1021:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
1022:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/9)**2 = 64/81, which we partially
1023:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers and final/initial shifting:
1024:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/18) * 128/81.
1025:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1026:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1027:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
1028:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
1029:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 2250              		.loc 1 1029 0
 2251 01e0 4C8D7C24 		leaq	64(%rsp), %r15
 2251      40
 2252              	.LVL319:
 2253              		.p2align 4,,10
 2254 01e5 0F1F00   		.p2align 3
 2255              	.L42:
1030:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1031:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*0];
1033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*7];
1034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*6];
 2256              		.loc 1 1034 0 discriminator 3
 2257 01e8 448BA7C0 		movl	192(%rdi), %r12d
 2257      000000
1032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*7];
 2258              		.loc 1 1032 0 discriminator 3
 2259 01ef 8B07     		movl	(%rdi), %eax
 2260 01f1 448B33   		movl	(%rbx), %r14d
 2261              		.loc 1 1034 0 discriminator 3
 2262 01f4 8B5740   		movl	64(%rdi), %edx
 2263              	.LVL320:
1033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*6];
 2264              		.loc 1 1033 0 discriminator 3
 2265 01f7 448BAFE0 		movl	224(%rdi), %r13d
 2265      000000
 2266 01fe 448B4720 		movl	32(%rdi), %r8d
1035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*5];
1036:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4];
 2267              		.loc 1 1036 0 discriminator 3
 2268 0202 4863AF80 		movslq	128(%rdi), %rbp
 2268      000000
1035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*5];
 2269              		.loc 1 1035 0 discriminator 3
 2270 0209 448B5760 		movl	96(%rdi), %r10d
 2271              	.LVL321:
 2272 020d 448B8FA0 		movl	160(%rdi), %r9d
 2272      000000
1032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*7];
 2273              		.loc 1 1032 0 discriminator 3
 2274 0214 468D1C30 		leal	(%rax,%r14), %r11d
1034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*5];
 2275              		.loc 1 1034 0 discriminator 3
 2276 0218 428D3422 		leal	(%rdx,%r12), %esi
1033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*6];
 2277              		.loc 1 1033 0 discriminator 3
 2278 021c 438D0C28 		leal	(%r8,%r13), %ecx
1037:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1038:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*0];
1039:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*7];
1040:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*6];
 2279              		.loc 1 1040 0 discriminator 3
 2280 0220 4429E2   		subl	%r12d, %edx
1039:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*6];
 2281              		.loc 1 1039 0 discriminator 3
 2282 0223 4529E8   		subl	%r13d, %r8d
1032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*7];
 2283              		.loc 1 1032 0 discriminator 3
 2284 0226 4D63DB   		movslq	%r11d, %r11
 2285              	.LVL322:
1034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*5];
 2286              		.loc 1 1034 0 discriminator 3
 2287 0229 4863F6   		movslq	%esi, %rsi
1038:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*7];
 2288              		.loc 1 1038 0 discriminator 3
 2289 022c 4429F0   		subl	%r14d, %eax
1035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4];
 2290              		.loc 1 1035 0 discriminator 3
 2291 022f 4501D1   		addl	%r10d, %r9d
1033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*6];
 2292              		.loc 1 1033 0 discriminator 3
 2293 0232 4863C9   		movslq	%ecx, %rcx
 2294              	.LVL323:
1041:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*5];
1042:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1043:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp2 + tmp3;
 2295              		.loc 1 1043 0 discriminator 3
 2296 0235 4D8D2433 		leaq	(%r11,%rsi), %r12
1044:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp4;
 2297              		.loc 1 1044 0 discriminator 3
 2298 0239 4C8D2C29 		leaq	(%rcx,%rbp), %r13
1035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4];
 2299              		.loc 1 1035 0 discriminator 3
 2300 023d 4D63C9   		movslq	%r9d, %r9
 2301              	.LVL324:
1045:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
1046:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + z2, FIX(1.580246914)),       /* 128/81 */
1047:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1048:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
1049:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(1.117403309)),  /* c6 */
1050:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1051:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 - tmp2, FIX(2.100031287));        /* c2 */
1052:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp4 - tmp4, FIX(1.117403309)); /* c6 */
 2302              		.loc 1 1052 0 discriminator 3
 2303 0240 4829E9   		subq	%rbp, %rcx
 2304              	.LVL325:
1043:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp4;
 2305              		.loc 1 1043 0 discriminator 3
 2306 0243 4D01CC   		addq	%r9, %r12
 2307              		.loc 1 1052 0 discriminator 3
 2308 0246 4829E9   		subq	%rbp, %rcx
1041:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2309              		.loc 1 1041 0 discriminator 3
 2310 0249 442B97A0 		subl	160(%rdi), %r10d
 2310      000000
1045:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 2311              		.loc 1 1045 0 discriminator 3
 2312 0250 4F8D342C 		leaq	(%r12,%r13), %r14
1048:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(1.117403309)),  /* c6 */
 2313              		.loc 1 1048 0 discriminator 3
 2314 0254 4D29EC   		subq	%r13, %r12
1038:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*7];
 2315              		.loc 1 1038 0 discriminator 3
 2316 0257 4898     		cltq
 2317              	.LVL326:
1048:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(1.117403309)),  /* c6 */
 2318              		.loc 1 1048 0 discriminator 3
 2319 0259 4D29EC   		subq	%r13, %r12
1040:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*5];
 2320              		.loc 1 1040 0 discriminator 3
 2321 025c 4863D2   		movslq	%edx, %rdx
1039:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*6];
 2322              		.loc 1 1039 0 discriminator 3
 2323 025f 4D63C0   		movslq	%r8d, %r8
 2324              	.LVL327:
1048:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(1.117403309)),  /* c6 */
 2325              		.loc 1 1048 0 discriminator 3
 2326 0262 4D69E4C2 		imulq	$9154, %r12, %r12
 2326      230000
 2327              		.loc 1 1052 0 discriminator 3
 2328 0269 4869C9C2 		imulq	$9154, %rcx, %rcx
 2328      230000
1041:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2329              		.loc 1 1041 0 discriminator 3
 2330 0270 4D63D2   		movslq	%r10d, %r10
 2331              	.LVL328:
1045:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + z2, FIX(1.580246914)),       /* 128/81 */
 2332              		.loc 1 1045 0 discriminator 3
 2333 0273 4D69F691 		imulq	$12945, %r14, %r14
 2333      320000
1048:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z2 - z2, FIX(1.117403309)),  /* c6 */
 2334              		.loc 1 1048 0 discriminator 3
 2335 027a 4981C400 		addq	$16384, %r12
 2335      400000
 2336 0281 49C1FC0F 		sarq	$15, %r12
 2337 0285 4489A7C0 		movl	%r12d, 192(%rdi)
 2337      000000
1051:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp4 - tmp4, FIX(1.117403309)); /* c6 */
 2338              		.loc 1 1051 0 discriminator 3
 2339 028c 4D89DC   		movq	%r11, %r12
1045:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + z2, FIX(1.580246914)),       /* 128/81 */
 2340              		.loc 1 1045 0 discriminator 3
 2341 028f 4981C600 		addq	$16384, %r14
 2341      400000
1051:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp4 - tmp4, FIX(1.117403309)); /* c6 */
 2342              		.loc 1 1051 0 discriminator 3
 2343 0296 4929F4   		subq	%rsi, %r12
1053:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 2344              		.loc 1 1053 0 discriminator 3
 2345 0299 4C29CE   		subq	%r9, %rsi
 2346              	.LVL329:
1054:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.711961190))    /* c4 */
1055:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + z1 + z2, CONST_BITS+2);
1056:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 2347              		.loc 1 1056 0 discriminator 3
 2348 029c 4D29D9   		subq	%r11, %r9
 2349              	.LVL330:
1051:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp4 - tmp4, FIX(1.117403309)); /* c6 */
 2350              		.loc 1 1051 0 discriminator 3
 2351 029f 4D69E433 		imulq	$17203, %r12, %r12
 2351      430000
 2352              	.LVL331:
1045:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + z2, FIX(1.580246914)),       /* 128/81 */
 2353              		.loc 1 1045 0 discriminator 3
 2354 02a6 49C1FE0F 		sarq	$15, %r14
1053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.711961190))    /* c4 */
 2355              		.loc 1 1053 0 discriminator 3
 2356 02aa 4869F6C8 		imulq	$14024, %rsi, %rsi
 2356      360000
1045:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + z2, FIX(1.580246914)),       /* 128/81 */
 2357              		.loc 1 1045 0 discriminator 3
 2358 02b1 448937   		movl	%r14d, (%rdi)
 2359              		.loc 1 1056 0 discriminator 3
 2360 02b4 4D69C96B 		imulq	$3179, %r9, %r9
 2360      0C0000
1053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.711961190))    /* c4 */
 2361              		.loc 1 1053 0 discriminator 3
 2362 02bb 4C01E6   		addq	%r12, %rsi
 2363              		.loc 1 1056 0 discriminator 3
 2364 02be 4929CC   		subq	%rcx, %r12
 2365              	.LVL332:
1053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.711961190))    /* c4 */
 2366              		.loc 1 1053 0 discriminator 3
 2367 02c1 488DB431 		leaq	16384(%rcx,%rsi), %rsi
 2367      00400000 
 2368              		.loc 1 1056 0 discriminator 3
 2369 02c9 4B8D8C0C 		leaq	16384(%r12,%r9), %rcx
 2369      00400000 
 2370              	.LVL333:
 2371 02d1 48C1F90F 		sarq	$15, %rcx
1053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.711961190))    /* c4 */
 2372              		.loc 1 1053 0 discriminator 3
 2373 02d5 48C1FE0F 		sarq	$15, %rsi
 2374              		.loc 1 1056 0 discriminator 3
 2375 02d9 898F8000 		movl	%ecx, 128(%rdi)
 2375      0000
1057:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp3 - tmp0, FIX(0.388070096))    /* c8 */
1058:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + z1 - z2, CONST_BITS+2);
1059:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1060:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1061:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1062:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
 2376              		.loc 1 1062 0 discriminator 3
 2377 02df 4889C1   		movq	%rax, %rcx
1053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2 - tmp3, FIX(1.711961190))    /* c4 */
 2378              		.loc 1 1053 0 discriminator 3
 2379 02e2 897740   		movl	%esi, 64(%rdi)
 2380              		.loc 1 1062 0 discriminator 3
 2381 02e5 4829D1   		subq	%rdx, %rcx
 2382 02e8 4C29D1   		subq	%r10, %rcx
 2383 02eb 4869C9EF 		imulq	$15855, %rcx, %rcx
 2383      3D0000
 2384 02f2 4881C100 		addq	$16384, %rcx
 2384      400000
 2385 02f9 48C1F90F 		sarq	$15, %rcx
 2386 02fd 894F60   		movl	%ecx, 96(%rdi)
 2387              	.LVL334:
1063:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12 - tmp13, FIX(1.935399303)), /* c3 */
1064:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1065:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1066:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(1.935399303));        /* c3 */
1067:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp12, FIX(1.436506004)); /* c5 */
 2388              		.loc 1 1067 0 discriminator 3
 2389 0300 488D0C10 		leaq	(%rax,%rdx), %rcx
1066:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp12, FIX(1.436506004)); /* c5 */
 2390              		.loc 1 1066 0 discriminator 3
 2391 0304 4D69C0EF 		imulq	$15855, %r8, %r8
 2391      3D0000
 2392              	.LVL335:
1068:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp13, FIX(0.764348879)); /* c7 */
 2393              		.loc 1 1068 0 discriminator 3
 2394 030b 4C01D0   		addq	%r10, %rax
 2395              	.LVL336:
1069:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1070:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
1071:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp0 + tmp1, CONST_BITS+2);
1072:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1073:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp12 - tmp13, FIX(2.200854883)); /* c1 */
 2396              		.loc 1 1073 0 discriminator 3
 2397 030e 4C29D2   		subq	%r10, %rdx
 2398              	.LVL337:
1067:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp13, FIX(0.764348879)); /* c7 */
 2399              		.loc 1 1067 0 discriminator 3
 2400 0311 4869C9F8 		imulq	$11768, %rcx, %rcx
 2400      2D0000
 2401              	.LVL338:
1074:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1075:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
1076:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp0 - tmp11 - tmp2, CONST_BITS+2);
1077:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM)
1078:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS+2);
1079:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1080:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
1081:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 2402              		.loc 1 1081 0 discriminator 3
 2403 0318 4883C304 		addq	$4, %rbx
 2404              	.LVL339:
1080:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 2405              		.loc 1 1080 0 discriminator 3
 2406 031c 4883C704 		addq	$4, %rdi
 2407              	.LVL340:
1068:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2408              		.loc 1 1068 0 discriminator 3
 2409 0320 4869C076 		imulq	$6262, %rax, %rax
 2409      180000
 2410              	.LVL341:
1070:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp0 + tmp1, CONST_BITS+2);
 2411              		.loc 1 1070 0 discriminator 3
 2412 0327 498D3408 		leaq	(%r8,%rcx), %rsi
1075:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp0 - tmp11 - tmp2, CONST_BITS+2);
 2413              		.loc 1 1075 0 discriminator 3
 2414 032b 4C29C1   		subq	%r8, %rcx
 2415              	.LVL342:
1073:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2416              		.loc 1 1073 0 discriminator 3
 2417 032e 4869D26D 		imulq	$18029, %rdx, %rdx
 2417      460000
 2418              	.LVL343:
1070:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp0 + tmp1, CONST_BITS+2);
 2419              		.loc 1 1070 0 discriminator 3
 2420 0335 488DB430 		leaq	16384(%rax,%rsi), %rsi
 2420      00400000 
1077:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS+2);
 2421              		.loc 1 1077 0 discriminator 3
 2422 033d 4C29C0   		subq	%r8, %rax
 2423              	.LVL344:
1070:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp0 + tmp1, CONST_BITS+2);
 2424              		.loc 1 1070 0 discriminator 3
 2425 0340 48C1FE0F 		sarq	$15, %rsi
1075:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp0 - tmp11 - tmp2, CONST_BITS+2);
 2426              		.loc 1 1075 0 discriminator 3
 2427 0344 4829D1   		subq	%rdx, %rcx
1077:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS+2);
 2428              		.loc 1 1077 0 discriminator 3
 2429 0347 488D8402 		leaq	16384(%rdx,%rax), %rax
 2429      00400000 
1070:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp0 + tmp1, CONST_BITS+2);
 2430              		.loc 1 1070 0 discriminator 3
 2431 034f 89771C   		movl	%esi, 28(%rdi)
 2432              	.LVL345:
1075:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp0 - tmp11 - tmp2, CONST_BITS+2);
 2433              		.loc 1 1075 0 discriminator 3
 2434 0352 4881C100 		addq	$16384, %rcx
 2434      400000
 2435 0359 48C1F90F 		sarq	$15, %rcx
1077:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS+2);
 2436              		.loc 1 1077 0 discriminator 3
 2437 035d 48C1F80F 		sarq	$15, %rax
1075:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp0 - tmp11 - tmp2, CONST_BITS+2);
 2438              		.loc 1 1075 0 discriminator 3
 2439 0361 898F9C00 		movl	%ecx, 156(%rdi)
 2439      0000
1077:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp1 - tmp11 + tmp2, CONST_BITS+2);
 2440              		.loc 1 1077 0 discriminator 3
 2441 0367 8987DC00 		movl	%eax, 220(%rdi)
 2441      0000
 2442              	.LVL346:
1029:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 2443              		.loc 1 1029 0 discriminator 3
 2444 036d 4C39FB   		cmpq	%r15, %rbx
 2445 0370 0F8572FE 		jne	.L42
 2445      FFFF
1082:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1083:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 2446              		.loc 1 1083 0
 2447 0376 488B4424 		movq	72(%rsp), %rax
 2447      48
 2448 037b 64483304 		xorq	%fs:40, %rax
 2448      25280000 
 2448      00
 2449 0384 7519     		jne	.L49
 2450 0386 4883C458 		addq	$88, %rsp
 2451              		.cfi_remember_state
 2452              		.cfi_def_cfa_offset 56
 2453 038a 5B       		popq	%rbx
 2454              		.cfi_def_cfa_offset 48
 2455              	.LVL347:
 2456 038b 5D       		popq	%rbp
 2457              		.cfi_def_cfa_offset 40
 2458              	.LVL348:
 2459 038c 415C     		popq	%r12
 2460              		.cfi_def_cfa_offset 32
 2461 038e 415D     		popq	%r13
 2462              		.cfi_def_cfa_offset 24
 2463 0390 415E     		popq	%r14
 2464              		.cfi_def_cfa_offset 16
 2465 0392 415F     		popq	%r15
 2466              		.cfi_def_cfa_offset 8
 2467 0394 C3       		ret
 2468              	.LVL349:
 2469              	.L44:
 2470              		.cfi_restore_state
1017:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 2471              		.loc 1 1017 0
 2472 0395 4C8D5C24 		leaq	32(%rsp), %r11
 2472      20
 2473              	.LVL350:
 2474 039a E9A5FCFF 		jmp	.L40
 2474      FF
 2475              	.LVL351:
 2476              	.L49:
 2477              		.loc 1 1083 0
 2478 039f E8000000 		call	__stack_chk_fail
 2478      00
 2479              	.LVL352:
 2480              		.cfi_endproc
 2481              	.LFE69:
 2483              		.section	.text.unlikely.jpeg_fdct_9x9
 2484              	.LCOLDE8:
 2485              		.section	.text.jpeg_fdct_9x9
 2486              	.LHOTE8:
 2487              		.section	.text.unlikely.jpeg_fdct_10x10,"ax",@progbits
 2488              	.LCOLDB9:
 2489              		.section	.text.jpeg_fdct_10x10,"ax",@progbits
 2490              	.LHOTB9:
 2491              		.p2align 4,,15
 2492              		.globl	jpeg_fdct_10x10
 2494              	jpeg_fdct_10x10:
 2495              	.LFB70:
1084:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1085:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1086:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
1087:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 10x10 sample block.
1088:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
1089:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1090:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
1091:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_10x10 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
1092:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 2496              		.loc 1 1092 0
 2497              		.cfi_startproc
 2498              	.LVL353:
 2499 0000 4157     		pushq	%r15
 2500              		.cfi_def_cfa_offset 16
 2501              		.cfi_offset 15, -16
 2502 0002 4156     		pushq	%r14
 2503              		.cfi_def_cfa_offset 24
 2504              		.cfi_offset 14, -24
 2505 0004 4155     		pushq	%r13
 2506              		.cfi_def_cfa_offset 32
 2507              		.cfi_offset 13, -32
 2508 0006 4154     		pushq	%r12
 2509              		.cfi_def_cfa_offset 40
 2510              		.cfi_offset 12, -40
1093:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
1094:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
1095:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*2];
1096:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
1097:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
1098:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
1099:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
1100:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
1101:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1102:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
1103:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
1104:fltk-1.3.4-1/jpeg/jfdctint.c ****    * we scale the results further by 2 as part of output adaption
1105:fltk-1.3.4-1/jpeg/jfdctint.c ****    * scaling for different DCT size.
1106:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/20).
1107:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1108:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1109:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 2511              		.loc 1 1109 0
 2512 0008 4989FC   		movq	%rdi, %r12
1092:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 2513              		.loc 1 1092 0
 2514 000b 55       		pushq	%rbp
 2515              		.cfi_def_cfa_offset 48
 2516              		.cfi_offset 6, -48
 2517 000c 53       		pushq	%rbx
 2518              		.cfi_def_cfa_offset 56
 2519              		.cfi_offset 3, -56
1110:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 2520              		.loc 1 1110 0
 2521 000d 31ED     		xorl	%ebp, %ebp
1092:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 2522              		.loc 1 1092 0
 2523 000f 4881EC88 		subq	$136, %rsp
 2523      000000
 2524              		.cfi_def_cfa_offset 192
1092:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 2525              		.loc 1 1092 0
 2526 0016 64488B04 		movq	%fs:40, %rax
 2526      25280000 
 2526      00
 2527 001f 48894424 		movq	%rax, 120(%rsp)
 2527      78
 2528 0024 31C0     		xorl	%eax, %eax
 2529              	.LVL354:
 2530 0026 89D0     		movl	%edx, %eax
 2531 0028 48897424 		movq	%rsi, 32(%rsp)
 2531      20
 2532 002d 48897C24 		movq	%rdi, 40(%rsp)
 2532      28
 2533 0032 48894424 		movq	%rax, 24(%rsp)
 2533      18
 2534 0037 EB0B     		jmp	.L51
 2535              	.LVL355:
 2536 0039 0F1F8000 		.p2align 4,,10
 2536      000000
 2537              		.p2align 3
 2538              	.L59:
1111:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
1112:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
1113:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1114:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1115:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[9]);
1117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
1118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
1119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
1120:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
1121:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1122:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
1123:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
1124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
1125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
1126:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[9]);
1128:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[8]);
1129:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[7]);
1130:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[6]);
1131:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[5]);
1132:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1133:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
1134:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
1135:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 10 * CENTERJSAMPLE) << 1);
1136:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp12;
1137:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
1138:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.144122806)) - /* c4 */
1139:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX(0.437016024)),  /* c8 */
1140:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
1141:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp13 + tmp14, FIX(0.831253876));    /* c6 */
1142:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
1143:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
1144:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
1145:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
1146:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
1147:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
1148:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1149:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1150:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1151:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
1152:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 - tmp3;
1153:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) ((tmp10 - tmp11 - tmp2) << 1);
1154:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 <<= CONST_BITS;
1155:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
1156:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.396802247)) +          /* c1 */
1157:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp1, FIX(1.260073511)) + tmp2 +   /* c3 */
1158:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp3, FIX(0.642039522)) +          /* c7 */
1159:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp4, FIX(0.221231742)),           /* c9 */
1160:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
1161:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 - tmp4, FIX(0.951056516)) -     /* (c3+c7)/2 */
1162:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.587785252));      /* (c1-c9)/2 */
1163:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp10 + tmp11, FIX(0.309016994)) +   /* (c3-c7)/2 */
1164:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    (tmp11 << (CONST_BITS - 1)) - tmp2;
1165:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp12 + tmp13, CONST_BITS-1);
1166:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-1);
1167:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1168:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
1169:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1170:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
1171:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 10)
1172:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
1173:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 2539              		.loc 1 1173 0
 2540 0040 4983C420 		addq	$32, %r12
 2541              	.LVL356:
 2542              	.L51:
1112:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2543              		.loc 1 1112 0
 2544 0044 488B5C24 		movq	32(%rsp), %rbx
 2544      20
 2545 0049 4863C5   		movslq	%ebp, %rax
 2546 004c 4C8B4C24 		movq	24(%rsp), %r9
 2546      18
 2547 0051 4C030CC3 		addq	(%rbx,%rax,8), %r9
 2548              	.LVL357:
1118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
 2549              		.loc 1 1118 0
 2550 0055 410FB659 		movzbl	7(%r9), %ebx
 2550      07
 2551 005a 410FB651 		movzbl	2(%r9), %edx
 2551      02
1119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
 2552              		.loc 1 1119 0
 2553 005f 450FB659 		movzbl	6(%r9), %r11d
 2553      06
 2554 0064 450FB651 		movzbl	3(%r9), %r10d
 2554      03
1116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
 2555              		.loc 1 1116 0
 2556 0069 410FB601 		movzbl	(%r9), %eax
 2557 006d 450FB671 		movzbl	9(%r9), %r14d
 2557      09
1117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
 2558              		.loc 1 1117 0
 2559 0072 410FB679 		movzbl	1(%r9), %edi
 2559      01
 2560 0077 450FB669 		movzbl	8(%r9), %r13d
 2560      08
1118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
 2561              		.loc 1 1118 0
 2562 007c 448D041A 		leal	(%rdx,%rbx), %r8d
1129:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[6]);
 2563              		.loc 1 1129 0
 2564 0080 29DA     		subl	%ebx, %edx
1119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
 2565              		.loc 1 1119 0
 2566 0082 44895424 		movl	%r10d, 16(%rsp)
 2566      10
 2567 0087 44895C24 		movl	%r11d, 20(%rsp)
 2567      14
 2568 008c 4501DA   		addl	%r11d, %r10d
1118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
 2569              		.loc 1 1118 0
 2570 008f 4D63F8   		movslq	%r8d, %r15
1120:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2571              		.loc 1 1120 0
 2572 0092 450FB659 		movzbl	5(%r9), %r11d
 2572      05
 2573 0097 450FB641 		movzbl	4(%r9), %r8d
 2573      04
1116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
 2574              		.loc 1 1116 0
 2575 009c 428D3430 		leal	(%rax,%r14), %esi
1117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
 2576              		.loc 1 1117 0
 2577 00a0 428D0C2F 		leal	(%rdi,%r13), %ecx
1118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
 2578              		.loc 1 1118 0
 2579 00a4 4C897C24 		movq	%r15, 8(%rsp)
 2579      08
1119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
 2580              		.loc 1 1119 0
 2581 00a9 4D63D2   		movslq	%r10d, %r10
1134:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 10 * CENTERJSAMPLE) << 1);
 2582              		.loc 1 1134 0
 2583 00ac 488B5C24 		movq	8(%rsp), %rbx
 2583      08
1127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[8]);
 2584              		.loc 1 1127 0
 2585 00b1 4429F0   		subl	%r14d, %eax
1116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
 2586              		.loc 1 1116 0
 2587 00b4 4863F6   		movslq	%esi, %rsi
 2588              	.LVL358:
1117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
 2589              		.loc 1 1117 0
 2590 00b7 4863C9   		movslq	%ecx, %rcx
 2591              	.LVL359:
1127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[8]);
 2592              		.loc 1 1127 0
 2593 00ba 4898     		cltq
1120:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2594              		.loc 1 1120 0
 2595 00bc 478D3C18 		leal	(%r8,%r11), %r15d
1131:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2596              		.loc 1 1131 0
 2597 00c0 4529D8   		subl	%r11d, %r8d
1128:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[7]);
 2598              		.loc 1 1128 0
 2599 00c3 4429EF   		subl	%r13d, %edi
1131:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2600              		.loc 1 1131 0
 2601 00c6 4D63C0   		movslq	%r8d, %r8
1128:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[7]);
 2602              		.loc 1 1128 0
 2603 00c9 4863FF   		movslq	%edi, %rdi
1129:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[6]);
 2604              		.loc 1 1129 0
 2605 00cc 4863D2   		movslq	%edx, %rdx
1120:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2606              		.loc 1 1120 0
 2607 00cf 4D63FF   		movslq	%r15d, %r15
 2608              	.LVL360:
1122:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
 2609              		.loc 1 1122 0
 2610 00d2 4E8D0C3E 		leaq	(%rsi,%r15), %r9
 2611              	.LVL361:
1123:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
 2612              		.loc 1 1123 0
 2613 00d6 4C29FE   		subq	%r15, %rsi
 2614              	.LVL362:
1124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
 2615              		.loc 1 1124 0
 2616 00d9 4E8D3C11 		leaq	(%rcx,%r10), %r15
 2617              	.LVL363:
1125:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2618              		.loc 1 1125 0
 2619 00dd 4C29D1   		subq	%r10, %rcx
 2620              	.LVL364:
1130:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[5]);
 2621              		.loc 1 1130 0
 2622 00e0 448B5424 		movl	16(%rsp), %r10d
 2622      10
 2623              	.LVL365:
 2624 00e5 442B5424 		subl	20(%rsp), %r10d
 2624      14
 2625              	.LVL366:
1134:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 10 * CENTERJSAMPLE) << 1);
 2626              		.loc 1 1134 0
 2627 00ea 4F8D1C39 		leaq	(%r9,%r15), %r11
 2628              	.LVL367:
 2629 00ee 4E8D9C1B 		leaq	-1280(%rbx,%r11), %r11
 2629      00FBFFFF 
1130:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[5]);
 2630              		.loc 1 1130 0
 2631 00f6 4D63D2   		movslq	%r10d, %r10
 2632              	.LVL368:
1134:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 10 * CENTERJSAMPLE) << 1);
 2633              		.loc 1 1134 0
 2634 00f9 4D01DB   		addq	%r11, %r11
 2635 00fc 45891C24 		movl	%r11d, (%r12)
 2636              	.LVL369:
1136:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 2637              		.loc 1 1136 0
 2638 0100 4C8D1C1B 		leaq	(%rbx,%rbx), %r11
 2639              	.LVL370:
1137:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.144122806)) - /* c4 */
 2640              		.loc 1 1137 0
 2641 0104 4D29D9   		subq	%r11, %r9
 2642              	.LVL371:
 2643 0107 4D29DF   		subq	%r11, %r15
 2644              	.LVL372:
 2645 010a 4D69C99D 		imulq	$9373, %r9, %r9
 2645      240000
 2646 0111 4D69FF04 		imulq	$-3580, %r15, %r15
 2646      F2FFFF
1155:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.396802247)) +          /* c1 */
 2647              		.loc 1 1155 0
 2648 0118 4C69D8B3 		imulq	$11443, %rax, %r11
 2648      2C0000
 2649              	.LVL373:
1137:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.144122806)) - /* c4 */
 2650              		.loc 1 1137 0
 2651 011f 4F8D8C39 		leaq	2048(%r9,%r15), %r9
 2651      00080000 
 2652 0127 49C1F90C 		sarq	$12, %r9
 2653 012b 45894C24 		movl	%r9d, 16(%r12)
 2653      10
1141:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 2654              		.loc 1 1141 0
 2655 0130 4C8D0C0E 		leaq	(%rsi,%rcx), %r9
1142:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
 2656              		.loc 1 1142 0
 2657 0134 4869F671 		imulq	$4209, %rsi, %rsi
 2657      100000
 2658              	.LVL374:
1141:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 2659              		.loc 1 1141 0
 2660 013b 4D69C99A 		imulq	$6810, %r9, %r9
 2660      1A0000
 2661              	.LVL375:
1145:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 2662              		.loc 1 1145 0
 2663 0142 4869C95C 		imulq	$-17828, %rcx, %rcx
 2663      BAFFFF
 2664              	.LVL376:
1142:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
 2665              		.loc 1 1142 0
 2666 0149 498DB431 		leaq	2048(%r9,%rsi), %rsi
 2666      00080000 
1145:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 2667              		.loc 1 1145 0
 2668 0151 498D8C09 		leaq	2048(%r9,%rcx), %rcx
 2668      00080000 
1142:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
 2669              		.loc 1 1142 0
 2670 0159 48C1FE0C 		sarq	$12, %rsi
1145:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 2671              		.loc 1 1145 0
 2672 015d 48C1F90C 		sarq	$12, %rcx
1142:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
 2673              		.loc 1 1142 0
 2674 0161 41897424 		movl	%esi, 8(%r12)
 2674      08
1151:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 - tmp3;
 2675              		.loc 1 1151 0
 2676 0166 4A8D3400 		leaq	(%rax,%r8), %rsi
 2677              	.LVL377:
1145:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 2678              		.loc 1 1145 0
 2679 016a 41894C24 		movl	%ecx, 24(%r12)
 2679      18
1152:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) ((tmp10 - tmp11 - tmp2) << 1);
 2680              		.loc 1 1152 0
 2681 016f 4889F9   		movq	%rdi, %rcx
 2682 0172 4C29D1   		subq	%r10, %rcx
 2683              	.LVL378:
1153:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 <<= CONST_BITS;
 2684              		.loc 1 1153 0
 2685 0175 4989F1   		movq	%rsi, %r9
 2686 0178 4929C9   		subq	%rcx, %r9
 2687 017b 4929D1   		subq	%rdx, %r9
1154:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 2688              		.loc 1 1154 0
 2689 017e 48C1E20D 		salq	$13, %rdx
 2690              	.LVL379:
1153:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 <<= CONST_BITS;
 2691              		.loc 1 1153 0
 2692 0182 4D01C9   		addq	%r9, %r9
 2693 0185 45894C24 		movl	%r9d, 20(%r12)
 2693      14
1155:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.396802247)) +          /* c1 */
 2694              		.loc 1 1155 0
 2695 018a 4C69CF53 		imulq	$10323, %rdi, %r9
 2695      280000
 2696 0191 4D01D9   		addq	%r11, %r9
 2697 0194 4D69DA8C 		imulq	$5260, %r10, %r11
 2697      140000
 2698 019b 4901D1   		addq	%rdx, %r9
 2699 019e 4D01D9   		addq	%r11, %r9
 2700 01a1 4D69D814 		imulq	$1812, %r8, %r11
 2700      070000
 2701 01a8 4F8D8C19 		leaq	2048(%r9,%r11), %r9
 2701      00080000 
 2702 01b0 49C1F90C 		sarq	$12, %r9
1163:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    (tmp11 << (CONST_BITS - 1)) - tmp2;
 2703              		.loc 1 1163 0
 2704 01b4 4801CE   		addq	%rcx, %rsi
 2705              	.LVL380:
1161:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.587785252));      /* (c1-c9)/2 */
 2706              		.loc 1 1161 0
 2707 01b7 4C29C0   		subq	%r8, %rax
 2708              	.LVL381:
 2709 01ba 4C01D7   		addq	%r10, %rdi
 2710              	.LVL382:
1163:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    (tmp11 << (CONST_BITS - 1)) - tmp2;
 2711              		.loc 1 1163 0
 2712 01bd 48C1E10C 		salq	$12, %rcx
 2713              	.LVL383:
1168:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2714              		.loc 1 1168 0
 2715 01c1 83C501   		addl	$1, %ebp
 2716              	.LVL384:
1163:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    (tmp11 << (CONST_BITS - 1)) - tmp2;
 2717              		.loc 1 1163 0
 2718 01c4 4869F6E3 		imulq	$2531, %rsi, %rsi
 2718      090000
1155:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.396802247)) +          /* c1 */
 2719              		.loc 1 1155 0
 2720 01cb 45894C24 		movl	%r9d, 4(%r12)
 2720      04
1161:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.587785252));      /* (c1-c9)/2 */
 2721              		.loc 1 1161 0
 2722 01d0 4869C06F 		imulq	$7791, %rax, %rax
 2722      1E0000
 2723 01d7 4869FF31 		imulq	$-4815, %rdi, %rdi
 2723      EDFFFF
1163:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    (tmp11 << (CONST_BITS - 1)) - tmp2;
 2724              		.loc 1 1163 0
 2725 01de 4801F1   		addq	%rsi, %rcx
 2726 01e1 4829D1   		subq	%rdx, %rcx
1161:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.587785252));      /* (c1-c9)/2 */
 2727              		.loc 1 1161 0
 2728 01e4 4801F8   		addq	%rdi, %rax
 2729              	.LVL385:
1165:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-1);
 2730              		.loc 1 1165 0
 2731 01e7 488D9408 		leaq	2048(%rax,%rcx), %rdx
 2731      00080000 
 2732              	.LVL386:
1166:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2733              		.loc 1 1166 0
 2734 01ef 4829C8   		subq	%rcx, %rax
 2735              	.LVL387:
 2736 01f2 48050008 		addq	$2048, %rax
 2736      0000
1165:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-1);
 2737              		.loc 1 1165 0
 2738 01f8 48C1FA0C 		sarq	$12, %rdx
1166:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2739              		.loc 1 1166 0
 2740 01fc 48C1F80C 		sarq	$12, %rax
1170:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 10)
 2741              		.loc 1 1170 0
 2742 0200 83FD08   		cmpl	$8, %ebp
1165:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-1);
 2743              		.loc 1 1165 0
 2744 0203 41895424 		movl	%edx, 12(%r12)
 2744      0C
1166:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2745              		.loc 1 1166 0
 2746 0208 41894424 		movl	%eax, 28(%r12)
 2746      1C
1170:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 10)
 2747              		.loc 1 1170 0
 2748 020d 0F841C02 		je	.L55
 2748      0000
1171:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 2749              		.loc 1 1171 0
 2750 0213 83FD0A   		cmpl	$10, %ebp
 2751 0216 0F8524FE 		jne	.L59
 2751      FFFF
 2752 021c 4C8B6C24 		movq	40(%rsp), %r13
 2752      28
 2753 0221 4C8D6424 		leaq	48(%rsp), %r12
 2753      30
 2754              	.LVL388:
1174:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
1175:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
1176:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1177:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1178:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
1179:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
1180:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/10)**2 = 16/25, which we partially
1181:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers and final/initial shifting:
1182:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/20) * 32/25.
1183:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1184:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1185:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
1186:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
1187:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 2755              		.loc 1 1187 0
 2756 0226 488D6C24 		leaq	80(%rsp), %rbp
 2756      50
 2757              	.LVL389:
 2758 022b 0F1F4400 		.p2align 4,,10
 2758      00
 2759              		.p2align 3
 2760              	.L53:
1188:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1189:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1190:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*1];
 2761              		.loc 1 1190 0 discriminator 3
 2762 0230 418B4500 		movl	0(%r13), %eax
1191:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*0];
 2763              		.loc 1 1191 0 discriminator 3
 2764 0234 418B7D20 		movl	32(%r13), %edi
 2765 0238 418B1C24 		movl	(%r12), %ebx
1190:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*0];
 2766              		.loc 1 1190 0 discriminator 3
 2767 023c 458B7424 		movl	32(%r12), %r14d
 2767      20
1192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*7];
1193:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
1194:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 2768              		.loc 1 1194 0 discriminator 3
 2769 0241 458B9DA0 		movl	160(%r13), %r11d
 2769      000000
1193:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 2770              		.loc 1 1193 0 discriminator 3
 2771 0248 458B5560 		movl	96(%r13), %r10d
 2772              	.LVL390:
 2773              		.loc 1 1194 0 discriminator 3
 2774 024c 458BBD80 		movl	128(%r13), %r15d
 2774      000000
1193:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 2775              		.loc 1 1193 0 discriminator 3
 2776 0253 450395C0 		addl	192(%r13), %r10d
 2776      000000
1191:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*7];
 2777              		.loc 1 1191 0 discriminator 3
 2778 025a 8D0C1F   		leal	(%rdi,%rbx), %ecx
 2779              	.LVL391:
1190:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*0];
 2780              		.loc 1 1190 0 discriminator 3
 2781 025d 428D3430 		leal	(%rax,%r14), %esi
1195:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1196:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
1197:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
1198:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
1199:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
1200:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1201:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*1];
1202:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*0];
 2782              		.loc 1 1202 0 discriminator 3
 2783 0261 29DF     		subl	%ebx, %edi
1203:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*7];
1204:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*6];
1205:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*5];
 2784              		.loc 1 1205 0 discriminator 3
 2785 0263 418B9D80 		movl	128(%r13), %ebx
 2785      000000
1192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
 2786              		.loc 1 1192 0 discriminator 3
 2787 026a 418B5540 		movl	64(%r13), %edx
1201:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*0];
 2788              		.loc 1 1201 0 discriminator 3
 2789 026e 4429F0   		subl	%r14d, %eax
1194:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2790              		.loc 1 1194 0 discriminator 3
 2791 0271 4501DF   		addl	%r11d, %r15d
1192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
 2792              		.loc 1 1192 0 discriminator 3
 2793 0274 458B85E0 		movl	224(%r13), %r8d
 2793      000000
1190:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*0];
 2794              		.loc 1 1190 0 discriminator 3
 2795 027b 4863F6   		movslq	%esi, %rsi
 2796              	.LVL392:
1193:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 2797              		.loc 1 1193 0 discriminator 3
 2798 027e 4D63D2   		movslq	%r10d, %r10
1194:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2799              		.loc 1 1194 0 discriminator 3
 2800 0281 4D63FF   		movslq	%r15d, %r15
1191:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*7];
 2801              		.loc 1 1191 0 discriminator 3
 2802 0284 4863C9   		movslq	%ecx, %rcx
 2803              	.LVL393:
1196:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
 2804              		.loc 1 1196 0 discriminator 3
 2805 0287 4E8D0C3E 		leaq	(%rsi,%r15), %r9
1197:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
 2806              		.loc 1 1197 0 discriminator 3
 2807 028b 4C29FE   		subq	%r15, %rsi
 2808              	.LVL394:
1198:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
 2809              		.loc 1 1198 0 discriminator 3
 2810 028e 4E8D3C11 		leaq	(%rcx,%r10), %r15
 2811              		.loc 1 1205 0 discriminator 3
 2812 0292 4429DB   		subl	%r11d, %ebx
1192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
 2813              		.loc 1 1192 0 discriminator 3
 2814 0295 4101D0   		addl	%edx, %r8d
1199:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2815              		.loc 1 1199 0 discriminator 3
 2816 0298 4C29D1   		subq	%r10, %rcx
 2817              	.LVL395:
 2818              		.loc 1 1205 0 discriminator 3
 2819 029b 4C63DB   		movslq	%ebx, %r11
1206:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1207:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 2820              		.loc 1 1207 0 discriminator 3
 2821 029e 4B8D1C39 		leaq	(%r9,%r15), %rbx
1192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
 2822              		.loc 1 1192 0 discriminator 3
 2823 02a2 4D63C0   		movslq	%r8d, %r8
 2824              	.LVL396:
1204:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*5];
 2825              		.loc 1 1204 0 discriminator 3
 2826 02a5 458B5560 		movl	96(%r13), %r10d
 2827              	.LVL397:
 2828 02a9 452B95C0 		subl	192(%r13), %r10d
 2828      000000
 2829              	.LVL398:
1201:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*0];
 2830              		.loc 1 1201 0 discriminator 3
 2831 02b0 4898     		cltq
 2832              	.LVL399:
 2833              		.loc 1 1207 0 discriminator 3
 2834 02b2 4C01C3   		addq	%r8, %rbx
1208:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
1209:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1210:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp12;
 2835              		.loc 1 1210 0 discriminator 3
 2836 02b5 4D01C0   		addq	%r8, %r8
 2837              	.LVL400:
1203:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*6];
 2838              		.loc 1 1203 0 discriminator 3
 2839 02b8 412B95E0 		subl	224(%r13), %edx
 2839      000000
 2840              	.LVL401:
1211:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 2841              		.loc 1 1211 0 discriminator 3
 2842 02bf 4D29C1   		subq	%r8, %r9
 2843              	.LVL402:
 2844 02c2 4D29C7   		subq	%r8, %r15
 2845              	.LVL403:
1202:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*7];
 2846              		.loc 1 1202 0 discriminator 3
 2847 02c5 4863FF   		movslq	%edi, %rdi
 2848              	.LVL404:
 2849              		.loc 1 1211 0 discriminator 3
 2850 02c8 4D69C9DD 		imulq	$11997, %r9, %r9
 2850      2E0000
 2851 02cf 4D69FF1A 		imulq	$-4582, %r15, %r15
 2851      EEFFFF
1204:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*5];
 2852              		.loc 1 1204 0 discriminator 3
 2853 02d6 4D63D2   		movslq	%r10d, %r10
1203:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*6];
 2854              		.loc 1 1203 0 discriminator 3
 2855 02d9 4863D2   		movslq	%edx, %rdx
 2856              	.LVL405:
 2857              		.loc 1 1211 0 discriminator 3
 2858 02dc 4F8D8439 		leaq	16384(%r9,%r15), %r8
 2858      00400000 
 2859              	.LVL406:
1207:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 2860              		.loc 1 1207 0 discriminator 3
 2861 02e4 4869DBF6 		imulq	$10486, %rbx, %rbx
 2861      280000
 2862              		.loc 1 1211 0 discriminator 3
 2863 02eb 49C1F80F 		sarq	$15, %r8
 2864 02ef 45898580 		movl	%r8d, 128(%r13)
 2864      000000
 2865              	.LVL407:
1212:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.464477191)) - /* c4 */
1213:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX(0.559380511)),  /* c8 */
1214:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1215:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp13 + tmp14, FIX(1.064004961));    /* c6 */
 2866              		.loc 1 1215 0 discriminator 3
 2867 02f6 4C8D040E 		leaq	(%rsi,%rcx), %r8
1216:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
1217:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.657591230)),  /* c2-c6 */
1218:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1219:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
 2868              		.loc 1 1219 0 discriminator 3
 2869 02fa 4869C9DC 		imulq	$-22820, %rcx, %rcx
 2869      A6FFFF
 2870              	.LVL408:
1207:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 2871              		.loc 1 1207 0 discriminator 3
 2872 0301 4881C300 		addq	$16384, %rbx
 2872      400000
1215:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 2873              		.loc 1 1215 0 discriminator 3
 2874 0308 4D69C00C 		imulq	$8716, %r8, %r8
 2874      220000
 2875              	.LVL409:
1207:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 2876              		.loc 1 1207 0 discriminator 3
 2877 030f 48C1FB0F 		sarq	$15, %rbx
1216:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 2878              		.loc 1 1216 0 discriminator 3
 2879 0313 4869F60B 		imulq	$5387, %rsi, %rsi
 2879      150000
 2880              	.LVL410:
1207:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 2881              		.loc 1 1207 0 discriminator 3
 2882 031a 41895D00 		movl	%ebx, 0(%r13)
 2883              		.loc 1 1219 0 discriminator 3
 2884 031e 498D8C08 		leaq	16384(%r8,%rcx), %rcx
 2884      00400000 
1216:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 2885              		.loc 1 1216 0 discriminator 3
 2886 0326 498DB430 		leaq	16384(%r8,%rsi), %rsi
 2886      00400000 
1220:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.785601151)),  /* c2+c6 */
1221:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1222:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1223:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1224:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1225:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
 2887              		.loc 1 1225 0 discriminator 3
 2888 032e 4E8D0418 		leaq	(%rax,%r11), %r8
 2889              	.LVL411:
1219:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.785601151)),  /* c2+c6 */
 2890              		.loc 1 1219 0 discriminator 3
 2891 0332 48C1F90F 		sarq	$15, %rcx
1216:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.657591230)),  /* c2-c6 */
 2892              		.loc 1 1216 0 discriminator 3
 2893 0336 48C1FE0F 		sarq	$15, %rsi
1219:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.785601151)),  /* c2+c6 */
 2894              		.loc 1 1219 0 discriminator 3
 2895 033a 41898DC0 		movl	%ecx, 192(%r13)
 2895      000000
 2896              	.LVL412:
1226:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 - tmp3;
 2897              		.loc 1 1226 0 discriminator 3
 2898 0341 4889F9   		movq	%rdi, %rcx
 2899 0344 4C29D1   		subq	%r10, %rcx
 2900              	.LVL413:
1216:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.657591230)),  /* c2-c6 */
 2901              		.loc 1 1216 0 discriminator 3
 2902 0347 41897540 		movl	%esi, 64(%r13)
 2903              	.LVL414:
1227:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
 2904              		.loc 1 1227 0 discriminator 3
 2905 034b 4C89C6   		movq	%r8, %rsi
 2906 034e 4829CE   		subq	%rcx, %rsi
 2907 0351 4829D6   		subq	%rdx, %rsi
 2908 0354 4869F6F6 		imulq	$10486, %rsi, %rsi
 2908      280000
1228:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp2, FIX(1.28)),  /* 32/25 */
1229:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX(1.28));                     /* 32/25 */
 2909              		.loc 1 1230 0 discriminator 3
 2910 035b 4869D2F6 		imulq	$10486, %rdx, %rdx
 2910      280000
 2911              	.LVL415:
1227:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
 2912              		.loc 1 1227 0 discriminator 3
 2913 0362 4881C600 		addq	$16384, %rsi
 2913      400000
 2914 0369 48C1FE0F 		sarq	$15, %rsi
 2915 036d 4189B5A0 		movl	%esi, 160(%r13)
 2915      000000
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 2916              		.loc 1 1231 0 discriminator 3
 2917 0374 4C69C837 		imulq	$14647, %rax, %r9
 2917      390000
1232:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
1233:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp1, FIX(1.612894094)) + tmp2 +   /* c3 */
1234:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp3, FIX(0.821810588)) +          /* c7 */
1235:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp4, FIX(0.283176630)),           /* c9 */
1236:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1237:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 - tmp4, FIX(1.217352341)) -     /* (c3+c7)/2 */
1238:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
1239:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp10 + tmp11, FIX(0.395541753)) +   /* (c3-c7)/2 */
 2918              		.loc 1 1239 0 discriminator 3
 2919 037b 4901C8   		addq	%rcx, %r8
 2920              	.LVL416:
1237:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 2921              		.loc 1 1237 0 discriminator 3
 2922 037e 4C29D8   		subq	%r11, %rax
 2923              	.LVL417:
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 2924              		.loc 1 1231 0 discriminator 3
 2925 0381 4869F79D 		imulq	$13213, %rdi, %rsi
 2925      330000
1237:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 2926              		.loc 1 1237 0 discriminator 3
 2927 0388 4C01D7   		addq	%r10, %rdi
 2928              	.LVL418:
1240:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
1241:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp12 + tmp13, CONST_BITS+2);
1242:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+2);
1243:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1244:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
1245:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 2929              		.loc 1 1245 0 discriminator 3
 2930 038b 4983C404 		addq	$4, %r12
 2931              	.LVL419:
1239:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 2932              		.loc 1 1239 0 discriminator 3
 2933 038f 4D69C0A8 		imulq	$3240, %r8, %r8
 2933      0C0000
1244:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 2934              		.loc 1 1244 0 discriminator 3
 2935 0396 4983C504 		addq	$4, %r13
 2936              	.LVL420:
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 2937              		.loc 1 1231 0 discriminator 3
 2938 039a 4C01CE   		addq	%r9, %rsi
 2939 039d 4D69CA4C 		imulq	$6732, %r10, %r9
 2939      1A0000
 2940 03a4 4801D6   		addq	%rdx, %rsi
1239:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 2941              		.loc 1 1239 0 discriminator 3
 2942 03a7 4869C97B 		imulq	$5243, %rcx, %rcx
 2942      140000
 2943              	.LVL421:
1237:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 2944              		.loc 1 1237 0 discriminator 3
 2945 03ae 4869C0F5 		imulq	$9973, %rax, %rax
 2945      260000
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 2946              		.loc 1 1231 0 discriminator 3
 2947 03b5 4C01CE   		addq	%r9, %rsi
1239:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 2948              		.loc 1 1239 0 discriminator 3
 2949 03b8 4C01C1   		addq	%r8, %rcx
1237:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 2950              		.loc 1 1237 0 discriminator 3
 2951 03bb 4869FFED 		imulq	$-6163, %rdi, %rdi
 2951      E7FFFF
1239:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 2952              		.loc 1 1239 0 discriminator 3
 2953 03c2 4829D1   		subq	%rdx, %rcx
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 2954              		.loc 1 1231 0 discriminator 3
 2955 03c5 4D69CB10 		imulq	$2320, %r11, %r9
 2955      090000
1237:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 2956              		.loc 1 1237 0 discriminator 3
 2957 03cc 4801C7   		addq	%rax, %rdi
 2958              	.LVL422:
1241:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+2);
 2959              		.loc 1 1241 0 discriminator 3
 2960 03cf 488D840F 		leaq	16384(%rdi,%rcx), %rax
 2960      00400000 
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 2961              		.loc 1 1231 0 discriminator 3
 2962 03d7 4A8DB40E 		leaq	16384(%rsi,%r9), %rsi
 2962      00400000 
1242:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2963              		.loc 1 1242 0 discriminator 3
 2964 03df 4829CF   		subq	%rcx, %rdi
 2965              	.LVL423:
 2966 03e2 4881C700 		addq	$16384, %rdi
 2966      400000
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 2967              		.loc 1 1231 0 discriminator 3
 2968 03e9 48C1FE0F 		sarq	$15, %rsi
1241:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+2);
 2969              		.loc 1 1241 0 discriminator 3
 2970 03ed 48C1F80F 		sarq	$15, %rax
1242:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2971              		.loc 1 1242 0 discriminator 3
 2972 03f1 48C1FF0F 		sarq	$15, %rdi
1231:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 2973              		.loc 1 1231 0 discriminator 3
 2974 03f5 4189751C 		movl	%esi, 28(%r13)
 2975              	.LVL424:
1241:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+2);
 2976              		.loc 1 1241 0 discriminator 3
 2977 03f9 4189455C 		movl	%eax, 92(%r13)
1242:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 2978              		.loc 1 1242 0 discriminator 3
 2979 03fd 4189BDDC 		movl	%edi, 220(%r13)
 2979      000000
 2980              	.LVL425:
1187:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 2981              		.loc 1 1187 0 discriminator 3
 2982 0404 4939EC   		cmpq	%rbp, %r12
 2983 0407 0F8523FE 		jne	.L53
 2983      FFFF
1246:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1247:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 2984              		.loc 1 1247 0
 2985 040d 488B4424 		movq	120(%rsp), %rax
 2985      78
 2986 0412 64483304 		xorq	%fs:40, %rax
 2986      25280000 
 2986      00
 2987 041b 751C     		jne	.L60
 2988 041d 4881C488 		addq	$136, %rsp
 2988      000000
 2989              		.cfi_remember_state
 2990              		.cfi_def_cfa_offset 56
 2991 0424 5B       		popq	%rbx
 2992              		.cfi_def_cfa_offset 48
 2993 0425 5D       		popq	%rbp
 2994              		.cfi_def_cfa_offset 40
 2995 0426 415C     		popq	%r12
 2996              		.cfi_def_cfa_offset 32
 2997              	.LVL426:
 2998 0428 415D     		popq	%r13
 2999              		.cfi_def_cfa_offset 24
 3000              	.LVL427:
 3001 042a 415E     		popq	%r14
 3002              		.cfi_def_cfa_offset 16
 3003 042c 415F     		popq	%r15
 3004              		.cfi_def_cfa_offset 8
 3005 042e C3       		ret
 3006              	.LVL428:
 3007              	.L55:
 3008              		.cfi_restore_state
1175:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 3009              		.loc 1 1175 0
 3010 042f 4C8D6424 		leaq	48(%rsp), %r12
 3010      30
 3011              	.LVL429:
 3012 0434 E90BFCFF 		jmp	.L51
 3012      FF
 3013              	.LVL430:
 3014              	.L60:
 3015              		.loc 1 1247 0
 3016 0439 E8000000 		call	__stack_chk_fail
 3016      00
 3017              	.LVL431:
 3018              		.cfi_endproc
 3019              	.LFE70:
 3021              		.section	.text.unlikely.jpeg_fdct_10x10
 3022              	.LCOLDE9:
 3023              		.section	.text.jpeg_fdct_10x10
 3024              	.LHOTE9:
 3025              		.section	.text.unlikely.jpeg_fdct_11x11,"ax",@progbits
 3026              	.LCOLDB10:
 3027              		.section	.text.jpeg_fdct_11x11,"ax",@progbits
 3028              	.LHOTB10:
 3029              		.p2align 4,,15
 3030              		.globl	jpeg_fdct_11x11
 3032              	jpeg_fdct_11x11:
 3033              	.LFB71:
1248:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1249:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1250:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
1251:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on an 11x11 sample block.
1252:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
1253:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1254:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
1255:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_11x11 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
1256:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 3034              		.loc 1 1256 0
 3035              		.cfi_startproc
 3036              	.LVL432:
 3037 0000 4157     		pushq	%r15
 3038              		.cfi_def_cfa_offset 16
 3039              		.cfi_offset 15, -16
 3040 0002 4156     		pushq	%r14
 3041              		.cfi_def_cfa_offset 24
 3042              		.cfi_offset 14, -24
1257:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
1258:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
1259:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1, z2, z3;
1260:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*3];
1261:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
1262:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
1263:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
1264:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
1265:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
1266:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1267:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
1268:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
1269:fltk-1.3.4-1/jpeg/jfdctint.c ****    * we scale the results further by 2 as part of output adaption
1270:fltk-1.3.4-1/jpeg/jfdctint.c ****    * scaling for different DCT size.
1271:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/22).
1272:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1273:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1274:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 3043              		.loc 1 1274 0
 3044 0004 4989FE   		movq	%rdi, %r14
1256:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 3045              		.loc 1 1256 0
 3046 0007 4155     		pushq	%r13
 3047              		.cfi_def_cfa_offset 32
 3048              		.cfi_offset 13, -32
 3049 0009 4154     		pushq	%r12
 3050              		.cfi_def_cfa_offset 40
 3051              		.cfi_offset 12, -40
 3052 000b 55       		pushq	%rbp
 3053              		.cfi_def_cfa_offset 48
 3054              		.cfi_offset 6, -48
 3055 000c 53       		pushq	%rbx
 3056              		.cfi_def_cfa_offset 56
 3057              		.cfi_offset 3, -56
 3058 000d 4881ECA8 		subq	$168, %rsp
 3058      000000
 3059              		.cfi_def_cfa_offset 224
1256:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 3060              		.loc 1 1256 0
 3061 0014 64488B04 		movq	%fs:40, %rax
 3061      25280000 
 3061      00
 3062 001d 48898424 		movq	%rax, 152(%rsp)
 3062      98000000 
 3063 0025 31C0     		xorl	%eax, %eax
 3064              	.LVL433:
 3065 0027 89D0     		movl	%edx, %eax
 3066 0029 48897424 		movq	%rsi, 32(%rsp)
 3066      20
1275:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 3067              		.loc 1 1275 0
 3068 002e C7042400 		movl	$0, (%rsp)
 3068      000000
 3069 0035 48894424 		movq	%rax, 24(%rsp)
 3069      18
 3070 003a 48897C24 		movq	%rdi, 40(%rsp)
 3070      28
 3071 003f EB0B     		jmp	.L62
 3072              	.LVL434:
 3073              		.p2align 4,,10
 3074 0041 0F1F8000 		.p2align 3
 3074      000000
 3075              	.L70:
1276:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
1277:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
1278:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1279:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1280:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1281:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[10]);
1282:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[9]);
1283:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[8]);
1284:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[7]);
1285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[6]);
1286:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]);
1287:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1288:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[10]);
1289:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[9]);
1290:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[8]);
1291:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[7]);
1292:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[6]);
1293:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1294:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
1296:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
1297:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 += tmp5;
1298:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 -= tmp5;
1299:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp5;
1300:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 -= tmp5;
1301:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp5;
1302:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp5;
1303:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, FIX(1.356927976)) +       /* c2 */
1304:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp2 + tmp4, FIX(0.201263574));        /* c10 */
1305:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp3, FIX(0.926112931));        /* c6 */
1306:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.189712156));        /* c4 */
1307:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
1308:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z2 - MULTIPLY(tmp3, FIX(1.018300590)) /* c2+c8-c6 */
1309:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp4, FIX(1.390975730)),        /* c4+c10 */
1310:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
1312:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
1313:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp2, FIX(1.356927976))         /* c2 */
1314:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp4, FIX(0.587485545)),        /* c8 */
1315:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
1316:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
1317:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.620527200)) /* c2+c4-c6 */
1318:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp2, FIX(0.788749120)),        /* c8+c10 */
1319:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-1);
1320:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1321:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1322:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1323:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(1.286413905));    /* c3 */
1324:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.068791298));    /* c5 */
1325:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.764581576));    /* c7 */
1326:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 + tmp2 + tmp3 - MULTIPLY(tmp10, FIX(1.719967871)) /* c7+c5+c3-c1 */
1327:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   + MULTIPLY(tmp14, FIX(0.398430003));          /* c9 */
1328:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp11 + tmp12, - FIX(0.764581576));  /* -c7 */
1329:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(1.399818907));  /* -c1 */
1330:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 + MULTIPLY(tmp11, FIX(1.276416582)) /* c9+c7+c1-c3 */
1331:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp14, FIX(1.068791298));         /* c5 */
1332:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp12 + tmp13, FIX(0.398430003));   /* c9 */
1333:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp10 - MULTIPLY(tmp12, FIX(1.989053629)) /* c9+c5+c3-c7 */
1334:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp14, FIX(1.399818907));         /* c1 */
1335:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp5 + tmp10 + MULTIPLY(tmp13, FIX(1.305598626)) /* c1+c5-c9-c7 */
1336:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp14, FIX(1.286413905));         /* c3 */
1337:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1338:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp0, CONST_BITS-1);
1339:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-1);
1340:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-1);
1341:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-1);
1342:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1343:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
1344:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1345:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
1346:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 11)
1347:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
1348:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 3076              		.loc 1 1348 0
 3077 0048 4983C620 		addq	$32, %r14
 3078              	.LVL435:
 3079              	.L62:
1277:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3080              		.loc 1 1277 0
 3081 004c 48630424 		movslq	(%rsp), %rax
 3082 0050 488B5424 		movq	32(%rsp), %rdx
 3082      20
 3083 0055 4C8B4C24 		movq	24(%rsp), %r9
 3083      18
 3084 005a 4C030CC2 		addq	(%rdx,%rax,8), %r9
 3085              	.LVL436:
1283:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[7]);
 3086              		.loc 1 1283 0
 3087 005e 450FB661 		movzbl	8(%r9), %r12d
 3087      08
 3088 0063 410FB649 		movzbl	2(%r9), %ecx
 3088      02
1284:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[6]);
 3089              		.loc 1 1284 0
 3090 0068 410FB669 		movzbl	7(%r9), %ebp
 3090      07
1281:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[9]);
 3091              		.loc 1 1281 0
 3092 006d 450FB679 		movzbl	10(%r9), %r15d
 3092      0A
1282:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[8]);
 3093              		.loc 1 1282 0
 3094 0072 450FB669 		movzbl	9(%r9), %r13d
 3094      09
1281:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[9]);
 3095              		.loc 1 1281 0
 3096 0077 410FB639 		movzbl	(%r9), %edi
1282:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[8]);
 3097              		.loc 1 1282 0
 3098 007b 410FB671 		movzbl	1(%r9), %esi
 3098      01
1283:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[7]);
 3099              		.loc 1 1283 0
 3100 0080 428D0421 		leal	(%rcx,%r12), %eax
1290:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[7]);
 3101              		.loc 1 1290 0
 3102 0084 4429E1   		subl	%r12d, %ecx
 3103 0087 4863C9   		movslq	%ecx, %rcx
1283:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[7]);
 3104              		.loc 1 1283 0
 3105 008a 4863D0   		movslq	%eax, %rdx
1281:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[9]);
 3106              		.loc 1 1281 0
 3107 008d 468D043F 		leal	(%rdi,%r15), %r8d
1288:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[9]);
 3108              		.loc 1 1288 0
 3109 0091 4429FF   		subl	%r15d, %edi
1283:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[7]);
 3110              		.loc 1 1283 0
 3111 0094 48895424 		movq	%rdx, 8(%rsp)
 3111      08
1284:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[6]);
 3112              		.loc 1 1284 0
 3113 0099 410FB651 		movzbl	3(%r9), %edx
 3113      03
1282:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[8]);
 3114              		.loc 1 1282 0
 3115 009e 468D1C2E 		leal	(%rsi,%r13), %r11d
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
 3116              		.loc 1 1295 0
 3117 00a2 4C8B7C24 		movq	8(%rsp), %r15
 3117      08
1281:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[9]);
 3118              		.loc 1 1281 0
 3119 00a7 4D63C0   		movslq	%r8d, %r8
 3120              	.LVL437:
1289:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[8]);
 3121              		.loc 1 1289 0
 3122 00aa 4429EE   		subl	%r13d, %esi
1282:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[8]);
 3123              		.loc 1 1282 0
 3124 00ad 4D63DB   		movslq	%r11d, %r11
 3125              	.LVL438:
1288:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[9]);
 3126              		.loc 1 1288 0
 3127 00b0 4863FF   		movslq	%edi, %rdi
1289:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[8]);
 3128              		.loc 1 1289 0
 3129 00b3 4863F6   		movslq	%esi, %rsi
1284:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[6]);
 3130              		.loc 1 1284 0
 3131 00b6 8D042A   		leal	(%rdx,%rbp), %eax
1291:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[6]);
 3132              		.loc 1 1291 0
 3133 00b9 29EA     		subl	%ebp, %edx
1300:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp5;
 3134              		.loc 1 1300 0
 3135 00bb 4C89FD   		movq	%r15, %rbp
1291:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[6]);
 3136              		.loc 1 1291 0
 3137 00be 4863D2   		movslq	%edx, %rdx
1284:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[6]);
 3138              		.loc 1 1284 0
 3139 00c1 4863D8   		movslq	%eax, %rbx
1285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]);
 3140              		.loc 1 1285 0
 3141 00c4 410FB641 		movzbl	4(%r9), %eax
 3141      04
1284:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[6]);
 3142              		.loc 1 1284 0
 3143 00c9 48895C24 		movq	%rbx, 16(%rsp)
 3143      10
 3144              	.LVL439:
1285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]);
 3145              		.loc 1 1285 0
 3146 00ce 410FB659 		movzbl	6(%r9), %ebx
 3146      06
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
 3147              		.loc 1 1295 0
 3148 00d3 4C8B6C24 		movq	16(%rsp), %r13
 3148      10
1286:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3149              		.loc 1 1286 0
 3150 00d8 450FB649 		movzbl	5(%r9), %r9d
 3150      05
 3151              	.LVL440:
1285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]);
 3152              		.loc 1 1285 0
 3153 00dd 448D1418 		leal	(%rax,%rbx), %r10d
1292:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3154              		.loc 1 1292 0
 3155 00e1 29D8     		subl	%ebx, %eax
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
 3156              		.loc 1 1295 0
 3157 00e3 4B8D1C18 		leaq	(%r8,%r11), %rbx
1292:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3158              		.loc 1 1292 0
 3159 00e7 4898     		cltq
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
 3160              		.loc 1 1295 0
 3161 00e9 4C01FB   		addq	%r15, %rbx
1285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]);
 3162              		.loc 1 1285 0
 3163 00ec 4D63D2   		movslq	%r10d, %r10
 3164              	.LVL441:
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
 3165              		.loc 1 1295 0
 3166 00ef 4C01EB   		addq	%r13, %rbx
 3167 00f2 4C01D3   		addq	%r10, %rbx
 3168 00f5 498D9C19 		leaq	-1408(%r9,%rbx), %rbx
 3168      80FAFFFF 
1297:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 -= tmp5;
 3169              		.loc 1 1297 0
 3170 00fd 4D01C9   		addq	%r9, %r9
 3171              	.LVL442:
1298:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp5;
 3172              		.loc 1 1298 0
 3173 0100 4D29C8   		subq	%r9, %r8
 3174              	.LVL443:
1300:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp5;
 3175              		.loc 1 1300 0
 3176 0103 4C29CD   		subq	%r9, %rbp
1302:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, FIX(1.356927976)) +       /* c2 */
 3177              		.loc 1 1302 0
 3178 0106 4D29CA   		subq	%r9, %r10
 3179              	.LVL444:
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
 3180              		.loc 1 1295 0
 3181 0109 4801DB   		addq	%rbx, %rbx
1299:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 -= tmp5;
 3182              		.loc 1 1299 0
 3183 010c 4D29CB   		subq	%r9, %r11
 3184              	.LVL445:
1295:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 - 11 * CENTERJSAMPLE) << 1);
 3185              		.loc 1 1295 0
 3186 010f 41891E   		movl	%ebx, (%r14)
 3187              	.LVL446:
1301:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp5;
 3188              		.loc 1 1301 0
 3189 0112 4C89EB   		movq	%r13, %rbx
 3190 0115 4C29CB   		subq	%r9, %rbx
 3191              	.LVL447:
1303:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp2 + tmp4, FIX(0.201263574));        /* c10 */
 3192              		.loc 1 1303 0
 3193 0118 4D8D2418 		leaq	(%r8,%rbx), %r12
 3194 011c 4D69EC6C 		imulq	$11116, %r12, %r13
 3194      2B0000
 3195 0123 4E8D6415 		leaq	0(%rbp,%r10), %r12
 3195      00
 3196 0128 4D69CC71 		imulq	$1649, %r12, %r9
 3196      060000
 3197              	.LVL448:
 3198 012f 4F8D640D 		leaq	0(%r13,%r9), %r12
 3198      00
 3199              	.LVL449:
1305:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.189712156));        /* c4 */
 3200              		.loc 1 1305 0
 3201 0134 4D89DD   		movq	%r11, %r13
1306:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 3202              		.loc 1 1306 0
 3203 0137 4D89C1   		movq	%r8, %r9
1305:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.189712156));        /* c4 */
 3204              		.loc 1 1305 0
 3205 013a 4929DD   		subq	%rbx, %r13
1306:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 3206              		.loc 1 1306 0
 3207 013d 4D29D9   		subq	%r11, %r9
1305:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.189712156));        /* c4 */
 3208              		.loc 1 1305 0
 3209 0140 4D69EDA3 		imulq	$7587, %r13, %r13
 3209      1D0000
 3210              	.LVL450:
1307:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z2 - MULTIPLY(tmp3, FIX(1.018300590)) /* c2+c8-c6 */
 3211              		.loc 1 1307 0
 3212 0147 4869DB6A 		imulq	$-8342, %rbx, %rbx
 3212      DFFFFF
 3213              	.LVL451:
1306:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 3214              		.loc 1 1306 0
 3215 014e 4D69C912 		imulq	$9746, %r9, %r9
 3215      260000
 3216              	.LVL452:
1307:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z2 - MULTIPLY(tmp3, FIX(1.018300590)) /* c2+c8-c6 */
 3217              		.loc 1 1307 0
 3218 0155 4F8D3C2C 		leaq	(%r12,%r13), %r15
 3219 0159 4C01FB   		addq	%r15, %rbx
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
 3220              		.loc 1 1311 0
 3221 015c 4D01CD   		addq	%r9, %r13
 3222              	.LVL453:
1307:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z2 - MULTIPLY(tmp3, FIX(1.018300590)) /* c2+c8-c6 */
 3223              		.loc 1 1307 0
 3224 015f 4D69FA7D 		imulq	$-11395, %r10, %r15
 3224      D3FFFF
 3225 0166 4A8D9C3B 		leaq	2048(%rbx,%r15), %rbx
 3225      00080000 
 3226 016e 48C1FB0C 		sarq	$12, %rbx
 3227 0172 41895E08 		movl	%ebx, 8(%r14)
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
 3228              		.loc 1 1311 0
 3229 0176 4C89DB   		movq	%r11, %rbx
 3230 0179 48C1E309 		salq	$9, %rbx
 3231 017d 4C29DB   		subq	%r11, %rbx
1324:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.764581576));    /* c7 */
 3232              		.loc 1 1324 0
 3233 0180 4C8D1C0F 		leaq	(%rdi,%rcx), %r11
 3234              	.LVL454:
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
 3235              		.loc 1 1311 0
 3236 0184 4901DD   		addq	%rbx, %r13
 3237 0187 4869DD94 		imulq	$-11116, %rbp, %rbx
 3237      D4FFFF
 3238 018e 4901DD   		addq	%rbx, %r13
1328:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(1.399818907));  /* -c1 */
 3239              		.loc 1 1328 0
 3240 0191 488D1C0E 		leaq	(%rsi,%rcx), %rbx
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
 3241              		.loc 1 1311 0
 3242 0195 4D69D2CD 		imulq	$4813, %r10, %r10
 3242      120000
 3243              	.LVL455:
1316:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.620527200)) /* c2+c4-c6 */
 3244              		.loc 1 1316 0
 3245 019c 4D01E1   		addq	%r12, %r9
 3246              	.LVL456:
 3247 019f 4D69C025 		imulq	$-13275, %r8, %r8
 3247      CCFFFF
 3248              	.LVL457:
 3249 01a6 4869EDC3 		imulq	$-6461, %rbp, %rbp
 3249      E6FFFF
 3250              	.LVL458:
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
 3251              		.loc 1 1311 0
 3252 01ad 4F8D9415 		leaq	2048(%r13,%r10), %r10
 3252      00080000 
1316:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.620527200)) /* c2+c4-c6 */
 3253              		.loc 1 1316 0
 3254 01b5 4D01C8   		addq	%r9, %r8
1332:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp10 - MULTIPLY(tmp12, FIX(1.989053629)) /* c9+c5+c3-c7 */
 3255              		.loc 1 1332 0
 3256 01b8 4C8D0C11 		leaq	(%rcx,%rdx), %r9
1316:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.620527200)) /* c2+c4-c6 */
 3257              		.loc 1 1316 0
 3258 01bc 4D8D8428 		leaq	2048(%r8,%rbp), %r8
 3258      00080000 
1323:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.068791298));    /* c5 */
 3259              		.loc 1 1323 0
 3260 01c4 488D2C37 		leaq	(%rdi,%rsi), %rbp
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
 3261              		.loc 1 1311 0
 3262 01c8 49C1FA0C 		sarq	$12, %r10
1324:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.764581576));    /* c7 */
 3263              		.loc 1 1324 0
 3264 01cc 4D69DB34 		imulq	$8756, %r11, %r11
 3264      220000
1311:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.062335650)) /* c4-c6-c10 */
 3265              		.loc 1 1311 0
 3266 01d3 45895610 		movl	%r10d, 16(%r14)
1329:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 + MULTIPLY(tmp11, FIX(1.276416582)) /* c9+c7+c1-c3 */
 3267              		.loc 1 1329 0
 3268 01d7 4C8D1416 		leaq	(%rsi,%rdx), %r10
1316:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.620527200)) /* c2+c4-c6 */
 3269              		.loc 1 1316 0
 3270 01db 49C1F80C 		sarq	$12, %r8
1323:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.068791298));    /* c5 */
 3271              		.loc 1 1323 0
 3272 01df 4869ED2A 		imulq	$10538, %rbp, %rbp
 3272      290000
 3273              	.LVL459:
1316:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.620527200)) /* c2+c4-c6 */
 3274              		.loc 1 1316 0
 3275 01e6 45894618 		movl	%r8d, 24(%r14)
1325:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 + tmp2 + tmp3 - MULTIPLY(tmp10, FIX(1.719967871)) /* c7+c5+c3-c1 */
 3276              		.loc 1 1325 0
 3277 01ea 4C8D0417 		leaq	(%rdi,%rdx), %r8
 3278 01ee 4D69C077 		imulq	$6263, %r8, %r8
 3278      180000
 3279              	.LVL460:
1338:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-1);
 3280              		.loc 1 1338 0
 3281 01f5 4869FFF6 		imulq	$-14090, %rdi, %rdi
 3281      C8FFFF
 3282              	.LVL461:
 3283 01fc 4E8D641D 		leaq	0(%rbp,%r11), %r12
 3283      00
 3284              	.LVL462:
 3285 0201 4D01C4   		addq	%r8, %r12
 3286 0204 4C01E7   		addq	%r12, %rdi
 3287              	.LVL463:
 3288 0207 4C69E0C0 		imulq	$3264, %rax, %r12
 3288      0C0000
1328:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(1.399818907));  /* -c1 */
 3289              		.loc 1 1328 0
 3290 020e 4869DB89 		imulq	$-6263, %rbx, %rbx
 3290      E7FFFF
 3291              	.LVL464:
1329:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 + MULTIPLY(tmp11, FIX(1.276416582)) /* c9+c7+c1-c3 */
 3292              		.loc 1 1329 0
 3293 0215 4D69D235 		imulq	$-11467, %r10, %r10
 3293      D3FFFF
 3294              	.LVL465:
1338:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-1);
 3295              		.loc 1 1338 0
 3296 021c 4A8DBC27 		leaq	2048(%rdi,%r12), %rdi
 3296      00080000 
1339:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-1);
 3297              		.loc 1 1339 0
 3298 0224 4869F6D8 		imulq	$10456, %rsi, %rsi
 3298      280000
 3299              	.LVL466:
1338:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-1);
 3300              		.loc 1 1338 0
 3301 022b 48C1FF0C 		sarq	$12, %rdi
 3302 022f 41897E04 		movl	%edi, 4(%r14)
1339:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-1);
 3303              		.loc 1 1339 0
 3304 0233 4A8D3C13 		leaq	(%rbx,%r10), %rdi
1332:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp10 - MULTIPLY(tmp12, FIX(1.989053629)) /* c9+c5+c3-c7 */
 3305              		.loc 1 1332 0
 3306 0237 4D69C9C0 		imulq	$3264, %r9, %r9
 3306      0C0000
 3307              	.LVL467:
1339:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-1);
 3308              		.loc 1 1339 0
 3309 023e 4801FE   		addq	%rdi, %rsi
 3310              	.LVL468:
 3311 0241 4869F8CC 		imulq	$-8756, %rax, %rdi
 3311      DDFFFF
1340:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-1);
 3312              		.loc 1 1340 0
 3313 0248 4C01CB   		addq	%r9, %rbx
 3314              	.LVL469:
1341:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3315              		.loc 1 1341 0
 3316 024b 4D01D1   		addq	%r10, %r9
 3317              	.LVL470:
1340:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-1);
 3318              		.loc 1 1340 0
 3319 024e 4869C95A 		imulq	$-16294, %rcx, %rcx
 3319      C0FFFF
 3320              	.LVL471:
1341:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3321              		.loc 1 1341 0
 3322 0255 4869D2C7 		imulq	$10695, %rdx, %rdx
 3322      290000
 3323              	.LVL472:
1339:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-1);
 3324              		.loc 1 1339 0
 3325 025c 4801FE   		addq	%rdi, %rsi
 3326 025f 488DB435 		leaq	2048(%rbp,%rsi), %rsi
 3326      00080000 
1340:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-1);
 3327              		.loc 1 1340 0
 3328 0267 4801D9   		addq	%rbx, %rcx
1341:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3329              		.loc 1 1341 0
 3330 026a 4C01CA   		addq	%r9, %rdx
1339:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-1);
 3331              		.loc 1 1339 0
 3332 026d 48C1FE0C 		sarq	$12, %rsi
 3333 0271 4189760C 		movl	%esi, 12(%r14)
1340:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-1);
 3334              		.loc 1 1340 0
 3335 0275 4869F0CB 		imulq	$11467, %rax, %rsi
 3335      2C0000
 3336 027c 4801F1   		addq	%rsi, %rcx
 3337 027f 498D8C0B 		leaq	2048(%r11,%rcx), %rcx
 3337      00080000 
 3338 0287 48C1F90C 		sarq	$12, %rcx
1341:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3339              		.loc 1 1341 0
 3340 028b 4869C0D6 		imulq	$-10538, %rax, %rax
 3340      D6FFFF
 3341              	.LVL473:
1343:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3342              		.loc 1 1343 0
 3343 0292 83042401 		addl	$1, (%rsp)
 3344              	.LVL474:
1340:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-1);
 3345              		.loc 1 1340 0
 3346 0296 41894E14 		movl	%ecx, 20(%r14)
1341:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3347              		.loc 1 1341 0
 3348 029a 4801D0   		addq	%rdx, %rax
 3349 029d 498D8400 		leaq	2048(%r8,%rax), %rax
 3349      00080000 
 3350 02a5 48C1F80C 		sarq	$12, %rax
 3351 02a9 4189461C 		movl	%eax, 28(%r14)
1343:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3352              		.loc 1 1343 0
 3353 02ad 8B0424   		movl	(%rsp), %eax
 3354              	.LVL475:
1345:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 11)
 3355              		.loc 1 1345 0
 3356 02b0 83F808   		cmpl	$8, %eax
 3357 02b3 0F84B202 		je	.L66
 3357      0000
1346:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 3358              		.loc 1 1346 0
 3359 02b9 83F80B   		cmpl	$11, %eax
 3360 02bc 0F8586FD 		jne	.L70
 3360      FFFF
 3361 02c2 488D4424 		leaq	48(%rsp), %rax
 3361      30
 3362              	.LVL476:
1349:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
1350:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
1351:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1352:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1353:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
1354:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
1355:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/11)**2 = 64/121, which we partially
1356:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers and final/initial shifting:
1357:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/22) * 128/121.
1358:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1359:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1360:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
1361:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
1362:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 3363              		.loc 1 1362 0
 3364 02c7 488D5424 		leaq	80(%rsp), %rdx
 3364      50
 3365 02cc 4C8B7C24 		movq	40(%rsp), %r15
 3365      28
 3366 02d1 48895424 		movq	%rdx, 8(%rsp)
 3366      08
 3367 02d6 4989C5   		movq	%rax, %r13
 3368              	.LVL477:
 3369 02d9 0F1F8000 		.p2align 4,,10
 3369      000000
 3370              		.p2align 3
 3371              	.L64:
1363:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1364:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1365:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*2];
 3372              		.loc 1 1365 0 discriminator 3
 3373 02e0 418B3F   		movl	(%r15), %edi
 3374 02e3 458B7540 		movl	64(%r13), %r14d
1366:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*1];
 3375              		.loc 1 1366 0 discriminator 3
 3376 02e7 418B7720 		movl	32(%r15), %esi
 3377 02eb 458B6520 		movl	32(%r13), %r12d
1367:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*0];
 3378              		.loc 1 1367 0 discriminator 3
 3379 02ef 418B4F40 		movl	64(%r15), %ecx
 3380 02f3 418B5500 		movl	0(%r13), %edx
1365:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*1];
 3381              		.loc 1 1365 0 discriminator 3
 3382 02f7 468D0437 		leal	(%rdi,%r14), %r8d
1368:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*7];
 3383              		.loc 1 1368 0 discriminator 3
 3384 02fb 458B5760 		movl	96(%r15), %r10d
 3385              	.LVL478:
 3386 02ff 450397E0 		addl	224(%r15), %r10d
 3386      000000
1366:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*0];
 3387              		.loc 1 1366 0 discriminator 3
 3388 0306 468D0C26 		leal	(%rsi,%r12), %r9d
1369:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*6];
 3389              		.loc 1 1369 0 discriminator 3
 3390 030a 418B87C0 		movl	192(%r15), %eax
 3390      000000
 3391 0311 418B9F80 		movl	128(%r15), %ebx
 3391      000000
1367:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*7];
 3392              		.loc 1 1367 0 discriminator 3
 3393 0318 448D1C11 		leal	(%rcx,%rdx), %r11d
1365:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*1];
 3394              		.loc 1 1365 0 discriminator 3
 3395 031c 4D63C0   		movslq	%r8d, %r8
 3396              	.LVL479:
1370:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5];
1371:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1372:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*2];
1373:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*1];
 3397              		.loc 1 1373 0 discriminator 3
 3398 031f 4429E6   		subl	%r12d, %esi
1366:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*0];
 3399              		.loc 1 1366 0 discriminator 3
 3400 0322 4D63C9   		movslq	%r9d, %r9
 3401              	.LVL480:
1370:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5];
 3402              		.loc 1 1370 0 discriminator 3
 3403 0325 4963AFA0 		movslq	160(%r15), %rbp
 3403      000000
1372:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*1];
 3404              		.loc 1 1372 0 discriminator 3
 3405 032c 4429F7   		subl	%r14d, %edi
1374:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*0];
1375:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*7];
1376:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*6];
1377:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1378:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 3406              		.loc 1 1378 0 discriminator 3
 3407 032f 4F8D2408 		leaq	(%r8,%r9), %r12
1367:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*7];
 3408              		.loc 1 1367 0 discriminator 3
 3409 0333 4D63DB   		movslq	%r11d, %r11
 3410              	.LVL481:
1369:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5];
 3411              		.loc 1 1369 0 discriminator 3
 3412 0336 01C3     		addl	%eax, %ebx
1368:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*6];
 3413              		.loc 1 1368 0 discriminator 3
 3414 0338 4D63D2   		movslq	%r10d, %r10
 3415              	.LVL482:
1369:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5];
 3416              		.loc 1 1369 0 discriminator 3
 3417 033b 4863DB   		movslq	%ebx, %rbx
 3418              	.LVL483:
1376:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3419              		.loc 1 1376 0 discriminator 3
 3420 033e 458BB780 		movl	128(%r15), %r14d
 3420      000000
 3421              		.loc 1 1378 0 discriminator 3
 3422 0345 4D01DC   		addq	%r11, %r12
1374:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*7];
 3423              		.loc 1 1374 0 discriminator 3
 3424 0348 29D1     		subl	%edx, %ecx
1375:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*6];
 3425              		.loc 1 1375 0 discriminator 3
 3426 034a 418B5760 		movl	96(%r15), %edx
 3427              		.loc 1 1378 0 discriminator 3
 3428 034e 4D01D4   		addq	%r10, %r12
1375:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*6];
 3429              		.loc 1 1375 0 discriminator 3
 3430 0351 412B97E0 		subl	224(%r15), %edx
 3430      000000
1372:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*1];
 3431              		.loc 1 1372 0 discriminator 3
 3432 0358 4863FF   		movslq	%edi, %rdi
 3433              	.LVL484:
 3434              		.loc 1 1378 0 discriminator 3
 3435 035b 4901DC   		addq	%rbx, %r12
1376:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3436              		.loc 1 1376 0 discriminator 3
 3437 035e 4129C6   		subl	%eax, %r14d
1373:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*0];
 3438              		.loc 1 1373 0 discriminator 3
 3439 0361 4863F6   		movslq	%esi, %rsi
 3440              	.LVL485:
 3441              		.loc 1 1378 0 discriminator 3
 3442 0364 4901EC   		addq	%rbp, %r12
1379:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5,
1380:fltk-1.3.4-1/jpeg/jfdctint.c **** 		       FIX(1.057851240)),                /* 128/121 */
1381:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1382:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 += tmp5;
 3443              		.loc 1 1382 0 discriminator 3
 3444 0367 4801ED   		addq	%rbp, %rbp
 3445              	.LVL486:
1376:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3446              		.loc 1 1376 0 discriminator 3
 3447 036a 4963C6   		movslq	%r14d, %rax
1378:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5,
 3448              		.loc 1 1378 0 discriminator 3
 3449 036d 4D69E4DA 		imulq	$8666, %r12, %r12
 3449      210000
1383:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 -= tmp5;
 3450              		.loc 1 1383 0 discriminator 3
 3451 0374 4929E8   		subq	%rbp, %r8
 3452              	.LVL487:
1384:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp5;
1385:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 -= tmp5;
1386:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp5;
 3453              		.loc 1 1386 0 discriminator 3
 3454 0377 4929EA   		subq	%rbp, %r10
 3455              	.LVL488:
1385:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp5;
 3456              		.loc 1 1385 0 discriminator 3
 3457 037a 4929EB   		subq	%rbp, %r11
 3458              	.LVL489:
1387:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp5;
 3459              		.loc 1 1387 0 discriminator 3
 3460 037d 4829EB   		subq	%rbp, %rbx
 3461              	.LVL490:
1384:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp5;
 3462              		.loc 1 1384 0 discriminator 3
 3463 0380 4929E9   		subq	%rbp, %r9
 3464              	.LVL491:
1388:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, FIX(1.435427942)) +       /* c2 */
 3465              		.loc 1 1388 0 discriminator 3
 3466 0383 498D2C1B 		leaq	(%r11,%rbx), %rbp
1374:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*7];
 3467              		.loc 1 1374 0 discriminator 3
 3468 0387 4863C9   		movslq	%ecx, %rcx
 3469              	.LVL492:
1375:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*6];
 3470              		.loc 1 1375 0 discriminator 3
 3471 038a 4863D2   		movslq	%edx, %rdx
 3472              	.LVL493:
1378:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5,
 3473              		.loc 1 1378 0 discriminator 3
 3474 038d 4981C400 		addq	$16384, %r12
 3474      400000
 3475 0394 49C1FC0F 		sarq	$15, %r12
 3476 0398 458927   		movl	%r12d, (%r15)
 3477              		.loc 1 1388 0 discriminator 3
 3478 039b 4F8D2410 		leaq	(%r8,%r10), %r12
 3479 039f 4869EDD0 		imulq	$1744, %rbp, %rbp
 3479      060000
 3480 03a6 4D69E4EF 		imulq	$11759, %r12, %r12
 3480      2D0000
 3481 03ad 4D8D342C 		leaq	(%r12,%rbp), %r14
 3482              	.LVL494:
1389:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp2 + tmp4, FIX(0.212906922));        /* c10 */
1390:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp1 - tmp3, FIX(0.979689713));        /* c6 */
 3483              		.loc 1 1390 0 discriminator 3
 3484 03b1 4D89CC   		movq	%r9, %r12
1391:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.258538479));        /* c4 */
 3485              		.loc 1 1391 0 discriminator 3
 3486 03b4 4C89C5   		movq	%r8, %rbp
1390:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.258538479));        /* c4 */
 3487              		.loc 1 1390 0 discriminator 3
 3488 03b7 4D29D4   		subq	%r10, %r12
 3489              		.loc 1 1391 0 discriminator 3
 3490 03ba 4C29CD   		subq	%r9, %rbp
1390:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.258538479));        /* c4 */
 3491              		.loc 1 1390 0 discriminator 3
 3492 03bd 4D69E45A 		imulq	$8026, %r12, %r12
 3492      1F0000
 3493              	.LVL495:
1392:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 3494              		.loc 1 1392 0 discriminator 3
 3495 03c4 4C893424 		movq	%r14, (%rsp)
 3496 03c8 4D69D287 		imulq	$-8825, %r10, %r10
 3496      DDFFFF
 3497              	.LVL496:
1391:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp1, FIX(1.258538479));        /* c4 */
 3498              		.loc 1 1391 0 discriminator 3
 3499 03cf 4869ED46 		imulq	$10310, %rbp, %rbp
 3499      280000
 3500              	.LVL497:
 3501              		.loc 1 1392 0 discriminator 3
 3502 03d6 4D01E6   		addq	%r12, %r14
 3503              	.LVL498:
 3504 03d9 4D01F2   		addq	%r14, %r10
 3505 03dc 4C69F3EA 		imulq	$-12054, %rbx, %r14
 3505      D0FFFF
1393:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z2 - MULTIPLY(tmp3, FIX(1.077210542)) /* c2+c8-c6 */
1394:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp4, FIX(1.471445400)),        /* c4+c10 */
1395:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1396:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 3506              		.loc 1 1396 0 discriminator 3
 3507 03e3 4901EC   		addq	%rbp, %r12
 3508              	.LVL499:
1392:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 3509              		.loc 1 1392 0 discriminator 3
 3510 03e6 4F8D9432 		leaq	16384(%r10,%r14), %r10
 3510      00400000 
 3511 03ee 49C1FA0F 		sarq	$15, %r10
 3512              		.loc 1 1396 0 discriminator 3
 3513 03f2 4D69C91C 		imulq	$540, %r9, %r9
 3513      020000
 3514              	.LVL500:
1397:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.065941844)) /* c4-c6-c10 */
1398:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp2, FIX(1.435427942))         /* c2 */
1399:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp4, FIX(0.621472312)),        /* c8 */
1400:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1401:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
 3515              		.loc 1 1401 0 discriminator 3
 3516 03f9 48032C24 		addq	(%rsp), %rbp
 3517              	.LVL501:
1392:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z2 - MULTIPLY(tmp3, FIX(1.077210542)) /* c2+c8-c6 */
 3518              		.loc 1 1392 0 discriminator 3
 3519 03fd 45895740 		movl	%r10d, 64(%r15)
 3520              		.loc 1 1401 0 discriminator 3
 3521 0401 4D69C025 		imulq	$-14043, %r8, %r8
 3521      C9FFFF
 3522              	.LVL502:
1402:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.714276708)) /* c2+c4-c6 */
1403:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp2, FIX(0.834379234)),        /* c8+c10 */
1404:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
1405:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1406:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1407:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1408:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(1.360834544));    /* c3 */
1409:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.130622199));    /* c5 */
1410:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.808813568));    /* c7 */
1411:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 + tmp2 + tmp3 - MULTIPLY(tmp10, FIX(1.819470145)) /* c7+c5+c3-c1 */
1412:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   + MULTIPLY(tmp14, FIX(0.421479672));          /* c9 */
1413:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp11 + tmp12, - FIX(0.808813568));  /* -c7 */
1414:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(1.480800167));  /* -c1 */
 3523              		.loc 1 1414 0 discriminator 3
 3524 0408 4C8D1416 		leaq	(%rsi,%rdx), %r10
1396:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.065941844)) /* c4-c6-c10 */
 3525              		.loc 1 1396 0 discriminator 3
 3526 040c 4869DBE3 		imulq	$5091, %rbx, %rbx
 3526      130000
 3527              	.LVL503:
 3528 0413 4D01E1   		addq	%r12, %r9
1401:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.714276708)) /* c2+c4-c6 */
 3529              		.loc 1 1401 0 discriminator 3
 3530 0416 4C01C5   		addq	%r8, %rbp
1396:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.065941844)) /* c4-c6-c10 */
 3531              		.loc 1 1396 0 discriminator 3
 3532 0419 4D69E311 		imulq	$-11759, %r11, %r12
 3532      D2FFFF
1401:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.714276708)) /* c2+c4-c6 */
 3533              		.loc 1 1401 0 discriminator 3
 3534 0420 4D69DB4D 		imulq	$-6835, %r11, %r11
 3534      E5FFFF
 3535              	.LVL504:
 3536              		.loc 1 1414 0 discriminator 3
 3537 0427 4D69D29D 		imulq	$-12131, %r10, %r10
 3537      D0FFFF
1396:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.065941844)) /* c4-c6-c10 */
 3538              		.loc 1 1396 0 discriminator 3
 3539 042e 4D01E1   		addq	%r12, %r9
1401:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.714276708)) /* c2+c4-c6 */
 3540              		.loc 1 1401 0 discriminator 3
 3541 0431 4E8D841D 		leaq	16384(%rbp,%r11), %r8
 3541      00400000 
1408:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.130622199));    /* c5 */
 3542              		.loc 1 1408 0 discriminator 3
 3543 0439 488D2C37 		leaq	(%rdi,%rsi), %rbp
1409:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.808813568));    /* c7 */
 3544              		.loc 1 1409 0 discriminator 3
 3545 043d 4C8D1C0F 		leaq	(%rdi,%rcx), %r11
1396:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.065941844)) /* c4-c6-c10 */
 3546              		.loc 1 1396 0 discriminator 3
 3547 0441 4D8D8C19 		leaq	16384(%r9,%rbx), %r9
 3547      00400000 
1413:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(1.480800167));  /* -c1 */
 3548              		.loc 1 1413 0 discriminator 3
 3549 0449 488D1C0E 		leaq	(%rsi,%rcx), %rbx
1401:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + z3 - MULTIPLY(tmp0, FIX(1.714276708)) /* c2+c4-c6 */
 3550              		.loc 1 1401 0 discriminator 3
 3551 044d 49C1F80F 		sarq	$15, %r8
 3552 0451 458987C0 		movl	%r8d, 192(%r15)
 3552      000000
 3553              	.LVL505:
1410:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 + tmp2 + tmp3 - MULTIPLY(tmp10, FIX(1.819470145)) /* c7+c5+c3-c1 */
 3554              		.loc 1 1410 0 discriminator 3
 3555 0458 4C8D0417 		leaq	(%rdi,%rdx), %r8
1396:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.065941844)) /* c4-c6-c10 */
 3556              		.loc 1 1396 0 discriminator 3
 3557 045c 49C1F90F 		sarq	$15, %r9
1408:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.130622199));    /* c5 */
 3558              		.loc 1 1408 0 discriminator 3
 3559 0460 4869ED8C 		imulq	$11148, %rbp, %rbp
 3559      2B0000
 3560              	.LVL506:
1396:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 + MULTIPLY(tmp1, FIX(0.065941844)) /* c4-c6-c10 */
 3561              		.loc 1 1396 0 discriminator 3
 3562 0467 45898F80 		movl	%r9d, 128(%r15)
 3562      000000
1415:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 + MULTIPLY(tmp11, FIX(1.350258864)) /* c9+c7+c1-c3 */
1416:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp14, FIX(1.130622199));         /* c5 */
1417:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp12 + tmp13, FIX(0.421479672));   /* c9 */
 3563              		.loc 1 1417 0 discriminator 3
 3564 046e 4C8D0C11 		leaq	(%rcx,%rdx), %r9
1409:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.808813568));    /* c7 */
 3565              		.loc 1 1409 0 discriminator 3
 3566 0472 4D69DB2E 		imulq	$9262, %r11, %r11
 3566      240000
 3567              	.LVL507:
1410:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 + tmp2 + tmp3 - MULTIPLY(tmp10, FIX(1.819470145)) /* c7+c5+c3-c1 */
 3568              		.loc 1 1410 0 discriminator 3
 3569 0479 4D69C0E2 		imulq	$6626, %r8, %r8
 3569      190000
 3570              	.LVL508:
1418:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp10 - MULTIPLY(tmp12, FIX(2.104122847)) /* c9+c5+c3-c7 */
1419:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp14, FIX(1.480800167));         /* c1 */
1420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp5 + tmp10 + MULTIPLY(tmp13, FIX(1.381129125)) /* c1+c5-c9-c7 */
1421:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp14, FIX(1.360834544));         /* c3 */
1422:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1423:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp0, CONST_BITS+2);
 3571              		.loc 1 1423 0 discriminator 3
 3572 0480 4E8D641D 		leaq	0(%rbp,%r11), %r12
 3572      00
 3573 0485 4869FFC7 		imulq	$-14905, %rdi, %rdi
 3573      C5FFFF
 3574              	.LVL509:
 3575 048c 4D01C4   		addq	%r8, %r12
1413:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(1.480800167));  /* -c1 */
 3576              		.loc 1 1413 0 discriminator 3
 3577 048f 4869DB1E 		imulq	$-6626, %rbx, %rbx
 3577      E6FFFF
 3578              	.LVL510:
 3579              		.loc 1 1423 0 discriminator 3
 3580 0496 4C01E7   		addq	%r12, %rdi
 3581              	.LVL511:
 3582 0499 4C69E07D 		imulq	$3453, %rax, %r12
 3582      0D0000
1424:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+2);
 3583              		.loc 1 1424 0 discriminator 3
 3584 04a0 4869F635 		imulq	$11061, %rsi, %rsi
 3584      2B0000
 3585              	.LVL512:
1417:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp10 - MULTIPLY(tmp12, FIX(2.104122847)) /* c9+c5+c3-c7 */
 3586              		.loc 1 1417 0 discriminator 3
 3587 04a7 4D69C97D 		imulq	$3453, %r9, %r9
 3587      0D0000
 3588              	.LVL513:
1423:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+2);
 3589              		.loc 1 1423 0 discriminator 3
 3590 04ae 4A8DBC27 		leaq	16384(%rdi,%r12), %rdi
 3590      00400000 
 3591 04b6 48C1FF0F 		sarq	$15, %rdi
 3592 04ba 41897F20 		movl	%edi, 32(%r15)
 3593              	.LVL514:
 3594              		.loc 1 1424 0 discriminator 3
 3595 04be 4A8D3C13 		leaq	(%rbx,%r10), %rdi
1425:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+2);
 3596              		.loc 1 1425 0 discriminator 3
 3597 04c2 4C01CB   		addq	%r9, %rbx
 3598              	.LVL515:
 3599 04c5 4869C9AB 		imulq	$-17237, %rcx, %rcx
 3599      BCFFFF
 3600              	.LVL516:
1424:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+2);
 3601              		.loc 1 1424 0 discriminator 3
 3602 04cc 4801FE   		addq	%rdi, %rsi
 3603 04cf 4869F8D2 		imulq	$-9262, %rax, %rdi
 3603      DBFFFF
 3604              		.loc 1 1425 0 discriminator 3
 3605 04d6 4801D9   		addq	%rbx, %rcx
1424:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+2);
 3606              		.loc 1 1424 0 discriminator 3
 3607 04d9 4801FE   		addq	%rdi, %rsi
 3608 04dc 488DB435 		leaq	16384(%rbp,%rsi), %rsi
 3608      00400000 
 3609 04e4 48C1FE0F 		sarq	$15, %rsi
 3610 04e8 41897760 		movl	%esi, 96(%r15)
 3611              		.loc 1 1425 0 discriminator 3
 3612 04ec 4869F063 		imulq	$12131, %rax, %rsi
 3612      2F0000
 3613 04f3 4801F1   		addq	%rsi, %rcx
 3614 04f6 498D8C0B 		leaq	16384(%r11,%rcx), %rcx
 3614      00400000 
 3615 04fe 48C1F90F 		sarq	$15, %rcx
1426:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 3616              		.loc 1 1426 0 discriminator 3
 3617 0502 4D01D1   		addq	%r10, %r9
 3618              	.LVL517:
1427:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1428:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 3619              		.loc 1 1428 0 discriminator 3
 3620 0505 4983C704 		addq	$4, %r15
 3621              	.LVL518:
1426:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 3622              		.loc 1 1426 0 discriminator 3
 3623 0509 4869D232 		imulq	$11314, %rdx, %rdx
 3623      2C0000
 3624              	.LVL519:
1425:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 3625              		.loc 1 1425 0 discriminator 3
 3626 0510 41898F9C 		movl	%ecx, 156(%r15)
 3626      000000
1429:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 3627              		.loc 1 1429 0 discriminator 3
 3628 0517 4983C504 		addq	$4, %r13
 3629              	.LVL520:
1426:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3630              		.loc 1 1426 0 discriminator 3
 3631 051b 4869C074 		imulq	$-11148, %rax, %rax
 3631      D4FFFF
 3632              	.LVL521:
 3633 0522 4C01CA   		addq	%r9, %rdx
 3634 0525 4801D0   		addq	%rdx, %rax
 3635 0528 498D8400 		leaq	16384(%r8,%rax), %rax
 3635      00400000 
 3636 0530 48C1F80F 		sarq	$15, %rax
 3637 0534 418987DC 		movl	%eax, 220(%r15)
 3637      000000
 3638              	.LVL522:
1362:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 3639              		.loc 1 1362 0 discriminator 3
 3640 053b 4C3B6C24 		cmpq	8(%rsp), %r13
 3640      08
 3641 0540 0F859AFD 		jne	.L64
 3641      FFFF
1430:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1431:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 3642              		.loc 1 1431 0
 3643 0546 488B8424 		movq	152(%rsp), %rax
 3643      98000000 
 3644 054e 64483304 		xorq	%fs:40, %rax
 3644      25280000 
 3644      00
 3645 0557 751C     		jne	.L71
 3646 0559 4881C4A8 		addq	$168, %rsp
 3646      000000
 3647              		.cfi_remember_state
 3648              		.cfi_def_cfa_offset 56
 3649              	.LVL523:
 3650 0560 5B       		popq	%rbx
 3651              		.cfi_def_cfa_offset 48
 3652 0561 5D       		popq	%rbp
 3653              		.cfi_def_cfa_offset 40
 3654 0562 415C     		popq	%r12
 3655              		.cfi_def_cfa_offset 32
 3656 0564 415D     		popq	%r13
 3657              		.cfi_def_cfa_offset 24
 3658              	.LVL524:
 3659 0566 415E     		popq	%r14
 3660              		.cfi_def_cfa_offset 16
 3661 0568 415F     		popq	%r15
 3662              		.cfi_def_cfa_offset 8
 3663              	.LVL525:
 3664 056a C3       		ret
 3665              	.LVL526:
 3666              	.L66:
 3667              		.cfi_restore_state
1350:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 3668              		.loc 1 1350 0
 3669 056b 4C8D7424 		leaq	48(%rsp), %r14
 3669      30
 3670              	.LVL527:
 3671 0570 E9D7FAFF 		jmp	.L62
 3671      FF
 3672              	.LVL528:
 3673              	.L71:
 3674              		.loc 1 1431 0
 3675 0575 E8000000 		call	__stack_chk_fail
 3675      00
 3676              	.LVL529:
 3677              		.cfi_endproc
 3678              	.LFE71:
 3680              		.section	.text.unlikely.jpeg_fdct_11x11
 3681              	.LCOLDE10:
 3682              		.section	.text.jpeg_fdct_11x11
 3683              	.LHOTE10:
 3684              		.section	.text.unlikely.jpeg_fdct_12x12,"ax",@progbits
 3685              	.LCOLDB11:
 3686              		.section	.text.jpeg_fdct_12x12,"ax",@progbits
 3687              	.LHOTB11:
 3688              		.p2align 4,,15
 3689              		.globl	jpeg_fdct_12x12
 3691              	jpeg_fdct_12x12:
 3692              	.LFB72:
1432:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1433:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1434:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
1435:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 12x12 sample block.
1436:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
1437:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1438:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
1439:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_12x12 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
1440:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 3693              		.loc 1 1440 0
 3694              		.cfi_startproc
 3695              	.LVL530:
 3696 0000 4157     		pushq	%r15
 3697              		.cfi_def_cfa_offset 16
 3698              		.cfi_offset 15, -16
 3699 0002 4156     		pushq	%r14
 3700              		.cfi_def_cfa_offset 24
 3701              		.cfi_offset 14, -24
1441:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
1442:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
1443:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*4];
1444:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
1445:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
1446:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
1447:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
1448:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
1449:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1450:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
1451:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT.
1452:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/24).
1453:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1454:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1455:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
1456:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 3702              		.loc 1 1456 0
 3703 0004 4531DB   		xorl	%r11d, %r11d
1440:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 3704              		.loc 1 1440 0
 3705 0007 4155     		pushq	%r13
 3706              		.cfi_def_cfa_offset 32
 3707              		.cfi_offset 13, -32
 3708 0009 4154     		pushq	%r12
 3709              		.cfi_def_cfa_offset 40
 3710              		.cfi_offset 12, -40
 3711 000b 55       		pushq	%rbp
 3712              		.cfi_def_cfa_offset 48
 3713              		.cfi_offset 6, -48
 3714 000c 53       		pushq	%rbx
 3715              		.cfi_def_cfa_offset 56
 3716              		.cfi_offset 3, -56
1455:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 3717              		.loc 1 1455 0
 3718 000d 4889FB   		movq	%rdi, %rbx
1440:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 3719              		.loc 1 1440 0
 3720 0010 4881ECE8 		subq	$232, %rsp
 3720      000000
 3721              		.cfi_def_cfa_offset 288
1440:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 3722              		.loc 1 1440 0
 3723 0017 64488B04 		movq	%fs:40, %rax
 3723      25280000 
 3723      00
 3724 0020 48898424 		movq	%rax, 216(%rsp)
 3724      D8000000 
 3725 0028 31C0     		xorl	%eax, %eax
 3726              	.LVL531:
 3727 002a 89D0     		movl	%edx, %eax
 3728 002c 48897424 		movq	%rsi, 64(%rsp)
 3728      40
 3729 0031 44895C24 		movl	%r11d, 8(%rsp)
 3729      08
 3730 0036 48894424 		movq	%rax, 56(%rsp)
 3730      38
 3731 003b 48897C24 		movq	%rdi, 72(%rsp)
 3731      48
 3732 0040 EB0A     		jmp	.L73
 3733              	.LVL532:
 3734              		.p2align 4,,10
 3735 0042 660F1F44 		.p2align 3
 3735      0000
 3736              	.L81:
1457:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
1458:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
1459:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1460:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1461:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1462:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[11]);
1463:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
1464:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
1465:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
1466:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
1467:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
1468:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1469:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp5;
1470:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
1471:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
1472:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp4;
1473:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
1474:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
1475:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1476:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[11]);
1477:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[10]);
1478:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[9]);
1479:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[8]);
1480:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[7]);
1481:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[6]);
1482:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1483:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
1484:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM) (tmp10 + tmp11 + tmp12 - 12 * CENTERJSAMPLE);
1485:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) (tmp13 - tmp14 - tmp15);
1486:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
1487:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.224744871)), /* c4 */
1488:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1489:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
1490:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
1491:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1492:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1493:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1494:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp1 + tmp4, FIX_0_541196100);    /* c9 */
1496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX_0_765366865);   /* c3-c9 */
1497:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX_1_847759065);   /* c3+c9 */
1498:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.121971054));   /* c5 */
1499:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.860918669));   /* c7 */
1500:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.580774953)) /* c5+c7-c1 */
1501:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.184591911));        /* c11 */
1502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp2 + tmp3, - FIX(0.184591911)); /* -c11 */
1503:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.339493912)) /* c1+c5-c11 */
1504:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.860918669));        /* c7 */
1505:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp11 - tmp14 + MULTIPLY(tmp3, FIX(0.725788011)) /* c1+c11-c7 */
1506:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp5, FIX(1.121971054));        /* c5 */
1507:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp15 + MULTIPLY(tmp0 - tmp3, FIX(1.306562965)) /* c3 */
1508:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp2 + tmp5, FIX_0_541196100);  /* c9 */
1509:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1510:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp10, CONST_BITS);
1511:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS);
1512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS);
1513:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS);
1514:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1515:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
1516:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1517:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
1518:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 12)
1519:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
1520:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 3737              		.loc 1 1520 0
 3738 0048 4883C320 		addq	$32, %rbx
 3739              	.LVL533:
 3740              	.L73:
1458:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3741              		.loc 1 1458 0
 3742 004c 48634424 		movslq	8(%rsp), %rax
 3742      08
 3743 0051 488B7424 		movq	64(%rsp), %rsi
 3743      40
 3744 0056 4C8B4C24 		movq	56(%rsp), %r9
 3744      38
 3745 005b 4C030CC6 		addq	(%rsi,%rax,8), %r9
 3746              	.LVL534:
1463:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 3747              		.loc 1 1463 0
 3748 005f 410FB671 		movzbl	1(%r9), %esi
 3748      01
 3749 0064 450FB671 		movzbl	10(%r9), %r14d
 3749      0A
1466:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 3750              		.loc 1 1466 0
 3751 0069 410FB669 		movzbl	4(%r9), %ebp
 3751      04
 3752 006e 450FB661 		movzbl	7(%r9), %r12d
 3752      07
1462:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
 3753              		.loc 1 1462 0
 3754 0073 450FB679 		movzbl	11(%r9), %r15d
 3754      0B
 3755 0078 410FB601 		movzbl	(%r9), %eax
1464:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
 3756              		.loc 1 1464 0
 3757 007c 450FB669 		movzbl	9(%r9), %r13d
 3757      09
1465:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 3758              		.loc 1 1465 0
 3759 0081 450FB659 		movzbl	8(%r9), %r11d
 3759      08
1463:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 3760              		.loc 1 1463 0
 3761 0086 428D1436 		leal	(%rsi,%r14), %edx
1477:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[9]);
 3762              		.loc 1 1477 0
 3763 008a 4429F6   		subl	%r14d, %esi
1466:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 3764              		.loc 1 1466 0
 3765 008d 896C242C 		movl	%ebp, 44(%rsp)
1477:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[9]);
 3766              		.loc 1 1477 0
 3767 0091 4863F6   		movslq	%esi, %rsi
1463:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 3768              		.loc 1 1463 0
 3769 0094 4863CA   		movslq	%edx, %rcx
1465:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 3770              		.loc 1 1465 0
 3771 0097 410FB651 		movzbl	3(%r9), %edx
 3771      03
1462:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
 3772              		.loc 1 1462 0
 3773 009c 468D1438 		leal	(%rax,%r15), %r10d
1463:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 3774              		.loc 1 1463 0
 3775 00a0 48894C24 		movq	%rcx, 16(%rsp)
 3775      10
1464:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
 3776              		.loc 1 1464 0
 3777 00a5 410FB649 		movzbl	2(%r9), %ecx
 3777      02
1476:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[10]);
 3778              		.loc 1 1476 0
 3779 00aa 4429F8   		subl	%r15d, %eax
1480:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[6]);
 3780              		.loc 1 1480 0
 3781 00ad 448B7C24 		movl	44(%rsp), %r15d
 3781      2C
1462:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
 3782              		.loc 1 1462 0
 3783 00b2 4D63D2   		movslq	%r10d, %r10
 3784              	.LVL535:
1465:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 3785              		.loc 1 1465 0
 3786 00b5 44895C24 		movl	%r11d, 40(%rsp)
 3786      28
1476:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[10]);
 3787              		.loc 1 1476 0
 3788 00ba 4898     		cltq
1465:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 3789              		.loc 1 1465 0
 3790 00bc 89542424 		movl	%edx, 36(%rsp)
 3791 00c0 4189D0   		movl	%edx, %r8d
1466:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 3792              		.loc 1 1466 0
 3793 00c3 428D5425 		leal	0(%rbp,%r12), %edx
 3793      00
1467:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3794              		.loc 1 1467 0
 3795 00c8 410FB669 		movzbl	6(%r9), %ebp
 3795      06
1464:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
 3796              		.loc 1 1464 0
 3797 00cd 428D3C29 		leal	(%rcx,%r13), %edi
1465:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 3798              		.loc 1 1465 0
 3799 00d1 4501D8   		addl	%r11d, %r8d
1466:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 3800              		.loc 1 1466 0
 3801 00d4 4863D2   		movslq	%edx, %rdx
1465:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 3802              		.loc 1 1465 0
 3803 00d7 4D63C0   		movslq	%r8d, %r8
1480:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[6]);
 3804              		.loc 1 1480 0
 3805 00da 4529E7   		subl	%r12d, %r15d
1466:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 3806              		.loc 1 1466 0
 3807 00dd 48895424 		movq	%rdx, 24(%rsp)
 3807      18
1467:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3808              		.loc 1 1467 0
 3809 00e2 410FB651 		movzbl	5(%r9), %edx
 3809      05
1464:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
 3810              		.loc 1 1464 0
 3811 00e7 4863FF   		movslq	%edi, %rdi
 3812              	.LVL536:
1480:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[6]);
 3813              		.loc 1 1480 0
 3814 00ea 4D63E7   		movslq	%r15d, %r12
1478:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[8]);
 3815              		.loc 1 1478 0
 3816 00ed 4429E9   		subl	%r13d, %ecx
 3817 00f0 4863C9   		movslq	%ecx, %rcx
1467:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3818              		.loc 1 1467 0
 3819 00f3 448D0C2A 		leal	(%rdx,%rbp), %r9d
 3820              	.LVL537:
1481:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3821              		.loc 1 1481 0
 3822 00f7 29EA     		subl	%ebp, %edx
 3823 00f9 4863EA   		movslq	%edx, %rbp
1484:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) (tmp13 - tmp14 - tmp15);
 3824              		.loc 1 1484 0
 3825 00fc 488B5424 		movq	16(%rsp), %rdx
 3825      10
 3826 0101 48035424 		addq	24(%rsp), %rdx
 3826      18
1467:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3827              		.loc 1 1467 0
 3828 0106 4D63C9   		movslq	%r9d, %r9
 3829              	.LVL538:
1469:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
 3830              		.loc 1 1469 0
 3831 0109 4F8D1C0A 		leaq	(%r10,%r9), %r11
 3832              	.LVL539:
1470:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
 3833              		.loc 1 1470 0
 3834 010d 4D29CA   		subq	%r9, %r10
 3835              	.LVL540:
1473:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
 3836              		.loc 1 1473 0
 3837 0110 4E8D0C07 		leaq	(%rdi,%r8), %r9
 3838              	.LVL541:
1470:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
 3839              		.loc 1 1470 0
 3840 0114 4C895424 		movq	%r10, 48(%rsp)
 3840      30
 3841              	.LVL542:
1472:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 3842              		.loc 1 1472 0
 3843 0119 4C8B5424 		movq	16(%rsp), %r10
 3843      10
1474:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3844              		.loc 1 1474 0
 3845 011e 4C29C7   		subq	%r8, %rdi
 3846              	.LVL543:
1472:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 3847              		.loc 1 1472 0
 3848 0121 4C2B5424 		subq	24(%rsp), %r10
 3848      18
 3849              	.LVL544:
1485:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 3850              		.loc 1 1485 0
 3851 0126 4C8B7C24 		movq	48(%rsp), %r15
 3851      30
1484:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) (tmp13 - tmp14 - tmp15);
 3852              		.loc 1 1484 0
 3853 012b 428D941A 		leal	-1536(%rdx,%r11), %edx
 3853      00FAFFFF 
 3854              	.LVL545:
1479:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[7]);
 3855              		.loc 1 1479 0
 3856 0133 448B4424 		movl	36(%rsp), %r8d
 3856      24
 3857              	.LVL546:
 3858 0138 442B4424 		subl	40(%rsp), %r8d
 3858      28
 3859              	.LVL547:
1484:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) (tmp13 - tmp14 - tmp15);
 3860              		.loc 1 1484 0
 3861 013d 4401CA   		addl	%r9d, %edx
 3862 0140 8913     		movl	%edx, (%rbx)
 3863              	.LVL548:
1485:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 3864              		.loc 1 1485 0
 3865 0142 4489FA   		movl	%r15d, %edx
 3866 0145 4429D2   		subl	%r10d, %edx
1489:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 3867              		.loc 1 1489 0
 3868 0148 4929FA   		subq	%rdi, %r10
 3869              	.LVL549:
1485:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 3870              		.loc 1 1485 0
 3871 014b 29FA     		subl	%edi, %edx
1479:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[7]);
 3872              		.loc 1 1479 0
 3873 014d 4D63C0   		movslq	%r8d, %r8
 3874              	.LVL550:
1485:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 3875              		.loc 1 1485 0
 3876 0150 895318   		movl	%edx, 24(%rbx)
1486:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.224744871)), /* c4 */
 3877              		.loc 1 1486 0
 3878 0153 4C89DA   		movq	%r11, %rdx
 3879 0156 4C29CA   		subq	%r9, %rdx
1498:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.860918669));   /* c7 */
 3880              		.loc 1 1498 0
 3881 0159 4C8D0C08 		leaq	(%rax,%rcx), %r9
 3882              	.LVL551:
1486:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.224744871)), /* c4 */
 3883              		.loc 1 1486 0
 3884 015d 4869D231 		imulq	$10033, %rdx, %rdx
 3884      270000
1498:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.860918669));   /* c7 */
 3885              		.loc 1 1498 0
 3886 0164 4D69C9E7 		imulq	$9191, %r9, %r9
 3886      230000
1486:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.224744871)), /* c4 */
 3887              		.loc 1 1486 0
 3888 016b 4881C200 		addq	$4096, %rdx
 3888      100000
 3889 0172 48C1FA0D 		sarq	$13, %rdx
 3890 0176 895310   		movl	%edx, 16(%rbx)
1489:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 3891              		.loc 1 1489 0
 3892 0179 4C89FA   		movq	%r15, %rdx
 3893 017c 4801FA   		addq	%rdi, %rdx
1502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.339493912)) /* c1+c5-c11 */
 3894              		.loc 1 1502 0
 3895 017f 4A8D3C01 		leaq	(%rcx,%r8), %rdi
 3896              	.LVL552:
1489:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 3897              		.loc 1 1489 0
 3898 0183 4869D2B6 		imulq	$11190, %rdx, %rdx
 3898      2B0000
1502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.339493912)) /* c1+c5-c11 */
 3899              		.loc 1 1502 0
 3900 018a 4869FF18 		imulq	$-1512, %rdi, %rdi
 3900      FAFFFF
1489:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 3901              		.loc 1 1489 0
 3902 0191 4A8D9412 		leaq	4096(%rdx,%r10), %rdx
 3902      00100000 
 3903 0199 48C1FA0D 		sarq	$13, %rdx
 3904 019d 895308   		movl	%edx, 8(%rbx)
1495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX_0_765366865);   /* c3-c9 */
 3905              		.loc 1 1495 0
 3906 01a0 4A8D1426 		leaq	(%rsi,%r12), %rdx
1496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX_1_847759065);   /* c3+c9 */
 3907              		.loc 1 1496 0
 3908 01a4 4869F67E 		imulq	$6270, %rsi, %rsi
 3908      180000
 3909              	.LVL553:
1495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX_0_765366865);   /* c3-c9 */
 3910              		.loc 1 1495 0
 3911 01ab 4869D251 		imulq	$4433, %rdx, %rdx
 3911      110000
 3912              	.LVL554:
1497:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.121971054));   /* c5 */
 3913              		.loc 1 1497 0
 3914 01b2 4D69E4DF 		imulq	$-15137, %r12, %r12
 3914      C4FFFF
 3915              	.LVL555:
1496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX_1_847759065);   /* c3+c9 */
 3916              		.loc 1 1496 0
 3917 01b9 4801D6   		addq	%rdx, %rsi
 3918              	.LVL556:
1497:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.121971054));   /* c5 */
 3919              		.loc 1 1497 0
 3920 01bc 4901D4   		addq	%rdx, %r12
 3921              	.LVL557:
1499:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.580774953)) /* c5+c7-c1 */
 3922              		.loc 1 1499 0
 3923 01bf 4A8D1400 		leaq	(%rax,%r8), %rdx
 3924              	.LVL558:
 3925 01c3 4869D28D 		imulq	$7053, %rdx, %rdx
 3925      1B0000
 3926              	.LVL559:
1510:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS);
 3927              		.loc 1 1510 0
 3928 01ca 4D8D1411 		leaq	(%r9,%rdx), %r10
 3929 01ce 4D8D2C32 		leaq	(%r10,%rsi), %r13
 3930 01d2 4C69D06A 		imulq	$-4758, %rax, %r10
 3930      EDFFFF
 3931              	.LVL560:
 3932 01d9 4D01EA   		addq	%r13, %r10
 3933              	.LVL561:
1511:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS);
 3934              		.loc 1 1511 0
 3935 01dc 4C29C0   		subq	%r8, %rax
 3936              	.LVL562:
1515:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3937              		.loc 1 1515 0
 3938 01df 83442408 		addl	$1, 8(%rsp)
 3938      01
 3939              	.LVL563:
1510:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS);
 3940              		.loc 1 1510 0
 3941 01e4 4C69EDE8 		imulq	$1512, %rbp, %r13
 3941      050000
1511:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS);
 3942              		.loc 1 1511 0
 3943 01eb 4869C0CF 		imulq	$10703, %rax, %rax
 3943      290000
1513:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3944              		.loc 1 1513 0
 3945 01f2 4D69C03A 		imulq	$5946, %r8, %r8
 3945      170000
 3946              	.LVL564:
1510:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS);
 3947              		.loc 1 1510 0
 3948 01f9 4F8D942A 		leaq	4096(%r10,%r13), %r10
 3948      00100000 
1511:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS);
 3949              		.loc 1 1511 0
 3950 0201 4C01E0   		addq	%r12, %rax
1510:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS);
 3951              		.loc 1 1510 0
 3952 0204 49C1FA0D 		sarq	$13, %r10
 3953 0208 44895304 		movl	%r10d, 4(%rbx)
1511:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS);
 3954              		.loc 1 1511 0
 3955 020c 4C8D1429 		leaq	(%rcx,%rbp), %r10
1512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS);
 3956              		.loc 1 1512 0
 3957 0210 4869C923 		imulq	$-19165, %rcx, %rcx
 3957      B5FFFF
 3958              	.LVL565:
1511:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS);
 3959              		.loc 1 1511 0
 3960 0217 4D69D2AF 		imulq	$-4433, %r10, %r10
 3960      EEFFFF
 3961 021e 4A8D8410 		leaq	4096(%rax,%r10), %rax
 3961      00100000 
 3962 0226 48C1F80D 		sarq	$13, %rax
 3963 022a 89430C   		movl	%eax, 12(%rbx)
1512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS);
 3964              		.loc 1 1512 0
 3965 022d 4889F8   		movq	%rdi, %rax
1513:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3966              		.loc 1 1513 0
 3967 0230 4829F7   		subq	%rsi, %rdi
 3968              	.LVL566:
1512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS);
 3969              		.loc 1 1512 0
 3970 0233 4C29E0   		subq	%r12, %rax
 3971              	.LVL567:
1513:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3972              		.loc 1 1513 0
 3973 0236 4901F8   		addq	%rdi, %r8
1512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS);
 3974              		.loc 1 1512 0
 3975 0239 4801C1   		addq	%rax, %rcx
 3976 023c 4869C58D 		imulq	$7053, %rbp, %rax
 3976      1B0000
1513:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3977              		.loc 1 1513 0
 3978 0243 4869ED19 		imulq	$-9191, %rbp, %rbp
 3978      DCFFFF
 3979              	.LVL568:
1512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS);
 3980              		.loc 1 1512 0
 3981 024a 4801C1   		addq	%rax, %rcx
 3982 024d 498D8409 		leaq	4096(%r9,%rcx), %rax
 3982      00100000 
1513:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3983              		.loc 1 1513 0
 3984 0255 4C01C5   		addq	%r8, %rbp
1512:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS);
 3985              		.loc 1 1512 0
 3986 0258 48C1F80D 		sarq	$13, %rax
 3987 025c 894314   		movl	%eax, 20(%rbx)
1513:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3988              		.loc 1 1513 0
 3989 025f 488D842A 		leaq	4096(%rdx,%rbp), %rax
 3989      00100000 
 3990 0267 48C1F80D 		sarq	$13, %rax
 3991 026b 89431C   		movl	%eax, 28(%rbx)
1515:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 3992              		.loc 1 1515 0
 3993 026e 8B442408 		movl	8(%rsp), %eax
 3994              	.LVL569:
1517:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 12)
 3995              		.loc 1 1517 0
 3996 0272 83F808   		cmpl	$8, %eax
 3997 0275 0F847202 		je	.L77
 3997      0000
1518:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 3998              		.loc 1 1518 0
 3999 027b 83F80C   		cmpl	$12, %eax
 4000 027e 0F85C4FD 		jne	.L81
 4000      FFFF
1521:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
1522:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
1523:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1524:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1525:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
1526:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
1527:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/12)**2 = 4/9, which we partially
1528:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers and final shifting:
1529:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/24) * 8/9.
1530:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1531:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1532:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
1533:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
1534:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 4001              		.loc 1 1534 0
 4002 0284 488D4424 		leaq	112(%rsp), %rax
 4002      70
 4003              	.LVL570:
 4004 0289 4C8B7424 		movq	72(%rsp), %r14
 4004      48
 4005 028e 4C8D7C24 		leaq	80(%rsp), %r15
 4005      50
 4006 0293 48894424 		movq	%rax, 8(%rsp)
 4006      08
 4007              	.LVL571:
 4008 0298 0F1F8400 		.p2align 4,,10
 4008      00000000 
 4009              		.p2align 3
 4010              	.L75:
1535:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1536:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1537:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*3];
 4011              		.loc 1 1537 0 discriminator 3
 4012 02a0 418B16   		movl	(%r14), %edx
 4013 02a3 458B6F60 		movl	96(%r15), %r13d
1538:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*2];
 4014              		.loc 1 1538 0 discriminator 3
 4015 02a7 418B7620 		movl	32(%r14), %esi
 4016              	.LVL572:
 4017 02ab 458B6740 		movl	64(%r15), %r12d
 4018              	.LVL573:
1539:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
1540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
1541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
1542:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 4019              		.loc 1 1542 0 discriminator 3
 4020 02af 458B96A0 		movl	160(%r14), %r10d
 4020      000000
 4021 02b6 450396C0 		addl	192(%r14), %r10d
 4021      000000
1539:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
 4022              		.loc 1 1539 0 discriminator 3
 4023 02bd 418B4E40 		movl	64(%r14), %ecx
1540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
 4024              		.loc 1 1540 0 discriminator 3
 4025 02c1 418B5E60 		movl	96(%r14), %ebx
1537:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*2];
 4026              		.loc 1 1537 0 discriminator 3
 4027 02c5 468D0C2A 		leal	(%rdx,%r13), %r9d
1540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
 4028              		.loc 1 1540 0 discriminator 3
 4029 02c9 41031F   		addl	(%r15), %ebx
1541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 4030              		.loc 1 1541 0 discriminator 3
 4031 02cc 418B8680 		movl	128(%r14), %eax
 4031      000000
1538:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
 4032              		.loc 1 1538 0 discriminator 3
 4033 02d3 468D1C26 		leal	(%rsi,%r12), %r11d
1541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 4034              		.loc 1 1541 0 discriminator 3
 4035 02d7 410386E0 		addl	224(%r14), %eax
 4035      000000
1539:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
 4036              		.loc 1 1539 0 discriminator 3
 4037 02de 418B7F20 		movl	32(%r15), %edi
1537:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*2];
 4038              		.loc 1 1537 0 discriminator 3
 4039 02e2 4D63C9   		movslq	%r9d, %r9
 4040              	.LVL574:
 4041              		.loc 1 1542 0 discriminator 3
 4042 02e5 4D63D2   		movslq	%r10d, %r10
1538:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
 4043              		.loc 1 1538 0 discriminator 3
 4044 02e8 4D63DB   		movslq	%r11d, %r11
 4045              	.LVL575:
1543:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1544:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp5;
1545:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
1546:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
1547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp4;
1548:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
1549:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
1550:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1551:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*3];
1552:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*2];
 4046              		.loc 1 1552 0 discriminator 3
 4047 02eb 4429E6   		subl	%r12d, %esi
1544:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
 4048              		.loc 1 1544 0 discriminator 3
 4049 02ee 4F8D0411 		leaq	(%r9,%r10), %r8
1545:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
 4050              		.loc 1 1545 0 discriminator 3
 4051 02f2 4D29D1   		subq	%r10, %r9
 4052              	.LVL576:
1547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 4053              		.loc 1 1547 0 discriminator 3
 4054 02f5 4D89DA   		movq	%r11, %r10
1539:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
 4055              		.loc 1 1539 0 discriminator 3
 4056 02f8 01CF     		addl	%ecx, %edi
1540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
 4057              		.loc 1 1540 0 discriminator 3
 4058 02fa 4863DB   		movslq	%ebx, %rbx
1553:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*1];
1554:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*0];
1555:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 4059              		.loc 1 1555 0 discriminator 3
 4060 02fd 458BA680 		movl	128(%r14), %r12d
 4060      000000
1539:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
 4061              		.loc 1 1539 0 discriminator 3
 4062 0304 4863FF   		movslq	%edi, %rdi
 4063              	.LVL577:
1541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 4064              		.loc 1 1541 0 discriminator 3
 4065 0307 4898     		cltq
 4066              	.LVL578:
 4067              		.loc 1 1555 0 discriminator 3
 4068 0309 452BA6E0 		subl	224(%r14), %r12d
 4068      000000
1547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 4069              		.loc 1 1547 0 discriminator 3
 4070 0310 4929C2   		subq	%rax, %r10
 4071              	.LVL579:
1548:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
 4072              		.loc 1 1548 0 discriminator 3
 4073 0313 488D2C1F 		leaq	(%rdi,%rbx), %rbp
 4074              	.LVL580:
1556:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*6];
1557:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1558:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 4075              		.loc 1 1558 0 discriminator 3
 4076 0317 4C01D8   		addq	%r11, %rax
 4077              	.LVL581:
 4078 031a 4C01C0   		addq	%r8, %rax
 4079              	.LVL582:
1549:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4080              		.loc 1 1549 0 discriminator 3
 4081 031d 4829DF   		subq	%rbx, %rdi
 4082              	.LVL583:
1551:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*2];
 4083              		.loc 1 1551 0 discriminator 3
 4084 0320 4429EA   		subl	%r13d, %edx
 4085              	.LVL584:
 4086              		.loc 1 1558 0 discriminator 3
 4087 0323 4801E8   		addq	%rbp, %rax
1559:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
1560:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1561:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
1562:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
1563:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1564:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 4088              		.loc 1 1564 0 discriminator 3
 4089 0326 4929E8   		subq	%rbp, %r8
 4090              	.LVL585:
1556:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4091              		.loc 1 1556 0 discriminator 3
 4092 0329 458BAEA0 		movl	160(%r14), %r13d
 4092      000000
 4093              	.LVL586:
1558:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 4094              		.loc 1 1558 0 discriminator 3
 4095 0330 4869C072 		imulq	$7282, %rax, %rax
 4095      1C0000
1556:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4096              		.loc 1 1556 0 discriminator 3
 4097 0337 452BAEC0 		subl	192(%r14), %r13d
 4097      000000
1553:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*0];
 4098              		.loc 1 1553 0 discriminator 3
 4099 033e 412B4F20 		subl	32(%r15), %ecx
 4100              	.LVL587:
 4101              		.loc 1 1564 0 discriminator 3
 4102 0342 4D69C0D6 		imulq	$8918, %r8, %r8
 4102      220000
1554:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 4103              		.loc 1 1554 0 discriminator 3
 4104 0349 418B5E60 		movl	96(%r14), %ebx
 4105              	.LVL588:
1552:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*1];
 4106              		.loc 1 1552 0 discriminator 3
 4107 034d 4863F6   		movslq	%esi, %rsi
1554:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 4108              		.loc 1 1554 0 discriminator 3
 4109 0350 412B1F   		subl	(%r15), %ebx
 4110              	.LVL589:
1555:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*6];
 4111              		.loc 1 1555 0 discriminator 3
 4112 0353 4D63E4   		movslq	%r12d, %r12
1551:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*2];
 4113              		.loc 1 1551 0 discriminator 3
 4114 0356 4863D2   		movslq	%edx, %rdx
 4115              	.LVL590:
1558:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 4116              		.loc 1 1558 0 discriminator 3
 4117 0359 48050020 		addq	$8192, %rax
 4117      0000
1553:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*0];
 4118              		.loc 1 1553 0 discriminator 3
 4119 035f 4863C9   		movslq	%ecx, %rcx
 4120              	.LVL591:
1556:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4121              		.loc 1 1556 0 discriminator 3
 4122 0362 4D63ED   		movslq	%r13d, %r13
1558:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 4123              		.loc 1 1558 0 discriminator 3
 4124 0365 48C1F80E 		sarq	$14, %rax
 4125              		.loc 1 1564 0 discriminator 3
 4126 0369 4981C000 		addq	$8192, %r8
 4126      200000
1558:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 4127              		.loc 1 1558 0 discriminator 3
 4128 0370 418906   		movl	%eax, (%r14)
 4129              	.LVL592:
1561:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 4130              		.loc 1 1561 0 discriminator 3
 4131 0373 4C89C8   		movq	%r9, %rax
 4132              		.loc 1 1564 0 discriminator 3
 4133 0376 49C1F80E 		sarq	$14, %r8
1561:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 4134              		.loc 1 1561 0 discriminator 3
 4135 037a 4C29D0   		subq	%r10, %rax
1565:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.088662108)),         /* c4 */
1566:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1567:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 4136              		.loc 1 1567 0 discriminator 3
 4137 037d 4929FA   		subq	%rdi, %r10
 4138              	.LVL593:
1554:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 4139              		.loc 1 1554 0 discriminator 3
 4140 0380 4863DB   		movslq	%ebx, %rbx
 4141              	.LVL594:
1561:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 4142              		.loc 1 1561 0 discriminator 3
 4143 0383 4829F8   		subq	%rdi, %rax
 4144              		.loc 1 1567 0 discriminator 3
 4145 0386 4C01CF   		addq	%r9, %rdi
 4146              	.LVL595:
1564:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.088662108)),         /* c4 */
 4147              		.loc 1 1564 0 discriminator 3
 4148 0389 45898680 		movl	%r8d, 128(%r14)
 4148      000000
 4149              	.LVL596:
1561:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 4150              		.loc 1 1561 0 discriminator 3
 4151 0390 4869C072 		imulq	$7282, %rax, %rax
 4151      1C0000
1568:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
1569:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp13 + tmp15, FIX(1.214244803)),         /* c2 */
1570:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1571:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1572:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1573:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1574:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp1 + tmp4, FIX(0.481063200));   /* c9 */
1575:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX(0.680326102));  /* c3-c9 */
1576:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX(1.642452502));  /* c3+c9 */
1577:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(0.997307603));   /* c5 */
 4152              		.loc 1 1577 0 discriminator 3
 4153 0397 4C8D040A 		leaq	(%rdx,%rcx), %r8
1567:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 4154              		.loc 1 1567 0 discriminator 3
 4155 039b 4D69D272 		imulq	$7282, %r10, %r10
 4155      1C0000
 4156 03a2 4869FFDB 		imulq	$9947, %rdi, %rdi
 4156      260000
1561:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 4157              		.loc 1 1561 0 discriminator 3
 4158 03a9 48050020 		addq	$8192, %rax
 4158      0000
 4159 03af 48C1F80E 		sarq	$14, %rax
 4160 03b3 418986C0 		movl	%eax, 192(%r14)
 4160      000000
1567:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 4161              		.loc 1 1567 0 discriminator 3
 4162 03ba 498D843A 		leaq	8192(%r10,%rdi), %rax
 4162      00200000 
1578:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.765261039));   /* c7 */
1579:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.516244403)) /* c5+c7-c1 */
1580:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.164081699));        /* c11 */
1581:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp2 + tmp3, - FIX(0.164081699)); /* -c11 */
 4163              		.loc 1 1581 0 discriminator 3
 4164 03c2 488D3C19 		leaq	(%rcx,%rbx), %rdi
1567:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 4165              		.loc 1 1567 0 discriminator 3
 4166 03c6 48C1F80E 		sarq	$14, %rax
1582:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.079550144)) /* c1+c5-c11 */
1583:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.765261039));        /* c7 */
1584:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp11 - tmp14 + MULTIPLY(tmp3, FIX(0.645144899)) /* c1+c11-c7 */
1585:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp5, FIX(0.997307603));        /* c5 */
1586:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp15 + MULTIPLY(tmp0 - tmp3, FIX(1.161389302)) /* c3 */
1587:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp2 + tmp5, FIX(0.481063200)); /* c9 */
1588:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1589:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp10, CONST_BITS+1);
1590:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+1);
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+1);
1592:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
1593:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1594:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 4167              		.loc 1 1594 0 discriminator 3
 4168 03ca 4983C604 		addq	$4, %r14
 4169              	.LVL597:
1595:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 4170              		.loc 1 1595 0 discriminator 3
 4171 03ce 4983C704 		addq	$4, %r15
 4172              	.LVL598:
1567:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 4173              		.loc 1 1567 0 discriminator 3
 4174 03d2 4189463C 		movl	%eax, 60(%r14)
 4175              	.LVL599:
1574:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX(0.680326102));  /* c3-c9 */
 4176              		.loc 1 1574 0 discriminator 3
 4177 03d6 4A8D0426 		leaq	(%rsi,%r12), %rax
1575:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX(1.642452502));  /* c3+c9 */
 4178              		.loc 1 1575 0 discriminator 3
 4179 03da 4869F6C5 		imulq	$5573, %rsi, %rsi
 4179      150000
 4180              	.LVL600:
1574:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX(0.680326102));  /* c3-c9 */
 4181              		.loc 1 1574 0 discriminator 3
 4182 03e1 4869C065 		imulq	$3941, %rax, %rax
 4182      0F0000
 4183              	.LVL601:
1576:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(0.997307603));   /* c5 */
 4184              		.loc 1 1576 0 discriminator 3
 4185 03e8 4D69E471 		imulq	$-13455, %r12, %r12
 4185      CBFFFF
 4186              	.LVL602:
1575:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX(1.642452502));  /* c3+c9 */
 4187              		.loc 1 1575 0 discriminator 3
 4188 03ef 4801C6   		addq	%rax, %rsi
 4189              	.LVL603:
1576:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(0.997307603));   /* c5 */
 4190              		.loc 1 1576 0 discriminator 3
 4191 03f2 4901C4   		addq	%rax, %r12
 4192              	.LVL604:
1578:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.516244403)) /* c5+c7-c1 */
 4193              		.loc 1 1578 0 discriminator 3
 4194 03f5 488D041A 		leaq	(%rdx,%rbx), %rax
 4195              	.LVL605:
1577:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.765261039));   /* c7 */
 4196              		.loc 1 1577 0 discriminator 3
 4197 03f9 4D69C0EA 		imulq	$8170, %r8, %r8
 4197      1F0000
 4198              	.LVL606:
1578:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.516244403)) /* c5+c7-c1 */
 4199              		.loc 1 1578 0 discriminator 3
 4200 0400 4869C07D 		imulq	$6269, %rax, %rax
 4200      180000
 4201              	.LVL607:
1581:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.079550144)) /* c1+c5-c11 */
 4202              		.loc 1 1581 0 discriminator 3
 4203 0407 4869FFC0 		imulq	$-1344, %rdi, %rdi
 4203      FAFFFF
 4204              	.LVL608:
1589:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+1);
 4205              		.loc 1 1589 0 discriminator 3
 4206 040e 4D8D1400 		leaq	(%r8,%rax), %r10
 4207 0412 4D8D0C32 		leaq	(%r10,%rsi), %r9
 4208 0416 4C69D27B 		imulq	$-4229, %rdx, %r10
 4208      EFFFFF
 4209              	.LVL609:
1590:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+1);
 4210              		.loc 1 1590 0 discriminator 3
 4211 041d 4829DA   		subq	%rbx, %rdx
 4212              	.LVL610:
 4213 0420 4869D22A 		imulq	$9514, %rdx, %rdx
 4213      250000
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4214              		.loc 1 1592 0 discriminator 3
 4215 0427 4869DBA5 		imulq	$5285, %rbx, %rbx
 4215      140000
 4216              	.LVL611:
1589:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+1);
 4217              		.loc 1 1589 0 discriminator 3
 4218 042e 4D01CA   		addq	%r9, %r10
 4219              	.LVL612:
 4220 0431 4F8D4CAD 		leaq	0(%r13,%r13,4), %r9
 4220      00
1590:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+1);
 4221              		.loc 1 1590 0 discriminator 3
 4222 0436 4C01E2   		addq	%r12, %rdx
1589:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+1);
 4223              		.loc 1 1589 0 discriminator 3
 4224 0439 4F8D4C8D 		leaq	0(%r13,%r9,4), %r9
 4224      00
 4225 043e 49C1E106 		salq	$6, %r9
 4226 0442 4F8D8C0A 		leaq	8192(%r10,%r9), %r9
 4226      00200000 
 4227 044a 49C1F90E 		sarq	$14, %r9
 4228 044e 45894E1C 		movl	%r9d, 28(%r14)
 4229              	.LVL613:
1590:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+1);
 4230              		.loc 1 1590 0 discriminator 3
 4231 0452 4E8D0C29 		leaq	(%rcx,%r13), %r9
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4232              		.loc 1 1591 0 discriminator 3
 4233 0456 4869C974 		imulq	$-17036, %rcx, %rcx
 4233      BDFFFF
 4234              	.LVL614:
1590:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+1);
 4235              		.loc 1 1590 0 discriminator 3
 4236 045d 4D69C99B 		imulq	$-3941, %r9, %r9
 4236      F0FFFF
 4237 0464 4A8D940A 		leaq	8192(%rdx,%r9), %rdx
 4237      00200000 
 4238 046c 48C1FA0E 		sarq	$14, %rdx
 4239 0470 4189565C 		movl	%edx, 92(%r14)
 4240              	.LVL615:
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4241              		.loc 1 1591 0 discriminator 3
 4242 0474 4889FA   		movq	%rdi, %rdx
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4243              		.loc 1 1592 0 discriminator 3
 4244 0477 4829F7   		subq	%rsi, %rdi
 4245              	.LVL616:
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4246              		.loc 1 1591 0 discriminator 3
 4247 047a 4C29E2   		subq	%r12, %rdx
 4248              	.LVL617:
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4249              		.loc 1 1592 0 discriminator 3
 4250 047d 4801FB   		addq	%rdi, %rbx
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4251              		.loc 1 1591 0 discriminator 3
 4252 0480 4801D1   		addq	%rdx, %rcx
 4253 0483 4969D57D 		imulq	$6269, %r13, %rdx
 4253      180000
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4254              		.loc 1 1592 0 discriminator 3
 4255 048a 4D69ED16 		imulq	$-8170, %r13, %r13
 4255      E0FFFF
 4256              	.LVL618:
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4257              		.loc 1 1591 0 discriminator 3
 4258 0491 4801D1   		addq	%rdx, %rcx
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4259              		.loc 1 1592 0 discriminator 3
 4260 0494 4901DD   		addq	%rbx, %r13
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4261              		.loc 1 1591 0 discriminator 3
 4262 0497 498D9408 		leaq	8192(%r8,%rcx), %rdx
 4262      00200000 
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4263              		.loc 1 1592 0 discriminator 3
 4264 049f 4A8D8428 		leaq	8192(%rax,%r13), %rax
 4264      00200000 
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4265              		.loc 1 1591 0 discriminator 3
 4266 04a7 48C1FA0E 		sarq	$14, %rdx
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4267              		.loc 1 1592 0 discriminator 3
 4268 04ab 48C1F80E 		sarq	$14, %rax
1591:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+1);
 4269              		.loc 1 1591 0 discriminator 3
 4270 04af 4189969C 		movl	%edx, 156(%r14)
 4270      000000
1592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4271              		.loc 1 1592 0 discriminator 3
 4272 04b6 418986DC 		movl	%eax, 220(%r14)
 4272      000000
 4273              	.LVL619:
1534:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 4274              		.loc 1 1534 0 discriminator 3
 4275 04bd 4C3B7C24 		cmpq	8(%rsp), %r15
 4275      08
 4276 04c2 0F85D8FD 		jne	.L75
 4276      FFFF
1596:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1597:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 4277              		.loc 1 1597 0
 4278 04c8 488B8424 		movq	216(%rsp), %rax
 4278      D8000000 
 4279 04d0 64483304 		xorq	%fs:40, %rax
 4279      25280000 
 4279      00
 4280 04d9 751C     		jne	.L82
 4281 04db 4881C4E8 		addq	$232, %rsp
 4281      000000
 4282              		.cfi_remember_state
 4283              		.cfi_def_cfa_offset 56
 4284 04e2 5B       		popq	%rbx
 4285              		.cfi_def_cfa_offset 48
 4286 04e3 5D       		popq	%rbp
 4287              		.cfi_def_cfa_offset 40
 4288 04e4 415C     		popq	%r12
 4289              		.cfi_def_cfa_offset 32
 4290              	.LVL620:
 4291 04e6 415D     		popq	%r13
 4292              		.cfi_def_cfa_offset 24
 4293 04e8 415E     		popq	%r14
 4294              		.cfi_def_cfa_offset 16
 4295              	.LVL621:
 4296 04ea 415F     		popq	%r15
 4297              		.cfi_def_cfa_offset 8
 4298              	.LVL622:
 4299 04ec C3       		ret
 4300              	.LVL623:
 4301              	.L77:
 4302              		.cfi_restore_state
1522:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 4303              		.loc 1 1522 0
 4304 04ed 488D5C24 		leaq	80(%rsp), %rbx
 4304      50
 4305              	.LVL624:
 4306 04f2 E955FBFF 		jmp	.L73
 4306      FF
 4307              	.LVL625:
 4308              	.L82:
 4309              		.loc 1 1597 0
 4310 04f7 E8000000 		call	__stack_chk_fail
 4310      00
 4311              	.LVL626:
 4312              		.cfi_endproc
 4313              	.LFE72:
 4315              		.section	.text.unlikely.jpeg_fdct_12x12
 4316              	.LCOLDE11:
 4317              		.section	.text.jpeg_fdct_12x12
 4318              	.LHOTE11:
 4319              		.section	.text.unlikely.jpeg_fdct_13x13,"ax",@progbits
 4320              	.LCOLDB12:
 4321              		.section	.text.jpeg_fdct_13x13,"ax",@progbits
 4322              	.LHOTB12:
 4323              		.p2align 4,,15
 4324              		.globl	jpeg_fdct_13x13
 4326              	jpeg_fdct_13x13:
 4327              	.LFB73:
1598:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1599:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1600:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
1601:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 13x13 sample block.
1602:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
1603:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1604:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
1605:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_13x13 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
1606:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 4328              		.loc 1 1606 0
 4329              		.cfi_startproc
 4330              	.LVL627:
 4331 0000 4157     		pushq	%r15
 4332              		.cfi_def_cfa_offset 16
 4333              		.cfi_offset 15, -16
 4334 0002 4156     		pushq	%r14
 4335              		.cfi_def_cfa_offset 24
 4336              		.cfi_offset 14, -24
1607:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
1608:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
1609:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1, z2;
1610:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*5];
1611:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
1612:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
1613:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
1614:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
1615:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
1616:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1617:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
1618:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT.
1619:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/26).
1620:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1621:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1622:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 4337              		.loc 1 1622 0
 4338 0004 4989FE   		movq	%rdi, %r14
1606:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 4339              		.loc 1 1606 0
 4340 0007 4155     		pushq	%r13
 4341              		.cfi_def_cfa_offset 32
 4342              		.cfi_offset 13, -32
 4343 0009 4154     		pushq	%r12
 4344              		.cfi_def_cfa_offset 40
 4345              		.cfi_offset 12, -40
 4346 000b 55       		pushq	%rbp
 4347              		.cfi_def_cfa_offset 48
 4348              		.cfi_offset 6, -48
 4349 000c 53       		pushq	%rbx
 4350              		.cfi_def_cfa_offset 56
 4351              		.cfi_offset 3, -56
 4352 000d 4881EC38 		subq	$312, %rsp
 4352      010000
 4353              		.cfi_def_cfa_offset 368
1606:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 4354              		.loc 1 1606 0
 4355 0014 64488B04 		movq	%fs:40, %rax
 4355      25280000 
 4355      00
 4356 001d 48898424 		movq	%rax, 296(%rsp)
 4356      28010000 
 4357 0025 31C0     		xorl	%eax, %eax
 4358              	.LVL628:
 4359 0027 89D0     		movl	%edx, %eax
 4360 0029 48897C24 		movq	%rdi, 120(%rsp)
 4360      78
 4361 002e 48897424 		movq	%rsi, 112(%rsp)
 4361      70
 4362 0033 48894424 		movq	%rax, 104(%rsp)
 4362      68
1623:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 4363              		.loc 1 1623 0
 4364 0038 C7442408 		movl	$0, 8(%rsp)
 4364      00000000 
 4365 0040 EB0A     		jmp	.L84
 4366              	.LVL629:
 4367              		.p2align 4,,10
 4368 0042 660F1F44 		.p2align 3
 4368      0000
 4369              	.L92:
1624:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
1625:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
1626:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1627:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1628:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[12]);
1630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[11]);
1631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[10]);
1632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[9]);
1633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[8]);
1634:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[7]);
1635:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]);
1636:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1637:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[12]);
1638:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[11]);
1639:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[10]);
1640:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[9]);
1641:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[8]);
1642:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[7]);
1643:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1644:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
1645:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
1646:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6 - 13 * CENTERJSAMPLE);
1647:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 += tmp6;
1648:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 -= tmp6;
1649:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp6;
1650:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 -= tmp6;
1651:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp6;
1652:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp6;
1653:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 -= tmp6;
1654:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
1655:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.373119086)) +   /* c2 */
1656:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp1, FIX(1.058554052)) +   /* c6 */
1657:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp2, FIX(0.501487041)) -   /* c10 */
1658:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp3, FIX(0.170464608)) -   /* c12 */
1659:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp4, FIX(0.803364869)) -   /* c8 */
1660:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp5, FIX(1.252223920)),    /* c4 */
1661:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1662:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 - tmp2, FIX(1.155388986)) - /* (c4+c6)/2 */
1663:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.435816023)) - /* (c2-c10)/2 */
1664:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp1 - tmp5, FIX(0.316450131));  /* (c8-c12)/2 */
1665:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 + tmp2, FIX(0.096834934)) - /* (c4-c6)/2 */
1666:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.937303064)) + /* (c2+c10)/2 */
1667:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp1 + tmp5, FIX(0.486914739));  /* (c8+c12)/2 */
1668:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1669:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(z1 + z2, CONST_BITS);
1670:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS);
1671:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1672:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1673:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1674:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(1.322312651));   /* c3 */
1675:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.163874945));   /* c5 */
1676:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.937797057)) +  /* c7 */
1677:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.338443458));   /* c11 */
1678:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 + tmp2 + tmp3 -
1679:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp10, FIX(2.020082300)) +          /* c3+c5+c7-c1 */
1680:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14, FIX(0.318774355));           /* c9-c11 */
1681:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp14 - tmp15, FIX(0.937797057)) -  /* c7 */
1682:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.338443458));   /* c11 */
1683:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(1.163874945)); /* -c5 */
1684:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 +
1685:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.837223564)) -         /* c5+c9+c11-c3 */
1686:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14, FIX(2.341699410));          /* c1+c7 */
1687:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = MULTIPLY(tmp12 + tmp13, - FIX(0.657217813)); /* -c9 */
1688:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp6 -
1689:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp12, FIX(1.572116027)) +         /* c1+c5-c9-c11 */
1690:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp15, FIX(2.260109708));          /* c3+c7 */
1691:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp5 + tmp6 +
1692:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp13, FIX(2.205608352)) -         /* c3+c5+c9-c7 */
1693:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp15, FIX(1.742345811));          /* c1+c11 */
1694:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1695:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp0, CONST_BITS);
1696:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
1698:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
1699:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1700:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
1701:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1702:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
1703:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 13)
1704:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
1705:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 4370              		.loc 1 1705 0
 4371 0048 4983C620 		addq	$32, %r14
 4372              	.LVL630:
 4373              	.L84:
1625:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4374              		.loc 1 1625 0
 4375 004c 48634424 		movslq	8(%rsp), %rax
 4375      08
 4376 0051 488B7C24 		movq	112(%rsp), %rdi
 4376      70
 4377 0056 488B4C24 		movq	104(%rsp), %rcx
 4377      68
 4378 005b 48030CC7 		addq	(%rdi,%rax,8), %rcx
 4379              	.LVL631:
1629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[11]);
 4380              		.loc 1 1629 0
 4381 005f 440FB679 		movzbl	12(%rcx), %r15d
 4381      0C
1630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[10]);
 4382              		.loc 1 1630 0
 4383 0064 440FB669 		movzbl	11(%rcx), %r13d
 4383      0B
1629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[11]);
 4384              		.loc 1 1629 0
 4385 0069 440FB611 		movzbl	(%rcx), %r10d
1630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[10]);
 4386              		.loc 1 1630 0
 4387 006d 440FB649 		movzbl	1(%rcx), %r9d
 4387      01
1631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[9]);
 4388              		.loc 1 1631 0
 4389 0072 440FB641 		movzbl	2(%rcx), %r8d
 4389      02
 4390 0077 440FB661 		movzbl	10(%rcx), %r12d
 4390      0A
1629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[11]);
 4391              		.loc 1 1629 0
 4392 007c 438D343A 		leal	(%r10,%r15), %esi
1630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[10]);
 4393              		.loc 1 1630 0
 4394 0080 438D1C29 		leal	(%r9,%r13), %ebx
1638:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[10]);
 4395              		.loc 1 1638 0
 4396 0084 4529E9   		subl	%r13d, %r9d
1631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[9]);
 4397              		.loc 1 1631 0
 4398 0087 438D2C20 		leal	(%r8,%r12), %ebp
 4399 008b 44894424 		movl	%r8d, 44(%rsp)
 4399      2C
1637:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[11]);
 4400              		.loc 1 1637 0
 4401 0090 4529FA   		subl	%r15d, %r10d
1629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[11]);
 4402              		.loc 1 1629 0
 4403 0093 4863FE   		movslq	%esi, %rdi
1630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[10]);
 4404              		.loc 1 1630 0
 4405 0096 4863D3   		movslq	%ebx, %rdx
 4406 0099 895C2418 		movl	%ebx, 24(%rsp)
1629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[11]);
 4407              		.loc 1 1629 0
 4408 009d 48897C24 		movq	%rdi, 16(%rsp)
 4408      10
 4409              	.LVL632:
1630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[10]);
 4410              		.loc 1 1630 0
 4411 00a2 48895424 		movq	%rdx, 32(%rsp)
 4411      20
 4412              	.LVL633:
1631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[9]);
 4413              		.loc 1 1631 0
 4414 00a7 4863FD   		movslq	%ebp, %rdi
1632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[8]);
 4415              		.loc 1 1632 0
 4416 00aa 0FB65103 		movzbl	3(%rcx), %edx
1631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[9]);
 4417              		.loc 1 1631 0
 4418 00ae 896C2438 		movl	%ebp, 56(%rsp)
1637:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[11]);
 4419              		.loc 1 1637 0
 4420 00b2 4D63D2   		movslq	%r10d, %r10
 4421              	.LVL634:
1632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[8]);
 4422              		.loc 1 1632 0
 4423 00b5 0FB66909 		movzbl	9(%rcx), %ebp
1633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[7]);
 4424              		.loc 1 1633 0
 4425 00b9 0FB65908 		movzbl	8(%rcx), %ebx
1638:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[10]);
 4426              		.loc 1 1638 0
 4427 00bd 4D63C9   		movslq	%r9d, %r9
 4428              	.LVL635:
1631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[9]);
 4429              		.loc 1 1631 0
 4430 00c0 48897C24 		movq	%rdi, 48(%rsp)
 4430      30
 4431              	.LVL636:
1633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[7]);
 4432              		.loc 1 1633 0
 4433 00c5 0FB67904 		movzbl	4(%rcx), %edi
1632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[8]);
 4434              		.loc 1 1632 0
 4435 00c9 448D1C2A 		leal	(%rdx,%rbp), %r11d
1640:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[8]);
 4436              		.loc 1 1640 0
 4437 00cd 29EA     		subl	%ebp, %edx
 4438 00cf 4863D2   		movslq	%edx, %rdx
1632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[8]);
 4439              		.loc 1 1632 0
 4440 00d2 4963C3   		movslq	%r11d, %rax
 4441 00d5 44895C24 		movl	%r11d, 60(%rsp)
 4441      3C
 4442 00da 48894424 		movq	%rax, 64(%rsp)
 4442      40
 4443              	.LVL637:
1633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[7]);
 4444              		.loc 1 1633 0
 4445 00df 8D041F   		leal	(%rdi,%rbx), %eax
1641:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[7]);
 4446              		.loc 1 1641 0
 4447 00e2 29DF     		subl	%ebx, %edi
 4448 00e4 4863FF   		movslq	%edi, %rdi
1633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[7]);
 4449              		.loc 1 1633 0
 4450 00e7 4C63D8   		movslq	%eax, %r11
 4451 00ea 89442450 		movl	%eax, 80(%rsp)
1634:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]);
 4452              		.loc 1 1634 0
 4453 00ee 0FB64105 		movzbl	5(%rcx), %eax
1633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[7]);
 4454              		.loc 1 1633 0
 4455 00f2 4C895C24 		movq	%r11, 72(%rsp)
 4455      48
 4456              	.LVL638:
1634:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]);
 4457              		.loc 1 1634 0
 4458 00f7 440FB659 		movzbl	7(%rcx), %r11d
 4458      07
 4459 00fc 468D0418 		leal	(%rax,%r11), %r8d
1642:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4460              		.loc 1 1642 0
 4461 0100 4429D8   		subl	%r11d, %eax
 4462 0103 4898     		cltq
1634:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]);
 4463              		.loc 1 1634 0
 4464 0105 44894424 		movl	%r8d, 84(%rsp)
 4464      54
 4465 010a 4D63C0   		movslq	%r8d, %r8
 4466 010d 4C894424 		movq	%r8, 88(%rsp)
 4466      58
 4467              	.LVL639:
1635:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4468              		.loc 1 1635 0
 4469 0112 440FB641 		movzbl	6(%rcx), %r8d
 4469      06
 4470 0117 4C89C1   		movq	%r8, %rcx
 4471              	.LVL640:
 4472 011a 4C894424 		movq	%r8, 96(%rsp)
 4472      60
 4473              	.LVL641:
1639:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[9]);
 4474              		.loc 1 1639 0
 4475 011f 448B4424 		movl	44(%rsp), %r8d
 4475      2C
1645:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6 - 13 * CENTERJSAMPLE);
 4476              		.loc 1 1645 0
 4477 0124 8D8C0E80 		leal	-1664(%rsi,%rcx), %ecx
 4477      F9FFFF
 4478 012b 034C2418 		addl	24(%rsp), %ecx
 4479 012f 034C2438 		addl	56(%rsp), %ecx
1648:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp6;
 4480              		.loc 1 1648 0
 4481 0133 488B7424 		movq	16(%rsp), %rsi
 4481      10
1645:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6 - 13 * CENTERJSAMPLE);
 4482              		.loc 1 1645 0
 4483 0138 034C243C 		addl	60(%rsp), %ecx
1649:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 -= tmp6;
 4484              		.loc 1 1649 0
 4485 013c 4C8B5C24 		movq	32(%rsp), %r11
 4485      20
1639:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[9]);
 4486              		.loc 1 1639 0
 4487 0141 4529E0   		subl	%r12d, %r8d
1645:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6 - 13 * CENTERJSAMPLE);
 4488              		.loc 1 1645 0
 4489 0144 034C2450 		addl	80(%rsp), %ecx
1650:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp6;
 4490              		.loc 1 1650 0
 4491 0148 488B5C24 		movq	48(%rsp), %rbx
 4491      30
1639:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[9]);
 4492              		.loc 1 1639 0
 4493 014d 4D63C0   		movslq	%r8d, %r8
 4494              	.LVL642:
1645:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6 - 13 * CENTERJSAMPLE);
 4495              		.loc 1 1645 0
 4496 0150 034C2454 		addl	84(%rsp), %ecx
1651:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp6;
 4497              		.loc 1 1651 0
 4498 0154 488B6C24 		movq	64(%rsp), %rbp
 4498      40
1652:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 -= tmp6;
 4499              		.loc 1 1652 0
 4500 0159 4C8B6424 		movq	72(%rsp), %r12
 4500      48
1653:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 4501              		.loc 1 1653 0
 4502 015e 4C8B6C24 		movq	88(%rsp), %r13
 4502      58
1645:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6 - 13 * CENTERJSAMPLE);
 4503              		.loc 1 1645 0
 4504 0163 41890E   		movl	%ecx, (%r14)
 4505              	.LVL643:
1647:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 -= tmp6;
 4506              		.loc 1 1647 0
 4507 0166 488B4C24 		movq	96(%rsp), %rcx
 4507      60
 4508 016b 4801C9   		addq	%rcx, %rcx
 4509              	.LVL644:
1648:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp6;
 4510              		.loc 1 1648 0
 4511 016e 4829CE   		subq	%rcx, %rsi
 4512              	.LVL645:
1649:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 -= tmp6;
 4513              		.loc 1 1649 0
 4514 0171 4929CB   		subq	%rcx, %r11
 4515              	.LVL646:
1650:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp6;
 4516              		.loc 1 1650 0
 4517 0174 4829CB   		subq	%rcx, %rbx
 4518              	.LVL647:
1653:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 4519              		.loc 1 1653 0
 4520 0177 4929CD   		subq	%rcx, %r13
1651:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp6;
 4521              		.loc 1 1651 0
 4522 017a 4829CD   		subq	%rcx, %rbp
 4523              	.LVL648:
1652:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 -= tmp6;
 4524              		.loc 1 1652 0
 4525 017d 4929CC   		subq	%rcx, %r12
 4526              	.LVL649:
1654:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.373119086)) +   /* c2 */
 4527              		.loc 1 1654 0
 4528 0180 4C69FEF1 		imulq	$11249, %rsi, %r15
 4528      2B0000
 4529 0187 4969CBE0 		imulq	$8672, %r11, %rcx
 4529      210000
 4530              	.LVL650:
 4531 018e 4901CF   		addq	%rcx, %r15
 4532 0191 4869CB0C 		imulq	$4108, %rbx, %rcx
 4532      100000
 4533 0198 4C01F9   		addq	%r15, %rcx
 4534 019b 4C69FD8C 		imulq	$-1396, %rbp, %r15
 4534      FAFFFF
 4535 01a2 4901CF   		addq	%rcx, %r15
 4536 01a5 4969CC4B 		imulq	$-6581, %r12, %rcx
 4536      E6FFFF
 4537 01ac 4C01F9   		addq	%r15, %rcx
 4538 01af 4D69FDEE 		imulq	$-10258, %r13, %r15
 4538      D7FFFF
 4539 01b6 4A8D8C39 		leaq	4096(%rcx,%r15), %rcx
 4539      00100000 
1662:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.435816023)) - /* (c2-c10)/2 */
 4540              		.loc 1 1662 0
 4541 01be 4989F7   		movq	%rsi, %r15
 4542 01c1 4929DF   		subq	%rbx, %r15
1654:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.373119086)) +   /* c2 */
 4543              		.loc 1 1654 0
 4544 01c4 48C1F90D 		sarq	$13, %rcx
 4545 01c8 41894E08 		movl	%ecx, 8(%r14)
1662:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.435816023)) - /* (c2-c10)/2 */
 4546              		.loc 1 1662 0
 4547 01cc 4889E9   		movq	%rbp, %rcx
 4548 01cf 4D69FFF9 		imulq	$9465, %r15, %r15
 4548      240000
 4549 01d6 4C29E1   		subq	%r12, %rcx
1665:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.937303064)) + /* (c2+c10)/2 */
 4550              		.loc 1 1665 0
 4551 01d9 4801DE   		addq	%rbx, %rsi
 4552              	.LVL651:
1662:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.435816023)) - /* (c2-c10)/2 */
 4553              		.loc 1 1662 0
 4554 01dc 4869C90E 		imulq	$-3570, %rcx, %rcx
 4554      F2FFFF
1665:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.937303064)) + /* (c2+c10)/2 */
 4555              		.loc 1 1665 0
 4556 01e3 4C01E5   		addq	%r12, %rbp
 4557              	.LVL652:
1674:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.163874945));   /* c5 */
 4558              		.loc 1 1674 0
 4559 01e6 4F8D240A 		leaq	(%r10,%r9), %r12
 4560              	.LVL653:
1665:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.937303064)) + /* (c2+c10)/2 */
 4561              		.loc 1 1665 0
 4562 01ea 4869DE19 		imulq	$793, %rsi, %rbx
 4562      030000
 4563              	.LVL654:
1662:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.435816023)) - /* (c2-c10)/2 */
 4564              		.loc 1 1662 0
 4565 01f1 4901CF   		addq	%rcx, %r15
 4566 01f4 4C89D9   		movq	%r11, %rcx
1665:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.937303064)) + /* (c2+c10)/2 */
 4567              		.loc 1 1665 0
 4568 01f7 4D01EB   		addq	%r13, %r11
 4569              	.LVL655:
 4570 01fa 4869ED02 		imulq	$-7678, %rbp, %rbp
 4570      E2FFFF
1662:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.435816023)) - /* (c2-c10)/2 */
 4571              		.loc 1 1662 0
 4572 0201 4C29E9   		subq	%r13, %rcx
 4573              	.LVL656:
 4574 0204 4869C9E0 		imulq	$-2592, %rcx, %rcx
 4574      F5FFFF
1665:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.937303064)) + /* (c2+c10)/2 */
 4575              		.loc 1 1665 0
 4576 020b 4D69DB95 		imulq	$3989, %r11, %r11
 4576      0F0000
 4577 0212 488D342B 		leaq	(%rbx,%rbp), %rsi
1675:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.937797057)) +  /* c7 */
 4578              		.loc 1 1675 0
 4579 0216 4B8D2C02 		leaq	(%r10,%r8), %rbp
1683:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 +
 4580              		.loc 1 1683 0
 4581 021a 498D1C11 		leaq	(%r9,%rdx), %rbx
1662:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.435816023)) - /* (c2-c10)/2 */
 4582              		.loc 1 1662 0
 4583 021e 4C01F9   		addq	%r15, %rcx
 4584              	.LVL657:
1665:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.937303064)) + /* (c2+c10)/2 */
 4585              		.loc 1 1665 0
 4586 0221 4901F3   		addq	%rsi, %r11
 4587              	.LVL658:
1669:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS);
 4588              		.loc 1 1669 0
 4589 0224 4A8DB419 		leaq	4096(%rcx,%r11), %rsi
 4589      00100000 
1670:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4590              		.loc 1 1670 0
 4591 022c 4C29D9   		subq	%r11, %rcx
 4592              	.LVL659:
 4593 022f 4881C100 		addq	$4096, %rcx
 4593      100000
 4594 0236 48C1F90D 		sarq	$13, %rcx
1669:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS);
 4595              		.loc 1 1669 0
 4596 023a 48C1FE0D 		sarq	$13, %rsi
1670:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4597              		.loc 1 1670 0
 4598 023e 41894E18 		movl	%ecx, 24(%r14)
1676:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.338443458));   /* c11 */
 4599              		.loc 1 1676 0
 4600 0242 498D0C12 		leaq	(%r10,%rdx), %rcx
1669:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS);
 4601              		.loc 1 1669 0
 4602 0246 41897610 		movl	%esi, 16(%r14)
1674:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(1.163874945));   /* c5 */
 4603              		.loc 1 1674 0
 4604 024a 4D69E450 		imulq	$10832, %r12, %r12
 4604      2A0000
 4605              	.LVL660:
1676:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.338443458));   /* c11 */
 4606              		.loc 1 1676 0
 4607 0251 4869F102 		imulq	$7682, %rcx, %rsi
 4607      1E0000
 4608 0258 488D0C07 		leaq	(%rdi,%rax), %rcx
1675:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.937797057)) +  /* c7 */
 4609              		.loc 1 1675 0
 4610 025c 4869ED3E 		imulq	$9534, %rbp, %rbp
 4610      250000
 4611              	.LVL661:
1676:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.338443458));   /* c11 */
 4612              		.loc 1 1676 0
 4613 0263 4869C9D5 		imulq	$2773, %rcx, %rcx
 4613      0A0000
1695:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 4614              		.loc 1 1695 0
 4615 026a 4D8D2C2C 		leaq	(%r12,%rbp), %r13
 4616              	.LVL662:
 4617 026e 4D69D25B 		imulq	$-16549, %r10, %r10
 4617      BFFFFF
 4618              	.LVL663:
1683:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 +
 4619              		.loc 1 1683 0
 4620 0275 4869DBC2 		imulq	$-9534, %rbx, %rbx
 4620      DAFFFF
1676:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.338443458));   /* c11 */
 4621              		.loc 1 1676 0
 4622 027c 4801F1   		addq	%rsi, %rcx
 4623              	.LVL664:
1681:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.338443458));   /* c11 */
 4624              		.loc 1 1681 0
 4625 027f 4889FE   		movq	%rdi, %rsi
 4626 0282 4829C6   		subq	%rax, %rsi
1695:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 4627              		.loc 1 1695 0
 4628 0285 4901CD   		addq	%rcx, %r13
1681:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.338443458));   /* c11 */
 4629              		.loc 1 1681 0
 4630 0288 4C69DE02 		imulq	$7682, %rsi, %r11
 4630      1E0000
 4631              	.LVL665:
 4632 028f 4B8D3401 		leaq	(%r9,%r8), %rsi
1695:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 4633              		.loc 1 1695 0
 4634 0293 4D01EA   		addq	%r13, %r10
 4635 0296 4C69EF33 		imulq	$2611, %rdi, %r13
 4635      0A0000
1681:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.338443458));   /* c11 */
 4636              		.loc 1 1681 0
 4637 029d 4869F62B 		imulq	$-2773, %rsi, %rsi
 4637      F5FFFF
1695:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 4638              		.loc 1 1695 0
 4639 02a4 4F8D942A 		leaq	4096(%r10,%r13), %r10
 4639      00100000 
1681:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.338443458));   /* c11 */
 4640              		.loc 1 1681 0
 4641 02ac 4C01DE   		addq	%r11, %rsi
 4642              	.LVL666:
1687:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp6 -
 4643              		.loc 1 1687 0
 4644 02af 4D8D1C10 		leaq	(%r8,%rdx), %r11
 4645 02b3 4D69DBF8 		imulq	$-5384, %r11, %r11
 4645      EAFFFF
 4646              	.LVL667:
1695:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 4647              		.loc 1 1695 0
 4648 02ba 49C1FA0D 		sarq	$13, %r10
1700:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4649              		.loc 1 1700 0
 4650 02be 83442408 		addl	$1, 8(%rsp)
 4650      01
 4651              	.LVL668:
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 4652              		.loc 1 1697 0
 4653 02c3 4D69C0B1 		imulq	$-12879, %r8, %r8
 4653      CDFFFF
 4654              	.LVL669:
1695:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 4655              		.loc 1 1695 0
 4656 02ca 45895604 		movl	%r10d, 4(%r14)
1696:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 4657              		.loc 1 1696 0
 4658 02ce 4C8D141E 		leaq	(%rsi,%rbx), %r10
1698:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4659              		.loc 1 1698 0
 4660 02d2 4869D294 		imulq	$18068, %rdx, %rdx
 4660      460000
 4661              	.LVL670:
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 4662              		.loc 1 1697 0
 4663 02d9 4C01DE   		addq	%r11, %rsi
 4664              	.LVL671:
1698:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4665              		.loc 1 1698 0
 4666 02dc 4901DB   		addq	%rbx, %r11
 4667              	.LVL672:
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 4668              		.loc 1 1697 0
 4669 02df 4901F0   		addq	%rsi, %r8
 4670 02e2 4869F053 		imulq	$18515, %rax, %rsi
 4670      480000
1698:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4671              		.loc 1 1698 0
 4672 02e9 4C01DA   		addq	%r11, %rdx
 4673 02ec 4869C03F 		imulq	$-14273, %rax, %rax
 4673      C8FFFF
 4674              	.LVL673:
1696:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 4675              		.loc 1 1696 0
 4676 02f3 4D69C9CB 		imulq	$6859, %r9, %r9
 4676      1A0000
 4677              	.LVL674:
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 4678              		.loc 1 1697 0
 4679 02fa 4901F0   		addq	%rsi, %r8
1698:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4680              		.loc 1 1698 0
 4681 02fd 4801D0   		addq	%rdx, %rax
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 4682              		.loc 1 1697 0
 4683 0300 4A8DB405 		leaq	4096(%rbp,%r8), %rsi
 4683      00100000 
1696:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 4684              		.loc 1 1696 0
 4685 0308 4869FF11 		imulq	$-19183, %rdi, %rdi
 4685      B5FFFF
 4686              	.LVL675:
1698:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4687              		.loc 1 1698 0
 4688 030f 488D8401 		leaq	4096(%rcx,%rax), %rax
 4688      00100000 
1696:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 4689              		.loc 1 1696 0
 4690 0317 4D01D1   		addq	%r10, %r9
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 4691              		.loc 1 1697 0
 4692 031a 48C1FE0D 		sarq	$13, %rsi
1698:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4693              		.loc 1 1698 0
 4694 031e 48C1F80D 		sarq	$13, %rax
1697:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 4695              		.loc 1 1697 0
 4696 0322 41897614 		movl	%esi, 20(%r14)
1698:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4697              		.loc 1 1698 0
 4698 0326 4189461C 		movl	%eax, 28(%r14)
1700:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4699              		.loc 1 1700 0
 4700 032a 8B442408 		movl	8(%rsp), %eax
 4701              	.LVL676:
1696:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 4702              		.loc 1 1696 0
 4703 032e 4C01CF   		addq	%r9, %rdi
 4704 0331 498DBC3C 		leaq	4096(%r12,%rdi), %rdi
 4704      00100000 
 4705 0339 48C1FF0D 		sarq	$13, %rdi
1702:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 13)
 4706              		.loc 1 1702 0
 4707 033d 83F808   		cmpl	$8, %eax
1696:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 4708              		.loc 1 1696 0
 4709 0340 41897E0C 		movl	%edi, 12(%r14)
1702:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 13)
 4710              		.loc 1 1702 0
 4711 0344 0F841403 		je	.L88
 4711      0000
1703:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 4712              		.loc 1 1703 0
 4713 034a 83F80D   		cmpl	$13, %eax
 4714 034d 0F85F5FC 		jne	.L92
 4714      FFFF
1706:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
1707:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
1708:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1709:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1710:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
1711:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
1712:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/13)**2 = 64/169, which we partially
1713:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers and final shifting:
1714:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/26) * 128/169.
1715:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1716:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1717:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
1718:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
1719:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 4715              		.loc 1 1719 0
 4716 0353 488D8424 		leaq	160(%rsp), %rax
 4716      A0000000 
 4717              	.LVL677:
 4718 035b 4C8DBC24 		leaq	128(%rsp), %r15
 4718      80000000 
 4719              	.LVL678:
 4720 0363 48894424 		movq	%rax, 24(%rsp)
 4720      18
 4721 0368 488B4424 		movq	120(%rsp), %rax
 4721      78
 4722              	.LVL679:
 4723 036d 0F1F00   		.p2align 4,,10
 4724              		.p2align 3
 4725              	.L86:
1720:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1721:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*4];
 4726              		.loc 1 1722 0 discriminator 3
 4727 0370 8B38     		movl	(%rax), %edi
 4728 0372 418BAF80 		movl	128(%r15), %ebp
 4728      000000
1723:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*3];
 4729              		.loc 1 1723 0 discriminator 3
 4730 0379 8B7020   		movl	32(%rax), %esi
 4731 037c 458B7760 		movl	96(%r15), %r14d
1724:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*2];
 4732              		.loc 1 1724 0 discriminator 3
 4733 0380 448B4040 		movl	64(%rax), %r8d
 4734 0384 458B4F40 		movl	64(%r15), %r9d
1722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*3];
 4735              		.loc 1 1722 0 discriminator 3
 4736 0388 8D1C2F   		leal	(%rdi,%rbp), %ebx
 4737              	.LVL680:
1725:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*1];
 4738              		.loc 1 1725 0 discriminator 3
 4739 038b 448B6860 		movl	96(%rax), %r13d
 4740 038f 45036F20 		addl	32(%r15), %r13d
1723:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*2];
 4741              		.loc 1 1723 0 discriminator 3
 4742 0393 468D1C36 		leal	(%rsi,%r14), %r11d
1726:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*0];
 4743              		.loc 1 1726 0 discriminator 3
 4744 0397 8B888000 		movl	128(%rax), %ecx
 4744      0000
 4745 039d 41030F   		addl	(%r15), %ecx
1724:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*1];
 4746              		.loc 1 1724 0 discriminator 3
 4747 03a0 478D1408 		leal	(%r8,%r9), %r10d
1722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*3];
 4748              		.loc 1 1722 0 discriminator 3
 4749 03a4 4863DB   		movslq	%ebx, %rbx
 4750              	.LVL681:
1727:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*7];
 4751              		.loc 1 1727 0 discriminator 3
 4752 03a7 8B90A000 		movl	160(%rax), %edx
 4752      0000
1723:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*2];
 4753              		.loc 1 1723 0 discriminator 3
 4754 03ad 4D63DB   		movslq	%r11d, %r11
 4755              	.LVL682:
 4756              		.loc 1 1727 0 discriminator 3
 4757 03b0 0390E000 		addl	224(%rax), %edx
 4757      0000
1728:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6];
1729:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1730:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*4];
 4758              		.loc 1 1730 0 discriminator 3
 4759 03b6 29EF     		subl	%ebp, %edi
1731:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*3];
1732:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*2];
1733:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*1];
1734:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*0];
1735:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*7];
1736:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1737:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 4760              		.loc 1 1737 0 discriminator 3
 4761 03b8 4A8D2C1B 		leaq	(%rbx,%r11), %rbp
1724:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*1];
 4762              		.loc 1 1724 0 discriminator 3
 4763 03bc 4D63D2   		movslq	%r10d, %r10
 4764              	.LVL683:
1728:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6];
 4765              		.loc 1 1728 0 discriminator 3
 4766 03bf 4C63A0C0 		movslq	192(%rax), %r12
 4766      000000
1725:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*0];
 4767              		.loc 1 1725 0 discriminator 3
 4768 03c6 4D63ED   		movslq	%r13d, %r13
 4769              	.LVL684:
1726:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*7];
 4770              		.loc 1 1726 0 discriminator 3
 4771 03c9 4863C9   		movslq	%ecx, %rcx
 4772              	.LVL685:
1731:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*2];
 4773              		.loc 1 1731 0 discriminator 3
 4774 03cc 4429F6   		subl	%r14d, %esi
 4775              		.loc 1 1737 0 discriminator 3
 4776 03cf 4C01D5   		addq	%r10, %rbp
1730:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*3];
 4777              		.loc 1 1730 0 discriminator 3
 4778 03d2 4863FF   		movslq	%edi, %rdi
1731:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*2];
 4779              		.loc 1 1731 0 discriminator 3
 4780 03d5 4863F6   		movslq	%esi, %rsi
 4781              		.loc 1 1737 0 discriminator 3
 4782 03d8 4C01ED   		addq	%r13, %rbp
1727:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6];
 4783              		.loc 1 1727 0 discriminator 3
 4784 03db 4863D2   		movslq	%edx, %rdx
 4785              	.LVL686:
1731:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*2];
 4786              		.loc 1 1731 0 discriminator 3
 4787 03de 48897424 		movq	%rsi, 8(%rsp)
 4787      08
 4788              	.LVL687:
 4789              		.loc 1 1737 0 discriminator 3
 4790 03e3 4801CD   		addq	%rcx, %rbp
1735:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4791              		.loc 1 1735 0 discriminator 3
 4792 03e6 8BB0A000 		movl	160(%rax), %esi
 4792      0000
1730:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*3];
 4793              		.loc 1 1730 0 discriminator 3
 4794 03ec 48897C24 		movq	%rdi, 16(%rsp)
 4794      10
 4795              	.LVL688:
 4796              		.loc 1 1737 0 discriminator 3
 4797 03f1 4801D5   		addq	%rdx, %rbp
1735:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4798              		.loc 1 1735 0 discriminator 3
 4799 03f4 2BB0E000 		subl	224(%rax), %esi
 4799      0000
1733:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*0];
 4800              		.loc 1 1733 0 discriminator 3
 4801 03fa 8B7860   		movl	96(%rax), %edi
 4802              		.loc 1 1737 0 discriminator 3
 4803 03fd 4C01E5   		addq	%r12, %rbp
1738:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6,
1739:fltk-1.3.4-1/jpeg/jfdctint.c **** 		       FIX(0.757396450)),          /* 128/169 */
1740:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1741:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 += tmp6;
 4804              		.loc 1 1741 0 discriminator 3
 4805 0400 4D01E4   		addq	%r12, %r12
 4806              	.LVL689:
1733:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*0];
 4807              		.loc 1 1733 0 discriminator 3
 4808 0403 412B7F20 		subl	32(%r15), %edi
1737:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6,
 4809              		.loc 1 1737 0 discriminator 3
 4810 0407 4869ED3D 		imulq	$6205, %rbp, %rbp
 4810      180000
1742:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 -= tmp6;
 4811              		.loc 1 1742 0 discriminator 3
 4812 040e 4C29E3   		subq	%r12, %rbx
 4813              	.LVL690:
1743:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 -= tmp6;
 4814              		.loc 1 1743 0 discriminator 3
 4815 0411 4D29E3   		subq	%r12, %r11
 4816              	.LVL691:
1744:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 -= tmp6;
 4817              		.loc 1 1744 0 discriminator 3
 4818 0414 4D29E2   		subq	%r12, %r10
 4819              	.LVL692:
1745:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 -= tmp6;
1746:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp6;
 4820              		.loc 1 1746 0 discriminator 3
 4821 0417 4C29E1   		subq	%r12, %rcx
 4822              	.LVL693:
1747:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 -= tmp6;
 4823              		.loc 1 1747 0 discriminator 3
 4824 041a 4C29E2   		subq	%r12, %rdx
 4825              	.LVL694:
1732:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*1];
 4826              		.loc 1 1732 0 discriminator 3
 4827 041d 4529C8   		subl	%r9d, %r8d
 4828              	.LVL695:
1734:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*7];
 4829              		.loc 1 1734 0 discriminator 3
 4830 0420 448B8880 		movl	128(%rax), %r9d
 4830      000000
 4831              	.LVL696:
 4832 0427 452B0F   		subl	(%r15), %r9d
1733:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*0];
 4833              		.loc 1 1733 0 discriminator 3
 4834 042a 4863FF   		movslq	%edi, %rdi
1735:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4835              		.loc 1 1735 0 discriminator 3
 4836 042d 4863F6   		movslq	%esi, %rsi
1732:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*1];
 4837              		.loc 1 1732 0 discriminator 3
 4838 0430 4D63C0   		movslq	%r8d, %r8
 4839              	.LVL697:
1737:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1 + tmp2 + tmp3 + tmp4 + tmp5 + tmp6,
 4840              		.loc 1 1737 0 discriminator 3
 4841 0433 4881C500 		addq	$8192, %rbp
 4841      200000
 4842 043a 48C1FD0E 		sarq	$14, %rbp
 4843 043e 8928     		movl	%ebp, (%rax)
 4844              	.LVL698:
1745:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp6;
 4845              		.loc 1 1745 0 discriminator 3
 4846 0440 4C89ED   		movq	%r13, %rbp
1734:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*7];
 4847              		.loc 1 1734 0 discriminator 3
 4848 0443 4D63C9   		movslq	%r9d, %r9
 4849              	.LVL699:
1745:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 -= tmp6;
 4850              		.loc 1 1745 0 discriminator 3
 4851 0446 4C29E5   		subq	%r12, %rbp
 4852              	.LVL700:
1748:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 4853              		.loc 1 1748 0 discriminator 3
 4854 0449 4C69EB48 		imulq	$8520, %rbx, %r13
 4854      210000
 4855 0450 4D69E3A8 		imulq	$6568, %r11, %r12
 4855      190000
 4856              	.LVL701:
 4857 0457 4D01E5   		addq	%r12, %r13
 4858 045a 4D69E228 		imulq	$3112, %r10, %r12
 4858      0C0000
 4859 0461 4D01E5   		addq	%r12, %r13
 4860 0464 4C69E5DE 		imulq	$-1058, %rbp, %r12
 4860      FBFFFF
 4861 046b 4D01E5   		addq	%r12, %r13
 4862 046e 4C69E187 		imulq	$-4985, %rcx, %r12
 4862      ECFFFF
 4863 0475 4D01EC   		addq	%r13, %r12
 4864 0478 4C69EAA6 		imulq	$-7770, %rdx, %r13
 4864      E1FFFF
 4865 047f 4F8DA42C 		leaq	8192(%r12,%r13), %r12
 4865      00200000 
1749:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.039995521)) +   /* c2 */
1750:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp1, FIX(0.801745081)) +   /* c6 */
1751:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp2, FIX(0.379824504)) -   /* c10 */
1752:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp3, FIX(0.129109289)) -   /* c12 */
1753:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp4, FIX(0.608465700)) -   /* c8 */
1754:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp5, FIX(0.948429952)),    /* c4 */
1755:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1756:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 - tmp2, FIX(0.875087516)) - /* (c4+c6)/2 */
 4866              		.loc 1 1756 0 discriminator 3
 4867 0487 4989DD   		movq	%rbx, %r13
 4868 048a 4D29D5   		subq	%r10, %r13
1757:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.330085509)) - /* (c2-c10)/2 */
1758:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp1 - tmp5, FIX(0.239678205));  /* (c8-c12)/2 */
1759:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 + tmp2, FIX(0.073342435)) - /* (c4-c6)/2 */
 4869              		.loc 1 1759 0 discriminator 3
 4870 048d 4901DA   		addq	%rbx, %r10
 4871              	.LVL702:
1748:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.039995521)) +   /* c2 */
 4872              		.loc 1 1748 0 discriminator 3
 4873 0490 49C1FC0E 		sarq	$14, %r12
1756:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.330085509)) - /* (c2-c10)/2 */
 4874              		.loc 1 1756 0 discriminator 3
 4875 0494 4D89EE   		movq	%r13, %r14
1748:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.039995521)) +   /* c2 */
 4876              		.loc 1 1748 0 discriminator 3
 4877 0497 44896040 		movl	%r12d, 64(%rax)
 4878              	.LVL703:
1756:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.330085509)) - /* (c2-c10)/2 */
 4879              		.loc 1 1756 0 discriminator 3
 4880 049b 4D89EC   		movq	%r13, %r12
 4881 049e 49C1E60A 		salq	$10, %r14
 4882 04a2 49C1E40D 		salq	$13, %r12
 4883 04a6 4D29F4   		subq	%r14, %r12
 4884 04a9 4989EE   		movq	%rbp, %r14
 4885 04ac 4929CE   		subq	%rcx, %r14
 4886 04af 4D01E5   		addq	%r12, %r13
 4887              		.loc 1 1759 0 discriminator 3
 4888 04b2 4801E9   		addq	%rbp, %rcx
 4889              	.LVL704:
1756:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.330085509)) - /* (c2-c10)/2 */
 4890              		.loc 1 1756 0 discriminator 3
 4891 04b5 4D69F670 		imulq	$-2704, %r14, %r14
 4891      F5FFFF
 4892              		.loc 1 1759 0 discriminator 3
 4893 04bc 4D69D259 		imulq	$601, %r10, %r10
 4893      020000
 4894 04c3 4869C948 		imulq	$-5816, %rcx, %rcx
 4894      E9FFFF
1756:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.330085509)) - /* (c2-c10)/2 */
 4895              		.loc 1 1756 0 discriminator 3
 4896 04ca 4D01F5   		addq	%r14, %r13
 4897 04cd 4D89DE   		movq	%r11, %r14
 4898 04d0 4929D6   		subq	%rdx, %r14
 4899              		.loc 1 1759 0 discriminator 3
 4900 04d3 4C01DA   		addq	%r11, %rdx
 4901              	.LVL705:
1760:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.709910013)) + /* (c2+c10)/2 */
1761:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp1 + tmp5, FIX(0.368787494));  /* (c8+c12)/2 */
1762:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1763:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(z1 + z2, CONST_BITS+1);
1764:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS+1);
1765:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1766:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1767:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(1.001514908));   /* c3 */
 4902              		.loc 1 1768 0 discriminator 3
 4903 04d6 4C8B5C24 		movq	8(%rsp), %r11
 4903      08
 4904              	.LVL706:
1756:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.330085509)) - /* (c2-c10)/2 */
 4905              		.loc 1 1756 0 discriminator 3
 4906 04db 4D69F655 		imulq	$-1963, %r14, %r14
 4906      F8FFFF
1759:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.709910013)) + /* (c2+c10)/2 */
 4907              		.loc 1 1759 0 discriminator 3
 4908 04e2 4C01D1   		addq	%r10, %rcx
 4909 04e5 4869D2CD 		imulq	$3021, %rdx, %rdx
 4909      0B0000
1769:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(0.881514751));   /* c5 */
1770:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.710284161)) +  /* c7 */
1771:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.256335874));   /* c11 */
1772:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 + tmp2 + tmp3 -
1773:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp10, FIX(1.530003162)) +          /* c3+c5+c7-c1 */
1774:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14, FIX(0.241438564));           /* c9-c11 */
1775:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp14 - tmp15, FIX(0.710284161)) -  /* c7 */
1776:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.256335874));   /* c11 */
1777:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = MULTIPLY(tmp11 + tmp13, - FIX(0.881514751)); /* -c5 */
 4910              		.loc 1 1777 0 discriminator 3
 4911 04ec 4C89DB   		movq	%r11, %rbx
 4912              	.LVL707:
1756:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 - tmp4, FIX(0.330085509)) - /* (c2-c10)/2 */
 4913              		.loc 1 1756 0 discriminator 3
 4914 04ef 4D01F5   		addq	%r14, %r13
 4915              	.LVL708:
1768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(0.881514751));   /* c5 */
 4916              		.loc 1 1768 0 discriminator 3
 4917 04f2 4C8B7424 		movq	16(%rsp), %r14
 4917      10
1759:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp3 + tmp4, FIX(0.709910013)) + /* (c2+c10)/2 */
 4918              		.loc 1 1759 0 discriminator 3
 4919 04f7 4801CA   		addq	%rcx, %rdx
 4920              	.LVL709:
1763:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS+1);
 4921              		.loc 1 1763 0 discriminator 3
 4922 04fa 498D8C15 		leaq	8192(%r13,%rdx), %rcx
 4922      00200000 
1764:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4923              		.loc 1 1764 0 discriminator 3
 4924 0502 4929D5   		subq	%rdx, %r13
 4925              	.LVL710:
1770:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.256335874));   /* c11 */
 4926              		.loc 1 1770 0 discriminator 3
 4927 0505 498D1431 		leaq	(%r9,%rsi), %rdx
 4928              	.LVL711:
 4929 0509 4D8D143E 		leaq	(%r14,%rdi), %r10
 4930              	.LVL712:
1769:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.710284161)) +  /* c7 */
 4931              		.loc 1 1769 0 discriminator 3
 4932 050d 4B8D2C06 		leaq	(%r14,%r8), %rbp
 4933              	.LVL713:
1768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(0.881514751));   /* c5 */
 4934              		.loc 1 1768 0 discriminator 3
 4935 0511 4D89F4   		movq	%r14, %r12
1770:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.256335874));   /* c11 */
 4936              		.loc 1 1770 0 discriminator 3
 4937 0514 4869D234 		imulq	$2100, %rdx, %rdx
 4937      080000
1768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(0.881514751));   /* c5 */
 4938              		.loc 1 1768 0 discriminator 3
 4939 051b 4D01DC   		addq	%r11, %r12
1764:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4940              		.loc 1 1764 0 discriminator 3
 4941 051e 4981C500 		addq	$8192, %r13
 4941      200000
1770:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.256335874));   /* c11 */
 4942              		.loc 1 1770 0 discriminator 3
 4943 0525 4D69D2BB 		imulq	$5819, %r10, %r10
 4943      160000
1763:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS+1);
 4944              		.loc 1 1763 0 discriminator 3
 4945 052c 48C1F90E 		sarq	$14, %rcx
1764:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4946              		.loc 1 1764 0 discriminator 3
 4947 0530 49C1FD0E 		sarq	$14, %r13
1768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 + tmp12, FIX(0.881514751));   /* c5 */
 4948              		.loc 1 1768 0 discriminator 3
 4949 0534 4D69E40C 		imulq	$8204, %r12, %r12
 4949      200000
 4950              	.LVL714:
1763:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM) DESCALE(z1 - z2, CONST_BITS+1);
 4951              		.loc 1 1763 0 discriminator 3
 4952 053b 89888000 		movl	%ecx, 128(%rax)
 4952      0000
 4953              	.LVL715:
1764:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 4954              		.loc 1 1764 0 discriminator 3
 4955 0541 4489A8C0 		movl	%r13d, 192(%rax)
 4955      000000
 4956              	.LVL716:
1770:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14 + tmp15, FIX(0.256335874));   /* c11 */
 4957              		.loc 1 1770 0 discriminator 3
 4958 0548 4901D2   		addq	%rdx, %r10
1775:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.256335874));   /* c11 */
 4959              		.loc 1 1775 0 discriminator 3
 4960 054b 4C89CA   		movq	%r9, %rdx
1769:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp13, FIX(0.710284161)) +  /* c7 */
 4961              		.loc 1 1769 0 discriminator 3
 4962 054e 4869ED35 		imulq	$7221, %rbp, %rbp
 4962      1C0000
 4963              	.LVL717:
1775:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.256335874));   /* c11 */
 4964              		.loc 1 1775 0 discriminator 3
 4965 0555 4829F2   		subq	%rsi, %rdx
 4966              		.loc 1 1777 0 discriminator 3
 4967 0558 4801FB   		addq	%rdi, %rbx
1775:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.256335874));   /* c11 */
 4968              		.loc 1 1775 0 discriminator 3
 4969 055b 4869CABB 		imulq	$5819, %rdx, %rcx
 4969      160000
 4970 0562 4C89DA   		movq	%r11, %rdx
1778:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 +
1779:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.634110155)) -         /* c5+c9+c11-c3 */
1780:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14, FIX(1.773594819));          /* c1+c7 */
1781:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = MULTIPLY(tmp12 + tmp13, - FIX(0.497774438)); /* -c9 */
 4971              		.loc 1 1781 0 discriminator 3
 4972 0565 4D8D1C38 		leaq	(%r8,%rdi), %r11
1775:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.256335874));   /* c11 */
 4973              		.loc 1 1775 0 discriminator 3
 4974 0569 4C01C2   		addq	%r8, %rdx
1782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp6 -
1783:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp12, FIX(1.190715098)) +         /* c1+c5-c9-c11 */
1784:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp15, FIX(1.711799069));          /* c3+c7 */
1785:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp5 + tmp6 +
1786:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp13, FIX(1.670519935)) -         /* c3+c5+c9-c7 */
1787:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp15, FIX(1.319646532));          /* c1+c11 */
1788:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1789:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp0, CONST_BITS+1);
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+1);
1791:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
1792:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+1);
1793:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1794:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 4975              		.loc 1 1794 0 discriminator 3
 4976 056c 4883C004 		addq	$4, %rax
 4977              	.LVL718:
1795:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 4978              		.loc 1 1795 0 discriminator 3
 4979 0570 4983C704 		addq	$4, %r15
 4980              	.LVL719:
1775:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.256335874));   /* c11 */
 4981              		.loc 1 1775 0 discriminator 3
 4982 0574 4869D2CC 		imulq	$-2100, %rdx, %rdx
 4982      F7FFFF
1789:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+1);
 4983              		.loc 1 1789 0 discriminator 3
 4984 057b 4D69EE0A 		imulq	$-12534, %r14, %r13
 4984      CFFFFF
 4985              	.LVL720:
1777:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp4 + tmp5 +
 4986              		.loc 1 1777 0 discriminator 3
 4987 0582 4869DBCB 		imulq	$-7221, %rbx, %rbx
 4987      E3FFFF
1775:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp12, FIX(0.256335874));   /* c11 */
 4988              		.loc 1 1775 0 discriminator 3
 4989 0589 4801CA   		addq	%rcx, %rdx
 4990              	.LVL721:
1789:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+1);
 4991              		.loc 1 1789 0 discriminator 3
 4992 058c 498D0C2C 		leaq	(%r12,%rbp), %rcx
 4993 0590 4C01D1   		addq	%r10, %rcx
 4994 0593 4C01E9   		addq	%r13, %rcx
 4995 0596 4D69E9BA 		imulq	$1978, %r9, %r13
 4995      070000
 4996              	.LVL722:
1781:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp4 + tmp6 -
 4997              		.loc 1 1781 0 discriminator 3
 4998 059d 4D69DB12 		imulq	$-4078, %r11, %r11
 4998      F0FFFF
 4999              	.LVL723:
1791:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+1);
 5000              		.loc 1 1791 0 discriminator 3
 5001 05a4 4D69C0E6 		imulq	$-9754, %r8, %r8
 5001      D9FFFF
 5002              	.LVL724:
1789:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+1);
 5003              		.loc 1 1789 0 discriminator 3
 5004 05ab 4A8D8C29 		leaq	8192(%rcx,%r13), %rcx
 5004      00200000 
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
 5005              		.loc 1 1790 0 discriminator 3
 5006 05b3 4C696C24 		imulq	$5195, 8(%rsp), %r13
 5006      084B1400 
 5006      00
 5007              	.LVL725:
1789:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+1);
 5008              		.loc 1 1789 0 discriminator 3
 5009 05bc 48C1F90E 		sarq	$14, %rcx
 5010 05c0 89481C   		movl	%ecx, 28(%rax)
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
 5011              		.loc 1 1790 0 discriminator 3
 5012 05c3 488D0C1A 		leaq	(%rdx,%rbx), %rcx
1791:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+1);
 5013              		.loc 1 1791 0 discriminator 3
 5014 05c7 4C01DA   		addq	%r11, %rdx
 5015              	.LVL726:
 5016 05ca 4C01C2   		addq	%r8, %rdx
1792:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5017              		.loc 1 1792 0 discriminator 3
 5018 05cd 4901DB   		addq	%rbx, %r11
 5019              	.LVL727:
1791:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+1);
 5020              		.loc 1 1791 0 discriminator 3
 5021 05d0 4C69C6C7 		imulq	$14023, %rsi, %r8
 5021      360000
1792:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5022              		.loc 1 1792 0 discriminator 3
 5023 05d7 4869FF75 		imulq	$13685, %rdi, %rdi
 5023      350000
 5024              	.LVL728:
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
 5025              		.loc 1 1790 0 discriminator 3
 5026 05de 4D69C93F 		imulq	$-14529, %r9, %r9
 5026      C7FFFF
 5027              	.LVL729:
 5028 05e5 4C01E9   		addq	%r13, %rcx
1791:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+1);
 5029              		.loc 1 1791 0 discriminator 3
 5030 05e8 4C01C2   		addq	%r8, %rdx
 5031 05eb 488D9415 		leaq	8192(%rbp,%rdx), %rdx
 5031      00200000 
1792:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5032              		.loc 1 1792 0 discriminator 3
 5033 05f3 4901FB   		addq	%rdi, %r11
 5034 05f6 4869F6C5 		imulq	$-10811, %rsi, %rsi
 5034      D5FFFF
 5035              	.LVL730:
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
 5036              		.loc 1 1790 0 discriminator 3
 5037 05fd 4901C9   		addq	%rcx, %r9
1791:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+1);
 5038              		.loc 1 1791 0 discriminator 3
 5039 0600 48C1FA0E 		sarq	$14, %rdx
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
 5040              		.loc 1 1790 0 discriminator 3
 5041 0604 4B8D8C0C 		leaq	8192(%r12,%r9), %rcx
 5041      00200000 
1791:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+1);
 5042              		.loc 1 1791 0 discriminator 3
 5043 060c 89909C00 		movl	%edx, 156(%rax)
 5043      0000
 5044              	.LVL731:
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
 5045              		.loc 1 1790 0 discriminator 3
 5046 0612 48C1F90E 		sarq	$14, %rcx
1792:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5047              		.loc 1 1792 0 discriminator 3
 5048 0616 4C01DE   		addq	%r11, %rsi
1790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+1);
 5049              		.loc 1 1790 0 discriminator 3
 5050 0619 89485C   		movl	%ecx, 92(%rax)
 5051              	.LVL732:
1792:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5052              		.loc 1 1792 0 discriminator 3
 5053 061c 498D9432 		leaq	8192(%r10,%rsi), %rdx
 5053      00200000 
 5054 0624 48C1FA0E 		sarq	$14, %rdx
 5055 0628 8990DC00 		movl	%edx, 220(%rax)
 5055      0000
 5056              	.LVL733:
1719:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 5057              		.loc 1 1719 0 discriminator 3
 5058 062e 4C3B7C24 		cmpq	24(%rsp), %r15
 5058      18
 5059 0633 0F8537FD 		jne	.L86
 5059      FFFF
1796:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1797:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 5060              		.loc 1 1797 0
 5061 0639 488B8424 		movq	296(%rsp), %rax
 5061      28010000 
 5062 0641 64483304 		xorq	%fs:40, %rax
 5062      25280000 
 5062      00
 5063              	.LVL734:
 5064 064a 751F     		jne	.L93
 5065 064c 4881C438 		addq	$312, %rsp
 5065      010000
 5066              		.cfi_remember_state
 5067              		.cfi_def_cfa_offset 56
 5068 0653 5B       		popq	%rbx
 5069              		.cfi_def_cfa_offset 48
 5070              	.LVL735:
 5071 0654 5D       		popq	%rbp
 5072              		.cfi_def_cfa_offset 40
 5073 0655 415C     		popq	%r12
 5074              		.cfi_def_cfa_offset 32
 5075 0657 415D     		popq	%r13
 5076              		.cfi_def_cfa_offset 24
 5077 0659 415E     		popq	%r14
 5078              		.cfi_def_cfa_offset 16
 5079 065b 415F     		popq	%r15
 5080              		.cfi_def_cfa_offset 8
 5081              	.LVL736:
 5082 065d C3       		ret
 5083              	.LVL737:
 5084              	.L88:
 5085              		.cfi_restore_state
1707:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 5086              		.loc 1 1707 0
 5087 065e 4C8DB424 		leaq	128(%rsp), %r14
 5087      80000000 
 5088              	.LVL738:
 5089 0666 E9E1F9FF 		jmp	.L84
 5089      FF
 5090              	.LVL739:
 5091              	.L93:
 5092              		.loc 1 1797 0
 5093 066b E8000000 		call	__stack_chk_fail
 5093      00
 5094              	.LVL740:
 5095              		.cfi_endproc
 5096              	.LFE73:
 5098              		.section	.text.unlikely.jpeg_fdct_13x13
 5099              	.LCOLDE12:
 5100              		.section	.text.jpeg_fdct_13x13
 5101              	.LHOTE12:
 5102              		.section	.text.unlikely.jpeg_fdct_14x14,"ax",@progbits
 5103              	.LCOLDB13:
 5104              		.section	.text.jpeg_fdct_14x14,"ax",@progbits
 5105              	.LHOTB13:
 5106              		.p2align 4,,15
 5107              		.globl	jpeg_fdct_14x14
 5109              	jpeg_fdct_14x14:
 5110              	.LFB74:
1798:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1799:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1800:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
1801:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 14x14 sample block.
1802:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
1803:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1804:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
1805:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_14x14 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
1806:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 5111              		.loc 1 1806 0
 5112              		.cfi_startproc
 5113              	.LVL741:
 5114 0000 4157     		pushq	%r15
 5115              		.cfi_def_cfa_offset 16
 5116              		.cfi_offset 15, -16
 5117 0002 4156     		pushq	%r14
 5118              		.cfi_def_cfa_offset 24
 5119              		.cfi_offset 14, -24
1807:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
1808:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
1809:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*6];
1810:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
1811:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
1812:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
1813:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
1814:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
1815:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1816:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
1817:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT.
1818:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/28).
1819:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1821:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 5120              		.loc 1 1821 0
 5121 0004 4989FA   		movq	%rdi, %r10
1806:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 5122              		.loc 1 1806 0
 5123 0007 4155     		pushq	%r13
 5124              		.cfi_def_cfa_offset 32
 5125              		.cfi_offset 13, -32
 5126 0009 4154     		pushq	%r12
 5127              		.cfi_def_cfa_offset 40
 5128              		.cfi_offset 12, -40
 5129 000b 55       		pushq	%rbp
 5130              		.cfi_def_cfa_offset 48
 5131              		.cfi_offset 6, -48
 5132 000c 53       		pushq	%rbx
 5133              		.cfi_def_cfa_offset 56
 5134              		.cfi_offset 3, -56
 5135 000d 4881EC48 		subq	$328, %rsp
 5135      010000
 5136              		.cfi_def_cfa_offset 384
1806:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 5137              		.loc 1 1806 0
 5138 0014 64488B04 		movq	%fs:40, %rax
 5138      25280000 
 5138      00
 5139 001d 48898424 		movq	%rax, 312(%rsp)
 5139      38010000 
 5140 0025 31C0     		xorl	%eax, %eax
 5141              	.LVL742:
 5142 0027 89D0     		movl	%edx, %eax
 5143 0029 48897424 		movq	%rsi, 96(%rsp)
 5143      60
1822:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 5144              		.loc 1 1822 0
 5145 002e C7442408 		movl	$0, 8(%rsp)
 5145      00000000 
 5146 0036 48894424 		movq	%rax, 88(%rsp)
 5146      58
 5147 003b 48897C24 		movq	%rdi, 104(%rsp)
 5147      68
 5148 0040 EB0A     		jmp	.L95
 5149              	.LVL743:
 5150              		.p2align 4,,10
 5151 0042 660F1F44 		.p2align 3
 5151      0000
 5152              	.L103:
1823:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
1824:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
1825:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1826:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1827:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1828:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[13]);
1829:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
1830:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
1832:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
1833:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
1834:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
1835:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp6;
1837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
1838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp5;
1839:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp5;
1840:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp4;
1841:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
1842:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1843:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[13]);
1844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[12]);
1845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[11]);
1846:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[10]);
1847:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
1848:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[8]);
1849:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[7]);
1850:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1851:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
1852:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
1853:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp10 + tmp11 + tmp12 + tmp13 - 14 * CENTERJSAMPLE);
1854:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp13;
1855:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
1856:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.274162392)) + /* c4 */
1857:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp13, FIX(0.314692123)) - /* c12 */
1858:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp12 - tmp13, FIX(0.881747734)),  /* c8 */
1859:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1860:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1861:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp14 + tmp15, FIX(1.105676686));    /* c6 */
1862:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1863:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
1864:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.273079590))   /* c2-c6 */
1865:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(0.613604268)),        /* c10 */
1866:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1867:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
1868:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
1869:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp16, FIX(1.378756276)),        /* c2 */
1870:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1871:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1872:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1873:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1874:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp1 + tmp2;
1875:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
1876:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) (tmp0 - tmp10 + tmp3 - tmp11 - tmp6);
1877:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 <<= CONST_BITS;
1878:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.158341681));          /* -c13 */
1879:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(1.405321284));            /* c1 */
1880:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 += tmp11 - tmp3;
1881:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(1.197448846)) +     /* c5 */
1882:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.752406978));      /* c9 */
1883:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM)
1884:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 - MULTIPLY(tmp2, FIX(2.373959773)) /* c3+c5-c13 */
1885:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp4, FIX(1.119999435)),         /* c1+c11-c9 */
1886:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1887:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp1, FIX(1.334852607)) +     /* c3 */
1888:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.467085129));      /* c11 */
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
1890:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
1891:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp5, FIX(3.069855259)),         /* c1+c5+c11 */
1892:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1893:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
1894:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
1895:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp0 + tmp6, FIX(1.126980169)),    /* c3+c5-c1 */
1896:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
1897:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1898:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
1899:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1900:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
1901:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 14)
1902:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
1903:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 5153              		.loc 1 1903 0
 5154 0048 4983C220 		addq	$32, %r10
 5155              	.LVL744:
 5156              	.L95:
1824:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5157              		.loc 1 1824 0
 5158 004c 48634424 		movslq	8(%rsp), %rax
 5158      08
 5159 0051 488B5C24 		movq	96(%rsp), %rbx
 5159      60
 5160 0056 4C8B5C24 		movq	88(%rsp), %r11
 5160      58
 5161 005b 4C031CC3 		addq	(%rbx,%rax,8), %r11
 5162              	.LVL745:
1830:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 5163              		.loc 1 1830 0
 5164 005f 410FB653 		movzbl	2(%r11), %edx
 5164      02
 5165 0064 410FB673 		movzbl	11(%r11), %esi
 5165      0B
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 5166              		.loc 1 1831 0
 5167 0069 410FB64B 		movzbl	10(%r11), %ecx
 5167      0A
1828:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
 5168              		.loc 1 1828 0
 5169 006e 450FB673 		movzbl	13(%r11), %r14d
 5169      0D
 5170 0073 450FB63B 		movzbl	(%r11), %r15d
1834:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5171              		.loc 1 1834 0
 5172 0077 410FB66B 		movzbl	7(%r11), %ebp
 5172      07
1832:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 5173              		.loc 1 1832 0
 5174 007c 450FB643 		movzbl	9(%r11), %r8d
 5174      09
1833:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 5175              		.loc 1 1833 0
 5176 0081 450FB663 		movzbl	8(%r11), %r12d
 5176      08
1830:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 5177              		.loc 1 1830 0
 5178 0086 89542410 		movl	%edx, 16(%rsp)
 5179 008a 89D7     		movl	%edx, %edi
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 5180              		.loc 1 1831 0
 5181 008c 410FB653 		movzbl	3(%r11), %edx
 5181      03
1830:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 5182              		.loc 1 1830 0
 5183 0091 89742418 		movl	%esi, 24(%rsp)
 5184 0095 01F7     		addl	%esi, %edi
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 5185              		.loc 1 1831 0
 5186 0097 894C2428 		movl	%ecx, 40(%rsp)
1829:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
 5187              		.loc 1 1829 0
 5188 009b 450FB66B 		movzbl	12(%r11), %r13d
 5188      0C
 5189 00a0 410FB643 		movzbl	1(%r11), %eax
 5189      01
1828:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
 5190              		.loc 1 1828 0
 5191 00a5 438D1C37 		leal	(%r15,%r14), %ebx
1832:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 5192              		.loc 1 1832 0
 5193 00a9 44894424 		movl	%r8d, 60(%rsp)
 5193      3C
1830:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 5194              		.loc 1 1830 0
 5195 00ae 4863FF   		movslq	%edi, %rdi
1843:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[12]);
 5196              		.loc 1 1843 0
 5197 00b1 4529F7   		subl	%r14d, %r15d
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 5198              		.loc 1 1831 0
 5199 00b4 89D6     		movl	%edx, %esi
 5200 00b6 89542424 		movl	%edx, 36(%rsp)
1828:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
 5201              		.loc 1 1828 0
 5202 00ba 4863DB   		movslq	%ebx, %rbx
 5203              	.LVL746:
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 5204              		.loc 1 1831 0
 5205 00bd 01CE     		addl	%ecx, %esi
1834:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5206              		.loc 1 1834 0
 5207 00bf 410FB64B 		movzbl	6(%r11), %ecx
 5207      06
1843:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[12]);
 5208              		.loc 1 1843 0
 5209 00c4 44897C24 		movl	%r15d, 84(%rsp)
 5209      54
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 5210              		.loc 1 1831 0
 5211 00c9 4863D6   		movslq	%esi, %rdx
1829:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
 5212              		.loc 1 1829 0
 5213 00cc 468D0C28 		leal	(%rax,%r13), %r9d
1844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[11]);
 5214              		.loc 1 1844 0
 5215 00d0 4429E8   		subl	%r13d, %eax
1831:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 5216              		.loc 1 1831 0
 5217 00d3 8954242C 		movl	%edx, 44(%rsp)
 5218 00d7 48895424 		movq	%rdx, 48(%rsp)
 5218      30
1844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[11]);
 5219              		.loc 1 1844 0
 5220 00dc 4898     		cltq
1832:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 5221              		.loc 1 1832 0
 5222 00de 410FB653 		movzbl	4(%r11), %edx
 5222      04
1829:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
 5223              		.loc 1 1829 0
 5224 00e3 4D63C9   		movslq	%r9d, %r9
 5225              	.LVL747:
1845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[10]);
 5226              		.loc 1 1845 0
 5227 00e6 448B6C24 		movl	16(%rsp), %r13d
 5227      10
 5228 00eb 442B6C24 		subl	24(%rsp), %r13d
 5228      18
1832:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 5229              		.loc 1 1832 0
 5230 00f0 89542438 		movl	%edx, 56(%rsp)
 5231 00f4 89D6     		movl	%edx, %esi
1833:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 5232              		.loc 1 1833 0
 5233 00f6 410FB653 		movzbl	5(%r11), %edx
 5233      05
1834:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5234              		.loc 1 1834 0
 5235 00fb 448D1C29 		leal	(%rcx,%rbp), %r11d
 5236              	.LVL748:
1832:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 5237              		.loc 1 1832 0
 5238 00ff 4401C6   		addl	%r8d, %esi
1849:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5239              		.loc 1 1849 0
 5240 0102 29E9     		subl	%ebp, %ecx
1832:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 5241              		.loc 1 1832 0
 5242 0104 4863F6   		movslq	%esi, %rsi
 5243              	.LVL749:
1845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[10]);
 5244              		.loc 1 1845 0
 5245 0107 4D63ED   		movslq	%r13d, %r13
1849:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5246              		.loc 1 1849 0
 5247 010a 4863E9   		movslq	%ecx, %rbp
1834:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5248              		.loc 1 1834 0
 5249 010d 4D63DB   		movslq	%r11d, %r11
1833:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 5250              		.loc 1 1833 0
 5251 0110 468D0422 		leal	(%rdx,%r12), %r8d
 5252 0114 89542450 		movl	%edx, 80(%rsp)
1836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
 5253              		.loc 1 1836 0
 5254 0118 4A8D141B 		leaq	(%rbx,%r11), %rdx
1837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp5;
 5255              		.loc 1 1837 0
 5256 011c 4C29DB   		subq	%r11, %rbx
 5257              	.LVL750:
1836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
 5258              		.loc 1 1836 0
 5259 011f 48895424 		movq	%rdx, 64(%rsp)
 5259      40
1841:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5260              		.loc 1 1841 0
 5261 0124 4889FA   		movq	%rdi, %rdx
1833:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 5262              		.loc 1 1833 0
 5263 0127 4D63C0   		movslq	%r8d, %r8
 5264              	.LVL751:
1841:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5265              		.loc 1 1841 0
 5266 012a 4829F2   		subq	%rsi, %rdx
1838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp5;
 5267              		.loc 1 1838 0
 5268 012d 4F8D1C01 		leaq	(%r9,%r8), %r11
 5269              	.LVL752:
1839:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp4;
 5270              		.loc 1 1839 0
 5271 0131 4D29C1   		subq	%r8, %r9
 5272              	.LVL753:
1841:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5273              		.loc 1 1841 0
 5274 0134 48895424 		movq	%rdx, 72(%rsp)
 5274      48
1840:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
 5275              		.loc 1 1840 0
 5276 0139 4C8D0437 		leaq	(%rdi,%rsi), %r8
 5277              	.LVL754:
1843:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[12]);
 5278              		.loc 1 1843 0
 5279 013d 4963F7   		movslq	%r15d, %rsi
 5280              	.LVL755:
1846:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
 5281              		.loc 1 1846 0
 5282 0140 448B7C24 		movl	36(%rsp), %r15d
 5282      24
 5283              	.LVL756:
1848:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[7]);
 5284              		.loc 1 1848 0
 5285 0145 8B542450 		movl	80(%rsp), %edx
 5286              	.LVL757:
1852:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp10 + tmp11 + tmp12 + tmp13 - 14 * CENTERJSAMPLE);
 5287              		.loc 1 1852 0
 5288 0149 8B7C242C 		movl	44(%rsp), %edi
1846:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
 5289              		.loc 1 1846 0
 5290 014d 442B7C24 		subl	40(%rsp), %r15d
 5290      28
1848:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[7]);
 5291              		.loc 1 1848 0
 5292 0152 4429E2   		subl	%r12d, %edx
1852:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp10 + tmp11 + tmp12 + tmp13 - 14 * CENTERJSAMPLE);
 5293              		.loc 1 1852 0
 5294 0155 4C8B6424 		movq	64(%rsp), %r12
 5294      40
 5295              	.LVL758:
1848:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[7]);
 5296              		.loc 1 1848 0
 5297 015a 4863D2   		movslq	%edx, %rdx
1846:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
 5298              		.loc 1 1846 0
 5299 015d 4D63F7   		movslq	%r15d, %r14
1852:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp10 + tmp11 + tmp12 + tmp13 - 14 * CENTERJSAMPLE);
 5300              		.loc 1 1852 0
 5301 0160 428DBC27 		leal	-1792(%rdi,%r12), %edi
 5301      00F9FFFF 
1846:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
 5302              		.loc 1 1846 0
 5303 0168 4C897424 		movq	%r14, 16(%rsp)
 5303      10
 5304              	.LVL759:
1847:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[8]);
 5305              		.loc 1 1847 0
 5306 016d 448B7424 		movl	56(%rsp), %r14d
 5306      38
 5307 0172 442B7424 		subl	60(%rsp), %r14d
 5307      3C
1852:fltk-1.3.4-1/jpeg/jfdctint.c ****       (tmp10 + tmp11 + tmp12 + tmp13 - 14 * CENTERJSAMPLE);
 5308              		.loc 1 1852 0
 5309 0177 4401DF   		addl	%r11d, %edi
 5310 017a 4401C7   		addl	%r8d, %edi
 5311 017d 41893A   		movl	%edi, (%r10)
 5312              	.LVL760:
1854:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 5313              		.loc 1 1854 0
 5314 0180 488B7C24 		movq	48(%rsp), %rdi
 5314      30
1847:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[8]);
 5315              		.loc 1 1847 0
 5316 0185 4D63F6   		movslq	%r14d, %r14
 5317              	.LVL761:
1854:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 5318              		.loc 1 1854 0
 5319 0188 4801FF   		addq	%rdi, %rdi
 5320              	.LVL762:
1855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.274162392)) + /* c4 */
 5321              		.loc 1 1855 0
 5322 018b 4929FC   		subq	%rdi, %r12
 5323 018e 4929FB   		subq	%rdi, %r11
 5324              	.LVL763:
 5325 0191 4929F8   		subq	%rdi, %r8
 5326              	.LVL764:
 5327 0194 4D69E4C6 		imulq	$10438, %r12, %r12
 5327      280000
 5328 019b 4D69DB12 		imulq	$2578, %r11, %r11
 5328      0A0000
 5329 01a2 4D69C0C9 		imulq	$-7223, %r8, %r8
 5329      E3FFFF
 5330 01a9 4D01E3   		addq	%r12, %r11
 5331 01ac 4B8DBC03 		leaq	4096(%r11,%r8), %rdi
 5331      00100000 
 5332              	.LVL765:
1863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.273079590))   /* c2-c6 */
 5333              		.loc 1 1863 0
 5334 01b4 4C8B5C24 		movq	72(%rsp), %r11
 5334      48
1855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.274162392)) + /* c4 */
 5335              		.loc 1 1855 0
 5336 01b9 48C1FF0D 		sarq	$13, %rdi
 5337 01bd 41897A10 		movl	%edi, 16(%r10)
1861:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5338              		.loc 1 1861 0
 5339 01c1 4A8D3C0B 		leaq	(%rbx,%r9), %rdi
1863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.273079590))   /* c2-c6 */
 5340              		.loc 1 1863 0
 5341 01c5 4869DBBD 		imulq	$2237, %rbx, %rbx
 5341      080000
 5342              	.LVL766:
1861:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5343              		.loc 1 1861 0
 5344 01cc 4869FF62 		imulq	$9058, %rdi, %rdi
 5344      230000
 5345              	.LVL767:
1863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.273079590))   /* c2-c6 */
 5346              		.loc 1 1863 0
 5347 01d3 4D69C3A3 		imulq	$5027, %r11, %r8
 5347      130000
 5348 01da 4801FB   		addq	%rdi, %rbx
1867:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
 5349              		.loc 1 1867 0
 5350 01dd 4D69C9FC 		imulq	$-14084, %r9, %r9
 5350      C8FFFF
 5351              	.LVL768:
1863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.273079590))   /* c2-c6 */
 5352              		.loc 1 1863 0
 5353 01e4 4E8D8403 		leaq	4096(%rbx,%r8), %r8
 5353      00100000 
 5354 01ec 49C1F80D 		sarq	$13, %r8
 5355 01f0 45894208 		movl	%r8d, 8(%r10)
1875:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) (tmp0 - tmp10 + tmp3 - tmp11 - tmp6);
 5356              		.loc 1 1875 0
 5357 01f4 4989D0   		movq	%rdx, %r8
1867:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
 5358              		.loc 1 1867 0
 5359 01f7 4901F9   		addq	%rdi, %r9
 5360 01fa 4969FBE1 		imulq	$-11295, %r11, %rdi
 5360      D3FFFF
 5361              	.LVL769:
1876:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 <<= CONST_BITS;
 5362              		.loc 1 1876 0
 5363 0201 44037C24 		addl	84(%rsp), %r15d
 5363      54
1875:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) (tmp0 - tmp10 + tmp3 - tmp11 - tmp6);
 5364              		.loc 1 1875 0
 5365 0206 4D29F0   		subq	%r14, %r8
1881:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.752406978));      /* c9 */
 5366              		.loc 1 1881 0
 5367 0209 4E8D1C2E 		leaq	(%rsi,%r13), %r11
1867:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
 5368              		.loc 1 1867 0
 5369 020d 498DBC39 		leaq	4096(%r9,%rdi), %rdi
 5369      00100000 
1876:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 <<= CONST_BITS;
 5370              		.loc 1 1876 0
 5371 0215 4129CF   		subl	%ecx, %r15d
1881:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.752406978));      /* c9 */
 5372              		.loc 1 1881 0
 5373 0218 498D0C2E 		leaq	(%r14,%rbp), %rcx
1877:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.158341681));          /* -c13 */
 5374              		.loc 1 1877 0
 5375 021c 4C8B4C24 		movq	16(%rsp), %r9
 5375      10
1867:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
 5376              		.loc 1 1867 0
 5377 0221 48C1FF0D 		sarq	$13, %rdi
 5378 0225 41897A18 		movl	%edi, 24(%r10)
1874:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
 5379              		.loc 1 1874 0
 5380 0229 4A8D3C28 		leaq	(%rax,%r13), %rdi
 5381              	.LVL770:
1881:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.752406978));      /* c9 */
 5382              		.loc 1 1881 0
 5383 022d 4869C914 		imulq	$6164, %rcx, %rcx
 5383      180000
1877:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.158341681));          /* -c13 */
 5384              		.loc 1 1877 0
 5385 0234 49C1E10D 		salq	$13, %r9
 5386              	.LVL771:
1876:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 <<= CONST_BITS;
 5387              		.loc 1 1876 0
 5388 0238 4129FF   		subl	%edi, %r15d
 5389 023b 4529C7   		subl	%r8d, %r15d
 5390 023e 45897A1C 		movl	%r15d, 28(%r10)
1880:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(1.197448846)) +     /* c5 */
 5391              		.loc 1 1880 0
 5392 0242 4D69C0F8 		imulq	$11512, %r8, %r8
 5392      2C0000
 5393              	.LVL772:
1878:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(1.405321284));            /* c1 */
 5394              		.loc 1 1878 0
 5395 0249 4869FFEF 		imulq	$-1297, %rdi, %rdi
 5395      FAFFFF
 5396              	.LVL773:
1881:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.752406978));      /* c9 */
 5397              		.loc 1 1881 0
 5398 0250 4D69DB52 		imulq	$9810, %r11, %r11
 5398      260000
1880:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(1.197448846)) +     /* c5 */
 5399              		.loc 1 1880 0
 5400 0257 4D29C8   		subq	%r9, %r8
 5401 025a 4C01C7   		addq	%r8, %rdi
 5402              	.LVL774:
1883:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 - MULTIPLY(tmp2, FIX(2.373959773)) /* c3+c5-c13 */
 5403              		.loc 1 1883 0
 5404 025d 4D69ED09 		imulq	$-19447, %r13, %r13
 5404      B4FFFF
 5405              	.LVL775:
1881:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.752406978));      /* c9 */
 5406              		.loc 1 1881 0
 5407 0264 4901CB   		addq	%rcx, %r11
 5408              	.LVL776:
1883:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 - MULTIPLY(tmp2, FIX(2.373959773)) /* c3+c5-c13 */
 5409              		.loc 1 1883 0
 5410 0267 4D69F6D7 		imulq	$9175, %r14, %r14
 5410      230000
 5411              	.LVL777:
 5412 026e 4A8D0C1F 		leaq	(%rdi,%r11), %rcx
 5413 0272 4901CD   		addq	%rcx, %r13
 5414 0275 4B8D8C35 		leaq	4096(%r13,%r14), %rcx
 5414      00100000 
 5415 027d 48C1F90D 		sarq	$13, %rcx
 5416 0281 41894A14 		movl	%ecx, 20(%r10)
1887:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.467085129));      /* c11 */
 5417              		.loc 1 1887 0
 5418 0285 488D0C06 		leaq	(%rsi,%rax), %rcx
1893:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
 5419              		.loc 1 1893 0
 5420 0289 4801EE   		addq	%rbp, %rsi
 5421              	.LVL778:
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 5422              		.loc 1 1889 0
 5423 028c 4869C06E 		imulq	$-3474, %rax, %rax
 5423      F2FFFF
 5424              	.LVL779:
1887:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.467085129));      /* c11 */
 5425              		.loc 1 1887 0
 5426 0293 4C69C1B7 		imulq	$10935, %rcx, %r8
 5426      2A0000
 5427 029a 4889D1   		movq	%rdx, %rcx
 5428 029d 4829E9   		subq	%rbp, %rcx
 5429 02a0 4869C9F2 		imulq	$3826, %rcx, %rcx
 5429      0E0000
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 5430              		.loc 1 1889 0
 5431 02a7 4869D2C4 		imulq	$-25148, %rdx, %rdx
 5431      9DFFFF
 5432              	.LVL780:
1887:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.467085129));      /* c11 */
 5433              		.loc 1 1887 0
 5434 02ae 4C01C1   		addq	%r8, %rcx
 5435              	.LVL781:
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 5436              		.loc 1 1889 0
 5437 02b1 4801CF   		addq	%rcx, %rdi
 5438              	.LVL782:
1893:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
 5439              		.loc 1 1893 0
 5440 02b4 4C01D9   		addq	%r11, %rcx
 5441              	.LVL783:
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 5442              		.loc 1 1889 0
 5443 02b7 4801F8   		addq	%rdi, %rax
1893:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
 5444              		.loc 1 1893 0
 5445 02ba 4901C9   		addq	%rcx, %r9
 5446              	.LVL784:
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 5447              		.loc 1 1889 0
 5448 02bd 488D8410 		leaq	4096(%rax,%rdx), %rax
 5448      00100000 
1893:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
 5449              		.loc 1 1893 0
 5450 02c5 4901E9   		addq	%rbp, %r9
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 5451              		.loc 1 1889 0
 5452 02c8 48C1F80D 		sarq	$13, %rax
1893:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
 5453              		.loc 1 1893 0
 5454 02cc 4869F6F0 		imulq	$-9232, %rsi, %rsi
 5454      DBFFFF
1889:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 5455              		.loc 1 1889 0
 5456 02d3 4189420C 		movl	%eax, 12(%r10)
1898:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5457              		.loc 1 1898 0
 5458 02d7 83442408 		addl	$1, 8(%rsp)
 5458      01
 5459              	.LVL785:
1893:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
 5460              		.loc 1 1893 0
 5461 02dc 498D8431 		leaq	4096(%r9,%rsi), %rax
 5461      00100000 
 5462 02e4 48C1F80D 		sarq	$13, %rax
 5463 02e8 41894204 		movl	%eax, 4(%r10)
1898:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5464              		.loc 1 1898 0
 5465 02ec 8B442408 		movl	8(%rsp), %eax
 5466              	.LVL786:
1900:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 14)
 5467              		.loc 1 1900 0
 5468 02f0 83F808   		cmpl	$8, %eax
 5469 02f3 0F84E702 		je	.L99
 5469      0000
1901:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 5470              		.loc 1 1901 0
 5471 02f9 83F80E   		cmpl	$14, %eax
 5472 02fc 0F8546FD 		jne	.L103
 5472      FFFF
1904:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
1905:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
1906:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1907:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1908:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
1909:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
1910:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/14)**2 = 16/49, which we partially
1911:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers and final shifting:
1912:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/28) * 32/49.
1913:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
1914:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1915:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
1916:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
1917:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 5473              		.loc 1 1917 0
 5474 0302 488D8424 		leaq	144(%rsp), %rax
 5474      90000000 
 5475              	.LVL787:
 5476 030a 4C8B6424 		movq	104(%rsp), %r12
 5476      68
 5477 030f 488D5C24 		leaq	112(%rsp), %rbx
 5477      70
 5478 0314 48894424 		movq	%rax, 24(%rsp)
 5478      18
 5479              	.LVL788:
 5480 0319 0F1F8000 		.p2align 4,,10
 5480      000000
 5481              		.p2align 3
 5482              	.L97:
1918:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
1919:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1920:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*5];
1921:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
1922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
1923:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 5483              		.loc 1 1923 0 discriminator 3
 5484 0320 458B4424 		movl	96(%r12), %r8d
 5484      60
 5485 0325 44034340 		addl	64(%rbx), %r8d
1920:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
 5486              		.loc 1 1920 0 discriminator 3
 5487 0329 418B0424 		movl	(%r12), %eax
 5488 032d 448B8BA0 		movl	160(%rbx), %r9d
 5488      000000
1921:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 5489              		.loc 1 1921 0 discriminator 3
 5490 0334 8BB38000 		movl	128(%rbx), %esi
 5490      0000
1924:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*1];
1925:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
1926:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + dataptr[DCTSIZE*7];
 5491              		.loc 1 1926 0 discriminator 3
 5492 033a 418BBC24 		movl	224(%r12), %edi
 5492      E0000000 
1921:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 5493              		.loc 1 1921 0 discriminator 3
 5494 0342 418B4C24 		movl	32(%r12), %ecx
 5494      20
 5495              		.loc 1 1926 0 discriminator 3
 5496 0347 458B9424 		movl	192(%r12), %r10d
 5496      C0000000 
1923:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*1];
 5497              		.loc 1 1923 0 discriminator 3
 5498 034f 4963D0   		movslq	%r8d, %rdx
1925:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + dataptr[DCTSIZE*7];
 5499              		.loc 1 1925 0 discriminator 3
 5500 0352 458B8424 		movl	160(%r12), %r8d
 5500      A0000000 
 5501 035a 440303   		addl	(%rbx), %r8d
1920:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
 5502              		.loc 1 1920 0 discriminator 3
 5503 035d 468D2C08 		leal	(%rax,%r9), %r13d
1922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 5504              		.loc 1 1922 0 discriminator 3
 5505 0361 458B5C24 		movl	64(%r12), %r11d
 5505      40
1923:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*1];
 5506              		.loc 1 1923 0 discriminator 3
 5507 0366 48895424 		movq	%rdx, 8(%rsp)
 5507      08
1921:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 5508              		.loc 1 1921 0 discriminator 3
 5509 036b 8D2C31   		leal	(%rcx,%rsi), %ebp
 5510              		.loc 1 1926 0 discriminator 3
 5511 036e 4101FA   		addl	%edi, %r10d
1922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 5512              		.loc 1 1922 0 discriminator 3
 5513 0371 44035B60 		addl	96(%rbx), %r11d
 5514              		.loc 1 1926 0 discriminator 3
 5515 0375 4D63D2   		movslq	%r10d, %r10
1920:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
 5516              		.loc 1 1920 0 discriminator 3
 5517 0378 4D63ED   		movslq	%r13d, %r13
 5518              	.LVL789:
1924:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
 5519              		.loc 1 1924 0 discriminator 3
 5520 037b 418B9424 		movl	128(%r12), %edx
 5520      80000000 
1927:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1928:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp6;
 5521              		.loc 1 1928 0 discriminator 3
 5522 0383 4F8D7C15 		leaq	0(%r13,%r10), %r15
 5522      00
1924:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
 5523              		.loc 1 1924 0 discriminator 3
 5524 0388 035320   		addl	32(%rbx), %edx
1929:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
 5525              		.loc 1 1929 0 discriminator 3
 5526 038b 4D29D5   		subq	%r10, %r13
 5527              	.LVL790:
1925:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + dataptr[DCTSIZE*7];
 5528              		.loc 1 1925 0 discriminator 3
 5529 038e 4D63C0   		movslq	%r8d, %r8
1921:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 5530              		.loc 1 1921 0 discriminator 3
 5531 0391 4863ED   		movslq	%ebp, %rbp
 5532              	.LVL791:
 5533              		.loc 1 1929 0 discriminator 3
 5534 0394 4C896C24 		movq	%r13, 16(%rsp)
 5534      10
1930:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp5;
 5535              		.loc 1 1930 0 discriminator 3
 5536 0399 4E8D6C05 		leaq	0(%rbp,%r8), %r13
 5536      00
1931:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp5;
 5537              		.loc 1 1931 0 discriminator 3
 5538 039e 4C29C5   		subq	%r8, %rbp
 5539              	.LVL792:
1932:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp4;
1933:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
1934:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1935:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*5];
1936:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*4];
1937:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*3];
1938:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*2];
1939:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
1940:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
1941:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 5540              		.loc 1 1941 0 discriminator 3
 5541 03a1 458B8424 		movl	192(%r12), %r8d
 5541      C0000000 
1922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 5542              		.loc 1 1922 0 discriminator 3
 5543 03a9 4D63DB   		movslq	%r11d, %r11
 5544              	.LVL793:
1939:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
 5545              		.loc 1 1939 0 discriminator 3
 5546 03ac 458B9424 		movl	128(%r12), %r10d
 5546      80000000 
1935:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*4];
 5547              		.loc 1 1935 0 discriminator 3
 5548 03b4 4429C8   		subl	%r9d, %eax
 5549              	.LVL794:
1924:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
 5550              		.loc 1 1924 0 discriminator 3
 5551 03b7 4863D2   		movslq	%edx, %rdx
 5552              	.LVL795:
1939:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
 5553              		.loc 1 1939 0 discriminator 3
 5554 03ba 442B5320 		subl	32(%rbx), %r10d
1940:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 5555              		.loc 1 1940 0 discriminator 3
 5556 03be 458B8C24 		movl	160(%r12), %r9d
 5556      A0000000 
 5557              	.LVL796:
 5558              		.loc 1 1941 0 discriminator 3
 5559 03c6 4129F8   		subl	%edi, %r8d
1932:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
 5560              		.loc 1 1932 0 discriminator 3
 5561 03c9 4D8D3413 		leaq	(%r11,%rdx), %r14
 5562              	.LVL797:
1933:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5563              		.loc 1 1933 0 discriminator 3
 5564 03cd 4929D3   		subq	%rdx, %r11
 5565              	.LVL798:
 5566              		.loc 1 1941 0 discriminator 3
 5567 03d0 4963F8   		movslq	%r8d, %rdi
1942:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1943:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 5568              		.loc 1 1943 0 discriminator 3
 5569 03d3 4F8D042F 		leaq	(%r15,%r13), %r8
1940:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 5570              		.loc 1 1940 0 discriminator 3
 5571 03d7 442B0B   		subl	(%rbx), %r9d
1938:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
 5572              		.loc 1 1938 0 discriminator 3
 5573 03da 418B5424 		movl	96(%r12), %edx
 5573      60
 5574              	.LVL799:
1936:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*3];
 5575              		.loc 1 1936 0 discriminator 3
 5576 03df 29F1     		subl	%esi, %ecx
 5577              	.LVL800:
1938:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
 5578              		.loc 1 1938 0 discriminator 3
 5579 03e1 2B5340   		subl	64(%rbx), %edx
 5580              		.loc 1 1943 0 discriminator 3
 5581 03e4 4D01F0   		addq	%r14, %r8
 5582 03e7 4C034424 		addq	8(%rsp), %r8
 5582      08
1937:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*2];
 5583              		.loc 1 1937 0 discriminator 3
 5584 03ec 418B7424 		movl	64(%r12), %esi
 5584      40
 5585              	.LVL801:
 5586 03f1 2B7360   		subl	96(%rbx), %esi
1936:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*3];
 5587              		.loc 1 1936 0 discriminator 3
 5588 03f4 4863C9   		movslq	%ecx, %rcx
1935:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*4];
 5589              		.loc 1 1935 0 discriminator 3
 5590 03f7 4898     		cltq
 5591              	.LVL802:
1940:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 5592              		.loc 1 1940 0 discriminator 3
 5593 03f9 4D63C9   		movslq	%r9d, %r9
1939:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
 5594              		.loc 1 1939 0 discriminator 3
 5595 03fc 4D63D2   		movslq	%r10d, %r10
1938:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
 5596              		.loc 1 1938 0 discriminator 3
 5597 03ff 4863D2   		movslq	%edx, %rdx
 5598              		.loc 1 1943 0 discriminator 3
 5599 0402 4D69C0E6 		imulq	$5350, %r8, %r8
 5599      140000
1937:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*2];
 5600              		.loc 1 1937 0 discriminator 3
 5601 0409 4863F6   		movslq	%esi, %rsi
 5602              	.LVL803:
 5603              		.loc 1 1943 0 discriminator 3
 5604 040c 4981C000 		addq	$8192, %r8
 5604      200000
 5605 0413 49C1F80E 		sarq	$14, %r8
 5606 0417 45890424 		movl	%r8d, (%r12)
1944:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12 + tmp13,
1945:fltk-1.3.4-1/jpeg/jfdctint.c **** 		       FIX(0.653061224)),                 /* 32/49 */
1946:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1947:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp13;
 5607              		.loc 1 1947 0 discriminator 3
 5608 041b 4C8B4424 		movq	8(%rsp), %r8
 5608      08
 5609 0420 4D01C0   		addq	%r8, %r8
 5610              	.LVL804:
1948:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 5611              		.loc 1 1948 0 discriminator 3
 5612 0423 4D29C7   		subq	%r8, %r15
 5613              	.LVL805:
 5614 0426 4D29C5   		subq	%r8, %r13
 5615              	.LVL806:
 5616 0429 4D29C6   		subq	%r8, %r14
 5617              	.LVL807:
 5618 042c 4D69ED94 		imulq	$1684, %r13, %r13
 5618      060000
 5619 0433 4D69FFA1 		imulq	$6817, %r15, %r15
 5619      1A0000
 5620 043a 4D69F693 		imulq	$-4717, %r14, %r14
 5620      EDFFFF
 5621 0441 4D01EF   		addq	%r13, %r15
1949:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(0.832106052)) + /* c4 */
1950:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp13, FIX(0.205513223)) - /* c12 */
1951:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp12 - tmp13, FIX(0.575835255)),  /* c8 */
1952:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1953:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1954:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp14 + tmp15, FIX(0.722074570));    /* c6 */
 5622              		.loc 1 1954 0 discriminator 3
 5623 0444 4C8B6C24 		movq	16(%rsp), %r13
 5623      10
1948:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 5624              		.loc 1 1948 0 discriminator 3
 5625 0449 4F8D8437 		leaq	8192(%r15,%r14), %r8
 5625      00200000 
 5626              	.LVL808:
 5627 0451 49C1F80E 		sarq	$14, %r8
 5628 0455 45898424 		movl	%r8d, 128(%r12)
 5628      80000000 
 5629              	.LVL809:
 5630              		.loc 1 1954 0 discriminator 3
 5631 045d 4D8D442D 		leaq	0(%r13,%rbp), %r8
 5631      00
1955:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1956:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 5632              		.loc 1 1956 0 discriminator 3
 5633 0462 4D69EDB5 		imulq	$1461, %r13, %r13
 5633      050000
1954:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5634              		.loc 1 1954 0 discriminator 3
 5635 0469 4D69C01B 		imulq	$5915, %r8, %r8
 5635      170000
 5636              	.LVL810:
 5637              		.loc 1 1956 0 discriminator 3
 5638 0470 4D01C5   		addq	%r8, %r13
 5639 0473 4D69F3D3 		imulq	$3283, %r11, %r14
 5639      0C0000
1957:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
1958:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(0.400721155)),        /* c10 */
1959:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1960:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
 5640              		.loc 1 1960 0 discriminator 3
 5641 047a 4869ED12 		imulq	$-9198, %rbp, %rbp
 5641      DCFFFF
 5642              	.LVL811:
 5643 0481 4D69DB30 		imulq	$-7376, %r11, %r11
 5643      E3FFFF
 5644              	.LVL812:
1956:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
 5645              		.loc 1 1956 0 discriminator 3
 5646 0488 4F8DAC35 		leaq	8192(%r13,%r14), %r13
 5646      00200000 
 5647              		.loc 1 1960 0 discriminator 3
 5648 0490 4901E8   		addq	%rbp, %r8
 5649              	.LVL813:
1961:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
1962:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp16, FIX(0.900412262)),        /* c2 */
1963:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1964:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1965:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
1966:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1967:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp1 + tmp2;
1968:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
 5650              		.loc 1 1968 0 discriminator 3
 5651 0493 4C89CD   		movq	%r9, %rbp
1960:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
 5652              		.loc 1 1960 0 discriminator 3
 5653 0496 4F8D8418 		leaq	8192(%r8,%r11), %r8
 5653      00200000 
1967:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
 5654              		.loc 1 1967 0 discriminator 3
 5655 049e 4C8D1C31 		leaq	(%rcx,%rsi), %r11
 5656              	.LVL814:
 5657              		.loc 1 1968 0 discriminator 3
 5658 04a2 4C29D5   		subq	%r10, %rbp
 5659              	.LVL815:
1956:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
 5660              		.loc 1 1956 0 discriminator 3
 5661 04a5 49C1FD0E 		sarq	$14, %r13
1960:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
 5662              		.loc 1 1960 0 discriminator 3
 5663 04a9 49C1F80E 		sarq	$14, %r8
1956:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
 5664              		.loc 1 1956 0 discriminator 3
 5665 04ad 45896C24 		movl	%r13d, 64(%r12)
 5665      40
1960:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
 5666              		.loc 1 1960 0 discriminator 3
 5667 04b2 45898424 		movl	%r8d, 192(%r12)
 5667      C0000000 
1969:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM)
 5668              		.loc 1 1969 0 discriminator 3
 5669 04ba 4989C0   		movq	%rax, %r8
 5670 04bd 4D29D8   		subq	%r11, %r8
 5671 04c0 4901D0   		addq	%rdx, %r8
 5672 04c3 4929E8   		subq	%rbp, %r8
 5673 04c6 4929F8   		subq	%rdi, %r8
 5674 04c9 4D69C0E6 		imulq	$5350, %r8, %r8
 5674      140000
1970:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp10 + tmp3 - tmp11 - tmp6,
1971:fltk-1.3.4-1/jpeg/jfdctint.c **** 		       FIX(0.653061224)),                 /* 32/49 */
1972:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1973:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3  = MULTIPLY(tmp3 , FIX(0.653061224));            /* 32/49 */
 5675              		.loc 1 1973 0 discriminator 3
 5676 04d0 4869D2E6 		imulq	$5350, %rdx, %rdx
 5676      140000
 5677              	.LVL816:
1974:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.103406812));          /* -c13 */
1975:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.917760839));            /* c1 */
1976:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 += tmp11 - tmp3;
 5678              		.loc 1 1976 0 discriminator 3
 5679 04d7 4869ED5E 		imulq	$7518, %rbp, %rbp
 5679      1D0000
 5680              	.LVL817:
1969:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp10 + tmp3 - tmp11 - tmp6,
 5681              		.loc 1 1969 0 discriminator 3
 5682 04de 4981C000 		addq	$8192, %r8
 5682      200000
 5683 04e5 49C1F80E 		sarq	$14, %r8
1974:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.103406812));          /* -c13 */
 5684              		.loc 1 1974 0 discriminator 3
 5685 04e9 4D69DBB1 		imulq	$-847, %r11, %r11
 5685      FCFFFF
 5686              	.LVL818:
1969:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp10 + tmp3 - tmp11 - tmp6,
 5687              		.loc 1 1969 0 discriminator 3
 5688 04f0 45898424 		movl	%r8d, 224(%r12)
 5688      E0000000 
 5689              	.LVL819:
1977:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(0.782007410)) +     /* c5 */
 5690              		.loc 1 1977 0 discriminator 3
 5691 04f8 4C8D0430 		leaq	(%rax,%rsi), %r8
1976:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(0.782007410)) +     /* c5 */
 5692              		.loc 1 1976 0 discriminator 3
 5693 04fc 4829D5   		subq	%rdx, %rbp
1978:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.491367823));      /* c9 */
1979:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
 5694              		.loc 1 1979 0 discriminator 3
 5695 04ff 4869F664 		imulq	$-12700, %rsi, %rsi
 5695      CEFFFF
 5696              	.LVL820:
1976:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(0.782007410)) +     /* c5 */
 5697              		.loc 1 1976 0 discriminator 3
 5698 0506 4901EB   		addq	%rbp, %r11
 5699              	.LVL821:
1977:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.491367823));      /* c9 */
 5700              		.loc 1 1977 0 discriminator 3
 5701 0509 4969E806 		imulq	$6406, %r8, %rbp
 5701      190000
 5702 0510 4D8D043A 		leaq	(%r10,%rdi), %r8
 5703              		.loc 1 1979 0 discriminator 3
 5704 0514 4D69D268 		imulq	$5992, %r10, %r10
 5704      170000
 5705              	.LVL822:
1977:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.491367823));      /* c9 */
 5706              		.loc 1 1977 0 discriminator 3
 5707 051b 4D69C0B9 		imulq	$4025, %r8, %r8
 5707      0F0000
 5708 0522 4901E8   		addq	%rbp, %r8
 5709              	.LVL823:
 5710              		.loc 1 1979 0 discriminator 3
 5711 0525 4B8D2C03 		leaq	(%r11,%r8), %rbp
 5712 0529 4801EE   		addq	%rbp, %rsi
 5713 052c 4A8DB416 		leaq	8192(%rsi,%r10), %rsi
 5713      00200000 
 5714 0534 48C1FE0E 		sarq	$14, %rsi
 5715 0538 4189B424 		movl	%esi, 160(%r12)
 5715      A0000000 
 5716              	.LVL824:
1980:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 - MULTIPLY(tmp2, FIX(1.550341076)) /* c3+c5-c13 */
1981:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp4, FIX(0.731428202)),         /* c1+c11-c9 */
1982:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1983:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp1, FIX(0.871740478)) +     /* c3 */
 5717              		.loc 1 1983 0 discriminator 3
 5718 0540 488D3408 		leaq	(%rax,%rcx), %rsi
1984:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.305035186));      /* c11 */
1985:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
 5719              		.loc 1 1985 0 discriminator 3
 5720 0544 4869C923 		imulq	$-2269, %rcx, %rcx
 5720      F7FFFF
 5721              	.LVL825:
1983:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.305035186));      /* c11 */
 5722              		.loc 1 1983 0 discriminator 3
 5723 054b 4C69D6E5 		imulq	$7141, %rsi, %r10
 5723      1B0000
 5724 0552 4C89CE   		movq	%r9, %rsi
 5725 0555 4829FE   		subq	%rdi, %rsi
 5726 0558 4869F6C3 		imulq	$2499, %rsi, %rsi
 5726      090000
 5727 055f 4C01D6   		addq	%r10, %rsi
 5728              	.LVL826:
 5729              		.loc 1 1985 0 discriminator 3
 5730 0562 4901F3   		addq	%rsi, %r11
 5731              	.LVL827:
 5732 0565 4901CB   		addq	%rcx, %r11
1986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
1987:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp5, FIX(2.004803435)),         /* c1+c5+c11 */
1988:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1989:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 5733              		.loc 1 1989 0 discriminator 3
 5734 0568 4C01C6   		addq	%r8, %rsi
 5735              	.LVL828:
1990:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
1991:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp0, FIX(0.735987049))          /* c3+c5-c1 */
1992:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp6, FIX(0.082925825)),         /* c9-c11-c13 */
1993:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+1);
1994:fltk-1.3.4-1/jpeg/jfdctint.c **** 
1995:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 5736              		.loc 1 1995 0 discriminator 3
 5737 056b 4983C404 		addq	$4, %r12
 5738              	.LVL829:
1989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 5739              		.loc 1 1989 0 discriminator 3
 5740 056f 4869C073 		imulq	$-6029, %rax, %rax
 5740      E8FFFF
 5741              	.LVL830:
 5742 0576 4801F2   		addq	%rsi, %rdx
 5743              	.LVL831:
1996:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 5744              		.loc 1 1996 0 discriminator 3
 5745 0579 4883C304 		addq	$4, %rbx
 5746              	.LVL832:
1985:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 5747              		.loc 1 1985 0 discriminator 3
 5748 057d 4D69C9D9 		imulq	$-16423, %r9, %r9
 5748      BFFFFF
 5749              	.LVL833:
1989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 5750              		.loc 1 1989 0 discriminator 3
 5751 0584 4869FF59 		imulq	$-679, %rdi, %rdi
 5751      FDFFFF
 5752              	.LVL834:
 5753 058b 4801D0   		addq	%rdx, %rax
1985:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 5754              		.loc 1 1985 0 discriminator 3
 5755 058e 4B8D8C0B 		leaq	8192(%r11,%r9), %rcx
 5755      00200000 
1989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 5756              		.loc 1 1989 0 discriminator 3
 5757 0596 488D8438 		leaq	8192(%rax,%rdi), %rax
 5757      00200000 
1985:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 5758              		.loc 1 1985 0 discriminator 3
 5759 059e 48C1F90E 		sarq	$14, %rcx
1989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 5760              		.loc 1 1989 0 discriminator 3
 5761 05a2 48C1F80E 		sarq	$14, %rax
1985:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 5762              		.loc 1 1985 0 discriminator 3
 5763 05a6 41894C24 		movl	%ecx, 92(%r12)
 5763      5C
 5764              	.LVL835:
1989:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 5765              		.loc 1 1989 0 discriminator 3
 5766 05ab 41894424 		movl	%eax, 28(%r12)
 5766      1C
 5767              	.LVL836:
1917:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 5768              		.loc 1 1917 0 discriminator 3
 5769 05b0 483B5C24 		cmpq	24(%rsp), %rbx
 5769      18
 5770 05b5 0F8565FD 		jne	.L97
 5770      FFFF
1997:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
1998:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 5771              		.loc 1 1998 0
 5772 05bb 488B8424 		movq	312(%rsp), %rax
 5772      38010000 
 5773 05c3 64483304 		xorq	%fs:40, %rax
 5773      25280000 
 5773      00
 5774 05cc 751C     		jne	.L104
 5775 05ce 4881C448 		addq	$328, %rsp
 5775      010000
 5776              		.cfi_remember_state
 5777              		.cfi_def_cfa_offset 56
 5778 05d5 5B       		popq	%rbx
 5779              		.cfi_def_cfa_offset 48
 5780              	.LVL837:
 5781 05d6 5D       		popq	%rbp
 5782              		.cfi_def_cfa_offset 40
 5783 05d7 415C     		popq	%r12
 5784              		.cfi_def_cfa_offset 32
 5785              	.LVL838:
 5786 05d9 415D     		popq	%r13
 5787              		.cfi_def_cfa_offset 24
 5788 05db 415E     		popq	%r14
 5789              		.cfi_def_cfa_offset 16
 5790 05dd 415F     		popq	%r15
 5791              		.cfi_def_cfa_offset 8
 5792 05df C3       		ret
 5793              	.LVL839:
 5794              	.L99:
 5795              		.cfi_restore_state
1905:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 5796              		.loc 1 1905 0
 5797 05e0 4C8D5424 		leaq	112(%rsp), %r10
 5797      70
 5798              	.LVL840:
 5799 05e5 E962FAFF 		jmp	.L95
 5799      FF
 5800              	.LVL841:
 5801              	.L104:
 5802              		.loc 1 1998 0
 5803 05ea E8000000 		call	__stack_chk_fail
 5803      00
 5804              	.LVL842:
 5805              		.cfi_endproc
 5806              	.LFE74:
 5808              		.section	.text.unlikely.jpeg_fdct_14x14
 5809              	.LCOLDE13:
 5810              		.section	.text.jpeg_fdct_14x14
 5811              	.LHOTE13:
 5812              		.section	.text.unlikely.jpeg_fdct_15x15,"ax",@progbits
 5813              	.LCOLDB14:
 5814              		.section	.text.jpeg_fdct_15x15,"ax",@progbits
 5815              	.LHOTB14:
 5816              		.p2align 4,,15
 5817              		.globl	jpeg_fdct_15x15
 5819              	jpeg_fdct_15x15:
 5820              	.LFB75:
1999:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2000:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2001:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
2002:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 15x15 sample block.
2003:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
2004:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2005:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
2006:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_15x15 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
2007:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 5821              		.loc 1 2007 0
 5822              		.cfi_startproc
 5823              	.LVL843:
 5824 0000 4157     		pushq	%r15
 5825              		.cfi_def_cfa_offset 16
 5826              		.cfi_offset 15, -16
 5827 0002 4156     		pushq	%r14
 5828              		.cfi_def_cfa_offset 24
 5829              		.cfi_offset 14, -24
2008:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
2009:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
2010:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1, z2, z3;
2011:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*7];
2012:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
2013:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
2014:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
2015:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
2016:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
2017:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2018:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
2019:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT.
2020:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/30).
2021:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2022:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2023:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 5830              		.loc 1 2023 0
 5831 0004 4989F9   		movq	%rdi, %r9
2007:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
 5832              		.loc 1 2007 0
 5833 0007 4155     		pushq	%r13
 5834              		.cfi_def_cfa_offset 32
 5835              		.cfi_offset 13, -32
 5836 0009 4154     		pushq	%r12
 5837              		.cfi_def_cfa_offset 40
 5838              		.cfi_offset 12, -40
 5839 000b 55       		pushq	%rbp
 5840              		.cfi_def_cfa_offset 48
 5841              		.cfi_offset 6, -48
 5842 000c 53       		pushq	%rbx
 5843              		.cfi_def_cfa_offset 56
 5844              		.cfi_offset 3, -56
 5845 000d 4881EC58 		subq	$344, %rsp
 5845      010000
 5846              		.cfi_def_cfa_offset 400
2007:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
 5847              		.loc 1 2007 0
 5848 0014 64488B04 		movq	%fs:40, %rax
 5848      25280000 
 5848      00
 5849 001d 48898424 		movq	%rax, 328(%rsp)
 5849      48010000 
 5850 0025 31C0     		xorl	%eax, %eax
 5851              	.LVL844:
 5852 0027 89D0     		movl	%edx, %eax
 5853 0029 48897424 		movq	%rsi, 80(%rsp)
 5853      50
2024:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 5854              		.loc 1 2024 0
 5855 002e C7442408 		movl	$0, 8(%rsp)
 5855      00000000 
 5856 0036 48894424 		movq	%rax, 72(%rsp)
 5856      48
 5857 003b 48897C24 		movq	%rdi, 88(%rsp)
 5857      58
 5858 0040 EB0A     		jmp	.L106
 5859              	.LVL845:
 5860              		.p2align 4,,10
 5861 0042 660F1F44 		.p2align 3
 5861      0000
 5862              	.L114:
2025:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
2026:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
2027:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2028:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2029:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2030:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[14]);
2031:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[13]);
2032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[12]);
2033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[11]);
2034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[10]);
2035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[9]);
2036:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[8]);
2037:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]);
2038:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2039:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[14]);
2040:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[13]);
2041:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[12]);
2042:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[11]);
2043:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[10]);
2044:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[9]);
2045:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[8]);
2046:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2047:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp4 + tmp5;
2048:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp3 + tmp6;
2049:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = tmp2 + tmp7;
2050:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
2051:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM) (z1 + z2 + z3 - 15 * CENTERJSAMPLE);
2052:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 += z3;
2053:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
2054:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z3, FIX(1.144122806)) - /* c6 */
2055:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(z2 - z3, FIX(0.437016024)),  /* c12 */
2056:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS);
2057:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += ((tmp1 + tmp4) >> 1) - tmp7 - tmp7;
2058:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp3 - tmp2, FIX(1.531135173)) -  /* c2+c14 */
2059:fltk-1.3.4-1/jpeg/jfdctint.c ****          MULTIPLY(tmp6 - tmp2, FIX(2.238241955));   /* c4+c8 */
2060:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp5 - tmp2, FIX(0.798468008)) -  /* c8-c14 */
2061:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp0 - tmp2, FIX(0.091361227));   /* c2-c4 */
2062:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp3, FIX(1.383309603)) +  /* c2 */
2063:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
2064:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp1 - tmp4, FIX(0.790569415));   /* (c6+c12)/2 */
2065:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2066:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(z1 + z3, CONST_BITS);
2067:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS);
2068:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2069:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2070:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2071:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp12 - tmp13 + tmp15 + tmp16,
2072:fltk-1.3.4-1/jpeg/jfdctint.c **** 		    FIX(1.224744871));                         /* c5 */
2073:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 - tmp14 - tmp15, FIX(1.344997024)) + /* c3 */
2074:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 - tmp13 - tmp16, FIX(0.831253876));  /* c9 */
2075:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, FIX(1.224744871));                 /* c5 */
2076:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp10 - tmp16, FIX(1.406466353)) +         /* c1 */
2077:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp14, FIX(1.344997024)) +         /* c3 */
2078:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp13 + tmp15, FIX(0.575212477));          /* c11 */
2079:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp13, FIX(0.475753014)) -                 /* c7-c11 */
2080:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14, FIX(0.513743148)) +                 /* c3-c9 */
2081:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp16, FIX(1.700497885)) + tmp4 + tmp12;   /* c1+c13 */
2082:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10, - FIX(0.355500862)) -               /* -(c1-c7) */
2083:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11, FIX(2.176250899)) -                 /* c3+c9 */
2084:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp15, FIX(0.869244010)) + tmp4 - tmp12;   /* c11+c13 */
2085:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2086:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp0, CONST_BITS);
2087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
2089:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
2090:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2091:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
2092:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2093:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
2094:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 15)
2095:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
2096:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 5863              		.loc 1 2096 0
 5864 0048 4983C120 		addq	$32, %r9
 5865              	.LVL846:
 5866              	.L106:
2026:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5867              		.loc 1 2026 0
 5868 004c 48634424 		movslq	8(%rsp), %rax
 5868      08
 5869 0051 488B7C24 		movq	80(%rsp), %rdi
 5869      50
 5870 0056 488B5424 		movq	72(%rsp), %rdx
 5870      48
 5871 005b 480314C7 		addq	(%rdi,%rax,8), %rdx
 5872              	.LVL847:
2030:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[13]);
 5873              		.loc 1 2030 0
 5874 005f 0FB64A0E 		movzbl	14(%rdx), %ecx
 5875 0063 440FB612 		movzbl	(%rdx), %r10d
2031:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[12]);
 5876              		.loc 1 2031 0
 5877 0067 440FB66A 		movzbl	13(%rdx), %r13d
 5877      0D
 5878 006c 440FB642 		movzbl	1(%rdx), %r8d
 5878      01
2032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[11]);
 5879              		.loc 1 2032 0
 5880 0071 440FB662 		movzbl	12(%rdx), %r12d
 5880      0C
 5881 0076 0FB67A02 		movzbl	2(%rdx), %edi
2033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[10]);
 5882              		.loc 1 2033 0
 5883 007a 440FB672 		movzbl	11(%rdx), %r14d
 5883      0B
2034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[9]);
 5884              		.loc 1 2034 0
 5885 007f 0FB66A0A 		movzbl	10(%rdx), %ebp
2030:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[13]);
 5886              		.loc 1 2030 0
 5887 0083 418D040A 		leal	(%r10,%rcx), %eax
 5888 0087 894C2430 		movl	%ecx, 48(%rsp)
2035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[8]);
 5889              		.loc 1 2035 0
 5890 008b 0FB65A09 		movzbl	9(%rdx), %ebx
2036:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]);
 5891              		.loc 1 2036 0
 5892 008f 440FB65A 		movzbl	8(%rdx), %r11d
 5892      08
2039:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[13]);
 5893              		.loc 1 2039 0
 5894 0094 442B5424 		subl	48(%rsp), %r10d
 5894      30
2030:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[13]);
 5895              		.loc 1 2030 0
 5896 0099 4898     		cltq
 5897 009b 48894424 		movq	%rax, 32(%rsp)
 5897      20
 5898              	.LVL848:
2031:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[12]);
 5899              		.loc 1 2031 0
 5900 00a0 438D0428 		leal	(%r8,%r13), %eax
2033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[10]);
 5901              		.loc 1 2033 0
 5902 00a4 4589F7   		movl	%r14d, %r15d
 5903 00a7 44897C24 		movl	%r15d, 68(%rsp)
 5903      44
2040:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[12]);
 5904              		.loc 1 2040 0
 5905 00ac 4529E8   		subl	%r13d, %r8d
2031:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[12]);
 5906              		.loc 1 2031 0
 5907 00af 4863C8   		movslq	%eax, %rcx
2032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[11]);
 5908              		.loc 1 2032 0
 5909 00b2 428D0427 		leal	(%rdi,%r12), %eax
2041:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[11]);
 5910              		.loc 1 2041 0
 5911 00b6 4429E7   		subl	%r12d, %edi
2031:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[12]);
 5912              		.loc 1 2031 0
 5913 00b9 48894C24 		movq	%rcx, 40(%rsp)
 5913      28
 5914              	.LVL849:
2035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[8]);
 5915              		.loc 1 2035 0
 5916 00be 0FB64A05 		movzbl	5(%rdx), %ecx
2041:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[11]);
 5917              		.loc 1 2041 0
 5918 00c2 4863FF   		movslq	%edi, %rdi
2032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[11]);
 5919              		.loc 1 2032 0
 5920 00c5 4863F0   		movslq	%eax, %rsi
2041:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[11]);
 5921              		.loc 1 2041 0
 5922 00c8 48897C24 		movq	%rdi, 48(%rsp)
 5922      30
2039:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[13]);
 5923              		.loc 1 2039 0
 5924 00cd 4D63D2   		movslq	%r10d, %r10
2032:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[11]);
 5925              		.loc 1 2032 0
 5926 00d0 48897424 		movq	%rsi, 56(%rsp)
 5926      38
 5927              	.LVL850:
2033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[10]);
 5928              		.loc 1 2033 0
 5929 00d5 0FB67203 		movzbl	3(%rdx), %esi
2040:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[12]);
 5930              		.loc 1 2040 0
 5931 00d9 4D63C0   		movslq	%r8d, %r8
2033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[10]);
 5932              		.loc 1 2033 0
 5933 00dc 4189F6   		movl	%esi, %r14d
 5934 00df 89742440 		movl	%esi, 64(%rsp)
2042:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[10]);
 5935              		.loc 1 2042 0
 5936 00e3 448B6424 		movl	64(%rsp), %r12d
 5936      40
2033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[10]);
 5937              		.loc 1 2033 0
 5938 00e8 4501FE   		addl	%r15d, %r14d
2042:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[10]);
 5939              		.loc 1 2042 0
 5940 00eb 442B6424 		subl	68(%rsp), %r12d
 5940      44
2033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[10]);
 5941              		.loc 1 2033 0
 5942 00f0 4963F6   		movslq	%r14d, %rsi
 5943 00f3 48897424 		movq	%rsi, 16(%rsp)
 5943      10
 5944              	.LVL851:
2034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[9]);
 5945              		.loc 1 2034 0
 5946 00f8 0FB67204 		movzbl	4(%rdx), %esi
2042:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[10]);
 5947              		.loc 1 2042 0
 5948 00fc 4D63E4   		movslq	%r12d, %r12
2034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[9]);
 5949              		.loc 1 2034 0
 5950 00ff 8D042E   		leal	(%rsi,%rbp), %eax
2043:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[9]);
 5951              		.loc 1 2043 0
 5952 0102 29EE     		subl	%ebp, %esi
 5953 0104 4863F6   		movslq	%esi, %rsi
2034:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[9]);
 5954              		.loc 1 2034 0
 5955 0107 4C63F0   		movslq	%eax, %r14
 5956              	.LVL852:
2035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[8]);
 5957              		.loc 1 2035 0
 5958 010a 8D0419   		leal	(%rcx,%rbx), %eax
2044:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[8]);
 5959              		.loc 1 2044 0
 5960 010d 29D9     		subl	%ebx, %ecx
 5961 010f 4863C9   		movslq	%ecx, %rcx
2035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[8]);
 5962              		.loc 1 2035 0
 5963 0112 4C63F8   		movslq	%eax, %r15
2036:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]);
 5964              		.loc 1 2036 0
 5965 0115 0FB64206 		movzbl	6(%rdx), %eax
2037:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5966              		.loc 1 2037 0
 5967 0119 0FB65207 		movzbl	7(%rdx), %edx
 5968              	.LVL853:
2035:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[8]);
 5969              		.loc 1 2035 0
 5970 011d 4C897C24 		movq	%r15, 24(%rsp)
 5970      18
 5971              	.LVL854:
2036:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]);
 5972              		.loc 1 2036 0
 5973 0122 468D3C18 		leal	(%rax,%r11), %r15d
2045:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 5974              		.loc 1 2045 0
 5975 0126 4429D8   		subl	%r11d, %eax
 5976 0129 4863F8   		movslq	%eax, %rdi
2047:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp3 + tmp6;
 5977              		.loc 1 2047 0
 5978 012c 488B4424 		movq	32(%rsp), %rax
 5978      20
2036:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]);
 5979              		.loc 1 2036 0
 5980 0131 4D63FF   		movslq	%r15d, %r15
 5981              	.LVL855:
2047:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp3 + tmp6;
 5982              		.loc 1 2047 0
 5983 0134 4E8D1C30 		leaq	(%rax,%r14), %r11
 5984 0138 4C035C24 		addq	24(%rsp), %r11
 5984      18
 5985              	.LVL856:
2049:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 5986              		.loc 1 2049 0
 5987 013d 4C8B6C24 		movq	56(%rsp), %r13
 5987      38
2048:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = tmp2 + tmp7;
 5988              		.loc 1 2048 0
 5989 0142 488B6C24 		movq	40(%rsp), %rbp
 5989      28
 5990 0147 48036C24 		addq	16(%rsp), %rbp
 5990      10
2049:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 5991              		.loc 1 2049 0
 5992 014c 4C89EB   		movq	%r13, %rbx
 5993 014f 4801D3   		addq	%rdx, %rbx
2048:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = tmp2 + tmp7;
 5994              		.loc 1 2048 0
 5995 0152 4889E8   		movq	%rbp, %rax
2051:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 += z3;
 5996              		.loc 1 2051 0
 5997 0155 428DAC1B 		leal	-1920(%rbx,%r11), %ebp
 5997      80F8FFFF 
2052:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 5998              		.loc 1 2052 0
 5999 015d 4801DB   		addq	%rbx, %rbx
2048:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = tmp2 + tmp7;
 6000              		.loc 1 2048 0
 6001 0160 4C01F8   		addq	%r15, %rax
 6002              	.LVL857:
2053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z3, FIX(1.144122806)) - /* c6 */
 6003              		.loc 1 2053 0
 6004 0163 4929DB   		subq	%rbx, %r11
 6005              	.LVL858:
2051:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 += z3;
 6006              		.loc 1 2051 0
 6007 0166 01C5     		addl	%eax, %ebp
2053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z3, FIX(1.144122806)) - /* c6 */
 6008              		.loc 1 2053 0
 6009 0168 4829D8   		subq	%rbx, %rax
 6010              	.LVL859:
2062:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
 6011              		.loc 1 2062 0
 6012 016b 488B5C24 		movq	32(%rsp), %rbx
 6012      20
 6013              	.LVL860:
2053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z3, FIX(1.144122806)) - /* c6 */
 6014              		.loc 1 2053 0
 6015 0170 4D69DB9D 		imulq	$9373, %r11, %r11
 6015      240000
2051:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 += z3;
 6016              		.loc 1 2051 0
 6017 0177 418929   		movl	%ebp, (%r9)
 6018              	.LVL861:
2057:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp3 - tmp2, FIX(1.531135173)) -  /* c2+c14 */
 6019              		.loc 1 2057 0
 6020 017a 488B6C24 		movq	40(%rsp), %rbp
 6020      28
2053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z3, FIX(1.144122806)) - /* c6 */
 6021              		.loc 1 2053 0
 6022 017f 4869C004 		imulq	$-3580, %rax, %rax
 6022      F2FFFF
 6023 0186 498D8403 		leaq	4096(%r11,%rax), %rax
 6023      00100000 
2062:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
 6024              		.loc 1 2062 0
 6025 018e 4989DB   		movq	%rbx, %r11
 6026 0191 4C2B5C24 		subq	16(%rsp), %r11
 6026      10
2053:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z3, FIX(1.144122806)) - /* c6 */
 6027              		.loc 1 2053 0
 6028 0196 48C1F80D 		sarq	$13, %rax
 6029 019a 41894118 		movl	%eax, 24(%r9)
2057:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp3 - tmp2, FIX(1.531135173)) -  /* c2+c14 */
 6030              		.loc 1 2057 0
 6031 019e 4A8D4435 		leaq	0(%rbp,%r14), %rax
 6031      00
2062:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
 6032              		.loc 1 2062 0
 6033 01a3 4D69DB44 		imulq	$11332, %r11, %r11
 6033      2C0000
2057:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp3 - tmp2, FIX(1.531135173)) -  /* c2+c14 */
 6034              		.loc 1 2057 0
 6035 01aa 48D1F8   		sarq	%rax
 6036 01ad 4829D0   		subq	%rdx, %rax
 6037 01b0 4829D0   		subq	%rdx, %rax
 6038 01b3 4C89EA   		movq	%r13, %rdx
 6039              	.LVL862:
2062:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
 6040              		.loc 1 2062 0
 6041 01b6 4D89FD   		movq	%r15, %r13
 6042 01b9 4C2B6C24 		subq	24(%rsp), %r13
 6042      18
2057:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp3 - tmp2, FIX(1.531135173)) -  /* c2+c14 */
 6043              		.loc 1 2057 0
 6044 01be 4801C2   		addq	%rax, %rdx
 6045              	.LVL863:
2062:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
 6046              		.loc 1 2062 0
 6047 01c1 4969C548 		imulq	$7752, %r13, %rax
 6047      1E0000
 6048 01c8 4C01D8   		addq	%r11, %rax
 6049 01cb 4989EB   		movq	%rbp, %r11
2067:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6050              		.loc 1 2067 0
 6051 01ce 488B6C24 		movq	24(%rsp), %rbp
 6051      18
2062:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
 6052              		.loc 1 2062 0
 6053 01d3 4D29F3   		subq	%r14, %r11
2066:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS);
 6054              		.loc 1 2066 0
 6055 01d6 4C8B7424 		movq	16(%rsp), %r14
 6055      10
 6056              	.LVL864:
2062:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(0.946293579)) +  /* c8 */
 6057              		.loc 1 2062 0
 6058 01db 4D69DB4C 		imulq	$6476, %r11, %r11
 6058      190000
 6059 01e2 4901C3   		addq	%rax, %r11
 6060              	.LVL865:
2066:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS);
 6061              		.loc 1 2066 0
 6062 01e5 4929D6   		subq	%rdx, %r14
 6063 01e8 4929D7   		subq	%rdx, %r15
 6064              	.LVL866:
 6065 01eb 4969C6FF 		imulq	$12543, %r14, %rax
 6065      300000
2067:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6066              		.loc 1 2067 0
 6067 01f2 4829D5   		subq	%rdx, %rbp
 6068 01f5 4829D3   		subq	%rdx, %rbx
2066:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS);
 6069              		.loc 1 2066 0
 6070 01f8 4D69FF60 		imulq	$-18336, %r15, %r15
 6070      B8FFFF
2067:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6071              		.loc 1 2067 0
 6072 01ff 4869D314 		imulq	$-748, %rbx, %rdx
 6072      FDFFFF
 6073              	.LVL867:
2066:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS);
 6074              		.loc 1 2066 0
 6075 0206 4901C7   		addq	%rax, %r15
 6076              	.LVL868:
 6077 0209 4B8D843B 		leaq	4096(%r11,%r15), %rax
 6077      00100000 
2075:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp10 - tmp16, FIX(1.406466353)) +         /* c1 */
 6078              		.loc 1 2075 0
 6079 0211 4C8B7C24 		movq	48(%rsp), %r15
 6079      30
 6080              	.LVL869:
2086:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 6081              		.loc 1 2086 0
 6082 0216 4969DC39 		imulq	$3897, %r12, %rbx
 6082      0F0000
2066:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS);
 6083              		.loc 1 2066 0
 6084 021d 48C1F80D 		sarq	$13, %rax
 6085 0221 41894108 		movl	%eax, 8(%r9)
2067:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6086              		.loc 1 2067 0
 6087 0225 4869C58D 		imulq	$6541, %rbp, %rax
 6087      190000
 6088 022c 4801D0   		addq	%rdx, %rax
 6089              	.LVL870:
2076:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp14, FIX(1.344997024)) +         /* c3 */
 6090              		.loc 1 2076 0
 6091 022f 4C89D2   		movq	%r10, %rdx
2067:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6092              		.loc 1 2067 0
 6093 0232 498D8403 		leaq	4096(%r11,%rax), %rax
 6093      00100000 
 6094              	.LVL871:
2076:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp14, FIX(1.344997024)) +         /* c3 */
 6095              		.loc 1 2076 0
 6096 023a 4829FA   		subq	%rdi, %rdx
 6097 023d 4869D202 		imulq	$11522, %rdx, %rdx
 6097      2D0000
2067:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6098              		.loc 1 2067 0
 6099 0244 48C1F80D 		sarq	$13, %rax
 6100 0248 41894110 		movl	%eax, 16(%r9)
 6101              	.LVL872:
2076:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp14, FIX(1.344997024)) +         /* c3 */
 6102              		.loc 1 2076 0
 6103 024c 498D0430 		leaq	(%r8,%rsi), %rax
 6104 0250 4869C00A 		imulq	$11018, %rax, %rax
 6104      2B0000
2075:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp10 - tmp16, FIX(1.406466353)) +         /* c1 */
 6105              		.loc 1 2075 0
 6106 0257 4D69DF31 		imulq	$10033, %r15, %r11
 6106      270000
 6107              	.LVL873:
2076:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp14, FIX(1.344997024)) +         /* c3 */
 6108              		.loc 1 2076 0
 6109 025e 4801D0   		addq	%rdx, %rax
 6110 0261 498D140C 		leaq	(%r12,%rcx), %rdx
 6111 0265 4869D268 		imulq	$4712, %rdx, %rdx
 6111      120000
 6112 026c 4801C2   		addq	%rax, %rdx
 6113              	.LVL874:
2086:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 6114              		.loc 1 2086 0
 6115 026f 4869C68F 		imulq	$-4209, %rsi, %rax
 6115      EFFFFF
 6116 0276 4801D8   		addq	%rbx, %rax
 6117 0279 4869DF6A 		imulq	$13930, %rdi, %rbx
 6117      360000
 6118              	.LVL875:
 6119 0280 4801D8   		addq	%rbx, %rax
2087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 6120              		.loc 1 2087 0
 6121 0283 4C89D3   		movq	%r10, %rbx
 6122              	.LVL876:
2086:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 6123              		.loc 1 2086 0
 6124 0286 4801D0   		addq	%rdx, %rax
2087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 6125              		.loc 1 2087 0
 6126 0289 4829F3   		subq	%rsi, %rbx
2086:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 6127              		.loc 1 2086 0
 6128 028c 498D8403 		leaq	4096(%r11,%rax), %rax
 6128      00100000 
2087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 6129              		.loc 1 2087 0
 6130 0294 4889DE   		movq	%rbx, %rsi
 6131              	.LVL877:
 6132 0297 4C89C3   		movq	%r8, %rbx
 6133 029a 4C29E3   		subq	%r12, %rbx
 6134 029d 4829CE   		subq	%rcx, %rsi
2086:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS);
 6135              		.loc 1 2086 0
 6136 02a0 48C1F80D 		sarq	$13, %rax
 6137 02a4 41894104 		movl	%eax, 4(%r9)
2087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 6138              		.loc 1 2087 0
 6139 02a8 4889D8   		movq	%rbx, %rax
 6140 02ab 4829F8   		subq	%rdi, %rax
 6141 02ae 4869F60A 		imulq	$11018, %rsi, %rsi
 6141      2B0000
 6142 02b5 4869C09A 		imulq	$6810, %rax, %rax
 6142      1A0000
 6143 02bc 488D8406 		leaq	4096(%rsi,%rax), %rax
 6143      00100000 
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6144              		.loc 1 2088 0
 6145 02c4 4C89D6   		movq	%r10, %rsi
2087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 6146              		.loc 1 2087 0
 6147 02c7 48C1F80D 		sarq	$13, %rax
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6148              		.loc 1 2088 0
 6149 02cb 4C29FE   		subq	%r15, %rsi
 6150              	.LVL878:
2089:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6151              		.loc 1 2089 0
 6152 02ce 4C29DA   		subq	%r11, %rdx
 6153              	.LVL879:
2087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS);
 6154              		.loc 1 2087 0
 6155 02d1 4189410C 		movl	%eax, 12(%r9)
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6156              		.loc 1 2088 0
 6157 02d5 4889F0   		movq	%rsi, %rax
2091:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6158              		.loc 1 2091 0
 6159 02d8 83442408 		addl	$1, 8(%rsp)
 6159      01
 6160              	.LVL880:
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6161              		.loc 1 2088 0
 6162 02dd 4C29E0   		subq	%r12, %rax
2089:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6163              		.loc 1 2089 0
 6164 02e0 4D69D2A0 		imulq	$-2912, %r10, %r10
 6164      F4FFFF
 6165              	.LVL881:
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6166              		.loc 1 2088 0
 6167 02e7 4801C8   		addq	%rcx, %rax
2089:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6168              		.loc 1 2089 0
 6169 02ea 4D69C05C 		imulq	$-17828, %r8, %r8
 6169      BAFFFF
 6170              	.LVL882:
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6171              		.loc 1 2088 0
 6172 02f1 4801C7   		addq	%rax, %rdi
 6173              	.LVL883:
2089:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6174              		.loc 1 2089 0
 6175 02f4 4869C92F 		imulq	$-7121, %rcx, %rcx
 6175      E4FFFF
 6176              	.LVL884:
 6177 02fb 4D01D0   		addq	%r10, %r8
 6178 02fe 4C01C1   		addq	%r8, %rcx
 6179 0301 488D840A 		leaq	4096(%rdx,%rcx), %rax
 6179      00100000 
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6180              		.loc 1 2088 0
 6181 0309 4869FF31 		imulq	$10033, %rdi, %rdi
 6181      270000
2089:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6182              		.loc 1 2089 0
 6183 0310 48C1F80D 		sarq	$13, %rax
 6184 0314 4189411C 		movl	%eax, 28(%r9)
2091:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6185              		.loc 1 2091 0
 6186 0318 8B442408 		movl	8(%rsp), %eax
 6187              	.LVL885:
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6188              		.loc 1 2088 0
 6189 031c 4881C700 		addq	$4096, %rdi
 6189      100000
 6190 0323 48C1FF0D 		sarq	$13, %rdi
2093:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 15)
 6191              		.loc 1 2093 0
 6192 0327 83F808   		cmpl	$8, %eax
2088:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS);
 6193              		.loc 1 2088 0
 6194 032a 41897914 		movl	%edi, 20(%r9)
2093:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 15)
 6195              		.loc 1 2093 0
 6196 032e 0F843303 		je	.L110
 6196      0000
2094:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 6197              		.loc 1 2094 0
 6198 0334 83F80F   		cmpl	$15, %eax
 6199 0337 0F850BFD 		jne	.L114
 6199      FFFF
2097:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
2098:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
2099:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2100:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2101:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
2102:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
2103:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/15)**2 = 64/225, which we partially
2104:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers and final shifting:
2105:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK now represents sqrt(2) * cos(K*pi/30) * 256/225.
2106:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2107:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2108:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
2109:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
2110:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 6200              		.loc 1 2110 0
 6201 033d 488D8424 		leaq	128(%rsp), %rax
 6201      80000000 
 6202              	.LVL886:
 6203 0345 4C8B5C24 		movq	88(%rsp), %r11
 6203      58
 6204              	.LVL887:
 6205 034a 4C8D6C24 		leaq	96(%rsp), %r13
 6205      60
 6206 034f 48894424 		movq	%rax, 56(%rsp)
 6206      38
 6207              	.LVL888:
 6208              		.p2align 4,,10
 6209 0354 0F1F4000 		.p2align 3
 6210              	.L108:
2111:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2112:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2113:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*6];
 6211              		.loc 1 2113 0 discriminator 3
 6212 0358 418B3B   		movl	(%r11), %edi
 6213 035b 458B85C0 		movl	192(%r13), %r8d
 6213      000000
2114:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*5];
2115:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*4];
 6214              		.loc 1 2115 0 discriminator 3
 6215 0362 418B9D80 		movl	128(%r13), %ebx
 6215      000000
 6216 0369 458B5340 		movl	64(%r11), %r10d
2114:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*5];
 6217              		.loc 1 2114 0 discriminator 3
 6218 036d 418B95A0 		movl	160(%r13), %edx
 6218      000000
 6219 0374 418B4B20 		movl	32(%r11), %ecx
2113:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*5];
 6220              		.loc 1 2113 0 discriminator 3
 6221 0378 428D0407 		leal	(%rdi,%r8), %eax
2116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*3];
2117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*2];
2118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*1];
2119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*0];
 6222              		.loc 1 2119 0 discriminator 3
 6223 037c 418BABC0 		movl	192(%r11), %ebp
 6223      000000
2117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*1];
 6224              		.loc 1 2117 0 discriminator 3
 6225 0383 458BA380 		movl	128(%r11), %r12d
 6225      000000
2115:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*3];
 6226              		.loc 1 2115 0 discriminator 3
 6227 038a 458D0C1A 		leal	(%r10,%rbx), %r9d
2120:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7];
2121:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2122:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*6];
2123:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*5];
2124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*4];
 6228              		.loc 1 2124 0 discriminator 3
 6229 038e 4129DA   		subl	%ebx, %r10d
2117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*1];
 6230              		.loc 1 2117 0 discriminator 3
 6231 0391 45036540 		addl	64(%r13), %r12d
2113:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*5];
 6232              		.loc 1 2113 0 discriminator 3
 6233 0395 4898     		cltq
2114:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*4];
 6234              		.loc 1 2114 0 discriminator 3
 6235 0397 8D3411   		leal	(%rcx,%rdx), %esi
2123:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*4];
 6236              		.loc 1 2123 0 discriminator 3
 6237 039a 29D1     		subl	%edx, %ecx
2113:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*5];
 6238              		.loc 1 2113 0 discriminator 3
 6239 039c 48894424 		movq	%rax, 24(%rsp)
 6239      18
 6240              	.LVL889:
2116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*2];
 6241              		.loc 1 2116 0 discriminator 3
 6242 03a1 418B4360 		movl	96(%r11), %eax
2115:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*3];
 6243              		.loc 1 2115 0 discriminator 3
 6244 03a5 4D63F1   		movslq	%r9d, %r14
2116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*2];
 6245              		.loc 1 2116 0 discriminator 3
 6246 03a8 41034560 		addl	96(%r13), %eax
2115:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*3];
 6247              		.loc 1 2115 0 discriminator 3
 6248 03ac 4C897424 		movq	%r14, 32(%rsp)
 6248      20
 6249              		.loc 1 2124 0 discriminator 3
 6250 03b1 4963D2   		movslq	%r10d, %rdx
 6251 03b4 48895424 		movq	%rdx, 48(%rsp)
 6251      30
2125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*3];
2126:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*2];
2127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*1];
 6252              		.loc 1 2127 0 discriminator 3
 6253 03b9 418B93A0 		movl	160(%r11), %edx
 6253      000000
2114:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*4];
 6254              		.loc 1 2114 0 discriminator 3
 6255 03c0 4863F6   		movslq	%esi, %rsi
 6256              	.LVL890:
2128:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*0];
2129:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2130:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp4 + tmp5;
 6257              		.loc 1 2130 0 discriminator 3
 6258 03c3 488B5C24 		movq	24(%rsp), %rbx
 6258      18
2117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*1];
 6259              		.loc 1 2117 0 discriminator 3
 6260 03c8 4D63E4   		movslq	%r12d, %r12
 6261              	.LVL891:
2126:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*1];
 6262              		.loc 1 2126 0 discriminator 3
 6263 03cb 458B9380 		movl	128(%r11), %r10d
 6263      000000
2122:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*5];
 6264              		.loc 1 2122 0 discriminator 3
 6265 03d2 4429C7   		subl	%r8d, %edi
2126:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*1];
 6266              		.loc 1 2126 0 discriminator 3
 6267 03d5 452B5540 		subl	64(%r13), %r10d
2125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*2];
 6268              		.loc 1 2125 0 discriminator 3
 6269 03d9 458B4360 		movl	96(%r11), %r8d
2116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*2];
 6270              		.loc 1 2116 0 discriminator 3
 6271 03dd 4C63F0   		movslq	%eax, %r14
 6272              	.LVL892:
2118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*0];
 6273              		.loc 1 2118 0 discriminator 3
 6274 03e0 418B83A0 		movl	160(%r11), %eax
 6274      000000
2125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*2];
 6275              		.loc 1 2125 0 discriminator 3
 6276 03e7 452B4560 		subl	96(%r13), %r8d
2116:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*2];
 6277              		.loc 1 2116 0 discriminator 3
 6278 03eb 4C897424 		movq	%r14, 8(%rsp)
 6278      08
 6279              	.LVL893:
2118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*0];
 6280              		.loc 1 2118 0 discriminator 3
 6281 03f0 458B7520 		movl	32(%r13), %r14d
2122:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*5];
 6282              		.loc 1 2122 0 discriminator 3
 6283 03f4 4863FF   		movslq	%edi, %rdi
2123:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*4];
 6284              		.loc 1 2123 0 discriminator 3
 6285 03f7 4863C9   		movslq	%ecx, %rcx
2126:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*1];
 6286              		.loc 1 2126 0 discriminator 3
 6287 03fa 4D63D2   		movslq	%r10d, %r10
2118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*0];
 6288              		.loc 1 2118 0 discriminator 3
 6289 03fd 4401F0   		addl	%r14d, %eax
2127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*0];
 6290              		.loc 1 2127 0 discriminator 3
 6291 0400 4429F2   		subl	%r14d, %edx
2131:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp3 + tmp6;
 6292              		.loc 1 2131 0 discriminator 3
 6293 0403 4C8B7424 		movq	8(%rsp), %r14
 6293      08
2118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*0];
 6294              		.loc 1 2118 0 discriminator 3
 6295 0408 4C63F8   		movslq	%eax, %r15
2119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7];
 6296              		.loc 1 2119 0 discriminator 3
 6297 040b 418B4500 		movl	0(%r13), %eax
2125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*2];
 6298              		.loc 1 2125 0 discriminator 3
 6299 040f 4D63C0   		movslq	%r8d, %r8
2118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*0];
 6300              		.loc 1 2118 0 discriminator 3
 6301 0412 4C897C24 		movq	%r15, 16(%rsp)
 6301      10
 6302              	.LVL894:
2127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*0];
 6303              		.loc 1 2127 0 discriminator 3
 6304 0417 4863D2   		movslq	%edx, %rdx
2119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7];
 6305              		.loc 1 2119 0 discriminator 3
 6306 041a 448D4C05 		leal	0(%rbp,%rax), %r9d
 6306      00
2128:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6307              		.loc 1 2128 0 discriminator 3
 6308 041f 29C5     		subl	%eax, %ebp
 6309 0421 4863C5   		movslq	%ebp, %rax
2130:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp3 + tmp6;
 6310              		.loc 1 2130 0 discriminator 3
 6311 0424 4A8D2C23 		leaq	(%rbx,%r12), %rbp
 6312              		.loc 1 2131 0 discriminator 3
 6313 0428 4A8D1C36 		leaq	(%rsi,%r14), %rbx
2119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7];
 6314              		.loc 1 2119 0 discriminator 3
 6315 042c 4D63F9   		movslq	%r9d, %r15
2130:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = tmp1 + tmp3 + tmp6;
 6316              		.loc 1 2130 0 discriminator 3
 6317 042f 48036C24 		addq	16(%rsp), %rbp
 6317      10
2119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7];
 6318              		.loc 1 2119 0 discriminator 3
 6319 0434 4D89F9   		movq	%r15, %r9
 6320              	.LVL895:
2120:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6321              		.loc 1 2120 0 discriminator 3
 6322 0437 4D63BBE0 		movslq	224(%r11), %r15
 6322      000000
 6323              	.LVL896:
 6324              		.loc 1 2131 0 discriminator 3
 6325 043e 4C01CB   		addq	%r9, %rbx
 6326              	.LVL897:
 6327 0441 4C894C24 		movq	%r9, 40(%rsp)
 6327      28
2132:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = tmp2 + tmp7;
 6328              		.loc 1 2132 0 discriminator 3
 6329 0446 4C8B4C24 		movq	32(%rsp), %r9
 6329      20
 6330              	.LVL898:
 6331 044b 4F8D3439 		leaq	(%r9,%r15), %r14
 6332              	.LVL899:
2133:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 6333              		.loc 1 2133 0 discriminator 3
 6334 044f 4C8D4C1D 		leaq	0(%rbp,%rbx), %r9
 6334      00
 6335 0454 4D01F1   		addq	%r14, %r9
2134:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + z2 + z3, FIX(1.137777778)), /* 256/225 */
2135:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
2136:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 += z3;
 6336              		.loc 1 2136 0 discriminator 3
 6337 0457 4D01F6   		addq	%r14, %r14
 6338              	.LVL900:
2133:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 6339              		.loc 1 2133 0 discriminator 3
 6340 045a 4D69C969 		imulq	$9321, %r9, %r9
 6340      240000
2137:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
 6341              		.loc 1 2137 0 discriminator 3
 6342 0461 4C29F5   		subq	%r14, %rbp
 6343              	.LVL901:
 6344 0464 4C29F3   		subq	%r14, %rbx
 6345              	.LVL902:
 6346 0467 4869EDA8 		imulq	$10664, %rbp, %rbp
 6346      290000
 6347 046e 4869DB17 		imulq	$-4073, %rbx, %rbx
 6347      F0FFFF
2133:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 6348              		.loc 1 2133 0 discriminator 3
 6349 0475 4981C100 		addq	$16384, %r9
 6349      400000
 6350 047c 49C1F90F 		sarq	$15, %r9
 6351 0480 45890B   		movl	%r9d, (%r11)
 6352              		.loc 1 2137 0 discriminator 3
 6353 0483 4C8D8C1D 		leaq	16384(%rbp,%rbx), %r9
 6353      00400000 
 6354 048b 49C1F90F 		sarq	$15, %r9
 6355 048f 45898BC0 		movl	%r9d, 192(%r11)
 6355      000000
2138:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 - z3, FIX(1.301757503)) - /* c6 */
2139:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(z2 - z3, FIX(0.497227121)),  /* c12 */
2140:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+2);
2141:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += ((tmp1 + tmp4) >> 1) - tmp7 - tmp7;
 6356              		.loc 1 2141 0 discriminator 3
 6357 0496 4E8D0C26 		leaq	(%rsi,%r12), %r9
2142:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp3 - tmp2, FIX(1.742091575)) -  /* c2+c14 */
2143:fltk-1.3.4-1/jpeg/jfdctint.c ****          MULTIPLY(tmp6 - tmp2, FIX(2.546621957));   /* c4+c8 */
2144:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp5 - tmp2, FIX(0.908479156)) -  /* c8-c14 */
2145:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp0 - tmp2, FIX(0.103948774));   /* c2-c4 */
2146:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp0 - tmp3, FIX(1.573898926)) +  /* c2 */
 6358              		.loc 1 2146 0 discriminator 3
 6359 049a 4C29E6   		subq	%r12, %rsi
 6360              	.LVL903:
2141:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp3 - tmp2, FIX(1.742091575)) -  /* c2+c14 */
 6361              		.loc 1 2141 0 discriminator 3
 6362 049d 49D1F9   		sarq	%r9
 6363 04a0 4D29F9   		subq	%r15, %r9
 6364 04a3 4D29F9   		subq	%r15, %r9
 6365 04a6 4C034C24 		addq	32(%rsp), %r9
 6365      20
 6366              	.LVL904:
 6367              		.loc 1 2146 0 discriminator 3
 6368 04ab 4C8B7424 		movq	24(%rsp), %r14
 6368      18
 6369              	.LVL905:
 6370 04b0 4C8B7C24 		movq	40(%rsp), %r15
 6370      28
 6371              	.LVL906:
 6372 04b5 4C89F5   		movq	%r14, %rbp
 6373 04b8 482B6C24 		subq	8(%rsp), %rbp
 6373      08
 6374 04bd 4C89FB   		movq	%r15, %rbx
 6375 04c0 482B5C24 		subq	16(%rsp), %rbx
 6375      10
 6376 04c5 4869ED5D 		imulq	$12893, %rbp, %rbp
 6376      320000
 6377 04cc 4869DB74 		imulq	$8820, %rbx, %rbx
 6377      220000
 6378 04d3 4801EB   		addq	%rbp, %rbx
2147:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(1.076671805)) +  /* c8 */
2148:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp1 - tmp4, FIX(0.899492312));   /* (c6+c12)/2 */
2149:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2150:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(z1 + z3, CONST_BITS+2);
 6379              		.loc 1 2150 0 discriminator 3
 6380 04d6 4C89FD   		movq	%r15, %rbp
2146:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(1.076671805)) +  /* c8 */
 6381              		.loc 1 2146 0 discriminator 3
 6382 04d9 4869F6C9 		imulq	$7369, %rsi, %rsi
 6382      1C0000
 6383              		.loc 1 2150 0 discriminator 3
 6384 04e0 4C29CD   		subq	%r9, %rbp
 6385 04e3 4869ED82 		imulq	$-20862, %rbp, %rbp
 6385      AEFFFF
2146:fltk-1.3.4-1/jpeg/jfdctint.c **** 	 MULTIPLY(tmp6 - tmp5, FIX(1.076671805)) +  /* c8 */
 6386              		.loc 1 2146 0 discriminator 3
 6387 04ea 4801F3   		addq	%rsi, %rbx
 6388              	.LVL907:
 6389              		.loc 1 2150 0 discriminator 3
 6390 04ed 488B7424 		movq	8(%rsp), %rsi
 6390      08
 6391 04f2 4C29CE   		subq	%r9, %rsi
 6392 04f5 4869F6BF 		imulq	$14271, %rsi, %rsi
 6392      370000
 6393 04fc 4801EE   		addq	%rbp, %rsi
 6394              	.LVL908:
 6395 04ff 488DB433 		leaq	16384(%rbx,%rsi), %rsi
 6395      00400000 
 6396              	.LVL909:
 6397 0507 48C1FE0F 		sarq	$15, %rsi
 6398 050b 41897340 		movl	%esi, 64(%r11)
2151:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS+2);
 6399              		.loc 1 2151 0 discriminator 3
 6400 050f 488B7424 		movq	16(%rsp), %rsi
 6400      10
 6401 0514 4C29CE   		subq	%r9, %rsi
 6402 0517 4869EE12 		imulq	$7442, %rsi, %rbp
 6402      1D0000
 6403 051e 4C89F6   		movq	%r14, %rsi
2152:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2153:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2154:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2155:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp12 - tmp13 + tmp15 + tmp16,
2156:fltk-1.3.4-1/jpeg/jfdctint.c **** 		    FIX(1.393487498));                         /* c5 */
2157:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 - tmp14 - tmp15, FIX(1.530307725)) + /* c3 */
2158:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 - tmp13 - tmp16, FIX(0.945782187));  /* c9 */
2159:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, FIX(1.393487498));                 /* c5 */
 6404              		.loc 1 2159 0 discriminator 3
 6405 0521 4C8B7424 		movq	48(%rsp), %r14
 6405      30
2151:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS+2);
 6406              		.loc 1 2151 0 discriminator 3
 6407 0526 4C29CE   		subq	%r9, %rsi
 6408 0529 4869F6AC 		imulq	$-852, %rsi, %rsi
 6408      FCFFFF
 6409              		.loc 1 2159 0 discriminator 3
 6410 0530 4D69CE97 		imulq	$11415, %r14, %r9
 6410      2C0000
 6411              	.LVL910:
2151:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS+2);
 6412              		.loc 1 2151 0 discriminator 3
 6413 0537 4801EE   		addq	%rbp, %rsi
 6414              	.LVL911:
 6415 053a 488DB433 		leaq	16384(%rbx,%rsi), %rsi
 6415      00400000 
 6416              	.LVL912:
2160:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp10 - tmp16, FIX(1.600246161)) +         /* c1 */
 6417              		.loc 1 2160 0 discriminator 3
 6418 0542 4889FB   		movq	%rdi, %rbx
 6419              	.LVL913:
 6420 0545 4829C3   		subq	%rax, %rbx
2151:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(z2 + z3, CONST_BITS+2);
 6421              		.loc 1 2151 0 discriminator 3
 6422 0548 48C1FE0F 		sarq	$15, %rsi
 6423 054c 4189B380 		movl	%esi, 128(%r11)
 6423      000000
 6424              	.LVL914:
 6425              		.loc 1 2160 0 discriminator 3
 6426 0553 4A8D3411 		leaq	(%rcx,%r10), %rsi
 6427 0557 4869DB35 		imulq	$13109, %rbx, %rbx
 6427      330000
 6428 055e 4869F6F8 		imulq	$12536, %rsi, %rsi
 6428      300000
2161:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11 + tmp14, FIX(1.530307725)) +         /* c3 */
2162:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp13 + tmp15, FIX(0.654463974));          /* c11 */
2163:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp13, FIX(0.541301207)) -                 /* c7-c11 */
2164:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp14, FIX(0.584525538)) +                 /* c3-c9 */
2165:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp16, FIX(1.934788705)) + tmp4 + tmp12;   /* c1+c13 */
2166:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10, - FIX(0.404480980)) -               /* -(c1-c7) */
2167:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp11, FIX(2.476089912)) -                 /* c3+c9 */
2168:fltk-1.3.4-1/jpeg/jfdctint.c **** 	   MULTIPLY(tmp15, FIX(0.989006518)) + tmp4 - tmp12;   /* c11+c13 */
2169:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2170:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp0, CONST_BITS+2);
 6429              		.loc 1 2170 0 discriminator 3
 6430 0565 4969E852 		imulq	$4434, %r8, %rbp
 6430      110000
2160:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = MULTIPLY(tmp10 - tmp16, FIX(1.600246161)) +         /* c1 */
 6431              		.loc 1 2160 0 discriminator 3
 6432 056c 4801F3   		addq	%rsi, %rbx
 6433 056f 498D3410 		leaq	(%r8,%rdx), %rsi
 6434 0573 4869F6F1 		imulq	$5361, %rsi, %rsi
 6434      140000
 6435 057a 4801DE   		addq	%rbx, %rsi
 6436              	.LVL915:
 6437              		.loc 1 2170 0 discriminator 3
 6438 057d 4969DA4C 		imulq	$-4788, %r10, %rbx
 6438      EDFFFF
 6439 0584 4801EB   		addq	%rbp, %rbx
 6440 0587 4869E8EA 		imulq	$15850, %rax, %rbp
 6440      3D0000
 6441              	.LVL916:
 6442 058e 4801EB   		addq	%rbp, %rbx
 6443 0591 4801F3   		addq	%rsi, %rbx
 6444 0594 498D9C19 		leaq	16384(%r9,%rbx), %rbx
 6444      00400000 
 6445 059c 48C1FB0F 		sarq	$15, %rbx
 6446 05a0 41895B20 		movl	%ebx, 32(%r11)
 6447              	.LVL917:
2171:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+2);
 6448              		.loc 1 2171 0 discriminator 3
 6449 05a4 4889FB   		movq	%rdi, %rbx
 6450 05a7 4C29D3   		subq	%r10, %rbx
 6451 05aa 4989CA   		movq	%rcx, %r10
 6452              	.LVL918:
 6453 05ad 4829D3   		subq	%rdx, %rbx
 6454 05b0 4D29C2   		subq	%r8, %r10
 6455 05b3 4869DBF8 		imulq	$12536, %rbx, %rbx
 6455      300000
 6456 05ba 4929C2   		subq	%rax, %r10
2172:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+2);
2173:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 6457              		.loc 1 2173 0 discriminator 3
 6458 05bd 4C29CE   		subq	%r9, %rsi
 6459              	.LVL919:
2171:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+2);
 6460              		.loc 1 2171 0 discriminator 3
 6461 05c0 4D69D244 		imulq	$7748, %r10, %r10
 6461      1E0000
2174:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2175:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 6462              		.loc 1 2175 0 discriminator 3
 6463 05c7 4983C304 		addq	$4, %r11
 6464              	.LVL920:
2176:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 6465              		.loc 1 2176 0 discriminator 3
 6466 05cb 4983C504 		addq	$4, %r13
 6467              	.LVL921:
2173:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6468              		.loc 1 2173 0 discriminator 3
 6469 05cf 4869C9C4 		imulq	$-20284, %rcx, %rcx
 6469      B0FFFF
 6470              	.LVL922:
2171:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+2);
 6471              		.loc 1 2171 0 discriminator 3
 6472 05d6 4E8D9413 		leaq	16384(%rbx,%r10), %r10
 6472      00400000 
 6473 05de 49C1FA0F 		sarq	$15, %r10
 6474 05e2 4589535C 		movl	%r10d, 92(%r11)
2172:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 6475              		.loc 1 2172 0 discriminator 3
 6476 05e6 4989FA   		movq	%rdi, %r10
 6477 05e9 4D29F2   		subq	%r14, %r10
 6478              	.LVL923:
 6479 05ec 4D29C2   		subq	%r8, %r10
 6480              	.LVL924:
 6481 05ef 4D89D0   		movq	%r10, %r8
 6482              	.LVL925:
 6483 05f2 4901D0   		addq	%rdx, %r8
 6484 05f5 4C01C0   		addq	%r8, %rax
 6485              	.LVL926:
 6486 05f8 4869C097 		imulq	$11415, %rax, %rax
 6486      2C0000
2173:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6487              		.loc 1 2173 0 discriminator 3
 6488 05ff 4869FF0E 		imulq	$-3314, %rdi, %rdi
 6488      F3FFFF
 6489              	.LVL927:
 6490 0606 4869D25A 		imulq	$-8102, %rdx, %rdx
 6490      E0FFFF
 6491              	.LVL928:
2172:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 6492              		.loc 1 2172 0 discriminator 3
 6493 060d 48050040 		addq	$16384, %rax
 6493      0000
2173:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6494              		.loc 1 2173 0 discriminator 3
 6495 0613 4801F9   		addq	%rdi, %rcx
2172:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 6496              		.loc 1 2172 0 discriminator 3
 6497 0616 48C1F80F 		sarq	$15, %rax
2173:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6498              		.loc 1 2173 0 discriminator 3
 6499 061a 4801CA   		addq	%rcx, %rdx
2172:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+2);
 6500              		.loc 1 2172 0 discriminator 3
 6501 061d 4189839C 		movl	%eax, 156(%r11)
 6501      000000
 6502              	.LVL929:
2173:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6503              		.loc 1 2173 0 discriminator 3
 6504 0624 488D8416 		leaq	16384(%rsi,%rdx), %rax
 6504      00400000 
 6505 062c 48C1F80F 		sarq	$15, %rax
 6506 0630 418983DC 		movl	%eax, 220(%r11)
 6506      000000
 6507              	.LVL930:
2110:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 6508              		.loc 1 2110 0 discriminator 3
 6509 0637 4C3B6C24 		cmpq	56(%rsp), %r13
 6509      38
 6510 063c 0F8516FD 		jne	.L108
 6510      FFFF
2177:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2178:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 6511              		.loc 1 2178 0
 6512 0642 488B8424 		movq	328(%rsp), %rax
 6512      48010000 
 6513 064a 64483304 		xorq	%fs:40, %rax
 6513      25280000 
 6513      00
 6514 0653 751C     		jne	.L115
 6515 0655 4881C458 		addq	$344, %rsp
 6515      010000
 6516              		.cfi_remember_state
 6517              		.cfi_def_cfa_offset 56
 6518 065c 5B       		popq	%rbx
 6519              		.cfi_def_cfa_offset 48
 6520 065d 5D       		popq	%rbp
 6521              		.cfi_def_cfa_offset 40
 6522 065e 415C     		popq	%r12
 6523              		.cfi_def_cfa_offset 32
 6524 0660 415D     		popq	%r13
 6525              		.cfi_def_cfa_offset 24
 6526              	.LVL931:
 6527 0662 415E     		popq	%r14
 6528              		.cfi_def_cfa_offset 16
 6529 0664 415F     		popq	%r15
 6530              		.cfi_def_cfa_offset 8
 6531 0666 C3       		ret
 6532              	.LVL932:
 6533              	.L110:
 6534              		.cfi_restore_state
2098:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 6535              		.loc 1 2098 0
 6536 0667 4C8D4C24 		leaq	96(%rsp), %r9
 6536      60
 6537              	.LVL933:
 6538 066c E9DBF9FF 		jmp	.L106
 6538      FF
 6539              	.LVL934:
 6540              	.L115:
 6541              		.loc 1 2178 0
 6542 0671 E8000000 		call	__stack_chk_fail
 6542      00
 6543              	.LVL935:
 6544              		.cfi_endproc
 6545              	.LFE75:
 6547              		.section	.text.unlikely.jpeg_fdct_15x15
 6548              	.LCOLDE14:
 6549              		.section	.text.jpeg_fdct_15x15
 6550              	.LHOTE14:
 6551              		.section	.text.unlikely.jpeg_fdct_16x16,"ax",@progbits
 6552              	.LCOLDB15:
 6553              		.section	.text.jpeg_fdct_16x16,"ax",@progbits
 6554              	.LHOTB15:
 6555              		.p2align 4,,15
 6556              		.globl	jpeg_fdct_16x16
 6558              	jpeg_fdct_16x16:
 6559              	.LFB76:
2179:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2180:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2181:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
2182:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 16x16 sample block.
2183:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
2184:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2185:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
2186:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_16x16 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
2187:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 6560              		.loc 1 2187 0
 6561              		.cfi_startproc
 6562              	.LVL936:
 6563 0000 4157     		pushq	%r15
 6564              		.cfi_def_cfa_offset 16
 6565              		.cfi_offset 15, -16
 6566 0002 4156     		pushq	%r14
 6567              		.cfi_def_cfa_offset 24
 6568              		.cfi_offset 14, -24
 6569 0004 89D2     		movl	%edx, %edx
 6570 0006 4155     		pushq	%r13
 6571              		.cfi_def_cfa_offset 32
 6572              		.cfi_offset 13, -32
 6573 0008 4154     		pushq	%r12
 6574              		.cfi_def_cfa_offset 40
 6575              		.cfi_offset 12, -40
 6576 000a 55       		pushq	%rbp
 6577              		.cfi_def_cfa_offset 48
 6578              		.cfi_offset 6, -48
 6579 000b 53       		pushq	%rbx
 6580              		.cfi_def_cfa_offset 56
 6581              		.cfi_offset 3, -56
 6582 000c 4881EC88 		subq	$392, %rsp
 6582      010000
 6583              		.cfi_def_cfa_offset 448
 6584              		.loc 1 2187 0
 6585 0013 48897424 		movq	%rsi, 96(%rsp)
 6585      60
 6586 0018 48897C24 		movq	%rdi, 104(%rsp)
 6586      68
 6587 001d 64488B34 		movq	%fs:40, %rsi
 6587      25280000 
 6587      00
 6588 0026 4889B424 		movq	%rsi, 376(%rsp)
 6588      78010000 
 6589 002e 31F6     		xorl	%esi, %esi
 6590              	.LVL937:
 6591 0030 48895424 		movq	%rdx, 88(%rsp)
 6591      58
2188:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
2189:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
2190:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[DCTSIZE2];
2191:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
2192:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
2193:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
2194:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
2195:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
2196:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2197:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
2198:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
2199:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
2200:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/32).
2201:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2202:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2203:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
2204:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 6592              		.loc 1 2204 0
 6593 0035 C7042400 		movl	$0, (%rsp)
 6593      000000
 6594 003c 48897C24 		movq	%rdi, 16(%rsp)
 6594      10
 6595 0041 EB11     		jmp	.L117
 6596              	.LVL938:
 6597              		.p2align 4,,10
 6598 0043 0F1F4400 		.p2align 3
 6598      00
 6599              	.L125:
2205:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
2206:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
2207:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2208:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2209:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2210:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[15]);
2211:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
2212:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
2214:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
2215:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
2216:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
2217:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
2218:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2219:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp7;
2220:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
2221:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
2222:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
2223:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
2224:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
2225:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
2226:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
2227:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2228:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[15]);
2229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[14]);
2230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[13]);
2231:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[12]);
2232:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[11]);
2233:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[10]);
2234:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[9]);
2235:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) - GETJSAMPLE(elemptr[8]);
2236:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2237:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
2238:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
2239:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
2240:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
2241:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
2242:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX_0_541196100),   /* c12[16] = c6[8] */
2243:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2244:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2245:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp17 - tmp15, FIX(0.275899379)) +   /* c14[16] = c7[8] */
2246:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
2247:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2248:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
2249:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
2250:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(2.172734804)),        /* c2+c10 */
2251:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2252:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
2253:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
2254:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp17, FIX(1.061594338)),        /* c10+c14 */
2255:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2256:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2257:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2258:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2259:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp1, FIX(1.353318001)) +         /* c3 */
2260:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
2261:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.247225013)) +         /* c5 */
2262:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
2263:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(1.093201867)) +         /* c7 */
2264:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
2265:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = MULTIPLY(tmp1 + tmp2, FIX(0.138617169)) +         /* c15 */
2266:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
2267:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = MULTIPLY(tmp1 + tmp3, - FIX(0.666655658)) +       /* -c11 */
2268:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
2269:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = MULTIPLY(tmp2 + tmp3, - FIX(1.353318001)) +       /* -c3 */
2270:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
2271:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
2272:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp0, FIX(2.286341144)) +                /* c7+c5+c3-c1 */
2273:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp7, FIX(0.779653625));                 /* c15+c13-c11+c9 */
2274:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 += tmp14 + tmp15 + MULTIPLY(tmp1, FIX(0.071888074)) /* c9-c3-c15+c11 */
2275:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     - MULTIPLY(tmp6, FIX(1.663905119));              /* c7+c13+c1-c5 */
2276:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp14 + tmp16 - MULTIPLY(tmp2, FIX(1.125726048)) /* c7+c5+c15-c3 */
2277:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp5, FIX(1.227391138));              /* c9-c11+c1-c13 */
2278:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp15 + tmp16 + MULTIPLY(tmp3, FIX(1.065388962)) /* c15+c3+c11-c7 */
2279:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp4, FIX(2.167985692));              /* c1+c13+c5-c9 */
2280:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2281:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp10, CONST_BITS-PASS1_BITS);
2282:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
2283:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
2284:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
2285:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2286:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
2287:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2288:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
2289:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == DCTSIZE * 2)
2290:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
2291:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 6600              		.loc 1 2291 0
 6601 0048 4889F0   		movq	%rsi, %rax
 6602              	.LVL939:
 6603 004b 4883C020 		addq	$32, %rax
 6604 004f 48894424 		movq	%rax, 16(%rsp)
 6604      10
 6605              	.LVL940:
 6606              	.L117:
2206:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6607              		.loc 1 2206 0
 6608 0054 48630424 		movslq	(%rsp), %rax
 6609 0058 488B7C24 		movq	96(%rsp), %rdi
 6609      60
 6610 005d 488B5C24 		movq	88(%rsp), %rbx
 6610      58
 6611 0062 48031CC7 		addq	(%rdi,%rax,8), %rbx
 6612              	.LVL941:
2210:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
 6613              		.loc 1 2210 0
 6614 0066 0FB67B0F 		movzbl	15(%rbx), %edi
 6615 006a 0FB60B   		movzbl	(%rbx), %ecx
2211:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 6616              		.loc 1 2211 0
 6617 006d 0FB6530E 		movzbl	14(%rbx), %edx
2212:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 6618              		.loc 1 2212 0
 6619 0071 440FB673 		movzbl	13(%rbx), %r14d
 6619      0D
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 6620              		.loc 1 2213 0
 6621 0076 0FB67303 		movzbl	3(%rbx), %esi
2217:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6622              		.loc 1 2217 0
 6623 007a 440FB663 		movzbl	8(%rbx), %r12d
 6623      08
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 6624              		.loc 1 2213 0
 6625 007f 440FB653 		movzbl	12(%rbx), %r10d
 6625      0C
2216:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 6626              		.loc 1 2216 0
 6627 0084 440FB66B 		movzbl	9(%rbx), %r13d
 6627      09
2210:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
 6628              		.loc 1 2210 0
 6629 0089 8D2C39   		leal	(%rcx,%rdi), %ebp
 6630 008c 897C2408 		movl	%edi, 8(%rsp)
2211:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 6631              		.loc 1 2211 0
 6632 0090 0FB67B01 		movzbl	1(%rbx), %edi
 6633 0094 89542420 		movl	%edx, 32(%rsp)
2212:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 6634              		.loc 1 2212 0
 6635 0098 44897424 		movl	%r14d, 48(%rsp)
 6635      30
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 6636              		.loc 1 2213 0
 6637 009d 89742434 		movl	%esi, 52(%rsp)
2216:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 6638              		.loc 1 2216 0
 6639 00a1 0FB64306 		movzbl	6(%rbx), %eax
2210:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
 6640              		.loc 1 2210 0
 6641 00a5 4863ED   		movslq	%ebp, %rbp
 6642              	.LVL942:
2214:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 6643              		.loc 1 2214 0
 6644 00a8 440FB67B 		movzbl	11(%rbx), %r15d
 6644      0B
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 6645              		.loc 1 2213 0
 6646 00ad 44895424 		movl	%r10d, 56(%rsp)
 6646      38
2211:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 6647              		.loc 1 2211 0
 6648 00b2 897C2418 		movl	%edi, 24(%rsp)
 6649 00b6 4189FB   		movl	%edi, %r11d
2212:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 6650              		.loc 1 2212 0
 6651 00b9 0FB67B02 		movzbl	2(%rbx), %edi
2211:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 6652              		.loc 1 2211 0
 6653 00bd 4101D3   		addl	%edx, %r11d
2214:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 6654              		.loc 1 2214 0
 6655 00c0 0FB65304 		movzbl	4(%rbx), %edx
2211:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 6656              		.loc 1 2211 0
 6657 00c4 4D63DB   		movslq	%r11d, %r11
 6658              	.LVL943:
2214:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 6659              		.loc 1 2214 0
 6660 00c7 44897C24 		movl	%r15d, 64(%rsp)
 6660      40
2212:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 6661              		.loc 1 2212 0
 6662 00cc 4189F9   		movl	%edi, %r9d
 6663 00cf 897C242C 		movl	%edi, 44(%rsp)
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 6664              		.loc 1 2213 0
 6665 00d3 89F7     		movl	%esi, %edi
2212:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 6666              		.loc 1 2212 0
 6667 00d5 4501F1   		addl	%r14d, %r9d
2214:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 6668              		.loc 1 2214 0
 6669 00d8 8954243C 		movl	%edx, 60(%rsp)
2215:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 6670              		.loc 1 2215 0
 6671 00dc 440FB673 		movzbl	10(%rbx), %r14d
 6671      0A
2214:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 6672              		.loc 1 2214 0
 6673 00e1 89D6     		movl	%edx, %esi
2215:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 6674              		.loc 1 2215 0
 6675 00e3 0FB65305 		movzbl	5(%rbx), %edx
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 6676              		.loc 1 2213 0
 6677 00e7 4401D7   		addl	%r10d, %edi
2216:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 6678              		.loc 1 2216 0
 6679 00ea 468D1428 		leal	(%rax,%r13), %r10d
2212:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 6680              		.loc 1 2212 0
 6681 00ee 4D63C9   		movslq	%r9d, %r9
 6682              	.LVL944:
2214:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 6683              		.loc 1 2214 0
 6684 00f1 4401FE   		addl	%r15d, %esi
 6685 00f4 4863F6   		movslq	%esi, %rsi
2213:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 6686              		.loc 1 2213 0
 6687 00f7 4863FF   		movslq	%edi, %rdi
 6688              	.LVL945:
2234:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) - GETJSAMPLE(elemptr[8]);
 6689              		.loc 1 2234 0
 6690 00fa 4429E8   		subl	%r13d, %eax
2216:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 6691              		.loc 1 2216 0
 6692 00fd 4D63D2   		movslq	%r10d, %r10
2234:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) - GETJSAMPLE(elemptr[8]);
 6693              		.loc 1 2234 0
 6694 0100 4898     		cltq
2215:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 6695              		.loc 1 2215 0
 6696 0102 468D0432 		leal	(%rdx,%r14), %r8d
 6697 0106 89542444 		movl	%edx, 68(%rsp)
2217:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6698              		.loc 1 2217 0
 6699 010a 0FB65307 		movzbl	7(%rbx), %edx
2215:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 6700              		.loc 1 2215 0
 6701 010e 4D63C0   		movslq	%r8d, %r8
 6702              	.LVL946:
2217:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6703              		.loc 1 2217 0
 6704 0111 428D1C22 		leal	(%rdx,%r12), %ebx
 6705              	.LVL947:
2235:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6706              		.loc 1 2235 0
 6707 0115 4429E2   		subl	%r12d, %edx
 6708 0118 4863D2   		movslq	%edx, %rdx
2217:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6709              		.loc 1 2217 0
 6710 011b 4863DB   		movslq	%ebx, %rbx
 6711              	.LVL948:
2219:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
 6712              		.loc 1 2219 0
 6713 011e 4C8D7C1D 		leaq	0(%rbp,%rbx), %r15
 6713      00
 6714              	.LVL949:
2220:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
 6715              		.loc 1 2220 0
 6716 0123 4829DD   		subq	%rbx, %rbp
 6717              	.LVL950:
2221:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
 6718              		.loc 1 2221 0
 6719 0126 4B8D1C13 		leaq	(%r11,%r10), %rbx
 6720              	.LVL951:
2220:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
 6721              		.loc 1 2220 0
 6722 012a 48896C24 		movq	%rbp, 72(%rsp)
 6722      48
 6723              	.LVL952:
2224:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 6724              		.loc 1 2224 0
 6725 012f 4C89CD   		movq	%r9, %rbp
2222:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
 6726              		.loc 1 2222 0
 6727 0132 4D29D3   		subq	%r10, %r11
 6728              	.LVL953:
2224:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 6729              		.loc 1 2224 0
 6730 0135 4C29C5   		subq	%r8, %rbp
2223:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
 6731              		.loc 1 2223 0
 6732 0138 4F8D1401 		leaq	(%r9,%r8), %r10
 6733              	.LVL954:
2225:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
 6734              		.loc 1 2225 0
 6735 013c 4C8D0437 		leaq	(%rdi,%rsi), %r8
 6736              	.LVL955:
2226:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6737              		.loc 1 2226 0
 6738 0140 4829F7   		subq	%rsi, %rdi
 6739              	.LVL956:
 6740 0143 48897C24 		movq	%rdi, 80(%rsp)
 6740      50
 6741              	.LVL957:
2228:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[14]);
 6742              		.loc 1 2228 0
 6743 0148 2B4C2408 		subl	8(%rsp), %ecx
 6744              	.LVL958:
2238:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 6745              		.loc 1 2238 0
 6746 014c 4C8B6C24 		movq	16(%rsp), %r13
 6746      10
 6747              	.LVL959:
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6748              		.loc 1 2245 0
 6749 0151 4C8B6424 		movq	80(%rsp), %r12
 6749      50
 6750              	.LVL960:
2228:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[14]);
 6751              		.loc 1 2228 0
 6752 0156 4863F1   		movslq	%ecx, %rsi
 6753              	.LVL961:
2229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[13]);
 6754              		.loc 1 2229 0
 6755 0159 8B4C2418 		movl	24(%rsp), %ecx
 6756 015d 2B4C2420 		subl	32(%rsp), %ecx
 6757 0161 4C63C9   		movslq	%ecx, %r9
 6758              	.LVL962:
2230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[12]);
 6759              		.loc 1 2230 0
 6760 0164 8B4C242C 		movl	44(%rsp), %ecx
 6761 0168 2B4C2430 		subl	48(%rsp), %ecx
2229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[13]);
 6762              		.loc 1 2229 0
 6763 016c 4C894C24 		movq	%r9, 8(%rsp)
 6763      08
 6764              	.LVL963:
2230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[12]);
 6765              		.loc 1 2230 0
 6766 0171 4C63C9   		movslq	%ecx, %r9
 6767              	.LVL964:
2231:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[11]);
 6768              		.loc 1 2231 0
 6769 0174 8B4C2434 		movl	52(%rsp), %ecx
 6770 0178 2B4C2438 		subl	56(%rsp), %ecx
 6771 017c 4863F9   		movslq	%ecx, %rdi
 6772              	.LVL965:
2232:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[10]);
 6773              		.loc 1 2232 0
 6774 017f 8B4C243C 		movl	60(%rsp), %ecx
 6775 0183 2B4C2440 		subl	64(%rsp), %ecx
 6776 0187 4863C9   		movslq	%ecx, %rcx
 6777 018a 48894C24 		movq	%rcx, 24(%rsp)
 6777      18
 6778              	.LVL966:
2233:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[9]);
 6779              		.loc 1 2233 0
 6780 018f 8B4C2444 		movl	68(%rsp), %ecx
 6781 0193 4429F1   		subl	%r14d, %ecx
 6782 0196 4C63F1   		movslq	%ecx, %r14
 6783              	.LVL967:
2238:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 6784              		.loc 1 2238 0
 6785 0199 498D0C1F 		leaq	(%r15,%rbx), %rcx
2240:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 6786              		.loc 1 2240 0
 6787 019d 4D29C7   		subq	%r8, %r15
 6788              	.LVL968:
 6789 01a0 4C29D3   		subq	%r10, %rbx
 6790              	.LVL969:
2238:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 6791              		.loc 1 2238 0
 6792 01a3 4C01D1   		addq	%r10, %rcx
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6793              		.loc 1 2245 0
 6794 01a6 4C8B5424 		movq	72(%rsp), %r10
 6794      48
 6795              	.LVL970:
2238:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 6796              		.loc 1 2238 0
 6797 01ab 498D8C08 		leaq	-2048(%r8,%rcx), %rcx
 6797      00F8FFFF 
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6798              		.loc 1 2245 0
 6799 01b3 4D89E0   		movq	%r12, %r8
 6800              	.LVL971:
2240:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 6801              		.loc 1 2240 0
 6802 01b6 4869DB51 		imulq	$4433, %rbx, %rbx
 6802      110000
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6803              		.loc 1 2245 0
 6804 01bd 4D29D8   		subq	%r11, %r8
2238:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 6805              		.loc 1 2238 0
 6806 01c0 48C1E102 		salq	$2, %rcx
 6807 01c4 41894D00 		movl	%ecx, 0(%r13)
 6808              	.LVL972:
2240:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 6809              		.loc 1 2240 0
 6810 01c8 4969CFCF 		imulq	$10703, %r15, %rcx
 6810      290000
2263:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 6811              		.loc 1 2263 0
 6812 01cf 4C8B7C24 		movq	24(%rsp), %r15
 6812      18
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6813              		.loc 1 2245 0
 6814 01d4 4D69C0D4 		imulq	$2260, %r8, %r8
 6814      080000
2248:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 6815              		.loc 1 2248 0
 6816 01db 4D69DB75 		imulq	$11893, %r11, %r11
 6816      2E0000
 6817              	.LVL973:
2240:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 6818              		.loc 1 2240 0
 6819 01e2 488D8C19 		leaq	1024(%rcx,%rbx), %rcx
 6819      00040000 
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6820              		.loc 1 2245 0
 6821 01ea 4C89D3   		movq	%r10, %rbx
 6822 01ed 4829EB   		subq	%rbp, %rbx
2240:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 6823              		.loc 1 2240 0
 6824 01f0 48C1F90B 		sarq	$11, %rcx
 6825 01f4 41894D10 		movl	%ecx, 16(%r13)
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6826              		.loc 1 2245 0
 6827 01f8 4869CB63 		imulq	$11363, %rbx, %rcx
 6827      2C0000
2259:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 6828              		.loc 1 2259 0
 6829 01ff 488B5C24 		movq	8(%rsp), %rbx
 6829      08
2248:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 6830              		.loc 1 2248 0
 6831 0204 4869ED87 		imulq	$17799, %rbp, %rbp
 6831      450000
 6832              	.LVL974:
2245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 6833              		.loc 1 2245 0
 6834 020b 4C01C1   		addq	%r8, %rcx
 6835              	.LVL975:
2248:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 6836              		.loc 1 2248 0
 6837 020e 4901CB   		addq	%rcx, %r11
 6838 0211 4D8D842B 		leaq	1024(%r11,%rbp), %r8
 6838      00040000 
2263:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 6839              		.loc 1 2263 0
 6840 0219 4C8D1C3E 		leaq	(%rsi,%rdi), %r11
2248:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 6841              		.loc 1 2248 0
 6842 021d 49C1F80B 		sarq	$11, %r8
2252:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 6843              		.loc 1 2252 0
 6844 0221 4969EA3E 		imulq	$-1730, %r10, %rbp
 6844      F9FFFF
2248:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 6845              		.loc 1 2248 0
 6846 0228 45894508 		movl	%r8d, 8(%r13)
2252:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 6847              		.loc 1 2252 0
 6848 022c 4D69D407 		imulq	$-8697, %r12, %r10
 6848      DEFFFF
2259:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 6849              		.loc 1 2259 0
 6850 0233 4C8D241E 		leaq	(%rsi,%rbx), %r12
2263:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 6851              		.loc 1 2263 0
 6852 0237 4D69DBFC 		imulq	$8956, %r11, %r11
 6852      220000
2252:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 6853              		.loc 1 2252 0
 6854 023e 4801E9   		addq	%rbp, %rcx
 6855              	.LVL976:
2261:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 6856              		.loc 1 2261 0
 6857 0241 4A8D2C0E 		leaq	(%rsi,%r9), %rbp
2252:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 6858              		.loc 1 2252 0
 6859 0245 4A8D8C11 		leaq	1024(%rcx,%r10), %rcx
 6859      00040000 
2259:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 6860              		.loc 1 2259 0
 6861 024d 4989C2   		movq	%rax, %r10
 6862 0250 4929D2   		subq	%rdx, %r10
2252:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 6863              		.loc 1 2252 0
 6864 0253 48C1F90B 		sarq	$11, %rcx
 6865 0257 41894D18 		movl	%ecx, 24(%r13)
2259:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 6866              		.loc 1 2259 0
 6867 025b 4D69E44E 		imulq	$11086, %r12, %r12
 6867      2B0000
 6868 0262 4969CA23 		imulq	$3363, %r10, %rcx
 6868      0D0000
2265:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
 6869              		.loc 1 2265 0
 6870 0269 4E8D140B 		leaq	(%rbx,%r9), %r10
2267:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 6871              		.loc 1 2267 0
 6872 026d 4801FB   		addq	%rdi, %rbx
2261:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 6873              		.loc 1 2261 0
 6874 0270 4869EDE9 		imulq	$10217, %rbp, %rbp
 6874      270000
2259:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 6875              		.loc 1 2259 0
 6876 0277 4901CC   		addq	%rcx, %r12
 6877              	.LVL977:
2261:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 6878              		.loc 1 2261 0
 6879 027a 498D0C16 		leaq	(%r14,%rdx), %rcx
2265:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
 6880              		.loc 1 2265 0
 6881 027e 4D69C270 		imulq	$1136, %r10, %r8
 6881      040000
 6882 0285 4989C2   		movq	%rax, %r10
2261:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 6883              		.loc 1 2261 0
 6884 0288 4869C955 		imulq	$5461, %rcx, %rcx
 6884      150000
2265:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
 6885              		.loc 1 2265 0
 6886 028f 4D29F2   		subq	%r14, %r10
2261:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 6887              		.loc 1 2261 0
 6888 0292 4801CD   		addq	%rcx, %rbp
 6889              	.LVL978:
2263:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 6890              		.loc 1 2263 0
 6891 0295 4C89F9   		movq	%r15, %rcx
 6892 0298 4829D1   		subq	%rdx, %rcx
 6893 029b 4869C9B6 		imulq	$7350, %rcx, %rcx
 6893      1C0000
2281:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 6894              		.loc 1 2281 0
 6895 02a2 4869D2F3 		imulq	$6387, %rdx, %rdx
 6895      180000
 6896              	.LVL979:
2263:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 6897              		.loc 1 2263 0
 6898 02a9 4901CB   		addq	%rcx, %r11
 6899              	.LVL980:
2265:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
 6900              		.loc 1 2265 0
 6901 02ac 4969CA09 		imulq	$11529, %r10, %rcx
 6901      2D0000
 6902 02b3 4D8D1408 		leaq	(%r8,%rcx), %r10
 6903              	.LVL981:
2267:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 6904              		.loc 1 2267 0
 6905 02b7 4C69C3AB 		imulq	$-5461, %rbx, %r8
 6905      EAFFFF
 6906 02be 498D1C07 		leaq	(%r15,%rax), %rbx
 6907 02c2 4869CB17 		imulq	$-10217, %rbx, %rcx
 6907      D8FFFF
 6908 02c9 498D1C08 		leaq	(%r8,%rcx), %rbx
 6909              	.LVL982:
2269:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 6910              		.loc 1 2269 0
 6911 02cd 4D8D0439 		leaq	(%r9,%rdi), %r8
 6912 02d1 4D69E8B2 		imulq	$-11086, %r8, %r13
 6912      D4FFFF
 6913 02d8 4D89F0   		movq	%r14, %r8
 6914 02db 4D29F8   		subq	%r15, %r8
 6915 02de 4969C823 		imulq	$3363, %r8, %rcx
 6915      0D0000
 6916 02e5 4D8D440D 		leaq	0(%r13,%rcx), %r8
 6916      00
 6917              	.LVL983:
2281:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 6918              		.loc 1 2281 0
 6919 02ea 4D8D2C2C 		leaq	(%r12,%rbp), %r13
 6920 02ee 4869CED6 		imulq	$-18730, %rsi, %rcx
 6920      B6FFFF
 6921 02f5 488B7424 		movq	16(%rsp), %rsi
 6921      10
 6922              	.LVL984:
 6923 02fa 4D01DD   		addq	%r11, %r13
 6924 02fd 4C01E9   		addq	%r13, %rcx
 6925 0300 488D9411 		leaq	1024(%rcx,%rdx), %rdx
 6925      00040000 
2282:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 6926              		.loc 1 2282 0
 6927 0308 48694C24 		imulq	$589, 8(%rsp), %rcx
 6927      084D0200 
 6927      00
 6928              	.LVL985:
2281:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 6929              		.loc 1 2281 0
 6930 0311 48C1FA0B 		sarq	$11, %rdx
 6931 0315 895604   		movl	%edx, 4(%rsi)
2282:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 6932              		.loc 1 2282 0
 6933 0318 498D141A 		leaq	(%r10,%rbx), %rdx
 6934 031c 4801D1   		addq	%rdx, %rcx
 6935              	.LVL986:
 6936 031f 4869C0C1 		imulq	$-13631, %rax, %rax
 6936      CAFFFF
 6937              	.LVL987:
2283:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 6938              		.loc 1 2283 0
 6939 0326 4D01C2   		addq	%r8, %r10
 6940              	.LVL988:
2284:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6941              		.loc 1 2284 0
 6942 0329 4901D8   		addq	%rbx, %r8
 6943              	.LVL989:
2283:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 6944              		.loc 1 2283 0
 6945 032c 4D69F647 		imulq	$10055, %r14, %r14
 6945      270000
 6946              	.LVL990:
2286:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6947              		.loc 1 2286 0
 6948 0333 83042401 		addl	$1, (%rsp)
 6949              	.LVL991:
2282:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 6950              		.loc 1 2282 0
 6951 0337 4801C8   		addq	%rcx, %rax
2283:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 6952              		.loc 1 2283 0
 6953 033a 4969C9FA 		imulq	$-9222, %r9, %rcx
 6953      DBFFFF
2282:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 6954              		.loc 1 2282 0
 6955 0341 498D8404 		leaq	1024(%r12,%rax), %rax
 6955      00040000 
 6956 0349 48C1F80B 		sarq	$11, %rax
 6957 034d 89460C   		movl	%eax, 12(%rsi)
2283:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 6958              		.loc 1 2283 0
 6959 0350 4C01D1   		addq	%r10, %rcx
 6960 0353 4901CE   		addq	%rcx, %r14
2284:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6961              		.loc 1 2284 0
 6962 0356 4869CF18 		imulq	$8728, %rdi, %rcx
 6962      220000
2283:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 6963              		.loc 1 2283 0
 6964 035d 4A8D8435 		leaq	1024(%rbp,%r14), %rax
 6964      00040000 
 6965 0365 48C1F80B 		sarq	$11, %rax
 6966 0369 894614   		movl	%eax, 20(%rsi)
2284:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6967              		.loc 1 2284 0
 6968 036c 4901C8   		addq	%rcx, %r8
 6969 036f 4969CF60 		imulq	$17760, %r15, %rcx
 6969      450000
 6970 0376 4C01C1   		addq	%r8, %rcx
 6971 0379 498D840B 		leaq	1024(%r11,%rcx), %rax
 6971      00040000 
 6972 0381 48C1F80B 		sarq	$11, %rax
 6973 0385 89461C   		movl	%eax, 28(%rsi)
2286:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 6974              		.loc 1 2286 0
 6975 0388 8B0424   		movl	(%rsp), %eax
 6976              	.LVL992:
2288:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == DCTSIZE * 2)
 6977              		.loc 1 2288 0
 6978 038b 83F808   		cmpl	$8, %eax
 6979 038e 0F846003 		je	.L121
 6979      0000
2289:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 6980              		.loc 1 2289 0
 6981 0394 83F810   		cmpl	$16, %eax
 6982 0397 0F85ABFC 		jne	.L125
 6982      FFFF
2292:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
2293:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
2294:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2295:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2296:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
2297:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
2298:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
2299:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/16)**2 = 1/2**2.
2300:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/32).
2301:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2302:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2303:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
2304:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
2305:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 6983              		.loc 1 2305 0
 6984 039d 488D8424 		leaq	144(%rsp), %rax
 6984      90000000 
 6985              	.LVL993:
 6986 03a5 488D5424 		leaq	112(%rsp), %rdx
 6986      70
 6987 03aa 48894424 		movq	%rax, 32(%rsp)
 6987      20
 6988 03af 488B4424 		movq	104(%rsp), %rax
 6988      68
 6989              	.LVL994:
 6990              		.p2align 4,,10
 6991 03b4 0F1F4000 		.p2align 3
 6992              	.L119:
2306:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2307:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2308:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*7];
 6993              		.loc 1 2308 0 discriminator 3
 6994 03b8 8BBAE000 		movl	224(%rdx), %edi
 6994      0000
 6995 03be 448B08   		movl	(%rax), %r9d
2309:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*6];
2310:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*5];
2311:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
2312:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
2313:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
2314:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
2315:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] + wsptr[DCTSIZE*0];
 6996              		.loc 1 2315 0 discriminator 3
 6997 03c1 448B12   		movl	(%rdx), %r10d
2309:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*6];
 6998              		.loc 1 2309 0 discriminator 3
 6999 03c4 8B4820   		movl	32(%rax), %ecx
 7000 03c7 448BBAC0 		movl	192(%rdx), %r15d
 7000      000000
 7001              		.loc 1 2315 0 discriminator 3
 7002 03ce 448BA8E0 		movl	224(%rax), %r13d
 7002      000000
2310:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
 7003              		.loc 1 2310 0 discriminator 3
 7004 03d5 8B6840   		movl	64(%rax), %ebp
2313:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
 7005              		.loc 1 2313 0 discriminator 3
 7006 03d8 448B80A0 		movl	160(%rax), %r8d
 7006      000000
2308:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*6];
 7007              		.loc 1 2308 0 discriminator 3
 7008 03df 458D1C39 		leal	(%r9,%rdi), %r11d
2310:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
 7009              		.loc 1 2310 0 discriminator 3
 7010 03e3 03AAA000 		addl	160(%rdx), %ebp
 7010      0000
2313:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
 7011              		.loc 1 2313 0 discriminator 3
 7012 03e9 44034240 		addl	64(%rdx), %r8d
2316:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2317:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp7;
2318:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
2319:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
2320:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
2321:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
2322:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
2323:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
2324:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
2325:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2326:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*7];
 7013              		.loc 1 2326 0 discriminator 3
 7014 03ed 4129F9   		subl	%edi, %r9d
2314:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] + wsptr[DCTSIZE*0];
 7015              		.loc 1 2314 0 discriminator 3
 7016 03f0 448BA0C0 		movl	192(%rax), %r12d
 7016      000000
 7017 03f7 44036220 		addl	32(%rdx), %r12d
2309:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*5];
 7018              		.loc 1 2309 0 discriminator 3
 7019 03fb 4101CF   		addl	%ecx, %r15d
2311:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
 7020              		.loc 1 2311 0 discriminator 3
 7021 03fe 448B7060 		movl	96(%rax), %r14d
2312:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
 7022              		.loc 1 2312 0 discriminator 3
 7023 0402 8BB08000 		movl	128(%rax), %esi
 7023      0000
2315:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7024              		.loc 1 2315 0 discriminator 3
 7025 0408 4501D5   		addl	%r10d, %r13d
2311:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
 7026              		.loc 1 2311 0 discriminator 3
 7027 040b 4403B280 		addl	128(%rdx), %r14d
 7027      000000
2312:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
 7028              		.loc 1 2312 0 discriminator 3
 7029 0412 037260   		addl	96(%rdx), %esi
2315:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7030              		.loc 1 2315 0 discriminator 3
 7031 0415 4D63ED   		movslq	%r13d, %r13
2327:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*6];
 7032              		.loc 1 2327 0 discriminator 3
 7033 0418 2B8AC000 		subl	192(%rdx), %ecx
 7033      0000
2308:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*6];
 7034              		.loc 1 2308 0 discriminator 3
 7035 041e 4D63DB   		movslq	%r11d, %r11
 7036              	.LVL995:
2313:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
 7037              		.loc 1 2313 0 discriminator 3
 7038 0421 4D63C0   		movslq	%r8d, %r8
2317:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
 7039              		.loc 1 2317 0 discriminator 3
 7040 0424 4B8D1C2B 		leaq	(%r11,%r13), %rbx
2314:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] + wsptr[DCTSIZE*0];
 7041              		.loc 1 2314 0 discriminator 3
 7042 0428 4D63E4   		movslq	%r12d, %r12
2318:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
 7043              		.loc 1 2318 0 discriminator 3
 7044 042b 4D29EB   		subq	%r13, %r11
 7045              	.LVL996:
2309:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*5];
 7046              		.loc 1 2309 0 discriminator 3
 7047 042e 4D63FF   		movslq	%r15d, %r15
 7048              	.LVL997:
2310:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
 7049              		.loc 1 2310 0 discriminator 3
 7050 0431 4863ED   		movslq	%ebp, %rbp
 7051              	.LVL998:
2318:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
 7052              		.loc 1 2318 0 discriminator 3
 7053 0434 4C895C24 		movq	%r11, 16(%rsp)
 7053      10
2312:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
 7054              		.loc 1 2312 0 discriminator 3
 7055 0439 4863F6   		movslq	%esi, %rsi
2319:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
 7056              		.loc 1 2319 0 discriminator 3
 7057 043c 4F8D1C27 		leaq	(%r15,%r12), %r11
2311:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
 7058              		.loc 1 2311 0 discriminator 3
 7059 0440 4D63F6   		movslq	%r14d, %r14
 7060              	.LVL999:
2320:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
 7061              		.loc 1 2320 0 discriminator 3
 7062 0443 4D29E7   		subq	%r12, %r15
 7063              	.LVL1000:
2321:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
 7064              		.loc 1 2321 0 discriminator 3
 7065 0446 4E8D6405 		leaq	0(%rbp,%r8), %r12
 7065      00
 7066              	.LVL1001:
2322:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 7067              		.loc 1 2322 0 discriminator 3
 7068 044b 4C29C5   		subq	%r8, %rbp
 7069              	.LVL1002:
2323:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
 7070              		.loc 1 2323 0 discriminator 3
 7071 044e 4D8D2C36 		leaq	(%r14,%rsi), %r13
 7072              	.LVL1003:
 7073              		.loc 1 2327 0 discriminator 3
 7074 0452 4863F9   		movslq	%ecx, %rdi
 7075              	.LVL1004:
2324:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7076              		.loc 1 2324 0 discriminator 3
 7077 0455 4929F6   		subq	%rsi, %r14
 7078              	.LVL1005:
2328:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
2329:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*4];
 7079              		.loc 1 2329 0 discriminator 3
 7080 0458 8B4860   		movl	96(%rax), %ecx
2328:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
 7081              		.loc 1 2328 0 discriminator 3
 7082 045b 8B7040   		movl	64(%rax), %esi
 7083              	.LVL1006:
2326:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*6];
 7084              		.loc 1 2326 0 discriminator 3
 7085 045e 4D63C9   		movslq	%r9d, %r9
 7086              	.LVL1007:
2328:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
 7087              		.loc 1 2328 0 discriminator 3
 7088 0461 2BB2A000 		subl	160(%rdx), %esi
 7088      0000
 7089              		.loc 1 2329 0 discriminator 3
 7090 0467 2B8A8000 		subl	128(%rdx), %ecx
 7090      0000
2322:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 7091              		.loc 1 2322 0 discriminator 3
 7092 046d 48896C24 		movq	%rbp, 24(%rsp)
 7092      18
 7093              	.LVL1008:
2330:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*3];
2331:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*2];
2332:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*1];
2333:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] - wsptr[DCTSIZE*0];
 7094              		.loc 1 2333 0 discriminator 3
 7095 0472 8BA8E000 		movl	224(%rax), %ebp
 7095      0000
2327:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
 7096              		.loc 1 2327 0 discriminator 3
 7097 0478 48897C24 		movq	%rdi, 8(%rsp)
 7097      08
 7098              	.LVL1009:
2332:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] - wsptr[DCTSIZE*0];
 7099              		.loc 1 2332 0 discriminator 3
 7100 047d 448B80C0 		movl	192(%rax), %r8d
 7100      000000
 7101              	.LVL1010:
 7102 0484 442B4220 		subl	32(%rdx), %r8d
 7103              		.loc 1 2333 0 discriminator 3
 7104 0488 4429D5   		subl	%r10d, %ebp
2328:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*4];
 7105              		.loc 1 2328 0 discriminator 3
 7106 048b 4863FE   		movslq	%esi, %rdi
 7107              	.LVL1011:
2329:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*3];
 7108              		.loc 1 2329 0 discriminator 3
 7109 048e 4863F1   		movslq	%ecx, %rsi
 7110              		.loc 1 2333 0 discriminator 3
 7111 0491 4C63D5   		movslq	%ebp, %r10
 7112              	.LVL1012:
2334:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2335:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 7113              		.loc 1 2335 0 discriminator 3
 7114 0494 4A8D2C1B 		leaq	(%rbx,%r11), %rbp
2329:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*3];
 7115              		.loc 1 2329 0 discriminator 3
 7116 0498 48893424 		movq	%rsi, (%rsp)
 7117              	.LVL1013:
2336:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+2);
2337:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 7118              		.loc 1 2337 0 discriminator 3
 7119 049c 4C29EB   		subq	%r13, %rbx
 7120              	.LVL1014:
2330:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*2];
 7121              		.loc 1 2330 0 discriminator 3
 7122 049f 8BB08000 		movl	128(%rax), %esi
 7122      0000
 7123              		.loc 1 2337 0 discriminator 3
 7124 04a5 4D29E3   		subq	%r12, %r11
 7125              	.LVL1015:
2330:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*2];
 7126              		.loc 1 2330 0 discriminator 3
 7127 04a8 2B7260   		subl	96(%rdx), %esi
2335:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+2);
 7128              		.loc 1 2335 0 discriminator 3
 7129 04ab 4C01E5   		addq	%r12, %rbp
2332:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] - wsptr[DCTSIZE*0];
 7130              		.loc 1 2332 0 discriminator 3
 7131 04ae 4D63C0   		movslq	%r8d, %r8
 7132              		.loc 1 2337 0 discriminator 3
 7133 04b1 4869DBCF 		imulq	$10703, %rbx, %rbx
 7133      290000
2335:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+2);
 7134              		.loc 1 2335 0 discriminator 3
 7135 04b8 498D6C2D 		leaq	8(%r13,%rbp), %rbp
 7135      08
 7136              		.loc 1 2337 0 discriminator 3
 7137 04bd 4D69DB51 		imulq	$4433, %r11, %r11
 7137      110000
2335:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+2);
 7138              		.loc 1 2335 0 discriminator 3
 7139 04c4 48C1FD04 		sarq	$4, %rbp
2330:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*2];
 7140              		.loc 1 2330 0 discriminator 3
 7141 04c8 4863F6   		movslq	%esi, %rsi
 7142 04cb 4889F1   		movq	%rsi, %rcx
 7143              	.LVL1016:
2331:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*1];
 7144              		.loc 1 2331 0 discriminator 3
 7145 04ce 8BB0A000 		movl	160(%rax), %esi
 7145      0000
 7146 04d4 2B7240   		subl	64(%rdx), %esi
 7147              		.loc 1 2337 0 discriminator 3
 7148 04d7 4E8D9C1B 		leaq	65536(%rbx,%r11), %r11
 7148      00000100 
2335:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+2);
 7149              		.loc 1 2335 0 discriminator 3
 7150 04df 8928     		movl	%ebp, (%rax)
 7151              	.LVL1017:
2338:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
2339:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX_0_541196100),   /* c12[16] = c6[8] */
2340:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+2);
2341:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2342:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp17 - tmp15, FIX(0.275899379)) +   /* c14[16] = c7[8] */
 7152              		.loc 1 2342 0 discriminator 3
 7153 04e1 4C8B6C24 		movq	16(%rsp), %r13
 7153      10
 7154              	.LVL1018:
 7155 04e6 4C8B6424 		movq	24(%rsp), %r12
 7155      18
 7156              	.LVL1019:
 7157 04eb 4C89F3   		movq	%r14, %rbx
2343:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
2344:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2345:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
2346:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
2347:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(2.172734804)),        /* c2+10 */
2348:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+2);
2349:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
2350:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
2351:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp17, FIX(1.061594338)),        /* c10+c14 */
2352:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+2);
2353:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2354:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2355:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2356:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp1, FIX(1.353318001)) +         /* c3 */
2357:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
2358:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.247225013)) +         /* c5 */
2359:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
2360:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(1.093201867)) +         /* c7 */
2361:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
2362:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = MULTIPLY(tmp1 + tmp2, FIX(0.138617169)) +         /* c15 */
2363:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
2364:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = MULTIPLY(tmp1 + tmp3, - FIX(0.666655658)) +       /* -c11 */
 7158              		.loc 1 2364 0 discriminator 3
 7159 04ee 48894C24 		movq	%rcx, 16(%rsp)
 7159      10
 7160              	.LVL1020:
2337:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 7161              		.loc 1 2337 0 discriminator 3
 7162 04f3 49C1FB11 		sarq	$17, %r11
2342:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7163              		.loc 1 2342 0 discriminator 3
 7164 04f7 4C29FB   		subq	%r15, %rbx
2337:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 7165              		.loc 1 2337 0 discriminator 3
 7166 04fa 44899880 		movl	%r11d, 128(%rax)
 7166      000000
 7167              	.LVL1021:
2342:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7168              		.loc 1 2342 0 discriminator 3
 7169 0501 4D89EB   		movq	%r13, %r11
2331:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*1];
 7170              		.loc 1 2331 0 discriminator 3
 7171 0504 4863F6   		movslq	%esi, %rsi
 7172              	.LVL1022:
2342:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7173              		.loc 1 2342 0 discriminator 3
 7174 0507 4D29E3   		subq	%r12, %r11
 7175 050a 4869DBD4 		imulq	$2260, %rbx, %rbx
 7175      080000
 7176 0511 4D69DB63 		imulq	$11363, %r11, %r11
 7176      2C0000
2345:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7177              		.loc 1 2345 0 discriminator 3
 7178 0518 4D69FF75 		imulq	$11893, %r15, %r15
 7178      2E0000
 7179              	.LVL1023:
2342:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7180              		.loc 1 2342 0 discriminator 3
 7181 051f 4901DB   		addq	%rbx, %r11
 7182              	.LVL1024:
2345:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7183              		.loc 1 2345 0 discriminator 3
 7184 0522 4D01DF   		addq	%r11, %r15
 7185 0525 4969DC87 		imulq	$17799, %r12, %rbx
 7185      450000
2349:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7186              		.loc 1 2349 0 discriminator 3
 7187 052c 4D69F607 		imulq	$-8697, %r14, %r14
 7187      DEFFFF
 7188              	.LVL1025:
2345:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7189              		.loc 1 2345 0 discriminator 3
 7190 0533 498D9C1F 		leaq	65536(%r15,%rbx), %rbx
 7190      00000100 
2356:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 7191              		.loc 1 2356 0 discriminator 3
 7192 053b 4C8B7C24 		movq	8(%rsp), %r15
 7192      08
2345:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7193              		.loc 1 2345 0 discriminator 3
 7194 0540 48C1FB11 		sarq	$17, %rbx
 7195 0544 895840   		movl	%ebx, 64(%rax)
 7196              	.LVL1026:
2349:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7197              		.loc 1 2349 0 discriminator 3
 7198 0547 4969DD3E 		imulq	$-1730, %r13, %rbx
 7198      F9FFFF
2358:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 7199              		.loc 1 2358 0 discriminator 3
 7200 054e 4D8D2C39 		leaq	(%r9,%rdi), %r13
 7201              	.LVL1027:
 7202 0552 4D69EDE9 		imulq	$10217, %r13, %r13
 7202      270000
2349:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7203              		.loc 1 2349 0 discriminator 3
 7204 0559 4901DB   		addq	%rbx, %r11
 7205              	.LVL1028:
 7206 055c 4F8D9C33 		leaq	65536(%r11,%r14), %r11
 7206      00000100 
2356:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 7207              		.loc 1 2356 0 discriminator 3
 7208 0564 4F8D3439 		leaq	(%r9,%r15), %r14
2349:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7209              		.loc 1 2349 0 discriminator 3
 7210 0568 49C1FB11 		sarq	$17, %r11
 7211 056c 448998C0 		movl	%r11d, 192(%rax)
 7211      000000
 7212              	.LVL1029:
2356:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 7213              		.loc 1 2356 0 discriminator 3
 7214 0573 4D89C3   		movq	%r8, %r11
 7215 0576 4D29D3   		subq	%r10, %r11
 7216 0579 4D69DB23 		imulq	$3363, %r11, %r11
 7216      0D0000
 7217 0580 4D69F64E 		imulq	$11086, %r14, %r14
 7217      2B0000
 7218 0587 4D01DE   		addq	%r11, %r14
 7219              	.LVL1030:
2358:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 7220              		.loc 1 2358 0 discriminator 3
 7221 058a 4E8D1C16 		leaq	(%rsi,%r10), %r11
 7222 058e 4D69DB55 		imulq	$5461, %r11, %r11
 7222      150000
 7223 0595 4D01DD   		addq	%r11, %r13
 7224              	.LVL1031:
2360:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 7225              		.loc 1 2360 0 discriminator 3
 7226 0598 4C8B1C24 		movq	(%rsp), %r11
 7227 059c 4B8D2C19 		leaq	(%r9,%r11), %rbp
2365:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
2366:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = MULTIPLY(tmp2 + tmp3, - FIX(1.353318001)) +       /* -c3 */
2367:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
2368:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
2369:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp0, FIX(2.286341144)) +                /* c7+c5+c3-c1 */
2370:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp7, FIX(0.779653625));                 /* c15+c13-c11+c9 */
2371:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 += tmp14 + tmp15 + MULTIPLY(tmp1, FIX(0.071888074)) /* c9-c3-c15+c11 */
2372:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     - MULTIPLY(tmp6, FIX(1.663905119));              /* c7+c13+c1-c5 */
2373:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp14 + tmp16 - MULTIPLY(tmp2, FIX(1.125726048)) /* c7+c5+c15-c3 */
2374:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp5, FIX(1.227391138));              /* c9-c11+c1-c13 */
2375:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp15 + tmp16 + MULTIPLY(tmp3, FIX(1.065388962)) /* c15+c3+c11-c7 */
2376:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp4, FIX(2.167985692));              /* c1+c13+c5-c9 */
2377:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2378:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp10, CONST_BITS+PASS1_BITS+2);
 7228              		.loc 1 2378 0 discriminator 3
 7229 05a0 4D69C9D6 		imulq	$-18730, %r9, %r9
 7229      B6FFFF
 7230              	.LVL1032:
2360:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 7231              		.loc 1 2360 0 discriminator 3
 7232 05a7 4869DDFC 		imulq	$8956, %rbp, %rbx
 7232      220000
 7233 05ae 4889CD   		movq	%rcx, %rbp
 7234 05b1 4C29D5   		subq	%r10, %rbp
 7235 05b4 4C69DDB6 		imulq	$7350, %rbp, %r11
 7235      1C0000
 7236              		.loc 1 2378 0 discriminator 3
 7237 05bb 4D69D2F3 		imulq	$6387, %r10, %r10
 7237      180000
 7238              	.LVL1033:
2360:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 7239              		.loc 1 2360 0 discriminator 3
 7240 05c2 4A8D2C1B 		leaq	(%rbx,%r11), %rbp
 7241              	.LVL1034:
2362:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
 7242              		.loc 1 2362 0 discriminator 3
 7243 05c6 4C89FB   		movq	%r15, %rbx
 7244 05c9 4801FB   		addq	%rdi, %rbx
 7245 05cc 4C69E370 		imulq	$1136, %rbx, %r12
 7245      040000
 7246 05d3 4C89C3   		movq	%r8, %rbx
 7247 05d6 4829F3   		subq	%rsi, %rbx
 7248 05d9 4C69DB09 		imulq	$11529, %rbx, %r11
 7248      2D0000
 7249 05e0 4B8D1C1C 		leaq	(%r12,%r11), %rbx
 7250              	.LVL1035:
2364:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 7251              		.loc 1 2364 0 discriminator 3
 7252 05e4 4C8B1C24 		movq	(%rsp), %r11
 7253 05e8 4F8D241F 		leaq	(%r15,%r11), %r12
 7254 05ec 4D69FCAB 		imulq	$-5461, %r12, %r15
 7254      EAFFFF
 7255 05f3 4E8D2401 		leaq	(%rcx,%r8), %r12
2366:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 7256              		.loc 1 2366 0 discriminator 3
 7257 05f7 488B0C24 		movq	(%rsp), %rcx
 7258              	.LVL1036:
2364:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 7259              		.loc 1 2364 0 discriminator 3
 7260 05fb 4D69DC17 		imulq	$-10217, %r12, %r11
 7260      D8FFFF
 7261 0602 4F8D241F 		leaq	(%r15,%r11), %r12
 7262              	.LVL1037:
2366:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 7263              		.loc 1 2366 0 discriminator 3
 7264 0606 4C8D1C0F 		leaq	(%rdi,%rcx), %r11
 7265 060a 4889F1   		movq	%rsi, %rcx
 7266 060d 482B4C24 		subq	16(%rsp), %rcx
 7266      10
 7267 0612 4D69FBB2 		imulq	$-11086, %r11, %r15
 7267      D4FFFF
 7268 0619 4C69D923 		imulq	$3363, %rcx, %r11
 7268      0D0000
 7269 0620 4D01FB   		addq	%r15, %r11
 7270              	.LVL1038:
 7271              		.loc 1 2378 0 discriminator 3
 7272 0623 4F8D3C2E 		leaq	(%r14,%r13), %r15
 7273 0627 4901EF   		addq	%rbp, %r15
 7274 062a 4D01F9   		addq	%r15, %r9
 7275 062d 4F8D8C11 		leaq	65536(%r9,%r10), %r9
 7275      00000100 
 7276 0635 49C1F911 		sarq	$17, %r9
2379:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS+2);
 7277              		.loc 1 2379 0 discriminator 3
 7278 0639 4C695424 		imulq	$589, 8(%rsp), %r10
 7278      084D0200 
 7278      00
 7279              	.LVL1039:
2380:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+2);
 7280              		.loc 1 2380 0 discriminator 3
 7281 0642 4869FFFA 		imulq	$-9222, %rdi, %rdi
 7281      DBFFFF
 7282              	.LVL1040:
2378:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS+2);
 7283              		.loc 1 2378 0 discriminator 3
 7284 0649 44894820 		movl	%r9d, 32(%rax)
2379:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS+2);
 7285              		.loc 1 2379 0 discriminator 3
 7286 064d 4E8D0C23 		leaq	(%rbx,%r12), %r9
 7287              		.loc 1 2380 0 discriminator 3
 7288 0651 4869F647 		imulq	$10055, %rsi, %rsi
 7288      270000
 7289              	.LVL1041:
 7290 0658 4C01DB   		addq	%r11, %rbx
 7291              	.LVL1042:
2381:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+2);
 7292              		.loc 1 2381 0 discriminator 3
 7293 065b 4D01E3   		addq	%r12, %r11
 7294              	.LVL1043:
 7295 065e 48690C24 		imulq	$8728, (%rsp), %rcx
 7295      18220000 
2382:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2383:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 7296              		.loc 1 2383 0 discriminator 3
 7297 0666 4883C004 		addq	$4, %rax
 7298              	.LVL1044:
2384:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 7299              		.loc 1 2384 0 discriminator 3
 7300 066a 4883C204 		addq	$4, %rdx
 7301              	.LVL1045:
2380:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+2);
 7302              		.loc 1 2380 0 discriminator 3
 7303 066e 4801DF   		addq	%rbx, %rdi
 7304 0671 4801FE   		addq	%rdi, %rsi
 7305 0674 498DB435 		leaq	65536(%r13,%rsi), %rsi
 7305      00000100 
2379:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+2);
 7306              		.loc 1 2379 0 discriminator 3
 7307 067c 4D01D1   		addq	%r10, %r9
 7308 067f 4D69C0C1 		imulq	$-13631, %r8, %r8
 7308      CAFFFF
 7309              	.LVL1046:
2380:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+2);
 7310              		.loc 1 2380 0 discriminator 3
 7311 0686 48C1FE11 		sarq	$17, %rsi
 7312 068a 89B09C00 		movl	%esi, 156(%rax)
 7312      0000
 7313              	.LVL1047:
2381:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7314              		.loc 1 2381 0 discriminator 3
 7315 0690 4901CB   		addq	%rcx, %r11
 7316 0693 48697424 		imulq	$17760, 16(%rsp), %rsi
 7316      10604500 
 7316      00
2379:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+2);
 7317              		.loc 1 2379 0 discriminator 3
 7318 069c 4D01C1   		addq	%r8, %r9
 7319 069f 4F8D840E 		leaq	65536(%r14,%r9), %r8
 7319      00000100 
 7320 06a7 49C1F811 		sarq	$17, %r8
 7321 06ab 4489405C 		movl	%r8d, 92(%rax)
2381:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7322              		.loc 1 2381 0 discriminator 3
 7323 06af 4901F3   		addq	%rsi, %r11
 7324 06b2 4A8D8C1D 		leaq	65536(%rbp,%r11), %rcx
 7324      00000100 
 7325 06ba 48C1F911 		sarq	$17, %rcx
 7326 06be 8988DC00 		movl	%ecx, 220(%rax)
 7326      0000
 7327              	.LVL1048:
2305:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 7328              		.loc 1 2305 0 discriminator 3
 7329 06c4 483B5424 		cmpq	32(%rsp), %rdx
 7329      20
 7330 06c9 0F85E9FC 		jne	.L119
 7330      FFFF
2385:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2386:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 7331              		.loc 1 2386 0
 7332 06cf 488B8424 		movq	376(%rsp), %rax
 7332      78010000 
 7333 06d7 64483304 		xorq	%fs:40, %rax
 7333      25280000 
 7333      00
 7334              	.LVL1049:
 7335 06e0 7521     		jne	.L126
 7336 06e2 4881C488 		addq	$392, %rsp
 7336      010000
 7337              		.cfi_remember_state
 7338              		.cfi_def_cfa_offset 56
 7339 06e9 5B       		popq	%rbx
 7340              		.cfi_def_cfa_offset 48
 7341 06ea 5D       		popq	%rbp
 7342              		.cfi_def_cfa_offset 40
 7343 06eb 415C     		popq	%r12
 7344              		.cfi_def_cfa_offset 32
 7345              	.LVL1050:
 7346 06ed 415D     		popq	%r13
 7347              		.cfi_def_cfa_offset 24
 7348 06ef 415E     		popq	%r14
 7349              		.cfi_def_cfa_offset 16
 7350 06f1 415F     		popq	%r15
 7351              		.cfi_def_cfa_offset 8
 7352 06f3 C3       		ret
 7353              	.LVL1051:
 7354              	.L121:
 7355              		.cfi_restore_state
2293:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 7356              		.loc 1 2293 0
 7357 06f4 488D4424 		leaq	112(%rsp), %rax
 7357      70
 7358              	.LVL1052:
 7359 06f9 48894424 		movq	%rax, 16(%rsp)
 7359      10
 7360 06fe E951F9FF 		jmp	.L117
 7360      FF
 7361              	.LVL1053:
 7362              	.L126:
 7363              		.loc 1 2386 0
 7364 0703 E8000000 		call	__stack_chk_fail
 7364      00
 7365              	.LVL1054:
 7366              		.cfi_endproc
 7367              	.LFE76:
 7369              		.section	.text.unlikely.jpeg_fdct_16x16
 7370              	.LCOLDE15:
 7371              		.section	.text.jpeg_fdct_16x16
 7372              	.LHOTE15:
 7373              		.section	.text.unlikely.jpeg_fdct_16x8,"ax",@progbits
 7374              	.LCOLDB16:
 7375              		.section	.text.jpeg_fdct_16x8,"ax",@progbits
 7376              	.LHOTB16:
 7377              		.p2align 4,,15
 7378              		.globl	jpeg_fdct_16x8
 7380              	jpeg_fdct_16x8:
 7381              	.LFB77:
2387:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2388:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2389:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
2390:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 16x8 sample block.
2391:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
2392:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 16-point FDCT in pass 1 (rows), 8-point in pass 2 (columns).
2393:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
2394:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2395:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
2396:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_16x8 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
2397:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 7382              		.loc 1 2397 0
 7383              		.cfi_startproc
 7384              	.LVL1055:
 7385 0000 4157     		pushq	%r15
 7386              		.cfi_def_cfa_offset 16
 7387              		.cfi_offset 15, -16
 7388 0002 4156     		pushq	%r14
 7389              		.cfi_def_cfa_offset 24
 7390              		.cfi_offset 14, -24
 7391 0004 89D0     		movl	%edx, %eax
 7392 0006 4155     		pushq	%r13
 7393              		.cfi_def_cfa_offset 32
 7394              		.cfi_offset 13, -32
 7395 0008 4154     		pushq	%r12
 7396              		.cfi_def_cfa_offset 40
 7397              		.cfi_offset 12, -40
 7398 000a 55       		pushq	%rbp
 7399              		.cfi_def_cfa_offset 48
 7400              		.cfi_offset 6, -48
 7401 000b 53       		pushq	%rbx
 7402              		.cfi_def_cfa_offset 56
 7403              		.cfi_offset 3, -56
 7404 000c 48894424 		movq	%rax, -16(%rsp)
 7404      F0
 7405 0011 488D8700 		leaq	256(%rdi), %rax
 7405      010000
 7406 0018 48897424 		movq	%rsi, -96(%rsp)
 7406      A0
2398:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
2399:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
2400:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1;
2401:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
2402:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
2403:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
2404:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
2405:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2406:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
2407:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
2408:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
2409:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 16-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/32).
2410:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2411:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2412:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 7407              		.loc 1 2412 0
 7408 001d 48897C24 		movq	%rdi, -104(%rsp)
 7408      98
 7409 0022 48897C24 		movq	%rdi, -8(%rsp)
 7409      F8
 7410 0027 48894424 		movq	%rax, -24(%rsp)
 7410      E8
 7411              	.LVL1056:
 7412 002c 0F1F4000 		.p2align 4,,10
 7413              		.p2align 3
 7414              	.L128:
2413:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
2414:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
2415:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 7415              		.loc 1 2415 0 discriminator 3
 7416 0030 488B4424 		movq	-96(%rsp), %rax
 7416      A0
 7417 0035 488B6C24 		movq	-16(%rsp), %rbp
 7417      F0
 7418 003a 480328   		addq	(%rax), %rbp
 7419              	.LVL1057:
2416:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2417:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2418:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[15]);
2420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
 7420              		.loc 1 2420 0 discriminator 3
 7421 003d 0FB64501 		movzbl	1(%rbp), %eax
2421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
2422:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 7422              		.loc 1 2422 0 discriminator 3
 7423 0041 0FB67D0C 		movzbl	12(%rbp), %edi
2421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 7424              		.loc 1 2421 0 discriminator 3
 7425 0045 0FB6550D 		movzbl	13(%rbp), %edx
2423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 7426              		.loc 1 2423 0 discriminator 3
 7427 0049 440FB675 		movzbl	11(%rbp), %r14d
 7427      0B
2419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
 7428              		.loc 1 2419 0 discriminator 3
 7429 004e 440FB67D 		movzbl	15(%rbp), %r15d
 7429      0F
 7430 0053 0FB67500 		movzbl	0(%rbp), %esi
2424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
2425:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
2426:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 7431              		.loc 1 2426 0 discriminator 3
 7432 0057 440FB66D 		movzbl	8(%rbp), %r13d
 7432      08
2420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 7433              		.loc 1 2420 0 discriminator 3
 7434 005c 0FB64D0E 		movzbl	14(%rbp), %ecx
 7435 0060 89442490 		movl	%eax, -112(%rsp)
 7436 0064 89C3     		movl	%eax, %ebx
2421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 7437              		.loc 1 2421 0 discriminator 3
 7438 0066 0FB64502 		movzbl	2(%rbp), %eax
2422:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 7439              		.loc 1 2422 0 discriminator 3
 7440 006a 897C24BC 		movl	%edi, -68(%rsp)
2421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 7441              		.loc 1 2421 0 discriminator 3
 7442 006e 895424B4 		movl	%edx, -76(%rsp)
2424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 7443              		.loc 1 2424 0 discriminator 3
 7444 0072 440FB65D 		movzbl	10(%rbp), %r11d
 7444      0A
2423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 7445              		.loc 1 2423 0 discriminator 3
 7446 0077 44897424 		movl	%r14d, -60(%rsp)
 7446      C4
2419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
 7447              		.loc 1 2419 0 discriminator 3
 7448 007c 468D243E 		leal	(%rsi,%r15), %r12d
2420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 7449              		.loc 1 2420 0 discriminator 3
 7450 0080 01CB     		addl	%ecx, %ebx
 7451 0082 894C24AC 		movl	%ecx, -84(%rsp)
2427:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2428:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp7;
2429:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
2430:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
2431:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
2432:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
2433:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
2434:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
2435:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
2436:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2437:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[15]);
 7452              		.loc 1 2437 0 discriminator 3
 7453 0086 4429FE   		subl	%r15d, %esi
2421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 7454              		.loc 1 2421 0 discriminator 3
 7455 0089 894424B0 		movl	%eax, -80(%rsp)
 7456 008d 4189C2   		movl	%eax, %r10d
2422:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 7457              		.loc 1 2422 0 discriminator 3
 7458 0090 0FB64503 		movzbl	3(%rbp), %eax
2421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 7459              		.loc 1 2421 0 discriminator 3
 7460 0094 4101D2   		addl	%edx, %r10d
2426:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7461              		.loc 1 2426 0 discriminator 3
 7462 0097 0FB65507 		movzbl	7(%rbp), %edx
2419:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[14]);
 7463              		.loc 1 2419 0 discriminator 3
 7464 009b 4D63E4   		movslq	%r12d, %r12
 7465              	.LVL1058:
2424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 7466              		.loc 1 2424 0 discriminator 3
 7467 009e 44895C24 		movl	%r11d, -52(%rsp)
 7467      CC
2420:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[13]);
 7468              		.loc 1 2420 0 discriminator 3
 7469 00a3 4863DB   		movslq	%ebx, %rbx
 7470              	.LVL1059:
2421:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[12]);
 7471              		.loc 1 2421 0 discriminator 3
 7472 00a6 4D63D2   		movslq	%r10d, %r10
 7473              	.LVL1060:
2422:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 7474              		.loc 1 2422 0 discriminator 3
 7475 00a9 894424B8 		movl	%eax, -72(%rsp)
 7476 00ad 4189C0   		movl	%eax, %r8d
2423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 7477              		.loc 1 2423 0 discriminator 3
 7478 00b0 0FB64504 		movzbl	4(%rbp), %eax
2422:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[11]);
 7479              		.loc 1 2422 0 discriminator 3
 7480 00b4 4101F8   		addl	%edi, %r8d
 7481 00b7 4D63C0   		movslq	%r8d, %r8
 7482              	.LVL1061:
2423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 7483              		.loc 1 2423 0 discriminator 3
 7484 00ba 894424C0 		movl	%eax, -64(%rsp)
 7485 00be 89C7     		movl	%eax, %edi
2424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 7486              		.loc 1 2424 0 discriminator 3
 7487 00c0 0FB64505 		movzbl	5(%rbp), %eax
2423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 7488              		.loc 1 2423 0 discriminator 3
 7489 00c4 4401F7   		addl	%r14d, %edi
2425:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 7490              		.loc 1 2425 0 discriminator 3
 7491 00c7 440FB675 		movzbl	9(%rbp), %r14d
 7491      09
2423:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[10]);
 7492              		.loc 1 2423 0 discriminator 3
 7493 00cc 4863FF   		movslq	%edi, %rdi
 7494              	.LVL1062:
2424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 7495              		.loc 1 2424 0 discriminator 3
 7496 00cf 894424C8 		movl	%eax, -56(%rsp)
 7497 00d3 4189C1   		movl	%eax, %r9d
2425:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 7498              		.loc 1 2425 0 discriminator 3
 7499 00d6 0FB64506 		movzbl	6(%rbp), %eax
2426:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7500              		.loc 1 2426 0 discriminator 3
 7501 00da 428D2C2A 		leal	(%rdx,%r13), %ebp
 7502              	.LVL1063:
2424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 7503              		.loc 1 2424 0 discriminator 3
 7504 00de 4501D9   		addl	%r11d, %r9d
2438:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[14]);
2439:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[13]);
2440:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[12]);
2441:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[11]);
2442:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[10]);
2443:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[9]);
2444:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) - GETJSAMPLE(elemptr[8]);
 7505              		.loc 1 2444 0 discriminator 3
 7506 00e1 4429EA   		subl	%r13d, %edx
2424:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[9]);
 7507              		.loc 1 2424 0 discriminator 3
 7508 00e4 4D63C9   		movslq	%r9d, %r9
 7509              	.LVL1064:
 7510              		.loc 1 2444 0 discriminator 3
 7511 00e7 4863D2   		movslq	%edx, %rdx
2426:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7512              		.loc 1 2426 0 discriminator 3
 7513 00ea 4863ED   		movslq	%ebp, %rbp
2425:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 7514              		.loc 1 2425 0 discriminator 3
 7515 00ed 468D1C30 		leal	(%rax,%r14), %r11d
2428:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
 7516              		.loc 1 2428 0 discriminator 3
 7517 00f1 498D0C2C 		leaq	(%r12,%rbp), %rcx
2429:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
 7518              		.loc 1 2429 0 discriminator 3
 7519 00f5 4929EC   		subq	%rbp, %r12
 7520              	.LVL1065:
 7521 00f8 4C896424 		movq	%r12, -48(%rsp)
 7521      D0
2431:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
 7522              		.loc 1 2431 0 discriminator 3
 7523 00fd 4989DC   		movq	%rbx, %r12
2443:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) - GETJSAMPLE(elemptr[8]);
 7524              		.loc 1 2443 0 discriminator 3
 7525 0100 4429F0   		subl	%r14d, %eax
2425:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) + GETJSAMPLE(elemptr[8]);
 7526              		.loc 1 2425 0 discriminator 3
 7527 0103 4D63DB   		movslq	%r11d, %r11
 7528              	.LVL1066:
2443:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = GETJSAMPLE(elemptr[7]) - GETJSAMPLE(elemptr[8]);
 7529              		.loc 1 2443 0 discriminator 3
 7530 0106 4898     		cltq
2430:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
 7531              		.loc 1 2430 0 discriminator 3
 7532 0108 4A8D2C1B 		leaq	(%rbx,%r11), %rbp
 7533              	.LVL1067:
2431:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
 7534              		.loc 1 2431 0 discriminator 3
 7535 010c 4D29DC   		subq	%r11, %r12
 7536              	.LVL1068:
2432:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
 7537              		.loc 1 2432 0 discriminator 3
 7538 010f 4F8D1C0A 		leaq	(%r10,%r9), %r11
 7539              	.LVL1069:
2433:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 7540              		.loc 1 2433 0 discriminator 3
 7541 0113 4D29CA   		subq	%r9, %r10
 7542              	.LVL1070:
2434:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
 7543              		.loc 1 2434 0 discriminator 3
 7544 0116 4D8D0C38 		leaq	(%r8,%rdi), %r9
 7545              	.LVL1071:
2435:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7546              		.loc 1 2435 0 discriminator 3
 7547 011a 4929F8   		subq	%rdi, %r8
 7548              	.LVL1072:
2433:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 7549              		.loc 1 2433 0 discriminator 3
 7550 011d 4C895424 		movq	%r10, -40(%rsp)
 7550      D8
 7551              	.LVL1073:
2437:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[14]);
 7552              		.loc 1 2437 0 discriminator 3
 7553 0122 4863FE   		movslq	%esi, %rdi
 7554              	.LVL1074:
2435:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7555              		.loc 1 2435 0 discriminator 3
 7556 0125 4C894424 		movq	%r8, -32(%rsp)
 7556      E0
 7557              	.LVL1075:
2438:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[13]);
 7558              		.loc 1 2438 0 discriminator 3
 7559 012a 8B742490 		movl	-112(%rsp), %esi
 7560 012e 2B7424AC 		subl	-84(%rsp), %esi
2445:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2446:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
2447:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 7561              		.loc 1 2447 0 discriminator 3
 7562 0132 4C8B7424 		movq	-104(%rsp), %r14
 7562      98
 7563              	.LVL1076:
2438:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[13]);
 7564              		.loc 1 2438 0 discriminator 3
 7565 0137 4C63FE   		movslq	%esi, %r15
 7566              	.LVL1077:
2439:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[12]);
 7567              		.loc 1 2439 0 discriminator 3
 7568 013a 8B7424B0 		movl	-80(%rsp), %esi
 7569 013e 2B7424B4 		subl	-76(%rsp), %esi
 7570 0142 4C63D6   		movslq	%esi, %r10
 7571              	.LVL1078:
2440:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[11]);
 7572              		.loc 1 2440 0 discriminator 3
 7573 0145 8B7424B8 		movl	-72(%rsp), %esi
 7574 0149 2B7424BC 		subl	-68(%rsp), %esi
2448:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
2449:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
2450:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
2451:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX_0_541196100),   /* c12[16] = c6[8] */
2452:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2453:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2454:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp17 - tmp15, FIX(0.275899379)) +   /* c14[16] = c7[8] */
2455:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
2456:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
2458:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
2459:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(2.172734804)),        /* c2+c10 */
2460:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2461:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
2462:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
2463:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp17, FIX(1.061594338)),        /* c10+c14 */
2464:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2465:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2466:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2467:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2468:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp1, FIX(1.353318001)) +         /* c3 */
2469:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
2470:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.247225013)) +         /* c5 */
 7575              		.loc 1 2470 0 discriminator 3
 7576 014d 4E8D2C17 		leaq	(%rdi,%r10), %r13
 7577              	.LVL1079:
2440:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[11]);
 7578              		.loc 1 2440 0 discriminator 3
 7579 0151 4C63C6   		movslq	%esi, %r8
 7580              	.LVL1080:
2441:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[10]);
 7581              		.loc 1 2441 0 discriminator 3
 7582 0154 8B7424C0 		movl	-64(%rsp), %esi
 7583 0158 2B7424C4 		subl	-60(%rsp), %esi
 7584 015c 4863DE   		movslq	%esi, %rbx
2447:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 7585              		.loc 1 2447 0 discriminator 3
 7586 015f 488D3429 		leaq	(%rcx,%rbp), %rsi
2449:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 7587              		.loc 1 2449 0 discriminator 3
 7588 0163 4C29DD   		subq	%r11, %rbp
 7589              	.LVL1081:
 7590 0166 4869ED51 		imulq	$4433, %rbp, %rbp
 7590      110000
2441:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[10]);
 7591              		.loc 1 2441 0 discriminator 3
 7592 016d 48895C24 		movq	%rbx, -112(%rsp)
 7592      90
 7593              	.LVL1082:
2442:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[9]);
 7594              		.loc 1 2442 0 discriminator 3
 7595 0172 8B5C24C8 		movl	-56(%rsp), %ebx
2447:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 7596              		.loc 1 2447 0 discriminator 3
 7597 0176 4C01DE   		addq	%r11, %rsi
2454:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7598              		.loc 1 2454 0 discriminator 3
 7599 0179 4C8B5C24 		movq	-32(%rsp), %r11
 7599      E0
 7600              	.LVL1083:
2442:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[9]);
 7601              		.loc 1 2442 0 discriminator 3
 7602 017e 2B5C24CC 		subl	-52(%rsp), %ebx
2447:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 16 * CENTERJSAMPLE) << PASS1_BITS);
 7603              		.loc 1 2447 0 discriminator 3
 7604 0182 498DB431 		leaq	-2048(%r9,%rsi), %rsi
 7604      00F8FFFF 
 7605 018a 48C1E602 		salq	$2, %rsi
 7606 018e 418936   		movl	%esi, (%r14)
 7607              	.LVL1084:
2449:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 7608              		.loc 1 2449 0 discriminator 3
 7609 0191 4889CE   		movq	%rcx, %rsi
2454:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7610              		.loc 1 2454 0 discriminator 3
 7611 0194 488B4C24 		movq	-40(%rsp), %rcx
 7611      D8
 7612              	.LVL1085:
2449:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 7613              		.loc 1 2449 0 discriminator 3
 7614 0199 4C29CE   		subq	%r9, %rsi
 7615              	.LVL1086:
2454:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7616              		.loc 1 2454 0 discriminator 3
 7617 019c 4D89D9   		movq	%r11, %r9
 7618              	.LVL1087:
2442:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[9]);
 7619              		.loc 1 2442 0 discriminator 3
 7620 019f 4863DB   		movslq	%ebx, %rbx
 7621              	.LVL1088:
2449:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 7622              		.loc 1 2449 0 discriminator 3
 7623 01a2 4869F6CF 		imulq	$10703, %rsi, %rsi
 7623      290000
2454:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7624              		.loc 1 2454 0 discriminator 3
 7625 01a9 4D29E1   		subq	%r12, %r9
 7626 01ac 4D69C9D4 		imulq	$2260, %r9, %r9
 7626      080000
2457:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7627              		.loc 1 2457 0 discriminator 3
 7628 01b3 4D69E475 		imulq	$11893, %r12, %r12
 7628      2E0000
 7629              	.LVL1089:
2449:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 7630              		.loc 1 2449 0 discriminator 3
 7631 01ba 488DB42E 		leaq	1024(%rsi,%rbp), %rsi
 7631      00040000 
 7632 01c2 4C89F5   		movq	%r14, %rbp
 7633 01c5 48C1FE0B 		sarq	$11, %rsi
 7634 01c9 41897610 		movl	%esi, 16(%r14)
2454:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 7635              		.loc 1 2454 0 discriminator 3
 7636 01cd 4C8B7424 		movq	-48(%rsp), %r14
 7636      D0
 7637 01d2 4C89F6   		movq	%r14, %rsi
 7638 01d5 4829CE   		subq	%rcx, %rsi
 7639 01d8 4869F663 		imulq	$11363, %rsi, %rsi
 7639      2C0000
 7640 01df 4C01CE   		addq	%r9, %rsi
 7641              	.LVL1090:
2457:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7642              		.loc 1 2457 0 discriminator 3
 7643 01e2 4901F4   		addq	%rsi, %r12
 7644 01e5 4C69C987 		imulq	$17799, %rcx, %r9
 7644      450000
2471:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
2472:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(1.093201867)) +         /* c7 */
 7645              		.loc 1 2472 0 discriminator 3
 7646 01ec 488B4C24 		movq	-112(%rsp), %rcx
 7646      90
2457:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7647              		.loc 1 2457 0 discriminator 3
 7648 01f1 4F8D8C0C 		leaq	1024(%r12,%r9), %r9
 7648      00040000 
2461:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7649              		.loc 1 2461 0 discriminator 3
 7650 01f9 4D69E63E 		imulq	$-1730, %r14, %r12
 7650      F9FFFF
2468:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 7651              		.loc 1 2468 0 discriminator 3
 7652 0200 4E8D343F 		leaq	(%rdi,%r15), %r14
2457:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 7653              		.loc 1 2457 0 discriminator 3
 7654 0204 49C1F90B 		sarq	$11, %r9
 7655 0208 44894D08 		movl	%r9d, 8(%rbp)
2461:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7656              		.loc 1 2461 0 discriminator 3
 7657 020c 4D69CB07 		imulq	$-8697, %r11, %r9
 7657      DEFFFF
 7658 0213 4C01E6   		addq	%r12, %rsi
 7659              	.LVL1091:
2473:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
2474:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = MULTIPLY(tmp1 + tmp2, FIX(0.138617169)) +         /* c15 */
 7660              		.loc 1 2474 0 discriminator 3
 7661 0216 4F8D1C17 		leaq	(%r15,%r10), %r11
2475:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
2476:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = MULTIPLY(tmp1 + tmp3, - FIX(0.666655658)) +       /* -c11 */
 7662              		.loc 1 2476 0 discriminator 3
 7663 021a 4F8D2407 		leaq	(%r15,%r8), %r12
2461:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7664              		.loc 1 2461 0 discriminator 3
 7665 021e 4A8DB40E 		leaq	1024(%rsi,%r9), %rsi
 7665      00040000 
2468:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 7666              		.loc 1 2468 0 discriminator 3
 7667 0226 4D69CE4E 		imulq	$11086, %r14, %r9
 7667      2B0000
 7668 022d 4989C6   		movq	%rax, %r14
 7669 0230 4929D6   		subq	%rdx, %r14
2461:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 7670              		.loc 1 2461 0 discriminator 3
 7671 0233 48C1FE0B 		sarq	$11, %rsi
 7672 0237 897518   		movl	%esi, 24(%rbp)
2472:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 7673              		.loc 1 2472 0 discriminator 3
 7674 023a 4A8D2C07 		leaq	(%rdi,%r8), %rbp
2468:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 7675              		.loc 1 2468 0 discriminator 3
 7676 023e 4969F623 		imulq	$3363, %r14, %rsi
 7676      0D0000
2477:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
2478:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = MULTIPLY(tmp2 + tmp3, - FIX(1.353318001)) +       /* -c3 */
2479:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
2480:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
2481:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp0, FIX(2.286341144)) +                /* c7+c5+c3-c1 */
2482:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp7, FIX(0.779653625));                 /* c15+c13-c11+c9 */
2483:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 += tmp14 + tmp15 + MULTIPLY(tmp1, FIX(0.071888074)) /* c9-c3-c15+c11 */
2484:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     - MULTIPLY(tmp6, FIX(1.663905119));              /* c7+c13+c1-c5 */
2485:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp14 + tmp16 - MULTIPLY(tmp2, FIX(1.125726048)) /* c7+c5+c15-c3 */
2486:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp5, FIX(1.227391138));              /* c9-c11+c1-c13 */
2487:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp15 + tmp16 + MULTIPLY(tmp3, FIX(1.065388962)) /* c15+c3+c11-c7 */
2488:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp4, FIX(2.167985692));              /* c1+c13+c5-c9 */
2489:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2490:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp10, CONST_BITS-PASS1_BITS);
 7677              		.loc 1 2490 0 discriminator 3
 7678 0245 4869FFD6 		imulq	$-18730, %rdi, %rdi
 7678      B6FFFF
 7679              	.LVL1092:
2468:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 7680              		.loc 1 2468 0 discriminator 3
 7681 024c 4D8D3431 		leaq	(%r9,%rsi), %r14
 7682              	.LVL1093:
2470:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 7683              		.loc 1 2470 0 discriminator 3
 7684 0250 4D69CDE9 		imulq	$10217, %r13, %r9
 7684      270000
 7685 0257 4C8D2C13 		leaq	(%rbx,%rdx), %r13
 7686 025b 4969F555 		imulq	$5461, %r13, %rsi
 7686      150000
 7687 0262 4D8D2C31 		leaq	(%r9,%rsi), %r13
 7688              	.LVL1094:
2472:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 7689              		.loc 1 2472 0 discriminator 3
 7690 0266 4C69CDFC 		imulq	$8956, %rbp, %r9
 7690      220000
 7691 026d 4889CD   		movq	%rcx, %rbp
 7692 0270 4829D5   		subq	%rdx, %rbp
 7693 0273 4869F5B6 		imulq	$7350, %rbp, %rsi
 7693      1C0000
 7694              		.loc 1 2490 0 discriminator 3
 7695 027a 4869D2F3 		imulq	$6387, %rdx, %rdx
 7695      180000
 7696              	.LVL1095:
2472:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 7697              		.loc 1 2472 0 discriminator 3
 7698 0281 498D2C31 		leaq	(%r9,%rsi), %rbp
 7699              	.LVL1096:
2474:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
 7700              		.loc 1 2474 0 discriminator 3
 7701 0285 4D69CB70 		imulq	$1136, %r11, %r9
 7701      040000
 7702 028c 4989C3   		movq	%rax, %r11
 7703 028f 4929DB   		subq	%rbx, %r11
 7704 0292 4969F309 		imulq	$11529, %r11, %rsi
 7704      2D0000
 7705 0299 4D8D1C31 		leaq	(%r9,%rsi), %r11
 7706              	.LVL1097:
2476:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 7707              		.loc 1 2476 0 discriminator 3
 7708 029d 4D69CCAB 		imulq	$-5461, %r12, %r9
 7708      EAFFFF
 7709 02a4 4C8D2401 		leaq	(%rcx,%rax), %r12
2478:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 7710              		.loc 1 2478 0 discriminator 3
 7711 02a8 4889D9   		movq	%rbx, %rcx
 7712 02ab 482B4C24 		subq	-112(%rsp), %rcx
 7712      90
2476:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 7713              		.loc 1 2476 0 discriminator 3
 7714 02b0 4969F417 		imulq	$-10217, %r12, %rsi
 7714      D8FFFF
2491:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 7715              		.loc 1 2491 0 discriminator 3
 7716 02b7 4869C0C1 		imulq	$-13631, %rax, %rax
 7716      CAFFFF
 7717              	.LVL1098:
2476:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 7718              		.loc 1 2476 0 discriminator 3
 7719 02be 4D8D2431 		leaq	(%r9,%rsi), %r12
 7720              	.LVL1099:
2478:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 7721              		.loc 1 2478 0 discriminator 3
 7722 02c2 4F8D0C02 		leaq	(%r10,%r8), %r9
 7723 02c6 4869F123 		imulq	$3363, %rcx, %rsi
 7723      0D0000
2490:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 7724              		.loc 1 2490 0 discriminator 3
 7725 02cd 488B4C24 		movq	-104(%rsp), %rcx
 7725      98
2478:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 7726              		.loc 1 2478 0 discriminator 3
 7727 02d2 4D69C9B2 		imulq	$-11086, %r9, %r9
 7727      D4FFFF
 7728 02d9 4901F1   		addq	%rsi, %r9
 7729              	.LVL1100:
2490:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 7730              		.loc 1 2490 0 discriminator 3
 7731 02dc 4B8D342E 		leaq	(%r14,%r13), %rsi
 7732 02e0 4801EE   		addq	%rbp, %rsi
 7733 02e3 4801F7   		addq	%rsi, %rdi
 7734 02e6 488D9417 		leaq	1024(%rdi,%rdx), %rdx
 7734      00040000 
 7735              		.loc 1 2491 0 discriminator 3
 7736 02ee 4969F74D 		imulq	$589, %r15, %rsi
 7736      020000
2490:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 7737              		.loc 1 2490 0 discriminator 3
 7738 02f5 48C1FA0B 		sarq	$11, %rdx
 7739 02f9 895104   		movl	%edx, 4(%rcx)
 7740              		.loc 1 2491 0 discriminator 3
 7741 02fc 4B8D1423 		leaq	(%r11,%r12), %rdx
 7742 0300 4801D6   		addq	%rdx, %rsi
2414:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 7743              		.loc 1 2414 0 discriminator 3
 7744 0303 488B5424 		movq	-24(%rsp), %rdx
 7744      E8
 7745              		.loc 1 2491 0 discriminator 3
 7746 0308 4801C6   		addq	%rax, %rsi
 7747 030b 498D8436 		leaq	1024(%r14,%rsi), %rax
 7747      00040000 
 7748 0313 48C1F80B 		sarq	$11, %rax
2492:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 7749              		.loc 1 2492 0 discriminator 3
 7750 0317 4D01CB   		addq	%r9, %r11
 7751              	.LVL1101:
2493:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 7752              		.loc 1 2493 0 discriminator 3
 7753 031a 4D01E1   		addq	%r12, %r9
 7754              	.LVL1102:
2492:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 7755              		.loc 1 2492 0 discriminator 3
 7756 031d 4969F2FA 		imulq	$-9222, %r10, %rsi
 7756      DBFFFF
2491:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 7757              		.loc 1 2491 0 discriminator 3
 7758 0324 89410C   		movl	%eax, 12(%rcx)
 7759 0327 48834424 		addq	$8, -96(%rsp)
 7759      A008
2492:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 7760              		.loc 1 2492 0 discriminator 3
 7761 032d 4869DB47 		imulq	$10055, %rbx, %rbx
 7761      270000
 7762              	.LVL1103:
 7763 0334 4C01DE   		addq	%r11, %rsi
 7764 0337 4801F3   		addq	%rsi, %rbx
 7765              		.loc 1 2493 0 discriminator 3
 7766 033a 4969F018 		imulq	$8728, %r8, %rsi
 7766      220000
 7767              	.LVL1104:
2492:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 7768              		.loc 1 2492 0 discriminator 3
 7769 0341 498D841D 		leaq	1024(%r13,%rbx), %rax
 7769      00040000 
 7770 0349 48C1F80B 		sarq	$11, %rax
 7771 034d 894114   		movl	%eax, 20(%rcx)
 7772              		.loc 1 2493 0 discriminator 3
 7773 0350 4901F1   		addq	%rsi, %r9
 7774 0353 48697424 		imulq	$17760, -112(%rsp), %rsi
 7774      90604500 
 7774      00
 7775              	.LVL1105:
 7776 035c 4C01CE   		addq	%r9, %rsi
 7777              	.LVL1106:
 7778 035f 488D8435 		leaq	1024(%rbp,%rsi), %rax
 7778      00040000 
 7779 0367 48C1F80B 		sarq	$11, %rax
 7780 036b 89411C   		movl	%eax, 28(%rcx)
2494:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2495:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 7781              		.loc 1 2495 0 discriminator 3
 7782 036e 4889C8   		movq	%rcx, %rax
 7783 0371 4883C020 		addq	$32, %rax
2414:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 7784              		.loc 1 2414 0 discriminator 3
 7785 0375 4839D0   		cmpq	%rdx, %rax
 7786              		.loc 1 2495 0 discriminator 3
 7787 0378 48894424 		movq	%rax, -104(%rsp)
 7787      98
 7788              	.LVL1107:
2414:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 7789              		.loc 1 2414 0 discriminator 3
 7790 037d 0F85ADFC 		jne	.L128
 7790      FFFF
 7791 0383 488B6C24 		movq	-8(%rsp), %rbp
 7791      F8
 7792              	.LVL1108:
 7793 0388 4C8D4D20 		leaq	32(%rbp), %r9
 7794              	.LVL1109:
 7795 038c 0F1F4000 		.p2align 4,,10
 7796              		.p2align 3
 7797              	.L129:
2496:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2497:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2498:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
2499:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
2500:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
2501:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by 8/16 = 1/2.
2502:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 8-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
2503:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2504:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2505:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
2506:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
2507:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
2508:fltk-1.3.4-1/jpeg/jfdctint.c ****      * rotator "c1" should be "c6".
2509:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
2510:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2511:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*7];
2512:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
2513:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
2514:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 7798              		.loc 1 2514 0 discriminator 3
 7799 0390 8B9D8000 		movl	128(%rbp), %ebx
 7799      0000
2511:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 7800              		.loc 1 2511 0 discriminator 3
 7801 0396 8B7500   		movl	0(%rbp), %esi
 7802 0399 448BBDE0 		movl	224(%rbp), %r15d
 7802      000000
2512:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 7803              		.loc 1 2512 0 discriminator 3
 7804 03a0 8B4D20   		movl	32(%rbp), %ecx
 7805 03a3 448BADC0 		movl	192(%rbp), %r13d
 7805      000000
2513:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 7806              		.loc 1 2513 0 discriminator 3
 7807 03aa 8B5540   		movl	64(%rbp), %edx
 7808 03ad 448BA5A0 		movl	160(%rbp), %r12d
 7808      000000
 7809              		.loc 1 2514 0 discriminator 3
 7810 03b4 8B4560   		movl	96(%rbp), %eax
2511:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 7811              		.loc 1 2511 0 discriminator 3
 7812 03b7 468D043E 		leal	(%rsi,%r15), %r8d
2515:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2516:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp3;
2517:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
2518:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
2519:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
2520:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2521:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*7];
 7813              		.loc 1 2521 0 discriminator 3
 7814 03bb 4429FE   		subl	%r15d, %esi
2512:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 7815              		.loc 1 2512 0 discriminator 3
 7816 03be 428D3C29 		leal	(%rcx,%r13), %edi
2522:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 7817              		.loc 1 2522 0 discriminator 3
 7818 03c2 4429E9   		subl	%r13d, %ecx
2521:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 7819              		.loc 1 2521 0 discriminator 3
 7820 03c5 4863F6   		movslq	%esi, %rsi
2514:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7821              		.loc 1 2514 0 discriminator 3
 7822 03c8 448D1C18 		leal	(%rax,%rbx), %r11d
2513:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 7823              		.loc 1 2513 0 discriminator 3
 7824 03cc 468D3422 		leal	(%rdx,%r12), %r14d
2511:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 7825              		.loc 1 2511 0 discriminator 3
 7826 03d0 4D63C0   		movslq	%r8d, %r8
 7827              	.LVL1110:
2512:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 7828              		.loc 1 2512 0 discriminator 3
 7829 03d3 4863FF   		movslq	%edi, %rdi
 7830              	.LVL1111:
2523:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
2524:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 7831              		.loc 1 2524 0 discriminator 3
 7832 03d6 29D8     		subl	%ebx, %eax
2523:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 7833              		.loc 1 2523 0 discriminator 3
 7834 03d8 4429E2   		subl	%r12d, %edx
2514:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7835              		.loc 1 2514 0 discriminator 3
 7836 03db 4D63DB   		movslq	%r11d, %r11
2513:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 7837              		.loc 1 2513 0 discriminator 3
 7838 03de 4D63F6   		movslq	%r14d, %r14
 7839              	.LVL1112:
2522:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 7840              		.loc 1 2522 0 discriminator 3
 7841 03e1 4863C9   		movslq	%ecx, %rcx
2516:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 7842              		.loc 1 2516 0 discriminator 3
 7843 03e4 4F8D1418 		leaq	(%r8,%r11), %r10
 7844              	.LVL1113:
2517:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 7845              		.loc 1 2517 0 discriminator 3
 7846 03e8 4D29D8   		subq	%r11, %r8
 7847              	.LVL1114:
2518:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 7848              		.loc 1 2518 0 discriminator 3
 7849 03eb 4E8D1C37 		leaq	(%rdi,%r14), %r11
 7850              	.LVL1115:
2519:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7851              		.loc 1 2519 0 discriminator 3
 7852 03ef 4C29F7   		subq	%r14, %rdi
 7853              	.LVL1116:
2523:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 7854              		.loc 1 2523 0 discriminator 3
 7855 03f2 4863D2   		movslq	%edx, %rdx
 7856              	.LVL1117:
 7857              		.loc 1 2524 0 discriminator 3
 7858 03f5 4898     		cltq
 7859              	.LVL1118:
2525:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2526:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM) DESCALE(tmp10 + tmp11, PASS1_BITS+1);
 7860              		.loc 1 2526 0 discriminator 3
 7861 03f7 4B8D5C1A 		leaq	4(%r10,%r11), %rbx
 7861      04
2527:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp10 - tmp11, PASS1_BITS+1);
 7862              		.loc 1 2527 0 discriminator 3
 7863 03fc 4D29DA   		subq	%r11, %r10
 7864              	.LVL1119:
2528:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2529:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_541196100);   /* c6 */
2530:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
2531:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
2532:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2533:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
2534:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
2535:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2536:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2537:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part per figure 8 --- note paper omits factor of sqrt(2).
2538:fltk-1.3.4-1/jpeg/jfdctint.c ****      * i0..i3 in the paper are tmp0..tmp3 here.
2539:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
2540:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 + tmp2;
2542:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
2543:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2544:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_1_175875602);   /*  c3 */
2545:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);      /* -c3+c5 */
2546:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);      /* -c3-c5 */
2547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
2548:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
2549:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2550:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223);   /* -c3+c7 */
 7865              		.loc 1 2550 0 discriminator 3
 7866 03ff 4C8D1C06 		leaq	(%rsi,%rax), %r11
 7867              	.LVL1120:
2527:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp10 - tmp11, PASS1_BITS+1);
 7868              		.loc 1 2527 0 discriminator 3
 7869 0403 4983C204 		addq	$4, %r10
 7870 0407 49C1FA03 		sarq	$3, %r10
2526:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp10 - tmp11, PASS1_BITS+1);
 7871              		.loc 1 2526 0 discriminator 3
 7872 040b 48C1FB03 		sarq	$3, %rbx
2527:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp10 - tmp11, PASS1_BITS+1);
 7873              		.loc 1 2527 0 discriminator 3
 7874 040f 44899580 		movl	%r10d, 128(%rbp)
 7874      000000
 7875              	.LVL1121:
2529:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 7876              		.loc 1 2529 0 discriminator 3
 7877 0416 4D8D1438 		leaq	(%r8,%rdi), %r10
2526:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp10 - tmp11, PASS1_BITS+1);
 7878              		.loc 1 2526 0 discriminator 3
 7879 041a 895D00   		movl	%ebx, 0(%rbp)
2530:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 7880              		.loc 1 2530 0 discriminator 3
 7881 041d 4D69C07E 		imulq	$6270, %r8, %r8
 7881      180000
 7882              	.LVL1122:
2529:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 7883              		.loc 1 2529 0 discriminator 3
 7884 0424 4D69D251 		imulq	$4433, %r10, %r10
 7884      110000
 7885              	.LVL1123:
2533:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 7886              		.loc 1 2533 0 discriminator 3
 7887 042b 4869FFDF 		imulq	$-15137, %rdi, %rdi
 7887      C4FFFF
 7888              	.LVL1124:
2530:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 7889              		.loc 1 2530 0 discriminator 3
 7890 0432 4F8D8402 		leaq	32768(%r10,%r8), %r8
 7890      00800000 
2533:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 7891              		.loc 1 2533 0 discriminator 3
 7892 043a 498DBC3A 		leaq	32768(%r10,%rdi), %rdi
 7892      00800000 
2542:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7893              		.loc 1 2542 0 discriminator 3
 7894 0442 4C8D1401 		leaq	(%rcx,%rax), %r10
 7895              	.LVL1125:
2530:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 7896              		.loc 1 2530 0 discriminator 3
 7897 0446 49C1F810 		sarq	$16, %r8
 7898 044a 44894540 		movl	%r8d, 64(%rbp)
2541:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 7899              		.loc 1 2541 0 discriminator 3
 7900 044e 4C8D0416 		leaq	(%rsi,%rdx), %r8
 7901              	.LVL1126:
2533:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 7902              		.loc 1 2533 0 discriminator 3
 7903 0452 48C1FF10 		sarq	$16, %rdi
 7904 0456 89BDC000 		movl	%edi, 192(%rbp)
 7904      0000
2544:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);      /* -c3+c5 */
 7905              		.loc 1 2544 0 discriminator 3
 7906 045c 4B8D3C10 		leaq	(%r8,%r10), %rdi
2546:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 7907              		.loc 1 2546 0 discriminator 3
 7908 0460 4D69D23B 		imulq	$-16069, %r10, %r10
 7908      C1FFFF
 7909              	.LVL1127:
2544:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);      /* -c3+c5 */
 7910              		.loc 1 2544 0 discriminator 3
 7911 0467 4869FFA1 		imulq	$9633, %rdi, %rdi
 7911      250000
 7912              	.LVL1128:
2545:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);      /* -c3-c5 */
 7913              		.loc 1 2545 0 discriminator 3
 7914 046e 4D69C084 		imulq	$-3196, %r8, %r8
 7914      F3FFFF
 7915              	.LVL1129:
 7916              		.loc 1 2550 0 discriminator 3
 7917 0475 4D69DB33 		imulq	$-7373, %r11, %r11
 7917      E3FFFF
2547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 7918              		.loc 1 2547 0 discriminator 3
 7919 047c 4901F8   		addq	%rdi, %r8
 7920              	.LVL1130:
2548:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 7921              		.loc 1 2548 0 discriminator 3
 7922 047f 4C01D7   		addq	%r10, %rdi
 7923              	.LVL1131:
2551:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);          /*  c1+c3-c5-c7 */
 7924              		.loc 1 2551 0 discriminator 3
 7925 0482 4869F60B 		imulq	$12299, %rsi, %rsi
 7925      300000
 7926              	.LVL1132:
2552:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);          /* -c1+c3+c5-c7 */
2553:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
2554:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += z1 + tmp13;
2555:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2556:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447);   /* -c1-c3 */
 7927              		.loc 1 2556 0 discriminator 3
 7928 0489 4C8D1411 		leaq	(%rcx,%rdx), %r10
2552:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);          /* -c1+c3+c5-c7 */
 7929              		.loc 1 2552 0 discriminator 3
 7930 048d 4869C08E 		imulq	$2446, %rax, %rax
 7930      090000
 7931              	.LVL1133:
2557:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);          /*  c1+c3+c5-c7 */
2558:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);          /*  c1+c3-c5+c7 */
2559:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
2560:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += z1 + tmp12;
2561:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2562:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp0, CONST_BITS+PASS1_BITS+1);
 7932              		.loc 1 2562 0 discriminator 3
 7933 0494 4B8D1C18 		leaq	(%r8,%r11), %rbx
2556:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);          /*  c1+c3+c5-c7 */
 7934              		.loc 1 2556 0 discriminator 3
 7935 0498 4D69D2FD 		imulq	$-20995, %r10, %r10
 7935      ADFFFF
 7936              	.LVL1134:
 7937              		.loc 1 2562 0 discriminator 3
 7938 049f 488DB41E 		leaq	32768(%rsi,%rbx), %rsi
 7938      00800000 
 7939              	.LVL1135:
2557:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);          /*  c1+c3+c5-c7 */
 7940              		.loc 1 2557 0 discriminator 3
 7941 04a7 4869C954 		imulq	$25172, %rcx, %rcx
 7941      620000
 7942              	.LVL1136:
2558:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
 7943              		.loc 1 2558 0 discriminator 3
 7944 04ae 4869D2B3 		imulq	$16819, %rdx, %rdx
 7944      410000
 7945              	.LVL1137:
 7946              		.loc 1 2562 0 discriminator 3
 7947 04b5 48C1FE10 		sarq	$16, %rsi
 7948 04b9 897520   		movl	%esi, 32(%rbp)
 7949              	.LVL1138:
2563:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS+1);
 7950              		.loc 1 2563 0 discriminator 3
 7951 04bc 4A8D3417 		leaq	(%rdi,%r10), %rsi
2564:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 7952              		.loc 1 2564 0 discriminator 3
 7953 04c0 4D01D0   		addq	%r10, %r8
 7954              	.LVL1139:
2565:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp3, CONST_BITS+PASS1_BITS+1);
 7955              		.loc 1 2565 0 discriminator 3
 7956 04c3 4C01DF   		addq	%r11, %rdi
 7957              	.LVL1140:
 7958 04c6 488D8438 		leaq	32768(%rax,%rdi), %rax
 7958      00800000 
2563:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS+1);
 7959              		.loc 1 2563 0 discriminator 3
 7960 04ce 488D8C31 		leaq	32768(%rcx,%rsi), %rcx
 7960      00800000 
2564:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 7961              		.loc 1 2564 0 discriminator 3
 7962 04d6 4A8D9402 		leaq	32768(%rdx,%r8), %rdx
 7962      00800000 
 7963              		.loc 1 2565 0 discriminator 3
 7964 04de 48C1F810 		sarq	$16, %rax
2563:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS+1);
 7965              		.loc 1 2563 0 discriminator 3
 7966 04e2 48C1F910 		sarq	$16, %rcx
2564:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 7967              		.loc 1 2564 0 discriminator 3
 7968 04e6 48C1FA10 		sarq	$16, %rdx
 7969              		.loc 1 2565 0 discriminator 3
 7970 04ea 8985E000 		movl	%eax, 224(%rbp)
 7970      0000
2563:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS+1);
 7971              		.loc 1 2563 0 discriminator 3
 7972 04f0 894D60   		movl	%ecx, 96(%rbp)
2564:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 7973              		.loc 1 2564 0 discriminator 3
 7974 04f3 8995A000 		movl	%edx, 160(%rbp)
 7974      0000
2566:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2567:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 7975              		.loc 1 2567 0 discriminator 3
 7976 04f9 4883C504 		addq	$4, %rbp
 7977              	.LVL1141:
2506:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
 7978              		.loc 1 2506 0 discriminator 3
 7979 04fd 4C39CD   		cmpq	%r9, %rbp
 7980 0500 0F858AFE 		jne	.L129
 7980      FFFF
2568:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2569:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 7981              		.loc 1 2569 0
 7982 0506 5B       		popq	%rbx
 7983              		.cfi_def_cfa_offset 48
 7984              	.LVL1142:
 7985 0507 5D       		popq	%rbp
 7986              		.cfi_def_cfa_offset 40
 7987              	.LVL1143:
 7988 0508 415C     		popq	%r12
 7989              		.cfi_def_cfa_offset 32
 7990 050a 415D     		popq	%r13
 7991              		.cfi_def_cfa_offset 24
 7992 050c 415E     		popq	%r14
 7993              		.cfi_def_cfa_offset 16
 7994 050e 415F     		popq	%r15
 7995              		.cfi_def_cfa_offset 8
 7996 0510 C3       		ret
 7997              		.cfi_endproc
 7998              	.LFE77:
 8000              		.section	.text.unlikely.jpeg_fdct_16x8
 8001              	.LCOLDE16:
 8002              		.section	.text.jpeg_fdct_16x8
 8003              	.LHOTE16:
 8004              		.section	.text.unlikely.jpeg_fdct_14x7,"ax",@progbits
 8005              	.LCOLDB17:
 8006              		.section	.text.jpeg_fdct_14x7,"ax",@progbits
 8007              	.LHOTB17:
 8008              		.p2align 4,,15
 8009              		.globl	jpeg_fdct_14x7
 8011              	jpeg_fdct_14x7:
 8012              	.LFB78:
2570:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2571:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2572:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
2573:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 14x7 sample block.
2574:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
2575:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 14-point FDCT in pass 1 (rows), 7-point in pass 2 (columns).
2576:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
2577:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2578:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
2579:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_14x7 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
2580:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 8013              		.loc 1 2580 0
 8014              		.cfi_startproc
 8015              	.LVL1144:
 8016 0000 4157     		pushq	%r15
 8017              		.cfi_def_cfa_offset 16
 8018              		.cfi_offset 15, -16
2581:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
2582:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
2583:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1, z2, z3;
2584:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
2585:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
2586:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
2587:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
2588:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2589:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Zero bottom row of output coefficient block. */
2590:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(&data[DCTSIZE*7], SIZEOF(DCTELEM) * DCTSIZE);
 8019              		.loc 1 2590 0
 8020 0002 488D87E0 		leaq	224(%rdi), %rax
 8020      000000
2580:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 8021              		.loc 1 2580 0
 8022 0009 4156     		pushq	%r14
 8023              		.cfi_def_cfa_offset 24
 8024              		.cfi_offset 14, -24
 8025 000b 4155     		pushq	%r13
 8026              		.cfi_def_cfa_offset 32
 8027              		.cfi_offset 13, -32
 8028 000d 4154     		pushq	%r12
 8029              		.cfi_def_cfa_offset 40
 8030              		.cfi_offset 12, -40
2591:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2592:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
2593:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
2594:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
2595:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 14-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/28).
2596:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2597:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2598:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 8031              		.loc 1 2598 0
 8032 000f 4989FC   		movq	%rdi, %r12
2580:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 8033              		.loc 1 2580 0
 8034 0012 55       		pushq	%rbp
 8035              		.cfi_def_cfa_offset 48
 8036              		.cfi_offset 6, -48
 8037 0013 53       		pushq	%rbx
 8038              		.cfi_def_cfa_offset 56
 8039              		.cfi_offset 3, -56
 8040              	.LBB74:
 8041              	.LBB75:
 8042              		.loc 2 90 0
 8043 0014 48C787E0 		movq	$0, 224(%rdi)
 8043      00000000 
 8043      000000
 8044 001f 48C787E8 		movq	$0, 232(%rdi)
 8044      00000000 
 8044      000000
 8045              	.LBE75:
 8046              	.LBE74:
2590:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8047              		.loc 1 2590 0
 8048 002a 48894424 		movq	%rax, -24(%rsp)
 8048      E8
 8049              	.LVL1145:
 8050 002f 89D0     		movl	%edx, %eax
 8051              	.LVL1146:
 8052              	.LBB77:
 8053              	.LBB76:
 8054              		.loc 2 90 0
 8055 0031 48C787F0 		movq	$0, 240(%rdi)
 8055      00000000 
 8055      000000
 8056 003c 48C787F8 		movq	$0, 248(%rdi)
 8056      00000000 
 8056      000000
 8057              	.LVL1147:
 8058 0047 48894424 		movq	%rax, -16(%rsp)
 8058      F0
 8059 004c 48897424 		movq	%rsi, -88(%rsp)
 8059      A8
 8060              	.LBE76:
 8061              	.LBE77:
 8062              		.loc 1 2598 0
 8063 0051 48897C24 		movq	%rdi, -8(%rsp)
 8063      F8
 8064              	.LVL1148:
 8065 0056 662E0F1F 		.p2align 4,,10
 8065      84000000 
 8065      0000
 8066              		.p2align 3
 8067              	.L134:
2599:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 7; ctr++) {
2600:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 8068              		.loc 1 2600 0 discriminator 3
 8069 0060 488B4424 		movq	-88(%rsp), %rax
 8069      A8
 8070 0065 4C8B5C24 		movq	-16(%rsp), %r11
 8070      F0
 8071 006a 4C0318   		addq	(%rax), %r11
 8072              	.LVL1149:
2601:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2602:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2603:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2604:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[13]);
2605:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
2606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
 8073              		.loc 1 2606 0 discriminator 3
 8074 006d 410FB643 		movzbl	2(%r11), %eax
 8074      02
2607:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 8075              		.loc 1 2607 0 discriminator 3
 8076 0072 410FB64B 		movzbl	10(%r11), %ecx
 8076      0A
2608:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 8077              		.loc 1 2608 0 discriminator 3
 8078 0077 410FB66B 		movzbl	9(%r11), %ebp
 8078      09
2605:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
 8079              		.loc 1 2605 0 discriminator 3
 8080 007c 410FB653 		movzbl	1(%r11), %edx
 8080      01
 8081 0081 450FB673 		movzbl	12(%r11), %r14d
 8081      0C
2604:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
 8082              		.loc 1 2604 0 discriminator 3
 8083 0086 410FB633 		movzbl	(%r11), %esi
 8084 008a 450FB67B 		movzbl	13(%r11), %r15d
 8084      0D
2609:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 8085              		.loc 1 2609 0 discriminator 3
 8086 008f 450FB66B 		movzbl	8(%r11), %r13d
 8086      08
2606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 8087              		.loc 1 2606 0 discriminator 3
 8088 0094 894424B8 		movl	%eax, -72(%rsp)
 8089 0098 4189C0   		movl	%eax, %r8d
2607:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 8090              		.loc 1 2607 0 discriminator 3
 8091 009b 410FB643 		movzbl	3(%r11), %eax
 8091      03
 8092 00a0 894C24C4 		movl	%ecx, -60(%rsp)
2608:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 8093              		.loc 1 2608 0 discriminator 3
 8094 00a4 896C24D4 		movl	%ebp, -44(%rsp)
2605:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
 8095              		.loc 1 2605 0 discriminator 3
 8096 00a8 895424B4 		movl	%edx, -76(%rsp)
 8097 00ac 468D1432 		leal	(%rdx,%r14), %r10d
2606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 8098              		.loc 1 2606 0 discriminator 3
 8099 00b0 410FB653 		movzbl	11(%r11), %edx
 8099      0B
2604:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
 8100              		.loc 1 2604 0 discriminator 3
 8101 00b5 428D1C3E 		leal	(%rsi,%r15), %ebx
2610:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
2611:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2612:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp6;
2613:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
2614:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp5;
2615:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp5;
2616:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp4;
2617:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
2618:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2619:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[13]);
 8102              		.loc 1 2619 0 discriminator 3
 8103 00b9 4429FE   		subl	%r15d, %esi
2607:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 8104              		.loc 1 2607 0 discriminator 3
 8105 00bc 894424C0 		movl	%eax, -64(%rsp)
 8106 00c0 01C8     		addl	%ecx, %eax
2608:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 8107              		.loc 1 2608 0 discriminator 3
 8108 00c2 410FB64B 		movzbl	4(%r11), %ecx
 8108      04
2607:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 8109              		.loc 1 2607 0 discriminator 3
 8110 00c7 4C63C8   		movslq	%eax, %r9
2610:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 8111              		.loc 1 2610 0 discriminator 3
 8112 00ca 410FB643 		movzbl	6(%r11), %eax
 8112      06
2604:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[12]);
 8113              		.loc 1 2604 0 discriminator 3
 8114 00cf 4863DB   		movslq	%ebx, %rbx
 8115              	.LVL1150:
2606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 8116              		.loc 1 2606 0 discriminator 3
 8117 00d2 895424BC 		movl	%edx, -68(%rsp)
 8118 00d6 4101D0   		addl	%edx, %r8d
2607:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[9]);
 8119              		.loc 1 2607 0 discriminator 3
 8120 00d9 4C894C24 		movq	%r9, -56(%rsp)
 8120      C8
2605:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[11]);
 8121              		.loc 1 2605 0 discriminator 3
 8122 00de 4D63D2   		movslq	%r10d, %r10
 8123              	.LVL1151:
2606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[10]);
 8124              		.loc 1 2606 0 discriminator 3
 8125 00e1 4D63C0   		movslq	%r8d, %r8
 8126              	.LVL1152:
 8127              		.loc 1 2619 0 discriminator 3
 8128 00e4 4863F6   		movslq	%esi, %rsi
2608:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 8129              		.loc 1 2608 0 discriminator 3
 8130 00e7 89CF     		movl	%ecx, %edi
 8131 00e9 894C24D0 		movl	%ecx, -48(%rsp)
2609:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 8132              		.loc 1 2609 0 discriminator 3
 8133 00ed 410FB64B 		movzbl	5(%r11), %ecx
 8133      05
2608:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 8134              		.loc 1 2608 0 discriminator 3
 8135 00f2 01EF     		addl	%ebp, %edi
2610:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8136              		.loc 1 2610 0 discriminator 3
 8137 00f4 410FB66B 		movzbl	7(%r11), %ebp
 8137      07
2608:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[8]);
 8138              		.loc 1 2608 0 discriminator 3
 8139 00f9 4863FF   		movslq	%edi, %rdi
 8140              	.LVL1153:
2609:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 8141              		.loc 1 2609 0 discriminator 3
 8142 00fc 468D0C29 		leal	(%rcx,%r13), %r9d
 8143              	.LVL1154:
2620:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[12]);
2621:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[11]);
2622:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[10]);
2623:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
2624:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[8]);
 8144              		.loc 1 2624 0 discriminator 3
 8145 0100 4429E9   		subl	%r13d, %ecx
2610:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8146              		.loc 1 2610 0 discriminator 3
 8147 0103 448D1C28 		leal	(%rax,%rbp), %r11d
 8148              	.LVL1155:
2625:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[7]);
 8149              		.loc 1 2625 0 discriminator 3
 8150 0107 29E8     		subl	%ebp, %eax
2624:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) - GETJSAMPLE(elemptr[7]);
 8151              		.loc 1 2624 0 discriminator 3
 8152 0109 4863C9   		movslq	%ecx, %rcx
2609:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = GETJSAMPLE(elemptr[6]) + GETJSAMPLE(elemptr[7]);
 8153              		.loc 1 2609 0 discriminator 3
 8154 010c 4D63C9   		movslq	%r9d, %r9
 8155              	.LVL1156:
 8156              		.loc 1 2625 0 discriminator 3
 8157 010f 4898     		cltq
2610:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8158              		.loc 1 2610 0 discriminator 3
 8159 0111 4D63DB   		movslq	%r11d, %r11
 8160              	.LVL1157:
2612:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
 8161              		.loc 1 2612 0 discriminator 3
 8162 0114 4A8D141B 		leaq	(%rbx,%r11), %rdx
2613:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp5;
 8163              		.loc 1 2613 0 discriminator 3
 8164 0118 4C29DB   		subq	%r11, %rbx
 8165              	.LVL1158:
2614:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp5;
 8166              		.loc 1 2614 0 discriminator 3
 8167 011b 4F8D1C0A 		leaq	(%r10,%r9), %r11
 8168              	.LVL1159:
2615:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp4;
 8169              		.loc 1 2615 0 discriminator 3
 8170 011f 4D29CA   		subq	%r9, %r10
 8171              	.LVL1160:
2616:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
 8172              		.loc 1 2616 0 discriminator 3
 8173 0122 4D8D0C38 		leaq	(%r8,%rdi), %r9
 8174              	.LVL1161:
2617:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8175              		.loc 1 2617 0 discriminator 3
 8176 0126 4929F8   		subq	%rdi, %r8
 8177              	.LVL1162:
2612:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
 8178              		.loc 1 2612 0 discriminator 3
 8179 0129 48895424 		movq	%rdx, -40(%rsp)
 8179      D8
 8180              	.LVL1163:
2620:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[11]);
 8181              		.loc 1 2620 0 discriminator 3
 8182 012e 8B5424B4 		movl	-76(%rsp), %edx
2617:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8183              		.loc 1 2617 0 discriminator 3
 8184 0132 4C894424 		movq	%r8, -32(%rsp)
 8184      E0
 8185              	.LVL1164:
2621:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[10]);
 8186              		.loc 1 2621 0 discriminator 3
 8187 0137 8B7C24B8 		movl	-72(%rsp), %edi
 8188              	.LVL1165:
 8189 013b 2B7C24BC 		subl	-68(%rsp), %edi
2620:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[11]);
 8190              		.loc 1 2620 0 discriminator 3
 8191 013f 4429F2   		subl	%r14d, %edx
2622:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
 8192              		.loc 1 2622 0 discriminator 3
 8193 0142 448B7424 		movl	-64(%rsp), %r14d
 8193      C0
 8194              	.LVL1166:
 8195 0147 442B7424 		subl	-60(%rsp), %r14d
 8195      C4
2623:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[8]);
 8196              		.loc 1 2623 0 discriminator 3
 8197 014c 448B7C24 		movl	-48(%rsp), %r15d
 8197      D0
2626:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2627:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
2628:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 8198              		.loc 1 2628 0 discriminator 3
 8199 0151 488B6C24 		movq	-40(%rsp), %rbp
 8199      D8
 8200              	.LVL1167:
2620:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[11]);
 8201              		.loc 1 2620 0 discriminator 3
 8202 0156 4863D2   		movslq	%edx, %rdx
 8203              	.LVL1168:
 8204              		.loc 1 2628 0 discriminator 3
 8205 0159 4C8B6C24 		movq	-56(%rsp), %r13
 8205      C8
 8206              	.LVL1169:
2623:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[8]);
 8207              		.loc 1 2623 0 discriminator 3
 8208 015e 442B7C24 		subl	-44(%rsp), %r15d
 8208      D4
2621:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[10]);
 8209              		.loc 1 2621 0 discriminator 3
 8210 0163 4863FF   		movslq	%edi, %rdi
 8211              	.LVL1170:
 8212              		.loc 1 2628 0 discriminator 3
 8213 0166 4989E8   		movq	%rbp, %r8
2622:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[9]);
 8214              		.loc 1 2622 0 discriminator 3
 8215 0169 4D63F6   		movslq	%r14d, %r14
 8216              	.LVL1171:
 8217              		.loc 1 2628 0 discriminator 3
 8218 016c 4D01D8   		addq	%r11, %r8
 8219 016f 4D01C8   		addq	%r9, %r8
2623:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[8]);
 8220              		.loc 1 2623 0 discriminator 3
 8221 0172 4D63FF   		movslq	%r15d, %r15
 8222              	.LVL1172:
 8223              		.loc 1 2628 0 discriminator 3
 8224 0175 4F8D8405 		leaq	-1792(%r13,%r8), %r8
 8224      00F9FFFF 
 8225 017d 49C1E002 		salq	$2, %r8
 8226 0181 45890424 		movl	%r8d, (%r12)
 8227              	.LVL1173:
2629:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 + tmp13 - 14 * CENTERJSAMPLE) << PASS1_BITS);
2630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp13;
 8228              		.loc 1 2630 0 discriminator 3
 8229 0185 4F8D442D 		leaq	(%r13,%r13), %r8
 8229      00
 8230              	.LVL1174:
2631:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 8231              		.loc 1 2631 0 discriminator 3
 8232 018a 4C29C5   		subq	%r8, %rbp
 8233 018d 4D29C3   		subq	%r8, %r11
 8234              	.LVL1175:
 8235 0190 4D29C1   		subq	%r8, %r9
 8236              	.LVL1176:
 8237 0193 4869EDC6 		imulq	$10438, %rbp, %rbp
 8237      280000
 8238 019a 4D69DB12 		imulq	$2578, %r11, %r11
 8238      0A0000
 8239 01a1 4D69C9C9 		imulq	$-7223, %r9, %r9
 8239      E3FFFF
 8240 01a8 4901EB   		addq	%rbp, %r11
 8241 01ab 4F8D840B 		leaq	1024(%r11,%r9), %r8
 8241      00040000 
 8242              	.LVL1177:
2632:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.274162392)) + /* c4 */
2633:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp13, FIX(0.314692123)) - /* c12 */
2634:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp12 - tmp13, FIX(0.881747734)),  /* c8 */
2635:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2636:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2637:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp14 + tmp15, FIX(1.105676686));    /* c6 */
2638:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2639:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 8243              		.loc 1 2639 0 discriminator 3
 8244 01b3 4C8B5C24 		movq	-32(%rsp), %r11
 8244      E0
2631:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 8245              		.loc 1 2631 0 discriminator 3
 8246 01b8 49C1F80B 		sarq	$11, %r8
 8247 01bc 45894424 		movl	%r8d, 16(%r12)
 8247      10
2637:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8248              		.loc 1 2637 0 discriminator 3
 8249 01c1 4E8D0413 		leaq	(%rbx,%r10), %r8
 8250              		.loc 1 2639 0 discriminator 3
 8251 01c5 4869DBBD 		imulq	$2237, %rbx, %rbx
 8251      080000
 8252              	.LVL1178:
2637:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8253              		.loc 1 2637 0 discriminator 3
 8254 01cc 4D69C062 		imulq	$9058, %r8, %r8
 8254      230000
 8255              	.LVL1179:
 8256              		.loc 1 2639 0 discriminator 3
 8257 01d3 4D69CBA3 		imulq	$5027, %r11, %r9
 8257      130000
 8258 01da 4C01C3   		addq	%r8, %rbx
2640:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.273079590))   /* c2-c6 */
2641:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(0.613604268)),        /* c10 */
2642:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2643:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 8259              		.loc 1 2643 0 discriminator 3
 8260 01dd 4D69D2FC 		imulq	$-14084, %r10, %r10
 8260      C8FFFF
 8261              	.LVL1180:
2639:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.273079590))   /* c2-c6 */
 8262              		.loc 1 2639 0 discriminator 3
 8263 01e4 4E8D8C0B 		leaq	1024(%rbx,%r9), %r9
 8263      00040000 
 8264 01ec 49C1F90B 		sarq	$11, %r9
 8265 01f0 45894C24 		movl	%r9d, 8(%r12)
 8265      08
2644:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
2645:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp16, FIX(1.378756276)),        /* c2 */
2646:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2647:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2648:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2649:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2650:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp1 + tmp2;
2651:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
2652:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) ((tmp0 - tmp10 + tmp3 - tmp11 - tmp6) << PASS1_BITS);
 8266              		.loc 1 2652 0 discriminator 3
 8267 01f5 4989F1   		movq	%rsi, %r9
2643:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
 8268              		.loc 1 2643 0 discriminator 3
 8269 01f8 4D01C2   		addq	%r8, %r10
 8270 01fb 4D69C3E1 		imulq	$-11295, %r11, %r8
 8270      D3FFFF
 8271              	.LVL1181:
 8272 0202 4F8D8402 		leaq	1024(%r10,%r8), %r8
 8272      00040000 
2651:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) ((tmp0 - tmp10 + tmp3 - tmp11 - tmp6) << PASS1_BITS);
 8273              		.loc 1 2651 0 discriminator 3
 8274 020a 4989CA   		movq	%rcx, %r10
 8275 020d 4D29FA   		subq	%r15, %r10
2643:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.719280954))   /* c6+c10 */
 8276              		.loc 1 2643 0 discriminator 3
 8277 0210 49C1F80B 		sarq	$11, %r8
 8278 0214 45894424 		movl	%r8d, 24(%r12)
 8278      18
2650:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
 8279              		.loc 1 2650 0 discriminator 3
 8280 0219 4C8D043A 		leaq	(%rdx,%rdi), %r8
 8281              	.LVL1182:
 8282              		.loc 1 2652 0 discriminator 3
 8283 021d 4D29C1   		subq	%r8, %r9
 8284 0220 4D01F1   		addq	%r14, %r9
2653:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 <<= CONST_BITS;
 8285              		.loc 1 2653 0 discriminator 3
 8286 0223 49C1E60D 		salq	$13, %r14
 8287              	.LVL1183:
2652:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 <<= CONST_BITS;
 8288              		.loc 1 2652 0 discriminator 3
 8289 0227 4D29D1   		subq	%r10, %r9
 8290 022a 4929C1   		subq	%rax, %r9
 8291 022d 49C1E102 		salq	$2, %r9
2654:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.158341681));          /* -c13 */
2655:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(1.405321284));            /* c1 */
2656:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 += tmp11 - tmp3;
 8292              		.loc 1 2656 0 discriminator 3
 8293 0231 4D69D2F8 		imulq	$11512, %r10, %r10
 8293      2C0000
 8294              	.LVL1184:
2652:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 <<= CONST_BITS;
 8295              		.loc 1 2652 0 discriminator 3
 8296 0238 45894C24 		movl	%r9d, 28(%r12)
 8296      1C
2654:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.158341681));          /* -c13 */
 8297              		.loc 1 2654 0 discriminator 3
 8298 023d 4D69C8EF 		imulq	$-1297, %r8, %r9
 8298      FAFFFF
 8299              	.LVL1185:
 8300              		.loc 1 2656 0 discriminator 3
 8301 0244 4D29F2   		subq	%r14, %r10
 8302 0247 4F8D040A 		leaq	(%r10,%r9), %r8
 8303              	.LVL1186:
2657:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(1.197448846)) +     /* c5 */
 8304              		.loc 1 2657 0 discriminator 3
 8305 024b 4C8D0C3E 		leaq	(%rsi,%rdi), %r9
2658:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.752406978));      /* c9 */
2659:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM)
 8306              		.loc 1 2659 0 discriminator 3
 8307 024f 4869FF09 		imulq	$-19447, %rdi, %rdi
 8307      B4FFFF
 8308              	.LVL1187:
2657:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(1.197448846)) +     /* c5 */
 8309              		.loc 1 2657 0 discriminator 3
 8310 0256 4D69D152 		imulq	$9810, %r9, %r10
 8310      260000
 8311 025d 4D8D0C07 		leaq	(%r15,%rax), %r9
 8312              		.loc 1 2659 0 discriminator 3
 8313 0261 4D69FFD7 		imulq	$9175, %r15, %r15
 8313      230000
 8314              	.LVL1188:
2657:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(1.197448846)) +     /* c5 */
 8315              		.loc 1 2657 0 discriminator 3
 8316 0268 4D69C914 		imulq	$6164, %r9, %r9
 8316      180000
 8317 026f 4D01D1   		addq	%r10, %r9
 8318              	.LVL1189:
 8319              		.loc 1 2659 0 discriminator 3
 8320 0272 4F8D1408 		leaq	(%r8,%r9), %r10
 8321 0276 4C01D7   		addq	%r10, %rdi
 8322 0279 4A8DBC3F 		leaq	1024(%rdi,%r15), %rdi
 8322      00040000 
 8323 0281 48C1FF0B 		sarq	$11, %rdi
 8324 0285 41897C24 		movl	%edi, 20(%r12)
 8324      14
2660:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 - MULTIPLY(tmp2, FIX(2.373959773)) /* c3+c5-c13 */
2661:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp4, FIX(1.119999435)),         /* c1+c11-c9 */
2662:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2663:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp1, FIX(1.334852607)) +     /* c3 */
 8325              		.loc 1 2663 0 discriminator 3
 8326 028a 488D3C16 		leaq	(%rsi,%rdx), %rdi
2664:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.467085129));      /* c11 */
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
2666:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
2667:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp5, FIX(3.069855259)),         /* c1+c5+c11 */
2668:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2669:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 8327              		.loc 1 2669 0 discriminator 3
 8328 028e 4801C6   		addq	%rax, %rsi
 8329              	.LVL1190:
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 8330              		.loc 1 2665 0 discriminator 3
 8331 0291 4869D26E 		imulq	$-3474, %rdx, %rdx
 8331      F2FFFF
 8332              	.LVL1191:
2663:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.467085129));      /* c11 */
 8333              		.loc 1 2663 0 discriminator 3
 8334 0298 4C69D7B7 		imulq	$10935, %rdi, %r10
 8334      2A0000
 8335 029f 4889CF   		movq	%rcx, %rdi
 8336 02a2 4829C7   		subq	%rax, %rdi
 8337 02a5 4869FFF2 		imulq	$3826, %rdi, %rdi
 8337      0E0000
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 8338              		.loc 1 2665 0 discriminator 3
 8339 02ac 4869C9C4 		imulq	$-25148, %rcx, %rcx
 8339      9DFFFF
 8340              	.LVL1192:
2663:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.467085129));      /* c11 */
 8341              		.loc 1 2663 0 discriminator 3
 8342 02b3 4C01D7   		addq	%r10, %rdi
 8343              	.LVL1193:
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 8344              		.loc 1 2665 0 discriminator 3
 8345 02b6 4901F8   		addq	%rdi, %r8
 8346              	.LVL1194:
 8347              		.loc 1 2669 0 discriminator 3
 8348 02b9 4C01CF   		addq	%r9, %rdi
 8349              	.LVL1195:
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 8350              		.loc 1 2665 0 discriminator 3
 8351 02bc 4C01C2   		addq	%r8, %rdx
 8352              		.loc 1 2669 0 discriminator 3
 8353 02bf 4901FE   		addq	%rdi, %r14
 8354              	.LVL1196:
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 8355              		.loc 1 2665 0 discriminator 3
 8356 02c2 488D940A 		leaq	1024(%rdx,%rcx), %rdx
 8356      00040000 
 8357              		.loc 1 2669 0 discriminator 3
 8358 02ca 4901C6   		addq	%rax, %r14
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 8359              		.loc 1 2665 0 discriminator 3
 8360 02cd 48C1FA0B 		sarq	$11, %rdx
 8361              		.loc 1 2669 0 discriminator 3
 8362 02d1 4869F6F0 		imulq	$-9232, %rsi, %rsi
 8362      DBFFFF
2665:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.424103948)) /* c3-c9-c13 */
 8363              		.loc 1 2665 0 discriminator 3
 8364 02d8 41895424 		movl	%edx, 12(%r12)
 8364      0C
 8365 02dd 48834424 		addq	$8, -88(%rsp)
 8365      A808
2670:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
2671:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp0 + tmp6, FIX(1.126980169)),    /* c3+c5-c1 */
2672:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2673:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2674:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 8366              		.loc 1 2674 0 discriminator 3
 8367 02e3 4983C420 		addq	$32, %r12
 8368              	.LVL1197:
2669:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3 + tmp6 -
 8369              		.loc 1 2669 0 discriminator 3
 8370 02e7 498D8436 		leaq	1024(%r14,%rsi), %rax
 8370      00040000 
 8371              	.LVL1198:
 8372 02ef 48C1F80B 		sarq	$11, %rax
 8373 02f3 41894424 		movl	%eax, -28(%r12)
 8373      E4
 8374              	.LVL1199:
2599:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 8375              		.loc 1 2599 0 discriminator 3
 8376 02f8 4C396424 		cmpq	%r12, -24(%rsp)
 8376      E8
 8377 02fd 0F855DFD 		jne	.L134
 8377      FFFF
 8378 0303 4C8B7424 		movq	-8(%rsp), %r14
 8378      F8
 8379 0308 4D8D4620 		leaq	32(%r14), %r8
 8380              	.LVL1200:
 8381 030c 0F1F4000 		.p2align 4,,10
 8382              		.p2align 3
 8383              	.L135:
2675:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2676:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2677:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
2678:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
2679:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
2680:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/14)*(8/7) = 32/49, which we
2681:fltk-1.3.4-1/jpeg/jfdctint.c ****    * partially fold into the constant multipliers and final shifting:
2682:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 7-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/14) * 64/49.
2683:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2684:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2685:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
2686:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
2687:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2688:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2689:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*6];
 8384              		.loc 1 2689 0 discriminator 3
 8385 0310 418BAEC0 		movl	192(%r14), %ebp
 8385      000000
2690:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
2691:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*4];
 8386              		.loc 1 2691 0 discriminator 3
 8387 0317 418B8E80 		movl	128(%r14), %ecx
 8387      000000
2689:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 8388              		.loc 1 2689 0 discriminator 3
 8389 031e 418B06   		movl	(%r14), %eax
 8390              		.loc 1 2691 0 discriminator 3
 8391 0321 418B7E40 		movl	64(%r14), %edi
2690:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 8392              		.loc 1 2690 0 discriminator 3
 8393 0325 418BB6A0 		movl	160(%r14), %esi
 8393      000000
 8394 032c 418B5620 		movl	32(%r14), %edx
2692:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3];
 8395              		.loc 1 2692 0 discriminator 3
 8396 0330 49635E60 		movslq	96(%r14), %rbx
2689:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 8397              		.loc 1 2689 0 discriminator 3
 8398 0334 448D1C28 		leal	(%rax,%rbp), %r11d
2691:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3];
 8399              		.loc 1 2691 0 discriminator 3
 8400 0338 448D140F 		leal	(%rdi,%rcx), %r10d
2693:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2694:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*6];
2695:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*5];
2696:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*4];
 8401              		.loc 1 2696 0 discriminator 3
 8402 033c 29CF     		subl	%ecx, %edi
2690:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*4];
 8403              		.loc 1 2690 0 discriminator 3
 8404 033e 448D0C32 		leal	(%rdx,%rsi), %r9d
2695:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*4];
 8405              		.loc 1 2695 0 discriminator 3
 8406 0342 29F2     		subl	%esi, %edx
2694:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*5];
 8407              		.loc 1 2694 0 discriminator 3
 8408 0344 29E8     		subl	%ebp, %eax
2691:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3];
 8409              		.loc 1 2691 0 discriminator 3
 8410 0346 4D63D2   		movslq	%r10d, %r10
2689:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*5];
 8411              		.loc 1 2689 0 discriminator 3
 8412 0349 4D63DB   		movslq	%r11d, %r11
 8413              	.LVL1201:
2694:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*5];
 8414              		.loc 1 2694 0 discriminator 3
 8415 034c 4898     		cltq
2697:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2698:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp2;
 8416              		.loc 1 2698 0 discriminator 3
 8417 034e 4B8D0C13 		leaq	(%r11,%r10), %rcx
2690:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*4];
 8418              		.loc 1 2690 0 discriminator 3
 8419 0352 4D63C9   		movslq	%r9d, %r9
 8420              	.LVL1202:
2699:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
2700:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
2701:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2702:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp3;
2703:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
2704:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
2705:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.461784020));                /* (c2+c6-c4)/2 */
2706:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(1.202428084));       /* (c2+c4-c6)/2 */
 8421              		.loc 1 2706 0 discriminator 3
 8422 0355 4C89DD   		movq	%r11, %rbp
 8423 0358 4C29D5   		subq	%r10, %rbp
2707:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.411026446));       /* c6 */
2708:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS+PASS1_BITS+1);
2709:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
2710:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(1.151670509));       /* c4 */
 8424              		.loc 1 2710 0 discriminator 3
 8425 035b 4D29CB   		subq	%r9, %r11
 8426              	.LVL1203:
2695:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*4];
 8427              		.loc 1 2695 0 discriminator 3
 8428 035e 4863D2   		movslq	%edx, %rdx
 8429              	.LVL1204:
2699:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 8430              		.loc 1 2699 0 discriminator 3
 8431 0361 498D3409 		leaq	(%r9,%rcx), %rsi
2696:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8432              		.loc 1 2696 0 discriminator 3
 8433 0365 4863FF   		movslq	%edi, %rdi
 8434              	.LVL1205:
2706:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.411026446));       /* c6 */
 8435              		.loc 1 2706 0 discriminator 3
 8436 0368 4869ED7A 		imulq	$9850, %rbp, %rbp
 8436      260000
2699:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
 8437              		.loc 1 2699 0 discriminator 3
 8438 036f 4801DE   		addq	%rbx, %rsi
2702:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 8439              		.loc 1 2702 0 discriminator 3
 8440 0372 4801DB   		addq	%rbx, %rbx
 8441              	.LVL1206:
2699:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
 8442              		.loc 1 2699 0 discriminator 3
 8443 0375 4869F6CC 		imulq	$10700, %rsi, %rsi
 8443      290000
2703:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 8444              		.loc 1 2703 0 discriminator 3
 8445 037c 4829D9   		subq	%rbx, %rcx
 8446              	.LVL1207:
2704:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.461784020));                /* (c2+c6-c4)/2 */
 8447              		.loc 1 2704 0 discriminator 3
 8448 037f 4829D9   		subq	%rbx, %rcx
 8449              	.LVL1208:
2705:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(1.202428084));       /* (c2+c4-c6)/2 */
 8450              		.loc 1 2705 0 discriminator 3
 8451 0382 4869C9C7 		imulq	$3783, %rcx, %rcx
 8451      0E0000
 8452              	.LVL1209:
2699:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(z1 + tmp1 + tmp3, FIX(1.306122449)), /* 64/49 */
 8453              		.loc 1 2699 0 discriminator 3
 8454 0389 4881C600 		addq	$32768, %rsi
 8454      800000
 8455 0390 48C1FE10 		sarq	$16, %rsi
 8456 0394 418936   		movl	%esi, (%r14)
 8457              	.LVL1210:
2707:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS+PASS1_BITS+1);
 8458              		.loc 1 2707 0 discriminator 3
 8459 0397 4C89CE   		movq	%r9, %rsi
2711:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 8460              		.loc 1 2711 0 discriminator 3
 8461 039a 4929D9   		subq	%rbx, %r9
 8462              	.LVL1211:
2707:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS+PASS1_BITS+1);
 8463              		.loc 1 2707 0 discriminator 3
 8464 039d 4C29D6   		subq	%r10, %rsi
 8465              	.LVL1212:
 8466 03a0 4C69D627 		imulq	$3367, %rsi, %r10
 8466      0D0000
 8467              	.LVL1213:
2708:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 8468              		.loc 1 2708 0 discriminator 3
 8469 03a7 488D3429 		leaq	(%rcx,%rbp), %rsi
2712:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
2713:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2714:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM) DESCALE(z1 + z2, CONST_BITS+PASS1_BITS+1);
 8470              		.loc 1 2714 0 discriminator 3
 8471 03ab 4829E9   		subq	%rbp, %rcx
 8472              	.LVL1214:
2711:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 8473              		.loc 1 2711 0 discriminator 3
 8474 03ae 4D69C972 		imulq	$-7566, %r9, %r9
 8474      E2FFFF
2708:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 8475              		.loc 1 2708 0 discriminator 3
 8476 03b5 498DB432 		leaq	32768(%r10,%rsi), %rsi
 8476      00800000 
 8477 03bd 48C1FE10 		sarq	$16, %rsi
 8478 03c1 41897640 		movl	%esi, 64(%r14)
 8479              	.LVL1215:
2710:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 8480              		.loc 1 2710 0 discriminator 3
 8481 03c5 4969F3DA 		imulq	$9434, %r11, %rsi
 8481      240000
 8482              	.LVL1216:
 8483              		.loc 1 2714 0 discriminator 3
 8484 03cc 488D8C0E 		leaq	32768(%rsi,%rcx), %rcx
 8484      00800000 
2711:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 8485              		.loc 1 2711 0 discriminator 3
 8486 03d4 4901F2   		addq	%rsi, %r10
 8487              	.LVL1217:
2715:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2716:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2717:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2718:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(1.221765677));   /* (c3+c1-c5)/2 */
2719:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.222383464));   /* (c3+c5-c1)/2 */
 8488              		.loc 1 2719 0 discriminator 3
 8489 03d7 4889C6   		movq	%rax, %rsi
 8490              	.LVL1218:
2711:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 8491              		.loc 1 2711 0 discriminator 3
 8492 03da 4F8D8C11 		leaq	32768(%r9,%r10), %r9
 8492      00800000 
 8493              		.loc 1 2719 0 discriminator 3
 8494 03e2 4829D6   		subq	%rdx, %rsi
2714:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8495              		.loc 1 2714 0 discriminator 3
 8496 03e5 48C1F910 		sarq	$16, %rcx
 8497 03e9 41898EC0 		movl	%ecx, 192(%r14)
 8497      000000
2718:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.222383464));   /* (c3+c5-c1)/2 */
 8498              		.loc 1 2718 0 discriminator 3
 8499 03f0 488D0C10 		leaq	(%rax,%rdx), %rcx
2711:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.923568041)), /* c2+c6-c4 */
 8500              		.loc 1 2711 0 discriminator 3
 8501 03f4 49C1F910 		sarq	$16, %r9
 8502 03f8 45898E80 		movl	%r9d, 128(%r14)
 8502      000000
2720:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
2721:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
2722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.800824523)); /* -c1 */
 8503              		.loc 1 2722 0 discriminator 3
 8504 03ff 4801FA   		addq	%rdi, %rdx
 8505              	.LVL1219:
2723:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
2724:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp12, FIX(0.801442310));   /* c5 */
 8506              		.loc 1 2724 0 discriminator 3
 8507 0402 4801F8   		addq	%rdi, %rax
 8508              	.LVL1220:
2718:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.222383464));   /* (c3+c5-c1)/2 */
 8509              		.loc 1 2718 0 discriminator 3
 8510 0405 4C69C919 		imulq	$10009, %rcx, %r9
 8510      270000
 8511              	.LVL1221:
2719:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
 8512              		.loc 1 2719 0 discriminator 3
 8513 040c 4869CE1E 		imulq	$1822, %rsi, %rcx
 8513      070000
 8514              	.LVL1222:
2722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 8515              		.loc 1 2722 0 discriminator 3
 8516 0413 4869D260 		imulq	$-14752, %rdx, %rdx
 8516      C6FFFF
2720:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 8517              		.loc 1 2720 0 discriminator 3
 8518 041a 4C89CE   		movq	%r9, %rsi
 8519 041d 4829CE   		subq	%rcx, %rsi
 8520              	.LVL1223:
2721:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.800824523)); /* -c1 */
 8521              		.loc 1 2721 0 discriminator 3
 8522 0420 4C01C9   		addq	%r9, %rcx
 8523              	.LVL1224:
 8524              		.loc 1 2724 0 discriminator 3
 8525 0423 4869C0A5 		imulq	$6565, %rax, %rax
 8525      190000
 8526              	.LVL1225:
2725:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += tmp3;
2726:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp3 + MULTIPLY(tmp12, FIX(2.443531355));   /* c3+c1-c5 */
2727:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2728:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp0, CONST_BITS+PASS1_BITS+1);
2729:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS+1);
 8527              		.loc 1 2729 0 discriminator 3
 8528 042a 488D8C11 		leaq	32768(%rcx,%rdx), %rcx
 8528      00800000 
 8529              	.LVL1226:
2730:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
2731:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2732:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 8530              		.loc 1 2732 0 discriminator 3
 8531 0432 4983C604 		addq	$4, %r14
 8532              	.LVL1227:
2730:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 8533              		.loc 1 2730 0 discriminator 3
 8534 0436 4869FF31 		imulq	$20017, %rdi, %rdi
 8534      4E0000
 8535              	.LVL1228:
2729:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 8536              		.loc 1 2729 0 discriminator 3
 8537 043d 48C1F910 		sarq	$16, %rcx
 8538 0441 41894E5C 		movl	%ecx, 92(%r14)
2728:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS+1);
 8539              		.loc 1 2728 0 discriminator 3
 8540 0445 488DB406 		leaq	32768(%rsi,%rax), %rsi
 8540      00800000 
 8541              	.LVL1229:
2730:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 8542              		.loc 1 2730 0 discriminator 3
 8543 044d 4801F8   		addq	%rdi, %rax
 8544              	.LVL1230:
 8545 0450 488D8402 		leaq	32768(%rdx,%rax), %rax
 8545      00800000 
2728:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp1, CONST_BITS+PASS1_BITS+1);
 8546              		.loc 1 2728 0 discriminator 3
 8547 0458 48C1FE10 		sarq	$16, %rsi
 8548 045c 4189761C 		movl	%esi, 28(%r14)
 8549              	.LVL1231:
2730:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp2, CONST_BITS+PASS1_BITS+1);
 8550              		.loc 1 2730 0 discriminator 3
 8551 0460 48C1F810 		sarq	$16, %rax
 8552 0464 4189869C 		movl	%eax, 156(%r14)
 8552      000000
 8553              	.LVL1232:
2686:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 8554              		.loc 1 2686 0 discriminator 3
 8555 046b 4D39C6   		cmpq	%r8, %r14
 8556 046e 0F859CFE 		jne	.L135
 8556      FFFF
2733:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2734:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 8557              		.loc 1 2734 0
 8558 0474 5B       		popq	%rbx
 8559              		.cfi_def_cfa_offset 48
 8560              	.LVL1233:
 8561 0475 5D       		popq	%rbp
 8562              		.cfi_def_cfa_offset 40
 8563 0476 415C     		popq	%r12
 8564              		.cfi_def_cfa_offset 32
 8565 0478 415D     		popq	%r13
 8566              		.cfi_def_cfa_offset 24
 8567 047a 415E     		popq	%r14
 8568              		.cfi_def_cfa_offset 16
 8569              	.LVL1234:
 8570 047c 415F     		popq	%r15
 8571              		.cfi_def_cfa_offset 8
 8572 047e C3       		ret
 8573              		.cfi_endproc
 8574              	.LFE78:
 8576              		.section	.text.unlikely.jpeg_fdct_14x7
 8577              	.LCOLDE17:
 8578              		.section	.text.jpeg_fdct_14x7
 8579              	.LHOTE17:
 8580              		.section	.text.unlikely.jpeg_fdct_12x6,"ax",@progbits
 8581              	.LCOLDB18:
 8582              		.section	.text.jpeg_fdct_12x6,"ax",@progbits
 8583              	.LHOTB18:
 8584              		.p2align 4,,15
 8585              		.globl	jpeg_fdct_12x6
 8587              	jpeg_fdct_12x6:
 8588              	.LFB79:
2735:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2736:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2737:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
2738:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 12x6 sample block.
2739:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
2740:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 12-point FDCT in pass 1 (rows), 6-point in pass 2 (columns).
2741:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
2742:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2743:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
2744:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_12x6 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
2745:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 8589              		.loc 1 2745 0
 8590              		.cfi_startproc
 8591              	.LVL1235:
 8592 0000 4157     		pushq	%r15
 8593              		.cfi_def_cfa_offset 16
 8594              		.cfi_offset 15, -16
2746:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
2747:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
2748:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
2749:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
2750:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
2751:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
2752:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2753:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Zero 2 bottom rows of output coefficient block. */
2754:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(&data[DCTSIZE*6], SIZEOF(DCTELEM) * DCTSIZE * 2);
 8595              		.loc 1 2754 0
 8596 0002 488D87C0 		leaq	192(%rdi), %rax
 8596      000000
2745:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 8597              		.loc 1 2745 0
 8598 0009 4156     		pushq	%r14
 8599              		.cfi_def_cfa_offset 24
 8600              		.cfi_offset 14, -24
 8601 000b 4155     		pushq	%r13
 8602              		.cfi_def_cfa_offset 32
 8603              		.cfi_offset 13, -32
 8604 000d 4154     		pushq	%r12
 8605              		.cfi_def_cfa_offset 40
 8606              		.cfi_offset 12, -40
 8607 000f 4989FC   		movq	%rdi, %r12
 8608 0012 55       		pushq	%rbp
 8609              		.cfi_def_cfa_offset 48
 8610              		.cfi_offset 6, -48
 8611 0013 53       		pushq	%rbx
 8612              		.cfi_def_cfa_offset 56
 8613              		.cfi_offset 3, -56
 8614              	.LBB78:
 8615              	.LBB79:
 8616              		.loc 2 90 0
 8617 0014 488DBFC8 		leaq	200(%rdi), %rdi
 8617      000000
 8618              	.LVL1236:
 8619 001b 4889C1   		movq	%rax, %rcx
 8620              	.LBE79:
 8621              	.LBE78:
2755:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2756:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
2757:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
2758:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
2759:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 12-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/24).
2760:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2761:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2762:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 8622              		.loc 1 2762 0
 8623 001e 4D89E3   		movq	%r12, %r11
2754:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8624              		.loc 1 2754 0
 8625 0021 48894424 		movq	%rax, -24(%rsp)
 8625      E8
 8626              	.LVL1237:
 8627              	.LBB81:
 8628              	.LBB80:
 8629              		.loc 2 90 0
 8630 0026 48C747F8 		movq	$0, -8(%rdi)
 8630      00000000 
 8631 002e 31C0     		xorl	%eax, %eax
 8632              	.LVL1238:
 8633 0030 48C74730 		movq	$0, 48(%rdi)
 8633      00000000 
 8634 0038 4883E7F8 		andq	$-8, %rdi
 8635 003c 4829F9   		subq	%rdi, %rcx
 8636              	.LVL1239:
 8637 003f 83C140   		addl	$64, %ecx
 8638 0042 C1E903   		shrl	$3, %ecx
 8639 0045 F348AB   		rep stosq
 8640              	.LVL1240:
 8641 0048 89D0     		movl	%edx, %eax
 8642 004a 48897424 		movq	%rsi, -64(%rsp)
 8642      C0
 8643              	.LBE80:
 8644              	.LBE81:
 8645              		.loc 1 2762 0
 8646 004f 4C896424 		movq	%r12, -8(%rsp)
 8646      F8
 8647 0054 48894424 		movq	%rax, -16(%rsp)
 8647      F0
 8648              	.LVL1241:
 8649 0059 0F1F8000 		.p2align 4,,10
 8649      000000
 8650              		.p2align 3
 8651              	.L140:
2763:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
2764:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 8652              		.loc 1 2764 0 discriminator 3
 8653 0060 488B4424 		movq	-64(%rsp), %rax
 8653      C0
 8654 0065 4C8B5424 		movq	-16(%rsp), %r10
 8654      F0
 8655 006a 4C0310   		addq	(%rax), %r10
 8656              	.LVL1242:
2765:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2766:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2767:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[11]);
2769:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
 8657              		.loc 1 2769 0 discriminator 3
 8658 006d 450FB672 		movzbl	10(%r10), %r14d
 8658      0A
 8659 0072 410FB672 		movzbl	1(%r10), %esi
 8659      01
2770:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
2771:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
2772:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 8660              		.loc 1 2772 0 discriminator 3
 8661 0077 450FB662 		movzbl	7(%r10), %r12d
 8661      07
2770:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 8662              		.loc 1 2770 0 discriminator 3
 8663 007c 410FB64A 		movzbl	2(%r10), %ecx
 8663      02
 8664 0081 450FB66A 		movzbl	9(%r10), %r13d
 8664      09
2768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
 8665              		.loc 1 2768 0 discriminator 3
 8666 0086 450FB67A 		movzbl	11(%r10), %r15d
 8666      0B
 8667 008b 410FB602 		movzbl	(%r10), %eax
2769:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 8668              		.loc 1 2769 0 discriminator 3
 8669 008f 428D1436 		leal	(%rsi,%r14), %edx
2773:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
2774:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2775:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp5;
2776:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
2777:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
2778:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp4;
2779:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
2780:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
2781:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[11]);
2783:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[10]);
 8670              		.loc 1 2783 0 discriminator 3
 8671 0093 4429F6   		subl	%r14d, %esi
2770:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
 8672              		.loc 1 2770 0 discriminator 3
 8673 0096 894C24CC 		movl	%ecx, -52(%rsp)
 8674              		.loc 1 2783 0 discriminator 3
 8675 009a 4863F6   		movslq	%esi, %rsi
2769:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 8676              		.loc 1 2769 0 discriminator 3
 8677 009d 4863FA   		movslq	%edx, %rdi
2771:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 8678              		.loc 1 2771 0 discriminator 3
 8679 00a0 410FB652 		movzbl	3(%r10), %edx
 8679      03
2770:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
 8680              		.loc 1 2770 0 discriminator 3
 8681 00a5 468D0429 		leal	(%rcx,%r13), %r8d
2769:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[9]);
 8682              		.loc 1 2769 0 discriminator 3
 8683 00a9 48897C24 		movq	%rdi, -80(%rsp)
 8683      B0
2772:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 8684              		.loc 1 2772 0 discriminator 3
 8685 00ae 410FB67A 		movzbl	4(%r10), %edi
 8685      04
2768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
 8686              		.loc 1 2768 0 discriminator 3
 8687 00b3 428D1C38 		leal	(%rax,%r15), %ebx
2771:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 8688              		.loc 1 2771 0 discriminator 3
 8689 00b7 410FB64A 		movzbl	8(%r10), %ecx
 8689      08
2782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[10]);
 8690              		.loc 1 2782 0 discriminator 3
 8691 00bc 4429F8   		subl	%r15d, %eax
2770:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[8]);
 8692              		.loc 1 2770 0 discriminator 3
 8693 00bf 4D63C0   		movslq	%r8d, %r8
2768:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[10]);
 8694              		.loc 1 2768 0 discriminator 3
 8695 00c2 4863DB   		movslq	%ebx, %rbx
 8696              	.LVL1243:
2782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[10]);
 8697              		.loc 1 2782 0 discriminator 3
 8698 00c5 4898     		cltq
2771:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 8699              		.loc 1 2771 0 discriminator 3
 8700 00c7 895424D0 		movl	%edx, -48(%rsp)
 8701 00cb 4189D1   		movl	%edx, %r9d
2772:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 8702              		.loc 1 2772 0 discriminator 3
 8703 00ce 428D1427 		leal	(%rdi,%r12), %edx
2784:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[9]);
2785:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[8]);
2786:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[7]);
 8704              		.loc 1 2786 0 discriminator 3
 8705 00d2 4429E7   		subl	%r12d, %edi
2771:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 8706              		.loc 1 2771 0 discriminator 3
 8707 00d5 894C24D4 		movl	%ecx, -44(%rsp)
 8708 00d9 4101C9   		addl	%ecx, %r9d
 8709              		.loc 1 2786 0 discriminator 3
 8710 00dc 4863FF   		movslq	%edi, %rdi
2772:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 8711              		.loc 1 2772 0 discriminator 3
 8712 00df 4863EA   		movslq	%edx, %rbp
2773:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8713              		.loc 1 2773 0 discriminator 3
 8714 00e2 410FB652 		movzbl	5(%r10), %edx
 8714      05
2771:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[7]);
 8715              		.loc 1 2771 0 discriminator 3
 8716 00e7 4D63C9   		movslq	%r9d, %r9
 8717              	.LVL1244:
2772:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) + GETJSAMPLE(elemptr[6]);
 8718              		.loc 1 2772 0 discriminator 3
 8719 00ea 48896C24 		movq	%rbp, -72(%rsp)
 8719      B8
 8720              	.LVL1245:
2773:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8721              		.loc 1 2773 0 discriminator 3
 8722 00ef 410FB66A 		movzbl	6(%r10), %ebp
 8722      06
 8723 00f4 448D142A 		leal	(%rdx,%rbp), %r10d
 8724              	.LVL1246:
2787:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = GETJSAMPLE(elemptr[5]) - GETJSAMPLE(elemptr[6]);
 8725              		.loc 1 2787 0 discriminator 3
 8726 00f8 29EA     		subl	%ebp, %edx
 8727 00fa 4863EA   		movslq	%edx, %rbp
2788:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2789:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
2790:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 8728              		.loc 1 2790 0 discriminator 3
 8729 00fd 488B5424 		movq	-80(%rsp), %rdx
 8729      B0
 8730 0102 48035424 		addq	-72(%rsp), %rdx
 8730      B8
2773:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8731              		.loc 1 2773 0 discriminator 3
 8732 0107 4D63D2   		movslq	%r10d, %r10
 8733              	.LVL1247:
2775:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
 8734              		.loc 1 2775 0 discriminator 3
 8735 010a 4A8D0C13 		leaq	(%rbx,%r10), %rcx
2776:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
 8736              		.loc 1 2776 0 discriminator 3
 8737 010e 4C29D3   		subq	%r10, %rbx
 8738              	.LVL1248:
2779:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
 8739              		.loc 1 2779 0 discriminator 3
 8740 0111 4F8D1408 		leaq	(%r8,%r9), %r10
 8741              	.LVL1249:
2776:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
 8742              		.loc 1 2776 0 discriminator 3
 8743 0115 48895C24 		movq	%rbx, -32(%rsp)
 8743      E0
 8744              	.LVL1250:
2778:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 8745              		.loc 1 2778 0 discriminator 3
 8746 011a 488B5C24 		movq	-80(%rsp), %rbx
 8746      B0
2780:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8747              		.loc 1 2780 0 discriminator 3
 8748 011f 4D29C8   		subq	%r9, %r8
 8749              	.LVL1251:
2775:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
 8750              		.loc 1 2775 0 discriminator 3
 8751 0122 48894C24 		movq	%rcx, -40(%rsp)
 8751      D8
 8752              	.LVL1252:
 8753              		.loc 1 2790 0 discriminator 3
 8754 0127 4C8B7C24 		movq	-40(%rsp), %r15
 8754      D8
 8755              	.LVL1253:
2778:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 8756              		.loc 1 2778 0 discriminator 3
 8757 012c 482B5C24 		subq	-72(%rsp), %rbx
 8757      B8
 8758              	.LVL1254:
2791:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 12 * CENTERJSAMPLE) << PASS1_BITS);
2792:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) ((tmp13 - tmp14 - tmp15) << PASS1_BITS);
 8759              		.loc 1 2792 0 discriminator 3
 8760 0131 4C8B7424 		movq	-32(%rsp), %r14
 8760      E0
2784:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[8]);
 8761              		.loc 1 2784 0 discriminator 3
 8762 0136 8B4C24CC 		movl	-52(%rsp), %ecx
2785:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[7]);
 8763              		.loc 1 2785 0 discriminator 3
 8764 013a 448B4C24 		movl	-48(%rsp), %r9d
 8764      D0
 8765              	.LVL1255:
2790:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 12 * CENTERJSAMPLE) << PASS1_BITS);
 8766              		.loc 1 2790 0 discriminator 3
 8767 013f 4C01FA   		addq	%r15, %rdx
 8768              	.LVL1256:
2785:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[7]);
 8769              		.loc 1 2785 0 discriminator 3
 8770 0142 442B4C24 		subl	-44(%rsp), %r9d
 8770      D4
 8771              	.LVL1257:
2790:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 12 * CENTERJSAMPLE) << PASS1_BITS);
 8772              		.loc 1 2790 0 discriminator 3
 8773 0147 498D9412 		leaq	-1536(%r10,%rdx), %rdx
 8773      00FAFFFF 
2784:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[8]);
 8774              		.loc 1 2784 0 discriminator 3
 8775 014f 4429E9   		subl	%r13d, %ecx
2790:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 12 * CENTERJSAMPLE) << PASS1_BITS);
 8776              		.loc 1 2790 0 discriminator 3
 8777 0152 48C1E202 		salq	$2, %rdx
2784:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[8]);
 8778              		.loc 1 2784 0 discriminator 3
 8779 0156 4863C9   		movslq	%ecx, %rcx
 8780              	.LVL1258:
2790:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 12 * CENTERJSAMPLE) << PASS1_BITS);
 8781              		.loc 1 2790 0 discriminator 3
 8782 0159 418913   		movl	%edx, (%r11)
 8783              	.LVL1259:
 8784              		.loc 1 2792 0 discriminator 3
 8785 015c 4C89F2   		movq	%r14, %rdx
2785:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[7]);
 8786              		.loc 1 2785 0 discriminator 3
 8787 015f 4D63C9   		movslq	%r9d, %r9
 8788              	.LVL1260:
 8789              		.loc 1 2792 0 discriminator 3
 8790 0162 4829DA   		subq	%rbx, %rdx
2793:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
2794:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.224744871)), /* c4 */
2795:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2796:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 8791              		.loc 1 2796 0 discriminator 3
 8792 0165 4C29C3   		subq	%r8, %rbx
 8793              	.LVL1261:
2792:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 8794              		.loc 1 2792 0 discriminator 3
 8795 0168 4C29C2   		subq	%r8, %rdx
 8796 016b 48C1E202 		salq	$2, %rdx
 8797 016f 41895318 		movl	%edx, 24(%r11)
2793:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 8798              		.loc 1 2793 0 discriminator 3
 8799 0173 4C89FA   		movq	%r15, %rdx
 8800 0176 4C29D2   		subq	%r10, %rdx
2797:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
2798:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2799:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2800:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2801:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2802:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp1 + tmp4, FIX_0_541196100);    /* c9 */
2803:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX_0_765366865);   /* c3-c9 */
2804:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX_1_847759065);   /* c3+c9 */
2805:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.121971054));   /* c5 */
 8801              		.loc 1 2805 0 discriminator 3
 8802 0179 4C8D1408 		leaq	(%rax,%rcx), %r10
 8803              	.LVL1262:
2793:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.224744871)), /* c4 */
 8804              		.loc 1 2793 0 discriminator 3
 8805 017d 4869D231 		imulq	$10033, %rdx, %rdx
 8805      270000
 8806              		.loc 1 2805 0 discriminator 3
 8807 0184 4D69D2E7 		imulq	$9191, %r10, %r10
 8807      230000
2793:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.224744871)), /* c4 */
 8808              		.loc 1 2793 0 discriminator 3
 8809 018b 4881C200 		addq	$1024, %rdx
 8809      040000
 8810 0192 48C1FA0B 		sarq	$11, %rdx
 8811 0196 41895310 		movl	%edx, 16(%r11)
2796:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 8812              		.loc 1 2796 0 discriminator 3
 8813 019a 4C89F2   		movq	%r14, %rdx
 8814 019d 4C01C2   		addq	%r8, %rdx
2806:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.860918669));   /* c7 */
 8815              		.loc 1 2806 0 discriminator 3
 8816 01a0 4E8D0408 		leaq	(%rax,%r9), %r8
 8817              	.LVL1263:
2796:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 8818              		.loc 1 2796 0 discriminator 3
 8819 01a4 4869D2B6 		imulq	$11190, %rdx, %rdx
 8819      2B0000
 8820              		.loc 1 2806 0 discriminator 3
 8821 01ab 4D69C08D 		imulq	$7053, %r8, %r8
 8821      1B0000
2796:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 8822              		.loc 1 2796 0 discriminator 3
 8823 01b2 488D941A 		leaq	1024(%rdx,%rbx), %rdx
 8823      00040000 
2807:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.580774953)) /* c5+c7-c1 */
2808:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.184591911));        /* c11 */
2809:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp2 + tmp3, - FIX(0.184591911)); /* -c11 */
2810:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.339493912)) /* c1+c5-c11 */
2811:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.860918669));        /* c7 */
2812:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp11 - tmp14 + MULTIPLY(tmp3, FIX(0.725788011)) /* c1+c11-c7 */
2813:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp5, FIX(1.121971054));        /* c5 */
2814:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp15 + MULTIPLY(tmp0 - tmp3, FIX(1.306562965)) /* c3 */
2815:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp2 + tmp5, FIX_0_541196100);  /* c9 */
2816:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2817:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp10, CONST_BITS-PASS1_BITS);
 8824              		.loc 1 2817 0 discriminator 3
 8825 01ba 4B8D1C02 		leaq	(%r10,%r8), %rbx
2796:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp14 - tmp15 + MULTIPLY(tmp13 + tmp15, FIX(1.366025404)), /* c2 */
 8826              		.loc 1 2796 0 discriminator 3
 8827 01be 48C1FA0B 		sarq	$11, %rdx
 8828 01c2 41895308 		movl	%edx, 8(%r11)
2802:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX_0_765366865);   /* c3-c9 */
 8829              		.loc 1 2802 0 discriminator 3
 8830 01c6 488D143E 		leaq	(%rsi,%rdi), %rdx
2803:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX_1_847759065);   /* c3+c9 */
 8831              		.loc 1 2803 0 discriminator 3
 8832 01ca 4869F67E 		imulq	$6270, %rsi, %rsi
 8832      180000
 8833              	.LVL1264:
2802:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX_0_765366865);   /* c3-c9 */
 8834              		.loc 1 2802 0 discriminator 3
 8835 01d1 4869D251 		imulq	$4433, %rdx, %rdx
 8835      110000
 8836              	.LVL1265:
2804:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.121971054));   /* c5 */
 8837              		.loc 1 2804 0 discriminator 3
 8838 01d8 4869FFDF 		imulq	$-15137, %rdi, %rdi
 8838      C4FFFF
 8839              	.LVL1266:
2803:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX_1_847759065);   /* c3+c9 */
 8840              		.loc 1 2803 0 discriminator 3
 8841 01df 4801D6   		addq	%rdx, %rsi
 8842              	.LVL1267:
2804:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.121971054));   /* c5 */
 8843              		.loc 1 2804 0 discriminator 3
 8844 01e2 4801D7   		addq	%rdx, %rdi
 8845              	.LVL1268:
2809:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.339493912)) /* c1+c5-c11 */
 8846              		.loc 1 2809 0 discriminator 3
 8847 01e5 4A8D1409 		leaq	(%rcx,%r9), %rdx
 8848              		.loc 1 2817 0 discriminator 3
 8849 01e9 4C8D2433 		leaq	(%rbx,%rsi), %r12
2809:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.339493912)) /* c1+c5-c11 */
 8850              		.loc 1 2809 0 discriminator 3
 8851 01ed 4869D218 		imulq	$-1512, %rdx, %rdx
 8851      FAFFFF
 8852              	.LVL1269:
2818:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
2820:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
2821:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2822:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 8853              		.loc 1 2822 0 discriminator 3
 8854 01f4 4983C320 		addq	$32, %r11
 8855              	.LVL1270:
 8856 01f8 48834424 		addq	$8, -64(%rsp)
 8856      C008
2817:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 8857              		.loc 1 2817 0 discriminator 3
 8858 01fe 4869D86A 		imulq	$-4758, %rax, %rbx
 8858      EDFFFF
 8859              	.LVL1271:
2818:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 8860              		.loc 1 2818 0 discriminator 3
 8861 0205 4C29C8   		subq	%r9, %rax
 8862              	.LVL1272:
 8863 0208 4869C0CF 		imulq	$10703, %rax, %rax
 8863      290000
2817:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 8864              		.loc 1 2817 0 discriminator 3
 8865 020f 4C01E3   		addq	%r12, %rbx
 8866              	.LVL1273:
 8867 0212 4C69E5E8 		imulq	$1512, %rbp, %r12
 8867      050000
2818:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 8868              		.loc 1 2818 0 discriminator 3
 8869 0219 4801F8   		addq	%rdi, %rax
2820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8870              		.loc 1 2820 0 discriminator 3
 8871 021c 4D69C93A 		imulq	$5946, %r9, %r9
 8871      170000
 8872              	.LVL1274:
2817:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 8873              		.loc 1 2817 0 discriminator 3
 8874 0223 4A8D9C23 		leaq	1024(%rbx,%r12), %rbx
 8874      00040000 
 8875 022b 48C1FB0B 		sarq	$11, %rbx
 8876 022f 41895BE4 		movl	%ebx, -28(%r11)
2818:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp11, CONST_BITS-PASS1_BITS);
 8877              		.loc 1 2818 0 discriminator 3
 8878 0233 488D1C29 		leaq	(%rcx,%rbp), %rbx
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 8879              		.loc 1 2819 0 discriminator 3
 8880 0237 4869C923 		imulq	$-19165, %rcx, %rcx
 8880      B5FFFF
 8881              	.LVL1275:
2818:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 8882              		.loc 1 2818 0 discriminator 3
 8883 023e 4869DBAF 		imulq	$-4433, %rbx, %rbx
 8883      EEFFFF
 8884 0245 488D8418 		leaq	1024(%rax,%rbx), %rax
 8884      00040000 
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 8885              		.loc 1 2819 0 discriminator 3
 8886 024d 4889D3   		movq	%rdx, %rbx
2820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8887              		.loc 1 2820 0 discriminator 3
 8888 0250 4829F2   		subq	%rsi, %rdx
 8889              	.LVL1276:
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 8890              		.loc 1 2819 0 discriminator 3
 8891 0253 4829FB   		subq	%rdi, %rbx
 8892              	.LVL1277:
2820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8893              		.loc 1 2820 0 discriminator 3
 8894 0256 4C01CA   		addq	%r9, %rdx
2818:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 8895              		.loc 1 2818 0 discriminator 3
 8896 0259 48C1F80B 		sarq	$11, %rax
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 8897              		.loc 1 2819 0 discriminator 3
 8898 025d 4801D9   		addq	%rbx, %rcx
 8899              	.LVL1278:
2818:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp12, CONST_BITS-PASS1_BITS);
 8900              		.loc 1 2818 0 discriminator 3
 8901 0260 418943EC 		movl	%eax, -20(%r11)
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 8902              		.loc 1 2819 0 discriminator 3
 8903 0264 4869C58D 		imulq	$7053, %rbp, %rax
 8903      1B0000
 8904              	.LVL1279:
2820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8905              		.loc 1 2820 0 discriminator 3
 8906 026b 4869ED19 		imulq	$-9191, %rbp, %rbp
 8906      DCFFFF
 8907              	.LVL1280:
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 8908              		.loc 1 2819 0 discriminator 3
 8909 0272 4801C1   		addq	%rax, %rcx
 8910 0275 498D840A 		leaq	1024(%r10,%rcx), %rax
 8910      00040000 
 8911              	.LVL1281:
2820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8912              		.loc 1 2820 0 discriminator 3
 8913 027d 4801D5   		addq	%rdx, %rbp
 8914              	.LVL1282:
2819:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp13, CONST_BITS-PASS1_BITS);
 8915              		.loc 1 2819 0 discriminator 3
 8916 0280 48C1F80B 		sarq	$11, %rax
 8917 0284 418943F4 		movl	%eax, -12(%r11)
2820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8918              		.loc 1 2820 0 discriminator 3
 8919 0288 498D8428 		leaq	1024(%r8,%rbp), %rax
 8919      00040000 
 8920 0290 48C1F80B 		sarq	$11, %rax
 8921 0294 418943FC 		movl	%eax, -4(%r11)
 8922              	.LVL1283:
2763:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 8923              		.loc 1 2763 0 discriminator 3
 8924 0298 4C395C24 		cmpq	%r11, -24(%rsp)
 8924      E8
 8925 029d 0F85BDFD 		jne	.L140
 8925      FFFF
 8926 02a3 4C8B6424 		movq	-8(%rsp), %r12
 8926      F8
 8927 02a8 498D7C24 		leaq	32(%r12), %rdi
 8927      20
 8928              	.LVL1284:
 8929 02ad 0F1F00   		.p2align 4,,10
 8930              		.p2align 3
 8931              	.L141:
2823:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2824:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2825:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
2826:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
2827:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
2828:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/12)*(8/6) = 8/9, which we
2829:fltk-1.3.4-1/jpeg/jfdctint.c ****    * partially fold into the constant multipliers and final shifting:
2830:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 6-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/12) * 16/9.
2831:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2832:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2833:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
2834:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
2835:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2836:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*5];
2838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
2839:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 8932              		.loc 1 2839 0 discriminator 3
 8933 02b0 458B4C24 		movl	96(%r12), %r9d
 8933      60
2837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 8934              		.loc 1 2837 0 discriminator 3
 8935 02b5 418B0424 		movl	(%r12), %eax
2840:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2841:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp2;
2842:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
2843:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*5];
2845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
2846:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
2847:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2848:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
2849:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
2850:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2851:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
2852:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
2853:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2854:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
2855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
2856:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2857:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2858:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2859:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2860:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp0 + tmp2, FIX(0.650711829));             /* c5 */
2861:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2862:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
2863:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
2864:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2865:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
2866:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
2867:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2868:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
2869:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
2870:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
2871:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2872:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 8936              		.loc 1 2872 0 discriminator 3
 8937 02b9 4983C404 		addq	$4, %r12
 8938              	.LVL1285:
2837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 8939              		.loc 1 2837 0 discriminator 3
 8940 02bd 418BAC24 		movl	156(%r12), %ebp
 8940      9C000000 
2839:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8941              		.loc 1 2839 0 discriminator 3
 8942 02c5 418B5424 		movl	60(%r12), %edx
 8942      3C
2838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 8943              		.loc 1 2838 0 discriminator 3
 8944 02ca 418B7424 		movl	28(%r12), %esi
 8944      1C
 8945 02cf 418B5C24 		movl	124(%r12), %ebx
 8945      7C
2839:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8946              		.loc 1 2839 0 discriminator 3
 8947 02d4 468D1C0A 		leal	(%rdx,%r9), %r11d
2837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 8948              		.loc 1 2837 0 discriminator 3
 8949 02d8 448D0428 		leal	(%rax,%rbp), %r8d
2846:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8950              		.loc 1 2846 0 discriminator 3
 8951 02dc 4429CA   		subl	%r9d, %edx
2838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 8952              		.loc 1 2838 0 discriminator 3
 8953 02df 448D141E 		leal	(%rsi,%rbx), %r10d
2844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
 8954              		.loc 1 2844 0 discriminator 3
 8955 02e3 29E8     		subl	%ebp, %eax
2845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
 8956              		.loc 1 2845 0 discriminator 3
 8957 02e5 29DE     		subl	%ebx, %esi
2837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 8958              		.loc 1 2837 0 discriminator 3
 8959 02e7 4D63C0   		movslq	%r8d, %r8
 8960              	.LVL1286:
2839:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8961              		.loc 1 2839 0 discriminator 3
 8962 02ea 4D63DB   		movslq	%r11d, %r11
2844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
 8963              		.loc 1 2844 0 discriminator 3
 8964 02ed 4898     		cltq
2841:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 8965              		.loc 1 2841 0 discriminator 3
 8966 02ef 4B8D0C18 		leaq	(%r8,%r11), %rcx
2838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 8967              		.loc 1 2838 0 discriminator 3
 8968 02f3 4D63D2   		movslq	%r10d, %r10
 8969              	.LVL1287:
2851:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
 8970              		.loc 1 2851 0 discriminator 3
 8971 02f6 4D29D8   		subq	%r11, %r8
 8972              	.LVL1288:
 8973 02f9 4D69C0AD 		imulq	$17837, %r8, %r8
 8973      450000
 8974              	.LVL1289:
2845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
 8975              		.loc 1 2845 0 discriminator 3
 8976 0300 4863F6   		movslq	%esi, %rsi
 8977              	.LVL1290:
2846:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8978              		.loc 1 2846 0 discriminator 3
 8979 0303 4863D2   		movslq	%edx, %rdx
 8980              	.LVL1291:
2848:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 8981              		.loc 1 2848 0 discriminator 3
 8982 0306 4D8D0C0A 		leaq	(%r10,%rcx), %r9
2854:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
 8983              		.loc 1 2854 0 discriminator 3
 8984 030a 4C29D1   		subq	%r10, %rcx
 8985              	.LVL1292:
 8986 030d 4C29D1   		subq	%r10, %rcx
 8987 0310 4869C93A 		imulq	$10298, %rcx, %rcx
 8987      280000
2851:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
 8988              		.loc 1 2851 0 discriminator 3
 8989 0317 4981C000 		addq	$32768, %r8
 8989      800000
 8990 031e 49C1F810 		sarq	$16, %r8
 8991 0322 45894424 		movl	%r8d, 60(%r12)
 8991      3C
2862:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 8992              		.loc 1 2862 0 discriminator 3
 8993 0327 4C8D0430 		leaq	(%rax,%rsi), %r8
2854:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
 8994              		.loc 1 2854 0 discriminator 3
 8995 032b 4881C100 		addq	$32768, %rcx
 8995      800000
 8996 0332 48C1F910 		sarq	$16, %rcx
 8997 0336 41894C24 		movl	%ecx, 124(%r12)
 8997      7C
2860:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 8998              		.loc 1 2860 0 discriminator 3
 8999 033b 488D0C10 		leaq	(%rax,%rdx), %rcx
2865:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 9000              		.loc 1 2865 0 discriminator 3
 9001 033f 4829F0   		subq	%rsi, %rax
 9002              	.LVL1293:
 9003 0342 4829D0   		subq	%rdx, %rax
2868:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 9004              		.loc 1 2868 0 discriminator 3
 9005 0345 4829F2   		subq	%rsi, %rdx
 9006              	.LVL1294:
2865:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 9007              		.loc 1 2865 0 discriminator 3
 9008 0348 4869C0E4 		imulq	$14564, %rax, %rax
 9008      380000
2860:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9009              		.loc 1 2860 0 discriminator 3
 9010 034f 4869C9D3 		imulq	$5331, %rcx, %rcx
 9010      140000
 9011              	.LVL1295:
2862:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 9012              		.loc 1 2862 0 discriminator 3
 9013 0356 4D69C0E4 		imulq	$14564, %r8, %r8
 9013      380000
2865:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 9014              		.loc 1 2865 0 discriminator 3
 9015 035d 48050080 		addq	$32768, %rax
 9015      0000
 9016 0363 48C1F810 		sarq	$16, %rax
2868:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 9017              		.loc 1 2868 0 discriminator 3
 9018 0367 4869D2E4 		imulq	$14564, %rdx, %rdx
 9018      380000
2865:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 9019              		.loc 1 2865 0 discriminator 3
 9020 036e 41894424 		movl	%eax, 92(%r12)
 9020      5C
2862:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 9021              		.loc 1 2862 0 discriminator 3
 9022 0373 4E8D8401 		leaq	32768(%rcx,%r8), %r8
 9022      00800000 
2848:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 9023              		.loc 1 2848 0 discriminator 3
 9024 037b 4D69C9E4 		imulq	$14564, %r9, %r9
 9024      380000
2862:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 9025              		.loc 1 2862 0 discriminator 3
 9026 0382 49C1F810 		sarq	$16, %r8
 9027 0386 45894424 		movl	%r8d, 28(%r12)
 9027      1C
2868:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 9028              		.loc 1 2868 0 discriminator 3
 9029 038b 488D8411 		leaq	32768(%rcx,%rdx), %rax
 9029      00800000 
2848:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 9030              		.loc 1 2848 0 discriminator 3
 9031 0393 4981C100 		addq	$32768, %r9
 9031      800000
 9032 039a 49C1F910 		sarq	$16, %r9
2868:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 9033              		.loc 1 2868 0 discriminator 3
 9034 039e 48C1F810 		sarq	$16, %rax
2848:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 9035              		.loc 1 2848 0 discriminator 3
 9036 03a2 45894C24 		movl	%r9d, -4(%r12)
 9036      FC
 9037              	.LVL1296:
2868:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 9038              		.loc 1 2868 0 discriminator 3
 9039 03a7 41898424 		movl	%eax, 156(%r12)
 9039      9C000000 
 9040              	.LVL1297:
2834:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 9041              		.loc 1 2834 0 discriminator 3
 9042 03af 4939FC   		cmpq	%rdi, %r12
 9043 03b2 0F85F8FE 		jne	.L141
 9043      FFFF
2873:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2874:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 9044              		.loc 1 2874 0
 9045 03b8 5B       		popq	%rbx
 9046              		.cfi_def_cfa_offset 48
 9047              	.LVL1298:
 9048 03b9 5D       		popq	%rbp
 9049              		.cfi_def_cfa_offset 40
 9050 03ba 415C     		popq	%r12
 9051              		.cfi_def_cfa_offset 32
 9052              	.LVL1299:
 9053 03bc 415D     		popq	%r13
 9054              		.cfi_def_cfa_offset 24
 9055 03be 415E     		popq	%r14
 9056              		.cfi_def_cfa_offset 16
 9057 03c0 415F     		popq	%r15
 9058              		.cfi_def_cfa_offset 8
 9059 03c2 C3       		ret
 9060              		.cfi_endproc
 9061              	.LFE79:
 9063              		.section	.text.unlikely.jpeg_fdct_12x6
 9064              	.LCOLDE18:
 9065              		.section	.text.jpeg_fdct_12x6
 9066              	.LHOTE18:
 9067              		.section	.text.unlikely.jpeg_fdct_10x5,"ax",@progbits
 9068              	.LCOLDB19:
 9069              		.section	.text.jpeg_fdct_10x5,"ax",@progbits
 9070              	.LHOTB19:
 9071              		.p2align 4,,15
 9072              		.globl	jpeg_fdct_10x5
 9074              	jpeg_fdct_10x5:
 9075              	.LFB80:
2875:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2876:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2877:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
2878:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 10x5 sample block.
2879:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
2880:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 10-point FDCT in pass 1 (rows), 5-point in pass 2 (columns).
2881:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
2882:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2883:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
2884:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_10x5 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
2885:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 9076              		.loc 1 2885 0
 9077              		.cfi_startproc
 9078              	.LVL1300:
 9079 0000 4157     		pushq	%r15
 9080              		.cfi_def_cfa_offset 16
 9081              		.cfi_offset 15, -16
2886:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
2887:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
2888:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
2889:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
2890:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
2891:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
2892:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2893:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Zero 3 bottom rows of output coefficient block. */
2894:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(&data[DCTSIZE*5], SIZEOF(DCTELEM) * DCTSIZE * 3);
 9082              		.loc 1 2894 0
 9083 0002 488D87A0 		leaq	160(%rdi), %rax
 9083      000000
2885:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 9084              		.loc 1 2885 0
 9085 0009 4156     		pushq	%r14
 9086              		.cfi_def_cfa_offset 24
 9087              		.cfi_offset 14, -24
 9088 000b 4155     		pushq	%r13
 9089              		.cfi_def_cfa_offset 32
 9090              		.cfi_offset 13, -32
 9091 000d 4154     		pushq	%r12
 9092              		.cfi_def_cfa_offset 40
 9093              		.cfi_offset 12, -40
 9094 000f 55       		pushq	%rbp
 9095              		.cfi_def_cfa_offset 48
 9096              		.cfi_offset 6, -48
 9097 0010 53       		pushq	%rbx
 9098              		.cfi_def_cfa_offset 56
 9099              		.cfi_offset 3, -56
2885:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 9100              		.loc 1 2885 0
 9101 0011 4889FD   		movq	%rdi, %rbp
 9102              	.LBB82:
 9103              	.LBB83:
 9104              		.loc 2 90 0
 9105 0014 488DBFA8 		leaq	168(%rdi), %rdi
 9105      000000
 9106              	.LVL1301:
 9107 001b 4889C1   		movq	%rax, %rcx
 9108              	.LBE83:
 9109              	.LBE82:
2895:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2896:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
2897:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
2898:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
2899:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 10-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/20).
2900:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2901:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2902:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 9110              		.loc 1 2902 0
 9111 001e 4989EC   		movq	%rbp, %r12
2894:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9112              		.loc 1 2894 0
 9113 0021 48894424 		movq	%rax, -24(%rsp)
 9113      E8
 9114              	.LVL1302:
 9115              	.LBB85:
 9116              	.LBB84:
 9117              		.loc 2 90 0
 9118 0026 48C747F8 		movq	$0, -8(%rdi)
 9118      00000000 
 9119 002e 31C0     		xorl	%eax, %eax
 9120              	.LVL1303:
 9121 0030 48C74750 		movq	$0, 80(%rdi)
 9121      00000000 
 9122 0038 4883E7F8 		andq	$-8, %rdi
 9123 003c 4829F9   		subq	%rdi, %rcx
 9124              	.LVL1304:
 9125 003f 83C160   		addl	$96, %ecx
 9126 0042 C1E903   		shrl	$3, %ecx
 9127 0045 F348AB   		rep stosq
 9128              	.LVL1305:
 9129 0048 89D0     		movl	%edx, %eax
 9130 004a 48897424 		movq	%rsi, -48(%rsp)
 9130      D0
 9131              	.LBE84:
 9132              	.LBE85:
 9133              		.loc 1 2902 0
 9134 004f 48896C24 		movq	%rbp, -8(%rsp)
 9134      F8
 9135 0054 48894424 		movq	%rax, -16(%rsp)
 9135      F0
 9136              	.LVL1306:
 9137              	.L146:
2903:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 5; ctr++) {
2904:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 9138              		.loc 1 2904 0 discriminator 3
 9139 0059 488B4424 		movq	-48(%rsp), %rax
 9139      D0
 9140 005e 4C8B4C24 		movq	-16(%rsp), %r9
 9140      F0
 9141 0063 4C0308   		addq	(%rax), %r9
 9142              	.LVL1307:
2905:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2906:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2907:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2908:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[9]);
2909:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
2910:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
 9143              		.loc 1 2910 0 discriminator 3
 9144 0066 410FB651 		movzbl	2(%r9), %edx
 9144      02
 9145 006b 410FB669 		movzbl	7(%r9), %ebp
 9145      07
2911:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
2912:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
 9146              		.loc 1 2912 0 discriminator 3
 9147 0070 450FB659 		movzbl	5(%r9), %r11d
 9147      05
2908:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
 9148              		.loc 1 2908 0 discriminator 3
 9149 0075 410FB601 		movzbl	(%r9), %eax
 9150 0079 450FB671 		movzbl	9(%r9), %r14d
 9150      09
2909:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
 9151              		.loc 1 2909 0 discriminator 3
 9152 007e 410FB679 		movzbl	1(%r9), %edi
 9152      01
 9153 0083 450FB669 		movzbl	8(%r9), %r13d
 9153      08
2910:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
 9154              		.loc 1 2910 0 discriminator 3
 9155 0088 448D042A 		leal	(%rdx,%rbp), %r8d
2913:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2914:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
2915:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
2916:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
2917:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
2918:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2919:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[9]);
2920:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[8]);
2921:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[7]);
 9156              		.loc 1 2921 0 discriminator 3
 9157 008c 29EA     		subl	%ebp, %edx
 9158 008e 4863D2   		movslq	%edx, %rdx
2910:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
 9159              		.loc 1 2910 0 discriminator 3
 9160 0091 4963D8   		movslq	%r8d, %rbx
2912:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9161              		.loc 1 2912 0 discriminator 3
 9162 0094 450FB641 		movzbl	4(%r9), %r8d
 9162      04
2908:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
 9163              		.loc 1 2908 0 discriminator 3
 9164 0099 428D3430 		leal	(%rax,%r14), %esi
2910:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[6]);
 9165              		.loc 1 2910 0 discriminator 3
 9166 009d 48895C24 		movq	%rbx, -40(%rsp)
 9166      D8
2911:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
 9167              		.loc 1 2911 0 discriminator 3
 9168 00a2 410FB659 		movzbl	3(%r9), %ebx
 9168      03
2909:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
 9169              		.loc 1 2909 0 discriminator 3
 9170 00a7 428D0C2F 		leal	(%rdi,%r13), %ecx
2908:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[8]);
 9171              		.loc 1 2908 0 discriminator 3
 9172 00ab 4863F6   		movslq	%esi, %rsi
 9173              	.LVL1308:
2919:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[8]);
 9174              		.loc 1 2919 0 discriminator 3
 9175 00ae 4429F0   		subl	%r14d, %eax
2920:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[7]);
 9176              		.loc 1 2920 0 discriminator 3
 9177 00b1 4429EF   		subl	%r13d, %edi
2909:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[7]);
 9178              		.loc 1 2909 0 discriminator 3
 9179 00b4 4863C9   		movslq	%ecx, %rcx
 9180              	.LVL1309:
2919:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[8]);
 9181              		.loc 1 2919 0 discriminator 3
 9182 00b7 4898     		cltq
2920:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[7]);
 9183              		.loc 1 2920 0 discriminator 3
 9184 00b9 4863FF   		movslq	%edi, %rdi
2911:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
 9185              		.loc 1 2911 0 discriminator 3
 9186 00bc 4189DF   		movl	%ebx, %r15d
 9187 00bf 410FB659 		movzbl	6(%r9), %ebx
 9187      06
 9188 00c4 44897C24 		movl	%r15d, -28(%rsp)
 9188      E4
 9189 00c9 458D141F 		leal	(%r15,%rbx), %r10d
2912:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9190              		.loc 1 2912 0 discriminator 3
 9191 00cd 478D3C18 		leal	(%r8,%r11), %r15d
2922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[6]);
2923:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[5]);
 9192              		.loc 1 2923 0 discriminator 3
 9193 00d1 4529D8   		subl	%r11d, %r8d
 9194 00d4 4D63C0   		movslq	%r8d, %r8
2911:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) + GETJSAMPLE(elemptr[5]);
 9195              		.loc 1 2911 0 discriminator 3
 9196 00d7 4D63D2   		movslq	%r10d, %r10
 9197              	.LVL1310:
2912:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9198              		.loc 1 2912 0 discriminator 3
 9199 00da 4D63FF   		movslq	%r15d, %r15
 9200              	.LVL1311:
2914:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
 9201              		.loc 1 2914 0 discriminator 3
 9202 00dd 4E8D0C3E 		leaq	(%rsi,%r15), %r9
 9203              	.LVL1312:
2915:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
 9204              		.loc 1 2915 0 discriminator 3
 9205 00e1 4C29FE   		subq	%r15, %rsi
 9206              	.LVL1313:
2916:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
 9207              		.loc 1 2916 0 discriminator 3
 9208 00e4 4E8D3C11 		leaq	(%rcx,%r10), %r15
 9209              	.LVL1314:
2917:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9210              		.loc 1 2917 0 discriminator 3
 9211 00e8 4C29D1   		subq	%r10, %rcx
 9212              	.LVL1315:
2922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[5]);
 9213              		.loc 1 2922 0 discriminator 3
 9214 00eb 448B5424 		movl	-28(%rsp), %r10d
 9214      E4
 9215              	.LVL1316:
2924:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2925:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
2926:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 9216              		.loc 1 2926 0 discriminator 3
 9217 00f0 4F8D1C39 		leaq	(%r9,%r15), %r11
 9218              	.LVL1317:
2922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[5]);
 9219              		.loc 1 2922 0 discriminator 3
 9220 00f4 4129DA   		subl	%ebx, %r10d
 9221              	.LVL1318:
 9222              		.loc 1 2926 0 discriminator 3
 9223 00f7 488B5C24 		movq	-40(%rsp), %rbx
 9223      D8
 9224              	.LVL1319:
2922:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = GETJSAMPLE(elemptr[4]) - GETJSAMPLE(elemptr[5]);
 9225              		.loc 1 2922 0 discriminator 3
 9226 00fc 4D63D2   		movslq	%r10d, %r10
 9227              	.LVL1320:
 9228              		.loc 1 2926 0 discriminator 3
 9229 00ff 4E8D9C1B 		leaq	-1280(%rbx,%r11), %r11
 9229      00FBFFFF 
 9230 0107 49C1E302 		salq	$2, %r11
 9231 010b 45891C24 		movl	%r11d, (%r12)
 9232              	.LVL1321:
2927:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 + tmp12 - 10 * CENTERJSAMPLE) << PASS1_BITS);
2928:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp12;
 9233              		.loc 1 2928 0 discriminator 3
 9234 010f 4C8D1C1B 		leaq	(%rbx,%rbx), %r11
 9235              	.LVL1322:
2929:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 9236              		.loc 1 2929 0 discriminator 3
 9237 0113 4D29D9   		subq	%r11, %r9
 9238              	.LVL1323:
 9239 0116 4D29DF   		subq	%r11, %r15
 9240              	.LVL1324:
 9241 0119 4D69C99D 		imulq	$9373, %r9, %r9
 9241      240000
 9242 0120 4D69FF04 		imulq	$-3580, %r15, %r15
 9242      F2FFFF
2930:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.144122806)) - /* c4 */
2931:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX(0.437016024)),  /* c8 */
2932:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2933:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp13 + tmp14, FIX(0.831253876));    /* c6 */
2934:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
2935:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
2936:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2937:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
2938:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
2939:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2940:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2941:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2942:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2943:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
2944:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 - tmp3;
2945:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) ((tmp10 - tmp11 - tmp2) << PASS1_BITS);
2946:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 <<= CONST_BITS;
2947:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 9243              		.loc 1 2947 0 discriminator 3
 9244 0127 4C69D8B3 		imulq	$11443, %rax, %r11
 9244      2C0000
 9245              	.LVL1325:
2929:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 9246              		.loc 1 2929 0 discriminator 3
 9247 012e 4F8D8C39 		leaq	1024(%r9,%r15), %r9
 9247      00040000 
 9248 0136 49C1F90B 		sarq	$11, %r9
 9249 013a 45894C24 		movl	%r9d, 16(%r12)
 9249      10
2933:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 9250              		.loc 1 2933 0 discriminator 3
 9251 013f 4C8D0C0E 		leaq	(%rsi,%rcx), %r9
2934:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
 9252              		.loc 1 2934 0 discriminator 3
 9253 0143 4869F671 		imulq	$4209, %rsi, %rsi
 9253      100000
 9254              	.LVL1326:
2933:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 9255              		.loc 1 2933 0 discriminator 3
 9256 014a 4D69C99A 		imulq	$6810, %r9, %r9
 9256      1A0000
 9257              	.LVL1327:
2937:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 9258              		.loc 1 2937 0 discriminator 3
 9259 0151 4869C95C 		imulq	$-17828, %rcx, %rcx
 9259      BAFFFF
 9260              	.LVL1328:
2934:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
 9261              		.loc 1 2934 0 discriminator 3
 9262 0158 498DB431 		leaq	1024(%r9,%rsi), %rsi
 9262      00040000 
2937:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 9263              		.loc 1 2937 0 discriminator 3
 9264 0160 498D8C09 		leaq	1024(%r9,%rcx), %rcx
 9264      00040000 
2934:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.513743148)),  /* c2-c6 */
 9265              		.loc 1 2934 0 discriminator 3
 9266 0168 48C1FE0B 		sarq	$11, %rsi
 9267 016c 41897424 		movl	%esi, 8(%r12)
 9267      08
2937:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 9268              		.loc 1 2937 0 discriminator 3
 9269 0171 48C1F90B 		sarq	$11, %rcx
2943:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 - tmp3;
 9270              		.loc 1 2943 0 discriminator 3
 9271 0175 4A8D3400 		leaq	(%rax,%r8), %rsi
 9272              	.LVL1329:
2937:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.176250899)),  /* c2+c6 */
 9273              		.loc 1 2937 0 discriminator 3
 9274 0179 41894C24 		movl	%ecx, 24(%r12)
 9274      18
2944:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) ((tmp10 - tmp11 - tmp2) << PASS1_BITS);
 9275              		.loc 1 2944 0 discriminator 3
 9276 017e 4889F9   		movq	%rdi, %rcx
 9277 0181 4C29D1   		subq	%r10, %rcx
 9278              	.LVL1330:
2945:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 <<= CONST_BITS;
 9279              		.loc 1 2945 0 discriminator 3
 9280 0184 4989F1   		movq	%rsi, %r9
 9281 0187 4929C9   		subq	%rcx, %r9
 9282 018a 4929D1   		subq	%rdx, %r9
2946:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 9283              		.loc 1 2946 0 discriminator 3
 9284 018d 48C1E20D 		salq	$13, %rdx
 9285              	.LVL1331:
2945:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 <<= CONST_BITS;
 9286              		.loc 1 2945 0 discriminator 3
 9287 0191 49C1E102 		salq	$2, %r9
 9288 0195 45894C24 		movl	%r9d, 20(%r12)
 9288      14
 9289              		.loc 1 2947 0 discriminator 3
 9290 019a 4C69CF53 		imulq	$10323, %rdi, %r9
 9290      280000
 9291 01a1 4D01D9   		addq	%r11, %r9
 9292 01a4 4D69DA8C 		imulq	$5260, %r10, %r11
 9292      140000
 9293 01ab 4901D1   		addq	%rdx, %r9
 9294 01ae 4D01D9   		addq	%r11, %r9
 9295 01b1 4D69D814 		imulq	$1812, %r8, %r11
 9295      070000
 9296 01b8 4F8D8C19 		leaq	1024(%r9,%r11), %r9
 9296      00040000 
 9297 01c0 49C1F90B 		sarq	$11, %r9
2948:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.396802247)) +          /* c1 */
2949:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp1, FIX(1.260073511)) + tmp2 +   /* c3 */
2950:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp3, FIX(0.642039522)) +          /* c7 */
2951:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp4, FIX(0.221231742)),           /* c9 */
2952:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
2953:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 - tmp4, FIX(0.951056516)) -     /* (c3+c7)/2 */
 9298              		.loc 1 2953 0 discriminator 3
 9299 01c4 4C29C0   		subq	%r8, %rax
 9300              	.LVL1332:
 9301 01c7 4C01D7   		addq	%r10, %rdi
 9302              	.LVL1333:
 9303 01ca 4869C06F 		imulq	$7791, %rax, %rax
 9303      1E0000
2954:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.587785252));      /* (c1-c9)/2 */
2955:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp10 + tmp11, FIX(0.309016994)) +   /* (c3-c7)/2 */
 9304              		.loc 1 2955 0 discriminator 3
 9305 01d1 4801CE   		addq	%rcx, %rsi
 9306              	.LVL1334:
 9307 01d4 48C1E10C 		salq	$12, %rcx
 9308              	.LVL1335:
2953:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.587785252));      /* (c1-c9)/2 */
 9309              		.loc 1 2953 0 discriminator 3
 9310 01d8 4869FF31 		imulq	$-4815, %rdi, %rdi
 9310      EDFFFF
2947:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.396802247)) +          /* c1 */
 9311              		.loc 1 2947 0 discriminator 3
 9312 01df 45894C24 		movl	%r9d, 4(%r12)
 9312      04
 9313 01e4 48834424 		addq	$8, -48(%rsp)
 9313      D008
 9314              		.loc 1 2955 0 discriminator 3
 9315 01ea 4869F6E3 		imulq	$2531, %rsi, %rsi
 9315      090000
2956:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    (tmp11 << (CONST_BITS - 1)) - tmp2;
2957:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp12 + tmp13, CONST_BITS-PASS1_BITS);
2958:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-PASS1_BITS);
2959:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2960:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 9316              		.loc 1 2960 0 discriminator 3
 9317 01f1 4983C420 		addq	$32, %r12
 9318              	.LVL1336:
2953:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.587785252));      /* (c1-c9)/2 */
 9319              		.loc 1 2953 0 discriminator 3
 9320 01f5 4801C7   		addq	%rax, %rdi
 9321              	.LVL1337:
2955:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    (tmp11 << (CONST_BITS - 1)) - tmp2;
 9322              		.loc 1 2955 0 discriminator 3
 9323 01f8 4889C8   		movq	%rcx, %rax
 9324 01fb 4801F0   		addq	%rsi, %rax
 9325 01fe 4829D0   		subq	%rdx, %rax
 9326              	.LVL1338:
2957:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-PASS1_BITS);
 9327              		.loc 1 2957 0 discriminator 3
 9328 0201 488D9407 		leaq	1024(%rdi,%rax), %rdx
 9328      00040000 
 9329              	.LVL1339:
2958:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9330              		.loc 1 2958 0 discriminator 3
 9331 0209 4829C7   		subq	%rax, %rdi
 9332              	.LVL1340:
 9333 020c 4881C700 		addq	$1024, %rdi
 9333      040000
2957:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-PASS1_BITS);
 9334              		.loc 1 2957 0 discriminator 3
 9335 0213 48C1FA0B 		sarq	$11, %rdx
2958:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9336              		.loc 1 2958 0 discriminator 3
 9337 0217 48C1FF0B 		sarq	$11, %rdi
2957:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS-PASS1_BITS);
 9338              		.loc 1 2957 0 discriminator 3
 9339 021b 41895424 		movl	%edx, -20(%r12)
 9339      EC
2958:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9340              		.loc 1 2958 0 discriminator 3
 9341 0220 41897C24 		movl	%edi, -4(%r12)
 9341      FC
 9342              	.LVL1341:
2903:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 9343              		.loc 1 2903 0 discriminator 3
 9344 0225 4C396424 		cmpq	%r12, -24(%rsp)
 9344      E8
 9345 022a 0F8529FE 		jne	.L146
 9345      FFFF
 9346 0230 488B6C24 		movq	-8(%rsp), %rbp
 9346      F8
 9347 0235 488D7D20 		leaq	32(%rbp), %rdi
 9348              	.LVL1342:
 9349 0239 0F1F8000 		.p2align 4,,10
 9349      000000
 9350              		.p2align 3
 9351              	.L147:
2961:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
2962:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2963:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
2964:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
2965:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
2966:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/10)*(8/5) = 32/25, which we
2967:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers:
2968:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 5-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/10) * 32/25.
2969:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
2970:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2971:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
2972:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
2973:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
2974:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2975:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*4];
 9352              		.loc 1 2975 0 discriminator 3
 9353 0240 448B4500 		movl	0(%rbp), %r8d
 9354 0244 448B9D80 		movl	128(%rbp), %r11d
 9354      000000
2976:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
2977:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2];
2978:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2979:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp1;
2980:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
2981:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2982:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*4];
2983:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*3];
2984:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2985:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
2986:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
2987:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
2988:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(1.011928851));          /* (c2+c4)/2 */
2989:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
2990:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.452548340));          /* (c2-c4)/2 */
2991:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS+PASS1_BITS);
2992:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
2993:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2994:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
2995:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2996:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp0 + tmp1, FIX(1.064004961));    /* c3 */
2997:fltk-1.3.4-1/jpeg/jfdctint.c **** 
2998:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
2999:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
3000:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3001:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
3002:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
3003:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3004:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3005:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 9355              		.loc 1 3005 0 discriminator 3
 9356 024b 4883C504 		addq	$4, %rbp
 9357              	.LVL1343:
2976:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
 9358              		.loc 1 2976 0 discriminator 3
 9359 024f 8B551C   		movl	28(%rbp), %edx
 9360 0252 448B555C 		movl	92(%rbp), %r10d
2977:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9361              		.loc 1 2977 0 discriminator 3
 9362 0256 4C634D3C 		movslq	60(%rbp), %r9
2975:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
 9363              		.loc 1 2975 0 discriminator 3
 9364 025a 438D0418 		leal	(%r8,%r11), %eax
2982:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*3];
 9365              		.loc 1 2982 0 discriminator 3
 9366 025e 4529D8   		subl	%r11d, %r8d
2976:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2];
 9367              		.loc 1 2976 0 discriminator 3
 9368 0261 428D3412 		leal	(%rdx,%r10), %esi
2983:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9369              		.loc 1 2983 0 discriminator 3
 9370 0265 4429D2   		subl	%r10d, %edx
2982:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*3];
 9371              		.loc 1 2982 0 discriminator 3
 9372 0268 4D63C0   		movslq	%r8d, %r8
2975:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*3];
 9373              		.loc 1 2975 0 discriminator 3
 9374 026b 4898     		cltq
 9375              	.LVL1344:
2983:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9376              		.loc 1 2983 0 discriminator 3
 9377 026d 4863D2   		movslq	%edx, %rdx
2976:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2];
 9378              		.loc 1 2976 0 discriminator 3
 9379 0270 4863F6   		movslq	%esi, %rsi
 9380              	.LVL1345:
2979:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
 9381              		.loc 1 2979 0 discriminator 3
 9382 0273 488D0C30 		leaq	(%rax,%rsi), %rcx
 9383              	.LVL1346:
2980:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9384              		.loc 1 2980 0 discriminator 3
 9385 0277 4829F0   		subq	%rsi, %rax
 9386              	.LVL1347:
2988:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
 9387              		.loc 1 2988 0 discriminator 3
 9388 027a 4869C062 		imulq	$8290, %rax, %rax
 9388      200000
 9389              	.LVL1348:
2985:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
 9390              		.loc 1 2985 0 discriminator 3
 9391 0281 498D3409 		leaq	(%r9,%rcx), %rsi
2989:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.452548340));          /* (c2-c4)/2 */
 9392              		.loc 1 2989 0 discriminator 3
 9393 0285 49C1E102 		salq	$2, %r9
 9394              	.LVL1349:
 9395 0289 4C29C9   		subq	%r9, %rcx
 9396              	.LVL1350:
2985:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
 9397              		.loc 1 2985 0 discriminator 3
 9398 028c 4869F6F6 		imulq	$10486, %rsi, %rsi
 9398      280000
2990:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS+PASS1_BITS);
 9399              		.loc 1 2990 0 discriminator 3
 9400 0293 4869C97B 		imulq	$3707, %rcx, %rcx
 9400      0E0000
 9401              	.LVL1351:
2985:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp2, FIX(1.28)),        /* 32/25 */
 9402              		.loc 1 2985 0 discriminator 3
 9403 029a 4881C600 		addq	$16384, %rsi
 9403      400000
 9404 02a1 48C1FE0F 		sarq	$15, %rsi
 9405 02a5 8975FC   		movl	%esi, -4(%rbp)
2991:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
 9406              		.loc 1 2991 0 discriminator 3
 9407 02a8 488DB408 		leaq	16384(%rax,%rcx), %rsi
 9407      00400000 
2992:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9408              		.loc 1 2992 0 discriminator 3
 9409 02b0 4829C8   		subq	%rcx, %rax
 9410              	.LVL1352:
 9411 02b3 48050040 		addq	$16384, %rax
 9411      0000
 9412 02b9 48C1F80F 		sarq	$15, %rax
2991:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
 9413              		.loc 1 2991 0 discriminator 3
 9414 02bd 48C1FE0F 		sarq	$15, %rsi
2992:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9415              		.loc 1 2992 0 discriminator 3
 9416 02c1 89457C   		movl	%eax, 124(%rbp)
2996:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9417              		.loc 1 2996 0 discriminator 3
 9418 02c4 498D0410 		leaq	(%r8,%rdx), %rax
2991:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS+PASS1_BITS);
 9419              		.loc 1 2991 0 discriminator 3
 9420 02c8 89753C   		movl	%esi, 60(%rbp)
 9421              	.LVL1353:
2998:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 9422              		.loc 1 2998 0 discriminator 3
 9423 02cb 4D69C00B 		imulq	$5387, %r8, %r8
 9423      150000
 9424              	.LVL1354:
2996:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9425              		.loc 1 2996 0 discriminator 3
 9426 02d2 4869C00C 		imulq	$8716, %rax, %rax
 9426      220000
 9427              	.LVL1355:
3001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 9428              		.loc 1 3001 0 discriminator 3
 9429 02d9 4869D2DC 		imulq	$-22820, %rdx, %rdx
 9429      A6FFFF
 9430              	.LVL1356:
2998:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 9431              		.loc 1 2998 0 discriminator 3
 9432 02e0 4A8D8C00 		leaq	16384(%rax,%r8), %rcx
 9432      00400000 
3001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 9433              		.loc 1 3001 0 discriminator 3
 9434 02e8 488D8410 		leaq	16384(%rax,%rdx), %rax
 9434      00400000 
 9435              	.LVL1357:
2998:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 9436              		.loc 1 2998 0 discriminator 3
 9437 02f0 48C1F90F 		sarq	$15, %rcx
3001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 9438              		.loc 1 3001 0 discriminator 3
 9439 02f4 48C1F80F 		sarq	$15, %rax
2998:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.657591230)), /* c1-c3 */
 9440              		.loc 1 2998 0 discriminator 3
 9441 02f8 894D1C   		movl	%ecx, 28(%rbp)
 9442              	.LVL1358:
3001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.785601151)), /* c1+c3 */
 9443              		.loc 1 3001 0 discriminator 3
 9444 02fb 89455C   		movl	%eax, 92(%rbp)
 9445              	.LVL1359:
2972:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 9446              		.loc 1 2972 0 discriminator 3
 9447 02fe 4839FD   		cmpq	%rdi, %rbp
 9448 0301 0F8539FF 		jne	.L147
 9448      FFFF
3006:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3007:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 9449              		.loc 1 3007 0
 9450 0307 5B       		popq	%rbx
 9451              		.cfi_def_cfa_offset 48
 9452              	.LVL1360:
 9453 0308 5D       		popq	%rbp
 9454              		.cfi_def_cfa_offset 40
 9455              	.LVL1361:
 9456 0309 415C     		popq	%r12
 9457              		.cfi_def_cfa_offset 32
 9458 030b 415D     		popq	%r13
 9459              		.cfi_def_cfa_offset 24
 9460 030d 415E     		popq	%r14
 9461              		.cfi_def_cfa_offset 16
 9462 030f 415F     		popq	%r15
 9463              		.cfi_def_cfa_offset 8
 9464 0311 C3       		ret
 9465              		.cfi_endproc
 9466              	.LFE80:
 9468              		.section	.text.unlikely.jpeg_fdct_10x5
 9469              	.LCOLDE19:
 9470              		.section	.text.jpeg_fdct_10x5
 9471              	.LHOTE19:
 9472              		.section	.text.unlikely.jpeg_fdct_8x4,"ax",@progbits
 9473              	.LCOLDB20:
 9474              		.section	.text.jpeg_fdct_8x4,"ax",@progbits
 9475              	.LHOTB20:
 9476              		.p2align 4,,15
 9477              		.globl	jpeg_fdct_8x4
 9479              	jpeg_fdct_8x4:
 9480              	.LFB81:
3008:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3009:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3010:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3011:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on an 8x4 sample block.
3012:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3013:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 8-point FDCT in pass 1 (rows), 4-point in pass 2 (columns).
3014:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3015:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3016:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3017:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_8x4 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3018:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 9481              		.loc 1 3018 0
 9482              		.cfi_startproc
 9483              	.LVL1362:
 9484 0000 4157     		pushq	%r15
 9485              		.cfi_def_cfa_offset 16
 9486              		.cfi_offset 15, -16
3019:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
3020:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13;
3021:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1;
3022:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
3023:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3024:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
3025:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
3026:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3027:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Zero 4 bottom rows of output coefficient block. */
3028:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(&data[DCTSIZE*4], SIZEOF(DCTELEM) * DCTSIZE * 4);
 9487              		.loc 1 3028 0
 9488 0002 488D8780 		leaq	128(%rdi), %rax
 9488      000000
3018:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
 9489              		.loc 1 3018 0
 9490 0009 4156     		pushq	%r14
 9491              		.cfi_def_cfa_offset 24
 9492              		.cfi_offset 14, -24
 9493 000b 4155     		pushq	%r13
 9494              		.cfi_def_cfa_offset 32
 9495              		.cfi_offset 13, -32
 9496 000d 4154     		pushq	%r12
 9497              		.cfi_def_cfa_offset 40
 9498              		.cfi_offset 12, -40
 9499 000f 4989F8   		movq	%rdi, %r8
 9500 0012 55       		pushq	%rbp
 9501              		.cfi_def_cfa_offset 48
 9502              		.cfi_offset 6, -48
 9503 0013 53       		pushq	%rbx
 9504              		.cfi_def_cfa_offset 56
 9505              		.cfi_offset 3, -56
 9506              	.LBB86:
 9507              	.LBB87:
 9508              		.loc 2 90 0
 9509 0014 488DBF88 		leaq	136(%rdi), %rdi
 9509      000000
 9510              	.LVL1363:
 9511 001b 4889C1   		movq	%rax, %rcx
 9512 001e 4889F3   		movq	%rsi, %rbx
 9513              	.LBE87:
 9514              	.LBE86:
3029:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3030:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
3031:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
3032:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
3033:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by 8/4 = 2, which we add here.
3034:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 8-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
3035:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3036:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3037:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 9515              		.loc 1 3037 0
 9516 0021 4D89C2   		movq	%r8, %r10
3028:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9517              		.loc 1 3028 0
 9518 0024 48894424 		movq	%rax, -24(%rsp)
 9518      E8
 9519              	.LVL1364:
 9520              	.LBB89:
 9521              	.LBB88:
 9522              		.loc 2 90 0
 9523 0029 48C747F8 		movq	$0, -8(%rdi)
 9523      00000000 
 9524 0031 31C0     		xorl	%eax, %eax
 9525              	.LVL1365:
 9526 0033 48C74770 		movq	$0, 112(%rdi)
 9526      00000000 
 9527 003b 4883E7F8 		andq	$-8, %rdi
 9528 003f 4829F9   		subq	%rdi, %rcx
 9529              	.LVL1366:
 9530 0042 83E980   		subl	$-128, %ecx
 9531 0045 C1E903   		shrl	$3, %ecx
 9532 0048 F348AB   		rep stosq
 9533              	.LVL1367:
 9534 004b 89D0     		movl	%edx, %eax
 9535              	.LBE88:
 9536              	.LBE89:
 9537              		.loc 1 3037 0
 9538 004d 4C894424 		movq	%r8, -8(%rsp)
 9538      F8
 9539 0052 48894424 		movq	%rax, -16(%rsp)
 9539      F0
 9540              	.LVL1368:
 9541              	.L152:
3038:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
3039:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 9542              		.loc 1 3039 0 discriminator 3
 9543 0057 4C8B4C24 		movq	-16(%rsp), %r9
 9543      F0
 9544 005c 4C030B   		addq	(%rbx), %r9
 9545              	.LVL1369:
3040:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3041:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
3042:fltk-1.3.4-1/jpeg/jfdctint.c ****      * rotator "c1" should be "c6".
3043:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
3044:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3045:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[7]);
3046:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
3047:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
3048:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 9546              		.loc 1 3048 0 discriminator 3
 9547 005f 410FB669 		movzbl	4(%r9), %ebp
 9547      04
3045:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 9548              		.loc 1 3045 0 discriminator 3
 9549 0064 410FB631 		movzbl	(%r9), %esi
 9550 0068 450FB671 		movzbl	7(%r9), %r14d
 9550      07
3046:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 9551              		.loc 1 3046 0 discriminator 3
 9552 006d 410FB649 		movzbl	1(%r9), %ecx
 9552      01
 9553 0072 450FB669 		movzbl	6(%r9), %r13d
 9553      06
3047:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 9554              		.loc 1 3047 0 discriminator 3
 9555 0077 410FB651 		movzbl	2(%r9), %edx
 9555      02
 9556 007c 450FB661 		movzbl	5(%r9), %r12d
 9556      05
 9557              		.loc 1 3048 0 discriminator 3
 9558 0081 410FB641 		movzbl	3(%r9), %eax
 9558      03
3045:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 9559              		.loc 1 3045 0 discriminator 3
 9560 0086 428D3C36 		leal	(%rsi,%r14), %edi
3049:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3050:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp3;
3051:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
3052:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
3053:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
3054:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3055:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
 9561              		.loc 1 3055 0 discriminator 3
 9562 008a 4429F6   		subl	%r14d, %esi
3046:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 9563              		.loc 1 3046 0 discriminator 3
 9564 008d 468D0429 		leal	(%rcx,%r13), %r8d
3056:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
 9565              		.loc 1 3056 0 discriminator 3
 9566 0091 4429E9   		subl	%r13d, %ecx
3055:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
 9567              		.loc 1 3055 0 discriminator 3
 9568 0094 4863F6   		movslq	%esi, %rsi
3048:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9569              		.loc 1 3048 0 discriminator 3
 9570 0097 448D3C28 		leal	(%rax,%rbp), %r15d
3047:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 9571              		.loc 1 3047 0 discriminator 3
 9572 009b 468D1C22 		leal	(%rdx,%r12), %r11d
3045:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 9573              		.loc 1 3045 0 discriminator 3
 9574 009f 4863FF   		movslq	%edi, %rdi
 9575              	.LVL1370:
3046:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 9576              		.loc 1 3046 0 discriminator 3
 9577 00a2 4D63C0   		movslq	%r8d, %r8
 9578              	.LVL1371:
3057:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
3058:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 9579              		.loc 1 3058 0 discriminator 3
 9580 00a5 29E8     		subl	%ebp, %eax
3057:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
 9581              		.loc 1 3057 0 discriminator 3
 9582 00a7 4429E2   		subl	%r12d, %edx
3047:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 9583              		.loc 1 3047 0 discriminator 3
 9584 00aa 4D63DB   		movslq	%r11d, %r11
 9585              	.LVL1372:
3048:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9586              		.loc 1 3048 0 discriminator 3
 9587 00ad 4D63FF   		movslq	%r15d, %r15
 9588              	.LVL1373:
3056:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
 9589              		.loc 1 3056 0 discriminator 3
 9590 00b0 4863C9   		movslq	%ecx, %rcx
3050:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 9591              		.loc 1 3050 0 discriminator 3
 9592 00b3 4E8D0C3F 		leaq	(%rdi,%r15), %r9
 9593              	.LVL1374:
3051:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 9594              		.loc 1 3051 0 discriminator 3
 9595 00b7 4C29FF   		subq	%r15, %rdi
 9596              	.LVL1375:
3052:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 9597              		.loc 1 3052 0 discriminator 3
 9598 00ba 4F8D3C18 		leaq	(%r8,%r11), %r15
 9599              	.LVL1376:
3053:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9600              		.loc 1 3053 0 discriminator 3
 9601 00be 4D29D8   		subq	%r11, %r8
 9602              	.LVL1377:
3057:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 9603              		.loc 1 3057 0 discriminator 3
 9604 00c1 4863D2   		movslq	%edx, %rdx
 9605              	.LVL1378:
 9606              		.loc 1 3058 0 discriminator 3
 9607 00c4 4898     		cltq
 9608              	.LVL1379:
3059:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3060:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
3061:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 9609              		.loc 1 3061 0 discriminator 3
 9610 00c6 4F8D9C39 		leaq	-1024(%r9,%r15), %r11
 9610      00FCFFFF 
3062:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 8 * CENTERJSAMPLE) << (PASS1_BITS+1));
3063:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << (PASS1_BITS+1));
 9611              		.loc 1 3063 0 discriminator 3
 9612 00ce 4D29F9   		subq	%r15, %r9
 9613              	.LVL1380:
 9614 00d1 49C1E103 		salq	$3, %r9
 9615 00d5 45894A10 		movl	%r9d, 16(%r10)
 9616              	.LVL1381:
3064:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3065:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_541196100);       /* c6 */
 9617              		.loc 1 3065 0 discriminator 3
 9618 00d9 4E8D0C07 		leaq	(%rdi,%r8), %r9
3061:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 8 * CENTERJSAMPLE) << (PASS1_BITS+1));
 9619              		.loc 1 3061 0 discriminator 3
 9620 00dd 49C1E303 		salq	$3, %r11
3066:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
3067:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-2);
3068:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3069:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
3070:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
3071:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-1);
3072:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
 9621              		.loc 1 3072 0 discriminator 3
 9622 00e1 4D69C0DF 		imulq	$-15137, %r8, %r8
 9622      C4FFFF
 9623              	.LVL1382:
3061:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 8 * CENTERJSAMPLE) << (PASS1_BITS+1));
 9624              		.loc 1 3061 0 discriminator 3
 9625 00e8 45891A   		movl	%r11d, (%r10)
3073:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
3074:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-1);
3075:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3076:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part per figure 8 --- note paper omits factor of sqrt(2).
3077:fltk-1.3.4-1/jpeg/jfdctint.c ****      * i0..i3 in the paper are tmp0..tmp3 here.
3078:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
3079:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3080:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 + tmp2;
3081:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
3082:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3083:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_1_175875602);       /*  c3 */
3084:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
3085:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-2);
3086:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3087:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);          /* -c3+c5 */
3088:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
3089:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
3090:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
3091:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3092:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223);       /* -c3+c7 */
3093:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
3094:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
3095:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
3096:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += z1 + tmp13;
3097:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3098:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447);       /* -c1-c3 */
 9626              		.loc 1 3098 0 discriminator 3
 9627 00eb 4C8D1C11 		leaq	(%rcx,%rdx), %r11
3065:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 9628              		.loc 1 3065 0 discriminator 3
 9629 00ef 4D69C951 		imulq	$4433, %r9, %r9
 9629      110000
 9630              	.LVL1383:
3069:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 9631              		.loc 1 3069 0 discriminator 3
 9632 00f6 4869FF7E 		imulq	$6270, %rdi, %rdi
 9632      180000
 9633              	.LVL1384:
3067:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9634              		.loc 1 3067 0 discriminator 3
 9635 00fd 4981C100 		addq	$512, %r9
 9635      020000
 9636              	.LVL1385:
3069:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 9637              		.loc 1 3069 0 discriminator 3
 9638 0104 4C01CF   		addq	%r9, %rdi
3072:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 9639              		.loc 1 3072 0 discriminator 3
 9640 0107 4D01C1   		addq	%r8, %r9
 9641              	.LVL1386:
3080:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 9642              		.loc 1 3080 0 discriminator 3
 9643 010a 4C8D0416 		leaq	(%rsi,%rdx), %r8
 9644              	.LVL1387:
3072:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 9645              		.loc 1 3072 0 discriminator 3
 9646 010e 49C1F90A 		sarq	$10, %r9
3069:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 9647              		.loc 1 3069 0 discriminator 3
 9648 0112 48C1FF0A 		sarq	$10, %rdi
3072:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 9649              		.loc 1 3072 0 discriminator 3
 9650 0116 45894A18 		movl	%r9d, 24(%r10)
3081:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9651              		.loc 1 3081 0 discriminator 3
 9652 011a 4C8D0C01 		leaq	(%rcx,%rax), %r9
 9653              	.LVL1388:
3069:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 9654              		.loc 1 3069 0 discriminator 3
 9655 011e 41897A08 		movl	%edi, 8(%r10)
 9656              		.loc 1 3098 0 discriminator 3
 9657 0122 4D69DBFD 		imulq	$-20995, %r11, %r11
 9657      ADFFFF
3083:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 9658              		.loc 1 3083 0 discriminator 3
 9659 0129 4B8D3C08 		leaq	(%r8,%r9), %rdi
3088:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 9660              		.loc 1 3088 0 discriminator 3
 9661 012d 4D69C93B 		imulq	$-16069, %r9, %r9
 9661      C1FFFF
 9662              	.LVL1389:
3083:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 9663              		.loc 1 3083 0 discriminator 3
 9664 0134 4869FFA1 		imulq	$9633, %rdi, %rdi
 9664      250000
 9665              	.LVL1390:
3087:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
 9666              		.loc 1 3087 0 discriminator 3
 9667 013b 4D69C084 		imulq	$-3196, %r8, %r8
 9667      F3FFFF
 9668              	.LVL1391:
3085:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9669              		.loc 1 3085 0 discriminator 3
 9670 0142 4881C700 		addq	$512, %rdi
 9670      020000
 9671              	.LVL1392:
3089:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 9672              		.loc 1 3089 0 discriminator 3
 9673 0149 4901F8   		addq	%rdi, %r8
 9674              	.LVL1393:
3090:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9675              		.loc 1 3090 0 discriminator 3
 9676 014c 4C01CF   		addq	%r9, %rdi
 9677              	.LVL1394:
3092:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 9678              		.loc 1 3092 0 discriminator 3
 9679 014f 4C8D0C06 		leaq	(%rsi,%rax), %r9
3093:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
 9680              		.loc 1 3093 0 discriminator 3
 9681 0153 4869F60B 		imulq	$12299, %rsi, %rsi
 9681      300000
 9682              	.LVL1395:
3092:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 9683              		.loc 1 3092 0 discriminator 3
 9684 015a 4D69C933 		imulq	$-7373, %r9, %r9
 9684      E3FFFF
 9685              	.LVL1396:
3099:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);              /*  c1+c3+c5-c7 */
 9686              		.loc 1 3099 0 discriminator 3
 9687 0161 4869C954 		imulq	$25172, %rcx, %rcx
 9687      620000
 9688              	.LVL1397:
3100:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
3101:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
3102:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += z1 + tmp12;
3103:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3104:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) RIGHT_SHIFT(tmp0, CONST_BITS-PASS1_BITS-1);
 9689              		.loc 1 3104 0 discriminator 3
 9690 0168 4B8D2C08 		leaq	(%r8,%r9), %rbp
3094:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
 9691              		.loc 1 3094 0 discriminator 3
 9692 016c 4869C08E 		imulq	$2446, %rax, %rax
 9692      090000
 9693              	.LVL1398:
 9694              		.loc 1 3104 0 discriminator 3
 9695 0173 4801EE   		addq	%rbp, %rsi
 9696              	.LVL1399:
 9697 0176 48C1FE0A 		sarq	$10, %rsi
 9698              	.LVL1400:
 9699 017a 41897204 		movl	%esi, 4(%r10)
3105:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS-PASS1_BITS-1);
 9700              		.loc 1 3105 0 discriminator 3
 9701 017e 4A8D341F 		leaq	(%rdi,%r11), %rsi
3100:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
 9702              		.loc 1 3100 0 discriminator 3
 9703 0182 4869D2B3 		imulq	$16819, %rdx, %rdx
 9703      410000
 9704              	.LVL1401:
 9705              		.loc 1 3105 0 discriminator 3
 9706 0189 4801F1   		addq	%rsi, %rcx
 9707              	.LVL1402:
3106:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS-1);
 9708              		.loc 1 3106 0 discriminator 3
 9709 018c 4D01D8   		addq	%r11, %r8
 9710              	.LVL1403:
3107:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS-1);
 9711              		.loc 1 3107 0 discriminator 3
 9712 018f 4C01CF   		addq	%r9, %rdi
 9713              	.LVL1404:
 9714 0192 4801C7   		addq	%rax, %rdi
 9715              	.LVL1405:
3105:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS-PASS1_BITS-1);
 9716              		.loc 1 3105 0 discriminator 3
 9717 0195 48C1F90A 		sarq	$10, %rcx
 9718              	.LVL1406:
3108:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3109:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 9719              		.loc 1 3109 0 discriminator 3
 9720 0199 4983C220 		addq	$32, %r10
 9721              	.LVL1407:
3107:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS-1);
 9722              		.loc 1 3107 0 discriminator 3
 9723 019d 48C1FF0A 		sarq	$10, %rdi
 9724              	.LVL1408:
3105:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS-1);
 9725              		.loc 1 3105 0 discriminator 3
 9726 01a1 41894AEC 		movl	%ecx, -20(%r10)
 9727 01a5 4883C308 		addq	$8, %rbx
3106:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS-1);
 9728              		.loc 1 3106 0 discriminator 3
 9729 01a9 4C01C2   		addq	%r8, %rdx
 9730              	.LVL1409:
3107:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9731              		.loc 1 3107 0 discriminator 3
 9732 01ac 41897AFC 		movl	%edi, -4(%r10)
3106:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS-PASS1_BITS-1);
 9733              		.loc 1 3106 0 discriminator 3
 9734 01b0 48C1FA0A 		sarq	$10, %rdx
 9735              	.LVL1410:
 9736 01b4 418952F4 		movl	%edx, -12(%r10)
 9737              	.LVL1411:
3038:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 9738              		.loc 1 3038 0 discriminator 3
 9739 01b8 4C395424 		cmpq	%r10, -24(%rsp)
 9739      E8
 9740 01bd 0F8594FE 		jne	.L152
 9740      FFFF
 9741 01c3 4C8B4424 		movq	-8(%rsp), %r8
 9741      F8
 9742 01c8 498D7820 		leaq	32(%r8), %rdi
 9743              	.LVL1412:
 9744 01cc 0F1F4000 		.p2align 4,,10
 9745              		.p2align 3
 9746              	.L153:
3110:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3111:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3112:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
3113:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
3114:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
3115:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 4-point FDCT kernel,
3116:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point FDCT].
3117:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3118:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3119:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3120:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
3121:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3122:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3123:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
3124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*3] + (ONE << (PASS1_BITS-1));
 9747              		.loc 1 3124 0 discriminator 3
 9748 01d0 418B00   		movl	(%r8), %eax
 9749 01d3 458B5060 		movl	96(%r8), %r10d
3125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
3126:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*3];
3128:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
3129:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3130:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM) RIGHT_SHIFT(tmp0 + tmp1, PASS1_BITS);
3131:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
3132:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3133:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3134:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3135:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp11, FIX_0_541196100);       /* c6 */
3136:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
3137:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += ONE << (CONST_BITS+PASS1_BITS-1);
3138:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3139:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
3140:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
3141:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
3142:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
3143:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
3144:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
3145:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3146:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 9750              		.loc 1 3146 0 discriminator 3
 9751 01d7 4983C004 		addq	$4, %r8
 9752              	.LVL1413:
3125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 9753              		.loc 1 3125 0 discriminator 3
 9754 01db 458B483C 		movl	60(%r8), %r9d
 9755 01df 418B501C 		movl	28(%r8), %edx
3124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 9756              		.loc 1 3124 0 discriminator 3
 9757 01e3 428D0C10 		leal	(%rax,%r10), %ecx
3127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
 9758              		.loc 1 3127 0 discriminator 3
 9759 01e7 4429D0   		subl	%r10d, %eax
3125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 9760              		.loc 1 3125 0 discriminator 3
 9761 01ea 428D340A 		leal	(%rdx,%r9), %esi
3128:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9762              		.loc 1 3128 0 discriminator 3
 9763 01ee 4429CA   		subl	%r9d, %edx
3127:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
 9764              		.loc 1 3127 0 discriminator 3
 9765 01f1 4898     		cltq
3124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 9766              		.loc 1 3124 0 discriminator 3
 9767 01f3 4863C9   		movslq	%ecx, %rcx
3128:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9768              		.loc 1 3128 0 discriminator 3
 9769 01f6 4C63CA   		movslq	%edx, %r9
3124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 9770              		.loc 1 3124 0 discriminator 3
 9771 01f9 4883C102 		addq	$2, %rcx
 9772              	.LVL1414:
3125:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9773              		.loc 1 3125 0 discriminator 3
 9774 01fd 4863F6   		movslq	%esi, %rsi
 9775              	.LVL1415:
3130:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
 9776              		.loc 1 3130 0 discriminator 3
 9777 0200 488D1431 		leaq	(%rcx,%rsi), %rdx
3131:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9778              		.loc 1 3131 0 discriminator 3
 9779 0204 4829F1   		subq	%rsi, %rcx
 9780              	.LVL1416:
 9781 0207 48C1F902 		sarq	$2, %rcx
3130:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
 9782              		.loc 1 3130 0 discriminator 3
 9783 020b 48C1FA02 		sarq	$2, %rdx
3131:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9784              		.loc 1 3131 0 discriminator 3
 9785 020f 4189483C 		movl	%ecx, 60(%r8)
3130:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
 9786              		.loc 1 3130 0 discriminator 3
 9787 0213 418950FC 		movl	%edx, -4(%r8)
 9788              	.LVL1417:
3135:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 9789              		.loc 1 3135 0 discriminator 3
 9790 0217 4A8D1408 		leaq	(%rax,%r9), %rdx
3139:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 9791              		.loc 1 3139 0 discriminator 3
 9792 021b 4869C07E 		imulq	$6270, %rax, %rax
 9792      180000
 9793              	.LVL1418:
3135:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 9794              		.loc 1 3135 0 discriminator 3
 9795 0222 4869D251 		imulq	$4433, %rdx, %rdx
 9795      110000
 9796              	.LVL1419:
3137:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9797              		.loc 1 3137 0 discriminator 3
 9798 0229 4881C200 		addq	$16384, %rdx
 9798      400000
 9799              	.LVL1420:
3139:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 9800              		.loc 1 3139 0 discriminator 3
 9801 0230 4801D0   		addq	%rdx, %rax
 9802 0233 48C1F80F 		sarq	$15, %rax
 9803 0237 4189401C 		movl	%eax, 28(%r8)
3142:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 9804              		.loc 1 3142 0 discriminator 3
 9805 023b 4969C1DF 		imulq	$-15137, %r9, %rax
 9805      C4FFFF
 9806 0242 4801C2   		addq	%rax, %rdx
 9807              	.LVL1421:
 9808 0245 48C1FA0F 		sarq	$15, %rdx
 9809 0249 4189505C 		movl	%edx, 92(%r8)
 9810              	.LVL1422:
3120:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 9811              		.loc 1 3120 0 discriminator 3
 9812 024d 4939F8   		cmpq	%rdi, %r8
 9813 0250 0F857AFF 		jne	.L153
 9813      FFFF
3147:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3148:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 9814              		.loc 1 3148 0
 9815 0256 5B       		popq	%rbx
 9816              		.cfi_def_cfa_offset 48
 9817              	.LVL1423:
 9818 0257 5D       		popq	%rbp
 9819              		.cfi_def_cfa_offset 40
 9820 0258 415C     		popq	%r12
 9821              		.cfi_def_cfa_offset 32
 9822 025a 415D     		popq	%r13
 9823              		.cfi_def_cfa_offset 24
 9824 025c 415E     		popq	%r14
 9825              		.cfi_def_cfa_offset 16
 9826 025e 415F     		popq	%r15
 9827              		.cfi_def_cfa_offset 8
 9828 0260 C3       		ret
 9829              		.cfi_endproc
 9830              	.LFE81:
 9832              		.section	.text.unlikely.jpeg_fdct_8x4
 9833              	.LCOLDE20:
 9834              		.section	.text.jpeg_fdct_8x4
 9835              	.LHOTE20:
 9836              		.section	.text.unlikely.jpeg_fdct_6x3,"ax",@progbits
 9837              	.LCOLDB21:
 9838              		.section	.text.jpeg_fdct_6x3,"ax",@progbits
 9839              	.LHOTB21:
 9840              		.p2align 4,,15
 9841              		.globl	jpeg_fdct_6x3
 9843              	jpeg_fdct_6x3:
 9844              	.LFB82:
3149:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3150:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3151:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3152:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 6x3 sample block.
3153:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3154:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 6-point FDCT in pass 1 (rows), 3-point in pass 2 (columns).
3155:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3156:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3157:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3158:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_6x3 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3159:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 9845              		.loc 1 3159 0
 9846              		.cfi_startproc
 9847              	.LVL1424:
 9848 0000 4157     		pushq	%r15
 9849              		.cfi_def_cfa_offset 16
 9850              		.cfi_offset 15, -16
 9851 0002 4989F8   		movq	%rdi, %r8
 9852 0005 4156     		pushq	%r14
 9853              		.cfi_def_cfa_offset 24
 9854              		.cfi_offset 14, -24
 9855              	.LBB90:
 9856              	.LBB91:
 9857              		.loc 2 90 0
 9858 0007 488D7F08 		leaq	8(%rdi), %rdi
 9859              	.LVL1425:
 9860              	.LBE91:
 9861              	.LBE90:
 9862              		.loc 1 3159 0
 9863 000b 4155     		pushq	%r13
 9864              		.cfi_def_cfa_offset 32
 9865              		.cfi_offset 13, -32
 9866 000d 4154     		pushq	%r12
 9867              		.cfi_def_cfa_offset 40
 9868              		.cfi_offset 12, -40
 9869 000f 55       		pushq	%rbp
 9870              		.cfi_def_cfa_offset 48
 9871              		.cfi_offset 6, -48
 9872 0010 53       		pushq	%rbx
 9873              		.cfi_def_cfa_offset 56
 9874              		.cfi_offset 3, -56
 9875              	.LBB93:
 9876              	.LBB92:
 9877              		.loc 2 90 0
 9878 0011 4C89C1   		movq	%r8, %rcx
 9879 0014 48C747F8 		movq	$0, -8(%rdi)
 9879      00000000 
 9880 001c 48C787F0 		movq	$0, 240(%rdi)
 9880      00000000 
 9880      000000
 9881 0027 4883E7F8 		andq	$-8, %rdi
 9882 002b 4829F9   		subq	%rdi, %rcx
 9883 002e 31C0     		xorl	%eax, %eax
 9884 0030 498D6860 		leaq	96(%r8), %rbp
 9885 0034 81C10001 		addl	$256, %ecx
 9885      0000
 9886 003a 89D2     		movl	%edx, %edx
 9887 003c C1E903   		shrl	$3, %ecx
 9888 003f F348AB   		rep stosq
 9889              	.LVL1426:
 9890 0042 4C89C1   		movq	%r8, %rcx
 9891              	.LVL1427:
 9892              	.L158:
 9893              	.LBE92:
 9894              	.LBE93:
3160:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2;
3161:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12;
3162:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
3163:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3164:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
3165:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
3166:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3167:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
3168:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
3169:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3170:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
3171:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
3172:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
3173:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We scale the results further by 2 as part of output adaption
3174:fltk-1.3.4-1/jpeg/jfdctint.c ****    * scaling for different DCT size.
3175:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 6-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/12).
3176:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3177:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3178:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3179:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 3; ctr++) {
3180:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 9895              		.loc 1 3180 0 discriminator 3
 9896 0045 4889D0   		movq	%rdx, %rax
 9897 0048 480306   		addq	(%rsi), %rax
 9898              	.LVL1428:
3181:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3182:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3183:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[5]);
3185:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
3186:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
3187:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3188:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp2;
3189:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
3190:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3191:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[5]);
3192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
3193:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[3]);
3194:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3195:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
3196:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
3197:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << (PASS1_BITS+1));
3198:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
3199:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
3200:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-1);
3201:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
3202:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
3203:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-1);
3204:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3205:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3206:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3207:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = DESCALE(MULTIPLY(tmp0 + tmp2, FIX(0.366025404)),     /* c5 */
3208:fltk-1.3.4-1/jpeg/jfdctint.c **** 		    CONST_BITS-PASS1_BITS-1);
3209:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3210:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) (tmp10 + ((tmp0 + tmp1) << (PASS1_BITS+1)));
3211:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << (PASS1_BITS+1));
3212:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << (PASS1_BITS+1)));
3213:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3214:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 9899              		.loc 1 3214 0 discriminator 3
 9900 004b 4883C120 		addq	$32, %rcx
 9901              	.LVL1429:
 9902 004f 4883C608 		addq	$8, %rsi
3184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 9903              		.loc 1 3184 0 discriminator 3
 9904 0053 0FB67805 		movzbl	5(%rax), %edi
3186:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9905              		.loc 1 3186 0 discriminator 3
 9906 0057 0FB65803 		movzbl	3(%rax), %ebx
3184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 9907              		.loc 1 3184 0 discriminator 3
 9908 005b 440FB610 		movzbl	(%rax), %r10d
3186:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9909              		.loc 1 3186 0 discriminator 3
 9910 005f 440FB648 		movzbl	2(%rax), %r9d
 9910      02
3185:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 9911              		.loc 1 3185 0 discriminator 3
 9912 0064 440FB678 		movzbl	4(%rax), %r15d
 9912      04
 9913 0069 440FB658 		movzbl	1(%rax), %r11d
 9913      01
3184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 9914              		.loc 1 3184 0 discriminator 3
 9915 006e 458D243A 		leal	(%r10,%rdi), %r12d
3186:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9916              		.loc 1 3186 0 discriminator 3
 9917 0072 458D3419 		leal	(%r9,%rbx), %r14d
3191:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
 9918              		.loc 1 3191 0 discriminator 3
 9919 0076 4129FA   		subl	%edi, %r10d
3185:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 9920              		.loc 1 3185 0 discriminator 3
 9921 0079 478D2C3B 		leal	(%r11,%r15), %r13d
3192:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[3]);
 9922              		.loc 1 3192 0 discriminator 3
 9923 007d 4529FB   		subl	%r15d, %r11d
3193:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9924              		.loc 1 3193 0 discriminator 3
 9925 0080 4129D9   		subl	%ebx, %r9d
3184:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 9926              		.loc 1 3184 0 discriminator 3
 9927 0083 4D63E4   		movslq	%r12d, %r12
 9928              	.LVL1430:
3186:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9929              		.loc 1 3186 0 discriminator 3
 9930 0086 4D63F6   		movslq	%r14d, %r14
3191:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
 9931              		.loc 1 3191 0 discriminator 3
 9932 0089 4963FA   		movslq	%r10d, %rdi
3188:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 9933              		.loc 1 3188 0 discriminator 3
 9934 008c 4B8D0434 		leaq	(%r12,%r14), %rax
 9935              	.LVL1431:
3185:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 9936              		.loc 1 3185 0 discriminator 3
 9937 0090 4D63ED   		movslq	%r13d, %r13
 9938              	.LVL1432:
3193:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9939              		.loc 1 3193 0 discriminator 3
 9940 0093 4963D9   		movslq	%r9d, %rbx
 9941              	.LVL1433:
3198:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 9942              		.loc 1 3198 0 discriminator 3
 9943 0096 4D29F4   		subq	%r14, %r12
 9944              	.LVL1434:
3210:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << (PASS1_BITS+1));
 9945              		.loc 1 3210 0 discriminator 3
 9946 0099 4501DA   		addl	%r11d, %r10d
3212:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9947              		.loc 1 3212 0 discriminator 3
 9948 009c 4529D9   		subl	%r11d, %r9d
3196:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << (PASS1_BITS+1));
 9949              		.loc 1 3196 0 discriminator 3
 9950 009f 4D8DBC05 		leaq	-768(%r13,%rax), %r15
 9950      00FDFFFF 
3201:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 9951              		.loc 1 3201 0 discriminator 3
 9952 00a7 4C29E8   		subq	%r13, %rax
 9953              	.LVL1435:
 9954 00aa 4C29E8   		subq	%r13, %rax
 9955 00ad 4869C0A1 		imulq	$5793, %rax, %rax
 9955      160000
3196:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << (PASS1_BITS+1));
 9956              		.loc 1 3196 0 discriminator 3
 9957 00b4 49C1E703 		salq	$3, %r15
3198:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 9958              		.loc 1 3198 0 discriminator 3
 9959 00b8 4D69E431 		imulq	$10033, %r12, %r12
 9959      270000
 9960              	.LVL1436:
3196:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << (PASS1_BITS+1));
 9961              		.loc 1 3196 0 discriminator 3
 9962 00bf 448979E0 		movl	%r15d, -32(%rcx)
 9963              	.LVL1437:
3201:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 9964              		.loc 1 3201 0 discriminator 3
 9965 00c3 48050002 		addq	$512, %rax
 9965      0000
 9966 00c9 48C1F80A 		sarq	$10, %rax
3198:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 9967              		.loc 1 3198 0 discriminator 3
 9968 00cd 4981C400 		addq	$512, %r12
 9968      020000
3201:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 9969              		.loc 1 3201 0 discriminator 3
 9970 00d4 8941F0   		movl	%eax, -16(%rcx)
 9971              	.LVL1438:
3210:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << (PASS1_BITS+1));
 9972              		.loc 1 3210 0 discriminator 3
 9973 00d7 488D041F 		leaq	(%rdi,%rbx), %rax
3198:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 9974              		.loc 1 3198 0 discriminator 3
 9975 00db 49C1FC0A 		sarq	$10, %r12
 9976 00df 448961E8 		movl	%r12d, -24(%rcx)
3210:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << (PASS1_BITS+1));
 9977              		.loc 1 3210 0 discriminator 3
 9978 00e3 4869C0B6 		imulq	$2998, %rax, %rax
 9978      0B0000
 9979 00ea 48050002 		addq	$512, %rax
 9979      0000
 9980 00f0 48C1F80A 		sarq	$10, %rax
 9981              	.LVL1439:
 9982 00f4 468D14D0 		leal	(%rax,%r10,8), %r10d
3212:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9983              		.loc 1 3212 0 discriminator 3
 9984 00f8 428D04C8 		leal	(%rax,%r9,8), %eax
 9985              	.LVL1440:
3210:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << (PASS1_BITS+1));
 9986              		.loc 1 3210 0 discriminator 3
 9987 00fc 448951E4 		movl	%r10d, -28(%rcx)
3211:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << (PASS1_BITS+1)));
 9988              		.loc 1 3211 0 discriminator 3
 9989 0100 4D63D3   		movslq	%r11d, %r10
 9990              	.LVL1441:
3212:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 9991              		.loc 1 3212 0 discriminator 3
 9992 0103 8941F4   		movl	%eax, -12(%rcx)
3211:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << (PASS1_BITS+1)));
 9993              		.loc 1 3211 0 discriminator 3
 9994 0106 4C29D7   		subq	%r10, %rdi
 9995              	.LVL1442:
 9996 0109 4829DF   		subq	%rbx, %rdi
 9997 010c 48C1E703 		salq	$3, %rdi
 9998 0110 8979EC   		movl	%edi, -20(%rcx)
 9999              	.LVL1443:
3179:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 10000              		.loc 1 3179 0 discriminator 3
 10001 0113 4839E9   		cmpq	%rbp, %rcx
 10002 0116 0F8529FF 		jne	.L158
 10002      FFFF
 10003 011c 498D4818 		leaq	24(%r8), %rcx
 10004              	.LVL1444:
 10005              		.p2align 4,,10
 10006              		.p2align 3
 10007              	.L159:
3215:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3216:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3217:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
3218:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
3219:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
3220:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/6)*(8/3) = 32/9, which we partially
3221:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers (other part was done in pass 1):
3222:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 3-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/6) * 16/9.
3223:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3224:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3225:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3226:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
3227:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3228:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*2];
 10008              		.loc 1 3229 0 discriminator 3
 10009 0120 418B10   		movl	(%r8), %edx
 10010 0123 418B7840 		movl	64(%r8), %edi
3230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
3231:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3232:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*2];
3233:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3234:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
3235:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
3236:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3237:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
3238:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
3239:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3240:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3241:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3242:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3243:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
3244:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
3245:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3246:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3247:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 10011              		.loc 1 3247 0 discriminator 3
 10012 0127 4983C004 		addq	$4, %r8
 10013              	.LVL1445:
3230:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 10014              		.loc 1 3230 0 discriminator 3
 10015 012b 4D63481C 		movslq	28(%r8), %r9
3229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 10016              		.loc 1 3229 0 discriminator 3
 10017 012f 8D043A   		leal	(%rdx,%rdi), %eax
3243:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 10018              		.loc 1 3243 0 discriminator 3
 10019 0132 29FA     		subl	%edi, %edx
 10020 0134 4863D2   		movslq	%edx, %rdx
3229:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 10021              		.loc 1 3229 0 discriminator 3
 10022 0137 4898     		cltq
 10023              	.LVL1446:
3234:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 10024              		.loc 1 3234 0 discriminator 3
 10025 0139 4A8D3408 		leaq	(%rax,%r9), %rsi
3237:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 10026              		.loc 1 3237 0 discriminator 3
 10027 013d 4C29C8   		subq	%r9, %rax
 10028              	.LVL1447:
 10029 0140 4C29C8   		subq	%r9, %rax
3234:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 10030              		.loc 1 3234 0 discriminator 3
 10031 0143 4869F6E4 		imulq	$14564, %rsi, %rsi
 10031      380000
3237:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 10032              		.loc 1 3237 0 discriminator 3
 10033 014a 4869C03A 		imulq	$10298, %rax, %rax
 10033      280000
3243:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 10034              		.loc 1 3243 0 discriminator 3
 10035 0151 4869D2AD 		imulq	$17837, %rdx, %rdx
 10035      450000
3234:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 10036              		.loc 1 3234 0 discriminator 3
 10037 0158 4881C600 		addq	$16384, %rsi
 10037      400000
3237:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 10038              		.loc 1 3237 0 discriminator 3
 10039 015f 48050040 		addq	$16384, %rax
 10039      0000
3234:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 10040              		.loc 1 3234 0 discriminator 3
 10041 0165 48C1FE0F 		sarq	$15, %rsi
3243:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 10042              		.loc 1 3243 0 discriminator 3
 10043 0169 4881C200 		addq	$16384, %rdx
 10043      400000
3237:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 10044              		.loc 1 3237 0 discriminator 3
 10045 0170 48C1F80F 		sarq	$15, %rax
3234:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),        /* 16/9 */
 10046              		.loc 1 3234 0 discriminator 3
 10047 0174 418970FC 		movl	%esi, -4(%r8)
 10048              	.LVL1448:
3243:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 10049              		.loc 1 3243 0 discriminator 3
 10050 0178 48C1FA0F 		sarq	$15, %rdx
3237:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(1.257078722)), /* c2 */
 10051              		.loc 1 3237 0 discriminator 3
 10052 017c 4189403C 		movl	%eax, 60(%r8)
3243:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(2.177324216)),               /* c1 */
 10053              		.loc 1 3243 0 discriminator 3
 10054 0180 4189501C 		movl	%edx, 28(%r8)
 10055              	.LVL1449:
3226:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 10056              		.loc 1 3226 0 discriminator 3
 10057 0184 4939C8   		cmpq	%rcx, %r8
 10058 0187 7597     		jne	.L159
3248:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3249:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 10059              		.loc 1 3249 0
 10060 0189 5B       		popq	%rbx
 10061              		.cfi_def_cfa_offset 48
 10062 018a 5D       		popq	%rbp
 10063              		.cfi_def_cfa_offset 40
 10064 018b 415C     		popq	%r12
 10065              		.cfi_def_cfa_offset 32
 10066 018d 415D     		popq	%r13
 10067              		.cfi_def_cfa_offset 24
 10068              	.LVL1450:
 10069 018f 415E     		popq	%r14
 10070              		.cfi_def_cfa_offset 16
 10071 0191 415F     		popq	%r15
 10072              		.cfi_def_cfa_offset 8
 10073 0193 C3       		ret
 10074              		.cfi_endproc
 10075              	.LFE82:
 10077              		.section	.text.unlikely.jpeg_fdct_6x3
 10078              	.LCOLDE21:
 10079              		.section	.text.jpeg_fdct_6x3
 10080              	.LHOTE21:
 10081              		.section	.text.unlikely.jpeg_fdct_4x2,"ax",@progbits
 10082              	.LCOLDB22:
 10083              		.section	.text.jpeg_fdct_4x2,"ax",@progbits
 10084              	.LHOTB22:
 10085              		.p2align 4,,15
 10086              		.globl	jpeg_fdct_4x2
 10088              	jpeg_fdct_4x2:
 10089              	.LFB83:
3250:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3251:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3252:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3253:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 4x2 sample block.
3254:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3255:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 4-point FDCT in pass 1 (rows), 2-point in pass 2 (columns).
3256:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3257:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3258:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3259:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_4x2 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3260:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 10090              		.loc 1 3260 0
 10091              		.cfi_startproc
 10092              	.LVL1451:
 10093 0000 53       		pushq	%rbx
 10094              		.cfi_def_cfa_offset 16
 10095              		.cfi_offset 3, -16
 10096              		.loc 1 3260 0
 10097 0001 4989F8   		movq	%rdi, %r8
 10098              	.LBB94:
 10099              	.LBB95:
 10100              		.loc 2 90 0
 10101 0004 48C70700 		movq	$0, (%rdi)
 10101      000000
 10102 000b 48C787F8 		movq	$0, 248(%rdi)
 10102      00000000 
 10102      000000
 10103 0016 488D7F08 		leaq	8(%rdi), %rdi
 10104              	.LVL1452:
 10105 001a 4C89C1   		movq	%r8, %rcx
 10106 001d 31C0     		xorl	%eax, %eax
 10107 001f 89D2     		movl	%edx, %edx
 10108 0021 4531D2   		xorl	%r10d, %r10d
 10109 0024 4883E7F8 		andq	$-8, %rdi
 10110 0028 4829F9   		subq	%rdi, %rcx
 10111 002b 81C10001 		addl	$256, %ecx
 10111      0000
 10112 0031 C1E903   		shrl	$3, %ecx
 10113 0034 F348AB   		rep stosq
 10114              	.LVL1453:
 10115              	.L164:
 10116              	.LBE95:
 10117              	.LBE94:
3261:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1;
3262:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11;
3263:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
3264:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3265:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
3266:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
3267:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3268:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
3269:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
3270:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3271:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
3272:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
3273:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
3274:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/4)*(8/2) = 2**3, which we add here.
3275:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 4-point FDCT kernel,
3276:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point FDCT].
3277:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3278:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3279:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3280:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 2; ctr++) {
3281:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 10118              		.loc 1 3281 0 discriminator 3
 10119 0037 4889D1   		movq	%rdx, %rcx
 10120 003a 4A030C16 		addq	(%rsi,%r10), %rcx
 10121              	.LVL1454:
3282:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3283:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3284:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[3]);
 10122              		.loc 1 3285 0 discriminator 3
 10123 003e 0FB601   		movzbl	(%rcx), %eax
 10124 0041 0FB65903 		movzbl	3(%rcx), %ebx
3286:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 10125              		.loc 1 3286 0 discriminator 3
 10126 0045 0FB67901 		movzbl	1(%rcx), %edi
 10127 0049 0FB64902 		movzbl	2(%rcx), %ecx
 10128              	.LVL1455:
3285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 10129              		.loc 1 3285 0 discriminator 3
 10130 004d 448D0C18 		leal	(%rax,%rbx), %r9d
3287:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3288:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[3]);
 10131              		.loc 1 3288 0 discriminator 3
 10132 0051 29D8     		subl	%ebx, %eax
3286:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10133              		.loc 1 3286 0 discriminator 3
 10134 0053 448D1C0F 		leal	(%rdi,%rcx), %r11d
3289:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[2]);
 10135              		.loc 1 3289 0 discriminator 3
 10136 0057 29CF     		subl	%ecx, %edi
3288:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[2]);
 10137              		.loc 1 3288 0 discriminator 3
 10138 0059 4898     		cltq
3285:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 10139              		.loc 1 3285 0 discriminator 3
 10140 005b 4D63C9   		movslq	%r9d, %r9
 10141              	.LVL1456:
 10142              		.loc 1 3289 0 discriminator 3
 10143 005e 4863FF   		movslq	%edi, %rdi
3286:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10144              		.loc 1 3286 0 discriminator 3
 10145 0061 4D63DB   		movslq	%r11d, %r11
 10146              	.LVL1457:
3290:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3291:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
3292:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
 10147              		.loc 1 3292 0 discriminator 3
 10148 0064 4B8D8C19 		leaq	-512(%r9,%r11), %rcx
 10148      00FEFFFF 
3293:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+3));
3294:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) ((tmp0 - tmp1) << (PASS1_BITS+3));
 10149              		.loc 1 3294 0 discriminator 3
 10150 006c 4D29D9   		subq	%r11, %r9
 10151              	.LVL1458:
 10152 006f 49C1E105 		salq	$5, %r9
3292:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+3));
 10153              		.loc 1 3292 0 discriminator 3
 10154 0073 48C1E105 		salq	$5, %rcx
 10155              		.loc 1 3294 0 discriminator 3
 10156 0077 47894C90 		movl	%r9d, 8(%r8,%r10,4)
 10156      08
 10157              	.LVL1459:
3292:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+3));
 10158              		.loc 1 3292 0 discriminator 3
 10159 007c 43890C90 		movl	%ecx, (%r8,%r10,4)
3295:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3296:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3297:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3298:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp11, FIX_0_541196100);       /* c6 */
 10160              		.loc 1 3298 0 discriminator 3
 10161 0080 488D0C38 		leaq	(%rax,%rdi), %rcx
3299:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
3300:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-4);
3301:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3302:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
 10162              		.loc 1 3302 0 discriminator 3
 10163 0084 4869C07E 		imulq	$6270, %rax, %rax
 10163      180000
 10164              	.LVL1460:
3298:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 10165              		.loc 1 3298 0 discriminator 3
 10166 008b 4869C951 		imulq	$4433, %rcx, %rcx
 10166      110000
 10167              	.LVL1461:
3303:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
3304:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-3);
3305:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
 10168              		.loc 1 3305 0 discriminator 3
 10169 0092 4869FFDF 		imulq	$-15137, %rdi, %rdi
 10169      C4FFFF
 10170              	.LVL1462:
3300:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10171              		.loc 1 3300 0 discriminator 3
 10172 0099 4883E980 		subq	$-128, %rcx
 10173              	.LVL1463:
3302:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 10174              		.loc 1 3302 0 discriminator 3
 10175 009d 4801C8   		addq	%rcx, %rax
 10176              		.loc 1 3305 0 discriminator 3
 10177 00a0 4801F9   		addq	%rdi, %rcx
 10178              	.LVL1464:
3302:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 10179              		.loc 1 3302 0 discriminator 3
 10180 00a3 48C1F808 		sarq	$8, %rax
 10181              		.loc 1 3305 0 discriminator 3
 10182 00a7 48C1F908 		sarq	$8, %rcx
3302:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 10183              		.loc 1 3302 0 discriminator 3
 10184 00ab 43894490 		movl	%eax, 4(%r8,%r10,4)
 10184      04
 10185              		.loc 1 3305 0 discriminator 3
 10186 00b0 43894C90 		movl	%ecx, 12(%r8,%r10,4)
 10186      0C
 10187              	.LVL1465:
 10188 00b5 4983C208 		addq	$8, %r10
 10189              	.LVL1466:
3280:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 10190              		.loc 1 3280 0 discriminator 3
 10191 00b9 4983FA10 		cmpq	$16, %r10
 10192 00bd 0F8574FF 		jne	.L164
 10192      FFFF
 10193 00c3 498D7010 		leaq	16(%r8), %rsi
 10194              	.LVL1467:
 10195              	.L165:
3306:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
3307:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-3);
3308:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3309:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
3310:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3311:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3312:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
3313:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
3314:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
3315:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3316:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3317:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3318:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
3319:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3320:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3321:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
3322:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + (ONE << (PASS1_BITS-1));
 10196              		.loc 1 3322 0 discriminator 3
 10197 00c7 496300   		movslq	(%r8), %rax
3323:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 10198              		.loc 1 3323 0 discriminator 3
 10199 00ca 49634820 		movslq	32(%r8), %rcx
3324:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3325:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM) RIGHT_SHIFT(tmp0 + tmp1, PASS1_BITS);
3326:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3327:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3328:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3329:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) RIGHT_SHIFT(tmp0 - tmp1, PASS1_BITS);
3330:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3331:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 10200              		.loc 1 3331 0 discriminator 3
 10201 00ce 4983C004 		addq	$4, %r8
 10202              	.LVL1468:
3322:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1];
 10203              		.loc 1 3322 0 discriminator 3
 10204 00d2 4883C002 		addq	$2, %rax
 10205              	.LVL1469:
3325:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10206              		.loc 1 3325 0 discriminator 3
 10207 00d6 488D1408 		leaq	(%rax,%rcx), %rdx
3329:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10208              		.loc 1 3329 0 discriminator 3
 10209 00da 4829C8   		subq	%rcx, %rax
 10210              	.LVL1470:
 10211 00dd 48C1F802 		sarq	$2, %rax
3325:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10212              		.loc 1 3325 0 discriminator 3
 10213 00e1 48C1FA02 		sarq	$2, %rdx
3329:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10214              		.loc 1 3329 0 discriminator 3
 10215 00e5 4189401C 		movl	%eax, 28(%r8)
3325:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10216              		.loc 1 3325 0 discriminator 3
 10217 00e9 418950FC 		movl	%edx, -4(%r8)
 10218              	.LVL1471:
3318:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 10219              		.loc 1 3318 0 discriminator 3
 10220 00ed 4939F0   		cmpq	%rsi, %r8
 10221 00f0 75D5     		jne	.L165
3332:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3333:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 10222              		.loc 1 3333 0
 10223 00f2 5B       		popq	%rbx
 10224              		.cfi_def_cfa_offset 8
 10225 00f3 C3       		ret
 10226              		.cfi_endproc
 10227              	.LFE83:
 10229              		.section	.text.unlikely.jpeg_fdct_4x2
 10230              	.LCOLDE22:
 10231              		.section	.text.jpeg_fdct_4x2
 10232              	.LHOTE22:
 10233              		.section	.text.unlikely.jpeg_fdct_2x1,"ax",@progbits
 10234              	.LCOLDB23:
 10235              		.section	.text.jpeg_fdct_2x1,"ax",@progbits
 10236              	.LHOTB23:
 10237              		.p2align 4,,15
 10238              		.globl	jpeg_fdct_2x1
 10240              	jpeg_fdct_2x1:
 10241              	.LFB84:
3334:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3335:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3336:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3337:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 2x1 sample block.
3338:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3339:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 2-point FDCT in pass 1 (rows), 1-point in pass 2 (columns).
3340:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3341:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3342:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3343:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_2x1 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3344:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 10242              		.loc 1 3344 0
 10243              		.cfi_startproc
 10244              	.LVL1472:
 10245              	.LBB96:
 10246              	.LBB97:
 10247              		.loc 2 90 0
 10248 0000 48C70700 		movq	$0, (%rdi)
 10248      000000
 10249 0007 48C787F8 		movq	$0, 248(%rdi)
 10249      00000000 
 10249      000000
 10250              	.LBE97:
 10251              	.LBE96:
 10252              		.loc 1 3344 0
 10253 0012 4989F8   		movq	%rdi, %r8
 10254              	.LBB100:
 10255              	.LBB98:
 10256              		.loc 2 90 0
 10257 0015 488D7F08 		leaq	8(%rdi), %rdi
 10258              	.LVL1473:
 10259 0019 4C89C1   		movq	%r8, %rcx
 10260 001c 31C0     		xorl	%eax, %eax
 10261              	.LBE98:
 10262              	.LBE100:
3345:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1;
3346:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3347:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3348:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
3349:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
3350:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3351:fltk-1.3.4-1/jpeg/jfdctint.c ****   elemptr = sample_data[0] + start_col;
 10263              		.loc 1 3351 0
 10264 001e 89D2     		movl	%edx, %edx
 10265              	.LBB101:
 10266              	.LBB99:
 10267              		.loc 2 90 0
 10268 0020 4883E7F8 		andq	$-8, %rdi
 10269 0024 4829F9   		subq	%rdi, %rcx
 10270 0027 81C10001 		addl	$256, %ecx
 10270      0000
 10271 002d C1E903   		shrl	$3, %ecx
 10272 0030 F348AB   		rep stosq
 10273              	.LVL1474:
 10274              	.LBE99:
 10275              	.LBE101:
 10276              		.loc 1 3351 0
 10277 0033 480316   		addq	(%rsi), %rdx
 10278              	.LVL1475:
3352:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3353:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp0 = GETJSAMPLE(elemptr[0]);
 10279              		.loc 1 3353 0
 10280 0036 0FB602   		movzbl	(%rdx), %eax
 10281              	.LVL1476:
3354:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp1 = GETJSAMPLE(elemptr[1]);
 10282              		.loc 1 3354 0
 10283 0039 0FB64A01 		movzbl	1(%rdx), %ecx
 10284              	.LVL1477:
3355:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3356:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* We leave the results scaled up by an overall factor of 8.
3357:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/2)*(8/1) = 2**5.
3358:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3359:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3360:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Even part */
3361:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3362:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Apply unsigned->signed conversion */
3363:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[0] = (DCTELEM) ((tmp0 + tmp1 - 2 * CENTERJSAMPLE) << 5);
 10285              		.loc 1 3363 0
 10286 003d 488D9408 		leaq	-256(%rax,%rcx), %rdx
 10286      00FFFFFF 
 10287              	.LVL1478:
3364:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3365:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Odd part */
3366:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3367:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[1] = (DCTELEM) ((tmp0 - tmp1) << 5);
 10288              		.loc 1 3367 0
 10289 0045 4829C8   		subq	%rcx, %rax
 10290              	.LVL1479:
 10291 0048 48C1E005 		salq	$5, %rax
3363:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10292              		.loc 1 3363 0
 10293 004c 48C1E205 		salq	$5, %rdx
 10294              		.loc 1 3367 0
 10295 0050 41894004 		movl	%eax, 4(%r8)
 10296              	.LVL1480:
3363:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10297              		.loc 1 3363 0
 10298 0054 418910   		movl	%edx, (%r8)
 10299              		.loc 1 3367 0
 10300 0057 C3       		ret
 10301              		.cfi_endproc
 10302              	.LFE84:
 10304              		.section	.text.unlikely.jpeg_fdct_2x1
 10305              	.LCOLDE23:
 10306              		.section	.text.jpeg_fdct_2x1
 10307              	.LHOTE23:
 10308              		.section	.text.unlikely.jpeg_fdct_8x16,"ax",@progbits
 10309              	.LCOLDB24:
 10310              		.section	.text.jpeg_fdct_8x16,"ax",@progbits
 10311              	.LHOTB24:
 10312              		.p2align 4,,15
 10313              		.globl	jpeg_fdct_8x16
 10315              	jpeg_fdct_8x16:
 10316              	.LFB85:
3368:fltk-1.3.4-1/jpeg/jfdctint.c **** }
3369:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3370:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3371:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3372:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on an 8x16 sample block.
3373:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3374:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 8-point FDCT in pass 1 (rows), 16-point in pass 2 (columns).
3375:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3376:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3377:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3378:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_8x16 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3379:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 10317              		.loc 1 3379 0
 10318              		.cfi_startproc
 10319              	.LVL1481:
 10320 0000 4157     		pushq	%r15
 10321              		.cfi_def_cfa_offset 16
 10322              		.cfi_offset 15, -16
 10323 0002 4156     		pushq	%r14
 10324              		.cfi_def_cfa_offset 24
 10325              		.cfi_offset 14, -24
3380:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
3381:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16, tmp17;
3382:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1;
3383:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[DCTSIZE2];
3384:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
3385:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
3386:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3387:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
3388:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
3389:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3390:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
3391:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
3392:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
3393:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 8-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
3394:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3395:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3396:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
 10326              		.loc 1 3396 0
 10327 0004 4989F9   		movq	%rdi, %r9
3379:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
 10328              		.loc 1 3379 0
 10329 0007 4155     		pushq	%r13
 10330              		.cfi_def_cfa_offset 32
 10331              		.cfi_offset 13, -32
 10332 0009 4154     		pushq	%r12
 10333              		.cfi_def_cfa_offset 40
 10334              		.cfi_offset 12, -40
3397:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 10335              		.loc 1 3397 0
 10336 000b 4531DB   		xorl	%r11d, %r11d
3379:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
 10337              		.loc 1 3379 0
 10338 000e 55       		pushq	%rbp
 10339              		.cfi_def_cfa_offset 48
 10340              		.cfi_offset 6, -48
 10341 000f 53       		pushq	%rbx
 10342              		.cfi_def_cfa_offset 56
 10343              		.cfi_offset 3, -56
 10344 0010 4881EC48 		subq	$328, %rsp
 10344      010000
 10345              		.cfi_def_cfa_offset 384
3379:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6, tmp7;
 10346              		.loc 1 3379 0
 10347 0017 64488B04 		movq	%fs:40, %rax
 10347      25280000 
 10347      00
 10348 0020 48898424 		movq	%rax, 312(%rsp)
 10348      38010000 
 10349 0028 31C0     		xorl	%eax, %eax
 10350              	.LVL1482:
 10351 002a 89D0     		movl	%edx, %eax
 10352 002c 48897424 		movq	%rsi, 16(%rsp)
 10352      10
 10353 0031 48897C24 		movq	%rdi, 24(%rsp)
 10353      18
 10354 0036 48894424 		movq	%rax, 8(%rsp)
 10354      08
 10355 003b EB07     		jmp	.L171
 10356              	.LVL1483:
 10357 003d 0F1F00   		.p2align 4,,10
 10358              		.p2align 3
 10359              	.L179:
3398:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
3399:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
3400:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3401:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
3402:fltk-1.3.4-1/jpeg/jfdctint.c ****      * rotator "c1" should be "c6".
3403:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
3404:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3405:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[7]);
3406:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
3407:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
3408:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
3409:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3410:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp3;
3411:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
3412:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
3413:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
3414:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3415:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[7]);
3416:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
3417:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
3418:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
3419:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3420:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
3421:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM) ((tmp10 + tmp11 - 8 * CENTERJSAMPLE) << PASS1_BITS);
3422:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << PASS1_BITS);
3423:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3424:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_541196100);   /* c6 */
3425:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
3426:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
3427:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
3428:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM)
3429:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
3430:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
3431:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3432:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part per figure 8 --- note paper omits factor of sqrt(2).
3433:fltk-1.3.4-1/jpeg/jfdctint.c ****      * i0..i3 in the paper are tmp0..tmp3 here.
3434:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
3435:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3436:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 + tmp2;
3437:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
3438:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3439:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_1_175875602);   /*  c3 */
3440:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);      /* -c3+c5 */
3441:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);      /* -c3-c5 */
3442:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
3443:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
3444:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3445:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223);   /* -c3+c7 */
3446:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);          /*  c1+c3-c5-c7 */
3447:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);          /* -c1+c3+c5-c7 */
3448:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
3449:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += z1 + tmp13;
3450:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3451:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447);   /* -c1-c3 */
3452:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);          /*  c1+c3+c5-c7 */
3453:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);          /*  c1+c3-c5+c7 */
3454:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
3455:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += z1 + tmp12;
3456:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp0, CONST_BITS-PASS1_BITS);
3458:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
3459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
3460:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-PASS1_BITS);
3461:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3462:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
3463:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3464:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
3465:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == DCTSIZE * 2)
3466:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
3467:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 10360              		.loc 1 3467 0
 10361 0040 4983C120 		addq	$32, %r9
 10362              	.LVL1484:
 10363              	.L171:
3399:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10364              		.loc 1 3399 0
 10365 0044 488B5424 		movq	16(%rsp), %rdx
 10365      10
 10366 0049 4963C3   		movslq	%r11d, %rax
 10367 004c 4C8B5424 		movq	8(%rsp), %r10
 10367      08
 10368 0051 4C0314C2 		addq	(%rdx,%rax,8), %r10
 10369              	.LVL1485:
3408:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10370              		.loc 1 3408 0
 10371 0055 410FB66A 		movzbl	4(%r10), %ebp
 10371      04
3405:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 10372              		.loc 1 3405 0
 10373 005a 410FB632 		movzbl	(%r10), %esi
 10374 005e 450FB672 		movzbl	7(%r10), %r14d
 10374      07
3406:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 10375              		.loc 1 3406 0
 10376 0063 410FB64A 		movzbl	1(%r10), %ecx
 10376      01
 10377 0068 450FB66A 		movzbl	6(%r10), %r13d
 10377      06
3407:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 10378              		.loc 1 3407 0
 10379 006d 410FB652 		movzbl	2(%r10), %edx
 10379      02
 10380 0072 450FB662 		movzbl	5(%r10), %r12d
 10380      05
3408:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10381              		.loc 1 3408 0
 10382 0077 410FB642 		movzbl	3(%r10), %eax
 10382      03
3405:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 10383              		.loc 1 3405 0
 10384 007c 468D0436 		leal	(%rsi,%r14), %r8d
3415:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
 10385              		.loc 1 3415 0
 10386 0080 4429F6   		subl	%r14d, %esi
3406:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 10387              		.loc 1 3406 0
 10388 0083 428D3C29 		leal	(%rcx,%r13), %edi
3416:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
 10389              		.loc 1 3416 0
 10390 0087 4429E9   		subl	%r13d, %ecx
3415:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[6]);
 10391              		.loc 1 3415 0
 10392 008a 4863F6   		movslq	%esi, %rsi
3408:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10393              		.loc 1 3408 0
 10394 008d 448D3C28 		leal	(%rax,%rbp), %r15d
3407:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 10395              		.loc 1 3407 0
 10396 0091 428D1C22 		leal	(%rdx,%r12), %ebx
3405:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[6]);
 10397              		.loc 1 3405 0
 10398 0095 4D63C0   		movslq	%r8d, %r8
 10399              	.LVL1486:
3406:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[5]);
 10400              		.loc 1 3406 0
 10401 0098 4863FF   		movslq	%edi, %rdi
 10402              	.LVL1487:
3418:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10403              		.loc 1 3418 0
 10404 009b 29E8     		subl	%ebp, %eax
3417:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 10405              		.loc 1 3417 0
 10406 009d 4429E2   		subl	%r12d, %edx
3407:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) + GETJSAMPLE(elemptr[4]);
 10407              		.loc 1 3407 0
 10408 00a0 4863DB   		movslq	%ebx, %rbx
 10409              	.LVL1488:
3408:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10410              		.loc 1 3408 0
 10411 00a3 4D63FF   		movslq	%r15d, %r15
 10412              	.LVL1489:
3416:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[5]);
 10413              		.loc 1 3416 0
 10414 00a6 4863C9   		movslq	%ecx, %rcx
3410:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 10415              		.loc 1 3410 0
 10416 00a9 4F8D1438 		leaq	(%r8,%r15), %r10
 10417              	.LVL1490:
3411:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 10418              		.loc 1 3411 0
 10419 00ad 4D29F8   		subq	%r15, %r8
 10420              	.LVL1491:
3412:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 10421              		.loc 1 3412 0
 10422 00b0 4C8D3C1F 		leaq	(%rdi,%rbx), %r15
 10423              	.LVL1492:
3413:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10424              		.loc 1 3413 0
 10425 00b4 4829DF   		subq	%rbx, %rdi
 10426              	.LVL1493:
3417:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]) - GETJSAMPLE(elemptr[4]);
 10427              		.loc 1 3417 0
 10428 00b7 4863D2   		movslq	%edx, %rdx
 10429              	.LVL1494:
3418:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10430              		.loc 1 3418 0
 10431 00ba 4898     		cltq
 10432              	.LVL1495:
3421:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << PASS1_BITS);
 10433              		.loc 1 3421 0
 10434 00bc 4B8D9C3A 		leaq	-1024(%r10,%r15), %rbx
 10434      00FCFFFF 
3422:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10435              		.loc 1 3422 0
 10436 00c4 4D29FA   		subq	%r15, %r10
 10437              	.LVL1496:
 10438 00c7 49C1E202 		salq	$2, %r10
 10439 00cb 45895110 		movl	%r10d, 16(%r9)
 10440              	.LVL1497:
3424:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 10441              		.loc 1 3424 0
 10442 00cf 4D8D1438 		leaq	(%r8,%rdi), %r10
3421:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << PASS1_BITS);
 10443              		.loc 1 3421 0
 10444 00d3 48C1E302 		salq	$2, %rbx
3425:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 10445              		.loc 1 3425 0
 10446 00d7 4D69C07E 		imulq	$6270, %r8, %r8
 10446      180000
 10447              	.LVL1498:
3421:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) ((tmp10 - tmp11) << PASS1_BITS);
 10448              		.loc 1 3421 0
 10449 00de 418919   		movl	%ebx, (%r9)
3445:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);          /*  c1+c3-c5-c7 */
 10450              		.loc 1 3445 0
 10451 00e1 488D1C06 		leaq	(%rsi,%rax), %rbx
3424:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
 10452              		.loc 1 3424 0
 10453 00e5 4D69D251 		imulq	$4433, %r10, %r10
 10453      110000
 10454              	.LVL1499:
3428:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 10455              		.loc 1 3428 0
 10456 00ec 4869FFDF 		imulq	$-15137, %rdi, %rdi
 10456      C4FFFF
 10457              	.LVL1500:
3425:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 10458              		.loc 1 3425 0
 10459 00f3 4F8D8402 		leaq	1024(%r10,%r8), %r8
 10459      00040000 
3428:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 10460              		.loc 1 3428 0
 10461 00fb 498DBC3A 		leaq	1024(%r10,%rdi), %rdi
 10461      00040000 
3437:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10462              		.loc 1 3437 0
 10463 0103 4C8D1401 		leaq	(%rcx,%rax), %r10
 10464              	.LVL1501:
3425:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 10465              		.loc 1 3425 0
 10466 0107 49C1F80B 		sarq	$11, %r8
 10467 010b 45894108 		movl	%r8d, 8(%r9)
3436:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 10468              		.loc 1 3436 0
 10469 010f 4C8D0416 		leaq	(%rsi,%rdx), %r8
 10470              	.LVL1502:
3428:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 10471              		.loc 1 3428 0
 10472 0113 48C1FF0B 		sarq	$11, %rdi
 10473 0117 41897918 		movl	%edi, 24(%r9)
3439:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);      /* -c3+c5 */
 10474              		.loc 1 3439 0
 10475 011b 4B8D3C10 		leaq	(%r8,%r10), %rdi
3441:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 10476              		.loc 1 3441 0
 10477 011f 4D69D23B 		imulq	$-16069, %r10, %r10
 10477      C1FFFF
 10478              	.LVL1503:
3439:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);      /* -c3+c5 */
 10479              		.loc 1 3439 0
 10480 0126 4869FFA1 		imulq	$9633, %rdi, %rdi
 10480      250000
 10481              	.LVL1504:
3440:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);      /* -c3-c5 */
 10482              		.loc 1 3440 0
 10483 012d 4D69C084 		imulq	$-3196, %r8, %r8
 10483      F3FFFF
 10484              	.LVL1505:
3445:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);          /*  c1+c3-c5-c7 */
 10485              		.loc 1 3445 0
 10486 0134 4869DB33 		imulq	$-7373, %rbx, %rbx
 10486      E3FFFF
3442:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 10487              		.loc 1 3442 0
 10488 013b 4901F8   		addq	%rdi, %r8
 10489              	.LVL1506:
3443:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10490              		.loc 1 3443 0
 10491 013e 4C01D7   		addq	%r10, %rdi
 10492              	.LVL1507:
3446:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);          /* -c1+c3+c5-c7 */
 10493              		.loc 1 3446 0
 10494 0141 4869F60B 		imulq	$12299, %rsi, %rsi
 10494      300000
 10495              	.LVL1508:
3451:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);          /*  c1+c3+c5-c7 */
 10496              		.loc 1 3451 0
 10497 0148 4C8D1411 		leaq	(%rcx,%rdx), %r10
3447:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
 10498              		.loc 1 3447 0
 10499 014c 4869C08E 		imulq	$2446, %rax, %rax
 10499      090000
 10500              	.LVL1509:
3457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 10501              		.loc 1 3457 0
 10502 0153 498D2C18 		leaq	(%r8,%rbx), %rbp
3451:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);          /*  c1+c3+c5-c7 */
 10503              		.loc 1 3451 0
 10504 0157 4D69D2FD 		imulq	$-20995, %r10, %r10
 10504      ADFFFF
 10505              	.LVL1510:
3457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 10506              		.loc 1 3457 0
 10507 015e 488DB42E 		leaq	1024(%rsi,%rbp), %rsi
 10507      00040000 
 10508              	.LVL1511:
3452:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);          /*  c1+c3-c5+c7 */
 10509              		.loc 1 3452 0
 10510 0166 4869C954 		imulq	$25172, %rcx, %rcx
 10510      620000
 10511              	.LVL1512:
3453:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
 10512              		.loc 1 3453 0
 10513 016d 4869D2B3 		imulq	$16819, %rdx, %rdx
 10513      410000
 10514              	.LVL1513:
3457:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 10515              		.loc 1 3457 0
 10516 0174 48C1FE0B 		sarq	$11, %rsi
 10517 0178 41897104 		movl	%esi, 4(%r9)
3458:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 10518              		.loc 1 3458 0
 10519 017c 4A8D3417 		leaq	(%rdi,%r10), %rsi
3459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-PASS1_BITS);
 10520              		.loc 1 3459 0
 10521 0180 4D01D0   		addq	%r10, %r8
 10522              	.LVL1514:
3460:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10523              		.loc 1 3460 0
 10524 0183 4801DF   		addq	%rbx, %rdi
 10525              	.LVL1515:
 10526 0186 488D8438 		leaq	1024(%rax,%rdi), %rax
 10526      00040000 
3458:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 10527              		.loc 1 3458 0
 10528 018e 488D8C31 		leaq	1024(%rcx,%rsi), %rcx
 10528      00040000 
3459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-PASS1_BITS);
 10529              		.loc 1 3459 0
 10530 0196 4A8D9402 		leaq	1024(%rdx,%r8), %rdx
 10530      00040000 
3460:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10531              		.loc 1 3460 0
 10532 019e 48C1F80B 		sarq	$11, %rax
3458:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 10533              		.loc 1 3458 0
 10534 01a2 48C1F90B 		sarq	$11, %rcx
3459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-PASS1_BITS);
 10535              		.loc 1 3459 0
 10536 01a6 48C1FA0B 		sarq	$11, %rdx
3462:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10537              		.loc 1 3462 0
 10538 01aa 4183C301 		addl	$1, %r11d
 10539              	.LVL1516:
3464:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == DCTSIZE * 2)
 10540              		.loc 1 3464 0
 10541 01ae 4183FB08 		cmpl	$8, %r11d
3458:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 10542              		.loc 1 3458 0
 10543 01b2 4189490C 		movl	%ecx, 12(%r9)
3459:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[7] = (DCTELEM) DESCALE(tmp3, CONST_BITS-PASS1_BITS);
 10544              		.loc 1 3459 0
 10545 01b6 41895114 		movl	%edx, 20(%r9)
3460:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10546              		.loc 1 3460 0
 10547 01ba 4189411C 		movl	%eax, 28(%r9)
3464:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == DCTSIZE * 2)
 10548              		.loc 1 3464 0
 10549 01be 0F846903 		je	.L175
 10549      0000
3465:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 10550              		.loc 1 3465 0
 10551 01c4 4183FB10 		cmpl	$16, %r11d
 10552 01c8 0F8572FE 		jne	.L179
 10552      FFFF
3468:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
3469:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
3470:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3471:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3472:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
3473:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
3474:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
3475:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by 8/16 = 1/2.
3476:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 16-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/32).
3477:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3478:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3479:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3480:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
3481:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = DCTSIZE-1; ctr >= 0; ctr--) {
 10553              		.loc 1 3481 0
 10554 01ce 488D4424 		leaq	80(%rsp), %rax
 10554      50
 10555 01d3 4C8B7424 		movq	24(%rsp), %r14
 10555      18
 10556 01d8 488D5424 		leaq	48(%rsp), %rdx
 10556      30
 10557 01dd 48894424 		movq	%rax, 40(%rsp)
 10557      28
 10558              	.LVL1517:
 10559              		.p2align 4,,10
 10560 01e2 660F1F44 		.p2align 3
 10560      0000
 10561              	.L173:
3482:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3483:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3484:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*7];
 10562              		.loc 1 3484 0 discriminator 3
 10563 01e8 8BB2E000 		movl	224(%rdx), %esi
 10563      0000
 10564 01ee 458B06   		movl	(%r14), %r8d
3485:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*6];
3486:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*5];
3487:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
3488:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
3489:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
3490:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
3491:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] + wsptr[DCTSIZE*0];
 10565              		.loc 1 3491 0 discriminator 3
 10566 01f1 448B0A   		movl	(%rdx), %r9d
3487:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
 10567              		.loc 1 3487 0 discriminator 3
 10568 01f4 458B6E60 		movl	96(%r14), %r13d
3488:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
 10569              		.loc 1 3488 0 discriminator 3
 10570 01f8 418B8E80 		movl	128(%r14), %ecx
 10570      000000
3487:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
 10571              		.loc 1 3487 0 discriminator 3
 10572 01ff 4403AA80 		addl	128(%rdx), %r13d
 10572      000000
3488:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
 10573              		.loc 1 3488 0 discriminator 3
 10574 0206 034A60   		addl	96(%rdx), %ecx
 10575              		.loc 1 3491 0 discriminator 3
 10576 0209 458BA6E0 		movl	224(%r14), %r12d
 10576      000000
3484:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*6];
 10577              		.loc 1 3484 0 discriminator 3
 10578 0210 458D1430 		leal	(%r8,%rsi), %r10d
3485:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*5];
 10579              		.loc 1 3485 0 discriminator 3
 10580 0214 418B4620 		movl	32(%r14), %eax
 10581 0218 448BBAC0 		movl	192(%rdx), %r15d
 10581      000000
3492:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3493:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp7;
3494:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
3495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
3496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
3497:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
3498:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
3499:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
3500:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
3501:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*7];
 10582              		.loc 1 3502 0 discriminator 3
 10583 021f 4129F0   		subl	%esi, %r8d
3486:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
 10584              		.loc 1 3486 0 discriminator 3
 10585 0222 418B5E40 		movl	64(%r14), %ebx
3489:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
 10586              		.loc 1 3489 0 discriminator 3
 10587 0226 418BBEA0 		movl	160(%r14), %edi
 10587      000000
3484:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*6];
 10588              		.loc 1 3484 0 discriminator 3
 10589 022d 4D63D2   		movslq	%r10d, %r10
 10590              	.LVL1518:
3486:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
 10591              		.loc 1 3486 0 discriminator 3
 10592 0230 039AA000 		addl	160(%rdx), %ebx
 10592      0000
3489:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
 10593              		.loc 1 3489 0 discriminator 3
 10594 0236 037A40   		addl	64(%rdx), %edi
3491:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10595              		.loc 1 3491 0 discriminator 3
 10596 0239 4501CC   		addl	%r9d, %r12d
3490:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] + wsptr[DCTSIZE*0];
 10597              		.loc 1 3490 0 discriminator 3
 10598 023c 418BAEC0 		movl	192(%r14), %ebp
 10598      000000
 10599 0243 036A20   		addl	32(%rdx), %ebp
3488:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*2];
 10600              		.loc 1 3488 0 discriminator 3
 10601 0246 4863C9   		movslq	%ecx, %rcx
3491:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10602              		.loc 1 3491 0 discriminator 3
 10603 0249 4D63E4   		movslq	%r12d, %r12
3487:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*3];
 10604              		.loc 1 3487 0 discriminator 3
 10605 024c 4D63ED   		movslq	%r13d, %r13
3503:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*6];
3504:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
 10606              		.loc 1 3504 0 discriminator 3
 10607 024f 418B7640 		movl	64(%r14), %esi
3493:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp7;
 10608              		.loc 1 3493 0 discriminator 3
 10609 0253 4F8D1C22 		leaq	(%r10,%r12), %r11
 10610              		.loc 1 3504 0 discriminator 3
 10611 0257 2BB2A000 		subl	160(%rdx), %esi
 10611      0000
3494:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
 10612              		.loc 1 3494 0 discriminator 3
 10613 025d 4D29E2   		subq	%r12, %r10
 10614              	.LVL1519:
3499:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp17 = tmp3 - tmp4;
 10615              		.loc 1 3499 0 discriminator 3
 10616 0260 4D8D640D 		leaq	0(%r13,%rcx), %r12
 10616      00
3500:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10617              		.loc 1 3500 0 discriminator 3
 10618 0265 4929CD   		subq	%rcx, %r13
3505:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*4];
3506:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*3];
 10619              		.loc 1 3506 0 discriminator 3
 10620 0268 418B8E80 		movl	128(%r14), %ecx
 10620      000000
 10621 026f 2B4A60   		subl	96(%rdx), %ecx
3485:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*5];
 10622              		.loc 1 3485 0 discriminator 3
 10623 0272 4101C7   		addl	%eax, %r15d
3489:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + wsptr[DCTSIZE*1];
 10624              		.loc 1 3489 0 discriminator 3
 10625 0275 4863FF   		movslq	%edi, %rdi
3490:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] + wsptr[DCTSIZE*0];
 10626              		.loc 1 3490 0 discriminator 3
 10627 0278 4863ED   		movslq	%ebp, %rbp
3485:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*5];
 10628              		.loc 1 3485 0 discriminator 3
 10629 027b 4D63FF   		movslq	%r15d, %r15
 10630              	.LVL1520:
3486:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*4];
 10631              		.loc 1 3486 0 discriminator 3
 10632 027e 4863DB   		movslq	%ebx, %rbx
 10633              	.LVL1521:
3494:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp6;
 10634              		.loc 1 3494 0 discriminator 3
 10635 0281 4C895424 		movq	%r10, 24(%rsp)
 10635      18
 10636              	.LVL1522:
3495:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp6;
 10637              		.loc 1 3495 0 discriminator 3
 10638 0286 4D8D142F 		leaq	(%r15,%rbp), %r10
 10639              	.LVL1523:
3496:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp5;
 10640              		.loc 1 3496 0 discriminator 3
 10641 028a 4929EF   		subq	%rbp, %r15
 10642              	.LVL1524:
3497:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp5;
 10643              		.loc 1 3497 0 discriminator 3
 10644 028d 488D2C3B 		leaq	(%rbx,%rdi), %rbp
 10645              	.LVL1525:
3498:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 10646              		.loc 1 3498 0 discriminator 3
 10647 0291 4829FB   		subq	%rdi, %rbx
 10648              	.LVL1526:
3504:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*4];
 10649              		.loc 1 3504 0 discriminator 3
 10650 0294 4863F6   		movslq	%esi, %rsi
3498:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp3 + tmp4;
 10651              		.loc 1 3498 0 discriminator 3
 10652 0297 48895C24 		movq	%rbx, 32(%rsp)
 10652      20
 10653              	.LVL1527:
 10654              		.loc 1 3506 0 discriminator 3
 10655 029c 4863D9   		movslq	%ecx, %rbx
3504:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*4];
 10656              		.loc 1 3504 0 discriminator 3
 10657 029f 48897424 		movq	%rsi, 8(%rsp)
 10657      08
 10658              		.loc 1 3506 0 discriminator 3
 10659 02a4 4889DE   		movq	%rbx, %rsi
3507:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*2];
3508:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*1];
3509:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] - wsptr[DCTSIZE*0];
 10660              		.loc 1 3509 0 discriminator 3
 10661 02a7 418B9EE0 		movl	224(%r14), %ebx
 10661      000000
3503:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
 10662              		.loc 1 3503 0 discriminator 3
 10663 02ae 2B82C000 		subl	192(%rdx), %eax
 10663      0000
 10664              	.LVL1528:
3507:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*2];
 10665              		.loc 1 3507 0 discriminator 3
 10666 02b4 418B8EA0 		movl	160(%r14), %ecx
 10666      000000
3508:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] - wsptr[DCTSIZE*0];
 10667              		.loc 1 3508 0 discriminator 3
 10668 02bb 418BBEC0 		movl	192(%r14), %edi
 10668      000000
 10669              	.LVL1529:
3502:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*6];
 10670              		.loc 1 3502 0 discriminator 3
 10671 02c2 4D63C0   		movslq	%r8d, %r8
 10672              	.LVL1530:
3507:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*1];
 10673              		.loc 1 3507 0 discriminator 3
 10674 02c5 2B4A40   		subl	64(%rdx), %ecx
 10675              	.LVL1531:
3508:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] - wsptr[DCTSIZE*0];
 10676              		.loc 1 3508 0 discriminator 3
 10677 02c8 2B7A20   		subl	32(%rdx), %edi
 10678              		.loc 1 3509 0 discriminator 3
 10679 02cb 4429CB   		subl	%r9d, %ebx
 10680 02ce 4C63CB   		movslq	%ebx, %r9
3510:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3511:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 10681              		.loc 1 3511 0 discriminator 3
 10682 02d1 4B8D1C13 		leaq	(%r11,%r10), %rbx
3512:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+1);
3513:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 10683              		.loc 1 3513 0 discriminator 3
 10684 02d5 4D29E3   		subq	%r12, %r11
 10685              	.LVL1532:
 10686 02d8 4929EA   		subq	%rbp, %r10
 10687              	.LVL1533:
3503:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
 10688              		.loc 1 3503 0 discriminator 3
 10689 02db 4898     		cltq
3511:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+1);
 10690              		.loc 1 3511 0 discriminator 3
 10691 02dd 4801EB   		addq	%rbp, %rbx
3503:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*5];
 10692              		.loc 1 3503 0 discriminator 3
 10693 02e0 48894424 		movq	%rax, 16(%rsp)
 10693      10
 10694              	.LVL1534:
3505:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*3];
 10695              		.loc 1 3505 0 discriminator 3
 10696 02e5 418B4660 		movl	96(%r14), %eax
 10697              		.loc 1 3513 0 discriminator 3
 10698 02e9 4D69DBCF 		imulq	$10703, %r11, %r11
 10698      290000
3511:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+1);
 10699              		.loc 1 3511 0 discriminator 3
 10700 02f0 498D5C1C 		leaq	4(%r12,%rbx), %rbx
 10700      04
3505:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*3];
 10701              		.loc 1 3505 0 discriminator 3
 10702 02f5 2B828000 		subl	128(%rdx), %eax
 10702      0000
 10703              		.loc 1 3513 0 discriminator 3
 10704 02fb 4D69D251 		imulq	$4433, %r10, %r10
 10704      110000
3508:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp7 = dataptr[DCTSIZE*7] - wsptr[DCTSIZE*0];
 10705              		.loc 1 3508 0 discriminator 3
 10706 0302 4863FF   		movslq	%edi, %rdi
3507:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - wsptr[DCTSIZE*1];
 10707              		.loc 1 3507 0 discriminator 3
 10708 0305 4863C9   		movslq	%ecx, %rcx
3511:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 + tmp12 + tmp13, PASS1_BITS+1);
 10709              		.loc 1 3511 0 discriminator 3
 10710 0308 48C1FB03 		sarq	$3, %rbx
 10711 030c 41891E   		movl	%ebx, (%r14)
 10712              	.LVL1535:
3514:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
3515:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX_0_541196100),   /* c12[16] = c6[8] */
3516:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
3517:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3518:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp17 - tmp15, FIX(0.275899379)) +   /* c14[16] = c7[8] */
 10713              		.loc 1 3518 0 discriminator 3
 10714 030f 488B6C24 		movq	24(%rsp), %rbp
 10714      18
 10715              	.LVL1536:
 10716 0314 4C8B6424 		movq	32(%rsp), %r12
 10716      20
 10717              	.LVL1537:
3505:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*3];
 10718              		.loc 1 3505 0 discriminator 3
 10719 0319 4898     		cltq
 10720              	.LVL1538:
3519:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
3520:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3521:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
3522:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
3523:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(2.172734804)),        /* c2+c10 */
3524:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
3525:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
3526:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
3527:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp17, FIX(1.061594338)),        /* c10+c14 */
3528:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS+1);
3529:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3530:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3531:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3532:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp1, FIX(1.353318001)) +         /* c3 */
3533:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
3534:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(1.247225013)) +         /* c5 */
3535:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
3536:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(1.093201867)) +         /* c7 */
3537:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
3538:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = MULTIPLY(tmp1 + tmp2, FIX(0.138617169)) +         /* c15 */
3539:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
3540:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = MULTIPLY(tmp1 + tmp3, - FIX(0.666655658)) +       /* -c11 */
 10721              		.loc 1 3540 0 discriminator 3
 10722 031b 48897424 		movq	%rsi, 24(%rsp)
 10722      18
3513:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 10723              		.loc 1 3513 0 discriminator 3
 10724 0320 4F8D9413 		leaq	32768(%r11,%r10), %r10
 10724      00800000 
3518:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 10725              		.loc 1 3518 0 discriminator 3
 10726 0328 4D89EB   		movq	%r13, %r11
3536:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 10727              		.loc 1 3536 0 discriminator 3
 10728 032b 498D1C00 		leaq	(%r8,%rax), %rbx
3518:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 10729              		.loc 1 3518 0 discriminator 3
 10730 032f 4D29FB   		subq	%r15, %r11
3513:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(1.306562965)) + /* c4[16] = c2[8] */
 10731              		.loc 1 3513 0 discriminator 3
 10732 0332 49C1FA10 		sarq	$16, %r10
 10733 0336 45899680 		movl	%r10d, 128(%r14)
 10733      000000
 10734              	.LVL1539:
3518:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 10735              		.loc 1 3518 0 discriminator 3
 10736 033d 4989EA   		movq	%rbp, %r10
 10737 0340 4D29E2   		subq	%r12, %r10
 10738 0343 4D69DBD4 		imulq	$2260, %r11, %r11
 10738      080000
 10739 034a 4D69D263 		imulq	$11363, %r10, %r10
 10739      2C0000
3521:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 10740              		.loc 1 3521 0 discriminator 3
 10741 0351 4D69FF75 		imulq	$11893, %r15, %r15
 10741      2E0000
 10742              	.LVL1540:
3518:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp14 - tmp16, FIX(1.387039845));    /* c2[16] = c1[8] */
 10743              		.loc 1 3518 0 discriminator 3
 10744 0358 4D01DA   		addq	%r11, %r10
 10745              	.LVL1541:
3521:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 10746              		.loc 1 3521 0 discriminator 3
 10747 035b 4D01D7   		addq	%r10, %r15
 10748 035e 4D69DC87 		imulq	$17799, %r12, %r11
 10748      450000
3525:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 10749              		.loc 1 3525 0 discriminator 3
 10750 0365 4D69ED07 		imulq	$-8697, %r13, %r13
 10750      DEFFFF
 10751              	.LVL1542:
3521:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 10752              		.loc 1 3521 0 discriminator 3
 10753 036c 4F8D9C1F 		leaq	32768(%r15,%r11), %r11
 10753      00800000 
3532:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 10754              		.loc 1 3532 0 discriminator 3
 10755 0374 4C8B7C24 		movq	16(%rsp), %r15
 10755      10
3521:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp15, FIX(1.451774982))   /* c6+c14 */
 10756              		.loc 1 3521 0 discriminator 3
 10757 0379 49C1FB10 		sarq	$16, %r11
 10758 037d 45895E40 		movl	%r11d, 64(%r14)
 10759              	.LVL1543:
3525:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 10760              		.loc 1 3525 0 discriminator 3
 10761 0381 4C69DD3E 		imulq	$-1730, %rbp, %r11
 10761      F9FFFF
3534:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 10762              		.loc 1 3534 0 discriminator 3
 10763 0388 488B6C24 		movq	8(%rsp), %rbp
 10763      08
 10764 038d 4D8D2428 		leaq	(%r8,%rbp), %r12
3525:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 10765              		.loc 1 3525 0 discriminator 3
 10766 0391 4D01DA   		addq	%r11, %r10
 10767              	.LVL1544:
 10768 0394 4F8D942A 		leaq	32768(%r10,%r13), %r10
 10768      00800000 
3532:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 10769              		.loc 1 3532 0 discriminator 3
 10770 039c 4F8D2C38 		leaq	(%r8,%r15), %r13
3534:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 10771              		.loc 1 3534 0 discriminator 3
 10772 03a0 4D69E4E9 		imulq	$10217, %r12, %r12
 10772      270000
3525:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(0.211164243))   /* c2-c6 */
 10773              		.loc 1 3525 0 discriminator 3
 10774 03a7 49C1FA10 		sarq	$16, %r10
 10775 03ab 458996C0 		movl	%r10d, 192(%r14)
 10775      000000
 10776              	.LVL1545:
3532:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 10777              		.loc 1 3532 0 discriminator 3
 10778 03b2 4989FA   		movq	%rdi, %r10
 10779 03b5 4D29CA   		subq	%r9, %r10
 10780 03b8 4D69D223 		imulq	$3363, %r10, %r10
 10780      0D0000
 10781 03bf 4D69ED4E 		imulq	$11086, %r13, %r13
 10781      2B0000
3536:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 10782              		.loc 1 3536 0 discriminator 3
 10783 03c6 4C69DBFC 		imulq	$8956, %rbx, %r11
 10783      220000
 10784 03cd 4889F3   		movq	%rsi, %rbx
 10785 03d0 4C29CB   		subq	%r9, %rbx
3532:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp7, FIX(0.410524528));          /* c13 */
 10786              		.loc 1 3532 0 discriminator 3
 10787 03d3 4D01D5   		addq	%r10, %r13
 10788              	.LVL1546:
3534:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 10789              		.loc 1 3534 0 discriminator 3
 10790 03d6 4E8D1409 		leaq	(%rcx,%r9), %r10
3541:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
3542:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = MULTIPLY(tmp2 + tmp3, - FIX(1.353318001)) +       /* -c3 */
3543:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
3544:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
3545:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp0, FIX(2.286341144)) +                /* c7+c5+c3-c1 */
3546:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp7, FIX(0.779653625));                 /* c15+c13-c11+c9 */
3547:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 += tmp14 + tmp15 + MULTIPLY(tmp1, FIX(0.071888074)) /* c9-c3-c15+c11 */
3548:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     - MULTIPLY(tmp6, FIX(1.663905119));              /* c7+c13+c1-c5 */
3549:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp14 + tmp16 - MULTIPLY(tmp2, FIX(1.125726048)) /* c7+c5+c15-c3 */
3550:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp5, FIX(1.227391138));              /* c9-c11+c1-c13 */
3551:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp15 + tmp16 + MULTIPLY(tmp3, FIX(1.065388962)) /* c15+c3+c11-c7 */
3552:fltk-1.3.4-1/jpeg/jfdctint.c **** 	     + MULTIPLY(tmp4, FIX(2.167985692));              /* c1+c13+c5-c9 */
3553:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3554:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp10, CONST_BITS+PASS1_BITS+1);
 10791              		.loc 1 3554 0 discriminator 3
 10792 03da 4D69C0D6 		imulq	$-18730, %r8, %r8
 10792      B6FFFF
 10793              	.LVL1547:
3534:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 10794              		.loc 1 3534 0 discriminator 3
 10795 03e1 4D69D255 		imulq	$5461, %r10, %r10
 10795      150000
 10796              		.loc 1 3554 0 discriminator 3
 10797 03e8 4D69C9F3 		imulq	$6387, %r9, %r9
 10797      180000
 10798              	.LVL1548:
3534:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 + tmp7, FIX(0.666655658));          /* c11 */
 10799              		.loc 1 3534 0 discriminator 3
 10800 03ef 4D01D4   		addq	%r10, %r12
 10801              	.LVL1549:
3536:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 - tmp7, FIX(0.897167586));          /* c9 */
 10802              		.loc 1 3536 0 discriminator 3
 10803 03f2 4C69D3B6 		imulq	$7350, %rbx, %r10
 10803      1C0000
 10804 03f9 4B8D1C13 		leaq	(%r11,%r10), %rbx
 10805              	.LVL1550:
3538:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp6 - tmp5, FIX(1.407403738));          /* c1 */
 10806              		.loc 1 3538 0 discriminator 3
 10807 03fd 4989EB   		movq	%rbp, %r11
 10808 0400 4D01FB   		addq	%r15, %r11
 10809 0403 4969EB70 		imulq	$1136, %r11, %rbp
 10809      040000
 10810 040a 4989FB   		movq	%rdi, %r11
 10811 040d 4929CB   		subq	%rcx, %r11
 10812 0410 4D69D309 		imulq	$11529, %r11, %r10
 10812      2D0000
 10813 0417 4E8D5C15 		leaq	0(%rbp,%r10), %r11
 10813      00
 10814              	.LVL1551:
3540:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 10815              		.loc 1 3540 0 discriminator 3
 10816 041c 498D2C07 		leaq	(%r15,%rax), %rbp
 10817 0420 4C69FDAB 		imulq	$-5461, %rbp, %r15
 10817      EAFFFF
 10818 0427 488D2C3E 		leaq	(%rsi,%rdi), %rbp
3542:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 10819              		.loc 1 3542 0 discriminator 3
 10820 042b 488B7424 		movq	8(%rsp), %rsi
 10820      08
 10821              	.LVL1552:
3540:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, - FIX(1.247225013));        /* -c5 */
 10822              		.loc 1 3540 0 discriminator 3
 10823 0430 4C69D517 		imulq	$-10217, %rbp, %r10
 10823      D8FFFF
 10824 0437 4B8D2C17 		leaq	(%r15,%r10), %rbp
 10825              	.LVL1553:
3542:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp4, FIX(0.410524528));          /* c13 */
 10826              		.loc 1 3542 0 discriminator 3
 10827 043b 4C8D1406 		leaq	(%rsi,%rax), %r10
 10828 043f 4889CE   		movq	%rcx, %rsi
 10829 0442 482B7424 		subq	24(%rsp), %rsi
 10829      18
 10830 0447 4D69FAB2 		imulq	$-11086, %r10, %r15
 10830      D4FFFF
 10831 044e 4C69D623 		imulq	$3363, %rsi, %r10
 10831      0D0000
 10832 0455 4D01FA   		addq	%r15, %r10
 10833              	.LVL1554:
 10834              		.loc 1 3554 0 discriminator 3
 10835 0458 4F8D7C25 		leaq	0(%r13,%r12), %r15
 10835      00
 10836 045d 4901DF   		addq	%rbx, %r15
 10837 0460 4D01F8   		addq	%r15, %r8
 10838 0463 4F8D8408 		leaq	32768(%r8,%r9), %r8
 10838      00800000 
 10839 046b 49C1F810 		sarq	$16, %r8
3555:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS+1);
 10840              		.loc 1 3555 0 discriminator 3
 10841 046f 4C694C24 		imulq	$589, 16(%rsp), %r9
 10841      104D0200 
 10841      00
 10842              	.LVL1555:
3556:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+1);
 10843              		.loc 1 3556 0 discriminator 3
 10844 0478 48697424 		imulq	$-9222, 8(%rsp), %rsi
 10844      08FADBFF 
 10844      FF
 10845              	.LVL1556:
 10846 0481 4869C947 		imulq	$10055, %rcx, %rcx
 10846      270000
 10847              	.LVL1557:
3554:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS+1);
 10848              		.loc 1 3554 0 discriminator 3
 10849 0488 45894620 		movl	%r8d, 32(%r14)
3555:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS+1);
 10850              		.loc 1 3555 0 discriminator 3
 10851 048c 4D8D042B 		leaq	(%r11,%rbp), %r8
 10852              		.loc 1 3556 0 discriminator 3
 10853 0490 4D01D3   		addq	%r10, %r11
 10854              	.LVL1558:
3557:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+1);
 10855              		.loc 1 3557 0 discriminator 3
 10856 0493 4901EA   		addq	%rbp, %r10
 10857              	.LVL1559:
3558:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3559:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 10858              		.loc 1 3559 0 discriminator 3
 10859 0496 4983C604 		addq	$4, %r14
 10860              	.LVL1560:
3560:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 10861              		.loc 1 3560 0 discriminator 3
 10862 049a 4883C204 		addq	$4, %rdx
 10863              	.LVL1561:
3557:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+1);
 10864              		.loc 1 3557 0 discriminator 3
 10865 049e 4869C018 		imulq	$8728, %rax, %rax
 10865      220000
 10866              	.LVL1562:
3555:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+1);
 10867              		.loc 1 3555 0 discriminator 3
 10868 04a5 4869FFC1 		imulq	$-13631, %rdi, %rdi
 10868      CAFFFF
 10869              	.LVL1563:
 10870 04ac 4D01C8   		addq	%r9, %r8
3556:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+1);
 10871              		.loc 1 3556 0 discriminator 3
 10872 04af 4C01DE   		addq	%r11, %rsi
 10873 04b2 4801F1   		addq	%rsi, %rcx
 10874 04b5 498D8C0C 		leaq	32768(%r12,%rcx), %rcx
 10874      00800000 
3557:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10875              		.loc 1 3557 0 discriminator 3
 10876 04bd 4901C2   		addq	%rax, %r10
3555:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+1);
 10877              		.loc 1 3555 0 discriminator 3
 10878 04c0 4901F8   		addq	%rdi, %r8
3556:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+1);
 10879              		.loc 1 3556 0 discriminator 3
 10880 04c3 48C1F910 		sarq	$16, %rcx
3555:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+1);
 10881              		.loc 1 3555 0 discriminator 3
 10882 04c7 4B8DBC05 		leaq	32768(%r13,%r8), %rdi
 10882      00800000 
3556:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS+1);
 10883              		.loc 1 3556 0 discriminator 3
 10884 04cf 41898E9C 		movl	%ecx, 156(%r14)
 10884      000000
 10885              	.LVL1564:
3557:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10886              		.loc 1 3557 0 discriminator 3
 10887 04d6 48694C24 		imulq	$17760, 24(%rsp), %rcx
 10887      18604500 
 10887      00
3555:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS+1);
 10888              		.loc 1 3555 0 discriminator 3
 10889 04df 48C1FF10 		sarq	$16, %rdi
 10890 04e3 41897E5C 		movl	%edi, 92(%r14)
 10891              	.LVL1565:
3557:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 10892              		.loc 1 3557 0 discriminator 3
 10893 04e7 4901CA   		addq	%rcx, %r10
 10894 04ea 4A8D8413 		leaq	32768(%rbx,%r10), %rax
 10894      00800000 
 10895 04f2 48C1F810 		sarq	$16, %rax
 10896 04f6 418986DC 		movl	%eax, 220(%r14)
 10896      000000
 10897              	.LVL1566:
3481:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 10898              		.loc 1 3481 0 discriminator 3
 10899 04fd 483B5424 		cmpq	40(%rsp), %rdx
 10899      28
 10900 0502 0F85E0FC 		jne	.L173
 10900      FFFF
3561:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3562:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 10901              		.loc 1 3562 0
 10902 0508 488B8424 		movq	312(%rsp), %rax
 10902      38010000 
 10903 0510 64483304 		xorq	%fs:40, %rax
 10903      25280000 
 10903      00
 10904 0519 751C     		jne	.L180
 10905 051b 4881C448 		addq	$328, %rsp
 10905      010000
 10906              		.cfi_remember_state
 10907              		.cfi_def_cfa_offset 56
 10908 0522 5B       		popq	%rbx
 10909              		.cfi_def_cfa_offset 48
 10910 0523 5D       		popq	%rbp
 10911              		.cfi_def_cfa_offset 40
 10912              	.LVL1567:
 10913 0524 415C     		popq	%r12
 10914              		.cfi_def_cfa_offset 32
 10915 0526 415D     		popq	%r13
 10916              		.cfi_def_cfa_offset 24
 10917 0528 415E     		popq	%r14
 10918              		.cfi_def_cfa_offset 16
 10919              	.LVL1568:
 10920 052a 415F     		popq	%r15
 10921              		.cfi_def_cfa_offset 8
 10922 052c C3       		ret
 10923              	.LVL1569:
 10924              	.L175:
 10925              		.cfi_restore_state
3469:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 10926              		.loc 1 3469 0
 10927 052d 4C8D4C24 		leaq	48(%rsp), %r9
 10927      30
 10928              	.LVL1570:
 10929 0532 E90DFBFF 		jmp	.L171
 10929      FF
 10930              	.LVL1571:
 10931              	.L180:
 10932              		.loc 1 3562 0
 10933 0537 E8000000 		call	__stack_chk_fail
 10933      00
 10934              	.LVL1572:
 10935              		.cfi_endproc
 10936              	.LFE85:
 10938              		.section	.text.unlikely.jpeg_fdct_8x16
 10939              	.LCOLDE24:
 10940              		.section	.text.jpeg_fdct_8x16
 10941              	.LHOTE24:
 10942              		.section	.text.unlikely.jpeg_fdct_7x14,"ax",@progbits
 10943              	.LCOLDB25:
 10944              		.section	.text.jpeg_fdct_7x14,"ax",@progbits
 10945              	.LHOTB25:
 10946              		.p2align 4,,15
 10947              		.globl	jpeg_fdct_7x14
 10949              	jpeg_fdct_7x14:
 10950              	.LFB86:
3563:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3564:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3565:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3566:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 7x14 sample block.
3567:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3568:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 7-point FDCT in pass 1 (rows), 14-point in pass 2 (columns).
3569:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3570:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3571:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3572:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_7x14 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3573:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 10951              		.loc 1 3573 0
 10952              		.cfi_startproc
 10953              	.LVL1573:
 10954 0000 4157     		pushq	%r15
 10955              		.cfi_def_cfa_offset 16
 10956              		.cfi_offset 15, -16
 10957 0002 4156     		pushq	%r14
 10958              		.cfi_def_cfa_offset 24
 10959              		.cfi_offset 14, -24
 10960 0004 4989FF   		movq	%rdi, %r15
 10961 0007 4155     		pushq	%r13
 10962              		.cfi_def_cfa_offset 32
 10963              		.cfi_offset 13, -32
 10964 0009 4154     		pushq	%r12
 10965              		.cfi_def_cfa_offset 40
 10966              		.cfi_offset 12, -40
 10967              	.LBB102:
 10968              	.LBB103:
 10969              		.loc 2 90 0
 10970 000b 4883C708 		addq	$8, %rdi
 10971              	.LVL1574:
 10972              	.LBE103:
 10973              	.LBE102:
 10974              		.loc 1 3573 0
 10975 000f 55       		pushq	%rbp
 10976              		.cfi_def_cfa_offset 48
 10977              		.cfi_offset 6, -48
 10978 0010 53       		pushq	%rbx
 10979              		.cfi_def_cfa_offset 56
 10980              		.cfi_offset 3, -56
 10981              	.LBB106:
 10982              	.LBB104:
 10983              		.loc 2 90 0
 10984 0011 4C89F9   		movq	%r15, %rcx
 10985 0014 89D2     		movl	%edx, %edx
 10986 0016 4D89FA   		movq	%r15, %r10
 10987              	.LBE104:
 10988              	.LBE106:
3574:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
3575:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
3576:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1, z2, z3;
3577:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*6];
3578:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
3579:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
3580:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3581:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
3582:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
3583:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3584:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
3585:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
3586:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3587:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
3588:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
3589:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
3590:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 7-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/14).
3591:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3592:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3593:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3594:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 10989              		.loc 1 3594 0
 10990 0019 4531DB   		xorl	%r11d, %r11d
3573:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 10991              		.loc 1 3573 0
 10992 001c 4881ECF8 		subq	$248, %rsp
 10992      000000
 10993              		.cfi_def_cfa_offset 304
3573:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5, tmp6;
 10994              		.loc 1 3573 0
 10995 0023 64488B04 		movq	%fs:40, %rax
 10995      25280000 
 10995      00
 10996 002c 48898424 		movq	%rax, 232(%rsp)
 10996      E8000000 
 10997 0034 31C0     		xorl	%eax, %eax
 10998              	.LVL1575:
 10999              	.LBB107:
 11000              	.LBB105:
 11001              		.loc 2 90 0
 11002 0036 48C747F8 		movq	$0, -8(%rdi)
 11002      00000000 
 11003 003e 48C787F0 		movq	$0, 240(%rdi)
 11003      00000000 
 11003      000000
 11004 0049 4883E7F8 		andq	$-8, %rdi
 11005 004d 4829F9   		subq	%rdi, %rcx
 11006 0050 81C10001 		addl	$256, %ecx
 11006      0000
 11007 0056 C1E903   		shrl	$3, %ecx
 11008 0059 F348AB   		rep stosq
 11009              	.LVL1576:
 11010 005c EB06     		jmp	.L182
 11011              	.LVL1577:
 11012 005e 6690     		.p2align 4,,10
 11013              		.p2align 3
 11014              	.L190:
 11015              	.LBE105:
 11016              	.LBE107:
3595:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
3596:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
3597:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3598:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3599:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3600:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[6]);
3601:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
3602:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[4]);
3603:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
3604:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3605:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[6]);
3606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[5]);
3607:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[4]);
3608:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3609:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = tmp0 + tmp2;
3610:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
3611:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
3612:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
3613:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += tmp3;
3614:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
3615:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
3616:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.353553391));                /* (c2+c6-c4)/2 */
3617:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(0.920609002));       /* (c2+c4-c6)/2 */
3618:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
3619:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS-PASS1_BITS);
3620:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
3621:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(0.881747734));       /* c4 */
3622:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
3623:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
3624:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
3625:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[6] = (DCTELEM) DESCALE(z1 + z2, CONST_BITS-PASS1_BITS);
3626:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3627:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3628:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp10 + tmp11, FIX(0.935414347));   /* (c3+c1-c5)/2 */
3630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.170262339));   /* (c3+c5-c1)/2 */
3631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
3632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
3633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.378756276)); /* -c1 */
3634:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
3635:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp10 + tmp12, FIX(0.613604268));   /* c5 */
3636:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += tmp3;
3637:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += tmp3 + MULTIPLY(tmp12, FIX(1.870828693));   /* c3+c1-c5 */
3638:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3639:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) DESCALE(tmp0, CONST_BITS-PASS1_BITS);
3640:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
3641:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
3642:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3643:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
3644:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3645:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
3646:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 14)
3647:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
3648:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 11017              		.loc 1 3648 0
 11018 0060 4983C220 		addq	$32, %r10
 11019              	.LVL1578:
 11020              	.L182:
3596:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11021              		.loc 1 3596 0
 11022 0064 4963C3   		movslq	%r11d, %rax
 11023 0067 4989D5   		movq	%rdx, %r13
 11024 006a 4C032CC6 		addq	(%rsi,%rax,8), %r13
 11025              	.LVL1579:
3600:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 11026              		.loc 1 3600 0
 11027 006e 450FB675 		movzbl	6(%r13), %r14d
 11027      06
3602:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
 11028              		.loc 1 3602 0
 11029 0073 450FB645 		movzbl	4(%r13), %r8d
 11029      04
3600:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 11030              		.loc 1 3600 0
 11031 0078 410FB645 		movzbl	0(%r13), %eax
 11031      00
3602:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
 11032              		.loc 1 3602 0
 11033 007d 450FB64D 		movzbl	2(%r13), %r9d
 11033      02
3601:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[4]);
 11034              		.loc 1 3601 0
 11035 0082 450FB665 		movzbl	5(%r13), %r12d
 11035      05
 11036 0087 410FB64D 		movzbl	1(%r13), %ecx
 11036      01
3603:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11037              		.loc 1 3603 0
 11038 008c 450FB66D 		movzbl	3(%r13), %r13d
 11038      03
 11039              	.LVL1580:
3600:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 11040              		.loc 1 3600 0
 11041 0091 428D1C30 		leal	(%rax,%r14), %ebx
3602:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
 11042              		.loc 1 3602 0
 11043 0095 438D2C01 		leal	(%r9,%r8), %ebp
3607:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11044              		.loc 1 3607 0
 11045 0099 4529C1   		subl	%r8d, %r9d
3601:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[4]);
 11046              		.loc 1 3601 0
 11047 009c 428D3C21 		leal	(%rcx,%r12), %edi
3606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[4]);
 11048              		.loc 1 3606 0
 11049 00a0 4429E1   		subl	%r12d, %ecx
3605:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[5]);
 11050              		.loc 1 3605 0
 11051 00a3 4429F0   		subl	%r14d, %eax
3602:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = GETJSAMPLE(elemptr[3]);
 11052              		.loc 1 3602 0
 11053 00a6 4863ED   		movslq	%ebp, %rbp
3600:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[5]);
 11054              		.loc 1 3600 0
 11055 00a9 4863DB   		movslq	%ebx, %rbx
 11056              	.LVL1581:
3605:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[5]);
 11057              		.loc 1 3605 0
 11058 00ac 4898     		cltq
3609:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
 11059              		.loc 1 3609 0
 11060 00ae 4C8D042B 		leaq	(%rbx,%rbp), %r8
3601:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[4]);
 11061              		.loc 1 3601 0
 11062 00b2 4863FF   		movslq	%edi, %rdi
 11063              	.LVL1582:
3606:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[4]);
 11064              		.loc 1 3606 0
 11065 00b5 4863C9   		movslq	%ecx, %rcx
 11066              	.LVL1583:
3618:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS-PASS1_BITS);
 11067              		.loc 1 3618 0
 11068 00b8 4989FE   		movq	%rdi, %r14
3607:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11069              		.loc 1 3607 0
 11070 00bb 4D63C9   		movslq	%r9d, %r9
 11071              	.LVL1584:
3611:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 11072              		.loc 1 3611 0
 11073 00be 4E8D2407 		leaq	(%rdi,%r8), %r12
3618:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS-PASS1_BITS);
 11074              		.loc 1 3618 0
 11075 00c2 4929EE   		subq	%rbp, %r14
3611:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 11076              		.loc 1 3611 0
 11077 00c5 4F8DA425 		leaq	-896(%r13,%r12), %r12
 11077      80FCFFFF 
3613:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 11078              		.loc 1 3613 0
 11079 00cd 4D01ED   		addq	%r13, %r13
 11080              	.LVL1585:
3614:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= tmp3;
 11081              		.loc 1 3614 0
 11082 00d0 4D29E8   		subq	%r13, %r8
 11083              	.LVL1586:
3611:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 11084              		.loc 1 3611 0
 11085 00d3 49C1E402 		salq	$2, %r12
3615:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(z1, FIX(0.353553391));                /* (c2+c6-c4)/2 */
 11086              		.loc 1 3615 0
 11087 00d7 4D29E8   		subq	%r13, %r8
 11088              	.LVL1587:
3611:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((z1 + tmp1 + tmp3 - 7 * CENTERJSAMPLE) << PASS1_BITS);
 11089              		.loc 1 3611 0
 11090 00da 458922   		movl	%r12d, (%r10)
 11091              	.LVL1588:
3617:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
 11092              		.loc 1 3617 0
 11093 00dd 4989DC   		movq	%rbx, %r12
3621:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 11094              		.loc 1 3621 0
 11095 00e0 4829FB   		subq	%rdi, %rbx
 11096              	.LVL1589:
3617:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
 11097              		.loc 1 3617 0
 11098 00e3 4929EC   		subq	%rbp, %r12
 11099              	.LVL1590:
3622:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 11100              		.loc 1 3622 0
 11101 00e6 4C29EF   		subq	%r13, %rdi
 11102              	.LVL1591:
3616:fltk-1.3.4-1/jpeg/jfdctint.c ****     z2 = MULTIPLY(tmp0 - tmp2, FIX(0.920609002));       /* (c2+c4-c6)/2 */
 11103              		.loc 1 3616 0
 11104 00e9 4D69C050 		imulq	$2896, %r8, %r8
 11104      0B0000
 11105              	.LVL1592:
3617:fltk-1.3.4-1/jpeg/jfdctint.c ****     z3 = MULTIPLY(tmp1 - tmp2, FIX(0.314692123));       /* c6 */
 11106              		.loc 1 3617 0
 11107 00f0 4D69E476 		imulq	$7542, %r12, %r12
 11107      1D0000
 11108              	.LVL1593:
3618:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(z1 + z2 + z3, CONST_BITS-PASS1_BITS);
 11109              		.loc 1 3618 0
 11110 00f7 4969EE12 		imulq	$2578, %r14, %rbp
 11110      0A0000
 11111              	.LVL1594:
3619:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 11112              		.loc 1 3619 0
 11113 00fe 4F8D3420 		leaq	(%r8,%r12), %r14
3625:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11114              		.loc 1 3625 0
 11115 0102 4D29E0   		subq	%r12, %r8
 11116              	.LVL1595:
3621:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
 11117              		.loc 1 3621 0
 11118 0105 4869DB37 		imulq	$7223, %rbx, %rbx
 11118      1C0000
3622:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 11119              		.loc 1 3622 0
 11120 010c 4869FF5F 		imulq	$-5793, %rdi, %rdi
 11120      E9FFFF
3619:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 11121              		.loc 1 3619 0
 11122 0113 4E8DB435 		leaq	1024(%rbp,%r14), %r14
 11122      00040000 
 11123 011b 49C1FE0B 		sarq	$11, %r14
3622:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 11124              		.loc 1 3622 0
 11125 011f 4801DD   		addq	%rbx, %rbp
 11126              	.LVL1596:
3619:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 -= z2;
 11127              		.loc 1 3619 0
 11128 0122 45897208 		movl	%r14d, 8(%r10)
 11129              	.LVL1597:
3622:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(z2 + z3 - MULTIPLY(tmp1 - tmp3, FIX(0.707106781)), /* c2+c6-c4 */
 11130              		.loc 1 3622 0
 11131 0126 488DBC2F 		leaq	1024(%rdi,%rbp), %rdi
 11131      00040000 
 11132 012e 48C1FF0B 		sarq	$11, %rdi
 11133 0132 41897A10 		movl	%edi, 16(%r10)
3625:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11134              		.loc 1 3625 0
 11135 0136 4A8DBC03 		leaq	1024(%rbx,%r8), %rdi
 11135      00040000 
3630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
 11136              		.loc 1 3630 0
 11137 013e 4989C0   		movq	%rax, %r8
 11138 0141 4929C8   		subq	%rcx, %r8
3625:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11139              		.loc 1 3625 0
 11140 0144 48C1FF0B 		sarq	$11, %rdi
 11141 0148 41897A18 		movl	%edi, 24(%r10)
3629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.170262339));   /* (c3+c5-c1)/2 */
 11142              		.loc 1 3629 0
 11143 014c 488D3C08 		leaq	(%rax,%rcx), %rdi
3633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 11144              		.loc 1 3633 0
 11145 0150 4C01C9   		addq	%r9, %rcx
 11146              	.LVL1598:
3635:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += tmp3;
 11147              		.loc 1 3635 0
 11148 0153 4C01C8   		addq	%r9, %rax
 11149              	.LVL1599:
3629:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp10 - tmp11, FIX(0.170262339));   /* (c3+c5-c1)/2 */
 11150              		.loc 1 3629 0
 11151 0156 4869DFEF 		imulq	$7663, %rdi, %rbx
 11151      1D0000
 11152              	.LVL1600:
3630:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = tmp1 - tmp2;
 11153              		.loc 1 3630 0
 11154 015d 4969F873 		imulq	$1395, %r8, %rdi
 11154      050000
 11155              	.LVL1601:
3633:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 11156              		.loc 1 3633 0
 11157 0164 4869C9E1 		imulq	$-11295, %rcx, %rcx
 11157      D3FFFF
3631:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += tmp2;
 11158              		.loc 1 3631 0
 11159 016b 4989D8   		movq	%rbx, %r8
 11160 016e 4929F8   		subq	%rdi, %r8
 11161              	.LVL1602:
3632:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp11 + tmp12, - FIX(1.378756276)); /* -c1 */
 11162              		.loc 1 3632 0
 11163 0171 4801DF   		addq	%rbx, %rdi
 11164              	.LVL1603:
3635:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += tmp3;
 11165              		.loc 1 3635 0
 11166 0174 4869C0A3 		imulq	$5027, %rax, %rax
 11166      130000
 11167              	.LVL1604:
3640:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 11168              		.loc 1 3640 0
 11169 017b 488DBC0F 		leaq	1024(%rdi,%rcx), %rdi
 11169      00040000 
 11170              	.LVL1605:
3639:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 11171              		.loc 1 3639 0
 11172 0183 4D8D8400 		leaq	1024(%r8,%rax), %r8
 11172      00040000 
 11173              	.LVL1606:
 11174 018b 49C1F80B 		sarq	$11, %r8
3640:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 11175              		.loc 1 3640 0
 11176 018f 48C1FF0B 		sarq	$11, %rdi
3643:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11177              		.loc 1 3643 0
 11178 0193 4183C301 		addl	$1, %r11d
 11179              	.LVL1607:
3641:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11180              		.loc 1 3641 0
 11181 0197 4D69C9DE 		imulq	$15326, %r9, %r9
 11181      3B0000
 11182              	.LVL1608:
3639:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) DESCALE(tmp1, CONST_BITS-PASS1_BITS);
 11183              		.loc 1 3639 0
 11184 019e 45894204 		movl	%r8d, 4(%r10)
3640:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) DESCALE(tmp2, CONST_BITS-PASS1_BITS);
 11185              		.loc 1 3640 0
 11186 01a2 41897A0C 		movl	%edi, 12(%r10)
3641:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11187              		.loc 1 3641 0
 11188 01a6 4C01C8   		addq	%r9, %rax
 11189              	.LVL1609:
 11190 01a9 488D8401 		leaq	1024(%rcx,%rax), %rax
 11190      00040000 
 11191 01b1 48C1F80B 		sarq	$11, %rax
3645:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 14)
 11192              		.loc 1 3645 0
 11193 01b5 4183FB08 		cmpl	$8, %r11d
3641:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11194              		.loc 1 3641 0
 11195 01b9 41894214 		movl	%eax, 20(%r10)
3645:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 14)
 11196              		.loc 1 3645 0
 11197 01bd 0F84C602 		je	.L186
 11197      0000
3646:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 11198              		.loc 1 3646 0
 11199 01c3 4183FB0E 		cmpl	$14, %r11d
 11200 01c7 0F8593FE 		jne	.L190
 11200      FFFF
3649:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
3650:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
3651:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3652:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3653:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
3654:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
3655:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
3656:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/7)*(8/14) = 32/49, which we
3657:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers:
3658:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 14-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/28) * 32/49.
3659:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3660:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3661:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3662:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
3663:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 7; ctr++) {
 11201              		.loc 1 3663 0
 11202 01cd 488D4424 		leaq	60(%rsp), %rax
 11202      3C
 11203 01d2 488D5C24 		leaq	32(%rsp), %rbx
 11203      20
 11204 01d7 48894424 		movq	%rax, 24(%rsp)
 11204      18
 11205              	.LVL1610:
 11206 01dc 0F1F4000 		.p2align 4,,10
 11207              		.p2align 3
 11208              	.L184:
3664:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3665:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3666:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*5];
3667:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
3668:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
3669:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 11209              		.loc 1 3669 0 discriminator 3
 11210 01e0 458B4760 		movl	96(%r15), %r8d
 11211 01e4 44034340 		addl	64(%rbx), %r8d
3666:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
 11212              		.loc 1 3666 0 discriminator 3
 11213 01e8 418B07   		movl	(%r15), %eax
 11214 01eb 448B8BA0 		movl	160(%rbx), %r9d
 11214      000000
3667:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 11215              		.loc 1 3667 0 discriminator 3
 11216 01f2 8BB38000 		movl	128(%rbx), %esi
 11216      0000
3670:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*1];
3671:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
3672:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + dataptr[DCTSIZE*7];
 11217              		.loc 1 3672 0 discriminator 3
 11218 01f8 418BBFE0 		movl	224(%r15), %edi
 11218      000000
3667:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 11219              		.loc 1 3667 0 discriminator 3
 11220 01ff 418B4F20 		movl	32(%r15), %ecx
 11221              		.loc 1 3672 0 discriminator 3
 11222 0203 458B97C0 		movl	192(%r15), %r10d
 11222      000000
3669:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*1];
 11223              		.loc 1 3669 0 discriminator 3
 11224 020a 4963D0   		movslq	%r8d, %rdx
3671:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + dataptr[DCTSIZE*7];
 11225              		.loc 1 3671 0 discriminator 3
 11226 020d 458B87A0 		movl	160(%r15), %r8d
 11226      000000
 11227 0214 440303   		addl	(%rbx), %r8d
3666:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
 11228              		.loc 1 3666 0 discriminator 3
 11229 0217 468D2408 		leal	(%rax,%r9), %r12d
3668:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 11230              		.loc 1 3668 0 discriminator 3
 11231 021b 458B5F40 		movl	64(%r15), %r11d
3669:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + wsptr[DCTSIZE*1];
 11232              		.loc 1 3669 0 discriminator 3
 11233 021f 48895424 		movq	%rdx, 8(%rsp)
 11233      08
3667:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 11234              		.loc 1 3667 0 discriminator 3
 11235 0224 8D2C31   		leal	(%rcx,%rsi), %ebp
 11236              		.loc 1 3672 0 discriminator 3
 11237 0227 4101FA   		addl	%edi, %r10d
3668:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 11238              		.loc 1 3668 0 discriminator 3
 11239 022a 44035B60 		addl	96(%rbx), %r11d
 11240              		.loc 1 3672 0 discriminator 3
 11241 022e 4D63D2   		movslq	%r10d, %r10
3666:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*4];
 11242              		.loc 1 3666 0 discriminator 3
 11243 0231 4D63E4   		movslq	%r12d, %r12
 11244              	.LVL1611:
3670:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
 11245              		.loc 1 3670 0 discriminator 3
 11246 0234 418B9780 		movl	128(%r15), %edx
 11246      000000
3673:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3674:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp6;
 11247              		.loc 1 3674 0 discriminator 3
 11248 023b 4F8D3414 		leaq	(%r12,%r10), %r14
3670:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
 11249              		.loc 1 3670 0 discriminator 3
 11250 023f 035320   		addl	32(%rbx), %edx
3675:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp0 - tmp6;
 11251              		.loc 1 3675 0 discriminator 3
 11252 0242 4D29D4   		subq	%r10, %r12
 11253              	.LVL1612:
3671:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] + dataptr[DCTSIZE*7];
 11254              		.loc 1 3671 0 discriminator 3
 11255 0245 4D63C0   		movslq	%r8d, %r8
3667:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*3];
 11256              		.loc 1 3667 0 discriminator 3
 11257 0248 4863ED   		movslq	%ebp, %rbp
 11258              	.LVL1613:
 11259              		.loc 1 3675 0 discriminator 3
 11260 024b 4C896424 		movq	%r12, 16(%rsp)
 11260      10
3676:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp5;
 11261              		.loc 1 3676 0 discriminator 3
 11262 0250 4E8D6405 		leaq	0(%rbp,%r8), %r12
 11262      00
3677:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp1 - tmp5;
 11263              		.loc 1 3677 0 discriminator 3
 11264 0255 4C29C5   		subq	%r8, %rbp
 11265              	.LVL1614:
3678:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp4;
3679:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
3680:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3681:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*5];
3682:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*4];
3683:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*3];
3684:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*2];
3685:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
3686:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
3687:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 11266              		.loc 1 3687 0 discriminator 3
 11267 0258 458B87C0 		movl	192(%r15), %r8d
 11267      000000
3668:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*2];
 11268              		.loc 1 3668 0 discriminator 3
 11269 025f 4D63DB   		movslq	%r11d, %r11
 11270              	.LVL1615:
3685:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
 11271              		.loc 1 3685 0 discriminator 3
 11272 0262 458B9780 		movl	128(%r15), %r10d
 11272      000000
3681:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*4];
 11273              		.loc 1 3681 0 discriminator 3
 11274 0269 4429C8   		subl	%r9d, %eax
 11275              	.LVL1616:
3670:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + wsptr[DCTSIZE*0];
 11276              		.loc 1 3670 0 discriminator 3
 11277 026c 4863D2   		movslq	%edx, %rdx
 11278              	.LVL1617:
3685:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
 11279              		.loc 1 3685 0 discriminator 3
 11280 026f 442B5320 		subl	32(%rbx), %r10d
3686:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 11281              		.loc 1 3686 0 discriminator 3
 11282 0273 458B8FA0 		movl	160(%r15), %r9d
 11282      000000
 11283              	.LVL1618:
 11284              		.loc 1 3687 0 discriminator 3
 11285 027a 4129F8   		subl	%edi, %r8d
3678:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp16 = tmp2 - tmp4;
 11286              		.loc 1 3678 0 discriminator 3
 11287 027d 4D8D2C13 		leaq	(%r11,%rdx), %r13
 11288              	.LVL1619:
3679:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11289              		.loc 1 3679 0 discriminator 3
 11290 0281 4929D3   		subq	%rdx, %r11
 11291              	.LVL1620:
 11292              		.loc 1 3687 0 discriminator 3
 11293 0284 4963F8   		movslq	%r8d, %rdi
3688:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3689:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 11294              		.loc 1 3689 0 discriminator 3
 11295 0287 4F8D0426 		leaq	(%r14,%r12), %r8
3686:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 11296              		.loc 1 3686 0 discriminator 3
 11297 028b 442B0B   		subl	(%rbx), %r9d
3684:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
 11298              		.loc 1 3684 0 discriminator 3
 11299 028e 418B5760 		movl	96(%r15), %edx
 11300              	.LVL1621:
3682:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*3];
 11301              		.loc 1 3682 0 discriminator 3
 11302 0292 29F1     		subl	%esi, %ecx
 11303              	.LVL1622:
3684:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
 11304              		.loc 1 3684 0 discriminator 3
 11305 0294 2B5340   		subl	64(%rbx), %edx
 11306              		.loc 1 3689 0 discriminator 3
 11307 0297 4D01E8   		addq	%r13, %r8
 11308 029a 4C034424 		addq	8(%rsp), %r8
 11308      08
3683:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*2];
 11309              		.loc 1 3683 0 discriminator 3
 11310 029f 418B7740 		movl	64(%r15), %esi
 11311              	.LVL1623:
 11312 02a3 2B7360   		subl	96(%rbx), %esi
3682:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*3];
 11313              		.loc 1 3682 0 discriminator 3
 11314 02a6 4863C9   		movslq	%ecx, %rcx
3681:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*4];
 11315              		.loc 1 3681 0 discriminator 3
 11316 02a9 4898     		cltq
 11317              	.LVL1624:
3686:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp6 = dataptr[DCTSIZE*6] - dataptr[DCTSIZE*7];
 11318              		.loc 1 3686 0 discriminator 3
 11319 02ab 4D63C9   		movslq	%r9d, %r9
3685:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - wsptr[DCTSIZE*0];
 11320              		.loc 1 3685 0 discriminator 3
 11321 02ae 4D63D2   		movslq	%r10d, %r10
3684:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - wsptr[DCTSIZE*1];
 11322              		.loc 1 3684 0 discriminator 3
 11323 02b1 4863D2   		movslq	%edx, %rdx
 11324              		.loc 1 3689 0 discriminator 3
 11325 02b4 4D69C0E6 		imulq	$5350, %r8, %r8
 11325      140000
3683:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*2];
 11326              		.loc 1 3683 0 discriminator 3
 11327 02bb 4863F6   		movslq	%esi, %rsi
 11328              	.LVL1625:
 11329              		.loc 1 3689 0 discriminator 3
 11330 02be 4981C000 		addq	$16384, %r8
 11330      400000
 11331 02c5 49C1F80F 		sarq	$15, %r8
 11332 02c9 458907   		movl	%r8d, (%r15)
3690:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12 + tmp13,
3691:fltk-1.3.4-1/jpeg/jfdctint.c **** 		       FIX(0.653061224)),                 /* 32/49 */
3692:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3693:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp13;
 11333              		.loc 1 3693 0 discriminator 3
 11334 02cc 4C8B4424 		movq	8(%rsp), %r8
 11334      08
 11335 02d1 4D01C0   		addq	%r8, %r8
 11336              	.LVL1626:
3694:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 11337              		.loc 1 3694 0 discriminator 3
 11338 02d4 4D29C6   		subq	%r8, %r14
 11339              	.LVL1627:
 11340 02d7 4D29C4   		subq	%r8, %r12
 11341              	.LVL1628:
 11342 02da 4D29C5   		subq	%r8, %r13
 11343              	.LVL1629:
 11344 02dd 4D69E494 		imulq	$1684, %r12, %r12
 11344      060000
 11345 02e4 4D69F6A1 		imulq	$6817, %r14, %r14
 11345      1A0000
 11346 02eb 4D69ED93 		imulq	$-4717, %r13, %r13
 11346      EDFFFF
 11347 02f2 4D01E6   		addq	%r12, %r14
3695:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp13, FIX(0.832106052)) + /* c4 */
3696:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp13, FIX(0.205513223)) - /* c12 */
3697:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp12 - tmp13, FIX(0.575835255)),  /* c8 */
3698:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3699:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3700:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp14 + tmp15, FIX(0.722074570));    /* c6 */
 11348              		.loc 1 3700 0 discriminator 3
 11349 02f5 4C8B6424 		movq	16(%rsp), %r12
 11349      10
3694:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 11350              		.loc 1 3694 0 discriminator 3
 11351 02fa 4F8D842E 		leaq	16384(%r14,%r13), %r8
 11351      00400000 
 11352              	.LVL1630:
 11353 0302 49C1F80F 		sarq	$15, %r8
 11354 0306 45898780 		movl	%r8d, 128(%r15)
 11354      000000
 11355              	.LVL1631:
 11356              		.loc 1 3700 0 discriminator 3
 11357 030d 4D8D042C 		leaq	(%r12,%rbp), %r8
3701:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3702:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 11358              		.loc 1 3702 0 discriminator 3
 11359 0311 4D69E4B5 		imulq	$1461, %r12, %r12
 11359      050000
3700:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11360              		.loc 1 3700 0 discriminator 3
 11361 0318 4D69C01B 		imulq	$5915, %r8, %r8
 11361      170000
 11362              	.LVL1632:
 11363              		.loc 1 3702 0 discriminator 3
 11364 031f 4D01C4   		addq	%r8, %r12
 11365 0322 4D69EBD3 		imulq	$3283, %r11, %r13
 11365      0C0000
3703:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
3704:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp16, FIX(0.400721155)),        /* c10 */
3705:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3706:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
 11366              		.loc 1 3706 0 discriminator 3
 11367 0329 4869ED12 		imulq	$-9198, %rbp, %rbp
 11367      DCFFFF
 11368              	.LVL1633:
 11369 0330 4D69DB30 		imulq	$-7376, %r11, %r11
 11369      E3FFFF
 11370              	.LVL1634:
3702:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
 11371              		.loc 1 3702 0 discriminator 3
 11372 0337 4F8DA42C 		leaq	16384(%r12,%r13), %r12
 11372      00400000 
 11373              		.loc 1 3706 0 discriminator 3
 11374 033f 4901E8   		addq	%rbp, %r8
 11375              	.LVL1635:
3707:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
3708:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp16, FIX(0.900412262)),        /* c2 */
3709:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3710:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3711:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3712:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3713:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp1 + tmp2;
3714:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
 11376              		.loc 1 3714 0 discriminator 3
 11377 0342 4C89CD   		movq	%r9, %rbp
3706:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
 11378              		.loc 1 3706 0 discriminator 3
 11379 0345 4F8D8418 		leaq	16384(%r8,%r11), %r8
 11379      00400000 
3713:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp5 - tmp4;
 11380              		.loc 1 3713 0 discriminator 3
 11381 034d 4C8D1C31 		leaq	(%rcx,%rsi), %r11
 11382              	.LVL1636:
 11383              		.loc 1 3714 0 discriminator 3
 11384 0351 4C29D5   		subq	%r10, %rbp
 11385              	.LVL1637:
3702:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
 11386              		.loc 1 3702 0 discriminator 3
 11387 0354 49C1FC0F 		sarq	$15, %r12
3706:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
 11388              		.loc 1 3706 0 discriminator 3
 11389 0358 49C1F80F 		sarq	$15, %r8
3702:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp14, FIX(0.178337691))   /* c2-c6 */
 11390              		.loc 1 3702 0 discriminator 3
 11391 035c 45896740 		movl	%r12d, 64(%r15)
3706:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp15, FIX(1.122795725))   /* c6+c10 */
 11392              		.loc 1 3706 0 discriminator 3
 11393 0360 458987C0 		movl	%r8d, 192(%r15)
 11393      000000
3715:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM)
 11394              		.loc 1 3715 0 discriminator 3
 11395 0367 4989C0   		movq	%rax, %r8
 11396 036a 4D29D8   		subq	%r11, %r8
 11397 036d 4901D0   		addq	%rdx, %r8
 11398 0370 4929E8   		subq	%rbp, %r8
 11399 0373 4929F8   		subq	%rdi, %r8
 11400 0376 4D69C0E6 		imulq	$5350, %r8, %r8
 11400      140000
3716:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp10 + tmp3 - tmp11 - tmp6,
3717:fltk-1.3.4-1/jpeg/jfdctint.c **** 		       FIX(0.653061224)),                 /* 32/49 */
3718:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3719:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3  = MULTIPLY(tmp3 , FIX(0.653061224));            /* 32/49 */
 11401              		.loc 1 3719 0 discriminator 3
 11402 037d 4869D2E6 		imulq	$5350, %rdx, %rdx
 11402      140000
 11403              	.LVL1638:
3720:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.103406812));          /* -c13 */
3721:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.917760839));            /* c1 */
3722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 += tmp11 - tmp3;
 11404              		.loc 1 3722 0 discriminator 3
 11405 0384 4869ED5E 		imulq	$7518, %rbp, %rbp
 11405      1D0000
 11406              	.LVL1639:
3715:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp10 + tmp3 - tmp11 - tmp6,
 11407              		.loc 1 3715 0 discriminator 3
 11408 038b 4981C000 		addq	$16384, %r8
 11408      400000
 11409 0392 49C1F80F 		sarq	$15, %r8
3720:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, - FIX(0.103406812));          /* -c13 */
 11410              		.loc 1 3720 0 discriminator 3
 11411 0396 4D69DBB1 		imulq	$-847, %r11, %r11
 11411      FCFFFF
 11412              	.LVL1640:
3715:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp10 + tmp3 - tmp11 - tmp6,
 11413              		.loc 1 3715 0 discriminator 3
 11414 039d 458987E0 		movl	%r8d, 224(%r15)
 11414      000000
 11415              	.LVL1641:
3723:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(0.782007410)) +     /* c5 */
 11416              		.loc 1 3723 0 discriminator 3
 11417 03a4 4C8D0430 		leaq	(%rax,%rsi), %r8
3722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(0.782007410)) +     /* c5 */
 11418              		.loc 1 3722 0 discriminator 3
 11419 03a8 4829D5   		subq	%rdx, %rbp
3724:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.491367823));      /* c9 */
3725:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
 11420              		.loc 1 3725 0 discriminator 3
 11421 03ab 4869F664 		imulq	$-12700, %rsi, %rsi
 11421      CEFFFF
 11422              	.LVL1642:
3722:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp0 + tmp2, FIX(0.782007410)) +     /* c5 */
 11423              		.loc 1 3722 0 discriminator 3
 11424 03b2 4901EB   		addq	%rbp, %r11
 11425              	.LVL1643:
3723:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.491367823));      /* c9 */
 11426              		.loc 1 3723 0 discriminator 3
 11427 03b5 4969E806 		imulq	$6406, %r8, %rbp
 11427      190000
 11428 03bc 4D8D043A 		leaq	(%r10,%rdi), %r8
 11429              		.loc 1 3725 0 discriminator 3
 11430 03c0 4D69D268 		imulq	$5992, %r10, %r10
 11430      170000
 11431              	.LVL1644:
3723:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp4 + tmp6, FIX(0.491367823));      /* c9 */
 11432              		.loc 1 3723 0 discriminator 3
 11433 03c7 4D69C0B9 		imulq	$4025, %r8, %r8
 11433      0F0000
 11434 03ce 4901E8   		addq	%rbp, %r8
 11435              	.LVL1645:
 11436              		.loc 1 3725 0 discriminator 3
 11437 03d1 4B8D2C03 		leaq	(%r11,%r8), %rbp
 11438 03d5 4801EE   		addq	%rbp, %rsi
 11439 03d8 4A8DB416 		leaq	16384(%rsi,%r10), %rsi
 11439      00400000 
 11440 03e0 48C1FE0F 		sarq	$15, %rsi
 11441 03e4 4189B7A0 		movl	%esi, 160(%r15)
 11441      000000
 11442              	.LVL1646:
3726:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp11 - MULTIPLY(tmp2, FIX(1.550341076)) /* c3+c5-c13 */
3727:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      + MULTIPLY(tmp4, FIX(0.731428202)),         /* c1+c11-c9 */
3728:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3729:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp1, FIX(0.871740478)) +     /* c3 */
 11443              		.loc 1 3729 0 discriminator 3
 11444 03eb 488D3408 		leaq	(%rax,%rcx), %rsi
3730:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.305035186));      /* c11 */
3731:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
 11445              		.loc 1 3731 0 discriminator 3
 11446 03ef 4869C923 		imulq	$-2269, %rcx, %rcx
 11446      F7FFFF
 11447              	.LVL1647:
3729:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp5 - tmp6, FIX(0.305035186));      /* c11 */
 11448              		.loc 1 3729 0 discriminator 3
 11449 03f6 4C69D6E5 		imulq	$7141, %rsi, %r10
 11449      1B0000
 11450 03fd 4C89CE   		movq	%r9, %rsi
 11451 0400 4829FE   		subq	%rdi, %rsi
 11452 0403 4869F6C3 		imulq	$2499, %rsi, %rsi
 11452      090000
 11453 040a 4C01D6   		addq	%r10, %rsi
 11454              	.LVL1648:
 11455              		.loc 1 3731 0 discriminator 3
 11456 040d 4901F3   		addq	%rsi, %r11
 11457              	.LVL1649:
 11458 0410 4901CB   		addq	%rcx, %r11
3732:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
3733:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp5, FIX(2.004803435)),         /* c1+c5+c11 */
3734:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3735:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 11459              		.loc 1 3735 0 discriminator 3
 11460 0413 4C01C6   		addq	%r8, %rsi
 11461              	.LVL1650:
3736:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
3737:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp0, FIX(0.735987049))          /* c3+c5-c1 */
3738:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      - MULTIPLY(tmp6, FIX(0.082925825)),         /* c9-c11-c13 */
3739:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3740:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3741:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 11462              		.loc 1 3741 0 discriminator 3
 11463 0416 4983C704 		addq	$4, %r15
 11464              	.LVL1651:
3735:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 11465              		.loc 1 3735 0 discriminator 3
 11466 041a 4869C073 		imulq	$-6029, %rax, %rax
 11466      E8FFFF
 11467              	.LVL1652:
 11468 0421 4801F2   		addq	%rsi, %rdx
 11469              	.LVL1653:
3742:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 11470              		.loc 1 3742 0 discriminator 3
 11471 0424 4883C304 		addq	$4, %rbx
 11472              	.LVL1654:
3731:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 11473              		.loc 1 3731 0 discriminator 3
 11474 0428 4D69C9D9 		imulq	$-16423, %r9, %r9
 11474      BFFFFF
 11475              	.LVL1655:
3735:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 11476              		.loc 1 3735 0 discriminator 3
 11477 042f 4869FF59 		imulq	$-679, %rdi, %rdi
 11477      FDFFFF
 11478              	.LVL1656:
 11479 0436 4801D0   		addq	%rdx, %rax
3731:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 11480              		.loc 1 3731 0 discriminator 3
 11481 0439 4B8D8C0B 		leaq	16384(%r11,%r9), %rcx
 11481      00400000 
3735:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 11482              		.loc 1 3735 0 discriminator 3
 11483 0441 488D8438 		leaq	16384(%rax,%rdi), %rax
 11483      00400000 
3731:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 11484              		.loc 1 3731 0 discriminator 3
 11485 0449 48C1F90F 		sarq	$15, %rcx
3735:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 11486              		.loc 1 3735 0 discriminator 3
 11487 044d 48C1F80F 		sarq	$15, %rax
3731:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + tmp12 - MULTIPLY(tmp1, FIX(0.276965844)) /* c3-c9-c13 */
 11488              		.loc 1 3731 0 discriminator 3
 11489 0451 41894F5C 		movl	%ecx, 92(%r15)
 11490              	.LVL1657:
3735:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp11 + tmp12 + tmp3
 11491              		.loc 1 3735 0 discriminator 3
 11492 0455 4189471C 		movl	%eax, 28(%r15)
 11493              	.LVL1658:
3663:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 11494              		.loc 1 3663 0 discriminator 3
 11495 0459 483B5C24 		cmpq	24(%rsp), %rbx
 11495      18
 11496 045e 0F857CFD 		jne	.L184
 11496      FFFF
3743:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3744:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 11497              		.loc 1 3744 0
 11498 0464 488B8424 		movq	232(%rsp), %rax
 11498      E8000000 
 11499 046c 64483304 		xorq	%fs:40, %rax
 11499      25280000 
 11499      00
 11500 0475 751C     		jne	.L191
 11501 0477 4881C4F8 		addq	$248, %rsp
 11501      000000
 11502              		.cfi_remember_state
 11503              		.cfi_def_cfa_offset 56
 11504 047e 5B       		popq	%rbx
 11505              		.cfi_def_cfa_offset 48
 11506              	.LVL1659:
 11507 047f 5D       		popq	%rbp
 11508              		.cfi_def_cfa_offset 40
 11509 0480 415C     		popq	%r12
 11510              		.cfi_def_cfa_offset 32
 11511 0482 415D     		popq	%r13
 11512              		.cfi_def_cfa_offset 24
 11513 0484 415E     		popq	%r14
 11514              		.cfi_def_cfa_offset 16
 11515 0486 415F     		popq	%r15
 11516              		.cfi_def_cfa_offset 8
 11517              	.LVL1660:
 11518 0488 C3       		ret
 11519              	.LVL1661:
 11520              	.L186:
 11521              		.cfi_restore_state
3650:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 11522              		.loc 1 3650 0
 11523 0489 4C8D5424 		leaq	32(%rsp), %r10
 11523      20
 11524              	.LVL1662:
 11525 048e E9D1FBFF 		jmp	.L182
 11525      FF
 11526              	.LVL1663:
 11527              	.L191:
 11528              		.loc 1 3744 0
 11529 0493 E8000000 		call	__stack_chk_fail
 11529      00
 11530              	.LVL1664:
 11531              		.cfi_endproc
 11532              	.LFE86:
 11534              		.section	.text.unlikely.jpeg_fdct_7x14
 11535              	.LCOLDE25:
 11536              		.section	.text.jpeg_fdct_7x14
 11537              	.LHOTE25:
 11538              		.section	.text.unlikely.jpeg_fdct_6x12,"ax",@progbits
 11539              	.LCOLDB26:
 11540              		.section	.text.jpeg_fdct_6x12,"ax",@progbits
 11541              	.LHOTB26:
 11542              		.p2align 4,,15
 11543              		.globl	jpeg_fdct_6x12
 11545              	jpeg_fdct_6x12:
 11546              	.LFB87:
3745:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3746:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3747:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3748:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 6x12 sample block.
3749:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3750:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 6-point FDCT in pass 1 (rows), 12-point in pass 2 (columns).
3751:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3752:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3753:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3754:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_6x12 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3755:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 11547              		.loc 1 3755 0
 11548              		.cfi_startproc
 11549              	.LVL1665:
 11550 0000 4157     		pushq	%r15
 11551              		.cfi_def_cfa_offset 16
 11552              		.cfi_offset 15, -16
 11553 0002 4156     		pushq	%r14
 11554              		.cfi_def_cfa_offset 24
 11555              		.cfi_offset 14, -24
 11556 0004 4989FF   		movq	%rdi, %r15
 11557 0007 4155     		pushq	%r13
 11558              		.cfi_def_cfa_offset 32
 11559              		.cfi_offset 13, -32
 11560 0009 4154     		pushq	%r12
 11561              		.cfi_def_cfa_offset 40
 11562              		.cfi_offset 12, -40
 11563              	.LBB108:
 11564              	.LBB109:
 11565              		.loc 2 90 0
 11566 000b 4883C708 		addq	$8, %rdi
 11567              	.LVL1666:
 11568              	.LBE109:
 11569              	.LBE108:
 11570              		.loc 1 3755 0
 11571 000f 55       		pushq	%rbp
 11572              		.cfi_def_cfa_offset 48
 11573              		.cfi_offset 6, -48
 11574 0010 53       		pushq	%rbx
 11575              		.cfi_def_cfa_offset 56
 11576              		.cfi_offset 3, -56
 11577              	.LBB112:
 11578              	.LBB110:
 11579              		.loc 2 90 0
 11580 0011 4C89F9   		movq	%r15, %rcx
 11581 0014 89D2     		movl	%edx, %edx
 11582 0016 4D89F9   		movq	%r15, %r9
 11583              	.LBE110:
 11584              	.LBE112:
3756:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
3757:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
3758:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*4];
3759:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
3760:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
3761:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3762:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
3763:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
3764:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3765:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
3766:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
3767:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3768:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
3769:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
3770:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
3771:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 6-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/12).
3772:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3773:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3774:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3775:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 11585              		.loc 1 3775 0
 11586 0019 4531DB   		xorl	%r11d, %r11d
3755:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 11587              		.loc 1 3755 0
 11588 001c 4881ECA8 		subq	$168, %rsp
 11588      000000
 11589              		.cfi_def_cfa_offset 224
3755:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
 11590              		.loc 1 3755 0
 11591 0023 64488B04 		movq	%fs:40, %rax
 11591      25280000 
 11591      00
 11592 002c 48898424 		movq	%rax, 152(%rsp)
 11592      98000000 
 11593 0034 31C0     		xorl	%eax, %eax
 11594              	.LVL1667:
 11595              	.LBB113:
 11596              	.LBB111:
 11597              		.loc 2 90 0
 11598 0036 48C747F8 		movq	$0, -8(%rdi)
 11598      00000000 
 11599 003e 48C787F0 		movq	$0, 240(%rdi)
 11599      00000000 
 11599      000000
 11600 0049 4883E7F8 		andq	$-8, %rdi
 11601 004d 4829F9   		subq	%rdi, %rcx
 11602 0050 81C10001 		addl	$256, %ecx
 11602      0000
 11603 0056 C1E903   		shrl	$3, %ecx
 11604 0059 F348AB   		rep stosq
 11605              	.LVL1668:
 11606 005c EB06     		jmp	.L193
 11607              	.LVL1669:
 11608 005e 6690     		.p2align 4,,10
 11609              		.p2align 3
 11610              	.L201:
 11611              	.LBE111:
 11612              	.LBE113:
3776:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
3777:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
3778:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3779:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3780:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3781:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[5]);
3782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
3783:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
3784:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3785:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp2;
3786:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
3787:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3788:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[5]);
3789:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
3790:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[3]);
3791:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3792:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
3793:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
3794:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
3795:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
3796:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
3797:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
3798:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM)
3799:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
3800:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
3801:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3802:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3803:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3804:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = DESCALE(MULTIPLY(tmp0 + tmp2, FIX(0.366025404)),     /* c5 */
3805:fltk-1.3.4-1/jpeg/jfdctint.c **** 		    CONST_BITS-PASS1_BITS);
3806:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3807:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) (tmp10 + ((tmp0 + tmp1) << PASS1_BITS));
3808:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
3809:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << PASS1_BITS));
3810:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3811:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
3812:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3813:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
3814:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 12)
3815:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
3816:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 11613              		.loc 1 3816 0
 11614 0060 4983C120 		addq	$32, %r9
 11615              	.LVL1670:
 11616              	.L193:
3777:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11617              		.loc 1 3777 0
 11618 0064 4963C3   		movslq	%r11d, %rax
 11619 0067 4889D3   		movq	%rdx, %rbx
3811:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11620              		.loc 1 3811 0
 11621 006a 4183C301 		addl	$1, %r11d
 11622              	.LVL1671:
3777:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11623              		.loc 1 3777 0
 11624 006e 48031CC6 		addq	(%rsi,%rax,8), %rbx
 11625              	.LVL1672:
3781:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 11626              		.loc 1 3781 0
 11627 0072 0FB64B05 		movzbl	5(%rbx), %ecx
3782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 11628              		.loc 1 3782 0
 11629 0076 440FB673 		movzbl	4(%rbx), %r14d
 11629      04
3781:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 11630              		.loc 1 3781 0
 11631 007b 440FB603 		movzbl	(%rbx), %r8d
3782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 11632              		.loc 1 3782 0
 11633 007f 440FB653 		movzbl	1(%rbx), %r10d
 11633      01
3783:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11634              		.loc 1 3783 0
 11635 0084 0FB67B02 		movzbl	2(%rbx), %edi
 11636 0088 0FB65B03 		movzbl	3(%rbx), %ebx
 11637              	.LVL1673:
3781:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 11638              		.loc 1 3781 0
 11639 008c 418D2C08 		leal	(%r8,%rcx), %ebp
3782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 11640              		.loc 1 3782 0
 11641 0090 478D2432 		leal	(%r10,%r14), %r12d
3789:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) - GETJSAMPLE(elemptr[3]);
 11642              		.loc 1 3789 0
 11643 0094 4529F2   		subl	%r14d, %r10d
3783:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11644              		.loc 1 3783 0
 11645 0097 448D2C1F 		leal	(%rdi,%rbx), %r13d
3788:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
 11646              		.loc 1 3788 0
 11647 009b 4129C8   		subl	%ecx, %r8d
3790:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11648              		.loc 1 3790 0
 11649 009e 29DF     		subl	%ebx, %edi
3781:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[4]);
 11650              		.loc 1 3781 0
 11651 00a0 4863ED   		movslq	%ebp, %rbp
 11652              	.LVL1674:
3782:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]) + GETJSAMPLE(elemptr[3]);
 11653              		.loc 1 3782 0
 11654 00a3 4D63E4   		movslq	%r12d, %r12
 11655              	.LVL1675:
3788:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[4]);
 11656              		.loc 1 3788 0
 11657 00a6 4963C8   		movslq	%r8d, %rcx
3783:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11658              		.loc 1 3783 0
 11659 00a9 4D63ED   		movslq	%r13d, %r13
 11660              	.LVL1676:
3790:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11661              		.loc 1 3790 0
 11662 00ac 4863DF   		movslq	%edi, %rbx
3807:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 11663              		.loc 1 3807 0
 11664 00af 4501D0   		addl	%r10d, %r8d
3785:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 11665              		.loc 1 3785 0
 11666 00b2 4A8D442D 		leaq	0(%rbp,%r13), %rax
 11666      00
 11667              	.LVL1677:
3795:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 11668              		.loc 1 3795 0
 11669 00b7 4C29ED   		subq	%r13, %rbp
 11670              	.LVL1678:
3809:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11671              		.loc 1 3809 0
 11672 00ba 4429D7   		subl	%r10d, %edi
3795:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 11673              		.loc 1 3795 0
 11674 00bd 4869ED31 		imulq	$10033, %rbp, %rbp
 11674      270000
 11675              	.LVL1679:
3793:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
 11676              		.loc 1 3793 0
 11677 00c4 4D8DB404 		leaq	-768(%r12,%rax), %r14
 11677      00FDFFFF 
3798:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 11678              		.loc 1 3798 0
 11679 00cc 4C29E0   		subq	%r12, %rax
 11680              	.LVL1680:
 11681 00cf 4C29E0   		subq	%r12, %rax
3793:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
 11682              		.loc 1 3793 0
 11683 00d2 49C1E602 		salq	$2, %r14
3798:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 11684              		.loc 1 3798 0
 11685 00d6 4869C0A1 		imulq	$5793, %rax, %rax
 11685      160000
3795:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 11686              		.loc 1 3795 0
 11687 00dd 4881C500 		addq	$1024, %rbp
 11687      040000
3793:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp11 - 6 * CENTERJSAMPLE) << PASS1_BITS);
 11688              		.loc 1 3793 0
 11689 00e4 458931   		movl	%r14d, (%r9)
 11690              	.LVL1681:
3795:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(1.224744871)),                 /* c2 */
 11691              		.loc 1 3795 0
 11692 00e7 48C1FD0B 		sarq	$11, %rbp
 11693 00eb 41896908 		movl	%ebp, 8(%r9)
3798:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(0.707106781)), /* c4 */
 11694              		.loc 1 3798 0
 11695 00ef 48050004 		addq	$1024, %rax
 11695      0000
 11696 00f5 48C1F80B 		sarq	$11, %rax
 11697 00f9 41894110 		movl	%eax, 16(%r9)
 11698              	.LVL1682:
3807:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 11699              		.loc 1 3807 0
 11700 00fd 488D0419 		leaq	(%rcx,%rbx), %rax
 11701 0101 4869C0B6 		imulq	$2998, %rax, %rax
 11701      0B0000
 11702 0108 48050004 		addq	$1024, %rax
 11702      0000
 11703 010e 48C1F80B 		sarq	$11, %rax
 11704              	.LVL1683:
 11705 0112 468D0480 		leal	(%rax,%r8,4), %r8d
3809:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11706              		.loc 1 3809 0
 11707 0116 8D04B8   		leal	(%rax,%rdi,4), %eax
 11708              	.LVL1684:
3807:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM) ((tmp0 - tmp1 - tmp2) << PASS1_BITS);
 11709              		.loc 1 3807 0
 11710 0119 45894104 		movl	%r8d, 4(%r9)
3808:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << PASS1_BITS));
 11711              		.loc 1 3808 0
 11712 011d 4D63C2   		movslq	%r10d, %r8
 11713              	.LVL1685:
3809:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11714              		.loc 1 3809 0
 11715 0120 41894114 		movl	%eax, 20(%r9)
3808:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << PASS1_BITS));
 11716              		.loc 1 3808 0
 11717 0124 4C29C1   		subq	%r8, %rcx
 11718              	.LVL1686:
 11719 0127 4829D9   		subq	%rbx, %rcx
 11720 012a 48C1E102 		salq	$2, %rcx
3813:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 12)
 11721              		.loc 1 3813 0
 11722 012e 4183FB08 		cmpl	$8, %r11d
3808:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[5] = (DCTELEM) (tmp10 + ((tmp2 - tmp1) << PASS1_BITS));
 11723              		.loc 1 3808 0
 11724 0132 4189490C 		movl	%ecx, 12(%r9)
3813:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 12)
 11725              		.loc 1 3813 0
 11726 0136 0F847102 		je	.L197
 11726      0000
3814:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 11727              		.loc 1 3814 0
 11728 013c 4183FB0C 		cmpl	$12, %r11d
 11729 0140 0F851AFF 		jne	.L201
 11729      FFFF
 11730 0146 488D4424 		leaq	16(%rsp), %rax
 11730      10
3817:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
3818:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
3819:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3820:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3821:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
3822:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
3823:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
3824:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/6)*(8/12) = 8/9, which we
3825:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers:
3826:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 12-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/24) * 8/9.
3827:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3828:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3829:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3830:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
3831:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
 11731              		.loc 1 3831 0
 11732 014b 4C8D7424 		leaq	40(%rsp), %r14
 11732      28
 11733 0150 4989C2   		movq	%rax, %r10
 11734 0153 4C897424 		movq	%r14, 8(%rsp)
 11734      08
 11735              	.LVL1687:
 11736 0158 0F1F8400 		.p2align 4,,10
 11736      00000000 
 11737              		.p2align 3
 11738              	.L195:
3832:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3833:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3834:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*3];
 11739              		.loc 1 3834 0 discriminator 3
 11740 0160 418B17   		movl	(%r15), %edx
 11741 0163 458B7260 		movl	96(%r10), %r14d
3835:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*2];
 11742              		.loc 1 3835 0 discriminator 3
 11743 0167 418B7720 		movl	32(%r15), %esi
 11744 016b 458B6A40 		movl	64(%r10), %r13d
3836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
3837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
3838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
3839:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 11745              		.loc 1 3839 0 discriminator 3
 11746 016f 458B9FA0 		movl	160(%r15), %r11d
 11746      000000
 11747 0176 45039FC0 		addl	192(%r15), %r11d
 11747      000000
3836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
 11748              		.loc 1 3836 0 discriminator 3
 11749 017d 418B4F40 		movl	64(%r15), %ecx
3837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
 11750              		.loc 1 3837 0 discriminator 3
 11751 0181 418B6F60 		movl	96(%r15), %ebp
3834:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*2];
 11752              		.loc 1 3834 0 discriminator 3
 11753 0185 468D0C32 		leal	(%rdx,%r14), %r9d
3837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
 11754              		.loc 1 3837 0 discriminator 3
 11755 0189 41032A   		addl	(%r10), %ebp
3838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 11756              		.loc 1 3838 0 discriminator 3
 11757 018c 418B8780 		movl	128(%r15), %eax
 11757      000000
3835:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
 11758              		.loc 1 3835 0 discriminator 3
 11759 0193 428D1C2E 		leal	(%rsi,%r13), %ebx
3838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 11760              		.loc 1 3838 0 discriminator 3
 11761 0197 410387E0 		addl	224(%r15), %eax
 11761      000000
3836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
 11762              		.loc 1 3836 0 discriminator 3
 11763 019e 418B7A20 		movl	32(%r10), %edi
3834:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*2];
 11764              		.loc 1 3834 0 discriminator 3
 11765 01a2 4D63C9   		movslq	%r9d, %r9
 11766              	.LVL1688:
 11767              		.loc 1 3839 0 discriminator 3
 11768 01a5 4D63DB   		movslq	%r11d, %r11
3835:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + wsptr[DCTSIZE*1];
 11769              		.loc 1 3835 0 discriminator 3
 11770 01a8 4863DB   		movslq	%ebx, %rbx
 11771              	.LVL1689:
3840:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3841:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp5;
3842:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
3843:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
3844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp4;
3845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
3846:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
3847:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3848:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*3];
 11772              		.loc 1 3848 0 discriminator 3
 11773 01ab 4429F2   		subl	%r14d, %edx
3841:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp5;
 11774              		.loc 1 3841 0 discriminator 3
 11775 01ae 4F8D0419 		leaq	(%r9,%r11), %r8
3842:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp4;
 11776              		.loc 1 3842 0 discriminator 3
 11777 01b2 4D29D9   		subq	%r11, %r9
 11778              	.LVL1690:
3844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 11779              		.loc 1 3844 0 discriminator 3
 11780 01b5 4989DB   		movq	%rbx, %r11
3836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
 11781              		.loc 1 3836 0 discriminator 3
 11782 01b8 01CF     		addl	%ecx, %edi
3837:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*7];
 11783              		.loc 1 3837 0 discriminator 3
 11784 01ba 4863ED   		movslq	%ebp, %rbp
3849:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*2];
3850:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*1];
3851:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*0];
3852:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 11785              		.loc 1 3852 0 discriminator 3
 11786 01bd 458BB780 		movl	128(%r15), %r14d
 11786      000000
 11787              	.LVL1691:
3836:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + wsptr[DCTSIZE*0];
 11788              		.loc 1 3836 0 discriminator 3
 11789 01c4 4863FF   		movslq	%edi, %rdi
 11790              	.LVL1692:
3838:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] + dataptr[DCTSIZE*6];
 11791              		.loc 1 3838 0 discriminator 3
 11792 01c7 4898     		cltq
 11793              	.LVL1693:
 11794              		.loc 1 3852 0 discriminator 3
 11795 01c9 452BB7E0 		subl	224(%r15), %r14d
 11795      000000
3844:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp2 + tmp3;
 11796              		.loc 1 3844 0 discriminator 3
 11797 01d0 4929C3   		subq	%rax, %r11
 11798              	.LVL1694:
3845:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp2 - tmp3;
 11799              		.loc 1 3845 0 discriminator 3
 11800 01d3 4C8D242F 		leaq	(%rdi,%rbp), %r12
 11801              	.LVL1695:
3853:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*6];
3854:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3855:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 11802              		.loc 1 3855 0 discriminator 3
 11803 01d7 4801D8   		addq	%rbx, %rax
 11804              	.LVL1696:
 11805 01da 4C01C0   		addq	%r8, %rax
 11806              	.LVL1697:
3846:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11807              		.loc 1 3846 0 discriminator 3
 11808 01dd 4829EF   		subq	%rbp, %rdi
 11809              	.LVL1698:
3853:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*6];
 11810              		.loc 1 3853 0 discriminator 3
 11811 01e0 418BAFA0 		movl	160(%r15), %ebp
 11811      000000
 11812              	.LVL1699:
 11813              		.loc 1 3855 0 discriminator 3
 11814 01e7 4C01E0   		addq	%r12, %rax
3856:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
3857:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3858:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
3859:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
3860:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3861:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 11815              		.loc 1 3861 0 discriminator 3
 11816 01ea 4D29E0   		subq	%r12, %r8
 11817              	.LVL1700:
3853:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11818              		.loc 1 3853 0 discriminator 3
 11819 01ed 412BAFC0 		subl	192(%r15), %ebp
 11819      000000
 11820              	.LVL1701:
3855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 11821              		.loc 1 3855 0 discriminator 3
 11822 01f4 4869C072 		imulq	$7282, %rax, %rax
 11822      1C0000
3849:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*1];
 11823              		.loc 1 3849 0 discriminator 3
 11824 01fb 4429EE   		subl	%r13d, %esi
3850:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*0];
 11825              		.loc 1 3850 0 discriminator 3
 11826 01fe 412B4A20 		subl	32(%r10), %ecx
 11827              	.LVL1702:
 11828              		.loc 1 3861 0 discriminator 3
 11829 0202 4D69C0D6 		imulq	$8918, %r8, %r8
 11829      220000
3851:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 11830              		.loc 1 3851 0 discriminator 3
 11831 0209 458B6F60 		movl	96(%r15), %r13d
3849:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - wsptr[DCTSIZE*1];
 11832              		.loc 1 3849 0 discriminator 3
 11833 020d 4863F6   		movslq	%esi, %rsi
3851:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 11834              		.loc 1 3851 0 discriminator 3
 11835 0210 452B2A   		subl	(%r10), %r13d
3852:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp5 = dataptr[DCTSIZE*5] - dataptr[DCTSIZE*6];
 11836              		.loc 1 3852 0 discriminator 3
 11837 0213 4D63F6   		movslq	%r14d, %r14
3848:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*2];
 11838              		.loc 1 3848 0 discriminator 3
 11839 0216 4863D2   		movslq	%edx, %rdx
 11840              	.LVL1703:
3853:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11841              		.loc 1 3853 0 discriminator 3
 11842 0219 4863ED   		movslq	%ebp, %rbp
3855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 11843              		.loc 1 3855 0 discriminator 3
 11844 021c 48050040 		addq	$16384, %rax
 11844      0000
3850:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - wsptr[DCTSIZE*0];
 11845              		.loc 1 3850 0 discriminator 3
 11846 0222 4863C9   		movslq	%ecx, %rcx
 11847              	.LVL1704:
3855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 11848              		.loc 1 3855 0 discriminator 3
 11849 0225 48C1F80F 		sarq	$15, %rax
 11850              		.loc 1 3861 0 discriminator 3
 11851 0229 4981C000 		addq	$16384, %r8
 11851      400000
3855:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(0.888888889)), /* 8/9 */
 11852              		.loc 1 3855 0 discriminator 3
 11853 0230 418907   		movl	%eax, (%r15)
 11854              	.LVL1705:
3858:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 11855              		.loc 1 3858 0 discriminator 3
 11856 0233 4C89C8   		movq	%r9, %rax
 11857              		.loc 1 3861 0 discriminator 3
 11858 0236 49C1F80F 		sarq	$15, %r8
3858:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 11859              		.loc 1 3858 0 discriminator 3
 11860 023a 4C29D8   		subq	%r11, %rax
3862:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.088662108)),         /* c4 */
3863:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3864:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 11861              		.loc 1 3864 0 discriminator 3
 11862 023d 4929FB   		subq	%rdi, %r11
 11863              	.LVL1706:
3851:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*7];
 11864              		.loc 1 3851 0 discriminator 3
 11865 0240 4D63ED   		movslq	%r13d, %r13
 11866              	.LVL1707:
3858:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 11867              		.loc 1 3858 0 discriminator 3
 11868 0243 4829F8   		subq	%rdi, %rax
 11869              		.loc 1 3864 0 discriminator 3
 11870 0246 4C01CF   		addq	%r9, %rdi
 11871              	.LVL1708:
3861:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.088662108)),         /* c4 */
 11872              		.loc 1 3861 0 discriminator 3
 11873 0249 45898780 		movl	%r8d, 128(%r15)
 11873      000000
 11874              	.LVL1709:
3858:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 11875              		.loc 1 3858 0 discriminator 3
 11876 0250 4869C072 		imulq	$7282, %rax, %rax
 11876      1C0000
3865:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
3866:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp13 + tmp15, FIX(1.214244803)),         /* c2 */
3867:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
3868:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3869:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3870:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3871:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp1 + tmp4, FIX(0.481063200));   /* c9 */
3872:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX(0.680326102));  /* c3-c9 */
3873:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX(1.642452502));  /* c3+c9 */
3874:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(0.997307603));   /* c5 */
 11877              		.loc 1 3874 0 discriminator 3
 11878 0257 4C8D040A 		leaq	(%rdx,%rcx), %r8
3864:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 11879              		.loc 1 3864 0 discriminator 3
 11880 025b 4D69DB72 		imulq	$7282, %r11, %r11
 11880      1C0000
 11881 0262 4869FFDB 		imulq	$9947, %rdi, %rdi
 11881      260000
3858:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp13 - tmp14 - tmp15, FIX(0.888888889)), /* 8/9 */
 11882              		.loc 1 3858 0 discriminator 3
 11883 0269 48050040 		addq	$16384, %rax
 11883      0000
 11884 026f 48C1F80F 		sarq	$15, %rax
 11885 0273 418987C0 		movl	%eax, 192(%r15)
 11885      000000
3864:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 11886              		.loc 1 3864 0 discriminator 3
 11887 027a 498D843B 		leaq	16384(%r11,%rdi), %rax
 11887      00400000 
3875:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.765261039));   /* c7 */
3876:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.516244403)) /* c5+c7-c1 */
3877:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.164081699));        /* c11 */
3878:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp2 + tmp3, - FIX(0.164081699)); /* -c11 */
 11888              		.loc 1 3878 0 discriminator 3
 11889 0282 4A8D3C29 		leaq	(%rcx,%r13), %rdi
3864:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 11890              		.loc 1 3864 0 discriminator 3
 11891 0286 48C1F80F 		sarq	$15, %rax
3879:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.079550144)) /* c1+c5-c11 */
3880:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    + MULTIPLY(tmp5, FIX(0.765261039));        /* c7 */
3881:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += tmp11 - tmp14 + MULTIPLY(tmp3, FIX(0.645144899)) /* c1+c11-c7 */
3882:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp5, FIX(0.997307603));        /* c5 */
3883:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp15 + MULTIPLY(tmp0 - tmp3, FIX(1.161389302)) /* c3 */
3884:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    - MULTIPLY(tmp2 + tmp5, FIX(0.481063200)); /* c9 */
3885:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3886:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) DESCALE(tmp10, CONST_BITS+PASS1_BITS);
3887:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS);
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS);
3889:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
3890:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3891:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 11892              		.loc 1 3891 0 discriminator 3
 11893 028a 4983C704 		addq	$4, %r15
 11894              	.LVL1710:
3892:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 11895              		.loc 1 3892 0 discriminator 3
 11896 028e 4983C204 		addq	$4, %r10
 11897              	.LVL1711:
3864:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp14 - tmp15, FIX(0.888888889)) +        /* 8/9 */
 11898              		.loc 1 3864 0 discriminator 3
 11899 0292 4189473C 		movl	%eax, 60(%r15)
 11900              	.LVL1712:
3871:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX(0.680326102));  /* c3-c9 */
 11901              		.loc 1 3871 0 discriminator 3
 11902 0296 4A8D0436 		leaq	(%rsi,%r14), %rax
3872:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX(1.642452502));  /* c3+c9 */
 11903              		.loc 1 3872 0 discriminator 3
 11904 029a 4869F6C5 		imulq	$5573, %rsi, %rsi
 11904      150000
 11905              	.LVL1713:
3871:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp10 + MULTIPLY(tmp1, FIX(0.680326102));  /* c3-c9 */
 11906              		.loc 1 3871 0 discriminator 3
 11907 02a1 4869C065 		imulq	$3941, %rax, %rax
 11907      0F0000
 11908              	.LVL1714:
3873:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(0.997307603));   /* c5 */
 11909              		.loc 1 3873 0 discriminator 3
 11910 02a8 4D69F671 		imulq	$-13455, %r14, %r14
 11910      CBFFFF
 11911              	.LVL1715:
3872:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp15 = tmp10 - MULTIPLY(tmp4, FIX(1.642452502));  /* c3+c9 */
 11912              		.loc 1 3872 0 discriminator 3
 11913 02af 4801C6   		addq	%rax, %rsi
 11914              	.LVL1716:
3873:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 + tmp2, FIX(0.997307603));   /* c5 */
 11915              		.loc 1 3873 0 discriminator 3
 11916 02b2 4901C6   		addq	%rax, %r14
 11917              	.LVL1717:
3875:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.516244403)) /* c5+c7-c1 */
 11918              		.loc 1 3875 0 discriminator 3
 11919 02b5 4A8D042A 		leaq	(%rdx,%r13), %rax
 11920              	.LVL1718:
3874:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp0 + tmp3, FIX(0.765261039));   /* c7 */
 11921              		.loc 1 3874 0 discriminator 3
 11922 02b9 4D69C0EA 		imulq	$8170, %r8, %r8
 11922      1F0000
 11923              	.LVL1719:
3875:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp12 + tmp13 + tmp14 - MULTIPLY(tmp0, FIX(0.516244403)) /* c5+c7-c1 */
 11924              		.loc 1 3875 0 discriminator 3
 11925 02c0 4869C07D 		imulq	$6269, %rax, %rax
 11925      180000
 11926              	.LVL1720:
3878:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp11 - tmp15 - MULTIPLY(tmp2, FIX(2.079550144)) /* c1+c5-c11 */
 11927              		.loc 1 3878 0 discriminator 3
 11928 02c7 4869FFC0 		imulq	$-1344, %rdi, %rdi
 11928      FAFFFF
 11929              	.LVL1721:
3886:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS);
 11930              		.loc 1 3886 0 discriminator 3
 11931 02ce 4D8D1C00 		leaq	(%r8,%rax), %r11
 11932 02d2 4D8D0C33 		leaq	(%r11,%rsi), %r9
 11933 02d6 4C69DA7B 		imulq	$-4229, %rdx, %r11
 11933      EFFFFF
 11934              	.LVL1722:
3887:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS);
 11935              		.loc 1 3887 0 discriminator 3
 11936 02dd 4C29EA   		subq	%r13, %rdx
 11937              	.LVL1723:
 11938 02e0 4869D22A 		imulq	$9514, %rdx, %rdx
 11938      250000
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11939              		.loc 1 3889 0 discriminator 3
 11940 02e7 4D69EDA5 		imulq	$5285, %r13, %r13
 11940      140000
 11941              	.LVL1724:
3886:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS);
 11942              		.loc 1 3886 0 discriminator 3
 11943 02ee 4D01CB   		addq	%r9, %r11
 11944              	.LVL1725:
 11945 02f1 4C8D4CAD 		leaq	0(%rbp,%rbp,4), %r9
 11945      00
3887:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS);
 11946              		.loc 1 3887 0 discriminator 3
 11947 02f6 4C01F2   		addq	%r14, %rdx
3886:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp11, CONST_BITS+PASS1_BITS);
 11948              		.loc 1 3886 0 discriminator 3
 11949 02f9 4E8D4C8D 		leaq	0(%rbp,%r9,4), %r9
 11949      00
 11950 02fe 49C1E106 		salq	$6, %r9
 11951 0302 4F8D8C0B 		leaq	16384(%r11,%r9), %r9
 11951      00400000 
 11952 030a 49C1F90F 		sarq	$15, %r9
 11953 030e 45894F1C 		movl	%r9d, 28(%r15)
 11954              	.LVL1726:
3887:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS);
 11955              		.loc 1 3887 0 discriminator 3
 11956 0312 4C8D0C29 		leaq	(%rcx,%rbp), %r9
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11957              		.loc 1 3888 0 discriminator 3
 11958 0316 4869C974 		imulq	$-17036, %rcx, %rcx
 11958      BDFFFF
 11959              	.LVL1727:
3887:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) DESCALE(tmp12, CONST_BITS+PASS1_BITS);
 11960              		.loc 1 3887 0 discriminator 3
 11961 031d 4D69C99B 		imulq	$-3941, %r9, %r9
 11961      F0FFFF
 11962 0324 4A8D940A 		leaq	16384(%rdx,%r9), %rdx
 11962      00400000 
 11963 032c 48C1FA0F 		sarq	$15, %rdx
 11964 0330 4189575C 		movl	%edx, 92(%r15)
 11965              	.LVL1728:
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11966              		.loc 1 3888 0 discriminator 3
 11967 0334 4889FA   		movq	%rdi, %rdx
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11968              		.loc 1 3889 0 discriminator 3
 11969 0337 4829F7   		subq	%rsi, %rdi
 11970              	.LVL1729:
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11971              		.loc 1 3888 0 discriminator 3
 11972 033a 4C29F2   		subq	%r14, %rdx
 11973              	.LVL1730:
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11974              		.loc 1 3889 0 discriminator 3
 11975 033d 4901FD   		addq	%rdi, %r13
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11976              		.loc 1 3888 0 discriminator 3
 11977 0340 4801D1   		addq	%rdx, %rcx
 11978 0343 4869D57D 		imulq	$6269, %rbp, %rdx
 11978      180000
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11979              		.loc 1 3889 0 discriminator 3
 11980 034a 4869ED16 		imulq	$-8170, %rbp, %rbp
 11980      E0FFFF
 11981              	.LVL1731:
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11982              		.loc 1 3888 0 discriminator 3
 11983 0351 4801D1   		addq	%rdx, %rcx
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11984              		.loc 1 3889 0 discriminator 3
 11985 0354 4C01ED   		addq	%r13, %rbp
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11986              		.loc 1 3888 0 discriminator 3
 11987 0357 498D9408 		leaq	16384(%r8,%rcx), %rdx
 11987      00400000 
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11988              		.loc 1 3889 0 discriminator 3
 11989 035f 488D8428 		leaq	16384(%rax,%rbp), %rax
 11989      00400000 
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11990              		.loc 1 3888 0 discriminator 3
 11991 0367 48C1FA0F 		sarq	$15, %rdx
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11992              		.loc 1 3889 0 discriminator 3
 11993 036b 48C1F80F 		sarq	$15, %rax
3888:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp13, CONST_BITS+PASS1_BITS);
 11994              		.loc 1 3888 0 discriminator 3
 11995 036f 4189979C 		movl	%edx, 156(%r15)
 11995      000000
3889:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 11996              		.loc 1 3889 0 discriminator 3
 11997 0376 418987DC 		movl	%eax, 220(%r15)
 11997      000000
 11998              	.LVL1732:
3831:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 11999              		.loc 1 3831 0 discriminator 3
 12000 037d 4C3B5424 		cmpq	8(%rsp), %r10
 12000      08
 12001 0382 0F85D8FD 		jne	.L195
 12001      FFFF
3893:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3894:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 12002              		.loc 1 3894 0
 12003 0388 488B8424 		movq	152(%rsp), %rax
 12003      98000000 
 12004 0390 64483304 		xorq	%fs:40, %rax
 12004      25280000 
 12004      00
 12005 0399 751C     		jne	.L202
 12006 039b 4881C4A8 		addq	$168, %rsp
 12006      000000
 12007              		.cfi_remember_state
 12008              		.cfi_def_cfa_offset 56
 12009 03a2 5B       		popq	%rbx
 12010              		.cfi_def_cfa_offset 48
 12011 03a3 5D       		popq	%rbp
 12012              		.cfi_def_cfa_offset 40
 12013 03a4 415C     		popq	%r12
 12014              		.cfi_def_cfa_offset 32
 12015 03a6 415D     		popq	%r13
 12016              		.cfi_def_cfa_offset 24
 12017 03a8 415E     		popq	%r14
 12018              		.cfi_def_cfa_offset 16
 12019              	.LVL1733:
 12020 03aa 415F     		popq	%r15
 12021              		.cfi_def_cfa_offset 8
 12022              	.LVL1734:
 12023 03ac C3       		ret
 12024              	.LVL1735:
 12025              	.L197:
 12026              		.cfi_restore_state
3818:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 12027              		.loc 1 3818 0
 12028 03ad 4C8D4C24 		leaq	16(%rsp), %r9
 12028      10
 12029              	.LVL1736:
 12030 03b2 E9ADFCFF 		jmp	.L193
 12030      FF
 12031              	.LVL1737:
 12032              	.L202:
 12033              		.loc 1 3894 0
 12034 03b7 E8000000 		call	__stack_chk_fail
 12034      00
 12035              	.LVL1738:
 12036              		.cfi_endproc
 12037              	.LFE87:
 12039              		.section	.text.unlikely.jpeg_fdct_6x12
 12040              	.LCOLDE26:
 12041              		.section	.text.jpeg_fdct_6x12
 12042              	.LHOTE26:
 12043              		.section	.text.unlikely.jpeg_fdct_5x10,"ax",@progbits
 12044              	.LCOLDB27:
 12045              		.section	.text.jpeg_fdct_5x10,"ax",@progbits
 12046              	.LHOTB27:
 12047              		.p2align 4,,15
 12048              		.globl	jpeg_fdct_5x10
 12050              	jpeg_fdct_5x10:
 12051              	.LFB88:
3895:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3896:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3897:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
3898:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 5x10 sample block.
3899:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
3900:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 5-point FDCT in pass 1 (rows), 10-point in pass 2 (columns).
3901:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
3902:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3903:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
3904:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_5x10 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
3905:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 12052              		.loc 1 3905 0
 12053              		.cfi_startproc
 12054              	.LVL1739:
 12055 0000 4157     		pushq	%r15
 12056              		.cfi_def_cfa_offset 16
 12057              		.cfi_offset 15, -16
 12058 0002 4156     		pushq	%r14
 12059              		.cfi_def_cfa_offset 24
 12060              		.cfi_offset 14, -24
 12061 0004 4989F8   		movq	%rdi, %r8
 12062 0007 4155     		pushq	%r13
 12063              		.cfi_def_cfa_offset 32
 12064              		.cfi_offset 13, -32
 12065 0009 4154     		pushq	%r12
 12066              		.cfi_def_cfa_offset 40
 12067              		.cfi_offset 12, -40
 12068              	.LBB114:
 12069              	.LBB115:
 12070              		.loc 2 90 0
 12071 000b 4883C708 		addq	$8, %rdi
 12072              	.LVL1740:
 12073              	.LBE115:
 12074              	.LBE114:
 12075              		.loc 1 3905 0
 12076 000f 55       		pushq	%rbp
 12077              		.cfi_def_cfa_offset 48
 12078              		.cfi_offset 6, -48
 12079 0010 53       		pushq	%rbx
 12080              		.cfi_def_cfa_offset 56
 12081              		.cfi_offset 3, -56
 12082              	.LBB118:
 12083              	.LBB116:
 12084              		.loc 2 90 0
 12085 0011 4C89C1   		movq	%r8, %rcx
 12086 0014 89D2     		movl	%edx, %edx
 12087 0016 4D89C1   		movq	%r8, %r9
 12088              	.LBE116:
 12089              	.LBE118:
3906:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
3907:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
3908:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM workspace[8*2];
3909:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
3910:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *wsptr;
3911:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
3912:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
3913:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
3914:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3915:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
3916:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
3917:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3918:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
3919:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
3920:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
3921:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 5-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/10).
3922:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3923:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3924:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3925:fltk-1.3.4-1/jpeg/jfdctint.c ****   ctr = 0;
 12090              		.loc 1 3925 0
 12091 0019 4531D2   		xorl	%r10d, %r10d
3905:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 12092              		.loc 1 3905 0
 12093 001c 4883EC58 		subq	$88, %rsp
 12094              		.cfi_def_cfa_offset 144
3905:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4;
 12095              		.loc 1 3905 0
 12096 0020 64488B04 		movq	%fs:40, %rax
 12096      25280000 
 12096      00
 12097 0029 48894424 		movq	%rax, 72(%rsp)
 12097      48
 12098 002e 31C0     		xorl	%eax, %eax
 12099              	.LVL1741:
 12100              	.LBB119:
 12101              	.LBB117:
 12102              		.loc 2 90 0
 12103 0030 48C747F8 		movq	$0, -8(%rdi)
 12103      00000000 
 12104 0038 48C787F0 		movq	$0, 240(%rdi)
 12104      00000000 
 12104      000000
 12105 0043 4883E7F8 		andq	$-8, %rdi
 12106 0047 4829F9   		subq	%rdi, %rcx
 12107 004a 81C10001 		addl	$256, %ecx
 12107      0000
 12108 0050 C1E903   		shrl	$3, %ecx
 12109 0053 F348AB   		rep stosq
 12110              	.LVL1742:
 12111 0056 EB0C     		jmp	.L204
 12112              	.LVL1743:
 12113 0058 0F1F8400 		.p2align 4,,10
 12113      00000000 
 12114              		.p2align 3
 12115              	.L212:
 12116              	.LBE117:
 12117              	.LBE119:
3926:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (;;) {
3927:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
3928:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3929:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3930:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3931:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[4]);
3932:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
3933:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
3934:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3935:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp1;
3936:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
3937:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3938:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[4]);
3939:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[3]);
3940:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3941:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
3942:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
3943:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << PASS1_BITS);
3944:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.790569415));          /* (c2+c4)/2 */
3945:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
3946:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.353553391));          /* (c2-c4)/2 */
3947:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS-PASS1_BITS);
3948:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS);
3949:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3950:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
3951:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3952:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp0 + tmp1, FIX(0.831253876));    /* c3 */
3953:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3954:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
3955:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
3956:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
3957:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
3958:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
3959:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS);
3960:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3961:fltk-1.3.4-1/jpeg/jfdctint.c ****     ctr++;
3962:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3963:fltk-1.3.4-1/jpeg/jfdctint.c ****     if (ctr != DCTSIZE) {
3964:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 10)
3965:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
3966:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr += DCTSIZE;	/* advance pointer to next row */
 12118              		.loc 1 3966 0
 12119 0060 4983C120 		addq	$32, %r9
 12120              	.LVL1744:
 12121              	.L204:
3927:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12122              		.loc 1 3927 0
 12123 0064 4963C2   		movslq	%r10d, %rax
 12124 0067 4889D7   		movq	%rdx, %rdi
3961:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12125              		.loc 1 3961 0
 12126 006a 4183C201 		addl	$1, %r10d
 12127              	.LVL1745:
3927:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12128              		.loc 1 3927 0
 12129 006e 48033CC6 		addq	(%rsi,%rax,8), %rdi
 12130              	.LVL1746:
3931:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
 12131              		.loc 1 3931 0
 12132 0072 440FB61F 		movzbl	(%rdi), %r11d
 12133 0076 440FB66F 		movzbl	4(%rdi), %r13d
 12133      04
3932:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
 12134              		.loc 1 3932 0
 12135 007b 0FB64F01 		movzbl	1(%rdi), %ecx
 12136 007f 440FB667 		movzbl	3(%rdi), %r12d
 12136      03
3933:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12137              		.loc 1 3933 0
 12138 0084 0FB65F02 		movzbl	2(%rdi), %ebx
3931:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
 12139              		.loc 1 3931 0
 12140 0088 438D042B 		leal	(%r11,%r13), %eax
3938:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[3]);
 12141              		.loc 1 3938 0
 12142 008c 4529EB   		subl	%r13d, %r11d
3932:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
 12143              		.loc 1 3932 0
 12144 008f 428D2C21 		leal	(%rcx,%r12), %ebp
3939:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12145              		.loc 1 3939 0
 12146 0093 4429E1   		subl	%r12d, %ecx
3938:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[3]);
 12147              		.loc 1 3938 0
 12148 0096 4D63DB   		movslq	%r11d, %r11
3931:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[3]);
 12149              		.loc 1 3931 0
 12150 0099 4898     		cltq
 12151              	.LVL1747:
3939:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12152              		.loc 1 3939 0
 12153 009b 4863C9   		movslq	%ecx, %rcx
3932:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[2]);
 12154              		.loc 1 3932 0
 12155 009e 4863ED   		movslq	%ebp, %rbp
 12156              	.LVL1748:
3935:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp0 - tmp1;
 12157              		.loc 1 3935 0
 12158 00a1 488D3C28 		leaq	(%rax,%rbp), %rdi
 12159              	.LVL1749:
3936:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12160              		.loc 1 3936 0
 12161 00a5 4829E8   		subq	%rbp, %rax
 12162              	.LVL1750:
3944:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 -= tmp2 << 2;
 12163              		.loc 1 3944 0
 12164 00a8 4869C04C 		imulq	$6476, %rax, %rax
 12164      190000
 12165              	.LVL1751:
3942:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << PASS1_BITS);
 12166              		.loc 1 3942 0
 12167 00af 488DAC3B 		leaq	-640(%rbx,%rdi), %rbp
 12167      80FDFFFF 
3945:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(0.353553391));          /* (c2-c4)/2 */
 12168              		.loc 1 3945 0
 12169 00b7 48C1E302 		salq	$2, %rbx
 12170              	.LVL1752:
 12171 00bb 4829DF   		subq	%rbx, %rdi
 12172              	.LVL1753:
3942:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << PASS1_BITS);
 12173              		.loc 1 3942 0
 12174 00be 48C1E502 		salq	$2, %rbp
3946:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) DESCALE(tmp11 + tmp10, CONST_BITS-PASS1_BITS);
 12175              		.loc 1 3946 0
 12176 00c2 4869FF50 		imulq	$2896, %rdi, %rdi
 12176      0B0000
 12177              	.LVL1754:
3942:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp10 + tmp2 - 5 * CENTERJSAMPLE) << PASS1_BITS);
 12178              		.loc 1 3942 0
 12179 00c9 418929   		movl	%ebp, (%r9)
 12180              	.LVL1755:
3947:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS);
 12181              		.loc 1 3947 0
 12182 00cc 488D9C38 		leaq	1024(%rax,%rdi), %rbx
 12182      00040000 
3948:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12183              		.loc 1 3948 0
 12184 00d4 4829F8   		subq	%rdi, %rax
 12185              	.LVL1756:
 12186 00d7 48050004 		addq	$1024, %rax
 12186      0000
 12187 00dd 48C1F80B 		sarq	$11, %rax
3947:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS);
 12188              		.loc 1 3947 0
 12189 00e1 48C1FB0B 		sarq	$11, %rbx
3948:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12190              		.loc 1 3948 0
 12191 00e5 41894110 		movl	%eax, 16(%r9)
3952:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12192              		.loc 1 3952 0
 12193 00e9 498D040B 		leaq	(%r11,%rcx), %rax
3947:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[4] = (DCTELEM) DESCALE(tmp11 - tmp10, CONST_BITS-PASS1_BITS);
 12194              		.loc 1 3947 0
 12195 00ed 41895908 		movl	%ebx, 8(%r9)
3954:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 12196              		.loc 1 3954 0
 12197 00f1 4D69DB71 		imulq	$4209, %r11, %r11
 12197      100000
 12198              	.LVL1757:
3952:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12199              		.loc 1 3952 0
 12200 00f8 4869C09A 		imulq	$6810, %rax, %rax
 12200      1A0000
 12201              	.LVL1758:
3957:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 12202              		.loc 1 3957 0
 12203 00ff 4869C95C 		imulq	$-17828, %rcx, %rcx
 12203      BAFFFF
 12204              	.LVL1759:
3954:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 12205              		.loc 1 3954 0
 12206 0106 4A8DBC18 		leaq	1024(%rax,%r11), %rdi
 12206      00040000 
3957:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 12207              		.loc 1 3957 0
 12208 010e 488D8408 		leaq	1024(%rax,%rcx), %rax
 12208      00040000 
 12209              	.LVL1760:
3954:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 12210              		.loc 1 3954 0
 12211 0116 48C1FF0B 		sarq	$11, %rdi
3957:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 12212              		.loc 1 3957 0
 12213 011a 48C1F80B 		sarq	$11, %rax
3963:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 10)
 12214              		.loc 1 3963 0
 12215 011e 4183FA08 		cmpl	$8, %r10d
3954:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0, FIX(0.513743148)), /* c1-c3 */
 12216              		.loc 1 3954 0
 12217 0122 41897904 		movl	%edi, 4(%r9)
3957:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp1, FIX(2.176250899)), /* c1+c3 */
 12218              		.loc 1 3957 0
 12219 0126 4189410C 		movl	%eax, 12(%r9)
3963:fltk-1.3.4-1/jpeg/jfdctint.c ****       if (ctr == 10)
 12220              		.loc 1 3963 0
 12221 012a 0F840B02 		je	.L209
 12221      0000
3964:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 12222              		.loc 1 3964 0
 12223 0130 4183FA0A 		cmpl	$10, %r10d
 12224 0134 0F8526FF 		jne	.L212
 12224      FFFF
 12225 013a 4D8D6814 		leaq	20(%r8), %r13
3964:fltk-1.3.4-1/jpeg/jfdctint.c **** 	break;			/* Done. */
 12226              		.loc 1 3964 0 is_stmt 0 discriminator 3
 12227 013e 4989E4   		movq	%rsp, %r12
 12228              	.LVL1761:
 12229              	.L207:
3967:fltk-1.3.4-1/jpeg/jfdctint.c ****     } else
3968:fltk-1.3.4-1/jpeg/jfdctint.c ****       dataptr = workspace;	/* switch pointer to extended workspace */
3969:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
3970:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3971:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
3972:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
3973:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
3974:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/5)*(8/10) = 32/25, which we
3975:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers:
3976:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 10-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/20) * 32/25.
3977:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
3978:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3979:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
3980:fltk-1.3.4-1/jpeg/jfdctint.c ****   wsptr = workspace;
3981:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 5; ctr++) {
3982:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
3983:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3984:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + wsptr[DCTSIZE*1];
 12230              		.loc 1 3984 0 is_stmt 1 discriminator 3
 12231 0141 418B00   		movl	(%r8), %eax
 12232 0144 458B7424 		movl	32(%r12), %r14d
 12232      20
3985:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*0];
 12233              		.loc 1 3985 0 discriminator 3
 12234 0149 418B7820 		movl	32(%r8), %edi
 12235 014d 418B2C24 		movl	(%r12), %ebp
3986:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*7];
3987:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
3988:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 12236              		.loc 1 3988 0 discriminator 3
 12237 0151 418B98A0 		movl	160(%r8), %ebx
 12237      000000
3987:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 12238              		.loc 1 3987 0 discriminator 3
 12239 0158 458B5860 		movl	96(%r8), %r11d
 12240              		.loc 1 3988 0 discriminator 3
 12241 015c 458BB880 		movl	128(%r8), %r15d
 12241      000000
3987:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 12242              		.loc 1 3987 0 discriminator 3
 12243 0163 450398C0 		addl	192(%r8), %r11d
 12243      000000
3984:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*0];
 12244              		.loc 1 3984 0 discriminator 3
 12245 016a 428D3430 		leal	(%rax,%r14), %esi
3985:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*7];
 12246              		.loc 1 3985 0 discriminator 3
 12247 016e 8D0C2F   		leal	(%rdi,%rbp), %ecx
3986:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
 12248              		.loc 1 3986 0 discriminator 3
 12249 0171 418B5040 		movl	64(%r8), %edx
 12250 0175 458B88E0 		movl	224(%r8), %r9d
 12250      000000
3984:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + wsptr[DCTSIZE*0];
 12251              		.loc 1 3984 0 discriminator 3
 12252 017c 4863F6   		movslq	%esi, %rsi
 12253              	.LVL1762:
3989:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3990:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
3991:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
3992:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
3993:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
3994:fltk-1.3.4-1/jpeg/jfdctint.c **** 
3995:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - wsptr[DCTSIZE*1];
3996:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*0];
 12254              		.loc 1 3996 0 discriminator 3
 12255 017f 29EF     		subl	%ebp, %edi
3995:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*0];
 12256              		.loc 1 3995 0 discriminator 3
 12257 0181 4429F0   		subl	%r14d, %eax
3988:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12258              		.loc 1 3988 0 discriminator 3
 12259 0184 4101DF   		addl	%ebx, %r15d
3985:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*7];
 12260              		.loc 1 3985 0 discriminator 3
 12261 0187 4863C9   		movslq	%ecx, %rcx
 12262              	.LVL1763:
3997:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*7];
3998:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*6];
3999:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*5];
 12263              		.loc 1 3999 0 discriminator 3
 12264 018a 458BB080 		movl	128(%r8), %r14d
 12264      000000
3987:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] + dataptr[DCTSIZE*5];
 12265              		.loc 1 3987 0 discriminator 3
 12266 0191 4D63DB   		movslq	%r11d, %r11
3988:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12267              		.loc 1 3988 0 discriminator 3
 12268 0194 4D63FF   		movslq	%r15d, %r15
3986:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
 12269              		.loc 1 3986 0 discriminator 3
 12270 0197 4101D1   		addl	%edx, %r9d
3990:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp0 - tmp4;
 12271              		.loc 1 3990 0 discriminator 3
 12272 019a 4E8D143E 		leaq	(%rsi,%r15), %r10
3991:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp3;
 12273              		.loc 1 3991 0 discriminator 3
 12274 019e 4C29FE   		subq	%r15, %rsi
 12275              	.LVL1764:
3992:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp14 = tmp1 - tmp3;
 12276              		.loc 1 3992 0 discriminator 3
 12277 01a1 4E8D3C19 		leaq	(%rcx,%r11), %r15
3986:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*6];
 12278              		.loc 1 3986 0 discriminator 3
 12279 01a5 4D63C9   		movslq	%r9d, %r9
 12280              	.LVL1765:
3993:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12281              		.loc 1 3993 0 discriminator 3
 12282 01a8 4C29D9   		subq	%r11, %rcx
 12283              	.LVL1766:
3998:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*5];
 12284              		.loc 1 3998 0 discriminator 3
 12285 01ab 458B5860 		movl	96(%r8), %r11d
 12286              	.LVL1767:
4000:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4001:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
 12287              		.loc 1 4001 0 discriminator 3
 12288 01af 4B8D2C3A 		leaq	(%r10,%r15), %rbp
 12289              	.LVL1768:
3998:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*5];
 12290              		.loc 1 3998 0 discriminator 3
 12291 01b3 452B98C0 		subl	192(%r8), %r11d
 12291      000000
 12292              	.LVL1769:
3999:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12293              		.loc 1 3999 0 discriminator 3
 12294 01ba 4129DE   		subl	%ebx, %r14d
3997:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*6];
 12295              		.loc 1 3997 0 discriminator 3
 12296 01bd 412B90E0 		subl	224(%r8), %edx
 12296      000000
3995:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - wsptr[DCTSIZE*0];
 12297              		.loc 1 3995 0 discriminator 3
 12298 01c4 4898     		cltq
 12299              	.LVL1770:
3999:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12300              		.loc 1 3999 0 discriminator 3
 12301 01c6 4963DE   		movslq	%r14d, %rbx
 12302              		.loc 1 4001 0 discriminator 3
 12303 01c9 4C01CD   		addq	%r9, %rbp
4002:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
4003:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4004:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += tmp12;
 12304              		.loc 1 4004 0 discriminator 3
 12305 01cc 4D01C9   		addq	%r9, %r9
 12306              	.LVL1771:
3996:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*7];
 12307              		.loc 1 3996 0 discriminator 3
 12308 01cf 4863FF   		movslq	%edi, %rdi
 12309              	.LVL1772:
4005:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
 12310              		.loc 1 4005 0 discriminator 3
 12311 01d2 4D29CA   		subq	%r9, %r10
 12312              	.LVL1773:
 12313 01d5 4D29CF   		subq	%r9, %r15
 12314              	.LVL1774:
 12315 01d8 4D69D2DD 		imulq	$11997, %r10, %r10
 12315      2E0000
3998:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp4 = dataptr[DCTSIZE*4] - dataptr[DCTSIZE*5];
 12316              		.loc 1 3998 0 discriminator 3
 12317 01df 4D63DB   		movslq	%r11d, %r11
 12318              		.loc 1 4005 0 discriminator 3
 12319 01e2 4D69FF1A 		imulq	$-4582, %r15, %r15
 12319      EEFFFF
3997:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*6];
 12320              		.loc 1 3997 0 discriminator 3
 12321 01e9 4863D2   		movslq	%edx, %rdx
 12322              	.LVL1775:
4001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 12323              		.loc 1 4001 0 discriminator 3
 12324 01ec 4869EDF6 		imulq	$10486, %rbp, %rbp
 12324      280000
 12325              		.loc 1 4005 0 discriminator 3
 12326 01f3 4F8D8C3A 		leaq	16384(%r10,%r15), %r9
 12326      00400000 
 12327              	.LVL1776:
4001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 12328              		.loc 1 4001 0 discriminator 3
 12329 01fb 4881C500 		addq	$16384, %rbp
 12329      400000
 12330              		.loc 1 4005 0 discriminator 3
 12331 0202 49C1F90F 		sarq	$15, %r9
4001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 12332              		.loc 1 4001 0 discriminator 3
 12333 0206 48C1FD0F 		sarq	$15, %rbp
 12334              		.loc 1 4005 0 discriminator 3
 12335 020a 45898880 		movl	%r9d, 128(%r8)
 12335      000000
 12336              	.LVL1777:
4006:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp12, FIX(1.464477191)) - /* c4 */
4007:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp11 - tmp12, FIX(0.559380511)),  /* c8 */
4008:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4009:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp13 + tmp14, FIX(1.064004961));    /* c6 */
 12337              		.loc 1 4009 0 discriminator 3
 12338 0211 4C8D0C0E 		leaq	(%rsi,%rcx), %r9
4001:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11 + tmp12, FIX(1.28)), /* 32/25 */
 12339              		.loc 1 4001 0 discriminator 3
 12340 0215 418928   		movl	%ebp, (%r8)
4010:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
4011:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.657591230)),  /* c2-c6 */
4012:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4013:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
 12341              		.loc 1 4013 0 discriminator 3
 12342 0218 4869C9DC 		imulq	$-22820, %rcx, %rcx
 12342      A6FFFF
 12343              	.LVL1778:
4009:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 12344              		.loc 1 4009 0 discriminator 3
 12345 021f 4D69C90C 		imulq	$8716, %r9, %r9
 12345      220000
 12346              	.LVL1779:
4010:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 12347              		.loc 1 4010 0 discriminator 3
 12348 0226 4869F60B 		imulq	$5387, %rsi, %rsi
 12348      150000
 12349              	.LVL1780:
 12350              		.loc 1 4013 0 discriminator 3
 12351 022d 498D8C09 		leaq	16384(%r9,%rcx), %rcx
 12351      00400000 
4010:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
 12352              		.loc 1 4010 0 discriminator 3
 12353 0235 498DB431 		leaq	16384(%r9,%rsi), %rsi
 12353      00400000 
4014:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.785601151)),  /* c2+c6 */
4015:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4016:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4017:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
4018:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4019:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp4;
 12354              		.loc 1 4019 0 discriminator 3
 12355 023d 4C8D0C18 		leaq	(%rax,%rbx), %r9
 12356              	.LVL1781:
4013:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.785601151)),  /* c2+c6 */
 12357              		.loc 1 4013 0 discriminator 3
 12358 0241 48C1F90F 		sarq	$15, %rcx
4010:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.657591230)),  /* c2-c6 */
 12359              		.loc 1 4010 0 discriminator 3
 12360 0245 48C1FE0F 		sarq	$15, %rsi
4013:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 - MULTIPLY(tmp14, FIX(2.785601151)),  /* c2+c6 */
 12361              		.loc 1 4013 0 discriminator 3
 12362 0249 418988C0 		movl	%ecx, 192(%r8)
 12362      000000
 12363              	.LVL1782:
4020:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 - tmp3;
 12364              		.loc 1 4020 0 discriminator 3
 12365 0250 4889F9   		movq	%rdi, %rcx
 12366 0253 4C29D9   		subq	%r11, %rcx
 12367              	.LVL1783:
4010:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp13, FIX(0.657591230)),  /* c2-c6 */
 12368              		.loc 1 4010 0 discriminator 3
 12369 0256 41897040 		movl	%esi, 64(%r8)
 12370              	.LVL1784:
4021:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
 12371              		.loc 1 4021 0 discriminator 3
 12372 025a 4C89CE   		movq	%r9, %rsi
 12373 025d 4829CE   		subq	%rcx, %rsi
 12374 0260 4829D6   		subq	%rdx, %rsi
 12375 0263 4869F6F6 		imulq	$10486, %rsi, %rsi
 12375      280000
4022:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp2, FIX(1.28)),  /* 32/25 */
4023:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4024:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX(1.28));                     /* 32/25 */
 12376              		.loc 1 4024 0 discriminator 3
 12377 026a 4869D2F6 		imulq	$10486, %rdx, %rdx
 12377      280000
 12378              	.LVL1785:
4021:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
 12379              		.loc 1 4021 0 discriminator 3
 12380 0271 4881C600 		addq	$16384, %rsi
 12380      400000
 12381 0278 48C1FE0F 		sarq	$15, %rsi
 12382 027c 4189B0A0 		movl	%esi, 160(%r8)
 12382      000000
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 12383              		.loc 1 4025 0 discriminator 3
 12384 0283 4C69D037 		imulq	$14647, %rax, %r10
 12384      390000
4026:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
4027:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp1, FIX(1.612894094)) + tmp2 +   /* c3 */
4028:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp3, FIX(0.821810588)) +          /* c7 */
4029:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      MULTIPLY(tmp4, FIX(0.283176630)),           /* c9 */
4030:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4031:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp0 - tmp4, FIX(1.217352341)) -     /* (c3+c7)/2 */
4032:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
4033:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp10 + tmp11, FIX(0.395541753)) +   /* (c3-c7)/2 */
 12385              		.loc 1 4033 0 discriminator 3
 12386 028a 4901C9   		addq	%rcx, %r9
 12387              	.LVL1786:
4031:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 12388              		.loc 1 4031 0 discriminator 3
 12389 028d 4829D8   		subq	%rbx, %rax
 12390              	.LVL1787:
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
 12391              		.loc 1 4025 0 discriminator 3
 12392 0290 4869F79D 		imulq	$13213, %rdi, %rsi
 12392      330000
4031:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 12393              		.loc 1 4031 0 discriminator 3
 12394 0297 4C01DF   		addq	%r11, %rdi
 12395              	.LVL1788:
4034:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
4035:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) DESCALE(tmp12 + tmp13, CONST_BITS+PASS1_BITS);
4036:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+PASS1_BITS);
4037:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4038:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 12396              		.loc 1 4038 0 discriminator 3
 12397 029a 4983C004 		addq	$4, %r8
 12398              	.LVL1789:
4033:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 12399              		.loc 1 4033 0 discriminator 3
 12400 029e 4D69C9A8 		imulq	$3240, %r9, %r9
 12400      0C0000
4039:fltk-1.3.4-1/jpeg/jfdctint.c ****     wsptr++;			/* advance pointer to next column */
 12401              		.loc 1 4039 0 discriminator 3
 12402 02a5 4983C404 		addq	$4, %r12
 12403              	.LVL1790:
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 12404              		.loc 1 4025 0 discriminator 3
 12405 02a9 4C01D6   		addq	%r10, %rsi
 12406 02ac 4D69D34C 		imulq	$6732, %r11, %r10
 12406      1A0000
 12407 02b3 4801D6   		addq	%rdx, %rsi
4033:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 12408              		.loc 1 4033 0 discriminator 3
 12409 02b6 4869C97B 		imulq	$5243, %rcx, %rcx
 12409      140000
 12410              	.LVL1791:
4031:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 12411              		.loc 1 4031 0 discriminator 3
 12412 02bd 4869C0F5 		imulq	$9973, %rax, %rax
 12412      260000
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 12413              		.loc 1 4025 0 discriminator 3
 12414 02c4 4C01D6   		addq	%r10, %rsi
4033:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 12415              		.loc 1 4033 0 discriminator 3
 12416 02c7 4C01C9   		addq	%r9, %rcx
4031:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 12417              		.loc 1 4031 0 discriminator 3
 12418 02ca 4869FFED 		imulq	$-6163, %rdi, %rdi
 12418      E7FFFF
4033:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp11, FIX(0.64)) - tmp2;            /* 16/25 */
 12419              		.loc 1 4033 0 discriminator 3
 12420 02d1 4829D1   		subq	%rdx, %rcx
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 12421              		.loc 1 4025 0 discriminator 3
 12422 02d4 4C69D310 		imulq	$2320, %rbx, %r10
 12422      090000
4031:fltk-1.3.4-1/jpeg/jfdctint.c **** 	    MULTIPLY(tmp1 + tmp3, FIX(0.752365123));      /* (c1-c9)/2 */
 12423              		.loc 1 4031 0 discriminator 3
 12424 02db 4801C7   		addq	%rax, %rdi
 12425              	.LVL1792:
4035:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+PASS1_BITS);
 12426              		.loc 1 4035 0 discriminator 3
 12427 02de 488D840F 		leaq	16384(%rdi,%rcx), %rax
 12427      00400000 
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 12428              		.loc 1 4025 0 discriminator 3
 12429 02e6 4A8DB416 		leaq	16384(%rsi,%r10), %rsi
 12429      00400000 
4036:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12430              		.loc 1 4036 0 discriminator 3
 12431 02ee 4829CF   		subq	%rcx, %rdi
 12432              	.LVL1793:
 12433 02f1 4881C700 		addq	$16384, %rdi
 12433      400000
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 12434              		.loc 1 4025 0 discriminator 3
 12435 02f8 48C1FE0F 		sarq	$15, %rsi
4035:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+PASS1_BITS);
 12436              		.loc 1 4035 0 discriminator 3
 12437 02fc 48C1F80F 		sarq	$15, %rax
4036:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12438              		.loc 1 4036 0 discriminator 3
 12439 0300 48C1FF0F 		sarq	$15, %rdi
4025:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0, FIX(1.787906876)) +          /* c1 */
 12440              		.loc 1 4025 0 discriminator 3
 12441 0304 4189701C 		movl	%esi, 28(%r8)
 12442              	.LVL1794:
4035:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) DESCALE(tmp12 - tmp13, CONST_BITS+PASS1_BITS);
 12443              		.loc 1 4035 0 discriminator 3
 12444 0308 4189405C 		movl	%eax, 92(%r8)
4036:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12445              		.loc 1 4036 0 discriminator 3
 12446 030c 4189B8DC 		movl	%edi, 220(%r8)
 12446      000000
 12447              	.LVL1795:
3981:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 12448              		.loc 1 3981 0 discriminator 3
 12449 0313 4D39E8   		cmpq	%r13, %r8
 12450 0316 0F8525FE 		jne	.L207
 12450      FFFF
4040:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
4041:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 12451              		.loc 1 4041 0
 12452 031c 488B4424 		movq	72(%rsp), %rax
 12452      48
 12453 0321 64483304 		xorq	%fs:40, %rax
 12453      25280000 
 12453      00
 12454 032a 7517     		jne	.L213
 12455 032c 4883C458 		addq	$88, %rsp
 12456              		.cfi_remember_state
 12457              		.cfi_def_cfa_offset 56
 12458 0330 5B       		popq	%rbx
 12459              		.cfi_def_cfa_offset 48
 12460              	.LVL1796:
 12461 0331 5D       		popq	%rbp
 12462              		.cfi_def_cfa_offset 40
 12463 0332 415C     		popq	%r12
 12464              		.cfi_def_cfa_offset 32
 12465              	.LVL1797:
 12466 0334 415D     		popq	%r13
 12467              		.cfi_def_cfa_offset 24
 12468              	.LVL1798:
 12469 0336 415E     		popq	%r14
 12470              		.cfi_def_cfa_offset 16
 12471              	.LVL1799:
 12472 0338 415F     		popq	%r15
 12473              		.cfi_def_cfa_offset 8
 12474 033a C3       		ret
 12475              	.LVL1800:
 12476              	.L209:
 12477              		.cfi_restore_state
3968:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
 12478              		.loc 1 3968 0
 12479 033b 4989E1   		movq	%rsp, %r9
 12480              	.LVL1801:
 12481 033e E921FDFF 		jmp	.L204
 12481      FF
 12482              	.LVL1802:
 12483              	.L213:
 12484              		.loc 1 4041 0
 12485 0343 E8000000 		call	__stack_chk_fail
 12485      00
 12486              	.LVL1803:
 12487              		.cfi_endproc
 12488              	.LFE88:
 12490              		.section	.text.unlikely.jpeg_fdct_5x10
 12491              	.LCOLDE27:
 12492              		.section	.text.jpeg_fdct_5x10
 12493              	.LHOTE27:
 12494              		.section	.text.unlikely.jpeg_fdct_4x8,"ax",@progbits
 12495              	.LCOLDB28:
 12496              		.section	.text.jpeg_fdct_4x8,"ax",@progbits
 12497              	.LHOTB28:
 12498              		.p2align 4,,15
 12499              		.globl	jpeg_fdct_4x8
 12501              	jpeg_fdct_4x8:
 12502              	.LFB89:
4042:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4043:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4044:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
4045:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 4x8 sample block.
4046:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
4047:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 4-point FDCT in pass 1 (rows), 8-point in pass 2 (columns).
4048:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
4049:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4050:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
4051:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_4x8 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
4052:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 12503              		.loc 1 4052 0
 12504              		.cfi_startproc
 12505              	.LVL1804:
 12506 0000 4157     		pushq	%r15
 12507              		.cfi_def_cfa_offset 16
 12508              		.cfi_offset 15, -16
 12509 0002 4989F8   		movq	%rdi, %r8
 12510 0005 4156     		pushq	%r14
 12511              		.cfi_def_cfa_offset 24
 12512              		.cfi_offset 14, -24
 12513              	.LBB120:
 12514              	.LBB121:
 12515              		.loc 2 90 0
 12516 0007 4C8D8F00 		leaq	256(%rdi), %r9
 12516      010000
 12517              	.LBE121:
 12518              	.LBE120:
 12519              		.loc 1 4052 0
 12520 000e 4155     		pushq	%r13
 12521              		.cfi_def_cfa_offset 32
 12522              		.cfi_offset 13, -32
 12523              	.LBB125:
 12524              	.LBB122:
 12525              		.loc 2 90 0
 12526 0010 488D7F08 		leaq	8(%rdi), %rdi
 12527              	.LVL1805:
 12528              	.LBE122:
 12529              	.LBE125:
 12530              		.loc 1 4052 0
 12531 0014 4154     		pushq	%r12
 12532              		.cfi_def_cfa_offset 40
 12533              		.cfi_offset 12, -40
 12534 0016 55       		pushq	%rbp
 12535              		.cfi_def_cfa_offset 48
 12536              		.cfi_offset 6, -48
 12537              	.LBB126:
 12538              	.LBB123:
 12539              		.loc 2 90 0
 12540 0017 4C89C1   		movq	%r8, %rcx
 12541              	.LBE123:
 12542              	.LBE126:
 12543              		.loc 1 4052 0
 12544 001a 53       		pushq	%rbx
 12545              		.cfi_def_cfa_offset 56
 12546              		.cfi_offset 3, -56
 12547              	.LBB127:
 12548              	.LBB124:
 12549              		.loc 2 90 0
 12550 001b 48C747F8 		movq	$0, -8(%rdi)
 12550      00000000 
 12551 0023 31C0     		xorl	%eax, %eax
 12552 0025 48C787F0 		movq	$0, 240(%rdi)
 12552      00000000 
 12552      000000
 12553 0030 4883E7F8 		andq	$-8, %rdi
 12554 0034 89D2     		movl	%edx, %edx
 12555 0036 4829F9   		subq	%rdi, %rcx
 12556 0039 4D89C2   		movq	%r8, %r10
 12557 003c 81C10001 		addl	$256, %ecx
 12557      0000
 12558 0042 C1E903   		shrl	$3, %ecx
 12559 0045 F348AB   		rep stosq
 12560              	.LVL1806:
 12561 0048 0F1F8400 		.p2align 4,,10
 12561      00000000 
 12562              		.p2align 3
 12563              	.L215:
 12564              	.LBE124:
 12565              	.LBE127:
4053:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
4054:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13;
4055:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 z1;
4056:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
4057:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
4058:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
4059:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
4060:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4061:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
4062:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
4063:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4064:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
4065:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
4066:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
4067:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by 8/4 = 2, which we add here.
4068:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 4-point FDCT kernel,
4069:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point FDCT].
4070:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
4071:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4072:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
4073:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
4074:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 12566              		.loc 1 4074 0 discriminator 3
 12567 0050 4889D1   		movq	%rdx, %rcx
 12568 0053 48030E   		addq	(%rsi), %rcx
 12569              	.LVL1807:
4075:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4076:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
4077:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4078:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[3]);
4079:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
4080:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4081:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[3]);
4082:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[2]);
4083:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4084:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
4085:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
4086:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+1));
4087:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM) ((tmp0 - tmp1) << (PASS1_BITS+1));
4088:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4089:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
4090:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4091:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp11, FIX_0_541196100);       /* c6 */
4092:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
4093:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-2);
4094:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4095:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
4096:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
4097:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-1);
4098:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[3] = (DCTELEM)
4099:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
4100:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS-PASS1_BITS-1);
4101:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4102:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 12570              		.loc 1 4102 0 discriminator 3
 12571 0056 4983C220 		addq	$32, %r10
 12572              	.LVL1808:
 12573 005a 4883C608 		addq	$8, %rsi
4078:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 12574              		.loc 1 4078 0 discriminator 3
 12575 005e 0FB601   		movzbl	(%rcx), %eax
 12576 0061 0FB66903 		movzbl	3(%rcx), %ebp
4079:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12577              		.loc 1 4079 0 discriminator 3
 12578 0065 0FB65902 		movzbl	2(%rcx), %ebx
 12579 0069 0FB67901 		movzbl	1(%rcx), %edi
4078:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 12580              		.loc 1 4078 0 discriminator 3
 12581 006d 448D1C28 		leal	(%rax,%rbp), %r11d
4081:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[2]);
 12582              		.loc 1 4081 0 discriminator 3
 12583 0071 29E8     		subl	%ebp, %eax
4079:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12584              		.loc 1 4079 0 discriminator 3
 12585 0073 8D0C1F   		leal	(%rdi,%rbx), %ecx
 12586              	.LVL1809:
4082:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12587              		.loc 1 4082 0 discriminator 3
 12588 0076 29DF     		subl	%ebx, %edi
4081:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = GETJSAMPLE(elemptr[1]) - GETJSAMPLE(elemptr[2]);
 12589              		.loc 1 4081 0 discriminator 3
 12590 0078 4898     		cltq
4078:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]) + GETJSAMPLE(elemptr[2]);
 12591              		.loc 1 4078 0 discriminator 3
 12592 007a 4D63DB   		movslq	%r11d, %r11
 12593              	.LVL1810:
4082:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12594              		.loc 1 4082 0 discriminator 3
 12595 007d 4863FF   		movslq	%edi, %rdi
4079:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12596              		.loc 1 4079 0 discriminator 3
 12597 0080 4863C9   		movslq	%ecx, %rcx
 12598              	.LVL1811:
4085:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+1));
 12599              		.loc 1 4085 0 discriminator 3
 12600 0083 498D9C0B 		leaq	-512(%r11,%rcx), %rbx
 12600      00FEFFFF 
4087:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12601              		.loc 1 4087 0 discriminator 3
 12602 008b 4929CB   		subq	%rcx, %r11
 12603              	.LVL1812:
4091:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 12604              		.loc 1 4091 0 discriminator 3
 12605 008e 488D0C38 		leaq	(%rax,%rdi), %rcx
 12606              	.LVL1813:
4095:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 12607              		.loc 1 4095 0 discriminator 3
 12608 0092 4869C07E 		imulq	$6270, %rax, %rax
 12608      180000
 12609              	.LVL1814:
4087:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12610              		.loc 1 4087 0 discriminator 3
 12611 0099 49C1E303 		salq	$3, %r11
4091:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 12612              		.loc 1 4091 0 discriminator 3
 12613 009d 4869C951 		imulq	$4433, %rcx, %rcx
 12613      110000
 12614              	.LVL1815:
4085:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+1));
 12615              		.loc 1 4085 0 discriminator 3
 12616 00a4 48C1E303 		salq	$3, %rbx
4087:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12617              		.loc 1 4087 0 discriminator 3
 12618 00a8 45895AE8 		movl	%r11d, -24(%r10)
 12619              	.LVL1816:
4098:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 12620              		.loc 1 4098 0 discriminator 3
 12621 00ac 4869FFDF 		imulq	$-15137, %rdi, %rdi
 12621      C4FFFF
 12622              	.LVL1817:
4085:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 4 * CENTERJSAMPLE) << (PASS1_BITS+1));
 12623              		.loc 1 4085 0 discriminator 3
 12624 00b3 41895AE0 		movl	%ebx, -32(%r10)
4093:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12625              		.loc 1 4093 0 discriminator 3
 12626 00b7 4881C100 		addq	$512, %rcx
 12626      020000
 12627              	.LVL1818:
4095:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 12628              		.loc 1 4095 0 discriminator 3
 12629 00be 4801C8   		addq	%rcx, %rax
4098:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 12630              		.loc 1 4098 0 discriminator 3
 12631 00c1 4801F9   		addq	%rdi, %rcx
 12632              	.LVL1819:
4095:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 12633              		.loc 1 4095 0 discriminator 3
 12634 00c4 48C1F80A 		sarq	$10, %rax
4098:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 12635              		.loc 1 4098 0 discriminator 3
 12636 00c8 48C1F90A 		sarq	$10, %rcx
4095:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 12637              		.loc 1 4095 0 discriminator 3
 12638 00cc 418942E4 		movl	%eax, -28(%r10)
4098:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 12639              		.loc 1 4098 0 discriminator 3
 12640 00d0 41894AEC 		movl	%ecx, -20(%r10)
 12641              	.LVL1820:
4073:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 12642              		.loc 1 4073 0 discriminator 3
 12643 00d4 4D39CA   		cmpq	%r9, %r10
 12644 00d7 0F8573FF 		jne	.L215
 12644      FFFF
 12645 00dd 498D7010 		leaq	16(%r8), %rsi
 12646              	.LVL1821:
 12647              	.L216:
4103:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
4104:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4105:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
4106:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
4107:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
4108:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 8-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
4109:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
4110:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4111:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
4112:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
4113:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
4114:fltk-1.3.4-1/jpeg/jfdctint.c ****      * rotator "c1" should be "c6".
4115:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
4116:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*7];
 12648              		.loc 1 4117 0 discriminator 3
 12649 00e1 418B90E0 		movl	224(%r8), %edx
 12649      000000
 12650 00e8 458B10   		movl	(%r8), %r10d
4118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 12651              		.loc 1 4118 0 discriminator 3
 12652 00eb 458B4820 		movl	32(%r8), %r9d
 12653 00ef 458BB0C0 		movl	192(%r8), %r14d
 12653      000000
4119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 12654              		.loc 1 4119 0 discriminator 3
 12655 00f6 418B7840 		movl	64(%r8), %edi
 12656 00fa 458BA8A0 		movl	160(%r8), %r13d
 12656      000000
4120:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 12657              		.loc 1 4120 0 discriminator 3
 12658 0101 418B4860 		movl	96(%r8), %ecx
 12659 0105 458BA080 		movl	128(%r8), %r12d
 12659      000000
4117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 12660              		.loc 1 4117 0 discriminator 3
 12661 010c 418D0412 		leal	(%r10,%rdx), %eax
4118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 12662              		.loc 1 4118 0 discriminator 3
 12663 0110 478D1C31 		leal	(%r9,%r14), %r11d
4121:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4122:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
4123:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp3 + (ONE << (PASS1_BITS-1));
4124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
4125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
4126:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
4127:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4128:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*7];
 12664              		.loc 1 4128 0 discriminator 3
 12665 0114 4129D2   		subl	%edx, %r10d
4129:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 12666              		.loc 1 4129 0 discriminator 3
 12667 0117 4529F1   		subl	%r14d, %r9d
4119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 12668              		.loc 1 4119 0 discriminator 3
 12669 011a 468D3C2F 		leal	(%rdi,%r13), %r15d
4117:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*6];
 12670              		.loc 1 4117 0 discriminator 3
 12671 011e 4898     		cltq
 12672              	.LVL1822:
4130:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 12673              		.loc 1 4130 0 discriminator 3
 12674 0120 4429EF   		subl	%r13d, %edi
4120:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12675              		.loc 1 4120 0 discriminator 3
 12676 0123 428D2C21 		leal	(%rcx,%r12), %ebp
4118:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*5];
 12677              		.loc 1 4118 0 discriminator 3
 12678 0127 4D63DB   		movslq	%r11d, %r11
 12679              	.LVL1823:
4131:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 12680              		.loc 1 4131 0 discriminator 3
 12681 012a 4429E1   		subl	%r12d, %ecx
4119:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] + dataptr[DCTSIZE*4];
 12682              		.loc 1 4119 0 discriminator 3
 12683 012d 4D63FF   		movslq	%r15d, %r15
 12684              	.LVL1824:
4128:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*6];
 12685              		.loc 1 4128 0 discriminator 3
 12686 0130 4D63D2   		movslq	%r10d, %r10
4129:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*5];
 12687              		.loc 1 4129 0 discriminator 3
 12688 0133 4D63C9   		movslq	%r9d, %r9
4120:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12689              		.loc 1 4120 0 discriminator 3
 12690 0136 4863ED   		movslq	%ebp, %rbp
 12691              	.LVL1825:
4130:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = dataptr[DCTSIZE*3] - dataptr[DCTSIZE*4];
 12692              		.loc 1 4130 0 discriminator 3
 12693 0139 4863FF   		movslq	%edi, %rdi
 12694              		.loc 1 4131 0 discriminator 3
 12695 013c 4863C9   		movslq	%ecx, %rcx
4123:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp3;
 12696              		.loc 1 4123 0 discriminator 3
 12697 013f 488D5C28 		leaq	2(%rax,%rbp), %rbx
 12697      02
 12698              	.LVL1826:
4124:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = tmp1 + tmp2;
 12699              		.loc 1 4124 0 discriminator 3
 12700 0144 4829E8   		subq	%rbp, %rax
 12701              	.LVL1827:
4125:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 - tmp2;
 12702              		.loc 1 4125 0 discriminator 3
 12703 0147 4B8D2C3B 		leaq	(%r11,%r15), %rbp
 12704              	.LVL1828:
4126:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12705              		.loc 1 4126 0 discriminator 3
 12706 014b 4D29FB   		subq	%r15, %r11
 12707              	.LVL1829:
4132:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4133:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM) RIGHT_SHIFT(tmp10 + tmp11, PASS1_BITS);
 12708              		.loc 1 4133 0 discriminator 3
 12709 014e 488D142B 		leaq	(%rbx,%rbp), %rdx
4134:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 12710              		.loc 1 4134 0 discriminator 3
 12711 0152 4829EB   		subq	%rbp, %rbx
 12712              	.LVL1830:
4135:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4136:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_0_541196100);       /* c6 */
4137:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
4138:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS+PASS1_BITS-1);
4139:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4140:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
4141:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
4142:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
4143:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*6] = (DCTELEM)
4144:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
4145:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS+PASS1_BITS);
4146:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4147:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part per figure 8 --- note paper omits factor of sqrt(2).
4148:fltk-1.3.4-1/jpeg/jfdctint.c ****      * i0..i3 in the paper are tmp0..tmp3 here.
4149:fltk-1.3.4-1/jpeg/jfdctint.c ****      */
4150:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4151:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 + tmp2;
4152:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
4153:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4154:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp12 + tmp13, FIX_1_175875602);       /*  c3 */
4155:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
4156:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 += ONE << (CONST_BITS+PASS1_BITS-1);
4157:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4158:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = MULTIPLY(tmp12, - FIX_0_390180644);          /* -c3+c5 */
4159:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
4160:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
4161:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
4162:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4163:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223);       /* -c3+c7 */
 12713              		.loc 1 4163 0 discriminator 3
 12714 0155 498D2C0A 		leaq	(%r10,%rcx), %rbp
 12715              	.LVL1831:
4134:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 12716              		.loc 1 4134 0 discriminator 3
 12717 0159 48C1FB02 		sarq	$2, %rbx
4133:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 12718              		.loc 1 4133 0 discriminator 3
 12719 015d 48C1FA02 		sarq	$2, %rdx
4134:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 12720              		.loc 1 4134 0 discriminator 3
 12721 0161 41899880 		movl	%ebx, 128(%r8)
 12721      000000
4151:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = tmp1 + tmp3;
 12722              		.loc 1 4151 0 discriminator 3
 12723 0168 498D1C3A 		leaq	(%r10,%rdi), %rbx
4133:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM) RIGHT_SHIFT(tmp10 - tmp11, PASS1_BITS);
 12724              		.loc 1 4133 0 discriminator 3
 12725 016c 418910   		movl	%edx, (%r8)
 12726              	.LVL1832:
4136:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 12727              		.loc 1 4136 0 discriminator 3
 12728 016f 4A8D1418 		leaq	(%rax,%r11), %rdx
4143:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 12729              		.loc 1 4143 0 discriminator 3
 12730 0173 4D69DBDF 		imulq	$-15137, %r11, %r11
 12730      C4FFFF
 12731              	.LVL1833:
4136:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 12732              		.loc 1 4136 0 discriminator 3
 12733 017a 4869D251 		imulq	$4433, %rdx, %rdx
 12733      110000
 12734              	.LVL1834:
4140:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 12735              		.loc 1 4140 0 discriminator 3
 12736 0181 4869C07E 		imulq	$6270, %rax, %rax
 12736      180000
 12737              	.LVL1835:
4138:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12738              		.loc 1 4138 0 discriminator 3
 12739 0188 4881C200 		addq	$16384, %rdx
 12739      400000
 12740              	.LVL1836:
4140:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 12741              		.loc 1 4140 0 discriminator 3
 12742 018f 4801D0   		addq	%rdx, %rax
4143:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 12743              		.loc 1 4143 0 discriminator 3
 12744 0192 4C01DA   		addq	%r11, %rdx
 12745              	.LVL1837:
4152:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12746              		.loc 1 4152 0 discriminator 3
 12747 0195 4D8D1C09 		leaq	(%r9,%rcx), %r11
 12748              	.LVL1838:
4140:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 12749              		.loc 1 4140 0 discriminator 3
 12750 0199 48C1F80F 		sarq	$15, %rax
4143:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 12751              		.loc 1 4143 0 discriminator 3
 12752 019d 48C1FA0F 		sarq	$15, %rdx
4140:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 + MULTIPLY(tmp12, FIX_0_765366865), /* c2-c6 */
 12753              		.loc 1 4140 0 discriminator 3
 12754 01a1 41894040 		movl	%eax, 64(%r8)
4154:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 12755              		.loc 1 4154 0 discriminator 3
 12756 01a5 4A8D041B 		leaq	(%rbx,%r11), %rax
4143:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(z1 - MULTIPLY(tmp13, FIX_1_847759065), /* c2+c6 */
 12757              		.loc 1 4143 0 discriminator 3
 12758 01a9 418990C0 		movl	%edx, 192(%r8)
 12758      000000
4158:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 = MULTIPLY(tmp13, - FIX_1_961570560);          /* -c3-c5 */
 12759              		.loc 1 4158 0 discriminator 3
 12760 01b0 4869DB84 		imulq	$-3196, %rbx, %rbx
 12760      F3FFFF
 12761              	.LVL1839:
4154:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 12762              		.loc 1 4154 0 discriminator 3
 12763 01b7 4869C0A1 		imulq	$9633, %rax, %rax
 12763      250000
 12764              	.LVL1840:
 12765              		.loc 1 4163 0 discriminator 3
 12766 01be 4869ED33 		imulq	$-7373, %rbp, %rbp
 12766      E3FFFF
4156:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12767              		.loc 1 4156 0 discriminator 3
 12768 01c5 48050040 		addq	$16384, %rax
 12768      0000
 12769              	.LVL1841:
4159:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 += z1;
 12770              		.loc 1 4159 0 discriminator 3
 12771 01cb 4D69DB3B 		imulq	$-16069, %r11, %r11
 12771      C1FFFF
 12772              	.LVL1842:
4160:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp13 += z1;
 12773              		.loc 1 4160 0 discriminator 3
 12774 01d2 4801C3   		addq	%rax, %rbx
 12775              	.LVL1843:
4164:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_1_501321110);              /*  c1+c3-c5-c7 */
 12776              		.loc 1 4164 0 discriminator 3
 12777 01d5 4969D20B 		imulq	$12299, %r10, %rdx
 12777      300000
4165:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
4166:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += z1 + tmp12;
4167:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 += z1 + tmp13;
4168:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4169:fltk-1.3.4-1/jpeg/jfdctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447);       /* -c1-c3 */
 12778              		.loc 1 4169 0 discriminator 3
 12779 01dc 4D8D1439 		leaq	(%r9,%rdi), %r10
 12780              	.LVL1844:
4165:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_0_298631336);              /* -c1+c3+c5-c7 */
 12781              		.loc 1 4165 0 discriminator 3
 12782 01e0 4869C98E 		imulq	$2446, %rcx, %rcx
 12782      090000
 12783              	.LVL1845:
4161:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12784              		.loc 1 4161 0 discriminator 3
 12785 01e7 4901C3   		addq	%rax, %r11
 12786              	.LVL1846:
 12787              		.loc 1 4169 0 discriminator 3
 12788 01ea 4D69D2FD 		imulq	$-20995, %r10, %r10
 12788      ADFFFF
 12789              	.LVL1847:
4170:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_3_072711026);              /*  c1+c3+c5-c7 */
 12790              		.loc 1 4170 0 discriminator 3
 12791 01f1 4969C154 		imulq	$25172, %r9, %rax
 12791      620000
 12792              	.LVL1848:
4171:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
4172:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 += z1 + tmp13;
4173:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 += z1 + tmp12;
4174:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4175:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM) RIGHT_SHIFT(tmp0, CONST_BITS+PASS1_BITS);
 12793              		.loc 1 4175 0 discriminator 3
 12794 01f8 4C8D0C2B 		leaq	(%rbx,%rbp), %r9
4171:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_2_053119869);              /*  c1+c3-c5+c7 */
 12795              		.loc 1 4171 0 discriminator 3
 12796 01fc 4869FFB3 		imulq	$16819, %rdi, %rdi
 12796      410000
 12797              	.LVL1849:
 12798              		.loc 1 4175 0 discriminator 3
 12799 0203 4C01CA   		addq	%r9, %rdx
 12800              	.LVL1850:
 12801 0206 48C1FA0F 		sarq	$15, %rdx
 12802              	.LVL1851:
 12803 020a 41895020 		movl	%edx, 32(%r8)
 12804              	.LVL1852:
4176:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS+PASS1_BITS);
 12805              		.loc 1 4176 0 discriminator 3
 12806 020e 4B8D1413 		leaq	(%r11,%r10), %rdx
 12807 0212 4801D0   		addq	%rdx, %rax
 12808              	.LVL1853:
 12809 0215 48C1F80F 		sarq	$15, %rax
 12810              	.LVL1854:
4177:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS+PASS1_BITS);
 12811              		.loc 1 4177 0 discriminator 3
 12812 0219 4C01D3   		addq	%r10, %rbx
 12813              	.LVL1855:
4178:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 12814              		.loc 1 4178 0 discriminator 3
 12815 021c 4901EB   		addq	%rbp, %r11
 12816              	.LVL1856:
4177:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS+PASS1_BITS);
 12817              		.loc 1 4177 0 discriminator 3
 12818 021f 4801FB   		addq	%rdi, %rbx
 12819              	.LVL1857:
 12820              		.loc 1 4178 0 discriminator 3
 12821 0222 4901CB   		addq	%rcx, %r11
 12822              	.LVL1858:
4176:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM) RIGHT_SHIFT(tmp1, CONST_BITS+PASS1_BITS);
 12823              		.loc 1 4176 0 discriminator 3
 12824 0225 41894060 		movl	%eax, 96(%r8)
4177:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM) RIGHT_SHIFT(tmp2, CONST_BITS+PASS1_BITS);
 12825              		.loc 1 4177 0 discriminator 3
 12826 0229 48C1FB0F 		sarq	$15, %rbx
 12827              	.LVL1859:
 12828              		.loc 1 4178 0 discriminator 3
 12829 022d 49C1FB0F 		sarq	$15, %r11
 12830              	.LVL1860:
4179:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4180:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 12831              		.loc 1 4180 0 discriminator 3
 12832 0231 4983C004 		addq	$4, %r8
 12833              	.LVL1861:
4177:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 12834              		.loc 1 4177 0 discriminator 3
 12835 0235 4189989C 		movl	%ebx, 156(%r8)
 12835      000000
4178:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*7] = (DCTELEM) RIGHT_SHIFT(tmp3, CONST_BITS+PASS1_BITS);
 12836              		.loc 1 4178 0 discriminator 3
 12837 023c 458998DC 		movl	%r11d, 220(%r8)
 12837      000000
 12838              	.LVL1862:
4112:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part per LL&M figure 1 --- note that published figure is faulty;
 12839              		.loc 1 4112 0 discriminator 3
 12840 0243 4939F0   		cmpq	%rsi, %r8
 12841 0246 0F8595FE 		jne	.L216
 12841      FFFF
4181:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
4182:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 12842              		.loc 1 4182 0
 12843 024c 5B       		popq	%rbx
 12844              		.cfi_def_cfa_offset 48
 12845 024d 5D       		popq	%rbp
 12846              		.cfi_def_cfa_offset 40
 12847 024e 415C     		popq	%r12
 12848              		.cfi_def_cfa_offset 32
 12849 0250 415D     		popq	%r13
 12850              		.cfi_def_cfa_offset 24
 12851 0252 415E     		popq	%r14
 12852              		.cfi_def_cfa_offset 16
 12853 0254 415F     		popq	%r15
 12854              		.cfi_def_cfa_offset 8
 12855 0256 C3       		ret
 12856              		.cfi_endproc
 12857              	.LFE89:
 12859              		.section	.text.unlikely.jpeg_fdct_4x8
 12860              	.LCOLDE28:
 12861              		.section	.text.jpeg_fdct_4x8
 12862              	.LHOTE28:
 12863              		.section	.text.unlikely.jpeg_fdct_3x6,"ax",@progbits
 12864              	.LCOLDB29:
 12865              		.section	.text.jpeg_fdct_3x6,"ax",@progbits
 12866              	.LHOTB29:
 12867              		.p2align 4,,15
 12868              		.globl	jpeg_fdct_3x6
 12870              	jpeg_fdct_3x6:
 12871              	.LFB90:
4183:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4184:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4185:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
4186:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 3x6 sample block.
4187:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
4188:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 3-point FDCT in pass 1 (rows), 6-point in pass 2 (columns).
4189:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
4190:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4191:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
4192:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_3x6 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
4193:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 12872              		.loc 1 4193 0
 12873              		.cfi_startproc
 12874              	.LVL1863:
 12875 0000 4154     		pushq	%r12
 12876              		.cfi_def_cfa_offset 16
 12877              		.cfi_offset 12, -16
 12878 0002 4989F8   		movq	%rdi, %r8
 12879 0005 55       		pushq	%rbp
 12880              		.cfi_def_cfa_offset 24
 12881              		.cfi_offset 6, -24
 12882              	.LBB128:
 12883              	.LBB129:
 12884              		.loc 2 90 0
 12885 0006 488D7F08 		leaq	8(%rdi), %rdi
 12886              	.LVL1864:
 12887              	.LBE129:
 12888              	.LBE128:
 12889              		.loc 1 4193 0
 12890 000a 53       		pushq	%rbx
 12891              		.cfi_def_cfa_offset 32
 12892              		.cfi_offset 3, -32
 12893              	.LBB131:
 12894              	.LBB130:
 12895              		.loc 2 90 0
 12896 000b 48C747F8 		movq	$0, -8(%rdi)
 12896      00000000 
 12897 0013 48C787F0 		movq	$0, 240(%rdi)
 12897      00000000 
 12897      000000
 12898 001e 4C89C1   		movq	%r8, %rcx
 12899 0021 31C0     		xorl	%eax, %eax
 12900 0023 4883E7F8 		andq	$-8, %rdi
 12901 0027 4D8D88C0 		leaq	192(%r8), %r9
 12901      000000
 12902 002e 89D2     		movl	%edx, %edx
 12903 0030 4829F9   		subq	%rdi, %rcx
 12904 0033 81C10001 		addl	$256, %ecx
 12904      0000
 12905 0039 C1E903   		shrl	$3, %ecx
 12906 003c F348AB   		rep stosq
 12907              	.LVL1865:
 12908 003f 4C89C7   		movq	%r8, %rdi
 12909              	.LVL1866:
 12910              		.p2align 4,,10
 12911 0042 660F1F44 		.p2align 3
 12911      0000
 12912              	.L221:
 12913              	.LBE130:
 12914              	.LBE131:
4194:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1, tmp2;
4195:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11, tmp12;
4196:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
4197:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
4198:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
4199:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
4200:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4201:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
4202:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
4203:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4204:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
4205:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT;
4206:fltk-1.3.4-1/jpeg/jfdctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
4207:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We scale the results further by 2 as part of output adaption
4208:fltk-1.3.4-1/jpeg/jfdctint.c ****    * scaling for different DCT size.
4209:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 3-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/6).
4210:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
4211:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4212:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
4213:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
4214:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 12915              		.loc 1 4214 0 discriminator 3
 12916 0048 4989D2   		movq	%rdx, %r10
 12917 004b 4C0316   		addq	(%rsi), %r10
 12918              	.LVL1867:
4215:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4216:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
4217:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4218:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]) + GETJSAMPLE(elemptr[2]);
4219:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
4220:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4221:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = GETJSAMPLE(elemptr[0]) - GETJSAMPLE(elemptr[2]);
4222:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4223:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
4224:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM)
4225:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+1));
4226:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[2] = (DCTELEM)
4227:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
4228:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-1);
4229:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4230:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
4231:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4232:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM)
4233:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(1.224744871)),               /* c1 */
4234:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS-PASS1_BITS-1);
4235:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4236:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
 12919              		.loc 1 4236 0 discriminator 3
 12920 004e 4883C720 		addq	$32, %rdi
 12921              	.LVL1868:
 12922 0052 4883C608 		addq	$8, %rsi
4218:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
 12923              		.loc 1 4218 0 discriminator 3
 12924 0056 410FB60A 		movzbl	(%r10), %ecx
 12925 005a 450FB65A 		movzbl	2(%r10), %r11d
 12925      02
4219:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12926              		.loc 1 4219 0 discriminator 3
 12927 005f 450FB652 		movzbl	1(%r10), %r10d
 12927      01
 12928              	.LVL1869:
4218:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
 12929              		.loc 1 4218 0 discriminator 3
 12930 0064 428D0419 		leal	(%rcx,%r11), %eax
4232:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(1.224744871)),               /* c1 */
 12931              		.loc 1 4232 0 discriminator 3
 12932 0068 4429D9   		subl	%r11d, %ecx
 12933 006b 4863C9   		movslq	%ecx, %rcx
4218:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
 12934              		.loc 1 4218 0 discriminator 3
 12935 006e 4898     		cltq
 12936              	.LVL1870:
4224:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+1));
 12937              		.loc 1 4224 0 discriminator 3
 12938 0070 4A8D9C10 		leaq	-384(%rax,%r10), %rbx
 12938      80FEFFFF 
4226:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 12939              		.loc 1 4226 0 discriminator 3
 12940 0078 4C29D0   		subq	%r10, %rax
 12941              	.LVL1871:
 12942 007b 4C29D0   		subq	%r10, %rax
 12943 007e 4869C0A1 		imulq	$5793, %rax, %rax
 12943      160000
4224:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+1));
 12944              		.loc 1 4224 0 discriminator 3
 12945 0085 48C1E303 		salq	$3, %rbx
4232:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(1.224744871)),               /* c1 */
 12946              		.loc 1 4232 0 discriminator 3
 12947 0089 4869C931 		imulq	$10033, %rcx, %rcx
 12947      270000
4224:fltk-1.3.4-1/jpeg/jfdctint.c ****       ((tmp0 + tmp1 - 3 * CENTERJSAMPLE) << (PASS1_BITS+1));
 12948              		.loc 1 4224 0 discriminator 3
 12949 0090 895FE0   		movl	%ebx, -32(%rdi)
 12950              	.LVL1872:
4226:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 12951              		.loc 1 4226 0 discriminator 3
 12952 0093 48050002 		addq	$512, %rax
 12952      0000
4232:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(1.224744871)),               /* c1 */
 12953              		.loc 1 4232 0 discriminator 3
 12954 0099 4881C100 		addq	$512, %rcx
 12954      020000
4226:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 12955              		.loc 1 4226 0 discriminator 3
 12956 00a0 48C1F80A 		sarq	$10, %rax
4232:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(1.224744871)),               /* c1 */
 12957              		.loc 1 4232 0 discriminator 3
 12958 00a4 48C1F90A 		sarq	$10, %rcx
4226:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp1, FIX(0.707106781)), /* c2 */
 12959              		.loc 1 4226 0 discriminator 3
 12960 00a8 8947E8   		movl	%eax, -24(%rdi)
4232:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp2, FIX(1.224744871)),               /* c1 */
 12961              		.loc 1 4232 0 discriminator 3
 12962 00ab 894FE4   		movl	%ecx, -28(%rdi)
 12963              	.LVL1873:
4213:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 12964              		.loc 1 4213 0 discriminator 3
 12965 00ae 4C39CF   		cmpq	%r9, %rdi
 12966 00b1 7595     		jne	.L221
 12967 00b3 498D780C 		leaq	12(%r8), %rdi
 12968              	.LVL1874:
 12969              	.L222:
4237:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
4238:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4239:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
4240:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We remove the PASS1_BITS scaling, but leave the results scaled up
4241:fltk-1.3.4-1/jpeg/jfdctint.c ****    * by an overall factor of 8.
4242:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/6)*(8/3) = 32/9, which we partially
4243:fltk-1.3.4-1/jpeg/jfdctint.c ****    * fold into the constant multipliers (other part was done in pass 1):
4244:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 6-point FDCT kernel, cK represents sqrt(2) * cos(K*pi/12) * 16/9.
4245:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
4246:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4247:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
4248:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 3; ctr++) {
4249:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
4250:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4251:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*5];
4252:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
4253:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 12970              		.loc 1 4253 0 discriminator 3
 12971 00b7 458B5060 		movl	96(%r8), %r10d
4251:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 12972              		.loc 1 4251 0 discriminator 3
 12973 00bb 418B00   		movl	(%r8), %eax
4254:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4255:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = tmp0 + tmp2;
4256:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
4257:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4258:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*5];
4259:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
4260:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
4261:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4262:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM)
4263:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
4264:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4265:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM)
4266:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
4267:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4268:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*4] = (DCTELEM)
4269:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
4270:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4271:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4272:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
4273:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4274:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = MULTIPLY(tmp0 + tmp2, FIX(0.650711829));             /* c5 */
4275:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4276:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
4277:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
4278:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4279:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
4280:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
4281:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4282:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*5] = (DCTELEM)
4283:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
4284:fltk-1.3.4-1/jpeg/jfdctint.c **** 	      CONST_BITS+PASS1_BITS);
4285:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4286:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 12974              		.loc 1 4286 0 discriminator 3
 12975 00be 4983C004 		addq	$4, %r8
 12976              	.LVL1875:
4251:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 12977              		.loc 1 4251 0 discriminator 3
 12978 00c2 458BA09C 		movl	156(%r8), %r12d
 12978      000000
4253:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12979              		.loc 1 4253 0 discriminator 3
 12980 00c9 418B503C 		movl	60(%r8), %edx
4252:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 12981              		.loc 1 4252 0 discriminator 3
 12982 00cd 418B701C 		movl	28(%r8), %esi
 12983 00d1 418B687C 		movl	124(%r8), %ebp
4253:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12984              		.loc 1 4253 0 discriminator 3
 12985 00d5 428D1C12 		leal	(%rdx,%r10), %ebx
4251:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 12986              		.loc 1 4251 0 discriminator 3
 12987 00d9 468D0C20 		leal	(%rax,%r12), %r9d
4260:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12988              		.loc 1 4260 0 discriminator 3
 12989 00dd 4429D2   		subl	%r10d, %edx
4252:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 12990              		.loc 1 4252 0 discriminator 3
 12991 00e0 448D1C2E 		leal	(%rsi,%rbp), %r11d
4258:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
 12992              		.loc 1 4258 0 discriminator 3
 12993 00e4 4429E0   		subl	%r12d, %eax
4259:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
 12994              		.loc 1 4259 0 discriminator 3
 12995 00e7 29EE     		subl	%ebp, %esi
4251:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*4];
 12996              		.loc 1 4251 0 discriminator 3
 12997 00e9 4D63C9   		movslq	%r9d, %r9
 12998              	.LVL1876:
4253:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 12999              		.loc 1 4253 0 discriminator 3
 13000 00ec 4863DB   		movslq	%ebx, %rbx
4258:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*4];
 13001              		.loc 1 4258 0 discriminator 3
 13002 00ef 4898     		cltq
4255:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp12 = tmp0 - tmp2;
 13003              		.loc 1 4255 0 discriminator 3
 13004 00f1 498D0C19 		leaq	(%r9,%rbx), %rcx
4252:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] + dataptr[DCTSIZE*3];
 13005              		.loc 1 4252 0 discriminator 3
 13006 00f5 4D63DB   		movslq	%r11d, %r11
 13007              	.LVL1877:
4265:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
 13008              		.loc 1 4265 0 discriminator 3
 13009 00f8 4929D9   		subq	%rbx, %r9
 13010              	.LVL1878:
 13011 00fb 4D69C9AD 		imulq	$17837, %r9, %r9
 13011      450000
 13012              	.LVL1879:
4259:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp2 = dataptr[DCTSIZE*2] - dataptr[DCTSIZE*3];
 13013              		.loc 1 4259 0 discriminator 3
 13014 0102 4863F6   		movslq	%esi, %rsi
 13015              	.LVL1880:
4260:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13016              		.loc 1 4260 0 discriminator 3
 13017 0105 4863D2   		movslq	%edx, %rdx
 13018              	.LVL1881:
4262:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 13019              		.loc 1 4262 0 discriminator 3
 13020 0108 4D8D140B 		leaq	(%r11,%rcx), %r10
4268:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
 13021              		.loc 1 4268 0 discriminator 3
 13022 010c 4C29D9   		subq	%r11, %rcx
 13023              	.LVL1882:
 13024 010f 4C29D9   		subq	%r11, %rcx
 13025 0112 4869C93A 		imulq	$10298, %rcx, %rcx
 13025      280000
4265:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp12, FIX(2.177324216)),                 /* c2 */
 13026              		.loc 1 4265 0 discriminator 3
 13027 0119 4981C100 		addq	$16384, %r9
 13027      400000
 13028 0120 49C1F90F 		sarq	$15, %r9
 13029 0124 4589483C 		movl	%r9d, 60(%r8)
4276:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 13030              		.loc 1 4276 0 discriminator 3
 13031 0128 4C8D0C30 		leaq	(%rax,%rsi), %r9
4268:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 - tmp11 - tmp11, FIX(1.257078722)), /* c4 */
 13032              		.loc 1 4268 0 discriminator 3
 13033 012c 4881C100 		addq	$16384, %rcx
 13033      400000
 13034 0133 48C1F90F 		sarq	$15, %rcx
 13035 0137 4189487C 		movl	%ecx, 124(%r8)
4274:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13036              		.loc 1 4274 0 discriminator 3
 13037 013b 488D0C10 		leaq	(%rax,%rdx), %rcx
4279:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 13038              		.loc 1 4279 0 discriminator 3
 13039 013f 4829F0   		subq	%rsi, %rax
 13040              	.LVL1883:
 13041 0142 4829D0   		subq	%rdx, %rax
4282:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 13042              		.loc 1 4282 0 discriminator 3
 13043 0145 4829F2   		subq	%rsi, %rdx
 13044              	.LVL1884:
4279:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 13045              		.loc 1 4279 0 discriminator 3
 13046 0148 4869C0E4 		imulq	$14564, %rax, %rax
 13046      380000
4274:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13047              		.loc 1 4274 0 discriminator 3
 13048 014f 4869C9D3 		imulq	$5331, %rcx, %rcx
 13048      140000
 13049              	.LVL1885:
4276:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 13050              		.loc 1 4276 0 discriminator 3
 13051 0156 4D69C9E4 		imulq	$14564, %r9, %r9
 13051      380000
4279:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 13052              		.loc 1 4279 0 discriminator 3
 13053 015d 48050040 		addq	$16384, %rax
 13053      0000
 13054 0163 48C1F80F 		sarq	$15, %rax
4282:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 13055              		.loc 1 4282 0 discriminator 3
 13056 0167 4869D2E4 		imulq	$14564, %rdx, %rdx
 13056      380000
4279:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp0 - tmp1 - tmp2, FIX(1.777777778)),    /* 16/9 */
 13057              		.loc 1 4279 0 discriminator 3
 13058 016e 4189405C 		movl	%eax, 92(%r8)
4276:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 13059              		.loc 1 4276 0 discriminator 3
 13060 0172 4E8D8C09 		leaq	16384(%rcx,%r9), %r9
 13060      00400000 
4262:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 13061              		.loc 1 4262 0 discriminator 3
 13062 017a 4D69D2E4 		imulq	$14564, %r10, %r10
 13062      380000
4276:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp0 + tmp1, FIX(1.777777778)),   /* 16/9 */
 13063              		.loc 1 4276 0 discriminator 3
 13064 0181 49C1F90F 		sarq	$15, %r9
 13065 0185 4589481C 		movl	%r9d, 28(%r8)
4282:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 13066              		.loc 1 4282 0 discriminator 3
 13067 0189 488D8411 		leaq	16384(%rcx,%rdx), %rax
 13067      00400000 
4262:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 13068              		.loc 1 4262 0 discriminator 3
 13069 0191 4981C200 		addq	$16384, %r10
 13069      400000
 13070 0198 49C1FA0F 		sarq	$15, %r10
4282:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 13071              		.loc 1 4282 0 discriminator 3
 13072 019c 48C1F80F 		sarq	$15, %rax
4262:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(MULTIPLY(tmp10 + tmp11, FIX(1.777777778)),         /* 16/9 */
 13073              		.loc 1 4262 0 discriminator 3
 13074 01a0 458950FC 		movl	%r10d, -4(%r8)
 13075              	.LVL1886:
4282:fltk-1.3.4-1/jpeg/jfdctint.c ****       DESCALE(tmp10 + MULTIPLY(tmp2 - tmp1, FIX(1.777777778)),   /* 16/9 */
 13076              		.loc 1 4282 0 discriminator 3
 13077 01a4 4189809C 		movl	%eax, 156(%r8)
 13077      000000
 13078              	.LVL1887:
4248:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 13079              		.loc 1 4248 0 discriminator 3
 13080 01ab 4939F8   		cmpq	%rdi, %r8
 13081 01ae 0F8503FF 		jne	.L222
 13081      FFFF
4287:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
4288:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 13082              		.loc 1 4288 0
 13083 01b4 5B       		popq	%rbx
 13084              		.cfi_def_cfa_offset 24
 13085 01b5 5D       		popq	%rbp
 13086              		.cfi_def_cfa_offset 16
 13087 01b6 415C     		popq	%r12
 13088              		.cfi_def_cfa_offset 8
 13089 01b8 C3       		ret
 13090              		.cfi_endproc
 13091              	.LFE90:
 13093              		.section	.text.unlikely.jpeg_fdct_3x6
 13094              	.LCOLDE29:
 13095              		.section	.text.jpeg_fdct_3x6
 13096              	.LHOTE29:
 13097              		.section	.text.unlikely.jpeg_fdct_2x4,"ax",@progbits
 13098              	.LCOLDB30:
 13099              		.section	.text.jpeg_fdct_2x4,"ax",@progbits
 13100              	.LHOTB30:
 13101              		.p2align 4,,15
 13102              		.globl	jpeg_fdct_2x4
 13104              	jpeg_fdct_2x4:
 13105              	.LFB91:
4289:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4290:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4291:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
4292:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 2x4 sample block.
4293:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
4294:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 2-point FDCT in pass 1 (rows), 4-point in pass 2 (columns).
4295:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
4296:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4297:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
4298:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_2x4 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
4299:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 13106              		.loc 1 4299 0
 13107              		.cfi_startproc
 13108              	.LVL1888:
 13109              	.LBB132:
 13110              	.LBB133:
 13111              		.loc 2 90 0
 13112 0000 4C8D4F08 		leaq	8(%rdi), %r9
 13113              	.LBE133:
 13114              	.LBE132:
 13115              		.loc 1 4299 0
 13116 0004 4989F8   		movq	%rdi, %r8
 13117              	.LBB135:
 13118              	.LBB134:
 13119              		.loc 2 90 0
 13120 0007 48C70700 		movq	$0, (%rdi)
 13120      000000
 13121 000e 48C787F8 		movq	$0, 248(%rdi)
 13121      00000000 
 13121      000000
 13122 0019 4C89C1   		movq	%r8, %rcx
 13123 001c 31C0     		xorl	%eax, %eax
 13124 001e 4C89CF   		movq	%r9, %rdi
 13125              	.LVL1889:
 13126 0021 89D2     		movl	%edx, %edx
 13127 0023 4883E7F8 		andq	$-8, %rdi
 13128 0027 4829F9   		subq	%rdi, %rcx
 13129              	.LVL1890:
 13130 002a 81C10001 		addl	$256, %ecx
 13130      0000
 13131 0030 C1E903   		shrl	$3, %ecx
 13132 0033 F348AB   		rep stosq
 13133              	.LVL1891:
 13134              	.L227:
 13135              	.LBE134:
 13136              	.LBE135:
4300:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1;
4301:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp10, tmp11;
4302:fltk-1.3.4-1/jpeg/jfdctint.c ****   DCTELEM *dataptr;
4303:fltk-1.3.4-1/jpeg/jfdctint.c ****   JSAMPROW elemptr;
4304:fltk-1.3.4-1/jpeg/jfdctint.c ****   int ctr;
4305:fltk-1.3.4-1/jpeg/jfdctint.c ****   SHIFT_TEMPS
4306:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4307:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
4308:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
4309:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4310:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: process rows.
4311:fltk-1.3.4-1/jpeg/jfdctint.c ****    * Note results are scaled up by sqrt(8) compared to a true DCT.
4312:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/2)*(8/4) = 2**3, which we add here.
4313:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
4314:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4315:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
4316:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
4317:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 13137              		.loc 1 4317 0 discriminator 3
 13138 0036 4889D7   		movq	%rdx, %rdi
 13139 0039 48033C0E 		addq	(%rsi,%rcx), %rdi
 13140              	.LVL1892:
4318:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4319:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
4320:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4321:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = GETJSAMPLE(elemptr[0]);
 13141              		.loc 1 4321 0 discriminator 3
 13142 003d 0FB607   		movzbl	(%rdi), %eax
 13143              	.LVL1893:
4322:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = GETJSAMPLE(elemptr[1]);
 13144              		.loc 1 4322 0 discriminator 3
 13145 0040 440FB657 		movzbl	1(%rdi), %r10d
 13145      01
 13146              	.LVL1894:
4323:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4324:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Apply unsigned->signed conversion */
4325:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[0] = (DCTELEM) ((tmp0 + tmp1 - 2 * CENTERJSAMPLE) << 3);
 13147              		.loc 1 4325 0 discriminator 3
 13148 0045 4A8DBC10 		leaq	-256(%rax,%r10), %rdi
 13148      00FFFFFF 
 13149              	.LVL1895:
4326:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4327:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
4328:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4329:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[1] = (DCTELEM) ((tmp0 - tmp1) << 3);
 13150              		.loc 1 4329 0 discriminator 3
 13151 004d 4C29D0   		subq	%r10, %rax
 13152              	.LVL1896:
 13153 0050 48C1E003 		salq	$3, %rax
4325:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13154              		.loc 1 4325 0 discriminator 3
 13155 0054 48C1E703 		salq	$3, %rdi
 13156              		.loc 1 4329 0 discriminator 3
 13157 0058 41894488 		movl	%eax, 4(%r8,%rcx,4)
 13157      04
 13158              	.LVL1897:
4325:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13159              		.loc 1 4325 0 discriminator 3
 13160 005d 41893C88 		movl	%edi, (%r8,%rcx,4)
 13161 0061 4883C108 		addq	$8, %rcx
 13162              	.LVL1898:
4316:fltk-1.3.4-1/jpeg/jfdctint.c ****     elemptr = sample_data[ctr] + start_col;
 13163              		.loc 1 4316 0 discriminator 3
 13164 0065 4883F920 		cmpq	$32, %rcx
 13165 0069 75CB     		jne	.L227
 13166              	.LVL1899:
 13167              	.L228:
4330:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4331:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr += DCTSIZE;		/* advance pointer to next row */
4332:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
4333:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4334:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
4335:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
4336:fltk-1.3.4-1/jpeg/jfdctint.c ****    * 4-point FDCT kernel,
4337:fltk-1.3.4-1/jpeg/jfdctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point FDCT].
4338:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
4339:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4340:fltk-1.3.4-1/jpeg/jfdctint.c ****   dataptr = data;
4341:fltk-1.3.4-1/jpeg/jfdctint.c ****   for (ctr = 0; ctr < 2; ctr++) {
4342:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
4343:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4344:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = dataptr[DCTSIZE*0] + dataptr[DCTSIZE*3];
 13168              		.loc 1 4344 0 discriminator 3
 13169 006b 458B10   		movl	(%r8), %r10d
4345:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 13170              		.loc 1 4345 0 discriminator 3
 13171 006e 418B4020 		movl	32(%r8), %eax
4346:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4347:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp10 = dataptr[DCTSIZE*0] - dataptr[DCTSIZE*3];
4348:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
4349:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4350:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*0] = (DCTELEM) (tmp0 + tmp1);
4351:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) (tmp0 - tmp1);
4352:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4353:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Odd part */
4354:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4355:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 = MULTIPLY(tmp10 + tmp11, FIX_0_541196100);       /* c6 */
4356:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
4357:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp0 += ONE << (CONST_BITS-1);
4358:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4359:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*1] = (DCTELEM)
4360:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
4361:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS);
4362:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*3] = (DCTELEM)
4363:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
4364:fltk-1.3.4-1/jpeg/jfdctint.c **** 		  CONST_BITS);
4365:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4366:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr++;			/* advance pointer to next column */
 13172              		.loc 1 4366 0 discriminator 3
 13173 0072 4983C004 		addq	$4, %r8
 13174              	.LVL1900:
4345:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 13175              		.loc 1 4345 0 discriminator 3
 13176 0076 418B783C 		movl	60(%r8), %edi
4344:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp1 = dataptr[DCTSIZE*1] + dataptr[DCTSIZE*2];
 13177              		.loc 1 4344 0 discriminator 3
 13178 007a 418B485C 		movl	92(%r8), %ecx
 13179              	.LVL1901:
4348:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13180              		.loc 1 4348 0 discriminator 3
 13181 007e 89C6     		movl	%eax, %esi
4347:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
 13182              		.loc 1 4347 0 discriminator 3
 13183 0080 4489D2   		movl	%r10d, %edx
 13184 0083 29CA     		subl	%ecx, %edx
4348:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13185              		.loc 1 4348 0 discriminator 3
 13186 0085 29FE     		subl	%edi, %esi
4350:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) (tmp0 - tmp1);
 13187              		.loc 1 4350 0 discriminator 3
 13188 0087 01F8     		addl	%edi, %eax
 13189              	.LVL1902:
 13190 0089 4401D1   		addl	%r10d, %ecx
 13191              	.LVL1903:
4347:fltk-1.3.4-1/jpeg/jfdctint.c ****     tmp11 = dataptr[DCTSIZE*1] - dataptr[DCTSIZE*2];
 13192              		.loc 1 4347 0 discriminator 3
 13193 008c 4863D2   		movslq	%edx, %rdx
 13194              	.LVL1904:
4348:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13195              		.loc 1 4348 0 discriminator 3
 13196 008f 4863F6   		movslq	%esi, %rsi
 13197              	.LVL1905:
4350:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) (tmp0 - tmp1);
 13198              		.loc 1 4350 0 discriminator 3
 13199 0092 8D3C01   		leal	(%rcx,%rax), %edi
 13200              	.LVL1906:
4351:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13201              		.loc 1 4351 0 discriminator 3
 13202 0095 29C1     		subl	%eax, %ecx
4355:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 13203              		.loc 1 4355 0 discriminator 3
 13204 0097 488D0432 		leaq	(%rdx,%rsi), %rax
4359:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 13205              		.loc 1 4359 0 discriminator 3
 13206 009b 4869D27E 		imulq	$6270, %rdx, %rdx
 13206      180000
 13207              	.LVL1907:
4351:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13208              		.loc 1 4351 0 discriminator 3
 13209 00a2 4189483C 		movl	%ecx, 60(%r8)
 13210              	.LVL1908:
4355:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Add fudge factor here for final descale. */
 13211              		.loc 1 4355 0 discriminator 3
 13212 00a6 4869C051 		imulq	$4433, %rax, %rax
 13212      110000
 13213              	.LVL1909:
4350:fltk-1.3.4-1/jpeg/jfdctint.c ****     dataptr[DCTSIZE*2] = (DCTELEM) (tmp0 - tmp1);
 13214              		.loc 1 4350 0 discriminator 3
 13215 00ad 418978FC 		movl	%edi, -4(%r8)
4362:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 13216              		.loc 1 4362 0 discriminator 3
 13217 00b1 4869F6DF 		imulq	$-15137, %rsi, %rsi
 13217      C4FFFF
 13218              	.LVL1910:
4357:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13219              		.loc 1 4357 0 discriminator 3
 13220 00b8 48050010 		addq	$4096, %rax
 13220      0000
 13221              	.LVL1911:
4359:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 13222              		.loc 1 4359 0 discriminator 3
 13223 00be 4801C2   		addq	%rax, %rdx
4362:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 13224              		.loc 1 4362 0 discriminator 3
 13225 00c1 4801F0   		addq	%rsi, %rax
 13226              	.LVL1912:
4359:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 13227              		.loc 1 4359 0 discriminator 3
 13228 00c4 48C1FA0D 		sarq	$13, %rdx
4362:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 13229              		.loc 1 4362 0 discriminator 3
 13230 00c8 48C1F80D 		sarq	$13, %rax
4359:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 + MULTIPLY(tmp10, FIX_0_765366865), /* c2-c6 */
 13231              		.loc 1 4359 0 discriminator 3
 13232 00cc 4189501C 		movl	%edx, 28(%r8)
4362:fltk-1.3.4-1/jpeg/jfdctint.c ****       RIGHT_SHIFT(tmp0 - MULTIPLY(tmp11, FIX_1_847759065), /* c2+c6 */
 13233              		.loc 1 4362 0 discriminator 3
 13234 00d0 4189405C 		movl	%eax, 92(%r8)
 13235              	.LVL1913:
4341:fltk-1.3.4-1/jpeg/jfdctint.c ****     /* Even part */
 13236              		.loc 1 4341 0 discriminator 3
 13237 00d4 4D39C8   		cmpq	%r9, %r8
 13238 00d7 7592     		jne	.L228
4367:fltk-1.3.4-1/jpeg/jfdctint.c ****   }
4368:fltk-1.3.4-1/jpeg/jfdctint.c **** }
 13239              		.loc 1 4368 0
 13240 00d9 F3C3     		rep ret
 13241              		.cfi_endproc
 13242              	.LFE91:
 13244              		.section	.text.unlikely.jpeg_fdct_2x4
 13245              	.LCOLDE30:
 13246              		.section	.text.jpeg_fdct_2x4
 13247              	.LHOTE30:
 13248              		.section	.text.unlikely.jpeg_fdct_1x2,"ax",@progbits
 13249              	.LCOLDB31:
 13250              		.section	.text.jpeg_fdct_1x2,"ax",@progbits
 13251              	.LHOTB31:
 13252              		.p2align 4,,15
 13253              		.globl	jpeg_fdct_1x2
 13255              	jpeg_fdct_1x2:
 13256              	.LFB92:
4369:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4370:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4371:fltk-1.3.4-1/jpeg/jfdctint.c **** /*
4372:fltk-1.3.4-1/jpeg/jfdctint.c ****  * Perform the forward DCT on a 1x2 sample block.
4373:fltk-1.3.4-1/jpeg/jfdctint.c ****  *
4374:fltk-1.3.4-1/jpeg/jfdctint.c ****  * 1-point FDCT in pass 1 (rows), 2-point in pass 2 (columns).
4375:fltk-1.3.4-1/jpeg/jfdctint.c ****  */
4376:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4377:fltk-1.3.4-1/jpeg/jfdctint.c **** GLOBAL(void)
4378:fltk-1.3.4-1/jpeg/jfdctint.c **** jpeg_fdct_1x2 (DCTELEM * data, JSAMPARRAY sample_data, JDIMENSION start_col)
4379:fltk-1.3.4-1/jpeg/jfdctint.c **** {
 13257              		.loc 1 4379 0
 13258              		.cfi_startproc
 13259              	.LVL1914:
 13260              	.LBB136:
 13261              	.LBB137:
 13262              		.loc 2 90 0
 13263 0000 48C70700 		movq	$0, (%rdi)
 13263      000000
 13264 0007 48C787F8 		movq	$0, 248(%rdi)
 13264      00000000 
 13264      000000
 13265              	.LBE137:
 13266              	.LBE136:
 13267              		.loc 1 4379 0
 13268 0012 4989F8   		movq	%rdi, %r8
 13269              	.LBB140:
 13270              	.LBB138:
 13271              		.loc 2 90 0
 13272 0015 488D7F08 		leaq	8(%rdi), %rdi
 13273              	.LVL1915:
 13274 0019 4C89C1   		movq	%r8, %rcx
 13275 001c 31C0     		xorl	%eax, %eax
 13276              	.LBE138:
 13277              	.LBE140:
4380:fltk-1.3.4-1/jpeg/jfdctint.c ****   INT32 tmp0, tmp1;
4381:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4382:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pre-zero output coefficient block. */
4383:fltk-1.3.4-1/jpeg/jfdctint.c ****   MEMZERO(data, SIZEOF(DCTELEM) * DCTSIZE2);
4384:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4385:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 1: empty. */
4386:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4387:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Pass 2: process columns.
4388:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We leave the results scaled up by an overall factor of 8.
4389:fltk-1.3.4-1/jpeg/jfdctint.c ****    * We must also scale the output by (8/1)*(8/2) = 2**5.
4390:fltk-1.3.4-1/jpeg/jfdctint.c ****    */
4391:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4392:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Even part */
4393:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4394:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp0 = GETJSAMPLE(sample_data[0][start_col]);
 13278              		.loc 1 4394 0
 13279 001e 89D2     		movl	%edx, %edx
 13280              	.LBB141:
 13281              	.LBB139:
 13282              		.loc 2 90 0
 13283 0020 4883E7F8 		andq	$-8, %rdi
 13284 0024 4829F9   		subq	%rdi, %rcx
 13285 0027 81C10001 		addl	$256, %ecx
 13285      0000
 13286 002d C1E903   		shrl	$3, %ecx
 13287 0030 F348AB   		rep stosq
 13288              	.LVL1916:
 13289              	.LBE139:
 13290              	.LBE141:
 13291              		.loc 1 4394 0
 13292 0033 488B06   		movq	(%rsi), %rax
4395:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp1 = GETJSAMPLE(sample_data[1][start_col]);
 13293              		.loc 1 4395 0
 13294 0036 488B4E08 		movq	8(%rsi), %rcx
4394:fltk-1.3.4-1/jpeg/jfdctint.c ****   tmp1 = GETJSAMPLE(sample_data[1][start_col]);
 13295              		.loc 1 4394 0
 13296 003a 0FB60410 		movzbl	(%rax,%rdx), %eax
 13297              	.LVL1917:
 13298              		.loc 1 4395 0
 13299 003e 0FB60C11 		movzbl	(%rcx,%rdx), %ecx
 13300              	.LVL1918:
4396:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4397:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Apply unsigned->signed conversion */
4398:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*0] = (DCTELEM) ((tmp0 + tmp1 - 2 * CENTERJSAMPLE) << 5);
 13301              		.loc 1 4398 0
 13302 0042 488D9408 		leaq	-256(%rax,%rcx), %rdx
 13302      00FFFFFF 
 13303              	.LVL1919:
4399:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4400:fltk-1.3.4-1/jpeg/jfdctint.c ****   /* Odd part */
4401:fltk-1.3.4-1/jpeg/jfdctint.c **** 
4402:fltk-1.3.4-1/jpeg/jfdctint.c ****   data[DCTSIZE*1] = (DCTELEM) ((tmp0 - tmp1) << 5);
 13304              		.loc 1 4402 0
 13305 004a 4829C8   		subq	%rcx, %rax
 13306              	.LVL1920:
 13307 004d 48C1E005 		salq	$5, %rax
4398:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13308              		.loc 1 4398 0
 13309 0051 48C1E205 		salq	$5, %rdx
 13310              		.loc 1 4402 0
 13311 0055 41894020 		movl	%eax, 32(%r8)
 13312              	.LVL1921:
4398:fltk-1.3.4-1/jpeg/jfdctint.c **** 
 13313              		.loc 1 4398 0
 13314 0059 418910   		movl	%edx, (%r8)
 13315              		.loc 1 4402 0
 13316 005c C3       		ret
 13317              		.cfi_endproc
 13318              	.LFE92:
 13320              		.section	.text.unlikely.jpeg_fdct_1x2
 13321              	.LCOLDE31:
 13322              		.section	.text.jpeg_fdct_1x2
 13323              	.LHOTE31:
 13324              		.text
 13325              	.Letext0:
 13326              		.section	.text.unlikely.jpeg_fdct_islow
 13327              	.Letext_cold0:
 13328              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 13329              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 13330              		.file 5 "/usr/include/libio.h"
 13331              		.file 6 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 13332              		.file 7 "fltk-1.3.4-1/jpeg/jpeglib.h"
 13333              		.file 8 "fltk-1.3.4-1/jpeg/jdct.h"
 13334              		.file 9 "/usr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jfdctint.c
     /tmp/ccj2o1lu.s:14     .text.jpeg_fdct_islow:0000000000000000 jpeg_fdct_islow
     /tmp/ccj2o1lu.s:480    .text.jpeg_fdct_7x7:0000000000000000 jpeg_fdct_7x7
     /tmp/ccj2o1lu.s:916    .text.jpeg_fdct_6x6:0000000000000000 jpeg_fdct_6x6
     /tmp/ccj2o1lu.s:1223   .text.jpeg_fdct_5x5:0000000000000000 jpeg_fdct_5x5
     /tmp/ccj2o1lu.s:1491   .text.jpeg_fdct_4x4:0000000000000000 jpeg_fdct_4x4
     /tmp/ccj2o1lu.s:1684   .text.jpeg_fdct_3x3:0000000000000000 jpeg_fdct_3x3
     /tmp/ccj2o1lu.s:1838   .text.jpeg_fdct_2x2:0000000000000000 jpeg_fdct_2x2
     /tmp/ccj2o1lu.s:1950   .text.jpeg_fdct_1x1:0000000000000000 jpeg_fdct_1x1
     /tmp/ccj2o1lu.s:2008   .text.jpeg_fdct_9x9:0000000000000000 jpeg_fdct_9x9
     /tmp/ccj2o1lu.s:2494   .text.jpeg_fdct_10x10:0000000000000000 jpeg_fdct_10x10
     /tmp/ccj2o1lu.s:3032   .text.jpeg_fdct_11x11:0000000000000000 jpeg_fdct_11x11
     /tmp/ccj2o1lu.s:3691   .text.jpeg_fdct_12x12:0000000000000000 jpeg_fdct_12x12
     /tmp/ccj2o1lu.s:4326   .text.jpeg_fdct_13x13:0000000000000000 jpeg_fdct_13x13
     /tmp/ccj2o1lu.s:5109   .text.jpeg_fdct_14x14:0000000000000000 jpeg_fdct_14x14
     /tmp/ccj2o1lu.s:5819   .text.jpeg_fdct_15x15:0000000000000000 jpeg_fdct_15x15
     /tmp/ccj2o1lu.s:6558   .text.jpeg_fdct_16x16:0000000000000000 jpeg_fdct_16x16
     /tmp/ccj2o1lu.s:7380   .text.jpeg_fdct_16x8:0000000000000000 jpeg_fdct_16x8
     /tmp/ccj2o1lu.s:8011   .text.jpeg_fdct_14x7:0000000000000000 jpeg_fdct_14x7
     /tmp/ccj2o1lu.s:8587   .text.jpeg_fdct_12x6:0000000000000000 jpeg_fdct_12x6
     /tmp/ccj2o1lu.s:9074   .text.jpeg_fdct_10x5:0000000000000000 jpeg_fdct_10x5
     /tmp/ccj2o1lu.s:9479   .text.jpeg_fdct_8x4:0000000000000000 jpeg_fdct_8x4
     /tmp/ccj2o1lu.s:9843   .text.jpeg_fdct_6x3:0000000000000000 jpeg_fdct_6x3
     /tmp/ccj2o1lu.s:10088  .text.jpeg_fdct_4x2:0000000000000000 jpeg_fdct_4x2
     /tmp/ccj2o1lu.s:10240  .text.jpeg_fdct_2x1:0000000000000000 jpeg_fdct_2x1
     /tmp/ccj2o1lu.s:10315  .text.jpeg_fdct_8x16:0000000000000000 jpeg_fdct_8x16
     /tmp/ccj2o1lu.s:10949  .text.jpeg_fdct_7x14:0000000000000000 jpeg_fdct_7x14
     /tmp/ccj2o1lu.s:11545  .text.jpeg_fdct_6x12:0000000000000000 jpeg_fdct_6x12
     /tmp/ccj2o1lu.s:12050  .text.jpeg_fdct_5x10:0000000000000000 jpeg_fdct_5x10
     /tmp/ccj2o1lu.s:12501  .text.jpeg_fdct_4x8:0000000000000000 jpeg_fdct_4x8
     /tmp/ccj2o1lu.s:12870  .text.jpeg_fdct_3x6:0000000000000000 jpeg_fdct_3x6
     /tmp/ccj2o1lu.s:13104  .text.jpeg_fdct_2x4:0000000000000000 jpeg_fdct_2x4
     /tmp/ccj2o1lu.s:13255  .text.jpeg_fdct_1x2:0000000000000000 jpeg_fdct_1x2
                           .group:0000000000000000 wm4.0.cf9695abff4f49bdfe00dc4091904acd
                           .group:0000000000000000 wm4.stdcpredef.h.19.bf2bf6c5fb087dfb5ef2d2297c2795de
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.24da27e0a4d0d521fd057013d982b8b5
                           .group:0000000000000000 wm4.cdefs.h.19.56613e71f285ebad825b69b151170a81
                           .group:0000000000000000 wm4.wordsize.h.4.256e8fdbd37801980286acdbc40d0280
                           .group:0000000000000000 wm4.cdefs.h.432.619afd0aac7c4b439843706c1b28ddea
                           .group:0000000000000000 wm4.stubs64.h.10.918ceb5fa58268542bf143e4c1efbcf3
                           .group:0000000000000000 wm4.stdlib.h.27.59e2586c75bdbcb991b248ad7257b993
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.waitflags.h.25.e401b8bcfee800b540b27abd7cc78de9
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.endian.h.19.ff00c9c0f5e9f9a9719c5de76ace57b4
                           .group:0000000000000000 wm4.endian.h.41.24cced64aef71195a51d4daa8e4f4a95
                           .group:0000000000000000 wm4.types.h.89.468e2451361e3b92f048f6cad51690ff
                           .group:0000000000000000 wm4.typesizes.h.24.40eb69a6270178f15d1bf3d7b6635a8b
                           .group:0000000000000000 wm4.byteswap.h.38.11ee5fdc0f6cc53a16c505b9233cecef
                           .group:0000000000000000 wm4.endian.h.63.97272d7c64d5db8020003b32e9289502
                           .group:0000000000000000 wm4.waitstatus.h.99.408b6270fa6eb71377201a241ef15f79
                           .group:0000000000000000 wm4.stdlib.h.50.84aeca2ac6f37d40e1e9b3cef757ba2d
                           .group:0000000000000000 wm4.types.h.23.f6dcbaa72f8f71361acef09804d45a5e
                           .group:0000000000000000 wm4.time.h.53.beb46e650cd406cb917b6b96b45e640a
                           .group:0000000000000000 wm4.stddef.h.238.847b6907dabda77be90a9ab7ad789e2e
                           .group:0000000000000000 wm4.types.h.187.bd5a05039b505b3620e6973f1b2ffeb1
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.sigset.h.20.f36413b6d2364ad847d3db53fb03e683
                           .group:0000000000000000 wm4.select.h.36.f76c3b9e55c871743863013cc4cc14c9
                           .group:0000000000000000 wm4.time.h.66.e70ce69790c975f0efb369340c432e0b
                           .group:0000000000000000 wm4.time.h.25.ae5284cdff565e87a9198d819340325d
                           .group:0000000000000000 wm4.select.h.49.e9d2041e5035cc68ebd1a20f7dbc8514
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.sysmacros.h.20.8a0c33ff175cd9b434a86c0aaa36f0a2
                           .group:0000000000000000 wm4.types.h.229.67b3f66bd74b06b451caec392a72a945
                           .group:0000000000000000 wm4.pthreadtypes.h.25.6892b1493314fcf446bbc76e7362acba
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.26.4719156f1aea2bb9662fd6c582dc9a4c
                           .group:0000000000000000 wm4.stddef.h.238.04cc7214bceba497b20d15c10fd97511
                           .group:0000000000000000 wm4.stdio.h.36.2dd12c1fd035242ad5cfd0152a01be5a
                           .group:0000000000000000 wm4._G_config.h.5.b0f37d9e474454cf6e459063458db32f
                           .group:0000000000000000 wm4.wchar.h.80.eea3eba2d2a17aace9470a8e0d8218dc
                           .group:0000000000000000 wm4._G_config.h.46.5187c97b14fd664662cb32e6b94fc49e
                           .group:0000000000000000 wm4.libio.h.33.a775b9ecae273f33bc59931e9891e4ca
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.libio.h.51.dab170798ec1df48c625aea7c30e1b63
                           .group:0000000000000000 wm4.stdio.h.80.17b7dd1ca72d8a61987532cb1d80194a
                           .group:0000000000000000 wm4.stdio_lim.h.23.557290a6cddeba0587f574f29e3a5fb9
                           .group:0000000000000000 wm4.stdio.h.172.df21df34a7396d7da2e08f9b617d582f
                           .group:0000000000000000 wm4.stdio.h.26.cae64f7ada9bb8327a89dba6a5e93655
                           .group:0000000000000000 wm4.string.h.23.8394011d5995a16f15d67d04e84a1d69
                           .group:0000000000000000 wm4.string.h.24.1b0dc67418e7128d207285861439c2f8
                           .group:0000000000000000 wm4.string2.h.45.00535b99420fc3014c2da41d6645330d
                           .group:0000000000000000 wm4.string3.h.31.0c4b9301b754a2db05eaafef869657d2
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2
                           .group:0000000000000000 wm4.jdct.h.68.77a1fce97df2af4ec80ad9c80171cb02

UNDEFINED SYMBOLS
__stack_chk_fail
