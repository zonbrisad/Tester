   1              		.file	"jdatadst.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.init_destination,"ax",@progbits
   5              		.p2align 4
   7              	init_destination:
   8              	.LVL0:
   9              	.LFB51:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jdatadst.c"
   1:fltk-1.3.4-1/jpeg/jdatadst.c **** /*
   2:fltk-1.3.4-1/jpeg/jdatadst.c ****  * jdatadst.c
   3:fltk-1.3.4-1/jpeg/jdatadst.c ****  *
   4:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Copyright (C) 1994-1996, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Modified 2009-2012 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jdatadst.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jdatadst.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jdatadst.c ****  *
   9:fltk-1.3.4-1/jpeg/jdatadst.c ****  * This file contains compression data destination routines for the case of
  10:fltk-1.3.4-1/jpeg/jdatadst.c ****  * emitting JPEG data to memory or to a file (or any stdio stream).
  11:fltk-1.3.4-1/jpeg/jdatadst.c ****  * While these routines are sufficient for most applications,
  12:fltk-1.3.4-1/jpeg/jdatadst.c ****  * some will want to use a different destination manager.
  13:fltk-1.3.4-1/jpeg/jdatadst.c ****  * IMPORTANT: we assume that fwrite() will correctly transcribe an array of
  14:fltk-1.3.4-1/jpeg/jdatadst.c ****  * JOCTETs into 8-bit-wide elements on external storage.  If char is wider
  15:fltk-1.3.4-1/jpeg/jdatadst.c ****  * than 8 bits on your machine, you may need to do some tweaking.
  16:fltk-1.3.4-1/jpeg/jdatadst.c ****  */
  17:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  18:fltk-1.3.4-1/jpeg/jdatadst.c **** /* this is not a core library module, so it doesn't define JPEG_INTERNALS */
  19:fltk-1.3.4-1/jpeg/jdatadst.c **** #include "jinclude.h"
  20:fltk-1.3.4-1/jpeg/jdatadst.c **** #include "jpeglib.h"
  21:fltk-1.3.4-1/jpeg/jdatadst.c **** #include "jerror.h"
  22:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  23:fltk-1.3.4-1/jpeg/jdatadst.c **** #ifndef HAVE_STDLIB_H		/* <stdlib.h> should declare malloc(),free() */
  24:fltk-1.3.4-1/jpeg/jdatadst.c **** extern void * malloc JPP((size_t size));
  25:fltk-1.3.4-1/jpeg/jdatadst.c **** extern void free JPP((void *ptr));
  26:fltk-1.3.4-1/jpeg/jdatadst.c **** #endif
  27:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  28:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  29:fltk-1.3.4-1/jpeg/jdatadst.c **** /* Expanded data destination object for stdio output */
  30:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  31:fltk-1.3.4-1/jpeg/jdatadst.c **** typedef struct {
  32:fltk-1.3.4-1/jpeg/jdatadst.c ****   struct jpeg_destination_mgr pub; /* public fields */
  33:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  34:fltk-1.3.4-1/jpeg/jdatadst.c ****   FILE * outfile;		/* target stream */
  35:fltk-1.3.4-1/jpeg/jdatadst.c ****   JOCTET * buffer;		/* start of buffer */
  36:fltk-1.3.4-1/jpeg/jdatadst.c **** } my_destination_mgr;
  37:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  38:fltk-1.3.4-1/jpeg/jdatadst.c **** typedef my_destination_mgr * my_dest_ptr;
  39:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  40:fltk-1.3.4-1/jpeg/jdatadst.c **** #define OUTPUT_BUF_SIZE  4096	/* choose an efficiently fwrite'able size */
  41:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  42:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  43:fltk-1.3.4-1/jpeg/jdatadst.c **** /* Expanded data destination object for memory output */
  44:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  45:fltk-1.3.4-1/jpeg/jdatadst.c **** typedef struct {
  46:fltk-1.3.4-1/jpeg/jdatadst.c ****   struct jpeg_destination_mgr pub; /* public fields */
  47:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  48:fltk-1.3.4-1/jpeg/jdatadst.c ****   unsigned char ** outbuffer;	/* target buffer */
  49:fltk-1.3.4-1/jpeg/jdatadst.c ****   unsigned long * outsize;
  50:fltk-1.3.4-1/jpeg/jdatadst.c ****   unsigned char * newbuffer;	/* newly allocated buffer */
  51:fltk-1.3.4-1/jpeg/jdatadst.c ****   JOCTET * buffer;		/* start of buffer */
  52:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t bufsize;
  53:fltk-1.3.4-1/jpeg/jdatadst.c **** } my_mem_destination_mgr;
  54:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  55:fltk-1.3.4-1/jpeg/jdatadst.c **** typedef my_mem_destination_mgr * my_mem_dest_ptr;
  56:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  57:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  58:fltk-1.3.4-1/jpeg/jdatadst.c **** /*
  59:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Initialize destination --- called by jpeg_start_compress
  60:fltk-1.3.4-1/jpeg/jdatadst.c ****  * before any data is actually written.
  61:fltk-1.3.4-1/jpeg/jdatadst.c ****  */
  62:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  63:fltk-1.3.4-1/jpeg/jdatadst.c **** METHODDEF(void)
  64:fltk-1.3.4-1/jpeg/jdatadst.c **** init_destination (j_compress_ptr cinfo)
  65:fltk-1.3.4-1/jpeg/jdatadst.c **** {
  11              		.loc 1 65 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 65 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
  66:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
  15              		.loc 1 66 3 is_stmt 1 view .LVU2
  67:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  68:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* Allocate the output buffer --- it will be released when done with image */
  69:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->buffer = (JOCTET *)
  70:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  16              		.loc 1 70 8 is_stmt 0 view .LVU3
  17 0004 488B4708 		movq	8(%rdi), %rax
  65:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
  18              		.loc 1 65 1 view .LVU4
  19 0008 53       		pushq	%rbx
  20              		.cfi_def_cfa_offset 16
  21              		.cfi_offset 3, -16
  22              		.loc 1 70 8 view .LVU5
  23 0009 BA001000 		movl	$4096, %edx
  23      00
  24 000e BE010000 		movl	$1, %esi
  24      00
  66:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
  25              		.loc 1 66 15 view .LVU6
  26 0013 488B5F28 		movq	40(%rdi), %rbx
  27              	.LVL1:
  69:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  28              		.loc 1 69 3 is_stmt 1 view .LVU7
  29              		.loc 1 70 8 is_stmt 0 view .LVU8
  30 0017 FF10     		call	*(%rax)
  31              	.LVL2:
  69:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  32              		.loc 1 69 16 view .LVU9
  33 0019 48894330 		movq	%rax, 48(%rbx)
  71:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  OUTPUT_BUF_SIZE * SIZEOF(JOCTET));
  72:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  73:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.next_output_byte = dest->buffer;
  34              		.loc 1 73 3 is_stmt 1 view .LVU10
  35              		.loc 1 73 30 is_stmt 0 view .LVU11
  36 001d 488903   		movq	%rax, (%rbx)
  74:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = OUTPUT_BUF_SIZE;
  37              		.loc 1 74 3 is_stmt 1 view .LVU12
  38              		.loc 1 74 28 is_stmt 0 view .LVU13
  39 0020 48C74308 		movq	$4096, 8(%rbx)
  39      00100000 
  75:fltk-1.3.4-1/jpeg/jdatadst.c **** }
  40              		.loc 1 75 1 view .LVU14
  41 0028 5B       		popq	%rbx
  42              		.cfi_def_cfa_offset 8
  43              	.LVL3:
  44              		.loc 1 75 1 view .LVU15
  45 0029 C3       		ret
  46              		.cfi_endproc
  47              	.LFE51:
  49              		.section	.text.init_mem_destination,"ax",@progbits
  50              		.p2align 4
  52              	init_mem_destination:
  53              	.LVL4:
  54              	.LFB52:
  76:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  77:fltk-1.3.4-1/jpeg/jdatadst.c **** METHODDEF(void)
  78:fltk-1.3.4-1/jpeg/jdatadst.c **** init_mem_destination (j_compress_ptr cinfo)
  79:fltk-1.3.4-1/jpeg/jdatadst.c **** {
  55              		.loc 1 79 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		.loc 1 79 1 is_stmt 0 view .LVU17
  58 0000 F30F1EFA 		endbr64
  80:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* no work necessary here */
  81:fltk-1.3.4-1/jpeg/jdatadst.c **** }
  59              		.loc 1 81 1 is_stmt 1 view .LVU18
  60 0004 C3       		ret
  61              		.cfi_endproc
  62              	.LFE52:
  64              		.section	.text.term_mem_destination,"ax",@progbits
  65              		.p2align 4
  67              	term_mem_destination:
  68              	.LVL5:
  69              	.LFB56:
  82:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  83:fltk-1.3.4-1/jpeg/jdatadst.c **** 
  84:fltk-1.3.4-1/jpeg/jdatadst.c **** /*
  85:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Empty the output buffer --- called whenever buffer fills up.
  86:fltk-1.3.4-1/jpeg/jdatadst.c ****  *
  87:fltk-1.3.4-1/jpeg/jdatadst.c ****  * In typical applications, this should write the entire output buffer
  88:fltk-1.3.4-1/jpeg/jdatadst.c ****  * (ignoring the current state of next_output_byte & free_in_buffer),
  89:fltk-1.3.4-1/jpeg/jdatadst.c ****  * reset the pointer & count to the start of the buffer, and return TRUE
  90:fltk-1.3.4-1/jpeg/jdatadst.c ****  * indicating that the buffer has been dumped.
  91:fltk-1.3.4-1/jpeg/jdatadst.c ****  *
  92:fltk-1.3.4-1/jpeg/jdatadst.c ****  * In applications that need to be able to suspend compression due to output
  93:fltk-1.3.4-1/jpeg/jdatadst.c ****  * overrun, a FALSE return indicates that the buffer cannot be emptied now.
  94:fltk-1.3.4-1/jpeg/jdatadst.c ****  * In this situation, the compressor will return to its caller (possibly with
  95:fltk-1.3.4-1/jpeg/jdatadst.c ****  * an indication that it has not accepted all the supplied scanlines).  The
  96:fltk-1.3.4-1/jpeg/jdatadst.c ****  * application should resume compression after it has made more room in the
  97:fltk-1.3.4-1/jpeg/jdatadst.c ****  * output buffer.  Note that there are substantial restrictions on the use of
  98:fltk-1.3.4-1/jpeg/jdatadst.c ****  * suspension --- see the documentation.
  99:fltk-1.3.4-1/jpeg/jdatadst.c ****  *
 100:fltk-1.3.4-1/jpeg/jdatadst.c ****  * When suspending, the compressor will back up to a convenient restart point
 101:fltk-1.3.4-1/jpeg/jdatadst.c ****  * (typically the start of the current MCU). next_output_byte & free_in_buffer
 102:fltk-1.3.4-1/jpeg/jdatadst.c ****  * indicate where the restart point will be if the current call returns FALSE.
 103:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Data beyond this point will be regenerated after resumption, so do not
 104:fltk-1.3.4-1/jpeg/jdatadst.c ****  * write it out when emptying the buffer externally.
 105:fltk-1.3.4-1/jpeg/jdatadst.c ****  */
 106:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 107:fltk-1.3.4-1/jpeg/jdatadst.c **** METHODDEF(boolean)
 108:fltk-1.3.4-1/jpeg/jdatadst.c **** empty_output_buffer (j_compress_ptr cinfo)
 109:fltk-1.3.4-1/jpeg/jdatadst.c **** {
 110:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 111:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 112:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (JFWRITE(dest->outfile, dest->buffer, OUTPUT_BUF_SIZE) !=
 113:fltk-1.3.4-1/jpeg/jdatadst.c ****       (size_t) OUTPUT_BUF_SIZE)
 114:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT(cinfo, JERR_FILE_WRITE);
 115:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 116:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.next_output_byte = dest->buffer;
 117:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = OUTPUT_BUF_SIZE;
 118:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 119:fltk-1.3.4-1/jpeg/jdatadst.c ****   return TRUE;
 120:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 121:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 122:fltk-1.3.4-1/jpeg/jdatadst.c **** METHODDEF(boolean)
 123:fltk-1.3.4-1/jpeg/jdatadst.c **** empty_mem_output_buffer (j_compress_ptr cinfo)
 124:fltk-1.3.4-1/jpeg/jdatadst.c **** {
 125:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t nextsize;
 126:fltk-1.3.4-1/jpeg/jdatadst.c ****   JOCTET * nextbuffer;
 127:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_mem_dest_ptr dest = (my_mem_dest_ptr) cinfo->dest;
 128:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 129:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* Try to allocate new buffer with double size */
 130:fltk-1.3.4-1/jpeg/jdatadst.c ****   nextsize = dest->bufsize * 2;
 131:fltk-1.3.4-1/jpeg/jdatadst.c ****   nextbuffer = (JOCTET *) malloc(nextsize);
 132:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 133:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (nextbuffer == NULL)
 134:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);
 135:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 136:fltk-1.3.4-1/jpeg/jdatadst.c ****   MEMCOPY(nextbuffer, dest->buffer, dest->bufsize);
 137:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 138:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (dest->newbuffer != NULL)
 139:fltk-1.3.4-1/jpeg/jdatadst.c ****     free(dest->newbuffer);
 140:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 141:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->newbuffer = nextbuffer;
 142:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 143:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.next_output_byte = nextbuffer + dest->bufsize;
 144:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = dest->bufsize;
 145:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 146:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->buffer = nextbuffer;
 147:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->bufsize = nextsize;
 148:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 149:fltk-1.3.4-1/jpeg/jdatadst.c ****   return TRUE;
 150:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 151:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 152:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 153:fltk-1.3.4-1/jpeg/jdatadst.c **** /*
 154:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Terminate destination --- called by jpeg_finish_compress
 155:fltk-1.3.4-1/jpeg/jdatadst.c ****  * after all data has been written.  Usually needs to flush buffer.
 156:fltk-1.3.4-1/jpeg/jdatadst.c ****  *
 157:fltk-1.3.4-1/jpeg/jdatadst.c ****  * NB: *not* called by jpeg_abort or jpeg_destroy; surrounding
 158:fltk-1.3.4-1/jpeg/jdatadst.c ****  * application must deal with any cleanup that should happen even
 159:fltk-1.3.4-1/jpeg/jdatadst.c ****  * for error exit.
 160:fltk-1.3.4-1/jpeg/jdatadst.c ****  */
 161:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 162:fltk-1.3.4-1/jpeg/jdatadst.c **** METHODDEF(void)
 163:fltk-1.3.4-1/jpeg/jdatadst.c **** term_destination (j_compress_ptr cinfo)
 164:fltk-1.3.4-1/jpeg/jdatadst.c **** {
 165:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 166:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t datacount = OUTPUT_BUF_SIZE - dest->pub.free_in_buffer;
 167:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 168:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* Write any data remaining in the buffer */
 169:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (datacount > 0) {
 170:fltk-1.3.4-1/jpeg/jdatadst.c ****     if (JFWRITE(dest->outfile, dest->buffer, datacount) != datacount)
 171:fltk-1.3.4-1/jpeg/jdatadst.c ****       ERREXIT(cinfo, JERR_FILE_WRITE);
 172:fltk-1.3.4-1/jpeg/jdatadst.c ****   }
 173:fltk-1.3.4-1/jpeg/jdatadst.c ****   fflush(dest->outfile);
 174:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* Make sure we wrote the output file OK */
 175:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (ferror(dest->outfile))
 176:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT(cinfo, JERR_FILE_WRITE);
 177:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 178:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 179:fltk-1.3.4-1/jpeg/jdatadst.c **** METHODDEF(void)
 180:fltk-1.3.4-1/jpeg/jdatadst.c **** term_mem_destination (j_compress_ptr cinfo)
 181:fltk-1.3.4-1/jpeg/jdatadst.c **** {
  70              		.loc 1 181 1 view -0
  71              		.cfi_startproc
  72              		.loc 1 181 1 is_stmt 0 view .LVU20
  73 0000 F30F1EFA 		endbr64
 182:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_mem_dest_ptr dest = (my_mem_dest_ptr) cinfo->dest;
  74              		.loc 1 182 3 is_stmt 1 view .LVU21
  75              		.loc 1 182 19 is_stmt 0 view .LVU22
  76 0004 488B4728 		movq	40(%rdi), %rax
  77              	.LVL6:
 183:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 184:fltk-1.3.4-1/jpeg/jdatadst.c ****   *dest->outbuffer = dest->buffer;
  78              		.loc 1 184 3 is_stmt 1 view .LVU23
  79              		.loc 1 184 8 is_stmt 0 view .LVU24
  80 0008 488B5028 		movq	40(%rax), %rdx
  81              		.loc 1 184 26 view .LVU25
  82 000c 488B4840 		movq	64(%rax), %rcx
  83              		.loc 1 184 20 view .LVU26
  84 0010 48890A   		movq	%rcx, (%rdx)
 185:fltk-1.3.4-1/jpeg/jdatadst.c ****   *dest->outsize = dest->bufsize - dest->pub.free_in_buffer;
  85              		.loc 1 185 3 is_stmt 1 view .LVU27
  86              		.loc 1 185 8 is_stmt 0 view .LVU28
  87 0013 488B4830 		movq	48(%rax), %rcx
  88              		.loc 1 185 34 view .LVU29
  89 0017 488B5048 		movq	72(%rax), %rdx
  90 001b 482B5008 		subq	8(%rax), %rdx
  91              		.loc 1 185 18 view .LVU30
  92 001f 488911   		movq	%rdx, (%rcx)
 186:fltk-1.3.4-1/jpeg/jdatadst.c **** }
  93              		.loc 1 186 1 view .LVU31
  94 0022 C3       		ret
  95              		.cfi_endproc
  96              	.LFE56:
  98              		.section	.text.empty_output_buffer,"ax",@progbits
  99              		.p2align 4
 101              	empty_output_buffer:
 102              	.LVL7:
 103              	.LFB53:
 109:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 104              		.loc 1 109 1 is_stmt 1 view -0
 105              		.cfi_startproc
 109:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 106              		.loc 1 109 1 is_stmt 0 view .LVU33
 107 0000 F30F1EFA 		endbr64
 110:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 108              		.loc 1 110 3 is_stmt 1 view .LVU34
 109:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 109              		.loc 1 109 1 is_stmt 0 view .LVU35
 110 0004 55       		pushq	%rbp
 111              		.cfi_def_cfa_offset 16
 112              		.cfi_offset 6, -16
 113 0005 4889FD   		movq	%rdi, %rbp
 112:fltk-1.3.4-1/jpeg/jdatadst.c ****       (size_t) OUTPUT_BUF_SIZE)
 114              		.loc 1 112 7 view .LVU36
 115 0008 BA001000 		movl	$4096, %edx
 115      00
 116 000d BE010000 		movl	$1, %esi
 116      00
 109:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 117              		.loc 1 109 1 view .LVU37
 118 0012 53       		pushq	%rbx
 119              		.cfi_def_cfa_offset 24
 120              		.cfi_offset 3, -24
 121 0013 4883EC08 		subq	$8, %rsp
 122              		.cfi_def_cfa_offset 32
 110:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 123              		.loc 1 110 15 view .LVU38
 124 0017 488B5F28 		movq	40(%rdi), %rbx
 125              	.LVL8:
 112:fltk-1.3.4-1/jpeg/jdatadst.c ****       (size_t) OUTPUT_BUF_SIZE)
 126              		.loc 1 112 3 is_stmt 1 view .LVU39
 112:fltk-1.3.4-1/jpeg/jdatadst.c ****       (size_t) OUTPUT_BUF_SIZE)
 127              		.loc 1 112 7 is_stmt 0 view .LVU40
 128 001b 488B4B28 		movq	40(%rbx), %rcx
 129 001f 488B7B30 		movq	48(%rbx), %rdi
 130              	.LVL9:
 112:fltk-1.3.4-1/jpeg/jdatadst.c ****       (size_t) OUTPUT_BUF_SIZE)
 131              		.loc 1 112 7 view .LVU41
 132 0023 E8000000 		call	fwrite@PLT
 132      00
 133              	.LVL10:
 112:fltk-1.3.4-1/jpeg/jdatadst.c ****       (size_t) OUTPUT_BUF_SIZE)
 134              		.loc 1 112 6 view .LVU42
 135 0028 483D0010 		cmpq	$4096, %rax
 135      0000
 136 002e 7414     		je	.L7
 114:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 137              		.loc 1 114 5 is_stmt 1 view .LVU43
 138 0030 488B4500 		movq	0(%rbp), %rax
 139 0034 4889EF   		movq	%rbp, %rdi
 140 0037 C7402826 		movl	$38, 40(%rax)
 140      000000
 141 003e 488B4500 		movq	0(%rbp), %rax
 142 0042 FF10     		call	*(%rax)
 143              	.LVL11:
 144              	.L7:
 116:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = OUTPUT_BUF_SIZE;
 145              		.loc 1 116 3 view .LVU44
 116:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = OUTPUT_BUF_SIZE;
 146              		.loc 1 116 30 is_stmt 0 view .LVU45
 147 0044 488B4330 		movq	48(%rbx), %rax
 117:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 148              		.loc 1 117 28 view .LVU46
 149 0048 48C74308 		movq	$4096, 8(%rbx)
 149      00100000 
 116:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = OUTPUT_BUF_SIZE;
 150              		.loc 1 116 30 view .LVU47
 151 0050 488903   		movq	%rax, (%rbx)
 117:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 152              		.loc 1 117 3 is_stmt 1 view .LVU48
 119:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 153              		.loc 1 119 3 view .LVU49
 120:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 154              		.loc 1 120 1 is_stmt 0 view .LVU50
 155 0053 4883C408 		addq	$8, %rsp
 156              		.cfi_def_cfa_offset 24
 157 0057 B8010000 		movl	$1, %eax
 157      00
 158 005c 5B       		popq	%rbx
 159              		.cfi_def_cfa_offset 16
 160              	.LVL12:
 120:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 161              		.loc 1 120 1 view .LVU51
 162 005d 5D       		popq	%rbp
 163              		.cfi_def_cfa_offset 8
 164              	.LVL13:
 120:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 165              		.loc 1 120 1 view .LVU52
 166 005e C3       		ret
 167              		.cfi_endproc
 168              	.LFE53:
 170              		.section	.text.empty_mem_output_buffer,"ax",@progbits
 171              		.p2align 4
 173              	empty_mem_output_buffer:
 174              	.LVL14:
 175              	.LFB54:
 124:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t nextsize;
 176              		.loc 1 124 1 is_stmt 1 view -0
 177              		.cfi_startproc
 124:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t nextsize;
 178              		.loc 1 124 1 is_stmt 0 view .LVU54
 179 0000 F30F1EFA 		endbr64
 125:fltk-1.3.4-1/jpeg/jdatadst.c ****   JOCTET * nextbuffer;
 180              		.loc 1 125 3 is_stmt 1 view .LVU55
 126:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_mem_dest_ptr dest = (my_mem_dest_ptr) cinfo->dest;
 181              		.loc 1 126 3 view .LVU56
 127:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 182              		.loc 1 127 3 view .LVU57
 124:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t nextsize;
 183              		.loc 1 124 1 is_stmt 0 view .LVU58
 184 0004 4156     		pushq	%r14
 185              		.cfi_def_cfa_offset 16
 186              		.cfi_offset 14, -16
 187 0006 4155     		pushq	%r13
 188              		.cfi_def_cfa_offset 24
 189              		.cfi_offset 13, -24
 190 0008 4154     		pushq	%r12
 191              		.cfi_def_cfa_offset 32
 192              		.cfi_offset 12, -32
 193 000a 4989FC   		movq	%rdi, %r12
 194 000d 55       		pushq	%rbp
 195              		.cfi_def_cfa_offset 40
 196              		.cfi_offset 6, -40
 197 000e 53       		pushq	%rbx
 198              		.cfi_def_cfa_offset 48
 199              		.cfi_offset 3, -48
 127:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 200              		.loc 1 127 19 view .LVU59
 201 000f 488B5F28 		movq	40(%rdi), %rbx
 202              	.LVL15:
 130:fltk-1.3.4-1/jpeg/jdatadst.c ****   nextbuffer = (JOCTET *) malloc(nextsize);
 203              		.loc 1 130 3 is_stmt 1 view .LVU60
 130:fltk-1.3.4-1/jpeg/jdatadst.c ****   nextbuffer = (JOCTET *) malloc(nextsize);
 204              		.loc 1 130 18 is_stmt 0 view .LVU61
 205 0013 4C8B6B48 		movq	72(%rbx), %r13
 130:fltk-1.3.4-1/jpeg/jdatadst.c ****   nextbuffer = (JOCTET *) malloc(nextsize);
 206              		.loc 1 130 12 view .LVU62
 207 0017 4F8D742D 		leaq	(%r13,%r13), %r14
 207      00
 208              	.LVL16:
 131:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 209              		.loc 1 131 3 is_stmt 1 view .LVU63
 131:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 210              		.loc 1 131 27 is_stmt 0 view .LVU64
 211 001c 4C89F7   		movq	%r14, %rdi
 212              	.LVL17:
 131:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 213              		.loc 1 131 27 view .LVU65
 214 001f E8000000 		call	malloc@PLT
 214      00
 215              	.LVL18:
 216 0024 4889C5   		movq	%rax, %rbp
 217              	.LVL19:
 133:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);
 218              		.loc 1 133 3 is_stmt 1 view .LVU66
 133:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);
 219              		.loc 1 133 6 is_stmt 0 view .LVU67
 220 0027 4885C0   		testq	%rax, %rax
 221 002a 7447     		je	.L19
 222              	.LVL20:
 223              	.L13:
 136:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 224              		.loc 1 136 3 is_stmt 1 view .LVU68
 225              	.LBB4:
 226              	.LBI4:
 227              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
 228              		.loc 2 31 1 view .LVU69
 229              	.LBB5:
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
 230              		.loc 2 34 3 view .LVU70
 231              		.loc 2 34 10 is_stmt 0 view .LVU71
 232 002c 488B7340 		movq	64(%rbx), %rsi
 233 0030 4889EF   		movq	%rbp, %rdi
 234 0033 4C89EA   		movq	%r13, %rdx
 235 0036 E8000000 		call	memcpy@PLT
 235      00
 236              	.LVL21:
 237              		.loc 2 34 10 view .LVU72
 238              	.LBE5:
 239              	.LBE4:
 138:fltk-1.3.4-1/jpeg/jdatadst.c ****     free(dest->newbuffer);
 240              		.loc 1 138 3 is_stmt 1 view .LVU73
 138:fltk-1.3.4-1/jpeg/jdatadst.c ****     free(dest->newbuffer);
 241              		.loc 1 138 11 is_stmt 0 view .LVU74
 242 003b 488B7B38 		movq	56(%rbx), %rdi
 138:fltk-1.3.4-1/jpeg/jdatadst.c ****     free(dest->newbuffer);
 243              		.loc 1 138 6 view .LVU75
 244 003f 4885FF   		testq	%rdi, %rdi
 245 0042 7405     		je	.L14
 139:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 246              		.loc 1 139 5 is_stmt 1 view .LVU76
 247 0044 E8000000 		call	free@PLT
 247      00
 248              	.LVL22:
 249              	.L14:
 141:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 250              		.loc 1 141 3 view .LVU77
 143:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = dest->bufsize;
 251              		.loc 1 143 49 is_stmt 0 view .LVU78
 252 0049 488B4348 		movq	72(%rbx), %rax
 141:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 253              		.loc 1 141 19 view .LVU79
 254 004d 48896B38 		movq	%rbp, 56(%rbx)
 143:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = dest->bufsize;
 255              		.loc 1 143 3 is_stmt 1 view .LVU80
 146:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->bufsize = nextsize;
 256              		.loc 1 146 16 is_stmt 0 view .LVU81
 257 0051 48896B40 		movq	%rbp, 64(%rbx)
 143:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = dest->bufsize;
 258              		.loc 1 143 43 view .LVU82
 259 0055 488D5405 		leaq	0(%rbp,%rax), %rdx
 259      00
 144:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 260              		.loc 1 144 28 view .LVU83
 261 005a 48894308 		movq	%rax, 8(%rbx)
 150:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 262              		.loc 1 150 1 view .LVU84
 263 005e B8010000 		movl	$1, %eax
 263      00
 143:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = dest->bufsize;
 264              		.loc 1 143 43 view .LVU85
 265 0063 488913   		movq	%rdx, (%rbx)
 144:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 266              		.loc 1 144 3 is_stmt 1 view .LVU86
 146:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->bufsize = nextsize;
 267              		.loc 1 146 3 view .LVU87
 147:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 268              		.loc 1 147 3 view .LVU88
 147:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 269              		.loc 1 147 17 is_stmt 0 view .LVU89
 270 0066 4C897348 		movq	%r14, 72(%rbx)
 149:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 271              		.loc 1 149 3 is_stmt 1 view .LVU90
 150:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 272              		.loc 1 150 1 is_stmt 0 view .LVU91
 273 006a 5B       		popq	%rbx
 274              		.cfi_remember_state
 275              		.cfi_def_cfa_offset 40
 276              	.LVL23:
 150:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 277              		.loc 1 150 1 view .LVU92
 278 006b 5D       		popq	%rbp
 279              		.cfi_def_cfa_offset 32
 280              	.LVL24:
 150:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 281              		.loc 1 150 1 view .LVU93
 282 006c 415C     		popq	%r12
 283              		.cfi_def_cfa_offset 24
 284              	.LVL25:
 150:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 285              		.loc 1 150 1 view .LVU94
 286 006e 415D     		popq	%r13
 287              		.cfi_def_cfa_offset 16
 288 0070 415E     		popq	%r14
 289              		.cfi_def_cfa_offset 8
 290              	.LVL26:
 150:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 291              		.loc 1 150 1 view .LVU95
 292 0072 C3       		ret
 293              	.LVL27:
 294              	.L19:
 295              		.cfi_restore_state
 134:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 296              		.loc 1 134 5 is_stmt 1 view .LVU96
 297 0073 498B0424 		movq	(%r12), %rax
 298              	.LVL28:
 134:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 299              		.loc 1 134 5 is_stmt 0 view .LVU97
 300 0077 4C89E7   		movq	%r12, %rdi
 301 007a C7402838 		movl	$56, 40(%rax)
 301      000000
 302 0081 498B0424 		movq	(%r12), %rax
 303 0085 C7402C0A 		movl	$10, 44(%rax)
 303      000000
 304 008c 498B0424 		movq	(%r12), %rax
 305 0090 FF10     		call	*(%rax)
 306              	.LVL29:
 307 0092 4C8B6B48 		movq	72(%rbx), %r13
 308 0096 EB94     		jmp	.L13
 309              		.cfi_endproc
 310              	.LFE54:
 312              		.section	.text.term_destination,"ax",@progbits
 313              		.p2align 4
 315              	term_destination:
 316              	.LVL30:
 317              	.LFB55:
 164:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 318              		.loc 1 164 1 is_stmt 1 view -0
 319              		.cfi_startproc
 164:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 320              		.loc 1 164 1 is_stmt 0 view .LVU99
 321 0000 F30F1EFA 		endbr64
 165:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t datacount = OUTPUT_BUF_SIZE - dest->pub.free_in_buffer;
 322              		.loc 1 165 3 is_stmt 1 view .LVU100
 164:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 323              		.loc 1 164 1 is_stmt 0 view .LVU101
 324 0004 4154     		pushq	%r12
 325              		.cfi_def_cfa_offset 16
 326              		.cfi_offset 12, -16
 166:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 327              		.loc 1 166 10 view .LVU102
 328 0006 B8001000 		movl	$4096, %eax
 328      00
 164:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest = (my_dest_ptr) cinfo->dest;
 329              		.loc 1 164 1 view .LVU103
 330 000b 55       		pushq	%rbp
 331              		.cfi_def_cfa_offset 24
 332              		.cfi_offset 6, -24
 333 000c 4889FD   		movq	%rdi, %rbp
 334 000f 53       		pushq	%rbx
 335              		.cfi_def_cfa_offset 32
 336              		.cfi_offset 3, -32
 165:fltk-1.3.4-1/jpeg/jdatadst.c ****   size_t datacount = OUTPUT_BUF_SIZE - dest->pub.free_in_buffer;
 337              		.loc 1 165 15 view .LVU104
 338 0010 488B5F28 		movq	40(%rdi), %rbx
 339              	.LVL31:
 166:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 340              		.loc 1 166 3 is_stmt 1 view .LVU105
 169:fltk-1.3.4-1/jpeg/jdatadst.c ****     if (JFWRITE(dest->outfile, dest->buffer, datacount) != datacount)
 341              		.loc 1 169 3 view .LVU106
 342 0014 488B7B28 		movq	40(%rbx), %rdi
 343              	.LVL32:
 169:fltk-1.3.4-1/jpeg/jdatadst.c ****     if (JFWRITE(dest->outfile, dest->buffer, datacount) != datacount)
 344              		.loc 1 169 6 is_stmt 0 view .LVU107
 345 0018 482B4308 		subq	8(%rbx), %rax
 346              	.LVL33:
 169:fltk-1.3.4-1/jpeg/jdatadst.c ****     if (JFWRITE(dest->outfile, dest->buffer, datacount) != datacount)
 347              		.loc 1 169 6 view .LVU108
 348 001c 753A     		jne	.L29
 349              	.LVL34:
 350              	.L21:
 173:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* Make sure we wrote the output file OK */
 351              		.loc 1 173 3 is_stmt 1 view .LVU109
 352 001e E8000000 		call	fflush@PLT
 352      00
 353              	.LVL35:
 175:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT(cinfo, JERR_FILE_WRITE);
 354              		.loc 1 175 3 view .LVU110
 175:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT(cinfo, JERR_FILE_WRITE);
 355              		.loc 1 175 7 is_stmt 0 view .LVU111
 356 0023 488B7B28 		movq	40(%rbx), %rdi
 357 0027 E8000000 		call	ferror@PLT
 357      00
 358              	.LVL36:
 175:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT(cinfo, JERR_FILE_WRITE);
 359              		.loc 1 175 6 view .LVU112
 360 002c 85C0     		testl	%eax, %eax
 361 002e 7420     		je	.L20
 362              	.LVL37:
 363              	.LBB8:
 364              	.LBI8:
 163:fltk-1.3.4-1/jpeg/jdatadst.c **** {
 365              		.loc 1 163 1 is_stmt 1 view .LVU113
 366              	.LBB9:
 176:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 367              		.loc 1 176 5 view .LVU114
 368 0030 488B4500 		movq	0(%rbp), %rax
 369 0034 4889EF   		movq	%rbp, %rdi
 370 0037 C7402826 		movl	$38, 40(%rax)
 370      000000
 371 003e 488B4500 		movq	0(%rbp), %rax
 372              	.LBE9:
 373              	.LBE8:
 177:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 374              		.loc 1 177 1 is_stmt 0 view .LVU115
 375 0042 5B       		popq	%rbx
 376              		.cfi_remember_state
 377              		.cfi_def_cfa_offset 24
 378              	.LVL38:
 177:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 379              		.loc 1 177 1 view .LVU116
 380 0043 5D       		popq	%rbp
 381              		.cfi_def_cfa_offset 16
 382              	.LVL39:
 383              	.LBB12:
 384              	.LBB10:
 176:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 385              		.loc 1 176 5 view .LVU117
 386 0044 488B00   		movq	(%rax), %rax
 387              	.LBE10:
 388              	.LBE12:
 177:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 389              		.loc 1 177 1 view .LVU118
 390 0047 415C     		popq	%r12
 391              		.cfi_def_cfa_offset 8
 392              	.LBB13:
 393              	.LBB11:
 176:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 394              		.loc 1 176 5 view .LVU119
 395 0049 FFE0     		jmp	*%rax
 396              	.LVL40:
 397 004b 0F1F4400 		.p2align 4,,10
 397      00
 398              		.p2align 3
 399              	.L20:
 400              		.cfi_restore_state
 176:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 401              		.loc 1 176 5 view .LVU120
 402              	.LBE11:
 403              	.LBE13:
 177:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 404              		.loc 1 177 1 view .LVU121
 405 0050 5B       		popq	%rbx
 406              		.cfi_remember_state
 407              		.cfi_def_cfa_offset 24
 408              	.LVL41:
 177:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 409              		.loc 1 177 1 view .LVU122
 410 0051 5D       		popq	%rbp
 411              		.cfi_def_cfa_offset 16
 412              	.LVL42:
 177:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 413              		.loc 1 177 1 view .LVU123
 414 0052 415C     		popq	%r12
 415              		.cfi_def_cfa_offset 8
 416 0054 C3       		ret
 417              	.LVL43:
 418              		.p2align 4,,10
 419 0055 0F1F00   		.p2align 3
 420              	.L29:
 421              		.cfi_restore_state
 170:fltk-1.3.4-1/jpeg/jdatadst.c ****       ERREXIT(cinfo, JERR_FILE_WRITE);
 422              		.loc 1 170 9 view .LVU124
 423 0058 4C8B4330 		movq	48(%rbx), %r8
 424 005c 4889F9   		movq	%rdi, %rcx
 425 005f 4889C2   		movq	%rax, %rdx
 426 0062 BE010000 		movl	$1, %esi
 426      00
 427 0067 4989C4   		movq	%rax, %r12
 170:fltk-1.3.4-1/jpeg/jdatadst.c ****       ERREXIT(cinfo, JERR_FILE_WRITE);
 428              		.loc 1 170 5 is_stmt 1 view .LVU125
 170:fltk-1.3.4-1/jpeg/jdatadst.c ****       ERREXIT(cinfo, JERR_FILE_WRITE);
 429              		.loc 1 170 9 is_stmt 0 view .LVU126
 430 006a 4C89C7   		movq	%r8, %rdi
 431 006d E8000000 		call	fwrite@PLT
 431      00
 432              	.LVL44:
 170:fltk-1.3.4-1/jpeg/jdatadst.c ****       ERREXIT(cinfo, JERR_FILE_WRITE);
 433              		.loc 1 170 8 view .LVU127
 434 0072 4C39E0   		cmpq	%r12, %rax
 435 0075 7414     		je	.L28
 171:fltk-1.3.4-1/jpeg/jdatadst.c ****   }
 436              		.loc 1 171 7 is_stmt 1 view .LVU128
 437 0077 488B4500 		movq	0(%rbp), %rax
 438 007b 4889EF   		movq	%rbp, %rdi
 439 007e C7402826 		movl	$38, 40(%rax)
 439      000000
 440 0085 488B4500 		movq	0(%rbp), %rax
 441 0089 FF10     		call	*(%rax)
 442              	.LVL45:
 443              	.L28:
 171:fltk-1.3.4-1/jpeg/jdatadst.c ****   }
 444              		.loc 1 171 7 is_stmt 0 view .LVU129
 445 008b 488B7B28 		movq	40(%rbx), %rdi
 446 008f EB8D     		jmp	.L21
 447              		.cfi_endproc
 448              	.LFE55:
 450              		.section	.text.jpeg_stdio_dest,"ax",@progbits
 451              		.p2align 4
 452              		.globl	jpeg_stdio_dest
 454              	jpeg_stdio_dest:
 455              	.LVL46:
 456              	.LFB57:
 187:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 188:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 189:fltk-1.3.4-1/jpeg/jdatadst.c **** /*
 190:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Prepare for output to a stdio stream.
 191:fltk-1.3.4-1/jpeg/jdatadst.c ****  * The caller must have already opened the stream, and is responsible
 192:fltk-1.3.4-1/jpeg/jdatadst.c ****  * for closing it after finishing compression.
 193:fltk-1.3.4-1/jpeg/jdatadst.c ****  */
 194:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 195:fltk-1.3.4-1/jpeg/jdatadst.c **** GLOBAL(void)
 196:fltk-1.3.4-1/jpeg/jdatadst.c **** jpeg_stdio_dest (j_compress_ptr cinfo, FILE * outfile)
 197:fltk-1.3.4-1/jpeg/jdatadst.c **** {
 457              		.loc 1 197 1 is_stmt 1 view -0
 458              		.cfi_startproc
 459              		.loc 1 197 1 is_stmt 0 view .LVU131
 460 0000 F30F1EFA 		endbr64
 198:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest;
 461              		.loc 1 198 3 is_stmt 1 view .LVU132
 199:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 200:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* The destination object is made permanent so that multiple JPEG images
 201:fltk-1.3.4-1/jpeg/jdatadst.c ****    * can be written to the same file without re-executing jpeg_stdio_dest.
 202:fltk-1.3.4-1/jpeg/jdatadst.c ****    * This makes it dangerous to use this manager and a different destination
 203:fltk-1.3.4-1/jpeg/jdatadst.c ****    * manager serially with the same JPEG object, because their private object
 204:fltk-1.3.4-1/jpeg/jdatadst.c ****    * sizes may be different.  Caveat programmer.
 205:fltk-1.3.4-1/jpeg/jdatadst.c ****    */
 206:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (cinfo->dest == NULL) {	/* first time for this JPEG object? */
 462              		.loc 1 206 3 view .LVU133
 197:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_dest_ptr dest;
 463              		.loc 1 197 1 is_stmt 0 view .LVU134
 464 0004 55       		pushq	%rbp
 465              		.cfi_def_cfa_offset 16
 466              		.cfi_offset 6, -16
 467 0005 4889F5   		movq	%rsi, %rbp
 468 0008 53       		pushq	%rbx
 469              		.cfi_def_cfa_offset 24
 470              		.cfi_offset 3, -24
 471 0009 4883EC08 		subq	$8, %rsp
 472              		.cfi_def_cfa_offset 32
 473              		.loc 1 206 12 view .LVU135
 474 000d 488B4728 		movq	40(%rdi), %rax
 475              		.loc 1 206 6 view .LVU136
 476 0011 4885C0   		testq	%rax, %rax
 477 0014 7432     		je	.L33
 478              	.LVL47:
 479              	.L31:
 207:fltk-1.3.4-1/jpeg/jdatadst.c ****     cinfo->dest = (struct jpeg_destination_mgr *)
 208:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
 209:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  SIZEOF(my_destination_mgr));
 210:fltk-1.3.4-1/jpeg/jdatadst.c ****   }
 211:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 212:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest = (my_dest_ptr) cinfo->dest;
 480              		.loc 1 212 3 is_stmt 1 view .LVU137
 213:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.init_destination = init_destination;
 481              		.loc 1 213 3 view .LVU138
 482              		.loc 1 213 30 is_stmt 0 view .LVU139
 483 0016 488D0D00 		leaq	init_destination(%rip), %rcx
 483      000000
 214:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.empty_output_buffer = empty_output_buffer;
 484              		.loc 1 214 33 view .LVU140
 485 001d 488D1500 		leaq	empty_output_buffer(%rip), %rdx
 485      000000
 215:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.term_destination = term_destination;
 216:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->outfile = outfile;
 486              		.loc 1 216 17 view .LVU141
 487 0024 48896828 		movq	%rbp, 40(%rax)
 488              	.LVL48:
 213:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.empty_output_buffer = empty_output_buffer;
 489              		.loc 1 213 30 view .LVU142
 490 0028 48894810 		movq	%rcx, 16(%rax)
 214:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.empty_output_buffer = empty_output_buffer;
 491              		.loc 1 214 3 is_stmt 1 view .LVU143
 215:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.term_destination = term_destination;
 492              		.loc 1 215 30 is_stmt 0 view .LVU144
 493 002c 488D0D00 		leaq	term_destination(%rip), %rcx
 493      000000
 214:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.empty_output_buffer = empty_output_buffer;
 494              		.loc 1 214 33 view .LVU145
 495 0033 48895018 		movq	%rdx, 24(%rax)
 215:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.term_destination = term_destination;
 496              		.loc 1 215 3 is_stmt 1 view .LVU146
 215:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.term_destination = term_destination;
 497              		.loc 1 215 30 is_stmt 0 view .LVU147
 498 0037 48894820 		movq	%rcx, 32(%rax)
 499              		.loc 1 216 3 is_stmt 1 view .LVU148
 217:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 500              		.loc 1 217 1 is_stmt 0 view .LVU149
 501 003b 4883C408 		addq	$8, %rsp
 502              		.cfi_remember_state
 503              		.cfi_def_cfa_offset 24
 504 003f 5B       		popq	%rbx
 505              		.cfi_def_cfa_offset 16
 506 0040 5D       		popq	%rbp
 507              		.cfi_def_cfa_offset 8
 508              	.LVL49:
 509              		.loc 1 217 1 view .LVU150
 510 0041 C3       		ret
 511              	.LVL50:
 512              		.p2align 4,,10
 513 0042 660F1F44 		.p2align 3
 513      0000
 514              	.L33:
 515              		.cfi_restore_state
 208:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  SIZEOF(my_destination_mgr));
 516              		.loc 1 208 8 view .LVU151
 517 0048 488B4708 		movq	8(%rdi), %rax
 518 004c 4889FB   		movq	%rdi, %rbx
 207:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
 519              		.loc 1 207 5 is_stmt 1 view .LVU152
 208:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  SIZEOF(my_destination_mgr));
 520              		.loc 1 208 8 is_stmt 0 view .LVU153
 521 004f BA380000 		movl	$56, %edx
 521      00
 522 0054 31F6     		xorl	%esi, %esi
 523              	.LVL51:
 208:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  SIZEOF(my_destination_mgr));
 524              		.loc 1 208 8 view .LVU154
 525 0056 FF10     		call	*(%rax)
 526              	.LVL52:
 207:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
 527              		.loc 1 207 17 view .LVU155
 528 0058 48894328 		movq	%rax, 40(%rbx)
 529 005c EBB8     		jmp	.L31
 530              		.cfi_endproc
 531              	.LFE57:
 533              		.section	.text.jpeg_mem_dest,"ax",@progbits
 534              		.p2align 4
 535              		.globl	jpeg_mem_dest
 537              	jpeg_mem_dest:
 538              	.LVL53:
 539              	.LFB58:
 218:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 219:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 220:fltk-1.3.4-1/jpeg/jdatadst.c **** /*
 221:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Prepare for output to a memory buffer.
 222:fltk-1.3.4-1/jpeg/jdatadst.c ****  * The caller may supply an own initial buffer with appropriate size.
 223:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Otherwise, or when the actual data output exceeds the given size,
 224:fltk-1.3.4-1/jpeg/jdatadst.c ****  * the library adapts the buffer size as necessary.
 225:fltk-1.3.4-1/jpeg/jdatadst.c ****  * The standard library functions malloc/free are used for allocating
 226:fltk-1.3.4-1/jpeg/jdatadst.c ****  * larger memory, so the buffer is available to the application after
 227:fltk-1.3.4-1/jpeg/jdatadst.c ****  * finishing compression, and then the application is responsible for
 228:fltk-1.3.4-1/jpeg/jdatadst.c ****  * freeing the requested memory.
 229:fltk-1.3.4-1/jpeg/jdatadst.c ****  * Note:  An initial buffer supplied by the caller is expected to be
 230:fltk-1.3.4-1/jpeg/jdatadst.c ****  * managed by the application.  The library does not free such buffer
 231:fltk-1.3.4-1/jpeg/jdatadst.c ****  * when allocating a larger buffer.
 232:fltk-1.3.4-1/jpeg/jdatadst.c ****  */
 233:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 234:fltk-1.3.4-1/jpeg/jdatadst.c **** GLOBAL(void)
 235:fltk-1.3.4-1/jpeg/jdatadst.c **** jpeg_mem_dest (j_compress_ptr cinfo,
 236:fltk-1.3.4-1/jpeg/jdatadst.c **** 	       unsigned char ** outbuffer, unsigned long * outsize)
 237:fltk-1.3.4-1/jpeg/jdatadst.c **** {
 540              		.loc 1 237 1 is_stmt 1 view -0
 541              		.cfi_startproc
 542              		.loc 1 237 1 is_stmt 0 view .LVU157
 543 0000 F30F1EFA 		endbr64
 238:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_mem_dest_ptr dest;
 544              		.loc 1 238 3 is_stmt 1 view .LVU158
 239:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 240:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (outbuffer == NULL || outsize == NULL)	/* sanity check */
 545              		.loc 1 240 3 view .LVU159
 237:fltk-1.3.4-1/jpeg/jdatadst.c ****   my_mem_dest_ptr dest;
 546              		.loc 1 237 1 is_stmt 0 view .LVU160
 547 0004 4155     		pushq	%r13
 548              		.cfi_def_cfa_offset 16
 549              		.cfi_offset 13, -16
 550 0006 4989FD   		movq	%rdi, %r13
 551 0009 4154     		pushq	%r12
 552              		.cfi_def_cfa_offset 24
 553              		.cfi_offset 12, -24
 554 000b 4989D4   		movq	%rdx, %r12
 555 000e 55       		pushq	%rbp
 556              		.cfi_def_cfa_offset 32
 557              		.cfi_offset 6, -32
 558 000f 4889F5   		movq	%rsi, %rbp
 559 0012 53       		pushq	%rbx
 560              		.cfi_def_cfa_offset 40
 561              		.cfi_offset 3, -40
 562 0013 4883EC08 		subq	$8, %rsp
 563              		.cfi_def_cfa_offset 48
 564              		.loc 1 240 6 view .LVU161
 565 0017 4885F6   		testq	%rsi, %rsi
 566 001a 0F84A000 		je	.L41
 566      0000
 567 0020 4885D2   		testq	%rdx, %rdx
 568 0023 0F849700 		je	.L41
 568      0000
 241:fltk-1.3.4-1/jpeg/jdatadst.c ****     ERREXIT(cinfo, JERR_BUFFER_SIZE);
 242:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 243:fltk-1.3.4-1/jpeg/jdatadst.c ****   /* The destination object is made permanent so that multiple JPEG images
 244:fltk-1.3.4-1/jpeg/jdatadst.c ****    * can be written to the same buffer without re-executing jpeg_mem_dest.
 245:fltk-1.3.4-1/jpeg/jdatadst.c ****    */
 246:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (cinfo->dest == NULL) {	/* first time for this JPEG object? */
 569              		.loc 1 246 3 is_stmt 1 view .LVU162
 570              		.loc 1 246 12 is_stmt 0 view .LVU163
 571 0029 498B5D28 		movq	40(%r13), %rbx
 572              		.loc 1 246 6 view .LVU164
 573 002d 4885DB   		testq	%rbx, %rbx
 574 0030 0F84AB00 		je	.L49
 574      0000
 575              	.LVL54:
 576              	.L37:
 247:fltk-1.3.4-1/jpeg/jdatadst.c ****     cinfo->dest = (struct jpeg_destination_mgr *)
 248:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
 249:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  SIZEOF(my_mem_destination_mgr));
 250:fltk-1.3.4-1/jpeg/jdatadst.c ****   }
 251:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 252:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest = (my_mem_dest_ptr) cinfo->dest;
 577              		.loc 1 252 3 is_stmt 1 view .LVU165
 253:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.init_destination = init_mem_destination;
 578              		.loc 1 253 3 view .LVU166
 579              		.loc 1 253 30 is_stmt 0 view .LVU167
 580 0036 488D0500 		leaq	init_mem_destination(%rip), %rax
 580      000000
 254:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.empty_output_buffer = empty_mem_output_buffer;
 255:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.term_destination = term_mem_destination;
 256:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->outbuffer = outbuffer;
 581              		.loc 1 256 19 view .LVU168
 582 003d 48896B28 		movq	%rbp, 40(%rbx)
 583              	.LVL55:
 253:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.init_destination = init_mem_destination;
 584              		.loc 1 253 30 view .LVU169
 585 0041 48894310 		movq	%rax, 16(%rbx)
 254:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.empty_output_buffer = empty_mem_output_buffer;
 586              		.loc 1 254 3 is_stmt 1 view .LVU170
 254:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.empty_output_buffer = empty_mem_output_buffer;
 587              		.loc 1 254 33 is_stmt 0 view .LVU171
 588 0045 488D0500 		leaq	empty_mem_output_buffer(%rip), %rax
 588      000000
 589 004c 48894318 		movq	%rax, 24(%rbx)
 255:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->outbuffer = outbuffer;
 590              		.loc 1 255 3 is_stmt 1 view .LVU172
 255:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->outbuffer = outbuffer;
 591              		.loc 1 255 30 is_stmt 0 view .LVU173
 592 0050 488D0500 		leaq	term_mem_destination(%rip), %rax
 592      000000
 593 0057 48894320 		movq	%rax, 32(%rbx)
 594              		.loc 1 256 3 is_stmt 1 view .LVU174
 257:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->outsize = outsize;
 595              		.loc 1 257 3 view .LVU175
 596              		.loc 1 257 17 is_stmt 0 view .LVU176
 597 005b 4C896330 		movq	%r12, 48(%rbx)
 258:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->newbuffer = NULL;
 598              		.loc 1 258 3 is_stmt 1 view .LVU177
 599              		.loc 1 258 19 is_stmt 0 view .LVU178
 600 005f 48C74338 		movq	$0, 56(%rbx)
 600      00000000 
 259:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 260:fltk-1.3.4-1/jpeg/jdatadst.c ****   if (*outbuffer == NULL || *outsize == 0) {
 601              		.loc 1 260 3 is_stmt 1 view .LVU179
 602              		.loc 1 260 7 is_stmt 0 view .LVU180
 603 0067 488B4500 		movq	0(%rbp), %rax
 604              		.loc 1 260 6 view .LVU181
 605 006b 4885C0   		testq	%rax, %rax
 606 006e 7407     		je	.L38
 607              		.loc 1 260 26 discriminator 1 view .LVU182
 608 0070 49833C24 		cmpq	$0, (%r12)
 608      00
 609 0075 7523     		jne	.L39
 610              	.L38:
 261:fltk-1.3.4-1/jpeg/jdatadst.c ****     /* Allocate initial buffer */
 262:fltk-1.3.4-1/jpeg/jdatadst.c ****     dest->newbuffer = *outbuffer = (unsigned char *) malloc(OUTPUT_BUF_SIZE);
 611              		.loc 1 262 5 is_stmt 1 view .LVU183
 612              		.loc 1 262 54 is_stmt 0 view .LVU184
 613 0077 BF001000 		movl	$4096, %edi
 613      00
 614 007c E8000000 		call	malloc@PLT
 614      00
 615              	.LVL56:
 616              		.loc 1 262 34 view .LVU185
 617 0081 48894500 		movq	%rax, 0(%rbp)
 618              		.loc 1 262 21 view .LVU186
 619 0085 48894338 		movq	%rax, 56(%rbx)
 263:fltk-1.3.4-1/jpeg/jdatadst.c ****     if (dest->newbuffer == NULL)
 620              		.loc 1 263 5 is_stmt 1 view .LVU187
 621              		.loc 1 263 8 is_stmt 0 view .LVU188
 622 0089 4885C0   		testq	%rax, %rax
 623 008c 746F     		je	.L50
 624              	.L40:
 264:fltk-1.3.4-1/jpeg/jdatadst.c ****       ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);
 265:fltk-1.3.4-1/jpeg/jdatadst.c ****     *outsize = OUTPUT_BUF_SIZE;
 625              		.loc 1 265 5 is_stmt 1 view .LVU189
 626              		.loc 1 265 14 is_stmt 0 view .LVU190
 627 008e 49C70424 		movq	$4096, (%r12)
 627      00100000 
 628 0096 488B4500 		movq	0(%rbp), %rax
 629              	.L39:
 266:fltk-1.3.4-1/jpeg/jdatadst.c ****   }
 267:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 268:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.next_output_byte = dest->buffer = *outbuffer;
 630              		.loc 1 268 3 is_stmt 1 view .LVU191
 631              		.loc 1 268 45 is_stmt 0 view .LVU192
 632 009a 48894340 		movq	%rax, 64(%rbx)
 633              		.loc 1 268 30 view .LVU193
 634 009e 488903   		movq	%rax, (%rbx)
 269:fltk-1.3.4-1/jpeg/jdatadst.c ****   dest->pub.free_in_buffer = dest->bufsize = *outsize;
 635              		.loc 1 269 3 is_stmt 1 view .LVU194
 636              		.loc 1 269 46 is_stmt 0 view .LVU195
 637 00a1 498B0424 		movq	(%r12), %rax
 638              		.loc 1 269 44 view .LVU196
 639 00a5 48894348 		movq	%rax, 72(%rbx)
 640              		.loc 1 269 28 view .LVU197
 641 00a9 48894308 		movq	%rax, 8(%rbx)
 270:fltk-1.3.4-1/jpeg/jdatadst.c **** }
 642              		.loc 1 270 1 view .LVU198
 643 00ad 4883C408 		addq	$8, %rsp
 644              		.cfi_remember_state
 645              		.cfi_def_cfa_offset 40
 646 00b1 5B       		popq	%rbx
 647              		.cfi_def_cfa_offset 32
 648 00b2 5D       		popq	%rbp
 649              		.cfi_def_cfa_offset 24
 650              	.LVL57:
 651              		.loc 1 270 1 view .LVU199
 652 00b3 415C     		popq	%r12
 653              		.cfi_def_cfa_offset 16
 654              	.LVL58:
 655              		.loc 1 270 1 view .LVU200
 656 00b5 415D     		popq	%r13
 657              		.cfi_def_cfa_offset 8
 658              	.LVL59:
 659              		.loc 1 270 1 view .LVU201
 660 00b7 C3       		ret
 661              	.LVL60:
 662 00b8 0F1F8400 		.p2align 4,,10
 662      00000000 
 663              		.p2align 3
 664              	.L41:
 665              		.cfi_restore_state
 241:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 666              		.loc 1 241 5 is_stmt 1 view .LVU202
 667 00c0 498B4500 		movq	0(%r13), %rax
 668 00c4 4C89EF   		movq	%r13, %rdi
 669              	.LVL61:
 241:fltk-1.3.4-1/jpeg/jdatadst.c **** 
 670              		.loc 1 241 5 is_stmt 0 view .LVU203
 671 00c7 C7402818 		movl	$24, 40(%rax)
 671      000000
 672 00ce 498B4500 		movq	0(%r13), %rax
 673 00d2 FF10     		call	*(%rax)
 674              	.LVL62:
 246:fltk-1.3.4-1/jpeg/jdatadst.c ****     cinfo->dest = (struct jpeg_destination_mgr *)
 675              		.loc 1 246 3 is_stmt 1 view .LVU204
 246:fltk-1.3.4-1/jpeg/jdatadst.c ****     cinfo->dest = (struct jpeg_destination_mgr *)
 676              		.loc 1 246 12 is_stmt 0 view .LVU205
 677 00d4 498B5D28 		movq	40(%r13), %rbx
 246:fltk-1.3.4-1/jpeg/jdatadst.c ****     cinfo->dest = (struct jpeg_destination_mgr *)
 678              		.loc 1 246 6 view .LVU206
 679 00d8 4885DB   		testq	%rbx, %rbx
 680 00db 0F8555FF 		jne	.L37
 680      FFFF
 681              	.L49:
 247:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
 682              		.loc 1 247 5 is_stmt 1 view .LVU207
 248:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  SIZEOF(my_mem_destination_mgr));
 683              		.loc 1 248 8 is_stmt 0 view .LVU208
 684 00e1 498B4508 		movq	8(%r13), %rax
 685 00e5 BA500000 		movl	$80, %edx
 685      00
 686 00ea 31F6     		xorl	%esi, %esi
 687 00ec 4C89EF   		movq	%r13, %rdi
 688 00ef FF10     		call	*(%rax)
 689              	.LVL63:
 247:fltk-1.3.4-1/jpeg/jdatadst.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_PERMANENT,
 690              		.loc 1 247 17 view .LVU209
 691 00f1 49894528 		movq	%rax, 40(%r13)
 248:fltk-1.3.4-1/jpeg/jdatadst.c **** 				  SIZEOF(my_mem_destination_mgr));
 692              		.loc 1 248 8 view .LVU210
 693 00f5 4889C3   		movq	%rax, %rbx
 694 00f8 E939FFFF 		jmp	.L37
 694      FF
 695              	.L50:
 264:fltk-1.3.4-1/jpeg/jdatadst.c ****     *outsize = OUTPUT_BUF_SIZE;
 696              		.loc 1 264 7 is_stmt 1 view .LVU211
 697 00fd 498B4500 		movq	0(%r13), %rax
 698 0101 4C89EF   		movq	%r13, %rdi
 699 0104 C7402838 		movl	$56, 40(%rax)
 699      000000
 700 010b 498B4500 		movq	0(%r13), %rax
 701 010f C7402C0A 		movl	$10, 44(%rax)
 701      000000
 702 0116 498B4500 		movq	0(%r13), %rax
 703 011a FF10     		call	*(%rax)
 704              	.LVL64:
 705 011c E96DFFFF 		jmp	.L40
 705      FF
 706              		.cfi_endproc
 707              	.LFE58:
 709              		.text
 710              	.Letext0:
 711              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 712              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 713              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 714              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 715              		.file 7 "/usr/include/stdio.h"
 716              		.file 8 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 717              		.file 9 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 718              		.file 10 "fltk-1.3.4-1/jpeg/jpeglib.h"
 719              		.file 11 "fltk-1.3.4-1/jpeg/jerror.h"
 720              		.file 12 "/usr/include/stdlib.h"
 721              		.file 13 "<built-in>"
 11781              		.section	.note.gnu.property,"a"
 11782              		.align 8
 11783 0000 04000000 		.long	 1f - 0f
 11784 0004 10000000 		.long	 4f - 1f
 11785 0008 05000000 		.long	 5
 11786              	0:
 11787 000c 474E5500 		.string	 "GNU"
 11788              	1:
 11789              		.align 8
 11790 0010 020000C0 		.long	 0xc0000002
 11791 0014 04000000 		.long	 3f - 2f
 11792              	2:
 11793 0018 03000000 		.long	 0x3
 11794              	3:
 11795 001c 00000000 		.align 8
 11796              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jdatadst.c
     /tmp/ccS9X3Tc.s:7      .text.init_destination:0000000000000000 init_destination
     /tmp/ccS9X3Tc.s:52     .text.init_mem_destination:0000000000000000 init_mem_destination
     /tmp/ccS9X3Tc.s:67     .text.term_mem_destination:0000000000000000 term_mem_destination
     /tmp/ccS9X3Tc.s:101    .text.empty_output_buffer:0000000000000000 empty_output_buffer
     /tmp/ccS9X3Tc.s:173    .text.empty_mem_output_buffer:0000000000000000 empty_mem_output_buffer
     /tmp/ccS9X3Tc.s:315    .text.term_destination:0000000000000000 term_destination
     /tmp/ccS9X3Tc.s:454    .text.jpeg_stdio_dest:0000000000000000 jpeg_stdio_dest
     /tmp/ccS9X3Tc.s:537    .text.jpeg_mem_dest:0000000000000000 jpeg_mem_dest
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.892d1896c42f78d6ec3a036162b3403e
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
fwrite
malloc
memcpy
free
fflush
ferror
