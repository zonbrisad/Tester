   1              		.file	"jmemnobs.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.jpeg_get_small,"ax",@progbits
   5              		.p2align 4
   6              		.globl	jpeg_get_small
   8              	jpeg_get_small:
   9              	.LVL0:
  10              	.LFB51:
  11              		.file 1 "fltk-1.3.4-1/jpeg/jmemnobs.c"
   1:fltk-1.3.4-1/jpeg/jmemnobs.c **** /*
   2:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * jmemnobs.c
   3:fltk-1.3.4-1/jpeg/jmemnobs.c ****  *
   4:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * Copyright (C) 1992-1996, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * This file is part of the Independent JPEG Group's software.
   6:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * For conditions of distribution and use, see the accompanying README file.
   7:fltk-1.3.4-1/jpeg/jmemnobs.c ****  *
   8:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * This file provides a really simple implementation of the system-
   9:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * dependent portion of the JPEG memory manager.  This implementation
  10:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * assumes that no backing-store files are needed: all required space
  11:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * can be obtained from malloc().
  12:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * This is very portable in the sense that it'll compile on almost anything,
  13:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * but you'd better have lots of main memory (or virtual memory) if you want
  14:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * to process big images.
  15:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * Note that the max_memory_to_use option is ignored by this implementation.
  16:fltk-1.3.4-1/jpeg/jmemnobs.c ****  */
  17:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  18:fltk-1.3.4-1/jpeg/jmemnobs.c **** #define JPEG_INTERNALS
  19:fltk-1.3.4-1/jpeg/jmemnobs.c **** #include "jinclude.h"
  20:fltk-1.3.4-1/jpeg/jmemnobs.c **** #include "jpeglib.h"
  21:fltk-1.3.4-1/jpeg/jmemnobs.c **** #include "jmemsys.h"		/* import the system-dependent declarations */
  22:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  23:fltk-1.3.4-1/jpeg/jmemnobs.c **** #ifndef HAVE_STDLIB_H		/* <stdlib.h> should declare malloc(),free() */
  24:fltk-1.3.4-1/jpeg/jmemnobs.c **** extern void * malloc JPP((size_t size));
  25:fltk-1.3.4-1/jpeg/jmemnobs.c **** extern void free JPP((void *ptr));
  26:fltk-1.3.4-1/jpeg/jmemnobs.c **** #endif
  27:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  28:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  29:fltk-1.3.4-1/jpeg/jmemnobs.c **** /*
  30:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * Memory allocation and freeing are controlled by the regular library
  31:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * routines malloc() and free().
  32:fltk-1.3.4-1/jpeg/jmemnobs.c ****  */
  33:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  34:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(void *)
  35:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_get_small (j_common_ptr cinfo, size_t sizeofobject)
  36:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
  12              		.loc 1 36 1 view -0
  13              		.cfi_startproc
  14              		.loc 1 36 1 is_stmt 0 view .LVU1
  15 0000 F30F1EFA 		endbr64
  37:fltk-1.3.4-1/jpeg/jmemnobs.c ****   return (void *) malloc(sizeofobject);
  16              		.loc 1 37 3 is_stmt 1 view .LVU2
  36:fltk-1.3.4-1/jpeg/jmemnobs.c ****   return (void *) malloc(sizeofobject);
  17              		.loc 1 36 1 is_stmt 0 view .LVU3
  18 0004 4889F7   		movq	%rsi, %rdi
  19              	.LVL1:
  20              		.loc 1 37 10 view .LVU4
  21 0007 E9000000 		jmp	malloc@PLT
  21      00
  22              	.LVL2:
  23              		.loc 1 37 10 view .LVU5
  24              		.cfi_endproc
  25              	.LFE51:
  27              		.section	.text.jpeg_free_small,"ax",@progbits
  28              		.p2align 4
  29              		.globl	jpeg_free_small
  31              	jpeg_free_small:
  32              	.LVL3:
  33              	.LFB52:
  38:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
  39:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  40:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(void)
  41:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_free_small (j_common_ptr cinfo, void * object, size_t sizeofobject)
  42:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
  34              		.loc 1 42 1 is_stmt 1 view -0
  35              		.cfi_startproc
  36              		.loc 1 42 1 is_stmt 0 view .LVU7
  37 0000 F30F1EFA 		endbr64
  43:fltk-1.3.4-1/jpeg/jmemnobs.c ****   free(object);
  38              		.loc 1 43 3 is_stmt 1 view .LVU8
  42:fltk-1.3.4-1/jpeg/jmemnobs.c ****   free(object);
  39              		.loc 1 42 1 is_stmt 0 view .LVU9
  40 0004 4889F7   		movq	%rsi, %rdi
  41              	.LVL4:
  42              		.loc 1 43 3 view .LVU10
  43 0007 E9000000 		jmp	free@PLT
  43      00
  44              	.LVL5:
  45              		.loc 1 43 3 view .LVU11
  46              		.cfi_endproc
  47              	.LFE52:
  49              		.section	.text.jpeg_get_large,"ax",@progbits
  50              		.p2align 4
  51              		.globl	jpeg_get_large
  53              	jpeg_get_large:
  54              	.LFB60:
  55              		.cfi_startproc
  56 0000 F30F1EFA 		endbr64
  57 0004 4889F7   		movq	%rsi, %rdi
  58 0007 E9000000 		jmp	malloc@PLT
  58      00
  59              		.cfi_endproc
  60              	.LFE60:
  62              		.section	.text.jpeg_free_large,"ax",@progbits
  63              		.p2align 4
  64              		.globl	jpeg_free_large
  66              	jpeg_free_large:
  67              	.LFB62:
  68              		.cfi_startproc
  69 0000 F30F1EFA 		endbr64
  70 0004 4889F7   		movq	%rsi, %rdi
  71 0007 E9000000 		jmp	free@PLT
  71      00
  72              		.cfi_endproc
  73              	.LFE62:
  75              		.section	.text.jpeg_mem_available,"ax",@progbits
  76              		.p2align 4
  77              		.globl	jpeg_mem_available
  79              	jpeg_mem_available:
  80              	.LVL6:
  81              	.LFB55:
  44:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
  45:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  46:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  47:fltk-1.3.4-1/jpeg/jmemnobs.c **** /*
  48:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * "Large" objects are treated the same as "small" ones.
  49:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * NB: although we include FAR keywords in the routine declarations,
  50:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * this file won't actually work in 80x86 small/medium model; at least,
  51:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * you probably won't be able to process useful-size images in only 64KB.
  52:fltk-1.3.4-1/jpeg/jmemnobs.c ****  */
  53:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  54:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(void FAR *)
  55:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_get_large (j_common_ptr cinfo, size_t sizeofobject)
  56:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
  57:fltk-1.3.4-1/jpeg/jmemnobs.c ****   return (void FAR *) malloc(sizeofobject);
  58:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
  59:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  60:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(void)
  61:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_free_large (j_common_ptr cinfo, void FAR * object, size_t sizeofobject)
  62:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
  63:fltk-1.3.4-1/jpeg/jmemnobs.c ****   free(object);
  64:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
  65:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  66:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  67:fltk-1.3.4-1/jpeg/jmemnobs.c **** /*
  68:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * This routine computes the total memory space available for allocation.
  69:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * Here we always say, "we got all you want bud!"
  70:fltk-1.3.4-1/jpeg/jmemnobs.c ****  */
  71:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  72:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(long)
  73:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_mem_available (j_common_ptr cinfo, long min_bytes_needed,
  74:fltk-1.3.4-1/jpeg/jmemnobs.c **** 		    long max_bytes_needed, long already_allocated)
  75:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
  82              		.loc 1 75 1 is_stmt 1 view -0
  83              		.cfi_startproc
  84              		.loc 1 75 1 is_stmt 0 view .LVU13
  85 0000 F30F1EFA 		endbr64
  76:fltk-1.3.4-1/jpeg/jmemnobs.c ****   return max_bytes_needed;
  86              		.loc 1 76 3 is_stmt 1 view .LVU14
  75:fltk-1.3.4-1/jpeg/jmemnobs.c ****   return max_bytes_needed;
  87              		.loc 1 75 1 is_stmt 0 view .LVU15
  88 0004 4889D0   		movq	%rdx, %rax
  77:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
  89              		.loc 1 77 1 view .LVU16
  90 0007 C3       		ret
  91              		.cfi_endproc
  92              	.LFE55:
  94              		.section	.text.jpeg_open_backing_store,"ax",@progbits
  95              		.p2align 4
  96              		.globl	jpeg_open_backing_store
  98              	jpeg_open_backing_store:
  99              	.LVL7:
 100              	.LFB56:
  78:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  79:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  80:fltk-1.3.4-1/jpeg/jmemnobs.c **** /*
  81:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * Backing store (temporary file) management.
  82:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * Since jpeg_mem_available always promised the moon,
  83:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * this should never be called and we can just error out.
  84:fltk-1.3.4-1/jpeg/jmemnobs.c ****  */
  85:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  86:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(void)
  87:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_open_backing_store (j_common_ptr cinfo, backing_store_ptr info,
  88:fltk-1.3.4-1/jpeg/jmemnobs.c **** 			 long total_bytes_needed)
  89:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
 101              		.loc 1 89 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		.loc 1 89 1 is_stmt 0 view .LVU18
 104 0000 F30F1EFA 		endbr64
  90:fltk-1.3.4-1/jpeg/jmemnobs.c ****   ERREXIT(cinfo, JERR_NO_BACKING_STORE);
 105              		.loc 1 90 3 is_stmt 1 view .LVU19
 106 0004 488B07   		movq	(%rdi), %rax
 107 0007 C7402833 		movl	$51, 40(%rax)
 107      000000
 108 000e 488B07   		movq	(%rdi), %rax
 109 0011 FF20     		jmp	*(%rax)
 110              	.LVL8:
 111              		.loc 1 90 3 is_stmt 0 view .LVU20
 112              		.cfi_endproc
 113              	.LFE56:
 115              		.section	.text.jpeg_mem_init,"ax",@progbits
 116              		.p2align 4
 117              		.globl	jpeg_mem_init
 119              	jpeg_mem_init:
 120              	.LVL9:
 121              	.LFB57:
  91:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
  92:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  93:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  94:fltk-1.3.4-1/jpeg/jmemnobs.c **** /*
  95:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * These routines take care of any system-dependent initialization and
  96:fltk-1.3.4-1/jpeg/jmemnobs.c ****  * cleanup required.  Here, there isn't any.
  97:fltk-1.3.4-1/jpeg/jmemnobs.c ****  */
  98:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
  99:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(long)
 100:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_mem_init (j_common_ptr cinfo)
 101:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
 122              		.loc 1 101 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		.loc 1 101 1 is_stmt 0 view .LVU22
 125 0000 F30F1EFA 		endbr64
 102:fltk-1.3.4-1/jpeg/jmemnobs.c ****   return 0;			/* just set max_memory_to_use to 0 */
 126              		.loc 1 102 3 is_stmt 1 view .LVU23
 103:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
 127              		.loc 1 103 1 is_stmt 0 view .LVU24
 128 0004 31C0     		xorl	%eax, %eax
 129 0006 C3       		ret
 130              		.cfi_endproc
 131              	.LFE57:
 133              		.section	.text.jpeg_mem_term,"ax",@progbits
 134              		.p2align 4
 135              		.globl	jpeg_mem_term
 137              	jpeg_mem_term:
 138              	.LVL10:
 139              	.LFB58:
 104:fltk-1.3.4-1/jpeg/jmemnobs.c **** 
 105:fltk-1.3.4-1/jpeg/jmemnobs.c **** GLOBAL(void)
 106:fltk-1.3.4-1/jpeg/jmemnobs.c **** jpeg_mem_term (j_common_ptr cinfo)
 107:fltk-1.3.4-1/jpeg/jmemnobs.c **** {
 140              		.loc 1 107 1 is_stmt 1 view -0
 141              		.cfi_startproc
 142              		.loc 1 107 1 is_stmt 0 view .LVU26
 143 0000 F30F1EFA 		endbr64
 108:fltk-1.3.4-1/jpeg/jmemnobs.c ****   /* no work */
 109:fltk-1.3.4-1/jpeg/jmemnobs.c **** }
 144              		.loc 1 109 1 is_stmt 1 view .LVU27
 145 0004 C3       		ret
 146              		.cfi_endproc
 147              	.LFE58:
 149              		.text
 150              	.Letext0:
 151              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 152              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 153              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 154              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 155              		.file 6 "/usr/include/stdio.h"
 156              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 157              		.file 8 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 158              		.file 9 "fltk-1.3.4-1/jpeg/jpeglib.h"
 159              		.file 10 "fltk-1.3.4-1/jpeg/jpegint.h"
 160              		.file 11 "fltk-1.3.4-1/jpeg/jerror.h"
 161              		.file 12 "fltk-1.3.4-1/jpeg/jmemsys.h"
 162              		.file 13 "/usr/include/stdlib.h"
 9194              		.section	.note.gnu.property,"a"
 9195              		.align 8
 9196 0000 04000000 		.long	 1f - 0f
 9197 0004 10000000 		.long	 4f - 1f
 9198 0008 05000000 		.long	 5
 9199              	0:
 9200 000c 474E5500 		.string	 "GNU"
 9201              	1:
 9202              		.align 8
 9203 0010 020000C0 		.long	 0xc0000002
 9204 0014 04000000 		.long	 3f - 2f
 9205              	2:
 9206 0018 03000000 		.long	 0x3
 9207              	3:
 9208 001c 00000000 		.align 8
 9209              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jmemnobs.c
     /tmp/ccgoWMV1.s:8      .text.jpeg_get_small:0000000000000000 jpeg_get_small
     /tmp/ccgoWMV1.s:31     .text.jpeg_free_small:0000000000000000 jpeg_free_small
     /tmp/ccgoWMV1.s:53     .text.jpeg_get_large:0000000000000000 jpeg_get_large
     /tmp/ccgoWMV1.s:66     .text.jpeg_free_large:0000000000000000 jpeg_free_large
     /tmp/ccgoWMV1.s:79     .text.jpeg_mem_available:0000000000000000 jpeg_mem_available
     /tmp/ccgoWMV1.s:98     .text.jpeg_open_backing_store:0000000000000000 jpeg_open_backing_store
     /tmp/ccgoWMV1.s:119    .text.jpeg_mem_init:0000000000000000 jpeg_mem_init
     /tmp/ccgoWMV1.s:137    .text.jpeg_mem_term:0000000000000000 jpeg_mem_term
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2
                           .group:0000000000000000 wm4.jmemsys.h.78.e8417de29834b6ee7fe4d9b9f74aec3c

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
malloc
free
