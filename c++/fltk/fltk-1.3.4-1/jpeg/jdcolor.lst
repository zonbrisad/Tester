   1              		.file	"jdcolor.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.build_ycc_rgb_table,"ax",@progbits
   5              		.p2align 4
   7              	build_ycc_rgb_table:
   8              	.LVL0:
   9              	.LFB51:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jdcolor.c"
   1:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
   2:fltk-1.3.4-1/jpeg/jdcolor.c ****  * jdcolor.c
   3:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
   4:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Copyright (C) 1991-1997, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Modified 2011-2013 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jdcolor.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jdcolor.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
   9:fltk-1.3.4-1/jpeg/jdcolor.c ****  * This file contains output colorspace conversion routines.
  10:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
  11:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  12:fltk-1.3.4-1/jpeg/jdcolor.c **** #define JPEG_INTERNALS
  13:fltk-1.3.4-1/jpeg/jdcolor.c **** #include "jinclude.h"
  14:fltk-1.3.4-1/jpeg/jdcolor.c **** #include "jpeglib.h"
  15:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  16:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  17:fltk-1.3.4-1/jpeg/jdcolor.c **** /* Private subobject */
  18:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  19:fltk-1.3.4-1/jpeg/jdcolor.c **** typedef struct {
  20:fltk-1.3.4-1/jpeg/jdcolor.c ****   struct jpeg_color_deconverter pub; /* public fields */
  21:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  22:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Private state for YCbCr->RGB and BG_YCC->RGB conversion */
  23:fltk-1.3.4-1/jpeg/jdcolor.c ****   int * Cr_r_tab;		/* => table for Cr to R conversion */
  24:fltk-1.3.4-1/jpeg/jdcolor.c ****   int * Cb_b_tab;		/* => table for Cb to B conversion */
  25:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 * Cr_g_tab;		/* => table for Cr to G conversion */
  26:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 * Cb_g_tab;		/* => table for Cb to G conversion */
  27:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  28:fltk-1.3.4-1/jpeg/jdcolor.c ****   JSAMPLE * range_limit; /* pointer to normal sample range limit table, */
  29:fltk-1.3.4-1/jpeg/jdcolor.c **** 		     /* or extended sample range limit table for BG_YCC */
  30:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  31:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Private state for RGB->Y conversion */
  32:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 * rgb_y_tab;		/* => table for RGB to Y conversion */
  33:fltk-1.3.4-1/jpeg/jdcolor.c **** } my_color_deconverter;
  34:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  35:fltk-1.3.4-1/jpeg/jdcolor.c **** typedef my_color_deconverter * my_cconvert_ptr;
  36:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  37:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  38:fltk-1.3.4-1/jpeg/jdcolor.c **** /***************  YCbCr -> RGB conversion: most common case **************/
  39:fltk-1.3.4-1/jpeg/jdcolor.c **** /*************** BG_YCC -> RGB conversion: less common case **************/
  40:fltk-1.3.4-1/jpeg/jdcolor.c **** /***************    RGB -> Y   conversion: less common case **************/
  41:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  42:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
  43:fltk-1.3.4-1/jpeg/jdcolor.c ****  * YCbCr is defined per Recommendation ITU-R BT.601-7 (03/2011),
  44:fltk-1.3.4-1/jpeg/jdcolor.c ****  * previously known as Recommendation CCIR 601-1, except that Cb and Cr
  45:fltk-1.3.4-1/jpeg/jdcolor.c ****  * are normalized to the range 0..MAXJSAMPLE rather than -0.5 .. 0.5.
  46:fltk-1.3.4-1/jpeg/jdcolor.c ****  * sRGB (standard RGB color space) is defined per IEC 61966-2-1:1999.
  47:fltk-1.3.4-1/jpeg/jdcolor.c ****  * sYCC (standard luma-chroma-chroma color space with extended gamut)
  48:fltk-1.3.4-1/jpeg/jdcolor.c ****  * is defined per IEC 61966-2-1:1999 Amendment A1:2003 Annex F.
  49:fltk-1.3.4-1/jpeg/jdcolor.c ****  * bg-sRGB and bg-sYCC (big gamut standard color spaces)
  50:fltk-1.3.4-1/jpeg/jdcolor.c ****  * are defined per IEC 61966-2-1:1999 Amendment A1:2003 Annex G.
  51:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Note that the derived conversion coefficients given in some of these
  52:fltk-1.3.4-1/jpeg/jdcolor.c ****  * documents are imprecise.  The general conversion equations are
  53:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  54:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	R = Y + K * (1 - Kr) * Cr
  55:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	G = Y - K * (Kb * (1 - Kb) * Cb + Kr * (1 - Kr) * Cr) / (1 - Kr - Kb)
  56:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	B = Y + K * (1 - Kb) * Cb
  57:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  58:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	Y = Kr * R + (1 - Kr - Kb) * G + Kb * B
  59:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  60:fltk-1.3.4-1/jpeg/jdcolor.c ****  * With Kr = 0.299 and Kb = 0.114 (derived according to SMPTE RP 177-1993
  61:fltk-1.3.4-1/jpeg/jdcolor.c ****  * from the 1953 FCC NTSC primaries and CIE Illuminant C), K = 2 for sYCC,
  62:fltk-1.3.4-1/jpeg/jdcolor.c ****  * the conversion equations to be implemented are therefore
  63:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  64:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	R = Y + 1.402 * Cr
  65:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	G = Y - 0.344136286 * Cb - 0.714136286 * Cr
  66:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	B = Y + 1.772 * Cb
  67:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  68:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	Y = 0.299 * R + 0.587 * G + 0.114 * B
  69:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  70:fltk-1.3.4-1/jpeg/jdcolor.c ****  * where Cb and Cr represent the incoming values less CENTERJSAMPLE.
  71:fltk-1.3.4-1/jpeg/jdcolor.c ****  * For bg-sYCC, with K = 4, the equations are
  72:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  73:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	R = Y + 2.804 * Cr
  74:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	G = Y - 0.688272572 * Cb - 1.428272572 * Cr
  75:fltk-1.3.4-1/jpeg/jdcolor.c ****  *	B = Y + 3.544 * Cb
  76:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  77:fltk-1.3.4-1/jpeg/jdcolor.c ****  * To avoid floating-point arithmetic, we represent the fractional constants
  78:fltk-1.3.4-1/jpeg/jdcolor.c ****  * as integers scaled up by 2^16 (about 4 digits precision); we have to divide
  79:fltk-1.3.4-1/jpeg/jdcolor.c ****  * the products by 2^16, with appropriate rounding, to get the correct answer.
  80:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Notice that Y, being an integral input, does not contribute any fraction
  81:fltk-1.3.4-1/jpeg/jdcolor.c ****  * so it need not participate in the rounding.
  82:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
  83:fltk-1.3.4-1/jpeg/jdcolor.c ****  * For even more speed, we avoid doing any multiplications in the inner loop
  84:fltk-1.3.4-1/jpeg/jdcolor.c ****  * by precalculating the constants times Cb and Cr for all possible values.
  85:fltk-1.3.4-1/jpeg/jdcolor.c ****  * For 8-bit JSAMPLEs this is very reasonable (only 256 entries per table);
  86:fltk-1.3.4-1/jpeg/jdcolor.c ****  * for 9-bit to 12-bit samples it is still acceptable.  It's not very
  87:fltk-1.3.4-1/jpeg/jdcolor.c ****  * reasonable for 16-bit samples, but if you want lossless storage you
  88:fltk-1.3.4-1/jpeg/jdcolor.c ****  * shouldn't be changing colorspace anyway.
  89:fltk-1.3.4-1/jpeg/jdcolor.c ****  * The Cr=>R and Cb=>B values can be rounded to integers in advance; the
  90:fltk-1.3.4-1/jpeg/jdcolor.c ****  * values for the G calculation are left scaled up, since we must add them
  91:fltk-1.3.4-1/jpeg/jdcolor.c ****  * together before rounding.
  92:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
  93:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  94:fltk-1.3.4-1/jpeg/jdcolor.c **** #define SCALEBITS	16	/* speediest right-shift on some machines */
  95:fltk-1.3.4-1/jpeg/jdcolor.c **** #define ONE_HALF	((INT32) 1 << (SCALEBITS-1))
  96:fltk-1.3.4-1/jpeg/jdcolor.c **** #define FIX(x)		((INT32) ((x) * (1L<<SCALEBITS) + 0.5))
  97:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  98:fltk-1.3.4-1/jpeg/jdcolor.c **** /* We allocate one big table for RGB->Y conversion and divide it up into
  99:fltk-1.3.4-1/jpeg/jdcolor.c ****  * three parts, instead of doing three alloc_small requests.  This lets us
 100:fltk-1.3.4-1/jpeg/jdcolor.c ****  * use a single table base address, which can be held in a register in the
 101:fltk-1.3.4-1/jpeg/jdcolor.c ****  * inner loops on many machines (more than can hold all three addresses,
 102:fltk-1.3.4-1/jpeg/jdcolor.c ****  * anyway).
 103:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 104:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 105:fltk-1.3.4-1/jpeg/jdcolor.c **** #define R_Y_OFF		0			/* offset to R => Y section */
 106:fltk-1.3.4-1/jpeg/jdcolor.c **** #define G_Y_OFF		(1*(MAXJSAMPLE+1))	/* offset to G => Y section */
 107:fltk-1.3.4-1/jpeg/jdcolor.c **** #define B_Y_OFF		(2*(MAXJSAMPLE+1))	/* etc. */
 108:fltk-1.3.4-1/jpeg/jdcolor.c **** #define TABLE_SIZE	(3*(MAXJSAMPLE+1))
 109:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 110:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 111:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 112:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Initialize tables for YCbCr->RGB and BG_YCC->RGB colorspace conversion.
 113:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 114:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 115:fltk-1.3.4-1/jpeg/jdcolor.c **** LOCAL(void)
 116:fltk-1.3.4-1/jpeg/jdcolor.c **** build_ycc_rgb_table (j_decompress_ptr cinfo)
 117:fltk-1.3.4-1/jpeg/jdcolor.c **** /* Normal case, sYCC */
 118:fltk-1.3.4-1/jpeg/jdcolor.c **** {
  11              		.loc 1 118 1 view -0
  12              		.cfi_startproc
 119:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
  13              		.loc 1 119 3 view .LVU1
 118:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
  14              		.loc 1 118 1 is_stmt 0 view .LVU2
  15 0000 55       		pushq	%rbp
  16              		.cfi_def_cfa_offset 16
  17              		.cfi_offset 6, -16
 120:fltk-1.3.4-1/jpeg/jdcolor.c ****   int i;
 121:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 x;
 122:fltk-1.3.4-1/jpeg/jdcolor.c ****   SHIFT_TEMPS
 123:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 124:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cr_r_tab = (int *)
 125:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  18              		.loc 1 125 6 view .LVU3
  19 0001 BA000400 		movl	$1024, %edx
  19      00
 118:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
  20              		.loc 1 118 1 view .LVU4
  21 0006 4889FD   		movq	%rdi, %rbp
  22              		.loc 1 125 6 view .LVU5
  23 0009 BE010000 		movl	$1, %esi
  23      00
 118:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
  24              		.loc 1 118 1 view .LVU6
  25 000e 53       		pushq	%rbx
  26              		.cfi_def_cfa_offset 24
  27              		.cfi_offset 3, -24
  28 000f 4883EC08 		subq	$8, %rsp
  29              		.cfi_def_cfa_offset 32
  30              		.loc 1 125 6 view .LVU7
  31 0013 488B4708 		movq	8(%rdi), %rax
 119:fltk-1.3.4-1/jpeg/jdcolor.c ****   int i;
  32              		.loc 1 119 19 view .LVU8
  33 0017 488B9F88 		movq	648(%rdi), %rbx
  33      020000
  34              	.LVL1:
 120:fltk-1.3.4-1/jpeg/jdcolor.c ****   int i;
  35              		.loc 1 120 3 is_stmt 1 view .LVU9
 121:fltk-1.3.4-1/jpeg/jdcolor.c ****   SHIFT_TEMPS
  36              		.loc 1 121 3 view .LVU10
 124:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  37              		.loc 1 124 3 view .LVU11
  38              		.loc 1 125 6 is_stmt 0 view .LVU12
  39 001e FF10     		call	*(%rax)
  40              	.LVL2:
 126:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 127:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cb_b_tab = (int *)
 128:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  41              		.loc 1 128 6 view .LVU13
  42 0020 BA000400 		movl	$1024, %edx
  42      00
  43 0025 BE010000 		movl	$1, %esi
  43      00
  44 002a 4889EF   		movq	%rbp, %rdi
 124:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  45              		.loc 1 124 22 view .LVU14
  46 002d 48894310 		movq	%rax, 16(%rbx)
 127:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  47              		.loc 1 127 3 is_stmt 1 view .LVU15
  48              		.loc 1 128 6 is_stmt 0 view .LVU16
  49 0031 488B4508 		movq	8(%rbp), %rax
  50 0035 FF10     		call	*(%rax)
  51              	.LVL3:
 129:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 130:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cr_g_tab = (INT32 *)
 131:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  52              		.loc 1 131 6 view .LVU17
  53 0037 BA000800 		movl	$2048, %edx
  53      00
  54 003c BE010000 		movl	$1, %esi
  54      00
  55 0041 4889EF   		movq	%rbp, %rdi
 127:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  56              		.loc 1 127 22 view .LVU18
  57 0044 48894318 		movq	%rax, 24(%rbx)
 130:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  58              		.loc 1 130 3 is_stmt 1 view .LVU19
  59              		.loc 1 131 6 is_stmt 0 view .LVU20
  60 0048 488B4508 		movq	8(%rbp), %rax
  61 004c FF10     		call	*(%rax)
  62              	.LVL4:
 132:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 133:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cb_g_tab = (INT32 *)
 134:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  63              		.loc 1 134 6 view .LVU21
  64 004e BA000800 		movl	$2048, %edx
  64      00
  65 0053 BE010000 		movl	$1, %esi
  65      00
  66 0058 4889EF   		movq	%rbp, %rdi
 130:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  67              		.loc 1 130 22 view .LVU22
  68 005b 48894320 		movq	%rax, 32(%rbx)
 133:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  69              		.loc 1 133 3 is_stmt 1 view .LVU23
  70              		.loc 1 134 6 is_stmt 0 view .LVU24
  71 005f 488B4508 		movq	8(%rbp), %rax
  72 0063 FF10     		call	*(%rax)
  73              	.LVL5:
 135:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 136:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 137:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->range_limit = cinfo->sample_range_limit;
  74              		.loc 1 137 25 view .LVU25
  75 0065 BF808C2C 		movl	$2919552, %edi
  75      00
  76 006a BE00695B 		movl	$5990656, %esi
  76      00
  77 006f 48C7C100 		movq	$-14831872, %rcx
  77      AF1DFF
 133:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  78              		.loc 1 133 22 view .LVU26
  79 0076 48894328 		movq	%rax, 40(%rbx)
  80              		.loc 1 137 3 is_stmt 1 view .LVU27
  81              		.loc 1 137 32 is_stmt 0 view .LVU28
  82 007a 488B85B8 		movq	440(%rbp), %rax
  82      010000
  83              		.loc 1 137 25 view .LVU29
  84 0081 48C7C280 		movq	$-11728000, %rdx
  84      0B4DFF
  85 0088 48894330 		movq	%rax, 48(%rbx)
 138:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 139:fltk-1.3.4-1/jpeg/jdcolor.c ****   for (i = 0, x = -CENTERJSAMPLE; i <= MAXJSAMPLE; i++, x++) {
  86              		.loc 1 139 3 is_stmt 1 view .LVU30
  87              	.LVL6:
  88              		.loc 1 139 35 view .LVU31
 137:fltk-1.3.4-1/jpeg/jdcolor.c **** 
  89              		.loc 1 137 25 is_stmt 0 view .LVU32
  90 008c 31C0     		xorl	%eax, %eax
  91              	.LVL7:
  92 008e 6690     		.p2align 4,,10
  93              		.p2align 3
  94              	.L2:
 140:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 141:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* The Cb or Cr value we are thinking of is x = i - CENTERJSAMPLE */
 142:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cr=>R value is nearest int to 1.402 * x */
 143:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cr_r_tab[i] = (int)
  95              		.loc 1 143 5 is_stmt 1 discriminator 3 view .LVU33
  96              		.loc 1 143 27 is_stmt 0 discriminator 3 view .LVU34
  97 0090 4C8B4310 		movq	16(%rbx), %r8
 144:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(1.402) * x + ONE_HALF, SCALEBITS);
  98              		.loc 1 144 7 discriminator 3 view .LVU35
  99 0094 4989D1   		movq	%rdx, %r9
 100 0097 4881C2E9 		addq	$91881, %rdx
 100      660100
 101 009e 49C1F910 		sarq	$16, %r9
 143:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(1.402) * x + ONE_HALF, SCALEBITS);
 102              		.loc 1 143 29 discriminator 3 view .LVU36
 103 00a2 45890C00 		movl	%r9d, (%r8,%rax)
 145:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cb=>B value is nearest int to 1.772 * x */
 146:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cb_b_tab[i] = (int)
 104              		.loc 1 146 5 is_stmt 1 discriminator 3 view .LVU37
 147:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(1.772) * x + ONE_HALF, SCALEBITS);
 105              		.loc 1 147 7 is_stmt 0 discriminator 3 view .LVU38
 106 00a6 4989C9   		movq	%rcx, %r9
 146:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(1.772) * x + ONE_HALF, SCALEBITS);
 107              		.loc 1 146 27 discriminator 3 view .LVU39
 108 00a9 4C8B4318 		movq	24(%rbx), %r8
 109 00ad 4881C1A2 		addq	$116130, %rcx
 109      C50100
 110              		.loc 1 147 7 discriminator 3 view .LVU40
 111 00b4 49C1F910 		sarq	$16, %r9
 146:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(1.772) * x + ONE_HALF, SCALEBITS);
 112              		.loc 1 146 29 discriminator 3 view .LVU41
 113 00b8 45890C00 		movl	%r9d, (%r8,%rax)
 148:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cr=>G value is scaled-up -0.714136286 * x */
 149:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cr_g_tab[i] = (- FIX(0.714136286)) * x;
 114              		.loc 1 149 5 is_stmt 1 discriminator 3 view .LVU42
 115              		.loc 1 149 27 is_stmt 0 discriminator 3 view .LVU43
 116 00bc 4C8B4320 		movq	32(%rbx), %r8
 117 00c0 49893440 		movq	%rsi, (%r8,%rax,2)
 150:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cb=>G value is scaled-up -0.344136286 * x */
 151:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* We also add in ONE_HALF so that need not do it in inner loop */
 152:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cb_g_tab[i] = (- FIX(0.344136286)) * x + ONE_HALF;
 118              		.loc 1 152 5 is_stmt 1 discriminator 3 view .LVU44
 119              		.loc 1 152 27 is_stmt 0 discriminator 3 view .LVU45
 120 00c4 4C8B4328 		movq	40(%rbx), %r8
 121 00c8 4881EED2 		subq	$46802, %rsi
 121      B60000
 122 00cf 49893C40 		movq	%rdi, (%r8,%rax,2)
 139:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 123              		.loc 1 139 52 is_stmt 1 discriminator 3 view .LVU46
 139:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 124              		.loc 1 139 35 discriminator 3 view .LVU47
 125 00d3 4883C004 		addq	$4, %rax
 126 00d7 4881EF19 		subq	$22553, %rdi
 126      580000
 139:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 127              		.loc 1 139 3 is_stmt 0 discriminator 3 view .LVU48
 128 00de 4881FA80 		cmpq	$11793536, %rdx
 128      F4B300
 129 00e5 75A9     		jne	.L2
 153:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 154:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 130              		.loc 1 154 1 view .LVU49
 131 00e7 4883C408 		addq	$8, %rsp
 132              		.cfi_def_cfa_offset 24
 133 00eb 5B       		popq	%rbx
 134              		.cfi_def_cfa_offset 16
 135              	.LVL8:
 136              		.loc 1 154 1 view .LVU50
 137 00ec 5D       		popq	%rbp
 138              		.cfi_def_cfa_offset 8
 139              	.LVL9:
 140              		.loc 1 154 1 view .LVU51
 141 00ed C3       		ret
 142              		.cfi_endproc
 143              	.LFE51:
 145              		.section	.text.ycc_rgb_convert,"ax",@progbits
 146              		.p2align 4
 148              	ycc_rgb_convert:
 149              	.LVL10:
 150              	.LFB53:
 155:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 156:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 157:fltk-1.3.4-1/jpeg/jdcolor.c **** LOCAL(void)
 158:fltk-1.3.4-1/jpeg/jdcolor.c **** build_bg_ycc_rgb_table (j_decompress_ptr cinfo)
 159:fltk-1.3.4-1/jpeg/jdcolor.c **** /* Wide gamut case, bg-sYCC */
 160:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 161:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 162:fltk-1.3.4-1/jpeg/jdcolor.c ****   int i;
 163:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 x;
 164:fltk-1.3.4-1/jpeg/jdcolor.c ****   SHIFT_TEMPS
 165:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 166:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cr_r_tab = (int *)
 167:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 168:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 169:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cb_b_tab = (int *)
 170:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 171:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 172:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cr_g_tab = (INT32 *)
 173:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 174:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 175:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->Cb_g_tab = (INT32 *)
 176:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 177:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 178:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 179:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->range_limit = (JSAMPLE *)
 180:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 181:fltk-1.3.4-1/jpeg/jdcolor.c **** 				5 * (MAXJSAMPLE+1) * SIZEOF(JSAMPLE));
 182:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 183:fltk-1.3.4-1/jpeg/jdcolor.c ****   for (i = 0, x = -CENTERJSAMPLE; i <= MAXJSAMPLE; i++, x++) {
 184:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 185:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* The Cb or Cr value we are thinking of is x = i - CENTERJSAMPLE */
 186:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cr=>R value is nearest int to 2.804 * x */
 187:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cr_r_tab[i] = (int)
 188:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(2.804) * x + ONE_HALF, SCALEBITS);
 189:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cb=>B value is nearest int to 3.544 * x */
 190:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cb_b_tab[i] = (int)
 191:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(3.544) * x + ONE_HALF, SCALEBITS);
 192:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cr=>G value is scaled-up -1.428272572 * x */
 193:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cr_g_tab[i] = (- FIX(1.428272572)) * x;
 194:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cb=>G value is scaled-up -0.688272572 * x */
 195:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* We also add in ONE_HALF so that need not do it in inner loop */
 196:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->Cb_g_tab[i] = (- FIX(0.688272572)) * x + ONE_HALF;
 197:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 198:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 199:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Cb and Cr portions can extend to double range in wide gamut case,
 200:fltk-1.3.4-1/jpeg/jdcolor.c ****    * so we prepare an appropriate extended range limit table.
 201:fltk-1.3.4-1/jpeg/jdcolor.c ****    */
 202:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 203:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* First segment of range limit table: limit[x] = 0 for x < 0 */
 204:fltk-1.3.4-1/jpeg/jdcolor.c ****   MEMZERO(cconvert->range_limit, 2 * (MAXJSAMPLE+1) * SIZEOF(JSAMPLE));
 205:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->range_limit += 2 * (MAXJSAMPLE+1);
 206:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Main part of range limit table: limit[x] = x */
 207:fltk-1.3.4-1/jpeg/jdcolor.c ****   for (i = 0; i <= MAXJSAMPLE; i++)
 208:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = (JSAMPLE) i;
 209:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* End of range limit table: limit[x] = MAXJSAMPLE for x > MAXJSAMPLE */
 210:fltk-1.3.4-1/jpeg/jdcolor.c ****   for (; i < 3 * (MAXJSAMPLE+1); i++)
 211:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = MAXJSAMPLE;
 212:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 213:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 214:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 215:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 216:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Convert some rows of samples to the output colorspace.
 217:fltk-1.3.4-1/jpeg/jdcolor.c ****  *
 218:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Note that we change from noninterleaved, one-plane-per-component format
 219:fltk-1.3.4-1/jpeg/jdcolor.c ****  * to interleaved-pixel format.  The output buffer is therefore three times
 220:fltk-1.3.4-1/jpeg/jdcolor.c ****  * as wide as the input buffer.
 221:fltk-1.3.4-1/jpeg/jdcolor.c ****  * A starting row offset is provided only for the input buffer.  The caller
 222:fltk-1.3.4-1/jpeg/jdcolor.c ****  * can easily adjust the passed output_buf value to accommodate any row
 223:fltk-1.3.4-1/jpeg/jdcolor.c ****  * offset required on that side.
 224:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 225:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 226:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 227:fltk-1.3.4-1/jpeg/jdcolor.c **** ycc_rgb_convert (j_decompress_ptr cinfo,
 228:fltk-1.3.4-1/jpeg/jdcolor.c **** 		 JSAMPIMAGE input_buf, JDIMENSION input_row,
 229:fltk-1.3.4-1/jpeg/jdcolor.c **** 		 JSAMPARRAY output_buf, int num_rows)
 230:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 151              		.loc 1 230 1 is_stmt 1 view -0
 152              		.cfi_startproc
 153              		.loc 1 230 1 is_stmt 0 view .LVU53
 154 0000 F30F1EFA 		endbr64
 155 0004 4157     		pushq	%r15
 156              		.cfi_def_cfa_offset 16
 157              		.cfi_offset 15, -16
 158 0006 4156     		pushq	%r14
 159              		.cfi_def_cfa_offset 24
 160              		.cfi_offset 14, -24
 161 0008 4155     		pushq	%r13
 162              		.cfi_def_cfa_offset 32
 163              		.cfi_offset 13, -32
 164 000a 4154     		pushq	%r12
 165              		.cfi_def_cfa_offset 40
 166              		.cfi_offset 12, -40
 167 000c 55       		pushq	%rbp
 168              		.cfi_def_cfa_offset 48
 169              		.cfi_offset 6, -48
 170 000d 53       		pushq	%rbx
 171              		.cfi_def_cfa_offset 56
 172              		.cfi_offset 3, -56
 231:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 173              		.loc 1 231 19 view .LVU54
 174 000e 488B8788 		movq	648(%rdi), %rax
 174      020000
 232:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int y, cb, cr;
 233:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 234:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 235:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 236:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 175              		.loc 1 236 14 view .LVU55
 176 0015 8B9F8800 		movl	136(%rdi), %ebx
 176      0000
 237:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* copy these pointers into registers if possible */
 238:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPLE * range_limit = cconvert->range_limit;
 177              		.loc 1 238 22 view .LVU56
 178 001b 4C8B4830 		movq	48(%rax), %r9
 239:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Crrtab = cconvert->Cr_r_tab;
 179              		.loc 1 239 18 view .LVU57
 180 001f 488B6810 		movq	16(%rax), %rbp
 230:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 181              		.loc 1 230 1 view .LVU58
 182 0023 48897424 		movq	%rsi, -16(%rsp)
 182      F0
 240:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Cbbtab = cconvert->Cb_b_tab;
 183              		.loc 1 240 18 view .LVU59
 184 0028 4C8B6018 		movq	24(%rax), %r12
 241:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Crgtab = cconvert->Cr_g_tab;
 185              		.loc 1 241 20 view .LVU60
 186 002c 4C8B6820 		movq	32(%rax), %r13
 242:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Cbgtab = cconvert->Cb_g_tab;
 187              		.loc 1 242 20 view .LVU61
 188 0030 4C8B7028 		movq	40(%rax), %r14
 230:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 189              		.loc 1 230 1 view .LVU62
 190 0034 895424E4 		movl	%edx, -28(%rsp)
 191 0038 48894C24 		movq	%rcx, -24(%rsp)
 191      E8
 231:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int y, cb, cr;
 192              		.loc 1 231 3 is_stmt 1 view .LVU63
 193              	.LVL11:
 232:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 194              		.loc 1 232 3 view .LVU64
 233:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 195              		.loc 1 233 3 view .LVU65
 234:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 196              		.loc 1 234 3 view .LVU66
 235:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 197              		.loc 1 235 3 view .LVU67
 236:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* copy these pointers into registers if possible */
 198              		.loc 1 236 3 view .LVU68
 236:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* copy these pointers into registers if possible */
 199              		.loc 1 236 14 is_stmt 0 view .LVU69
 200 003d 895C24F8 		movl	%ebx, -8(%rsp)
 201              	.LVL12:
 238:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Crrtab = cconvert->Cr_r_tab;
 202              		.loc 1 238 3 is_stmt 1 view .LVU70
 239:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Cbbtab = cconvert->Cb_b_tab;
 203              		.loc 1 239 3 view .LVU71
 240:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Crgtab = cconvert->Cr_g_tab;
 204              		.loc 1 240 3 view .LVU72
 241:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Cbgtab = cconvert->Cb_g_tab;
 205              		.loc 1 241 3 view .LVU73
 206              		.loc 1 242 3 view .LVU74
 243:fltk-1.3.4-1/jpeg/jdcolor.c ****   SHIFT_TEMPS
 244:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 245:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 207              		.loc 1 245 3 view .LVU75
 208              		.loc 1 245 9 view .LVU76
 209              		.loc 1 245 9 is_stmt 0 view .LVU77
 210 0041 4585C0   		testl	%r8d, %r8d
 211 0044 0F8EC400 		jle	.L6
 211      0000
 212 004a 4101D0   		addl	%edx, %r8d
 213              	.LVL13:
 214              		.loc 1 245 9 view .LVU78
 215 004d 448D7BFF 		leal	-1(%rbx), %r15d
 216 0051 44894424 		movl	%r8d, -4(%rsp)
 216      FC
 217              	.LVL14:
 218 0056 662E0F1F 		.p2align 4,,10
 218      84000000 
 218      0000
 219              		.p2align 3
 220              	.L10:
 246:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 221              		.loc 1 246 5 is_stmt 1 view .LVU79
 222              		.loc 1 246 12 is_stmt 0 view .LVU80
 223 0060 488B5C24 		movq	-16(%rsp), %rbx
 223      F0
 224              		.loc 1 246 26 view .LVU81
 225 0065 8B4424E4 		movl	-28(%rsp), %eax
 247:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 248:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 249:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 250:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 226              		.loc 1 250 25 view .LVU82
 227 0069 48834424 		addq	$8, -24(%rsp)
 227      E808
 228              	.LVL15:
 246:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 229              		.loc 1 246 12 view .LVU83
 230 006f 488B13   		movq	(%rbx), %rdx
 246:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 231              		.loc 1 246 26 view .LVU84
 232 0072 4889C1   		movq	%rax, %rcx
 249:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 233              		.loc 1 249 14 view .LVU85
 234 0075 83C101   		addl	$1, %ecx
 246:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 235              		.loc 1 246 12 view .LVU86
 236 0078 4C8B14C2 		movq	(%rdx,%rax,8), %r10
 237              	.LVL16:
 247:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 238              		.loc 1 247 5 is_stmt 1 view .LVU87
 247:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 239              		.loc 1 247 12 is_stmt 0 view .LVU88
 240 007c 488B5308 		movq	8(%rbx), %rdx
 249:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 241              		.loc 1 249 14 view .LVU89
 242 0080 894C24E4 		movl	%ecx, -28(%rsp)
 243              	.LVL17:
 247:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 244              		.loc 1 247 12 view .LVU90
 245 0084 4C8B1CC2 		movq	(%rdx,%rax,8), %r11
 246              	.LVL18:
 248:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 247              		.loc 1 248 5 is_stmt 1 view .LVU91
 248:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 248              		.loc 1 248 12 is_stmt 0 view .LVU92
 249 0088 488B5310 		movq	16(%rbx), %rdx
 250 008c 488B1CC2 		movq	(%rdx,%rax,8), %rbx
 251              	.LVL19:
 249:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 252              		.loc 1 249 5 is_stmt 1 view .LVU93
 253              		.loc 1 250 5 view .LVU94
 254              		.loc 1 250 25 is_stmt 0 view .LVU95
 255 0090 488B4424 		movq	-24(%rsp), %rax
 255      E8
 256              	.LVL20:
 257              		.loc 1 250 12 view .LVU96
 258 0095 488B48F8 		movq	-8(%rax), %rcx
 259              	.LVL21:
 251:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 260              		.loc 1 251 5 is_stmt 1 view .LVU97
 261              		.loc 1 251 19 view .LVU98
 262              		.loc 1 251 5 is_stmt 0 view .LVU99
 263 0099 8B4424F8 		movl	-8(%rsp), %eax
 264              	.LVL22:
 265              		.loc 1 251 5 view .LVU100
 266 009d 85C0     		testl	%eax, %eax
 267 009f 745F     		je	.L8
 268 00a1 31D2     		xorl	%edx, %edx
 269              	.LVL23:
 270              		.p2align 4,,10
 271 00a3 0F1F4400 		.p2align 3
 271      00
 272              	.L9:
 252:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 273              		.loc 1 252 7 is_stmt 1 discriminator 3 view .LVU101
 253:fltk-1.3.4-1/jpeg/jdcolor.c ****       cb = GETJSAMPLE(inptr1[col]);
 254:fltk-1.3.4-1/jpeg/jdcolor.c ****       cr = GETJSAMPLE(inptr2[col]);
 255:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Range-limiting is essential due to noise introduced by DCT losses,
 256:fltk-1.3.4-1/jpeg/jdcolor.c ****        * for extended gamut (sYCC) and wide gamut (bg-sYCC) encodings.
 257:fltk-1.3.4-1/jpeg/jdcolor.c ****        */
 258:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_RED]   = range_limit[y + Crrtab[cr]];
 274              		.loc 1 258 49 is_stmt 0 discriminator 3 view .LVU102
 275 00a8 440FB604 		movzbl	(%rbx,%rdx), %r8d
 275      13
 252:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 276              		.loc 1 252 10 discriminator 3 view .LVU103
 277 00ad 410FB634 		movzbl	(%r10,%rdx), %esi
 277      12
 278              	.LVL24:
 253:fltk-1.3.4-1/jpeg/jdcolor.c ****       cb = GETJSAMPLE(inptr1[col]);
 279              		.loc 1 253 7 is_stmt 1 discriminator 3 view .LVU104
 259:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = range_limit[y +
 260:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 261:fltk-1.3.4-1/jpeg/jdcolor.c **** 						 SCALEBITS))];
 262:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_BLUE]  = range_limit[y + Cbbtab[cb]];
 263:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 280              		.loc 1 263 14 is_stmt 0 discriminator 3 view .LVU105
 281 00b2 4883C103 		addq	$3, %rcx
 282              	.LVL25:
 253:fltk-1.3.4-1/jpeg/jdcolor.c ****       cb = GETJSAMPLE(inptr1[col]);
 283              		.loc 1 253 12 discriminator 3 view .LVU106
 284 00b6 410FB63C 		movzbl	(%r11,%rdx), %edi
 284      13
 285              	.LVL26:
 254:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Range-limiting is essential due to noise introduced by DCT losses,
 286              		.loc 1 254 7 is_stmt 1 discriminator 3 view .LVU107
 258:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = range_limit[y +
 287              		.loc 1 258 7 discriminator 3 view .LVU108
 258:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = range_limit[y +
 288              		.loc 1 258 41 is_stmt 0 discriminator 3 view .LVU109
 289 00bb 428B4485 		movl	0(%rbp,%r8,4), %eax
 289      00
 290 00c0 01F0     		addl	%esi, %eax
 291 00c2 4898     		cltq
 258:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = range_limit[y +
 292              		.loc 1 258 38 discriminator 3 view .LVU110
 293 00c4 410FB604 		movzbl	(%r9,%rax), %eax
 293      01
 258:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = range_limit[y +
 294              		.loc 1 258 25 discriminator 3 view .LVU111
 295 00c9 8841FD   		movb	%al, -3(%rcx)
 296              	.LVL27:
 259:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = range_limit[y +
 297              		.loc 1 259 7 is_stmt 1 discriminator 3 view .LVU112
 260:fltk-1.3.4-1/jpeg/jdcolor.c **** 						 SCALEBITS))];
 298              		.loc 1 260 17 is_stmt 0 discriminator 3 view .LVU113
 299 00cc 4B8B44C5 		movq	0(%r13,%r8,8), %rax
 299      00
 300 00d1 490304FE 		addq	(%r14,%rdi,8), %rax
 301 00d5 48C1F810 		sarq	$16, %rax
 259:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 302              		.loc 1 259 41 discriminator 3 view .LVU114
 303 00d9 01F0     		addl	%esi, %eax
 304 00db 4898     		cltq
 259:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 305              		.loc 1 259 38 discriminator 3 view .LVU115
 306 00dd 410FB604 		movzbl	(%r9,%rax), %eax
 306      01
 259:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 307              		.loc 1 259 25 discriminator 3 view .LVU116
 308 00e2 8841FE   		movb	%al, -2(%rcx)
 262:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 309              		.loc 1 262 7 is_stmt 1 discriminator 3 view .LVU117
 262:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 310              		.loc 1 262 41 is_stmt 0 discriminator 3 view .LVU118
 311 00e5 410334BC 		addl	(%r12,%rdi,4), %esi
 312              	.LVL28:
 262:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 313              		.loc 1 262 41 discriminator 3 view .LVU119
 314 00e9 4863F6   		movslq	%esi, %rsi
 262:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 315              		.loc 1 262 38 discriminator 3 view .LVU120
 316 00ec 410FB604 		movzbl	(%r9,%rsi), %eax
 316      31
 262:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 317              		.loc 1 262 25 discriminator 3 view .LVU121
 318 00f1 8841FF   		movb	%al, -1(%rcx)
 319              		.loc 1 263 7 is_stmt 1 discriminator 3 view .LVU122
 320              	.LVL29:
 251:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 321              		.loc 1 251 35 discriminator 3 view .LVU123
 251:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 322              		.loc 1 251 19 discriminator 3 view .LVU124
 323 00f4 4889D0   		movq	%rdx, %rax
 324 00f7 4883C201 		addq	$1, %rdx
 325              	.LVL30:
 251:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 326              		.loc 1 251 5 is_stmt 0 discriminator 3 view .LVU125
 327 00fb 4C39F8   		cmpq	%r15, %rax
 328 00fe 75A8     		jne	.L9
 329              	.LVL31:
 330              	.L8:
 245:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 331              		.loc 1 245 9 is_stmt 1 view .LVU126
 245:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 332              		.loc 1 245 9 is_stmt 0 view .LVU127
 333 0100 8B5C24FC 		movl	-4(%rsp), %ebx
 334              	.LVL32:
 245:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 335              		.loc 1 245 9 view .LVU128
 336 0104 395C24E4 		cmpl	%ebx, -28(%rsp)
 337 0108 0F8552FF 		jne	.L10
 337      FFFF
 338              	.LVL33:
 339              	.L6:
 264:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 265:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 266:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 340              		.loc 1 266 1 view .LVU129
 341 010e 5B       		popq	%rbx
 342              		.cfi_def_cfa_offset 48
 343 010f 5D       		popq	%rbp
 344              		.cfi_def_cfa_offset 40
 345              	.LVL34:
 346              		.loc 1 266 1 view .LVU130
 347 0110 415C     		popq	%r12
 348              		.cfi_def_cfa_offset 32
 349              	.LVL35:
 350              		.loc 1 266 1 view .LVU131
 351 0112 415D     		popq	%r13
 352              		.cfi_def_cfa_offset 24
 353              	.LVL36:
 354              		.loc 1 266 1 view .LVU132
 355 0114 415E     		popq	%r14
 356              		.cfi_def_cfa_offset 16
 357              	.LVL37:
 358              		.loc 1 266 1 view .LVU133
 359 0116 415F     		popq	%r15
 360              		.cfi_def_cfa_offset 8
 361 0118 C3       		ret
 362              		.cfi_endproc
 363              	.LFE53:
 365              		.section	.text.rgb_gray_convert,"ax",@progbits
 366              		.p2align 4
 368              	rgb_gray_convert:
 369              	.LVL38:
 370              	.LFB55:
 267:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 268:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 269:fltk-1.3.4-1/jpeg/jdcolor.c **** /**************** Cases other than YCC -> RGB ****************/
 270:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 271:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 272:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 273:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Initialize for RGB->grayscale colorspace conversion.
 274:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 275:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 276:fltk-1.3.4-1/jpeg/jdcolor.c **** LOCAL(void)
 277:fltk-1.3.4-1/jpeg/jdcolor.c **** build_rgb_y_table (j_decompress_ptr cinfo)
 278:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 279:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 280:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 * rgb_y_tab;
 281:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 i;
 282:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 283:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Allocate and fill in the conversion tables. */
 284:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->rgb_y_tab = rgb_y_tab = (INT32 *)
 285:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 286:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(TABLE_SIZE * SIZEOF(INT32)));
 287:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 288:fltk-1.3.4-1/jpeg/jdcolor.c ****   for (i = 0; i <= MAXJSAMPLE; i++) {
 289:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+R_Y_OFF] = FIX(0.299) * i;
 290:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+G_Y_OFF] = FIX(0.587) * i;
 291:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+B_Y_OFF] = FIX(0.114) * i + ONE_HALF;
 292:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 293:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 294:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 295:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 296:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 297:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Convert RGB to grayscale.
 298:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 299:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 300:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 301:fltk-1.3.4-1/jpeg/jdcolor.c **** rgb_gray_convert (j_decompress_ptr cinfo,
 302:fltk-1.3.4-1/jpeg/jdcolor.c **** 		  JSAMPIMAGE input_buf, JDIMENSION input_row,
 303:fltk-1.3.4-1/jpeg/jdcolor.c **** 		  JSAMPARRAY output_buf, int num_rows)
 304:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 371              		.loc 1 304 1 is_stmt 1 view -0
 372              		.cfi_startproc
 373              		.loc 1 304 1 is_stmt 0 view .LVU135
 374 0000 F30F1EFA 		endbr64
 305:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 375              		.loc 1 305 3 is_stmt 1 view .LVU136
 376              	.LVL39:
 306:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * ctab = cconvert->rgb_y_tab;
 377              		.loc 1 306 3 view .LVU137
 304:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 378              		.loc 1 304 1 is_stmt 0 view .LVU138
 379 0004 4156     		pushq	%r14
 380              		.cfi_def_cfa_offset 16
 381              		.cfi_offset 14, -16
 382              	.LVL40:
 304:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 383              		.loc 1 304 1 view .LVU139
 384 0006 4155     		pushq	%r13
 385              		.cfi_def_cfa_offset 24
 386              		.cfi_offset 13, -24
 387 0008 4154     		pushq	%r12
 388              		.cfi_def_cfa_offset 32
 389              		.cfi_offset 12, -32
 390 000a 55       		pushq	%rbp
 391              		.cfi_def_cfa_offset 40
 392              		.cfi_offset 6, -40
 393 000b 53       		pushq	%rbx
 394              		.cfi_def_cfa_offset 48
 395              		.cfi_offset 3, -48
 396              		.loc 1 306 20 view .LVU140
 397 000c 488B8788 		movq	648(%rdi), %rax
 397      020000
 307:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 308:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 309:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 310:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 311:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 398              		.loc 1 311 14 view .LVU141
 399 0013 448BAF88 		movl	136(%rdi), %r13d
 399      000000
 306:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 400              		.loc 1 306 20 view .LVU142
 401 001a 4C8B4838 		movq	56(%rax), %r9
 402              	.LVL41:
 307:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 403              		.loc 1 307 3 is_stmt 1 view .LVU143
 308:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 404              		.loc 1 308 3 view .LVU144
 309:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 405              		.loc 1 309 3 view .LVU145
 310:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 406              		.loc 1 310 3 view .LVU146
 407              		.loc 1 311 3 view .LVU147
 312:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 313:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 408              		.loc 1 313 3 view .LVU148
 409              		.loc 1 313 9 view .LVU149
 410              		.loc 1 313 9 is_stmt 0 view .LVU150
 411 001e 4585C0   		testl	%r8d, %r8d
 412 0021 0F8E8400 		jle	.L17
 412      0000
 413 0027 4889F3   		movq	%rsi, %rbx
 414 002a 4889CD   		movq	%rcx, %rbp
 415 002d 458D2410 		leal	(%r8,%rdx), %r12d
 416 0031 89D6     		movl	%edx, %esi
 417              	.LVL42:
 418              		.loc 1 313 9 view .LVU151
 419 0033 418D4DFF 		leal	-1(%r13), %ecx
 420              	.LVL43:
 421 0037 660F1F84 		.p2align 4,,10
 421      00000000 
 421      00
 422              		.p2align 3
 423              	.L21:
 314:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 424              		.loc 1 314 5 is_stmt 1 view .LVU152
 425              		.loc 1 314 12 is_stmt 0 view .LVU153
 426 0040 488B13   		movq	(%rbx), %rdx
 427              		.loc 1 314 26 view .LVU154
 428 0043 89F0     		movl	%esi, %eax
 315:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 316:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 317:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 318:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 429              		.loc 1 318 25 view .LVU155
 430 0045 4883C508 		addq	$8, %rbp
 431              	.LVL44:
 317:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 432              		.loc 1 317 14 view .LVU156
 433 0049 83C601   		addl	$1, %esi
 434              	.LVL45:
 314:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 435              		.loc 1 314 12 view .LVU157
 436 004c 4C8B04C2 		movq	(%rdx,%rax,8), %r8
 437              	.LVL46:
 315:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 438              		.loc 1 315 5 is_stmt 1 view .LVU158
 315:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 439              		.loc 1 315 12 is_stmt 0 view .LVU159
 440 0050 488B5308 		movq	8(%rbx), %rdx
 441 0054 4C8B14C2 		movq	(%rdx,%rax,8), %r10
 442              	.LVL47:
 316:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 443              		.loc 1 316 5 is_stmt 1 view .LVU160
 316:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 444              		.loc 1 316 12 is_stmt 0 view .LVU161
 445 0058 488B5310 		movq	16(%rbx), %rdx
 446 005c 4C8B1CC2 		movq	(%rdx,%rax,8), %r11
 447              	.LVL48:
 317:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 448              		.loc 1 317 5 is_stmt 1 view .LVU162
 449              		.loc 1 318 5 view .LVU163
 450              		.loc 1 318 12 is_stmt 0 view .LVU164
 451 0060 488B55F8 		movq	-8(%rbp), %rdx
 452              	.LVL49:
 319:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 453              		.loc 1 319 5 is_stmt 1 view .LVU165
 454              		.loc 1 319 19 view .LVU166
 455              		.loc 1 319 5 is_stmt 0 view .LVU167
 456 0064 4585ED   		testl	%r13d, %r13d
 457 0067 743D     		je	.L19
 458 0069 31FF     		xorl	%edi, %edi
 459              	.LVL50:
 460 006b 0F1F4400 		.p2align 4,,10
 460      00
 461              		.p2align 3
 462              	.L20:
 320:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 463              		.loc 1 320 7 is_stmt 1 discriminator 3 view .LVU168
 321:fltk-1.3.4-1/jpeg/jdcolor.c ****       g = GETJSAMPLE(inptr1[col]);
 464              		.loc 1 321 7 discriminator 3 view .LVU169
 322:fltk-1.3.4-1/jpeg/jdcolor.c ****       b = GETJSAMPLE(inptr2[col]);
 465              		.loc 1 322 7 discriminator 3 view .LVU170
 323:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Y */
 324:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[col] = (JSAMPLE)
 466              		.loc 1 324 7 discriminator 3 view .LVU171
 325:fltk-1.3.4-1/jpeg/jdcolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 467              		.loc 1 325 27 is_stmt 0 discriminator 3 view .LVU172
 468 0070 450FB634 		movzbl	(%r10,%rdi), %r14d
 468      3A
 469              		.loc 1 325 9 discriminator 3 view .LVU173
 470 0075 410FB604 		movzbl	(%r8,%rdi), %eax
 470      38
 471              		.loc 1 325 21 discriminator 3 view .LVU174
 472 007a 498B04C1 		movq	(%r9,%rax,8), %rax
 473 007e 4B0384F1 		addq	2048(%r9,%r14,8), %rax
 473      00080000 
 474              		.loc 1 325 45 discriminator 3 view .LVU175
 475 0086 450FB634 		movzbl	(%r11,%rdi), %r14d
 475      3B
 476              		.loc 1 325 39 discriminator 3 view .LVU176
 477 008b 4B0384F1 		addq	4096(%r9,%r14,8), %rax
 477      00100000 
 326:fltk-1.3.4-1/jpeg/jdcolor.c **** 		 >> SCALEBITS);
 478              		.loc 1 326 4 discriminator 3 view .LVU177
 479 0093 48C1F810 		sarq	$16, %rax
 324:fltk-1.3.4-1/jpeg/jdcolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 480              		.loc 1 324 21 discriminator 3 view .LVU178
 481 0097 88043A   		movb	%al, (%rdx,%rdi)
 482              	.LVL51:
 319:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 483              		.loc 1 319 35 is_stmt 1 discriminator 3 view .LVU179
 319:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 484              		.loc 1 319 19 discriminator 3 view .LVU180
 485 009a 4889F8   		movq	%rdi, %rax
 486 009d 4883C701 		addq	$1, %rdi
 487              	.LVL52:
 319:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 488              		.loc 1 319 5 is_stmt 0 discriminator 3 view .LVU181
 489 00a1 4839C8   		cmpq	%rcx, %rax
 490 00a4 75CA     		jne	.L20
 491              	.LVL53:
 492              	.L19:
 313:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 493              		.loc 1 313 9 is_stmt 1 view .LVU182
 313:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 494              		.loc 1 313 9 is_stmt 0 view .LVU183
 495 00a6 4439E6   		cmpl	%r12d, %esi
 496 00a9 7595     		jne	.L21
 497              	.LVL54:
 498              	.L17:
 327:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 328:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 329:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 499              		.loc 1 329 1 view .LVU184
 500 00ab 5B       		popq	%rbx
 501              		.cfi_def_cfa_offset 40
 502 00ac 5D       		popq	%rbp
 503              		.cfi_def_cfa_offset 32
 504 00ad 415C     		popq	%r12
 505              		.cfi_def_cfa_offset 24
 506 00af 415D     		popq	%r13
 507              		.cfi_def_cfa_offset 16
 508              	.LVL55:
 509              		.loc 1 329 1 view .LVU185
 510 00b1 415E     		popq	%r14
 511              		.cfi_def_cfa_offset 8
 512 00b3 C3       		ret
 513              		.cfi_endproc
 514              	.LFE55:
 516              		.section	.text.rgb1_rgb_convert,"ax",@progbits
 517              		.p2align 4
 519              	rgb1_rgb_convert:
 520              	.LVL56:
 521              	.LFB56:
 330:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 331:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 332:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 333:fltk-1.3.4-1/jpeg/jdcolor.c ****  * [R-G,G,B-G] to [R,G,B] conversion with modulo calculation
 334:fltk-1.3.4-1/jpeg/jdcolor.c ****  * (inverse color transform).
 335:fltk-1.3.4-1/jpeg/jdcolor.c ****  * This can be seen as an adaption of the general YCbCr->RGB
 336:fltk-1.3.4-1/jpeg/jdcolor.c ****  * conversion equation with Kr = Kb = 0, while replacing the
 337:fltk-1.3.4-1/jpeg/jdcolor.c ****  * normalization by modulo calculation.
 338:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 339:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 340:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 341:fltk-1.3.4-1/jpeg/jdcolor.c **** rgb1_rgb_convert (j_decompress_ptr cinfo,
 342:fltk-1.3.4-1/jpeg/jdcolor.c **** 		  JSAMPIMAGE input_buf, JDIMENSION input_row,
 343:fltk-1.3.4-1/jpeg/jdcolor.c **** 		  JSAMPARRAY output_buf, int num_rows)
 344:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 522              		.loc 1 344 1 is_stmt 1 view -0
 523              		.cfi_startproc
 524              		.loc 1 344 1 is_stmt 0 view .LVU187
 525 0000 F30F1EFA 		endbr64
 345:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 526              		.loc 1 345 3 is_stmt 1 view .LVU188
 346:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 527              		.loc 1 346 3 view .LVU189
 347:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 528              		.loc 1 347 3 view .LVU190
 348:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 529              		.loc 1 348 3 view .LVU191
 349:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 530              		.loc 1 349 3 view .LVU192
 344:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 531              		.loc 1 344 1 is_stmt 0 view .LVU193
 532 0004 4156     		pushq	%r14
 533              		.cfi_def_cfa_offset 16
 534              		.cfi_offset 14, -16
 535 0006 4155     		pushq	%r13
 536              		.cfi_def_cfa_offset 24
 537              		.cfi_offset 13, -24
 538 0008 4154     		pushq	%r12
 539              		.cfi_def_cfa_offset 32
 540              		.cfi_offset 12, -32
 541 000a 55       		pushq	%rbp
 542              		.cfi_def_cfa_offset 40
 543              		.cfi_offset 6, -40
 544 000b 53       		pushq	%rbx
 545              		.cfi_def_cfa_offset 48
 546              		.cfi_offset 3, -48
 547              		.loc 1 349 14 view .LVU194
 548 000c 448BAF88 		movl	136(%rdi), %r13d
 548      000000
 549              	.LVL57:
 350:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 351:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 550              		.loc 1 351 3 is_stmt 1 view .LVU195
 551              		.loc 1 351 9 view .LVU196
 552              		.loc 1 351 9 is_stmt 0 view .LVU197
 553 0013 4585C0   		testl	%r8d, %r8d
 554 0016 0F8E8000 		jle	.L28
 554      0000
 555 001c 4889F3   		movq	%rsi, %rbx
 556 001f 4889CD   		movq	%rcx, %rbp
 557 0022 458D2410 		leal	(%r8,%rdx), %r12d
 558 0026 89D6     		movl	%edx, %esi
 559              	.LVL58:
 560              		.loc 1 351 9 view .LVU198
 561 0028 418D4DFF 		leal	-1(%r13), %ecx
 562              	.LVL59:
 563 002c 0F1F4000 		.p2align 4,,10
 564              		.p2align 3
 565              	.L32:
 352:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 566              		.loc 1 352 5 is_stmt 1 view .LVU199
 567              		.loc 1 352 12 is_stmt 0 view .LVU200
 568 0030 488B13   		movq	(%rbx), %rdx
 569              		.loc 1 352 26 view .LVU201
 570 0033 89F0     		movl	%esi, %eax
 353:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 354:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 355:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 356:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 571              		.loc 1 356 25 view .LVU202
 572 0035 4883C508 		addq	$8, %rbp
 573              	.LVL60:
 355:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 574              		.loc 1 355 14 view .LVU203
 575 0039 83C601   		addl	$1, %esi
 576              	.LVL61:
 577              		.loc 1 356 12 view .LVU204
 578 003c 4C8B45F8 		movq	-8(%rbp), %r8
 352:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 579              		.loc 1 352 12 view .LVU205
 580 0040 4C8B14C2 		movq	(%rdx,%rax,8), %r10
 581              	.LVL62:
 353:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 582              		.loc 1 353 5 is_stmt 1 view .LVU206
 353:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 583              		.loc 1 353 12 is_stmt 0 view .LVU207
 584 0044 488B5308 		movq	8(%rbx), %rdx
 585 0048 4C8B1CC2 		movq	(%rdx,%rax,8), %r11
 586              	.LVL63:
 354:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 587              		.loc 1 354 5 is_stmt 1 view .LVU208
 354:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 588              		.loc 1 354 12 is_stmt 0 view .LVU209
 589 004c 488B5310 		movq	16(%rbx), %rdx
 590 0050 488B14C2 		movq	(%rdx,%rax,8), %rdx
 591              	.LVL64:
 355:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 592              		.loc 1 355 5 is_stmt 1 view .LVU210
 593              		.loc 1 356 5 view .LVU211
 357:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 594              		.loc 1 357 5 view .LVU212
 595              		.loc 1 357 19 view .LVU213
 596              		.loc 1 357 5 is_stmt 0 view .LVU214
 597 0054 4585ED   		testl	%r13d, %r13d
 598 0057 743E     		je	.L30
 599 0059 31C0     		xorl	%eax, %eax
 600              	.LVL65:
 601 005b 0F1F4400 		.p2align 4,,10
 601      00
 602              		.p2align 3
 603              	.L31:
 358:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 604              		.loc 1 358 7 is_stmt 1 discriminator 3 view .LVU215
 359:fltk-1.3.4-1/jpeg/jdcolor.c ****       g = GETJSAMPLE(inptr1[col]);
 605              		.loc 1 359 7 discriminator 3 view .LVU216
 606              		.loc 1 359 11 is_stmt 0 discriminator 3 view .LVU217
 607 0060 410FB63C 		movzbl	(%r11,%rax), %edi
 607      03
 608              	.LVL66:
 360:fltk-1.3.4-1/jpeg/jdcolor.c ****       b = GETJSAMPLE(inptr2[col]);
 609              		.loc 1 360 7 is_stmt 1 discriminator 3 view .LVU218
 610              		.loc 1 360 11 is_stmt 0 discriminator 3 view .LVU219
 611 0065 440FB634 		movzbl	(%rdx,%rax), %r14d
 611      02
 612              	.LVL67:
 361:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Assume that MAXJSAMPLE+1 is a power of 2, so that the MOD
 362:fltk-1.3.4-1/jpeg/jdcolor.c ****        * (modulo) operator is equivalent to the bitmask operator AND.
 363:fltk-1.3.4-1/jpeg/jdcolor.c ****        */
 364:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_RED]   = (JSAMPLE) ((r + g - CENTERJSAMPLE) & MAXJSAMPLE);
 613              		.loc 1 364 7 is_stmt 1 discriminator 3 view .LVU220
 365:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = (JSAMPLE) g;
 366:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_BLUE]  = (JSAMPLE) ((b + g - CENTERJSAMPLE) & MAXJSAMPLE);
 367:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 614              		.loc 1 367 14 is_stmt 0 discriminator 3 view .LVU221
 615 006a 4983C003 		addq	$3, %r8
 616              	.LVL68:
 364:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = (JSAMPLE) g;
 617              		.loc 1 364 41 discriminator 3 view .LVU222
 618 006e 450FB60C 		movzbl	(%r10,%rax), %r9d
 618      02
 365:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = (JSAMPLE) g;
 619              		.loc 1 365 25 discriminator 3 view .LVU223
 620 0073 418878FE 		movb	%dil, -2(%r8)
 621              	.LVL69:
 364:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = (JSAMPLE) g;
 622              		.loc 1 364 41 discriminator 3 view .LVU224
 623 0077 4101F9   		addl	%edi, %r9d
 624              	.LVL70:
 366:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 625              		.loc 1 366 45 discriminator 3 view .LVU225
 626 007a 428D7C37 		leal	-128(%rdi,%r14), %edi
 626      80
 627              	.LVL71:
 366:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 628              		.loc 1 366 45 discriminator 3 view .LVU226
 629 007f 418878FF 		movb	%dil, -1(%r8)
 364:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = (JSAMPLE) g;
 630              		.loc 1 364 45 discriminator 3 view .LVU227
 631 0083 4183C180 		addl	$-128, %r9d
 632 0087 4889C7   		movq	%rax, %rdi
 633 008a 4883C001 		addq	$1, %rax
 634              	.LVL72:
 364:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = (JSAMPLE) g;
 635              		.loc 1 364 45 discriminator 3 view .LVU228
 636 008e 458848FD 		movb	%r9b, -3(%r8)
 365:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = (JSAMPLE) g;
 637              		.loc 1 365 7 is_stmt 1 discriminator 3 view .LVU229
 366:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 638              		.loc 1 366 7 discriminator 3 view .LVU230
 639              		.loc 1 367 7 discriminator 3 view .LVU231
 640              	.LVL73:
 357:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 641              		.loc 1 357 35 discriminator 3 view .LVU232
 357:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 642              		.loc 1 357 19 discriminator 3 view .LVU233
 357:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 643              		.loc 1 357 5 is_stmt 0 discriminator 3 view .LVU234
 644 0092 4839CF   		cmpq	%rcx, %rdi
 645 0095 75C9     		jne	.L31
 646              	.LVL74:
 647              	.L30:
 351:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 648              		.loc 1 351 9 is_stmt 1 view .LVU235
 351:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 649              		.loc 1 351 9 is_stmt 0 view .LVU236
 650 0097 4439E6   		cmpl	%r12d, %esi
 651 009a 7594     		jne	.L32
 652              	.LVL75:
 653              	.L28:
 368:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 369:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 370:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 654              		.loc 1 370 1 view .LVU237
 655 009c 5B       		popq	%rbx
 656              		.cfi_def_cfa_offset 40
 657 009d 5D       		popq	%rbp
 658              		.cfi_def_cfa_offset 32
 659 009e 415C     		popq	%r12
 660              		.cfi_def_cfa_offset 24
 661 00a0 415D     		popq	%r13
 662              		.cfi_def_cfa_offset 16
 663              	.LVL76:
 664              		.loc 1 370 1 view .LVU238
 665 00a2 415E     		popq	%r14
 666              		.cfi_def_cfa_offset 8
 667 00a4 C3       		ret
 668              		.cfi_endproc
 669              	.LFE56:
 671              		.section	.text.rgb1_gray_convert,"ax",@progbits
 672              		.p2align 4
 674              	rgb1_gray_convert:
 675              	.LVL77:
 676              	.LFB57:
 371:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 372:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 373:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 374:fltk-1.3.4-1/jpeg/jdcolor.c ****  * [R-G,G,B-G] to grayscale conversion with modulo calculation
 375:fltk-1.3.4-1/jpeg/jdcolor.c ****  * (inverse color transform).
 376:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 377:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 378:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 379:fltk-1.3.4-1/jpeg/jdcolor.c **** rgb1_gray_convert (j_decompress_ptr cinfo,
 380:fltk-1.3.4-1/jpeg/jdcolor.c **** 		   JSAMPIMAGE input_buf, JDIMENSION input_row,
 381:fltk-1.3.4-1/jpeg/jdcolor.c **** 		   JSAMPARRAY output_buf, int num_rows)
 382:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 677              		.loc 1 382 1 is_stmt 1 view -0
 678              		.cfi_startproc
 679              		.loc 1 382 1 is_stmt 0 view .LVU240
 680 0000 F30F1EFA 		endbr64
 383:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 681              		.loc 1 383 3 is_stmt 1 view .LVU241
 682              	.LVL78:
 384:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * ctab = cconvert->rgb_y_tab;
 683              		.loc 1 384 3 view .LVU242
 382:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 684              		.loc 1 382 1 is_stmt 0 view .LVU243
 685 0004 4157     		pushq	%r15
 686              		.cfi_def_cfa_offset 16
 687              		.cfi_offset 15, -16
 688              	.LVL79:
 382:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 689              		.loc 1 382 1 view .LVU244
 690 0006 4156     		pushq	%r14
 691              		.cfi_def_cfa_offset 24
 692              		.cfi_offset 14, -24
 693 0008 4155     		pushq	%r13
 694              		.cfi_def_cfa_offset 32
 695              		.cfi_offset 13, -32
 696 000a 4154     		pushq	%r12
 697              		.cfi_def_cfa_offset 40
 698              		.cfi_offset 12, -40
 699 000c 55       		pushq	%rbp
 700              		.cfi_def_cfa_offset 48
 701              		.cfi_offset 6, -48
 702 000d 53       		pushq	%rbx
 703              		.cfi_def_cfa_offset 56
 704              		.cfi_offset 3, -56
 705              		.loc 1 384 20 view .LVU245
 706 000e 488B8788 		movq	648(%rdi), %rax
 706      020000
 385:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 386:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 387:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 388:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 389:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 707              		.loc 1 389 14 view .LVU246
 708 0015 448BBF88 		movl	136(%rdi), %r15d
 708      000000
 384:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 709              		.loc 1 384 20 view .LVU247
 710 001c 4C8B4838 		movq	56(%rax), %r9
 711              	.LVL80:
 385:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int r, g, b;
 712              		.loc 1 385 3 is_stmt 1 view .LVU248
 386:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 713              		.loc 1 386 3 view .LVU249
 387:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 714              		.loc 1 387 3 view .LVU250
 388:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 715              		.loc 1 388 3 view .LVU251
 716              		.loc 1 389 3 view .LVU252
 390:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 391:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 717              		.loc 1 391 3 view .LVU253
 718              		.loc 1 391 9 view .LVU254
 719              		.loc 1 391 9 is_stmt 0 view .LVU255
 720 0020 4585C0   		testl	%r8d, %r8d
 721 0023 0F8E9600 		jle	.L39
 721      0000
 722 0029 418D0410 		leal	(%r8,%rdx), %eax
 723 002d 4989F4   		movq	%rsi, %r12
 724 0030 4189D5   		movl	%edx, %r13d
 725 0033 4989CE   		movq	%rcx, %r14
 726 0036 894424FC 		movl	%eax, -4(%rsp)
 727 003a 418D6FFF 		leal	-1(%r15), %ebp
 728              	.LVL81:
 729 003e 6690     		.p2align 4,,10
 730              		.p2align 3
 731              	.L43:
 392:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 732              		.loc 1 392 5 is_stmt 1 view .LVU256
 733              		.loc 1 392 12 is_stmt 0 view .LVU257
 734 0040 498B1424 		movq	(%r12), %rdx
 735              		.loc 1 392 26 view .LVU258
 736 0044 4489E8   		movl	%r13d, %eax
 393:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 394:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 395:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 396:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 737              		.loc 1 396 25 view .LVU259
 738 0047 4983C608 		addq	$8, %r14
 739              	.LVL82:
 395:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 740              		.loc 1 395 14 view .LVU260
 741 004b 4183C501 		addl	$1, %r13d
 742              	.LVL83:
 743              		.loc 1 396 12 view .LVU261
 744 004f 498B5EF8 		movq	-8(%r14), %rbx
 392:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 745              		.loc 1 392 12 view .LVU262
 746 0053 4C8B04C2 		movq	(%rdx,%rax,8), %r8
 747              	.LVL84:
 393:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 748              		.loc 1 393 5 is_stmt 1 view .LVU263
 393:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 749              		.loc 1 393 12 is_stmt 0 view .LVU264
 750 0057 498B5424 		movq	8(%r12), %rdx
 750      08
 751 005c 4C8B14C2 		movq	(%rdx,%rax,8), %r10
 752              	.LVL85:
 394:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 753              		.loc 1 394 5 is_stmt 1 view .LVU265
 394:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 754              		.loc 1 394 12 is_stmt 0 view .LVU266
 755 0060 498B5424 		movq	16(%r12), %rdx
 755      10
 756 0065 4C8B1CC2 		movq	(%rdx,%rax,8), %r11
 757              	.LVL86:
 395:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 758              		.loc 1 395 5 is_stmt 1 view .LVU267
 759              		.loc 1 396 5 view .LVU268
 397:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 760              		.loc 1 397 5 view .LVU269
 761              		.loc 1 397 19 view .LVU270
 762              		.loc 1 397 5 is_stmt 0 view .LVU271
 763 0069 4585FF   		testl	%r15d, %r15d
 764 006c 744A     		je	.L41
 765 006e 31C0     		xorl	%eax, %eax
 766              	.LVL87:
 767              		.p2align 4,,10
 768              		.p2align 3
 769              	.L42:
 398:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 770              		.loc 1 398 7 is_stmt 1 discriminator 3 view .LVU272
 399:fltk-1.3.4-1/jpeg/jdcolor.c ****       g = GETJSAMPLE(inptr1[col]);
 771              		.loc 1 399 7 discriminator 3 view .LVU273
 772              		.loc 1 399 11 is_stmt 0 discriminator 3 view .LVU274
 773 0070 410FB60C 		movzbl	(%r10,%rax), %ecx
 773      02
 398:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 774              		.loc 1 398 9 discriminator 3 view .LVU275
 775 0075 410FB634 		movzbl	(%r8,%rax), %esi
 775      00
 776              	.LVL88:
 400:fltk-1.3.4-1/jpeg/jdcolor.c ****       b = GETJSAMPLE(inptr2[col]);
 777              		.loc 1 400 9 discriminator 3 view .LVU276
 778 007a 410FB63C 		movzbl	(%r11,%rax), %edi
 778      03
 399:fltk-1.3.4-1/jpeg/jdcolor.c ****       g = GETJSAMPLE(inptr1[col]);
 779              		.loc 1 399 11 discriminator 3 view .LVU277
 780 007f 4889CA   		movq	%rcx, %rdx
 781              	.LVL89:
 782              		.loc 1 400 7 is_stmt 1 discriminator 3 view .LVU278
 401:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Assume that MAXJSAMPLE+1 is a power of 2, so that the MOD
 402:fltk-1.3.4-1/jpeg/jdcolor.c ****        * (modulo) operator is equivalent to the bitmask operator AND.
 403:fltk-1.3.4-1/jpeg/jdcolor.c ****        */
 404:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = (r + g - CENTERJSAMPLE) & MAXJSAMPLE;
 783              		.loc 1 404 7 discriminator 3 view .LVU279
 784              		.loc 1 404 18 is_stmt 0 discriminator 3 view .LVU280
 785 0082 8D743180 		leal	-128(%rcx,%rsi), %esi
 786              	.LVL90:
 405:fltk-1.3.4-1/jpeg/jdcolor.c ****       b = (b + g - CENTERJSAMPLE) & MAXJSAMPLE;
 787              		.loc 1 405 7 is_stmt 1 discriminator 3 view .LVU281
 788              		.loc 1 405 18 is_stmt 0 discriminator 3 view .LVU282
 789 0086 8D4C3980 		leal	-128(%rcx,%rdi), %ecx
 790              	.LVL91:
 406:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Y */
 407:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[col] = (JSAMPLE)
 791              		.loc 1 407 7 is_stmt 1 discriminator 3 view .LVU283
 408:fltk-1.3.4-1/jpeg/jdcolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 792              		.loc 1 408 9 is_stmt 0 discriminator 3 view .LVU284
 793 008a 400FB6F6 		movzbl	%sil, %esi
 794              	.LVL92:
 795              		.loc 1 408 21 discriminator 3 view .LVU285
 796 008e 498B94D1 		movq	2048(%r9,%rdx,8), %rdx
 796      00080000 
 797              	.LVL93:
 798              		.loc 1 408 45 discriminator 3 view .LVU286
 799 0096 0FB6C9   		movzbl	%cl, %ecx
 800              	.LVL94:
 801              		.loc 1 408 21 discriminator 3 view .LVU287
 802 0099 490314F1 		addq	(%r9,%rsi,8), %rdx
 803              		.loc 1 408 39 discriminator 3 view .LVU288
 804 009d 490394C9 		addq	4096(%r9,%rcx,8), %rdx
 804      00100000 
 409:fltk-1.3.4-1/jpeg/jdcolor.c **** 		 >> SCALEBITS);
 805              		.loc 1 409 4 discriminator 3 view .LVU289
 806 00a5 48C1FA10 		sarq	$16, %rdx
 407:fltk-1.3.4-1/jpeg/jdcolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 807              		.loc 1 407 21 discriminator 3 view .LVU290
 808 00a9 881403   		movb	%dl, (%rbx,%rax)
 809              	.LVL95:
 397:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 810              		.loc 1 397 35 is_stmt 1 discriminator 3 view .LVU291
 397:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 811              		.loc 1 397 19 discriminator 3 view .LVU292
 812 00ac 4889C2   		movq	%rax, %rdx
 813 00af 4883C001 		addq	$1, %rax
 814              	.LVL96:
 397:fltk-1.3.4-1/jpeg/jdcolor.c ****       r = GETJSAMPLE(inptr0[col]);
 815              		.loc 1 397 5 is_stmt 0 discriminator 3 view .LVU293
 816 00b3 4839EA   		cmpq	%rbp, %rdx
 817 00b6 75B8     		jne	.L42
 818              	.L41:
 391:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 819              		.loc 1 391 9 is_stmt 1 view .LVU294
 391:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 820              		.loc 1 391 9 is_stmt 0 view .LVU295
 821 00b8 443B6C24 		cmpl	-4(%rsp), %r13d
 821      FC
 822 00bd 7581     		jne	.L43
 823              	.LVL97:
 824              	.L39:
 410:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 411:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 412:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 825              		.loc 1 412 1 view .LVU296
 826 00bf 5B       		popq	%rbx
 827              		.cfi_def_cfa_offset 48
 828 00c0 5D       		popq	%rbp
 829              		.cfi_def_cfa_offset 40
 830 00c1 415C     		popq	%r12
 831              		.cfi_def_cfa_offset 32
 832 00c3 415D     		popq	%r13
 833              		.cfi_def_cfa_offset 24
 834 00c5 415E     		popq	%r14
 835              		.cfi_def_cfa_offset 16
 836 00c7 415F     		popq	%r15
 837              		.cfi_def_cfa_offset 8
 838              	.LVL98:
 839              		.loc 1 412 1 view .LVU297
 840 00c9 C3       		ret
 841              		.cfi_endproc
 842              	.LFE57:
 844              		.section	.text.rgb_convert,"ax",@progbits
 845              		.p2align 4
 847              	rgb_convert:
 848              	.LVL99:
 849              	.LFB58:
 413:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 414:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 415:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 416:fltk-1.3.4-1/jpeg/jdcolor.c ****  * No colorspace change, but conversion from separate-planes
 417:fltk-1.3.4-1/jpeg/jdcolor.c ****  * to interleaved representation.
 418:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 419:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 420:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 421:fltk-1.3.4-1/jpeg/jdcolor.c **** rgb_convert (j_decompress_ptr cinfo,
 422:fltk-1.3.4-1/jpeg/jdcolor.c **** 	     JSAMPIMAGE input_buf, JDIMENSION input_row,
 423:fltk-1.3.4-1/jpeg/jdcolor.c **** 	     JSAMPARRAY output_buf, int num_rows)
 424:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 850              		.loc 1 424 1 is_stmt 1 view -0
 851              		.cfi_startproc
 852              		.loc 1 424 1 is_stmt 0 view .LVU299
 853 0000 F30F1EFA 		endbr64
 425:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 854              		.loc 1 425 3 is_stmt 1 view .LVU300
 426:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2;
 855              		.loc 1 426 3 view .LVU301
 427:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 856              		.loc 1 427 3 view .LVU302
 428:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 857              		.loc 1 428 3 view .LVU303
 424:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 858              		.loc 1 424 1 is_stmt 0 view .LVU304
 859 0004 4154     		pushq	%r12
 860              		.cfi_def_cfa_offset 16
 861              		.cfi_offset 12, -16
 862 0006 55       		pushq	%rbp
 863              		.cfi_def_cfa_offset 24
 864              		.cfi_offset 6, -24
 865 0007 53       		pushq	%rbx
 866              		.cfi_def_cfa_offset 32
 867              		.cfi_offset 3, -32
 868              		.loc 1 428 14 view .LVU305
 869 0008 448BA788 		movl	136(%rdi), %r12d
 869      000000
 870              	.LVL100:
 429:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 430:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 871              		.loc 1 430 3 is_stmt 1 view .LVU306
 872              		.loc 1 430 9 view .LVU307
 873              		.loc 1 430 9 is_stmt 0 view .LVU308
 874 000f 4585C0   		testl	%r8d, %r8d
 875 0012 7E73     		jle	.L50
 876 0014 4889F3   		movq	%rsi, %rbx
 877 0017 418D2C10 		leal	(%r8,%rdx), %ebp
 878 001b 89D6     		movl	%edx, %esi
 879              	.LVL101:
 880              		.loc 1 430 9 view .LVU309
 881 001d 418D5424 		leal	-1(%r12), %edx
 881      FF
 882              	.LVL102:
 883              		.p2align 4,,10
 884 0022 660F1F44 		.p2align 3
 884      0000
 885              	.L54:
 431:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 886              		.loc 1 431 5 is_stmt 1 view .LVU310
 887              		.loc 1 431 12 is_stmt 0 view .LVU311
 888 0028 488B3B   		movq	(%rbx), %rdi
 889              		.loc 1 431 26 view .LVU312
 890 002b 89F0     		movl	%esi, %eax
 432:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 433:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 434:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 435:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 891              		.loc 1 435 25 view .LVU313
 892 002d 4883C108 		addq	$8, %rcx
 893              	.LVL103:
 434:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 894              		.loc 1 434 14 view .LVU314
 895 0031 83C601   		addl	$1, %esi
 896              	.LVL104:
 431:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 897              		.loc 1 431 12 view .LVU315
 898 0034 4C8B0CC7 		movq	(%rdi,%rax,8), %r9
 899              	.LVL105:
 432:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 900              		.loc 1 432 5 is_stmt 1 view .LVU316
 432:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 901              		.loc 1 432 12 is_stmt 0 view .LVU317
 902 0038 488B7B08 		movq	8(%rbx), %rdi
 903 003c 4C8B14C7 		movq	(%rdi,%rax,8), %r10
 904              	.LVL106:
 433:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 905              		.loc 1 433 5 is_stmt 1 view .LVU318
 433:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 906              		.loc 1 433 12 is_stmt 0 view .LVU319
 907 0040 488B7B10 		movq	16(%rbx), %rdi
 908 0044 4C8B1CC7 		movq	(%rdi,%rax,8), %r11
 909              	.LVL107:
 434:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 910              		.loc 1 434 5 is_stmt 1 view .LVU320
 911              		.loc 1 435 5 view .LVU321
 912              		.loc 1 435 12 is_stmt 0 view .LVU322
 913 0048 488B79F8 		movq	-8(%rcx), %rdi
 914              	.LVL108:
 436:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 915              		.loc 1 436 5 is_stmt 1 view .LVU323
 916              		.loc 1 436 19 view .LVU324
 917              		.loc 1 436 5 is_stmt 0 view .LVU325
 918 004c 4585E4   		testl	%r12d, %r12d
 919 004f 7432     		je	.L52
 920 0051 31C0     		xorl	%eax, %eax
 921              	.LVL109:
 922              		.p2align 4,,10
 923 0053 0F1F4400 		.p2align 3
 923      00
 924              	.L53:
 437:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 438:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_RED]   = inptr0[col];
 925              		.loc 1 438 7 is_stmt 1 discriminator 3 view .LVU326
 926              		.loc 1 438 33 is_stmt 0 discriminator 3 view .LVU327
 927 0058 450FB604 		movzbl	(%r9,%rax), %r8d
 927      01
 439:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = inptr1[col];
 440:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_BLUE]  = inptr2[col];
 441:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 928              		.loc 1 441 14 discriminator 3 view .LVU328
 929 005d 4883C703 		addq	$3, %rdi
 930              	.LVL110:
 438:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = inptr1[col];
 931              		.loc 1 438 25 discriminator 3 view .LVU329
 932 0061 448847FD 		movb	%r8b, -3(%rdi)
 439:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = inptr1[col];
 933              		.loc 1 439 7 is_stmt 1 discriminator 3 view .LVU330
 439:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = inptr1[col];
 934              		.loc 1 439 33 is_stmt 0 discriminator 3 view .LVU331
 935 0065 450FB604 		movzbl	(%r10,%rax), %r8d
 935      02
 439:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_GREEN] = inptr1[col];
 936              		.loc 1 439 25 discriminator 3 view .LVU332
 937 006a 448847FE 		movb	%r8b, -2(%rdi)
 440:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 938              		.loc 1 440 7 is_stmt 1 discriminator 3 view .LVU333
 440:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 939              		.loc 1 440 33 is_stmt 0 discriminator 3 view .LVU334
 940 006e 450FB604 		movzbl	(%r11,%rax), %r8d
 940      03
 440:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 941              		.loc 1 440 25 discriminator 3 view .LVU335
 942 0073 448847FF 		movb	%r8b, -1(%rdi)
 943              		.loc 1 441 7 is_stmt 1 discriminator 3 view .LVU336
 944              	.LVL111:
 436:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 945              		.loc 1 436 35 discriminator 3 view .LVU337
 436:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 946              		.loc 1 436 19 discriminator 3 view .LVU338
 947 0077 4989C0   		movq	%rax, %r8
 948 007a 4883C001 		addq	$1, %rax
 949              	.LVL112:
 436:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 950              		.loc 1 436 5 is_stmt 0 discriminator 3 view .LVU339
 951 007e 4939D0   		cmpq	%rdx, %r8
 952 0081 75D5     		jne	.L53
 953              	.L52:
 430:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 954              		.loc 1 430 9 is_stmt 1 view .LVU340
 430:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 955              		.loc 1 430 9 is_stmt 0 view .LVU341
 956 0083 39EE     		cmpl	%ebp, %esi
 957 0085 75A1     		jne	.L54
 958              	.LVL113:
 959              	.L50:
 442:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 443:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 444:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 960              		.loc 1 444 1 view .LVU342
 961 0087 5B       		popq	%rbx
 962              		.cfi_def_cfa_offset 24
 963 0088 5D       		popq	%rbp
 964              		.cfi_def_cfa_offset 16
 965 0089 415C     		popq	%r12
 966              		.cfi_def_cfa_offset 8
 967              	.LVL114:
 968              		.loc 1 444 1 view .LVU343
 969 008b C3       		ret
 970              		.cfi_endproc
 971              	.LFE58:
 973              		.section	.text.null_convert,"ax",@progbits
 974              		.p2align 4
 976              	null_convert:
 977              	.LVL115:
 978              	.LFB59:
 445:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 446:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 447:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 448:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Color conversion for no colorspace change: just copy the data,
 449:fltk-1.3.4-1/jpeg/jdcolor.c ****  * converting from separate-planes to interleaved representation.
 450:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 451:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 452:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 453:fltk-1.3.4-1/jpeg/jdcolor.c **** null_convert (j_decompress_ptr cinfo,
 454:fltk-1.3.4-1/jpeg/jdcolor.c **** 	      JSAMPIMAGE input_buf, JDIMENSION input_row,
 455:fltk-1.3.4-1/jpeg/jdcolor.c **** 	      JSAMPARRAY output_buf, int num_rows)
 456:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 979              		.loc 1 456 1 is_stmt 1 view -0
 980              		.cfi_startproc
 981              		.loc 1 456 1 is_stmt 0 view .LVU345
 982 0000 F30F1EFA 		endbr64
 457:fltk-1.3.4-1/jpeg/jdcolor.c ****   int ci;
 983              		.loc 1 457 3 is_stmt 1 view .LVU346
 458:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int nc = cinfo->num_components;
 984              		.loc 1 458 3 view .LVU347
 456:fltk-1.3.4-1/jpeg/jdcolor.c ****   int ci;
 985              		.loc 1 456 1 is_stmt 0 view .LVU348
 986 0004 4157     		pushq	%r15
 987              		.cfi_def_cfa_offset 16
 988              		.cfi_offset 15, -16
 989 0006 4156     		pushq	%r14
 990              		.cfi_def_cfa_offset 24
 991              		.cfi_offset 14, -24
 992 0008 4155     		pushq	%r13
 993              		.cfi_def_cfa_offset 32
 994              		.cfi_offset 13, -32
 995 000a 4154     		pushq	%r12
 996              		.cfi_def_cfa_offset 40
 997              		.cfi_offset 12, -40
 998 000c 55       		pushq	%rbp
 999              		.cfi_def_cfa_offset 48
 1000              		.cfi_offset 6, -48
 1001 000d 53       		pushq	%rbx
 1002              		.cfi_def_cfa_offset 56
 1003              		.cfi_offset 3, -56
 1004              		.loc 1 458 16 view .LVU349
 1005 000e 448B7F38 		movl	56(%rdi), %r15d
 1006              	.LVL116:
 459:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 1007              		.loc 1 459 3 is_stmt 1 view .LVU350
 460:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr;
 1008              		.loc 1 460 3 view .LVU351
 461:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 1009              		.loc 1 461 3 view .LVU352
 462:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 1010              		.loc 1 462 3 view .LVU353
 1011              		.loc 1 462 14 is_stmt 0 view .LVU354
 1012 0012 8BAF8800 		movl	136(%rdi), %ebp
 1012      0000
 1013              	.LVL117:
 463:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 464:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 1014              		.loc 1 464 3 is_stmt 1 view .LVU355
 1015              		.loc 1 464 9 view .LVU356
 1016              		.loc 1 464 9 is_stmt 0 view .LVU357
 1017 0018 4585C0   		testl	%r8d, %r8d
 1018 001b 0F8E7C00 		jle	.L61
 1018      0000
 1019 0021 4589C6   		movl	%r8d, %r14d
 1020 0024 448D5DFF 		leal	-1(%rbp), %r11d
 1021 0028 4889F3   		movq	%rsi, %rbx
 1022 002b 4189D5   		movl	%edx, %r13d
 1023 002e 4989CA   		movq	%rcx, %r10
 1024 0031 4101D6   		addl	%edx, %r14d
 1025 0034 458D67FF 		leal	-1(%r15), %r12d
 1026 0038 4963FF   		movslq	%r15d, %rdi
 1027              	.LVL118:
 1028              		.loc 1 464 9 view .LVU358
 1029 003b 4983C301 		addq	$1, %r11
 1030              	.LVL119:
 1031 003f 90       		.p2align 4,,10
 1032              		.p2align 3
 1033              	.L63:
 465:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (ci = 0; ci < nc; ci++) {
 1034              		.loc 1 465 18 is_stmt 1 view .LVU359
 466:fltk-1.3.4-1/jpeg/jdcolor.c ****       inptr = input_buf[ci][input_row];
 1035              		.loc 1 466 28 is_stmt 0 view .LVU360
 1036 0040 4589E9   		movl	%r13d, %r9d
 1037 0043 4531C0   		xorl	%r8d, %r8d
 1038 0046 49C1E103 		salq	$3, %r9
 465:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (ci = 0; ci < nc; ci++) {
 1039              		.loc 1 465 5 view .LVU361
 1040 004a 4585FF   		testl	%r15d, %r15d
 1041 004d 7E41     		jle	.L66
 1042              	.LVL120:
 1043 004f 90       		.p2align 4,,10
 1044              		.p2align 3
 1045              	.L65:
 1046              		.loc 1 466 7 is_stmt 1 view .LVU362
 1047              		.loc 1 466 13 is_stmt 0 view .LVU363
 1048 0050 4A8B04C3 		movq	(%rbx,%r8,8), %rax
 467:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr = output_buf[0] + ci;
 1049              		.loc 1 467 14 view .LVU364
 1050 0054 498B12   		movq	(%r10), %rdx
 466:fltk-1.3.4-1/jpeg/jdcolor.c ****       inptr = input_buf[ci][input_row];
 1051              		.loc 1 466 13 view .LVU365
 1052 0057 4A8B0408 		movq	(%rax,%r9), %rax
 1053              	.LVL121:
 1054              		.loc 1 467 7 is_stmt 1 view .LVU366
 1055              		.loc 1 467 14 is_stmt 0 view .LVU367
 1056 005b 4C01C2   		addq	%r8, %rdx
 1057              	.LVL122:
 468:fltk-1.3.4-1/jpeg/jdcolor.c ****       for (col = 0; col < num_cols; col++) {
 1058              		.loc 1 468 7 is_stmt 1 view .LVU368
 1059              		.loc 1 468 21 view .LVU369
 1060 005e 4A8D3418 		leaq	(%rax,%r11), %rsi
 1061              		.loc 1 468 7 is_stmt 0 view .LVU370
 1062 0062 85ED     		testl	%ebp, %ebp
 1063 0064 741B     		je	.L68
 1064 0066 662E0F1F 		.p2align 4,,10
 1064      84000000 
 1064      0000
 1065              		.p2align 3
 1066              	.L67:
 469:fltk-1.3.4-1/jpeg/jdcolor.c **** 	*outptr = *inptr++;	/* needn't bother with GETJSAMPLE() here */
 1067              		.loc 1 469 2 is_stmt 1 discriminator 3 view .LVU371
 1068              		.loc 1 469 12 is_stmt 0 discriminator 3 view .LVU372
 1069 0070 0FB608   		movzbl	(%rax), %ecx
 1070              		.loc 1 469 18 discriminator 3 view .LVU373
 1071 0073 4883C001 		addq	$1, %rax
 1072              	.LVL123:
 1073              		.loc 1 469 10 discriminator 3 view .LVU374
 1074 0077 880A     		movb	%cl, (%rdx)
 470:fltk-1.3.4-1/jpeg/jdcolor.c **** 	outptr += nc;
 1075              		.loc 1 470 2 is_stmt 1 discriminator 3 view .LVU375
 1076              		.loc 1 470 9 is_stmt 0 discriminator 3 view .LVU376
 1077 0079 4801FA   		addq	%rdi, %rdx
 1078              	.LVL124:
 468:fltk-1.3.4-1/jpeg/jdcolor.c ****       for (col = 0; col < num_cols; col++) {
 1079              		.loc 1 468 37 is_stmt 1 discriminator 3 view .LVU377
 468:fltk-1.3.4-1/jpeg/jdcolor.c ****       for (col = 0; col < num_cols; col++) {
 1080              		.loc 1 468 21 discriminator 3 view .LVU378
 468:fltk-1.3.4-1/jpeg/jdcolor.c ****       for (col = 0; col < num_cols; col++) {
 1081              		.loc 1 468 7 is_stmt 0 discriminator 3 view .LVU379
 1082 007c 4839F0   		cmpq	%rsi, %rax
 1083 007f 75EF     		jne	.L67
 1084              	.L68:
 465:fltk-1.3.4-1/jpeg/jdcolor.c ****       inptr = input_buf[ci][input_row];
 1085              		.loc 1 465 27 is_stmt 1 view .LVU380
 1086              	.LVL125:
 465:fltk-1.3.4-1/jpeg/jdcolor.c ****       inptr = input_buf[ci][input_row];
 1087              		.loc 1 465 18 view .LVU381
 1088 0081 498D4001 		leaq	1(%r8), %rax
 1089              	.LVL126:
 465:fltk-1.3.4-1/jpeg/jdcolor.c ****       inptr = input_buf[ci][input_row];
 1090              		.loc 1 465 5 is_stmt 0 view .LVU382
 1091 0085 4D39C4   		cmpq	%r8, %r12
 1092 0088 7406     		je	.L66
 1093 008a 4989C0   		movq	%rax, %r8
 1094              	.LVL127:
 465:fltk-1.3.4-1/jpeg/jdcolor.c ****       inptr = input_buf[ci][input_row];
 1095              		.loc 1 465 5 view .LVU383
 1096 008d EBC1     		jmp	.L65
 1097              	.LVL128:
 1098 008f 90       		.p2align 4,,10
 1099              		.p2align 3
 1100              	.L66:
 471:fltk-1.3.4-1/jpeg/jdcolor.c ****       }
 472:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 473:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 1101              		.loc 1 473 5 is_stmt 1 view .LVU384
 1102              		.loc 1 473 14 is_stmt 0 view .LVU385
 1103 0090 4183C501 		addl	$1, %r13d
 1104              	.LVL129:
 474:fltk-1.3.4-1/jpeg/jdcolor.c ****     output_buf++;
 1105              		.loc 1 474 5 is_stmt 1 view .LVU386
 1106              		.loc 1 474 15 is_stmt 0 view .LVU387
 1107 0094 4983C208 		addq	$8, %r10
 1108              	.LVL130:
 464:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (ci = 0; ci < nc; ci++) {
 1109              		.loc 1 464 9 is_stmt 1 view .LVU388
 464:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (ci = 0; ci < nc; ci++) {
 1110              		.loc 1 464 9 is_stmt 0 view .LVU389
 1111 0098 4539EE   		cmpl	%r13d, %r14d
 1112 009b 75A3     		jne	.L63
 1113              	.LVL131:
 1114              	.L61:
 475:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 476:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 1115              		.loc 1 476 1 view .LVU390
 1116 009d 5B       		popq	%rbx
 1117              		.cfi_def_cfa_offset 48
 1118 009e 5D       		popq	%rbp
 1119              		.cfi_def_cfa_offset 40
 1120              	.LVL132:
 1121              		.loc 1 476 1 view .LVU391
 1122 009f 415C     		popq	%r12
 1123              		.cfi_def_cfa_offset 32
 1124 00a1 415D     		popq	%r13
 1125              		.cfi_def_cfa_offset 24
 1126 00a3 415E     		popq	%r14
 1127              		.cfi_def_cfa_offset 16
 1128 00a5 415F     		popq	%r15
 1129              		.cfi_def_cfa_offset 8
 1130              	.LVL133:
 1131              		.loc 1 476 1 view .LVU392
 1132 00a7 C3       		ret
 1133              		.cfi_endproc
 1134              	.LFE59:
 1136              		.section	.text.gray_rgb_convert,"ax",@progbits
 1137              		.p2align 4
 1139              	gray_rgb_convert:
 1140              	.LVL134:
 1141              	.LFB61:
 477:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 478:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 479:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 480:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Color conversion for grayscale: just copy the data.
 481:fltk-1.3.4-1/jpeg/jdcolor.c ****  * This also works for YCC -> grayscale conversion, in which
 482:fltk-1.3.4-1/jpeg/jdcolor.c ****  * we just copy the Y (luminance) component and ignore chrominance.
 483:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 484:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 485:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 486:fltk-1.3.4-1/jpeg/jdcolor.c **** grayscale_convert (j_decompress_ptr cinfo,
 487:fltk-1.3.4-1/jpeg/jdcolor.c **** 		   JSAMPIMAGE input_buf, JDIMENSION input_row,
 488:fltk-1.3.4-1/jpeg/jdcolor.c **** 		   JSAMPARRAY output_buf, int num_rows)
 489:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 490:fltk-1.3.4-1/jpeg/jdcolor.c ****   jcopy_sample_rows(input_buf[0], (int) input_row, output_buf, 0,
 491:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    num_rows, cinfo->output_width);
 492:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 493:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 494:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 495:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 496:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Convert grayscale to RGB: just duplicate the graylevel three times.
 497:fltk-1.3.4-1/jpeg/jdcolor.c ****  * This is provided to support applications that don't want to cope
 498:fltk-1.3.4-1/jpeg/jdcolor.c ****  * with grayscale as a separate case.
 499:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 500:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 501:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 502:fltk-1.3.4-1/jpeg/jdcolor.c **** gray_rgb_convert (j_decompress_ptr cinfo,
 503:fltk-1.3.4-1/jpeg/jdcolor.c **** 		  JSAMPIMAGE input_buf, JDIMENSION input_row,
 504:fltk-1.3.4-1/jpeg/jdcolor.c **** 		  JSAMPARRAY output_buf, int num_rows)
 505:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 1142              		.loc 1 505 1 is_stmt 1 view -0
 1143              		.cfi_startproc
 1144              		.loc 1 505 1 is_stmt 0 view .LVU394
 1145 0000 F30F1EFA 		endbr64
 506:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 1146              		.loc 1 506 3 is_stmt 1 view .LVU395
 507:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr;
 1147              		.loc 1 507 3 view .LVU396
 508:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 1148              		.loc 1 508 3 view .LVU397
 509:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 1149              		.loc 1 509 3 view .LVU398
 1150              		.loc 1 509 14 is_stmt 0 view .LVU399
 1151 0004 448B9F88 		movl	136(%rdi), %r11d
 1151      000000
 1152              	.LVL135:
 510:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 511:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 1153              		.loc 1 511 3 is_stmt 1 view .LVU400
 1154              		.loc 1 511 9 view .LVU401
 1155              		.loc 1 511 9 is_stmt 0 view .LVU402
 1156 000b 4585C0   		testl	%r8d, %r8d
 1157 000e 7E54     		jle	.L84
 1158 0010 418D43FF 		leal	-1(%r11), %eax
 505:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 1159              		.loc 1 505 1 view .LVU403
 1160 0014 53       		pushq	%rbx
 1161              		.cfi_def_cfa_offset 16
 1162              		.cfi_offset 3, -16
 1163 0015 458D1410 		leal	(%r8,%rdx), %r10d
 1164 0019 488D5C40 		leaq	3(%rax,%rax,2), %rbx
 1164      03
 1165              	.LVL136:
 1166 001e 6690     		.p2align 4,,10
 1167              		.p2align 3
 1168              	.L77:
 512:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr = input_buf[0][input_row++];
 1169              		.loc 1 512 5 is_stmt 1 view .LVU404
 1170              		.loc 1 512 11 is_stmt 0 view .LVU405
 1171 0020 488B3E   		movq	(%rsi), %rdi
 1172 0023 89D0     		movl	%edx, %eax
 513:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 1173              		.loc 1 513 25 view .LVU406
 1174 0025 4883C108 		addq	$8, %rcx
 1175              	.LVL137:
 512:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr = input_buf[0][input_row++];
 1176              		.loc 1 512 35 view .LVU407
 1177 0029 83C201   		addl	$1, %edx
 1178              	.LVL138:
 512:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr = input_buf[0][input_row++];
 1179              		.loc 1 512 11 view .LVU408
 1180 002c 4C8B04C7 		movq	(%rdi,%rax,8), %r8
 1181              	.LVL139:
 1182              		.loc 1 513 5 is_stmt 1 view .LVU409
 1183              		.loc 1 513 12 is_stmt 0 view .LVU410
 1184 0030 488B41F8 		movq	-8(%rcx), %rax
 1185              	.LVL140:
 514:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 1186              		.loc 1 514 5 is_stmt 1 view .LVU411
 1187              		.loc 1 514 19 view .LVU412
 1188              		.loc 1 514 5 is_stmt 0 view .LVU413
 1189 0034 4585DB   		testl	%r11d, %r11d
 1190 0037 7424     		je	.L75
 1191 0039 4C8D0C18 		leaq	(%rax,%rbx), %r9
 1192              	.LVL141:
 1193 003d 0F1F00   		.p2align 4,,10
 1194              		.p2align 3
 1195              	.L76:
 515:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 516:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[RGB_RED] = outptr[RGB_GREEN] = outptr[RGB_BLUE] = inptr[col];
 1196              		.loc 1 516 7 is_stmt 1 discriminator 3 view .LVU414
 1197              		.loc 1 516 69 is_stmt 0 discriminator 3 view .LVU415
 1198 0040 410FB638 		movzbl	(%r8), %edi
 517:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 1199              		.loc 1 517 14 discriminator 3 view .LVU416
 1200 0044 4883C003 		addq	$3, %rax
 1201              	.LVL142:
 1202              		.loc 1 517 14 discriminator 3 view .LVU417
 1203 0048 4983C001 		addq	$1, %r8
 516:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 1204              		.loc 1 516 62 discriminator 3 view .LVU418
 1205 004c 408878FF 		movb	%dil, -1(%rax)
 516:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 1206              		.loc 1 516 43 discriminator 3 view .LVU419
 1207 0050 408878FE 		movb	%dil, -2(%rax)
 516:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += RGB_PIXELSIZE;
 1208              		.loc 1 516 23 discriminator 3 view .LVU420
 1209 0054 408878FD 		movb	%dil, -3(%rax)
 1210              		.loc 1 517 7 is_stmt 1 discriminator 3 view .LVU421
 1211              	.LVL143:
 514:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 1212              		.loc 1 514 35 discriminator 3 view .LVU422
 514:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 1213              		.loc 1 514 19 discriminator 3 view .LVU423
 514:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* We can dispense with GETJSAMPLE() here */
 1214              		.loc 1 514 5 is_stmt 0 discriminator 3 view .LVU424
 1215 0058 4939C1   		cmpq	%rax, %r9
 1216 005b 75E3     		jne	.L76
 1217              	.L75:
 511:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr = input_buf[0][input_row++];
 1218              		.loc 1 511 9 is_stmt 1 view .LVU425
 511:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr = input_buf[0][input_row++];
 1219              		.loc 1 511 9 is_stmt 0 view .LVU426
 1220 005d 4139D2   		cmpl	%edx, %r10d
 1221 0060 75BE     		jne	.L77
 518:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 519:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 520:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 1222              		.loc 1 520 1 view .LVU427
 1223 0062 5B       		popq	%rbx
 1224              		.cfi_def_cfa_offset 8
 1225 0063 C3       		ret
 1226              	.LVL144:
 1227              	.L84:
 1228              		.cfi_restore 3
 1229              		.loc 1 520 1 view .LVU428
 1230 0064 C3       		ret
 1231              		.cfi_endproc
 1232              	.LFE61:
 1234              		.section	.text.ycck_cmyk_convert,"ax",@progbits
 1235              		.p2align 4
 1237              	ycck_cmyk_convert:
 1238              	.LVL145:
 1239              	.LFB62:
 521:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 522:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 523:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 524:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Adobe-style YCCK->CMYK conversion.
 525:fltk-1.3.4-1/jpeg/jdcolor.c ****  * We convert YCbCr to R=1-C, G=1-M, and B=1-Y using the same
 526:fltk-1.3.4-1/jpeg/jdcolor.c ****  * conversion as above, while passing K (black) unchanged.
 527:fltk-1.3.4-1/jpeg/jdcolor.c ****  * We assume build_ycc_rgb_table has been called.
 528:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 529:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 530:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 531:fltk-1.3.4-1/jpeg/jdcolor.c **** ycck_cmyk_convert (j_decompress_ptr cinfo,
 532:fltk-1.3.4-1/jpeg/jdcolor.c **** 		   JSAMPIMAGE input_buf, JDIMENSION input_row,
 533:fltk-1.3.4-1/jpeg/jdcolor.c **** 		   JSAMPARRAY output_buf, int num_rows)
 534:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 1240              		.loc 1 534 1 is_stmt 1 view -0
 1241              		.cfi_startproc
 1242              		.loc 1 534 1 is_stmt 0 view .LVU430
 1243 0000 F30F1EFA 		endbr64
 1244 0004 4157     		pushq	%r15
 1245              		.cfi_def_cfa_offset 16
 1246              		.cfi_offset 15, -16
 1247 0006 4156     		pushq	%r14
 1248              		.cfi_def_cfa_offset 24
 1249              		.cfi_offset 14, -24
 1250 0008 4155     		pushq	%r13
 1251              		.cfi_def_cfa_offset 32
 1252              		.cfi_offset 13, -32
 1253 000a 4154     		pushq	%r12
 1254              		.cfi_def_cfa_offset 40
 1255              		.cfi_offset 12, -40
 1256 000c 55       		pushq	%rbp
 1257              		.cfi_def_cfa_offset 48
 1258              		.cfi_offset 6, -48
 1259 000d 53       		pushq	%rbx
 1260              		.cfi_def_cfa_offset 56
 1261              		.cfi_offset 3, -56
 535:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 1262              		.loc 1 535 19 view .LVU431
 1263 000e 488B8788 		movq	648(%rdi), %rax
 1263      020000
 536:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int y, cb, cr;
 537:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 538:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2, inptr3;
 539:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 540:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 1264              		.loc 1 540 14 view .LVU432
 1265 0015 8B9F8800 		movl	136(%rdi), %ebx
 1265      0000
 541:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* copy these pointers into registers if possible */
 542:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPLE * range_limit = cinfo->sample_range_limit;
 1266              		.loc 1 542 22 view .LVU433
 1267 001b 4C8B9FB8 		movq	440(%rdi), %r11
 1267      010000
 543:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Crrtab = cconvert->Cr_r_tab;
 1268              		.loc 1 543 18 view .LVU434
 1269 0022 4C8B6010 		movq	16(%rax), %r12
 544:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Cbbtab = cconvert->Cb_b_tab;
 1270              		.loc 1 544 18 view .LVU435
 1271 0026 4C8B6818 		movq	24(%rax), %r13
 534:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 1272              		.loc 1 534 1 view .LVU436
 1273 002a 48897424 		movq	%rsi, -24(%rsp)
 1273      E8
 545:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Crgtab = cconvert->Cr_g_tab;
 1274              		.loc 1 545 20 view .LVU437
 1275 002f 4C8B7020 		movq	32(%rax), %r14
 534:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 1276              		.loc 1 534 1 view .LVU438
 1277 0033 895424DC 		movl	%edx, -36(%rsp)
 546:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Cbgtab = cconvert->Cb_g_tab;
 1278              		.loc 1 546 20 view .LVU439
 1279 0037 4C8B7828 		movq	40(%rax), %r15
 534:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 1280              		.loc 1 534 1 view .LVU440
 1281 003b 48894C24 		movq	%rcx, -32(%rsp)
 1281      E0
 535:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int y, cb, cr;
 1282              		.loc 1 535 3 is_stmt 1 view .LVU441
 1283              	.LVL146:
 536:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW outptr;
 1284              		.loc 1 536 3 view .LVU442
 537:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JSAMPROW inptr0, inptr1, inptr2, inptr3;
 1285              		.loc 1 537 3 view .LVU443
 538:fltk-1.3.4-1/jpeg/jdcolor.c ****   register JDIMENSION col;
 1286              		.loc 1 538 3 view .LVU444
 539:fltk-1.3.4-1/jpeg/jdcolor.c ****   JDIMENSION num_cols = cinfo->output_width;
 1287              		.loc 1 539 3 view .LVU445
 540:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* copy these pointers into registers if possible */
 1288              		.loc 1 540 3 view .LVU446
 540:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* copy these pointers into registers if possible */
 1289              		.loc 1 540 14 is_stmt 0 view .LVU447
 1290 0040 895C24F0 		movl	%ebx, -16(%rsp)
 1291              	.LVL147:
 542:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Crrtab = cconvert->Cr_r_tab;
 1292              		.loc 1 542 3 is_stmt 1 view .LVU448
 543:fltk-1.3.4-1/jpeg/jdcolor.c ****   register int * Cbbtab = cconvert->Cb_b_tab;
 1293              		.loc 1 543 3 view .LVU449
 544:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Crgtab = cconvert->Cr_g_tab;
 1294              		.loc 1 544 3 view .LVU450
 545:fltk-1.3.4-1/jpeg/jdcolor.c ****   register INT32 * Cbgtab = cconvert->Cb_g_tab;
 1295              		.loc 1 545 3 view .LVU451
 1296              		.loc 1 546 3 view .LVU452
 547:fltk-1.3.4-1/jpeg/jdcolor.c ****   SHIFT_TEMPS
 548:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 549:fltk-1.3.4-1/jpeg/jdcolor.c ****   while (--num_rows >= 0) {
 1297              		.loc 1 549 3 view .LVU453
 1298              		.loc 1 549 9 view .LVU454
 1299              		.loc 1 549 9 is_stmt 0 view .LVU455
 1300 0044 4585C0   		testl	%r8d, %r8d
 1301 0047 0F8E1301 		jle	.L87
 1301      0000
 1302 004d 8D43FF   		leal	-1(%rbx), %eax
 1303              	.LVL148:
 1304              		.loc 1 549 9 view .LVU456
 1305 0050 4101D0   		addl	%edx, %r8d
 1306              	.LVL149:
 550:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 551:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr1 = input_buf[1][input_row];
 552:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 553:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr3 = input_buf[3][input_row];
 554:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 555:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 557:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 558:fltk-1.3.4-1/jpeg/jdcolor.c ****       cb = GETJSAMPLE(inptr1[col]);
 559:fltk-1.3.4-1/jpeg/jdcolor.c ****       cr = GETJSAMPLE(inptr2[col]);
 560:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Range-limiting is essential due to noise introduced by DCT losses,
 561:fltk-1.3.4-1/jpeg/jdcolor.c ****        * and for extended gamut encodings (sYCC).
 562:fltk-1.3.4-1/jpeg/jdcolor.c ****        */
 563:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[0] = range_limit[MAXJSAMPLE - (y + Crrtab[cr])];	/* red */
 1307              		.loc 1 563 42 view .LVU457
 1308 0053 BBFF0000 		movl	$255, %ebx
 1308      00
 1309              	.LVL150:
 1310              		.loc 1 563 42 view .LVU458
 1311 0058 488D0485 		leaq	4(,%rax,4), %rax
 1311      04000000 
 1312 0060 44894424 		movl	%r8d, -12(%rsp)
 1312      F4
 1313 0065 48894424 		movq	%rax, -8(%rsp)
 1313      F8
 1314              	.LVL151:
 1315 006a 660F1F44 		.p2align 4,,10
 1315      0000
 1316              		.p2align 3
 1317              	.L91:
 550:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1318              		.loc 1 550 5 is_stmt 1 view .LVU459
 550:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1319              		.loc 1 550 12 is_stmt 0 view .LVU460
 1320 0070 488B7C24 		movq	-24(%rsp), %rdi
 1320      E8
 550:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1321              		.loc 1 550 26 view .LVU461
 1322 0075 8B4424DC 		movl	-36(%rsp), %eax
 555:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 1323              		.loc 1 555 25 view .LVU462
 1324 0079 48834424 		addq	$8, -32(%rsp)
 1324      E008
 1325              	.LVL152:
 550:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1326              		.loc 1 550 12 view .LVU463
 1327 007f 488B17   		movq	(%rdi), %rdx
 550:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1328              		.loc 1 550 26 view .LVU464
 1329 0082 4889C1   		movq	%rax, %rcx
 554:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 1330              		.loc 1 554 14 view .LVU465
 1331 0085 83C101   		addl	$1, %ecx
 550:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1332              		.loc 1 550 12 view .LVU466
 1333 0088 4C8B14C2 		movq	(%rdx,%rax,8), %r10
 1334              	.LVL153:
 551:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 1335              		.loc 1 551 5 is_stmt 1 view .LVU467
 551:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 1336              		.loc 1 551 12 is_stmt 0 view .LVU468
 1337 008c 488B5708 		movq	8(%rdi), %rdx
 554:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 1338              		.loc 1 554 14 view .LVU469
 1339 0090 894C24DC 		movl	%ecx, -36(%rsp)
 1340              	.LVL154:
 551:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr2 = input_buf[2][input_row];
 1341              		.loc 1 551 12 view .LVU470
 1342 0094 4C8B0CC2 		movq	(%rdx,%rax,8), %r9
 1343              	.LVL155:
 552:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr3 = input_buf[3][input_row];
 1344              		.loc 1 552 5 is_stmt 1 view .LVU471
 552:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr3 = input_buf[3][input_row];
 1345              		.loc 1 552 12 is_stmt 0 view .LVU472
 1346 0098 488B5710 		movq	16(%rdi), %rdx
 1347 009c 4C8B04C2 		movq	(%rdx,%rax,8), %r8
 1348              	.LVL156:
 553:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 1349              		.loc 1 553 5 is_stmt 1 view .LVU473
 553:fltk-1.3.4-1/jpeg/jdcolor.c ****     input_row++;
 1350              		.loc 1 553 12 is_stmt 0 view .LVU474
 1351 00a0 488B5718 		movq	24(%rdi), %rdx
 1352 00a4 488B3CC2 		movq	(%rdx,%rax,8), %rdi
 1353              	.LVL157:
 554:fltk-1.3.4-1/jpeg/jdcolor.c ****     outptr = *output_buf++;
 1354              		.loc 1 554 5 is_stmt 1 view .LVU475
 555:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 1355              		.loc 1 555 5 view .LVU476
 555:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 1356              		.loc 1 555 25 is_stmt 0 view .LVU477
 1357 00a8 488B4424 		movq	-32(%rsp), %rax
 1357      E0
 1358              	.LVL158:
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1359              		.loc 1 556 5 view .LVU478
 1360 00ad 8B5424F0 		movl	-16(%rsp), %edx
 555:fltk-1.3.4-1/jpeg/jdcolor.c ****     for (col = 0; col < num_cols; col++) {
 1361              		.loc 1 555 12 view .LVU479
 1362 00b1 488B40F8 		movq	-8(%rax), %rax
 1363              	.LVL159:
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1364              		.loc 1 556 5 is_stmt 1 view .LVU480
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1365              		.loc 1 556 19 view .LVU481
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1366              		.loc 1 556 5 is_stmt 0 view .LVU482
 1367 00b5 85D2     		testl	%edx, %edx
 1368 00b7 0F849500 		je	.L89
 1368      0000
 1369 00bd 488B4C24 		movq	-8(%rsp), %rcx
 1369      F8
 1370              	.LVL160:
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1371              		.loc 1 556 5 view .LVU483
 1372 00c2 4C896424 		movq	%r12, -56(%rsp)
 1372      C8
 1373 00c7 4801C1   		addq	%rax, %rcx
 1374 00ca 48894C24 		movq	%rcx, -48(%rsp)
 1374      D0
 1375              	.LVL161:
 1376 00cf 90       		.p2align 4,,10
 1377              		.p2align 3
 1378              	.L90:
 557:fltk-1.3.4-1/jpeg/jdcolor.c ****       cb = GETJSAMPLE(inptr1[col]);
 1379              		.loc 1 557 7 is_stmt 1 discriminator 3 view .LVU484
 557:fltk-1.3.4-1/jpeg/jdcolor.c ****       cb = GETJSAMPLE(inptr1[col]);
 1380              		.loc 1 557 10 is_stmt 0 discriminator 3 view .LVU485
 1381 00d0 410FB612 		movzbl	(%r10), %edx
 1382              	.LVL162:
 558:fltk-1.3.4-1/jpeg/jdcolor.c ****       cr = GETJSAMPLE(inptr2[col]);
 1383              		.loc 1 558 7 is_stmt 1 discriminator 3 view .LVU486
 1384              		.loc 1 563 55 is_stmt 0 discriminator 3 view .LVU487
 1385 00d4 410FB628 		movzbl	(%r8), %ebp
 564:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 565:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 566:fltk-1.3.4-1/jpeg/jdcolor.c **** 						 SCALEBITS)))];
 567:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[2] = range_limit[MAXJSAMPLE - (y + Cbbtab[cb])];	/* blue */
 568:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* K passes through unchanged */
 569:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[3] = inptr3[col];	/* don't need GETJSAMPLE here */
 570:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += 4;
 1386              		.loc 1 570 14 discriminator 3 view .LVU488
 1387 00d8 4883C004 		addq	$4, %rax
 1388              	.LVL163:
 1389              		.loc 1 570 14 discriminator 3 view .LVU489
 1390 00dc 4983C201 		addq	$1, %r10
 558:fltk-1.3.4-1/jpeg/jdcolor.c ****       cr = GETJSAMPLE(inptr2[col]);
 1391              		.loc 1 558 12 discriminator 3 view .LVU490
 1392 00e0 410FB609 		movzbl	(%r9), %ecx
 1393              	.LVL164:
 559:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* Range-limiting is essential due to noise introduced by DCT losses,
 1394              		.loc 1 559 7 is_stmt 1 discriminator 3 view .LVU491
 563:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 1395              		.loc 1 563 7 discriminator 3 view .LVU492
 1396 00e4 4983C001 		addq	$1, %r8
 1397              	.LVL165:
 563:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 1398              		.loc 1 563 7 is_stmt 0 discriminator 3 view .LVU493
 1399 00e8 4983C101 		addq	$1, %r9
 1400 00ec 4883C701 		addq	$1, %rdi
 563:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 1401              		.loc 1 563 47 discriminator 3 view .LVU494
 1402 00f0 4C8B6424 		movq	-56(%rsp), %r12
 1402      C8
 1403 00f5 89D6     		movl	%edx, %esi
 1404 00f7 410334AC 		addl	(%r12,%rbp,4), %esi
 563:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 1405              		.loc 1 563 42 discriminator 3 view .LVU495
 1406 00fb 4189DC   		movl	%ebx, %r12d
 1407 00fe 4129F4   		subl	%esi, %r12d
 1408 0101 4963F4   		movslq	%r12d, %rsi
 563:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 1409              		.loc 1 563 30 discriminator 3 view .LVU496
 1410 0104 410FB634 		movzbl	(%r11,%rsi), %esi
 1410      33
 563:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 1411              		.loc 1 563 17 discriminator 3 view .LVU497
 1412 0109 408870FC 		movb	%sil, -4(%rax)
 1413              	.LVL166:
 564:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr[1] = range_limit[MAXJSAMPLE - (y +			/* green */
 1414              		.loc 1 564 7 is_stmt 1 discriminator 3 view .LVU498
 565:fltk-1.3.4-1/jpeg/jdcolor.c **** 						 SCALEBITS)))];
 1415              		.loc 1 565 17 is_stmt 0 discriminator 3 view .LVU499
 1416 010d 498B34EE 		movq	(%r14,%rbp,8), %rsi
 564:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 1417              		.loc 1 564 42 discriminator 3 view .LVU500
 1418 0111 89DD     		movl	%ebx, %ebp
 1419              	.LVL167:
 565:fltk-1.3.4-1/jpeg/jdcolor.c **** 						 SCALEBITS)))];
 1420              		.loc 1 565 17 discriminator 3 view .LVU501
 1421 0113 490334CF 		addq	(%r15,%rcx,8), %rsi
 1422 0117 48C1FE10 		sarq	$16, %rsi
 564:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 1423              		.loc 1 564 47 discriminator 3 view .LVU502
 1424 011b 01D6     		addl	%edx, %esi
 564:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 1425              		.loc 1 564 42 discriminator 3 view .LVU503
 1426 011d 29F5     		subl	%esi, %ebp
 1427 011f 4863F5   		movslq	%ebp, %rsi
 564:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 1428              		.loc 1 564 30 discriminator 3 view .LVU504
 1429 0122 410FB634 		movzbl	(%r11,%rsi), %esi
 1429      33
 564:fltk-1.3.4-1/jpeg/jdcolor.c **** 			      ((int) RIGHT_SHIFT(Cbgtab[cb] + Crgtab[cr],
 1430              		.loc 1 564 17 discriminator 3 view .LVU505
 1431 0127 408870FD 		movb	%sil, -3(%rax)
 567:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* K passes through unchanged */
 1432              		.loc 1 567 7 is_stmt 1 discriminator 3 view .LVU506
 567:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* K passes through unchanged */
 1433              		.loc 1 567 47 is_stmt 0 discriminator 3 view .LVU507
 1434 012b 4103548D 		addl	0(%r13,%rcx,4), %edx
 1434      00
 1435              	.LVL168:
 567:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* K passes through unchanged */
 1436              		.loc 1 567 42 discriminator 3 view .LVU508
 1437 0130 89D9     		movl	%ebx, %ecx
 1438              	.LVL169:
 567:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* K passes through unchanged */
 1439              		.loc 1 567 42 discriminator 3 view .LVU509
 1440 0132 29D1     		subl	%edx, %ecx
 1441 0134 4863D1   		movslq	%ecx, %rdx
 567:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* K passes through unchanged */
 1442              		.loc 1 567 30 discriminator 3 view .LVU510
 1443 0137 410FB614 		movzbl	(%r11,%rdx), %edx
 1443      13
 567:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* K passes through unchanged */
 1444              		.loc 1 567 17 discriminator 3 view .LVU511
 1445 013c 8850FE   		movb	%dl, -2(%rax)
 569:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += 4;
 1446              		.loc 1 569 7 is_stmt 1 discriminator 3 view .LVU512
 569:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += 4;
 1447              		.loc 1 569 25 is_stmt 0 discriminator 3 view .LVU513
 1448 013f 0FB657FF 		movzbl	-1(%rdi), %edx
 569:fltk-1.3.4-1/jpeg/jdcolor.c ****       outptr += 4;
 1449              		.loc 1 569 17 discriminator 3 view .LVU514
 1450 0143 8850FF   		movb	%dl, -1(%rax)
 1451              		.loc 1 570 7 is_stmt 1 discriminator 3 view .LVU515
 1452              	.LVL170:
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1453              		.loc 1 556 35 discriminator 3 view .LVU516
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1454              		.loc 1 556 19 discriminator 3 view .LVU517
 556:fltk-1.3.4-1/jpeg/jdcolor.c ****       y  = GETJSAMPLE(inptr0[col]);
 1455              		.loc 1 556 5 is_stmt 0 discriminator 3 view .LVU518
 1456 0146 483B4424 		cmpq	-48(%rsp), %rax
 1456      D0
 1457 014b 7583     		jne	.L90
 1458 014d 4C8B6424 		movq	-56(%rsp), %r12
 1458      C8
 1459              	.L89:
 549:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1460              		.loc 1 549 9 is_stmt 1 view .LVU519
 549:fltk-1.3.4-1/jpeg/jdcolor.c ****     inptr0 = input_buf[0][input_row];
 1461              		.loc 1 549 9 is_stmt 0 view .LVU520
 1462 0152 8B7C24F4 		movl	-12(%rsp), %edi
 1463 0156 397C24DC 		cmpl	%edi, -36(%rsp)
 1464 015a 0F8510FF 		jne	.L91
 1464      FFFF
 1465              	.LVL171:
 1466              	.L87:
 571:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 572:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 573:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 1467              		.loc 1 573 1 view .LVU521
 1468 0160 5B       		popq	%rbx
 1469              		.cfi_def_cfa_offset 48
 1470 0161 5D       		popq	%rbp
 1471              		.cfi_def_cfa_offset 40
 1472 0162 415C     		popq	%r12
 1473              		.cfi_def_cfa_offset 32
 1474 0164 415D     		popq	%r13
 1475              		.cfi_def_cfa_offset 24
 1476              	.LVL172:
 1477              		.loc 1 573 1 view .LVU522
 1478 0166 415E     		popq	%r14
 1479              		.cfi_def_cfa_offset 16
 1480              	.LVL173:
 1481              		.loc 1 573 1 view .LVU523
 1482 0168 415F     		popq	%r15
 1483              		.cfi_def_cfa_offset 8
 1484              	.LVL174:
 1485              		.loc 1 573 1 view .LVU524
 1486 016a C3       		ret
 1487              		.cfi_endproc
 1488              	.LFE62:
 1490              		.section	.text.start_pass_dcolor,"ax",@progbits
 1491              		.p2align 4
 1493              	start_pass_dcolor:
 1494              	.LVL175:
 1495              	.LFB63:
 574:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 575:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 576:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 577:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Empty method for start_pass.
 578:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 579:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 580:fltk-1.3.4-1/jpeg/jdcolor.c **** METHODDEF(void)
 581:fltk-1.3.4-1/jpeg/jdcolor.c **** start_pass_dcolor (j_decompress_ptr cinfo)
 582:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 1496              		.loc 1 582 1 is_stmt 1 view -0
 1497              		.cfi_startproc
 1498              		.loc 1 582 1 is_stmt 0 view .LVU526
 1499 0000 F30F1EFA 		endbr64
 583:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* no work needed */
 584:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 1500              		.loc 1 584 1 is_stmt 1 view .LVU527
 1501 0004 C3       		ret
 1502              		.cfi_endproc
 1503              	.LFE63:
 1505              		.section	.text.grayscale_convert,"ax",@progbits
 1506              		.p2align 4
 1508              	grayscale_convert:
 1509              	.LVL176:
 1510              	.LFB60:
 489:fltk-1.3.4-1/jpeg/jdcolor.c ****   jcopy_sample_rows(input_buf[0], (int) input_row, output_buf, 0,
 1511              		.loc 1 489 1 view -0
 1512              		.cfi_startproc
 489:fltk-1.3.4-1/jpeg/jdcolor.c ****   jcopy_sample_rows(input_buf[0], (int) input_row, output_buf, 0,
 1513              		.loc 1 489 1 is_stmt 0 view .LVU529
 1514 0000 F30F1EFA 		endbr64
 490:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    num_rows, cinfo->output_width);
 1515              		.loc 1 490 3 is_stmt 1 view .LVU530
 489:fltk-1.3.4-1/jpeg/jdcolor.c ****   jcopy_sample_rows(input_buf[0], (int) input_row, output_buf, 0,
 1516              		.loc 1 489 1 is_stmt 0 view .LVU531
 1517 0004 4989F2   		movq	%rsi, %r10
 490:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    num_rows, cinfo->output_width);
 1518              		.loc 1 490 3 view .LVU532
 1519 0007 448B8F88 		movl	136(%rdi), %r9d
 1519      000000
 489:fltk-1.3.4-1/jpeg/jdcolor.c ****   jcopy_sample_rows(input_buf[0], (int) input_row, output_buf, 0,
 1520              		.loc 1 489 1 view .LVU533
 1521 000e 89D6     		movl	%edx, %esi
 1522              	.LVL177:
 489:fltk-1.3.4-1/jpeg/jdcolor.c ****   jcopy_sample_rows(input_buf[0], (int) input_row, output_buf, 0,
 1523              		.loc 1 489 1 view .LVU534
 1524 0010 4889CA   		movq	%rcx, %rdx
 1525              	.LVL178:
 490:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    num_rows, cinfo->output_width);
 1526              		.loc 1 490 3 view .LVU535
 1527 0013 498B3A   		movq	(%r10), %rdi
 1528              	.LVL179:
 490:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    num_rows, cinfo->output_width);
 1529              		.loc 1 490 3 view .LVU536
 1530 0016 31C9     		xorl	%ecx, %ecx
 1531              	.LVL180:
 490:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    num_rows, cinfo->output_width);
 1532              		.loc 1 490 3 view .LVU537
 1533 0018 E9000000 		jmp	jcopy_sample_rows@PLT
 1533      00
 1534              	.LVL181:
 490:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    num_rows, cinfo->output_width);
 1535              		.loc 1 490 3 view .LVU538
 1536              		.cfi_endproc
 1537              	.LFE60:
 1539              		.section	.text.jinit_color_deconverter,"ax",@progbits
 1540              		.p2align 4
 1541              		.globl	jinit_color_deconverter
 1543              	jinit_color_deconverter:
 1544              	.LVL182:
 1545              	.LFB64:
 585:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 586:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 587:fltk-1.3.4-1/jpeg/jdcolor.c **** /*
 588:fltk-1.3.4-1/jpeg/jdcolor.c ****  * Module initialization routine for output colorspace conversion.
 589:fltk-1.3.4-1/jpeg/jdcolor.c ****  */
 590:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 591:fltk-1.3.4-1/jpeg/jdcolor.c **** GLOBAL(void)
 592:fltk-1.3.4-1/jpeg/jdcolor.c **** jinit_color_deconverter (j_decompress_ptr cinfo)
 593:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 1546              		.loc 1 593 1 is_stmt 1 view -0
 1547              		.cfi_startproc
 1548              		.loc 1 593 1 is_stmt 0 view .LVU540
 1549 0000 F30F1EFA 		endbr64
 594:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert;
 1550              		.loc 1 594 3 is_stmt 1 view .LVU541
 595:fltk-1.3.4-1/jpeg/jdcolor.c ****   int ci;
 1551              		.loc 1 595 3 view .LVU542
 596:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 597:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert = (my_cconvert_ptr)
 1552              		.loc 1 597 3 view .LVU543
 593:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert;
 1553              		.loc 1 593 1 is_stmt 0 view .LVU544
 1554 0004 55       		pushq	%rbp
 1555              		.cfi_def_cfa_offset 16
 1556              		.cfi_offset 6, -16
 598:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1557              		.loc 1 598 6 view .LVU545
 1558 0005 BA400000 		movl	$64, %edx
 1558      00
 1559 000a BE010000 		movl	$1, %esi
 1559      00
 593:fltk-1.3.4-1/jpeg/jdcolor.c ****   my_cconvert_ptr cconvert;
 1560              		.loc 1 593 1 view .LVU546
 1561 000f 53       		pushq	%rbx
 1562              		.cfi_def_cfa_offset 24
 1563              		.cfi_offset 3, -24
 1564 0010 4889FB   		movq	%rdi, %rbx
 1565 0013 4883EC08 		subq	$8, %rsp
 1566              		.cfi_def_cfa_offset 32
 1567              		.loc 1 598 6 view .LVU547
 1568 0017 488B4708 		movq	8(%rdi), %rax
 1569 001b FF10     		call	*(%rax)
 1570              	.LVL183:
 599:fltk-1.3.4-1/jpeg/jdcolor.c **** 				SIZEOF(my_color_deconverter));
 600:fltk-1.3.4-1/jpeg/jdcolor.c ****   cinfo->cconvert = &cconvert->pub;
 1571              		.loc 1 600 19 view .LVU548
 1572 001d 48898388 		movq	%rax, 648(%rbx)
 1572      020000
 598:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1573              		.loc 1 598 6 view .LVU549
 1574 0024 4889C5   		movq	%rax, %rbp
 1575              	.LVL184:
 1576              		.loc 1 600 3 is_stmt 1 view .LVU550
 601:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->pub.start_pass = start_pass_dcolor;
 1577              		.loc 1 601 3 view .LVU551
 1578              		.loc 1 601 28 is_stmt 0 view .LVU552
 1579 0027 488D0500 		leaq	start_pass_dcolor(%rip), %rax
 1579      000000
 1580              	.LVL185:
 1581              		.loc 1 601 28 view .LVU553
 1582 002e 48894500 		movq	%rax, 0(%rbp)
 602:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 603:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Make sure num_components agrees with jpeg_color_space */
 604:fltk-1.3.4-1/jpeg/jdcolor.c ****   switch (cinfo->jpeg_color_space) {
 1583              		.loc 1 604 3 is_stmt 1 view .LVU554
 1584              		.loc 1 604 16 is_stmt 0 view .LVU555
 1585 0032 8B533C   		movl	60(%rbx), %edx
 1586              		.loc 1 604 3 view .LVU556
 1587 0035 83FA05   		cmpl	$5, %edx
 1588 0038 0F87E200 		ja	.L101
 1588      0000
 1589 003e 83FA03   		cmpl	$3, %edx
 1590 0041 0F87B901 		ja	.L102
 1590      0000
 1591 0047 83FA01   		cmpl	$1, %edx
 1592 004a 0F85B000 		jne	.L180
 1592      0000
 605:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 606:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->num_components != 1)
 1593              		.loc 1 606 5 is_stmt 1 view .LVU557
 1594              		.loc 1 606 8 is_stmt 0 view .LVU558
 1595 0050 837B3801 		cmpl	$1, 56(%rbx)
 1596 0054 0F84C601 		je	.L106
 1596      0000
 1597              	.L173:
 607:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 608:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 609:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 610:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_RGB:
 611:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_YCbCr:
 612:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_BG_RGB:
 613:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_BG_YCC:
 614:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->num_components != 3)
 615:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 616:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 617:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 618:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_CMYK:
 619:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_YCCK:
 620:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->num_components != 4)
 621:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 622:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 623:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 624:fltk-1.3.4-1/jpeg/jdcolor.c ****   default:			/* JCS_UNKNOWN can be anything */
 625:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->num_components < 1)
 626:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1598              		.loc 1 626 7 is_stmt 1 view .LVU559
 1599 005a 488B03   		movq	(%rbx), %rax
 1600 005d 4889DF   		movq	%rbx, %rdi
 1601 0060 C740280B 		movl	$11, 40(%rax)
 1601      000000
 1602 0067 488B03   		movq	(%rbx), %rax
 1603 006a FF10     		call	*(%rax)
 1604              	.LVL186:
 1605 006c 8B533C   		movl	60(%rbx), %edx
 1606              	.L107:
 627:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 628:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 629:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 630:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Support color transform only for RGB colorspaces */
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****   if (cinfo->color_transform &&
 1607              		.loc 1 631 3 view .LVU560
 1608              		.loc 1 631 6 is_stmt 0 view .LVU561
 1609 006f 8BBB8C01 		movl	396(%rbx), %edi
 1609      0000
 1610 0075 85FF     		testl	%edi, %edi
 1611 0077 0F85CB00 		jne	.L181
 1611      0000
 1612              	.L109:
 632:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 633:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_BG_RGB)
 634:fltk-1.3.4-1/jpeg/jdcolor.c ****     ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 635:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 636:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Set out_color_components and conversion method based on requested space.
 637:fltk-1.3.4-1/jpeg/jdcolor.c ****    * Also clear the component_needed flags for any unused components,
 638:fltk-1.3.4-1/jpeg/jdcolor.c ****    * so that earlier pipeline stages can avoid useless computation.
 639:fltk-1.3.4-1/jpeg/jdcolor.c ****    */
 640:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 641:fltk-1.3.4-1/jpeg/jdcolor.c ****   switch (cinfo->out_color_space) {
 1613              		.loc 1 641 3 is_stmt 1 view .LVU562
 1614              		.loc 1 641 16 is_stmt 0 view .LVU563
 1615 007d 8B4B40   		movl	64(%rbx), %ecx
 1616              		.loc 1 641 3 view .LVU564
 1617 0080 83F904   		cmpl	$4, %ecx
 1618 0083 0F84EE00 		je	.L110
 1618      0000
 1619              	.L151:
 1620              		.loc 1 641 3 view .LVU565
 1621 0089 83F904   		cmpl	$4, %ecx
 1622 008c 0F871601 		ja	.L111
 1622      0000
 1623 0092 83F901   		cmpl	$1, %ecx
 1624 0095 0F843D03 		je	.L112
 1624      0000
 1625 009b 83F902   		cmpl	$2, %ecx
 1626 009e 0F859C03 		jne	.L114
 1626      0000
 642:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 643:fltk-1.3.4-1/jpeg/jdcolor.c ****     cinfo->out_color_components = 1;
 644:fltk-1.3.4-1/jpeg/jdcolor.c ****     switch (cinfo->jpeg_color_space) {
 645:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_GRAYSCALE:
 646:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_YCbCr:
 647:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_BG_YCC:
 648:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = grayscale_convert;
 649:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* For color->grayscale conversion, only the Y (0) component is needed */
 650:fltk-1.3.4-1/jpeg/jdcolor.c ****       for (ci = 1; ci < cinfo->num_components; ci++)
 651:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 652:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 653:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_RGB:
 654:fltk-1.3.4-1/jpeg/jdcolor.c ****       switch (cinfo->color_transform) {
 655:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_NONE:
 656:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cconvert->pub.color_convert = rgb_gray_convert;
 657:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 658:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_SUBTRACT_GREEN:
 659:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cconvert->pub.color_convert = rgb1_gray_convert;
 660:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 661:fltk-1.3.4-1/jpeg/jdcolor.c ****       default:
 662:fltk-1.3.4-1/jpeg/jdcolor.c **** 	ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 663:fltk-1.3.4-1/jpeg/jdcolor.c ****       }
 664:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_rgb_y_table(cinfo);
 665:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 666:fltk-1.3.4-1/jpeg/jdcolor.c ****     default:
 667:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 668:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 669:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 670:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 671:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_RGB:
 672:fltk-1.3.4-1/jpeg/jdcolor.c ****     cinfo->out_color_components = RGB_PIXELSIZE;
 1627              		.loc 1 672 5 is_stmt 1 view .LVU566
 1628              		.loc 1 672 33 is_stmt 0 view .LVU567
 1629 00a4 C7839000 		movl	$3, 144(%rbx)
 1629      00000300 
 1629      0000
 673:fltk-1.3.4-1/jpeg/jdcolor.c ****     switch (cinfo->jpeg_color_space) {
 1630              		.loc 1 673 5 is_stmt 1 view .LVU568
 1631 00ae 83FA03   		cmpl	$3, %edx
 1632 00b1 0F844904 		je	.L128
 1632      0000
 1633 00b7 0F879301 		ja	.L129
 1633      0000
 1634 00bd 83FA01   		cmpl	$1, %edx
 1635 00c0 0F848A04 		je	.L130
 1635      0000
 1636 00c6 83FA02   		cmpl	$2, %edx
 1637 00c9 0F85F900 		jne	.L146
 1637      0000
 1638              	.L178:
 674:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_GRAYSCALE:
 675:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = gray_rgb_convert;
 676:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 677:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_YCbCr:
 678:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = ycc_rgb_convert;
 679:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_ycc_rgb_table(cinfo);
 680:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 681:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_BG_YCC:
 682:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = ycc_rgb_convert;
 683:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_bg_ycc_rgb_table(cinfo);
 684:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 685:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_RGB:
 686:fltk-1.3.4-1/jpeg/jdcolor.c ****       switch (cinfo->color_transform) {
 687:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_NONE:
 688:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cconvert->pub.color_convert = rgb_convert;
 689:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 690:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_SUBTRACT_GREEN:
 691:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cconvert->pub.color_convert = rgb1_rgb_convert;
 692:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 693:fltk-1.3.4-1/jpeg/jdcolor.c ****       default:
 694:fltk-1.3.4-1/jpeg/jdcolor.c **** 	ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 695:fltk-1.3.4-1/jpeg/jdcolor.c ****       }
 696:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 697:fltk-1.3.4-1/jpeg/jdcolor.c ****     default:
 698:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 699:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 700:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 701:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 702:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_BG_RGB:
 703:fltk-1.3.4-1/jpeg/jdcolor.c ****     cinfo->out_color_components = RGB_PIXELSIZE;
 704:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->jpeg_color_space == JCS_BG_RGB) {
 705:fltk-1.3.4-1/jpeg/jdcolor.c ****       switch (cinfo->color_transform) {
 1639              		.loc 1 705 7 view .LVU569
 1640              		.loc 1 705 20 is_stmt 0 view .LVU570
 1641 00cf 8B838C01 		movl	396(%rbx), %eax
 1641      0000
 1642 00d5 85C0     		testl	%eax, %eax
 1643 00d7 0F848304 		je	.L141
 1643      0000
 1644 00dd 83F801   		cmpl	$1, %eax
 1645 00e0 0F85E200 		jne	.L146
 1645      0000
 706:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_NONE:
 707:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cconvert->pub.color_convert = rgb_convert;
 708:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 709:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_SUBTRACT_GREEN:
 710:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cconvert->pub.color_convert = rgb1_rgb_convert;
 1646              		.loc 1 710 2 is_stmt 1 view .LVU571
 1647              		.loc 1 710 30 is_stmt 0 view .LVU572
 1648 00e6 488D0500 		leaq	rgb1_rgb_convert(%rip), %rax
 1648      000000
 1649 00ed 48894508 		movq	%rax, 8(%rbp)
 711:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 1650              		.loc 1 711 2 is_stmt 1 view .LVU573
 1651 00f1 E9E40000 		jmp	.L121
 1651      00
 1652 00f6 662E0F1F 		.p2align 4,,10
 1652      84000000 
 1652      0000
 1653              		.p2align 3
 1654              	.L180:
 604:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1655              		.loc 1 604 3 is_stmt 0 view .LVU574
 1656 0100 8D42FE   		leal	-2(%rdx), %eax
 1657 0103 83F801   		cmpl	$1, %eax
 1658 0106 7720     		ja	.L104
 1659              	.L105:
 614:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1660              		.loc 1 614 5 is_stmt 1 view .LVU575
 614:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1661              		.loc 1 614 8 is_stmt 0 view .LVU576
 1662 0108 837B3803 		cmpl	$3, 56(%rbx)
 1663 010c 0F8548FF 		jne	.L173
 1663      FFFF
 1664 0112 E958FFFF 		jmp	.L107
 1664      FF
 1665 0117 660F1F84 		.p2align 4,,10
 1665      00000000 
 1665      00
 1666              		.p2align 3
 1667              	.L101:
 604:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1668              		.loc 1 604 3 view .LVU577
 1669 0120 8D42FA   		leal	-6(%rdx), %eax
 1670 0123 83F801   		cmpl	$1, %eax
 1671 0126 76E0     		jbe	.L105
 1672              	.L104:
 625:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1673              		.loc 1 625 5 is_stmt 1 view .LVU578
 625:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1674              		.loc 1 625 8 is_stmt 0 view .LVU579
 1675 0128 448B4338 		movl	56(%rbx), %r8d
 1676 012c 4585C0   		testl	%r8d, %r8d
 1677 012f 0F8E25FF 		jle	.L173
 1677      FFFF
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1678              		.loc 1 631 3 is_stmt 1 view .LVU580
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1679              		.loc 1 631 6 is_stmt 0 view .LVU581
 1680 0135 8BBB8C01 		movl	396(%rbx), %edi
 1680      0000
 1681 013b 85FF     		testl	%edi, %edi
 1682 013d 0F843AFF 		je	.L109
 1682      FFFF
 1683              		.p2align 4,,10
 1684 0143 0F1F4400 		.p2align 3
 1684      00
 1685              	.L181:
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1686              		.loc 1 631 30 discriminator 1 view .LVU582
 1687 0148 89D0     		movl	%edx, %eax
 1688 014a 83E0FB   		andl	$-5, %eax
 632:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_BG_RGB)
 1689              		.loc 1 632 42 discriminator 1 view .LVU583
 1690 014d 83F802   		cmpl	$2, %eax
 1691 0150 0F8427FF 		je	.L109
 1691      FFFF
 1692              	.L148:
 634:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 1693              		.loc 1 634 5 is_stmt 1 view .LVU584
 1694 0156 488B03   		movq	(%rbx), %rax
 1695 0159 4889DF   		movq	%rbx, %rdi
 1696 015c C740281C 		movl	$28, 40(%rax)
 1696      000000
 1697 0163 488B03   		movq	(%rbx), %rax
 1698 0166 FF10     		call	*(%rax)
 1699              	.LVL187:
 641:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1700              		.loc 1 641 16 is_stmt 0 view .LVU585
 1701 0168 8B4B40   		movl	64(%rbx), %ecx
 1702 016b 8B533C   		movl	60(%rbx), %edx
 641:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1703              		.loc 1 641 3 is_stmt 1 view .LVU586
 1704 016e 83F904   		cmpl	$4, %ecx
 1705 0171 0F8512FF 		jne	.L151
 1705      FFFF
 1706              	.L110:
 712:fltk-1.3.4-1/jpeg/jdcolor.c ****       default:
 713:fltk-1.3.4-1/jpeg/jdcolor.c **** 	ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 714:fltk-1.3.4-1/jpeg/jdcolor.c ****       }
 715:fltk-1.3.4-1/jpeg/jdcolor.c ****     } else
 716:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 717:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 718:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 719:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_CMYK:
 720:fltk-1.3.4-1/jpeg/jdcolor.c ****     cinfo->out_color_components = 4;
 1707              		.loc 1 720 5 view .LVU587
 1708              		.loc 1 720 33 is_stmt 0 view .LVU588
 1709 0177 C7839000 		movl	$4, 144(%rbx)
 1709      00000400 
 1709      0000
 721:fltk-1.3.4-1/jpeg/jdcolor.c ****     switch (cinfo->jpeg_color_space) {
 1710              		.loc 1 721 5 is_stmt 1 view .LVU589
 1711 0181 83FA04   		cmpl	$4, %edx
 1712 0184 0F84C702 		je	.L174
 1712      0000
 1713 018a 83FA05   		cmpl	$5, %edx
 1714 018d 7539     		jne	.L146
 722:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_YCCK:
 723:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = ycck_cmyk_convert;
 1715              		.loc 1 723 7 view .LVU590
 1716              		.loc 1 723 35 is_stmt 0 view .LVU591
 1717 018f 488D0500 		leaq	ycck_cmyk_convert(%rip), %rax
 1717      000000
 724:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_ycc_rgb_table(cinfo);
 1718              		.loc 1 724 7 view .LVU592
 1719 0196 4889DF   		movq	%rbx, %rdi
 723:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_ycc_rgb_table(cinfo);
 1720              		.loc 1 723 35 view .LVU593
 1721 0199 48894508 		movq	%rax, 8(%rbp)
 1722              		.loc 1 724 7 is_stmt 1 view .LVU594
 1723 019d E8000000 		call	build_ycc_rgb_table
 1723      00
 1724              	.LVL188:
 725:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 1725              		.loc 1 725 7 view .LVU595
 1726 01a2 EB36     		jmp	.L121
 1727              		.p2align 4,,10
 1728 01a4 0F1F4000 		.p2align 3
 1729              	.L111:
 641:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1730              		.loc 1 641 3 is_stmt 0 view .LVU596
 1731 01a8 83F906   		cmpl	$6, %ecx
 1732 01ab 0F858F02 		jne	.L114
 1732      0000
 703:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->jpeg_color_space == JCS_BG_RGB) {
 1733              		.loc 1 703 5 is_stmt 1 view .LVU597
 703:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->jpeg_color_space == JCS_BG_RGB) {
 1734              		.loc 1 703 33 is_stmt 0 view .LVU598
 1735 01b1 C7839000 		movl	$3, 144(%rbx)
 1735      00000300 
 1735      0000
 704:fltk-1.3.4-1/jpeg/jdcolor.c ****       switch (cinfo->color_transform) {
 1736              		.loc 1 704 5 is_stmt 1 view .LVU599
 704:fltk-1.3.4-1/jpeg/jdcolor.c ****       switch (cinfo->color_transform) {
 1737              		.loc 1 704 8 is_stmt 0 view .LVU600
 1738 01bb 83FA06   		cmpl	$6, %edx
 1739 01be 0F840BFF 		je	.L178
 1739      FFFF
 1740              		.p2align 4,,10
 1741 01c4 0F1F4000 		.p2align 3
 1742              	.L146:
 726:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_CMYK:
 727:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = null_convert;
 728:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 729:fltk-1.3.4-1/jpeg/jdcolor.c ****     default:
 730:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 731:fltk-1.3.4-1/jpeg/jdcolor.c ****     }
 732:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 733:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 734:fltk-1.3.4-1/jpeg/jdcolor.c ****   default:
 735:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Permit null conversion to same output space */
 736:fltk-1.3.4-1/jpeg/jdcolor.c ****     if (cinfo->out_color_space == cinfo->jpeg_color_space) {
 737:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->out_color_components = cinfo->num_components;
 738:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = null_convert;
 739:fltk-1.3.4-1/jpeg/jdcolor.c ****     } else			/* unsupported non-null conversion */
 740:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 1743              		.loc 1 740 7 is_stmt 1 view .LVU601
 1744 01c8 488B03   		movq	(%rbx), %rax
 1745 01cb 4889DF   		movq	%rbx, %rdi
 1746 01ce C740281C 		movl	$28, 40(%rax)
 1746      000000
 1747 01d5 488B03   		movq	(%rbx), %rax
 1748 01d8 FF10     		call	*(%rax)
 1749              	.LVL189:
 1750              	.L121:
 741:fltk-1.3.4-1/jpeg/jdcolor.c ****     break;
 742:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 743:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 744:fltk-1.3.4-1/jpeg/jdcolor.c ****   if (cinfo->quantize_colors)
 1751              		.loc 1 744 3 view .LVU602
 1752              		.loc 1 744 6 is_stmt 0 view .LVU603
 1753 01da 8B736C   		movl	108(%rbx), %esi
 745:fltk-1.3.4-1/jpeg/jdcolor.c ****     cinfo->output_components = 1; /* single colormapped output component */
 1754              		.loc 1 745 30 view .LVU604
 1755 01dd B8010000 		movl	$1, %eax
 1755      00
 744:fltk-1.3.4-1/jpeg/jdcolor.c ****     cinfo->output_components = 1; /* single colormapped output component */
 1756              		.loc 1 744 6 view .LVU605
 1757 01e2 85F6     		testl	%esi, %esi
 1758 01e4 7506     		jne	.L147
 746:fltk-1.3.4-1/jpeg/jdcolor.c ****   else
 747:fltk-1.3.4-1/jpeg/jdcolor.c ****     cinfo->output_components = cinfo->out_color_components;
 1759              		.loc 1 747 5 is_stmt 1 view .LVU606
 1760              		.loc 1 747 37 is_stmt 0 view .LVU607
 1761 01e6 8B839000 		movl	144(%rbx), %eax
 1761      0000
 1762              	.L147:
 1763 01ec 89839400 		movl	%eax, 148(%rbx)
 1763      0000
 748:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 1764              		.loc 1 748 1 view .LVU608
 1765 01f2 4883C408 		addq	$8, %rsp
 1766              		.cfi_remember_state
 1767              		.cfi_def_cfa_offset 24
 1768 01f6 5B       		popq	%rbx
 1769              		.cfi_def_cfa_offset 16
 1770              	.LVL190:
 1771              		.loc 1 748 1 view .LVU609
 1772 01f7 5D       		popq	%rbp
 1773              		.cfi_def_cfa_offset 8
 1774 01f8 C3       		ret
 1775              	.LVL191:
 1776 01f9 0F1F8000 		.p2align 4,,10
 1776      000000
 1777              		.p2align 3
 1778              	.L102:
 1779              		.cfi_restore_state
 620:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1780              		.loc 1 620 5 is_stmt 1 view .LVU610
 620:fltk-1.3.4-1/jpeg/jdcolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1781              		.loc 1 620 8 is_stmt 0 view .LVU611
 1782 0200 837B3804 		cmpl	$4, 56(%rbx)
 1783 0204 0F8550FE 		jne	.L173
 1783      FFFF
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1784              		.loc 1 631 3 is_stmt 1 view .LVU612
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1785              		.loc 1 631 6 is_stmt 0 view .LVU613
 1786 020a 8B838C01 		movl	396(%rbx), %eax
 1786      0000
 1787 0210 85C0     		testl	%eax, %eax
 1788 0212 0F853EFF 		jne	.L148
 1788      FFFF
 1789 0218 E960FEFF 		jmp	.L109
 1789      FF
 1790 021d 0F1F00   		.p2align 4,,10
 1791              		.p2align 3
 1792              	.L106:
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1793              		.loc 1 631 3 is_stmt 1 view .LVU614
 631:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1794              		.loc 1 631 6 is_stmt 0 view .LVU615
 1795 0220 8B8B8C01 		movl	396(%rbx), %ecx
 1795      0000
 1796 0226 85C9     		testl	%ecx, %ecx
 1797 0228 0F8528FF 		jne	.L148
 1797      FFFF
 641:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1798              		.loc 1 641 3 is_stmt 1 view .LVU616
 641:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1799              		.loc 1 641 16 is_stmt 0 view .LVU617
 1800 022e 8B4B40   		movl	64(%rbx), %ecx
 641:fltk-1.3.4-1/jpeg/jdcolor.c ****   case JCS_GRAYSCALE:
 1801              		.loc 1 641 3 view .LVU618
 1802 0231 83F904   		cmpl	$4, %ecx
 1803 0234 0F854FFE 		jne	.L151
 1803      FFFF
 720:fltk-1.3.4-1/jpeg/jdcolor.c ****     switch (cinfo->jpeg_color_space) {
 1804              		.loc 1 720 5 is_stmt 1 view .LVU619
 720:fltk-1.3.4-1/jpeg/jdcolor.c ****     switch (cinfo->jpeg_color_space) {
 1805              		.loc 1 720 33 is_stmt 0 view .LVU620
 1806 023a C7839000 		movl	$4, 144(%rbx)
 1806      00000400 
 1806      0000
 721:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_YCCK:
 1807              		.loc 1 721 5 is_stmt 1 view .LVU621
 1808 0244 EB82     		jmp	.L146
 1809 0246 662E0F1F 		.p2align 4,,10
 1809      84000000 
 1809      0000
 1810              		.p2align 3
 1811              	.L129:
 721:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_YCCK:
 1812              		.loc 1 721 5 is_stmt 0 view .LVU622
 1813 0250 83FA07   		cmpl	$7, %edx
 1814 0253 0F856FFF 		jne	.L146
 1814      FFFF
 682:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_bg_ycc_rgb_table(cinfo);
 1815              		.loc 1 682 7 is_stmt 1 view .LVU623
 682:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_bg_ycc_rgb_table(cinfo);
 1816              		.loc 1 682 35 is_stmt 0 view .LVU624
 1817 0259 488D0500 		leaq	ycc_rgb_convert(%rip), %rax
 1817      000000
 1818              	.LBB10:
 1819              	.LBB11:
 167:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 1820              		.loc 1 167 6 view .LVU625
 1821 0260 BA000400 		movl	$1024, %edx
 1821      00
 1822 0265 BE010000 		movl	$1, %esi
 1822      00
 1823 026a 4889DF   		movq	%rbx, %rdi
 1824              	.LBE11:
 1825              	.LBE10:
 682:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_bg_ycc_rgb_table(cinfo);
 1826              		.loc 1 682 35 view .LVU626
 1827 026d 48894508 		movq	%rax, 8(%rbp)
 683:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 1828              		.loc 1 683 7 is_stmt 1 view .LVU627
 1829              	.LVL192:
 1830              	.LBB15:
 1831              	.LBI10:
 158:fltk-1.3.4-1/jpeg/jdcolor.c **** /* Wide gamut case, bg-sYCC */
 1832              		.loc 1 158 1 view .LVU628
 1833              	.LBB14:
 161:fltk-1.3.4-1/jpeg/jdcolor.c ****   int i;
 1834              		.loc 1 161 3 view .LVU629
 167:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 1835              		.loc 1 167 6 is_stmt 0 view .LVU630
 1836 0271 488B4308 		movq	8(%rbx), %rax
 161:fltk-1.3.4-1/jpeg/jdcolor.c ****   int i;
 1837              		.loc 1 161 19 view .LVU631
 1838 0275 488BAB88 		movq	648(%rbx), %rbp
 1838      020000
 1839              	.LVL193:
 162:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 x;
 1840              		.loc 1 162 3 is_stmt 1 view .LVU632
 163:fltk-1.3.4-1/jpeg/jdcolor.c ****   SHIFT_TEMPS
 1841              		.loc 1 163 3 view .LVU633
 166:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1842              		.loc 1 166 3 view .LVU634
 167:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 1843              		.loc 1 167 6 is_stmt 0 view .LVU635
 1844 027c FF10     		call	*(%rax)
 1845              	.LVL194:
 170:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 1846              		.loc 1 170 6 view .LVU636
 1847 027e BA000400 		movl	$1024, %edx
 1847      00
 1848 0283 BE010000 		movl	$1, %esi
 1848      00
 1849 0288 4889DF   		movq	%rbx, %rdi
 166:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1850              		.loc 1 166 22 view .LVU637
 1851 028b 48894510 		movq	%rax, 16(%rbp)
 169:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1852              		.loc 1 169 3 is_stmt 1 view .LVU638
 170:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(int));
 1853              		.loc 1 170 6 is_stmt 0 view .LVU639
 1854 028f 488B4308 		movq	8(%rbx), %rax
 1855 0293 FF10     		call	*(%rax)
 1856              	.LVL195:
 173:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 1857              		.loc 1 173 6 view .LVU640
 1858 0295 BA000800 		movl	$2048, %edx
 1858      00
 1859 029a BE010000 		movl	$1, %esi
 1859      00
 1860 029f 4889DF   		movq	%rbx, %rdi
 169:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1861              		.loc 1 169 22 view .LVU641
 1862 02a2 48894518 		movq	%rax, 24(%rbp)
 172:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1863              		.loc 1 172 3 is_stmt 1 view .LVU642
 173:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 1864              		.loc 1 173 6 is_stmt 0 view .LVU643
 1865 02a6 488B4308 		movq	8(%rbx), %rax
 1866 02aa FF10     		call	*(%rax)
 1867              	.LVL196:
 176:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 1868              		.loc 1 176 6 view .LVU644
 1869 02ac BA000800 		movl	$2048, %edx
 1869      00
 1870 02b1 BE010000 		movl	$1, %esi
 1870      00
 1871 02b6 4889DF   		movq	%rbx, %rdi
 172:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1872              		.loc 1 172 22 view .LVU645
 1873 02b9 48894520 		movq	%rax, 32(%rbp)
 175:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1874              		.loc 1 175 3 is_stmt 1 view .LVU646
 176:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(MAXJSAMPLE+1) * SIZEOF(INT32));
 1875              		.loc 1 176 6 is_stmt 0 view .LVU647
 1876 02bd 488B4308 		movq	8(%rbx), %rax
 1877 02c1 FF10     		call	*(%rax)
 1878              	.LVL197:
 180:fltk-1.3.4-1/jpeg/jdcolor.c **** 				5 * (MAXJSAMPLE+1) * SIZEOF(JSAMPLE));
 1879              		.loc 1 180 6 view .LVU648
 1880 02c3 BA000500 		movl	$1280, %edx
 1880      00
 1881 02c8 BE010000 		movl	$1, %esi
 1881      00
 1882 02cd 4889DF   		movq	%rbx, %rdi
 175:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1883              		.loc 1 175 22 view .LVU649
 1884 02d0 48894528 		movq	%rax, 40(%rbp)
 179:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1885              		.loc 1 179 3 is_stmt 1 view .LVU650
 180:fltk-1.3.4-1/jpeg/jdcolor.c **** 				5 * (MAXJSAMPLE+1) * SIZEOF(JSAMPLE));
 1886              		.loc 1 180 6 is_stmt 0 view .LVU651
 1887 02d4 488B4308 		movq	8(%rbx), %rax
 1888 02d8 FF10     		call	*(%rax)
 1889              	.LVL198:
 179:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1890              		.loc 1 179 25 view .LVU652
 1891 02da BF809958 		movl	$5806464, %edi
 1891      00
 1892 02df BE80D1B6 		movl	$11981184, %esi
 1892      00
 1893 02e4 48C7C100 		movq	$-29696512, %rcx
 1893      DE3AFE
 1894 02eb 48894530 		movq	%rax, 48(%rbp)
 183:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 1895              		.loc 1 183 3 is_stmt 1 view .LVU653
 1896              	.LVL199:
 183:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 1897              		.loc 1 183 35 view .LVU654
 179:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1898              		.loc 1 179 25 is_stmt 0 view .LVU655
 1899 02ef 48C7C280 		movq	$-23488896, %rdx
 1899      9699FE
 1900 02f6 31C0     		xorl	%eax, %eax
 1901              	.LVL200:
 1902 02f8 0F1F8400 		.p2align 4,,10
 1902      00000000 
 1903              		.p2align 3
 1904              	.L134:
 187:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(2.804) * x + ONE_HALF, SCALEBITS);
 1905              		.loc 1 187 5 is_stmt 1 view .LVU656
 187:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(2.804) * x + ONE_HALF, SCALEBITS);
 1906              		.loc 1 187 27 is_stmt 0 view .LVU657
 1907 0300 4C8B4510 		movq	16(%rbp), %r8
 188:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cb=>B value is nearest int to 3.544 * x */
 1908              		.loc 1 188 7 view .LVU658
 1909 0304 4989D1   		movq	%rdx, %r9
 1910 0307 4881C2D3 		addq	$183763, %rdx
 1910      CD0200
 1911 030e 49C1F910 		sarq	$16, %r9
 187:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(2.804) * x + ONE_HALF, SCALEBITS);
 1912              		.loc 1 187 29 view .LVU659
 1913 0312 45890C00 		movl	%r9d, (%r8,%rax)
 190:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(3.544) * x + ONE_HALF, SCALEBITS);
 1914              		.loc 1 190 5 is_stmt 1 view .LVU660
 191:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cr=>G value is scaled-up -1.428272572 * x */
 1915              		.loc 1 191 7 is_stmt 0 view .LVU661
 1916 0316 4989C9   		movq	%rcx, %r9
 190:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(3.544) * x + ONE_HALF, SCALEBITS);
 1917              		.loc 1 190 27 view .LVU662
 1918 0319 4C8B4518 		movq	24(%rbp), %r8
 1919 031d 4881C144 		addq	$232260, %rcx
 1919      8B0300
 191:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cr=>G value is scaled-up -1.428272572 * x */
 1920              		.loc 1 191 7 view .LVU663
 1921 0324 49C1F910 		sarq	$16, %r9
 190:fltk-1.3.4-1/jpeg/jdcolor.c **** 		    RIGHT_SHIFT(FIX(3.544) * x + ONE_HALF, SCALEBITS);
 1922              		.loc 1 190 29 view .LVU664
 1923 0328 45890C00 		movl	%r9d, (%r8,%rax)
 193:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cb=>G value is scaled-up -0.688272572 * x */
 1924              		.loc 1 193 5 is_stmt 1 view .LVU665
 193:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* Cb=>G value is scaled-up -0.688272572 * x */
 1925              		.loc 1 193 27 is_stmt 0 view .LVU666
 1926 032c 4C8B4520 		movq	32(%rbp), %r8
 1927 0330 49893440 		movq	%rsi, (%r8,%rax,2)
 196:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 1928              		.loc 1 196 5 is_stmt 1 view .LVU667
 196:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 1929              		.loc 1 196 27 is_stmt 0 view .LVU668
 1930 0334 4C8B4528 		movq	40(%rbp), %r8
 1931 0338 4881EEA3 		subq	$93603, %rsi
 1931      6D0100
 1932 033f 49893C40 		movq	%rdi, (%r8,%rax,2)
 183:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 1933              		.loc 1 183 52 is_stmt 1 view .LVU669
 183:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 1934              		.loc 1 183 35 view .LVU670
 1935 0343 4883C004 		addq	$4, %rax
 1936 0347 4881EF33 		subq	$45107, %rdi
 1936      B00000
 183:fltk-1.3.4-1/jpeg/jdcolor.c ****     /* i is the actual input pixel value, in the range 0..MAXJSAMPLE */
 1937              		.loc 1 183 3 is_stmt 0 view .LVU671
 1938 034e 4881FA80 		cmpq	$23554432, %rdx
 1938      696701
 1939 0355 75A9     		jne	.L134
 204:fltk-1.3.4-1/jpeg/jdcolor.c ****   cconvert->range_limit += 2 * (MAXJSAMPLE+1);
 1940              		.loc 1 204 3 is_stmt 1 view .LVU672
 1941              	.LVL201:
 1942              	.LBB12:
 1943              	.LBI12:
 1944              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
 1945              		.loc 2 59 1 view .LVU673
 1946              	.LBB13:
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 1947              		.loc 2 71 3 view .LVU674
 1948              		.loc 2 71 10 is_stmt 0 view .LVU675
 1949 0357 488B4530 		movq	48(%rbp), %rax
 1950 035b 488D7808 		leaq	8(%rax), %rdi
 1951 035f 48C70000 		movq	$0, (%rax)
 1951      000000
 1952              	.LVL202:
 1953              		.loc 2 71 10 view .LVU676
 1954 0366 48C780F8 		movq	$0, 504(%rax)
 1954      01000000 
 1954      000000
 1955 0371 4883E7F8 		andq	$-8, %rdi
 1956 0375 4829F8   		subq	%rdi, %rax
 1957              	.LVL203:
 1958              		.loc 2 71 10 view .LVU677
 1959 0378 8D880002 		leal	512(%rax), %ecx
 1959      0000
 1960 037e 31C0     		xorl	%eax, %eax
 1961 0380 C1E903   		shrl	$3, %ecx
 1962 0383 F348AB   		rep stosq
 1963              	.LVL204:
 1964              		.loc 2 71 10 view .LVU678
 1965              	.LBE13:
 1966              	.LBE12:
 205:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Main part of range limit table: limit[x] = x */
 1967              		.loc 1 205 3 is_stmt 1 view .LVU679
 205:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* Main part of range limit table: limit[x] = x */
 1968              		.loc 1 205 25 is_stmt 0 view .LVU680
 1969 0386 488B4530 		movq	48(%rbp), %rax
 1970 038a 488D9000 		leaq	512(%rax), %rdx
 1970      020000
 1971 0391 31C0     		xorl	%eax, %eax
 1972 0393 48895530 		movq	%rdx, 48(%rbp)
 207:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = (JSAMPLE) i;
 1973              		.loc 1 207 3 is_stmt 1 view .LVU681
 1974              	.LVL205:
 207:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = (JSAMPLE) i;
 1975              		.loc 1 207 15 view .LVU682
 1976 0397 EB0B     		jmp	.L136
 1977              	.LVL206:
 1978 0399 0F1F8000 		.p2align 4,,10
 1978      000000
 1979              		.p2align 3
 1980              	.L182:
 207:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = (JSAMPLE) i;
 1981              		.loc 1 207 15 is_stmt 0 view .LVU683
 1982 03a0 488B5530 		movq	48(%rbp), %rdx
 1983              	.LVL207:
 1984              	.L136:
 208:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* End of range limit table: limit[x] = MAXJSAMPLE for x > MAXJSAMPLE */
 1985              		.loc 1 208 5 is_stmt 1 view .LVU684
 208:fltk-1.3.4-1/jpeg/jdcolor.c ****   /* End of range limit table: limit[x] = MAXJSAMPLE for x > MAXJSAMPLE */
 1986              		.loc 1 208 30 is_stmt 0 view .LVU685
 1987 03a4 880402   		movb	%al, (%rdx,%rax)
 207:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = (JSAMPLE) i;
 1988              		.loc 1 207 32 is_stmt 1 view .LVU686
 1989              	.LVL208:
 207:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = (JSAMPLE) i;
 1990              		.loc 1 207 15 view .LVU687
 1991 03a7 4883C001 		addq	$1, %rax
 1992              	.LVL209:
 207:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = (JSAMPLE) i;
 1993              		.loc 1 207 3 is_stmt 0 view .LVU688
 1994 03ab 483D0001 		cmpq	$256, %rax
 1994      0000
 1995 03b1 75ED     		jne	.L182
 1996              		.p2align 4,,10
 1997 03b3 0F1F4400 		.p2align 3
 1997      00
 1998              	.L135:
 1999              	.LVL210:
 211:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 2000              		.loc 1 211 5 is_stmt 1 view .LVU689
 211:fltk-1.3.4-1/jpeg/jdcolor.c **** }
 2001              		.loc 1 211 30 is_stmt 0 view .LVU690
 2002 03b8 488B5530 		movq	48(%rbp), %rdx
 2003 03bc C60402FF 		movb	$-1, (%rdx,%rax)
 210:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = MAXJSAMPLE;
 2004              		.loc 1 210 34 is_stmt 1 view .LVU691
 2005              	.LVL211:
 210:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = MAXJSAMPLE;
 2006              		.loc 1 210 10 view .LVU692
 2007 03c0 4883C001 		addq	$1, %rax
 2008              	.LVL212:
 210:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = MAXJSAMPLE;
 2009              		.loc 1 210 3 is_stmt 0 view .LVU693
 2010 03c4 483D0003 		cmpq	$768, %rax
 2010      0000
 2011 03ca 75EC     		jne	.L135
 2012 03cc E909FEFF 		jmp	.L121
 2012      FF
 2013              	.LVL213:
 2014              		.p2align 4,,10
 2015 03d1 0F1F8000 		.p2align 3
 2015      000000
 2016              	.L112:
 210:fltk-1.3.4-1/jpeg/jdcolor.c ****     cconvert->range_limit[i] = MAXJSAMPLE;
 2017              		.loc 1 210 3 view .LVU694
 2018              	.LBE14:
 2019              	.LBE15:
 643:fltk-1.3.4-1/jpeg/jdcolor.c ****     switch (cinfo->jpeg_color_space) {
 2020              		.loc 1 643 5 is_stmt 1 view .LVU695
 643:fltk-1.3.4-1/jpeg/jdcolor.c ****     switch (cinfo->jpeg_color_space) {
 2021              		.loc 1 643 33 is_stmt 0 view .LVU696
 2022 03d8 C7839000 		movl	$1, 144(%rbx)
 2022      00000100 
 2022      0000
 644:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_GRAYSCALE:
 2023              		.loc 1 644 5 is_stmt 1 view .LVU697
 2024 03e2 83FA02   		cmpl	$2, %edx
 2025 03e5 0F848D00 		je	.L116
 2025      0000
 2026 03eb 767B     		jbe	.L183
 2027 03ed 83E2FB   		andl	$-5, %edx
 2028 03f0 83FA03   		cmpl	$3, %edx
 2029 03f3 0F85CFFD 		jne	.L146
 2029      FFFF
 2030              	.L118:
 648:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* For color->grayscale conversion, only the Y (0) component is needed */
 2031              		.loc 1 648 7 view .LVU698
 648:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* For color->grayscale conversion, only the Y (0) component is needed */
 2032              		.loc 1 648 35 is_stmt 0 view .LVU699
 2033 03f9 488D0500 		leaq	grayscale_convert(%rip), %rax
 2033      000000
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2034              		.loc 1 650 7 view .LVU700
 2035 0400 BA600000 		movl	$96, %edx
 2035      00
 648:fltk-1.3.4-1/jpeg/jdcolor.c ****       /* For color->grayscale conversion, only the Y (0) component is needed */
 2036              		.loc 1 648 35 view .LVU701
 2037 0405 48894508 		movq	%rax, 8(%rbp)
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2038              		.loc 1 650 7 is_stmt 1 view .LVU702
 2039              	.LVL214:
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2040              		.loc 1 650 20 view .LVU703
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2041              		.loc 1 650 7 is_stmt 0 view .LVU704
 2042 0409 837B3801 		cmpl	$1, 56(%rbx)
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2043              		.loc 1 650 15 view .LVU705
 2044 040d B8010000 		movl	$1, %eax
 2044      00
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2045              		.loc 1 650 7 view .LVU706
 2046 0412 0F8EC2FD 		jle	.L121
 2046      FFFF
 2047              	.LVL215:
 2048 0418 0F1F8400 		.p2align 4,,10
 2048      00000000 
 2049              		.p2align 3
 2050              	.L120:
 651:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2051              		.loc 1 651 2 is_stmt 1 discriminator 3 view .LVU707
 651:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2052              		.loc 1 651 40 is_stmt 0 discriminator 3 view .LVU708
 2053 0420 488B8B30 		movq	304(%rbx), %rcx
 2053      010000
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2054              		.loc 1 650 50 discriminator 3 view .LVU709
 2055 0427 83C001   		addl	$1, %eax
 2056              	.LVL216:
 651:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2057              		.loc 1 651 40 discriminator 3 view .LVU710
 2058 042a C7441134 		movl	$0, 52(%rcx,%rdx)
 2058      00000000 
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2059              		.loc 1 650 48 is_stmt 1 discriminator 3 view .LVU711
 2060              	.LVL217:
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2061              		.loc 1 650 20 discriminator 3 view .LVU712
 2062 0432 4883C260 		addq	$96, %rdx
 650:fltk-1.3.4-1/jpeg/jdcolor.c **** 	cinfo->comp_info[ci].component_needed = FALSE;
 2063              		.loc 1 650 7 is_stmt 0 discriminator 3 view .LVU713
 2064 0436 394338   		cmpl	%eax, 56(%rbx)
 2065 0439 7FE5     		jg	.L120
 2066 043b E99AFDFF 		jmp	.L121
 2066      FF
 2067              	.LVL218:
 2068              		.p2align 4,,10
 2069              		.p2align 3
 2070              	.L114:
 736:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->out_color_components = cinfo->num_components;
 2071              		.loc 1 736 5 is_stmt 1 view .LVU714
 736:fltk-1.3.4-1/jpeg/jdcolor.c ****       cinfo->out_color_components = cinfo->num_components;
 2072              		.loc 1 736 8 is_stmt 0 view .LVU715
 2073 0440 39D1     		cmpl	%edx, %ecx
 2074 0442 0F8580FD 		jne	.L146
 2074      FFFF
 737:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = null_convert;
 2075              		.loc 1 737 7 is_stmt 1 view .LVU716
 737:fltk-1.3.4-1/jpeg/jdcolor.c ****       cconvert->pub.color_convert = null_convert;
 2076              		.loc 1 737 35 is_stmt 0 view .LVU717
 2077 0448 8B4338   		movl	56(%rbx), %eax
 2078 044b 89839000 		movl	%eax, 144(%rbx)
 2078      0000
 2079              	.L174:
 738:fltk-1.3.4-1/jpeg/jdcolor.c ****     } else			/* unsupported non-null conversion */
 2080              		.loc 1 738 7 is_stmt 1 view .LVU718
 738:fltk-1.3.4-1/jpeg/jdcolor.c ****     } else			/* unsupported non-null conversion */
 2081              		.loc 1 738 35 is_stmt 0 view .LVU719
 2082 0451 488D0500 		leaq	null_convert(%rip), %rax
 2082      000000
 2083 0458 48894508 		movq	%rax, 8(%rbp)
 2084 045c E979FDFF 		jmp	.L121
 2084      FF
 2085              		.p2align 4,,10
 2086 0461 0F1F8000 		.p2align 3
 2086      000000
 2087              	.L183:
 738:fltk-1.3.4-1/jpeg/jdcolor.c ****     } else			/* unsupported non-null conversion */
 2088              		.loc 1 738 35 view .LVU720
 2089 0468 83FA01   		cmpl	$1, %edx
 2090 046b 0F8557FD 		jne	.L146
 2090      FFFF
 2091 0471 EB86     		jmp	.L118
 2092              		.p2align 4,,10
 2093 0473 0F1F4400 		.p2align 3
 2093      00
 2094              	.L116:
 654:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_NONE:
 2095              		.loc 1 654 7 is_stmt 1 discriminator 1 view .LVU721
 654:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_NONE:
 2096              		.loc 1 654 20 is_stmt 0 discriminator 1 view .LVU722
 2097 0478 8B838C01 		movl	396(%rbx), %eax
 2097      0000
 2098 047e 85C0     		testl	%eax, %eax
 2099 0480 0F84BA00 		je	.L123
 2099      0000
 2100 0486 83F801   		cmpl	$1, %eax
 2101 0489 0F859100 		jne	.L184
 2101      0000
 659:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 2102              		.loc 1 659 2 is_stmt 1 view .LVU723
 659:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 2103              		.loc 1 659 30 is_stmt 0 view .LVU724
 2104 048f 488D0500 		leaq	rgb1_gray_convert(%rip), %rax
 2104      000000
 2105 0496 48894508 		movq	%rax, 8(%rbp)
 660:fltk-1.3.4-1/jpeg/jdcolor.c ****       default:
 2106              		.loc 1 660 2 is_stmt 1 view .LVU725
 2107              	.L126:
 664:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2108              		.loc 1 664 7 view .LVU726
 2109              	.LVL219:
 2110              	.LBB16:
 2111              	.LBI16:
 277:fltk-1.3.4-1/jpeg/jdcolor.c **** {
 2112              		.loc 1 277 1 view .LVU727
 2113              	.LBB17:
 279:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 * rgb_y_tab;
 2114              		.loc 1 279 3 view .LVU728
 285:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(TABLE_SIZE * SIZEOF(INT32)));
 2115              		.loc 1 285 6 is_stmt 0 view .LVU729
 2116 049a 488B4308 		movq	8(%rbx), %rax
 279:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 * rgb_y_tab;
 2117              		.loc 1 279 19 view .LVU730
 2118 049e 488BAB88 		movq	648(%rbx), %rbp
 2118      020000
 2119              	.LVL220:
 280:fltk-1.3.4-1/jpeg/jdcolor.c ****   INT32 i;
 2120              		.loc 1 280 3 is_stmt 1 view .LVU731
 281:fltk-1.3.4-1/jpeg/jdcolor.c **** 
 2121              		.loc 1 281 3 view .LVU732
 284:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2122              		.loc 1 284 3 view .LVU733
 285:fltk-1.3.4-1/jpeg/jdcolor.c **** 				(TABLE_SIZE * SIZEOF(INT32)));
 2123              		.loc 1 285 6 is_stmt 0 view .LVU734
 2124 04a5 BA001800 		movl	$6144, %edx
 2124      00
 2125 04aa 4889DF   		movq	%rbx, %rdi
 2126 04ad BE010000 		movl	$1, %esi
 2126      00
 2127 04b2 FF10     		call	*(%rax)
 2128              	.LVL221:
 284:fltk-1.3.4-1/jpeg/jdcolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2129              		.loc 1 284 23 view .LVU735
 2130 04b4 BE008000 		movl	$32768, %esi
 2130      00
 2131 04b9 31C9     		xorl	%ecx, %ecx
 2132 04bb 31D2     		xorl	%edx, %edx
 2133 04bd 48894538 		movq	%rax, 56(%rbp)
 288:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+R_Y_OFF] = FIX(0.299) * i;
 2134              		.loc 1 288 3 is_stmt 1 view .LVU736
 2135              	.LVL222:
 288:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+R_Y_OFF] = FIX(0.299) * i;
 2136              		.loc 1 288 15 view .LVU737
 2137              		.p2align 4,,10
 2138 04c1 0F1F8000 		.p2align 3
 2138      000000
 2139              	.L127:
 289:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+G_Y_OFF] = FIX(0.587) * i;
 2140              		.loc 1 289 5 view .LVU738
 289:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+G_Y_OFF] = FIX(0.587) * i;
 2141              		.loc 1 289 26 is_stmt 0 view .LVU739
 2142 04c8 488910   		movq	%rdx, (%rax)
 290:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+B_Y_OFF] = FIX(0.114) * i + ONE_HALF;
 2143              		.loc 1 290 5 is_stmt 1 view .LVU740
 2144 04cb 4881C28B 		addq	$19595, %rdx
 2144      4C0000
 2145 04d2 4883C008 		addq	$8, %rax
 290:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+B_Y_OFF] = FIX(0.114) * i + ONE_HALF;
 2146              		.loc 1 290 26 is_stmt 0 view .LVU741
 2147 04d6 488988F8 		movq	%rcx, 2040(%rax)
 2147      070000
 291:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 2148              		.loc 1 291 5 is_stmt 1 view .LVU742
 2149 04dd 4881C146 		addq	$38470, %rcx
 2149      960000
 291:fltk-1.3.4-1/jpeg/jdcolor.c ****   }
 2150              		.loc 1 291 26 is_stmt 0 view .LVU743
 2151 04e4 4889B0F8 		movq	%rsi, 4088(%rax)
 2151      0F0000
 288:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+R_Y_OFF] = FIX(0.299) * i;
 2152              		.loc 1 288 32 is_stmt 1 view .LVU744
 288:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+R_Y_OFF] = FIX(0.299) * i;
 2153              		.loc 1 288 15 view .LVU745
 2154 04eb 4881C62F 		addq	$7471, %rsi
 2154      1D0000
 288:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+R_Y_OFF] = FIX(0.299) * i;
 2155              		.loc 1 288 3 is_stmt 0 view .LVU746
 2156 04f2 4881FA00 		cmpq	$5016320, %rdx
 2156      8B4C00
 2157 04f9 75CD     		jne	.L127
 2158 04fb E9DAFCFF 		jmp	.L121
 2158      FF
 2159              	.LVL223:
 2160              		.p2align 4,,10
 2161              		.p2align 3
 2162              	.L128:
 288:fltk-1.3.4-1/jpeg/jdcolor.c ****     rgb_y_tab[i+R_Y_OFF] = FIX(0.299) * i;
 2163              		.loc 1 288 3 view .LVU747
 2164              	.LBE17:
 2165              	.LBE16:
 678:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_ycc_rgb_table(cinfo);
 2166              		.loc 1 678 7 is_stmt 1 view .LVU748
 678:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_ycc_rgb_table(cinfo);
 2167              		.loc 1 678 35 is_stmt 0 view .LVU749
 2168 0500 488D0500 		leaq	ycc_rgb_convert(%rip), %rax
 2168      000000
 679:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2169              		.loc 1 679 7 view .LVU750
 2170 0507 4889DF   		movq	%rbx, %rdi
 678:fltk-1.3.4-1/jpeg/jdcolor.c ****       build_ycc_rgb_table(cinfo);
 2171              		.loc 1 678 35 view .LVU751
 2172 050a 48894508 		movq	%rax, 8(%rbp)
 679:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2173              		.loc 1 679 7 is_stmt 1 view .LVU752
 2174 050e E8000000 		call	build_ycc_rgb_table
 2174      00
 2175              	.LVL224:
 680:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_BG_YCC:
 2176              		.loc 1 680 7 view .LVU753
 2177 0513 E9C2FCFF 		jmp	.L121
 2177      FF
 2178 0518 0F1F8400 		.p2align 4,,10
 2178      00000000 
 2179              		.p2align 3
 2180              	.L184:
 662:fltk-1.3.4-1/jpeg/jdcolor.c ****       }
 2181              		.loc 1 662 2 view .LVU754
 2182 0520 488B03   		movq	(%rbx), %rax
 2183 0523 4889DF   		movq	%rbx, %rdi
 2184 0526 C740281C 		movl	$28, 40(%rax)
 2184      000000
 2185 052d 488B03   		movq	(%rbx), %rax
 2186 0530 FF10     		call	*(%rax)
 2187              	.LVL225:
 2188 0532 E963FFFF 		jmp	.L126
 2188      FF
 2189 0537 660F1F84 		.p2align 4,,10
 2189      00000000 
 2189      00
 2190              		.p2align 3
 2191              	.L123:
 656:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 2192              		.loc 1 656 2 view .LVU755
 656:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 2193              		.loc 1 656 30 is_stmt 0 view .LVU756
 2194 0540 488D0500 		leaq	rgb_gray_convert(%rip), %rax
 2194      000000
 2195 0547 48894508 		movq	%rax, 8(%rbp)
 657:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_SUBTRACT_GREEN:
 2196              		.loc 1 657 2 is_stmt 1 view .LVU757
 2197 054b E94AFFFF 		jmp	.L126
 2197      FF
 2198              		.p2align 4,,10
 2199              		.p2align 3
 2200              	.L130:
 675:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2201              		.loc 1 675 7 view .LVU758
 675:fltk-1.3.4-1/jpeg/jdcolor.c ****       break;
 2202              		.loc 1 675 35 is_stmt 0 view .LVU759
 2203 0550 488D0500 		leaq	gray_rgb_convert(%rip), %rax
 2203      000000
 2204 0557 48894508 		movq	%rax, 8(%rbp)
 676:fltk-1.3.4-1/jpeg/jdcolor.c ****     case JCS_YCbCr:
 2205              		.loc 1 676 7 is_stmt 1 view .LVU760
 2206 055b E97AFCFF 		jmp	.L121
 2206      FF
 2207              		.p2align 4,,10
 2208              		.p2align 3
 2209              	.L141:
 707:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 2210              		.loc 1 707 2 view .LVU761
 707:fltk-1.3.4-1/jpeg/jdcolor.c **** 	break;
 2211              		.loc 1 707 30 is_stmt 0 view .LVU762
 2212 0560 488D0500 		leaq	rgb_convert(%rip), %rax
 2212      000000
 2213 0567 48894508 		movq	%rax, 8(%rbp)
 708:fltk-1.3.4-1/jpeg/jdcolor.c ****       case JCT_SUBTRACT_GREEN:
 2214              		.loc 1 708 2 is_stmt 1 view .LVU763
 2215 056b E96AFCFF 		jmp	.L121
 2215      FF
 2216              		.cfi_endproc
 2217              	.LFE64:
 2219              		.text
 2220              	.Letext0:
 2221              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 2222              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 2223              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 2224              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 2225              		.file 7 "/usr/include/stdio.h"
 2226              		.file 8 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 2227              		.file 9 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 2228              		.file 10 "fltk-1.3.4-1/jpeg/jpeglib.h"
 2229              		.file 11 "fltk-1.3.4-1/jpeg/jpegint.h"
 2230              		.file 12 "fltk-1.3.4-1/jpeg/jerror.h"
 17892              		.section	.note.gnu.property,"a"
 17893              		.align 8
 17894 0000 04000000 		.long	 1f - 0f
 17895 0004 10000000 		.long	 4f - 1f
 17896 0008 05000000 		.long	 5
 17897              	0:
 17898 000c 474E5500 		.string	 "GNU"
 17899              	1:
 17900              		.align 8
 17901 0010 020000C0 		.long	 0xc0000002
 17902 0014 04000000 		.long	 3f - 2f
 17903              	2:
 17904 0018 03000000 		.long	 0x3
 17905              	3:
 17906 001c 00000000 		.align 8
 17907              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jdcolor.c
     /tmp/ccsadx1C.s:7      .text.build_ycc_rgb_table:0000000000000000 build_ycc_rgb_table
     /tmp/ccsadx1C.s:148    .text.ycc_rgb_convert:0000000000000000 ycc_rgb_convert
     /tmp/ccsadx1C.s:368    .text.rgb_gray_convert:0000000000000000 rgb_gray_convert
     /tmp/ccsadx1C.s:519    .text.rgb1_rgb_convert:0000000000000000 rgb1_rgb_convert
     /tmp/ccsadx1C.s:674    .text.rgb1_gray_convert:0000000000000000 rgb1_gray_convert
     /tmp/ccsadx1C.s:847    .text.rgb_convert:0000000000000000 rgb_convert
     /tmp/ccsadx1C.s:976    .text.null_convert:0000000000000000 null_convert
     /tmp/ccsadx1C.s:1139   .text.gray_rgb_convert:0000000000000000 gray_rgb_convert
     /tmp/ccsadx1C.s:1237   .text.ycck_cmyk_convert:0000000000000000 ycck_cmyk_convert
     /tmp/ccsadx1C.s:1493   .text.start_pass_dcolor:0000000000000000 start_pass_dcolor
     /tmp/ccsadx1C.s:1508   .text.grayscale_convert:0000000000000000 grayscale_convert
     /tmp/ccsadx1C.s:1543   .text.jinit_color_deconverter:0000000000000000 jinit_color_deconverter
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
jcopy_sample_rows
