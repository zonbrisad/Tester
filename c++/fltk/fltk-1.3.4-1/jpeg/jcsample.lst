   1              		.file	"jcsample.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.start_pass_downsample,"ax",@progbits
   5              		.p2align 4
   7              	start_pass_downsample:
   8              	.LVL0:
   9              	.LFB51:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jcsample.c"
   1:fltk-1.3.4-1/jpeg/jcsample.c **** /*
   2:fltk-1.3.4-1/jpeg/jcsample.c ****  * jcsample.c
   3:fltk-1.3.4-1/jpeg/jcsample.c ****  *
   4:fltk-1.3.4-1/jpeg/jcsample.c ****  * Copyright (C) 1991-1996, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jcsample.c ****  * This file is part of the Independent JPEG Group's software.
   6:fltk-1.3.4-1/jpeg/jcsample.c ****  * For conditions of distribution and use, see the accompanying README file.
   7:fltk-1.3.4-1/jpeg/jcsample.c ****  *
   8:fltk-1.3.4-1/jpeg/jcsample.c ****  * This file contains downsampling routines.
   9:fltk-1.3.4-1/jpeg/jcsample.c ****  *
  10:fltk-1.3.4-1/jpeg/jcsample.c ****  * Downsampling input data is counted in "row groups".  A row group
  11:fltk-1.3.4-1/jpeg/jcsample.c ****  * is defined to be max_v_samp_factor pixel rows of each component,
  12:fltk-1.3.4-1/jpeg/jcsample.c ****  * from which the downsampler produces v_samp_factor sample rows.
  13:fltk-1.3.4-1/jpeg/jcsample.c ****  * A single row group is processed in each call to the downsampler module.
  14:fltk-1.3.4-1/jpeg/jcsample.c ****  *
  15:fltk-1.3.4-1/jpeg/jcsample.c ****  * The downsampler is responsible for edge-expansion of its output data
  16:fltk-1.3.4-1/jpeg/jcsample.c ****  * to fill an integral number of DCT blocks horizontally.  The source buffer
  17:fltk-1.3.4-1/jpeg/jcsample.c ****  * may be modified if it is helpful for this purpose (the source buffer is
  18:fltk-1.3.4-1/jpeg/jcsample.c ****  * allocated wide enough to correspond to the desired output width).
  19:fltk-1.3.4-1/jpeg/jcsample.c ****  * The caller (the prep controller) is responsible for vertical padding.
  20:fltk-1.3.4-1/jpeg/jcsample.c ****  *
  21:fltk-1.3.4-1/jpeg/jcsample.c ****  * The downsampler may request "context rows" by setting need_context_rows
  22:fltk-1.3.4-1/jpeg/jcsample.c ****  * during startup.  In this case, the input arrays will contain at least
  23:fltk-1.3.4-1/jpeg/jcsample.c ****  * one row group's worth of pixels above and below the passed-in data;
  24:fltk-1.3.4-1/jpeg/jcsample.c ****  * the caller will create dummy rows at image top and bottom by replicating
  25:fltk-1.3.4-1/jpeg/jcsample.c ****  * the first or last real pixel row.
  26:fltk-1.3.4-1/jpeg/jcsample.c ****  *
  27:fltk-1.3.4-1/jpeg/jcsample.c ****  * An excellent reference for image resampling is
  28:fltk-1.3.4-1/jpeg/jcsample.c ****  *   Digital Image Warping, George Wolberg, 1990.
  29:fltk-1.3.4-1/jpeg/jcsample.c ****  *   Pub. by IEEE Computer Society Press, Los Alamitos, CA. ISBN 0-8186-8944-7.
  30:fltk-1.3.4-1/jpeg/jcsample.c ****  *
  31:fltk-1.3.4-1/jpeg/jcsample.c ****  * The downsampling algorithm used here is a simple average of the source
  32:fltk-1.3.4-1/jpeg/jcsample.c ****  * pixels covered by the output pixel.  The hi-falutin sampling literature
  33:fltk-1.3.4-1/jpeg/jcsample.c ****  * refers to this as a "box filter".  In general the characteristics of a box
  34:fltk-1.3.4-1/jpeg/jcsample.c ****  * filter are not very good, but for the specific cases we normally use (1:1
  35:fltk-1.3.4-1/jpeg/jcsample.c ****  * and 2:1 ratios) the box is equivalent to a "triangle filter" which is not
  36:fltk-1.3.4-1/jpeg/jcsample.c ****  * nearly so bad.  If you intend to use other sampling ratios, you'd be well
  37:fltk-1.3.4-1/jpeg/jcsample.c ****  * advised to improve this code.
  38:fltk-1.3.4-1/jpeg/jcsample.c ****  *
  39:fltk-1.3.4-1/jpeg/jcsample.c ****  * A simple input-smoothing capability is provided.  This is mainly intended
  40:fltk-1.3.4-1/jpeg/jcsample.c ****  * for cleaning up color-dithered GIF input files (if you find it inadequate,
  41:fltk-1.3.4-1/jpeg/jcsample.c ****  * we suggest using an external filtering program such as pnmconvol).  When
  42:fltk-1.3.4-1/jpeg/jcsample.c ****  * enabled, each input pixel P is replaced by a weighted sum of itself and its
  43:fltk-1.3.4-1/jpeg/jcsample.c ****  * eight neighbors.  P's weight is 1-8*SF and each neighbor's weight is SF,
  44:fltk-1.3.4-1/jpeg/jcsample.c ****  * where SF = (smoothing_factor / 1024).
  45:fltk-1.3.4-1/jpeg/jcsample.c ****  * Currently, smoothing is only supported for 2h2v sampling factors.
  46:fltk-1.3.4-1/jpeg/jcsample.c ****  */
  47:fltk-1.3.4-1/jpeg/jcsample.c **** 
  48:fltk-1.3.4-1/jpeg/jcsample.c **** #define JPEG_INTERNALS
  49:fltk-1.3.4-1/jpeg/jcsample.c **** #include "jinclude.h"
  50:fltk-1.3.4-1/jpeg/jcsample.c **** #include "jpeglib.h"
  51:fltk-1.3.4-1/jpeg/jcsample.c **** 
  52:fltk-1.3.4-1/jpeg/jcsample.c **** 
  53:fltk-1.3.4-1/jpeg/jcsample.c **** /* Pointer to routine to downsample a single component */
  54:fltk-1.3.4-1/jpeg/jcsample.c **** typedef JMETHOD(void, downsample1_ptr,
  55:fltk-1.3.4-1/jpeg/jcsample.c **** 		(j_compress_ptr cinfo, jpeg_component_info * compptr,
  56:fltk-1.3.4-1/jpeg/jcsample.c **** 		 JSAMPARRAY input_data, JSAMPARRAY output_data));
  57:fltk-1.3.4-1/jpeg/jcsample.c **** 
  58:fltk-1.3.4-1/jpeg/jcsample.c **** /* Private subobject */
  59:fltk-1.3.4-1/jpeg/jcsample.c **** 
  60:fltk-1.3.4-1/jpeg/jcsample.c **** typedef struct {
  61:fltk-1.3.4-1/jpeg/jcsample.c ****   struct jpeg_downsampler pub;	/* public fields */
  62:fltk-1.3.4-1/jpeg/jcsample.c **** 
  63:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Downsampling method pointers, one per component */
  64:fltk-1.3.4-1/jpeg/jcsample.c ****   downsample1_ptr methods[MAX_COMPONENTS];
  65:fltk-1.3.4-1/jpeg/jcsample.c **** 
  66:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Height of an output row group for each component. */
  67:fltk-1.3.4-1/jpeg/jcsample.c ****   int rowgroup_height[MAX_COMPONENTS];
  68:fltk-1.3.4-1/jpeg/jcsample.c **** 
  69:fltk-1.3.4-1/jpeg/jcsample.c ****   /* These arrays save pixel expansion factors so that int_downsample need not
  70:fltk-1.3.4-1/jpeg/jcsample.c ****    * recompute them each time.  They are unused for other downsampling methods.
  71:fltk-1.3.4-1/jpeg/jcsample.c ****    */
  72:fltk-1.3.4-1/jpeg/jcsample.c ****   UINT8 h_expand[MAX_COMPONENTS];
  73:fltk-1.3.4-1/jpeg/jcsample.c ****   UINT8 v_expand[MAX_COMPONENTS];
  74:fltk-1.3.4-1/jpeg/jcsample.c **** } my_downsampler;
  75:fltk-1.3.4-1/jpeg/jcsample.c **** 
  76:fltk-1.3.4-1/jpeg/jcsample.c **** typedef my_downsampler * my_downsample_ptr;
  77:fltk-1.3.4-1/jpeg/jcsample.c **** 
  78:fltk-1.3.4-1/jpeg/jcsample.c **** 
  79:fltk-1.3.4-1/jpeg/jcsample.c **** /*
  80:fltk-1.3.4-1/jpeg/jcsample.c ****  * Initialize for a downsampling pass.
  81:fltk-1.3.4-1/jpeg/jcsample.c ****  */
  82:fltk-1.3.4-1/jpeg/jcsample.c **** 
  83:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
  84:fltk-1.3.4-1/jpeg/jcsample.c **** start_pass_downsample (j_compress_ptr cinfo)
  85:fltk-1.3.4-1/jpeg/jcsample.c **** {
  11              		.loc 1 85 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 85 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
  86:fltk-1.3.4-1/jpeg/jcsample.c ****   /* no work for now */
  87:fltk-1.3.4-1/jpeg/jcsample.c **** }
  15              		.loc 1 87 1 is_stmt 1 view .LVU2
  16 0004 C3       		ret
  17              		.cfi_endproc
  18              	.LFE51:
  20              		.section	.text.sep_downsample,"ax",@progbits
  21              		.p2align 4
  23              	sep_downsample:
  24              	.LVL1:
  25              	.LFB53:
  88:fltk-1.3.4-1/jpeg/jcsample.c **** 
  89:fltk-1.3.4-1/jpeg/jcsample.c **** 
  90:fltk-1.3.4-1/jpeg/jcsample.c **** /*
  91:fltk-1.3.4-1/jpeg/jcsample.c ****  * Expand a component horizontally from width input_cols to width output_cols,
  92:fltk-1.3.4-1/jpeg/jcsample.c ****  * by duplicating the rightmost samples.
  93:fltk-1.3.4-1/jpeg/jcsample.c ****  */
  94:fltk-1.3.4-1/jpeg/jcsample.c **** 
  95:fltk-1.3.4-1/jpeg/jcsample.c **** LOCAL(void)
  96:fltk-1.3.4-1/jpeg/jcsample.c **** expand_right_edge (JSAMPARRAY image_data, int num_rows,
  97:fltk-1.3.4-1/jpeg/jcsample.c **** 		   JDIMENSION input_cols, JDIMENSION output_cols)
  98:fltk-1.3.4-1/jpeg/jcsample.c **** {
  99:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW ptr;
 100:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPLE pixval;
 101:fltk-1.3.4-1/jpeg/jcsample.c ****   register int count;
 102:fltk-1.3.4-1/jpeg/jcsample.c ****   int row;
 103:fltk-1.3.4-1/jpeg/jcsample.c ****   int numcols = (int) (output_cols - input_cols);
 104:fltk-1.3.4-1/jpeg/jcsample.c **** 
 105:fltk-1.3.4-1/jpeg/jcsample.c ****   if (numcols > 0) {
 106:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 109:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 110:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 111:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 112:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 113:fltk-1.3.4-1/jpeg/jcsample.c **** }
 114:fltk-1.3.4-1/jpeg/jcsample.c **** 
 115:fltk-1.3.4-1/jpeg/jcsample.c **** 
 116:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 117:fltk-1.3.4-1/jpeg/jcsample.c ****  * Do downsampling for a whole row group (all components).
 118:fltk-1.3.4-1/jpeg/jcsample.c ****  *
 119:fltk-1.3.4-1/jpeg/jcsample.c ****  * In this version we simply downsample each component independently.
 120:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 121:fltk-1.3.4-1/jpeg/jcsample.c **** 
 122:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
 123:fltk-1.3.4-1/jpeg/jcsample.c **** sep_downsample (j_compress_ptr cinfo,
 124:fltk-1.3.4-1/jpeg/jcsample.c **** 		JSAMPIMAGE input_buf, JDIMENSION in_row_index,
 125:fltk-1.3.4-1/jpeg/jcsample.c **** 		JSAMPIMAGE output_buf, JDIMENSION out_row_group_index)
 126:fltk-1.3.4-1/jpeg/jcsample.c **** {
  26              		.loc 1 126 1 view -0
  27              		.cfi_startproc
  28              		.loc 1 126 1 is_stmt 0 view .LVU4
  29 0000 F30F1EFA 		endbr64
 127:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
  30              		.loc 1 127 3 is_stmt 1 view .LVU5
 126:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
  31              		.loc 1 126 1 is_stmt 0 view .LVU6
  32 0004 4157     		pushq	%r15
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 15, -16
  35 0006 4156     		pushq	%r14
  36              		.cfi_def_cfa_offset 24
  37              		.cfi_offset 14, -24
  38 0008 4155     		pushq	%r13
  39              		.cfi_def_cfa_offset 32
  40              		.cfi_offset 13, -32
  41 000a 4154     		pushq	%r12
  42              		.cfi_def_cfa_offset 40
  43              		.cfi_offset 12, -40
  44 000c 55       		pushq	%rbp
  45              		.cfi_def_cfa_offset 48
  46              		.cfi_offset 6, -48
  47 000d 53       		pushq	%rbx
  48              		.cfi_def_cfa_offset 56
  49              		.cfi_offset 3, -56
  50 000e 4883EC18 		subq	$24, %rsp
  51              		.cfi_def_cfa_offset 80
 128:fltk-1.3.4-1/jpeg/jcsample.c ****   int ci;
 129:fltk-1.3.4-1/jpeg/jcsample.c ****   jpeg_component_info * compptr;
 130:fltk-1.3.4-1/jpeg/jcsample.c ****   JSAMPARRAY in_ptr, out_ptr;
 131:fltk-1.3.4-1/jpeg/jcsample.c **** 
 132:fltk-1.3.4-1/jpeg/jcsample.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
  52              		.loc 1 132 3 view .LVU7
  53 0012 8B475C   		movl	92(%rdi), %eax
 127:fltk-1.3.4-1/jpeg/jcsample.c ****   int ci;
  54              		.loc 1 127 21 view .LVU8
  55 0015 4C8BAF20 		movq	544(%rdi), %r13
  55      020000
  56              	.LVL2:
 128:fltk-1.3.4-1/jpeg/jcsample.c ****   int ci;
  57              		.loc 1 128 3 is_stmt 1 view .LVU9
 129:fltk-1.3.4-1/jpeg/jcsample.c ****   JSAMPARRAY in_ptr, out_ptr;
  58              		.loc 1 129 3 view .LVU10
 130:fltk-1.3.4-1/jpeg/jcsample.c **** 
  59              		.loc 1 130 3 view .LVU11
  60              		.loc 1 132 3 view .LVU12
 126:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
  61              		.loc 1 126 1 is_stmt 0 view .LVU13
  62 001c 48893424 		movq	%rsi, (%rsp)
  63              		.loc 1 132 24 view .LVU14
  64 0020 488B6F68 		movq	104(%rdi), %rbp
  65              	.LVL3:
  66              		.loc 1 132 44 is_stmt 1 view .LVU15
  67              		.loc 1 132 3 is_stmt 0 view .LVU16
  68 0024 85C0     		testl	%eax, %eax
  69 0026 7E58     		jle	.L3
 133:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 134:fltk-1.3.4-1/jpeg/jcsample.c ****     in_ptr = input_buf[ci] + in_row_index;
  70              		.loc 1 134 28 view .LVU17
  71 0028 89D2     		movl	%edx, %edx
  72              		.loc 1 134 28 view .LVU18
  73 002a 4989FC   		movq	%rdi, %r12
  74 002d 4989CE   		movq	%rcx, %r14
  75 0030 4589C7   		movl	%r8d, %r15d
  76 0033 488D04D5 		leaq	0(,%rdx,8), %rax
  76      00000000 
  77 003b 31DB     		xorl	%ebx, %ebx
  78 003d 48894424 		movq	%rax, 8(%rsp)
  78      08
  79              	.LVL4:
  80              		.p2align 4,,10
  81 0042 660F1F44 		.p2align 3
  81      0000
  82              	.L5:
  83              		.loc 1 134 5 is_stmt 1 view .LVU19
 135:fltk-1.3.4-1/jpeg/jcsample.c ****     out_ptr = output_buf[ci] +
  84              		.loc 1 135 5 view .LVU20
 136:fltk-1.3.4-1/jpeg/jcsample.c **** 	      (out_row_group_index * downsample->rowgroup_height[ci]);
 137:fltk-1.3.4-1/jpeg/jcsample.c ****     (*downsample->methods[ci]) (cinfo, compptr, in_ptr, out_ptr);
  85              		.loc 1 137 5 view .LVU21
 136:fltk-1.3.4-1/jpeg/jcsample.c **** 	      (out_row_group_index * downsample->rowgroup_height[ci]);
  86              		.loc 1 136 29 is_stmt 0 view .LVU22
  87 0048 4489F9   		movl	%r15d, %ecx
  88 004b 410FAF4C 		imull	104(%r13,%rbx,4), %ecx
  88      9D68
 135:fltk-1.3.4-1/jpeg/jcsample.c ****     out_ptr = output_buf[ci] +
  89              		.loc 1 135 13 view .LVU23
  90 0051 498B14DE 		movq	(%r14,%rbx,8), %rdx
  91              		.loc 1 137 6 view .LVU24
  92 0055 4889EE   		movq	%rbp, %rsi
 134:fltk-1.3.4-1/jpeg/jcsample.c ****     out_ptr = output_buf[ci] +
  93              		.loc 1 134 12 view .LVU25
  94 0058 488B0424 		movq	(%rsp), %rax
  95              		.loc 1 137 6 view .LVU26
  96 005c 4C89E7   		movq	%r12, %rdi
 133:fltk-1.3.4-1/jpeg/jcsample.c ****     in_ptr = input_buf[ci] + in_row_index;
  97              		.loc 1 133 21 view .LVU27
  98 005f 4883C560 		addq	$96, %rbp
  99              	.LVL5:
 135:fltk-1.3.4-1/jpeg/jcsample.c **** 	      (out_row_group_index * downsample->rowgroup_height[ci]);
 100              		.loc 1 135 13 view .LVU28
 101 0063 488D0CCA 		leaq	(%rdx,%rcx,8), %rcx
 134:fltk-1.3.4-1/jpeg/jcsample.c ****     out_ptr = output_buf[ci] +
 102              		.loc 1 134 12 view .LVU29
 103 0067 488B5424 		movq	8(%rsp), %rdx
 103      08
 104 006c 480314D8 		addq	(%rax,%rbx,8), %rdx
 105              		.loc 1 137 6 view .LVU30
 106 0070 41FF54DD 		call	*24(%r13,%rbx,8)
 106      18
 107              	.LVL6:
 133:fltk-1.3.4-1/jpeg/jcsample.c ****     in_ptr = input_buf[ci] + in_row_index;
 108              		.loc 1 133 8 is_stmt 1 view .LVU31
 132:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 109              		.loc 1 132 44 view .LVU32
 110 0075 4883C301 		addq	$1, %rbx
 111              	.LVL7:
 132:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 112              		.loc 1 132 3 is_stmt 0 view .LVU33
 113 0079 41395C24 		cmpl	%ebx, 92(%r12)
 113      5C
 114 007e 7FC8     		jg	.L5
 115              	.LVL8:
 116              	.L3:
 138:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 139:fltk-1.3.4-1/jpeg/jcsample.c **** }
 117              		.loc 1 139 1 view .LVU34
 118 0080 4883C418 		addq	$24, %rsp
 119              		.cfi_def_cfa_offset 56
 120              	.LVL9:
 121              		.loc 1 139 1 view .LVU35
 122 0084 5B       		popq	%rbx
 123              		.cfi_def_cfa_offset 48
 124 0085 5D       		popq	%rbp
 125              		.cfi_def_cfa_offset 40
 126              	.LVL10:
 127              		.loc 1 139 1 view .LVU36
 128 0086 415C     		popq	%r12
 129              		.cfi_def_cfa_offset 32
 130 0088 415D     		popq	%r13
 131              		.cfi_def_cfa_offset 24
 132              	.LVL11:
 133              		.loc 1 139 1 view .LVU37
 134 008a 415E     		popq	%r14
 135              		.cfi_def_cfa_offset 16
 136 008c 415F     		popq	%r15
 137              		.cfi_def_cfa_offset 8
 138 008e C3       		ret
 139              		.cfi_endproc
 140              	.LFE53:
 142              		.section	.text.int_downsample,"ax",@progbits
 143              		.p2align 4
 145              	int_downsample:
 146              	.LVL12:
 147              	.LFB54:
 140:fltk-1.3.4-1/jpeg/jcsample.c **** 
 141:fltk-1.3.4-1/jpeg/jcsample.c **** 
 142:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 143:fltk-1.3.4-1/jpeg/jcsample.c ****  * Downsample pixel values of a single component.
 144:fltk-1.3.4-1/jpeg/jcsample.c ****  * One row group is processed per call.
 145:fltk-1.3.4-1/jpeg/jcsample.c ****  * This version handles arbitrary integral sampling ratios, without smoothing.
 146:fltk-1.3.4-1/jpeg/jcsample.c ****  * Note that this version is not actually used for customary sampling ratios.
 147:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 148:fltk-1.3.4-1/jpeg/jcsample.c **** 
 149:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
 150:fltk-1.3.4-1/jpeg/jcsample.c **** int_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,
 151:fltk-1.3.4-1/jpeg/jcsample.c **** 		JSAMPARRAY input_data, JSAMPARRAY output_data)
 152:fltk-1.3.4-1/jpeg/jcsample.c **** {
 148              		.loc 1 152 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		.loc 1 152 1 is_stmt 0 view .LVU39
 151 0000 F30F1EFA 		endbr64
 153:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
 152              		.loc 1 153 3 is_stmt 1 view .LVU40
 152:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
 153              		.loc 1 152 1 is_stmt 0 view .LVU41
 154 0004 4157     		pushq	%r15
 155              		.cfi_def_cfa_offset 16
 156              		.cfi_offset 15, -16
 157 0006 4889F0   		movq	%rsi, %rax
 158 0009 4989CB   		movq	%rcx, %r11
 159 000c 4889D6   		movq	%rdx, %rsi
 160              	.LVL13:
 152:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
 161              		.loc 1 152 1 view .LVU42
 162 000f 4156     		pushq	%r14
 163              		.cfi_def_cfa_offset 24
 164              		.cfi_offset 14, -24
 165 0011 4155     		pushq	%r13
 166              		.cfi_def_cfa_offset 32
 167              		.cfi_offset 13, -32
 168 0013 4154     		pushq	%r12
 169              		.cfi_def_cfa_offset 40
 170              		.cfi_offset 12, -40
 171 0015 55       		pushq	%rbp
 172              		.cfi_def_cfa_offset 48
 173              		.cfi_offset 6, -48
 174 0016 53       		pushq	%rbx
 175              		.cfi_def_cfa_offset 56
 176              		.cfi_offset 3, -56
 177              		.loc 1 153 21 view .LVU43
 178 0017 488B9720 		movq	544(%rdi), %rdx
 178      020000
 179              	.LVL14:
 154:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow, h_expand, v_expand, numpix, numpix2, h, v;
 180              		.loc 1 154 3 is_stmt 1 view .LVU44
 155:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION outcol, outcol_h;	/* outcol_h == outcol*h_expand */
 181              		.loc 1 155 3 view .LVU45
 156:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION output_cols = compptr->width_in_blocks * compptr->DCT_h_scaled_size;
 182              		.loc 1 156 3 view .LVU46
 152:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
 183              		.loc 1 152 1 is_stmt 0 view .LVU47
 184 001e 4889FB   		movq	%rdi, %rbx
 185              		.loc 1 156 14 view .LVU48
 186 0021 8B481C   		movl	28(%rax), %ecx
 187              	.LVL15:
 188              		.loc 1 156 14 view .LVU49
 189 0024 0FAF4824 		imull	36(%rax), %ecx
 157:fltk-1.3.4-1/jpeg/jcsample.c ****   JSAMPROW inptr, outptr;
 158:fltk-1.3.4-1/jpeg/jcsample.c ****   INT32 outvalue;
 159:fltk-1.3.4-1/jpeg/jcsample.c **** 
 160:fltk-1.3.4-1/jpeg/jcsample.c ****   h_expand = downsample->h_expand[compptr->component_index];
 190              		.loc 1 160 34 view .LVU50
 191 0028 48634004 		movslq	4(%rax), %rax
 192              	.LVL16:
 161:fltk-1.3.4-1/jpeg/jcsample.c ****   v_expand = downsample->v_expand[compptr->component_index];
 162:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix = h_expand * v_expand;
 163:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix2 = numpix/2;
 164:fltk-1.3.4-1/jpeg/jcsample.c **** 
 165:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Expand input data enough to let all the output samples be generated
 166:fltk-1.3.4-1/jpeg/jcsample.c ****    * by the standard loop.  Special-casing padded output would be more
 167:fltk-1.3.4-1/jpeg/jcsample.c ****    * efficient.
 168:fltk-1.3.4-1/jpeg/jcsample.c ****    */
 169:fltk-1.3.4-1/jpeg/jcsample.c ****   expand_right_edge(input_data, cinfo->max_v_samp_factor,
 193              		.loc 1 169 3 view .LVU51
 194 002c 448B5330 		movl	48(%rbx), %r10d
 152:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample = (my_downsample_ptr) cinfo->downsample;
 195              		.loc 1 152 1 view .LVU52
 196 0030 48897C24 		movq	%rdi, -32(%rsp)
 196      E0
 160:fltk-1.3.4-1/jpeg/jcsample.c ****   v_expand = downsample->v_expand[compptr->component_index];
 197              		.loc 1 160 12 view .LVU53
 198 0035 0FB6BC02 		movzbl	144(%rdx,%rax), %edi
 198      90000000 
 199              	.LVL17:
 161:fltk-1.3.4-1/jpeg/jcsample.c ****   v_expand = downsample->v_expand[compptr->component_index];
 200              		.loc 1 161 34 view .LVU54
 201 003d 0FB6AC02 		movzbl	154(%rdx,%rax), %ebp
 201      9A000000 
 202              		.loc 1 169 3 view .LVU55
 203 0045 89CA     		movl	%ecx, %edx
 204              	.LVL18:
 156:fltk-1.3.4-1/jpeg/jcsample.c ****   JSAMPROW inptr, outptr;
 205              		.loc 1 156 14 view .LVU56
 206 0047 894C24DC 		movl	%ecx, -36(%rsp)
 207              	.LVL19:
 157:fltk-1.3.4-1/jpeg/jcsample.c ****   INT32 outvalue;
 208              		.loc 1 157 3 is_stmt 1 view .LVU57
 158:fltk-1.3.4-1/jpeg/jcsample.c **** 
 209              		.loc 1 158 3 view .LVU58
 160:fltk-1.3.4-1/jpeg/jcsample.c ****   v_expand = downsample->v_expand[compptr->component_index];
 210              		.loc 1 160 3 view .LVU59
 161:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix = h_expand * v_expand;
 211              		.loc 1 161 3 view .LVU60
 162:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix2 = numpix/2;
 212              		.loc 1 162 10 is_stmt 0 view .LVU61
 213 004b 89F8     		movl	%edi, %eax
 214              		.loc 1 169 3 view .LVU62
 215 004d 0FAFD7   		imull	%edi, %edx
 216              	.LVL20:
 161:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix = h_expand * v_expand;
 217              		.loc 1 161 34 view .LVU63
 218 0050 4189E8   		movl	%ebp, %r8d
 219              	.LVL21:
 162:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix2 = numpix/2;
 220              		.loc 1 162 3 is_stmt 1 view .LVU64
 162:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix2 = numpix/2;
 221              		.loc 1 162 10 is_stmt 0 view .LVU65
 222 0053 0FAFC5   		imull	%ebp, %eax
 223              	.LBB14:
 224              	.LBB15:
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 225              		.loc 1 103 36 view .LVU66
 226 0056 4429D2   		subl	%r10d, %edx
 227              	.LBE15:
 228              	.LBE14:
 162:fltk-1.3.4-1/jpeg/jcsample.c ****   numpix2 = numpix/2;
 229              		.loc 1 162 10 view .LVU67
 230 0059 894424F0 		movl	%eax, -16(%rsp)
 231              	.LVL22:
 163:fltk-1.3.4-1/jpeg/jcsample.c **** 
 232              		.loc 1 163 3 is_stmt 1 view .LVU68
 163:fltk-1.3.4-1/jpeg/jcsample.c **** 
 233              		.loc 1 163 11 is_stmt 0 view .LVU69
 234 005d D1F8     		sarl	%eax
 235              	.LVL23:
 163:fltk-1.3.4-1/jpeg/jcsample.c **** 
 236              		.loc 1 163 11 view .LVU70
 237 005f 894424F4 		movl	%eax, -12(%rsp)
 238              	.LVL24:
 239              		.loc 1 169 3 is_stmt 1 view .LVU71
 240 0063 8B836401 		movl	356(%rbx), %eax
 240      0000
 241              	.LVL25:
 242              	.LBB17:
 243              	.LBI14:
  96:fltk-1.3.4-1/jpeg/jcsample.c **** 		   JDIMENSION input_cols, JDIMENSION output_cols)
 244              		.loc 1 96 1 view .LVU72
 245              	.LBB16:
  99:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPLE pixval;
 246              		.loc 1 99 3 view .LVU73
 100:fltk-1.3.4-1/jpeg/jcsample.c ****   register int count;
 247              		.loc 1 100 3 view .LVU74
 101:fltk-1.3.4-1/jpeg/jcsample.c ****   int row;
 248              		.loc 1 101 3 view .LVU75
 102:fltk-1.3.4-1/jpeg/jcsample.c ****   int numcols = (int) (output_cols - input_cols);
 249              		.loc 1 102 3 view .LVU76
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 250              		.loc 1 103 3 view .LVU77
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 251              		.loc 1 105 3 view .LVU78
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 252              		.loc 1 105 6 is_stmt 0 view .LVU79
 253 0069 85D2     		testl	%edx, %edx
 254 006b 7E48     		jle	.L9
 255              	.LVL26:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 256              		.loc 1 106 19 is_stmt 1 view .LVU80
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 257              		.loc 1 106 5 is_stmt 0 view .LVU81
 258 006d 85C0     		testl	%eax, %eax
 259 006f 0F8E3801 		jle	.L8
 259      0000
 260 0075 83E801   		subl	$1, %eax
 261              	.LVL27:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 262              		.loc 1 106 5 view .LVU82
 263 0078 8D5AFF   		leal	-1(%rdx), %ebx
 264              	.LVL28:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 265              		.loc 1 106 5 view .LVU83
 266 007b 4989F1   		movq	%rsi, %r9
 267 007e 4C8D64C6 		leaq	8(%rsi,%rax,8), %r12
 267      08
 268 0083 4883C301 		addq	$1, %rbx
 269              	.LVL29:
 270              	.L12:
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 271              		.loc 1 107 7 is_stmt 1 view .LVU84
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 272              		.loc 1 107 11 is_stmt 0 view .LVU85
 273 0087 498B01   		movq	(%r9), %rax
 274 008a 4C01D0   		addq	%r10, %rax
 275              	.LVL30:
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 276              		.loc 1 108 7 is_stmt 1 view .LVU86
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 277              		.loc 1 108 14 is_stmt 0 view .LVU87
 278 008d 0FB648FF 		movzbl	-1(%rax), %ecx
 279              	.LVL31:
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 280              		.loc 1 109 7 is_stmt 1 view .LVU88
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 281              		.loc 1 109 29 view .LVU89
 282 0091 488D1418 		leaq	(%rax,%rbx), %rdx
 283              	.L11:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 284              		.loc 1 110 2 view .LVU90
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 285              		.loc 1 110 6 is_stmt 0 view .LVU91
 286 0095 4883C001 		addq	$1, %rax
 287              	.LVL32:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 288              		.loc 1 110 9 view .LVU92
 289 0099 8848FF   		movb	%cl, -1(%rax)
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 290              		.loc 1 109 40 is_stmt 1 view .LVU93
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 291              		.loc 1 109 29 view .LVU94
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 292              		.loc 1 109 7 is_stmt 0 view .LVU95
 293 009c 4839D0   		cmpq	%rdx, %rax
 294 009f 75F4     		jne	.L11
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 295              		.loc 1 106 35 is_stmt 1 view .LVU96
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 296              		.loc 1 106 19 view .LVU97
 297 00a1 4983C108 		addq	$8, %r9
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 298              		.loc 1 106 5 is_stmt 0 view .LVU98
 299 00a5 4D39E1   		cmpq	%r12, %r9
 300 00a8 75DD     		jne	.L12
 301 00aa 488B4424 		movq	-32(%rsp), %rax
 301      E0
 302              	.LVL33:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 303              		.loc 1 106 5 view .LVU99
 304 00af 8B806401 		movl	356(%rax), %eax
 304      0000
 305              	.LVL34:
 306              	.L9:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 307              		.loc 1 106 5 view .LVU100
 308              	.LBE16:
 309              	.LBE17:
 170:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->image_width, output_cols * h_expand);
 171:fltk-1.3.4-1/jpeg/jcsample.c **** 
 172:fltk-1.3.4-1/jpeg/jcsample.c ****   inrow = outrow = 0;
 173:fltk-1.3.4-1/jpeg/jcsample.c ****   while (inrow < cinfo->max_v_samp_factor) {
 310              		.loc 1 173 9 is_stmt 1 view .LVU101
 311 00b5 85C0     		testl	%eax, %eax
 312 00b7 0F8EF000 		jle	.L8
 312      0000
 313 00bd 450FB6C0 		movzbl	%r8b, %r8d
 314 00c1 4C895C24 		movq	%r11, -48(%rsp)
 314      D0
 315 00c6 448D4FFF 		leal	-1(%rdi), %r9d
 316 00ca 4889F3   		movq	%rsi, %rbx
 317 00cd 4A8D04C5 		leaq	0(,%r8,8), %rax
 317      00000000 
 318 00d5 C74424D8 		movl	$0, -40(%rsp)
 318      00000000 
 319 00dd 4983C101 		addq	$1, %r9
 320 00e1 48894424 		movq	%rax, -24(%rsp)
 320      E8
 321 00e6 8D45FF   		leal	-1(%rbp), %eax
 322 00e9 4C8D44C6 		leaq	8(%rsi,%rax,8), %r8
 322      08
 323 00ee 8B4424DC 		movl	-36(%rsp), %eax
 324 00f2 83E801   		subl	$1, %eax
 325 00f5 4883C001 		addq	$1, %rax
 326 00f9 48894424 		movq	%rax, -8(%rsp)
 326      F8
 327              	.LVL35:
 328              	.L21:
 174:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[outrow];
 329              		.loc 1 174 5 view .LVU102
 330              		.loc 1 174 12 is_stmt 0 view .LVU103
 331 00fe 488B4424 		movq	-48(%rsp), %rax
 331      D0
 332 0103 4C8B10   		movq	(%rax), %r10
 333              	.LVL36:
 175:fltk-1.3.4-1/jpeg/jcsample.c ****     for (outcol = 0, outcol_h = 0; outcol < output_cols;
 334              		.loc 1 175 5 is_stmt 1 view .LVU104
 335              		.loc 1 175 36 view .LVU105
 336              		.loc 1 175 5 is_stmt 0 view .LVU106
 337 0106 8B4424DC 		movl	-36(%rsp), %eax
 338 010a 85C0     		testl	%eax, %eax
 339 010c 7475     		je	.L14
 340 010e 48634424 		movslq	-16(%rsp), %rax
 340      F0
 341 0113 4C636C24 		movslq	-12(%rsp), %r13
 341      F4
 342              		.loc 1 175 31 view .LVU107
 343 0118 4531DB   		xorl	%r11d, %r11d
 344 011b 48894424 		movq	%rax, -56(%rsp)
 344      C8
 345 0120 488B4424 		movq	-8(%rsp), %rax
 345      F8
 346 0125 4D8D2402 		leaq	(%r10,%rax), %r12
 347              	.LVL37:
 348 0129 0F1F8000 		.p2align 4,,10
 348      000000
 349              		.p2align 3
 350              	.L15:
 176:fltk-1.3.4-1/jpeg/jcsample.c **** 	 outcol++, outcol_h += h_expand) {
 177:fltk-1.3.4-1/jpeg/jcsample.c ****       outvalue = 0;
 178:fltk-1.3.4-1/jpeg/jcsample.c ****       for (v = 0; v < v_expand; v++) {
 351              		.loc 1 178 19 is_stmt 1 view .LVU108
 352 0130 4589DF   		movl	%r11d, %r15d
 353              		.loc 1 178 7 is_stmt 0 view .LVU109
 354 0133 4989DE   		movq	%rbx, %r14
 177:fltk-1.3.4-1/jpeg/jcsample.c ****       for (v = 0; v < v_expand; v++) {
 355              		.loc 1 177 16 view .LVU110
 356 0136 31D2     		xorl	%edx, %edx
 357              		.loc 1 178 7 view .LVU111
 358 0138 85ED     		testl	%ebp, %ebp
 359 013a 742C     		je	.L20
 360              	.LVL38:
 361 013c 0F1F4000 		.p2align 4,,10
 362              		.p2align 3
 363              	.L18:
 179:fltk-1.3.4-1/jpeg/jcsample.c **** 	inptr = input_data[inrow+v] + outcol_h;
 364              		.loc 1 179 2 is_stmt 1 view .LVU112
 365              		.loc 1 179 8 is_stmt 0 view .LVU113
 366 0140 498B06   		movq	(%r14), %rax
 367 0143 4C01F8   		addq	%r15, %rax
 368              	.LVL39:
 180:fltk-1.3.4-1/jpeg/jcsample.c **** 	for (h = 0; h < h_expand; h++) {
 369              		.loc 1 180 2 is_stmt 1 view .LVU114
 370              		.loc 1 180 14 view .LVU115
 371              		.loc 1 180 2 is_stmt 0 view .LVU116
 372 0146 85FF     		testl	%edi, %edi
 373 0148 7415     		je	.L16
 374 014a 4A8D3408 		leaq	(%rax,%r9), %rsi
 375 014e 6690     		.p2align 4,,10
 376              		.p2align 3
 377              	.L17:
 181:fltk-1.3.4-1/jpeg/jcsample.c **** 	  outvalue += (INT32) GETJSAMPLE(*inptr++);
 378              		.loc 1 181 4 is_stmt 1 discriminator 3 view .LVU117
 379              		.loc 1 181 16 is_stmt 0 discriminator 3 view .LVU118
 380 0150 0FB608   		movzbl	(%rax), %ecx
 381              		.loc 1 181 24 discriminator 3 view .LVU119
 382 0153 4883C001 		addq	$1, %rax
 383              	.LVL40:
 384              		.loc 1 181 13 discriminator 3 view .LVU120
 385 0157 4801CA   		addq	%rcx, %rdx
 386              	.LVL41:
 180:fltk-1.3.4-1/jpeg/jcsample.c **** 	for (h = 0; h < h_expand; h++) {
 387              		.loc 1 180 28 is_stmt 1 discriminator 3 view .LVU121
 180:fltk-1.3.4-1/jpeg/jcsample.c **** 	for (h = 0; h < h_expand; h++) {
 388              		.loc 1 180 14 discriminator 3 view .LVU122
 180:fltk-1.3.4-1/jpeg/jcsample.c **** 	for (h = 0; h < h_expand; h++) {
 389              		.loc 1 180 2 is_stmt 0 discriminator 3 view .LVU123
 390 015a 4839F0   		cmpq	%rsi, %rax
 391 015d 75F1     		jne	.L17
 392              	.L16:
 178:fltk-1.3.4-1/jpeg/jcsample.c **** 	inptr = input_data[inrow+v] + outcol_h;
 393              		.loc 1 178 33 is_stmt 1 discriminator 2 view .LVU124
 178:fltk-1.3.4-1/jpeg/jcsample.c **** 	inptr = input_data[inrow+v] + outcol_h;
 394              		.loc 1 178 19 discriminator 2 view .LVU125
 395 015f 4983C608 		addq	$8, %r14
 178:fltk-1.3.4-1/jpeg/jcsample.c **** 	inptr = input_data[inrow+v] + outcol_h;
 396              		.loc 1 178 7 is_stmt 0 discriminator 2 view .LVU126
 397 0163 4D39F0   		cmpq	%r14, %r8
 398 0166 75D8     		jne	.L18
 399              	.LVL42:
 400              	.L20:
 182:fltk-1.3.4-1/jpeg/jcsample.c **** 	}
 183:fltk-1.3.4-1/jpeg/jcsample.c ****       }
 184:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((outvalue + numpix2) / numpix);
 401              		.loc 1 184 7 is_stmt 1 view .LVU127
 402              		.loc 1 184 40 is_stmt 0 view .LVU128
 403 0168 4A8D042A 		leaq	(%rdx,%r13), %rax
 404              		.loc 1 184 14 view .LVU129
 405 016c 4983C201 		addq	$1, %r10
 406              	.LVL43:
 176:fltk-1.3.4-1/jpeg/jcsample.c ****       outvalue = 0;
 407              		.loc 1 176 22 view .LVU130
 408 0170 4101FB   		addl	%edi, %r11d
 409              	.LVL44:
 410              		.loc 1 184 51 view .LVU131
 411 0173 4899     		cqto
 412 0175 48F77C24 		idivq	-56(%rsp)
 412      C8
 413              		.loc 1 184 19 view .LVU132
 414 017a 418842FF 		movb	%al, -1(%r10)
 176:fltk-1.3.4-1/jpeg/jcsample.c ****       outvalue = 0;
 415              		.loc 1 176 3 is_stmt 1 view .LVU133
 416              	.LVL45:
 175:fltk-1.3.4-1/jpeg/jcsample.c **** 	 outcol++, outcol_h += h_expand) {
 417              		.loc 1 175 36 view .LVU134
 175:fltk-1.3.4-1/jpeg/jcsample.c **** 	 outcol++, outcol_h += h_expand) {
 418              		.loc 1 175 5 is_stmt 0 view .LVU135
 419 017e 4D39D4   		cmpq	%r10, %r12
 420 0181 75AD     		jne	.L15
 421              	.LVL46:
 422              	.L14:
 185:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 186:fltk-1.3.4-1/jpeg/jcsample.c ****     inrow += v_expand;
 423              		.loc 1 186 5 is_stmt 1 view .LVU136
 424 0183 488B7424 		movq	-24(%rsp), %rsi
 424      E8
 425              		.loc 1 186 11 is_stmt 0 view .LVU137
 426 0188 016C24D8 		addl	%ebp, -40(%rsp)
 427              	.LVL47:
 428              		.loc 1 186 11 view .LVU138
 429 018c 48834424 		addq	$8, -48(%rsp)
 429      D008
 430 0192 8B4424D8 		movl	-40(%rsp), %eax
 431              	.LVL48:
 187:fltk-1.3.4-1/jpeg/jcsample.c ****     outrow++;
 432              		.loc 1 187 5 is_stmt 1 view .LVU139
 173:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[outrow];
 433              		.loc 1 173 9 view .LVU140
 434 0196 4901F0   		addq	%rsi, %r8
 435 0199 4801F3   		addq	%rsi, %rbx
 436 019c 488B7424 		movq	-32(%rsp), %rsi
 436      E0
 437 01a1 39866401 		cmpl	%eax, 356(%rsi)
 437      0000
 438 01a7 0F8F51FF 		jg	.L21
 438      FFFF
 439              	.LVL49:
 440              	.L8:
 188:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 189:fltk-1.3.4-1/jpeg/jcsample.c **** }
 441              		.loc 1 189 1 is_stmt 0 view .LVU141
 442 01ad 5B       		popq	%rbx
 443              		.cfi_def_cfa_offset 48
 444 01ae 5D       		popq	%rbp
 445              		.cfi_def_cfa_offset 40
 446              	.LVL50:
 447              		.loc 1 189 1 view .LVU142
 448 01af 415C     		popq	%r12
 449              		.cfi_def_cfa_offset 32
 450 01b1 415D     		popq	%r13
 451              		.cfi_def_cfa_offset 24
 452 01b3 415E     		popq	%r14
 453              		.cfi_def_cfa_offset 16
 454 01b5 415F     		popq	%r15
 455              		.cfi_def_cfa_offset 8
 456 01b7 C3       		ret
 457              		.cfi_endproc
 458              	.LFE54:
 460              		.section	.text.h2v1_downsample,"ax",@progbits
 461              		.p2align 4
 463              	h2v1_downsample:
 464              	.LVL51:
 465              	.LFB56:
 190:fltk-1.3.4-1/jpeg/jcsample.c **** 
 191:fltk-1.3.4-1/jpeg/jcsample.c **** 
 192:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 193:fltk-1.3.4-1/jpeg/jcsample.c ****  * Downsample pixel values of a single component.
 194:fltk-1.3.4-1/jpeg/jcsample.c ****  * This version handles the special case of a full-size component,
 195:fltk-1.3.4-1/jpeg/jcsample.c ****  * without smoothing.
 196:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 197:fltk-1.3.4-1/jpeg/jcsample.c **** 
 198:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
 199:fltk-1.3.4-1/jpeg/jcsample.c **** fullsize_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,
 200:fltk-1.3.4-1/jpeg/jcsample.c **** 		     JSAMPARRAY input_data, JSAMPARRAY output_data)
 201:fltk-1.3.4-1/jpeg/jcsample.c **** {
 202:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Copy the data */
 203:fltk-1.3.4-1/jpeg/jcsample.c ****   jcopy_sample_rows(input_data, 0, output_data, 0,
 204:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->max_v_samp_factor, cinfo->image_width);
 205:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Edge-expand */
 206:fltk-1.3.4-1/jpeg/jcsample.c ****   expand_right_edge(output_data, cinfo->max_v_samp_factor, cinfo->image_width,
 207:fltk-1.3.4-1/jpeg/jcsample.c **** 		    compptr->width_in_blocks * compptr->DCT_h_scaled_size);
 208:fltk-1.3.4-1/jpeg/jcsample.c **** }
 209:fltk-1.3.4-1/jpeg/jcsample.c **** 
 210:fltk-1.3.4-1/jpeg/jcsample.c **** 
 211:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 212:fltk-1.3.4-1/jpeg/jcsample.c ****  * Downsample pixel values of a single component.
 213:fltk-1.3.4-1/jpeg/jcsample.c ****  * This version handles the common case of 2:1 horizontal and 1:1 vertical,
 214:fltk-1.3.4-1/jpeg/jcsample.c ****  * without smoothing.
 215:fltk-1.3.4-1/jpeg/jcsample.c ****  *
 216:fltk-1.3.4-1/jpeg/jcsample.c ****  * A note about the "bias" calculations: when rounding fractional values to
 217:fltk-1.3.4-1/jpeg/jcsample.c ****  * integer, we do not want to always round 0.5 up to the next integer.
 218:fltk-1.3.4-1/jpeg/jcsample.c ****  * If we did that, we'd introduce a noticeable bias towards larger values.
 219:fltk-1.3.4-1/jpeg/jcsample.c ****  * Instead, this code is arranged so that 0.5 will be rounded up or down at
 220:fltk-1.3.4-1/jpeg/jcsample.c ****  * alternate pixel locations (a simple ordered dither pattern).
 221:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 222:fltk-1.3.4-1/jpeg/jcsample.c **** 
 223:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
 224:fltk-1.3.4-1/jpeg/jcsample.c **** h2v1_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,
 225:fltk-1.3.4-1/jpeg/jcsample.c **** 		 JSAMPARRAY input_data, JSAMPARRAY output_data)
 226:fltk-1.3.4-1/jpeg/jcsample.c **** {
 466              		.loc 1 226 1 is_stmt 1 view -0
 467              		.cfi_startproc
 468              		.loc 1 226 1 is_stmt 0 view .LVU144
 469 0000 F30F1EFA 		endbr64
 227:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 470              		.loc 1 227 3 is_stmt 1 view .LVU145
 228:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION outcol;
 471              		.loc 1 228 3 view .LVU146
 229:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION output_cols = compptr->width_in_blocks * compptr->DCT_h_scaled_size;
 472              		.loc 1 229 3 view .LVU147
 226:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 473              		.loc 1 226 1 is_stmt 0 view .LVU148
 474 0004 4154     		pushq	%r12
 475              		.cfi_def_cfa_offset 16
 476              		.cfi_offset 12, -16
 230:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr, outptr;
 231:fltk-1.3.4-1/jpeg/jcsample.c ****   register int bias;
 232:fltk-1.3.4-1/jpeg/jcsample.c **** 
 233:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Expand input data enough to let all the output samples be generated
 234:fltk-1.3.4-1/jpeg/jcsample.c ****    * by the standard loop.  Special-casing padded output would be more
 235:fltk-1.3.4-1/jpeg/jcsample.c ****    * efficient.
 236:fltk-1.3.4-1/jpeg/jcsample.c ****    */
 237:fltk-1.3.4-1/jpeg/jcsample.c ****   expand_right_edge(input_data, cinfo->max_v_samp_factor,
 477              		.loc 1 237 3 view .LVU149
 478 0006 448B5730 		movl	48(%rdi), %r10d
 226:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 479              		.loc 1 226 1 view .LVU150
 480 000a 55       		pushq	%rbp
 481              		.cfi_def_cfa_offset 24
 482              		.cfi_offset 6, -24
 483 000b 53       		pushq	%rbx
 484              		.cfi_def_cfa_offset 32
 485              		.cfi_offset 3, -32
 226:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 486              		.loc 1 226 1 view .LVU151
 487 000c 4889D3   		movq	%rdx, %rbx
 229:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr, outptr;
 488              		.loc 1 229 14 view .LVU152
 489 000f 8B561C   		movl	28(%rsi), %edx
 490              	.LVL52:
 229:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr, outptr;
 491              		.loc 1 229 14 view .LVU153
 492 0012 0FAF5624 		imull	36(%rsi), %edx
 493              	.LVL53:
 230:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr, outptr;
 494              		.loc 1 230 3 is_stmt 1 view .LVU154
 231:fltk-1.3.4-1/jpeg/jcsample.c **** 
 495              		.loc 1 231 3 view .LVU155
 496              		.loc 1 237 3 view .LVU156
 497 0016 8BB76401 		movl	356(%rdi), %esi
 497      0000
 498              	.LVL54:
 499              	.LBB18:
 500              	.LBI18:
  96:fltk-1.3.4-1/jpeg/jcsample.c **** 		   JDIMENSION input_cols, JDIMENSION output_cols)
 501              		.loc 1 96 1 view .LVU157
 502              	.LBB19:
  99:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPLE pixval;
 503              		.loc 1 99 3 view .LVU158
 100:fltk-1.3.4-1/jpeg/jcsample.c ****   register int count;
 504              		.loc 1 100 3 view .LVU159
 101:fltk-1.3.4-1/jpeg/jcsample.c ****   int row;
 505              		.loc 1 101 3 view .LVU160
 102:fltk-1.3.4-1/jpeg/jcsample.c ****   int numcols = (int) (output_cols - input_cols);
 506              		.loc 1 102 3 view .LVU161
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 507              		.loc 1 103 3 view .LVU162
 508              	.LBE19:
 509              	.LBE18:
 510              		.loc 1 237 3 is_stmt 0 view .LVU163
 511 001c 8D0412   		leal	(%rdx,%rdx), %eax
 512              	.LBB21:
 513              	.LBB20:
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 514              		.loc 1 103 36 view .LVU164
 515 001f 4429D0   		subl	%r10d, %eax
 516              	.LVL55:
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 517              		.loc 1 105 3 is_stmt 1 view .LVU165
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 518              		.loc 1 105 6 is_stmt 0 view .LVU166
 519 0022 85C0     		testl	%eax, %eax
 520 0024 7E56     		jle	.L38
 521              	.LVL56:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 522              		.loc 1 106 19 is_stmt 1 view .LVU167
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 523              		.loc 1 106 5 is_stmt 0 view .LVU168
 524 0026 85F6     		testl	%esi, %esi
 525 0028 0F8EAD00 		jle	.L37
 525      0000
 526 002e 83EE01   		subl	$1, %esi
 527              	.LVL57:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 528              		.loc 1 106 5 view .LVU169
 529 0031 448D58FF 		leal	-1(%rax), %r11d
 530 0035 4989D9   		movq	%rbx, %r9
 531 0038 488D6CF3 		leaq	8(%rbx,%rsi,8), %rbp
 531      08
 532 003d 4983C301 		addq	$1, %r11
 533              	.LVL58:
 534              		.p2align 4,,10
 535 0041 0F1F8000 		.p2align 3
 535      000000
 536              	.L41:
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 537              		.loc 1 107 7 is_stmt 1 view .LVU170
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 538              		.loc 1 107 11 is_stmt 0 view .LVU171
 539 0048 498B01   		movq	(%r9), %rax
 540 004b 4C01D0   		addq	%r10, %rax
 541              	.LVL59:
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 542              		.loc 1 108 7 is_stmt 1 view .LVU172
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 543              		.loc 1 108 14 is_stmt 0 view .LVU173
 544 004e 440FB640 		movzbl	-1(%rax), %r8d
 544      FF
 545              	.LVL60:
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 546              		.loc 1 109 7 is_stmt 1 view .LVU174
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 547              		.loc 1 109 29 view .LVU175
 548 0053 4A8D3418 		leaq	(%rax,%r11), %rsi
 549              	.LVL61:
 550 0057 660F1F84 		.p2align 4,,10
 550      00000000 
 550      00
 551              		.p2align 3
 552              	.L40:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 553              		.loc 1 110 2 view .LVU176
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 554              		.loc 1 110 6 is_stmt 0 view .LVU177
 555 0060 4883C001 		addq	$1, %rax
 556              	.LVL62:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 557              		.loc 1 110 9 view .LVU178
 558 0064 448840FF 		movb	%r8b, -1(%rax)
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 559              		.loc 1 109 40 is_stmt 1 view .LVU179
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 560              		.loc 1 109 29 view .LVU180
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 561              		.loc 1 109 7 is_stmt 0 view .LVU181
 562 0068 4839F0   		cmpq	%rsi, %rax
 563 006b 75F3     		jne	.L40
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 564              		.loc 1 106 35 is_stmt 1 view .LVU182
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 565              		.loc 1 106 19 view .LVU183
 566 006d 4983C108 		addq	$8, %r9
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 567              		.loc 1 106 5 is_stmt 0 view .LVU184
 568 0071 4C39CD   		cmpq	%r9, %rbp
 569 0074 75D2     		jne	.L41
 570 0076 8BB76401 		movl	356(%rdi), %esi
 570      0000
 571              	.LVL63:
 572              	.L38:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 573              		.loc 1 106 5 view .LVU185
 574              	.LBE20:
 575              	.LBE21:
 238:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->image_width, output_cols * 2);
 239:fltk-1.3.4-1/jpeg/jcsample.c **** 
 240:fltk-1.3.4-1/jpeg/jcsample.c ****   for (inrow = 0; inrow < cinfo->max_v_samp_factor; inrow++) {
 576              		.loc 1 240 19 is_stmt 1 discriminator 1 view .LVU186
 577              		.loc 1 240 3 is_stmt 0 discriminator 1 view .LVU187
 578 007c 85F6     		testl	%esi, %esi
 579 007e 7E5B     		jle	.L37
 580              		.loc 1 240 3 view .LVU188
 581 0080 31ED     		xorl	%ebp, %ebp
 582 0082 448D5AFF 		leal	-1(%rdx), %r11d
 583              	.LVL64:
 584 0086 662E0F1F 		.p2align 4,,10
 584      84000000 
 584      0000
 585              		.p2align 3
 586              	.L44:
 241:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 587              		.loc 1 241 5 is_stmt 1 view .LVU189
 588              		.loc 1 241 12 is_stmt 0 view .LVU190
 589 0090 4C8B14E9 		movq	(%rcx,%rbp,8), %r10
 590              	.LVL65:
 242:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr = input_data[inrow];
 591              		.loc 1 242 5 is_stmt 1 view .LVU191
 592              		.loc 1 242 11 is_stmt 0 view .LVU192
 593 0094 4C8B0CEB 		movq	(%rbx,%rbp,8), %r9
 594              	.LVL66:
 243:fltk-1.3.4-1/jpeg/jcsample.c ****     bias = 0;			/* bias = 0,1,0,1,... for successive samples */
 595              		.loc 1 243 5 is_stmt 1 view .LVU193
 244:fltk-1.3.4-1/jpeg/jcsample.c ****     for (outcol = 0; outcol < output_cols; outcol++) {
 596              		.loc 1 244 5 view .LVU194
 597              		.loc 1 244 22 view .LVU195
 598              		.loc 1 244 5 is_stmt 0 view .LVU196
 599 0098 31F6     		xorl	%esi, %esi
 243:fltk-1.3.4-1/jpeg/jcsample.c ****     bias = 0;			/* bias = 0,1,0,1,... for successive samples */
 600              		.loc 1 243 10 view .LVU197
 601 009a 4531C0   		xorl	%r8d, %r8d
 602              		.loc 1 244 5 view .LVU198
 603 009d 85D2     		testl	%edx, %edx
 604 009f 742E     		je	.L46
 605              	.LVL67:
 606              		.p2align 4,,10
 607 00a1 0F1F8000 		.p2align 3
 607      000000
 608              	.L45:
 245:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr) + GETJSAMPLE(inptr[1])
 609              		.loc 1 245 7 is_stmt 1 discriminator 3 view .LVU199
 610              		.loc 1 245 31 is_stmt 0 discriminator 3 view .LVU200
 611 00a8 410FB604 		movzbl	(%r9,%rsi,2), %eax
 611      71
 612              		.loc 1 245 52 discriminator 3 view .LVU201
 613 00ad 450FB664 		movzbl	1(%r9,%rsi,2), %r12d
 613      7101
 614              		.loc 1 245 50 discriminator 3 view .LVU202
 615 00b3 4401E0   		addl	%r12d, %eax
 246:fltk-1.3.4-1/jpeg/jcsample.c **** 			      + bias) >> 1);
 616              		.loc 1 246 10 discriminator 3 view .LVU203
 617 00b6 4401C0   		addl	%r8d, %eax
 247:fltk-1.3.4-1/jpeg/jcsample.c ****       bias ^= 1;		/* 0=>1, 1=>0 */
 618              		.loc 1 247 12 discriminator 3 view .LVU204
 619 00b9 4183F001 		xorl	$1, %r8d
 620              	.LVL68:
 246:fltk-1.3.4-1/jpeg/jcsample.c **** 			      + bias) >> 1);
 621              		.loc 1 246 18 discriminator 3 view .LVU205
 622 00bd D1F8     		sarl	%eax
 245:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr) + GETJSAMPLE(inptr[1])
 623              		.loc 1 245 19 discriminator 3 view .LVU206
 624 00bf 41880432 		movb	%al, (%r10,%rsi)
 625              		.loc 1 247 7 is_stmt 1 discriminator 3 view .LVU207
 626              	.LVL69:
 248:fltk-1.3.4-1/jpeg/jcsample.c ****       inptr += 2;
 627              		.loc 1 248 7 discriminator 3 view .LVU208
 244:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr) + GETJSAMPLE(inptr[1])
 628              		.loc 1 244 44 discriminator 3 view .LVU209
 244:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr) + GETJSAMPLE(inptr[1])
 629              		.loc 1 244 22 discriminator 3 view .LVU210
 630 00c3 4889F0   		movq	%rsi, %rax
 631 00c6 4883C601 		addq	$1, %rsi
 632              	.LVL70:
 244:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr) + GETJSAMPLE(inptr[1])
 633              		.loc 1 244 5 is_stmt 0 discriminator 3 view .LVU211
 634 00ca 4C39D8   		cmpq	%r11, %rax
 635 00cd 75D9     		jne	.L45
 636              	.LVL71:
 637              	.L46:
 240:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 638              		.loc 1 240 53 is_stmt 1 view .LVU212
 240:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 639              		.loc 1 240 19 view .LVU213
 640 00cf 4883C501 		addq	$1, %rbp
 641              	.LVL72:
 240:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 642              		.loc 1 240 3 is_stmt 0 view .LVU214
 643 00d3 39AF6401 		cmpl	%ebp, 356(%rdi)
 643      0000
 644 00d9 7FB5     		jg	.L44
 645              	.L37:
 249:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 250:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 251:fltk-1.3.4-1/jpeg/jcsample.c **** }
 646              		.loc 1 251 1 view .LVU215
 647 00db 5B       		popq	%rbx
 648              		.cfi_def_cfa_offset 24
 649              	.LVL73:
 650              		.loc 1 251 1 view .LVU216
 651 00dc 5D       		popq	%rbp
 652              		.cfi_def_cfa_offset 16
 653 00dd 415C     		popq	%r12
 654              		.cfi_def_cfa_offset 8
 655 00df C3       		ret
 656              		.cfi_endproc
 657              	.LFE56:
 659              		.section	.text.h2v2_downsample,"ax",@progbits
 660              		.p2align 4
 662              	h2v2_downsample:
 663              	.LVL74:
 664              	.LFB57:
 252:fltk-1.3.4-1/jpeg/jcsample.c **** 
 253:fltk-1.3.4-1/jpeg/jcsample.c **** 
 254:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 255:fltk-1.3.4-1/jpeg/jcsample.c ****  * Downsample pixel values of a single component.
 256:fltk-1.3.4-1/jpeg/jcsample.c ****  * This version handles the standard case of 2:1 horizontal and 2:1 vertical,
 257:fltk-1.3.4-1/jpeg/jcsample.c ****  * without smoothing.
 258:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 259:fltk-1.3.4-1/jpeg/jcsample.c **** 
 260:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
 261:fltk-1.3.4-1/jpeg/jcsample.c **** h2v2_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,
 262:fltk-1.3.4-1/jpeg/jcsample.c **** 		 JSAMPARRAY input_data, JSAMPARRAY output_data)
 263:fltk-1.3.4-1/jpeg/jcsample.c **** {
 665              		.loc 1 263 1 is_stmt 1 view -0
 666              		.cfi_startproc
 667              		.loc 1 263 1 is_stmt 0 view .LVU218
 668 0000 F30F1EFA 		endbr64
 264:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 669              		.loc 1 264 3 is_stmt 1 view .LVU219
 265:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION outcol;
 670              		.loc 1 265 3 view .LVU220
 266:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION output_cols = compptr->width_in_blocks * compptr->DCT_h_scaled_size;
 671              		.loc 1 266 3 view .LVU221
 263:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 672              		.loc 1 263 1 is_stmt 0 view .LVU222
 673 0004 4155     		pushq	%r13
 674              		.cfi_def_cfa_offset 16
 675              		.cfi_offset 13, -16
 267:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr0, inptr1, outptr;
 268:fltk-1.3.4-1/jpeg/jcsample.c ****   register int bias;
 269:fltk-1.3.4-1/jpeg/jcsample.c **** 
 270:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Expand input data enough to let all the output samples be generated
 271:fltk-1.3.4-1/jpeg/jcsample.c ****    * by the standard loop.  Special-casing padded output would be more
 272:fltk-1.3.4-1/jpeg/jcsample.c ****    * efficient.
 273:fltk-1.3.4-1/jpeg/jcsample.c ****    */
 274:fltk-1.3.4-1/jpeg/jcsample.c ****   expand_right_edge(input_data, cinfo->max_v_samp_factor,
 676              		.loc 1 274 3 view .LVU223
 677 0006 448B4730 		movl	48(%rdi), %r8d
 263:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 678              		.loc 1 263 1 view .LVU224
 679 000a 4154     		pushq	%r12
 680              		.cfi_def_cfa_offset 24
 681              		.cfi_offset 12, -24
 682 000c 4989CC   		movq	%rcx, %r12
 683 000f 55       		pushq	%rbp
 684              		.cfi_def_cfa_offset 32
 685              		.cfi_offset 6, -32
 686 0010 53       		pushq	%rbx
 687              		.cfi_def_cfa_offset 40
 688              		.cfi_offset 3, -40
 266:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr0, inptr1, outptr;
 689              		.loc 1 266 14 view .LVU225
 690 0011 8B6E1C   		movl	28(%rsi), %ebp
 263:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 691              		.loc 1 263 1 view .LVU226
 692 0014 4889D3   		movq	%rdx, %rbx
 266:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr0, inptr1, outptr;
 693              		.loc 1 266 14 view .LVU227
 694 0017 0FAF6E24 		imull	36(%rsi), %ebp
 695              	.LVL75:
 267:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr0, inptr1, outptr;
 696              		.loc 1 267 3 is_stmt 1 view .LVU228
 268:fltk-1.3.4-1/jpeg/jcsample.c **** 
 697              		.loc 1 268 3 view .LVU229
 698              		.loc 1 274 3 view .LVU230
 699 001b 8B976401 		movl	356(%rdi), %edx
 699      0000
 700              	.LVL76:
 701              	.LBB22:
 702              	.LBI22:
  96:fltk-1.3.4-1/jpeg/jcsample.c **** 		   JDIMENSION input_cols, JDIMENSION output_cols)
 703              		.loc 1 96 1 view .LVU231
 704              	.LBB23:
  99:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPLE pixval;
 705              		.loc 1 99 3 view .LVU232
 100:fltk-1.3.4-1/jpeg/jcsample.c ****   register int count;
 706              		.loc 1 100 3 view .LVU233
 101:fltk-1.3.4-1/jpeg/jcsample.c ****   int row;
 707              		.loc 1 101 3 view .LVU234
 102:fltk-1.3.4-1/jpeg/jcsample.c ****   int numcols = (int) (output_cols - input_cols);
 708              		.loc 1 102 3 view .LVU235
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 709              		.loc 1 103 3 view .LVU236
 710              	.LBE23:
 711              	.LBE22:
 712              		.loc 1 274 3 is_stmt 0 view .LVU237
 713 0021 8D442D00 		leal	(%rbp,%rbp), %eax
 714              	.LBB25:
 715              	.LBB24:
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 716              		.loc 1 103 36 view .LVU238
 717 0025 4429C0   		subl	%r8d, %eax
 718              	.LVL77:
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 719              		.loc 1 105 3 is_stmt 1 view .LVU239
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 720              		.loc 1 105 6 is_stmt 0 view .LVU240
 721 0028 85C0     		testl	%eax, %eax
 722 002a 7E4F     		jle	.L53
 723              	.LVL78:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 724              		.loc 1 106 19 is_stmt 1 view .LVU241
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 725              		.loc 1 106 5 is_stmt 0 view .LVU242
 726 002c 85D2     		testl	%edx, %edx
 727 002e 0F8EB900 		jle	.L52
 727      0000
 728 0034 83EA01   		subl	$1, %edx
 729              	.LVL79:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 730              		.loc 1 106 5 view .LVU243
 731 0037 448D48FF 		leal	-1(%rax), %r9d
 732 003b 4889DE   		movq	%rbx, %rsi
 733              	.LVL80:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 734              		.loc 1 106 5 view .LVU244
 735 003e 4C8D54D3 		leaq	8(%rbx,%rdx,8), %r10
 735      08
 736 0043 4983C101 		addq	$1, %r9
 737              	.LVL81:
 738 0047 660F1F84 		.p2align 4,,10
 738      00000000 
 738      00
 739              		.p2align 3
 740              	.L56:
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 741              		.loc 1 107 7 is_stmt 1 view .LVU245
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 742              		.loc 1 107 11 is_stmt 0 view .LVU246
 743 0050 488B06   		movq	(%rsi), %rax
 744 0053 4C01C0   		addq	%r8, %rax
 745              	.LVL82:
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 746              		.loc 1 108 7 is_stmt 1 view .LVU247
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 747              		.loc 1 108 14 is_stmt 0 view .LVU248
 748 0056 0FB648FF 		movzbl	-1(%rax), %ecx
 749              	.LVL83:
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 750              		.loc 1 109 7 is_stmt 1 view .LVU249
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 751              		.loc 1 109 29 view .LVU250
 752 005a 4A8D1408 		leaq	(%rax,%r9), %rdx
 753              	.LVL84:
 754 005e 6690     		.p2align 4,,10
 755              		.p2align 3
 756              	.L55:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 757              		.loc 1 110 2 view .LVU251
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 758              		.loc 1 110 6 is_stmt 0 view .LVU252
 759 0060 4883C001 		addq	$1, %rax
 760              	.LVL85:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 761              		.loc 1 110 9 view .LVU253
 762 0064 8848FF   		movb	%cl, -1(%rax)
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 763              		.loc 1 109 40 is_stmt 1 view .LVU254
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 764              		.loc 1 109 29 view .LVU255
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 765              		.loc 1 109 7 is_stmt 0 view .LVU256
 766 0067 4839D0   		cmpq	%rdx, %rax
 767 006a 75F4     		jne	.L55
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 768              		.loc 1 106 35 is_stmt 1 view .LVU257
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 769              		.loc 1 106 19 view .LVU258
 770 006c 4883C608 		addq	$8, %rsi
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 771              		.loc 1 106 5 is_stmt 0 view .LVU259
 772 0070 4939F2   		cmpq	%rsi, %r10
 773 0073 75DB     		jne	.L56
 774 0075 8B976401 		movl	356(%rdi), %edx
 774      0000
 775              	.LVL86:
 776              	.L53:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 777              		.loc 1 106 5 view .LVU260
 778              	.LBE24:
 779              	.LBE25:
 275:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->image_width, output_cols * 2);
 276:fltk-1.3.4-1/jpeg/jcsample.c **** 
 277:fltk-1.3.4-1/jpeg/jcsample.c ****   inrow = outrow = 0;
 278:fltk-1.3.4-1/jpeg/jcsample.c ****   while (inrow < cinfo->max_v_samp_factor) {
 780              		.loc 1 278 9 is_stmt 1 view .LVU261
 781 007b 85D2     		testl	%edx, %edx
 782 007d 7E6E     		jle	.L52
 783 007f 31C9     		xorl	%ecx, %ecx
 784 0081 8D55FF   		leal	-1(%rbp), %edx
 785              	.LVL87:
 786              		.p2align 4,,10
 787 0084 0F1F4000 		.p2align 3
 788              	.L59:
 279:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[outrow];
 789              		.loc 1 279 5 view .LVU262
 790              		.loc 1 279 12 is_stmt 0 view .LVU263
 791 0088 4D8B1C8C 		movq	(%r12,%rcx,4), %r11
 792              	.LVL88:
 280:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 = input_data[inrow];
 793              		.loc 1 280 5 is_stmt 1 view .LVU264
 794              		.loc 1 280 12 is_stmt 0 view .LVU265
 795 008c 4C8B14CB 		movq	(%rbx,%rcx,8), %r10
 796              	.LVL89:
 281:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr1 = input_data[inrow+1];
 797              		.loc 1 281 5 is_stmt 1 view .LVU266
 282:fltk-1.3.4-1/jpeg/jcsample.c ****     bias = 1;			/* bias = 1,2,1,2,... for successive samples */
 283:fltk-1.3.4-1/jpeg/jcsample.c ****     for (outcol = 0; outcol < output_cols; outcol++) {
 798              		.loc 1 283 5 is_stmt 0 view .LVU267
 799 0090 31F6     		xorl	%esi, %esi
 282:fltk-1.3.4-1/jpeg/jcsample.c ****     bias = 1;			/* bias = 1,2,1,2,... for successive samples */
 800              		.loc 1 282 10 view .LVU268
 801 0092 41B80100 		movl	$1, %r8d
 801      0000
 281:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr1 = input_data[inrow+1];
 802              		.loc 1 281 12 view .LVU269
 803 0098 4C8B4CCB 		movq	8(%rbx,%rcx,8), %r9
 803      08
 804              	.LVL90:
 282:fltk-1.3.4-1/jpeg/jcsample.c ****     bias = 1;			/* bias = 1,2,1,2,... for successive samples */
 805              		.loc 1 282 5 is_stmt 1 view .LVU270
 806              		.loc 1 283 5 view .LVU271
 807              		.loc 1 283 22 view .LVU272
 808              		.loc 1 283 5 is_stmt 0 view .LVU273
 809 009d 85ED     		testl	%ebp, %ebp
 810 009f 7440     		je	.L61
 811              	.LVL91:
 812              		.p2align 4,,10
 813 00a1 0F1F8000 		.p2align 3
 813      000000
 814              	.L60:
 284:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 815              		.loc 1 284 7 is_stmt 1 discriminator 3 view .LVU274
 816              		.loc 1 284 53 is_stmt 0 discriminator 3 view .LVU275
 817 00a8 450FB66C 		movzbl	1(%r10,%rsi,2), %r13d
 817      7201
 818              		.loc 1 284 31 discriminator 3 view .LVU276
 819 00ae 410FB604 		movzbl	(%r10,%rsi,2), %eax
 819      72
 820              		.loc 1 284 51 discriminator 3 view .LVU277
 821 00b3 4401E8   		addl	%r13d, %eax
 285:fltk-1.3.4-1/jpeg/jcsample.c **** 			      GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1])
 822              		.loc 1 285 10 discriminator 3 view .LVU278
 823 00b6 450FB62C 		movzbl	(%r9,%rsi,2), %r13d
 823      71
 284:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 824              		.loc 1 284 75 discriminator 3 view .LVU279
 825 00bb 4401E8   		addl	%r13d, %eax
 826              		.loc 1 285 32 discriminator 3 view .LVU280
 827 00be 450FB66C 		movzbl	1(%r9,%rsi,2), %r13d
 827      7101
 828              		.loc 1 285 30 discriminator 3 view .LVU281
 829 00c4 4401E8   		addl	%r13d, %eax
 286:fltk-1.3.4-1/jpeg/jcsample.c **** 			      + bias) >> 2);
 830              		.loc 1 286 10 discriminator 3 view .LVU282
 831 00c7 4401C0   		addl	%r8d, %eax
 287:fltk-1.3.4-1/jpeg/jcsample.c ****       bias ^= 3;		/* 1=>2, 2=>1 */
 832              		.loc 1 287 12 discriminator 3 view .LVU283
 833 00ca 4183F003 		xorl	$3, %r8d
 834              	.LVL92:
 286:fltk-1.3.4-1/jpeg/jcsample.c **** 			      + bias) >> 2);
 835              		.loc 1 286 18 discriminator 3 view .LVU284
 836 00ce C1F802   		sarl	$2, %eax
 284:fltk-1.3.4-1/jpeg/jcsample.c **** 			      GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1])
 837              		.loc 1 284 19 discriminator 3 view .LVU285
 838 00d1 41880433 		movb	%al, (%r11,%rsi)
 839              		.loc 1 287 7 is_stmt 1 discriminator 3 view .LVU286
 840              	.LVL93:
 288:fltk-1.3.4-1/jpeg/jcsample.c ****       inptr0 += 2; inptr1 += 2;
 841              		.loc 1 288 7 discriminator 3 view .LVU287
 842              		.loc 1 288 20 discriminator 3 view .LVU288
 283:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 843              		.loc 1 283 44 discriminator 3 view .LVU289
 283:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 844              		.loc 1 283 22 discriminator 3 view .LVU290
 845 00d5 4889F0   		movq	%rsi, %rax
 846 00d8 4883C601 		addq	$1, %rsi
 847              	.LVL94:
 283:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 848              		.loc 1 283 5 is_stmt 0 discriminator 3 view .LVU291
 849 00dc 4839D0   		cmpq	%rdx, %rax
 850 00df 75C7     		jne	.L60
 851              	.LVL95:
 852              	.L61:
 289:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 290:fltk-1.3.4-1/jpeg/jcsample.c ****     inrow += 2;
 853              		.loc 1 290 5 is_stmt 1 view .LVU292
 291:fltk-1.3.4-1/jpeg/jcsample.c ****     outrow++;
 854              		.loc 1 291 5 view .LVU293
 278:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[outrow];
 855              		.loc 1 278 9 view .LVU294
 856 00e1 4883C102 		addq	$2, %rcx
 857              	.LVL96:
 278:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[outrow];
 858              		.loc 1 278 9 is_stmt 0 view .LVU295
 859 00e5 398F6401 		cmpl	%ecx, 356(%rdi)
 859      0000
 860 00eb 7F9B     		jg	.L59
 861              	.L52:
 292:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 293:fltk-1.3.4-1/jpeg/jcsample.c **** }
 862              		.loc 1 293 1 view .LVU296
 863 00ed 5B       		popq	%rbx
 864              		.cfi_def_cfa_offset 32
 865              	.LVL97:
 866              		.loc 1 293 1 view .LVU297
 867 00ee 5D       		popq	%rbp
 868              		.cfi_def_cfa_offset 24
 869              	.LVL98:
 870              		.loc 1 293 1 view .LVU298
 871 00ef 415C     		popq	%r12
 872              		.cfi_def_cfa_offset 16
 873              	.LVL99:
 874              		.loc 1 293 1 view .LVU299
 875 00f1 415D     		popq	%r13
 876              		.cfi_def_cfa_offset 8
 877 00f3 C3       		ret
 878              		.cfi_endproc
 879              	.LFE57:
 881              		.section	.text.h2v2_smooth_downsample,"ax",@progbits
 882              		.p2align 4
 884              	h2v2_smooth_downsample:
 885              	.LVL100:
 886              	.LFB58:
 294:fltk-1.3.4-1/jpeg/jcsample.c **** 
 295:fltk-1.3.4-1/jpeg/jcsample.c **** 
 296:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 297:fltk-1.3.4-1/jpeg/jcsample.c **** 
 298:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 299:fltk-1.3.4-1/jpeg/jcsample.c ****  * Downsample pixel values of a single component.
 300:fltk-1.3.4-1/jpeg/jcsample.c ****  * This version handles the standard case of 2:1 horizontal and 2:1 vertical,
 301:fltk-1.3.4-1/jpeg/jcsample.c ****  * with smoothing.  One row of context is required.
 302:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 303:fltk-1.3.4-1/jpeg/jcsample.c **** 
 304:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
 305:fltk-1.3.4-1/jpeg/jcsample.c **** h2v2_smooth_downsample (j_compress_ptr cinfo, jpeg_component_info * compptr,
 306:fltk-1.3.4-1/jpeg/jcsample.c **** 			JSAMPARRAY input_data, JSAMPARRAY output_data)
 307:fltk-1.3.4-1/jpeg/jcsample.c **** {
 887              		.loc 1 307 1 is_stmt 1 view -0
 888              		.cfi_startproc
 889              		.loc 1 307 1 is_stmt 0 view .LVU301
 890 0000 F30F1EFA 		endbr64
 308:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 891              		.loc 1 308 3 is_stmt 1 view .LVU302
 309:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION colctr;
 892              		.loc 1 309 3 view .LVU303
 310:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION output_cols = compptr->width_in_blocks * compptr->DCT_h_scaled_size;
 893              		.loc 1 310 3 view .LVU304
 307:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 894              		.loc 1 307 1 is_stmt 0 view .LVU305
 895 0004 4157     		pushq	%r15
 896              		.cfi_def_cfa_offset 16
 897              		.cfi_offset 15, -16
 898 0006 4156     		pushq	%r14
 899              		.cfi_def_cfa_offset 24
 900              		.cfi_offset 14, -24
 901 0008 4155     		pushq	%r13
 902              		.cfi_def_cfa_offset 32
 903              		.cfi_offset 13, -32
 904 000a 4154     		pushq	%r12
 905              		.cfi_def_cfa_offset 40
 906              		.cfi_offset 12, -40
 907 000c 55       		pushq	%rbp
 908              		.cfi_def_cfa_offset 48
 909              		.cfi_offset 6, -48
 910 000d 53       		pushq	%rbx
 911              		.cfi_def_cfa_offset 56
 912              		.cfi_offset 3, -56
 913              		.loc 1 310 14 view .LVU306
 914 000e 8B461C   		movl	28(%rsi), %eax
 307:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 915              		.loc 1 307 1 view .LVU307
 916 0011 4889FB   		movq	%rdi, %rbx
 917              		.loc 1 310 14 view .LVU308
 918 0014 0FAF4624 		imull	36(%rsi), %eax
 307:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 919              		.loc 1 307 1 view .LVU309
 920 0018 48897C24 		movq	%rdi, -56(%rsp)
 920      C8
 311:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
 312:fltk-1.3.4-1/jpeg/jcsample.c ****   INT32 membersum, neighsum, memberscale, neighscale;
 313:fltk-1.3.4-1/jpeg/jcsample.c **** 
 314:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Expand input data enough to let all the output samples be generated
 315:fltk-1.3.4-1/jpeg/jcsample.c ****    * by the standard loop.  Special-casing padded output would be more
 316:fltk-1.3.4-1/jpeg/jcsample.c ****    * efficient.
 317:fltk-1.3.4-1/jpeg/jcsample.c ****    */
 318:fltk-1.3.4-1/jpeg/jcsample.c ****   expand_right_edge(input_data - 1, cinfo->max_v_samp_factor + 2,
 921              		.loc 1 318 3 view .LVU310
 922 001d 8B7F30   		movl	48(%rdi), %edi
 923              	.LVL101:
 310:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
 924              		.loc 1 310 14 view .LVU311
 925 0020 894424D4 		movl	%eax, -44(%rsp)
 926              	.LVL102:
 311:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr0, inptr1, above_ptr, below_ptr, outptr;
 927              		.loc 1 311 3 is_stmt 1 view .LVU312
 312:fltk-1.3.4-1/jpeg/jcsample.c **** 
 928              		.loc 1 312 3 view .LVU313
 929              		.loc 1 318 3 view .LVU314
 930 0024 01C0     		addl	%eax, %eax
 931              	.LVL103:
 932              	.LBB26:
 933              	.LBB27:
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 934              		.loc 1 103 36 is_stmt 0 view .LVU315
 935 0026 29F8     		subl	%edi, %eax
 936              	.LBE27:
 937              	.LBE26:
 307:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 938              		.loc 1 307 1 view .LVU316
 939 0028 48894C24 		movq	%rcx, -32(%rsp)
 939      E0
 940              		.loc 1 318 42 view .LVU317
 941 002d 8B8B6401 		movl	356(%rbx), %ecx
 941      0000
 942              	.LVL104:
 943              	.LBB30:
 944              	.LBI26:
  96:fltk-1.3.4-1/jpeg/jcsample.c **** 		   JDIMENSION input_cols, JDIMENSION output_cols)
 945              		.loc 1 96 1 is_stmt 1 view .LVU318
 946              	.LBB28:
  99:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPLE pixval;
 947              		.loc 1 99 3 view .LVU319
 100:fltk-1.3.4-1/jpeg/jcsample.c ****   register int count;
 948              		.loc 1 100 3 view .LVU320
 101:fltk-1.3.4-1/jpeg/jcsample.c ****   int row;
 949              		.loc 1 101 3 view .LVU321
 102:fltk-1.3.4-1/jpeg/jcsample.c ****   int numcols = (int) (output_cols - input_cols);
 950              		.loc 1 102 3 view .LVU322
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 951              		.loc 1 103 3 view .LVU323
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 952              		.loc 1 105 3 view .LVU324
 953              	.LBE28:
 954              	.LBE30:
 307:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow, outrow;
 955              		.loc 1 307 1 is_stmt 0 view .LVU325
 956 0033 48895424 		movq	%rdx, -40(%rsp)
 956      D8
 957              	.LBB31:
 958              	.LBB29:
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 959              		.loc 1 105 6 view .LVU326
 960 0038 85C0     		testl	%eax, %eax
 961 003a 7E54     		jle	.L68
 962              	.LVL105:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 963              		.loc 1 106 19 is_stmt 1 view .LVU327
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 964              		.loc 1 106 5 is_stmt 0 view .LVU328
 965 003c 83F9FF   		cmpl	$-1, %ecx
 966 003f 7C4F     		jl	.L68
 967 0041 4889D3   		movq	%rdx, %rbx
 968              	.LVL106:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 969              		.loc 1 106 5 view .LVU329
 970 0044 488D72F8 		leaq	-8(%rdx), %rsi
 971              	.LVL107:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 972              		.loc 1 106 5 view .LVU330
 973 0048 448D40FF 		leal	-1(%rax), %r8d
 974 004c 8D5101   		leal	1(%rcx), %edx
 975              	.LVL108:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 976              		.loc 1 106 5 view .LVU331
 977 004f 4983C001 		addq	$1, %r8
 978 0053 4C8D0CD3 		leaq	(%rbx,%rdx,8), %r9
 979              	.LVL109:
 980 0057 660F1F84 		.p2align 4,,10
 980      00000000 
 980      00
 981              		.p2align 3
 982              	.L70:
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 983              		.loc 1 107 7 is_stmt 1 view .LVU332
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 984              		.loc 1 107 11 is_stmt 0 view .LVU333
 985 0060 488B06   		movq	(%rsi), %rax
 986 0063 4801F8   		addq	%rdi, %rax
 987              	.LVL110:
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 988              		.loc 1 108 7 is_stmt 1 view .LVU334
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 989              		.loc 1 108 14 is_stmt 0 view .LVU335
 990 0066 0FB648FF 		movzbl	-1(%rax), %ecx
 991              	.LVL111:
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 992              		.loc 1 109 7 is_stmt 1 view .LVU336
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 993              		.loc 1 109 29 view .LVU337
 994 006a 4A8D1400 		leaq	(%rax,%r8), %rdx
 995 006e 6690     		.p2align 4,,10
 996              		.p2align 3
 997              	.L69:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 998              		.loc 1 110 2 view .LVU338
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 999              		.loc 1 110 6 is_stmt 0 view .LVU339
 1000 0070 4883C001 		addq	$1, %rax
 1001              	.LVL112:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 1002              		.loc 1 110 9 view .LVU340
 1003 0074 8848FF   		movb	%cl, -1(%rax)
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1004              		.loc 1 109 40 is_stmt 1 view .LVU341
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1005              		.loc 1 109 29 view .LVU342
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1006              		.loc 1 109 7 is_stmt 0 view .LVU343
 1007 0077 4839D0   		cmpq	%rdx, %rax
 1008 007a 75F4     		jne	.L69
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1009              		.loc 1 106 35 is_stmt 1 view .LVU344
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1010              		.loc 1 106 19 view .LVU345
 1011 007c 4883C608 		addq	$8, %rsi
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1012              		.loc 1 106 5 is_stmt 0 view .LVU346
 1013 0080 4939F1   		cmpq	%rsi, %r9
 1014 0083 75DB     		jne	.L70
 1015 0085 488B4424 		movq	-56(%rsp), %rax
 1015      C8
 1016              	.LVL113:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1017              		.loc 1 106 5 view .LVU347
 1018 008a 8B886401 		movl	356(%rax), %ecx
 1018      0000
 1019              	.LVL114:
 1020              	.L68:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1021              		.loc 1 106 5 view .LVU348
 1022              	.LBE29:
 1023              	.LBE31:
 319:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->image_width, output_cols * 2);
 320:fltk-1.3.4-1/jpeg/jcsample.c **** 
 321:fltk-1.3.4-1/jpeg/jcsample.c ****   /* We don't bother to form the individual "smoothed" input pixel values;
 322:fltk-1.3.4-1/jpeg/jcsample.c ****    * we can directly compute the output which is the average of the four
 323:fltk-1.3.4-1/jpeg/jcsample.c ****    * smoothed values.  Each of the four member pixels contributes a fraction
 324:fltk-1.3.4-1/jpeg/jcsample.c ****    * (1-8*SF) to its own smoothed image and a fraction SF to each of the three
 325:fltk-1.3.4-1/jpeg/jcsample.c ****    * other smoothed pixels, therefore a total fraction (1-5*SF)/4 to the final
 326:fltk-1.3.4-1/jpeg/jcsample.c ****    * output.  The four corner-adjacent neighbor pixels contribute a fraction
 327:fltk-1.3.4-1/jpeg/jcsample.c ****    * SF to just one smoothed pixel, or SF/4 to the final output; while the
 328:fltk-1.3.4-1/jpeg/jcsample.c ****    * eight edge-adjacent neighbors contribute SF to each of two smoothed
 329:fltk-1.3.4-1/jpeg/jcsample.c ****    * pixels, or SF/2 overall.  In order to use integer arithmetic, these
 330:fltk-1.3.4-1/jpeg/jcsample.c ****    * factors are scaled by 2^16 = 65536.
 331:fltk-1.3.4-1/jpeg/jcsample.c ****    * Also recall that SF = smoothing_factor / 1024.
 332:fltk-1.3.4-1/jpeg/jcsample.c ****    */
 333:fltk-1.3.4-1/jpeg/jcsample.c **** 
 334:fltk-1.3.4-1/jpeg/jcsample.c ****   memberscale = 16384 - cinfo->smoothing_factor * 80; /* scaled (1-5*SF)/4 */
 1024              		.loc 1 334 3 is_stmt 1 view .LVU349
 1025              		.loc 1 334 30 is_stmt 0 view .LVU350
 1026 0090 488B4424 		movq	-56(%rsp), %rax
 1026      C8
 1027 0095 8B803401 		movl	308(%rax), %eax
 1027      0000
 1028              		.loc 1 334 49 view .LVU351
 1029 009b 6BD0B0   		imull	$-80, %eax, %edx
 335:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 16; /* scaled SF/4 */
 1030              		.loc 1 335 40 view .LVU352
 1031 009e C1E004   		sall	$4, %eax
 1032              		.loc 1 335 14 view .LVU353
 1033 00a1 4C63E0   		movslq	%eax, %r12
 334:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 16; /* scaled SF/4 */
 1034              		.loc 1 334 23 view .LVU354
 1035 00a4 81C20040 		addl	$16384, %edx
 1035      0000
 334:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 16; /* scaled SF/4 */
 1036              		.loc 1 334 15 view .LVU355
 1037 00aa 4C63EA   		movslq	%edx, %r13
 1038              	.LVL115:
 1039              		.loc 1 335 3 is_stmt 1 view .LVU356
 336:fltk-1.3.4-1/jpeg/jcsample.c **** 
 337:fltk-1.3.4-1/jpeg/jcsample.c ****   inrow = outrow = 0;
 1040              		.loc 1 337 3 view .LVU357
 338:fltk-1.3.4-1/jpeg/jcsample.c ****   while (inrow < cinfo->max_v_samp_factor) {
 1041              		.loc 1 338 3 view .LVU358
 1042              		.loc 1 338 9 view .LVU359
 1043 00ad 85C9     		testl	%ecx, %ecx
 1044 00af 0F8E6302 		jle	.L67
 1044      0000
 1045 00b5 8B4424D4 		movl	-44(%rsp), %eax
 1046 00b9 4531F6   		xorl	%r14d, %r14d
 1047 00bc 83E803   		subl	$3, %eax
 1048 00bf 48894424 		movq	%rax, -8(%rsp)
 1048      F8
 1049 00c4 4883C001 		addq	$1, %rax
 1050 00c8 48894424 		movq	%rax, -16(%rsp)
 1050      F0
 1051 00cd 4801C0   		addq	%rax, %rax
 1052 00d0 48894424 		movq	%rax, -24(%rsp)
 1052      E8
 1053              	.LVL116:
 1054              		.p2align 4,,10
 1055 00d5 0F1F00   		.p2align 3
 1056              	.L74:
 339:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[outrow];
 1057              		.loc 1 339 5 view .LVU360
 1058              		.loc 1 339 12 is_stmt 0 view .LVU361
 1059 00d8 488B4424 		movq	-32(%rsp), %rax
 1059      E0
 1060 00dd 4E8B1CB0 		movq	(%rax,%r14,4), %r11
 1061              	.LVL117:
 340:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 = input_data[inrow];
 1062              		.loc 1 340 5 is_stmt 1 view .LVU362
 1063              		.loc 1 340 12 is_stmt 0 view .LVU363
 1064 00e1 488B4424 		movq	-40(%rsp), %rax
 1064      D8
 341:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr1 = input_data[inrow+1];
 342:fltk-1.3.4-1/jpeg/jcsample.c ****     above_ptr = input_data[inrow-1];
 1065              		.loc 1 342 15 view .LVU364
 1066 00e6 4E8B4CF0 		movq	-8(%rax,%r14,8), %r9
 1066      F8
 343:fltk-1.3.4-1/jpeg/jcsample.c ****     below_ptr = input_data[inrow+2];
 1067              		.loc 1 343 15 view .LVU365
 1068 00eb 4E8B54F0 		movq	16(%rax,%r14,8), %r10
 1068      10
 340:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 = input_data[inrow];
 1069              		.loc 1 340 12 view .LVU366
 1070 00f0 4A8B3CF0 		movq	(%rax,%r14,8), %rdi
 1071              	.LVL118:
 341:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr1 = input_data[inrow+1];
 1072              		.loc 1 341 5 is_stmt 1 view .LVU367
 341:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr1 = input_data[inrow+1];
 1073              		.loc 1 341 12 is_stmt 0 view .LVU368
 1074 00f4 4E8B44F0 		movq	8(%rax,%r14,8), %r8
 1074      08
 1075              	.LVL119:
 342:fltk-1.3.4-1/jpeg/jcsample.c ****     below_ptr = input_data[inrow+2];
 1076              		.loc 1 342 5 is_stmt 1 view .LVU369
 1077              		.loc 1 343 5 view .LVU370
 344:fltk-1.3.4-1/jpeg/jcsample.c **** 
 345:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Special case for first column: pretend column -1 is same as column 0 */
 346:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 1078              		.loc 1 346 5 view .LVU371
 347:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 348:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 1079              		.loc 1 348 16 is_stmt 0 view .LVU372
 1080 00f9 410FB609 		movzbl	(%r9), %ecx
 1081              		.loc 1 348 41 view .LVU373
 1082 00fd 410FB641 		movzbl	1(%r9), %eax
 1082      01
 349:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1083              		.loc 1 349 9 view .LVU374
 1084 0102 410FB612 		movzbl	(%r10), %edx
 1085              		.loc 1 349 34 view .LVU375
 1086 0106 410FB66A 		movzbl	1(%r10), %ebp
 1086      01
 348:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1087              		.loc 1 348 39 view .LVU376
 1088 010b 01C8     		addl	%ecx, %eax
 346:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1089              		.loc 1 346 17 view .LVU377
 1090 010d 0FB61F   		movzbl	(%rdi), %ebx
 347:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 1091              		.loc 1 347 3 view .LVU378
 1092 0110 410FB630 		movzbl	(%r8), %esi
 1093              	.LVL120:
 348:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1094              		.loc 1 348 5 is_stmt 1 view .LVU379
 348:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1095              		.loc 1 348 66 is_stmt 0 view .LVU380
 1096 0114 01D0     		addl	%edx, %eax
 1097              		.loc 1 349 32 view .LVU381
 1098 0116 01E8     		addl	%ebp, %eax
 350:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[2]) +
 1099              		.loc 1 350 31 view .LVU382
 1100 0118 0FB66F02 		movzbl	2(%rdi), %ebp
 349:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[2]) +
 1101              		.loc 1 349 59 view .LVU383
 1102 011c 01D8     		addl	%ebx, %eax
 1103              		.loc 1 350 29 view .LVU384
 1104 011e 01E8     		addl	%ebp, %eax
 351:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[2]);
 1105              		.loc 1 351 31 view .LVU385
 1106 0120 410FB668 		movzbl	2(%r8), %ebp
 1106      02
 350:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[2]) +
 1107              		.loc 1 350 53 view .LVU386
 1108 0125 01F0     		addl	%esi, %eax
 1109              		.loc 1 351 29 view .LVU387
 1110 0127 01E8     		addl	%ebp, %eax
 346:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1111              		.loc 1 346 39 view .LVU388
 1112 0129 0FB66F01 		movzbl	1(%rdi), %ebp
 1113              	.LVL121:
 348:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1114              		.loc 1 348 14 view .LVU389
 1115 012d 4898     		cltq
 1116              	.LVL122:
 352:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum += neighsum;
 1117              		.loc 1 352 5 is_stmt 1 view .LVU390
 353:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum += GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[2]) +
 1118              		.loc 1 353 5 view .LVU391
 354:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[2]);
 355:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1119              		.loc 1 355 5 view .LVU392
 346:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1120              		.loc 1 346 37 is_stmt 0 view .LVU393
 1121 012f 01EB     		addl	%ebp, %ebx
 1122              	.LVL123:
 347:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 1123              		.loc 1 347 25 view .LVU394
 1124 0131 410FB668 		movzbl	1(%r8), %ebp
 1124      01
 1125              	.LVL124:
 346:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1126              		.loc 1 346 61 view .LVU395
 1127 0136 01DE     		addl	%ebx, %esi
 1128              	.LVL125:
 356:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1129              		.loc 1 356 12 view .LVU396
 1130 0138 498D5B01 		leaq	1(%r11), %rbx
 1131 013c 48895C24 		movq	%rbx, -80(%rsp)
 1131      B0
 353:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[2]);
 1132              		.loc 1 353 42 view .LVU397
 1133 0141 410FB659 		movzbl	2(%r9), %ebx
 1133      02
 1134              	.LVL126:
 347:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 1135              		.loc 1 347 23 view .LVU398
 1136 0146 01EE     		addl	%ebp, %esi
 357:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
 1137              		.loc 1 357 25 view .LVU399
 1138 0148 498D6802 		leaq	2(%r8), %rbp
 1139              	.LVL127:
 346:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1140              		.loc 1 346 15 view .LVU400
 1141 014c 4863F6   		movslq	%esi, %rsi
 353:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[2]);
 1142              		.loc 1 353 40 view .LVU401
 1143 014f 01D9     		addl	%ebx, %ecx
 1144              	.LVL128:
 354:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1145              		.loc 1 354 28 view .LVU402
 1146 0151 410FB65A 		movzbl	2(%r10), %ebx
 1146      02
 1147              	.LVL129:
 355:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1148              		.loc 1 355 27 view .LVU403
 1149 0156 490FAFF5 		imulq	%r13, %rsi
 1150              	.LVL130:
 356:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
 1151              		.loc 1 356 5 is_stmt 1 view .LVU404
 353:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[2]);
 1152              		.loc 1 353 67 is_stmt 0 view .LVU405
 1153 015a 01CA     		addl	%ecx, %edx
 1154              	.LVL131:
 354:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1155              		.loc 1 354 26 view .LVU406
 1156 015c 01DA     		addl	%ebx, %edx
 1157              		.loc 1 357 41 view .LVU407
 1158 015e 498D5902 		leaq	2(%r9), %rbx
 1159              	.LVL132:
 354:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1160              		.loc 1 354 26 view .LVU408
 1161 0162 4863D2   		movslq	%edx, %rdx
 353:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[2]);
 1162              		.loc 1 353 14 view .LVU409
 1163 0165 488D0442 		leaq	(%rdx,%rax,2), %rax
 1164              	.LVL133:
 355:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1165              		.loc 1 355 52 view .LVU410
 1166 0169 490FAFC4 		imulq	%r12, %rax
 356:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
 1167              		.loc 1 356 39 view .LVU411
 1168 016d 488D8406 		leaq	32768(%rsi,%rax), %rax
 1168      00800000 
 356:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
 1169              		.loc 1 356 48 view .LVU412
 1170 0175 48C1F810 		sarq	$16, %rax
 358:fltk-1.3.4-1/jpeg/jcsample.c **** 
 359:fltk-1.3.4-1/jpeg/jcsample.c ****     for (colctr = output_cols - 2; colctr > 0; colctr--) {
 1171              		.loc 1 359 5 view .LVU413
 1172 0179 837C24D4 		cmpl	$2, -44(%rsp)
 1172      02
 356:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
 1173              		.loc 1 356 17 view .LVU414
 1174 017e 418803   		movb	%al, (%r11)
 1175              	.LVL134:
 357:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1176              		.loc 1 357 5 is_stmt 1 view .LVU415
 357:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1177              		.loc 1 357 12 is_stmt 0 view .LVU416
 1178 0181 488D4702 		leaq	2(%rdi), %rax
 1179 0185 48894424 		movq	%rax, -88(%rsp)
 1179      A8
 1180              	.LVL135:
 357:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1181              		.loc 1 357 18 is_stmt 1 view .LVU417
 357:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1182              		.loc 1 357 31 view .LVU418
 357:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1183              		.loc 1 357 47 view .LVU419
 357:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1184              		.loc 1 357 57 is_stmt 0 view .LVU420
 1185 018a 498D4202 		leaq	2(%r10), %rax
 1186              	.LVL136:
 357:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1187              		.loc 1 357 57 view .LVU421
 1188 018e 48894424 		movq	%rax, -72(%rsp)
 1188      B8
 1189              	.LVL137:
 1190              		.loc 1 359 5 is_stmt 1 view .LVU422
 1191              		.loc 1 359 36 view .LVU423
 1192              		.loc 1 359 5 is_stmt 0 view .LVU424
 1193 0193 0F84E200 		je	.L72
 1193      0000
 1194 0199 48895C24 		movq	%rbx, -64(%rsp)
 1194      C0
 1195 019e 488B5C24 		movq	-8(%rsp), %rbx
 1195      F8
 1196              	.LVL138:
 1197              		.loc 1 359 5 view .LVU425
 1198 01a3 31C0     		xorl	%eax, %eax
 1199              	.LVL139:
 1200              		.p2align 4,,10
 1201 01a5 0F1F00   		.p2align 3
 1202              	.L73:
 360:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of pixels directly mapped to this output element */
 361:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 1203              		.loc 1 361 7 is_stmt 1 discriminator 3 view .LVU426
 362:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 363:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of edge-neighbor pixels */
 364:fltk-1.3.4-1/jpeg/jcsample.c ****       neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 1204              		.loc 1 364 7 discriminator 3 view .LVU427
 1205              		.loc 1 364 43 is_stmt 0 discriminator 3 view .LVU428
 1206 01a8 410FB64C 		movzbl	3(%r9,%rax,2), %ecx
 1206      4103
 1207              		.loc 1 364 18 discriminator 3 view .LVU429
 1208 01ae 410FB654 		movzbl	2(%r9,%rax,2), %edx
 1208      4102
 361:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1209              		.loc 1 361 41 discriminator 3 view .LVU430
 1210 01b4 0FB67447 		movzbl	3(%rdi,%rax,2), %esi
 1210      03
 365:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 366:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(inptr0[-1]) + GETJSAMPLE(inptr0[2]) +
 367:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(inptr1[-1]) + GETJSAMPLE(inptr1[2]);
 368:fltk-1.3.4-1/jpeg/jcsample.c ****       /* The edge-neighbors count twice as much as corner-neighbors */
 369:fltk-1.3.4-1/jpeg/jcsample.c ****       neighsum += neighsum;
 370:fltk-1.3.4-1/jpeg/jcsample.c ****       /* Add in the corner-neighbors */
 371:fltk-1.3.4-1/jpeg/jcsample.c ****       neighsum += GETJSAMPLE(above_ptr[-1]) + GETJSAMPLE(above_ptr[2]) +
 1211              		.loc 1 371 19 discriminator 3 view .LVU431
 1212 01b9 450FB67C 		movzbl	1(%r9,%rax,2), %r15d
 1212      4101
 364:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1213              		.loc 1 364 41 discriminator 3 view .LVU432
 1214 01bf 01CA     		addl	%ecx, %edx
 365:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1215              		.loc 1 365 4 discriminator 3 view .LVU433
 1216 01c1 410FB64C 		movzbl	2(%r10,%rax,2), %ecx
 1216      4202
 364:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1217              		.loc 1 364 68 discriminator 3 view .LVU434
 1218 01c7 01CA     		addl	%ecx, %edx
 365:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1219              		.loc 1 365 29 discriminator 3 view .LVU435
 1220 01c9 410FB64C 		movzbl	3(%r10,%rax,2), %ecx
 1220      4203
 365:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1221              		.loc 1 365 27 discriminator 3 view .LVU436
 1222 01cf 01CA     		addl	%ecx, %edx
 366:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(inptr1[-1]) + GETJSAMPLE(inptr1[2]);
 1223              		.loc 1 366 4 discriminator 3 view .LVU437
 1224 01d1 0FB64C47 		movzbl	1(%rdi,%rax,2), %ecx
 1224      01
 365:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1225              		.loc 1 365 54 discriminator 3 view .LVU438
 1226 01d6 01CA     		addl	%ecx, %edx
 366:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(inptr1[-1]) + GETJSAMPLE(inptr1[2]);
 1227              		.loc 1 366 29 discriminator 3 view .LVU439
 1228 01d8 0FB64C47 		movzbl	4(%rdi,%rax,2), %ecx
 1228      04
 366:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(inptr1[-1]) + GETJSAMPLE(inptr1[2]);
 1229              		.loc 1 366 27 discriminator 3 view .LVU440
 1230 01dd 01CA     		addl	%ecx, %edx
 367:fltk-1.3.4-1/jpeg/jcsample.c ****       /* The edge-neighbors count twice as much as corner-neighbors */
 1231              		.loc 1 367 4 discriminator 3 view .LVU441
 1232 01df 410FB64C 		movzbl	1(%r8,%rax,2), %ecx
 1232      4001
 366:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(inptr1[-1]) + GETJSAMPLE(inptr1[2]);
 1233              		.loc 1 366 51 discriminator 3 view .LVU442
 1234 01e5 01CA     		addl	%ecx, %edx
 367:fltk-1.3.4-1/jpeg/jcsample.c ****       /* The edge-neighbors count twice as much as corner-neighbors */
 1235              		.loc 1 367 29 discriminator 3 view .LVU443
 1236 01e7 410FB64C 		movzbl	4(%r8,%rax,2), %ecx
 1236      4004
 367:fltk-1.3.4-1/jpeg/jcsample.c ****       /* The edge-neighbors count twice as much as corner-neighbors */
 1237              		.loc 1 367 27 discriminator 3 view .LVU444
 1238 01ed 01CA     		addl	%ecx, %edx
 361:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1239              		.loc 1 361 19 discriminator 3 view .LVU445
 1240 01ef 0FB64C47 		movzbl	2(%rdi,%rax,2), %ecx
 1240      02
 364:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1241              		.loc 1 364 16 discriminator 3 view .LVU446
 1242 01f4 4863D2   		movslq	%edx, %rdx
 1243              	.LVL140:
 369:fltk-1.3.4-1/jpeg/jcsample.c ****       /* Add in the corner-neighbors */
 1244              		.loc 1 369 7 is_stmt 1 discriminator 3 view .LVU447
 1245              		.loc 1 371 7 discriminator 3 view .LVU448
 372:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[2]);
 373:fltk-1.3.4-1/jpeg/jcsample.c ****       /* form final output scaled up by 2^16 */
 374:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1246              		.loc 1 374 7 discriminator 3 view .LVU449
 361:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1247              		.loc 1 361 39 is_stmt 0 discriminator 3 view .LVU450
 1248 01f7 01F1     		addl	%esi, %ecx
 362:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of edge-neighbor pixels */
 1249              		.loc 1 362 5 discriminator 3 view .LVU451
 1250 01f9 410FB674 		movzbl	2(%r8,%rax,2), %esi
 1250      4002
 361:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1251              		.loc 1 361 63 discriminator 3 view .LVU452
 1252 01ff 01F1     		addl	%esi, %ecx
 362:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of edge-neighbor pixels */
 1253              		.loc 1 362 27 discriminator 3 view .LVU453
 1254 0201 410FB674 		movzbl	3(%r8,%rax,2), %esi
 1254      4003
 362:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of edge-neighbor pixels */
 1255              		.loc 1 362 25 discriminator 3 view .LVU454
 1256 0207 01F1     		addl	%esi, %ecx
 371:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[2]);
 1257              		.loc 1 371 47 discriminator 3 view .LVU455
 1258 0209 410FB674 		movzbl	4(%r9,%rax,2), %esi
 1258      4104
 361:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1259              		.loc 1 361 17 discriminator 3 view .LVU456
 1260 020f 4863C9   		movslq	%ecx, %rcx
 371:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[2]);
 1261              		.loc 1 371 45 discriminator 3 view .LVU457
 1262 0212 4101F7   		addl	%esi, %r15d
 372:fltk-1.3.4-1/jpeg/jcsample.c ****       /* form final output scaled up by 2^16 */
 1263              		.loc 1 372 5 discriminator 3 view .LVU458
 1264 0215 410FB674 		movzbl	1(%r10,%rax,2), %esi
 1264      4201
 1265              		.loc 1 374 29 discriminator 3 view .LVU459
 1266 021b 490FAFCD 		imulq	%r13, %rcx
 1267              	.LVL141:
 375:fltk-1.3.4-1/jpeg/jcsample.c ****       /* round, descale and output it */
 376:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1268              		.loc 1 376 7 is_stmt 1 discriminator 3 view .LVU460
 371:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[2]);
 1269              		.loc 1 371 72 is_stmt 0 discriminator 3 view .LVU461
 1270 021f 4401FE   		addl	%r15d, %esi
 372:fltk-1.3.4-1/jpeg/jcsample.c ****       /* form final output scaled up by 2^16 */
 1271              		.loc 1 372 33 discriminator 3 view .LVU462
 1272 0222 450FB67C 		movzbl	4(%r10,%rax,2), %r15d
 1272      4204
 372:fltk-1.3.4-1/jpeg/jcsample.c ****       /* form final output scaled up by 2^16 */
 1273              		.loc 1 372 31 discriminator 3 view .LVU463
 1274 0228 4401FE   		addl	%r15d, %esi
 1275 022b 4863F6   		movslq	%esi, %rsi
 371:fltk-1.3.4-1/jpeg/jcsample.c **** 		  GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[2]);
 1276              		.loc 1 371 16 discriminator 3 view .LVU464
 1277 022e 488D1456 		leaq	(%rsi,%rdx,2), %rdx
 1278              	.LVL142:
 374:fltk-1.3.4-1/jpeg/jcsample.c ****       /* round, descale and output it */
 1279              		.loc 1 374 54 discriminator 3 view .LVU465
 1280 0232 490FAFD4 		imulq	%r12, %rdx
 1281              		.loc 1 376 41 discriminator 3 view .LVU466
 1282 0236 488D9411 		leaq	32768(%rcx,%rdx), %rdx
 1282      00800000 
 1283              		.loc 1 376 50 discriminator 3 view .LVU467
 1284 023e 48C1FA10 		sarq	$16, %rdx
 1285              		.loc 1 376 19 discriminator 3 view .LVU468
 1286 0242 41885403 		movb	%dl, 1(%r11,%rax)
 1286      01
 1287              	.LVL143:
 377:fltk-1.3.4-1/jpeg/jcsample.c ****       inptr0 += 2; inptr1 += 2; above_ptr += 2; below_ptr += 2;
 1288              		.loc 1 377 7 is_stmt 1 discriminator 3 view .LVU469
 1289              		.loc 1 377 20 discriminator 3 view .LVU470
 1290              		.loc 1 377 33 discriminator 3 view .LVU471
 1291              		.loc 1 377 49 discriminator 3 view .LVU472
 359:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of pixels directly mapped to this output element */
 1292              		.loc 1 359 48 discriminator 3 view .LVU473
 359:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of pixels directly mapped to this output element */
 1293              		.loc 1 359 36 discriminator 3 view .LVU474
 1294 0247 4889C2   		movq	%rax, %rdx
 1295 024a 4883C001 		addq	$1, %rax
 1296              	.LVL144:
 359:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of pixels directly mapped to this output element */
 1297              		.loc 1 359 5 is_stmt 0 discriminator 3 view .LVU475
 1298 024e 4839DA   		cmpq	%rbx, %rdx
 1299 0251 0F8551FF 		jne	.L73
 1299      FFFF
 1300 0257 488B4424 		movq	-24(%rsp), %rax
 1300      E8
 1301 025c 488B7C24 		movq	-16(%rsp), %rdi
 1301      F0
 1302              	.LVL145:
 359:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of pixels directly mapped to this output element */
 1303              		.loc 1 359 5 discriminator 3 view .LVU476
 1304 0261 48014424 		addq	%rax, -88(%rsp)
 1304      A8
 1305              	.LVL146:
 359:fltk-1.3.4-1/jpeg/jcsample.c ****       /* sum of pixels directly mapped to this output element */
 1306              		.loc 1 359 5 discriminator 3 view .LVU477
 1307 0266 488B5C24 		movq	-64(%rsp), %rbx
 1307      C0
 1308 026b 48017C24 		addq	%rdi, -80(%rsp)
 1308      B0
 1309 0270 4801C5   		addq	%rax, %rbp
 1310 0273 48014424 		addq	%rax, -72(%rsp)
 1310      B8
 1311 0278 4801C3   		addq	%rax, %rbx
 1312              	.LVL147:
 1313              	.L72:
 378:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 379:fltk-1.3.4-1/jpeg/jcsample.c **** 
 380:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Special case for last column */
 381:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = GETJSAMPLE(*inptr0) + GETJSAMPLE(inptr0[1]) +
 1314              		.loc 1 381 5 is_stmt 1 view .LVU478
 382:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 383:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 384:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1315              		.loc 1 384 34 is_stmt 0 view .LVU479
 1316 027b 4C8B5424 		movq	-72(%rsp), %r10
 1316      B8
 383:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1317              		.loc 1 383 41 view .LVU480
 1318 0280 0FB64B01 		movzbl	1(%rbx), %ecx
 1319 0284 4983C602 		addq	$2, %r14
 1320              	.LVL148:
 383:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1321              		.loc 1 383 16 view .LVU481
 1322 0288 0FB603   		movzbl	(%rbx), %eax
 381:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1323              		.loc 1 381 39 view .LVU482
 1324 028b 4C8B5C24 		movq	-88(%rsp), %r11
 1324      A8
 1325              		.loc 1 384 9 view .LVU483
 1326 0290 450FB602 		movzbl	(%r10), %r8d
 1327              		.loc 1 384 34 view .LVU484
 1328 0294 410FB652 		movzbl	1(%r10), %edx
 1328      01
 383:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1329              		.loc 1 383 39 view .LVU485
 1330 0299 01C8     		addl	%ecx, %eax
 381:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1331              		.loc 1 381 39 view .LVU486
 1332 029b 410FB67B 		movzbl	1(%r11), %edi
 1332      01
 382:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1333              		.loc 1 382 25 view .LVU487
 1334 02a0 0FB67501 		movzbl	1(%rbp), %esi
 1335              	.LVL149:
 383:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1336              		.loc 1 383 5 is_stmt 1 view .LVU488
 383:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1337              		.loc 1 383 66 is_stmt 0 view .LVU489
 1338 02a4 4401C0   		addl	%r8d, %eax
 385:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(inptr0[-1]) + GETJSAMPLE(inptr0[1]) +
 1339              		.loc 1 385 9 view .LVU490
 1340 02a7 450FB643 		movzbl	-1(%r11), %r8d
 1340      FF
 384:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(inptr0[-1]) + GETJSAMPLE(inptr0[1]) +
 1341              		.loc 1 384 32 view .LVU491
 1342 02ac 01D0     		addl	%edx, %eax
 384:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(inptr0[-1]) + GETJSAMPLE(inptr0[1]) +
 1343              		.loc 1 384 59 view .LVU492
 1344 02ae 4401C0   		addl	%r8d, %eax
 386:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(inptr1[-1]) + GETJSAMPLE(inptr1[1]);
 1345              		.loc 1 386 9 view .LVU493
 1346 02b1 440FB645 		movzbl	-1(%rbp), %r8d
 1346      FF
 385:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(inptr0[-1]) + GETJSAMPLE(inptr0[1]) +
 1347              		.loc 1 385 32 view .LVU494
 1348 02b6 01F8     		addl	%edi, %eax
 385:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(inptr0[-1]) + GETJSAMPLE(inptr0[1]) +
 1349              		.loc 1 385 56 view .LVU495
 1350 02b8 4401C0   		addl	%r8d, %eax
 381:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1351              		.loc 1 381 17 view .LVU496
 1352 02bb 450FB603 		movzbl	(%r11), %r8d
 1353              	.LVL150:
 1354              		.loc 1 386 32 view .LVU497
 1355 02bf 01F0     		addl	%esi, %eax
 381:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1356              		.loc 1 381 37 view .LVU498
 1357 02c1 4401C7   		addl	%r8d, %edi
 1358              	.LVL151:
 382:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 1359              		.loc 1 382 3 view .LVU499
 1360 02c4 440FB645 		movzbl	0(%rbp), %r8d
 1360      00
 1361              	.LVL152:
 383:fltk-1.3.4-1/jpeg/jcsample.c **** 	       GETJSAMPLE(*below_ptr) + GETJSAMPLE(below_ptr[1]) +
 1362              		.loc 1 383 14 view .LVU500
 1363 02c9 4898     		cltq
 1364              	.LVL153:
 387:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum += neighsum;
 1365              		.loc 1 387 5 is_stmt 1 view .LVU501
 388:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum += GETJSAMPLE(above_ptr[-1]) + GETJSAMPLE(above_ptr[1]) +
 1366              		.loc 1 388 5 view .LVU502
 389:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[1]);
 390:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1367              		.loc 1 390 5 view .LVU503
 381:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1368              		.loc 1 381 61 is_stmt 0 view .LVU504
 1369 02cb 4401C7   		addl	%r8d, %edi
 382:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(above_ptr[1]) +
 1370              		.loc 1 382 23 view .LVU505
 1371 02ce 448D0437 		leal	(%rdi,%rsi), %r8d
 1372              	.LVL154:
 388:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[1]);
 1373              		.loc 1 388 17 view .LVU506
 1374 02d2 0FB673FF 		movzbl	-1(%rbx), %esi
 1375              	.LVL155:
 391:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr = (JSAMPLE) ((membersum + 32768) >> 16);
 1376              		.loc 1 391 15 view .LVU507
 1377 02d6 488B5C24 		movq	-80(%rsp), %rbx
 1377      B0
 381:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(*inptr1) + GETJSAMPLE(inptr1[1]);
 1378              		.loc 1 381 15 view .LVU508
 1379 02db 4D63C0   		movslq	%r8d, %r8
 388:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[1]);
 1380              		.loc 1 388 43 view .LVU509
 1381 02de 01F1     		addl	%esi, %ecx
 1382              	.LVL156:
 389:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1383              		.loc 1 389 3 view .LVU510
 1384 02e0 410FB672 		movzbl	-1(%r10), %esi
 1384      FF
 390:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr = (JSAMPLE) ((membersum + 32768) >> 16);
 1385              		.loc 1 390 27 view .LVU511
 1386 02e5 4D0FAFC5 		imulq	%r13, %r8
 1387              	.LVL157:
 1388              		.loc 1 391 5 is_stmt 1 view .LVU512
 388:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[1]);
 1389              		.loc 1 388 70 is_stmt 0 view .LVU513
 1390 02e9 01F1     		addl	%esi, %ecx
 389:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1391              		.loc 1 389 29 view .LVU514
 1392 02eb 01CA     		addl	%ecx, %edx
 1393 02ed 4863D2   		movslq	%edx, %rdx
 388:fltk-1.3.4-1/jpeg/jcsample.c **** 		GETJSAMPLE(below_ptr[-1]) + GETJSAMPLE(below_ptr[1]);
 1394              		.loc 1 388 14 view .LVU515
 1395 02f0 488D0442 		leaq	(%rdx,%rax,2), %rax
 390:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr = (JSAMPLE) ((membersum + 32768) >> 16);
 1396              		.loc 1 390 52 view .LVU516
 1397 02f4 490FAFC4 		imulq	%r12, %rax
 1398              		.loc 1 391 37 view .LVU517
 1399 02f8 498D8400 		leaq	32768(%r8,%rax), %rax
 1399      00800000 
 1400              		.loc 1 391 46 view .LVU518
 1401 0300 48C1F810 		sarq	$16, %rax
 1402              		.loc 1 391 15 view .LVU519
 1403 0304 8803     		movb	%al, (%rbx)
 392:fltk-1.3.4-1/jpeg/jcsample.c **** 
 393:fltk-1.3.4-1/jpeg/jcsample.c ****     inrow += 2;
 1404              		.loc 1 393 5 is_stmt 1 view .LVU520
 394:fltk-1.3.4-1/jpeg/jcsample.c ****     outrow++;
 1405              		.loc 1 394 5 view .LVU521
 338:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[outrow];
 1406              		.loc 1 338 9 view .LVU522
 1407 0306 488B4424 		movq	-56(%rsp), %rax
 1407      C8
 1408 030b 4439B064 		cmpl	%r14d, 356(%rax)
 1408      010000
 1409 0312 0F8FC0FD 		jg	.L74
 1409      FFFF
 1410              	.L67:
 395:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 396:fltk-1.3.4-1/jpeg/jcsample.c **** }
 1411              		.loc 1 396 1 is_stmt 0 view .LVU523
 1412 0318 5B       		popq	%rbx
 1413              		.cfi_def_cfa_offset 48
 1414 0319 5D       		popq	%rbp
 1415              		.cfi_def_cfa_offset 40
 1416 031a 415C     		popq	%r12
 1417              		.cfi_def_cfa_offset 32
 1418              	.LVL158:
 1419              		.loc 1 396 1 view .LVU524
 1420 031c 415D     		popq	%r13
 1421              		.cfi_def_cfa_offset 24
 1422              	.LVL159:
 1423              		.loc 1 396 1 view .LVU525
 1424 031e 415E     		popq	%r14
 1425              		.cfi_def_cfa_offset 16
 1426 0320 415F     		popq	%r15
 1427              		.cfi_def_cfa_offset 8
 1428 0322 C3       		ret
 1429              		.cfi_endproc
 1430              	.LFE58:
 1432              		.section	.text.fullsize_smooth_downsample,"ax",@progbits
 1433              		.p2align 4
 1435              	fullsize_smooth_downsample:
 1436              	.LVL160:
 1437              	.LFB59:
 397:fltk-1.3.4-1/jpeg/jcsample.c **** 
 398:fltk-1.3.4-1/jpeg/jcsample.c **** 
 399:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 400:fltk-1.3.4-1/jpeg/jcsample.c ****  * Downsample pixel values of a single component.
 401:fltk-1.3.4-1/jpeg/jcsample.c ****  * This version handles the special case of a full-size component,
 402:fltk-1.3.4-1/jpeg/jcsample.c ****  * with smoothing.  One row of context is required.
 403:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 404:fltk-1.3.4-1/jpeg/jcsample.c **** 
 405:fltk-1.3.4-1/jpeg/jcsample.c **** METHODDEF(void)
 406:fltk-1.3.4-1/jpeg/jcsample.c **** fullsize_smooth_downsample (j_compress_ptr cinfo, jpeg_component_info *compptr,
 407:fltk-1.3.4-1/jpeg/jcsample.c **** 			    JSAMPARRAY input_data, JSAMPARRAY output_data)
 408:fltk-1.3.4-1/jpeg/jcsample.c **** {
 1438              		.loc 1 408 1 is_stmt 1 view -0
 1439              		.cfi_startproc
 1440              		.loc 1 408 1 is_stmt 0 view .LVU527
 1441 0000 F30F1EFA 		endbr64
 409:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 1442              		.loc 1 409 3 is_stmt 1 view .LVU528
 410:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION colctr;
 1443              		.loc 1 410 3 view .LVU529
 411:fltk-1.3.4-1/jpeg/jcsample.c ****   JDIMENSION output_cols = compptr->width_in_blocks * compptr->DCT_h_scaled_size;
 1444              		.loc 1 411 3 view .LVU530
 408:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 1445              		.loc 1 408 1 is_stmt 0 view .LVU531
 1446 0004 4157     		pushq	%r15
 1447              		.cfi_def_cfa_offset 16
 1448              		.cfi_offset 15, -16
 1449 0006 4156     		pushq	%r14
 1450              		.cfi_def_cfa_offset 24
 1451              		.cfi_offset 14, -24
 1452 0008 4155     		pushq	%r13
 1453              		.cfi_def_cfa_offset 32
 1454              		.cfi_offset 13, -32
 1455 000a 4154     		pushq	%r12
 1456              		.cfi_def_cfa_offset 40
 1457              		.cfi_offset 12, -40
 1458 000c 55       		pushq	%rbp
 1459              		.cfi_def_cfa_offset 48
 1460              		.cfi_offset 6, -48
 1461 000d 53       		pushq	%rbx
 1462              		.cfi_def_cfa_offset 56
 1463              		.cfi_offset 3, -56
 1464              		.loc 1 411 14 view .LVU532
 1465 000e 8B461C   		movl	28(%rsi), %eax
 408:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 1466              		.loc 1 408 1 view .LVU533
 1467 0011 4889FB   		movq	%rdi, %rbx
 1468              		.loc 1 411 14 view .LVU534
 1469 0014 0FAF4624 		imull	36(%rsi), %eax
 408:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 1470              		.loc 1 408 1 view .LVU535
 1471 0018 48897C24 		movq	%rdi, -48(%rsp)
 1471      D0
 412:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr, above_ptr, below_ptr, outptr;
 413:fltk-1.3.4-1/jpeg/jcsample.c ****   INT32 membersum, neighsum, memberscale, neighscale;
 414:fltk-1.3.4-1/jpeg/jcsample.c ****   int colsum, lastcolsum, nextcolsum;
 415:fltk-1.3.4-1/jpeg/jcsample.c **** 
 416:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Expand input data enough to let all the output samples be generated
 417:fltk-1.3.4-1/jpeg/jcsample.c ****    * by the standard loop.  Special-casing padded output would be more
 418:fltk-1.3.4-1/jpeg/jcsample.c ****    * efficient.
 419:fltk-1.3.4-1/jpeg/jcsample.c ****    */
 420:fltk-1.3.4-1/jpeg/jcsample.c ****   expand_right_edge(input_data - 1, cinfo->max_v_samp_factor + 2,
 1472              		.loc 1 420 3 view .LVU536
 1473 001d 8B7F30   		movl	48(%rdi), %edi
 1474              	.LVL161:
 411:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr, above_ptr, below_ptr, outptr;
 1475              		.loc 1 411 14 view .LVU537
 1476 0020 894424DC 		movl	%eax, -36(%rsp)
 1477              	.LVL162:
 412:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPROW inptr, above_ptr, below_ptr, outptr;
 1478              		.loc 1 412 3 is_stmt 1 view .LVU538
 413:fltk-1.3.4-1/jpeg/jcsample.c ****   int colsum, lastcolsum, nextcolsum;
 1479              		.loc 1 413 3 view .LVU539
 414:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1480              		.loc 1 414 3 view .LVU540
 1481              		.loc 1 420 3 view .LVU541
 1482              	.LBB32:
 1483              	.LBB33:
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1484              		.loc 1 103 36 is_stmt 0 view .LVU542
 1485 0024 29F8     		subl	%edi, %eax
 1486              	.LVL163:
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1487              		.loc 1 103 36 view .LVU543
 1488              	.LBE33:
 1489              	.LBE32:
 408:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 1490              		.loc 1 408 1 view .LVU544
 1491 0026 48894C24 		movq	%rcx, -24(%rsp)
 1491      E8
 1492              		.loc 1 420 42 view .LVU545
 1493 002b 8B8B6401 		movl	356(%rbx), %ecx
 1493      0000
 1494              	.LVL164:
 1495              	.LBB36:
 1496              	.LBI32:
  96:fltk-1.3.4-1/jpeg/jcsample.c **** 		   JDIMENSION input_cols, JDIMENSION output_cols)
 1497              		.loc 1 96 1 is_stmt 1 view .LVU546
 1498              	.LBB34:
  99:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPLE pixval;
 1499              		.loc 1 99 3 view .LVU547
 100:fltk-1.3.4-1/jpeg/jcsample.c ****   register int count;
 1500              		.loc 1 100 3 view .LVU548
 101:fltk-1.3.4-1/jpeg/jcsample.c ****   int row;
 1501              		.loc 1 101 3 view .LVU549
 102:fltk-1.3.4-1/jpeg/jcsample.c ****   int numcols = (int) (output_cols - input_cols);
 1502              		.loc 1 102 3 view .LVU550
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1503              		.loc 1 103 3 view .LVU551
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 1504              		.loc 1 105 3 view .LVU552
 1505              	.LBE34:
 1506              	.LBE36:
 408:fltk-1.3.4-1/jpeg/jcsample.c ****   int inrow;
 1507              		.loc 1 408 1 is_stmt 0 view .LVU553
 1508 0031 48895424 		movq	%rdx, -32(%rsp)
 1508      E0
 1509              	.LBB37:
 1510              	.LBB35:
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 1511              		.loc 1 105 6 view .LVU554
 1512 0036 85C0     		testl	%eax, %eax
 1513 0038 7E56     		jle	.L85
 1514              	.LVL165:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1515              		.loc 1 106 19 is_stmt 1 view .LVU555
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1516              		.loc 1 106 5 is_stmt 0 view .LVU556
 1517 003a 83F9FF   		cmpl	$-1, %ecx
 1518 003d 7C51     		jl	.L85
 1519 003f 4889D3   		movq	%rdx, %rbx
 1520              	.LVL166:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1521              		.loc 1 106 5 view .LVU557
 1522 0042 488D72F8 		leaq	-8(%rdx), %rsi
 1523              	.LVL167:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1524              		.loc 1 106 5 view .LVU558
 1525 0046 448D40FF 		leal	-1(%rax), %r8d
 1526 004a 8D5101   		leal	1(%rcx), %edx
 1527              	.LVL168:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1528              		.loc 1 106 5 view .LVU559
 1529 004d 4983C001 		addq	$1, %r8
 1530 0051 4C8D0CD3 		leaq	(%rbx,%rdx,8), %r9
 1531              	.LVL169:
 1532              		.p2align 4,,10
 1533 0055 0F1F00   		.p2align 3
 1534              	.L87:
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 1535              		.loc 1 107 7 is_stmt 1 view .LVU560
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 1536              		.loc 1 107 11 is_stmt 0 view .LVU561
 1537 0058 488B06   		movq	(%rsi), %rax
 1538 005b 4801F8   		addq	%rdi, %rax
 1539              	.LVL170:
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 1540              		.loc 1 108 7 is_stmt 1 view .LVU562
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 1541              		.loc 1 108 14 is_stmt 0 view .LVU563
 1542 005e 0FB648FF 		movzbl	-1(%rax), %ecx
 1543              	.LVL171:
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1544              		.loc 1 109 7 is_stmt 1 view .LVU564
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1545              		.loc 1 109 29 view .LVU565
 1546 0062 4A8D1400 		leaq	(%rax,%r8), %rdx
 1547 0066 662E0F1F 		.p2align 4,,10
 1547      84000000 
 1547      0000
 1548              		.p2align 3
 1549              	.L86:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 1550              		.loc 1 110 2 view .LVU566
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 1551              		.loc 1 110 6 is_stmt 0 view .LVU567
 1552 0070 4883C001 		addq	$1, %rax
 1553              	.LVL172:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 1554              		.loc 1 110 9 view .LVU568
 1555 0074 8848FF   		movb	%cl, -1(%rax)
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1556              		.loc 1 109 40 is_stmt 1 view .LVU569
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1557              		.loc 1 109 29 view .LVU570
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1558              		.loc 1 109 7 is_stmt 0 view .LVU571
 1559 0077 4839D0   		cmpq	%rdx, %rax
 1560 007a 75F4     		jne	.L86
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1561              		.loc 1 106 35 is_stmt 1 view .LVU572
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1562              		.loc 1 106 19 view .LVU573
 1563 007c 4883C608 		addq	$8, %rsi
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1564              		.loc 1 106 5 is_stmt 0 view .LVU574
 1565 0080 4939F1   		cmpq	%rsi, %r9
 1566 0083 75D3     		jne	.L87
 1567 0085 488B4424 		movq	-48(%rsp), %rax
 1567      D0
 1568              	.LVL173:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1569              		.loc 1 106 5 view .LVU575
 1570 008a 8B886401 		movl	356(%rax), %ecx
 1570      0000
 1571              	.LVL174:
 1572              	.L85:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1573              		.loc 1 106 5 view .LVU576
 1574              	.LBE35:
 1575              	.LBE37:
 421:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->image_width, output_cols);
 422:fltk-1.3.4-1/jpeg/jcsample.c **** 
 423:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Each of the eight neighbor pixels contributes a fraction SF to the
 424:fltk-1.3.4-1/jpeg/jcsample.c ****    * smoothed pixel, while the main pixel contributes (1-8*SF).  In order
 425:fltk-1.3.4-1/jpeg/jcsample.c ****    * to use integer arithmetic, these factors are multiplied by 2^16 = 65536.
 426:fltk-1.3.4-1/jpeg/jcsample.c ****    * Also recall that SF = smoothing_factor / 1024.
 427:fltk-1.3.4-1/jpeg/jcsample.c ****    */
 428:fltk-1.3.4-1/jpeg/jcsample.c **** 
 429:fltk-1.3.4-1/jpeg/jcsample.c ****   memberscale = 65536L - cinfo->smoothing_factor * 512L; /* scaled 1-8*SF */
 1576              		.loc 1 429 3 is_stmt 1 view .LVU577
 1577              		.loc 1 429 31 is_stmt 0 view .LVU578
 1578 0090 488B4424 		movq	-48(%rsp), %rax
 1578      D0
 1579              		.loc 1 429 24 view .LVU579
 1580 0095 BA800000 		movl	$128, %edx
 1580      00
 430:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 431:fltk-1.3.4-1/jpeg/jcsample.c **** 
 432:fltk-1.3.4-1/jpeg/jcsample.c ****   for (inrow = 0; inrow < cinfo->max_v_samp_factor; inrow++) {
 1581              		.loc 1 432 3 view .LVU580
 1582 009a 4531ED   		xorl	%r13d, %r13d
 429:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 1583              		.loc 1 429 31 view .LVU581
 1584 009d 4863B034 		movslq	308(%rax), %rsi
 1584      010000
 1585 00a4 4889F0   		movq	%rsi, %rax
 429:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 1586              		.loc 1 429 24 view .LVU582
 1587 00a7 4829F2   		subq	%rsi, %rdx
 429:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 1588              		.loc 1 429 15 view .LVU583
 1589 00aa 48C1E209 		salq	$9, %rdx
 430:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 1590              		.loc 1 430 40 view .LVU584
 1591 00ae C1E006   		sall	$6, %eax
 429:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 1592              		.loc 1 429 15 view .LVU585
 1593 00b1 4989D6   		movq	%rdx, %r14
 1594              	.LVL175:
 430:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 1595              		.loc 1 430 3 is_stmt 1 view .LVU586
 430:fltk-1.3.4-1/jpeg/jcsample.c ****   neighscale = cinfo->smoothing_factor * 64; /* scaled SF */
 1596              		.loc 1 430 14 is_stmt 0 view .LVU587
 1597 00b4 4C63F8   		movslq	%eax, %r15
 1598              	.LVL176:
 1599              		.loc 1 432 3 is_stmt 1 view .LVU588
 1600              		.loc 1 432 19 view .LVU589
 1601              		.loc 1 432 3 is_stmt 0 view .LVU590
 1602 00b7 85C9     		testl	%ecx, %ecx
 1603 00b9 0F8E9101 		jle	.L84
 1603      0000
 1604 00bf 8B4424DC 		movl	-36(%rsp), %eax
 1605 00c3 83E803   		subl	$3, %eax
 1606 00c6 488D5802 		leaq	2(%rax), %rbx
 1607 00ca 4883C001 		addq	$1, %rax
 1608 00ce 48895C24 		movq	%rbx, -16(%rsp)
 1608      F0
 1609 00d3 48894424 		movq	%rax, -8(%rsp)
 1609      F8
 1610              	.LVL177:
 1611 00d8 0F1F8400 		.p2align 4,,10
 1611      00000000 
 1612              		.p2align 3
 1613              	.L88:
 433:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 1614              		.loc 1 433 5 is_stmt 1 view .LVU591
 1615              		.loc 1 433 12 is_stmt 0 view .LVU592
 1616 00e0 488B4424 		movq	-24(%rsp), %rax
 1616      E8
 1617 00e5 4A8B3CE8 		movq	(%rax,%r13,8), %rdi
 1618              	.LVL178:
 434:fltk-1.3.4-1/jpeg/jcsample.c ****     inptr = input_data[inrow];
 1619              		.loc 1 434 5 is_stmt 1 view .LVU593
 1620              		.loc 1 434 11 is_stmt 0 view .LVU594
 1621 00e9 488B4424 		movq	-32(%rsp), %rax
 1621      E0
 1622 00ee 4A8B0CE8 		movq	(%rax,%r13,8), %rcx
 1623              	.LVL179:
 435:fltk-1.3.4-1/jpeg/jcsample.c ****     above_ptr = input_data[inrow-1];
 1624              		.loc 1 435 5 is_stmt 1 view .LVU595
 1625              		.loc 1 435 15 is_stmt 0 view .LVU596
 1626 00f2 4E8B64E8 		movq	-8(%rax,%r13,8), %r12
 1626      F8
 1627              	.LVL180:
 436:fltk-1.3.4-1/jpeg/jcsample.c ****     below_ptr = input_data[inrow+1];
 1628              		.loc 1 436 5 is_stmt 1 view .LVU597
 1629              		.loc 1 436 15 is_stmt 0 view .LVU598
 1630 00f7 4E8B54E8 		movq	8(%rax,%r13,8), %r10
 1630      08
 1631              	.LVL181:
 437:fltk-1.3.4-1/jpeg/jcsample.c **** 
 438:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Special case for first column */
 439:fltk-1.3.4-1/jpeg/jcsample.c ****     colsum = GETJSAMPLE(*above_ptr++) + GETJSAMPLE(*below_ptr++) +
 1632              		.loc 1 439 5 is_stmt 1 view .LVU599
 440:fltk-1.3.4-1/jpeg/jcsample.c **** 	     GETJSAMPLE(*inptr);
 1633              		.loc 1 440 7 is_stmt 0 view .LVU600
 1634 00fc 0FB611   		movzbl	(%rcx), %edx
 439:fltk-1.3.4-1/jpeg/jcsample.c **** 	     GETJSAMPLE(*inptr);
 1635              		.loc 1 439 14 view .LVU601
 1636 00ff 450FB604 		movzbl	(%r12), %r8d
 1636      24
 441:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = GETJSAMPLE(*inptr++);
 1637              		.loc 1 441 17 view .LVU602
 1638 0104 488D5901 		leaq	1(%rcx), %rbx
 439:fltk-1.3.4-1/jpeg/jcsample.c **** 	     GETJSAMPLE(*inptr);
 1639              		.loc 1 439 14 view .LVU603
 1640 0108 498D7424 		leaq	1(%r12), %rsi
 1640      01
 1641              	.LVL182:
 439:fltk-1.3.4-1/jpeg/jcsample.c **** 	     GETJSAMPLE(*inptr);
 1642              		.loc 1 439 41 view .LVU604
 1643 010d 410FB602 		movzbl	(%r10), %eax
 442:fltk-1.3.4-1/jpeg/jcsample.c ****     nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 1644              		.loc 1 442 43 view .LVU605
 1645 0111 450FB65A 		movzbl	1(%r10), %r11d
 1645      01
 439:fltk-1.3.4-1/jpeg/jcsample.c **** 	     GETJSAMPLE(*inptr);
 1646              		.loc 1 439 41 view .LVU606
 1647 0116 4D8D4A01 		leaq	1(%r10), %r9
 1648              	.LVL183:
 441:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = GETJSAMPLE(*inptr++);
 1649              		.loc 1 441 17 view .LVU607
 1650 011a 48895C24 		movq	%rbx, -72(%rsp)
 1650      B8
 443:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*inptr);
 1651              		.loc 1 443 4 view .LVU608
 1652 011f 0FB64901 		movzbl	1(%rcx), %ecx
 1653              	.LVL184:
 439:fltk-1.3.4-1/jpeg/jcsample.c **** 	     GETJSAMPLE(*inptr);
 1654              		.loc 1 439 39 view .LVU609
 1655 0123 4401C0   		addl	%r8d, %eax
 440:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = GETJSAMPLE(*inptr++);
 1656              		.loc 1 440 7 view .LVU610
 1657 0126 440FB6C2 		movzbl	%dl, %r8d
 439:fltk-1.3.4-1/jpeg/jcsample.c **** 	     GETJSAMPLE(*inptr);
 1658              		.loc 1 439 12 view .LVU611
 1659 012a 4401C0   		addl	%r8d, %eax
 1660              	.LVL185:
 441:fltk-1.3.4-1/jpeg/jcsample.c ****     nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 1661              		.loc 1 441 5 is_stmt 1 view .LVU612
 442:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*inptr);
 1662              		.loc 1 442 5 view .LVU613
 442:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*inptr);
 1663              		.loc 1 442 18 is_stmt 0 view .LVU614
 1664 012d 450FB644 		movzbl	1(%r12), %r8d
 1664      2401
 444:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = colsum + (colsum - membersum) + nextcolsum;
 1665              		.loc 1 444 23 view .LVU615
 1666 0133 4898     		cltq
 442:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*inptr);
 1667              		.loc 1 442 41 view .LVU616
 1668 0135 4501C3   		addl	%r8d, %r11d
 1669              		.loc 1 444 33 view .LVU617
 1670 0138 4989C2   		movq	%rax, %r10
 1671              		.loc 1 444 23 view .LVU618
 1672 013b 4889C3   		movq	%rax, %rbx
 1673              	.LVL186:
 442:fltk-1.3.4-1/jpeg/jcsample.c **** 		 GETJSAMPLE(*inptr);
 1674              		.loc 1 442 16 view .LVU619
 1675 013e 4101CB   		addl	%ecx, %r11d
 1676              	.LVL187:
 1677              		.loc 1 444 5 is_stmt 1 view .LVU620
 1678              		.loc 1 444 33 is_stmt 0 view .LVU621
 1679 0141 4929D2   		subq	%rdx, %r10
 445:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1680              		.loc 1 445 27 view .LVU622
 1681 0144 4C89F1   		movq	%r14, %rcx
 1682 0147 480FAFCA 		imulq	%rdx, %rcx
 444:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = colsum + (colsum - membersum) + nextcolsum;
 1683              		.loc 1 444 33 view .LVU623
 1684 014b 4C89D2   		movq	%r10, %rdx
 1685              	.LVL188:
 446:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1686              		.loc 1 446 12 view .LVU624
 1687 014e 4C8D5701 		leaq	1(%rdi), %r10
 444:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = colsum + (colsum - membersum) + nextcolsum;
 1688              		.loc 1 444 46 view .LVU625
 1689 0152 4963EB   		movslq	%r11d, %rbp
 444:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = colsum + (colsum - membersum) + nextcolsum;
 1690              		.loc 1 444 23 view .LVU626
 1691 0155 4801C2   		addq	%rax, %rdx
 1692              		.loc 1 446 12 view .LVU627
 1693 0158 4C895424 		movq	%r10, -64(%rsp)
 1693      C0
 444:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = colsum + (colsum - membersum) + nextcolsum;
 1694              		.loc 1 444 46 view .LVU628
 1695 015d 4989E8   		movq	%rbp, %r8
 445:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1696              		.loc 1 445 5 is_stmt 1 view .LVU629
 444:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = colsum + (colsum - membersum) + nextcolsum;
 1697              		.loc 1 444 14 is_stmt 0 view .LVU630
 1698 0160 4801EA   		addq	%rbp, %rdx
 445:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1699              		.loc 1 445 52 view .LVU631
 1700 0163 490FAFD7 		imulq	%r15, %rdx
 1701              	.LVL189:
 1702              		.loc 1 446 5 is_stmt 1 view .LVU632
 1703              		.loc 1 446 39 is_stmt 0 view .LVU633
 1704 0167 488D9411 		leaq	32768(%rcx,%rdx), %rdx
 1704      00800000 
 1705              	.LVL190:
 1706              		.loc 1 446 48 view .LVU634
 1707 016f 48C1FA10 		sarq	$16, %rdx
 447:fltk-1.3.4-1/jpeg/jcsample.c ****     lastcolsum = colsum; colsum = nextcolsum;
 448:fltk-1.3.4-1/jpeg/jcsample.c **** 
 449:fltk-1.3.4-1/jpeg/jcsample.c ****     for (colctr = output_cols - 2; colctr > 0; colctr--) {
 1708              		.loc 1 449 5 view .LVU635
 1709 0173 837C24DC 		cmpl	$2, -36(%rsp)
 1709      02
 446:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1710              		.loc 1 446 17 view .LVU636
 1711 0178 8817     		movb	%dl, (%rdi)
 1712              	.LVL191:
 447:fltk-1.3.4-1/jpeg/jcsample.c ****     lastcolsum = colsum; colsum = nextcolsum;
 1713              		.loc 1 447 5 is_stmt 1 view .LVU637
 447:fltk-1.3.4-1/jpeg/jcsample.c ****     lastcolsum = colsum; colsum = nextcolsum;
 1714              		.loc 1 447 26 view .LVU638
 1715              		.loc 1 449 5 view .LVU639
 1716              		.loc 1 449 36 view .LVU640
 1717              		.loc 1 449 5 is_stmt 0 view .LVU641
 1718 017a 0F848D00 		je	.L89
 1718      0000
 1719 0180 4C896C24 		movq	%r13, -56(%rsp)
 1719      C8
 441:fltk-1.3.4-1/jpeg/jcsample.c ****     nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 1720              		.loc 1 441 17 view .LVU642
 1721 0185 488B7C24 		movq	-72(%rsp), %rdi
 1721      B8
 1722 018a 4889C5   		movq	%rax, %rbp
 1723 018d 4C036424 		addq	-16(%rsp), %r12
 1723      F0
 1724 0192 EB0A     		jmp	.L90
 1725              	.LVL192:
 1726              		.p2align 4,,10
 1727 0194 0F1F4000 		.p2align 3
 1728              	.L93:
 450:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 451:fltk-1.3.4-1/jpeg/jcsample.c ****       above_ptr++; below_ptr++;
 452:fltk-1.3.4-1/jpeg/jcsample.c ****       nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 453:fltk-1.3.4-1/jpeg/jcsample.c **** 		   GETJSAMPLE(*inptr);
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       neighsum = lastcolsum + (colsum - membersum) + nextcolsum;
 455:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 456:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 457:fltk-1.3.4-1/jpeg/jcsample.c ****       lastcolsum = colsum; colsum = nextcolsum;
 1729              		.loc 1 457 35 view .LVU643
 1730 0198 4189D3   		movl	%edx, %r11d
 1731 019b 4863E8   		movslq	%eax, %rbp
 1732              	.LVL193:
 1733              	.L90:
 450:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 1734              		.loc 1 450 7 is_stmt 1 discriminator 3 view .LVU644
 452:fltk-1.3.4-1/jpeg/jcsample.c **** 		   GETJSAMPLE(*inptr);
 1735              		.loc 1 452 45 is_stmt 0 discriminator 3 view .LVU645
 1736 019e 410FB649 		movzbl	1(%r9), %ecx
 1736      01
 452:fltk-1.3.4-1/jpeg/jcsample.c **** 		   GETJSAMPLE(*inptr);
 1737              		.loc 1 452 20 discriminator 3 view .LVU646
 1738 01a3 0FB65601 		movzbl	1(%rsi), %edx
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1739              		.loc 1 454 39 discriminator 3 view .LVU647
 1740 01a7 4C89C3   		movq	%r8, %rbx
 451:fltk-1.3.4-1/jpeg/jcsample.c ****       nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 1741              		.loc 1 451 16 discriminator 3 view .LVU648
 1742 01aa 4883C601 		addq	$1, %rsi
 1743              	.LVL194:
 450:fltk-1.3.4-1/jpeg/jcsample.c ****       above_ptr++; below_ptr++;
 1744              		.loc 1 450 17 discriminator 3 view .LVU649
 1745 01ae 0FB607   		movzbl	(%rdi), %eax
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1746              		.loc 1 454 39 discriminator 3 view .LVU650
 1747 01b1 4989DD   		movq	%rbx, %r13
 456:fltk-1.3.4-1/jpeg/jcsample.c ****       lastcolsum = colsum; colsum = nextcolsum;
 1748              		.loc 1 456 14 discriminator 3 view .LVU651
 1749 01b4 4983C201 		addq	$1, %r10
 1750              	.LVL195:
 450:fltk-1.3.4-1/jpeg/jcsample.c ****       above_ptr++; below_ptr++;
 1751              		.loc 1 450 19 discriminator 3 view .LVU652
 1752 01b8 4883C701 		addq	$1, %rdi
 1753              	.LVL196:
 451:fltk-1.3.4-1/jpeg/jcsample.c ****       nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 1754              		.loc 1 451 7 is_stmt 1 discriminator 3 view .LVU653
 451:fltk-1.3.4-1/jpeg/jcsample.c ****       nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 1755              		.loc 1 451 20 discriminator 3 view .LVU654
 452:fltk-1.3.4-1/jpeg/jcsample.c **** 		   GETJSAMPLE(*inptr);
 1756              		.loc 1 452 43 is_stmt 0 discriminator 3 view .LVU655
 1757 01bc 01CA     		addl	%ecx, %edx
 453:fltk-1.3.4-1/jpeg/jcsample.c ****       neighsum = lastcolsum + (colsum - membersum) + nextcolsum;
 1758              		.loc 1 453 6 discriminator 3 view .LVU656
 1759 01be 0FB60F   		movzbl	(%rdi), %ecx
 451:fltk-1.3.4-1/jpeg/jcsample.c ****       nextcolsum = GETJSAMPLE(*above_ptr) + GETJSAMPLE(*below_ptr) +
 1760              		.loc 1 451 29 discriminator 3 view .LVU657
 1761 01c1 4983C101 		addq	$1, %r9
 1762              	.LVL197:
 452:fltk-1.3.4-1/jpeg/jcsample.c **** 		   GETJSAMPLE(*inptr);
 1763              		.loc 1 452 7 is_stmt 1 discriminator 3 view .LVU658
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1764              		.loc 1 454 39 is_stmt 0 discriminator 3 view .LVU659
 1765 01c5 4929C5   		subq	%rax, %r13
 452:fltk-1.3.4-1/jpeg/jcsample.c **** 		   GETJSAMPLE(*inptr);
 1766              		.loc 1 452 18 discriminator 3 view .LVU660
 1767 01c8 01CA     		addl	%ecx, %edx
 1768              	.LVL198:
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1769              		.loc 1 454 7 is_stmt 1 discriminator 3 view .LVU661
 455:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1770              		.loc 1 455 29 is_stmt 0 discriminator 3 view .LVU662
 1771 01ca 4C89F1   		movq	%r14, %rcx
 1772 01cd 480FAFC8 		imulq	%rax, %rcx
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1773              		.loc 1 454 39 discriminator 3 view .LVU663
 1774 01d1 4C89E8   		movq	%r13, %rax
 1775              	.LVL199:
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1776              		.loc 1 454 52 discriminator 3 view .LVU664
 1777 01d4 4C63C2   		movslq	%edx, %r8
 455:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1778              		.loc 1 455 7 is_stmt 1 discriminator 3 view .LVU665
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1779              		.loc 1 454 29 is_stmt 0 discriminator 3 view .LVU666
 1780 01d7 4801E8   		addq	%rbp, %rax
 454:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = membersum * memberscale + neighsum * neighscale;
 1781              		.loc 1 454 16 discriminator 3 view .LVU667
 1782 01da 4C01C0   		addq	%r8, %rax
 455:fltk-1.3.4-1/jpeg/jcsample.c ****       *outptr++ = (JSAMPLE) ((membersum + 32768) >> 16);
 1783              		.loc 1 455 54 discriminator 3 view .LVU668
 1784 01dd 490FAFC7 		imulq	%r15, %rax
 1785              	.LVL200:
 456:fltk-1.3.4-1/jpeg/jcsample.c ****       lastcolsum = colsum; colsum = nextcolsum;
 1786              		.loc 1 456 7 is_stmt 1 discriminator 3 view .LVU669
 456:fltk-1.3.4-1/jpeg/jcsample.c ****       lastcolsum = colsum; colsum = nextcolsum;
 1787              		.loc 1 456 41 is_stmt 0 discriminator 3 view .LVU670
 1788 01e1 488D8401 		leaq	32768(%rcx,%rax), %rax
 1788      00800000 
 1789              	.LVL201:
 456:fltk-1.3.4-1/jpeg/jcsample.c ****       lastcolsum = colsum; colsum = nextcolsum;
 1790              		.loc 1 456 50 discriminator 3 view .LVU671
 1791 01e9 48C1F810 		sarq	$16, %rax
 456:fltk-1.3.4-1/jpeg/jcsample.c ****       lastcolsum = colsum; colsum = nextcolsum;
 1792              		.loc 1 456 19 discriminator 3 view .LVU672
 1793 01ed 418842FF 		movb	%al, -1(%r10)
 1794              		.loc 1 457 7 is_stmt 1 discriminator 3 view .LVU673
 1795              	.LVL202:
 1796              		.loc 1 457 28 discriminator 3 view .LVU674
 449:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 1797              		.loc 1 449 48 discriminator 3 view .LVU675
 449:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 1798              		.loc 1 449 36 discriminator 3 view .LVU676
 1799 01f1 4489D8   		movl	%r11d, %eax
 449:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 1800              		.loc 1 449 5 is_stmt 0 discriminator 3 view .LVU677
 1801 01f4 4C39E6   		cmpq	%r12, %rsi
 1802 01f7 759F     		jne	.L93
 1803              	.LVL203:
 449:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 1804              		.loc 1 449 5 discriminator 3 view .LVU678
 1805 01f9 488B7424 		movq	-8(%rsp), %rsi
 1805      F8
 1806              	.LVL204:
 449:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 1807              		.loc 1 449 5 discriminator 3 view .LVU679
 1808 01fe 48017424 		addq	%rsi, -72(%rsp)
 1808      B8
 1809              	.LVL205:
 449:fltk-1.3.4-1/jpeg/jcsample.c ****       membersum = GETJSAMPLE(*inptr++);
 1810              		.loc 1 449 5 discriminator 3 view .LVU680
 1811 0203 48017424 		addq	%rsi, -64(%rsp)
 1811      C0
 1812 0208 4C8B6C24 		movq	-56(%rsp), %r13
 1812      C8
 1813              	.LVL206:
 1814              	.L89:
 458:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 459:fltk-1.3.4-1/jpeg/jcsample.c **** 
 460:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Special case for last column */
 461:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = GETJSAMPLE(*inptr);
 1815              		.loc 1 461 5 is_stmt 1 discriminator 2 view .LVU681
 1816              		.loc 1 461 15 is_stmt 0 discriminator 2 view .LVU682
 1817 020d 488B4424 		movq	-72(%rsp), %rax
 1817      B8
 462:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = lastcolsum + (colsum - membersum) + colsum;
 463:fltk-1.3.4-1/jpeg/jcsample.c ****     membersum = membersum * memberscale + neighsum * neighscale;
 1818              		.loc 1 463 27 discriminator 2 view .LVU683
 1819 0212 4C89F2   		movq	%r14, %rdx
 1820 0215 4983C501 		addq	$1, %r13
 461:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = lastcolsum + (colsum - membersum) + colsum;
 1821              		.loc 1 461 15 discriminator 2 view .LVU684
 1822 0219 0FB608   		movzbl	(%rax), %ecx
 1823              	.LVL207:
 462:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = lastcolsum + (colsum - membersum) + colsum;
 1824              		.loc 1 462 5 is_stmt 1 discriminator 2 view .LVU685
 1825              		.loc 1 463 5 discriminator 2 view .LVU686
 462:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = lastcolsum + (colsum - membersum) + colsum;
 1826              		.loc 1 462 27 is_stmt 0 discriminator 2 view .LVU687
 1827 021c 4A8D0443 		leaq	(%rbx,%r8,2), %rax
 464:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr = (JSAMPLE) ((membersum + 32768) >> 16);
 1828              		.loc 1 464 15 discriminator 2 view .LVU688
 1829 0220 488B5C24 		movq	-64(%rsp), %rbx
 1829      C0
 1830              	.LVL208:
 462:fltk-1.3.4-1/jpeg/jcsample.c ****     neighsum = lastcolsum + (colsum - membersum) + colsum;
 1831              		.loc 1 462 14 discriminator 2 view .LVU689
 1832 0225 4829C8   		subq	%rcx, %rax
 1833              	.LVL209:
 463:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr = (JSAMPLE) ((membersum + 32768) >> 16);
 1834              		.loc 1 463 27 discriminator 2 view .LVU690
 1835 0228 480FAFD1 		imulq	%rcx, %rdx
 463:fltk-1.3.4-1/jpeg/jcsample.c ****     *outptr = (JSAMPLE) ((membersum + 32768) >> 16);
 1836              		.loc 1 463 52 discriminator 2 view .LVU691
 1837 022c 490FAFC7 		imulq	%r15, %rax
 1838              	.LVL210:
 1839              		.loc 1 464 5 is_stmt 1 discriminator 2 view .LVU692
 1840              		.loc 1 464 37 is_stmt 0 discriminator 2 view .LVU693
 1841 0230 488D8402 		leaq	32768(%rdx,%rax), %rax
 1841      00800000 
 1842              	.LVL211:
 1843              		.loc 1 464 46 discriminator 2 view .LVU694
 1844 0238 48C1F810 		sarq	$16, %rax
 1845              		.loc 1 464 15 discriminator 2 view .LVU695
 1846 023c 8803     		movb	%al, (%rbx)
 432:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 1847              		.loc 1 432 53 is_stmt 1 discriminator 2 view .LVU696
 432:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 1848              		.loc 1 432 19 discriminator 2 view .LVU697
 432:fltk-1.3.4-1/jpeg/jcsample.c ****     outptr = output_data[inrow];
 1849              		.loc 1 432 3 is_stmt 0 discriminator 2 view .LVU698
 1850 023e 488B4424 		movq	-48(%rsp), %rax
 1850      D0
 1851 0243 4439A864 		cmpl	%r13d, 356(%rax)
 1851      010000
 1852 024a 0F8F90FE 		jg	.L88
 1852      FFFF
 1853              	.LVL212:
 1854              	.L84:
 465:fltk-1.3.4-1/jpeg/jcsample.c **** 
 466:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 467:fltk-1.3.4-1/jpeg/jcsample.c **** }
 1855              		.loc 1 467 1 view .LVU699
 1856 0250 5B       		popq	%rbx
 1857              		.cfi_def_cfa_offset 48
 1858 0251 5D       		popq	%rbp
 1859              		.cfi_def_cfa_offset 40
 1860 0252 415C     		popq	%r12
 1861              		.cfi_def_cfa_offset 32
 1862 0254 415D     		popq	%r13
 1863              		.cfi_def_cfa_offset 24
 1864 0256 415E     		popq	%r14
 1865              		.cfi_def_cfa_offset 16
 1866              	.LVL213:
 1867              		.loc 1 467 1 view .LVU700
 1868 0258 415F     		popq	%r15
 1869              		.cfi_def_cfa_offset 8
 1870              	.LVL214:
 1871              		.loc 1 467 1 view .LVU701
 1872 025a C3       		ret
 1873              		.cfi_endproc
 1874              	.LFE59:
 1876              		.section	.text.fullsize_downsample,"ax",@progbits
 1877              		.p2align 4
 1879              	fullsize_downsample:
 1880              	.LVL215:
 1881              	.LFB55:
 201:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Copy the data */
 1882              		.loc 1 201 1 is_stmt 1 view -0
 1883              		.cfi_startproc
 201:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Copy the data */
 1884              		.loc 1 201 1 is_stmt 0 view .LVU703
 1885 0000 F30F1EFA 		endbr64
 203:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->max_v_samp_factor, cinfo->image_width);
 1886              		.loc 1 203 3 is_stmt 1 view .LVU704
 201:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Copy the data */
 1887              		.loc 1 201 1 is_stmt 0 view .LVU705
 1888 0004 4154     		pushq	%r12
 1889              		.cfi_def_cfa_offset 16
 1890              		.cfi_offset 12, -16
 1891 0006 4989F4   		movq	%rsi, %r12
 203:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->max_v_samp_factor, cinfo->image_width);
 1892              		.loc 1 203 3 view .LVU706
 1893 0009 31F6     		xorl	%esi, %esi
 1894              	.LVL216:
 201:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Copy the data */
 1895              		.loc 1 201 1 view .LVU707
 1896 000b 55       		pushq	%rbp
 1897              		.cfi_def_cfa_offset 24
 1898              		.cfi_offset 6, -24
 1899 000c 4889FD   		movq	%rdi, %rbp
 1900 000f 4889D7   		movq	%rdx, %rdi
 1901              	.LVL217:
 203:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->max_v_samp_factor, cinfo->image_width);
 1902              		.loc 1 203 3 view .LVU708
 1903 0012 448B4D30 		movl	48(%rbp), %r9d
 1904 0016 448B8564 		movl	356(%rbp), %r8d
 1904      010000
 201:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Copy the data */
 1905              		.loc 1 201 1 view .LVU709
 1906 001d 53       		pushq	%rbx
 1907              		.cfi_def_cfa_offset 32
 1908              		.cfi_offset 3, -32
 201:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Copy the data */
 1909              		.loc 1 201 1 view .LVU710
 1910 001e 4889CB   		movq	%rcx, %rbx
 203:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->max_v_samp_factor, cinfo->image_width);
 1911              		.loc 1 203 3 view .LVU711
 1912 0021 4889DA   		movq	%rbx, %rdx
 1913              	.LVL218:
 203:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->max_v_samp_factor, cinfo->image_width);
 1914              		.loc 1 203 3 view .LVU712
 1915 0024 31C9     		xorl	%ecx, %ecx
 1916              	.LVL219:
 203:fltk-1.3.4-1/jpeg/jcsample.c **** 		    cinfo->max_v_samp_factor, cinfo->image_width);
 1917              		.loc 1 203 3 view .LVU713
 1918 0026 E8000000 		call	jcopy_sample_rows@PLT
 1918      00
 1919              	.LVL220:
 206:fltk-1.3.4-1/jpeg/jcsample.c **** 		    compptr->width_in_blocks * compptr->DCT_h_scaled_size);
 1920              		.loc 1 206 3 is_stmt 1 view .LVU714
 1921 002b 418B4424 		movl	28(%r12), %eax
 1921      1C
 1922 0030 410FAF44 		imull	36(%r12), %eax
 1922      2424
 1923 0036 8B7D30   		movl	48(%rbp), %edi
 1924              	.LVL221:
 1925              	.LBB38:
 1926              	.LBI38:
  96:fltk-1.3.4-1/jpeg/jcsample.c **** 		   JDIMENSION input_cols, JDIMENSION output_cols)
 1927              		.loc 1 96 1 view .LVU715
 1928              	.LBB39:
  99:fltk-1.3.4-1/jpeg/jcsample.c ****   register JSAMPLE pixval;
 1929              		.loc 1 99 3 view .LVU716
 100:fltk-1.3.4-1/jpeg/jcsample.c ****   register int count;
 1930              		.loc 1 100 3 view .LVU717
 101:fltk-1.3.4-1/jpeg/jcsample.c ****   int row;
 1931              		.loc 1 101 3 view .LVU718
 102:fltk-1.3.4-1/jpeg/jcsample.c ****   int numcols = (int) (output_cols - input_cols);
 1932              		.loc 1 102 3 view .LVU719
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1933              		.loc 1 103 3 view .LVU720
 103:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1934              		.loc 1 103 36 is_stmt 0 view .LVU721
 1935 0039 29F8     		subl	%edi, %eax
 1936              	.LVL222:
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 1937              		.loc 1 105 3 is_stmt 1 view .LVU722
 105:fltk-1.3.4-1/jpeg/jcsample.c ****     for (row = 0; row < num_rows; row++) {
 1938              		.loc 1 105 6 is_stmt 0 view .LVU723
 1939 003b 85C0     		testl	%eax, %eax
 1940 003d 7E46     		jle	.L102
 1941              	.LBE39:
 1942              	.LBE38:
 206:fltk-1.3.4-1/jpeg/jcsample.c **** 		    compptr->width_in_blocks * compptr->DCT_h_scaled_size);
 1943              		.loc 1 206 3 view .LVU724
 1944 003f 8B956401 		movl	356(%rbp), %edx
 1944      0000
 1945              	.LVL223:
 1946              	.LBB41:
 1947              	.LBB40:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1948              		.loc 1 106 19 is_stmt 1 view .LVU725
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1949              		.loc 1 106 5 is_stmt 0 view .LVU726
 1950 0045 85D2     		testl	%edx, %edx
 1951 0047 7E3C     		jle	.L102
 1952 0049 83EA01   		subl	$1, %edx
 1953 004c 448D40FF 		leal	-1(%rax), %r8d
 1954 0050 4889DE   		movq	%rbx, %rsi
 1955 0053 4C8D4CD3 		leaq	8(%rbx,%rdx,8), %r9
 1955      08
 1956 0058 4983C001 		addq	$1, %r8
 1957              	.LVL224:
 1958 005c 0F1F4000 		.p2align 4,,10
 1959              		.p2align 3
 1960              	.L106:
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 1961              		.loc 1 107 7 is_stmt 1 view .LVU727
 107:fltk-1.3.4-1/jpeg/jcsample.c ****       pixval = ptr[-1];		/* don't need GETJSAMPLE() here */
 1962              		.loc 1 107 11 is_stmt 0 view .LVU728
 1963 0060 488B06   		movq	(%rsi), %rax
 1964 0063 4801F8   		addq	%rdi, %rax
 1965              	.LVL225:
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 1966              		.loc 1 108 7 is_stmt 1 view .LVU729
 108:fltk-1.3.4-1/jpeg/jcsample.c ****       for (count = numcols; count > 0; count--)
 1967              		.loc 1 108 14 is_stmt 0 view .LVU730
 1968 0066 0FB648FF 		movzbl	-1(%rax), %ecx
 1969              	.LVL226:
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1970              		.loc 1 109 7 is_stmt 1 view .LVU731
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1971              		.loc 1 109 29 view .LVU732
 1972 006a 4A8D1400 		leaq	(%rax,%r8), %rdx
 1973 006e 6690     		.p2align 4,,10
 1974              		.p2align 3
 1975              	.L105:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 1976              		.loc 1 110 2 view .LVU733
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 1977              		.loc 1 110 6 is_stmt 0 view .LVU734
 1978 0070 4883C001 		addq	$1, %rax
 1979              	.LVL227:
 110:fltk-1.3.4-1/jpeg/jcsample.c ****     }
 1980              		.loc 1 110 9 view .LVU735
 1981 0074 8848FF   		movb	%cl, -1(%rax)
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1982              		.loc 1 109 40 is_stmt 1 view .LVU736
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1983              		.loc 1 109 29 view .LVU737
 109:fltk-1.3.4-1/jpeg/jcsample.c **** 	*ptr++ = pixval;
 1984              		.loc 1 109 7 is_stmt 0 view .LVU738
 1985 0077 4839D0   		cmpq	%rdx, %rax
 1986 007a 75F4     		jne	.L105
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1987              		.loc 1 106 35 is_stmt 1 view .LVU739
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1988              		.loc 1 106 19 view .LVU740
 1989 007c 4883C608 		addq	$8, %rsi
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1990              		.loc 1 106 5 is_stmt 0 view .LVU741
 1991 0080 4C39CE   		cmpq	%r9, %rsi
 1992 0083 75DB     		jne	.L106
 1993              	.LVL228:
 1994              	.L102:
 106:fltk-1.3.4-1/jpeg/jcsample.c ****       ptr = image_data[row] + input_cols;
 1995              		.loc 1 106 5 view .LVU742
 1996              	.LBE40:
 1997              	.LBE41:
 208:fltk-1.3.4-1/jpeg/jcsample.c **** 
 1998              		.loc 1 208 1 view .LVU743
 1999 0085 5B       		popq	%rbx
 2000              		.cfi_def_cfa_offset 24
 2001              	.LVL229:
 208:fltk-1.3.4-1/jpeg/jcsample.c **** 
 2002              		.loc 1 208 1 view .LVU744
 2003 0086 5D       		popq	%rbp
 2004              		.cfi_def_cfa_offset 16
 2005              	.LVL230:
 208:fltk-1.3.4-1/jpeg/jcsample.c **** 
 2006              		.loc 1 208 1 view .LVU745
 2007 0087 415C     		popq	%r12
 2008              		.cfi_def_cfa_offset 8
 2009              	.LVL231:
 208:fltk-1.3.4-1/jpeg/jcsample.c **** 
 2010              		.loc 1 208 1 view .LVU746
 2011 0089 C3       		ret
 2012              		.cfi_endproc
 2013              	.LFE55:
 2015              		.section	.text.jinit_downsampler,"ax",@progbits
 2016              		.p2align 4
 2017              		.globl	jinit_downsampler
 2019              	jinit_downsampler:
 2020              	.LVL232:
 2021              	.LFB60:
 468:fltk-1.3.4-1/jpeg/jcsample.c **** 
 469:fltk-1.3.4-1/jpeg/jcsample.c **** #endif /* INPUT_SMOOTHING_SUPPORTED */
 470:fltk-1.3.4-1/jpeg/jcsample.c **** 
 471:fltk-1.3.4-1/jpeg/jcsample.c **** 
 472:fltk-1.3.4-1/jpeg/jcsample.c **** /*
 473:fltk-1.3.4-1/jpeg/jcsample.c ****  * Module initialization routine for downsampling.
 474:fltk-1.3.4-1/jpeg/jcsample.c ****  * Note that we must select a routine for each component.
 475:fltk-1.3.4-1/jpeg/jcsample.c ****  */
 476:fltk-1.3.4-1/jpeg/jcsample.c **** 
 477:fltk-1.3.4-1/jpeg/jcsample.c **** GLOBAL(void)
 478:fltk-1.3.4-1/jpeg/jcsample.c **** jinit_downsampler (j_compress_ptr cinfo)
 479:fltk-1.3.4-1/jpeg/jcsample.c **** {
 2022              		.loc 1 479 1 is_stmt 1 view -0
 2023              		.cfi_startproc
 2024              		.loc 1 479 1 is_stmt 0 view .LVU748
 2025 0000 F30F1EFA 		endbr64
 480:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample;
 2026              		.loc 1 480 3 is_stmt 1 view .LVU749
 481:fltk-1.3.4-1/jpeg/jcsample.c ****   int ci;
 2027              		.loc 1 481 3 view .LVU750
 482:fltk-1.3.4-1/jpeg/jcsample.c ****   jpeg_component_info * compptr;
 2028              		.loc 1 482 3 view .LVU751
 483:fltk-1.3.4-1/jpeg/jcsample.c ****   boolean smoothok = TRUE;
 2029              		.loc 1 483 3 view .LVU752
 2030              	.LVL233:
 484:fltk-1.3.4-1/jpeg/jcsample.c ****   int h_in_group, v_in_group, h_out_group, v_out_group;
 2031              		.loc 1 484 3 view .LVU753
 485:fltk-1.3.4-1/jpeg/jcsample.c **** 
 486:fltk-1.3.4-1/jpeg/jcsample.c ****   downsample = (my_downsample_ptr)
 2032              		.loc 1 486 3 view .LVU754
 479:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample;
 2033              		.loc 1 479 1 is_stmt 0 view .LVU755
 2034 0004 4157     		pushq	%r15
 2035              		.cfi_def_cfa_offset 16
 2036              		.cfi_offset 15, -16
 487:fltk-1.3.4-1/jpeg/jcsample.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2037              		.loc 1 487 6 view .LVU756
 2038 0006 BAA80000 		movl	$168, %edx
 2038      00
 2039 000b BE010000 		movl	$1, %esi
 2039      00
 479:fltk-1.3.4-1/jpeg/jcsample.c ****   my_downsample_ptr downsample;
 2040              		.loc 1 479 1 view .LVU757
 2041 0010 4156     		pushq	%r14
 2042              		.cfi_def_cfa_offset 24
 2043              		.cfi_offset 14, -24
 2044 0012 4155     		pushq	%r13
 2045              		.cfi_def_cfa_offset 32
 2046              		.cfi_offset 13, -32
 2047 0014 4154     		pushq	%r12
 2048              		.cfi_def_cfa_offset 40
 2049              		.cfi_offset 12, -40
 2050 0016 55       		pushq	%rbp
 2051              		.cfi_def_cfa_offset 48
 2052              		.cfi_offset 6, -48
 2053 0017 4889FD   		movq	%rdi, %rbp
 2054 001a 53       		pushq	%rbx
 2055              		.cfi_def_cfa_offset 56
 2056              		.cfi_offset 3, -56
 2057 001b 4883EC08 		subq	$8, %rsp
 2058              		.cfi_def_cfa_offset 64
 2059              		.loc 1 487 6 view .LVU758
 2060 001f 488B4708 		movq	8(%rdi), %rax
 2061 0023 FF10     		call	*(%rax)
 2062              	.LVL234:
 488:fltk-1.3.4-1/jpeg/jcsample.c **** 				SIZEOF(my_downsampler));
 489:fltk-1.3.4-1/jpeg/jcsample.c ****   cinfo->downsample = (struct jpeg_downsampler *) downsample;
 2063              		.loc 1 489 21 view .LVU759
 2064 0025 48898520 		movq	%rax, 544(%rbp)
 2064      020000
 487:fltk-1.3.4-1/jpeg/jcsample.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2065              		.loc 1 487 6 view .LVU760
 2066 002c 4989C5   		movq	%rax, %r13
 2067              	.LVL235:
 2068              		.loc 1 489 3 is_stmt 1 view .LVU761
 490:fltk-1.3.4-1/jpeg/jcsample.c ****   downsample->pub.start_pass = start_pass_downsample;
 2069              		.loc 1 490 3 view .LVU762
 2070              		.loc 1 490 30 is_stmt 0 view .LVU763
 2071 002f 488D0500 		leaq	start_pass_downsample(%rip), %rax
 2071      000000
 2072              	.LVL236:
 2073              		.loc 1 490 30 view .LVU764
 2074 0036 49894500 		movq	%rax, 0(%r13)
 491:fltk-1.3.4-1/jpeg/jcsample.c ****   downsample->pub.downsample = sep_downsample;
 2075              		.loc 1 491 3 is_stmt 1 view .LVU765
 2076              		.loc 1 491 30 is_stmt 0 view .LVU766
 2077 003a 488D0500 		leaq	sep_downsample(%rip), %rax
 2077      000000
 2078 0041 49894508 		movq	%rax, 8(%r13)
 492:fltk-1.3.4-1/jpeg/jcsample.c ****   downsample->pub.need_context_rows = FALSE;
 2079              		.loc 1 492 3 is_stmt 1 view .LVU767
 2080              		.loc 1 492 37 is_stmt 0 view .LVU768
 2081 0045 41C74510 		movl	$0, 16(%r13)
 2081      00000000 
 493:fltk-1.3.4-1/jpeg/jcsample.c **** 
 494:fltk-1.3.4-1/jpeg/jcsample.c ****   if (cinfo->CCIR601_sampling)
 2082              		.loc 1 494 3 is_stmt 1 view .LVU769
 2083              		.loc 1 494 6 is_stmt 0 view .LVU770
 2084 004d 8BBD2C01 		movl	300(%rbp), %edi
 2084      0000
 2085 0053 85FF     		testl	%edi, %edi
 2086 0055 7414     		je	.L111
 495:fltk-1.3.4-1/jpeg/jcsample.c ****     ERREXIT(cinfo, JERR_CCIR601_NOTIMPL);
 2087              		.loc 1 495 5 is_stmt 1 view .LVU771
 2088 0057 488B4500 		movq	0(%rbp), %rax
 2089 005b 4889EF   		movq	%rbp, %rdi
 2090 005e C740281A 		movl	$26, 40(%rax)
 2090      000000
 2091 0065 488B4500 		movq	0(%rbp), %rax
 2092 0069 FF10     		call	*(%rax)
 2093              	.LVL237:
 2094              	.L111:
 496:fltk-1.3.4-1/jpeg/jcsample.c **** 
 497:fltk-1.3.4-1/jpeg/jcsample.c ****   /* Verify we can handle the sampling factors, and set up method pointers */
 498:fltk-1.3.4-1/jpeg/jcsample.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 2095              		.loc 1 498 3 view .LVU772
 2096              		.loc 1 498 3 is_stmt 0 view .LVU773
 2097 006b 8B755C   		movl	92(%rbp), %esi
 2098              		.loc 1 498 24 view .LVU774
 2099 006e 4C8B7D68 		movq	104(%rbp), %r15
 2100              	.LVL238:
 2101              		.loc 1 498 44 is_stmt 1 view .LVU775
 2102              		.loc 1 498 3 is_stmt 0 view .LVU776
 2103 0072 4531F6   		xorl	%r14d, %r14d
 483:fltk-1.3.4-1/jpeg/jcsample.c ****   int h_in_group, v_in_group, h_out_group, v_out_group;
 2104              		.loc 1 483 11 view .LVU777
 2105 0075 BB010000 		movl	$1, %ebx
 2105      00
 499:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 500:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Compute size of an "output group" for DCT scaling.  This many samples
 501:fltk-1.3.4-1/jpeg/jcsample.c ****      * are to be converted from max_h_samp_factor * max_v_samp_factor pixels.
 502:fltk-1.3.4-1/jpeg/jcsample.c ****      */
 503:fltk-1.3.4-1/jpeg/jcsample.c ****     h_out_group = (compptr->h_samp_factor * compptr->DCT_h_scaled_size) /
 504:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_h_scaled_size;
 505:fltk-1.3.4-1/jpeg/jcsample.c ****     v_out_group = (compptr->v_samp_factor * compptr->DCT_v_scaled_size) /
 506:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_v_scaled_size;
 507:fltk-1.3.4-1/jpeg/jcsample.c ****     h_in_group = cinfo->max_h_samp_factor;
 508:fltk-1.3.4-1/jpeg/jcsample.c ****     v_in_group = cinfo->max_v_samp_factor;
 509:fltk-1.3.4-1/jpeg/jcsample.c ****     downsample->rowgroup_height[ci] = v_out_group; /* save for use later */
 510:fltk-1.3.4-1/jpeg/jcsample.c ****     if (h_in_group == h_out_group && v_in_group == v_out_group) {
 511:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 512:fltk-1.3.4-1/jpeg/jcsample.c ****       if (cinfo->smoothing_factor) {
 513:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = fullsize_smooth_downsample;
 514:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 515:fltk-1.3.4-1/jpeg/jcsample.c ****       } else
 516:fltk-1.3.4-1/jpeg/jcsample.c **** #endif
 517:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = fullsize_downsample;
 518:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 519:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group) {
 520:fltk-1.3.4-1/jpeg/jcsample.c ****       smoothok = FALSE;
 521:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->methods[ci] = h2v1_downsample;
 522:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 523:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group * 2) {
 524:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 525:fltk-1.3.4-1/jpeg/jcsample.c ****       if (cinfo->smoothing_factor) {
 526:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = h2v2_smooth_downsample;
 527:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 528:fltk-1.3.4-1/jpeg/jcsample.c ****       } else
 529:fltk-1.3.4-1/jpeg/jcsample.c **** #endif
 530:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = h2v2_downsample;
 531:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if ((h_in_group % h_out_group) == 0 &&
 532:fltk-1.3.4-1/jpeg/jcsample.c **** 	       (v_in_group % v_out_group) == 0) {
 533:fltk-1.3.4-1/jpeg/jcsample.c ****       smoothok = FALSE;
 534:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->methods[ci] = int_downsample;
 2106              		.loc 1 534 31 view .LVU778
 2107 007a 4C8D2500 		leaq	int_downsample(%rip), %r12
 2107      000000
 498:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 2108              		.loc 1 498 3 view .LVU779
 2109 0081 85F6     		testl	%esi, %esi
 2110 0083 7F3F     		jg	.L112
 2111 0085 E9D80000 		jmp	.L110
 2111      00
 2112              	.LVL239:
 2113 008a 660F1F44 		.p2align 4,,10
 2113      0000
 2114              		.p2align 3
 2115              	.L139:
 512:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = fullsize_smooth_downsample;
 2116              		.loc 1 512 7 is_stmt 1 view .LVU780
 512:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = fullsize_smooth_downsample;
 2117              		.loc 1 512 10 is_stmt 0 view .LVU781
 2118 0090 8B8D3401 		movl	308(%rbp), %ecx
 2118      0000
 2119 0096 85C9     		testl	%ecx, %ecx
 2120 0098 0F84FA00 		je	.L115
 2120      0000
 513:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 2121              		.loc 1 513 2 is_stmt 1 view .LVU782
 513:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 2122              		.loc 1 513 26 is_stmt 0 view .LVU783
 2123 009e 488D0500 		leaq	fullsize_smooth_downsample(%rip), %rax
 2123      000000
 2124              	.LVL240:
 513:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 2125              		.loc 1 513 26 view .LVU784
 2126 00a5 4B8944F5 		movq	%rax, 24(%r13,%r14,8)
 2126      18
 514:fltk-1.3.4-1/jpeg/jcsample.c ****       } else
 2127              		.loc 1 514 2 is_stmt 1 view .LVU785
 514:fltk-1.3.4-1/jpeg/jcsample.c ****       } else
 2128              		.loc 1 514 36 is_stmt 0 view .LVU786
 2129 00aa 41C74510 		movl	$1, 16(%r13)
 2129      01000000 
 2130              	.LVL241:
 2131              	.L116:
 499:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Compute size of an "output group" for DCT scaling.  This many samples
 2132              		.loc 1 499 8 is_stmt 1 view .LVU787
 499:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Compute size of an "output group" for DCT scaling.  This many samples
 2133              		.loc 1 499 21 is_stmt 0 view .LVU788
 2134 00b2 4983C760 		addq	$96, %r15
 2135              	.LVL242:
 498:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 2136              		.loc 1 498 44 is_stmt 1 view .LVU789
 2137 00b6 4983C601 		addq	$1, %r14
 2138              	.LVL243:
 498:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 2139              		.loc 1 498 3 is_stmt 0 view .LVU790
 2140 00ba 4439755C 		cmpl	%r14d, 92(%rbp)
 2141 00be 0F8E8C00 		jle	.L138
 2141      0000
 2142              	.LVL244:
 2143              	.L112:
 503:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_h_scaled_size;
 2144              		.loc 1 503 5 is_stmt 1 view .LVU791
 503:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_h_scaled_size;
 2145              		.loc 1 503 43 is_stmt 0 view .LVU792
 2146 00c4 418B4708 		movl	8(%r15), %eax
 2147 00c8 410FAF47 		imull	36(%r15), %eax
 2147      24
 508:fltk-1.3.4-1/jpeg/jcsample.c ****     downsample->rowgroup_height[ci] = v_out_group; /* save for use later */
 2148              		.loc 1 508 16 view .LVU793
 2149 00cd 448B9564 		movl	356(%rbp), %r10d
 2149      010000
 503:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_h_scaled_size;
 2150              		.loc 1 503 17 view .LVU794
 2151 00d4 99       		cltd
 2152 00d5 F7BD6801 		idivl	360(%rbp)
 2152      0000
 2153 00db 89C7     		movl	%eax, %edi
 2154              	.LVL245:
 505:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_v_scaled_size;
 2155              		.loc 1 505 5 is_stmt 1 view .LVU795
 505:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_v_scaled_size;
 2156              		.loc 1 505 43 is_stmt 0 view .LVU796
 2157 00dd 418B470C 		movl	12(%r15), %eax
 2158              	.LVL246:
 505:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_v_scaled_size;
 2159              		.loc 1 505 43 view .LVU797
 2160 00e1 410FAF47 		imull	40(%r15), %eax
 2160      28
 505:fltk-1.3.4-1/jpeg/jcsample.c **** 		  cinfo->min_DCT_v_scaled_size;
 2161              		.loc 1 505 17 view .LVU798
 2162 00e6 99       		cltd
 2163 00e7 F7BD6C01 		idivl	364(%rbp)
 2163      0000
 2164 00ed 4189C1   		movl	%eax, %r9d
 2165              	.LVL247:
 507:fltk-1.3.4-1/jpeg/jcsample.c ****     v_in_group = cinfo->max_v_samp_factor;
 2166              		.loc 1 507 5 is_stmt 1 view .LVU799
 507:fltk-1.3.4-1/jpeg/jcsample.c ****     v_in_group = cinfo->max_v_samp_factor;
 2167              		.loc 1 507 16 is_stmt 0 view .LVU800
 2168 00f0 8B856001 		movl	352(%rbp), %eax
 2168      0000
 2169              	.LVL248:
 508:fltk-1.3.4-1/jpeg/jcsample.c ****     downsample->rowgroup_height[ci] = v_out_group; /* save for use later */
 2170              		.loc 1 508 5 is_stmt 1 view .LVU801
 509:fltk-1.3.4-1/jpeg/jcsample.c ****     if (h_in_group == h_out_group && v_in_group == v_out_group) {
 2171              		.loc 1 509 5 view .LVU802
 509:fltk-1.3.4-1/jpeg/jcsample.c ****     if (h_in_group == h_out_group && v_in_group == v_out_group) {
 2172              		.loc 1 509 37 is_stmt 0 view .LVU803
 2173 00f6 47894CB5 		movl	%r9d, 104(%r13,%r14,4)
 2173      68
 510:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 2174              		.loc 1 510 5 is_stmt 1 view .LVU804
 510:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 2175              		.loc 1 510 8 is_stmt 0 view .LVU805
 2176 00fb 39C7     		cmpl	%eax, %edi
 2177 00fd 7505     		jne	.L114
 510:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 2178              		.loc 1 510 8 view .LVU806
 2179 00ff 4539D1   		cmpl	%r10d, %r9d
 2180 0102 748C     		je	.L139
 2181              	.L114:
 518:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group) {
 2182              		.loc 1 518 12 is_stmt 1 view .LVU807
 518:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group) {
 2183              		.loc 1 518 42 is_stmt 0 view .LVU808
 2184 0104 8D143F   		leal	(%rdi,%rdi), %edx
 518:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group) {
 2185              		.loc 1 518 15 view .LVU809
 2186 0107 39C2     		cmpl	%eax, %edx
 2187 0109 0F84A100 		je	.L140
 2187      0000
 2188              	.L117:
 531:fltk-1.3.4-1/jpeg/jcsample.c **** 	       (v_in_group % v_out_group) == 0) {
 2189              		.loc 1 531 12 is_stmt 1 view .LVU810
 2190 010f 99       		cltd
 2191 0110 F7FF     		idivl	%edi
 2192              	.LVL249:
 531:fltk-1.3.4-1/jpeg/jcsample.c **** 	       (v_in_group % v_out_group) == 0) {
 2193              		.loc 1 531 12 is_stmt 0 view .LVU811
 2194 0112 89C7     		movl	%eax, %edi
 2195              	.LVL250:
 531:fltk-1.3.4-1/jpeg/jcsample.c **** 	       (v_in_group % v_out_group) == 0) {
 2196              		.loc 1 531 15 view .LVU812
 2197 0114 85D2     		testl	%edx, %edx
 2198 0116 7560     		jne	.L120
 2199 0118 4489D0   		movl	%r10d, %eax
 2200 011b 99       		cltd
 2201 011c 41F7F9   		idivl	%r9d
 531:fltk-1.3.4-1/jpeg/jcsample.c **** 	       (v_in_group % v_out_group) == 0) {
 2202              		.loc 1 531 48 discriminator 1 view .LVU813
 2203 011f 85D2     		testl	%edx, %edx
 2204 0121 7555     		jne	.L120
 533:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->methods[ci] = int_downsample;
 2205              		.loc 1 533 7 is_stmt 1 view .LVU814
 2206              	.LVL251:
 2207              		.loc 1 534 7 view .LVU815
 2208              		.loc 1 534 31 is_stmt 0 view .LVU816
 2209 0123 4F8964F5 		movq	%r12, 24(%r13,%r14,8)
 2209      18
 535:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->h_expand[ci] = (UINT8) (h_in_group / h_out_group);
 2210              		.loc 1 535 7 is_stmt 1 view .LVU817
 533:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->methods[ci] = int_downsample;
 2211              		.loc 1 533 16 is_stmt 0 view .LVU818
 2212 0128 31DB     		xorl	%ebx, %ebx
 499:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Compute size of an "output group" for DCT scaling.  This many samples
 2213              		.loc 1 499 21 view .LVU819
 2214 012a 4983C760 		addq	$96, %r15
 2215              	.LVL252:
 2216              		.loc 1 535 34 view .LVU820
 2217 012e 4388BC35 		movb	%dil, 144(%r13,%r14)
 2217      90000000 
 536:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->v_expand[ci] = (UINT8) (v_in_group / v_out_group);
 2218              		.loc 1 536 7 is_stmt 1 view .LVU821
 2219              	.LVL253:
 499:fltk-1.3.4-1/jpeg/jcsample.c ****     /* Compute size of an "output group" for DCT scaling.  This many samples
 2220              		.loc 1 499 8 view .LVU822
 498:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 2221              		.loc 1 498 44 view .LVU823
 2222              		.loc 1 536 34 is_stmt 0 view .LVU824
 2223 0136 43888435 		movb	%al, 154(%r13,%r14)
 2223      9A000000 
 2224 013e 4983C601 		addq	$1, %r14
 2225              	.LVL254:
 498:fltk-1.3.4-1/jpeg/jcsample.c ****        ci++, compptr++) {
 2226              		.loc 1 498 3 view .LVU825
 2227 0142 4439755C 		cmpl	%r14d, 92(%rbp)
 2228 0146 0F8F78FF 		jg	.L112
 2228      FFFF
 2229              	.LVL255:
 2230 014c 0F1F4000 		.p2align 4,,10
 2231              		.p2align 3
 2232              	.L138:
 537:fltk-1.3.4-1/jpeg/jcsample.c ****     } else
 538:fltk-1.3.4-1/jpeg/jcsample.c ****       ERREXIT(cinfo, JERR_FRACT_SAMPLE_NOTIMPL);
 539:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 540:fltk-1.3.4-1/jpeg/jcsample.c **** 
 541:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 542:fltk-1.3.4-1/jpeg/jcsample.c ****   if (cinfo->smoothing_factor && !smoothok)
 2233              		.loc 1 542 3 is_stmt 1 view .LVU826
 2234              		.loc 1 542 31 is_stmt 0 view .LVU827
 2235 0150 8B853401 		movl	308(%rbp), %eax
 2235      0000
 2236 0156 85C0     		testl	%eax, %eax
 2237 0158 7408     		je	.L110
 2238 015a 85DB     		testl	%ebx, %ebx
 2239 015c 0F848600 		je	.L141
 2239      0000
 2240              	.LVL256:
 2241              	.L110:
 543:fltk-1.3.4-1/jpeg/jcsample.c ****     TRACEMS(cinfo, 0, JTRC_SMOOTH_NOTIMPL);
 544:fltk-1.3.4-1/jpeg/jcsample.c **** #endif
 545:fltk-1.3.4-1/jpeg/jcsample.c **** }
 2242              		.loc 1 545 1 view .LVU828
 2243 0162 4883C408 		addq	$8, %rsp
 2244              		.cfi_remember_state
 2245              		.cfi_def_cfa_offset 56
 2246 0166 5B       		popq	%rbx
 2247              		.cfi_def_cfa_offset 48
 2248 0167 5D       		popq	%rbp
 2249              		.cfi_def_cfa_offset 40
 2250              	.LVL257:
 2251              		.loc 1 545 1 view .LVU829
 2252 0168 415C     		popq	%r12
 2253              		.cfi_def_cfa_offset 32
 2254 016a 415D     		popq	%r13
 2255              		.cfi_def_cfa_offset 24
 2256              	.LVL258:
 2257              		.loc 1 545 1 view .LVU830
 2258 016c 415E     		popq	%r14
 2259              		.cfi_def_cfa_offset 16
 2260 016e 415F     		popq	%r15
 2261              		.cfi_def_cfa_offset 8
 2262              	.LVL259:
 2263              		.loc 1 545 1 view .LVU831
 2264 0170 C3       		ret
 2265              	.LVL260:
 2266              		.p2align 4,,10
 2267 0171 0F1F8000 		.p2align 3
 2267      000000
 2268              	.L120:
 2269              		.cfi_restore_state
 538:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 2270              		.loc 1 538 7 is_stmt 1 view .LVU832
 2271 0178 488B4500 		movq	0(%rbp), %rax
 2272 017c 4889EF   		movq	%rbp, %rdi
 2273 017f C7402827 		movl	$39, 40(%rax)
 2273      000000
 2274 0186 488B4500 		movq	0(%rbp), %rax
 2275 018a FF10     		call	*(%rax)
 2276              	.LVL261:
 538:fltk-1.3.4-1/jpeg/jcsample.c ****   }
 2277              		.loc 1 538 7 is_stmt 0 view .LVU833
 2278 018c E921FFFF 		jmp	.L116
 2278      FF
 2279              	.LVL262:
 2280              		.p2align 4,,10
 2281 0191 0F1F8000 		.p2align 3
 2281      000000
 2282              	.L115:
 517:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 2283              		.loc 1 517 2 is_stmt 1 view .LVU834
 517:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 2284              		.loc 1 517 26 is_stmt 0 view .LVU835
 2285 0198 488D0500 		leaq	fullsize_downsample(%rip), %rax
 2285      000000
 2286              	.LVL263:
 517:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 2287              		.loc 1 517 26 view .LVU836
 2288 019f 4B8944F5 		movq	%rax, 24(%r13,%r14,8)
 2288      18
 2289 01a4 E909FFFF 		jmp	.L116
 2289      FF
 2290              	.LVL264:
 2291 01a9 0F1F8000 		.p2align 4,,10
 2291      000000
 2292              		.p2align 3
 2293              	.L140:
 518:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group) {
 2294              		.loc 1 518 46 discriminator 1 view .LVU837
 2295 01b0 4539D1   		cmpl	%r10d, %r9d
 2296 01b3 745B     		je	.L142
 522:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group * 2) {
 2297              		.loc 1 522 12 is_stmt 1 discriminator 1 view .LVU838
 523:fltk-1.3.4-1/jpeg/jcsample.c **** #ifdef INPUT_SMOOTHING_SUPPORTED
 2298              		.loc 1 523 35 is_stmt 0 discriminator 1 view .LVU839
 2299 01b5 438D1409 		leal	(%r9,%r9), %edx
 522:fltk-1.3.4-1/jpeg/jcsample.c **** 	       v_in_group == v_out_group * 2) {
 2300              		.loc 1 522 46 discriminator 1 view .LVU840
 2301 01b9 4439D2   		cmpl	%r10d, %edx
 2302 01bc 0F854DFF 		jne	.L117
 2302      FFFF
 525:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = h2v2_smooth_downsample;
 2303              		.loc 1 525 7 is_stmt 1 view .LVU841
 525:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->methods[ci] = h2v2_smooth_downsample;
 2304              		.loc 1 525 10 is_stmt 0 view .LVU842
 2305 01c2 8B953401 		movl	308(%rbp), %edx
 2305      0000
 2306 01c8 85D2     		testl	%edx, %edx
 2307 01ca 745C     		je	.L119
 526:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 2308              		.loc 1 526 2 is_stmt 1 view .LVU843
 526:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 2309              		.loc 1 526 26 is_stmt 0 view .LVU844
 2310 01cc 488D0500 		leaq	h2v2_smooth_downsample(%rip), %rax
 2310      000000
 2311              	.LVL265:
 526:fltk-1.3.4-1/jpeg/jcsample.c **** 	downsample->pub.need_context_rows = TRUE;
 2312              		.loc 1 526 26 view .LVU845
 2313 01d3 4B8944F5 		movq	%rax, 24(%r13,%r14,8)
 2313      18
 527:fltk-1.3.4-1/jpeg/jcsample.c ****       } else
 2314              		.loc 1 527 2 is_stmt 1 view .LVU846
 527:fltk-1.3.4-1/jpeg/jcsample.c ****       } else
 2315              		.loc 1 527 36 is_stmt 0 view .LVU847
 2316 01d8 41C74510 		movl	$1, 16(%r13)
 2316      01000000 
 2317 01e0 E9CDFEFF 		jmp	.L116
 2317      FF
 2318              	.LVL266:
 2319              		.p2align 4,,10
 2320 01e5 0F1F00   		.p2align 3
 2321              	.L141:
 543:fltk-1.3.4-1/jpeg/jcsample.c **** #endif
 2322              		.loc 1 543 5 is_stmt 1 view .LVU848
 2323 01e8 488B4500 		movq	0(%rbp), %rax
 2324 01ec 4889EF   		movq	%rbp, %rdi
 2325 01ef 31F6     		xorl	%esi, %esi
 2326 01f1 C7402865 		movl	$101, 40(%rax)
 2326      000000
 2327 01f8 488B4500 		movq	0(%rbp), %rax
 2328 01fc 488B4008 		movq	8(%rax), %rax
 2329              		.loc 1 545 1 is_stmt 0 view .LVU849
 2330 0200 4883C408 		addq	$8, %rsp
 2331              		.cfi_remember_state
 2332              		.cfi_def_cfa_offset 56
 2333 0204 5B       		popq	%rbx
 2334              		.cfi_def_cfa_offset 48
 2335              	.LVL267:
 2336              		.loc 1 545 1 view .LVU850
 2337 0205 5D       		popq	%rbp
 2338              		.cfi_def_cfa_offset 40
 2339              	.LVL268:
 2340              		.loc 1 545 1 view .LVU851
 2341 0206 415C     		popq	%r12
 2342              		.cfi_def_cfa_offset 32
 2343 0208 415D     		popq	%r13
 2344              		.cfi_def_cfa_offset 24
 2345              	.LVL269:
 2346              		.loc 1 545 1 view .LVU852
 2347 020a 415E     		popq	%r14
 2348              		.cfi_def_cfa_offset 16
 2349 020c 415F     		popq	%r15
 2350              		.cfi_def_cfa_offset 8
 2351              	.LVL270:
 543:fltk-1.3.4-1/jpeg/jcsample.c **** #endif
 2352              		.loc 1 543 5 view .LVU853
 2353 020e FFE0     		jmp	*%rax
 2354              	.LVL271:
 2355              		.p2align 4,,10
 2356              		.p2align 3
 2357              	.L142:
 2358              		.cfi_restore_state
 520:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->methods[ci] = h2v1_downsample;
 2359              		.loc 1 520 7 is_stmt 1 view .LVU854
 521:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 2360              		.loc 1 521 7 view .LVU855
 521:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 2361              		.loc 1 521 31 is_stmt 0 view .LVU856
 2362 0210 488D0500 		leaq	h2v1_downsample(%rip), %rax
 2362      000000
 2363              	.LVL272:
 520:fltk-1.3.4-1/jpeg/jcsample.c ****       downsample->methods[ci] = h2v1_downsample;
 2364              		.loc 1 520 16 view .LVU857
 2365 0217 31DB     		xorl	%ebx, %ebx
 521:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if (h_in_group == h_out_group * 2 &&
 2366              		.loc 1 521 31 view .LVU858
 2367 0219 4B8944F5 		movq	%rax, 24(%r13,%r14,8)
 2367      18
 2368 021e E98FFEFF 		jmp	.L116
 2368      FF
 2369              	.LVL273:
 2370              		.p2align 4,,10
 2371 0223 0F1F4400 		.p2align 3
 2371      00
 2372              	.L119:
 530:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if ((h_in_group % h_out_group) == 0 &&
 2373              		.loc 1 530 2 is_stmt 1 view .LVU859
 530:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if ((h_in_group % h_out_group) == 0 &&
 2374              		.loc 1 530 26 is_stmt 0 view .LVU860
 2375 0228 488D0500 		leaq	h2v2_downsample(%rip), %rax
 2375      000000
 2376              	.LVL274:
 530:fltk-1.3.4-1/jpeg/jcsample.c ****     } else if ((h_in_group % h_out_group) == 0 &&
 2377              		.loc 1 530 26 view .LVU861
 2378 022f 4B8944F5 		movq	%rax, 24(%r13,%r14,8)
 2378      18
 2379 0234 E979FEFF 		jmp	.L116
 2379      FF
 2380              		.cfi_endproc
 2381              	.LFE60:
 2383              		.text
 2384              	.Letext0:
 2385              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 2386              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 2387              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 2388              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 2389              		.file 6 "/usr/include/stdio.h"
 2390              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 2391              		.file 8 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 2392              		.file 9 "fltk-1.3.4-1/jpeg/jpeglib.h"
 2393              		.file 10 "fltk-1.3.4-1/jpeg/jpegint.h"
 2394              		.file 11 "fltk-1.3.4-1/jpeg/jerror.h"
 19501              		.section	.note.gnu.property,"a"
 19502              		.align 8
 19503 0000 04000000 		.long	 1f - 0f
 19504 0004 10000000 		.long	 4f - 1f
 19505 0008 05000000 		.long	 5
 19506              	0:
 19507 000c 474E5500 		.string	 "GNU"
 19508              	1:
 19509              		.align 8
 19510 0010 020000C0 		.long	 0xc0000002
 19511 0014 04000000 		.long	 3f - 2f
 19512              	2:
 19513 0018 03000000 		.long	 0x3
 19514              	3:
 19515 001c 00000000 		.align 8
 19516              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jcsample.c
     /tmp/ccRDX7mg.s:7      .text.start_pass_downsample:0000000000000000 start_pass_downsample
     /tmp/ccRDX7mg.s:23     .text.sep_downsample:0000000000000000 sep_downsample
     /tmp/ccRDX7mg.s:145    .text.int_downsample:0000000000000000 int_downsample
     /tmp/ccRDX7mg.s:463    .text.h2v1_downsample:0000000000000000 h2v1_downsample
     /tmp/ccRDX7mg.s:662    .text.h2v2_downsample:0000000000000000 h2v2_downsample
     /tmp/ccRDX7mg.s:884    .text.h2v2_smooth_downsample:0000000000000000 h2v2_smooth_downsample
     /tmp/ccRDX7mg.s:1435   .text.fullsize_smooth_downsample:0000000000000000 fullsize_smooth_downsample
     /tmp/ccRDX7mg.s:1879   .text.fullsize_downsample:0000000000000000 fullsize_downsample
     /tmp/ccRDX7mg.s:2019   .text.jinit_downsampler:0000000000000000 jinit_downsampler
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
jcopy_sample_rows
