   1              		.file	"jccolor.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.rgb_ycc_start,"ax",@progbits
   5              		.p2align 4
   7              	rgb_ycc_start:
   8              	.LVL0:
   9              	.LFB51:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jccolor.c"
   1:fltk-1.3.4-1/jpeg/jccolor.c **** /*
   2:fltk-1.3.4-1/jpeg/jccolor.c ****  * jccolor.c
   3:fltk-1.3.4-1/jpeg/jccolor.c ****  *
   4:fltk-1.3.4-1/jpeg/jccolor.c ****  * Copyright (C) 1991-1996, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jccolor.c ****  * Modified 2011-2013 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jccolor.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jccolor.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jccolor.c ****  *
   9:fltk-1.3.4-1/jpeg/jccolor.c ****  * This file contains input colorspace conversion routines.
  10:fltk-1.3.4-1/jpeg/jccolor.c ****  */
  11:fltk-1.3.4-1/jpeg/jccolor.c **** 
  12:fltk-1.3.4-1/jpeg/jccolor.c **** #define JPEG_INTERNALS
  13:fltk-1.3.4-1/jpeg/jccolor.c **** #include "jinclude.h"
  14:fltk-1.3.4-1/jpeg/jccolor.c **** #include "jpeglib.h"
  15:fltk-1.3.4-1/jpeg/jccolor.c **** 
  16:fltk-1.3.4-1/jpeg/jccolor.c **** 
  17:fltk-1.3.4-1/jpeg/jccolor.c **** /* Private subobject */
  18:fltk-1.3.4-1/jpeg/jccolor.c **** 
  19:fltk-1.3.4-1/jpeg/jccolor.c **** typedef struct {
  20:fltk-1.3.4-1/jpeg/jccolor.c ****   struct jpeg_color_converter pub; /* public fields */
  21:fltk-1.3.4-1/jpeg/jccolor.c **** 
  22:fltk-1.3.4-1/jpeg/jccolor.c ****   /* Private state for RGB->YCC conversion */
  23:fltk-1.3.4-1/jpeg/jccolor.c ****   INT32 * rgb_ycc_tab;		/* => table for RGB to YCbCr conversion */
  24:fltk-1.3.4-1/jpeg/jccolor.c **** } my_color_converter;
  25:fltk-1.3.4-1/jpeg/jccolor.c **** 
  26:fltk-1.3.4-1/jpeg/jccolor.c **** typedef my_color_converter * my_cconvert_ptr;
  27:fltk-1.3.4-1/jpeg/jccolor.c **** 
  28:fltk-1.3.4-1/jpeg/jccolor.c **** 
  29:fltk-1.3.4-1/jpeg/jccolor.c **** /**************** RGB -> YCbCr conversion: most common case **************/
  30:fltk-1.3.4-1/jpeg/jccolor.c **** 
  31:fltk-1.3.4-1/jpeg/jccolor.c **** /*
  32:fltk-1.3.4-1/jpeg/jccolor.c ****  * YCbCr is defined per Recommendation ITU-R BT.601-7 (03/2011),
  33:fltk-1.3.4-1/jpeg/jccolor.c ****  * previously known as Recommendation CCIR 601-1, except that Cb and Cr
  34:fltk-1.3.4-1/jpeg/jccolor.c ****  * are normalized to the range 0..MAXJSAMPLE rather than -0.5 .. 0.5.
  35:fltk-1.3.4-1/jpeg/jccolor.c ****  * sRGB (standard RGB color space) is defined per IEC 61966-2-1:1999.
  36:fltk-1.3.4-1/jpeg/jccolor.c ****  * sYCC (standard luma-chroma-chroma color space with extended gamut)
  37:fltk-1.3.4-1/jpeg/jccolor.c ****  * is defined per IEC 61966-2-1:1999 Amendment A1:2003 Annex F.
  38:fltk-1.3.4-1/jpeg/jccolor.c ****  * bg-sRGB and bg-sYCC (big gamut standard color spaces)
  39:fltk-1.3.4-1/jpeg/jccolor.c ****  * are defined per IEC 61966-2-1:1999 Amendment A1:2003 Annex G.
  40:fltk-1.3.4-1/jpeg/jccolor.c ****  * Note that the derived conversion coefficients given in some of these
  41:fltk-1.3.4-1/jpeg/jccolor.c ****  * documents are imprecise.  The general conversion equations are
  42:fltk-1.3.4-1/jpeg/jccolor.c ****  *	Y  = Kr * R + (1 - Kr - Kb) * G + Kb * B
  43:fltk-1.3.4-1/jpeg/jccolor.c ****  *	Cb = 0.5 * (B - Y) / (1 - Kb)
  44:fltk-1.3.4-1/jpeg/jccolor.c ****  *	Cr = 0.5 * (R - Y) / (1 - Kr)
  45:fltk-1.3.4-1/jpeg/jccolor.c ****  * With Kr = 0.299 and Kb = 0.114 (derived according to SMPTE RP 177-1993
  46:fltk-1.3.4-1/jpeg/jccolor.c ****  * from the 1953 FCC NTSC primaries and CIE Illuminant C),
  47:fltk-1.3.4-1/jpeg/jccolor.c ****  * the conversion equations to be implemented are therefore
  48:fltk-1.3.4-1/jpeg/jccolor.c ****  *	Y  =  0.299 * R + 0.587 * G + 0.114 * B
  49:fltk-1.3.4-1/jpeg/jccolor.c ****  *	Cb = -0.168735892 * R - 0.331264108 * G + 0.5 * B + CENTERJSAMPLE
  50:fltk-1.3.4-1/jpeg/jccolor.c ****  *	Cr =  0.5 * R - 0.418687589 * G - 0.081312411 * B + CENTERJSAMPLE
  51:fltk-1.3.4-1/jpeg/jccolor.c ****  * Note: older versions of the IJG code used a zero offset of MAXJSAMPLE/2,
  52:fltk-1.3.4-1/jpeg/jccolor.c ****  * rather than CENTERJSAMPLE, for Cb and Cr.  This gave equal positive and
  53:fltk-1.3.4-1/jpeg/jccolor.c ****  * negative swings for Cb/Cr, but meant that grayscale values (Cb=Cr=0)
  54:fltk-1.3.4-1/jpeg/jccolor.c ****  * were not represented exactly.  Now we sacrifice exact representation of
  55:fltk-1.3.4-1/jpeg/jccolor.c ****  * maximum red and maximum blue in order to get exact grayscales.
  56:fltk-1.3.4-1/jpeg/jccolor.c ****  *
  57:fltk-1.3.4-1/jpeg/jccolor.c ****  * To avoid floating-point arithmetic, we represent the fractional constants
  58:fltk-1.3.4-1/jpeg/jccolor.c ****  * as integers scaled up by 2^16 (about 4 digits precision); we have to divide
  59:fltk-1.3.4-1/jpeg/jccolor.c ****  * the products by 2^16, with appropriate rounding, to get the correct answer.
  60:fltk-1.3.4-1/jpeg/jccolor.c ****  *
  61:fltk-1.3.4-1/jpeg/jccolor.c ****  * For even more speed, we avoid doing any multiplications in the inner loop
  62:fltk-1.3.4-1/jpeg/jccolor.c ****  * by precalculating the constants times R,G,B for all possible values.
  63:fltk-1.3.4-1/jpeg/jccolor.c ****  * For 8-bit JSAMPLEs this is very reasonable (only 256 entries per table);
  64:fltk-1.3.4-1/jpeg/jccolor.c ****  * for 9-bit to 12-bit samples it is still acceptable.  It's not very
  65:fltk-1.3.4-1/jpeg/jccolor.c ****  * reasonable for 16-bit samples, but if you want lossless storage you
  66:fltk-1.3.4-1/jpeg/jccolor.c ****  * shouldn't be changing colorspace anyway.
  67:fltk-1.3.4-1/jpeg/jccolor.c ****  * The CENTERJSAMPLE offsets and the rounding fudge-factor of 0.5 are included
  68:fltk-1.3.4-1/jpeg/jccolor.c ****  * in the tables to save adding them separately in the inner loop.
  69:fltk-1.3.4-1/jpeg/jccolor.c ****  */
  70:fltk-1.3.4-1/jpeg/jccolor.c **** 
  71:fltk-1.3.4-1/jpeg/jccolor.c **** #define SCALEBITS	16	/* speediest right-shift on some machines */
  72:fltk-1.3.4-1/jpeg/jccolor.c **** #define CBCR_OFFSET	((INT32) CENTERJSAMPLE << SCALEBITS)
  73:fltk-1.3.4-1/jpeg/jccolor.c **** #define ONE_HALF	((INT32) 1 << (SCALEBITS-1))
  74:fltk-1.3.4-1/jpeg/jccolor.c **** #define FIX(x)		((INT32) ((x) * (1L<<SCALEBITS) + 0.5))
  75:fltk-1.3.4-1/jpeg/jccolor.c **** 
  76:fltk-1.3.4-1/jpeg/jccolor.c **** /* We allocate one big table and divide it up into eight parts, instead of
  77:fltk-1.3.4-1/jpeg/jccolor.c ****  * doing eight alloc_small requests.  This lets us use a single table base
  78:fltk-1.3.4-1/jpeg/jccolor.c ****  * address, which can be held in a register in the inner loops on many
  79:fltk-1.3.4-1/jpeg/jccolor.c ****  * machines (more than can hold all eight addresses, anyway).
  80:fltk-1.3.4-1/jpeg/jccolor.c ****  */
  81:fltk-1.3.4-1/jpeg/jccolor.c **** 
  82:fltk-1.3.4-1/jpeg/jccolor.c **** #define R_Y_OFF		0			/* offset to R => Y section */
  83:fltk-1.3.4-1/jpeg/jccolor.c **** #define G_Y_OFF		(1*(MAXJSAMPLE+1))	/* offset to G => Y section */
  84:fltk-1.3.4-1/jpeg/jccolor.c **** #define B_Y_OFF		(2*(MAXJSAMPLE+1))	/* etc. */
  85:fltk-1.3.4-1/jpeg/jccolor.c **** #define R_CB_OFF	(3*(MAXJSAMPLE+1))
  86:fltk-1.3.4-1/jpeg/jccolor.c **** #define G_CB_OFF	(4*(MAXJSAMPLE+1))
  87:fltk-1.3.4-1/jpeg/jccolor.c **** #define B_CB_OFF	(5*(MAXJSAMPLE+1))
  88:fltk-1.3.4-1/jpeg/jccolor.c **** #define R_CR_OFF	B_CB_OFF		/* B=>Cb, R=>Cr are the same */
  89:fltk-1.3.4-1/jpeg/jccolor.c **** #define G_CR_OFF	(6*(MAXJSAMPLE+1))
  90:fltk-1.3.4-1/jpeg/jccolor.c **** #define B_CR_OFF	(7*(MAXJSAMPLE+1))
  91:fltk-1.3.4-1/jpeg/jccolor.c **** #define TABLE_SIZE	(8*(MAXJSAMPLE+1))
  92:fltk-1.3.4-1/jpeg/jccolor.c **** 
  93:fltk-1.3.4-1/jpeg/jccolor.c **** 
  94:fltk-1.3.4-1/jpeg/jccolor.c **** /*
  95:fltk-1.3.4-1/jpeg/jccolor.c ****  * Initialize for RGB->YCC colorspace conversion.
  96:fltk-1.3.4-1/jpeg/jccolor.c ****  */
  97:fltk-1.3.4-1/jpeg/jccolor.c **** 
  98:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
  99:fltk-1.3.4-1/jpeg/jccolor.c **** rgb_ycc_start (j_compress_ptr cinfo)
 100:fltk-1.3.4-1/jpeg/jccolor.c **** {
  11              		.loc 1 100 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 100 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
 101:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
  15              		.loc 1 101 3 is_stmt 1 view .LVU2
 100:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
  16              		.loc 1 100 1 is_stmt 0 view .LVU3
  17 0004 53       		pushq	%rbx
  18              		.cfi_def_cfa_offset 16
  19              		.cfi_offset 3, -16
 102:fltk-1.3.4-1/jpeg/jccolor.c ****   INT32 * rgb_ycc_tab;
 103:fltk-1.3.4-1/jpeg/jccolor.c ****   INT32 i;
 104:fltk-1.3.4-1/jpeg/jccolor.c **** 
 105:fltk-1.3.4-1/jpeg/jccolor.c ****   /* Allocate and fill in the conversion tables. */
 106:fltk-1.3.4-1/jpeg/jccolor.c ****   cconvert->rgb_ycc_tab = rgb_ycc_tab = (INT32 *)
 107:fltk-1.3.4-1/jpeg/jccolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  20              		.loc 1 107 6 view .LVU4
  21 0005 488B4708 		movq	8(%rdi), %rax
  22 0009 BA004000 		movl	$16384, %edx
  22      00
  23 000e BE010000 		movl	$1, %esi
  23      00
 101:fltk-1.3.4-1/jpeg/jccolor.c ****   INT32 * rgb_ycc_tab;
  24              		.loc 1 101 19 view .LVU5
  25 0013 488B9F18 		movq	536(%rdi), %rbx
  25      020000
  26              	.LVL1:
 102:fltk-1.3.4-1/jpeg/jccolor.c ****   INT32 * rgb_ycc_tab;
  27              		.loc 1 102 3 is_stmt 1 view .LVU6
 103:fltk-1.3.4-1/jpeg/jccolor.c **** 
  28              		.loc 1 103 3 view .LVU7
 106:fltk-1.3.4-1/jpeg/jccolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  29              		.loc 1 106 3 view .LVU8
  30              		.loc 1 107 6 is_stmt 0 view .LVU9
  31 001a FF10     		call	*(%rax)
  32              	.LVL2:
 106:fltk-1.3.4-1/jpeg/jccolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  33              		.loc 1 106 25 view .LVU10
  34 001c 4531DB   		xorl	%r11d, %r11d
  35 001f 4531D2   		xorl	%r10d, %r10d
  36 0022 BAFF7F80 		movl	$8421375, %edx
  36      00
  37 0027 48894310 		movq	%rax, 16(%rbx)
 108:fltk-1.3.4-1/jpeg/jccolor.c **** 				(TABLE_SIZE * SIZEOF(INT32)));
 109:fltk-1.3.4-1/jpeg/jccolor.c **** 
 110:fltk-1.3.4-1/jpeg/jccolor.c ****   for (i = 0; i <= MAXJSAMPLE; i++) {
  38              		.loc 1 110 3 is_stmt 1 view .LVU11
  39              	.LVL3:
  40              		.loc 1 110 15 view .LVU12
 106:fltk-1.3.4-1/jpeg/jccolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
  41              		.loc 1 106 25 is_stmt 0 view .LVU13
  42 002b 4531C9   		xorl	%r9d, %r9d
  43 002e 4531C0   		xorl	%r8d, %r8d
  44 0031 BF008000 		movl	$32768, %edi
  44      00
  45 0036 31F6     		xorl	%esi, %esi
  46 0038 31C9     		xorl	%ecx, %ecx
  47              	.LVL4:
  48 003a 660F1F44 		.p2align 4,,10
  48      0000
  49              		.p2align 3
  50              	.L2:
 111:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_Y_OFF] = FIX(0.299) * i;
  51              		.loc 1 111 5 is_stmt 1 discriminator 3 view .LVU14
 112:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+G_Y_OFF] = FIX(0.587) * i;
 113:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+B_Y_OFF] = FIX(0.114) * i   + ONE_HALF;
 114:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_CB_OFF] = (-FIX(0.168735892)) * i;
 115:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+G_CB_OFF] = (-FIX(0.331264108)) * i;
 116:fltk-1.3.4-1/jpeg/jccolor.c ****     /* We use a rounding fudge-factor of 0.5-epsilon for Cb and Cr.
 117:fltk-1.3.4-1/jpeg/jccolor.c ****      * This ensures that the maximum output will round to MAXJSAMPLE
 118:fltk-1.3.4-1/jpeg/jccolor.c ****      * not MAXJSAMPLE+1, and thus that we don't have to range-limit.
 119:fltk-1.3.4-1/jpeg/jccolor.c ****      */
 120:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+B_CB_OFF] = FIX(0.5) * i    + CBCR_OFFSET + ONE_HALF-1;
  52              		.loc 1 120 29 is_stmt 0 discriminator 3 view .LVU15
  53 0040 48899000 		movq	%rdx, 10240(%rax)
  53      280000
  54 0047 4881C200 		addq	$32768, %rdx
  54      800000
  55 004e 4883C008 		addq	$8, %rax
 111:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_Y_OFF] = FIX(0.299) * i;
  56              		.loc 1 111 28 discriminator 3 view .LVU16
  57 0052 488948F8 		movq	%rcx, -8(%rax)
 112:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+G_Y_OFF] = FIX(0.587) * i;
  58              		.loc 1 112 5 is_stmt 1 discriminator 3 view .LVU17
  59 0056 4881C18B 		addq	$19595, %rcx
  59      4C0000
 112:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+G_Y_OFF] = FIX(0.587) * i;
  60              		.loc 1 112 28 is_stmt 0 discriminator 3 view .LVU18
  61 005d 4889B0F8 		movq	%rsi, 2040(%rax)
  61      070000
 113:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_CB_OFF] = (-FIX(0.168735892)) * i;
  62              		.loc 1 113 5 is_stmt 1 discriminator 3 view .LVU19
  63 0064 4881C646 		addq	$38470, %rsi
  63      960000
 113:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_CB_OFF] = (-FIX(0.168735892)) * i;
  64              		.loc 1 113 28 is_stmt 0 discriminator 3 view .LVU20
  65 006b 4889B8F8 		movq	%rdi, 4088(%rax)
  65      0F0000
 114:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+G_CB_OFF] = (-FIX(0.331264108)) * i;
  66              		.loc 1 114 5 is_stmt 1 discriminator 3 view .LVU21
  67 0072 4881C72F 		addq	$7471, %rdi
  67      1D0000
 114:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+G_CB_OFF] = (-FIX(0.331264108)) * i;
  68              		.loc 1 114 29 is_stmt 0 discriminator 3 view .LVU22
  69 0079 4C8980F8 		movq	%r8, 6136(%rax)
  69      170000
 115:fltk-1.3.4-1/jpeg/jccolor.c ****     /* We use a rounding fudge-factor of 0.5-epsilon for Cb and Cr.
  70              		.loc 1 115 5 is_stmt 1 discriminator 3 view .LVU23
  71 0080 4981E832 		subq	$11058, %r8
  71      2B0000
 115:fltk-1.3.4-1/jpeg/jccolor.c ****     /* We use a rounding fudge-factor of 0.5-epsilon for Cb and Cr.
  72              		.loc 1 115 29 is_stmt 0 discriminator 3 view .LVU24
  73 0087 4C8988F8 		movq	%r9, 8184(%rax)
  73      1F0000
  74              		.loc 1 120 5 is_stmt 1 discriminator 3 view .LVU25
 121:fltk-1.3.4-1/jpeg/jccolor.c **** /*  B=>Cb and R=>Cr tables are the same
 122:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_CR_OFF] = FIX(0.5) * i    + CBCR_OFFSET + ONE_HALF-1;
 123:fltk-1.3.4-1/jpeg/jccolor.c **** */
 124:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+G_CR_OFF] = (-FIX(0.418687589)) * i;
  75              		.loc 1 124 5 discriminator 3 view .LVU26
  76 008e 4981E9CE 		subq	$21710, %r9
  76      540000
  77              		.loc 1 124 29 is_stmt 0 discriminator 3 view .LVU27
  78 0095 4C8990F8 		movq	%r10, 12280(%rax)
  78      2F0000
 125:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+B_CR_OFF] = (-FIX(0.081312411)) * i;
  79              		.loc 1 125 5 is_stmt 1 discriminator 3 view .LVU28
  80 009c 4981EA2F 		subq	$27439, %r10
  80      6B0000
  81              		.loc 1 125 29 is_stmt 0 discriminator 3 view .LVU29
  82 00a3 4C8998F8 		movq	%r11, 14328(%rax)
  82      370000
 110:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_Y_OFF] = FIX(0.299) * i;
  83              		.loc 1 110 32 is_stmt 1 discriminator 3 view .LVU30
 110:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_Y_OFF] = FIX(0.299) * i;
  84              		.loc 1 110 15 discriminator 3 view .LVU31
  85 00aa 4981EBD1 		subq	$5329, %r11
  85      140000
 110:fltk-1.3.4-1/jpeg/jccolor.c ****     rgb_ycc_tab[i+R_Y_OFF] = FIX(0.299) * i;
  86              		.loc 1 110 3 is_stmt 0 discriminator 3 view .LVU32
  87 00b1 4881FAFF 		cmpq	$16809983, %rdx
  87      7F0001
  88 00b8 7586     		jne	.L2
 126:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 127:fltk-1.3.4-1/jpeg/jccolor.c **** }
  89              		.loc 1 127 1 view .LVU33
  90 00ba 5B       		popq	%rbx
  91              		.cfi_def_cfa_offset 8
  92              	.LVL5:
  93              		.loc 1 127 1 view .LVU34
  94 00bb C3       		ret
  95              		.cfi_endproc
  96              	.LFE51:
  98              		.section	.text.rgb_ycc_convert,"ax",@progbits
  99              		.p2align 4
 101              	rgb_ycc_convert:
 102              	.LVL6:
 103              	.LFB52:
 128:fltk-1.3.4-1/jpeg/jccolor.c **** 
 129:fltk-1.3.4-1/jpeg/jccolor.c **** 
 130:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 131:fltk-1.3.4-1/jpeg/jccolor.c ****  * Convert some rows of samples to the JPEG colorspace.
 132:fltk-1.3.4-1/jpeg/jccolor.c ****  *
 133:fltk-1.3.4-1/jpeg/jccolor.c ****  * Note that we change from the application's interleaved-pixel format
 134:fltk-1.3.4-1/jpeg/jccolor.c ****  * to our internal noninterleaved, one-plane-per-component format.
 135:fltk-1.3.4-1/jpeg/jccolor.c ****  * The input buffer is therefore three times as wide as the output buffer.
 136:fltk-1.3.4-1/jpeg/jccolor.c ****  *
 137:fltk-1.3.4-1/jpeg/jccolor.c ****  * A starting row offset is provided only for the output buffer.  The caller
 138:fltk-1.3.4-1/jpeg/jccolor.c ****  * can easily adjust the passed input_buf value to accommodate any row
 139:fltk-1.3.4-1/jpeg/jccolor.c ****  * offset required on that side.
 140:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 141:fltk-1.3.4-1/jpeg/jccolor.c **** 
 142:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 143:fltk-1.3.4-1/jpeg/jccolor.c **** rgb_ycc_convert (j_compress_ptr cinfo,
 144:fltk-1.3.4-1/jpeg/jccolor.c **** 		 JSAMPARRAY input_buf, JSAMPIMAGE output_buf,
 145:fltk-1.3.4-1/jpeg/jccolor.c **** 		 JDIMENSION output_row, int num_rows)
 146:fltk-1.3.4-1/jpeg/jccolor.c **** {
 104              		.loc 1 146 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		.loc 1 146 1 is_stmt 0 view .LVU36
 107 0000 F30F1EFA 		endbr64
 147:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 108              		.loc 1 147 3 is_stmt 1 view .LVU37
 109              	.LVL7:
 148:fltk-1.3.4-1/jpeg/jccolor.c ****   register INT32 * ctab = cconvert->rgb_ycc_tab;
 110              		.loc 1 148 3 view .LVU38
 146:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 111              		.loc 1 146 1 is_stmt 0 view .LVU39
 112 0004 4157     		pushq	%r15
 113              		.cfi_def_cfa_offset 16
 114              		.cfi_offset 15, -16
 115              	.LVL8:
 146:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 116              		.loc 1 146 1 view .LVU40
 117 0006 4156     		pushq	%r14
 118              		.cfi_def_cfa_offset 24
 119              		.cfi_offset 14, -24
 120 0008 4155     		pushq	%r13
 121              		.cfi_def_cfa_offset 32
 122              		.cfi_offset 13, -32
 123 000a 4154     		pushq	%r12
 124              		.cfi_def_cfa_offset 40
 125              		.cfi_offset 12, -40
 126 000c 55       		pushq	%rbp
 127              		.cfi_def_cfa_offset 48
 128              		.cfi_offset 6, -48
 129 000d 53       		pushq	%rbx
 130              		.cfi_def_cfa_offset 56
 131              		.cfi_offset 3, -56
 132              		.loc 1 148 20 view .LVU41
 133 000e 488B8718 		movq	536(%rdi), %rax
 133      020000
 149:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 150:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 151:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr0, outptr1, outptr2;
 152:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 153:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 134              		.loc 1 153 14 view .LVU42
 135 0015 448B7F30 		movl	48(%rdi), %r15d
 148:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 136              		.loc 1 148 20 view .LVU43
 137 0019 488B4010 		movq	16(%rax), %rax
 138              	.LVL9:
 149:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 139              		.loc 1 149 3 is_stmt 1 view .LVU44
 150:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr0, outptr1, outptr2;
 140              		.loc 1 150 3 view .LVU45
 151:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 141              		.loc 1 151 3 view .LVU46
 152:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 142              		.loc 1 152 3 view .LVU47
 143              		.loc 1 153 3 view .LVU48
 154:fltk-1.3.4-1/jpeg/jccolor.c **** 
 155:fltk-1.3.4-1/jpeg/jccolor.c ****   while (--num_rows >= 0) {
 144              		.loc 1 155 3 view .LVU49
 145              		.loc 1 155 9 view .LVU50
 146              		.loc 1 155 9 is_stmt 0 view .LVU51
 147 001d 4585C0   		testl	%r8d, %r8d
 148 0020 0F8EE300 		jle	.L6
 148      0000
 149 0026 418D1C08 		leal	(%r8,%rcx), %ebx
 150 002a 4989F4   		movq	%rsi, %r12
 151 002d 4989D5   		movq	%rdx, %r13
 152 0030 4189CE   		movl	%ecx, %r14d
 153 0033 895C24FC 		movl	%ebx, -4(%rsp)
 154 0037 418D6FFF 		leal	-1(%r15), %ebp
 155              	.LVL10:
 156 003b 0F1F4400 		.p2align 4,,10
 156      00
 157              		.p2align 3
 158              	.L10:
 156:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 159              		.loc 1 156 5 is_stmt 1 view .LVU52
 157:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 160              		.loc 1 157 13 is_stmt 0 view .LVU53
 161 0040 498B4D00 		movq	0(%r13), %rcx
 162              		.loc 1 157 28 view .LVU54
 163 0044 4489F2   		movl	%r14d, %edx
 156:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 164              		.loc 1 156 23 view .LVU55
 165 0047 4983C408 		addq	$8, %r12
 166              	.LVL11:
 158:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 159:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr2 = output_buf[2][output_row];
 160:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 167              		.loc 1 160 15 view .LVU56
 168 004b 4183C601 		addl	$1, %r14d
 169              	.LVL12:
 156:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 170              		.loc 1 156 11 view .LVU57
 171 004f 498B7424 		movq	-8(%r12), %rsi
 171      F8
 172              	.LVL13:
 157:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 173              		.loc 1 157 5 is_stmt 1 view .LVU58
 157:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 174              		.loc 1 157 13 is_stmt 0 view .LVU59
 175 0054 4C8B14D1 		movq	(%rcx,%rdx,8), %r10
 176              	.LVL14:
 158:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 177              		.loc 1 158 5 is_stmt 1 view .LVU60
 158:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 178              		.loc 1 158 13 is_stmt 0 view .LVU61
 179 0058 498B4D08 		movq	8(%r13), %rcx
 180 005c 4C8B1CD1 		movq	(%rcx,%rdx,8), %r11
 181              	.LVL15:
 159:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 182              		.loc 1 159 5 is_stmt 1 view .LVU62
 159:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 183              		.loc 1 159 13 is_stmt 0 view .LVU63
 184 0060 498B4D10 		movq	16(%r13), %rcx
 185 0064 488B1CD1 		movq	(%rcx,%rdx,8), %rbx
 186              	.LVL16:
 187              		.loc 1 160 5 is_stmt 1 view .LVU64
 161:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 188              		.loc 1 161 5 view .LVU65
 189              		.loc 1 161 19 view .LVU66
 190              		.loc 1 161 5 is_stmt 0 view .LVU67
 191 0068 4585FF   		testl	%r15d, %r15d
 192 006b 0F848D00 		je	.L8
 192      0000
 193 0071 31C9     		xorl	%ecx, %ecx
 194              	.LVL17:
 195              		.p2align 4,,10
 196 0073 0F1F4400 		.p2align 3
 196      00
 197              	.L9:
 162:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 198              		.loc 1 162 7 is_stmt 1 discriminator 3 view .LVU68
 163:fltk-1.3.4-1/jpeg/jccolor.c ****       g = GETJSAMPLE(inptr[RGB_GREEN]);
 199              		.loc 1 163 7 discriminator 3 view .LVU69
 164:fltk-1.3.4-1/jpeg/jccolor.c ****       b = GETJSAMPLE(inptr[RGB_BLUE]);
 200              		.loc 1 164 7 discriminator 3 view .LVU70
 165:fltk-1.3.4-1/jpeg/jccolor.c ****       /* If the inputs are 0..MAXJSAMPLE, the outputs of these equations
 166:fltk-1.3.4-1/jpeg/jccolor.c ****        * must be too; we do not need an explicit range-limiting operation.
 167:fltk-1.3.4-1/jpeg/jccolor.c ****        * Hence the value being shifted is never negative, and we don't
 168:fltk-1.3.4-1/jpeg/jccolor.c ****        * need the general RIGHT_SHIFT macro.
 169:fltk-1.3.4-1/jpeg/jccolor.c ****        */
 170:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Y */
 171:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr0[col] = (JSAMPLE)
 201              		.loc 1 171 7 discriminator 3 view .LVU71
 172:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 202              		.loc 1 172 27 is_stmt 0 discriminator 3 view .LVU72
 203 0078 0FB65601 		movzbl	1(%rsi), %edx
 204              		.loc 1 172 9 discriminator 3 view .LVU73
 205 007c 440FB606 		movzbl	(%rsi), %r8d
 173:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 174:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Cb */
 175:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = (JSAMPLE)
 176:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CB_OFF] + ctab[g+G_CB_OFF] + ctab[b+B_CB_OFF])
 177:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 178:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Cr */
 179:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr2[col] = (JSAMPLE)
 180:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CR_OFF] + ctab[g+G_CR_OFF] + ctab[b+B_CR_OFF])
 181:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 182:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 206              		.loc 1 182 13 discriminator 3 view .LVU74
 207 0080 4883C603 		addq	$3, %rsi
 208              	.LVL18:
 172:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 209              		.loc 1 172 45 discriminator 3 view .LVU75
 210 0084 0FB67EFF 		movzbl	-1(%rsi), %edi
 172:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 211              		.loc 1 172 27 discriminator 3 view .LVU76
 212 0088 4881C200 		addq	$256, %rdx
 212      010000
 213 008f 4C8D0CD5 		leaq	0(,%rdx,8), %r9
 213      00000000 
 172:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 214              		.loc 1 172 21 discriminator 3 view .LVU77
 215 0097 488B14D0 		movq	(%rax,%rdx,8), %rdx
 216 009b 4A0314C0 		addq	(%rax,%r8,8), %rdx
 172:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 217              		.loc 1 172 39 discriminator 3 view .LVU78
 218 009f 480394F8 		addq	4096(%rax,%rdi,8), %rdx
 218      00100000 
 173:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 219              		.loc 1 173 4 discriminator 3 view .LVU79
 220 00a7 48C1FA10 		sarq	$16, %rdx
 171:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 221              		.loc 1 171 22 discriminator 3 view .LVU80
 222 00ab 4188140A 		movb	%dl, (%r10,%rcx)
 223              	.LVL19:
 175:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CB_OFF] + ctab[g+G_CB_OFF] + ctab[b+B_CB_OFF])
 224              		.loc 1 175 7 is_stmt 1 discriminator 3 view .LVU81
 176:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 225              		.loc 1 176 22 is_stmt 0 discriminator 3 view .LVU82
 226 00af 4A8B9408 		movq	6144(%rax,%r9), %rdx
 226      00180000 
 227 00b7 4A0394C0 		addq	6144(%rax,%r8,8), %rdx
 227      00180000 
 176:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 228              		.loc 1 176 41 discriminator 3 view .LVU83
 229 00bf 480394F8 		addq	10240(%rax,%rdi,8), %rdx
 229      00280000 
 177:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Cr */
 230              		.loc 1 177 4 discriminator 3 view .LVU84
 231 00c7 48C1FA10 		sarq	$16, %rdx
 175:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CB_OFF] + ctab[g+G_CB_OFF] + ctab[b+B_CB_OFF])
 232              		.loc 1 175 22 discriminator 3 view .LVU85
 233 00cb 4188140B 		movb	%dl, (%r11,%rcx)
 179:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CR_OFF] + ctab[g+G_CR_OFF] + ctab[b+B_CR_OFF])
 234              		.loc 1 179 7 is_stmt 1 discriminator 3 view .LVU86
 180:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 235              		.loc 1 180 22 is_stmt 0 discriminator 3 view .LVU87
 236 00cf 4A8B9408 		movq	10240(%rax,%r9), %rdx
 236      00280000 
 237 00d7 4A0394C0 		addq	10240(%rax,%r8,8), %rdx
 237      00280000 
 180:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 238              		.loc 1 180 41 discriminator 3 view .LVU88
 239 00df 480394F8 		addq	14336(%rax,%rdi,8), %rdx
 239      00380000 
 181:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 240              		.loc 1 181 4 discriminator 3 view .LVU89
 241 00e7 48C1FA10 		sarq	$16, %rdx
 179:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CR_OFF] + ctab[g+G_CR_OFF] + ctab[b+B_CR_OFF])
 242              		.loc 1 179 22 discriminator 3 view .LVU90
 243 00eb 88140B   		movb	%dl, (%rbx,%rcx)
 244              		.loc 1 182 7 is_stmt 1 discriminator 3 view .LVU91
 245              	.LVL20:
 161:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 246              		.loc 1 161 35 discriminator 3 view .LVU92
 161:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 247              		.loc 1 161 19 discriminator 3 view .LVU93
 248 00ee 4889CA   		movq	%rcx, %rdx
 249 00f1 4883C101 		addq	$1, %rcx
 250              	.LVL21:
 161:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 251              		.loc 1 161 5 is_stmt 0 discriminator 3 view .LVU94
 252 00f5 4839EA   		cmpq	%rbp, %rdx
 253 00f8 0F857AFF 		jne	.L9
 253      FFFF
 254              	.LVL22:
 255              	.L8:
 155:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 256              		.loc 1 155 9 is_stmt 1 view .LVU95
 155:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 257              		.loc 1 155 9 is_stmt 0 view .LVU96
 258 00fe 443B7424 		cmpl	-4(%rsp), %r14d
 258      FC
 259 0103 0F8537FF 		jne	.L10
 259      FFFF
 260              	.LVL23:
 261              	.L6:
 183:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 184:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 185:fltk-1.3.4-1/jpeg/jccolor.c **** }
 262              		.loc 1 185 1 view .LVU97
 263 0109 5B       		popq	%rbx
 264              		.cfi_def_cfa_offset 48
 265 010a 5D       		popq	%rbp
 266              		.cfi_def_cfa_offset 40
 267 010b 415C     		popq	%r12
 268              		.cfi_def_cfa_offset 32
 269 010d 415D     		popq	%r13
 270              		.cfi_def_cfa_offset 24
 271 010f 415E     		popq	%r14
 272              		.cfi_def_cfa_offset 16
 273 0111 415F     		popq	%r15
 274              		.cfi_def_cfa_offset 8
 275              	.LVL24:
 276              		.loc 1 185 1 view .LVU98
 277 0113 C3       		ret
 278              		.cfi_endproc
 279              	.LFE52:
 281              		.section	.text.rgb_gray_convert,"ax",@progbits
 282              		.p2align 4
 284              	rgb_gray_convert:
 285              	.LVL25:
 286              	.LFB53:
 186:fltk-1.3.4-1/jpeg/jccolor.c **** 
 187:fltk-1.3.4-1/jpeg/jccolor.c **** 
 188:fltk-1.3.4-1/jpeg/jccolor.c **** /**************** Cases other than RGB -> YCbCr **************/
 189:fltk-1.3.4-1/jpeg/jccolor.c **** 
 190:fltk-1.3.4-1/jpeg/jccolor.c **** 
 191:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 192:fltk-1.3.4-1/jpeg/jccolor.c ****  * Convert some rows of samples to the JPEG colorspace.
 193:fltk-1.3.4-1/jpeg/jccolor.c ****  * This version handles RGB->grayscale conversion, which is the same
 194:fltk-1.3.4-1/jpeg/jccolor.c ****  * as the RGB->Y portion of RGB->YCbCr.
 195:fltk-1.3.4-1/jpeg/jccolor.c ****  * We assume rgb_ycc_start has been called (we only use the Y tables).
 196:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 197:fltk-1.3.4-1/jpeg/jccolor.c **** 
 198:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 199:fltk-1.3.4-1/jpeg/jccolor.c **** rgb_gray_convert (j_compress_ptr cinfo,
 200:fltk-1.3.4-1/jpeg/jccolor.c **** 		  JSAMPARRAY input_buf, JSAMPIMAGE output_buf,
 201:fltk-1.3.4-1/jpeg/jccolor.c **** 		  JDIMENSION output_row, int num_rows)
 202:fltk-1.3.4-1/jpeg/jccolor.c **** {
 287              		.loc 1 202 1 is_stmt 1 view -0
 288              		.cfi_startproc
 289              		.loc 1 202 1 is_stmt 0 view .LVU100
 290 0000 F30F1EFA 		endbr64
 203:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 291              		.loc 1 203 3 is_stmt 1 view .LVU101
 292              	.LVL26:
 204:fltk-1.3.4-1/jpeg/jccolor.c ****   register INT32 * ctab = cconvert->rgb_ycc_tab;
 293              		.loc 1 204 3 view .LVU102
 202:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 294              		.loc 1 202 1 is_stmt 0 view .LVU103
 295 0004 4154     		pushq	%r12
 296              		.cfi_def_cfa_offset 16
 297              		.cfi_offset 12, -16
 298              	.LVL27:
 202:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 299              		.loc 1 202 1 view .LVU104
 300 0006 55       		pushq	%rbp
 301              		.cfi_def_cfa_offset 24
 302              		.cfi_offset 6, -24
 303 0007 53       		pushq	%rbx
 304              		.cfi_def_cfa_offset 32
 305              		.cfi_offset 3, -32
 306              		.loc 1 204 20 view .LVU105
 307 0008 488B8718 		movq	536(%rdi), %rax
 307      020000
 205:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 206:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 207:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr;
 208:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 209:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 308              		.loc 1 209 14 view .LVU106
 309 000f 8B6F30   		movl	48(%rdi), %ebp
 204:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 310              		.loc 1 204 20 view .LVU107
 311 0012 4C8B4810 		movq	16(%rax), %r9
 312              	.LVL28:
 205:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 313              		.loc 1 205 3 is_stmt 1 view .LVU108
 206:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr;
 314              		.loc 1 206 3 view .LVU109
 207:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 315              		.loc 1 207 3 view .LVU110
 208:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 316              		.loc 1 208 3 view .LVU111
 317              		.loc 1 209 3 view .LVU112
 210:fltk-1.3.4-1/jpeg/jccolor.c **** 
 211:fltk-1.3.4-1/jpeg/jccolor.c ****   while (--num_rows >= 0) {
 318              		.loc 1 211 3 view .LVU113
 319              		.loc 1 211 9 view .LVU114
 320              		.loc 1 211 9 is_stmt 0 view .LVU115
 321 0016 4585C0   		testl	%r8d, %r8d
 322 0019 7E6F     		jle	.L17
 323 001b 8D45FF   		leal	-1(%rbp), %eax
 324 001e 4889D3   		movq	%rdx, %rbx
 325 0021 418D1408 		leal	(%r8,%rcx), %edx
 326              	.LVL29:
 327              		.loc 1 211 9 view .LVU116
 328 0025 4C8D6440 		leaq	3(%rax,%rax,2), %r12
 328      03
 329              	.LVL30:
 330 002a 660F1F44 		.p2align 4,,10
 330      0000
 331              		.p2align 3
 332              	.L21:
 212:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 333              		.loc 1 212 5 is_stmt 1 view .LVU117
 213:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr = output_buf[0][output_row++];
 334              		.loc 1 213 12 is_stmt 0 view .LVU118
 335 0030 4C8B03   		movq	(%rbx), %r8
 336 0033 89C8     		movl	%ecx, %eax
 212:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 337              		.loc 1 212 23 view .LVU119
 338 0035 4883C608 		addq	$8, %rsi
 339              	.LVL31:
 340              		.loc 1 213 38 view .LVU120
 341 0039 83C101   		addl	$1, %ecx
 342              	.LVL32:
 212:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 343              		.loc 1 212 11 view .LVU121
 344 003c 488B7EF8 		movq	-8(%rsi), %rdi
 345              	.LVL33:
 346              		.loc 1 213 5 is_stmt 1 view .LVU122
 347              		.loc 1 213 12 is_stmt 0 view .LVU123
 348 0040 4D8B04C0 		movq	(%r8,%rax,8), %r8
 349              	.LVL34:
 214:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 350              		.loc 1 214 5 is_stmt 1 view .LVU124
 351              		.loc 1 214 19 view .LVU125
 352              		.loc 1 214 5 is_stmt 0 view .LVU126
 353 0044 85ED     		testl	%ebp, %ebp
 354 0046 743E     		je	.L19
 355 0048 4E8D1C27 		leaq	(%rdi,%r12), %r11
 356              	.LVL35:
 357 004c 0F1F4000 		.p2align 4,,10
 358              		.p2align 3
 359              	.L20:
 215:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 360              		.loc 1 215 7 is_stmt 1 discriminator 3 view .LVU127
 216:fltk-1.3.4-1/jpeg/jccolor.c ****       g = GETJSAMPLE(inptr[RGB_GREEN]);
 361              		.loc 1 216 7 discriminator 3 view .LVU128
 217:fltk-1.3.4-1/jpeg/jccolor.c ****       b = GETJSAMPLE(inptr[RGB_BLUE]);
 362              		.loc 1 217 7 discriminator 3 view .LVU129
 218:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Y */
 219:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr[col] = (JSAMPLE)
 363              		.loc 1 219 7 discriminator 3 view .LVU130
 220:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 364              		.loc 1 220 27 is_stmt 0 discriminator 3 view .LVU131
 365 0050 440FB657 		movzbl	1(%rdi), %r10d
 365      01
 366              		.loc 1 220 9 discriminator 3 view .LVU132
 367 0055 0FB607   		movzbl	(%rdi), %eax
 221:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 222:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 368              		.loc 1 222 13 discriminator 3 view .LVU133
 369 0058 4883C703 		addq	$3, %rdi
 370              	.LVL36:
 371              		.loc 1 222 13 discriminator 3 view .LVU134
 372 005c 4983C001 		addq	$1, %r8
 220:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 373              		.loc 1 220 21 discriminator 3 view .LVU135
 374 0060 498B04C1 		movq	(%r9,%rax,8), %rax
 375 0064 4B0384D1 		addq	2048(%r9,%r10,8), %rax
 375      00080000 
 220:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 376              		.loc 1 220 45 discriminator 3 view .LVU136
 377 006c 440FB657 		movzbl	-1(%rdi), %r10d
 377      FF
 220:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 378              		.loc 1 220 39 discriminator 3 view .LVU137
 379 0071 4B0384D1 		addq	4096(%r9,%r10,8), %rax
 379      00100000 
 221:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 380              		.loc 1 221 4 discriminator 3 view .LVU138
 381 0079 48C1F810 		sarq	$16, %rax
 219:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 382              		.loc 1 219 21 discriminator 3 view .LVU139
 383 007d 418840FF 		movb	%al, -1(%r8)
 384              	.LVL37:
 385              		.loc 1 222 7 is_stmt 1 discriminator 3 view .LVU140
 214:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 386              		.loc 1 214 35 discriminator 3 view .LVU141
 214:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 387              		.loc 1 214 19 discriminator 3 view .LVU142
 214:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 388              		.loc 1 214 5 is_stmt 0 discriminator 3 view .LVU143
 389 0081 4C39DF   		cmpq	%r11, %rdi
 390 0084 75CA     		jne	.L20
 391              	.L19:
 211:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 392              		.loc 1 211 9 is_stmt 1 view .LVU144
 211:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 393              		.loc 1 211 9 is_stmt 0 view .LVU145
 394 0086 39D1     		cmpl	%edx, %ecx
 395 0088 75A6     		jne	.L21
 396              	.LVL38:
 397              	.L17:
 223:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 224:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 225:fltk-1.3.4-1/jpeg/jccolor.c **** }
 398              		.loc 1 225 1 view .LVU146
 399 008a 5B       		popq	%rbx
 400              		.cfi_def_cfa_offset 24
 401 008b 5D       		popq	%rbp
 402              		.cfi_def_cfa_offset 16
 403              	.LVL39:
 404              		.loc 1 225 1 view .LVU147
 405 008c 415C     		popq	%r12
 406              		.cfi_def_cfa_offset 8
 407 008e C3       		ret
 408              		.cfi_endproc
 409              	.LFE53:
 411              		.section	.text.cmyk_ycck_convert,"ax",@progbits
 412              		.p2align 4
 414              	cmyk_ycck_convert:
 415              	.LVL40:
 416              	.LFB54:
 226:fltk-1.3.4-1/jpeg/jccolor.c **** 
 227:fltk-1.3.4-1/jpeg/jccolor.c **** 
 228:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 229:fltk-1.3.4-1/jpeg/jccolor.c ****  * Convert some rows of samples to the JPEG colorspace.
 230:fltk-1.3.4-1/jpeg/jccolor.c ****  * This version handles Adobe-style CMYK->YCCK conversion,
 231:fltk-1.3.4-1/jpeg/jccolor.c ****  * where we convert R=1-C, G=1-M, and B=1-Y to YCbCr using the same
 232:fltk-1.3.4-1/jpeg/jccolor.c ****  * conversion as above, while passing K (black) unchanged.
 233:fltk-1.3.4-1/jpeg/jccolor.c ****  * We assume rgb_ycc_start has been called.
 234:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 235:fltk-1.3.4-1/jpeg/jccolor.c **** 
 236:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 237:fltk-1.3.4-1/jpeg/jccolor.c **** cmyk_ycck_convert (j_compress_ptr cinfo,
 238:fltk-1.3.4-1/jpeg/jccolor.c **** 		   JSAMPARRAY input_buf, JSAMPIMAGE output_buf,
 239:fltk-1.3.4-1/jpeg/jccolor.c **** 		   JDIMENSION output_row, int num_rows)
 240:fltk-1.3.4-1/jpeg/jccolor.c **** {
 417              		.loc 1 240 1 is_stmt 1 view -0
 418              		.cfi_startproc
 419              		.loc 1 240 1 is_stmt 0 view .LVU149
 420 0000 F30F1EFA 		endbr64
 421 0004 4157     		pushq	%r15
 422              		.cfi_def_cfa_offset 16
 423              		.cfi_offset 15, -16
 424 0006 4156     		pushq	%r14
 425              		.cfi_def_cfa_offset 24
 426              		.cfi_offset 14, -24
 427 0008 4155     		pushq	%r13
 428              		.cfi_def_cfa_offset 32
 429              		.cfi_offset 13, -32
 430 000a 4154     		pushq	%r12
 431              		.cfi_def_cfa_offset 40
 432              		.cfi_offset 12, -40
 433 000c 55       		pushq	%rbp
 434              		.cfi_def_cfa_offset 48
 435              		.cfi_offset 6, -48
 436 000d 53       		pushq	%rbx
 437              		.cfi_def_cfa_offset 56
 438              		.cfi_offset 3, -56
 241:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 242:fltk-1.3.4-1/jpeg/jccolor.c ****   register INT32 * ctab = cconvert->rgb_ycc_tab;
 439              		.loc 1 242 20 view .LVU150
 440 000e 488B8718 		movq	536(%rdi), %rax
 440      020000
 240:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 441              		.loc 1 240 1 view .LVU151
 442 0015 48897424 		movq	%rsi, -16(%rsp)
 442      F0
 241:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert = (my_cconvert_ptr) cinfo->cconvert;
 443              		.loc 1 241 3 is_stmt 1 view .LVU152
 444              	.LVL41:
 445              		.loc 1 242 3 view .LVU153
 446              		.loc 1 242 20 is_stmt 0 view .LVU154
 447 001a 488B7010 		movq	16(%rax), %rsi
 448              	.LVL42:
 243:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 449              		.loc 1 243 3 is_stmt 1 view .LVU155
 244:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 450              		.loc 1 244 3 view .LVU156
 245:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr0, outptr1, outptr2, outptr3;
 451              		.loc 1 245 3 view .LVU157
 246:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 452              		.loc 1 246 3 view .LVU158
 247:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 453              		.loc 1 247 3 view .LVU159
 454              		.loc 1 247 14 is_stmt 0 view .LVU160
 455 001e 8B4730   		movl	48(%rdi), %eax
 456              	.LVL43:
 457              		.loc 1 247 14 view .LVU161
 458 0021 894424F8 		movl	%eax, -8(%rsp)
 459              	.LVL44:
 248:fltk-1.3.4-1/jpeg/jccolor.c **** 
 249:fltk-1.3.4-1/jpeg/jccolor.c ****   while (--num_rows >= 0) {
 460              		.loc 1 249 3 is_stmt 1 view .LVU162
 461              		.loc 1 249 9 view .LVU163
 462              		.loc 1 249 9 is_stmt 0 view .LVU164
 463 0025 4585C0   		testl	%r8d, %r8d
 464 0028 0F8E1F01 		jle	.L28
 464      0000
 465 002e 418D1C08 		leal	(%r8,%rcx), %ebx
 466 0032 4989D5   		movq	%rdx, %r13
 467 0035 4189CE   		movl	%ecx, %r14d
 250:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 251:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 252:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 253:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr2 = output_buf[2][output_row];
 254:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr3 = output_buf[3][output_row];
 255:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 256:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 257:fltk-1.3.4-1/jpeg/jccolor.c ****       r = MAXJSAMPLE - GETJSAMPLE(inptr[0]);
 468              		.loc 1 257 9 view .LVU165
 469 0038 41BBFF00 		movl	$255, %r11d
 469      0000
 470 003e 895C24FC 		movl	%ebx, -4(%rsp)
 471 0042 448D78FF 		leal	-1(%rax), %r15d
 472              	.LVL45:
 473 0046 662E0F1F 		.p2align 4,,10
 473      84000000 
 473      0000
 474              		.p2align 3
 475              	.L32:
 250:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 476              		.loc 1 250 5 is_stmt 1 view .LVU166
 250:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 477              		.loc 1 250 23 is_stmt 0 view .LVU167
 478 0050 48834424 		addq	$8, -16(%rsp)
 478      F008
 479              	.LVL46:
 250:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 480              		.loc 1 250 23 view .LVU168
 481 0056 488B4424 		movq	-16(%rsp), %rax
 481      F0
 482              	.LVL47:
 251:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 483              		.loc 1 251 13 view .LVU169
 484 005b 498B5500 		movq	0(%r13), %rdx
 250:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 485              		.loc 1 250 11 view .LVU170
 486 005f 4C8B40F8 		movq	-8(%rax), %r8
 487              	.LVL48:
 251:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 488              		.loc 1 251 5 is_stmt 1 view .LVU171
 251:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 489              		.loc 1 251 28 is_stmt 0 view .LVU172
 490 0063 4489F0   		movl	%r14d, %eax
 491              	.LVL49:
 255:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 492              		.loc 1 255 15 view .LVU173
 493 0066 4183C601 		addl	$1, %r14d
 494              	.LVL50:
 251:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 495              		.loc 1 251 13 view .LVU174
 496 006a 4C8B14C2 		movq	(%rdx,%rax,8), %r10
 497              	.LVL51:
 252:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr2 = output_buf[2][output_row];
 498              		.loc 1 252 5 is_stmt 1 view .LVU175
 252:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr2 = output_buf[2][output_row];
 499              		.loc 1 252 13 is_stmt 0 view .LVU176
 500 006e 498B5508 		movq	8(%r13), %rdx
 501 0072 488B1CC2 		movq	(%rdx,%rax,8), %rbx
 502              	.LVL52:
 253:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr3 = output_buf[3][output_row];
 503              		.loc 1 253 5 is_stmt 1 view .LVU177
 253:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr3 = output_buf[3][output_row];
 504              		.loc 1 253 13 is_stmt 0 view .LVU178
 505 0076 498B5510 		movq	16(%r13), %rdx
 506 007a 488B2CC2 		movq	(%rdx,%rax,8), %rbp
 507              	.LVL53:
 254:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 508              		.loc 1 254 5 is_stmt 1 view .LVU179
 254:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 509              		.loc 1 254 13 is_stmt 0 view .LVU180
 510 007e 498B5518 		movq	24(%r13), %rdx
 511 0082 4C8B24C2 		movq	(%rdx,%rax,8), %r12
 512              	.LVL54:
 255:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 513              		.loc 1 255 5 is_stmt 1 view .LVU181
 256:fltk-1.3.4-1/jpeg/jccolor.c ****       r = MAXJSAMPLE - GETJSAMPLE(inptr[0]);
 514              		.loc 1 256 5 view .LVU182
 256:fltk-1.3.4-1/jpeg/jccolor.c ****       r = MAXJSAMPLE - GETJSAMPLE(inptr[0]);
 515              		.loc 1 256 19 view .LVU183
 256:fltk-1.3.4-1/jpeg/jccolor.c ****       r = MAXJSAMPLE - GETJSAMPLE(inptr[0]);
 516              		.loc 1 256 5 is_stmt 0 view .LVU184
 517 0086 8B4424F8 		movl	-8(%rsp), %eax
 518 008a 85C0     		testl	%eax, %eax
 519 008c 0F84B000 		je	.L30
 519      0000
 520 0092 31C0     		xorl	%eax, %eax
 521              	.LVL55:
 522              		.p2align 4,,10
 523 0094 0F1F4000 		.p2align 3
 524              	.L31:
 525              		.loc 1 257 7 is_stmt 1 discriminator 3 view .LVU185
 526              		.loc 1 257 24 is_stmt 0 discriminator 3 view .LVU186
 527 0098 410FB614 		movzbl	(%r8,%rax,4), %edx
 527      80
 528              		.loc 1 257 9 discriminator 3 view .LVU187
 529 009d 4489DF   		movl	%r11d, %edi
 258:fltk-1.3.4-1/jpeg/jccolor.c ****       g = MAXJSAMPLE - GETJSAMPLE(inptr[1]);
 530              		.loc 1 258 9 discriminator 3 view .LVU188
 531 00a0 4489D9   		movl	%r11d, %ecx
 259:fltk-1.3.4-1/jpeg/jccolor.c ****       b = MAXJSAMPLE - GETJSAMPLE(inptr[2]);
 532              		.loc 1 259 9 discriminator 3 view .LVU189
 533 00a3 4589D9   		movl	%r11d, %r9d
 257:fltk-1.3.4-1/jpeg/jccolor.c ****       g = MAXJSAMPLE - GETJSAMPLE(inptr[1]);
 534              		.loc 1 257 9 discriminator 3 view .LVU190
 535 00a6 29D7     		subl	%edx, %edi
 536              	.LVL56:
 258:fltk-1.3.4-1/jpeg/jccolor.c ****       g = MAXJSAMPLE - GETJSAMPLE(inptr[1]);
 537              		.loc 1 258 7 is_stmt 1 discriminator 3 view .LVU191
 258:fltk-1.3.4-1/jpeg/jccolor.c ****       g = MAXJSAMPLE - GETJSAMPLE(inptr[1]);
 538              		.loc 1 258 24 is_stmt 0 discriminator 3 view .LVU192
 539 00a8 410FB654 		movzbl	1(%r8,%rax,4), %edx
 539      8001
 260:fltk-1.3.4-1/jpeg/jccolor.c ****       /* K passes through as-is */
 261:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr3[col] = inptr[3];	/* don't need GETJSAMPLE here */
 262:fltk-1.3.4-1/jpeg/jccolor.c ****       /* If the inputs are 0..MAXJSAMPLE, the outputs of these equations
 263:fltk-1.3.4-1/jpeg/jccolor.c ****        * must be too; we do not need an explicit range-limiting operation.
 264:fltk-1.3.4-1/jpeg/jccolor.c ****        * Hence the value being shifted is never negative, and we don't
 265:fltk-1.3.4-1/jpeg/jccolor.c ****        * need the general RIGHT_SHIFT macro.
 266:fltk-1.3.4-1/jpeg/jccolor.c ****        */
 267:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Y */
 268:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr0[col] = (JSAMPLE)
 269:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 540              		.loc 1 269 9 discriminator 3 view .LVU193
 541 00ae 4863FF   		movslq	%edi, %rdi
 258:fltk-1.3.4-1/jpeg/jccolor.c ****       b = MAXJSAMPLE - GETJSAMPLE(inptr[2]);
 542              		.loc 1 258 9 discriminator 3 view .LVU194
 543 00b1 29D1     		subl	%edx, %ecx
 544 00b3 4863D1   		movslq	%ecx, %rdx
 545              	.LVL57:
 259:fltk-1.3.4-1/jpeg/jccolor.c ****       /* K passes through as-is */
 546              		.loc 1 259 7 is_stmt 1 discriminator 3 view .LVU195
 259:fltk-1.3.4-1/jpeg/jccolor.c ****       /* K passes through as-is */
 547              		.loc 1 259 24 is_stmt 0 discriminator 3 view .LVU196
 548 00b6 410FB64C 		movzbl	2(%r8,%rax,4), %ecx
 548      8002
 549              		.loc 1 269 27 discriminator 3 view .LVU197
 550 00bc 4881C200 		addq	$256, %rdx
 550      010000
 551              	.LVL58:
 259:fltk-1.3.4-1/jpeg/jccolor.c ****       /* K passes through as-is */
 552              		.loc 1 259 9 discriminator 3 view .LVU198
 553 00c3 4129C9   		subl	%ecx, %r9d
 554 00c6 4963C9   		movslq	%r9d, %rcx
 555              	.LVL59:
 261:fltk-1.3.4-1/jpeg/jccolor.c ****       /* If the inputs are 0..MAXJSAMPLE, the outputs of these equations
 556              		.loc 1 261 7 is_stmt 1 discriminator 3 view .LVU199
 261:fltk-1.3.4-1/jpeg/jccolor.c ****       /* If the inputs are 0..MAXJSAMPLE, the outputs of these equations
 557              		.loc 1 261 20 is_stmt 0 discriminator 3 view .LVU200
 558 00c9 450FB64C 		movzbl	3(%r8,%rax,4), %r9d
 558      8003
 559 00cf 45880C04 		movb	%r9b, (%r12,%rax)
 268:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 560              		.loc 1 268 7 is_stmt 1 discriminator 3 view .LVU201
 561              		.loc 1 269 27 is_stmt 0 discriminator 3 view .LVU202
 562 00d3 4C8D0CD5 		leaq	0(,%rdx,8), %r9
 562      00000000 
 563              		.loc 1 269 21 discriminator 3 view .LVU203
 564 00db 488B14D6 		movq	(%rsi,%rdx,8), %rdx
 565              	.LVL60:
 566              		.loc 1 269 21 discriminator 3 view .LVU204
 567 00df 480314FE 		addq	(%rsi,%rdi,8), %rdx
 568              		.loc 1 269 39 discriminator 3 view .LVU205
 569 00e3 480394CE 		addq	4096(%rsi,%rcx,8), %rdx
 569      00100000 
 270:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 570              		.loc 1 270 4 discriminator 3 view .LVU206
 571 00eb 48C1FA10 		sarq	$16, %rdx
 268:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_Y_OFF] + ctab[g+G_Y_OFF] + ctab[b+B_Y_OFF])
 572              		.loc 1 268 22 discriminator 3 view .LVU207
 573 00ef 41881402 		movb	%dl, (%r10,%rax)
 271:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Cb */
 272:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = (JSAMPLE)
 574              		.loc 1 272 7 is_stmt 1 discriminator 3 view .LVU208
 273:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CB_OFF] + ctab[g+G_CB_OFF] + ctab[b+B_CB_OFF])
 575              		.loc 1 273 22 is_stmt 0 discriminator 3 view .LVU209
 576 00f3 4A8B940E 		movq	6144(%rsi,%r9), %rdx
 576      00180000 
 577 00fb 480394FE 		addq	6144(%rsi,%rdi,8), %rdx
 577      00180000 
 578              		.loc 1 273 41 discriminator 3 view .LVU210
 579 0103 480394CE 		addq	10240(%rsi,%rcx,8), %rdx
 579      00280000 
 274:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 580              		.loc 1 274 4 discriminator 3 view .LVU211
 581 010b 48C1FA10 		sarq	$16, %rdx
 272:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CB_OFF] + ctab[g+G_CB_OFF] + ctab[b+B_CB_OFF])
 582              		.loc 1 272 22 discriminator 3 view .LVU212
 583 010f 881403   		movb	%dl, (%rbx,%rax)
 275:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Cr */
 276:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr2[col] = (JSAMPLE)
 584              		.loc 1 276 7 is_stmt 1 discriminator 3 view .LVU213
 277:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CR_OFF] + ctab[g+G_CR_OFF] + ctab[b+B_CR_OFF])
 585              		.loc 1 277 22 is_stmt 0 discriminator 3 view .LVU214
 586 0112 4A8B940E 		movq	10240(%rsi,%r9), %rdx
 586      00280000 
 587 011a 480394FE 		addq	10240(%rsi,%rdi,8), %rdx
 587      00280000 
 588              		.loc 1 277 41 discriminator 3 view .LVU215
 589 0122 480394CE 		addq	14336(%rsi,%rcx,8), %rdx
 589      00380000 
 278:fltk-1.3.4-1/jpeg/jccolor.c **** 		 >> SCALEBITS);
 590              		.loc 1 278 4 discriminator 3 view .LVU216
 591 012a 48C1FA10 		sarq	$16, %rdx
 276:fltk-1.3.4-1/jpeg/jccolor.c **** 		((ctab[r+R_CR_OFF] + ctab[g+G_CR_OFF] + ctab[b+B_CR_OFF])
 592              		.loc 1 276 22 discriminator 3 view .LVU217
 593 012e 88540500 		movb	%dl, 0(%rbp,%rax)
 279:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += 4;
 594              		.loc 1 279 7 is_stmt 1 discriminator 3 view .LVU218
 595              	.LVL61:
 256:fltk-1.3.4-1/jpeg/jccolor.c ****       r = MAXJSAMPLE - GETJSAMPLE(inptr[0]);
 596              		.loc 1 256 35 discriminator 3 view .LVU219
 256:fltk-1.3.4-1/jpeg/jccolor.c ****       r = MAXJSAMPLE - GETJSAMPLE(inptr[0]);
 597              		.loc 1 256 19 discriminator 3 view .LVU220
 598 0132 4889C2   		movq	%rax, %rdx
 599 0135 4883C001 		addq	$1, %rax
 600              	.LVL62:
 256:fltk-1.3.4-1/jpeg/jccolor.c ****       r = MAXJSAMPLE - GETJSAMPLE(inptr[0]);
 601              		.loc 1 256 5 is_stmt 0 discriminator 3 view .LVU221
 602 0139 4C39FA   		cmpq	%r15, %rdx
 603 013c 0F8556FF 		jne	.L31
 603      FFFF
 604              	.LVL63:
 605              	.L30:
 249:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 606              		.loc 1 249 9 is_stmt 1 view .LVU222
 249:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 607              		.loc 1 249 9 is_stmt 0 view .LVU223
 608 0142 443B7424 		cmpl	-4(%rsp), %r14d
 608      FC
 609 0147 0F8503FF 		jne	.L32
 609      FFFF
 610              	.LVL64:
 611              	.L28:
 280:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 281:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 282:fltk-1.3.4-1/jpeg/jccolor.c **** }
 612              		.loc 1 282 1 view .LVU224
 613 014d 5B       		popq	%rbx
 614              		.cfi_def_cfa_offset 48
 615 014e 5D       		popq	%rbp
 616              		.cfi_def_cfa_offset 40
 617 014f 415C     		popq	%r12
 618              		.cfi_def_cfa_offset 32
 619 0151 415D     		popq	%r13
 620              		.cfi_def_cfa_offset 24
 621 0153 415E     		popq	%r14
 622              		.cfi_def_cfa_offset 16
 623 0155 415F     		popq	%r15
 624              		.cfi_def_cfa_offset 8
 625 0157 C3       		ret
 626              		.cfi_endproc
 627              	.LFE54:
 629              		.section	.text.rgb_rgb1_convert,"ax",@progbits
 630              		.p2align 4
 632              	rgb_rgb1_convert:
 633              	.LVL65:
 634              	.LFB55:
 283:fltk-1.3.4-1/jpeg/jccolor.c **** 
 284:fltk-1.3.4-1/jpeg/jccolor.c **** 
 285:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 286:fltk-1.3.4-1/jpeg/jccolor.c ****  * Convert some rows of samples to the JPEG colorspace.
 287:fltk-1.3.4-1/jpeg/jccolor.c ****  * [R,G,B] to [R-G,G,B-G] conversion with modulo calculation
 288:fltk-1.3.4-1/jpeg/jccolor.c ****  * (forward reversible color transform).
 289:fltk-1.3.4-1/jpeg/jccolor.c ****  * This can be seen as an adaption of the general RGB->YCbCr
 290:fltk-1.3.4-1/jpeg/jccolor.c ****  * conversion equation with Kr = Kb = 0, while replacing the
 291:fltk-1.3.4-1/jpeg/jccolor.c ****  * normalization by modulo calculation.
 292:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 293:fltk-1.3.4-1/jpeg/jccolor.c **** 
 294:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 295:fltk-1.3.4-1/jpeg/jccolor.c **** rgb_rgb1_convert (j_compress_ptr cinfo,
 296:fltk-1.3.4-1/jpeg/jccolor.c **** 		  JSAMPARRAY input_buf, JSAMPIMAGE output_buf,
 297:fltk-1.3.4-1/jpeg/jccolor.c **** 		  JDIMENSION output_row, int num_rows)
 298:fltk-1.3.4-1/jpeg/jccolor.c **** {
 635              		.loc 1 298 1 is_stmt 1 view -0
 636              		.cfi_startproc
 637              		.loc 1 298 1 is_stmt 0 view .LVU226
 638 0000 F30F1EFA 		endbr64
 299:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 639              		.loc 1 299 3 is_stmt 1 view .LVU227
 300:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 640              		.loc 1 300 3 view .LVU228
 301:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr0, outptr1, outptr2;
 641              		.loc 1 301 3 view .LVU229
 302:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 642              		.loc 1 302 3 view .LVU230
 303:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 643              		.loc 1 303 3 view .LVU231
 298:fltk-1.3.4-1/jpeg/jccolor.c ****   register int r, g, b;
 644              		.loc 1 298 1 is_stmt 0 view .LVU232
 645 0004 4156     		pushq	%r14
 646              		.cfi_def_cfa_offset 16
 647              		.cfi_offset 14, -16
 648 0006 4155     		pushq	%r13
 649              		.cfi_def_cfa_offset 24
 650              		.cfi_offset 13, -24
 651 0008 4154     		pushq	%r12
 652              		.cfi_def_cfa_offset 32
 653              		.cfi_offset 12, -32
 654 000a 55       		pushq	%rbp
 655              		.cfi_def_cfa_offset 40
 656              		.cfi_offset 6, -40
 657 000b 53       		pushq	%rbx
 658              		.cfi_def_cfa_offset 48
 659              		.cfi_offset 3, -48
 660              		.loc 1 303 14 view .LVU233
 661 000c 448B6F30 		movl	48(%rdi), %r13d
 662              	.LVL66:
 304:fltk-1.3.4-1/jpeg/jccolor.c **** 
 305:fltk-1.3.4-1/jpeg/jccolor.c ****   while (--num_rows >= 0) {
 663              		.loc 1 305 3 is_stmt 1 view .LVU234
 664              		.loc 1 305 9 view .LVU235
 665              		.loc 1 305 9 is_stmt 0 view .LVU236
 666 0010 4585C0   		testl	%r8d, %r8d
 667 0013 7E7F     		jle	.L39
 668 0015 4889F3   		movq	%rsi, %rbx
 669 0018 458D2408 		leal	(%r8,%rcx), %r12d
 670 001c 89CE     		movl	%ecx, %esi
 671              	.LVL67:
 672              		.loc 1 305 9 view .LVU237
 673 001e 4889D5   		movq	%rdx, %rbp
 674 0021 418D4DFF 		leal	-1(%r13), %ecx
 675              	.LVL68:
 676              		.p2align 4,,10
 677 0025 0F1F00   		.p2align 3
 678              	.L43:
 306:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 679              		.loc 1 306 5 is_stmt 1 view .LVU238
 307:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 680              		.loc 1 307 13 is_stmt 0 view .LVU239
 681 0028 488B5500 		movq	0(%rbp), %rdx
 682              		.loc 1 307 28 view .LVU240
 683 002c 89F0     		movl	%esi, %eax
 306:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 684              		.loc 1 306 23 view .LVU241
 685 002e 4883C308 		addq	$8, %rbx
 686              	.LVL69:
 308:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 309:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr2 = output_buf[2][output_row];
 310:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 687              		.loc 1 310 15 view .LVU242
 688 0032 83C601   		addl	$1, %esi
 689              	.LVL70:
 306:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 690              		.loc 1 306 11 view .LVU243
 691 0035 4C8B4BF8 		movq	-8(%rbx), %r9
 692              	.LVL71:
 307:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 693              		.loc 1 307 5 is_stmt 1 view .LVU244
 307:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 694              		.loc 1 307 13 is_stmt 0 view .LVU245
 695 0039 4C8B14C2 		movq	(%rdx,%rax,8), %r10
 696              	.LVL72:
 308:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 697              		.loc 1 308 5 is_stmt 1 view .LVU246
 308:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 698              		.loc 1 308 13 is_stmt 0 view .LVU247
 699 003d 488B5508 		movq	8(%rbp), %rdx
 700 0041 4C8B1CC2 		movq	(%rdx,%rax,8), %r11
 701              	.LVL73:
 309:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 702              		.loc 1 309 5 is_stmt 1 view .LVU248
 309:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 703              		.loc 1 309 13 is_stmt 0 view .LVU249
 704 0045 488B5510 		movq	16(%rbp), %rdx
 705 0049 488B14C2 		movq	(%rdx,%rax,8), %rdx
 706              	.LVL74:
 707              		.loc 1 310 5 is_stmt 1 view .LVU250
 311:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 708              		.loc 1 311 5 view .LVU251
 709              		.loc 1 311 19 view .LVU252
 710              		.loc 1 311 5 is_stmt 0 view .LVU253
 711 004d 4585ED   		testl	%r13d, %r13d
 712 0050 743D     		je	.L41
 713 0052 31C0     		xorl	%eax, %eax
 714              	.LVL75:
 715              		.p2align 4,,10
 716 0054 0F1F4000 		.p2align 3
 717              	.L42:
 312:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 718              		.loc 1 312 7 is_stmt 1 discriminator 3 view .LVU254
 313:fltk-1.3.4-1/jpeg/jccolor.c ****       g = GETJSAMPLE(inptr[RGB_GREEN]);
 719              		.loc 1 313 7 discriminator 3 view .LVU255
 314:fltk-1.3.4-1/jpeg/jccolor.c ****       b = GETJSAMPLE(inptr[RGB_BLUE]);
 720              		.loc 1 314 11 is_stmt 0 discriminator 3 view .LVU256
 721 0058 410FB679 		movzbl	2(%r9), %edi
 721      02
 315:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Assume that MAXJSAMPLE+1 is a power of 2, so that the MOD
 316:fltk-1.3.4-1/jpeg/jccolor.c ****        * (modulo) operator is equivalent to the bitmask operator AND.
 317:fltk-1.3.4-1/jpeg/jccolor.c ****        */
 318:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr0[col] = (JSAMPLE) ((r - g + CENTERJSAMPLE) & MAXJSAMPLE);
 722              		.loc 1 318 40 discriminator 3 view .LVU257
 723 005d 450FB601 		movzbl	(%r9), %r8d
 319:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = (JSAMPLE) g;
 320:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr2[col] = (JSAMPLE) ((b - g + CENTERJSAMPLE) & MAXJSAMPLE);
 321:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 724              		.loc 1 321 13 discriminator 3 view .LVU258
 725 0061 4983C103 		addq	$3, %r9
 726              	.LVL76:
 313:fltk-1.3.4-1/jpeg/jccolor.c ****       b = GETJSAMPLE(inptr[RGB_BLUE]);
 727              		.loc 1 313 11 discriminator 3 view .LVU259
 728 0065 450FB671 		movzbl	-2(%r9), %r14d
 728      FE
 729              	.LVL77:
 314:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Assume that MAXJSAMPLE+1 is a power of 2, so that the MOD
 730              		.loc 1 314 7 is_stmt 1 discriminator 3 view .LVU260
 318:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = (JSAMPLE) g;
 731              		.loc 1 318 7 discriminator 3 view .LVU261
 318:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = (JSAMPLE) g;
 732              		.loc 1 318 40 is_stmt 0 discriminator 3 view .LVU262
 733 006a 4183C080 		addl	$-128, %r8d
 734              	.LVL78:
 320:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 735              		.loc 1 320 40 discriminator 3 view .LVU263
 736 006e 83C780   		addl	$-128, %edi
 737              	.LVL79:
 320:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 738              		.loc 1 320 40 discriminator 3 view .LVU264
 739 0071 4429F7   		subl	%r14d, %edi
 318:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = (JSAMPLE) g;
 740              		.loc 1 318 40 discriminator 3 view .LVU265
 741 0074 4529F0   		subl	%r14d, %r8d
 742 0077 45880402 		movb	%r8b, (%r10,%rax)
 743              	.LVL80:
 319:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr2[col] = (JSAMPLE) ((b - g + CENTERJSAMPLE) & MAXJSAMPLE);
 744              		.loc 1 319 7 is_stmt 1 discriminator 3 view .LVU266
 319:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr2[col] = (JSAMPLE) ((b - g + CENTERJSAMPLE) & MAXJSAMPLE);
 745              		.loc 1 319 20 is_stmt 0 discriminator 3 view .LVU267
 746 007b 45883403 		movb	%r14b, (%r11,%rax)
 320:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 747              		.loc 1 320 7 is_stmt 1 discriminator 3 view .LVU268
 320:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 748              		.loc 1 320 40 is_stmt 0 discriminator 3 view .LVU269
 749 007f 40883C02 		movb	%dil, (%rdx,%rax)
 750              		.loc 1 321 7 is_stmt 1 discriminator 3 view .LVU270
 751              	.LVL81:
 311:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 752              		.loc 1 311 35 discriminator 3 view .LVU271
 311:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 753              		.loc 1 311 19 discriminator 3 view .LVU272
 754 0083 4889C7   		movq	%rax, %rdi
 755 0086 4883C001 		addq	$1, %rax
 756              	.LVL82:
 311:fltk-1.3.4-1/jpeg/jccolor.c ****       r = GETJSAMPLE(inptr[RGB_RED]);
 757              		.loc 1 311 5 is_stmt 0 discriminator 3 view .LVU273
 758 008a 4839CF   		cmpq	%rcx, %rdi
 759 008d 75C9     		jne	.L42
 760              	.LVL83:
 761              	.L41:
 305:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 762              		.loc 1 305 9 is_stmt 1 view .LVU274
 305:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 763              		.loc 1 305 9 is_stmt 0 view .LVU275
 764 008f 4439E6   		cmpl	%r12d, %esi
 765 0092 7594     		jne	.L43
 766              	.LVL84:
 767              	.L39:
 322:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 323:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 324:fltk-1.3.4-1/jpeg/jccolor.c **** }
 768              		.loc 1 324 1 view .LVU276
 769 0094 5B       		popq	%rbx
 770              		.cfi_def_cfa_offset 40
 771 0095 5D       		popq	%rbp
 772              		.cfi_def_cfa_offset 32
 773 0096 415C     		popq	%r12
 774              		.cfi_def_cfa_offset 24
 775 0098 415D     		popq	%r13
 776              		.cfi_def_cfa_offset 16
 777              	.LVL85:
 778              		.loc 1 324 1 view .LVU277
 779 009a 415E     		popq	%r14
 780              		.cfi_def_cfa_offset 8
 781 009c C3       		ret
 782              		.cfi_endproc
 783              	.LFE55:
 785              		.section	.text.grayscale_convert,"ax",@progbits
 786              		.p2align 4
 788              	grayscale_convert:
 789              	.LVL86:
 790              	.LFB56:
 325:fltk-1.3.4-1/jpeg/jccolor.c **** 
 326:fltk-1.3.4-1/jpeg/jccolor.c **** 
 327:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 328:fltk-1.3.4-1/jpeg/jccolor.c ****  * Convert some rows of samples to the JPEG colorspace.
 329:fltk-1.3.4-1/jpeg/jccolor.c ****  * This version handles grayscale output with no conversion.
 330:fltk-1.3.4-1/jpeg/jccolor.c ****  * The source can be either plain grayscale or YCC (since Y == gray).
 331:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 332:fltk-1.3.4-1/jpeg/jccolor.c **** 
 333:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 334:fltk-1.3.4-1/jpeg/jccolor.c **** grayscale_convert (j_compress_ptr cinfo,
 335:fltk-1.3.4-1/jpeg/jccolor.c **** 		   JSAMPARRAY input_buf, JSAMPIMAGE output_buf,
 336:fltk-1.3.4-1/jpeg/jccolor.c **** 		   JDIMENSION output_row, int num_rows)
 337:fltk-1.3.4-1/jpeg/jccolor.c **** {
 791              		.loc 1 337 1 is_stmt 1 view -0
 792              		.cfi_startproc
 793              		.loc 1 337 1 is_stmt 0 view .LVU279
 794 0000 F30F1EFA 		endbr64
 338:fltk-1.3.4-1/jpeg/jccolor.c ****   int instride = cinfo->input_components;
 795              		.loc 1 338 3 is_stmt 1 view .LVU280
 337:fltk-1.3.4-1/jpeg/jccolor.c ****   int instride = cinfo->input_components;
 796              		.loc 1 337 1 is_stmt 0 view .LVU281
 797 0004 55       		pushq	%rbp
 798              		.cfi_def_cfa_offset 16
 799              		.cfi_offset 6, -16
 800 0005 418D2C08 		leal	(%r8,%rcx), %ebp
 801 0009 53       		pushq	%rbx
 802              		.cfi_def_cfa_offset 24
 803              		.cfi_offset 3, -24
 804              		.loc 1 338 7 view .LVU282
 805 000a 4C635738 		movslq	56(%rdi), %r10
 806              	.LVL87:
 339:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 807              		.loc 1 339 3 is_stmt 1 view .LVU283
 340:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr;
 808              		.loc 1 340 3 view .LVU284
 341:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 809              		.loc 1 341 3 view .LVU285
 342:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 810              		.loc 1 342 3 view .LVU286
 811              		.loc 1 342 14 is_stmt 0 view .LVU287
 812 000e 8B5F30   		movl	48(%rdi), %ebx
 813              	.LVL88:
 343:fltk-1.3.4-1/jpeg/jccolor.c **** 
 344:fltk-1.3.4-1/jpeg/jccolor.c ****   while (--num_rows >= 0) {
 814              		.loc 1 344 3 is_stmt 1 view .LVU288
 815              		.loc 1 344 9 view .LVU289
 816              		.loc 1 344 9 is_stmt 0 view .LVU290
 817 0011 4585C0   		testl	%r8d, %r8d
 818 0014 7E42     		jle	.L50
 819 0016 448D5BFF 		leal	-1(%rbx), %r11d
 820 001a 4983C301 		addq	$1, %r11
 821              	.LVL89:
 822 001e 6690     		.p2align 4,,10
 823              		.p2align 3
 824              	.L53:
 345:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 825              		.loc 1 345 5 is_stmt 1 view .LVU291
 346:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr = output_buf[0][output_row++];
 826              		.loc 1 346 12 is_stmt 0 view .LVU292
 827 0020 4C8B02   		movq	(%rdx), %r8
 828 0023 89C8     		movl	%ecx, %eax
 345:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 829              		.loc 1 345 23 view .LVU293
 830 0025 4883C608 		addq	$8, %rsi
 831              	.LVL90:
 832              		.loc 1 346 38 view .LVU294
 833 0029 83C101   		addl	$1, %ecx
 834              	.LVL91:
 345:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 835              		.loc 1 345 11 view .LVU295
 836 002c 488B7EF8 		movq	-8(%rsi), %rdi
 837              	.LVL92:
 838              		.loc 1 346 5 is_stmt 1 view .LVU296
 839              		.loc 1 346 12 is_stmt 0 view .LVU297
 840 0030 498B04C0 		movq	(%r8,%rax,8), %rax
 841              	.LVL93:
 347:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 842              		.loc 1 347 5 is_stmt 1 view .LVU298
 843              		.loc 1 347 19 view .LVU299
 844 0034 4E8D0C18 		leaq	(%rax,%r11), %r9
 845              		.loc 1 347 5 is_stmt 0 view .LVU300
 846 0038 85DB     		testl	%ebx, %ebx
 847 003a 7418     		je	.L56
 848              	.LVL94:
 849 003c 0F1F4000 		.p2align 4,,10
 850              		.p2align 3
 851              	.L55:
 348:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr[col] = inptr[0];	/* don't need GETJSAMPLE() here */
 852              		.loc 1 348 7 is_stmt 1 discriminator 3 view .LVU301
 853              		.loc 1 348 26 is_stmt 0 discriminator 3 view .LVU302
 854 0040 440FB607 		movzbl	(%rdi), %r8d
 855 0044 4883C001 		addq	$1, %rax
 349:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += instride;
 856              		.loc 1 349 13 discriminator 3 view .LVU303
 857 0048 4C01D7   		addq	%r10, %rdi
 858              	.LVL95:
 348:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr[col] = inptr[0];	/* don't need GETJSAMPLE() here */
 859              		.loc 1 348 19 discriminator 3 view .LVU304
 860 004b 448840FF 		movb	%r8b, -1(%rax)
 861              		.loc 1 349 7 is_stmt 1 discriminator 3 view .LVU305
 862              	.LVL96:
 347:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 863              		.loc 1 347 35 discriminator 3 view .LVU306
 347:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 864              		.loc 1 347 19 discriminator 3 view .LVU307
 347:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 865              		.loc 1 347 5 is_stmt 0 discriminator 3 view .LVU308
 866 004f 4939C1   		cmpq	%rax, %r9
 867 0052 75EC     		jne	.L55
 868              	.L56:
 344:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 869              		.loc 1 344 9 is_stmt 1 view .LVU309
 344:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 870              		.loc 1 344 9 is_stmt 0 view .LVU310
 871 0054 39CD     		cmpl	%ecx, %ebp
 872 0056 75C8     		jne	.L53
 873              	.LVL97:
 874              	.L50:
 350:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 351:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 352:fltk-1.3.4-1/jpeg/jccolor.c **** }
 875              		.loc 1 352 1 view .LVU311
 876 0058 5B       		popq	%rbx
 877              		.cfi_def_cfa_offset 16
 878              	.LVL98:
 879              		.loc 1 352 1 view .LVU312
 880 0059 5D       		popq	%rbp
 881              		.cfi_def_cfa_offset 8
 882 005a C3       		ret
 883              		.cfi_endproc
 884              	.LFE56:
 886              		.section	.text.rgb_convert,"ax",@progbits
 887              		.p2align 4
 889              	rgb_convert:
 890              	.LVL99:
 891              	.LFB57:
 353:fltk-1.3.4-1/jpeg/jccolor.c **** 
 354:fltk-1.3.4-1/jpeg/jccolor.c **** 
 355:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 356:fltk-1.3.4-1/jpeg/jccolor.c ****  * Convert some rows of samples to the JPEG colorspace.
 357:fltk-1.3.4-1/jpeg/jccolor.c ****  * No colorspace conversion, but change from interleaved
 358:fltk-1.3.4-1/jpeg/jccolor.c ****  * to separate-planes representation.
 359:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 360:fltk-1.3.4-1/jpeg/jccolor.c **** 
 361:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 362:fltk-1.3.4-1/jpeg/jccolor.c **** rgb_convert (j_compress_ptr cinfo,
 363:fltk-1.3.4-1/jpeg/jccolor.c **** 	     JSAMPARRAY input_buf, JSAMPIMAGE output_buf,
 364:fltk-1.3.4-1/jpeg/jccolor.c **** 	     JDIMENSION output_row, int num_rows)
 365:fltk-1.3.4-1/jpeg/jccolor.c **** {
 892              		.loc 1 365 1 is_stmt 1 view -0
 893              		.cfi_startproc
 894              		.loc 1 365 1 is_stmt 0 view .LVU314
 895 0000 F30F1EFA 		endbr64
 366:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 896              		.loc 1 366 3 is_stmt 1 view .LVU315
 367:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr0, outptr1, outptr2;
 897              		.loc 1 367 3 view .LVU316
 368:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 898              		.loc 1 368 3 view .LVU317
 369:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 899              		.loc 1 369 3 view .LVU318
 365:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 900              		.loc 1 365 1 is_stmt 0 view .LVU319
 901 0004 4154     		pushq	%r12
 902              		.cfi_def_cfa_offset 16
 903              		.cfi_offset 12, -16
 904 0006 55       		pushq	%rbp
 905              		.cfi_def_cfa_offset 24
 906              		.cfi_offset 6, -24
 907 0007 53       		pushq	%rbx
 908              		.cfi_def_cfa_offset 32
 909              		.cfi_offset 3, -32
 910              		.loc 1 369 14 view .LVU320
 911 0008 448B6730 		movl	48(%rdi), %r12d
 912              	.LVL100:
 370:fltk-1.3.4-1/jpeg/jccolor.c **** 
 371:fltk-1.3.4-1/jpeg/jccolor.c ****   while (--num_rows >= 0) {
 913              		.loc 1 371 3 is_stmt 1 view .LVU321
 914              		.loc 1 371 9 view .LVU322
 915              		.loc 1 371 9 is_stmt 0 view .LVU323
 916 000c 4585C0   		testl	%r8d, %r8d
 917 000f 7E6D     		jle	.L61
 918 0011 4889D3   		movq	%rdx, %rbx
 919 0014 418D2C08 		leal	(%r8,%rcx), %ebp
 920 0018 418D5424 		leal	-1(%r12), %edx
 920      FF
 921              	.LVL101:
 922 001d 0F1F00   		.p2align 4,,10
 923              		.p2align 3
 924              	.L65:
 372:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 925              		.loc 1 372 5 is_stmt 1 view .LVU324
 373:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 926              		.loc 1 373 13 is_stmt 0 view .LVU325
 927 0020 4C8B03   		movq	(%rbx), %r8
 928              		.loc 1 373 28 view .LVU326
 929 0023 89C8     		movl	%ecx, %eax
 372:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 930              		.loc 1 372 23 view .LVU327
 931 0025 4883C608 		addq	$8, %rsi
 932              	.LVL102:
 374:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 375:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr2 = output_buf[2][output_row];
 376:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 933              		.loc 1 376 15 view .LVU328
 934 0029 83C101   		addl	$1, %ecx
 935              	.LVL103:
 372:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 936              		.loc 1 372 11 view .LVU329
 937 002c 488B7EF8 		movq	-8(%rsi), %rdi
 938              	.LVL104:
 373:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 939              		.loc 1 373 5 is_stmt 1 view .LVU330
 373:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr0 = output_buf[0][output_row];
 940              		.loc 1 373 13 is_stmt 0 view .LVU331
 941 0030 4D8B0CC0 		movq	(%r8,%rax,8), %r9
 942              	.LVL105:
 374:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 943              		.loc 1 374 5 is_stmt 1 view .LVU332
 374:fltk-1.3.4-1/jpeg/jccolor.c ****     outptr1 = output_buf[1][output_row];
 944              		.loc 1 374 13 is_stmt 0 view .LVU333
 945 0034 4C8B4308 		movq	8(%rbx), %r8
 946 0038 4D8B14C0 		movq	(%r8,%rax,8), %r10
 947              	.LVL106:
 375:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 948              		.loc 1 375 5 is_stmt 1 view .LVU334
 375:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 949              		.loc 1 375 13 is_stmt 0 view .LVU335
 950 003c 4C8B4310 		movq	16(%rbx), %r8
 951 0040 4D8B1CC0 		movq	(%r8,%rax,8), %r11
 952              	.LVL107:
 953              		.loc 1 376 5 is_stmt 1 view .LVU336
 377:fltk-1.3.4-1/jpeg/jccolor.c ****     for (col = 0; col < num_cols; col++) {
 954              		.loc 1 377 5 view .LVU337
 955              		.loc 1 377 19 view .LVU338
 956              		.loc 1 377 5 is_stmt 0 view .LVU339
 957 0044 4585E4   		testl	%r12d, %r12d
 958 0047 7431     		je	.L63
 959 0049 31C0     		xorl	%eax, %eax
 960              	.LVL108:
 961 004b 0F1F4400 		.p2align 4,,10
 961      00
 962              		.p2align 3
 963              	.L64:
 378:fltk-1.3.4-1/jpeg/jccolor.c ****       /* We can dispense with GETJSAMPLE() here */
 379:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr0[col] = inptr[RGB_RED];
 964              		.loc 1 379 7 is_stmt 1 discriminator 3 view .LVU340
 965              		.loc 1 379 27 is_stmt 0 discriminator 3 view .LVU341
 966 0050 440FB607 		movzbl	(%rdi), %r8d
 380:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = inptr[RGB_GREEN];
 381:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr2[col] = inptr[RGB_BLUE];
 382:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 967              		.loc 1 382 13 discriminator 3 view .LVU342
 968 0054 4883C703 		addq	$3, %rdi
 969              	.LVL109:
 379:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = inptr[RGB_GREEN];
 970              		.loc 1 379 20 discriminator 3 view .LVU343
 971 0058 45880401 		movb	%r8b, (%r9,%rax)
 380:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = inptr[RGB_GREEN];
 972              		.loc 1 380 7 is_stmt 1 discriminator 3 view .LVU344
 380:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr1[col] = inptr[RGB_GREEN];
 973              		.loc 1 380 20 is_stmt 0 discriminator 3 view .LVU345
 974 005c 440FB647 		movzbl	-2(%rdi), %r8d
 974      FE
 975 0061 45880402 		movb	%r8b, (%r10,%rax)
 381:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 976              		.loc 1 381 7 is_stmt 1 discriminator 3 view .LVU346
 381:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr += RGB_PIXELSIZE;
 977              		.loc 1 381 20 is_stmt 0 discriminator 3 view .LVU347
 978 0065 440FB647 		movzbl	-1(%rdi), %r8d
 978      FF
 979 006a 45880403 		movb	%r8b, (%r11,%rax)
 980              		.loc 1 382 7 is_stmt 1 discriminator 3 view .LVU348
 981              	.LVL110:
 377:fltk-1.3.4-1/jpeg/jccolor.c ****       /* We can dispense with GETJSAMPLE() here */
 982              		.loc 1 377 35 discriminator 3 view .LVU349
 377:fltk-1.3.4-1/jpeg/jccolor.c ****       /* We can dispense with GETJSAMPLE() here */
 983              		.loc 1 377 19 discriminator 3 view .LVU350
 984 006e 4989C0   		movq	%rax, %r8
 985 0071 4883C001 		addq	$1, %rax
 986              	.LVL111:
 377:fltk-1.3.4-1/jpeg/jccolor.c ****       /* We can dispense with GETJSAMPLE() here */
 987              		.loc 1 377 5 is_stmt 0 discriminator 3 view .LVU351
 988 0075 4939D0   		cmpq	%rdx, %r8
 989 0078 75D6     		jne	.L64
 990              	.L63:
 371:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 991              		.loc 1 371 9 is_stmt 1 view .LVU352
 371:fltk-1.3.4-1/jpeg/jccolor.c ****     inptr = *input_buf++;
 992              		.loc 1 371 9 is_stmt 0 view .LVU353
 993 007a 39E9     		cmpl	%ebp, %ecx
 994 007c 75A2     		jne	.L65
 995              	.LVL112:
 996              	.L61:
 383:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 384:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 385:fltk-1.3.4-1/jpeg/jccolor.c **** }
 997              		.loc 1 385 1 view .LVU354
 998 007e 5B       		popq	%rbx
 999              		.cfi_def_cfa_offset 24
 1000 007f 5D       		popq	%rbp
 1001              		.cfi_def_cfa_offset 16
 1002 0080 415C     		popq	%r12
 1003              		.cfi_def_cfa_offset 8
 1004              	.LVL113:
 1005              		.loc 1 385 1 view .LVU355
 1006 0082 C3       		ret
 1007              		.cfi_endproc
 1008              	.LFE57:
 1010              		.section	.text.null_convert,"ax",@progbits
 1011              		.p2align 4
 1013              	null_convert:
 1014              	.LVL114:
 1015              	.LFB58:
 386:fltk-1.3.4-1/jpeg/jccolor.c **** 
 387:fltk-1.3.4-1/jpeg/jccolor.c **** 
 388:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 389:fltk-1.3.4-1/jpeg/jccolor.c ****  * Convert some rows of samples to the JPEG colorspace.
 390:fltk-1.3.4-1/jpeg/jccolor.c ****  * This version handles multi-component colorspaces without conversion.
 391:fltk-1.3.4-1/jpeg/jccolor.c ****  * We assume input_components == num_components.
 392:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 393:fltk-1.3.4-1/jpeg/jccolor.c **** 
 394:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 395:fltk-1.3.4-1/jpeg/jccolor.c **** null_convert (j_compress_ptr cinfo,
 396:fltk-1.3.4-1/jpeg/jccolor.c **** 	      JSAMPARRAY input_buf, JSAMPIMAGE output_buf,
 397:fltk-1.3.4-1/jpeg/jccolor.c **** 	      JDIMENSION output_row, int num_rows)
 398:fltk-1.3.4-1/jpeg/jccolor.c **** {
 1016              		.loc 1 398 1 is_stmt 1 view -0
 1017              		.cfi_startproc
 1018              		.loc 1 398 1 is_stmt 0 view .LVU357
 1019 0000 F30F1EFA 		endbr64
 399:fltk-1.3.4-1/jpeg/jccolor.c ****   int ci;
 1020              		.loc 1 399 3 is_stmt 1 view .LVU358
 400:fltk-1.3.4-1/jpeg/jccolor.c ****   register int nc = cinfo->num_components;
 1021              		.loc 1 400 3 view .LVU359
 398:fltk-1.3.4-1/jpeg/jccolor.c ****   int ci;
 1022              		.loc 1 398 1 is_stmt 0 view .LVU360
 1023 0004 4157     		pushq	%r15
 1024              		.cfi_def_cfa_offset 16
 1025              		.cfi_offset 15, -16
 1026 0006 4156     		pushq	%r14
 1027              		.cfi_def_cfa_offset 24
 1028              		.cfi_offset 14, -24
 1029 0008 4155     		pushq	%r13
 1030              		.cfi_def_cfa_offset 32
 1031              		.cfi_offset 13, -32
 1032 000a 4154     		pushq	%r12
 1033              		.cfi_def_cfa_offset 40
 1034              		.cfi_offset 12, -40
 1035 000c 55       		pushq	%rbp
 1036              		.cfi_def_cfa_offset 48
 1037              		.cfi_offset 6, -48
 1038 000d 53       		pushq	%rbx
 1039              		.cfi_def_cfa_offset 56
 1040              		.cfi_offset 3, -56
 1041              		.loc 1 400 16 view .LVU361
 1042 000e 448B7F5C 		movl	92(%rdi), %r15d
 1043              	.LVL115:
 401:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW inptr;
 1044              		.loc 1 401 3 is_stmt 1 view .LVU362
 402:fltk-1.3.4-1/jpeg/jccolor.c ****   register JSAMPROW outptr;
 1045              		.loc 1 402 3 view .LVU363
 403:fltk-1.3.4-1/jpeg/jccolor.c ****   register JDIMENSION col;
 1046              		.loc 1 403 3 view .LVU364
 404:fltk-1.3.4-1/jpeg/jccolor.c ****   JDIMENSION num_cols = cinfo->image_width;
 1047              		.loc 1 404 3 view .LVU365
 1048              		.loc 1 404 14 is_stmt 0 view .LVU366
 1049 0012 8B6F30   		movl	48(%rdi), %ebp
 1050              	.LVL116:
 405:fltk-1.3.4-1/jpeg/jccolor.c **** 
 406:fltk-1.3.4-1/jpeg/jccolor.c ****   while (--num_rows >= 0) {
 1051              		.loc 1 406 3 is_stmt 1 view .LVU367
 1052              		.loc 1 406 9 view .LVU368
 1053              		.loc 1 406 9 is_stmt 0 view .LVU369
 1054 0015 4585C0   		testl	%r8d, %r8d
 1055 0018 0F8E7F00 		jle	.L72
 1055      0000
 1056 001e 4589C6   		movl	%r8d, %r14d
 1057 0021 448D5DFF 		leal	-1(%rbp), %r11d
 1058 0025 4989F2   		movq	%rsi, %r10
 1059 0028 4889D3   		movq	%rdx, %rbx
 1060 002b 4189CD   		movl	%ecx, %r13d
 1061 002e 4101CE   		addl	%ecx, %r14d
 1062 0031 458D67FF 		leal	-1(%r15), %r12d
 1063 0035 4963FF   		movslq	%r15d, %rdi
 1064              	.LVL117:
 1065              		.loc 1 406 9 view .LVU370
 1066 0038 4983C301 		addq	$1, %r11
 1067              	.LVL118:
 1068 003c 0F1F4000 		.p2align 4,,10
 1069              		.p2align 3
 1070              	.L74:
 407:fltk-1.3.4-1/jpeg/jccolor.c ****     /* It seems fastest to make a separate pass for each component. */
 408:fltk-1.3.4-1/jpeg/jccolor.c ****     for (ci = 0; ci < nc; ci++) {
 1071              		.loc 1 408 18 is_stmt 1 view .LVU371
 409:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 410:fltk-1.3.4-1/jpeg/jccolor.c ****       outptr = output_buf[ci][output_row];
 1072              		.loc 1 410 30 is_stmt 0 view .LVU372
 1073 0040 4589E9   		movl	%r13d, %r9d
 1074 0043 4531C0   		xorl	%r8d, %r8d
 1075 0046 49C1E103 		salq	$3, %r9
 408:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1076              		.loc 1 408 5 view .LVU373
 1077 004a 4585FF   		testl	%r15d, %r15d
 1078 004d 7E41     		jle	.L77
 1079              	.LVL119:
 1080 004f 90       		.p2align 4,,10
 1081              		.p2align 3
 1082              	.L76:
 409:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1083              		.loc 1 409 7 is_stmt 1 view .LVU374
 1084              		.loc 1 410 14 is_stmt 0 view .LVU375
 1085 0050 4A8B04C3 		movq	(%rbx,%r8,8), %rax
 409:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1086              		.loc 1 409 13 view .LVU376
 1087 0054 498B12   		movq	(%r10), %rdx
 1088              		.loc 1 410 14 view .LVU377
 1089 0057 4A8B0408 		movq	(%rax,%r9), %rax
 409:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1090              		.loc 1 409 13 view .LVU378
 1091 005b 4C01C2   		addq	%r8, %rdx
 1092              	.LVL120:
 1093              		.loc 1 410 7 is_stmt 1 view .LVU379
 411:fltk-1.3.4-1/jpeg/jccolor.c ****       for (col = 0; col < num_cols; col++) {
 1094              		.loc 1 411 7 view .LVU380
 1095              		.loc 1 411 21 view .LVU381
 1096 005e 4A8D3418 		leaq	(%rax,%r11), %rsi
 1097              		.loc 1 411 7 is_stmt 0 view .LVU382
 1098 0062 85ED     		testl	%ebp, %ebp
 1099 0064 741C     		je	.L79
 1100 0066 662E0F1F 		.p2align 4,,10
 1100      84000000 
 1100      0000
 1101              		.p2align 3
 1102              	.L78:
 412:fltk-1.3.4-1/jpeg/jccolor.c **** 	*outptr++ = *inptr;	/* don't need GETJSAMPLE() here */
 1103              		.loc 1 412 2 is_stmt 1 discriminator 3 view .LVU383
 1104              		.loc 1 412 14 is_stmt 0 discriminator 3 view .LVU384
 1105 0070 0FB60A   		movzbl	(%rdx), %ecx
 1106              		.loc 1 412 9 discriminator 3 view .LVU385
 1107 0073 4883C001 		addq	$1, %rax
 1108              	.LVL121:
 413:fltk-1.3.4-1/jpeg/jccolor.c **** 	inptr += nc;
 1109              		.loc 1 413 8 discriminator 3 view .LVU386
 1110 0077 4801FA   		addq	%rdi, %rdx
 1111              	.LVL122:
 412:fltk-1.3.4-1/jpeg/jccolor.c **** 	*outptr++ = *inptr;	/* don't need GETJSAMPLE() here */
 1112              		.loc 1 412 12 discriminator 3 view .LVU387
 1113 007a 8848FF   		movb	%cl, -1(%rax)
 1114              		.loc 1 413 2 is_stmt 1 discriminator 3 view .LVU388
 1115              	.LVL123:
 411:fltk-1.3.4-1/jpeg/jccolor.c ****       for (col = 0; col < num_cols; col++) {
 1116              		.loc 1 411 37 discriminator 3 view .LVU389
 411:fltk-1.3.4-1/jpeg/jccolor.c ****       for (col = 0; col < num_cols; col++) {
 1117              		.loc 1 411 21 discriminator 3 view .LVU390
 411:fltk-1.3.4-1/jpeg/jccolor.c ****       for (col = 0; col < num_cols; col++) {
 1118              		.loc 1 411 7 is_stmt 0 discriminator 3 view .LVU391
 1119 007d 4839F0   		cmpq	%rsi, %rax
 1120 0080 75EE     		jne	.L78
 1121              	.L79:
 408:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1122              		.loc 1 408 27 is_stmt 1 view .LVU392
 1123              	.LVL124:
 408:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1124              		.loc 1 408 18 view .LVU393
 1125 0082 498D4001 		leaq	1(%r8), %rax
 1126              	.LVL125:
 408:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1127              		.loc 1 408 5 is_stmt 0 view .LVU394
 1128 0086 4D39C4   		cmpq	%r8, %r12
 1129 0089 7405     		je	.L77
 1130 008b 4989C0   		movq	%rax, %r8
 1131              	.LVL126:
 408:fltk-1.3.4-1/jpeg/jccolor.c ****       inptr = input_buf[0] + ci;
 1132              		.loc 1 408 5 view .LVU395
 1133 008e EBC0     		jmp	.L76
 1134              	.LVL127:
 1135              		.p2align 4,,10
 1136              		.p2align 3
 1137              	.L77:
 414:fltk-1.3.4-1/jpeg/jccolor.c ****       }
 415:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 416:fltk-1.3.4-1/jpeg/jccolor.c ****     input_buf++;
 1138              		.loc 1 416 5 is_stmt 1 view .LVU396
 417:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 1139              		.loc 1 417 15 is_stmt 0 view .LVU397
 1140 0090 4183C501 		addl	$1, %r13d
 1141              	.LVL128:
 416:fltk-1.3.4-1/jpeg/jccolor.c ****     output_row++;
 1142              		.loc 1 416 14 view .LVU398
 1143 0094 4983C208 		addq	$8, %r10
 1144              	.LVL129:
 1145              		.loc 1 417 5 is_stmt 1 view .LVU399
 406:fltk-1.3.4-1/jpeg/jccolor.c ****     /* It seems fastest to make a separate pass for each component. */
 1146              		.loc 1 406 9 view .LVU400
 406:fltk-1.3.4-1/jpeg/jccolor.c ****     /* It seems fastest to make a separate pass for each component. */
 1147              		.loc 1 406 9 is_stmt 0 view .LVU401
 1148 0098 4539EE   		cmpl	%r13d, %r14d
 1149 009b 75A3     		jne	.L74
 1150              	.LVL130:
 1151              	.L72:
 418:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 419:fltk-1.3.4-1/jpeg/jccolor.c **** }
 1152              		.loc 1 419 1 view .LVU402
 1153 009d 5B       		popq	%rbx
 1154              		.cfi_def_cfa_offset 48
 1155 009e 5D       		popq	%rbp
 1156              		.cfi_def_cfa_offset 40
 1157              	.LVL131:
 1158              		.loc 1 419 1 view .LVU403
 1159 009f 415C     		popq	%r12
 1160              		.cfi_def_cfa_offset 32
 1161 00a1 415D     		popq	%r13
 1162              		.cfi_def_cfa_offset 24
 1163 00a3 415E     		popq	%r14
 1164              		.cfi_def_cfa_offset 16
 1165 00a5 415F     		popq	%r15
 1166              		.cfi_def_cfa_offset 8
 1167              	.LVL132:
 1168              		.loc 1 419 1 view .LVU404
 1169 00a7 C3       		ret
 1170              		.cfi_endproc
 1171              	.LFE58:
 1173              		.section	.text.null_method,"ax",@progbits
 1174              		.p2align 4
 1176              	null_method:
 1177              	.LVL133:
 1178              	.LFB59:
 420:fltk-1.3.4-1/jpeg/jccolor.c **** 
 421:fltk-1.3.4-1/jpeg/jccolor.c **** 
 422:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 423:fltk-1.3.4-1/jpeg/jccolor.c ****  * Empty method for start_pass.
 424:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 425:fltk-1.3.4-1/jpeg/jccolor.c **** 
 426:fltk-1.3.4-1/jpeg/jccolor.c **** METHODDEF(void)
 427:fltk-1.3.4-1/jpeg/jccolor.c **** null_method (j_compress_ptr cinfo)
 428:fltk-1.3.4-1/jpeg/jccolor.c **** {
 1179              		.loc 1 428 1 is_stmt 1 view -0
 1180              		.cfi_startproc
 1181              		.loc 1 428 1 is_stmt 0 view .LVU406
 1182 0000 F30F1EFA 		endbr64
 429:fltk-1.3.4-1/jpeg/jccolor.c ****   /* no work needed */
 430:fltk-1.3.4-1/jpeg/jccolor.c **** }
 1183              		.loc 1 430 1 is_stmt 1 view .LVU407
 1184 0004 C3       		ret
 1185              		.cfi_endproc
 1186              	.LFE59:
 1188              		.section	.text.jinit_color_converter,"ax",@progbits
 1189              		.p2align 4
 1190              		.globl	jinit_color_converter
 1192              	jinit_color_converter:
 1193              	.LVL134:
 1194              	.LFB60:
 431:fltk-1.3.4-1/jpeg/jccolor.c **** 
 432:fltk-1.3.4-1/jpeg/jccolor.c **** 
 433:fltk-1.3.4-1/jpeg/jccolor.c **** /*
 434:fltk-1.3.4-1/jpeg/jccolor.c ****  * Module initialization routine for input colorspace conversion.
 435:fltk-1.3.4-1/jpeg/jccolor.c ****  */
 436:fltk-1.3.4-1/jpeg/jccolor.c **** 
 437:fltk-1.3.4-1/jpeg/jccolor.c **** GLOBAL(void)
 438:fltk-1.3.4-1/jpeg/jccolor.c **** jinit_color_converter (j_compress_ptr cinfo)
 439:fltk-1.3.4-1/jpeg/jccolor.c **** {
 1195              		.loc 1 439 1 view -0
 1196              		.cfi_startproc
 1197              		.loc 1 439 1 is_stmt 0 view .LVU409
 1198 0000 F30F1EFA 		endbr64
 440:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert;
 1199              		.loc 1 440 3 is_stmt 1 view .LVU410
 441:fltk-1.3.4-1/jpeg/jccolor.c **** 
 442:fltk-1.3.4-1/jpeg/jccolor.c ****   cconvert = (my_cconvert_ptr)
 1200              		.loc 1 442 3 view .LVU411
 439:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert;
 1201              		.loc 1 439 1 is_stmt 0 view .LVU412
 1202 0004 55       		pushq	%rbp
 1203              		.cfi_def_cfa_offset 16
 1204              		.cfi_offset 6, -16
 443:fltk-1.3.4-1/jpeg/jccolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1205              		.loc 1 443 6 view .LVU413
 1206 0005 BA180000 		movl	$24, %edx
 1206      00
 439:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert;
 1207              		.loc 1 439 1 view .LVU414
 1208 000a 4889FD   		movq	%rdi, %rbp
 1209              		.loc 1 443 6 view .LVU415
 1210 000d BE010000 		movl	$1, %esi
 1210      00
 439:fltk-1.3.4-1/jpeg/jccolor.c ****   my_cconvert_ptr cconvert;
 1211              		.loc 1 439 1 view .LVU416
 1212 0012 53       		pushq	%rbx
 1213              		.cfi_def_cfa_offset 24
 1214              		.cfi_offset 3, -24
 1215 0013 4883EC08 		subq	$8, %rsp
 1216              		.cfi_def_cfa_offset 32
 1217              		.loc 1 443 6 view .LVU417
 1218 0017 488B4708 		movq	8(%rdi), %rax
 1219 001b FF10     		call	*(%rax)
 1220              	.LVL135:
 444:fltk-1.3.4-1/jpeg/jccolor.c **** 				SIZEOF(my_color_converter));
 445:fltk-1.3.4-1/jpeg/jccolor.c ****   cinfo->cconvert = &cconvert->pub;
 1221              		.loc 1 445 19 view .LVU418
 1222 001d 48898518 		movq	%rax, 536(%rbp)
 1222      020000
 443:fltk-1.3.4-1/jpeg/jccolor.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1223              		.loc 1 443 6 view .LVU419
 1224 0024 4889C3   		movq	%rax, %rbx
 1225              	.LVL136:
 1226              		.loc 1 445 3 is_stmt 1 view .LVU420
 446:fltk-1.3.4-1/jpeg/jccolor.c ****   /* set start_pass to null method until we find out differently */
 447:fltk-1.3.4-1/jpeg/jccolor.c ****   cconvert->pub.start_pass = null_method;
 1227              		.loc 1 447 3 view .LVU421
 1228              		.loc 1 447 28 is_stmt 0 view .LVU422
 1229 0027 488D0500 		leaq	null_method(%rip), %rax
 1229      000000
 1230              	.LVL137:
 1231              		.loc 1 447 28 view .LVU423
 1232 002e 488903   		movq	%rax, (%rbx)
 448:fltk-1.3.4-1/jpeg/jccolor.c **** 
 449:fltk-1.3.4-1/jpeg/jccolor.c ****   /* Make sure input_components agrees with in_color_space */
 450:fltk-1.3.4-1/jpeg/jccolor.c ****   switch (cinfo->in_color_space) {
 1233              		.loc 1 450 3 is_stmt 1 view .LVU424
 1234 0031 837D3C07 		cmpl	$7, 60(%rbp)
 1235 0035 0F878D00 		ja	.L86
 1235      0000
 1236 003b 8B453C   		movl	60(%rbp), %eax
 1237 003e 488D1500 		leaq	.L88(%rip), %rdx
 1237      000000
 1238 0045 48630482 		movslq	(%rdx,%rax,4), %rax
 1239 0049 4801D0   		addq	%rdx, %rax
 1240 004c 3EFFE0   		notrack jmp	*%rax
 1241              		.section	.rodata.jinit_color_converter,"a",@progbits
 1242              		.align 4
 1243              		.align 4
 1244              	.L88:
 1245 0000 00000000 		.long	.L86-.L88
 1246 0004 00000000 		.long	.L91-.L88
 1247 0008 00000000 		.long	.L87-.L88
 1248 000c 00000000 		.long	.L87-.L88
 1249 0010 00000000 		.long	.L90-.L88
 1250 0014 00000000 		.long	.L90-.L88
 1251 0018 00000000 		.long	.L87-.L88
 1252 001c 00000000 		.long	.L87-.L88
 1253              		.section	.text.jinit_color_converter
 1254 004f 90       		.p2align 4,,10
 1255              		.p2align 3
 1256              	.L87:
 451:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_GRAYSCALE:
 452:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->input_components != 1)
 453:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 454:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 455:fltk-1.3.4-1/jpeg/jccolor.c **** 
 456:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_RGB:
 457:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_BG_RGB:
 458:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->input_components != RGB_PIXELSIZE)
 459:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 460:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 461:fltk-1.3.4-1/jpeg/jccolor.c **** 
 462:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_YCbCr:
 463:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_BG_YCC:
 464:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->input_components != 3)
 1257              		.loc 1 464 5 view .LVU425
 1258              		.loc 1 464 8 is_stmt 0 view .LVU426
 1259 0050 837D3803 		cmpl	$3, 56(%rbp)
 1260 0054 7414     		je	.L92
 1261              	.L142:
 465:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 466:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 467:fltk-1.3.4-1/jpeg/jccolor.c **** 
 468:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_CMYK:
 469:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_YCCK:
 470:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->input_components != 4)
 471:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 472:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 473:fltk-1.3.4-1/jpeg/jccolor.c **** 
 474:fltk-1.3.4-1/jpeg/jccolor.c ****   default:			/* JCS_UNKNOWN can be anything */
 475:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->input_components < 1)
 476:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 1262              		.loc 1 476 7 is_stmt 1 view .LVU427
 1263 0056 488B4500 		movq	0(%rbp), %rax
 1264 005a 4889EF   		movq	%rbp, %rdi
 1265 005d C740280A 		movl	$10, 40(%rax)
 1265      000000
 1266 0064 488B4500 		movq	0(%rbp), %rax
 1267 0068 FF10     		call	*(%rax)
 1268              	.LVL138:
 1269              	.L92:
 477:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 478:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 479:fltk-1.3.4-1/jpeg/jccolor.c **** 
 480:fltk-1.3.4-1/jpeg/jccolor.c ****   /* Support color transform only for RGB colorspaces */
 481:fltk-1.3.4-1/jpeg/jccolor.c ****   if (cinfo->color_transform &&
 1270              		.loc 1 481 3 view .LVU428
 1271              		.loc 1 481 6 is_stmt 0 view .LVU429
 1272 006a 8B955401 		movl	340(%rbp), %edx
 1272      0000
 1273 0070 8B4560   		movl	96(%rbp), %eax
 1274 0073 85D2     		testl	%edx, %edx
 1275 0075 7421     		je	.L93
 1276              		.loc 1 481 30 discriminator 1 view .LVU430
 1277 0077 89C2     		movl	%eax, %edx
 1278 0079 83E2FB   		andl	$-5, %edx
 482:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->jpeg_color_space != JCS_RGB &&
 1279              		.loc 1 482 42 discriminator 1 view .LVU431
 1280 007c 83FA02   		cmpl	$2, %edx
 1281 007f 7417     		je	.L93
 483:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->jpeg_color_space != JCS_BG_RGB)
 484:fltk-1.3.4-1/jpeg/jccolor.c ****     ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 1282              		.loc 1 484 5 is_stmt 1 view .LVU432
 1283 0081 488B4500 		movq	0(%rbp), %rax
 1284 0085 4889EF   		movq	%rbp, %rdi
 1285 0088 C740281C 		movl	$28, 40(%rax)
 1285      000000
 1286 008f 488B4500 		movq	0(%rbp), %rax
 1287 0093 FF10     		call	*(%rax)
 1288              	.LVL139:
 1289 0095 8B4560   		movl	96(%rbp), %eax
 1290              	.L93:
 485:fltk-1.3.4-1/jpeg/jccolor.c **** 
 486:fltk-1.3.4-1/jpeg/jccolor.c ****   /* Check num_components, set conversion method based on requested space */
 487:fltk-1.3.4-1/jpeg/jccolor.c ****   switch (cinfo->jpeg_color_space) {
 1291              		.loc 1 487 3 view .LVU433
 1292 0098 83F807   		cmpl	$7, %eax
 1293 009b 0F87D701 		ja	.L94
 1293      0000
 1294 00a1 488D3500 		leaq	.L96(%rip), %rsi
 1294      000000
 1295 00a8 89C1     		movl	%eax, %ecx
 1296 00aa 4863148E 		movslq	(%rsi,%rcx,4), %rdx
 1297 00ae 4801F2   		addq	%rsi, %rdx
 1298 00b1 3EFFE2   		notrack jmp	*%rdx
 1299              		.section	.rodata.jinit_color_converter
 1300              		.align 4
 1301              		.align 4
 1302              	.L96:
 1303 0020 00000000 		.long	.L94-.L96
 1304 0024 00000000 		.long	.L101-.L96
 1305 0028 00000000 		.long	.L97-.L96
 1306 002c 00000000 		.long	.L100-.L96
 1307 0030 00000000 		.long	.L99-.L96
 1308 0034 00000000 		.long	.L98-.L96
 1309 0038 00000000 		.long	.L97-.L96
 1310 003c 00000000 		.long	.L95-.L96
 1311              		.section	.text.jinit_color_converter
 1312              		.p2align 4,,10
 1313 00b4 0F1F4000 		.p2align 3
 1314              	.L90:
 470:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 1315              		.loc 1 470 5 view .LVU434
 470:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 1316              		.loc 1 470 8 is_stmt 0 view .LVU435
 1317 00b8 837D3804 		cmpl	$4, 56(%rbp)
 1318 00bc 7598     		jne	.L142
 1319 00be EBAA     		jmp	.L92
 1320              		.p2align 4,,10
 1321              		.p2align 3
 1322              	.L91:
 452:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 1323              		.loc 1 452 5 is_stmt 1 view .LVU436
 452:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 1324              		.loc 1 452 8 is_stmt 0 view .LVU437
 1325 00c0 837D3801 		cmpl	$1, 56(%rbp)
 1326 00c4 7590     		jne	.L142
 1327 00c6 EBA2     		jmp	.L92
 1328              	.L86:
 475:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 1329              		.loc 1 475 5 is_stmt 1 view .LVU438
 475:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_IN_COLORSPACE);
 1330              		.loc 1 475 8 is_stmt 0 view .LVU439
 1331 00c8 8B4D38   		movl	56(%rbp), %ecx
 1332 00cb 85C9     		testl	%ecx, %ecx
 1333 00cd 7F9B     		jg	.L92
 1334 00cf EB85     		jmp	.L142
 1335              		.p2align 4,,10
 1336 00d1 0F1F8000 		.p2align 3
 1336      000000
 1337              	.L97:
 488:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_GRAYSCALE:
 489:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->num_components != 1)
 490:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 491:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 492:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_GRAYSCALE:
 493:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_YCbCr:
 494:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_BG_YCC:
 495:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = grayscale_convert;
 496:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 497:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 498:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.start_pass = rgb_ycc_start;
 499:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = rgb_gray_convert;
 500:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 501:fltk-1.3.4-1/jpeg/jccolor.c ****     default:
 502:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 503:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 504:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 505:fltk-1.3.4-1/jpeg/jccolor.c **** 
 506:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_RGB:
 507:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_BG_RGB:
 508:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->num_components != 3)
 1338              		.loc 1 508 5 is_stmt 1 view .LVU440
 1339              		.loc 1 508 8 is_stmt 0 view .LVU441
 1340 00d8 837D5C03 		cmpl	$3, 92(%rbp)
 1341 00dc 7417     		je	.L108
 509:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1342              		.loc 1 509 7 is_stmt 1 view .LVU442
 1343 00de 488B4500 		movq	0(%rbp), %rax
 1344 00e2 4889EF   		movq	%rbp, %rdi
 1345 00e5 C740280B 		movl	$11, 40(%rax)
 1345      000000
 1346 00ec 488B4500 		movq	0(%rbp), %rax
 1347 00f0 FF10     		call	*(%rax)
 1348              	.LVL140:
 1349 00f2 8B4560   		movl	96(%rbp), %eax
 1350              	.L108:
 510:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->in_color_space == cinfo->jpeg_color_space) {
 1351              		.loc 1 510 5 view .LVU443
 1352              		.loc 1 510 8 is_stmt 0 view .LVU444
 1353 00f5 39453C   		cmpl	%eax, 60(%rbp)
 1354 00f8 0F84B201 		je	.L145
 1354      0000
 1355              	.L140:
 511:fltk-1.3.4-1/jpeg/jccolor.c ****       switch (cinfo->color_transform) {
 512:fltk-1.3.4-1/jpeg/jccolor.c ****       case JCT_NONE:
 513:fltk-1.3.4-1/jpeg/jccolor.c **** 	cconvert->pub.color_convert = rgb_convert;
 514:fltk-1.3.4-1/jpeg/jccolor.c **** 	break;
 515:fltk-1.3.4-1/jpeg/jccolor.c ****       case JCT_SUBTRACT_GREEN:
 516:fltk-1.3.4-1/jpeg/jccolor.c **** 	cconvert->pub.color_convert = rgb_rgb1_convert;
 517:fltk-1.3.4-1/jpeg/jccolor.c **** 	break;
 518:fltk-1.3.4-1/jpeg/jccolor.c ****       default:
 519:fltk-1.3.4-1/jpeg/jccolor.c **** 	ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 520:fltk-1.3.4-1/jpeg/jccolor.c ****       }
 521:fltk-1.3.4-1/jpeg/jccolor.c ****     } else
 522:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 523:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 524:fltk-1.3.4-1/jpeg/jccolor.c **** 
 525:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_YCbCr:
 526:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->num_components != 3)
 527:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 528:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 529:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 530:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.start_pass = rgb_ycc_start;
 531:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = rgb_ycc_convert;
 532:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 533:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_YCbCr:
 534:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = null_convert;
 535:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 536:fltk-1.3.4-1/jpeg/jccolor.c ****     default:
 537:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 538:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 539:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 540:fltk-1.3.4-1/jpeg/jccolor.c **** 
 541:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_BG_YCC:
 542:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->num_components != 3)
 543:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 544:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 545:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 546:fltk-1.3.4-1/jpeg/jccolor.c ****       /* For conversion from normal RGB input to BG_YCC representation,
 547:fltk-1.3.4-1/jpeg/jccolor.c ****        * the Cb/Cr values are first computed as usual, and then
 548:fltk-1.3.4-1/jpeg/jccolor.c ****        * quantized further after DCT processing by a factor of
 549:fltk-1.3.4-1/jpeg/jccolor.c ****        * 2 in reference to the nominal quantization factor.
 550:fltk-1.3.4-1/jpeg/jccolor.c ****        */
 551:fltk-1.3.4-1/jpeg/jccolor.c ****       /* need quantization scale by factor of 2 after DCT */
 552:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[1].component_needed = TRUE;
 553:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 554:fltk-1.3.4-1/jpeg/jccolor.c ****       /* compute normal YCC first */
 555:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.start_pass = rgb_ycc_start;
 556:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = rgb_ycc_convert;
 557:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 558:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_YCbCr:
 559:fltk-1.3.4-1/jpeg/jccolor.c ****       /* need quantization scale by factor of 2 after DCT */
 560:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[1].component_needed = TRUE;
 561:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 562:fltk-1.3.4-1/jpeg/jccolor.c ****       /*FALLTHROUGH*/
 563:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_BG_YCC:
 564:fltk-1.3.4-1/jpeg/jccolor.c ****       /* Pass through for BG_YCC input */
 565:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = null_convert;
 566:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 567:fltk-1.3.4-1/jpeg/jccolor.c ****     default:
 568:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 569:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 570:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 571:fltk-1.3.4-1/jpeg/jccolor.c **** 
 572:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_CMYK:
 573:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->num_components != 4)
 574:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 575:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->in_color_space == JCS_CMYK)
 576:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = null_convert;
 577:fltk-1.3.4-1/jpeg/jccolor.c ****     else
 578:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 579:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 580:fltk-1.3.4-1/jpeg/jccolor.c **** 
 581:fltk-1.3.4-1/jpeg/jccolor.c ****   case JCS_YCCK:
 582:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->num_components != 4)
 583:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 584:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 585:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_CMYK:
 586:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.start_pass = rgb_ycc_start;
 587:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = cmyk_ycck_convert;
 588:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 589:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_YCCK:
 590:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = null_convert;
 591:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 592:fltk-1.3.4-1/jpeg/jccolor.c ****     default:
 593:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 1356              		.loc 1 593 7 is_stmt 1 view .LVU445
 1357 00fe 488B4500 		movq	0(%rbp), %rax
 1358 0102 4889EF   		movq	%rbp, %rdi
 1359 0105 C740281C 		movl	$28, 40(%rax)
 1359      000000
 1360 010c 488B4500 		movq	0(%rbp), %rax
 1361 0110 488B00   		movq	(%rax), %rax
 594:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 595:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 596:fltk-1.3.4-1/jpeg/jccolor.c **** 
 597:fltk-1.3.4-1/jpeg/jccolor.c ****   default:			/* allow null conversion of JCS_UNKNOWN */
 598:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->jpeg_color_space != cinfo->in_color_space ||
 599:fltk-1.3.4-1/jpeg/jccolor.c **** 	cinfo->num_components != cinfo->input_components)
 600:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_CONVERSION_NOTIMPL);
 601:fltk-1.3.4-1/jpeg/jccolor.c ****     cconvert->pub.color_convert = null_convert;
 602:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 603:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 604:fltk-1.3.4-1/jpeg/jccolor.c **** }
 1362              		.loc 1 604 1 is_stmt 0 view .LVU446
 1363 0113 4883C408 		addq	$8, %rsp
 1364              		.cfi_remember_state
 1365              		.cfi_def_cfa_offset 24
 1366 0117 5B       		popq	%rbx
 1367              		.cfi_def_cfa_offset 16
 1368              	.LVL141:
 1369              		.loc 1 604 1 view .LVU447
 1370 0118 5D       		popq	%rbp
 1371              		.cfi_def_cfa_offset 8
 1372              	.LVL142:
 593:fltk-1.3.4-1/jpeg/jccolor.c ****     }
 1373              		.loc 1 593 7 view .LVU448
 1374 0119 FFE0     		jmp	*%rax
 1375              	.LVL143:
 1376 011b 0F1F4400 		.p2align 4,,10
 1376      00
 1377              		.p2align 3
 1378              	.L101:
 1379              		.cfi_restore_state
 489:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1380              		.loc 1 489 5 is_stmt 1 view .LVU449
 489:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1381              		.loc 1 489 8 is_stmt 0 view .LVU450
 1382 0120 837D5C01 		cmpl	$1, 92(%rbp)
 1383 0124 7414     		je	.L102
 490:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 1384              		.loc 1 490 7 is_stmt 1 view .LVU451
 1385 0126 488B4500 		movq	0(%rbp), %rax
 1386 012a 4889EF   		movq	%rbp, %rdi
 1387 012d C740280B 		movl	$11, 40(%rax)
 1387      000000
 1388 0134 488B4500 		movq	0(%rbp), %rax
 1389 0138 FF10     		call	*(%rax)
 1390              	.LVL144:
 1391              	.L102:
 491:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_GRAYSCALE:
 1392              		.loc 1 491 5 view .LVU452
 491:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_GRAYSCALE:
 1393              		.loc 1 491 18 is_stmt 0 view .LVU453
 1394 013a 8B453C   		movl	60(%rbp), %eax
 1395 013d 83F802   		cmpl	$2, %eax
 1396 0140 0F84AA01 		je	.L103
 1396      0000
 1397 0146 0F864C01 		jbe	.L146
 1397      0000
 1398 014c 83E0FB   		andl	$-5, %eax
 1399 014f 83F803   		cmpl	$3, %eax
 1400 0152 75AA     		jne	.L140
 1401 0154 E9480100 		jmp	.L105
 1401      00
 1402 0159 0F1F8000 		.p2align 4,,10
 1402      000000
 1403              		.p2align 3
 1404              	.L95:
 542:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1405              		.loc 1 542 5 is_stmt 1 view .LVU454
 542:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1406              		.loc 1 542 8 is_stmt 0 view .LVU455
 1407 0160 837D5C03 		cmpl	$3, 92(%rbp)
 1408 0164 7414     		je	.L117
 543:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 1409              		.loc 1 543 7 is_stmt 1 view .LVU456
 1410 0166 488B4500 		movq	0(%rbp), %rax
 1411 016a 4889EF   		movq	%rbp, %rdi
 1412 016d C740280B 		movl	$11, 40(%rax)
 1412      000000
 1413 0174 488B4500 		movq	0(%rbp), %rax
 1414 0178 FF10     		call	*(%rax)
 1415              	.LVL145:
 1416              	.L117:
 544:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 1417              		.loc 1 544 5 view .LVU457
 544:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 1418              		.loc 1 544 18 is_stmt 0 view .LVU458
 1419 017a 8B453C   		movl	60(%rbp), %eax
 1420 017d 83F803   		cmpl	$3, %eax
 1421 0180 0F84AA01 		je	.L118
 1421      0000
 1422 0186 83F807   		cmpl	$7, %eax
 1423 0189 0F84A100 		je	.L128
 1423      0000
 1424 018f 83F802   		cmpl	$2, %eax
 1425 0192 0F8566FF 		jne	.L140
 1425      FFFF
 552:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 1426              		.loc 1 552 7 is_stmt 1 view .LVU459
 552:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 1427              		.loc 1 552 12 is_stmt 0 view .LVU460
 1428 0198 488B4568 		movq	104(%rbp), %rax
 552:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 1429              		.loc 1 552 44 view .LVU461
 1430 019c C7809400 		movl	$1, 148(%rax)
 1430      00000100 
 1430      0000
 553:fltk-1.3.4-1/jpeg/jccolor.c ****       /* compute normal YCC first */
 1431              		.loc 1 553 7 is_stmt 1 view .LVU462
 553:fltk-1.3.4-1/jpeg/jccolor.c ****       /* compute normal YCC first */
 1432              		.loc 1 553 12 is_stmt 0 view .LVU463
 1433 01a6 488B4568 		movq	104(%rbp), %rax
 553:fltk-1.3.4-1/jpeg/jccolor.c ****       /* compute normal YCC first */
 1434              		.loc 1 553 44 view .LVU464
 1435 01aa C780F400 		movl	$1, 244(%rax)
 1435      00000100 
 1435      0000
 1436              	.L143:
 555:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = rgb_ycc_convert;
 1437              		.loc 1 555 7 is_stmt 1 view .LVU465
 555:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = rgb_ycc_convert;
 1438              		.loc 1 555 32 is_stmt 0 view .LVU466
 1439 01b4 488D0500 		leaq	rgb_ycc_start(%rip), %rax
 1439      000000
 1440 01bb 488903   		movq	%rax, (%rbx)
 556:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1441              		.loc 1 556 7 is_stmt 1 view .LVU467
 556:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1442              		.loc 1 556 35 is_stmt 0 view .LVU468
 1443 01be 488D0500 		leaq	rgb_ycc_convert(%rip), %rax
 1443      000000
 1444 01c5 48894308 		movq	%rax, 8(%rbx)
 557:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_YCbCr:
 1445              		.loc 1 557 7 is_stmt 1 view .LVU469
 1446 01c9 EB70     		jmp	.L85
 1447 01cb 0F1F4400 		.p2align 4,,10
 1447      00
 1448              		.p2align 3
 1449              	.L99:
 573:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1450              		.loc 1 573 5 view .LVU470
 573:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1451              		.loc 1 573 8 is_stmt 0 view .LVU471
 1452 01d0 837D5C04 		cmpl	$4, 92(%rbp)
 1453 01d4 7414     		je	.L121
 574:fltk-1.3.4-1/jpeg/jccolor.c ****     if (cinfo->in_color_space == JCS_CMYK)
 1454              		.loc 1 574 7 is_stmt 1 view .LVU472
 1455 01d6 488B4500 		movq	0(%rbp), %rax
 1456 01da 4889EF   		movq	%rbp, %rdi
 1457 01dd C740280B 		movl	$11, 40(%rax)
 1457      000000
 1458 01e4 488B4500 		movq	0(%rbp), %rax
 1459 01e8 FF10     		call	*(%rax)
 1460              	.LVL146:
 1461              	.L121:
 575:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = null_convert;
 1462              		.loc 1 575 5 view .LVU473
 575:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = null_convert;
 1463              		.loc 1 575 8 is_stmt 0 view .LVU474
 1464 01ea 837D3C04 		cmpl	$4, 60(%rbp)
 1465 01ee 0F850AFF 		jne	.L140
 1465      FFFF
 1466 01f4 EB3A     		jmp	.L128
 1467 01f6 662E0F1F 		.p2align 4,,10
 1467      84000000 
 1467      0000
 1468              		.p2align 3
 1469              	.L98:
 582:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1470              		.loc 1 582 5 is_stmt 1 view .LVU475
 582:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1471              		.loc 1 582 8 is_stmt 0 view .LVU476
 1472 0200 837D5C04 		cmpl	$4, 92(%rbp)
 1473 0204 7414     		je	.L123
 583:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 1474              		.loc 1 583 7 is_stmt 1 view .LVU477
 1475 0206 488B4500 		movq	0(%rbp), %rax
 1476 020a 4889EF   		movq	%rbp, %rdi
 1477 020d C740280B 		movl	$11, 40(%rax)
 1477      000000
 1478 0214 488B4500 		movq	0(%rbp), %rax
 1479 0218 FF10     		call	*(%rax)
 1480              	.LVL147:
 1481              	.L123:
 584:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_CMYK:
 1482              		.loc 1 584 5 view .LVU478
 584:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_CMYK:
 1483              		.loc 1 584 18 is_stmt 0 view .LVU479
 1484 021a 8B453C   		movl	60(%rbp), %eax
 1485 021d 83F804   		cmpl	$4, %eax
 1486 0220 0F84EA00 		je	.L124
 1486      0000
 1487 0226 83F805   		cmpl	$5, %eax
 1488 0229 0F85CFFE 		jne	.L140
 1488      FFFF
 1489 022f 90       		.p2align 4,,10
 1490              		.p2align 3
 1491              	.L128:
 601:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 1492              		.loc 1 601 5 is_stmt 1 view .LVU480
 601:fltk-1.3.4-1/jpeg/jccolor.c ****     break;
 1493              		.loc 1 601 33 is_stmt 0 view .LVU481
 1494 0230 488D0500 		leaq	null_convert(%rip), %rax
 1494      000000
 1495 0237 48894308 		movq	%rax, 8(%rbx)
 602:fltk-1.3.4-1/jpeg/jccolor.c ****   }
 1496              		.loc 1 602 5 is_stmt 1 view .LVU482
 1497              	.L85:
 1498              		.loc 1 604 1 is_stmt 0 view .LVU483
 1499 023b 4883C408 		addq	$8, %rsp
 1500              		.cfi_remember_state
 1501              		.cfi_def_cfa_offset 24
 1502 023f 5B       		popq	%rbx
 1503              		.cfi_def_cfa_offset 16
 1504              	.LVL148:
 1505              		.loc 1 604 1 view .LVU484
 1506 0240 5D       		popq	%rbp
 1507              		.cfi_def_cfa_offset 8
 1508              	.LVL149:
 1509              		.loc 1 604 1 view .LVU485
 1510 0241 C3       		ret
 1511              	.LVL150:
 1512              		.p2align 4,,10
 1513 0242 660F1F44 		.p2align 3
 1513      0000
 1514              	.L100:
 1515              		.cfi_restore_state
 526:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1516              		.loc 1 526 5 is_stmt 1 view .LVU486
 526:fltk-1.3.4-1/jpeg/jccolor.c ****       ERREXIT(cinfo, JERR_BAD_J_COLORSPACE);
 1517              		.loc 1 526 8 is_stmt 0 view .LVU487
 1518 0248 837D5C03 		cmpl	$3, 92(%rbp)
 1519 024c 7414     		je	.L113
 527:fltk-1.3.4-1/jpeg/jccolor.c ****     switch (cinfo->in_color_space) {
 1520              		.loc 1 527 7 is_stmt 1 view .LVU488
 1521 024e 488B4500 		movq	0(%rbp), %rax
 1522 0252 4889EF   		movq	%rbp, %rdi
 1523 0255 C740280B 		movl	$11, 40(%rax)
 1523      000000
 1524 025c 488B4500 		movq	0(%rbp), %rax
 1525 0260 FF10     		call	*(%rax)
 1526              	.LVL151:
 1527              	.L113:
 528:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 1528              		.loc 1 528 5 view .LVU489
 528:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 1529              		.loc 1 528 18 is_stmt 0 view .LVU490
 1530 0262 8B453C   		movl	60(%rbp), %eax
 1531 0265 83F802   		cmpl	$2, %eax
 1532 0268 0F8446FF 		je	.L143
 1532      FFFF
 1533 026e 83F803   		cmpl	$3, %eax
 1534 0271 74BD     		je	.L128
 1535 0273 E986FEFF 		jmp	.L140
 1535      FF
 1536              	.L94:
 598:fltk-1.3.4-1/jpeg/jccolor.c **** 	cinfo->num_components != cinfo->input_components)
 1537              		.loc 1 598 5 is_stmt 1 view .LVU491
 598:fltk-1.3.4-1/jpeg/jccolor.c **** 	cinfo->num_components != cinfo->input_components)
 1538              		.loc 1 598 8 is_stmt 0 view .LVU492
 1539 0278 39453C   		cmpl	%eax, 60(%rbp)
 1540 027b 7463     		je	.L147
 1541              	.L127:
 600:fltk-1.3.4-1/jpeg/jccolor.c ****     cconvert->pub.color_convert = null_convert;
 1542              		.loc 1 600 7 is_stmt 1 view .LVU493
 1543 027d 488B4500 		movq	0(%rbp), %rax
 1544 0281 4889EF   		movq	%rbp, %rdi
 1545 0284 C740281C 		movl	$28, 40(%rax)
 1545      000000
 1546 028b 488B4500 		movq	0(%rbp), %rax
 1547 028f FF10     		call	*(%rax)
 1548              	.LVL152:
 1549 0291 EB9D     		jmp	.L128
 1550              		.p2align 4,,10
 1551 0293 0F1F4400 		.p2align 3
 1551      00
 1552              	.L146:
 600:fltk-1.3.4-1/jpeg/jccolor.c ****     cconvert->pub.color_convert = null_convert;
 1553              		.loc 1 600 7 is_stmt 0 view .LVU494
 1554 0298 83F801   		cmpl	$1, %eax
 1555 029b 0F855DFE 		jne	.L140
 1555      FFFF
 1556              	.L105:
 495:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1557              		.loc 1 495 7 is_stmt 1 view .LVU495
 495:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1558              		.loc 1 495 35 is_stmt 0 view .LVU496
 1559 02a1 488D0500 		leaq	grayscale_convert(%rip), %rax
 1559      000000
 1560 02a8 48894308 		movq	%rax, 8(%rbx)
 496:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_RGB:
 1561              		.loc 1 496 7 is_stmt 1 view .LVU497
 1562 02ac EB8D     		jmp	.L85
 1563 02ae 6690     		.p2align 4,,10
 1564              		.p2align 3
 1565              	.L145:
 511:fltk-1.3.4-1/jpeg/jccolor.c ****       case JCT_NONE:
 1566              		.loc 1 511 7 view .LVU498
 511:fltk-1.3.4-1/jpeg/jccolor.c ****       case JCT_NONE:
 1567              		.loc 1 511 20 is_stmt 0 view .LVU499
 1568 02b0 8B855401 		movl	340(%rbp), %eax
 1568      0000
 1569 02b6 85C0     		testl	%eax, %eax
 1570 02b8 0F849A00 		je	.L110
 1570      0000
 1571 02be 83F801   		cmpl	$1, %eax
 1572 02c1 0F8537FE 		jne	.L140
 1572      FFFF
 516:fltk-1.3.4-1/jpeg/jccolor.c **** 	break;
 1573              		.loc 1 516 2 is_stmt 1 view .LVU500
 516:fltk-1.3.4-1/jpeg/jccolor.c **** 	break;
 1574              		.loc 1 516 30 is_stmt 0 view .LVU501
 1575 02c7 488D0500 		leaq	rgb_rgb1_convert(%rip), %rax
 1575      000000
 1576 02ce 48894308 		movq	%rax, 8(%rbx)
 517:fltk-1.3.4-1/jpeg/jccolor.c ****       default:
 1577              		.loc 1 517 2 is_stmt 1 view .LVU502
 1578 02d2 E964FFFF 		jmp	.L85
 1578      FF
 1579 02d7 660F1F84 		.p2align 4,,10
 1579      00000000 
 1579      00
 1580              		.p2align 3
 1581              	.L147:
 598:fltk-1.3.4-1/jpeg/jccolor.c **** 	cinfo->num_components != cinfo->input_components)
 1582              		.loc 1 598 58 is_stmt 0 discriminator 1 view .LVU503
 1583 02e0 8B4538   		movl	56(%rbp), %eax
 1584 02e3 39455C   		cmpl	%eax, 92(%rbp)
 1585 02e6 7595     		jne	.L127
 1586 02e8 E943FFFF 		jmp	.L128
 1586      FF
 1587 02ed 0F1F00   		.p2align 4,,10
 1588              		.p2align 3
 1589              	.L103:
 498:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = rgb_gray_convert;
 1590              		.loc 1 498 7 is_stmt 1 view .LVU504
 498:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = rgb_gray_convert;
 1591              		.loc 1 498 32 is_stmt 0 view .LVU505
 1592 02f0 488D0500 		leaq	rgb_ycc_start(%rip), %rax
 1592      000000
 1593 02f7 488903   		movq	%rax, (%rbx)
 499:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1594              		.loc 1 499 7 is_stmt 1 view .LVU506
 499:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1595              		.loc 1 499 35 is_stmt 0 view .LVU507
 1596 02fa 488D0500 		leaq	rgb_gray_convert(%rip), %rax
 1596      000000
 1597 0301 48894308 		movq	%rax, 8(%rbx)
 500:fltk-1.3.4-1/jpeg/jccolor.c ****     default:
 1598              		.loc 1 500 7 is_stmt 1 view .LVU508
 1599 0305 E931FFFF 		jmp	.L85
 1599      FF
 1600 030a 660F1F44 		.p2align 4,,10
 1600      0000
 1601              		.p2align 3
 1602              	.L124:
 586:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = cmyk_ycck_convert;
 1603              		.loc 1 586 7 view .LVU509
 586:fltk-1.3.4-1/jpeg/jccolor.c ****       cconvert->pub.color_convert = cmyk_ycck_convert;
 1604              		.loc 1 586 32 is_stmt 0 view .LVU510
 1605 0310 488D0500 		leaq	rgb_ycc_start(%rip), %rax
 1605      000000
 1606 0317 488903   		movq	%rax, (%rbx)
 587:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1607              		.loc 1 587 7 is_stmt 1 view .LVU511
 587:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1608              		.loc 1 587 35 is_stmt 0 view .LVU512
 1609 031a 488D0500 		leaq	cmyk_ycck_convert(%rip), %rax
 1609      000000
 1610 0321 48894308 		movq	%rax, 8(%rbx)
 588:fltk-1.3.4-1/jpeg/jccolor.c ****     case JCS_YCCK:
 1611              		.loc 1 588 7 is_stmt 1 view .LVU513
 1612 0325 E911FFFF 		jmp	.L85
 1612      FF
 1613 032a 660F1F44 		.p2align 4,,10
 1613      0000
 1614              		.p2align 3
 1615              	.L118:
 560:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 1616              		.loc 1 560 7 view .LVU514
 560:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 1617              		.loc 1 560 12 is_stmt 0 view .LVU515
 1618 0330 488B4568 		movq	104(%rbp), %rax
 560:fltk-1.3.4-1/jpeg/jccolor.c ****       cinfo->comp_info[2].component_needed = TRUE;
 1619              		.loc 1 560 44 view .LVU516
 1620 0334 C7809400 		movl	$1, 148(%rax)
 1620      00000100 
 1620      0000
 561:fltk-1.3.4-1/jpeg/jccolor.c ****       /*FALLTHROUGH*/
 1621              		.loc 1 561 7 is_stmt 1 view .LVU517
 561:fltk-1.3.4-1/jpeg/jccolor.c ****       /*FALLTHROUGH*/
 1622              		.loc 1 561 12 is_stmt 0 view .LVU518
 1623 033e 488B4568 		movq	104(%rbp), %rax
 561:fltk-1.3.4-1/jpeg/jccolor.c ****       /*FALLTHROUGH*/
 1624              		.loc 1 561 44 view .LVU519
 1625 0342 C780F400 		movl	$1, 244(%rax)
 1625      00000100 
 1625      0000
 565:fltk-1.3.4-1/jpeg/jccolor.c ****       break;
 1626              		.loc 1 565 7 is_stmt 1 view .LVU520
 1627 034c E9DFFEFF 		jmp	.L128
 1627      FF
 1628              		.p2align 4,,10
 1629 0351 0F1F8000 		.p2align 3
 1629      000000
 1630              	.L110:
 513:fltk-1.3.4-1/jpeg/jccolor.c **** 	break;
 1631              		.loc 1 513 2 view .LVU521
 513:fltk-1.3.4-1/jpeg/jccolor.c **** 	break;
 1632              		.loc 1 513 30 is_stmt 0 view .LVU522
 1633 0358 488D0500 		leaq	rgb_convert(%rip), %rax
 1633      000000
 1634 035f 48894308 		movq	%rax, 8(%rbx)
 514:fltk-1.3.4-1/jpeg/jccolor.c ****       case JCT_SUBTRACT_GREEN:
 1635              		.loc 1 514 2 is_stmt 1 view .LVU523
 1636 0363 E9D3FEFF 		jmp	.L85
 1636      FF
 1637              		.cfi_endproc
 1638              	.LFE60:
 1640              		.text
 1641              	.Letext0:
 1642              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 1643              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 1644              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 1645              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 1646              		.file 6 "/usr/include/stdio.h"
 1647              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 1648              		.file 8 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 1649              		.file 9 "fltk-1.3.4-1/jpeg/jpeglib.h"
 1650              		.file 10 "fltk-1.3.4-1/jpeg/jpegint.h"
 1651              		.file 11 "fltk-1.3.4-1/jpeg/jerror.h"
 15249              		.section	.note.gnu.property,"a"
 15250              		.align 8
 15251 0000 04000000 		.long	 1f - 0f
 15252 0004 10000000 		.long	 4f - 1f
 15253 0008 05000000 		.long	 5
 15254              	0:
 15255 000c 474E5500 		.string	 "GNU"
 15256              	1:
 15257              		.align 8
 15258 0010 020000C0 		.long	 0xc0000002
 15259 0014 04000000 		.long	 3f - 2f
 15260              	2:
 15261 0018 03000000 		.long	 0x3
 15262              	3:
 15263 001c 00000000 		.align 8
 15264              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jccolor.c
     /tmp/ccbOjIJh.s:7      .text.rgb_ycc_start:0000000000000000 rgb_ycc_start
     /tmp/ccbOjIJh.s:101    .text.rgb_ycc_convert:0000000000000000 rgb_ycc_convert
     /tmp/ccbOjIJh.s:284    .text.rgb_gray_convert:0000000000000000 rgb_gray_convert
     /tmp/ccbOjIJh.s:414    .text.cmyk_ycck_convert:0000000000000000 cmyk_ycck_convert
     /tmp/ccbOjIJh.s:632    .text.rgb_rgb1_convert:0000000000000000 rgb_rgb1_convert
     /tmp/ccbOjIJh.s:788    .text.grayscale_convert:0000000000000000 grayscale_convert
     /tmp/ccbOjIJh.s:889    .text.rgb_convert:0000000000000000 rgb_convert
     /tmp/ccbOjIJh.s:1013   .text.null_convert:0000000000000000 null_convert
     /tmp/ccbOjIJh.s:1176   .text.null_method:0000000000000000 null_method
     /tmp/ccbOjIJh.s:1192   .text.jinit_color_converter:0000000000000000 jinit_color_converter
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

NO UNDEFINED SYMBOLS
