   1              		.file	"jdpostct.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.start_pass_dpost,"ax",@progbits
   5              		.p2align 4
   7              	start_pass_dpost:
   8              	.LVL0:
   9              	.LFB51:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jdpostct.c"
   1:fltk-1.3.4-1/jpeg/jdpostct.c **** /*
   2:fltk-1.3.4-1/jpeg/jdpostct.c ****  * jdpostct.c
   3:fltk-1.3.4-1/jpeg/jdpostct.c ****  *
   4:fltk-1.3.4-1/jpeg/jdpostct.c ****  * Copyright (C) 1994-1996, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jdpostct.c ****  * This file is part of the Independent JPEG Group's software.
   6:fltk-1.3.4-1/jpeg/jdpostct.c ****  * For conditions of distribution and use, see the accompanying README file.
   7:fltk-1.3.4-1/jpeg/jdpostct.c ****  *
   8:fltk-1.3.4-1/jpeg/jdpostct.c ****  * This file contains the decompression postprocessing controller.
   9:fltk-1.3.4-1/jpeg/jdpostct.c ****  * This controller manages the upsampling, color conversion, and color
  10:fltk-1.3.4-1/jpeg/jdpostct.c ****  * quantization/reduction steps; specifically, it controls the buffering
  11:fltk-1.3.4-1/jpeg/jdpostct.c ****  * between upsample/color conversion and color quantization/reduction.
  12:fltk-1.3.4-1/jpeg/jdpostct.c ****  *
  13:fltk-1.3.4-1/jpeg/jdpostct.c ****  * If no color quantization/reduction is required, then this module has no
  14:fltk-1.3.4-1/jpeg/jdpostct.c ****  * work to do, and it just hands off to the upsample/color conversion code.
  15:fltk-1.3.4-1/jpeg/jdpostct.c ****  * An integrated upsample/convert/quantize process would replace this module
  16:fltk-1.3.4-1/jpeg/jdpostct.c ****  * entirely.
  17:fltk-1.3.4-1/jpeg/jdpostct.c ****  */
  18:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  19:fltk-1.3.4-1/jpeg/jdpostct.c **** #define JPEG_INTERNALS
  20:fltk-1.3.4-1/jpeg/jdpostct.c **** #include "jinclude.h"
  21:fltk-1.3.4-1/jpeg/jdpostct.c **** #include "jpeglib.h"
  22:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  23:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  24:fltk-1.3.4-1/jpeg/jdpostct.c **** /* Private buffer controller object */
  25:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  26:fltk-1.3.4-1/jpeg/jdpostct.c **** typedef struct {
  27:fltk-1.3.4-1/jpeg/jdpostct.c ****   struct jpeg_d_post_controller pub; /* public fields */
  28:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  29:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Color quantization source buffer: this holds output data from
  30:fltk-1.3.4-1/jpeg/jdpostct.c ****    * the upsample/color conversion step to be passed to the quantizer.
  31:fltk-1.3.4-1/jpeg/jdpostct.c ****    * For two-pass color quantization, we need a full-image buffer;
  32:fltk-1.3.4-1/jpeg/jdpostct.c ****    * for one-pass operation, a strip buffer is sufficient.
  33:fltk-1.3.4-1/jpeg/jdpostct.c ****    */
  34:fltk-1.3.4-1/jpeg/jdpostct.c ****   jvirt_sarray_ptr whole_image;	/* virtual array, or NULL if one-pass */
  35:fltk-1.3.4-1/jpeg/jdpostct.c ****   JSAMPARRAY buffer;		/* strip buffer, or current strip of virtual */
  36:fltk-1.3.4-1/jpeg/jdpostct.c ****   JDIMENSION strip_height;	/* buffer size in rows */
  37:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* for two-pass mode only: */
  38:fltk-1.3.4-1/jpeg/jdpostct.c ****   JDIMENSION starting_row;	/* row # of first row in current strip */
  39:fltk-1.3.4-1/jpeg/jdpostct.c ****   JDIMENSION next_row;		/* index of next row to fill/empty in strip */
  40:fltk-1.3.4-1/jpeg/jdpostct.c **** } my_post_controller;
  41:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  42:fltk-1.3.4-1/jpeg/jdpostct.c **** typedef my_post_controller * my_post_ptr;
  43:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  44:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  45:fltk-1.3.4-1/jpeg/jdpostct.c **** /* Forward declarations */
  46:fltk-1.3.4-1/jpeg/jdpostct.c **** METHODDEF(void) post_process_1pass
  47:fltk-1.3.4-1/jpeg/jdpostct.c **** 	JPP((j_decompress_ptr cinfo,
  48:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr,
  49:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JDIMENSION in_row_groups_avail,
  50:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,
  51:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JDIMENSION out_rows_avail));
  52:fltk-1.3.4-1/jpeg/jdpostct.c **** #ifdef QUANT_2PASS_SUPPORTED
  53:fltk-1.3.4-1/jpeg/jdpostct.c **** METHODDEF(void) post_process_prepass
  54:fltk-1.3.4-1/jpeg/jdpostct.c **** 	JPP((j_decompress_ptr cinfo,
  55:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr,
  56:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JDIMENSION in_row_groups_avail,
  57:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,
  58:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JDIMENSION out_rows_avail));
  59:fltk-1.3.4-1/jpeg/jdpostct.c **** METHODDEF(void) post_process_2pass
  60:fltk-1.3.4-1/jpeg/jdpostct.c **** 	JPP((j_decompress_ptr cinfo,
  61:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr,
  62:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JDIMENSION in_row_groups_avail,
  63:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,
  64:fltk-1.3.4-1/jpeg/jdpostct.c **** 	     JDIMENSION out_rows_avail));
  65:fltk-1.3.4-1/jpeg/jdpostct.c **** #endif
  66:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  67:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  68:fltk-1.3.4-1/jpeg/jdpostct.c **** /*
  69:fltk-1.3.4-1/jpeg/jdpostct.c ****  * Initialize for a processing pass.
  70:fltk-1.3.4-1/jpeg/jdpostct.c ****  */
  71:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  72:fltk-1.3.4-1/jpeg/jdpostct.c **** METHODDEF(void)
  73:fltk-1.3.4-1/jpeg/jdpostct.c **** start_pass_dpost (j_decompress_ptr cinfo, J_BUF_MODE pass_mode)
  74:fltk-1.3.4-1/jpeg/jdpostct.c **** {
  11              		.loc 1 74 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 74 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
  75:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
  15              		.loc 1 75 3 is_stmt 1 view .LVU2
  74:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
  16              		.loc 1 74 1 is_stmt 0 view .LVU3
  17 0004 53       		pushq	%rbx
  18              		.cfi_def_cfa_offset 16
  19              		.cfi_offset 3, -16
  20              		.loc 1 75 15 view .LVU4
  21 0005 488B9F58 		movq	600(%rdi), %rbx
  21      020000
  22              	.LVL1:
  76:fltk-1.3.4-1/jpeg/jdpostct.c **** 
  77:fltk-1.3.4-1/jpeg/jdpostct.c ****   switch (pass_mode) {
  23              		.loc 1 77 3 is_stmt 1 view .LVU5
  24 000c 83FE02   		cmpl	$2, %esi
  25 000f 742F     		je	.L2
  26 0011 83FE03   		cmpl	$3, %esi
  27 0014 0F847E00 		je	.L3
  27      0000
  28 001a 85F6     		testl	%esi, %esi
  29 001c 7442     		je	.L11
  78:fltk-1.3.4-1/jpeg/jdpostct.c ****   case JBUF_PASS_THRU:
  79:fltk-1.3.4-1/jpeg/jdpostct.c ****     if (cinfo->quantize_colors) {
  80:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* Single-pass processing with color quantization. */
  81:fltk-1.3.4-1/jpeg/jdpostct.c ****       post->pub.post_process_data = post_process_1pass;
  82:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* We could be doing buffered-image output before starting a 2-pass
  83:fltk-1.3.4-1/jpeg/jdpostct.c ****        * color quantization; in that case, jinit_d_post_controller did not
  84:fltk-1.3.4-1/jpeg/jdpostct.c ****        * allocate a strip buffer.  Use the virtual-array buffer as workspace.
  85:fltk-1.3.4-1/jpeg/jdpostct.c ****        */
  86:fltk-1.3.4-1/jpeg/jdpostct.c ****       if (post->buffer == NULL) {
  87:fltk-1.3.4-1/jpeg/jdpostct.c **** 	post->buffer = (*cinfo->mem->access_virt_sarray)
  88:fltk-1.3.4-1/jpeg/jdpostct.c **** 	  ((j_common_ptr) cinfo, post->whole_image,
  89:fltk-1.3.4-1/jpeg/jdpostct.c **** 	   (JDIMENSION) 0, post->strip_height, TRUE);
  90:fltk-1.3.4-1/jpeg/jdpostct.c ****       }
  91:fltk-1.3.4-1/jpeg/jdpostct.c ****     } else {
  92:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* For single-pass processing without color quantization,
  93:fltk-1.3.4-1/jpeg/jdpostct.c ****        * I have no work to do; just call the upsampler directly.
  94:fltk-1.3.4-1/jpeg/jdpostct.c ****        */
  95:fltk-1.3.4-1/jpeg/jdpostct.c ****       post->pub.post_process_data = cinfo->upsample->upsample;
  96:fltk-1.3.4-1/jpeg/jdpostct.c ****     }
  97:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
  98:fltk-1.3.4-1/jpeg/jdpostct.c **** #ifdef QUANT_2PASS_SUPPORTED
  99:fltk-1.3.4-1/jpeg/jdpostct.c ****   case JBUF_SAVE_AND_PASS:
 100:fltk-1.3.4-1/jpeg/jdpostct.c ****     /* First pass of 2-pass quantization */
 101:fltk-1.3.4-1/jpeg/jdpostct.c ****     if (post->whole_image == NULL)
 102:fltk-1.3.4-1/jpeg/jdpostct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 103:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->pub.post_process_data = post_process_prepass;
 104:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
 105:fltk-1.3.4-1/jpeg/jdpostct.c ****   case JBUF_CRANK_DEST:
 106:fltk-1.3.4-1/jpeg/jdpostct.c ****     /* Second pass of 2-pass quantization */
 107:fltk-1.3.4-1/jpeg/jdpostct.c ****     if (post->whole_image == NULL)
 108:fltk-1.3.4-1/jpeg/jdpostct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 109:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->pub.post_process_data = post_process_2pass;
 110:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
 111:fltk-1.3.4-1/jpeg/jdpostct.c **** #endif /* QUANT_2PASS_SUPPORTED */
 112:fltk-1.3.4-1/jpeg/jdpostct.c ****   default:
 113:fltk-1.3.4-1/jpeg/jdpostct.c ****     ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
  30              		.loc 1 113 5 view .LVU6
  31 001e 488B07   		movq	(%rdi), %rax
  32 0021 C7402803 		movl	$3, 40(%rax)
  32      000000
  33 0028 488B07   		movq	(%rdi), %rax
  34 002b FF10     		call	*(%rax)
  35              	.LVL2:
 114:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
  36              		.loc 1 114 5 view .LVU7
  37              	.L6:
 115:fltk-1.3.4-1/jpeg/jdpostct.c ****   }
 116:fltk-1.3.4-1/jpeg/jdpostct.c ****   post->starting_row = post->next_row = 0;
  38              		.loc 1 116 3 view .LVU8
  39              		.loc 1 116 22 is_stmt 0 view .LVU9
  40 002d 48C74324 		movq	$0, 36(%rbx)
  40      00000000 
 117:fltk-1.3.4-1/jpeg/jdpostct.c **** }
  41              		.loc 1 117 1 view .LVU10
  42 0035 5B       		popq	%rbx
  43              		.cfi_remember_state
  44              		.cfi_def_cfa_offset 8
  45              	.LVL3:
  46              		.loc 1 117 1 view .LVU11
  47 0036 C3       		ret
  48              	.LVL4:
  49 0037 660F1F84 		.p2align 4,,10
  49      00000000 
  49      00
  50              		.p2align 3
  51              	.L2:
  52              		.cfi_restore_state
 107:fltk-1.3.4-1/jpeg/jdpostct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
  53              		.loc 1 107 5 is_stmt 1 view .LVU12
 107:fltk-1.3.4-1/jpeg/jdpostct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
  54              		.loc 1 107 8 is_stmt 0 view .LVU13
  55 0040 48837B10 		cmpq	$0, 16(%rbx)
  55      00
  56 0045 0F848D00 		je	.L12
  56      0000
  57              	.LVL5:
  58              	.L8:
 109:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
  59              		.loc 1 109 5 is_stmt 1 view .LVU14
 109:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
  60              		.loc 1 109 33 is_stmt 0 view .LVU15
  61 004b 488D0500 		leaq	post_process_2pass(%rip), %rax
  61      000000
 116:fltk-1.3.4-1/jpeg/jdpostct.c **** }
  62              		.loc 1 116 22 view .LVU16
  63 0052 48C74324 		movq	$0, 36(%rbx)
  63      00000000 
 109:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
  64              		.loc 1 109 33 view .LVU17
  65 005a 48894308 		movq	%rax, 8(%rbx)
 110:fltk-1.3.4-1/jpeg/jdpostct.c **** #endif /* QUANT_2PASS_SUPPORTED */
  66              		.loc 1 110 5 is_stmt 1 view .LVU18
 116:fltk-1.3.4-1/jpeg/jdpostct.c **** }
  67              		.loc 1 116 3 view .LVU19
  68              		.loc 1 117 1 is_stmt 0 view .LVU20
  69 005e 5B       		popq	%rbx
  70              		.cfi_remember_state
  71              		.cfi_def_cfa_offset 8
  72              	.LVL6:
  73              		.loc 1 117 1 view .LVU21
  74 005f C3       		ret
  75              	.LVL7:
  76              		.p2align 4,,10
  77              		.p2align 3
  78              	.L11:
  79              		.cfi_restore_state
  79:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* Single-pass processing with color quantization. */
  80              		.loc 1 79 5 is_stmt 1 view .LVU22
  79:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* Single-pass processing with color quantization. */
  81              		.loc 1 79 8 is_stmt 0 view .LVU23
  82 0060 8B476C   		movl	108(%rdi), %eax
  83 0063 85C0     		testl	%eax, %eax
  84 0065 7451     		je	.L5
  81:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* We could be doing buffered-image output before starting a 2-pass
  85              		.loc 1 81 7 is_stmt 1 view .LVU24
  81:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* We could be doing buffered-image output before starting a 2-pass
  86              		.loc 1 81 35 is_stmt 0 view .LVU25
  87 0067 488D0500 		leaq	post_process_1pass(%rip), %rax
  87      000000
  86:fltk-1.3.4-1/jpeg/jdpostct.c **** 	post->buffer = (*cinfo->mem->access_virt_sarray)
  88              		.loc 1 86 10 view .LVU26
  89 006e 48837B18 		cmpq	$0, 24(%rbx)
  89      00
  81:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* We could be doing buffered-image output before starting a 2-pass
  90              		.loc 1 81 35 view .LVU27
  91 0073 48894308 		movq	%rax, 8(%rbx)
  86:fltk-1.3.4-1/jpeg/jdpostct.c **** 	post->buffer = (*cinfo->mem->access_virt_sarray)
  92              		.loc 1 86 7 is_stmt 1 view .LVU28
  86:fltk-1.3.4-1/jpeg/jdpostct.c **** 	post->buffer = (*cinfo->mem->access_virt_sarray)
  93              		.loc 1 86 10 is_stmt 0 view .LVU29
  94 0077 75B4     		jne	.L6
  87:fltk-1.3.4-1/jpeg/jdpostct.c **** 	  ((j_common_ptr) cinfo, post->whole_image,
  95              		.loc 1 87 2 is_stmt 1 view .LVU30
  87:fltk-1.3.4-1/jpeg/jdpostct.c **** 	  ((j_common_ptr) cinfo, post->whole_image,
  96              		.loc 1 87 18 is_stmt 0 view .LVU31
  97 0079 488B4708 		movq	8(%rdi), %rax
  98 007d 8B4B20   		movl	32(%rbx), %ecx
  99 0080 41B80100 		movl	$1, %r8d
  99      0000
 100 0086 31D2     		xorl	%edx, %edx
 101 0088 488B7310 		movq	16(%rbx), %rsi
 102              	.LVL8:
  87:fltk-1.3.4-1/jpeg/jdpostct.c **** 	  ((j_common_ptr) cinfo, post->whole_image,
 103              		.loc 1 87 18 view .LVU32
 104 008c FF5038   		call	*56(%rax)
 105              	.LVL9:
  87:fltk-1.3.4-1/jpeg/jdpostct.c **** 	  ((j_common_ptr) cinfo, post->whole_image,
 106              		.loc 1 87 15 view .LVU33
 107 008f 48894318 		movq	%rax, 24(%rbx)
 108 0093 EB98     		jmp	.L6
 109              	.LVL10:
 110              		.p2align 4,,10
 111 0095 0F1F00   		.p2align 3
 112              	.L3:
 101:fltk-1.3.4-1/jpeg/jdpostct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 113              		.loc 1 101 5 is_stmt 1 view .LVU34
 101:fltk-1.3.4-1/jpeg/jdpostct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 114              		.loc 1 101 8 is_stmt 0 view .LVU35
 115 0098 48837B10 		cmpq	$0, 16(%rbx)
 115      00
 116 009d 7451     		je	.L13
 117              	.LVL11:
 118              	.L7:
 103:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
 119              		.loc 1 103 5 is_stmt 1 view .LVU36
 103:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
 120              		.loc 1 103 33 is_stmt 0 view .LVU37
 121 009f 488D0500 		leaq	post_process_prepass(%rip), %rax
 121      000000
 116:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 122              		.loc 1 116 22 view .LVU38
 123 00a6 48C74324 		movq	$0, 36(%rbx)
 123      00000000 
 103:fltk-1.3.4-1/jpeg/jdpostct.c ****     break;
 124              		.loc 1 103 33 view .LVU39
 125 00ae 48894308 		movq	%rax, 8(%rbx)
 104:fltk-1.3.4-1/jpeg/jdpostct.c ****   case JBUF_CRANK_DEST:
 126              		.loc 1 104 5 is_stmt 1 view .LVU40
 116:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 127              		.loc 1 116 3 view .LVU41
 128              		.loc 1 117 1 is_stmt 0 view .LVU42
 129 00b2 5B       		popq	%rbx
 130              		.cfi_remember_state
 131              		.cfi_def_cfa_offset 8
 132              	.LVL12:
 133              		.loc 1 117 1 view .LVU43
 134 00b3 C3       		ret
 135              	.LVL13:
 136              		.p2align 4,,10
 137 00b4 0F1F4000 		.p2align 3
 138              	.L5:
 139              		.cfi_restore_state
  95:fltk-1.3.4-1/jpeg/jdpostct.c ****     }
 140              		.loc 1 95 7 is_stmt 1 view .LVU44
  95:fltk-1.3.4-1/jpeg/jdpostct.c ****     }
 141              		.loc 1 95 52 is_stmt 0 view .LVU45
 142 00b8 488B8780 		movq	640(%rdi), %rax
 142      020000
 143 00bf 488B4008 		movq	8(%rax), %rax
 116:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 144              		.loc 1 116 22 view .LVU46
 145 00c3 48C74324 		movq	$0, 36(%rbx)
 145      00000000 
  95:fltk-1.3.4-1/jpeg/jdpostct.c ****     }
 146              		.loc 1 95 35 view .LVU47
 147 00cb 48894308 		movq	%rax, 8(%rbx)
 116:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 148              		.loc 1 116 3 is_stmt 1 view .LVU48
 149              		.loc 1 117 1 is_stmt 0 view .LVU49
 150 00cf 5B       		popq	%rbx
 151              		.cfi_remember_state
 152              		.cfi_def_cfa_offset 8
 153              	.LVL14:
 154              		.loc 1 117 1 view .LVU50
 155 00d0 C3       		ret
 156              	.LVL15:
 157              		.p2align 4,,10
 158 00d1 0F1F8000 		.p2align 3
 158      000000
 159              	.L12:
 160              		.cfi_restore_state
 108:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->pub.post_process_data = post_process_2pass;
 161              		.loc 1 108 7 is_stmt 1 view .LVU51
 162 00d8 488B07   		movq	(%rdi), %rax
 163 00db C7402803 		movl	$3, 40(%rax)
 163      000000
 164 00e2 488B07   		movq	(%rdi), %rax
 165 00e5 FF10     		call	*(%rax)
 166              	.LVL16:
 108:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->pub.post_process_data = post_process_2pass;
 167              		.loc 1 108 7 is_stmt 0 view .LVU52
 168 00e7 E95FFFFF 		jmp	.L8
 168      FF
 169              	.LVL17:
 170 00ec 0F1F4000 		.p2align 4,,10
 171              		.p2align 3
 172              	.L13:
 102:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->pub.post_process_data = post_process_prepass;
 173              		.loc 1 102 7 is_stmt 1 view .LVU53
 174 00f0 488B07   		movq	(%rdi), %rax
 175 00f3 C7402803 		movl	$3, 40(%rax)
 175      000000
 176 00fa 488B07   		movq	(%rdi), %rax
 177 00fd FF10     		call	*(%rax)
 178              	.LVL18:
 102:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->pub.post_process_data = post_process_prepass;
 179              		.loc 1 102 7 is_stmt 0 view .LVU54
 180 00ff EB9E     		jmp	.L7
 181              		.cfi_endproc
 182              	.LFE51:
 184              		.section	.text.post_process_1pass,"ax",@progbits
 185              		.p2align 4
 187              	post_process_1pass:
 188              	.LVL19:
 189              	.LFB52:
 118:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 119:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 120:fltk-1.3.4-1/jpeg/jdpostct.c **** /*
 121:fltk-1.3.4-1/jpeg/jdpostct.c ****  * Process some data in the one-pass (strip buffer) case.
 122:fltk-1.3.4-1/jpeg/jdpostct.c ****  * This is used for color precision reduction as well as one-pass quantization.
 123:fltk-1.3.4-1/jpeg/jdpostct.c ****  */
 124:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 125:fltk-1.3.4-1/jpeg/jdpostct.c **** METHODDEF(void)
 126:fltk-1.3.4-1/jpeg/jdpostct.c **** post_process_1pass (j_decompress_ptr cinfo,
 127:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr,
 128:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JDIMENSION in_row_groups_avail,
 129:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,
 130:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JDIMENSION out_rows_avail)
 131:fltk-1.3.4-1/jpeg/jdpostct.c **** {
 190              		.loc 1 131 1 is_stmt 1 view -0
 191              		.cfi_startproc
 192              		.loc 1 131 1 is_stmt 0 view .LVU56
 193 0000 F30F1EFA 		endbr64
 194 0004 4155     		pushq	%r13
 195              		.cfi_def_cfa_offset 16
 196              		.cfi_offset 13, -16
 197 0006 4D89C5   		movq	%r8, %r13
 198 0009 4154     		pushq	%r12
 199              		.cfi_def_cfa_offset 24
 200              		.cfi_offset 12, -24
 201 000b 55       		pushq	%rbp
 202              		.cfi_def_cfa_offset 32
 203              		.cfi_offset 6, -32
 204 000c 4889FD   		movq	%rdi, %rbp
 205 000f 53       		pushq	%rbx
 206              		.cfi_def_cfa_offset 40
 207              		.cfi_offset 3, -40
 208 0010 4C89CB   		movq	%r9, %rbx
 209 0013 4883EC20 		subq	$32, %rsp
 210              		.cfi_def_cfa_offset 72
 132:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
 211              		.loc 1 132 15 view .LVU57
 212 0017 4C8BA758 		movq	600(%rdi), %r12
 212      020000
 133:fltk-1.3.4-1/jpeg/jdpostct.c ****   JDIMENSION num_rows, max_rows;
 134:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 135:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Fill the buffer, but not more than what we can dump out in one go. */
 136:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Note we rely on the upsampler to detect bottom of image. */
 137:fltk-1.3.4-1/jpeg/jdpostct.c ****   max_rows = out_rows_avail - *out_row_ctr;
 138:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (max_rows > post->strip_height)
 139:fltk-1.3.4-1/jpeg/jdpostct.c ****     max_rows = post->strip_height;
 140:fltk-1.3.4-1/jpeg/jdpostct.c ****   num_rows = 0;
 141:fltk-1.3.4-1/jpeg/jdpostct.c ****   (*cinfo->upsample->upsample) (cinfo,
 213              		.loc 1 141 4 view .LVU58
 214 001e 4C8B9780 		movq	640(%rdi), %r10
 214      020000
 131:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
 215              		.loc 1 131 1 view .LVU59
 216 0025 64488B04 		movq	%fs:40, %rax
 216      25280000 
 216      00
 217 002e 48894424 		movq	%rax, 16(%rsp)
 217      10
 218 0033 31C0     		xorl	%eax, %eax
 132:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
 219              		.loc 1 132 3 is_stmt 1 view .LVU60
 220              	.LVL20:
 133:fltk-1.3.4-1/jpeg/jdpostct.c ****   JDIMENSION num_rows, max_rows;
 221              		.loc 1 133 3 view .LVU61
 137:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (max_rows > post->strip_height)
 222              		.loc 1 137 3 view .LVU62
 137:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (max_rows > post->strip_height)
 223              		.loc 1 137 12 is_stmt 0 view .LVU63
 224 0035 8B442448 		movl	72(%rsp), %eax
 225 0039 412B01   		subl	(%r9), %eax
 226              	.LVL21:
 138:fltk-1.3.4-1/jpeg/jdpostct.c ****     max_rows = post->strip_height;
 227              		.loc 1 138 3 is_stmt 1 view .LVU64
 140:fltk-1.3.4-1/jpeg/jdpostct.c ****   (*cinfo->upsample->upsample) (cinfo,
 228              		.loc 1 140 12 is_stmt 0 view .LVU65
 229 003c C744240C 		movl	$0, 12(%rsp)
 229      00000000 
 230 0044 41394424 		cmpl	%eax, 32(%r12)
 230      20
 231 0049 410F4644 		cmovbe	32(%r12), %eax
 231      2420
 232              	.LVL22:
 140:fltk-1.3.4-1/jpeg/jdpostct.c ****   (*cinfo->upsample->upsample) (cinfo,
 233              		.loc 1 140 3 is_stmt 1 view .LVU66
 234              		.loc 1 141 3 view .LVU67
 235              		.loc 1 141 4 is_stmt 0 view .LVU68
 236 004f 4D8B4424 		movq	24(%r12), %r8
 236      18
 237              	.LVL23:
 238              		.loc 1 141 4 view .LVU69
 239 0054 50       		pushq	%rax
 240              		.cfi_def_cfa_offset 80
 241 0055 4C8D4C24 		leaq	20(%rsp), %r9
 241      14
 242              	.LVL24:
 243              		.loc 1 141 4 view .LVU70
 244 005a 41FF5208 		call	*8(%r10)
 245              	.LVL25:
 142:fltk-1.3.4-1/jpeg/jdpostct.c **** 		input_buf, in_row_group_ctr, in_row_groups_avail,
 143:fltk-1.3.4-1/jpeg/jdpostct.c **** 		post->buffer, &num_rows, max_rows);
 144:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Quantize and emit data. */
 145:fltk-1.3.4-1/jpeg/jdpostct.c ****   (*cinfo->cquantize->color_quantize) (cinfo,
 246              		.loc 1 145 3 is_stmt 1 view .LVU71
 146:fltk-1.3.4-1/jpeg/jdpostct.c **** 		post->buffer, output_buf + *out_row_ctr, (int) num_rows);
 247              		.loc 1 146 30 is_stmt 0 view .LVU72
 248 005e 8B03     		movl	(%rbx), %eax
 145:fltk-1.3.4-1/jpeg/jdpostct.c **** 		post->buffer, output_buf + *out_row_ctr, (int) num_rows);
 249              		.loc 1 145 4 view .LVU73
 250 0060 8B4C2414 		movl	20(%rsp), %ecx
 251 0064 4889EF   		movq	%rbp, %rdi
 252 0067 498B7424 		movq	24(%r12), %rsi
 252      18
 253 006c 498D54C5 		leaq	0(%r13,%rax,8), %rdx
 253      00
 254 0071 488B8590 		movq	656(%rbp), %rax
 254      020000
 255 0078 FF5008   		call	*8(%rax)
 256              	.LVL26:
 147:fltk-1.3.4-1/jpeg/jdpostct.c ****   *out_row_ctr += num_rows;
 257              		.loc 1 147 3 is_stmt 1 view .LVU74
 258              		.loc 1 147 16 is_stmt 0 view .LVU75
 259 007b 8B442414 		movl	20(%rsp), %eax
 260 007f 0103     		addl	%eax, (%rbx)
 148:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 261              		.loc 1 148 1 view .LVU76
 262 0081 58       		popq	%rax
 263              		.cfi_def_cfa_offset 72
 264 0082 5A       		popq	%rdx
 265              		.cfi_def_cfa_offset 64
 266 0083 488B4424 		movq	8(%rsp), %rax
 266      08
 267 0088 64483304 		xorq	%fs:40, %rax
 267      25280000 
 267      00
 268 0091 750B     		jne	.L17
 269 0093 4883C418 		addq	$24, %rsp
 270              		.cfi_remember_state
 271              		.cfi_def_cfa_offset 40
 272 0097 5B       		popq	%rbx
 273              		.cfi_def_cfa_offset 32
 274              	.LVL27:
 275              		.loc 1 148 1 view .LVU77
 276 0098 5D       		popq	%rbp
 277              		.cfi_def_cfa_offset 24
 278              	.LVL28:
 279              		.loc 1 148 1 view .LVU78
 280 0099 415C     		popq	%r12
 281              		.cfi_def_cfa_offset 16
 282              	.LVL29:
 283              		.loc 1 148 1 view .LVU79
 284 009b 415D     		popq	%r13
 285              		.cfi_def_cfa_offset 8
 286              	.LVL30:
 287              		.loc 1 148 1 view .LVU80
 288 009d C3       		ret
 289              	.LVL31:
 290              	.L17:
 291              		.cfi_restore_state
 292              		.loc 1 148 1 view .LVU81
 293 009e E8000000 		call	__stack_chk_fail@PLT
 293      00
 294              	.LVL32:
 295              		.cfi_endproc
 296              	.LFE52:
 298              		.section	.text.post_process_prepass,"ax",@progbits
 299              		.p2align 4
 301              	post_process_prepass:
 302              	.LVL33:
 303              	.LFB53:
 149:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 150:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 151:fltk-1.3.4-1/jpeg/jdpostct.c **** #ifdef QUANT_2PASS_SUPPORTED
 152:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 153:fltk-1.3.4-1/jpeg/jdpostct.c **** /*
 154:fltk-1.3.4-1/jpeg/jdpostct.c ****  * Process some data in the first pass of 2-pass quantization.
 155:fltk-1.3.4-1/jpeg/jdpostct.c ****  */
 156:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 157:fltk-1.3.4-1/jpeg/jdpostct.c **** METHODDEF(void)
 158:fltk-1.3.4-1/jpeg/jdpostct.c **** post_process_prepass (j_decompress_ptr cinfo,
 159:fltk-1.3.4-1/jpeg/jdpostct.c **** 		      JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr,
 160:fltk-1.3.4-1/jpeg/jdpostct.c **** 		      JDIMENSION in_row_groups_avail,
 161:fltk-1.3.4-1/jpeg/jdpostct.c **** 		      JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,
 162:fltk-1.3.4-1/jpeg/jdpostct.c **** 		      JDIMENSION out_rows_avail)
 163:fltk-1.3.4-1/jpeg/jdpostct.c **** {
 304              		.loc 1 163 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		.loc 1 163 1 is_stmt 0 view .LVU83
 307 0000 F30F1EFA 		endbr64
 164:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
 308              		.loc 1 164 3 is_stmt 1 view .LVU84
 163:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
 309              		.loc 1 163 1 is_stmt 0 view .LVU85
 310 0004 4157     		pushq	%r15
 311              		.cfi_def_cfa_offset 16
 312              		.cfi_offset 15, -16
 313 0006 4189CA   		movl	%ecx, %r10d
 314 0009 4989D7   		movq	%rdx, %r15
 315 000c 4156     		pushq	%r14
 316              		.cfi_def_cfa_offset 24
 317              		.cfi_offset 14, -24
 318 000e 4D89CE   		movq	%r9, %r14
 319 0011 4155     		pushq	%r13
 320              		.cfi_def_cfa_offset 32
 321              		.cfi_offset 13, -32
 322 0013 4154     		pushq	%r12
 323              		.cfi_def_cfa_offset 40
 324              		.cfi_offset 12, -40
 325 0015 4989F4   		movq	%rsi, %r12
 326 0018 55       		pushq	%rbp
 327              		.cfi_def_cfa_offset 48
 328              		.cfi_offset 6, -48
 329 0019 4889FD   		movq	%rdi, %rbp
 330 001c 53       		pushq	%rbx
 331              		.cfi_def_cfa_offset 56
 332              		.cfi_offset 3, -56
 333 001d 4883EC18 		subq	$24, %rsp
 334              		.cfi_def_cfa_offset 80
 335              		.loc 1 164 15 view .LVU86
 336 0021 488B9F58 		movq	600(%rdi), %rbx
 336      020000
 337              	.LVL34:
 165:fltk-1.3.4-1/jpeg/jdpostct.c ****   JDIMENSION old_next_row, num_rows;
 338              		.loc 1 165 3 is_stmt 1 view .LVU87
 166:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 167:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Reposition virtual buffer if at start of strip. */
 168:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (post->next_row == 0) {
 339              		.loc 1 168 3 view .LVU88
 340              		.loc 1 168 11 is_stmt 0 view .LVU89
 341 0028 448B6B28 		movl	40(%rbx), %r13d
 342 002c 8B4B20   		movl	32(%rbx), %ecx
 343              	.LVL35:
 344              		.loc 1 168 6 view .LVU90
 345 002f 4585ED   		testl	%r13d, %r13d
 346 0032 747C     		je	.L19
 347 0034 4C8B4318 		movq	24(%rbx), %r8
 348              	.LVL36:
 349              	.L20:
 169:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->buffer = (*cinfo->mem->access_virt_sarray)
 170:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 171:fltk-1.3.4-1/jpeg/jdpostct.c **** 	 post->starting_row, post->strip_height, TRUE);
 172:fltk-1.3.4-1/jpeg/jdpostct.c ****   }
 173:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 174:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Upsample some data (up to a strip height's worth). */
 175:fltk-1.3.4-1/jpeg/jdpostct.c ****   old_next_row = post->next_row;
 350              		.loc 1 175 3 is_stmt 1 view .LVU91
 176:fltk-1.3.4-1/jpeg/jdpostct.c ****   (*cinfo->upsample->upsample) (cinfo,
 351              		.loc 1 176 3 view .LVU92
 352              		.loc 1 176 4 is_stmt 0 view .LVU93
 353 0038 488B8580 		movq	640(%rbp), %rax
 353      020000
 354 003f 4C89FA   		movq	%r15, %rdx
 355 0042 4C89E6   		movq	%r12, %rsi
 356 0045 4889EF   		movq	%rbp, %rdi
 357 0048 4883EC08 		subq	$8, %rsp
 358              		.cfi_def_cfa_offset 88
 359 004c 4C8D4B28 		leaq	40(%rbx), %r9
 360              	.LVL37:
 361              		.loc 1 176 4 view .LVU94
 362 0050 51       		pushq	%rcx
 363              		.cfi_def_cfa_offset 96
 364              	.LVL38:
 365              		.loc 1 176 4 view .LVU95
 366 0051 4489D1   		movl	%r10d, %ecx
 367 0054 FF5008   		call	*8(%rax)
 368              	.LVL39:
 177:fltk-1.3.4-1/jpeg/jdpostct.c **** 		input_buf, in_row_group_ctr, in_row_groups_avail,
 178:fltk-1.3.4-1/jpeg/jdpostct.c **** 		post->buffer, &post->next_row, post->strip_height);
 179:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 180:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Allow quantizer to scan new data.  No data is emitted, */
 181:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* but we advance out_row_ctr so outer loop can tell when we're done. */
 182:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (post->next_row > old_next_row) {
 369              		.loc 1 182 3 is_stmt 1 view .LVU96
 370              		.loc 1 182 11 is_stmt 0 view .LVU97
 371 0057 8B4328   		movl	40(%rbx), %eax
 372              		.loc 1 182 6 view .LVU98
 373 005a 5A       		popq	%rdx
 374              		.cfi_def_cfa_offset 88
 375 005b 59       		popq	%rcx
 376              		.cfi_def_cfa_offset 80
 377 005c 4439E8   		cmpl	%r13d, %eax
 378 005f 7626     		jbe	.L21
 183:fltk-1.3.4-1/jpeg/jdpostct.c ****     num_rows = post->next_row - old_next_row;
 379              		.loc 1 183 5 is_stmt 1 view .LVU99
 380              		.loc 1 183 14 is_stmt 0 view .LVU100
 381 0061 4429E8   		subl	%r13d, %eax
 184:fltk-1.3.4-1/jpeg/jdpostct.c ****     (*cinfo->cquantize->color_quantize) (cinfo, post->buffer + old_next_row,
 382              		.loc 1 184 6 view .LVU101
 383 0064 31D2     		xorl	%edx, %edx
 384 0066 4889EF   		movq	%rbp, %rdi
 183:fltk-1.3.4-1/jpeg/jdpostct.c ****     num_rows = post->next_row - old_next_row;
 385              		.loc 1 183 14 view .LVU102
 386 0069 4189C4   		movl	%eax, %r12d
 387              	.LVL40:
 388              		.loc 1 184 5 is_stmt 1 view .LVU103
 389              		.loc 1 184 6 is_stmt 0 view .LVU104
 390 006c 488B4318 		movq	24(%rbx), %rax
 391              	.LVL41:
 392              		.loc 1 184 6 view .LVU105
 393 0070 4489E1   		movl	%r12d, %ecx
 394 0073 4A8D34E8 		leaq	(%rax,%r13,8), %rsi
 395 0077 488B8590 		movq	656(%rbp), %rax
 395      020000
 396 007e FF5008   		call	*8(%rax)
 397              	.LVL42:
 185:fltk-1.3.4-1/jpeg/jdpostct.c **** 					 (JSAMPARRAY) NULL, (int) num_rows);
 186:fltk-1.3.4-1/jpeg/jdpostct.c ****     *out_row_ctr += num_rows;
 398              		.loc 1 186 5 is_stmt 1 view .LVU106
 399              		.loc 1 186 18 is_stmt 0 view .LVU107
 400 0081 450126   		addl	%r12d, (%r14)
 401 0084 8B4328   		movl	40(%rbx), %eax
 402              	.LVL43:
 403              	.L21:
 187:fltk-1.3.4-1/jpeg/jdpostct.c ****   }
 188:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 189:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Advance if we filled the strip. */
 190:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (post->next_row >= post->strip_height) {
 404              		.loc 1 190 3 is_stmt 1 view .LVU108
 405              		.loc 1 190 29 is_stmt 0 view .LVU109
 406 0087 8B5320   		movl	32(%rbx), %edx
 407              		.loc 1 190 6 view .LVU110
 408 008a 39C2     		cmpl	%eax, %edx
 409 008c 770A     		ja	.L18
 191:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->starting_row += post->strip_height;
 410              		.loc 1 191 5 is_stmt 1 view .LVU111
 411              		.loc 1 191 24 is_stmt 0 view .LVU112
 412 008e 015324   		addl	%edx, 36(%rbx)
 192:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->next_row = 0;
 413              		.loc 1 192 5 is_stmt 1 view .LVU113
 414              		.loc 1 192 20 is_stmt 0 view .LVU114
 415 0091 C7432800 		movl	$0, 40(%rbx)
 415      000000
 416              	.L18:
 193:fltk-1.3.4-1/jpeg/jdpostct.c ****   }
 194:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 417              		.loc 1 194 1 view .LVU115
 418 0098 4883C418 		addq	$24, %rsp
 419              		.cfi_remember_state
 420              		.cfi_def_cfa_offset 56
 421 009c 5B       		popq	%rbx
 422              		.cfi_def_cfa_offset 48
 423              	.LVL44:
 424              		.loc 1 194 1 view .LVU116
 425 009d 5D       		popq	%rbp
 426              		.cfi_def_cfa_offset 40
 427              	.LVL45:
 428              		.loc 1 194 1 view .LVU117
 429 009e 415C     		popq	%r12
 430              		.cfi_def_cfa_offset 32
 431 00a0 415D     		popq	%r13
 432              		.cfi_def_cfa_offset 24
 433 00a2 415E     		popq	%r14
 434              		.cfi_def_cfa_offset 16
 435              	.LVL46:
 436              		.loc 1 194 1 view .LVU118
 437 00a4 415F     		popq	%r15
 438              		.cfi_def_cfa_offset 8
 439              	.LVL47:
 440              		.loc 1 194 1 view .LVU119
 441 00a6 C3       		ret
 442              	.LVL48:
 443 00a7 660F1F84 		.p2align 4,,10
 443      00000000 
 443      00
 444              		.p2align 3
 445              	.L19:
 446              		.cfi_restore_state
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 447              		.loc 1 169 21 view .LVU120
 448 00b0 488B4708 		movq	8(%rdi), %rax
 449 00b4 44895424 		movl	%r10d, 12(%rsp)
 449      0C
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 450              		.loc 1 169 5 is_stmt 1 view .LVU121
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 451              		.loc 1 169 21 is_stmt 0 view .LVU122
 452 00b9 41B80100 		movl	$1, %r8d
 452      0000
 453              	.LVL49:
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 454              		.loc 1 169 21 view .LVU123
 455 00bf 8B5324   		movl	36(%rbx), %edx
 456              	.LVL50:
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 457              		.loc 1 169 21 view .LVU124
 458 00c2 488B7310 		movq	16(%rbx), %rsi
 459              	.LVL51:
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 460              		.loc 1 169 21 view .LVU125
 461 00c6 FF5038   		call	*56(%rax)
 462              	.LVL52:
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 463              		.loc 1 169 21 view .LVU126
 464 00c9 8B4B20   		movl	32(%rbx), %ecx
 465 00cc 448B6B28 		movl	40(%rbx), %r13d
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 466              		.loc 1 169 18 view .LVU127
 467 00d0 48894318 		movq	%rax, 24(%rbx)
 468 00d4 448B5424 		movl	12(%rsp), %r10d
 468      0C
 169:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 469              		.loc 1 169 21 view .LVU128
 470 00d9 4989C0   		movq	%rax, %r8
 471 00dc E957FFFF 		jmp	.L20
 471      FF
 472              		.cfi_endproc
 473              	.LFE53:
 475              		.section	.text.post_process_2pass,"ax",@progbits
 476              		.p2align 4
 478              	post_process_2pass:
 479              	.LVL53:
 480              	.LFB54:
 195:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 196:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 197:fltk-1.3.4-1/jpeg/jdpostct.c **** /*
 198:fltk-1.3.4-1/jpeg/jdpostct.c ****  * Process some data in the second pass of 2-pass quantization.
 199:fltk-1.3.4-1/jpeg/jdpostct.c ****  */
 200:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 201:fltk-1.3.4-1/jpeg/jdpostct.c **** METHODDEF(void)
 202:fltk-1.3.4-1/jpeg/jdpostct.c **** post_process_2pass (j_decompress_ptr cinfo,
 203:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JSAMPIMAGE input_buf, JDIMENSION *in_row_group_ctr,
 204:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JDIMENSION in_row_groups_avail,
 205:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JSAMPARRAY output_buf, JDIMENSION *out_row_ctr,
 206:fltk-1.3.4-1/jpeg/jdpostct.c **** 		    JDIMENSION out_rows_avail)
 207:fltk-1.3.4-1/jpeg/jdpostct.c **** {
 481              		.loc 1 207 1 is_stmt 1 view -0
 482              		.cfi_startproc
 483              		.loc 1 207 1 is_stmt 0 view .LVU130
 484 0000 F30F1EFA 		endbr64
 208:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
 485              		.loc 1 208 3 is_stmt 1 view .LVU131
 207:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post = (my_post_ptr) cinfo->post;
 486              		.loc 1 207 1 is_stmt 0 view .LVU132
 487 0004 4156     		pushq	%r14
 488              		.cfi_def_cfa_offset 16
 489              		.cfi_offset 14, -16
 490 0006 4D89C6   		movq	%r8, %r14
 491 0009 4155     		pushq	%r13
 492              		.cfi_def_cfa_offset 24
 493              		.cfi_offset 13, -24
 494 000b 4D89CD   		movq	%r9, %r13
 495 000e 4154     		pushq	%r12
 496              		.cfi_def_cfa_offset 32
 497              		.cfi_offset 12, -32
 498 0010 4989FC   		movq	%rdi, %r12
 499 0013 55       		pushq	%rbp
 500              		.cfi_def_cfa_offset 40
 501              		.cfi_offset 6, -40
 502 0014 53       		pushq	%rbx
 503              		.cfi_def_cfa_offset 48
 504              		.cfi_offset 3, -48
 505              		.loc 1 208 15 view .LVU133
 506 0015 488BAF58 		movq	600(%rdi), %rbp
 506      020000
 507              	.LVL54:
 209:fltk-1.3.4-1/jpeg/jdpostct.c ****   JDIMENSION num_rows, max_rows;
 508              		.loc 1 209 3 is_stmt 1 view .LVU134
 210:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 211:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Reposition virtual buffer if at start of strip. */
 212:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (post->next_row == 0) {
 509              		.loc 1 212 3 view .LVU135
 510              		.loc 1 212 11 is_stmt 0 view .LVU136
 511 001c 8B7D28   		movl	40(%rbp), %edi
 512              	.LVL55:
 513              		.loc 1 212 11 view .LVU137
 514 001f 8B4D20   		movl	32(%rbp), %ecx
 515              	.LVL56:
 516              		.loc 1 212 11 view .LVU138
 517 0022 8B5524   		movl	36(%rbp), %edx
 518              	.LVL57:
 519              		.loc 1 212 6 view .LVU139
 520 0025 85FF     		testl	%edi, %edi
 521 0027 7467     		je	.L25
 522 0029 488B4518 		movq	24(%rbp), %rax
 523              	.LVL58:
 524              	.L26:
 213:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->buffer = (*cinfo->mem->access_virt_sarray)
 214:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 215:fltk-1.3.4-1/jpeg/jdpostct.c **** 	 post->starting_row, post->strip_height, FALSE);
 216:fltk-1.3.4-1/jpeg/jdpostct.c ****   }
 217:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 218:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Determine number of rows to emit. */
 219:fltk-1.3.4-1/jpeg/jdpostct.c ****   num_rows = post->strip_height - post->next_row; /* available in strip */
 525              		.loc 1 219 3 is_stmt 1 view .LVU140
 220:fltk-1.3.4-1/jpeg/jdpostct.c ****   max_rows = out_rows_avail - *out_row_ctr; /* available in output area */
 526              		.loc 1 220 3 view .LVU141
 221:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (num_rows > max_rows)
 222:fltk-1.3.4-1/jpeg/jdpostct.c ****     num_rows = max_rows;
 223:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* We have to check bottom of image here, can't depend on upsampler. */
 224:fltk-1.3.4-1/jpeg/jdpostct.c ****   max_rows = cinfo->output_height - post->starting_row;
 527              		.loc 1 224 12 is_stmt 0 view .LVU142
 528 002d 418B9C24 		movl	140(%r12), %ebx
 528      8C000000 
 219:fltk-1.3.4-1/jpeg/jdpostct.c ****   max_rows = out_rows_avail - *out_row_ctr; /* available in output area */
 529              		.loc 1 219 12 view .LVU143
 530 0035 29F9     		subl	%edi, %ecx
 531              	.LVL59:
 220:fltk-1.3.4-1/jpeg/jdpostct.c ****   max_rows = out_rows_avail - *out_row_ctr; /* available in output area */
 532              		.loc 1 220 31 view .LVU144
 533 0037 418B7500 		movl	0(%r13), %esi
 534              	.LVL60:
 221:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (num_rows > max_rows)
 535              		.loc 1 221 3 is_stmt 1 view .LVU145
 536              		.loc 1 224 3 view .LVU146
 537              		.loc 1 224 12 is_stmt 0 view .LVU147
 538 003b 29D3     		subl	%edx, %ebx
 225:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (num_rows > max_rows)
 226:fltk-1.3.4-1/jpeg/jdpostct.c ****     num_rows = max_rows;
 227:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 228:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Quantize and emit data. */
 229:fltk-1.3.4-1/jpeg/jdpostct.c ****   (*cinfo->cquantize->color_quantize) (cinfo,
 539              		.loc 1 229 4 view .LVU148
 540 003d 4D8D04F6 		leaq	(%r14,%rsi,8), %r8
 541 0041 39CB     		cmpl	%ecx, %ebx
 224:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (num_rows > max_rows)
 542              		.loc 1 224 12 view .LVU149
 543 0043 89DA     		movl	%ebx, %edx
 220:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (num_rows > max_rows)
 544              		.loc 1 220 12 view .LVU150
 545 0045 8B5C2430 		movl	48(%rsp), %ebx
 546 0049 0F47D1   		cmova	%ecx, %edx
 547              	.LVL61:
 225:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (num_rows > max_rows)
 548              		.loc 1 225 3 is_stmt 1 view .LVU151
 220:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (num_rows > max_rows)
 549              		.loc 1 220 12 is_stmt 0 view .LVU152
 550 004c 29F3     		subl	%esi, %ebx
 551 004e 39D3     		cmpl	%edx, %ebx
 552 0050 0F47DA   		cmova	%edx, %ebx
 553              	.LVL62:
 554              		.loc 1 229 3 is_stmt 1 view .LVU153
 230:fltk-1.3.4-1/jpeg/jdpostct.c **** 		post->buffer + post->next_row, output_buf + *out_row_ctr,
 555              		.loc 1 230 22 is_stmt 0 view .LVU154
 556 0053 89FA     		movl	%edi, %edx
 229:fltk-1.3.4-1/jpeg/jdpostct.c **** 		post->buffer + post->next_row, output_buf + *out_row_ctr,
 557              		.loc 1 229 4 view .LVU155
 558 0055 4C89E7   		movq	%r12, %rdi
 559 0058 488D34D0 		leaq	(%rax,%rdx,8), %rsi
 560 005c 498B8424 		movq	656(%r12), %rax
 560      90020000 
 561 0064 4C89C2   		movq	%r8, %rdx
 562 0067 89D9     		movl	%ebx, %ecx
 563 0069 FF5008   		call	*8(%rax)
 564              	.LVL63:
 231:fltk-1.3.4-1/jpeg/jdpostct.c **** 		(int) num_rows);
 232:fltk-1.3.4-1/jpeg/jdpostct.c ****   *out_row_ctr += num_rows;
 565              		.loc 1 232 3 is_stmt 1 view .LVU156
 566              		.loc 1 232 16 is_stmt 0 view .LVU157
 567 006c 41015D00 		addl	%ebx, 0(%r13)
 233:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 234:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Advance if we filled the strip. */
 235:fltk-1.3.4-1/jpeg/jdpostct.c ****   post->next_row += num_rows;
 568              		.loc 1 235 3 is_stmt 1 view .LVU158
 236:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (post->next_row >= post->strip_height) {
 569              		.loc 1 236 29 is_stmt 0 view .LVU159
 570 0070 8B4520   		movl	32(%rbp), %eax
 235:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (post->next_row >= post->strip_height) {
 571              		.loc 1 235 18 view .LVU160
 572 0073 035D28   		addl	40(%rbp), %ebx
 573              	.LVL64:
 235:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (post->next_row >= post->strip_height) {
 574              		.loc 1 235 18 view .LVU161
 575 0076 895D28   		movl	%ebx, 40(%rbp)
 576              		.loc 1 236 3 is_stmt 1 view .LVU162
 577              		.loc 1 236 6 is_stmt 0 view .LVU163
 578 0079 39C3     		cmpl	%eax, %ebx
 579 007b 720A     		jb	.L24
 237:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->starting_row += post->strip_height;
 580              		.loc 1 237 5 is_stmt 1 view .LVU164
 581              		.loc 1 237 24 is_stmt 0 view .LVU165
 582 007d 014524   		addl	%eax, 36(%rbp)
 238:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->next_row = 0;
 583              		.loc 1 238 5 is_stmt 1 view .LVU166
 584              		.loc 1 238 20 is_stmt 0 view .LVU167
 585 0080 C7452800 		movl	$0, 40(%rbp)
 585      000000
 586              	.L24:
 239:fltk-1.3.4-1/jpeg/jdpostct.c ****   }
 240:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 587              		.loc 1 240 1 view .LVU168
 588 0087 5B       		popq	%rbx
 589              		.cfi_remember_state
 590              		.cfi_def_cfa_offset 40
 591 0088 5D       		popq	%rbp
 592              		.cfi_def_cfa_offset 32
 593              	.LVL65:
 594              		.loc 1 240 1 view .LVU169
 595 0089 415C     		popq	%r12
 596              		.cfi_def_cfa_offset 24
 597              	.LVL66:
 598              		.loc 1 240 1 view .LVU170
 599 008b 415D     		popq	%r13
 600              		.cfi_def_cfa_offset 16
 601              	.LVL67:
 602              		.loc 1 240 1 view .LVU171
 603 008d 415E     		popq	%r14
 604              		.cfi_def_cfa_offset 8
 605              	.LVL68:
 606              		.loc 1 240 1 view .LVU172
 607 008f C3       		ret
 608              	.LVL69:
 609              		.p2align 4,,10
 610              		.p2align 3
 611              	.L25:
 612              		.cfi_restore_state
 213:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 613              		.loc 1 213 5 is_stmt 1 view .LVU173
 213:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 614              		.loc 1 213 21 is_stmt 0 view .LVU174
 615 0090 498B4424 		movq	8(%r12), %rax
 615      08
 616 0095 4C89E7   		movq	%r12, %rdi
 617 0098 488B7510 		movq	16(%rbp), %rsi
 618              	.LVL70:
 213:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 619              		.loc 1 213 21 view .LVU175
 620 009c 4531C0   		xorl	%r8d, %r8d
 621              	.LVL71:
 213:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 622              		.loc 1 213 21 view .LVU176
 623 009f FF5038   		call	*56(%rax)
 624              	.LVL72:
 213:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 625              		.loc 1 213 21 view .LVU177
 626 00a2 8B4D20   		movl	32(%rbp), %ecx
 627 00a5 8B7D28   		movl	40(%rbp), %edi
 213:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, post->whole_image,
 628              		.loc 1 213 18 view .LVU178
 629 00a8 48894518 		movq	%rax, 24(%rbp)
 630 00ac 8B5524   		movl	36(%rbp), %edx
 631 00af E979FFFF 		jmp	.L26
 631      FF
 632              		.cfi_endproc
 633              	.LFE54:
 635              		.section	.text.jinit_d_post_controller,"ax",@progbits
 636              		.p2align 4
 637              		.globl	jinit_d_post_controller
 639              	jinit_d_post_controller:
 640              	.LVL73:
 641              	.LFB55:
 241:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 242:fltk-1.3.4-1/jpeg/jdpostct.c **** #endif /* QUANT_2PASS_SUPPORTED */
 243:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 244:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 245:fltk-1.3.4-1/jpeg/jdpostct.c **** /*
 246:fltk-1.3.4-1/jpeg/jdpostct.c ****  * Initialize postprocessing controller.
 247:fltk-1.3.4-1/jpeg/jdpostct.c ****  */
 248:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 249:fltk-1.3.4-1/jpeg/jdpostct.c **** GLOBAL(void)
 250:fltk-1.3.4-1/jpeg/jdpostct.c **** jinit_d_post_controller (j_decompress_ptr cinfo, boolean need_full_buffer)
 251:fltk-1.3.4-1/jpeg/jdpostct.c **** {
 642              		.loc 1 251 1 is_stmt 1 view -0
 643              		.cfi_startproc
 644              		.loc 1 251 1 is_stmt 0 view .LVU180
 645 0000 F30F1EFA 		endbr64
 252:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post;
 646              		.loc 1 252 3 is_stmt 1 view .LVU181
 253:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 254:fltk-1.3.4-1/jpeg/jdpostct.c ****   post = (my_post_ptr)
 647              		.loc 1 254 3 view .LVU182
 251:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post;
 648              		.loc 1 251 1 is_stmt 0 view .LVU183
 649 0004 4155     		pushq	%r13
 650              		.cfi_def_cfa_offset 16
 651              		.cfi_offset 13, -16
 255:fltk-1.3.4-1/jpeg/jdpostct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 652              		.loc 1 255 6 view .LVU184
 653 0006 BA300000 		movl	$48, %edx
 653      00
 251:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post;
 654              		.loc 1 251 1 view .LVU185
 655 000b 4154     		pushq	%r12
 656              		.cfi_def_cfa_offset 24
 657              		.cfi_offset 12, -24
 658 000d 4189F4   		movl	%esi, %r12d
 659              		.loc 1 255 6 view .LVU186
 660 0010 BE010000 		movl	$1, %esi
 660      00
 661              	.LVL74:
 251:fltk-1.3.4-1/jpeg/jdpostct.c ****   my_post_ptr post;
 662              		.loc 1 251 1 view .LVU187
 663 0015 55       		pushq	%rbp
 664              		.cfi_def_cfa_offset 32
 665              		.cfi_offset 6, -32
 666 0016 4889FD   		movq	%rdi, %rbp
 667 0019 53       		pushq	%rbx
 668              		.cfi_def_cfa_offset 40
 669              		.cfi_offset 3, -40
 670 001a 4883EC08 		subq	$8, %rsp
 671              		.cfi_def_cfa_offset 48
 672              		.loc 1 255 6 view .LVU188
 673 001e 488B4708 		movq	8(%rdi), %rax
 674 0022 FF10     		call	*(%rax)
 675              	.LVL75:
 256:fltk-1.3.4-1/jpeg/jdpostct.c **** 				SIZEOF(my_post_controller));
 257:fltk-1.3.4-1/jpeg/jdpostct.c ****   cinfo->post = (struct jpeg_d_post_controller *) post;
 676              		.loc 1 257 15 view .LVU189
 677 0024 48898558 		movq	%rax, 600(%rbp)
 677      020000
 255:fltk-1.3.4-1/jpeg/jdpostct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 678              		.loc 1 255 6 view .LVU190
 679 002b 4889C3   		movq	%rax, %rbx
 680              	.LVL76:
 681              		.loc 1 257 3 is_stmt 1 view .LVU191
 258:fltk-1.3.4-1/jpeg/jdpostct.c ****   post->pub.start_pass = start_pass_dpost;
 682              		.loc 1 258 3 view .LVU192
 683              		.loc 1 258 24 is_stmt 0 view .LVU193
 684 002e 488D0500 		leaq	start_pass_dpost(%rip), %rax
 684      000000
 685              	.LVL77:
 686              		.loc 1 258 24 view .LVU194
 687 0035 488903   		movq	%rax, (%rbx)
 259:fltk-1.3.4-1/jpeg/jdpostct.c ****   post->whole_image = NULL;	/* flag for no virtual arrays */
 688              		.loc 1 259 3 is_stmt 1 view .LVU195
 689              		.loc 1 259 21 is_stmt 0 view .LVU196
 690 0038 48C74310 		movq	$0, 16(%rbx)
 690      00000000 
 260:fltk-1.3.4-1/jpeg/jdpostct.c ****   post->buffer = NULL;		/* flag for no strip buffer */
 691              		.loc 1 260 3 is_stmt 1 view .LVU197
 692              		.loc 1 260 16 is_stmt 0 view .LVU198
 693 0040 48C74318 		movq	$0, 24(%rbx)
 693      00000000 
 261:fltk-1.3.4-1/jpeg/jdpostct.c **** 
 262:fltk-1.3.4-1/jpeg/jdpostct.c ****   /* Create the quantization buffer, if needed */
 263:fltk-1.3.4-1/jpeg/jdpostct.c ****   if (cinfo->quantize_colors) {
 694              		.loc 1 263 3 is_stmt 1 view .LVU199
 695              		.loc 1 263 6 is_stmt 0 view .LVU200
 696 0048 8B456C   		movl	108(%rbp), %eax
 697 004b 85C0     		testl	%eax, %eax
 698 004d 7433     		je	.L29
 264:fltk-1.3.4-1/jpeg/jdpostct.c ****     /* The buffer strip height is max_v_samp_factor, which is typically
 265:fltk-1.3.4-1/jpeg/jdpostct.c ****      * an efficient number of rows for upsampling to return.
 266:fltk-1.3.4-1/jpeg/jdpostct.c ****      * (In the presence of output rescaling, we might want to be smarter?)
 267:fltk-1.3.4-1/jpeg/jdpostct.c ****      */
 268:fltk-1.3.4-1/jpeg/jdpostct.c ****     post->strip_height = (JDIMENSION) cinfo->max_v_samp_factor;
 699              		.loc 1 268 5 is_stmt 1 view .LVU201
 700              		.loc 1 268 26 is_stmt 0 view .LVU202
 701 004f 448BADA4 		movl	420(%rbp), %r13d
 701      010000
 702              		.loc 1 268 24 view .LVU203
 703 0056 44896B20 		movl	%r13d, 32(%rbx)
 269:fltk-1.3.4-1/jpeg/jdpostct.c ****     if (need_full_buffer) {
 704              		.loc 1 269 5 is_stmt 1 view .LVU204
 705              		.loc 1 269 8 is_stmt 0 view .LVU205
 706 005a 4585E4   		testl	%r12d, %r12d
 707 005d 7531     		jne	.L33
 270:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* Two-pass color quantization: need full-image storage. */
 271:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* We round up the number of rows to a multiple of the strip height. */
 272:fltk-1.3.4-1/jpeg/jdpostct.c **** #ifdef QUANT_2PASS_SUPPORTED
 273:fltk-1.3.4-1/jpeg/jdpostct.c ****       post->whole_image = (*cinfo->mem->request_virt_sarray)
 274:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 275:fltk-1.3.4-1/jpeg/jdpostct.c **** 	 cinfo->output_width * cinfo->out_color_components,
 276:fltk-1.3.4-1/jpeg/jdpostct.c **** 	 (JDIMENSION) jround_up((long) cinfo->output_height,
 277:fltk-1.3.4-1/jpeg/jdpostct.c **** 				(long) post->strip_height),
 278:fltk-1.3.4-1/jpeg/jdpostct.c **** 	 post->strip_height);
 279:fltk-1.3.4-1/jpeg/jdpostct.c **** #else
 280:fltk-1.3.4-1/jpeg/jdpostct.c ****       ERREXIT(cinfo, JERR_BAD_BUFFER_MODE);
 281:fltk-1.3.4-1/jpeg/jdpostct.c **** #endif /* QUANT_2PASS_SUPPORTED */
 282:fltk-1.3.4-1/jpeg/jdpostct.c ****     } else {
 283:fltk-1.3.4-1/jpeg/jdpostct.c ****       /* One-pass color quantization: just make a strip buffer. */
 284:fltk-1.3.4-1/jpeg/jdpostct.c ****       post->buffer = (*cinfo->mem->alloc_sarray)
 708              		.loc 1 284 7 is_stmt 1 view .LVU206
 709              		.loc 1 284 23 is_stmt 0 view .LVU207
 710 005f 488B4508 		movq	8(%rbp), %rax
 711 0063 8B958800 		movl	136(%rbp), %edx
 711      0000
 712 0069 4489E9   		movl	%r13d, %ecx
 713 006c 4889EF   		movq	%rbp, %rdi
 714 006f 0FAF9590 		imull	144(%rbp), %edx
 714      000000
 715 0076 BE010000 		movl	$1, %esi
 715      00
 716 007b FF5010   		call	*16(%rax)
 717              	.LVL78:
 718              		.loc 1 284 20 view .LVU208
 719 007e 48894318 		movq	%rax, 24(%rbx)
 720              	.L29:
 285:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE,
 286:fltk-1.3.4-1/jpeg/jdpostct.c **** 	 cinfo->output_width * cinfo->out_color_components,
 287:fltk-1.3.4-1/jpeg/jdpostct.c **** 	 post->strip_height);
 288:fltk-1.3.4-1/jpeg/jdpostct.c ****     }
 289:fltk-1.3.4-1/jpeg/jdpostct.c ****   }
 290:fltk-1.3.4-1/jpeg/jdpostct.c **** }
 721              		.loc 1 290 1 view .LVU209
 722 0082 4883C408 		addq	$8, %rsp
 723              		.cfi_remember_state
 724              		.cfi_def_cfa_offset 40
 725 0086 5B       		popq	%rbx
 726              		.cfi_def_cfa_offset 32
 727              	.LVL79:
 728              		.loc 1 290 1 view .LVU210
 729 0087 5D       		popq	%rbp
 730              		.cfi_def_cfa_offset 24
 731              	.LVL80:
 732              		.loc 1 290 1 view .LVU211
 733 0088 415C     		popq	%r12
 734              		.cfi_def_cfa_offset 16
 735              	.LVL81:
 736              		.loc 1 290 1 view .LVU212
 737 008a 415D     		popq	%r13
 738              		.cfi_def_cfa_offset 8
 739 008c C3       		ret
 740              	.LVL82:
 741 008d 0F1F00   		.p2align 4,,10
 742              		.p2align 3
 743              	.L33:
 744              		.cfi_restore_state
 273:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 745              		.loc 1 273 7 is_stmt 1 view .LVU213
 273:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 746              		.loc 1 273 28 is_stmt 0 view .LVU214
 747 0090 488B4508 		movq	8(%rbp), %rax
 276:fltk-1.3.4-1/jpeg/jdpostct.c **** 				(long) post->strip_height),
 748              		.loc 1 276 16 view .LVU215
 749 0094 8BBD8C00 		movl	140(%rbp), %edi
 749      0000
 750 009a 4489EE   		movl	%r13d, %esi
 273:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 751              		.loc 1 273 28 view .LVU216
 752 009d 4C8B6020 		movq	32(%rax), %r12
 753              	.LVL83:
 276:fltk-1.3.4-1/jpeg/jdpostct.c **** 				(long) post->strip_height),
 754              		.loc 1 276 16 view .LVU217
 755 00a1 E8000000 		call	jround_up@PLT
 755      00
 756              	.LVL84:
 273:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 757              		.loc 1 273 28 view .LVU218
 758 00a6 8B8D8800 		movl	136(%rbp), %ecx
 758      0000
 759 00ac 4589E9   		movl	%r13d, %r9d
 760 00af 31D2     		xorl	%edx, %edx
 761 00b1 0FAF8D90 		imull	144(%rbp), %ecx
 761      000000
 762 00b8 4889EF   		movq	%rbp, %rdi
 763 00bb 4189C0   		movl	%eax, %r8d
 764 00be BE010000 		movl	$1, %esi
 764      00
 765 00c3 41FFD4   		call	*%r12
 766              	.LVL85:
 273:fltk-1.3.4-1/jpeg/jdpostct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, FALSE,
 767              		.loc 1 273 25 view .LVU219
 768 00c6 48894310 		movq	%rax, 16(%rbx)
 769              		.loc 1 290 1 view .LVU220
 770 00ca 4883C408 		addq	$8, %rsp
 771              		.cfi_def_cfa_offset 40
 772 00ce 5B       		popq	%rbx
 773              		.cfi_def_cfa_offset 32
 774              	.LVL86:
 775              		.loc 1 290 1 view .LVU221
 776 00cf 5D       		popq	%rbp
 777              		.cfi_def_cfa_offset 24
 778              	.LVL87:
 779              		.loc 1 290 1 view .LVU222
 780 00d0 415C     		popq	%r12
 781              		.cfi_def_cfa_offset 16
 782 00d2 415D     		popq	%r13
 783              		.cfi_def_cfa_offset 8
 784 00d4 C3       		ret
 785              		.cfi_endproc
 786              	.LFE55:
 788              		.text
 789              	.Letext0:
 790              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 791              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 792              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 793              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 794              		.file 6 "/usr/include/stdio.h"
 795              		.file 7 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 796              		.file 8 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 797              		.file 9 "fltk-1.3.4-1/jpeg/jpeglib.h"
 798              		.file 10 "fltk-1.3.4-1/jpeg/jpegint.h"
 799              		.file 11 "fltk-1.3.4-1/jpeg/jerror.h"
 13309              		.section	.note.gnu.property,"a"
 13310              		.align 8
 13311 0000 04000000 		.long	 1f - 0f
 13312 0004 10000000 		.long	 4f - 1f
 13313 0008 05000000 		.long	 5
 13314              	0:
 13315 000c 474E5500 		.string	 "GNU"
 13316              	1:
 13317              		.align 8
 13318 0010 020000C0 		.long	 0xc0000002
 13319 0014 04000000 		.long	 3f - 2f
 13320              	2:
 13321 0018 03000000 		.long	 0x3
 13322              	3:
 13323 001c 00000000 		.align 8
 13324              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jdpostct.c
     /tmp/ccgXhgN2.s:7      .text.start_pass_dpost:0000000000000000 start_pass_dpost
     /tmp/ccgXhgN2.s:478    .text.post_process_2pass:0000000000000000 post_process_2pass
     /tmp/ccgXhgN2.s:187    .text.post_process_1pass:0000000000000000 post_process_1pass
     /tmp/ccgXhgN2.s:301    .text.post_process_prepass:0000000000000000 post_process_prepass
     /tmp/ccgXhgN2.s:639    .text.jinit_d_post_controller:0000000000000000 jinit_d_post_controller
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
jround_up
