   1              		.file	"jidctint.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely.jpeg_idct_islow,"ax",@progbits
   5              	.LCOLDB0:
   6              		.section	.text.jpeg_idct_islow,"ax",@progbits
   7              	.LHOTB0:
   8              		.p2align 4,,15
   9              		.section	.text.unlikely.jpeg_idct_islow
  10              	.Ltext_cold0:
  11              		.section	.text.jpeg_idct_islow
  12              		.globl	jpeg_idct_islow
  14              	jpeg_idct_islow:
  15              	.LFB61:
  16              		.file 1 "fltk-1.3.4-1/jpeg/jidctint.c"
   1:fltk-1.3.4-1/jpeg/jidctint.c **** /*
   2:fltk-1.3.4-1/jpeg/jidctint.c ****  * jidctint.c
   3:fltk-1.3.4-1/jpeg/jidctint.c ****  *
   4:fltk-1.3.4-1/jpeg/jidctint.c ****  * Copyright (C) 1991-1998, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jidctint.c ****  * Modification developed 2002-2013 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jidctint.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jidctint.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jidctint.c ****  *
   9:fltk-1.3.4-1/jpeg/jidctint.c ****  * This file contains a slow-but-accurate integer implementation of the
  10:fltk-1.3.4-1/jpeg/jidctint.c ****  * inverse DCT (Discrete Cosine Transform).  In the IJG code, this routine
  11:fltk-1.3.4-1/jpeg/jidctint.c ****  * must also perform dequantization of the input coefficients.
  12:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  13:fltk-1.3.4-1/jpeg/jidctint.c ****  * A 2-D IDCT can be done by 1-D IDCT on each column followed by 1-D IDCT
  14:fltk-1.3.4-1/jpeg/jidctint.c ****  * on each row (or vice versa, but it's more convenient to emit a row at
  15:fltk-1.3.4-1/jpeg/jidctint.c ****  * a time).  Direct algorithms are also available, but they are much more
  16:fltk-1.3.4-1/jpeg/jidctint.c ****  * complex and seem not to be any faster when reduced to code.
  17:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  18:fltk-1.3.4-1/jpeg/jidctint.c ****  * This implementation is based on an algorithm described in
  19:fltk-1.3.4-1/jpeg/jidctint.c ****  *   C. Loeffler, A. Ligtenberg and G. Moschytz, "Practical Fast 1-D DCT
  20:fltk-1.3.4-1/jpeg/jidctint.c ****  *   Algorithms with 11 Multiplications", Proc. Int'l. Conf. on Acoustics,
  21:fltk-1.3.4-1/jpeg/jidctint.c ****  *   Speech, and Signal Processing 1989 (ICASSP '89), pp. 988-991.
  22:fltk-1.3.4-1/jpeg/jidctint.c ****  * The primary algorithm described there uses 11 multiplies and 29 adds.
  23:fltk-1.3.4-1/jpeg/jidctint.c ****  * We use their alternate method with 12 multiplies and 32 adds.
  24:fltk-1.3.4-1/jpeg/jidctint.c ****  * The advantage of this method is that no data path contains more than one
  25:fltk-1.3.4-1/jpeg/jidctint.c ****  * multiplication; this allows a very simple and accurate implementation in
  26:fltk-1.3.4-1/jpeg/jidctint.c ****  * scaled fixed-point arithmetic, with a minimal number of shifts.
  27:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  28:fltk-1.3.4-1/jpeg/jidctint.c ****  * We also provide IDCT routines with various output sample block sizes for
  29:fltk-1.3.4-1/jpeg/jidctint.c ****  * direct resolution reduction or enlargement and for direct resolving the
  30:fltk-1.3.4-1/jpeg/jidctint.c ****  * common 2x1 and 1x2 subsampling cases without additional resampling: NxN
  31:fltk-1.3.4-1/jpeg/jidctint.c ****  * (N=1...16), 2NxN, and Nx2N (N=1...8) pixels for one 8x8 input DCT block.
  32:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  33:fltk-1.3.4-1/jpeg/jidctint.c ****  * For N<8 we simply take the corresponding low-frequency coefficients of
  34:fltk-1.3.4-1/jpeg/jidctint.c ****  * the 8x8 input DCT block and apply an NxN point IDCT on the sub-block
  35:fltk-1.3.4-1/jpeg/jidctint.c ****  * to yield the downscaled outputs.
  36:fltk-1.3.4-1/jpeg/jidctint.c ****  * This can be seen as direct low-pass downsampling from the DCT domain
  37:fltk-1.3.4-1/jpeg/jidctint.c ****  * point of view rather than the usual spatial domain point of view,
  38:fltk-1.3.4-1/jpeg/jidctint.c ****  * yielding significant computational savings and results at least
  39:fltk-1.3.4-1/jpeg/jidctint.c ****  * as good as common bilinear (averaging) spatial downsampling.
  40:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  41:fltk-1.3.4-1/jpeg/jidctint.c ****  * For N>8 we apply a partial NxN IDCT on the 8 input coefficients as
  42:fltk-1.3.4-1/jpeg/jidctint.c ****  * lower frequencies and higher frequencies assumed to be zero.
  43:fltk-1.3.4-1/jpeg/jidctint.c ****  * It turns out that the computational effort is similar to the 8x8 IDCT
  44:fltk-1.3.4-1/jpeg/jidctint.c ****  * regarding the output size.
  45:fltk-1.3.4-1/jpeg/jidctint.c ****  * Furthermore, the scaling and descaling is the same for all IDCT sizes.
  46:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  47:fltk-1.3.4-1/jpeg/jidctint.c ****  * CAUTION: We rely on the FIX() macro except for the N=1,2,4,8 cases
  48:fltk-1.3.4-1/jpeg/jidctint.c ****  * since there would be too many additional constants to pre-calculate.
  49:fltk-1.3.4-1/jpeg/jidctint.c ****  */
  50:fltk-1.3.4-1/jpeg/jidctint.c **** 
  51:fltk-1.3.4-1/jpeg/jidctint.c **** #define JPEG_INTERNALS
  52:fltk-1.3.4-1/jpeg/jidctint.c **** #include "jinclude.h"
  53:fltk-1.3.4-1/jpeg/jidctint.c **** #include "jpeglib.h"
  54:fltk-1.3.4-1/jpeg/jidctint.c **** #include "jdct.h"		/* Private declarations for DCT subsystem */
  55:fltk-1.3.4-1/jpeg/jidctint.c **** 
  56:fltk-1.3.4-1/jpeg/jidctint.c **** #ifdef DCT_ISLOW_SUPPORTED
  57:fltk-1.3.4-1/jpeg/jidctint.c **** 
  58:fltk-1.3.4-1/jpeg/jidctint.c **** 
  59:fltk-1.3.4-1/jpeg/jidctint.c **** /*
  60:fltk-1.3.4-1/jpeg/jidctint.c ****  * This module is specialized to the case DCTSIZE = 8.
  61:fltk-1.3.4-1/jpeg/jidctint.c ****  */
  62:fltk-1.3.4-1/jpeg/jidctint.c **** 
  63:fltk-1.3.4-1/jpeg/jidctint.c **** #if DCTSIZE != 8
  64:fltk-1.3.4-1/jpeg/jidctint.c ****   Sorry, this code only copes with 8x8 DCT blocks. /* deliberate syntax err */
  65:fltk-1.3.4-1/jpeg/jidctint.c **** #endif
  66:fltk-1.3.4-1/jpeg/jidctint.c **** 
  67:fltk-1.3.4-1/jpeg/jidctint.c **** 
  68:fltk-1.3.4-1/jpeg/jidctint.c **** /*
  69:fltk-1.3.4-1/jpeg/jidctint.c ****  * The poop on this scaling stuff is as follows:
  70:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  71:fltk-1.3.4-1/jpeg/jidctint.c ****  * Each 1-D IDCT step produces outputs which are a factor of sqrt(N)
  72:fltk-1.3.4-1/jpeg/jidctint.c ****  * larger than the true IDCT outputs.  The final outputs are therefore
  73:fltk-1.3.4-1/jpeg/jidctint.c ****  * a factor of N larger than desired; since N=8 this can be cured by
  74:fltk-1.3.4-1/jpeg/jidctint.c ****  * a simple right shift at the end of the algorithm.  The advantage of
  75:fltk-1.3.4-1/jpeg/jidctint.c ****  * this arrangement is that we save two multiplications per 1-D IDCT,
  76:fltk-1.3.4-1/jpeg/jidctint.c ****  * because the y0 and y4 inputs need not be divided by sqrt(N).
  77:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  78:fltk-1.3.4-1/jpeg/jidctint.c ****  * We have to do addition and subtraction of the integer inputs, which
  79:fltk-1.3.4-1/jpeg/jidctint.c ****  * is no problem, and multiplication by fractional constants, which is
  80:fltk-1.3.4-1/jpeg/jidctint.c ****  * a problem to do in integer arithmetic.  We multiply all the constants
  81:fltk-1.3.4-1/jpeg/jidctint.c ****  * by CONST_SCALE and convert them to integer constants (thus retaining
  82:fltk-1.3.4-1/jpeg/jidctint.c ****  * CONST_BITS bits of precision in the constants).  After doing a
  83:fltk-1.3.4-1/jpeg/jidctint.c ****  * multiplication we have to divide the product by CONST_SCALE, with proper
  84:fltk-1.3.4-1/jpeg/jidctint.c ****  * rounding, to produce the correct output.  This division can be done
  85:fltk-1.3.4-1/jpeg/jidctint.c ****  * cheaply as a right shift of CONST_BITS bits.  We postpone shifting
  86:fltk-1.3.4-1/jpeg/jidctint.c ****  * as long as possible so that partial sums can be added together with
  87:fltk-1.3.4-1/jpeg/jidctint.c ****  * full fractional precision.
  88:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  89:fltk-1.3.4-1/jpeg/jidctint.c ****  * The outputs of the first pass are scaled up by PASS1_BITS bits so that
  90:fltk-1.3.4-1/jpeg/jidctint.c ****  * they are represented to better-than-integral precision.  These outputs
  91:fltk-1.3.4-1/jpeg/jidctint.c ****  * require BITS_IN_JSAMPLE + PASS1_BITS + 3 bits; this fits in a 16-bit word
  92:fltk-1.3.4-1/jpeg/jidctint.c ****  * with the recommended scaling.  (To scale up 12-bit sample data further, an
  93:fltk-1.3.4-1/jpeg/jidctint.c ****  * intermediate INT32 array would be needed.)
  94:fltk-1.3.4-1/jpeg/jidctint.c ****  *
  95:fltk-1.3.4-1/jpeg/jidctint.c ****  * To avoid overflow of the 32-bit intermediate results in pass 2, we must
  96:fltk-1.3.4-1/jpeg/jidctint.c ****  * have BITS_IN_JSAMPLE + CONST_BITS + PASS1_BITS <= 26.  Error analysis
  97:fltk-1.3.4-1/jpeg/jidctint.c ****  * shows that the values given below are the most effective.
  98:fltk-1.3.4-1/jpeg/jidctint.c ****  */
  99:fltk-1.3.4-1/jpeg/jidctint.c **** 
 100:fltk-1.3.4-1/jpeg/jidctint.c **** #if BITS_IN_JSAMPLE == 8
 101:fltk-1.3.4-1/jpeg/jidctint.c **** #define CONST_BITS  13
 102:fltk-1.3.4-1/jpeg/jidctint.c **** #define PASS1_BITS  2
 103:fltk-1.3.4-1/jpeg/jidctint.c **** #else
 104:fltk-1.3.4-1/jpeg/jidctint.c **** #define CONST_BITS  13
 105:fltk-1.3.4-1/jpeg/jidctint.c **** #define PASS1_BITS  1		/* lose a little precision to avoid overflow */
 106:fltk-1.3.4-1/jpeg/jidctint.c **** #endif
 107:fltk-1.3.4-1/jpeg/jidctint.c **** 
 108:fltk-1.3.4-1/jpeg/jidctint.c **** /* Some C compilers fail to reduce "FIX(constant)" at compile time, thus
 109:fltk-1.3.4-1/jpeg/jidctint.c ****  * causing a lot of useless floating-point operations at run time.
 110:fltk-1.3.4-1/jpeg/jidctint.c ****  * To get around this we use the following pre-calculated constants.
 111:fltk-1.3.4-1/jpeg/jidctint.c ****  * If you change CONST_BITS you may want to add appropriate values.
 112:fltk-1.3.4-1/jpeg/jidctint.c ****  * (With a reasonable C compiler, you can just rely on the FIX() macro...)
 113:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 114:fltk-1.3.4-1/jpeg/jidctint.c **** 
 115:fltk-1.3.4-1/jpeg/jidctint.c **** #if CONST_BITS == 13
 116:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_298631336  ((INT32)  2446)	/* FIX(0.298631336) */
 117:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_390180644  ((INT32)  3196)	/* FIX(0.390180644) */
 118:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_541196100  ((INT32)  4433)	/* FIX(0.541196100) */
 119:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_765366865  ((INT32)  6270)	/* FIX(0.765366865) */
 120:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_899976223  ((INT32)  7373)	/* FIX(0.899976223) */
 121:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_175875602  ((INT32)  9633)	/* FIX(1.175875602) */
 122:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_501321110  ((INT32)  12299)	/* FIX(1.501321110) */
 123:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_847759065  ((INT32)  15137)	/* FIX(1.847759065) */
 124:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_961570560  ((INT32)  16069)	/* FIX(1.961570560) */
 125:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_2_053119869  ((INT32)  16819)	/* FIX(2.053119869) */
 126:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_2_562915447  ((INT32)  20995)	/* FIX(2.562915447) */
 127:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_3_072711026  ((INT32)  25172)	/* FIX(3.072711026) */
 128:fltk-1.3.4-1/jpeg/jidctint.c **** #else
 129:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_298631336  FIX(0.298631336)
 130:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_390180644  FIX(0.390180644)
 131:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_541196100  FIX(0.541196100)
 132:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_765366865  FIX(0.765366865)
 133:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_0_899976223  FIX(0.899976223)
 134:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_175875602  FIX(1.175875602)
 135:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_501321110  FIX(1.501321110)
 136:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_847759065  FIX(1.847759065)
 137:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_1_961570560  FIX(1.961570560)
 138:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_2_053119869  FIX(2.053119869)
 139:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_2_562915447  FIX(2.562915447)
 140:fltk-1.3.4-1/jpeg/jidctint.c **** #define FIX_3_072711026  FIX(3.072711026)
 141:fltk-1.3.4-1/jpeg/jidctint.c **** #endif
 142:fltk-1.3.4-1/jpeg/jidctint.c **** 
 143:fltk-1.3.4-1/jpeg/jidctint.c **** 
 144:fltk-1.3.4-1/jpeg/jidctint.c **** /* Multiply an INT32 variable by an INT32 constant to yield an INT32 result.
 145:fltk-1.3.4-1/jpeg/jidctint.c ****  * For 8-bit samples with the recommended scaling, all the variable
 146:fltk-1.3.4-1/jpeg/jidctint.c ****  * and constant values involved are no more than 16 bits wide, so a
 147:fltk-1.3.4-1/jpeg/jidctint.c ****  * 16x16->32 bit multiply can be used instead of a full 32x32 multiply.
 148:fltk-1.3.4-1/jpeg/jidctint.c ****  * For 12-bit samples, a full 32-bit multiplication will be needed.
 149:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 150:fltk-1.3.4-1/jpeg/jidctint.c **** 
 151:fltk-1.3.4-1/jpeg/jidctint.c **** #if BITS_IN_JSAMPLE == 8
 152:fltk-1.3.4-1/jpeg/jidctint.c **** #define MULTIPLY(var,const)  MULTIPLY16C16(var,const)
 153:fltk-1.3.4-1/jpeg/jidctint.c **** #else
 154:fltk-1.3.4-1/jpeg/jidctint.c **** #define MULTIPLY(var,const)  ((var) * (const))
 155:fltk-1.3.4-1/jpeg/jidctint.c **** #endif
 156:fltk-1.3.4-1/jpeg/jidctint.c **** 
 157:fltk-1.3.4-1/jpeg/jidctint.c **** 
 158:fltk-1.3.4-1/jpeg/jidctint.c **** /* Dequantize a coefficient by multiplying it by the multiplier-table
 159:fltk-1.3.4-1/jpeg/jidctint.c ****  * entry; produce an int result.  In this module, both inputs and result
 160:fltk-1.3.4-1/jpeg/jidctint.c ****  * are 16 bits or less, so either int or short multiply will work.
 161:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 162:fltk-1.3.4-1/jpeg/jidctint.c **** 
 163:fltk-1.3.4-1/jpeg/jidctint.c **** #define DEQUANTIZE(coef,quantval)  (((ISLOW_MULT_TYPE) (coef)) * (quantval))
 164:fltk-1.3.4-1/jpeg/jidctint.c **** 
 165:fltk-1.3.4-1/jpeg/jidctint.c **** 
 166:fltk-1.3.4-1/jpeg/jidctint.c **** /*
 167:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients.
 168:fltk-1.3.4-1/jpeg/jidctint.c ****  *
 169:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/16).
 170:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 171:fltk-1.3.4-1/jpeg/jidctint.c **** 
 172:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
 173:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_islow (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 174:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
 175:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
 176:fltk-1.3.4-1/jpeg/jidctint.c **** {
  17              		.loc 1 176 0
  18              		.cfi_startproc
  19              	.LVL0:
  20 0000 4157     		pushq	%r15
  21              		.cfi_def_cfa_offset 16
  22              		.cfi_offset 15, -16
  23 0002 4156     		pushq	%r14
  24              		.cfi_def_cfa_offset 24
  25              		.cfi_offset 14, -24
  26 0004 4155     		pushq	%r13
  27              		.cfi_def_cfa_offset 32
  28              		.cfi_offset 13, -32
  29 0006 4154     		pushq	%r12
  30              		.cfi_def_cfa_offset 40
  31              		.cfi_offset 12, -40
  32 0008 55       		pushq	%rbp
  33              		.cfi_def_cfa_offset 48
  34              		.cfi_offset 6, -48
  35 0009 53       		pushq	%rbx
  36              		.cfi_def_cfa_offset 56
  37              		.cfi_offset 3, -56
  38 000a 4881EC38 		subq	$312, %rsp
  38      010000
  39              		.cfi_def_cfa_offset 368
  40 0011 4C8B6658 		movq	88(%rsi), %r12
  41              		.loc 1 176 0
  42 0015 64488B04 		movq	%fs:40, %rax
  42      25280000 
  42      00
  43 001e 48898424 		movq	%rax, 296(%rsp)
  43      28010000 
  44 0026 31C0     		xorl	%eax, %eax
 177:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
 178:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13;
 179:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
 180:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
 181:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
 182:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
 183:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
 184:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
  45              		.loc 1 184 0
  46 0028 488B87B8 		movq	440(%rdi), %rax
  46      010000
 176:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
  47              		.loc 1 176 0
  48 002f 48894C24 		movq	%rcx, 16(%rsp)
  48      10
  49 0034 488D6C24 		leaq	32(%rsp), %rbp
  49      20
  50 0039 44894424 		movl	%r8d, 8(%rsp)
  50      08
 185:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 186:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[DCTSIZE2];	/* buffers data between passes */
 187:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 188:fltk-1.3.4-1/jpeg/jidctint.c **** 
 189:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
 190:fltk-1.3.4-1/jpeg/jidctint.c ****    * Note results are scaled up by sqrt(8) compared to a true IDCT;
 191:fltk-1.3.4-1/jpeg/jidctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
 192:fltk-1.3.4-1/jpeg/jidctint.c ****    */
 193:fltk-1.3.4-1/jpeg/jidctint.c **** 
 194:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
 195:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 196:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 197:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = DCTSIZE; ctr > 0; ctr--) {
  51              		.loc 1 197 0
  52 003e C7042408 		movl	$8, (%rsp)
  52      000000
 184:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
  53              		.loc 1 184 0
  54 0045 4C8DB880 		leaq	128(%rax), %r15
  54      000000
  55              	.LVL1:
  56              		.loc 1 197 0
  57 004c 4C897C24 		movq	%r15, 24(%rsp)
  57      18
  58 0051 E9B80100 		jmp	.L10
  58      00
  59              	.LVL2:
  60 0056 662E0F1F 		.p2align 4,,10
  60      84000000 
  60      0000
  61              		.p2align 3
  62              	.L28:
 198:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
 199:fltk-1.3.4-1/jpeg/jidctint.c ****      * coefficients are zero, especially the AC terms.  We can exploit this
 200:fltk-1.3.4-1/jpeg/jidctint.c ****      * by short-circuiting the IDCT calculation for any column in which all
 201:fltk-1.3.4-1/jpeg/jidctint.c ****      * the AC terms are zero.  In that case each output is equal to the
 202:fltk-1.3.4-1/jpeg/jidctint.c ****      * DC coefficient (with scale factor as needed).
 203:fltk-1.3.4-1/jpeg/jidctint.c ****      * With typical images and quantization tables, half or more of the
 204:fltk-1.3.4-1/jpeg/jidctint.c ****      * column DCT calculations can be simplified this way.
 205:fltk-1.3.4-1/jpeg/jidctint.c ****      */
 206:fltk-1.3.4-1/jpeg/jidctint.c **** 
 207:fltk-1.3.4-1/jpeg/jidctint.c ****     if (inptr[DCTSIZE*1] == 0 && inptr[DCTSIZE*2] == 0 &&
  63              		.loc 1 207 0 discriminator 1
  64 0060 6685F6   		testw	%si, %si
  65 0063 0F85B601 		jne	.L2
  65      0000
 208:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
  66              		.loc 1 208 0 discriminator 2
  67 0069 0FBF7A30 		movswl	48(%rdx), %edi
 207:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
  68              		.loc 1 207 0 discriminator 2
  69 006d 6685FF   		testw	%di, %di
  70 0070 0F84D203 		je	.L5
  70      0000
  71 0076 0FBF4260 		movswl	96(%rdx), %eax
  72 007a 0FBF5A40 		movswl	64(%rdx), %ebx
  73 007e 440FBF4A 		movswl	112(%rdx), %r9d
  73      70
  74 0083 440FBF42 		movswl	80(%rdx), %r8d
  74      50
  75 0088 0F1F8400 		.p2align 4,,10
  75      00000000 
  76              		.p2align 3
  77              	.L4:
 209:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 210:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 211:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 212:fltk-1.3.4-1/jpeg/jidctint.c ****       int dcval = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]) << PASS1_BITS;
 213:fltk-1.3.4-1/jpeg/jidctint.c **** 
 214:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*0] = dcval;
 215:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*1] = dcval;
 216:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*2] = dcval;
 217:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*3] = dcval;
 218:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*4] = dcval;
 219:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*5] = dcval;
 220:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*6] = dcval;
 221:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*7] = dcval;
 222:fltk-1.3.4-1/jpeg/jidctint.c **** 
 223:fltk-1.3.4-1/jpeg/jidctint.c ****       inptr++;			/* advance pointers to next column */
 224:fltk-1.3.4-1/jpeg/jidctint.c ****       quantptr++;
 225:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr++;
 226:fltk-1.3.4-1/jpeg/jidctint.c ****       continue;
 227:fltk-1.3.4-1/jpeg/jidctint.c ****     }
 228:fltk-1.3.4-1/jpeg/jidctint.c **** 
 229:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part: reverse the even part of the forward DCT.
 230:fltk-1.3.4-1/jpeg/jidctint.c ****      * The rotator is c(-6).
 231:fltk-1.3.4-1/jpeg/jidctint.c ****      */
 232:fltk-1.3.4-1/jpeg/jidctint.c **** 
 233:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
  78              		.loc 1 233 0
  79 0090 410FAF74 		imull	64(%r12), %esi
  79      2440
 234:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
  80              		.loc 1 234 0
  81 0096 410FAF84 		imull	192(%r12), %eax
  81      24C00000 
  81      00
 235:fltk-1.3.4-1/jpeg/jidctint.c **** 
 236:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);       /* c6 */
 237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 238:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 239:fltk-1.3.4-1/jpeg/jidctint.c **** 
 240:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 241:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
  82              		.loc 1 241 0
  83 009f 410FAF9C 		imull	128(%r12), %ebx
  83      24800000 
  83      00
 242:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
 243:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 244:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 245:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += ONE << (CONST_BITS-PASS1_BITS-1);
 246:fltk-1.3.4-1/jpeg/jidctint.c **** 
 247:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z2 + z3;
 248:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z2 - z3;
 249:fltk-1.3.4-1/jpeg/jidctint.c **** 
 250:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp2;
 251:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 252:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 253:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 254:fltk-1.3.4-1/jpeg/jidctint.c **** 
 255:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part per figure 8; the matrix is unitary and hence its
 256:fltk-1.3.4-1/jpeg/jidctint.c ****      * transpose is its inverse.  i0..i3 are y7,y5,y3,y1 respectively.
 257:fltk-1.3.4-1/jpeg/jidctint.c ****      */
 258:fltk-1.3.4-1/jpeg/jidctint.c **** 
 259:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
  84              		.loc 1 259 0
  85 00a8 450FAF8C 		imull	224(%r12), %r9d
  85      24E00000 
  85      00
 260:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
  86              		.loc 1 260 0
  87 00b1 450FAF84 		imull	160(%r12), %r8d
  87      24A00000 
  87      00
 261:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
  88              		.loc 1 261 0
  89 00ba 410FAF7C 		imull	96(%r12), %edi
  89      2460
 233:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
  90              		.loc 1 233 0
  91 00c0 4863F6   		movslq	%esi, %rsi
  92              	.LVL3:
 234:fltk-1.3.4-1/jpeg/jidctint.c **** 
  93              		.loc 1 234 0
  94 00c3 4898     		cltq
  95              	.LVL4:
 236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
  96              		.loc 1 236 0
  97 00c5 4C8D1C06 		leaq	(%rsi,%rax), %r11
 241:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
  98              		.loc 1 241 0
  99 00c9 4863DB   		movslq	%ebx, %rbx
 238:fltk-1.3.4-1/jpeg/jidctint.c **** 
 100              		.loc 1 238 0
 101 00cc 4869C0DF 		imulq	$-15137, %rax, %rax
 101      C4FFFF
 102              	.LVL5:
 243:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 103              		.loc 1 243 0
 104 00d3 48C1E30D 		salq	$13, %rbx
 259:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 105              		.loc 1 259 0
 106 00d7 4D63C9   		movslq	%r9d, %r9
 236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 107              		.loc 1 236 0
 108 00da 4D69DB51 		imulq	$4433, %r11, %r11
 108      110000
 109              	.LVL6:
 260:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 110              		.loc 1 260 0
 111 00e1 4D63C0   		movslq	%r8d, %r8
 237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 112              		.loc 1 237 0
 113 00e4 4869F67E 		imulq	$6270, %rsi, %rsi
 113      180000
 114              	.LVL7:
 115              		.loc 1 261 0
 116 00eb 4863FF   		movslq	%edi, %rdi
 262:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 117              		.loc 1 262 0
 118 00ee 410FAF4C 		imull	32(%r12), %ecx
 118      2420
 237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 119              		.loc 1 237 0
 120 00f4 4C01DE   		addq	%r11, %rsi
 121              	.LVL8:
 238:fltk-1.3.4-1/jpeg/jidctint.c **** 
 122              		.loc 1 238 0
 123 00f7 4901C3   		addq	%rax, %r11
 124              	.LVL9:
 240:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 125              		.loc 1 240 0
 126 00fa 0FBF02   		movswl	(%rdx), %eax
 127 00fd 410FAF04 		imull	(%r12), %eax
 127      24
 128              		.loc 1 262 0
 129 0102 4863C9   		movslq	%ecx, %rcx
 240:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 130              		.loc 1 240 0
 131 0105 4898     		cltq
 132              	.LVL10:
 242:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 133              		.loc 1 242 0
 134 0107 48C1E00D 		salq	$13, %rax
 135              	.LVL11:
 245:fltk-1.3.4-1/jpeg/jidctint.c **** 
 136              		.loc 1 245 0
 137 010b 48050004 		addq	$1024, %rax
 137      0000
 138              	.LVL12:
 247:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z2 - z3;
 139              		.loc 1 247 0
 140 0111 4C8D1403 		leaq	(%rbx,%rax), %r10
 141              	.LVL13:
 248:fltk-1.3.4-1/jpeg/jidctint.c **** 
 142              		.loc 1 248 0
 143 0115 4829D8   		subq	%rbx, %rax
 144              	.LVL14:
 263:fltk-1.3.4-1/jpeg/jidctint.c **** 
 264:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = tmp0 + tmp2;
 145              		.loc 1 264 0
 146 0118 498D1C39 		leaq	(%r9,%rdi), %rbx
 147              	.LVL15:
 252:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 148              		.loc 1 252 0
 149 011c 4D8D2C03 		leaq	(%r11,%rax), %r13
 253:fltk-1.3.4-1/jpeg/jidctint.c **** 
 150              		.loc 1 253 0
 151 0120 4C29D8   		subq	%r11, %rax
 152              	.LVL16:
 250:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 153              		.loc 1 250 0
 154 0123 4E8D3416 		leaq	(%rsi,%r10), %r14
 155              	.LVL17:
 251:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 156              		.loc 1 251 0
 157 0127 4929F2   		subq	%rsi, %r10
 158              	.LVL18:
 265:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp1 + tmp3;
 159              		.loc 1 265 0
 160 012a 498D3408 		leaq	(%r8,%rcx), %rsi
 161              	.LVL19:
 266:fltk-1.3.4-1/jpeg/jidctint.c **** 
 267:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_1_175875602);       /*  c3 */
 162              		.loc 1 267 0
 163 012e 4C8D1C33 		leaq	(%rbx,%rsi), %r11
 268:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 164              		.loc 1 268 0
 165 0132 4869DB3B 		imulq	$-16069, %rbx, %rbx
 165      C1FFFF
 166              	.LVL20:
 267:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 167              		.loc 1 267 0
 168 0139 4D69DBA1 		imulq	$9633, %r11, %r11
 168      250000
 169              	.LVL21:
 269:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, - FIX_0_390180644);          /* -c3+c5 */
 170              		.loc 1 269 0
 171 0140 4869F684 		imulq	$-3196, %rsi, %rsi
 171      F3FFFF
 172              	.LVL22:
 270:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
 173              		.loc 1 270 0
 174 0147 4C01DB   		addq	%r11, %rbx
 175              	.LVL23:
 271:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z1;
 176              		.loc 1 271 0
 177 014a 4C01DE   		addq	%r11, %rsi
 178              	.LVL24:
 272:fltk-1.3.4-1/jpeg/jidctint.c **** 
 273:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223); /* -c3+c7 */
 179              		.loc 1 273 0
 180 014d 4D8D1C09 		leaq	(%r9,%rcx), %r11
 181              	.LVL25:
 274:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 182              		.loc 1 274 0
 183 0151 4D69C98E 		imulq	$2446, %r9, %r9
 183      090000
 184              	.LVL26:
 273:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 185              		.loc 1 273 0
 186 0158 4D69DB33 		imulq	$-7373, %r11, %r11
 186      E3FFFF
 187              	.LVL27:
 275:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_1_501321110);        /*  c1+c3-c5-c7 */
 188              		.loc 1 275 0
 189 015f 4869C90B 		imulq	$12299, %rcx, %rcx
 189      300000
 190              	.LVL28:
 276:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 191              		.loc 1 276 0
 192 0166 4E8D3C1B 		leaq	(%rbx,%r11), %r15
 277:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z1 + z3;
 193              		.loc 1 277 0
 194 016a 4901F3   		addq	%rsi, %r11
 195              	.LVL29:
 196 016d 4C01D9   		addq	%r11, %rcx
 197              	.LVL30:
 276:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 198              		.loc 1 276 0
 199 0170 4D01F9   		addq	%r15, %r9
 200              	.LVL31:
 278:fltk-1.3.4-1/jpeg/jidctint.c **** 
 279:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447); /* -c1-c3 */
 201              		.loc 1 279 0
 202 0173 4D8D3C38 		leaq	(%r8,%rdi), %r15
 280:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 203              		.loc 1 280 0
 204 0177 4D69C0B3 		imulq	$16819, %r8, %r8
 204      410000
 205              	.LVL32:
 279:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 206              		.loc 1 279 0
 207 017e 4D69FFFD 		imulq	$-20995, %r15, %r15
 207      ADFFFF
 208              	.LVL33:
 281:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_3_072711026);        /*  c1+c3+c5-c7 */
 209              		.loc 1 281 0
 210 0185 4869FF54 		imulq	$25172, %rdi, %rdi
 210      620000
 211              	.LVL34:
 282:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 283:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 212              		.loc 1 283 0
 213 018c 4C01FB   		addq	%r15, %rbx
 214              	.LVL35:
 282:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 215              		.loc 1 282 0
 216 018f 4C01FE   		addq	%r15, %rsi
 217              	.LVL36:
 218              		.loc 1 283 0
 219 0192 4801DF   		addq	%rbx, %rdi
 220              	.LVL37:
 282:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 221              		.loc 1 282 0
 222 0195 4901F0   		addq	%rsi, %r8
 223              	.LVL38:
 284:fltk-1.3.4-1/jpeg/jidctint.c **** 
 285:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage: inputs are tmp10..tmp13, tmp0..tmp3 */
 286:fltk-1.3.4-1/jpeg/jidctint.c **** 
 287:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*0] = (int) RIGHT_SHIFT(tmp10 + tmp3, CONST_BITS-PASS1_BITS);
 224              		.loc 1 287 0
 225 0198 498D340E 		leaq	(%r14,%rcx), %rsi
 288:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 226              		.loc 1 288 0
 227 019c 4929CE   		subq	%rcx, %r14
 228              	.LVL39:
 289:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 229              		.loc 1 289 0
 230 019f 498D4C3D 		leaq	0(%r13,%rdi), %rcx
 230      00
 231              	.LVL40:
 290:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 232              		.loc 1 290 0
 233 01a4 4929FD   		subq	%rdi, %r13
 234              	.LVL41:
 287:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 235              		.loc 1 287 0
 236 01a7 48C1FE0B 		sarq	$11, %rsi
 288:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 237              		.loc 1 288 0
 238 01ab 49C1FE0B 		sarq	$11, %r14
 239              		.loc 1 290 0
 240 01af 49C1FD0B 		sarq	$11, %r13
 289:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 241              		.loc 1 289 0
 242 01b3 48C1F90B 		sarq	$11, %rcx
 287:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 243              		.loc 1 287 0
 244 01b7 897500   		movl	%esi, 0(%rbp)
 288:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 245              		.loc 1 288 0
 246 01ba 4489B5E0 		movl	%r14d, 224(%rbp)
 246      000000
 289:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 247              		.loc 1 289 0
 248 01c1 894D20   		movl	%ecx, 32(%rbp)
 291:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*2] = (int) RIGHT_SHIFT(tmp12 + tmp1, CONST_BITS-PASS1_BITS);
 249              		.loc 1 291 0
 250 01c4 4A8D0C00 		leaq	(%rax,%r8), %rcx
 292:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 251              		.loc 1 292 0
 252 01c8 4C29C0   		subq	%r8, %rax
 253              	.LVL42:
 254 01cb 48C1F80B 		sarq	$11, %rax
 290:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*2] = (int) RIGHT_SHIFT(tmp12 + tmp1, CONST_BITS-PASS1_BITS);
 255              		.loc 1 290 0
 256 01cf 4489ADC0 		movl	%r13d, 192(%rbp)
 256      000000
 257              		.loc 1 292 0
 258 01d6 8985A000 		movl	%eax, 160(%rbp)
 258      0000
 293:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 259              		.loc 1 293 0
 260 01dc 4B8D040A 		leaq	(%r10,%r9), %rax
 294:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*4] = (int) RIGHT_SHIFT(tmp13 - tmp0, CONST_BITS-PASS1_BITS);
 261              		.loc 1 294 0
 262 01e0 4D29CA   		subq	%r9, %r10
 263              	.LVL43:
 291:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 264              		.loc 1 291 0
 265 01e3 48C1F90B 		sarq	$11, %rcx
 266              		.loc 1 294 0
 267 01e7 49C1FA0B 		sarq	$11, %r10
 293:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 268              		.loc 1 293 0
 269 01eb 48C1F80B 		sarq	$11, %rax
 291:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 270              		.loc 1 291 0
 271 01ef 894D40   		movl	%ecx, 64(%rbp)
 272              		.loc 1 294 0
 273 01f2 44899580 		movl	%r10d, 128(%rbp)
 273      000000
 274              	.LVL44:
 293:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 275              		.loc 1 293 0
 276 01f9 894560   		movl	%eax, 96(%rbp)
 277              	.LVL45:
 278              	.L9:
 279 01fc 4883C202 		addq	$2, %rdx
 280 0200 4983C404 		addq	$4, %r12
 281 0204 4883C504 		addq	$4, %rbp
 197:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
 282              		.loc 1 197 0 discriminator 2
 283 0208 832C2401 		subl	$1, (%rsp)
 284              	.LVL46:
 285 020c 7432     		je	.L27
 286              	.LVL47:
 287              	.L10:
 207:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 288              		.loc 1 207 0
 289 020e 0FBF4A10 		movswl	16(%rdx), %ecx
 290 0212 0FBF7220 		movswl	32(%rdx), %esi
 291 0216 6685C9   		testw	%cx, %cx
 292 0219 0F8441FE 		je	.L28
 292      FFFF
 293              	.L2:
 294 021f 0FBF4260 		movswl	96(%rdx), %eax
 295 0223 0FBF5A40 		movswl	64(%rdx), %ebx
 296 0227 440FBF4A 		movswl	112(%rdx), %r9d
 296      70
 297 022c 440FBF42 		movswl	80(%rdx), %r8d
 297      50
 298 0231 0FBF7A30 		movswl	48(%rdx), %edi
 299 0235 E956FEFF 		jmp	.L4
 299      FF
 300              	.LVL48:
 301 023a 660F1F44 		.p2align 4,,10
 301      0000
 302              		.p2align 3
 303              	.L27:
 304 0240 8B442408 		movl	8(%rsp), %eax
 305 0244 4C8B7C24 		movq	24(%rsp), %r15
 305      18
 306 0249 488D6C24 		leaq	64(%rsp), %rbp
 306      40
 307 024e 48894424 		movq	%rax, 8(%rsp)
 307      08
 308              	.LVL49:
 309 0253 488B4424 		movq	16(%rsp), %rax
 309      10
 310 0258 48890424 		movq	%rax, (%rsp)
 311              	.LVL50:
 312 025c E9AB0100 		jmp	.L19
 312      00
 313              	.LVL51:
 314              		.p2align 4,,10
 315 0261 0F1F8000 		.p2align 3
 315      000000
 316              	.L30:
 295:fltk-1.3.4-1/jpeg/jidctint.c **** 
 296:fltk-1.3.4-1/jpeg/jidctint.c ****     inptr++;			/* advance pointers to next column */
 297:fltk-1.3.4-1/jpeg/jidctint.c ****     quantptr++;
 298:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr++;
 299:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 300:fltk-1.3.4-1/jpeg/jidctint.c **** 
 301:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process rows from work array, store into output array.
 302:fltk-1.3.4-1/jpeg/jidctint.c ****    * Note that we must descale the results by a factor of 8 == 2**3,
 303:fltk-1.3.4-1/jpeg/jidctint.c ****    * and also undo the PASS1_BITS scaling.
 304:fltk-1.3.4-1/jpeg/jidctint.c ****    */
 305:fltk-1.3.4-1/jpeg/jidctint.c **** 
 306:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 307:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < DCTSIZE; ctr++) {
 308:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 309:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Rows of zeroes can be exploited in the same way as we did with columns.
 310:fltk-1.3.4-1/jpeg/jidctint.c ****      * However, the column calculation has created many nonzero AC terms, so
 311:fltk-1.3.4-1/jpeg/jidctint.c ****      * the simplification applies less often (typically 5% to 10% of the time).
 312:fltk-1.3.4-1/jpeg/jidctint.c ****      * On machines with very fast multiplication, it's possible that the
 313:fltk-1.3.4-1/jpeg/jidctint.c ****      * test takes more time than it's worth.  In that case this section
 314:fltk-1.3.4-1/jpeg/jidctint.c ****      * may be commented out.
 315:fltk-1.3.4-1/jpeg/jidctint.c ****      */
 316:fltk-1.3.4-1/jpeg/jidctint.c **** 
 317:fltk-1.3.4-1/jpeg/jidctint.c **** #ifndef NO_ZERO_ROW_TEST
 318:fltk-1.3.4-1/jpeg/jidctint.c ****     if (wsptr[1] == 0 && wsptr[2] == 0 && wsptr[3] == 0 && wsptr[4] == 0 &&
 317              		.loc 1 318 0 discriminator 1
 318 0268 4585C9   		testl	%r9d, %r9d
 319 026b 0F85B801 		jne	.L11
 319      0000
 320              		.loc 1 318 0 is_stmt 0 discriminator 2
 321 0271 4C635DEC 		movslq	-20(%rbp), %r11
 322 0275 4585DB   		testl	%r11d, %r11d
 323 0278 0F842202 		je	.L14
 323      0000
 324 027e 486345F8 		movslq	-8(%rbp), %rax
 325 0282 4C6365FC 		movslq	-4(%rbp), %r12
 326 0286 48635DF4 		movslq	-12(%rbp), %rbx
 327 028a 8B55F0   		movl	-16(%rbp), %edx
 328 028d 0F1F00   		.p2align 4,,10
 329              		.p2align 3
 330              	.L13:
 331              	.LVL52:
 319:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 320:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 321:fltk-1.3.4-1/jpeg/jidctint.c ****       JSAMPLE dcval = range_limit[(int) DESCALE((INT32) wsptr[0], PASS1_BITS+3)
 322:fltk-1.3.4-1/jpeg/jidctint.c **** 				  & RANGE_MASK];
 323:fltk-1.3.4-1/jpeg/jidctint.c **** 
 324:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[0] = dcval;
 325:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[1] = dcval;
 326:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[2] = dcval;
 327:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[3] = dcval;
 328:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[4] = dcval;
 329:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[5] = dcval;
 330:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[6] = dcval;
 331:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[7] = dcval;
 332:fltk-1.3.4-1/jpeg/jidctint.c **** 
 333:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr += DCTSIZE;		/* advance pointer to next row */
 334:fltk-1.3.4-1/jpeg/jidctint.c ****       continue;
 335:fltk-1.3.4-1/jpeg/jidctint.c ****     }
 336:fltk-1.3.4-1/jpeg/jidctint.c **** #endif
 337:fltk-1.3.4-1/jpeg/jidctint.c **** 
 338:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part: reverse the even part of the forward DCT.
 339:fltk-1.3.4-1/jpeg/jidctint.c ****      * The rotator is c(-6).
 340:fltk-1.3.4-1/jpeg/jidctint.c ****      */
 341:fltk-1.3.4-1/jpeg/jidctint.c **** 
 342:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[2];
 343:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
 344:fltk-1.3.4-1/jpeg/jidctint.c **** 
 345:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);       /* c6 */
 332              		.loc 1 345 0 is_stmt 1
 333 0290 498D0C01 		leaq	(%r9,%rax), %rcx
 346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 347:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 348:fltk-1.3.4-1/jpeg/jidctint.c **** 
 349:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 350:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 351:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 352:fltk-1.3.4-1/jpeg/jidctint.c **** 
 353:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (z2 + z3) << CONST_BITS;
 354:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
 355:fltk-1.3.4-1/jpeg/jidctint.c **** 
 356:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp2;
 357:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 358:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 359:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 360:fltk-1.3.4-1/jpeg/jidctint.c **** 
 361:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part per figure 8; the matrix is unitary and hence its
 362:fltk-1.3.4-1/jpeg/jidctint.c ****      * transpose is its inverse.  i0..i3 are y7,y5,y3,y1 respectively.
 363:fltk-1.3.4-1/jpeg/jidctint.c ****      */
 364:fltk-1.3.4-1/jpeg/jidctint.c **** 
 365:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[7];
 366:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (INT32) wsptr[5];
 367:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[3];
 368:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = (INT32) wsptr[1];
 369:fltk-1.3.4-1/jpeg/jidctint.c **** 
 370:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = tmp0 + tmp2;
 334              		.loc 1 370 0
 335 0294 4F8D2C1C 		leaq	(%r12,%r11), %r13
 346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 336              		.loc 1 346 0
 337 0298 4D69C97E 		imulq	$6270, %r9, %r9
 337      180000
 338              	.LVL53:
 345:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 339              		.loc 1 345 0
 340 029f 4869F151 		imulq	$4433, %rcx, %rsi
 340      110000
 341              	.LVL54:
 347:fltk-1.3.4-1/jpeg/jidctint.c **** 
 342              		.loc 1 347 0
 343 02a6 4869C8DF 		imulq	$-15137, %rax, %rcx
 343      C4FFFF
 350:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 344              		.loc 1 350 0
 345 02ad 486345E0 		movslq	-32(%rbp), %rax
 346              	.LVL55:
 346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 347              		.loc 1 346 0
 348 02b1 4901F1   		addq	%rsi, %r9
 349              	.LVL56:
 347:fltk-1.3.4-1/jpeg/jidctint.c **** 
 350              		.loc 1 347 0
 351 02b4 4801F1   		addq	%rsi, %rcx
 352              	.LVL57:
 350:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 353              		.loc 1 350 0
 354 02b7 4883C010 		addq	$16, %rax
 355              	.LVL58:
 351:fltk-1.3.4-1/jpeg/jidctint.c **** 
 356              		.loc 1 351 0
 357 02bb 4863F2   		movslq	%edx, %rsi
 358              	.LVL59:
 353:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
 359              		.loc 1 353 0
 360 02be 488D1430 		leaq	(%rax,%rsi), %rdx
 354:fltk-1.3.4-1/jpeg/jidctint.c **** 
 361              		.loc 1 354 0
 362 02c2 4829F0   		subq	%rsi, %rax
 363              	.LVL60:
 364 02c5 48C1E00D 		salq	$13, %rax
 353:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
 365              		.loc 1 353 0
 366 02c9 48C1E20D 		salq	$13, %rdx
 367              	.LVL61:
 356:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 368              		.loc 1 356 0
 369 02cd 4D8D1411 		leaq	(%r9,%rdx), %r10
 370              	.LVL62:
 357:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 371              		.loc 1 357 0
 372 02d1 4C29CA   		subq	%r9, %rdx
 373              	.LVL63:
 358:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 374              		.loc 1 358 0
 375 02d4 4C8D0C01 		leaq	(%rcx,%rax), %r9
 376              	.LVL64:
 359:fltk-1.3.4-1/jpeg/jidctint.c **** 
 377              		.loc 1 359 0
 378 02d8 4829C8   		subq	%rcx, %rax
 379              	.LVL65:
 371:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp1 + tmp3;
 380              		.loc 1 371 0
 381 02db 4A8D0C03 		leaq	(%rbx,%r8), %rcx
 382              	.LVL66:
 372:fltk-1.3.4-1/jpeg/jidctint.c **** 
 373:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_1_175875602);       /*  c3 */
 383              		.loc 1 373 0
 384 02df 498D740D 		leaq	0(%r13,%rcx), %rsi
 384      00
 374:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 385              		.loc 1 374 0
 386 02e4 4D69ED3B 		imulq	$-16069, %r13, %r13
 386      C1FFFF
 387              	.LVL67:
 373:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 388              		.loc 1 373 0
 389 02eb 4869F6A1 		imulq	$9633, %rsi, %rsi
 389      250000
 390              	.LVL68:
 375:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, - FIX_0_390180644);          /* -c3+c5 */
 391              		.loc 1 375 0
 392 02f2 4869C984 		imulq	$-3196, %rcx, %rcx
 392      F3FFFF
 393              	.LVL69:
 376:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
 394              		.loc 1 376 0
 395 02f9 4901F5   		addq	%rsi, %r13
 396              	.LVL70:
 377:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z1;
 397              		.loc 1 377 0
 398 02fc 4801F1   		addq	%rsi, %rcx
 399              	.LVL71:
 378:fltk-1.3.4-1/jpeg/jidctint.c **** 
 379:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223); /* -c3+c7 */
 400              		.loc 1 379 0
 401 02ff 4B8D3404 		leaq	(%r12,%r8), %rsi
 402              	.LVL72:
 380:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 403              		.loc 1 380 0
 404 0303 4D69E48E 		imulq	$2446, %r12, %r12
 404      090000
 405              	.LVL73:
 379:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 406              		.loc 1 379 0
 407 030a 4869F633 		imulq	$-7373, %rsi, %rsi
 407      E3FFFF
 408              	.LVL74:
 381:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_1_501321110);        /*  c1+c3-c5-c7 */
 409              		.loc 1 381 0
 410 0311 4D69C00B 		imulq	$12299, %r8, %r8
 410      300000
 411              	.LVL75:
 382:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 412              		.loc 1 382 0
 413 0318 4D8D7435 		leaq	0(%r13,%rsi), %r14
 413      00
 383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z1 + z3;
 414              		.loc 1 383 0
 415 031d 4801CE   		addq	%rcx, %rsi
 416              	.LVL76:
 417 0320 4901F0   		addq	%rsi, %r8
 418              	.LVL77:
 382:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 419              		.loc 1 382 0
 420 0323 4D01F4   		addq	%r14, %r12
 421              	.LVL78:
 384:fltk-1.3.4-1/jpeg/jidctint.c **** 
 385:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447); /* -c1-c3 */
 422              		.loc 1 385 0
 423 0326 4E8D341B 		leaq	(%rbx,%r11), %r14
 386:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 424              		.loc 1 386 0
 425 032a 4869DBB3 		imulq	$16819, %rbx, %rbx
 425      410000
 426              	.LVL79:
 385:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 427              		.loc 1 385 0
 428 0331 4D69F6FD 		imulq	$-20995, %r14, %r14
 428      ADFFFF
 429              	.LVL80:
 387:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_3_072711026);        /*  c1+c3+c5-c7 */
 430              		.loc 1 387 0
 431 0338 4D69DB54 		imulq	$25172, %r11, %r11
 431      620000
 432              	.LVL81:
 388:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 433              		.loc 1 388 0
 434 033f 4C01F1   		addq	%r14, %rcx
 435              	.LVL82:
 389:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 436              		.loc 1 389 0
 437 0342 4D01F5   		addq	%r14, %r13
 438              	.LVL83:
 388:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 439              		.loc 1 388 0
 440 0345 4801CB   		addq	%rcx, %rbx
 441              	.LVL84:
 390:fltk-1.3.4-1/jpeg/jidctint.c **** 
 391:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage: inputs are tmp10..tmp13, tmp0..tmp3 */
 392:fltk-1.3.4-1/jpeg/jidctint.c **** 
 393:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp3,
 442              		.loc 1 393 0
 443 0348 4B8D0C02 		leaq	(%r10,%r8), %rcx
 394:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 395:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 396:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp3,
 444              		.loc 1 396 0
 445 034c 4D29C2   		subq	%r8, %r10
 446              	.LVL85:
 389:fltk-1.3.4-1/jpeg/jidctint.c **** 
 447              		.loc 1 389 0
 448 034f 4D01EB   		addq	%r13, %r11
 449              	.LVL86:
 393:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 450              		.loc 1 393 0
 451 0352 48C1F912 		sarq	$18, %rcx
 452 0356 81E1FF03 		andl	$1023, %ecx
 452      0000
 453              		.loc 1 396 0
 454 035c 49C1FA12 		sarq	$18, %r10
 393:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 455              		.loc 1 393 0
 456 0360 410FB60C 		movzbl	(%r15,%rcx), %ecx
 456      0F
 457              		.loc 1 396 0
 458 0365 4181E2FF 		andl	$1023, %r10d
 458      030000
 393:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 459              		.loc 1 393 0
 460 036c 880F     		movb	%cl, (%rdi)
 461              		.loc 1 396 0
 462 036e 430FB60C 		movzbl	(%r15,%r10), %ecx
 462      17
 463 0373 884F07   		movb	%cl, 7(%rdi)
 397:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 398:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 399:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp2,
 464              		.loc 1 399 0
 465 0376 4B8D0C19 		leaq	(%r9,%r11), %rcx
 400:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 401:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 402:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp2,
 466              		.loc 1 402 0
 467 037a 4D29D9   		subq	%r11, %r9
 468              	.LVL87:
 469 037d 49C1F912 		sarq	$18, %r9
 399:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 470              		.loc 1 399 0
 471 0381 48C1F912 		sarq	$18, %rcx
 472              		.loc 1 402 0
 473 0385 4181E1FF 		andl	$1023, %r9d
 473      030000
 399:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 474              		.loc 1 399 0
 475 038c 81E1FF03 		andl	$1023, %ecx
 475      0000
 476 0392 410FB60C 		movzbl	(%r15,%rcx), %ecx
 476      0F
 477 0397 884F01   		movb	%cl, 1(%rdi)
 478              		.loc 1 402 0
 479 039a 430FB60C 		movzbl	(%r15,%r9), %ecx
 479      0F
 480 039f 884F06   		movb	%cl, 6(%rdi)
 403:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 404:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 405:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp1,
 481              		.loc 1 405 0
 482 03a2 488D0C18 		leaq	(%rax,%rbx), %rcx
 406:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 407:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 408:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp1,
 483              		.loc 1 408 0
 484 03a6 4829D8   		subq	%rbx, %rax
 485              	.LVL88:
 486 03a9 48C1F812 		sarq	$18, %rax
 405:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 487              		.loc 1 405 0
 488 03ad 48C1F912 		sarq	$18, %rcx
 489              		.loc 1 408 0
 490 03b1 25FF0300 		andl	$1023, %eax
 490      00
 405:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 491              		.loc 1 405 0
 492 03b6 81E1FF03 		andl	$1023, %ecx
 492      0000
 493 03bc 410FB60C 		movzbl	(%r15,%rcx), %ecx
 493      0F
 494 03c1 884F02   		movb	%cl, 2(%rdi)
 495              		.loc 1 408 0
 496 03c4 410FB604 		movzbl	(%r15,%rax), %eax
 496      07
 497 03c9 884705   		movb	%al, 5(%rdi)
 409:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 410:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 411:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp13 + tmp0,
 498              		.loc 1 411 0
 499 03cc 4A8D0422 		leaq	(%rdx,%r12), %rax
 412:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 413:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 414:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp13 - tmp0,
 500              		.loc 1 414 0
 501 03d0 4C29E2   		subq	%r12, %rdx
 502              	.LVL89:
 503 03d3 48C1FA12 		sarq	$18, %rdx
 411:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 504              		.loc 1 411 0
 505 03d7 48C1F812 		sarq	$18, %rax
 506              		.loc 1 414 0
 507 03db 81E2FF03 		andl	$1023, %edx
 507      0000
 411:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 508              		.loc 1 411 0
 509 03e1 25FF0300 		andl	$1023, %eax
 509      00
 510 03e6 410FB604 		movzbl	(%r15,%rax), %eax
 510      07
 511 03eb 884703   		movb	%al, 3(%rdi)
 512              		.loc 1 414 0
 513 03ee 410FB604 		movzbl	(%r15,%rdx), %eax
 513      17
 514 03f3 884704   		movb	%al, 4(%rdi)
 515              	.LVL90:
 516              	.L18:
 307:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 517              		.loc 1 307 0 discriminator 2
 518 03f6 488D8424 		leaq	320(%rsp), %rax
 518      40010000 
 519 03fe 4883C520 		addq	$32, %rbp
 520              	.LVL91:
 521 0402 48830424 		addq	$8, (%rsp)
 521      08
 522 0407 4839E8   		cmpq	%rbp, %rax
 523 040a 7464     		je	.L29
 524              	.LVL92:
 525              	.L19:
 318:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 526              		.loc 1 318 0
 527 040c 4C6345E4 		movslq	-28(%rbp), %r8
 308:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Rows of zeroes can be exploited in the same way as we did with columns.
 528              		.loc 1 308 0
 529 0410 488B0424 		movq	(%rsp), %rax
 530 0414 488B7C24 		movq	8(%rsp), %rdi
 530      08
 318:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 531              		.loc 1 318 0
 532 0419 4C634DE8 		movslq	-24(%rbp), %r9
 308:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Rows of zeroes can be exploited in the same way as we did with columns.
 533              		.loc 1 308 0
 534 041d 480338   		addq	(%rax), %rdi
 535              	.LVL93:
 318:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 536              		.loc 1 318 0
 537 0420 4585C0   		testl	%r8d, %r8d
 538 0423 0F843FFE 		je	.L30
 538      FFFF
 539              	.L11:
 540 0429 486345F8 		movslq	-8(%rbp), %rax
 541 042d 8B55F0   		movl	-16(%rbp), %edx
 542 0430 4C6365FC 		movslq	-4(%rbp), %r12
 543 0434 48635DF4 		movslq	-12(%rbp), %rbx
 544 0438 4C635DEC 		movslq	-20(%rbp), %r11
 545 043c E94FFEFF 		jmp	.L13
 545      FF
 546              	.LVL94:
 547              		.p2align 4,,10
 548 0441 0F1F8000 		.p2align 3
 548      000000
 549              	.L5:
 208:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 550              		.loc 1 208 0
 551 0448 0FBF5A40 		movswl	64(%rdx), %ebx
 552 044c 6685DB   		testw	%bx, %bx
 553 044f 746F     		je	.L6
 554 0451 0FBF4260 		movswl	96(%rdx), %eax
 555 0455 440FBF4A 		movswl	112(%rdx), %r9d
 555      70
 556 045a 0FBFF7   		movswl	%di, %esi
 557 045d 440FBF42 		movswl	80(%rdx), %r8d
 557      50
 558 0462 E929FCFF 		jmp	.L4
 558      FF
 559              	.LVL95:
 560 0467 660F1F84 		.p2align 4,,10
 560      00000000 
 560      00
 561              		.p2align 3
 562              	.L29:
 415:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 416:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 417:fltk-1.3.4-1/jpeg/jidctint.c **** 
 418:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += DCTSIZE;		/* advance pointer to next row */
 419:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 420:fltk-1.3.4-1/jpeg/jidctint.c **** }
 563              		.loc 1 420 0
 564 0470 488B8424 		movq	296(%rsp), %rax
 564      28010000 
 565 0478 64483304 		xorq	%fs:40, %rax
 565      25280000 
 565      00
 566 0481 0F855001 		jne	.L31
 566      0000
 567 0487 4881C438 		addq	$312, %rsp
 567      010000
 568              		.cfi_remember_state
 569              		.cfi_def_cfa_offset 56
 570 048e 5B       		popq	%rbx
 571              		.cfi_def_cfa_offset 48
 572 048f 5D       		popq	%rbp
 573              		.cfi_def_cfa_offset 40
 574              	.LVL96:
 575 0490 415C     		popq	%r12
 576              		.cfi_def_cfa_offset 32
 577 0492 415D     		popq	%r13
 578              		.cfi_def_cfa_offset 24
 579 0494 415E     		popq	%r14
 580              		.cfi_def_cfa_offset 16
 581 0496 415F     		popq	%r15
 582              		.cfi_def_cfa_offset 8
 583 0498 C3       		ret
 584              	.LVL97:
 585 0499 0F1F8000 		.p2align 4,,10
 585      000000
 586              		.p2align 3
 587              	.L14:
 588              		.cfi_restore_state
 318:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 589              		.loc 1 318 0 discriminator 3
 590 04a0 8B55F0   		movl	-16(%rbp), %edx
 591 04a3 85D2     		testl	%edx, %edx
 592 04a5 7479     		je	.L15
 593 04a7 486345F8 		movslq	-8(%rbp), %rax
 594 04ab 4C6365FC 		movslq	-4(%rbp), %r12
 318:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 595              		.loc 1 318 0 is_stmt 0
 596 04af 4D63CB   		movslq	%r11d, %r9
 597 04b2 48635DF4 		movslq	-12(%rbp), %rbx
 598 04b6 E9D5FDFF 		jmp	.L13
 598      FF
 599              	.LVL98:
 600 04bb 0F1F4400 		.p2align 4,,10
 600      00
 601              		.p2align 3
 602              	.L6:
 209:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 603              		.loc 1 209 0 is_stmt 1 discriminator 1
 604 04c0 440FBF42 		movswl	80(%rdx), %r8d
 604      50
 605 04c5 0FBF4260 		movswl	96(%rdx), %eax
 210:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 606              		.loc 1 210 0 discriminator 1
 607 04c9 440FBF4A 		movswl	112(%rdx), %r9d
 607      70
 208:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 608              		.loc 1 208 0 discriminator 1
 609 04ce 664585C0 		testw	%r8w, %r8w
 610 04d2 0F85A800 		jne	.L32
 610      0000
 209:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 611              		.loc 1 209 0
 612 04d8 6685C0   		testw	%ax, %ax
 613 04db 0F85AF00 		jne	.L33
 613      0000
 209:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 614              		.loc 1 209 0 is_stmt 0 discriminator 1
 615 04e1 664585C9 		testw	%r9w, %r9w
 616 04e5 0F85CA00 		jne	.L21
 616      0000
 617              	.LBB2:
 212:fltk-1.3.4-1/jpeg/jidctint.c **** 
 618              		.loc 1 212 0 is_stmt 1
 619 04eb 0FBF02   		movswl	(%rdx), %eax
 620 04ee 410FAF04 		imull	(%r12), %eax
 620      24
 621 04f3 C1E002   		sall	$2, %eax
 622              	.LVL99:
 214:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*1] = dcval;
 623              		.loc 1 214 0
 624 04f6 894500   		movl	%eax, 0(%rbp)
 215:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*2] = dcval;
 625              		.loc 1 215 0
 626 04f9 894520   		movl	%eax, 32(%rbp)
 216:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*3] = dcval;
 627              		.loc 1 216 0
 628 04fc 894540   		movl	%eax, 64(%rbp)
 217:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*4] = dcval;
 629              		.loc 1 217 0
 630 04ff 894560   		movl	%eax, 96(%rbp)
 218:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*5] = dcval;
 631              		.loc 1 218 0
 632 0502 89858000 		movl	%eax, 128(%rbp)
 632      0000
 219:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*6] = dcval;
 633              		.loc 1 219 0
 634 0508 8985A000 		movl	%eax, 160(%rbp)
 634      0000
 220:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*7] = dcval;
 635              		.loc 1 220 0
 636 050e 8985C000 		movl	%eax, 192(%rbp)
 636      0000
 221:fltk-1.3.4-1/jpeg/jidctint.c **** 
 637              		.loc 1 221 0
 638 0514 8985E000 		movl	%eax, 224(%rbp)
 638      0000
 639              	.LVL100:
 226:fltk-1.3.4-1/jpeg/jidctint.c ****     }
 640              		.loc 1 226 0
 641 051a E9DDFCFF 		jmp	.L9
 641      FF
 642              	.LVL101:
 643 051f 90       		.p2align 4,,10
 644              		.p2align 3
 645              	.L15:
 646              	.LBE2:
 319:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 647              		.loc 1 319 0 discriminator 4
 648 0520 48635DF4 		movslq	-12(%rbp), %rbx
 649 0524 486345F8 		movslq	-8(%rbp), %rax
 650 0528 4C6365FC 		movslq	-4(%rbp), %r12
 318:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 651              		.loc 1 318 0 discriminator 4
 652 052c 85DB     		testl	%ebx, %ebx
 653 052e 7540     		jne	.L34
 319:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 654              		.loc 1 319 0
 655 0530 85C0     		testl	%eax, %eax
 656 0532 7574     		jne	.L35
 319:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 657              		.loc 1 319 0 is_stmt 0 discriminator 1
 658 0534 4585E4   		testl	%r12d, %r12d
 659 0537 0F858A00 		jne	.L22
 659      0000
 660              	.LBB3:
 321:fltk-1.3.4-1/jpeg/jidctint.c **** 				  & RANGE_MASK];
 661              		.loc 1 321 0 is_stmt 1
 662 053d 486345E0 		movslq	-32(%rbp), %rax
 663 0541 4883C010 		addq	$16, %rax
 664 0545 48C1F805 		sarq	$5, %rax
 665 0549 25FF0300 		andl	$1023, %eax
 665      00
 666 054e 410FB604 		movzbl	(%r15,%rax), %eax
 666      07
 667              	.LVL102:
 324:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[1] = dcval;
 668              		.loc 1 324 0
 669 0553 8807     		movb	%al, (%rdi)
 325:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[2] = dcval;
 670              		.loc 1 325 0
 671 0555 884701   		movb	%al, 1(%rdi)
 326:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[3] = dcval;
 672              		.loc 1 326 0
 673 0558 884702   		movb	%al, 2(%rdi)
 327:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[4] = dcval;
 674              		.loc 1 327 0
 675 055b 884703   		movb	%al, 3(%rdi)
 328:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[5] = dcval;
 676              		.loc 1 328 0
 677 055e 884704   		movb	%al, 4(%rdi)
 329:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[6] = dcval;
 678              		.loc 1 329 0
 679 0561 884705   		movb	%al, 5(%rdi)
 330:fltk-1.3.4-1/jpeg/jidctint.c ****       outptr[7] = dcval;
 680              		.loc 1 330 0
 681 0564 884706   		movb	%al, 6(%rdi)
 331:fltk-1.3.4-1/jpeg/jidctint.c **** 
 682              		.loc 1 331 0
 683 0567 884707   		movb	%al, 7(%rdi)
 684              	.LVL103:
 334:fltk-1.3.4-1/jpeg/jidctint.c ****     }
 685              		.loc 1 334 0
 686 056a E987FEFF 		jmp	.L18
 686      FF
 687              	.LVL104:
 688 056f 90       		.p2align 4,,10
 689              		.p2align 3
 690              	.L34:
 691              	.LBE3:
 318:fltk-1.3.4-1/jpeg/jidctint.c **** 	wsptr[5] == 0 && wsptr[6] == 0 && wsptr[7] == 0) {
 692              		.loc 1 318 0
 693 0570 4C63DA   		movslq	%edx, %r11
 694 0573 4C63CA   		movslq	%edx, %r9
 695 0576 E915FDFF 		jmp	.L13
 695      FF
 696              	.LVL105:
 697 057b 0F1F4400 		.p2align 4,,10
 697      00
 698              		.p2align 3
 699              	.L32:
 208:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 700              		.loc 1 208 0
 701 0580 0FBFFB   		movswl	%bx, %edi
 702 0583 0FBFF3   		movswl	%bx, %esi
 703 0586 E905FBFF 		jmp	.L4
 703      FF
 704 058b 0F1F4400 		.p2align 4,,10
 704      00
 705              		.p2align 3
 706              	.L33:
 209:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 707              		.loc 1 209 0
 708 0590 410FBFF8 		movswl	%r8w, %edi
 709 0594 410FBFD8 		movswl	%r8w, %ebx
 710 0598 410FBFF0 		movswl	%r8w, %esi
 711 059c E9EFFAFF 		jmp	.L4
 711      FF
 712              	.LVL106:
 713              		.p2align 4,,10
 714 05a1 0F1F8000 		.p2align 3
 714      000000
 715              	.L35:
 319:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 716              		.loc 1 319 0
 717 05a8 4C63DB   		movslq	%ebx, %r11
 718 05ab 89DA     		movl	%ebx, %edx
 719 05ad 4C63CB   		movslq	%ebx, %r9
 720 05b0 E9DBFCFF 		jmp	.L13
 720      FF
 721              	.LVL107:
 722              	.L21:
 723 05b5 0FBFF8   		movswl	%ax, %edi
 724 05b8 440FBFC0 		movswl	%ax, %r8d
 725 05bc 0FBFD8   		movswl	%ax, %ebx
 726 05bf 0FBFF0   		movswl	%ax, %esi
 727 05c2 E9C9FAFF 		jmp	.L4
 727      FF
 728              	.LVL108:
 729              	.L22:
 730 05c7 4C63D8   		movslq	%eax, %r11
 731 05ca 4863D8   		movslq	%eax, %rbx
 732 05cd 89C2     		movl	%eax, %edx
 733 05cf 4C63C8   		movslq	%eax, %r9
 734 05d2 E9B9FCFF 		jmp	.L13
 734      FF
 735              	.L31:
 736              		.loc 1 420 0
 737 05d7 E8000000 		call	__stack_chk_fail
 737      00
 738              	.LVL109:
 739              		.cfi_endproc
 740              	.LFE61:
 742              		.section	.text.unlikely.jpeg_idct_islow
 743              	.LCOLDE0:
 744              		.section	.text.jpeg_idct_islow
 745              	.LHOTE0:
 746              		.section	.text.unlikely.jpeg_idct_7x7,"ax",@progbits
 747              	.LCOLDB1:
 748              		.section	.text.jpeg_idct_7x7,"ax",@progbits
 749              	.LHOTB1:
 750              		.p2align 4,,15
 751              		.globl	jpeg_idct_7x7
 753              	jpeg_idct_7x7:
 754              	.LFB62:
 421:fltk-1.3.4-1/jpeg/jidctint.c **** 
 422:fltk-1.3.4-1/jpeg/jidctint.c **** #ifdef IDCT_SCALING_SUPPORTED
 423:fltk-1.3.4-1/jpeg/jidctint.c **** 
 424:fltk-1.3.4-1/jpeg/jidctint.c **** 
 425:fltk-1.3.4-1/jpeg/jidctint.c **** /*
 426:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
 427:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 7x7 output block.
 428:fltk-1.3.4-1/jpeg/jidctint.c ****  *
 429:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 12 multiplications in the 1-D kernel.
 430:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/14).
 431:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 432:fltk-1.3.4-1/jpeg/jidctint.c **** 
 433:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
 434:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_7x7 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 435:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
 436:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
 437:fltk-1.3.4-1/jpeg/jidctint.c **** {
 755              		.loc 1 437 0
 756              		.cfi_startproc
 757              	.LVL110:
 758 0000 4157     		pushq	%r15
 759              		.cfi_def_cfa_offset 16
 760              		.cfi_offset 15, -16
 761 0002 4156     		pushq	%r14
 762              		.cfi_def_cfa_offset 24
 763              		.cfi_offset 14, -24
 764 0004 4155     		pushq	%r13
 765              		.cfi_def_cfa_offset 32
 766              		.cfi_offset 13, -32
 767 0006 4154     		pushq	%r12
 768              		.cfi_def_cfa_offset 40
 769              		.cfi_offset 12, -40
 770 0008 55       		pushq	%rbp
 771              		.cfi_def_cfa_offset 48
 772              		.cfi_offset 6, -48
 773 0009 53       		pushq	%rbx
 774              		.cfi_def_cfa_offset 56
 775              		.cfi_offset 3, -56
 776 000a 4881ECF8 		subq	$248, %rsp
 776      000000
 777              		.cfi_def_cfa_offset 304
 438:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12, tmp13;
 439:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
 440:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
 441:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
 442:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
 443:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
 444:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 445:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 446:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[7*7];	/* buffers data between passes */
 447:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 448:fltk-1.3.4-1/jpeg/jidctint.c **** 
 449:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
 450:fltk-1.3.4-1/jpeg/jidctint.c **** 
 451:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
 452:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 778              		.loc 1 452 0
 779 0011 4C8B6E58 		movq	88(%rsi), %r13
 437:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12, tmp13;
 780              		.loc 1 437 0
 781 0015 64488B04 		movq	%fs:40, %rax
 781      25280000 
 781      00
 782 001e 48898424 		movq	%rax, 232(%rsp)
 782      E8000000 
 783 0026 31C0     		xorl	%eax, %eax
 444:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 784              		.loc 1 444 0
 785 0028 488B87B8 		movq	440(%rdi), %rax
 785      010000
 453:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 786              		.loc 1 453 0
 787 002f 4C8D6424 		leaq	32(%rsp), %r12
 787      20
 437:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12, tmp13;
 788              		.loc 1 437 0
 789 0034 48894C24 		movq	%rcx, 16(%rsp)
 789      10
 790 0039 44894424 		movl	%r8d, 8(%rsp)
 790      08
 444:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 791              		.loc 1 444 0
 792 003e 4C8DB880 		leaq	128(%rax), %r15
 792      000000
 793              	.LVL111:
 454:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 7; ctr++, inptr++, quantptr++, wsptr++) {
 794              		.loc 1 454 0
 795 0045 488D4424 		leaq	60(%rsp), %rax
 795      3C
 796 004a 4C897C24 		movq	%r15, 24(%rsp)
 796      18
 797 004f 48890424 		movq	%rax, (%rsp)
 798              	.LVL112:
 799              		.p2align 4,,10
 800 0053 0F1F4400 		.p2align 3
 800      00
 801              	.L37:
 455:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 456:fltk-1.3.4-1/jpeg/jidctint.c **** 
 457:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 458:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 <<= CONST_BITS;
 459:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 460:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += ONE << (CONST_BITS-PASS1_BITS-1);
 461:fltk-1.3.4-1/jpeg/jidctint.c **** 
 462:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 802              		.loc 1 462 0 discriminator 3
 803 0058 0FBF7A20 		movswl	32(%rdx), %edi
 463:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 804              		.loc 1 463 0 discriminator 3
 805 005c 0FBF7240 		movswl	64(%rdx), %esi
 462:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 806              		.loc 1 462 0 discriminator 3
 807 0060 410FAF7D 		imull	64(%r13), %edi
 807      40
 808              		.loc 1 463 0 discriminator 3
 809 0065 410FAFB5 		imull	128(%r13), %esi
 809      80000000 
 464:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 810              		.loc 1 464 0 discriminator 3
 811 006d 0FBF4260 		movswl	96(%rdx), %eax
 457:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 <<= CONST_BITS;
 812              		.loc 1 457 0 discriminator 3
 813 0071 0FBF0A   		movswl	(%rdx), %ecx
 814              		.loc 1 464 0 discriminator 3
 815 0074 410FAF85 		imull	192(%r13), %eax
 815      C0000000 
 457:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 <<= CONST_BITS;
 816              		.loc 1 457 0 discriminator 3
 817 007c 410FAF4D 		imull	0(%r13), %ecx
 817      00
 462:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 818              		.loc 1 462 0 discriminator 3
 819 0081 4863FF   		movslq	%edi, %rdi
 463:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 820              		.loc 1 463 0 discriminator 3
 821 0084 4863F6   		movslq	%esi, %rsi
 465:fltk-1.3.4-1/jpeg/jidctint.c **** 
 466:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z2 - z3, FIX(0.881747734));     /* c4 */
 467:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.314692123));     /* c6 */
 822              		.loc 1 467 0 discriminator 3
 823 0087 4989F8   		movq	%rdi, %r8
 466:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.314692123));     /* c6 */
 824              		.loc 1 466 0 discriminator 3
 825 008a 4989F1   		movq	%rsi, %r9
 826              		.loc 1 467 0 discriminator 3
 827 008d 4929F0   		subq	%rsi, %r8
 464:fltk-1.3.4-1/jpeg/jidctint.c **** 
 828              		.loc 1 464 0 discriminator 3
 829 0090 4898     		cltq
 466:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.314692123));     /* c6 */
 830              		.loc 1 466 0 discriminator 3
 831 0092 4929C1   		subq	%rax, %r9
 468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp12 + tmp13 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
 469:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 832              		.loc 1 469 0 discriminator 3
 833 0095 4C8D3C07 		leaq	(%rdi,%rax), %r15
 457:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 <<= CONST_BITS;
 834              		.loc 1 457 0 discriminator 3
 835 0099 4863C9   		movslq	%ecx, %rcx
 836              	.LVL113:
 467:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp12 + tmp13 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
 837              		.loc 1 467 0 discriminator 3
 838 009c 4D69D812 		imulq	$2578, %r8, %r11
 838      0A0000
 458:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 839              		.loc 1 458 0 discriminator 3
 840 00a3 48C1E10D 		salq	$13, %rcx
 841              	.LVL114:
 466:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.314692123));     /* c6 */
 842              		.loc 1 466 0 discriminator 3
 843 00a7 4969E937 		imulq	$7223, %r9, %rbp
 843      1C0000
 460:fltk-1.3.4-1/jpeg/jidctint.c **** 
 844              		.loc 1 460 0 discriminator 3
 845 00ae 4881C100 		addq	$1024, %rcx
 845      040000
 846              	.LVL115:
 470:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= tmp0;
 471:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX(1.274162392)) + tmp13; /* c2 */
 847              		.loc 1 471 0 discriminator 3
 848 00b5 4D69D7C6 		imulq	$10438, %r15, %r10
 848      280000
 468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 849              		.loc 1 468 0 discriminator 3
 850 00bc 4A8D5C1D 		leaq	0(%rbp,%r11), %rbx
 850      00
 472:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += tmp0 - MULTIPLY(z3, FIX(0.077722536));  /* c2-c4-c6 */
 851              		.loc 1 472 0 discriminator 3
 852 00c1 4869C083 		imulq	$-637, %rax, %rax
 852      FDFFFF
 853              	.LVL116:
 471:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += tmp0 - MULTIPLY(z3, FIX(0.077722536));  /* c2-c4-c6 */
 854              		.loc 1 471 0 discriminator 3
 855 00c8 4901CA   		addq	%rcx, %r10
 473:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp0 - MULTIPLY(z1, FIX(2.470602249));  /* c2+c4+c6 */
 856              		.loc 1 473 0 discriminator 3
 857 00cb 4869FFF1 		imulq	$-20239, %rdi, %rdi
 857      B0FFFF
 858              	.LVL117:
 468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 859              		.loc 1 468 0 discriminator 3
 860 00d2 4C8D040B 		leaq	(%rbx,%rcx), %r8
 861 00d6 4869DE15 		imulq	$-15083, %rsi, %rbx
 861      C5FFFF
 472:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp0 - MULTIPLY(z1, FIX(2.470602249));  /* c2+c4+c6 */
 862              		.loc 1 472 0 discriminator 3
 863 00dd 4C01D0   		addq	%r10, %rax
 864              		.loc 1 473 0 discriminator 3
 865 00e0 4C01D7   		addq	%r10, %rdi
 472:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp0 - MULTIPLY(z1, FIX(2.470602249));  /* c2+c4+c6 */
 866              		.loc 1 472 0 discriminator 3
 867 00e3 4C8D0C28 		leaq	(%rax,%rbp), %r9
 474:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += MULTIPLY(z2, FIX(1.414213562));         /* c0 */
 475:fltk-1.3.4-1/jpeg/jidctint.c **** 
 476:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 477:fltk-1.3.4-1/jpeg/jidctint.c **** 
 478:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 868              		.loc 1 478 0 discriminator 3
 869 00e7 0FBF4210 		movswl	16(%rdx), %eax
 468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 870              		.loc 1 468 0 discriminator 3
 871 00eb 4C01C3   		addq	%r8, %rbx
 872              	.LVL118:
 473:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += MULTIPLY(z2, FIX(1.414213562));         /* c0 */
 873              		.loc 1 473 0 discriminator 3
 874 00ee 4E8D041F 		leaq	(%rdi,%r11), %r8
 875              	.LVL119:
 479:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 876              		.loc 1 479 0 discriminator 3
 877 00f2 0FBF7A30 		movswl	48(%rdx), %edi
 478:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 878              		.loc 1 478 0 discriminator 3
 879 00f6 410FAF45 		imull	32(%r13), %eax
 879      20
 880              		.loc 1 479 0 discriminator 3
 881 00fb 410FAF7D 		imull	96(%r13), %edi
 881      60
 480:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 882              		.loc 1 480 0 discriminator 3
 883 0100 440FBF5A 		movswl	80(%rdx), %r11d
 883      50
 884 0105 450FAF9D 		imull	160(%r13), %r11d
 884      A0000000 
 478:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 885              		.loc 1 478 0 discriminator 3
 886 010d 4898     		cltq
 887              	.LVL120:
 479:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 888              		.loc 1 479 0 discriminator 3
 889 010f 4863FF   		movslq	%edi, %rdi
 890              	.LVL121:
 481:fltk-1.3.4-1/jpeg/jidctint.c **** 
 482:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 + z2, FIX(0.935414347));      /* (c3+c1-c5)/2 */
 483:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1 - z2, FIX(0.170262339));      /* (c3+c5-c1)/2 */
 891              		.loc 1 483 0 discriminator 3
 892 0112 4989C2   		movq	%rax, %r10
 893              	.LVL122:
 482:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1 - z2, FIX(0.170262339));      /* (c3+c5-c1)/2 */
 894              		.loc 1 482 0 discriminator 3
 895 0115 4C8D3438 		leaq	(%rax,%rdi), %r14
 896              		.loc 1 483 0 discriminator 3
 897 0119 4929FA   		subq	%rdi, %r10
 480:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 898              		.loc 1 480 0 discriminator 3
 899 011c 4D63DB   		movslq	%r11d, %r11
 900              	.LVL123:
 482:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1 - z2, FIX(0.170262339));      /* (c3+c5-c1)/2 */
 901              		.loc 1 482 0 discriminator 3
 902 011f 4D69F6EF 		imulq	$7663, %r14, %r14
 902      1D0000
 903              	.LVL124:
 484:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 - tmp2;
 485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 486:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z2 + z3, - FIX(1.378756276));    /* -c1 */
 904              		.loc 1 486 0 discriminator 3
 905 0126 4C01DF   		addq	%r11, %rdi
 906              	.LVL125:
 487:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 488:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));        /* c5 */
 907              		.loc 1 488 0 discriminator 3
 908 0129 4C01D8   		addq	%r11, %rax
 909              	.LVL126:
 483:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 - tmp2;
 910              		.loc 1 483 0 discriminator 3
 911 012c 4D69D273 		imulq	$1395, %r10, %r10
 911      050000
 912              	.LVL127:
 913              		.loc 1 488 0 discriminator 3
 914 0133 4869C0A3 		imulq	$5027, %rax, %rax
 914      130000
 484:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 - tmp2;
 915              		.loc 1 484 0 discriminator 3
 916 013a 4C89F5   		movq	%r14, %rbp
 917 013d 4C29D5   		subq	%r10, %rbp
 918              	.LVL128:
 485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z2 + z3, - FIX(1.378756276));    /* -c1 */
 919              		.loc 1 485 0 discriminator 3
 920 0140 4D01F2   		addq	%r14, %r10
 921              	.LVL129:
 486:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 922              		.loc 1 486 0 discriminator 3
 923 0143 4869FFE1 		imulq	$-11295, %rdi, %rdi
 923      D3FFFF
 924              	.LVL130:
 489:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z2;
 925              		.loc 1 489 0 discriminator 3
 926 014a 4801C5   		addq	%rax, %rbp
 927              	.LVL131:
 487:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));        /* c5 */
 928              		.loc 1 487 0 discriminator 3
 929 014d 4901FA   		addq	%rdi, %r10
 930              	.LVL132:
 490:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z2 + MULTIPLY(z3, FIX(1.870828693));     /* c3+c1-c5 */
 931              		.loc 1 490 0 discriminator 3
 932 0150 4D69DBDE 		imulq	$15326, %r11, %r11
 932      3B0000
 933              	.LVL133:
 491:fltk-1.3.4-1/jpeg/jidctint.c **** 
 492:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 493:fltk-1.3.4-1/jpeg/jidctint.c **** 
 494:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*0] = (int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS-PASS1_BITS);
 495:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*6] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 496:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 497:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 498:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 499:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*4] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 500:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*3] = (int) RIGHT_SHIFT(tmp13, CONST_BITS-PASS1_BITS);
 934              		.loc 1 500 0 discriminator 3
 935 0157 4C29FE   		subq	%r15, %rsi
 936              	.LVL134:
 454:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 937              		.loc 1 454 0 discriminator 3
 938 015a 4883C202 		addq	$2, %rdx
 939              	.LVL135:
 940              		.loc 1 500 0 discriminator 3
 941 015e 4869F641 		imulq	$11585, %rsi, %rsi
 941      2D0000
 454:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 942              		.loc 1 454 0 discriminator 3
 943 0165 4983C504 		addq	$4, %r13
 944              	.LVL136:
 945 0169 4983C404 		addq	$4, %r12
 946              	.LVL137:
 490:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z2 + MULTIPLY(z3, FIX(1.870828693));     /* c3+c1-c5 */
 947              		.loc 1 490 0 discriminator 3
 948 016d 4901C3   		addq	%rax, %r11
 494:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*6] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 949              		.loc 1 494 0 discriminator 3
 950 0170 498D0429 		leaq	(%r9,%rbp), %rax
 951              	.LVL138:
 495:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 952              		.loc 1 495 0 discriminator 3
 953 0174 4929E9   		subq	%rbp, %r9
 954              	.LVL139:
 490:fltk-1.3.4-1/jpeg/jidctint.c **** 
 955              		.loc 1 490 0 discriminator 3
 956 0177 4C01DF   		addq	%r11, %rdi
 957              	.LVL140:
 958              		.loc 1 500 0 discriminator 3
 959 017a 4801CE   		addq	%rcx, %rsi
 960              	.LVL141:
 495:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 961              		.loc 1 495 0 discriminator 3
 962 017d 49C1F90B 		sarq	$11, %r9
 494:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*6] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 963              		.loc 1 494 0 discriminator 3
 964 0181 48C1F80B 		sarq	$11, %rax
 965              		.loc 1 500 0 discriminator 3
 966 0185 48C1FE0B 		sarq	$11, %rsi
 967              	.LVL142:
 495:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 968              		.loc 1 495 0 discriminator 3
 969 0189 45898C24 		movl	%r9d, 164(%r12)
 969      A4000000 
 494:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*6] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 970              		.loc 1 494 0 discriminator 3
 971 0191 41894424 		movl	%eax, -4(%r12)
 971      FC
 496:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 972              		.loc 1 496 0 discriminator 3
 973 0196 4A8D0413 		leaq	(%rbx,%r10), %rax
 497:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 974              		.loc 1 497 0 discriminator 3
 975 019a 4C29D3   		subq	%r10, %rbx
 976              	.LVL143:
 977 019d 48C1FB0B 		sarq	$11, %rbx
 978              		.loc 1 500 0 discriminator 3
 979 01a1 41897424 		movl	%esi, 80(%r12)
 979      50
 980              	.LVL144:
 496:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 981              		.loc 1 496 0 discriminator 3
 982 01a6 48C1F80B 		sarq	$11, %rax
 497:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 983              		.loc 1 497 0 discriminator 3
 984 01aa 41899C24 		movl	%ebx, 136(%r12)
 984      88000000 
 496:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 985              		.loc 1 496 0 discriminator 3
 986 01b2 41894424 		movl	%eax, 24(%r12)
 986      18
 498:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*4] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 987              		.loc 1 498 0 discriminator 3
 988 01b7 498D0438 		leaq	(%r8,%rdi), %rax
 499:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*3] = (int) RIGHT_SHIFT(tmp13, CONST_BITS-PASS1_BITS);
 989              		.loc 1 499 0 discriminator 3
 990 01bb 4929F8   		subq	%rdi, %r8
 991              	.LVL145:
 992 01be 49C1F80B 		sarq	$11, %r8
 498:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*4] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 993              		.loc 1 498 0 discriminator 3
 994 01c2 48C1F80B 		sarq	$11, %rax
 499:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*3] = (int) RIGHT_SHIFT(tmp13, CONST_BITS-PASS1_BITS);
 995              		.loc 1 499 0 discriminator 3
 996 01c6 45894424 		movl	%r8d, 108(%r12)
 996      6C
 498:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*4] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 997              		.loc 1 498 0 discriminator 3
 998 01cb 41894424 		movl	%eax, 52(%r12)
 998      34
 999              	.LVL146:
 454:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1000              		.loc 1 454 0 discriminator 3
 1001 01d0 4C3B2424 		cmpq	(%rsp), %r12
 1002 01d4 0F857EFE 		jne	.L37
 1002      FFFF
 1003 01da 8B442408 		movl	8(%rsp), %eax
 1004 01de 4C8B7C24 		movq	24(%rsp), %r15
 1004      18
 1005              	.LVL147:
 454:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1006              		.loc 1 454 0 is_stmt 0
 1007 01e3 488D6C24 		leaq	32(%rsp), %rbp
 1007      20
 1008              	.LVL148:
 1009 01e8 48894424 		movq	%rax, 8(%rsp)
 1009      08
 1010              	.LVL149:
 1011 01ed 488B4424 		movq	16(%rsp), %rax
 1011      10
 1012 01f2 48890424 		movq	%rax, (%rsp)
 501:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 502:fltk-1.3.4-1/jpeg/jidctint.c **** 
 503:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 7 rows from work array, store into output array. */
 504:fltk-1.3.4-1/jpeg/jidctint.c **** 
 505:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 506:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 7; ctr++) {
 1013              		.loc 1 506 0 is_stmt 1
 1014 01f6 488D8424 		leaq	228(%rsp), %rax
 1014      E4000000 
 1015 01fe 48894424 		movq	%rax, 16(%rsp)
 1015      10
 1016              	.LVL150:
 1017              		.p2align 4,,10
 1018 0203 0F1F4400 		.p2align 3
 1018      00
 1019              	.L38:
 507:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 508:fltk-1.3.4-1/jpeg/jidctint.c **** 
 509:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 510:fltk-1.3.4-1/jpeg/jidctint.c **** 
 511:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 512:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 513:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 <<= CONST_BITS;
 514:fltk-1.3.4-1/jpeg/jidctint.c **** 
 515:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
 516:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
 1020              		.loc 1 516 0 discriminator 3
 1021 0208 4C634D10 		movslq	16(%rbp), %r9
 515:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
 1022              		.loc 1 515 0 discriminator 3
 1023 020c 4C635508 		movslq	8(%rbp), %r10
 517:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
 1024              		.loc 1 517 0 discriminator 3
 1025 0210 48634D18 		movslq	24(%rbp), %rcx
 507:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1026              		.loc 1 507 0 discriminator 3
 1027 0214 488B0424 		movq	(%rsp), %rax
 1028 0218 4C8B5C24 		movq	8(%rsp), %r11
 1028      08
 518:fltk-1.3.4-1/jpeg/jidctint.c **** 
 519:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z2 - z3, FIX(0.881747734));     /* c4 */
 1029              		.loc 1 519 0 discriminator 3
 1030 021d 4C89CE   		movq	%r9, %rsi
 520:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.314692123));     /* c6 */
 1031              		.loc 1 520 0 discriminator 3
 1032 0220 4C89D2   		movq	%r10, %rdx
 507:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1033              		.loc 1 507 0 discriminator 3
 1034 0223 4C0318   		addq	(%rax), %r11
 1035              	.LVL151:
 519:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.314692123));     /* c6 */
 1036              		.loc 1 519 0 discriminator 3
 1037 0226 4829CE   		subq	%rcx, %rsi
 1038              		.loc 1 520 0 discriminator 3
 1039 0229 4C29CA   		subq	%r9, %rdx
 512:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 <<= CONST_BITS;
 1040              		.loc 1 512 0 discriminator 3
 1041 022c 48634500 		movslq	0(%rbp), %rax
 519:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.314692123));     /* c6 */
 1042              		.loc 1 519 0 discriminator 3
 1043 0230 4C69E637 		imulq	$7223, %rsi, %r12
 1043      1C0000
 521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp12 + tmp13 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
 522:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 1044              		.loc 1 522 0 discriminator 3
 1045 0237 4D8D340A 		leaq	(%r10,%rcx), %r14
 520:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp12 + tmp13 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
 1046              		.loc 1 520 0 discriminator 3
 1047 023b 4869DA12 		imulq	$2578, %rdx, %rbx
 1047      0A0000
 523:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= tmp0;
 524:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX(1.274162392)) + tmp13; /* c2 */
 1048              		.loc 1 524 0 discriminator 3
 1049 0242 4D69C6C6 		imulq	$10438, %r14, %r8
 1049      280000
 512:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 <<= CONST_BITS;
 1050              		.loc 1 512 0 discriminator 3
 1051 0249 4883C010 		addq	$16, %rax
 1052              	.LVL152:
 513:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1053              		.loc 1 513 0 discriminator 3
 1054 024d 48C1E00D 		salq	$13, %rax
 1055              	.LVL153:
 521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 1056              		.loc 1 521 0 discriminator 3
 1057 0251 498D3C1C 		leaq	(%r12,%rbx), %rdi
 525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += tmp0 - MULTIPLY(z3, FIX(0.077722536));  /* c2-c4-c6 */
 526:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp0 - MULTIPLY(z1, FIX(2.470602249));  /* c2+c4+c6 */
 1058              		.loc 1 526 0 discriminator 3
 1059 0255 4D69D2F1 		imulq	$-20239, %r10, %r10
 1059      B0FFFF
 1060              	.LVL154:
 524:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += tmp0 - MULTIPLY(z3, FIX(0.077722536));  /* c2-c4-c6 */
 1061              		.loc 1 524 0 discriminator 3
 1062 025c 4901C0   		addq	%rax, %r8
 521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 1063              		.loc 1 521 0 discriminator 3
 1064 025f 488D1407 		leaq	(%rdi,%rax), %rdx
 1065 0263 4969F915 		imulq	$-15083, %r9, %rdi
 1065      C5FFFF
 1066              		.loc 1 526 0 discriminator 3
 1067 026a 4D01C2   		addq	%r8, %r10
 521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + z3;
 1068              		.loc 1 521 0 discriminator 3
 1069 026d 4801D7   		addq	%rdx, %rdi
 1070              	.LVL155:
 1071              		.loc 1 526 0 discriminator 3
 1072 0270 498D141A 		leaq	(%r10,%rbx), %rdx
 527:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += MULTIPLY(z2, FIX(1.414213562));         /* c0 */
 528:fltk-1.3.4-1/jpeg/jidctint.c **** 
 529:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 530:fltk-1.3.4-1/jpeg/jidctint.c **** 
 531:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
 532:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 1073              		.loc 1 532 0 discriminator 3
 1074 0274 4C63550C 		movslq	12(%rbp), %r10
 525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp0 - MULTIPLY(z1, FIX(2.470602249));  /* c2+c4+c6 */
 1075              		.loc 1 525 0 discriminator 3
 1076 0278 4869F183 		imulq	$-637, %rcx, %rsi
 1076      FDFFFF
 531:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 1077              		.loc 1 531 0 discriminator 3
 1078 027f 48634D04 		movslq	4(%rbp), %rcx
 1079              	.LVL156:
 533:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 1080              		.loc 1 533 0 discriminator 3
 1081 0283 48635D14 		movslq	20(%rbp), %rbx
 1082              	.LVL157:
 534:fltk-1.3.4-1/jpeg/jidctint.c **** 
 535:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 + z2, FIX(0.935414347));      /* (c3+c1-c5)/2 */
 1083              		.loc 1 535 0 discriminator 3
 1084 0287 4E8D2C11 		leaq	(%rcx,%r10), %r13
 525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp0 - MULTIPLY(z1, FIX(2.470602249));  /* c2+c4+c6 */
 1085              		.loc 1 525 0 discriminator 3
 1086 028b 4C01C6   		addq	%r8, %rsi
 536:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1 - z2, FIX(0.170262339));      /* (c3+c5-c1)/2 */
 1087              		.loc 1 536 0 discriminator 3
 1088 028e 4989C8   		movq	%rcx, %r8
 1089              	.LVL158:
 1090 0291 4D29D0   		subq	%r10, %r8
 537:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 - tmp2;
 538:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 539:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z2 + z3, - FIX(1.378756276));    /* -c1 */
 540:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 541:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));        /* c5 */
 1091              		.loc 1 541 0 discriminator 3
 1092 0294 4801D9   		addq	%rbx, %rcx
 539:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 1093              		.loc 1 539 0 discriminator 3
 1094 0297 4901DA   		addq	%rbx, %r10
 535:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1 - z2, FIX(0.170262339));      /* (c3+c5-c1)/2 */
 1095              		.loc 1 535 0 discriminator 3
 1096 029a 4D69EDEF 		imulq	$7663, %r13, %r13
 1096      1D0000
 525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp0 - MULTIPLY(z1, FIX(2.470602249));  /* c2+c4+c6 */
 1097              		.loc 1 525 0 discriminator 3
 1098 02a1 4C01E6   		addq	%r12, %rsi
 1099              	.LVL159:
 536:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 - tmp2;
 1100              		.loc 1 536 0 discriminator 3
 1101 02a4 4D69C073 		imulq	$1395, %r8, %r8
 1101      050000
 1102              	.LVL160:
 1103              		.loc 1 541 0 discriminator 3
 1104 02ab 4869C9A3 		imulq	$5027, %rcx, %rcx
 1104      130000
 537:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 1105              		.loc 1 537 0 discriminator 3
 1106 02b2 4D89EC   		movq	%r13, %r12
 1107 02b5 4D29C4   		subq	%r8, %r12
 1108              	.LVL161:
 538:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z2 + z3, - FIX(1.378756276));    /* -c1 */
 1109              		.loc 1 538 0 discriminator 3
 1110 02b8 4D01E8   		addq	%r13, %r8
 1111              	.LVL162:
 542:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z2;
 543:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z2 + MULTIPLY(z3, FIX(1.870828693));     /* c3+c1-c5 */
 1112              		.loc 1 543 0 discriminator 3
 1113 02bb 4869DBDE 		imulq	$15326, %rbx, %rbx
 1113      3B0000
 1114              	.LVL163:
 542:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z2;
 1115              		.loc 1 542 0 discriminator 3
 1116 02c2 4901CC   		addq	%rcx, %r12
 1117              	.LVL164:
 539:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += tmp2;
 1118              		.loc 1 539 0 discriminator 3
 1119 02c5 4D69D2E1 		imulq	$-11295, %r10, %r10
 1119      D3FFFF
 1120              	.LVL165:
 1121              		.loc 1 543 0 discriminator 3
 1122 02cc 4801CB   		addq	%rcx, %rbx
 544:fltk-1.3.4-1/jpeg/jidctint.c **** 
 545:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 546:fltk-1.3.4-1/jpeg/jidctint.c **** 
 547:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
 1123              		.loc 1 547 0 discriminator 3
 1124 02cf 4A8D0C26 		leaq	(%rsi,%r12), %rcx
 540:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));        /* c5 */
 1125              		.loc 1 540 0 discriminator 3
 1126 02d3 4D01D0   		addq	%r10, %r8
 1127              	.LVL166:
 543:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1128              		.loc 1 543 0 discriminator 3
 1129 02d6 4901DA   		addq	%rbx, %r10
 1130              	.LVL167:
 1131              		.loc 1 547 0 discriminator 3
 1132 02d9 48C1F912 		sarq	$18, %rcx
 1133 02dd 81E1FF03 		andl	$1023, %ecx
 1133      0000
 548:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 549:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 550:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
 1134              		.loc 1 550 0 discriminator 3
 1135 02e3 4C29E6   		subq	%r12, %rsi
 1136              	.LVL168:
 551:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 552:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 553:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp1,
 554:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 555:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 556:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp1,
 557:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 558:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 559:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp2,
 560:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 561:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 562:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp2,
 563:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 564:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 565:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp13,
 1137              		.loc 1 565 0 discriminator 3
 1138 02e6 4D29F1   		subq	%r14, %r9
 1139              	.LVL169:
 547:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1140              		.loc 1 547 0 discriminator 3
 1141 02e9 410FB60C 		movzbl	(%r15,%rcx), %ecx
 1141      0F
 550:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1142              		.loc 1 550 0 discriminator 3
 1143 02ee 48C1FE12 		sarq	$18, %rsi
 566:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 567:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 568:fltk-1.3.4-1/jpeg/jidctint.c **** 
 569:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 7;		/* advance pointer to next row */
 1144              		.loc 1 569 0 discriminator 3
 1145 02f2 4883C51C 		addq	$28, %rbp
 1146              	.LVL170:
 550:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1147              		.loc 1 550 0 discriminator 3
 1148 02f6 81E6FF03 		andl	$1023, %esi
 1148      0000
 1149 02fc 48830424 		addq	$8, (%rsp)
 1149      08
 565:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1150              		.loc 1 565 0 discriminator 3
 1151 0301 4D69C941 		imulq	$11585, %r9, %r9
 1151      2D0000
 547:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1152              		.loc 1 547 0 discriminator 3
 1153 0308 41880B   		movb	%cl, (%r11)
 550:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1154              		.loc 1 550 0 discriminator 3
 1155 030b 410FB60C 		movzbl	(%r15,%rsi), %ecx
 1155      37
 565:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1156              		.loc 1 565 0 discriminator 3
 1157 0310 4C01C8   		addq	%r9, %rax
 1158              	.LVL171:
 1159 0313 48C1F812 		sarq	$18, %rax
 1160              	.LVL172:
 1161 0317 25FF0300 		andl	$1023, %eax
 1161      00
 550:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1162              		.loc 1 550 0 discriminator 3
 1163 031c 41884B06 		movb	%cl, 6(%r11)
 553:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1164              		.loc 1 553 0 discriminator 3
 1165 0320 4A8D0C07 		leaq	(%rdi,%r8), %rcx
 556:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1166              		.loc 1 556 0 discriminator 3
 1167 0324 4C29C7   		subq	%r8, %rdi
 1168              	.LVL173:
 1169 0327 48C1FF12 		sarq	$18, %rdi
 553:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1170              		.loc 1 553 0 discriminator 3
 1171 032b 48C1F912 		sarq	$18, %rcx
 556:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1172              		.loc 1 556 0 discriminator 3
 1173 032f 81E7FF03 		andl	$1023, %edi
 1173      0000
 553:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1174              		.loc 1 553 0 discriminator 3
 1175 0335 81E1FF03 		andl	$1023, %ecx
 1175      0000
 1176 033b 410FB60C 		movzbl	(%r15,%rcx), %ecx
 1176      0F
 1177 0340 41884B01 		movb	%cl, 1(%r11)
 556:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1178              		.loc 1 556 0 discriminator 3
 1179 0344 410FB60C 		movzbl	(%r15,%rdi), %ecx
 1179      3F
 1180 0349 41884B05 		movb	%cl, 5(%r11)
 559:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1181              		.loc 1 559 0 discriminator 3
 1182 034d 4A8D0C12 		leaq	(%rdx,%r10), %rcx
 562:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1183              		.loc 1 562 0 discriminator 3
 1184 0351 4C29D2   		subq	%r10, %rdx
 1185              	.LVL174:
 1186 0354 48C1FA12 		sarq	$18, %rdx
 559:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1187              		.loc 1 559 0 discriminator 3
 1188 0358 48C1F912 		sarq	$18, %rcx
 562:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1189              		.loc 1 562 0 discriminator 3
 1190 035c 81E2FF03 		andl	$1023, %edx
 1190      0000
 559:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1191              		.loc 1 559 0 discriminator 3
 1192 0362 81E1FF03 		andl	$1023, %ecx
 1192      0000
 506:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1193              		.loc 1 506 0 discriminator 3
 1194 0368 483B6C24 		cmpq	16(%rsp), %rbp
 1194      10
 559:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1195              		.loc 1 559 0 discriminator 3
 1196 036d 410FB60C 		movzbl	(%r15,%rcx), %ecx
 1196      0F
 1197 0372 41884B02 		movb	%cl, 2(%r11)
 562:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1198              		.loc 1 562 0 discriminator 3
 1199 0376 410FB614 		movzbl	(%r15,%rdx), %edx
 1199      17
 1200 037b 41885304 		movb	%dl, 4(%r11)
 565:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1201              		.loc 1 565 0 discriminator 3
 1202 037f 410FB604 		movzbl	(%r15,%rax), %eax
 1202      07
 1203 0384 41884303 		movb	%al, 3(%r11)
 506:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1204              		.loc 1 506 0 discriminator 3
 1205 0388 0F857AFE 		jne	.L38
 1205      FFFF
 570:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 571:fltk-1.3.4-1/jpeg/jidctint.c **** }
 1206              		.loc 1 571 0
 1207 038e 488B8424 		movq	232(%rsp), %rax
 1207      E8000000 
 1208 0396 64483304 		xorq	%fs:40, %rax
 1208      25280000 
 1208      00
 1209 039f 7512     		jne	.L43
 1210 03a1 4881C4F8 		addq	$248, %rsp
 1210      000000
 1211              		.cfi_remember_state
 1212              		.cfi_def_cfa_offset 56
 1213 03a8 5B       		popq	%rbx
 1214              		.cfi_def_cfa_offset 48
 1215 03a9 5D       		popq	%rbp
 1216              		.cfi_def_cfa_offset 40
 1217              	.LVL175:
 1218 03aa 415C     		popq	%r12
 1219              		.cfi_def_cfa_offset 32
 1220              	.LVL176:
 1221 03ac 415D     		popq	%r13
 1222              		.cfi_def_cfa_offset 24
 1223 03ae 415E     		popq	%r14
 1224              		.cfi_def_cfa_offset 16
 1225 03b0 415F     		popq	%r15
 1226              		.cfi_def_cfa_offset 8
 1227 03b2 C3       		ret
 1228              	.LVL177:
 1229              	.L43:
 1230              		.cfi_restore_state
 1231 03b3 E8000000 		call	__stack_chk_fail
 1231      00
 1232              	.LVL178:
 1233              		.cfi_endproc
 1234              	.LFE62:
 1236              		.section	.text.unlikely.jpeg_idct_7x7
 1237              	.LCOLDE1:
 1238              		.section	.text.jpeg_idct_7x7
 1239              	.LHOTE1:
 1240              		.section	.text.unlikely.jpeg_idct_6x6,"ax",@progbits
 1241              	.LCOLDB2:
 1242              		.section	.text.jpeg_idct_6x6,"ax",@progbits
 1243              	.LHOTB2:
 1244              		.p2align 4,,15
 1245              		.globl	jpeg_idct_6x6
 1247              	jpeg_idct_6x6:
 1248              	.LFB63:
 572:fltk-1.3.4-1/jpeg/jidctint.c **** 
 573:fltk-1.3.4-1/jpeg/jidctint.c **** 
 574:fltk-1.3.4-1/jpeg/jidctint.c **** /*
 575:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
 576:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 6x6 output block.
 577:fltk-1.3.4-1/jpeg/jidctint.c ****  *
 578:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 3 multiplications in the 1-D kernel.
 579:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/12).
 580:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 581:fltk-1.3.4-1/jpeg/jidctint.c **** 
 582:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
 583:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_6x6 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 584:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
 585:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
 586:fltk-1.3.4-1/jpeg/jidctint.c **** {
 1249              		.loc 1 586 0
 1250              		.cfi_startproc
 1251              	.LVL179:
 1252 0000 4157     		pushq	%r15
 1253              		.cfi_def_cfa_offset 16
 1254              		.cfi_offset 15, -16
 1255 0002 4156     		pushq	%r14
 1256              		.cfi_def_cfa_offset 24
 1257              		.cfi_offset 14, -24
 1258 0004 4155     		pushq	%r13
 1259              		.cfi_def_cfa_offset 32
 1260              		.cfi_offset 13, -32
 1261 0006 4154     		pushq	%r12
 1262              		.cfi_def_cfa_offset 40
 1263              		.cfi_offset 12, -40
 1264 0008 55       		pushq	%rbp
 1265              		.cfi_def_cfa_offset 48
 1266              		.cfi_offset 6, -48
 1267 0009 53       		pushq	%rbx
 1268              		.cfi_def_cfa_offset 56
 1269              		.cfi_offset 3, -56
 1270 000a 4881ECB8 		subq	$184, %rsp
 1270      000000
 1271              		.cfi_def_cfa_offset 240
 587:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
 588:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
 589:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
 590:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
 591:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
 592:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
 593:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 1272              		.loc 1 593 0
 1273 0011 4C8BB7B8 		movq	440(%rdi), %r14
 1273      010000
 594:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 595:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[6*6];	/* buffers data between passes */
 596:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 597:fltk-1.3.4-1/jpeg/jidctint.c **** 
 598:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
 599:fltk-1.3.4-1/jpeg/jidctint.c **** 
 600:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
 601:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 1274              		.loc 1 601 0
 1275 0018 4C8B5E58 		movq	88(%rsi), %r11
 586:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
 1276              		.loc 1 586 0
 1277 001c 64488B04 		movq	%fs:40, %rax
 1277      25280000 
 1277      00
 1278 0025 48898424 		movq	%rax, 168(%rsp)
 1278      A8000000 
 1279 002d 31C0     		xorl	%eax, %eax
 602:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 1280              		.loc 1 602 0
 1281 002f 4C8D5424 		leaq	16(%rsp), %r10
 1281      10
 603:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 6; ctr++, inptr++, quantptr++, wsptr++) {
 1282              		.loc 1 603 0
 1283 0034 4C8D7C24 		leaq	40(%rsp), %r15
 1283      28
 586:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
 1284              		.loc 1 586 0
 1285 0039 48890C24 		movq	%rcx, (%rsp)
 1286 003d 44894424 		movl	%r8d, 12(%rsp)
 1286      0C
 593:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 1287              		.loc 1 593 0
 1288 0042 4983EE80 		subq	$-128, %r14
 1289              	.LVL180:
 1290 0046 662E0F1F 		.p2align 4,,10
 1290      84000000 
 1290      0000
 1291              		.p2align 3
 1292              	.L45:
 604:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 605:fltk-1.3.4-1/jpeg/jidctint.c **** 
 606:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 607:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 608:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 609:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-1);
 610:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 611:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp2, FIX(0.707106781));   /* c4 */
 1293              		.loc 1 611 0 discriminator 3
 1294 0050 440FBF42 		movswl	64(%rdx), %r8d
 1294      40
 606:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 1295              		.loc 1 606 0 discriminator 3
 1296 0055 0FBF0A   		movswl	(%rdx), %ecx
 603:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1297              		.loc 1 603 0 discriminator 3
 1298 0058 4983C304 		addq	$4, %r11
 1299              	.LVL181:
 1300              		.loc 1 611 0 discriminator 3
 1301 005c 450FAF43 		imull	124(%r11), %r8d
 1301      7C
 612:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 613:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = RIGHT_SHIFT(tmp0 - tmp10 - tmp10, CONST_BITS-PASS1_BITS);
 614:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 615:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp10, FIX(1.224744871));   /* c2 */
 1302              		.loc 1 615 0 discriminator 3
 1303 0061 0FBF4220 		movswl	32(%rdx), %eax
 616:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 617:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
 618:fltk-1.3.4-1/jpeg/jidctint.c **** 
 619:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 620:fltk-1.3.4-1/jpeg/jidctint.c **** 
 621:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 622:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 623:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 1304              		.loc 1 623 0 discriminator 3
 1305 0065 440FBF4A 		movswl	80(%rdx), %r9d
 1305      50
 603:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1306              		.loc 1 603 0 discriminator 3
 1307 006a 4883C202 		addq	$2, %rdx
 1308              	.LVL182:
 606:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 1309              		.loc 1 606 0 discriminator 3
 1310 006e 410FAF4B 		imull	-4(%r11), %ecx
 1310      FC
 615:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 1311              		.loc 1 615 0 discriminator 3
 1312 0073 410FAF43 		imull	60(%r11), %eax
 1312      3C
 1313              		.loc 1 623 0 discriminator 3
 1314 0078 450FAF8B 		imull	156(%r11), %r9d
 1314      9C000000 
 622:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 1315              		.loc 1 622 0 discriminator 3
 1316 0080 0FBF5A2E 		movswl	46(%rdx), %ebx
 611:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 1317              		.loc 1 611 0 discriminator 3
 1318 0084 4D63C0   		movslq	%r8d, %r8
 622:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 1319              		.loc 1 622 0 discriminator 3
 1320 0087 410FAF5B 		imull	92(%r11), %ebx
 1320      5C
 611:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 1321              		.loc 1 611 0 discriminator 3
 1322 008c 4D69C0A1 		imulq	$5793, %r8, %r8
 1322      160000
 606:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 1323              		.loc 1 606 0 discriminator 3
 1324 0093 4863C9   		movslq	%ecx, %rcx
 1325              	.LVL183:
 615:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 1326              		.loc 1 615 0 discriminator 3
 1327 0096 4898     		cltq
 607:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 1328              		.loc 1 607 0 discriminator 3
 1329 0098 48C1E10D 		salq	$13, %rcx
 1330              	.LVL184:
 609:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 1331              		.loc 1 609 0 discriminator 3
 1332 009c 4881C100 		addq	$1024, %rcx
 1332      040000
 1333              	.LVL185:
 1334              		.loc 1 623 0 discriminator 3
 1335 00a3 4D63C9   		movslq	%r9d, %r9
 615:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 1336              		.loc 1 615 0 discriminator 3
 1337 00a6 4869C031 		imulq	$10033, %rax, %rax
 1337      270000
 612:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = RIGHT_SHIFT(tmp0 - tmp10 - tmp10, CONST_BITS-PASS1_BITS);
 1338              		.loc 1 612 0 discriminator 3
 1339 00ad 4A8D3401 		leaq	(%rcx,%r8), %rsi
 1340              	.LVL186:
 624:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 + z3, FIX(0.366025404)); /* c5 */
 625:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 626:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 627:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 628:fltk-1.3.4-1/jpeg/jidctint.c **** 
 629:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 630:fltk-1.3.4-1/jpeg/jidctint.c **** 
 631:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*0] = (int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS-PASS1_BITS);
 632:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 633:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) (tmp11 + tmp1);
 1341              		.loc 1 633 0 discriminator 3
 1342 00b1 4C29C1   		subq	%r8, %rcx
 1343              	.LVL187:
 622:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 1344              		.loc 1 622 0 discriminator 3
 1345 00b4 4863DB   		movslq	%ebx, %rbx
 1346              		.loc 1 633 0 discriminator 3
 1347 00b7 4C29C1   		subq	%r8, %rcx
 1348 00ba 48C1F90B 		sarq	$11, %rcx
 616:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
 1349              		.loc 1 616 0 discriminator 3
 1350 00be 488D2C06 		leaq	(%rsi,%rax), %rbp
 1351              	.LVL188:
 617:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1352              		.loc 1 617 0 discriminator 3
 1353 00c2 4829C6   		subq	%rax, %rsi
 1354              	.LVL189:
 621:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 1355              		.loc 1 621 0 discriminator 3
 1356 00c5 0FBF420E 		movswl	14(%rdx), %eax
 1357              	.LVL190:
 1358 00c9 410FAF43 		imull	28(%r11), %eax
 1358      1C
 1359 00ce 4898     		cltq
 1360              	.LVL191:
 624:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 1361              		.loc 1 624 0 discriminator 3
 1362 00d0 4A8D3C08 		leaq	(%rax,%r9), %rdi
 625:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1363              		.loc 1 625 0 discriminator 3
 1364 00d4 4C8D2418 		leaq	(%rax,%rbx), %r12
 1365              		.loc 1 633 0 discriminator 3
 1366 00d8 4829D8   		subq	%rbx, %rax
 1367              	.LVL192:
 1368 00db 4C29C8   		subq	%r9, %rax
 624:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 1369              		.loc 1 624 0 discriminator 3
 1370 00de 4C69EFB6 		imulq	$2998, %rdi, %r13
 1370      0B0000
 1371              	.LVL193:
 626:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 1372              		.loc 1 626 0 discriminator 3
 1373 00e5 4C89CF   		movq	%r9, %rdi
 625:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1374              		.loc 1 625 0 discriminator 3
 1375 00e8 49C1E40D 		salq	$13, %r12
 626:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 1376              		.loc 1 626 0 discriminator 3
 1377 00ec 4829DF   		subq	%rbx, %rdi
 1378              		.loc 1 633 0 discriminator 3
 1379 00ef 48C1E002 		salq	$2, %rax
 626:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 1380              		.loc 1 626 0 discriminator 3
 1381 00f3 48C1E70D 		salq	$13, %rdi
 1382              		.loc 1 633 0 discriminator 3
 1383 00f7 448D0408 		leal	(%rax,%rcx), %r8d
 1384              	.LVL194:
 634:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*4] = (int) (tmp11 - tmp1);
 1385              		.loc 1 634 0 discriminator 3
 1386 00fb 29C1     		subl	%eax, %ecx
 1387 00fd 41894A60 		movl	%ecx, 96(%r10)
 626:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 1388              		.loc 1 626 0 discriminator 3
 1389 0101 4C01EF   		addq	%r13, %rdi
 625:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1390              		.loc 1 625 0 discriminator 3
 1391 0104 4D01EC   		addq	%r13, %r12
 1392              	.LVL195:
 633:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*4] = (int) (tmp11 - tmp1);
 1393              		.loc 1 633 0 discriminator 3
 1394 0107 45894218 		movl	%r8d, 24(%r10)
 631:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 1395              		.loc 1 631 0 discriminator 3
 1396 010b 4E8D6C25 		leaq	0(%rbp,%r12), %r13
 1396      00
 635:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 1397              		.loc 1 635 0 discriminator 3
 1398 0110 488D043E 		leaq	(%rsi,%rdi), %rax
 632:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) (tmp11 + tmp1);
 1399              		.loc 1 632 0 discriminator 3
 1400 0114 4C29E5   		subq	%r12, %rbp
 1401              	.LVL196:
 636:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*3] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 1402              		.loc 1 636 0 discriminator 3
 1403 0117 4829FE   		subq	%rdi, %rsi
 1404              	.LVL197:
 632:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) (tmp11 + tmp1);
 1405              		.loc 1 632 0 discriminator 3
 1406 011a 48C1FD0B 		sarq	$11, %rbp
 631:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 1407              		.loc 1 631 0 discriminator 3
 1408 011e 49C1FD0B 		sarq	$11, %r13
 635:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*3] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 1409              		.loc 1 635 0 discriminator 3
 1410 0122 48C1F80B 		sarq	$11, %rax
 1411              		.loc 1 636 0 discriminator 3
 1412 0126 48C1FE0B 		sarq	$11, %rsi
 631:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 1413              		.loc 1 631 0 discriminator 3
 1414 012a 45892A   		movl	%r13d, (%r10)
 632:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) (tmp11 + tmp1);
 1415              		.loc 1 632 0 discriminator 3
 1416 012d 41896A78 		movl	%ebp, 120(%r10)
 603:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1417              		.loc 1 603 0 discriminator 3
 1418 0131 4983C204 		addq	$4, %r10
 1419              	.LVL198:
 635:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*3] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 1420              		.loc 1 635 0 discriminator 3
 1421 0135 4189422C 		movl	%eax, 44(%r10)
 1422              		.loc 1 636 0 discriminator 3
 1423 0139 41897244 		movl	%esi, 68(%r10)
 1424              	.LVL199:
 603:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1425              		.loc 1 603 0 discriminator 3
 1426 013d 4D39FA   		cmpq	%r15, %r10
 1427 0140 0F850AFF 		jne	.L45
 1427      FFFF
 1428 0146 448B4424 		movl	12(%rsp), %r8d
 1428      0C
 1429 014b 488B0C24 		movq	(%rsp), %rcx
 603:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1430              		.loc 1 603 0 is_stmt 0
 1431 014f 4C8D4C24 		leaq	16(%rsp), %r9
 1431      10
 1432              	.LVL200:
 637:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 638:fltk-1.3.4-1/jpeg/jidctint.c **** 
 639:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 6 rows from work array, store into output array. */
 640:fltk-1.3.4-1/jpeg/jidctint.c **** 
 641:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 642:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
 1433              		.loc 1 642 0 is_stmt 1
 1434 0154 4C8D9C24 		leaq	160(%rsp), %r11
 1434      A0000000 
 1435              	.LVL201:
 1436 015c 0F1F4000 		.p2align 4,,10
 1437              		.p2align 3
 1438              	.L46:
 643:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 644:fltk-1.3.4-1/jpeg/jidctint.c **** 
 645:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 646:fltk-1.3.4-1/jpeg/jidctint.c **** 
 647:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 648:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 649:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 650:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[4];
 651:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp2, FIX(0.707106781));   /* c4 */
 1439              		.loc 1 651 0 discriminator 3
 1440 0160 4D635110 		movslq	16(%r9), %r10
 648:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 1441              		.loc 1 648 0 discriminator 3
 1442 0164 496311   		movslq	(%r9), %rdx
 643:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1443              		.loc 1 643 0 discriminator 3
 1444 0167 4C89C7   		movq	%r8, %rdi
 652:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 653:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp10 - tmp10;
 654:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[2];
 655:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp10, FIX(1.224744871));   /* c2 */
 656:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 657:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
 658:fltk-1.3.4-1/jpeg/jidctint.c **** 
 659:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 660:fltk-1.3.4-1/jpeg/jidctint.c **** 
 661:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
 1445              		.loc 1 661 0 discriminator 3
 1446 016a 49635904 		movslq	4(%r9), %rbx
 662:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 663:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 1447              		.loc 1 663 0 discriminator 3
 1448 016e 4D636914 		movslq	20(%r9), %r13
 662:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 1449              		.loc 1 662 0 discriminator 3
 1450 0172 4D63790C 		movslq	12(%r9), %r15
 643:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1451              		.loc 1 643 0 discriminator 3
 1452 0176 480339   		addq	(%rcx), %rdi
 1453              	.LVL202:
 651:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 1454              		.loc 1 651 0 discriminator 3
 1455 0179 4D69D2A1 		imulq	$5793, %r10, %r10
 1455      160000
 648:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 1456              		.loc 1 648 0 discriminator 3
 1457 0180 4883C210 		addq	$16, %rdx
 1458              	.LVL203:
 649:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[4];
 1459              		.loc 1 649 0 discriminator 3
 1460 0184 48C1E20D 		salq	$13, %rdx
 1461              	.LVL204:
 664:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 + z3, FIX(0.366025404)); /* c5 */
 665:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 1462              		.loc 1 665 0 discriminator 3
 1463 0188 4A8D2C3B 		leaq	(%rbx,%r15), %rbp
 652:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp10 - tmp10;
 1464              		.loc 1 652 0 discriminator 3
 1465 018c 4A8D3412 		leaq	(%rdx,%r10), %rsi
 1466              	.LVL205:
 653:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[2];
 1467              		.loc 1 653 0 discriminator 3
 1468 0190 4C29D2   		subq	%r10, %rdx
 1469              	.LVL206:
 1470              		.loc 1 665 0 discriminator 3
 1471 0193 48C1E50D 		salq	$13, %rbp
 653:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[2];
 1472              		.loc 1 653 0 discriminator 3
 1473 0197 4889D0   		movq	%rdx, %rax
 1474 019a 4C29D0   		subq	%r10, %rax
 1475              	.LVL207:
 655:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 1476              		.loc 1 655 0 discriminator 3
 1477 019d 4D635108 		movslq	8(%r9), %r10
 1478              	.LVL208:
 1479 01a1 4D69D231 		imulq	$10033, %r10, %r10
 1479      270000
 1480              	.LVL209:
 656:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
 1481              		.loc 1 656 0 discriminator 3
 1482 01a8 4A8D1416 		leaq	(%rsi,%r10), %rdx
 1483              	.LVL210:
 657:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1484              		.loc 1 657 0 discriminator 3
 1485 01ac 4C29D6   		subq	%r10, %rsi
 1486              	.LVL211:
 664:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 1487              		.loc 1 664 0 discriminator 3
 1488 01af 4E8D142B 		leaq	(%rbx,%r13), %r10
 1489              	.LVL212:
 666:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 667:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << CONST_BITS;
 1490              		.loc 1 667 0 discriminator 3
 1491 01b3 4C29FB   		subq	%r15, %rbx
 1492              	.LVL213:
 664:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 1493              		.loc 1 664 0 discriminator 3
 1494 01b6 4D69E2B6 		imulq	$2998, %r10, %r12
 1494      0B0000
 1495              	.LVL214:
 666:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1496              		.loc 1 666 0 discriminator 3
 1497 01bd 4D89EA   		movq	%r13, %r10
 1498              		.loc 1 667 0 discriminator 3
 1499 01c0 4C29EB   		subq	%r13, %rbx
 666:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1500              		.loc 1 666 0 discriminator 3
 1501 01c3 4D29FA   		subq	%r15, %r10
 1502              		.loc 1 667 0 discriminator 3
 1503 01c6 48C1E30D 		salq	$13, %rbx
 666:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1504              		.loc 1 666 0 discriminator 3
 1505 01ca 49C1E20D 		salq	$13, %r10
 665:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1506              		.loc 1 665 0 discriminator 3
 1507 01ce 4C01E5   		addq	%r12, %rbp
 1508              	.LVL215:
 666:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 1509              		.loc 1 666 0 discriminator 3
 1510 01d1 4D01E2   		addq	%r12, %r10
 1511              	.LVL216:
 668:fltk-1.3.4-1/jpeg/jidctint.c **** 
 669:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 670:fltk-1.3.4-1/jpeg/jidctint.c **** 
 671:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
 1512              		.loc 1 671 0 discriminator 3
 1513 01d4 4C8D242A 		leaq	(%rdx,%rbp), %r12
 672:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 673:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 674:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
 1514              		.loc 1 674 0 discriminator 3
 1515 01d8 4829EA   		subq	%rbp, %rdx
 1516              	.LVL217:
 1517 01db 48C1FA12 		sarq	$18, %rdx
 671:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1518              		.loc 1 671 0 discriminator 3
 1519 01df 49C1FC12 		sarq	$18, %r12
 1520              		.loc 1 674 0 discriminator 3
 1521 01e3 81E2FF03 		andl	$1023, %edx
 1521      0000
 671:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1522              		.loc 1 671 0 discriminator 3
 1523 01e9 4181E4FF 		andl	$1023, %r12d
 1523      030000
 1524 01f0 470FB624 		movzbl	(%r14,%r12), %r12d
 1524      26
 1525 01f5 448827   		movb	%r12b, (%rdi)
 1526              		.loc 1 674 0 discriminator 3
 1527 01f8 410FB614 		movzbl	(%r14,%rdx), %edx
 1527      16
 1528 01fd 885705   		movb	%dl, 5(%rdi)
 675:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 676:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 677:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp1,
 1529              		.loc 1 677 0 discriminator 3
 1530 0200 488D1418 		leaq	(%rax,%rbx), %rdx
 678:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 679:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 680:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp1,
 1531              		.loc 1 680 0 discriminator 3
 1532 0204 4829D8   		subq	%rbx, %rax
 1533              	.LVL218:
 677:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1534              		.loc 1 677 0 discriminator 3
 1535 0207 48C1FA12 		sarq	$18, %rdx
 1536 020b 81E2FF03 		andl	$1023, %edx
 1536      0000
 1537 0211 410FB614 		movzbl	(%r14,%rdx), %edx
 1537      16
 1538 0216 885701   		movb	%dl, 1(%rdi)
 1539              		.loc 1 680 0 discriminator 3
 1540 0219 4889C2   		movq	%rax, %rdx
 1541 021c 48C1FA12 		sarq	$18, %rdx
 1542 0220 81E2FF03 		andl	$1023, %edx
 1542      0000
 1543 0226 410FB604 		movzbl	(%r14,%rdx), %eax
 1543      16
 1544 022b 884704   		movb	%al, 4(%rdi)
 681:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 682:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 683:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp2,
 1545              		.loc 1 683 0 discriminator 3
 1546 022e 4A8D0416 		leaq	(%rsi,%r10), %rax
 1547 0232 48C1F812 		sarq	$18, %rax
 1548 0236 25FF0300 		andl	$1023, %eax
 1548      00
 1549 023b 410FB604 		movzbl	(%r14,%rax), %eax
 1549      06
 1550 0240 884702   		movb	%al, 2(%rdi)
 684:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 685:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 686:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp2,
 1551              		.loc 1 686 0 discriminator 3
 1552 0243 4889F0   		movq	%rsi, %rax
 1553 0246 4C29D0   		subq	%r10, %rax
 1554 0249 48C1F812 		sarq	$18, %rax
 1555 024d 25FF0300 		andl	$1023, %eax
 1555      00
 687:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 688:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 689:fltk-1.3.4-1/jpeg/jidctint.c **** 
 690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 6;		/* advance pointer to next row */
 1556              		.loc 1 690 0 discriminator 3
 1557 0252 4983C118 		addq	$24, %r9
 1558              	.LVL219:
 1559 0256 4883C108 		addq	$8, %rcx
 686:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1560              		.loc 1 686 0 discriminator 3
 1561 025a 410FB604 		movzbl	(%r14,%rax), %eax
 1561      06
 642:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1562              		.loc 1 642 0 discriminator 3
 1563 025f 4D39D9   		cmpq	%r11, %r9
 686:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1564              		.loc 1 686 0 discriminator 3
 1565 0262 884703   		movb	%al, 3(%rdi)
 642:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1566              		.loc 1 642 0 discriminator 3
 1567 0265 0F85F5FE 		jne	.L46
 1567      FFFF
 691:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 692:fltk-1.3.4-1/jpeg/jidctint.c **** }
 1568              		.loc 1 692 0
 1569 026b 488B8424 		movq	168(%rsp), %rax
 1569      A8000000 
 1570 0273 64483304 		xorq	%fs:40, %rax
 1570      25280000 
 1570      00
 1571 027c 7512     		jne	.L51
 1572 027e 4881C4B8 		addq	$184, %rsp
 1572      000000
 1573              		.cfi_remember_state
 1574              		.cfi_def_cfa_offset 56
 1575              	.LVL220:
 1576 0285 5B       		popq	%rbx
 1577              		.cfi_def_cfa_offset 48
 1578              	.LVL221:
 1579 0286 5D       		popq	%rbp
 1580              		.cfi_def_cfa_offset 40
 1581              	.LVL222:
 1582 0287 415C     		popq	%r12
 1583              		.cfi_def_cfa_offset 32
 1584 0289 415D     		popq	%r13
 1585              		.cfi_def_cfa_offset 24
 1586              	.LVL223:
 1587 028b 415E     		popq	%r14
 1588              		.cfi_def_cfa_offset 16
 1589              	.LVL224:
 1590 028d 415F     		popq	%r15
 1591              		.cfi_def_cfa_offset 8
 1592              	.LVL225:
 1593 028f C3       		ret
 1594              	.LVL226:
 1595              	.L51:
 1596              		.cfi_restore_state
 1597 0290 E8000000 		call	__stack_chk_fail
 1597      00
 1598              	.LVL227:
 1599              		.cfi_endproc
 1600              	.LFE63:
 1602              		.section	.text.unlikely.jpeg_idct_6x6
 1603              	.LCOLDE2:
 1604              		.section	.text.jpeg_idct_6x6
 1605              	.LHOTE2:
 1606              		.section	.text.unlikely.jpeg_idct_5x5,"ax",@progbits
 1607              	.LCOLDB3:
 1608              		.section	.text.jpeg_idct_5x5,"ax",@progbits
 1609              	.LHOTB3:
 1610              		.p2align 4,,15
 1611              		.globl	jpeg_idct_5x5
 1613              	jpeg_idct_5x5:
 1614              	.LFB64:
 693:fltk-1.3.4-1/jpeg/jidctint.c **** 
 694:fltk-1.3.4-1/jpeg/jidctint.c **** 
 695:fltk-1.3.4-1/jpeg/jidctint.c **** /*
 696:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
 697:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 5x5 output block.
 698:fltk-1.3.4-1/jpeg/jidctint.c ****  *
 699:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 5 multiplications in the 1-D kernel.
 700:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/10).
 701:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 702:fltk-1.3.4-1/jpeg/jidctint.c **** 
 703:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
 704:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_5x5 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 705:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
 706:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
 707:fltk-1.3.4-1/jpeg/jidctint.c **** {
 1615              		.loc 1 707 0
 1616              		.cfi_startproc
 1617              	.LVL228:
 1618 0000 4156     		pushq	%r14
 1619              		.cfi_def_cfa_offset 16
 1620              		.cfi_offset 14, -16
 1621 0002 4155     		pushq	%r13
 1622              		.cfi_def_cfa_offset 24
 1623              		.cfi_offset 13, -24
 1624 0004 4154     		pushq	%r12
 1625              		.cfi_def_cfa_offset 32
 1626              		.cfi_offset 12, -32
 1627 0006 55       		pushq	%rbp
 1628              		.cfi_def_cfa_offset 40
 1629              		.cfi_offset 6, -40
 1630 0007 4C8D620A 		leaq	10(%rdx), %r12
 1631 000b 53       		pushq	%rbx
 1632              		.cfi_def_cfa_offset 48
 1633              		.cfi_offset 3, -48
 1634 000c 4883EC70 		subq	$112, %rsp
 1635              		.cfi_def_cfa_offset 160
 708:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp10, tmp11, tmp12;
 709:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
 710:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
 711:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
 712:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
 713:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
 714:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 1636              		.loc 1 714 0
 1637 0010 4C8B97B8 		movq	440(%rdi), %r10
 1637      010000
 715:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 716:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[5*5];	/* buffers data between passes */
 717:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 718:fltk-1.3.4-1/jpeg/jidctint.c **** 
 719:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
 720:fltk-1.3.4-1/jpeg/jidctint.c **** 
 721:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
 722:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 1638              		.loc 1 722 0
 1639 0017 488B6E58 		movq	88(%rsi), %rbp
 707:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp10, tmp11, tmp12;
 1640              		.loc 1 707 0
 1641 001b 64488B04 		movq	%fs:40, %rax
 1641      25280000 
 1641      00
 1642 0024 48894424 		movq	%rax, 104(%rsp)
 1642      68
 1643 0029 31C0     		xorl	%eax, %eax
 723:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 1644              		.loc 1 723 0
 1645 002b 4889E3   		movq	%rsp, %rbx
 714:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 1646              		.loc 1 714 0
 1647 002e 4983EA80 		subq	$-128, %r10
 1648              	.LVL229:
 1649              	.L53:
 724:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 5; ctr++, inptr++, quantptr++, wsptr++) {
 725:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 726:fltk-1.3.4-1/jpeg/jidctint.c **** 
 727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 728:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 729:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 730:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += ONE << (CONST_BITS-PASS1_BITS-1);
 731:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 1650              		.loc 1 731 0 discriminator 3
 1651 0032 0FBF7220 		movswl	32(%rdx), %esi
 732:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 1652              		.loc 1 732 0 discriminator 3
 1653 0036 0FBF7A40 		movswl	64(%rdx), %edi
 724:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 5; ctr++, inptr++, quantptr++, wsptr++) {
 1654              		.loc 1 724 0 discriminator 3
 1655 003a 4883C202 		addq	$2, %rdx
 1656              	.LVL230:
 731:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 1657              		.loc 1 731 0 discriminator 3
 1658 003e 0FAF7540 		imull	64(%rbp), %esi
 1659              		.loc 1 732 0 discriminator 3
 1660 0042 0FAFBD80 		imull	128(%rbp), %edi
 1660      000000
 727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 1661              		.loc 1 727 0 discriminator 3
 1662 0049 0FBF42FE 		movswl	-2(%rdx), %eax
 724:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1663              		.loc 1 724 0 discriminator 3
 1664 004d 4883C504 		addq	$4, %rbp
 1665              	.LVL231:
 1666 0051 4883C304 		addq	$4, %rbx
 1667              	.LVL232:
 727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 1668              		.loc 1 727 0 discriminator 3
 1669 0055 0FAF45FC 		imull	-4(%rbp), %eax
 731:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 1670              		.loc 1 731 0 discriminator 3
 1671 0059 4863F6   		movslq	%esi, %rsi
 1672              		.loc 1 732 0 discriminator 3
 1673 005c 4863FF   		movslq	%edi, %rdi
 733:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp1, FIX(0.790569415)); /* (c2+c4)/2 */
 1674              		.loc 1 733 0 discriminator 3
 1675 005f 4C8D0C3E 		leaq	(%rsi,%rdi), %r9
 734:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(0.353553391)); /* (c2-c4)/2 */
 1676              		.loc 1 734 0 discriminator 3
 1677 0063 4829FE   		subq	%rdi, %rsi
 735:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp12 + z2;
 736:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
 738:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
 739:fltk-1.3.4-1/jpeg/jidctint.c **** 
 740:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 741:fltk-1.3.4-1/jpeg/jidctint.c **** 
 742:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 743:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 1678              		.loc 1 743 0 discriminator 3
 1679 0066 0FBF7A2E 		movswl	46(%rdx), %edi
 734:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(0.353553391)); /* (c2-c4)/2 */
 1680              		.loc 1 734 0 discriminator 3
 1681 006a 4869F650 		imulq	$2896, %rsi, %rsi
 1681      0B0000
 727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 1682              		.loc 1 727 0 discriminator 3
 1683 0071 4898     		cltq
 1684              	.LVL233:
 733:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(0.353553391)); /* (c2-c4)/2 */
 1685              		.loc 1 733 0 discriminator 3
 1686 0073 4D69C94C 		imulq	$6476, %r9, %r9
 1686      190000
 728:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 1687              		.loc 1 728 0 discriminator 3
 1688 007a 48C1E00D 		salq	$13, %rax
 1689              	.LVL234:
 730:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 1690              		.loc 1 730 0 discriminator 3
 1691 007e 48050004 		addq	$1024, %rax
 1691      0000
 1692              	.LVL235:
 1693              		.loc 1 743 0 discriminator 3
 1694 0084 0FAF7D5C 		imull	92(%rbp), %edi
 735:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 1695              		.loc 1 735 0 discriminator 3
 1696 0088 4C8D1C30 		leaq	(%rax,%rsi), %r11
 1697              	.LVL236:
 744:fltk-1.3.4-1/jpeg/jidctint.c **** 
 745:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));     /* c3 */
 746:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX(0.513743148));   /* c1-c3 */
 747:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z1 - MULTIPLY(z3, FIX(2.176250899));   /* c1+c3 */
 748:fltk-1.3.4-1/jpeg/jidctint.c **** 
 749:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 750:fltk-1.3.4-1/jpeg/jidctint.c **** 
 751:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*0] = (int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS-PASS1_BITS);
 752:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*4] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 753:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 754:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*3] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 755:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 1698              		.loc 1 755 0 discriminator 3
 1699 008c 48C1E602 		salq	$2, %rsi
 1700              	.LVL237:
 1701 0090 4829F0   		subq	%rsi, %rax
 1702              	.LVL238:
 736:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
 1703              		.loc 1 736 0 discriminator 3
 1704 0093 4F8D2C19 		leaq	(%r9,%r11), %r13
 1705              	.LVL239:
 737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
 1706              		.loc 1 737 0 discriminator 3
 1707 0097 4D29CB   		subq	%r9, %r11
 1708              	.LVL240:
 742:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 1709              		.loc 1 742 0 discriminator 3
 1710 009a 440FBF4A 		movswl	14(%rdx), %r9d
 1710      0E
 1711              	.LVL241:
 1712 009f 440FAF4D 		imull	28(%rbp), %r9d
 1712      1C
 1713              		.loc 1 755 0 discriminator 3
 1714 00a4 48C1F80B 		sarq	$11, %rax
 743:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1715              		.loc 1 743 0 discriminator 3
 1716 00a8 4863FF   		movslq	%edi, %rdi
 1717              		.loc 1 755 0 discriminator 3
 1718 00ab 894324   		movl	%eax, 36(%rbx)
 742:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 1719              		.loc 1 742 0 discriminator 3
 1720 00ae 4D63C9   		movslq	%r9d, %r9
 1721              	.LVL242:
 745:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX(0.513743148));   /* c1-c3 */
 1722              		.loc 1 745 0 discriminator 3
 1723 00b1 4D8D3439 		leaq	(%r9,%rdi), %r14
 746:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z1 - MULTIPLY(z3, FIX(2.176250899));   /* c1+c3 */
 1724              		.loc 1 746 0 discriminator 3
 1725 00b5 4D69C971 		imulq	$4209, %r9, %r9
 1725      100000
 1726              	.LVL243:
 745:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX(0.513743148));   /* c1-c3 */
 1727              		.loc 1 745 0 discriminator 3
 1728 00bc 4D69F69A 		imulq	$6810, %r14, %r14
 1728      1A0000
 1729              	.LVL244:
 747:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1730              		.loc 1 747 0 discriminator 3
 1731 00c3 4869FF5C 		imulq	$-17828, %rdi, %rdi
 1731      BAFFFF
 1732              	.LVL245:
 746:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z1 - MULTIPLY(z3, FIX(2.176250899));   /* c1+c3 */
 1733              		.loc 1 746 0 discriminator 3
 1734 00ca 4D01F1   		addq	%r14, %r9
 1735              	.LVL246:
 747:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1736              		.loc 1 747 0 discriminator 3
 1737 00cd 4C01F7   		addq	%r14, %rdi
 1738              	.LVL247:
 751:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*4] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 1739              		.loc 1 751 0 discriminator 3
 1740 00d0 4F8D740D 		leaq	0(%r13,%r9), %r14
 1740      00
 1741              	.LVL248:
 752:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 1742              		.loc 1 752 0 discriminator 3
 1743 00d5 4D29CD   		subq	%r9, %r13
 1744              	.LVL249:
 753:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*3] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 1745              		.loc 1 753 0 discriminator 3
 1746 00d8 4D8D0C3B 		leaq	(%r11,%rdi), %r9
 1747              	.LVL250:
 754:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 1748              		.loc 1 754 0 discriminator 3
 1749 00dc 4929FB   		subq	%rdi, %r11
 1750              	.LVL251:
 752:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 1751              		.loc 1 752 0 discriminator 3
 1752 00df 49C1FD0B 		sarq	$11, %r13
 751:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*4] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 1753              		.loc 1 751 0 discriminator 3
 1754 00e3 49C1FE0B 		sarq	$11, %r14
 754:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 1755              		.loc 1 754 0 discriminator 3
 1756 00e7 49C1FB0B 		sarq	$11, %r11
 752:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 1757              		.loc 1 752 0 discriminator 3
 1758 00eb 44896B4C 		movl	%r13d, 76(%rbx)
 753:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*3] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 1759              		.loc 1 753 0 discriminator 3
 1760 00ef 49C1F90B 		sarq	$11, %r9
 751:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*4] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 1761              		.loc 1 751 0 discriminator 3
 1762 00f3 448973FC 		movl	%r14d, -4(%rbx)
 754:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 1763              		.loc 1 754 0 discriminator 3
 1764 00f7 44895B38 		movl	%r11d, 56(%rbx)
 753:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*3] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 1765              		.loc 1 753 0 discriminator 3
 1766 00fb 44894B10 		movl	%r9d, 16(%rbx)
 1767              	.LVL252:
 724:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1768              		.loc 1 724 0 discriminator 3
 1769 00ff 4C39E2   		cmpq	%r12, %rdx
 1770 0102 0F852AFF 		jne	.L53
 1770      FFFF
 756:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 757:fltk-1.3.4-1/jpeg/jidctint.c **** 
 758:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 5 rows from work array, store into output array. */
 759:fltk-1.3.4-1/jpeg/jidctint.c **** 
 760:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 761:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 5; ctr++) {
 1771              		.loc 1 761 0
 1772 0108 4C8D5C24 		leaq	100(%rsp), %r11
 1772      64
 1773 010d 4589C0   		movl	%r8d, %r8d
 724:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1774              		.loc 1 724 0
 1775 0110 4889E7   		movq	%rsp, %rdi
 1776              	.LVL253:
 1777              	.L54:
 762:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 763:fltk-1.3.4-1/jpeg/jidctint.c **** 
 764:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 765:fltk-1.3.4-1/jpeg/jidctint.c **** 
 766:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 767:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 768:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 769:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[2];
 770:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (INT32) wsptr[4];
 1778              		.loc 1 770 0 discriminator 3
 1779 0113 48635710 		movslq	16(%rdi), %rdx
 769:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (INT32) wsptr[4];
 1780              		.loc 1 769 0 discriminator 3
 1781 0117 48635F08 		movslq	8(%rdi), %rbx
 762:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1782              		.loc 1 762 0 discriminator 3
 1783 011b 4D89C1   		movq	%r8, %r9
 767:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 1784              		.loc 1 767 0 discriminator 3
 1785 011e 486307   		movslq	(%rdi), %rax
 771:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp1, FIX(0.790569415)); /* (c2+c4)/2 */
 772:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(0.353553391)); /* (c2-c4)/2 */
 773:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp12 + z2;
 774:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 775:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
 776:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
 777:fltk-1.3.4-1/jpeg/jidctint.c **** 
 778:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 779:fltk-1.3.4-1/jpeg/jidctint.c **** 
 780:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[1];
 1786              		.loc 1 780 0 discriminator 3
 1787 0121 4C636704 		movslq	4(%rdi), %r12
 781:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[3];
 782:fltk-1.3.4-1/jpeg/jidctint.c **** 
 783:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));     /* c3 */
 784:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX(0.513743148));   /* c1-c3 */
 785:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z1 - MULTIPLY(z3, FIX(2.176250899));   /* c1+c3 */
 786:fltk-1.3.4-1/jpeg/jidctint.c **** 
 787:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 788:fltk-1.3.4-1/jpeg/jidctint.c **** 
 789:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
 790:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 791:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 792:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
 793:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 794:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 795:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp1,
 796:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 797:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 798:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp1,
 799:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 800:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 801:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12,
 802:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 803:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 804:fltk-1.3.4-1/jpeg/jidctint.c **** 
 805:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 5;		/* advance pointer to next row */
 1788              		.loc 1 805 0 discriminator 3
 1789 0125 4883C714 		addq	$20, %rdi
 1790              	.LVL254:
 781:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[3];
 1791              		.loc 1 781 0 discriminator 3
 1792 0129 4C6377F8 		movslq	-8(%rdi), %r14
 762:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1793              		.loc 1 762 0 discriminator 3
 1794 012d 4C0309   		addq	(%rcx), %r9
 1795              	.LVL255:
 1796 0130 4883C108 		addq	$8, %rcx
 771:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp1, FIX(0.790569415)); /* (c2+c4)/2 */
 1797              		.loc 1 771 0 discriminator 3
 1798 0134 488D2C13 		leaq	(%rbx,%rdx), %rbp
 772:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp12 + z2;
 1799              		.loc 1 772 0 discriminator 3
 1800 0138 4829D3   		subq	%rdx, %rbx
 1801 013b 4869DB50 		imulq	$2896, %rbx, %rbx
 1801      0B0000
 767:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 1802              		.loc 1 767 0 discriminator 3
 1803 0142 4883C010 		addq	$16, %rax
 1804              	.LVL256:
 771:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp0 - tmp1, FIX(0.353553391)); /* (c2-c4)/2 */
 1805              		.loc 1 771 0 discriminator 3
 1806 0146 4869ED4C 		imulq	$6476, %rbp, %rbp
 1806      190000
 768:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[2];
 1807              		.loc 1 768 0 discriminator 3
 1808 014d 48C1E00D 		salq	$13, %rax
 1809              	.LVL257:
 773:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 1810              		.loc 1 773 0 discriminator 3
 1811 0151 488D1418 		leaq	(%rax,%rbx), %rdx
 1812              	.LVL258:
 801:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1813              		.loc 1 801 0 discriminator 3
 1814 0155 48C1E302 		salq	$2, %rbx
 1815              	.LVL259:
 1816 0159 4829D8   		subq	%rbx, %rax
 1817              	.LVL260:
 774:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
 1818              		.loc 1 774 0 discriminator 3
 1819 015c 488D7415 		leaq	0(%rbp,%rdx), %rsi
 1819      00
 1820              	.LVL261:
 775:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
 1821              		.loc 1 775 0 discriminator 3
 1822 0161 4829EA   		subq	%rbp, %rdx
 1823              	.LVL262:
 783:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX(0.513743148));   /* c1-c3 */
 1824              		.loc 1 783 0 discriminator 3
 1825 0164 4B8D2C34 		leaq	(%r12,%r14), %rbp
 1826              	.LVL263:
 784:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z1 - MULTIPLY(z3, FIX(2.176250899));   /* c1+c3 */
 1827              		.loc 1 784 0 discriminator 3
 1828 0168 4D69E471 		imulq	$4209, %r12, %r12
 1828      100000
 1829              	.LVL264:
 801:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1830              		.loc 1 801 0 discriminator 3
 1831 016f 48C1F812 		sarq	$18, %rax
 783:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX(0.513743148));   /* c1-c3 */
 1832              		.loc 1 783 0 discriminator 3
 1833 0173 4C69ED9A 		imulq	$6810, %rbp, %r13
 1833      1A0000
 1834              	.LVL265:
 801:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1835              		.loc 1 801 0 discriminator 3
 1836 017a 25FF0300 		andl	$1023, %eax
 1836      00
 785:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1837              		.loc 1 785 0 discriminator 3
 1838 017f 4969EE5C 		imulq	$-17828, %r14, %rbp
 1838      BAFFFF
 784:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z1 - MULTIPLY(z3, FIX(2.176250899));   /* c1+c3 */
 1839              		.loc 1 784 0 discriminator 3
 1840 0186 4D01EC   		addq	%r13, %r12
 1841              	.LVL266:
 785:fltk-1.3.4-1/jpeg/jidctint.c **** 
 1842              		.loc 1 785 0 discriminator 3
 1843 0189 4C01ED   		addq	%r13, %rbp
 1844              	.LVL267:
 789:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1845              		.loc 1 789 0 discriminator 3
 1846 018c 4E8D2C26 		leaq	(%rsi,%r12), %r13
 1847              	.LVL268:
 792:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1848              		.loc 1 792 0 discriminator 3
 1849 0190 4C29E6   		subq	%r12, %rsi
 1850              	.LVL269:
 1851 0193 48C1FE12 		sarq	$18, %rsi
 789:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1852              		.loc 1 789 0 discriminator 3
 1853 0197 49C1FD12 		sarq	$18, %r13
 792:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1854              		.loc 1 792 0 discriminator 3
 1855 019b 81E6FF03 		andl	$1023, %esi
 1855      0000
 789:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1856              		.loc 1 789 0 discriminator 3
 1857 01a1 4181E5FF 		andl	$1023, %r13d
 1857      030000
 1858 01a8 470FB62C 		movzbl	(%r10,%r13), %r13d
 1858      2A
 1859 01ad 458829   		movb	%r13b, (%r9)
 792:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1860              		.loc 1 792 0 discriminator 3
 1861 01b0 410FB634 		movzbl	(%r10,%rsi), %esi
 1861      32
 1862 01b5 41887104 		movb	%sil, 4(%r9)
 795:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1863              		.loc 1 795 0 discriminator 3
 1864 01b9 488D342A 		leaq	(%rdx,%rbp), %rsi
 798:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1865              		.loc 1 798 0 discriminator 3
 1866 01bd 4829EA   		subq	%rbp, %rdx
 1867              	.LVL270:
 1868 01c0 48C1FA12 		sarq	$18, %rdx
 795:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1869              		.loc 1 795 0 discriminator 3
 1870 01c4 48C1FE12 		sarq	$18, %rsi
 798:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1871              		.loc 1 798 0 discriminator 3
 1872 01c8 81E2FF03 		andl	$1023, %edx
 1872      0000
 795:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1873              		.loc 1 795 0 discriminator 3
 1874 01ce 81E6FF03 		andl	$1023, %esi
 1874      0000
 761:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1875              		.loc 1 761 0 discriminator 3
 1876 01d4 4C39DF   		cmpq	%r11, %rdi
 795:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1877              		.loc 1 795 0 discriminator 3
 1878 01d7 410FB634 		movzbl	(%r10,%rsi), %esi
 1878      32
 1879 01dc 41887101 		movb	%sil, 1(%r9)
 798:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1880              		.loc 1 798 0 discriminator 3
 1881 01e0 410FB614 		movzbl	(%r10,%rdx), %edx
 1881      12
 1882 01e5 41885103 		movb	%dl, 3(%r9)
 801:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 1883              		.loc 1 801 0 discriminator 3
 1884 01e9 410FB604 		movzbl	(%r10,%rax), %eax
 1884      02
 1885 01ee 41884102 		movb	%al, 2(%r9)
 761:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 1886              		.loc 1 761 0 discriminator 3
 1887 01f2 0F851BFF 		jne	.L54
 1887      FFFF
 806:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 807:fltk-1.3.4-1/jpeg/jidctint.c **** }
 1888              		.loc 1 807 0
 1889 01f8 488B4424 		movq	104(%rsp), %rax
 1889      68
 1890 01fd 64483304 		xorq	%fs:40, %rax
 1890      25280000 
 1890      00
 1891 0206 750D     		jne	.L59
 1892 0208 4883C470 		addq	$112, %rsp
 1893              		.cfi_remember_state
 1894              		.cfi_def_cfa_offset 48
 1895 020c 5B       		popq	%rbx
 1896              		.cfi_def_cfa_offset 40
 1897 020d 5D       		popq	%rbp
 1898              		.cfi_def_cfa_offset 32
 1899              	.LVL271:
 1900 020e 415C     		popq	%r12
 1901              		.cfi_def_cfa_offset 24
 1902              	.LVL272:
 1903 0210 415D     		popq	%r13
 1904              		.cfi_def_cfa_offset 16
 1905 0212 415E     		popq	%r14
 1906              		.cfi_def_cfa_offset 8
 1907              	.LVL273:
 1908 0214 C3       		ret
 1909              	.LVL274:
 1910              	.L59:
 1911              		.cfi_restore_state
 1912 0215 E8000000 		call	__stack_chk_fail
 1912      00
 1913              	.LVL275:
 1914              		.cfi_endproc
 1915              	.LFE64:
 1917              		.section	.text.unlikely.jpeg_idct_5x5
 1918              	.LCOLDE3:
 1919              		.section	.text.jpeg_idct_5x5
 1920              	.LHOTE3:
 1921              		.section	.text.unlikely.jpeg_idct_4x4,"ax",@progbits
 1922              	.LCOLDB4:
 1923              		.section	.text.jpeg_idct_4x4,"ax",@progbits
 1924              	.LHOTB4:
 1925              		.p2align 4,,15
 1926              		.globl	jpeg_idct_4x4
 1928              	jpeg_idct_4x4:
 1929              	.LFB65:
 808:fltk-1.3.4-1/jpeg/jidctint.c **** 
 809:fltk-1.3.4-1/jpeg/jidctint.c **** 
 810:fltk-1.3.4-1/jpeg/jidctint.c **** /*
 811:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
 812:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 4x4 output block.
 813:fltk-1.3.4-1/jpeg/jidctint.c ****  *
 814:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 3 multiplications in the 1-D kernel.
 815:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point IDCT].
 816:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 817:fltk-1.3.4-1/jpeg/jidctint.c **** 
 818:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
 819:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_4x4 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 820:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
 821:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
 822:fltk-1.3.4-1/jpeg/jidctint.c **** {
 1930              		.loc 1 822 0
 1931              		.cfi_startproc
 1932              	.LVL276:
 1933 0000 4156     		pushq	%r14
 1934              		.cfi_def_cfa_offset 16
 1935              		.cfi_offset 14, -16
 1936 0002 4155     		pushq	%r13
 1937              		.cfi_def_cfa_offset 24
 1938              		.cfi_offset 13, -24
 1939 0004 4154     		pushq	%r12
 1940              		.cfi_def_cfa_offset 32
 1941              		.cfi_offset 12, -32
 1942 0006 55       		pushq	%rbp
 1943              		.cfi_def_cfa_offset 40
 1944              		.cfi_offset 6, -40
 1945 0007 53       		pushq	%rbx
 1946              		.cfi_def_cfa_offset 48
 1947              		.cfi_offset 3, -48
 1948 0008 4883EC50 		subq	$80, %rsp
 1949              		.cfi_def_cfa_offset 128
 823:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
 824:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
 825:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
 826:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
 827:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
 828:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
 829:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 1950              		.loc 1 829 0
 1951 000c 4C8B9FB8 		movq	440(%rdi), %r11
 1951      010000
 830:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 831:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[4*4];	/* buffers data between passes */
 832:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 833:fltk-1.3.4-1/jpeg/jidctint.c **** 
 834:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
 835:fltk-1.3.4-1/jpeg/jidctint.c **** 
 836:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
 837:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 1952              		.loc 1 837 0
 1953 0013 4C8B5658 		movq	88(%rsi), %r10
 822:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
 1954              		.loc 1 822 0
 1955 0017 64488B04 		movq	%fs:40, %rax
 1955      25280000 
 1955      00
 1956 0020 48894424 		movq	%rax, 72(%rsp)
 1956      48
 1957 0025 31C0     		xorl	%eax, %eax
 838:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 839:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 4; ctr++, inptr++, quantptr++, wsptr++) {
 1958              		.loc 1 839 0
 1959 0027 488D5C24 		leaq	16(%rsp), %rbx
 1959      10
 838:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 1960              		.loc 1 838 0
 1961 002c 4989E1   		movq	%rsp, %r9
 829:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 1962              		.loc 1 829 0
 1963 002f 4983EB80 		subq	$-128, %r11
 1964              	.LVL277:
 1965              	.L61:
 840:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 841:fltk-1.3.4-1/jpeg/jidctint.c **** 
 842:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 843:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 844:fltk-1.3.4-1/jpeg/jidctint.c ****     
 845:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (tmp0 + tmp2) << PASS1_BITS;
 846:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << PASS1_BITS;
 847:fltk-1.3.4-1/jpeg/jidctint.c **** 
 848:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 849:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Same rotation as in the even part of the 8x8 LL&M IDCT */
 850:fltk-1.3.4-1/jpeg/jidctint.c **** 
 851:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 1966              		.loc 1 851 0 discriminator 3
 1967 0033 0FBF7210 		movswl	16(%rdx), %esi
 852:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 1968              		.loc 1 852 0 discriminator 3
 1969 0037 0FBF6A30 		movswl	48(%rdx), %ebp
 839:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1970              		.loc 1 839 0 discriminator 3
 1971 003b 4983C104 		addq	$4, %r9
 1972              	.LVL278:
 851:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 1973              		.loc 1 851 0 discriminator 3
 1974 003f 410FAF72 		imull	32(%r10), %esi
 1974      20
 1975              		.loc 1 852 0 discriminator 3
 1976 0044 410FAF6A 		imull	96(%r10), %ebp
 1976      60
 842:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 1977              		.loc 1 842 0 discriminator 3
 1978 0049 0FBF02   		movswl	(%rdx), %eax
 843:fltk-1.3.4-1/jpeg/jidctint.c ****     
 1979              		.loc 1 843 0 discriminator 3
 1980 004c 440FBF62 		movswl	32(%rdx), %r12d
 1980      20
 839:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1981              		.loc 1 839 0 discriminator 3
 1982 0051 4983C204 		addq	$4, %r10
 1983              	.LVL279:
 842:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 1984              		.loc 1 842 0 discriminator 3
 1985 0055 410FAF42 		imull	-4(%r10), %eax
 1985      FC
 843:fltk-1.3.4-1/jpeg/jidctint.c ****     
 1986              		.loc 1 843 0 discriminator 3
 1987 005a 450FAF62 		imull	60(%r10), %r12d
 1987      3C
 839:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 1988              		.loc 1 839 0 discriminator 3
 1989 005f 4883C202 		addq	$2, %rdx
 1990              	.LVL280:
 851:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 1991              		.loc 1 851 0 discriminator 3
 1992 0063 4863F6   		movslq	%esi, %rsi
 1993              		.loc 1 852 0 discriminator 3
 1994 0066 4863ED   		movslq	%ebp, %rbp
 853:fltk-1.3.4-1/jpeg/jidctint.c **** 
 854:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);               /* c6 */
 1995              		.loc 1 854 0 discriminator 3
 1996 0069 488D3C2E 		leaq	(%rsi,%rbp), %rdi
 855:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 856:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
 857:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = RIGHT_SHIFT(z1 + MULTIPLY(z2, FIX_0_765366865), /* c2-c6 */
 858:fltk-1.3.4-1/jpeg/jidctint.c **** 		       CONST_BITS-PASS1_BITS);
 859:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = RIGHT_SHIFT(z1 - MULTIPLY(z3, FIX_1_847759065), /* c2+c6 */
 860:fltk-1.3.4-1/jpeg/jidctint.c **** 		       CONST_BITS-PASS1_BITS);
 861:fltk-1.3.4-1/jpeg/jidctint.c **** 
 862:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 863:fltk-1.3.4-1/jpeg/jidctint.c **** 
 864:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*0] = (int) (tmp10 + tmp0);
 1997              		.loc 1 864 0 discriminator 3
 1998 006d 4869F67E 		imulq	$6270, %rsi, %rsi
 1998      180000
 842:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 1999              		.loc 1 842 0 discriminator 3
 2000 0074 4898     		cltq
 2001              	.LVL281:
 854:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 2002              		.loc 1 854 0 discriminator 3
 2003 0076 4869FF51 		imulq	$4433, %rdi, %rdi
 2003      110000
 843:fltk-1.3.4-1/jpeg/jidctint.c ****     
 2004              		.loc 1 843 0 discriminator 3
 2005 007d 4D63E4   		movslq	%r12d, %r12
 2006              	.LVL282:
 865:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 866:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*1] = (int) (tmp12 + tmp2);
 2007              		.loc 1 866 0 discriminator 3
 2008 0080 4869EDDF 		imulq	$-15137, %rbp, %rbp
 2008      C4FFFF
 2009              	.LVL283:
 864:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 2010              		.loc 1 864 0 discriminator 3
 2011 0087 4E8D2C20 		leaq	(%rax,%r12), %r13
 2012              		.loc 1 866 0 discriminator 3
 2013 008b 4C29E0   		subq	%r12, %rax
 2014              	.LVL284:
 2015 008e 48C1E002 		salq	$2, %rax
 2016              	.LVL285:
 864:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 2017              		.loc 1 864 0 discriminator 3
 2018 0092 49C1E502 		salq	$2, %r13
 2019              	.LVL286:
 856:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = RIGHT_SHIFT(z1 + MULTIPLY(z2, FIX_0_765366865), /* c2-c6 */
 2020              		.loc 1 856 0 discriminator 3
 2021 0096 4881C700 		addq	$1024, %rdi
 2021      040000
 2022              	.LVL287:
 864:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 2023              		.loc 1 864 0 discriminator 3
 2024 009d 4801FE   		addq	%rdi, %rsi
 2025              		.loc 1 866 0 discriminator 3
 2026 00a0 4801EF   		addq	%rbp, %rdi
 2027              	.LVL288:
 864:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 2028              		.loc 1 864 0 discriminator 3
 2029 00a3 48C1FE0B 		sarq	$11, %rsi
 2030              		.loc 1 866 0 discriminator 3
 2031 00a7 48C1FF0B 		sarq	$11, %rdi
 864:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 2032              		.loc 1 864 0 discriminator 3
 2033 00ab 468D342E 		leal	(%rsi,%r13), %r14d
 865:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 2034              		.loc 1 865 0 discriminator 3
 2035 00af 4129F5   		subl	%esi, %r13d
 2036              	.LVL289:
 2037              		.loc 1 866 0 discriminator 3
 2038 00b2 8D3407   		leal	(%rdi,%rax), %esi
 867:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*2] = (int) (tmp12 - tmp2);
 2039              		.loc 1 867 0 discriminator 3
 2040 00b5 29F8     		subl	%edi, %eax
 2041              	.LVL290:
 865:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*1] = (int) (tmp12 + tmp2);
 2042              		.loc 1 865 0 discriminator 3
 2043 00b7 4589692C 		movl	%r13d, 44(%r9)
 864:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) (tmp10 - tmp0);
 2044              		.loc 1 864 0 discriminator 3
 2045 00bb 458971FC 		movl	%r14d, -4(%r9)
 866:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*2] = (int) (tmp12 - tmp2);
 2046              		.loc 1 866 0 discriminator 3
 2047 00bf 4189710C 		movl	%esi, 12(%r9)
 2048              		.loc 1 867 0 discriminator 3
 2049 00c3 4189411C 		movl	%eax, 28(%r9)
 2050              	.LVL291:
 839:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2051              		.loc 1 839 0 discriminator 3
 2052 00c7 4939D9   		cmpq	%rbx, %r9
 2053 00ca 0F8563FF 		jne	.L61
 2053      FFFF
 868:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 869:fltk-1.3.4-1/jpeg/jidctint.c **** 
 870:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 4 rows from work array, store into output array. */
 871:fltk-1.3.4-1/jpeg/jidctint.c **** 
 872:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 873:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
 2054              		.loc 1 873 0
 2055 00d0 4C8D5424 		leaq	64(%rsp), %r10
 2055      40
 2056              	.LVL292:
 2057 00d5 4589C0   		movl	%r8d, %r8d
 839:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2058              		.loc 1 839 0
 2059 00d8 4889E6   		movq	%rsp, %rsi
 2060              	.LVL293:
 2061              	.L62:
 874:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 875:fltk-1.3.4-1/jpeg/jidctint.c **** 
 876:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 877:fltk-1.3.4-1/jpeg/jidctint.c **** 
 878:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 879:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 2062              		.loc 1 879 0 discriminator 3
 2063 00db 486306   		movslq	(%rsi), %rax
 880:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
 2064              		.loc 1 880 0 discriminator 3
 2065 00de 48637E08 		movslq	8(%rsi), %rdi
 874:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 2066              		.loc 1 874 0 discriminator 3
 2067 00e2 4D89C1   		movq	%r8, %r9
 881:fltk-1.3.4-1/jpeg/jidctint.c **** 
 882:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (tmp0 + tmp2) << CONST_BITS;
 883:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 884:fltk-1.3.4-1/jpeg/jidctint.c **** 
 885:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 886:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Same rotation as in the even part of the 8x8 LL&M IDCT */
 887:fltk-1.3.4-1/jpeg/jidctint.c **** 
 888:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[1];
 2068              		.loc 1 888 0 discriminator 3
 2069 00e5 48635E04 		movslq	4(%rsi), %rbx
 874:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2070              		.loc 1 874 0 discriminator 3
 2071 00e9 4C0309   		addq	(%rcx), %r9
 2072              	.LVL294:
 889:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[3];
 890:fltk-1.3.4-1/jpeg/jidctint.c **** 
 891:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);   /* c6 */
 892:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 893:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 894:fltk-1.3.4-1/jpeg/jidctint.c **** 
 895:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 896:fltk-1.3.4-1/jpeg/jidctint.c **** 
 897:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
 898:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 899:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 900:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
 901:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 902:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 903:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp2,
 904:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 905:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 906:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp2,
 907:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 908:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 909:fltk-1.3.4-1/jpeg/jidctint.c **** 
 910:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 4;		/* advance pointer to next row */
 2073              		.loc 1 910 0 discriminator 3
 2074 00ec 4883C610 		addq	$16, %rsi
 2075              	.LVL295:
 2076 00f0 4883C108 		addq	$8, %rcx
 879:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
 2077              		.loc 1 879 0 discriminator 3
 2078 00f4 4883C010 		addq	$16, %rax
 2079              	.LVL296:
 882:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 2080              		.loc 1 882 0 discriminator 3
 2081 00f8 488D1438 		leaq	(%rax,%rdi), %rdx
 883:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2082              		.loc 1 883 0 discriminator 3
 2083 00fc 4829F8   		subq	%rdi, %rax
 2084              	.LVL297:
 889:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2085              		.loc 1 889 0 discriminator 3
 2086 00ff 48637EFC 		movslq	-4(%rsi), %rdi
 2087              	.LVL298:
 883:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2088              		.loc 1 883 0 discriminator 3
 2089 0103 48C1E00D 		salq	$13, %rax
 882:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 2090              		.loc 1 882 0 discriminator 3
 2091 0107 48C1E20D 		salq	$13, %rdx
 2092              	.LVL299:
 891:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 2093              		.loc 1 891 0 discriminator 3
 2094 010b 488D2C3B 		leaq	(%rbx,%rdi), %rbp
 892:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 2095              		.loc 1 892 0 discriminator 3
 2096 010f 4869DB7E 		imulq	$6270, %rbx, %rbx
 2096      180000
 2097              	.LVL300:
 891:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 2098              		.loc 1 891 0 discriminator 3
 2099 0116 4869ED51 		imulq	$4433, %rbp, %rbp
 2099      110000
 2100              	.LVL301:
 893:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2101              		.loc 1 893 0 discriminator 3
 2102 011d 4869FFDF 		imulq	$-15137, %rdi, %rdi
 2102      C4FFFF
 2103              	.LVL302:
 892:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 2104              		.loc 1 892 0 discriminator 3
 2105 0124 4801EB   		addq	%rbp, %rbx
 2106              	.LVL303:
 893:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2107              		.loc 1 893 0 discriminator 3
 2108 0127 4801EF   		addq	%rbp, %rdi
 2109              	.LVL304:
 897:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2110              		.loc 1 897 0 discriminator 3
 2111 012a 488D2C1A 		leaq	(%rdx,%rbx), %rbp
 2112              	.LVL305:
 900:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2113              		.loc 1 900 0 discriminator 3
 2114 012e 4829DA   		subq	%rbx, %rdx
 2115              	.LVL306:
 2116 0131 48C1FA12 		sarq	$18, %rdx
 897:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2117              		.loc 1 897 0 discriminator 3
 2118 0135 48C1FD12 		sarq	$18, %rbp
 900:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2119              		.loc 1 900 0 discriminator 3
 2120 0139 81E2FF03 		andl	$1023, %edx
 2120      0000
 897:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2121              		.loc 1 897 0 discriminator 3
 2122 013f 81E5FF03 		andl	$1023, %ebp
 2122      0000
 2123 0145 410FB62C 		movzbl	(%r11,%rbp), %ebp
 2123      2B
 2124 014a 418829   		movb	%bpl, (%r9)
 900:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2125              		.loc 1 900 0 discriminator 3
 2126 014d 410FB614 		movzbl	(%r11,%rdx), %edx
 2126      13
 2127 0152 41885103 		movb	%dl, 3(%r9)
 903:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2128              		.loc 1 903 0 discriminator 3
 2129 0156 488D1438 		leaq	(%rax,%rdi), %rdx
 906:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2130              		.loc 1 906 0 discriminator 3
 2131 015a 4829F8   		subq	%rdi, %rax
 2132              	.LVL307:
 2133 015d 48C1F812 		sarq	$18, %rax
 903:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2134              		.loc 1 903 0 discriminator 3
 2135 0161 48C1FA12 		sarq	$18, %rdx
 906:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2136              		.loc 1 906 0 discriminator 3
 2137 0165 25FF0300 		andl	$1023, %eax
 2137      00
 903:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2138              		.loc 1 903 0 discriminator 3
 2139 016a 81E2FF03 		andl	$1023, %edx
 2139      0000
 873:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 2140              		.loc 1 873 0 discriminator 3
 2141 0170 4C39D6   		cmpq	%r10, %rsi
 903:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2142              		.loc 1 903 0 discriminator 3
 2143 0173 410FB614 		movzbl	(%r11,%rdx), %edx
 2143      13
 2144 0178 41885101 		movb	%dl, 1(%r9)
 906:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2145              		.loc 1 906 0 discriminator 3
 2146 017c 410FB604 		movzbl	(%r11,%rax), %eax
 2146      03
 2147 0181 41884102 		movb	%al, 2(%r9)
 873:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 2148              		.loc 1 873 0 discriminator 3
 2149 0185 0F8550FF 		jne	.L62
 2149      FFFF
 911:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 912:fltk-1.3.4-1/jpeg/jidctint.c **** }
 2150              		.loc 1 912 0
 2151 018b 488B4424 		movq	72(%rsp), %rax
 2151      48
 2152 0190 64483304 		xorq	%fs:40, %rax
 2152      25280000 
 2152      00
 2153 0199 750D     		jne	.L67
 2154 019b 4883C450 		addq	$80, %rsp
 2155              		.cfi_remember_state
 2156              		.cfi_def_cfa_offset 48
 2157 019f 5B       		popq	%rbx
 2158              		.cfi_def_cfa_offset 40
 2159              	.LVL308:
 2160 01a0 5D       		popq	%rbp
 2161              		.cfi_def_cfa_offset 32
 2162 01a1 415C     		popq	%r12
 2163              		.cfi_def_cfa_offset 24
 2164 01a3 415D     		popq	%r13
 2165              		.cfi_def_cfa_offset 16
 2166 01a5 415E     		popq	%r14
 2167              		.cfi_def_cfa_offset 8
 2168 01a7 C3       		ret
 2169              	.LVL309:
 2170              	.L67:
 2171              		.cfi_restore_state
 2172 01a8 E8000000 		call	__stack_chk_fail
 2172      00
 2173              	.LVL310:
 2174              		.cfi_endproc
 2175              	.LFE65:
 2177              		.section	.text.unlikely.jpeg_idct_4x4
 2178              	.LCOLDE4:
 2179              		.section	.text.jpeg_idct_4x4
 2180              	.LHOTE4:
 2181              		.section	.text.unlikely.jpeg_idct_3x3,"ax",@progbits
 2182              	.LCOLDB5:
 2183              		.section	.text.jpeg_idct_3x3,"ax",@progbits
 2184              	.LHOTB5:
 2185              		.p2align 4,,15
 2186              		.globl	jpeg_idct_3x3
 2188              	jpeg_idct_3x3:
 2189              	.LFB66:
 913:fltk-1.3.4-1/jpeg/jidctint.c **** 
 914:fltk-1.3.4-1/jpeg/jidctint.c **** 
 915:fltk-1.3.4-1/jpeg/jidctint.c **** /*
 916:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
 917:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 3x3 output block.
 918:fltk-1.3.4-1/jpeg/jidctint.c ****  *
 919:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 2 multiplications in the 1-D kernel.
 920:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/6).
 921:fltk-1.3.4-1/jpeg/jidctint.c ****  */
 922:fltk-1.3.4-1/jpeg/jidctint.c **** 
 923:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
 924:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_3x3 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
 925:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
 926:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
 927:fltk-1.3.4-1/jpeg/jidctint.c **** {
 2190              		.loc 1 927 0
 2191              		.cfi_startproc
 2192              	.LVL311:
 2193 0000 4154     		pushq	%r12
 2194              		.cfi_def_cfa_offset 16
 2195              		.cfi_offset 12, -16
 2196 0002 55       		pushq	%rbp
 2197              		.cfi_def_cfa_offset 24
 2198              		.cfi_offset 6, -24
 2199 0003 53       		pushq	%rbx
 2200              		.cfi_def_cfa_offset 32
 2201              		.cfi_offset 3, -32
 2202 0004 4883EC30 		subq	$48, %rsp
 2203              		.cfi_def_cfa_offset 80
 928:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
 929:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
 930:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
 931:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
 932:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
 933:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 2204              		.loc 1 933 0
 2205 0008 488BBFB8 		movq	440(%rdi), %rdi
 2205      010000
 2206              	.LVL312:
 934:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 935:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[3*3];	/* buffers data between passes */
 936:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 937:fltk-1.3.4-1/jpeg/jidctint.c **** 
 938:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
 939:fltk-1.3.4-1/jpeg/jidctint.c **** 
 940:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
 941:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 2207              		.loc 1 941 0
 2208 000f 4C8B5658 		movq	88(%rsi), %r10
 927:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
 2209              		.loc 1 927 0
 2210 0013 64488B04 		movq	%fs:40, %rax
 2210      25280000 
 2210      00
 2211 001c 48894424 		movq	%rax, 40(%rsp)
 2211      28
 2212 0021 31C0     		xorl	%eax, %eax
 942:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 943:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 3; ctr++, inptr++, quantptr++, wsptr++) {
 2213              		.loc 1 943 0
 2214 0023 4C8D5C24 		leaq	12(%rsp), %r11
 2214      0C
 942:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 2215              		.loc 1 942 0
 2216 0028 4989E1   		movq	%rsp, %r9
 933:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 2217              		.loc 1 933 0
 2218 002b 4883EF80 		subq	$-128, %rdi
 2219              	.LVL313:
 2220              	.L69:
 944:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 945:fltk-1.3.4-1/jpeg/jidctint.c **** 
 946:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 947:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 948:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 949:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-1);
 950:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 951:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp2, FIX(0.707106781)); /* c2 */
 2221              		.loc 1 951 0 discriminator 3
 2222 002f 0FBF5A20 		movswl	32(%rdx), %ebx
 946:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2223              		.loc 1 946 0 discriminator 3
 2224 0033 0FBF02   		movswl	(%rdx), %eax
 943:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2225              		.loc 1 943 0 discriminator 3
 2226 0036 4983C104 		addq	$4, %r9
 2227              	.LVL314:
 2228              		.loc 1 951 0 discriminator 3
 2229 003a 410FAF5A 		imull	64(%r10), %ebx
 2229      40
 952:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
 953:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
 954:fltk-1.3.4-1/jpeg/jidctint.c **** 
 955:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 956:fltk-1.3.4-1/jpeg/jidctint.c **** 
 957:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 958:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp12, FIX(1.224744871)); /* c1 */
 2230              		.loc 1 958 0 discriminator 3
 2231 003f 0FBF7210 		movswl	16(%rdx), %esi
 943:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2232              		.loc 1 943 0 discriminator 3
 2233 0043 4983C204 		addq	$4, %r10
 2234              	.LVL315:
 2235 0047 4883C202 		addq	$2, %rdx
 2236              	.LVL316:
 946:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2237              		.loc 1 946 0 discriminator 3
 2238 004b 410FAF42 		imull	-4(%r10), %eax
 2238      FC
 2239              		.loc 1 958 0 discriminator 3
 2240 0050 410FAF72 		imull	28(%r10), %esi
 2240      1C
 951:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
 2241              		.loc 1 951 0 discriminator 3
 2242 0055 4863DB   		movslq	%ebx, %rbx
 2243 0058 4869DBA1 		imulq	$5793, %rbx, %rbx
 2243      160000
 946:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2244              		.loc 1 946 0 discriminator 3
 2245 005f 4898     		cltq
 2246              	.LVL317:
 2247              		.loc 1 958 0 discriminator 3
 2248 0061 4863F6   		movslq	%esi, %rsi
 947:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 2249              		.loc 1 947 0 discriminator 3
 2250 0064 48C1E00D 		salq	$13, %rax
 2251              	.LVL318:
 949:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 2252              		.loc 1 949 0 discriminator 3
 2253 0068 48050004 		addq	$1024, %rax
 2253      0000
 2254              	.LVL319:
 2255              		.loc 1 958 0 discriminator 3
 2256 006e 4869F631 		imulq	$10033, %rsi, %rsi
 2256      270000
 952:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
 2257              		.loc 1 952 0 discriminator 3
 2258 0075 488D2C18 		leaq	(%rax,%rbx), %rbp
 2259              	.LVL320:
 959:fltk-1.3.4-1/jpeg/jidctint.c **** 
 960:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 961:fltk-1.3.4-1/jpeg/jidctint.c **** 
 962:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*0] = (int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS-PASS1_BITS);
 963:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 964:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*1] = (int) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 2260              		.loc 1 964 0 discriminator 3
 2261 0079 4829D8   		subq	%rbx, %rax
 2262              	.LVL321:
 2263 007c 4829D8   		subq	%rbx, %rax
 2264 007f 48C1F80B 		sarq	$11, %rax
 2265 0083 41894108 		movl	%eax, 8(%r9)
 2266              	.LVL322:
 962:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 2267              		.loc 1 962 0 discriminator 3
 2268 0087 4C8D6435 		leaq	0(%rbp,%rsi), %r12
 2268      00
 963:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*1] = (int) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 2269              		.loc 1 963 0 discriminator 3
 2270 008c 4829F5   		subq	%rsi, %rbp
 2271              	.LVL323:
 2272 008f 48C1FD0B 		sarq	$11, %rbp
 962:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 2273              		.loc 1 962 0 discriminator 3
 2274 0093 49C1FC0B 		sarq	$11, %r12
 963:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*1] = (int) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 2275              		.loc 1 963 0 discriminator 3
 2276 0097 41896914 		movl	%ebp, 20(%r9)
 962:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 2277              		.loc 1 962 0 discriminator 3
 2278 009b 458961FC 		movl	%r12d, -4(%r9)
 2279              	.LVL324:
 943:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2280              		.loc 1 943 0 discriminator 3
 2281 009f 4D39D9   		cmpq	%r11, %r9
 2282 00a2 758B     		jne	.L69
 965:fltk-1.3.4-1/jpeg/jidctint.c ****   }
 966:fltk-1.3.4-1/jpeg/jidctint.c **** 
 967:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 3 rows from work array, store into output array. */
 968:fltk-1.3.4-1/jpeg/jidctint.c **** 
 969:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 970:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 3; ctr++) {
 2283              		.loc 1 970 0
 2284 00a4 4C8D5424 		leaq	36(%rsp), %r10
 2284      24
 2285              	.LVL325:
 2286 00a9 4589C0   		movl	%r8d, %r8d
 943:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2287              		.loc 1 943 0
 2288 00ac 4889E6   		movq	%rsp, %rsi
 2289              	.LVL326:
 2290              	.L70:
 971:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 972:fltk-1.3.4-1/jpeg/jidctint.c **** 
 973:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 974:fltk-1.3.4-1/jpeg/jidctint.c **** 
 975:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 976:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 977:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 978:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
 979:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp2, FIX(0.707106781)); /* c2 */
 2291              		.loc 1 979 0 discriminator 3
 2292 00af 4C635E08 		movslq	8(%rsi), %r11
 976:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2293              		.loc 1 976 0 discriminator 3
 2294 00b3 486306   		movslq	(%rsi), %rax
 971:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 2295              		.loc 1 971 0 discriminator 3
 2296 00b6 4D89C1   		movq	%r8, %r9
 980:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
 981:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
 982:fltk-1.3.4-1/jpeg/jidctint.c **** 
 983:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
 984:fltk-1.3.4-1/jpeg/jidctint.c **** 
 985:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (INT32) wsptr[1];
 986:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp12, FIX(1.224744871)); /* c1 */
 2297              		.loc 1 986 0 discriminator 3
 2298 00b9 48636E04 		movslq	4(%rsi), %rbp
 971:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2299              		.loc 1 971 0 discriminator 3
 2300 00bd 4C0309   		addq	(%rcx), %r9
 2301              	.LVL327:
 987:fltk-1.3.4-1/jpeg/jidctint.c **** 
 988:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
 989:fltk-1.3.4-1/jpeg/jidctint.c **** 
 990:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
 991:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 992:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 993:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
 994:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 995:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 996:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp2,
 997:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 998:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 999:fltk-1.3.4-1/jpeg/jidctint.c **** 
1000:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 3;		/* advance pointer to next row */
 2302              		.loc 1 1000 0 discriminator 3
 2303 00c0 4883C60C 		addq	$12, %rsi
 2304              	.LVL328:
 2305 00c4 4883C108 		addq	$8, %rcx
 979:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
 2306              		.loc 1 979 0 discriminator 3
 2307 00c8 4D69DBA1 		imulq	$5793, %r11, %r11
 2307      160000
 976:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2308              		.loc 1 976 0 discriminator 3
 2309 00cf 4883C010 		addq	$16, %rax
 2310              	.LVL329:
 986:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2311              		.loc 1 986 0 discriminator 3
 2312 00d3 4869ED31 		imulq	$10033, %rbp, %rbp
 2312      270000
 977:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
 2313              		.loc 1 977 0 discriminator 3
 2314 00da 48C1E00D 		salq	$13, %rax
 2315              	.LVL330:
 980:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
 2316              		.loc 1 980 0 discriminator 3
 2317 00de 4A8D1418 		leaq	(%rax,%r11), %rdx
 2318              	.LVL331:
 996:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2319              		.loc 1 996 0 discriminator 3
 2320 00e2 4C29D8   		subq	%r11, %rax
 2321              	.LVL332:
 2322 00e5 4C29D8   		subq	%r11, %rax
 990:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2323              		.loc 1 990 0 discriminator 3
 2324 00e8 488D1C2A 		leaq	(%rdx,%rbp), %rbx
 993:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2325              		.loc 1 993 0 discriminator 3
 2326 00ec 4829EA   		subq	%rbp, %rdx
 2327              	.LVL333:
 996:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2328              		.loc 1 996 0 discriminator 3
 2329 00ef 48C1F812 		sarq	$18, %rax
 993:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2330              		.loc 1 993 0 discriminator 3
 2331 00f3 48C1FA12 		sarq	$18, %rdx
 996:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2332              		.loc 1 996 0 discriminator 3
 2333 00f7 25FF0300 		andl	$1023, %eax
 2333      00
 990:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2334              		.loc 1 990 0 discriminator 3
 2335 00fc 48C1FB12 		sarq	$18, %rbx
 993:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2336              		.loc 1 993 0 discriminator 3
 2337 0100 81E2FF03 		andl	$1023, %edx
 2337      0000
 990:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2338              		.loc 1 990 0 discriminator 3
 2339 0106 81E3FF03 		andl	$1023, %ebx
 2339      0000
 970:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 2340              		.loc 1 970 0 discriminator 3
 2341 010c 4C39D6   		cmpq	%r10, %rsi
 990:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2342              		.loc 1 990 0 discriminator 3
 2343 010f 0FB61C1F 		movzbl	(%rdi,%rbx), %ebx
 2344 0113 418819   		movb	%bl, (%r9)
 993:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2345              		.loc 1 993 0 discriminator 3
 2346 0116 0FB61417 		movzbl	(%rdi,%rdx), %edx
 2347 011a 41885102 		movb	%dl, 2(%r9)
 996:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2348              		.loc 1 996 0 discriminator 3
 2349 011e 0FB60407 		movzbl	(%rdi,%rax), %eax
 2350 0122 41884101 		movb	%al, 1(%r9)
 970:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 2351              		.loc 1 970 0 discriminator 3
 2352 0126 7587     		jne	.L70
1001:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1002:fltk-1.3.4-1/jpeg/jidctint.c **** }
 2353              		.loc 1 1002 0
 2354 0128 488B4424 		movq	40(%rsp), %rax
 2354      28
 2355 012d 64483304 		xorq	%fs:40, %rax
 2355      25280000 
 2355      00
 2356 0136 7509     		jne	.L75
 2357 0138 4883C430 		addq	$48, %rsp
 2358              		.cfi_remember_state
 2359              		.cfi_def_cfa_offset 32
 2360 013c 5B       		popq	%rbx
 2361              		.cfi_def_cfa_offset 24
 2362 013d 5D       		popq	%rbp
 2363              		.cfi_def_cfa_offset 16
 2364              	.LVL334:
 2365 013e 415C     		popq	%r12
 2366              		.cfi_def_cfa_offset 8
 2367 0140 C3       		ret
 2368              	.LVL335:
 2369              	.L75:
 2370              		.cfi_restore_state
 2371 0141 E8000000 		call	__stack_chk_fail
 2371      00
 2372              	.LVL336:
 2373              		.cfi_endproc
 2374              	.LFE66:
 2376              		.section	.text.unlikely.jpeg_idct_3x3
 2377              	.LCOLDE5:
 2378              		.section	.text.jpeg_idct_3x3
 2379              	.LHOTE5:
 2380              		.section	.text.unlikely.jpeg_idct_2x2,"ax",@progbits
 2381              	.LCOLDB6:
 2382              		.section	.text.jpeg_idct_2x2,"ax",@progbits
 2383              	.LHOTB6:
 2384              		.p2align 4,,15
 2385              		.globl	jpeg_idct_2x2
 2387              	jpeg_idct_2x2:
 2388              	.LFB67:
1003:fltk-1.3.4-1/jpeg/jidctint.c **** 
1004:fltk-1.3.4-1/jpeg/jidctint.c **** 
1005:fltk-1.3.4-1/jpeg/jidctint.c **** /*
1006:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
1007:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 2x2 output block.
1008:fltk-1.3.4-1/jpeg/jidctint.c ****  *
1009:fltk-1.3.4-1/jpeg/jidctint.c ****  * Multiplication-less algorithm.
1010:fltk-1.3.4-1/jpeg/jidctint.c ****  */
1011:fltk-1.3.4-1/jpeg/jidctint.c **** 
1012:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
1013:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_2x2 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
1014:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
1015:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
1016:fltk-1.3.4-1/jpeg/jidctint.c **** {
 2389              		.loc 1 1016 0
 2390              		.cfi_startproc
 2391              	.LVL337:
1017:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp4, tmp5;
1018:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
1019:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
1020:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
1021:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
1022:fltk-1.3.4-1/jpeg/jidctint.c **** 
1023:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input. */
1024:fltk-1.3.4-1/jpeg/jidctint.c **** 
1025:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 2392              		.loc 1 1025 0
 2393 0000 4C8B5E58 		movq	88(%rsi), %r11
1026:fltk-1.3.4-1/jpeg/jidctint.c **** 
1027:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Column 0 */
1028:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp4 = DEQUANTIZE(coef_block[DCTSIZE*0], quantptr[DCTSIZE*0]);
 2394              		.loc 1 1028 0
 2395 0004 0FBF02   		movswl	(%rdx), %eax
1029:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1], quantptr[DCTSIZE*1]);
1030:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
1031:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp4 += ONE << 2;
1032:fltk-1.3.4-1/jpeg/jidctint.c **** 
1033:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp0 = tmp4 + tmp5;
1034:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp2 = tmp4 - tmp5;
1035:fltk-1.3.4-1/jpeg/jidctint.c **** 
1036:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Column 1 */
1037:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp4 = DEQUANTIZE(coef_block[DCTSIZE*0+1], quantptr[DCTSIZE*0+1]);
1038:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1+1], quantptr[DCTSIZE*1+1]);
1039:fltk-1.3.4-1/jpeg/jidctint.c **** 
1040:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp1 = tmp4 + tmp5;
1041:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp3 = tmp4 - tmp5;
1042:fltk-1.3.4-1/jpeg/jidctint.c **** 
1043:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 2 rows, store into output array. */
1044:fltk-1.3.4-1/jpeg/jidctint.c **** 
1045:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Row 0 */
1046:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr = output_buf[0] + output_col;
 2396              		.loc 1 1046 0
 2397 0007 4589C0   		movl	%r8d, %r8d
1020:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 2398              		.loc 1 1020 0
 2399 000a 4C8B8FB8 		movq	440(%rdi), %r9
 2399      010000
 2400              	.LVL338:
1029:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1], quantptr[DCTSIZE*1]);
 2401              		.loc 1 1029 0
 2402 0011 0FBF7A10 		movswl	16(%rdx), %edi
 2403              	.LVL339:
1037:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1+1], quantptr[DCTSIZE*1+1]);
 2404              		.loc 1 1037 0
 2405 0015 440FBF52 		movswl	2(%rdx), %r10d
 2405      02
1028:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1], quantptr[DCTSIZE*1]);
 2406              		.loc 1 1028 0
 2407 001a 410FAF03 		imull	(%r11), %eax
1029:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
 2408              		.loc 1 1029 0
 2409 001e 410FAF7B 		imull	32(%r11), %edi
 2409      20
1037:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1+1], quantptr[DCTSIZE*1+1]);
 2410              		.loc 1 1037 0
 2411 0023 450FAF53 		imull	4(%r11), %r10d
 2411      04
1028:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1], quantptr[DCTSIZE*1]);
 2412              		.loc 1 1028 0
 2413 0028 4898     		cltq
 2414              	.LVL340:
1029:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
 2415              		.loc 1 1029 0
 2416 002a 4863FF   		movslq	%edi, %rdi
 2417              	.LVL341:
1031:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2418              		.loc 1 1031 0
 2419 002d 4883C004 		addq	$4, %rax
 2420              	.LVL342:
1033:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp2 = tmp4 - tmp5;
 2421              		.loc 1 1033 0
 2422 0031 488D3407 		leaq	(%rdi,%rax), %rsi
 2423              	.LVL343:
1034:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2424              		.loc 1 1034 0
 2425 0035 4829F8   		subq	%rdi, %rax
 2426              	.LVL344:
1038:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2427              		.loc 1 1038 0
 2428 0038 0FBF7A12 		movswl	18(%rdx), %edi
 2429              	.LVL345:
 2430 003c 410FAF7B 		imull	36(%r11), %edi
 2430      24
1037:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp5 = DEQUANTIZE(coef_block[DCTSIZE*1+1], quantptr[DCTSIZE*1+1]);
 2431              		.loc 1 1037 0
 2432 0041 4D63D2   		movslq	%r10d, %r10
 2433              	.LVL346:
1041:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2434              		.loc 1 1041 0
 2435 0044 4C89D2   		movq	%r10, %rdx
 2436              	.LVL347:
1038:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2437              		.loc 1 1038 0
 2438 0047 4863FF   		movslq	%edi, %rdi
 2439              	.LVL348:
1040:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp3 = tmp4 - tmp5;
 2440              		.loc 1 1040 0
 2441 004a 4D8D1C3A 		leaq	(%r10,%rdi), %r11
 2442              	.LVL349:
1041:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2443              		.loc 1 1041 0
 2444 004e 4829FA   		subq	%rdi, %rdx
 2445              	.LVL350:
 2446              		.loc 1 1046 0
 2447 0051 4D89C2   		movq	%r8, %r10
 2448              	.LVL351:
 2449 0054 4C0311   		addq	(%rcx), %r10
 2450              	.LVL352:
1047:fltk-1.3.4-1/jpeg/jidctint.c **** 
1048:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp0 + tmp1, 3) & RANGE_MASK];
 2451              		.loc 1 1048 0
 2452 0057 4A8D3C1E 		leaq	(%rsi,%r11), %rdi
 2453              	.LVL353:
1049:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp0 - tmp1, 3) & RANGE_MASK];
 2454              		.loc 1 1049 0
 2455 005b 4C29DE   		subq	%r11, %rsi
 2456              	.LVL354:
 2457 005e 48C1FE03 		sarq	$3, %rsi
1048:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp0 - tmp1, 3) & RANGE_MASK];
 2458              		.loc 1 1048 0
 2459 0062 48C1FF03 		sarq	$3, %rdi
 2460              		.loc 1 1049 0
 2461 0066 81E6FF03 		andl	$1023, %esi
 2461      0000
1048:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp0 - tmp1, 3) & RANGE_MASK];
 2462              		.loc 1 1048 0
 2463 006c 81E7FF03 		andl	$1023, %edi
 2463      0000
 2464 0072 410FB6BC 		movzbl	128(%r9,%rdi), %edi
 2464      39800000 
 2464      00
 2465 007b 41883A   		movb	%dil, (%r10)
 2466              	.LVL355:
 2467              		.loc 1 1049 0
 2468 007e 410FB6B4 		movzbl	128(%r9,%rsi), %esi
 2468      31800000 
 2468      00
 2469 0087 41887201 		movb	%sil, 1(%r10)
1050:fltk-1.3.4-1/jpeg/jidctint.c **** 
1051:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Row 1 */
1052:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr = output_buf[1] + output_col;
 2470              		.loc 1 1052 0
 2471 008b 4C034108 		addq	8(%rcx), %r8
 2472              	.LVL356:
1053:fltk-1.3.4-1/jpeg/jidctint.c **** 
1054:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp2 + tmp3, 3) & RANGE_MASK];
 2473              		.loc 1 1054 0
 2474 008f 488D0C10 		leaq	(%rax,%rdx), %rcx
 2475              	.LVL357:
1055:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp2 - tmp3, 3) & RANGE_MASK];
 2476              		.loc 1 1055 0
 2477 0093 4829D0   		subq	%rdx, %rax
 2478              	.LVL358:
1054:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp2 - tmp3, 3) & RANGE_MASK];
 2479              		.loc 1 1054 0
 2480 0096 48C1F903 		sarq	$3, %rcx
 2481              		.loc 1 1055 0
 2482 009a 48C1F803 		sarq	$3, %rax
1054:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp2 - tmp3, 3) & RANGE_MASK];
 2483              		.loc 1 1054 0
 2484 009e 81E1FF03 		andl	$1023, %ecx
 2484      0000
 2485              		.loc 1 1055 0
 2486 00a4 25FF0300 		andl	$1023, %eax
 2486      00
1054:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp2 - tmp3, 3) & RANGE_MASK];
 2487              		.loc 1 1054 0
 2488 00a9 410FB68C 		movzbl	128(%r9,%rcx), %ecx
 2488      09800000 
 2488      00
 2489 00b2 418808   		movb	%cl, (%r8)
 2490              		.loc 1 1055 0
 2491 00b5 410FB684 		movzbl	128(%r9,%rax), %eax
 2491      01800000 
 2491      00
 2492 00be 41884001 		movb	%al, 1(%r8)
 2493 00c2 C3       		ret
 2494              		.cfi_endproc
 2495              	.LFE67:
 2497              		.section	.text.unlikely.jpeg_idct_2x2
 2498              	.LCOLDE6:
 2499              		.section	.text.jpeg_idct_2x2
 2500              	.LHOTE6:
 2501              		.section	.text.unlikely.jpeg_idct_1x1,"ax",@progbits
 2502              	.LCOLDB7:
 2503              		.section	.text.jpeg_idct_1x1,"ax",@progbits
 2504              	.LHOTB7:
 2505              		.p2align 4,,15
 2506              		.globl	jpeg_idct_1x1
 2508              	jpeg_idct_1x1:
 2509              	.LFB68:
1056:fltk-1.3.4-1/jpeg/jidctint.c **** }
1057:fltk-1.3.4-1/jpeg/jidctint.c **** 
1058:fltk-1.3.4-1/jpeg/jidctint.c **** 
1059:fltk-1.3.4-1/jpeg/jidctint.c **** /*
1060:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
1061:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 1x1 output block.
1062:fltk-1.3.4-1/jpeg/jidctint.c ****  *
1063:fltk-1.3.4-1/jpeg/jidctint.c ****  * We hardly need an inverse DCT routine for this: just take the
1064:fltk-1.3.4-1/jpeg/jidctint.c ****  * average pixel value, which is one-eighth of the DC coefficient.
1065:fltk-1.3.4-1/jpeg/jidctint.c ****  */
1066:fltk-1.3.4-1/jpeg/jidctint.c **** 
1067:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
1068:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_1x1 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
1069:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
1070:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
1071:fltk-1.3.4-1/jpeg/jidctint.c **** {
 2510              		.loc 1 1071 0
 2511              		.cfi_startproc
 2512              	.LVL359:
1072:fltk-1.3.4-1/jpeg/jidctint.c ****   int dcval;
1073:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
1074:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
1075:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
1076:fltk-1.3.4-1/jpeg/jidctint.c **** 
1077:fltk-1.3.4-1/jpeg/jidctint.c ****   /* 1x1 is trivial: just take the DC coefficient divided by 8. */
1078:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
1079:fltk-1.3.4-1/jpeg/jidctint.c ****   dcval = DEQUANTIZE(coef_block[0], quantptr[0]);
 2513              		.loc 1 1079 0
 2514 0000 488B7658 		movq	88(%rsi), %rsi
 2515              	.LVL360:
1080:fltk-1.3.4-1/jpeg/jidctint.c ****   dcval = (int) DESCALE((INT32) dcval, 3);
 2516              		.loc 1 1080 0
 2517 0004 0FBF02   		movswl	(%rdx), %eax
1081:fltk-1.3.4-1/jpeg/jidctint.c **** 
1082:fltk-1.3.4-1/jpeg/jidctint.c ****   output_buf[0][output_col] = range_limit[dcval & RANGE_MASK];
 2518              		.loc 1 1082 0
 2519 0007 4589C0   		movl	%r8d, %r8d
 2520 000a 488B97B8 		movq	440(%rdi), %rdx
 2520      010000
 2521              	.LVL361:
1080:fltk-1.3.4-1/jpeg/jidctint.c ****   dcval = (int) DESCALE((INT32) dcval, 3);
 2522              		.loc 1 1080 0
 2523 0011 0FAF06   		imull	(%rsi), %eax
 2524              	.LVL362:
 2525 0014 4898     		cltq
 2526 0016 4883C004 		addq	$4, %rax
 2527              	.LVL363:
 2528 001a 48C1F803 		sarq	$3, %rax
 2529              	.LVL364:
 2530              		.loc 1 1082 0
 2531 001e 25FF0300 		andl	$1023, %eax
 2531      00
 2532              	.LVL365:
 2533 0023 0FB69402 		movzbl	128(%rdx,%rax), %edx
 2533      80000000 
 2534 002b 488B01   		movq	(%rcx), %rax
 2535 002e 42881400 		movb	%dl, (%rax,%r8)
 2536              	.LVL366:
 2537 0032 C3       		ret
 2538              		.cfi_endproc
 2539              	.LFE68:
 2541              		.section	.text.unlikely.jpeg_idct_1x1
 2542              	.LCOLDE7:
 2543              		.section	.text.jpeg_idct_1x1
 2544              	.LHOTE7:
 2545              		.section	.text.unlikely.jpeg_idct_9x9,"ax",@progbits
 2546              	.LCOLDB8:
 2547              		.section	.text.jpeg_idct_9x9,"ax",@progbits
 2548              	.LHOTB8:
 2549              		.p2align 4,,15
 2550              		.globl	jpeg_idct_9x9
 2552              	jpeg_idct_9x9:
 2553              	.LFB69:
1083:fltk-1.3.4-1/jpeg/jidctint.c **** }
1084:fltk-1.3.4-1/jpeg/jidctint.c **** 
1085:fltk-1.3.4-1/jpeg/jidctint.c **** 
1086:fltk-1.3.4-1/jpeg/jidctint.c **** /*
1087:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
1088:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 9x9 output block.
1089:fltk-1.3.4-1/jpeg/jidctint.c ****  *
1090:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 10 multiplications in the 1-D kernel.
1091:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/18).
1092:fltk-1.3.4-1/jpeg/jidctint.c ****  */
1093:fltk-1.3.4-1/jpeg/jidctint.c **** 
1094:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
1095:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_9x9 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
1096:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
1097:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
1098:fltk-1.3.4-1/jpeg/jidctint.c **** {
 2554              		.loc 1 1098 0
 2555              		.cfi_startproc
 2556              	.LVL367:
 2557 0000 4157     		pushq	%r15
 2558              		.cfi_def_cfa_offset 16
 2559              		.cfi_offset 15, -16
 2560 0002 4156     		pushq	%r14
 2561              		.cfi_def_cfa_offset 24
 2562              		.cfi_offset 14, -24
 2563 0004 4155     		pushq	%r13
 2564              		.cfi_def_cfa_offset 32
 2565              		.cfi_offset 13, -32
 2566 0006 4154     		pushq	%r12
 2567              		.cfi_def_cfa_offset 40
 2568              		.cfi_offset 12, -40
 2569 0008 4989D5   		movq	%rdx, %r13
 2570 000b 55       		pushq	%rbp
 2571              		.cfi_def_cfa_offset 48
 2572              		.cfi_offset 6, -48
 2573 000c 53       		pushq	%rbx
 2574              		.cfi_def_cfa_offset 56
 2575              		.cfi_offset 3, -56
 2576 000d 4881EC78 		subq	$376, %rsp
 2576      010000
 2577              		.cfi_def_cfa_offset 432
1099:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13, tmp14;
1100:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
1101:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
1102:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
1103:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
1104:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
1105:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
1106:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
1107:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*9];	/* buffers data between passes */
1108:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
1109:fltk-1.3.4-1/jpeg/jidctint.c **** 
1110:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
1111:fltk-1.3.4-1/jpeg/jidctint.c **** 
1112:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
1113:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 2578              		.loc 1 1113 0
 2579 0014 4C8B7658 		movq	88(%rsi), %r14
1098:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13, tmp14;
 2580              		.loc 1 1098 0
 2581 0018 64488B04 		movq	%fs:40, %rax
 2581      25280000 
 2581      00
 2582 0021 48898424 		movq	%rax, 360(%rsp)
 2582      68010000 
 2583 0029 31C0     		xorl	%eax, %eax
1105:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 2584              		.loc 1 1105 0
 2585 002b 488B87B8 		movq	440(%rdi), %rax
 2585      010000
1114:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 2586              		.loc 1 1114 0
 2587 0032 4C8D5424 		leaq	64(%rsp), %r10
 2587      40
1098:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13, tmp14;
 2588              		.loc 1 1098 0
 2589 0037 48894C24 		movq	%rcx, 48(%rsp)
 2589      30
 2590 003c 44894424 		movl	%r8d, 40(%rsp)
 2590      28
1105:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 2591              		.loc 1 1105 0
 2592 0041 4C8DB880 		leaq	128(%rax), %r15
 2592      000000
 2593              	.LVL368:
1115:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 2594              		.loc 1 1115 0
 2595 0048 488D4424 		leaq	96(%rsp), %rax
 2595      60
 2596 004d 4C897C24 		movq	%r15, 56(%rsp)
 2596      38
 2597 0052 48894424 		movq	%rax, 32(%rsp)
 2597      20
 2598              	.LVL369:
 2599 0057 660F1F84 		.p2align 4,,10
 2599      00000000 
 2599      00
 2600              		.p2align 3
 2601              	.L79:
1116:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1117:fltk-1.3.4-1/jpeg/jidctint.c **** 
1118:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
1119:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
1120:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1121:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-1);
1122:fltk-1.3.4-1/jpeg/jidctint.c **** 
1123:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 2602              		.loc 1 1123 0 discriminator 3
 2603 0060 410FBF75 		movswl	32(%r13), %esi
 2603      20
1124:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
1125:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
1126:fltk-1.3.4-1/jpeg/jidctint.c **** 
1127:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z3, FIX(0.707106781));      /* c6 */
 2604              		.loc 1 1127 0 discriminator 3
 2605 0065 410FBF55 		movswl	96(%r13), %edx
 2605      60
1123:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 2606              		.loc 1 1123 0 discriminator 3
 2607 006a 410FAF76 		imull	64(%r14), %esi
 2607      40
 2608              		.loc 1 1127 0 discriminator 3
 2609 006f 410FAF96 		imull	192(%r14), %edx
 2609      C0000000 
1124:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 2610              		.loc 1 1124 0 discriminator 3
 2611 0077 410FBF4D 		movswl	64(%r13), %ecx
 2611      40
1118:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2612              		.loc 1 1118 0 discriminator 3
 2613 007c 410FBF45 		movswl	0(%r13), %eax
 2613      00
1124:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 2614              		.loc 1 1124 0 discriminator 3
 2615 0081 410FAF8E 		imull	128(%r14), %ecx
 2615      80000000 
1118:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2616              		.loc 1 1118 0 discriminator 3
 2617 0089 410FAF06 		imull	(%r14), %eax
1128:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp3;
1129:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp3 - tmp3;
1130:fltk-1.3.4-1/jpeg/jidctint.c **** 
1131:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(z1 - z2, FIX(0.707106781)); /* c6 */
1132:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
1133:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp2 - tmp0 - tmp0;
1134:fltk-1.3.4-1/jpeg/jidctint.c **** 
1135:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(z1 + z2, FIX(1.328926049)); /* c2 */
1136:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX(1.083350441));      /* c4 */
1137:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z2, FIX(0.245575608));      /* c8 */
1138:fltk-1.3.4-1/jpeg/jidctint.c **** 
1139:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0 - tmp3;
1140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
1141:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
1142:fltk-1.3.4-1/jpeg/jidctint.c **** 
1143:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1144:fltk-1.3.4-1/jpeg/jidctint.c **** 
1145:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
1146:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
1147:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 2618              		.loc 1 1147 0 discriminator 3
 2619 008d 450FBF4D 		movswl	80(%r13), %r9d
 2619      50
1148:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 2620              		.loc 1 1148 0 discriminator 3
 2621 0092 450FBF45 		movswl	112(%r13), %r8d
 2621      70
1123:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 2622              		.loc 1 1123 0 discriminator 3
 2623 0097 4863F6   		movslq	%esi, %rsi
1127:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp3;
 2624              		.loc 1 1127 0 discriminator 3
 2625 009a 4863D2   		movslq	%edx, %rdx
1131:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
 2626              		.loc 1 1131 0 discriminator 3
 2627 009d 4889F5   		movq	%rsi, %rbp
1127:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp3;
 2628              		.loc 1 1127 0 discriminator 3
 2629 00a0 4869D2A1 		imulq	$5793, %rdx, %rdx
 2629      160000
1124:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 2630              		.loc 1 1124 0 discriminator 3
 2631 00a7 4863C9   		movslq	%ecx, %rcx
1131:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
 2632              		.loc 1 1131 0 discriminator 3
 2633 00aa 4829CD   		subq	%rcx, %rbp
1118:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2634              		.loc 1 1118 0 discriminator 3
 2635 00ad 4898     		cltq
 2636              	.LVL370:
1119:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 2637              		.loc 1 1119 0 discriminator 3
 2638 00af 48C1E00D 		salq	$13, %rax
 2639              	.LVL371:
1131:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
 2640              		.loc 1 1131 0 discriminator 3
 2641 00b3 4869EDA1 		imulq	$5793, %rbp, %rbp
 2641      160000
1121:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2642              		.loc 1 1121 0 discriminator 3
 2643 00ba 48050004 		addq	$1024, %rax
 2643      0000
 2644              	.LVL372:
1128:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp3 - tmp3;
 2645              		.loc 1 1128 0 discriminator 3
 2646 00c0 488D3C10 		leaq	(%rax,%rdx), %rdi
 2647              	.LVL373:
1129:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2648              		.loc 1 1129 0 discriminator 3
 2649 00c4 4829D0   		subq	%rdx, %rax
 2650              	.LVL374:
 2651 00c7 4829D0   		subq	%rdx, %rax
 2652 00ca 4989C7   		movq	%rax, %r15
 2653              	.LVL375:
1140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2654              		.loc 1 1140 0 discriminator 3
 2655 00cd 4889FB   		movq	%rdi, %rbx
1132:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp2 - tmp0 - tmp0;
 2656              		.loc 1 1132 0 discriminator 3
 2657 00d0 4C8D1C28 		leaq	(%rax,%rbp), %r11
 2658              	.LVL376:
1135:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX(1.083350441));      /* c4 */
 2659              		.loc 1 1135 0 discriminator 3
 2660 00d4 488D040E 		leaq	(%rsi,%rcx), %rax
 2661              	.LVL377:
1136:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z2, FIX(0.245575608));      /* c8 */
 2662              		.loc 1 1136 0 discriminator 3
 2663 00d8 4869F6AB 		imulq	$8875, %rsi, %rsi
 2663      220000
 2664              	.LVL378:
1135:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX(1.083350441));      /* c4 */
 2665              		.loc 1 1135 0 discriminator 3
 2666 00df 4869C087 		imulq	$10887, %rax, %rax
 2666      2A0000
 2667              	.LVL379:
1137:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2668              		.loc 1 1137 0 discriminator 3
 2669 00e6 4869D1DC 		imulq	$2012, %rcx, %rdx
 2669      070000
 2670              	.LVL380:
1147:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 2671              		.loc 1 1147 0 discriminator 3
 2672 00ed 450FAF8E 		imull	160(%r14), %r9d
 2672      A0000000 
 2673              		.loc 1 1148 0 discriminator 3
 2674 00f5 450FAF86 		imull	224(%r14), %r8d
 2674      E0000000 
1140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2675              		.loc 1 1140 0 discriminator 3
 2676 00fd 4829C3   		subq	%rax, %rbx
1139:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
 2677              		.loc 1 1139 0 discriminator 3
 2678 0100 488D0C07 		leaq	(%rdi,%rax), %rcx
 2679              	.LVL381:
1141:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2680              		.loc 1 1141 0 discriminator 3
 2681 0104 4829F7   		subq	%rsi, %rdi
 2682              	.LVL382:
1140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2683              		.loc 1 1140 0 discriminator 3
 2684 0107 4889D8   		movq	%rbx, %rax
 2685              	.LVL383:
 2686 010a 4801F0   		addq	%rsi, %rax
1139:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
 2687              		.loc 1 1139 0 discriminator 3
 2688 010d 4829D1   		subq	%rdx, %rcx
1141:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2689              		.loc 1 1141 0 discriminator 3
 2690 0110 488D3417 		leaq	(%rdi,%rdx), %rsi
 2691              	.LVL384:
1140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2692              		.loc 1 1140 0 discriminator 3
 2693 0114 48894424 		movq	%rax, 16(%rsp)
 2693      10
 2694              	.LVL385:
1145:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 2695              		.loc 1 1145 0 discriminator 3
 2696 0119 410FBF45 		movswl	16(%r13), %eax
 2696      10
 2697 011e 410FAF46 		imull	32(%r14), %eax
 2697      20
1146:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 2698              		.loc 1 1146 0 discriminator 3
 2699 0123 410FBF55 		movswl	48(%r13), %edx
 2699      30
 2700              	.LVL386:
1147:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 2701              		.loc 1 1147 0 discriminator 3
 2702 0128 4D63C9   		movslq	%r9d, %r9
 2703              		.loc 1 1148 0 discriminator 3
 2704 012b 4D63C0   		movslq	%r8d, %r8
1146:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 2705              		.loc 1 1146 0 discriminator 3
 2706 012e 410FAF56 		imull	96(%r14), %edx
 2706      60
1141:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2707              		.loc 1 1141 0 discriminator 3
 2708 0133 48897424 		movq	%rsi, 24(%rsp)
 2708      18
 2709              	.LVL387:
1149:fltk-1.3.4-1/jpeg/jidctint.c **** 
1150:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX(1.224744871));           /* -c3 */
1151:fltk-1.3.4-1/jpeg/jidctint.c **** 
1152:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1 + z3, FIX(0.909038955));      /* c5 */
1153:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z1 + z4, FIX(0.483689525));      /* c7 */
1154:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp2 + tmp3 - z2;
1155:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z3 - z4, FIX(1.392728481));      /* c1 */
 2710              		.loc 1 1155 0 discriminator 3
 2711 0138 4C89CB   		movq	%r9, %rbx
1139:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
 2712              		.loc 1 1139 0 discriminator 3
 2713 013b 48894C24 		movq	%rcx, 8(%rsp)
 2713      08
 2714              	.LVL388:
 2715              		.loc 1 1155 0 discriminator 3
 2716 0140 4C29C3   		subq	%r8, %rbx
1145:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 2717              		.loc 1 1145 0 discriminator 3
 2718 0143 4898     		cltq
 2719              	.LVL389:
1152:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z1 + z4, FIX(0.483689525));      /* c7 */
 2720              		.loc 1 1152 0 discriminator 3
 2721 0145 4A8D3C08 		leaq	(%rax,%r9), %rdi
1153:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp2 + tmp3 - z2;
 2722              		.loc 1 1153 0 discriminator 3
 2723 0149 4A8D3400 		leaq	(%rax,%r8), %rsi
1146:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 2724              		.loc 1 1146 0 discriminator 3
 2725 014d 4863D2   		movslq	%edx, %rdx
 2726              	.LVL390:
1153:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp2 + tmp3 - z2;
 2727              		.loc 1 1153 0 discriminator 3
 2728 0150 4869F67A 		imulq	$3962, %rsi, %rsi
 2728      0F0000
1152:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z1 + z4, FIX(0.483689525));      /* c7 */
 2729              		.loc 1 1152 0 discriminator 3
 2730 0157 4869FF17 		imulq	$7447, %rdi, %rdi
 2730      1D0000
1150:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2731              		.loc 1 1150 0 discriminator 3
 2732 015e 4869D2CF 		imulq	$-10033, %rdx, %rdx
 2732      D8FFFF
 2733              	.LVL391:
1154:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z3 - z4, FIX(1.392728481));      /* c1 */
 2734              		.loc 1 1154 0 discriminator 3
 2735 0165 4C8D2437 		leaq	(%rdi,%rsi), %r12
 2736              		.loc 1 1155 0 discriminator 3
 2737 0169 4869DB91 		imulq	$11409, %rbx, %rbx
 2737      2C0000
1156:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z2 - tmp1;
 2738              		.loc 1 1156 0 discriminator 3
 2739 0170 4889D1   		movq	%rdx, %rcx
1154:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z3 - z4, FIX(1.392728481));      /* c1 */
 2740              		.loc 1 1154 0 discriminator 3
 2741 0173 4929D4   		subq	%rdx, %r12
 2742              	.LVL392:
 2743              		.loc 1 1156 0 discriminator 3
 2744 0176 4829D9   		subq	%rbx, %rcx
1157:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z2 + tmp1;
 2745              		.loc 1 1157 0 discriminator 3
 2746 0179 4801DA   		addq	%rbx, %rdx
 2747              	.LVL393:
1158:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 - z3 - z4, FIX(1.224744871)); /* c3 */
1159:fltk-1.3.4-1/jpeg/jidctint.c **** 
1160:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1161:fltk-1.3.4-1/jpeg/jidctint.c **** 
1162:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0] = (int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS-PASS1_BITS);
1163:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
1164:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
1165:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
1166:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 2748              		.loc 1 1166 0 discriminator 3
 2749 017c 488B5C24 		movq	16(%rsp), %rbx
 2749      10
 2750              	.LVL394:
1156:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z2 + tmp1;
 2751              		.loc 1 1156 0 discriminator 3
 2752 0181 4801CF   		addq	%rcx, %rdi
 2753              	.LVL395:
1157:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z2 + tmp1;
 2754              		.loc 1 1157 0 discriminator 3
 2755 0184 4801F2   		addq	%rsi, %rdx
 2756              	.LVL396:
1158:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 - z3 - z4, FIX(1.224744871)); /* c3 */
 2757              		.loc 1 1158 0 discriminator 3
 2758 0187 4C29C8   		subq	%r9, %rax
 2759              	.LVL397:
 2760 018a 4C29C0   		subq	%r8, %rax
1162:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 2761              		.loc 1 1162 0 discriminator 3
 2762 018d 488B4C24 		movq	8(%rsp), %rcx
 2762      08
1115:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2763              		.loc 1 1115 0 discriminator 3
 2764 0192 4983C502 		addq	$2, %r13
 2765              	.LVL398:
1158:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2766              		.loc 1 1158 0 discriminator 3
 2767 0196 4869C031 		imulq	$10033, %rax, %rax
 2767      270000
 2768              	.LVL399:
1115:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2769              		.loc 1 1115 0 discriminator 3
 2770 019d 4983C604 		addq	$4, %r14
 2771              	.LVL400:
 2772 01a1 4983C204 		addq	$4, %r10
 2773              	.LVL401:
1162:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 2774              		.loc 1 1162 0 discriminator 3
 2775 01a5 4A8D3421 		leaq	(%rcx,%r12), %rsi
1163:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp11 + tmp1, CONST_BITS-PASS1_BITS);
 2776              		.loc 1 1163 0 discriminator 3
 2777 01a9 4C29E1   		subq	%r12, %rcx
 2778 01ac 48C1F90B 		sarq	$11, %rcx
 2779 01b0 41898AFC 		movl	%ecx, 252(%r10)
 2779      000000
1164:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 2780              		.loc 1 1164 0 discriminator 3
 2781 01b7 498D0C03 		leaq	(%r11,%rax), %rcx
1165:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 2782              		.loc 1 1165 0 discriminator 3
 2783 01bb 4929C3   		subq	%rax, %r11
 2784              	.LVL402:
 2785              		.loc 1 1166 0 discriminator 3
 2786 01be 4889D8   		movq	%rbx, %rax
 2787              	.LVL403:
1162:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 2788              		.loc 1 1162 0 discriminator 3
 2789 01c1 48C1FE0B 		sarq	$11, %rsi
1165:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 2790              		.loc 1 1165 0 discriminator 3
 2791 01c5 49C1FB0B 		sarq	$11, %r11
 2792              		.loc 1 1166 0 discriminator 3
 2793 01c9 4801F8   		addq	%rdi, %rax
1162:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 2794              		.loc 1 1162 0 discriminator 3
 2795 01cc 418972FC 		movl	%esi, -4(%r10)
1167:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
1168:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp13 + tmp3, CONST_BITS-PASS1_BITS);
 2796              		.loc 1 1168 0 discriminator 3
 2797 01d0 488B7424 		movq	24(%rsp), %rsi
 2797      18
1166:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 2798              		.loc 1 1166 0 discriminator 3
 2799 01d5 48C1F80B 		sarq	$11, %rax
1164:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 2800              		.loc 1 1164 0 discriminator 3
 2801 01d9 48C1F90B 		sarq	$11, %rcx
1165:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 2802              		.loc 1 1165 0 discriminator 3
 2803 01dd 45899ADC 		movl	%r11d, 220(%r10)
 2803      000000
1166:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 2804              		.loc 1 1166 0 discriminator 3
 2805 01e4 4189423C 		movl	%eax, 60(%r10)
1167:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp13 + tmp3, CONST_BITS-PASS1_BITS);
 2806              		.loc 1 1167 0 discriminator 3
 2807 01e8 4889D8   		movq	%rbx, %rax
1164:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) RIGHT_SHIFT(tmp11 - tmp1, CONST_BITS-PASS1_BITS);
 2808              		.loc 1 1164 0 discriminator 3
 2809 01eb 41894A1C 		movl	%ecx, 28(%r10)
1167:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp13 + tmp3, CONST_BITS-PASS1_BITS);
 2810              		.loc 1 1167 0 discriminator 3
 2811 01ef 4829F8   		subq	%rdi, %rax
 2812 01f2 48C1F80B 		sarq	$11, %rax
 2813 01f6 418982BC 		movl	%eax, 188(%r10)
 2813      000000
 2814              		.loc 1 1168 0 discriminator 3
 2815 01fd 488D0416 		leaq	(%rsi,%rdx), %rax
 2816 0201 48C1F80B 		sarq	$11, %rax
 2817 0205 4189425C 		movl	%eax, 92(%r10)
1169:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp13 - tmp3, CONST_BITS-PASS1_BITS);
 2818              		.loc 1 1169 0 discriminator 3
 2819 0209 4889F0   		movq	%rsi, %rax
 2820 020c 4829D0   		subq	%rdx, %rax
 2821 020f 48C1F80B 		sarq	$11, %rax
 2822 0213 4189829C 		movl	%eax, 156(%r10)
 2822      000000
1170:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp14, CONST_BITS-PASS1_BITS);
 2823              		.loc 1 1170 0 discriminator 3
 2824 021a 4C89F8   		movq	%r15, %rax
 2825 021d 4829E8   		subq	%rbp, %rax
 2826 0220 4829E8   		subq	%rbp, %rax
 2827 0223 48C1F80B 		sarq	$11, %rax
 2828 0227 4189427C 		movl	%eax, 124(%r10)
 2829              	.LVL404:
1115:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2830              		.loc 1 1115 0 discriminator 3
 2831 022b 4C3B5424 		cmpq	32(%rsp), %r10
 2831      20
 2832 0230 0F852AFE 		jne	.L79
 2832      FFFF
 2833 0236 8B442428 		movl	40(%rsp), %eax
 2834 023a 4C8B7C24 		movq	56(%rsp), %r15
 2834      38
 2835              	.LVL405:
1115:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 2836              		.loc 1 1115 0 is_stmt 0
 2837 023f 4C8D7424 		leaq	64(%rsp), %r14
 2837      40
 2838              	.LVL406:
 2839 0244 48894424 		movq	%rax, 40(%rsp)
 2839      28
 2840              	.LVL407:
 2841 0249 488B4424 		movq	48(%rsp), %rax
 2841      30
 2842 024e 48894424 		movq	%rax, 8(%rsp)
 2842      08
1171:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1172:fltk-1.3.4-1/jpeg/jidctint.c **** 
1173:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 9 rows from work array, store into output array. */
1174:fltk-1.3.4-1/jpeg/jidctint.c **** 
1175:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
1176:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 9; ctr++) {
 2843              		.loc 1 1176 0 is_stmt 1
 2844 0253 488D8424 		leaq	352(%rsp), %rax
 2844      60010000 
 2845 025b 48894424 		movq	%rax, 48(%rsp)
 2845      30
 2846              	.LVL408:
 2847              		.p2align 4,,10
 2848              		.p2align 3
 2849              	.L80:
1177:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 2850              		.loc 1 1177 0 discriminator 3
 2851 0260 488B4424 		movq	8(%rsp), %rax
 2851      08
1178:fltk-1.3.4-1/jpeg/jidctint.c **** 
1179:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1180:fltk-1.3.4-1/jpeg/jidctint.c **** 
1181:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1182:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
1183:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
1184:fltk-1.3.4-1/jpeg/jidctint.c **** 
1185:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
1186:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
1187:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
1188:fltk-1.3.4-1/jpeg/jidctint.c **** 
1189:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z3, FIX(0.707106781));      /* c6 */
 2852              		.loc 1 1189 0 discriminator 3
 2853 0265 49637618 		movslq	24(%r14), %rsi
1186:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
 2854              		.loc 1 1186 0 discriminator 3
 2855 0269 49635610 		movslq	16(%r14), %rdx
1185:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
 2856              		.loc 1 1185 0 discriminator 3
 2857 026d 4D634608 		movslq	8(%r14), %r8
1177:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2858              		.loc 1 1177 0 discriminator 3
 2859 0271 488B4C24 		movq	40(%rsp), %rcx
 2859      28
1190:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp3;
1191:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp3 - tmp3;
1192:fltk-1.3.4-1/jpeg/jidctint.c **** 
1193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(z1 - z2, FIX(0.707106781)); /* c6 */
1194:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
1195:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp2 - tmp0 - tmp0;
1196:fltk-1.3.4-1/jpeg/jidctint.c **** 
1197:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(z1 + z2, FIX(1.328926049)); /* c2 */
1198:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX(1.083350441));      /* c4 */
1199:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z2, FIX(0.245575608));      /* c8 */
1200:fltk-1.3.4-1/jpeg/jidctint.c **** 
1201:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0 - tmp3;
1202:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
1203:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
1204:fltk-1.3.4-1/jpeg/jidctint.c **** 
1205:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1206:fltk-1.3.4-1/jpeg/jidctint.c **** 
1207:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
1208:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
1209:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 2860              		.loc 1 1209 0 discriminator 3
 2861 0276 4D636614 		movslq	20(%r14), %r12
1177:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2862              		.loc 1 1177 0 discriminator 3
 2863 027a 480308   		addq	(%rax), %rcx
 2864              	.LVL409:
1182:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2865              		.loc 1 1182 0 discriminator 3
 2866 027d 496306   		movslq	(%r14), %rax
1189:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp3;
 2867              		.loc 1 1189 0 discriminator 3
 2868 0280 4869F6A1 		imulq	$5793, %rsi, %rsi
 2868      160000
1210:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 2869              		.loc 1 1210 0 discriminator 3
 2870 0287 49636E1C 		movslq	28(%r14), %rbp
1208:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 2871              		.loc 1 1208 0 discriminator 3
 2872 028b 4D635E0C 		movslq	12(%r14), %r11
1197:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX(1.083350441));      /* c4 */
 2873              		.loc 1 1197 0 discriminator 3
 2874 028f 4D8D0C10 		leaq	(%r8,%rdx), %r9
1193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
 2875              		.loc 1 1193 0 discriminator 3
 2876 0293 4D89C2   		movq	%r8, %r10
1198:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z2, FIX(0.245575608));      /* c8 */
 2877              		.loc 1 1198 0 discriminator 3
 2878 0296 4D69C0AB 		imulq	$8875, %r8, %r8
 2878      220000
1193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
 2879              		.loc 1 1193 0 discriminator 3
 2880 029d 4929D2   		subq	%rdx, %r10
1182:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 2881              		.loc 1 1182 0 discriminator 3
 2882 02a0 4883C010 		addq	$16, %rax
 2883              	.LVL410:
1197:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX(1.083350441));      /* c4 */
 2884              		.loc 1 1197 0 discriminator 3
 2885 02a4 4D69C987 		imulq	$10887, %r9, %r9
 2885      2A0000
1183:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2886              		.loc 1 1183 0 discriminator 3
 2887 02ab 48C1E00D 		salq	$13, %rax
 2888              	.LVL411:
1190:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp3 - tmp3;
 2889              		.loc 1 1190 0 discriminator 3
 2890 02af 488D3C30 		leaq	(%rax,%rsi), %rdi
 2891              	.LVL412:
1191:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2892              		.loc 1 1191 0 discriminator 3
 2893 02b3 4829F0   		subq	%rsi, %rax
 2894              	.LVL413:
 2895 02b6 4989C5   		movq	%rax, %r13
1202:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2896              		.loc 1 1202 0 discriminator 3
 2897 02b9 4889FB   		movq	%rdi, %rbx
1191:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2898              		.loc 1 1191 0 discriminator 3
 2899 02bc 4929F5   		subq	%rsi, %r13
 2900              	.LVL414:
1199:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2901              		.loc 1 1199 0 discriminator 3
 2902 02bf 4869C2DC 		imulq	$2012, %rdx, %rax
 2902      070000
1201:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
 2903              		.loc 1 1201 0 discriminator 3
 2904 02c6 4A8D140F 		leaq	(%rdi,%r9), %rdx
 2905              	.LVL415:
1203:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2906              		.loc 1 1203 0 discriminator 3
 2907 02ca 4C29C7   		subq	%r8, %rdi
 2908              	.LVL416:
1202:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2909              		.loc 1 1202 0 discriminator 3
 2910 02cd 4C29CB   		subq	%r9, %rbx
 2911              	.LVL417:
1211:fltk-1.3.4-1/jpeg/jidctint.c **** 
1212:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX(1.224744871));           /* -c3 */
1213:fltk-1.3.4-1/jpeg/jidctint.c **** 
1214:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1 + z3, FIX(0.909038955));      /* c5 */
1215:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z1 + z4, FIX(0.483689525));      /* c7 */
1216:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp2 + tmp3 - z2;
1217:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z3 - z4, FIX(1.392728481));      /* c1 */
 2912              		.loc 1 1217 0 discriminator 3
 2913 02d0 4D89E1   		movq	%r12, %r9
1212:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2914              		.loc 1 1212 0 discriminator 3
 2915 02d3 4D69DBCF 		imulq	$-10033, %r11, %r11
 2915      D8FFFF
1202:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2916              		.loc 1 1202 0 discriminator 3
 2917 02da 4A8D1C03 		leaq	(%rbx,%r8), %rbx
 2918              		.loc 1 1217 0 discriminator 3
 2919 02de 4929E9   		subq	%rbp, %r9
1201:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
 2920              		.loc 1 1201 0 discriminator 3
 2921 02e1 4829C2   		subq	%rax, %rdx
1203:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2922              		.loc 1 1203 0 discriminator 3
 2923 02e4 4801C7   		addq	%rax, %rdi
1207:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 2924              		.loc 1 1207 0 discriminator 3
 2925 02e7 49634604 		movslq	4(%r14), %rax
1203:fltk-1.3.4-1/jpeg/jidctint.c **** 
 2926              		.loc 1 1203 0 discriminator 3
 2927 02eb 48897C24 		movq	%rdi, 32(%rsp)
 2927      20
1201:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0 + tmp2;
 2928              		.loc 1 1201 0 discriminator 3
 2929 02f0 48895424 		movq	%rdx, 16(%rsp)
 2929      10
 2930              		.loc 1 1217 0 discriminator 3
 2931 02f5 4D69C991 		imulq	$11409, %r9, %r9
 2931      2C0000
1218:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z2 - tmp1;
 2932              		.loc 1 1218 0 discriminator 3
 2933 02fc 4C89DA   		movq	%r11, %rdx
1202:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp1 - tmp2 + tmp3;
 2934              		.loc 1 1202 0 discriminator 3
 2935 02ff 48895C24 		movq	%rbx, 24(%rsp)
 2935      18
1193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp2 + tmp0;
 2936              		.loc 1 1193 0 discriminator 3
 2937 0304 4D69D2A1 		imulq	$5793, %r10, %r10
 2937      160000
 2938              	.LVL418:
1214:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z1 + z4, FIX(0.483689525));      /* c7 */
 2939              		.loc 1 1214 0 discriminator 3
 2940 030b 4E8D0420 		leaq	(%rax,%r12), %r8
1215:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp2 + tmp3 - z2;
 2941              		.loc 1 1215 0 discriminator 3
 2942 030f 488D3C28 		leaq	(%rax,%rbp), %rdi
1219:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z2 + tmp1;
1220:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 - z3 - z4, FIX(1.224744871)); /* c3 */
 2943              		.loc 1 1220 0 discriminator 3
 2944 0313 4C29E0   		subq	%r12, %rax
 2945 0316 4829E8   		subq	%rbp, %rax
1218:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z2 + tmp1;
 2946              		.loc 1 1218 0 discriminator 3
 2947 0319 4C29CA   		subq	%r9, %rdx
1219:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z2 + tmp1;
 2948              		.loc 1 1219 0 discriminator 3
 2949 031c 4D01D9   		addq	%r11, %r9
1215:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp2 + tmp3 - z2;
 2950              		.loc 1 1215 0 discriminator 3
 2951 031f 4869FF7A 		imulq	$3962, %rdi, %rdi
 2951      0F0000
1194:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp2 - tmp0 - tmp0;
 2952              		.loc 1 1194 0 discriminator 3
 2953 0326 4B8D7415 		leaq	0(%r13,%r10), %rsi
 2953      00
 2954              	.LVL419:
1214:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(z1 + z4, FIX(0.483689525));      /* c7 */
 2955              		.loc 1 1214 0 discriminator 3
 2956 032b 4D69C017 		imulq	$7447, %r8, %r8
 2956      1D0000
 2957              	.LVL420:
 2958              		.loc 1 1220 0 discriminator 3
 2959 0332 4869C031 		imulq	$10033, %rax, %rax
 2959      270000
1219:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 - z3 - z4, FIX(1.224744871)); /* c3 */
 2960              		.loc 1 1219 0 discriminator 3
 2961 0339 4901F9   		addq	%rdi, %r9
1216:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z3 - z4, FIX(1.392728481));      /* c1 */
 2962              		.loc 1 1216 0 discriminator 3
 2963 033c 498D1C38 		leaq	(%r8,%rdi), %rbx
 2964              	.LVL421:
1218:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z2 + tmp1;
 2965              		.loc 1 1218 0 discriminator 3
 2966 0340 4901D0   		addq	%rdx, %r8
 2967              	.LVL422:
1221:fltk-1.3.4-1/jpeg/jidctint.c **** 
1222:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1223:fltk-1.3.4-1/jpeg/jidctint.c **** 
1224:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
 2968              		.loc 1 1224 0 discriminator 3
 2969 0343 488B5424 		movq	16(%rsp), %rdx
 2969      10
1216:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z3 - z4, FIX(1.392728481));      /* c1 */
 2970              		.loc 1 1216 0 discriminator 3
 2971 0348 4C29DB   		subq	%r11, %rbx
 2972              	.LVL423:
 2973              		.loc 1 1224 0 discriminator 3
 2974 034b 488D3C1A 		leaq	(%rdx,%rbx), %rdi
1225:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1226:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1227:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
 2975              		.loc 1 1227 0 discriminator 3
 2976 034f 4829DA   		subq	%rbx, %rdx
1228:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1229:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1230:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp1,
1231:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1232:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1233:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp1,
1234:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1235:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1236:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp2,
 2977              		.loc 1 1236 0 discriminator 3
 2978 0352 488B5C24 		movq	24(%rsp), %rbx
 2978      18
 2979              	.LVL424:
1227:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2980              		.loc 1 1227 0 discriminator 3
 2981 0357 48C1FA12 		sarq	$18, %rdx
1224:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2982              		.loc 1 1224 0 discriminator 3
 2983 035b 48C1FF12 		sarq	$18, %rdi
 2984 035f 81E7FF03 		andl	$1023, %edi
 2984      0000
1227:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2985              		.loc 1 1227 0 discriminator 3
 2986 0365 81E2FF03 		andl	$1023, %edx
 2986      0000
1237:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1238:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1239:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp2,
1240:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1241:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1242:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp13 + tmp3,
1243:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1244:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1245:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp13 - tmp3,
1246:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1247:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1248:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp14,
 2987              		.loc 1 1248 0 discriminator 3
 2988 036b 4D29D5   		subq	%r10, %r13
 2989              	.LVL425:
1224:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2990              		.loc 1 1224 0 discriminator 3
 2991 036e 410FB63C 		movzbl	(%r15,%rdi), %edi
 2991      3F
1249:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1250:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1251:fltk-1.3.4-1/jpeg/jidctint.c **** 
1252:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 2992              		.loc 1 1252 0 discriminator 3
 2993 0373 4983C620 		addq	$32, %r14
 2994              	.LVL426:
1224:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2995              		.loc 1 1224 0 discriminator 3
 2996 0377 408839   		movb	%dil, (%rcx)
1227:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2997              		.loc 1 1227 0 discriminator 3
 2998 037a 410FB614 		movzbl	(%r15,%rdx), %edx
 2998      17
1242:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 2999              		.loc 1 1242 0 discriminator 3
 3000 037f 488B7C24 		movq	32(%rsp), %rdi
 3000      20
1227:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3001              		.loc 1 1227 0 discriminator 3
 3002 0384 885108   		movb	%dl, 8(%rcx)
1230:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3003              		.loc 1 1230 0 discriminator 3
 3004 0387 488D1406 		leaq	(%rsi,%rax), %rdx
1233:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3005              		.loc 1 1233 0 discriminator 3
 3006 038b 4829C6   		subq	%rax, %rsi
 3007              	.LVL427:
 3008 038e 48C1FE12 		sarq	$18, %rsi
1230:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3009              		.loc 1 1230 0 discriminator 3
 3010 0392 48C1FA12 		sarq	$18, %rdx
1233:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3011              		.loc 1 1233 0 discriminator 3
 3012 0396 81E6FF03 		andl	$1023, %esi
 3012      0000
1230:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3013              		.loc 1 1230 0 discriminator 3
 3014 039c 81E2FF03 		andl	$1023, %edx
 3014      0000
 3015 03a2 410FB614 		movzbl	(%r15,%rdx), %edx
 3015      17
 3016 03a7 885101   		movb	%dl, 1(%rcx)
1233:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3017              		.loc 1 1233 0 discriminator 3
 3018 03aa 410FB604 		movzbl	(%r15,%rsi), %eax
 3018      37
 3019              	.LVL428:
 3020 03af 884107   		movb	%al, 7(%rcx)
1236:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3021              		.loc 1 1236 0 discriminator 3
 3022 03b2 4A8D0403 		leaq	(%rbx,%r8), %rax
1239:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3023              		.loc 1 1239 0 discriminator 3
 3024 03b6 4C29C3   		subq	%r8, %rbx
1236:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3025              		.loc 1 1236 0 discriminator 3
 3026 03b9 48C1F812 		sarq	$18, %rax
 3027 03bd 25FF0300 		andl	$1023, %eax
 3027      00
 3028 03c2 410FB604 		movzbl	(%r15,%rax), %eax
 3028      07
 3029 03c7 884102   		movb	%al, 2(%rcx)
1239:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3030              		.loc 1 1239 0 discriminator 3
 3031 03ca 4889D8   		movq	%rbx, %rax
 3032 03cd 48C1F812 		sarq	$18, %rax
 3033 03d1 25FF0300 		andl	$1023, %eax
 3033      00
 3034 03d6 410FB604 		movzbl	(%r15,%rax), %eax
 3034      07
 3035 03db 884106   		movb	%al, 6(%rcx)
1242:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3036              		.loc 1 1242 0 discriminator 3
 3037 03de 4A8D040F 		leaq	(%rdi,%r9), %rax
1245:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3038              		.loc 1 1245 0 discriminator 3
 3039 03e2 4C29CF   		subq	%r9, %rdi
1242:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3040              		.loc 1 1242 0 discriminator 3
 3041 03e5 48C1F812 		sarq	$18, %rax
 3042 03e9 25FF0300 		andl	$1023, %eax
 3042      00
 3043 03ee 410FB604 		movzbl	(%r15,%rax), %eax
 3043      07
 3044 03f3 884103   		movb	%al, 3(%rcx)
1245:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3045              		.loc 1 1245 0 discriminator 3
 3046 03f6 4889F8   		movq	%rdi, %rax
 3047 03f9 48C1F812 		sarq	$18, %rax
 3048 03fd 25FF0300 		andl	$1023, %eax
 3048      00
 3049 0402 410FB604 		movzbl	(%r15,%rax), %eax
 3049      07
 3050 0407 884105   		movb	%al, 5(%rcx)
 3051              	.LVL429:
1248:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3052              		.loc 1 1248 0 discriminator 3
 3053 040a 4C89E8   		movq	%r13, %rax
 3054 040d 48834424 		addq	$8, 8(%rsp)
 3054      0808
 3055 0413 4C29D0   		subq	%r10, %rax
 3056 0416 48C1F812 		sarq	$18, %rax
 3057 041a 25FF0300 		andl	$1023, %eax
 3057      00
1176:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 3058              		.loc 1 1176 0 discriminator 3
 3059 041f 4C3B7424 		cmpq	48(%rsp), %r14
 3059      30
1248:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3060              		.loc 1 1248 0 discriminator 3
 3061 0424 410FB604 		movzbl	(%r15,%rax), %eax
 3061      07
 3062 0429 884104   		movb	%al, 4(%rcx)
1176:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 3063              		.loc 1 1176 0 discriminator 3
 3064 042c 0F852EFE 		jne	.L80
 3064      FFFF
1253:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1254:fltk-1.3.4-1/jpeg/jidctint.c **** }
 3065              		.loc 1 1254 0
 3066 0432 488B8424 		movq	360(%rsp), %rax
 3066      68010000 
 3067 043a 64483304 		xorq	%fs:40, %rax
 3067      25280000 
 3067      00
 3068 0443 7512     		jne	.L85
 3069 0445 4881C478 		addq	$376, %rsp
 3069      010000
 3070              		.cfi_remember_state
 3071              		.cfi_def_cfa_offset 56
 3072 044c 5B       		popq	%rbx
 3073              		.cfi_def_cfa_offset 48
 3074 044d 5D       		popq	%rbp
 3075              		.cfi_def_cfa_offset 40
 3076              	.LVL430:
 3077 044e 415C     		popq	%r12
 3078              		.cfi_def_cfa_offset 32
 3079              	.LVL431:
 3080 0450 415D     		popq	%r13
 3081              		.cfi_def_cfa_offset 24
 3082 0452 415E     		popq	%r14
 3083              		.cfi_def_cfa_offset 16
 3084              	.LVL432:
 3085 0454 415F     		popq	%r15
 3086              		.cfi_def_cfa_offset 8
 3087 0456 C3       		ret
 3088              	.LVL433:
 3089              	.L85:
 3090              		.cfi_restore_state
 3091 0457 E8000000 		call	__stack_chk_fail
 3091      00
 3092              	.LVL434:
 3093              		.cfi_endproc
 3094              	.LFE69:
 3096              		.section	.text.unlikely.jpeg_idct_9x9
 3097              	.LCOLDE8:
 3098              		.section	.text.jpeg_idct_9x9
 3099              	.LHOTE8:
 3100              		.section	.text.unlikely.jpeg_idct_10x10,"ax",@progbits
 3101              	.LCOLDB9:
 3102              		.section	.text.jpeg_idct_10x10,"ax",@progbits
 3103              	.LHOTB9:
 3104              		.p2align 4,,15
 3105              		.globl	jpeg_idct_10x10
 3107              	jpeg_idct_10x10:
 3108              	.LFB70:
1255:fltk-1.3.4-1/jpeg/jidctint.c **** 
1256:fltk-1.3.4-1/jpeg/jidctint.c **** 
1257:fltk-1.3.4-1/jpeg/jidctint.c **** /*
1258:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
1259:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 10x10 output block.
1260:fltk-1.3.4-1/jpeg/jidctint.c ****  *
1261:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 12 multiplications in the 1-D kernel.
1262:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/20).
1263:fltk-1.3.4-1/jpeg/jidctint.c ****  */
1264:fltk-1.3.4-1/jpeg/jidctint.c **** 
1265:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
1266:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_10x10 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
1267:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
1268:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
1269:fltk-1.3.4-1/jpeg/jidctint.c **** {
 3109              		.loc 1 1269 0
 3110              		.cfi_startproc
 3111              	.LVL435:
 3112 0000 4157     		pushq	%r15
 3113              		.cfi_def_cfa_offset 16
 3114              		.cfi_offset 15, -16
 3115 0002 4156     		pushq	%r14
 3116              		.cfi_def_cfa_offset 24
 3117              		.cfi_offset 14, -24
 3118 0004 4155     		pushq	%r13
 3119              		.cfi_def_cfa_offset 32
 3120              		.cfi_offset 13, -32
 3121 0006 4154     		pushq	%r12
 3122              		.cfi_def_cfa_offset 40
 3123              		.cfi_offset 12, -40
 3124 0008 55       		pushq	%rbp
 3125              		.cfi_def_cfa_offset 48
 3126              		.cfi_offset 6, -48
 3127 0009 53       		pushq	%rbx
 3128              		.cfi_def_cfa_offset 56
 3129              		.cfi_offset 3, -56
 3130 000a 4889D5   		movq	%rdx, %rbp
 3131 000d 4881ECA8 		subq	$424, %rsp
 3131      010000
 3132              		.cfi_def_cfa_offset 480
 3133              		.loc 1 1269 0
 3134 0014 64488B04 		movq	%fs:40, %rax
 3134      25280000 
 3134      00
 3135 001d 48898424 		movq	%rax, 408(%rsp)
 3135      98010000 
 3136 0025 31C0     		xorl	%eax, %eax
1270:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
1271:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
1272:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4, z5;
1273:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
1274:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
1275:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
1276:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
1277:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 3137              		.loc 1 1277 0
 3138 0027 488B87B8 		movq	440(%rdi), %rax
 3138      010000
1269:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 3139              		.loc 1 1269 0
 3140 002e 44894424 		movl	%r8d, 68(%rsp)
 3140      44
1278:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
1279:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*10];	/* buffers data between passes */
1280:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
1281:fltk-1.3.4-1/jpeg/jidctint.c **** 
1282:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
1283:fltk-1.3.4-1/jpeg/jidctint.c **** 
1284:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
1285:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
1286:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 3141              		.loc 1 1286 0
 3142 0033 4C8D7C24 		leaq	80(%rsp), %r15
 3142      50
1285:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 3143              		.loc 1 1285 0
 3144 0038 4C8B4658 		movq	88(%rsi), %r8
 3145              	.LVL436:
1269:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 3146              		.loc 1 1269 0
 3147 003c 48894C24 		movq	%rcx, 56(%rsp)
 3147      38
1277:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 3148              		.loc 1 1277 0
 3149 0041 4C8DA080 		leaq	128(%rax), %r12
 3149      000000
 3150              	.LVL437:
1287:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 3151              		.loc 1 1287 0
 3152 0048 488D4424 		leaq	112(%rsp), %rax
 3152      70
 3153 004d 4C896424 		movq	%r12, 72(%rsp)
 3153      48
 3154 0052 48894424 		movq	%rax, 48(%rsp)
 3154      30
 3155              	.LVL438:
 3156 0057 660F1F84 		.p2align 4,,10
 3156      00000000 
 3156      00
 3157              		.p2align 3
 3158              	.L87:
1288:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1289:fltk-1.3.4-1/jpeg/jidctint.c **** 
1290:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
1291:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
1292:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1293:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += ONE << (CONST_BITS-PASS1_BITS-1);
1294:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 3159              		.loc 1 1294 0 discriminator 3
 3160 0060 0FBF5540 		movswl	64(%rbp), %edx
1295:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
1296:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
1297:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
1298:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
1299:fltk-1.3.4-1/jpeg/jidctint.c **** 
1300:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = RIGHT_SHIFT(z3 - ((z1 - z2) << 1),   /* c0 = (c4-c8)*2 */
1301:fltk-1.3.4-1/jpeg/jidctint.c **** 			CONST_BITS-PASS1_BITS);
1302:fltk-1.3.4-1/jpeg/jidctint.c **** 
1303:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
1304:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 3161              		.loc 1 1304 0 discriminator 3
 3162 0064 0FBF4D60 		movswl	96(%rbp), %ecx
1294:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
 3163              		.loc 1 1294 0 discriminator 3
 3164 0068 410FAF90 		imull	128(%r8), %edx
 3164      80000000 
 3165              		.loc 1 1304 0 discriminator 3
 3166 0070 410FAF88 		imull	192(%r8), %ecx
 3166      C0000000 
1290:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 3167              		.loc 1 1290 0 discriminator 3
 3168 0078 0FBF4500 		movswl	0(%rbp), %eax
 3169 007c 410FAF00 		imull	(%r8), %eax
1294:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
 3170              		.loc 1 1294 0 discriminator 3
 3171 0080 4863D2   		movslq	%edx, %rdx
1296:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 3172              		.loc 1 1296 0 discriminator 3
 3173 0083 4869DAFC 		imulq	$3580, %rdx, %rbx
 3173      0D0000
 3174              		.loc 1 1304 0 discriminator 3
 3175 008a 4863C9   		movslq	%ecx, %rcx
1295:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
 3176              		.loc 1 1295 0 discriminator 3
 3177 008d 4C69F29D 		imulq	$9373, %rdx, %r14
 3177      240000
1303:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 3178              		.loc 1 1303 0 discriminator 3
 3179 0094 0FBF5520 		movswl	32(%rbp), %edx
 3180 0098 410FAF50 		imull	64(%r8), %edx
 3180      40
1290:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 3181              		.loc 1 1290 0 discriminator 3
 3182 009d 4898     		cltq
 3183              	.LVL439:
1291:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 3184              		.loc 1 1291 0 discriminator 3
 3185 009f 48C1E00D 		salq	$13, %rax
 3186              	.LVL440:
1298:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3187              		.loc 1 1298 0 discriminator 3
 3188 00a3 48895C24 		movq	%rbx, 8(%rsp)
 3188      08
1293:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 3189              		.loc 1 1293 0 discriminator 3
 3190 00a8 48050004 		addq	$1024, %rax
 3190      0000
 3191              	.LVL441:
1298:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3192              		.loc 1 1298 0 discriminator 3
 3193 00ae 4889C6   		movq	%rax, %rsi
1297:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
 3194              		.loc 1 1297 0 discriminator 3
 3195 00b1 4A8D3C30 		leaq	(%rax,%r14), %rdi
 3196              	.LVL442:
1298:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3197              		.loc 1 1298 0 discriminator 3
 3198 00b5 4829DE   		subq	%rbx, %rsi
 3199              	.LVL443:
1303:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 3200              		.loc 1 1303 0 discriminator 3
 3201 00b8 4863D2   		movslq	%edx, %rdx
 3202              	.LVL444:
1305:fltk-1.3.4-1/jpeg/jidctint.c **** 
1306:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));    /* c6 */
 3203              		.loc 1 1306 0 discriminator 3
 3204 00bb 4C8D0C0A 		leaq	(%rdx,%rcx), %r9
1307:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
1308:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
 3205              		.loc 1 1308 0 discriminator 3
 3206 00bf 4869C95C 		imulq	$-17828, %rcx, %rcx
 3206      BAFFFF
 3207              	.LVL445:
1306:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 3208              		.loc 1 1306 0 discriminator 3
 3209 00c6 4D69C99A 		imulq	$6810, %r9, %r9
 3209      1A0000
 3210              	.LVL446:
1307:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 3211              		.loc 1 1307 0 discriminator 3
 3212 00cd 4869D271 		imulq	$4209, %rdx, %rdx
 3212      100000
 3213              	.LVL447:
 3214              		.loc 1 1308 0 discriminator 3
 3215 00d4 4C01C9   		addq	%r9, %rcx
1307:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 3216              		.loc 1 1307 0 discriminator 3
 3217 00d7 4C01CA   		addq	%r9, %rdx
 3218              	.LVL448:
1309:fltk-1.3.4-1/jpeg/jidctint.c **** 
1310:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
1311:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
1312:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 3219              		.loc 1 1312 0 discriminator 3
 3220 00da 4C8D0C0E 		leaq	(%rsi,%rcx), %r9
 3221              	.LVL449:
1313:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
 3222              		.loc 1 1313 0 discriminator 3
 3223 00de 4829CE   		subq	%rcx, %rsi
 3224              	.LVL450:
 3225 00e1 48897424 		movq	%rsi, 32(%rsp)
 3225      20
1314:fltk-1.3.4-1/jpeg/jidctint.c **** 
1315:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1316:fltk-1.3.4-1/jpeg/jidctint.c **** 
1317:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
1318:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
1319:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3226              		.loc 1 1319 0 discriminator 3
 3227 00e6 0FBF7550 		movswl	80(%rbp), %esi
1310:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
 3228              		.loc 1 1310 0 discriminator 3
 3229 00ea 4C8D1417 		leaq	(%rdi,%rdx), %r10
 3230              	.LVL451:
 3231              		.loc 1 1319 0 discriminator 3
 3232 00ee 410FAFB0 		imull	160(%r8), %esi
 3232      A0000000 
1318:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3233              		.loc 1 1318 0 discriminator 3
 3234 00f6 0FBF4D30 		movswl	48(%rbp), %ecx
 3235              	.LVL452:
1311:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 3236              		.loc 1 1311 0 discriminator 3
 3237 00fa 4829D7   		subq	%rdx, %rdi
 3238              	.LVL453:
1317:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 3239              		.loc 1 1317 0 discriminator 3
 3240 00fd 0FBF5510 		movswl	16(%rbp), %edx
 3241              	.LVL454:
1318:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3242              		.loc 1 1318 0 discriminator 3
 3243 0101 410FAF48 		imull	96(%r8), %ecx
 3243      60
1317:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 3244              		.loc 1 1317 0 discriminator 3
 3245 0106 410FAF50 		imull	32(%r8), %edx
 3245      20
1312:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
 3246              		.loc 1 1312 0 discriminator 3
 3247 010b 4C894C24 		movq	%r9, 24(%rsp)
 3247      18
 3248              	.LVL455:
1311:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 3249              		.loc 1 1311 0 discriminator 3
 3250 0110 48897C24 		movq	%rdi, 16(%rsp)
 3250      10
 3251              	.LVL456:
 3252              		.loc 1 1319 0 discriminator 3
 3253 0115 4C63DE   		movslq	%esi, %r11
1320:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 3254              		.loc 1 1320 0 discriminator 3
 3255 0118 0FBF7570 		movswl	112(%rbp), %esi
 3256 011c 410FAFB0 		imull	224(%r8), %esi
 3256      E0000000 
1318:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3257              		.loc 1 1318 0 discriminator 3
 3258 0124 4863C9   		movslq	%ecx, %rcx
1321:fltk-1.3.4-1/jpeg/jidctint.c **** 
1322:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z2 + z4;
1323:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
1324:fltk-1.3.4-1/jpeg/jidctint.c **** 
1325:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp13, FIX(0.309016994));        /* (c3-c7)/2 */
1326:fltk-1.3.4-1/jpeg/jidctint.c ****     z5 = z3 << CONST_BITS;
 3259              		.loc 1 1326 0 discriminator 3
 3260 0127 4C895C24 		movq	%r11, 40(%rsp)
 3260      28
1317:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 3261              		.loc 1 1317 0 discriminator 3
 3262 012c 4863D2   		movslq	%edx, %rdx
 3263              	.LVL457:
1327:fltk-1.3.4-1/jpeg/jidctint.c **** 
1328:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.951056516));           /* (c3+c7)/2 */
1329:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z5 + tmp12;
1330:fltk-1.3.4-1/jpeg/jidctint.c **** 
1331:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1, FIX(1.396802247)) + z2 + z4; /* c1 */
1332:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 3264              		.loc 1 1332 0 discriminator 3
 3265 012f 4C69CA14 		imulq	$1812, %rdx, %r9
 3265      070000
1320:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3266              		.loc 1 1320 0 discriminator 3
 3267 0136 4863F6   		movslq	%esi, %rsi
 3268              	.LVL458:
1322:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
 3269              		.loc 1 1322 0 discriminator 3
 3270 0139 488D1C31 		leaq	(%rcx,%rsi), %rbx
 3271              	.LVL459:
1323:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3272              		.loc 1 1323 0 discriminator 3
 3273 013d 4829F1   		subq	%rsi, %rcx
 3274              	.LVL460:
1326:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3275              		.loc 1 1326 0 discriminator 3
 3276 0140 4C89DE   		movq	%r11, %rsi
 3277              	.LVL461:
1325:fltk-1.3.4-1/jpeg/jidctint.c ****     z5 = z3 << CONST_BITS;
 3278              		.loc 1 1325 0 discriminator 3
 3279 0143 4C69E1E3 		imulq	$2531, %rcx, %r12
 3279      090000
 3280              	.LVL462:
1326:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3281              		.loc 1 1326 0 discriminator 3
 3282 014a 48C1E60D 		salq	$13, %rsi
 3283              	.LVL463:
1328:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z5 + tmp12;
 3284              		.loc 1 1328 0 discriminator 3
 3285 014e 4869FB6F 		imulq	$7791, %rbx, %rdi
 3285      1E0000
 3286              	.LVL464:
1331:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 3287              		.loc 1 1331 0 discriminator 3
 3288 0155 4C69DAB3 		imulq	$11443, %rdx, %r11
 3288      2C0000
 3289              	.LVL465:
1329:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3290              		.loc 1 1329 0 discriminator 3
 3291 015c 4D8D2C34 		leaq	(%r12,%rsi), %r13
 3292              	.LVL466:
1333:fltk-1.3.4-1/jpeg/jidctint.c **** 
1334:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.587785252));           /* (c1-c9)/2 */
1335:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z5 - tmp12 - (tmp13 << (CONST_BITS - 1));
 3293              		.loc 1 1335 0 discriminator 3
 3294 0160 4C29E6   		subq	%r12, %rsi
 3295              	.LVL467:
1332:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3296              		.loc 1 1332 0 discriminator 3
 3297 0163 4929F9   		subq	%rdi, %r9
1331:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 3298              		.loc 1 1331 0 discriminator 3
 3299 0166 4901FB   		addq	%rdi, %r11
 3300 0169 4D01EB   		addq	%r13, %r11
 3301              	.LVL468:
1332:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3302              		.loc 1 1332 0 discriminator 3
 3303 016c 4D01CD   		addq	%r9, %r13
 3304              	.LVL469:
 3305              		.loc 1 1335 0 discriminator 3
 3306 016f 4989C9   		movq	%rcx, %r9
1334:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z5 - tmp12 - (tmp13 << (CONST_BITS - 1));
 3307              		.loc 1 1334 0 discriminator 3
 3308 0172 4869DBCF 		imulq	$4815, %rbx, %rbx
 3308      120000
 3309              	.LVL470:
 3310              		.loc 1 1335 0 discriminator 3
 3311 0179 49C1E10C 		salq	$12, %r9
1336:fltk-1.3.4-1/jpeg/jidctint.c **** 
1337:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (z1 - tmp13 - z3) << PASS1_BITS;
1338:fltk-1.3.4-1/jpeg/jidctint.c **** 
1339:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1, FIX(1.260073511)) - z2 - z4; /* c3 */
1340:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
1341:fltk-1.3.4-1/jpeg/jidctint.c **** 
1342:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1343:fltk-1.3.4-1/jpeg/jidctint.c **** 
1344:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0] = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
1345:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
1346:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
1347:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
1348:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) (tmp22 + tmp12);
 3312              		.loc 1 1348 0 discriminator 3
 3313 017d 4C2B7424 		subq	8(%rsp), %r14
 3313      08
 3314              	.LVL471:
1339:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 3315              		.loc 1 1339 0 discriminator 3
 3316 0182 4C69E253 		imulq	$10323, %rdx, %r12
 3316      280000
 3317              	.LVL472:
1335:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3318              		.loc 1 1335 0 discriminator 3
 3319 0189 4C29CE   		subq	%r9, %rsi
 3320              	.LVL473:
1346:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 3321              		.loc 1 1346 0 discriminator 3
 3322 018c 4C8B4C24 		movq	24(%rsp), %r9
 3322      18
1340:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3323              		.loc 1 1340 0 discriminator 3
 3324 0191 4869FA8C 		imulq	$5260, %rdx, %rdi
 3324      140000
 3325              		.loc 1 1348 0 discriminator 3
 3326 0198 4829CA   		subq	%rcx, %rdx
 3327              	.LVL474:
 3328 019b 482B5424 		subq	40(%rsp), %rdx
 3328      28
1287:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 3329              		.loc 1 1287 0 discriminator 3
 3330 01a0 4883C502 		addq	$2, %rbp
 3331              	.LVL475:
 3332 01a4 4983C004 		addq	$4, %r8
 3333              	.LVL476:
 3334 01a8 4983C704 		addq	$4, %r15
 3335              	.LVL477:
1339:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 3336              		.loc 1 1339 0 discriminator 3
 3337 01ac 4929DC   		subq	%rbx, %r12
1340:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3338              		.loc 1 1340 0 discriminator 3
 3339 01af 4829DF   		subq	%rbx, %rdi
1339:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 3340              		.loc 1 1339 0 discriminator 3
 3341 01b2 4929F4   		subq	%rsi, %r12
 3342              	.LVL478:
1349:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) (tmp22 - tmp12);
1350:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 3343              		.loc 1 1350 0 discriminator 3
 3344 01b5 488B5C24 		movq	32(%rsp), %rbx
 3344      20
 3345              	.LVL479:
1340:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3346              		.loc 1 1340 0 discriminator 3
 3347 01ba 4801FE   		addq	%rdi, %rsi
 3348              	.LVL480:
1344:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 3349              		.loc 1 1344 0 discriminator 3
 3350 01bd 4B8D3C1A 		leaq	(%r10,%r11), %rdi
1348:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) (tmp22 - tmp12);
 3351              		.loc 1 1348 0 discriminator 3
 3352 01c1 48C1E202 		salq	$2, %rdx
 3353              	.LVL481:
1345:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 3354              		.loc 1 1345 0 discriminator 3
 3355 01c5 4D29DA   		subq	%r11, %r10
 3356              	.LVL482:
1344:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 3357              		.loc 1 1344 0 discriminator 3
 3358 01c8 48C1FF0B 		sarq	$11, %rdi
1345:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 3359              		.loc 1 1345 0 discriminator 3
 3360 01cc 49C1FA0B 		sarq	$11, %r10
1344:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 3361              		.loc 1 1344 0 discriminator 3
 3362 01d0 41897FFC 		movl	%edi, -4(%r15)
1346:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 3363              		.loc 1 1346 0 discriminator 3
 3364 01d4 4B8D3C21 		leaq	(%r9,%r12), %rdi
1347:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) (tmp22 + tmp12);
 3365              		.loc 1 1347 0 discriminator 3
 3366 01d8 4D29E1   		subq	%r12, %r9
 3367 01db 49C1F90B 		sarq	$11, %r9
1345:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 3368              		.loc 1 1345 0 discriminator 3
 3369 01df 4589971C 		movl	%r10d, 284(%r15)
 3369      010000
1346:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 3370              		.loc 1 1346 0 discriminator 3
 3371 01e6 48C1FF0B 		sarq	$11, %rdi
1347:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) (tmp22 + tmp12);
 3372              		.loc 1 1347 0 discriminator 3
 3373 01ea 45898FFC 		movl	%r9d, 252(%r15)
 3373      000000
1346:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 3374              		.loc 1 1346 0 discriminator 3
 3375 01f1 41897F1C 		movl	%edi, 28(%r15)
1348:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) (tmp22 - tmp12);
 3376              		.loc 1 1348 0 discriminator 3
 3377 01f5 4C89F7   		movq	%r14, %rdi
 3378 01f8 4801FF   		addq	%rdi, %rdi
 3379 01fb 4829F8   		subq	%rdi, %rax
 3380              	.LVL483:
 3381 01fe 48C1F80B 		sarq	$11, %rax
 3382              	.LVL484:
 3383 0202 8D0C02   		leal	(%rdx,%rax), %ecx
 3384              	.LVL485:
1349:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 3385              		.loc 1 1349 0 discriminator 3
 3386 0205 29D0     		subl	%edx, %eax
 3387              	.LVL486:
 3388 0207 418987DC 		movl	%eax, 220(%r15)
 3388      000000
 3389              		.loc 1 1350 0 discriminator 3
 3390 020e 488D0433 		leaq	(%rbx,%rsi), %rax
1348:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7] = (int) (tmp22 - tmp12);
 3391              		.loc 1 1348 0 discriminator 3
 3392 0212 41894F3C 		movl	%ecx, 60(%r15)
 3393              		.loc 1 1350 0 discriminator 3
 3394 0216 48C1F80B 		sarq	$11, %rax
 3395 021a 4189475C 		movl	%eax, 92(%r15)
1351:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 3396              		.loc 1 1351 0 discriminator 3
 3397 021e 4889D8   		movq	%rbx, %rax
 3398 0221 4829F0   		subq	%rsi, %rax
 3399 0224 48C1F80B 		sarq	$11, %rax
 3400 0228 418987BC 		movl	%eax, 188(%r15)
 3400      000000
1352:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 3401              		.loc 1 1352 0 discriminator 3
 3402 022f 488B7C24 		movq	16(%rsp), %rdi
 3402      10
 3403 0234 4A8D042F 		leaq	(%rdi,%r13), %rax
 3404 0238 48C1F80B 		sarq	$11, %rax
 3405 023c 4189477C 		movl	%eax, 124(%r15)
1353:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 3406              		.loc 1 1353 0 discriminator 3
 3407 0240 4889F8   		movq	%rdi, %rax
 3408 0243 4C29E8   		subq	%r13, %rax
 3409 0246 48C1F80B 		sarq	$11, %rax
 3410 024a 4189879C 		movl	%eax, 156(%r15)
 3410      000000
 3411              	.LVL487:
1287:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 3412              		.loc 1 1287 0 discriminator 3
 3413 0251 4C3B7C24 		cmpq	48(%rsp), %r15
 3413      30
 3414 0256 0F8504FE 		jne	.L87
 3414      FFFF
 3415 025c 8B442444 		movl	68(%rsp), %eax
 3416 0260 4C8B6424 		movq	72(%rsp), %r12
 3416      48
 3417              	.LVL488:
1287:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 3418              		.loc 1 1287 0 is_stmt 0
 3419 0265 4C8D7C24 		leaq	80(%rsp), %r15
 3419      50
 3420              	.LVL489:
 3421 026a 48894424 		movq	%rax, 32(%rsp)
 3421      20
 3422              	.LVL490:
 3423 026f 488B4424 		movq	56(%rsp), %rax
 3423      38
 3424 0274 48894424 		movq	%rax, 8(%rsp)
 3424      08
 3425              	.LVL491:
1354:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1355:fltk-1.3.4-1/jpeg/jidctint.c **** 
1356:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 10 rows from work array, store into output array. */
1357:fltk-1.3.4-1/jpeg/jidctint.c **** 
1358:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
1359:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 10; ctr++) {
 3426              		.loc 1 1359 0 is_stmt 1
 3427 0279 488D8424 		leaq	400(%rsp), %rax
 3427      90010000 
 3428 0281 48894424 		movq	%rax, 40(%rsp)
 3428      28
 3429              	.LVL492:
 3430 0286 662E0F1F 		.p2align 4,,10
 3430      84000000 
 3430      0000
 3431              		.p2align 3
 3432              	.L88:
1360:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 3433              		.loc 1 1360 0 discriminator 3
 3434 0290 488B4424 		movq	8(%rsp), %rax
 3434      08
1361:fltk-1.3.4-1/jpeg/jidctint.c **** 
1362:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1363:fltk-1.3.4-1/jpeg/jidctint.c **** 
1364:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1365:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
1366:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
1367:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 3435              		.loc 1 1367 0 discriminator 3
 3436 0295 49637710 		movslq	16(%r15), %rsi
1360:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 3437              		.loc 1 1360 0 discriminator 3
 3438 0299 488B4C24 		movq	32(%rsp), %rcx
 3438      20
1368:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
1369:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
1370:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
1371:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
1372:fltk-1.3.4-1/jpeg/jidctint.c **** 
1373:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = z3 - ((z1 - z2) << 1);               /* c0 = (c4-c8)*2 */
1374:fltk-1.3.4-1/jpeg/jidctint.c **** 
1375:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[2];
 3439              		.loc 1 1375 0 discriminator 3
 3440 029e 4D634708 		movslq	8(%r15), %r8
1376:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
1377:fltk-1.3.4-1/jpeg/jidctint.c **** 
1378:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));    /* c6 */
1379:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
1380:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
1381:fltk-1.3.4-1/jpeg/jidctint.c **** 
1382:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
1383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
1384:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
1385:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
1386:fltk-1.3.4-1/jpeg/jidctint.c **** 
1387:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1388:fltk-1.3.4-1/jpeg/jidctint.c **** 
1389:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
1390:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
1391:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 3441              		.loc 1 1391 0 discriminator 3
 3442 02a2 49635F14 		movslq	20(%r15), %rbx
1360:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3443              		.loc 1 1360 0 discriminator 3
 3444 02a6 480308   		addq	(%rax), %rcx
 3445              	.LVL493:
1365:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 3446              		.loc 1 1365 0 discriminator 3
 3447 02a9 496307   		movslq	(%r15), %rax
1368:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
 3448              		.loc 1 1368 0 discriminator 3
 3449 02ac 4869D69D 		imulq	$9373, %rsi, %rdx
 3449      240000
1369:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 3450              		.loc 1 1369 0 discriminator 3
 3451 02b3 4869F6FC 		imulq	$3580, %rsi, %rsi
 3451      0D0000
1392:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 3452              		.loc 1 1392 0 discriminator 3
 3453 02ba 48C1E30D 		salq	$13, %rbx
1365:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 3454              		.loc 1 1365 0 discriminator 3
 3455 02be 4883C010 		addq	$16, %rax
 3456              	.LVL494:
1366:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 3457              		.loc 1 1366 0 discriminator 3
 3458 02c2 48C1E00D 		salq	$13, %rax
 3459              	.LVL495:
1370:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
 3460              		.loc 1 1370 0 discriminator 3
 3461 02c6 4C8D1410 		leaq	(%rax,%rdx), %r10
 3462              	.LVL496:
1373:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3463              		.loc 1 1373 0 discriminator 3
 3464 02ca 4829F2   		subq	%rsi, %rdx
 3465              	.LVL497:
1371:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3466              		.loc 1 1371 0 discriminator 3
 3467 02cd 4989C1   		movq	%rax, %r9
1373:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3468              		.loc 1 1373 0 discriminator 3
 3469 02d0 4801D2   		addq	%rdx, %rdx
1371:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3470              		.loc 1 1371 0 discriminator 3
 3471 02d3 4929F1   		subq	%rsi, %r9
 3472              	.LVL498:
1373:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3473              		.loc 1 1373 0 discriminator 3
 3474 02d6 4829D0   		subq	%rdx, %rax
 3475              	.LVL499:
1376:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3476              		.loc 1 1376 0 discriminator 3
 3477 02d9 49635718 		movslq	24(%r15), %rdx
 3478              	.LVL500:
1378:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 3479              		.loc 1 1378 0 discriminator 3
 3480 02dd 498D3410 		leaq	(%r8,%rdx), %rsi
1379:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
 3481              		.loc 1 1379 0 discriminator 3
 3482 02e1 4D69C071 		imulq	$4209, %r8, %r8
 3482      100000
 3483              	.LVL501:
1378:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 3484              		.loc 1 1378 0 discriminator 3
 3485 02e8 4869F69A 		imulq	$6810, %rsi, %rsi
 3485      1A0000
 3486              	.LVL502:
1380:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3487              		.loc 1 1380 0 discriminator 3
 3488 02ef 4869D25C 		imulq	$-17828, %rdx, %rdx
 3488      BAFFFF
 3489              	.LVL503:
1379:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
 3490              		.loc 1 1379 0 discriminator 3
 3491 02f6 4901F0   		addq	%rsi, %r8
 3492              	.LVL504:
1382:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
 3493              		.loc 1 1382 0 discriminator 3
 3494 02f9 4B8D3C02 		leaq	(%r10,%r8), %rdi
1383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 3495              		.loc 1 1383 0 discriminator 3
 3496 02fd 4D29C2   		subq	%r8, %r10
 3497              	.LVL505:
1393:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 3498              		.loc 1 1393 0 discriminator 3
 3499 0300 4D63471C 		movslq	28(%r15), %r8
 3500              	.LVL506:
1383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 3501              		.loc 1 1383 0 discriminator 3
 3502 0304 4C895424 		movq	%r10, 16(%rsp)
 3502      10
1390:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 3503              		.loc 1 1390 0 discriminator 3
 3504 0309 4D63570C 		movslq	12(%r15), %r10
1380:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3505              		.loc 1 1380 0 discriminator 3
 3506 030d 4801F2   		addq	%rsi, %rdx
 3507              	.LVL507:
1384:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
 3508              		.loc 1 1384 0 discriminator 3
 3509 0310 498D3411 		leaq	(%r9,%rdx), %rsi
 3510              	.LVL508:
1385:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3511              		.loc 1 1385 0 discriminator 3
 3512 0314 4929D1   		subq	%rdx, %r9
 3513              	.LVL509:
1389:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 3514              		.loc 1 1389 0 discriminator 3
 3515 0317 49635704 		movslq	4(%r15), %rdx
 3516              	.LVL510:
1385:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3517              		.loc 1 1385 0 discriminator 3
 3518 031b 4C894C24 		movq	%r9, 24(%rsp)
 3518      18
 3519              	.LVL511:
1394:fltk-1.3.4-1/jpeg/jidctint.c **** 
1395:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z2 + z4;
 3520              		.loc 1 1395 0 discriminator 3
 3521 0320 4F8D1C02 		leaq	(%r10,%r8), %r11
 3522              	.LVL512:
1396:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
 3523              		.loc 1 1396 0 discriminator 3
 3524 0324 4D29C2   		subq	%r8, %r10
 3525              	.LVL513:
1397:fltk-1.3.4-1/jpeg/jidctint.c **** 
1398:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp13, FIX(0.309016994));        /* (c3-c7)/2 */
 3526              		.loc 1 1398 0 discriminator 3
 3527 0327 4969EAE3 		imulq	$2531, %r10, %rbp
 3527      090000
 3528              	.LVL514:
1399:fltk-1.3.4-1/jpeg/jidctint.c **** 
1400:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.951056516));           /* (c3+c7)/2 */
 3529              		.loc 1 1400 0 discriminator 3
 3530 032e 4D69F36F 		imulq	$7791, %r11, %r14
 3530      1E0000
 3531              	.LVL515:
1401:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 + tmp12;
1402:fltk-1.3.4-1/jpeg/jidctint.c **** 
1403:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1, FIX(1.396802247)) + z2 + z4; /* c1 */
 3532              		.loc 1 1403 0 discriminator 3
 3533 0335 4C69CAB3 		imulq	$11443, %rdx, %r9
 3533      2C0000
1401:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 + tmp12;
 3534              		.loc 1 1401 0 discriminator 3
 3535 033c 4C8D2C2B 		leaq	(%rbx,%rbp), %r13
 3536              	.LVL516:
1404:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 3537              		.loc 1 1404 0 discriminator 3
 3538 0340 4C69C214 		imulq	$1812, %rdx, %r8
 3538      070000
1403:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 3539              		.loc 1 1403 0 discriminator 3
 3540 0347 4D01F1   		addq	%r14, %r9
 3541 034a 4D01E9   		addq	%r13, %r9
 3542              	.LVL517:
1405:fltk-1.3.4-1/jpeg/jidctint.c **** 
1406:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.587785252));           /* (c1-c9)/2 */
 3543              		.loc 1 1406 0 discriminator 3
 3544 034d 4D69DBCF 		imulq	$4815, %r11, %r11
 3544      120000
 3545              	.LVL518:
1404:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3546              		.loc 1 1404 0 discriminator 3
 3547 0354 4D29F0   		subq	%r14, %r8
1407:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
1408:fltk-1.3.4-1/jpeg/jidctint.c **** 
1409:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = ((z1 - tmp13) << CONST_BITS) - z3;
 3548              		.loc 1 1409 0 discriminator 3
 3549 0357 4989D6   		movq	%rdx, %r14
 3550              	.LVL519:
1404:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3551              		.loc 1 1404 0 discriminator 3
 3552 035a 4D01C5   		addq	%r8, %r13
 3553              	.LVL520:
 3554              		.loc 1 1409 0 discriminator 3
 3555 035d 4D29D6   		subq	%r10, %r14
1407:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
 3556              		.loc 1 1407 0 discriminator 3
 3557 0360 4989D8   		movq	%rbx, %r8
 3558 0363 4929E8   		subq	%rbp, %r8
 3559 0366 4C89D5   		movq	%r10, %rbp
 3560              	.LVL521:
 3561              		.loc 1 1409 0 discriminator 3
 3562 0369 4D89F2   		movq	%r14, %r10
 3563              	.LVL522:
1407:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
 3564              		.loc 1 1407 0 discriminator 3
 3565 036c 48C1E50C 		salq	$12, %rbp
 3566              	.LVL523:
 3567              		.loc 1 1409 0 discriminator 3
 3568 0370 49C1E20D 		salq	$13, %r10
1407:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
 3569              		.loc 1 1407 0 discriminator 3
 3570 0374 4929E8   		subq	%rbp, %r8
 3571              	.LVL524:
 3572              		.loc 1 1409 0 discriminator 3
 3573 0377 4929DA   		subq	%rbx, %r10
 3574              	.LVL525:
1410:fltk-1.3.4-1/jpeg/jidctint.c **** 
1411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1, FIX(1.260073511)) - z2 - z4; /* c3 */
 3575              		.loc 1 1411 0 discriminator 3
 3576 037a 4869DA53 		imulq	$10323, %rdx, %rbx
 3576      280000
 3577              	.LVL526:
1412:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 3578              		.loc 1 1412 0 discriminator 3
 3579 0381 4869D28C 		imulq	$5260, %rdx, %rdx
 3579      140000
 3580              	.LVL527:
1411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 3581              		.loc 1 1411 0 discriminator 3
 3582 0388 4C29DB   		subq	%r11, %rbx
 3583              		.loc 1 1412 0 discriminator 3
 3584 038b 4C29DA   		subq	%r11, %rdx
1411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 3585              		.loc 1 1411 0 discriminator 3
 3586 038e 4C29C3   		subq	%r8, %rbx
 3587              	.LVL528:
 3588              		.loc 1 1412 0 discriminator 3
 3589 0391 4901D0   		addq	%rdx, %r8
 3590              	.LVL529:
1413:fltk-1.3.4-1/jpeg/jidctint.c **** 
1414:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1415:fltk-1.3.4-1/jpeg/jidctint.c **** 
1416:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
 3591              		.loc 1 1416 0 discriminator 3
 3592 0394 4A8D140F 		leaq	(%rdi,%r9), %rdx
1417:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1418:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1419:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
 3593              		.loc 1 1419 0 discriminator 3
 3594 0398 4C29CF   		subq	%r9, %rdi
 3595              	.LVL530:
 3596 039b 48C1FF12 		sarq	$18, %rdi
1420:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1421:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1422:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
1423:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1424:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1425:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
1426:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1427:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1428:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
1429:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1430:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1431:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
1432:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1433:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1434:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
 3597              		.loc 1 1434 0 discriminator 3
 3598 039f 4C8B4C24 		movq	24(%rsp), %r9
 3598      18
 3599              	.LVL531:
1416:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3600              		.loc 1 1416 0 discriminator 3
 3601 03a4 48C1FA12 		sarq	$18, %rdx
1419:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3602              		.loc 1 1419 0 discriminator 3
 3603 03a8 81E7FF03 		andl	$1023, %edi
 3603      0000
1416:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3604              		.loc 1 1416 0 discriminator 3
 3605 03ae 81E2FF03 		andl	$1023, %edx
 3605      0000
 3606 03b4 410FB614 		movzbl	(%r12,%rdx), %edx
 3606      14
 3607 03b9 8811     		movb	%dl, (%rcx)
1419:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3608              		.loc 1 1419 0 discriminator 3
 3609 03bb 410FB614 		movzbl	(%r12,%rdi), %edx
 3609      3C
 3610 03c0 885109   		movb	%dl, 9(%rcx)
1422:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3611              		.loc 1 1422 0 discriminator 3
 3612 03c3 488D141E 		leaq	(%rsi,%rbx), %rdx
1425:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3613              		.loc 1 1425 0 discriminator 3
 3614 03c7 4829DE   		subq	%rbx, %rsi
 3615              	.LVL532:
 3616 03ca 48C1FE12 		sarq	$18, %rsi
1422:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3617              		.loc 1 1422 0 discriminator 3
 3618 03ce 48C1FA12 		sarq	$18, %rdx
1425:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3619              		.loc 1 1425 0 discriminator 3
 3620 03d2 81E6FF03 		andl	$1023, %esi
 3620      0000
1422:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3621              		.loc 1 1422 0 discriminator 3
 3622 03d8 81E2FF03 		andl	$1023, %edx
 3622      0000
 3623 03de 410FB614 		movzbl	(%r12,%rdx), %edx
 3623      14
 3624 03e3 885101   		movb	%dl, 1(%rcx)
1425:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3625              		.loc 1 1425 0 discriminator 3
 3626 03e6 410FB614 		movzbl	(%r12,%rsi), %edx
 3626      34
 3627 03eb 885108   		movb	%dl, 8(%rcx)
1428:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3628              		.loc 1 1428 0 discriminator 3
 3629 03ee 4A8D1410 		leaq	(%rax,%r10), %rdx
1431:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3630              		.loc 1 1431 0 discriminator 3
 3631 03f2 4C29D0   		subq	%r10, %rax
 3632              	.LVL533:
 3633 03f5 48C1F812 		sarq	$18, %rax
1435:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1436:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1437:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
1438:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1439:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1440:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
 3634              		.loc 1 1440 0 discriminator 3
 3635 03f9 4C8B5424 		movq	16(%rsp), %r10
 3635      10
 3636              	.LVL534:
1428:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3637              		.loc 1 1428 0 discriminator 3
 3638 03fe 48C1FA12 		sarq	$18, %rdx
1431:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3639              		.loc 1 1431 0 discriminator 3
 3640 0402 25FF0300 		andl	$1023, %eax
 3640      00
1428:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3641              		.loc 1 1428 0 discriminator 3
 3642 0407 81E2FF03 		andl	$1023, %edx
 3642      0000
 3643 040d 410FB614 		movzbl	(%r12,%rdx), %edx
 3643      14
 3644 0412 885102   		movb	%dl, 2(%rcx)
1431:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3645              		.loc 1 1431 0 discriminator 3
 3646 0415 410FB604 		movzbl	(%r12,%rax), %eax
 3646      04
 3647 041a 884107   		movb	%al, 7(%rcx)
1434:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3648              		.loc 1 1434 0 discriminator 3
 3649 041d 4B8D0401 		leaq	(%r9,%r8), %rax
1437:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3650              		.loc 1 1437 0 discriminator 3
 3651 0421 4D29C1   		subq	%r8, %r9
1434:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3652              		.loc 1 1434 0 discriminator 3
 3653 0424 48C1F812 		sarq	$18, %rax
 3654 0428 25FF0300 		andl	$1023, %eax
 3654      00
 3655 042d 410FB604 		movzbl	(%r12,%rax), %eax
 3655      04
 3656 0432 884103   		movb	%al, 3(%rcx)
1437:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3657              		.loc 1 1437 0 discriminator 3
 3658 0435 4C89C8   		movq	%r9, %rax
 3659 0438 48C1F812 		sarq	$18, %rax
 3660 043c 25FF0300 		andl	$1023, %eax
 3660      00
 3661 0441 410FB604 		movzbl	(%r12,%rax), %eax
 3661      04
 3662 0446 884106   		movb	%al, 6(%rcx)
 3663              		.loc 1 1440 0 discriminator 3
 3664 0449 4B8D042A 		leaq	(%r10,%r13), %rax
 3665 044d 48C1F812 		sarq	$18, %rax
 3666 0451 25FF0300 		andl	$1023, %eax
 3666      00
 3667 0456 410FB604 		movzbl	(%r12,%rax), %eax
 3667      04
 3668 045b 884104   		movb	%al, 4(%rcx)
1441:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1442:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1443:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
 3669              		.loc 1 1443 0 discriminator 3
 3670 045e 4C89D0   		movq	%r10, %rax
 3671 0461 4C29E8   		subq	%r13, %rax
 3672 0464 48C1F812 		sarq	$18, %rax
 3673 0468 25FF0300 		andl	$1023, %eax
 3673      00
1444:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
1445:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
1446:fltk-1.3.4-1/jpeg/jidctint.c **** 
1447:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 3674              		.loc 1 1447 0 discriminator 3
 3675 046d 4983C720 		addq	$32, %r15
 3676              	.LVL535:
 3677 0471 48834424 		addq	$8, 8(%rsp)
 3677      0808
1443:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3678              		.loc 1 1443 0 discriminator 3
 3679 0477 410FB604 		movzbl	(%r12,%rax), %eax
 3679      04
1359:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 3680              		.loc 1 1359 0 discriminator 3
 3681 047c 4C3B7C24 		cmpq	40(%rsp), %r15
 3681      28
1443:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 3682              		.loc 1 1443 0 discriminator 3
 3683 0481 884105   		movb	%al, 5(%rcx)
1359:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 3684              		.loc 1 1359 0 discriminator 3
 3685 0484 0F8506FE 		jne	.L88
 3685      FFFF
1448:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1449:fltk-1.3.4-1/jpeg/jidctint.c **** }
 3686              		.loc 1 1449 0
 3687 048a 488B8424 		movq	408(%rsp), %rax
 3687      98010000 
 3688 0492 64483304 		xorq	%fs:40, %rax
 3688      25280000 
 3688      00
 3689 049b 7512     		jne	.L93
 3690 049d 4881C4A8 		addq	$424, %rsp
 3690      010000
 3691              		.cfi_remember_state
 3692              		.cfi_def_cfa_offset 56
 3693 04a4 5B       		popq	%rbx
 3694              		.cfi_def_cfa_offset 48
 3695              	.LVL536:
 3696 04a5 5D       		popq	%rbp
 3697              		.cfi_def_cfa_offset 40
 3698              	.LVL537:
 3699 04a6 415C     		popq	%r12
 3700              		.cfi_def_cfa_offset 32
 3701 04a8 415D     		popq	%r13
 3702              		.cfi_def_cfa_offset 24
 3703              	.LVL538:
 3704 04aa 415E     		popq	%r14
 3705              		.cfi_def_cfa_offset 16
 3706              	.LVL539:
 3707 04ac 415F     		popq	%r15
 3708              		.cfi_def_cfa_offset 8
 3709              	.LVL540:
 3710 04ae C3       		ret
 3711              	.LVL541:
 3712              	.L93:
 3713              		.cfi_restore_state
 3714 04af E8000000 		call	__stack_chk_fail
 3714      00
 3715              	.LVL542:
 3716              		.cfi_endproc
 3717              	.LFE70:
 3719              		.section	.text.unlikely.jpeg_idct_10x10
 3720              	.LCOLDE9:
 3721              		.section	.text.jpeg_idct_10x10
 3722              	.LHOTE9:
 3723              		.section	.text.unlikely.jpeg_idct_11x11,"ax",@progbits
 3724              	.LCOLDB10:
 3725              		.section	.text.jpeg_idct_11x11,"ax",@progbits
 3726              	.LHOTB10:
 3727              		.p2align 4,,15
 3728              		.globl	jpeg_idct_11x11
 3730              	jpeg_idct_11x11:
 3731              	.LFB71:
1450:fltk-1.3.4-1/jpeg/jidctint.c **** 
1451:fltk-1.3.4-1/jpeg/jidctint.c **** 
1452:fltk-1.3.4-1/jpeg/jidctint.c **** /*
1453:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
1454:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 11x11 output block.
1455:fltk-1.3.4-1/jpeg/jidctint.c ****  *
1456:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 24 multiplications in the 1-D kernel.
1457:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/22).
1458:fltk-1.3.4-1/jpeg/jidctint.c ****  */
1459:fltk-1.3.4-1/jpeg/jidctint.c **** 
1460:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
1461:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_11x11 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
1462:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
1463:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
1464:fltk-1.3.4-1/jpeg/jidctint.c **** {
 3732              		.loc 1 1464 0
 3733              		.cfi_startproc
 3734              	.LVL543:
 3735 0000 4157     		pushq	%r15
 3736              		.cfi_def_cfa_offset 16
 3737              		.cfi_offset 15, -16
 3738 0002 4156     		pushq	%r14
 3739              		.cfi_def_cfa_offset 24
 3740              		.cfi_offset 14, -24
 3741 0004 4155     		pushq	%r13
 3742              		.cfi_def_cfa_offset 32
 3743              		.cfi_offset 13, -32
 3744 0006 4154     		pushq	%r12
 3745              		.cfi_def_cfa_offset 40
 3746              		.cfi_offset 12, -40
 3747 0008 55       		pushq	%rbp
 3748              		.cfi_def_cfa_offset 48
 3749              		.cfi_offset 6, -48
 3750 0009 53       		pushq	%rbx
 3751              		.cfi_def_cfa_offset 56
 3752              		.cfi_offset 3, -56
1465:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
1466:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
1467:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
1468:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
1469:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
1470:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
1471:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
1472:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
1473:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
1474:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*11];	/* buffers data between passes */
1475:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
1476:fltk-1.3.4-1/jpeg/jidctint.c **** 
1477:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
1478:fltk-1.3.4-1/jpeg/jidctint.c **** 
1479:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
1480:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
1481:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
1482:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 3753              		.loc 1 1482 0
 3754 000a 4889D5   		movq	%rdx, %rbp
1464:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 3755              		.loc 1 1464 0
 3756 000d 4881ECC8 		subq	$456, %rsp
 3756      010000
 3757              		.cfi_def_cfa_offset 512
1480:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 3758              		.loc 1 1480 0
 3759 0014 4C8B6658 		movq	88(%rsi), %r12
1464:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 3760              		.loc 1 1464 0
 3761 0018 64488B04 		movq	%fs:40, %rax
 3761      25280000 
 3761      00
 3762 0021 48898424 		movq	%rax, 440(%rsp)
 3762      B8010000 
 3763 0029 31C0     		xorl	%eax, %eax
1472:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 3764              		.loc 1 1472 0
 3765 002b 488B87B8 		movq	440(%rdi), %rax
 3765      010000
 3766              		.loc 1 1482 0
 3767 0032 488D5C24 		leaq	112(%rsp), %rbx
 3767      70
1464:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 3768              		.loc 1 1464 0
 3769 0037 48894C24 		movq	%rcx, 64(%rsp)
 3769      40
 3770 003c 44894424 		movl	%r8d, 56(%rsp)
 3770      38
 3771              		.loc 1 1482 0
 3772 0041 48895C24 		movq	%rbx, 48(%rsp)
 3772      30
1472:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 3773              		.loc 1 1472 0
 3774 0046 4C8DA880 		leaq	128(%rax), %r13
 3774      000000
 3775              	.LVL544:
1481:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 3776              		.loc 1 1481 0
 3777 004d 488D4424 		leaq	80(%rsp), %rax
 3777      50
 3778              	.LVL545:
 3779              		.loc 1 1482 0
 3780 0052 4C896C24 		movq	%r13, 72(%rsp)
 3780      48
 3781              	.LVL546:
 3782 0057 660F1F84 		.p2align 4,,10
 3782      00000000 
 3782      00
 3783              		.p2align 3
 3784              	.L95:
1483:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1484:fltk-1.3.4-1/jpeg/jidctint.c **** 
1485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
1486:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
1487:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1488:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += ONE << (CONST_BITS-PASS1_BITS-1);
1489:fltk-1.3.4-1/jpeg/jidctint.c **** 
1490:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
1491:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 3785              		.loc 1 1491 0 discriminator 3
 3786 0060 0FBF4D40 		movswl	64(%rbp), %ecx
1492:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 3787              		.loc 1 1492 0 discriminator 3
 3788 0064 0FBF7560 		movswl	96(%rbp), %esi
1491:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 3789              		.loc 1 1491 0 discriminator 3
 3790 0068 410FAF8C 		imull	128(%r12), %ecx
 3790      24800000 
 3790      00
 3791              		.loc 1 1492 0 discriminator 3
 3792 0071 410FAFB4 		imull	192(%r12), %esi
 3792      24C00000 
 3792      00
1490:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 3793              		.loc 1 1490 0 discriminator 3
 3794 007a 0FBF5520 		movswl	32(%rbp), %edx
1485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 3795              		.loc 1 1485 0 discriminator 3
 3796 007e 440FBF45 		movswl	0(%rbp), %r8d
 3796      00
1490:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 3797              		.loc 1 1490 0 discriminator 3
 3798 0083 410FAF54 		imull	64(%r12), %edx
 3798      2440
1485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 3799              		.loc 1 1485 0 discriminator 3
 3800 0089 450FAF04 		imull	(%r12), %r8d
 3800      24
1491:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 3801              		.loc 1 1491 0 discriminator 3
 3802 008e 4863C9   		movslq	%ecx, %rcx
 3803              		.loc 1 1492 0 discriminator 3
 3804 0091 4863F6   		movslq	%esi, %rsi
1493:fltk-1.3.4-1/jpeg/jidctint.c **** 
1494:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(z2 - z3, FIX(2.546640132));     /* c2+c4 */
 3805              		.loc 1 1494 0 discriminator 3
 3806 0094 4989CA   		movq	%rcx, %r10
1495:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2 - z1, FIX(0.430815045));     /* c2-c6 */
 3807              		.loc 1 1495 0 discriminator 3
 3808 0097 4989C9   		movq	%rcx, %r9
1494:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2 - z1, FIX(0.430815045));     /* c2-c6 */
 3809              		.loc 1 1494 0 discriminator 3
 3810 009a 4929F2   		subq	%rsi, %r10
1490:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 3811              		.loc 1 1490 0 discriminator 3
 3812 009d 4863D2   		movslq	%edx, %rdx
1494:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2 - z1, FIX(0.430815045));     /* c2-c6 */
 3813              		.loc 1 1494 0 discriminator 3
 3814 00a0 4D69DA7E 		imulq	$20862, %r10, %r11
 3814      510000
1496:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z1 + z3;
 3815              		.loc 1 1496 0 discriminator 3
 3816 00a7 4C8D1432 		leaq	(%rdx,%rsi), %r10
1495:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z1 + z3;
 3817              		.loc 1 1495 0 discriminator 3
 3818 00ab 4929D1   		subq	%rdx, %r9
 3819 00ae 4D69C9C9 		imulq	$3529, %r9, %r9
 3819      0D0000
1485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 3820              		.loc 1 1485 0 discriminator 3
 3821 00b5 4D63C0   		movslq	%r8d, %r8
 3822              	.LVL547:
1497:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z4, - FIX(1.155664402));        /* -(c2-c10) */
 3823              		.loc 1 1497 0 discriminator 3
 3824 00b8 4969FA05 		imulq	$-9467, %r10, %rdi
 3824      DBFFFF
1498:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 -= z2;
 3825              		.loc 1 1498 0 discriminator 3
 3826 00bf 4929CA   		subq	%rcx, %r10
1486:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 3827              		.loc 1 1486 0 discriminator 3
 3828 00c2 49C1E00D 		salq	$13, %r8
 3829              	.LVL548:
1499:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 + MULTIPLY(z4, FIX(1.356927976));  /* c2 */
 3830              		.loc 1 1499 0 discriminator 3
 3831 00c6 4C895424 		movq	%r10, 8(%rsp)
 3831      08
 3832 00cb 4D69D26C 		imulq	$11116, %r10, %r10
 3832      2B0000
 3833              	.LVL549:
 3834 00d2 4F8DAC10 		leaq	1024(%r8,%r10), %r13
 3834      00040000 
 3835              	.LVL550:
1500:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp23 + tmp25 -
 3836              		.loc 1 1500 0 discriminator 3
 3837 00da 4F8D040B 		leaq	(%r11,%r9), %r8
 3838              	.LVL551:
 3839 00de 4C69D1B4 		imulq	$-14924, %rcx, %r10
 3839      C5FFFF
 3840 00e5 4D01E8   		addq	%r13, %r8
1501:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.821790775));          /* c2+c4+c10-c6 */
1502:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 += tmp25 + MULTIPLY(z3, FIX(2.115825087)); /* c4+c6 */
1503:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += tmp25 - MULTIPLY(z1, FIX(1.513598477)); /* c6+c8 */
1504:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 3841              		.loc 1 1504 0 discriminator 3
 3842 00e8 4C01EF   		addq	%r13, %rdi
 3843              	.LVL552:
1505:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp24 - MULTIPLY(z3, FIX(0.788749120));  /* c8+c10 */
1506:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += MULTIPLY(z2, FIX(1.944413522)) -        /* c2+c8 */
 3844              		.loc 1 1506 0 discriminator 3
 3845 00eb 4869C939 		imulq	$15929, %rcx, %rcx
 3845      3E0000
 3846              	.LVL553:
1500:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.821790775));          /* c2+c4+c10-c6 */
 3847              		.loc 1 1500 0 discriminator 3
 3848 00f2 4B8D1C10 		leaq	(%r8,%r10), %rbx
1502:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += tmp25 - MULTIPLY(z1, FIX(1.513598477)); /* c6+c8 */
 3849              		.loc 1 1502 0 discriminator 3
 3850 00f6 4C69D6B5 		imulq	$17333, %rsi, %r10
 3850      430000
1500:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.821790775));          /* c2+c4+c10-c6 */
 3851              		.loc 1 1500 0 discriminator 3
 3852 00fd 48895C24 		movq	%rbx, 16(%rsp)
 3852      10
 3853              	.LVL554:
1505:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp24 - MULTIPLY(z3, FIX(0.788749120));  /* c8+c10 */
 3854              		.loc 1 1505 0 discriminator 3
 3855 0102 4869F6C3 		imulq	$-6461, %rsi, %rsi
 3855      E6FFFF
 3856              	.LVL555:
1503:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 3857              		.loc 1 1503 0 discriminator 3
 3858 0109 4C69C291 		imulq	$-12399, %rdx, %r8
 3858      CFFFFF
1502:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += tmp25 - MULTIPLY(z1, FIX(1.513598477)); /* c6+c8 */
 3859              		.loc 1 1502 0 discriminator 3
 3860 0110 4D01EA   		addq	%r13, %r10
 3861 0113 4D01DA   		addq	%r11, %r10
 3862              	.LVL556:
1505:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += MULTIPLY(z2, FIX(1.944413522)) -        /* c2+c8 */
 3863              		.loc 1 1505 0 discriminator 3
 3864 0116 4C8D1C3E 		leaq	(%rsi,%rdi), %r11
1507:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
1508:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - MULTIPLY(z4, FIX(1.414213562));  /* c0 */
1509:fltk-1.3.4-1/jpeg/jidctint.c **** 
1510:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1511:fltk-1.3.4-1/jpeg/jidctint.c **** 
1512:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
1513:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
1514:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3865              		.loc 1 1514 0 discriminator 3
 3866 011a 0FBF7550 		movswl	80(%rbp), %esi
1506:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 3867              		.loc 1 1506 0 discriminator 3
 3868 011e 4869D27D 		imulq	$-11395, %rdx, %rdx
 3868      D3FFFF
 3869              	.LVL557:
1503:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 3870              		.loc 1 1503 0 discriminator 3
 3871 0125 4D01E8   		addq	%r13, %r8
 3872 0128 4F8D3C08 		leaq	(%r8,%r9), %r15
1505:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += MULTIPLY(z2, FIX(1.944413522)) -        /* c2+c8 */
 3873              		.loc 1 1505 0 discriminator 3
 3874 012c 4C895C24 		movq	%r11, 32(%rsp)
 3874      20
 3875              	.LVL558:
1512:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 3876              		.loc 1 1512 0 discriminator 3
 3877 0131 440FBF4D 		movswl	16(%rbp), %r9d
 3877      10
1513:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3878              		.loc 1 1513 0 discriminator 3
 3879 0136 440FBF5D 		movswl	48(%rbp), %r11d
 3879      30
1512:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 3880              		.loc 1 1512 0 discriminator 3
 3881 013b 450FAF4C 		imull	32(%r12), %r9d
 3881      2420
1513:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3882              		.loc 1 1513 0 discriminator 3
 3883 0141 450FAF5C 		imull	96(%r12), %r11d
 3883      2460
1506:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 3884              		.loc 1 1506 0 discriminator 3
 3885 0147 4801CA   		addq	%rcx, %rdx
1503:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 3886              		.loc 1 1503 0 discriminator 3
 3887 014a 4C897C24 		movq	%r15, 24(%rsp)
 3887      18
 3888              	.LVL559:
 3889              		.loc 1 1514 0 discriminator 3
 3890 014f 410FAFB4 		imull	160(%r12), %esi
 3890      24A00000 
 3890      00
1506:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 3891              		.loc 1 1506 0 discriminator 3
 3892 0158 488D0C3A 		leaq	(%rdx,%rdi), %rcx
1515:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 3893              		.loc 1 1515 0 discriminator 3
 3894 015c 0FBF5570 		movswl	112(%rbp), %edx
 3895 0160 410FAF94 		imull	224(%r12), %edx
 3895      24E00000 
 3895      00
1512:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 3896              		.loc 1 1512 0 discriminator 3
 3897 0169 4D63C9   		movslq	%r9d, %r9
 3898              	.LVL560:
1506:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 3899              		.loc 1 1506 0 discriminator 3
 3900 016c 48894C24 		movq	%rcx, 40(%rsp)
 3900      28
 3901              	.LVL561:
1513:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 3902              		.loc 1 1513 0 discriminator 3
 3903 0171 4D63DB   		movslq	%r11d, %r11
 3904              	.LVL562:
1516:fltk-1.3.4-1/jpeg/jidctint.c **** 
1517:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z2;
 3905              		.loc 1 1517 0 discriminator 3
 3906 0174 4B8D1C19 		leaq	(%r9,%r11), %rbx
1514:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 3907              		.loc 1 1514 0 discriminator 3
 3908 0178 4863F6   		movslq	%esi, %rsi
 3909              	.LVL563:
1518:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp11 + z3 + z4, FIX(0.398430003)); /* c9 */
1519:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.887983902));           /* c3-c9 */
1520:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(0.670361295));         /* c5-c9 */
 3910              		.loc 1 1520 0 discriminator 3
 3911 017b 4D8D0431 		leaq	(%r9,%rsi), %r8
1518:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp11 + z3 + z4, FIX(0.398430003)); /* c9 */
 3912              		.loc 1 1518 0 discriminator 3
 3913 017f 4C8D341E 		leaq	(%rsi,%rbx), %r14
1515:fltk-1.3.4-1/jpeg/jidctint.c **** 
 3914              		.loc 1 1515 0 discriminator 3
 3915 0183 4863D2   		movslq	%edx, %rdx
 3916              	.LVL564:
1521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp14 + MULTIPLY(z1 + z4, FIX(0.366151574)); /* c7-c9 */
 3917              		.loc 1 1521 0 discriminator 3
 3918 0186 4D8D3C11 		leaq	(%r9,%rdx), %r15
1518:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp11 + z3 + z4, FIX(0.398430003)); /* c9 */
 3919              		.loc 1 1518 0 discriminator 3
 3920 018a 4901D6   		addq	%rdx, %r14
1520:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp14 + MULTIPLY(z1 + z4, FIX(0.366151574)); /* c7-c9 */
 3921              		.loc 1 1520 0 discriminator 3
 3922 018d 4969F874 		imulq	$5492, %r8, %rdi
 3922      150000
1519:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(0.670361295));         /* c5-c9 */
 3923              		.loc 1 1519 0 discriminator 3
 3924 0194 4869DB6A 		imulq	$7274, %rbx, %rbx
 3924      1C0000
 3925              	.LVL565:
1518:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.887983902));           /* c3-c9 */
 3926              		.loc 1 1518 0 discriminator 3
 3927 019b 4D69F6C0 		imulq	$3264, %r14, %r14
 3927      0C0000
 3928              	.LVL566:
1522:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
 3929              		.loc 1 1522 0 discriminator 3
 3930 01a2 488D0C3B 		leaq	(%rbx,%rdi), %rcx
1521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
 3931              		.loc 1 1521 0 discriminator 3
 3932 01a6 4D69FFB8 		imulq	$3000, %r15, %r15
 3932      0B0000
 3933 01ad 4D01F7   		addq	%r14, %r15
 3934              	.LVL567:
 3935              		.loc 1 1522 0 discriminator 3
 3936 01b0 4E8D0439 		leaq	(%rcx,%r15), %r8
 3937 01b4 4969C976 		imulq	$-7562, %r9, %rcx
 3937      E2FFFF
1523:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(0.923107866));              /* c7+c5+c3-c1-2*c9 */
1524:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = tmp14 - MULTIPLY(z2 + z3, FIX(1.163011579)); /* c7+c9 */
 3938              		.loc 1 1524 0 discriminator 3
 3939 01bb 4D8D0C33 		leaq	(%r11,%rsi), %r9
 3940              	.LVL568:
 3941 01bf 4D69C9C9 		imulq	$-9527, %r9, %r9
 3941      DAFFFF
1522:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(0.923107866));              /* c7+c5+c3-c1-2*c9 */
 3942              		.loc 1 1522 0 discriminator 3
 3943 01c6 4C01C1   		addq	%r8, %rcx
 3944              	.LVL569:
1525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 + MULTIPLY(z2, FIX(2.073276588));        /* c1+c7+3*c9-c3 */
 3945              		.loc 1 1525 0 discriminator 3
 3946 01c9 4D69C358 		imulq	$16984, %r11, %r8
 3946      420000
1524:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 + MULTIPLY(z2, FIX(2.073276588));        /* c1+c7+3*c9-c3 */
 3947              		.loc 1 1524 0 discriminator 3
 3948 01d0 4D01F1   		addq	%r14, %r9
 3949              	.LVL570:
 3950              		.loc 1 1525 0 discriminator 3
 3951 01d3 4D01C8   		addq	%r9, %r8
 3952 01d6 4C01C3   		addq	%r8, %rbx
 3953              	.LVL571:
1526:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 - MULTIPLY(z3, FIX(1.192193623));        /* c3+c5-c7-c9 */
 3954              		.loc 1 1526 0 discriminator 3
 3955 01d9 4C69C6DA 		imulq	$-9766, %rsi, %r8
 3955      D9FFFF
1527:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z4, - FIX(1.798248910));       /* -(c1+c9) */
1528:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1;
1529:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z1 + MULTIPLY(z4, FIX(2.102458632));        /* c1+c5+c9-c7 */
1530:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += MULTIPLY(z2, - FIX(1.467221301)) +          /* -(c5+c9) */
 3956              		.loc 1 1530 0 discriminator 3
 3957 01e0 4869F60B 		imulq	$8203, %rsi, %rsi
 3957      200000
 3958              	.LVL572:
1526:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 - MULTIPLY(z3, FIX(1.192193623));        /* c3+c5-c7-c9 */
 3959              		.loc 1 1526 0 discriminator 3
 3960 01e7 4D01C8   		addq	%r9, %r8
 3961 01ea 4901F8   		addq	%rdi, %r8
 3962              	.LVL573:
1527:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z4, - FIX(1.798248910));       /* -(c1+c9) */
 3963              		.loc 1 1527 0 discriminator 3
 3964 01ed 498D3C13 		leaq	(%r11,%rdx), %rdi
 3965              		.loc 1 1530 0 discriminator 3
 3966 01f1 4D69DB0D 		imulq	$-12019, %r11, %r11
 3966      D1FFFF
 3967              	.LVL574:
1529:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += MULTIPLY(z2, - FIX(1.467221301)) +          /* -(c5+c9) */
 3968              		.loc 1 1529 0 discriminator 3
 3969 01f8 4C69CA47 		imulq	$17223, %rdx, %r9
 3969      430000
 3970              	.LVL575:
 3971              		.loc 1 1530 0 discriminator 3
 3972 01ff 4869D216 		imulq	$-13802, %rdx, %rdx
 3972      CAFFFF
 3973              	.LVL576:
 3974 0206 4901F3   		addq	%rsi, %r11
1531:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z3, FIX(1.001388905)) -            /* c1-c9 */
1532:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.684843907));             /* c3+c9 */
1533:fltk-1.3.4-1/jpeg/jidctint.c **** 
1534:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1535:fltk-1.3.4-1/jpeg/jidctint.c **** 
1536:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0]  = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
1537:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
1538:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 3975              		.loc 1 1538 0 discriminator 3
 3976 0209 488B7424 		movq	16(%rsp), %rsi
 3976      10
1527:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1;
 3977              		.loc 1 1527 0 discriminator 3
 3978 020e 4869FF75 		imulq	$-14731, %rdi, %rdi
 3978      C6FFFF
 3979              	.LVL577:
1530:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z3, FIX(1.001388905)) -            /* c1-c9 */
 3980              		.loc 1 1530 0 discriminator 3
 3981 0215 4901D3   		addq	%rdx, %r11
1536:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 3982              		.loc 1 1536 0 discriminator 3
 3983 0218 498D140A 		leaq	(%r10,%rcx), %rdx
1530:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z3, FIX(1.001388905)) -            /* c1-c9 */
 3984              		.loc 1 1530 0 discriminator 3
 3985 021c 4D01DE   		addq	%r11, %r14
 3986              	.LVL578:
1539:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
1540:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 3987              		.loc 1 1540 0 discriminator 3
 3988 021f 4C8B5C24 		movq	32(%rsp), %r11
 3988      20
1537:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 3989              		.loc 1 1537 0 discriminator 3
 3990 0224 4929CA   		subq	%rcx, %r10
 3991              	.LVL579:
1536:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 3992              		.loc 1 1536 0 discriminator 3
 3993 0227 48C1FA0B 		sarq	$11, %rdx
1537:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 3994              		.loc 1 1537 0 discriminator 3
 3995 022b 49C1FA0B 		sarq	$11, %r10
1536:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 3996              		.loc 1 1536 0 discriminator 3
 3997 022f 8910     		movl	%edx, (%rax)
1537:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 3998              		.loc 1 1537 0 discriminator 3
 3999 0231 44899040 		movl	%r10d, 320(%rax)
 3999      010000
1528:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z1 + MULTIPLY(z4, FIX(2.102458632));        /* c1+c5+c9-c7 */
 4000              		.loc 1 1528 0 discriminator 3
 4001 0238 4801FB   		addq	%rdi, %rbx
 4002              	.LVL580:
1529:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += MULTIPLY(z2, - FIX(1.467221301)) +          /* -(c5+c9) */
 4003              		.loc 1 1529 0 discriminator 3
 4004 023b 4C01CF   		addq	%r9, %rdi
 4005              	.LVL581:
1538:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 4006              		.loc 1 1538 0 discriminator 3
 4007 023e 488D141E 		leaq	(%rsi,%rbx), %rdx
1529:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += MULTIPLY(z2, - FIX(1.467221301)) +          /* -(c5+c9) */
 4008              		.loc 1 1529 0 discriminator 3
 4009 0242 4C01FF   		addq	%r15, %rdi
 4010              	.LVL582:
1541:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
1542:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 4011              		.loc 1 1542 0 discriminator 3
 4012 0245 4C8B7C24 		movq	24(%rsp), %r15
 4012      18
1538:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 4013              		.loc 1 1538 0 discriminator 3
 4014 024a 48C1FA0B 		sarq	$11, %rdx
 4015 024e 895020   		movl	%edx, 32(%rax)
1539:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 4016              		.loc 1 1539 0 discriminator 3
 4017 0251 4889F2   		movq	%rsi, %rdx
 4018 0254 4829DA   		subq	%rbx, %rdx
 4019 0257 48C1FA0B 		sarq	$11, %rdx
 4020 025b 89902001 		movl	%edx, 288(%rax)
 4020      0000
1540:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 4021              		.loc 1 1540 0 discriminator 3
 4022 0261 4B8D1403 		leaq	(%r11,%r8), %rdx
1541:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 4023              		.loc 1 1541 0 discriminator 3
 4024 0265 4D29C3   		subq	%r8, %r11
1540:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 4025              		.loc 1 1540 0 discriminator 3
 4026 0268 48C1FA0B 		sarq	$11, %rdx
 4027 026c 895040   		movl	%edx, 64(%rax)
1541:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 4028              		.loc 1 1541 0 discriminator 3
 4029 026f 4C89DA   		movq	%r11, %rdx
 4030 0272 48C1FA0B 		sarq	$11, %rdx
 4031 0276 89900001 		movl	%edx, 256(%rax)
 4031      0000
 4032              		.loc 1 1542 0 discriminator 3
 4033 027c 498D143F 		leaq	(%r15,%rdi), %rdx
 4034 0280 48C1FA0B 		sarq	$11, %rdx
1482:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4035              		.loc 1 1482 0 discriminator 3
 4036 0284 4883C502 		addq	$2, %rbp
 4037              	.LVL583:
 4038 0288 4983C404 		addq	$4, %r12
 4039              	.LVL584:
 4040              		.loc 1 1542 0 discriminator 3
 4041 028c 895060   		movl	%edx, 96(%rax)
1543:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 4042              		.loc 1 1543 0 discriminator 3
 4043 028f 4C89FA   		movq	%r15, %rdx
1482:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4044              		.loc 1 1482 0 discriminator 3
 4045 0292 4883C004 		addq	$4, %rax
 4046              	.LVL585:
 4047              		.loc 1 1543 0 discriminator 3
 4048 0296 4829FA   		subq	%rdi, %rdx
 4049 0299 48C1FA0B 		sarq	$11, %rdx
 4050 029d 8990DC00 		movl	%edx, 220(%rax)
 4050      0000
1544:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 4051              		.loc 1 1544 0 discriminator 3
 4052 02a3 488B4C24 		movq	40(%rsp), %rcx
 4052      28
 4053              	.LVL586:
 4054 02a8 4A8D1431 		leaq	(%rcx,%r14), %rdx
 4055 02ac 48C1FA0B 		sarq	$11, %rdx
 4056 02b0 89507C   		movl	%edx, 124(%rax)
1545:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 4057              		.loc 1 1545 0 discriminator 3
 4058 02b3 4889CA   		movq	%rcx, %rdx
 4059 02b6 4C29F2   		subq	%r14, %rdx
 4060 02b9 48C1FA0B 		sarq	$11, %rdx
 4061 02bd 8990BC00 		movl	%edx, 188(%rax)
 4061      0000
1546:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25, CONST_BITS-PASS1_BITS);
 4062              		.loc 1 1546 0 discriminator 3
 4063 02c3 48695424 		imulq	$22701, 8(%rsp), %rdx
 4063      08AD5800 
 4063      00
 4064 02cc 4929D5   		subq	%rdx, %r13
 4065              	.LVL587:
 4066 02cf 49C1FD0B 		sarq	$11, %r13
 4067              	.LVL588:
 4068 02d3 4489A89C 		movl	%r13d, 156(%rax)
 4068      000000
 4069              	.LVL589:
1482:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4070              		.loc 1 1482 0 discriminator 3
 4071 02da 483B4424 		cmpq	48(%rsp), %rax
 4071      30
 4072 02df 0F857BFD 		jne	.L95
 4072      FFFF
 4073 02e5 8B442438 		movl	56(%rsp), %eax
 4074              	.LVL590:
 4075 02e9 4C8B6C24 		movq	72(%rsp), %r13
 4075      48
1482:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4076              		.loc 1 1482 0 is_stmt 0
 4077 02ee 4C8D6424 		leaq	80(%rsp), %r12
 4077      50
 4078              	.LVL591:
 4079 02f3 48894424 		movq	%rax, 56(%rsp)
 4079      38
 4080              	.LVL592:
 4081 02f8 488B4424 		movq	64(%rsp), %rax
 4081      40
 4082 02fd 48894424 		movq	%rax, 8(%rsp)
 4082      08
1547:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1548:fltk-1.3.4-1/jpeg/jidctint.c **** 
1549:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 11 rows from work array, store into output array. */
1550:fltk-1.3.4-1/jpeg/jidctint.c **** 
1551:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
1552:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 11; ctr++) {
 4083              		.loc 1 1552 0 is_stmt 1
 4084 0302 488D8424 		leaq	432(%rsp), %rax
 4084      B0010000 
 4085 030a 48894424 		movq	%rax, 64(%rsp)
 4085      40
 4086              	.LVL593:
 4087 030f 90       		.p2align 4,,10
 4088              		.p2align 3
 4089              	.L96:
1553:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
1554:fltk-1.3.4-1/jpeg/jidctint.c **** 
1555:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1556:fltk-1.3.4-1/jpeg/jidctint.c **** 
1557:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1558:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
1559:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
1560:fltk-1.3.4-1/jpeg/jidctint.c **** 
1561:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
1562:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
 4090              		.loc 1 1562 0 discriminator 3
 4091 0310 49637C24 		movslq	16(%r12), %rdi
 4091      10
1563:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
 4092              		.loc 1 1563 0 discriminator 3
 4093 0315 4D634424 		movslq	24(%r12), %r8
 4093      18
 4094              	.LVL594:
1561:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
 4095              		.loc 1 1561 0 discriminator 3
 4096 031a 49634C24 		movslq	8(%r12), %rcx
 4096      08
1553:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 4097              		.loc 1 1553 0 discriminator 3
 4098 031f 488B4424 		movq	8(%rsp), %rax
 4098      08
 4099 0324 488B7424 		movq	56(%rsp), %rsi
 4099      38
1564:fltk-1.3.4-1/jpeg/jidctint.c **** 
1565:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(z2 - z3, FIX(2.546640132));     /* c2+c4 */
 4100              		.loc 1 1565 0 discriminator 3
 4101 0329 4889FA   		movq	%rdi, %rdx
1553:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4102              		.loc 1 1553 0 discriminator 3
 4103 032c 480330   		addq	(%rax), %rsi
 4104              	.LVL595:
1566:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2 - z1, FIX(0.430815045));     /* c2-c6 */
 4105              		.loc 1 1566 0 discriminator 3
 4106 032f 4989FA   		movq	%rdi, %r10
1565:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2 - z1, FIX(0.430815045));     /* c2-c6 */
 4107              		.loc 1 1565 0 discriminator 3
 4108 0332 4C29C2   		subq	%r8, %rdx
1558:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 4109              		.loc 1 1558 0 discriminator 3
 4110 0335 49630424 		movslq	(%r12), %rax
 4111              		.loc 1 1566 0 discriminator 3
 4112 0339 4929CA   		subq	%rcx, %r10
1565:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2 - z1, FIX(0.430815045));     /* c2-c6 */
 4113              		.loc 1 1565 0 discriminator 3
 4114 033c 4C69DA7E 		imulq	$20862, %rdx, %r11
 4114      510000
1567:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z1 + z3;
 4115              		.loc 1 1567 0 discriminator 3
 4116 0343 4A8D1401 		leaq	(%rcx,%r8), %rdx
1566:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z1 + z3;
 4117              		.loc 1 1566 0 discriminator 3
 4118 0347 4D69D2C9 		imulq	$3529, %r10, %r10
 4118      0D0000
1568:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z4, - FIX(1.155664402));        /* -(c2-c10) */
 4119              		.loc 1 1568 0 discriminator 3
 4120 034e 4C69CA05 		imulq	$-9467, %rdx, %r9
 4120      DBFFFF
1569:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 -= z2;
 4121              		.loc 1 1569 0 discriminator 3
 4122 0355 4829FA   		subq	%rdi, %rdx
1570:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 + MULTIPLY(z4, FIX(1.356927976));  /* c2 */
 4123              		.loc 1 1570 0 discriminator 3
 4124 0358 48895424 		movq	%rdx, 16(%rsp)
 4124      10
1558:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 4125              		.loc 1 1558 0 discriminator 3
 4126 035d 4883C010 		addq	$16, %rax
 4127              	.LVL596:
 4128              		.loc 1 1570 0 discriminator 3
 4129 0361 48C1E00D 		salq	$13, %rax
 4130              	.LVL597:
 4131 0365 4869D26C 		imulq	$11116, %rdx, %rdx
 4131      2B0000
 4132              	.LVL598:
1571:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp23 + tmp25 -
 4133              		.loc 1 1571 0 discriminator 3
 4134 036c 4869DFB4 		imulq	$-14924, %rdi, %rbx
 4134      C5FFFF
1572:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.821790775));          /* c2+c4+c10-c6 */
1573:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 += tmp25 + MULTIPLY(z3, FIX(2.115825087)); /* c4+c6 */
1574:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += tmp25 - MULTIPLY(z1, FIX(1.513598477)); /* c6+c8 */
1575:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
1576:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp24 - MULTIPLY(z3, FIX(0.788749120));  /* c8+c10 */
1577:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += MULTIPLY(z2, FIX(1.944413522)) -        /* c2+c8 */
 4135              		.loc 1 1577 0 discriminator 3
 4136 0373 4869FF39 		imulq	$15929, %rdi, %rdi
 4136      3E0000
 4137              	.LVL599:
1570:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp23 + tmp25 -
 4138              		.loc 1 1570 0 discriminator 3
 4139 037a 4801D0   		addq	%rdx, %rax
 4140              	.LVL600:
1571:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp23 + tmp25 -
 4141              		.loc 1 1571 0 discriminator 3
 4142 037d 4B8D1413 		leaq	(%r11,%r10), %rdx
1575:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp24 - MULTIPLY(z3, FIX(0.788749120));  /* c8+c10 */
 4143              		.loc 1 1575 0 discriminator 3
 4144 0381 4901C1   		addq	%rax, %r9
 4145              	.LVL601:
1571:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.821790775));          /* c2+c4+c10-c6 */
 4146              		.loc 1 1571 0 discriminator 3
 4147 0384 4801C2   		addq	%rax, %rdx
 4148 0387 4801D3   		addq	%rdx, %rbx
1573:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += tmp25 - MULTIPLY(z1, FIX(1.513598477)); /* c6+c8 */
 4149              		.loc 1 1573 0 discriminator 3
 4150 038a 4969D0B5 		imulq	$17333, %r8, %rdx
 4150      430000
1571:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.821790775));          /* c2+c4+c10-c6 */
 4151              		.loc 1 1571 0 discriminator 3
 4152 0391 48895C24 		movq	%rbx, 24(%rsp)
 4152      18
 4153              	.LVL602:
1578:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
1579:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - MULTIPLY(z4, FIX(1.414213562));  /* c0 */
1580:fltk-1.3.4-1/jpeg/jidctint.c **** 
1581:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1582:fltk-1.3.4-1/jpeg/jidctint.c **** 
1583:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
1584:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
1585:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 4154              		.loc 1 1585 0 discriminator 3
 4155 0396 49635C24 		movslq	20(%r12), %rbx
 4155      14
1576:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += MULTIPLY(z2, FIX(1.944413522)) -        /* c2+c8 */
 4156              		.loc 1 1576 0 discriminator 3
 4157 039b 4D69C0C3 		imulq	$-6461, %r8, %r8
 4157      E6FFFF
 4158              	.LVL603:
1573:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += tmp25 - MULTIPLY(z1, FIX(1.513598477)); /* c6+c8 */
 4159              		.loc 1 1573 0 discriminator 3
 4160 03a2 4801C2   		addq	%rax, %rdx
 4161 03a5 4C01DA   		addq	%r11, %rdx
 4162              	.LVL604:
1576:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += MULTIPLY(z2, FIX(1.944413522)) -        /* c2+c8 */
 4163              		.loc 1 1576 0 discriminator 3
 4164 03a8 4F8D3408 		leaq	(%r8,%r9), %r14
1574:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 4165              		.loc 1 1574 0 discriminator 3
 4166 03ac 4C69D991 		imulq	$-12399, %rcx, %r11
 4166      CFFFFF
1577:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 4167              		.loc 1 1577 0 discriminator 3
 4168 03b3 4869C97D 		imulq	$-11395, %rcx, %rcx
 4168      D3FFFF
 4169              	.LVL605:
1576:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += MULTIPLY(z2, FIX(1.944413522)) -        /* c2+c8 */
 4170              		.loc 1 1576 0 discriminator 3
 4171 03ba 4C897424 		movq	%r14, 40(%rsp)
 4171      28
 4172              	.LVL606:
1584:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 4173              		.loc 1 1584 0 discriminator 3
 4174 03bf 4D637424 		movslq	12(%r12), %r14
 4174      0C
1574:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 4175              		.loc 1 1574 0 discriminator 3
 4176 03c4 4901C3   		addq	%rax, %r11
1577:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 4177              		.loc 1 1577 0 discriminator 3
 4178 03c7 4801F9   		addq	%rdi, %rcx
1574:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 4179              		.loc 1 1574 0 discriminator 3
 4180 03ca 4F8D3C13 		leaq	(%r11,%r10), %r15
1577:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 4181              		.loc 1 1577 0 discriminator 3
 4182 03ce 4A8D3C09 		leaq	(%rcx,%r9), %rdi
1583:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 4183              		.loc 1 1583 0 discriminator 3
 4184 03d2 4D634C24 		movslq	4(%r12), %r9
 4184      04
 4185              	.LVL607:
1586:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 4186              		.loc 1 1586 0 discriminator 3
 4187 03d7 49634C24 		movslq	28(%r12), %rcx
 4187      1C
 4188              	.LVL608:
1574:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 += tmp25;
 4189              		.loc 1 1574 0 discriminator 3
 4190 03dc 4C897C24 		movq	%r15, 32(%rsp)
 4190      20
 4191              	.LVL609:
1577:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z1, FIX(1.390975730));         /* c4+c10 */
 4192              		.loc 1 1577 0 discriminator 3
 4193 03e1 48897C24 		movq	%rdi, 48(%rsp)
 4193      30
 4194              	.LVL610:
1587:fltk-1.3.4-1/jpeg/jidctint.c **** 
1588:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z2;
 4195              		.loc 1 1588 0 discriminator 3
 4196 03e6 4F8D1431 		leaq	(%r9,%r14), %r10
 4197              	.LVL611:
1589:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp11 + z3 + z4, FIX(0.398430003)); /* c9 */
1590:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.887983902));           /* c3-c9 */
1591:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(0.670361295));         /* c5-c9 */
 4198              		.loc 1 1591 0 discriminator 3
 4199 03ea 4D8D0419 		leaq	(%r9,%rbx), %r8
1592:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp14 + MULTIPLY(z1 + z4, FIX(0.366151574)); /* c7-c9 */
 4200              		.loc 1 1592 0 discriminator 3
 4201 03ee 4D8D3C09 		leaq	(%r9,%rcx), %r15
1589:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp11 + z3 + z4, FIX(0.398430003)); /* c9 */
 4202              		.loc 1 1589 0 discriminator 3
 4203 03f2 4A8D2C13 		leaq	(%rbx,%r10), %rbp
1591:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp14 + MULTIPLY(z1 + z4, FIX(0.366151574)); /* c7-c9 */
 4204              		.loc 1 1591 0 discriminator 3
 4205 03f6 4969F874 		imulq	$5492, %r8, %rdi
 4205      150000
1589:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp11 + z3 + z4, FIX(0.398430003)); /* c9 */
 4206              		.loc 1 1589 0 discriminator 3
 4207 03fd 4801CD   		addq	%rcx, %rbp
1590:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(0.670361295));         /* c5-c9 */
 4208              		.loc 1 1590 0 discriminator 3
 4209 0400 4D69D26A 		imulq	$7274, %r10, %r10
 4209      1C0000
 4210              	.LVL612:
1589:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11, FIX(0.887983902));           /* c3-c9 */
 4211              		.loc 1 1589 0 discriminator 3
 4212 0407 4869EDC0 		imulq	$3264, %rbp, %rbp
 4212      0C0000
 4213              	.LVL613:
 4214              		.loc 1 1592 0 discriminator 3
 4215 040e 4D69FFB8 		imulq	$3000, %r15, %r15
 4215      0B0000
1593:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
 4216              		.loc 1 1593 0 discriminator 3
 4217 0415 4D8D1C3A 		leaq	(%r10,%rdi), %r11
1592:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
 4218              		.loc 1 1592 0 discriminator 3
 4219 0419 4901EF   		addq	%rbp, %r15
 4220              	.LVL614:
 4221              		.loc 1 1593 0 discriminator 3
 4222 041c 4F8D043B 		leaq	(%r11,%r15), %r8
 4223 0420 4D69D976 		imulq	$-7562, %r9, %r11
 4223      E2FFFF
1594:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(0.923107866));              /* c7+c5+c3-c1-2*c9 */
1595:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = tmp14 - MULTIPLY(z2 + z3, FIX(1.163011579)); /* c7+c9 */
 4224              		.loc 1 1595 0 discriminator 3
 4225 0427 4D8D0C1E 		leaq	(%r14,%rbx), %r9
 4226              	.LVL615:
1593:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(0.923107866));              /* c7+c5+c3-c1-2*c9 */
 4227              		.loc 1 1593 0 discriminator 3
 4228 042b 4D01C3   		addq	%r8, %r11
 4229              	.LVL616:
 4230              		.loc 1 1595 0 discriminator 3
 4231 042e 4D69C9C9 		imulq	$-9527, %r9, %r9
 4231      DAFFFF
1596:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 + MULTIPLY(z2, FIX(2.073276588));        /* c1+c7+3*c9-c3 */
 4232              		.loc 1 1596 0 discriminator 3
 4233 0435 4D69C658 		imulq	$16984, %r14, %r8
 4233      420000
1595:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 + MULTIPLY(z2, FIX(2.073276588));        /* c1+c7+3*c9-c3 */
 4234              		.loc 1 1595 0 discriminator 3
 4235 043c 4901E9   		addq	%rbp, %r9
 4236              	.LVL617:
 4237              		.loc 1 1596 0 discriminator 3
 4238 043f 4D01C8   		addq	%r9, %r8
 4239 0442 4D01C2   		addq	%r8, %r10
 4240              	.LVL618:
1597:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 - MULTIPLY(z3, FIX(1.192193623));        /* c3+c5-c7-c9 */
 4241              		.loc 1 1597 0 discriminator 3
 4242 0445 4C69C3DA 		imulq	$-9766, %rbx, %r8
 4242      D9FFFF
1598:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z4, - FIX(1.798248910));       /* -(c1+c9) */
1599:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1;
1600:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z1 + MULTIPLY(z4, FIX(2.102458632));        /* c1+c5+c9-c7 */
1601:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += MULTIPLY(z2, - FIX(1.467221301)) +          /* -(c5+c9) */
 4243              		.loc 1 1601 0 discriminator 3
 4244 044c 4869DB0B 		imulq	$8203, %rbx, %rbx
 4244      200000
 4245              	.LVL619:
1597:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 - MULTIPLY(z3, FIX(1.192193623));        /* c3+c5-c7-c9 */
 4246              		.loc 1 1597 0 discriminator 3
 4247 0453 4D01C8   		addq	%r9, %r8
 4248 0456 4901F8   		addq	%rdi, %r8
 4249              	.LVL620:
1598:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z4, - FIX(1.798248910));       /* -(c1+c9) */
 4250              		.loc 1 1598 0 discriminator 3
 4251 0459 498D3C0E 		leaq	(%r14,%rcx), %rdi
 4252              		.loc 1 1601 0 discriminator 3
 4253 045d 4D69F60D 		imulq	$-12019, %r14, %r14
 4253      D1FFFF
 4254              	.LVL621:
1600:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += MULTIPLY(z2, - FIX(1.467221301)) +          /* -(c5+c9) */
 4255              		.loc 1 1600 0 discriminator 3
 4256 0464 4C69C947 		imulq	$17223, %rcx, %r9
 4256      430000
 4257              	.LVL622:
 4258              		.loc 1 1601 0 discriminator 3
 4259 046b 4869C916 		imulq	$-13802, %rcx, %rcx
 4259      CAFFFF
 4260              	.LVL623:
 4261 0472 4901DE   		addq	%rbx, %r14
1602:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z3, FIX(1.001388905)) -            /* c1-c9 */
1603:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.684843907));             /* c3+c9 */
1604:fltk-1.3.4-1/jpeg/jidctint.c **** 
1605:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1606:fltk-1.3.4-1/jpeg/jidctint.c **** 
1607:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
1608:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1609:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1610:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
1611:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1612:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1613:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 4262              		.loc 1 1613 0 discriminator 3
 4263 0475 488B5C24 		movq	24(%rsp), %rbx
 4263      18
1601:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z3, FIX(1.001388905)) -            /* c1-c9 */
 4264              		.loc 1 1601 0 discriminator 3
 4265 047a 4901CE   		addq	%rcx, %r14
1607:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4266              		.loc 1 1607 0 discriminator 3
 4267 047d 4A8D0C1A 		leaq	(%rdx,%r11), %rcx
1610:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4268              		.loc 1 1610 0 discriminator 3
 4269 0481 4C29DA   		subq	%r11, %rdx
 4270              	.LVL624:
 4271 0484 48C1FA12 		sarq	$18, %rdx
1601:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z3, FIX(1.001388905)) -            /* c1-c9 */
 4272              		.loc 1 1601 0 discriminator 3
 4273 0488 4C01F5   		addq	%r14, %rbp
 4274              	.LVL625:
1614:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1615:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1616:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
1617:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1618:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1619:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 4275              		.loc 1 1619 0 discriminator 3
 4276 048b 4C8B7424 		movq	40(%rsp), %r14
 4276      28
1607:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4277              		.loc 1 1607 0 discriminator 3
 4278 0490 48C1F912 		sarq	$18, %rcx
1610:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4279              		.loc 1 1610 0 discriminator 3
 4280 0494 81E2FF03 		andl	$1023, %edx
 4280      0000
1607:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4281              		.loc 1 1607 0 discriminator 3
 4282 049a 81E1FF03 		andl	$1023, %ecx
 4282      0000
 4283 04a0 410FB64C 		movzbl	0(%r13,%rcx), %ecx
 4283      0D00
1598:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1;
 4284              		.loc 1 1598 0 discriminator 3
 4285 04a6 4869FF75 		imulq	$-14731, %rdi, %rdi
 4285      C6FFFF
 4286              	.LVL626:
1607:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4287              		.loc 1 1607 0 discriminator 3
 4288 04ad 880E     		movb	%cl, (%rsi)
1610:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4289              		.loc 1 1610 0 discriminator 3
 4290 04af 410FB654 		movzbl	0(%r13,%rdx), %edx
 4290      1500
1599:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z1 + MULTIPLY(z4, FIX(2.102458632));        /* c1+c5+c9-c7 */
 4291              		.loc 1 1599 0 discriminator 3
 4292 04b5 4901FA   		addq	%rdi, %r10
 4293              	.LVL627:
1600:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += MULTIPLY(z2, - FIX(1.467221301)) +          /* -(c5+c9) */
 4294              		.loc 1 1600 0 discriminator 3
 4295 04b8 4C01CF   		addq	%r9, %rdi
 4296              	.LVL628:
 4297 04bb 4C01FF   		addq	%r15, %rdi
 4298              	.LVL629:
1620:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1621:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1622:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
1623:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1624:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1625:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
 4299              		.loc 1 1625 0 discriminator 3
 4300 04be 4C8B7C24 		movq	32(%rsp), %r15
 4300      20
1610:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4301              		.loc 1 1610 0 discriminator 3
 4302 04c3 88560A   		movb	%dl, 10(%rsi)
1613:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4303              		.loc 1 1613 0 discriminator 3
 4304 04c6 4A8D1413 		leaq	(%rbx,%r10), %rdx
1616:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4305              		.loc 1 1616 0 discriminator 3
 4306 04ca 4C29D3   		subq	%r10, %rbx
1613:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4307              		.loc 1 1613 0 discriminator 3
 4308 04cd 48C1FA12 		sarq	$18, %rdx
 4309 04d1 81E2FF03 		andl	$1023, %edx
 4309      0000
 4310 04d7 410FB654 		movzbl	0(%r13,%rdx), %edx
 4310      1500
 4311 04dd 885601   		movb	%dl, 1(%rsi)
1616:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4312              		.loc 1 1616 0 discriminator 3
 4313 04e0 4889DA   		movq	%rbx, %rdx
 4314 04e3 48C1FA12 		sarq	$18, %rdx
 4315 04e7 81E2FF03 		andl	$1023, %edx
 4315      0000
 4316 04ed 410FB654 		movzbl	0(%r13,%rdx), %edx
 4316      1500
 4317 04f3 885609   		movb	%dl, 9(%rsi)
1619:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4318              		.loc 1 1619 0 discriminator 3
 4319 04f6 4B8D1406 		leaq	(%r14,%r8), %rdx
1622:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4320              		.loc 1 1622 0 discriminator 3
 4321 04fa 4D29C6   		subq	%r8, %r14
1619:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4322              		.loc 1 1619 0 discriminator 3
 4323 04fd 48C1FA12 		sarq	$18, %rdx
 4324 0501 81E2FF03 		andl	$1023, %edx
 4324      0000
 4325 0507 410FB654 		movzbl	0(%r13,%rdx), %edx
 4325      1500
 4326 050d 885602   		movb	%dl, 2(%rsi)
1622:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4327              		.loc 1 1622 0 discriminator 3
 4328 0510 4C89F2   		movq	%r14, %rdx
 4329 0513 48C1FA12 		sarq	$18, %rdx
1626:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1627:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1628:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
1629:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1630:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1631:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
1632:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1633:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1634:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
1635:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1636:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1637:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25,
1638:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1639:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1640:fltk-1.3.4-1/jpeg/jidctint.c **** 
1641:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 4330              		.loc 1 1641 0 discriminator 3
 4331 0517 4983C420 		addq	$32, %r12
 4332              	.LVL630:
1622:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4333              		.loc 1 1622 0 discriminator 3
 4334 051b 81E2FF03 		andl	$1023, %edx
 4334      0000
 4335 0521 410FB654 		movzbl	0(%r13,%rdx), %edx
 4335      1500
 4336 0527 885608   		movb	%dl, 8(%rsi)
1625:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4337              		.loc 1 1625 0 discriminator 3
 4338 052a 498D143F 		leaq	(%r15,%rdi), %rdx
1628:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4339              		.loc 1 1628 0 discriminator 3
 4340 052e 4929FF   		subq	%rdi, %r15
1625:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4341              		.loc 1 1625 0 discriminator 3
 4342 0531 48C1FA12 		sarq	$18, %rdx
 4343 0535 81E2FF03 		andl	$1023, %edx
 4343      0000
 4344 053b 410FB654 		movzbl	0(%r13,%rdx), %edx
 4344      1500
 4345 0541 885603   		movb	%dl, 3(%rsi)
 4346              	.LVL631:
1628:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4347              		.loc 1 1628 0 discriminator 3
 4348 0544 4C89FA   		movq	%r15, %rdx
1631:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4349              		.loc 1 1631 0 discriminator 3
 4350 0547 488B7C24 		movq	48(%rsp), %rdi
 4350      30
 4351              	.LVL632:
1628:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4352              		.loc 1 1628 0 discriminator 3
 4353 054c 48C1FA12 		sarq	$18, %rdx
 4354 0550 48834424 		addq	$8, 8(%rsp)
 4354      0808
 4355 0556 81E2FF03 		andl	$1023, %edx
 4355      0000
 4356 055c 410FB654 		movzbl	0(%r13,%rdx), %edx
 4356      1500
 4357 0562 885607   		movb	%dl, 7(%rsi)
1631:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4358              		.loc 1 1631 0 discriminator 3
 4359 0565 488D142F 		leaq	(%rdi,%rbp), %rdx
1634:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4360              		.loc 1 1634 0 discriminator 3
 4361 0569 4829EF   		subq	%rbp, %rdi
1631:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4362              		.loc 1 1631 0 discriminator 3
 4363 056c 48C1FA12 		sarq	$18, %rdx
 4364 0570 81E2FF03 		andl	$1023, %edx
 4364      0000
 4365 0576 410FB654 		movzbl	0(%r13,%rdx), %edx
 4365      1500
 4366 057c 885604   		movb	%dl, 4(%rsi)
1634:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4367              		.loc 1 1634 0 discriminator 3
 4368 057f 4889FA   		movq	%rdi, %rdx
 4369 0582 48C1FA12 		sarq	$18, %rdx
 4370 0586 81E2FF03 		andl	$1023, %edx
 4370      0000
 4371 058c 410FB654 		movzbl	0(%r13,%rdx), %edx
 4371      1500
 4372 0592 885606   		movb	%dl, 6(%rsi)
1637:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4373              		.loc 1 1637 0 discriminator 3
 4374 0595 48695424 		imulq	$22701, 16(%rsp), %rdx
 4374      10AD5800 
 4374      00
 4375 059e 4829D0   		subq	%rdx, %rax
 4376              	.LVL633:
 4377 05a1 48C1F812 		sarq	$18, %rax
 4378              	.LVL634:
 4379 05a5 25FF0300 		andl	$1023, %eax
 4379      00
1552:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 4380              		.loc 1 1552 0 discriminator 3
 4381 05aa 4C3B6424 		cmpq	64(%rsp), %r12
 4381      40
1637:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4382              		.loc 1 1637 0 discriminator 3
 4383 05af 410FB644 		movzbl	0(%r13,%rax), %eax
 4383      0500
 4384 05b5 884605   		movb	%al, 5(%rsi)
1552:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 4385              		.loc 1 1552 0 discriminator 3
 4386 05b8 0F8552FD 		jne	.L96
 4386      FFFF
1642:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1643:fltk-1.3.4-1/jpeg/jidctint.c **** }
 4387              		.loc 1 1643 0
 4388 05be 488B8424 		movq	440(%rsp), %rax
 4388      B8010000 
 4389 05c6 64483304 		xorq	%fs:40, %rax
 4389      25280000 
 4389      00
 4390 05cf 7512     		jne	.L101
 4391 05d1 4881C4C8 		addq	$456, %rsp
 4391      010000
 4392              		.cfi_remember_state
 4393              		.cfi_def_cfa_offset 56
 4394 05d8 5B       		popq	%rbx
 4395              		.cfi_def_cfa_offset 48
 4396 05d9 5D       		popq	%rbp
 4397              		.cfi_def_cfa_offset 40
 4398              	.LVL635:
 4399 05da 415C     		popq	%r12
 4400              		.cfi_def_cfa_offset 32
 4401              	.LVL636:
 4402 05dc 415D     		popq	%r13
 4403              		.cfi_def_cfa_offset 24
 4404 05de 415E     		popq	%r14
 4405              		.cfi_def_cfa_offset 16
 4406 05e0 415F     		popq	%r15
 4407              		.cfi_def_cfa_offset 8
 4408 05e2 C3       		ret
 4409              	.LVL637:
 4410              	.L101:
 4411              		.cfi_restore_state
 4412 05e3 E8000000 		call	__stack_chk_fail
 4412      00
 4413              	.LVL638:
 4414              		.cfi_endproc
 4415              	.LFE71:
 4417              		.section	.text.unlikely.jpeg_idct_11x11
 4418              	.LCOLDE10:
 4419              		.section	.text.jpeg_idct_11x11
 4420              	.LHOTE10:
 4421              		.section	.text.unlikely.jpeg_idct_12x12,"ax",@progbits
 4422              	.LCOLDB11:
 4423              		.section	.text.jpeg_idct_12x12,"ax",@progbits
 4424              	.LHOTB11:
 4425              		.p2align 4,,15
 4426              		.globl	jpeg_idct_12x12
 4428              	jpeg_idct_12x12:
 4429              	.LFB72:
1644:fltk-1.3.4-1/jpeg/jidctint.c **** 
1645:fltk-1.3.4-1/jpeg/jidctint.c **** 
1646:fltk-1.3.4-1/jpeg/jidctint.c **** /*
1647:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
1648:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 12x12 output block.
1649:fltk-1.3.4-1/jpeg/jidctint.c ****  *
1650:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 15 multiplications in the 1-D kernel.
1651:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/24).
1652:fltk-1.3.4-1/jpeg/jidctint.c ****  */
1653:fltk-1.3.4-1/jpeg/jidctint.c **** 
1654:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
1655:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_12x12 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
1656:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
1657:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
1658:fltk-1.3.4-1/jpeg/jidctint.c **** {
 4430              		.loc 1 1658 0
 4431              		.cfi_startproc
 4432              	.LVL639:
 4433 0000 4157     		pushq	%r15
 4434              		.cfi_def_cfa_offset 16
 4435              		.cfi_offset 15, -16
 4436 0002 4156     		pushq	%r14
 4437              		.cfi_def_cfa_offset 24
 4438              		.cfi_offset 14, -24
 4439 0004 4155     		pushq	%r13
 4440              		.cfi_def_cfa_offset 32
 4441              		.cfi_offset 13, -32
 4442 0006 4154     		pushq	%r12
 4443              		.cfi_def_cfa_offset 40
 4444              		.cfi_offset 12, -40
 4445 0008 55       		pushq	%rbp
 4446              		.cfi_def_cfa_offset 48
 4447              		.cfi_offset 6, -48
 4448 0009 53       		pushq	%rbx
 4449              		.cfi_def_cfa_offset 56
 4450              		.cfi_offset 3, -56
 4451 000a 4889D5   		movq	%rdx, %rbp
 4452 000d 4881ECE8 		subq	$488, %rsp
 4452      010000
 4453              		.cfi_def_cfa_offset 544
1659:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
1660:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
1661:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
1662:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
1663:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
1664:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
1665:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
1666:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
1667:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
1668:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*12];	/* buffers data between passes */
1669:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
1670:fltk-1.3.4-1/jpeg/jidctint.c **** 
1671:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
1672:fltk-1.3.4-1/jpeg/jidctint.c **** 
1673:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
1674:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 4454              		.loc 1 1674 0
 4455 0014 488B5E58 		movq	88(%rsi), %rbx
1658:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 4456              		.loc 1 1658 0
 4457 0018 64488B04 		movq	%fs:40, %rax
 4457      25280000 
 4457      00
 4458 0021 48898424 		movq	%rax, 472(%rsp)
 4458      D8010000 
 4459 0029 31C0     		xorl	%eax, %eax
1666:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 4460              		.loc 1 1666 0
 4461 002b 488B87B8 		movq	440(%rdi), %rax
 4461      010000
1675:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 4462              		.loc 1 1675 0
 4463 0032 4C8D5C24 		leaq	80(%rsp), %r11
 4463      50
1658:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 4464              		.loc 1 1658 0
 4465 0037 48894C24 		movq	%rcx, 64(%rsp)
 4465      40
 4466 003c 44894424 		movl	%r8d, 56(%rsp)
 4466      38
1666:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 4467              		.loc 1 1666 0
 4468 0041 4C8DA080 		leaq	128(%rax), %r12
 4468      000000
 4469              	.LVL640:
1676:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 4470              		.loc 1 1676 0
 4471 0048 488D4424 		leaq	112(%rsp), %rax
 4471      70
 4472 004d 4C896424 		movq	%r12, 72(%rsp)
 4472      48
 4473 0052 48894424 		movq	%rax, 48(%rsp)
 4473      30
 4474              	.LVL641:
 4475 0057 660F1F84 		.p2align 4,,10
 4475      00000000 
 4475      00
 4476              		.p2align 3
 4477              	.L103:
1677:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1678:fltk-1.3.4-1/jpeg/jidctint.c **** 
1679:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
1680:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
1681:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1682:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += ONE << (CONST_BITS-PASS1_BITS-1);
1683:fltk-1.3.4-1/jpeg/jidctint.c **** 
1684:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 4478              		.loc 1 1684 0 discriminator 3
 4479 0060 0FBF5540 		movswl	64(%rbp), %edx
1679:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 4480              		.loc 1 1679 0 discriminator 3
 4481 0064 0FBF4500 		movswl	0(%rbp), %eax
 4482              		.loc 1 1684 0 discriminator 3
 4483 0068 0FAF9380 		imull	128(%rbx), %edx
 4483      000000
1679:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 4484              		.loc 1 1679 0 discriminator 3
 4485 006f 0FAF03   		imull	(%rbx), %eax
1685:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
1686:fltk-1.3.4-1/jpeg/jidctint.c **** 
1687:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z4;
1688:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
1689:fltk-1.3.4-1/jpeg/jidctint.c **** 
1690:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 4486              		.loc 1 1690 0 discriminator 3
 4487 0072 0FBF4D20 		movswl	32(%rbp), %ecx
 4488 0076 0FAF4B40 		imull	64(%rbx), %ecx
1684:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
 4489              		.loc 1 1684 0 discriminator 3
 4490 007a 4863D2   		movslq	%edx, %rdx
1685:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
 4491              		.loc 1 1685 0 discriminator 3
 4492 007d 4869D231 		imulq	$10033, %rdx, %rdx
 4492      270000
1679:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 4493              		.loc 1 1679 0 discriminator 3
 4494 0084 4898     		cltq
 4495              	.LVL642:
1680:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 4496              		.loc 1 1680 0 discriminator 3
 4497 0086 48C1E00D 		salq	$13, %rax
 4498              	.LVL643:
1682:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4499              		.loc 1 1682 0 discriminator 3
 4500 008a 48050004 		addq	$1024, %rax
 4500      0000
 4501              	.LVL644:
 4502              		.loc 1 1690 0 discriminator 3
 4503 0090 4863C9   		movslq	%ecx, %rcx
1688:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4504              		.loc 1 1688 0 discriminator 3
 4505 0093 4889C6   		movq	%rax, %rsi
1687:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
 4506              		.loc 1 1687 0 discriminator 3
 4507 0096 4C8D0410 		leaq	(%rax,%rdx), %r8
 4508              	.LVL645:
1688:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4509              		.loc 1 1688 0 discriminator 3
 4510 009a 4829D6   		subq	%rdx, %rsi
 4511              	.LVL646:
1691:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z1, FIX(1.366025404)); /* c2 */
1692:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
1693:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 4512              		.loc 1 1693 0 discriminator 3
 4513 009d 0FBF5560 		movswl	96(%rbp), %edx
 4514              	.LVL647:
 4515 00a1 0FAF93C0 		imull	192(%rbx), %edx
 4515      000000
1691:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z1, FIX(1.366025404)); /* c2 */
 4516              		.loc 1 1691 0 discriminator 3
 4517 00a8 4869F9B6 		imulq	$11190, %rcx, %rdi
 4517      2B0000
 4518              	.LVL648:
1692:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 4519              		.loc 1 1692 0 discriminator 3
 4520 00af 48C1E10D 		salq	$13, %rcx
 4521              	.LVL649:
1694:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
1695:fltk-1.3.4-1/jpeg/jidctint.c **** 
1696:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z2;
 4522              		.loc 1 1696 0 discriminator 3
 4523 00b3 4989C9   		movq	%rcx, %r9
1693:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
 4524              		.loc 1 1693 0 discriminator 3
 4525 00b6 4863D2   		movslq	%edx, %rdx
 4526              	.LVL650:
1694:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
 4527              		.loc 1 1694 0 discriminator 3
 4528 00b9 48C1E20D 		salq	$13, %rdx
 4529              	.LVL651:
 4530              		.loc 1 1696 0 discriminator 3
 4531 00bd 4929D1   		subq	%rdx, %r9
 4532              	.LVL652:
1697:fltk-1.3.4-1/jpeg/jidctint.c **** 
1698:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = z3 + tmp12;
 4533              		.loc 1 1698 0 discriminator 3
 4534 00c0 4E8D3C08 		leaq	(%rax,%r9), %r15
1699:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 4535              		.loc 1 1699 0 discriminator 3
 4536 00c4 4C29C8   		subq	%r9, %rax
 4537              	.LVL653:
 4538 00c7 48894424 		movq	%rax, 8(%rsp)
 4538      08
 4539              	.LVL654:
1700:fltk-1.3.4-1/jpeg/jidctint.c **** 
1701:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 + z2;
 4540              		.loc 1 1701 0 discriminator 3
 4541 00cc 488D0417 		leaq	(%rdi,%rdx), %rax
 4542              	.LVL655:
1702:fltk-1.3.4-1/jpeg/jidctint.c **** 
1703:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
1704:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
1705:fltk-1.3.4-1/jpeg/jidctint.c **** 
1706:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 - z1 - z2;
 4543              		.loc 1 1706 0 discriminator 3
 4544 00d0 4829CF   		subq	%rcx, %rdi
 4545              	.LVL656:
1698:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 4546              		.loc 1 1698 0 discriminator 3
 4547 00d3 4C893C24 		movq	%r15, (%rsp)
 4548              	.LVL657:
1707:fltk-1.3.4-1/jpeg/jidctint.c **** 
1708:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 + tmp12;
1709:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
1710:fltk-1.3.4-1/jpeg/jidctint.c **** 
1711:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1712:fltk-1.3.4-1/jpeg/jidctint.c **** 
1713:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
1714:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
1715:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
1716:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 4549              		.loc 1 1716 0 discriminator 3
 4550 00d7 0FBF4D70 		movswl	112(%rbp), %ecx
 4551              	.LVL658:
1703:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 4552              		.loc 1 1703 0 discriminator 3
 4553 00db 4D8D1400 		leaq	(%r8,%rax), %r10
1704:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4554              		.loc 1 1704 0 discriminator 3
 4555 00df 4929C0   		subq	%rax, %r8
 4556              	.LVL659:
1706:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4557              		.loc 1 1706 0 discriminator 3
 4558 00e2 4889F8   		movq	%rdi, %rax
 4559              	.LVL660:
 4560 00e5 4829D0   		subq	%rdx, %rax
 4561              	.LVL661:
1715:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 4562              		.loc 1 1715 0 discriminator 3
 4563 00e8 0FBF7D50 		movswl	80(%rbp), %edi
1714:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 4564              		.loc 1 1714 0 discriminator 3
 4565 00ec 0FBF5530 		movswl	48(%rbp), %edx
 4566              	.LVL662:
1708:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
 4567              		.loc 1 1708 0 discriminator 3
 4568 00f0 4C8D3C06 		leaq	(%rsi,%rax), %r15
 4569              	.LVL663:
1709:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4570              		.loc 1 1709 0 discriminator 3
 4571 00f4 4829C6   		subq	%rax, %rsi
 4572              	.LVL664:
1713:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 4573              		.loc 1 1713 0 discriminator 3
 4574 00f7 0FBF4510 		movswl	16(%rbp), %eax
 4575              	.LVL665:
 4576 00fb 0FAF4320 		imull	32(%rbx), %eax
1715:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 4577              		.loc 1 1715 0 discriminator 3
 4578 00ff 0FAFBBA0 		imull	160(%rbx), %edi
 4578      000000
 4579              		.loc 1 1716 0 discriminator 3
 4580 0106 0FAF8BE0 		imull	224(%rbx), %ecx
 4580      000000
1714:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 4581              		.loc 1 1714 0 discriminator 3
 4582 010d 0FAF5360 		imull	96(%rbx), %edx
1704:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4583              		.loc 1 1704 0 discriminator 3
 4584 0111 4C894424 		movq	%r8, 24(%rsp)
 4584      18
 4585              	.LVL666:
1709:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4586              		.loc 1 1709 0 discriminator 3
 4587 0116 48897424 		movq	%rsi, 32(%rsp)
 4587      20
 4588              	.LVL667:
1703:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 4589              		.loc 1 1703 0 discriminator 3
 4590 011b 4C895424 		movq	%r10, 16(%rsp)
 4590      10
 4591              	.LVL668:
1713:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 4592              		.loc 1 1713 0 discriminator 3
 4593 0120 4898     		cltq
 4594              	.LVL669:
1715:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 4595              		.loc 1 1715 0 discriminator 3
 4596 0122 4863FF   		movslq	%edi, %rdi
1717:fltk-1.3.4-1/jpeg/jidctint.c **** 
1718:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z2, FIX(1.306562965));                  /* c3 */
1719:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
1720:fltk-1.3.4-1/jpeg/jidctint.c **** 
1721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
1722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
1723:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
1724:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 4597              		.loc 1 1724 0 discriminator 3
 4598 0125 4C8D0CC0 		leaq	(%rax,%rax,8), %r9
1721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
 4599              		.loc 1 1721 0 discriminator 3
 4600 0129 4C8D0438 		leaq	(%rax,%rdi), %r8
1716:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4601              		.loc 1 1716 0 discriminator 3
 4602 012d 4863C9   		movslq	%ecx, %rcx
1714:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 4603              		.loc 1 1714 0 discriminator 3
 4604 0130 4863D2   		movslq	%edx, %rdx
 4605              	.LVL670:
 4606              		.loc 1 1724 0 discriminator 3
 4607 0133 4D89CA   		movq	%r9, %r10
1722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
 4608              		.loc 1 1722 0 discriminator 3
 4609 0136 4A8D3401 		leaq	(%rcx,%r8), %rsi
 4610              		.loc 1 1724 0 discriminator 3
 4611 013a 49C1E208 		salq	$8, %r10
1723:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 4612              		.loc 1 1723 0 discriminator 3
 4613 013e 4D69C05B 		imulq	$2139, %r8, %r8
 4613      080000
 4614              		.loc 1 1724 0 discriminator 3
 4615 0145 4D29CA   		subq	%r9, %r10
1722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
 4616              		.loc 1 1722 0 discriminator 3
 4617 0148 4869F68D 		imulq	$7053, %rsi, %rsi
 4617      1B0000
1718:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
 4618              		.loc 1 1718 0 discriminator 3
 4619 014f 4C69F2CF 		imulq	$10703, %rdx, %r14
 4619      290000
 4620              	.LVL671:
1723:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 4621              		.loc 1 1723 0 discriminator 3
 4622 0156 4901F0   		addq	%rsi, %r8
 4623              		.loc 1 1724 0 discriminator 3
 4624 0159 4F8D2406 		leaq	(%r14,%r8), %r12
1719:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4625              		.loc 1 1719 0 discriminator 3
 4626 015d 4C69EAAF 		imulq	$-4433, %rdx, %r13
 4626      EEFFFF
 4627              	.LVL672:
 4628              		.loc 1 1724 0 discriminator 3
 4629 0164 4D01E2   		addq	%r12, %r10
 4630              	.LVL673:
1725:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 + z4, - FIX(1.045510580));           /* -(c7+c11) */
 4631              		.loc 1 1725 0 discriminator 3
 4632 0167 4C8D240F 		leaq	(%rdi,%rcx), %r12
 4633 016b 4D69E48B 		imulq	$-8565, %r12, %r12
 4633      DEFFFF
 4634              	.LVL674:
1726:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 + tmp14 - MULTIPLY(z3, FIX(1.478575242)); /* c1+c5-c7-c11 */
 4635              		.loc 1 1726 0 discriminator 3
 4636 0172 4F8D4C25 		leaq	0(%r13,%r12), %r9
 4636      00
 4637 0177 4C894C24 		movq	%r9, 40(%rsp)
 4637      28
 4638 017c 4C69CFB0 		imulq	$-12112, %rdi, %r9
 4638      D0FFFF
 4639 0183 4C034C24 		addq	40(%rsp), %r9
 4639      28
 4640 0188 4D01C8   		addq	%r9, %r8
 4641              	.LVL675:
1727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 4642              		.loc 1 1727 0 discriminator 3
 4643 018b 4989F1   		movq	%rsi, %r9
1728:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
1729:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
1730:fltk-1.3.4-1/jpeg/jidctint.c **** 
1731:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= z4;
1732:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= z3;
 4644              		.loc 1 1732 0 discriminator 3
 4645 018e 4829FA   		subq	%rdi, %rdx
 4646              	.LVL676:
1727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 4647              		.loc 1 1727 0 discriminator 3
 4648 0191 4D29F1   		subq	%r14, %r9
1733:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX_0_541196100);                 /* c9 */
1734:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
1735:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
1736:fltk-1.3.4-1/jpeg/jidctint.c **** 
1737:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1738:fltk-1.3.4-1/jpeg/jidctint.c **** 
1739:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0]  = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
1740:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
1741:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
1742:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
1743:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
1744:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
1745:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 4649              		.loc 1 1745 0 discriminator 3
 4650 0194 488B7C24 		movq	32(%rsp), %rdi
 4650      20
 4651              	.LVL677:
1727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 4652              		.loc 1 1727 0 discriminator 3
 4653 0199 4C69F1C6 		imulq	$12998, %rcx, %r14
 4653      320000
 4654              	.LVL678:
 4655 01a0 4D01CE   		addq	%r9, %r14
1728:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 4656              		.loc 1 1728 0 discriminator 3
 4657 01a3 4C69C85C 		imulq	$-5540, %rax, %r9
 4657      EAFFFF
1731:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= z3;
 4658              		.loc 1 1731 0 discriminator 3
 4659 01aa 4829C8   		subq	%rcx, %rax
 4660              	.LVL679:
1727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 4661              		.loc 1 1727 0 discriminator 3
 4662 01ad 4D01F4   		addq	%r14, %r12
 4663              	.LVL680:
1741:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 4664              		.loc 1 1741 0 discriminator 3
 4665 01b0 4C8B3424 		movq	(%rsp), %r14
1728:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 4666              		.loc 1 1728 0 discriminator 3
 4667 01b4 4D01CD   		addq	%r9, %r13
 4668              	.LVL681:
 4669 01b7 4C69C98C 		imulq	$-16244, %rcx, %r9
 4669      C0FFFF
1733:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
 4670              		.loc 1 1733 0 discriminator 3
 4671 01be 488D0C10 		leaq	(%rax,%rdx), %rcx
 4672              	.LVL682:
1735:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4673              		.loc 1 1735 0 discriminator 3
 4674 01c2 4869D2DF 		imulq	$-15137, %rdx, %rdx
 4674      C4FFFF
1733:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
 4675              		.loc 1 1733 0 discriminator 3
 4676 01c9 4869C951 		imulq	$4433, %rcx, %rcx
 4676      110000
1728:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 4677              		.loc 1 1728 0 discriminator 3
 4678 01d0 4D01CD   		addq	%r9, %r13
1739:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 4679              		.loc 1 1739 0 discriminator 3
 4680 01d3 4C8B4C24 		movq	16(%rsp), %r9
 4680      10
1728:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 4681              		.loc 1 1728 0 discriminator 3
 4682 01d8 4901F5   		addq	%rsi, %r13
 4683              	.LVL683:
1734:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
 4684              		.loc 1 1734 0 discriminator 3
 4685 01db 4869C07E 		imulq	$6270, %rax, %rax
 4685      180000
 4686              	.LVL684:
 4687 01e2 4801C8   		addq	%rcx, %rax
 4688              	.LVL685:
1735:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4689              		.loc 1 1735 0 discriminator 3
 4690 01e5 4801D1   		addq	%rdx, %rcx
 4691              	.LVL686:
1739:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 4692              		.loc 1 1739 0 discriminator 3
 4693 01e8 4C89CA   		movq	%r9, %rdx
 4694 01eb 4C01D2   		addq	%r10, %rdx
 4695 01ee 48C1FA0B 		sarq	$11, %rdx
 4696 01f2 418913   		movl	%edx, (%r11)
1740:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 4697              		.loc 1 1740 0 discriminator 3
 4698 01f5 4C89CA   		movq	%r9, %rdx
 4699 01f8 4C29D2   		subq	%r10, %rdx
 4700 01fb 48C1FA0B 		sarq	$11, %rdx
 4701 01ff 41899360 		movl	%edx, 352(%r11)
 4701      010000
1741:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 4702              		.loc 1 1741 0 discriminator 3
 4703 0206 4C89F2   		movq	%r14, %rdx
 4704 0209 4801C2   		addq	%rax, %rdx
 4705 020c 48C1FA0B 		sarq	$11, %rdx
 4706 0210 41895320 		movl	%edx, 32(%r11)
1742:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 4707              		.loc 1 1742 0 discriminator 3
 4708 0214 4C89F2   		movq	%r14, %rdx
 4709 0217 4829C2   		subq	%rax, %rdx
 4710 021a 4889D0   		movq	%rdx, %rax
 4711              	.LVL687:
 4712 021d 48C1F80B 		sarq	$11, %rax
 4713 0221 41898340 		movl	%eax, 320(%r11)
 4713      010000
1743:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 4714              		.loc 1 1743 0 discriminator 3
 4715 0228 4B8D0407 		leaq	(%r15,%r8), %rax
1744:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 4716              		.loc 1 1744 0 discriminator 3
 4717 022c 4D29C7   		subq	%r8, %r15
 4718              	.LVL688:
1743:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 4719              		.loc 1 1743 0 discriminator 3
 4720 022f 48C1F80B 		sarq	$11, %rax
 4721 0233 41894340 		movl	%eax, 64(%r11)
1744:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 4722              		.loc 1 1744 0 discriminator 3
 4723 0237 4C89F8   		movq	%r15, %rax
 4724 023a 48C1F80B 		sarq	$11, %rax
 4725 023e 41898320 		movl	%eax, 288(%r11)
 4725      010000
 4726              		.loc 1 1745 0 discriminator 3
 4727 0245 4A8D0427 		leaq	(%rdi,%r12), %rax
1746:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 4728              		.loc 1 1746 0 discriminator 3
 4729 0249 4C29E7   		subq	%r12, %rdi
1745:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 4730              		.loc 1 1745 0 discriminator 3
 4731 024c 48C1F80B 		sarq	$11, %rax
 4732 0250 41894360 		movl	%eax, 96(%r11)
1747:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 4733              		.loc 1 1747 0 discriminator 3
 4734 0254 488B7424 		movq	8(%rsp), %rsi
 4734      08
1746:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 4735              		.loc 1 1746 0 discriminator 3
 4736 0259 4889F8   		movq	%rdi, %rax
 4737 025c 48C1F80B 		sarq	$11, %rax
1748:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
1749:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 4738              		.loc 1 1749 0 discriminator 3
 4739 0260 4C8B4424 		movq	24(%rsp), %r8
 4739      18
 4740              	.LVL689:
1746:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 4741              		.loc 1 1746 0 discriminator 3
 4742 0265 41898300 		movl	%eax, 256(%r11)
 4742      010000
1747:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 4743              		.loc 1 1747 0 discriminator 3
 4744 026c 4889F0   		movq	%rsi, %rax
 4745 026f 4801C8   		addq	%rcx, %rax
 4746 0272 48C1F80B 		sarq	$11, %rax
1676:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4747              		.loc 1 1676 0 discriminator 3
 4748 0276 4883C502 		addq	$2, %rbp
 4749              	.LVL690:
 4750 027a 4883C304 		addq	$4, %rbx
 4751              	.LVL691:
1747:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 4752              		.loc 1 1747 0 discriminator 3
 4753 027e 41898380 		movl	%eax, 128(%r11)
 4753      000000
1748:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 4754              		.loc 1 1748 0 discriminator 3
 4755 0285 4889F0   		movq	%rsi, %rax
1676:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4756              		.loc 1 1676 0 discriminator 3
 4757 0288 4983C304 		addq	$4, %r11
 4758              	.LVL692:
1748:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 4759              		.loc 1 1748 0 discriminator 3
 4760 028c 4829C8   		subq	%rcx, %rax
 4761 028f 48C1F80B 		sarq	$11, %rax
 4762 0293 418983DC 		movl	%eax, 220(%r11)
 4762      000000
 4763              		.loc 1 1749 0 discriminator 3
 4764 029a 4B8D0428 		leaq	(%r8,%r13), %rax
 4765 029e 48C1F80B 		sarq	$11, %rax
 4766 02a2 4189839C 		movl	%eax, 156(%r11)
 4766      000000
1750:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 4767              		.loc 1 1750 0 discriminator 3
 4768 02a9 4C89C0   		movq	%r8, %rax
 4769 02ac 4C29E8   		subq	%r13, %rax
 4770 02af 48C1F80B 		sarq	$11, %rax
 4771 02b3 418983BC 		movl	%eax, 188(%r11)
 4771      000000
 4772              	.LVL693:
1676:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4773              		.loc 1 1676 0 discriminator 3
 4774 02ba 4C3B5C24 		cmpq	48(%rsp), %r11
 4774      30
 4775 02bf 0F859BFD 		jne	.L103
 4775      FFFF
 4776 02c5 8B442438 		movl	56(%rsp), %eax
 4777 02c9 4C8B6424 		movq	72(%rsp), %r12
 4777      48
 4778              	.LVL694:
1676:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 4779              		.loc 1 1676 0 is_stmt 0
 4780 02ce 488D5C24 		leaq	80(%rsp), %rbx
 4780      50
 4781              	.LVL695:
 4782 02d3 48894424 		movq	%rax, 56(%rsp)
 4782      38
 4783              	.LVL696:
 4784 02d8 488B4424 		movq	64(%rsp), %rax
 4784      40
 4785 02dd 48890424 		movq	%rax, (%rsp)
1751:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1752:fltk-1.3.4-1/jpeg/jidctint.c **** 
1753:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 12 rows from work array, store into output array. */
1754:fltk-1.3.4-1/jpeg/jidctint.c **** 
1755:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
1756:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 12; ctr++) {
 4786              		.loc 1 1756 0 is_stmt 1
 4787 02e1 488D8424 		leaq	464(%rsp), %rax
 4787      D0010000 
 4788 02e9 48894424 		movq	%rax, 64(%rsp)
 4788      40
 4789              	.LVL697:
 4790 02ee 6690     		.p2align 4,,10
 4791              		.p2align 3
 4792              	.L104:
1757:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 4793              		.loc 1 1757 0 discriminator 3
 4794 02f0 488B0424 		movq	(%rsp), %rax
1758:fltk-1.3.4-1/jpeg/jidctint.c **** 
1759:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1760:fltk-1.3.4-1/jpeg/jidctint.c **** 
1761:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1762:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
1763:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
1764:fltk-1.3.4-1/jpeg/jidctint.c **** 
1765:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 4795              		.loc 1 1765 0 discriminator 3
 4796 02f4 48634B10 		movslq	16(%rbx), %rcx
1757:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 4797              		.loc 1 1757 0 discriminator 3
 4798 02f8 488B5424 		movq	56(%rsp), %rdx
 4798      38
1766:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
1767:fltk-1.3.4-1/jpeg/jidctint.c **** 
1768:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z4;
1769:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
1770:fltk-1.3.4-1/jpeg/jidctint.c **** 
1771:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
 4799              		.loc 1 1771 0 discriminator 3
 4800 02fd 4C634308 		movslq	8(%rbx), %r8
1772:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z1, FIX(1.366025404)); /* c2 */
1773:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
1774:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 4801              		.loc 1 1774 0 discriminator 3
 4802 0301 48637B18 		movslq	24(%rbx), %rdi
1775:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
1776:fltk-1.3.4-1/jpeg/jidctint.c **** 
1777:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z2;
1778:fltk-1.3.4-1/jpeg/jidctint.c **** 
1779:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = z3 + tmp12;
1780:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
1781:fltk-1.3.4-1/jpeg/jidctint.c **** 
1782:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 + z2;
1783:fltk-1.3.4-1/jpeg/jidctint.c **** 
1784:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
1785:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
1786:fltk-1.3.4-1/jpeg/jidctint.c **** 
1787:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 - z1 - z2;
1788:fltk-1.3.4-1/jpeg/jidctint.c **** 
1789:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 + tmp12;
1790:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
1791:fltk-1.3.4-1/jpeg/jidctint.c **** 
1792:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1793:fltk-1.3.4-1/jpeg/jidctint.c **** 
1794:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
1795:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
1796:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 4803              		.loc 1 1796 0 discriminator 3
 4804 0305 4C635B14 		movslq	20(%rbx), %r11
1757:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4805              		.loc 1 1757 0 discriminator 3
 4806 0309 480310   		addq	(%rax), %rdx
 4807              	.LVL698:
1762:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 4808              		.loc 1 1762 0 discriminator 3
 4809 030c 486303   		movslq	(%rbx), %rax
1766:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4810              		.loc 1 1766 0 discriminator 3
 4811 030f 4869C931 		imulq	$10033, %rcx, %rcx
 4811      270000
1775:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4812              		.loc 1 1775 0 discriminator 3
 4813 0316 48C1E70D 		salq	$13, %rdi
1762:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 4814              		.loc 1 1762 0 discriminator 3
 4815 031a 4883C010 		addq	$16, %rax
 4816              	.LVL699:
1763:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4817              		.loc 1 1763 0 discriminator 3
 4818 031e 48C1E00D 		salq	$13, %rax
 4819              	.LVL700:
1769:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4820              		.loc 1 1769 0 discriminator 3
 4821 0322 4889C6   		movq	%rax, %rsi
1768:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
 4822              		.loc 1 1768 0 discriminator 3
 4823 0325 4C8D0C08 		leaq	(%rax,%rcx), %r9
 4824              	.LVL701:
1769:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4825              		.loc 1 1769 0 discriminator 3
 4826 0329 4829CE   		subq	%rcx, %rsi
 4827              	.LVL702:
1772:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 4828              		.loc 1 1772 0 discriminator 3
 4829 032c 4969C8B6 		imulq	$11190, %r8, %rcx
 4829      2B0000
 4830              	.LVL703:
1773:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 4831              		.loc 1 1773 0 discriminator 3
 4832 0333 49C1E00D 		salq	$13, %r8
 4833              	.LVL704:
1777:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4834              		.loc 1 1777 0 discriminator 3
 4835 0337 4D89C2   		movq	%r8, %r10
 4836 033a 4929FA   		subq	%rdi, %r10
 4837              	.LVL705:
1779:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 4838              		.loc 1 1779 0 discriminator 3
 4839 033d 4E8D3C10 		leaq	(%rax,%r10), %r15
1780:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4840              		.loc 1 1780 0 discriminator 3
 4841 0341 4C29D0   		subq	%r10, %rax
 4842              	.LVL706:
 4843 0344 48894424 		movq	%rax, 16(%rsp)
 4843      10
 4844              	.LVL707:
1782:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4845              		.loc 1 1782 0 discriminator 3
 4846 0349 488D0439 		leaq	(%rcx,%rdi), %rax
 4847              	.LVL708:
1787:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4848              		.loc 1 1787 0 discriminator 3
 4849 034d 4C29C1   		subq	%r8, %rcx
 4850              	.LVL709:
1779:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 4851              		.loc 1 1779 0 discriminator 3
 4852 0350 4C897C24 		movq	%r15, 8(%rsp)
 4852      08
 4853              	.LVL710:
1784:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 4854              		.loc 1 1784 0 discriminator 3
 4855 0355 4D8D1401 		leaq	(%r9,%rax), %r10
1785:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4856              		.loc 1 1785 0 discriminator 3
 4857 0359 4929C1   		subq	%rax, %r9
 4858              	.LVL711:
1787:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4859              		.loc 1 1787 0 discriminator 3
 4860 035c 4889C8   		movq	%rcx, %rax
 4861              	.LVL712:
 4862 035f 4829F8   		subq	%rdi, %rax
 4863              	.LVL713:
1795:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 4864              		.loc 1 1795 0 discriminator 3
 4865 0362 48634B0C 		movslq	12(%rbx), %rcx
1785:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4866              		.loc 1 1785 0 discriminator 3
 4867 0366 4C894C24 		movq	%r9, 32(%rsp)
 4867      20
 4868              	.LVL714:
1789:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
 4869              		.loc 1 1789 0 discriminator 3
 4870 036b 4C8D3C06 		leaq	(%rsi,%rax), %r15
 4871              	.LVL715:
1790:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4872              		.loc 1 1790 0 discriminator 3
 4873 036f 4829C6   		subq	%rax, %rsi
 4874              	.LVL716:
1794:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 4875              		.loc 1 1794 0 discriminator 3
 4876 0372 48634304 		movslq	4(%rbx), %rax
 4877              	.LVL717:
1784:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 4878              		.loc 1 1784 0 discriminator 3
 4879 0376 4C895424 		movq	%r10, 24(%rsp)
 4879      18
 4880              	.LVL718:
1797:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 4881              		.loc 1 1797 0 discriminator 3
 4882 037b 4C63531C 		movslq	28(%rbx), %r10
 4883              	.LVL719:
1790:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4884              		.loc 1 1790 0 discriminator 3
 4885 037f 48897424 		movq	%rsi, 40(%rsp)
 4885      28
 4886              	.LVL720:
1798:fltk-1.3.4-1/jpeg/jidctint.c **** 
1799:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z2, FIX(1.306562965));                  /* c3 */
 4887              		.loc 1 1799 0 discriminator 3
 4888 0384 4C69F1CF 		imulq	$10703, %rcx, %r14
 4888      290000
 4889              	.LVL721:
1800:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
1801:fltk-1.3.4-1/jpeg/jidctint.c **** 
1802:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 4890              		.loc 1 1802 0 discriminator 3
 4891 038b 4A8D3C18 		leaq	(%rax,%r11), %rdi
 4892              	.LVL722:
1803:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
1804:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
1805:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 4893              		.loc 1 1805 0 discriminator 3
 4894 038f 4C8D04C0 		leaq	(%rax,%rax,8), %r8
 4895              	.LVL723:
1800:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
 4896              		.loc 1 1800 0 discriminator 3
 4897 0393 4C69E9AF 		imulq	$-4433, %rcx, %r13
 4897      EEFFFF
 4898              	.LVL724:
1803:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
 4899              		.loc 1 1803 0 discriminator 3
 4900 039a 498D343A 		leaq	(%r10,%rdi), %rsi
 4901              		.loc 1 1805 0 discriminator 3
 4902 039e 4D89C1   		movq	%r8, %r9
1804:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 4903              		.loc 1 1804 0 discriminator 3
 4904 03a1 4869FF5B 		imulq	$2139, %rdi, %rdi
 4904      080000
 4905              	.LVL725:
 4906              		.loc 1 1805 0 discriminator 3
 4907 03a8 49C1E108 		salq	$8, %r9
 4908 03ac 4D29C1   		subq	%r8, %r9
1803:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
 4909              		.loc 1 1803 0 discriminator 3
 4910 03af 4869F68D 		imulq	$7053, %rsi, %rsi
 4910      1B0000
 4911              	.LVL726:
1804:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 4912              		.loc 1 1804 0 discriminator 3
 4913 03b6 4801F7   		addq	%rsi, %rdi
 4914              	.LVL727:
 4915              		.loc 1 1805 0 discriminator 3
 4916 03b9 498D2C3E 		leaq	(%r14,%rdi), %rbp
 4917 03bd 4901E9   		addq	%rbp, %r9
 4918              	.LVL728:
1806:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 + z4, - FIX(1.045510580));           /* -(c7+c11) */
 4919              		.loc 1 1806 0 discriminator 3
 4920 03c0 4B8D2C13 		leaq	(%r11,%r10), %rbp
 4921 03c4 4869ED8B 		imulq	$-8565, %rbp, %rbp
 4921      DEFFFF
 4922              	.LVL729:
1807:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 + tmp14 - MULTIPLY(z3, FIX(1.478575242)); /* c1+c5-c7-c11 */
 4923              		.loc 1 1807 0 discriminator 3
 4924 03cb 4D8D442D 		leaq	0(%r13,%rbp), %r8
 4924      00
 4925 03d0 4C894424 		movq	%r8, 48(%rsp)
 4925      30
 4926 03d5 4D69C3B0 		imulq	$-12112, %r11, %r8
 4926      D0FFFF
 4927 03dc 4C034424 		addq	48(%rsp), %r8
 4927      30
 4928 03e1 4C01C7   		addq	%r8, %rdi
 4929              	.LVL730:
1808:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 4930              		.loc 1 1808 0 discriminator 3
 4931 03e4 4989F0   		movq	%rsi, %r8
 4932 03e7 4D29F0   		subq	%r14, %r8
 4933 03ea 4D69F2C6 		imulq	$12998, %r10, %r14
 4933      320000
 4934              	.LVL731:
 4935 03f1 4D01C6   		addq	%r8, %r14
1809:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 4936              		.loc 1 1809 0 discriminator 3
 4937 03f4 4C69C05C 		imulq	$-5540, %rax, %r8
 4937      EAFFFF
1808:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 4938              		.loc 1 1808 0 discriminator 3
 4939 03fb 4C01F5   		addq	%r14, %rbp
 4940              	.LVL732:
1810:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
1811:fltk-1.3.4-1/jpeg/jidctint.c **** 
1812:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= z4;
1813:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= z3;
1814:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX_0_541196100);                 /* c9 */
1815:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
1816:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
1817:fltk-1.3.4-1/jpeg/jidctint.c **** 
1818:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1819:fltk-1.3.4-1/jpeg/jidctint.c **** 
1820:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
1821:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1822:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1823:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
1824:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1825:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1826:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 4941              		.loc 1 1826 0 discriminator 3
 4942 03fe 4C8B7424 		movq	8(%rsp), %r14
 4942      08
1809:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 4943              		.loc 1 1809 0 discriminator 3
 4944 0403 4D01C5   		addq	%r8, %r13
 4945              	.LVL733:
 4946 0406 4D69C28C 		imulq	$-16244, %r10, %r8
 4946      C0FFFF
1812:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= z3;
 4947              		.loc 1 1812 0 discriminator 3
 4948 040d 4C29D0   		subq	%r10, %rax
 4949              	.LVL734:
1813:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX_0_541196100);                 /* c9 */
 4950              		.loc 1 1813 0 discriminator 3
 4951 0410 4C29D9   		subq	%r11, %rcx
 4952              	.LVL735:
1820:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4953              		.loc 1 1820 0 discriminator 3
 4954 0413 4C8B5424 		movq	24(%rsp), %r10
 4954      18
 4955              	.LVL736:
1809:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 4956              		.loc 1 1809 0 discriminator 3
 4957 0418 4D01C5   		addq	%r8, %r13
 4958 041b 4901F5   		addq	%rsi, %r13
 4959              	.LVL737:
1814:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
 4960              		.loc 1 1814 0 discriminator 3
 4961 041e 488D3408 		leaq	(%rax,%rcx), %rsi
1816:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4962              		.loc 1 1816 0 discriminator 3
 4963 0422 4869C9DF 		imulq	$-15137, %rcx, %rcx
 4963      C4FFFF
 4964              	.LVL738:
1814:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
 4965              		.loc 1 1814 0 discriminator 3
 4966 0429 4869F651 		imulq	$4433, %rsi, %rsi
 4966      110000
 4967              	.LVL739:
1815:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
 4968              		.loc 1 1815 0 discriminator 3
 4969 0430 4869C07E 		imulq	$6270, %rax, %rax
 4969      180000
 4970              	.LVL740:
 4971 0437 4801F0   		addq	%rsi, %rax
 4972              	.LVL741:
1816:fltk-1.3.4-1/jpeg/jidctint.c **** 
 4973              		.loc 1 1816 0 discriminator 3
 4974 043a 4801CE   		addq	%rcx, %rsi
 4975              	.LVL742:
1820:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4976              		.loc 1 1820 0 discriminator 3
 4977 043d 4B8D0C0A 		leaq	(%r10,%r9), %rcx
1823:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4978              		.loc 1 1823 0 discriminator 3
 4979 0441 4D29CA   		subq	%r9, %r10
1820:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4980              		.loc 1 1820 0 discriminator 3
 4981 0444 48C1F912 		sarq	$18, %rcx
 4982 0448 81E1FF03 		andl	$1023, %ecx
 4982      0000
 4983 044e 410FB60C 		movzbl	(%r12,%rcx), %ecx
 4983      0C
 4984 0453 880A     		movb	%cl, (%rdx)
1823:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4985              		.loc 1 1823 0 discriminator 3
 4986 0455 4C89D1   		movq	%r10, %rcx
 4987 0458 48C1F912 		sarq	$18, %rcx
 4988 045c 81E1FF03 		andl	$1023, %ecx
 4988      0000
 4989 0462 410FB60C 		movzbl	(%r12,%rcx), %ecx
 4989      0C
 4990 0467 884A0B   		movb	%cl, 11(%rdx)
 4991              		.loc 1 1826 0 discriminator 3
 4992 046a 498D0C06 		leaq	(%r14,%rax), %rcx
1827:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1828:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1829:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
 4993              		.loc 1 1829 0 discriminator 3
 4994 046e 4929C6   		subq	%rax, %r14
 4995 0471 4C89F0   		movq	%r14, %rax
 4996              	.LVL743:
1826:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 4997              		.loc 1 1826 0 discriminator 3
 4998 0474 48C1F912 		sarq	$18, %rcx
 4999              		.loc 1 1829 0 discriminator 3
 5000 0478 48C1F812 		sarq	$18, %rax
1826:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5001              		.loc 1 1826 0 discriminator 3
 5002 047c 81E1FF03 		andl	$1023, %ecx
 5002      0000
 5003              		.loc 1 1829 0 discriminator 3
 5004 0482 25FF0300 		andl	$1023, %eax
 5004      00
1826:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5005              		.loc 1 1826 0 discriminator 3
 5006 0487 410FB60C 		movzbl	(%r12,%rcx), %ecx
 5006      0C
 5007 048c 884A01   		movb	%cl, 1(%rdx)
 5008              		.loc 1 1829 0 discriminator 3
 5009 048f 410FB604 		movzbl	(%r12,%rax), %eax
 5009      04
 5010 0494 88420A   		movb	%al, 10(%rdx)
1830:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1831:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1832:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 5011              		.loc 1 1832 0 discriminator 3
 5012 0497 498D043F 		leaq	(%r15,%rdi), %rax
1833:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1834:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1835:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
 5013              		.loc 1 1835 0 discriminator 3
 5014 049b 4929FF   		subq	%rdi, %r15
 5015              	.LVL744:
1832:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5016              		.loc 1 1832 0 discriminator 3
 5017 049e 48C1F812 		sarq	$18, %rax
 5018 04a2 25FF0300 		andl	$1023, %eax
 5018      00
 5019 04a7 410FB604 		movzbl	(%r12,%rax), %eax
 5019      04
 5020 04ac 884202   		movb	%al, 2(%rdx)
 5021              		.loc 1 1835 0 discriminator 3
 5022 04af 4C89F8   		movq	%r15, %rax
 5023 04b2 48C1F812 		sarq	$18, %rax
 5024 04b6 25FF0300 		andl	$1023, %eax
 5024      00
 5025 04bb 410FB604 		movzbl	(%r12,%rax), %eax
 5025      04
 5026 04c0 884209   		movb	%al, 9(%rdx)
1836:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1837:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1838:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
 5027              		.loc 1 1838 0 discriminator 3
 5028 04c3 488B4C24 		movq	40(%rsp), %rcx
 5028      28
1839:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1840:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1841:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
1842:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1843:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1844:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
 5029              		.loc 1 1844 0 discriminator 3
 5030 04c8 488B7C24 		movq	16(%rsp), %rdi
 5030      10
 5031              	.LVL745:
1845:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1846:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1847:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
1848:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1849:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1850:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp15,
 5032              		.loc 1 1850 0 discriminator 3
 5033 04cd 4C8B4C24 		movq	32(%rsp), %r9
 5033      20
 5034              	.LVL746:
1838:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5035              		.loc 1 1838 0 discriminator 3
 5036 04d2 488D0429 		leaq	(%rcx,%rbp), %rax
1841:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5037              		.loc 1 1841 0 discriminator 3
 5038 04d6 4829E9   		subq	%rbp, %rcx
1838:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5039              		.loc 1 1838 0 discriminator 3
 5040 04d9 48C1F812 		sarq	$18, %rax
 5041 04dd 25FF0300 		andl	$1023, %eax
 5041      00
 5042 04e2 410FB604 		movzbl	(%r12,%rax), %eax
 5042      04
 5043 04e7 884203   		movb	%al, 3(%rdx)
1841:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5044              		.loc 1 1841 0 discriminator 3
 5045 04ea 4889C8   		movq	%rcx, %rax
 5046 04ed 48C1F812 		sarq	$18, %rax
 5047 04f1 25FF0300 		andl	$1023, %eax
 5047      00
 5048 04f6 410FB604 		movzbl	(%r12,%rax), %eax
 5048      04
 5049 04fb 884208   		movb	%al, 8(%rdx)
1844:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5050              		.loc 1 1844 0 discriminator 3
 5051 04fe 4889F8   		movq	%rdi, %rax
 5052 0501 4801F0   		addq	%rsi, %rax
 5053 0504 48C1F812 		sarq	$18, %rax
 5054 0508 25FF0300 		andl	$1023, %eax
 5054      00
1851:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1852:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1853:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp15,
1854:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
1855:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
1856:fltk-1.3.4-1/jpeg/jidctint.c **** 
1857:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 5055              		.loc 1 1857 0 discriminator 3
 5056 050d 4883C320 		addq	$32, %rbx
 5057              	.LVL747:
 5058 0511 48830424 		addq	$8, (%rsp)
 5058      08
1844:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5059              		.loc 1 1844 0 discriminator 3
 5060 0516 410FB604 		movzbl	(%r12,%rax), %eax
 5060      04
 5061 051b 884204   		movb	%al, 4(%rdx)
1847:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5062              		.loc 1 1847 0 discriminator 3
 5063 051e 4889F8   		movq	%rdi, %rax
 5064 0521 4829F0   		subq	%rsi, %rax
 5065 0524 48C1F812 		sarq	$18, %rax
 5066 0528 25FF0300 		andl	$1023, %eax
 5066      00
 5067 052d 410FB604 		movzbl	(%r12,%rax), %eax
 5067      04
 5068 0532 884207   		movb	%al, 7(%rdx)
1850:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5069              		.loc 1 1850 0 discriminator 3
 5070 0535 4B8D0429 		leaq	(%r9,%r13), %rax
 5071 0539 48C1F812 		sarq	$18, %rax
 5072 053d 25FF0300 		andl	$1023, %eax
 5072      00
 5073 0542 410FB604 		movzbl	(%r12,%rax), %eax
 5073      04
 5074 0547 884205   		movb	%al, 5(%rdx)
1853:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5075              		.loc 1 1853 0 discriminator 3
 5076 054a 4C89C8   		movq	%r9, %rax
 5077 054d 4C29E8   		subq	%r13, %rax
 5078 0550 48C1F812 		sarq	$18, %rax
 5079 0554 25FF0300 		andl	$1023, %eax
 5079      00
1756:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 5080              		.loc 1 1756 0 discriminator 3
 5081 0559 483B5C24 		cmpq	64(%rsp), %rbx
 5081      40
1853:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5082              		.loc 1 1853 0 discriminator 3
 5083 055e 410FB604 		movzbl	(%r12,%rax), %eax
 5083      04
 5084 0563 884206   		movb	%al, 6(%rdx)
1756:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 5085              		.loc 1 1756 0 discriminator 3
 5086 0566 0F8584FD 		jne	.L104
 5086      FFFF
1858:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1859:fltk-1.3.4-1/jpeg/jidctint.c **** }
 5087              		.loc 1 1859 0
 5088 056c 488B8424 		movq	472(%rsp), %rax
 5088      D8010000 
 5089 0574 64483304 		xorq	%fs:40, %rax
 5089      25280000 
 5089      00
 5090 057d 7512     		jne	.L109
 5091 057f 4881C4E8 		addq	$488, %rsp
 5091      010000
 5092              		.cfi_remember_state
 5093              		.cfi_def_cfa_offset 56
 5094 0586 5B       		popq	%rbx
 5095              		.cfi_def_cfa_offset 48
 5096              	.LVL748:
 5097 0587 5D       		popq	%rbp
 5098              		.cfi_def_cfa_offset 40
 5099              	.LVL749:
 5100 0588 415C     		popq	%r12
 5101              		.cfi_def_cfa_offset 32
 5102 058a 415D     		popq	%r13
 5103              		.cfi_def_cfa_offset 24
 5104              	.LVL750:
 5105 058c 415E     		popq	%r14
 5106              		.cfi_def_cfa_offset 16
 5107 058e 415F     		popq	%r15
 5108              		.cfi_def_cfa_offset 8
 5109 0590 C3       		ret
 5110              	.LVL751:
 5111              	.L109:
 5112              		.cfi_restore_state
 5113 0591 E8000000 		call	__stack_chk_fail
 5113      00
 5114              	.LVL752:
 5115              		.cfi_endproc
 5116              	.LFE72:
 5118              		.section	.text.unlikely.jpeg_idct_12x12
 5119              	.LCOLDE11:
 5120              		.section	.text.jpeg_idct_12x12
 5121              	.LHOTE11:
 5122              		.section	.text.unlikely.jpeg_idct_13x13,"ax",@progbits
 5123              	.LCOLDB12:
 5124              		.section	.text.jpeg_idct_13x13,"ax",@progbits
 5125              	.LHOTB12:
 5126              		.p2align 4,,15
 5127              		.globl	jpeg_idct_13x13
 5129              	jpeg_idct_13x13:
 5130              	.LFB73:
1860:fltk-1.3.4-1/jpeg/jidctint.c **** 
1861:fltk-1.3.4-1/jpeg/jidctint.c **** 
1862:fltk-1.3.4-1/jpeg/jidctint.c **** /*
1863:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
1864:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 13x13 output block.
1865:fltk-1.3.4-1/jpeg/jidctint.c ****  *
1866:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 29 multiplications in the 1-D kernel.
1867:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/26).
1868:fltk-1.3.4-1/jpeg/jidctint.c ****  */
1869:fltk-1.3.4-1/jpeg/jidctint.c **** 
1870:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
1871:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_13x13 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
1872:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
1873:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
1874:fltk-1.3.4-1/jpeg/jidctint.c **** {
 5131              		.loc 1 1874 0
 5132              		.cfi_startproc
 5133              	.LVL753:
 5134 0000 4157     		pushq	%r15
 5135              		.cfi_def_cfa_offset 16
 5136              		.cfi_offset 15, -16
 5137 0002 4156     		pushq	%r14
 5138              		.cfi_def_cfa_offset 24
 5139              		.cfi_offset 14, -24
 5140 0004 4989D2   		movq	%rdx, %r10
 5141 0007 4155     		pushq	%r13
 5142              		.cfi_def_cfa_offset 32
 5143              		.cfi_offset 13, -32
 5144 0009 4154     		pushq	%r12
 5145              		.cfi_def_cfa_offset 40
 5146              		.cfi_offset 12, -40
 5147 000b 55       		pushq	%rbp
 5148              		.cfi_def_cfa_offset 48
 5149              		.cfi_offset 6, -48
 5150 000c 53       		pushq	%rbx
 5151              		.cfi_def_cfa_offset 56
 5152              		.cfi_offset 3, -56
 5153 000d 4881EC18 		subq	$536, %rsp
 5153      020000
 5154              		.cfi_def_cfa_offset 592
1875:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
1876:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
1877:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
1878:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
1879:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
1880:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
1881:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
1882:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
1883:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
1884:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*13];	/* buffers data between passes */
1885:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
1886:fltk-1.3.4-1/jpeg/jidctint.c **** 
1887:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
1888:fltk-1.3.4-1/jpeg/jidctint.c **** 
1889:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
1890:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 5155              		.loc 1 1890 0
 5156 0014 4C8B6E58 		movq	88(%rsi), %r13
1874:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 5157              		.loc 1 1874 0
 5158 0018 64488B04 		movq	%fs:40, %rax
 5158      25280000 
 5158      00
 5159 0021 48898424 		movq	%rax, 520(%rsp)
 5159      08020000 
 5160 0029 31C0     		xorl	%eax, %eax
1882:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 5161              		.loc 1 1882 0
 5162 002b 488B87B8 		movq	440(%rdi), %rax
 5162      010000
1891:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 5163              		.loc 1 1891 0
 5164 0032 488D5C24 		leaq	96(%rsp), %rbx
 5164      60
1874:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 5165              		.loc 1 1874 0
 5166 0037 48894C24 		movq	%rcx, 80(%rsp)
 5166      50
 5167 003c 44894424 		movl	%r8d, 72(%rsp)
 5167      48
1882:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 5168              		.loc 1 1882 0
 5169 0041 4C8DB880 		leaq	128(%rax), %r15
 5169      000000
 5170              	.LVL754:
1892:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 5171              		.loc 1 1892 0
 5172 0048 488D8424 		leaq	128(%rsp), %rax
 5172      80000000 
 5173 0050 4C897C24 		movq	%r15, 88(%rsp)
 5173      58
 5174 0055 48894424 		movq	%rax, 64(%rsp)
 5174      40
 5175              	.LVL755:
 5176 005a 660F1F44 		.p2align 4,,10
 5176      0000
 5177              		.p2align 3
 5178              	.L111:
1893:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1894:fltk-1.3.4-1/jpeg/jidctint.c **** 
1895:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 5179              		.loc 1 1895 0 discriminator 3
 5180 0060 410FBF02 		movswl	(%r10), %eax
1896:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
1897:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1898:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
1899:fltk-1.3.4-1/jpeg/jidctint.c **** 
1900:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
1901:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 5181              		.loc 1 1901 0 discriminator 3
 5182 0064 410FBF4A 		movswl	64(%r10), %ecx
 5182      40
1895:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 5183              		.loc 1 1895 0 discriminator 3
 5184 0069 410FAF45 		imull	0(%r13), %eax
 5184      00
1902:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 5185              		.loc 1 1902 0 discriminator 3
 5186 006e 410FBF52 		movswl	96(%r10), %edx
 5186      60
1900:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 5187              		.loc 1 1900 0 discriminator 3
 5188 0073 410FBF72 		movswl	32(%r10), %esi
 5188      20
1901:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 5189              		.loc 1 1901 0 discriminator 3
 5190 0078 410FAF8D 		imull	128(%r13), %ecx
 5190      80000000 
 5191              		.loc 1 1902 0 discriminator 3
 5192 0080 410FAF95 		imull	192(%r13), %edx
 5192      C0000000 
1900:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 5193              		.loc 1 1900 0 discriminator 3
 5194 0088 410FAF75 		imull	64(%r13), %esi
 5194      40
1903:fltk-1.3.4-1/jpeg/jidctint.c **** 
1904:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z4;
1905:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
1906:fltk-1.3.4-1/jpeg/jidctint.c **** 
1907:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp10, FIX(1.155388986));                /* (c4+c6)/2 */
1908:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.096834934)) + z1;           /* (c4-c6)/2 */
1909:fltk-1.3.4-1/jpeg/jidctint.c **** 
1910:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(z2, FIX(1.373119086)) + tmp12 + tmp13;   /* c2 */
1911:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z2, FIX(0.501487041)) - tmp12 + tmp13;   /* c10 */
1912:fltk-1.3.4-1/jpeg/jidctint.c **** 
1913:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp10, FIX(0.316450131));                /* (c8-c12)/2 */
1914:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
1915:fltk-1.3.4-1/jpeg/jidctint.c **** 
1916:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = MULTIPLY(z2, FIX(1.058554052)) - tmp12 + tmp13;   /* c6 */
1917:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = MULTIPLY(z2, - FIX(1.252223920)) + tmp12 + tmp13; /* c4 */
1918:fltk-1.3.4-1/jpeg/jidctint.c **** 
1919:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp10, FIX(0.435816023));                /* (c2-c10)/2 */
1920:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.937303064)) - z1;           /* (c2+c10)/2 */
1921:fltk-1.3.4-1/jpeg/jidctint.c **** 
1922:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2, - FIX(0.170464608)) - tmp12 - tmp13; /* c12 */
1923:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
1924:fltk-1.3.4-1/jpeg/jidctint.c **** 
1925:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = MULTIPLY(tmp11 - z2, FIX(1.414213562)) + z1;      /* c0 */
1926:fltk-1.3.4-1/jpeg/jidctint.c **** 
1927:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
1928:fltk-1.3.4-1/jpeg/jidctint.c **** 
1929:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
1930:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 5195              		.loc 1 1930 0 discriminator 3
 5196 008d 450FBF42 		movswl	48(%r10), %r8d
 5196      30
1895:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 5197              		.loc 1 1895 0 discriminator 3
 5198 0092 4898     		cltq
 5199              	.LVL756:
1896:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 5200              		.loc 1 1896 0 discriminator 3
 5201 0094 48C1E00D 		salq	$13, %rax
 5202              	.LVL757:
1898:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5203              		.loc 1 1898 0 discriminator 3
 5204 0098 48050004 		addq	$1024, %rax
 5204      0000
 5205              	.LVL758:
1901:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 5206              		.loc 1 1901 0 discriminator 3
 5207 009e 4863C9   		movslq	%ecx, %rcx
1902:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5208              		.loc 1 1902 0 discriminator 3
 5209 00a1 4863D2   		movslq	%edx, %rdx
1898:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5210              		.loc 1 1898 0 discriminator 3
 5211 00a4 4989C1   		movq	%rax, %r9
 5212              	.LVL759:
1904:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
 5213              		.loc 1 1904 0 discriminator 3
 5214 00a7 488D0411 		leaq	(%rcx,%rdx), %rax
 5215              	.LVL760:
1900:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 5216              		.loc 1 1900 0 discriminator 3
 5217 00ab 4863F6   		movslq	%esi, %rsi
 5218              	.LVL761:
1905:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5219              		.loc 1 1905 0 discriminator 3
 5220 00ae 4829D1   		subq	%rdx, %rcx
 5221              	.LVL762:
 5222 00b1 4989CB   		movq	%rcx, %r11
1920:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5223              		.loc 1 1920 0 discriminator 3
 5224 00b4 4C890C24 		movq	%r9, (%rsp)
1907:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.096834934)) + z1;           /* (c4-c6)/2 */
 5225              		.loc 1 1907 0 discriminator 3
 5226 00b8 4869F8F9 		imulq	$9465, %rax, %rdi
 5226      240000
 5227              	.LVL763:
1920:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5228              		.loc 1 1920 0 discriminator 3
 5229 00bf 4C895C24 		movq	%r11, 8(%rsp)
 5229      08
1908:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5230              		.loc 1 1908 0 discriminator 3
 5231 00c4 4869D119 		imulq	$793, %rcx, %rdx
 5231      030000
 5232              	.LVL764:
1910:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z2, FIX(0.501487041)) - tmp12 + tmp13;   /* c10 */
 5233              		.loc 1 1910 0 discriminator 3
 5234 00cb 4869CEF1 		imulq	$11249, %rsi, %rcx
 5234      2B0000
 5235              	.LVL765:
1908:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5236              		.loc 1 1908 0 discriminator 3
 5237 00d2 4C01CA   		addq	%r9, %rdx
 5238              	.LVL766:
1910:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z2, FIX(0.501487041)) - tmp12 + tmp13;   /* c10 */
 5239              		.loc 1 1910 0 discriminator 3
 5240 00d5 4801F9   		addq	%rdi, %rcx
 5241 00d8 4801D1   		addq	%rdx, %rcx
 5242 00db 48894C24 		movq	%rcx, 16(%rsp)
 5242      10
 5243              	.LVL767:
1911:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5244              		.loc 1 1911 0 discriminator 3
 5245 00e0 4869CE0C 		imulq	$4108, %rsi, %rcx
 5245      100000
 5246 00e7 4829F9   		subq	%rdi, %rcx
 5247 00ea 488D3C11 		leaq	(%rcx,%rdx), %rdi
 5248              	.LVL768:
1913:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
 5249              		.loc 1 1913 0 discriminator 3
 5250 00ee 488D0CC0 		leaq	(%rax,%rax,8), %rcx
1919:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.937303064)) - z1;           /* (c2+c10)/2 */
 5251              		.loc 1 1919 0 discriminator 3
 5252 00f2 4869C0F2 		imulq	$3570, %rax, %rax
 5252      0D0000
 5253              	.LVL769:
1911:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5254              		.loc 1 1911 0 discriminator 3
 5255 00f9 48897C24 		movq	%rdi, 24(%rsp)
 5255      18
 5256              	.LVL770:
1913:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
 5257              		.loc 1 1913 0 discriminator 3
 5258 00fe 488D0CC9 		leaq	(%rcx,%rcx,8), %rcx
1914:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5259              		.loc 1 1914 0 discriminator 3
 5260 0102 4969FB7C 		imulq	$3196, %r11, %rdi
 5260      0C0000
1913:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
 5261              		.loc 1 1913 0 discriminator 3
 5262 0109 48C1E105 		salq	$5, %rcx
 5263              	.LVL771:
1914:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5264              		.loc 1 1914 0 discriminator 3
 5265 010d 4801FA   		addq	%rdi, %rdx
 5266              	.LVL772:
1916:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = MULTIPLY(z2, - FIX(1.252223920)) + tmp12 + tmp13; /* c4 */
 5267              		.loc 1 1916 0 discriminator 3
 5268 0110 4869FEE0 		imulq	$8672, %rsi, %rdi
 5268      210000
 5269 0117 4829CF   		subq	%rcx, %rdi
 5270 011a 4C8D3C17 		leaq	(%rdi,%rdx), %r15
1917:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5271              		.loc 1 1917 0 discriminator 3
 5272 011e 4869FEEE 		imulq	$-10258, %rsi, %rdi
 5272      D7FFFF
1916:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = MULTIPLY(z2, - FIX(1.252223920)) + tmp12 + tmp13; /* c4 */
 5273              		.loc 1 1916 0 discriminator 3
 5274 0125 4C897C24 		movq	%r15, 32(%rsp)
 5274      20
 5275              	.LVL773:
1917:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5276              		.loc 1 1917 0 discriminator 3
 5277 012a 4801F9   		addq	%rdi, %rcx
 5278 012d 4801CA   		addq	%rcx, %rdx
 5279              	.LVL774:
 5280 0130 48895424 		movq	%rdx, 40(%rsp)
 5280      28
 5281              	.LVL775:
1922:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
 5282              		.loc 1 1922 0 discriminator 3
 5283 0135 4869CE8C 		imulq	$-1396, %rsi, %rcx
 5283      FAFFFF
1920:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5284              		.loc 1 1920 0 discriminator 3
 5285 013c 4969D3FE 		imulq	$7678, %r11, %rdx
 5285      1D0000
1922:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
 5286              		.loc 1 1922 0 discriminator 3
 5287 0143 4829C1   		subq	%rax, %rcx
1920:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5288              		.loc 1 1920 0 discriminator 3
 5289 0146 4C29CA   		subq	%r9, %rdx
 5290              	.LVL776:
1922:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
 5291              		.loc 1 1922 0 discriminator 3
 5292 0149 4829D1   		subq	%rdx, %rcx
 5293 014c 48894C24 		movq	%rcx, 48(%rsp)
 5293      30
 5294              	.LVL777:
1923:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5295              		.loc 1 1923 0 discriminator 3
 5296 0151 4869CE4B 		imulq	$-6581, %rsi, %rcx
 5296      E6FFFF
 5297 0158 4801C8   		addq	%rcx, %rax
 5298              	.LVL778:
1929:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 5299              		.loc 1 1929 0 discriminator 3
 5300 015b 410FBF4A 		movswl	16(%r10), %ecx
 5300      10
1923:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5301              		.loc 1 1923 0 discriminator 3
 5302 0160 4829D0   		subq	%rdx, %rax
1931:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 5303              		.loc 1 1931 0 discriminator 3
 5304 0163 410FBF52 		movswl	80(%r10), %edx
 5304      50
 5305              	.LVL779:
1929:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 5306              		.loc 1 1929 0 discriminator 3
 5307 0168 410FAF4D 		imull	32(%r13), %ecx
 5307      20
1930:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 5308              		.loc 1 1930 0 discriminator 3
 5309 016d 450FAF45 		imull	96(%r13), %r8d
 5309      60
 5310              		.loc 1 1931 0 discriminator 3
 5311 0172 410FAF95 		imull	160(%r13), %edx
 5311      A0000000 
1923:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5312              		.loc 1 1923 0 discriminator 3
 5313 017a 48894424 		movq	%rax, 56(%rsp)
 5313      38
 5314              	.LVL780:
1932:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 5315              		.loc 1 1932 0 discriminator 3
 5316 017f 410FBF42 		movswl	112(%r10), %eax
 5316      70
 5317 0184 410FAF85 		imull	224(%r13), %eax
 5317      E0000000 
1929:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 5318              		.loc 1 1929 0 discriminator 3
 5319 018c 4863C9   		movslq	%ecx, %rcx
 5320              	.LVL781:
1930:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 5321              		.loc 1 1930 0 discriminator 3
 5322 018f 4D63C0   		movslq	%r8d, %r8
 5323              	.LVL782:
1931:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 5324              		.loc 1 1931 0 discriminator 3
 5325 0192 4863D2   		movslq	%edx, %rdx
 5326              	.LVL783:
1933:fltk-1.3.4-1/jpeg/jidctint.c **** 
1934:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.322312651));     /* c3 */
 5327              		.loc 1 1934 0 discriminator 3
 5328 0195 4E8D1C01 		leaq	(%rcx,%r8), %r11
 5329              	.LVL784:
1935:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(1.163874945));     /* c5 */
 5330              		.loc 1 1935 0 discriminator 3
 5331 0199 488D3C11 		leaq	(%rcx,%rdx), %rdi
1932:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5332              		.loc 1 1932 0 discriminator 3
 5333 019d 4898     		cltq
 5334              	.LVL785:
1934:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(1.163874945));     /* c5 */
 5335              		.loc 1 1934 0 discriminator 3
 5336 019f 4D69FB50 		imulq	$10832, %r11, %r15
 5336      2A0000
 5337              	.LVL786:
1936:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = z1 + z4;
 5338              		.loc 1 1936 0 discriminator 3
 5339 01a6 488D2C01 		leaq	(%rcx,%rax), %rbp
1935:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = z1 + z4;
 5340              		.loc 1 1935 0 discriminator 3
 5341 01aa 4C69CF3E 		imulq	$9534, %rdi, %r9
 5341      250000
 5342              	.LVL787:
1937:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp15, FIX(0.937797057));       /* c7 */
 5343              		.loc 1 1937 0 discriminator 3
 5344 01b1 4C69F502 		imulq	$7682, %rbp, %r14
 5344      1E0000
 5345              	.LVL788:
1938:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
 5346              		.loc 1 1938 0 discriminator 3
 5347 01b8 4F8D240F 		leaq	(%r15,%r9), %r12
1939:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.020082300));          /* c7+c5+c3-c1 */
1940:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2 + z3, - FIX(0.338443458));   /* -c11 */
1941:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14 + MULTIPLY(z2, FIX(0.837223564)); /* c5+c9+c11-c3 */
 5348              		.loc 1 1941 0 discriminator 3
 5349 01bc 4D69D8CB 		imulq	$6859, %r8, %r11
 5349      1A0000
1938:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
 5350              		.loc 1 1938 0 discriminator 3
 5351 01c3 4B8D3C34 		leaq	(%r12,%r14), %rdi
 5352 01c7 4C69E15B 		imulq	$-16549, %rcx, %r12
 5352      BFFFFF
1942:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14 - MULTIPLY(z3, FIX(1.572116027)); /* c1+c5-c9-c11 */
1943:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2 + z4, - FIX(1.163874945));   /* -c5 */
1944:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14;
1945:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14 + MULTIPLY(z4, FIX(2.205608352)); /* c3+c5+c9-c7 */
1946:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
1947:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14;
1948:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14;
1949:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp15, FIX(0.338443458));       /* c11 */
 5353              		.loc 1 1949 0 discriminator 3
 5354 01ce 4869EDD5 		imulq	$2773, %rbp, %rbp
 5354      0A0000
 5355              	.LVL789:
1938:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.020082300));          /* c7+c5+c3-c1 */
 5356              		.loc 1 1938 0 discriminator 3
 5357 01d5 4901FC   		addq	%rdi, %r12
 5358              	.LVL790:
1940:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14 + MULTIPLY(z2, FIX(0.837223564)); /* c5+c9+c11-c3 */
 5359              		.loc 1 1940 0 discriminator 3
 5360 01d8 498D3C10 		leaq	(%r8,%rdx), %rdi
 5361 01dc 4869FF2B 		imulq	$-2773, %rdi, %rdi
 5361      F5FFFF
 5362              	.LVL791:
1950:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp15 + MULTIPLY(z1, FIX(0.318774355)) - /* c9-c11 */
 5363              		.loc 1 1950 0 discriminator 3
 5364 01e3 4869C933 		imulq	$2611, %rcx, %rcx
 5364      0A0000
 5365              	.LVL792:
1941:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14 - MULTIPLY(z3, FIX(1.572116027)); /* c1+c5-c9-c11 */
 5366              		.loc 1 1941 0 discriminator 3
 5367 01ea 4901FB   		addq	%rdi, %r11
 5368 01ed 4D01FB   		addq	%r15, %r11
 5369              	.LVL793:
 5370              		.loc 1 1950 0 discriminator 3
 5371 01f0 4801E9   		addq	%rbp, %rcx
1942:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2 + z4, - FIX(1.163874945));   /* -c5 */
 5372              		.loc 1 1942 0 discriminator 3
 5373 01f3 4C69FAB1 		imulq	$-12879, %rdx, %r15
 5373      CDFFFF
 5374 01fa 4C01FF   		addq	%r15, %rdi
 5375              	.LVL794:
 5376 01fd 4C01CF   		addq	%r9, %rdi
 5377              	.LVL795:
1943:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14;
 5378              		.loc 1 1943 0 discriminator 3
 5379 0200 4D8D0C00 		leaq	(%r8,%rax), %r9
1945:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
 5380              		.loc 1 1945 0 discriminator 3
 5381 0204 4C69F894 		imulq	$18068, %rax, %r15
 5381      460000
1943:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14;
 5382              		.loc 1 1943 0 discriminator 3
 5383 020b 4D69C9C2 		imulq	$-9534, %r9, %r9
 5383      DAFFFF
 5384              	.LVL796:
1944:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14 + MULTIPLY(z4, FIX(2.205608352)); /* c3+c5+c9-c7 */
 5385              		.loc 1 1944 0 discriminator 3
 5386 0212 4D01CB   		addq	%r9, %r11
 5387              	.LVL797:
1945:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
 5388              		.loc 1 1945 0 discriminator 3
 5389 0215 4D01CF   		addq	%r9, %r15
 5390              		.loc 1 1950 0 discriminator 3
 5391 0218 4D69C816 		imulq	$-3818, %r8, %r9
 5391      F1FFFF
 5392              	.LVL798:
1945:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
 5393              		.loc 1 1945 0 discriminator 3
 5394 021f 4D01FE   		addq	%r15, %r14
 5395              	.LVL799:
1946:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14;
 5396              		.loc 1 1946 0 discriminator 3
 5397 0222 4C8D3C02 		leaq	(%rdx,%rax), %r15
 5398 0226 4D69FFF8 		imulq	$-5384, %r15, %r15
 5398      EAFFFF
 5399              	.LVL800:
 5400              		.loc 1 1950 0 discriminator 3
 5401 022d 4C01C9   		addq	%r9, %rcx
1951:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(0.466105296));          /* c1-c7 */
1952:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z3 - z2, FIX(0.937797057));     /* c7 */
 5402              		.loc 1 1952 0 discriminator 3
 5403 0230 4989D1   		movq	%rdx, %r9
 5404 0233 4D29C1   		subq	%r8, %r9
 5405 0236 4D69C102 		imulq	$7682, %r9, %r8
 5405      1E0000
 5406              	.LVL801:
1947:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14;
 5407              		.loc 1 1947 0 discriminator 3
 5408 023d 4C01FF   		addq	%r15, %rdi
 5409              	.LVL802:
1948:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp15, FIX(0.338443458));       /* c11 */
 5410              		.loc 1 1948 0 discriminator 3
 5411 0240 4D01FE   		addq	%r15, %r14
 5412              	.LVL803:
1953:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z1;
1954:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z1 + MULTIPLY(z3, FIX(0.384515595)) -   /* c3-c7 */
1955:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
1956:fltk-1.3.4-1/jpeg/jidctint.c **** 
1957:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
1958:fltk-1.3.4-1/jpeg/jidctint.c **** 
1959:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0]  = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
1960:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
1961:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 5413              		.loc 1 1961 0 discriminator 3
 5414 0243 4C8B7C24 		movq	32(%rsp), %r15
 5414      20
1953:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z1;
 5415              		.loc 1 1953 0 discriminator 3
 5416 0248 4C01C1   		addq	%r8, %rcx
 5417              	.LVL804:
1954:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
 5418              		.loc 1 1954 0 discriminator 3
 5419 024b 4869D24E 		imulq	$3150, %rdx, %rdx
 5419      0C0000
 5420              	.LVL805:
1892:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 5421              		.loc 1 1892 0 discriminator 3
 5422 0252 4983C202 		addq	$2, %r10
 5423              	.LVL806:
 5424 0256 4983C504 		addq	$4, %r13
 5425              	.LVL807:
1954:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
 5426              		.loc 1 1954 0 discriminator 3
 5427 025a 4869C03F 		imulq	$-14273, %rax, %rax
 5427      C8FFFF
 5428              	.LVL808:
1892:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 5429              		.loc 1 1892 0 discriminator 3
 5430 0261 4883C304 		addq	$4, %rbx
 5431              	.LVL809:
1954:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
 5432              		.loc 1 1954 0 discriminator 3
 5433 0265 4C01C2   		addq	%r8, %rdx
1959:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 5434              		.loc 1 1959 0 discriminator 3
 5435 0268 4C8B4424 		movq	16(%rsp), %r8
 5435      10
 5436              	.LVL810:
1954:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
 5437              		.loc 1 1954 0 discriminator 3
 5438 026d 4801C2   		addq	%rax, %rdx
 5439 0270 4801D5   		addq	%rdx, %rbp
 5440              	.LVL811:
1959:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 5441              		.loc 1 1959 0 discriminator 3
 5442 0273 4B8D0420 		leaq	(%r8,%r12), %rax
1960:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 5443              		.loc 1 1960 0 discriminator 3
 5444 0277 4D29E0   		subq	%r12, %r8
1959:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 5445              		.loc 1 1959 0 discriminator 3
 5446 027a 48C1F80B 		sarq	$11, %rax
 5447 027e 8943FC   		movl	%eax, -4(%rbx)
1960:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 5448              		.loc 1 1960 0 discriminator 3
 5449 0281 4C89C0   		movq	%r8, %rax
 5450 0284 48C1F80B 		sarq	$11, %rax
 5451 0288 89837C01 		movl	%eax, 380(%rbx)
 5451      0000
 5452              		.loc 1 1961 0 discriminator 3
 5453 028e 4B8D041F 		leaq	(%r15,%r11), %rax
1962:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 5454              		.loc 1 1962 0 discriminator 3
 5455 0292 4D29DF   		subq	%r11, %r15
1963:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 5456              		.loc 1 1963 0 discriminator 3
 5457 0295 4C8B5C24 		movq	24(%rsp), %r11
 5457      18
 5458              	.LVL812:
1961:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 5459              		.loc 1 1961 0 discriminator 3
 5460 029a 48C1F80B 		sarq	$11, %rax
 5461 029e 89431C   		movl	%eax, 28(%rbx)
1962:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 5462              		.loc 1 1962 0 discriminator 3
 5463 02a1 4C89F8   		movq	%r15, %rax
 5464 02a4 48C1F80B 		sarq	$11, %rax
 5465 02a8 89835C01 		movl	%eax, 348(%rbx)
 5465      0000
 5466              		.loc 1 1963 0 discriminator 3
 5467 02ae 498D043B 		leaq	(%r11,%rdi), %rax
1964:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 5468              		.loc 1 1964 0 discriminator 3
 5469 02b2 4929FB   		subq	%rdi, %r11
1963:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 5470              		.loc 1 1963 0 discriminator 3
 5471 02b5 48C1F80B 		sarq	$11, %rax
 5472 02b9 89433C   		movl	%eax, 60(%rbx)
 5473              		.loc 1 1964 0 discriminator 3
 5474 02bc 4C89D8   		movq	%r11, %rax
 5475 02bf 48C1F80B 		sarq	$11, %rax
 5476 02c3 89833C01 		movl	%eax, 316(%rbx)
 5476      0000
1965:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 5477              		.loc 1 1965 0 discriminator 3
 5478 02c9 488B5424 		movq	48(%rsp), %rdx
 5478      30
 5479 02ce 4A8D0432 		leaq	(%rdx,%r14), %rax
1966:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 5480              		.loc 1 1966 0 discriminator 3
 5481 02d2 4C29F2   		subq	%r14, %rdx
1965:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 5482              		.loc 1 1965 0 discriminator 3
 5483 02d5 48C1F80B 		sarq	$11, %rax
 5484 02d9 89435C   		movl	%eax, 92(%rbx)
 5485              		.loc 1 1966 0 discriminator 3
 5486 02dc 4889D0   		movq	%rdx, %rax
1967:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 5487              		.loc 1 1967 0 discriminator 3
 5488 02df 488B5424 		movq	56(%rsp), %rdx
 5488      38
1966:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 5489              		.loc 1 1966 0 discriminator 3
 5490 02e4 48C1F80B 		sarq	$11, %rax
 5491 02e8 89831C01 		movl	%eax, 284(%rbx)
 5491      0000
 5492              		.loc 1 1967 0 discriminator 3
 5493 02ee 488D040A 		leaq	(%rdx,%rcx), %rax
1968:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 5494              		.loc 1 1968 0 discriminator 3
 5495 02f2 4829CA   		subq	%rcx, %rdx
1967:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 5496              		.loc 1 1967 0 discriminator 3
 5497 02f5 48C1F80B 		sarq	$11, %rax
 5498 02f9 89437C   		movl	%eax, 124(%rbx)
 5499              		.loc 1 1968 0 discriminator 3
 5500 02fc 4889D0   		movq	%rdx, %rax
1969:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 5501              		.loc 1 1969 0 discriminator 3
 5502 02ff 488B5424 		movq	40(%rsp), %rdx
 5502      28
1968:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 5503              		.loc 1 1968 0 discriminator 3
 5504 0304 48C1F80B 		sarq	$11, %rax
 5505 0308 8983FC00 		movl	%eax, 252(%rbx)
 5505      0000
 5506              		.loc 1 1969 0 discriminator 3
 5507 030e 488D042A 		leaq	(%rdx,%rbp), %rax
1970:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 5508              		.loc 1 1970 0 discriminator 3
 5509 0312 4829EA   		subq	%rbp, %rdx
1969:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 5510              		.loc 1 1969 0 discriminator 3
 5511 0315 48C1F80B 		sarq	$11, %rax
 5512 0319 89839C00 		movl	%eax, 156(%rbx)
 5512      0000
 5513              		.loc 1 1970 0 discriminator 3
 5514 031f 4889D0   		movq	%rdx, %rax
 5515 0322 48C1F80B 		sarq	$11, %rax
 5516 0326 8983DC00 		movl	%eax, 220(%rbx)
 5516      0000
1971:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26, CONST_BITS-PASS1_BITS);
 5517              		.loc 1 1971 0 discriminator 3
 5518 032c 488B4424 		movq	8(%rsp), %rax
 5518      08
 5519 0331 4829F0   		subq	%rsi, %rax
 5520 0334 4869C041 		imulq	$11585, %rax, %rax
 5520      2D0000
 5521 033b 48030424 		addq	(%rsp), %rax
 5522              	.LVL813:
 5523 033f 48C1F80B 		sarq	$11, %rax
 5524              	.LVL814:
 5525 0343 8983BC00 		movl	%eax, 188(%rbx)
 5525      0000
 5526              	.LVL815:
1892:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 5527              		.loc 1 1892 0 discriminator 3
 5528 0349 483B5C24 		cmpq	64(%rsp), %rbx
 5528      40
 5529 034e 0F850CFD 		jne	.L111
 5529      FFFF
 5530 0354 8B442448 		movl	72(%rsp), %eax
 5531 0358 4C8B7C24 		movq	88(%rsp), %r15
 5531      58
1892:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 5532              		.loc 1 1892 0 is_stmt 0
 5533 035d 4C8D4424 		leaq	96(%rsp), %r8
 5533      60
 5534 0362 48894424 		movq	%rax, 72(%rsp)
 5534      48
 5535              	.LVL816:
 5536 0367 488B4424 		movq	80(%rsp), %rax
 5536      50
 5537 036c 48890424 		movq	%rax, (%rsp)
 5538              	.LVL817:
1972:fltk-1.3.4-1/jpeg/jidctint.c ****   }
1973:fltk-1.3.4-1/jpeg/jidctint.c **** 
1974:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 13 rows from work array, store into output array. */
1975:fltk-1.3.4-1/jpeg/jidctint.c **** 
1976:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
1977:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 13; ctr++) {
 5539              		.loc 1 1977 0 is_stmt 1
 5540 0370 488D8424 		leaq	512(%rsp), %rax
 5540      00020000 
 5541 0378 48894424 		movq	%rax, 80(%rsp)
 5541      50
 5542              	.LVL818:
 5543 037d 0F1F00   		.p2align 4,,10
 5544              		.p2align 3
 5545              	.L112:
1978:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
1979:fltk-1.3.4-1/jpeg/jidctint.c **** 
1980:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
1981:fltk-1.3.4-1/jpeg/jidctint.c **** 
1982:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
1983:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 5546              		.loc 1 1983 0 discriminator 3
 5547 0380 496310   		movslq	(%r8), %rdx
1984:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
1985:fltk-1.3.4-1/jpeg/jidctint.c **** 
1986:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[2];
1987:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
1988:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[6];
 5548              		.loc 1 1988 0 discriminator 3
 5549 0383 49634818 		movslq	24(%r8), %rcx
1987:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[6];
 5550              		.loc 1 1987 0 discriminator 3
 5551 0387 49637010 		movslq	16(%r8), %rsi
1986:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 5552              		.loc 1 1986 0 discriminator 3
 5553 038b 4D635808 		movslq	8(%r8), %r11
1978:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5554              		.loc 1 1978 0 discriminator 3
 5555 038f 488B1C24 		movq	(%rsp), %rbx
 5556 0393 488B4424 		movq	72(%rsp), %rax
 5556      48
1983:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 5557              		.loc 1 1983 0 discriminator 3
 5558 0398 4883C210 		addq	$16, %rdx
1984:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5559              		.loc 1 1984 0 discriminator 3
 5560 039c 48C1E20D 		salq	$13, %rdx
1978:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5561              		.loc 1 1978 0 discriminator 3
 5562 03a0 480303   		addq	(%rbx), %rax
 5563              	.LVL819:
1984:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5564              		.loc 1 1984 0 discriminator 3
 5565 03a3 4989D1   		movq	%rdx, %r9
 5566              	.LVL820:
1989:fltk-1.3.4-1/jpeg/jidctint.c **** 
1990:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z4;
 5567              		.loc 1 1990 0 discriminator 3
 5568 03a6 488D140E 		leaq	(%rsi,%rcx), %rdx
 5569              	.LVL821:
1991:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
 5570              		.loc 1 1991 0 discriminator 3
 5571 03aa 4829CE   		subq	%rcx, %rsi
 5572              	.LVL822:
 5573 03ad 4889F3   		movq	%rsi, %rbx
1992:fltk-1.3.4-1/jpeg/jidctint.c **** 
1993:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp10, FIX(1.155388986));                /* (c4+c6)/2 */
1994:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.096834934)) + z1;           /* (c4-c6)/2 */
1995:fltk-1.3.4-1/jpeg/jidctint.c **** 
1996:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(z2, FIX(1.373119086)) + tmp12 + tmp13;   /* c2 */
1997:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z2, FIX(0.501487041)) - tmp12 + tmp13;   /* c10 */
1998:fltk-1.3.4-1/jpeg/jidctint.c **** 
1999:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp10, FIX(0.316450131));                /* (c8-c12)/2 */
2000:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
2001:fltk-1.3.4-1/jpeg/jidctint.c **** 
2002:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = MULTIPLY(z2, FIX(1.058554052)) - tmp12 + tmp13;   /* c6 */
2003:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = MULTIPLY(z2, - FIX(1.252223920)) + tmp12 + tmp13; /* c4 */
2004:fltk-1.3.4-1/jpeg/jidctint.c **** 
2005:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp10, FIX(0.435816023));                /* (c2-c10)/2 */
2006:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.937303064)) - z1;           /* (c2+c10)/2 */
 5574              		.loc 1 2006 0 discriminator 3
 5575 03b0 4C894C24 		movq	%r9, 8(%rsp)
 5575      08
1993:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.096834934)) + z1;           /* (c4-c6)/2 */
 5576              		.loc 1 1993 0 discriminator 3
 5577 03b5 4869FAF9 		imulq	$9465, %rdx, %rdi
 5577      240000
 5578              	.LVL823:
 5579              		.loc 1 2006 0 discriminator 3
 5580 03bc 48895C24 		movq	%rbx, 16(%rsp)
 5580      10
1994:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5581              		.loc 1 1994 0 discriminator 3
 5582 03c1 4869CE19 		imulq	$793, %rsi, %rcx
 5582      030000
 5583              	.LVL824:
1996:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z2, FIX(0.501487041)) - tmp12 + tmp13;   /* c10 */
 5584              		.loc 1 1996 0 discriminator 3
 5585 03c8 4969F3F1 		imulq	$11249, %r11, %rsi
 5585      2B0000
 5586              	.LVL825:
1994:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5587              		.loc 1 1994 0 discriminator 3
 5588 03cf 4C01C9   		addq	%r9, %rcx
 5589              	.LVL826:
1996:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z2, FIX(0.501487041)) - tmp12 + tmp13;   /* c10 */
 5590              		.loc 1 1996 0 discriminator 3
 5591 03d2 4801FE   		addq	%rdi, %rsi
 5592 03d5 4801CE   		addq	%rcx, %rsi
 5593 03d8 48897424 		movq	%rsi, 24(%rsp)
 5593      18
 5594              	.LVL827:
1997:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5595              		.loc 1 1997 0 discriminator 3
 5596 03dd 4969F30C 		imulq	$4108, %r11, %rsi
 5596      100000
 5597 03e4 4829FE   		subq	%rdi, %rsi
 5598 03e7 488D3C0E 		leaq	(%rsi,%rcx), %rdi
 5599              	.LVL828:
1999:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
 5600              		.loc 1 1999 0 discriminator 3
 5601 03eb 488D34D2 		leaq	(%rdx,%rdx,8), %rsi
2005:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.937303064)) - z1;           /* (c2+c10)/2 */
 5602              		.loc 1 2005 0 discriminator 3
 5603 03ef 4869D2F2 		imulq	$3570, %rdx, %rdx
 5603      0D0000
 5604              	.LVL829:
1997:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5605              		.loc 1 1997 0 discriminator 3
 5606 03f6 48897C24 		movq	%rdi, 32(%rsp)
 5606      20
 5607              	.LVL830:
1999:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
 5608              		.loc 1 1999 0 discriminator 3
 5609 03fb 488D34F6 		leaq	(%rsi,%rsi,8), %rsi
2000:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5610              		.loc 1 2000 0 discriminator 3
 5611 03ff 4869FB7C 		imulq	$3196, %rbx, %rdi
 5611      0C0000
1999:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp11, FIX(0.486914739)) + z1;           /* (c8+c12)/2 */
 5612              		.loc 1 1999 0 discriminator 3
 5613 0406 48C1E605 		salq	$5, %rsi
 5614              	.LVL831:
2000:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5615              		.loc 1 2000 0 discriminator 3
 5616 040a 4801F9   		addq	%rdi, %rcx
 5617              	.LVL832:
2002:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = MULTIPLY(z2, - FIX(1.252223920)) + tmp12 + tmp13; /* c4 */
 5618              		.loc 1 2002 0 discriminator 3
 5619 040d 4969FBE0 		imulq	$8672, %r11, %rdi
 5619      210000
 5620 0414 4829F7   		subq	%rsi, %rdi
 5621 0417 4C8D140F 		leaq	(%rdi,%rcx), %r10
2003:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5622              		.loc 1 2003 0 discriminator 3
 5623 041b 4969FBEE 		imulq	$-10258, %r11, %rdi
 5623      D7FFFF
2002:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = MULTIPLY(z2, - FIX(1.252223920)) + tmp12 + tmp13; /* c4 */
 5624              		.loc 1 2002 0 discriminator 3
 5625 0422 4C895424 		movq	%r10, 40(%rsp)
 5625      28
 5626              	.LVL833:
2007:fltk-1.3.4-1/jpeg/jidctint.c **** 
2008:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = MULTIPLY(z2, - FIX(0.170464608)) - tmp12 - tmp13; /* c12 */
2009:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
2010:fltk-1.3.4-1/jpeg/jidctint.c **** 
2011:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = MULTIPLY(tmp11 - z2, FIX(1.414213562)) + z1;      /* c0 */
2012:fltk-1.3.4-1/jpeg/jidctint.c **** 
2013:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
2014:fltk-1.3.4-1/jpeg/jidctint.c **** 
2015:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
 5627              		.loc 1 2015 0 discriminator 3
 5628 0427 4D635004 		movslq	4(%r8), %r10
2003:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5629              		.loc 1 2003 0 discriminator 3
 5630 042b 4801FE   		addq	%rdi, %rsi
 5631 042e 4801F1   		addq	%rsi, %rcx
 5632              	.LVL834:
2008:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
 5633              		.loc 1 2008 0 discriminator 3
 5634 0431 4969F38C 		imulq	$-1396, %r11, %rsi
 5634      FAFFFF
2003:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5635              		.loc 1 2003 0 discriminator 3
 5636 0438 48894C24 		movq	%rcx, 48(%rsp)
 5636      30
 5637              	.LVL835:
2006:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5638              		.loc 1 2006 0 discriminator 3
 5639 043d 4869CBFE 		imulq	$7678, %rbx, %rcx
 5639      1D0000
2016:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 5640              		.loc 1 2016 0 discriminator 3
 5641 0444 4963580C 		movslq	12(%r8), %rbx
 5642              	.LVL836:
2008:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
 5643              		.loc 1 2008 0 discriminator 3
 5644 0448 4829D6   		subq	%rdx, %rsi
 5645 044b 4889F7   		movq	%rsi, %rdi
2006:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5646              		.loc 1 2006 0 discriminator 3
 5647 044e 4C29C9   		subq	%r9, %rcx
 5648              	.LVL837:
2017:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
2018:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
2019:fltk-1.3.4-1/jpeg/jidctint.c **** 
2020:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.322312651));     /* c3 */
 5649              		.loc 1 2020 0 discriminator 3
 5650 0451 4D8D0C1A 		leaq	(%r10,%rbx), %r9
 5651              	.LVL838:
2009:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5652              		.loc 1 2009 0 discriminator 3
 5653 0455 4969F34B 		imulq	$-6581, %r11, %rsi
 5653      E6FFFF
2008:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
 5654              		.loc 1 2008 0 discriminator 3
 5655 045c 4829CF   		subq	%rcx, %rdi
 5656              		.loc 1 2020 0 discriminator 3
 5657 045f 4D69F150 		imulq	$10832, %r9, %r14
 5657      2A0000
2008:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = MULTIPLY(z2, - FIX(0.803364869)) + tmp12 - tmp13; /* c8 */
 5658              		.loc 1 2008 0 discriminator 3
 5659 0466 48897C24 		movq	%rdi, 56(%rsp)
 5659      38
 5660              	.LVL839:
2009:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5661              		.loc 1 2009 0 discriminator 3
 5662 046b 4801F2   		addq	%rsi, %rdx
 5663              	.LVL840:
2017:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 5664              		.loc 1 2017 0 discriminator 3
 5665 046e 49637014 		movslq	20(%r8), %rsi
 5666              	.LVL841:
2009:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5667              		.loc 1 2009 0 discriminator 3
 5668 0472 4829CA   		subq	%rcx, %rdx
 5669 0475 48895424 		movq	%rdx, 64(%rsp)
 5669      40
 5670              	.LVL842:
2018:fltk-1.3.4-1/jpeg/jidctint.c **** 
 5671              		.loc 1 2018 0 discriminator 3
 5672 047a 4963501C 		movslq	28(%r8), %rdx
 5673              	.LVL843:
2021:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(1.163874945));     /* c5 */
 5674              		.loc 1 2021 0 discriminator 3
 5675 047e 498D0C32 		leaq	(%r10,%rsi), %rcx
 5676              	.LVL844:
2022:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = z1 + z4;
 5677              		.loc 1 2022 0 discriminator 3
 5678 0482 498D2C12 		leaq	(%r10,%rdx), %rbp
 5679              	.LVL845:
2021:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 + z3, FIX(1.163874945));     /* c5 */
 5680              		.loc 1 2021 0 discriminator 3
 5681 0486 4869F93E 		imulq	$9534, %rcx, %rdi
 5681      250000
 5682              	.LVL846:
2023:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(tmp15, FIX(0.937797057));       /* c7 */
 5683              		.loc 1 2023 0 discriminator 3
 5684 048d 4C69ED02 		imulq	$7682, %rbp, %r13
 5684      1E0000
 5685              	.LVL847:
2024:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 -
 5686              		.loc 1 2024 0 discriminator 3
 5687 0494 4D8D243E 		leaq	(%r14,%rdi), %r12
 5688 0498 4B8D0C2C 		leaq	(%r12,%r13), %rcx
 5689 049c 4D69E25B 		imulq	$-16549, %r10, %r12
 5689      BFFFFF
2025:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.020082300));          /* c7+c5+c3-c1 */
2026:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2 + z3, - FIX(0.338443458));   /* -c11 */
2027:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14 + MULTIPLY(z2, FIX(0.837223564)); /* c5+c9+c11-c3 */
 5690              		.loc 1 2027 0 discriminator 3
 5691 04a3 4C69CBCB 		imulq	$6859, %rbx, %r9
 5691      1A0000
2028:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14 - MULTIPLY(z3, FIX(1.572116027)); /* c1+c5-c9-c11 */
2029:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2 + z4, - FIX(1.163874945));   /* -c5 */
2030:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14;
2031:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14 + MULTIPLY(z4, FIX(2.205608352)); /* c3+c5+c9-c7 */
2032:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
2033:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14;
2034:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14;
2035:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp15, FIX(0.338443458));       /* c11 */
 5692              		.loc 1 2035 0 discriminator 3
 5693 04aa 4869EDD5 		imulq	$2773, %rbp, %rbp
 5693      0A0000
 5694              	.LVL848:
2024:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.020082300));          /* c7+c5+c3-c1 */
 5695              		.loc 1 2024 0 discriminator 3
 5696 04b1 4901CC   		addq	%rcx, %r12
 5697              	.LVL849:
2026:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14 + MULTIPLY(z2, FIX(0.837223564)); /* c5+c9+c11-c3 */
 5698              		.loc 1 2026 0 discriminator 3
 5699 04b4 488D0C33 		leaq	(%rbx,%rsi), %rcx
 5700 04b8 4869C92B 		imulq	$-2773, %rcx, %rcx
 5700      F5FFFF
 5701              	.LVL850:
2036:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp15 + MULTIPLY(z1, FIX(0.318774355)) - /* c9-c11 */
 5702              		.loc 1 2036 0 discriminator 3
 5703 04bf 4D69D233 		imulq	$2611, %r10, %r10
 5703      0A0000
 5704              	.LVL851:
2027:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14 - MULTIPLY(z3, FIX(1.572116027)); /* c1+c5-c9-c11 */
 5705              		.loc 1 2027 0 discriminator 3
 5706 04c6 4901C9   		addq	%rcx, %r9
 5707 04c9 4D01F1   		addq	%r14, %r9
 5708              	.LVL852:
 5709              		.loc 1 2036 0 discriminator 3
 5710 04cc 4901EA   		addq	%rbp, %r10
2028:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2 + z4, - FIX(1.163874945));   /* -c5 */
 5711              		.loc 1 2028 0 discriminator 3
 5712 04cf 4C69F6B1 		imulq	$-12879, %rsi, %r14
 5712      CDFFFF
 5713 04d6 4C01F1   		addq	%r14, %rcx
 5714              	.LVL853:
 5715 04d9 4801F9   		addq	%rdi, %rcx
 5716              	.LVL854:
2029:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14;
 5717              		.loc 1 2029 0 discriminator 3
 5718 04dc 488D3C13 		leaq	(%rbx,%rdx), %rdi
2031:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
 5719              		.loc 1 2031 0 discriminator 3
 5720 04e0 4C69F294 		imulq	$18068, %rdx, %r14
 5720      460000
2029:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp14;
 5721              		.loc 1 2029 0 discriminator 3
 5722 04e7 4869FFC2 		imulq	$-9534, %rdi, %rdi
 5722      DAFFFF
 5723              	.LVL855:
2031:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
 5724              		.loc 1 2031 0 discriminator 3
 5725 04ee 4901FE   		addq	%rdi, %r14
2030:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14 + MULTIPLY(z4, FIX(2.205608352)); /* c3+c5+c9-c7 */
 5726              		.loc 1 2030 0 discriminator 3
 5727 04f1 4901F9   		addq	%rdi, %r9
 5728              	.LVL856:
2031:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z3 + z4, - FIX(0.657217813));   /* -c9 */
 5729              		.loc 1 2031 0 discriminator 3
 5730 04f4 4D01F5   		addq	%r14, %r13
 5731              	.LVL857:
2032:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14;
 5732              		.loc 1 2032 0 discriminator 3
 5733 04f7 4C8D3416 		leaq	(%rsi,%rdx), %r14
 5734              		.loc 1 2036 0 discriminator 3
 5735 04fb 4869FB16 		imulq	$-3818, %rbx, %rdi
 5735      F1FFFF
 5736              	.LVL858:
2032:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp14;
 5737              		.loc 1 2032 0 discriminator 3
 5738 0502 4D69F6F8 		imulq	$-5384, %r14, %r14
 5738      EAFFFF
 5739              	.LVL859:
2037:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(0.466105296));          /* c1-c7 */
2038:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z3 - z2, FIX(0.937797057));     /* c7 */
2039:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z1;
2040:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z1 + MULTIPLY(z3, FIX(0.384515595)) -   /* c3-c7 */
 5740              		.loc 1 2040 0 discriminator 3
 5741 0509 4869D23F 		imulq	$-14273, %rdx, %rdx
 5741      C8FFFF
 5742              	.LVL860:
2036:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(0.466105296));          /* c1-c7 */
 5743              		.loc 1 2036 0 discriminator 3
 5744 0510 4901FA   		addq	%rdi, %r10
2033:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp14;
 5745              		.loc 1 2033 0 discriminator 3
 5746 0513 4C01F1   		addq	%r14, %rcx
 5747              	.LVL861:
2034:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp15, FIX(0.338443458));       /* c11 */
 5748              		.loc 1 2034 0 discriminator 3
 5749 0516 4D01F5   		addq	%r14, %r13
 5750              	.LVL862:
2038:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z1;
 5751              		.loc 1 2038 0 discriminator 3
 5752 0519 4989F6   		movq	%rsi, %r14
 5753 051c 4929DE   		subq	%rbx, %r14
 5754 051f 4969DE02 		imulq	$7682, %r14, %rbx
 5754      1E0000
 5755              	.LVL863:
2041:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
2042:fltk-1.3.4-1/jpeg/jidctint.c **** 
2043:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
2044:fltk-1.3.4-1/jpeg/jidctint.c **** 
2045:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
 5756              		.loc 1 2045 0 discriminator 3
 5757 0526 4C8B7424 		movq	24(%rsp), %r14
 5757      18
2040:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
 5758              		.loc 1 2040 0 discriminator 3
 5759 052b 4869F64E 		imulq	$3150, %rsi, %rsi
 5759      0C0000
 5760              	.LVL864:
2039:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z1 + MULTIPLY(z3, FIX(0.384515595)) -   /* c3-c7 */
 5761              		.loc 1 2039 0 discriminator 3
 5762 0532 4901DA   		addq	%rbx, %r10
 5763              	.LVL865:
2040:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
 5764              		.loc 1 2040 0 discriminator 3
 5765 0535 4801DE   		addq	%rbx, %rsi
 5766 0538 4801D6   		addq	%rdx, %rsi
 5767              		.loc 1 2045 0 discriminator 3
 5768 053b 4B8D1426 		leaq	(%r14,%r12), %rdx
2040:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.742345811));         /* c1+c11 */
 5769              		.loc 1 2040 0 discriminator 3
 5770 053f 4801F5   		addq	%rsi, %rbp
 5771              	.LVL866:
 5772              		.loc 1 2045 0 discriminator 3
 5773 0542 48C1FA12 		sarq	$18, %rdx
 5774 0546 81E2FF03 		andl	$1023, %edx
 5774      0000
2046:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2047:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2048:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[12] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
 5775              		.loc 1 2048 0 discriminator 3
 5776 054c 4D29E6   		subq	%r12, %r14
2049:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2050:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2051:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 5777              		.loc 1 2051 0 discriminator 3
 5778 054f 4C8B6424 		movq	40(%rsp), %r12
 5778      28
 5779              	.LVL867:
2045:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5780              		.loc 1 2045 0 discriminator 3
 5781 0554 410FB614 		movzbl	(%r15,%rdx), %edx
 5781      17
 5782 0559 8810     		movb	%dl, (%rax)
2048:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5783              		.loc 1 2048 0 discriminator 3
 5784 055b 4C89F2   		movq	%r14, %rdx
2052:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2053:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2054:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
2055:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2056:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2057:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 5785              		.loc 1 2057 0 discriminator 3
 5786 055e 4C8B7424 		movq	32(%rsp), %r14
 5786      20
2048:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5787              		.loc 1 2048 0 discriminator 3
 5788 0563 48C1FA12 		sarq	$18, %rdx
 5789 0567 81E2FF03 		andl	$1023, %edx
 5789      0000
 5790 056d 410FB614 		movzbl	(%r15,%rdx), %edx
 5790      17
 5791 0572 88500C   		movb	%dl, 12(%rax)
2051:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5792              		.loc 1 2051 0 discriminator 3
 5793 0575 4B8D140C 		leaq	(%r12,%r9), %rdx
2054:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5794              		.loc 1 2054 0 discriminator 3
 5795 0579 4D29CC   		subq	%r9, %r12
2051:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5796              		.loc 1 2051 0 discriminator 3
 5797 057c 48C1FA12 		sarq	$18, %rdx
 5798 0580 81E2FF03 		andl	$1023, %edx
 5798      0000
 5799 0586 410FB614 		movzbl	(%r15,%rdx), %edx
 5799      17
 5800 058b 885001   		movb	%dl, 1(%rax)
2054:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5801              		.loc 1 2054 0 discriminator 3
 5802 058e 4C89E2   		movq	%r12, %rdx
 5803 0591 48C1FA12 		sarq	$18, %rdx
 5804 0595 81E2FF03 		andl	$1023, %edx
 5804      0000
 5805 059b 410FB614 		movzbl	(%r15,%rdx), %edx
 5805      17
 5806 05a0 88500B   		movb	%dl, 11(%rax)
 5807              		.loc 1 2057 0 discriminator 3
 5808 05a3 498D140E 		leaq	(%r14,%rcx), %rdx
2058:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2059:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2060:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
 5809              		.loc 1 2060 0 discriminator 3
 5810 05a7 4929CE   		subq	%rcx, %r14
2057:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5811              		.loc 1 2057 0 discriminator 3
 5812 05aa 48C1FA12 		sarq	$18, %rdx
 5813 05ae 81E2FF03 		andl	$1023, %edx
 5813      0000
 5814 05b4 410FB614 		movzbl	(%r15,%rdx), %edx
 5814      17
 5815 05b9 885002   		movb	%dl, 2(%rax)
 5816              		.loc 1 2060 0 discriminator 3
 5817 05bc 4C89F2   		movq	%r14, %rdx
 5818 05bf 48C1FA12 		sarq	$18, %rdx
 5819 05c3 81E2FF03 		andl	$1023, %edx
 5819      0000
 5820 05c9 410FB614 		movzbl	(%r15,%rdx), %edx
 5820      17
2061:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2062:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2063:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
 5821              		.loc 1 2063 0 discriminator 3
 5822 05ce 488B7C24 		movq	56(%rsp), %rdi
 5822      38
2064:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2065:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2066:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
2067:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2068:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2069:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
2070:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2071:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2072:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
2073:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2074:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2075:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp15,
 5823              		.loc 1 2075 0 discriminator 3
 5824 05d3 488B4C24 		movq	48(%rsp), %rcx
 5824      30
 5825              	.LVL868:
2060:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5826              		.loc 1 2060 0 discriminator 3
 5827 05d8 88500A   		movb	%dl, 10(%rax)
2063:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5828              		.loc 1 2063 0 discriminator 3
 5829 05db 4A8D142F 		leaq	(%rdi,%r13), %rdx
2066:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5830              		.loc 1 2066 0 discriminator 3
 5831 05df 4C29EF   		subq	%r13, %rdi
2063:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5832              		.loc 1 2063 0 discriminator 3
 5833 05e2 48C1FA12 		sarq	$18, %rdx
 5834 05e6 81E2FF03 		andl	$1023, %edx
 5834      0000
 5835 05ec 410FB614 		movzbl	(%r15,%rdx), %edx
 5835      17
 5836 05f1 885003   		movb	%dl, 3(%rax)
2066:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5837              		.loc 1 2066 0 discriminator 3
 5838 05f4 4889FA   		movq	%rdi, %rdx
2069:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5839              		.loc 1 2069 0 discriminator 3
 5840 05f7 488B7C24 		movq	64(%rsp), %rdi
 5840      40
2066:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5841              		.loc 1 2066 0 discriminator 3
 5842 05fc 48C1FA12 		sarq	$18, %rdx
 5843 0600 81E2FF03 		andl	$1023, %edx
 5843      0000
 5844 0606 410FB614 		movzbl	(%r15,%rdx), %edx
 5844      17
 5845 060b 885009   		movb	%dl, 9(%rax)
2069:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5846              		.loc 1 2069 0 discriminator 3
 5847 060e 4A8D1417 		leaq	(%rdi,%r10), %rdx
2072:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5848              		.loc 1 2072 0 discriminator 3
 5849 0612 4C29D7   		subq	%r10, %rdi
2069:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5850              		.loc 1 2069 0 discriminator 3
 5851 0615 48C1FA12 		sarq	$18, %rdx
 5852 0619 81E2FF03 		andl	$1023, %edx
 5852      0000
 5853 061f 410FB614 		movzbl	(%r15,%rdx), %edx
 5853      17
 5854 0624 885004   		movb	%dl, 4(%rax)
2072:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5855              		.loc 1 2072 0 discriminator 3
 5856 0627 4889FA   		movq	%rdi, %rdx
 5857 062a 48C1FA12 		sarq	$18, %rdx
 5858 062e 81E2FF03 		andl	$1023, %edx
 5858      0000
 5859 0634 410FB614 		movzbl	(%r15,%rdx), %edx
 5859      17
 5860 0639 885008   		movb	%dl, 8(%rax)
 5861              		.loc 1 2075 0 discriminator 3
 5862 063c 488D1429 		leaq	(%rcx,%rbp), %rdx
2076:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2077:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2078:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp15,
 5863              		.loc 1 2078 0 discriminator 3
 5864 0640 4829E9   		subq	%rbp, %rcx
2075:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5865              		.loc 1 2075 0 discriminator 3
 5866 0643 48C1FA12 		sarq	$18, %rdx
 5867 0647 81E2FF03 		andl	$1023, %edx
 5867      0000
 5868 064d 410FB614 		movzbl	(%r15,%rdx), %edx
 5868      17
 5869 0652 885005   		movb	%dl, 5(%rax)
 5870              		.loc 1 2078 0 discriminator 3
 5871 0655 4889CA   		movq	%rcx, %rdx
 5872 0658 48C1FA12 		sarq	$18, %rdx
 5873 065c 81E2FF03 		andl	$1023, %edx
 5873      0000
 5874 0662 410FB614 		movzbl	(%r15,%rdx), %edx
 5874      17
 5875 0667 885007   		movb	%dl, 7(%rax)
2079:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2080:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2081:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp26,
 5876              		.loc 1 2081 0 discriminator 3
 5877 066a 488B5424 		movq	16(%rsp), %rdx
 5877      10
 5878 066f 4C29DA   		subq	%r11, %rdx
 5879 0672 4869D241 		imulq	$11585, %rdx, %rdx
 5879      2D0000
 5880 0679 48035424 		addq	8(%rsp), %rdx
 5880      08
 5881              	.LVL869:
 5882 067e 48C1FA12 		sarq	$18, %rdx
 5883              	.LVL870:
 5884 0682 81E2FF03 		andl	$1023, %edx
 5884      0000
2082:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2083:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2084:fltk-1.3.4-1/jpeg/jidctint.c **** 
2085:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 5885              		.loc 1 2085 0 discriminator 3
 5886 0688 4983C020 		addq	$32, %r8
 5887              	.LVL871:
 5888 068c 48830424 		addq	$8, (%rsp)
 5888      08
2081:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5889              		.loc 1 2081 0 discriminator 3
 5890 0691 410FB614 		movzbl	(%r15,%rdx), %edx
 5890      17
1977:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 5891              		.loc 1 1977 0 discriminator 3
 5892 0696 4C3B4424 		cmpq	80(%rsp), %r8
 5892      50
2081:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 5893              		.loc 1 2081 0 discriminator 3
 5894 069b 885006   		movb	%dl, 6(%rax)
1977:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 5895              		.loc 1 1977 0 discriminator 3
 5896 069e 0F85DCFC 		jne	.L112
 5896      FFFF
2086:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2087:fltk-1.3.4-1/jpeg/jidctint.c **** }
 5897              		.loc 1 2087 0
 5898 06a4 488B8424 		movq	520(%rsp), %rax
 5898      08020000 
 5899 06ac 64483304 		xorq	%fs:40, %rax
 5899      25280000 
 5899      00
 5900              	.LVL872:
 5901 06b5 7512     		jne	.L117
 5902 06b7 4881C418 		addq	$536, %rsp
 5902      020000
 5903              		.cfi_remember_state
 5904              		.cfi_def_cfa_offset 56
 5905 06be 5B       		popq	%rbx
 5906              		.cfi_def_cfa_offset 48
 5907              	.LVL873:
 5908 06bf 5D       		popq	%rbp
 5909              		.cfi_def_cfa_offset 40
 5910              	.LVL874:
 5911 06c0 415C     		popq	%r12
 5912              		.cfi_def_cfa_offset 32
 5913 06c2 415D     		popq	%r13
 5914              		.cfi_def_cfa_offset 24
 5915              	.LVL875:
 5916 06c4 415E     		popq	%r14
 5917              		.cfi_def_cfa_offset 16
 5918 06c6 415F     		popq	%r15
 5919              		.cfi_def_cfa_offset 8
 5920 06c8 C3       		ret
 5921              	.LVL876:
 5922              	.L117:
 5923              		.cfi_restore_state
 5924 06c9 E8000000 		call	__stack_chk_fail
 5924      00
 5925              	.LVL877:
 5926              		.cfi_endproc
 5927              	.LFE73:
 5929              		.section	.text.unlikely.jpeg_idct_13x13
 5930              	.LCOLDE12:
 5931              		.section	.text.jpeg_idct_13x13
 5932              	.LHOTE12:
 5933              		.section	.text.unlikely.jpeg_idct_14x14,"ax",@progbits
 5934              	.LCOLDB13:
 5935              		.section	.text.jpeg_idct_14x14,"ax",@progbits
 5936              	.LHOTB13:
 5937              		.p2align 4,,15
 5938              		.globl	jpeg_idct_14x14
 5940              	jpeg_idct_14x14:
 5941              	.LFB74:
2088:fltk-1.3.4-1/jpeg/jidctint.c **** 
2089:fltk-1.3.4-1/jpeg/jidctint.c **** 
2090:fltk-1.3.4-1/jpeg/jidctint.c **** /*
2091:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
2092:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 14x14 output block.
2093:fltk-1.3.4-1/jpeg/jidctint.c ****  *
2094:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 20 multiplications in the 1-D kernel.
2095:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/28).
2096:fltk-1.3.4-1/jpeg/jidctint.c ****  */
2097:fltk-1.3.4-1/jpeg/jidctint.c **** 
2098:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
2099:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_14x14 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
2100:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
2101:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
2102:fltk-1.3.4-1/jpeg/jidctint.c **** {
 5942              		.loc 1 2102 0
 5943              		.cfi_startproc
 5944              	.LVL878:
 5945 0000 4157     		pushq	%r15
 5946              		.cfi_def_cfa_offset 16
 5947              		.cfi_offset 15, -16
 5948 0002 4156     		pushq	%r14
 5949              		.cfi_def_cfa_offset 24
 5950              		.cfi_offset 14, -24
 5951 0004 4155     		pushq	%r13
 5952              		.cfi_def_cfa_offset 32
 5953              		.cfi_offset 13, -32
 5954 0006 4154     		pushq	%r12
 5955              		.cfi_def_cfa_offset 40
 5956              		.cfi_offset 12, -40
 5957 0008 4989D4   		movq	%rdx, %r12
 5958 000b 55       		pushq	%rbp
 5959              		.cfi_def_cfa_offset 48
 5960              		.cfi_offset 6, -48
 5961 000c 53       		pushq	%rbx
 5962              		.cfi_def_cfa_offset 56
 5963              		.cfi_offset 3, -56
 5964 000d 4881EC58 		subq	$600, %rsp
 5964      020000
 5965              		.cfi_def_cfa_offset 656
2103:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
2104:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
2105:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
2106:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
2107:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
2108:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
2109:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
2110:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
2111:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
2112:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*14];	/* buffers data between passes */
2113:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
2114:fltk-1.3.4-1/jpeg/jidctint.c **** 
2115:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
2116:fltk-1.3.4-1/jpeg/jidctint.c **** 
2117:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
2118:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 5966              		.loc 1 2118 0
 5967 0014 4C8B6E58 		movq	88(%rsi), %r13
2102:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 5968              		.loc 1 2102 0
 5969 0018 64488B04 		movq	%fs:40, %rax
 5969      25280000 
 5969      00
 5970 0021 48898424 		movq	%rax, 584(%rsp)
 5970      48020000 
 5971 0029 31C0     		xorl	%eax, %eax
2110:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 5972              		.loc 1 2110 0
 5973 002b 488B87B8 		movq	440(%rdi), %rax
 5973      010000
2119:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 5974              		.loc 1 2119 0
 5975 0032 488DB424 		leaq	128(%rsp), %rsi
 5975      80000000 
 5976              	.LVL879:
2102:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 5977              		.loc 1 2102 0
 5978 003a 48894C24 		movq	%rcx, 104(%rsp)
 5978      68
 5979 003f 44894424 		movl	%r8d, 116(%rsp)
 5979      74
2110:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 5980              		.loc 1 2110 0
 5981 0044 4C8DB080 		leaq	128(%rax), %r14
 5981      000000
 5982              	.LVL880:
2120:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 5983              		.loc 1 2120 0
 5984 004b 488D8424 		leaq	160(%rsp), %rax
 5984      A0000000 
 5985 0053 4C897424 		movq	%r14, 120(%rsp)
 5985      78
 5986 0058 48894424 		movq	%rax, 96(%rsp)
 5986      60
 5987              	.LVL881:
 5988 005d 0F1F00   		.p2align 4,,10
 5989              		.p2align 3
 5990              	.L119:
2121:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
2122:fltk-1.3.4-1/jpeg/jidctint.c **** 
2123:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
2124:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
2125:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2126:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
2127:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 5991              		.loc 1 2127 0 discriminator 3
 5992 0060 410FBF54 		movswl	64(%r12), %edx
 5992      2440
2123:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 5993              		.loc 1 2123 0 discriminator 3
 5994 0066 410FBF04 		movswl	(%r12), %eax
 5994      24
 5995              		.loc 1 2127 0 discriminator 3
 5996 006b 410FAF95 		imull	128(%r13), %edx
 5996      80000000 
2123:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 5997              		.loc 1 2123 0 discriminator 3
 5998 0073 410FAF45 		imull	0(%r13), %eax
 5998      00
2128:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(1.274162392));         /* c4 */
2129:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z4, FIX(0.314692123));         /* c12 */
2130:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(0.881747734));         /* c8 */
2131:fltk-1.3.4-1/jpeg/jidctint.c **** 
2132:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z2;
2133:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
2134:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
2135:fltk-1.3.4-1/jpeg/jidctint.c **** 
2136:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = RIGHT_SHIFT(z1 - ((z2 + z3 - z4) << 1), /* c0 = (c4+c12-c8)*2 */
2137:fltk-1.3.4-1/jpeg/jidctint.c **** 			CONST_BITS-PASS1_BITS);
2138:fltk-1.3.4-1/jpeg/jidctint.c **** 
2139:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 5999              		.loc 1 2139 0 discriminator 3
 6000 0078 450FBF5C 		movswl	32(%r12), %r11d
 6000      2420
 6001 007e 450FAF5D 		imull	64(%r13), %r11d
 6001      40
2127:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(1.274162392));         /* c4 */
 6002              		.loc 1 2127 0 discriminator 3
 6003 0083 4863D2   		movslq	%edx, %rdx
2129:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(0.881747734));         /* c8 */
 6004              		.loc 1 2129 0 discriminator 3
 6005 0086 4869FA12 		imulq	$2578, %rdx, %rdi
 6005      0A0000
2123:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 6006              		.loc 1 2123 0 discriminator 3
 6007 008d 4898     		cltq
 6008              	.LVL882:
2128:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z4, FIX(0.314692123));         /* c12 */
 6009              		.loc 1 2128 0 discriminator 3
 6010 008f 4869DAC6 		imulq	$10438, %rdx, %rbx
 6010      280000
2124:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 6011              		.loc 1 2124 0 discriminator 3
 6012 0096 48C1E00D 		salq	$13, %rax
 6013              	.LVL883:
2126:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 6014              		.loc 1 2126 0 discriminator 3
 6015 009a 48050004 		addq	$1024, %rax
 6015      0000
 6016              	.LVL884:
 6017              		.loc 1 2139 0 discriminator 3
 6018 00a0 4D63DB   		movslq	%r11d, %r11
2134:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6019              		.loc 1 2134 0 discriminator 3
 6020 00a3 4989C7   		movq	%rax, %r15
2129:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(0.881747734));         /* c8 */
 6021              		.loc 1 2129 0 discriminator 3
 6022 00a6 4889F9   		movq	%rdi, %rcx
 6023              	.LVL885:
2130:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6024              		.loc 1 2130 0 discriminator 3
 6025 00a9 4869FA37 		imulq	$7223, %rdx, %rdi
 6025      1C0000
 6026              	.LVL886:
2140:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 6027              		.loc 1 2140 0 discriminator 3
 6028 00b0 410FBF54 		movswl	96(%r12), %edx
 6028      2460
2132:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 6029              		.loc 1 2132 0 discriminator 3
 6030 00b6 4C8D1418 		leaq	(%rax,%rbx), %r10
 6031              	.LVL887:
 6032              		.loc 1 2140 0 discriminator 3
 6033 00ba 410FAF95 		imull	192(%r13), %edx
 6033      C0000000 
2141:fltk-1.3.4-1/jpeg/jidctint.c **** 
2142:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX(1.105676686));    /* c6 */
2143:fltk-1.3.4-1/jpeg/jidctint.c **** 
2144:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z3 + MULTIPLY(z1, FIX(0.273079590)); /* c2-c6 */
 6034              		.loc 1 2144 0 discriminator 3
 6035 00c2 4D69CBBD 		imulq	$2237, %r11, %r9
 6035      080000
2132:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 6036              		.loc 1 2132 0 discriminator 3
 6037 00c9 48895C24 		movq	%rbx, 8(%rsp)
 6037      08
2133:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
 6038              		.loc 1 2133 0 discriminator 3
 6039 00ce 4C8D0408 		leaq	(%rax,%rcx), %r8
 6040              	.LVL888:
 6041 00d2 48894C24 		movq	%rcx, 16(%rsp)
 6041      10
2134:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6042              		.loc 1 2134 0 discriminator 3
 6043 00d7 4929FF   		subq	%rdi, %r15
 6044 00da 48897C24 		movq	%rdi, 24(%rsp)
 6044      18
 6045 00df 4C89F9   		movq	%r15, %rcx
 6046              	.LVL889:
2140:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6047              		.loc 1 2140 0 discriminator 3
 6048 00e2 4863D2   		movslq	%edx, %rdx
 6049              	.LVL890:
2142:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6050              		.loc 1 2142 0 discriminator 3
 6051 00e5 498D3C13 		leaq	(%r11,%rdx), %rdi
 6052              	.LVL891:
2145:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 6053              		.loc 1 2145 0 discriminator 3
 6054 00e9 4869DAFC 		imulq	$-14084, %rdx, %rbx
 6054      C8FFFF
 6055              	.LVL892:
2142:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6056              		.loc 1 2142 0 discriminator 3
 6057 00f0 4869FF62 		imulq	$9058, %rdi, %rdi
 6057      230000
 6058              	.LVL893:
2146:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.613604268)) -     /* c10 */
 6059              		.loc 1 2146 0 discriminator 3
 6060 00f7 4D69DBA3 		imulq	$5027, %r11, %r11
 6060      130000
 6061              	.LVL894:
2144:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 6062              		.loc 1 2144 0 discriminator 3
 6063 00fe 4901F9   		addq	%rdi, %r9
 6064              	.LVL895:
2145:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 6065              		.loc 1 2145 0 discriminator 3
 6066 0101 4801DF   		addq	%rbx, %rdi
 6067              	.LVL896:
 6068              		.loc 1 2146 0 discriminator 3
 6069 0104 4869D2E1 		imulq	$-11295, %rdx, %rdx
 6069      D3FFFF
 6070              	.LVL897:
2147:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
2148:fltk-1.3.4-1/jpeg/jidctint.c **** 
2149:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp13;
 6071              		.loc 1 2149 0 discriminator 3
 6072 010b 4F8D3C0A 		leaq	(%r10,%r9), %r15
2150:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
2151:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp14;
 6073              		.loc 1 2151 0 discriminator 3
 6074 010f 4D8D3438 		leaq	(%r8,%rdi), %r14
2150:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 6075              		.loc 1 2150 0 discriminator 3
 6076 0113 4D29CA   		subq	%r9, %r10
 6077              	.LVL898:
2152:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 6078              		.loc 1 2152 0 discriminator 3
 6079 0116 4929F8   		subq	%rdi, %r8
 6080              	.LVL899:
2153:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp12 + tmp15;
2154:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
2155:fltk-1.3.4-1/jpeg/jidctint.c **** 
2156:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
2157:fltk-1.3.4-1/jpeg/jidctint.c **** 
2158:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
2159:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
2160:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
2161:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6081              		.loc 1 2161 0 discriminator 3
 6082 0119 410FBF7C 		movswl	112(%r12), %edi
 6082      2470
 6083              	.LVL900:
2152:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 6084              		.loc 1 2152 0 discriminator 3
 6085 011f 4C894424 		movq	%r8, 56(%rsp)
 6085      38
2158:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 6086              		.loc 1 2158 0 discriminator 3
 6087 0124 450FBF44 		movswl	16(%r12), %r8d
 6087      2410
 6088 012a 450FAF45 		imull	32(%r13), %r8d
 6088      20
2146:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
 6089              		.loc 1 2146 0 discriminator 3
 6090 012f 4C01DA   		addq	%r11, %rdx
 6091              	.LVL901:
2151:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 6092              		.loc 1 2151 0 discriminator 3
 6093 0132 4C897424 		movq	%r14, 48(%rsp)
 6093      30
 6094              	.LVL902:
2150:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp14;
 6095              		.loc 1 2150 0 discriminator 3
 6096 0137 4C895424 		movq	%r10, 40(%rsp)
 6096      28
 6097              	.LVL903:
2153:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 6098              		.loc 1 2153 0 discriminator 3
 6099 013c 4C8D0C11 		leaq	(%rcx,%rdx), %r9
 6100              	.LVL904:
2154:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6101              		.loc 1 2154 0 discriminator 3
 6102 0140 4829D1   		subq	%rdx, %rcx
 6103              	.LVL905:
2159:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 6104              		.loc 1 2159 0 discriminator 3
 6105 0143 410FBF54 		movswl	48(%r12), %edx
 6105      2430
 6106              	.LVL906:
2154:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6107              		.loc 1 2154 0 discriminator 3
 6108 0149 48894C24 		movq	%rcx, 72(%rsp)
 6108      48
 6109              	.LVL907:
2160:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6110              		.loc 1 2160 0 discriminator 3
 6111 014e 410FBF4C 		movswl	80(%r12), %ecx
 6111      2450
2159:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 6112              		.loc 1 2159 0 discriminator 3
 6113 0154 410FAF55 		imull	96(%r13), %edx
 6113      60
2160:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6114              		.loc 1 2160 0 discriminator 3
 6115 0159 410FAF8D 		imull	160(%r13), %ecx
 6115      A0000000 
 6116              		.loc 1 2161 0 discriminator 3
 6117 0161 410FAFBD 		imull	224(%r13), %edi
 6117      E0000000 
2158:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 6118              		.loc 1 2158 0 discriminator 3
 6119 0169 4D63C0   		movslq	%r8d, %r8
 6120              	.LVL908:
2153:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 6121              		.loc 1 2153 0 discriminator 3
 6122 016c 4C894C24 		movq	%r9, 64(%rsp)
 6122      40
 6123              	.LVL909:
2149:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 6124              		.loc 1 2149 0 discriminator 3
 6125 0171 4C897C24 		movq	%r15, 32(%rsp)
 6125      20
 6126              	.LVL910:
2162:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z4 << CONST_BITS;
2163:fltk-1.3.4-1/jpeg/jidctint.c **** 
2164:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 + z3;
2165:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
2166:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
2167:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 - MULTIPLY(z1, FIX(1.126980169)); /* c3+c5-c1 */
2168:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
2169:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
2170:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 6127              		.loc 1 2170 0 discriminator 3
 6128 0176 4D89C7   		movq	%r8, %r15
2159:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 6129              		.loc 1 2159 0 discriminator 3
 6130 0179 4863D2   		movslq	%edx, %rdx
 6131              	.LVL911:
2160:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6132              		.loc 1 2160 0 discriminator 3
 6133 017c 4863C9   		movslq	%ecx, %rcx
 6134              	.LVL912:
2165:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
 6135              		.loc 1 2165 0 discriminator 3
 6136 017f 4D8D0C10 		leaq	(%r8,%rdx), %r9
2164:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
 6137              		.loc 1 2164 0 discriminator 3
 6138 0183 498D2C08 		leaq	(%r8,%rcx), %rbp
2161:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z4 << CONST_BITS;
 6139              		.loc 1 2161 0 discriminator 3
 6140 0187 4863FF   		movslq	%edi, %rdi
 6141              	.LVL913:
2165:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
 6142              		.loc 1 2165 0 discriminator 3
 6143 018a 4D69D9B7 		imulq	$10935, %r9, %r11
 6143      2A0000
 6144              	.LVL914:
2162:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6145              		.loc 1 2162 0 discriminator 3
 6146 0191 48897C24 		movq	%rdi, 80(%rsp)
 6146      50
 6147 0196 4889FB   		movq	%rdi, %rbx
 6148              	.LVL915:
2166:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 - MULTIPLY(z1, FIX(1.126980169)); /* c3+c5-c1 */
 6149              		.loc 1 2166 0 discriminator 3
 6150 0199 4869FD52 		imulq	$9810, %rbp, %rdi
 6150      260000
 6151              	.LVL916:
2162:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6152              		.loc 1 2162 0 discriminator 3
 6153 01a0 48C1E30D 		salq	$13, %rbx
 6154              	.LVL917:
2168:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
 6155              		.loc 1 2168 0 discriminator 3
 6156 01a4 4869ED14 		imulq	$6164, %rbp, %rbp
 6156      180000
 6157              	.LVL918:
2167:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 6158              		.loc 1 2167 0 discriminator 3
 6159 01ab 4D8D343B 		leaq	(%r11,%rdi), %r14
2169:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 6160              		.loc 1 2169 0 discriminator 3
 6161 01af 4D69D00B 		imulq	$-8693, %r8, %r10
 6161      DEFFFF
2167:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 6162              		.loc 1 2167 0 discriminator 3
 6163 01b6 4D8D0C1E 		leaq	(%r14,%rbx), %r9
 6164 01ba 4D69F0F0 		imulq	$-9232, %r8, %r14
 6164      DBFFFF
2171:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - tmp13;        /* c11 */
2172:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
2173:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    += z4;
2174:fltk-1.3.4-1/jpeg/jidctint.c ****     z4    = MULTIPLY(z2 + z3, - FIX(0.158341681)) - tmp13; /* -c13 */
 6165              		.loc 1 2174 0 discriminator 3
 6166 01c1 4C8D040A 		leaq	(%rdx,%rcx), %r8
 6167              	.LVL919:
2167:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 6168              		.loc 1 2167 0 discriminator 3
 6169 01c5 4D01CE   		addq	%r9, %r14
 6170              	.LVL920:
2169:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 6171              		.loc 1 2169 0 discriminator 3
 6172 01c8 4901EA   		addq	%rbp, %r10
 6173              	.LVL921:
2170:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - tmp13;        /* c11 */
 6174              		.loc 1 2170 0 discriminator 3
 6175 01cb 4929D7   		subq	%rdx, %r15
 6176              	.LVL922:
 6177              		.loc 1 2174 0 discriminator 3
 6178 01ce 4D69C0EF 		imulq	$-1297, %r8, %r8
 6178      FAFFFF
2171:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - tmp13;        /* c11 */
 6179              		.loc 1 2171 0 discriminator 3
 6180 01d5 4C897C24 		movq	%r15, 88(%rsp)
 6180      58
2175:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z4 - MULTIPLY(z2, FIX(0.424103948));          /* c3-c9-c13 */
 6181              		.loc 1 2175 0 discriminator 3
 6182 01da 4C69CA6E 		imulq	$-3474, %rdx, %r9
 6182      F2FFFF
2171:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
 6183              		.loc 1 2171 0 discriminator 3
 6184 01e1 4D69FFF2 		imulq	$3826, %r15, %r15
 6184      0E0000
 6185              	.LVL923:
2174:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z4 - MULTIPLY(z2, FIX(0.424103948));          /* c3-c9-c13 */
 6186              		.loc 1 2174 0 discriminator 3
 6187 01e8 4929D8   		subq	%rbx, %r8
 6188              		.loc 1 2175 0 discriminator 3
 6189 01eb 4D01C1   		addq	%r8, %r9
 6190 01ee 4D01D9   		addq	%r11, %r9
2171:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
 6191              		.loc 1 2171 0 discriminator 3
 6192 01f1 4929DF   		subq	%rbx, %r15
 6193              	.LVL924:
2176:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z4 - MULTIPLY(z3, FIX(2.373959773));          /* c3+c5-c13 */
 6194              		.loc 1 2176 0 discriminator 3
 6195 01f4 4C69D909 		imulq	$-19447, %rcx, %r11
 6195      B4FFFF
 6196              	.LVL925:
2172:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    += z4;
 6197              		.loc 1 2172 0 discriminator 3
 6198 01fb 4D01FA   		addq	%r15, %r10
 6199              	.LVL926:
 6200              		.loc 1 2176 0 discriminator 3
 6201 01fe 4D01D8   		addq	%r11, %r8
 6202              	.LVL927:
 6203 0201 4901F8   		addq	%rdi, %r8
 6204              	.LVL928:
2177:fltk-1.3.4-1/jpeg/jidctint.c ****     z4    = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 6205              		.loc 1 2177 0 discriminator 3
 6206 0204 4889CF   		movq	%rcx, %rdi
 6207 0207 4829D7   		subq	%rdx, %rdi
 6208 020a 4869FFF8 		imulq	$11512, %rdi, %rdi
 6208      2C0000
 6209              	.LVL929:
2178:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z4 + tmp13 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 6210              		.loc 1 2178 0 discriminator 3
 6211 0211 4C69D9E6 		imulq	$-13850, %rcx, %r11
 6211      C9FFFF
2179:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 6212              		.loc 1 2179 0 discriminator 3
 6213 0218 4869D299 		imulq	$5529, %rdx, %rdx
 6213      150000
 6214              	.LVL930:
2178:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z4 + tmp13 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 6215              		.loc 1 2178 0 discriminator 3
 6216 021f 4801FB   		addq	%rdi, %rbx
 6217              	.LVL931:
 6218 0222 4C01DB   		addq	%r11, %rbx
2180:fltk-1.3.4-1/jpeg/jidctint.c **** 
2181:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = (z1 - z3) << PASS1_BITS;
2182:fltk-1.3.4-1/jpeg/jidctint.c **** 
2183:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
2184:fltk-1.3.4-1/jpeg/jidctint.c **** 
2185:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0]  = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
 6219              		.loc 1 2185 0 discriminator 3
 6220 0225 4C8B5C24 		movq	32(%rsp), %r11
 6220      20
2179:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 6221              		.loc 1 2179 0 discriminator 3
 6222 022a 4801FA   		addq	%rdi, %rdx
2178:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 6223              		.loc 1 2178 0 discriminator 3
 6224 022d 4801EB   		addq	%rbp, %rbx
 6225              	.LVL932:
2179:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 6226              		.loc 1 2179 0 discriminator 3
 6227 0230 4901D7   		addq	%rdx, %r15
 6228              	.LVL933:
 6229              		.loc 1 2185 0 discriminator 3
 6230 0233 4B8D1433 		leaq	(%r11,%r14), %rdx
2186:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 6231              		.loc 1 2186 0 discriminator 3
 6232 0237 4D29F3   		subq	%r14, %r11
2187:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 6233              		.loc 1 2187 0 discriminator 3
 6234 023a 4C8B7424 		movq	48(%rsp), %r14
 6234      30
 6235              	.LVL934:
2185:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 6236              		.loc 1 2185 0 discriminator 3
 6237 023f 48C1FA0B 		sarq	$11, %rdx
 6238 0243 8916     		movl	%edx, (%rsi)
2186:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 6239              		.loc 1 2186 0 discriminator 3
 6240 0245 4C89DA   		movq	%r11, %rdx
 6241 0248 48C1FA0B 		sarq	$11, %rdx
 6242 024c 8996A001 		movl	%edx, 416(%rsi)
 6242      0000
 6243              		.loc 1 2187 0 discriminator 3
 6244 0252 4B8D140E 		leaq	(%r14,%r9), %rdx
2188:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 6245              		.loc 1 2188 0 discriminator 3
 6246 0256 4D29CE   		subq	%r9, %r14
2187:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 6247              		.loc 1 2187 0 discriminator 3
 6248 0259 48C1FA0B 		sarq	$11, %rdx
 6249 025d 895620   		movl	%edx, 32(%rsi)
 6250              		.loc 1 2188 0 discriminator 3
 6251 0260 4C89F2   		movq	%r14, %rdx
 6252 0263 48C1FA0B 		sarq	$11, %rdx
 6253 0267 89968001 		movl	%edx, 384(%rsi)
 6253      0000
2189:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 6254              		.loc 1 2189 0 discriminator 3
 6255 026d 4C8B4C24 		movq	64(%rsp), %r9
 6255      40
 6256              	.LVL935:
2190:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
2191:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) (tmp23 + tmp13);
 6257              		.loc 1 2191 0 discriminator 3
 6258 0272 488B7C24 		movq	8(%rsp), %rdi
 6258      08
 6259              	.LVL936:
 6260 0277 48037C24 		addq	16(%rsp), %rdi
 6260      10
 6261              	.LVL937:
2189:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 6262              		.loc 1 2189 0 discriminator 3
 6263 027c 4B8D1401 		leaq	(%r9,%r8), %rdx
2190:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 6264              		.loc 1 2190 0 discriminator 3
 6265 0280 4D29C1   		subq	%r8, %r9
2192:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) (tmp23 - tmp13);
2193:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
2194:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
2195:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 6266              		.loc 1 2195 0 discriminator 3
 6267 0283 4C8B4424 		movq	56(%rsp), %r8
 6267      38
 6268              	.LVL938:
2189:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 6269              		.loc 1 2189 0 discriminator 3
 6270 0288 48C1FA0B 		sarq	$11, %rdx
 6271 028c 895640   		movl	%edx, 64(%rsi)
2190:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 6272              		.loc 1 2190 0 discriminator 3
 6273 028f 4C89CA   		movq	%r9, %rdx
 6274 0292 48C1FA0B 		sarq	$11, %rdx
 6275 0296 89966001 		movl	%edx, 352(%rsi)
 6275      0000
2191:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) (tmp23 - tmp13);
 6276              		.loc 1 2191 0 discriminator 3
 6277 029c 4889FA   		movq	%rdi, %rdx
 6278 029f 482B5424 		subq	24(%rsp), %rdx
 6278      18
2120:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 6279              		.loc 1 2120 0 discriminator 3
 6280 02a4 4983C402 		addq	$2, %r12
 6281              	.LVL939:
 6282 02a8 4983C504 		addq	$4, %r13
 6283              	.LVL940:
 6284 02ac 4883C604 		addq	$4, %rsi
 6285              	.LVL941:
2191:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) (tmp23 - tmp13);
 6286              		.loc 1 2191 0 discriminator 3
 6287 02b0 4801D2   		addq	%rdx, %rdx
 6288 02b3 4829D0   		subq	%rdx, %rax
 6289              	.LVL942:
 6290 02b6 488B5424 		movq	80(%rsp), %rdx
 6290      50
 6291 02bb 48035424 		addq	88(%rsp), %rdx
 6291      58
 6292              	.LVL943:
 6293 02c0 48C1F80B 		sarq	$11, %rax
 6294 02c4 4829CA   		subq	%rcx, %rdx
 6295              	.LVL944:
 6296 02c7 48C1E202 		salq	$2, %rdx
 6297              	.LVL945:
 6298 02cb 8D0C02   		leal	(%rdx,%rax), %ecx
 6299              	.LVL946:
2192:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 6300              		.loc 1 2192 0 discriminator 3
 6301 02ce 29D0     		subl	%edx, %eax
 6302 02d0 89863C01 		movl	%eax, 316(%rsi)
 6302      0000
2191:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) (tmp23 - tmp13);
 6303              		.loc 1 2191 0 discriminator 3
 6304 02d6 894E5C   		movl	%ecx, 92(%rsi)
2193:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 6305              		.loc 1 2193 0 discriminator 3
 6306 02d9 488B4C24 		movq	72(%rsp), %rcx
 6306      48
 6307 02de 488D0419 		leaq	(%rcx,%rbx), %rax
2194:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 6308              		.loc 1 2194 0 discriminator 3
 6309 02e2 4829D9   		subq	%rbx, %rcx
2196:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
2197:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp16, CONST_BITS-PASS1_BITS);
 6310              		.loc 1 2197 0 discriminator 3
 6311 02e5 488B5C24 		movq	40(%rsp), %rbx
 6311      28
 6312              	.LVL947:
2193:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 6313              		.loc 1 2193 0 discriminator 3
 6314 02ea 48C1F80B 		sarq	$11, %rax
 6315 02ee 89467C   		movl	%eax, 124(%rsi)
2194:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 6316              		.loc 1 2194 0 discriminator 3
 6317 02f1 4889C8   		movq	%rcx, %rax
 6318 02f4 48C1F80B 		sarq	$11, %rax
 6319 02f8 89861C01 		movl	%eax, 284(%rsi)
 6319      0000
2195:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 6320              		.loc 1 2195 0 discriminator 3
 6321 02fe 4B8D0438 		leaq	(%r8,%r15), %rax
 6322 0302 48C1F80B 		sarq	$11, %rax
 6323 0306 89869C00 		movl	%eax, 156(%rsi)
 6323      0000
2196:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 6324              		.loc 1 2196 0 discriminator 3
 6325 030c 4C89C0   		movq	%r8, %rax
 6326 030f 4C29F8   		subq	%r15, %rax
 6327 0312 48C1F80B 		sarq	$11, %rax
 6328 0316 8986FC00 		movl	%eax, 252(%rsi)
 6328      0000
 6329              		.loc 1 2197 0 discriminator 3
 6330 031c 4889D8   		movq	%rbx, %rax
 6331 031f 4C01D0   		addq	%r10, %rax
 6332 0322 48C1F80B 		sarq	$11, %rax
 6333 0326 8986BC00 		movl	%eax, 188(%rsi)
 6333      0000
2198:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp26 - tmp16, CONST_BITS-PASS1_BITS);
 6334              		.loc 1 2198 0 discriminator 3
 6335 032c 4889D8   		movq	%rbx, %rax
 6336 032f 4C29D0   		subq	%r10, %rax
 6337 0332 48C1F80B 		sarq	$11, %rax
 6338 0336 8986DC00 		movl	%eax, 220(%rsi)
 6338      0000
 6339              	.LVL948:
2120:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 6340              		.loc 1 2120 0 discriminator 3
 6341 033c 483B7424 		cmpq	96(%rsp), %rsi
 6341      60
 6342 0341 0F8519FD 		jne	.L119
 6342      FFFF
 6343 0347 8B442474 		movl	116(%rsp), %eax
 6344 034b 4C8B7424 		movq	120(%rsp), %r14
 6344      78
2120:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 6345              		.loc 1 2120 0 is_stmt 0
 6346 0350 4C8DA424 		leaq	128(%rsp), %r12
 6346      80000000 
 6347              	.LVL949:
 6348 0358 48894424 		movq	%rax, 80(%rsp)
 6348      50
 6349              	.LVL950:
 6350 035d 488B4424 		movq	104(%rsp), %rax
 6350      68
 6351 0362 48894424 		movq	%rax, 8(%rsp)
 6351      08
2199:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2200:fltk-1.3.4-1/jpeg/jidctint.c **** 
2201:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 14 rows from work array, store into output array. */
2202:fltk-1.3.4-1/jpeg/jidctint.c **** 
2203:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
2204:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 14; ctr++) {
 6352              		.loc 1 2204 0 is_stmt 1
 6353 0367 488D8424 		leaq	576(%rsp), %rax
 6353      40020000 
 6354 036f 48894424 		movq	%rax, 88(%rsp)
 6354      58
 6355              	.LVL951:
 6356              		.p2align 4,,10
 6357 0374 0F1F4000 		.p2align 3
 6358              	.L120:
2205:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
2206:fltk-1.3.4-1/jpeg/jidctint.c **** 
2207:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
2208:fltk-1.3.4-1/jpeg/jidctint.c **** 
2209:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2210:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
2211:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
2212:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 6359              		.loc 1 2212 0 discriminator 3
 6360 0378 49634C24 		movslq	16(%r12), %rcx
 6360      10
2205:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 6361              		.loc 1 2205 0 discriminator 3
 6362 037d 488B4424 		movq	8(%rsp), %rax
 6362      08
2210:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 6363              		.loc 1 2210 0 discriminator 3
 6364 0382 4D630424 		movslq	(%r12), %r8
2205:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 6365              		.loc 1 2205 0 discriminator 3
 6366 0386 488B5424 		movq	80(%rsp), %rdx
 6366      50
 6367 038b 480310   		addq	(%rax), %rdx
 6368              	.LVL952:
2213:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(1.274162392));         /* c4 */
 6369              		.loc 1 2213 0 discriminator 3
 6370 038e 4C69D1C6 		imulq	$10438, %rcx, %r10
 6370      280000
2214:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z4, FIX(0.314692123));         /* c12 */
 6371              		.loc 1 2214 0 discriminator 3
 6372 0395 4869C112 		imulq	$2578, %rcx, %rax
 6372      0A0000
2210:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 6373              		.loc 1 2210 0 discriminator 3
 6374 039c 4983C010 		addq	$16, %r8
 6375              	.LVL953:
2215:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(0.881747734));         /* c8 */
 6376              		.loc 1 2215 0 discriminator 3
 6377 03a0 4C69C937 		imulq	$7223, %rcx, %r9
 6377      1C0000
2211:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 6378              		.loc 1 2211 0 discriminator 3
 6379 03a7 49C1E00D 		salq	$13, %r8
 6380              	.LVL954:
2216:fltk-1.3.4-1/jpeg/jidctint.c **** 
2217:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z2;
2218:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
2219:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
 6381              		.loc 1 2219 0 discriminator 3
 6382 03ab 4C89C1   		movq	%r8, %rcx
2217:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 6383              		.loc 1 2217 0 discriminator 3
 6384 03ae 4B8D3C10 		leaq	(%r8,%r10), %rdi
 6385              	.LVL955:
2218:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
 6386              		.loc 1 2218 0 discriminator 3
 6387 03b2 498D3400 		leaq	(%r8,%rax), %rsi
 6388              	.LVL956:
2220:fltk-1.3.4-1/jpeg/jidctint.c **** 
2221:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = z1 - ((z2 + z3 - z4) << 1);          /* c0 = (c4+c12-c8)*2 */
 6389              		.loc 1 2221 0 discriminator 3
 6390 03b6 4C01D0   		addq	%r10, %rax
 6391              	.LVL957:
 6392 03b9 4C29C8   		subq	%r9, %rax
2219:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6393              		.loc 1 2219 0 discriminator 3
 6394 03bc 4C29C9   		subq	%r9, %rcx
 6395              	.LVL958:
2222:fltk-1.3.4-1/jpeg/jidctint.c **** 
2223:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
2224:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 6396              		.loc 1 2224 0 discriminator 3
 6397 03bf 4D634C24 		movslq	24(%r12), %r9
 6397      18
 6398              	.LVL959:
2221:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6399              		.loc 1 2221 0 discriminator 3
 6400 03c4 4801C0   		addq	%rax, %rax
 6401 03c7 4929C0   		subq	%rax, %r8
 6402              	.LVL960:
2223:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 6403              		.loc 1 2223 0 discriminator 3
 6404 03ca 49634424 		movslq	8(%r12), %rax
 6404      08
 6405              	.LVL961:
2221:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6406              		.loc 1 2221 0 discriminator 3
 6407 03cf 4C894424 		movq	%r8, 16(%rsp)
 6407      10
 6408              	.LVL962:
2225:fltk-1.3.4-1/jpeg/jidctint.c **** 
2226:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX(1.105676686));    /* c6 */
2227:fltk-1.3.4-1/jpeg/jidctint.c **** 
2228:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z3 + MULTIPLY(z1, FIX(0.273079590)); /* c2-c6 */
2229:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 6409              		.loc 1 2229 0 discriminator 3
 6410 03d4 4D69D9FC 		imulq	$-14084, %r9, %r11
 6410      C8FFFF
2226:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6411              		.loc 1 2226 0 discriminator 3
 6412 03db 4E8D0408 		leaq	(%rax,%r9), %r8
2228:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 6413              		.loc 1 2228 0 discriminator 3
 6414 03df 4C69D0BD 		imulq	$2237, %rax, %r10
 6414      080000
2226:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6415              		.loc 1 2226 0 discriminator 3
 6416 03e6 4D69C062 		imulq	$9058, %r8, %r8
 6416      230000
 6417              	.LVL963:
2230:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.613604268)) -     /* c10 */
 6418              		.loc 1 2230 0 discriminator 3
 6419 03ed 4D69C9E1 		imulq	$-11295, %r9, %r9
 6419      D3FFFF
 6420              	.LVL964:
2228:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 6421              		.loc 1 2228 0 discriminator 3
 6422 03f4 4D01C2   		addq	%r8, %r10
 6423              	.LVL965:
2229:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.613604268)) -     /* c10 */
 6424              		.loc 1 2229 0 discriminator 3
 6425 03f7 4D01D8   		addq	%r11, %r8
 6426              	.LVL966:
 6427              		.loc 1 2230 0 discriminator 3
 6428 03fa 4869C0A3 		imulq	$5027, %rax, %rax
 6428      130000
 6429              	.LVL967:
2231:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
2232:fltk-1.3.4-1/jpeg/jidctint.c **** 
2233:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp13;
 6430              		.loc 1 2233 0 discriminator 3
 6431 0401 4E8D3C17 		leaq	(%rdi,%r10), %r15
2234:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 6432              		.loc 1 2234 0 discriminator 3
 6433 0405 4C29D7   		subq	%r10, %rdi
 6434              	.LVL968:
2235:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp14;
 6435              		.loc 1 2235 0 discriminator 3
 6436 0408 4E8D1406 		leaq	(%rsi,%r8), %r10
 6437              	.LVL969:
2234:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 6438              		.loc 1 2234 0 discriminator 3
 6439 040c 48897C24 		movq	%rdi, 32(%rsp)
 6439      20
2236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 6440              		.loc 1 2236 0 discriminator 3
 6441 0411 4C29C6   		subq	%r8, %rsi
 6442              	.LVL970:
2233:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 6443              		.loc 1 2233 0 discriminator 3
 6444 0414 4C897C24 		movq	%r15, 24(%rsp)
 6444      18
2237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp12 + tmp15;
2238:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
2239:fltk-1.3.4-1/jpeg/jidctint.c **** 
2240:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
2241:fltk-1.3.4-1/jpeg/jidctint.c **** 
2242:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
2243:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
2244:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
2245:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 6445              		.loc 1 2245 0 discriminator 3
 6446 0419 4D634424 		movslq	28(%r12), %r8
 6446      1C
 6447              	.LVL971:
2235:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 6448              		.loc 1 2235 0 discriminator 3
 6449 041e 4C895424 		movq	%r10, 40(%rsp)
 6449      28
2244:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 6450              		.loc 1 2244 0 discriminator 3
 6451 0423 4D635424 		movslq	20(%r12), %r10
 6451      14
2230:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
 6452              		.loc 1 2230 0 discriminator 3
 6453 0428 4C01C8   		addq	%r9, %rax
 6454              	.LVL972:
2236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp12 + tmp15;
 6455              		.loc 1 2236 0 discriminator 3
 6456 042b 48897424 		movq	%rsi, 48(%rsp)
 6456      30
 6457              	.LVL973:
2237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 6458              		.loc 1 2237 0 discriminator 3
 6459 0430 4C8D0C01 		leaq	(%rcx,%rax), %r9
2238:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6460              		.loc 1 2238 0 discriminator 3
 6461 0434 4829C1   		subq	%rax, %rcx
 6462              	.LVL974:
2242:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 6463              		.loc 1 2242 0 discriminator 3
 6464 0437 49634424 		movslq	4(%r12), %rax
 6464      04
 6465              	.LVL975:
2238:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6466              		.loc 1 2238 0 discriminator 3
 6467 043c 48894C24 		movq	%rcx, 64(%rsp)
 6467      40
 6468              	.LVL976:
2243:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 6469              		.loc 1 2243 0 discriminator 3
 6470 0441 49634C24 		movslq	12(%r12), %rcx
 6470      0C
 6471              	.LVL977:
2246:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 <<= CONST_BITS;
 6472              		.loc 1 2246 0 discriminator 3
 6473 0446 49C1E00D 		salq	$13, %r8
 6474              	.LVL978:
2237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 6475              		.loc 1 2237 0 discriminator 3
 6476 044a 4C894C24 		movq	%r9, 56(%rsp)
 6476      38
 6477              	.LVL979:
2247:fltk-1.3.4-1/jpeg/jidctint.c **** 
2248:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 + z3;
 6478              		.loc 1 2248 0 discriminator 3
 6479 044f 4A8D2C10 		leaq	(%rax,%r10), %rbp
 6480              	.LVL980:
2249:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
 6481              		.loc 1 2249 0 discriminator 3
 6482 0453 488D3C08 		leaq	(%rax,%rcx), %rdi
 6483              	.LVL981:
2250:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
2251:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + z4 - MULTIPLY(z1, FIX(1.126980169)); /* c3+c5-c1 */
2252:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
2253:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
2254:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
2255:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - z4;           /* c11 */
2256:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
2257:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z2 + z3, - FIX(0.158341681)) - z4;    /* -c13 */
 6484              		.loc 1 2257 0 discriminator 3
 6485 0457 4E8D0C11 		leaq	(%rcx,%r10), %r9
2250:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
 6486              		.loc 1 2250 0 discriminator 3
 6487 045b 4C69FD52 		imulq	$9810, %rbp, %r15
 6487      260000
 6488              	.LVL982:
2249:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
 6489              		.loc 1 2249 0 discriminator 3
 6490 0462 4C69DFB7 		imulq	$10935, %rdi, %r11
 6490      2A0000
 6491              	.LVL983:
2253:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 6492              		.loc 1 2253 0 discriminator 3
 6493 0469 4869F80B 		imulq	$-8693, %rax, %rdi
 6493      DEFFFF
2251:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 6494              		.loc 1 2251 0 discriminator 3
 6495 0470 4F8D2C3B 		leaq	(%r11,%r15), %r13
2252:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
 6496              		.loc 1 2252 0 discriminator 3
 6497 0474 4869ED14 		imulq	$6164, %rbp, %rbp
 6497      180000
 6498              	.LVL984:
2251:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 6499              		.loc 1 2251 0 discriminator 3
 6500 047b 4B8D7405 		leaq	0(%r13,%r8), %rsi
 6500      00
 6501 0480 4C69E8F0 		imulq	$-9232, %rax, %r13
 6501      DBFFFF
2254:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - z4;           /* c11 */
 6502              		.loc 1 2254 0 discriminator 3
 6503 0487 4829C8   		subq	%rcx, %rax
 6504              	.LVL985:
2253:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 6505              		.loc 1 2253 0 discriminator 3
 6506 048a 4801EF   		addq	%rbp, %rdi
2251:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 6507              		.loc 1 2251 0 discriminator 3
 6508 048d 4901F5   		addq	%rsi, %r13
 6509              	.LVL986:
2255:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
 6510              		.loc 1 2255 0 discriminator 3
 6511 0490 4869F0F2 		imulq	$3826, %rax, %rsi
 6511      0E0000
 6512 0497 4C29C6   		subq	%r8, %rsi
 6513              	.LVL987:
2258:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp13 - MULTIPLY(z2, FIX(0.424103948));       /* c3-c9-c13 */
2259:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
2260:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
2261:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
2262:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
2263:fltk-1.3.4-1/jpeg/jidctint.c **** 
2264:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = ((z1 - z3) << CONST_BITS) + z4;
 6514              		.loc 1 2264 0 discriminator 3
 6515 049a 4C29D0   		subq	%r10, %rax
 6516              	.LVL988:
2257:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp13 - MULTIPLY(z2, FIX(0.424103948));       /* c3-c9-c13 */
 6517              		.loc 1 2257 0 discriminator 3
 6518 049d 4D69C9EF 		imulq	$-1297, %r9, %r9
 6518      FAFFFF
2256:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z2 + z3, - FIX(0.158341681)) - z4;    /* -c13 */
 6519              		.loc 1 2256 0 discriminator 3
 6520 04a4 48897424 		movq	%rsi, 72(%rsp)
 6520      48
 6521 04a9 4801FE   		addq	%rdi, %rsi
 6522              	.LVL989:
2259:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 6523              		.loc 1 2259 0 discriminator 3
 6524 04ac 4969DA09 		imulq	$-19447, %r10, %rbx
 6524      B4FFFF
 6525              		.loc 1 2264 0 discriminator 3
 6526 04b3 48C1E00D 		salq	$13, %rax
2258:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
 6527              		.loc 1 2258 0 discriminator 3
 6528 04b7 4869F96E 		imulq	$-3474, %rcx, %rdi
 6528      F2FFFF
2257:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp13 - MULTIPLY(z2, FIX(0.424103948));       /* c3-c9-c13 */
 6529              		.loc 1 2257 0 discriminator 3
 6530 04be 4D29C1   		subq	%r8, %r9
 6531              	.LVL990:
2259:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 6532              		.loc 1 2259 0 discriminator 3
 6533 04c1 4C01CB   		addq	%r9, %rbx
2258:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
 6534              		.loc 1 2258 0 discriminator 3
 6535 04c4 4C01CF   		addq	%r9, %rdi
2260:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 6536              		.loc 1 2260 0 discriminator 3
 6537 04c7 4D89D1   		movq	%r10, %r9
 6538              	.LVL991:
2259:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 6539              		.loc 1 2259 0 discriminator 3
 6540 04ca 4C01FB   		addq	%r15, %rbx
2260:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 6541              		.loc 1 2260 0 discriminator 3
 6542 04cd 4929C9   		subq	%rcx, %r9
2258:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
 6543              		.loc 1 2258 0 discriminator 3
 6544 04d0 4C01DF   		addq	%r11, %rdi
 6545              	.LVL992:
2262:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6546              		.loc 1 2262 0 discriminator 3
 6547 04d3 4869C999 		imulq	$5529, %rcx, %rcx
 6547      150000
 6548              	.LVL993:
2260:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 6549              		.loc 1 2260 0 discriminator 3
 6550 04da 4D69D9F8 		imulq	$11512, %r9, %r11
 6550      2C0000
 6551              	.LVL994:
2261:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 6552              		.loc 1 2261 0 discriminator 3
 6553 04e1 4D69CAE6 		imulq	$-13850, %r10, %r9
 6553      C9FFFF
2265:fltk-1.3.4-1/jpeg/jidctint.c **** 
2266:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
2267:fltk-1.3.4-1/jpeg/jidctint.c **** 
2268:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
2269:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2270:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2271:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[13] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
2272:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2273:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2274:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 6554              		.loc 1 2274 0 discriminator 3
 6555 04e8 4C8B5424 		movq	40(%rsp), %r10
 6555      28
 6556              	.LVL995:
2261:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 6557              		.loc 1 2261 0 discriminator 3
 6558 04ed 4F8D3C18 		leaq	(%r8,%r11), %r15
2262:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6559              		.loc 1 2262 0 discriminator 3
 6560 04f1 4C01D9   		addq	%r11, %rcx
2268:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6561              		.loc 1 2268 0 discriminator 3
 6562 04f4 4C8B5C24 		movq	24(%rsp), %r11
 6562      18
 6563              	.LVL996:
2264:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6564              		.loc 1 2264 0 discriminator 3
 6565 04f9 4901C0   		addq	%rax, %r8
 6566              	.LVL997:
2262:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6567              		.loc 1 2262 0 discriminator 3
 6568 04fc 48034C24 		addq	72(%rsp), %rcx
 6568      48
2261:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 6569              		.loc 1 2261 0 discriminator 3
 6570 0501 4D01F9   		addq	%r15, %r9
2268:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6571              		.loc 1 2268 0 discriminator 3
 6572 0504 4B8D042B 		leaq	(%r11,%r13), %rax
2271:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6573              		.loc 1 2271 0 discriminator 3
 6574 0508 4D29EB   		subq	%r13, %r11
2261:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 6575              		.loc 1 2261 0 discriminator 3
 6576 050b 4901E9   		addq	%rbp, %r9
 6577              	.LVL998:
2268:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6578              		.loc 1 2268 0 discriminator 3
 6579 050e 48C1F812 		sarq	$18, %rax
 6580 0512 25FF0300 		andl	$1023, %eax
 6580      00
 6581 0517 410FB604 		movzbl	(%r14,%rax), %eax
 6581      06
 6582 051c 8802     		movb	%al, (%rdx)
2271:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6583              		.loc 1 2271 0 discriminator 3
 6584 051e 4C89D8   		movq	%r11, %rax
2275:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2276:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2277:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[12] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
2278:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2279:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2280:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 6585              		.loc 1 2280 0 discriminator 3
 6586 0521 4C8B5C24 		movq	56(%rsp), %r11
 6586      38
2271:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6587              		.loc 1 2271 0 discriminator 3
 6588 0526 48C1F812 		sarq	$18, %rax
 6589 052a 25FF0300 		andl	$1023, %eax
 6589      00
 6590 052f 410FB604 		movzbl	(%r14,%rax), %eax
 6590      06
 6591 0534 88420D   		movb	%al, 13(%rdx)
2274:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6592              		.loc 1 2274 0 discriminator 3
 6593 0537 498D043A 		leaq	(%r10,%rdi), %rax
2277:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6594              		.loc 1 2277 0 discriminator 3
 6595 053b 4929FA   		subq	%rdi, %r10
2274:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6596              		.loc 1 2274 0 discriminator 3
 6597 053e 48C1F812 		sarq	$18, %rax
 6598 0542 25FF0300 		andl	$1023, %eax
 6598      00
 6599 0547 410FB604 		movzbl	(%r14,%rax), %eax
 6599      06
 6600 054c 884201   		movb	%al, 1(%rdx)
2277:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6601              		.loc 1 2277 0 discriminator 3
 6602 054f 4C89D0   		movq	%r10, %rax
 6603 0552 48C1F812 		sarq	$18, %rax
 6604 0556 25FF0300 		andl	$1023, %eax
 6604      00
 6605 055b 410FB604 		movzbl	(%r14,%rax), %eax
 6605      06
 6606 0560 88420C   		movb	%al, 12(%rdx)
 6607              		.loc 1 2280 0 discriminator 3
 6608 0563 498D041B 		leaq	(%r11,%rbx), %rax
 6609 0567 48C1F812 		sarq	$18, %rax
 6610 056b 25FF0300 		andl	$1023, %eax
 6610      00
2281:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2282:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2283:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
 6611              		.loc 1 2283 0 discriminator 3
 6612 0570 4929DB   		subq	%rbx, %r11
2284:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2285:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2286:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
2287:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2288:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2289:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
2290:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2291:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2292:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
2293:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2294:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2295:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
2296:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2297:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2298:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp15,
2299:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2300:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2301:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp15,
2302:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2303:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2304:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp26 + tmp16,
2305:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2306:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2307:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp26 - tmp16,
2308:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2309:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2310:fltk-1.3.4-1/jpeg/jidctint.c **** 
2311:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 6613              		.loc 1 2311 0 discriminator 3
 6614 0573 4983C420 		addq	$32, %r12
 6615              	.LVL999:
2280:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6616              		.loc 1 2280 0 discriminator 3
 6617 0577 410FB604 		movzbl	(%r14,%rax), %eax
 6617      06
 6618 057c 884202   		movb	%al, 2(%rdx)
 6619              	.LVL1000:
2283:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6620              		.loc 1 2283 0 discriminator 3
 6621 057f 4C89D8   		movq	%r11, %rax
2286:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6622              		.loc 1 2286 0 discriminator 3
 6623 0582 488B5C24 		movq	16(%rsp), %rbx
 6623      10
 6624              	.LVL1001:
2283:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6625              		.loc 1 2283 0 discriminator 3
 6626 0587 48C1F812 		sarq	$18, %rax
2292:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6627              		.loc 1 2292 0 discriminator 3
 6628 058b 4C8B7C24 		movq	64(%rsp), %r15
 6628      40
2304:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6629              		.loc 1 2304 0 discriminator 3
 6630 0590 488B7C24 		movq	32(%rsp), %rdi
 6630      20
 6631              	.LVL1002:
2283:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6632              		.loc 1 2283 0 discriminator 3
 6633 0595 25FF0300 		andl	$1023, %eax
 6633      00
 6634 059a 48834424 		addq	$8, 8(%rsp)
 6634      0808
 6635 05a0 410FB604 		movzbl	(%r14,%rax), %eax
 6635      06
 6636 05a5 88420B   		movb	%al, 11(%rdx)
2286:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6637              		.loc 1 2286 0 discriminator 3
 6638 05a8 4889D8   		movq	%rbx, %rax
 6639 05ab 4C01C0   		addq	%r8, %rax
 6640 05ae 48C1F812 		sarq	$18, %rax
 6641 05b2 25FF0300 		andl	$1023, %eax
 6641      00
 6642 05b7 410FB604 		movzbl	(%r14,%rax), %eax
 6642      06
 6643 05bc 884203   		movb	%al, 3(%rdx)
2289:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6644              		.loc 1 2289 0 discriminator 3
 6645 05bf 4889D8   		movq	%rbx, %rax
2298:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6646              		.loc 1 2298 0 discriminator 3
 6647 05c2 488B5C24 		movq	48(%rsp), %rbx
 6647      30
2289:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6648              		.loc 1 2289 0 discriminator 3
 6649 05c7 4C29C0   		subq	%r8, %rax
 6650 05ca 48C1F812 		sarq	$18, %rax
 6651 05ce 25FF0300 		andl	$1023, %eax
 6651      00
 6652 05d3 410FB604 		movzbl	(%r14,%rax), %eax
 6652      06
 6653 05d8 88420A   		movb	%al, 10(%rdx)
2292:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6654              		.loc 1 2292 0 discriminator 3
 6655 05db 4B8D040F 		leaq	(%r15,%r9), %rax
 6656 05df 48C1F812 		sarq	$18, %rax
 6657 05e3 25FF0300 		andl	$1023, %eax
 6657      00
 6658 05e8 410FB604 		movzbl	(%r14,%rax), %eax
 6658      06
 6659 05ed 884204   		movb	%al, 4(%rdx)
2295:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6660              		.loc 1 2295 0 discriminator 3
 6661 05f0 4C89F8   		movq	%r15, %rax
 6662 05f3 4C29C8   		subq	%r9, %rax
 6663 05f6 48C1F812 		sarq	$18, %rax
 6664 05fa 25FF0300 		andl	$1023, %eax
 6664      00
 6665 05ff 410FB604 		movzbl	(%r14,%rax), %eax
 6665      06
 6666 0604 884209   		movb	%al, 9(%rdx)
2298:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6667              		.loc 1 2298 0 discriminator 3
 6668 0607 488D040B 		leaq	(%rbx,%rcx), %rax
 6669 060b 48C1F812 		sarq	$18, %rax
 6670 060f 25FF0300 		andl	$1023, %eax
 6670      00
 6671 0614 410FB604 		movzbl	(%r14,%rax), %eax
 6671      06
 6672 0619 884205   		movb	%al, 5(%rdx)
2301:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6673              		.loc 1 2301 0 discriminator 3
 6674 061c 4889D8   		movq	%rbx, %rax
 6675 061f 4829C8   		subq	%rcx, %rax
 6676 0622 48C1F812 		sarq	$18, %rax
 6677 0626 25FF0300 		andl	$1023, %eax
 6677      00
 6678 062b 410FB604 		movzbl	(%r14,%rax), %eax
 6678      06
 6679 0630 884208   		movb	%al, 8(%rdx)
2304:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6680              		.loc 1 2304 0 discriminator 3
 6681 0633 488D0437 		leaq	(%rdi,%rsi), %rax
 6682 0637 48C1F812 		sarq	$18, %rax
 6683 063b 25FF0300 		andl	$1023, %eax
 6683      00
 6684 0640 410FB604 		movzbl	(%r14,%rax), %eax
 6684      06
 6685 0645 884206   		movb	%al, 6(%rdx)
2307:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6686              		.loc 1 2307 0 discriminator 3
 6687 0648 4889F8   		movq	%rdi, %rax
 6688 064b 4829F0   		subq	%rsi, %rax
 6689 064e 48C1F812 		sarq	$18, %rax
 6690 0652 25FF0300 		andl	$1023, %eax
 6690      00
2204:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 6691              		.loc 1 2204 0 discriminator 3
 6692 0657 4C3B6424 		cmpq	88(%rsp), %r12
 6692      58
2307:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 6693              		.loc 1 2307 0 discriminator 3
 6694 065c 410FB604 		movzbl	(%r14,%rax), %eax
 6694      06
 6695 0661 884207   		movb	%al, 7(%rdx)
2204:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 6696              		.loc 1 2204 0 discriminator 3
 6697 0664 0F850EFD 		jne	.L120
 6697      FFFF
2312:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2313:fltk-1.3.4-1/jpeg/jidctint.c **** }
 6698              		.loc 1 2313 0
 6699 066a 488B8424 		movq	584(%rsp), %rax
 6699      48020000 
 6700 0672 64483304 		xorq	%fs:40, %rax
 6700      25280000 
 6700      00
 6701 067b 7512     		jne	.L125
 6702 067d 4881C458 		addq	$600, %rsp
 6702      020000
 6703              		.cfi_remember_state
 6704              		.cfi_def_cfa_offset 56
 6705 0684 5B       		popq	%rbx
 6706              		.cfi_def_cfa_offset 48
 6707 0685 5D       		popq	%rbp
 6708              		.cfi_def_cfa_offset 40
 6709 0686 415C     		popq	%r12
 6710              		.cfi_def_cfa_offset 32
 6711              	.LVL1003:
 6712 0688 415D     		popq	%r13
 6713              		.cfi_def_cfa_offset 24
 6714              	.LVL1004:
 6715 068a 415E     		popq	%r14
 6716              		.cfi_def_cfa_offset 16
 6717 068c 415F     		popq	%r15
 6718              		.cfi_def_cfa_offset 8
 6719 068e C3       		ret
 6720              	.LVL1005:
 6721              	.L125:
 6722              		.cfi_restore_state
 6723 068f E8000000 		call	__stack_chk_fail
 6723      00
 6724              	.LVL1006:
 6725              		.cfi_endproc
 6726              	.LFE74:
 6728              		.section	.text.unlikely.jpeg_idct_14x14
 6729              	.LCOLDE13:
 6730              		.section	.text.jpeg_idct_14x14
 6731              	.LHOTE13:
 6732              		.section	.text.unlikely.jpeg_idct_15x15,"ax",@progbits
 6733              	.LCOLDB14:
 6734              		.section	.text.jpeg_idct_15x15,"ax",@progbits
 6735              	.LHOTB14:
 6736              		.p2align 4,,15
 6737              		.globl	jpeg_idct_15x15
 6739              	jpeg_idct_15x15:
 6740              	.LFB75:
2314:fltk-1.3.4-1/jpeg/jidctint.c **** 
2315:fltk-1.3.4-1/jpeg/jidctint.c **** 
2316:fltk-1.3.4-1/jpeg/jidctint.c **** /*
2317:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
2318:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 15x15 output block.
2319:fltk-1.3.4-1/jpeg/jidctint.c ****  *
2320:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 22 multiplications in the 1-D kernel.
2321:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/30).
2322:fltk-1.3.4-1/jpeg/jidctint.c ****  */
2323:fltk-1.3.4-1/jpeg/jidctint.c **** 
2324:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
2325:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_15x15 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
2326:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
2327:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
2328:fltk-1.3.4-1/jpeg/jidctint.c **** {
 6741              		.loc 1 2328 0
 6742              		.cfi_startproc
 6743              	.LVL1007:
 6744 0000 4157     		pushq	%r15
 6745              		.cfi_def_cfa_offset 16
 6746              		.cfi_offset 15, -16
 6747 0002 4156     		pushq	%r14
 6748              		.cfi_def_cfa_offset 24
 6749              		.cfi_offset 14, -24
 6750 0004 4989D7   		movq	%rdx, %r15
 6751 0007 4155     		pushq	%r13
 6752              		.cfi_def_cfa_offset 32
 6753              		.cfi_offset 13, -32
 6754 0009 4154     		pushq	%r12
 6755              		.cfi_def_cfa_offset 40
 6756              		.cfi_offset 12, -40
 6757 000b 55       		pushq	%rbp
 6758              		.cfi_def_cfa_offset 48
 6759              		.cfi_offset 6, -48
 6760 000c 53       		pushq	%rbx
 6761              		.cfi_def_cfa_offset 56
 6762              		.cfi_offset 3, -56
 6763 000d 4881EC58 		subq	$600, %rsp
 6763      020000
 6764              		.cfi_def_cfa_offset 656
2329:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
2330:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
2331:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
2332:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
2333:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
2334:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
2335:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
2336:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
2337:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
2338:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*15];	/* buffers data between passes */
2339:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
2340:fltk-1.3.4-1/jpeg/jidctint.c **** 
2341:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
2342:fltk-1.3.4-1/jpeg/jidctint.c **** 
2343:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
2344:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 6765              		.loc 1 2344 0
 6766 0014 488B6E58 		movq	88(%rsi), %rbp
2328:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 6767              		.loc 1 2328 0
 6768 0018 64488B04 		movq	%fs:40, %rax
 6768      25280000 
 6768      00
 6769 0021 48898424 		movq	%rax, 584(%rsp)
 6769      48020000 
 6770 0029 31C0     		xorl	%eax, %eax
2336:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 6771              		.loc 1 2336 0
 6772 002b 488B87B8 		movq	440(%rdi), %rax
 6772      010000
2345:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 6773              		.loc 1 2345 0
 6774 0032 4C8D6C24 		leaq	96(%rsp), %r13
 6774      60
2328:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 6775              		.loc 1 2328 0
 6776 0037 48894C24 		movq	%rcx, 80(%rsp)
 6776      50
 6777 003c 44894424 		movl	%r8d, 72(%rsp)
 6777      48
2336:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 6778              		.loc 1 2336 0
 6779 0041 4C8DB080 		leaq	128(%rax), %r14
 6779      000000
 6780              	.LVL1008:
2346:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 6781              		.loc 1 2346 0
 6782 0048 488D8424 		leaq	128(%rsp), %rax
 6782      80000000 
 6783 0050 4C897424 		movq	%r14, 88(%rsp)
 6783      58
 6784 0055 48894424 		movq	%rax, 64(%rsp)
 6784      40
 6785              	.LVL1009:
 6786 005a 660F1F44 		.p2align 4,,10
 6786      0000
 6787              		.p2align 3
 6788              	.L127:
2347:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
2348:fltk-1.3.4-1/jpeg/jidctint.c **** 
2349:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
2350:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
2351:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2352:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
2353:fltk-1.3.4-1/jpeg/jidctint.c **** 
2354:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
2355:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
2356:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 6789              		.loc 1 2356 0 discriminator 3
 6790 0060 410FBF4F 		movswl	96(%r15), %ecx
 6790      60
2349:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 6791              		.loc 1 2349 0 discriminator 3
 6792 0065 450FBF07 		movswl	(%r15), %r8d
 6793              		.loc 1 2356 0 discriminator 3
 6794 0069 0FAF8DC0 		imull	192(%rbp), %ecx
 6794      000000
2349:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 6795              		.loc 1 2349 0 discriminator 3
 6796 0070 440FAF45 		imull	0(%rbp), %r8d
 6796      00
2354:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 6797              		.loc 1 2354 0 discriminator 3
 6798 0075 410FBF57 		movswl	32(%r15), %edx
 6798      20
2355:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 6799              		.loc 1 2355 0 discriminator 3
 6800 007a 410FBF47 		movswl	64(%r15), %eax
 6800      40
2354:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 6801              		.loc 1 2354 0 discriminator 3
 6802 007f 0FAF5540 		imull	64(%rbp), %edx
2355:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 6803              		.loc 1 2355 0 discriminator 3
 6804 0083 0FAF8580 		imull	128(%rbp), %eax
 6804      000000
 6805              		.loc 1 2356 0 discriminator 3
 6806 008a 4863C9   		movslq	%ecx, %rcx
2349:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 6807              		.loc 1 2349 0 discriminator 3
 6808 008d 4D63C0   		movslq	%r8d, %r8
 6809              	.LVL1010:
2357:fltk-1.3.4-1/jpeg/jidctint.c **** 
2358:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z4, FIX(0.437016024)); /* c12 */
 6810              		.loc 1 2358 0 discriminator 3
 6811 0090 4C69C9FC 		imulq	$3580, %rcx, %r9
 6811      0D0000
2350:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 6812              		.loc 1 2350 0 discriminator 3
 6813 0097 49C1E00D 		salq	$13, %r8
 6814              	.LVL1011:
2359:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(1.144122806)); /* c6 */
 6815              		.loc 1 2359 0 discriminator 3
 6816 009b 4869C99D 		imulq	$9373, %rcx, %rcx
 6816      240000
2352:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6817              		.loc 1 2352 0 discriminator 3
 6818 00a2 4981C000 		addq	$1024, %r8
 6818      040000
 6819              	.LVL1012:
2354:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 6820              		.loc 1 2354 0 discriminator 3
 6821 00a9 4863D2   		movslq	%edx, %rdx
 6822              	.LVL1013:
2355:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 6823              		.loc 1 2355 0 discriminator 3
 6824 00ac 4898     		cltq
 6825              	.LVL1014:
2360:fltk-1.3.4-1/jpeg/jidctint.c **** 
2361:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - tmp10;
 6826              		.loc 1 2361 0 discriminator 3
 6827 00ae 4C89C7   		movq	%r8, %rdi
 6828 00b1 4C29CF   		subq	%r9, %rdi
 6829              	.LVL1015:
2362:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + tmp11;
 6830              		.loc 1 2362 0 discriminator 3
 6831 00b4 498D3408 		leaq	(%r8,%rcx), %rsi
 6832              	.LVL1016:
2363:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= (tmp11 - tmp10) << 1;             /* c0 = (c6-c12)*2 */
 6833              		.loc 1 2363 0 discriminator 3
 6834 00b8 4C29C9   		subq	%r9, %rcx
 6835              	.LVL1017:
2364:fltk-1.3.4-1/jpeg/jidctint.c **** 
2365:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z2 - z3;
2366:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z2;
2367:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(1.337628990)); /* (c2+c4)/2 */
2368:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.045680613)); /* (c2-c4)/2 */
2369:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, FIX(1.439773946));    /* c4+c14 */
2370:fltk-1.3.4-1/jpeg/jidctint.c **** 
2371:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp13 + tmp10 + tmp11;
2372:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp12 - tmp10 + tmp11 + z2;
 6836              		.loc 1 2372 0 discriminator 3
 6837 00bb 4989FB   		movq	%rdi, %r11
2363:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= (tmp11 - tmp10) << 1;             /* c0 = (c6-c12)*2 */
 6838              		.loc 1 2363 0 discriminator 3
 6839 00be 4801C9   		addq	%rcx, %rcx
 6840 00c1 4929C8   		subq	%rcx, %r8
 6841              	.LVL1018:
2365:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z2;
 6842              		.loc 1 2365 0 discriminator 3
 6843 00c4 4889D1   		movq	%rdx, %rcx
 6844 00c7 4829C1   		subq	%rax, %rcx
2366:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(1.337628990)); /* (c2+c4)/2 */
 6845              		.loc 1 2366 0 discriminator 3
 6846 00ca 4801D0   		addq	%rdx, %rax
 6847              	.LVL1019:
2363:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6848              		.loc 1 2363 0 discriminator 3
 6849 00cd 4C89C3   		movq	%r8, %rbx
 6850              	.LVL1020:
2367:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.045680613)); /* (c2-c4)/2 */
 6851              		.loc 1 2367 0 discriminator 3
 6852 00d0 4C69C8CE 		imulq	$10958, %rax, %r9
 6852      2A0000
 6853              	.LVL1021:
2373:fltk-1.3.4-1/jpeg/jidctint.c **** 
2374:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(0.547059574)); /* (c8+c14)/2 */
2375:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.399234004)); /* (c8-c14)/2 */
2376:fltk-1.3.4-1/jpeg/jidctint.c **** 
2377:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp10 - tmp11;
2378:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
2379:fltk-1.3.4-1/jpeg/jidctint.c **** 
2380:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(0.790569415)); /* (c6+c12)/2 */
2381:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.353553391)); /* (c6-c12)/2 */
2382:fltk-1.3.4-1/jpeg/jidctint.c **** 
2383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp10 + tmp11;
2384:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp13 - tmp10 + tmp11;
2385:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
2386:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = z1 + tmp11;                     /* c10 = c6-c12 */
 6854              		.loc 1 2386 0 discriminator 3
 6855 00d7 48891C24 		movq	%rbx, (%rsp)
2368:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, FIX(1.439773946));    /* c4+c14 */
 6856              		.loc 1 2368 0 discriminator 3
 6857 00db 4C69C176 		imulq	$374, %rcx, %r8
 6857      010000
 6858              	.LVL1022:
2369:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6859              		.loc 1 2369 0 discriminator 3
 6860 00e2 4869D213 		imulq	$11795, %rdx, %rdx
 6860      2E0000
 6861              	.LVL1023:
2371:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp12 - tmp10 + tmp11 + z2;
 6862              		.loc 1 2371 0 discriminator 3
 6863 00e9 4E8D140E 		leaq	(%rsi,%r9), %r10
2372:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6864              		.loc 1 2372 0 discriminator 3
 6865 00ed 4D29CB   		subq	%r9, %r11
2371:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp12 - tmp10 + tmp11 + z2;
 6866              		.loc 1 2371 0 discriminator 3
 6867 00f0 4F8D3402 		leaq	(%r10,%r8), %r14
2372:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6868              		.loc 1 2372 0 discriminator 3
 6869 00f4 4D01D8   		addq	%r11, %r8
 6870              	.LVL1024:
2377:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 6871              		.loc 1 2377 0 discriminator 3
 6872 00f7 4989F2   		movq	%rsi, %r10
2372:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6873              		.loc 1 2372 0 discriminator 3
 6874 00fa 4D8D1C10 		leaq	(%r8,%rdx), %r11
2374:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.399234004)); /* (c8-c14)/2 */
 6875              		.loc 1 2374 0 discriminator 3
 6876 00fe 4C69C082 		imulq	$4482, %rax, %r8
 6876      110000
 6877              	.LVL1025:
2371:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp12 - tmp10 + tmp11 + z2;
 6878              		.loc 1 2371 0 discriminator 3
 6879 0105 4C897424 		movq	%r14, 8(%rsp)
 6879      08
 6880              	.LVL1026:
2380:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.353553391)); /* (c6-c12)/2 */
 6881              		.loc 1 2380 0 discriminator 3
 6882 010a 4869C04C 		imulq	$6476, %rax, %rax
 6882      190000
 6883              	.LVL1027:
2372:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6884              		.loc 1 2372 0 discriminator 3
 6885 0111 4C895C24 		movq	%r11, 16(%rsp)
 6885      10
 6886              	.LVL1028:
2375:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6887              		.loc 1 2375 0 discriminator 3
 6888 0116 4C69C9C7 		imulq	$3271, %rcx, %r9
 6888      0C0000
 6889              	.LVL1029:
2377:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 6890              		.loc 1 2377 0 discriminator 3
 6891 011d 4D29C2   		subq	%r8, %r10
2378:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6892              		.loc 1 2378 0 discriminator 3
 6893 0120 4901F8   		addq	%rdi, %r8
2384:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
 6894              		.loc 1 2384 0 discriminator 3
 6895 0123 4829C6   		subq	%rax, %rsi
 6896              	.LVL1030:
2383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp13 - tmp10 + tmp11;
 6897              		.loc 1 2383 0 discriminator 3
 6898 0126 4801C7   		addq	%rax, %rdi
 6899              	.LVL1031:
2381:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6900              		.loc 1 2381 0 discriminator 3
 6901 0129 4869C950 		imulq	$2896, %rcx, %rcx
 6901      0B0000
 6902              	.LVL1032:
2378:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6903              		.loc 1 2378 0 discriminator 3
 6904 0130 4D29C8   		subq	%r9, %r8
2377:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 6905              		.loc 1 2377 0 discriminator 3
 6906 0133 4D29CA   		subq	%r9, %r10
2378:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6907              		.loc 1 2378 0 discriminator 3
 6908 0136 4929D0   		subq	%rdx, %r8
2377:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 6909              		.loc 1 2377 0 discriminator 3
 6910 0139 4C895424 		movq	%r10, 24(%rsp)
 6910      18
 6911              	.LVL1033:
2378:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6912              		.loc 1 2378 0 discriminator 3
 6913 013e 4C894424 		movq	%r8, 32(%rsp)
 6913      20
 6914              	.LVL1034:
2384:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
 6915              		.loc 1 2384 0 discriminator 3
 6916 0143 488D040E 		leaq	(%rsi,%rcx), %rax
 6917              	.LVL1035:
2383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp13 - tmp10 + tmp11;
 6918              		.loc 1 2383 0 discriminator 3
 6919 0147 4801CF   		addq	%rcx, %rdi
2387:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = z1 - tmp11 - tmp11;             /* c0 = (c6-c12)*2 */
2388:fltk-1.3.4-1/jpeg/jidctint.c **** 
2389:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
2390:fltk-1.3.4-1/jpeg/jidctint.c **** 
2391:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
2392:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
2393:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
2394:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z4, FIX(1.224744871));                    /* c5 */
2395:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6920              		.loc 1 2395 0 discriminator 3
 6921 014a 410FBF77 		movswl	112(%r15), %esi
 6921      70
2383:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp13 - tmp10 + tmp11;
 6922              		.loc 1 2383 0 discriminator 3
 6923 014f 48897C24 		movq	%rdi, 40(%rsp)
 6923      28
 6924              	.LVL1036:
2392:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 6925              		.loc 1 2392 0 discriminator 3
 6926 0154 410FBF7F 		movswl	48(%r15), %edi
 6926      30
2385:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = z1 + tmp11;                     /* c10 = c6-c12 */
 6927              		.loc 1 2385 0 discriminator 3
 6928 0159 4801C9   		addq	%rcx, %rcx
 6929              	.LVL1037:
2384:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
 6930              		.loc 1 2384 0 discriminator 3
 6931 015c 48894424 		movq	%rax, 48(%rsp)
 6931      30
 6932              	.LVL1038:
2391:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 6933              		.loc 1 2391 0 discriminator 3
 6934 0161 410FBF47 		movswl	16(%r15), %eax
 6934      10
2386:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = z1 - tmp11 - tmp11;             /* c0 = (c6-c12)*2 */
 6935              		.loc 1 2386 0 discriminator 3
 6936 0166 488D140B 		leaq	(%rbx,%rcx), %rdx
 6937              	.LVL1039:
2391:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 6938              		.loc 1 2391 0 discriminator 3
 6939 016a 0FAF4520 		imull	32(%rbp), %eax
2392:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 6940              		.loc 1 2392 0 discriminator 3
 6941 016e 0FAF7D60 		imull	96(%rbp), %edi
 6942              		.loc 1 2395 0 discriminator 3
 6943 0172 0FAFB5E0 		imull	224(%rbp), %esi
 6943      000000
2386:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = z1 - tmp11 - tmp11;             /* c0 = (c6-c12)*2 */
 6944              		.loc 1 2386 0 discriminator 3
 6945 0179 48895424 		movq	%rdx, 56(%rsp)
 6945      38
 6946              	.LVL1040:
2394:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6947              		.loc 1 2394 0 discriminator 3
 6948 017e 410FBF57 		movswl	80(%r15), %edx
 6948      50
 6949 0183 0FAF95A0 		imull	160(%rbp), %edx
 6949      000000
2391:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 6950              		.loc 1 2391 0 discriminator 3
 6951 018a 4898     		cltq
 6952              	.LVL1041:
2392:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 6953              		.loc 1 2392 0 discriminator 3
 6954 018c 4863FF   		movslq	%edi, %rdi
 6955              	.LVL1042:
2396:fltk-1.3.4-1/jpeg/jidctint.c **** 
2397:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
2398:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1 + tmp13, FIX(0.831253876));         /* c9 */
2399:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp15 + MULTIPLY(z1, FIX(0.513743148));         /* c3-c9 */
2400:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp15 - MULTIPLY(tmp13, FIX(2.176250899));      /* c3+c9 */
2401:fltk-1.3.4-1/jpeg/jidctint.c **** 
2402:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z2, - FIX(0.831253876));               /* -c9 */
2403:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z2, - FIX(1.344997024));               /* -c3 */
2404:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = z1 - z4;
 6956              		.loc 1 2404 0 discriminator 3
 6957 018f 4889C3   		movq	%rax, %rbx
 6958              	.LVL1043:
2395:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6959              		.loc 1 2395 0 discriminator 3
 6960 0192 4863F6   		movslq	%esi, %rsi
2397:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1 + tmp13, FIX(0.831253876));         /* c9 */
 6961              		.loc 1 2397 0 discriminator 3
 6962 0195 4989F9   		movq	%rdi, %r9
 6963 0198 4929F1   		subq	%rsi, %r9
 6964              		.loc 1 2404 0 discriminator 3
 6965 019b 4829F3   		subq	%rsi, %rbx
2397:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1 + tmp13, FIX(0.831253876));         /* c9 */
 6966              		.loc 1 2397 0 discriminator 3
 6967 019e 4D89CA   		movq	%r9, %r10
2398:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp15 + MULTIPLY(z1, FIX(0.513743148));         /* c3-c9 */
 6968              		.loc 1 2398 0 discriminator 3
 6969 01a1 4E8D0C08 		leaq	(%rax,%r9), %r9
2394:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6970              		.loc 1 2394 0 discriminator 3
 6971 01a5 4863D2   		movslq	%edx, %rdx
2399:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp15 - MULTIPLY(tmp13, FIX(2.176250899));      /* c3+c9 */
 6972              		.loc 1 2399 0 discriminator 3
 6973 01a8 4C69E071 		imulq	$4209, %rax, %r12
 6973      100000
2398:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp15 + MULTIPLY(z1, FIX(0.513743148));         /* c3-c9 */
 6974              		.loc 1 2398 0 discriminator 3
 6975 01af 4D69C19A 		imulq	$6810, %r9, %r8
 6975      1A0000
2400:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6976              		.loc 1 2400 0 discriminator 3
 6977 01b6 4D69CA5C 		imulq	$-17828, %r10, %r9
 6977      BAFFFF
 6978              		.loc 1 2404 0 discriminator 3
 6979 01bd 4989DA   		movq	%rbx, %r10
2399:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp15 - MULTIPLY(tmp13, FIX(2.176250899));      /* c3+c9 */
 6980              		.loc 1 2399 0 discriminator 3
 6981 01c0 4D01C4   		addq	%r8, %r12
2394:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 6982              		.loc 1 2394 0 discriminator 3
 6983 01c3 4869D231 		imulq	$10033, %rdx, %rdx
 6983      270000
 6984              	.LVL1044:
2400:fltk-1.3.4-1/jpeg/jidctint.c **** 
 6985              		.loc 1 2400 0 discriminator 3
 6986 01ca 4D01C1   		addq	%r8, %r9
 6987              	.LVL1045:
2405:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z3 + MULTIPLY(z2, FIX(1.406466353));            /* c1 */
 6988              		.loc 1 2405 0 discriminator 3
 6989 01cd 4C69C302 		imulq	$11522, %rbx, %r8
 6989      2D0000
 6990              	.LVL1046:
2406:fltk-1.3.4-1/jpeg/jidctint.c **** 
2407:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + MULTIPLY(z4, FIX(2.457431844)) - tmp15; /* c1+c7 */
 6991              		.loc 1 2407 0 discriminator 3
 6992 01d4 4C69DEA3 		imulq	$20131, %rsi, %r11
 6992      4E0000
2405:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z3 + MULTIPLY(z2, FIX(1.406466353));            /* c1 */
 6993              		.loc 1 2405 0 discriminator 3
 6994 01db 4901D0   		addq	%rdx, %r8
2408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp12 - MULTIPLY(z1, FIX(1.112434820)) + tmp13; /* c1-c13 */
 6995              		.loc 1 2408 0 discriminator 3
 6996 01de 4869D867 		imulq	$-9113, %rax, %rbx
 6996      DCFFFF
2407:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp12 - MULTIPLY(z1, FIX(1.112434820)) + tmp13; /* c1-c13 */
 6997              		.loc 1 2407 0 discriminator 3
 6998 01e5 4D01C3   		addq	%r8, %r11
2402:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z2, - FIX(1.344997024));               /* -c3 */
 6999              		.loc 1 2402 0 discriminator 3
 7000 01e8 4C69F766 		imulq	$-6810, %rdi, %r14
 7000      E5FFFF
 7001              	.LVL1047:
2409:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2, FIX(1.224744871)) - z3;            /* c5 */
 7002              		.loc 1 2409 0 discriminator 3
 7003 01ef 4D69D231 		imulq	$10033, %r10, %r10
 7003      270000
2408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2, FIX(1.224744871)) - z3;            /* c5 */
 7004              		.loc 1 2408 0 discriminator 3
 7005 01f6 4901D8   		addq	%rbx, %r8
2410:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z4, FIX(0.575212477));               /* c11 */
 7006              		.loc 1 2410 0 discriminator 3
 7007 01f9 488D1C30 		leaq	(%rax,%rsi), %rbx
2408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2, FIX(1.224744871)) - z3;            /* c5 */
 7008              		.loc 1 2408 0 discriminator 3
 7009 01fd 4D01F0   		addq	%r14, %r8
 7010              		.loc 1 2410 0 discriminator 3
 7011 0200 4869DB68 		imulq	$4712, %rbx, %rbx
 7011      120000
2409:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2, FIX(1.224744871)) - z3;            /* c5 */
 7012              		.loc 1 2409 0 discriminator 3
 7013 0207 4929D2   		subq	%rdx, %r10
2411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z2 + MULTIPLY(z1, FIX(0.475753014)) - z3;      /* c7-c11 */
 7014              		.loc 1 2411 0 discriminator 3
 7015 020a 4869C039 		imulq	$3897, %rax, %rax
 7015      0F0000
 7016              	.LVL1048:
2412:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z2 - MULTIPLY(z4, FIX(0.869244010)) + z3;      /* c11+c13 */
 7017              		.loc 1 2412 0 discriminator 3
 7018 0211 4869F62F 		imulq	$-7121, %rsi, %rsi
 7018      E4FFFF
 7019              	.LVL1049:
2411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z2 + MULTIPLY(z1, FIX(0.475753014)) - z3;      /* c7-c11 */
 7020              		.loc 1 2411 0 discriminator 3
 7021 0218 4801D8   		addq	%rbx, %rax
2403:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = z1 - z4;
 7022              		.loc 1 2403 0 discriminator 3
 7023 021b 4869FFF6 		imulq	$-11018, %rdi, %rdi
 7023      D4FFFF
 7024              	.LVL1050:
 7025              		.loc 1 2412 0 discriminator 3
 7026 0222 4801DE   		addq	%rbx, %rsi
2411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z2 + MULTIPLY(z1, FIX(0.475753014)) - z3;      /* c7-c11 */
 7027              		.loc 1 2411 0 discriminator 3
 7028 0225 4829D0   		subq	%rdx, %rax
 7029              		.loc 1 2412 0 discriminator 3
 7030 0228 4801D6   		addq	%rdx, %rsi
2411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z2 + MULTIPLY(z1, FIX(0.475753014)) - z3;      /* c7-c11 */
 7031              		.loc 1 2411 0 discriminator 3
 7032 022b 4901C6   		addq	%rax, %r14
 7033              	.LVL1051:
2413:fltk-1.3.4-1/jpeg/jidctint.c **** 
2414:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
2415:fltk-1.3.4-1/jpeg/jidctint.c **** 
2416:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0]  = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
2417:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
2418:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
2419:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
2420:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 7034              		.loc 1 2420 0 discriminator 3
 7035 022e 488B5424 		movq	56(%rsp), %rdx
 7035      38
 7036              	.LVL1052:
2407:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp12 - MULTIPLY(z1, FIX(1.112434820)) + tmp13; /* c1-c13 */
 7037              		.loc 1 2407 0 discriminator 3
 7038 0233 4929FB   		subq	%rdi, %r11
 7039              	.LVL1053:
2412:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7040              		.loc 1 2412 0 discriminator 3
 7041 0236 4801F7   		addq	%rsi, %rdi
 7042              	.LVL1054:
2416:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 7043              		.loc 1 2416 0 discriminator 3
 7044 0239 488B7424 		movq	8(%rsp), %rsi
 7044      08
2346:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 7045              		.loc 1 2346 0 discriminator 3
 7046 023e 4983C702 		addq	$2, %r15
 7047              	.LVL1055:
 7048 0242 4883C504 		addq	$4, %rbp
 7049              	.LVL1056:
 7050 0246 4983C504 		addq	$4, %r13
 7051              	.LVL1057:
2416:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 7052              		.loc 1 2416 0 discriminator 3
 7053 024a 4A8D041E 		leaq	(%rsi,%r11), %rax
2417:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 7054              		.loc 1 2417 0 discriminator 3
 7055 024e 4C29DE   		subq	%r11, %rsi
2416:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 7056              		.loc 1 2416 0 discriminator 3
 7057 0251 48C1F80B 		sarq	$11, %rax
 7058 0255 418945FC 		movl	%eax, -4(%r13)
2417:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 7059              		.loc 1 2417 0 discriminator 3
 7060 0259 4889F0   		movq	%rsi, %rax
2418:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 7061              		.loc 1 2418 0 discriminator 3
 7062 025c 488B7424 		movq	40(%rsp), %rsi
 7062      28
2417:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 7063              		.loc 1 2417 0 discriminator 3
 7064 0261 48C1F80B 		sarq	$11, %rax
 7065 0265 418985BC 		movl	%eax, 444(%r13)
 7065      010000
2418:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 7066              		.loc 1 2418 0 discriminator 3
 7067 026c 4A8D0426 		leaq	(%rsi,%r12), %rax
2419:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 7068              		.loc 1 2419 0 discriminator 3
 7069 0270 4C29E6   		subq	%r12, %rsi
2418:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 7070              		.loc 1 2418 0 discriminator 3
 7071 0273 48C1F80B 		sarq	$11, %rax
 7072 0277 4189451C 		movl	%eax, 28(%r13)
2419:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 7073              		.loc 1 2419 0 discriminator 3
 7074 027b 4889F0   		movq	%rsi, %rax
 7075 027e 48C1F80B 		sarq	$11, %rax
 7076 0282 4189859C 		movl	%eax, 412(%r13)
 7076      010000
 7077              		.loc 1 2420 0 discriminator 3
 7078 0289 4A8D0412 		leaq	(%rdx,%r10), %rax
2421:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 7079              		.loc 1 2421 0 discriminator 3
 7080 028d 4C29D2   		subq	%r10, %rdx
2420:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 7081              		.loc 1 2420 0 discriminator 3
 7082 0290 48C1F80B 		sarq	$11, %rax
 7083 0294 4189453C 		movl	%eax, 60(%r13)
 7084              		.loc 1 2421 0 discriminator 3
 7085 0298 4889D0   		movq	%rdx, %rax
 7086 029b 48C1F80B 		sarq	$11, %rax
 7087 029f 4189857C 		movl	%eax, 380(%r13)
 7087      010000
2422:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 7088              		.loc 1 2422 0 discriminator 3
 7089 02a6 4C8B5C24 		movq	16(%rsp), %r11
 7089      10
 7090              	.LVL1058:
2423:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
2424:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 7091              		.loc 1 2424 0 discriminator 3
 7092 02ab 488B7424 		movq	48(%rsp), %rsi
 7092      30
2425:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
2426:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 7093              		.loc 1 2426 0 discriminator 3
 7094 02b0 4C8B5424 		movq	24(%rsp), %r10
 7094      18
 7095              	.LVL1059:
2427:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
2428:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp16, CONST_BITS-PASS1_BITS);
 7096              		.loc 1 2428 0 discriminator 3
 7097 02b5 488B5C24 		movq	32(%rsp), %rbx
 7097      20
 7098              	.LVL1060:
2422:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 7099              		.loc 1 2422 0 discriminator 3
 7100 02ba 4B8D0433 		leaq	(%r11,%r14), %rax
2423:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 7101              		.loc 1 2423 0 discriminator 3
 7102 02be 4D29F3   		subq	%r14, %r11
2422:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 7103              		.loc 1 2422 0 discriminator 3
 7104 02c1 48C1F80B 		sarq	$11, %rax
 7105 02c5 4189455C 		movl	%eax, 92(%r13)
2423:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 7106              		.loc 1 2423 0 discriminator 3
 7107 02c9 4C89D8   		movq	%r11, %rax
 7108 02cc 48C1F80B 		sarq	$11, %rax
 7109 02d0 4189855C 		movl	%eax, 348(%r13)
 7109      010000
2424:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 7110              		.loc 1 2424 0 discriminator 3
 7111 02d7 4A8D040E 		leaq	(%rsi,%r9), %rax
2425:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 7112              		.loc 1 2425 0 discriminator 3
 7113 02db 4C29CE   		subq	%r9, %rsi
2424:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 7114              		.loc 1 2424 0 discriminator 3
 7115 02de 48C1F80B 		sarq	$11, %rax
 7116 02e2 4189457C 		movl	%eax, 124(%r13)
2425:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 7117              		.loc 1 2425 0 discriminator 3
 7118 02e6 4889F0   		movq	%rsi, %rax
 7119 02e9 48C1F80B 		sarq	$11, %rax
 7120 02ed 4189853C 		movl	%eax, 316(%r13)
 7120      010000
2426:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 7121              		.loc 1 2426 0 discriminator 3
 7122 02f4 498D043A 		leaq	(%r10,%rdi), %rax
2427:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp16, CONST_BITS-PASS1_BITS);
 7123              		.loc 1 2427 0 discriminator 3
 7124 02f8 4929FA   		subq	%rdi, %r10
2426:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 7125              		.loc 1 2426 0 discriminator 3
 7126 02fb 48C1F80B 		sarq	$11, %rax
 7127 02ff 4189859C 		movl	%eax, 156(%r13)
 7127      000000
2427:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp16, CONST_BITS-PASS1_BITS);
 7128              		.loc 1 2427 0 discriminator 3
 7129 0306 4C89D0   		movq	%r10, %rax
 7130 0309 48C1F80B 		sarq	$11, %rax
 7131 030d 4189851C 		movl	%eax, 284(%r13)
 7131      010000
 7132              		.loc 1 2428 0 discriminator 3
 7133 0314 4A8D0403 		leaq	(%rbx,%r8), %rax
2429:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp26 - tmp16, CONST_BITS-PASS1_BITS);
 7134              		.loc 1 2429 0 discriminator 3
 7135 0318 4C29C3   		subq	%r8, %rbx
2428:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp26 - tmp16, CONST_BITS-PASS1_BITS);
 7136              		.loc 1 2428 0 discriminator 3
 7137 031b 48C1F80B 		sarq	$11, %rax
 7138 031f 418985BC 		movl	%eax, 188(%r13)
 7138      000000
 7139              		.loc 1 2429 0 discriminator 3
 7140 0326 4889D8   		movq	%rbx, %rax
 7141 0329 48C1F80B 		sarq	$11, %rax
 7142 032d 418985FC 		movl	%eax, 252(%r13)
 7142      000000
2430:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27, CONST_BITS-PASS1_BITS);
 7143              		.loc 1 2430 0 discriminator 3
 7144 0334 488B0424 		movq	(%rsp), %rax
 7145 0338 4829C8   		subq	%rcx, %rax
 7146 033b 4829C8   		subq	%rcx, %rax
 7147 033e 48C1F80B 		sarq	$11, %rax
 7148 0342 418985DC 		movl	%eax, 220(%r13)
 7148      000000
 7149              	.LVL1061:
2346:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 7150              		.loc 1 2346 0 discriminator 3
 7151 0349 4C3B6C24 		cmpq	64(%rsp), %r13
 7151      40
 7152 034e 0F850CFD 		jne	.L127
 7152      FFFF
 7153 0354 8B442448 		movl	72(%rsp), %eax
 7154 0358 4C8B7424 		movq	88(%rsp), %r14
 7154      58
 7155              	.LVL1062:
2346:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 7156              		.loc 1 2346 0 is_stmt 0
 7157 035d 4C8D6424 		leaq	96(%rsp), %r12
 7157      60
 7158              	.LVL1063:
 7159 0362 48894424 		movq	%rax, 72(%rsp)
 7159      48
 7160              	.LVL1064:
 7161 0367 488B4424 		movq	80(%rsp), %rax
 7161      50
 7162 036c 48890424 		movq	%rax, (%rsp)
 7163              	.LVL1065:
2431:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2432:fltk-1.3.4-1/jpeg/jidctint.c **** 
2433:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 15 rows from work array, store into output array. */
2434:fltk-1.3.4-1/jpeg/jidctint.c **** 
2435:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
2436:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 15; ctr++) {
 7164              		.loc 1 2436 0 is_stmt 1
 7165 0370 488D8424 		leaq	576(%rsp), %rax
 7165      40020000 
 7166 0378 48894424 		movq	%rax, 80(%rsp)
 7166      50
 7167              	.LVL1066:
 7168 037d 0F1F00   		.p2align 4,,10
 7169              		.p2align 3
 7170              	.L128:
2437:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
2438:fltk-1.3.4-1/jpeg/jidctint.c **** 
2439:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
2440:fltk-1.3.4-1/jpeg/jidctint.c **** 
2441:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2442:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
2443:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
2444:fltk-1.3.4-1/jpeg/jidctint.c **** 
2445:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[2];
2446:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
2447:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[6];
 7171              		.loc 1 2447 0 discriminator 3
 7172 0380 49637424 		movslq	24(%r12), %rsi
 7172      18
2442:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 7173              		.loc 1 2442 0 discriminator 3
 7174 0385 49633C24 		movslq	(%r12), %rdi
2445:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 7175              		.loc 1 2445 0 discriminator 3
 7176 0389 4D634C24 		movslq	8(%r12), %r9
 7176      08
2446:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[6];
 7177              		.loc 1 2446 0 discriminator 3
 7178 038e 49635424 		movslq	16(%r12), %rdx
 7178      10
2437:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7179              		.loc 1 2437 0 discriminator 3
 7180 0393 488B1C24 		movq	(%rsp), %rbx
 7181 0397 488B4424 		movq	72(%rsp), %rax
 7181      48
2448:fltk-1.3.4-1/jpeg/jidctint.c **** 
2449:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z4, FIX(0.437016024)); /* c12 */
 7182              		.loc 1 2449 0 discriminator 3
 7183 039c 4C69D6FC 		imulq	$3580, %rsi, %r10
 7183      0D0000
2442:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 7184              		.loc 1 2442 0 discriminator 3
 7185 03a3 4883C710 		addq	$16, %rdi
2450:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(1.144122806)); /* c6 */
 7186              		.loc 1 2450 0 discriminator 3
 7187 03a7 4869F69D 		imulq	$9373, %rsi, %rsi
 7187      240000
2443:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7188              		.loc 1 2443 0 discriminator 3
 7189 03ae 48C1E70D 		salq	$13, %rdi
2437:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7190              		.loc 1 2437 0 discriminator 3
 7191 03b2 480303   		addq	(%rbx), %rax
 7192              	.LVL1067:
2451:fltk-1.3.4-1/jpeg/jidctint.c **** 
2452:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - tmp10;
 7193              		.loc 1 2452 0 discriminator 3
 7194 03b5 4889F9   		movq	%rdi, %rcx
 7195 03b8 4C29D1   		subq	%r10, %rcx
 7196              	.LVL1068:
2453:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + tmp11;
 7197              		.loc 1 2453 0 discriminator 3
 7198 03bb 4C8D0437 		leaq	(%rdi,%rsi), %r8
 7199              	.LVL1069:
2454:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= (tmp11 - tmp10) << 1;             /* c0 = (c6-c12)*2 */
 7200              		.loc 1 2454 0 discriminator 3
 7201 03bf 4C29D6   		subq	%r10, %rsi
 7202              	.LVL1070:
2455:fltk-1.3.4-1/jpeg/jidctint.c **** 
2456:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z2 - z3;
2457:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z2;
2458:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(1.337628990)); /* (c2+c4)/2 */
2459:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.045680613)); /* (c2-c4)/2 */
2460:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, FIX(1.439773946));    /* c4+c14 */
2461:fltk-1.3.4-1/jpeg/jidctint.c **** 
2462:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp13 + tmp10 + tmp11;
2463:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp12 - tmp10 + tmp11 + z2;
 7203              		.loc 1 2463 0 discriminator 3
 7204 03c2 4889CD   		movq	%rcx, %rbp
2454:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= (tmp11 - tmp10) << 1;             /* c0 = (c6-c12)*2 */
 7205              		.loc 1 2454 0 discriminator 3
 7206 03c5 4801F6   		addq	%rsi, %rsi
 7207 03c8 4829F7   		subq	%rsi, %rdi
 7208              	.LVL1071:
2456:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z2;
 7209              		.loc 1 2456 0 discriminator 3
 7210 03cb 4C89CE   		movq	%r9, %rsi
 7211 03ce 4829D6   		subq	%rdx, %rsi
2457:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(1.337628990)); /* (c2+c4)/2 */
 7212              		.loc 1 2457 0 discriminator 3
 7213 03d1 4C01CA   		addq	%r9, %rdx
 7214              	.LVL1072:
2454:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7215              		.loc 1 2454 0 discriminator 3
 7216 03d4 4989FF   		movq	%rdi, %r15
 7217              	.LVL1073:
2458:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.045680613)); /* (c2-c4)/2 */
 7218              		.loc 1 2458 0 discriminator 3
 7219 03d7 4C69DACE 		imulq	$10958, %rdx, %r11
 7219      2A0000
 7220              	.LVL1074:
2464:fltk-1.3.4-1/jpeg/jidctint.c **** 
2465:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(0.547059574)); /* (c8+c14)/2 */
2466:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.399234004)); /* (c8-c14)/2 */
2467:fltk-1.3.4-1/jpeg/jidctint.c **** 
2468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp10 - tmp11;
2469:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
2470:fltk-1.3.4-1/jpeg/jidctint.c **** 
2471:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z3, FIX(0.790569415)); /* (c6+c12)/2 */
2472:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.353553391)); /* (c6-c12)/2 */
2473:fltk-1.3.4-1/jpeg/jidctint.c **** 
2474:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp10 + tmp11;
2475:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp13 - tmp10 + tmp11;
2476:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
2477:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = z1 + tmp11;                     /* c10 = c6-c12 */
 7221              		.loc 1 2477 0 discriminator 3
 7222 03de 4C897C24 		movq	%r15, 8(%rsp)
 7222      08
2459:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, FIX(1.439773946));    /* c4+c14 */
 7223              		.loc 1 2459 0 discriminator 3
 7224 03e3 4C69D676 		imulq	$374, %rsi, %r10
 7224      010000
 7225              	.LVL1075:
2460:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7226              		.loc 1 2460 0 discriminator 3
 7227 03ea 4D69C913 		imulq	$11795, %r9, %r9
 7227      2E0000
 7228              	.LVL1076:
2462:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp12 - tmp10 + tmp11 + z2;
 7229              		.loc 1 2462 0 discriminator 3
 7230 03f1 4B8D3C18 		leaq	(%r8,%r11), %rdi
 7231              	.LVL1077:
2463:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7232              		.loc 1 2463 0 discriminator 3
 7233 03f5 4C29DD   		subq	%r11, %rbp
2462:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp12 - tmp10 + tmp11 + z2;
 7234              		.loc 1 2462 0 discriminator 3
 7235 03f8 4C01D7   		addq	%r10, %rdi
 7236              	.LVL1078:
2463:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7237              		.loc 1 2463 0 discriminator 3
 7238 03fb 4901EA   		addq	%rbp, %r10
 7239              	.LVL1079:
2468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 7240              		.loc 1 2468 0 discriminator 3
 7241 03fe 4C89C5   		movq	%r8, %rbp
2463:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7242              		.loc 1 2463 0 discriminator 3
 7243 0401 4F8D1C0A 		leaq	(%r10,%r9), %r11
 7244              	.LVL1080:
2465:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.399234004)); /* (c8-c14)/2 */
 7245              		.loc 1 2465 0 discriminator 3
 7246 0405 4C69D282 		imulq	$4482, %rdx, %r10
 7246      110000
 7247              	.LVL1081:
2463:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7248              		.loc 1 2463 0 discriminator 3
 7249 040c 4C895C24 		movq	%r11, 16(%rsp)
 7249      10
 7250              	.LVL1082:
2466:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7251              		.loc 1 2466 0 discriminator 3
 7252 0411 4C69DEC7 		imulq	$3271, %rsi, %r11
 7252      0C0000
 7253              	.LVL1083:
2472:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7254              		.loc 1 2472 0 discriminator 3
 7255 0418 4869F650 		imulq	$2896, %rsi, %rsi
 7255      0B0000
 7256              	.LVL1084:
2468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 7257              		.loc 1 2468 0 discriminator 3
 7258 041f 4C29D5   		subq	%r10, %rbp
2469:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7259              		.loc 1 2469 0 discriminator 3
 7260 0422 4901CA   		addq	%rcx, %r10
 7261              	.LVL1085:
2468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 7262              		.loc 1 2468 0 discriminator 3
 7263 0425 4889EB   		movq	%rbp, %rbx
2471:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z4, FIX(0.353553391)); /* (c6-c12)/2 */
 7264              		.loc 1 2471 0 discriminator 3
 7265 0428 4869D24C 		imulq	$6476, %rdx, %rdx
 7265      190000
 7266              	.LVL1086:
2469:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7267              		.loc 1 2469 0 discriminator 3
 7268 042f 4D29DA   		subq	%r11, %r10
2468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 7269              		.loc 1 2468 0 discriminator 3
 7270 0432 4C29DB   		subq	%r11, %rbx
2469:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7271              		.loc 1 2469 0 discriminator 3
 7272 0435 4D29CA   		subq	%r9, %r10
2468:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 + tmp10 - tmp11 - z2;
 7273              		.loc 1 2468 0 discriminator 3
 7274 0438 48895C24 		movq	%rbx, 24(%rsp)
 7274      18
 7275              	.LVL1087:
 7276              		.loc 1 2477 0 discriminator 3
 7277 043d 4C89FB   		movq	%r15, %rbx
2476:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = z1 + tmp11;                     /* c10 = c6-c12 */
 7278              		.loc 1 2476 0 discriminator 3
 7279 0440 4C8D0C36 		leaq	(%rsi,%rsi), %r9
 7280              	.LVL1088:
2469:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7281              		.loc 1 2469 0 discriminator 3
 7282 0444 4C895424 		movq	%r10, 32(%rsp)
 7282      20
 7283              	.LVL1089:
2478:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = z1 - tmp11 - tmp11;             /* c0 = (c6-c12)*2 */
2479:fltk-1.3.4-1/jpeg/jidctint.c **** 
2480:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
2481:fltk-1.3.4-1/jpeg/jidctint.c **** 
2482:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
2483:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
2484:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[5];
2485:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z4, FIX(1.224744871));                    /* c5 */
2486:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 7284              		.loc 1 2486 0 discriminator 3
 7285 0449 4D635424 		movslq	28(%r12), %r10
 7285      1C
2477:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = z1 - tmp11 - tmp11;             /* c0 = (c6-c12)*2 */
 7286              		.loc 1 2477 0 discriminator 3
 7287 044e 4C01CB   		addq	%r9, %rbx
2475:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
 7288              		.loc 1 2475 0 discriminator 3
 7289 0451 4929D0   		subq	%rdx, %r8
 7290              	.LVL1090:
2474:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp13 - tmp10 + tmp11;
 7291              		.loc 1 2474 0 discriminator 3
 7292 0454 4801D1   		addq	%rdx, %rcx
 7293              	.LVL1091:
2477:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = z1 - tmp11 - tmp11;             /* c0 = (c6-c12)*2 */
 7294              		.loc 1 2477 0 discriminator 3
 7295 0457 48895C24 		movq	%rbx, 56(%rsp)
 7295      38
2475:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
 7296              		.loc 1 2475 0 discriminator 3
 7297 045c 498D1430 		leaq	(%r8,%rsi), %rdx
 7298              	.LVL1092:
2483:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[5];
 7299              		.loc 1 2483 0 discriminator 3
 7300 0460 49635C24 		movslq	12(%r12), %rbx
 7300      0C
2474:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp13 - tmp10 + tmp11;
 7301              		.loc 1 2474 0 discriminator 3
 7302 0465 4801F1   		addq	%rsi, %rcx
 7303              	.LVL1093:
2485:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 7304              		.loc 1 2485 0 discriminator 3
 7305 0468 49637424 		movslq	20(%r12), %rsi
 7305      14
2477:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = z1 - tmp11 - tmp11;             /* c0 = (c6-c12)*2 */
 7306              		.loc 1 2477 0 discriminator 3
 7307 046d 4C894C24 		movq	%r9, 48(%rsp)
 7307      30
 7308              	.LVL1094:
2475:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp11;
 7309              		.loc 1 2475 0 discriminator 3
 7310 0472 48895424 		movq	%rdx, 40(%rsp)
 7310      28
 7311              	.LVL1095:
2482:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 7312              		.loc 1 2482 0 discriminator 3
 7313 0477 49635424 		movslq	4(%r12), %rdx
 7313      04
 7314              	.LVL1096:
2487:fltk-1.3.4-1/jpeg/jidctint.c **** 
2488:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
 7315              		.loc 1 2488 0 discriminator 3
 7316 047c 4989DF   		movq	%rbx, %r15
 7317 047f 4D29D7   		subq	%r10, %r15
2489:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1 + tmp13, FIX(0.831253876));         /* c9 */
 7318              		.loc 1 2489 0 discriminator 3
 7319 0482 4E8D043A 		leaq	(%rdx,%r15), %r8
2485:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 7320              		.loc 1 2485 0 discriminator 3
 7321 0486 4869F631 		imulq	$10033, %rsi, %rsi
 7321      270000
 7322              	.LVL1097:
 7323              		.loc 1 2489 0 discriminator 3
 7324 048d 4D69C09A 		imulq	$6810, %r8, %r8
 7324      1A0000
 7325              	.LVL1098:
2490:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp15 + MULTIPLY(z1, FIX(0.513743148));         /* c3-c9 */
 7326              		.loc 1 2490 0 discriminator 3
 7327 0494 4C69EA71 		imulq	$4209, %rdx, %r13
 7327      100000
2491:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp15 - MULTIPLY(tmp13, FIX(2.176250899));      /* c3+c9 */
 7328              		.loc 1 2491 0 discriminator 3
 7329 049b 4D69CF5C 		imulq	$-17828, %r15, %r9
 7329      BAFFFF
 7330              	.LVL1099:
2490:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp15 + MULTIPLY(z1, FIX(0.513743148));         /* c3-c9 */
 7331              		.loc 1 2490 0 discriminator 3
 7332 04a2 4D01C5   		addq	%r8, %r13
 7333              	.LVL1100:
2492:fltk-1.3.4-1/jpeg/jidctint.c **** 
2493:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z2, - FIX(0.831253876));               /* -c9 */
2494:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z2, - FIX(1.344997024));               /* -c3 */
2495:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = z1 - z4;
2496:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z3 + MULTIPLY(z2, FIX(1.406466353));            /* c1 */
2497:fltk-1.3.4-1/jpeg/jidctint.c **** 
2498:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + MULTIPLY(z4, FIX(2.457431844)) - tmp15; /* c1+c7 */
2499:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp12 - MULTIPLY(z1, FIX(1.112434820)) + tmp13; /* c1-c13 */
 7334              		.loc 1 2499 0 discriminator 3
 7335 04a5 4869EA67 		imulq	$-9113, %rdx, %rbp
 7335      DCFFFF
2498:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp12 - MULTIPLY(z1, FIX(1.112434820)) + tmp13; /* c1-c13 */
 7336              		.loc 1 2498 0 discriminator 3
 7337 04ac 4D69DAA3 		imulq	$20131, %r10, %r11
 7337      4E0000
2491:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = tmp15 - MULTIPLY(tmp13, FIX(2.176250899));      /* c3+c9 */
 7338              		.loc 1 2491 0 discriminator 3
 7339 04b3 4F8D3C01 		leaq	(%r9,%r8), %r15
 7340              	.LVL1101:
2495:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z3 + MULTIPLY(z2, FIX(1.406466353));            /* c1 */
 7341              		.loc 1 2495 0 discriminator 3
 7342 04b7 4989D0   		movq	%rdx, %r8
 7343              	.LVL1102:
 7344 04ba 4D29D0   		subq	%r10, %r8
 7345 04bd 4D89C1   		movq	%r8, %r9
2491:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7346              		.loc 1 2491 0 discriminator 3
 7347 04c0 4C897C24 		movq	%r15, 64(%rsp)
 7347      40
 7348              	.LVL1103:
2496:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7349              		.loc 1 2496 0 discriminator 3
 7350 04c5 4D69C002 		imulq	$11522, %r8, %r8
 7350      2D0000
2493:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z2, - FIX(1.344997024));               /* -c3 */
 7351              		.loc 1 2493 0 discriminator 3
 7352 04cc 4C69FB66 		imulq	$-6810, %rbx, %r15
 7352      E5FFFF
 7353              	.LVL1104:
2494:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = z1 - z4;
 7354              		.loc 1 2494 0 discriminator 3
 7355 04d3 4869DBF6 		imulq	$-11018, %rbx, %rbx
 7355      D4FFFF
 7356              	.LVL1105:
2496:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7357              		.loc 1 2496 0 discriminator 3
 7358 04da 4901F0   		addq	%rsi, %r8
 7359              	.LVL1106:
2498:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp12 - MULTIPLY(z1, FIX(1.112434820)) + tmp13; /* c1-c13 */
 7360              		.loc 1 2498 0 discriminator 3
 7361 04dd 4D01C3   		addq	%r8, %r11
 7362              		.loc 1 2499 0 discriminator 3
 7363 04e0 4901E8   		addq	%rbp, %r8
 7364              	.LVL1107:
2500:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2, FIX(1.224744871)) - z3;            /* c5 */
2501:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z4, FIX(0.575212477));               /* c11 */
 7365              		.loc 1 2501 0 discriminator 3
 7366 04e3 4A8D2C12 		leaq	(%rdx,%r10), %rbp
2502:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z2 + MULTIPLY(z1, FIX(0.475753014)) - z3;      /* c7-c11 */
 7367              		.loc 1 2502 0 discriminator 3
 7368 04e7 4869D239 		imulq	$3897, %rdx, %rdx
 7368      0F0000
 7369              	.LVL1108:
2498:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp12 - MULTIPLY(z1, FIX(1.112434820)) + tmp13; /* c1-c13 */
 7370              		.loc 1 2498 0 discriminator 3
 7371 04ee 4929DB   		subq	%rbx, %r11
 7372              	.LVL1109:
2499:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2, FIX(1.224744871)) - z3;            /* c5 */
 7373              		.loc 1 2499 0 discriminator 3
 7374 04f1 4D01F8   		addq	%r15, %r8
 7375              	.LVL1110:
2501:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += z2 + MULTIPLY(z1, FIX(0.475753014)) - z3;      /* c7-c11 */
 7376              		.loc 1 2501 0 discriminator 3
 7377 04f4 4869ED68 		imulq	$4712, %rbp, %rbp
 7377      120000
2503:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z2 - MULTIPLY(z4, FIX(0.869244010)) + z3;      /* c11+c13 */
 7378              		.loc 1 2503 0 discriminator 3
 7379 04fb 4D69D22F 		imulq	$-7121, %r10, %r10
 7379      E4FFFF
 7380              	.LVL1111:
2502:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z2 - MULTIPLY(z4, FIX(0.869244010)) + z3;      /* c11+c13 */
 7381              		.loc 1 2502 0 discriminator 3
 7382 0502 4801EA   		addq	%rbp, %rdx
 7383 0505 4829F2   		subq	%rsi, %rdx
 7384              		.loc 1 2503 0 discriminator 3
 7385 0508 4901EA   		addq	%rbp, %r10
2502:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z2 - MULTIPLY(z4, FIX(0.869244010)) + z3;      /* c11+c13 */
 7386              		.loc 1 2502 0 discriminator 3
 7387 050b 4901D7   		addq	%rdx, %r15
 7388              	.LVL1112:
2504:fltk-1.3.4-1/jpeg/jidctint.c **** 
2505:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
2506:fltk-1.3.4-1/jpeg/jidctint.c **** 
2507:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
 7389              		.loc 1 2507 0 discriminator 3
 7390 050e 4A8D141F 		leaq	(%rdi,%r11), %rdx
2508:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2509:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2510:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[14] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
 7391              		.loc 1 2510 0 discriminator 3
 7392 0512 4C29DF   		subq	%r11, %rdi
 7393              	.LVL1113:
 7394 0515 48C1FF12 		sarq	$18, %rdi
2503:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7395              		.loc 1 2503 0 discriminator 3
 7396 0519 4901F2   		addq	%rsi, %r10
2507:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7397              		.loc 1 2507 0 discriminator 3
 7398 051c 48C1FA12 		sarq	$18, %rdx
 7399              		.loc 1 2510 0 discriminator 3
 7400 0520 81E7FF03 		andl	$1023, %edi
 7400      0000
2503:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7401              		.loc 1 2503 0 discriminator 3
 7402 0526 4C01D3   		addq	%r10, %rbx
 7403              	.LVL1114:
2507:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7404              		.loc 1 2507 0 discriminator 3
 7405 0529 81E2FF03 		andl	$1023, %edx
 7405      0000
 7406 052f 410FB614 		movzbl	(%r14,%rdx), %edx
 7406      16
2500:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z4, FIX(0.575212477));               /* c11 */
 7407              		.loc 1 2500 0 discriminator 3
 7408 0534 4D69C931 		imulq	$10033, %r9, %r9
 7408      270000
 7409              	.LVL1115:
2507:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7410              		.loc 1 2507 0 discriminator 3
 7411 053b 8810     		movb	%dl, (%rax)
 7412              		.loc 1 2510 0 discriminator 3
 7413 053d 410FB614 		movzbl	(%r14,%rdi), %edx
 7413      3E
2500:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z4, FIX(0.575212477));               /* c11 */
 7414              		.loc 1 2500 0 discriminator 3
 7415 0542 4929F1   		subq	%rsi, %r9
 7416              	.LVL1116:
 7417              		.loc 1 2510 0 discriminator 3
 7418 0545 88500E   		movb	%dl, 14(%rax)
2511:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2512:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2513:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 7419              		.loc 1 2513 0 discriminator 3
 7420 0548 4A8D1429 		leaq	(%rcx,%r13), %rdx
 7421 054c 48C1FA12 		sarq	$18, %rdx
 7422 0550 81E2FF03 		andl	$1023, %edx
 7422      0000
2514:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2515:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2516:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[13] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
 7423              		.loc 1 2516 0 discriminator 3
 7424 0556 4C29E9   		subq	%r13, %rcx
 7425              	.LVL1117:
2513:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7426              		.loc 1 2513 0 discriminator 3
 7427 0559 410FB614 		movzbl	(%r14,%rdx), %edx
 7427      16
 7428              		.loc 1 2516 0 discriminator 3
 7429 055e 48C1F912 		sarq	$18, %rcx
 7430 0562 81E1FF03 		andl	$1023, %ecx
 7430      0000
2513:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7431              		.loc 1 2513 0 discriminator 3
 7432 0568 885001   		movb	%dl, 1(%rax)
 7433              		.loc 1 2516 0 discriminator 3
 7434 056b 410FB614 		movzbl	(%r14,%rcx), %edx
 7434      0E
2517:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2518:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2519:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 7435              		.loc 1 2519 0 discriminator 3
 7436 0570 488B4C24 		movq	56(%rsp), %rcx
 7436      38
2516:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7437              		.loc 1 2516 0 discriminator 3
 7438 0575 88500D   		movb	%dl, 13(%rax)
 7439              		.loc 1 2519 0 discriminator 3
 7440 0578 4A8D1409 		leaq	(%rcx,%r9), %rdx
 7441 057c 48C1FA12 		sarq	$18, %rdx
 7442 0580 81E2FF03 		andl	$1023, %edx
 7442      0000
 7443 0586 410FB614 		movzbl	(%r14,%rdx), %edx
 7443      16
 7444 058b 885002   		movb	%dl, 2(%rax)
2520:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2521:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2522:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[12] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
 7445              		.loc 1 2522 0 discriminator 3
 7446 058e 4889CA   		movq	%rcx, %rdx
 7447 0591 4C29CA   		subq	%r9, %rdx
 7448 0594 48C1FA12 		sarq	$18, %rdx
 7449 0598 81E2FF03 		andl	$1023, %edx
 7449      0000
 7450 059e 410FB614 		movzbl	(%r14,%rdx), %edx
 7450      16
 7451 05a3 88500C   		movb	%dl, 12(%rax)
2523:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2524:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2525:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
 7452              		.loc 1 2525 0 discriminator 3
 7453 05a6 4C8B5C24 		movq	16(%rsp), %r11
 7453      10
 7454              	.LVL1118:
2526:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2527:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2528:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
2529:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2530:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2531:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
 7455              		.loc 1 2531 0 discriminator 3
 7456 05ab 488B7424 		movq	40(%rsp), %rsi
 7456      28
 7457              	.LVL1119:
2532:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2533:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2534:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
2535:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2536:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2537:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp15,
 7458              		.loc 1 2537 0 discriminator 3
 7459 05b0 488B7C24 		movq	24(%rsp), %rdi
 7459      18
2538:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2539:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2540:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp15,
2541:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2542:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2543:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp26 + tmp16,
 7460              		.loc 1 2543 0 discriminator 3
 7461 05b5 4C8B5424 		movq	32(%rsp), %r10
 7461      20
2544:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2545:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2546:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp26 - tmp16,
2547:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2548:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2549:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp27,
 7462              		.loc 1 2549 0 discriminator 3
 7463 05ba 4C8B4C24 		movq	48(%rsp), %r9
 7463      30
 7464              	.LVL1120:
2525:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7465              		.loc 1 2525 0 discriminator 3
 7466 05bf 4B8D143B 		leaq	(%r11,%r15), %rdx
2528:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7467              		.loc 1 2528 0 discriminator 3
 7468 05c3 4D29FB   		subq	%r15, %r11
2531:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7469              		.loc 1 2531 0 discriminator 3
 7470 05c6 4C8B7C24 		movq	64(%rsp), %r15
 7470      40
 7471              	.LVL1121:
 7472 05cb 4889F1   		movq	%rsi, %rcx
2525:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7473              		.loc 1 2525 0 discriminator 3
 7474 05ce 48C1FA12 		sarq	$18, %rdx
 7475 05d2 81E2FF03 		andl	$1023, %edx
 7475      0000
2531:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7476              		.loc 1 2531 0 discriminator 3
 7477 05d8 4C01F9   		addq	%r15, %rcx
2525:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7478              		.loc 1 2525 0 discriminator 3
 7479 05db 410FB614 		movzbl	(%r14,%rdx), %edx
 7479      16
 7480 05e0 885003   		movb	%dl, 3(%rax)
2528:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7481              		.loc 1 2528 0 discriminator 3
 7482 05e3 4C89DA   		movq	%r11, %rdx
 7483 05e6 48C1FA12 		sarq	$18, %rdx
 7484 05ea 81E2FF03 		andl	$1023, %edx
 7484      0000
 7485 05f0 410FB614 		movzbl	(%r14,%rdx), %edx
 7485      16
 7486 05f5 88500B   		movb	%dl, 11(%rax)
2531:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7487              		.loc 1 2531 0 discriminator 3
 7488 05f8 4889CA   		movq	%rcx, %rdx
2534:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7489              		.loc 1 2534 0 discriminator 3
 7490 05fb 4889F1   		movq	%rsi, %rcx
2531:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7491              		.loc 1 2531 0 discriminator 3
 7492 05fe 48C1FA12 		sarq	$18, %rdx
2534:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7493              		.loc 1 2534 0 discriminator 3
 7494 0602 4C29F9   		subq	%r15, %rcx
2531:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7495              		.loc 1 2531 0 discriminator 3
 7496 0605 81E2FF03 		andl	$1023, %edx
 7496      0000
 7497 060b 410FB614 		movzbl	(%r14,%rdx), %edx
 7497      16
 7498 0610 885004   		movb	%dl, 4(%rax)
2534:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7499              		.loc 1 2534 0 discriminator 3
 7500 0613 4889CA   		movq	%rcx, %rdx
 7501 0616 48C1FA12 		sarq	$18, %rdx
 7502 061a 81E2FF03 		andl	$1023, %edx
 7502      0000
 7503 0620 410FB614 		movzbl	(%r14,%rdx), %edx
 7503      16
 7504 0625 88500A   		movb	%dl, 10(%rax)
2537:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7505              		.loc 1 2537 0 discriminator 3
 7506 0628 488D141F 		leaq	(%rdi,%rbx), %rdx
2540:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7507              		.loc 1 2540 0 discriminator 3
 7508 062c 4829DF   		subq	%rbx, %rdi
2537:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7509              		.loc 1 2537 0 discriminator 3
 7510 062f 48C1FA12 		sarq	$18, %rdx
 7511 0633 81E2FF03 		andl	$1023, %edx
 7511      0000
 7512 0639 410FB614 		movzbl	(%r14,%rdx), %edx
 7512      16
 7513 063e 885005   		movb	%dl, 5(%rax)
2540:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7514              		.loc 1 2540 0 discriminator 3
 7515 0641 4889FA   		movq	%rdi, %rdx
 7516 0644 48C1FA12 		sarq	$18, %rdx
 7517 0648 81E2FF03 		andl	$1023, %edx
 7517      0000
 7518 064e 410FB614 		movzbl	(%r14,%rdx), %edx
 7518      16
 7519 0653 885009   		movb	%dl, 9(%rax)
2543:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7520              		.loc 1 2543 0 discriminator 3
 7521 0656 4B8D1402 		leaq	(%r10,%r8), %rdx
2546:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7522              		.loc 1 2546 0 discriminator 3
 7523 065a 4D29C2   		subq	%r8, %r10
2543:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7524              		.loc 1 2543 0 discriminator 3
 7525 065d 48C1FA12 		sarq	$18, %rdx
 7526 0661 81E2FF03 		andl	$1023, %edx
 7526      0000
 7527 0667 410FB614 		movzbl	(%r14,%rdx), %edx
 7527      16
 7528 066c 885006   		movb	%dl, 6(%rax)
2546:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7529              		.loc 1 2546 0 discriminator 3
 7530 066f 4C89D2   		movq	%r10, %rdx
 7531 0672 48C1FA12 		sarq	$18, %rdx
 7532 0676 81E2FF03 		andl	$1023, %edx
 7532      0000
 7533 067c 410FB614 		movzbl	(%r14,%rdx), %edx
 7533      16
 7534 0681 885008   		movb	%dl, 8(%rax)
 7535              		.loc 1 2549 0 discriminator 3
 7536 0684 488B5424 		movq	8(%rsp), %rdx
 7536      08
 7537 0689 4C29CA   		subq	%r9, %rdx
 7538 068c 4C29CA   		subq	%r9, %rdx
 7539 068f 48C1FA12 		sarq	$18, %rdx
2550:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2551:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2552:fltk-1.3.4-1/jpeg/jidctint.c **** 
2553:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 7540              		.loc 1 2553 0 discriminator 3
 7541 0693 4983C420 		addq	$32, %r12
 7542              	.LVL1122:
 7543 0697 48830424 		addq	$8, (%rsp)
 7543      08
2549:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7544              		.loc 1 2549 0 discriminator 3
 7545 069c 81E2FF03 		andl	$1023, %edx
 7545      0000
2436:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 7546              		.loc 1 2436 0 discriminator 3
 7547 06a2 4C3B6424 		cmpq	80(%rsp), %r12
 7547      50
2549:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 7548              		.loc 1 2549 0 discriminator 3
 7549 06a7 410FB614 		movzbl	(%r14,%rdx), %edx
 7549      16
 7550 06ac 885007   		movb	%dl, 7(%rax)
2436:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 7551              		.loc 1 2436 0 discriminator 3
 7552 06af 0F85CBFC 		jne	.L128
 7552      FFFF
2554:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2555:fltk-1.3.4-1/jpeg/jidctint.c **** }
 7553              		.loc 1 2555 0
 7554 06b5 488B8424 		movq	584(%rsp), %rax
 7554      48020000 
 7555 06bd 64483304 		xorq	%fs:40, %rax
 7555      25280000 
 7555      00
 7556              	.LVL1123:
 7557 06c6 7512     		jne	.L133
 7558 06c8 4881C458 		addq	$600, %rsp
 7558      020000
 7559              		.cfi_remember_state
 7560              		.cfi_def_cfa_offset 56
 7561 06cf 5B       		popq	%rbx
 7562              		.cfi_def_cfa_offset 48
 7563              	.LVL1124:
 7564 06d0 5D       		popq	%rbp
 7565              		.cfi_def_cfa_offset 40
 7566              	.LVL1125:
 7567 06d1 415C     		popq	%r12
 7568              		.cfi_def_cfa_offset 32
 7569              	.LVL1126:
 7570 06d3 415D     		popq	%r13
 7571              		.cfi_def_cfa_offset 24
 7572              	.LVL1127:
 7573 06d5 415E     		popq	%r14
 7574              		.cfi_def_cfa_offset 16
 7575 06d7 415F     		popq	%r15
 7576              		.cfi_def_cfa_offset 8
 7577 06d9 C3       		ret
 7578              	.LVL1128:
 7579              	.L133:
 7580              		.cfi_restore_state
 7581 06da E8000000 		call	__stack_chk_fail
 7581      00
 7582              	.LVL1129:
 7583              		.cfi_endproc
 7584              	.LFE75:
 7586              		.section	.text.unlikely.jpeg_idct_15x15
 7587              	.LCOLDE14:
 7588              		.section	.text.jpeg_idct_15x15
 7589              	.LHOTE14:
 7590              		.section	.text.unlikely.jpeg_idct_16x16,"ax",@progbits
 7591              	.LCOLDB15:
 7592              		.section	.text.jpeg_idct_16x16,"ax",@progbits
 7593              	.LHOTB15:
 7594              		.p2align 4,,15
 7595              		.globl	jpeg_idct_16x16
 7597              	jpeg_idct_16x16:
 7598              	.LFB76:
2556:fltk-1.3.4-1/jpeg/jidctint.c **** 
2557:fltk-1.3.4-1/jpeg/jidctint.c **** 
2558:fltk-1.3.4-1/jpeg/jidctint.c **** /*
2559:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
2560:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 16x16 output block.
2561:fltk-1.3.4-1/jpeg/jidctint.c ****  *
2562:fltk-1.3.4-1/jpeg/jidctint.c ****  * Optimized algorithm with 28 multiplications in the 1-D kernel.
2563:fltk-1.3.4-1/jpeg/jidctint.c ****  * cK represents sqrt(2) * cos(K*pi/32).
2564:fltk-1.3.4-1/jpeg/jidctint.c ****  */
2565:fltk-1.3.4-1/jpeg/jidctint.c **** 
2566:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
2567:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_16x16 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
2568:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JCOEFPTR coef_block,
2569:fltk-1.3.4-1/jpeg/jidctint.c **** 		 JSAMPARRAY output_buf, JDIMENSION output_col)
2570:fltk-1.3.4-1/jpeg/jidctint.c **** {
 7599              		.loc 1 2570 0
 7600              		.cfi_startproc
 7601              	.LVL1130:
 7602 0000 4157     		pushq	%r15
 7603              		.cfi_def_cfa_offset 16
 7604              		.cfi_offset 15, -16
 7605 0002 4156     		pushq	%r14
 7606              		.cfi_def_cfa_offset 24
 7607              		.cfi_offset 14, -24
 7608 0004 4155     		pushq	%r13
 7609              		.cfi_def_cfa_offset 32
 7610              		.cfi_offset 13, -32
 7611 0006 4154     		pushq	%r12
 7612              		.cfi_def_cfa_offset 40
 7613              		.cfi_offset 12, -40
 7614 0008 55       		pushq	%rbp
 7615              		.cfi_def_cfa_offset 48
 7616              		.cfi_offset 6, -48
 7617 0009 53       		pushq	%rbx
 7618              		.cfi_def_cfa_offset 56
 7619              		.cfi_offset 3, -56
 7620 000a 4881EC88 		subq	$648, %rsp
 7620      020000
 7621              		.cfi_def_cfa_offset 704
 7622              		.loc 1 2570 0
 7623 0011 64488B04 		movq	%fs:40, %rax
 7623      25280000 
 7623      00
 7624 001a 48898424 		movq	%rax, 632(%rsp)
 7624      78020000 
 7625 0022 31C0     		xorl	%eax, %eax
2571:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13;
2572:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
2573:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
2574:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
2575:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
2576:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
2577:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
2578:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 7626              		.loc 1 2578 0
 7627 0024 488B87B8 		movq	440(%rdi), %rax
 7627      010000
2570:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13;
 7628              		.loc 1 2570 0
 7629 002b 44894424 		movl	%r8d, 88(%rsp)
 7629      58
2579:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
2580:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*16];	/* buffers data between passes */
2581:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
2582:fltk-1.3.4-1/jpeg/jidctint.c **** 
2583:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
2584:fltk-1.3.4-1/jpeg/jidctint.c **** 
2585:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
2586:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
2587:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 7630              		.loc 1 2587 0
 7631 0030 4C8D4424 		leaq	112(%rsp), %r8
 7631      70
 7632              	.LVL1131:
2570:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13;
 7633              		.loc 1 2570 0
 7634 0035 48894C24 		movq	%rcx, 96(%rsp)
 7634      60
2588:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 7635              		.loc 1 2588 0
 7636 003a 4889D7   		movq	%rdx, %rdi
 7637              	.LVL1132:
2578:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 7638              		.loc 1 2578 0
 7639 003d 4C8DB080 		leaq	128(%rax), %r14
 7639      000000
 7640              	.LVL1133:
2586:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 7641              		.loc 1 2586 0
 7642 0044 488B4658 		movq	88(%rsi), %rax
 7643              	.LVL1134:
 7644              		.loc 1 2588 0
 7645 0048 488DB424 		leaq	144(%rsp), %rsi
 7645      90000000 
 7646              	.LVL1135:
 7647 0050 4C897424 		movq	%r14, 104(%rsp)
 7647      68
 7648 0055 48897424 		movq	%rsi, 80(%rsp)
 7648      50
 7649 005a 4889C6   		movq	%rax, %rsi
 7650              	.LVL1136:
 7651 005d 0F1F00   		.p2align 4,,10
 7652              		.p2align 3
 7653              	.L135:
2589:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
2590:fltk-1.3.4-1/jpeg/jidctint.c **** 
2591:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
2592:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
2593:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2594:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += 1 << (CONST_BITS-PASS1_BITS-1);
2595:fltk-1.3.4-1/jpeg/jidctint.c **** 
2596:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 7654              		.loc 1 2596 0 discriminator 3
 7655 0060 0FBF4F40 		movswl	64(%rdi), %ecx
2591:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 7656              		.loc 1 2591 0 discriminator 3
 7657 0064 0FBF07   		movswl	(%rdi), %eax
 7658              		.loc 1 2596 0 discriminator 3
 7659 0067 0FAF8E80 		imull	128(%rsi), %ecx
 7659      000000
2591:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 7660              		.loc 1 2591 0 discriminator 3
 7661 006e 0FAF06   		imull	(%rsi), %eax
2597:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
2598:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX_0_541196100);       /* c12[16] = c6[8] */
2599:fltk-1.3.4-1/jpeg/jidctint.c **** 
2600:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp1;
2601:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
2602:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
2603:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
2604:fltk-1.3.4-1/jpeg/jidctint.c **** 
2605:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 7662              		.loc 1 2605 0 discriminator 3
 7663 0071 440FBF67 		movswl	32(%rdi), %r12d
 7663      20
 7664 0076 440FAF66 		imull	64(%rsi), %r12d
 7664      40
2596:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
 7665              		.loc 1 2596 0 discriminator 3
 7666 007b 4863C9   		movslq	%ecx, %rcx
2597:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
 7667              		.loc 1 2597 0 discriminator 3
 7668 007e 4869D1CF 		imulq	$10703, %rcx, %rdx
 7668      290000
2591:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 7669              		.loc 1 2591 0 discriminator 3
 7670 0085 4898     		cltq
 7671              	.LVL1137:
2598:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7672              		.loc 1 2598 0 discriminator 3
 7673 0087 4869C951 		imulq	$4433, %rcx, %rcx
 7673      110000
2592:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 7674              		.loc 1 2592 0 discriminator 3
 7675 008e 48C1E00D 		salq	$13, %rax
 7676              	.LVL1138:
2594:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7677              		.loc 1 2594 0 discriminator 3
 7678 0092 48050004 		addq	$1024, %rax
 7678      0000
 7679              	.LVL1139:
 7680              		.loc 1 2605 0 discriminator 3
 7681 0098 4D63E4   		movslq	%r12d, %r12
2601:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 7682              		.loc 1 2601 0 discriminator 3
 7683 009b 4989C6   		movq	%rax, %r14
2606:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
2607:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 7684              		.loc 1 2607 0 discriminator 3
 7685 009e 4D89E1   		movq	%r12, %r9
2600:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
 7686              		.loc 1 2600 0 discriminator 3
 7687 00a1 488D1C10 		leaq	(%rax,%rdx), %rbx
 7688              	.LVL1140:
2601:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 7689              		.loc 1 2601 0 discriminator 3
 7690 00a5 4929D6   		subq	%rdx, %r14
2602:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 7691              		.loc 1 2602 0 discriminator 3
 7692 00a8 4C8D1408 		leaq	(%rax,%rcx), %r10
2603:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7693              		.loc 1 2603 0 discriminator 3
 7694 00ac 4829C8   		subq	%rcx, %rax
 7695              	.LVL1141:
2606:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 7696              		.loc 1 2606 0 discriminator 3
 7697 00af 0FBF4F60 		movswl	96(%rdi), %ecx
 7698              	.LVL1142:
 7699 00b3 0FAF8EC0 		imull	192(%rsi), %ecx
 7699      000000
2601:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 7700              		.loc 1 2601 0 discriminator 3
 7701 00ba 4C89F2   		movq	%r14, %rdx
 7702              	.LVL1143:
2608:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
2609:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, FIX(1.387039845));        /* c2[16] = c1[8] */
2610:fltk-1.3.4-1/jpeg/jidctint.c **** 
2611:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z3 + MULTIPLY(z2, FIX_2_562915447);  /* (c6+c2)[16] = (c3+c1)[8] */
2612:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 7703              		.loc 1 2612 0 discriminator 3
 7704 00bd 4D69DCCD 		imulq	$7373, %r12, %r11
 7704      1C0000
2606:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 7705              		.loc 1 2606 0 discriminator 3
 7706 00c4 4863C9   		movslq	%ecx, %rcx
 7707              	.LVL1144:
2607:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
 7708              		.loc 1 2607 0 discriminator 3
 7709 00c7 4929C9   		subq	%rcx, %r9
 7710              	.LVL1145:
2608:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
 7711              		.loc 1 2608 0 discriminator 3
 7712 00ca 4D69E9D4 		imulq	$2260, %r9, %r13
 7712      080000
 7713              	.LVL1146:
2609:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7714              		.loc 1 2609 0 discriminator 3
 7715 00d1 4D69F163 		imulq	$11363, %r9, %r14
 7715      2C0000
 7716              	.LVL1147:
2611:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 7717              		.loc 1 2611 0 discriminator 3
 7718 00d8 4869E903 		imulq	$20995, %rcx, %rbp
 7718      520000
 7719              		.loc 1 2612 0 discriminator 3
 7720 00df 4D01EB   		addq	%r13, %r11
2613:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z3 - MULTIPLY(z1, FIX(0.601344887)); /* (c2-c10)[16] = (c1-c5)[8] */
2614:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
2615:fltk-1.3.4-1/jpeg/jidctint.c **** 
2616:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp0;
2617:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
2618:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
 7721              		.loc 1 2618 0 discriminator 3
 7722 00e2 4F8D3C1A 		leaq	(%r10,%r11), %r15
2619:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
 7723              		.loc 1 2619 0 discriminator 3
 7724 00e6 4D29DA   		subq	%r11, %r10
 7725              	.LVL1148:
2613:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z3 - MULTIPLY(z1, FIX(0.601344887)); /* (c2-c10)[16] = (c1-c5)[8] */
 7726              		.loc 1 2613 0 discriminator 3
 7727 00e9 4D69CCC2 		imulq	$-4926, %r12, %r9
 7727      ECFFFF
2611:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 7728              		.loc 1 2611 0 discriminator 3
 7729 00f0 4C01F5   		addq	%r14, %rbp
 7730              	.LVL1149:
 7731              		.loc 1 2619 0 discriminator 3
 7732 00f3 4C895424 		movq	%r10, 32(%rsp)
 7732      20
2614:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7733              		.loc 1 2614 0 discriminator 3
 7734 00f8 4869C9B0 		imulq	$-4176, %rcx, %rcx
 7734      EFFFFF
 7735              	.LVL1150:
2620:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
2621:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
2622:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
2623:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
2624:fltk-1.3.4-1/jpeg/jidctint.c **** 
2625:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
2626:fltk-1.3.4-1/jpeg/jidctint.c **** 
2627:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 7736              		.loc 1 2627 0 discriminator 3
 7737 00ff 440FBF57 		movswl	16(%rdi), %r10d
 7737      10
2618:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
 7738              		.loc 1 2618 0 discriminator 3
 7739 0104 4C897C24 		movq	%r15, 24(%rsp)
 7739      18
 7740              		.loc 1 2627 0 discriminator 3
 7741 0109 440FAF56 		imull	32(%rsi), %r10d
 7741      20
2613:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
 7742              		.loc 1 2613 0 discriminator 3
 7743 010e 4D01F1   		addq	%r14, %r9
 7744              	.LVL1151:
2616:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 7745              		.loc 1 2616 0 discriminator 3
 7746 0111 4C8D342B 		leaq	(%rbx,%rbp), %r14
 7747              	.LVL1152:
2617:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
 7748              		.loc 1 2617 0 discriminator 3
 7749 0115 4829EB   		subq	%rbp, %rbx
 7750              	.LVL1153:
2614:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7751              		.loc 1 2614 0 discriminator 3
 7752 0118 4C01E9   		addq	%r13, %rcx
 7753              	.LVL1154:
2620:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 7754              		.loc 1 2620 0 discriminator 3
 7755 011b 4A8D2C08 		leaq	(%rax,%r9), %rbp
 7756              	.LVL1155:
2621:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
 7757              		.loc 1 2621 0 discriminator 3
 7758 011f 4C29C8   		subq	%r9, %rax
 7759              	.LVL1156:
 7760 0122 48894424 		movq	%rax, 48(%rsp)
 7760      30
 7761              	.LVL1157:
2622:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 7762              		.loc 1 2622 0 discriminator 3
 7763 0127 4C8D0C0A 		leaq	(%rdx,%rcx), %r9
 7764              	.LVL1158:
2628:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 7765              		.loc 1 2628 0 discriminator 3
 7766 012b 0FBF4730 		movswl	48(%rdi), %eax
2623:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7767              		.loc 1 2623 0 discriminator 3
 7768 012f 4829CA   		subq	%rcx, %rdx
 7769              	.LVL1159:
2629:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 7770              		.loc 1 2629 0 discriminator 3
 7771 0132 0FBF4F50 		movswl	80(%rdi), %ecx
 7772              	.LVL1160:
2620:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 7773              		.loc 1 2620 0 discriminator 3
 7774 0136 48896C24 		movq	%rbp, 40(%rsp)
 7774      28
 7775              	.LVL1161:
2628:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 7776              		.loc 1 2628 0 discriminator 3
 7777 013b 0FAF4660 		imull	96(%rsi), %eax
 7778              		.loc 1 2629 0 discriminator 3
 7779 013f 0FAF8EA0 		imull	160(%rsi), %ecx
 7779      000000
2623:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7780              		.loc 1 2623 0 discriminator 3
 7781 0146 48895424 		movq	%rdx, 64(%rsp)
 7781      40
 7782              	.LVL1162:
2630:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 7783              		.loc 1 2630 0 discriminator 3
 7784 014b 0FBF5770 		movswl	112(%rdi), %edx
2627:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 7785              		.loc 1 2627 0 discriminator 3
 7786 014f 4D63D2   		movslq	%r10d, %r10
 7787              	.LVL1163:
 7788              		.loc 1 2630 0 discriminator 3
 7789 0152 0FAF96E0 		imull	224(%rsi), %edx
 7789      000000
2622:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 7790              		.loc 1 2622 0 discriminator 3
 7791 0159 4C894C24 		movq	%r9, 56(%rsp)
 7791      38
 7792              	.LVL1164:
2616:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 7793              		.loc 1 2616 0 discriminator 3
 7794 015e 4C897424 		movq	%r14, 8(%rsp)
 7794      08
 7795              	.LVL1165:
2631:fltk-1.3.4-1/jpeg/jidctint.c **** 
2632:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
2633:fltk-1.3.4-1/jpeg/jidctint.c **** 
2634:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  = MULTIPLY(z1 + z2, FIX(1.353318001));   /* c3 */
2635:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
2636:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  = MULTIPLY(z1 + z4, FIX(1.093201867));   /* c7 */
2637:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 7796              		.loc 1 2637 0 discriminator 3
 7797 0163 4D89D5   		movq	%r10, %r13
 7798              	.LVL1166:
2617:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
 7799              		.loc 1 2617 0 discriminator 3
 7800 0166 48895C24 		movq	%rbx, 16(%rsp)
 7800      10
 7801              	.LVL1167:
2638:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
2639:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.410524528));   /* c13 */
 7802              		.loc 1 2639 0 discriminator 3
 7803 016b 4D89D4   		movq	%r10, %r12
 7804              	.LVL1168:
2628:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 7805              		.loc 1 2628 0 discriminator 3
 7806 016e 4898     		cltq
 7807              	.LVL1169:
2629:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 7808              		.loc 1 2629 0 discriminator 3
 7809 0170 4863C9   		movslq	%ecx, %rcx
 7810              	.LVL1170:
2634:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
 7811              		.loc 1 2634 0 discriminator 3
 7812 0173 4D8D0C02 		leaq	(%r10,%rax), %r9
2632:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7813              		.loc 1 2632 0 discriminator 3
 7814 0177 498D2C0A 		leaq	(%r10,%rcx), %rbp
2630:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7815              		.loc 1 2630 0 discriminator 3
 7816 017b 4863D2   		movslq	%edx, %rdx
 7817              	.LVL1171:
2635:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  = MULTIPLY(z1 + z4, FIX(1.093201867));   /* c7 */
 7818              		.loc 1 2635 0 discriminator 3
 7819 017e 4869DDE9 		imulq	$10217, %rbp, %rbx
 7819      270000
2636:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 7820              		.loc 1 2636 0 discriminator 3
 7821 0185 4D8D3412 		leaq	(%r10,%rdx), %r14
2634:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
 7822              		.loc 1 2634 0 discriminator 3
 7823 0189 4D69C94E 		imulq	$11086, %r9, %r9
 7823      2B0000
 7824              	.LVL1172:
2636:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 7825              		.loc 1 2636 0 discriminator 3
 7826 0190 4D69F6FC 		imulq	$8956, %r14, %r14
 7826      220000
 7827              	.LVL1173:
2637:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
 7828              		.loc 1 2637 0 discriminator 3
 7829 0197 4929D5   		subq	%rdx, %r13
 7830              		.loc 1 2639 0 discriminator 3
 7831 019a 4929C4   		subq	%rax, %r12
 7832 019d 4D69FC23 		imulq	$3363, %r12, %r15
 7832      0D0000
 7833              	.LVL1174:
2640:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0  = tmp1 + tmp2 + tmp3 -
 7834              		.loc 1 2640 0 discriminator 3
 7835 01a4 4D8D2419 		leaq	(%r9,%rbx), %r12
2637:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
 7836              		.loc 1 2637 0 discriminator 3
 7837 01a8 4D69EDB6 		imulq	$7350, %r13, %r13
 7837      1C0000
 7838              	.LVL1175:
 7839              		.loc 1 2640 0 discriminator 3
 7840 01af 4F8D1C34 		leaq	(%r12,%r14), %r11
2638:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.410524528));   /* c13 */
 7841              		.loc 1 2638 0 discriminator 3
 7842 01b3 4869ED55 		imulq	$5461, %rbp, %rbp
 7842      150000
 7843              	.LVL1176:
 7844              		.loc 1 2640 0 discriminator 3
 7845 01ba 4D69E2D6 		imulq	$-18730, %r10, %r12
 7845      B6FFFF
2641:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.286341144));        /* c7+c5+c3-c1 */
2642:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp10 + tmp11 + tmp12 -
 7846              		.loc 1 2642 0 discriminator 3
 7847 01c1 4D69D242 		imulq	$-15038, %r10, %r10
 7847      C5FFFF
 7848              	.LVL1177:
2640:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.286341144));        /* c7+c5+c3-c1 */
 7849              		.loc 1 2640 0 discriminator 3
 7850 01c8 4D01DC   		addq	%r11, %r12
 7851              	.LVL1178:
 7852              		.loc 1 2642 0 discriminator 3
 7853 01cb 4D8D5C2D 		leaq	0(%r13,%rbp), %r11
 7853      00
 7854 01d0 4D01FB   		addq	%r15, %r11
 7855 01d3 4D01D3   		addq	%r10, %r11
2643:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
2644:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z3, FIX(0.138617169));   /* c15 */
 7856              		.loc 1 2644 0 discriminator 3
 7857 01d6 4C8D1408 		leaq	(%rax,%rcx), %r10
2642:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
 7858              		.loc 1 2642 0 discriminator 3
 7859 01da 4C895C24 		movq	%r11, 72(%rsp)
 7859      48
 7860              	.LVL1179:
 7861              		.loc 1 2644 0 discriminator 3
 7862 01df 4D69D270 		imulq	$1136, %r10, %r10
 7862      040000
 7863              	.LVL1180:
2645:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1 + MULTIPLY(z2, FIX(0.071888074));  /* c9+c11-c3-c15 */
 7864              		.loc 1 2645 0 discriminator 3
 7865 01e6 4C69D84D 		imulq	$589, %rax, %r11
 7865      020000
 7866 01ed 4D01D3   		addq	%r10, %r11
 7867 01f0 4D01D9   		addq	%r11, %r9
 7868              	.LVL1181:
2646:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z1 - MULTIPLY(z3, FIX(1.125726048));  /* c5+c7+c15-c3 */
 7869              		.loc 1 2646 0 discriminator 3
 7870 01f3 4C69D9FA 		imulq	$-9222, %rcx, %r11
 7870      DBFFFF
 7871 01fa 4D01DA   		addq	%r11, %r10
 7872              	.LVL1182:
 7873 01fd 4C01D3   		addq	%r10, %rbx
 7874              	.LVL1183:
2647:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z3 - z2, FIX(1.407403738));   /* c1 */
 7875              		.loc 1 2647 0 discriminator 3
 7876 0200 4989CA   		movq	%rcx, %r10
 7877 0203 4929C2   		subq	%rax, %r10
 7878 0206 4D69DA09 		imulq	$11529, %r10, %r11
 7878      2D0000
 7879              	.LVL1184:
2648:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 - MULTIPLY(z3, FIX(0.766367282));  /* c1+c11-c9-c13 */
 7880              		.loc 1 2648 0 discriminator 3
 7881 020d 4C69D17A 		imulq	$-6278, %rcx, %r10
 7881      E7FFFF
 7882 0214 4D01DA   		addq	%r11, %r10
 7883 0217 4C01D5   		addq	%r10, %rbp
 7884              	.LVL1185:
2649:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 7885              		.loc 1 2649 0 discriminator 3
 7886 021a 4C69D01A 		imulq	$16154, %rax, %r10
 7886      3F0000
2650:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    += z4;
 7887              		.loc 1 2650 0 discriminator 3
 7888 0221 4801D0   		addq	%rdx, %rax
 7889              	.LVL1186:
2649:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 7890              		.loc 1 2649 0 discriminator 3
 7891 0224 4D01D3   		addq	%r10, %r11
 7892              	.LVL1187:
 7893 0227 4D01FB   		addq	%r15, %r11
 7894              	.LVL1188:
2651:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2, - FIX(0.666655658));      /* -c11 */
 7895              		.loc 1 2651 0 discriminator 3
 7896 022a 4C69D0AB 		imulq	$-5461, %rax, %r10
 7896      EAFFFF
 7897              	.LVL1189:
2652:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1;
2653:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z1 + MULTIPLY(z4, FIX(1.065388962));  /* c3+c11+c15-c7 */
 7898              		.loc 1 2653 0 discriminator 3
 7899 0231 4C69FA18 		imulq	$8728, %rdx, %r15
 7899      220000
2654:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 7900              		.loc 1 2654 0 discriminator 3
 7901 0238 4869C017 		imulq	$-10217, %rax, %rax
 7901      D8FFFF
 7902              	.LVL1190:
2652:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1;
 7903              		.loc 1 2652 0 discriminator 3
 7904 023f 4D01D1   		addq	%r10, %r9
 7905              	.LVL1191:
2653:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 7906              		.loc 1 2653 0 discriminator 3
 7907 0242 4D01FA   		addq	%r15, %r10
 7908              	.LVL1192:
 7909 0245 4D01D6   		addq	%r10, %r14
 7910              	.LVL1193:
2655:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2 + MULTIPLY(z4, FIX(3.141271809));  /* c1+c5+c9-c13 */
 7911              		.loc 1 2655 0 discriminator 3
 7912 0248 4C69FA85 		imulq	$25733, %rdx, %r15
 7912      640000
 7913 024f 4901C7   		addq	%rax, %r15
2656:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2;
 7914              		.loc 1 2656 0 discriminator 3
 7915 0252 4C01D8   		addq	%r11, %rax
 7916              	.LVL1194:
2657:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
2658:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z2;
2659:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z2;
2660:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z4 - z3, FIX(0.410524528));   /* c13 */
2661:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
2662:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
2663:fltk-1.3.4-1/jpeg/jidctint.c **** 
2664:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
2665:fltk-1.3.4-1/jpeg/jidctint.c **** 
2666:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0]  = (int) RIGHT_SHIFT(tmp20 + tmp0,  CONST_BITS-PASS1_BITS);
 7917              		.loc 1 2666 0 discriminator 3
 7918 0255 4C8B5C24 		movq	8(%rsp), %r11
 7918      08
 7919              	.LVL1195:
2655:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2;
 7920              		.loc 1 2655 0 discriminator 3
 7921 025a 4D01FD   		addq	%r15, %r13
 7922              	.LVL1196:
2657:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
 7923              		.loc 1 2657 0 discriminator 3
 7924 025d 4C8D3C11 		leaq	(%rcx,%rdx), %r15
2660:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
 7925              		.loc 1 2660 0 discriminator 3
 7926 0261 4829CA   		subq	%rcx, %rdx
 7927              	.LVL1197:
 7928 0264 4869D223 		imulq	$3363, %rdx, %rdx
 7928      0D0000
2657:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
 7929              		.loc 1 2657 0 discriminator 3
 7930 026b 4D69FFB2 		imulq	$-11086, %r15, %r15
 7930      D4FFFF
 7931              	.LVL1198:
 7932              		.loc 1 2666 0 discriminator 3
 7933 0272 4B8D0C23 		leaq	(%r11,%r12), %rcx
 7934              	.LVL1199:
2667:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*15] = (int) RIGHT_SHIFT(tmp20 - tmp0,  CONST_BITS-PASS1_BITS);
 7935              		.loc 1 2667 0 discriminator 3
 7936 0276 4D29E3   		subq	%r12, %r11
2666:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*15] = (int) RIGHT_SHIFT(tmp20 - tmp0,  CONST_BITS-PASS1_BITS);
 7937              		.loc 1 2666 0 discriminator 3
 7938 0279 48C1F90B 		sarq	$11, %rcx
 7939 027d 418908   		movl	%ecx, (%r8)
 7940              		.loc 1 2667 0 discriminator 3
 7941 0280 4C89D9   		movq	%r11, %rcx
2661:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
 7942              		.loc 1 2661 0 discriminator 3
 7943 0283 4901D5   		addq	%rdx, %r13
 7944              	.LVL1200:
2658:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z2;
 7945              		.loc 1 2658 0 discriminator 3
 7946 0286 4C01FB   		addq	%r15, %rbx
 7947              	.LVL1201:
2659:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z4 - z3, FIX(0.410524528));   /* c13 */
 7948              		.loc 1 2659 0 discriminator 3
 7949 0289 4D01FE   		addq	%r15, %r14
 7950              	.LVL1202:
2668:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp1,  CONST_BITS-PASS1_BITS);
 7951              		.loc 1 2668 0 discriminator 3
 7952 028c 4C8B7C24 		movq	24(%rsp), %r15
 7952      18
2667:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp1,  CONST_BITS-PASS1_BITS);
 7953              		.loc 1 2667 0 discriminator 3
 7954 0291 48C1F90B 		sarq	$11, %rcx
2662:fltk-1.3.4-1/jpeg/jidctint.c **** 
 7955              		.loc 1 2662 0 discriminator 3
 7956 0295 4801EA   		addq	%rbp, %rdx
 7957              	.LVL1203:
2669:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
2670:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp2,  CONST_BITS-PASS1_BITS);
 7958              		.loc 1 2670 0 discriminator 3
 7959 0298 488B6C24 		movq	40(%rsp), %rbp
 7959      28
2667:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp1,  CONST_BITS-PASS1_BITS);
 7960              		.loc 1 2667 0 discriminator 3
 7961 029d 418988E0 		movl	%ecx, 480(%r8)
 7961      010000
2668:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
 7962              		.loc 1 2668 0 discriminator 3
 7963 02a4 4B8D0C0F 		leaq	(%r15,%r9), %rcx
2669:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
 7964              		.loc 1 2669 0 discriminator 3
 7965 02a8 4D29CF   		subq	%r9, %r15
2668:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
 7966              		.loc 1 2668 0 discriminator 3
 7967 02ab 48C1F90B 		sarq	$11, %rcx
 7968 02af 41894820 		movl	%ecx, 32(%r8)
2669:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
 7969              		.loc 1 2669 0 discriminator 3
 7970 02b3 4C89F9   		movq	%r15, %rcx
 7971 02b6 48C1F90B 		sarq	$11, %rcx
 7972 02ba 418988C0 		movl	%ecx, 448(%r8)
 7972      010000
 7973              		.loc 1 2670 0 discriminator 3
 7974 02c1 488D4C1D 		leaq	0(%rbp,%rbx), %rcx
 7974      00
2671:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp22 - tmp2,  CONST_BITS-PASS1_BITS);
 7975              		.loc 1 2671 0 discriminator 3
 7976 02c6 4829DD   		subq	%rbx, %rbp
2670:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp22 - tmp2,  CONST_BITS-PASS1_BITS);
 7977              		.loc 1 2670 0 discriminator 3
 7978 02c9 48C1F90B 		sarq	$11, %rcx
 7979 02cd 41894840 		movl	%ecx, 64(%r8)
2672:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp3,  CONST_BITS-PASS1_BITS);
 7980              		.loc 1 2672 0 discriminator 3
 7981 02d1 4C8B4C24 		movq	56(%rsp), %r9
 7981      38
 7982              	.LVL1204:
2671:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp22 - tmp2,  CONST_BITS-PASS1_BITS);
 7983              		.loc 1 2671 0 discriminator 3
 7984 02d6 4889E9   		movq	%rbp, %rcx
 7985 02d9 48C1F90B 		sarq	$11, %rcx
2673:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp23 - tmp3,  CONST_BITS-PASS1_BITS);
2674:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp10, CONST_BITS-PASS1_BITS);
2675:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp24 - tmp10, CONST_BITS-PASS1_BITS);
2676:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp11, CONST_BITS-PASS1_BITS);
2677:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp25 - tmp11, CONST_BITS-PASS1_BITS);
2678:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp12, CONST_BITS-PASS1_BITS);
 7986              		.loc 1 2678 0 discriminator 3
 7987 02dd 4C8B5424 		movq	32(%rsp), %r10
 7987      20
2679:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
2680:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 7988              		.loc 1 2680 0 discriminator 3
 7989 02e2 488B5C24 		movq	16(%rsp), %rbx
 7989      10
 7990              	.LVL1205:
2671:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp3,  CONST_BITS-PASS1_BITS);
 7991              		.loc 1 2671 0 discriminator 3
 7992 02e7 418988A0 		movl	%ecx, 416(%r8)
 7992      010000
 7993              		.loc 1 2680 0 discriminator 3
 7994 02ee 4C8B5C24 		movq	72(%rsp), %r11
 7994      48
2672:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp23 - tmp3,  CONST_BITS-PASS1_BITS);
 7995              		.loc 1 2672 0 discriminator 3
 7996 02f3 4B8D0C31 		leaq	(%r9,%r14), %rcx
2673:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp10, CONST_BITS-PASS1_BITS);
 7997              		.loc 1 2673 0 discriminator 3
 7998 02f7 4D29F1   		subq	%r14, %r9
2674:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp24 - tmp10, CONST_BITS-PASS1_BITS);
 7999              		.loc 1 2674 0 discriminator 3
 8000 02fa 4C8B7424 		movq	64(%rsp), %r14
 8000      40
 8001              	.LVL1206:
2672:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp23 - tmp3,  CONST_BITS-PASS1_BITS);
 8002              		.loc 1 2672 0 discriminator 3
 8003 02ff 48C1F90B 		sarq	$11, %rcx
 8004 0303 41894860 		movl	%ecx, 96(%r8)
2673:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp10, CONST_BITS-PASS1_BITS);
 8005              		.loc 1 2673 0 discriminator 3
 8006 0307 4C89C9   		movq	%r9, %rcx
 8007 030a 48C1F90B 		sarq	$11, %rcx
 8008 030e 41898880 		movl	%ecx, 384(%r8)
 8008      010000
2674:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp24 - tmp10, CONST_BITS-PASS1_BITS);
 8009              		.loc 1 2674 0 discriminator 3
 8010 0315 4B8D0C2E 		leaq	(%r14,%r13), %rcx
2675:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp11, CONST_BITS-PASS1_BITS);
 8011              		.loc 1 2675 0 discriminator 3
 8012 0319 4D29EE   		subq	%r13, %r14
2674:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp24 - tmp10, CONST_BITS-PASS1_BITS);
 8013              		.loc 1 2674 0 discriminator 3
 8014 031c 48C1F90B 		sarq	$11, %rcx
 8015 0320 41898880 		movl	%ecx, 128(%r8)
 8015      000000
2675:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp11, CONST_BITS-PASS1_BITS);
 8016              		.loc 1 2675 0 discriminator 3
 8017 0327 4C89F1   		movq	%r14, %rcx
2676:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp25 - tmp11, CONST_BITS-PASS1_BITS);
 8018              		.loc 1 2676 0 discriminator 3
 8019 032a 4C8B7424 		movq	48(%rsp), %r14
 8019      30
2675:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp11, CONST_BITS-PASS1_BITS);
 8020              		.loc 1 2675 0 discriminator 3
 8021 032f 48C1F90B 		sarq	$11, %rcx
 8022 0333 41898860 		movl	%ecx, 352(%r8)
 8022      010000
2676:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp25 - tmp11, CONST_BITS-PASS1_BITS);
 8023              		.loc 1 2676 0 discriminator 3
 8024 033a 4C89F1   		movq	%r14, %rcx
 8025 033d 4801D1   		addq	%rdx, %rcx
 8026 0340 48C1F90B 		sarq	$11, %rcx
 8027 0344 418988A0 		movl	%ecx, 160(%r8)
 8027      000000
2677:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp12, CONST_BITS-PASS1_BITS);
 8028              		.loc 1 2677 0 discriminator 3
 8029 034b 4C89F1   		movq	%r14, %rcx
 8030 034e 4829D1   		subq	%rdx, %rcx
 8031 0351 4889CA   		movq	%rcx, %rdx
 8032              	.LVL1207:
 8033 0354 48C1FA0B 		sarq	$11, %rdx
 8034 0358 41899040 		movl	%edx, 320(%r8)
 8034      010000
2678:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
 8035              		.loc 1 2678 0 discriminator 3
 8036 035f 498D1402 		leaq	(%r10,%rax), %rdx
2679:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 8037              		.loc 1 2679 0 discriminator 3
 8038 0363 4929C2   		subq	%rax, %r10
 8039 0366 4C89D0   		movq	%r10, %rax
 8040              	.LVL1208:
2678:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
 8041              		.loc 1 2678 0 discriminator 3
 8042 0369 48C1FA0B 		sarq	$11, %rdx
2679:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 8043              		.loc 1 2679 0 discriminator 3
 8044 036d 48C1F80B 		sarq	$11, %rax
2588:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 8045              		.loc 1 2588 0 discriminator 3
 8046 0371 4883C702 		addq	$2, %rdi
 8047              	.LVL1209:
2679:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 8048              		.loc 1 2679 0 discriminator 3
 8049 0375 41898020 		movl	%eax, 288(%r8)
 8049      010000
 8050              		.loc 1 2680 0 discriminator 3
 8051 037c 4889D8   		movq	%rbx, %rax
2678:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
 8052              		.loc 1 2678 0 discriminator 3
 8053 037f 418990C0 		movl	%edx, 192(%r8)
 8053      000000
 8054              		.loc 1 2680 0 discriminator 3
 8055 0386 4C01D8   		addq	%r11, %rax
2588:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 8056              		.loc 1 2588 0 discriminator 3
 8057 0389 4883C604 		addq	$4, %rsi
 8058              	.LVL1210:
 8059 038d 4983C004 		addq	$4, %r8
 8060              	.LVL1211:
 8061              		.loc 1 2680 0 discriminator 3
 8062 0391 48C1F80B 		sarq	$11, %rax
 8063 0395 418980DC 		movl	%eax, 220(%r8)
 8063      000000
2681:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp27 - tmp13, CONST_BITS-PASS1_BITS);
 8064              		.loc 1 2681 0 discriminator 3
 8065 039c 4889D8   		movq	%rbx, %rax
 8066 039f 4C29D8   		subq	%r11, %rax
 8067 03a2 48C1F80B 		sarq	$11, %rax
 8068 03a6 418980FC 		movl	%eax, 252(%r8)
 8068      000000
 8069              	.LVL1212:
2588:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 8070              		.loc 1 2588 0 discriminator 3
 8071 03ad 4C3B4424 		cmpq	80(%rsp), %r8
 8071      50
 8072 03b2 0F85A8FC 		jne	.L135
 8072      FFFF
 8073 03b8 8B442458 		movl	88(%rsp), %eax
2682:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2683:fltk-1.3.4-1/jpeg/jidctint.c **** 
2684:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 16 rows from work array, store into output array. */
2685:fltk-1.3.4-1/jpeg/jidctint.c **** 
2686:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
2687:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 16; ctr++) {
 8074              		.loc 1 2687 0
 8075 03bc 488DBC24 		leaq	624(%rsp), %rdi
 8075      70020000 
 8076              	.LVL1213:
 8077 03c4 4C8B7424 		movq	104(%rsp), %r14
 8077      68
 8078 03c9 48894424 		movq	%rax, 88(%rsp)
 8078      58
 8079              	.LVL1214:
 8080 03ce 488B4424 		movq	96(%rsp), %rax
 8080      60
 8081 03d3 48897C24 		movq	%rdi, 96(%rsp)
 8081      60
 8082              	.LVL1215:
 8083 03d8 48894424 		movq	%rax, 8(%rsp)
 8083      08
2588:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 8084              		.loc 1 2588 0
 8085 03dd 488D4424 		leaq	112(%rsp), %rax
 8085      70
 8086              		.loc 1 2687 0
 8087 03e2 4889C7   		movq	%rax, %rdi
 8088              	.LVL1216:
 8089              		.p2align 4,,10
 8090 03e5 0F1F00   		.p2align 3
 8091              	.L136:
2688:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
2689:fltk-1.3.4-1/jpeg/jidctint.c **** 
2690:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
2691:fltk-1.3.4-1/jpeg/jidctint.c **** 
2692:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2693:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
2694:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
2695:fltk-1.3.4-1/jpeg/jidctint.c **** 
2696:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[4];
 8092              		.loc 1 2696 0 discriminator 3
 8093 03e8 48634F10 		movslq	16(%rdi), %rcx
2693:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 8094              		.loc 1 2693 0 discriminator 3
 8095 03ec 486317   		movslq	(%rdi), %rdx
2688:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 8096              		.loc 1 2688 0 discriminator 3
 8097 03ef 488B5C24 		movq	8(%rsp), %rbx
 8097      08
 8098 03f4 488B4424 		movq	88(%rsp), %rax
 8098      58
2697:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
 8099              		.loc 1 2697 0 discriminator 3
 8100 03f9 4869F1CF 		imulq	$10703, %rcx, %rsi
 8100      290000
2693:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 8101              		.loc 1 2693 0 discriminator 3
 8102 0400 4883C210 		addq	$16, %rdx
2688:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 8103              		.loc 1 2688 0 discriminator 3
 8104 0404 480303   		addq	(%rbx), %rax
 8105              	.LVL1217:
2698:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX_0_541196100);       /* c12[16] = c6[8] */
 8106              		.loc 1 2698 0 discriminator 3
 8107 0407 4869C951 		imulq	$4433, %rcx, %rcx
 8107      110000
2694:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8108              		.loc 1 2694 0 discriminator 3
 8109 040e 48C1E20D 		salq	$13, %rdx
 8110              	.LVL1218:
2699:fltk-1.3.4-1/jpeg/jidctint.c **** 
2700:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp1;
2701:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
 8111              		.loc 1 2701 0 discriminator 3
 8112 0412 4989D1   		movq	%rdx, %r9
2700:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
 8113              		.loc 1 2700 0 discriminator 3
 8114 0415 488D2C32 		leaq	(%rdx,%rsi), %rbp
 8115              	.LVL1219:
 8116              		.loc 1 2701 0 discriminator 3
 8117 0419 4929F1   		subq	%rsi, %r9
2702:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 8118              		.loc 1 2702 0 discriminator 3
 8119 041c 4C8D1C0A 		leaq	(%rdx,%rcx), %r11
2703:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 8120              		.loc 1 2703 0 discriminator 3
 8121 0420 4829CA   		subq	%rcx, %rdx
 8122              	.LVL1220:
2704:fltk-1.3.4-1/jpeg/jidctint.c **** 
2705:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
 8123              		.loc 1 2705 0 discriminator 3
 8124 0423 48634F08 		movslq	8(%rdi), %rcx
 8125              	.LVL1221:
2701:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 8126              		.loc 1 2701 0 discriminator 3
 8127 0427 4C89CE   		movq	%r9, %rsi
 8128              	.LVL1222:
2706:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 8129              		.loc 1 2706 0 discriminator 3
 8130 042a 4C634F18 		movslq	24(%rdi), %r9
 8131              	.LVL1223:
2707:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 8132              		.loc 1 2707 0 discriminator 3
 8133 042e 4989C8   		movq	%rcx, %r8
 8134 0431 4D29C8   		subq	%r9, %r8
 8135              	.LVL1224:
2708:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
 8136              		.loc 1 2708 0 discriminator 3
 8137 0434 4D69E8D4 		imulq	$2260, %r8, %r13
 8137      080000
 8138              	.LVL1225:
2709:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, FIX(1.387039845));        /* c2[16] = c1[8] */
 8139              		.loc 1 2709 0 discriminator 3
 8140 043b 4D69E063 		imulq	$11363, %r8, %r12
 8140      2C0000
 8141              	.LVL1226:
2710:fltk-1.3.4-1/jpeg/jidctint.c **** 
2711:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z3 + MULTIPLY(z2, FIX_2_562915447);  /* (c6+c2)[16] = (c3+c1)[8] */
 8142              		.loc 1 2711 0 discriminator 3
 8143 0442 4969D903 		imulq	$20995, %r9, %rbx
 8143      520000
2712:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 8144              		.loc 1 2712 0 discriminator 3
 8145 0449 4C69D1CD 		imulq	$7373, %rcx, %r10
 8145      1C0000
2711:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 8146              		.loc 1 2711 0 discriminator 3
 8147 0450 4C01E3   		addq	%r12, %rbx
 8148              	.LVL1227:
2713:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z3 - MULTIPLY(z1, FIX(0.601344887)); /* (c2-c10)[16] = (c1-c5)[8] */
 8149              		.loc 1 2713 0 discriminator 3
 8150 0453 4C69C1C2 		imulq	$-4926, %rcx, %r8
 8150      ECFFFF
2714:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
 8151              		.loc 1 2714 0 discriminator 3
 8152 045a 4969C9B0 		imulq	$-4176, %r9, %rcx
 8152      EFFFFF
 8153              	.LVL1228:
2715:fltk-1.3.4-1/jpeg/jidctint.c **** 
2716:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp0;
 8154              		.loc 1 2716 0 discriminator 3
 8155 0461 4C8D4C1D 		leaq	0(%rbp,%rbx), %r9
 8155      00
 8156              	.LVL1229:
2717:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 8157              		.loc 1 2717 0 discriminator 3
 8158 0466 4829DD   		subq	%rbx, %rbp
 8159              	.LVL1230:
2718:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
2719:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
2720:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
2721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
2722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
2723:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 8160              		.loc 1 2723 0 discriminator 3
 8161 0469 4889F3   		movq	%rsi, %rbx
 8162              	.LVL1231:
2717:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 8163              		.loc 1 2717 0 discriminator 3
 8164 046c 48896C24 		movq	%rbp, 24(%rsp)
 8164      18
2712:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z3 - MULTIPLY(z1, FIX(0.601344887)); /* (c2-c10)[16] = (c1-c5)[8] */
 8165              		.loc 1 2712 0 discriminator 3
 8166 0471 4D01EA   		addq	%r13, %r10
 8167              	.LVL1232:
2716:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 8168              		.loc 1 2716 0 discriminator 3
 8169 0474 4C894C24 		movq	%r9, 16(%rsp)
 8169      10
2724:fltk-1.3.4-1/jpeg/jidctint.c **** 
2725:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
2726:fltk-1.3.4-1/jpeg/jidctint.c **** 
2727:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
2728:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
2729:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 8170              		.loc 1 2729 0 discriminator 3
 8171 0479 4C634F14 		movslq	20(%rdi), %r9
2713:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
 8172              		.loc 1 2713 0 discriminator 3
 8173 047d 4D01E0   		addq	%r12, %r8
 8174              	.LVL1233:
2718:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
 8175              		.loc 1 2718 0 discriminator 3
 8176 0480 4F8D2413 		leaq	(%r11,%r10), %r12
 8177              	.LVL1234:
2719:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
 8178              		.loc 1 2719 0 discriminator 3
 8179 0484 4D29D3   		subq	%r10, %r11
 8180              	.LVL1235:
2714:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8181              		.loc 1 2714 0 discriminator 3
 8182 0487 4C01E9   		addq	%r13, %rcx
 8183              	.LVL1236:
2720:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 8184              		.loc 1 2720 0 discriminator 3
 8185 048a 4E8D1402 		leaq	(%rdx,%r8), %r10
 8186              	.LVL1237:
2721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
 8187              		.loc 1 2721 0 discriminator 3
 8188 048e 4C29C2   		subq	%r8, %rdx
 8189              	.LVL1238:
2722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 8190              		.loc 1 2722 0 discriminator 3
 8191 0491 4C8D040E 		leaq	(%rsi,%rcx), %r8
 8192              	.LVL1239:
2721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
 8193              		.loc 1 2721 0 discriminator 3
 8194 0495 48895424 		movq	%rdx, 56(%rsp)
 8194      38
 8195              	.LVL1240:
2728:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 8196              		.loc 1 2728 0 discriminator 3
 8197 049a 4863570C 		movslq	12(%rdi), %rdx
2723:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8198              		.loc 1 2723 0 discriminator 3
 8199 049e 4829CB   		subq	%rcx, %rbx
2730:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 8200              		.loc 1 2730 0 discriminator 3
 8201 04a1 48634F1C 		movslq	28(%rdi), %rcx
 8202              	.LVL1241:
2720:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 8203              		.loc 1 2720 0 discriminator 3
 8204 04a5 4C895424 		movq	%r10, 48(%rsp)
 8204      30
 8205              	.LVL1242:
2722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 8206              		.loc 1 2722 0 discriminator 3
 8207 04aa 4C894424 		movq	%r8, 64(%rsp)
 8207      40
 8208              	.LVL1243:
2727:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 8209              		.loc 1 2727 0 discriminator 3
 8210 04af 4C634704 		movslq	4(%rdi), %r8
 8211              	.LVL1244:
2723:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8212              		.loc 1 2723 0 discriminator 3
 8213 04b3 48895C24 		movq	%rbx, 72(%rsp)
 8213      48
 8214              	.LVL1245:
2718:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
 8215              		.loc 1 2718 0 discriminator 3
 8216 04b8 4C896424 		movq	%r12, 32(%rsp)
 8216      20
 8217              	.LVL1246:
2719:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
 8218              		.loc 1 2719 0 discriminator 3
 8219 04bd 4C895C24 		movq	%r11, 40(%rsp)
 8219      28
 8220              	.LVL1247:
2731:fltk-1.3.4-1/jpeg/jidctint.c **** 
2732:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 8221              		.loc 1 2732 0 discriminator 3
 8222 04c2 4F8D1408 		leaq	(%r8,%r9), %r10
 8223              	.LVL1248:
2733:fltk-1.3.4-1/jpeg/jidctint.c **** 
2734:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  = MULTIPLY(z1 + z2, FIX(1.353318001));   /* c3 */
 8224              		.loc 1 2734 0 discriminator 3
 8225 04c6 4D8D2C10 		leaq	(%r8,%rdx), %r13
 8226              	.LVL1249:
2735:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
2736:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  = MULTIPLY(z1 + z4, FIX(1.093201867));   /* c7 */
 8227              		.loc 1 2736 0 discriminator 3
 8228 04ca 498D2C08 		leaq	(%r8,%rcx), %rbp
 8229              	.LVL1250:
2737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 8230              		.loc 1 2737 0 discriminator 3
 8231 04ce 4C89C3   		movq	%r8, %rbx
2738:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
2739:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.410524528));   /* c13 */
 8232              		.loc 1 2739 0 discriminator 3
 8233 04d1 4D89C4   		movq	%r8, %r12
2735:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  = MULTIPLY(z1 + z4, FIX(1.093201867));   /* c7 */
 8234              		.loc 1 2735 0 discriminator 3
 8235 04d4 4969F2E9 		imulq	$10217, %r10, %rsi
 8235      270000
2737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 8236              		.loc 1 2737 0 discriminator 3
 8237 04db 4829CB   		subq	%rcx, %rbx
 8238              		.loc 1 2739 0 discriminator 3
 8239 04de 4929D4   		subq	%rdx, %r12
2734:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
 8240              		.loc 1 2734 0 discriminator 3
 8241 04e1 4D69ED4E 		imulq	$11086, %r13, %r13
 8241      2B0000
 8242              	.LVL1251:
2736:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 8243              		.loc 1 2736 0 discriminator 3
 8244 04e8 4869EDFC 		imulq	$8956, %rbp, %rbp
 8244      220000
 8245              	.LVL1252:
2740:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0  = tmp1 + tmp2 + tmp3 -
 8246              		.loc 1 2740 0 discriminator 3
 8247 04ef 4D8D5C35 		leaq	0(%r13,%rsi), %r11
 8247      00
 8248 04f4 4D69F8D6 		imulq	$-18730, %r8, %r15
 8248      B6FFFF
2737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
 8249              		.loc 1 2737 0 discriminator 3
 8250 04fb 4869DBB6 		imulq	$7350, %rbx, %rbx
 8250      1C0000
 8251              	.LVL1253:
 8252              		.loc 1 2740 0 discriminator 3
 8253 0502 4901EB   		addq	%rbp, %r11
2738:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.410524528));   /* c13 */
 8254              		.loc 1 2738 0 discriminator 3
 8255 0505 4D69D255 		imulq	$5461, %r10, %r10
 8255      150000
 8256              	.LVL1254:
2739:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0  = tmp1 + tmp2 + tmp3 -
 8257              		.loc 1 2739 0 discriminator 3
 8258 050c 4D69E423 		imulq	$3363, %r12, %r12
 8258      0D0000
 8259              	.LVL1255:
 8260              		.loc 1 2740 0 discriminator 3
 8261 0513 4D01FB   		addq	%r15, %r11
 8262              	.LVL1256:
2741:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.286341144));        /* c7+c5+c3-c1 */
2742:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp10 + tmp11 + tmp12 -
 8263              		.loc 1 2742 0 discriminator 3
 8264 0516 4E8D3C13 		leaq	(%rbx,%r10), %r15
 8265 051a 4D69C042 		imulq	$-15038, %r8, %r8
 8265      C5FFFF
 8266              	.LVL1257:
 8267 0521 4D01E7   		addq	%r12, %r15
 8268 0524 4D01C7   		addq	%r8, %r15
2743:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
2744:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z3, FIX(0.138617169));   /* c15 */
 8269              		.loc 1 2744 0 discriminator 3
 8270 0527 4E8D040A 		leaq	(%rdx,%r9), %r8
2742:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
 8271              		.loc 1 2742 0 discriminator 3
 8272 052b 4C897C24 		movq	%r15, 80(%rsp)
 8272      50
 8273              	.LVL1258:
 8274              		.loc 1 2744 0 discriminator 3
 8275 0530 4D69C070 		imulq	$1136, %r8, %r8
 8275      040000
 8276              	.LVL1259:
2745:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1 + MULTIPLY(z2, FIX(0.071888074));  /* c9+c11-c3-c15 */
 8277              		.loc 1 2745 0 discriminator 3
 8278 0537 4C69FA4D 		imulq	$589, %rdx, %r15
 8278      020000
 8279 053e 4D01C7   		addq	%r8, %r15
 8280 0541 4D01FD   		addq	%r15, %r13
 8281              	.LVL1260:
2746:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z1 - MULTIPLY(z3, FIX(1.125726048));  /* c5+c7+c15-c3 */
 8282              		.loc 1 2746 0 discriminator 3
 8283 0544 4D69F9FA 		imulq	$-9222, %r9, %r15
 8283      DBFFFF
 8284 054b 4D01F8   		addq	%r15, %r8
 8285              	.LVL1261:
 8286 054e 4C01C6   		addq	%r8, %rsi
 8287              	.LVL1262:
2747:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z3 - z2, FIX(1.407403738));   /* c1 */
 8288              		.loc 1 2747 0 discriminator 3
 8289 0551 4D89C8   		movq	%r9, %r8
 8290 0554 4929D0   		subq	%rdx, %r8
 8291 0557 4D69C009 		imulq	$11529, %r8, %r8
 8291      2D0000
 8292              	.LVL1263:
2748:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 - MULTIPLY(z3, FIX(0.766367282));  /* c1+c11-c9-c13 */
 8293              		.loc 1 2748 0 discriminator 3
 8294 055e 4D69F97A 		imulq	$-6278, %r9, %r15
 8294      E7FFFF
 8295 0565 4D01C7   		addq	%r8, %r15
 8296 0568 4D01FA   		addq	%r15, %r10
 8297              	.LVL1264:
2749:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 8298              		.loc 1 2749 0 discriminator 3
 8299 056b 4C69FA1A 		imulq	$16154, %rdx, %r15
 8299      3F0000
2750:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    += z4;
 8300              		.loc 1 2750 0 discriminator 3
 8301 0572 4801CA   		addq	%rcx, %rdx
 8302              	.LVL1265:
2749:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 8303              		.loc 1 2749 0 discriminator 3
 8304 0575 4D01F8   		addq	%r15, %r8
 8305              	.LVL1266:
 8306 0578 4D01C4   		addq	%r8, %r12
 8307              	.LVL1267:
2751:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2, - FIX(0.666655658));      /* -c11 */
2752:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1;
2753:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z1 + MULTIPLY(z4, FIX(1.065388962));  /* c3+c11+c15-c7 */
 8308              		.loc 1 2753 0 discriminator 3
 8309 057b 4C69F918 		imulq	$8728, %rcx, %r15
 8309      220000
2751:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2, - FIX(0.666655658));      /* -c11 */
 8310              		.loc 1 2751 0 discriminator 3
 8311 0582 4C69C2AB 		imulq	$-5461, %rdx, %r8
 8311      EAFFFF
 8312              	.LVL1268:
2754:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 8313              		.loc 1 2754 0 discriminator 3
 8314 0589 4869D217 		imulq	$-10217, %rdx, %rdx
 8314      D8FFFF
 8315              	.LVL1269:
2752:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z1 + MULTIPLY(z4, FIX(1.065388962));  /* c3+c11+c15-c7 */
 8316              		.loc 1 2752 0 discriminator 3
 8317 0590 4D01C5   		addq	%r8, %r13
 8318              	.LVL1270:
2753:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 8319              		.loc 1 2753 0 discriminator 3
 8320 0593 4D01F8   		addq	%r15, %r8
 8321              	.LVL1271:
2755:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2 + MULTIPLY(z4, FIX(3.141271809));  /* c1+c5+c9-c13 */
 8322              		.loc 1 2755 0 discriminator 3
 8323 0596 4C69F985 		imulq	$25733, %rcx, %r15
 8323      640000
2753:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 8324              		.loc 1 2753 0 discriminator 3
 8325 059d 4C01C5   		addq	%r8, %rbp
 8326              	.LVL1272:
 8327              		.loc 1 2755 0 discriminator 3
 8328 05a0 4901D7   		addq	%rdx, %r15
2756:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2;
 8329              		.loc 1 2756 0 discriminator 3
 8330 05a3 4C01E2   		addq	%r12, %rdx
 8331              	.LVL1273:
2757:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
2758:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z2;
2759:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z2;
2760:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z4 - z3, FIX(0.410524528));   /* c13 */
2761:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
2762:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
2763:fltk-1.3.4-1/jpeg/jidctint.c **** 
2764:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
2765:fltk-1.3.4-1/jpeg/jidctint.c **** 
2766:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp0,
2767:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2768:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2769:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[15] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp0,
2770:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2771:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2772:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp1,
 8332              		.loc 1 2772 0 discriminator 3
 8333 05a6 4C8B6424 		movq	32(%rsp), %r12
 8333      20
 8334              	.LVL1274:
2755:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2;
 8335              		.loc 1 2755 0 discriminator 3
 8336 05ab 4C01FB   		addq	%r15, %rbx
 8337              	.LVL1275:
2757:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
 8338              		.loc 1 2757 0 discriminator 3
 8339 05ae 4D8D3C09 		leaq	(%r9,%rcx), %r15
 8340 05b2 4D69FFB2 		imulq	$-11086, %r15, %r15
 8340      D4FFFF
 8341              	.LVL1276:
2758:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z2;
 8342              		.loc 1 2758 0 discriminator 3
 8343 05b9 4C01FE   		addq	%r15, %rsi
 8344              	.LVL1277:
2759:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z4 - z3, FIX(0.410524528));   /* c13 */
 8345              		.loc 1 2759 0 discriminator 3
 8346 05bc 4C01FD   		addq	%r15, %rbp
 8347              	.LVL1278:
2766:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8348              		.loc 1 2766 0 discriminator 3
 8349 05bf 4C8B7C24 		movq	16(%rsp), %r15
 8349      10
 8350              	.LVL1279:
2760:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
 8351              		.loc 1 2760 0 discriminator 3
 8352 05c4 4C29C9   		subq	%r9, %rcx
 8353              	.LVL1280:
 8354 05c7 4869C923 		imulq	$3363, %rcx, %rcx
 8354      0D0000
 8355              	.LVL1281:
2766:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8356              		.loc 1 2766 0 discriminator 3
 8357 05ce 4F8D041F 		leaq	(%r15,%r11), %r8
 8358 05d2 49C1F812 		sarq	$18, %r8
 8359 05d6 4181E0FF 		andl	$1023, %r8d
 8359      030000
2761:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
 8360              		.loc 1 2761 0 discriminator 3
 8361 05dd 4801CB   		addq	%rcx, %rbx
 8362              	.LVL1282:
2762:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8363              		.loc 1 2762 0 discriminator 3
 8364 05e0 4901CA   		addq	%rcx, %r10
 8365              	.LVL1283:
2766:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8366              		.loc 1 2766 0 discriminator 3
 8367 05e3 430FB60C 		movzbl	(%r14,%r8), %ecx
 8367      06
 8368              	.LVL1284:
 8369 05e8 8808     		movb	%cl, (%rax)
2769:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8370              		.loc 1 2769 0 discriminator 3
 8371 05ea 4C89F9   		movq	%r15, %rcx
2773:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2774:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2775:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[14] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp1,
2776:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2777:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2778:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp2,
 8372              		.loc 1 2778 0 discriminator 3
 8373 05ed 4C8B7C24 		movq	48(%rsp), %r15
 8373      30
2769:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8374              		.loc 1 2769 0 discriminator 3
 8375 05f2 4C29D9   		subq	%r11, %rcx
 8376 05f5 48C1F912 		sarq	$18, %rcx
 8377 05f9 81E1FF03 		andl	$1023, %ecx
 8377      0000
 8378 05ff 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8378      0E
 8379 0604 88480F   		movb	%cl, 15(%rax)
2772:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8380              		.loc 1 2772 0 discriminator 3
 8381 0607 4B8D0C2C 		leaq	(%r12,%r13), %rcx
 8382 060b 48C1F912 		sarq	$18, %rcx
 8383 060f 81E1FF03 		andl	$1023, %ecx
 8383      0000
 8384 0615 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8384      0E
 8385 061a 884801   		movb	%cl, 1(%rax)
2775:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8386              		.loc 1 2775 0 discriminator 3
 8387 061d 4C89E1   		movq	%r12, %rcx
 8388 0620 4C29E9   		subq	%r13, %rcx
 8389 0623 48C1F912 		sarq	$18, %rcx
 8390 0627 81E1FF03 		andl	$1023, %ecx
 8390      0000
 8391 062d 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8391      0E
 8392 0632 88480E   		movb	%cl, 14(%rax)
 8393              		.loc 1 2778 0 discriminator 3
 8394 0635 4C89F9   		movq	%r15, %rcx
 8395 0638 4801F1   		addq	%rsi, %rcx
 8396 063b 48C1F912 		sarq	$18, %rcx
 8397 063f 81E1FF03 		andl	$1023, %ecx
 8397      0000
 8398 0645 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8398      0E
 8399 064a 884802   		movb	%cl, 2(%rax)
2779:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2780:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2781:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[13] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp2,
 8400              		.loc 1 2781 0 discriminator 3
 8401 064d 4C89F9   		movq	%r15, %rcx
2782:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2783:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2784:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp3,
 8402              		.loc 1 2784 0 discriminator 3
 8403 0650 4C8B4424 		movq	64(%rsp), %r8
 8403      40
2781:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8404              		.loc 1 2781 0 discriminator 3
 8405 0655 4829F1   		subq	%rsi, %rcx
2785:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2786:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2787:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[12] = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp3,
2788:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2789:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2790:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp10,
 8406              		.loc 1 2790 0 discriminator 3
 8407 0658 4C8B4C24 		movq	72(%rsp), %r9
 8407      48
 8408              	.LVL1285:
2791:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2792:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2793:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp10,
2794:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2795:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2796:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp11,
 8409              		.loc 1 2796 0 discriminator 3
 8410 065d 488B7424 		movq	56(%rsp), %rsi
 8410      38
 8411              	.LVL1286:
2781:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8412              		.loc 1 2781 0 discriminator 3
 8413 0662 48C1F912 		sarq	$18, %rcx
2797:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2798:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2799:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp11,
2800:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2801:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2802:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp26 + tmp12,
 8414              		.loc 1 2802 0 discriminator 3
 8415 0666 4C8B5C24 		movq	40(%rsp), %r11
 8415      28
 8416              	.LVL1287:
2803:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2804:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2805:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp26 - tmp12,
2806:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2807:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2808:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp27 + tmp13,
 8417              		.loc 1 2808 0 discriminator 3
 8418 066b 4C8B7C24 		movq	80(%rsp), %r15
 8418      50
2781:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8419              		.loc 1 2781 0 discriminator 3
 8420 0670 81E1FF03 		andl	$1023, %ecx
 8420      0000
 8421 0676 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8421      0E
 8422 067b 88480D   		movb	%cl, 13(%rax)
2784:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8423              		.loc 1 2784 0 discriminator 3
 8424 067e 498D0C28 		leaq	(%r8,%rbp), %rcx
 8425 0682 48C1F912 		sarq	$18, %rcx
 8426 0686 81E1FF03 		andl	$1023, %ecx
 8426      0000
 8427 068c 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8427      0E
 8428 0691 884803   		movb	%cl, 3(%rax)
2787:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8429              		.loc 1 2787 0 discriminator 3
 8430 0694 4C89C1   		movq	%r8, %rcx
 8431 0697 4829E9   		subq	%rbp, %rcx
 8432              		.loc 1 2808 0 discriminator 3
 8433 069a 488B6C24 		movq	24(%rsp), %rbp
 8433      18
 8434              	.LVL1288:
2787:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8435              		.loc 1 2787 0 discriminator 3
 8436 069f 48C1F912 		sarq	$18, %rcx
 8437 06a3 81E1FF03 		andl	$1023, %ecx
 8437      0000
 8438 06a9 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8438      0E
 8439 06ae 88480C   		movb	%cl, 12(%rax)
2790:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8440              		.loc 1 2790 0 discriminator 3
 8441 06b1 4C89C9   		movq	%r9, %rcx
 8442 06b4 4801D9   		addq	%rbx, %rcx
 8443 06b7 48C1F912 		sarq	$18, %rcx
 8444 06bb 81E1FF03 		andl	$1023, %ecx
 8444      0000
 8445 06c1 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8445      0E
 8446 06c6 884804   		movb	%cl, 4(%rax)
2793:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8447              		.loc 1 2793 0 discriminator 3
 8448 06c9 4C89C9   		movq	%r9, %rcx
 8449 06cc 4829D9   		subq	%rbx, %rcx
 8450 06cf 48C1F912 		sarq	$18, %rcx
 8451 06d3 81E1FF03 		andl	$1023, %ecx
 8451      0000
 8452 06d9 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8452      0E
 8453 06de 88480B   		movb	%cl, 11(%rax)
2796:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8454              		.loc 1 2796 0 discriminator 3
 8455 06e1 4A8D0C16 		leaq	(%rsi,%r10), %rcx
 8456 06e5 48C1F912 		sarq	$18, %rcx
2809:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2810:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2811:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp27 - tmp13,
2812:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
2813:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
2814:fltk-1.3.4-1/jpeg/jidctint.c **** 
2815:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 8457              		.loc 1 2815 0 discriminator 3
 8458 06e9 4883C720 		addq	$32, %rdi
 8459              	.LVL1289:
 8460 06ed 48834424 		addq	$8, 8(%rsp)
 8460      0808
2796:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8461              		.loc 1 2796 0 discriminator 3
 8462 06f3 81E1FF03 		andl	$1023, %ecx
 8462      0000
 8463 06f9 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8463      0E
 8464 06fe 884805   		movb	%cl, 5(%rax)
2799:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8465              		.loc 1 2799 0 discriminator 3
 8466 0701 4889F1   		movq	%rsi, %rcx
 8467 0704 4C29D1   		subq	%r10, %rcx
 8468 0707 48C1F912 		sarq	$18, %rcx
 8469 070b 81E1FF03 		andl	$1023, %ecx
 8469      0000
 8470 0711 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8470      0E
 8471 0716 88480A   		movb	%cl, 10(%rax)
2802:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8472              		.loc 1 2802 0 discriminator 3
 8473 0719 498D0C13 		leaq	(%r11,%rdx), %rcx
2805:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8474              		.loc 1 2805 0 discriminator 3
 8475 071d 4929D3   		subq	%rdx, %r11
 8476 0720 4C89DA   		movq	%r11, %rdx
 8477              	.LVL1290:
2802:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8478              		.loc 1 2802 0 discriminator 3
 8479 0723 48C1F912 		sarq	$18, %rcx
2805:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8480              		.loc 1 2805 0 discriminator 3
 8481 0727 48C1FA12 		sarq	$18, %rdx
2802:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8482              		.loc 1 2802 0 discriminator 3
 8483 072b 81E1FF03 		andl	$1023, %ecx
 8483      0000
2805:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8484              		.loc 1 2805 0 discriminator 3
 8485 0731 81E2FF03 		andl	$1023, %edx
 8485      0000
2802:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8486              		.loc 1 2802 0 discriminator 3
 8487 0737 410FB60C 		movzbl	(%r14,%rcx), %ecx
 8487      0E
 8488 073c 884806   		movb	%cl, 6(%rax)
2805:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8489              		.loc 1 2805 0 discriminator 3
 8490 073f 410FB614 		movzbl	(%r14,%rdx), %edx
 8490      16
 8491 0744 885009   		movb	%dl, 9(%rax)
2808:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8492              		.loc 1 2808 0 discriminator 3
 8493 0747 4889EA   		movq	%rbp, %rdx
 8494 074a 4C01FA   		addq	%r15, %rdx
 8495 074d 48C1FA12 		sarq	$18, %rdx
 8496 0751 81E2FF03 		andl	$1023, %edx
 8496      0000
 8497 0757 410FB614 		movzbl	(%r14,%rdx), %edx
 8497      16
 8498 075c 885007   		movb	%dl, 7(%rax)
2811:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8499              		.loc 1 2811 0 discriminator 3
 8500 075f 4889EA   		movq	%rbp, %rdx
 8501 0762 4C29FA   		subq	%r15, %rdx
 8502 0765 48C1FA12 		sarq	$18, %rdx
 8503 0769 81E2FF03 		andl	$1023, %edx
 8503      0000
2687:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 8504              		.loc 1 2687 0 discriminator 3
 8505 076f 483B7C24 		cmpq	96(%rsp), %rdi
 8505      60
2811:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 8506              		.loc 1 2811 0 discriminator 3
 8507 0774 410FB614 		movzbl	(%r14,%rdx), %edx
 8507      16
 8508 0779 885008   		movb	%dl, 8(%rax)
2687:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 8509              		.loc 1 2687 0 discriminator 3
 8510 077c 0F8566FC 		jne	.L136
 8510      FFFF
2816:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2817:fltk-1.3.4-1/jpeg/jidctint.c **** }
 8511              		.loc 1 2817 0
 8512 0782 488B8424 		movq	632(%rsp), %rax
 8512      78020000 
 8513 078a 64483304 		xorq	%fs:40, %rax
 8513      25280000 
 8513      00
 8514              	.LVL1291:
 8515 0793 7512     		jne	.L141
 8516 0795 4881C488 		addq	$648, %rsp
 8516      020000
 8517              		.cfi_remember_state
 8518              		.cfi_def_cfa_offset 56
 8519 079c 5B       		popq	%rbx
 8520              		.cfi_def_cfa_offset 48
 8521              	.LVL1292:
 8522 079d 5D       		popq	%rbp
 8523              		.cfi_def_cfa_offset 40
 8524 079e 415C     		popq	%r12
 8525              		.cfi_def_cfa_offset 32
 8526 07a0 415D     		popq	%r13
 8527              		.cfi_def_cfa_offset 24
 8528              	.LVL1293:
 8529 07a2 415E     		popq	%r14
 8530              		.cfi_def_cfa_offset 16
 8531 07a4 415F     		popq	%r15
 8532              		.cfi_def_cfa_offset 8
 8533 07a6 C3       		ret
 8534              	.LVL1294:
 8535              	.L141:
 8536              		.cfi_restore_state
 8537 07a7 E8000000 		call	__stack_chk_fail
 8537      00
 8538              	.LVL1295:
 8539              		.cfi_endproc
 8540              	.LFE76:
 8542              		.section	.text.unlikely.jpeg_idct_16x16
 8543              	.LCOLDE15:
 8544              		.section	.text.jpeg_idct_16x16
 8545              	.LHOTE15:
 8546              		.section	.text.unlikely.jpeg_idct_16x8,"ax",@progbits
 8547              	.LCOLDB16:
 8548              		.section	.text.jpeg_idct_16x8,"ax",@progbits
 8549              	.LHOTB16:
 8550              		.p2align 4,,15
 8551              		.globl	jpeg_idct_16x8
 8553              	jpeg_idct_16x8:
 8554              	.LFB77:
2818:fltk-1.3.4-1/jpeg/jidctint.c **** 
2819:fltk-1.3.4-1/jpeg/jidctint.c **** 
2820:fltk-1.3.4-1/jpeg/jidctint.c **** /*
2821:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
2822:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 16x8 output block.
2823:fltk-1.3.4-1/jpeg/jidctint.c ****  *
2824:fltk-1.3.4-1/jpeg/jidctint.c ****  * 8-point IDCT in pass 1 (columns), 16-point in pass 2 (rows).
2825:fltk-1.3.4-1/jpeg/jidctint.c ****  */
2826:fltk-1.3.4-1/jpeg/jidctint.c **** 
2827:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
2828:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_16x8 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
2829:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
2830:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
2831:fltk-1.3.4-1/jpeg/jidctint.c **** {
 8555              		.loc 1 2831 0
 8556              		.cfi_startproc
 8557              	.LVL1296:
 8558 0000 4157     		pushq	%r15
 8559              		.cfi_def_cfa_offset 16
 8560              		.cfi_offset 15, -16
 8561 0002 4156     		pushq	%r14
 8562              		.cfi_def_cfa_offset 24
 8563              		.cfi_offset 14, -24
 8564 0004 4155     		pushq	%r13
 8565              		.cfi_def_cfa_offset 32
 8566              		.cfi_offset 13, -32
 8567 0006 4154     		pushq	%r12
 8568              		.cfi_def_cfa_offset 40
 8569              		.cfi_offset 12, -40
 8570 0008 55       		pushq	%rbp
 8571              		.cfi_def_cfa_offset 48
 8572              		.cfi_offset 6, -48
 8573 0009 53       		pushq	%rbx
 8574              		.cfi_def_cfa_offset 56
 8575              		.cfi_offset 3, -56
 8576 000a 4881EC78 		subq	$376, %rsp
 8576      010000
 8577              		.cfi_def_cfa_offset 432
 8578 0011 4C8B6658 		movq	88(%rsi), %r12
 8579              		.loc 1 2831 0
 8580 0015 64488B04 		movq	%fs:40, %rax
 8580      25280000 
 8580      00
 8581 001e 48898424 		movq	%rax, 360(%rsp)
 8581      68010000 
 8582 0026 31C0     		xorl	%eax, %eax
2832:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13;
2833:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
2834:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
2835:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
2836:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
2837:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
2838:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
2839:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 8583              		.loc 1 2839 0
 8584 0028 488B87B8 		movq	440(%rdi), %rax
 8584      010000
2831:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13;
 8585              		.loc 1 2831 0
 8586 002f 48894C24 		movq	%rcx, 8(%rsp)
 8586      08
 8587 0034 488D6C24 		leaq	96(%rsp), %rbp
 8587      60
 8588 0039 44894424 		movl	%r8d, 16(%rsp)
 8588      10
2840:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
2841:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*8];	/* buffers data between passes */
2842:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
2843:fltk-1.3.4-1/jpeg/jidctint.c **** 
2844:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
2845:fltk-1.3.4-1/jpeg/jidctint.c ****    * Note results are scaled up by sqrt(8) compared to a true IDCT;
2846:fltk-1.3.4-1/jpeg/jidctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
2847:fltk-1.3.4-1/jpeg/jidctint.c ****    * 8-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
2848:fltk-1.3.4-1/jpeg/jidctint.c ****    */
2849:fltk-1.3.4-1/jpeg/jidctint.c **** 
2850:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
2851:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
2852:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
2853:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = DCTSIZE; ctr > 0; ctr--) {
 8589              		.loc 1 2853 0
 8590 003e C7042408 		movl	$8, (%rsp)
 8590      000000
2839:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 8591              		.loc 1 2839 0
 8592 0045 4C8DB080 		leaq	128(%rax), %r14
 8592      000000
 8593              	.LVL1297:
 8594              		.loc 1 2853 0
 8595 004c 4C897424 		movq	%r14, 24(%rsp)
 8595      18
 8596 0051 E9B80100 		jmp	.L151
 8596      00
 8597              	.LVL1298:
 8598 0056 662E0F1F 		.p2align 4,,10
 8598      84000000 
 8598      0000
 8599              		.p2align 3
 8600              	.L159:
2854:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
2855:fltk-1.3.4-1/jpeg/jidctint.c ****      * coefficients are zero, especially the AC terms.  We can exploit this
2856:fltk-1.3.4-1/jpeg/jidctint.c ****      * by short-circuiting the IDCT calculation for any column in which all
2857:fltk-1.3.4-1/jpeg/jidctint.c ****      * the AC terms are zero.  In that case each output is equal to the
2858:fltk-1.3.4-1/jpeg/jidctint.c ****      * DC coefficient (with scale factor as needed).
2859:fltk-1.3.4-1/jpeg/jidctint.c ****      * With typical images and quantization tables, half or more of the
2860:fltk-1.3.4-1/jpeg/jidctint.c ****      * column DCT calculations can be simplified this way.
2861:fltk-1.3.4-1/jpeg/jidctint.c ****      */
2862:fltk-1.3.4-1/jpeg/jidctint.c **** 
2863:fltk-1.3.4-1/jpeg/jidctint.c ****     if (inptr[DCTSIZE*1] == 0 && inptr[DCTSIZE*2] == 0 &&
 8601              		.loc 1 2863 0 discriminator 1
 8602 0060 6685F6   		testw	%si, %si
 8603 0063 0F85B601 		jne	.L143
 8603      0000
2864:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 8604              		.loc 1 2864 0 discriminator 2
 8605 0069 0FBF7A30 		movswl	48(%rdx), %edi
2863:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 8606              		.loc 1 2863 0 discriminator 2
 8607 006d 6685FF   		testw	%di, %di
 8608 0070 0F84BA05 		je	.L146
 8608      0000
 8609 0076 0FBF4260 		movswl	96(%rdx), %eax
 8610 007a 0FBF5A40 		movswl	64(%rdx), %ebx
 8611 007e 440FBF4A 		movswl	112(%rdx), %r9d
 8611      70
 8612 0083 440FBF42 		movswl	80(%rdx), %r8d
 8612      50
 8613 0088 0F1F8400 		.p2align 4,,10
 8613      00000000 
 8614              		.p2align 3
 8615              	.L145:
2865:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
2866:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
2867:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
2868:fltk-1.3.4-1/jpeg/jidctint.c ****       int dcval = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]) << PASS1_BITS;
2869:fltk-1.3.4-1/jpeg/jidctint.c **** 
2870:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*0] = dcval;
2871:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*1] = dcval;
2872:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*2] = dcval;
2873:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*3] = dcval;
2874:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*4] = dcval;
2875:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*5] = dcval;
2876:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*6] = dcval;
2877:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*7] = dcval;
2878:fltk-1.3.4-1/jpeg/jidctint.c **** 
2879:fltk-1.3.4-1/jpeg/jidctint.c ****       inptr++;			/* advance pointers to next column */
2880:fltk-1.3.4-1/jpeg/jidctint.c ****       quantptr++;
2881:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr++;
2882:fltk-1.3.4-1/jpeg/jidctint.c ****       continue;
2883:fltk-1.3.4-1/jpeg/jidctint.c ****     }
2884:fltk-1.3.4-1/jpeg/jidctint.c **** 
2885:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part: reverse the even part of the forward DCT.
2886:fltk-1.3.4-1/jpeg/jidctint.c ****      * The rotator is c(-6).
2887:fltk-1.3.4-1/jpeg/jidctint.c ****      */
2888:fltk-1.3.4-1/jpeg/jidctint.c **** 
2889:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 8616              		.loc 1 2889 0
 8617 0090 410FAF74 		imull	64(%r12), %esi
 8617      2440
2890:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 8618              		.loc 1 2890 0
 8619 0096 410FAF84 		imull	192(%r12), %eax
 8619      24C00000 
 8619      00
2891:fltk-1.3.4-1/jpeg/jidctint.c **** 
2892:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);       /* c6 */
2893:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
2894:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
2895:fltk-1.3.4-1/jpeg/jidctint.c **** 
2896:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
2897:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 8620              		.loc 1 2897 0
 8621 009f 410FAF9C 		imull	128(%r12), %ebx
 8621      24800000 
 8621      00
2898:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
2899:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
2900:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2901:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += ONE << (CONST_BITS-PASS1_BITS-1);
2902:fltk-1.3.4-1/jpeg/jidctint.c **** 
2903:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z2 + z3;
2904:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z2 - z3;
2905:fltk-1.3.4-1/jpeg/jidctint.c **** 
2906:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp2;
2907:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
2908:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
2909:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
2910:fltk-1.3.4-1/jpeg/jidctint.c **** 
2911:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part per figure 8; the matrix is unitary and hence its
2912:fltk-1.3.4-1/jpeg/jidctint.c ****      * transpose is its inverse.  i0..i3 are y7,y5,y3,y1 respectively.
2913:fltk-1.3.4-1/jpeg/jidctint.c ****      */
2914:fltk-1.3.4-1/jpeg/jidctint.c **** 
2915:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 8622              		.loc 1 2915 0
 8623 00a8 450FAF8C 		imull	224(%r12), %r9d
 8623      24E00000 
 8623      00
2916:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 8624              		.loc 1 2916 0
 8625 00b1 450FAF84 		imull	160(%r12), %r8d
 8625      24A00000 
 8625      00
2917:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 8626              		.loc 1 2917 0
 8627 00ba 410FAF7C 		imull	96(%r12), %edi
 8627      2460
2889:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 8628              		.loc 1 2889 0
 8629 00c0 4863F6   		movslq	%esi, %rsi
 8630              	.LVL1299:
2890:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8631              		.loc 1 2890 0
 8632 00c3 4898     		cltq
 8633              	.LVL1300:
2892:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 8634              		.loc 1 2892 0
 8635 00c5 4C8D1C06 		leaq	(%rsi,%rax), %r11
2897:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
 8636              		.loc 1 2897 0
 8637 00c9 4863DB   		movslq	%ebx, %rbx
2894:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8638              		.loc 1 2894 0
 8639 00cc 4869C0DF 		imulq	$-15137, %rax, %rax
 8639      C4FFFF
 8640              	.LVL1301:
2899:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 8641              		.loc 1 2899 0
 8642 00d3 48C1E30D 		salq	$13, %rbx
2915:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 8643              		.loc 1 2915 0
 8644 00d7 4D63C9   		movslq	%r9d, %r9
2892:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 8645              		.loc 1 2892 0
 8646 00da 4D69DB51 		imulq	$4433, %r11, %r11
 8646      110000
 8647              	.LVL1302:
2916:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 8648              		.loc 1 2916 0
 8649 00e1 4D63C0   		movslq	%r8d, %r8
2893:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 8650              		.loc 1 2893 0
 8651 00e4 4869F67E 		imulq	$6270, %rsi, %rsi
 8651      180000
 8652              	.LVL1303:
 8653              		.loc 1 2917 0
 8654 00eb 4863FF   		movslq	%edi, %rdi
2918:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 8655              		.loc 1 2918 0
 8656 00ee 410FAF4C 		imull	32(%r12), %ecx
 8656      2420
2893:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 8657              		.loc 1 2893 0
 8658 00f4 4C01DE   		addq	%r11, %rsi
 8659              	.LVL1304:
2894:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8660              		.loc 1 2894 0
 8661 00f7 4901C3   		addq	%rax, %r11
 8662              	.LVL1305:
2896:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 8663              		.loc 1 2896 0
 8664 00fa 0FBF02   		movswl	(%rdx), %eax
 8665 00fd 410FAF04 		imull	(%r12), %eax
 8665      24
 8666              		.loc 1 2918 0
 8667 0102 4863C9   		movslq	%ecx, %rcx
2896:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 8668              		.loc 1 2896 0
 8669 0105 4898     		cltq
 8670              	.LVL1306:
2898:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 8671              		.loc 1 2898 0
 8672 0107 48C1E00D 		salq	$13, %rax
 8673              	.LVL1307:
2901:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8674              		.loc 1 2901 0
 8675 010b 48050004 		addq	$1024, %rax
 8675      0000
 8676              	.LVL1308:
2903:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z2 - z3;
 8677              		.loc 1 2903 0
 8678 0111 4C8D1403 		leaq	(%rbx,%rax), %r10
 8679              	.LVL1309:
2904:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8680              		.loc 1 2904 0
 8681 0115 4829D8   		subq	%rbx, %rax
 8682              	.LVL1310:
2919:fltk-1.3.4-1/jpeg/jidctint.c **** 
2920:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = tmp0 + tmp2;
 8683              		.loc 1 2920 0
 8684 0118 498D1C39 		leaq	(%r9,%rdi), %rbx
 8685              	.LVL1311:
2908:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 8686              		.loc 1 2908 0
 8687 011c 4D8D2C03 		leaq	(%r11,%rax), %r13
2909:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8688              		.loc 1 2909 0
 8689 0120 4C29D8   		subq	%r11, %rax
 8690              	.LVL1312:
2906:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 8691              		.loc 1 2906 0
 8692 0123 4E8D3416 		leaq	(%rsi,%r10), %r14
 8693              	.LVL1313:
2907:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 8694              		.loc 1 2907 0
 8695 0127 4929F2   		subq	%rsi, %r10
 8696              	.LVL1314:
2921:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp1 + tmp3;
 8697              		.loc 1 2921 0
 8698 012a 498D3408 		leaq	(%r8,%rcx), %rsi
 8699              	.LVL1315:
2922:fltk-1.3.4-1/jpeg/jidctint.c **** 
2923:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_1_175875602);       /*  c3 */
 8700              		.loc 1 2923 0
 8701 012e 4C8D1C33 		leaq	(%rbx,%rsi), %r11
2924:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 8702              		.loc 1 2924 0
 8703 0132 4869DB3B 		imulq	$-16069, %rbx, %rbx
 8703      C1FFFF
 8704              	.LVL1316:
2923:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 8705              		.loc 1 2923 0
 8706 0139 4D69DBA1 		imulq	$9633, %r11, %r11
 8706      250000
 8707              	.LVL1317:
2925:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, - FIX_0_390180644);          /* -c3+c5 */
 8708              		.loc 1 2925 0
 8709 0140 4869F684 		imulq	$-3196, %rsi, %rsi
 8709      F3FFFF
 8710              	.LVL1318:
2926:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
 8711              		.loc 1 2926 0
 8712 0147 4C01DB   		addq	%r11, %rbx
 8713              	.LVL1319:
2927:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z1;
 8714              		.loc 1 2927 0
 8715 014a 4C01DE   		addq	%r11, %rsi
 8716              	.LVL1320:
2928:fltk-1.3.4-1/jpeg/jidctint.c **** 
2929:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223); /* -c3+c7 */
 8717              		.loc 1 2929 0
 8718 014d 4D8D1C09 		leaq	(%r9,%rcx), %r11
 8719              	.LVL1321:
2930:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 8720              		.loc 1 2930 0
 8721 0151 4D69C98E 		imulq	$2446, %r9, %r9
 8721      090000
 8722              	.LVL1322:
2929:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 8723              		.loc 1 2929 0
 8724 0158 4D69DB33 		imulq	$-7373, %r11, %r11
 8724      E3FFFF
 8725              	.LVL1323:
2931:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_1_501321110);        /*  c1+c3-c5-c7 */
 8726              		.loc 1 2931 0
 8727 015f 4869C90B 		imulq	$12299, %rcx, %rcx
 8727      300000
 8728              	.LVL1324:
2932:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 8729              		.loc 1 2932 0
 8730 0166 4E8D3C1B 		leaq	(%rbx,%r11), %r15
2933:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z1 + z3;
 8731              		.loc 1 2933 0
 8732 016a 4901F3   		addq	%rsi, %r11
 8733              	.LVL1325:
 8734 016d 4C01D9   		addq	%r11, %rcx
 8735              	.LVL1326:
2932:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 8736              		.loc 1 2932 0
 8737 0170 4D01F9   		addq	%r15, %r9
 8738              	.LVL1327:
2934:fltk-1.3.4-1/jpeg/jidctint.c **** 
2935:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447); /* -c1-c3 */
 8739              		.loc 1 2935 0
 8740 0173 4D8D3C38 		leaq	(%r8,%rdi), %r15
2936:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 8741              		.loc 1 2936 0
 8742 0177 4D69C0B3 		imulq	$16819, %r8, %r8
 8742      410000
 8743              	.LVL1328:
2935:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 8744              		.loc 1 2935 0
 8745 017e 4D69FFFD 		imulq	$-20995, %r15, %r15
 8745      ADFFFF
 8746              	.LVL1329:
2937:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_3_072711026);        /*  c1+c3+c5-c7 */
 8747              		.loc 1 2937 0
 8748 0185 4869FF54 		imulq	$25172, %rdi, %rdi
 8748      620000
 8749              	.LVL1330:
2938:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
2939:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 8750              		.loc 1 2939 0
 8751 018c 4C01FB   		addq	%r15, %rbx
 8752              	.LVL1331:
2938:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 8753              		.loc 1 2938 0
 8754 018f 4C01FE   		addq	%r15, %rsi
 8755              	.LVL1332:
 8756              		.loc 1 2939 0
 8757 0192 4801DF   		addq	%rbx, %rdi
 8758              	.LVL1333:
2938:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 8759              		.loc 1 2938 0
 8760 0195 4901F0   		addq	%rsi, %r8
 8761              	.LVL1334:
2940:fltk-1.3.4-1/jpeg/jidctint.c **** 
2941:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage: inputs are tmp10..tmp13, tmp0..tmp3 */
2942:fltk-1.3.4-1/jpeg/jidctint.c **** 
2943:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*0] = (int) RIGHT_SHIFT(tmp10 + tmp3, CONST_BITS-PASS1_BITS);
 8762              		.loc 1 2943 0
 8763 0198 498D340E 		leaq	(%r14,%rcx), %rsi
2944:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 8764              		.loc 1 2944 0
 8765 019c 4929CE   		subq	%rcx, %r14
 8766              	.LVL1335:
2945:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 8767              		.loc 1 2945 0
 8768 019f 498D4C3D 		leaq	0(%r13,%rdi), %rcx
 8768      00
 8769              	.LVL1336:
2946:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 8770              		.loc 1 2946 0
 8771 01a4 4929FD   		subq	%rdi, %r13
 8772              	.LVL1337:
2943:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 8773              		.loc 1 2943 0
 8774 01a7 48C1FE0B 		sarq	$11, %rsi
2944:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 8775              		.loc 1 2944 0
 8776 01ab 49C1FE0B 		sarq	$11, %r14
 8777              		.loc 1 2946 0
 8778 01af 49C1FD0B 		sarq	$11, %r13
2945:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 8779              		.loc 1 2945 0
 8780 01b3 48C1F90B 		sarq	$11, %rcx
2943:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 8781              		.loc 1 2943 0
 8782 01b7 897500   		movl	%esi, 0(%rbp)
2944:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 8783              		.loc 1 2944 0
 8784 01ba 4489B5E0 		movl	%r14d, 224(%rbp)
 8784      000000
2945:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 8785              		.loc 1 2945 0
 8786 01c1 894D20   		movl	%ecx, 32(%rbp)
2947:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*2] = (int) RIGHT_SHIFT(tmp12 + tmp1, CONST_BITS-PASS1_BITS);
 8787              		.loc 1 2947 0
 8788 01c4 4A8D0C00 		leaq	(%rax,%r8), %rcx
2948:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 8789              		.loc 1 2948 0
 8790 01c8 4C29C0   		subq	%r8, %rax
 8791              	.LVL1338:
 8792 01cb 48C1F80B 		sarq	$11, %rax
2946:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*2] = (int) RIGHT_SHIFT(tmp12 + tmp1, CONST_BITS-PASS1_BITS);
 8793              		.loc 1 2946 0
 8794 01cf 4489ADC0 		movl	%r13d, 192(%rbp)
 8794      000000
 8795              		.loc 1 2948 0
 8796 01d6 8985A000 		movl	%eax, 160(%rbp)
 8796      0000
2949:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 8797              		.loc 1 2949 0
 8798 01dc 4B8D040A 		leaq	(%r10,%r9), %rax
2950:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*4] = (int) RIGHT_SHIFT(tmp13 - tmp0, CONST_BITS-PASS1_BITS);
 8799              		.loc 1 2950 0
 8800 01e0 4D29CA   		subq	%r9, %r10
 8801              	.LVL1339:
2947:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 8802              		.loc 1 2947 0
 8803 01e3 48C1F90B 		sarq	$11, %rcx
 8804              		.loc 1 2950 0
 8805 01e7 49C1FA0B 		sarq	$11, %r10
2949:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 8806              		.loc 1 2949 0
 8807 01eb 48C1F80B 		sarq	$11, %rax
2947:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 8808              		.loc 1 2947 0
 8809 01ef 894D40   		movl	%ecx, 64(%rbp)
 8810              		.loc 1 2950 0
 8811 01f2 44899580 		movl	%r10d, 128(%rbp)
 8811      000000
 8812              	.LVL1340:
2949:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[DCTSIZE*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 8813              		.loc 1 2949 0
 8814 01f9 894560   		movl	%eax, 96(%rbp)
 8815              	.LVL1341:
 8816              	.L150:
 8817 01fc 4883C202 		addq	$2, %rdx
 8818 0200 4983C404 		addq	$4, %r12
 8819 0204 4883C504 		addq	$4, %rbp
2853:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
 8820              		.loc 1 2853 0 discriminator 2
 8821 0208 832C2401 		subl	$1, (%rsp)
 8822              	.LVL1342:
 8823 020c 7432     		je	.L158
 8824              	.LVL1343:
 8825              	.L151:
2863:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 8826              		.loc 1 2863 0
 8827 020e 0FBF4A10 		movswl	16(%rdx), %ecx
 8828 0212 0FBF7220 		movswl	32(%rdx), %esi
 8829 0216 6685C9   		testw	%cx, %cx
 8830 0219 0F8441FE 		je	.L159
 8830      FFFF
 8831              	.L143:
 8832 021f 0FBF4260 		movswl	96(%rdx), %eax
 8833 0223 0FBF5A40 		movswl	64(%rdx), %ebx
 8834 0227 440FBF4A 		movswl	112(%rdx), %r9d
 8834      70
 8835 022c 440FBF42 		movswl	80(%rdx), %r8d
 8835      50
 8836 0231 0FBF7A30 		movswl	48(%rdx), %edi
 8837 0235 E956FEFF 		jmp	.L145
 8837      FF
 8838              	.LVL1344:
 8839 023a 660F1F44 		.p2align 4,,10
 8839      0000
 8840              		.p2align 3
 8841              	.L158:
 8842 0240 8B442410 		movl	16(%rsp), %eax
2951:fltk-1.3.4-1/jpeg/jidctint.c **** 
2952:fltk-1.3.4-1/jpeg/jidctint.c ****     inptr++;			/* advance pointers to next column */
2953:fltk-1.3.4-1/jpeg/jidctint.c ****     quantptr++;
2954:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr++;
2955:fltk-1.3.4-1/jpeg/jidctint.c ****   }
2956:fltk-1.3.4-1/jpeg/jidctint.c **** 
2957:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 8 rows from work array, store into output array.
2958:fltk-1.3.4-1/jpeg/jidctint.c ****    * 16-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/32).
2959:fltk-1.3.4-1/jpeg/jidctint.c ****    */
2960:fltk-1.3.4-1/jpeg/jidctint.c **** 
2961:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
2962:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++) {
 8843              		.loc 1 2962 0
 8844 0244 488DBC24 		leaq	352(%rsp), %rdi
 8844      60010000 
 8845 024c 4C8B7424 		movq	24(%rsp), %r14
 8845      18
 8846 0251 48897C24 		movq	%rdi, 88(%rsp)
 8846      58
 8847 0256 48894424 		movq	%rax, 80(%rsp)
 8847      50
 8848 025b 488B4424 		movq	8(%rsp), %rax
 8848      08
 8849 0260 48890424 		movq	%rax, (%rsp)
 8850              	.LVL1345:
2853:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
 8851              		.loc 1 2853 0
 8852 0264 488D4424 		leaq	96(%rsp), %rax
 8852      60
 8853              		.loc 1 2962 0
 8854 0269 4889C7   		movq	%rax, %rdi
 8855              	.LVL1346:
 8856 026c 0F1F4000 		.p2align 4,,10
 8857              		.p2align 3
 8858              	.L152:
2963:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
2964:fltk-1.3.4-1/jpeg/jidctint.c **** 
2965:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
2966:fltk-1.3.4-1/jpeg/jidctint.c **** 
2967:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
2968:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
2969:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
2970:fltk-1.3.4-1/jpeg/jidctint.c **** 
2971:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[4];
 8859              		.loc 1 2971 0 discriminator 3
 8860 0270 48634F10 		movslq	16(%rdi), %rcx
2968:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 8861              		.loc 1 2968 0 discriminator 3
 8862 0274 486317   		movslq	(%rdi), %rdx
2972:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
2973:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX_0_541196100);       /* c12[16] = c6[8] */
2974:fltk-1.3.4-1/jpeg/jidctint.c **** 
2975:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp1;
2976:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
2977:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
2978:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
2979:fltk-1.3.4-1/jpeg/jidctint.c **** 
2980:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
2981:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 8863              		.loc 1 2981 0 discriminator 3
 8864 0277 4C634F18 		movslq	24(%rdi), %r9
2963:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8865              		.loc 1 2963 0 discriminator 3
 8866 027b 488B1C24 		movq	(%rsp), %rbx
 8867 027f 488B4424 		movq	80(%rsp), %rax
 8867      50
2972:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
 8868              		.loc 1 2972 0 discriminator 3
 8869 0284 4869F1CF 		imulq	$10703, %rcx, %rsi
 8869      290000
2968:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 8870              		.loc 1 2968 0 discriminator 3
 8871 028b 4883C210 		addq	$16, %rdx
2963:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8872              		.loc 1 2963 0 discriminator 3
 8873 028f 480303   		addq	(%rbx), %rax
 8874              	.LVL1347:
2973:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8875              		.loc 1 2973 0 discriminator 3
 8876 0292 4869C951 		imulq	$4433, %rcx, %rcx
 8876      110000
2969:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8877              		.loc 1 2969 0 discriminator 3
 8878 0299 48C1E20D 		salq	$13, %rdx
 8879              	.LVL1348:
2976:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 8880              		.loc 1 2976 0 discriminator 3
 8881 029d 4989D2   		movq	%rdx, %r10
2975:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
 8882              		.loc 1 2975 0 discriminator 3
 8883 02a0 488D2C32 		leaq	(%rdx,%rsi), %rbp
 8884              	.LVL1349:
2976:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 8885              		.loc 1 2976 0 discriminator 3
 8886 02a4 4929F2   		subq	%rsi, %r10
2977:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 8887              		.loc 1 2977 0 discriminator 3
 8888 02a7 4C8D1C0A 		leaq	(%rdx,%rcx), %r11
2978:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8889              		.loc 1 2978 0 discriminator 3
 8890 02ab 4829CA   		subq	%rcx, %rdx
 8891              	.LVL1350:
2980:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 8892              		.loc 1 2980 0 discriminator 3
 8893 02ae 48634F08 		movslq	8(%rdi), %rcx
 8894              	.LVL1351:
2982:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
2983:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
2984:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, FIX(1.387039845));        /* c2[16] = c1[8] */
2985:fltk-1.3.4-1/jpeg/jidctint.c **** 
2986:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z3 + MULTIPLY(z2, FIX_2_562915447);  /* (c6+c2)[16] = (c3+c1)[8] */
 8895              		.loc 1 2986 0 discriminator 3
 8896 02b2 4969D903 		imulq	$20995, %r9, %rbx
 8896      520000
2976:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 8897              		.loc 1 2976 0 discriminator 3
 8898 02b9 4C89D6   		movq	%r10, %rsi
 8899              	.LVL1352:
2982:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 8900              		.loc 1 2982 0 discriminator 3
 8901 02bc 4989C8   		movq	%rcx, %r8
 8902 02bf 4D29C8   		subq	%r9, %r8
 8903              	.LVL1353:
2984:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8904              		.loc 1 2984 0 discriminator 3
 8905 02c2 4D69E063 		imulq	$11363, %r8, %r12
 8905      2C0000
2983:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, FIX(1.387039845));        /* c2[16] = c1[8] */
 8906              		.loc 1 2983 0 discriminator 3
 8907 02c9 4D69E8D4 		imulq	$2260, %r8, %r13
 8907      080000
 8908              	.LVL1354:
2987:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 8909              		.loc 1 2987 0 discriminator 3
 8910 02d0 4C69D1CD 		imulq	$7373, %rcx, %r10
 8910      1C0000
2986:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 8911              		.loc 1 2986 0 discriminator 3
 8912 02d7 4C01E3   		addq	%r12, %rbx
 8913              	.LVL1355:
2988:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z3 - MULTIPLY(z1, FIX(0.601344887)); /* (c2-c10)[16] = (c1-c5)[8] */
 8914              		.loc 1 2988 0 discriminator 3
 8915 02da 4C69C1C2 		imulq	$-4926, %rcx, %r8
 8915      ECFFFF
2987:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 8916              		.loc 1 2987 0 discriminator 3
 8917 02e1 4D01EA   		addq	%r13, %r10
 8918              	.LVL1356:
2989:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
 8919              		.loc 1 2989 0 discriminator 3
 8920 02e4 4969C9B0 		imulq	$-4176, %r9, %rcx
 8920      EFFFFF
 8921              	.LVL1357:
2990:fltk-1.3.4-1/jpeg/jidctint.c **** 
2991:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp0;
 8922              		.loc 1 2991 0 discriminator 3
 8923 02eb 4C8D4C1D 		leaq	0(%rbp,%rbx), %r9
 8923      00
 8924              	.LVL1358:
2992:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 8925              		.loc 1 2992 0 discriminator 3
 8926 02f0 4829DD   		subq	%rbx, %rbp
 8927              	.LVL1359:
2993:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
2994:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
2995:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
2996:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 8928              		.loc 1 2996 0 discriminator 3
 8929 02f3 4889D3   		movq	%rdx, %rbx
 8930              	.LVL1360:
2993:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
 8931              		.loc 1 2993 0 discriminator 3
 8932 02f6 4F8D3C13 		leaq	(%r11,%r10), %r15
2994:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
 8933              		.loc 1 2994 0 discriminator 3
 8934 02fa 4D29D3   		subq	%r10, %r11
 8935              	.LVL1361:
2991:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 8936              		.loc 1 2991 0 discriminator 3
 8937 02fd 4C894C24 		movq	%r9, 8(%rsp)
 8937      08
2997:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
2998:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
2999:fltk-1.3.4-1/jpeg/jidctint.c **** 
3000:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3001:fltk-1.3.4-1/jpeg/jidctint.c **** 
3002:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
3003:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
3004:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 8938              		.loc 1 3004 0 discriminator 3
 8939 0302 4C634F14 		movslq	20(%rdi), %r9
2988:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
 8940              		.loc 1 2988 0 discriminator 3
 8941 0306 4D01E0   		addq	%r12, %r8
 8942              	.LVL1362:
2992:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
 8943              		.loc 1 2992 0 discriminator 3
 8944 0309 48896C24 		movq	%rbp, 16(%rsp)
 8944      10
2993:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
 8945              		.loc 1 2993 0 discriminator 3
 8946 030e 4C897C24 		movq	%r15, 24(%rsp)
 8946      18
2989:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8947              		.loc 1 2989 0 discriminator 3
 8948 0313 4C01E9   		addq	%r13, %rcx
 8949              	.LVL1363:
2995:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 8950              		.loc 1 2995 0 discriminator 3
 8951 0316 4E8D1402 		leaq	(%rdx,%r8), %r10
 8952              	.LVL1364:
2996:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
 8953              		.loc 1 2996 0 discriminator 3
 8954 031a 4C29C3   		subq	%r8, %rbx
2997:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 8955              		.loc 1 2997 0 discriminator 3
 8956 031d 4C8D040E 		leaq	(%rsi,%rcx), %r8
 8957              	.LVL1365:
3003:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 8958              		.loc 1 3003 0 discriminator 3
 8959 0321 4863570C 		movslq	12(%rdi), %rdx
 8960              	.LVL1366:
2998:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8961              		.loc 1 2998 0 discriminator 3
 8962 0325 4829CE   		subq	%rcx, %rsi
 8963              	.LVL1367:
3005:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 8964              		.loc 1 3005 0 discriminator 3
 8965 0328 48634F1C 		movslq	28(%rdi), %rcx
 8966              	.LVL1368:
2995:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 8967              		.loc 1 2995 0 discriminator 3
 8968 032c 4C895424 		movq	%r10, 40(%rsp)
 8968      28
 8969              	.LVL1369:
2997:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 8970              		.loc 1 2997 0 discriminator 3
 8971 0331 4C894424 		movq	%r8, 56(%rsp)
 8971      38
 8972              	.LVL1370:
3002:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 8973              		.loc 1 3002 0 discriminator 3
 8974 0336 4C634704 		movslq	4(%rdi), %r8
 8975              	.LVL1371:
2998:fltk-1.3.4-1/jpeg/jidctint.c **** 
 8976              		.loc 1 2998 0 discriminator 3
 8977 033a 48897424 		movq	%rsi, 64(%rsp)
 8977      40
 8978              	.LVL1372:
2994:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
 8979              		.loc 1 2994 0 discriminator 3
 8980 033f 4C895C24 		movq	%r11, 32(%rsp)
 8980      20
 8981              	.LVL1373:
2996:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
 8982              		.loc 1 2996 0 discriminator 3
 8983 0344 48895C24 		movq	%rbx, 48(%rsp)
 8983      30
 8984              	.LVL1374:
3006:fltk-1.3.4-1/jpeg/jidctint.c **** 
3007:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 8985              		.loc 1 3007 0 discriminator 3
 8986 0349 4F8D1408 		leaq	(%r8,%r9), %r10
 8987              	.LVL1375:
3008:fltk-1.3.4-1/jpeg/jidctint.c **** 
3009:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  = MULTIPLY(z1 + z2, FIX(1.353318001));   /* c3 */
 8988              		.loc 1 3009 0 discriminator 3
 8989 034d 4D8D2C10 		leaq	(%r8,%rdx), %r13
 8990              	.LVL1376:
3010:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
3011:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  = MULTIPLY(z1 + z4, FIX(1.093201867));   /* c7 */
 8991              		.loc 1 3011 0 discriminator 3
 8992 0351 498D2C08 		leaq	(%r8,%rcx), %rbp
 8993              	.LVL1377:
3012:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 8994              		.loc 1 3012 0 discriminator 3
 8995 0355 4D89C4   		movq	%r8, %r12
 8996              	.LVL1378:
3010:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
 8997              		.loc 1 3010 0 discriminator 3
 8998 0358 4969F2E9 		imulq	$10217, %r10, %rsi
 8998      270000
 8999              		.loc 1 3012 0 discriminator 3
 9000 035f 4929CC   		subq	%rcx, %r12
3009:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
 9001              		.loc 1 3009 0 discriminator 3
 9002 0362 4D69ED4E 		imulq	$11086, %r13, %r13
 9002      2B0000
 9003              	.LVL1379:
3011:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 9004              		.loc 1 3011 0 discriminator 3
 9005 0369 4869EDFC 		imulq	$8956, %rbp, %rbp
 9005      220000
 9006              	.LVL1380:
3013:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
3014:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.410524528));   /* c13 */
3015:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0  = tmp1 + tmp2 + tmp3 -
 9007              		.loc 1 3015 0 discriminator 3
 9008 0370 4D8D5C35 		leaq	0(%r13,%rsi), %r11
 9008      00
 9009 0375 4D69F8D6 		imulq	$-18730, %r8, %r15
 9009      B6FFFF
 9010              	.LVL1381:
3012:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
 9011              		.loc 1 3012 0 discriminator 3
 9012 037c 4969DCB6 		imulq	$7350, %r12, %rbx
 9012      1C0000
 9013              	.LVL1382:
3014:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0  = tmp1 + tmp2 + tmp3 -
 9014              		.loc 1 3014 0 discriminator 3
 9015 0383 4D89C4   		movq	%r8, %r12
 9016              		.loc 1 3015 0 discriminator 3
 9017 0386 4901EB   		addq	%rbp, %r11
3013:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
 9018              		.loc 1 3013 0 discriminator 3
 9019 0389 4D69D255 		imulq	$5461, %r10, %r10
 9019      150000
 9020              	.LVL1383:
3014:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0  = tmp1 + tmp2 + tmp3 -
 9021              		.loc 1 3014 0 discriminator 3
 9022 0390 4929D4   		subq	%rdx, %r12
 9023 0393 4D69E423 		imulq	$3363, %r12, %r12
 9023      0D0000
 9024              	.LVL1384:
 9025              		.loc 1 3015 0 discriminator 3
 9026 039a 4D01FB   		addq	%r15, %r11
 9027              	.LVL1385:
3016:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.286341144));        /* c7+c5+c3-c1 */
3017:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp10 + tmp11 + tmp12 -
 9028              		.loc 1 3017 0 discriminator 3
 9029 039d 4E8D3C13 		leaq	(%rbx,%r10), %r15
 9030 03a1 4D69C042 		imulq	$-15038, %r8, %r8
 9030      C5FFFF
 9031              	.LVL1386:
 9032 03a8 4D01E7   		addq	%r12, %r15
 9033 03ab 4D01C7   		addq	%r8, %r15
3018:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
3019:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z3, FIX(0.138617169));   /* c15 */
 9034              		.loc 1 3019 0 discriminator 3
 9035 03ae 4E8D040A 		leaq	(%rdx,%r9), %r8
3017:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
 9036              		.loc 1 3017 0 discriminator 3
 9037 03b2 4C897C24 		movq	%r15, 72(%rsp)
 9037      48
 9038              	.LVL1387:
 9039              		.loc 1 3019 0 discriminator 3
 9040 03b7 4D69C070 		imulq	$1136, %r8, %r8
 9040      040000
 9041              	.LVL1388:
3020:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1 + MULTIPLY(z2, FIX(0.071888074));  /* c9+c11-c3-c15 */
 9042              		.loc 1 3020 0 discriminator 3
 9043 03be 4C69FA4D 		imulq	$589, %rdx, %r15
 9043      020000
 9044 03c5 4D01C7   		addq	%r8, %r15
 9045 03c8 4D01FD   		addq	%r15, %r13
 9046              	.LVL1389:
3021:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z1 - MULTIPLY(z3, FIX(1.125726048));  /* c5+c7+c15-c3 */
 9047              		.loc 1 3021 0 discriminator 3
 9048 03cb 4D69F9FA 		imulq	$-9222, %r9, %r15
 9048      DBFFFF
 9049 03d2 4D01F8   		addq	%r15, %r8
 9050              	.LVL1390:
 9051 03d5 4C01C6   		addq	%r8, %rsi
 9052              	.LVL1391:
3022:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z3 - z2, FIX(1.407403738));   /* c1 */
 9053              		.loc 1 3022 0 discriminator 3
 9054 03d8 4D89C8   		movq	%r9, %r8
 9055 03db 4929D0   		subq	%rdx, %r8
 9056 03de 4D69C009 		imulq	$11529, %r8, %r8
 9056      2D0000
 9057              	.LVL1392:
3023:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 - MULTIPLY(z3, FIX(0.766367282));  /* c1+c11-c9-c13 */
 9058              		.loc 1 3023 0 discriminator 3
 9059 03e5 4D69F97A 		imulq	$-6278, %r9, %r15
 9059      E7FFFF
 9060 03ec 4D01C7   		addq	%r8, %r15
 9061 03ef 4D01FA   		addq	%r15, %r10
 9062              	.LVL1393:
3024:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 9063              		.loc 1 3024 0 discriminator 3
 9064 03f2 4C69FA1A 		imulq	$16154, %rdx, %r15
 9064      3F0000
3025:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    += z4;
 9065              		.loc 1 3025 0 discriminator 3
 9066 03f9 4801CA   		addq	%rcx, %rdx
 9067              	.LVL1394:
3024:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 9068              		.loc 1 3024 0 discriminator 3
 9069 03fc 4D01F8   		addq	%r15, %r8
 9070              	.LVL1395:
 9071 03ff 4D01C4   		addq	%r8, %r12
 9072              	.LVL1396:
3026:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2, - FIX(0.666655658));      /* -c11 */
3027:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1;
3028:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z1 + MULTIPLY(z4, FIX(1.065388962));  /* c3+c11+c15-c7 */
 9073              		.loc 1 3028 0 discriminator 3
 9074 0402 4C69F918 		imulq	$8728, %rcx, %r15
 9074      220000
3026:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2, - FIX(0.666655658));      /* -c11 */
 9075              		.loc 1 3026 0 discriminator 3
 9076 0409 4C69C2AB 		imulq	$-5461, %rdx, %r8
 9076      EAFFFF
 9077              	.LVL1397:
3029:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 9078              		.loc 1 3029 0 discriminator 3
 9079 0410 4869D217 		imulq	$-10217, %rdx, %rdx
 9079      D8FFFF
 9080              	.LVL1398:
3027:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z1 + MULTIPLY(z4, FIX(1.065388962));  /* c3+c11+c15-c7 */
 9081              		.loc 1 3027 0 discriminator 3
 9082 0417 4D01C5   		addq	%r8, %r13
 9083              	.LVL1399:
3028:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 9084              		.loc 1 3028 0 discriminator 3
 9085 041a 4D01F8   		addq	%r15, %r8
 9086              	.LVL1400:
3030:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2 + MULTIPLY(z4, FIX(3.141271809));  /* c1+c5+c9-c13 */
 9087              		.loc 1 3030 0 discriminator 3
 9088 041d 4C69F985 		imulq	$25733, %rcx, %r15
 9088      640000
3028:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 9089              		.loc 1 3028 0 discriminator 3
 9090 0424 4C01C5   		addq	%r8, %rbp
 9091              	.LVL1401:
 9092              		.loc 1 3030 0 discriminator 3
 9093 0427 4901D7   		addq	%rdx, %r15
3031:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2;
 9094              		.loc 1 3031 0 discriminator 3
 9095 042a 4C01E2   		addq	%r12, %rdx
 9096              	.LVL1402:
3030:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2 + MULTIPLY(z4, FIX(3.141271809));  /* c1+c5+c9-c13 */
 9097              		.loc 1 3030 0 discriminator 3
 9098 042d 4C01FB   		addq	%r15, %rbx
 9099              	.LVL1403:
3032:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
 9100              		.loc 1 3032 0 discriminator 3
 9101 0430 4D8D3C09 		leaq	(%r9,%rcx), %r15
 9102 0434 4D69FFB2 		imulq	$-11086, %r15, %r15
 9102      D4FFFF
 9103              	.LVL1404:
3033:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z2;
 9104              		.loc 1 3033 0 discriminator 3
 9105 043b 4C01FE   		addq	%r15, %rsi
 9106              	.LVL1405:
3034:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z2;
 9107              		.loc 1 3034 0 discriminator 3
 9108 043e 4C01FD   		addq	%r15, %rbp
 9109              	.LVL1406:
3035:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z4 - z3, FIX(0.410524528));   /* c13 */
 9110              		.loc 1 3035 0 discriminator 3
 9111 0441 4C29C9   		subq	%r9, %rcx
 9112              	.LVL1407:
3036:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
3037:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
3038:fltk-1.3.4-1/jpeg/jidctint.c **** 
3039:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3040:fltk-1.3.4-1/jpeg/jidctint.c **** 
3041:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp0,
 9113              		.loc 1 3041 0 discriminator 3
 9114 0444 4C8B4C24 		movq	8(%rsp), %r9
 9114      08
 9115              	.LVL1408:
3042:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3043:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3044:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[15] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp0,
3045:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3046:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3047:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp1,
 9116              		.loc 1 3047 0 discriminator 3
 9117 0449 4C8B7C24 		movq	24(%rsp), %r15
 9117      18
 9118              	.LVL1409:
3035:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
 9119              		.loc 1 3035 0 discriminator 3
 9120 044e 4869C923 		imulq	$3363, %rcx, %rcx
 9120      0D0000
 9121              	.LVL1410:
3041:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9122              		.loc 1 3041 0 discriminator 3
 9123 0455 4F8D0419 		leaq	(%r9,%r11), %r8
3044:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9124              		.loc 1 3044 0 discriminator 3
 9125 0459 4D29D9   		subq	%r11, %r9
3041:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9126              		.loc 1 3041 0 discriminator 3
 9127 045c 49C1F812 		sarq	$18, %r8
3036:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
 9128              		.loc 1 3036 0 discriminator 3
 9129 0460 4801CB   		addq	%rcx, %rbx
 9130              	.LVL1411:
3037:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9131              		.loc 1 3037 0 discriminator 3
 9132 0463 4901CA   		addq	%rcx, %r10
 9133              	.LVL1412:
3041:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9134              		.loc 1 3041 0 discriminator 3
 9135 0466 4181E0FF 		andl	$1023, %r8d
 9135      030000
 9136 046d 430FB60C 		movzbl	(%r14,%r8), %ecx
 9136      06
 9137              	.LVL1413:
 9138 0472 8808     		movb	%cl, (%rax)
3044:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9139              		.loc 1 3044 0 discriminator 3
 9140 0474 4C89C9   		movq	%r9, %rcx
3048:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3049:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3050:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[14] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp1,
3051:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3052:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3053:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp2,
 9141              		.loc 1 3053 0 discriminator 3
 9142 0477 4C8B4C24 		movq	40(%rsp), %r9
 9142      28
3044:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9143              		.loc 1 3044 0 discriminator 3
 9144 047c 48C1F912 		sarq	$18, %rcx
 9145 0480 81E1FF03 		andl	$1023, %ecx
 9145      0000
 9146 0486 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9146      0E
 9147 048b 88480F   		movb	%cl, 15(%rax)
3047:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9148              		.loc 1 3047 0 discriminator 3
 9149 048e 4B8D0C2F 		leaq	(%r15,%r13), %rcx
3050:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9150              		.loc 1 3050 0 discriminator 3
 9151 0492 4D29EF   		subq	%r13, %r15
3047:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9152              		.loc 1 3047 0 discriminator 3
 9153 0495 48C1F912 		sarq	$18, %rcx
 9154 0499 81E1FF03 		andl	$1023, %ecx
 9154      0000
 9155 049f 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9155      0E
 9156 04a4 884801   		movb	%cl, 1(%rax)
3050:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9157              		.loc 1 3050 0 discriminator 3
 9158 04a7 4C89F9   		movq	%r15, %rcx
 9159 04aa 48C1F912 		sarq	$18, %rcx
 9160 04ae 81E1FF03 		andl	$1023, %ecx
 9160      0000
 9161 04b4 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9161      0E
 9162 04b9 88480E   		movb	%cl, 14(%rax)
 9163              		.loc 1 3053 0 discriminator 3
 9164 04bc 498D0C31 		leaq	(%r9,%rsi), %rcx
 9165 04c0 48C1F912 		sarq	$18, %rcx
 9166 04c4 81E1FF03 		andl	$1023, %ecx
 9166      0000
 9167 04ca 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9167      0E
 9168 04cf 884802   		movb	%cl, 2(%rax)
3054:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3055:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3056:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[13] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp2,
 9169              		.loc 1 3056 0 discriminator 3
 9170 04d2 4C89C9   		movq	%r9, %rcx
3057:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3058:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3059:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp3,
 9171              		.loc 1 3059 0 discriminator 3
 9172 04d5 4C8B4424 		movq	56(%rsp), %r8
 9172      38
3056:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9173              		.loc 1 3056 0 discriminator 3
 9174 04da 4829F1   		subq	%rsi, %rcx
3060:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3061:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3062:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[12] = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp3,
3063:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3064:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3065:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp10,
 9175              		.loc 1 3065 0 discriminator 3
 9176 04dd 488B7424 		movq	64(%rsp), %rsi
 9176      40
 9177              	.LVL1414:
3066:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3067:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3068:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp10,
3069:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3070:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3071:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp11,
3072:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3073:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3074:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp11,
3075:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3076:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3077:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp26 + tmp12,
 9178              		.loc 1 3077 0 discriminator 3
 9179 04e2 4C8B5C24 		movq	32(%rsp), %r11
 9179      20
 9180              	.LVL1415:
3056:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9181              		.loc 1 3056 0 discriminator 3
 9182 04e7 48C1F912 		sarq	$18, %rcx
3078:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3079:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3080:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp26 - tmp12,
3081:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3082:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3083:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp27 + tmp13,
 9183              		.loc 1 3083 0 discriminator 3
 9184 04eb 4C8B7C24 		movq	72(%rsp), %r15
 9184      48
3056:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9185              		.loc 1 3056 0 discriminator 3
 9186 04f0 81E1FF03 		andl	$1023, %ecx
 9186      0000
 9187 04f6 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9187      0E
 9188 04fb 88480D   		movb	%cl, 13(%rax)
3059:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9189              		.loc 1 3059 0 discriminator 3
 9190 04fe 498D0C28 		leaq	(%r8,%rbp), %rcx
3062:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9191              		.loc 1 3062 0 discriminator 3
 9192 0502 4929E8   		subq	%rbp, %r8
 9193              		.loc 1 3083 0 discriminator 3
 9194 0505 488B6C24 		movq	16(%rsp), %rbp
 9194      10
 9195              	.LVL1416:
3059:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9196              		.loc 1 3059 0 discriminator 3
 9197 050a 48C1F912 		sarq	$18, %rcx
 9198 050e 81E1FF03 		andl	$1023, %ecx
 9198      0000
 9199 0514 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9199      0E
 9200 0519 884803   		movb	%cl, 3(%rax)
3062:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9201              		.loc 1 3062 0 discriminator 3
 9202 051c 4C89C1   		movq	%r8, %rcx
 9203 051f 48C1F912 		sarq	$18, %rcx
 9204 0523 81E1FF03 		andl	$1023, %ecx
 9204      0000
 9205 0529 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9205      0E
 9206 052e 88480C   		movb	%cl, 12(%rax)
3065:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9207              		.loc 1 3065 0 discriminator 3
 9208 0531 488D0C1E 		leaq	(%rsi,%rbx), %rcx
3068:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9209              		.loc 1 3068 0 discriminator 3
 9210 0535 4829DE   		subq	%rbx, %rsi
3071:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9211              		.loc 1 3071 0 discriminator 3
 9212 0538 488B5C24 		movq	48(%rsp), %rbx
 9212      30
 9213              	.LVL1417:
3065:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9214              		.loc 1 3065 0 discriminator 3
 9215 053d 48C1F912 		sarq	$18, %rcx
 9216 0541 81E1FF03 		andl	$1023, %ecx
 9216      0000
 9217 0547 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9217      0E
 9218 054c 884804   		movb	%cl, 4(%rax)
3068:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9219              		.loc 1 3068 0 discriminator 3
 9220 054f 4889F1   		movq	%rsi, %rcx
 9221 0552 48C1F912 		sarq	$18, %rcx
 9222 0556 81E1FF03 		andl	$1023, %ecx
 9222      0000
 9223 055c 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9223      0E
 9224 0561 88480B   		movb	%cl, 11(%rax)
3071:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9225              		.loc 1 3071 0 discriminator 3
 9226 0564 4A8D0C13 		leaq	(%rbx,%r10), %rcx
 9227 0568 48C1F912 		sarq	$18, %rcx
 9228 056c 81E1FF03 		andl	$1023, %ecx
 9228      0000
 9229 0572 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9229      0E
 9230 0577 884805   		movb	%cl, 5(%rax)
3074:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9231              		.loc 1 3074 0 discriminator 3
 9232 057a 4889D9   		movq	%rbx, %rcx
 9233 057d 4C29D1   		subq	%r10, %rcx
3084:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3085:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3086:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp27 - tmp13,
3087:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3088:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3089:fltk-1.3.4-1/jpeg/jidctint.c **** 
3090:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 9234              		.loc 1 3090 0 discriminator 3
 9235 0580 4883C720 		addq	$32, %rdi
 9236              	.LVL1418:
 9237 0584 48830424 		addq	$8, (%rsp)
 9237      08
3074:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9238              		.loc 1 3074 0 discriminator 3
 9239 0589 48C1F912 		sarq	$18, %rcx
 9240 058d 81E1FF03 		andl	$1023, %ecx
 9240      0000
 9241 0593 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9241      0E
 9242 0598 88480A   		movb	%cl, 10(%rax)
3077:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9243              		.loc 1 3077 0 discriminator 3
 9244 059b 498D0C13 		leaq	(%r11,%rdx), %rcx
3080:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9245              		.loc 1 3080 0 discriminator 3
 9246 059f 4929D3   		subq	%rdx, %r11
 9247 05a2 4C89DA   		movq	%r11, %rdx
 9248              	.LVL1419:
3077:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9249              		.loc 1 3077 0 discriminator 3
 9250 05a5 48C1F912 		sarq	$18, %rcx
3080:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9251              		.loc 1 3080 0 discriminator 3
 9252 05a9 48C1FA12 		sarq	$18, %rdx
3077:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9253              		.loc 1 3077 0 discriminator 3
 9254 05ad 81E1FF03 		andl	$1023, %ecx
 9254      0000
3080:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9255              		.loc 1 3080 0 discriminator 3
 9256 05b3 81E2FF03 		andl	$1023, %edx
 9256      0000
3077:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9257              		.loc 1 3077 0 discriminator 3
 9258 05b9 410FB60C 		movzbl	(%r14,%rcx), %ecx
 9258      0E
 9259 05be 884806   		movb	%cl, 6(%rax)
3080:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9260              		.loc 1 3080 0 discriminator 3
 9261 05c1 410FB614 		movzbl	(%r14,%rdx), %edx
 9261      16
 9262 05c6 885009   		movb	%dl, 9(%rax)
3083:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9263              		.loc 1 3083 0 discriminator 3
 9264 05c9 4889EA   		movq	%rbp, %rdx
 9265 05cc 4C01FA   		addq	%r15, %rdx
 9266 05cf 48C1FA12 		sarq	$18, %rdx
 9267 05d3 81E2FF03 		andl	$1023, %edx
 9267      0000
 9268 05d9 410FB614 		movzbl	(%r14,%rdx), %edx
 9268      16
 9269 05de 885007   		movb	%dl, 7(%rax)
3086:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9270              		.loc 1 3086 0 discriminator 3
 9271 05e1 4889EA   		movq	%rbp, %rdx
 9272 05e4 4C29FA   		subq	%r15, %rdx
 9273 05e7 48C1FA12 		sarq	$18, %rdx
 9274 05eb 81E2FF03 		andl	$1023, %edx
 9274      0000
2962:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 9275              		.loc 1 2962 0 discriminator 3
 9276 05f1 483B7C24 		cmpq	88(%rsp), %rdi
 9276      58
3086:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9277              		.loc 1 3086 0 discriminator 3
 9278 05f6 410FB614 		movzbl	(%r14,%rdx), %edx
 9278      16
 9279 05fb 885008   		movb	%dl, 8(%rax)
2962:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 9280              		.loc 1 2962 0 discriminator 3
 9281 05fe 0F856CFC 		jne	.L152
 9281      FFFF
3091:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3092:fltk-1.3.4-1/jpeg/jidctint.c **** }
 9282              		.loc 1 3092 0
 9283 0604 488B8424 		movq	360(%rsp), %rax
 9283      68010000 
 9284 060c 64483304 		xorq	%fs:40, %rax
 9284      25280000 
 9284      00
 9285              	.LVL1420:
 9286 0615 0F85C000 		jne	.L160
 9286      0000
 9287 061b 4881C478 		addq	$376, %rsp
 9287      010000
 9288              		.cfi_remember_state
 9289              		.cfi_def_cfa_offset 56
 9290 0622 5B       		popq	%rbx
 9291              		.cfi_def_cfa_offset 48
 9292 0623 5D       		popq	%rbp
 9293              		.cfi_def_cfa_offset 40
 9294 0624 415C     		popq	%r12
 9295              		.cfi_def_cfa_offset 32
 9296              	.LVL1421:
 9297 0626 415D     		popq	%r13
 9298              		.cfi_def_cfa_offset 24
 9299              	.LVL1422:
 9300 0628 415E     		popq	%r14
 9301              		.cfi_def_cfa_offset 16
 9302 062a 415F     		popq	%r15
 9303              		.cfi_def_cfa_offset 8
 9304 062c C3       		ret
 9305              	.LVL1423:
 9306 062d 0F1F00   		.p2align 4,,10
 9307              		.p2align 3
 9308              	.L146:
 9309              		.cfi_restore_state
2864:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 9310              		.loc 1 2864 0
 9311 0630 0FBF5A40 		movswl	64(%rdx), %ebx
 9312 0634 6685DB   		testw	%bx, %bx
 9313 0637 7417     		je	.L147
 9314 0639 0FBF4260 		movswl	96(%rdx), %eax
 9315 063d 440FBF4A 		movswl	112(%rdx), %r9d
 9315      70
 9316 0642 0FBFF7   		movswl	%di, %esi
 9317 0645 440FBF42 		movswl	80(%rdx), %r8d
 9317      50
 9318 064a E941FAFF 		jmp	.L145
 9318      FF
 9319 064f 90       		.p2align 4,,10
 9320              		.p2align 3
 9321              	.L147:
2865:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 9322              		.loc 1 2865 0 discriminator 1
 9323 0650 440FBF42 		movswl	80(%rdx), %r8d
 9323      50
 9324 0655 0FBF4260 		movswl	96(%rdx), %eax
2866:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 9325              		.loc 1 2866 0 discriminator 1
 9326 0659 440FBF4A 		movswl	112(%rdx), %r9d
 9326      70
2864:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 9327              		.loc 1 2864 0 discriminator 1
 9328 065e 664585C0 		testw	%r8w, %r8w
 9329 0662 7544     		jne	.L161
2865:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 9330              		.loc 1 2865 0
 9331 0664 6685C0   		testw	%ax, %ax
 9332 0667 754F     		jne	.L162
2865:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 9333              		.loc 1 2865 0 is_stmt 0 discriminator 1
 9334 0669 664585C9 		testw	%r9w, %r9w
 9335 066d 755A     		jne	.L154
 9336              	.LBB4:
2868:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9337              		.loc 1 2868 0 is_stmt 1
 9338 066f 0FBF02   		movswl	(%rdx), %eax
 9339 0672 410FAF04 		imull	(%r12), %eax
 9339      24
 9340 0677 C1E002   		sall	$2, %eax
 9341              	.LVL1424:
2870:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*1] = dcval;
 9342              		.loc 1 2870 0
 9343 067a 894500   		movl	%eax, 0(%rbp)
2871:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*2] = dcval;
 9344              		.loc 1 2871 0
 9345 067d 894520   		movl	%eax, 32(%rbp)
2872:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*3] = dcval;
 9346              		.loc 1 2872 0
 9347 0680 894540   		movl	%eax, 64(%rbp)
2873:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*4] = dcval;
 9348              		.loc 1 2873 0
 9349 0683 894560   		movl	%eax, 96(%rbp)
2874:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*5] = dcval;
 9350              		.loc 1 2874 0
 9351 0686 89858000 		movl	%eax, 128(%rbp)
 9351      0000
2875:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*6] = dcval;
 9352              		.loc 1 2875 0
 9353 068c 8985A000 		movl	%eax, 160(%rbp)
 9353      0000
2876:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[DCTSIZE*7] = dcval;
 9354              		.loc 1 2876 0
 9355 0692 8985C000 		movl	%eax, 192(%rbp)
 9355      0000
2877:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9356              		.loc 1 2877 0
 9357 0698 8985E000 		movl	%eax, 224(%rbp)
 9357      0000
 9358              	.LVL1425:
2882:fltk-1.3.4-1/jpeg/jidctint.c ****     }
 9359              		.loc 1 2882 0
 9360 069e E959FBFF 		jmp	.L150
 9360      FF
 9361              	.LVL1426:
 9362              		.p2align 4,,10
 9363 06a3 0F1F4400 		.p2align 3
 9363      00
 9364              	.L161:
 9365              	.LBE4:
2864:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 9366              		.loc 1 2864 0
 9367 06a8 0FBFFB   		movswl	%bx, %edi
 9368 06ab 0FBFF3   		movswl	%bx, %esi
 9369 06ae E9DDF9FF 		jmp	.L145
 9369      FF
 9370              		.p2align 4,,10
 9371 06b3 0F1F4400 		.p2align 3
 9371      00
 9372              	.L162:
2865:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 9373              		.loc 1 2865 0
 9374 06b8 410FBFF8 		movswl	%r8w, %edi
 9375 06bc 410FBFD8 		movswl	%r8w, %ebx
 9376 06c0 410FBFF0 		movswl	%r8w, %esi
 9377 06c4 E9C7F9FF 		jmp	.L145
 9377      FF
 9378              	.L154:
 9379 06c9 0FBFF8   		movswl	%ax, %edi
 9380 06cc 440FBFC0 		movswl	%ax, %r8d
 9381 06d0 0FBFD8   		movswl	%ax, %ebx
 9382 06d3 0FBFF0   		movswl	%ax, %esi
 9383 06d6 E9B5F9FF 		jmp	.L145
 9383      FF
 9384              	.LVL1427:
 9385              	.L160:
 9386              		.loc 1 3092 0
 9387 06db E8000000 		call	__stack_chk_fail
 9387      00
 9388              	.LVL1428:
 9389              		.cfi_endproc
 9390              	.LFE77:
 9392              		.section	.text.unlikely.jpeg_idct_16x8
 9393              	.LCOLDE16:
 9394              		.section	.text.jpeg_idct_16x8
 9395              	.LHOTE16:
 9396              		.section	.text.unlikely.jpeg_idct_14x7,"ax",@progbits
 9397              	.LCOLDB17:
 9398              		.section	.text.jpeg_idct_14x7,"ax",@progbits
 9399              	.LHOTB17:
 9400              		.p2align 4,,15
 9401              		.globl	jpeg_idct_14x7
 9403              	jpeg_idct_14x7:
 9404              	.LFB78:
3093:fltk-1.3.4-1/jpeg/jidctint.c **** 
3094:fltk-1.3.4-1/jpeg/jidctint.c **** 
3095:fltk-1.3.4-1/jpeg/jidctint.c **** /*
3096:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
3097:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 14x7 output block.
3098:fltk-1.3.4-1/jpeg/jidctint.c ****  *
3099:fltk-1.3.4-1/jpeg/jidctint.c ****  * 7-point IDCT in pass 1 (columns), 14-point in pass 2 (rows).
3100:fltk-1.3.4-1/jpeg/jidctint.c ****  */
3101:fltk-1.3.4-1/jpeg/jidctint.c **** 
3102:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
3103:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_14x7 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
3104:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
3105:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
3106:fltk-1.3.4-1/jpeg/jidctint.c **** {
 9405              		.loc 1 3106 0
 9406              		.cfi_startproc
 9407              	.LVL1429:
 9408 0000 4157     		pushq	%r15
 9409              		.cfi_def_cfa_offset 16
 9410              		.cfi_offset 15, -16
 9411 0002 4156     		pushq	%r14
 9412              		.cfi_def_cfa_offset 24
 9413              		.cfi_offset 14, -24
 9414 0004 4155     		pushq	%r13
 9415              		.cfi_def_cfa_offset 32
 9416              		.cfi_offset 13, -32
 9417 0006 4154     		pushq	%r12
 9418              		.cfi_def_cfa_offset 40
 9419              		.cfi_offset 12, -40
 9420 0008 55       		pushq	%rbp
 9421              		.cfi_def_cfa_offset 48
 9422              		.cfi_offset 6, -48
 9423 0009 53       		pushq	%rbx
 9424              		.cfi_def_cfa_offset 56
 9425              		.cfi_offset 3, -56
 9426 000a 4881EC58 		subq	$344, %rsp
 9426      010000
 9427              		.cfi_def_cfa_offset 400
3107:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
3108:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
3109:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
3110:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
3111:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
3112:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
3113:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
3114:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
3115:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
3116:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*7];	/* buffers data between passes */
3117:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
3118:fltk-1.3.4-1/jpeg/jidctint.c **** 
3119:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
3120:fltk-1.3.4-1/jpeg/jidctint.c ****    * 7-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/14).
3121:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3122:fltk-1.3.4-1/jpeg/jidctint.c **** 
3123:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
3124:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 9428              		.loc 1 3124 0
 9429 0011 4C8B6E58 		movq	88(%rsi), %r13
3106:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 9430              		.loc 1 3106 0
 9431 0015 64488B04 		movq	%fs:40, %rax
 9431      25280000 
 9431      00
 9432 001e 48898424 		movq	%rax, 328(%rsp)
 9432      48010000 
 9433 0026 31C0     		xorl	%eax, %eax
3114:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 9434              		.loc 1 3114 0
 9435 0028 488B87B8 		movq	440(%rdi), %rax
 9435      010000
3125:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 9436              		.loc 1 3125 0
 9437 002f 4C8D6424 		leaq	96(%rsp), %r12
 9437      60
3106:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 9438              		.loc 1 3106 0
 9439 0034 48894C24 		movq	%rcx, 16(%rsp)
 9439      10
 9440 0039 44894424 		movl	%r8d, 24(%rsp)
 9440      18
3114:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 9441              		.loc 1 3114 0
 9442 003e 4C8DB080 		leaq	128(%rax), %r14
 9442      000000
 9443              	.LVL1430:
3126:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 9444              		.loc 1 3126 0
 9445 0045 488D8424 		leaq	128(%rsp), %rax
 9445      80000000 
 9446 004d 4C897424 		movq	%r14, 32(%rsp)
 9446      20
 9447 0052 48894424 		movq	%rax, 8(%rsp)
 9447      08
 9448              	.LVL1431:
 9449 0057 660F1F84 		.p2align 4,,10
 9449      00000000 
 9449      00
 9450              		.p2align 3
 9451              	.L164:
3127:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3128:fltk-1.3.4-1/jpeg/jidctint.c **** 
3129:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
3130:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 <<= CONST_BITS;
3131:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3132:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += ONE << (CONST_BITS-PASS1_BITS-1);
3133:fltk-1.3.4-1/jpeg/jidctint.c **** 
3134:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 9452              		.loc 1 3134 0 discriminator 3
 9453 0060 0FBF7A20 		movswl	32(%rdx), %edi
3135:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 9454              		.loc 1 3135 0 discriminator 3
 9455 0064 0FBF7240 		movswl	64(%rdx), %esi
3134:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 9456              		.loc 1 3134 0 discriminator 3
 9457 0068 410FAF7D 		imull	64(%r13), %edi
 9457      40
 9458              		.loc 1 3135 0 discriminator 3
 9459 006d 410FAFB5 		imull	128(%r13), %esi
 9459      80000000 
3136:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 9460              		.loc 1 3136 0 discriminator 3
 9461 0075 0FBF4260 		movswl	96(%rdx), %eax
3129:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 <<= CONST_BITS;
 9462              		.loc 1 3129 0 discriminator 3
 9463 0079 0FBF0A   		movswl	(%rdx), %ecx
 9464              		.loc 1 3136 0 discriminator 3
 9465 007c 410FAF85 		imull	192(%r13), %eax
 9465      C0000000 
3129:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 <<= CONST_BITS;
 9466              		.loc 1 3129 0 discriminator 3
 9467 0084 410FAF4D 		imull	0(%r13), %ecx
 9467      00
3134:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 9468              		.loc 1 3134 0 discriminator 3
 9469 0089 4863FF   		movslq	%edi, %rdi
3135:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 9470              		.loc 1 3135 0 discriminator 3
 9471 008c 4863F6   		movslq	%esi, %rsi
3137:fltk-1.3.4-1/jpeg/jidctint.c **** 
3138:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(z2 - z3, FIX(0.881747734));       /* c4 */
3139:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z1 - z2, FIX(0.314692123));       /* c6 */
 9472              		.loc 1 3139 0 discriminator 3
 9473 008f 4989F8   		movq	%rdi, %r8
3138:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z1 - z2, FIX(0.314692123));       /* c6 */
 9474              		.loc 1 3138 0 discriminator 3
 9475 0092 4989F1   		movq	%rsi, %r9
 9476              		.loc 1 3139 0 discriminator 3
 9477 0095 4929F0   		subq	%rsi, %r8
3136:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9478              		.loc 1 3136 0 discriminator 3
 9479 0098 4898     		cltq
3138:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z1 - z2, FIX(0.314692123));       /* c6 */
 9480              		.loc 1 3138 0 discriminator 3
 9481 009a 4929C1   		subq	%rax, %r9
3140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp22 + tmp23 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
3141:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 9482              		.loc 1 3141 0 discriminator 3
 9483 009d 4C8D3C07 		leaq	(%rdi,%rax), %r15
3129:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 <<= CONST_BITS;
 9484              		.loc 1 3129 0 discriminator 3
 9485 00a1 4863C9   		movslq	%ecx, %rcx
 9486              	.LVL1432:
3139:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp22 + tmp23 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
 9487              		.loc 1 3139 0 discriminator 3
 9488 00a4 4D69D812 		imulq	$2578, %r8, %r11
 9488      0A0000
3130:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 9489              		.loc 1 3130 0 discriminator 3
 9490 00ab 48C1E10D 		salq	$13, %rcx
 9491              	.LVL1433:
3138:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z1 - z2, FIX(0.314692123));       /* c6 */
 9492              		.loc 1 3138 0 discriminator 3
 9493 00af 4969E937 		imulq	$7223, %r9, %rbp
 9493      1C0000
3132:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9494              		.loc 1 3132 0 discriminator 3
 9495 00b6 4881C100 		addq	$1024, %rcx
 9495      040000
 9496              	.LVL1434:
3142:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= tmp10;
3143:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(1.274162392)) + tmp23; /* c2 */
 9497              		.loc 1 3143 0 discriminator 3
 9498 00bd 4D69D7C6 		imulq	$10438, %r15, %r10
 9498      280000
3140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 9499              		.loc 1 3140 0 discriminator 3
 9500 00c4 4A8D5C1D 		leaq	0(%rbp,%r11), %rbx
 9500      00
3144:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 += tmp10 - MULTIPLY(z3, FIX(0.077722536));   /* c2-c4-c6 */
 9501              		.loc 1 3144 0 discriminator 3
 9502 00c9 4869C083 		imulq	$-637, %rax, %rax
 9502      FDFFFF
 9503              	.LVL1435:
3143:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 += tmp10 - MULTIPLY(z3, FIX(0.077722536));   /* c2-c4-c6 */
 9504              		.loc 1 3143 0 discriminator 3
 9505 00d0 4901CA   		addq	%rcx, %r10
3145:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 += tmp10 - MULTIPLY(z1, FIX(2.470602249));   /* c2+c4+c6 */
 9506              		.loc 1 3145 0 discriminator 3
 9507 00d3 4869FFF1 		imulq	$-20239, %rdi, %rdi
 9507      B0FFFF
 9508              	.LVL1436:
3140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 9509              		.loc 1 3140 0 discriminator 3
 9510 00da 4C8D040B 		leaq	(%rbx,%rcx), %r8
 9511 00de 4869DE15 		imulq	$-15083, %rsi, %rbx
 9511      C5FFFF
3144:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 += tmp10 - MULTIPLY(z1, FIX(2.470602249));   /* c2+c4+c6 */
 9512              		.loc 1 3144 0 discriminator 3
 9513 00e5 4C01D0   		addq	%r10, %rax
 9514              		.loc 1 3145 0 discriminator 3
 9515 00e8 4C01D7   		addq	%r10, %rdi
3144:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 += tmp10 - MULTIPLY(z1, FIX(2.470602249));   /* c2+c4+c6 */
 9516              		.loc 1 3144 0 discriminator 3
 9517 00eb 4C8D0C28 		leaq	(%rax,%rbp), %r9
3146:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += MULTIPLY(z2, FIX(1.414213562));           /* c0 */
3147:fltk-1.3.4-1/jpeg/jidctint.c **** 
3148:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3149:fltk-1.3.4-1/jpeg/jidctint.c **** 
3150:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 9518              		.loc 1 3150 0 discriminator 3
 9519 00ef 0FBF4210 		movswl	16(%rdx), %eax
3140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 9520              		.loc 1 3140 0 discriminator 3
 9521 00f3 4C01C3   		addq	%r8, %rbx
 9522              	.LVL1437:
3145:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += MULTIPLY(z2, FIX(1.414213562));           /* c0 */
 9523              		.loc 1 3145 0 discriminator 3
 9524 00f6 4E8D041F 		leaq	(%rdi,%r11), %r8
 9525              	.LVL1438:
3151:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 9526              		.loc 1 3151 0 discriminator 3
 9527 00fa 0FBF7A30 		movswl	48(%rdx), %edi
3150:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 9528              		.loc 1 3150 0 discriminator 3
 9529 00fe 410FAF45 		imull	32(%r13), %eax
 9529      20
 9530              		.loc 1 3151 0 discriminator 3
 9531 0103 410FAF7D 		imull	96(%r13), %edi
 9531      60
3152:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 9532              		.loc 1 3152 0 discriminator 3
 9533 0108 440FBF5A 		movswl	80(%rdx), %r11d
 9533      50
 9534 010d 450FAF9D 		imull	160(%r13), %r11d
 9534      A0000000 
3150:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 9535              		.loc 1 3150 0 discriminator 3
 9536 0115 4898     		cltq
 9537              	.LVL1439:
3151:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 9538              		.loc 1 3151 0 discriminator 3
 9539 0117 4863FF   		movslq	%edi, %rdi
 9540              	.LVL1440:
3153:fltk-1.3.4-1/jpeg/jidctint.c **** 
3154:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(0.935414347));       /* (c3+c1-c5)/2 */
3155:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.170262339));       /* (c3+c5-c1)/2 */
 9541              		.loc 1 3155 0 discriminator 3
 9542 011a 4989C2   		movq	%rax, %r10
 9543              	.LVL1441:
3154:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.170262339));       /* (c3+c5-c1)/2 */
 9544              		.loc 1 3154 0 discriminator 3
 9545 011d 4C8D3438 		leaq	(%rax,%rdi), %r14
 9546              		.loc 1 3155 0 discriminator 3
 9547 0121 4929FA   		subq	%rdi, %r10
3152:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 9548              		.loc 1 3152 0 discriminator 3
 9549 0124 4D63DB   		movslq	%r11d, %r11
 9550              	.LVL1442:
3154:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.170262339));       /* (c3+c5-c1)/2 */
 9551              		.loc 1 3154 0 discriminator 3
 9552 0127 4D69F6EF 		imulq	$7663, %r14, %r14
 9552      1D0000
 9553              	.LVL1443:
3156:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 - tmp12;
3157:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
3158:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2 + z3, - FIX(1.378756276));     /* -c1 */
 9554              		.loc 1 3158 0 discriminator 3
 9555 012e 4C01DF   		addq	%r11, %rdi
 9556              	.LVL1444:
3159:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
3160:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));          /* c5 */
 9557              		.loc 1 3160 0 discriminator 3
 9558 0131 4C01D8   		addq	%r11, %rax
 9559              	.LVL1445:
3155:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 - tmp12;
 9560              		.loc 1 3155 0 discriminator 3
 9561 0134 4D69D273 		imulq	$1395, %r10, %r10
 9561      050000
 9562              	.LVL1446:
 9563              		.loc 1 3160 0 discriminator 3
 9564 013b 4869C0A3 		imulq	$5027, %rax, %rax
 9564      130000
3156:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 - tmp12;
 9565              		.loc 1 3156 0 discriminator 3
 9566 0142 4C89F5   		movq	%r14, %rbp
 9567 0145 4C29D5   		subq	%r10, %rbp
 9568              	.LVL1447:
3157:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2 + z3, - FIX(1.378756276));     /* -c1 */
 9569              		.loc 1 3157 0 discriminator 3
 9570 0148 4D01F2   		addq	%r14, %r10
 9571              	.LVL1448:
3158:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
 9572              		.loc 1 3158 0 discriminator 3
 9573 014b 4869FFE1 		imulq	$-11295, %rdi, %rdi
 9573      D3FFFF
 9574              	.LVL1449:
3161:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
 9575              		.loc 1 3161 0 discriminator 3
 9576 0152 4801C5   		addq	%rax, %rbp
 9577              	.LVL1450:
3159:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));          /* c5 */
 9578              		.loc 1 3159 0 discriminator 3
 9579 0155 4901FA   		addq	%rdi, %r10
 9580              	.LVL1451:
3162:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2 + MULTIPLY(z3, FIX(1.870828693));      /* c3+c1-c5 */
 9581              		.loc 1 3162 0 discriminator 3
 9582 0158 4D69DBDE 		imulq	$15326, %r11, %r11
 9582      3B0000
 9583              	.LVL1452:
3163:fltk-1.3.4-1/jpeg/jidctint.c **** 
3164:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3165:fltk-1.3.4-1/jpeg/jidctint.c **** 
3166:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0] = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
3167:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
3168:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
3169:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
3170:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
3171:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
3172:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp23, CONST_BITS-PASS1_BITS);
 9584              		.loc 1 3172 0 discriminator 3
 9585 015f 4C29FE   		subq	%r15, %rsi
 9586              	.LVL1453:
3126:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 9587              		.loc 1 3126 0 discriminator 3
 9588 0162 4883C202 		addq	$2, %rdx
 9589              	.LVL1454:
 9590              		.loc 1 3172 0 discriminator 3
 9591 0166 4869F641 		imulq	$11585, %rsi, %rsi
 9591      2D0000
3126:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 9592              		.loc 1 3126 0 discriminator 3
 9593 016d 4983C504 		addq	$4, %r13
 9594              	.LVL1455:
 9595 0171 4983C404 		addq	$4, %r12
 9596              	.LVL1456:
3162:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2 + MULTIPLY(z3, FIX(1.870828693));      /* c3+c1-c5 */
 9597              		.loc 1 3162 0 discriminator 3
 9598 0175 4901C3   		addq	%rax, %r11
3166:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 9599              		.loc 1 3166 0 discriminator 3
 9600 0178 498D0429 		leaq	(%r9,%rbp), %rax
 9601              	.LVL1457:
3167:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 9602              		.loc 1 3167 0 discriminator 3
 9603 017c 4929E9   		subq	%rbp, %r9
 9604              	.LVL1458:
3162:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9605              		.loc 1 3162 0 discriminator 3
 9606 017f 4C01DF   		addq	%r11, %rdi
 9607              	.LVL1459:
 9608              		.loc 1 3172 0 discriminator 3
 9609 0182 4801CE   		addq	%rcx, %rsi
 9610              	.LVL1460:
3167:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 9611              		.loc 1 3167 0 discriminator 3
 9612 0185 49C1F90B 		sarq	$11, %r9
3166:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 9613              		.loc 1 3166 0 discriminator 3
 9614 0189 48C1F80B 		sarq	$11, %rax
 9615              		.loc 1 3172 0 discriminator 3
 9616 018d 48C1FE0B 		sarq	$11, %rsi
 9617              	.LVL1461:
3167:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 9618              		.loc 1 3167 0 discriminator 3
 9619 0191 45898C24 		movl	%r9d, 188(%r12)
 9619      BC000000 
3166:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 9620              		.loc 1 3166 0 discriminator 3
 9621 0199 41894424 		movl	%eax, -4(%r12)
 9621      FC
3168:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 9622              		.loc 1 3168 0 discriminator 3
 9623 019e 4A8D0413 		leaq	(%rbx,%r10), %rax
3169:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 9624              		.loc 1 3169 0 discriminator 3
 9625 01a2 4C29D3   		subq	%r10, %rbx
 9626              	.LVL1462:
 9627 01a5 48C1FB0B 		sarq	$11, %rbx
 9628              		.loc 1 3172 0 discriminator 3
 9629 01a9 41897424 		movl	%esi, 92(%r12)
 9629      5C
 9630              	.LVL1463:
3168:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 9631              		.loc 1 3168 0 discriminator 3
 9632 01ae 48C1F80B 		sarq	$11, %rax
3169:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 9633              		.loc 1 3169 0 discriminator 3
 9634 01b2 41899C24 		movl	%ebx, 156(%r12)
 9634      9C000000 
3168:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 9635              		.loc 1 3168 0 discriminator 3
 9636 01ba 41894424 		movl	%eax, 28(%r12)
 9636      1C
3170:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 9637              		.loc 1 3170 0 discriminator 3
 9638 01bf 498D0438 		leaq	(%r8,%rdi), %rax
3171:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp23, CONST_BITS-PASS1_BITS);
 9639              		.loc 1 3171 0 discriminator 3
 9640 01c3 4929F8   		subq	%rdi, %r8
 9641              	.LVL1464:
 9642 01c6 49C1F80B 		sarq	$11, %r8
3170:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 9643              		.loc 1 3170 0 discriminator 3
 9644 01ca 48C1F80B 		sarq	$11, %rax
3171:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp23, CONST_BITS-PASS1_BITS);
 9645              		.loc 1 3171 0 discriminator 3
 9646 01ce 45894424 		movl	%r8d, 124(%r12)
 9646      7C
3170:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 9647              		.loc 1 3170 0 discriminator 3
 9648 01d3 41894424 		movl	%eax, 60(%r12)
 9648      3C
 9649              	.LVL1465:
3126:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 9650              		.loc 1 3126 0 discriminator 3
 9651 01d8 4C3B6424 		cmpq	8(%rsp), %r12
 9651      08
 9652 01dd 0F857DFE 		jne	.L164
 9652      FFFF
 9653 01e3 8B442418 		movl	24(%rsp), %eax
 9654 01e7 4C8B7424 		movq	32(%rsp), %r14
 9654      20
3126:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 9655              		.loc 1 3126 0 is_stmt 0
 9656 01ec 4C8D6424 		leaq	96(%rsp), %r12
 9656      60
 9657              	.LVL1466:
 9658 01f1 48894424 		movq	%rax, 80(%rsp)
 9658      50
 9659 01f6 488B4424 		movq	16(%rsp), %rax
 9659      10
 9660 01fb 48894424 		movq	%rax, 8(%rsp)
 9660      08
3173:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3174:fltk-1.3.4-1/jpeg/jidctint.c **** 
3175:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 7 rows from work array, store into output array.
3176:fltk-1.3.4-1/jpeg/jidctint.c ****    * 14-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/28).
3177:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3178:fltk-1.3.4-1/jpeg/jidctint.c **** 
3179:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3180:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 7; ctr++) {
 9661              		.loc 1 3180 0 is_stmt 1
 9662 0200 488D8424 		leaq	320(%rsp), %rax
 9662      40010000 
 9663 0208 48894424 		movq	%rax, 88(%rsp)
 9663      58
 9664              	.LVL1467:
 9665 020d 0F1F00   		.p2align 4,,10
 9666              		.p2align 3
 9667              	.L165:
3181:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
3182:fltk-1.3.4-1/jpeg/jidctint.c **** 
3183:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3184:fltk-1.3.4-1/jpeg/jidctint.c **** 
3185:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3186:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
3187:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
3188:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 9668              		.loc 1 3188 0 discriminator 3
 9669 0210 49634C24 		movslq	16(%r12), %rcx
 9669      10
3181:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 9670              		.loc 1 3181 0 discriminator 3
 9671 0215 488B4424 		movq	8(%rsp), %rax
 9671      08
3186:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 9672              		.loc 1 3186 0 discriminator 3
 9673 021a 4D630424 		movslq	(%r12), %r8
3181:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 9674              		.loc 1 3181 0 discriminator 3
 9675 021e 488B5424 		movq	80(%rsp), %rdx
 9675      50
 9676 0223 480310   		addq	(%rax), %rdx
 9677              	.LVL1468:
3189:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(1.274162392));         /* c4 */
 9678              		.loc 1 3189 0 discriminator 3
 9679 0226 4C69D1C6 		imulq	$10438, %rcx, %r10
 9679      280000
3190:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z4, FIX(0.314692123));         /* c12 */
 9680              		.loc 1 3190 0 discriminator 3
 9681 022d 4869C112 		imulq	$2578, %rcx, %rax
 9681      0A0000
3186:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 9682              		.loc 1 3186 0 discriminator 3
 9683 0234 4983C010 		addq	$16, %r8
 9684              	.LVL1469:
3191:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(0.881747734));         /* c8 */
 9685              		.loc 1 3191 0 discriminator 3
 9686 0238 4C69C937 		imulq	$7223, %rcx, %r9
 9686      1C0000
3187:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 9687              		.loc 1 3187 0 discriminator 3
 9688 023f 49C1E00D 		salq	$13, %r8
 9689              	.LVL1470:
3192:fltk-1.3.4-1/jpeg/jidctint.c **** 
3193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z2;
3194:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
3195:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
 9690              		.loc 1 3195 0 discriminator 3
 9691 0243 4C89C1   		movq	%r8, %rcx
3193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 9692              		.loc 1 3193 0 discriminator 3
 9693 0246 4B8D3C10 		leaq	(%r8,%r10), %rdi
 9694              	.LVL1471:
3194:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
 9695              		.loc 1 3194 0 discriminator 3
 9696 024a 498D3400 		leaq	(%r8,%rax), %rsi
 9697              	.LVL1472:
3196:fltk-1.3.4-1/jpeg/jidctint.c **** 
3197:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = z1 - ((z2 + z3 - z4) << 1);          /* c0 = (c4+c12-c8)*2 */
 9698              		.loc 1 3197 0 discriminator 3
 9699 024e 4C01D0   		addq	%r10, %rax
 9700              	.LVL1473:
 9701 0251 4C29C8   		subq	%r9, %rax
3195:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9702              		.loc 1 3195 0 discriminator 3
 9703 0254 4C29C9   		subq	%r9, %rcx
 9704              	.LVL1474:
3198:fltk-1.3.4-1/jpeg/jidctint.c **** 
3199:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
3200:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 9705              		.loc 1 3200 0 discriminator 3
 9706 0257 4D634C24 		movslq	24(%r12), %r9
 9706      18
 9707              	.LVL1475:
3197:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9708              		.loc 1 3197 0 discriminator 3
 9709 025c 4801C0   		addq	%rax, %rax
 9710 025f 4929C0   		subq	%rax, %r8
 9711              	.LVL1476:
3199:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 9712              		.loc 1 3199 0 discriminator 3
 9713 0262 49634424 		movslq	8(%r12), %rax
 9713      08
 9714              	.LVL1477:
3197:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9715              		.loc 1 3197 0 discriminator 3
 9716 0267 4C894424 		movq	%r8, 16(%rsp)
 9716      10
 9717              	.LVL1478:
3201:fltk-1.3.4-1/jpeg/jidctint.c **** 
3202:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX(1.105676686));    /* c6 */
3203:fltk-1.3.4-1/jpeg/jidctint.c **** 
3204:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z3 + MULTIPLY(z1, FIX(0.273079590)); /* c2-c6 */
3205:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 9718              		.loc 1 3205 0 discriminator 3
 9719 026c 4D69D9FC 		imulq	$-14084, %r9, %r11
 9719      C8FFFF
3202:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9720              		.loc 1 3202 0 discriminator 3
 9721 0273 4E8D0408 		leaq	(%rax,%r9), %r8
3204:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 9722              		.loc 1 3204 0 discriminator 3
 9723 0277 4C69D0BD 		imulq	$2237, %rax, %r10
 9723      080000
3202:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9724              		.loc 1 3202 0 discriminator 3
 9725 027e 4D69C062 		imulq	$9058, %r8, %r8
 9725      230000
 9726              	.LVL1479:
3206:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.613604268)) -     /* c10 */
 9727              		.loc 1 3206 0 discriminator 3
 9728 0285 4D69C9E1 		imulq	$-11295, %r9, %r9
 9728      D3FFFF
 9729              	.LVL1480:
3204:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 9730              		.loc 1 3204 0 discriminator 3
 9731 028c 4D01C2   		addq	%r8, %r10
 9732              	.LVL1481:
3205:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.613604268)) -     /* c10 */
 9733              		.loc 1 3205 0 discriminator 3
 9734 028f 4D01D8   		addq	%r11, %r8
 9735              	.LVL1482:
 9736              		.loc 1 3206 0 discriminator 3
 9737 0292 4869C0A3 		imulq	$5027, %rax, %rax
 9737      130000
 9738              	.LVL1483:
3207:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
3208:fltk-1.3.4-1/jpeg/jidctint.c **** 
3209:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp13;
 9739              		.loc 1 3209 0 discriminator 3
 9740 0299 4E8D3C17 		leaq	(%rdi,%r10), %r15
3210:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 9741              		.loc 1 3210 0 discriminator 3
 9742 029d 4C29D7   		subq	%r10, %rdi
 9743              	.LVL1484:
3211:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp14;
 9744              		.loc 1 3211 0 discriminator 3
 9745 02a0 4E8D1406 		leaq	(%rsi,%r8), %r10
 9746              	.LVL1485:
3210:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 9747              		.loc 1 3210 0 discriminator 3
 9748 02a4 48897C24 		movq	%rdi, 32(%rsp)
 9748      20
3212:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 9749              		.loc 1 3212 0 discriminator 3
 9750 02a9 4C29C6   		subq	%r8, %rsi
 9751              	.LVL1486:
3209:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 9752              		.loc 1 3209 0 discriminator 3
 9753 02ac 4C897C24 		movq	%r15, 24(%rsp)
 9753      18
3213:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp12 + tmp15;
3214:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
3215:fltk-1.3.4-1/jpeg/jidctint.c **** 
3216:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3217:fltk-1.3.4-1/jpeg/jidctint.c **** 
3218:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
3219:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
3220:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
3221:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 9754              		.loc 1 3221 0 discriminator 3
 9755 02b1 4D634424 		movslq	28(%r12), %r8
 9755      1C
 9756              	.LVL1487:
3211:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 9757              		.loc 1 3211 0 discriminator 3
 9758 02b6 4C895424 		movq	%r10, 40(%rsp)
 9758      28
3220:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 9759              		.loc 1 3220 0 discriminator 3
 9760 02bb 4D635424 		movslq	20(%r12), %r10
 9760      14
3206:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
 9761              		.loc 1 3206 0 discriminator 3
 9762 02c0 4C01C8   		addq	%r9, %rax
 9763              	.LVL1488:
3212:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp12 + tmp15;
 9764              		.loc 1 3212 0 discriminator 3
 9765 02c3 48897424 		movq	%rsi, 48(%rsp)
 9765      30
 9766              	.LVL1489:
3213:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 9767              		.loc 1 3213 0 discriminator 3
 9768 02c8 4C8D0C01 		leaq	(%rcx,%rax), %r9
3214:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9769              		.loc 1 3214 0 discriminator 3
 9770 02cc 4829C1   		subq	%rax, %rcx
 9771              	.LVL1490:
3218:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 9772              		.loc 1 3218 0 discriminator 3
 9773 02cf 49634424 		movslq	4(%r12), %rax
 9773      04
 9774              	.LVL1491:
3214:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9775              		.loc 1 3214 0 discriminator 3
 9776 02d4 48894C24 		movq	%rcx, 64(%rsp)
 9776      40
 9777              	.LVL1492:
3219:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 9778              		.loc 1 3219 0 discriminator 3
 9779 02d9 49634C24 		movslq	12(%r12), %rcx
 9779      0C
 9780              	.LVL1493:
3222:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 <<= CONST_BITS;
 9781              		.loc 1 3222 0 discriminator 3
 9782 02de 49C1E00D 		salq	$13, %r8
 9783              	.LVL1494:
3213:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 9784              		.loc 1 3213 0 discriminator 3
 9785 02e2 4C894C24 		movq	%r9, 56(%rsp)
 9785      38
 9786              	.LVL1495:
3223:fltk-1.3.4-1/jpeg/jidctint.c **** 
3224:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 + z3;
 9787              		.loc 1 3224 0 discriminator 3
 9788 02e7 4A8D2C10 		leaq	(%rax,%r10), %rbp
 9789              	.LVL1496:
3225:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
 9790              		.loc 1 3225 0 discriminator 3
 9791 02eb 488D3C08 		leaq	(%rax,%rcx), %rdi
 9792              	.LVL1497:
3226:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
3227:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + z4 - MULTIPLY(z1, FIX(1.126980169)); /* c3+c5-c1 */
3228:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
3229:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
3230:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
3231:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - z4;           /* c11 */
3232:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
3233:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z2 + z3, - FIX(0.158341681)) - z4;    /* -c13 */
 9793              		.loc 1 3233 0 discriminator 3
 9794 02ef 4E8D0C11 		leaq	(%rcx,%r10), %r9
3226:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
 9795              		.loc 1 3226 0 discriminator 3
 9796 02f3 4C69FD52 		imulq	$9810, %rbp, %r15
 9796      260000
 9797              	.LVL1498:
3225:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
 9798              		.loc 1 3225 0 discriminator 3
 9799 02fa 4C69DFB7 		imulq	$10935, %rdi, %r11
 9799      2A0000
 9800              	.LVL1499:
3229:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 9801              		.loc 1 3229 0 discriminator 3
 9802 0301 4869F80B 		imulq	$-8693, %rax, %rdi
 9802      DEFFFF
3227:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 9803              		.loc 1 3227 0 discriminator 3
 9804 0308 4F8D2C3B 		leaq	(%r11,%r15), %r13
3228:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
 9805              		.loc 1 3228 0 discriminator 3
 9806 030c 4869ED14 		imulq	$6164, %rbp, %rbp
 9806      180000
 9807              	.LVL1500:
3227:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 9808              		.loc 1 3227 0 discriminator 3
 9809 0313 4B8D7405 		leaq	0(%r13,%r8), %rsi
 9809      00
 9810 0318 4C69E8F0 		imulq	$-9232, %rax, %r13
 9810      DBFFFF
3230:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - z4;           /* c11 */
 9811              		.loc 1 3230 0 discriminator 3
 9812 031f 4829C8   		subq	%rcx, %rax
 9813              	.LVL1501:
3229:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 9814              		.loc 1 3229 0 discriminator 3
 9815 0322 4801EF   		addq	%rbp, %rdi
3227:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 9816              		.loc 1 3227 0 discriminator 3
 9817 0325 4901F5   		addq	%rsi, %r13
 9818              	.LVL1502:
3231:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
 9819              		.loc 1 3231 0 discriminator 3
 9820 0328 4869F0F2 		imulq	$3826, %rax, %rsi
 9820      0E0000
 9821 032f 4C29C6   		subq	%r8, %rsi
 9822              	.LVL1503:
3234:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp13 - MULTIPLY(z2, FIX(0.424103948));       /* c3-c9-c13 */
3235:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
3236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
3237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
3238:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
3239:fltk-1.3.4-1/jpeg/jidctint.c **** 
3240:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = ((z1 - z3) << CONST_BITS) + z4;
 9823              		.loc 1 3240 0 discriminator 3
 9824 0332 4C29D0   		subq	%r10, %rax
 9825              	.LVL1504:
3233:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp13 - MULTIPLY(z2, FIX(0.424103948));       /* c3-c9-c13 */
 9826              		.loc 1 3233 0 discriminator 3
 9827 0335 4D69C9EF 		imulq	$-1297, %r9, %r9
 9827      FAFFFF
3232:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z2 + z3, - FIX(0.158341681)) - z4;    /* -c13 */
 9828              		.loc 1 3232 0 discriminator 3
 9829 033c 48897424 		movq	%rsi, 72(%rsp)
 9829      48
 9830 0341 4801FE   		addq	%rdi, %rsi
 9831              	.LVL1505:
3235:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 9832              		.loc 1 3235 0 discriminator 3
 9833 0344 4969DA09 		imulq	$-19447, %r10, %rbx
 9833      B4FFFF
 9834              		.loc 1 3240 0 discriminator 3
 9835 034b 48C1E00D 		salq	$13, %rax
3234:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
 9836              		.loc 1 3234 0 discriminator 3
 9837 034f 4869F96E 		imulq	$-3474, %rcx, %rdi
 9837      F2FFFF
3233:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp13 - MULTIPLY(z2, FIX(0.424103948));       /* c3-c9-c13 */
 9838              		.loc 1 3233 0 discriminator 3
 9839 0356 4D29C1   		subq	%r8, %r9
 9840              	.LVL1506:
3235:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 9841              		.loc 1 3235 0 discriminator 3
 9842 0359 4C01CB   		addq	%r9, %rbx
3234:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
 9843              		.loc 1 3234 0 discriminator 3
 9844 035c 4C01CF   		addq	%r9, %rdi
3236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 9845              		.loc 1 3236 0 discriminator 3
 9846 035f 4D89D1   		movq	%r10, %r9
 9847              	.LVL1507:
3235:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 9848              		.loc 1 3235 0 discriminator 3
 9849 0362 4C01FB   		addq	%r15, %rbx
3236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 9850              		.loc 1 3236 0 discriminator 3
 9851 0365 4929C9   		subq	%rcx, %r9
3234:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 - MULTIPLY(z3, FIX(2.373959773));       /* c3+c5-c13 */
 9852              		.loc 1 3234 0 discriminator 3
 9853 0368 4C01DF   		addq	%r11, %rdi
 9854              	.LVL1508:
3238:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9855              		.loc 1 3238 0 discriminator 3
 9856 036b 4869C999 		imulq	$5529, %rcx, %rcx
 9856      150000
 9857              	.LVL1509:
3236:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += tmp13 + z4 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 9858              		.loc 1 3236 0 discriminator 3
 9859 0372 4D69D9F8 		imulq	$11512, %r9, %r11
 9859      2C0000
 9860              	.LVL1510:
3237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 9861              		.loc 1 3237 0 discriminator 3
 9862 0379 4D69CAE6 		imulq	$-13850, %r10, %r9
 9862      C9FFFF
3241:fltk-1.3.4-1/jpeg/jidctint.c **** 
3242:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3243:fltk-1.3.4-1/jpeg/jidctint.c **** 
3244:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
3245:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3246:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3247:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[13] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
3248:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3249:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3250:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 9863              		.loc 1 3250 0 discriminator 3
 9864 0380 4C8B5424 		movq	40(%rsp), %r10
 9864      28
 9865              	.LVL1511:
3237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 9866              		.loc 1 3237 0 discriminator 3
 9867 0385 4F8D3C18 		leaq	(%r8,%r11), %r15
3238:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9868              		.loc 1 3238 0 discriminator 3
 9869 0389 4C01D9   		addq	%r11, %rcx
3244:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9870              		.loc 1 3244 0 discriminator 3
 9871 038c 4C8B5C24 		movq	24(%rsp), %r11
 9871      18
 9872              	.LVL1512:
3240:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9873              		.loc 1 3240 0 discriminator 3
 9874 0391 4901C0   		addq	%rax, %r8
 9875              	.LVL1513:
3238:fltk-1.3.4-1/jpeg/jidctint.c **** 
 9876              		.loc 1 3238 0 discriminator 3
 9877 0394 48034C24 		addq	72(%rsp), %rcx
 9877      48
3237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 9878              		.loc 1 3237 0 discriminator 3
 9879 0399 4D01F9   		addq	%r15, %r9
3244:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9880              		.loc 1 3244 0 discriminator 3
 9881 039c 4B8D042B 		leaq	(%r11,%r13), %rax
3247:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9882              		.loc 1 3247 0 discriminator 3
 9883 03a0 4D29EB   		subq	%r13, %r11
3237:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp13 + MULTIPLY(z2, FIX(0.674957567));       /* c1+c11-c5 */
 9884              		.loc 1 3237 0 discriminator 3
 9885 03a3 4901E9   		addq	%rbp, %r9
 9886              	.LVL1514:
3244:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9887              		.loc 1 3244 0 discriminator 3
 9888 03a6 48C1F812 		sarq	$18, %rax
 9889 03aa 25FF0300 		andl	$1023, %eax
 9889      00
 9890 03af 410FB604 		movzbl	(%r14,%rax), %eax
 9890      06
 9891 03b4 8802     		movb	%al, (%rdx)
3247:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9892              		.loc 1 3247 0 discriminator 3
 9893 03b6 4C89D8   		movq	%r11, %rax
3251:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3252:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3253:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[12] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
3254:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3255:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3256:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 9894              		.loc 1 3256 0 discriminator 3
 9895 03b9 4C8B5C24 		movq	56(%rsp), %r11
 9895      38
3247:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9896              		.loc 1 3247 0 discriminator 3
 9897 03be 48C1F812 		sarq	$18, %rax
 9898 03c2 25FF0300 		andl	$1023, %eax
 9898      00
 9899 03c7 410FB604 		movzbl	(%r14,%rax), %eax
 9899      06
 9900 03cc 88420D   		movb	%al, 13(%rdx)
3250:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9901              		.loc 1 3250 0 discriminator 3
 9902 03cf 498D043A 		leaq	(%r10,%rdi), %rax
3253:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9903              		.loc 1 3253 0 discriminator 3
 9904 03d3 4929FA   		subq	%rdi, %r10
3250:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9905              		.loc 1 3250 0 discriminator 3
 9906 03d6 48C1F812 		sarq	$18, %rax
 9907 03da 25FF0300 		andl	$1023, %eax
 9907      00
 9908 03df 410FB604 		movzbl	(%r14,%rax), %eax
 9908      06
 9909 03e4 884201   		movb	%al, 1(%rdx)
3253:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9910              		.loc 1 3253 0 discriminator 3
 9911 03e7 4C89D0   		movq	%r10, %rax
 9912 03ea 48C1F812 		sarq	$18, %rax
 9913 03ee 25FF0300 		andl	$1023, %eax
 9913      00
 9914 03f3 410FB604 		movzbl	(%r14,%rax), %eax
 9914      06
 9915 03f8 88420C   		movb	%al, 12(%rdx)
 9916              		.loc 1 3256 0 discriminator 3
 9917 03fb 498D041B 		leaq	(%r11,%rbx), %rax
 9918 03ff 48C1F812 		sarq	$18, %rax
 9919 0403 25FF0300 		andl	$1023, %eax
 9919      00
3257:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3258:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3259:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
 9920              		.loc 1 3259 0 discriminator 3
 9921 0408 4929DB   		subq	%rbx, %r11
3260:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3261:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3262:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
3263:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3264:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3265:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
3266:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3267:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3268:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
3269:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3270:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3271:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
3272:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3273:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3274:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp15,
3275:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3276:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3277:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp15,
3278:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3279:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3280:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp26 + tmp16,
3281:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3282:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3283:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp26 - tmp16,
3284:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3285:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3286:fltk-1.3.4-1/jpeg/jidctint.c **** 
3287:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 9922              		.loc 1 3287 0 discriminator 3
 9923 040b 4983C420 		addq	$32, %r12
 9924              	.LVL1515:
3256:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9925              		.loc 1 3256 0 discriminator 3
 9926 040f 410FB604 		movzbl	(%r14,%rax), %eax
 9926      06
 9927 0414 884202   		movb	%al, 2(%rdx)
 9928              	.LVL1516:
3259:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9929              		.loc 1 3259 0 discriminator 3
 9930 0417 4C89D8   		movq	%r11, %rax
3262:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9931              		.loc 1 3262 0 discriminator 3
 9932 041a 488B5C24 		movq	16(%rsp), %rbx
 9932      10
 9933              	.LVL1517:
3259:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9934              		.loc 1 3259 0 discriminator 3
 9935 041f 48C1F812 		sarq	$18, %rax
3268:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9936              		.loc 1 3268 0 discriminator 3
 9937 0423 4C8B7C24 		movq	64(%rsp), %r15
 9937      40
3280:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9938              		.loc 1 3280 0 discriminator 3
 9939 0428 488B7C24 		movq	32(%rsp), %rdi
 9939      20
 9940              	.LVL1518:
3259:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9941              		.loc 1 3259 0 discriminator 3
 9942 042d 25FF0300 		andl	$1023, %eax
 9942      00
 9943 0432 48834424 		addq	$8, 8(%rsp)
 9943      0808
 9944 0438 410FB604 		movzbl	(%r14,%rax), %eax
 9944      06
 9945 043d 88420B   		movb	%al, 11(%rdx)
3262:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9946              		.loc 1 3262 0 discriminator 3
 9947 0440 4889D8   		movq	%rbx, %rax
 9948 0443 4C01C0   		addq	%r8, %rax
 9949 0446 48C1F812 		sarq	$18, %rax
 9950 044a 25FF0300 		andl	$1023, %eax
 9950      00
 9951 044f 410FB604 		movzbl	(%r14,%rax), %eax
 9951      06
 9952 0454 884203   		movb	%al, 3(%rdx)
3265:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9953              		.loc 1 3265 0 discriminator 3
 9954 0457 4889D8   		movq	%rbx, %rax
3274:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9955              		.loc 1 3274 0 discriminator 3
 9956 045a 488B5C24 		movq	48(%rsp), %rbx
 9956      30
3265:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9957              		.loc 1 3265 0 discriminator 3
 9958 045f 4C29C0   		subq	%r8, %rax
 9959 0462 48C1F812 		sarq	$18, %rax
 9960 0466 25FF0300 		andl	$1023, %eax
 9960      00
 9961 046b 410FB604 		movzbl	(%r14,%rax), %eax
 9961      06
 9962 0470 88420A   		movb	%al, 10(%rdx)
3268:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9963              		.loc 1 3268 0 discriminator 3
 9964 0473 4B8D040F 		leaq	(%r15,%r9), %rax
 9965 0477 48C1F812 		sarq	$18, %rax
 9966 047b 25FF0300 		andl	$1023, %eax
 9966      00
 9967 0480 410FB604 		movzbl	(%r14,%rax), %eax
 9967      06
 9968 0485 884204   		movb	%al, 4(%rdx)
3271:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9969              		.loc 1 3271 0 discriminator 3
 9970 0488 4C89F8   		movq	%r15, %rax
 9971 048b 4C29C8   		subq	%r9, %rax
 9972 048e 48C1F812 		sarq	$18, %rax
 9973 0492 25FF0300 		andl	$1023, %eax
 9973      00
 9974 0497 410FB604 		movzbl	(%r14,%rax), %eax
 9974      06
 9975 049c 884209   		movb	%al, 9(%rdx)
3274:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9976              		.loc 1 3274 0 discriminator 3
 9977 049f 488D040B 		leaq	(%rbx,%rcx), %rax
 9978 04a3 48C1F812 		sarq	$18, %rax
 9979 04a7 25FF0300 		andl	$1023, %eax
 9979      00
 9980 04ac 410FB604 		movzbl	(%r14,%rax), %eax
 9980      06
 9981 04b1 884205   		movb	%al, 5(%rdx)
3277:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9982              		.loc 1 3277 0 discriminator 3
 9983 04b4 4889D8   		movq	%rbx, %rax
 9984 04b7 4829C8   		subq	%rcx, %rax
 9985 04ba 48C1F812 		sarq	$18, %rax
 9986 04be 25FF0300 		andl	$1023, %eax
 9986      00
 9987 04c3 410FB604 		movzbl	(%r14,%rax), %eax
 9987      06
 9988 04c8 884208   		movb	%al, 8(%rdx)
3280:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9989              		.loc 1 3280 0 discriminator 3
 9990 04cb 488D0437 		leaq	(%rdi,%rsi), %rax
 9991 04cf 48C1F812 		sarq	$18, %rax
 9992 04d3 25FF0300 		andl	$1023, %eax
 9992      00
 9993 04d8 410FB604 		movzbl	(%r14,%rax), %eax
 9993      06
 9994 04dd 884206   		movb	%al, 6(%rdx)
3283:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 9995              		.loc 1 3283 0 discriminator 3
 9996 04e0 4889F8   		movq	%rdi, %rax
 9997 04e3 4829F0   		subq	%rsi, %rax
 9998 04e6 48C1F812 		sarq	$18, %rax
 9999 04ea 25FF0300 		andl	$1023, %eax
 9999      00
3180:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10000              		.loc 1 3180 0 discriminator 3
 10001 04ef 4C3B6424 		cmpq	88(%rsp), %r12
 10001      58
3283:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10002              		.loc 1 3283 0 discriminator 3
 10003 04f4 410FB604 		movzbl	(%r14,%rax), %eax
 10003      06
 10004 04f9 884207   		movb	%al, 7(%rdx)
3180:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10005              		.loc 1 3180 0 discriminator 3
 10006 04fc 0F850EFD 		jne	.L165
 10006      FFFF
3288:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3289:fltk-1.3.4-1/jpeg/jidctint.c **** }
 10007              		.loc 1 3289 0
 10008 0502 488B8424 		movq	328(%rsp), %rax
 10008      48010000 
 10009 050a 64483304 		xorq	%fs:40, %rax
 10009      25280000 
 10009      00
 10010 0513 7512     		jne	.L170
 10011 0515 4881C458 		addq	$344, %rsp
 10011      010000
 10012              		.cfi_remember_state
 10013              		.cfi_def_cfa_offset 56
 10014 051c 5B       		popq	%rbx
 10015              		.cfi_def_cfa_offset 48
 10016 051d 5D       		popq	%rbp
 10017              		.cfi_def_cfa_offset 40
 10018 051e 415C     		popq	%r12
 10019              		.cfi_def_cfa_offset 32
 10020              	.LVL1519:
 10021 0520 415D     		popq	%r13
 10022              		.cfi_def_cfa_offset 24
 10023              	.LVL1520:
 10024 0522 415E     		popq	%r14
 10025              		.cfi_def_cfa_offset 16
 10026 0524 415F     		popq	%r15
 10027              		.cfi_def_cfa_offset 8
 10028 0526 C3       		ret
 10029              	.LVL1521:
 10030              	.L170:
 10031              		.cfi_restore_state
 10032 0527 E8000000 		call	__stack_chk_fail
 10032      00
 10033              	.LVL1522:
 10034              		.cfi_endproc
 10035              	.LFE78:
 10037              		.section	.text.unlikely.jpeg_idct_14x7
 10038              	.LCOLDE17:
 10039              		.section	.text.jpeg_idct_14x7
 10040              	.LHOTE17:
 10041              		.section	.text.unlikely.jpeg_idct_12x6,"ax",@progbits
 10042              	.LCOLDB18:
 10043              		.section	.text.jpeg_idct_12x6,"ax",@progbits
 10044              	.LHOTB18:
 10045              		.p2align 4,,15
 10046              		.globl	jpeg_idct_12x6
 10048              	jpeg_idct_12x6:
 10049              	.LFB79:
3290:fltk-1.3.4-1/jpeg/jidctint.c **** 
3291:fltk-1.3.4-1/jpeg/jidctint.c **** 
3292:fltk-1.3.4-1/jpeg/jidctint.c **** /*
3293:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
3294:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 12x6 output block.
3295:fltk-1.3.4-1/jpeg/jidctint.c ****  *
3296:fltk-1.3.4-1/jpeg/jidctint.c ****  * 6-point IDCT in pass 1 (columns), 12-point in pass 2 (rows).
3297:fltk-1.3.4-1/jpeg/jidctint.c ****  */
3298:fltk-1.3.4-1/jpeg/jidctint.c **** 
3299:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
3300:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_12x6 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
3301:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
3302:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
3303:fltk-1.3.4-1/jpeg/jidctint.c **** {
 10050              		.loc 1 3303 0
 10051              		.cfi_startproc
 10052              	.LVL1523:
 10053 0000 4157     		pushq	%r15
 10054              		.cfi_def_cfa_offset 16
 10055              		.cfi_offset 15, -16
 10056 0002 4156     		pushq	%r14
 10057              		.cfi_def_cfa_offset 24
 10058              		.cfi_offset 14, -24
 10059 0004 4155     		pushq	%r13
 10060              		.cfi_def_cfa_offset 32
 10061              		.cfi_offset 13, -32
 10062 0006 4154     		pushq	%r12
 10063              		.cfi_def_cfa_offset 40
 10064              		.cfi_offset 12, -40
 10065 0008 55       		pushq	%rbp
 10066              		.cfi_def_cfa_offset 48
 10067              		.cfi_offset 6, -48
 10068 0009 53       		pushq	%rbx
 10069              		.cfi_def_cfa_offset 56
 10070              		.cfi_offset 3, -56
 10071 000a 4881EC28 		subq	$296, %rsp
 10071      010000
 10072              		.cfi_def_cfa_offset 352
3304:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
3305:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
3306:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
3307:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
3308:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
3309:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
3310:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
3311:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
3312:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
3313:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*6];	/* buffers data between passes */
3314:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
3315:fltk-1.3.4-1/jpeg/jidctint.c **** 
3316:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
3317:fltk-1.3.4-1/jpeg/jidctint.c ****    * 6-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/12).
3318:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3319:fltk-1.3.4-1/jpeg/jidctint.c **** 
3320:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
3321:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 10073              		.loc 1 3321 0
 10074 0011 4C8B5E58 		movq	88(%rsi), %r11
3303:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 10075              		.loc 1 3303 0
 10076 0015 64488B04 		movq	%fs:40, %rax
 10076      25280000 
 10076      00
 10077 001e 48898424 		movq	%rax, 280(%rsp)
 10077      18010000 
 10078 0026 31C0     		xorl	%eax, %eax
3311:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 10079              		.loc 1 3311 0
 10080 0028 488B87B8 		movq	440(%rdi), %rax
 10080      010000
3322:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 10081              		.loc 1 3322 0
 10082 002f 4C8D5424 		leaq	80(%rsp), %r10
 10082      50
3323:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 10083              		.loc 1 3323 0
 10084 0034 4C8D7424 		leaq	112(%rsp), %r14
 10084      70
3303:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 10085              		.loc 1 3303 0
 10086 0039 48894C24 		movq	%rcx, 8(%rsp)
 10086      08
 10087 003e 44894424 		movl	%r8d, 16(%rsp)
 10087      10
3311:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 10088              		.loc 1 3311 0
 10089 0043 4C8DB880 		leaq	128(%rax), %r15
 10089      000000
 10090              	.LVL1524:
 10091 004a 660F1F44 		.p2align 4,,10
 10091      0000
 10092              		.p2align 3
 10093              	.L172:
3324:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3325:fltk-1.3.4-1/jpeg/jidctint.c **** 
3326:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
3327:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
3328:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3329:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += ONE << (CONST_BITS-PASS1_BITS-1);
3330:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
3331:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(tmp12, FIX(0.707106781));   /* c4 */
 10094              		.loc 1 3331 0 discriminator 3
 10095 0050 440FBF42 		movswl	64(%rdx), %r8d
 10095      40
3326:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 10096              		.loc 1 3326 0 discriminator 3
 10097 0055 0FBF0A   		movswl	(%rdx), %ecx
3323:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10098              		.loc 1 3323 0 discriminator 3
 10099 0058 4983C304 		addq	$4, %r11
 10100              	.LVL1525:
 10101              		.loc 1 3331 0 discriminator 3
 10102 005c 450FAF43 		imull	124(%r11), %r8d
 10102      7C
3332:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp20;
3333:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = RIGHT_SHIFT(tmp10 - tmp20 - tmp20, CONST_BITS-PASS1_BITS);
3334:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
3335:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp20, FIX(1.224744871));   /* c2 */
 10103              		.loc 1 3335 0 discriminator 3
 10104 0061 0FBF4220 		movswl	32(%rdx), %eax
3336:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp11 + tmp10;
3337:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 - tmp10;
3338:fltk-1.3.4-1/jpeg/jidctint.c **** 
3339:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3340:fltk-1.3.4-1/jpeg/jidctint.c **** 
3341:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
3342:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
3343:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 10105              		.loc 1 3343 0 discriminator 3
 10106 0065 440FBF4A 		movswl	80(%rdx), %r9d
 10106      50
3323:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10107              		.loc 1 3323 0 discriminator 3
 10108 006a 4883C202 		addq	$2, %rdx
 10109              	.LVL1526:
3326:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 10110              		.loc 1 3326 0 discriminator 3
 10111 006e 410FAF4B 		imull	-4(%r11), %ecx
 10111      FC
3335:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp11 + tmp10;
 10112              		.loc 1 3335 0 discriminator 3
 10113 0073 410FAF43 		imull	60(%r11), %eax
 10113      3C
 10114              		.loc 1 3343 0 discriminator 3
 10115 0078 450FAF8B 		imull	156(%r11), %r9d
 10115      9C000000 
3342:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 10116              		.loc 1 3342 0 discriminator 3
 10117 0080 0FBF5A2E 		movswl	46(%rdx), %ebx
3331:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp20;
 10118              		.loc 1 3331 0 discriminator 3
 10119 0084 4D63C0   		movslq	%r8d, %r8
3342:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 10120              		.loc 1 3342 0 discriminator 3
 10121 0087 410FAF5B 		imull	92(%r11), %ebx
 10121      5C
3331:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp20;
 10122              		.loc 1 3331 0 discriminator 3
 10123 008c 4D69C0A1 		imulq	$5793, %r8, %r8
 10123      160000
3326:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 10124              		.loc 1 3326 0 discriminator 3
 10125 0093 4863C9   		movslq	%ecx, %rcx
 10126              	.LVL1527:
3335:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp11 + tmp10;
 10127              		.loc 1 3335 0 discriminator 3
 10128 0096 4898     		cltq
3327:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 10129              		.loc 1 3327 0 discriminator 3
 10130 0098 48C1E10D 		salq	$13, %rcx
 10131              	.LVL1528:
3329:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 10132              		.loc 1 3329 0 discriminator 3
 10133 009c 4881C100 		addq	$1024, %rcx
 10133      040000
 10134              	.LVL1529:
 10135              		.loc 1 3343 0 discriminator 3
 10136 00a3 4D63C9   		movslq	%r9d, %r9
3335:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp11 + tmp10;
 10137              		.loc 1 3335 0 discriminator 3
 10138 00a6 4869C031 		imulq	$10033, %rax, %rax
 10138      270000
3332:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = RIGHT_SHIFT(tmp10 - tmp20 - tmp20, CONST_BITS-PASS1_BITS);
 10139              		.loc 1 3332 0 discriminator 3
 10140 00ad 4A8D3401 		leaq	(%rcx,%r8), %rsi
 10141              	.LVL1530:
3344:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z3, FIX(0.366025404)); /* c5 */
3345:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + ((z1 + z2) << CONST_BITS);
3346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
3347:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = (z1 - z2 - z3) << PASS1_BITS;
3348:fltk-1.3.4-1/jpeg/jidctint.c **** 
3349:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3350:fltk-1.3.4-1/jpeg/jidctint.c **** 
3351:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0] = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
3352:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
3353:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) (tmp21 + tmp11);
 10142              		.loc 1 3353 0 discriminator 3
 10143 00b1 4C29C1   		subq	%r8, %rcx
 10144              	.LVL1531:
3342:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 10145              		.loc 1 3342 0 discriminator 3
 10146 00b4 4863DB   		movslq	%ebx, %rbx
 10147              		.loc 1 3353 0 discriminator 3
 10148 00b7 4C29C1   		subq	%r8, %rcx
 10149 00ba 48C1F90B 		sarq	$11, %rcx
3336:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 - tmp10;
 10150              		.loc 1 3336 0 discriminator 3
 10151 00be 488D2C06 		leaq	(%rsi,%rax), %rbp
 10152              	.LVL1532:
3337:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10153              		.loc 1 3337 0 discriminator 3
 10154 00c2 4829C6   		subq	%rax, %rsi
 10155              	.LVL1533:
3341:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 10156              		.loc 1 3341 0 discriminator 3
 10157 00c5 0FBF420E 		movswl	14(%rdx), %eax
 10158              	.LVL1534:
 10159 00c9 410FAF43 		imull	28(%r11), %eax
 10159      1C
 10160 00ce 4898     		cltq
 10161              	.LVL1535:
3344:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + ((z1 + z2) << CONST_BITS);
 10162              		.loc 1 3344 0 discriminator 3
 10163 00d0 4A8D3C08 		leaq	(%rax,%r9), %rdi
3345:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 10164              		.loc 1 3345 0 discriminator 3
 10165 00d4 4C8D2418 		leaq	(%rax,%rbx), %r12
 10166              		.loc 1 3353 0 discriminator 3
 10167 00d8 4829D8   		subq	%rbx, %rax
 10168              	.LVL1536:
 10169 00db 4C29C8   		subq	%r9, %rax
3344:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + ((z1 + z2) << CONST_BITS);
 10170              		.loc 1 3344 0 discriminator 3
 10171 00de 4C69EFB6 		imulq	$2998, %rdi, %r13
 10171      0B0000
 10172              	.LVL1537:
3346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = (z1 - z2 - z3) << PASS1_BITS;
 10173              		.loc 1 3346 0 discriminator 3
 10174 00e5 4C89CF   		movq	%r9, %rdi
3345:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 10175              		.loc 1 3345 0 discriminator 3
 10176 00e8 49C1E40D 		salq	$13, %r12
3346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = (z1 - z2 - z3) << PASS1_BITS;
 10177              		.loc 1 3346 0 discriminator 3
 10178 00ec 4829DF   		subq	%rbx, %rdi
 10179              		.loc 1 3353 0 discriminator 3
 10180 00ef 48C1E002 		salq	$2, %rax
3346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = (z1 - z2 - z3) << PASS1_BITS;
 10181              		.loc 1 3346 0 discriminator 3
 10182 00f3 48C1E70D 		salq	$13, %rdi
 10183              		.loc 1 3353 0 discriminator 3
 10184 00f7 448D0408 		leal	(%rax,%rcx), %r8d
 10185              	.LVL1538:
3354:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) (tmp21 - tmp11);
 10186              		.loc 1 3354 0 discriminator 3
 10187 00fb 29C1     		subl	%eax, %ecx
 10188 00fd 41898A80 		movl	%ecx, 128(%r10)
 10188      000000
3346:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = (z1 - z2 - z3) << PASS1_BITS;
 10189              		.loc 1 3346 0 discriminator 3
 10190 0104 4C01EF   		addq	%r13, %rdi
3345:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 10191              		.loc 1 3345 0 discriminator 3
 10192 0107 4D01EC   		addq	%r13, %r12
 10193              	.LVL1539:
3353:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) (tmp21 - tmp11);
 10194              		.loc 1 3353 0 discriminator 3
 10195 010a 45894220 		movl	%r8d, 32(%r10)
3351:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 10196              		.loc 1 3351 0 discriminator 3
 10197 010e 4E8D6C25 		leaq	0(%rbp,%r12), %r13
 10197      00
3355:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 10198              		.loc 1 3355 0 discriminator 3
 10199 0113 488D043E 		leaq	(%rsi,%rdi), %rax
3352:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) (tmp21 + tmp11);
 10200              		.loc 1 3352 0 discriminator 3
 10201 0117 4C29E5   		subq	%r12, %rbp
 10202              	.LVL1540:
3356:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 10203              		.loc 1 3356 0 discriminator 3
 10204 011a 4829FE   		subq	%rdi, %rsi
 10205              	.LVL1541:
3352:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) (tmp21 + tmp11);
 10206              		.loc 1 3352 0 discriminator 3
 10207 011d 48C1FD0B 		sarq	$11, %rbp
3351:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 10208              		.loc 1 3351 0 discriminator 3
 10209 0121 49C1FD0B 		sarq	$11, %r13
3355:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 10210              		.loc 1 3355 0 discriminator 3
 10211 0125 48C1F80B 		sarq	$11, %rax
 10212              		.loc 1 3356 0 discriminator 3
 10213 0129 48C1FE0B 		sarq	$11, %rsi
3351:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 10214              		.loc 1 3351 0 discriminator 3
 10215 012d 45892A   		movl	%r13d, (%r10)
3352:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) (tmp21 + tmp11);
 10216              		.loc 1 3352 0 discriminator 3
 10217 0130 4189AAA0 		movl	%ebp, 160(%r10)
 10217      000000
3323:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10218              		.loc 1 3323 0 discriminator 3
 10219 0137 4983C204 		addq	$4, %r10
 10220              	.LVL1542:
3355:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 10221              		.loc 1 3355 0 discriminator 3
 10222 013b 4189423C 		movl	%eax, 60(%r10)
 10223              		.loc 1 3356 0 discriminator 3
 10224 013f 4189725C 		movl	%esi, 92(%r10)
 10225              	.LVL1543:
3323:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10226              		.loc 1 3323 0 discriminator 3
 10227 0143 4D39F2   		cmpq	%r14, %r10
 10228 0146 0F8504FF 		jne	.L172
 10228      FFFF
 10229 014c 8B442410 		movl	16(%rsp), %eax
3323:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10230              		.loc 1 3323 0 is_stmt 0
 10231 0150 488D5C24 		leaq	80(%rsp), %rbx
 10231      50
 10232              	.LVL1544:
 10233 0155 48894424 		movq	%rax, 64(%rsp)
 10233      40
3357:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3358:fltk-1.3.4-1/jpeg/jidctint.c **** 
3359:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 6 rows from work array, store into output array.
3360:fltk-1.3.4-1/jpeg/jidctint.c ****    * 12-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/24).
3361:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3362:fltk-1.3.4-1/jpeg/jidctint.c **** 
3363:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3364:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
 10234              		.loc 1 3364 0 is_stmt 1
 10235 015a 488D8424 		leaq	272(%rsp), %rax
 10235      10010000 
 10236 0162 48894424 		movq	%rax, 72(%rsp)
 10236      48
 10237              	.LVL1545:
 10238 0167 660F1F84 		.p2align 4,,10
 10238      00000000 
 10238      00
 10239              		.p2align 3
 10240              	.L173:
3365:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10241              		.loc 1 3365 0 discriminator 3
 10242 0170 488B4424 		movq	8(%rsp), %rax
 10242      08
3366:fltk-1.3.4-1/jpeg/jidctint.c **** 
3367:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3368:fltk-1.3.4-1/jpeg/jidctint.c **** 
3369:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3370:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
3371:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
3372:fltk-1.3.4-1/jpeg/jidctint.c **** 
3373:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 10243              		.loc 1 3373 0 discriminator 3
 10244 0175 48634B10 		movslq	16(%rbx), %rcx
3365:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10245              		.loc 1 3365 0 discriminator 3
 10246 0179 488B5424 		movq	64(%rsp), %rdx
 10246      40
3374:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
3375:fltk-1.3.4-1/jpeg/jidctint.c **** 
3376:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z4;
3377:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
3378:fltk-1.3.4-1/jpeg/jidctint.c **** 
3379:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
 10247              		.loc 1 3379 0 discriminator 3
 10248 017e 4C634308 		movslq	8(%rbx), %r8
3380:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z1, FIX(1.366025404)); /* c2 */
3381:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
3382:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 10249              		.loc 1 3382 0 discriminator 3
 10250 0182 48637B18 		movslq	24(%rbx), %rdi
3383:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
3384:fltk-1.3.4-1/jpeg/jidctint.c **** 
3385:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z2;
3386:fltk-1.3.4-1/jpeg/jidctint.c **** 
3387:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = z3 + tmp12;
3388:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
3389:fltk-1.3.4-1/jpeg/jidctint.c **** 
3390:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 + z2;
3391:fltk-1.3.4-1/jpeg/jidctint.c **** 
3392:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
3393:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
3394:fltk-1.3.4-1/jpeg/jidctint.c **** 
3395:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 - z1 - z2;
3396:fltk-1.3.4-1/jpeg/jidctint.c **** 
3397:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 + tmp12;
3398:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
3399:fltk-1.3.4-1/jpeg/jidctint.c **** 
3400:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3401:fltk-1.3.4-1/jpeg/jidctint.c **** 
3402:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
3403:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
3404:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 10251              		.loc 1 3404 0 discriminator 3
 10252 0186 4C635B14 		movslq	20(%rbx), %r11
3365:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10253              		.loc 1 3365 0 discriminator 3
 10254 018a 480310   		addq	(%rax), %rdx
 10255              	.LVL1546:
3370:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 10256              		.loc 1 3370 0 discriminator 3
 10257 018d 486303   		movslq	(%rbx), %rax
3374:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10258              		.loc 1 3374 0 discriminator 3
 10259 0190 4869C931 		imulq	$10033, %rcx, %rcx
 10259      270000
3383:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10260              		.loc 1 3383 0 discriminator 3
 10261 0197 48C1E70D 		salq	$13, %rdi
3370:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 10262              		.loc 1 3370 0 discriminator 3
 10263 019b 4883C010 		addq	$16, %rax
 10264              	.LVL1547:
3371:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10265              		.loc 1 3371 0 discriminator 3
 10266 019f 48C1E00D 		salq	$13, %rax
 10267              	.LVL1548:
3377:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10268              		.loc 1 3377 0 discriminator 3
 10269 01a3 4889C6   		movq	%rax, %rsi
3376:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
 10270              		.loc 1 3376 0 discriminator 3
 10271 01a6 4C8D0C08 		leaq	(%rax,%rcx), %r9
 10272              	.LVL1549:
3377:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10273              		.loc 1 3377 0 discriminator 3
 10274 01aa 4829CE   		subq	%rcx, %rsi
 10275              	.LVL1550:
3380:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 10276              		.loc 1 3380 0 discriminator 3
 10277 01ad 4969C8B6 		imulq	$11190, %r8, %rcx
 10277      2B0000
 10278              	.LVL1551:
3381:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[6];
 10279              		.loc 1 3381 0 discriminator 3
 10280 01b4 49C1E00D 		salq	$13, %r8
 10281              	.LVL1552:
3385:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10282              		.loc 1 3385 0 discriminator 3
 10283 01b8 4D89C2   		movq	%r8, %r10
 10284 01bb 4929FA   		subq	%rdi, %r10
 10285              	.LVL1553:
3387:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 10286              		.loc 1 3387 0 discriminator 3
 10287 01be 4E8D3410 		leaq	(%rax,%r10), %r14
3388:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10288              		.loc 1 3388 0 discriminator 3
 10289 01c2 4C29D0   		subq	%r10, %rax
 10290              	.LVL1554:
 10291 01c5 48894424 		movq	%rax, 24(%rsp)
 10291      18
 10292              	.LVL1555:
3390:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10293              		.loc 1 3390 0 discriminator 3
 10294 01ca 488D0439 		leaq	(%rcx,%rdi), %rax
 10295              	.LVL1556:
3395:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10296              		.loc 1 3395 0 discriminator 3
 10297 01ce 4C29C1   		subq	%r8, %rcx
 10298              	.LVL1557:
3387:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 10299              		.loc 1 3387 0 discriminator 3
 10300 01d1 4C897424 		movq	%r14, 16(%rsp)
 10300      10
 10301              	.LVL1558:
3392:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 10302              		.loc 1 3392 0 discriminator 3
 10303 01d6 4D8D1401 		leaq	(%r9,%rax), %r10
3393:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10304              		.loc 1 3393 0 discriminator 3
 10305 01da 4929C1   		subq	%rax, %r9
 10306              	.LVL1559:
3395:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10307              		.loc 1 3395 0 discriminator 3
 10308 01dd 4889C8   		movq	%rcx, %rax
 10309              	.LVL1560:
 10310 01e0 4829F8   		subq	%rdi, %rax
 10311              	.LVL1561:
3403:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 10312              		.loc 1 3403 0 discriminator 3
 10313 01e3 48634B0C 		movslq	12(%rbx), %rcx
3393:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10314              		.loc 1 3393 0 discriminator 3
 10315 01e7 4C894C24 		movq	%r9, 40(%rsp)
 10315      28
 10316              	.LVL1562:
3397:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
 10317              		.loc 1 3397 0 discriminator 3
 10318 01ec 4C8D3406 		leaq	(%rsi,%rax), %r14
 10319              	.LVL1563:
3398:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10320              		.loc 1 3398 0 discriminator 3
 10321 01f0 4829C6   		subq	%rax, %rsi
 10322              	.LVL1564:
3402:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 10323              		.loc 1 3402 0 discriminator 3
 10324 01f3 48634304 		movslq	4(%rbx), %rax
 10325              	.LVL1565:
3392:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 10326              		.loc 1 3392 0 discriminator 3
 10327 01f7 4C895424 		movq	%r10, 32(%rsp)
 10327      20
 10328              	.LVL1566:
3405:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 10329              		.loc 1 3405 0 discriminator 3
 10330 01fc 4C63531C 		movslq	28(%rbx), %r10
 10331              	.LVL1567:
3398:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10332              		.loc 1 3398 0 discriminator 3
 10333 0200 48897424 		movq	%rsi, 48(%rsp)
 10333      30
 10334              	.LVL1568:
3406:fltk-1.3.4-1/jpeg/jidctint.c **** 
3407:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z2, FIX(1.306562965));                  /* c3 */
 10335              		.loc 1 3407 0 discriminator 3
 10336 0205 4C69E9CF 		imulq	$10703, %rcx, %r13
 10336      290000
 10337              	.LVL1569:
3408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
3409:fltk-1.3.4-1/jpeg/jidctint.c **** 
3410:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 10338              		.loc 1 3410 0 discriminator 3
 10339 020c 4A8D3C18 		leaq	(%rax,%r11), %rdi
 10340              	.LVL1570:
3411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
3412:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
3413:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 10341              		.loc 1 3413 0 discriminator 3
 10342 0210 4C8D04C0 		leaq	(%rax,%rax,8), %r8
 10343              	.LVL1571:
3408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
 10344              		.loc 1 3408 0 discriminator 3
 10345 0214 4C69E1AF 		imulq	$-4433, %rcx, %r12
 10345      EEFFFF
 10346              	.LVL1572:
3411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
 10347              		.loc 1 3411 0 discriminator 3
 10348 021b 498D343A 		leaq	(%r10,%rdi), %rsi
 10349              		.loc 1 3413 0 discriminator 3
 10350 021f 4D89C1   		movq	%r8, %r9
3412:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 10351              		.loc 1 3412 0 discriminator 3
 10352 0222 4869FF5B 		imulq	$2139, %rdi, %rdi
 10352      080000
 10353              	.LVL1573:
 10354              		.loc 1 3413 0 discriminator 3
 10355 0229 49C1E108 		salq	$8, %r9
 10356 022d 4D29C1   		subq	%r8, %r9
3411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
 10357              		.loc 1 3411 0 discriminator 3
 10358 0230 4869F68D 		imulq	$7053, %rsi, %rsi
 10358      1B0000
 10359              	.LVL1574:
3412:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 10360              		.loc 1 3412 0 discriminator 3
 10361 0237 4801F7   		addq	%rsi, %rdi
 10362              	.LVL1575:
 10363              		.loc 1 3413 0 discriminator 3
 10364 023a 498D6C3D 		leaq	0(%r13,%rdi), %rbp
 10364      00
 10365 023f 4901E9   		addq	%rbp, %r9
 10366              	.LVL1576:
3414:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 + z4, - FIX(1.045510580));           /* -(c7+c11) */
 10367              		.loc 1 3414 0 discriminator 3
 10368 0242 4B8D2C13 		leaq	(%r11,%r10), %rbp
 10369 0246 4869ED8B 		imulq	$-8565, %rbp, %rbp
 10369      DEFFFF
 10370              	.LVL1577:
3415:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 + tmp14 - MULTIPLY(z3, FIX(1.478575242)); /* c1+c5-c7-c11 */
 10371              		.loc 1 3415 0 discriminator 3
 10372 024d 4D8D042C 		leaq	(%r12,%rbp), %r8
 10373 0251 4C894424 		movq	%r8, 56(%rsp)
 10373      38
 10374 0256 4D69C3B0 		imulq	$-12112, %r11, %r8
 10374      D0FFFF
 10375 025d 4C034424 		addq	56(%rsp), %r8
 10375      38
 10376 0262 4C01C7   		addq	%r8, %rdi
 10377              	.LVL1578:
3416:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 10378              		.loc 1 3416 0 discriminator 3
 10379 0265 4989F0   		movq	%rsi, %r8
 10380 0268 4D29E8   		subq	%r13, %r8
 10381 026b 4D69EAC6 		imulq	$12998, %r10, %r13
 10381      320000
 10382              	.LVL1579:
 10383 0272 4D01C5   		addq	%r8, %r13
3417:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 10384              		.loc 1 3417 0 discriminator 3
 10385 0275 4C69C05C 		imulq	$-5540, %rax, %r8
 10385      EAFFFF
3416:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 10386              		.loc 1 3416 0 discriminator 3
 10387 027c 4C01ED   		addq	%r13, %rbp
 10388              	.LVL1580:
 10389              		.loc 1 3417 0 discriminator 3
 10390 027f 4D01C4   		addq	%r8, %r12
 10391              	.LVL1581:
 10392 0282 4D69C28C 		imulq	$-16244, %r10, %r8
 10392      C0FFFF
3418:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
3419:fltk-1.3.4-1/jpeg/jidctint.c **** 
3420:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= z4;
 10393              		.loc 1 3420 0 discriminator 3
 10394 0289 4C29D0   		subq	%r10, %rax
 10395              	.LVL1582:
3421:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= z3;
 10396              		.loc 1 3421 0 discriminator 3
 10397 028c 4C29D9   		subq	%r11, %rcx
 10398              	.LVL1583:
3422:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX_0_541196100);                 /* c9 */
3423:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
3424:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
3425:fltk-1.3.4-1/jpeg/jidctint.c **** 
3426:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3427:fltk-1.3.4-1/jpeg/jidctint.c **** 
3428:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0]  = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
 10399              		.loc 1 3428 0 discriminator 3
 10400 028f 4C8B5424 		movq	32(%rsp), %r10
 10400      20
 10401              	.LVL1584:
3429:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3430:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3431:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[11] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
3432:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3433:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3434:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1]  = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 10402              		.loc 1 3434 0 discriminator 3
 10403 0294 4C8B5C24 		movq	16(%rsp), %r11
 10403      10
 10404              	.LVL1585:
3417:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 10405              		.loc 1 3417 0 discriminator 3
 10406 0299 4D01C4   		addq	%r8, %r12
 10407 029c 4901F4   		addq	%rsi, %r12
 10408              	.LVL1586:
3422:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX_0_541196100);                 /* c9 */
 10409              		.loc 1 3422 0 discriminator 3
 10410 029f 488D3408 		leaq	(%rax,%rcx), %rsi
3424:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10411              		.loc 1 3424 0 discriminator 3
 10412 02a3 4869C9DF 		imulq	$-15137, %rcx, %rcx
 10412      C4FFFF
 10413              	.LVL1587:
3422:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
 10414              		.loc 1 3422 0 discriminator 3
 10415 02aa 4869F651 		imulq	$4433, %rsi, %rsi
 10415      110000
 10416              	.LVL1588:
3423:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
 10417              		.loc 1 3423 0 discriminator 3
 10418 02b1 4869C07E 		imulq	$6270, %rax, %rax
 10418      180000
 10419              	.LVL1589:
 10420 02b8 4801F0   		addq	%rsi, %rax
 10421              	.LVL1590:
3424:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10422              		.loc 1 3424 0 discriminator 3
 10423 02bb 4801CE   		addq	%rcx, %rsi
 10424              	.LVL1591:
3428:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10425              		.loc 1 3428 0 discriminator 3
 10426 02be 4B8D0C0A 		leaq	(%r10,%r9), %rcx
3431:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10427              		.loc 1 3431 0 discriminator 3
 10428 02c2 4D29CA   		subq	%r9, %r10
3428:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10429              		.loc 1 3428 0 discriminator 3
 10430 02c5 48C1F912 		sarq	$18, %rcx
 10431 02c9 81E1FF03 		andl	$1023, %ecx
 10431      0000
 10432 02cf 410FB60C 		movzbl	(%r15,%rcx), %ecx
 10432      0F
 10433 02d4 880A     		movb	%cl, (%rdx)
3431:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10434              		.loc 1 3431 0 discriminator 3
 10435 02d6 4C89D1   		movq	%r10, %rcx
 10436 02d9 48C1F912 		sarq	$18, %rcx
 10437 02dd 81E1FF03 		andl	$1023, %ecx
 10437      0000
 10438 02e3 410FB60C 		movzbl	(%r15,%rcx), %ecx
 10438      0F
 10439 02e8 884A0B   		movb	%cl, 11(%rdx)
 10440              		.loc 1 3434 0 discriminator 3
 10441 02eb 498D0C03 		leaq	(%r11,%rax), %rcx
3435:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3436:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3437:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[10] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
 10442              		.loc 1 3437 0 discriminator 3
 10443 02ef 4929C3   		subq	%rax, %r11
 10444 02f2 4C89D8   		movq	%r11, %rax
 10445              	.LVL1592:
3434:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10446              		.loc 1 3434 0 discriminator 3
 10447 02f5 48C1F912 		sarq	$18, %rcx
 10448              		.loc 1 3437 0 discriminator 3
 10449 02f9 48C1F812 		sarq	$18, %rax
3434:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10450              		.loc 1 3434 0 discriminator 3
 10451 02fd 81E1FF03 		andl	$1023, %ecx
 10451      0000
 10452              		.loc 1 3437 0 discriminator 3
 10453 0303 25FF0300 		andl	$1023, %eax
 10453      00
3434:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10454              		.loc 1 3434 0 discriminator 3
 10455 0308 410FB60C 		movzbl	(%r15,%rcx), %ecx
 10455      0F
 10456 030d 884A01   		movb	%cl, 1(%rdx)
 10457              		.loc 1 3437 0 discriminator 3
 10458 0310 410FB604 		movzbl	(%r15,%rax), %eax
 10458      07
 10459 0315 88420A   		movb	%al, 10(%rdx)
3438:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3439:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3440:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2]  = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 10460              		.loc 1 3440 0 discriminator 3
 10461 0318 498D043E 		leaq	(%r14,%rdi), %rax
3441:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3442:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3443:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9]  = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
 10462              		.loc 1 3443 0 discriminator 3
 10463 031c 4929FE   		subq	%rdi, %r14
 10464              	.LVL1593:
3440:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10465              		.loc 1 3440 0 discriminator 3
 10466 031f 48C1F812 		sarq	$18, %rax
 10467 0323 25FF0300 		andl	$1023, %eax
 10467      00
 10468 0328 410FB604 		movzbl	(%r15,%rax), %eax
 10468      07
 10469 032d 884202   		movb	%al, 2(%rdx)
 10470              		.loc 1 3443 0 discriminator 3
 10471 0330 4C89F0   		movq	%r14, %rax
 10472 0333 48C1F812 		sarq	$18, %rax
 10473 0337 25FF0300 		andl	$1023, %eax
 10473      00
 10474 033c 410FB604 		movzbl	(%r15,%rax), %eax
 10474      07
 10475 0341 884209   		movb	%al, 9(%rdx)
3444:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3445:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3446:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3]  = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
 10476              		.loc 1 3446 0 discriminator 3
 10477 0344 488B4C24 		movq	48(%rsp), %rcx
 10477      30
3447:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3448:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3449:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8]  = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
3450:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3451:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3452:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4]  = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
 10478              		.loc 1 3452 0 discriminator 3
 10479 0349 488B7C24 		movq	24(%rsp), %rdi
 10479      18
 10480              	.LVL1594:
3453:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3454:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3455:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7]  = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
3456:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3457:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3458:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5]  = range_limit[(int) RIGHT_SHIFT(tmp25 + tmp15,
 10481              		.loc 1 3458 0 discriminator 3
 10482 034e 4C8B4C24 		movq	40(%rsp), %r9
 10482      28
 10483              	.LVL1595:
3446:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10484              		.loc 1 3446 0 discriminator 3
 10485 0353 488D0429 		leaq	(%rcx,%rbp), %rax
3449:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10486              		.loc 1 3449 0 discriminator 3
 10487 0357 4829E9   		subq	%rbp, %rcx
3446:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10488              		.loc 1 3446 0 discriminator 3
 10489 035a 48C1F812 		sarq	$18, %rax
 10490 035e 25FF0300 		andl	$1023, %eax
 10490      00
 10491 0363 410FB604 		movzbl	(%r15,%rax), %eax
 10491      07
 10492 0368 884203   		movb	%al, 3(%rdx)
3449:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10493              		.loc 1 3449 0 discriminator 3
 10494 036b 4889C8   		movq	%rcx, %rax
 10495 036e 48C1F812 		sarq	$18, %rax
 10496 0372 25FF0300 		andl	$1023, %eax
 10496      00
 10497 0377 410FB604 		movzbl	(%r15,%rax), %eax
 10497      07
 10498 037c 884208   		movb	%al, 8(%rdx)
3452:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10499              		.loc 1 3452 0 discriminator 3
 10500 037f 4889F8   		movq	%rdi, %rax
 10501 0382 4801F0   		addq	%rsi, %rax
 10502 0385 48C1F812 		sarq	$18, %rax
 10503 0389 25FF0300 		andl	$1023, %eax
 10503      00
3459:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3460:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3461:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6]  = range_limit[(int) RIGHT_SHIFT(tmp25 - tmp15,
3462:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
3463:fltk-1.3.4-1/jpeg/jidctint.c **** 			     & RANGE_MASK];
3464:fltk-1.3.4-1/jpeg/jidctint.c **** 
3465:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 10504              		.loc 1 3465 0 discriminator 3
 10505 038e 4883C320 		addq	$32, %rbx
 10506              	.LVL1596:
 10507 0392 48834424 		addq	$8, 8(%rsp)
 10507      0808
3452:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10508              		.loc 1 3452 0 discriminator 3
 10509 0398 410FB604 		movzbl	(%r15,%rax), %eax
 10509      07
 10510 039d 884204   		movb	%al, 4(%rdx)
3455:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10511              		.loc 1 3455 0 discriminator 3
 10512 03a0 4889F8   		movq	%rdi, %rax
 10513 03a3 4829F0   		subq	%rsi, %rax
 10514 03a6 48C1F812 		sarq	$18, %rax
 10515 03aa 25FF0300 		andl	$1023, %eax
 10515      00
 10516 03af 410FB604 		movzbl	(%r15,%rax), %eax
 10516      07
 10517 03b4 884207   		movb	%al, 7(%rdx)
3458:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10518              		.loc 1 3458 0 discriminator 3
 10519 03b7 4B8D0421 		leaq	(%r9,%r12), %rax
 10520 03bb 48C1F812 		sarq	$18, %rax
 10521 03bf 25FF0300 		andl	$1023, %eax
 10521      00
 10522 03c4 410FB604 		movzbl	(%r15,%rax), %eax
 10522      07
 10523 03c9 884205   		movb	%al, 5(%rdx)
3461:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10524              		.loc 1 3461 0 discriminator 3
 10525 03cc 4C89C8   		movq	%r9, %rax
 10526 03cf 4C29E0   		subq	%r12, %rax
 10527 03d2 48C1F812 		sarq	$18, %rax
 10528 03d6 25FF0300 		andl	$1023, %eax
 10528      00
3364:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10529              		.loc 1 3364 0 discriminator 3
 10530 03db 483B5C24 		cmpq	72(%rsp), %rbx
 10530      48
3461:fltk-1.3.4-1/jpeg/jidctint.c **** 					       CONST_BITS+PASS1_BITS+3)
 10531              		.loc 1 3461 0 discriminator 3
 10532 03e0 410FB604 		movzbl	(%r15,%rax), %eax
 10532      07
 10533 03e5 884206   		movb	%al, 6(%rdx)
3364:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10534              		.loc 1 3364 0 discriminator 3
 10535 03e8 0F8582FD 		jne	.L173
 10535      FFFF
3466:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3467:fltk-1.3.4-1/jpeg/jidctint.c **** }
 10536              		.loc 1 3467 0
 10537 03ee 488B8424 		movq	280(%rsp), %rax
 10537      18010000 
 10538 03f6 64483304 		xorq	%fs:40, %rax
 10538      25280000 
 10538      00
 10539 03ff 7512     		jne	.L178
 10540 0401 4881C428 		addq	$296, %rsp
 10540      010000
 10541              		.cfi_remember_state
 10542              		.cfi_def_cfa_offset 56
 10543 0408 5B       		popq	%rbx
 10544              		.cfi_def_cfa_offset 48
 10545              	.LVL1597:
 10546 0409 5D       		popq	%rbp
 10547              		.cfi_def_cfa_offset 40
 10548              	.LVL1598:
 10549 040a 415C     		popq	%r12
 10550              		.cfi_def_cfa_offset 32
 10551              	.LVL1599:
 10552 040c 415D     		popq	%r13
 10553              		.cfi_def_cfa_offset 24
 10554 040e 415E     		popq	%r14
 10555              		.cfi_def_cfa_offset 16
 10556 0410 415F     		popq	%r15
 10557              		.cfi_def_cfa_offset 8
 10558              	.LVL1600:
 10559 0412 C3       		ret
 10560              	.LVL1601:
 10561              	.L178:
 10562              		.cfi_restore_state
 10563 0413 E8000000 		call	__stack_chk_fail
 10563      00
 10564              	.LVL1602:
 10565              		.cfi_endproc
 10566              	.LFE79:
 10568              		.section	.text.unlikely.jpeg_idct_12x6
 10569              	.LCOLDE18:
 10570              		.section	.text.jpeg_idct_12x6
 10571              	.LHOTE18:
 10572              		.section	.text.unlikely.jpeg_idct_10x5,"ax",@progbits
 10573              	.LCOLDB19:
 10574              		.section	.text.jpeg_idct_10x5,"ax",@progbits
 10575              	.LHOTB19:
 10576              		.p2align 4,,15
 10577              		.globl	jpeg_idct_10x5
 10579              	jpeg_idct_10x5:
 10580              	.LFB80:
3468:fltk-1.3.4-1/jpeg/jidctint.c **** 
3469:fltk-1.3.4-1/jpeg/jidctint.c **** 
3470:fltk-1.3.4-1/jpeg/jidctint.c **** /*
3471:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
3472:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 10x5 output block.
3473:fltk-1.3.4-1/jpeg/jidctint.c ****  *
3474:fltk-1.3.4-1/jpeg/jidctint.c ****  * 5-point IDCT in pass 1 (columns), 10-point in pass 2 (rows).
3475:fltk-1.3.4-1/jpeg/jidctint.c ****  */
3476:fltk-1.3.4-1/jpeg/jidctint.c **** 
3477:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
3478:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_10x5 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
3479:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
3480:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
3481:fltk-1.3.4-1/jpeg/jidctint.c **** {
 10581              		.loc 1 3481 0
 10582              		.cfi_startproc
 10583              	.LVL1603:
 10584 0000 4157     		pushq	%r15
 10585              		.cfi_def_cfa_offset 16
 10586              		.cfi_offset 15, -16
 10587 0002 4156     		pushq	%r14
 10588              		.cfi_def_cfa_offset 24
 10589              		.cfi_offset 14, -24
 10590 0004 4155     		pushq	%r13
 10591              		.cfi_def_cfa_offset 32
 10592              		.cfi_offset 13, -32
 10593 0006 4154     		pushq	%r12
 10594              		.cfi_def_cfa_offset 40
 10595              		.cfi_offset 12, -40
 10596 0008 55       		pushq	%rbp
 10597              		.cfi_def_cfa_offset 48
 10598              		.cfi_offset 6, -48
 10599 0009 53       		pushq	%rbx
 10600              		.cfi_def_cfa_offset 56
 10601              		.cfi_offset 3, -56
 10602 000a 4881ECE8 		subq	$232, %rsp
 10602      000000
 10603              		.cfi_def_cfa_offset 288
3482:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
3483:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
3484:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
3485:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
3486:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
3487:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
3488:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
3489:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
3490:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
3491:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*5];	/* buffers data between passes */
3492:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
3493:fltk-1.3.4-1/jpeg/jidctint.c **** 
3494:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
3495:fltk-1.3.4-1/jpeg/jidctint.c ****    * 5-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/10).
3496:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3497:fltk-1.3.4-1/jpeg/jidctint.c **** 
3498:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
3499:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 10604              		.loc 1 3499 0
 10605 0011 488B6E58 		movq	88(%rsi), %rbp
3481:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 10606              		.loc 1 3481 0
 10607 0015 64488B04 		movq	%fs:40, %rax
 10607      25280000 
 10607      00
 10608 001e 48898424 		movq	%rax, 216(%rsp)
 10608      D8000000 
 10609 0026 31C0     		xorl	%eax, %eax
3489:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 10610              		.loc 1 3489 0
 10611 0028 488B87B8 		movq	440(%rdi), %rax
 10611      010000
3500:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 10612              		.loc 1 3500 0
 10613 002f 488D5C24 		leaq	48(%rsp), %rbx
 10613      30
3501:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 10614              		.loc 1 3501 0
 10615 0034 4C8D7424 		leaq	80(%rsp), %r14
 10615      50
3489:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 10616              		.loc 1 3489 0
 10617 0039 4C8DA080 		leaq	128(%rax), %r12
 10617      000000
 10618              	.LVL1604:
 10619              		.p2align 4,,10
 10620              		.p2align 3
 10621              	.L180:
3502:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3503:fltk-1.3.4-1/jpeg/jidctint.c **** 
3504:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
3505:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
3506:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3507:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += ONE << (CONST_BITS-PASS1_BITS-1);
3508:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 10622              		.loc 1 3508 0 discriminator 3
 10623 0040 0FBF7220 		movswl	32(%rdx), %esi
3509:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 10624              		.loc 1 3509 0 discriminator 3
 10625 0044 0FBF7A40 		movswl	64(%rdx), %edi
3501:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 10626              		.loc 1 3501 0 discriminator 3
 10627 0048 4883C304 		addq	$4, %rbx
 10628              	.LVL1605:
3508:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 10629              		.loc 1 3508 0 discriminator 3
 10630 004c 0FAF7540 		imull	64(%rbp), %esi
 10631              		.loc 1 3509 0 discriminator 3
 10632 0050 0FAFBD80 		imull	128(%rbp), %edi
 10632      000000
3504:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 10633              		.loc 1 3504 0 discriminator 3
 10634 0057 0FBF02   		movswl	(%rdx), %eax
3501:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10635              		.loc 1 3501 0 discriminator 3
 10636 005a 4883C504 		addq	$4, %rbp
 10637              	.LVL1606:
 10638 005e 4883C202 		addq	$2, %rdx
 10639              	.LVL1607:
3504:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 10640              		.loc 1 3504 0 discriminator 3
 10641 0062 0FAF45FC 		imull	-4(%rbp), %eax
3508:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 10642              		.loc 1 3508 0 discriminator 3
 10643 0066 4863F6   		movslq	%esi, %rsi
 10644              		.loc 1 3509 0 discriminator 3
 10645 0069 4863FF   		movslq	%edi, %rdi
3510:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp13 + tmp14, FIX(0.790569415)); /* (c2+c4)/2 */
 10646              		.loc 1 3510 0 discriminator 3
 10647 006c 4C8D0C3E 		leaq	(%rsi,%rdi), %r9
3511:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp13 - tmp14, FIX(0.353553391)); /* (c2-c4)/2 */
 10648              		.loc 1 3511 0 discriminator 3
 10649 0070 4829FE   		subq	%rdi, %rsi
3512:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp12 + z2;
3513:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
3514:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
3515:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
3516:fltk-1.3.4-1/jpeg/jidctint.c **** 
3517:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3518:fltk-1.3.4-1/jpeg/jidctint.c **** 
3519:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
3520:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 10650              		.loc 1 3520 0 discriminator 3
 10651 0073 0FBF7A2E 		movswl	46(%rdx), %edi
3511:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp13 - tmp14, FIX(0.353553391)); /* (c2-c4)/2 */
 10652              		.loc 1 3511 0 discriminator 3
 10653 0077 4869F650 		imulq	$2896, %rsi, %rsi
 10653      0B0000
3504:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 10654              		.loc 1 3504 0 discriminator 3
 10655 007e 4898     		cltq
 10656              	.LVL1608:
3510:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp13 - tmp14, FIX(0.353553391)); /* (c2-c4)/2 */
 10657              		.loc 1 3510 0 discriminator 3
 10658 0080 4D69C94C 		imulq	$6476, %r9, %r9
 10658      190000
3505:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 10659              		.loc 1 3505 0 discriminator 3
 10660 0087 48C1E00D 		salq	$13, %rax
 10661              	.LVL1609:
3507:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 10662              		.loc 1 3507 0 discriminator 3
 10663 008b 48050004 		addq	$1024, %rax
 10663      0000
 10664              	.LVL1610:
 10665              		.loc 1 3520 0 discriminator 3
 10666 0091 0FAF7D5C 		imull	92(%rbp), %edi
3512:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 10667              		.loc 1 3512 0 discriminator 3
 10668 0095 4C8D1430 		leaq	(%rax,%rsi), %r10
 10669              	.LVL1611:
3521:fltk-1.3.4-1/jpeg/jidctint.c **** 
3522:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));       /* c3 */
3523:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + MULTIPLY(z2, FIX(0.513743148));    /* c1-c3 */
3524:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 - MULTIPLY(z3, FIX(2.176250899));    /* c1+c3 */
3525:fltk-1.3.4-1/jpeg/jidctint.c **** 
3526:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3527:fltk-1.3.4-1/jpeg/jidctint.c **** 
3528:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0] = (int) RIGHT_SHIFT(tmp10 + tmp13, CONST_BITS-PASS1_BITS);
3529:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp10 - tmp13, CONST_BITS-PASS1_BITS);
3530:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp11 + tmp14, CONST_BITS-PASS1_BITS);
3531:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp11 - tmp14, CONST_BITS-PASS1_BITS);
3532:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 10670              		.loc 1 3532 0 discriminator 3
 10671 0099 48C1E602 		salq	$2, %rsi
 10672              	.LVL1612:
 10673 009d 4829F0   		subq	%rsi, %rax
 10674              	.LVL1613:
3513:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
 10675              		.loc 1 3513 0 discriminator 3
 10676 00a0 4F8D1C11 		leaq	(%r9,%r10), %r11
 10677              	.LVL1614:
3514:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
 10678              		.loc 1 3514 0 discriminator 3
 10679 00a4 4D29CA   		subq	%r9, %r10
 10680              	.LVL1615:
3519:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 10681              		.loc 1 3519 0 discriminator 3
 10682 00a7 440FBF4A 		movswl	14(%rdx), %r9d
 10682      0E
 10683              	.LVL1616:
 10684 00ac 440FAF4D 		imull	28(%rbp), %r9d
 10684      1C
 10685              		.loc 1 3532 0 discriminator 3
 10686 00b1 48C1F80B 		sarq	$11, %rax
3520:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10687              		.loc 1 3520 0 discriminator 3
 10688 00b5 4863FF   		movslq	%edi, %rdi
 10689              		.loc 1 3532 0 discriminator 3
 10690 00b8 89433C   		movl	%eax, 60(%rbx)
3519:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 10691              		.loc 1 3519 0 discriminator 3
 10692 00bb 4D63C9   		movslq	%r9d, %r9
 10693              	.LVL1617:
3522:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + MULTIPLY(z2, FIX(0.513743148));    /* c1-c3 */
 10694              		.loc 1 3522 0 discriminator 3
 10695 00be 4D8D2C39 		leaq	(%r9,%rdi), %r13
3523:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 - MULTIPLY(z3, FIX(2.176250899));    /* c1+c3 */
 10696              		.loc 1 3523 0 discriminator 3
 10697 00c2 4D69C971 		imulq	$4209, %r9, %r9
 10697      100000
 10698              	.LVL1618:
3522:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + MULTIPLY(z2, FIX(0.513743148));    /* c1-c3 */
 10699              		.loc 1 3522 0 discriminator 3
 10700 00c9 4D69ED9A 		imulq	$6810, %r13, %r13
 10700      1A0000
 10701              	.LVL1619:
3524:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10702              		.loc 1 3524 0 discriminator 3
 10703 00d0 4869FF5C 		imulq	$-17828, %rdi, %rdi
 10703      BAFFFF
 10704              	.LVL1620:
3523:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 - MULTIPLY(z3, FIX(2.176250899));    /* c1+c3 */
 10705              		.loc 1 3523 0 discriminator 3
 10706 00d7 4D01E9   		addq	%r13, %r9
 10707              	.LVL1621:
3524:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10708              		.loc 1 3524 0 discriminator 3
 10709 00da 4C01EF   		addq	%r13, %rdi
 10710              	.LVL1622:
3528:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp10 - tmp13, CONST_BITS-PASS1_BITS);
 10711              		.loc 1 3528 0 discriminator 3
 10712 00dd 4F8D2C0B 		leaq	(%r11,%r9), %r13
 10713              	.LVL1623:
3529:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp11 + tmp14, CONST_BITS-PASS1_BITS);
 10714              		.loc 1 3529 0 discriminator 3
 10715 00e1 4D29CB   		subq	%r9, %r11
 10716              	.LVL1624:
3530:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp11 - tmp14, CONST_BITS-PASS1_BITS);
 10717              		.loc 1 3530 0 discriminator 3
 10718 00e4 4D8D0C3A 		leaq	(%r10,%rdi), %r9
 10719              	.LVL1625:
3531:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 10720              		.loc 1 3531 0 discriminator 3
 10721 00e8 4929FA   		subq	%rdi, %r10
 10722              	.LVL1626:
3529:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp11 + tmp14, CONST_BITS-PASS1_BITS);
 10723              		.loc 1 3529 0 discriminator 3
 10724 00eb 49C1FB0B 		sarq	$11, %r11
3528:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp10 - tmp13, CONST_BITS-PASS1_BITS);
 10725              		.loc 1 3528 0 discriminator 3
 10726 00ef 49C1FD0B 		sarq	$11, %r13
3531:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 10727              		.loc 1 3531 0 discriminator 3
 10728 00f3 49C1FA0B 		sarq	$11, %r10
3529:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) RIGHT_SHIFT(tmp11 + tmp14, CONST_BITS-PASS1_BITS);
 10729              		.loc 1 3529 0 discriminator 3
 10730 00f7 44895B7C 		movl	%r11d, 124(%rbx)
3530:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp11 - tmp14, CONST_BITS-PASS1_BITS);
 10731              		.loc 1 3530 0 discriminator 3
 10732 00fb 49C1F90B 		sarq	$11, %r9
3528:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4] = (int) RIGHT_SHIFT(tmp10 - tmp13, CONST_BITS-PASS1_BITS);
 10733              		.loc 1 3528 0 discriminator 3
 10734 00ff 44896BFC 		movl	%r13d, -4(%rbx)
3531:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) RIGHT_SHIFT(tmp12, CONST_BITS-PASS1_BITS);
 10735              		.loc 1 3531 0 discriminator 3
 10736 0103 4489535C 		movl	%r10d, 92(%rbx)
3530:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) RIGHT_SHIFT(tmp11 - tmp14, CONST_BITS-PASS1_BITS);
 10737              		.loc 1 3530 0 discriminator 3
 10738 0107 44894B1C 		movl	%r9d, 28(%rbx)
 10739              	.LVL1627:
3501:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10740              		.loc 1 3501 0 discriminator 3
 10741 010b 4C39F3   		cmpq	%r14, %rbx
 10742 010e 0F852CFF 		jne	.L180
 10742      FFFF
 10743 0114 4489C0   		movl	%r8d, %eax
3501:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 10744              		.loc 1 3501 0 is_stmt 0
 10745 0117 4C8D7C24 		leaq	48(%rsp), %r15
 10745      30
 10746 011c 48894C24 		movq	%rcx, 8(%rsp)
 10746      08
 10747 0121 48894424 		movq	%rax, 32(%rsp)
 10747      20
3533:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3534:fltk-1.3.4-1/jpeg/jidctint.c **** 
3535:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 5 rows from work array, store into output array.
3536:fltk-1.3.4-1/jpeg/jidctint.c ****    * 10-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/20).
3537:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3538:fltk-1.3.4-1/jpeg/jidctint.c **** 
3539:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3540:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 5; ctr++) {
 10748              		.loc 1 3540 0 is_stmt 1
 10749 0126 488D8424 		leaq	208(%rsp), %rax
 10749      D0000000 
 10750 012e 48894424 		movq	%rax, 40(%rsp)
 10750      28
 10751              	.LVL1628:
 10752              	.L181:
3541:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10753              		.loc 1 3541 0 discriminator 3
 10754 0133 488B4424 		movq	8(%rsp), %rax
 10754      08
3542:fltk-1.3.4-1/jpeg/jidctint.c **** 
3543:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3544:fltk-1.3.4-1/jpeg/jidctint.c **** 
3545:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3546:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
3547:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
3548:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 10755              		.loc 1 3548 0 discriminator 3
 10756 0138 49637710 		movslq	16(%r15), %rsi
3541:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 10757              		.loc 1 3541 0 discriminator 3
 10758 013c 488B4C24 		movq	32(%rsp), %rcx
 10758      20
3549:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
3550:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
3551:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
3552:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
3553:fltk-1.3.4-1/jpeg/jidctint.c **** 
3554:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = z3 - ((z1 - z2) << 1);               /* c0 = (c4-c8)*2 */
3555:fltk-1.3.4-1/jpeg/jidctint.c **** 
3556:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[2];
 10759              		.loc 1 3556 0 discriminator 3
 10760 0141 4D634708 		movslq	8(%r15), %r8
3557:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
3558:fltk-1.3.4-1/jpeg/jidctint.c **** 
3559:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));    /* c6 */
3560:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
3561:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
3562:fltk-1.3.4-1/jpeg/jidctint.c **** 
3563:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
3564:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
3565:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
3566:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
3567:fltk-1.3.4-1/jpeg/jidctint.c **** 
3568:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3569:fltk-1.3.4-1/jpeg/jidctint.c **** 
3570:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
3571:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
3572:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 10761              		.loc 1 3572 0 discriminator 3
 10762 0145 49635F14 		movslq	20(%r15), %rbx
3541:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10763              		.loc 1 3541 0 discriminator 3
 10764 0149 480308   		addq	(%rax), %rcx
 10765              	.LVL1629:
3546:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 10766              		.loc 1 3546 0 discriminator 3
 10767 014c 496307   		movslq	(%r15), %rax
3549:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
 10768              		.loc 1 3549 0 discriminator 3
 10769 014f 4869D69D 		imulq	$9373, %rsi, %rdx
 10769      240000
3550:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 10770              		.loc 1 3550 0 discriminator 3
 10771 0156 4869F6FC 		imulq	$3580, %rsi, %rsi
 10771      0D0000
3573:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 10772              		.loc 1 3573 0 discriminator 3
 10773 015d 48C1E30D 		salq	$13, %rbx
3546:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 10774              		.loc 1 3546 0 discriminator 3
 10775 0161 4883C010 		addq	$16, %rax
 10776              	.LVL1630:
3547:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[4];
 10777              		.loc 1 3547 0 discriminator 3
 10778 0165 48C1E00D 		salq	$13, %rax
 10779              	.LVL1631:
3551:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
 10780              		.loc 1 3551 0 discriminator 3
 10781 0169 4C8D1410 		leaq	(%rax,%rdx), %r10
 10782              	.LVL1632:
3554:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10783              		.loc 1 3554 0 discriminator 3
 10784 016d 4829F2   		subq	%rsi, %rdx
 10785              	.LVL1633:
3552:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10786              		.loc 1 3552 0 discriminator 3
 10787 0170 4989C1   		movq	%rax, %r9
3554:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10788              		.loc 1 3554 0 discriminator 3
 10789 0173 4801D2   		addq	%rdx, %rdx
3552:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10790              		.loc 1 3552 0 discriminator 3
 10791 0176 4929F1   		subq	%rsi, %r9
 10792              	.LVL1634:
3554:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10793              		.loc 1 3554 0 discriminator 3
 10794 0179 4829D0   		subq	%rdx, %rax
 10795              	.LVL1635:
3557:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10796              		.loc 1 3557 0 discriminator 3
 10797 017c 49635718 		movslq	24(%r15), %rdx
 10798              	.LVL1636:
3559:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 10799              		.loc 1 3559 0 discriminator 3
 10800 0180 498D3410 		leaq	(%r8,%rdx), %rsi
3560:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
 10801              		.loc 1 3560 0 discriminator 3
 10802 0184 4D69C071 		imulq	$4209, %r8, %r8
 10802      100000
 10803              	.LVL1637:
3559:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 10804              		.loc 1 3559 0 discriminator 3
 10805 018b 4869F69A 		imulq	$6810, %rsi, %rsi
 10805      1A0000
 10806              	.LVL1638:
3561:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10807              		.loc 1 3561 0 discriminator 3
 10808 0192 4869D25C 		imulq	$-17828, %rdx, %rdx
 10808      BAFFFF
 10809              	.LVL1639:
3560:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
 10810              		.loc 1 3560 0 discriminator 3
 10811 0199 4901F0   		addq	%rsi, %r8
 10812              	.LVL1640:
3563:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
 10813              		.loc 1 3563 0 discriminator 3
 10814 019c 4B8D3C02 		leaq	(%r10,%r8), %rdi
3564:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 10815              		.loc 1 3564 0 discriminator 3
 10816 01a0 4D29C2   		subq	%r8, %r10
 10817              	.LVL1641:
3574:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = (INT32) wsptr[7];
 10818              		.loc 1 3574 0 discriminator 3
 10819 01a3 4D63471C 		movslq	28(%r15), %r8
 10820              	.LVL1642:
3564:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 10821              		.loc 1 3564 0 discriminator 3
 10822 01a7 4C895424 		movq	%r10, 16(%rsp)
 10822      10
3571:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 10823              		.loc 1 3571 0 discriminator 3
 10824 01ac 4D63570C 		movslq	12(%r15), %r10
3561:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10825              		.loc 1 3561 0 discriminator 3
 10826 01b0 4801F2   		addq	%rsi, %rdx
 10827              	.LVL1643:
3565:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
 10828              		.loc 1 3565 0 discriminator 3
 10829 01b3 498D3411 		leaq	(%r9,%rdx), %rsi
 10830              	.LVL1644:
3566:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10831              		.loc 1 3566 0 discriminator 3
 10832 01b7 4929D1   		subq	%rdx, %r9
 10833              	.LVL1645:
3570:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 10834              		.loc 1 3570 0 discriminator 3
 10835 01ba 49635704 		movslq	4(%r15), %rdx
 10836              	.LVL1646:
3566:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10837              		.loc 1 3566 0 discriminator 3
 10838 01be 4C894C24 		movq	%r9, 24(%rsp)
 10838      18
 10839              	.LVL1647:
3575:fltk-1.3.4-1/jpeg/jidctint.c **** 
3576:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z2 + z4;
 10840              		.loc 1 3576 0 discriminator 3
 10841 01c3 4F8D1C02 		leaq	(%r10,%r8), %r11
 10842              	.LVL1648:
3577:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
 10843              		.loc 1 3577 0 discriminator 3
 10844 01c7 4D29C2   		subq	%r8, %r10
 10845              	.LVL1649:
3578:fltk-1.3.4-1/jpeg/jidctint.c **** 
3579:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp13, FIX(0.309016994));        /* (c3-c7)/2 */
 10846              		.loc 1 3579 0 discriminator 3
 10847 01ca 4969EAE3 		imulq	$2531, %r10, %rbp
 10847      090000
 10848              	.LVL1650:
3580:fltk-1.3.4-1/jpeg/jidctint.c **** 
3581:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.951056516));           /* (c3+c7)/2 */
 10849              		.loc 1 3581 0 discriminator 3
 10850 01d1 4D69F36F 		imulq	$7791, %r11, %r14
 10850      1E0000
 10851              	.LVL1651:
3582:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 + tmp12;
3583:fltk-1.3.4-1/jpeg/jidctint.c **** 
3584:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1, FIX(1.396802247)) + z2 + z4; /* c1 */
 10852              		.loc 1 3584 0 discriminator 3
 10853 01d8 4C69CAB3 		imulq	$11443, %rdx, %r9
 10853      2C0000
3582:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 + tmp12;
 10854              		.loc 1 3582 0 discriminator 3
 10855 01df 4C8D2C2B 		leaq	(%rbx,%rbp), %r13
 10856              	.LVL1652:
3585:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 10857              		.loc 1 3585 0 discriminator 3
 10858 01e3 4C69C214 		imulq	$1812, %rdx, %r8
 10858      070000
3584:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 10859              		.loc 1 3584 0 discriminator 3
 10860 01ea 4D01F1   		addq	%r14, %r9
 10861 01ed 4D01E9   		addq	%r13, %r9
 10862              	.LVL1653:
3586:fltk-1.3.4-1/jpeg/jidctint.c **** 
3587:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.587785252));           /* (c1-c9)/2 */
 10863              		.loc 1 3587 0 discriminator 3
 10864 01f0 4D69DBCF 		imulq	$4815, %r11, %r11
 10864      120000
 10865              	.LVL1654:
3585:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10866              		.loc 1 3585 0 discriminator 3
 10867 01f7 4D29F0   		subq	%r14, %r8
3588:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
3589:fltk-1.3.4-1/jpeg/jidctint.c **** 
3590:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = ((z1 - tmp13) << CONST_BITS) - z3;
 10868              		.loc 1 3590 0 discriminator 3
 10869 01fa 4989D6   		movq	%rdx, %r14
 10870              	.LVL1655:
3585:fltk-1.3.4-1/jpeg/jidctint.c **** 
 10871              		.loc 1 3585 0 discriminator 3
 10872 01fd 4D01C5   		addq	%r8, %r13
 10873              	.LVL1656:
 10874              		.loc 1 3590 0 discriminator 3
 10875 0200 4D29D6   		subq	%r10, %r14
3588:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
 10876              		.loc 1 3588 0 discriminator 3
 10877 0203 4989D8   		movq	%rbx, %r8
 10878 0206 4929E8   		subq	%rbp, %r8
 10879 0209 4C89D5   		movq	%r10, %rbp
 10880              	.LVL1657:
 10881              		.loc 1 3590 0 discriminator 3
 10882 020c 4D89F2   		movq	%r14, %r10
 10883              	.LVL1658:
3588:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
 10884              		.loc 1 3588 0 discriminator 3
 10885 020f 48C1E50C 		salq	$12, %rbp
 10886              	.LVL1659:
 10887              		.loc 1 3590 0 discriminator 3
 10888 0213 49C1E20D 		salq	$13, %r10
3588:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z3 - tmp12 - (tmp13 << (CONST_BITS - 1));
 10889              		.loc 1 3588 0 discriminator 3
 10890 0217 4929E8   		subq	%rbp, %r8
 10891              	.LVL1660:
 10892              		.loc 1 3590 0 discriminator 3
 10893 021a 4929DA   		subq	%rbx, %r10
 10894              	.LVL1661:
3591:fltk-1.3.4-1/jpeg/jidctint.c **** 
3592:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1, FIX(1.260073511)) - z2 - z4; /* c3 */
 10895              		.loc 1 3592 0 discriminator 3
 10896 021d 4869DA53 		imulq	$10323, %rdx, %rbx
 10896      280000
 10897              	.LVL1662:
3593:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 10898              		.loc 1 3593 0 discriminator 3
 10899 0224 4869D28C 		imulq	$5260, %rdx, %rdx
 10899      140000
 10900              	.LVL1663:
3592:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 10901              		.loc 1 3592 0 discriminator 3
 10902 022b 4C29DB   		subq	%r11, %rbx
 10903              		.loc 1 3593 0 discriminator 3
 10904 022e 4C29DA   		subq	%r11, %rdx
3592:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 10905              		.loc 1 3592 0 discriminator 3
 10906 0231 4C29C3   		subq	%r8, %rbx
 10907              	.LVL1664:
 10908              		.loc 1 3593 0 discriminator 3
 10909 0234 4901D0   		addq	%rdx, %r8
 10910              	.LVL1665:
3594:fltk-1.3.4-1/jpeg/jidctint.c **** 
3595:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3596:fltk-1.3.4-1/jpeg/jidctint.c **** 
3597:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
 10911              		.loc 1 3597 0 discriminator 3
 10912 0237 4A8D140F 		leaq	(%rdi,%r9), %rdx
3598:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3599:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3600:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[9] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
 10913              		.loc 1 3600 0 discriminator 3
 10914 023b 4C29CF   		subq	%r9, %rdi
 10915              	.LVL1666:
 10916 023e 48C1FF12 		sarq	$18, %rdi
3601:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3602:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3603:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
3604:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3605:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3606:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[8] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
3607:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3608:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3609:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
3610:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3611:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3612:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
3613:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3614:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3615:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp23 + tmp13,
 10917              		.loc 1 3615 0 discriminator 3
 10918 0242 4C8B4C24 		movq	24(%rsp), %r9
 10918      18
 10919              	.LVL1667:
3597:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10920              		.loc 1 3597 0 discriminator 3
 10921 0247 48C1FA12 		sarq	$18, %rdx
3600:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10922              		.loc 1 3600 0 discriminator 3
 10923 024b 81E7FF03 		andl	$1023, %edi
 10923      0000
3597:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10924              		.loc 1 3597 0 discriminator 3
 10925 0251 81E2FF03 		andl	$1023, %edx
 10925      0000
 10926 0257 410FB614 		movzbl	(%r12,%rdx), %edx
 10926      14
 10927 025c 8811     		movb	%dl, (%rcx)
3600:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10928              		.loc 1 3600 0 discriminator 3
 10929 025e 410FB614 		movzbl	(%r12,%rdi), %edx
 10929      3C
 10930 0263 885109   		movb	%dl, 9(%rcx)
3603:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10931              		.loc 1 3603 0 discriminator 3
 10932 0266 488D141E 		leaq	(%rsi,%rbx), %rdx
3606:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10933              		.loc 1 3606 0 discriminator 3
 10934 026a 4829DE   		subq	%rbx, %rsi
 10935              	.LVL1668:
 10936 026d 48C1FE12 		sarq	$18, %rsi
3603:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10937              		.loc 1 3603 0 discriminator 3
 10938 0271 48C1FA12 		sarq	$18, %rdx
3606:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10939              		.loc 1 3606 0 discriminator 3
 10940 0275 81E6FF03 		andl	$1023, %esi
 10940      0000
3603:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10941              		.loc 1 3603 0 discriminator 3
 10942 027b 81E2FF03 		andl	$1023, %edx
 10942      0000
 10943 0281 410FB614 		movzbl	(%r12,%rdx), %edx
 10943      14
 10944 0286 885101   		movb	%dl, 1(%rcx)
3606:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10945              		.loc 1 3606 0 discriminator 3
 10946 0289 410FB614 		movzbl	(%r12,%rsi), %edx
 10946      34
 10947 028e 885108   		movb	%dl, 8(%rcx)
3609:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10948              		.loc 1 3609 0 discriminator 3
 10949 0291 4A8D1410 		leaq	(%rax,%r10), %rdx
3612:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10950              		.loc 1 3612 0 discriminator 3
 10951 0295 4C29D0   		subq	%r10, %rax
 10952              	.LVL1669:
 10953 0298 48C1F812 		sarq	$18, %rax
3616:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3617:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3618:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp23 - tmp13,
3619:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3620:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3621:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp24 + tmp14,
 10954              		.loc 1 3621 0 discriminator 3
 10955 029c 4C8B5424 		movq	16(%rsp), %r10
 10955      10
 10956              	.LVL1670:
3609:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10957              		.loc 1 3609 0 discriminator 3
 10958 02a1 48C1FA12 		sarq	$18, %rdx
3612:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10959              		.loc 1 3612 0 discriminator 3
 10960 02a5 25FF0300 		andl	$1023, %eax
 10960      00
3609:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10961              		.loc 1 3609 0 discriminator 3
 10962 02aa 81E2FF03 		andl	$1023, %edx
 10962      0000
 10963 02b0 410FB614 		movzbl	(%r12,%rdx), %edx
 10963      14
 10964 02b5 885102   		movb	%dl, 2(%rcx)
3612:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10965              		.loc 1 3612 0 discriminator 3
 10966 02b8 410FB604 		movzbl	(%r12,%rax), %eax
 10966      04
 10967 02bd 884107   		movb	%al, 7(%rcx)
3615:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10968              		.loc 1 3615 0 discriminator 3
 10969 02c0 4B8D0401 		leaq	(%r9,%r8), %rax
3618:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10970              		.loc 1 3618 0 discriminator 3
 10971 02c4 4D29C1   		subq	%r8, %r9
3615:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10972              		.loc 1 3615 0 discriminator 3
 10973 02c7 48C1F812 		sarq	$18, %rax
 10974 02cb 25FF0300 		andl	$1023, %eax
 10974      00
 10975 02d0 410FB604 		movzbl	(%r12,%rax), %eax
 10975      04
 10976 02d5 884103   		movb	%al, 3(%rcx)
3618:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10977              		.loc 1 3618 0 discriminator 3
 10978 02d8 4C89C8   		movq	%r9, %rax
 10979 02db 48C1F812 		sarq	$18, %rax
 10980 02df 25FF0300 		andl	$1023, %eax
 10980      00
 10981 02e4 410FB604 		movzbl	(%r12,%rax), %eax
 10981      04
 10982 02e9 884106   		movb	%al, 6(%rcx)
 10983              		.loc 1 3621 0 discriminator 3
 10984 02ec 4B8D042A 		leaq	(%r10,%r13), %rax
 10985 02f0 48C1F812 		sarq	$18, %rax
 10986 02f4 25FF0300 		andl	$1023, %eax
 10986      00
 10987 02f9 410FB604 		movzbl	(%r12,%rax), %eax
 10987      04
 10988 02fe 884104   		movb	%al, 4(%rcx)
3622:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3623:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3624:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp24 - tmp14,
 10989              		.loc 1 3624 0 discriminator 3
 10990 0301 4C89D0   		movq	%r10, %rax
 10991 0304 4C29E8   		subq	%r13, %rax
 10992 0307 48C1F812 		sarq	$18, %rax
 10993 030b 25FF0300 		andl	$1023, %eax
 10993      00
3625:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3626:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3627:fltk-1.3.4-1/jpeg/jidctint.c **** 
3628:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 8;		/* advance pointer to next row */
 10994              		.loc 1 3628 0 discriminator 3
 10995 0310 4983C720 		addq	$32, %r15
 10996              	.LVL1671:
 10997 0314 48834424 		addq	$8, 8(%rsp)
 10997      0808
3624:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 10998              		.loc 1 3624 0 discriminator 3
 10999 031a 410FB604 		movzbl	(%r12,%rax), %eax
 10999      04
3540:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11000              		.loc 1 3540 0 discriminator 3
 11001 031f 4C3B7C24 		cmpq	40(%rsp), %r15
 11001      28
3624:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11002              		.loc 1 3624 0 discriminator 3
 11003 0324 884105   		movb	%al, 5(%rcx)
3540:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11004              		.loc 1 3540 0 discriminator 3
 11005 0327 0F8506FE 		jne	.L181
 11005      FFFF
3629:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3630:fltk-1.3.4-1/jpeg/jidctint.c **** }
 11006              		.loc 1 3630 0
 11007 032d 488B8424 		movq	216(%rsp), %rax
 11007      D8000000 
 11008 0335 64483304 		xorq	%fs:40, %rax
 11008      25280000 
 11008      00
 11009 033e 7512     		jne	.L186
 11010 0340 4881C4E8 		addq	$232, %rsp
 11010      000000
 11011              		.cfi_remember_state
 11012              		.cfi_def_cfa_offset 56
 11013 0347 5B       		popq	%rbx
 11014              		.cfi_def_cfa_offset 48
 11015              	.LVL1672:
 11016 0348 5D       		popq	%rbp
 11017              		.cfi_def_cfa_offset 40
 11018              	.LVL1673:
 11019 0349 415C     		popq	%r12
 11020              		.cfi_def_cfa_offset 32
 11021              	.LVL1674:
 11022 034b 415D     		popq	%r13
 11023              		.cfi_def_cfa_offset 24
 11024              	.LVL1675:
 11025 034d 415E     		popq	%r14
 11026              		.cfi_def_cfa_offset 16
 11027              	.LVL1676:
 11028 034f 415F     		popq	%r15
 11029              		.cfi_def_cfa_offset 8
 11030              	.LVL1677:
 11031 0351 C3       		ret
 11032              	.LVL1678:
 11033              	.L186:
 11034              		.cfi_restore_state
 11035 0352 E8000000 		call	__stack_chk_fail
 11035      00
 11036              	.LVL1679:
 11037              		.cfi_endproc
 11038              	.LFE80:
 11040              		.section	.text.unlikely.jpeg_idct_10x5
 11041              	.LCOLDE19:
 11042              		.section	.text.jpeg_idct_10x5
 11043              	.LHOTE19:
 11044              		.section	.text.unlikely.jpeg_idct_8x4,"ax",@progbits
 11045              	.LCOLDB20:
 11046              		.section	.text.jpeg_idct_8x4,"ax",@progbits
 11047              	.LHOTB20:
 11048              		.p2align 4,,15
 11049              		.globl	jpeg_idct_8x4
 11051              	jpeg_idct_8x4:
 11052              	.LFB81:
3631:fltk-1.3.4-1/jpeg/jidctint.c **** 
3632:fltk-1.3.4-1/jpeg/jidctint.c **** 
3633:fltk-1.3.4-1/jpeg/jidctint.c **** /*
3634:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
3635:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 8x4 output block.
3636:fltk-1.3.4-1/jpeg/jidctint.c ****  *
3637:fltk-1.3.4-1/jpeg/jidctint.c ****  * 4-point IDCT in pass 1 (columns), 8-point in pass 2 (rows).
3638:fltk-1.3.4-1/jpeg/jidctint.c ****  */
3639:fltk-1.3.4-1/jpeg/jidctint.c **** 
3640:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
3641:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_8x4 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
3642:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
3643:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
3644:fltk-1.3.4-1/jpeg/jidctint.c **** {
 11053              		.loc 1 3644 0
 11054              		.cfi_startproc
 11055              	.LVL1680:
 11056 0000 4157     		pushq	%r15
 11057              		.cfi_def_cfa_offset 16
 11058              		.cfi_offset 15, -16
 11059 0002 4156     		pushq	%r14
 11060              		.cfi_def_cfa_offset 24
 11061              		.cfi_offset 14, -24
 11062 0004 4155     		pushq	%r13
 11063              		.cfi_def_cfa_offset 32
 11064              		.cfi_offset 13, -32
 11065 0006 4154     		pushq	%r12
 11066              		.cfi_def_cfa_offset 40
 11067              		.cfi_offset 12, -40
 11068 0008 55       		pushq	%rbp
 11069              		.cfi_def_cfa_offset 48
 11070              		.cfi_offset 6, -48
 11071 0009 53       		pushq	%rbx
 11072              		.cfi_def_cfa_offset 56
 11073              		.cfi_offset 3, -56
 11074 000a 4881ECB8 		subq	$184, %rsp
 11074      000000
 11075              		.cfi_def_cfa_offset 240
3645:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
3646:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13;
3647:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
3648:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
3649:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
3650:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
3651:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
3652:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 11076              		.loc 1 3652 0
 11077 0011 4C8BBFB8 		movq	440(%rdi), %r15
 11077      010000
3653:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
3654:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*4];	/* buffers data between passes */
3655:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
3656:fltk-1.3.4-1/jpeg/jidctint.c **** 
3657:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
3658:fltk-1.3.4-1/jpeg/jidctint.c ****    * 4-point IDCT kernel,
3659:fltk-1.3.4-1/jpeg/jidctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point IDCT].
3660:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3661:fltk-1.3.4-1/jpeg/jidctint.c **** 
3662:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
3663:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 11078              		.loc 1 3663 0
 11079 0018 4C8B5E58 		movq	88(%rsi), %r11
3644:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
 11080              		.loc 1 3644 0
 11081 001c 64488B04 		movq	%fs:40, %rax
 11081      25280000 
 11081      00
 11082 0025 48898424 		movq	%rax, 168(%rsp)
 11082      A8000000 
 11083 002d 31C0     		xorl	%eax, %eax
3664:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 11084              		.loc 1 3664 0
 11085 002f 4C8D5424 		leaq	32(%rsp), %r10
 11085      20
3665:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 11086              		.loc 1 3665 0
 11087 0034 488D5C24 		leaq	64(%rsp), %rbx
 11087      40
3652:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 11088              		.loc 1 3652 0
 11089 0039 4983EF80 		subq	$-128, %r15
 11090              	.LVL1681:
 11091 003d 0F1F00   		.p2align 4,,10
 11092              		.p2align 3
 11093              	.L188:
3666:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3667:fltk-1.3.4-1/jpeg/jidctint.c **** 
3668:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
3669:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
3670:fltk-1.3.4-1/jpeg/jidctint.c **** 
3671:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (tmp0 + tmp2) << PASS1_BITS;
3672:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << PASS1_BITS;
3673:fltk-1.3.4-1/jpeg/jidctint.c **** 
3674:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3675:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Same rotation as in the even part of the 8x8 LL&M IDCT */
3676:fltk-1.3.4-1/jpeg/jidctint.c **** 
3677:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 11094              		.loc 1 3677 0 discriminator 3
 11095 0040 0FBF7210 		movswl	16(%rdx), %esi
3678:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 11096              		.loc 1 3678 0 discriminator 3
 11097 0044 440FBF4A 		movswl	48(%rdx), %r9d
 11097      30
3665:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11098              		.loc 1 3665 0 discriminator 3
 11099 0049 4983C204 		addq	$4, %r10
 11100              	.LVL1682:
3677:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 11101              		.loc 1 3677 0 discriminator 3
 11102 004d 410FAF73 		imull	32(%r11), %esi
 11102      20
 11103              		.loc 1 3678 0 discriminator 3
 11104 0052 450FAF4B 		imull	96(%r11), %r9d
 11104      60
3668:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 11105              		.loc 1 3668 0 discriminator 3
 11106 0057 0FBF02   		movswl	(%rdx), %eax
3669:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11107              		.loc 1 3669 0 discriminator 3
 11108 005a 0FBF6A20 		movswl	32(%rdx), %ebp
3665:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11109              		.loc 1 3665 0 discriminator 3
 11110 005e 4983C304 		addq	$4, %r11
 11111              	.LVL1683:
3668:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 11112              		.loc 1 3668 0 discriminator 3
 11113 0062 410FAF43 		imull	-4(%r11), %eax
 11113      FC
3669:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11114              		.loc 1 3669 0 discriminator 3
 11115 0067 410FAF6B 		imull	60(%r11), %ebp
 11115      3C
3665:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11116              		.loc 1 3665 0 discriminator 3
 11117 006c 4883C202 		addq	$2, %rdx
 11118              	.LVL1684:
3677:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 11119              		.loc 1 3677 0 discriminator 3
 11120 0070 4863F6   		movslq	%esi, %rsi
 11121              		.loc 1 3678 0 discriminator 3
 11122 0073 4D63C9   		movslq	%r9d, %r9
3679:fltk-1.3.4-1/jpeg/jidctint.c **** 
3680:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);               /* c6 */
 11123              		.loc 1 3680 0 discriminator 3
 11124 0076 4A8D3C0E 		leaq	(%rsi,%r9), %rdi
3681:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3682:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
3683:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = RIGHT_SHIFT(z1 + MULTIPLY(z2, FIX_0_765366865), /* c2-c6 */
3684:fltk-1.3.4-1/jpeg/jidctint.c **** 		       CONST_BITS-PASS1_BITS);
3685:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = RIGHT_SHIFT(z1 - MULTIPLY(z3, FIX_1_847759065), /* c2+c6 */
3686:fltk-1.3.4-1/jpeg/jidctint.c **** 		       CONST_BITS-PASS1_BITS);
3687:fltk-1.3.4-1/jpeg/jidctint.c **** 
3688:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3689:fltk-1.3.4-1/jpeg/jidctint.c **** 
3690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0] = (int) (tmp10 + tmp0);
 11125              		.loc 1 3690 0 discriminator 3
 11126 007a 4869F67E 		imulq	$6270, %rsi, %rsi
 11126      180000
3668:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 11127              		.loc 1 3668 0 discriminator 3
 11128 0081 4898     		cltq
 11129              	.LVL1685:
3680:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 11130              		.loc 1 3680 0 discriminator 3
 11131 0083 4869FF51 		imulq	$4433, %rdi, %rdi
 11131      110000
3669:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11132              		.loc 1 3669 0 discriminator 3
 11133 008a 4863ED   		movslq	%ebp, %rbp
 11134              	.LVL1686:
3691:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
3692:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) (tmp12 + tmp2);
 11135              		.loc 1 3692 0 discriminator 3
 11136 008d 4D69C9DF 		imulq	$-15137, %r9, %r9
 11136      C4FFFF
 11137              	.LVL1687:
3690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
 11138              		.loc 1 3690 0 discriminator 3
 11139 0094 4C8D2428 		leaq	(%rax,%rbp), %r12
 11140              		.loc 1 3692 0 discriminator 3
 11141 0098 4829E8   		subq	%rbp, %rax
 11142              	.LVL1688:
 11143 009b 48C1E002 		salq	$2, %rax
 11144              	.LVL1689:
3690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
 11145              		.loc 1 3690 0 discriminator 3
 11146 009f 49C1E402 		salq	$2, %r12
 11147              	.LVL1690:
3682:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = RIGHT_SHIFT(z1 + MULTIPLY(z2, FIX_0_765366865), /* c2-c6 */
 11148              		.loc 1 3682 0 discriminator 3
 11149 00a3 4881C700 		addq	$1024, %rdi
 11149      040000
 11150              	.LVL1691:
3690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
 11151              		.loc 1 3690 0 discriminator 3
 11152 00aa 4801FE   		addq	%rdi, %rsi
 11153              		.loc 1 3692 0 discriminator 3
 11154 00ad 4C01CF   		addq	%r9, %rdi
 11155              	.LVL1692:
3690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
 11156              		.loc 1 3690 0 discriminator 3
 11157 00b0 48C1FE0B 		sarq	$11, %rsi
 11158              		.loc 1 3692 0 discriminator 3
 11159 00b4 48C1FF0B 		sarq	$11, %rdi
3690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
 11160              		.loc 1 3690 0 discriminator 3
 11161 00b8 468D2C26 		leal	(%rsi,%r12), %r13d
3691:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
 11162              		.loc 1 3691 0 discriminator 3
 11163 00bc 4129F4   		subl	%esi, %r12d
 11164              	.LVL1693:
 11165              		.loc 1 3692 0 discriminator 3
 11166 00bf 8D3407   		leal	(%rdi,%rax), %esi
3693:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) (tmp12 - tmp2);
 11167              		.loc 1 3693 0 discriminator 3
 11168 00c2 29F8     		subl	%edi, %eax
 11169              	.LVL1694:
3691:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1] = (int) (tmp12 + tmp2);
 11170              		.loc 1 3691 0 discriminator 3
 11171 00c4 4589625C 		movl	%r12d, 92(%r10)
3690:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3] = (int) (tmp10 - tmp0);
 11172              		.loc 1 3690 0 discriminator 3
 11173 00c8 45896AFC 		movl	%r13d, -4(%r10)
3692:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2] = (int) (tmp12 - tmp2);
 11174              		.loc 1 3692 0 discriminator 3
 11175 00cc 4189721C 		movl	%esi, 28(%r10)
 11176              		.loc 1 3693 0 discriminator 3
 11177 00d0 4189423C 		movl	%eax, 60(%r10)
 11178              	.LVL1695:
3665:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11179              		.loc 1 3665 0 discriminator 3
 11180 00d4 4939DA   		cmpq	%rbx, %r10
 11181 00d7 0F8563FF 		jne	.L188
 11181      FFFF
 11182 00dd 4489C0   		movl	%r8d, %eax
3665:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11183              		.loc 1 3665 0 is_stmt 0
 11184 00e0 4C8D5C24 		leaq	32(%rsp), %r11
 11184      20
 11185              	.LVL1696:
 11186 00e5 48894C24 		movq	%rcx, 8(%rsp)
 11186      08
 11187 00ea 48894424 		movq	%rax, 16(%rsp)
 11187      10
3694:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3695:fltk-1.3.4-1/jpeg/jidctint.c **** 
3696:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process rows from work array, store into output array.
3697:fltk-1.3.4-1/jpeg/jidctint.c ****    * Note that we must descale the results by a factor of 8 == 2**3,
3698:fltk-1.3.4-1/jpeg/jidctint.c ****    * and also undo the PASS1_BITS scaling.
3699:fltk-1.3.4-1/jpeg/jidctint.c ****    * 8-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
3700:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3701:fltk-1.3.4-1/jpeg/jidctint.c **** 
3702:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3703:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
 11188              		.loc 1 3703 0 is_stmt 1
 11189 00ef 488D8424 		leaq	160(%rsp), %rax
 11189      A0000000 
 11190 00f7 48894424 		movq	%rax, 24(%rsp)
 11190      18
 11191              	.LVL1697:
 11192              	.L189:
3704:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
3705:fltk-1.3.4-1/jpeg/jidctint.c **** 
3706:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part: reverse the even part of the forward DCT.
3707:fltk-1.3.4-1/jpeg/jidctint.c ****      * The rotator is c(-6).
3708:fltk-1.3.4-1/jpeg/jidctint.c ****      */
3709:fltk-1.3.4-1/jpeg/jidctint.c **** 
3710:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[2];
 11193              		.loc 1 3710 0 discriminator 3
 11194 00fc 49637308 		movslq	8(%r11), %rsi
3711:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
 11195              		.loc 1 3711 0 discriminator 3
 11196 0100 49634B18 		movslq	24(%r11), %rcx
3704:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11197              		.loc 1 3704 0 discriminator 3
 11198 0104 488B4424 		movq	8(%rsp), %rax
 11198      08
 11199 0109 488B7C24 		movq	16(%rsp), %rdi
 11199      10
3712:fltk-1.3.4-1/jpeg/jidctint.c **** 
3713:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);       /* c6 */
3714:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
3715:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
3716:fltk-1.3.4-1/jpeg/jidctint.c **** 
3717:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3718:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
3719:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 11200              		.loc 1 3719 0 discriminator 3
 11201 010e 4D634310 		movslq	16(%r11), %r8
3720:fltk-1.3.4-1/jpeg/jidctint.c **** 
3721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (z2 + z3) << CONST_BITS;
3722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
3723:fltk-1.3.4-1/jpeg/jidctint.c **** 
3724:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp2;
3725:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
3726:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
3727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
3728:fltk-1.3.4-1/jpeg/jidctint.c **** 
3729:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part per figure 8; the matrix is unitary and hence its
3730:fltk-1.3.4-1/jpeg/jidctint.c ****      * transpose is its inverse.  i0..i3 are y7,y5,y3,y1 respectively.
3731:fltk-1.3.4-1/jpeg/jidctint.c ****      */
3732:fltk-1.3.4-1/jpeg/jidctint.c **** 
3733:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[7];
 11202              		.loc 1 3733 0 discriminator 3
 11203 0112 4D636B1C 		movslq	28(%r11), %r13
3734:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (INT32) wsptr[5];
3735:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[3];
 11204              		.loc 1 3735 0 discriminator 3
 11205 0116 49636B0C 		movslq	12(%r11), %rbp
3736:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = (INT32) wsptr[1];
 11206              		.loc 1 3736 0 discriminator 3
 11207 011a 4D636304 		movslq	4(%r11), %r12
3704:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11208              		.loc 1 3704 0 discriminator 3
 11209 011e 480338   		addq	(%rax), %rdi
 11210              	.LVL1698:
3713:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 11211              		.loc 1 3713 0 discriminator 3
 11212 0121 488D040E 		leaq	(%rsi,%rcx), %rax
3714:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 11213              		.loc 1 3714 0 discriminator 3
 11214 0125 4869F67E 		imulq	$6270, %rsi, %rsi
 11214      180000
 11215              	.LVL1699:
3713:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 11216              		.loc 1 3713 0 discriminator 3
 11217 012c 4869C051 		imulq	$4433, %rax, %rax
 11217      110000
 11218              	.LVL1700:
3715:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11219              		.loc 1 3715 0 discriminator 3
 11220 0133 4869C9DF 		imulq	$-15137, %rcx, %rcx
 11220      C4FFFF
 11221              	.LVL1701:
3737:fltk-1.3.4-1/jpeg/jidctint.c **** 
3738:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = tmp0 + tmp2;
 11222              		.loc 1 3738 0 discriminator 3
 11223 013a 498D5C2D 		leaq	0(%r13,%rbp), %rbx
 11223      00
3714:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 11224              		.loc 1 3714 0 discriminator 3
 11225 013f 4801C6   		addq	%rax, %rsi
 11226              	.LVL1702:
3715:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11227              		.loc 1 3715 0 discriminator 3
 11228 0142 4801C1   		addq	%rax, %rcx
 11229              	.LVL1703:
3718:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 11230              		.loc 1 3718 0 discriminator 3
 11231 0145 496303   		movslq	(%r11), %rax
 11232              	.LVL1704:
 11233 0148 4883C010 		addq	$16, %rax
 11234              	.LVL1705:
3721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
 11235              		.loc 1 3721 0 discriminator 3
 11236 014c 4A8D1400 		leaq	(%rax,%r8), %rdx
3722:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11237              		.loc 1 3722 0 discriminator 3
 11238 0150 4C29C0   		subq	%r8, %rax
 11239              	.LVL1706:
3734:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[3];
 11240              		.loc 1 3734 0 discriminator 3
 11241 0153 4D634314 		movslq	20(%r11), %r8
 11242              	.LVL1707:
3722:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11243              		.loc 1 3722 0 discriminator 3
 11244 0157 48C1E00D 		salq	$13, %rax
3726:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 11245              		.loc 1 3726 0 discriminator 3
 11246 015b 4C8D0C01 		leaq	(%rcx,%rax), %r9
3727:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11247              		.loc 1 3727 0 discriminator 3
 11248 015f 4829C8   		subq	%rcx, %rax
3721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
 11249              		.loc 1 3721 0 discriminator 3
 11250 0162 48C1E20D 		salq	$13, %rdx
 11251              	.LVL1708:
3724:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 11252              		.loc 1 3724 0 discriminator 3
 11253 0166 4C8D1416 		leaq	(%rsi,%rdx), %r10
 11254              	.LVL1709:
3725:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 11255              		.loc 1 3725 0 discriminator 3
 11256 016a 4829F2   		subq	%rsi, %rdx
 11257              	.LVL1710:
3739:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp1 + tmp3;
 11258              		.loc 1 3739 0 discriminator 3
 11259 016d 4B8D0C20 		leaq	(%r8,%r12), %rcx
 11260              	.LVL1711:
3740:fltk-1.3.4-1/jpeg/jidctint.c **** 
3741:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_1_175875602);       /*  c3 */
 11261              		.loc 1 3741 0 discriminator 3
 11262 0171 488D340B 		leaq	(%rbx,%rcx), %rsi
3742:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
3743:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, - FIX_0_390180644);          /* -c3+c5 */
 11263              		.loc 1 3743 0 discriminator 3
 11264 0175 4869C984 		imulq	$-3196, %rcx, %rcx
 11264      F3FFFF
 11265              	.LVL1712:
3741:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 11266              		.loc 1 3741 0 discriminator 3
 11267 017c 4C69F6A1 		imulq	$9633, %rsi, %r14
 11267      250000
 11268              	.LVL1713:
3742:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 11269              		.loc 1 3742 0 discriminator 3
 11270 0183 4869DB3B 		imulq	$-16069, %rbx, %rbx
 11270      C1FFFF
 11271              	.LVL1714:
3744:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
3745:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z1;
 11272              		.loc 1 3745 0 discriminator 3
 11273 018a 498D340E 		leaq	(%r14,%rcx), %rsi
3746:fltk-1.3.4-1/jpeg/jidctint.c **** 
3747:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223); /* -c3+c7 */
 11274              		.loc 1 3747 0 discriminator 3
 11275 018e 4B8D4C25 		leaq	0(%r13,%r12), %rcx
 11275      00
 11276              	.LVL1715:
3748:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 11277              		.loc 1 3748 0 discriminator 3
 11278 0193 4D69ED8E 		imulq	$2446, %r13, %r13
 11278      090000
 11279              	.LVL1716:
3744:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
 11280              		.loc 1 3744 0 discriminator 3
 11281 019a 4C01F3   		addq	%r14, %rbx
 11282              	.LVL1717:
3747:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 11283              		.loc 1 3747 0 discriminator 3
 11284 019d 4869C933 		imulq	$-7373, %rcx, %rcx
 11284      E3FFFF
 11285              	.LVL1718:
3749:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_1_501321110);        /*  c1+c3-c5-c7 */
 11286              		.loc 1 3749 0 discriminator 3
 11287 01a4 4D69E40B 		imulq	$12299, %r12, %r12
 11287      300000
 11288              	.LVL1719:
3750:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 11289              		.loc 1 3750 0 discriminator 3
 11290 01ab 4C8D340B 		leaq	(%rbx,%rcx), %r14
3751:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z1 + z3;
 11291              		.loc 1 3751 0 discriminator 3
 11292 01af 4801F1   		addq	%rsi, %rcx
 11293              	.LVL1720:
 11294 01b2 4901CC   		addq	%rcx, %r12
 11295              	.LVL1721:
3750:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 11296              		.loc 1 3750 0 discriminator 3
 11297 01b5 4D01F5   		addq	%r14, %r13
 11298              	.LVL1722:
3752:fltk-1.3.4-1/jpeg/jidctint.c **** 
3753:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447); /* -c1-c3 */
 11299              		.loc 1 3753 0 discriminator 3
 11300 01b8 4D8D3428 		leaq	(%r8,%rbp), %r14
3754:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
3755:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_3_072711026);        /*  c1+c3+c5-c7 */
3756:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
3757:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
3758:fltk-1.3.4-1/jpeg/jidctint.c **** 
3759:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage: inputs are tmp10..tmp13, tmp0..tmp3 */
3760:fltk-1.3.4-1/jpeg/jidctint.c **** 
3761:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp3,
 11301              		.loc 1 3761 0 discriminator 3
 11302 01bc 4B8D0C22 		leaq	(%r10,%r12), %rcx
3754:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 11303              		.loc 1 3754 0 discriminator 3
 11304 01c0 4D69C0B3 		imulq	$16819, %r8, %r8
 11304      410000
 11305              	.LVL1723:
3762:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3763:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3764:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp3,
 11306              		.loc 1 3764 0 discriminator 3
 11307 01c7 4D29E2   		subq	%r12, %r10
 11308              	.LVL1724:
3753:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 11309              		.loc 1 3753 0 discriminator 3
 11310 01ca 4D69F6FD 		imulq	$-20995, %r14, %r14
 11310      ADFFFF
 11311              	.LVL1725:
3761:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11312              		.loc 1 3761 0 discriminator 3
 11313 01d1 48C1F912 		sarq	$18, %rcx
3755:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 11314              		.loc 1 3755 0 discriminator 3
 11315 01d5 4869ED54 		imulq	$25172, %rbp, %rbp
 11315      620000
 11316              	.LVL1726:
3761:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11317              		.loc 1 3761 0 discriminator 3
 11318 01dc 81E1FF03 		andl	$1023, %ecx
 11318      0000
 11319 01e2 410FB60C 		movzbl	(%r15,%rcx), %ecx
 11319      0F
3756:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 11320              		.loc 1 3756 0 discriminator 3
 11321 01e7 4C01F6   		addq	%r14, %rsi
 11322              	.LVL1727:
3757:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11323              		.loc 1 3757 0 discriminator 3
 11324 01ea 4C01F3   		addq	%r14, %rbx
 11325              	.LVL1728:
3756:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 11326              		.loc 1 3756 0 discriminator 3
 11327 01ed 4901F0   		addq	%rsi, %r8
 11328              	.LVL1729:
3757:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11329              		.loc 1 3757 0 discriminator 3
 11330 01f0 4801DD   		addq	%rbx, %rbp
 11331              	.LVL1730:
 11332              		.loc 1 3764 0 discriminator 3
 11333 01f3 49C1FA12 		sarq	$18, %r10
 11334 01f7 4181E2FF 		andl	$1023, %r10d
 11334      030000
3761:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11335              		.loc 1 3761 0 discriminator 3
 11336 01fe 880F     		movb	%cl, (%rdi)
3765:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3766:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3767:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp2,
3768:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3769:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3770:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp2,
3771:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3772:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3773:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp1,
3774:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3775:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3776:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp1,
3777:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3778:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3779:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp13 + tmp0,
3780:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3781:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3782:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp13 - tmp0,
3783:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3784:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3785:fltk-1.3.4-1/jpeg/jidctint.c **** 
3786:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += DCTSIZE;		/* advance pointer to next row */
 11337              		.loc 1 3786 0 discriminator 3
 11338 0200 4983C320 		addq	$32, %r11
 11339              	.LVL1731:
3764:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11340              		.loc 1 3764 0 discriminator 3
 11341 0204 430FB60C 		movzbl	(%r15,%r10), %ecx
 11341      17
 11342 0209 48834424 		addq	$8, 8(%rsp)
 11342      0808
 11343 020f 884F07   		movb	%cl, 7(%rdi)
3767:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11344              		.loc 1 3767 0 discriminator 3
 11345 0212 498D0C29 		leaq	(%r9,%rbp), %rcx
3770:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11346              		.loc 1 3770 0 discriminator 3
 11347 0216 4929E9   		subq	%rbp, %r9
 11348              	.LVL1732:
 11349 0219 49C1F912 		sarq	$18, %r9
3767:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11350              		.loc 1 3767 0 discriminator 3
 11351 021d 48C1F912 		sarq	$18, %rcx
3770:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11352              		.loc 1 3770 0 discriminator 3
 11353 0221 4181E1FF 		andl	$1023, %r9d
 11353      030000
3767:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11354              		.loc 1 3767 0 discriminator 3
 11355 0228 81E1FF03 		andl	$1023, %ecx
 11355      0000
 11356 022e 410FB60C 		movzbl	(%r15,%rcx), %ecx
 11356      0F
 11357 0233 884F01   		movb	%cl, 1(%rdi)
3770:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11358              		.loc 1 3770 0 discriminator 3
 11359 0236 430FB60C 		movzbl	(%r15,%r9), %ecx
 11359      0F
 11360 023b 884F06   		movb	%cl, 6(%rdi)
3773:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11361              		.loc 1 3773 0 discriminator 3
 11362 023e 4A8D0C00 		leaq	(%rax,%r8), %rcx
3776:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11363              		.loc 1 3776 0 discriminator 3
 11364 0242 4C29C0   		subq	%r8, %rax
 11365              	.LVL1733:
 11366 0245 48C1F812 		sarq	$18, %rax
3773:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11367              		.loc 1 3773 0 discriminator 3
 11368 0249 48C1F912 		sarq	$18, %rcx
3776:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11369              		.loc 1 3776 0 discriminator 3
 11370 024d 25FF0300 		andl	$1023, %eax
 11370      00
3773:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11371              		.loc 1 3773 0 discriminator 3
 11372 0252 81E1FF03 		andl	$1023, %ecx
 11372      0000
 11373 0258 410FB60C 		movzbl	(%r15,%rcx), %ecx
 11373      0F
 11374 025d 884F02   		movb	%cl, 2(%rdi)
3776:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11375              		.loc 1 3776 0 discriminator 3
 11376 0260 410FB604 		movzbl	(%r15,%rax), %eax
 11376      07
 11377 0265 884705   		movb	%al, 5(%rdi)
3779:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11378              		.loc 1 3779 0 discriminator 3
 11379 0268 4A8D042A 		leaq	(%rdx,%r13), %rax
3782:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11380              		.loc 1 3782 0 discriminator 3
 11381 026c 4C29EA   		subq	%r13, %rdx
 11382              	.LVL1734:
 11383 026f 48C1FA12 		sarq	$18, %rdx
3779:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11384              		.loc 1 3779 0 discriminator 3
 11385 0273 48C1F812 		sarq	$18, %rax
3782:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11386              		.loc 1 3782 0 discriminator 3
 11387 0277 81E2FF03 		andl	$1023, %edx
 11387      0000
3779:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11388              		.loc 1 3779 0 discriminator 3
 11389 027d 25FF0300 		andl	$1023, %eax
 11389      00
3703:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11390              		.loc 1 3703 0 discriminator 3
 11391 0282 4C3B5C24 		cmpq	24(%rsp), %r11
 11391      18
3779:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11392              		.loc 1 3779 0 discriminator 3
 11393 0287 410FB604 		movzbl	(%r15,%rax), %eax
 11393      07
 11394 028c 884703   		movb	%al, 3(%rdi)
3782:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11395              		.loc 1 3782 0 discriminator 3
 11396 028f 410FB604 		movzbl	(%r15,%rdx), %eax
 11396      17
 11397 0294 884704   		movb	%al, 4(%rdi)
3703:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11398              		.loc 1 3703 0 discriminator 3
 11399 0297 0F855FFE 		jne	.L189
 11399      FFFF
3787:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3788:fltk-1.3.4-1/jpeg/jidctint.c **** }
 11400              		.loc 1 3788 0
 11401 029d 488B8424 		movq	168(%rsp), %rax
 11401      A8000000 
 11402 02a5 64483304 		xorq	%fs:40, %rax
 11402      25280000 
 11402      00
 11403 02ae 7512     		jne	.L194
 11404 02b0 4881C4B8 		addq	$184, %rsp
 11404      000000
 11405              		.cfi_remember_state
 11406              		.cfi_def_cfa_offset 56
 11407 02b7 5B       		popq	%rbx
 11408              		.cfi_def_cfa_offset 48
 11409 02b8 5D       		popq	%rbp
 11410              		.cfi_def_cfa_offset 40
 11411              	.LVL1735:
 11412 02b9 415C     		popq	%r12
 11413              		.cfi_def_cfa_offset 32
 11414              	.LVL1736:
 11415 02bb 415D     		popq	%r13
 11416              		.cfi_def_cfa_offset 24
 11417              	.LVL1737:
 11418 02bd 415E     		popq	%r14
 11419              		.cfi_def_cfa_offset 16
 11420              	.LVL1738:
 11421 02bf 415F     		popq	%r15
 11422              		.cfi_def_cfa_offset 8
 11423              	.LVL1739:
 11424 02c1 C3       		ret
 11425              	.LVL1740:
 11426              	.L194:
 11427              		.cfi_restore_state
 11428 02c2 E8000000 		call	__stack_chk_fail
 11428      00
 11429              	.LVL1741:
 11430              		.cfi_endproc
 11431              	.LFE81:
 11433              		.section	.text.unlikely.jpeg_idct_8x4
 11434              	.LCOLDE20:
 11435              		.section	.text.jpeg_idct_8x4
 11436              	.LHOTE20:
 11437              		.section	.text.unlikely.jpeg_idct_6x3,"ax",@progbits
 11438              	.LCOLDB21:
 11439              		.section	.text.jpeg_idct_6x3,"ax",@progbits
 11440              	.LHOTB21:
 11441              		.p2align 4,,15
 11442              		.globl	jpeg_idct_6x3
 11444              	jpeg_idct_6x3:
 11445              	.LFB82:
3789:fltk-1.3.4-1/jpeg/jidctint.c **** 
3790:fltk-1.3.4-1/jpeg/jidctint.c **** 
3791:fltk-1.3.4-1/jpeg/jidctint.c **** /*
3792:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
3793:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 6x3 output block.
3794:fltk-1.3.4-1/jpeg/jidctint.c ****  *
3795:fltk-1.3.4-1/jpeg/jidctint.c ****  * 3-point IDCT in pass 1 (columns), 6-point in pass 2 (rows).
3796:fltk-1.3.4-1/jpeg/jidctint.c ****  */
3797:fltk-1.3.4-1/jpeg/jidctint.c **** 
3798:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
3799:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_6x3 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
3800:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
3801:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
3802:fltk-1.3.4-1/jpeg/jidctint.c **** {
 11446              		.loc 1 3802 0
 11447              		.cfi_startproc
 11448              	.LVL1742:
 11449 0000 4157     		pushq	%r15
 11450              		.cfi_def_cfa_offset 16
 11451              		.cfi_offset 15, -16
 11452 0002 4156     		pushq	%r14
 11453              		.cfi_def_cfa_offset 24
 11454              		.cfi_offset 14, -24
 11455 0004 4155     		pushq	%r13
 11456              		.cfi_def_cfa_offset 32
 11457              		.cfi_offset 13, -32
 11458 0006 4154     		pushq	%r12
 11459              		.cfi_def_cfa_offset 40
 11460              		.cfi_offset 12, -40
 11461 0008 55       		pushq	%rbp
 11462              		.cfi_def_cfa_offset 48
 11463              		.cfi_offset 6, -48
 11464 0009 53       		pushq	%rbx
 11465              		.cfi_def_cfa_offset 56
 11466              		.cfi_offset 3, -56
 11467 000a 4883EC58 		subq	$88, %rsp
 11468              		.cfi_def_cfa_offset 144
3803:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
3804:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
3805:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
3806:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
3807:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
3808:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
3809:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 11469              		.loc 1 3809 0
 11470 000e 4C8B97B8 		movq	440(%rdi), %r10
 11470      010000
3810:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
3811:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[6*3];	/* buffers data between passes */
3812:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
3813:fltk-1.3.4-1/jpeg/jidctint.c **** 
3814:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
3815:fltk-1.3.4-1/jpeg/jidctint.c ****    * 3-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/6).
3816:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3817:fltk-1.3.4-1/jpeg/jidctint.c **** 
3818:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
3819:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 11471              		.loc 1 3819 0
 11472 0015 4C8B4E58 		movq	88(%rsi), %r9
3802:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
 11473              		.loc 1 3802 0
 11474 0019 64488B04 		movq	%fs:40, %rax
 11474      25280000 
 11474      00
 11475 0022 48894424 		movq	%rax, 72(%rsp)
 11475      48
 11476 0027 31C0     		xorl	%eax, %eax
3820:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3821:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 6; ctr++, inptr++, quantptr++, wsptr++) {
 11477              		.loc 1 3821 0
 11478 0029 4C8D5C24 		leaq	24(%rsp), %r11
 11478      18
3820:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 11479              		.loc 1 3820 0
 11480 002e 4889E7   		movq	%rsp, %rdi
 11481              	.LVL1743:
3809:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 11482              		.loc 1 3809 0
 11483 0031 4983EA80 		subq	$-128, %r10
 11484              	.LVL1744:
 11485              		.p2align 4,,10
 11486 0035 0F1F00   		.p2align 3
 11487              	.L196:
3822:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3823:fltk-1.3.4-1/jpeg/jidctint.c **** 
3824:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
3825:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
3826:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3827:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-1);
3828:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
3829:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp2, FIX(0.707106781)); /* c2 */
 11488              		.loc 1 3829 0 discriminator 3
 11489 0038 0FBF5A20 		movswl	32(%rdx), %ebx
3824:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 11490              		.loc 1 3824 0 discriminator 3
 11491 003c 0FBF02   		movswl	(%rdx), %eax
3821:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11492              		.loc 1 3821 0 discriminator 3
 11493 003f 4883C704 		addq	$4, %rdi
 11494              	.LVL1745:
 11495              		.loc 1 3829 0 discriminator 3
 11496 0043 410FAF59 		imull	64(%r9), %ebx
 11496      40
3830:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
3831:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
3832:fltk-1.3.4-1/jpeg/jidctint.c **** 
3833:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3834:fltk-1.3.4-1/jpeg/jidctint.c **** 
3835:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
3836:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp12, FIX(1.224744871)); /* c1 */
 11497              		.loc 1 3836 0 discriminator 3
 11498 0048 0FBF7210 		movswl	16(%rdx), %esi
3821:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11499              		.loc 1 3821 0 discriminator 3
 11500 004c 4983C104 		addq	$4, %r9
 11501              	.LVL1746:
 11502 0050 4883C202 		addq	$2, %rdx
 11503              	.LVL1747:
3824:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 11504              		.loc 1 3824 0 discriminator 3
 11505 0054 410FAF41 		imull	-4(%r9), %eax
 11505      FC
 11506              		.loc 1 3836 0 discriminator 3
 11507 0059 410FAF71 		imull	28(%r9), %esi
 11507      1C
3829:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
 11508              		.loc 1 3829 0 discriminator 3
 11509 005e 4863DB   		movslq	%ebx, %rbx
 11510 0061 4869DBA1 		imulq	$5793, %rbx, %rbx
 11510      160000
3824:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 11511              		.loc 1 3824 0 discriminator 3
 11512 0068 4898     		cltq
 11513              	.LVL1748:
 11514              		.loc 1 3836 0 discriminator 3
 11515 006a 4863F6   		movslq	%esi, %rsi
3825:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 11516              		.loc 1 3825 0 discriminator 3
 11517 006d 48C1E00D 		salq	$13, %rax
 11518              	.LVL1749:
3827:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 11519              		.loc 1 3827 0 discriminator 3
 11520 0071 48050004 		addq	$1024, %rax
 11520      0000
 11521              	.LVL1750:
 11522              		.loc 1 3836 0 discriminator 3
 11523 0077 4869F631 		imulq	$10033, %rsi, %rsi
 11523      270000
3830:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
 11524              		.loc 1 3830 0 discriminator 3
 11525 007e 488D2C18 		leaq	(%rax,%rbx), %rbp
 11526              	.LVL1751:
3837:fltk-1.3.4-1/jpeg/jidctint.c **** 
3838:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3839:fltk-1.3.4-1/jpeg/jidctint.c **** 
3840:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*0] = (int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS-PASS1_BITS);
3841:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
3842:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 11527              		.loc 1 3842 0 discriminator 3
 11528 0082 4829D8   		subq	%rbx, %rax
 11529              	.LVL1752:
 11530 0085 4829D8   		subq	%rbx, %rax
 11531 0088 48C1F80B 		sarq	$11, %rax
 11532 008c 894714   		movl	%eax, 20(%rdi)
 11533              	.LVL1753:
3840:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 11534              		.loc 1 3840 0 discriminator 3
 11535 008f 4C8D6435 		leaq	0(%rbp,%rsi), %r12
 11535      00
3841:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 11536              		.loc 1 3841 0 discriminator 3
 11537 0094 4829F5   		subq	%rsi, %rbp
 11538              	.LVL1754:
 11539 0097 4889EE   		movq	%rbp, %rsi
 11540              	.LVL1755:
3840:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 11541              		.loc 1 3840 0 discriminator 3
 11542 009a 49C1FC0B 		sarq	$11, %r12
3841:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 11543              		.loc 1 3841 0 discriminator 3
 11544 009e 48C1FE0B 		sarq	$11, %rsi
3840:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*2] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 11545              		.loc 1 3840 0 discriminator 3
 11546 00a2 448967FC 		movl	%r12d, -4(%rdi)
3841:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1] = (int) RIGHT_SHIFT(tmp2, CONST_BITS-PASS1_BITS);
 11547              		.loc 1 3841 0 discriminator 3
 11548 00a6 89772C   		movl	%esi, 44(%rdi)
 11549              	.LVL1756:
3821:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11550              		.loc 1 3821 0 discriminator 3
 11551 00a9 4C39DF   		cmpq	%r11, %rdi
 11552 00ac 758A     		jne	.L196
3843:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3844:fltk-1.3.4-1/jpeg/jidctint.c ****   
3845:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 3 rows from work array, store into output array.
3846:fltk-1.3.4-1/jpeg/jidctint.c ****    * 6-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/12).
3847:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3848:fltk-1.3.4-1/jpeg/jidctint.c **** 
3849:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3850:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 3; ctr++) {
 11553              		.loc 1 3850 0
 11554 00ae 4C8D5C24 		leaq	72(%rsp), %r11
 11554      48
 11555 00b3 4589C0   		movl	%r8d, %r8d
3821:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11556              		.loc 1 3821 0
 11557 00b6 4889E7   		movq	%rsp, %rdi
 11558              	.LVL1757:
 11559              	.L197:
3851:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
3852:fltk-1.3.4-1/jpeg/jidctint.c **** 
3853:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3854:fltk-1.3.4-1/jpeg/jidctint.c **** 
3855:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3856:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
3857:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
3858:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[4];
3859:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp2, FIX(0.707106781));   /* c4 */
 11560              		.loc 1 3859 0 discriminator 3
 11561 00b9 48635F10 		movslq	16(%rdi), %rbx
3856:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 11562              		.loc 1 3856 0 discriminator 3
 11563 00bd 486317   		movslq	(%rdi), %rdx
3851:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11564              		.loc 1 3851 0 discriminator 3
 11565 00c0 4D89C1   		movq	%r8, %r9
3860:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
3861:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp10 - tmp10;
3862:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[2];
3863:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp10, FIX(1.224744871));   /* c2 */
3864:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
3865:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
3866:fltk-1.3.4-1/jpeg/jidctint.c **** 
3867:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3868:fltk-1.3.4-1/jpeg/jidctint.c **** 
3869:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
 11566              		.loc 1 3869 0 discriminator 3
 11567 00c3 48636F04 		movslq	4(%rdi), %rbp
3870:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
3871:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 11568              		.loc 1 3871 0 discriminator 3
 11569 00c7 4C637714 		movslq	20(%rdi), %r14
3870:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 11570              		.loc 1 3870 0 discriminator 3
 11571 00cb 4C637F0C 		movslq	12(%rdi), %r15
3851:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11572              		.loc 1 3851 0 discriminator 3
 11573 00cf 4C0309   		addq	(%rcx), %r9
 11574              	.LVL1758:
3859:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 11575              		.loc 1 3859 0 discriminator 3
 11576 00d2 4869DBA1 		imulq	$5793, %rbx, %rbx
 11576      160000
3856:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 11577              		.loc 1 3856 0 discriminator 3
 11578 00d9 4883C210 		addq	$16, %rdx
 11579              	.LVL1759:
3857:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[4];
 11580              		.loc 1 3857 0 discriminator 3
 11581 00dd 48C1E20D 		salq	$13, %rdx
 11582              	.LVL1760:
3872:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 + z3, FIX(0.366025404)); /* c5 */
3873:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 11583              		.loc 1 3873 0 discriminator 3
 11584 00e1 4E8D643D 		leaq	0(%rbp,%r15), %r12
 11584      00
3860:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp10 - tmp10;
 11585              		.loc 1 3860 0 discriminator 3
 11586 00e6 488D341A 		leaq	(%rdx,%rbx), %rsi
 11587              	.LVL1761:
3861:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[2];
 11588              		.loc 1 3861 0 discriminator 3
 11589 00ea 4829DA   		subq	%rbx, %rdx
 11590              	.LVL1762:
 11591              		.loc 1 3873 0 discriminator 3
 11592 00ed 49C1E40D 		salq	$13, %r12
3861:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[2];
 11593              		.loc 1 3861 0 discriminator 3
 11594 00f1 4889D0   		movq	%rdx, %rax
 11595 00f4 4829D8   		subq	%rbx, %rax
 11596              	.LVL1763:
3863:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 11597              		.loc 1 3863 0 discriminator 3
 11598 00f7 48635F08 		movslq	8(%rdi), %rbx
 11599              	.LVL1764:
 11600 00fb 4869DB31 		imulq	$10033, %rbx, %rbx
 11600      270000
 11601              	.LVL1765:
3864:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
 11602              		.loc 1 3864 0 discriminator 3
 11603 0102 488D141E 		leaq	(%rsi,%rbx), %rdx
 11604              	.LVL1766:
3865:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11605              		.loc 1 3865 0 discriminator 3
 11606 0106 4829DE   		subq	%rbx, %rsi
 11607              	.LVL1767:
3872:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 11608              		.loc 1 3872 0 discriminator 3
 11609 0109 4A8D5C35 		leaq	0(%rbp,%r14), %rbx
 11609      00
 11610              	.LVL1768:
3874:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
3875:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << CONST_BITS;
 11611              		.loc 1 3875 0 discriminator 3
 11612 010e 4C29FD   		subq	%r15, %rbp
 11613              	.LVL1769:
3872:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 11614              		.loc 1 3872 0 discriminator 3
 11615 0111 4C69EBB6 		imulq	$2998, %rbx, %r13
 11615      0B0000
 11616              	.LVL1770:
3874:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 11617              		.loc 1 3874 0 discriminator 3
 11618 0118 4C89F3   		movq	%r14, %rbx
 11619              		.loc 1 3875 0 discriminator 3
 11620 011b 4C29F5   		subq	%r14, %rbp
3874:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 11621              		.loc 1 3874 0 discriminator 3
 11622 011e 4C29FB   		subq	%r15, %rbx
 11623              		.loc 1 3875 0 discriminator 3
 11624 0121 48C1E50D 		salq	$13, %rbp
3874:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 11625              		.loc 1 3874 0 discriminator 3
 11626 0125 48C1E30D 		salq	$13, %rbx
3873:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 11627              		.loc 1 3873 0 discriminator 3
 11628 0129 4D01EC   		addq	%r13, %r12
 11629              	.LVL1771:
3874:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 11630              		.loc 1 3874 0 discriminator 3
 11631 012c 4C01EB   		addq	%r13, %rbx
 11632              	.LVL1772:
3876:fltk-1.3.4-1/jpeg/jidctint.c **** 
3877:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3878:fltk-1.3.4-1/jpeg/jidctint.c **** 
3879:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
 11633              		.loc 1 3879 0 discriminator 3
 11634 012f 4E8D2C22 		leaq	(%rdx,%r12), %r13
3880:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3881:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3882:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
 11635              		.loc 1 3882 0 discriminator 3
 11636 0133 4C29E2   		subq	%r12, %rdx
 11637              	.LVL1773:
 11638 0136 48C1FA12 		sarq	$18, %rdx
3879:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11639              		.loc 1 3879 0 discriminator 3
 11640 013a 49C1FD12 		sarq	$18, %r13
 11641              		.loc 1 3882 0 discriminator 3
 11642 013e 81E2FF03 		andl	$1023, %edx
 11642      0000
3879:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11643              		.loc 1 3879 0 discriminator 3
 11644 0144 4181E5FF 		andl	$1023, %r13d
 11644      030000
 11645 014b 470FB62C 		movzbl	(%r10,%r13), %r13d
 11645      2A
 11646 0150 458829   		movb	%r13b, (%r9)
 11647              		.loc 1 3882 0 discriminator 3
 11648 0153 410FB614 		movzbl	(%r10,%rdx), %edx
 11648      12
 11649 0158 41885105 		movb	%dl, 5(%r9)
3883:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3884:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3885:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp1,
 11650              		.loc 1 3885 0 discriminator 3
 11651 015c 488D1428 		leaq	(%rax,%rbp), %rdx
3886:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3887:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3888:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp1,
 11652              		.loc 1 3888 0 discriminator 3
 11653 0160 4829E8   		subq	%rbp, %rax
 11654              	.LVL1774:
3885:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11655              		.loc 1 3885 0 discriminator 3
 11656 0163 48C1FA12 		sarq	$18, %rdx
 11657 0167 81E2FF03 		andl	$1023, %edx
 11657      0000
 11658 016d 410FB614 		movzbl	(%r10,%rdx), %edx
 11658      12
 11659 0172 41885101 		movb	%dl, 1(%r9)
 11660              		.loc 1 3888 0 discriminator 3
 11661 0176 4889C2   		movq	%rax, %rdx
 11662 0179 48C1FA12 		sarq	$18, %rdx
 11663 017d 81E2FF03 		andl	$1023, %edx
 11663      0000
 11664 0183 410FB604 		movzbl	(%r10,%rdx), %eax
 11664      12
 11665 0188 41884104 		movb	%al, 4(%r9)
3889:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3890:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3891:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp2,
 11666              		.loc 1 3891 0 discriminator 3
 11667 018c 488D041E 		leaq	(%rsi,%rbx), %rax
 11668 0190 48C1F812 		sarq	$18, %rax
 11669 0194 25FF0300 		andl	$1023, %eax
 11669      00
 11670 0199 410FB604 		movzbl	(%r10,%rax), %eax
 11670      02
 11671 019e 41884102 		movb	%al, 2(%r9)
3892:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3893:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3894:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp2,
 11672              		.loc 1 3894 0 discriminator 3
 11673 01a2 4889F0   		movq	%rsi, %rax
 11674 01a5 4829D8   		subq	%rbx, %rax
 11675 01a8 48C1F812 		sarq	$18, %rax
 11676 01ac 25FF0300 		andl	$1023, %eax
 11676      00
3895:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
3896:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3897:fltk-1.3.4-1/jpeg/jidctint.c **** 
3898:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 6;		/* advance pointer to next row */
 11677              		.loc 1 3898 0 discriminator 3
 11678 01b1 4883C718 		addq	$24, %rdi
 11679              	.LVL1775:
 11680 01b5 4883C108 		addq	$8, %rcx
3894:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11681              		.loc 1 3894 0 discriminator 3
 11682 01b9 410FB604 		movzbl	(%r10,%rax), %eax
 11682      02
3850:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11683              		.loc 1 3850 0 discriminator 3
 11684 01be 4C39DF   		cmpq	%r11, %rdi
3894:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 11685              		.loc 1 3894 0 discriminator 3
 11686 01c1 41884103 		movb	%al, 3(%r9)
3850:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11687              		.loc 1 3850 0 discriminator 3
 11688 01c5 0F85EEFE 		jne	.L197
 11688      FFFF
3899:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3900:fltk-1.3.4-1/jpeg/jidctint.c **** }
 11689              		.loc 1 3900 0
 11690 01cb 488B4424 		movq	72(%rsp), %rax
 11690      48
 11691 01d0 64483304 		xorq	%fs:40, %rax
 11691      25280000 
 11691      00
 11692 01d9 750F     		jne	.L202
 11693 01db 4883C458 		addq	$88, %rsp
 11694              		.cfi_remember_state
 11695              		.cfi_def_cfa_offset 56
 11696 01df 5B       		popq	%rbx
 11697              		.cfi_def_cfa_offset 48
 11698              	.LVL1776:
 11699 01e0 5D       		popq	%rbp
 11700              		.cfi_def_cfa_offset 40
 11701              	.LVL1777:
 11702 01e1 415C     		popq	%r12
 11703              		.cfi_def_cfa_offset 32
 11704              	.LVL1778:
 11705 01e3 415D     		popq	%r13
 11706              		.cfi_def_cfa_offset 24
 11707 01e5 415E     		popq	%r14
 11708              		.cfi_def_cfa_offset 16
 11709              	.LVL1779:
 11710 01e7 415F     		popq	%r15
 11711              		.cfi_def_cfa_offset 8
 11712              	.LVL1780:
 11713 01e9 C3       		ret
 11714              	.LVL1781:
 11715              	.L202:
 11716              		.cfi_restore_state
 11717 01ea E8000000 		call	__stack_chk_fail
 11717      00
 11718              	.LVL1782:
 11719              		.cfi_endproc
 11720              	.LFE82:
 11722              		.section	.text.unlikely.jpeg_idct_6x3
 11723              	.LCOLDE21:
 11724              		.section	.text.jpeg_idct_6x3
 11725              	.LHOTE21:
 11726              		.section	.text.unlikely.jpeg_idct_4x2,"ax",@progbits
 11727              	.LCOLDB22:
 11728              		.section	.text.jpeg_idct_4x2,"ax",@progbits
 11729              	.LHOTB22:
 11730              		.p2align 4,,15
 11731              		.globl	jpeg_idct_4x2
 11733              	jpeg_idct_4x2:
 11734              	.LFB83:
3901:fltk-1.3.4-1/jpeg/jidctint.c **** 
3902:fltk-1.3.4-1/jpeg/jidctint.c **** 
3903:fltk-1.3.4-1/jpeg/jidctint.c **** /*
3904:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
3905:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 4x2 output block.
3906:fltk-1.3.4-1/jpeg/jidctint.c ****  *
3907:fltk-1.3.4-1/jpeg/jidctint.c ****  * 2-point IDCT in pass 1 (columns), 4-point in pass 2 (rows).
3908:fltk-1.3.4-1/jpeg/jidctint.c ****  */
3909:fltk-1.3.4-1/jpeg/jidctint.c **** 
3910:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
3911:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_4x2 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
3912:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
3913:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
3914:fltk-1.3.4-1/jpeg/jidctint.c **** {
 11735              		.loc 1 3914 0
 11736              		.cfi_startproc
 11737              	.LVL1783:
 11738 0000 55       		pushq	%rbp
 11739              		.cfi_def_cfa_offset 16
 11740              		.cfi_offset 6, -16
 11741 0001 53       		pushq	%rbx
 11742              		.cfi_def_cfa_offset 24
 11743              		.cfi_offset 3, -24
 11744 0002 4883EC58 		subq	$88, %rsp
 11745              		.cfi_def_cfa_offset 112
3915:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
3916:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
3917:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
3918:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
3919:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 * wsptr;
3920:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
3921:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 11746              		.loc 1 3921 0
 11747 0006 4C8B8FB8 		movq	440(%rdi), %r9
 11747      010000
3922:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
3923:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 workspace[4*2];	/* buffers data between passes */
3924:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
3925:fltk-1.3.4-1/jpeg/jidctint.c **** 
3926:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array. */
3927:fltk-1.3.4-1/jpeg/jidctint.c **** 
3928:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
3929:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 11748              		.loc 1 3929 0
 11749 000d 4C8B5658 		movq	88(%rsi), %r10
3914:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
 11750              		.loc 1 3914 0
 11751 0011 64488B04 		movq	%fs:40, %rax
 11751      25280000 
 11751      00
 11752 001a 48894424 		movq	%rax, 72(%rsp)
 11752      48
 11753 001f 31C0     		xorl	%eax, %eax
3921:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 11754              		.loc 1 3921 0
 11755 0021 4983E980 		subq	$-128, %r9
 11756              	.LVL1784:
 11757              	.L204:
3930:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3931:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 4; ctr++, inptr++, quantptr++, wsptr++) {
3932:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3933:fltk-1.3.4-1/jpeg/jidctint.c **** 
3934:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 11758              		.loc 1 3934 0 discriminator 3
 11759 0025 0FBF3402 		movswl	(%rdx,%rax), %esi
3935:fltk-1.3.4-1/jpeg/jidctint.c **** 
3936:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3937:fltk-1.3.4-1/jpeg/jidctint.c **** 
3938:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 11760              		.loc 1 3938 0 discriminator 3
 11761 0029 0FBF7C02 		movswl	16(%rdx,%rax), %edi
 11761      10
3934:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11762              		.loc 1 3934 0 discriminator 3
 11763 002e 410FAF34 		imull	(%r10,%rax,2), %esi
 11763      42
 11764              		.loc 1 3938 0 discriminator 3
 11765 0033 410FAF7C 		imull	32(%r10,%rax,2), %edi
 11765      4220
3934:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11766              		.loc 1 3934 0 discriminator 3
 11767 0039 4863F6   		movslq	%esi, %rsi
 11768              	.LVL1785:
 11769              		.loc 1 3938 0 discriminator 3
 11770 003c 4863FF   		movslq	%edi, %rdi
 11771              	.LVL1786:
3939:fltk-1.3.4-1/jpeg/jidctint.c **** 
3940:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3941:fltk-1.3.4-1/jpeg/jidctint.c **** 
3942:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*0] = tmp10 + tmp0;
 11772              		.loc 1 3942 0 discriminator 3
 11773 003f 4C8D1C3E 		leaq	(%rsi,%rdi), %r11
3943:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*1] = tmp10 - tmp0;
 11774              		.loc 1 3943 0 discriminator 3
 11775 0043 4829FE   		subq	%rdi, %rsi
 11776              	.LVL1787:
 11777 0046 48897484 		movq	%rsi, 32(%rsp,%rax,4)
 11777      20
 11778              	.LVL1788:
3942:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*1] = tmp10 - tmp0;
 11779              		.loc 1 3942 0 discriminator 3
 11780 004b 4C891C84 		movq	%r11, (%rsp,%rax,4)
 11781 004f 4883C002 		addq	$2, %rax
 11782              	.LVL1789:
3931:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11783              		.loc 1 3931 0 discriminator 3
 11784 0053 4883F808 		cmpq	$8, %rax
 11785 0057 75CC     		jne	.L204
3944:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3945:fltk-1.3.4-1/jpeg/jidctint.c **** 
3946:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 2 rows from work array, store into output array.
3947:fltk-1.3.4-1/jpeg/jidctint.c ****    * 4-point IDCT kernel,
3948:fltk-1.3.4-1/jpeg/jidctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point IDCT].
3949:fltk-1.3.4-1/jpeg/jidctint.c ****    */
3950:fltk-1.3.4-1/jpeg/jidctint.c **** 
3951:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
3952:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 2; ctr++) {
 11786              		.loc 1 3952 0
 11787 0059 4C8D5C24 		leaq	64(%rsp), %r11
 11787      40
 11788 005e 4589C0   		movl	%r8d, %r8d
3931:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 11789              		.loc 1 3931 0
 11790 0061 4889E6   		movq	%rsp, %rsi
 11791              	.LVL1790:
 11792              	.L205:
3953:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
3954:fltk-1.3.4-1/jpeg/jidctint.c **** 
3955:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
3956:fltk-1.3.4-1/jpeg/jidctint.c **** 
3957:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
3958:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = wsptr[0] + (ONE << 2);
 11793              		.loc 1 3958 0 discriminator 3
 11794 0064 488B06   		movq	(%rsi), %rax
3959:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = wsptr[2];
 11795              		.loc 1 3959 0 discriminator 3
 11796 0067 488B7E10 		movq	16(%rsi), %rdi
3953:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11797              		.loc 1 3953 0 discriminator 3
 11798 006b 4D89C2   		movq	%r8, %r10
3960:fltk-1.3.4-1/jpeg/jidctint.c **** 
3961:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (tmp0 + tmp2) << CONST_BITS;
3962:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
3963:fltk-1.3.4-1/jpeg/jidctint.c **** 
3964:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
3965:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Same rotation as in the even part of the 8x8 LL&M IDCT */
3966:fltk-1.3.4-1/jpeg/jidctint.c **** 
3967:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = wsptr[1];
 11799              		.loc 1 3967 0 discriminator 3
 11800 006e 488B5E08 		movq	8(%rsi), %rbx
3953:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11801              		.loc 1 3953 0 discriminator 3
 11802 0072 4C0311   		addq	(%rcx), %r10
 11803              	.LVL1791:
3968:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = wsptr[3];
3969:fltk-1.3.4-1/jpeg/jidctint.c **** 
3970:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);   /* c6 */
3971:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
3972:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
3973:fltk-1.3.4-1/jpeg/jidctint.c **** 
3974:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
3975:fltk-1.3.4-1/jpeg/jidctint.c **** 
3976:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
3977:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
3978:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3979:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
3980:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
3981:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3982:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp2,
3983:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
3984:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3985:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp2,
3986:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
3987:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
3988:fltk-1.3.4-1/jpeg/jidctint.c **** 
3989:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 4;		/* advance pointer to next row */
 11804              		.loc 1 3989 0 discriminator 3
 11805 0075 4883C620 		addq	$32, %rsi
 11806              	.LVL1792:
 11807 0079 4883C108 		addq	$8, %rcx
3958:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = wsptr[2];
 11808              		.loc 1 3958 0 discriminator 3
 11809 007d 4883C004 		addq	$4, %rax
 11810              	.LVL1793:
3961:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 11811              		.loc 1 3961 0 discriminator 3
 11812 0081 488D1438 		leaq	(%rax,%rdi), %rdx
3962:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11813              		.loc 1 3962 0 discriminator 3
 11814 0085 4829F8   		subq	%rdi, %rax
 11815              	.LVL1794:
3968:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11816              		.loc 1 3968 0 discriminator 3
 11817 0088 488B7EF8 		movq	-8(%rsi), %rdi
 11818              	.LVL1795:
3962:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11819              		.loc 1 3962 0 discriminator 3
 11820 008c 48C1E00D 		salq	$13, %rax
3961:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 11821              		.loc 1 3961 0 discriminator 3
 11822 0090 48C1E20D 		salq	$13, %rdx
 11823              	.LVL1796:
3970:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 11824              		.loc 1 3970 0 discriminator 3
 11825 0094 488D2C3B 		leaq	(%rbx,%rdi), %rbp
3971:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 11826              		.loc 1 3971 0 discriminator 3
 11827 0098 4869DB7E 		imulq	$6270, %rbx, %rbx
 11827      180000
 11828              	.LVL1797:
3970:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 11829              		.loc 1 3970 0 discriminator 3
 11830 009f 4869ED51 		imulq	$4433, %rbp, %rbp
 11830      110000
 11831              	.LVL1798:
3972:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11832              		.loc 1 3972 0 discriminator 3
 11833 00a6 4869FFDF 		imulq	$-15137, %rdi, %rdi
 11833      C4FFFF
 11834              	.LVL1799:
3971:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 11835              		.loc 1 3971 0 discriminator 3
 11836 00ad 4801EB   		addq	%rbp, %rbx
 11837              	.LVL1800:
3972:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11838              		.loc 1 3972 0 discriminator 3
 11839 00b0 4801EF   		addq	%rbp, %rdi
 11840              	.LVL1801:
3976:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11841              		.loc 1 3976 0 discriminator 3
 11842 00b3 488D2C1A 		leaq	(%rdx,%rbx), %rbp
 11843              	.LVL1802:
3979:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11844              		.loc 1 3979 0 discriminator 3
 11845 00b7 4829DA   		subq	%rbx, %rdx
 11846              	.LVL1803:
 11847 00ba 48C1FA10 		sarq	$16, %rdx
3976:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11848              		.loc 1 3976 0 discriminator 3
 11849 00be 48C1FD10 		sarq	$16, %rbp
3979:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11850              		.loc 1 3979 0 discriminator 3
 11851 00c2 81E2FF03 		andl	$1023, %edx
 11851      0000
3976:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11852              		.loc 1 3976 0 discriminator 3
 11853 00c8 81E5FF03 		andl	$1023, %ebp
 11853      0000
 11854 00ce 410FB62C 		movzbl	(%r9,%rbp), %ebp
 11854      29
 11855 00d3 41882A   		movb	%bpl, (%r10)
3979:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11856              		.loc 1 3979 0 discriminator 3
 11857 00d6 410FB614 		movzbl	(%r9,%rdx), %edx
 11857      11
 11858 00db 41885203 		movb	%dl, 3(%r10)
3982:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11859              		.loc 1 3982 0 discriminator 3
 11860 00df 488D1438 		leaq	(%rax,%rdi), %rdx
3985:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11861              		.loc 1 3985 0 discriminator 3
 11862 00e3 4829F8   		subq	%rdi, %rax
 11863              	.LVL1804:
 11864 00e6 48C1F810 		sarq	$16, %rax
3982:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11865              		.loc 1 3982 0 discriminator 3
 11866 00ea 48C1FA10 		sarq	$16, %rdx
3985:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11867              		.loc 1 3985 0 discriminator 3
 11868 00ee 25FF0300 		andl	$1023, %eax
 11868      00
3982:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11869              		.loc 1 3982 0 discriminator 3
 11870 00f3 81E2FF03 		andl	$1023, %edx
 11870      0000
3952:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11871              		.loc 1 3952 0 discriminator 3
 11872 00f9 4C39DE   		cmpq	%r11, %rsi
3982:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11873              		.loc 1 3982 0 discriminator 3
 11874 00fc 410FB614 		movzbl	(%r9,%rdx), %edx
 11874      11
 11875 0101 41885201 		movb	%dl, 1(%r10)
3985:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+3)
 11876              		.loc 1 3985 0 discriminator 3
 11877 0105 410FB604 		movzbl	(%r9,%rax), %eax
 11877      01
 11878 010a 41884202 		movb	%al, 2(%r10)
3952:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 11879              		.loc 1 3952 0 discriminator 3
 11880 010e 0F8550FF 		jne	.L205
 11880      FFFF
3990:fltk-1.3.4-1/jpeg/jidctint.c ****   }
3991:fltk-1.3.4-1/jpeg/jidctint.c **** }
 11881              		.loc 1 3991 0
 11882 0114 488B4424 		movq	72(%rsp), %rax
 11882      48
 11883 0119 64483304 		xorq	%fs:40, %rax
 11883      25280000 
 11883      00
 11884 0122 7507     		jne	.L210
 11885 0124 4883C458 		addq	$88, %rsp
 11886              		.cfi_remember_state
 11887              		.cfi_def_cfa_offset 24
 11888 0128 5B       		popq	%rbx
 11889              		.cfi_def_cfa_offset 16
 11890              	.LVL1805:
 11891 0129 5D       		popq	%rbp
 11892              		.cfi_def_cfa_offset 8
 11893 012a C3       		ret
 11894              	.LVL1806:
 11895              	.L210:
 11896              		.cfi_restore_state
 11897 012b E8000000 		call	__stack_chk_fail
 11897      00
 11898              	.LVL1807:
 11899              		.cfi_endproc
 11900              	.LFE83:
 11902              		.section	.text.unlikely.jpeg_idct_4x2
 11903              	.LCOLDE22:
 11904              		.section	.text.jpeg_idct_4x2
 11905              	.LHOTE22:
 11906              		.section	.text.unlikely.jpeg_idct_2x1,"ax",@progbits
 11907              	.LCOLDB23:
 11908              		.section	.text.jpeg_idct_2x1,"ax",@progbits
 11909              	.LHOTB23:
 11910              		.p2align 4,,15
 11911              		.globl	jpeg_idct_2x1
 11913              	jpeg_idct_2x1:
 11914              	.LFB84:
3992:fltk-1.3.4-1/jpeg/jidctint.c **** 
3993:fltk-1.3.4-1/jpeg/jidctint.c **** 
3994:fltk-1.3.4-1/jpeg/jidctint.c **** /*
3995:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
3996:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 2x1 output block.
3997:fltk-1.3.4-1/jpeg/jidctint.c ****  *
3998:fltk-1.3.4-1/jpeg/jidctint.c ****  * 1-point IDCT in pass 1 (columns), 2-point in pass 2 (rows).
3999:fltk-1.3.4-1/jpeg/jidctint.c ****  */
4000:fltk-1.3.4-1/jpeg/jidctint.c **** 
4001:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
4002:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_2x1 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
4003:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
4004:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
4005:fltk-1.3.4-1/jpeg/jidctint.c **** {
 11915              		.loc 1 4005 0
 11916              		.cfi_startproc
 11917              	.LVL1808:
4006:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1;
4007:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
4008:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
4009:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
4010:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
4011:fltk-1.3.4-1/jpeg/jidctint.c **** 
4012:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: empty. */
4013:fltk-1.3.4-1/jpeg/jidctint.c **** 
4014:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 1 row from input, store into output array. */
4015:fltk-1.3.4-1/jpeg/jidctint.c **** 
4016:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 11918              		.loc 1 4016 0
 11919 0000 488B7658 		movq	88(%rsi), %rsi
 11920              	.LVL1809:
4017:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr = output_buf[0] + output_col;
4018:fltk-1.3.4-1/jpeg/jidctint.c **** 
4019:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Even part */
4020:fltk-1.3.4-1/jpeg/jidctint.c **** 
4021:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp0 = DEQUANTIZE(coef_block[0], quantptr[0]);
 11921              		.loc 1 4021 0
 11922 0004 0FBF02   		movswl	(%rdx), %eax
4017:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr = output_buf[0] + output_col;
 11923              		.loc 1 4017 0
 11924 0007 4589C0   		movl	%r8d, %r8d
4022:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
4023:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp0 += ONE << 2;
4024:fltk-1.3.4-1/jpeg/jidctint.c **** 
4025:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Odd part */
4026:fltk-1.3.4-1/jpeg/jidctint.c **** 
4027:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp1 = DEQUANTIZE(coef_block[1], quantptr[1]);
 11925              		.loc 1 4027 0
 11926 000a 0FBF5202 		movswl	2(%rdx), %edx
 11927              	.LVL1810:
4017:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr = output_buf[0] + output_col;
 11928              		.loc 1 4017 0
 11929 000e 4C0301   		addq	(%rcx), %r8
 11930              	.LVL1811:
4009:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 11931              		.loc 1 4009 0
 11932 0011 488BBFB8 		movq	440(%rdi), %rdi
 11932      010000
 11933              	.LVL1812:
4021:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
 11934              		.loc 1 4021 0
 11935 0018 0FAF06   		imull	(%rsi), %eax
 11936              		.loc 1 4027 0
 11937 001b 0FAF5604 		imull	4(%rsi), %edx
4021:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
 11938              		.loc 1 4021 0
 11939 001f 4898     		cltq
 11940              	.LVL1813:
4023:fltk-1.3.4-1/jpeg/jidctint.c **** 
 11941              		.loc 1 4023 0
 11942 0021 4883C004 		addq	$4, %rax
 11943              	.LVL1814:
 11944              		.loc 1 4027 0
 11945 0025 4863D2   		movslq	%edx, %rdx
 11946              	.LVL1815:
4028:fltk-1.3.4-1/jpeg/jidctint.c **** 
4029:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Final output stage */
4030:fltk-1.3.4-1/jpeg/jidctint.c **** 
4031:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp0 + tmp1, 3) & RANGE_MASK];
 11947              		.loc 1 4031 0
 11948 0028 488D0C10 		leaq	(%rax,%rdx), %rcx
 11949              	.LVL1816:
4032:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp0 - tmp1, 3) & RANGE_MASK];
 11950              		.loc 1 4032 0
 11951 002c 4829D0   		subq	%rdx, %rax
 11952              	.LVL1817:
 11953 002f 48C1F803 		sarq	$3, %rax
4031:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp0 - tmp1, 3) & RANGE_MASK];
 11954              		.loc 1 4031 0
 11955 0033 48C1F903 		sarq	$3, %rcx
 11956              		.loc 1 4032 0
 11957 0037 25FF0300 		andl	$1023, %eax
 11957      00
4031:fltk-1.3.4-1/jpeg/jidctint.c ****   outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp0 - tmp1, 3) & RANGE_MASK];
 11958              		.loc 1 4031 0
 11959 003c 81E1FF03 		andl	$1023, %ecx
 11959      0000
 11960 0042 0FB68C0F 		movzbl	128(%rdi,%rcx), %ecx
 11960      80000000 
 11961 004a 418808   		movb	%cl, (%r8)
 11962              	.LVL1818:
 11963              		.loc 1 4032 0
 11964 004d 0FB68407 		movzbl	128(%rdi,%rax), %eax
 11964      80000000 
 11965 0055 41884001 		movb	%al, 1(%r8)
 11966 0059 C3       		ret
 11967              		.cfi_endproc
 11968              	.LFE84:
 11970              		.section	.text.unlikely.jpeg_idct_2x1
 11971              	.LCOLDE23:
 11972              		.section	.text.jpeg_idct_2x1
 11973              	.LHOTE23:
 11974              		.section	.text.unlikely.jpeg_idct_8x16,"ax",@progbits
 11975              	.LCOLDB24:
 11976              		.section	.text.jpeg_idct_8x16,"ax",@progbits
 11977              	.LHOTB24:
 11978              		.p2align 4,,15
 11979              		.globl	jpeg_idct_8x16
 11981              	jpeg_idct_8x16:
 11982              	.LFB85:
4033:fltk-1.3.4-1/jpeg/jidctint.c **** }
4034:fltk-1.3.4-1/jpeg/jidctint.c **** 
4035:fltk-1.3.4-1/jpeg/jidctint.c **** 
4036:fltk-1.3.4-1/jpeg/jidctint.c **** /*
4037:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
4038:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 8x16 output block.
4039:fltk-1.3.4-1/jpeg/jidctint.c ****  *
4040:fltk-1.3.4-1/jpeg/jidctint.c ****  * 16-point IDCT in pass 1 (columns), 8-point in pass 2 (rows).
4041:fltk-1.3.4-1/jpeg/jidctint.c ****  */
4042:fltk-1.3.4-1/jpeg/jidctint.c **** 
4043:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
4044:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_8x16 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
4045:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
4046:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
4047:fltk-1.3.4-1/jpeg/jidctint.c **** {
 11983              		.loc 1 4047 0
 11984              		.cfi_startproc
 11985              	.LVL1819:
 11986 0000 4157     		pushq	%r15
 11987              		.cfi_def_cfa_offset 16
 11988              		.cfi_offset 15, -16
 11989 0002 4156     		pushq	%r14
 11990              		.cfi_def_cfa_offset 24
 11991              		.cfi_offset 14, -24
 11992 0004 4155     		pushq	%r13
 11993              		.cfi_def_cfa_offset 32
 11994              		.cfi_offset 13, -32
 11995 0006 4154     		pushq	%r12
 11996              		.cfi_def_cfa_offset 40
 11997              		.cfi_offset 12, -40
 11998 0008 55       		pushq	%rbp
 11999              		.cfi_def_cfa_offset 48
 12000              		.cfi_offset 6, -48
 12001 0009 53       		pushq	%rbx
 12002              		.cfi_def_cfa_offset 56
 12003              		.cfi_offset 3, -56
 12004 000a 4881EC88 		subq	$648, %rsp
 12004      020000
 12005              		.cfi_def_cfa_offset 704
 12006              		.loc 1 4047 0
 12007 0011 64488B04 		movq	%fs:40, %rax
 12007      25280000 
 12007      00
 12008 001a 48898424 		movq	%rax, 632(%rsp)
 12008      78020000 
 12009 0022 31C0     		xorl	%eax, %eax
4048:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13;
4049:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26, tmp27;
4050:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
4051:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
4052:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
4053:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
4054:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
4055:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 12010              		.loc 1 4055 0
 12011 0024 488B87B8 		movq	440(%rdi), %rax
 12011      010000
4056:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
4057:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[8*16];	/* buffers data between passes */
4058:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
4059:fltk-1.3.4-1/jpeg/jidctint.c **** 
4060:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
4061:fltk-1.3.4-1/jpeg/jidctint.c ****    * 16-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/32).
4062:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4063:fltk-1.3.4-1/jpeg/jidctint.c **** 
4064:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
4065:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
4066:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 12012              		.loc 1 4066 0
 12013 002b 4C8D7424 		leaq	112(%rsp), %r14
 12013      70
4047:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3, tmp10, tmp11, tmp12, tmp13;
 12014              		.loc 1 4047 0
 12015 0030 48894C24 		movq	%rcx, 88(%rsp)
 12015      58
 12016 0035 44894424 		movl	%r8d, 100(%rsp)
 12016      64
4067:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++, inptr++, quantptr++, wsptr++) {
 12017              		.loc 1 4067 0
 12018 003a 4889D7   		movq	%rdx, %rdi
 12019              	.LVL1820:
4055:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 12020              		.loc 1 4055 0
 12021 003d 4C8DB880 		leaq	128(%rax), %r15
 12021      000000
 12022              	.LVL1821:
4065:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 12023              		.loc 1 4065 0
 12024 0044 488B4658 		movq	88(%rsi), %rax
 12025              	.LVL1822:
 12026              		.loc 1 4067 0
 12027 0048 488DB424 		leaq	144(%rsp), %rsi
 12027      90000000 
 12028              	.LVL1823:
 12029 0050 4C897C24 		movq	%r15, 104(%rsp)
 12029      68
 12030 0055 48897424 		movq	%rsi, 80(%rsp)
 12030      50
 12031 005a 4889C6   		movq	%rax, %rsi
 12032              	.LVL1824:
 12033 005d 0F1F00   		.p2align 4,,10
 12034              		.p2align 3
 12035              	.L213:
4068:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4069:fltk-1.3.4-1/jpeg/jidctint.c **** 
4070:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
4071:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
4072:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4073:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-1);
4074:fltk-1.3.4-1/jpeg/jidctint.c **** 
4075:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 12036              		.loc 1 4075 0 discriminator 3
 12037 0060 0FBF4F40 		movswl	64(%rdi), %ecx
4070:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 12038              		.loc 1 4070 0 discriminator 3
 12039 0064 0FBF07   		movswl	(%rdi), %eax
 12040              		.loc 1 4075 0 discriminator 3
 12041 0067 0FAF8E80 		imull	128(%rsi), %ecx
 12041      000000
4070:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 12042              		.loc 1 4070 0 discriminator 3
 12043 006e 0FAF06   		imull	(%rsi), %eax
4076:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
4077:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(z1, FIX_0_541196100);       /* c12[16] = c6[8] */
4078:fltk-1.3.4-1/jpeg/jidctint.c **** 
4079:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp1;
4080:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
4081:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
4082:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
4083:fltk-1.3.4-1/jpeg/jidctint.c **** 
4084:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 12044              		.loc 1 4084 0 discriminator 3
 12045 0071 0FBF6F20 		movswl	32(%rdi), %ebp
 12046 0075 0FAF6E40 		imull	64(%rsi), %ebp
4075:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
 12047              		.loc 1 4075 0 discriminator 3
 12048 0079 4863C9   		movslq	%ecx, %rcx
4076:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1, FIX(1.306562965));      /* c4[16] = c2[8] */
 12049              		.loc 1 4076 0 discriminator 3
 12050 007c 4869D1CF 		imulq	$10703, %rcx, %rdx
 12050      290000
4070:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 12051              		.loc 1 4070 0 discriminator 3
 12052 0083 4898     		cltq
 12053              	.LVL1825:
4077:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12054              		.loc 1 4077 0 discriminator 3
 12055 0085 4869C951 		imulq	$4433, %rcx, %rcx
 12055      110000
4071:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 12056              		.loc 1 4071 0 discriminator 3
 12057 008c 48C1E00D 		salq	$13, %rax
 12058              	.LVL1826:
4073:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12059              		.loc 1 4073 0 discriminator 3
 12060 0090 48050004 		addq	$1024, %rax
 12060      0000
 12061              	.LVL1827:
 12062              		.loc 1 4084 0 discriminator 3
 12063 0096 4863ED   		movslq	%ebp, %rbp
4080:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 12064              		.loc 1 4080 0 discriminator 3
 12065 0099 4889C3   		movq	%rax, %rbx
4085:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
4086:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 12066              		.loc 1 4086 0 discriminator 3
 12067 009c 4989E8   		movq	%rbp, %r8
4079:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp0 - tmp1;
 12068              		.loc 1 4079 0 discriminator 3
 12069 009f 4C8D1C10 		leaq	(%rax,%rdx), %r11
 12070              	.LVL1828:
4080:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 12071              		.loc 1 4080 0 discriminator 3
 12072 00a3 4829D3   		subq	%rdx, %rbx
4081:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 12073              		.loc 1 4081 0 discriminator 3
 12074 00a6 4C8D0C08 		leaq	(%rax,%rcx), %r9
4082:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12075              		.loc 1 4082 0 discriminator 3
 12076 00aa 4829C8   		subq	%rcx, %rax
 12077              	.LVL1829:
4085:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 12078              		.loc 1 4085 0 discriminator 3
 12079 00ad 0FBF4F60 		movswl	96(%rdi), %ecx
 12080              	.LVL1830:
 12081 00b1 0FAF8EC0 		imull	192(%rsi), %ecx
 12081      000000
4080:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp0 + tmp2;
 12082              		.loc 1 4080 0 discriminator 3
 12083 00b8 4889DA   		movq	%rbx, %rdx
 12084              	.LVL1831:
4087:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
4088:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, FIX(1.387039845));        /* c2[16] = c1[8] */
4089:fltk-1.3.4-1/jpeg/jidctint.c **** 
4090:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z3 + MULTIPLY(z2, FIX_2_562915447);  /* (c6+c2)[16] = (c3+c1)[8] */
4091:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 12085              		.loc 1 4091 0 discriminator 3
 12086 00bb 4C69D5CD 		imulq	$7373, %rbp, %r10
 12086      1C0000
4085:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = z1 - z2;
 12087              		.loc 1 4085 0 discriminator 3
 12088 00c2 4863C9   		movslq	%ecx, %rcx
 12089              	.LVL1832:
4086:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
 12090              		.loc 1 4086 0 discriminator 3
 12091 00c5 4929C8   		subq	%rcx, %r8
 12092              	.LVL1833:
4087:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z3, FIX(0.275899379));        /* c14[16] = c7[8] */
 12093              		.loc 1 4087 0 discriminator 3
 12094 00c8 4D69E0D4 		imulq	$2260, %r8, %r12
 12094      080000
 12095              	.LVL1834:
4088:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12096              		.loc 1 4088 0 discriminator 3
 12097 00cf 4D69E863 		imulq	$11363, %r8, %r13
 12097      2C0000
 12098              	.LVL1835:
4090:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 12099              		.loc 1 4090 0 discriminator 3
 12100 00d6 4869D903 		imulq	$20995, %rcx, %rbx
 12100      520000
 12101              		.loc 1 4091 0 discriminator 3
 12102 00dd 4D01E2   		addq	%r12, %r10
4092:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z3 - MULTIPLY(z1, FIX(0.601344887)); /* (c2-c10)[16] = (c1-c5)[8] */
 12103              		.loc 1 4092 0 discriminator 3
 12104 00e0 4C69C5C2 		imulq	$-4926, %rbp, %r8
 12104      ECFFFF
4090:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z4 + MULTIPLY(z1, FIX_0_899976223);  /* (c6-c14)[16] = (c3-c7)[8] */
 12105              		.loc 1 4090 0 discriminator 3
 12106 00e7 4C01EB   		addq	%r13, %rbx
 12107              	.LVL1836:
4093:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
 12108              		.loc 1 4093 0 discriminator 3
 12109 00ea 4869C9B0 		imulq	$-4176, %rcx, %rcx
 12109      EFFFFF
 12110              	.LVL1837:
4094:fltk-1.3.4-1/jpeg/jidctint.c **** 
4095:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp0;
 12111              		.loc 1 4095 0 discriminator 3
 12112 00f1 4D8D3C1B 		leaq	(%r11,%rbx), %r15
4096:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 12113              		.loc 1 4096 0 discriminator 3
 12114 00f5 4929DB   		subq	%rbx, %r11
 12115              	.LVL1838:
4097:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp12 + tmp1;
 12116              		.loc 1 4097 0 discriminator 3
 12117 00f8 4B8D1C11 		leaq	(%r9,%r10), %rbx
 12118              	.LVL1839:
4098:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
 12119              		.loc 1 4098 0 discriminator 3
 12120 00fc 4D29D1   		subq	%r10, %r9
 12121              	.LVL1840:
4096:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 12122              		.loc 1 4096 0 discriminator 3
 12123 00ff 4C895C24 		movq	%r11, 16(%rsp)
 12123      10
 12124              		.loc 1 4098 0 discriminator 3
 12125 0104 4C894C24 		movq	%r9, 32(%rsp)
 12125      20
4099:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp13 + tmp2;
4100:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
4101:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
4102:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
4103:fltk-1.3.4-1/jpeg/jidctint.c **** 
4104:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4105:fltk-1.3.4-1/jpeg/jidctint.c **** 
4106:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 12126              		.loc 1 4106 0 discriminator 3
 12127 0109 440FBF4F 		movswl	16(%rdi), %r9d
 12127      10
4092:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z4 - MULTIPLY(z2, FIX(0.509795579)); /* (c10-c14)[16] = (c5-c7)[8] */
 12128              		.loc 1 4092 0 discriminator 3
 12129 010e 4D01E8   		addq	%r13, %r8
 12130              	.LVL1841:
4097:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp12 - tmp1;
 12131              		.loc 1 4097 0 discriminator 3
 12132 0111 48895C24 		movq	%rbx, 24(%rsp)
 12132      18
4095:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp27 = tmp10 - tmp0;
 12133              		.loc 1 4095 0 discriminator 3
 12134 0116 4C897C24 		movq	%r15, 8(%rsp)
 12134      08
4093:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12135              		.loc 1 4093 0 discriminator 3
 12136 011b 4C01E1   		addq	%r12, %rcx
 12137              	.LVL1842:
4099:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 12138              		.loc 1 4099 0 discriminator 3
 12139 011e 4E8D1400 		leaq	(%rax,%r8), %r10
 12140              	.LVL1843:
4100:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 + tmp3;
 12141              		.loc 1 4100 0 discriminator 3
 12142 0122 4C29C0   		subq	%r8, %rax
 12143              	.LVL1844:
 12144 0125 48894424 		movq	%rax, 48(%rsp)
 12144      30
 12145              	.LVL1845:
4101:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 12146              		.loc 1 4101 0 discriminator 3
 12147 012a 4C8D040A 		leaq	(%rdx,%rcx), %r8
 12148              	.LVL1846:
4107:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 12149              		.loc 1 4107 0 discriminator 3
 12150 012e 0FBF4730 		movswl	48(%rdi), %eax
4102:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12151              		.loc 1 4102 0 discriminator 3
 12152 0132 4829CA   		subq	%rcx, %rdx
 12153              	.LVL1847:
4108:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 12154              		.loc 1 4108 0 discriminator 3
 12155 0135 0FBF4F50 		movswl	80(%rdi), %ecx
 12156              	.LVL1848:
4099:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp13 - tmp2;
 12157              		.loc 1 4099 0 discriminator 3
 12158 0139 4C895424 		movq	%r10, 40(%rsp)
 12158      28
 12159              	.LVL1849:
4106:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 12160              		.loc 1 4106 0 discriminator 3
 12161 013e 440FAF4E 		imull	32(%rsi), %r9d
 12161      20
4107:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 12162              		.loc 1 4107 0 discriminator 3
 12163 0143 0FAF4660 		imull	96(%rsi), %eax
 12164              		.loc 1 4108 0 discriminator 3
 12165 0147 0FAF8EA0 		imull	160(%rsi), %ecx
 12165      000000
4102:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12166              		.loc 1 4102 0 discriminator 3
 12167 014e 48895424 		movq	%rdx, 64(%rsp)
 12167      40
 12168              	.LVL1850:
4109:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 12169              		.loc 1 4109 0 discriminator 3
 12170 0153 0FBF5770 		movswl	112(%rdi), %edx
 12171 0157 0FAF96E0 		imull	224(%rsi), %edx
 12171      000000
4101:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp11 - tmp3;
 12172              		.loc 1 4101 0 discriminator 3
 12173 015e 4C894424 		movq	%r8, 56(%rsp)
 12173      38
 12174              	.LVL1851:
4106:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 12175              		.loc 1 4106 0 discriminator 3
 12176 0163 4D63C9   		movslq	%r9d, %r9
 12177              	.LVL1852:
4107:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 12178              		.loc 1 4107 0 discriminator 3
 12179 0166 4898     		cltq
 12180              	.LVL1853:
4110:fltk-1.3.4-1/jpeg/jidctint.c **** 
4111:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
4112:fltk-1.3.4-1/jpeg/jidctint.c **** 
4113:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  = MULTIPLY(z1 + z2, FIX(1.353318001));   /* c3 */
4114:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
4115:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  = MULTIPLY(z1 + z4, FIX(1.093201867));   /* c7 */
4116:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 12181              		.loc 1 4116 0 discriminator 3
 12182 0168 4D89CC   		movq	%r9, %r12
 12183              	.LVL1854:
4117:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
4118:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.410524528));   /* c13 */
 12184              		.loc 1 4118 0 discriminator 3
 12185 016b 4C89CD   		movq	%r9, %rbp
 12186              	.LVL1855:
4108:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 12187              		.loc 1 4108 0 discriminator 3
 12188 016e 4863C9   		movslq	%ecx, %rcx
 12189              	.LVL1856:
4113:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
 12190              		.loc 1 4113 0 discriminator 3
 12191 0171 4D8D0401 		leaq	(%r9,%rax), %r8
4111:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12192              		.loc 1 4111 0 discriminator 3
 12193 0175 498D1C09 		leaq	(%r9,%rcx), %rbx
 12194              	.LVL1857:
4109:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12195              		.loc 1 4109 0 discriminator 3
 12196 0179 4863D2   		movslq	%edx, %rdx
 12197              	.LVL1858:
4114:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  = MULTIPLY(z1 + z4, FIX(1.093201867));   /* c7 */
 12198              		.loc 1 4114 0 discriminator 3
 12199 017c 4C69DBE9 		imulq	$10217, %rbx, %r11
 12199      270000
 12200              	.LVL1859:
4115:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 12201              		.loc 1 4115 0 discriminator 3
 12202 0183 4D8D2C11 		leaq	(%r9,%rdx), %r13
 12203              	.LVL1860:
4113:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  = MULTIPLY(tmp11,   FIX(1.247225013));   /* c5 */
 12204              		.loc 1 4113 0 discriminator 3
 12205 0187 4D69C04E 		imulq	$11086, %r8, %r8
 12205      2B0000
 12206              	.LVL1861:
4115:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1 - z4, FIX(0.897167586));   /* c9 */
 12207              		.loc 1 4115 0 discriminator 3
 12208 018e 4D69EDFC 		imulq	$8956, %r13, %r13
 12208      220000
 12209              	.LVL1862:
4116:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
 12210              		.loc 1 4116 0 discriminator 3
 12211 0195 4929D4   		subq	%rdx, %r12
 12212              		.loc 1 4118 0 discriminator 3
 12213 0198 4829C5   		subq	%rax, %rbp
 12214 019b 4C69FD23 		imulq	$3363, %rbp, %r15
 12214      0D0000
 12215              	.LVL1863:
4119:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0  = tmp1 + tmp2 + tmp3 -
 12216              		.loc 1 4119 0 discriminator 3
 12217 01a2 4B8D2C18 		leaq	(%r8,%r11), %rbp
4116:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(tmp11,   FIX(0.666655658));   /* c11 */
 12218              		.loc 1 4116 0 discriminator 3
 12219 01a6 4D69E4B6 		imulq	$7350, %r12, %r12
 12219      1C0000
 12220              	.LVL1864:
 12221              		.loc 1 4119 0 discriminator 3
 12222 01ad 4E8D542D 		leaq	0(%rbp,%r13), %r10
 12222      00
4117:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.410524528));   /* c13 */
 12223              		.loc 1 4117 0 discriminator 3
 12224 01b2 4869DB55 		imulq	$5461, %rbx, %rbx
 12224      150000
 12225              	.LVL1865:
 12226              		.loc 1 4119 0 discriminator 3
 12227 01b9 4969E9D6 		imulq	$-18730, %r9, %rbp
 12227      B6FFFF
4120:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.286341144));        /* c7+c5+c3-c1 */
4121:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp10 + tmp11 + tmp12 -
 12228              		.loc 1 4121 0 discriminator 3
 12229 01c0 4D69C942 		imulq	$-15038, %r9, %r9
 12229      C5FFFF
 12230              	.LVL1866:
4119:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(2.286341144));        /* c7+c5+c3-c1 */
 12231              		.loc 1 4119 0 discriminator 3
 12232 01c7 4C01D5   		addq	%r10, %rbp
 12233              	.LVL1867:
 12234              		.loc 1 4121 0 discriminator 3
 12235 01ca 4D8D141C 		leaq	(%r12,%rbx), %r10
 12236 01ce 4D01FA   		addq	%r15, %r10
 12237 01d1 4D01CA   		addq	%r9, %r10
4122:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
4123:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2 + z3, FIX(0.138617169));   /* c15 */
 12238              		.loc 1 4123 0 discriminator 3
 12239 01d4 4C8D0C08 		leaq	(%rax,%rcx), %r9
4121:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z1, FIX(1.835730603));        /* c9+c11+c13-c15 */
 12240              		.loc 1 4121 0 discriminator 3
 12241 01d8 4C895424 		movq	%r10, 72(%rsp)
 12241      48
 12242              	.LVL1868:
 12243              		.loc 1 4123 0 discriminator 3
 12244 01dd 4D69C970 		imulq	$1136, %r9, %r9
 12244      040000
 12245              	.LVL1869:
4124:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1 + MULTIPLY(z2, FIX(0.071888074));  /* c9+c11-c3-c15 */
 12246              		.loc 1 4124 0 discriminator 3
 12247 01e4 4C69D04D 		imulq	$589, %rax, %r10
 12247      020000
 12248 01eb 4D01CA   		addq	%r9, %r10
 12249 01ee 4D01D0   		addq	%r10, %r8
 12250              	.LVL1870:
4125:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z1 - MULTIPLY(z3, FIX(1.125726048));  /* c5+c7+c15-c3 */
 12251              		.loc 1 4125 0 discriminator 3
 12252 01f1 4C69D1FA 		imulq	$-9222, %rcx, %r10
 12252      DBFFFF
 12253 01f8 4D01D1   		addq	%r10, %r9
 12254              	.LVL1871:
 12255 01fb 4D01CB   		addq	%r9, %r11
 12256              	.LVL1872:
4126:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z3 - z2, FIX(1.407403738));   /* c1 */
 12257              		.loc 1 4126 0 discriminator 3
 12258 01fe 4989C9   		movq	%rcx, %r9
 12259 0201 4929C1   		subq	%rax, %r9
 12260 0204 4D69D109 		imulq	$11529, %r9, %r10
 12260      2D0000
 12261              	.LVL1873:
4127:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z1 - MULTIPLY(z3, FIX(0.766367282));  /* c1+c11-c9-c13 */
 12262              		.loc 1 4127 0 discriminator 3
 12263 020b 4C69C97A 		imulq	$-6278, %rcx, %r9
 12263      E7FFFF
 12264 0212 4D01D1   		addq	%r10, %r9
 12265 0215 4C01CB   		addq	%r9, %rbx
 12266              	.LVL1874:
4128:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 12267              		.loc 1 4128 0 discriminator 3
 12268 0218 4C69C81A 		imulq	$16154, %rax, %r9
 12268      3F0000
4129:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    += z4;
 12269              		.loc 1 4129 0 discriminator 3
 12270 021f 4801D0   		addq	%rdx, %rax
 12271              	.LVL1875:
4128:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z1 + MULTIPLY(z2, FIX(1.971951411));  /* c1+c5+c13-c7 */
 12272              		.loc 1 4128 0 discriminator 3
 12273 0222 4D01CA   		addq	%r9, %r10
 12274              	.LVL1876:
 12275 0225 4D01FA   		addq	%r15, %r10
 12276              	.LVL1877:
4130:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    = MULTIPLY(z2, - FIX(0.666655658));      /* -c11 */
 12277              		.loc 1 4130 0 discriminator 3
 12278 0228 4C69C8AB 		imulq	$-5461, %rax, %r9
 12278      EAFFFF
 12279              	.LVL1878:
4131:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1;
4132:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z1 + MULTIPLY(z4, FIX(1.065388962));  /* c3+c11+c15-c7 */
 12280              		.loc 1 4132 0 discriminator 3
 12281 022f 4C69FA18 		imulq	$8728, %rdx, %r15
 12281      220000
4133:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 12282              		.loc 1 4133 0 discriminator 3
 12283 0236 4869C017 		imulq	$-10217, %rax, %rax
 12283      D8FFFF
 12284              	.LVL1879:
4131:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1  += z1;
 12285              		.loc 1 4131 0 discriminator 3
 12286 023d 4D01C8   		addq	%r9, %r8
 12287              	.LVL1880:
4132:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z2, - FIX(1.247225013));      /* -c5 */
 12288              		.loc 1 4132 0 discriminator 3
 12289 0240 4D01F9   		addq	%r15, %r9
 12290              	.LVL1881:
 12291 0243 4D01CD   		addq	%r9, %r13
 12292              	.LVL1882:
4134:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2 + MULTIPLY(z4, FIX(3.141271809));  /* c1+c5+c9-c13 */
 12293              		.loc 1 4134 0 discriminator 3
 12294 0246 4C69FA85 		imulq	$25733, %rdx, %r15
 12294      640000
 12295 024d 4901C7   		addq	%rax, %r15
4135:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2;
 12296              		.loc 1 4135 0 discriminator 3
 12297 0250 4C01D0   		addq	%r10, %rax
 12298              	.LVL1883:
4136:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
4137:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2  += z2;
4138:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z2;
4139:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z4 - z3, FIX(0.410524528));   /* c13 */
4140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
4141:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
4142:fltk-1.3.4-1/jpeg/jidctint.c **** 
4143:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4144:fltk-1.3.4-1/jpeg/jidctint.c **** 
4145:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*0]  = (int) RIGHT_SHIFT(tmp20 + tmp0,  CONST_BITS-PASS1_BITS);
4146:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*15] = (int) RIGHT_SHIFT(tmp20 - tmp0,  CONST_BITS-PASS1_BITS);
4147:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp1,  CONST_BITS-PASS1_BITS);
4148:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
4149:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp2,  CONST_BITS-PASS1_BITS);
 12299              		.loc 1 4149 0 discriminator 3
 12300 0253 4C8B5424 		movq	40(%rsp), %r10
 12300      28
 12301              	.LVL1884:
4134:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2;
 12302              		.loc 1 4134 0 discriminator 3
 12303 0258 4D01FC   		addq	%r15, %r12
 12304              	.LVL1885:
4136:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
 12305              		.loc 1 4136 0 discriminator 3
 12306 025b 4C8D3C11 		leaq	(%rcx,%rdx), %r15
4139:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
 12307              		.loc 1 4139 0 discriminator 3
 12308 025f 4829CA   		subq	%rcx, %rdx
 12309              	.LVL1886:
 12310 0262 4869D223 		imulq	$3363, %rdx, %rdx
 12310      0D0000
4136:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z3 + z4, - FIX(1.353318001)); /* -c3 */
 12311              		.loc 1 4136 0 discriminator 3
 12312 0269 4D69FFB2 		imulq	$-11086, %r15, %r15
 12312      D4FFFF
 12313              	.LVL1887:
4140:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z2;
 12314              		.loc 1 4140 0 discriminator 3
 12315 0270 4901D4   		addq	%rdx, %r12
 12316              	.LVL1888:
4141:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12317              		.loc 1 4141 0 discriminator 3
 12318 0273 4801DA   		addq	%rbx, %rdx
4137:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3  += z2;
 12319              		.loc 1 4137 0 discriminator 3
 12320 0276 4D01FB   		addq	%r15, %r11
 12321              	.LVL1889:
4138:fltk-1.3.4-1/jpeg/jidctint.c ****     z2    = MULTIPLY(z4 - z3, FIX(0.410524528));   /* c13 */
 12322              		.loc 1 4138 0 discriminator 3
 12323 0279 4D01FD   		addq	%r15, %r13
 12324              	.LVL1890:
4145:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*15] = (int) RIGHT_SHIFT(tmp20 - tmp0,  CONST_BITS-PASS1_BITS);
 12325              		.loc 1 4145 0 discriminator 3
 12326 027c 4C8B7C24 		movq	8(%rsp), %r15
 12326      08
 12327 0281 498D0C2F 		leaq	(%r15,%rbp), %rcx
 12328              	.LVL1891:
4146:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp1,  CONST_BITS-PASS1_BITS);
 12329              		.loc 1 4146 0 discriminator 3
 12330 0285 4929EF   		subq	%rbp, %r15
4145:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*15] = (int) RIGHT_SHIFT(tmp20 - tmp0,  CONST_BITS-PASS1_BITS);
 12331              		.loc 1 4145 0 discriminator 3
 12332 0288 48C1F90B 		sarq	$11, %rcx
 12333 028c 41890E   		movl	%ecx, (%r14)
4146:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp1,  CONST_BITS-PASS1_BITS);
 12334              		.loc 1 4146 0 discriminator 3
 12335 028f 4C89F9   		movq	%r15, %rcx
4147:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
 12336              		.loc 1 4147 0 discriminator 3
 12337 0292 4C8B7C24 		movq	24(%rsp), %r15
 12337      18
4146:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*1]  = (int) RIGHT_SHIFT(tmp21 + tmp1,  CONST_BITS-PASS1_BITS);
 12338              		.loc 1 4146 0 discriminator 3
 12339 0297 48C1F90B 		sarq	$11, %rcx
 12340 029b 41898EE0 		movl	%ecx, 480(%r14)
 12340      010000
4147:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
 12341              		.loc 1 4147 0 discriminator 3
 12342 02a2 4B8D0C07 		leaq	(%r15,%r8), %rcx
4148:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp2,  CONST_BITS-PASS1_BITS);
 12343              		.loc 1 4148 0 discriminator 3
 12344 02a6 4D29C7   		subq	%r8, %r15
4147:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*14] = (int) RIGHT_SHIFT(tmp21 - tmp1,  CONST_BITS-PASS1_BITS);
 12345              		.loc 1 4147 0 discriminator 3
 12346 02a9 48C1F90B 		sarq	$11, %rcx
 12347 02ad 41894E20 		movl	%ecx, 32(%r14)
4148:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*2]  = (int) RIGHT_SHIFT(tmp22 + tmp2,  CONST_BITS-PASS1_BITS);
 12348              		.loc 1 4148 0 discriminator 3
 12349 02b1 4C89F9   		movq	%r15, %rcx
 12350 02b4 48C1F90B 		sarq	$11, %rcx
 12351 02b8 41898EC0 		movl	%ecx, 448(%r14)
 12351      010000
 12352              		.loc 1 4149 0 discriminator 3
 12353 02bf 4B8D0C1A 		leaq	(%r10,%r11), %rcx
4150:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp22 - tmp2,  CONST_BITS-PASS1_BITS);
 12354              		.loc 1 4150 0 discriminator 3
 12355 02c3 4D29DA   		subq	%r11, %r10
4149:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp22 - tmp2,  CONST_BITS-PASS1_BITS);
 12356              		.loc 1 4149 0 discriminator 3
 12357 02c6 48C1F90B 		sarq	$11, %rcx
 12358 02ca 41894E40 		movl	%ecx, 64(%r14)
4151:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp3,  CONST_BITS-PASS1_BITS);
 12359              		.loc 1 4151 0 discriminator 3
 12360 02ce 4C8B4424 		movq	56(%rsp), %r8
 12360      38
 12361              	.LVL1892:
4150:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*13] = (int) RIGHT_SHIFT(tmp22 - tmp2,  CONST_BITS-PASS1_BITS);
 12362              		.loc 1 4150 0 discriminator 3
 12363 02d3 4C89D1   		movq	%r10, %rcx
 12364 02d6 48C1F90B 		sarq	$11, %rcx
4152:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp23 - tmp3,  CONST_BITS-PASS1_BITS);
4153:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp10, CONST_BITS-PASS1_BITS);
 12365              		.loc 1 4153 0 discriminator 3
 12366 02da 4C8B7C24 		movq	64(%rsp), %r15
 12366      40
4154:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp24 - tmp10, CONST_BITS-PASS1_BITS);
4155:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp11, CONST_BITS-PASS1_BITS);
 12367              		.loc 1 4155 0 discriminator 3
 12368 02df 488B5C24 		movq	48(%rsp), %rbx
 12368      30
4150:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*3]  = (int) RIGHT_SHIFT(tmp23 + tmp3,  CONST_BITS-PASS1_BITS);
 12369              		.loc 1 4150 0 discriminator 3
 12370 02e4 41898EA0 		movl	%ecx, 416(%r14)
 12370      010000
4156:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp25 - tmp11, CONST_BITS-PASS1_BITS);
4157:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp12, CONST_BITS-PASS1_BITS);
 12371              		.loc 1 4157 0 discriminator 3
 12372 02eb 4C8B4C24 		movq	32(%rsp), %r9
 12372      20
4151:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp23 - tmp3,  CONST_BITS-PASS1_BITS);
 12373              		.loc 1 4151 0 discriminator 3
 12374 02f0 4B8D0C28 		leaq	(%r8,%r13), %rcx
4152:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp10, CONST_BITS-PASS1_BITS);
 12375              		.loc 1 4152 0 discriminator 3
 12376 02f4 4D29E8   		subq	%r13, %r8
4158:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
4159:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 12377              		.loc 1 4159 0 discriminator 3
 12378 02f7 4C8B5C24 		movq	16(%rsp), %r11
 12378      10
 12379              	.LVL1893:
 12380 02fc 4C8B5424 		movq	72(%rsp), %r10
 12380      48
4151:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*12] = (int) RIGHT_SHIFT(tmp23 - tmp3,  CONST_BITS-PASS1_BITS);
 12381              		.loc 1 4151 0 discriminator 3
 12382 0301 48C1F90B 		sarq	$11, %rcx
 12383 0305 41894E60 		movl	%ecx, 96(%r14)
4152:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*4]  = (int) RIGHT_SHIFT(tmp24 + tmp10, CONST_BITS-PASS1_BITS);
 12384              		.loc 1 4152 0 discriminator 3
 12385 0309 4C89C1   		movq	%r8, %rcx
 12386 030c 48C1F90B 		sarq	$11, %rcx
 12387 0310 41898E80 		movl	%ecx, 384(%r14)
 12387      010000
4153:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*11] = (int) RIGHT_SHIFT(tmp24 - tmp10, CONST_BITS-PASS1_BITS);
 12388              		.loc 1 4153 0 discriminator 3
 12389 0317 4C89F9   		movq	%r15, %rcx
 12390 031a 4C01E1   		addq	%r12, %rcx
 12391 031d 48C1F90B 		sarq	$11, %rcx
 12392 0321 41898E80 		movl	%ecx, 128(%r14)
 12392      000000
4154:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*5]  = (int) RIGHT_SHIFT(tmp25 + tmp11, CONST_BITS-PASS1_BITS);
 12393              		.loc 1 4154 0 discriminator 3
 12394 0328 4C89F9   		movq	%r15, %rcx
 12395 032b 4C29E1   		subq	%r12, %rcx
 12396 032e 48C1F90B 		sarq	$11, %rcx
 12397 0332 41898E60 		movl	%ecx, 352(%r14)
 12397      010000
4155:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp25 - tmp11, CONST_BITS-PASS1_BITS);
 12398              		.loc 1 4155 0 discriminator 3
 12399 0339 488D0C13 		leaq	(%rbx,%rdx), %rcx
4156:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp12, CONST_BITS-PASS1_BITS);
 12400              		.loc 1 4156 0 discriminator 3
 12401 033d 4829D3   		subq	%rdx, %rbx
 12402 0340 4889DA   		movq	%rbx, %rdx
 12403              	.LVL1894:
 12404 0343 48C1FA0B 		sarq	$11, %rdx
4155:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp25 - tmp11, CONST_BITS-PASS1_BITS);
 12405              		.loc 1 4155 0 discriminator 3
 12406 0347 48C1F90B 		sarq	$11, %rcx
4156:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*6]  = (int) RIGHT_SHIFT(tmp26 + tmp12, CONST_BITS-PASS1_BITS);
 12407              		.loc 1 4156 0 discriminator 3
 12408 034b 41899640 		movl	%edx, 320(%r14)
 12408      010000
4157:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
 12409              		.loc 1 4157 0 discriminator 3
 12410 0352 498D1401 		leaq	(%r9,%rax), %rdx
4158:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 12411              		.loc 1 4158 0 discriminator 3
 12412 0356 4929C1   		subq	%rax, %r9
 12413 0359 4C89C8   		movq	%r9, %rax
 12414              	.LVL1895:
4155:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*10] = (int) RIGHT_SHIFT(tmp25 - tmp11, CONST_BITS-PASS1_BITS);
 12415              		.loc 1 4155 0 discriminator 3
 12416 035c 41898EA0 		movl	%ecx, 160(%r14)
 12416      000000
4157:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
 12417              		.loc 1 4157 0 discriminator 3
 12418 0363 48C1FA0B 		sarq	$11, %rdx
4158:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 12419              		.loc 1 4158 0 discriminator 3
 12420 0367 48C1F80B 		sarq	$11, %rax
4067:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 12421              		.loc 1 4067 0 discriminator 3
 12422 036b 4883C702 		addq	$2, %rdi
 12423              	.LVL1896:
4158:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*7]  = (int) RIGHT_SHIFT(tmp27 + tmp13, CONST_BITS-PASS1_BITS);
 12424              		.loc 1 4158 0 discriminator 3
 12425 036f 41898620 		movl	%eax, 288(%r14)
 12425      010000
 12426              		.loc 1 4159 0 discriminator 3
 12427 0376 4C89D8   		movq	%r11, %rax
4157:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*9]  = (int) RIGHT_SHIFT(tmp26 - tmp12, CONST_BITS-PASS1_BITS);
 12428              		.loc 1 4157 0 discriminator 3
 12429 0379 418996C0 		movl	%edx, 192(%r14)
 12429      000000
 12430              		.loc 1 4159 0 discriminator 3
 12431 0380 4C01D0   		addq	%r10, %rax
4067:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 12432              		.loc 1 4067 0 discriminator 3
 12433 0383 4883C604 		addq	$4, %rsi
 12434              	.LVL1897:
 12435 0387 4983C604 		addq	$4, %r14
 12436              	.LVL1898:
 12437              		.loc 1 4159 0 discriminator 3
 12438 038b 48C1F80B 		sarq	$11, %rax
 12439 038f 418986DC 		movl	%eax, 220(%r14)
 12439      000000
4160:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[8*8]  = (int) RIGHT_SHIFT(tmp27 - tmp13, CONST_BITS-PASS1_BITS);
 12440              		.loc 1 4160 0 discriminator 3
 12441 0396 4C89D8   		movq	%r11, %rax
 12442 0399 4C29D0   		subq	%r10, %rax
 12443 039c 48C1F80B 		sarq	$11, %rax
 12444 03a0 418986FC 		movl	%eax, 252(%r14)
 12444      000000
 12445              	.LVL1899:
4067:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 12446              		.loc 1 4067 0 discriminator 3
 12447 03a7 4C3B7424 		cmpq	80(%rsp), %r14
 12447      50
 12448 03ac 0F85AEFC 		jne	.L213
 12448      FFFF
 12449 03b2 8B442464 		movl	100(%rsp), %eax
 12450 03b6 4C8B7C24 		movq	104(%rsp), %r15
 12450      68
4067:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 12451              		.loc 1 4067 0 is_stmt 0
 12452 03bb 4C8D5C24 		leaq	112(%rsp), %r11
 12452      70
 12453 03c0 48894424 		movq	%rax, 16(%rsp)
 12453      10
 12454              	.LVL1900:
 12455 03c5 488B4424 		movq	88(%rsp), %rax
 12455      58
 12456 03ca 48894424 		movq	%rax, 8(%rsp)
 12456      08
 12457              	.LVL1901:
4161:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4162:fltk-1.3.4-1/jpeg/jidctint.c **** 
4163:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process rows from work array, store into output array.
4164:fltk-1.3.4-1/jpeg/jidctint.c ****    * Note that we must descale the results by a factor of 8 == 2**3,
4165:fltk-1.3.4-1/jpeg/jidctint.c ****    * and also undo the PASS1_BITS scaling.
4166:fltk-1.3.4-1/jpeg/jidctint.c ****    * 8-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
4167:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4168:fltk-1.3.4-1/jpeg/jidctint.c **** 
4169:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
4170:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 16; ctr++) {
 12458              		.loc 1 4170 0 is_stmt 1
 12459 03cf 488D8424 		leaq	624(%rsp), %rax
 12459      70020000 
 12460 03d7 48894424 		movq	%rax, 24(%rsp)
 12460      18
 12461              	.LVL1902:
 12462 03dc 0F1F4000 		.p2align 4,,10
 12463              		.p2align 3
 12464              	.L214:
4171:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
4172:fltk-1.3.4-1/jpeg/jidctint.c **** 
4173:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part: reverse the even part of the forward DCT.
4174:fltk-1.3.4-1/jpeg/jidctint.c ****      * The rotator is c(-6).
4175:fltk-1.3.4-1/jpeg/jidctint.c ****      */
4176:fltk-1.3.4-1/jpeg/jidctint.c **** 
4177:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[2];
 12465              		.loc 1 4177 0 discriminator 3
 12466 03e0 49637308 		movslq	8(%r11), %rsi
4178:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
 12467              		.loc 1 4178 0 discriminator 3
 12468 03e4 49634B18 		movslq	24(%r11), %rcx
4171:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 12469              		.loc 1 4171 0 discriminator 3
 12470 03e8 488B4424 		movq	8(%rsp), %rax
 12470      08
 12471 03ed 488B7C24 		movq	16(%rsp), %rdi
 12471      10
4179:fltk-1.3.4-1/jpeg/jidctint.c **** 
4180:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);       /* c6 */
4181:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
4182:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
4183:fltk-1.3.4-1/jpeg/jidctint.c **** 
4184:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4185:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
4186:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 12472              		.loc 1 4186 0 discriminator 3
 12473 03f2 4D634310 		movslq	16(%r11), %r8
4187:fltk-1.3.4-1/jpeg/jidctint.c **** 
4188:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (z2 + z3) << CONST_BITS;
4189:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
4190:fltk-1.3.4-1/jpeg/jidctint.c **** 
4191:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp2;
4192:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
4193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
4194:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
4195:fltk-1.3.4-1/jpeg/jidctint.c **** 
4196:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part per figure 8; the matrix is unitary and hence its
4197:fltk-1.3.4-1/jpeg/jidctint.c ****      * transpose is its inverse.  i0..i3 are y7,y5,y3,y1 respectively.
4198:fltk-1.3.4-1/jpeg/jidctint.c ****      */
4199:fltk-1.3.4-1/jpeg/jidctint.c **** 
4200:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[7];
 12474              		.loc 1 4200 0 discriminator 3
 12475 03f6 4D636B1C 		movslq	28(%r11), %r13
4201:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (INT32) wsptr[5];
4202:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[3];
 12476              		.loc 1 4202 0 discriminator 3
 12477 03fa 49636B0C 		movslq	12(%r11), %rbp
4203:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = (INT32) wsptr[1];
 12478              		.loc 1 4203 0 discriminator 3
 12479 03fe 4D636304 		movslq	4(%r11), %r12
4171:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12480              		.loc 1 4171 0 discriminator 3
 12481 0402 480338   		addq	(%rax), %rdi
 12482              	.LVL1903:
4180:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 12483              		.loc 1 4180 0 discriminator 3
 12484 0405 488D040E 		leaq	(%rsi,%rcx), %rax
4181:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 12485              		.loc 1 4181 0 discriminator 3
 12486 0409 4869F67E 		imulq	$6270, %rsi, %rsi
 12486      180000
 12487              	.LVL1904:
4180:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 12488              		.loc 1 4180 0 discriminator 3
 12489 0410 4869C051 		imulq	$4433, %rax, %rax
 12489      110000
 12490              	.LVL1905:
4182:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12491              		.loc 1 4182 0 discriminator 3
 12492 0417 4869C9DF 		imulq	$-15137, %rcx, %rcx
 12492      C4FFFF
 12493              	.LVL1906:
4204:fltk-1.3.4-1/jpeg/jidctint.c **** 
4205:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = tmp0 + tmp2;
 12494              		.loc 1 4205 0 discriminator 3
 12495 041e 498D5C2D 		leaq	0(%r13,%rbp), %rbx
 12495      00
4181:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 12496              		.loc 1 4181 0 discriminator 3
 12497 0423 4801C6   		addq	%rax, %rsi
 12498              	.LVL1907:
4182:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12499              		.loc 1 4182 0 discriminator 3
 12500 0426 4801C1   		addq	%rax, %rcx
 12501              	.LVL1908:
4185:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[4];
 12502              		.loc 1 4185 0 discriminator 3
 12503 0429 496303   		movslq	(%r11), %rax
 12504              	.LVL1909:
 12505 042c 4883C010 		addq	$16, %rax
 12506              	.LVL1910:
4188:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
 12507              		.loc 1 4188 0 discriminator 3
 12508 0430 4A8D1400 		leaq	(%rax,%r8), %rdx
4189:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12509              		.loc 1 4189 0 discriminator 3
 12510 0434 4C29C0   		subq	%r8, %rax
 12511              	.LVL1911:
4201:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[3];
 12512              		.loc 1 4201 0 discriminator 3
 12513 0437 4D634314 		movslq	20(%r11), %r8
 12514              	.LVL1912:
4189:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12515              		.loc 1 4189 0 discriminator 3
 12516 043b 48C1E00D 		salq	$13, %rax
4193:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 12517              		.loc 1 4193 0 discriminator 3
 12518 043f 4C8D0C01 		leaq	(%rcx,%rax), %r9
4194:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12519              		.loc 1 4194 0 discriminator 3
 12520 0443 4829C8   		subq	%rcx, %rax
4188:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z2 - z3) << CONST_BITS;
 12521              		.loc 1 4188 0 discriminator 3
 12522 0446 48C1E20D 		salq	$13, %rdx
 12523              	.LVL1913:
4191:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 12524              		.loc 1 4191 0 discriminator 3
 12525 044a 4C8D1416 		leaq	(%rsi,%rdx), %r10
 12526              	.LVL1914:
4192:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 12527              		.loc 1 4192 0 discriminator 3
 12528 044e 4829F2   		subq	%rsi, %rdx
 12529              	.LVL1915:
4206:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp1 + tmp3;
 12530              		.loc 1 4206 0 discriminator 3
 12531 0451 4B8D0C20 		leaq	(%r8,%r12), %rcx
 12532              	.LVL1916:
4207:fltk-1.3.4-1/jpeg/jidctint.c **** 
4208:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_1_175875602);       /*  c3 */
 12533              		.loc 1 4208 0 discriminator 3
 12534 0455 488D340B 		leaq	(%rbx,%rcx), %rsi
4209:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
4210:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, - FIX_0_390180644);          /* -c3+c5 */
 12535              		.loc 1 4210 0 discriminator 3
 12536 0459 4869C984 		imulq	$-3196, %rcx, %rcx
 12536      F3FFFF
 12537              	.LVL1917:
4208:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 12538              		.loc 1 4208 0 discriminator 3
 12539 0460 4C69F6A1 		imulq	$9633, %rsi, %r14
 12539      250000
 12540              	.LVL1918:
4209:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 12541              		.loc 1 4209 0 discriminator 3
 12542 0467 4869DB3B 		imulq	$-16069, %rbx, %rbx
 12542      C1FFFF
 12543              	.LVL1919:
4211:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
4212:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z1;
 12544              		.loc 1 4212 0 discriminator 3
 12545 046e 498D340E 		leaq	(%r14,%rcx), %rsi
4213:fltk-1.3.4-1/jpeg/jidctint.c **** 
4214:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223); /* -c3+c7 */
 12546              		.loc 1 4214 0 discriminator 3
 12547 0472 4B8D4C25 		leaq	0(%r13,%r12), %rcx
 12547      00
 12548              	.LVL1920:
4215:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 12549              		.loc 1 4215 0 discriminator 3
 12550 0477 4D69ED8E 		imulq	$2446, %r13, %r13
 12550      090000
 12551              	.LVL1921:
4211:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
 12552              		.loc 1 4211 0 discriminator 3
 12553 047e 4C01F3   		addq	%r14, %rbx
 12554              	.LVL1922:
4214:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 12555              		.loc 1 4214 0 discriminator 3
 12556 0481 4869C933 		imulq	$-7373, %rcx, %rcx
 12556      E3FFFF
 12557              	.LVL1923:
4216:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_1_501321110);        /*  c1+c3-c5-c7 */
 12558              		.loc 1 4216 0 discriminator 3
 12559 0488 4D69E40B 		imulq	$12299, %r12, %r12
 12559      300000
 12560              	.LVL1924:
4217:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 12561              		.loc 1 4217 0 discriminator 3
 12562 048f 4C8D340B 		leaq	(%rbx,%rcx), %r14
4218:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z1 + z3;
 12563              		.loc 1 4218 0 discriminator 3
 12564 0493 4801F1   		addq	%rsi, %rcx
 12565              	.LVL1925:
 12566 0496 4901CC   		addq	%rcx, %r12
 12567              	.LVL1926:
4217:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 12568              		.loc 1 4217 0 discriminator 3
 12569 0499 4D01F5   		addq	%r14, %r13
 12570              	.LVL1927:
4219:fltk-1.3.4-1/jpeg/jidctint.c **** 
4220:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447); /* -c1-c3 */
 12571              		.loc 1 4220 0 discriminator 3
 12572 049c 4D8D3428 		leaq	(%r8,%rbp), %r14
4221:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
4222:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_3_072711026);        /*  c1+c3+c5-c7 */
4223:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
4224:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
4225:fltk-1.3.4-1/jpeg/jidctint.c **** 
4226:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage: inputs are tmp10..tmp13, tmp0..tmp3 */
4227:fltk-1.3.4-1/jpeg/jidctint.c **** 
4228:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp3,
 12573              		.loc 1 4228 0 discriminator 3
 12574 04a0 4B8D0C22 		leaq	(%r10,%r12), %rcx
4221:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 12575              		.loc 1 4221 0 discriminator 3
 12576 04a4 4D69C0B3 		imulq	$16819, %r8, %r8
 12576      410000
 12577              	.LVL1928:
4229:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4230:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4231:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[7] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp3,
 12578              		.loc 1 4231 0 discriminator 3
 12579 04ab 4D29E2   		subq	%r12, %r10
 12580              	.LVL1929:
4220:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 12581              		.loc 1 4220 0 discriminator 3
 12582 04ae 4D69F6FD 		imulq	$-20995, %r14, %r14
 12582      ADFFFF
 12583              	.LVL1930:
4228:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12584              		.loc 1 4228 0 discriminator 3
 12585 04b5 48C1F912 		sarq	$18, %rcx
4222:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 12586              		.loc 1 4222 0 discriminator 3
 12587 04b9 4869ED54 		imulq	$25172, %rbp, %rbp
 12587      620000
 12588              	.LVL1931:
4228:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12589              		.loc 1 4228 0 discriminator 3
 12590 04c0 81E1FF03 		andl	$1023, %ecx
 12590      0000
 12591 04c6 410FB60C 		movzbl	(%r15,%rcx), %ecx
 12591      0F
4223:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 12592              		.loc 1 4223 0 discriminator 3
 12593 04cb 4C01F6   		addq	%r14, %rsi
 12594              	.LVL1932:
4224:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12595              		.loc 1 4224 0 discriminator 3
 12596 04ce 4C01F3   		addq	%r14, %rbx
 12597              	.LVL1933:
4223:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 12598              		.loc 1 4223 0 discriminator 3
 12599 04d1 4901F0   		addq	%rsi, %r8
 12600              	.LVL1934:
4224:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12601              		.loc 1 4224 0 discriminator 3
 12602 04d4 4801DD   		addq	%rbx, %rbp
 12603              	.LVL1935:
 12604              		.loc 1 4231 0 discriminator 3
 12605 04d7 49C1FA12 		sarq	$18, %r10
 12606 04db 4181E2FF 		andl	$1023, %r10d
 12606      030000
4228:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12607              		.loc 1 4228 0 discriminator 3
 12608 04e2 880F     		movb	%cl, (%rdi)
4232:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4233:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4234:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp2,
4235:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4236:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4237:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp2,
4238:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4239:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4240:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp1,
4241:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4242:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4243:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp1,
4244:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4245:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4246:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp13 + tmp0,
4247:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4248:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4249:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp13 - tmp0,
4250:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4251:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4252:fltk-1.3.4-1/jpeg/jidctint.c **** 
4253:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += DCTSIZE;		/* advance pointer to next row */
 12609              		.loc 1 4253 0 discriminator 3
 12610 04e4 4983C320 		addq	$32, %r11
 12611              	.LVL1936:
4231:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12612              		.loc 1 4231 0 discriminator 3
 12613 04e8 430FB60C 		movzbl	(%r15,%r10), %ecx
 12613      17
 12614 04ed 48834424 		addq	$8, 8(%rsp)
 12614      0808
 12615 04f3 884F07   		movb	%cl, 7(%rdi)
4234:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12616              		.loc 1 4234 0 discriminator 3
 12617 04f6 498D0C29 		leaq	(%r9,%rbp), %rcx
4237:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12618              		.loc 1 4237 0 discriminator 3
 12619 04fa 4929E9   		subq	%rbp, %r9
 12620              	.LVL1937:
 12621 04fd 49C1F912 		sarq	$18, %r9
4234:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12622              		.loc 1 4234 0 discriminator 3
 12623 0501 48C1F912 		sarq	$18, %rcx
4237:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12624              		.loc 1 4237 0 discriminator 3
 12625 0505 4181E1FF 		andl	$1023, %r9d
 12625      030000
4234:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12626              		.loc 1 4234 0 discriminator 3
 12627 050c 81E1FF03 		andl	$1023, %ecx
 12627      0000
 12628 0512 410FB60C 		movzbl	(%r15,%rcx), %ecx
 12628      0F
 12629 0517 884F01   		movb	%cl, 1(%rdi)
4237:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12630              		.loc 1 4237 0 discriminator 3
 12631 051a 430FB60C 		movzbl	(%r15,%r9), %ecx
 12631      0F
 12632 051f 884F06   		movb	%cl, 6(%rdi)
4240:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12633              		.loc 1 4240 0 discriminator 3
 12634 0522 4A8D0C00 		leaq	(%rax,%r8), %rcx
4243:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12635              		.loc 1 4243 0 discriminator 3
 12636 0526 4C29C0   		subq	%r8, %rax
 12637              	.LVL1938:
 12638 0529 48C1F812 		sarq	$18, %rax
4240:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12639              		.loc 1 4240 0 discriminator 3
 12640 052d 48C1F912 		sarq	$18, %rcx
4243:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12641              		.loc 1 4243 0 discriminator 3
 12642 0531 25FF0300 		andl	$1023, %eax
 12642      00
4240:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12643              		.loc 1 4240 0 discriminator 3
 12644 0536 81E1FF03 		andl	$1023, %ecx
 12644      0000
 12645 053c 410FB60C 		movzbl	(%r15,%rcx), %ecx
 12645      0F
 12646 0541 884F02   		movb	%cl, 2(%rdi)
4243:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12647              		.loc 1 4243 0 discriminator 3
 12648 0544 410FB604 		movzbl	(%r15,%rax), %eax
 12648      07
 12649 0549 884705   		movb	%al, 5(%rdi)
4246:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12650              		.loc 1 4246 0 discriminator 3
 12651 054c 4A8D042A 		leaq	(%rdx,%r13), %rax
4249:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12652              		.loc 1 4249 0 discriminator 3
 12653 0550 4C29EA   		subq	%r13, %rdx
 12654              	.LVL1939:
 12655 0553 48C1FA12 		sarq	$18, %rdx
4246:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12656              		.loc 1 4246 0 discriminator 3
 12657 0557 48C1F812 		sarq	$18, %rax
4249:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12658              		.loc 1 4249 0 discriminator 3
 12659 055b 81E2FF03 		andl	$1023, %edx
 12659      0000
4246:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12660              		.loc 1 4246 0 discriminator 3
 12661 0561 25FF0300 		andl	$1023, %eax
 12661      00
4170:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 12662              		.loc 1 4170 0 discriminator 3
 12663 0566 4C3B5C24 		cmpq	24(%rsp), %r11
 12663      18
4246:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12664              		.loc 1 4246 0 discriminator 3
 12665 056b 410FB604 		movzbl	(%r15,%rax), %eax
 12665      07
 12666 0570 884703   		movb	%al, 3(%rdi)
4249:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 12667              		.loc 1 4249 0 discriminator 3
 12668 0573 410FB604 		movzbl	(%r15,%rdx), %eax
 12668      17
 12669 0578 884704   		movb	%al, 4(%rdi)
4170:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 12670              		.loc 1 4170 0 discriminator 3
 12671 057b 0F855FFE 		jne	.L214
 12671      FFFF
4254:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4255:fltk-1.3.4-1/jpeg/jidctint.c **** }
 12672              		.loc 1 4255 0
 12673 0581 488B8424 		movq	632(%rsp), %rax
 12673      78020000 
 12674 0589 64483304 		xorq	%fs:40, %rax
 12674      25280000 
 12674      00
 12675 0592 7512     		jne	.L219
 12676 0594 4881C488 		addq	$648, %rsp
 12676      020000
 12677              		.cfi_remember_state
 12678              		.cfi_def_cfa_offset 56
 12679 059b 5B       		popq	%rbx
 12680              		.cfi_def_cfa_offset 48
 12681 059c 5D       		popq	%rbp
 12682              		.cfi_def_cfa_offset 40
 12683              	.LVL1940:
 12684 059d 415C     		popq	%r12
 12685              		.cfi_def_cfa_offset 32
 12686              	.LVL1941:
 12687 059f 415D     		popq	%r13
 12688              		.cfi_def_cfa_offset 24
 12689              	.LVL1942:
 12690 05a1 415E     		popq	%r14
 12691              		.cfi_def_cfa_offset 16
 12692              	.LVL1943:
 12693 05a3 415F     		popq	%r15
 12694              		.cfi_def_cfa_offset 8
 12695 05a5 C3       		ret
 12696              	.LVL1944:
 12697              	.L219:
 12698              		.cfi_restore_state
 12699 05a6 E8000000 		call	__stack_chk_fail
 12699      00
 12700              	.LVL1945:
 12701              		.cfi_endproc
 12702              	.LFE85:
 12704              		.section	.text.unlikely.jpeg_idct_8x16
 12705              	.LCOLDE24:
 12706              		.section	.text.jpeg_idct_8x16
 12707              	.LHOTE24:
 12708              		.section	.text.unlikely.jpeg_idct_7x14,"ax",@progbits
 12709              	.LCOLDB25:
 12710              		.section	.text.jpeg_idct_7x14,"ax",@progbits
 12711              	.LHOTB25:
 12712              		.p2align 4,,15
 12713              		.globl	jpeg_idct_7x14
 12715              	jpeg_idct_7x14:
 12716              	.LFB86:
4256:fltk-1.3.4-1/jpeg/jidctint.c **** 
4257:fltk-1.3.4-1/jpeg/jidctint.c **** 
4258:fltk-1.3.4-1/jpeg/jidctint.c **** /*
4259:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
4260:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 7x14 output block.
4261:fltk-1.3.4-1/jpeg/jidctint.c ****  *
4262:fltk-1.3.4-1/jpeg/jidctint.c ****  * 14-point IDCT in pass 1 (columns), 7-point in pass 2 (rows).
4263:fltk-1.3.4-1/jpeg/jidctint.c ****  */
4264:fltk-1.3.4-1/jpeg/jidctint.c **** 
4265:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
4266:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_7x14 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
4267:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
4268:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
4269:fltk-1.3.4-1/jpeg/jidctint.c **** {
 12717              		.loc 1 4269 0
 12718              		.cfi_startproc
 12719              	.LVL1946:
 12720 0000 4157     		pushq	%r15
 12721              		.cfi_def_cfa_offset 16
 12722              		.cfi_offset 15, -16
 12723 0002 4156     		pushq	%r14
 12724              		.cfi_def_cfa_offset 24
 12725              		.cfi_offset 14, -24
 12726 0004 4989D6   		movq	%rdx, %r14
 12727 0007 4155     		pushq	%r13
 12728              		.cfi_def_cfa_offset 32
 12729              		.cfi_offset 13, -32
 12730 0009 4154     		pushq	%r12
 12731              		.cfi_def_cfa_offset 40
 12732              		.cfi_offset 12, -40
 12733 000b 55       		pushq	%rbp
 12734              		.cfi_def_cfa_offset 48
 12735              		.cfi_offset 6, -48
 12736 000c 53       		pushq	%rbx
 12737              		.cfi_def_cfa_offset 56
 12738              		.cfi_offset 3, -56
 12739 000d 4881EC18 		subq	$536, %rsp
 12739      020000
 12740              		.cfi_def_cfa_offset 592
4270:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
4271:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25, tmp26;
4272:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
4273:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
4274:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
4275:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
4276:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
4277:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
4278:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
4279:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[7*14];	/* buffers data between passes */
4280:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
4281:fltk-1.3.4-1/jpeg/jidctint.c **** 
4282:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
4283:fltk-1.3.4-1/jpeg/jidctint.c ****    * 14-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/28).
4284:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4285:fltk-1.3.4-1/jpeg/jidctint.c **** 
4286:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
4287:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 12741              		.loc 1 4287 0
 12742 0014 4C8B6E58 		movq	88(%rsi), %r13
4269:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 12743              		.loc 1 4269 0
 12744 0018 64488B04 		movq	%fs:40, %rax
 12744      25280000 
 12744      00
 12745 0021 48898424 		movq	%rax, 520(%rsp)
 12745      08020000 
 12746 0029 31C0     		xorl	%eax, %eax
4277:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 12747              		.loc 1 4277 0
 12748 002b 488B87B8 		movq	440(%rdi), %rax
 12748      010000
4288:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 12749              		.loc 1 4288 0
 12750 0032 488DB424 		leaq	128(%rsp), %rsi
 12750      80000000 
 12751              	.LVL1947:
4269:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15, tmp16;
 12752              		.loc 1 4269 0
 12753 003a 48894C24 		movq	%rcx, 104(%rsp)
 12753      68
 12754 003f 44894424 		movl	%r8d, 116(%rsp)
 12754      74
4277:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 12755              		.loc 1 4277 0
 12756 0044 4C8DB880 		leaq	128(%rax), %r15
 12756      000000
 12757              	.LVL1948:
4289:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 7; ctr++, inptr++, quantptr++, wsptr++) {
 12758              		.loc 1 4289 0
 12759 004b 488D8424 		leaq	156(%rsp), %rax
 12759      9C000000 
 12760 0053 4C897C24 		movq	%r15, 120(%rsp)
 12760      78
 12761 0058 48894424 		movq	%rax, 96(%rsp)
 12761      60
 12762              	.LVL1949:
 12763 005d 0F1F00   		.p2align 4,,10
 12764              		.p2align 3
 12765              	.L221:
4290:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4291:fltk-1.3.4-1/jpeg/jidctint.c **** 
4292:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
4293:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
4294:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4295:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 += ONE << (CONST_BITS-PASS1_BITS-1);
4296:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 12766              		.loc 1 4296 0 discriminator 3
 12767 0060 410FBF56 		movswl	64(%r14), %edx
 12767      40
4292:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 12768              		.loc 1 4292 0 discriminator 3
 12769 0065 410FBF06 		movswl	(%r14), %eax
 12770              		.loc 1 4296 0 discriminator 3
 12771 0069 410FAF95 		imull	128(%r13), %edx
 12771      80000000 
4292:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 12772              		.loc 1 4292 0 discriminator 3
 12773 0071 410FAF45 		imull	0(%r13), %eax
 12773      00
4297:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(1.274162392));         /* c4 */
4298:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z4, FIX(0.314692123));         /* c12 */
4299:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(0.881747734));         /* c8 */
4300:fltk-1.3.4-1/jpeg/jidctint.c **** 
4301:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z2;
4302:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
4303:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
4304:fltk-1.3.4-1/jpeg/jidctint.c **** 
4305:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = RIGHT_SHIFT(z1 - ((z2 + z3 - z4) << 1), /* c0 = (c4+c12-c8)*2 */
4306:fltk-1.3.4-1/jpeg/jidctint.c **** 			CONST_BITS-PASS1_BITS);
4307:fltk-1.3.4-1/jpeg/jidctint.c **** 
4308:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 12774              		.loc 1 4308 0 discriminator 3
 12775 0076 450FBF5E 		movswl	32(%r14), %r11d
 12775      20
 12776 007b 450FAF5D 		imull	64(%r13), %r11d
 12776      40
4296:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(1.274162392));         /* c4 */
 12777              		.loc 1 4296 0 discriminator 3
 12778 0080 4863D2   		movslq	%edx, %rdx
4297:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(1.274162392));         /* c4 */
 12779              		.loc 1 4297 0 discriminator 3
 12780 0083 4869CAC6 		imulq	$10438, %rdx, %rcx
 12780      280000
4292:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
 12781              		.loc 1 4292 0 discriminator 3
 12782 008a 4898     		cltq
 12783              	.LVL1950:
4298:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(0.881747734));         /* c8 */
 12784              		.loc 1 4298 0 discriminator 3
 12785 008c 4869DA12 		imulq	$2578, %rdx, %rbx
 12785      0A0000
4293:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 12786              		.loc 1 4293 0 discriminator 3
 12787 0093 48C1E00D 		salq	$13, %rax
 12788              	.LVL1951:
4299:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12789              		.loc 1 4299 0 discriminator 3
 12790 0097 4869FA37 		imulq	$7223, %rdx, %rdi
 12790      1C0000
4309:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 12791              		.loc 1 4309 0 discriminator 3
 12792 009e 410FBF56 		movswl	96(%r14), %edx
 12792      60
4295:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 12793              		.loc 1 4295 0 discriminator 3
 12794 00a3 48050004 		addq	$1024, %rax
 12794      0000
 12795              	.LVL1952:
 12796              		.loc 1 4309 0 discriminator 3
 12797 00a9 410FAF95 		imull	192(%r13), %edx
 12797      C0000000 
4308:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 12798              		.loc 1 4308 0 discriminator 3
 12799 00b1 4D63DB   		movslq	%r11d, %r11
4303:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12800              		.loc 1 4303 0 discriminator 3
 12801 00b4 4989C7   		movq	%rax, %r15
4301:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 12802              		.loc 1 4301 0 discriminator 3
 12803 00b7 4C8D1408 		leaq	(%rax,%rcx), %r10
 12804              	.LVL1953:
4302:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z4;
 12805              		.loc 1 4302 0 discriminator 3
 12806 00bb 4C8D0418 		leaq	(%rax,%rbx), %r8
 12807              	.LVL1954:
 12808 00bf 48895C24 		movq	%rbx, 16(%rsp)
 12808      10
4301:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z1 + z3;
 12809              		.loc 1 4301 0 discriminator 3
 12810 00c4 48894C24 		movq	%rcx, 8(%rsp)
 12810      08
4303:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12811              		.loc 1 4303 0 discriminator 3
 12812 00c9 4929FF   		subq	%rdi, %r15
 12813 00cc 48897C24 		movq	%rdi, 24(%rsp)
 12813      18
4310:fltk-1.3.4-1/jpeg/jidctint.c **** 
4311:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX(1.105676686));    /* c6 */
4312:fltk-1.3.4-1/jpeg/jidctint.c **** 
4313:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z3 + MULTIPLY(z1, FIX(0.273079590)); /* c2-c6 */
 12814              		.loc 1 4313 0 discriminator 3
 12815 00d1 4D69CBBD 		imulq	$2237, %r11, %r9
 12815      080000
4303:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12816              		.loc 1 4303 0 discriminator 3
 12817 00d8 4C89F9   		movq	%r15, %rcx
 12818              	.LVL1955:
4309:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12819              		.loc 1 4309 0 discriminator 3
 12820 00db 4863D2   		movslq	%edx, %rdx
 12821              	.LVL1956:
4311:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12822              		.loc 1 4311 0 discriminator 3
 12823 00de 498D3C13 		leaq	(%r11,%rdx), %rdi
 12824              	.LVL1957:
4314:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 12825              		.loc 1 4314 0 discriminator 3
 12826 00e2 4869DAFC 		imulq	$-14084, %rdx, %rbx
 12826      C8FFFF
 12827              	.LVL1958:
4311:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12828              		.loc 1 4311 0 discriminator 3
 12829 00e9 4869FF62 		imulq	$9058, %rdi, %rdi
 12829      230000
 12830              	.LVL1959:
4315:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.613604268)) -     /* c10 */
 12831              		.loc 1 4315 0 discriminator 3
 12832 00f0 4D69DBA3 		imulq	$5027, %r11, %r11
 12832      130000
 12833              	.LVL1960:
4313:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 12834              		.loc 1 4313 0 discriminator 3
 12835 00f7 4901F9   		addq	%rdi, %r9
 12836              	.LVL1961:
4314:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX(1.719280954)); /* c6+c10 */
 12837              		.loc 1 4314 0 discriminator 3
 12838 00fa 4801DF   		addq	%rbx, %rdi
 12839              	.LVL1962:
 12840              		.loc 1 4315 0 discriminator 3
 12841 00fd 4869D2E1 		imulq	$-11295, %rdx, %rdx
 12841      D3FFFF
 12842              	.LVL1963:
4316:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
4317:fltk-1.3.4-1/jpeg/jidctint.c **** 
4318:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp13;
 12843              		.loc 1 4318 0 discriminator 3
 12844 0104 4B8D1C0A 		leaq	(%r10,%r9), %rbx
4319:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
4320:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp14;
 12845              		.loc 1 4320 0 discriminator 3
 12846 0108 4D8D3C38 		leaq	(%r8,%rdi), %r15
4319:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 12847              		.loc 1 4319 0 discriminator 3
 12848 010c 4D29CA   		subq	%r9, %r10
 12849              	.LVL1964:
4321:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 12850              		.loc 1 4321 0 discriminator 3
 12851 010f 4929F8   		subq	%rdi, %r8
 12852              	.LVL1965:
4322:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp12 + tmp15;
4323:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
4324:fltk-1.3.4-1/jpeg/jidctint.c **** 
4325:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4326:fltk-1.3.4-1/jpeg/jidctint.c **** 
4327:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
4328:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
4329:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
4330:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 12853              		.loc 1 4330 0 discriminator 3
 12854 0112 410FBF7E 		movswl	112(%r14), %edi
 12854      70
 12855              	.LVL1966:
4321:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 12856              		.loc 1 4321 0 discriminator 3
 12857 0117 4C894424 		movq	%r8, 56(%rsp)
 12857      38
4327:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 12858              		.loc 1 4327 0 discriminator 3
 12859 011c 450FBF46 		movswl	16(%r14), %r8d
 12859      10
 12860 0121 450FAF45 		imull	32(%r13), %r8d
 12860      20
4315:fltk-1.3.4-1/jpeg/jidctint.c **** 	    MULTIPLY(z2, FIX(1.378756276));      /* c2 */
 12861              		.loc 1 4315 0 discriminator 3
 12862 0126 4C01DA   		addq	%r11, %rdx
 12863              	.LVL1967:
4318:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp26 = tmp10 - tmp13;
 12864              		.loc 1 4318 0 discriminator 3
 12865 0129 48895C24 		movq	%rbx, 32(%rsp)
 12865      20
 12866              	.LVL1968:
4319:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp14;
 12867              		.loc 1 4319 0 discriminator 3
 12868 012e 4C895424 		movq	%r10, 40(%rsp)
 12868      28
 12869              	.LVL1969:
4322:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 12870              		.loc 1 4322 0 discriminator 3
 12871 0133 4C8D0C11 		leaq	(%rcx,%rdx), %r9
 12872              	.LVL1970:
4323:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12873              		.loc 1 4323 0 discriminator 3
 12874 0137 4829D1   		subq	%rdx, %rcx
 12875              	.LVL1971:
4328:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 12876              		.loc 1 4328 0 discriminator 3
 12877 013a 410FBF56 		movswl	48(%r14), %edx
 12877      30
 12878              	.LVL1972:
4323:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12879              		.loc 1 4323 0 discriminator 3
 12880 013f 48894C24 		movq	%rcx, 72(%rsp)
 12880      48
 12881              	.LVL1973:
4329:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 12882              		.loc 1 4329 0 discriminator 3
 12883 0144 410FBF4E 		movswl	80(%r14), %ecx
 12883      50
4328:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 12884              		.loc 1 4328 0 discriminator 3
 12885 0149 410FAF55 		imull	96(%r13), %edx
 12885      60
4329:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 12886              		.loc 1 4329 0 discriminator 3
 12887 014e 410FAF8D 		imull	160(%r13), %ecx
 12887      A0000000 
 12888              		.loc 1 4330 0 discriminator 3
 12889 0156 410FAFBD 		imull	224(%r13), %edi
 12889      E0000000 
4327:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 12890              		.loc 1 4327 0 discriminator 3
 12891 015e 4D63C0   		movslq	%r8d, %r8
 12892              	.LVL1974:
4322:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp12 - tmp15;
 12893              		.loc 1 4322 0 discriminator 3
 12894 0161 4C894C24 		movq	%r9, 64(%rsp)
 12894      40
 12895              	.LVL1975:
4320:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp11 - tmp14;
 12896              		.loc 1 4320 0 discriminator 3
 12897 0166 4C897C24 		movq	%r15, 48(%rsp)
 12897      30
 12898              	.LVL1976:
4331:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z4 << CONST_BITS;
4332:fltk-1.3.4-1/jpeg/jidctint.c **** 
4333:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 + z3;
4334:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
4335:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
4336:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 - MULTIPLY(z1, FIX(1.126980169)); /* c3+c5-c1 */
4337:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
4338:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
4339:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 12899              		.loc 1 4339 0 discriminator 3
 12900 016b 4D89C7   		movq	%r8, %r15
4328:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 12901              		.loc 1 4328 0 discriminator 3
 12902 016e 4863D2   		movslq	%edx, %rdx
 12903              	.LVL1977:
4329:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 12904              		.loc 1 4329 0 discriminator 3
 12905 0171 4863C9   		movslq	%ecx, %rcx
 12906              	.LVL1978:
4334:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
 12907              		.loc 1 4334 0 discriminator 3
 12908 0174 4D8D0C10 		leaq	(%r8,%rdx), %r9
4333:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(1.334852607));           /* c3 */
 12909              		.loc 1 4333 0 discriminator 3
 12910 0178 498D2C08 		leaq	(%r8,%rcx), %rbp
4330:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z4 << CONST_BITS;
 12911              		.loc 1 4330 0 discriminator 3
 12912 017c 4863DF   		movslq	%edi, %rbx
 12913              	.LVL1979:
4334:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp14, FIX(1.197448846));             /* c5 */
 12914              		.loc 1 4334 0 discriminator 3
 12915 017f 4D69D9B7 		imulq	$10935, %r9, %r11
 12915      2A0000
 12916              	.LVL1980:
4331:fltk-1.3.4-1/jpeg/jidctint.c **** 
 12917              		.loc 1 4331 0 discriminator 3
 12918 0186 48895C24 		movq	%rbx, 80(%rsp)
 12918      50
 12919 018b 48C1E30D 		salq	$13, %rbx
 12920              	.LVL1981:
4335:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + tmp12 + tmp13 - MULTIPLY(z1, FIX(1.126980169)); /* c3+c5-c1 */
 12921              		.loc 1 4335 0 discriminator 3
 12922 018f 4869FD52 		imulq	$9810, %rbp, %rdi
 12922      260000
 12923              	.LVL1982:
4338:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 12924              		.loc 1 4338 0 discriminator 3
 12925 0196 4D69D00B 		imulq	$-8693, %r8, %r10
 12925      DEFFFF
4336:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 12926              		.loc 1 4336 0 discriminator 3
 12927 019d 4D8D243B 		leaq	(%r11,%rdi), %r12
4337:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 = tmp14 - MULTIPLY(z1, FIX(1.061150426));        /* c9+c11-c13 */
 12928              		.loc 1 4337 0 discriminator 3
 12929 01a1 4869ED14 		imulq	$6164, %rbp, %rbp
 12929      180000
 12930              	.LVL1983:
4336:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 12931              		.loc 1 4336 0 discriminator 3
 12932 01a8 4D8D0C1C 		leaq	(%r12,%rbx), %r9
 12933 01ac 4D69E0F0 		imulq	$-9232, %r8, %r12
 12933      DBFFFF
4340:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - tmp13;        /* c11 */
4341:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
4342:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    += z4;
4343:fltk-1.3.4-1/jpeg/jidctint.c ****     z4    = MULTIPLY(z2 + z3, - FIX(0.158341681)) - tmp13; /* -c13 */
 12934              		.loc 1 4343 0 discriminator 3
 12935 01b3 4C8D040A 		leaq	(%rdx,%rcx), %r8
 12936              	.LVL1984:
4336:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(tmp14, FIX(0.752406978));             /* c9 */
 12937              		.loc 1 4336 0 discriminator 3
 12938 01b7 4D01CC   		addq	%r9, %r12
 12939              	.LVL1985:
4338:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    -= z2;
 12940              		.loc 1 4338 0 discriminator 3
 12941 01ba 4901EA   		addq	%rbp, %r10
 12942              	.LVL1986:
4339:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(z1, FIX(0.467085129)) - tmp13;        /* c11 */
 12943              		.loc 1 4339 0 discriminator 3
 12944 01bd 4929D7   		subq	%rdx, %r15
 12945              	.LVL1987:
 12946              		.loc 1 4343 0 discriminator 3
 12947 01c0 4D69C0EF 		imulq	$-1297, %r8, %r8
 12947      FAFFFF
4340:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
 12948              		.loc 1 4340 0 discriminator 3
 12949 01c7 4C897C24 		movq	%r15, 88(%rsp)
 12949      58
4344:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z4 - MULTIPLY(z2, FIX(0.424103948));          /* c3-c9-c13 */
 12950              		.loc 1 4344 0 discriminator 3
 12951 01cc 4C69CA6E 		imulq	$-3474, %rdx, %r9
 12951      F2FFFF
4340:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
 12952              		.loc 1 4340 0 discriminator 3
 12953 01d3 4D69FFF2 		imulq	$3826, %r15, %r15
 12953      0E0000
 12954              	.LVL1988:
4343:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += z4 - MULTIPLY(z2, FIX(0.424103948));          /* c3-c9-c13 */
 12955              		.loc 1 4343 0 discriminator 3
 12956 01da 4929D8   		subq	%rbx, %r8
 12957              		.loc 1 4344 0 discriminator 3
 12958 01dd 4D01C1   		addq	%r8, %r9
 12959 01e0 4D01D9   		addq	%r11, %r9
4340:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp16 += tmp15;
 12960              		.loc 1 4340 0 discriminator 3
 12961 01e3 4929DF   		subq	%rbx, %r15
 12962              	.LVL1989:
4345:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z4 - MULTIPLY(z3, FIX(2.373959773));          /* c3+c5-c13 */
 12963              		.loc 1 4345 0 discriminator 3
 12964 01e6 4C69D909 		imulq	$-19447, %rcx, %r11
 12964      B4FFFF
 12965              	.LVL1990:
4341:fltk-1.3.4-1/jpeg/jidctint.c ****     z1    += z4;
 12966              		.loc 1 4341 0 discriminator 3
 12967 01ed 4D01FA   		addq	%r15, %r10
 12968              	.LVL1991:
 12969              		.loc 1 4345 0 discriminator 3
 12970 01f0 4D01D8   		addq	%r11, %r8
 12971              	.LVL1992:
 12972 01f3 4901F8   		addq	%rdi, %r8
 12973              	.LVL1993:
4346:fltk-1.3.4-1/jpeg/jidctint.c ****     z4    = MULTIPLY(z3 - z2, FIX(1.405321284));           /* c1 */
 12974              		.loc 1 4346 0 discriminator 3
 12975 01f6 4889CF   		movq	%rcx, %rdi
 12976 01f9 4829D7   		subq	%rdx, %rdi
 12977 01fc 4869FFF8 		imulq	$11512, %rdi, %rdi
 12977      2C0000
 12978              	.LVL1994:
4347:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z4 + tmp13 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 12979              		.loc 1 4347 0 discriminator 3
 12980 0203 4C69D9E6 		imulq	$-13850, %rcx, %r11
 12980      C9FFFF
4348:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 12981              		.loc 1 4348 0 discriminator 3
 12982 020a 4869D299 		imulq	$5529, %rdx, %rdx
 12982      150000
 12983              	.LVL1995:
4347:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 += z4 + tmp13 - MULTIPLY(z3, FIX(1.6906431334)); /* c1+c9-c11 */
 12984              		.loc 1 4347 0 discriminator 3
 12985 0211 4801FB   		addq	%rdi, %rbx
 12986              	.LVL1996:
 12987 0214 4C01DB   		addq	%r11, %rbx
4349:fltk-1.3.4-1/jpeg/jidctint.c **** 
4350:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = (z1 - z3) << PASS1_BITS;
4351:fltk-1.3.4-1/jpeg/jidctint.c **** 
4352:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4353:fltk-1.3.4-1/jpeg/jidctint.c **** 
4354:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*0]  = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
 12988              		.loc 1 4354 0 discriminator 3
 12989 0217 4C8B5C24 		movq	32(%rsp), %r11
 12989      20
4348:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 12990              		.loc 1 4348 0 discriminator 3
 12991 021c 4801FA   		addq	%rdi, %rdx
4347:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 12992              		.loc 1 4347 0 discriminator 3
 12993 021f 4801EB   		addq	%rbp, %rbx
 12994              	.LVL1997:
4348:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += z4 + MULTIPLY(z2, FIX(0.674957567));          /* c1+c11-c5 */
 12995              		.loc 1 4348 0 discriminator 3
 12996 0222 4901D7   		addq	%rdx, %r15
 12997              	.LVL1998:
 12998              		.loc 1 4354 0 discriminator 3
 12999 0225 4B8D1423 		leaq	(%r11,%r12), %rdx
4355:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*13] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 13000              		.loc 1 4355 0 discriminator 3
 13001 0229 4D29E3   		subq	%r12, %r11
4354:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*13] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 13002              		.loc 1 4354 0 discriminator 3
 13003 022c 48C1FA0B 		sarq	$11, %rdx
 13004 0230 8916     		movl	%edx, (%rsi)
 13005              		.loc 1 4355 0 discriminator 3
 13006 0232 4C89DA   		movq	%r11, %rdx
4356:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 13007              		.loc 1 4356 0 discriminator 3
 13008 0235 4C8B5C24 		movq	48(%rsp), %r11
 13008      30
4355:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*13] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 13009              		.loc 1 4355 0 discriminator 3
 13010 023a 48C1FA0B 		sarq	$11, %rdx
 13011 023e 89966C01 		movl	%edx, 364(%rsi)
 13011      0000
 13012              		.loc 1 4356 0 discriminator 3
 13013 0244 4B8D140B 		leaq	(%r11,%r9), %rdx
4357:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*12] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 13014              		.loc 1 4357 0 discriminator 3
 13015 0248 4D29CB   		subq	%r9, %r11
4356:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 13016              		.loc 1 4356 0 discriminator 3
 13017 024b 48C1FA0B 		sarq	$11, %rdx
 13018 024f 89561C   		movl	%edx, 28(%rsi)
 13019              		.loc 1 4357 0 discriminator 3
 13020 0252 4C89DA   		movq	%r11, %rdx
 13021 0255 48C1FA0B 		sarq	$11, %rdx
 13022 0259 89965001 		movl	%edx, 336(%rsi)
 13022      0000
4358:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 13023              		.loc 1 4358 0 discriminator 3
 13024 025f 4C8B4C24 		movq	64(%rsp), %r9
 13024      40
 13025              	.LVL1999:
4359:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
4360:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*3]  = (int) (tmp23 + tmp13);
 13026              		.loc 1 4360 0 discriminator 3
 13027 0264 488B7C24 		movq	8(%rsp), %rdi
 13027      08
 13028              	.LVL2000:
 13029 0269 48037C24 		addq	16(%rsp), %rdi
 13029      10
 13030              	.LVL2001:
4358:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 13031              		.loc 1 4358 0 discriminator 3
 13032 026e 4B8D1401 		leaq	(%r9,%r8), %rdx
4359:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 13033              		.loc 1 4359 0 discriminator 3
 13034 0272 4D29C1   		subq	%r8, %r9
4361:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*10] = (int) (tmp23 - tmp13);
4362:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
4363:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*9]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
4364:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 13035              		.loc 1 4364 0 discriminator 3
 13036 0275 4C8B4424 		movq	56(%rsp), %r8
 13036      38
 13037              	.LVL2002:
4358:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 13038              		.loc 1 4358 0 discriminator 3
 13039 027a 48C1FA0B 		sarq	$11, %rdx
 13040 027e 895638   		movl	%edx, 56(%rsi)
4359:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*11] = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 13041              		.loc 1 4359 0 discriminator 3
 13042 0281 4C89CA   		movq	%r9, %rdx
 13043 0284 48C1FA0B 		sarq	$11, %rdx
 13044 0288 89963401 		movl	%edx, 308(%rsi)
 13044      0000
4360:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*10] = (int) (tmp23 - tmp13);
 13045              		.loc 1 4360 0 discriminator 3
 13046 028e 4889FA   		movq	%rdi, %rdx
 13047 0291 482B5424 		subq	24(%rsp), %rdx
 13047      18
4289:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 13048              		.loc 1 4289 0 discriminator 3
 13049 0296 4983C602 		addq	$2, %r14
 13050              	.LVL2003:
 13051 029a 4983C504 		addq	$4, %r13
 13052              	.LVL2004:
 13053 029e 4883C604 		addq	$4, %rsi
 13054              	.LVL2005:
4360:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*10] = (int) (tmp23 - tmp13);
 13055              		.loc 1 4360 0 discriminator 3
 13056 02a2 4801D2   		addq	%rdx, %rdx
 13057 02a5 4829D0   		subq	%rdx, %rax
 13058              	.LVL2006:
 13059 02a8 488B5424 		movq	80(%rsp), %rdx
 13059      50
 13060 02ad 48035424 		addq	88(%rsp), %rdx
 13060      58
 13061              	.LVL2007:
 13062 02b2 48C1F80B 		sarq	$11, %rax
 13063 02b6 4829CA   		subq	%rcx, %rdx
 13064              	.LVL2008:
 13065 02b9 48C1E202 		salq	$2, %rdx
 13066              	.LVL2009:
 13067 02bd 8D0C02   		leal	(%rdx,%rax), %ecx
 13068              	.LVL2010:
4361:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 13069              		.loc 1 4361 0 discriminator 3
 13070 02c0 29D0     		subl	%edx, %eax
 13071 02c2 89861401 		movl	%eax, 276(%rsi)
 13071      0000
4360:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*10] = (int) (tmp23 - tmp13);
 13072              		.loc 1 4360 0 discriminator 3
 13073 02c8 894E50   		movl	%ecx, 80(%rsi)
4362:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*9]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 13074              		.loc 1 4362 0 discriminator 3
 13075 02cb 488B4C24 		movq	72(%rsp), %rcx
 13075      48
 13076 02d0 488D0419 		leaq	(%rcx,%rbx), %rax
4363:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 13077              		.loc 1 4363 0 discriminator 3
 13078 02d4 4829D9   		subq	%rbx, %rcx
4362:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*9]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 13079              		.loc 1 4362 0 discriminator 3
 13080 02d7 48C1F80B 		sarq	$11, %rax
 13081 02db 89466C   		movl	%eax, 108(%rsi)
4363:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 13082              		.loc 1 4363 0 discriminator 3
 13083 02de 4889C8   		movq	%rcx, %rax
4365:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
4366:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*6]  = (int) RIGHT_SHIFT(tmp26 + tmp16, CONST_BITS-PASS1_BITS);
 13084              		.loc 1 4366 0 discriminator 3
 13085 02e1 488B4C24 		movq	40(%rsp), %rcx
 13085      28
4363:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 13086              		.loc 1 4363 0 discriminator 3
 13087 02e6 48C1F80B 		sarq	$11, %rax
 13088 02ea 8986F800 		movl	%eax, 248(%rsi)
 13088      0000
4364:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 13089              		.loc 1 4364 0 discriminator 3
 13090 02f0 4B8D0438 		leaq	(%r8,%r15), %rax
4365:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 13091              		.loc 1 4365 0 discriminator 3
 13092 02f4 4D29F8   		subq	%r15, %r8
4364:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 13093              		.loc 1 4364 0 discriminator 3
 13094 02f7 48C1F80B 		sarq	$11, %rax
 13095 02fb 89868800 		movl	%eax, 136(%rsi)
 13095      0000
4365:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*8]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 13096              		.loc 1 4365 0 discriminator 3
 13097 0301 4C89C0   		movq	%r8, %rax
 13098 0304 48C1F80B 		sarq	$11, %rax
 13099 0308 8986DC00 		movl	%eax, 220(%rsi)
 13099      0000
 13100              		.loc 1 4366 0 discriminator 3
 13101 030e 4889C8   		movq	%rcx, %rax
 13102 0311 4C01D0   		addq	%r10, %rax
 13103 0314 48C1F80B 		sarq	$11, %rax
 13104 0318 8986A400 		movl	%eax, 164(%rsi)
 13104      0000
4367:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[7*7]  = (int) RIGHT_SHIFT(tmp26 - tmp16, CONST_BITS-PASS1_BITS);
 13105              		.loc 1 4367 0 discriminator 3
 13106 031e 4889C8   		movq	%rcx, %rax
 13107 0321 4C29D0   		subq	%r10, %rax
 13108 0324 48C1F80B 		sarq	$11, %rax
 13109 0328 8986C000 		movl	%eax, 192(%rsi)
 13109      0000
 13110              	.LVL2011:
4289:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 13111              		.loc 1 4289 0 discriminator 3
 13112 032e 483B7424 		cmpq	96(%rsp), %rsi
 13112      60
 13113 0333 0F8527FD 		jne	.L221
 13113      FFFF
 13114 0339 8B442474 		movl	116(%rsp), %eax
 13115 033d 4C8B7C24 		movq	120(%rsp), %r15
 13115      78
 13116              	.LVL2012:
4289:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 13117              		.loc 1 4289 0 is_stmt 0
 13118 0342 4C8DA424 		leaq	128(%rsp), %r12
 13118      80000000 
 13119              	.LVL2013:
 13120 034a 488B4C24 		movq	104(%rsp), %rcx
 13120      68
 13121 034f 48894424 		movq	%rax, 16(%rsp)
 13121      10
4368:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4369:fltk-1.3.4-1/jpeg/jidctint.c **** 
4370:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 14 rows from work array, store into output array.
4371:fltk-1.3.4-1/jpeg/jidctint.c ****    * 7-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/14).
4372:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4373:fltk-1.3.4-1/jpeg/jidctint.c **** 
4374:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
4375:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 14; ctr++) {
 13122              		.loc 1 4375 0 is_stmt 1
 13123 0354 488D8424 		leaq	520(%rsp), %rax
 13123      08020000 
 13124 035c 48894424 		movq	%rax, 24(%rsp)
 13124      18
 13125              	.LVL2014:
 13126              		.p2align 4,,10
 13127 0361 0F1F8000 		.p2align 3
 13127      000000
 13128              	.L222:
4376:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
4377:fltk-1.3.4-1/jpeg/jidctint.c **** 
4378:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4379:fltk-1.3.4-1/jpeg/jidctint.c **** 
4380:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4381:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
4382:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 <<= CONST_BITS;
4383:fltk-1.3.4-1/jpeg/jidctint.c **** 
4384:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[2];
4385:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
 13129              		.loc 1 4385 0 discriminator 3
 13130 0368 4D635424 		movslq	16(%r12), %r10
 13130      10
4384:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[4];
 13131              		.loc 1 4384 0 discriminator 3
 13132 036d 4D635C24 		movslq	8(%r12), %r11
 13132      08
4386:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[6];
 13133              		.loc 1 4386 0 discriminator 3
 13134 0372 49637424 		movslq	24(%r12), %rsi
 13134      18
4381:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 <<= CONST_BITS;
 13135              		.loc 1 4381 0 discriminator 3
 13136 0377 49630424 		movslq	(%r12), %rax
4376:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13137              		.loc 1 4376 0 discriminator 3
 13138 037b 488B5C24 		movq	16(%rsp), %rbx
 13138      10
 13139 0380 480319   		addq	(%rcx), %rbx
 13140              	.LVL2015:
4387:fltk-1.3.4-1/jpeg/jidctint.c **** 
4388:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(z2 - z3, FIX(0.881747734));       /* c4 */
 13141              		.loc 1 4388 0 discriminator 3
 13142 0383 4C89D7   		movq	%r10, %rdi
4389:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z1 - z2, FIX(0.314692123));       /* c6 */
 13143              		.loc 1 4389 0 discriminator 3
 13144 0386 4C89DA   		movq	%r11, %rdx
4388:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z1 - z2, FIX(0.314692123));       /* c6 */
 13145              		.loc 1 4388 0 discriminator 3
 13146 0389 4829F7   		subq	%rsi, %rdi
 13147              		.loc 1 4389 0 discriminator 3
 13148 038c 4C29D2   		subq	%r10, %rdx
4381:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 <<= CONST_BITS;
 13149              		.loc 1 4381 0 discriminator 3
 13150 038f 4883C010 		addq	$16, %rax
 13151              	.LVL2016:
4388:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = MULTIPLY(z1 - z2, FIX(0.314692123));       /* c6 */
 13152              		.loc 1 4388 0 discriminator 3
 13153 0393 4C69EF37 		imulq	$7223, %rdi, %r13
 13153      1C0000
4390:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp22 + tmp23 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
4391:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 13154              		.loc 1 4391 0 discriminator 3
 13155 039a 498D3C33 		leaq	(%r11,%rsi), %rdi
4382:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13156              		.loc 1 4382 0 discriminator 3
 13157 039e 48C1E00D 		salq	$13, %rax
 13158              	.LVL2017:
4389:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp20 + tmp22 + tmp23 - MULTIPLY(z2, FIX(1.841218003)); /* c2+c4-c6 */
 13159              		.loc 1 4389 0 discriminator 3
 13160 03a2 4869EA12 		imulq	$2578, %rdx, %rbp
 13160      0A0000
 13161              	.LVL2018:
4392:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= tmp10;
4393:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp10, FIX(1.274162392)) + tmp23; /* c2 */
 13162              		.loc 1 4393 0 discriminator 3
 13163 03a9 4C69CFC6 		imulq	$10438, %rdi, %r9
 13163      280000
 13164 03b0 48897C24 		movq	%rdi, 8(%rsp)
 13164      08
4390:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 13165              		.loc 1 4390 0 discriminator 3
 13166 03b5 4D8D442D 		leaq	0(%r13,%rbp), %r8
 13166      00
4394:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 += tmp10 - MULTIPLY(z3, FIX(0.077722536));   /* c2-c4-c6 */
4395:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 += tmp10 - MULTIPLY(z1, FIX(2.470602249));   /* c2+c4+c6 */
 13167              		.loc 1 4395 0 discriminator 3
 13168 03ba 4D69DBF1 		imulq	$-20239, %r11, %r11
 13168      B0FFFF
 13169              	.LVL2019:
4393:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 += tmp10 - MULTIPLY(z3, FIX(0.077722536));   /* c2-c4-c6 */
 13170              		.loc 1 4393 0 discriminator 3
 13171 03c1 4901C1   		addq	%rax, %r9
4390:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 13172              		.loc 1 4390 0 discriminator 3
 13173 03c4 498D1400 		leaq	(%r8,%rax), %rdx
 13174 03c8 4D69C215 		imulq	$-15083, %r10, %r8
 13174      C5FFFF
 13175              		.loc 1 4395 0 discriminator 3
 13176 03cf 4D01CB   		addq	%r9, %r11
4390:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
 13177              		.loc 1 4390 0 discriminator 3
 13178 03d2 4901D0   		addq	%rdx, %r8
 13179              	.LVL2020:
 13180              		.loc 1 4395 0 discriminator 3
 13181 03d5 498D142B 		leaq	(%r11,%rbp), %rdx
4396:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 += MULTIPLY(z2, FIX(1.414213562));           /* c0 */
4397:fltk-1.3.4-1/jpeg/jidctint.c **** 
4398:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4399:fltk-1.3.4-1/jpeg/jidctint.c **** 
4400:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
4401:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 13182              		.loc 1 4401 0 discriminator 3
 13183 03d9 4D635C24 		movslq	12(%r12), %r11
 13183      0C
4394:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 += tmp10 - MULTIPLY(z1, FIX(2.470602249));   /* c2+c4+c6 */
 13184              		.loc 1 4394 0 discriminator 3
 13185 03de 4869FE83 		imulq	$-637, %rsi, %rdi
 13185      FDFFFF
 13186              	.LVL2021:
4400:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 13187              		.loc 1 4400 0 discriminator 3
 13188 03e5 49637424 		movslq	4(%r12), %rsi
 13188      04
 13189              	.LVL2022:
4402:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 13190              		.loc 1 4402 0 discriminator 3
 13191 03ea 49636C24 		movslq	20(%r12), %rbp
 13191      14
 13192              	.LVL2023:
4403:fltk-1.3.4-1/jpeg/jidctint.c **** 
4404:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z2, FIX(0.935414347));       /* (c3+c1-c5)/2 */
 13193              		.loc 1 4404 0 discriminator 3
 13194 03ef 4E8D341E 		leaq	(%rsi,%r11), %r14
4394:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 += tmp10 - MULTIPLY(z1, FIX(2.470602249));   /* c2+c4+c6 */
 13195              		.loc 1 4394 0 discriminator 3
 13196 03f3 4C01CF   		addq	%r9, %rdi
4405:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.170262339));       /* (c3+c5-c1)/2 */
 13197              		.loc 1 4405 0 discriminator 3
 13198 03f6 4989F1   		movq	%rsi, %r9
 13199              	.LVL2024:
 13200 03f9 4D29D9   		subq	%r11, %r9
4406:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 - tmp12;
4407:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
4408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2 + z3, - FIX(1.378756276));     /* -c1 */
4409:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
4410:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));          /* c5 */
 13201              		.loc 1 4410 0 discriminator 3
 13202 03fc 4801EE   		addq	%rbp, %rsi
4408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
 13203              		.loc 1 4408 0 discriminator 3
 13204 03ff 4901EB   		addq	%rbp, %r11
4404:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z1 - z2, FIX(0.170262339));       /* (c3+c5-c1)/2 */
 13205              		.loc 1 4404 0 discriminator 3
 13206 0402 4D69F6EF 		imulq	$7663, %r14, %r14
 13206      1D0000
4394:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 += tmp10 - MULTIPLY(z1, FIX(2.470602249));   /* c2+c4+c6 */
 13207              		.loc 1 4394 0 discriminator 3
 13208 0409 4C01EF   		addq	%r13, %rdi
 13209              	.LVL2025:
4405:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 - tmp12;
 13210              		.loc 1 4405 0 discriminator 3
 13211 040c 4D69C973 		imulq	$1395, %r9, %r9
 13211      050000
 13212              	.LVL2026:
 13213              		.loc 1 4410 0 discriminator 3
 13214 0413 4869F6A3 		imulq	$5027, %rsi, %rsi
 13214      130000
4406:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
 13215              		.loc 1 4406 0 discriminator 3
 13216 041a 4D89F5   		movq	%r14, %r13
 13217 041d 4D29CD   		subq	%r9, %r13
 13218              	.LVL2027:
4407:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(z2 + z3, - FIX(1.378756276));     /* -c1 */
 13219              		.loc 1 4407 0 discriminator 3
 13220 0420 4D01F1   		addq	%r14, %r9
 13221              	.LVL2028:
4411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
4412:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += z2 + MULTIPLY(z3, FIX(1.870828693));      /* c3+c1-c5 */
 13222              		.loc 1 4412 0 discriminator 3
 13223 0423 4869EDDE 		imulq	$15326, %rbp, %rbp
 13223      3B0000
 13224              	.LVL2029:
4411:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 += z2;
 13225              		.loc 1 4411 0 discriminator 3
 13226 042a 4901F5   		addq	%rsi, %r13
 13227              	.LVL2030:
4408:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 += tmp12;
 13228              		.loc 1 4408 0 discriminator 3
 13229 042d 4D69DBE1 		imulq	$-11295, %r11, %r11
 13229      D3FFFF
 13230              	.LVL2031:
 13231              		.loc 1 4412 0 discriminator 3
 13232 0434 4801F5   		addq	%rsi, %rbp
4413:fltk-1.3.4-1/jpeg/jidctint.c **** 
4414:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4415:fltk-1.3.4-1/jpeg/jidctint.c **** 
4416:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
 13233              		.loc 1 4416 0 discriminator 3
 13234 0437 4A8D342F 		leaq	(%rdi,%r13), %rsi
4409:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z1 + z3, FIX(0.613604268));          /* c5 */
 13235              		.loc 1 4409 0 discriminator 3
 13236 043b 4D01D9   		addq	%r11, %r9
 13237              	.LVL2032:
4412:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13238              		.loc 1 4412 0 discriminator 3
 13239 043e 4901EB   		addq	%rbp, %r11
 13240              	.LVL2033:
 13241              		.loc 1 4416 0 discriminator 3
 13242 0441 48C1FE12 		sarq	$18, %rsi
 13243 0445 81E6FF03 		andl	$1023, %esi
 13243      0000
4417:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4418:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4419:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[6] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
 13244              		.loc 1 4419 0 discriminator 3
 13245 044b 4C29EF   		subq	%r13, %rdi
 13246              	.LVL2034:
4420:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4421:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4422:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
4423:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4424:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4425:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
4426:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4427:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4428:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
4429:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4430:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4431:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
4432:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4433:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4434:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp23,
 13247              		.loc 1 4434 0 discriminator 3
 13248 044e 4C2B5424 		subq	8(%rsp), %r10
 13248      08
 13249              	.LVL2035:
4416:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13250              		.loc 1 4416 0 discriminator 3
 13251 0453 410FB634 		movzbl	(%r15,%rsi), %esi
 13251      37
4419:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13252              		.loc 1 4419 0 discriminator 3
 13253 0458 48C1FF12 		sarq	$18, %rdi
4435:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4436:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4437:fltk-1.3.4-1/jpeg/jidctint.c **** 
4438:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 7;		/* advance pointer to next row */
 13254              		.loc 1 4438 0 discriminator 3
 13255 045c 4983C41C 		addq	$28, %r12
 13256              	.LVL2036:
4419:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13257              		.loc 1 4419 0 discriminator 3
 13258 0460 81E7FF03 		andl	$1023, %edi
 13258      0000
 13259 0466 4883C108 		addq	$8, %rcx
4434:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13260              		.loc 1 4434 0 discriminator 3
 13261 046a 4D69D241 		imulq	$11585, %r10, %r10
 13261      2D0000
4416:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13262              		.loc 1 4416 0 discriminator 3
 13263 0471 408833   		movb	%sil, (%rbx)
4419:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13264              		.loc 1 4419 0 discriminator 3
 13265 0474 410FB634 		movzbl	(%r15,%rdi), %esi
 13265      3F
4434:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13266              		.loc 1 4434 0 discriminator 3
 13267 0479 4C01D0   		addq	%r10, %rax
 13268              	.LVL2037:
4419:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13269              		.loc 1 4419 0 discriminator 3
 13270 047c 40887306 		movb	%sil, 6(%rbx)
4422:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13271              		.loc 1 4422 0 discriminator 3
 13272 0480 4B8D3408 		leaq	(%r8,%r9), %rsi
4425:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13273              		.loc 1 4425 0 discriminator 3
 13274 0484 4D29C8   		subq	%r9, %r8
 13275              	.LVL2038:
 13276 0487 49C1F812 		sarq	$18, %r8
4434:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13277              		.loc 1 4434 0 discriminator 3
 13278 048b 48C1F812 		sarq	$18, %rax
 13279              	.LVL2039:
4422:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13280              		.loc 1 4422 0 discriminator 3
 13281 048f 48C1FE12 		sarq	$18, %rsi
4425:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13282              		.loc 1 4425 0 discriminator 3
 13283 0493 4181E0FF 		andl	$1023, %r8d
 13283      030000
4434:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13284              		.loc 1 4434 0 discriminator 3
 13285 049a 25FF0300 		andl	$1023, %eax
 13285      00
4422:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13286              		.loc 1 4422 0 discriminator 3
 13287 049f 81E6FF03 		andl	$1023, %esi
 13287      0000
 13288 04a5 410FB634 		movzbl	(%r15,%rsi), %esi
 13288      37
 13289 04aa 40887301 		movb	%sil, 1(%rbx)
4425:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13290              		.loc 1 4425 0 discriminator 3
 13291 04ae 430FB634 		movzbl	(%r15,%r8), %esi
 13291      07
 13292 04b3 40887305 		movb	%sil, 5(%rbx)
4428:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13293              		.loc 1 4428 0 discriminator 3
 13294 04b7 4A8D341A 		leaq	(%rdx,%r11), %rsi
4431:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13295              		.loc 1 4431 0 discriminator 3
 13296 04bb 4C29DA   		subq	%r11, %rdx
 13297              	.LVL2040:
 13298 04be 48C1FA12 		sarq	$18, %rdx
4428:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13299              		.loc 1 4428 0 discriminator 3
 13300 04c2 48C1FE12 		sarq	$18, %rsi
4431:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13301              		.loc 1 4431 0 discriminator 3
 13302 04c6 81E2FF03 		andl	$1023, %edx
 13302      0000
4428:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13303              		.loc 1 4428 0 discriminator 3
 13304 04cc 81E6FF03 		andl	$1023, %esi
 13304      0000
4375:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 13305              		.loc 1 4375 0 discriminator 3
 13306 04d2 4C3B6424 		cmpq	24(%rsp), %r12
 13306      18
4428:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13307              		.loc 1 4428 0 discriminator 3
 13308 04d7 410FB634 		movzbl	(%r15,%rsi), %esi
 13308      37
 13309 04dc 40887302 		movb	%sil, 2(%rbx)
4431:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13310              		.loc 1 4431 0 discriminator 3
 13311 04e0 410FB614 		movzbl	(%r15,%rdx), %edx
 13311      17
 13312 04e5 885304   		movb	%dl, 4(%rbx)
4434:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13313              		.loc 1 4434 0 discriminator 3
 13314 04e8 410FB604 		movzbl	(%r15,%rax), %eax
 13314      07
 13315 04ed 884303   		movb	%al, 3(%rbx)
4375:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 13316              		.loc 1 4375 0 discriminator 3
 13317 04f0 0F8572FE 		jne	.L222
 13317      FFFF
4439:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4440:fltk-1.3.4-1/jpeg/jidctint.c **** }
 13318              		.loc 1 4440 0
 13319 04f6 488B8424 		movq	520(%rsp), %rax
 13319      08020000 
 13320 04fe 64483304 		xorq	%fs:40, %rax
 13320      25280000 
 13320      00
 13321 0507 7512     		jne	.L227
 13322 0509 4881C418 		addq	$536, %rsp
 13322      020000
 13323              		.cfi_remember_state
 13324              		.cfi_def_cfa_offset 56
 13325 0510 5B       		popq	%rbx
 13326              		.cfi_def_cfa_offset 48
 13327              	.LVL2041:
 13328 0511 5D       		popq	%rbp
 13329              		.cfi_def_cfa_offset 40
 13330 0512 415C     		popq	%r12
 13331              		.cfi_def_cfa_offset 32
 13332              	.LVL2042:
 13333 0514 415D     		popq	%r13
 13334              		.cfi_def_cfa_offset 24
 13335              	.LVL2043:
 13336 0516 415E     		popq	%r14
 13337              		.cfi_def_cfa_offset 16
 13338 0518 415F     		popq	%r15
 13339              		.cfi_def_cfa_offset 8
 13340 051a C3       		ret
 13341              	.LVL2044:
 13342              	.L227:
 13343              		.cfi_restore_state
 13344 051b E8000000 		call	__stack_chk_fail
 13344      00
 13345              	.LVL2045:
 13346              		.cfi_endproc
 13347              	.LFE86:
 13349              		.section	.text.unlikely.jpeg_idct_7x14
 13350              	.LCOLDE25:
 13351              		.section	.text.jpeg_idct_7x14
 13352              	.LHOTE25:
 13353              		.section	.text.unlikely.jpeg_idct_6x12,"ax",@progbits
 13354              	.LCOLDB26:
 13355              		.section	.text.jpeg_idct_6x12,"ax",@progbits
 13356              	.LHOTB26:
 13357              		.p2align 4,,15
 13358              		.globl	jpeg_idct_6x12
 13360              	jpeg_idct_6x12:
 13361              	.LFB87:
4441:fltk-1.3.4-1/jpeg/jidctint.c **** 
4442:fltk-1.3.4-1/jpeg/jidctint.c **** 
4443:fltk-1.3.4-1/jpeg/jidctint.c **** /*
4444:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
4445:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 6x12 output block.
4446:fltk-1.3.4-1/jpeg/jidctint.c ****  *
4447:fltk-1.3.4-1/jpeg/jidctint.c ****  * 12-point IDCT in pass 1 (columns), 6-point in pass 2 (rows).
4448:fltk-1.3.4-1/jpeg/jidctint.c ****  */
4449:fltk-1.3.4-1/jpeg/jidctint.c **** 
4450:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
4451:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_6x12 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
4452:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
4453:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
4454:fltk-1.3.4-1/jpeg/jidctint.c **** {
 13362              		.loc 1 4454 0
 13363              		.cfi_startproc
 13364              	.LVL2046:
 13365 0000 4157     		pushq	%r15
 13366              		.cfi_def_cfa_offset 16
 13367              		.cfi_offset 15, -16
 13368 0002 4156     		pushq	%r14
 13369              		.cfi_def_cfa_offset 24
 13370              		.cfi_offset 14, -24
 13371 0004 4155     		pushq	%r13
 13372              		.cfi_def_cfa_offset 32
 13373              		.cfi_offset 13, -32
 13374 0006 4154     		pushq	%r12
 13375              		.cfi_def_cfa_offset 40
 13376              		.cfi_offset 12, -40
 13377 0008 55       		pushq	%rbp
 13378              		.cfi_def_cfa_offset 48
 13379              		.cfi_offset 6, -48
 13380 0009 53       		pushq	%rbx
 13381              		.cfi_def_cfa_offset 56
 13382              		.cfi_offset 3, -56
 13383 000a 4889D5   		movq	%rdx, %rbp
 13384 000d 4881EC88 		subq	$392, %rsp
 13384      010000
 13385              		.cfi_def_cfa_offset 448
4455:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
4456:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24, tmp25;
4457:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4;
4458:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
4459:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
4460:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
4461:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
4462:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
4463:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
4464:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[6*12];	/* buffers data between passes */
4465:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
4466:fltk-1.3.4-1/jpeg/jidctint.c **** 
4467:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
4468:fltk-1.3.4-1/jpeg/jidctint.c ****    * 12-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/24).
4469:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4470:fltk-1.3.4-1/jpeg/jidctint.c **** 
4471:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
4472:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 13386              		.loc 1 4472 0
 13387 0014 488B5E58 		movq	88(%rsi), %rbx
4454:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 13388              		.loc 1 4454 0
 13389 0018 64488B04 		movq	%fs:40, %rax
 13389      25280000 
 13389      00
 13390 0021 48898424 		movq	%rax, 376(%rsp)
 13390      78010000 
 13391 0029 31C0     		xorl	%eax, %eax
4462:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 13392              		.loc 1 4462 0
 13393 002b 488B87B8 		movq	440(%rdi), %rax
 13393      010000
4473:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 13394              		.loc 1 4473 0
 13395 0032 4C8D6424 		leaq	80(%rsp), %r12
 13395      50
4454:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14, tmp15;
 13396              		.loc 1 4454 0
 13397 0037 48894C24 		movq	%rcx, 56(%rsp)
 13397      38
 13398 003c 44894424 		movl	%r8d, 68(%rsp)
 13398      44
4462:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 13399              		.loc 1 4462 0
 13400 0041 4C8D9880 		leaq	128(%rax), %r11
 13400      000000
 13401              	.LVL2047:
4474:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 6; ctr++, inptr++, quantptr++, wsptr++) {
 13402              		.loc 1 4474 0
 13403 0048 488D4424 		leaq	104(%rsp), %rax
 13403      68
 13404 004d 4C895C24 		movq	%r11, 72(%rsp)
 13404      48
 13405 0052 48894424 		movq	%rax, 48(%rsp)
 13405      30
 13406              	.LVL2048:
 13407 0057 660F1F84 		.p2align 4,,10
 13407      00000000 
 13407      00
 13408              		.p2align 3
 13409              	.L229:
4475:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4476:fltk-1.3.4-1/jpeg/jidctint.c **** 
4477:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
4478:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
4479:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4480:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += ONE << (CONST_BITS-PASS1_BITS-1);
4481:fltk-1.3.4-1/jpeg/jidctint.c **** 
4482:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 13410              		.loc 1 4482 0 discriminator 3
 13411 0060 0FBF5540 		movswl	64(%rbp), %edx
4477:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 13412              		.loc 1 4477 0 discriminator 3
 13413 0064 0FBF4500 		movswl	0(%rbp), %eax
 13414              		.loc 1 4482 0 discriminator 3
 13415 0068 0FAF9380 		imull	128(%rbx), %edx
 13415      000000
4477:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 13416              		.loc 1 4477 0 discriminator 3
 13417 006f 0FAF03   		imull	(%rbx), %eax
4483:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
4484:fltk-1.3.4-1/jpeg/jidctint.c **** 
4485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z4;
4486:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
4487:fltk-1.3.4-1/jpeg/jidctint.c **** 
4488:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 13418              		.loc 1 4488 0 discriminator 3
 13419 0072 0FBF4D20 		movswl	32(%rbp), %ecx
 13420 0076 0FAF4B40 		imull	64(%rbx), %ecx
4482:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
 13421              		.loc 1 4482 0 discriminator 3
 13422 007a 4863D2   		movslq	%edx, %rdx
4483:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z4, FIX(1.224744871)); /* c4 */
 13423              		.loc 1 4483 0 discriminator 3
 13424 007d 4869D231 		imulq	$10033, %rdx, %rdx
 13424      270000
4477:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 13425              		.loc 1 4477 0 discriminator 3
 13426 0084 4898     		cltq
 13427              	.LVL2049:
4478:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 13428              		.loc 1 4478 0 discriminator 3
 13429 0086 48C1E00D 		salq	$13, %rax
 13430              	.LVL2050:
4480:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13431              		.loc 1 4480 0 discriminator 3
 13432 008a 48050004 		addq	$1024, %rax
 13432      0000
 13433              	.LVL2051:
 13434              		.loc 1 4488 0 discriminator 3
 13435 0090 4863C9   		movslq	%ecx, %rcx
4486:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13436              		.loc 1 4486 0 discriminator 3
 13437 0093 4889C6   		movq	%rax, %rsi
4485:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z4;
 13438              		.loc 1 4485 0 discriminator 3
 13439 0096 4C8D0410 		leaq	(%rax,%rdx), %r8
 13440              	.LVL2052:
4486:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13441              		.loc 1 4486 0 discriminator 3
 13442 009a 4829D6   		subq	%rdx, %rsi
 13443              	.LVL2053:
4489:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z1, FIX(1.366025404)); /* c2 */
4490:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 <<= CONST_BITS;
4491:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 13444              		.loc 1 4491 0 discriminator 3
 13445 009d 0FBF5560 		movswl	96(%rbp), %edx
 13446              	.LVL2054:
 13447 00a1 0FAF93C0 		imull	192(%rbx), %edx
 13447      000000
4489:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = MULTIPLY(z1, FIX(1.366025404)); /* c2 */
 13448              		.loc 1 4489 0 discriminator 3
 13449 00a8 4869F9B6 		imulq	$11190, %rcx, %rdi
 13449      2B0000
 13450              	.LVL2055:
4490:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 13451              		.loc 1 4490 0 discriminator 3
 13452 00af 48C1E10D 		salq	$13, %rcx
 13453              	.LVL2056:
4492:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
4493:fltk-1.3.4-1/jpeg/jidctint.c **** 
4494:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 - z2;
 13454              		.loc 1 4494 0 discriminator 3
 13455 00b3 4989C9   		movq	%rcx, %r9
4491:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
 13456              		.loc 1 4491 0 discriminator 3
 13457 00b6 4863D2   		movslq	%edx, %rdx
 13458              	.LVL2057:
4492:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
 13459              		.loc 1 4492 0 discriminator 3
 13460 00b9 48C1E20D 		salq	$13, %rdx
 13461              	.LVL2058:
 13462              		.loc 1 4494 0 discriminator 3
 13463 00bd 4929D1   		subq	%rdx, %r9
 13464              	.LVL2059:
4495:fltk-1.3.4-1/jpeg/jidctint.c **** 
4496:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = z3 + tmp12;
 13465              		.loc 1 4496 0 discriminator 3
 13466 00c0 4E8D3C08 		leaq	(%rax,%r9), %r15
4497:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 13467              		.loc 1 4497 0 discriminator 3
 13468 00c4 4C29C8   		subq	%r9, %rax
 13469              	.LVL2060:
 13470 00c7 48894424 		movq	%rax, 8(%rsp)
 13470      08
 13471              	.LVL2061:
4498:fltk-1.3.4-1/jpeg/jidctint.c **** 
4499:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 + z2;
 13472              		.loc 1 4499 0 discriminator 3
 13473 00cc 488D0417 		leaq	(%rdi,%rdx), %rax
 13474              	.LVL2062:
4500:fltk-1.3.4-1/jpeg/jidctint.c **** 
4501:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
4502:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
4503:fltk-1.3.4-1/jpeg/jidctint.c **** 
4504:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z4 - z1 - z2;
 13475              		.loc 1 4504 0 discriminator 3
 13476 00d0 4829CF   		subq	%rcx, %rdi
 13477              	.LVL2063:
4496:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = z3 - tmp12;
 13478              		.loc 1 4496 0 discriminator 3
 13479 00d3 4C893C24 		movq	%r15, (%rsp)
 13480              	.LVL2064:
4505:fltk-1.3.4-1/jpeg/jidctint.c **** 
4506:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 + tmp12;
4507:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
4508:fltk-1.3.4-1/jpeg/jidctint.c **** 
4509:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4510:fltk-1.3.4-1/jpeg/jidctint.c **** 
4511:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
4512:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
4513:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
4514:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 13481              		.loc 1 4514 0 discriminator 3
 13482 00d7 0FBF4D70 		movswl	112(%rbp), %ecx
 13483              	.LVL2065:
4501:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 13484              		.loc 1 4501 0 discriminator 3
 13485 00db 4D8D1C00 		leaq	(%r8,%rax), %r11
4502:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13486              		.loc 1 4502 0 discriminator 3
 13487 00df 4929C0   		subq	%rax, %r8
 13488              	.LVL2066:
4504:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13489              		.loc 1 4504 0 discriminator 3
 13490 00e2 4889F8   		movq	%rdi, %rax
 13491              	.LVL2067:
 13492 00e5 4829D0   		subq	%rdx, %rax
 13493              	.LVL2068:
4513:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 13494              		.loc 1 4513 0 discriminator 3
 13495 00e8 0FBF7D50 		movswl	80(%rbp), %edi
4512:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 13496              		.loc 1 4512 0 discriminator 3
 13497 00ec 0FBF5530 		movswl	48(%rbp), %edx
 13498              	.LVL2069:
4506:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp12;
 13499              		.loc 1 4506 0 discriminator 3
 13500 00f0 4C8D3C06 		leaq	(%rsi,%rax), %r15
 13501              	.LVL2070:
4507:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13502              		.loc 1 4507 0 discriminator 3
 13503 00f4 4829C6   		subq	%rax, %rsi
 13504              	.LVL2071:
4511:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 13505              		.loc 1 4511 0 discriminator 3
 13506 00f7 0FBF4510 		movswl	16(%rbp), %eax
 13507              	.LVL2072:
 13508 00fb 0FAF4320 		imull	32(%rbx), %eax
4513:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 13509              		.loc 1 4513 0 discriminator 3
 13510 00ff 0FAFBBA0 		imull	160(%rbx), %edi
 13510      000000
 13511              		.loc 1 4514 0 discriminator 3
 13512 0106 0FAF8BE0 		imull	224(%rbx), %ecx
 13512      000000
4512:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 13513              		.loc 1 4512 0 discriminator 3
 13514 010d 0FAF5360 		imull	96(%rbx), %edx
4502:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13515              		.loc 1 4502 0 discriminator 3
 13516 0111 4C894424 		movq	%r8, 24(%rsp)
 13516      18
 13517              	.LVL2073:
4507:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13518              		.loc 1 4507 0 discriminator 3
 13519 0116 48897424 		movq	%rsi, 32(%rsp)
 13519      20
 13520              	.LVL2074:
4501:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp25 = tmp10 - tmp12;
 13521              		.loc 1 4501 0 discriminator 3
 13522 011b 4C895C24 		movq	%r11, 16(%rsp)
 13522      10
 13523              	.LVL2075:
4511:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 13524              		.loc 1 4511 0 discriminator 3
 13525 0120 4898     		cltq
 13526              	.LVL2076:
4513:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 13527              		.loc 1 4513 0 discriminator 3
 13528 0122 4863FF   		movslq	%edi, %rdi
4515:fltk-1.3.4-1/jpeg/jidctint.c **** 
4516:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z2, FIX(1.306562965));                  /* c3 */
4517:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
4518:fltk-1.3.4-1/jpeg/jidctint.c **** 
4519:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z1 + z3;
4520:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
4521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
4522:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 13529              		.loc 1 4522 0 discriminator 3
 13530 0125 4C8D0CC0 		leaq	(%rax,%rax,8), %r9
4519:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 = MULTIPLY(tmp10 + z4, FIX(0.860918669));          /* c7 */
 13531              		.loc 1 4519 0 discriminator 3
 13532 0129 4C8D0438 		leaq	(%rax,%rdi), %r8
4514:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13533              		.loc 1 4514 0 discriminator 3
 13534 012d 4863C9   		movslq	%ecx, %rcx
4512:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 13535              		.loc 1 4512 0 discriminator 3
 13536 0130 4863D2   		movslq	%edx, %rdx
 13537              	.LVL2077:
 13538              		.loc 1 4522 0 discriminator 3
 13539 0133 4D89CA   		movq	%r9, %r10
4520:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
 13540              		.loc 1 4520 0 discriminator 3
 13541 0136 4A8D3401 		leaq	(%rcx,%r8), %rsi
 13542              		.loc 1 4522 0 discriminator 3
 13543 013a 49C1E208 		salq	$8, %r10
4521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 13544              		.loc 1 4521 0 discriminator 3
 13545 013e 4D69C05B 		imulq	$2139, %r8, %r8
 13545      080000
 13546              		.loc 1 4522 0 discriminator 3
 13547 0145 4D29CA   		subq	%r9, %r10
4520:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp15 + MULTIPLY(tmp10, FIX(0.261052384));       /* c5-c7 */
 13548              		.loc 1 4520 0 discriminator 3
 13549 0148 4869F68D 		imulq	$7053, %rsi, %rsi
 13549      1B0000
4516:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z2, - FIX_0_541196100);                 /* -c9 */
 13550              		.loc 1 4516 0 discriminator 3
 13551 014f 4C69F2CF 		imulq	$10703, %rdx, %r14
 13551      290000
 13552              	.LVL2078:
4521:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp12 + tmp11 + MULTIPLY(z1, FIX(0.280143716));  /* c1-c5 */
 13553              		.loc 1 4521 0 discriminator 3
 13554 0156 4901F0   		addq	%rsi, %r8
 13555              		.loc 1 4522 0 discriminator 3
 13556 0159 4F8D1C06 		leaq	(%r14,%r8), %r11
4517:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13557              		.loc 1 4517 0 discriminator 3
 13558 015d 4C69EAAF 		imulq	$-4433, %rdx, %r13
 13558      EEFFFF
 13559              	.LVL2079:
 13560              		.loc 1 4522 0 discriminator 3
 13561 0164 4D01DA   		addq	%r11, %r10
 13562              	.LVL2080:
4523:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z3 + z4, - FIX(1.045510580));           /* -(c7+c11) */
 13563              		.loc 1 4523 0 discriminator 3
 13564 0167 4C8D1C0F 		leaq	(%rdi,%rcx), %r11
 13565 016b 4D69DB8B 		imulq	$-8565, %r11, %r11
 13565      DEFFFF
 13566              	.LVL2081:
4524:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 += tmp13 + tmp14 - MULTIPLY(z3, FIX(1.478575242)); /* c1+c5-c7-c11 */
 13567              		.loc 1 4524 0 discriminator 3
 13568 0172 4F8D4C1D 		leaq	0(%r13,%r11), %r9
 13568      00
 13569 0177 4C894C24 		movq	%r9, 40(%rsp)
 13569      28
 13570 017c 4C69CFB0 		imulq	$-12112, %rdi, %r9
 13570      D0FFFF
 13571 0183 4C034C24 		addq	40(%rsp), %r9
 13571      28
 13572 0188 4D01C8   		addq	%r9, %r8
 13573              	.LVL2082:
4525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 13574              		.loc 1 4525 0 discriminator 3
 13575 018b 4989F1   		movq	%rsi, %r9
4526:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
4527:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
4528:fltk-1.3.4-1/jpeg/jidctint.c **** 
4529:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 -= z4;
4530:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= z3;
 13576              		.loc 1 4530 0 discriminator 3
 13577 018e 4829FA   		subq	%rdi, %rdx
 13578              	.LVL2083:
4525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 += tmp15 - tmp11 + MULTIPLY(z4, FIX(1.586706681)); /* c1+c11 */
 13579              		.loc 1 4525 0 discriminator 3
 13580 0191 4D29F1   		subq	%r14, %r9
4531:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z1 + z2, FIX_0_541196100);                 /* c9 */
4532:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
4533:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
4534:fltk-1.3.4-1/jpeg/jidctint.c **** 
4535:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4536:fltk-1.3.4-1/jpeg/jidctint.c **** 
4537:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*0]  = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
4538:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*11] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
4539:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
4540:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*10] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
4541:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
4542:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*9]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
4543:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 13581              		.loc 1 4543 0 discriminator 3
 13582 0194 488B7C24 		movq	32(%rsp), %rdi
 13582      20
 13583              	.LVL2084:
4525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 13584              		.loc 1 4525 0 discriminator 3
 13585 0199 4C69F1C6 		imulq	$12998, %rcx, %r14
 13585      320000
 13586              	.LVL2085:
 13587 01a0 4D01CE   		addq	%r9, %r14
4526:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 13588              		.loc 1 4526 0 discriminator 3
 13589 01a3 4C69C85C 		imulq	$-5540, %rax, %r9
 13589      EAFFFF
4529:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 -= z3;
 13590              		.loc 1 4529 0 discriminator 3
 13591 01aa 4829C8   		subq	%rcx, %rax
 13592              	.LVL2086:
4525:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp15 += tmp14 - MULTIPLY(z1, FIX(0.676326758)) -        /* c7-c11 */
 13593              		.loc 1 4525 0 discriminator 3
 13594 01ad 4D01F3   		addq	%r14, %r11
 13595              	.LVL2087:
4539:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*10] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 13596              		.loc 1 4539 0 discriminator 3
 13597 01b0 4C8B3424 		movq	(%rsp), %r14
4526:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 13598              		.loc 1 4526 0 discriminator 3
 13599 01b4 4D01CD   		addq	%r9, %r13
 13600              	.LVL2088:
 13601 01b7 4C69C98C 		imulq	$-16244, %rcx, %r9
 13601      C0FFFF
4531:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
 13602              		.loc 1 4531 0 discriminator 3
 13603 01be 488D0C10 		leaq	(%rax,%rdx), %rcx
 13604              	.LVL2089:
4533:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13605              		.loc 1 4533 0 discriminator 3
 13606 01c2 4869D2DF 		imulq	$-15137, %rdx, %rdx
 13606      C4FFFF
4531:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 + MULTIPLY(z1, FIX_0_765366865);              /* c3-c9 */
 13607              		.loc 1 4531 0 discriminator 3
 13608 01c9 4869C951 		imulq	$4433, %rcx, %rcx
 13608      110000
4526:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 13609              		.loc 1 4526 0 discriminator 3
 13610 01d0 4D01CD   		addq	%r9, %r13
4537:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*11] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 13611              		.loc 1 4537 0 discriminator 3
 13612 01d3 4C8B4C24 		movq	16(%rsp), %r9
 13612      10
4526:fltk-1.3.4-1/jpeg/jidctint.c **** 	     MULTIPLY(z4, FIX(1.982889723));                 /* c5+c7 */
 13613              		.loc 1 4526 0 discriminator 3
 13614 01d8 4901F5   		addq	%rsi, %r13
 13615              	.LVL2090:
4532:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z3 - MULTIPLY(z2, FIX_1_847759065);              /* c3+c9 */
 13616              		.loc 1 4532 0 discriminator 3
 13617 01db 4869C07E 		imulq	$6270, %rax, %rax
 13617      180000
 13618              	.LVL2091:
 13619 01e2 4801C8   		addq	%rcx, %rax
 13620              	.LVL2092:
4533:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13621              		.loc 1 4533 0 discriminator 3
 13622 01e5 4801D1   		addq	%rdx, %rcx
 13623              	.LVL2093:
4537:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*11] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 13624              		.loc 1 4537 0 discriminator 3
 13625 01e8 4C89CA   		movq	%r9, %rdx
 13626 01eb 4C01D2   		addq	%r10, %rdx
 13627 01ee 48C1FA0B 		sarq	$11, %rdx
 13628 01f2 41891424 		movl	%edx, (%r12)
4538:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*1]  = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 13629              		.loc 1 4538 0 discriminator 3
 13630 01f6 4C89CA   		movq	%r9, %rdx
 13631 01f9 4C29D2   		subq	%r10, %rdx
 13632 01fc 48C1FA0B 		sarq	$11, %rdx
 13633 0200 41899424 		movl	%edx, 264(%r12)
 13633      08010000 
4539:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*10] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 13634              		.loc 1 4539 0 discriminator 3
 13635 0208 4C89F2   		movq	%r14, %rdx
 13636 020b 4801C2   		addq	%rax, %rdx
 13637 020e 48C1FA0B 		sarq	$11, %rdx
 13638 0212 41895424 		movl	%edx, 24(%r12)
 13638      18
4540:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*2]  = (int) RIGHT_SHIFT(tmp22 + tmp12, CONST_BITS-PASS1_BITS);
 13639              		.loc 1 4540 0 discriminator 3
 13640 0217 4C89F2   		movq	%r14, %rdx
 13641 021a 4829C2   		subq	%rax, %rdx
 13642 021d 4889D0   		movq	%rdx, %rax
 13643              	.LVL2094:
 13644 0220 48C1F80B 		sarq	$11, %rax
 13645 0224 41898424 		movl	%eax, 240(%r12)
 13645      F0000000 
4541:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*9]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 13646              		.loc 1 4541 0 discriminator 3
 13647 022c 4B8D0407 		leaq	(%r15,%r8), %rax
4542:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 13648              		.loc 1 4542 0 discriminator 3
 13649 0230 4D29C7   		subq	%r8, %r15
 13650              	.LVL2095:
4541:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*9]  = (int) RIGHT_SHIFT(tmp22 - tmp12, CONST_BITS-PASS1_BITS);
 13651              		.loc 1 4541 0 discriminator 3
 13652 0233 48C1F80B 		sarq	$11, %rax
 13653 0237 41894424 		movl	%eax, 48(%r12)
 13653      30
4542:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*3]  = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 13654              		.loc 1 4542 0 discriminator 3
 13655 023c 4C89F8   		movq	%r15, %rax
 13656 023f 48C1F80B 		sarq	$11, %rax
 13657 0243 41898424 		movl	%eax, 216(%r12)
 13657      D8000000 
 13658              		.loc 1 4543 0 discriminator 3
 13659 024b 4A8D041F 		leaq	(%rdi,%r11), %rax
4544:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*8]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 13660              		.loc 1 4544 0 discriminator 3
 13661 024f 4C29DF   		subq	%r11, %rdi
4543:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*8]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 13662              		.loc 1 4543 0 discriminator 3
 13663 0252 48C1F80B 		sarq	$11, %rax
 13664 0256 41894424 		movl	%eax, 72(%r12)
 13664      48
4545:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 13665              		.loc 1 4545 0 discriminator 3
 13666 025b 488B7424 		movq	8(%rsp), %rsi
 13666      08
4544:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*8]  = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 13667              		.loc 1 4544 0 discriminator 3
 13668 0260 4889F8   		movq	%rdi, %rax
 13669 0263 48C1F80B 		sarq	$11, %rax
4546:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*7]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
4547:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 13670              		.loc 1 4547 0 discriminator 3
 13671 0267 4C8B4424 		movq	24(%rsp), %r8
 13671      18
 13672              	.LVL2096:
4544:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 13673              		.loc 1 4544 0 discriminator 3
 13674 026c 41898424 		movl	%eax, 192(%r12)
 13674      C0000000 
4545:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*4]  = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 13675              		.loc 1 4545 0 discriminator 3
 13676 0274 4889F0   		movq	%rsi, %rax
 13677 0277 4801C8   		addq	%rcx, %rax
 13678 027a 48C1F80B 		sarq	$11, %rax
4474:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 13679              		.loc 1 4474 0 discriminator 3
 13680 027e 4883C502 		addq	$2, %rbp
 13681              	.LVL2097:
 13682 0282 4883C304 		addq	$4, %rbx
 13683              	.LVL2098:
4545:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*7]  = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 13684              		.loc 1 4545 0 discriminator 3
 13685 0286 41894424 		movl	%eax, 96(%r12)
 13685      60
4546:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 13686              		.loc 1 4546 0 discriminator 3
 13687 028b 4889F0   		movq	%rsi, %rax
4474:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 13688              		.loc 1 4474 0 discriminator 3
 13689 028e 4983C404 		addq	$4, %r12
 13690              	.LVL2099:
4546:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*5]  = (int) RIGHT_SHIFT(tmp25 + tmp15, CONST_BITS-PASS1_BITS);
 13691              		.loc 1 4546 0 discriminator 3
 13692 0292 4829C8   		subq	%rcx, %rax
 13693 0295 48C1F80B 		sarq	$11, %rax
 13694 0299 41898424 		movl	%eax, 164(%r12)
 13694      A4000000 
 13695              		.loc 1 4547 0 discriminator 3
 13696 02a1 4B8D0428 		leaq	(%r8,%r13), %rax
 13697 02a5 48C1F80B 		sarq	$11, %rax
 13698 02a9 41894424 		movl	%eax, 116(%r12)
 13698      74
4548:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[6*6]  = (int) RIGHT_SHIFT(tmp25 - tmp15, CONST_BITS-PASS1_BITS);
 13699              		.loc 1 4548 0 discriminator 3
 13700 02ae 4C89C0   		movq	%r8, %rax
 13701 02b1 4C29E8   		subq	%r13, %rax
 13702 02b4 48C1F80B 		sarq	$11, %rax
 13703 02b8 41898424 		movl	%eax, 140(%r12)
 13703      8C000000 
 13704              	.LVL2100:
4474:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 13705              		.loc 1 4474 0 discriminator 3
 13706 02c0 4C3B6424 		cmpq	48(%rsp), %r12
 13706      30
 13707 02c5 0F8595FD 		jne	.L229
 13707      FFFF
 13708 02cb 448B4424 		movl	68(%rsp), %r8d
 13708      44
 13709 02d0 4C8B5C24 		movq	72(%rsp), %r11
 13709      48
 13710              	.LVL2101:
4474:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 13711              		.loc 1 4474 0 is_stmt 0
 13712 02d5 4C8D4C24 		leaq	80(%rsp), %r9
 13712      50
 13713 02da 488B4C24 		movq	56(%rsp), %rcx
 13713      38
 13714              	.LVL2102:
4549:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4550:fltk-1.3.4-1/jpeg/jidctint.c **** 
4551:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 12 rows from work array, store into output array.
4552:fltk-1.3.4-1/jpeg/jidctint.c ****    * 6-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/12).
4553:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4554:fltk-1.3.4-1/jpeg/jidctint.c **** 
4555:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
4556:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 12; ctr++) {
 13715              		.loc 1 4556 0 is_stmt 1
 13716 02df 4C8DBC24 		leaq	368(%rsp), %r15
 13716      70010000 
 13717              	.LVL2103:
 13718 02e7 660F1F84 		.p2align 4,,10
 13718      00000000 
 13718      00
 13719              		.p2align 3
 13720              	.L230:
4557:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
4558:fltk-1.3.4-1/jpeg/jidctint.c **** 
4559:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4560:fltk-1.3.4-1/jpeg/jidctint.c **** 
4561:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4562:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
4563:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
4564:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (INT32) wsptr[4];
4565:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = MULTIPLY(tmp12, FIX(0.707106781));   /* c4 */
 13721              		.loc 1 4565 0 discriminator 3
 13722 02f0 4D635110 		movslq	16(%r9), %r10
4562:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 13723              		.loc 1 4562 0 discriminator 3
 13724 02f4 496311   		movslq	(%r9), %rdx
4557:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 13725              		.loc 1 4557 0 discriminator 3
 13726 02f7 4C89C7   		movq	%r8, %rdi
4566:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp20;
4567:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp10 - tmp20 - tmp20;
4568:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = (INT32) wsptr[2];
4569:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp20, FIX(1.224744871));   /* c2 */
4570:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp11 + tmp10;
4571:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 - tmp10;
4572:fltk-1.3.4-1/jpeg/jidctint.c **** 
4573:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4574:fltk-1.3.4-1/jpeg/jidctint.c **** 
4575:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = (INT32) wsptr[1];
 13727              		.loc 1 4575 0 discriminator 3
 13728 02fa 49635904 		movslq	4(%r9), %rbx
4576:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
4577:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[5];
 13729              		.loc 1 4577 0 discriminator 3
 13730 02fe 4D636914 		movslq	20(%r9), %r13
4576:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[3];
 13731              		.loc 1 4576 0 discriminator 3
 13732 0302 4D63710C 		movslq	12(%r9), %r14
4557:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13733              		.loc 1 4557 0 discriminator 3
 13734 0306 480339   		addq	(%rcx), %rdi
 13735              	.LVL2104:
4565:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp10 + tmp20;
 13736              		.loc 1 4565 0 discriminator 3
 13737 0309 4D69D2A1 		imulq	$5793, %r10, %r10
 13737      160000
4562:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 <<= CONST_BITS;
 13738              		.loc 1 4562 0 discriminator 3
 13739 0310 4883C210 		addq	$16, %rdx
 13740              	.LVL2105:
4563:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (INT32) wsptr[4];
 13741              		.loc 1 4563 0 discriminator 3
 13742 0314 48C1E20D 		salq	$13, %rdx
 13743              	.LVL2106:
4578:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1 + z3, FIX(0.366025404)); /* c5 */
4579:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + ((z1 + z2) << CONST_BITS);
 13744              		.loc 1 4579 0 discriminator 3
 13745 0318 4A8D2C33 		leaq	(%rbx,%r14), %rbp
4566:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp10 - tmp20 - tmp20;
 13746              		.loc 1 4566 0 discriminator 3
 13747 031c 4A8D3412 		leaq	(%rdx,%r10), %rsi
 13748              	.LVL2107:
4567:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = (INT32) wsptr[2];
 13749              		.loc 1 4567 0 discriminator 3
 13750 0320 4C29D2   		subq	%r10, %rdx
 13751              	.LVL2108:
 13752              		.loc 1 4579 0 discriminator 3
 13753 0323 48C1E50D 		salq	$13, %rbp
4567:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = (INT32) wsptr[2];
 13754              		.loc 1 4567 0 discriminator 3
 13755 0327 4889D0   		movq	%rdx, %rax
 13756 032a 4C29D0   		subq	%r10, %rax
 13757              	.LVL2109:
4569:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp11 + tmp10;
 13758              		.loc 1 4569 0 discriminator 3
 13759 032d 4D635108 		movslq	8(%r9), %r10
 13760              	.LVL2110:
 13761 0331 4D69D231 		imulq	$10033, %r10, %r10
 13761      270000
 13762              	.LVL2111:
4570:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = tmp11 - tmp10;
 13763              		.loc 1 4570 0 discriminator 3
 13764 0338 4A8D1416 		leaq	(%rsi,%r10), %rdx
 13765              	.LVL2112:
4571:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13766              		.loc 1 4571 0 discriminator 3
 13767 033c 4C29D6   		subq	%r10, %rsi
 13768              	.LVL2113:
4578:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + ((z1 + z2) << CONST_BITS);
 13769              		.loc 1 4578 0 discriminator 3
 13770 033f 4E8D142B 		leaq	(%rbx,%r13), %r10
 13771              	.LVL2114:
4580:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
4581:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = (z1 - z2 - z3) << CONST_BITS;
 13772              		.loc 1 4581 0 discriminator 3
 13773 0343 4C29F3   		subq	%r14, %rbx
 13774              	.LVL2115:
4578:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp11 + ((z1 + z2) << CONST_BITS);
 13775              		.loc 1 4578 0 discriminator 3
 13776 0346 4D69E2B6 		imulq	$2998, %r10, %r12
 13776      0B0000
 13777              	.LVL2116:
4580:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 13778              		.loc 1 4580 0 discriminator 3
 13779 034d 4D89EA   		movq	%r13, %r10
 13780              		.loc 1 4581 0 discriminator 3
 13781 0350 4C29EB   		subq	%r13, %rbx
4580:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 13782              		.loc 1 4580 0 discriminator 3
 13783 0353 4D29F2   		subq	%r14, %r10
 13784              		.loc 1 4581 0 discriminator 3
 13785 0356 48C1E30D 		salq	$13, %rbx
4580:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 13786              		.loc 1 4580 0 discriminator 3
 13787 035a 49C1E20D 		salq	$13, %r10
4579:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 13788              		.loc 1 4579 0 discriminator 3
 13789 035e 4C01E5   		addq	%r12, %rbp
 13790              	.LVL2117:
4580:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp11 + ((z3 - z2) << CONST_BITS);
 13791              		.loc 1 4580 0 discriminator 3
 13792 0361 4D01E2   		addq	%r12, %r10
 13793              	.LVL2118:
4582:fltk-1.3.4-1/jpeg/jidctint.c **** 
4583:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4584:fltk-1.3.4-1/jpeg/jidctint.c **** 
4585:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp20 + tmp10,
 13794              		.loc 1 4585 0 discriminator 3
 13795 0364 4C8D242A 		leaq	(%rdx,%rbp), %r12
4586:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4587:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4588:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[5] = range_limit[(int) RIGHT_SHIFT(tmp20 - tmp10,
 13796              		.loc 1 4588 0 discriminator 3
 13797 0368 4829EA   		subq	%rbp, %rdx
 13798              	.LVL2119:
 13799 036b 48C1FA12 		sarq	$18, %rdx
4585:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13800              		.loc 1 4585 0 discriminator 3
 13801 036f 49C1FC12 		sarq	$18, %r12
 13802              		.loc 1 4588 0 discriminator 3
 13803 0373 81E2FF03 		andl	$1023, %edx
 13803      0000
4585:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13804              		.loc 1 4585 0 discriminator 3
 13805 0379 4181E4FF 		andl	$1023, %r12d
 13805      030000
 13806 0380 470FB624 		movzbl	(%r11,%r12), %r12d
 13806      23
 13807 0385 448827   		movb	%r12b, (%rdi)
 13808              		.loc 1 4588 0 discriminator 3
 13809 0388 410FB614 		movzbl	(%r11,%rdx), %edx
 13809      13
 13810 038d 885705   		movb	%dl, 5(%rdi)
4589:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4590:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4591:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp21 + tmp11,
 13811              		.loc 1 4591 0 discriminator 3
 13812 0390 488D1418 		leaq	(%rax,%rbx), %rdx
4592:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4593:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4594:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp21 - tmp11,
 13813              		.loc 1 4594 0 discriminator 3
 13814 0394 4829D8   		subq	%rbx, %rax
 13815              	.LVL2120:
4591:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13816              		.loc 1 4591 0 discriminator 3
 13817 0397 48C1FA12 		sarq	$18, %rdx
 13818 039b 81E2FF03 		andl	$1023, %edx
 13818      0000
 13819 03a1 410FB614 		movzbl	(%r11,%rdx), %edx
 13819      13
 13820 03a6 885701   		movb	%dl, 1(%rdi)
 13821              		.loc 1 4594 0 discriminator 3
 13822 03a9 4889C2   		movq	%rax, %rdx
 13823 03ac 48C1FA12 		sarq	$18, %rdx
 13824 03b0 81E2FF03 		andl	$1023, %edx
 13824      0000
 13825 03b6 410FB604 		movzbl	(%r11,%rdx), %eax
 13825      13
 13826 03bb 884704   		movb	%al, 4(%rdi)
4595:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4596:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4597:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp22 + tmp12,
 13827              		.loc 1 4597 0 discriminator 3
 13828 03be 4A8D0416 		leaq	(%rsi,%r10), %rax
 13829 03c2 48C1F812 		sarq	$18, %rax
 13830 03c6 25FF0300 		andl	$1023, %eax
 13830      00
 13831 03cb 410FB604 		movzbl	(%r11,%rax), %eax
 13831      03
 13832 03d0 884702   		movb	%al, 2(%rdi)
4598:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4599:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4600:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp22 - tmp12,
 13833              		.loc 1 4600 0 discriminator 3
 13834 03d3 4889F0   		movq	%rsi, %rax
 13835 03d6 4C29D0   		subq	%r10, %rax
 13836 03d9 48C1F812 		sarq	$18, %rax
 13837 03dd 25FF0300 		andl	$1023, %eax
 13837      00
4601:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4602:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4603:fltk-1.3.4-1/jpeg/jidctint.c **** 
4604:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 6;		/* advance pointer to next row */
 13838              		.loc 1 4604 0 discriminator 3
 13839 03e2 4983C118 		addq	$24, %r9
 13840              	.LVL2121:
 13841 03e6 4883C108 		addq	$8, %rcx
4600:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13842              		.loc 1 4600 0 discriminator 3
 13843 03ea 410FB604 		movzbl	(%r11,%rax), %eax
 13843      03
4556:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 13844              		.loc 1 4556 0 discriminator 3
 13845 03ef 4D39F9   		cmpq	%r15, %r9
4600:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 13846              		.loc 1 4600 0 discriminator 3
 13847 03f2 884703   		movb	%al, 3(%rdi)
4556:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 13848              		.loc 1 4556 0 discriminator 3
 13849 03f5 0F85F5FE 		jne	.L230
 13849      FFFF
4605:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4606:fltk-1.3.4-1/jpeg/jidctint.c **** }
 13850              		.loc 1 4606 0
 13851 03fb 488B8424 		movq	376(%rsp), %rax
 13851      78010000 
 13852 0403 64483304 		xorq	%fs:40, %rax
 13852      25280000 
 13852      00
 13853 040c 7512     		jne	.L235
 13854 040e 4881C488 		addq	$392, %rsp
 13854      010000
 13855              		.cfi_remember_state
 13856              		.cfi_def_cfa_offset 56
 13857 0415 5B       		popq	%rbx
 13858              		.cfi_def_cfa_offset 48
 13859              	.LVL2122:
 13860 0416 5D       		popq	%rbp
 13861              		.cfi_def_cfa_offset 40
 13862              	.LVL2123:
 13863 0417 415C     		popq	%r12
 13864              		.cfi_def_cfa_offset 32
 13865 0419 415D     		popq	%r13
 13866              		.cfi_def_cfa_offset 24
 13867              	.LVL2124:
 13868 041b 415E     		popq	%r14
 13869              		.cfi_def_cfa_offset 16
 13870              	.LVL2125:
 13871 041d 415F     		popq	%r15
 13872              		.cfi_def_cfa_offset 8
 13873 041f C3       		ret
 13874              	.LVL2126:
 13875              	.L235:
 13876              		.cfi_restore_state
 13877 0420 E8000000 		call	__stack_chk_fail
 13877      00
 13878              	.LVL2127:
 13879              		.cfi_endproc
 13880              	.LFE87:
 13882              		.section	.text.unlikely.jpeg_idct_6x12
 13883              	.LCOLDE26:
 13884              		.section	.text.jpeg_idct_6x12
 13885              	.LHOTE26:
 13886              		.section	.text.unlikely.jpeg_idct_5x10,"ax",@progbits
 13887              	.LCOLDB27:
 13888              		.section	.text.jpeg_idct_5x10,"ax",@progbits
 13889              	.LHOTB27:
 13890              		.p2align 4,,15
 13891              		.globl	jpeg_idct_5x10
 13893              	jpeg_idct_5x10:
 13894              	.LFB88:
4607:fltk-1.3.4-1/jpeg/jidctint.c **** 
4608:fltk-1.3.4-1/jpeg/jidctint.c **** 
4609:fltk-1.3.4-1/jpeg/jidctint.c **** /*
4610:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
4611:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 5x10 output block.
4612:fltk-1.3.4-1/jpeg/jidctint.c ****  *
4613:fltk-1.3.4-1/jpeg/jidctint.c ****  * 10-point IDCT in pass 1 (columns), 5-point in pass 2 (rows).
4614:fltk-1.3.4-1/jpeg/jidctint.c ****  */
4615:fltk-1.3.4-1/jpeg/jidctint.c **** 
4616:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
4617:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_5x10 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
4618:fltk-1.3.4-1/jpeg/jidctint.c **** 		JCOEFPTR coef_block,
4619:fltk-1.3.4-1/jpeg/jidctint.c **** 		JSAMPARRAY output_buf, JDIMENSION output_col)
4620:fltk-1.3.4-1/jpeg/jidctint.c **** {
 13895              		.loc 1 4620 0
 13896              		.cfi_startproc
 13897              	.LVL2128:
 13898 0000 4157     		pushq	%r15
 13899              		.cfi_def_cfa_offset 16
 13900              		.cfi_offset 15, -16
 13901 0002 4156     		pushq	%r14
 13902              		.cfi_def_cfa_offset 24
 13903              		.cfi_offset 14, -24
 13904 0004 4155     		pushq	%r13
 13905              		.cfi_def_cfa_offset 32
 13906              		.cfi_offset 13, -32
 13907 0006 4154     		pushq	%r12
 13908              		.cfi_def_cfa_offset 40
 13909              		.cfi_offset 12, -40
 13910 0008 55       		pushq	%rbp
 13911              		.cfi_def_cfa_offset 48
 13912              		.cfi_offset 6, -48
 13913 0009 53       		pushq	%rbx
 13914              		.cfi_def_cfa_offset 56
 13915              		.cfi_offset 3, -56
 13916 000a 4889D5   		movq	%rdx, %rbp
 13917 000d 4881EC28 		subq	$296, %rsp
 13917      010000
 13918              		.cfi_def_cfa_offset 352
4621:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
4622:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp20, tmp21, tmp22, tmp23, tmp24;
4623:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3, z4, z5;
4624:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
4625:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
4626:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
4627:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
4628:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
4629:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
4630:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[5*10];	/* buffers data between passes */
4631:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
4632:fltk-1.3.4-1/jpeg/jidctint.c **** 
4633:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
4634:fltk-1.3.4-1/jpeg/jidctint.c ****    * 10-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/20).
4635:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4636:fltk-1.3.4-1/jpeg/jidctint.c **** 
4637:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
4638:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 13919              		.loc 1 4638 0
 13920 0014 4C8B6658 		movq	88(%rsi), %r12
4620:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 13921              		.loc 1 4620 0
 13922 0018 64488B04 		movq	%fs:40, %rax
 13922      25280000 
 13922      00
 13923 0021 48898424 		movq	%rax, 280(%rsp)
 13923      18010000 
 13924 0029 31C0     		xorl	%eax, %eax
4628:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 13925              		.loc 1 4628 0
 13926 002b 488B87B8 		movq	440(%rdi), %rax
 13926      010000
4620:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 13927              		.loc 1 4620 0
 13928 0032 44894424 		movl	%r8d, 68(%rsp)
 13928      44
4639:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 13929              		.loc 1 4639 0
 13930 0037 4C8D4424 		leaq	80(%rsp), %r8
 13930      50
 13931              	.LVL2129:
4620:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13, tmp14;
 13932              		.loc 1 4620 0
 13933 003c 48894C24 		movq	%rcx, 56(%rsp)
 13933      38
4628:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 13934              		.loc 1 4628 0
 13935 0041 4C8DB880 		leaq	128(%rax), %r15
 13935      000000
 13936              	.LVL2130:
 13937 0048 488D420A 		leaq	10(%rdx), %rax
 13938              		.loc 1 4639 0
 13939 004c 4C897C24 		movq	%r15, 72(%rsp)
 13939      48
 13940 0051 48894424 		movq	%rax, 48(%rsp)
 13940      30
 13941              	.LVL2131:
 13942              	.L237:
4640:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 5; ctr++, inptr++, quantptr++, wsptr++) {
4641:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4642:fltk-1.3.4-1/jpeg/jidctint.c **** 
4643:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
4644:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
4645:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4646:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += ONE << (CONST_BITS-PASS1_BITS-1);
4647:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 13943              		.loc 1 4647 0 discriminator 3
 13944 0056 0FBF5540 		movswl	64(%rbp), %edx
4648:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
4649:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
4650:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
4651:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
4652:fltk-1.3.4-1/jpeg/jidctint.c **** 
4653:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp22 = RIGHT_SHIFT(z3 - ((z1 - z2) << 1),   /* c0 = (c4-c8)*2 */
4654:fltk-1.3.4-1/jpeg/jidctint.c **** 			CONST_BITS-PASS1_BITS);
4655:fltk-1.3.4-1/jpeg/jidctint.c **** 
4656:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
4657:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 13945              		.loc 1 4657 0 discriminator 3
 13946 005a 0FBF4D60 		movswl	96(%rbp), %ecx
4647:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
 13947              		.loc 1 4647 0 discriminator 3
 13948 005e 410FAF94 		imull	128(%r12), %edx
 13948      24800000 
 13948      00
 13949              		.loc 1 4657 0 discriminator 3
 13950 0067 410FAF8C 		imull	192(%r12), %ecx
 13950      24C00000 
 13950      00
4643:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 13951              		.loc 1 4643 0 discriminator 3
 13952 0070 0FBF4500 		movswl	0(%rbp), %eax
 13953 0074 410FAF04 		imull	(%r12), %eax
 13953      24
4647:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z4, FIX(1.144122806));         /* c4 */
 13954              		.loc 1 4647 0 discriminator 3
 13955 0079 4863D2   		movslq	%edx, %rdx
4649:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 13956              		.loc 1 4649 0 discriminator 3
 13957 007c 4869DAFC 		imulq	$3580, %rdx, %rbx
 13957      0D0000
 13958              		.loc 1 4657 0 discriminator 3
 13959 0083 4863C9   		movslq	%ecx, %rcx
4648:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z4, FIX(0.437016024));         /* c8 */
 13960              		.loc 1 4648 0 discriminator 3
 13961 0086 4C69FA9D 		imulq	$9373, %rdx, %r15
 13961      240000
4656:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 13962              		.loc 1 4656 0 discriminator 3
 13963 008d 0FBF5520 		movswl	32(%rbp), %edx
 13964 0091 410FAF54 		imull	64(%r12), %edx
 13964      2440
4643:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 13965              		.loc 1 4643 0 discriminator 3
 13966 0097 4898     		cltq
 13967              	.LVL2132:
4644:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 13968              		.loc 1 4644 0 discriminator 3
 13969 0099 48C1E00D 		salq	$13, %rax
 13970              	.LVL2133:
4651:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13971              		.loc 1 4651 0 discriminator 3
 13972 009d 48895C24 		movq	%rbx, 8(%rsp)
 13972      08
4646:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 13973              		.loc 1 4646 0 discriminator 3
 13974 00a2 48050004 		addq	$1024, %rax
 13974      0000
 13975              	.LVL2134:
4651:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13976              		.loc 1 4651 0 discriminator 3
 13977 00a8 4889C6   		movq	%rax, %rsi
4650:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z2;
 13978              		.loc 1 4650 0 discriminator 3
 13979 00ab 4A8D3C38 		leaq	(%rax,%r15), %rdi
 13980              	.LVL2135:
4651:fltk-1.3.4-1/jpeg/jidctint.c **** 
 13981              		.loc 1 4651 0 discriminator 3
 13982 00af 4829DE   		subq	%rbx, %rsi
 13983              	.LVL2136:
4656:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 13984              		.loc 1 4656 0 discriminator 3
 13985 00b2 4863D2   		movslq	%edx, %rdx
 13986              	.LVL2137:
4658:fltk-1.3.4-1/jpeg/jidctint.c **** 
4659:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));    /* c6 */
 13987              		.loc 1 4659 0 discriminator 3
 13988 00b5 4C8D0C0A 		leaq	(%rdx,%rcx), %r9
4660:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
4661:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 - MULTIPLY(z3, FIX(2.176250899)); /* c2+c6 */
 13989              		.loc 1 4661 0 discriminator 3
 13990 00b9 4869C95C 		imulq	$-17828, %rcx, %rcx
 13990      BAFFFF
 13991              	.LVL2138:
4659:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 13992              		.loc 1 4659 0 discriminator 3
 13993 00c0 4D69C99A 		imulq	$6810, %r9, %r9
 13993      1A0000
 13994              	.LVL2139:
4660:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 13995              		.loc 1 4660 0 discriminator 3
 13996 00c7 4869D271 		imulq	$4209, %rdx, %rdx
 13996      100000
 13997              	.LVL2140:
 13998              		.loc 1 4661 0 discriminator 3
 13999 00ce 4C01C9   		addq	%r9, %rcx
4660:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = z1 + MULTIPLY(z2, FIX(0.513743148)); /* c2-c6 */
 14000              		.loc 1 4660 0 discriminator 3
 14001 00d1 4C01CA   		addq	%r9, %rdx
 14002              	.LVL2141:
4662:fltk-1.3.4-1/jpeg/jidctint.c **** 
4663:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp20 = tmp10 + tmp12;
4664:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
4665:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 14003              		.loc 1 4665 0 discriminator 3
 14004 00d4 4C8D0C0E 		leaq	(%rsi,%rcx), %r9
 14005              	.LVL2142:
4666:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
 14006              		.loc 1 4666 0 discriminator 3
 14007 00d8 4829CE   		subq	%rcx, %rsi
 14008              	.LVL2143:
 14009 00db 48897424 		movq	%rsi, 32(%rsp)
 14009      20
4667:fltk-1.3.4-1/jpeg/jidctint.c **** 
4668:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4669:fltk-1.3.4-1/jpeg/jidctint.c **** 
4670:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
4671:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
4672:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14010              		.loc 1 4672 0 discriminator 3
 14011 00e0 0FBF7550 		movswl	80(%rbp), %esi
4663:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp24 = tmp10 - tmp12;
 14012              		.loc 1 4663 0 discriminator 3
 14013 00e4 4C8D1417 		leaq	(%rdi,%rdx), %r10
 14014              	.LVL2144:
 14015              		.loc 1 4672 0 discriminator 3
 14016 00e8 410FAFB4 		imull	160(%r12), %esi
 14016      24A00000 
 14016      00
4671:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14017              		.loc 1 4671 0 discriminator 3
 14018 00f1 0FBF4D30 		movswl	48(%rbp), %ecx
 14019              	.LVL2145:
4664:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 14020              		.loc 1 4664 0 discriminator 3
 14021 00f5 4829D7   		subq	%rdx, %rdi
 14022              	.LVL2146:
4670:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 14023              		.loc 1 4670 0 discriminator 3
 14024 00f8 0FBF5510 		movswl	16(%rbp), %edx
 14025              	.LVL2147:
4671:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14026              		.loc 1 4671 0 discriminator 3
 14027 00fc 410FAF4C 		imull	96(%r12), %ecx
 14027      2460
4670:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 14028              		.loc 1 4670 0 discriminator 3
 14029 0102 410FAF54 		imull	32(%r12), %edx
 14029      2420
4665:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp23 = tmp11 - tmp13;
 14030              		.loc 1 4665 0 discriminator 3
 14031 0108 4C894C24 		movq	%r9, 24(%rsp)
 14031      18
 14032              	.LVL2148:
4664:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp21 = tmp11 + tmp13;
 14033              		.loc 1 4664 0 discriminator 3
 14034 010d 48897C24 		movq	%rdi, 16(%rsp)
 14034      10
 14035              	.LVL2149:
 14036              		.loc 1 4672 0 discriminator 3
 14037 0112 4863DE   		movslq	%esi, %rbx
 14038              	.LVL2150:
4673:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 14039              		.loc 1 4673 0 discriminator 3
 14040 0115 0FBF7570 		movswl	112(%rbp), %esi
 14041 0119 410FAFB4 		imull	224(%r12), %esi
 14041      24E00000 
 14041      00
4671:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14042              		.loc 1 4671 0 discriminator 3
 14043 0122 4863C9   		movslq	%ecx, %rcx
4672:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 14044              		.loc 1 4672 0 discriminator 3
 14045 0125 4989DE   		movq	%rbx, %r14
4670:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 14046              		.loc 1 4670 0 discriminator 3
 14047 0128 4863D2   		movslq	%edx, %rdx
 14048              	.LVL2151:
4674:fltk-1.3.4-1/jpeg/jidctint.c **** 
4675:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z2 + z4;
4676:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
4677:fltk-1.3.4-1/jpeg/jidctint.c **** 
4678:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp13, FIX(0.309016994));        /* (c3-c7)/2 */
4679:fltk-1.3.4-1/jpeg/jidctint.c ****     z5 = z3 << CONST_BITS;
 14049              		.loc 1 4679 0 discriminator 3
 14050 012b 4C897424 		movq	%r14, 40(%rsp)
 14050      28
4680:fltk-1.3.4-1/jpeg/jidctint.c **** 
4681:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.951056516));           /* (c3+c7)/2 */
4682:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z5 + tmp12;
4683:fltk-1.3.4-1/jpeg/jidctint.c **** 
4684:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(z1, FIX(1.396802247)) + z2 + z4; /* c1 */
 14051              		.loc 1 4684 0 discriminator 3
 14052 0130 4C69DAB3 		imulq	$11443, %rdx, %r11
 14052      2C0000
4685:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 14053              		.loc 1 4685 0 discriminator 3
 14054 0137 4C69CA14 		imulq	$1812, %rdx, %r9
 14054      070000
4673:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14055              		.loc 1 4673 0 discriminator 3
 14056 013e 4863F6   		movslq	%esi, %rsi
 14057              	.LVL2152:
4675:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z2 - z4;
 14058              		.loc 1 4675 0 discriminator 3
 14059 0141 488D1C31 		leaq	(%rcx,%rsi), %rbx
 14060              	.LVL2153:
4676:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14061              		.loc 1 4676 0 discriminator 3
 14062 0145 4829F1   		subq	%rsi, %rcx
 14063              	.LVL2154:
4679:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14064              		.loc 1 4679 0 discriminator 3
 14065 0148 4C89F6   		movq	%r14, %rsi
 14066              	.LVL2155:
 14067 014b 48C1E60D 		salq	$13, %rsi
4678:fltk-1.3.4-1/jpeg/jidctint.c ****     z5 = z3 << CONST_BITS;
 14068              		.loc 1 4678 0 discriminator 3
 14069 014f 4C69E9E3 		imulq	$2531, %rcx, %r13
 14069      090000
 14070              	.LVL2156:
4681:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z5 + tmp12;
 14071              		.loc 1 4681 0 discriminator 3
 14072 0156 4869FB6F 		imulq	$7791, %rbx, %rdi
 14072      1E0000
 14073              	.LVL2157:
4686:fltk-1.3.4-1/jpeg/jidctint.c **** 
4687:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp11, FIX(0.587785252));           /* (c1-c9)/2 */
 14074              		.loc 1 4687 0 discriminator 3
 14075 015d 4869DBCF 		imulq	$4815, %rbx, %rbx
 14075      120000
 14076              	.LVL2158:
4682:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14077              		.loc 1 4682 0 discriminator 3
 14078 0164 4D8D7435 		leaq	0(%r13,%rsi), %r14
 14078      00
 14079              	.LVL2159:
4688:fltk-1.3.4-1/jpeg/jidctint.c ****     z4 = z5 - tmp12 - (tmp13 << (CONST_BITS - 1));
 14080              		.loc 1 4688 0 discriminator 3
 14081 0169 4C29EE   		subq	%r13, %rsi
 14082              	.LVL2160:
4685:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14083              		.loc 1 4685 0 discriminator 3
 14084 016c 4929F9   		subq	%rdi, %r9
4684:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = MULTIPLY(z1, FIX(0.221231742)) - z2 + z4; /* c9 */
 14085              		.loc 1 4684 0 discriminator 3
 14086 016f 4901FB   		addq	%rdi, %r11
 14087 0172 4D01F3   		addq	%r14, %r11
 14088              	.LVL2161:
4685:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14089              		.loc 1 4685 0 discriminator 3
 14090 0175 4D01CE   		addq	%r9, %r14
 14091              	.LVL2162:
 14092              		.loc 1 4688 0 discriminator 3
 14093 0178 4989C9   		movq	%rcx, %r9
 14094 017b 49C1E10C 		salq	$12, %r9
4689:fltk-1.3.4-1/jpeg/jidctint.c **** 
4690:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (z1 - tmp13 - z3) << PASS1_BITS;
4691:fltk-1.3.4-1/jpeg/jidctint.c **** 
4692:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = MULTIPLY(z1, FIX(1.260073511)) - z2 - z4; /* c3 */
4693:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
4694:fltk-1.3.4-1/jpeg/jidctint.c **** 
4695:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4696:fltk-1.3.4-1/jpeg/jidctint.c **** 
4697:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*0] = (int) RIGHT_SHIFT(tmp20 + tmp10, CONST_BITS-PASS1_BITS);
4698:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
4699:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
4700:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
4701:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*2] = (int) (tmp22 + tmp12);
 14095              		.loc 1 4701 0 discriminator 3
 14096 017f 4C2B7C24 		subq	8(%rsp), %r15
 14096      08
 14097              	.LVL2163:
4640:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 14098              		.loc 1 4640 0 discriminator 3
 14099 0184 4883C502 		addq	$2, %rbp
 14100              	.LVL2164:
4692:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 14101              		.loc 1 4692 0 discriminator 3
 14102 0188 4C69EA53 		imulq	$10323, %rdx, %r13
 14102      280000
 14103              	.LVL2165:
4688:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14104              		.loc 1 4688 0 discriminator 3
 14105 018f 4C29CE   		subq	%r9, %rsi
 14106              	.LVL2166:
4699:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 14107              		.loc 1 4699 0 discriminator 3
 14108 0192 4C8B4C24 		movq	24(%rsp), %r9
 14108      18
4693:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14109              		.loc 1 4693 0 discriminator 3
 14110 0197 4869FA8C 		imulq	$5260, %rdx, %rdi
 14110      140000
 14111              		.loc 1 4701 0 discriminator 3
 14112 019e 4829CA   		subq	%rcx, %rdx
 14113              	.LVL2167:
 14114 01a1 482B5424 		subq	40(%rsp), %rdx
 14114      28
4640:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 14115              		.loc 1 4640 0 discriminator 3
 14116 01a6 4983C404 		addq	$4, %r12
 14117              	.LVL2168:
 14118 01aa 4983C004 		addq	$4, %r8
 14119              	.LVL2169:
4692:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 14120              		.loc 1 4692 0 discriminator 3
 14121 01ae 4929DD   		subq	%rbx, %r13
4693:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14122              		.loc 1 4693 0 discriminator 3
 14123 01b1 4829DF   		subq	%rbx, %rdi
4692:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = MULTIPLY(z1, FIX(0.642039522)) - z2 + z4; /* c7 */
 14124              		.loc 1 4692 0 discriminator 3
 14125 01b4 4929F5   		subq	%rsi, %r13
 14126              	.LVL2170:
 14127              		.loc 1 4701 0 discriminator 3
 14128 01b7 48C1E202 		salq	$2, %rdx
 14129              	.LVL2171:
4693:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14130              		.loc 1 4693 0 discriminator 3
 14131 01bb 4801FE   		addq	%rdi, %rsi
 14132              	.LVL2172:
4697:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 14133              		.loc 1 4697 0 discriminator 3
 14134 01be 4B8D3C1A 		leaq	(%r10,%r11), %rdi
4698:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 14135              		.loc 1 4698 0 discriminator 3
 14136 01c2 4D29DA   		subq	%r11, %r10
 14137              	.LVL2173:
 14138 01c5 49C1FA0B 		sarq	$11, %r10
4697:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 14139              		.loc 1 4697 0 discriminator 3
 14140 01c9 48C1FF0B 		sarq	$11, %rdi
4698:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*1] = (int) RIGHT_SHIFT(tmp21 + tmp11, CONST_BITS-PASS1_BITS);
 14141              		.loc 1 4698 0 discriminator 3
 14142 01cd 458990B0 		movl	%r10d, 176(%r8)
 14142      000000
4697:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*9] = (int) RIGHT_SHIFT(tmp20 - tmp10, CONST_BITS-PASS1_BITS);
 14143              		.loc 1 4697 0 discriminator 3
 14144 01d4 418978FC 		movl	%edi, -4(%r8)
4699:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 14145              		.loc 1 4699 0 discriminator 3
 14146 01d8 4B8D3C29 		leaq	(%r9,%r13), %rdi
4700:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*2] = (int) (tmp22 + tmp12);
 14147              		.loc 1 4700 0 discriminator 3
 14148 01dc 4D29E9   		subq	%r13, %r9
 14149 01df 49C1F90B 		sarq	$11, %r9
4699:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 14150              		.loc 1 4699 0 discriminator 3
 14151 01e3 48C1FF0B 		sarq	$11, %rdi
4700:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*2] = (int) (tmp22 + tmp12);
 14152              		.loc 1 4700 0 discriminator 3
 14153 01e7 4589889C 		movl	%r9d, 156(%r8)
 14153      000000
4699:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*8] = (int) RIGHT_SHIFT(tmp21 - tmp11, CONST_BITS-PASS1_BITS);
 14154              		.loc 1 4699 0 discriminator 3
 14155 01ee 41897810 		movl	%edi, 16(%r8)
 14156              		.loc 1 4701 0 discriminator 3
 14157 01f2 4C89FF   		movq	%r15, %rdi
 14158 01f5 4801FF   		addq	%rdi, %rdi
 14159 01f8 4829F8   		subq	%rdi, %rax
 14160              	.LVL2174:
 14161 01fb 48C1F80B 		sarq	$11, %rax
 14162              	.LVL2175:
 14163 01ff 8D0C02   		leal	(%rdx,%rax), %ecx
 14164              	.LVL2176:
4702:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*7] = (int) (tmp22 - tmp12);
 14165              		.loc 1 4702 0 discriminator 3
 14166 0202 29D0     		subl	%edx, %eax
 14167              	.LVL2177:
 14168 0204 41898088 		movl	%eax, 136(%r8)
 14168      000000
4701:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*7] = (int) (tmp22 - tmp12);
 14169              		.loc 1 4701 0 discriminator 3
 14170 020b 41894824 		movl	%ecx, 36(%r8)
4703:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*3] = (int) RIGHT_SHIFT(tmp23 + tmp13, CONST_BITS-PASS1_BITS);
 14171              		.loc 1 4703 0 discriminator 3
 14172 020f 488B4C24 		movq	32(%rsp), %rcx
 14172      20
 14173 0214 488D0431 		leaq	(%rcx,%rsi), %rax
 14174 0218 48C1F80B 		sarq	$11, %rax
 14175 021c 41894038 		movl	%eax, 56(%r8)
4704:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*6] = (int) RIGHT_SHIFT(tmp23 - tmp13, CONST_BITS-PASS1_BITS);
 14176              		.loc 1 4704 0 discriminator 3
 14177 0220 4889C8   		movq	%rcx, %rax
 14178 0223 4829F0   		subq	%rsi, %rax
 14179 0226 48C1F80B 		sarq	$11, %rax
 14180 022a 41894074 		movl	%eax, 116(%r8)
4705:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*4] = (int) RIGHT_SHIFT(tmp24 + tmp14, CONST_BITS-PASS1_BITS);
 14181              		.loc 1 4705 0 discriminator 3
 14182 022e 488B7C24 		movq	16(%rsp), %rdi
 14182      10
 14183 0233 4A8D0437 		leaq	(%rdi,%r14), %rax
 14184 0237 48C1F80B 		sarq	$11, %rax
 14185 023b 4189404C 		movl	%eax, 76(%r8)
4706:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[5*5] = (int) RIGHT_SHIFT(tmp24 - tmp14, CONST_BITS-PASS1_BITS);
 14186              		.loc 1 4706 0 discriminator 3
 14187 023f 4889F8   		movq	%rdi, %rax
 14188 0242 4C29F0   		subq	%r14, %rax
 14189 0245 48C1F80B 		sarq	$11, %rax
 14190 0249 41894060 		movl	%eax, 96(%r8)
 14191              	.LVL2178:
4640:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 14192              		.loc 1 4640 0 discriminator 3
 14193 024d 483B6C24 		cmpq	48(%rsp), %rbp
 14193      30
 14194 0252 0F85FEFD 		jne	.L237
 14194      FFFF
 14195 0258 448B4424 		movl	68(%rsp), %r8d
 14195      44
 14196              	.LVL2179:
 14197 025d 4C8B7C24 		movq	72(%rsp), %r15
 14197      48
4640:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 14198              		.loc 1 4640 0 is_stmt 0
 14199 0262 488D7C24 		leaq	80(%rsp), %rdi
 14199      50
 14200 0267 488B4C24 		movq	56(%rsp), %rcx
 14200      38
4707:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4708:fltk-1.3.4-1/jpeg/jidctint.c **** 
4709:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 10 rows from work array, store into output array.
4710:fltk-1.3.4-1/jpeg/jidctint.c ****    * 5-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/10).
4711:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4712:fltk-1.3.4-1/jpeg/jidctint.c **** 
4713:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
4714:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 10; ctr++) {
 14201              		.loc 1 4714 0 is_stmt 1
 14202 026c 4C8D9424 		leaq	280(%rsp), %r10
 14202      18010000 
 14203              	.LVL2180:
 14204              		.p2align 4,,10
 14205 0274 0F1F4000 		.p2align 3
 14206              	.L238:
4715:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
4716:fltk-1.3.4-1/jpeg/jidctint.c **** 
4717:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4718:fltk-1.3.4-1/jpeg/jidctint.c **** 
4719:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4720:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
4721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
4722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = (INT32) wsptr[2];
4723:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = (INT32) wsptr[4];
 14207              		.loc 1 4723 0 discriminator 3
 14208 0278 48635710 		movslq	16(%rdi), %rdx
4722:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = (INT32) wsptr[4];
 14209              		.loc 1 4722 0 discriminator 3
 14210 027c 48637708 		movslq	8(%rdi), %rsi
4715:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 14211              		.loc 1 4715 0 discriminator 3
 14212 0280 4D89C1   		movq	%r8, %r9
4720:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 14213              		.loc 1 4720 0 discriminator 3
 14214 0283 486307   		movslq	(%rdi), %rax
4724:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp13 + tmp14, FIX(0.790569415)); /* (c2+c4)/2 */
4725:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp13 - tmp14, FIX(0.353553391)); /* (c2-c4)/2 */
4726:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp12 + z2;
4727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
4728:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
4729:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
4730:fltk-1.3.4-1/jpeg/jidctint.c **** 
4731:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4732:fltk-1.3.4-1/jpeg/jidctint.c **** 
4733:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[1];
 14215              		.loc 1 4733 0 discriminator 3
 14216 0286 48636F04 		movslq	4(%rdi), %rbp
4734:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[3];
4735:fltk-1.3.4-1/jpeg/jidctint.c **** 
4736:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX(0.831253876));       /* c3 */
4737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + MULTIPLY(z2, FIX(0.513743148));    /* c1-c3 */
4738:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 - MULTIPLY(z3, FIX(2.176250899));    /* c1+c3 */
4739:fltk-1.3.4-1/jpeg/jidctint.c **** 
4740:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4741:fltk-1.3.4-1/jpeg/jidctint.c **** 
4742:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp13,
4743:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4744:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4745:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[4] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp13,
4746:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4747:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4748:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp11 + tmp14,
4749:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4750:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4751:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp11 - tmp14,
4752:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4753:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4754:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12,
4755:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4756:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4757:fltk-1.3.4-1/jpeg/jidctint.c **** 
4758:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 5;		/* advance pointer to next row */
 14217              		.loc 1 4758 0 discriminator 3
 14218 028a 4883C714 		addq	$20, %rdi
 14219              	.LVL2181:
4734:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[3];
 14220              		.loc 1 4734 0 discriminator 3
 14221 028e 4C636FF8 		movslq	-8(%rdi), %r13
4715:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14222              		.loc 1 4715 0 discriminator 3
 14223 0292 4C0309   		addq	(%rcx), %r9
 14224              	.LVL2182:
 14225 0295 4883C108 		addq	$8, %rcx
4724:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp13 + tmp14, FIX(0.790569415)); /* (c2+c4)/2 */
 14226              		.loc 1 4724 0 discriminator 3
 14227 0299 488D1C16 		leaq	(%rsi,%rdx), %rbx
4725:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp12 + z2;
 14228              		.loc 1 4725 0 discriminator 3
 14229 029d 4829D6   		subq	%rdx, %rsi
 14230 02a0 4869F650 		imulq	$2896, %rsi, %rsi
 14230      0B0000
4720:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 <<= CONST_BITS;
 14231              		.loc 1 4720 0 discriminator 3
 14232 02a7 4883C010 		addq	$16, %rax
 14233              	.LVL2183:
4724:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(tmp13 - tmp14, FIX(0.353553391)); /* (c2-c4)/2 */
 14234              		.loc 1 4724 0 discriminator 3
 14235 02ab 4869DB4C 		imulq	$6476, %rbx, %rbx
 14235      190000
4721:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = (INT32) wsptr[2];
 14236              		.loc 1 4721 0 discriminator 3
 14237 02b2 48C1E00D 		salq	$13, %rax
 14238              	.LVL2184:
4726:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = z3 + z1;
 14239              		.loc 1 4726 0 discriminator 3
 14240 02b6 488D1430 		leaq	(%rax,%rsi), %rdx
 14241              	.LVL2185:
4754:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14242              		.loc 1 4754 0 discriminator 3
 14243 02ba 48C1E602 		salq	$2, %rsi
 14244              	.LVL2186:
 14245 02be 4829F0   		subq	%rsi, %rax
 14246              	.LVL2187:
4727:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = z3 - z1;
 14247              		.loc 1 4727 0 discriminator 3
 14248 02c1 4C8D1C13 		leaq	(%rbx,%rdx), %r11
 14249              	.LVL2188:
4728:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 -= z2 << 2;
 14250              		.loc 1 4728 0 discriminator 3
 14251 02c5 4829DA   		subq	%rbx, %rdx
 14252              	.LVL2189:
4736:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + MULTIPLY(z2, FIX(0.513743148));    /* c1-c3 */
 14253              		.loc 1 4736 0 discriminator 3
 14254 02c8 4A8D5C2D 		leaq	0(%rbp,%r13), %rbx
 14254      00
 14255              	.LVL2190:
4737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 - MULTIPLY(z3, FIX(2.176250899));    /* c1+c3 */
 14256              		.loc 1 4737 0 discriminator 3
 14257 02cd 4869ED71 		imulq	$4209, %rbp, %rbp
 14257      100000
 14258              	.LVL2191:
4754:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14259              		.loc 1 4754 0 discriminator 3
 14260 02d4 48C1F812 		sarq	$18, %rax
4736:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = z1 + MULTIPLY(z2, FIX(0.513743148));    /* c1-c3 */
 14261              		.loc 1 4736 0 discriminator 3
 14262 02d8 4C69E39A 		imulq	$6810, %rbx, %r12
 14262      1A0000
 14263              	.LVL2192:
4754:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14264              		.loc 1 4754 0 discriminator 3
 14265 02df 25FF0300 		andl	$1023, %eax
 14265      00
4738:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14266              		.loc 1 4738 0 discriminator 3
 14267 02e4 4969DD5C 		imulq	$-17828, %r13, %rbx
 14267      BAFFFF
4737:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp14 = z1 - MULTIPLY(z3, FIX(2.176250899));    /* c1+c3 */
 14268              		.loc 1 4737 0 discriminator 3
 14269 02eb 4C01E5   		addq	%r12, %rbp
 14270              	.LVL2193:
4738:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14271              		.loc 1 4738 0 discriminator 3
 14272 02ee 4C01E3   		addq	%r12, %rbx
 14273              	.LVL2194:
4742:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14274              		.loc 1 4742 0 discriminator 3
 14275 02f1 4D8D242B 		leaq	(%r11,%rbp), %r12
 14276              	.LVL2195:
4745:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14277              		.loc 1 4745 0 discriminator 3
 14278 02f5 4929EB   		subq	%rbp, %r11
 14279              	.LVL2196:
 14280 02f8 49C1FB12 		sarq	$18, %r11
4742:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14281              		.loc 1 4742 0 discriminator 3
 14282 02fc 49C1FC12 		sarq	$18, %r12
4745:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14283              		.loc 1 4745 0 discriminator 3
 14284 0300 4181E3FF 		andl	$1023, %r11d
 14284      030000
4742:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14285              		.loc 1 4742 0 discriminator 3
 14286 0307 4181E4FF 		andl	$1023, %r12d
 14286      030000
 14287 030e 470FB624 		movzbl	(%r15,%r12), %r12d
 14287      27
 14288 0313 458821   		movb	%r12b, (%r9)
4745:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14289              		.loc 1 4745 0 discriminator 3
 14290 0316 470FB61C 		movzbl	(%r15,%r11), %r11d
 14290      1F
 14291 031b 45885904 		movb	%r11b, 4(%r9)
4748:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14292              		.loc 1 4748 0 discriminator 3
 14293 031f 4C8D1C1A 		leaq	(%rdx,%rbx), %r11
4751:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14294              		.loc 1 4751 0 discriminator 3
 14295 0323 4829DA   		subq	%rbx, %rdx
 14296              	.LVL2197:
 14297 0326 48C1FA12 		sarq	$18, %rdx
4748:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14298              		.loc 1 4748 0 discriminator 3
 14299 032a 49C1FB12 		sarq	$18, %r11
4751:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14300              		.loc 1 4751 0 discriminator 3
 14301 032e 81E2FF03 		andl	$1023, %edx
 14301      0000
4748:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14302              		.loc 1 4748 0 discriminator 3
 14303 0334 4181E3FF 		andl	$1023, %r11d
 14303      030000
4714:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 14304              		.loc 1 4714 0 discriminator 3
 14305 033b 4C39D7   		cmpq	%r10, %rdi
4748:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14306              		.loc 1 4748 0 discriminator 3
 14307 033e 470FB61C 		movzbl	(%r15,%r11), %r11d
 14307      1F
 14308 0343 45885901 		movb	%r11b, 1(%r9)
4751:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14309              		.loc 1 4751 0 discriminator 3
 14310 0347 410FB614 		movzbl	(%r15,%rdx), %edx
 14310      17
 14311 034c 41885103 		movb	%dl, 3(%r9)
4754:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14312              		.loc 1 4754 0 discriminator 3
 14313 0350 410FB604 		movzbl	(%r15,%rax), %eax
 14313      07
 14314 0355 41884102 		movb	%al, 2(%r9)
4714:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 14315              		.loc 1 4714 0 discriminator 3
 14316 0359 0F8519FF 		jne	.L238
 14316      FFFF
4759:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4760:fltk-1.3.4-1/jpeg/jidctint.c **** }
 14317              		.loc 1 4760 0
 14318 035f 488B8424 		movq	280(%rsp), %rax
 14318      18010000 
 14319 0367 64483304 		xorq	%fs:40, %rax
 14319      25280000 
 14319      00
 14320 0370 7512     		jne	.L243
 14321 0372 4881C428 		addq	$296, %rsp
 14321      010000
 14322              		.cfi_remember_state
 14323              		.cfi_def_cfa_offset 56
 14324 0379 5B       		popq	%rbx
 14325              		.cfi_def_cfa_offset 48
 14326              	.LVL2198:
 14327 037a 5D       		popq	%rbp
 14328              		.cfi_def_cfa_offset 40
 14329              	.LVL2199:
 14330 037b 415C     		popq	%r12
 14331              		.cfi_def_cfa_offset 32
 14332 037d 415D     		popq	%r13
 14333              		.cfi_def_cfa_offset 24
 14334              	.LVL2200:
 14335 037f 415E     		popq	%r14
 14336              		.cfi_def_cfa_offset 16
 14337 0381 415F     		popq	%r15
 14338              		.cfi_def_cfa_offset 8
 14339 0383 C3       		ret
 14340              	.LVL2201:
 14341              	.L243:
 14342              		.cfi_restore_state
 14343 0384 E8000000 		call	__stack_chk_fail
 14343      00
 14344              	.LVL2202:
 14345              		.cfi_endproc
 14346              	.LFE88:
 14348              		.section	.text.unlikely.jpeg_idct_5x10
 14349              	.LCOLDE27:
 14350              		.section	.text.jpeg_idct_5x10
 14351              	.LHOTE27:
 14352              		.section	.text.unlikely.jpeg_idct_4x8,"ax",@progbits
 14353              	.LCOLDB28:
 14354              		.section	.text.jpeg_idct_4x8,"ax",@progbits
 14355              	.LHOTB28:
 14356              		.p2align 4,,15
 14357              		.globl	jpeg_idct_4x8
 14359              	jpeg_idct_4x8:
 14360              	.LFB89:
4761:fltk-1.3.4-1/jpeg/jidctint.c **** 
4762:fltk-1.3.4-1/jpeg/jidctint.c **** 
4763:fltk-1.3.4-1/jpeg/jidctint.c **** /*
4764:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
4765:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 4x8 output block.
4766:fltk-1.3.4-1/jpeg/jidctint.c ****  *
4767:fltk-1.3.4-1/jpeg/jidctint.c ****  * 8-point IDCT in pass 1 (columns), 4-point in pass 2 (rows).
4768:fltk-1.3.4-1/jpeg/jidctint.c ****  */
4769:fltk-1.3.4-1/jpeg/jidctint.c **** 
4770:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
4771:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_4x8 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
4772:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
4773:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
4774:fltk-1.3.4-1/jpeg/jidctint.c **** {
 14361              		.loc 1 4774 0
 14362              		.cfi_startproc
 14363              	.LVL2203:
 14364 0000 4157     		pushq	%r15
 14365              		.cfi_def_cfa_offset 16
 14366              		.cfi_offset 15, -16
 14367 0002 4156     		pushq	%r14
 14368              		.cfi_def_cfa_offset 24
 14369              		.cfi_offset 14, -24
 14370 0004 4155     		pushq	%r13
 14371              		.cfi_def_cfa_offset 32
 14372              		.cfi_offset 13, -32
 14373 0006 4154     		pushq	%r12
 14374              		.cfi_def_cfa_offset 40
 14375              		.cfi_offset 12, -40
 14376 0008 55       		pushq	%rbp
 14377              		.cfi_def_cfa_offset 48
 14378              		.cfi_offset 6, -48
 14379 0009 53       		pushq	%rbx
 14380              		.cfi_def_cfa_offset 56
 14381              		.cfi_offset 3, -56
 14382 000a 4881ECB8 		subq	$184, %rsp
 14382      000000
 14383              		.cfi_def_cfa_offset 240
4775:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
4776:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp10, tmp11, tmp12, tmp13;
4777:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
4778:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
4779:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
4780:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
4781:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
4782:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 14384              		.loc 1 4782 0
 14385 0011 4C8BAFB8 		movq	440(%rdi), %r13
 14385      010000
 14386 0018 4C8B7658 		movq	88(%rsi), %r14
4774:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp3;
 14387              		.loc 1 4774 0
 14388 001c 64488B04 		movq	%fs:40, %rax
 14388      25280000 
 14388      00
 14389 0025 48898424 		movq	%rax, 168(%rsp)
 14389      A8000000 
 14390 002d 31C0     		xorl	%eax, %eax
 14391 002f 488D6C24 		leaq	32(%rsp), %rbp
 14391      20
 14392 0034 48894C24 		movq	%rcx, 8(%rsp)
 14392      08
 14393 0039 44894424 		movl	%r8d, 20(%rsp)
 14393      14
 14394              		.loc 1 4782 0
 14395 003e 4983ED80 		subq	$-128, %r13
 14396              	.LVL2204:
4783:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
4784:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[4*8];	/* buffers data between passes */
4785:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
4786:fltk-1.3.4-1/jpeg/jidctint.c **** 
4787:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
4788:fltk-1.3.4-1/jpeg/jidctint.c ****    * Note results are scaled up by sqrt(8) compared to a true IDCT;
4789:fltk-1.3.4-1/jpeg/jidctint.c ****    * furthermore, we scale the results by 2**PASS1_BITS.
4790:fltk-1.3.4-1/jpeg/jidctint.c ****    * 8-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/16).
4791:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4792:fltk-1.3.4-1/jpeg/jidctint.c **** 
4793:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
4794:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
4795:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
4796:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 4; ctr > 0; ctr--) {
 14397              		.loc 1 4796 0
 14398 0042 C7442410 		movl	$4, 16(%rsp)
 14398      04000000 
 14399 004a 4C896C24 		movq	%r13, 24(%rsp)
 14399      18
 14400              	.LVL2205:
 14401              	.L253:
4797:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
4798:fltk-1.3.4-1/jpeg/jidctint.c ****      * coefficients are zero, especially the AC terms.  We can exploit this
4799:fltk-1.3.4-1/jpeg/jidctint.c ****      * by short-circuiting the IDCT calculation for any column in which all
4800:fltk-1.3.4-1/jpeg/jidctint.c ****      * the AC terms are zero.  In that case each output is equal to the
4801:fltk-1.3.4-1/jpeg/jidctint.c ****      * DC coefficient (with scale factor as needed).
4802:fltk-1.3.4-1/jpeg/jidctint.c ****      * With typical images and quantization tables, half or more of the
4803:fltk-1.3.4-1/jpeg/jidctint.c ****      * column DCT calculations can be simplified this way.
4804:fltk-1.3.4-1/jpeg/jidctint.c ****      */
4805:fltk-1.3.4-1/jpeg/jidctint.c **** 
4806:fltk-1.3.4-1/jpeg/jidctint.c ****     if (inptr[DCTSIZE*1] == 0 && inptr[DCTSIZE*2] == 0 &&
 14402              		.loc 1 4806 0
 14403 004f 0FBF4A10 		movswl	16(%rdx), %ecx
 14404 0053 0FBF7220 		movswl	32(%rdx), %esi
 14405 0057 6685C9   		testw	%cx, %cx
 14406 005a 0F85A002 		jne	.L245
 14406      0000
 14407              		.loc 1 4806 0 is_stmt 0 discriminator 1
 14408 0060 6685F6   		testw	%si, %si
 14409 0063 0F859702 		jne	.L245
 14409      0000
4807:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 14410              		.loc 1 4807 0 is_stmt 1 discriminator 2
 14411 0069 0FBF7A30 		movswl	48(%rdx), %edi
4806:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*3] == 0 && inptr[DCTSIZE*4] == 0 &&
 14412              		.loc 1 4806 0 discriminator 2
 14413 006d 6685FF   		testw	%di, %di
 14414 0070 0F84AA02 		je	.L248
 14414      0000
 14415 0076 0FBF4260 		movswl	96(%rdx), %eax
 14416 007a 0FBF5A40 		movswl	64(%rdx), %ebx
 14417 007e 440FBF4A 		movswl	112(%rdx), %r9d
 14417      70
 14418 0083 440FBF42 		movswl	80(%rdx), %r8d
 14418      50
 14419 0088 0F1F8400 		.p2align 4,,10
 14419      00000000 
 14420              		.p2align 3
 14421              	.L247:
4808:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
4809:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
4810:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
4811:fltk-1.3.4-1/jpeg/jidctint.c ****       int dcval = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]) << PASS1_BITS;
4812:fltk-1.3.4-1/jpeg/jidctint.c **** 
4813:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*0] = dcval;
4814:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*1] = dcval;
4815:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*2] = dcval;
4816:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*3] = dcval;
4817:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*4] = dcval;
4818:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*5] = dcval;
4819:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*6] = dcval;
4820:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*7] = dcval;
4821:fltk-1.3.4-1/jpeg/jidctint.c **** 
4822:fltk-1.3.4-1/jpeg/jidctint.c ****       inptr++;			/* advance pointers to next column */
4823:fltk-1.3.4-1/jpeg/jidctint.c ****       quantptr++;
4824:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr++;
4825:fltk-1.3.4-1/jpeg/jidctint.c ****       continue;
4826:fltk-1.3.4-1/jpeg/jidctint.c ****     }
4827:fltk-1.3.4-1/jpeg/jidctint.c **** 
4828:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part: reverse the even part of the forward DCT.
4829:fltk-1.3.4-1/jpeg/jidctint.c ****      * The rotator is c(-6).
4830:fltk-1.3.4-1/jpeg/jidctint.c ****      */
4831:fltk-1.3.4-1/jpeg/jidctint.c **** 
4832:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 14422              		.loc 1 4832 0
 14423 0090 410FAF76 		imull	64(%r14), %esi
 14423      40
4833:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 14424              		.loc 1 4833 0
 14425 0095 410FAF86 		imull	192(%r14), %eax
 14425      C0000000 
4834:fltk-1.3.4-1/jpeg/jidctint.c **** 
4835:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);       /* c6 */
4836:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
4837:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
4838:fltk-1.3.4-1/jpeg/jidctint.c **** 
4839:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
4840:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 14426              		.loc 1 4840 0
 14427 009d 410FAF9E 		imull	128(%r14), %ebx
 14427      80000000 
4841:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
4842:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
4843:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4844:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += ONE << (CONST_BITS-PASS1_BITS-1);
4845:fltk-1.3.4-1/jpeg/jidctint.c **** 
4846:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z2 + z3;
4847:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z2 - z3;
4848:fltk-1.3.4-1/jpeg/jidctint.c **** 
4849:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp2;
4850:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
4851:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
4852:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
4853:fltk-1.3.4-1/jpeg/jidctint.c **** 
4854:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part per figure 8; the matrix is unitary and hence its
4855:fltk-1.3.4-1/jpeg/jidctint.c ****      * transpose is its inverse.  i0..i3 are y7,y5,y3,y1 respectively.
4856:fltk-1.3.4-1/jpeg/jidctint.c ****      */
4857:fltk-1.3.4-1/jpeg/jidctint.c **** 
4858:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*7], quantptr[DCTSIZE*7]);
 14428              		.loc 1 4858 0
 14429 00a5 450FAF8E 		imull	224(%r14), %r9d
 14429      E0000000 
4859:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14430              		.loc 1 4859 0
 14431 00ad 450FAF86 		imull	160(%r14), %r8d
 14431      A0000000 
4860:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 14432              		.loc 1 4860 0
 14433 00b5 410FAF7E 		imull	96(%r14), %edi
 14433      60
4832:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*6], quantptr[DCTSIZE*6]);
 14434              		.loc 1 4832 0
 14435 00ba 4863F6   		movslq	%esi, %rsi
 14436              	.LVL2206:
4833:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14437              		.loc 1 4833 0
 14438 00bd 4898     		cltq
 14439              	.LVL2207:
4835:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 14440              		.loc 1 4835 0
 14441 00bf 4C8D1C06 		leaq	(%rsi,%rax), %r11
4840:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 <<= CONST_BITS;
 14442              		.loc 1 4840 0
 14443 00c3 4863DB   		movslq	%ebx, %rbx
4837:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14444              		.loc 1 4837 0
 14445 00c6 4869C0DF 		imulq	$-15137, %rax, %rax
 14445      C4FFFF
 14446              	.LVL2208:
4842:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 14447              		.loc 1 4842 0
 14448 00cd 48C1E30D 		salq	$13, %rbx
4858:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14449              		.loc 1 4858 0
 14450 00d1 4D63C9   		movslq	%r9d, %r9
4835:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 + MULTIPLY(z2, FIX_0_765366865);     /* c2-c6 */
 14451              		.loc 1 4835 0
 14452 00d4 4D69DB51 		imulq	$4433, %r11, %r11
 14452      110000
 14453              	.LVL2209:
4859:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 14454              		.loc 1 4859 0
 14455 00db 4D63C0   		movslq	%r8d, %r8
4836:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 14456              		.loc 1 4836 0
 14457 00de 4869F67E 		imulq	$6270, %rsi, %rsi
 14457      180000
 14458              	.LVL2210:
 14459              		.loc 1 4860 0
 14460 00e5 4863FF   		movslq	%edi, %rdi
4861:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
 14461              		.loc 1 4861 0
 14462 00e8 410FAF4E 		imull	32(%r14), %ecx
 14462      20
4836:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = z1 - MULTIPLY(z3, FIX_1_847759065);     /* c2+c6 */
 14463              		.loc 1 4836 0
 14464 00ed 4C01DE   		addq	%r11, %rsi
 14465              	.LVL2211:
4837:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14466              		.loc 1 4837 0
 14467 00f0 4901C3   		addq	%rax, %r11
 14468              	.LVL2212:
4839:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 14469              		.loc 1 4839 0
 14470 00f3 0FBF02   		movswl	(%rdx), %eax
 14471 00f6 410FAF06 		imull	(%r14), %eax
 14472              		.loc 1 4861 0
 14473 00fa 4863C9   		movslq	%ecx, %rcx
4839:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 14474              		.loc 1 4839 0
 14475 00fd 4898     		cltq
 14476              	.LVL2213:
4841:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 <<= CONST_BITS;
 14477              		.loc 1 4841 0
 14478 00ff 48C1E00D 		salq	$13, %rax
 14479              	.LVL2214:
4844:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14480              		.loc 1 4844 0
 14481 0103 48050004 		addq	$1024, %rax
 14481      0000
 14482              	.LVL2215:
4846:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = z2 - z3;
 14483              		.loc 1 4846 0
 14484 0109 4C8D1403 		leaq	(%rbx,%rax), %r10
 14485              	.LVL2216:
4847:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14486              		.loc 1 4847 0
 14487 010d 4829D8   		subq	%rbx, %rax
 14488              	.LVL2217:
4862:fltk-1.3.4-1/jpeg/jidctint.c **** 
4863:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = tmp0 + tmp2;
 14489              		.loc 1 4863 0
 14490 0110 498D1C39 		leaq	(%r9,%rdi), %rbx
 14491              	.LVL2218:
4851:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp3;
 14492              		.loc 1 4851 0
 14493 0114 4D8D2403 		leaq	(%r11,%rax), %r12
4852:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14494              		.loc 1 4852 0
 14495 0118 4C29D8   		subq	%r11, %rax
 14496              	.LVL2219:
4849:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp13 = tmp0 - tmp2;
 14497              		.loc 1 4849 0
 14498 011b 4E8D2C16 		leaq	(%rsi,%r10), %r13
 14499              	.LVL2220:
4850:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = tmp1 + tmp3;
 14500              		.loc 1 4850 0
 14501 011f 4929F2   		subq	%rsi, %r10
 14502              	.LVL2221:
4864:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = tmp1 + tmp3;
 14503              		.loc 1 4864 0
 14504 0122 498D3408 		leaq	(%r8,%rcx), %rsi
 14505              	.LVL2222:
4865:fltk-1.3.4-1/jpeg/jidctint.c **** 
4866:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_1_175875602);       /*  c3 */
 14506              		.loc 1 4866 0
 14507 0126 4C8D1C33 		leaq	(%rbx,%rsi), %r11
4867:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 14508              		.loc 1 4867 0
 14509 012a 4869DB3B 		imulq	$-16069, %rbx, %rbx
 14509      C1FFFF
 14510              	.LVL2223:
4866:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = MULTIPLY(z2, - FIX_1_961570560);          /* -c3-c5 */
 14511              		.loc 1 4866 0
 14512 0131 4D69DBA1 		imulq	$9633, %r11, %r11
 14512      250000
 14513              	.LVL2224:
4868:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = MULTIPLY(z3, - FIX_0_390180644);          /* -c3+c5 */
 14514              		.loc 1 4868 0
 14515 0138 4869F684 		imulq	$-3196, %rsi, %rsi
 14515      F3FFFF
 14516              	.LVL2225:
4869:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 += z1;
 14517              		.loc 1 4869 0
 14518 013f 4C01DB   		addq	%r11, %rbx
 14519              	.LVL2226:
4870:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 += z1;
 14520              		.loc 1 4870 0
 14521 0142 4C01DE   		addq	%r11, %rsi
 14522              	.LVL2227:
4871:fltk-1.3.4-1/jpeg/jidctint.c **** 
4872:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp0 + tmp3, - FIX_0_899976223); /* -c3+c7 */
 14523              		.loc 1 4872 0
 14524 0145 4D8D1C09 		leaq	(%r9,%rcx), %r11
 14525              	.LVL2228:
4873:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 14526              		.loc 1 4873 0
 14527 0149 4D69C98E 		imulq	$2446, %r9, %r9
 14527      090000
 14528              	.LVL2229:
4872:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp0, FIX_0_298631336);        /* -c1+c3+c5-c7 */
 14529              		.loc 1 4872 0
 14530 0150 4D69DB33 		imulq	$-7373, %r11, %r11
 14530      E3FFFF
 14531              	.LVL2230:
4874:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 = MULTIPLY(tmp3, FIX_1_501321110);        /*  c1+c3-c5-c7 */
 14532              		.loc 1 4874 0
 14533 0157 4869C90B 		imulq	$12299, %rcx, %rcx
 14533      300000
 14534              	.LVL2231:
4875:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 14535              		.loc 1 4875 0
 14536 015e 4E8D3C1B 		leaq	(%rbx,%r11), %r15
4876:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp3 += z1 + z3;
 14537              		.loc 1 4876 0
 14538 0162 4901F3   		addq	%rsi, %r11
 14539              	.LVL2232:
 14540 0165 4C01D9   		addq	%r11, %rcx
 14541              	.LVL2233:
4875:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += z1 + z2;
 14542              		.loc 1 4875 0
 14543 0168 4D01F9   		addq	%r15, %r9
 14544              	.LVL2234:
4877:fltk-1.3.4-1/jpeg/jidctint.c **** 
4878:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(tmp1 + tmp2, - FIX_2_562915447); /* -c1-c3 */
 14545              		.loc 1 4878 0
 14546 016b 4D8D3C38 		leaq	(%r8,%rdi), %r15
4879:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 14547              		.loc 1 4879 0
 14548 016f 4D69C0B3 		imulq	$16819, %r8, %r8
 14548      410000
 14549              	.LVL2235:
4878:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(tmp1, FIX_2_053119869);        /*  c1+c3-c5+c7 */
 14550              		.loc 1 4878 0
 14551 0176 4D69FFFD 		imulq	$-20995, %r15, %r15
 14551      ADFFFF
 14552              	.LVL2236:
4880:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = MULTIPLY(tmp2, FIX_3_072711026);        /*  c1+c3+c5-c7 */
 14553              		.loc 1 4880 0
 14554 017d 4869FF54 		imulq	$25172, %rdi, %rdi
 14554      620000
 14555              	.LVL2237:
4881:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
4882:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 += z1 + z2;
 14556              		.loc 1 4882 0
 14557 0184 4C01FB   		addq	%r15, %rbx
 14558              	.LVL2238:
4881:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 14559              		.loc 1 4881 0
 14560 0187 4C01FE   		addq	%r15, %rsi
 14561              	.LVL2239:
 14562              		.loc 1 4882 0
 14563 018a 4801DF   		addq	%rbx, %rdi
 14564              	.LVL2240:
4881:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 += z1 + z3;
 14565              		.loc 1 4881 0
 14566 018d 4901F0   		addq	%rsi, %r8
 14567              	.LVL2241:
4883:fltk-1.3.4-1/jpeg/jidctint.c **** 
4884:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage: inputs are tmp10..tmp13, tmp0..tmp3 */
4885:fltk-1.3.4-1/jpeg/jidctint.c **** 
4886:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*0] = (int) RIGHT_SHIFT(tmp10 + tmp3, CONST_BITS-PASS1_BITS);
 14568              		.loc 1 4886 0
 14569 0190 498D740D 		leaq	0(%r13,%rcx), %rsi
 14569      00
4887:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 14570              		.loc 1 4887 0
 14571 0195 4929CD   		subq	%rcx, %r13
 14572              	.LVL2242:
4888:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 14573              		.loc 1 4888 0
 14574 0198 498D0C3C 		leaq	(%r12,%rdi), %rcx
 14575              	.LVL2243:
4889:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 14576              		.loc 1 4889 0
 14577 019c 4929FC   		subq	%rdi, %r12
 14578              	.LVL2244:
4886:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 14579              		.loc 1 4886 0
 14580 019f 48C1FE0B 		sarq	$11, %rsi
4887:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 14581              		.loc 1 4887 0
 14582 01a3 49C1FD0B 		sarq	$11, %r13
 14583              		.loc 1 4889 0
 14584 01a7 49C1FC0B 		sarq	$11, %r12
4888:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 14585              		.loc 1 4888 0
 14586 01ab 48C1F90B 		sarq	$11, %rcx
4886:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*7] = (int) RIGHT_SHIFT(tmp10 - tmp3, CONST_BITS-PASS1_BITS);
 14587              		.loc 1 4886 0
 14588 01af 897500   		movl	%esi, 0(%rbp)
4887:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*1] = (int) RIGHT_SHIFT(tmp11 + tmp2, CONST_BITS-PASS1_BITS);
 14589              		.loc 1 4887 0
 14590 01b2 44896D70 		movl	%r13d, 112(%rbp)
4888:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*6] = (int) RIGHT_SHIFT(tmp11 - tmp2, CONST_BITS-PASS1_BITS);
 14591              		.loc 1 4888 0
 14592 01b6 894D10   		movl	%ecx, 16(%rbp)
4890:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*2] = (int) RIGHT_SHIFT(tmp12 + tmp1, CONST_BITS-PASS1_BITS);
 14593              		.loc 1 4890 0
 14594 01b9 4A8D0C00 		leaq	(%rax,%r8), %rcx
4891:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 14595              		.loc 1 4891 0
 14596 01bd 4C29C0   		subq	%r8, %rax
 14597              	.LVL2245:
 14598 01c0 48C1F80B 		sarq	$11, %rax
4889:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*2] = (int) RIGHT_SHIFT(tmp12 + tmp1, CONST_BITS-PASS1_BITS);
 14599              		.loc 1 4889 0
 14600 01c4 44896560 		movl	%r12d, 96(%rbp)
 14601              		.loc 1 4891 0
 14602 01c8 894550   		movl	%eax, 80(%rbp)
4892:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 14603              		.loc 1 4892 0
 14604 01cb 4B8D040A 		leaq	(%r10,%r9), %rax
4893:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*4] = (int) RIGHT_SHIFT(tmp13 - tmp0, CONST_BITS-PASS1_BITS);
 14605              		.loc 1 4893 0
 14606 01cf 4D29CA   		subq	%r9, %r10
 14607              	.LVL2246:
4890:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 14608              		.loc 1 4890 0
 14609 01d2 48C1F90B 		sarq	$11, %rcx
 14610              		.loc 1 4893 0
 14611 01d6 49C1FA0B 		sarq	$11, %r10
4892:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 14612              		.loc 1 4892 0
 14613 01da 48C1F80B 		sarq	$11, %rax
4890:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*5] = (int) RIGHT_SHIFT(tmp12 - tmp1, CONST_BITS-PASS1_BITS);
 14614              		.loc 1 4890 0
 14615 01de 894D20   		movl	%ecx, 32(%rbp)
 14616              		.loc 1 4893 0
 14617 01e1 44895540 		movl	%r10d, 64(%rbp)
 14618              	.LVL2247:
4892:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[4*3] = (int) RIGHT_SHIFT(tmp13 + tmp0, CONST_BITS-PASS1_BITS);
 14619              		.loc 1 4892 0
 14620 01e5 894530   		movl	%eax, 48(%rbp)
 14621              	.LVL2248:
 14622              	.L252:
 14623 01e8 4883C202 		addq	$2, %rdx
 14624 01ec 4983C604 		addq	$4, %r14
 14625 01f0 4883C504 		addq	$4, %rbp
4796:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
 14626              		.loc 1 4796 0 discriminator 2
 14627 01f4 836C2410 		subl	$1, 16(%rsp)
 14627      01
 14628              	.LVL2249:
 14629 01f9 0F8550FE 		jne	.L253
 14629      FFFF
 14630 01ff 448B4424 		movl	20(%rsp), %r8d
 14630      14
 14631 0204 4C8B6C24 		movq	24(%rsp), %r13
 14631      18
4796:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Due to quantization, we will usually find that many of the input
 14632              		.loc 1 4796 0 is_stmt 0
 14633 0209 488D7C24 		leaq	32(%rsp), %rdi
 14633      20
 14634 020e 488B4C24 		movq	8(%rsp), %rcx
 14634      08
4894:fltk-1.3.4-1/jpeg/jidctint.c **** 
4895:fltk-1.3.4-1/jpeg/jidctint.c ****     inptr++;			/* advance pointers to next column */
4896:fltk-1.3.4-1/jpeg/jidctint.c ****     quantptr++;
4897:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr++;
4898:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4899:fltk-1.3.4-1/jpeg/jidctint.c **** 
4900:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 8 rows from work array, store into output array.
4901:fltk-1.3.4-1/jpeg/jidctint.c ****    * 4-point IDCT kernel,
4902:fltk-1.3.4-1/jpeg/jidctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point IDCT].
4903:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4904:fltk-1.3.4-1/jpeg/jidctint.c **** 
4905:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
4906:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 8; ctr++) {
 14635              		.loc 1 4906 0 is_stmt 1
 14636 0213 4C8D9424 		leaq	160(%rsp), %r10
 14636      A0000000 
 14637              	.LVL2250:
 14638 021b 0F1F4400 		.p2align 4,,10
 14638      00
 14639              		.p2align 3
 14640              	.L254:
4907:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
4908:fltk-1.3.4-1/jpeg/jidctint.c **** 
4909:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4910:fltk-1.3.4-1/jpeg/jidctint.c **** 
4911:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4912:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
 14641              		.loc 1 4912 0 discriminator 3
 14642 0220 486307   		movslq	(%rdi), %rax
4913:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
 14643              		.loc 1 4913 0 discriminator 3
 14644 0223 48637708 		movslq	8(%rdi), %rsi
4907:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 14645              		.loc 1 4907 0 discriminator 3
 14646 0227 4D89C1   		movq	%r8, %r9
4914:fltk-1.3.4-1/jpeg/jidctint.c **** 
4915:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (tmp0 + tmp2) << CONST_BITS;
4916:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
4917:fltk-1.3.4-1/jpeg/jidctint.c **** 
4918:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4919:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Same rotation as in the even part of the 8x8 LL&M IDCT */
4920:fltk-1.3.4-1/jpeg/jidctint.c **** 
4921:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = (INT32) wsptr[1];
 14647              		.loc 1 4921 0 discriminator 3
 14648 022a 4C635F04 		movslq	4(%rdi), %r11
4907:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14649              		.loc 1 4907 0 discriminator 3
 14650 022e 4C0309   		addq	(%rcx), %r9
 14651              	.LVL2251:
4922:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = (INT32) wsptr[3];
4923:fltk-1.3.4-1/jpeg/jidctint.c **** 
4924:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);   /* c6 */
4925:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
4926:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
4927:fltk-1.3.4-1/jpeg/jidctint.c **** 
4928:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
4929:fltk-1.3.4-1/jpeg/jidctint.c **** 
4930:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
4931:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4932:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4933:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[3] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
4934:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4935:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4936:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp12 + tmp2,
4937:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4938:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4939:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp12 - tmp2,
4940:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
4941:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
4942:fltk-1.3.4-1/jpeg/jidctint.c **** 
4943:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 4;		/* advance pointer to next row */
 14652              		.loc 1 4943 0 discriminator 3
 14653 0231 4883C710 		addq	$16, %rdi
 14654              	.LVL2252:
 14655 0235 4883C108 		addq	$8, %rcx
4912:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
 14656              		.loc 1 4912 0 discriminator 3
 14657 0239 4883C010 		addq	$16, %rax
 14658              	.LVL2253:
4915:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 14659              		.loc 1 4915 0 discriminator 3
 14660 023d 488D1430 		leaq	(%rax,%rsi), %rdx
4916:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14661              		.loc 1 4916 0 discriminator 3
 14662 0241 4829F0   		subq	%rsi, %rax
 14663              	.LVL2254:
4922:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14664              		.loc 1 4922 0 discriminator 3
 14665 0244 486377FC 		movslq	-4(%rdi), %rsi
 14666              	.LVL2255:
4916:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14667              		.loc 1 4916 0 discriminator 3
 14668 0248 48C1E00D 		salq	$13, %rax
4915:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 14669              		.loc 1 4915 0 discriminator 3
 14670 024c 48C1E20D 		salq	$13, %rdx
 14671              	.LVL2256:
4924:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 14672              		.loc 1 4924 0 discriminator 3
 14673 0250 498D1C33 		leaq	(%r11,%rsi), %rbx
4925:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 14674              		.loc 1 4925 0 discriminator 3
 14675 0254 4D69DB7E 		imulq	$6270, %r11, %r11
 14675      180000
 14676              	.LVL2257:
4924:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 14677              		.loc 1 4924 0 discriminator 3
 14678 025b 4869DB51 		imulq	$4433, %rbx, %rbx
 14678      110000
 14679              	.LVL2258:
4926:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14680              		.loc 1 4926 0 discriminator 3
 14681 0262 4869F6DF 		imulq	$-15137, %rsi, %rsi
 14681      C4FFFF
 14682              	.LVL2259:
4925:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 14683              		.loc 1 4925 0 discriminator 3
 14684 0269 4901DB   		addq	%rbx, %r11
 14685              	.LVL2260:
4926:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14686              		.loc 1 4926 0 discriminator 3
 14687 026c 4801DE   		addq	%rbx, %rsi
 14688              	.LVL2261:
4930:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14689              		.loc 1 4930 0 discriminator 3
 14690 026f 4A8D1C1A 		leaq	(%rdx,%r11), %rbx
 14691              	.LVL2262:
4933:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14692              		.loc 1 4933 0 discriminator 3
 14693 0273 4C29DA   		subq	%r11, %rdx
 14694              	.LVL2263:
 14695 0276 48C1FA12 		sarq	$18, %rdx
4930:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14696              		.loc 1 4930 0 discriminator 3
 14697 027a 48C1FB12 		sarq	$18, %rbx
4933:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14698              		.loc 1 4933 0 discriminator 3
 14699 027e 81E2FF03 		andl	$1023, %edx
 14699      0000
4930:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14700              		.loc 1 4930 0 discriminator 3
 14701 0284 81E3FF03 		andl	$1023, %ebx
 14701      0000
 14702 028a 410FB65C 		movzbl	0(%r13,%rbx), %ebx
 14702      1D00
 14703 0290 418819   		movb	%bl, (%r9)
4933:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14704              		.loc 1 4933 0 discriminator 3
 14705 0293 410FB654 		movzbl	0(%r13,%rdx), %edx
 14705      1500
 14706 0299 41885103 		movb	%dl, 3(%r9)
4936:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14707              		.loc 1 4936 0 discriminator 3
 14708 029d 488D1430 		leaq	(%rax,%rsi), %rdx
4939:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14709              		.loc 1 4939 0 discriminator 3
 14710 02a1 4829F0   		subq	%rsi, %rax
 14711              	.LVL2264:
 14712 02a4 48C1F812 		sarq	$18, %rax
4936:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14713              		.loc 1 4936 0 discriminator 3
 14714 02a8 48C1FA12 		sarq	$18, %rdx
4939:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14715              		.loc 1 4939 0 discriminator 3
 14716 02ac 25FF0300 		andl	$1023, %eax
 14716      00
4936:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14717              		.loc 1 4936 0 discriminator 3
 14718 02b1 81E2FF03 		andl	$1023, %edx
 14718      0000
4906:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 14719              		.loc 1 4906 0 discriminator 3
 14720 02b7 4C39D7   		cmpq	%r10, %rdi
4936:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14721              		.loc 1 4936 0 discriminator 3
 14722 02ba 410FB654 		movzbl	0(%r13,%rdx), %edx
 14722      1500
 14723 02c0 41885101 		movb	%dl, 1(%r9)
4939:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 14724              		.loc 1 4939 0 discriminator 3
 14725 02c4 410FB644 		movzbl	0(%r13,%rax), %eax
 14725      0500
 14726 02ca 41884102 		movb	%al, 2(%r9)
4906:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 14727              		.loc 1 4906 0 discriminator 3
 14728 02ce 0F854CFF 		jne	.L254
 14728      FFFF
4944:fltk-1.3.4-1/jpeg/jidctint.c ****   }
4945:fltk-1.3.4-1/jpeg/jidctint.c **** }
 14729              		.loc 1 4945 0
 14730 02d4 488B8424 		movq	168(%rsp), %rax
 14730      A8000000 
 14731 02dc 64483304 		xorq	%fs:40, %rax
 14731      25280000 
 14731      00
 14732 02e5 0F85CF00 		jne	.L260
 14732      0000
 14733 02eb 4881C4B8 		addq	$184, %rsp
 14733      000000
 14734              		.cfi_remember_state
 14735              		.cfi_def_cfa_offset 56
 14736 02f2 5B       		popq	%rbx
 14737              		.cfi_def_cfa_offset 48
 14738 02f3 5D       		popq	%rbp
 14739              		.cfi_def_cfa_offset 40
 14740 02f4 415C     		popq	%r12
 14741              		.cfi_def_cfa_offset 32
 14742 02f6 415D     		popq	%r13
 14743              		.cfi_def_cfa_offset 24
 14744 02f8 415E     		popq	%r14
 14745              		.cfi_def_cfa_offset 16
 14746 02fa 415F     		popq	%r15
 14747              		.cfi_def_cfa_offset 8
 14748 02fc C3       		ret
 14749              	.LVL2265:
 14750 02fd 0F1F00   		.p2align 4,,10
 14751              		.p2align 3
 14752              	.L245:
 14753              		.cfi_restore_state
 14754 0300 0FBF4260 		movswl	96(%rdx), %eax
 14755 0304 0FBF5A40 		movswl	64(%rdx), %ebx
 14756 0308 440FBF4A 		movswl	112(%rdx), %r9d
 14756      70
 14757 030d 440FBF42 		movswl	80(%rdx), %r8d
 14757      50
 14758 0312 0FBF7A30 		movswl	48(%rdx), %edi
 14759 0316 E975FDFF 		jmp	.L247
 14759      FF
 14760 031b 0F1F4400 		.p2align 4,,10
 14760      00
 14761              		.p2align 3
 14762              	.L248:
4807:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 14763              		.loc 1 4807 0
 14764 0320 0FBF5A40 		movswl	64(%rdx), %ebx
 14765 0324 6685DB   		testw	%bx, %bx
 14766 0327 752F     		jne	.L261
4808:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 14767              		.loc 1 4808 0 discriminator 1
 14768 0329 440FBF42 		movswl	80(%rdx), %r8d
 14768      50
 14769 032e 0FBF4260 		movswl	96(%rdx), %eax
4809:fltk-1.3.4-1/jpeg/jidctint.c ****       /* AC terms all zero */
 14770              		.loc 1 4809 0 discriminator 1
 14771 0332 440FBF4A 		movswl	112(%rdx), %r9d
 14771      70
4807:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 14772              		.loc 1 4807 0 discriminator 1
 14773 0337 664585C0 		testw	%r8w, %r8w
 14774 033b 7533     		jne	.L262
4808:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 14775              		.loc 1 4808 0
 14776 033d 6685C0   		testw	%ax, %ax
 14777 0340 7439     		je	.L251
 14778 0342 410FBFF8 		movswl	%r8w, %edi
 14779 0346 410FBFD8 		movswl	%r8w, %ebx
 14780 034a 410FBFF0 		movswl	%r8w, %esi
 14781 034e E93DFDFF 		jmp	.L247
 14781      FF
 14782              		.p2align 4,,10
 14783 0353 0F1F4400 		.p2align 3
 14783      00
 14784              	.L261:
 14785 0358 0FBF4260 		movswl	96(%rdx), %eax
 14786 035c 440FBF4A 		movswl	112(%rdx), %r9d
 14786      70
4807:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*5] == 0 && inptr[DCTSIZE*6] == 0 &&
 14787              		.loc 1 4807 0
 14788 0361 0FBFF7   		movswl	%di, %esi
 14789 0364 440FBF42 		movswl	80(%rdx), %r8d
 14789      50
 14790 0369 E922FDFF 		jmp	.L247
 14790      FF
 14791 036e 6690     		.p2align 4,,10
 14792              		.p2align 3
 14793              	.L262:
 14794 0370 0FBFFB   		movswl	%bx, %edi
 14795 0373 0FBFF3   		movswl	%bx, %esi
 14796 0376 E915FDFF 		jmp	.L247
 14796      FF
 14797              	.L251:
4808:fltk-1.3.4-1/jpeg/jidctint.c **** 	inptr[DCTSIZE*7] == 0) {
 14798              		.loc 1 4808 0 discriminator 1
 14799 037b 664585C9 		testw	%r9w, %r9w
 14800 037f 7527     		jne	.L256
 14801              	.LBB5:
4811:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14802              		.loc 1 4811 0
 14803 0381 0FBF02   		movswl	(%rdx), %eax
 14804 0384 410FAF06 		imull	(%r14), %eax
 14805 0388 C1E002   		sall	$2, %eax
 14806              	.LVL2266:
4813:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*1] = dcval;
 14807              		.loc 1 4813 0
 14808 038b 894500   		movl	%eax, 0(%rbp)
4814:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*2] = dcval;
 14809              		.loc 1 4814 0
 14810 038e 894510   		movl	%eax, 16(%rbp)
4815:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*3] = dcval;
 14811              		.loc 1 4815 0
 14812 0391 894520   		movl	%eax, 32(%rbp)
4816:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*4] = dcval;
 14813              		.loc 1 4816 0
 14814 0394 894530   		movl	%eax, 48(%rbp)
4817:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*5] = dcval;
 14815              		.loc 1 4817 0
 14816 0397 894540   		movl	%eax, 64(%rbp)
4818:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*6] = dcval;
 14817              		.loc 1 4818 0
 14818 039a 894550   		movl	%eax, 80(%rbp)
4819:fltk-1.3.4-1/jpeg/jidctint.c ****       wsptr[4*7] = dcval;
 14819              		.loc 1 4819 0
 14820 039d 894560   		movl	%eax, 96(%rbp)
4820:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14821              		.loc 1 4820 0
 14822 03a0 894570   		movl	%eax, 112(%rbp)
 14823              	.LVL2267:
4825:fltk-1.3.4-1/jpeg/jidctint.c ****     }
 14824              		.loc 1 4825 0
 14825 03a3 E940FEFF 		jmp	.L252
 14825      FF
 14826              	.LVL2268:
 14827              	.L256:
 14828              	.LBE5:
 14829 03a8 0FBFF8   		movswl	%ax, %edi
 14830 03ab 440FBFC0 		movswl	%ax, %r8d
 14831 03af 0FBFD8   		movswl	%ax, %ebx
 14832 03b2 0FBFF0   		movswl	%ax, %esi
 14833 03b5 E9D6FCFF 		jmp	.L247
 14833      FF
 14834              	.LVL2269:
 14835              	.L260:
 14836              		.loc 1 4945 0
 14837 03ba E8000000 		call	__stack_chk_fail
 14837      00
 14838              	.LVL2270:
 14839              		.cfi_endproc
 14840              	.LFE89:
 14842              		.section	.text.unlikely.jpeg_idct_4x8
 14843              	.LCOLDE28:
 14844              		.section	.text.jpeg_idct_4x8
 14845              	.LHOTE28:
 14846              		.section	.text.unlikely.jpeg_idct_3x6,"ax",@progbits
 14847              	.LCOLDB29:
 14848              		.section	.text.jpeg_idct_3x6,"ax",@progbits
 14849              	.LHOTB29:
 14850              		.p2align 4,,15
 14851              		.globl	jpeg_idct_3x6
 14853              	jpeg_idct_3x6:
 14854              	.LFB90:
4946:fltk-1.3.4-1/jpeg/jidctint.c **** 
4947:fltk-1.3.4-1/jpeg/jidctint.c **** 
4948:fltk-1.3.4-1/jpeg/jidctint.c **** /*
4949:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
4950:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a reduced-size 3x6 output block.
4951:fltk-1.3.4-1/jpeg/jidctint.c ****  *
4952:fltk-1.3.4-1/jpeg/jidctint.c ****  * 6-point IDCT in pass 1 (columns), 3-point in pass 2 (rows).
4953:fltk-1.3.4-1/jpeg/jidctint.c ****  */
4954:fltk-1.3.4-1/jpeg/jidctint.c **** 
4955:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
4956:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_3x6 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
4957:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
4958:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
4959:fltk-1.3.4-1/jpeg/jidctint.c **** {
 14855              		.loc 1 4959 0
 14856              		.cfi_startproc
 14857              	.LVL2271:
 14858 0000 4157     		pushq	%r15
 14859              		.cfi_def_cfa_offset 16
 14860              		.cfi_offset 15, -16
 14861 0002 4156     		pushq	%r14
 14862              		.cfi_def_cfa_offset 24
 14863              		.cfi_offset 14, -24
 14864 0004 4155     		pushq	%r13
 14865              		.cfi_def_cfa_offset 32
 14866              		.cfi_offset 13, -32
 14867 0006 4154     		pushq	%r12
 14868              		.cfi_def_cfa_offset 40
 14869              		.cfi_offset 12, -40
 14870 0008 55       		pushq	%rbp
 14871              		.cfi_def_cfa_offset 48
 14872              		.cfi_offset 6, -48
 14873 0009 53       		pushq	%rbx
 14874              		.cfi_def_cfa_offset 56
 14875              		.cfi_offset 3, -56
 14876 000a 4883EC68 		subq	$104, %rsp
 14877              		.cfi_def_cfa_offset 160
4960:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
4961:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
4962:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
4963:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
4964:fltk-1.3.4-1/jpeg/jidctint.c ****   int * wsptr;
4965:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
4966:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 14878              		.loc 1 4966 0
 14879 000e 4C8BA7B8 		movq	440(%rdi), %r12
 14879      010000
4967:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
4968:fltk-1.3.4-1/jpeg/jidctint.c ****   int workspace[3*6];	/* buffers data between passes */
4969:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
4970:fltk-1.3.4-1/jpeg/jidctint.c **** 
4971:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
4972:fltk-1.3.4-1/jpeg/jidctint.c ****    * 6-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/12).
4973:fltk-1.3.4-1/jpeg/jidctint.c ****    */
4974:fltk-1.3.4-1/jpeg/jidctint.c **** 
4975:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
4976:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 14880              		.loc 1 4976 0
 14881 0015 4C8B5E58 		movq	88(%rsi), %r11
4959:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
 14882              		.loc 1 4959 0
 14883 0019 64488B04 		movq	%fs:40, %rax
 14883      25280000 
 14883      00
 14884 0022 48894424 		movq	%rax, 88(%rsp)
 14884      58
 14885 0027 31C0     		xorl	%eax, %eax
4977:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 14886              		.loc 1 4977 0
 14887 0029 4C8D5424 		leaq	16(%rsp), %r10
 14887      10
4978:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 3; ctr++, inptr++, quantptr++, wsptr++) {
 14888              		.loc 1 4978 0
 14889 002e 4C8D7C24 		leaq	28(%rsp), %r15
 14889      1C
4959:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1, tmp2, tmp10, tmp11, tmp12;
 14890              		.loc 1 4959 0
 14891 0033 48890C24 		movq	%rcx, (%rsp)
 14892 0037 44894424 		movl	%r8d, 12(%rsp)
 14892      0C
4966:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 14893              		.loc 1 4966 0
 14894 003c 4983EC80 		subq	$-128, %r12
 14895              	.LVL2272:
 14896              	.L264:
4979:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
4980:fltk-1.3.4-1/jpeg/jidctint.c **** 
4981:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
4982:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
4983:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
4984:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 += ONE << (CONST_BITS-PASS1_BITS-1);
4985:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
4986:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = MULTIPLY(tmp2, FIX(0.707106781));   /* c4 */
 14897              		.loc 1 4986 0 discriminator 3
 14898 0040 440FBF42 		movswl	64(%rdx), %r8d
 14898      40
4981:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 14899              		.loc 1 4981 0 discriminator 3
 14900 0045 0FBF0A   		movswl	(%rdx), %ecx
4978:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 14901              		.loc 1 4978 0 discriminator 3
 14902 0048 4983C304 		addq	$4, %r11
 14903              	.LVL2273:
 14904              		.loc 1 4986 0 discriminator 3
 14905 004c 450FAF43 		imull	124(%r11), %r8d
 14905      7C
4987:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
4988:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = RIGHT_SHIFT(tmp0 - tmp10 - tmp10, CONST_BITS-PASS1_BITS);
4989:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
4990:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp10, FIX(1.224744871));   /* c2 */
 14906              		.loc 1 4990 0 discriminator 3
 14907 0051 0FBF4220 		movswl	32(%rdx), %eax
4991:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
4992:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
4993:fltk-1.3.4-1/jpeg/jidctint.c **** 
4994:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
4995:fltk-1.3.4-1/jpeg/jidctint.c **** 
4996:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
4997:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
4998:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14908              		.loc 1 4998 0 discriminator 3
 14909 0055 440FBF4A 		movswl	80(%rdx), %r9d
 14909      50
4978:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 14910              		.loc 1 4978 0 discriminator 3
 14911 005a 4883C202 		addq	$2, %rdx
 14912              	.LVL2274:
4981:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 14913              		.loc 1 4981 0 discriminator 3
 14914 005e 410FAF4B 		imull	-4(%r11), %ecx
 14914      FC
4990:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 14915              		.loc 1 4990 0 discriminator 3
 14916 0063 410FAF43 		imull	60(%r11), %eax
 14916      3C
 14917              		.loc 1 4998 0 discriminator 3
 14918 0068 450FAF8B 		imull	156(%r11), %r9d
 14918      9C000000 
4997:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14919              		.loc 1 4997 0 discriminator 3
 14920 0070 0FBF5A2E 		movswl	46(%rdx), %ebx
4986:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 14921              		.loc 1 4986 0 discriminator 3
 14922 0074 4D63C0   		movslq	%r8d, %r8
4997:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14923              		.loc 1 4997 0 discriminator 3
 14924 0077 410FAF5B 		imull	92(%r11), %ebx
 14924      5C
4986:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = tmp0 + tmp10;
 14925              		.loc 1 4986 0 discriminator 3
 14926 007c 4D69C0A1 		imulq	$5793, %r8, %r8
 14926      160000
4981:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 14927              		.loc 1 4981 0 discriminator 3
 14928 0083 4863C9   		movslq	%ecx, %rcx
 14929              	.LVL2275:
4990:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 14930              		.loc 1 4990 0 discriminator 3
 14931 0086 4898     		cltq
4982:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
 14932              		.loc 1 4982 0 discriminator 3
 14933 0088 48C1E10D 		salq	$13, %rcx
 14934              	.LVL2276:
4984:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*4], quantptr[DCTSIZE*4]);
 14935              		.loc 1 4984 0 discriminator 3
 14936 008c 4881C100 		addq	$1024, %rcx
 14936      040000
 14937              	.LVL2277:
 14938              		.loc 1 4998 0 discriminator 3
 14939 0093 4D63C9   		movslq	%r9d, %r9
4990:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp1 + tmp0;
 14940              		.loc 1 4990 0 discriminator 3
 14941 0096 4869C031 		imulq	$10033, %rax, %rax
 14941      270000
4987:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp11 = RIGHT_SHIFT(tmp0 - tmp10 - tmp10, CONST_BITS-PASS1_BITS);
 14942              		.loc 1 4987 0 discriminator 3
 14943 009d 4A8D3401 		leaq	(%rcx,%r8), %rsi
 14944              	.LVL2278:
4999:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = MULTIPLY(z1 + z3, FIX(0.366025404)); /* c5 */
5000:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
5001:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
5002:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
5003:fltk-1.3.4-1/jpeg/jidctint.c **** 
5004:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
5005:fltk-1.3.4-1/jpeg/jidctint.c **** 
5006:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*0] = (int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS-PASS1_BITS);
5007:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
5008:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*1] = (int) (tmp11 + tmp1);
 14945              		.loc 1 5008 0 discriminator 3
 14946 00a1 4C29C1   		subq	%r8, %rcx
 14947              	.LVL2279:
4997:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*5], quantptr[DCTSIZE*5]);
 14948              		.loc 1 4997 0 discriminator 3
 14949 00a4 4863DB   		movslq	%ebx, %rbx
 14950              		.loc 1 5008 0 discriminator 3
 14951 00a7 4C29C1   		subq	%r8, %rcx
 14952 00aa 48C1F90B 		sarq	$11, %rcx
4991:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = tmp1 - tmp0;
 14953              		.loc 1 4991 0 discriminator 3
 14954 00ae 488D2C06 		leaq	(%rsi,%rax), %rbp
 14955              	.LVL2280:
4992:fltk-1.3.4-1/jpeg/jidctint.c **** 
 14956              		.loc 1 4992 0 discriminator 3
 14957 00b2 4829C6   		subq	%rax, %rsi
 14958              	.LVL2281:
4996:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 14959              		.loc 1 4996 0 discriminator 3
 14960 00b5 0FBF420E 		movswl	14(%rdx), %eax
 14961              	.LVL2282:
 14962 00b9 410FAF43 		imull	28(%r11), %eax
 14962      1C
 14963 00be 4898     		cltq
 14964              	.LVL2283:
4999:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 14965              		.loc 1 4999 0 discriminator 3
 14966 00c0 4A8D3C08 		leaq	(%rax,%r9), %rdi
5000:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 14967              		.loc 1 5000 0 discriminator 3
 14968 00c4 4C8D2C18 		leaq	(%rax,%rbx), %r13
 14969              		.loc 1 5008 0 discriminator 3
 14970 00c8 4829D8   		subq	%rbx, %rax
 14971              	.LVL2284:
 14972 00cb 4C29C8   		subq	%r9, %rax
4999:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = tmp1 + ((z1 + z2) << CONST_BITS);
 14973              		.loc 1 4999 0 discriminator 3
 14974 00ce 4C69F7B6 		imulq	$2998, %rdi, %r14
 14974      0B0000
 14975              	.LVL2285:
5001:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 14976              		.loc 1 5001 0 discriminator 3
 14977 00d5 4C89CF   		movq	%r9, %rdi
5000:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 14978              		.loc 1 5000 0 discriminator 3
 14979 00d8 49C1E50D 		salq	$13, %r13
5001:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 14980              		.loc 1 5001 0 discriminator 3
 14981 00dc 4829DF   		subq	%rbx, %rdi
 14982              		.loc 1 5008 0 discriminator 3
 14983 00df 48C1E002 		salq	$2, %rax
5001:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 14984              		.loc 1 5001 0 discriminator 3
 14985 00e3 48C1E70D 		salq	$13, %rdi
 14986              		.loc 1 5008 0 discriminator 3
 14987 00e7 448D0408 		leal	(%rax,%rcx), %r8d
 14988              	.LVL2286:
5009:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*4] = (int) (tmp11 - tmp1);
 14989              		.loc 1 5009 0 discriminator 3
 14990 00eb 29C1     		subl	%eax, %ecx
 14991 00ed 41894A30 		movl	%ecx, 48(%r10)
5001:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp1 = (z1 - z2 - z3) << PASS1_BITS;
 14992              		.loc 1 5001 0 discriminator 3
 14993 00f1 4C01F7   		addq	%r14, %rdi
5000:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp1 + ((z3 - z2) << CONST_BITS);
 14994              		.loc 1 5000 0 discriminator 3
 14995 00f4 4D01F5   		addq	%r14, %r13
 14996              	.LVL2287:
5008:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*4] = (int) (tmp11 - tmp1);
 14997              		.loc 1 5008 0 discriminator 3
 14998 00f7 4589420C 		movl	%r8d, 12(%r10)
5006:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 14999              		.loc 1 5006 0 discriminator 3
 15000 00fb 4E8D742D 		leaq	0(%rbp,%r13), %r14
 15000      00
5010:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*2] = (int) RIGHT_SHIFT(tmp12 + tmp2, CONST_BITS-PASS1_BITS);
 15001              		.loc 1 5010 0 discriminator 3
 15002 0100 488D043E 		leaq	(%rsi,%rdi), %rax
5007:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*1] = (int) (tmp11 + tmp1);
 15003              		.loc 1 5007 0 discriminator 3
 15004 0104 4C29ED   		subq	%r13, %rbp
 15005              	.LVL2288:
5011:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*3] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 15006              		.loc 1 5011 0 discriminator 3
 15007 0107 4829FE   		subq	%rdi, %rsi
 15008              	.LVL2289:
5007:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*1] = (int) (tmp11 + tmp1);
 15009              		.loc 1 5007 0 discriminator 3
 15010 010a 48C1FD0B 		sarq	$11, %rbp
5006:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 15011              		.loc 1 5006 0 discriminator 3
 15012 010e 49C1FE0B 		sarq	$11, %r14
5010:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*3] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 15013              		.loc 1 5010 0 discriminator 3
 15014 0112 48C1F80B 		sarq	$11, %rax
 15015              		.loc 1 5011 0 discriminator 3
 15016 0116 48C1FE0B 		sarq	$11, %rsi
5006:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*5] = (int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS-PASS1_BITS);
 15017              		.loc 1 5006 0 discriminator 3
 15018 011a 458932   		movl	%r14d, (%r10)
5007:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*1] = (int) (tmp11 + tmp1);
 15019              		.loc 1 5007 0 discriminator 3
 15020 011d 41896A3C 		movl	%ebp, 60(%r10)
4978:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 15021              		.loc 1 4978 0 discriminator 3
 15022 0121 4983C204 		addq	$4, %r10
 15023              	.LVL2290:
5010:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[3*3] = (int) RIGHT_SHIFT(tmp12 - tmp2, CONST_BITS-PASS1_BITS);
 15024              		.loc 1 5010 0 discriminator 3
 15025 0125 41894214 		movl	%eax, 20(%r10)
 15026              		.loc 1 5011 0 discriminator 3
 15027 0129 41897220 		movl	%esi, 32(%r10)
 15028              	.LVL2291:
4978:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 15029              		.loc 1 4978 0 discriminator 3
 15030 012d 4D39FA   		cmpq	%r15, %r10
 15031 0130 0F850AFF 		jne	.L264
 15031      FFFF
 15032 0136 448B4424 		movl	12(%rsp), %r8d
 15032      0C
 15033 013b 488B0C24 		movq	(%rsp), %rcx
4978:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 15034              		.loc 1 4978 0 is_stmt 0
 15035 013f 488D7424 		leaq	16(%rsp), %rsi
 15035      10
5012:fltk-1.3.4-1/jpeg/jidctint.c ****   }
5013:fltk-1.3.4-1/jpeg/jidctint.c **** 
5014:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 6 rows from work array, store into output array.
5015:fltk-1.3.4-1/jpeg/jidctint.c ****    * 3-point IDCT kernel, cK represents sqrt(2) * cos(K*pi/6).
5016:fltk-1.3.4-1/jpeg/jidctint.c ****    */
5017:fltk-1.3.4-1/jpeg/jidctint.c **** 
5018:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
5019:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 6; ctr++) {
 15036              		.loc 1 5019 0 is_stmt 1
 15037 0144 4C8D4C24 		leaq	88(%rsp), %r9
 15037      58
 15038              	.LVL2292:
 15039 0149 0F1F8000 		.p2align 4,,10
 15039      000000
 15040              		.p2align 3
 15041              	.L265:
5020:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
5021:fltk-1.3.4-1/jpeg/jidctint.c **** 
5022:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
5023:fltk-1.3.4-1/jpeg/jidctint.c **** 
5024:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
5025:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = (INT32) wsptr[0] + (ONE << (PASS1_BITS+2));
5026:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
5027:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
5028:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = MULTIPLY(tmp2, FIX(0.707106781)); /* c2 */
 15042              		.loc 1 5028 0 discriminator 3
 15043 0150 4C635608 		movslq	8(%rsi), %r10
5025:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 15044              		.loc 1 5025 0 discriminator 3
 15045 0154 486306   		movslq	(%rsi), %rax
5020:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 15046              		.loc 1 5020 0 discriminator 3
 15047 0157 4C89C7   		movq	%r8, %rdi
5029:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
5030:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
5031:fltk-1.3.4-1/jpeg/jidctint.c **** 
5032:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
5033:fltk-1.3.4-1/jpeg/jidctint.c **** 
5034:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (INT32) wsptr[1];
5035:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = MULTIPLY(tmp12, FIX(1.224744871)); /* c1 */
 15048              		.loc 1 5035 0 discriminator 3
 15049 015a 48635E04 		movslq	4(%rsi), %rbx
5020:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15050              		.loc 1 5020 0 discriminator 3
 15051 015e 480339   		addq	(%rcx), %rdi
 15052              	.LVL2293:
5036:fltk-1.3.4-1/jpeg/jidctint.c **** 
5037:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
5038:fltk-1.3.4-1/jpeg/jidctint.c **** 
5039:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0,
5040:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
5041:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
5042:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[2] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0,
5043:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
5044:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
5045:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp2,
5046:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
5047:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
5048:fltk-1.3.4-1/jpeg/jidctint.c **** 
5049:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 3;		/* advance pointer to next row */
 15053              		.loc 1 5049 0 discriminator 3
 15054 0161 4883C60C 		addq	$12, %rsi
 15055              	.LVL2294:
 15056 0165 4883C108 		addq	$8, %rcx
5028:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = tmp0 + tmp12;
 15057              		.loc 1 5028 0 discriminator 3
 15058 0169 4D69D2A1 		imulq	$5793, %r10, %r10
 15058      160000
5025:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 <<= CONST_BITS;
 15059              		.loc 1 5025 0 discriminator 3
 15060 0170 4883C010 		addq	$16, %rax
 15061              	.LVL2295:
5035:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15062              		.loc 1 5035 0 discriminator 3
 15063 0174 4869DB31 		imulq	$10033, %rbx, %rbx
 15063      270000
5026:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = (INT32) wsptr[2];
 15064              		.loc 1 5026 0 discriminator 3
 15065 017b 48C1E00D 		salq	$13, %rax
 15066              	.LVL2296:
5029:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = tmp0 - tmp12 - tmp12;
 15067              		.loc 1 5029 0 discriminator 3
 15068 017f 4A8D1410 		leaq	(%rax,%r10), %rdx
 15069              	.LVL2297:
5045:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15070              		.loc 1 5045 0 discriminator 3
 15071 0183 4C29D0   		subq	%r10, %rax
 15072              	.LVL2298:
 15073 0186 4C29D0   		subq	%r10, %rax
5039:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15074              		.loc 1 5039 0 discriminator 3
 15075 0189 4C8D1C1A 		leaq	(%rdx,%rbx), %r11
5042:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15076              		.loc 1 5042 0 discriminator 3
 15077 018d 4829DA   		subq	%rbx, %rdx
 15078              	.LVL2299:
5045:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15079              		.loc 1 5045 0 discriminator 3
 15080 0190 48C1F812 		sarq	$18, %rax
5042:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15081              		.loc 1 5042 0 discriminator 3
 15082 0194 48C1FA12 		sarq	$18, %rdx
5045:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15083              		.loc 1 5045 0 discriminator 3
 15084 0198 25FF0300 		andl	$1023, %eax
 15084      00
5039:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15085              		.loc 1 5039 0 discriminator 3
 15086 019d 49C1FB12 		sarq	$18, %r11
5042:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15087              		.loc 1 5042 0 discriminator 3
 15088 01a1 81E2FF03 		andl	$1023, %edx
 15088      0000
5039:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15089              		.loc 1 5039 0 discriminator 3
 15090 01a7 4181E3FF 		andl	$1023, %r11d
 15090      030000
5019:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 15091              		.loc 1 5019 0 discriminator 3
 15092 01ae 4C39CE   		cmpq	%r9, %rsi
5039:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15093              		.loc 1 5039 0 discriminator 3
 15094 01b1 470FB61C 		movzbl	(%r12,%r11), %r11d
 15094      1C
 15095 01b6 44881F   		movb	%r11b, (%rdi)
5042:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15096              		.loc 1 5042 0 discriminator 3
 15097 01b9 410FB614 		movzbl	(%r12,%rdx), %edx
 15097      14
 15098 01be 885702   		movb	%dl, 2(%rdi)
5045:fltk-1.3.4-1/jpeg/jidctint.c **** 					      CONST_BITS+PASS1_BITS+3)
 15099              		.loc 1 5045 0 discriminator 3
 15100 01c1 410FB604 		movzbl	(%r12,%rax), %eax
 15100      04
 15101 01c6 884701   		movb	%al, 1(%rdi)
5019:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 15102              		.loc 1 5019 0 discriminator 3
 15103 01c9 7585     		jne	.L265
5050:fltk-1.3.4-1/jpeg/jidctint.c ****   }
5051:fltk-1.3.4-1/jpeg/jidctint.c **** }
 15104              		.loc 1 5051 0
 15105 01cb 488B4424 		movq	88(%rsp), %rax
 15105      58
 15106 01d0 64483304 		xorq	%fs:40, %rax
 15106      25280000 
 15106      00
 15107 01d9 750F     		jne	.L270
 15108 01db 4883C468 		addq	$104, %rsp
 15109              		.cfi_remember_state
 15110              		.cfi_def_cfa_offset 56
 15111              	.LVL2300:
 15112 01df 5B       		popq	%rbx
 15113              		.cfi_def_cfa_offset 48
 15114              	.LVL2301:
 15115 01e0 5D       		popq	%rbp
 15116              		.cfi_def_cfa_offset 40
 15117 01e1 415C     		popq	%r12
 15118              		.cfi_def_cfa_offset 32
 15119              	.LVL2302:
 15120 01e3 415D     		popq	%r13
 15121              		.cfi_def_cfa_offset 24
 15122 01e5 415E     		popq	%r14
 15123              		.cfi_def_cfa_offset 16
 15124 01e7 415F     		popq	%r15
 15125              		.cfi_def_cfa_offset 8
 15126 01e9 C3       		ret
 15127              	.LVL2303:
 15128              	.L270:
 15129              		.cfi_restore_state
 15130 01ea E8000000 		call	__stack_chk_fail
 15130      00
 15131              	.LVL2304:
 15132              		.cfi_endproc
 15133              	.LFE90:
 15135              		.section	.text.unlikely.jpeg_idct_3x6
 15136              	.LCOLDE29:
 15137              		.section	.text.jpeg_idct_3x6
 15138              	.LHOTE29:
 15139              		.section	.text.unlikely.jpeg_idct_2x4,"ax",@progbits
 15140              	.LCOLDB30:
 15141              		.section	.text.jpeg_idct_2x4,"ax",@progbits
 15142              	.LHOTB30:
 15143              		.p2align 4,,15
 15144              		.globl	jpeg_idct_2x4
 15146              	jpeg_idct_2x4:
 15147              	.LFB91:
5052:fltk-1.3.4-1/jpeg/jidctint.c **** 
5053:fltk-1.3.4-1/jpeg/jidctint.c **** 
5054:fltk-1.3.4-1/jpeg/jidctint.c **** /*
5055:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
5056:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 2x4 output block.
5057:fltk-1.3.4-1/jpeg/jidctint.c ****  *
5058:fltk-1.3.4-1/jpeg/jidctint.c ****  * 4-point IDCT in pass 1 (columns), 2-point in pass 2 (rows).
5059:fltk-1.3.4-1/jpeg/jidctint.c ****  */
5060:fltk-1.3.4-1/jpeg/jidctint.c **** 
5061:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
5062:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_2x4 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
5063:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
5064:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
5065:fltk-1.3.4-1/jpeg/jidctint.c **** {
 15148              		.loc 1 5065 0
 15149              		.cfi_startproc
 15150              	.LVL2305:
 15151 0000 4154     		pushq	%r12
 15152              		.cfi_def_cfa_offset 16
 15153              		.cfi_offset 12, -16
 15154 0002 55       		pushq	%rbp
 15155              		.cfi_def_cfa_offset 24
 15156              		.cfi_offset 6, -24
 15157 0003 53       		pushq	%rbx
 15158              		.cfi_def_cfa_offset 32
 15159              		.cfi_offset 3, -32
 15160 0004 4883EC60 		subq	$96, %rsp
 15161              		.cfi_def_cfa_offset 128
5066:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
5067:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 z1, z2, z3;
5068:fltk-1.3.4-1/jpeg/jidctint.c ****   JCOEFPTR inptr;
5069:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
5070:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 * wsptr;
5071:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPROW outptr;
5072:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
 15162              		.loc 1 5072 0
 15163 0008 488BBFB8 		movq	440(%rdi), %rdi
 15163      010000
 15164              	.LVL2306:
5073:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
5074:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 workspace[2*4];	/* buffers data between passes */
5075:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
5076:fltk-1.3.4-1/jpeg/jidctint.c **** 
5077:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 1: process columns from input, store into work array.
5078:fltk-1.3.4-1/jpeg/jidctint.c ****    * 4-point IDCT kernel,
5079:fltk-1.3.4-1/jpeg/jidctint.c ****    * cK represents sqrt(2) * cos(K*pi/16) [refers to 8-point IDCT].
5080:fltk-1.3.4-1/jpeg/jidctint.c ****    */
5081:fltk-1.3.4-1/jpeg/jidctint.c **** 
5082:fltk-1.3.4-1/jpeg/jidctint.c ****   inptr = coef_block;
5083:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 15165              		.loc 1 5083 0
 15166 000f 488B5E58 		movq	88(%rsi), %rbx
5065:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp2, tmp10, tmp12;
 15167              		.loc 1 5065 0
 15168 0013 64488B04 		movq	%fs:40, %rax
 15168      25280000 
 15168      00
 15169 001c 48894424 		movq	%rax, 88(%rsp)
 15169      58
 15170 0021 31C0     		xorl	%eax, %eax
5084:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
 15171              		.loc 1 5084 0
 15172 0023 4C8D5424 		leaq	16(%rsp), %r10
 15172      10
5085:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 2; ctr++, inptr++, quantptr++, wsptr++) {
 15173              		.loc 1 5085 0
 15174 0028 488D6C24 		leaq	32(%rsp), %rbp
 15174      20
5072:fltk-1.3.4-1/jpeg/jidctint.c ****   int ctr;
 15175              		.loc 1 5072 0
 15176 002d 4883EF80 		subq	$-128, %rdi
 15177              	.LVL2307:
 15178              	.L272:
5086:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
5087:fltk-1.3.4-1/jpeg/jidctint.c **** 
5088:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = DEQUANTIZE(inptr[DCTSIZE*0], quantptr[DCTSIZE*0]);
 15179              		.loc 1 5088 0 discriminator 3
 15180 0031 0FBF02   		movswl	(%rdx), %eax
5089:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 15181              		.loc 1 5089 0 discriminator 3
 15182 0034 0FBF7220 		movswl	32(%rdx), %esi
5085:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 15183              		.loc 1 5085 0 discriminator 3
 15184 0038 4983C208 		addq	$8, %r10
 15185              	.LVL2308:
5088:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 15186              		.loc 1 5088 0 discriminator 3
 15187 003c 0FAF03   		imull	(%rbx), %eax
 15188              		.loc 1 5089 0 discriminator 3
 15189 003f 0FAF7340 		imull	64(%rbx), %esi
5090:fltk-1.3.4-1/jpeg/jidctint.c **** 
5091:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = (tmp0 + tmp2) << CONST_BITS;
5092:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
5093:fltk-1.3.4-1/jpeg/jidctint.c **** 
5094:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
5095:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Same rotation as in the even part of the 8x8 LL&M IDCT */
5096:fltk-1.3.4-1/jpeg/jidctint.c **** 
5097:fltk-1.3.4-1/jpeg/jidctint.c ****     z2 = DEQUANTIZE(inptr[DCTSIZE*1], quantptr[DCTSIZE*1]);
5098:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 15190              		.loc 1 5098 0 discriminator 3
 15191 0043 440FBF4A 		movswl	48(%rdx), %r9d
 15191      30
5085:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 15192              		.loc 1 5085 0 discriminator 3
 15193 0048 4883C304 		addq	$4, %rbx
 15194              	.LVL2309:
 15195 004c 4883C202 		addq	$2, %rdx
 15196              	.LVL2310:
 15197              		.loc 1 5098 0 discriminator 3
 15198 0050 440FAF4B 		imull	92(%rbx), %r9d
 15198      5C
5088:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = DEQUANTIZE(inptr[DCTSIZE*2], quantptr[DCTSIZE*2]);
 15199              		.loc 1 5088 0 discriminator 3
 15200 0055 4898     		cltq
 15201              	.LVL2311:
5089:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15202              		.loc 1 5089 0 discriminator 3
 15203 0057 4863F6   		movslq	%esi, %rsi
 15204              	.LVL2312:
5091:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 15205              		.loc 1 5091 0 discriminator 3
 15206 005a 4C8D1C30 		leaq	(%rax,%rsi), %r11
5092:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15207              		.loc 1 5092 0 discriminator 3
 15208 005e 4829F0   		subq	%rsi, %rax
 15209              	.LVL2313:
5097:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 15210              		.loc 1 5097 0 discriminator 3
 15211 0061 0FBF720E 		movswl	14(%rdx), %esi
 15212              	.LVL2314:
 15213 0065 0FAF731C 		imull	28(%rbx), %esi
 15214              		.loc 1 5098 0 discriminator 3
 15215 0069 4D63C9   		movslq	%r9d, %r9
5091:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp12 = (tmp0 - tmp2) << CONST_BITS;
 15216              		.loc 1 5091 0 discriminator 3
 15217 006c 49C1E30D 		salq	$13, %r11
 15218              	.LVL2315:
5092:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15219              		.loc 1 5092 0 discriminator 3
 15220 0070 48C1E00D 		salq	$13, %rax
 15221              	.LVL2316:
5097:fltk-1.3.4-1/jpeg/jidctint.c ****     z3 = DEQUANTIZE(inptr[DCTSIZE*3], quantptr[DCTSIZE*3]);
 15222              		.loc 1 5097 0 discriminator 3
 15223 0074 4863F6   		movslq	%esi, %rsi
 15224              	.LVL2317:
5099:fltk-1.3.4-1/jpeg/jidctint.c **** 
5100:fltk-1.3.4-1/jpeg/jidctint.c ****     z1 = MULTIPLY(z2 + z3, FIX_0_541196100);   /* c6 */
 15225              		.loc 1 5100 0 discriminator 3
 15226 0077 4E8D240E 		leaq	(%rsi,%r9), %r12
5101:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 15227              		.loc 1 5101 0 discriminator 3
 15228 007b 4869F67E 		imulq	$6270, %rsi, %rsi
 15228      180000
 15229              	.LVL2318:
5100:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 15230              		.loc 1 5100 0 discriminator 3
 15231 0082 4D69E451 		imulq	$4433, %r12, %r12
 15231      110000
 15232              	.LVL2319:
5102:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp2 = z1 - MULTIPLY(z3, FIX_1_847759065); /* c2+c6 */
 15233              		.loc 1 5102 0 discriminator 3
 15234 0089 4D69C9DF 		imulq	$-15137, %r9, %r9
 15234      C4FFFF
 15235              	.LVL2320:
5101:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = z1 + MULTIPLY(z2, FIX_0_765366865); /* c2-c6 */
 15236              		.loc 1 5101 0 discriminator 3
 15237 0090 4C01E6   		addq	%r12, %rsi
 15238              	.LVL2321:
 15239              		.loc 1 5102 0 discriminator 3
 15240 0093 4D01E1   		addq	%r12, %r9
 15241              	.LVL2322:
5103:fltk-1.3.4-1/jpeg/jidctint.c **** 
5104:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
5105:fltk-1.3.4-1/jpeg/jidctint.c **** 
5106:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[2*0] = tmp10 + tmp0;
 15242              		.loc 1 5106 0 discriminator 3
 15243 0096 4D8D2433 		leaq	(%r11,%rsi), %r12
 15244              	.LVL2323:
5107:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[2*3] = tmp10 - tmp0;
 15245              		.loc 1 5107 0 discriminator 3
 15246 009a 4929F3   		subq	%rsi, %r11
 15247              	.LVL2324:
5108:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[2*1] = tmp12 + tmp2;
 15248              		.loc 1 5108 0 discriminator 3
 15249 009d 4A8D3408 		leaq	(%rax,%r9), %rsi
 15250              	.LVL2325:
5109:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[2*2] = tmp12 - tmp2;
 15251              		.loc 1 5109 0 discriminator 3
 15252 00a1 4C29C8   		subq	%r9, %rax
 15253              	.LVL2326:
5107:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[2*3] = tmp10 - tmp0;
 15254              		.loc 1 5107 0 discriminator 3
 15255 00a4 4D895A28 		movq	%r11, 40(%r10)
5106:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[2*3] = tmp10 - tmp0;
 15256              		.loc 1 5106 0 discriminator 3
 15257 00a8 4D8962F8 		movq	%r12, -8(%r10)
 15258              		.loc 1 5109 0 discriminator 3
 15259 00ac 49894218 		movq	%rax, 24(%r10)
 15260              	.LVL2327:
5108:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr[2*1] = tmp12 + tmp2;
 15261              		.loc 1 5108 0 discriminator 3
 15262 00b0 49897208 		movq	%rsi, 8(%r10)
 15263              	.LVL2328:
5085:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 15264              		.loc 1 5085 0 discriminator 3
 15265 00b4 4939EA   		cmpq	%rbp, %r10
 15266 00b7 0F8574FF 		jne	.L272
 15266      FFFF
 15267 00bd 4589C0   		movl	%r8d, %r8d
5085:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
 15268              		.loc 1 5085 0 is_stmt 0
 15269 00c0 31D2     		xorl	%edx, %edx
 15270              	.LVL2329:
 15271              	.L273:
5110:fltk-1.3.4-1/jpeg/jidctint.c ****   }
5111:fltk-1.3.4-1/jpeg/jidctint.c **** 
5112:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Pass 2: process 4 rows from work array, store into output array. */
5113:fltk-1.3.4-1/jpeg/jidctint.c **** 
5114:fltk-1.3.4-1/jpeg/jidctint.c ****   wsptr = workspace;
5115:fltk-1.3.4-1/jpeg/jidctint.c ****   for (ctr = 0; ctr < 4; ctr++) {
5116:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
5117:fltk-1.3.4-1/jpeg/jidctint.c **** 
5118:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Even part */
5119:fltk-1.3.4-1/jpeg/jidctint.c **** 
5120:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Add fudge factor here for final descale. */
5121:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp10 = wsptr[0] + (ONE << (CONST_BITS+2));
 15272              		.loc 1 5121 0 is_stmt 1 discriminator 3
 15273 00c2 488B4454 		movq	16(%rsp,%rdx,2), %rax
 15273      10
5122:fltk-1.3.4-1/jpeg/jidctint.c **** 
5123:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Odd part */
5124:fltk-1.3.4-1/jpeg/jidctint.c **** 
5125:fltk-1.3.4-1/jpeg/jidctint.c ****     tmp0 = wsptr[1];
 15274              		.loc 1 5125 0 discriminator 3
 15275 00c7 4C8B5454 		movq	24(%rsp,%rdx,2), %r10
 15275      18
5116:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15276              		.loc 1 5116 0 discriminator 3
 15277 00cc 4D89C1   		movq	%r8, %r9
 15278 00cf 4C030C11 		addq	(%rcx,%rdx), %r9
 15279              	.LVL2330:
 15280 00d3 4883C208 		addq	$8, %rdx
 15281              	.LVL2331:
5121:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15282              		.loc 1 5121 0 discriminator 3
 15283 00d7 48894424 		movq	%rax, 8(%rsp)
 15283      08
 15284 00dc 48050080 		addq	$32768, %rax
 15284      0000
 15285              	.LVL2332:
5126:fltk-1.3.4-1/jpeg/jidctint.c **** 
5127:fltk-1.3.4-1/jpeg/jidctint.c ****     /* Final output stage */
5128:fltk-1.3.4-1/jpeg/jidctint.c **** 
5129:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[0] = range_limit[(int) RIGHT_SHIFT(tmp10 + tmp0, CONST_BITS+3)
 15286              		.loc 1 5129 0 discriminator 3
 15287 00e2 4A8D3410 		leaq	(%rax,%r10), %rsi
5130:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
5131:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr[1] = range_limit[(int) RIGHT_SHIFT(tmp10 - tmp0, CONST_BITS+3)
 15288              		.loc 1 5131 0 discriminator 3
 15289 00e6 4C29D0   		subq	%r10, %rax
 15290              	.LVL2333:
 15291 00e9 48C1F810 		sarq	$16, %rax
5129:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 15292              		.loc 1 5129 0 discriminator 3
 15293 00ed 48C1FE10 		sarq	$16, %rsi
 15294              		.loc 1 5131 0 discriminator 3
 15295 00f1 25FF0300 		andl	$1023, %eax
 15295      00
5129:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 15296              		.loc 1 5129 0 discriminator 3
 15297 00f6 81E6FF03 		andl	$1023, %esi
 15297      0000
5115:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 15298              		.loc 1 5115 0 discriminator 3
 15299 00fc 4883FA20 		cmpq	$32, %rdx
5129:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
 15300              		.loc 1 5129 0 discriminator 3
 15301 0100 0FB63437 		movzbl	(%rdi,%rsi), %esi
 15302 0104 418831   		movb	%sil, (%r9)
 15303              		.loc 1 5131 0 discriminator 3
 15304 0107 0FB60407 		movzbl	(%rdi,%rax), %eax
 15305 010b 41884101 		movb	%al, 1(%r9)
 15306              	.LVL2334:
5115:fltk-1.3.4-1/jpeg/jidctint.c ****     outptr = output_buf[ctr] + output_col;
 15307              		.loc 1 5115 0 discriminator 3
 15308 010f 75B1     		jne	.L273
5132:fltk-1.3.4-1/jpeg/jidctint.c **** 			    & RANGE_MASK];
5133:fltk-1.3.4-1/jpeg/jidctint.c **** 
5134:fltk-1.3.4-1/jpeg/jidctint.c ****     wsptr += 2;		/* advance pointer to next row */
5135:fltk-1.3.4-1/jpeg/jidctint.c ****   }
5136:fltk-1.3.4-1/jpeg/jidctint.c **** }
 15309              		.loc 1 5136 0
 15310 0111 488B4424 		movq	88(%rsp), %rax
 15310      58
 15311 0116 64483304 		xorq	%fs:40, %rax
 15311      25280000 
 15311      00
 15312 011f 7509     		jne	.L278
 15313 0121 4883C460 		addq	$96, %rsp
 15314              		.cfi_remember_state
 15315              		.cfi_def_cfa_offset 32
 15316 0125 5B       		popq	%rbx
 15317              		.cfi_def_cfa_offset 24
 15318              	.LVL2335:
 15319 0126 5D       		popq	%rbp
 15320              		.cfi_def_cfa_offset 16
 15321 0127 415C     		popq	%r12
 15322              		.cfi_def_cfa_offset 8
 15323 0129 C3       		ret
 15324              	.LVL2336:
 15325              	.L278:
 15326              		.cfi_restore_state
 15327 012a E8000000 		call	__stack_chk_fail
 15327      00
 15328              	.LVL2337:
 15329              		.cfi_endproc
 15330              	.LFE91:
 15332              		.section	.text.unlikely.jpeg_idct_2x4
 15333              	.LCOLDE30:
 15334              		.section	.text.jpeg_idct_2x4
 15335              	.LHOTE30:
 15336              		.section	.text.unlikely.jpeg_idct_1x2,"ax",@progbits
 15337              	.LCOLDB31:
 15338              		.section	.text.jpeg_idct_1x2,"ax",@progbits
 15339              	.LHOTB31:
 15340              		.p2align 4,,15
 15341              		.globl	jpeg_idct_1x2
 15343              	jpeg_idct_1x2:
 15344              	.LFB92:
5137:fltk-1.3.4-1/jpeg/jidctint.c **** 
5138:fltk-1.3.4-1/jpeg/jidctint.c **** 
5139:fltk-1.3.4-1/jpeg/jidctint.c **** /*
5140:fltk-1.3.4-1/jpeg/jidctint.c ****  * Perform dequantization and inverse DCT on one block of coefficients,
5141:fltk-1.3.4-1/jpeg/jidctint.c ****  * producing a 1x2 output block.
5142:fltk-1.3.4-1/jpeg/jidctint.c ****  *
5143:fltk-1.3.4-1/jpeg/jidctint.c ****  * 2-point IDCT in pass 1 (columns), 1-point in pass 2 (rows).
5144:fltk-1.3.4-1/jpeg/jidctint.c ****  */
5145:fltk-1.3.4-1/jpeg/jidctint.c **** 
5146:fltk-1.3.4-1/jpeg/jidctint.c **** GLOBAL(void)
5147:fltk-1.3.4-1/jpeg/jidctint.c **** jpeg_idct_1x2 (j_decompress_ptr cinfo, jpeg_component_info * compptr,
5148:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JCOEFPTR coef_block,
5149:fltk-1.3.4-1/jpeg/jidctint.c **** 	       JSAMPARRAY output_buf, JDIMENSION output_col)
5150:fltk-1.3.4-1/jpeg/jidctint.c **** {
 15345              		.loc 1 5150 0
 15346              		.cfi_startproc
 15347              	.LVL2338:
5151:fltk-1.3.4-1/jpeg/jidctint.c ****   INT32 tmp0, tmp1;
5152:fltk-1.3.4-1/jpeg/jidctint.c ****   ISLOW_MULT_TYPE * quantptr;
5153:fltk-1.3.4-1/jpeg/jidctint.c ****   JSAMPLE *range_limit = IDCT_range_limit(cinfo);
5154:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
5155:fltk-1.3.4-1/jpeg/jidctint.c **** 
5156:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Process 1 column from input, store into output array. */
5157:fltk-1.3.4-1/jpeg/jidctint.c **** 
5158:fltk-1.3.4-1/jpeg/jidctint.c ****   quantptr = (ISLOW_MULT_TYPE *) compptr->dct_table;
 15348              		.loc 1 5158 0
 15349 0000 488B7658 		movq	88(%rsi), %rsi
 15350              	.LVL2339:
5159:fltk-1.3.4-1/jpeg/jidctint.c **** 
5160:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Even part */
5161:fltk-1.3.4-1/jpeg/jidctint.c ****     
5162:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp0 = DEQUANTIZE(coef_block[DCTSIZE*0], quantptr[DCTSIZE*0]);
 15351              		.loc 1 5162 0
 15352 0004 0FBF02   		movswl	(%rdx), %eax
5163:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
5164:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp0 += ONE << 2;
5165:fltk-1.3.4-1/jpeg/jidctint.c **** 
5166:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Odd part */
5167:fltk-1.3.4-1/jpeg/jidctint.c **** 
5168:fltk-1.3.4-1/jpeg/jidctint.c ****   tmp1 = DEQUANTIZE(coef_block[DCTSIZE*1], quantptr[DCTSIZE*1]);
5169:fltk-1.3.4-1/jpeg/jidctint.c **** 
5170:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Final output stage */
5171:fltk-1.3.4-1/jpeg/jidctint.c **** 
5172:fltk-1.3.4-1/jpeg/jidctint.c ****   output_buf[0][output_col] = range_limit[(int) RIGHT_SHIFT(tmp0 + tmp1, 3)
 15353              		.loc 1 5172 0
 15354 0007 4589C0   		movl	%r8d, %r8d
5168:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15355              		.loc 1 5168 0
 15356 000a 0FBF5210 		movswl	16(%rdx), %edx
 15357              	.LVL2340:
5153:fltk-1.3.4-1/jpeg/jidctint.c ****   SHIFT_TEMPS
 15358              		.loc 1 5153 0
 15359 000e 488BBFB8 		movq	440(%rdi), %rdi
 15359      010000
 15360              	.LVL2341:
5162:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
 15361              		.loc 1 5162 0
 15362 0015 0FAF06   		imull	(%rsi), %eax
5168:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15363              		.loc 1 5168 0
 15364 0018 0FAF5620 		imull	32(%rsi), %edx
5162:fltk-1.3.4-1/jpeg/jidctint.c ****   /* Add fudge factor here for final descale. */
 15365              		.loc 1 5162 0
 15366 001c 4898     		cltq
 15367              	.LVL2342:
5168:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15368              		.loc 1 5168 0
 15369 001e 4863D2   		movslq	%edx, %rdx
5164:fltk-1.3.4-1/jpeg/jidctint.c **** 
 15370              		.loc 1 5164 0
 15371 0021 4883C004 		addq	$4, %rax
 15372              	.LVL2343:
 15373              		.loc 1 5172 0
 15374 0025 488D3410 		leaq	(%rax,%rdx), %rsi
 15375              	.LVL2344:
5173:fltk-1.3.4-1/jpeg/jidctint.c **** 					  & RANGE_MASK];
5174:fltk-1.3.4-1/jpeg/jidctint.c ****   output_buf[1][output_col] = range_limit[(int) RIGHT_SHIFT(tmp0 - tmp1, 3)
 15376              		.loc 1 5174 0
 15377 0029 4829D0   		subq	%rdx, %rax
 15378              	.LVL2345:
 15379 002c 48C1F803 		sarq	$3, %rax
5172:fltk-1.3.4-1/jpeg/jidctint.c **** 					  & RANGE_MASK];
 15380              		.loc 1 5172 0
 15381 0030 48C1FE03 		sarq	$3, %rsi
 15382              		.loc 1 5174 0
 15383 0034 25FF0300 		andl	$1023, %eax
 15383      00
5172:fltk-1.3.4-1/jpeg/jidctint.c **** 					  & RANGE_MASK];
 15384              		.loc 1 5172 0
 15385 0039 81E6FF03 		andl	$1023, %esi
 15385      0000
 15386 003f 440FB68C 		movzbl	128(%rdi,%rsi), %r9d
 15386      37800000 
 15386      00
 15387 0048 488B31   		movq	(%rcx), %rsi
 15388 004b 46880C06 		movb	%r9b, (%rsi,%r8)
 15389              	.LVL2346:
 15390              		.loc 1 5174 0
 15391 004f 0FB69407 		movzbl	128(%rdi,%rax), %edx
 15391      80000000 
 15392              	.LVL2347:
 15393 0057 488B4108 		movq	8(%rcx), %rax
 15394 005b 42881400 		movb	%dl, (%rax,%r8)
 15395 005f C3       		ret
 15396              		.cfi_endproc
 15397              	.LFE92:
 15399              		.section	.text.unlikely.jpeg_idct_1x2
 15400              	.LCOLDE31:
 15401              		.section	.text.jpeg_idct_1x2
 15402              	.LHOTE31:
 15403              		.text
 15404              	.Letext0:
 15405              		.section	.text.unlikely.jpeg_idct_islow
 15406              	.Letext_cold0:
 15407              		.file 2 "/usr/lib/gcc/x86_64-linux-gnu/5/include/stddef.h"
 15408              		.file 3 "/usr/include/x86_64-linux-gnu/bits/types.h"
 15409              		.file 4 "/usr/include/libio.h"
 15410              		.file 5 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 15411              		.file 6 "fltk-1.3.4-1/jpeg/jpeglib.h"
 15412              		.file 7 "fltk-1.3.4-1/jpeg/jpegint.h"
 15413              		.file 8 "fltk-1.3.4-1/jpeg/jdct.h"
 15414              		.file 9 "/usr/include/stdio.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jidctint.c
     /tmp/ccK6rken.s:14     .text.jpeg_idct_islow:0000000000000000 jpeg_idct_islow
     /tmp/ccK6rken.s:753    .text.jpeg_idct_7x7:0000000000000000 jpeg_idct_7x7
     /tmp/ccK6rken.s:1247   .text.jpeg_idct_6x6:0000000000000000 jpeg_idct_6x6
     /tmp/ccK6rken.s:1613   .text.jpeg_idct_5x5:0000000000000000 jpeg_idct_5x5
     /tmp/ccK6rken.s:1928   .text.jpeg_idct_4x4:0000000000000000 jpeg_idct_4x4
     /tmp/ccK6rken.s:2188   .text.jpeg_idct_3x3:0000000000000000 jpeg_idct_3x3
     /tmp/ccK6rken.s:2387   .text.jpeg_idct_2x2:0000000000000000 jpeg_idct_2x2
     /tmp/ccK6rken.s:2508   .text.jpeg_idct_1x1:0000000000000000 jpeg_idct_1x1
     /tmp/ccK6rken.s:2552   .text.jpeg_idct_9x9:0000000000000000 jpeg_idct_9x9
     /tmp/ccK6rken.s:3107   .text.jpeg_idct_10x10:0000000000000000 jpeg_idct_10x10
     /tmp/ccK6rken.s:3730   .text.jpeg_idct_11x11:0000000000000000 jpeg_idct_11x11
     /tmp/ccK6rken.s:4428   .text.jpeg_idct_12x12:0000000000000000 jpeg_idct_12x12
     /tmp/ccK6rken.s:5129   .text.jpeg_idct_13x13:0000000000000000 jpeg_idct_13x13
     /tmp/ccK6rken.s:5940   .text.jpeg_idct_14x14:0000000000000000 jpeg_idct_14x14
     /tmp/ccK6rken.s:6739   .text.jpeg_idct_15x15:0000000000000000 jpeg_idct_15x15
     /tmp/ccK6rken.s:7597   .text.jpeg_idct_16x16:0000000000000000 jpeg_idct_16x16
     /tmp/ccK6rken.s:8553   .text.jpeg_idct_16x8:0000000000000000 jpeg_idct_16x8
     /tmp/ccK6rken.s:9403   .text.jpeg_idct_14x7:0000000000000000 jpeg_idct_14x7
     /tmp/ccK6rken.s:10048  .text.jpeg_idct_12x6:0000000000000000 jpeg_idct_12x6
     /tmp/ccK6rken.s:10579  .text.jpeg_idct_10x5:0000000000000000 jpeg_idct_10x5
     /tmp/ccK6rken.s:11051  .text.jpeg_idct_8x4:0000000000000000 jpeg_idct_8x4
     /tmp/ccK6rken.s:11444  .text.jpeg_idct_6x3:0000000000000000 jpeg_idct_6x3
     /tmp/ccK6rken.s:11733  .text.jpeg_idct_4x2:0000000000000000 jpeg_idct_4x2
     /tmp/ccK6rken.s:11913  .text.jpeg_idct_2x1:0000000000000000 jpeg_idct_2x1
     /tmp/ccK6rken.s:11981  .text.jpeg_idct_8x16:0000000000000000 jpeg_idct_8x16
     /tmp/ccK6rken.s:12715  .text.jpeg_idct_7x14:0000000000000000 jpeg_idct_7x14
     /tmp/ccK6rken.s:13360  .text.jpeg_idct_6x12:0000000000000000 jpeg_idct_6x12
     /tmp/ccK6rken.s:13893  .text.jpeg_idct_5x10:0000000000000000 jpeg_idct_5x10
     /tmp/ccK6rken.s:14359  .text.jpeg_idct_4x8:0000000000000000 jpeg_idct_4x8
     /tmp/ccK6rken.s:14853  .text.jpeg_idct_3x6:0000000000000000 jpeg_idct_3x6
     /tmp/ccK6rken.s:15146  .text.jpeg_idct_2x4:0000000000000000 jpeg_idct_2x4
     /tmp/ccK6rken.s:15343  .text.jpeg_idct_1x2:0000000000000000 jpeg_idct_1x2
                           .group:0000000000000000 wm4.0.cf9695abff4f49bdfe00dc4091904acd
                           .group:0000000000000000 wm4.stdcpredef.h.19.bf2bf6c5fb087dfb5ef2d2297c2795de
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.24da27e0a4d0d521fd057013d982b8b5
                           .group:0000000000000000 wm4.cdefs.h.19.56613e71f285ebad825b69b151170a81
                           .group:0000000000000000 wm4.wordsize.h.4.256e8fdbd37801980286acdbc40d0280
                           .group:0000000000000000 wm4.cdefs.h.432.619afd0aac7c4b439843706c1b28ddea
                           .group:0000000000000000 wm4.stubs64.h.10.918ceb5fa58268542bf143e4c1efbcf3
                           .group:0000000000000000 wm4.stdlib.h.27.59e2586c75bdbcb991b248ad7257b993
                           .group:0000000000000000 wm4.stddef.h.187.e1c83cba2098ce92b68f6311de19e6b1
                           .group:0000000000000000 wm4.waitflags.h.25.e401b8bcfee800b540b27abd7cc78de9
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.endian.h.19.ff00c9c0f5e9f9a9719c5de76ace57b4
                           .group:0000000000000000 wm4.endian.h.41.24cced64aef71195a51d4daa8e4f4a95
                           .group:0000000000000000 wm4.types.h.89.468e2451361e3b92f048f6cad51690ff
                           .group:0000000000000000 wm4.typesizes.h.24.40eb69a6270178f15d1bf3d7b6635a8b
                           .group:0000000000000000 wm4.byteswap.h.38.11ee5fdc0f6cc53a16c505b9233cecef
                           .group:0000000000000000 wm4.endian.h.63.97272d7c64d5db8020003b32e9289502
                           .group:0000000000000000 wm4.waitstatus.h.99.408b6270fa6eb71377201a241ef15f79
                           .group:0000000000000000 wm4.stdlib.h.50.84aeca2ac6f37d40e1e9b3cef757ba2d
                           .group:0000000000000000 wm4.types.h.23.f6dcbaa72f8f71361acef09804d45a5e
                           .group:0000000000000000 wm4.time.h.53.beb46e650cd406cb917b6b96b45e640a
                           .group:0000000000000000 wm4.stddef.h.238.847b6907dabda77be90a9ab7ad789e2e
                           .group:0000000000000000 wm4.types.h.187.bd5a05039b505b3620e6973f1b2ffeb1
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.sigset.h.20.f36413b6d2364ad847d3db53fb03e683
                           .group:0000000000000000 wm4.select.h.36.f76c3b9e55c871743863013cc4cc14c9
                           .group:0000000000000000 wm4.time.h.66.e70ce69790c975f0efb369340c432e0b
                           .group:0000000000000000 wm4.time.h.25.ae5284cdff565e87a9198d819340325d
                           .group:0000000000000000 wm4.select.h.49.e9d2041e5035cc68ebd1a20f7dbc8514
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.sysmacros.h.20.8a0c33ff175cd9b434a86c0aaa36f0a2
                           .group:0000000000000000 wm4.types.h.229.67b3f66bd74b06b451caec392a72a945
                           .group:0000000000000000 wm4.pthreadtypes.h.25.6892b1493314fcf446bbc76e7362acba
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.26.4719156f1aea2bb9662fd6c582dc9a4c
                           .group:0000000000000000 wm4.stddef.h.238.04cc7214bceba497b20d15c10fd97511
                           .group:0000000000000000 wm4.stdio.h.36.2dd12c1fd035242ad5cfd0152a01be5a
                           .group:0000000000000000 wm4._G_config.h.5.b0f37d9e474454cf6e459063458db32f
                           .group:0000000000000000 wm4.wchar.h.80.eea3eba2d2a17aace9470a8e0d8218dc
                           .group:0000000000000000 wm4._G_config.h.46.5187c97b14fd664662cb32e6b94fc49e
                           .group:0000000000000000 wm4.libio.h.33.a775b9ecae273f33bc59931e9891e4ca
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.libio.h.51.dab170798ec1df48c625aea7c30e1b63
                           .group:0000000000000000 wm4.stdio.h.80.17b7dd1ca72d8a61987532cb1d80194a
                           .group:0000000000000000 wm4.stdio_lim.h.23.557290a6cddeba0587f574f29e3a5fb9
                           .group:0000000000000000 wm4.stdio.h.172.df21df34a7396d7da2e08f9b617d582f
                           .group:0000000000000000 wm4.stdio.h.26.cae64f7ada9bb8327a89dba6a5e93655
                           .group:0000000000000000 wm4.string.h.23.8394011d5995a16f15d67d04e84a1d69
                           .group:0000000000000000 wm4.string.h.24.1b0dc67418e7128d207285861439c2f8
                           .group:0000000000000000 wm4.string2.h.45.00535b99420fc3014c2da41d6645330d
                           .group:0000000000000000 wm4.string3.h.31.0c4b9301b754a2db05eaafef869657d2
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2
                           .group:0000000000000000 wm4.jdct.h.68.77a1fce97df2af4ec80ad9c80171cb02

UNDEFINED SYMBOLS
__stack_chk_fail
