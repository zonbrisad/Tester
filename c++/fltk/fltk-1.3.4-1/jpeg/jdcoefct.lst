   1              		.file	"jdcoefct.c"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.start_input_pass,"ax",@progbits
   5              		.p2align 4
   7              	start_input_pass:
   8              	.LVL0:
   9              	.LFB52:
  10              		.file 1 "fltk-1.3.4-1/jpeg/jdcoefct.c"
   1:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
   2:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * jdcoefct.c
   3:fltk-1.3.4-1/jpeg/jdcoefct.c ****  *
   4:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Copyright (C) 1994-1997, Thomas G. Lane.
   5:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Modified 2002-2011 by Guido Vollbeding.
   6:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * This file is part of the Independent JPEG Group's software.
   7:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * For conditions of distribution and use, see the accompanying README file.
   8:fltk-1.3.4-1/jpeg/jdcoefct.c ****  *
   9:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * This file contains the coefficient buffer controller for decompression.
  10:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * This controller is the top level of the JPEG decompressor proper.
  11:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * The coefficient buffer lies between entropy decoding and inverse-DCT steps.
  12:fltk-1.3.4-1/jpeg/jdcoefct.c ****  *
  13:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * In buffered-image mode, this controller is the interface between
  14:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * input-oriented processing and output-oriented processing.
  15:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Also, the input side (only) is used when reading a file for transcoding.
  16:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
  17:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  18:fltk-1.3.4-1/jpeg/jdcoefct.c **** #define JPEG_INTERNALS
  19:fltk-1.3.4-1/jpeg/jdcoefct.c **** #include "jinclude.h"
  20:fltk-1.3.4-1/jpeg/jdcoefct.c **** #include "jpeglib.h"
  21:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  22:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Block smoothing is only applicable for progressive JPEG, so: */
  23:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifndef D_PROGRESSIVE_SUPPORTED
  24:fltk-1.3.4-1/jpeg/jdcoefct.c **** #undef BLOCK_SMOOTHING_SUPPORTED
  25:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
  26:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  27:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Private buffer controller object */
  28:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  29:fltk-1.3.4-1/jpeg/jdcoefct.c **** typedef struct {
  30:fltk-1.3.4-1/jpeg/jdcoefct.c ****   struct jpeg_d_coef_controller pub; /* public fields */
  31:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  32:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* These variables keep track of the current location of the input side. */
  33:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* cinfo->input_iMCU_row is also used for this. */
  34:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION MCU_ctr;		/* counts MCUs processed in current row */
  35:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int MCU_vert_offset;		/* counts MCU rows within iMCU row */
  36:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int MCU_rows_per_iMCU_row;	/* number of such rows needed */
  37:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  38:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* The output side's location is represented by cinfo->output_iMCU_row. */
  39:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  40:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* In single-pass modes, it's sufficient to buffer just one MCU.
  41:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * We allocate a workspace of D_MAX_BLOCKS_IN_MCU coefficient blocks,
  42:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * and let the entropy decoder write into that workspace each time.
  43:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * (On 80x86, the workspace is FAR even though it's not really very big;
  44:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * this is to keep the module interfaces unchanged when a large coefficient
  45:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * buffer is necessary.)
  46:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * In multi-pass modes, this array points to the current MCU's blocks
  47:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * within the virtual arrays; it is used only by the input side.
  48:fltk-1.3.4-1/jpeg/jdcoefct.c ****    */
  49:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKROW MCU_buffer[D_MAX_BLOCKS_IN_MCU];
  50:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  51:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef D_MULTISCAN_FILES_SUPPORTED
  52:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* In multi-pass modes, we need a virtual block array for each component. */
  53:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jvirt_barray_ptr whole_image[MAX_COMPONENTS];
  54:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
  55:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  56:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
  57:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* When doing block smoothing, we latch coefficient Al values here */
  58:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int * coef_bits_latch;
  59:fltk-1.3.4-1/jpeg/jdcoefct.c **** #define SAVED_COEFS  6		/* we save coef_bits[0..5] */
  60:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
  61:fltk-1.3.4-1/jpeg/jdcoefct.c **** } my_coef_controller;
  62:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  63:fltk-1.3.4-1/jpeg/jdcoefct.c **** typedef my_coef_controller * my_coef_ptr;
  64:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  65:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Forward declarations */
  66:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int) decompress_onepass
  67:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	JPP((j_decompress_ptr cinfo, JSAMPIMAGE output_buf));
  68:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef D_MULTISCAN_FILES_SUPPORTED
  69:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int) decompress_data
  70:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	JPP((j_decompress_ptr cinfo, JSAMPIMAGE output_buf));
  71:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
  72:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
  73:fltk-1.3.4-1/jpeg/jdcoefct.c **** LOCAL(boolean) smoothing_ok JPP((j_decompress_ptr cinfo));
  74:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int) decompress_smooth_data
  75:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	JPP((j_decompress_ptr cinfo, JSAMPIMAGE output_buf));
  76:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
  77:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  78:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  79:fltk-1.3.4-1/jpeg/jdcoefct.c **** LOCAL(void)
  80:fltk-1.3.4-1/jpeg/jdcoefct.c **** start_iMCU_row (j_decompress_ptr cinfo)
  81:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Reset within-iMCU-row counters for a new row (input side) */
  82:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
  83:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
  84:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  85:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* In an interleaved scan, an MCU row is the same as an iMCU row.
  86:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * In a noninterleaved scan, an iMCU row has v_samp_factor MCU rows.
  87:fltk-1.3.4-1/jpeg/jdcoefct.c ****    * But at the bottom of the image, process only what's left.
  88:fltk-1.3.4-1/jpeg/jdcoefct.c ****    */
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (cinfo->comps_in_scan > 1) {
  90:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
  91:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->input_iMCU_row < (cinfo->total_iMCU_rows-1))
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
  94:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->last_row_height;
  96:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
  97:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_ctr = 0;
  99:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
 100:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 101:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 102:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 103:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 104:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Initialize for an input processing pass.
 105:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 106:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 107:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(void)
 108:fltk-1.3.4-1/jpeg/jdcoefct.c **** start_input_pass (j_decompress_ptr cinfo)
 109:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
  11              		.loc 1 109 1 view -0
  12              		.cfi_startproc
  13              		.loc 1 109 1 is_stmt 0 view .LVU1
  14 0000 F30F1EFA 		endbr64
 110:fltk-1.3.4-1/jpeg/jdcoefct.c ****   cinfo->input_iMCU_row = 0;
  15              		.loc 1 110 3 is_stmt 1 view .LVU2
  16              	.LBB16:
  17              	.LBB17:
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
  18              		.loc 1 89 6 is_stmt 0 view .LVU3
  19 0004 83BFC001 		cmpl	$1, 448(%rdi)
  19      000001
  83:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  20              		.loc 1 83 15 view .LVU4
  21 000b 488B8750 		movq	592(%rdi), %rax
  21      020000
  22              	.LBE17:
  23              	.LBE16:
  24              		.loc 1 110 25 view .LVU5
  25 0012 C787B000 		movl	$0, 176(%rdi)
  25      00000000 
  25      0000
 111:fltk-1.3.4-1/jpeg/jdcoefct.c ****   start_iMCU_row(cinfo);
  26              		.loc 1 111 3 is_stmt 1 view .LVU6
  27              	.LVL1:
  28              	.LBB21:
  29              	.LBI16:
  80:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Reset within-iMCU-row counters for a new row (input side) */
  30              		.loc 1 80 1 view .LVU7
  31              	.LBB18:
  83:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
  32              		.loc 1 83 3 view .LVU8
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
  33              		.loc 1 89 3 view .LVU9
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
  34              		.loc 1 89 6 is_stmt 0 view .LVU10
  35 001c 7E12     		jle	.L2
  90:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
  36              		.loc 1 90 5 is_stmt 1 view .LVU11
  90:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
  37              		.loc 1 90 33 is_stmt 0 view .LVU12
  38 001e C7403001 		movl	$1, 48(%rax)
  38      000000
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
  39              		.loc 1 98 3 is_stmt 1 view .LVU13
  99:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
  40              		.loc 1 99 3 view .LVU14
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
  41              		.loc 1 98 17 is_stmt 0 view .LVU15
  42 0025 48C74028 		movq	$0, 40(%rax)
  42      00000000 
  43              	.LVL2:
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
  44              		.loc 1 98 17 view .LVU16
  45              	.LBE18:
  46              	.LBE21:
 112:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
  47              		.loc 1 112 1 view .LVU17
  48 002d C3       		ret
  49              	.LVL3:
  50 002e 6690     		.p2align 4,,10
  51              		.p2align 3
  52              	.L2:
  53              	.LBB22:
  54              	.LBB19:
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
  55              		.loc 1 92 5 is_stmt 1 view .LVU18
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
  56              		.loc 1 92 8 is_stmt 0 view .LVU19
  57 0030 83BFB001 		cmpl	$1, 432(%rdi)
  57      000001
  58 0037 488B97C8 		movq	456(%rdi), %rdx
  58      010000
  59 003e 7410     		je	.L4
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
  60              		.loc 1 93 7 is_stmt 1 view .LVU20
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
  61              		.loc 1 93 60 is_stmt 0 view .LVU21
  62 0040 8B520C   		movl	12(%rdx), %edx
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
  63              		.loc 1 98 17 view .LVU22
  64 0043 48C74028 		movq	$0, 40(%rax)
  64      00000000 
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
  65              		.loc 1 93 35 view .LVU23
  66 004b 895030   		movl	%edx, 48(%rax)
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
  67              		.loc 1 98 3 is_stmt 1 view .LVU24
  99:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
  68              		.loc 1 99 3 view .LVU25
  69              	.LVL4:
  99:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
  70              		.loc 1 99 3 is_stmt 0 view .LVU26
  71              	.LBE19:
  72              	.LBE22:
  73              		.loc 1 112 1 view .LVU27
  74 004e C3       		ret
  75              	.LVL5:
  76 004f 90       		.p2align 4,,10
  77              		.p2align 3
  78              	.L4:
  79              	.LBB23:
  80              	.LBB20:
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
  81              		.loc 1 95 7 is_stmt 1 view .LVU28
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
  82              		.loc 1 95 60 is_stmt 0 view .LVU29
  83 0050 8B524C   		movl	76(%rdx), %edx
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
  84              		.loc 1 98 17 view .LVU30
  85 0053 48C74028 		movq	$0, 40(%rax)
  85      00000000 
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
  86              		.loc 1 95 35 view .LVU31
  87 005b 895030   		movl	%edx, 48(%rax)
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
  88              		.loc 1 98 3 is_stmt 1 view .LVU32
  99:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
  89              		.loc 1 99 3 view .LVU33
  90              	.LVL6:
  99:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
  91              		.loc 1 99 3 is_stmt 0 view .LVU34
  92              	.LBE20:
  93              	.LBE23:
  94              		.loc 1 112 1 view .LVU35
  95 005e C3       		ret
  96              		.cfi_endproc
  97              	.LFE52:
  99              		.section	.text.dummy_consume_data,"ax",@progbits
 100              		.p2align 4
 102              	dummy_consume_data:
 103              	.LVL7:
 104              	.LFB55:
 113:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 114:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 115:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 116:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Initialize for an output processing pass.
 117:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 118:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 119:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(void)
 120:fltk-1.3.4-1/jpeg/jdcoefct.c **** start_output_pass (j_decompress_ptr cinfo)
 121:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 122:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 123:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 124:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 125:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* If multipass, check to see whether to use block smoothing on this pass */
 126:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (coef->pub.coef_arrays != NULL) {
 127:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->do_block_smoothing && smoothing_ok(cinfo))
 128:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->pub.decompress_data = decompress_smooth_data;
 129:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 130:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->pub.decompress_data = decompress_data;
 131:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 132:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
 133:fltk-1.3.4-1/jpeg/jdcoefct.c ****   cinfo->output_iMCU_row = 0;
 134:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 135:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 136:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 137:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 138:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Decompress and return some data in the single-pass case.
 139:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Always attempts to emit one fully interleaved MCU row ("iMCU" row).
 140:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Input and output must run in lockstep since we have only a one-MCU buffer.
 141:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Return value is JPEG_ROW_COMPLETED, JPEG_SCAN_COMPLETED, or JPEG_SUSPENDED.
 142:fltk-1.3.4-1/jpeg/jdcoefct.c ****  *
 143:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * NB: output_buf contains a plane for each component in image,
 144:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * which we index according to the component's SOF position.
 145:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 146:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 147:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int)
 148:fltk-1.3.4-1/jpeg/jdcoefct.c **** decompress_onepass (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)
 149:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 150:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 151:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 152:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_MCU_col = cinfo->MCUs_per_row - 1;
 153:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 154:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int blkn, ci, xindex, yindex, yoffset, useful_width;
 155:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JSAMPARRAY output_ptr;
 156:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION start_col, output_col;
 157:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jpeg_component_info *compptr;
 158:fltk-1.3.4-1/jpeg/jdcoefct.c ****   inverse_DCT_method_ptr inverse_DCT;
 159:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 160:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Loop to process as much as one whole iMCU row */
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****   for (yoffset = coef->MCU_vert_offset; yoffset < coef->MCU_rows_per_iMCU_row;
 162:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 163:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (MCU_col_num = coef->MCU_ctr; MCU_col_num <= last_MCU_col;
 164:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 165:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Try to fetch an MCU.  Entropy decoder expects buffer to be zeroed. */
 166:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (cinfo->lim_Se)	/* can bypass in DC only case */
 167:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	FMEMZERO((void FAR *) coef->MCU_buffer[0],
 168:fltk-1.3.4-1/jpeg/jdcoefct.c **** 		 (size_t) (cinfo->blocks_in_MCU * SIZEOF(JBLOCK)));
 169:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (! (*cinfo->entropy->decode_mcu) (cinfo, coef->MCU_buffer)) {
 170:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Suspension forced; update state counters and exit */
 171:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_vert_offset = yoffset;
 172:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_ctr = MCU_col_num;
 173:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	return JPEG_SUSPENDED;
 174:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 175:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Determine where data should go in output_buf and do the IDCT thing.
 176:fltk-1.3.4-1/jpeg/jdcoefct.c ****        * We skip dummy blocks at the right and bottom edges (but blkn gets
 177:fltk-1.3.4-1/jpeg/jdcoefct.c ****        * incremented past them!).  Note the inner loop relies on having
 178:fltk-1.3.4-1/jpeg/jdcoefct.c ****        * allocated the MCU_buffer[] blocks sequentially.
 179:fltk-1.3.4-1/jpeg/jdcoefct.c ****        */
 180:fltk-1.3.4-1/jpeg/jdcoefct.c ****       blkn = 0;			/* index of current DCT block within MCU */
 181:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 182:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 183:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Don't bother to IDCT an uninteresting component. */
 184:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	if (! compptr->component_needed) {
 185:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  blkn += compptr->MCU_blocks;
 186:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  continue;
 187:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 188:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	inverse_DCT = cinfo->idct->inverse_DCT[compptr->component_index];
 189:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	useful_width = (MCU_col_num < last_MCU_col) ? compptr->MCU_width
 190:fltk-1.3.4-1/jpeg/jdcoefct.c **** 						    : compptr->last_col_width;
 191:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_ptr = output_buf[compptr->component_index] +
 192:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  yoffset * compptr->DCT_v_scaled_size;
 193:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	start_col = MCU_col_num * compptr->MCU_sample_width;
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 195:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 196:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      yoffset+yindex < compptr->last_row_height) {
 197:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    output_col = start_col;
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    for (xindex = 0; xindex < useful_width; xindex++) {
 199:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 200:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			      (JCOEFPTR) coef->MCU_buffer[blkn+xindex],
 201:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			      output_ptr, output_col);
 202:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      output_col += compptr->DCT_h_scaled_size;
 203:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    }
 204:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 205:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  blkn += compptr->MCU_width;
 206:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  output_ptr += compptr->DCT_v_scaled_size;
 207:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 208:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 209:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 210:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Completed an MCU row, but perhaps not an iMCU row */
 211:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_ctr = 0;
 212:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 213:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Completed the iMCU row, advance counters for next one */
 214:fltk-1.3.4-1/jpeg/jdcoefct.c ****   cinfo->output_iMCU_row++;
 215:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (++(cinfo->input_iMCU_row) < cinfo->total_iMCU_rows) {
 216:fltk-1.3.4-1/jpeg/jdcoefct.c ****     start_iMCU_row(cinfo);
 217:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 218:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 219:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Completed the scan */
 220:fltk-1.3.4-1/jpeg/jdcoefct.c ****   (*cinfo->inputctl->finish_input_pass) (cinfo);
 221:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 222:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 223:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 224:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 225:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 226:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Dummy consume-input routine for single-pass operation.
 227:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 228:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 229:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int)
 230:fltk-1.3.4-1/jpeg/jdcoefct.c **** dummy_consume_data (j_decompress_ptr cinfo)
 231:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 105              		.loc 1 231 1 is_stmt 1 view -0
 106              		.cfi_startproc
 107              		.loc 1 231 1 is_stmt 0 view .LVU37
 108 0000 F30F1EFA 		endbr64
 232:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SUSPENDED;	/* Always indicate nothing was done */
 109              		.loc 1 232 3 is_stmt 1 view .LVU38
 233:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 110              		.loc 1 233 1 is_stmt 0 view .LVU39
 111 0004 31C0     		xorl	%eax, %eax
 112 0006 C3       		ret
 113              		.cfi_endproc
 114              	.LFE55:
 116              		.section	.text.consume_data,"ax",@progbits
 117              		.p2align 4
 119              	consume_data:
 120              	.LVL8:
 121              	.LFB56:
 234:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 235:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 236:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef D_MULTISCAN_FILES_SUPPORTED
 237:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 238:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 239:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Consume input data and store it in the full-image coefficient buffer.
 240:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * We read as much as one fully interleaved MCU row ("iMCU" row) per call,
 241:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * ie, v_samp_factor block rows for each component in the scan.
 242:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Return value is JPEG_ROW_COMPLETED, JPEG_SCAN_COMPLETED, or JPEG_SUSPENDED.
 243:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 244:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 245:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int)
 246:fltk-1.3.4-1/jpeg/jdcoefct.c **** consume_data (j_decompress_ptr cinfo)
 247:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 122              		.loc 1 247 1 is_stmt 1 view -0
 123              		.cfi_startproc
 124              		.loc 1 247 1 is_stmt 0 view .LVU41
 125 0000 F30F1EFA 		endbr64
 126 0004 4157     		pushq	%r15
 127              		.cfi_def_cfa_offset 16
 128              		.cfi_offset 15, -16
 129 0006 4156     		pushq	%r14
 130              		.cfi_def_cfa_offset 24
 131              		.cfi_offset 14, -24
 132 0008 4155     		pushq	%r13
 133              		.cfi_def_cfa_offset 32
 134              		.cfi_offset 13, -32
 135 000a 4154     		pushq	%r12
 136              		.cfi_def_cfa_offset 40
 137              		.cfi_offset 12, -40
 138 000c 4531E4   		xorl	%r12d, %r12d
 139 000f 55       		pushq	%rbp
 140              		.cfi_def_cfa_offset 48
 141              		.cfi_offset 6, -48
 142 0010 4889FD   		movq	%rdi, %rbp
 143 0013 53       		pushq	%rbx
 144              		.cfi_def_cfa_offset 56
 145              		.cfi_offset 3, -56
 146 0014 4883EC48 		subq	$72, %rsp
 147              		.cfi_def_cfa_offset 128
 248:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 249:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 250:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int blkn, ci, xindex, yindex, yoffset;
 251:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION start_col;
 252:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKARRAY buffer[MAX_COMPS_IN_SCAN];
 253:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKROW buffer_ptr;
 254:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jpeg_component_info *compptr;
 255:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 256:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Align the virtual buffers for the components used in this scan. */
 257:fltk-1.3.4-1/jpeg/jdcoefct.c ****   for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 148              		.loc 1 257 3 view .LVU42
 149 0018 8BB7C001 		movl	448(%rdi), %esi
 149      0000
 248:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 150              		.loc 1 248 15 view .LVU43
 151 001e 488B9F50 		movq	592(%rdi), %rbx
 151      020000
 247:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 152              		.loc 1 247 1 view .LVU44
 153 0025 64488B04 		movq	%fs:40, %rax
 153      25280000 
 153      00
 154 002e 48894424 		movq	%rax, 56(%rsp)
 154      38
 155 0033 31C0     		xorl	%eax, %eax
 248:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 156              		.loc 1 248 3 is_stmt 1 view .LVU45
 157              	.LVL9:
 249:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int blkn, ci, xindex, yindex, yoffset;
 158              		.loc 1 249 3 view .LVU46
 250:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION start_col;
 159              		.loc 1 250 3 view .LVU47
 251:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKARRAY buffer[MAX_COMPS_IN_SCAN];
 160              		.loc 1 251 3 view .LVU48
 252:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKROW buffer_ptr;
 161              		.loc 1 252 3 view .LVU49
 253:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jpeg_component_info *compptr;
 162              		.loc 1 253 3 view .LVU50
 254:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 163              		.loc 1 254 3 view .LVU51
 164              		.loc 1 257 3 view .LVU52
 165              		.loc 1 257 16 view .LVU53
 166 0035 4C8D6C24 		leaq	16(%rsp), %r13
 166      10
 167              		.loc 1 257 3 is_stmt 0 view .LVU54
 168 003a 85F6     		testl	%esi, %esi
 169 003c 7E42     		jle	.L11
 170              	.LVL10:
 171              	.L8:
 258:fltk-1.3.4-1/jpeg/jdcoefct.c ****     compptr = cinfo->cur_comp_info[ci];
 172              		.loc 1 258 5 is_stmt 1 discriminator 3 view .LVU55
 259:fltk-1.3.4-1/jpeg/jdcoefct.c ****     buffer[ci] = (*cinfo->mem->access_virt_barray)
 173              		.loc 1 259 19 is_stmt 0 discriminator 3 view .LVU56
 174 003e 8B95B000 		movl	176(%rbp), %edx
 174      0000
 258:fltk-1.3.4-1/jpeg/jdcoefct.c ****     compptr = cinfo->cur_comp_info[ci];
 175              		.loc 1 258 13 discriminator 3 view .LVU57
 176 0044 4A8B84E5 		movq	456(%rbp,%r12,8), %rax
 176      C8010000 
 177              	.LVL11:
 178              		.loc 1 259 5 is_stmt 1 discriminator 3 view .LVU58
 179              		.loc 1 259 19 is_stmt 0 discriminator 3 view .LVU59
 180 004c 41B80100 		movl	$1, %r8d
 180      0000
 181 0052 4889EF   		movq	%rbp, %rdi
 182 0055 8B480C   		movl	12(%rax), %ecx
 183 0058 48634004 		movslq	4(%rax), %rax
 184              	.LVL12:
 185              		.loc 1 259 19 discriminator 3 view .LVU60
 186 005c 488BB4C3 		movq	136(%rbx,%rax,8), %rsi
 186      88000000 
 187 0064 488B4508 		movq	8(%rbp), %rax
 188 0068 0FAFD1   		imull	%ecx, %edx
 189 006b FF5040   		call	*64(%rax)
 190              	.LVL13:
 191              		.loc 1 259 16 discriminator 3 view .LVU61
 192 006e 4B8944E5 		movq	%rax, 0(%r13,%r12,8)
 192      00
 257:fltk-1.3.4-1/jpeg/jdcoefct.c ****     compptr = cinfo->cur_comp_info[ci];
 193              		.loc 1 257 43 is_stmt 1 discriminator 3 view .LVU62
 194              	.LVL14:
 257:fltk-1.3.4-1/jpeg/jdcoefct.c ****     compptr = cinfo->cur_comp_info[ci];
 195              		.loc 1 257 16 discriminator 3 view .LVU63
 196 0073 4983C401 		addq	$1, %r12
 197              	.LVL15:
 257:fltk-1.3.4-1/jpeg/jdcoefct.c ****     compptr = cinfo->cur_comp_info[ci];
 198              		.loc 1 257 3 is_stmt 0 discriminator 3 view .LVU64
 199 0077 4439A5C0 		cmpl	%r12d, 448(%rbp)
 199      010000
 200 007e 7FBE     		jg	.L8
 201              	.L11:
 260:fltk-1.3.4-1/jpeg/jdcoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[compptr->component_index],
 261:fltk-1.3.4-1/jpeg/jdcoefct.c ****        cinfo->input_iMCU_row * compptr->v_samp_factor,
 262:fltk-1.3.4-1/jpeg/jdcoefct.c ****        (JDIMENSION) compptr->v_samp_factor, TRUE);
 263:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Note: entropy decoder expects buffer to be zeroed,
 264:fltk-1.3.4-1/jpeg/jdcoefct.c ****      * but this is handled automatically by the memory manager
 265:fltk-1.3.4-1/jpeg/jdcoefct.c ****      * because we requested a pre-zeroed array.
 266:fltk-1.3.4-1/jpeg/jdcoefct.c ****      */
 267:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 268:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 269:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Loop to process one whole iMCU row */
 270:fltk-1.3.4-1/jpeg/jdcoefct.c ****   for (yoffset = coef->MCU_vert_offset; yoffset < coef->MCU_rows_per_iMCU_row;
 202              		.loc 1 270 3 is_stmt 1 view .LVU65
 203              		.loc 1 270 16 is_stmt 0 view .LVU66
 204 0080 448B732C 		movl	44(%rbx), %r14d
 205              	.LVL16:
 206              		.loc 1 270 41 is_stmt 1 view .LVU67
 207              		.loc 1 270 3 is_stmt 0 view .LVU68
 208 0084 443B7330 		cmpl	48(%rbx), %r14d
 209 0088 0F8D1101 		jge	.L10
 209      0000
 210 008e 488D4338 		leaq	56(%rbx), %rax
 211 0092 4D63EE   		movslq	%r14d, %r13
 212 0095 448B6328 		movl	40(%rbx), %r12d
 213 0099 48894424 		movq	%rax, 8(%rsp)
 213      08
 214 009e 49C1E503 		salq	$3, %r13
 215              	.L24:
 271:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 272:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (MCU_col_num = coef->MCU_ctr; MCU_col_num < cinfo->MCUs_per_row;
 216              		.loc 1 272 5 is_stmt 1 view .LVU69
 217              	.LVL17:
 218              		.loc 1 272 39 view .LVU70
 219              		.loc 1 272 5 is_stmt 0 view .LVU71
 220 00a2 4439A5E8 		cmpl	%r12d, 488(%rbp)
 220      010000
 221 00a9 0F86D400 		jbe	.L14
 221      0000
 222              		.loc 1 272 5 view .LVU72
 223 00af 44897424 		movl	%r14d, 4(%rsp)
 223      04
 224 00b4 4C8B7424 		movq	8(%rsp), %r14
 224      08
 225              	.LVL18:
 226              	.L15:
 273:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 274:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Construct list of pointers to DCT blocks belonging to this MCU */
 275:fltk-1.3.4-1/jpeg/jdcoefct.c ****       blkn = 0;			/* index of current DCT block within MCU */
 276:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 227              		.loc 1 276 20 is_stmt 1 view .LVU73
 228              		.loc 1 276 7 is_stmt 0 view .LVU74
 229 00b9 8B85C001 		movl	448(%rbp), %eax
 229      0000
 230 00bf 4531FF   		xorl	%r15d, %r15d
 275:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 231              		.loc 1 275 12 view .LVU75
 232 00c2 31FF     		xorl	%edi, %edi
 233              		.loc 1 276 7 view .LVU76
 234 00c4 85C0     		testl	%eax, %eax
 235 00c6 0F8E8D00 		jle	.L23
 235      0000
 236              	.LVL19:
 237 00cc 0F1F4000 		.p2align 4,,10
 238              		.p2align 3
 239              	.L20:
 277:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 240              		.loc 1 277 2 is_stmt 1 view .LVU77
 241              		.loc 1 277 10 is_stmt 0 view .LVU78
 242 00d0 4A8BB4FD 		movq	456(%rbp,%r15,8), %rsi
 242      C8010000 
 243              	.LVL20:
 278:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	start_col = MCU_col_num * compptr->MCU_width;
 244              		.loc 1 278 2 is_stmt 1 view .LVU79
 245              		.loc 1 278 35 is_stmt 0 view .LVU80
 246 00d8 8B4638   		movl	56(%rsi), %eax
 279:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 247              		.loc 1 279 2 view .LVU81
 248 00db 8B4E3C   		movl	60(%rsi), %ecx
 278:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	start_col = MCU_col_num * compptr->MCU_width;
 249              		.loc 1 278 12 view .LVU82
 250 00de 89C2     		movl	%eax, %edx
 251 00e0 410FAFD4 		imull	%r12d, %edx
 252              	.LVL21:
 253              		.loc 1 279 2 is_stmt 1 view .LVU83
 254              		.loc 1 279 19 view .LVU84
 255              		.loc 1 279 2 is_stmt 0 view .LVU85
 256 00e4 85C9     		testl	%ecx, %ecx
 257 00e6 7E60     		jle	.L16
 258 00e8 4E8B5CFC 		movq	16(%rsp,%r15,8), %r11
 258      10
 280:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 259              		.loc 1 280 44 view .LVU86
 260 00ed 4189D2   		movl	%edx, %r10d
 261 00f0 4531C9   		xorl	%r9d, %r9d
 262 00f3 49C1E207 		salq	$7, %r10
 263 00f7 4D01EB   		addq	%r13, %r11
 264              	.LVL22:
 265 00fa 660F1F44 		.p2align 4,,10
 265      0000
 266              		.p2align 3
 267              	.L19:
 268              		.loc 1 280 4 is_stmt 1 view .LVU87
 269              		.loc 1 280 15 is_stmt 0 view .LVU88
 270 0100 4B8B14CB 		movq	(%r11,%r9,8), %rdx
 271 0104 4C01D2   		addq	%r10, %rdx
 272              	.LVL23:
 281:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  for (xindex = 0; xindex < compptr->MCU_width; xindex++) {
 273              		.loc 1 281 4 is_stmt 1 view .LVU89
 274              		.loc 1 281 21 view .LVU90
 275              		.loc 1 281 4 is_stmt 0 view .LVU91
 276 0107 85C0     		testl	%eax, %eax
 277 0109 7E28     		jle	.L17
 278              		.loc 1 281 4 view .LVU92
 279 010b 8D4701   		leal	1(%rdi), %eax
 280 010e F7D7     		notl	%edi
 281              	.LVL24:
 282              		.loc 1 281 4 view .LVU93
 283 0110 4898     		cltq
 284 0112 4189F8   		movl	%edi, %r8d
 285              	.LVL25:
 286              		.p2align 4,,10
 287 0115 0F1F00   		.p2align 3
 288              	.L18:
 282:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    coef->MCU_buffer[blkn++] = buffer_ptr++;
 289              		.loc 1 282 6 is_stmt 1 discriminator 3 view .LVU94
 290 0118 4889D1   		movq	%rdx, %rcx
 291              		.loc 1 282 27 is_stmt 0 discriminator 3 view .LVU95
 292 011b 89C7     		movl	%eax, %edi
 293              		.loc 1 282 43 discriminator 3 view .LVU96
 294 011d 4883EA80 		subq	$-128, %rdx
 295              	.LVL26:
 296              		.loc 1 282 31 discriminator 3 view .LVU97
 297 0121 48894CC3 		movq	%rcx, 48(%rbx,%rax,8)
 297      30
 281:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  for (xindex = 0; xindex < compptr->MCU_width; xindex++) {
 298              		.loc 1 281 50 is_stmt 1 discriminator 3 view .LVU98
 299              	.LVL27:
 281:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  for (xindex = 0; xindex < compptr->MCU_width; xindex++) {
 300              		.loc 1 281 21 discriminator 3 view .LVU99
 301 0126 4883C001 		addq	$1, %rax
 302              	.LVL28:
 281:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  for (xindex = 0; xindex < compptr->MCU_width; xindex++) {
 303              		.loc 1 281 4 is_stmt 0 discriminator 3 view .LVU100
 304 012a 418D0C00 		leal	(%r8,%rax), %ecx
 305 012e 394E38   		cmpl	%ecx, 56(%rsi)
 306 0131 7FE5     		jg	.L18
 307              	.LVL29:
 308              	.L17:
 279:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 309              		.loc 1 279 49 is_stmt 1 discriminator 2 view .LVU101
 279:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 310              		.loc 1 279 19 discriminator 2 view .LVU102
 311 0133 4983C101 		addq	$1, %r9
 312              	.LVL30:
 279:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 313              		.loc 1 279 2 is_stmt 0 discriminator 2 view .LVU103
 314 0137 44394E3C 		cmpl	%r9d, 60(%rsi)
 315 013b 7E0B     		jle	.L16
 279:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  buffer_ptr = buffer[ci][yindex+yoffset] + start_col;
 316              		.loc 1 279 2 discriminator 2 view .LVU104
 317 013d 8B4638   		movl	56(%rsi), %eax
 318 0140 EBBE     		jmp	.L19
 319              	.LVL31:
 320              		.p2align 4,,10
 321 0142 660F1F44 		.p2align 3
 321      0000
 322              	.L16:
 276:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 323              		.loc 1 276 47 is_stmt 1 discriminator 2 view .LVU105
 276:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 324              		.loc 1 276 20 discriminator 2 view .LVU106
 325 0148 4983C701 		addq	$1, %r15
 326              	.LVL32:
 276:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 327              		.loc 1 276 7 is_stmt 0 discriminator 2 view .LVU107
 328 014c 4439BDC0 		cmpl	%r15d, 448(%rbp)
 328      010000
 329 0153 0F8F77FF 		jg	.L20
 329      FFFF
 330              	.LVL33:
 331              	.L23:
 283:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 284:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 285:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 286:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Try to fetch the MCU. */
 287:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (! (*cinfo->entropy->decode_mcu) (cinfo, coef->MCU_buffer)) {
 332              		.loc 1 287 7 is_stmt 1 view .LVU108
 333              		.loc 1 287 14 is_stmt 0 view .LVU109
 334 0159 488B8570 		movq	624(%rbp), %rax
 334      020000
 335 0160 4C89F6   		movq	%r14, %rsi
 336 0163 4889EF   		movq	%rbp, %rdi
 337 0166 FF5008   		call	*8(%rax)
 338              	.LVL34:
 339              		.loc 1 287 10 view .LVU110
 340 0169 85C0     		testl	%eax, %eax
 341 016b 7463     		je	.L46
 273:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Construct list of pointers to DCT blocks belonging to this MCU */
 342              		.loc 1 273 3 is_stmt 1 view .LVU111
 273:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Construct list of pointers to DCT blocks belonging to this MCU */
 343              		.loc 1 273 14 is_stmt 0 view .LVU112
 344 016d 4183C401 		addl	$1, %r12d
 345              	.LVL35:
 272:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 346              		.loc 1 272 39 is_stmt 1 view .LVU113
 272:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 347              		.loc 1 272 5 is_stmt 0 view .LVU114
 348 0171 4439A5E8 		cmpl	%r12d, 488(%rbp)
 348      010000
 349 0178 0F873BFF 		ja	.L15
 349      FFFF
 350 017e 448B7424 		movl	4(%rsp), %r14d
 350      04
 351              	.LVL36:
 352              	.L14:
 288:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Suspension forced; update state counters and exit */
 289:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_vert_offset = yoffset;
 290:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_ctr = MCU_col_num;
 291:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	return JPEG_SUSPENDED;
 292:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 293:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 294:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Completed an MCU row, but perhaps not an iMCU row */
 295:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_ctr = 0;
 353              		.loc 1 295 5 is_stmt 1 view .LVU115
 354              		.loc 1 295 19 is_stmt 0 view .LVU116
 355 0183 C7432800 		movl	$0, 40(%rbx)
 355      000000
 271:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (MCU_col_num = coef->MCU_ctr; MCU_col_num < cinfo->MCUs_per_row;
 356              		.loc 1 271 8 is_stmt 1 view .LVU117
 271:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (MCU_col_num = coef->MCU_ctr; MCU_col_num < cinfo->MCUs_per_row;
 357              		.loc 1 271 15 is_stmt 0 view .LVU118
 358 018a 4183C601 		addl	$1, %r14d
 359              	.LVL37:
 270:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 360              		.loc 1 270 41 is_stmt 1 view .LVU119
 361 018e 4983C508 		addq	$8, %r13
 362 0192 4531E4   		xorl	%r12d, %r12d
 270:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 363              		.loc 1 270 3 is_stmt 0 view .LVU120
 364 0195 44397330 		cmpl	%r14d, 48(%rbx)
 365 0199 0F8F03FF 		jg	.L24
 365      FFFF
 366              	.L10:
 296:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 297:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Completed the iMCU row, advance counters for next one */
 298:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (++(cinfo->input_iMCU_row) < cinfo->total_iMCU_rows) {
 367              		.loc 1 298 3 is_stmt 1 view .LVU121
 368              		.loc 1 298 7 is_stmt 0 view .LVU122
 369 019f 8B85B000 		movl	176(%rbp), %eax
 369      0000
 370              		.loc 1 298 40 view .LVU123
 371 01a5 8B8DB001 		movl	432(%rbp), %ecx
 371      0000
 372              		.loc 1 298 7 view .LVU124
 373 01ab 83C001   		addl	$1, %eax
 374              		.loc 1 298 6 view .LVU125
 375 01ae 8985B000 		movl	%eax, 176(%rbp)
 375      0000
 376 01b4 39C8     		cmpl	%ecx, %eax
 377 01b6 7244     		jb	.L47
 299:fltk-1.3.4-1/jpeg/jdcoefct.c ****     start_iMCU_row(cinfo);
 300:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 301:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 302:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Completed the scan */
 303:fltk-1.3.4-1/jpeg/jdcoefct.c ****   (*cinfo->inputctl->finish_input_pass) (cinfo);
 378              		.loc 1 303 3 is_stmt 1 view .LVU126
 379              		.loc 1 303 4 is_stmt 0 view .LVU127
 380 01b8 488B8560 		movq	608(%rbp), %rax
 380      020000
 381 01bf 4889EF   		movq	%rbp, %rdi
 382 01c2 FF5018   		call	*24(%rax)
 383              	.LVL38:
 304:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 384              		.loc 1 304 3 is_stmt 1 view .LVU128
 385              		.loc 1 304 10 is_stmt 0 view .LVU129
 386 01c5 B8040000 		movl	$4, %eax
 386      00
 387 01ca EB11     		jmp	.L7
 388              	.LVL39:
 389 01cc 0F1F4000 		.p2align 4,,10
 390              		.p2align 3
 391              	.L46:
 392              		.loc 1 304 10 view .LVU130
 393 01d0 448B7424 		movl	4(%rsp), %r14d
 393      04
 289:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_ctr = MCU_col_num;
 394              		.loc 1 289 2 is_stmt 1 view .LVU131
 290:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	return JPEG_SUSPENDED;
 395              		.loc 1 290 16 is_stmt 0 view .LVU132
 396 01d5 44896328 		movl	%r12d, 40(%rbx)
 289:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_ctr = MCU_col_num;
 397              		.loc 1 289 24 view .LVU133
 398 01d9 4489732C 		movl	%r14d, 44(%rbx)
 290:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	return JPEG_SUSPENDED;
 399              		.loc 1 290 2 is_stmt 1 view .LVU134
 291:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 400              		.loc 1 291 2 view .LVU135
 401              	.LVL40:
 402              	.L7:
 305:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 403              		.loc 1 305 1 is_stmt 0 view .LVU136
 404 01dd 488B5C24 		movq	56(%rsp), %rbx
 404      38
 405 01e2 6448331C 		xorq	%fs:40, %rbx
 405      25280000 
 405      00
 406              	.LVL41:
 407              		.loc 1 305 1 view .LVU137
 408 01eb 7535     		jne	.L48
 409 01ed 4883C448 		addq	$72, %rsp
 410              		.cfi_remember_state
 411              		.cfi_def_cfa_offset 56
 412 01f1 5B       		popq	%rbx
 413              		.cfi_def_cfa_offset 48
 414 01f2 5D       		popq	%rbp
 415              		.cfi_def_cfa_offset 40
 416              	.LVL42:
 417              		.loc 1 305 1 view .LVU138
 418 01f3 415C     		popq	%r12
 419              		.cfi_def_cfa_offset 32
 420 01f5 415D     		popq	%r13
 421              		.cfi_def_cfa_offset 24
 422 01f7 415E     		popq	%r14
 423              		.cfi_def_cfa_offset 16
 424 01f9 415F     		popq	%r15
 425              		.cfi_def_cfa_offset 8
 426 01fb C3       		ret
 427              	.LVL43:
 428              	.L47:
 429              		.cfi_restore_state
 299:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 430              		.loc 1 299 5 is_stmt 1 view .LVU139
 431              	.LBB24:
 432              	.LBI24:
  80:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Reset within-iMCU-row counters for a new row (input side) */
 433              		.loc 1 80 1 view .LVU140
 434              	.LBB25:
  83:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 435              		.loc 1 83 3 view .LVU141
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
 436              		.loc 1 89 6 is_stmt 0 view .LVU142
 437 01fc 83BDC001 		cmpl	$1, 448(%rbp)
 437      000001
  83:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 438              		.loc 1 83 15 view .LVU143
 439 0203 488B9550 		movq	592(%rbp), %rdx
 439      020000
 440              	.LVL44:
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
 441              		.loc 1 89 3 is_stmt 1 view .LVU144
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
 442              		.loc 1 89 6 is_stmt 0 view .LVU145
 443 020a 7E24     		jle	.L25
  90:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
 444              		.loc 1 90 5 is_stmt 1 view .LVU146
  90:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
 445              		.loc 1 90 33 is_stmt 0 view .LVU147
 446 020c C7423001 		movl	$1, 48(%rdx)
 446      000000
 447              	.L26:
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
 448              		.loc 1 98 3 is_stmt 1 view .LVU148
  99:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 449              		.loc 1 99 3 view .LVU149
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
 450              		.loc 1 98 17 is_stmt 0 view .LVU150
 451 0213 48C74228 		movq	$0, 40(%rdx)
 451      00000000 
 452              	.LVL45:
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
 453              		.loc 1 98 17 view .LVU151
 454              	.LBE25:
 455              	.LBE24:
 300:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 456              		.loc 1 300 5 is_stmt 1 view .LVU152
 300:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 457              		.loc 1 300 12 is_stmt 0 view .LVU153
 458 021b B8030000 		movl	$3, %eax
 458      00
 459 0220 EBBB     		jmp	.L7
 460              	.LVL46:
 461              	.L48:
 462              		.loc 1 305 1 view .LVU154
 463 0222 E8000000 		call	__stack_chk_fail@PLT
 463      00
 464              	.LVL47:
 465 0227 660F1F84 		.p2align 4,,10
 465      00000000 
 465      00
 466              		.p2align 3
 467              	.L25:
 468              	.LBB27:
 469              	.LBB26:
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
 470              		.loc 1 92 5 is_stmt 1 view .LVU155
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
 471              		.loc 1 92 56 is_stmt 0 view .LVU156
 472 0230 83E901   		subl	$1, %ecx
 473 0233 488BB5C8 		movq	456(%rbp), %rsi
 473      010000
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
 474              		.loc 1 92 8 view .LVU157
 475 023a 39C8     		cmpl	%ecx, %eax
 476 023c 7308     		jnb	.L27
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 477              		.loc 1 93 7 is_stmt 1 view .LVU158
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 478              		.loc 1 93 60 is_stmt 0 view .LVU159
 479 023e 8B460C   		movl	12(%rsi), %eax
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 480              		.loc 1 93 35 view .LVU160
 481 0241 894230   		movl	%eax, 48(%rdx)
 482 0244 EBCD     		jmp	.L26
 483              	.L27:
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 484              		.loc 1 95 7 is_stmt 1 view .LVU161
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 485              		.loc 1 95 60 is_stmt 0 view .LVU162
 486 0246 8B464C   		movl	76(%rsi), %eax
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 487              		.loc 1 95 35 view .LVU163
 488 0249 894230   		movl	%eax, 48(%rdx)
 489 024c EBC5     		jmp	.L26
 490              	.LBE26:
 491              	.LBE27:
 492              		.cfi_endproc
 493              	.LFE56:
 495              		.section	.text.decompress_data,"ax",@progbits
 496              		.p2align 4
 498              	decompress_data:
 499              	.LVL48:
 500              	.LFB57:
 306:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 307:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 308:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 309:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Decompress and return some data in the multi-pass case.
 310:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Always attempts to emit one fully interleaved MCU row ("iMCU" row).
 311:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Return value is JPEG_ROW_COMPLETED, JPEG_SCAN_COMPLETED, or JPEG_SUSPENDED.
 312:fltk-1.3.4-1/jpeg/jdcoefct.c ****  *
 313:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * NB: output_buf contains a plane for each component in image.
 314:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 315:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 316:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int)
 317:fltk-1.3.4-1/jpeg/jdcoefct.c **** decompress_data (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)
 318:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 501              		.loc 1 318 1 is_stmt 1 view -0
 502              		.cfi_startproc
 503              		.loc 1 318 1 is_stmt 0 view .LVU165
 504 0000 F30F1EFA 		endbr64
 319:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 505              		.loc 1 319 3 is_stmt 1 view .LVU166
 318:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 506              		.loc 1 318 1 is_stmt 0 view .LVU167
 507 0004 4157     		pushq	%r15
 508              		.cfi_def_cfa_offset 16
 509              		.cfi_offset 15, -16
 510 0006 4989F7   		movq	%rsi, %r15
 511 0009 4156     		pushq	%r14
 512              		.cfi_def_cfa_offset 24
 513              		.cfi_offset 14, -24
 514 000b 4989FE   		movq	%rdi, %r14
 515 000e 4155     		pushq	%r13
 516              		.cfi_def_cfa_offset 32
 517              		.cfi_offset 13, -32
 518 0010 4154     		pushq	%r12
 519              		.cfi_def_cfa_offset 40
 520              		.cfi_offset 12, -40
 521 0012 55       		pushq	%rbp
 522              		.cfi_def_cfa_offset 48
 523              		.cfi_offset 6, -48
 524 0013 53       		pushq	%rbx
 525              		.cfi_def_cfa_offset 56
 526              		.cfi_offset 3, -56
 527 0014 4883EC38 		subq	$56, %rsp
 528              		.cfi_def_cfa_offset 112
 529              		.loc 1 319 15 view .LVU168
 530 0018 488B9F50 		movq	592(%rdi), %rbx
 530      020000
 531              	.LVL49:
 320:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 532              		.loc 1 320 3 is_stmt 1 view .LVU169
 533              		.loc 1 320 35 is_stmt 0 view .LVU170
 534 001f 8BAFB001 		movl	432(%rdi), %ebp
 534      0000
 535              	.LVL50:
 321:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION block_num;
 536              		.loc 1 321 3 is_stmt 1 view .LVU171
 322:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int ci, block_row, block_rows;
 537              		.loc 1 322 3 view .LVU172
 323:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKARRAY buffer;
 538              		.loc 1 323 3 view .LVU173
 324:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKROW buffer_ptr;
 539              		.loc 1 324 3 view .LVU174
 325:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JSAMPARRAY output_ptr;
 540              		.loc 1 325 3 view .LVU175
 326:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION output_col;
 541              		.loc 1 326 3 view .LVU176
 327:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jpeg_component_info *compptr;
 542              		.loc 1 327 3 view .LVU177
 328:fltk-1.3.4-1/jpeg/jdcoefct.c ****   inverse_DCT_method_ptr inverse_DCT;
 543              		.loc 1 328 3 view .LVU178
 329:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 330:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Force some input to be done if we are getting ahead of the input. */
 331:fltk-1.3.4-1/jpeg/jdcoefct.c ****   while (cinfo->input_scan_number < cinfo->output_scan_number ||
 544              		.loc 1 331 3 view .LVU179
 545              		.p2align 4,,10
 546 0025 0F1F00   		.p2align 3
 547              	.L50:
 548              		.loc 1 331 9 view .LVU180
 549 0028 418B86B4 		movl	180(%r14), %eax
 549      000000
 550 002f 413986AC 		cmpl	%eax, 172(%r14)
 550      000000
 551 0036 7C12     		jl	.L52
 552 0038 418B8EB8 		movl	184(%r14), %ecx
 552      000000
 553              		.loc 1 331 63 is_stmt 0 discriminator 1 view .LVU181
 554 003f 7528     		jne	.L53
 332:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 (cinfo->input_scan_number == cinfo->output_scan_number &&
 555              		.loc 1 332 58 view .LVU182
 556 0041 41398EB0 		cmpl	%ecx, 176(%r14)
 556      000000
 557 0048 771F     		ja	.L53
 558              	.L52:
 333:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  cinfo->input_iMCU_row <= cinfo->output_iMCU_row)) {
 334:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if ((*cinfo->inputctl->consume_input)(cinfo) == JPEG_SUSPENDED)
 559              		.loc 1 334 5 is_stmt 1 view .LVU183
 560              		.loc 1 334 10 is_stmt 0 view .LVU184
 561 004a 498B8660 		movq	608(%r14), %rax
 561      020000
 562 0051 4C89F7   		movq	%r14, %rdi
 563 0054 FF10     		call	*(%rax)
 564              	.LVL51:
 565              		.loc 1 334 8 view .LVU185
 566 0056 85C0     		testl	%eax, %eax
 567 0058 75CE     		jne	.L50
 335:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return JPEG_SUSPENDED;
 336:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 337:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 338:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* OK, output from the virtual arrays. */
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 340:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 341:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Don't bother to IDCT an uninteresting component. */
 342:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (! compptr->component_needed)
 343:fltk-1.3.4-1/jpeg/jdcoefct.c ****       continue;
 344:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Align the virtual buffer for this component. */
 345:fltk-1.3.4-1/jpeg/jdcoefct.c ****     buffer = (*cinfo->mem->access_virt_barray)
 346:fltk-1.3.4-1/jpeg/jdcoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[ci],
 347:fltk-1.3.4-1/jpeg/jdcoefct.c ****        cinfo->output_iMCU_row * compptr->v_samp_factor,
 348:fltk-1.3.4-1/jpeg/jdcoefct.c ****        (JDIMENSION) compptr->v_samp_factor, FALSE);
 349:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Count non-dummy DCT block rows in this iMCU row. */
 350:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->output_iMCU_row < last_iMCU_row)
 351:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = compptr->v_samp_factor;
 352:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else {
 353:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* NB: can't use last_row_height here; it is input-side-dependent! */
 354:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = (int) (compptr->height_in_blocks % compptr->v_samp_factor);
 355:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 356:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 357:fltk-1.3.4-1/jpeg/jdcoefct.c ****     inverse_DCT = cinfo->idct->inverse_DCT[ci];
 358:fltk-1.3.4-1/jpeg/jdcoefct.c ****     output_ptr = output_buf[ci];
 359:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Loop over all DCT blocks to be processed. */
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (block_row = 0; block_row < block_rows; block_row++) {
 361:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 362:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 363:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num < compptr->width_in_blocks; block_num++) {
 364:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 365:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			output_ptr, output_col);
 366:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	buffer_ptr++;
 367:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_col += compptr->DCT_h_scaled_size;
 368:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 369:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_ptr += compptr->DCT_v_scaled_size;
 370:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 371:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 372:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 373:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (++(cinfo->output_iMCU_row) < cinfo->total_iMCU_rows)
 374:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 375:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 376:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 568              		.loc 1 376 1 view .LVU186
 569 005a 4883C438 		addq	$56, %rsp
 570              		.cfi_remember_state
 571              		.cfi_def_cfa_offset 56
 572 005e 5B       		popq	%rbx
 573              		.cfi_def_cfa_offset 48
 574              	.LVL52:
 575              		.loc 1 376 1 view .LVU187
 576 005f 5D       		popq	%rbp
 577              		.cfi_def_cfa_offset 40
 578              	.LVL53:
 579              		.loc 1 376 1 view .LVU188
 580 0060 415C     		popq	%r12
 581              		.cfi_def_cfa_offset 32
 582 0062 415D     		popq	%r13
 583              		.cfi_def_cfa_offset 24
 584 0064 415E     		popq	%r14
 585              		.cfi_def_cfa_offset 16
 586              	.LVL54:
 587              		.loc 1 376 1 view .LVU189
 588 0066 415F     		popq	%r15
 589              		.cfi_def_cfa_offset 8
 590              	.LVL55:
 591              		.loc 1 376 1 view .LVU190
 592 0068 C3       		ret
 593              	.LVL56:
 594              	.L53:
 595              		.cfi_restore_state
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 596              		.loc 1 339 3 is_stmt 1 view .LVU191
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 597              		.loc 1 339 3 is_stmt 0 view .LVU192
 598 0069 418B7638 		movl	56(%r14), %esi
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 599              		.loc 1 339 24 view .LVU193
 600 006d 4D8BAE30 		movq	304(%r14), %r13
 600      010000
 601              	.LVL57:
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 602              		.loc 1 339 44 is_stmt 1 view .LVU194
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 603              		.loc 1 339 3 is_stmt 0 view .LVU195
 604 0074 85F6     		testl	%esi, %esi
 605 0076 0F8E3A01 		jle	.L54
 605      0000
 320:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION block_num;
 606              		.loc 1 320 14 view .LVU196
 607 007c 8D45FF   		leal	-1(%rbp), %eax
 608 007f 4C897C24 		movq	%r15, 24(%rsp)
 608      18
 609 0084 8944242C 		movl	%eax, 44(%rsp)
 610 0088 488D8388 		leaq	136(%rbx), %rax
 610      000000
 611 008f 48894424 		movq	%rax, 32(%rsp)
 611      20
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 612              		.loc 1 339 11 view .LVU197
 613 0094 C7442428 		movl	$0, 40(%rsp)
 613      00000000 
 614 009c EB25     		jmp	.L62
 615              	.LVL58:
 616 009e 6690     		.p2align 4,,10
 617              		.p2align 3
 618              	.L55:
 340:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Don't bother to IDCT an uninteresting component. */
 619              		.loc 1 340 8 is_stmt 1 view .LVU198
 340:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Don't bother to IDCT an uninteresting component. */
 620              		.loc 1 340 10 is_stmt 0 view .LVU199
 621 00a0 83442428 		addl	$1, 40(%rsp)
 621      01
 622              	.LVL59:
 340:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Don't bother to IDCT an uninteresting component. */
 623              		.loc 1 340 21 view .LVU200
 624 00a5 4983C560 		addq	$96, %r13
 625              	.LVL60:
 340:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Don't bother to IDCT an uninteresting component. */
 626              		.loc 1 340 10 view .LVU201
 627 00a9 8B442428 		movl	40(%rsp), %eax
 628              	.LVL61:
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 629              		.loc 1 339 44 is_stmt 1 view .LVU202
 630 00ad 48834424 		addq	$8, 24(%rsp)
 630      1808
 631 00b3 48834424 		addq	$8, 32(%rsp)
 631      2008
 339:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 632              		.loc 1 339 3 is_stmt 0 view .LVU203
 633 00b9 41394638 		cmpl	%eax, 56(%r14)
 634 00bd 0F8EF300 		jle	.L54
 634      0000
 635              	.LVL62:
 636              	.L62:
 342:fltk-1.3.4-1/jpeg/jdcoefct.c ****       continue;
 637              		.loc 1 342 5 is_stmt 1 view .LVU204
 342:fltk-1.3.4-1/jpeg/jdcoefct.c ****       continue;
 638              		.loc 1 342 8 is_stmt 0 view .LVU205
 639 00c3 418B5534 		movl	52(%r13), %edx
 640 00c7 85D2     		testl	%edx, %edx
 641 00c9 74D5     		je	.L55
 345:fltk-1.3.4-1/jpeg/jdcoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[ci],
 642              		.loc 1 345 5 is_stmt 1 view .LVU206
 345:fltk-1.3.4-1/jpeg/jdcoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[ci],
 643              		.loc 1 345 15 is_stmt 0 view .LVU207
 644 00cb 458B550C 		movl	12(%r13), %r10d
 645 00cf 488B7C24 		movq	32(%rsp), %rdi
 645      20
 646 00d4 89CA     		movl	%ecx, %edx
 647 00d6 4531C0   		xorl	%r8d, %r8d
 648 00d9 498B4608 		movq	8(%r14), %rax
 649 00dd 488B37   		movq	(%rdi), %rsi
 650 00e0 4489D1   		movl	%r10d, %ecx
 651 00e3 410FAFD2 		imull	%r10d, %edx
 652 00e7 4C89F7   		movq	%r14, %rdi
 653 00ea FF5040   		call	*64(%rax)
 654              	.LVL63:
 350:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = compptr->v_samp_factor;
 655              		.loc 1 350 14 view .LVU208
 656 00ed 418B8EB8 		movl	184(%r14), %ecx
 656      000000
 345:fltk-1.3.4-1/jpeg/jdcoefct.c ****       ((j_common_ptr) cinfo, coef->whole_image[ci],
 657              		.loc 1 345 15 view .LVU209
 658 00f4 4989C4   		movq	%rax, %r12
 659              	.LVL64:
 350:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = compptr->v_samp_factor;
 660              		.loc 1 350 5 is_stmt 1 view .LVU210
 350:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = compptr->v_samp_factor;
 661              		.loc 1 350 8 is_stmt 0 view .LVU211
 662 00f7 3B4C242C 		cmpl	44(%rsp), %ecx
 663 00fb 0F83DD00 		jnb	.L56
 663      0000
 351:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else {
 664              		.loc 1 351 7 is_stmt 1 view .LVU212
 351:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else {
 665              		.loc 1 351 18 is_stmt 0 view .LVU213
 666 0101 418B450C 		movl	12(%r13), %eax
 667              	.LVL65:
 668              	.L57:
 357:fltk-1.3.4-1/jpeg/jdcoefct.c ****     output_ptr = output_buf[ci];
 669              		.loc 1 357 5 is_stmt 1 view .LVU214
 357:fltk-1.3.4-1/jpeg/jdcoefct.c ****     output_ptr = output_buf[ci];
 670              		.loc 1 357 17 is_stmt 0 view .LVU215
 671 0105 498B9678 		movq	632(%r14), %rdx
 671      020000
 672 010c 48637424 		movslq	40(%rsp), %rsi
 672      28
 673 0111 488B54F2 		movq	8(%rdx,%rsi,8), %rdx
 673      08
 674 0116 48891424 		movq	%rdx, (%rsp)
 675              	.LVL66:
 358:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Loop over all DCT blocks to be processed. */
 676              		.loc 1 358 5 is_stmt 1 view .LVU216
 358:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Loop over all DCT blocks to be processed. */
 677              		.loc 1 358 16 is_stmt 0 view .LVU217
 678 011a 488B5424 		movq	24(%rsp), %rdx
 678      18
 679              	.LVL67:
 358:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Loop over all DCT blocks to be processed. */
 680              		.loc 1 358 16 view .LVU218
 681 011f 488B1A   		movq	(%rdx), %rbx
 682              	.LVL68:
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 683              		.loc 1 360 5 is_stmt 1 view .LVU219
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 684              		.loc 1 360 25 view .LVU220
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 685              		.loc 1 360 5 is_stmt 0 view .LVU221
 686 0122 85C0     		testl	%eax, %eax
 687 0124 0F8E76FF 		jle	.L55
 687      FFFF
 688 012a 83E801   		subl	$1, %eax
 689              	.LVL69:
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 690              		.loc 1 360 5 view .LVU222
 691 012d 4C896424 		movq	%r12, 8(%rsp)
 691      08
 692 0132 498D44C4 		leaq	8(%r12,%rax,8), %rax
 692      08
 693 0137 48894424 		movq	%rax, 16(%rsp)
 693      10
 694              	.LVL70:
 695 013c 0F1F4000 		.p2align 4,,10
 696              		.p2align 3
 697              	.L59:
 361:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 698              		.loc 1 361 7 is_stmt 1 view .LVU223
 361:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 699              		.loc 1 361 18 is_stmt 0 view .LVU224
 700 0140 488B4424 		movq	8(%rsp), %rax
 700      08
 362:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num < compptr->width_in_blocks; block_num++) {
 701              		.loc 1 362 18 view .LVU225
 702 0145 4531E4   		xorl	%r12d, %r12d
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 703              		.loc 1 363 22 view .LVU226
 704 0148 4531FF   		xorl	%r15d, %r15d
 361:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 705              		.loc 1 361 18 view .LVU227
 706 014b 488B28   		movq	(%rax), %rbp
 707              	.LVL71:
 362:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num < compptr->width_in_blocks; block_num++) {
 708              		.loc 1 362 7 is_stmt 1 view .LVU228
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 709              		.loc 1 363 7 view .LVU229
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 710              		.loc 1 363 27 view .LVU230
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 711              		.loc 1 363 7 is_stmt 0 view .LVU231
 712 014e 418B451C 		movl	28(%r13), %eax
 713 0152 85C0     		testl	%eax, %eax
 714 0154 743A     		je	.L61
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 715              		.loc 1 363 7 view .LVU232
 716 0156 4C89E8   		movq	%r13, %rax
 717 0159 4989DD   		movq	%rbx, %r13
 718              	.LVL72:
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 719              		.loc 1 363 7 view .LVU233
 720 015c 4889C3   		movq	%rax, %rbx
 721              	.LVL73:
 722 015f 90       		.p2align 4,,10
 723              		.p2align 3
 724              	.L58:
 364:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			output_ptr, output_col);
 725              		.loc 1 364 2 is_stmt 1 discriminator 3 view .LVU234
 364:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			output_ptr, output_col);
 726              		.loc 1 364 3 is_stmt 0 discriminator 3 view .LVU235
 727 0160 4589E0   		movl	%r12d, %r8d
 728 0163 4889EA   		movq	%rbp, %rdx
 729 0166 488B0424 		movq	(%rsp), %rax
 730 016a 4C89E9   		movq	%r13, %rcx
 731 016d 4889DE   		movq	%rbx, %rsi
 732 0170 4C89F7   		movq	%r14, %rdi
 366:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_col += compptr->DCT_h_scaled_size;
 733              		.loc 1 366 12 discriminator 3 view .LVU236
 734 0173 4883ED80 		subq	$-128, %rbp
 735              	.LVL74:
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 736              		.loc 1 363 74 discriminator 3 view .LVU237
 737 0177 4183C701 		addl	$1, %r15d
 738              	.LVL75:
 364:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			output_ptr, output_col);
 739              		.loc 1 364 3 discriminator 3 view .LVU238
 740 017b FFD0     		call	*%rax
 741              	.LVL76:
 366:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_col += compptr->DCT_h_scaled_size;
 742              		.loc 1 366 2 is_stmt 1 discriminator 3 view .LVU239
 367:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 743              		.loc 1 367 2 discriminator 3 view .LVU240
 367:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 744              		.loc 1 367 13 is_stmt 0 discriminator 3 view .LVU241
 745 017d 44036324 		addl	36(%rbx), %r12d
 746              	.LVL77:
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 747              		.loc 1 363 65 is_stmt 1 discriminator 3 view .LVU242
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 748              		.loc 1 363 27 discriminator 3 view .LVU243
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 749              		.loc 1 363 7 is_stmt 0 discriminator 3 view .LVU244
 750 0181 44397B1C 		cmpl	%r15d, 28(%rbx)
 751 0185 77D9     		ja	.L58
 752 0187 4889D8   		movq	%rbx, %rax
 753 018a 4C89EB   		movq	%r13, %rbx
 754              	.LVL78:
 363:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) buffer_ptr,
 755              		.loc 1 363 7 discriminator 3 view .LVU245
 756 018d 4989C5   		movq	%rax, %r13
 757              	.LVL79:
 758              	.L61:
 369:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 759              		.loc 1 369 7 is_stmt 1 view .LVU246
 369:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 760              		.loc 1 369 28 is_stmt 0 view .LVU247
 761 0190 49634528 		movslq	40(%r13), %rax
 762 0194 48834424 		addq	$8, 8(%rsp)
 762      0808
 369:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 763              		.loc 1 369 18 view .LVU248
 764 019a 488D1CC3 		leaq	(%rbx,%rax,8), %rbx
 765              	.LVL80:
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 766              		.loc 1 360 49 is_stmt 1 view .LVU249
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 767              		.loc 1 360 25 view .LVU250
 768 019e 488B4424 		movq	8(%rsp), %rax
 768      08
 360:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 769              		.loc 1 360 5 is_stmt 0 view .LVU251
 770 01a3 48394424 		cmpq	%rax, 16(%rsp)
 770      10
 771 01a8 7596     		jne	.L59
 772 01aa 418B8EB8 		movl	184(%r14), %ecx
 772      000000
 773 01b1 E9EAFEFF 		jmp	.L55
 773      FF
 774              	.LVL81:
 775              	.L54:
 373:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 776              		.loc 1 373 3 is_stmt 1 view .LVU252
 373:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 777              		.loc 1 373 7 is_stmt 0 view .LVU253
 778 01b6 83C101   		addl	$1, %ecx
 374:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 779              		.loc 1 374 12 view .LVU254
 780 01b9 31C0     		xorl	%eax, %eax
 781 01bb 413B8EB0 		cmpl	432(%r14), %ecx
 781      010000
 373:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 782              		.loc 1 373 6 view .LVU255
 783 01c2 41898EB8 		movl	%ecx, 184(%r14)
 783      000000
 374:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 784              		.loc 1 374 12 view .LVU256
 785 01c9 0F93C0   		setnb	%al
 786              		.loc 1 376 1 view .LVU257
 787 01cc 4883C438 		addq	$56, %rsp
 788              		.cfi_remember_state
 789              		.cfi_def_cfa_offset 56
 790 01d0 5B       		popq	%rbx
 791              		.cfi_def_cfa_offset 48
 374:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 792              		.loc 1 374 12 view .LVU258
 793 01d1 83C003   		addl	$3, %eax
 794              		.loc 1 376 1 view .LVU259
 795 01d4 5D       		popq	%rbp
 796              		.cfi_def_cfa_offset 40
 797 01d5 415C     		popq	%r12
 798              		.cfi_def_cfa_offset 32
 799 01d7 415D     		popq	%r13
 800              		.cfi_def_cfa_offset 24
 801              	.LVL82:
 802              		.loc 1 376 1 view .LVU260
 803 01d9 415E     		popq	%r14
 804              		.cfi_def_cfa_offset 16
 805              	.LVL83:
 806              		.loc 1 376 1 view .LVU261
 807 01db 415F     		popq	%r15
 808              		.cfi_def_cfa_offset 8
 809 01dd C3       		ret
 810              	.LVL84:
 811              	.L56:
 812              		.cfi_restore_state
 354:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 813              		.loc 1 354 7 is_stmt 1 view .LVU262
 354:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 814              		.loc 1 354 62 is_stmt 0 view .LVU263
 815 01de 418B750C 		movl	12(%r13), %esi
 354:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 816              		.loc 1 354 53 view .LVU264
 817 01e2 418B4520 		movl	32(%r13), %eax
 818              	.LVL85:
 354:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 819              		.loc 1 354 53 view .LVU265
 820 01e6 31D2     		xorl	%edx, %edx
 821 01e8 F7F6     		divl	%esi
 822              	.LVL86:
 355:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 823              		.loc 1 355 7 is_stmt 1 view .LVU266
 355:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 824              		.loc 1 355 39 is_stmt 0 view .LVU267
 825 01ea 89F0     		movl	%esi, %eax
 826 01ec 85D2     		testl	%edx, %edx
 827 01ee 0F45C2   		cmovne	%edx, %eax
 828 01f1 E90FFFFF 		jmp	.L57
 828      FF
 829              		.cfi_endproc
 830              	.LFE57:
 832              		.section	.text.start_output_pass,"ax",@progbits
 833              		.p2align 4
 835              	start_output_pass:
 836              	.LVL87:
 837              	.LFB53:
 121:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 838              		.loc 1 121 1 is_stmt 1 view -0
 839              		.cfi_startproc
 121:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 840              		.loc 1 121 1 is_stmt 0 view .LVU269
 841 0000 F30F1EFA 		endbr64
 123:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 842              		.loc 1 123 3 is_stmt 1 view .LVU270
 121:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 843              		.loc 1 121 1 is_stmt 0 view .LVU271
 844 0004 53       		pushq	%rbx
 845              		.cfi_def_cfa_offset 16
 846              		.cfi_offset 3, -16
 847 0005 4883EC10 		subq	$16, %rsp
 848              		.cfi_def_cfa_offset 32
 123:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 849              		.loc 1 123 15 view .LVU272
 850 0009 488B9F50 		movq	592(%rdi), %rbx
 850      020000
 851              	.LVL88:
 126:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->do_block_smoothing && smoothing_ok(cinfo))
 852              		.loc 1 126 3 is_stmt 1 view .LVU273
 126:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->do_block_smoothing && smoothing_ok(cinfo))
 853              		.loc 1 126 6 is_stmt 0 view .LVU274
 854 0010 48837B20 		cmpq	$0, 32(%rbx)
 854      00
 855 0015 7412     		je	.L77
 127:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->pub.decompress_data = decompress_smooth_data;
 856              		.loc 1 127 5 is_stmt 1 view .LVU275
 127:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->pub.decompress_data = decompress_smooth_data;
 857              		.loc 1 127 8 is_stmt 0 view .LVU276
 858 0017 8B7768   		movl	104(%rdi), %esi
 859 001a 85F6     		testl	%esi, %esi
 860 001c 7522     		jne	.L94
 861              	.LVL89:
 862              	.L78:
 130:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 863              		.loc 1 130 7 is_stmt 1 view .LVU277
 130:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 864              		.loc 1 130 33 is_stmt 0 view .LVU278
 865 001e 488D0500 		leaq	decompress_data(%rip), %rax
 865      000000
 866 0025 48894318 		movq	%rax, 24(%rbx)
 867              	.L77:
 133:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 868              		.loc 1 133 3 is_stmt 1 view .LVU279
 133:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 869              		.loc 1 133 26 is_stmt 0 view .LVU280
 870 0029 C787B800 		movl	$0, 184(%rdi)
 870      00000000 
 870      0000
 134:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 871              		.loc 1 134 1 view .LVU281
 872 0033 4883C410 		addq	$16, %rsp
 873              		.cfi_remember_state
 874              		.cfi_def_cfa_offset 16
 875 0037 5B       		popq	%rbx
 876              		.cfi_def_cfa_offset 8
 877              	.LVL90:
 134:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 878              		.loc 1 134 1 view .LVU282
 879 0038 C3       		ret
 880              	.LVL91:
 881 0039 0F1F8000 		.p2align 4,,10
 881      000000
 882              		.p2align 3
 883              	.L94:
 884              		.cfi_restore_state
 885              	.LBB30:
 886              	.LBI30:
 377:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 378:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif /* D_MULTISCAN_FILES_SUPPORTED */
 379:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 380:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 381:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 382:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 383:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 384:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * This code applies interblock smoothing as described by section K.8
 385:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * of the JPEG standard: the first 5 AC coefficients are estimated from
 386:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * the DC values of a DCT block and its 8 neighboring blocks.
 387:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * We apply smoothing only for progressive JPEG decoding, and only if
 388:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * the coefficients it can estimate are not yet known to full precision.
 389:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 390:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 391:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Natural-order array positions of the first 5 zigzag-order coefficients */
 392:fltk-1.3.4-1/jpeg/jdcoefct.c **** #define Q01_POS  1
 393:fltk-1.3.4-1/jpeg/jdcoefct.c **** #define Q10_POS  8
 394:fltk-1.3.4-1/jpeg/jdcoefct.c **** #define Q20_POS  16
 395:fltk-1.3.4-1/jpeg/jdcoefct.c **** #define Q11_POS  9
 396:fltk-1.3.4-1/jpeg/jdcoefct.c **** #define Q02_POS  2
 397:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 398:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 399:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Determine whether block smoothing is applicable and safe.
 400:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * We also latch the current states of the coef_bits[] entries for the
 401:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * AC coefficients; otherwise, if the input side of the decompressor
 402:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * advances into a new scan, we might think the coefficients are known
 403:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * more accurately than they really are.
 404:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 405:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 406:fltk-1.3.4-1/jpeg/jdcoefct.c **** LOCAL(boolean)
 407:fltk-1.3.4-1/jpeg/jdcoefct.c **** smoothing_ok (j_decompress_ptr cinfo)
 887              		.loc 1 407 1 is_stmt 1 view .LVU283
 888              	.LBB31:
 408:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 409:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 889              		.loc 1 409 3 view .LVU284
 410:fltk-1.3.4-1/jpeg/jdcoefct.c ****   boolean smoothing_useful = FALSE;
 890              		.loc 1 410 3 view .LVU285
 411:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int ci, coefi;
 891              		.loc 1 411 3 view .LVU286
 412:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jpeg_component_info *compptr;
 892              		.loc 1 412 3 view .LVU287
 413:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JQUANT_TBL * qtable;
 893              		.loc 1 413 3 view .LVU288
 414:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int * coef_bits;
 894              		.loc 1 414 3 view .LVU289
 415:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int * coef_bits_latch;
 895              		.loc 1 415 3 view .LVU290
 416:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 417:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (! cinfo->progressive_mode || cinfo->coef_bits == NULL)
 896              		.loc 1 417 3 view .LVU291
 897              		.loc 1 417 6 is_stmt 0 view .LVU292
 898 0040 8B8F3C01 		movl	316(%rdi), %ecx
 898      0000
 899 0046 85C9     		testl	%ecx, %ecx
 900 0048 74D4     		je	.L78
 901              		.loc 1 417 33 view .LVU293
 902 004a 4883BFC0 		cmpq	$0, 192(%rdi)
 902      00000000 
 903 0052 74CA     		je	.L78
 418:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return FALSE;
 419:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 420:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Allocate latch area if not already done */
 421:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (coef->coef_bits_latch == NULL)
 904              		.loc 1 421 3 is_stmt 1 view .LVU294
 905              		.loc 1 421 11 is_stmt 0 view .LVU295
 906 0054 488B83D8 		movq	216(%rbx), %rax
 906      000000
 907 005b 48635738 		movslq	56(%rdi), %rdx
 908              		.loc 1 421 6 view .LVU296
 909 005f 4885C0   		testq	%rax, %rax
 910 0062 0F84D800 		je	.L95
 910      0000
 911              	.LVL92:
 912              	.L79:
 422:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->coef_bits_latch = (int *)
 423:fltk-1.3.4-1/jpeg/jdcoefct.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 424:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				  cinfo->num_components *
 425:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				  (SAVED_COEFS * SIZEOF(int)));
 426:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef_bits_latch = coef->coef_bits_latch;
 913              		.loc 1 426 3 is_stmt 1 view .LVU297
 427:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 428:fltk-1.3.4-1/jpeg/jdcoefct.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 914              		.loc 1 428 3 view .LVU298
 915              		.loc 1 428 24 is_stmt 0 view .LVU299
 916 0068 4C8B8F30 		movq	304(%rdi), %r9
 916      010000
 917              	.LVL93:
 918              		.loc 1 428 44 is_stmt 1 view .LVU300
 919              		.loc 1 428 3 is_stmt 0 view .LVU301
 920 006f 85D2     		testl	%edx, %edx
 921 0071 7EAB     		jle	.L78
 922 0073 4983C150 		addq	$80, %r9
 923              	.LVL94:
 924              		.loc 1 428 3 view .LVU302
 925 0077 4531C0   		xorl	%r8d, %r8d
 410:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int ci, coefi;
 926              		.loc 1 410 11 view .LVU303
 927 007a 4531D2   		xorl	%r10d, %r10d
 429:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 430:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* All components' quantization values must already be latched. */
 431:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if ((qtable = compptr->quant_table) == NULL)
 432:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 433:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Verify DC & first 5 AC quantizers are nonzero to avoid zero-divide. */
 434:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (qtable->quantval[0] == 0 ||
 435:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q01_POS] == 0 ||
 436:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q10_POS] == 0 ||
 437:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q20_POS] == 0 ||
 438:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q11_POS] == 0 ||
 439:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q02_POS] == 0)
 440:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 441:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* DC values must be at least partly known for all components. */
 442:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef_bits = cinfo->coef_bits[ci];
 443:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (coef_bits[0] < 0)
 444:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 445:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Block smoothing is helpful if some AC coefficients remain inaccurate. */
 446:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (coefi = 1; coefi <= 5; coefi++) {
 447:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef_bits_latch[coefi] = coef_bits[coefi];
 448:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (coef_bits[coefi] != 0)
 449:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	smoothing_useful = TRUE;
 928              		.loc 1 449 19 view .LVU304
 929 007d 41BB0100 		movl	$1, %r11d
 929      0000
 930              	.LVL95:
 931              		.p2align 4,,10
 932 0083 0F1F4400 		.p2align 3
 932      00
 933              	.L82:
 431:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 934              		.loc 1 431 5 is_stmt 1 view .LVU305
 431:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 935              		.loc 1 431 17 is_stmt 0 view .LVU306
 936 0088 498B11   		movq	(%r9), %rdx
 937              	.LVL96:
 431:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 938              		.loc 1 431 8 view .LVU307
 939 008b 4885D2   		testq	%rdx, %rdx
 940 008e 748E     		je	.L78
 434:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q01_POS] == 0 ||
 941              		.loc 1 434 5 is_stmt 1 view .LVU308
 434:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q01_POS] == 0 ||
 942              		.loc 1 434 8 is_stmt 0 view .LVU309
 943 0090 66833A00 		cmpw	$0, (%rdx)
 944 0094 7488     		je	.L78
 434:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q01_POS] == 0 ||
 945              		.loc 1 434 34 view .LVU310
 946 0096 66837A02 		cmpw	$0, 2(%rdx)
 946      00
 947 009b 7481     		je	.L78
 435:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q10_POS] == 0 ||
 948              		.loc 1 435 33 view .LVU311
 949 009d 66837A10 		cmpw	$0, 16(%rdx)
 949      00
 950 00a2 0F8476FF 		je	.L78
 950      FFFF
 436:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q20_POS] == 0 ||
 951              		.loc 1 436 33 view .LVU312
 952 00a8 66837A20 		cmpw	$0, 32(%rdx)
 952      00
 953 00ad 0F846BFF 		je	.L78
 953      FFFF
 437:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q11_POS] == 0 ||
 954              		.loc 1 437 33 view .LVU313
 955 00b3 66837A12 		cmpw	$0, 18(%rdx)
 955      00
 956 00b8 0F8460FF 		je	.L78
 956      FFFF
 438:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	qtable->quantval[Q02_POS] == 0)
 957              		.loc 1 438 33 view .LVU314
 958 00be 66837A04 		cmpw	$0, 4(%rdx)
 958      00
 959 00c3 0F8455FF 		je	.L78
 959      FFFF
 442:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (coef_bits[0] < 0)
 960              		.loc 1 442 5 is_stmt 1 view .LVU315
 442:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (coef_bits[0] < 0)
 961              		.loc 1 442 15 is_stmt 0 view .LVU316
 962 00c9 4C89C1   		movq	%r8, %rcx
 963 00cc 48C1E108 		salq	$8, %rcx
 964 00d0 48038FC0 		addq	192(%rdi), %rcx
 964      000000
 965              	.LVL97:
 443:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 966              		.loc 1 443 5 is_stmt 1 view .LVU317
 443:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 967              		.loc 1 443 8 is_stmt 0 view .LVU318
 968 00d7 8B11     		movl	(%rcx), %edx
 969              	.LVL98:
 443:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return FALSE;
 970              		.loc 1 443 8 view .LVU319
 971 00d9 85D2     		testl	%edx, %edx
 972 00db 0F883DFF 		js	.L78
 972      FFFF
 973 00e1 BA040000 		movl	$4, %edx
 973      00
 974              	.LVL99:
 975              	.L81:
 447:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (coef_bits[coefi] != 0)
 976              		.loc 1 447 7 is_stmt 1 view .LVU320
 447:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (coef_bits[coefi] != 0)
 977              		.loc 1 447 41 is_stmt 0 view .LVU321
 978 00e6 8B3411   		movl	(%rcx,%rdx), %esi
 979              		.loc 1 449 19 view .LVU322
 980 00e9 85F6     		testl	%esi, %esi
 447:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (coef_bits[coefi] != 0)
 981              		.loc 1 447 30 view .LVU323
 982 00eb 893410   		movl	%esi, (%rax,%rdx)
 448:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	smoothing_useful = TRUE;
 983              		.loc 1 448 7 is_stmt 1 view .LVU324
 984              		.loc 1 449 19 is_stmt 0 view .LVU325
 985 00ee 450F45D3 		cmovne	%r11d, %r10d
 986              	.LVL100:
 446:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef_bits_latch[coefi] = coef_bits[coefi];
 987              		.loc 1 446 33 is_stmt 1 view .LVU326
 446:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef_bits_latch[coefi] = coef_bits[coefi];
 988              		.loc 1 446 21 view .LVU327
 989 00f2 4883C204 		addq	$4, %rdx
 446:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef_bits_latch[coefi] = coef_bits[coefi];
 990              		.loc 1 446 5 is_stmt 0 view .LVU328
 991 00f6 4883FA18 		cmpq	$24, %rdx
 992 00fa 75EA     		jne	.L81
 450:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 451:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef_bits_latch += SAVED_COEFS;
 993              		.loc 1 451 5 is_stmt 1 view .LVU329
 994              		.loc 1 451 21 is_stmt 0 view .LVU330
 995 00fc 4883C018 		addq	$24, %rax
 996              	.LVL101:
 429:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* All components' quantization values must already be latched. */
 997              		.loc 1 429 8 is_stmt 1 view .LVU331
 428:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 998              		.loc 1 428 44 view .LVU332
 999 0100 4983C001 		addq	$1, %r8
 1000              	.LVL102:
 428:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 1001              		.loc 1 428 44 is_stmt 0 view .LVU333
 1002 0104 4983C160 		addq	$96, %r9
 1003              	.LVL103:
 428:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 1004              		.loc 1 428 3 view .LVU334
 1005 0108 44394738 		cmpl	%r8d, 56(%rdi)
 1006 010c 0F8F76FF 		jg	.L82
 1006      FFFF
 1007              	.LVL104:
 428:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 1008              		.loc 1 428 3 view .LVU335
 1009              	.LBE31:
 1010              	.LBE30:
 127:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->pub.decompress_data = decompress_smooth_data;
 1011              		.loc 1 127 35 view .LVU336
 1012 0112 4585D2   		testl	%r10d, %r10d
 1013 0115 0F8403FF 		je	.L78
 1013      FFFF
 128:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 1014              		.loc 1 128 7 is_stmt 1 view .LVU337
 128:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 1015              		.loc 1 128 33 is_stmt 0 view .LVU338
 1016 011b 488D0500 		leaq	decompress_smooth_data(%rip), %rax
 1016      000000
 1017 0122 48894318 		movq	%rax, 24(%rbx)
 133:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 1018              		.loc 1 133 3 is_stmt 1 view .LVU339
 133:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 1019              		.loc 1 133 26 is_stmt 0 view .LVU340
 1020 0126 C787B800 		movl	$0, 184(%rdi)
 1020      00000000 
 1020      0000
 134:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 1021              		.loc 1 134 1 view .LVU341
 1022 0130 4883C410 		addq	$16, %rsp
 1023              		.cfi_remember_state
 1024              		.cfi_def_cfa_offset 16
 1025 0134 5B       		popq	%rbx
 1026              		.cfi_def_cfa_offset 8
 1027              	.LVL105:
 134:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 1028              		.loc 1 134 1 view .LVU342
 1029 0135 C3       		ret
 1030              	.LVL106:
 1031 0136 662E0F1F 		.p2align 4,,10
 1031      84000000 
 1031      0000
 1032              		.p2align 3
 1033              	.L95:
 1034              		.cfi_restore_state
 1035              	.LBB33:
 1036              	.LBB32:
 422:fltk-1.3.4-1/jpeg/jdcoefct.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1037              		.loc 1 422 5 is_stmt 1 view .LVU343
 423:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				  cinfo->num_components *
 1038              		.loc 1 423 8 is_stmt 0 view .LVU344
 1039 0140 488B4708 		movq	8(%rdi), %rax
 1040 0144 488D1452 		leaq	(%rdx,%rdx,2), %rdx
 1041 0148 48897C24 		movq	%rdi, 8(%rsp)
 1041      08
 1042 014d BE010000 		movl	$1, %esi
 1042      00
 1043 0152 48C1E203 		salq	$3, %rdx
 1044 0156 FF10     		call	*(%rax)
 1045              	.LVL107:
 423:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				  cinfo->num_components *
 1046              		.loc 1 423 8 view .LVU345
 1047 0158 488B7C24 		movq	8(%rsp), %rdi
 1047      08
 422:fltk-1.3.4-1/jpeg/jdcoefct.c ****       (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 1048              		.loc 1 422 27 view .LVU346
 1049 015d 488983D8 		movq	%rax, 216(%rbx)
 1049      000000
 1050 0164 8B5738   		movl	56(%rdi), %edx
 1051 0167 E9FCFEFF 		jmp	.L79
 1051      FF
 1052              	.LBE32:
 1053              	.LBE33:
 1054              		.cfi_endproc
 1055              	.LFE53:
 1057              		.section	.text.decompress_smooth_data,"ax",@progbits
 1058              		.p2align 4
 1060              	decompress_smooth_data:
 1061              	.LVL108:
 1062              	.LFB59:
 452:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 453:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 454:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return smoothing_useful;
 455:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 456:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 457:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 458:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 459:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Variant of decompress_data for use when doing block smoothing.
 460:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 461:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 462:fltk-1.3.4-1/jpeg/jdcoefct.c **** METHODDEF(int)
 463:fltk-1.3.4-1/jpeg/jdcoefct.c **** decompress_smooth_data (j_decompress_ptr cinfo, JSAMPIMAGE output_buf)
 464:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 1063              		.loc 1 464 1 is_stmt 1 view -0
 1064              		.cfi_startproc
 1065              		.loc 1 464 1 is_stmt 0 view .LVU348
 1066 0000 F30F1EFA 		endbr64
 1067 0004 4157     		pushq	%r15
 1068              		.cfi_def_cfa_offset 16
 1069              		.cfi_offset 15, -16
 1070 0006 4156     		pushq	%r14
 1071              		.cfi_def_cfa_offset 24
 1072              		.cfi_offset 14, -24
 1073 0008 4155     		pushq	%r13
 1074              		.cfi_def_cfa_offset 32
 1075              		.cfi_offset 13, -32
 1076 000a 4154     		pushq	%r12
 1077              		.cfi_def_cfa_offset 40
 1078              		.cfi_offset 12, -40
 1079 000c 55       		pushq	%rbp
 1080              		.cfi_def_cfa_offset 48
 1081              		.cfi_offset 6, -48
 1082 000d 4889FD   		movq	%rdi, %rbp
 1083 0010 53       		pushq	%rbx
 1084              		.cfi_def_cfa_offset 56
 1085              		.cfi_offset 3, -56
 1086 0011 4881EC88 		subq	$392, %rsp
 1086      010000
 1087              		.cfi_def_cfa_offset 448
 465:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 466:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 1088              		.loc 1 466 35 view .LVU349
 1089 0018 8B9FB001 		movl	432(%rdi), %ebx
 1089      0000
 464:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 1090              		.loc 1 464 1 view .LVU350
 1091 001e 48897C24 		movq	%rdi, 72(%rsp)
 1091      48
 1092 0023 4889B424 		movq	%rsi, 224(%rsp)
 1092      E0000000 
 1093 002b 64488B04 		movq	%fs:40, %rax
 1093      25280000 
 1093      00
 1094 0034 48898424 		movq	%rax, 376(%rsp)
 1094      78010000 
 1095 003c 31C0     		xorl	%eax, %eax
 465:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 1096              		.loc 1 465 3 is_stmt 1 view .LVU351
 465:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 1097              		.loc 1 465 15 is_stmt 0 view .LVU352
 1098 003e 488B8750 		movq	592(%rdi), %rax
 1098      020000
 1099 0045 48898424 		movq	%rax, 216(%rsp)
 1099      D8000000 
 1100              	.LVL109:
 1101              		.loc 1 466 3 is_stmt 1 view .LVU353
 467:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION block_num, last_block_column;
 1102              		.loc 1 467 3 view .LVU354
 468:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int ci, block_row, block_rows, access_rows;
 1103              		.loc 1 468 3 view .LVU355
 469:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKARRAY buffer;
 1104              		.loc 1 469 3 view .LVU356
 470:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCKROW buffer_ptr, prev_block_row, next_block_row;
 1105              		.loc 1 470 3 view .LVU357
 471:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JSAMPARRAY output_ptr;
 1106              		.loc 1 471 3 view .LVU358
 472:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION output_col;
 1107              		.loc 1 472 3 view .LVU359
 473:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jpeg_component_info *compptr;
 1108              		.loc 1 473 3 view .LVU360
 474:fltk-1.3.4-1/jpeg/jdcoefct.c ****   inverse_DCT_method_ptr inverse_DCT;
 1109              		.loc 1 474 3 view .LVU361
 475:fltk-1.3.4-1/jpeg/jdcoefct.c ****   boolean first_row, last_row;
 1110              		.loc 1 475 3 view .LVU362
 476:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JBLOCK workspace;
 1111              		.loc 1 476 3 view .LVU363
 477:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int *coef_bits;
 1112              		.loc 1 477 3 view .LVU364
 478:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JQUANT_TBL *quanttbl;
 1113              		.loc 1 478 3 view .LVU365
 479:fltk-1.3.4-1/jpeg/jdcoefct.c ****   INT32 Q00,Q01,Q02,Q10,Q11,Q20, num;
 1114              		.loc 1 479 3 view .LVU366
 480:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int DC1,DC2,DC3,DC4,DC5,DC6,DC7,DC8,DC9;
 1115              		.loc 1 480 3 view .LVU367
 481:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int Al, pred;
 1116              		.loc 1 481 3 view .LVU368
 482:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 483:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Force some input to be done if we are getting ahead of the input. */
 484:fltk-1.3.4-1/jpeg/jdcoefct.c ****   while (cinfo->input_scan_number <= cinfo->output_scan_number &&
 1117              		.loc 1 484 3 view .LVU369
 1118              		.loc 1 484 9 is_stmt 0 view .LVU370
 1119 004d EB0E     		jmp	.L97
 1120              	.LVL110:
 1121 004f 90       		.p2align 4,,10
 1122              		.p2align 3
 1123              	.L98:
 485:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ! cinfo->inputctl->eoi_reached) {
 486:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->input_scan_number == cinfo->output_scan_number) {
 487:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* If input is working on current scan, we ordinarily want it to
 488:fltk-1.3.4-1/jpeg/jdcoefct.c ****        * have completed the current row.  But if input scan is DC,
 489:fltk-1.3.4-1/jpeg/jdcoefct.c ****        * we want it to keep one row ahead so that next block row's DC
 490:fltk-1.3.4-1/jpeg/jdcoefct.c ****        * values are up to date.
 491:fltk-1.3.4-1/jpeg/jdcoefct.c ****        */
 492:fltk-1.3.4-1/jpeg/jdcoefct.c ****       JDIMENSION delta = (cinfo->Ss == 0) ? 1 : 0;
 493:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (cinfo->input_iMCU_row > cinfo->output_iMCU_row+delta)
 494:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	break;
 495:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 496:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if ((*cinfo->inputctl->consume_input)(cinfo) == JPEG_SUSPENDED)
 1124              		.loc 1 496 5 is_stmt 1 view .LVU371
 1125              		.loc 1 496 10 is_stmt 0 view .LVU372
 1126 0050 4889EF   		movq	%rbp, %rdi
 1127 0053 FF11     		call	*(%rcx)
 1128              	.LVL111:
 1129              		.loc 1 496 8 view .LVU373
 1130 0055 85C0     		testl	%eax, %eax
 1131 0057 0F84D607 		je	.L96
 1131      0000
 1132              	.L97:
 484:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ! cinfo->inputctl->eoi_reached) {
 1133              		.loc 1 484 9 is_stmt 1 view .LVU374
 484:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ! cinfo->inputctl->eoi_reached) {
 1134              		.loc 1 484 15 is_stmt 0 view .LVU375
 1135 005d 8B85AC00 		movl	172(%rbp), %eax
 1135      0000
 484:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ! cinfo->inputctl->eoi_reached) {
 1136              		.loc 1 484 43 view .LVU376
 1137 0063 8B95B400 		movl	180(%rbp), %edx
 1137      0000
 484:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ! cinfo->inputctl->eoi_reached) {
 1138              		.loc 1 484 9 view .LVU377
 1139 0069 39D0     		cmpl	%edx, %eax
 1140 006b 0F8FE707 		jg	.L103
 1140      0000
 485:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ! cinfo->inputctl->eoi_reached) {
 1141              		.loc 1 485 10 discriminator 1 view .LVU378
 1142 0071 488B8D60 		movq	608(%rbp), %rcx
 1142      020000
 484:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ! cinfo->inputctl->eoi_reached) {
 1143              		.loc 1 484 64 discriminator 1 view .LVU379
 1144 0078 448B4124 		movl	36(%rcx), %r8d
 1145 007c 4585C0   		testl	%r8d, %r8d
 1146 007f 0F85D307 		jne	.L103
 1146      0000
 486:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* If input is working on current scan, we ordinarily want it to
 1147              		.loc 1 486 5 is_stmt 1 view .LVU380
 486:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* If input is working on current scan, we ordinarily want it to
 1148              		.loc 1 486 8 is_stmt 0 view .LVU381
 1149 0085 39D0     		cmpl	%edx, %eax
 1150 0087 75C7     		jne	.L98
 1151              	.LBB34:
 492:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (cinfo->input_iMCU_row > cinfo->output_iMCU_row+delta)
 1152              		.loc 1 492 7 is_stmt 1 view .LVU382
 1153              	.LVL112:
 493:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	break;
 1154              		.loc 1 493 7 view .LVU383
 492:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (cinfo->input_iMCU_row > cinfo->output_iMCU_row+delta)
 1155              		.loc 1 492 47 is_stmt 0 view .LVU384
 1156 0089 448B8D1C 		movl	540(%rbp), %r9d
 1156      020000
 1157 0090 31C0     		xorl	%eax, %eax
 493:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	break;
 1158              		.loc 1 493 40 view .LVU385
 1159 0092 8BB5B800 		movl	184(%rbp), %esi
 1159      0000
 492:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (cinfo->input_iMCU_row > cinfo->output_iMCU_row+delta)
 1160              		.loc 1 492 47 view .LVU386
 1161 0098 4585C9   		testl	%r9d, %r9d
 1162 009b 0F94C0   		sete	%al
 493:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	break;
 1163              		.loc 1 493 57 view .LVU387
 1164 009e 01F0     		addl	%esi, %eax
 493:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	break;
 1165              		.loc 1 493 10 view .LVU388
 1166 00a0 3985B000 		cmpl	%eax, 176(%rbp)
 1166      0000
 1167 00a6 76A8     		jbe	.L98
 1168              	.LVL113:
 1169              	.L99:
 493:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	break;
 1170              		.loc 1 493 10 view .LVU389
 1171              	.LBE34:
 497:fltk-1.3.4-1/jpeg/jdcoefct.c ****       return JPEG_SUSPENDED;
 498:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 499:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 500:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* OK, output from the virtual arrays. */
 501:fltk-1.3.4-1/jpeg/jdcoefct.c ****   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 1172              		.loc 1 501 3 is_stmt 1 view .LVU390
 1173              		.loc 1 501 24 is_stmt 0 view .LVU391
 1174 00a8 488B4424 		movq	72(%rsp), %rax
 1174      48
 1175              		.loc 1 501 3 view .LVU392
 1176 00ad 8B7838   		movl	56(%rax), %edi
 1177              		.loc 1 501 24 view .LVU393
 1178 00b0 4C8BA830 		movq	304(%rax), %r13
 1178      010000
 1179              	.LVL114:
 1180              		.loc 1 501 44 is_stmt 1 view .LVU394
 1181              		.loc 1 501 3 is_stmt 0 view .LVU395
 1182 00b7 85FF     		testl	%edi, %edi
 1183 00b9 0F8E5707 		jle	.L104
 1183      0000
 466:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION block_num, last_block_column;
 1184              		.loc 1 466 14 view .LVU396
 1185 00bf 8D43FF   		leal	-1(%rbx), %eax
 1186 00c2 4C8DA424 		leaq	240(%rsp), %r12
 1186      F0000000 
 1187 00ca 48C78424 		movq	$0, 208(%rsp)
 1187      D0000000 
 1187      00000000 
 1188 00d6 898424EC 		movl	%eax, 236(%rsp)
 1188      000000
 1189 00dd 4C89E0   		movq	%r12, %rax
 1190 00e0 4D89EC   		movq	%r13, %r12
 1191              		.loc 1 501 11 view .LVU397
 1192 00e3 C78424C8 		movl	$0, 200(%rsp)
 1192      00000000 
 1192      000000
 1193 00ee 4989C5   		movq	%rax, %r13
 1194              	.LVL115:
 1195              		.loc 1 501 11 view .LVU398
 1196 00f1 EB2F     		jmp	.L138
 1197              	.LVL116:
 1198              		.p2align 4,,10
 1199 00f3 0F1F4400 		.p2align 3
 1199      00
 1200              	.L105:
 502:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 1201              		.loc 1 502 8 is_stmt 1 view .LVU399
 501:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 1202              		.loc 1 501 3 is_stmt 0 view .LVU400
 1203 00f8 488B5C24 		movq	72(%rsp), %rbx
 1203      48
 1204              		.loc 1 502 10 view .LVU401
 1205 00fd 838424C8 		addl	$1, 200(%rsp)
 1205      00000001 
 1206              	.LVL117:
 1207              		.loc 1 502 21 view .LVU402
 1208 0105 4983C460 		addq	$96, %r12
 1209              	.LVL118:
 1210              		.loc 1 502 21 view .LVU403
 1211 0109 48838424 		addq	$8, 208(%rsp)
 1211      D0000000 
 1211      08
 1212              		.loc 1 502 10 view .LVU404
 1213 0112 8B8424C8 		movl	200(%rsp), %eax
 1213      000000
 1214              	.LVL119:
 501:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 1215              		.loc 1 501 44 is_stmt 1 view .LVU405
 501:fltk-1.3.4-1/jpeg/jdcoefct.c ****        ci++, compptr++) {
 1216              		.loc 1 501 3 is_stmt 0 view .LVU406
 1217 0119 394338   		cmpl	%eax, 56(%rbx)
 1218 011c 0F8EF406 		jle	.L104
 1218      0000
 1219              	.LVL120:
 1220              	.L138:
 503:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Don't bother to IDCT an uninteresting component. */
 504:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (! compptr->component_needed)
 1221              		.loc 1 504 5 is_stmt 1 view .LVU407
 1222              		.loc 1 504 8 is_stmt 0 view .LVU408
 1223 0122 418B4C24 		movl	52(%r12), %ecx
 1223      34
 1224 0127 85C9     		testl	%ecx, %ecx
 1225 0129 74CD     		je	.L105
 505:fltk-1.3.4-1/jpeg/jdcoefct.c ****       continue;
 506:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Count non-dummy DCT block rows in this iMCU row. */
 507:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->output_iMCU_row < last_iMCU_row) {
 1226              		.loc 1 507 5 is_stmt 1 view .LVU409
 1227 012b 418B4C24 		movl	12(%r12), %ecx
 1227      0C
 1228              		.loc 1 507 8 is_stmt 0 view .LVU410
 1229 0130 39B424EC 		cmpl	%esi, 236(%rsp)
 1229      000000
 1230 0137 0F86B506 		jbe	.L106
 1230      0000
 508:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = compptr->v_samp_factor;
 1231              		.loc 1 508 7 is_stmt 1 view .LVU411
 1232              	.LVL121:
 509:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = block_rows * 2; /* this and next iMCU row */
 1233              		.loc 1 509 7 view .LVU412
 510:fltk-1.3.4-1/jpeg/jdcoefct.c ****       last_row = FALSE;
 1234              		.loc 1 510 16 is_stmt 0 view .LVU413
 1235 013d C78424BC 		movl	$0, 188(%rsp)
 1235      00000000 
 1235      000000
 509:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = block_rows * 2; /* this and next iMCU row */
 1236              		.loc 1 509 19 view .LVU414
 1237 0148 448D0C09 		leal	(%rcx,%rcx), %r9d
 1238              	.LVL122:
 1239              		.loc 1 510 7 is_stmt 1 view .LVU415
 508:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = compptr->v_samp_factor;
 1240              		.loc 1 508 18 is_stmt 0 view .LVU416
 1241 014c 89CB     		movl	%ecx, %ebx
 1242              	.LVL123:
 1243              	.L107:
 511:fltk-1.3.4-1/jpeg/jdcoefct.c ****     } else {
 512:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* NB: can't use last_row_height here; it is input-side-dependent! */
 513:fltk-1.3.4-1/jpeg/jdcoefct.c ****       block_rows = (int) (compptr->height_in_blocks % compptr->v_samp_factor);
 514:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 515:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = block_rows; /* this iMCU row only */
 516:fltk-1.3.4-1/jpeg/jdcoefct.c ****       last_row = TRUE;
 517:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 518:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Align the virtual buffer for this component. */
 519:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->output_iMCU_row > 0) {
 1244              		.loc 1 519 5 is_stmt 1 view .LVU417
 1245 014e 488B7C24 		movq	72(%rsp), %rdi
 1245      48
 1246 0153 488B9424 		movq	216(%rsp), %rdx
 1246      D8000000 
 1247 015b 4C8B9424 		movq	208(%rsp), %r10
 1247      D0000000 
 1248 0163 488B4708 		movq	8(%rdi), %rax
 1249 0167 4E8B9412 		movq	136(%rdx,%r10), %r10
 1249      88000000 
 1250 016f 488B4040 		movq	64(%rax), %rax
 1251              		.loc 1 519 8 is_stmt 0 view .LVU418
 1252 0173 85F6     		testl	%esi, %esi
 1253 0175 0F845506 		je	.L108
 1253      0000
 520:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows += compptr->v_samp_factor; /* prior iMCU row too */
 1254              		.loc 1 520 7 is_stmt 1 view .LVU419
 1255              	.LVL124:
 521:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer = (*cinfo->mem->access_virt_barray)
 1256              		.loc 1 521 7 view .LVU420
 520:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows += compptr->v_samp_factor; /* prior iMCU row too */
 1257              		.loc 1 520 19 is_stmt 0 view .LVU421
 1258 017b 4101C9   		addl	%ecx, %r9d
 1259              	.LVL125:
 522:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, coef->whole_image[ci],
 523:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 (cinfo->output_iMCU_row - 1) * compptr->v_samp_factor,
 1260              		.loc 1 523 27 view .LVU422
 1261 017e 8D56FF   		leal	-1(%rsi), %edx
 521:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer = (*cinfo->mem->access_virt_barray)
 1262              		.loc 1 521 17 view .LVU423
 1263 0181 4531C0   		xorl	%r8d, %r8d
 1264 0184 4C89D6   		movq	%r10, %rsi
 1265 0187 0FAFD1   		imull	%ecx, %edx
 1266 018a 4489C9   		movl	%r9d, %ecx
 1267 018d FFD0     		call	*%rax
 1268              	.LVL126:
 524:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 (JDIMENSION) access_rows, FALSE);
 525:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer += compptr->v_samp_factor;	/* point to current iMCU row */
 1269              		.loc 1 525 7 is_stmt 1 view .LVU424
 1270              		.loc 1 525 24 is_stmt 0 view .LVU425
 1271 018f 49635424 		movslq	12(%r12), %rdx
 1271      0C
 526:fltk-1.3.4-1/jpeg/jdcoefct.c ****       first_row = FALSE;
 1272              		.loc 1 526 17 view .LVU426
 1273 0194 4531D2   		xorl	%r10d, %r10d
 525:fltk-1.3.4-1/jpeg/jdcoefct.c ****       first_row = FALSE;
 1274              		.loc 1 525 14 view .LVU427
 1275 0197 488D04D0 		leaq	(%rax,%rdx,8), %rax
 1276              	.LVL127:
 525:fltk-1.3.4-1/jpeg/jdcoefct.c ****       first_row = FALSE;
 1277              		.loc 1 525 14 view .LVU428
 1278 019b 48894424 		movq	%rax, 96(%rsp)
 1278      60
 1279              	.LVL128:
 1280              		.loc 1 526 7 is_stmt 1 view .LVU429
 1281              	.L109:
 527:fltk-1.3.4-1/jpeg/jdcoefct.c ****     } else {
 528:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer = (*cinfo->mem->access_virt_barray)
 529:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, coef->whole_image[ci],
 530:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 (JDIMENSION) 0, (JDIMENSION) access_rows, FALSE);
 531:fltk-1.3.4-1/jpeg/jdcoefct.c ****       first_row = TRUE;
 532:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 533:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Fetch component-dependent info */
 534:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef_bits = coef->coef_bits_latch + (ci * SAVED_COEFS);
 1282              		.loc 1 534 5 view .LVU430
 1283              		.loc 1 534 15 is_stmt 0 view .LVU431
 1284 01a0 4C8BB424 		movq	208(%rsp), %r14
 1284      D0000000 
 1285 01a8 488B8424 		movq	216(%rsp), %rax
 1285      D8000000 
 535:fltk-1.3.4-1/jpeg/jdcoefct.c ****     quanttbl = compptr->quant_table;
 536:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q00 = quanttbl->quantval[0];
 537:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q01 = quanttbl->quantval[Q01_POS];
 538:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q10 = quanttbl->quantval[Q10_POS];
 539:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q20 = quanttbl->quantval[Q20_POS];
 540:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q11 = quanttbl->quantval[Q11_POS];
 541:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q02 = quanttbl->quantval[Q02_POS];
 542:fltk-1.3.4-1/jpeg/jdcoefct.c ****     inverse_DCT = cinfo->idct->inverse_DCT[ci];
 1286              		.loc 1 542 17 view .LVU432
 1287 01b0 4C639C24 		movslq	200(%rsp), %r11
 1287      C8000000 
 534:fltk-1.3.4-1/jpeg/jdcoefct.c ****     quanttbl = compptr->quant_table;
 1288              		.loc 1 534 15 view .LVU433
 1289 01b8 4F8D0C76 		leaq	(%r14,%r14,2), %r9
 1290 01bc 4C0388D8 		addq	216(%rax), %r9
 1290      000000
 535:fltk-1.3.4-1/jpeg/jdcoefct.c ****     quanttbl = compptr->quant_table;
 1291              		.loc 1 535 14 view .LVU434
 1292 01c3 498B4424 		movq	80(%r12), %rax
 1292      50
 534:fltk-1.3.4-1/jpeg/jdcoefct.c ****     quanttbl = compptr->quant_table;
 1293              		.loc 1 534 15 view .LVU435
 1294 01c8 4D89CF   		movq	%r9, %r15
 1295              	.LVL129:
 535:fltk-1.3.4-1/jpeg/jdcoefct.c ****     quanttbl = compptr->quant_table;
 1296              		.loc 1 535 5 is_stmt 1 view .LVU436
 536:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q01 = quanttbl->quantval[Q01_POS];
 1297              		.loc 1 536 5 view .LVU437
 1298              		.loc 1 542 17 is_stmt 0 view .LVU438
 1299 01cb 4C8B4C24 		movq	72(%rsp), %r9
 1299      48
 1300              	.LVL130:
 536:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q01 = quanttbl->quantval[Q01_POS];
 1301              		.loc 1 536 9 view .LVU439
 1302 01d0 0FB710   		movzwl	(%rax), %edx
 537:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q10 = quanttbl->quantval[Q10_POS];
 1303              		.loc 1 537 9 view .LVU440
 1304 01d3 0FB77802 		movzwl	2(%rax), %edi
 1305              		.loc 1 542 17 view .LVU441
 1306 01d7 4D8B8178 		movq	632(%r9), %r8
 1306      020000
 538:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q20 = quanttbl->quantval[Q20_POS];
 1307              		.loc 1 538 9 view .LVU442
 1308 01de 0FB77010 		movzwl	16(%rax), %esi
 536:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q01 = quanttbl->quantval[Q01_POS];
 1309              		.loc 1 536 9 view .LVU443
 1310 01e2 48895424 		movq	%rdx, 64(%rsp)
 1310      40
 1311              	.LVL131:
 537:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q10 = quanttbl->quantval[Q10_POS];
 1312              		.loc 1 537 5 is_stmt 1 view .LVU444
 538:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q20 = quanttbl->quantval[Q20_POS];
 1313              		.loc 1 538 5 view .LVU445
 539:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q11 = quanttbl->quantval[Q11_POS];
 1314              		.loc 1 539 5 view .LVU446
 539:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q11 = quanttbl->quantval[Q11_POS];
 1315              		.loc 1 539 9 is_stmt 0 view .LVU447
 1316 01e7 0FB74820 		movzwl	32(%rax), %ecx
 1317              	.LVL132:
 540:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q02 = quanttbl->quantval[Q02_POS];
 1318              		.loc 1 540 5 is_stmt 1 view .LVU448
 1319              		.loc 1 542 17 is_stmt 0 view .LVU449
 1320 01eb 4F8B4CD8 		movq	8(%r8,%r11,8), %r9
 1320      08
 540:fltk-1.3.4-1/jpeg/jdcoefct.c ****     Q02 = quanttbl->quantval[Q02_POS];
 1321              		.loc 1 540 9 view .LVU450
 1322 01f0 0FB75012 		movzwl	18(%rax), %edx
 1323              	.LVL133:
 541:fltk-1.3.4-1/jpeg/jdcoefct.c ****     inverse_DCT = cinfo->idct->inverse_DCT[ci];
 1324              		.loc 1 541 5 is_stmt 1 view .LVU451
 541:fltk-1.3.4-1/jpeg/jdcoefct.c ****     inverse_DCT = cinfo->idct->inverse_DCT[ci];
 1325              		.loc 1 541 9 is_stmt 0 view .LVU452
 1326 01f4 0FB74004 		movzwl	4(%rax), %eax
 1327              	.LVL134:
 1328              		.loc 1 542 5 is_stmt 1 view .LVU453
 1329              		.loc 1 542 17 is_stmt 0 view .LVU454
 1330 01f8 4C894C24 		movq	%r9, 80(%rsp)
 1330      50
 1331              	.LVL135:
 543:fltk-1.3.4-1/jpeg/jdcoefct.c ****     output_ptr = output_buf[ci];
 1332              		.loc 1 543 5 is_stmt 1 view .LVU455
 1333              		.loc 1 543 16 is_stmt 0 view .LVU456
 1334 01fd 4C8B8C24 		movq	224(%rsp), %r9
 1334      E0000000 
 1335              	.LVL136:
 1336              		.loc 1 543 16 view .LVU457
 1337 0205 4F8B0C31 		movq	(%r9,%r14), %r9
 1338 0209 4C894C24 		movq	%r9, 56(%rsp)
 1338      38
 1339              	.LVL137:
 544:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Loop over all DCT blocks to be processed. */
 545:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (block_row = 0; block_row < block_rows; block_row++) {
 1340              		.loc 1 545 5 is_stmt 1 view .LVU458
 1341              		.loc 1 545 25 view .LVU459
 1342              		.loc 1 545 5 is_stmt 0 view .LVU460
 1343 020e 85DB     		testl	%ebx, %ebx
 1344 0210 0F8EAA05 		jle	.L176
 1344      0000
 546:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 547:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (first_row && block_row == 0)
 548:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	prev_block_row = buffer_ptr;
 549:fltk-1.3.4-1/jpeg/jdcoefct.c ****       else
 550:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	prev_block_row = buffer[block_row-1];
 551:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (last_row && block_row == block_rows-1)
 552:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	next_block_row = buffer_ptr;
 553:fltk-1.3.4-1/jpeg/jdcoefct.c ****       else
 554:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	next_block_row = buffer[block_row+1];
 555:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* We fetch the surrounding DC values using a sliding-register approach.
 556:fltk-1.3.4-1/jpeg/jdcoefct.c ****        * Initialize all nine here so as to do the right thing on narrow pics.
 557:fltk-1.3.4-1/jpeg/jdcoefct.c ****        */
 558:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC1 = DC2 = DC3 = (int) prev_block_row[0][0];
 559:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC4 = DC5 = DC6 = (int) buffer_ptr[0][0];
 560:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC7 = DC8 = DC9 = (int) next_block_row[0][0];
 561:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 562:fltk-1.3.4-1/jpeg/jdcoefct.c ****       last_block_column = compptr->width_in_blocks - 1;
 563:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num <= last_block_column; block_num++) {
 564:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 565:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	jcopy_block_row(buffer_ptr, (JBLOCKROW) workspace, (JDIMENSION) 1);
 566:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Update DC values */
 567:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	if (block_num < last_block_column) {
 568:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC3 = (int) prev_block_row[1][0];
 569:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC6 = (int) buffer_ptr[1][0];
 570:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC9 = (int) next_block_row[1][0];
 571:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 572:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Compute coefficient estimates per K.8.
 573:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 * An estimate is applied only if coefficient is still zero,
 574:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 * and is not known to be fully accurate.
 575:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 */
 576:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* AC01 */
 577:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	if ((Al=coef_bits[1]) != 0 && workspace[1] == 0) {
 578:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC4 - DC6);
 579:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 580:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q01<<7) + num) / (Q01<<8));
 581:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 582:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 583:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q01<<7) - num) / (Q01<<8));
 585:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 586:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 587:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 588:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 589:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  workspace[1] = (JCOEF) pred;
 590:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 591:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* AC10 */
 592:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	if ((Al=coef_bits[2]) != 0 && workspace[8] == 0) {
 593:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC2 - DC8);
 594:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 595:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q10<<7) + num) / (Q10<<8));
 596:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 597:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 598:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q10<<7) - num) / (Q10<<8));
 600:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 601:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 602:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 603:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 604:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  workspace[8] = (JCOEF) pred;
 605:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 606:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* AC20 */
 607:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	if ((Al=coef_bits[3]) != 0 && workspace[16] == 0) {
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC2 + DC8 - 2*DC5);
 609:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 610:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q20<<7) + num) / (Q20<<8));
 611:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 612:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 613:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q20<<7) - num) / (Q20<<8));
 615:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 616:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 617:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 618:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 619:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  workspace[16] = (JCOEF) pred;
 620:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 621:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* AC11 */
 622:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	if ((Al=coef_bits[4]) != 0 && workspace[9] == 0) {
 623:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 5 * Q00 * (DC1 - DC3 - DC7 + DC9);
 624:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 625:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q11<<7) + num) / (Q11<<8));
 626:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 627:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 628:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q11<<7) - num) / (Q11<<8));
 630:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 631:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 632:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 633:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 634:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  workspace[9] = (JCOEF) pred;
 635:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 636:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* AC02 */
 637:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	if ((Al=coef_bits[5]) != 0 && workspace[2] == 0) {
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC4 + DC6 - 2*DC5);
 639:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 640:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q02<<7) + num) / (Q02<<8));
 641:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 642:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 643:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 644:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q02<<7) - num) / (Q02<<8));
 1345              		.loc 1 644 43 view .LVU461
 1346 0216 48C74424 		movq	$0, 88(%rsp)
 1346      58000000 
 1346      00
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1347              		.loc 1 584 25 view .LVU462
 1348 021f 4989F9   		movq	%rdi, %r9
 1349              	.LVL138:
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1350              		.loc 1 584 43 view .LVU463
 1351 0222 48C1E708 		salq	$8, %rdi
 1352              	.LVL139:
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1353              		.loc 1 584 43 view .LVU464
 1354 0226 4D89FE   		movq	%r15, %r14
 1355              	.LVL140:
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1356              		.loc 1 584 43 view .LVU465
 1357 0229 48897C24 		movq	%rdi, 112(%rsp)
 1357      70
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1358              		.loc 1 599 25 view .LVU466
 1359 022e 4889F7   		movq	%rsi, %rdi
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1360              		.loc 1 584 25 view .LVU467
 1361 0231 49C1E107 		salq	$7, %r9
 1362              	.LVL141:
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1363              		.loc 1 599 25 view .LVU468
 1364 0235 48C1E707 		salq	$7, %rdi
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1365              		.loc 1 599 43 view .LVU469
 1366 0239 48C1E608 		salq	$8, %rsi
 1367              	.LVL142:
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1368              		.loc 1 584 25 view .LVU470
 1369 023d 4C894C24 		movq	%r9, 104(%rsp)
 1369      68
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1370              		.loc 1 599 25 view .LVU471
 1371 0242 48897C24 		movq	%rdi, 120(%rsp)
 1371      78
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1372              		.loc 1 614 25 view .LVU472
 1373 0247 4889CF   		movq	%rcx, %rdi
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1374              		.loc 1 614 43 view .LVU473
 1375 024a 48C1E108 		salq	$8, %rcx
 1376              	.LVL143:
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1377              		.loc 1 614 25 view .LVU474
 1378 024e 48C1E707 		salq	$7, %rdi
 1379              	.LVL144:
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1380              		.loc 1 599 43 view .LVU475
 1381 0252 4889B424 		movq	%rsi, 128(%rsp)
 1381      80000000 
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1382              		.loc 1 614 25 view .LVU476
 1383 025a 4889BC24 		movq	%rdi, 136(%rsp)
 1383      88000000 
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1384              		.loc 1 629 25 view .LVU477
 1385 0262 4889D7   		movq	%rdx, %rdi
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1386              		.loc 1 629 43 view .LVU478
 1387 0265 48C1E208 		salq	$8, %rdx
 1388              	.LVL145:
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1389              		.loc 1 629 43 view .LVU479
 1390 0269 48899424 		movq	%rdx, 160(%rsp)
 1390      A0000000 
 1391              		.loc 1 644 25 view .LVU480
 1392 0271 4889C2   		movq	%rax, %rdx
 1393              		.loc 1 644 43 view .LVU481
 1394 0274 48C1E008 		salq	$8, %rax
 1395              	.LVL146:
 1396              		.loc 1 644 43 view .LVU482
 1397 0278 48898424 		movq	%rax, 176(%rsp)
 1397      B0000000 
 1398 0280 4489D0   		movl	%r10d, %eax
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1399              		.loc 1 629 25 view .LVU483
 1400 0283 48C1E707 		salq	$7, %rdi
 1401              	.LVL147:
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1402              		.loc 1 629 25 view .LVU484
 1403 0287 83E001   		andl	$1, %eax
 1404              		.loc 1 644 25 view .LVU485
 1405 028a 48C1E207 		salq	$7, %rdx
 1406              	.LVL148:
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1407              		.loc 1 614 43 view .LVU486
 1408 028e 48898C24 		movq	%rcx, 144(%rsp)
 1408      90000000 
 1409 0296 888424CF 		movb	%al, 207(%rsp)
 1409      000000
 1410 029d 8D43FF   		leal	-1(%rbx), %eax
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1411              		.loc 1 629 25 view .LVU487
 1412 02a0 4889BC24 		movq	%rdi, 152(%rsp)
 1412      98000000 
 1413              		.loc 1 644 25 view .LVU488
 1414 02a8 48899424 		movq	%rdx, 168(%rsp)
 1414      A8000000 
 1415 02b0 898424E8 		movl	%eax, 232(%rsp)
 1415      000000
 1416 02b7 48898424 		movq	%rax, 192(%rsp)
 1416      C0000000 
 1417              	.LVL149:
 1418 02bf 90       		.p2align 4,,10
 1419              		.p2align 3
 1420              	.L137:
 546:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (first_row && block_row == 0)
 1421              		.loc 1 546 7 is_stmt 1 view .LVU489
 546:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (first_row && block_row == 0)
 1422              		.loc 1 546 18 is_stmt 0 view .LVU490
 1423 02c0 488B5C24 		movq	96(%rsp), %rbx
 1423      60
 1424 02c5 488B4424 		movq	88(%rsp), %rax
 1424      58
 1425 02ca 488B2CC3 		movq	(%rbx,%rax,8), %rbp
 1426              	.LVL150:
 547:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	prev_block_row = buffer_ptr;
 1427              		.loc 1 547 7 is_stmt 1 view .LVU491
 547:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	prev_block_row = buffer_ptr;
 1428              		.loc 1 547 10 is_stmt 0 view .LVU492
 1429 02ce 85C0     		testl	%eax, %eax
 1430 02d0 0F85CA04 		jne	.L147
 1430      0000
 1431 02d6 80BC24CF 		cmpb	$0, 207(%rsp)
 1431      00000000 
 546:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (first_row && block_row == 0)
 1432              		.loc 1 546 18 view .LVU493
 1433 02de 48896C24 		movq	%rbp, 40(%rsp)
 1433      28
 547:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	prev_block_row = buffer_ptr;
 1434              		.loc 1 547 10 view .LVU494
 1435 02e3 0F84B704 		je	.L147
 1435      0000
 1436              	.L111:
 1437              	.LVL151:
 551:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	next_block_row = buffer_ptr;
 1438              		.loc 1 551 7 is_stmt 1 view .LVU495
 551:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	next_block_row = buffer_ptr;
 1439              		.loc 1 551 10 is_stmt 0 view .LVU496
 1440 02e9 8B9424BC 		movl	188(%rsp), %edx
 1440      000000
 1441 02f0 85D2     		testl	%edx, %edx
 1442 02f2 740E     		je	.L113
 546:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (first_row && block_row == 0)
 1443              		.loc 1 546 18 discriminator 1 view .LVU497
 1444 02f4 48896C24 		movq	%rbp, 32(%rsp)
 1444      20
 551:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	next_block_row = buffer_ptr;
 1445              		.loc 1 551 20 discriminator 1 view .LVU498
 1446 02f9 398424E8 		cmpl	%eax, 232(%rsp)
 1446      000000
 1447 0300 7414     		je	.L114
 1448              	.L113:
 554:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* We fetch the surrounding DC values using a sliding-register approach.
 1449              		.loc 1 554 2 is_stmt 1 view .LVU499
 554:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* We fetch the surrounding DC values using a sliding-register approach.
 1450              		.loc 1 554 17 is_stmt 0 view .LVU500
 1451 0302 488B4424 		movq	96(%rsp), %rax
 1451      60
 1452 0307 488B5C24 		movq	88(%rsp), %rbx
 1452      58
 1453 030c 488B44D8 		movq	8(%rax,%rbx,8), %rax
 1453      08
 1454 0311 48894424 		movq	%rax, 32(%rsp)
 1454      20
 1455              	.LVL152:
 1456              	.L114:
 558:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC4 = DC5 = DC6 = (int) buffer_ptr[0][0];
 1457              		.loc 1 558 7 is_stmt 1 view .LVU501
 560:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 1458              		.loc 1 560 23 is_stmt 0 view .LVU502
 1459 0316 488B7C24 		movq	32(%rsp), %rdi
 1459      20
 558:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC4 = DC5 = DC6 = (int) buffer_ptr[0][0];
 1460              		.loc 1 558 23 view .LVU503
 1461 031b 488B4424 		movq	40(%rsp), %rax
 1461      28
 561:fltk-1.3.4-1/jpeg/jdcoefct.c ****       last_block_column = compptr->width_in_blocks - 1;
 1462              		.loc 1 561 18 view .LVU504
 1463 0320 4531FF   		xorl	%r15d, %r15d
 559:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC7 = DC8 = DC9 = (int) next_block_row[0][0];
 1464              		.loc 1 559 23 view .LVU505
 1465 0323 0FBF5D00 		movswl	0(%rbp), %ebx
 558:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC4 = DC5 = DC6 = (int) buffer_ptr[0][0];
 1466              		.loc 1 558 23 view .LVU506
 1467 0327 0FBF00   		movswl	(%rax), %eax
 560:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 1468              		.loc 1 560 23 view .LVU507
 1469 032a 0FBF37   		movswl	(%rdi), %esi
 562:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num <= last_block_column; block_num++) {
 1470              		.loc 1 562 25 view .LVU508
 1471 032d 418B7C24 		movl	28(%r12), %edi
 1471      1C
 559:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC7 = DC8 = DC9 = (int) next_block_row[0][0];
 1472              		.loc 1 559 23 view .LVU509
 1473 0332 895C2430 		movl	%ebx, 48(%rsp)
 558:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC4 = DC5 = DC6 = (int) buffer_ptr[0][0];
 1474              		.loc 1 558 23 view .LVU510
 1475 0336 898424B8 		movl	%eax, 184(%rsp)
 1475      000000
 1476              	.LVL153:
 559:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC7 = DC8 = DC9 = (int) next_block_row[0][0];
 1477              		.loc 1 559 7 is_stmt 1 view .LVU511
 560:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 1478              		.loc 1 560 7 view .LVU512
 558:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC4 = DC5 = DC6 = (int) buffer_ptr[0][0];
 1479              		.loc 1 558 17 is_stmt 0 view .LVU513
 1480 033d 89442404 		movl	%eax, 4(%rsp)
 562:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num <= last_block_column; block_num++) {
 1481              		.loc 1 562 25 view .LVU514
 1482 0341 8D57FF   		leal	-1(%rdi), %edx
 1483 0344 4C89E8   		movq	%r13, %rax
 1484              	.LVL154:
 562:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num <= last_block_column; block_num++) {
 1485              		.loc 1 562 25 view .LVU515
 1486 0347 4D89E5   		movq	%r12, %r13
 559:fltk-1.3.4-1/jpeg/jdcoefct.c ****       DC7 = DC8 = DC9 = (int) next_block_row[0][0];
 1487              		.loc 1 559 17 view .LVU516
 1488 034a 895C2408 		movl	%ebx, 8(%rsp)
 1489 034e 4989EC   		movq	%rbp, %r12
 1490              	.LVL155:
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1491              		.loc 1 563 22 view .LVU517
 1492 0351 31DB     		xorl	%ebx, %ebx
 1493              	.LVL156:
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1494              		.loc 1 563 22 view .LVU518
 1495 0353 4C89F5   		movq	%r14, %rbp
 1496              	.LVL157:
 560:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 1497              		.loc 1 560 23 view .LVU519
 1498 0356 89742434 		movl	%esi, 52(%rsp)
 1499              	.LVL158:
 561:fltk-1.3.4-1/jpeg/jdcoefct.c ****       last_block_column = compptr->width_in_blocks - 1;
 1500              		.loc 1 561 7 is_stmt 1 view .LVU520
 562:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num <= last_block_column; block_num++) {
 1501              		.loc 1 562 7 view .LVU521
 1502 035a 4989C6   		movq	%rax, %r14
 1503              	.LVL159:
 562:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (block_num = 0; block_num <= last_block_column; block_num++) {
 1504              		.loc 1 562 25 is_stmt 0 view .LVU522
 1505 035d 89542418 		movl	%edx, 24(%rsp)
 1506              	.LVL160:
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1507              		.loc 1 563 7 is_stmt 1 view .LVU523
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1508              		.loc 1 563 27 view .LVU524
 560:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_col = 0;
 1509              		.loc 1 560 17 is_stmt 0 view .LVU525
 1510 0361 8974240C 		movl	%esi, 12(%rsp)
 1511 0365 E9940200 		jmp	.L136
 1511      00
 1512              	.LVL161:
 1513 036a 660F1F44 		.p2align 4,,10
 1513      0000
 1514              		.p2align 3
 1515              	.L178:
 568:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC6 = (int) buffer_ptr[1][0];
 1516              		.loc 1 568 4 is_stmt 1 view .LVU526
 569:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC9 = (int) next_block_row[1][0];
 1517              		.loc 1 569 8 is_stmt 0 view .LVU527
 1518 0370 450FBF9C 		movswl	128(%r12), %r11d
 1518      24800000 
 1518      00
 568:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC6 = (int) buffer_ptr[1][0];
 1519              		.loc 1 568 8 view .LVU528
 1520 0379 488B4424 		movq	40(%rsp), %rax
 1520      28
 1521 037e 0FBF8080 		movswl	128(%rax), %eax
 1521      000000
 1522 0385 89442410 		movl	%eax, 16(%rsp)
 1523              	.LVL162:
 569:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC9 = (int) next_block_row[1][0];
 1524              		.loc 1 569 4 is_stmt 1 view .LVU529
 570:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1525              		.loc 1 570 4 view .LVU530
 570:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1526              		.loc 1 570 8 is_stmt 0 view .LVU531
 1527 0389 488B4424 		movq	32(%rsp), %rax
 1527      20
 1528              	.LVL163:
 570:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1529              		.loc 1 570 8 view .LVU532
 1530 038e 0FBF8080 		movswl	128(%rax), %eax
 1530      000000
 1531 0395 89442414 		movl	%eax, 20(%rsp)
 1532              	.LVL164:
 1533              	.L115:
 577:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC4 - DC6);
 1534              		.loc 1 577 2 is_stmt 1 view .LVU533
 577:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC4 - DC6);
 1535              		.loc 1 577 9 is_stmt 0 view .LVU534
 1536 0399 8B4D04   		movl	4(%rbp), %ecx
 1537              	.LVL165:
 577:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC4 - DC6);
 1538              		.loc 1 577 5 view .LVU535
 1539 039c 85C9     		testl	%ecx, %ecx
 1540 039e 7453     		je	.L116
 577:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC4 - DC6);
 1541              		.loc 1 577 29 discriminator 1 view .LVU536
 1542 03a0 6683BC24 		cmpw	$0, 242(%rsp)
 1542      F2000000 
 1542      00
 1543 03a9 7548     		jne	.L116
 578:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1544              		.loc 1 578 4 is_stmt 1 view .LVU537
 578:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1545              		.loc 1 578 26 is_stmt 0 view .LVU538
 1546 03ab 8B442430 		movl	48(%rsp), %eax
 1547 03af 4429D8   		subl	%r11d, %eax
 1548 03b2 4898     		cltq
 578:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1549              		.loc 1 578 19 view .LVU539
 1550 03b4 480FAF44 		imulq	64(%rsp), %rax
 1550      2440
 578:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1551              		.loc 1 578 8 view .LVU540
 1552 03ba 488D04C0 		leaq	(%rax,%rax,8), %rax
 1553              	.LVL166:
 579:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q01<<7) + num) / (Q01<<8));
 1554              		.loc 1 579 4 is_stmt 1 view .LVU541
 579:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q01<<7) + num) / (Q01<<8));
 1555              		.loc 1 579 7 is_stmt 0 view .LVU542
 1556 03be 48C1E002 		salq	$2, %rax
 1557              	.LVL167:
 579:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q01<<7) + num) / (Q01<<8));
 1558              		.loc 1 579 7 view .LVU543
 1559 03c2 0F886003 		js	.L117
 1559      0000
 580:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1560              		.loc 1 580 6 is_stmt 1 view .LVU544
 580:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1561              		.loc 1 580 30 is_stmt 0 view .LVU545
 1562 03c8 48034424 		addq	104(%rsp), %rax
 1562      68
 1563              	.LVL168:
 580:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1564              		.loc 1 580 37 view .LVU546
 1565 03cd 4899     		cqto
 1566 03cf 48F77C24 		idivq	112(%rsp)
 1566      70
 580:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1567              		.loc 1 580 11 view .LVU547
 1568 03d4 89C2     		movl	%eax, %edx
 1569              	.LVL169:
 581:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1570              		.loc 1 581 6 is_stmt 1 view .LVU548
 581:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1571              		.loc 1 581 9 is_stmt 0 view .LVU549
 1572 03d6 85C9     		testl	%ecx, %ecx
 1573 03d8 7E11     		jle	.L118
 581:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1574              		.loc 1 581 30 discriminator 1 view .LVU550
 1575 03da BE010000 		movl	$1, %esi
 1575      00
 1576 03df D3E6     		sall	%cl, %esi
 1577 03e1 89F1     		movl	%esi, %ecx
 1578              	.LVL170:
 582:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 1579              		.loc 1 582 13 discriminator 1 view .LVU551
 1580 03e3 8D76FF   		leal	-1(%rsi), %esi
 1581 03e6 39C1     		cmpl	%eax, %ecx
 1582 03e8 0F4ED6   		cmovle	%esi, %edx
 1583              	.LVL171:
 1584              	.L118:
 589:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1585              		.loc 1 589 4 is_stmt 1 view .LVU552
 589:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1586              		.loc 1 589 19 is_stmt 0 view .LVU553
 1587 03eb 66899424 		movw	%dx, 242(%rsp)
 1587      F2000000 
 1588              	.LVL172:
 1589              	.L116:
 592:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC2 - DC8);
 1590              		.loc 1 592 2 is_stmt 1 view .LVU554
 592:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC2 - DC8);
 1591              		.loc 1 592 9 is_stmt 0 view .LVU555
 1592 03f3 8B4D08   		movl	8(%rbp), %ecx
 1593              	.LVL173:
 592:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC2 - DC8);
 1594              		.loc 1 592 5 view .LVU556
 1595 03f6 85C9     		testl	%ecx, %ecx
 1596 03f8 7457     		je	.L120
 592:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 36 * Q00 * (DC2 - DC8);
 1597              		.loc 1 592 29 discriminator 1 view .LVU557
 1598 03fa 6683BC24 		cmpw	$0, 256(%rsp)
 1598      00010000 
 1598      00
 1599 0403 754C     		jne	.L120
 593:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1600              		.loc 1 593 4 is_stmt 1 view .LVU558
 593:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1601              		.loc 1 593 26 is_stmt 0 view .LVU559
 1602 0405 8B442404 		movl	4(%rsp), %eax
 1603 0409 2B44240C 		subl	12(%rsp), %eax
 1604 040d 4898     		cltq
 593:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1605              		.loc 1 593 19 view .LVU560
 1606 040f 480FAF44 		imulq	64(%rsp), %rax
 1606      2440
 593:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1607              		.loc 1 593 8 view .LVU561
 1608 0415 488D04C0 		leaq	(%rax,%rax,8), %rax
 1609              	.LVL174:
 594:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q10<<7) + num) / (Q10<<8));
 1610              		.loc 1 594 4 is_stmt 1 view .LVU562
 594:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q10<<7) + num) / (Q10<<8));
 1611              		.loc 1 594 7 is_stmt 0 view .LVU563
 1612 0419 48C1E002 		salq	$2, %rax
 1613              	.LVL175:
 594:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q10<<7) + num) / (Q10<<8));
 1614              		.loc 1 594 7 view .LVU564
 1615 041d 0F88CD02 		js	.L121
 1615      0000
 595:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1616              		.loc 1 595 6 is_stmt 1 view .LVU565
 595:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1617              		.loc 1 595 30 is_stmt 0 view .LVU566
 1618 0423 48034424 		addq	120(%rsp), %rax
 1618      78
 1619              	.LVL176:
 595:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1620              		.loc 1 595 37 view .LVU567
 1621 0428 4899     		cqto
 1622 042a 48F7BC24 		idivq	128(%rsp)
 1622      80000000 
 595:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1623              		.loc 1 595 11 view .LVU568
 1624 0432 89C2     		movl	%eax, %edx
 1625              	.LVL177:
 596:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1626              		.loc 1 596 6 is_stmt 1 view .LVU569
 596:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1627              		.loc 1 596 9 is_stmt 0 view .LVU570
 1628 0434 85C9     		testl	%ecx, %ecx
 1629 0436 7E11     		jle	.L122
 596:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1630              		.loc 1 596 30 discriminator 1 view .LVU571
 1631 0438 BE010000 		movl	$1, %esi
 1631      00
 1632 043d D3E6     		sall	%cl, %esi
 1633 043f 89F1     		movl	%esi, %ecx
 1634              	.LVL178:
 597:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 1635              		.loc 1 597 13 discriminator 1 view .LVU572
 1636 0441 8D76FF   		leal	-1(%rsi), %esi
 1637 0444 39C1     		cmpl	%eax, %ecx
 1638 0446 0F4ED6   		cmovle	%esi, %edx
 1639              	.LVL179:
 1640              	.L122:
 604:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1641              		.loc 1 604 4 is_stmt 1 view .LVU573
 604:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1642              		.loc 1 604 19 is_stmt 0 view .LVU574
 1643 0449 66899424 		movw	%dx, 256(%rsp)
 1643      00010000 
 1644              	.LVL180:
 1645              	.L120:
 607:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC2 + DC8 - 2*DC5);
 1646              		.loc 1 607 2 is_stmt 1 view .LVU575
 607:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC2 + DC8 - 2*DC5);
 1647              		.loc 1 607 9 is_stmt 0 view .LVU576
 1648 0451 8B4D0C   		movl	12(%rbp), %ecx
 1649              	.LVL181:
 607:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC2 + DC8 - 2*DC5);
 1650              		.loc 1 607 5 view .LVU577
 1651 0454 85C9     		testl	%ecx, %ecx
 1652 0456 7462     		je	.L124
 607:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC2 + DC8 - 2*DC5);
 1653              		.loc 1 607 29 discriminator 1 view .LVU578
 1654 0458 6683BC24 		cmpw	$0, 272(%rsp)
 1654      10010000 
 1654      00
 1655 0461 7557     		jne	.L124
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1656              		.loc 1 608 4 is_stmt 1 view .LVU579
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1657              		.loc 1 608 34 is_stmt 0 view .LVU580
 1658 0463 8B7C2408 		movl	8(%rsp), %edi
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1659              		.loc 1 608 25 view .LVU581
 1660 0467 8B442404 		movl	4(%rsp), %eax
 1661 046b 0344240C 		addl	12(%rsp), %eax
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1662              		.loc 1 608 34 view .LVU582
 1663 046f 8D143F   		leal	(%rdi,%rdi), %edx
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1664              		.loc 1 608 31 view .LVU583
 1665 0472 29D0     		subl	%edx, %eax
 1666 0474 4898     		cltq
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1667              		.loc 1 608 18 view .LVU584
 1668 0476 480FAF44 		imulq	64(%rsp), %rax
 1668      2440
 608:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1669              		.loc 1 608 8 view .LVU585
 1670 047c 488D04C0 		leaq	(%rax,%rax,8), %rax
 1671              	.LVL182:
 609:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q20<<7) + num) / (Q20<<8));
 1672              		.loc 1 609 4 is_stmt 1 view .LVU586
 609:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q20<<7) + num) / (Q20<<8));
 1673              		.loc 1 609 7 is_stmt 0 view .LVU587
 1674 0480 4885C0   		testq	%rax, %rax
 1675 0483 0F882702 		js	.L125
 1675      0000
 610:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1676              		.loc 1 610 6 is_stmt 1 view .LVU588
 610:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1677              		.loc 1 610 30 is_stmt 0 view .LVU589
 1678 0489 48038424 		addq	136(%rsp), %rax
 1678      88000000 
 1679              	.LVL183:
 610:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1680              		.loc 1 610 37 view .LVU590
 1681 0491 4899     		cqto
 1682              	.LVL184:
 610:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1683              		.loc 1 610 37 view .LVU591
 1684 0493 48F7BC24 		idivq	144(%rsp)
 1684      90000000 
 610:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1685              		.loc 1 610 11 view .LVU592
 1686 049b 89C2     		movl	%eax, %edx
 1687              	.LVL185:
 611:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1688              		.loc 1 611 6 is_stmt 1 view .LVU593
 611:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1689              		.loc 1 611 9 is_stmt 0 view .LVU594
 1690 049d 85C9     		testl	%ecx, %ecx
 1691 049f 7E11     		jle	.L126
 611:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1692              		.loc 1 611 30 discriminator 1 view .LVU595
 1693 04a1 BE010000 		movl	$1, %esi
 1693      00
 1694 04a6 D3E6     		sall	%cl, %esi
 1695 04a8 89F1     		movl	%esi, %ecx
 1696              	.LVL186:
 612:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 1697              		.loc 1 612 13 discriminator 1 view .LVU596
 1698 04aa 8D76FF   		leal	-1(%rsi), %esi
 1699 04ad 39C1     		cmpl	%eax, %ecx
 1700 04af 0F4ED6   		cmovle	%esi, %edx
 1701              	.LVL187:
 1702              	.L126:
 619:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1703              		.loc 1 619 4 is_stmt 1 view .LVU597
 619:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1704              		.loc 1 619 20 is_stmt 0 view .LVU598
 1705 04b2 66899424 		movw	%dx, 272(%rsp)
 1705      10010000 
 1706              	.LVL188:
 1707              	.L124:
 622:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 5 * Q00 * (DC1 - DC3 - DC7 + DC9);
 1708              		.loc 1 622 2 is_stmt 1 view .LVU599
 622:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 5 * Q00 * (DC1 - DC3 - DC7 + DC9);
 1709              		.loc 1 622 9 is_stmt 0 view .LVU600
 1710 04ba 8B4D10   		movl	16(%rbp), %ecx
 1711              	.LVL189:
 622:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 5 * Q00 * (DC1 - DC3 - DC7 + DC9);
 1712              		.loc 1 622 5 view .LVU601
 1713 04bd 85C9     		testl	%ecx, %ecx
 1714 04bf 7464     		je	.L128
 622:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 5 * Q00 * (DC1 - DC3 - DC7 + DC9);
 1715              		.loc 1 622 29 discriminator 1 view .LVU602
 1716 04c1 6683BC24 		cmpw	$0, 258(%rsp)
 1716      02010000 
 1716      00
 1717 04ca 7559     		jne	.L128
 623:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1718              		.loc 1 623 4 is_stmt 1 view .LVU603
 623:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1719              		.loc 1 623 25 is_stmt 0 view .LVU604
 1720 04cc 8B8424B8 		movl	184(%rsp), %eax
 1720      000000
 1721 04d3 2B442410 		subl	16(%rsp), %eax
 623:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1722              		.loc 1 623 31 view .LVU605
 1723 04d7 2B442434 		subl	52(%rsp), %eax
 623:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1724              		.loc 1 623 37 view .LVU606
 1725 04db 03442414 		addl	20(%rsp), %eax
 1726 04df 4898     		cltq
 623:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1727              		.loc 1 623 18 view .LVU607
 1728 04e1 480FAF44 		imulq	64(%rsp), %rax
 1728      2440
 623:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1729              		.loc 1 623 8 view .LVU608
 1730 04e7 488D0480 		leaq	(%rax,%rax,4), %rax
 1731              	.LVL190:
 624:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q11<<7) + num) / (Q11<<8));
 1732              		.loc 1 624 4 is_stmt 1 view .LVU609
 624:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q11<<7) + num) / (Q11<<8));
 1733              		.loc 1 624 7 is_stmt 0 view .LVU610
 1734 04eb 4885C0   		testq	%rax, %rax
 1735 04ee 0F888401 		js	.L129
 1735      0000
 625:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1736              		.loc 1 625 6 is_stmt 1 view .LVU611
 625:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1737              		.loc 1 625 30 is_stmt 0 view .LVU612
 1738 04f4 48038424 		addq	152(%rsp), %rax
 1738      98000000 
 1739              	.LVL191:
 625:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1740              		.loc 1 625 37 view .LVU613
 1741 04fc 4899     		cqto
 1742 04fe 48F7BC24 		idivq	160(%rsp)
 1742      A0000000 
 625:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1743              		.loc 1 625 11 view .LVU614
 1744 0506 89C2     		movl	%eax, %edx
 1745              	.LVL192:
 626:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1746              		.loc 1 626 6 is_stmt 1 view .LVU615
 626:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1747              		.loc 1 626 9 is_stmt 0 view .LVU616
 1748 0508 85C9     		testl	%ecx, %ecx
 1749 050a 7E11     		jle	.L130
 626:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1750              		.loc 1 626 30 discriminator 1 view .LVU617
 1751 050c BE010000 		movl	$1, %esi
 1751      00
 1752 0511 D3E6     		sall	%cl, %esi
 1753 0513 89F1     		movl	%esi, %ecx
 1754              	.LVL193:
 627:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 1755              		.loc 1 627 13 discriminator 1 view .LVU618
 1756 0515 8D76FF   		leal	-1(%rsi), %esi
 1757 0518 39C1     		cmpl	%eax, %ecx
 1758 051a 0F4ED6   		cmovle	%esi, %edx
 1759              	.LVL194:
 1760              	.L130:
 634:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1761              		.loc 1 634 4 is_stmt 1 view .LVU619
 634:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 1762              		.loc 1 634 19 is_stmt 0 view .LVU620
 1763 051d 66899424 		movw	%dx, 258(%rsp)
 1763      02010000 
 1764              	.LVL195:
 1765              	.L128:
 637:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC4 + DC6 - 2*DC5);
 1766              		.loc 1 637 2 is_stmt 1 view .LVU621
 637:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC4 + DC6 - 2*DC5);
 1767              		.loc 1 637 9 is_stmt 0 view .LVU622
 1768 0525 8B4D14   		movl	20(%rbp), %ecx
 1769              	.LVL196:
 637:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC4 + DC6 - 2*DC5);
 1770              		.loc 1 637 5 view .LVU623
 1771 0528 85C9     		testl	%ecx, %ecx
 1772 052a 7461     		je	.L132
 637:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  num = 9 * Q00 * (DC4 + DC6 - 2*DC5);
 1773              		.loc 1 637 29 discriminator 1 view .LVU624
 1774 052c 6683BC24 		cmpw	$0, 244(%rsp)
 1774      F4000000 
 1774      00
 1775 0535 7556     		jne	.L132
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1776              		.loc 1 638 4 is_stmt 1 view .LVU625
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1777              		.loc 1 638 25 is_stmt 0 view .LVU626
 1778 0537 8B442430 		movl	48(%rsp), %eax
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1779              		.loc 1 638 34 view .LVU627
 1780 053b 8B742408 		movl	8(%rsp), %esi
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1781              		.loc 1 638 25 view .LVU628
 1782 053f 4401D8   		addl	%r11d, %eax
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1783              		.loc 1 638 34 view .LVU629
 1784 0542 8D1436   		leal	(%rsi,%rsi), %edx
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1785              		.loc 1 638 31 view .LVU630
 1786 0545 29D0     		subl	%edx, %eax
 1787 0547 4898     		cltq
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1788              		.loc 1 638 18 view .LVU631
 1789 0549 480FAF44 		imulq	64(%rsp), %rax
 1789      2440
 638:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (num >= 0) {
 1790              		.loc 1 638 8 view .LVU632
 1791 054f 488D04C0 		leaq	(%rax,%rax,8), %rax
 1792              	.LVL197:
 639:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q02<<7) + num) / (Q02<<8));
 1793              		.loc 1 639 4 is_stmt 1 view .LVU633
 639:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = (int) (((Q02<<7) + num) / (Q02<<8));
 1794              		.loc 1 639 7 is_stmt 0 view .LVU634
 1795 0553 4885C0   		testq	%rax, %rax
 1796 0556 0F880402 		js	.L133
 1796      0000
 640:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1797              		.loc 1 640 6 is_stmt 1 view .LVU635
 640:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1798              		.loc 1 640 30 is_stmt 0 view .LVU636
 1799 055c 48038424 		addq	168(%rsp), %rax
 1799      A8000000 
 1800              	.LVL198:
 640:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1801              		.loc 1 640 37 view .LVU637
 1802 0564 4899     		cqto
 1803              	.LVL199:
 640:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1804              		.loc 1 640 37 view .LVU638
 1805 0566 48F7BC24 		idivq	176(%rsp)
 1805      B0000000 
 640:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1806              		.loc 1 640 11 view .LVU639
 1807 056e 89C2     		movl	%eax, %edx
 1808              	.LVL200:
 641:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1809              		.loc 1 641 6 is_stmt 1 view .LVU640
 641:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1810              		.loc 1 641 9 is_stmt 0 view .LVU641
 1811 0570 85C9     		testl	%ecx, %ecx
 1812 0572 7E11     		jle	.L134
 641:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1813              		.loc 1 641 30 discriminator 1 view .LVU642
 1814 0574 BE010000 		movl	$1, %esi
 1814      00
 1815              	.LVL201:
 641:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1816              		.loc 1 641 30 discriminator 1 view .LVU643
 1817 0579 D3E6     		sall	%cl, %esi
 1818 057b 89F1     		movl	%esi, %ecx
 1819              	.LVL202:
 642:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  } else {
 1820              		.loc 1 642 13 discriminator 1 view .LVU644
 1821 057d 8D76FF   		leal	-1(%rsi), %esi
 1822 0580 39C1     		cmpl	%eax, %ecx
 1823 0582 0F4ED6   		cmovle	%esi, %edx
 1824              	.LVL203:
 1825              	.L134:
 645:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 646:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 647:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 648:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 649:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  workspace[2] = (JCOEF) pred;
 1826              		.loc 1 649 4 is_stmt 1 view .LVU645
 1827              		.loc 1 649 19 is_stmt 0 view .LVU646
 1828 0585 66899424 		movw	%dx, 244(%rsp)
 1828      F4000000 
 1829              	.LVL204:
 1830              	.L132:
 1831              		.loc 1 649 19 view .LVU647
 1832 058d 44895C24 		movl	%r11d, 28(%rsp)
 1832      1C
 650:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 651:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* OK, do the IDCT */
 652:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	(*inverse_DCT) (cinfo, compptr, (JCOEFPTR) workspace,
 1833              		.loc 1 652 2 is_stmt 1 discriminator 2 view .LVU648
 1834              		.loc 1 652 3 is_stmt 0 discriminator 2 view .LVU649
 1835 0592 488B4424 		movq	80(%rsp), %rax
 1835      50
 1836 0597 4589F8   		movl	%r15d, %r8d
 1837 059a 4C89F2   		movq	%r14, %rdx
 1838 059d 488B4C24 		movq	56(%rsp), %rcx
 1838      38
 1839 05a2 488B7C24 		movq	72(%rsp), %rdi
 1839      48
 1840 05a7 4C89EE   		movq	%r13, %rsi
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1841              		.loc 1 563 68 discriminator 2 view .LVU650
 1842 05aa 83C301   		addl	$1, %ebx
 1843              	.LVL205:
 1844              		.loc 1 652 3 discriminator 2 view .LVU651
 1845 05ad FFD0     		call	*%rax
 1846              	.LVL206:
 653:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			output_ptr, output_col);
 654:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Advance for next column */
 655:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	DC1 = DC2; DC2 = DC3;
 1847              		.loc 1 655 2 is_stmt 1 discriminator 2 view .LVU652
 1848              		.loc 1 655 13 discriminator 2 view .LVU653
 656:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	DC4 = DC5; DC5 = DC6;
 1849              		.loc 1 656 2 discriminator 2 view .LVU654
 1850              		.loc 1 656 13 discriminator 2 view .LVU655
 657:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	DC7 = DC8; DC8 = DC9;
 1851              		.loc 1 657 2 discriminator 2 view .LVU656
 1852              		.loc 1 657 13 discriminator 2 view .LVU657
 658:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	buffer_ptr++, prev_block_row++, next_block_row++;
 1853              		.loc 1 658 2 discriminator 2 view .LVU658
 1854 05af 8B442404 		movl	4(%rsp), %eax
 1855              		.loc 1 658 30 is_stmt 0 discriminator 2 view .LVU659
 1856 05b3 48836C24 		subq	$-128, 40(%rsp)
 1856      2880
 1857              	.LVL207:
 1858              		.loc 1 658 12 discriminator 2 view .LVU660
 1859 05b9 4983EC80 		subq	$-128, %r12
 1860              	.LVL208:
 659:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_col += compptr->DCT_h_scaled_size;
 1861              		.loc 1 659 2 is_stmt 1 discriminator 2 view .LVU661
 658:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	buffer_ptr++, prev_block_row++, next_block_row++;
 1862              		.loc 1 658 48 is_stmt 0 discriminator 2 view .LVU662
 1863 05bd 48836C24 		subq	$-128, 32(%rsp)
 1863      2080
 1864              	.LVL209:
 1865              		.loc 1 659 13 discriminator 2 view .LVU663
 1866 05c3 45037D24 		addl	36(%r13), %r15d
 1867              	.LVL210:
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1868              		.loc 1 563 59 is_stmt 1 discriminator 2 view .LVU664
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1869              		.loc 1 563 27 discriminator 2 view .LVU665
 563:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Fetch current DCT block into workspace so we can modify it. */
 1870              		.loc 1 563 7 is_stmt 0 discriminator 2 view .LVU666
 1871 05c7 395C2418 		cmpl	%ebx, 24(%rsp)
 1872 05cb 448B5C24 		movl	28(%rsp), %r11d
 1872      1C
 1873 05d0 898424B8 		movl	%eax, 184(%rsp)
 1873      000000
 1874 05d7 8B442408 		movl	8(%rsp), %eax
 1875 05db 89442430 		movl	%eax, 48(%rsp)
 1876 05df 8B44240C 		movl	12(%rsp), %eax
 1877 05e3 89442434 		movl	%eax, 52(%rsp)
 1878 05e7 724F     		jb	.L177
 657:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	buffer_ptr++, prev_block_row++, next_block_row++;
 1879              		.loc 1 657 17 view .LVU667
 1880 05e9 8B442414 		movl	20(%rsp), %eax
 656:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	DC7 = DC8; DC8 = DC9;
 1881              		.loc 1 656 17 view .LVU668
 1882 05ed 44895C24 		movl	%r11d, 8(%rsp)
 1882      08
 1883              	.LVL211:
 657:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	buffer_ptr++, prev_block_row++, next_block_row++;
 1884              		.loc 1 657 17 view .LVU669
 1885 05f2 8944240C 		movl	%eax, 12(%rsp)
 1886              	.LVL212:
 655:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	DC4 = DC5; DC5 = DC6;
 1887              		.loc 1 655 17 view .LVU670
 1888 05f6 8B442410 		movl	16(%rsp), %eax
 1889 05fa 89442404 		movl	%eax, 4(%rsp)
 1890              	.LVL213:
 1891              	.L136:
 565:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Update DC values */
 1892              		.loc 1 565 2 is_stmt 1 view .LVU671
 1893 05fe BA010000 		movl	$1, %edx
 1893      00
 1894 0603 4C89F6   		movq	%r14, %rsi
 1895 0606 4C89E7   		movq	%r12, %rdi
 1896 0609 E8000000 		call	jcopy_block_row@PLT
 1896      00
 1897              	.LVL214:
 567:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC3 = (int) prev_block_row[1][0];
 1898              		.loc 1 567 2 view .LVU672
 567:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC3 = (int) prev_block_row[1][0];
 1899              		.loc 1 567 5 is_stmt 0 view .LVU673
 1900 060e 395C2418 		cmpl	%ebx, 24(%rsp)
 1901 0612 0F8758FD 		ja	.L178
 1901      FFFF
 1902 0618 8B44240C 		movl	12(%rsp), %eax
 1903 061c 448B5C24 		movl	8(%rsp), %r11d
 1903      08
 1904 0621 89442414 		movl	%eax, 20(%rsp)
 1905 0625 8B442404 		movl	4(%rsp), %eax
 1906 0629 89442410 		movl	%eax, 16(%rsp)
 1907 062d E967FDFF 		jmp	.L115
 1907      FF
 1908              	.LVL215:
 1909              		.p2align 4,,10
 1910 0632 660F1F44 		.p2align 3
 1910      0000
 1911              	.L177:
 567:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  DC3 = (int) prev_block_row[1][0];
 1912              		.loc 1 567 5 view .LVU674
 1913 0638 4D89EC   		movq	%r13, %r12
 1914              	.LVL216:
 660:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 661:fltk-1.3.4-1/jpeg/jdcoefct.c ****       output_ptr += compptr->DCT_v_scaled_size;
 1915              		.loc 1 661 18 discriminator 2 view .LVU675
 1916 063b 488B5C24 		movq	56(%rsp), %rbx
 1916      38
 1917              	.LVL217:
 1918              		.loc 1 661 18 discriminator 2 view .LVU676
 1919 0640 4D89F5   		movq	%r14, %r13
 1920              	.LVL218:
 1921              		.loc 1 661 18 discriminator 2 view .LVU677
 1922 0643 4989EE   		movq	%rbp, %r14
 1923              		.loc 1 661 7 is_stmt 1 discriminator 2 view .LVU678
 1924              		.loc 1 661 28 is_stmt 0 discriminator 2 view .LVU679
 1925 0646 49634424 		movslq	40(%r12), %rax
 1925      28
 1926              	.LVL219:
 1927              		.loc 1 661 18 discriminator 2 view .LVU680
 1928 064b 488D04C3 		leaq	(%rbx,%rax,8), %rax
 1929 064f 488B5C24 		movq	88(%rsp), %rbx
 1929      58
 1930 0654 48894424 		movq	%rax, 56(%rsp)
 1930      38
 1931              	.LVL220:
 545:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 1932              		.loc 1 545 49 is_stmt 1 discriminator 2 view .LVU681
 545:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 1933              		.loc 1 545 25 discriminator 2 view .LVU682
 1934 0659 488D4301 		leaq	1(%rbx), %rax
 1935              	.LVL221:
 545:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 1936              		.loc 1 545 5 is_stmt 0 discriminator 2 view .LVU683
 1937 065d 48399C24 		cmpq	%rbx, 192(%rsp)
 1937      C0000000 
 1938 0665 0F845501 		je	.L176
 1938      0000
 545:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 1939              		.loc 1 545 5 discriminator 2 view .LVU684
 1940 066b 48894424 		movq	%rax, 88(%rsp)
 1940      58
 1941              	.LVL222:
 545:fltk-1.3.4-1/jpeg/jdcoefct.c ****       buffer_ptr = buffer[block_row];
 1942              		.loc 1 545 5 discriminator 2 view .LVU685
 1943 0670 E94BFCFF 		jmp	.L137
 1943      FF
 1944              	.LVL223:
 1945              		.p2align 4,,10
 1946 0675 0F1F00   		.p2align 3
 1947              	.L129:
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1948              		.loc 1 629 6 is_stmt 1 view .LVU686
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1949              		.loc 1 629 30 is_stmt 0 view .LVU687
 1950 0678 488BB424 		movq	152(%rsp), %rsi
 1950      98000000 
 1951 0680 4829C6   		subq	%rax, %rsi
 1952 0683 4889F0   		movq	%rsi, %rax
 1953              	.LVL224:
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1954              		.loc 1 629 37 view .LVU688
 1955 0686 4899     		cqto
 1956 0688 48F7BC24 		idivq	160(%rsp)
 1956      A0000000 
 629:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1957              		.loc 1 629 11 view .LVU689
 1958 0690 89C2     		movl	%eax, %edx
 1959              	.LVL225:
 630:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1960              		.loc 1 630 6 is_stmt 1 view .LVU690
 630:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1961              		.loc 1 630 9 is_stmt 0 view .LVU691
 1962 0692 85C9     		testl	%ecx, %ecx
 1963 0694 7E11     		jle	.L131
 630:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1964              		.loc 1 630 30 discriminator 1 view .LVU692
 1965 0696 BE010000 		movl	$1, %esi
 1965      00
 1966 069b D3E6     		sall	%cl, %esi
 1967 069d 89F1     		movl	%esi, %ecx
 1968              	.LVL226:
 631:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 1969              		.loc 1 631 13 discriminator 1 view .LVU693
 1970 069f 8D76FF   		leal	-1(%rsi), %esi
 1971 06a2 39C1     		cmpl	%eax, %ecx
 1972 06a4 0F4ED6   		cmovle	%esi, %edx
 1973              	.L131:
 1974              	.LVL227:
 632:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 1975              		.loc 1 632 6 is_stmt 1 view .LVU694
 632:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 1976              		.loc 1 632 11 is_stmt 0 view .LVU695
 1977 06a7 F7DA     		negl	%edx
 1978              	.LVL228:
 632:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 1979              		.loc 1 632 11 view .LVU696
 1980 06a9 E96FFEFF 		jmp	.L130
 1980      FF
 1981              	.LVL229:
 1982 06ae 6690     		.p2align 4,,10
 1983              		.p2align 3
 1984              	.L125:
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1985              		.loc 1 614 6 is_stmt 1 view .LVU697
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1986              		.loc 1 614 30 is_stmt 0 view .LVU698
 1987 06b0 488BBC24 		movq	136(%rsp), %rdi
 1987      88000000 
 1988 06b8 4829C7   		subq	%rax, %rdi
 1989 06bb 4889F8   		movq	%rdi, %rax
 1990              	.LVL230:
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1991              		.loc 1 614 37 view .LVU699
 1992 06be 4899     		cqto
 1993              	.LVL231:
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1994              		.loc 1 614 37 view .LVU700
 1995 06c0 48F7BC24 		idivq	144(%rsp)
 1995      90000000 
 614:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 1996              		.loc 1 614 11 view .LVU701
 1997 06c8 89C2     		movl	%eax, %edx
 1998              	.LVL232:
 615:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 1999              		.loc 1 615 6 is_stmt 1 view .LVU702
 615:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2000              		.loc 1 615 9 is_stmt 0 view .LVU703
 2001 06ca 85C9     		testl	%ecx, %ecx
 2002 06cc 7E11     		jle	.L127
 615:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2003              		.loc 1 615 30 discriminator 1 view .LVU704
 2004 06ce BE010000 		movl	$1, %esi
 2004      00
 2005 06d3 D3E6     		sall	%cl, %esi
 2006 06d5 89F1     		movl	%esi, %ecx
 2007              	.LVL233:
 616:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 2008              		.loc 1 616 13 discriminator 1 view .LVU705
 2009 06d7 8D76FF   		leal	-1(%rsi), %esi
 2010 06da 39C1     		cmpl	%eax, %ecx
 2011 06dc 0F4ED6   		cmovle	%esi, %edx
 2012              	.L127:
 2013              	.LVL234:
 617:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2014              		.loc 1 617 6 is_stmt 1 view .LVU706
 617:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2015              		.loc 1 617 11 is_stmt 0 view .LVU707
 2016 06df F7DA     		negl	%edx
 2017              	.LVL235:
 617:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2018              		.loc 1 617 11 view .LVU708
 2019 06e1 E9CCFDFF 		jmp	.L126
 2019      FF
 2020              	.LVL236:
 2021 06e6 662E0F1F 		.p2align 4,,10
 2021      84000000 
 2021      0000
 2022              		.p2align 3
 2023              	.L121:
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2024              		.loc 1 599 6 is_stmt 1 view .LVU709
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2025              		.loc 1 599 30 is_stmt 0 view .LVU710
 2026 06f0 488B7C24 		movq	120(%rsp), %rdi
 2026      78
 2027 06f5 4829C7   		subq	%rax, %rdi
 2028 06f8 4889F8   		movq	%rdi, %rax
 2029              	.LVL237:
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2030              		.loc 1 599 37 view .LVU711
 2031 06fb 4899     		cqto
 2032 06fd 48F7BC24 		idivq	128(%rsp)
 2032      80000000 
 599:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2033              		.loc 1 599 11 view .LVU712
 2034 0705 89C2     		movl	%eax, %edx
 2035              	.LVL238:
 600:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2036              		.loc 1 600 6 is_stmt 1 view .LVU713
 600:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2037              		.loc 1 600 9 is_stmt 0 view .LVU714
 2038 0707 85C9     		testl	%ecx, %ecx
 2039 0709 7E11     		jle	.L123
 600:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2040              		.loc 1 600 30 discriminator 1 view .LVU715
 2041 070b BE010000 		movl	$1, %esi
 2041      00
 2042 0710 D3E6     		sall	%cl, %esi
 2043 0712 89F1     		movl	%esi, %ecx
 2044              	.LVL239:
 601:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 2045              		.loc 1 601 13 discriminator 1 view .LVU716
 2046 0714 8D76FF   		leal	-1(%rsi), %esi
 2047 0717 39C1     		cmpl	%eax, %ecx
 2048 0719 0F4ED6   		cmovle	%esi, %edx
 2049              	.L123:
 2050              	.LVL240:
 602:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2051              		.loc 1 602 6 is_stmt 1 view .LVU717
 602:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2052              		.loc 1 602 11 is_stmt 0 view .LVU718
 2053 071c F7DA     		negl	%edx
 2054              	.LVL241:
 602:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2055              		.loc 1 602 11 view .LVU719
 2056 071e E926FDFF 		jmp	.L122
 2056      FF
 2057              	.LVL242:
 2058              		.p2align 4,,10
 2059 0723 0F1F4400 		.p2align 3
 2059      00
 2060              	.L117:
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2061              		.loc 1 584 6 is_stmt 1 view .LVU720
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2062              		.loc 1 584 30 is_stmt 0 view .LVU721
 2063 0728 488B7C24 		movq	104(%rsp), %rdi
 2063      68
 2064 072d 4829C7   		subq	%rax, %rdi
 2065 0730 4889F8   		movq	%rdi, %rax
 2066              	.LVL243:
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2067              		.loc 1 584 37 view .LVU722
 2068 0733 4899     		cqto
 2069 0735 48F77C24 		idivq	112(%rsp)
 2069      70
 584:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2070              		.loc 1 584 11 view .LVU723
 2071 073a 89C2     		movl	%eax, %edx
 2072              	.LVL244:
 585:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2073              		.loc 1 585 6 is_stmt 1 view .LVU724
 585:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2074              		.loc 1 585 9 is_stmt 0 view .LVU725
 2075 073c 85C9     		testl	%ecx, %ecx
 2076 073e 7E11     		jle	.L119
 585:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2077              		.loc 1 585 30 discriminator 1 view .LVU726
 2078 0740 BE010000 		movl	$1, %esi
 2078      00
 2079 0745 D3E6     		sall	%cl, %esi
 2080 0747 89F1     		movl	%esi, %ecx
 2081              	.LVL245:
 586:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 2082              		.loc 1 586 13 discriminator 1 view .LVU727
 2083 0749 8D76FF   		leal	-1(%rsi), %esi
 2084 074c 39C1     		cmpl	%eax, %ecx
 2085 074e 0F4ED6   		cmovle	%esi, %edx
 2086              	.L119:
 2087              	.LVL246:
 587:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2088              		.loc 1 587 6 is_stmt 1 view .LVU728
 587:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2089              		.loc 1 587 11 is_stmt 0 view .LVU729
 2090 0751 F7DA     		negl	%edx
 2091              	.LVL247:
 587:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2092              		.loc 1 587 11 view .LVU730
 2093 0753 E993FCFF 		jmp	.L118
 2093      FF
 2094              	.LVL248:
 2095 0758 0F1F8400 		.p2align 4,,10
 2095      00000000 
 2096              		.p2align 3
 2097              	.L133:
 644:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2098              		.loc 1 644 6 is_stmt 1 view .LVU731
 644:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2099              		.loc 1 644 30 is_stmt 0 view .LVU732
 2100 0760 488BBC24 		movq	168(%rsp), %rdi
 2100      A8000000 
 2101 0768 4829C7   		subq	%rax, %rdi
 2102 076b 4889F8   		movq	%rdi, %rax
 2103              	.LVL249:
 644:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2104              		.loc 1 644 37 view .LVU733
 2105 076e 4899     		cqto
 2106              	.LVL250:
 644:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2107              		.loc 1 644 37 view .LVU734
 2108 0770 48F7BC24 		idivq	176(%rsp)
 2108      B0000000 
 644:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    if (Al > 0 && pred >= (1<<Al))
 2109              		.loc 1 644 11 view .LVU735
 2110 0778 89C2     		movl	%eax, %edx
 2111              	.LVL251:
 645:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2112              		.loc 1 645 6 is_stmt 1 view .LVU736
 645:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2113              		.loc 1 645 9 is_stmt 0 view .LVU737
 2114 077a 85C9     		testl	%ecx, %ecx
 2115 077c 7E11     		jle	.L135
 645:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2116              		.loc 1 645 30 discriminator 1 view .LVU738
 2117 077e BE010000 		movl	$1, %esi
 2117      00
 2118              	.LVL252:
 645:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      pred = (1<<Al)-1;
 2119              		.loc 1 645 30 discriminator 1 view .LVU739
 2120 0783 D3E6     		sall	%cl, %esi
 2121 0785 89F1     		movl	%esi, %ecx
 2122              	.LVL253:
 646:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    pred = -pred;
 2123              		.loc 1 646 13 discriminator 1 view .LVU740
 2124 0787 8D76FF   		leal	-1(%rsi), %esi
 2125 078a 39C1     		cmpl	%eax, %ecx
 2126 078c 0F4ED6   		cmovle	%esi, %edx
 2127              	.L135:
 2128              	.LVL254:
 647:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2129              		.loc 1 647 6 is_stmt 1 view .LVU741
 647:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2130              		.loc 1 647 11 is_stmt 0 view .LVU742
 2131 078f F7DA     		negl	%edx
 2132              	.LVL255:
 647:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  }
 2133              		.loc 1 647 11 view .LVU743
 2134 0791 E9EFFDFF 		jmp	.L134
 2134      FF
 2135              	.LVL256:
 2136 0796 662E0F1F 		.p2align 4,,10
 2136      84000000 
 2136      0000
 2137              		.p2align 3
 2138              	.L147:
 550:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (last_row && block_row == block_rows-1)
 2139              		.loc 1 550 2 is_stmt 1 view .LVU744
 550:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (last_row && block_row == block_rows-1)
 2140              		.loc 1 550 17 is_stmt 0 view .LVU745
 2141 07a0 488B5C24 		movq	96(%rsp), %rbx
 2141      60
 2142 07a5 488B5424 		movq	88(%rsp), %rdx
 2142      58
 2143 07aa 488B5CD3 		movq	-8(%rbx,%rdx,8), %rbx
 2143      F8
 2144 07af 48895C24 		movq	%rbx, 40(%rsp)
 2144      28
 2145              	.LVL257:
 550:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (last_row && block_row == block_rows-1)
 2146              		.loc 1 550 17 view .LVU746
 2147 07b4 E930FBFF 		jmp	.L111
 2147      FF
 2148              	.LVL258:
 2149 07b9 0F1F8000 		.p2align 4,,10
 2149      000000
 2150              		.p2align 3
 2151              	.L176:
 550:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (last_row && block_row == block_rows-1)
 2152              		.loc 1 550 17 view .LVU747
 2153 07c0 488B4424 		movq	72(%rsp), %rax
 2153      48
 2154 07c5 8BB0B800 		movl	184(%rax), %esi
 2154      0000
 2155 07cb E928F9FF 		jmp	.L105
 2155      FF
 2156              	.LVL259:
 2157              	.L108:
 528:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, coef->whole_image[ci],
 2158              		.loc 1 528 7 is_stmt 1 view .LVU748
 528:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, coef->whole_image[ci],
 2159              		.loc 1 528 17 is_stmt 0 view .LVU749
 2160 07d0 4C89D6   		movq	%r10, %rsi
 2161 07d3 488B7C24 		movq	72(%rsp), %rdi
 2161      48
 2162 07d8 4531C0   		xorl	%r8d, %r8d
 2163 07db 4489C9   		movl	%r9d, %ecx
 2164 07de 31D2     		xorl	%edx, %edx
 2165 07e0 FFD0     		call	*%rax
 2166              	.LVL260:
 531:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 2167              		.loc 1 531 17 view .LVU750
 2168 07e2 41BA0100 		movl	$1, %r10d
 2168      0000
 528:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, coef->whole_image[ci],
 2169              		.loc 1 528 17 view .LVU751
 2170 07e8 48894424 		movq	%rax, 96(%rsp)
 2170      60
 2171              	.LVL261:
 531:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 2172              		.loc 1 531 7 is_stmt 1 view .LVU752
 531:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 2173              		.loc 1 531 7 is_stmt 0 view .LVU753
 2174 07ed E9AEF9FF 		jmp	.L109
 2174      FF
 2175              	.LVL262:
 2176              	.L106:
 513:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 2177              		.loc 1 513 7 is_stmt 1 view .LVU754
 513:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 2178              		.loc 1 513 53 is_stmt 0 view .LVU755
 2179 07f2 418B4424 		movl	32(%r12), %eax
 2179      20
 513:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (block_rows == 0) block_rows = compptr->v_samp_factor;
 2180              		.loc 1 513 18 view .LVU756
 2181 07f7 31D2     		xorl	%edx, %edx
 2182 07f9 F7F1     		divl	%ecx
 2183 07fb 89D3     		movl	%edx, %ebx
 2184              	.LVL263:
 514:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = block_rows; /* this iMCU row only */
 2185              		.loc 1 514 7 is_stmt 1 view .LVU757
 514:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = block_rows; /* this iMCU row only */
 2186              		.loc 1 514 10 is_stmt 0 view .LVU758
 2187 07fd 85D2     		testl	%edx, %edx
 2188 07ff 7567     		jne	.L140
 516:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 2189              		.loc 1 516 16 view .LVU759
 2190 0801 C78424BC 		movl	$1, 188(%rsp)
 2190      00000001 
 2190      000000
 514:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = block_rows; /* this iMCU row only */
 2191              		.loc 1 514 39 view .LVU760
 2192 080c 4189C9   		movl	%ecx, %r9d
 2193 080f 89CB     		movl	%ecx, %ebx
 2194 0811 E938F9FF 		jmp	.L107
 2194      FF
 2195              	.LVL264:
 2196              	.L104:
 662:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 663:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 664:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 665:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (++(cinfo->output_iMCU_row) < cinfo->total_iMCU_rows)
 2197              		.loc 1 665 3 is_stmt 1 view .LVU761
 2198              		.loc 1 665 6 is_stmt 0 view .LVU762
 2199 0816 488B4424 		movq	72(%rsp), %rax
 2199      48
 2200              		.loc 1 665 7 view .LVU763
 2201 081b 83C601   		addl	$1, %esi
 666:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 2202              		.loc 1 666 12 view .LVU764
 2203 081e 3BB0B001 		cmpl	432(%rax), %esi
 2203      0000
 665:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 2204              		.loc 1 665 6 view .LVU765
 2205 0824 89B0B800 		movl	%esi, 184(%rax)
 2205      0000
 2206              		.loc 1 666 12 view .LVU766
 2207 082a 0F93C0   		setnb	%al
 2208 082d 0FB6C0   		movzbl	%al, %eax
 2209 0830 83C003   		addl	$3, %eax
 2210              	.L96:
 667:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 668:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 2211              		.loc 1 668 1 view .LVU767
 2212 0833 488B9C24 		movq	376(%rsp), %rbx
 2212      78010000 
 2213 083b 6448331C 		xorq	%fs:40, %rbx
 2213      25280000 
 2213      00
 2214 0844 7535     		jne	.L179
 2215 0846 4881C488 		addq	$392, %rsp
 2215      010000
 2216              		.cfi_remember_state
 2217              		.cfi_def_cfa_offset 56
 2218 084d 5B       		popq	%rbx
 2219              		.cfi_def_cfa_offset 48
 2220 084e 5D       		popq	%rbp
 2221              		.cfi_def_cfa_offset 40
 2222 084f 415C     		popq	%r12
 2223              		.cfi_def_cfa_offset 32
 2224 0851 415D     		popq	%r13
 2225              		.cfi_def_cfa_offset 24
 2226 0853 415E     		popq	%r14
 2227              		.cfi_def_cfa_offset 16
 2228 0855 415F     		popq	%r15
 2229              		.cfi_def_cfa_offset 8
 2230 0857 C3       		ret
 2231              	.LVL265:
 2232              	.L103:
 2233              		.cfi_restore_state
 2234              		.loc 1 668 1 view .LVU768
 2235 0858 488B4424 		movq	72(%rsp), %rax
 2235      48
 2236 085d 8BB0B800 		movl	184(%rax), %esi
 2236      0000
 2237 0863 E940F8FF 		jmp	.L99
 2237      FF
 2238              	.LVL266:
 2239              	.L140:
 516:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 2240              		.loc 1 516 16 view .LVU769
 2241 0868 C78424BC 		movl	$1, 188(%rsp)
 2241      00000001 
 2241      000000
 2242 0873 4189D1   		movl	%edx, %r9d
 2243 0876 E9D3F8FF 		jmp	.L107
 2243      FF
 2244              	.LVL267:
 2245              	.L179:
 2246              		.loc 1 668 1 view .LVU770
 2247 087b E8000000 		call	__stack_chk_fail@PLT
 2247      00
 2248              	.LVL268:
 2249              		.cfi_endproc
 2250              	.LFE59:
 2252              		.section	.text.decompress_onepass,"ax",@progbits
 2253              		.p2align 4
 2255              	decompress_onepass:
 2256              	.LVL269:
 2257              	.LFB54:
 149:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 2258              		.loc 1 149 1 is_stmt 1 view -0
 2259              		.cfi_startproc
 149:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 2260              		.loc 1 149 1 is_stmt 0 view .LVU772
 2261 0000 F30F1EFA 		endbr64
 150:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 2262              		.loc 1 150 3 is_stmt 1 view .LVU773
 149:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 2263              		.loc 1 149 1 is_stmt 0 view .LVU774
 2264 0004 4157     		pushq	%r15
 2265              		.cfi_def_cfa_offset 16
 2266              		.cfi_offset 15, -16
 2267 0006 4989FF   		movq	%rdi, %r15
 2268 0009 4156     		pushq	%r14
 2269              		.cfi_def_cfa_offset 24
 2270              		.cfi_offset 14, -24
 2271 000b 4155     		pushq	%r13
 2272              		.cfi_def_cfa_offset 32
 2273              		.cfi_offset 13, -32
 2274 000d 4154     		pushq	%r12
 2275              		.cfi_def_cfa_offset 40
 2276              		.cfi_offset 12, -40
 2277 000f 55       		pushq	%rbp
 2278              		.cfi_def_cfa_offset 48
 2279              		.cfi_offset 6, -48
 2280 0010 53       		pushq	%rbx
 2281              		.cfi_def_cfa_offset 56
 2282              		.cfi_offset 3, -56
 2283 0011 4883EC68 		subq	$104, %rsp
 2284              		.cfi_def_cfa_offset 160
 152:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 2285              		.loc 1 152 14 view .LVU775
 2286 0015 418B87E8 		movl	488(%r15), %eax
 2286      010000
 150:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 2287              		.loc 1 150 15 view .LVU776
 2288 001c 488BBF50 		movq	592(%rdi), %rdi
 2288      020000
 2289              	.LVL270:
 149:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef = (my_coef_ptr) cinfo->coef;
 2290              		.loc 1 149 1 view .LVU777
 2291 0023 48897424 		movq	%rsi, 80(%rsp)
 2291      50
 152:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 2292              		.loc 1 152 14 view .LVU778
 2293 0028 8D70FF   		leal	-1(%rax), %esi
 2294              	.LVL271:
 153:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int blkn, ci, xindex, yindex, yoffset, useful_width;
 2295              		.loc 1 153 35 view .LVU779
 2296 002b 418B87B0 		movl	432(%r15), %eax
 2296      010000
 150:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION MCU_col_num;	/* index of current MCU within row */
 2297              		.loc 1 150 15 view .LVU780
 2298 0032 48897C24 		movq	%rdi, 56(%rsp)
 2298      38
 2299              	.LVL272:
 151:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_MCU_col = cinfo->MCUs_per_row - 1;
 2300              		.loc 1 151 3 is_stmt 1 view .LVU781
 152:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 2301              		.loc 1 152 3 view .LVU782
 152:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION last_iMCU_row = cinfo->total_iMCU_rows - 1;
 2302              		.loc 1 152 14 is_stmt 0 view .LVU783
 2303 0037 8974244C 		movl	%esi, 76(%rsp)
 2304              	.LVL273:
 153:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int blkn, ci, xindex, yindex, yoffset, useful_width;
 2305              		.loc 1 153 3 is_stmt 1 view .LVU784
 153:fltk-1.3.4-1/jpeg/jdcoefct.c ****   int blkn, ci, xindex, yindex, yoffset, useful_width;
 2306              		.loc 1 153 14 is_stmt 0 view .LVU785
 2307 003b 8D48FF   		leal	-1(%rax), %ecx
 2308 003e 894C2424 		movl	%ecx, 36(%rsp)
 2309              	.LVL274:
 154:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JSAMPARRAY output_ptr;
 2310              		.loc 1 154 3 is_stmt 1 view .LVU786
 155:fltk-1.3.4-1/jpeg/jdcoefct.c ****   JDIMENSION start_col, output_col;
 2311              		.loc 1 155 3 view .LVU787
 156:fltk-1.3.4-1/jpeg/jdcoefct.c ****   jpeg_component_info *compptr;
 2312              		.loc 1 156 3 view .LVU788
 157:fltk-1.3.4-1/jpeg/jdcoefct.c ****   inverse_DCT_method_ptr inverse_DCT;
 2313              		.loc 1 157 3 view .LVU789
 158:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 2314              		.loc 1 158 3 view .LVU790
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2315              		.loc 1 161 3 view .LVU791
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2316              		.loc 1 161 16 is_stmt 0 view .LVU792
 2317 0042 8B4F2C   		movl	44(%rdi), %ecx
 2318              	.LVL275:
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2319              		.loc 1 161 16 view .LVU793
 2320 0045 894C2428 		movl	%ecx, 40(%rsp)
 2321              	.LVL276:
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2322              		.loc 1 161 41 is_stmt 1 view .LVU794
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2323              		.loc 1 161 3 is_stmt 0 view .LVU795
 2324 0049 3B4F30   		cmpl	48(%rdi), %ecx
 2325 004c 0F8DEE00 		jge	.L181
 2325      0000
 2326 0052 488D4F38 		leaq	56(%rdi), %rcx
 2327              	.LVL277:
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2328              		.loc 1 161 3 view .LVU796
 2329 0056 8B4728   		movl	40(%rdi), %eax
 2330 0059 48894C24 		movq	%rcx, 88(%rsp)
 2330      58
 2331 005e 488D4F08 		leaq	8(%rdi), %rcx
 2332 0062 89442448 		movl	%eax, 72(%rsp)
 2333 0066 48894C24 		movq	%rcx, 64(%rsp)
 2333      40
 163:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 2334              		.loc 1 163 5 is_stmt 1 view .LVU797
 2335              	.LVL278:
 163:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 2336              		.loc 1 163 39 view .LVU798
 163:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 2337              		.loc 1 163 5 is_stmt 0 view .LVU799
 2338 006b 39F0     		cmpl	%esi, %eax
 2339 006d 0F87A000 		ja	.L189
 2339      0000
 2340              	.LVL279:
 2341              	.L214:
 163:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 2342              		.loc 1 163 5 view .LVU800
 2343 0073 4D89FD   		movq	%r15, %r13
 2344              	.LVL280:
 2345 0076 662E0F1F 		.p2align 4,,10
 2345      84000000 
 2345      0000
 2346              		.p2align 3
 2347              	.L188:
 166:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	FMEMZERO((void FAR *) coef->MCU_buffer[0],
 2348              		.loc 1 166 7 is_stmt 1 view .LVU801
 166:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	FMEMZERO((void FAR *) coef->MCU_buffer[0],
 2349              		.loc 1 166 10 is_stmt 0 view .LVU802
 2350 0080 418BBD38 		movl	568(%r13), %edi
 2350      020000
 2351 0087 85FF     		testl	%edi, %edi
 2352 0089 0F852602 		jne	.L217
 2352      0000
 2353              	.L185:
 169:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Suspension forced; update state counters and exit */
 2354              		.loc 1 169 7 is_stmt 1 view .LVU803
 169:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Suspension forced; update state counters and exit */
 2355              		.loc 1 169 14 is_stmt 0 view .LVU804
 2356 008f 498B8570 		movq	624(%r13), %rax
 2356      020000
 2357 0096 488B7424 		movq	88(%rsp), %rsi
 2357      58
 2358 009b 4C89EF   		movq	%r13, %rdi
 2359 009e FF5008   		call	*8(%rax)
 2360              	.LVL281:
 169:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Suspension forced; update state counters and exit */
 2361              		.loc 1 169 10 view .LVU805
 2362 00a1 85C0     		testl	%eax, %eax
 2363 00a3 0F842C02 		je	.L186
 2363      0000
 2364              	.LVL282:
 181:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 2365              		.loc 1 181 20 is_stmt 1 view .LVU806
 181:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 2366              		.loc 1 181 7 is_stmt 0 view .LVU807
 2367 00a9 418BB5C0 		movl	448(%r13), %esi
 2367      010000
 180:fltk-1.3.4-1/jpeg/jdcoefct.c ****       for (ci = 0; ci < cinfo->comps_in_scan; ci++) {
 2368              		.loc 1 180 12 view .LVU808
 2369 00b0 C7442420 		movl	$0, 32(%rsp)
 2369      00000000 
 181:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 2370              		.loc 1 181 7 view .LVU809
 2371 00b8 48C74424 		movq	$0, 24(%rsp)
 2371      18000000 
 2371      00
 2372 00c1 85F6     		testl	%esi, %esi
 2373 00c3 7E38     		jle	.L199
 2374              	.LVL283:
 2375              		.p2align 4,,10
 2376 00c5 0F1F00   		.p2align 3
 2377              	.L187:
 182:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Don't bother to IDCT an uninteresting component. */
 2378              		.loc 1 182 2 is_stmt 1 view .LVU810
 182:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	/* Don't bother to IDCT an uninteresting component. */
 2379              		.loc 1 182 10 is_stmt 0 view .LVU811
 2380 00c8 488B4424 		movq	24(%rsp), %rax
 2380      18
 2381 00cd 4D8BBCC5 		movq	456(%r13,%rax,8), %r15
 2381      C8010000 
 2382              	.LVL284:
 184:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  blkn += compptr->MCU_blocks;
 2383              		.loc 1 184 2 is_stmt 1 view .LVU812
 184:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  blkn += compptr->MCU_blocks;
 2384              		.loc 1 184 5 is_stmt 0 view .LVU813
 2385 00d5 418B4F34 		movl	52(%r15), %ecx
 2386 00d9 85C9     		testl	%ecx, %ecx
 2387 00db 0F859F00 		jne	.L191
 2387      0000
 185:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  continue;
 2388              		.loc 1 185 4 is_stmt 1 view .LVU814
 185:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  continue;
 2389              		.loc 1 185 9 is_stmt 0 view .LVU815
 2390 00e1 418B7F40 		movl	64(%r15), %edi
 2391 00e5 017C2420 		addl	%edi, 32(%rsp)
 2392              	.LVL285:
 186:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 2393              		.loc 1 186 4 is_stmt 1 view .LVU816
 2394              	.L192:
 181:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 2395              		.loc 1 181 47 discriminator 2 view .LVU817
 181:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 2396              		.loc 1 181 20 discriminator 2 view .LVU818
 2397 00e9 48834424 		addq	$1, 24(%rsp)
 2397      1801
 2398              	.LVL286:
 181:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 2399              		.loc 1 181 20 is_stmt 0 discriminator 2 view .LVU819
 2400 00ef 488B4424 		movq	24(%rsp), %rax
 2400      18
 181:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	compptr = cinfo->cur_comp_info[ci];
 2401              		.loc 1 181 7 discriminator 2 view .LVU820
 2402 00f4 413985C0 		cmpl	%eax, 448(%r13)
 2402      010000
 2403 00fb 7FCB     		jg	.L187
 2404              	.LVL287:
 2405              	.L199:
 164:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Try to fetch an MCU.  Entropy decoder expects buffer to be zeroed. */
 2406              		.loc 1 164 3 is_stmt 1 view .LVU821
 164:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Try to fetch an MCU.  Entropy decoder expects buffer to be zeroed. */
 2407              		.loc 1 164 14 is_stmt 0 view .LVU822
 2408 00fd 83442448 		addl	$1, 72(%rsp)
 2408      01
 2409              	.LVL288:
 164:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* Try to fetch an MCU.  Entropy decoder expects buffer to be zeroed. */
 2410              		.loc 1 164 14 view .LVU823
 2411 0102 8B442448 		movl	72(%rsp), %eax
 2412              	.LVL289:
 163:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 2413              		.loc 1 163 39 is_stmt 1 view .LVU824
 163:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 MCU_col_num++) {
 2414              		.loc 1 163 5 is_stmt 0 view .LVU825
 2415 0106 3944244C 		cmpl	%eax, 76(%rsp)
 2416 010a 0F8370FF 		jnb	.L188
 2416      FFFF
 2417 0110 4D89EF   		movq	%r13, %r15
 2418              	.LVL290:
 2419              	.L189:
 211:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2420              		.loc 1 211 5 is_stmt 1 view .LVU826
 211:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2421              		.loc 1 211 19 is_stmt 0 view .LVU827
 2422 0113 488B7424 		movq	56(%rsp), %rsi
 2422      38
 162:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (MCU_col_num = coef->MCU_ctr; MCU_col_num <= last_MCU_col;
 2423              		.loc 1 162 15 view .LVU828
 2424 0118 83442428 		addl	$1, 40(%rsp)
 2424      01
 2425              	.LVL291:
 162:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (MCU_col_num = coef->MCU_ctr; MCU_col_num <= last_MCU_col;
 2426              		.loc 1 162 15 view .LVU829
 2427 011d C7442448 		movl	$0, 72(%rsp)
 2427      00000000 
 2428 0125 8B442428 		movl	40(%rsp), %eax
 211:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2429              		.loc 1 211 19 view .LVU830
 2430 0129 C7462800 		movl	$0, 40(%rsi)
 2430      000000
 162:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (MCU_col_num = coef->MCU_ctr; MCU_col_num <= last_MCU_col;
 2431              		.loc 1 162 8 is_stmt 1 view .LVU831
 2432              	.LVL292:
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2433              		.loc 1 161 41 view .LVU832
 161:fltk-1.3.4-1/jpeg/jdcoefct.c ****        yoffset++) {
 2434              		.loc 1 161 3 is_stmt 0 view .LVU833
 2435 0130 394630   		cmpl	%eax, 48(%rsi)
 2436 0133 0F8F3AFF 		jg	.L214
 2436      FFFF
 2437 0139 418B87B0 		movl	432(%r15), %eax
 2437      010000
 2438              	.LVL293:
 2439              	.L181:
 214:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (++(cinfo->input_iMCU_row) < cinfo->total_iMCU_rows) {
 2440              		.loc 1 214 3 is_stmt 1 view .LVU834
 215:fltk-1.3.4-1/jpeg/jdcoefct.c ****     start_iMCU_row(cinfo);
 2441              		.loc 1 215 7 is_stmt 0 view .LVU835
 2442 0140 418BB7B0 		movl	176(%r15), %esi
 2442      000000
 214:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (++(cinfo->input_iMCU_row) < cinfo->total_iMCU_rows) {
 2443              		.loc 1 214 25 view .LVU836
 2444 0147 418387B8 		addl	$1, 184(%r15)
 2444      00000001 
 215:fltk-1.3.4-1/jpeg/jdcoefct.c ****     start_iMCU_row(cinfo);
 2445              		.loc 1 215 3 is_stmt 1 view .LVU837
 215:fltk-1.3.4-1/jpeg/jdcoefct.c ****     start_iMCU_row(cinfo);
 2446              		.loc 1 215 7 is_stmt 0 view .LVU838
 2447 014f 8D5601   		leal	1(%rsi), %edx
 215:fltk-1.3.4-1/jpeg/jdcoefct.c ****     start_iMCU_row(cinfo);
 2448              		.loc 1 215 6 view .LVU839
 2449 0152 418997B0 		movl	%edx, 176(%r15)
 2449      000000
 2450 0159 39C2     		cmpl	%eax, %edx
 2451 015b 0F829801 		jb	.L218
 2451      0000
 220:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 2452              		.loc 1 220 3 is_stmt 1 view .LVU840
 220:fltk-1.3.4-1/jpeg/jdcoefct.c ****   return JPEG_SCAN_COMPLETED;
 2453              		.loc 1 220 4 is_stmt 0 view .LVU841
 2454 0161 498B8760 		movq	608(%r15), %rax
 2454      020000
 2455 0168 4C89FF   		movq	%r15, %rdi
 2456 016b FF5018   		call	*24(%rax)
 2457              	.LVL294:
 221:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 2458              		.loc 1 221 3 is_stmt 1 view .LVU842
 221:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 2459              		.loc 1 221 10 is_stmt 0 view .LVU843
 2460 016e B8040000 		movl	$4, %eax
 2460      00
 2461 0173 E9720100 		jmp	.L180
 2461      00
 2462              	.LVL295:
 2463 0178 0F1F8400 		.p2align 4,,10
 2463      00000000 
 2464              		.p2align 3
 2465              	.L191:
 188:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	useful_width = (MCU_col_num < last_MCU_col) ? compptr->MCU_width
 2466              		.loc 1 188 2 is_stmt 1 view .LVU844
 188:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	useful_width = (MCU_col_num < last_MCU_col) ? compptr->MCU_width
 2467              		.loc 1 188 14 is_stmt 0 view .LVU845
 2468 0180 498B8578 		movq	632(%r13), %rax
 2468      020000
 2469 0187 49635704 		movslq	4(%r15), %rdx
 190:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_ptr = output_buf[compptr->component_index] +
 2470              		.loc 1 190 11 view .LVU846
 2471 018b 8B742448 		movl	72(%rsp), %esi
 188:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	useful_width = (MCU_col_num < last_MCU_col) ? compptr->MCU_width
 2472              		.loc 1 188 14 view .LVU847
 2473 018f 488B6CD0 		movq	8(%rax,%rdx,8), %rbp
 2473      08
 2474              	.LVL296:
 189:fltk-1.3.4-1/jpeg/jdcoefct.c **** 						    : compptr->last_col_width;
 2475              		.loc 1 189 2 is_stmt 1 view .LVU848
 190:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_ptr = output_buf[compptr->component_index] +
 2476              		.loc 1 190 11 is_stmt 0 view .LVU849
 2477 0194 3974244C 		cmpl	%esi, 76(%rsp)
 2478 0198 0F860A01 		jbe	.L193
 2478      0000
 190:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_ptr = output_buf[compptr->component_index] +
 2479              		.loc 1 190 11 discriminator 1 view .LVU850
 2480 019e 418B4738 		movl	56(%r15), %eax
 2481 01a2 8944242C 		movl	%eax, 44(%rsp)
 2482              	.L194:
 2483              	.LVL297:
 191:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  yoffset * compptr->DCT_v_scaled_size;
 2484              		.loc 1 191 2 is_stmt 1 view .LVU851
 192:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	start_col = MCU_col_num * compptr->MCU_sample_width;
 2485              		.loc 1 192 12 is_stmt 0 view .LVU852
 2486 01a6 8B442428 		movl	40(%rsp), %eax
 191:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  yoffset * compptr->DCT_v_scaled_size;
 2487              		.loc 1 191 13 view .LVU853
 2488 01aa 488B7C24 		movq	80(%rsp), %rdi
 2488      50
 192:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	start_col = MCU_col_num * compptr->MCU_sample_width;
 2489              		.loc 1 192 12 view .LVU854
 2490 01af 410FAF47 		imull	40(%r15), %eax
 2490      28
 191:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  yoffset * compptr->DCT_v_scaled_size;
 2491              		.loc 1 191 13 view .LVU855
 2492 01b4 488B14D7 		movq	(%rdi,%rdx,8), %rdx
 192:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	start_col = MCU_col_num * compptr->MCU_sample_width;
 2493              		.loc 1 192 12 view .LVU856
 2494 01b8 4898     		cltq
 191:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  yoffset * compptr->DCT_v_scaled_size;
 2495              		.loc 1 191 13 view .LVU857
 2496 01ba 4C8D34C2 		leaq	(%rdx,%rax,8), %r14
 2497              	.LVL298:
 193:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 2498              		.loc 1 193 2 is_stmt 1 view .LVU858
 193:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 2499              		.loc 1 193 12 is_stmt 0 view .LVU859
 2500 01be 8B442448 		movl	72(%rsp), %eax
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2501              		.loc 1 194 2 view .LVU860
 2502 01c2 418B573C 		movl	60(%r15), %edx
 193:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	for (yindex = 0; yindex < compptr->MCU_height; yindex++) {
 2503              		.loc 1 193 12 view .LVU861
 2504 01c6 410FAF47 		imull	68(%r15), %eax
 2504      44
 2505 01cb 89442430 		movl	%eax, 48(%rsp)
 2506              	.LVL299:
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2507              		.loc 1 194 2 is_stmt 1 view .LVU862
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2508              		.loc 1 194 19 view .LVU863
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2509              		.loc 1 194 2 is_stmt 0 view .LVU864
 2510 01cf 85D2     		testl	%edx, %edx
 2511 01d1 0F8E12FF 		jle	.L192
 2511      FFFF
 2512 01d7 8B44242C 		movl	44(%rsp), %eax
 2513              	.LVL300:
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2514              		.loc 1 194 14 view .LVU865
 2515 01db C7442414 		movl	$0, 20(%rsp)
 2515      00000000 
 2516 01e3 83E801   		subl	$1, %eax
 2517 01e6 89442434 		movl	%eax, 52(%rsp)
 2518 01ea EB35     		jmp	.L196
 2519              	.LVL301:
 2520 01ec 0F1F4000 		.p2align 4,,10
 2521              		.p2align 3
 2522              	.L219:
 195:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      yoffset+yindex < compptr->last_row_height) {
 2523              		.loc 1 195 46 discriminator 1 view .LVU866
 2524 01f0 8B442428 		movl	40(%rsp), %eax
 2525 01f4 03442414 		addl	20(%rsp), %eax
 2526 01f8 4139474C 		cmpl	%eax, 76(%r15)
 2527 01fc 7F30     		jg	.L195
 2528              	.L197:
 205:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  output_ptr += compptr->DCT_v_scaled_size;
 2529              		.loc 1 205 4 is_stmt 1 view .LVU867
 2530              	.LVL302:
 206:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 2531              		.loc 1 206 4 view .LVU868
 206:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 2532              		.loc 1 206 25 is_stmt 0 view .LVU869
 2533 01fe 49634728 		movslq	40(%r15), %rax
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2534              		.loc 1 194 55 view .LVU870
 2535 0202 83442414 		addl	$1, 20(%rsp)
 2535      01
 2536              	.LVL303:
 205:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  output_ptr += compptr->DCT_v_scaled_size;
 2537              		.loc 1 205 9 view .LVU871
 2538 0207 418B4F38 		movl	56(%r15), %ecx
 2539 020b 014C2420 		addl	%ecx, 32(%rsp)
 2540              	.LVL304:
 206:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	}
 2541              		.loc 1 206 15 view .LVU872
 2542 020f 4D8D34C6 		leaq	(%r14,%rax,8), %r14
 2543              	.LVL305:
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2544              		.loc 1 194 49 is_stmt 1 view .LVU873
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2545              		.loc 1 194 55 is_stmt 0 view .LVU874
 2546 0213 8B442414 		movl	20(%rsp), %eax
 2547              	.LVL306:
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2548              		.loc 1 194 19 is_stmt 1 view .LVU875
 194:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	  if (cinfo->input_iMCU_row < last_iMCU_row ||
 2549              		.loc 1 194 2 is_stmt 0 view .LVU876
 2550 0217 4139473C 		cmpl	%eax, 60(%r15)
 2551 021b 0F8EC8FE 		jle	.L192
 2551      FFFF
 2552              	.LVL307:
 2553              	.L196:
 195:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      yoffset+yindex < compptr->last_row_height) {
 2554              		.loc 1 195 4 is_stmt 1 view .LVU877
 195:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      yoffset+yindex < compptr->last_row_height) {
 2555              		.loc 1 195 7 is_stmt 0 view .LVU878
 2556 0221 8B442424 		movl	36(%rsp), %eax
 2557 0225 413985B0 		cmpl	%eax, 176(%r13)
 2557      000000
 2558 022c 73C2     		jnb	.L219
 2559              	.L195:
 2560              	.LVL308:
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2561              		.loc 1 198 23 is_stmt 1 discriminator 1 view .LVU879
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2562              		.loc 1 198 6 is_stmt 0 discriminator 1 view .LVU880
 2563 022e 8B44242C 		movl	44(%rsp), %eax
 2564 0232 85C0     		testl	%eax, %eax
 2565 0234 7EC8     		jle	.L197
 2566 0236 48637C24 		movslq	32(%rsp), %rdi
 2566      20
 2567 023b 488B4424 		movq	56(%rsp), %rax
 2567      38
 2568 0240 8B542434 		movl	52(%rsp), %edx
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2569              		.loc 1 198 6 view .LVU881
 2570 0244 448B6424 		movl	48(%rsp), %r12d
 2570      30
 2571 0249 488D1CF8 		leaq	(%rax,%rdi,8), %rbx
 2572 024d 488B4424 		movq	64(%rsp), %rax
 2572      40
 2573 0252 4801FA   		addq	%rdi, %rdx
 2574 0255 488D04D0 		leaq	(%rax,%rdx,8), %rax
 2575 0259 48894424 		movq	%rax, 8(%rsp)
 2575      08
 2576 025e 4C89E8   		movq	%r13, %rax
 2577 0261 4989ED   		movq	%rbp, %r13
 2578              	.LVL309:
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2579              		.loc 1 198 6 view .LVU882
 2580 0264 4C89FD   		movq	%r15, %rbp
 2581              	.LVL310:
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2582              		.loc 1 198 6 view .LVU883
 2583 0267 4989C7   		movq	%rax, %r15
 2584              	.LVL311:
 2585 026a 660F1F44 		.p2align 4,,10
 2585      0000
 2586              		.p2align 3
 2587              	.L198:
 199:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			      (JCOEFPTR) coef->MCU_buffer[blkn+xindex],
 2588              		.loc 1 199 8 is_stmt 1 discriminator 3 view .LVU884
 199:fltk-1.3.4-1/jpeg/jdcoefct.c **** 			      (JCOEFPTR) coef->MCU_buffer[blkn+xindex],
 2589              		.loc 1 199 9 is_stmt 0 discriminator 3 view .LVU885
 2590 0270 488B5338 		movq	56(%rbx), %rdx
 2591 0274 4589E0   		movl	%r12d, %r8d
 2592 0277 4C89F1   		movq	%r14, %rcx
 2593 027a 4889EE   		movq	%rbp, %rsi
 2594 027d 4C89FF   		movq	%r15, %rdi
 2595 0280 4883C308 		addq	$8, %rbx
 2596 0284 41FFD5   		call	*%r13
 2597              	.LVL312:
 202:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    }
 2598              		.loc 1 202 8 is_stmt 1 discriminator 3 view .LVU886
 202:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	    }
 2599              		.loc 1 202 19 is_stmt 0 discriminator 3 view .LVU887
 2600 0287 44036524 		addl	36(%rbp), %r12d
 2601              	.LVL313:
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2602              		.loc 1 198 46 is_stmt 1 discriminator 3 view .LVU888
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2603              		.loc 1 198 23 discriminator 3 view .LVU889
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2604              		.loc 1 198 6 is_stmt 0 discriminator 3 view .LVU890
 2605 028b 48395C24 		cmpq	%rbx, 8(%rsp)
 2605      08
 2606 0290 75DE     		jne	.L198
 2607 0292 4C89F8   		movq	%r15, %rax
 2608 0295 4989EF   		movq	%rbp, %r15
 2609              	.LVL314:
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2610              		.loc 1 198 6 discriminator 3 view .LVU891
 2611 0298 4C89ED   		movq	%r13, %rbp
 2612              	.LVL315:
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2613              		.loc 1 198 6 discriminator 3 view .LVU892
 2614 029b 4989C5   		movq	%rax, %r13
 2615              	.LVL316:
 198:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	      (*inverse_DCT) (cinfo, compptr,
 2616              		.loc 1 198 6 discriminator 3 view .LVU893
 2617 029e E95BFFFF 		jmp	.L197
 2617      FF
 2618              	.LVL317:
 2619              		.p2align 4,,10
 2620 02a3 0F1F4400 		.p2align 3
 2620      00
 2621              	.L193:
 190:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	output_ptr = output_buf[compptr->component_index] +
 2622              		.loc 1 190 11 discriminator 2 view .LVU894
 2623 02a8 418B4748 		movl	72(%r15), %eax
 2624 02ac 8944242C 		movl	%eax, 44(%rsp)
 2625 02b0 E9F1FEFF 		jmp	.L194
 2625      FF
 2626              	.LVL318:
 2627              	.L217:
 167:fltk-1.3.4-1/jpeg/jdcoefct.c **** 		 (size_t) (cinfo->blocks_in_MCU * SIZEOF(JBLOCK)));
 2628              		.loc 1 167 2 is_stmt 1 view .LVU895
 2629              	.LBB35:
 2630              	.LBI35:
 2631              		.file 2 "/usr/include/x86_64-linux-gnu/bits/string_fortified.h"
   1:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* Copyright (C) 2004-2020 Free Software Foundation, Inc.
   2:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    This file is part of the GNU C Library.
   3:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   4:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is free software; you can redistribute it and/or
   5:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    modify it under the terms of the GNU Lesser General Public
   6:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License as published by the Free Software Foundation; either
   7:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    version 2.1 of the License, or (at your option) any later version.
   8:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
   9:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    The GNU C Library is distributed in the hope that it will be useful,
  10:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  12:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    Lesser General Public License for more details.
  13:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  14:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    You should have received a copy of the GNU Lesser General Public
  15:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    License along with the GNU C Library; if not, see
  16:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    <https://www.gnu.org/licenses/>.  */
  17:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  18:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _BITS_STRING_FORTIFIED_H
  19:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #define _BITS_STRING_FORTIFIED_H 1
  20:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  21:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifndef _STRING_H
  22:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** # error "Never use <bits/string_fortified.h> directly; include <string.h> instead."
  23:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  24:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  25:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  26:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __warndecl (__warn_memset_zero_len,
  27:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	    "memset used with constant zero length parameter; this could be due to transposed parameters")
  28:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  29:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  30:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  31:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memcpy (void *__restrict __dest, const void *__restrict __src,
  32:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 	       size_t __len))
  33:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  34:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memcpy_chk (__dest, __src, __len, __bos0 (__dest));
  35:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  36:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  37:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  38:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memmove (void *__dest, const void *__src, size_t __len))
  39:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  40:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memmove_chk (__dest, __src, __len, __bos0 (__dest));
  41:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  42:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  43:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #ifdef __USE_GNU
  44:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  45:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (mempcpy (void *__restrict __dest, const void *__restrict __src,
  46:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 		size_t __len))
  47:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  48:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___mempcpy_chk (__dest, __src, __len, __bos0 (__dest));
  49:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** }
  50:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  51:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  52:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** 
  53:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** /* The first two tests here help to catch a somewhat common problem
  54:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    where the second and third parameter are transposed.  This is
  55:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    especially problematic if the intended fill value is zero.  In this
  56:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    case no work is done at all.  We detect these problems by referring
  57:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****    non-existing functions.  */
  58:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __fortify_function void *
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** __NTH (memset (void *__dest, int __ch, size_t __len))
 2632              		.loc 2 59 1 view .LVU896
 2633              	.LBB36:
  60:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
  61:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   /* GCC-5.0 and newer implements these checks in the compiler, so we don't
  62:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****      need them here.  */
  63:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #if !__GNUC_PREREQ (5,0)
  64:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   if (__builtin_constant_p (__len) && __len == 0
  65:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       && (!__builtin_constant_p (__ch) || __ch != 0))
  66:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     {
  67:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       __warn_memset_zero_len ();
  68:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****       return __dest;
  69:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****     }
  70:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** #endif
  71:/usr/include/x86_64-linux-gnu/bits/string_fortified.h ****   return __builtin___memset_chk (__dest, __ch, __len, __bos0 (__dest));
 2634              		.loc 2 71 3 view .LVU897
 2635              		.loc 2 71 10 is_stmt 0 view .LVU898
 2636 02b5 488B4424 		movq	56(%rsp), %rax
 2636      38
 2637              	.LBE36:
 2638              	.LBE35:
 167:fltk-1.3.4-1/jpeg/jdcoefct.c **** 		 (size_t) (cinfo->blocks_in_MCU * SIZEOF(JBLOCK)));
 2639              		.loc 1 167 2 view .LVU899
 2640 02ba 496395F0 		movslq	496(%r13), %rdx
 2640      010000
 2641              	.LBB39:
 2642              	.LBB37:
 2643              		.loc 2 71 10 view .LVU900
 2644 02c1 31F6     		xorl	%esi, %esi
 2645 02c3 488B7838 		movq	56(%rax), %rdi
 2646              	.LBE37:
 2647              	.LBE39:
 167:fltk-1.3.4-1/jpeg/jdcoefct.c **** 		 (size_t) (cinfo->blocks_in_MCU * SIZEOF(JBLOCK)));
 2648              		.loc 1 167 2 view .LVU901
 2649 02c7 48C1E207 		salq	$7, %rdx
 2650              	.LVL319:
 2651              	.LBB40:
 2652              	.LBB38:
 2653              		.loc 2 71 10 view .LVU902
 2654 02cb E8000000 		call	memset@PLT
 2654      00
 2655              	.LVL320:
 2656              		.loc 2 71 10 view .LVU903
 2657 02d0 E9BAFDFF 		jmp	.L185
 2657      FF
 2658              	.LVL321:
 2659              	.L186:
 2660              		.loc 2 71 10 view .LVU904
 2661              	.LBE38:
 2662              	.LBE40:
 171:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_ctr = MCU_col_num;
 2663              		.loc 1 171 2 is_stmt 1 view .LVU905
 171:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	coef->MCU_ctr = MCU_col_num;
 2664              		.loc 1 171 24 is_stmt 0 view .LVU906
 2665 02d5 488B4424 		movq	56(%rsp), %rax
 2665      38
 2666 02da 8B742428 		movl	40(%rsp), %esi
 2667 02de 89702C   		movl	%esi, 44(%rax)
 172:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	return JPEG_SUSPENDED;
 2668              		.loc 1 172 2 is_stmt 1 view .LVU907
 172:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	return JPEG_SUSPENDED;
 2669              		.loc 1 172 16 is_stmt 0 view .LVU908
 2670 02e1 8B742448 		movl	72(%rsp), %esi
 2671 02e5 897028   		movl	%esi, 40(%rax)
 173:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 2672              		.loc 1 173 2 is_stmt 1 view .LVU909
 173:fltk-1.3.4-1/jpeg/jdcoefct.c ****       }
 2673              		.loc 1 173 9 is_stmt 0 view .LVU910
 2674 02e8 31C0     		xorl	%eax, %eax
 2675              	.LVL322:
 2676              	.L180:
 222:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 2677              		.loc 1 222 1 view .LVU911
 2678 02ea 4883C468 		addq	$104, %rsp
 2679              		.cfi_remember_state
 2680              		.cfi_def_cfa_offset 56
 2681 02ee 5B       		popq	%rbx
 2682              		.cfi_def_cfa_offset 48
 2683 02ef 5D       		popq	%rbp
 2684              		.cfi_def_cfa_offset 40
 2685 02f0 415C     		popq	%r12
 2686              		.cfi_def_cfa_offset 32
 2687 02f2 415D     		popq	%r13
 2688              		.cfi_def_cfa_offset 24
 2689 02f4 415E     		popq	%r14
 2690              		.cfi_def_cfa_offset 16
 2691 02f6 415F     		popq	%r15
 2692              		.cfi_def_cfa_offset 8
 2693 02f8 C3       		ret
 2694              	.LVL323:
 2695              	.L218:
 2696              		.cfi_restore_state
 216:fltk-1.3.4-1/jpeg/jdcoefct.c ****     return JPEG_ROW_COMPLETED;
 2697              		.loc 1 216 5 is_stmt 1 view .LVU912
 2698              	.LBB41:
 2699              	.LBI41:
  80:fltk-1.3.4-1/jpeg/jdcoefct.c **** /* Reset within-iMCU-row counters for a new row (input side) */
 2700              		.loc 1 80 1 view .LVU913
 2701              	.LBB42:
  83:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 2702              		.loc 1 83 3 view .LVU914
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
 2703              		.loc 1 89 6 is_stmt 0 view .LVU915
 2704 02f9 4183BFC0 		cmpl	$1, 448(%r15)
 2704      01000001 
  83:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 2705              		.loc 1 83 15 view .LVU916
 2706 0301 498B8F50 		movq	592(%r15), %rcx
 2706      020000
 2707              	.LVL324:
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
 2708              		.loc 1 89 3 is_stmt 1 view .LVU917
  89:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->MCU_rows_per_iMCU_row = 1;
 2709              		.loc 1 89 6 is_stmt 0 view .LVU918
 2710 0308 7E16     		jle	.L201
  90:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
 2711              		.loc 1 90 5 is_stmt 1 view .LVU919
  90:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
 2712              		.loc 1 90 33 is_stmt 0 view .LVU920
 2713 030a C7413001 		movl	$1, 48(%rcx)
 2713      000000
 2714              	.L202:
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
 2715              		.loc 1 98 3 is_stmt 1 view .LVU921
  99:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 2716              		.loc 1 99 3 view .LVU922
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
 2717              		.loc 1 98 17 is_stmt 0 view .LVU923
 2718 0311 48C74128 		movq	$0, 40(%rcx)
 2718      00000000 
 2719              	.LVL325:
  98:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->MCU_vert_offset = 0;
 2720              		.loc 1 98 17 view .LVU924
 2721              	.LBE42:
 2722              	.LBE41:
 217:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2723              		.loc 1 217 5 is_stmt 1 view .LVU925
 217:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2724              		.loc 1 217 12 is_stmt 0 view .LVU926
 2725 0319 B8030000 		movl	$3, %eax
 2725      00
 2726 031e EBCA     		jmp	.L180
 2727              	.LVL326:
 2728              	.L201:
 2729              	.LBB44:
 2730              	.LBB43:
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
 2731              		.loc 1 92 5 is_stmt 1 view .LVU927
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
 2732              		.loc 1 92 56 is_stmt 0 view .LVU928
 2733 0320 83E801   		subl	$1, %eax
 2734 0323 498BB7C8 		movq	456(%r15), %rsi
 2734      010000
  92:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_rows_per_iMCU_row = cinfo->cur_comp_info[0]->v_samp_factor;
 2735              		.loc 1 92 8 view .LVU929
 2736 032a 39C2     		cmpl	%eax, %edx
 2737 032c 7308     		jnb	.L203
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 2738              		.loc 1 93 7 is_stmt 1 view .LVU930
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 2739              		.loc 1 93 60 is_stmt 0 view .LVU931
 2740 032e 8B460C   		movl	12(%rsi), %eax
  93:fltk-1.3.4-1/jpeg/jdcoefct.c ****     else
 2741              		.loc 1 93 35 view .LVU932
 2742 0331 894130   		movl	%eax, 48(%rcx)
 2743 0334 EBDB     		jmp	.L202
 2744              	.L203:
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2745              		.loc 1 95 7 is_stmt 1 view .LVU933
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2746              		.loc 1 95 60 is_stmt 0 view .LVU934
 2747 0336 8B464C   		movl	76(%rsi), %eax
  95:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2748              		.loc 1 95 35 view .LVU935
 2749 0339 894130   		movl	%eax, 48(%rcx)
 2750 033c EBD3     		jmp	.L202
 2751              	.LBE43:
 2752              	.LBE44:
 2753              		.cfi_endproc
 2754              	.LFE54:
 2756              		.section	.text.jinit_d_coef_controller,"ax",@progbits
 2757              		.p2align 4
 2758              		.globl	jinit_d_coef_controller
 2760              	jinit_d_coef_controller:
 2761              	.LVL327:
 2762              	.LFB60:
 669:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 670:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif /* BLOCK_SMOOTHING_SUPPORTED */
 671:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 672:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 673:fltk-1.3.4-1/jpeg/jdcoefct.c **** /*
 674:fltk-1.3.4-1/jpeg/jdcoefct.c ****  * Initialize coefficient buffer controller.
 675:fltk-1.3.4-1/jpeg/jdcoefct.c ****  */
 676:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 677:fltk-1.3.4-1/jpeg/jdcoefct.c **** GLOBAL(void)
 678:fltk-1.3.4-1/jpeg/jdcoefct.c **** jinit_d_coef_controller (j_decompress_ptr cinfo, boolean need_full_buffer)
 679:fltk-1.3.4-1/jpeg/jdcoefct.c **** {
 2763              		.loc 1 679 1 is_stmt 1 view -0
 2764              		.cfi_startproc
 2765              		.loc 1 679 1 is_stmt 0 view .LVU937
 2766 0000 F30F1EFA 		endbr64
 680:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef;
 2767              		.loc 1 680 3 is_stmt 1 view .LVU938
 681:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 682:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef = (my_coef_ptr)
 2768              		.loc 1 682 3 view .LVU939
 679:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef;
 2769              		.loc 1 679 1 is_stmt 0 view .LVU940
 2770 0004 4157     		pushq	%r15
 2771              		.cfi_def_cfa_offset 16
 2772              		.cfi_offset 15, -16
 683:fltk-1.3.4-1/jpeg/jdcoefct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2773              		.loc 1 683 6 view .LVU941
 2774 0006 BAE00000 		movl	$224, %edx
 2774      00
 679:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef;
 2775              		.loc 1 679 1 view .LVU942
 2776 000b 4156     		pushq	%r14
 2777              		.cfi_def_cfa_offset 24
 2778              		.cfi_offset 14, -24
 2779 000d 4155     		pushq	%r13
 2780              		.cfi_def_cfa_offset 32
 2781              		.cfi_offset 13, -32
 2782 000f 4154     		pushq	%r12
 2783              		.cfi_def_cfa_offset 40
 2784              		.cfi_offset 12, -40
 2785 0011 55       		pushq	%rbp
 2786              		.cfi_def_cfa_offset 48
 2787              		.cfi_offset 6, -48
 2788 0012 4889FD   		movq	%rdi, %rbp
 2789 0015 53       		pushq	%rbx
 2790              		.cfi_def_cfa_offset 56
 2791              		.cfi_offset 3, -56
 2792 0016 89F3     		movl	%esi, %ebx
 2793              		.loc 1 683 6 view .LVU943
 2794 0018 BE010000 		movl	$1, %esi
 2794      00
 2795              	.LVL328:
 679:fltk-1.3.4-1/jpeg/jdcoefct.c ****   my_coef_ptr coef;
 2796              		.loc 1 679 1 view .LVU944
 2797 001d 4883EC18 		subq	$24, %rsp
 2798              		.cfi_def_cfa_offset 80
 2799              		.loc 1 683 6 view .LVU945
 2800 0021 488B4708 		movq	8(%rdi), %rax
 2801 0025 FF10     		call	*(%rax)
 2802              	.LVL329:
 684:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				SIZEOF(my_coef_controller));
 685:fltk-1.3.4-1/jpeg/jdcoefct.c ****   cinfo->coef = (struct jpeg_d_coef_controller *) coef;
 2803              		.loc 1 685 15 view .LVU946
 2804 0027 48898550 		movq	%rax, 592(%rbp)
 2804      020000
 683:fltk-1.3.4-1/jpeg/jdcoefct.c ****     (*cinfo->mem->alloc_small) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2805              		.loc 1 683 6 view .LVU947
 2806 002e 4989C5   		movq	%rax, %r13
 2807              	.LVL330:
 2808              		.loc 1 685 3 is_stmt 1 view .LVU948
 686:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->pub.start_input_pass = start_input_pass;
 2809              		.loc 1 686 3 view .LVU949
 2810              		.loc 1 686 30 is_stmt 0 view .LVU950
 2811 0031 488D0500 		leaq	start_input_pass(%rip), %rax
 2811      000000
 2812              	.LVL331:
 2813              		.loc 1 686 30 view .LVU951
 2814 0038 49894500 		movq	%rax, 0(%r13)
 687:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->pub.start_output_pass = start_output_pass;
 2815              		.loc 1 687 3 is_stmt 1 view .LVU952
 2816              		.loc 1 687 31 is_stmt 0 view .LVU953
 2817 003c 488D0500 		leaq	start_output_pass(%rip), %rax
 2817      000000
 2818 0043 49894510 		movq	%rax, 16(%r13)
 688:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 689:fltk-1.3.4-1/jpeg/jdcoefct.c ****   coef->coef_bits_latch = NULL;
 2819              		.loc 1 689 3 is_stmt 1 view .LVU954
 2820              		.loc 1 689 25 is_stmt 0 view .LVU955
 2821 0047 49C785D8 		movq	$0, 216(%r13)
 2821      00000000 
 2821      000000
 690:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
 691:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 692:fltk-1.3.4-1/jpeg/jdcoefct.c ****   /* Create the coefficient buffer. */
 693:fltk-1.3.4-1/jpeg/jdcoefct.c ****   if (need_full_buffer) {
 2822              		.loc 1 693 3 is_stmt 1 view .LVU956
 2823              		.loc 1 693 6 is_stmt 0 view .LVU957
 2824 0052 85DB     		testl	%ebx, %ebx
 2825 0054 0F84B600 		je	.L221
 2825      0000
 2826              	.LBB45:
 694:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef D_MULTISCAN_FILES_SUPPORTED
 695:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Allocate a full-image virtual array for each component, */
 696:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* padded to a multiple of samp_factor DCT blocks in each direction. */
 697:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* Note we ask for a pre-zeroed array. */
 698:fltk-1.3.4-1/jpeg/jdcoefct.c ****     int ci, access_rows;
 2827              		.loc 1 698 5 is_stmt 1 view .LVU958
 699:fltk-1.3.4-1/jpeg/jdcoefct.c ****     jpeg_component_info *compptr;
 2828              		.loc 1 699 5 view .LVU959
 700:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 701:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
 2829              		.loc 1 701 5 view .LVU960
 2830              	.LVL332:
 2831              		.loc 1 701 5 is_stmt 0 view .LVU961
 2832 005a 8B7538   		movl	56(%rbp), %esi
 2833              		.loc 1 701 26 view .LVU962
 2834 005d 488B9D30 		movq	304(%rbp), %rbx
 2834      010000
 2835              	.LVL333:
 2836              		.loc 1 701 46 is_stmt 1 view .LVU963
 2837              		.loc 1 701 5 is_stmt 0 view .LVU964
 2838 0064 85F6     		testl	%esi, %esi
 2839 0066 7E72     		jle	.L222
 2840 0068 4531E4   		xorl	%r12d, %r12d
 2841              	.LVL334:
 2842 006b 0F1F4400 		.p2align 4,,10
 2842      00
 2843              		.p2align 3
 2844              	.L224:
 702:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ci++, compptr++) {
 703:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = compptr->v_samp_factor;
 2845              		.loc 1 703 7 is_stmt 1 view .LVU965
 2846              		.loc 1 703 19 is_stmt 0 view .LVU966
 2847 0070 4863730C 		movslq	12(%rbx), %rsi
 2848              	.LVL335:
 704:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 705:fltk-1.3.4-1/jpeg/jdcoefct.c ****       /* If block smoothing could be used, need a bigger window */
 706:fltk-1.3.4-1/jpeg/jdcoefct.c ****       if (cinfo->progressive_mode)
 2849              		.loc 1 706 7 is_stmt 1 view .LVU967
 2850              		.loc 1 706 10 is_stmt 0 view .LVU968
 2851 0074 8B8D3C01 		movl	316(%rbp), %ecx
 2851      0000
 703:fltk-1.3.4-1/jpeg/jdcoefct.c **** #ifdef BLOCK_SMOOTHING_SUPPORTED
 2852              		.loc 1 703 19 view .LVU969
 2853 007a 4189F1   		movl	%esi, %r9d
 2854              		.loc 1 706 10 view .LVU970
 2855 007d 85C9     		testl	%ecx, %ecx
 2856 007f 7404     		je	.L223
 707:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	access_rows *= 3;
 2857              		.loc 1 707 2 is_stmt 1 view .LVU971
 2858              		.loc 1 707 14 is_stmt 0 view .LVU972
 2859 0081 448D0C76 		leal	(%rsi,%rsi,2), %r9d
 2860              	.LVL336:
 2861              	.L223:
 708:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
 709:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->whole_image[ci] = (*cinfo->mem->request_virt_barray)
 710:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
 711:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 (JDIMENSION) jround_up((long) compptr->width_in_blocks,
 712:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				(long) compptr->h_samp_factor),
 713:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 (JDIMENSION) jround_up((long) compptr->height_in_blocks,
 2862              		.loc 1 713 16 view .LVU973
 2863 0085 8B7B20   		movl	32(%rbx), %edi
 709:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
 2864              		.loc 1 709 32 view .LVU974
 2865 0088 488B4508 		movq	8(%rbp), %rax
 2866 008c 44894C24 		movl	%r9d, 12(%rsp)
 2866      0C
 2867              	.LVL337:
 709:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
 2868              		.loc 1 709 7 is_stmt 1 view .LVU975
 702:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = compptr->v_samp_factor;
 2869              		.loc 1 702 16 is_stmt 0 view .LVU976
 2870 0091 4883C360 		addq	$96, %rbx
 2871              	.LVL338:
 709:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
 2872              		.loc 1 709 32 view .LVU977
 2873 0095 4C8B7028 		movq	40(%rax), %r14
 2874              		.loc 1 713 16 view .LVU978
 2875 0099 E8000000 		call	jround_up@PLT
 2875      00
 2876              	.LVL339:
 711:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				(long) compptr->h_samp_factor),
 2877              		.loc 1 711 16 view .LVU979
 2878 009e 486373A8 		movslq	-88(%rbx), %rsi
 2879 00a2 8B7BBC   		movl	-68(%rbx), %edi
 2880              		.loc 1 713 16 view .LVU980
 2881 00a5 4989C7   		movq	%rax, %r15
 711:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				(long) compptr->h_samp_factor),
 2882              		.loc 1 711 16 view .LVU981
 2883 00a8 E8000000 		call	jround_up@PLT
 2883      00
 2884              	.LVL340:
 709:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
 2885              		.loc 1 709 32 view .LVU982
 2886 00ad 448B4C24 		movl	12(%rsp), %r9d
 2886      0C
 2887 00b2 4589F8   		movl	%r15d, %r8d
 2888 00b5 4889EF   		movq	%rbp, %rdi
 711:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				(long) compptr->h_samp_factor),
 2889              		.loc 1 711 16 view .LVU983
 2890 00b8 4889C1   		movq	%rax, %rcx
 709:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
 2891              		.loc 1 709 32 view .LVU984
 2892 00bb BA010000 		movl	$1, %edx
 2892      00
 2893 00c0 BE010000 		movl	$1, %esi
 2893      00
 2894 00c5 41FFD6   		call	*%r14
 2895              	.LVL341:
 709:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	((j_common_ptr) cinfo, JPOOL_IMAGE, TRUE,
 2896              		.loc 1 709 29 view .LVU985
 2897 00c8 4B8984E5 		movq	%rax, 136(%r13,%r12,8)
 2897      88000000 
 702:fltk-1.3.4-1/jpeg/jdcoefct.c ****       access_rows = compptr->v_samp_factor;
 2898              		.loc 1 702 3 is_stmt 1 view .LVU986
 2899              	.LVL342:
 701:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ci++, compptr++) {
 2900              		.loc 1 701 46 view .LVU987
 2901 00d0 4983C401 		addq	$1, %r12
 2902              	.LVL343:
 701:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 ci++, compptr++) {
 2903              		.loc 1 701 5 is_stmt 0 view .LVU988
 2904 00d4 44396538 		cmpl	%r12d, 56(%rbp)
 2905 00d8 7F96     		jg	.L224
 2906              	.LVL344:
 2907              	.L222:
 714:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				(long) compptr->v_samp_factor),
 715:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	 (JDIMENSION) access_rows);
 716:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 717:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.consume_data = consume_data;
 2908              		.loc 1 717 5 is_stmt 1 view .LVU989
 2909              		.loc 1 717 28 is_stmt 0 view .LVU990
 2910 00da 488D0500 		leaq	consume_data(%rip), %rax
 2910      000000
 2911 00e1 49894508 		movq	%rax, 8(%r13)
 718:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.decompress_data = decompress_data;
 2912              		.loc 1 718 5 is_stmt 1 view .LVU991
 2913              		.loc 1 718 31 is_stmt 0 view .LVU992
 2914 00e5 488D0500 		leaq	decompress_data(%rip), %rax
 2914      000000
 2915 00ec 49894518 		movq	%rax, 24(%r13)
 719:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.coef_arrays = coef->whole_image; /* link to virtual arrays */
 2916              		.loc 1 719 5 is_stmt 1 view .LVU993
 2917              		.loc 1 719 29 is_stmt 0 view .LVU994
 2918 00f0 498D8588 		leaq	136(%r13), %rax
 2918      000000
 2919 00f7 49894520 		movq	%rax, 32(%r13)
 2920              	.LBE45:
 720:fltk-1.3.4-1/jpeg/jdcoefct.c **** #else
 721:fltk-1.3.4-1/jpeg/jdcoefct.c ****     ERREXIT(cinfo, JERR_NOT_COMPILED);
 722:fltk-1.3.4-1/jpeg/jdcoefct.c **** #endif
 723:fltk-1.3.4-1/jpeg/jdcoefct.c ****   } else {
 724:fltk-1.3.4-1/jpeg/jdcoefct.c ****     /* We only need a single-MCU buffer. */
 725:fltk-1.3.4-1/jpeg/jdcoefct.c ****     JBLOCKROW buffer;
 726:fltk-1.3.4-1/jpeg/jdcoefct.c ****     int i;
 727:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 728:fltk-1.3.4-1/jpeg/jdcoefct.c ****     buffer = (JBLOCKROW)
 729:fltk-1.3.4-1/jpeg/jdcoefct.c ****       (*cinfo->mem->alloc_large) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 730:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				  D_MAX_BLOCKS_IN_MCU * SIZEOF(JBLOCK));
 731:fltk-1.3.4-1/jpeg/jdcoefct.c ****     for (i = 0; i < D_MAX_BLOCKS_IN_MCU; i++) {
 732:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 733:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 734:fltk-1.3.4-1/jpeg/jdcoefct.c ****     if (cinfo->lim_Se == 0)	/* DC only case: want to bypass later */
 735:fltk-1.3.4-1/jpeg/jdcoefct.c ****       FMEMZERO((void FAR *) buffer,
 736:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	       (size_t) (D_MAX_BLOCKS_IN_MCU * SIZEOF(JBLOCK)));
 737:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.consume_data = dummy_consume_data;
 738:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.decompress_data = decompress_onepass;
 739:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.coef_arrays = NULL; /* flag for no virtual arrays */
 740:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 741:fltk-1.3.4-1/jpeg/jdcoefct.c **** }
 2921              		.loc 1 741 1 view .LVU995
 2922 00fb 4883C418 		addq	$24, %rsp
 2923              		.cfi_remember_state
 2924              		.cfi_def_cfa_offset 56
 2925 00ff 5B       		popq	%rbx
 2926              		.cfi_def_cfa_offset 48
 2927              	.LVL345:
 2928              		.loc 1 741 1 view .LVU996
 2929 0100 5D       		popq	%rbp
 2930              		.cfi_def_cfa_offset 40
 2931              	.LVL346:
 2932              		.loc 1 741 1 view .LVU997
 2933 0101 415C     		popq	%r12
 2934              		.cfi_def_cfa_offset 32
 2935 0103 415D     		popq	%r13
 2936              		.cfi_def_cfa_offset 24
 2937              	.LVL347:
 2938              		.loc 1 741 1 view .LVU998
 2939 0105 415E     		popq	%r14
 2940              		.cfi_def_cfa_offset 16
 2941 0107 415F     		popq	%r15
 2942              		.cfi_def_cfa_offset 8
 2943 0109 C3       		ret
 2944              	.LVL348:
 2945 010a 660F1F44 		.p2align 4,,10
 2945      0000
 2946              		.p2align 3
 2947              	.L221:
 2948              		.cfi_restore_state
 2949              	.LBB46:
 725:fltk-1.3.4-1/jpeg/jdcoefct.c ****     int i;
 2950              		.loc 1 725 5 is_stmt 1 view .LVU999
 726:fltk-1.3.4-1/jpeg/jdcoefct.c **** 
 2951              		.loc 1 726 5 view .LVU1000
 728:fltk-1.3.4-1/jpeg/jdcoefct.c ****       (*cinfo->mem->alloc_large) ((j_common_ptr) cinfo, JPOOL_IMAGE,
 2952              		.loc 1 728 5 view .LVU1001
 729:fltk-1.3.4-1/jpeg/jdcoefct.c **** 				  D_MAX_BLOCKS_IN_MCU * SIZEOF(JBLOCK));
 2953              		.loc 1 729 8 is_stmt 0 view .LVU1002
 2954 0110 488B4508 		movq	8(%rbp), %rax
 2955 0114 BA000500 		movl	$1280, %edx
 2955      00
 2956 0119 BE010000 		movl	$1, %esi
 2956      00
 2957 011e 4889EF   		movq	%rbp, %rdi
 2958 0121 FF5008   		call	*8(%rax)
 2959              	.LVL349:
 731:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 2960              		.loc 1 731 5 is_stmt 1 view .LVU1003
 731:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 2961              		.loc 1 731 17 view .LVU1004
 2962 0124 498D4D38 		leaq	56(%r13), %rcx
 2963 0128 4889C2   		movq	%rax, %rdx
 2964 012b 488DB000 		leaq	1280(%rax), %rsi
 2964      050000
 2965              	.LVL350:
 2966              		.p2align 4,,10
 2967 0132 660F1F44 		.p2align 3
 2967      0000
 2968              	.L226:
 732:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 2969              		.loc 1 732 7 discriminator 3 view .LVU1005
 732:fltk-1.3.4-1/jpeg/jdcoefct.c ****     }
 2970              		.loc 1 732 27 is_stmt 0 discriminator 3 view .LVU1006
 2971 0138 488911   		movq	%rdx, (%rcx)
 731:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 2972              		.loc 1 731 42 is_stmt 1 discriminator 3 view .LVU1007
 731:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 2973              		.loc 1 731 17 discriminator 3 view .LVU1008
 2974 013b 4883EA80 		subq	$-128, %rdx
 2975 013f 4883C108 		addq	$8, %rcx
 731:fltk-1.3.4-1/jpeg/jdcoefct.c ****       coef->MCU_buffer[i] = buffer + i;
 2976              		.loc 1 731 5 is_stmt 0 discriminator 3 view .LVU1009
 2977 0143 4839F2   		cmpq	%rsi, %rdx
 2978 0146 75F0     		jne	.L226
 734:fltk-1.3.4-1/jpeg/jdcoefct.c ****       FMEMZERO((void FAR *) buffer,
 2979              		.loc 1 734 5 is_stmt 1 view .LVU1010
 734:fltk-1.3.4-1/jpeg/jdcoefct.c ****       FMEMZERO((void FAR *) buffer,
 2980              		.loc 1 734 8 is_stmt 0 view .LVU1011
 2981 0148 8B953802 		movl	568(%rbp), %edx
 2981      0000
 2982 014e 85D2     		testl	%edx, %edx
 2983 0150 742E     		je	.L232
 2984              	.LVL351:
 2985              	.L227:
 737:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.decompress_data = decompress_onepass;
 2986              		.loc 1 737 5 is_stmt 1 view .LVU1012
 737:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.decompress_data = decompress_onepass;
 2987              		.loc 1 737 28 is_stmt 0 view .LVU1013
 2988 0152 488D0500 		leaq	dummy_consume_data(%rip), %rax
 2988      000000
 739:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2989              		.loc 1 739 27 view .LVU1014
 2990 0159 49C74520 		movq	$0, 32(%r13)
 2990      00000000 
 737:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.decompress_data = decompress_onepass;
 2991              		.loc 1 737 28 view .LVU1015
 2992 0161 49894508 		movq	%rax, 8(%r13)
 738:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.coef_arrays = NULL; /* flag for no virtual arrays */
 2993              		.loc 1 738 5 is_stmt 1 view .LVU1016
 738:fltk-1.3.4-1/jpeg/jdcoefct.c ****     coef->pub.coef_arrays = NULL; /* flag for no virtual arrays */
 2994              		.loc 1 738 31 is_stmt 0 view .LVU1017
 2995 0165 488D0500 		leaq	decompress_onepass(%rip), %rax
 2995      000000
 2996 016c 49894518 		movq	%rax, 24(%r13)
 739:fltk-1.3.4-1/jpeg/jdcoefct.c ****   }
 2997              		.loc 1 739 5 is_stmt 1 view .LVU1018
 2998              	.LBE46:
 2999              		.loc 1 741 1 is_stmt 0 view .LVU1019
 3000 0170 4883C418 		addq	$24, %rsp
 3001              		.cfi_remember_state
 3002              		.cfi_def_cfa_offset 56
 3003 0174 5B       		popq	%rbx
 3004              		.cfi_def_cfa_offset 48
 3005              	.LVL352:
 3006              		.loc 1 741 1 view .LVU1020
 3007 0175 5D       		popq	%rbp
 3008              		.cfi_def_cfa_offset 40
 3009              	.LVL353:
 3010              		.loc 1 741 1 view .LVU1021
 3011 0176 415C     		popq	%r12
 3012              		.cfi_def_cfa_offset 32
 3013 0178 415D     		popq	%r13
 3014              		.cfi_def_cfa_offset 24
 3015              	.LVL354:
 3016              		.loc 1 741 1 view .LVU1022
 3017 017a 415E     		popq	%r14
 3018              		.cfi_def_cfa_offset 16
 3019 017c 415F     		popq	%r15
 3020              		.cfi_def_cfa_offset 8
 3021 017e C3       		ret
 3022              	.LVL355:
 3023 017f 90       		.p2align 4,,10
 3024              		.p2align 3
 3025              	.L232:
 3026              		.cfi_restore_state
 3027              	.LBB49:
 735:fltk-1.3.4-1/jpeg/jdcoefct.c **** 	       (size_t) (D_MAX_BLOCKS_IN_MCU * SIZEOF(JBLOCK)));
 3028              		.loc 1 735 7 is_stmt 1 view .LVU1023
 3029              	.LBB47:
 3030              	.LBI47:
  59:/usr/include/x86_64-linux-gnu/bits/string_fortified.h **** {
 3031              		.loc 2 59 1 view .LVU1024
 3032              	.LBB48:
 3033              		.loc 2 71 3 view .LVU1025
 3034              		.loc 2 71 10 is_stmt 0 view .LVU1026
 3035 0180 488D7808 		leaq	8(%rax), %rdi
 3036 0184 48C70000 		movq	$0, (%rax)
 3036      000000
 3037 018b 48C780F8 		movq	$0, 1272(%rax)
 3037      04000000 
 3037      000000
 3038 0196 4883E7F8 		andq	$-8, %rdi
 3039 019a 4829F8   		subq	%rdi, %rax
 3040              	.LVL356:
 3041              		.loc 2 71 10 view .LVU1027
 3042 019d 8D880005 		leal	1280(%rax), %ecx
 3042      0000
 3043 01a3 31C0     		xorl	%eax, %eax
 3044 01a5 C1E903   		shrl	$3, %ecx
 3045 01a8 F348AB   		rep stosq
 3046 01ab EBA5     		jmp	.L227
 3047              	.LBE48:
 3048              	.LBE47:
 3049              	.LBE49:
 3050              		.cfi_endproc
 3051              	.LFE60:
 3053              		.text
 3054              	.Letext0:
 3055              		.file 3 "/usr/lib/gcc/x86_64-linux-gnu/9/include/stddef.h"
 3056              		.file 4 "/usr/include/x86_64-linux-gnu/bits/types.h"
 3057              		.file 5 "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h"
 3058              		.file 6 "/usr/include/x86_64-linux-gnu/bits/types/FILE.h"
 3059              		.file 7 "/usr/include/stdio.h"
 3060              		.file 8 "/usr/include/x86_64-linux-gnu/bits/sys_errlist.h"
 3061              		.file 9 "fltk-1.3.4-1/jpeg/jmorecfg.h"
 3062              		.file 10 "fltk-1.3.4-1/jpeg/jpeglib.h"
 3063              		.file 11 "fltk-1.3.4-1/jpeg/jpegint.h"
 3064              		.file 12 "<built-in>"
 19449              		.section	.note.gnu.property,"a"
 19450              		.align 8
 19451 0000 04000000 		.long	 1f - 0f
 19452 0004 10000000 		.long	 4f - 1f
 19453 0008 05000000 		.long	 5
 19454              	0:
 19455 000c 474E5500 		.string	 "GNU"
 19456              	1:
 19457              		.align 8
 19458 0010 020000C0 		.long	 0xc0000002
 19459 0014 04000000 		.long	 3f - 2f
 19460              	2:
 19461 0018 03000000 		.long	 0x3
 19462              	3:
 19463 001c 00000000 		.align 8
 19464              	4:
DEFINED SYMBOLS
                            *ABS*:0000000000000000 jdcoefct.c
     /tmp/ccv5cRtN.s:7      .text.start_input_pass:0000000000000000 start_input_pass
     /tmp/ccv5cRtN.s:102    .text.dummy_consume_data:0000000000000000 dummy_consume_data
     /tmp/ccv5cRtN.s:119    .text.consume_data:0000000000000000 consume_data
     /tmp/ccv5cRtN.s:498    .text.decompress_data:0000000000000000 decompress_data
     /tmp/ccv5cRtN.s:835    .text.start_output_pass:0000000000000000 start_output_pass
     /tmp/ccv5cRtN.s:1060   .text.decompress_smooth_data:0000000000000000 decompress_smooth_data
     /tmp/ccv5cRtN.s:2255   .text.decompress_onepass:0000000000000000 decompress_onepass
     /tmp/ccv5cRtN.s:2760   .text.jinit_d_coef_controller:0000000000000000 jinit_d_coef_controller
                           .group:0000000000000000 wm4.0.a6b23a418548ac0bda5d8549c4a2ec91
                           .group:0000000000000000 wm4.stdcpredef.h.19.8dc41bed5d9037ff9622e015fb5f0ce3
                           .group:0000000000000000 wm4.jconfig.h.10.247fc3ff67998f3074970b1373c70333
                           .group:0000000000000000 wm4.features.h.19.5b5f5a19624a0527f479fdc52d54808f
                           .group:0000000000000000 wm4.cdefs.h.19.98d80eddbb3f64f4f30cd9aee9c5593c
                           .group:0000000000000000 wm4.wordsize.h.4.baf119258a1e53d8dba67ceac44ab6bc
                           .group:0000000000000000 wm4.cdefs.h.475.fb75d2e4416aa349344e6f45f683bf28
                           .group:0000000000000000 wm4.stubs64.h.10.6ce4c34010988db072c080326a6b6319
                           .group:0000000000000000 wm4.libcheaderstart.h.37.d9274df4cc0172452960ad9644fa5579
                           .group:0000000000000000 wm4.stdlib.h.28.2cffa49d94c5d85f4538f55f7b59771d
                           .group:0000000000000000 wm4.stddef.h.181.13772e73e5434e8cc4fafaaddad2b5da
                           .group:0000000000000000 wm4.waitflags.h.25.41934de4af99038521c2782f418699b1
                           .group:0000000000000000 wm4.waitstatus.h.28.93f167f49d64e2b9b99f98d1162a93bf
                           .group:0000000000000000 wm4.stdlib.h.43.9fa4f727a2f1cb8d2450a574c9195553
                           .group:0000000000000000 wm4.floatn.h.20.80c7cf8a8dfad237004b28d051d5afda
                           .group:0000000000000000 wm4.floatncommon.h.34.7e1840d7dfb19e9bdb51aeb077d76637
                           .group:0000000000000000 wm4.stdlib.h.71.2927e068ec678159b4f68ec2f089f7e6
                           .group:0000000000000000 wm4.types.h.109.56eb9ae966b255288cc544f18746a7ff
                           .group:0000000000000000 wm4.typesizes.h.24.2c64f817c0dc4b6fb2a2c619d717be26
                           .group:0000000000000000 wm4.time64.h.24.a8166ae916ec910dab0d8987098d42ee
                           .group:0000000000000000 wm4.types.h.40.18f72bab8242c2bb4c532a2aa95b5f00
                           .group:0000000000000000 wm4.stddef.h.231.0adce5c8c1fd8096aaff50981b3d1f0f
                           .group:0000000000000000 wm4.endian.h.20.efabd1018df5d7b4052c27dc6bdd5ce5
                           .group:0000000000000000 wm4.endianness.h.2.2c6a211f7909f3af5e9e9cfa3b6b63c8
                           .group:0000000000000000 wm4.endian.h.40.9e5d395adda2f4eb53ae69b69b664084
                           .group:0000000000000000 wm4.endian.h.27.4c4f94262c4eaee2982fe00ed1b4f173
                           .group:0000000000000000 wm4.byteswap.h.24.5363c019348146aada5aeadf51456576
                           .group:0000000000000000 wm4.endian.h.39.30a606dbd99b6c3df61c1f06dbdabd4e
                           .group:0000000000000000 wm4.select.h.28.eb2f3debdbcffd1442ebddaebc4fb6ff
                           .group:0000000000000000 wm4.__sigset_t.h.2.6b1ab6ff3d7b8fd9c0c42b0d80afbd80
                           .group:0000000000000000 wm4.select.h.44.887a4ff60aa97fcd9c1be017735e1675
                           .group:0000000000000000 wm4.select2.h.27.f95f2ab0ffee66dc1b6575014894b21a
                           .group:0000000000000000 wm4.types.h.186.489a4ed8f2d29cd358843490f54ddea5
                           .group:0000000000000000 wm4.pthreadtypesarch.h.25.6063cba99664c916e22d3a912bcc348a
                           .group:0000000000000000 wm4.struct_mutex.h.20.ed51f515172b9be99e450ba83eb5dd99
                           .group:0000000000000000 wm4.struct_rwlock.h.21.0254880f2904e3833fb8ae683e0f0330
                           .group:0000000000000000 wm4.alloca.h.19.edefa922a76c1cbaaf1e416903ba2d1c
                           .group:0000000000000000 wm4.alloca.h.29.156e12058824cc23d961c4d3b13031f6
                           .group:0000000000000000 wm4.stdio.h.24.5c1b97eef3c86b7a2549420f69f4f128
                           .group:0000000000000000 wm4.libcheaderstart.h.31.87b3c285aeba93fe355ad19123070832
                           .group:0000000000000000 wm4.stdio.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.stddef.h.231.8136eebbab3406dbf57a7ec475dd5d83
                           .group:0000000000000000 wm4.stdarg.h.34.3a23a216c0c293b3d2ea2e89281481e6
                           .group:0000000000000000 wm4.struct_FILE.h.19.0888ac70396abe1031c03d393554032f
                           .group:0000000000000000 wm4.stdio.h.53.139e45cf040c0964b2932c0c1bdaf6b2
                           .group:0000000000000000 wm4.stdio_lim.h.19.e4b00b560d878dcfbc6635b3406640c5
                           .group:0000000000000000 wm4.stdio.h.141.d7a290e19ca077c9e4aa7c43ede17a73
                           .group:0000000000000000 wm4.stdio.h.20.b0caa08e5723aa5941367be0e5d2ec59
                           .group:0000000000000000 wm4.stdio2.h.20.f45a0373b68e1296c4aa8cc09d66a9df
                           .group:0000000000000000 wm4.string.h.23.93403f89af7dba8212345449bb14b09d
                           .group:0000000000000000 wm4.string.h.31.e39a94e203ad4e1d978c0fc68ce016ee
                           .group:0000000000000000 wm4.strings.h.19.a259f126920b1bb5ef76bc62b3984a3c
                           .group:0000000000000000 wm4.jinclude.h.67.b19f941ec97c4845fa4609292c7e2db4
                           .group:0000000000000000 wm4.jmorecfg.h.33.3b4c5f9cc07b3737823b06caf24d5b05
                           .group:0000000000000000 wm4.jpeglib.h.40.4f111c27252a38df39328d65454e82f4
                           .group:0000000000000000 wm4.jpegint.h.26.5219ef5d4e4921371d38e77b6091fd20
                           .group:0000000000000000 wm4.jerror.h.25.1dbd8674e70ab5215bc0037320e5c2a2

UNDEFINED SYMBOLS
_GLOBAL_OFFSET_TABLE_
__stack_chk_fail
jcopy_block_row
memset
jround_up
